
ca259879ebf590bfe210f756da26dd66108fbee30b93bedeaf586703489461d1.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	repnz mov ds:0x2ddf20c2,al
  411006:	dec    ecx
  411007:	icebp  
  411008:	shl    edi,0x8e
  41100b:	mov    ch,BYTE PTR [ebx]
  41100d:	jb     0x410fe9
  41100f:	pushf  
  411010:	pop    ds
  411011:	bound  ebp,QWORD PTR [edx-0x20]
  411014:	stos   DWORD PTR es:[edi],eax
  411015:	repz mov ch,0xdf
  411018:	xor    ebx,DWORD PTR [eax]
  41101a:	add    eax,0xb7d6d29a
  41101f:	fadd   DWORD PTR [esi]
  411021:	out    0x22,eax
  411023:	sbb    DWORD PTR [ebp+0x3],ebp
  411026:	xchg   ebx,eax
  411027:	dec    esp
  411028:	pop    eax
  411029:	sbb    BYTE PTR [ebx+0x6],0xbe
  41102d:	popa   
  41102e:	(bad)  
  41102f:	in     eax,0x40
  411031:	pusha  
  411032:	je     0x411013
  411034:	jmp    DWORD PTR [ebx-0x33107a16]
  41103a:	rcr    BYTE PTR [edx-0x48],1
  41103d:	mov    cl,0xcf
  41103f:	pop    ecx
  411040:	out    0xcc,al
  411042:	iret   
  411043:	test   BYTE PTR [edx+0x1e],0x50
  411047:	clc    
  411048:	or     BYTE PTR [eax],al
  41104a:	cmp    DWORD PTR ds:0x532bbead,edx
  411050:	pop    ds
  411051:	mov    WORD PTR [edi],ss
  411053:	mov    ch,0x9b
  411055:	adc    edx,DWORD PTR [ebp-0x2e49bb0d]
  41105b:	add    DWORD PTR [eax-0x78d8e9eb],esp
  411061:	bnd jp 0x41105b
  411064:	xlat   BYTE PTR ds:[ebx]
  411065:	retf   0x3c37
  411068:	mov    BYTE PTR [ecx-0x258ee068],ch
  41106e:	or     eax,0x2f7560c3
  411073:	xor    al,0xdb
  411075:	adc    esp,edi
  411077:	dec    ebx
  411078:	pop    ebx
  411079:	lods   al,BYTE PTR ds:[esi]
  41107a:	cmc    
  41107b:	popf   
  41107c:	mov    eax,0x96153928
  411081:	das    
  411082:	fimul  WORD PTR ds:0xf31f3527
  411088:	mov    edx,0x1d9988a5
  41108d:	jns    0x411109
  41108f:	(bad)  
  411090:	aam    0xe6
  411092:	inc    esp
  411093:	jo     0x41103f
  411095:	pop    ecx
  411096:	mov    ebx,0x79516500
  41109b:	test   DWORD PTR [eax+ebp*1+0x2dbc874b],esp
  4110a2:	push   ebp
  4110a3:	push   0x16
  4110a5:	jns    0x4110cb
  4110a7:	push   0xfc658e48
  4110ac:	push   es
  4110ad:	push   es
  4110ae:	outs   dx,BYTE PTR ds:[esi]
  4110af:	cmp    DWORD PTR [edi],esi
  4110b1:	ins    DWORD PTR es:[edi],dx
  4110b2:	and    ebp,DWORD PTR [eax-0x7dd1e7dd]
  4110b8:	pop    bx
  4110ba:	add    eax,0x715f30e2
  4110bf:	test   DWORD PTR ds:0x6b60e5dc,edi
  4110c5:	sub    al,0xf8
  4110c7:	pop    ebx
  4110c8:	inc    edi
  4110c9:	pop    edx
  4110ca:	add    al,0x35
  4110cc:	inc    ebx
  4110cd:	mov    bl,0x7e
  4110cf:	mov    cs,ebx
  4110d1:	cwde   
  4110d2:	out    dx,al
  4110d3:	and    bl,BYTE PTR [eax+0x51b0df9d]
  4110d9:	mov    al,BYTE PTR [ebx+0x189dbb8a]
  4110df:	push   edx
  4110e0:	sub    al,0x58
  4110e2:	aam    0x70
  4110e4:	es cmp al,0x6b
  4110e7:	daa    
  4110e8:	add    al,0xdc
  4110ea:	and    bh,BYTE PTR [ecx]
  4110ec:	aam    0x4c
  4110ee:	cli    
  4110ef:	cmp    al,0x35
  4110f1:	clc    
  4110f2:	int    0x5c
  4110f4:	xor    cl,BYTE PTR [esi-0x23]
  4110f7:	add    dh,BYTE PTR [ebp+0x6d]
  4110fa:	cmp    ch,BYTE PTR [esi+eax*4-0x21f779d2]
  411101:	aam    0xea
  411103:	(bad)
  411106:	je     0x4110d3
  411108:	mov    dh,0x6b
  41110a:	dec    ebp
  41110b:	aas    
  41110c:	sbb    eax,0x728f5c73
  411111:	idiv   BYTE PTR [edx]
  411113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411114:	push   0xe4c64b55
  411119:	pop    eax
  41111a:	sbb    al,0x29
  41111c:	lock mov ebp,0x9e54a5a3
  411122:	mov    bh,0xc8
  411124:	int3   
  411125:	es popf 
  411127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411128:	scas   eax,DWORD PTR es:[edi]
  411129:	jp     0x4110ce
  41112b:	ret    0x49d1
  41112e:	xchg   ebp,eax
  41112f:	and    al,0x88
  411131:	test   eax,0x6ec0021e
  411136:	push   eax
  411137:	adc    eax,0x4e262373
  41113c:	push   cs
  41113d:	adc    DWORD PTR [edi+0x27],ebp
  411140:	sbb    BYTE PTR [esi+0x4d],dh
  411143:	loop   0x41114b
  411145:	leave  
  411146:	mov    esi,0x2f1e16fa
  41114b:	add    BYTE PTR [ebp-0x3305e0d4],al
  411151:	fldcw  WORD PTR [eax+ebx*1]
  411154:	ins    DWORD PTR es:[edi],dx
  411155:	mov    ch,0x46
  411157:	or     ebp,edx
  411159:	imul   esi,esp,0xe77c47e1
  41115f:	xchg   edi,eax
  411160:	aad    0x1a
  411162:	clc    
  411163:	sbb    BYTE PTR ds:0x66366d02,0x7e
  41116a:	and    DWORD PTR [edi+eax*1],ebx
  41116d:	fcom   QWORD PTR [edi-0x42]
  411170:	inc    ecx
  411171:	retf   0xd247
  411174:	mov    ds:0x2182f0e8,al
  411179:	scas   al,BYTE PTR es:[edi]
  41117a:	jne    0x411140
  41117c:	or     eax,ecx
  41117e:	add    al,cl
  411180:	arpl   WORD PTR ds:0xae40c4a1,si
  411186:	lock shl DWORD PTR [esi+0x4fcb0d06],1
  41118d:	inc    esi
  41118e:	jle    0x411199
  411190:	arpl   sp,cx
  411192:	stos   BYTE PTR es:[edi],al
  411193:	rol    ch,1
  411195:	push   ds
  411196:	mov    edi,0x9e464d17
  41119b:	adc    BYTE PTR [ebp-0x60],0x3e
  41119f:	ficomp DWORD PTR [edx+eiz*2-0x1f688c09]
  4111a6:	inc    esp
  4111a7:	adc    al,0x7e
  4111a9:	daa    
  4111aa:	inc    edx
  4111ab:	test   ebp,edi
  4111ad:	aad    0x32
  4111af:	call   0x235ab867
  4111b4:	pop    esp
  4111b5:	fisttp WORD PTR [esi+0x104c693a]
  4111bb:	dec    esi
  4111bc:	ror    ah,0xe7
  4111bf:	repz inc edi
  4111c1:	cmp    esp,edx
  4111c3:	sbb    ebx,ecx
  4111c5:	sub    ebp,DWORD PTR [eax-0x52]
  4111c8:	pop    edx
  4111c9:	(bad)  
  4111ca:	stos   DWORD PTR es:[edi],eax
  4111cb:	call   0x4e9b:0xf6abc0ce
  4111d2:	mov    edx,0xc19ef527
  4111d7:	mov    bh,al
  4111d9:	(bad)  
  4111da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111db:	or     al,0x4d
  4111dd:	jne    0x411251
  4111df:	xchg   ebx,eax
  4111e0:	in     al,dx
  4111e1:	add    dl,BYTE PTR [edx+ecx*2-0x127ed43c]
  4111e8:	inc    esp
  4111e9:	imul   edx,DWORD PTR [esp+edi*4+0x483accf1],0x491c270d
  4111f4:	xchg   edi,eax
  4111f5:	cmp    eax,0x1e753d32
  4111fa:	push   ebp
  4111fb:	inc    ebp
  4111fc:	scas   al,BYTE PTR es:[edi]
  4111fd:	sbb    eax,0x2cad173d
  411202:	ss out 0xdc,al
  411205:	ret    0xedb3
  411208:	sub    cl,ch
  41120a:	enter  0xff78,0x3b
  41120e:	jne    0x4111bc
  411210:	ins    DWORD PTR es:[edi],dx
  411211:	push   es
  411212:	test   eax,0x71e618dd
  411217:	outs   dx,DWORD PTR ds:[esi]
  411218:	fst    DWORD PTR [edx+0x2a]
  41121b:	gs pop ebx
  41121d:	add    eax,0x3b9222d8
  411222:	loope  0x411231
  411224:	aaa    
  411225:	and    BYTE PTR [edi+0x4257d56c],cl
  41122b:	jnp    0x411261
  41122d:	push   ecx
  41122e:	xor    BYTE PTR [edx+0x4c],bl
  411231:	stos   DWORD PTR es:[edi],eax
  411232:	inc    esi
  411233:	les    edi,FWORD PTR [ecx-0x33]
  411236:	adc    BYTE PTR [edi+ecx*8+0x4e],bh
  41123a:	out    0xab,al
  41123c:	cdq    
  41123d:	pop    ss
  41123e:	scas   eax,DWORD PTR es:[edi]
  41123f:	pop    esp
  411240:	mov    dh,0x42
  411242:	(bad)
  411246:	cmp    eax,DWORD PTR [edi+esi*8-0x16f3f5d3]
  41124d:	int3   
  41124e:	in     eax,0xbd
  411250:	pop    edx
  411251:	mov    ?,ebp
  411253:	mov    ah,BYTE PTR [esi+0x13]
  411256:	and    eax,0xae48e63a
  41125b:	push   edx
  41125c:	sub    dh,bl
  41125e:	test   BYTE PTR [ecx+0x38],bl
  411261:	adc    al,0x89
  411263:	mov    ebp,0x87d9c885
  411268:	mov    eax,0x98c105a3
  41126d:	cmc    
  41126e:	pop    ds
  41126f:	imul   ecx,DWORD PTR [edi-0x7d8afbf8],0x4c
  411276:	loop   0x4112e3
  411278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411279:	cwde   
  41127a:	push   es
  41127b:	mov    ah,0x8a
  41127d:	dec    ecx
  41127e:	scas   eax,DWORD PTR es:[edi]
  41127f:	stc    
  411280:	(bad)  
  411281:	cli    
  411282:	add    DWORD PTR [ebx-0x1c],eax
  411285:	outs   dx,BYTE PTR ds:[esi]
  411286:	mov    al,0x7d
  411288:	sub    DWORD PTR [eax],esp
  41128a:	cdq    
  41128b:	add    BYTE PTR [ecx],0x64
  41128e:	(bad)  
  41128f:	mov    ds:0x641d51e1,al
  411294:	and    DWORD PTR [ebx-0x6be73749],ecx
  41129a:	sub    eax,0xaf54a4a9
  41129f:	mov    edx,0x2a5b4217
  4112a4:	xor    ah,dh
  4112a6:	jl     0x4112ae
  4112a8:	cmp    bl,bl
  4112aa:	loopne 0x41125c
  4112ac:	pop    ds
  4112ad:	das    
  4112ae:	les    ebp,FWORD PTR ss:[edx-0x30]
  4112b2:	enter  0xfea7,0x7f
  4112b6:	add    bl,BYTE PTR ds:0xb9c710c6
  4112bc:	jge    0x41123f
  4112be:	repz (bad)
  4112c1:	arpl   WORD PTR [esi-0x22],bx
  4112c4:	lahf   
  4112c5:	rcr    ah,0x8f
  4112c8:	pop    ds
  4112c9:	jecxz  0x41128d
  4112cb:	(bad)  
  4112cc:	rcr    BYTE PTR [ebx-0x51],1
  4112cf:	lods   eax,DWORD PTR ds:[esi]
  4112d0:	push   esi
  4112d1:	bound  eax,QWORD PTR [ebx]
  4112d3:	cmp    eax,0xd21f4db2
  4112d8:	and    eax,esp
  4112da:	(bad)  
  4112db:	repz xchg esi,eax
  4112dd:	push   edx
  4112de:	outs   dx,BYTE PTR ds:[esi]
  4112df:	inc    edi
  4112e0:	cmc    
  4112e1:	inc    eax
  4112e2:	ficom  WORD PTR [ebp+0x44]
  4112e5:	div    BYTE PTR [eax-0x2b10323d]
  4112eb:	xchg   esp,eax
  4112ec:	mov    ds:0xbc3f4ab7,eax
  4112f1:	mov    eax,0xb0870be4
  4112f6:	mov    cl,0xc2
  4112f8:	cmp    BYTE PTR [eax-0x17bb5f6],al
  4112fe:	mov    dl,0x9c
  411300:	imul   ebx,DWORD PTR [eax],0x4d67e7dd
  411306:	and    al,0x84
  411308:	(bad)  
  411309:	dec    eax
  41130a:	push   esp
  41130b:	sub    ebp,ecx
  41130d:	mov    ebx,0x87b352cc
  411312:	mov    DWORD PTR [ecx],esi
  411314:	mov    esp,DWORD PTR [ecx-0x42e8e1e1]
  41131a:	shl    DWORD PTR [ecx+0x66],1
  41131d:	retf   0x2005
  411320:	nop
  411321:	push   ds
  411322:	retf   
  411323:	mov    ds:0x12f01892,al
  411328:	scas   al,BYTE PTR es:[edi]
  411329:	cmc    
  41132a:	(bad)  
  41132b:	mov    esi,0xffe96b57
  411330:	fidiv  DWORD PTR [esi+0x92551e6]
  411336:	call   0x21d1:0x1f68823c
  41133d:	pusha  
  41133e:	pop    esi
  41133f:	shr    BYTE PTR [edx-0x47],0x4
  411343:	push   esi
  411344:	push   edi
  411345:	pop    ss
  411346:	in     eax,dx
  411347:	pop    di
  411349:	fdivr  QWORD PTR [eax+0x7a1c2b60]
  41134f:	pop    ebp
  411350:	add    BYTE PTR [eax-0x59],0x89
  411354:	fs stos DWORD PTR es:[edi],eax
  411356:	push   esp
  411357:	(bad)  
  411358:	push   edx
  411359:	cmp    DWORD PTR [eax+eiz*8],esp
  41135c:	inc    edi
  41135d:	loope  0x411315
  41135f:	retf   
  411360:	cmp    eax,0x6a710ef1
  411365:	lods   eax,DWORD PTR ds:[esi]
  411366:	jl     0x411381
  411368:	call   0x186b2e79
  41136d:	sbb    DWORD PTR [edx+eax*2+0x5915564a],0xffffffc1
  411375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411376:	mov    BYTE PTR [eax+eax*8-0x15],0x9
  41137b:	mov    esp,0x9378b1a8
  411380:	add    ecx,0xcca95c65
  411386:	push   es
  411387:	push   ds
  411388:	or     al,0x0
  41138a:	push   es
  41138b:	inc    ecx
  41138c:	daa    
  41138d:	mov    esi,0x7aeaf078
  411392:	or     BYTE PTR ds:[ecx-0x753f05dc],bl
  411399:	cmp    eax,DWORD PTR [ebp+0x20e677a7]
  41139f:	loope  0x411384
  4113a1:	and    bh,BYTE PTR [ebx]
  4113a3:	pop    edx
  4113a4:	push   cs
  4113a5:	ds daa 
  4113a7:	jae    0x41135d
  4113a9:	jge    0x4113c8
  4113ab:	mov    ds:0xf3c0ddf9,eax
  4113b0:	test   eax,edi
  4113b2:	push   ebp
  4113b3:	adc    esp,DWORD PTR [ebx+0x2556878]
  4113b9:	imul   esi,DWORD PTR [esi+0x182ca8b8],0x793daa52
  4113c3:	pushf  
  4113c4:	mul    DWORD PTR [esi+ecx*2-0xedef149]
  4113cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113cc:	push   ecx
  4113cd:	loopne 0x4113ac
  4113cf:	push   esi
  4113d0:	mov    ecx,cs
  4113d2:	es fcmovnbe st,st(3)
  4113d5:	or     DWORD PTR [edx],esi
  4113d7:	pop    ebx
  4113d8:	je     0x41138b
  4113da:	ins    DWORD PTR es:[edi],dx
  4113db:	and    dl,BYTE PTR [edx-0x258f0f1c]
  4113e1:	or     eax,0xd2f780cf
  4113e6:	dec    edx
  4113e7:	pop    esi
  4113e8:	ret    0x88ba
  4113eb:	add    ebp,DWORD PTR [esi+0x7d]
  4113ee:	xor    al,0x98
  4113f0:	fwait
  4113f1:	in     eax,dx
  4113f2:	hlt    
  4113f3:	xchg   esp,eax
  4113f4:	jae    0x411415
  4113f6:	imul   ecx,DWORD PTR [ebp+0x71],0xffffffe5
  4113fa:	jg     0x41142a
  4113fc:	jbe    0x4113fa
  4113fe:	xlat   BYTE PTR ds:[ebx]
  4113ff:	fisttp QWORD PTR [eax]
  411401:	xor    eax,0x6e5262dd
  411406:	and    eax,0x1beb667d
  41140b:	or     DWORD PTR cs:[esp+ecx*8+0x50],edx
  411410:	fbld   TBYTE PTR [edi-0x191f1ed1]
  411416:	and    eax,0x6508f267
  41141b:	std    
  41141c:	push   0xffffff9a
  41141e:	mov    dl,BYTE PTR [ebp+0x4a]
  411421:	stos   BYTE PTR es:[edi],al
  411422:	inc    esi
  411423:	test   eax,0x436dca2
  411428:	loopne 0x4113ae
  41142a:	loop   0x41146e
  41142c:	jge    0x411403
  41142e:	imul   ecx,DWORD PTR [edx],0xffffffb3
  411431:	add    al,0xc2
  411433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411434:	js     0x41146a
  411436:	rcr    ebx,1
  411438:	jae    0x4114b0
  41143a:	and    BYTE PTR [ebx],dh
  41143c:	dec    ebx
  41143d:	mov    BYTE PTR [edx],dh
  41143f:	daa    
  411440:	nop
  411441:	shl    ch,0x91
  411444:	mov    eax,0x23ec2888
  411449:	push   ebx
  41144a:	shl    DWORD PTR [edx],1
  41144c:	cs out 0xf7,eax
  41144f:	lock popf 
  411451:	jg     0x4114a9
  411453:	push   es
  411454:	cmp    ecx,edx
  411456:	repnz or edi,ecx
  411459:	cmp    esp,ebp
  41145b:	scas   eax,DWORD PTR es:[edi]
  41145c:	adc    al,0x53
  41145e:	push   ebx
  41145f:	mov    ah,dl
  411461:	xchg   esp,eax
  411462:	outs   dx,BYTE PTR ds:[esi]
  411463:	inc    edx
  411464:	mov    bh,0xd7
  411466:	out    0xd,al
  411468:	out    0xb4,eax
  41146a:	mov    eax,0xfe732478
  41146f:	fcmove st,st(1)
  411471:	jbe    0x411406
  411473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411474:	pop    edi
  411475:	popa   
  411476:	xchg   edx,eax
  411477:	out    dx,eax
  411478:	aaa    
  411479:	ficomp DWORD PTR [esi-0x43]
  41147c:	mov    ch,BYTE PTR [ebx-0x6c]
  41147f:	sbb    esp,DWORD PTR [edi]
  411481:	adc    eax,0x702f9a33
  411486:	js     0x4114d1
  411488:	in     al,0x18
  41148a:	imul   ebp,DWORD PTR cs:[ebx],0xf
  41148e:	(bad)  
  411490:	cld    
  411491:	in     eax,0xa2
  411493:	adc    ecx,ebx
  411495:	mov    edx,0x392d157e
  41149a:	dec    eax
  41149c:	lock fwait
  41149e:	mov    BYTE PTR fs:[esi+0x9],al
  4114a2:	cdq    
  4114a3:	xor    ecx,DWORD PTR [edi+0x7c38cbd9]
  4114a9:	sar    DWORD PTR [edx+0x7d],1
  4114ac:	and    BYTE PTR [ebx-0x1a],cl
  4114af:	cmp    al,0x59
  4114b1:	popa   
  4114b2:	push   ecx
  4114b3:	lock and eax,0x137e93e5
  4114b9:	jns    0x411515
  4114bb:	enter  0x7349,0x18
  4114bf:	sti    
  4114c0:	test   al,0xd3
  4114c2:	xchg   edx,eax
  4114c3:	pop    ds
  4114c4:	mov    BYTE PTR [edi-0x1],dl
  4114c7:	pop    edi
  4114c8:	jmp    0x411486
  4114ca:	jno    0x411497
  4114cc:	and    eax,0x6070403b
  4114d1:	lahf   
  4114d2:	jmp    0x808747d
  4114d7:	dec    eax
  4114d8:	cwde   
  4114d9:	data16 mov dl,0x8a
  4114dc:	cmp    eax,0xfbfce443
  4114e1:	call   0x5479:0x4642326
  4114e8:	lahf   
  4114e9:	mov    esp,0x2325ca5
  4114ee:	ror    BYTE PTR [eax],cl
  4114f0:	popf   
  4114f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114f2:	add    edi,DWORD PTR [ecx-0x403bc0a]
  4114f8:	fbld   TBYTE PTR [edi-0x1b86b46c]
  4114fe:	dec    ebx
  4114ff:	aaa    
  411500:	js     0x4114db
  411502:	and    edi,DWORD PTR [ebx]
  411504:	call   0x68f6:0x70f91527
  41150b:	adc    edx,DWORD PTR [ebx+0x6c]
  41150e:	imul   ebp,edi,0x61ffbc5f
  411514:	shl    DWORD PTR [edi+0x5af69165],cl
  41151a:	(bad)  
  41151c:	push   ebp
  41151d:	test   ch,0x67
  411520:	inc    ebp
  411521:	push   esi
  411522:	jb     0x4114d7
  411524:	adc    eax,0x54f9548e
  411529:	xchg   esi,eax
  41152a:	ds xor al,dl
  41152d:	call   0xdc5a7a7a
  411532:	mov    eax,0xcbdcd0f8
  411537:	push   ebp
  411538:	lods   eax,DWORD PTR ds:[esi]
  411539:	shl    DWORD PTR [ebp+0x51d76c44],1
  41153f:	test   al,0xa3
  411541:	pop    edi
  411542:	pop    es
  411543:	mov    ebx,0x83fd349b
  411548:	mov    dl,0x8
  41154a:	adc    eax,0x4037fdef
  41154f:	jns    0x411525
  411551:	or     ebx,DWORD PTR gs:[eax]
  411554:	sti    
  411555:	xchg   edi,eax
  411556:	dec    esi
  411557:	add    dl,BYTE PTR [ebp-0x79]
  41155a:	test   eax,0x3a400b30
  41155f:	loopne 0x411537
  411561:	dec    ebx
  411562:	pop    eax
  411563:	std    
  411564:	jns    0x4115c7
  411566:	das    
  411567:	jp     0x4115e1
  411569:	pushf  
  41156a:	mov    cl,0x7
  41156c:	ins    DWORD PTR es:[edi],dx
  41156d:	mov    cl,BYTE PTR [ebp+0x40]
  411570:	pop    esi
  411571:	aam    0x79
  411573:	test   BYTE PTR [esi+0x3b6081b0],bh
  411579:	popf   
  41157a:	pushf  
  41157b:	int    0x3
  41157d:	std    
  41157e:	inc    ebp
  41157f:	push   eax
  411581:	into   
  411582:	mov    DWORD PTR [ebx],eax
  411584:	mov    dl,0x7c
  411586:	(bad)  
  411587:	shr    dh,0x71
  41158a:	add    DWORD PTR [edi+0x76639960],edx
  411590:	mov    ebx,DWORD PTR [esi-0x2da6a502]
  411596:	loope  0x41157f
  411598:	mov    ecx,0xe3f398d4
  41159d:	inc    ecx
  41159e:	mov    al,0xe2
  4115a0:	imul   BYTE PTR [ebx+0x35d8893]
  4115a6:	xchg   DWORD PTR [esi-0x395f3fd0],eax
  4115ac:	mov    ebx,DWORD PTR [ecx-0x78]
  4115af:	mov    ds:0x4dd4d5f,eax
  4115b4:	jmp    0x3bc:0x8bd122bf
  4115bb:	adc    al,0xb7
  4115bd:	adc    esp,eax
  4115bf:	stc    
  4115c0:	mov    ds:0xa6f410a8,al
  4115c5:	mov    cs,WORD PTR [ebx-0x18415b48]
  4115cb:	inc    ecx
  4115cc:	aad    0x4a
  4115ce:	jp     0x41156b
  4115d0:	pmaxub mm6,QWORD PTR [esi-0x7c]
  4115d4:	xchg   DWORD PTR [edx+0x53],esp
  4115d7:	push   0x7c
  4115d9:	inc    edi
  4115da:	and    ch,al
  4115dc:	test   BYTE PTR [eax+0x768c00db],cl
  4115e2:	scas   al,BYTE PTR es:[edi]
  4115e3:	call   0x960b:0xc4c75772
  4115ea:	scas   eax,DWORD PTR es:[edi]
  4115eb:	adc    dl,bh
  4115ed:	lea    eax,[edx+0x45cd40d0]
  4115f3:	cmp    al,0x4b
  4115f5:	mov    edx,cs
  4115f7:	dec    edx
  4115f8:	mov    edx,0x5d204a9c
  4115fd:	scas   al,BYTE PTR es:[edi]
  4115fe:	mov    eax,ds:0x9a07d000
  411603:	jmp    0x411630
  411605:	sbb    eax,0xd42662d9
  41160a:	popa   
  41160b:	out    dx,eax
  41160c:	js     0x4115e0
  41160e:	loop   0x411641
  411610:	cs call 0xd61e2971
  411616:	mov    esp,0x1edafd01
  41161b:	out    0xd,eax
  41161d:	xchg   ebp,eax
  41161e:	shl    DWORD PTR [eax],1
  411620:	sti    
  411621:	fwait
  411622:	rcl    eax,cl
  411624:	sti    
  411625:	mov    cs,WORD PTR [ecx]
  411627:	mov    bl,dh
  411629:	data16 lahf 
  41162b:	sub    al,0x8f
  41162d:	mov    bh,0x49
  41162f:	jg     0x41169f
  411631:	nop
  411632:	(bad)  
  411633:	dec    esi
  411634:	jne    0x4115b6
  411636:	mov    ds,WORD PTR [edx+0x31]
  411639:	stos   DWORD PTR es:[edi],eax
  41163a:	xor    bl,dl
  41163c:	jno    0x41165f
  41163e:	icebp  
  41163f:	mov    bh,0x6a
  411641:	ret    
  411642:	dec    edi
  411643:	mov    ds,WORD PTR [edx]
  411645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411646:	fdiv   DWORD PTR [edx]
  411648:	jnp    0x411639
  41164a:	out    0xd,al
  41164c:	sti    
  41164d:	je     0x41160b
  41164f:	out    0xe4,eax
  411651:	sbb    bh,BYTE PTR [ecx]
  411653:	cmc    
  411654:	and    DWORD PTR [eax-0x700cc71],ebx
  41165a:	dec    edx
  41165b:	adc    al,0x61
  41165d:	sub    cl,BYTE PTR [edx-0x79]
  411660:	daa    
  411661:	mov    bl,0x20
  411663:	or     bh,BYTE PTR [esi]
  411665:	dec    edx
  411666:	out    dx,al
  411667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411668:	ss leave 
  41166a:	test   BYTE PTR [edi+0x2],0x16
  41166e:	mov    bl,0xe3
  411670:	sti    
  411671:	stc    
  411672:	in     eax,0x24
  411674:	jge    0x411609
  411676:	mov    esp,0x8e555486
  41167b:	adc    al,cl
  41167d:	retf   0x3c54
  411680:	push   ebp
  411681:	aas    
  411682:	fstp   TBYTE PTR [ecx+0x2d]
  411685:	sub    eax,0x28b6f503
  41168a:	cs push cs
  41168c:	cmc    
  41168d:	or     esp,DWORD PTR [esi-0x566d0b7]
  411693:	mov    bh,0x9e
  411695:	add    dl,BYTE PTR [esi+0xd]
  411698:	xor    al,0x9e
  41169a:	dec    ebp
  41169b:	pop    eax
  41169c:	repnz lahf 
  41169e:	iret   
  41169f:	stos   DWORD PTR es:[edi],eax
  4116a0:	addr16 (bad) 
  4116a2:	adc    eax,0x3837ec8c
  4116a7:	push   esi
  4116a8:	and    bl,BYTE PTR [ebp-0x18]
  4116ab:	fwait
  4116ac:	inc    esi
  4116ad:	or     BYTE PTR [edx-0x69],0xb6
  4116b1:	hlt    
  4116b2:	inc    ebp
  4116b3:	adc    ebx,ecx
  4116b5:	pop    ss
  4116b6:	fwait
  4116b7:	cdq    
  4116b8:	mov    ch,0x6a
  4116ba:	cli    
  4116bb:	mov    ecx,0x4560a0fb
  4116c0:	xchg   ecx,eax
  4116c1:	pop    ds
  4116c2:	dec    esp
  4116c3:	jns    0x4116a1
  4116c5:	je     0x411661
  4116c7:	ss pop esp
  4116c9:	inc    esi
  4116ca:	scas   al,BYTE PTR es:[edi]
  4116cb:	lods   al,BYTE PTR ds:[esi]
  4116cc:	push   cs
  4116cd:	sub    DWORD PTR [ecx-0x44e21dc1],0xffffffd5
  4116d4:	adc    eax,0xbf8fafeb
  4116d9:	jnp    0x4116fd
  4116db:	fisttp DWORD PTR [esi]
  4116dd:	xchg   DWORD PTR [edi+eiz*1-0x54],ecx
  4116e1:	in     eax,0xdd
  4116e3:	outs   dx,BYTE PTR ds:[esi]
  4116e4:	outs   dx,BYTE PTR ds:[esi]
  4116e5:	or     esp,DWORD PTR [edx+esi*1+0xb]
  4116e9:	dec    eax
  4116ea:	xchg   edi,eax
  4116eb:	test   eax,0xf24f4c4
  4116f0:	stos   BYTE PTR es:[edi],al
  4116f1:	jg     0x41171e
  4116f3:	adc    al,BYTE PTR [eax+0x47]
  4116f6:	push   0xffffff9f
  4116f8:	fcomp  DWORD PTR [ecx-0x47]
  4116fb:	loopne 0x411752
  4116fd:	cmp    DWORD PTR [eax-0x77],esp
  411700:	pop    es
  411701:	ss ret 
  411703:	(bad)  
  411704:	and    ebx,DWORD PTR [ecx-0x42]
  411707:	jmp    0x4116e0
  411709:	fcomp  DWORD PTR [edi+0x57792507]
  41170f:	js     0x4116d6
  411711:	push   edi
  411712:	fsubr  QWORD PTR [eax+0x44115472]
  411718:	jns    0x41172a
  41171a:	mov    bl,0xc2
  41171c:	mov    ch,BYTE PTR [edi]
  41171e:	xor    ecx,DWORD PTR [si-0x73f7]
  411723:	sub    eax,0xc859d035
  411728:	scas   eax,DWORD PTR es:[edi]
  411729:	mov    bh,0x6c
  41172b:	fadd   st,st(5)
  41172d:	loope  0x41171b
  41172f:	call   0x965f:0xd78bfd00
  411736:	cmp    BYTE PTR [ebx-0x74],0x97
  41173a:	inc    esi
  41173b:	test   BYTE PTR [esi-0x68],ch
  41173e:	pusha  
  41173f:	les    ebx,FWORD PTR [edx+eax*2]
  411742:	mov    dl,bl
  411744:	leave  
  411745:	dec    ebp
  411746:	out    dx,eax
  411747:	adc    BYTE PTR [esi-0x71],ch
  41174a:	ror    DWORD PTR [edi+eiz*1],0xbe
  41174e:	jmp    0x4117ca
  411750:	add    al,0x76
  411752:	icebp  
  411753:	int    0x79
  411755:	rcl    BYTE PTR [eax+0x42],cl
  411758:	sub    DWORD PTR [ecx-0x15c26802],ebp
  41175e:	xor    ch,al
  411760:	div    BYTE PTR [esi-0x14]
  411763:	frstor [edi+0x662979dc]
  411769:	test   al,0x68
  41176b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41176c:	in     al,dx
  41176d:	jb     0x41173e
  41176f:	mov    ebx,0x4b7a8782
  411774:	pop    es
  411775:	adc    al,0xcc
  411777:	adc    al,BYTE PTR [esi]
  411779:	pop    es
  41177a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41177b:	dec    esp
  41177c:	add    edx,DWORD PTR [ecx]
  41177e:	jl     0x4117b4
  411780:	mov    eax,0xbb4cc18d
  411785:	and    BYTE PTR [ebx-0x3b],bh
  411788:	sub    dh,al
  41178a:	mov    esp,0xee068cd5
  41178f:	rcr    DWORD PTR [ebx-0x2d],cl
  411792:	or     eax,0xae1e52d9
  411797:	jb     0x411740
  411799:	mov    ch,0xbc
  41179b:	mov    ebx,0xff3f977a
  4117a0:	test   DWORD PTR [ebx-0x7f501dfa],ecx
  4117a6:	mov    ebp,0xb6169be5
  4117ab:	sub    al,0x7e
  4117ad:	loopne 0x411816
  4117af:	std    
  4117b0:	jecxz  0x41181c
  4117b2:	mov    ebp,0x48c4e858
  4117b7:	xor    cl,BYTE PTR [ebx+0x14]
  4117ba:	sbb    cl,0xd1
  4117bd:	shl    BYTE PTR [ebp+0x5ce96c39],0xd4
  4117c4:	pop    edx
  4117c5:	jg     0x4117aa
  4117c7:	fsubrp st(3),st
  4117c9:	and    eax,DWORD PTR [eax+0x4c]
  4117cc:	jge    0x411791
  4117ce:	out    0xb,al
  4117d0:	inc    edx
  4117d1:	pop    edi
  4117d2:	dec    ebp
  4117d3:	mov    ch,0xe5
  4117d5:	sbb    al,0x7b
  4117d7:	inc    eax
  4117d8:	inc    edx
  4117d9:	or     eax,0x7e4b6461
  4117de:	(bad)  
  4117df:	or     al,0x7
  4117e1:	inc    eax
  4117e2:	mov    ebp,0x3155b979
  4117e7:	xor    al,0xe7
  4117e9:	(bad)
  4117ec:	adc    eax,0x548c220d
  4117f1:	jmp    0x4152:0x6ad7da66
  4117f8:	mov    fs,WORD PTR [esi+edx*4-0x1]
  4117fc:	adc    al,0x29
  4117fe:	pop    esp
  4117ff:	xchg   ecx,eax
  411800:	lock mov ch,0x26
  411803:	xor    al,BYTE PTR [ecx]
  411805:	sbb    eax,0xe44e97e9
  41180a:	mov    ebp,gs
  41180c:	es cmp bl,dh
  41180f:	pop    es
  411810:	xor    al,0xb8
  411812:	ret    
  411813:	sbb    al,0x54
  411815:	nop
  411816:	add    al,0x7a
  411818:	cmp    esp,esp
  41181a:	mov    ch,0xff
  41181c:	sbb    BYTE PTR [edx+0x22],0x4b
  411820:	arpl   sp,si
  411822:	jo     0x4117ac
  411824:	or     al,0x3c
  411826:	dec    edx
  411827:	(bad)  
  411829:	std    
  41182a:	test   eax,0xf9a11703
  41182f:	sbb    DWORD PTR ss:[eax],ebx
  411832:	jmp    0x4117d1
  411834:	imul   esp,DWORD PTR [esi+esi*1-0x685999d2],0xffffffa0
  41183c:	xchg   eax,ecx
  41183e:	xchg   ebx,eax
  41183f:	pop    eax
  411840:	dec    DWORD PTR [esi]
  411842:	and    al,0xbc
  411844:	div    BYTE PTR [esi]
  411846:	rcl    BYTE PTR [edx],cl
  411848:	xor    ecx,DWORD PTR ss:[edi]
  41184b:	add    DWORD PTR [eax+0x4208748f],ebp
  411851:	stos   BYTE PTR es:[edi],al
  411852:	sti    
  411853:	ins    BYTE PTR es:[edi],dx
  411854:	xchg   esi,eax
  411855:	sub    eax,0xebd690d5
  41185a:	repz leave 
  41185c:	fbstp  TBYTE PTR [edi+ebp*8+0x16]
  411860:	sub    BYTE PTR [eax+0x53f27ae0],ch
  411866:	shl    esi,1
  411868:	aam    0x88
  41186a:	mov    bl,0x7d
  41186c:	leave  
  41186d:	add    bl,BYTE PTR [esi+0x758352de]
  411873:	outs   dx,BYTE PTR ds:[esi]
  411874:	jb     0x4118f3
  411876:	dec    edi
  411877:	icebp  
  411878:	or     BYTE PTR [ebx-0x6765a43a],ah
  41187e:	fmul   st,st(7)
  411880:	ret    0x5d70
  411883:	add    esp,DWORD PTR [eax-0x59fd5c7d]
  411889:	mov    dh,0xec
  41188b:	add    esi,edi
  41188d:	sub    ecx,edx
  41188f:	mov    ds:0x47dfdc14,al
  411894:	inc    ebx
  411895:	fdivr  st,st(3)
  411897:	mov    esp,0x3092fd65
  41189c:	imul   ebp,DWORD PTR [esi-0x14],0x54
  4118a0:	push   ebp
  4118a1:	fs je  0x411833
  4118a4:	loopne 0x41183c
  4118a6:	aas    
  4118a7:	mul    DWORD PTR [edx+0x5a]
  4118aa:	mov    ds:0x720ac559,eax
  4118af:	cli    
  4118b0:	icebp  
  4118b1:	ss into 
  4118b3:	repz pushf 
  4118b5:	xchg   edi,eax
  4118b6:	fwait
  4118b7:	inc    eax
  4118b8:	or     bh,BYTE PTR [edx]
  4118ba:	(bad)  
  4118bb:	dec    cl
  4118bd:	pop    ebx
  4118be:	(bad)
  4118c3:	push   esp
  4118c4:	fadd   DWORD PTR [edx+0xb]
  4118c7:	dec    eax
  4118c8:	ret    0xbad8
  4118cb:	pop    ds
  4118cc:	push   edi
  4118cd:	mul    BYTE PTR ds:0x7da5921b
  4118d3:	imul   edx,DWORD PTR [eax-0x50],0x6350c886
  4118da:	leave  
  4118db:	fmul   st(6),st
  4118dd:	lds    ebp,FWORD PTR [edx]
  4118df:	lods   eax,DWORD PTR ds:[esi]
  4118e0:	or     al,0x5
  4118e2:	xchg   ebp,eax
  4118e3:	mov    dh,0xe5
  4118e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e6:	inc    esi
  4118e7:	out    dx,al
  4118e8:	fisttp WORD PTR [ebx]
  4118ea:	jecxz  0x41191a
  4118ec:	or     bh,0x62
  4118ef:	inc    esp
  4118f0:	fild   QWORD PTR [ecx+0x6b]
  4118f3:	cmp    al,0x51
  4118f5:	jmp    0x4118d1
  4118f7:	sub    ecx,DWORD PTR [esi-0x3b]
  4118fa:	stos   BYTE PTR es:[edi],al
  4118fb:	pushf  
  4118fc:	ja     0x411946
  4118fe:	mov    cl,0x43
  411900:	sbb    eax,0x98c57c2e
  411905:	aad    0x92
  411907:	xor    al,0x14
  411909:	mov    ch,0xa8
  41190b:	pushf  
  41190c:	dec    esp
  41190d:	push   cs
  41190e:	jno    0x41191a
  411910:	lods   eax,DWORD PTR ds:[esi]
  411911:	in     eax,0x67
  411913:	and    BYTE PTR [ecx],0x1f
  411916:	cdq    
  411917:	outs   dx,BYTE PTR ds:[esi]
  411918:	sbb    dl,0xfc
  41191b:	dec    esp
  41191c:	inc    esp
  41191d:	inc    edx
  41191e:	adc    DWORD PTR [esi],ebp
  411920:	push   ebp
  411921:	xchg   ecx,eax
  411922:	inc    DWORD PTR [ebx]
  411924:	dec    esi
  411925:	adc    edx,DWORD PTR [edx]
  411927:	and    esi,DWORD PTR [esi-0x42]
  41192a:	xchg   esp,eax
  41192b:	or     BYTE PTR [ebx+edi*4-0x7c],ch
  41192f:	xchg   esp,eax
  411930:	aam    0x7f
  411932:	jle    0x4119a2
  411934:	int3   
  411935:	jnp    0x411937
  411937:	clc    
  411938:	cmp    esi,DWORD PTR [ebx+0xa]
  41193b:	(bad)  
  41193d:	or     dl,al
  41193f:	lahf   
  411940:	and    DWORD PTR [eax+0x17567034],esp
  411946:	mov    ah,0x8c
  411948:	(bad)  
  411949:	das    
  41194a:	xchg   ebx,eax
  41194b:	jmp    FWORD PTR [edi+ebx*4-0x5e958940]
  411952:	sbb    DWORD PTR [ecx-0x27],0x367e36de
  411959:	inc    edx
  41195a:	jns    0x411959
  41195c:	int3   
  41195d:	(bad)  
  41195e:	and    BYTE PTR [edx],dh
  411960:	dec    edx
  411961:	mov    ebx,0xc514e8cf
  411966:	xchg   esp,eax
  411967:	sbb    ch,bl
  411969:	mov    ds:0x2929c3fa,eax
  41196e:	xor    eax,0x4438ef44
  411973:	outs   dx,DWORD PTR ds:[esi]
  411974:	sahf   
  411975:	pop    ds
  411976:	icebp  
  411977:	jmp    0x1985142b
  41197c:	in     eax,dx
  41197d:	jg     0x411974
  41197f:	fstp   st(1)
  411981:	cmp    BYTE PTR [esp+ebp*1-0x5d],ch
  411985:	in     al,dx
  411986:	xor    al,0xc2
  411988:	call   0x6461:0xebe16b07
  41198f:	pop    esp
  411990:	pop    eax
  411991:	adc    al,0xc4
  411994:	fimul  DWORD PTR [esi+0x5a]
  411997:	push   ebp
  411998:	dec    ebp
  411999:	pop    ebp
  41199a:	call   0xb39a2ec3
  41199f:	int3   
  4119a0:	sbb    eax,0x182c3518
  4119a5:	in     al,dx
  4119a6:	into   
  4119a7:	fbstp  TBYTE PTR [ebp+ebx*8-0x44]
  4119ab:	idiv   dh
  4119ad:	mov    esi,0xf775b313
  4119b2:	mov    eax,ds:0xbc704cd9
  4119b7:	and    dl,ah
  4119b9:	cmp    DWORD PTR [ebx-0x3c381e25],ebp
  4119bf:	(bad)  
  4119c0:	xchg   DWORD PTR [ebp+0x1675d8d2],ecx
  4119c6:	sbb    dh,dh
  4119c8:	repz push ebp
  4119ca:	mov    esi,0x6c9b86
  4119cf:	xchg   esp,eax
  4119d0:	ret    
  4119d1:	in     al,dx
  4119d2:	pop    ss
  4119d3:	mov    esp,0x91059303
  4119d8:	data16 jmp 0x4119ec
  4119db:	jle    0x4119e0
  4119dd:	stos   BYTE PTR es:[edi],al
  4119de:	fwait
  4119df:	xor    al,0x57
  4119e1:	and    ch,BYTE PTR [ebx+0x2a]
  4119e4:	inc    edi
  4119e5:	mov    bl,0x7c
  4119e7:	(bad)  [ecx]
  4119e9:	bound  ebx,QWORD PTR [ebp+0x1c]
  4119ec:	mov    esp,0x43db3fa4
  4119f1:	lds    esi,FWORD PTR [ebx]
  4119f3:	out    0x51,al
  4119f5:	stc    
  4119f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f7:	pop    esp
  4119f8:	jmp    0xea78:0xe0a4360b
  4119ff:	pmaxub mm6,QWORD PTR [edx+0x1407612b]
  411a06:	fs out 0x19,eax
  411a09:	cli    
  411a0a:	pushf  
  411a0b:	push   0x31
  411a0d:	sub    ecx,ecx
  411a0f:	sub    DWORD PTR [ebp+0xfdfe3d4],edx
  411a15:	pop    esp
  411a16:	fs fcmovnb st,st(4)
  411a19:	cli    
  411a1a:	jl     0x4119ea
  411a1c:	std    
  411a1d:	aaa    
  411a1e:	fld1   
  411a20:	lock add DWORD PTR [edx+0x534a4c73],edx
  411a27:	mov    BYTE PTR [esi],al
  411a29:	jl     0x4119b5
  411a2b:	es pop edx
  411a2d:	jne    0x411a31
  411a2f:	rcr    ah,0x9d
  411a32:	adc    edx,eax
  411a34:	inc    eax
  411a35:	fild   DWORD PTR [edi-0x3d]
  411a38:	mov    eax,0x3ee620a4
  411a3d:	es gs call 0xee74:0x1125ed03
  411a46:	int3   
  411a47:	loop   0x411a8f
  411a49:	arpl   WORD PTR [ebx-0x79],cx
  411a4c:	das    
  411a4d:	rol    dh,cl
  411a4f:	mov    dl,0xe9
  411a51:	scas   al,BYTE PTR es:[edi]
  411a52:	sar    DWORD PTR gs:[ebp+edx*1-0x6825a93e],1
  411a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a5b:	test   DWORD PTR [ebp+ebp*1+0x75],edi
  411a5f:	or     BYTE PTR [eax-0x42d796d4],ah
  411a65:	push   edi
  411a66:	inc    edi
  411a67:	jg     0x411a42
  411a69:	and    DWORD PTR [ebp-0x47d0d295],ebx
  411a6f:	or     ah,dh
  411a71:	sub    dh,ah
  411a73:	ficomp DWORD PTR ds:0xd10fe467
  411a79:	mov    esi,0xbbe14e7d
  411a7e:	push   es
  411a7f:	and    ah,BYTE PTR [edx-0x7e]
  411a82:	xor    dl,BYTE PTR [edx-0x680ce7e9]
  411a88:	pop    ebx
  411a89:	lock jnp 0x411a49
  411a8c:	arpl   dx,sp
  411a8e:	sbb    eax,0xda07ad4a
  411a93:	jmp    0xe9274b4b
  411a98:	test   al,0x7a
  411a9a:	sbb    BYTE PTR ds:0x7b155fb1,ch
  411aa0:	hlt    
  411aa1:	mov    eax,ds:0x5c4c3337
  411aa6:	xchg   ebp,eax
  411aa7:	mov    ds:0xd7521250,al
  411aac:	mov    ds:0xb9fa27a,al
  411ab1:	test   BYTE PTR [ecx],dl
  411ab3:	inc    ecx
  411ab4:	mov    ds:0xb5aef398,eax
  411ab9:	dec    edi
  411aba:	cwde   
  411abb:	fst    QWORD PTR [edx-0x4dc96159]
  411ac1:	dec    edi
  411ac2:	cdq    
  411ac3:	(bad)  
  411ac4:	pop    esi
  411ac5:	cdq    
  411ac6:	fadd   QWORD PTR [edi]
  411ac8:	sub    dh,cl
  411aca:	sbb    esi,DWORD PTR [edx+eiz*4]
  411acd:	pop    ebx
  411ace:	or     DWORD PTR [edi+0x4962583a],edx
  411ad4:	icebp  
  411ad5:	outs   dx,DWORD PTR ds:[esi]
  411ad6:	test   eax,0x3879c3d5
  411adb:	mov    esi,0xdd75719b
  411ae0:	popf   
  411ae1:	inc    edx
  411ae2:	xchg   ebp,eax
  411ae3:	xor    DWORD PTR [ecx],ebx
  411ae5:	sub    BYTE PTR [edi+0x60],bl
  411ae8:	mov    dl,0x3b
  411aea:	dec    ebp
  411aeb:	dec    eax
  411aec:	aam    0x10
  411aee:	mov    ah,0x1b
  411af0:	clc    
  411af1:	mov    dl,0xc3
  411af3:	and    BYTE PTR [eax],ch
  411af5:	(bad)  
  411af6:	test   al,0xf7
  411af8:	push   0xffffffa1
  411afa:	jbe    0x411b06
  411afc:	xchg   BYTE PTR [eax+0xc9778e3],bh
  411b02:	or     eax,0x58c737c
  411b07:	xor    eax,0xf746d076
  411b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b0d:	fistp  DWORD PTR [ebx+edi*1]
  411b10:	sbb    BYTE PTR [edi-0x76],bl
  411b13:	push   ss
  411b14:	repnz adc DWORD PTR [ecx+0x17],0xfffffff7
  411b19:	loopne 0x411af9
  411b1b:	mov    DWORD PTR [ecx],esp
  411b1d:	jne    0x411b52
  411b1f:	aas    
  411b20:	push   eax
  411b21:	pusha  
  411b22:	(bad)  
  411b23:	xchg   esp,eax
  411b24:	loope  0x411b6b
  411b26:	retf   0x83a
  411b29:	jnp    0x411b6a
  411b2b:	(bad)  
  411b2d:	std    
  411b2e:	inc    esi
  411b2f:	dec    esi
  411b30:	cmc    
  411b31:	mov    ch,0xe5
  411b33:	jne    0x411b31
  411b35:	lods   eax,DWORD PTR cs:[esi]
  411b37:	xchg   edi,eax
  411b38:	enter  0x1285,0xfa
  411b3c:	or     ah,BYTE PTR [edx]
  411b3e:	test   DWORD PTR [edx-0x3023f071],edi
  411b44:	cmp    cl,BYTE PTR [eax]
  411b46:	data16 daa 
  411b48:	push   esi
  411b49:	mov    eax,ds:0xcbfa2401
  411b4e:	out    dx,eax
  411b4f:	(bad)  
  411b50:	cld    
  411b51:	mov    edi,0x649e8ee0
  411b56:	sbb    cl,BYTE PTR [edx+0x5223b02a]
  411b5c:	repz jl 0x411b67
  411b5f:	loopne 0x411bbe
  411b61:	gs fcomip st,st(4)
  411b64:	jnp    0x411bdf
  411b66:	jg     0x411b48
  411b68:	sub    DWORD PTR [ebp-0x9],edi
  411b6b:	lea    edi,[edi]
  411b6d:	sbb    eax,0xec51af97
  411b72:	stos   DWORD PTR es:[edi],eax
  411b73:	pop    es
  411b74:	xchg   ecx,eax
  411b75:	add    al,0x63
  411b77:	fs adc esi,edx
  411b7a:	in     eax,dx
  411b7b:	sub    BYTE PTR [ebx*1+0x7d165e50],bh
  411b82:	dec    ebp
  411b83:	mov    ah,BYTE PTR [ebx]
  411b85:	popa   
  411b86:	jecxz  0x411c02
  411b88:	rcl    DWORD PTR [eax-0x155a6b6f],1
  411b8e:	sbb    BYTE PTR [esi],0x5e
  411b91:	sub    bh,ch
  411b93:	sub    ch,BYTE PTR [esi-0x16]
  411b96:	or     DWORD PTR [edi],edx
  411b98:	push   esp
  411b99:	ds ins DWORD PTR es:[edi],dx
  411b9b:	pop    es
  411b9c:	pop    eax
  411b9d:	idiv   BYTE PTR [eax+0x7b]
  411ba0:	std    
  411ba1:	retf   0x47ef
  411ba4:	rol    ah,cl
  411ba6:	jmp    0x411b92
  411ba8:	cmc    
  411ba9:	xchg   DWORD PTR ds:0x4b619a6b,ebx
  411baf:	aaa    
  411bb0:	or     DWORD PTR [edx],eax
  411bb2:	dec    esp
  411bb3:	pop    ss
  411bb4:	ds ss and al,bl
  411bb8:	jae    0x411c2b
  411bba:	rcl    BYTE PTR [ecx+0x4f],1
  411bbd:	test   DWORD PTR [esi+0xc],edi
  411bc0:	or     ebp,edi
  411bc2:	cdq    
  411bc3:	inc    esi
  411bc4:	sub    edi,edx
  411bc6:	leave  
  411bc7:	scas   al,BYTE PTR es:[edi]
  411bc8:	jge    0x411b58
  411bca:	(bad)  
  411bcb:	sub    ah,BYTE PTR [ecx+0x1bbb424b]
  411bd1:	xchg   DWORD PTR [ecx+0x69],esi
  411bd4:	dec    esp
  411bd5:	in     al,dx
  411bd6:	sub    eax,0x9b2557d6
  411bdb:	inc    eax
  411bdc:	in     al,dx
  411bdd:	sub    ah,cl
  411bdf:	sub    edi,ebp
  411be1:	fcmovne st,st(2)
  411be3:	cld    
  411be4:	stc    
  411be5:	ror    ebx,0x0
  411be8:	fisubr WORD PTR [ebx+0x41cfd68d]
  411bee:	mov    eax,0x653ac904
  411bf3:	dec    edx
  411bf4:	into   
  411bf5:	and    ebp,DWORD PTR [ecx-0x45ef9d29]
  411bfb:	push   ebx
  411bfc:	idiv   edi
  411bfe:	jp     0x411c0e
  411c00:	add    ebx,DWORD PTR [ecx]
  411c02:	scas   al,BYTE PTR es:[edi]
  411c03:	inc    BYTE PTR [ecx+0x13af7d34]
  411c09:	adc    eax,0x630b488e
  411c0e:	xor    al,0xda
  411c10:	ret    0x1ec3
  411c13:	or     ch,dl
  411c15:	gs leave 
  411c17:	aaa    
  411c18:	push   edi
  411c19:	mov    DWORD PTR [edi+0x1c],ecx
  411c1c:	adc    al,0x34
  411c1e:	mov    dl,0x9a
  411c20:	mov    ebx,0x72b8d8d
  411c25:	jmp    esp
  411c27:	inc    ebp
  411c28:	jno    0x411bf9
  411c2a:	(bad)  
  411c2b:	pop    eax
  411c2c:	das    
  411c2d:	aas    
  411c2e:	leave  
  411c2f:	out    0xb7,eax
  411c31:	mov    ecx,0x9e8da910
  411c36:	and    ah,BYTE PTR [eax+0x13]
  411c39:	inc    ecx
  411c3a:	(bad)
  411c3e:	jecxz  0x411c7c
  411c40:	cwde   
  411c41:	pop    ds
  411c42:	adc    BYTE PTR [eax+eiz*8+0x4a],0x74
  411c47:	into   
  411c48:	icebp  
  411c49:	add    DWORD PTR fs:[ecx],ebx
  411c4c:	sub    DWORD PTR [edi],esp
  411c4e:	rcr    edi,0xba
  411c51:	and    eax,0xd3077d81
  411c56:	sbb    eax,0xf773b8d5
  411c5b:	ins    BYTE PTR es:[edi],dx
  411c5c:	mov    BYTE PTR [edx-0x2f],0xf8
  411c60:	adc    al,0xb2
  411c62:	fsub   st,st(5)
  411c64:	xchg   ebp,eax
  411c65:	call   0xa3a:0x11772b8
  411c6c:	or     dl,BYTE PTR [edx+eiz*2-0x184084bd]
  411c73:	test   eax,0xd1f5e76f
  411c78:	push   cs
  411c79:	ins    DWORD PTR es:[edi],dx
  411c7a:	ja     0x411cbd
  411c7c:	mov    al,ds:0xe6a46a02
  411c81:	sahf   
  411c82:	int    0x77
  411c84:	mov    ah,0x57
  411c86:	(bad)  
  411c87:	or     eax,0x48ac59a6
  411c8c:	(bad)  
  411c8d:	jmp    0x5ac00e5f
  411c92:	mov    ah,dh
  411c94:	lea    esp,[esp+esi*1+0x2b]
  411c98:	sub    dl,bh
  411c9a:	call   FWORD PTR [edx]
  411c9c:	cmp    ah,al
  411c9e:	test   eax,0x49a3dff8
  411ca3:	inc    ecx
  411ca4:	xor    DWORD PTR [ecx-0x3d0c8307],0x9e034953
  411cae:	addr16 (bad) 
  411cb0:	lock mov ebp,0x75788948
  411cb6:	clc    
  411cb7:	sub    si,WORD PTR [edi+0xb]
  411cbb:	sbb    eax,0xc9e678e8
  411cc0:	mov    esp,0xa6be839c
  411cc5:	aas    
  411cc6:	sub    al,0x58
  411cc8:	sub    al,0x25
  411cca:	sub    ebp,esi
  411ccc:	fild   DWORD PTR [edx-0x250ca876]
  411cd2:	es jne 0x411d14
  411cd5:	lahf   
  411cd6:	int3   
  411cd7:	call   0xdd1e:0x73626bc6
  411cde:	popf   
  411cdf:	jns    0x411cfc
  411ce1:	jg     0x411d61
  411ce3:	or     BYTE PTR [ebx],dl
  411ce5:	mov    ah,0x55
  411ce7:	cld    
  411ce8:	imul   ecx,DWORD PTR [ecx-0x70],0xffffff8a
  411cec:	cdq    
  411ced:	jmp    0xe3b995ce
  411cf2:	lea    esi,ds:0x11db876c
  411cf8:	mov    dl,0x2d
  411cfa:	pop    esi
  411cfb:	adc    edi,esi
  411cfd:	in     eax,0xca
  411cff:	stos   DWORD PTR es:[edi],eax
  411d00:	stos   BYTE PTR es:[edi],al
  411d01:	jns    0x411d4f
  411d03:	dec    eax
  411d04:	push   edx
  411d05:	fld    DWORD PTR [ecx-0xb]
  411d08:	loopne 0x411d7c
  411d0a:	addr16 inc edi
  411d0c:	xor    eax,0x1c9d52d2
  411d11:	(bad)  
  411d12:	call   0xc0265f4a
  411d17:	stos   BYTE PTR es:[edi],al
  411d18:	push   cs
  411d19:	out    dx,eax
  411d1a:	add    eax,0x8e2e4290
  411d1f:	pop    esp
  411d20:	pop    edi
  411d21:	retf   0xe279
  411d24:	aas    
  411d25:	mov    bl,0x97
  411d27:	sub    al,BYTE PTR [esp+ebx*2+0x5ea7626e]
  411d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d2f:	pop    ecx
  411d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d31:	and    al,0x7
  411d33:	(bad)  
  411d34:	in     eax,dx
  411d35:	jb     0x411d8c
  411d37:	mov    ah,BYTE PTR [ebp-0x79601188]
  411d3d:	mov    dh,0xe
  411d3f:	sub    al,dl
  411d41:	(bad)  
  411d43:	pop    ss
  411d44:	push   ecx
  411d45:	imul   eax,DWORD PTR [edi-0x7c],0x1177c571
  411d4c:	aad    0xbe
  411d4e:	adc    edi,DWORD PTR cs:[eax-0x432cb4b0]
  411d55:	pop    ebx
  411d56:	imul   esp,DWORD PTR [ebx+0x4e4d021d],0x280a8227
  411d60:	cdq    
  411d61:	pusha  
  411d62:	call   FWORD PTR [eax]
  411d64:	mov    ebx,0x30dc12dd
  411d69:	scas   al,BYTE PTR es:[edi]
  411d6a:	jmp    0x5e16:0xd28d859a
  411d71:	bound  ebx,QWORD PTR [ecx-0x29]
  411d74:	and    al,0xe3
  411d76:	fstp   DWORD PTR [edi]
  411d78:	and    dh,BYTE PTR [eax+edx*1-0x268b5982]
  411d7f:	into   
  411d80:	cmp    eax,0x22efd466
  411d85:	mov    esp,0x490e0f46
  411d8a:	xchg   esp,eax
  411d8b:	out    dx,al
  411d8c:	ss and edi,edx
  411d8f:	sbb    bh,BYTE PTR [ecx+eax*1+0x7c]
  411d93:	push   ecx
  411d94:	mov    dl,BYTE PTR [eax-0x7c]
  411d97:	sub    ch,BYTE PTR [edx-0x34]
  411d9a:	and    BYTE PTR [ecx],bh
  411d9c:	scas   eax,DWORD PTR es:[edi]
  411d9d:	ss (bad) 
  411d9f:	imul   esi,ebx,0x470e1b8b
  411da5:	pop    ss
  411da6:	outs   dx,DWORD PTR ds:[esi]
  411da7:	xchg   BYTE PTR [edx-0x3bfc3990],cl
  411dad:	retf   0x828c
  411db0:	mov    ebp,0xbd0e4ac4
  411db5:	push   eax
  411db6:	lahf   
  411db7:	shl    BYTE PTR [eax+0x7df82378],1
  411dbd:	xchg   edi,eax
  411dbe:	cmp    dh,BYTE PTR [ecx]
  411dc0:	in     eax,0x1e
  411dc2:	mov    WORD PTR ds:0x2212ae7,es
  411dc8:	fcomp  DWORD PTR [esi+esi*1]
  411dcb:	inc    edx
  411dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dcd:	test   dl,ch
  411dcf:	sub    BYTE PTR [ebp-0x26d3e73c],bl
  411dd5:	push   esi
  411dd6:	hlt    
  411dd7:	nop
  411dd8:	adc    al,0xbe
  411dda:	shl    BYTE PTR [ebx-0x6a],cl
  411ddd:	rol    al,1
  411ddf:	mov    eax,ds:0x5579177a
  411de4:	sahf   
  411de5:	xchg   BYTE PTR [edx],cl
  411de7:	or     DWORD PTR [ebx-0x73],0xf14b6dcc
  411dee:	imul   esp,DWORD PTR ds:[eax-0x4b],0x61950015
  411df6:	call   0xa96a:0x5f1ad5cd
  411dfd:	dec    eax
  411dfe:	(bad)  
  411dff:	xchg   ebx,eax
  411e00:	shl    BYTE PTR [ebx],1
  411e02:	xchg   BYTE PTR [edi-0x21fafffb],al
  411e08:	loop   0x411da1
  411e0a:	lahf   
  411e0b:	loop   0x411e27
  411e0d:	outs   dx,BYTE PTR ds:[esi]
  411e0e:	icebp  
  411e0f:	sti    
  411e10:	adc    ch,BYTE PTR [edx]
  411e12:	sub    dl,BYTE PTR [edx+ecx*8+0x4b]
  411e16:	mov    ebp,ebp
  411e18:	sub    ebp,DWORD PTR [esi+0x4fd8ddb4]
  411e1e:	pop    ds
  411e1f:	ret    
  411e20:	xchg   esi,eax
  411e21:	fmul   st,st(2)
  411e23:	outs   dx,DWORD PTR ds:[esi]
  411e24:	xchg   esi,eax
  411e25:	jmp    0xace76e47
  411e2a:	and    al,0x7e
  411e2c:	dec    esi
  411e2d:	retf   
  411e2e:	mov    WORD PTR [edi-0x7a2c7016],fs
  411e34:	mov    bl,BYTE PTR [edx-0x78]
  411e37:	jae    0x411e7e
  411e39:	mov    edx,0x5dce1414
  411e3e:	and    esi,0xfffffff4
  411e41:	clc    
  411e42:	xchg   ebx,eax
  411e43:	xor    DWORD PTR [edx],ebp
  411e45:	jg     0x411df9
  411e47:	cmp    eax,0xc6300459
  411e4c:	inc    ecx
  411e4d:	fdiv   QWORD PTR [ecx+0x4c]
  411e50:	pop    ecx
  411e51:	mov    ecx,ebp
  411e53:	les    edi,FWORD PTR ds:0x741c4fac
  411e59:	fnsave ds:0xf6e7336e
  411e5f:	mov    esp,DWORD PTR [eax]
  411e61:	arpl   WORD PTR ds:0x70f1b2ea,ax
  411e67:	idiv   DWORD PTR cs:0x5bf62d2f
  411e6e:	sub    esp,esi
  411e70:	imul   edx,DWORD PTR [ebx+0x0],0x98cc472e
  411e77:	mov    bl,0x3e
  411e79:	test   al,0xfa
  411e7b:	dec    edi
  411e7c:	ret    
  411e7d:	jecxz  0x411e95
  411e7f:	jmp    0xd48b:0xd3d47001
  411e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e87:	mov    ds:0xfd554667,eax
  411e8c:	jle    0x411ec4
  411e8e:	mov    bl,0xc5
  411e90:	shl    DWORD PTR [ebx+0x2d8f2a04],cl
  411e96:	sar    BYTE PTR [esi],0xbf
  411e99:	xchg   edi,eax
  411e9a:	test   al,0x45
  411e9c:	cmp    ah,BYTE PTR [eax]
  411e9e:	ins    BYTE PTR es:[edi],dx
  411e9f:	xchg   BYTE PTR [edi+0x2e],ah
  411ea2:	xor    ebx,0xffffffa0
  411ea5:	stos   BYTE PTR es:[edi],al
  411ea6:	xchg   ecx,eax
  411ea7:	mov    esp,0x55b805fe
  411eac:	in     al,0x6a
  411eae:	shl    BYTE PTR [eax],0x8e
  411eb1:	inc    esp
  411eb2:	into   
  411eb3:	leave  
  411eb4:	and    al,0x4b
  411eb6:	and    bh,BYTE PTR gs:[ecx+0x394242e5]
  411ebd:	jb     0x411ea0
  411ebf:	dec    edx
  411ec0:	dec    esp
  411ec1:	xchg   ecx,eax
  411ec2:	aas    
  411ec3:	ja     0x411f3b
  411ec5:	dec    edx
  411ec6:	fdivr  QWORD PTR [edx+0x5fbe805c]
  411ecc:	aas    
  411ecd:	add    DWORD PTR [ecx],edi
  411ecf:	loop   0x411e54
  411ed1:	sbb    eax,DWORD PTR [edi]
  411ed3:	repnz std 
  411ed5:	icebp  
  411ed6:	pop    edx
  411ed7:	xor    ebx,edx
  411ed9:	ret    
  411eda:	out    0x49,al
  411edc:	sub    bl,BYTE PTR [edi-0x46]
  411edf:	pushf  
  411ee0:	fcmovne st,st(5)
  411ee2:	sbb    eax,0x35743a5e
  411ee7:	mov    eax,ss:0xf0a774aa
  411eed:	stos   BYTE PTR es:[edi],al
  411eee:	imul   eax,DWORD PTR [edx+0x58707b3f],0xffffffb3
  411ef5:	adc    ch,cl
  411ef7:	outs   dx,DWORD PTR ds:[esi]
  411ef8:	(bad)  
  411ef9:	mov    esp,0x52ea3ad9
  411efe:	sahf   
  411eff:	inc    ecx
  411f00:	xlat   BYTE PTR ds:[ebx]
  411f01:	ins    BYTE PTR es:[edi],dx
  411f02:	(bad)  
  411f03:	aad    0x74
  411f05:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  411f07:	stos   BYTE PTR es:[edi],al
  411f08:	seto   BYTE PTR [ebp+0x326e5a3e]
  411f0f:	mov    edi,0x85b8e240
  411f14:	repz mov bl,0x22
  411f17:	imul   ecx,ebp,0xffffffdc
  411f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f1b:	sbb    eax,0xff22824d
  411f20:	ss stc 
  411f22:	inc    edx
  411f23:	add    BYTE PTR [edx+ecx*1],ch
  411f26:	xchg   dl,ch
  411f28:	mov    al,ds:0xf1b1063e
  411f2d:	sub    ch,BYTE PTR [edx]
  411f2f:	stos   BYTE PTR es:[edi],al
  411f30:	cmp    BYTE PTR [ebp-0x14],bh
  411f33:	jb     0x411f9a
  411f35:	fwait
  411f36:	jns    0x411f80
  411f38:	xchg   esp,eax
  411f39:	jg     0x411f15
  411f3b:	dec    ebx
  411f3c:	call   0x592f919c
  411f41:	popa   
  411f42:	adc    cl,BYTE PTR [edi+0x58]
  411f45:	sub    BYTE PTR [ebp-0x71],cl
  411f48:	mov    ds,WORD PTR [edx+0x78f5c4f8]
  411f4e:	ret    
  411f4f:	cmp    ebp,edi
  411f51:	jl     0x411f6c
  411f53:	sbb    al,0x81
  411f55:	stos   BYTE PTR es:[edi],al
  411f56:	jecxz  0x411f05
  411f58:	lds    eax,FWORD PTR ds:0xa78e73a7
  411f5e:	aam    0xfc
  411f60:	jbe    0x411f9b
  411f62:	nop
  411f63:	xor    BYTE PTR [edx+0x7],0xb5
  411f67:	jge    0x411f4f
  411f69:	daa    
  411f6a:	pop    es
  411f6b:	push   ecx
  411f6c:	mov    ah,BYTE PTR [ecx+0x2b4cfd42]
  411f72:	test   al,0x7
  411f74:	test   DWORD PTR es:[ecx-0x64de9cfa],ebp
  411f7b:	push   ds
  411f7c:	add    ebp,DWORD PTR [ecx]
  411f7e:	add    ch,BYTE PTR [ebx]
  411f80:	outs   dx,BYTE PTR ds:[esi]
  411f81:	lods   al,BYTE PTR ds:[esi]
  411f82:	das    
  411f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f84:	dec    eax
  411f85:	dec    DWORD PTR [esi-0x79]
  411f88:	sbb    BYTE PTR [eax+0x36],ch
  411f8b:	hlt    
  411f8c:	or     eax,0x6637f58d
  411f91:	ror    BYTE PTR [ebp-0x70],cl
  411f94:	imul   ebp,DWORD PTR [esi+ebx*2-0x2a],0xffffffd8
  411f99:	adc    al,0x83
  411f9b:	test   ebp,0xb98499df
  411fa1:	jge    0x411f94
  411fa3:	jno    0x411f81
  411fa5:	mov    al,0x34
  411fa7:	lahf   
  411fa8:	xchg   ecx,eax
  411fa9:	jno    0x411f2b
  411fab:	cmp    al,0x52
  411fad:	push   edx
  411fae:	or     ebp,DWORD PTR [ecx+0x70850063]
  411fb4:	or     dh,BYTE PTR [ebx]
  411fb6:	ret    
  411fb7:	push   eax
  411fb8:	push   cs
  411fb9:	mov    bl,BYTE PTR [ebp+0x32]
  411fbc:	dec    eax
  411fbd:	inc    esi
  411fbe:	pop    edx
  411fbf:	rcr    BYTE PTR [ebx],1
  411fc1:	and    edx,DWORD PTR [eax-0x39]
  411fc4:	addr16 xchg edx,eax
  411fc6:	in     eax,0x64
  411fc8:	xor    al,0x50
  411fca:	std    
  411fcb:	pop    edx
  411fcc:	sbb    eax,DWORD PTR [esi+0x678125db]
  411fd2:	pop    eax
  411fd3:	sbb    BYTE PTR [ecx],al
  411fd5:	pop    edi
  411fd6:	jge    0x411fea
  411fd8:	add    al,BYTE PTR [edx-0x653ae341]
  411fde:	aad    0x2c
  411fe0:	mov    bh,BYTE PTR [ebx]
  411fe2:	push   edi
  411fe3:	xor    eax,ebp
  411fe5:	xchg   edx,eax
  411fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fe7:	stc    
  411fe8:	jae    0x412048
  411fea:	sub    ah,bl
  411fec:	xor    BYTE PTR [edx-0x3d346ac6],bl
  411ff2:	sbb    eax,0xb0c6c481
  411ff7:	jnp    0x411fc1
  411ff9:	lods   al,BYTE PTR ds:[esi]
  411ffa:	jle    0x411f98
  411ffc:	stc    
  411ffd:	inc    ebx
  411ffe:	pop    ds
  411fff:	dec    ecx
  412000:	stos   DWORD PTR es:[edi],eax
  412001:	(bad)  
  412002:	xor    eax,0x54a09ed
  412007:	repz sbb BYTE PTR [ebp+0x5d95dc80],al
  41200e:	clc    
  41200f:	call   0xc020:0x8e608b72
  412016:	and    ch,dh
  412018:	ret    
  412019:	icebp  
  41201a:	xchg   ebp,eax
  41201b:	mov    ecx,0x65fc963
  412020:	add    esi,0x3948a5c4
  412026:	xor    esp,edx
  412028:	and    dh,ah
  41202a:	jnp    0x411fe6
  41202c:	outs   dx,DWORD PTR ds:[esi]
  41202d:	shr    BYTE PTR [ecx],0xbf
  412030:	sbb    BYTE PTR [ecx+0x7e338337],bl
  412036:	shl    BYTE PTR [esi+0x18],cl
  412039:	test   eax,0xb3b4918c
  41203e:	jl     0x412021
  412040:	out    0xaf,eax
  412042:	rol    DWORD PTR [esi-0x6eb20b4f],0xd
  412049:	jns    0x41204a
  41204b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41204c:	pop    DWORD PTR [eax+edx*4]
  41204f:	ins    BYTE PTR es:[edi],dx
  412050:	in     al,0xeb
  412052:	add    eax,0xb67937b3
  412057:	push   cs
  412058:	lds    edx,FWORD PTR [ebp+0x55]
  41205b:	fistp  DWORD PTR [ecx+0x6d107c8e]
  412061:	jmp    0xe694:0x275b4e76
  412068:	iret   
  412069:	ficomp DWORD PTR [ecx]
  41206b:	push   ss
  41206c:	nop
  41206d:	test   eax,0xbd639af9
  412072:	in     al,0xc2
  412074:	mov    DWORD PTR [ebp-0x4c9c2527],esp
  41207a:	in     eax,dx
  41207b:	out    0x56,al
  41207d:	mov    ecx,esi
  41207f:	adc    BYTE PTR [eax+0x53],bl
  412082:	xor    BYTE PTR [ebp-0x26],ch
  412085:	add    BYTE PTR [edx],al
  412087:	div    BYTE PTR [ecx-0x3f]
  41208a:	mov    edi,0xe6e1f8e4
  41208f:	adc    eax,0xba46cd10
  412094:	retf   
  412095:	mov    ch,0x5e
  412097:	sbb    dh,dh
  412099:	out    dx,eax
  41209a:	jbe    0x4120ea
  41209c:	inc    ecx
  41209d:	adc    ebx,ecx
  41209f:	les    edx,FWORD PTR fs:[ebx]
  4120a2:	inc    ebp
  4120a3:	jbe    0x412089
  4120a5:	daa    
  4120a6:	js     0x4120f2
  4120a8:	dec    esi
  4120a9:	iret   
  4120aa:	out    0x2c,eax
  4120ac:	(bad)  
  4120ad:	aaa    
  4120ae:	cs clc 
  4120b0:	js     0x412105
  4120b2:	adc    dl,ch
  4120b4:	xor    ebx,DWORD PTR [ecx*8+0x5cc5ccea]
  4120bb:	(bad)  
  4120bd:	ss stos DWORD PTR es:[edi],eax
  4120bf:	mov    eax,0xec10dcf4
  4120c4:	sub    bl,dl
  4120c6:	sbb    eax,0xd039cbc4
  4120cb:	sbb    al,0xb6
  4120cd:	adc    BYTE PTR [edx],0x98
  4120d0:	fcom   QWORD PTR [ecx+0x60]
  4120d3:	stc    
  4120d4:	aad    0x7f
  4120d6:	cmp    ecx,edi
  4120d8:	outs   dx,BYTE PTR ds:[esi]
  4120d9:	mov    bl,0xf0
  4120db:	dec    edi
  4120dc:	xchg   ebx,eax
  4120dd:	sub    eax,0xfe596abc
  4120e2:	stc    
  4120e3:	aas    
  4120e4:	shr    DWORD PTR [eiz*4-0x1735a99e],0xe
  4120ec:	shl    BYTE PTR [esi+0x54cdb57e],1
  4120f2:	mov    dl,0xe6
  4120f4:	popa   
  4120f5:	push   edx
  4120f6:	rcr    DWORD PTR [ecx],1
  4120f8:	(bad)  [esi+0x701454be]
  4120fe:	add    DWORD PTR [ebx+0x1d679534],eax
  412104:	bound  ecx,QWORD PTR [edi-0x5da6270b]
  41210a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41210b:	cld    
  41210c:	add    BYTE PTR [edi+0xdcfbf21],0xfe
  412113:	cwde   
  412114:	mov    BYTE PTR [edi],dl
  412116:	push   ds
  412117:	idiv   ecx
  412119:	(bad)  
  41211a:	jmp    0x412117
  41211c:	pushf  
  41211d:	dec    edi
  41211e:	or     BYTE PTR [edi],bl
  412120:	xor    eax,esi
  412122:	mov    ebp,0x81a912a0
  412127:	add    ch,BYTE PTR [ebx]
  412129:	dec    edx
  41212a:	into   
  41212b:	fdiv   QWORD PTR [ebx]
  41212d:	xlat   BYTE PTR ds:[ebx]
  41212e:	jmp    0xad57:0x2eabb849
  412135:	cmc    
  412136:	stos   BYTE PTR es:[edi],al
  412137:	xchg   edx,eax
  412138:	and    eax,0x14c9016c
  41213d:	inc    edi
  41213e:	popf   
  41213f:	pop    eax
  412140:	cld    
  412141:	push   es
  412142:	inc    eax
  412143:	ss cld 
  412145:	ins    BYTE PTR es:[edi],dx
  412146:	ins    BYTE PTR es:[di],dx
  412148:	nop
  412149:	in     eax,dx
  41214a:	imul   edx,DWORD PTR [edi],0x8529966b
  412150:	loop   0x41215b
  412152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412153:	scas   eax,DWORD PTR es:[edi]
  412154:	bound  edi,QWORD PTR [edx+0x37]
  412157:	sahf   
  412158:	cmp    BYTE PTR [edi],al
  41215a:	cmp    al,0x72
  41215c:	pshufw mm6,mm6,0xf3
  412160:	inc    esi
  412161:	add    DWORD PTR ds:0x5829388d,esi
  412167:	rol    ch,0x7a
  41216a:	mov    dh,0x33
  41216c:	aad    0xbe
  41216e:	add    DWORD PTR [edx+ebx*4],esi
  412171:	fwait
  412172:	test   BYTE PTR [edi+0x6c],cl
  412175:	dec    ebp
  412176:	aad    0xa6
  412178:	je     0x412178
  41217a:	add    al,0x8f
  41217c:	or     edi,DWORD PTR [ebx+0x1b205b09]
  412182:	cmc    
  412183:	mov    ebp,0x214a43ee
  412188:	inc    ebp
  412189:	mov    esp,edx
  41218b:	push   eax
  41218c:	push   0xfffffff6
  41218e:	xchg   ebp,eax
  41218f:	iret   
  412190:	data16 jg 0x4121b2
  412193:	pushf  
  412194:	daa    
  412195:	jnp    0x412138
  412197:	xchg   esp,eax
  412198:	ins    BYTE PTR es:[edi],dx
  412199:	aaa    
  41219a:	inc    esp
  41219b:	nop
  41219c:	sub    al,0x27
  41219e:	test   DWORD PTR [edi+edi*4-0x58767e70],esp
  4121a5:	pop    ebx
  4121a6:	mov    BYTE PTR [esi+eax*8+0x34b9807],dl
  4121ad:	xor    eax,0x61d54245
  4121b2:	xchg   ebx,eax
  4121b3:	add    BYTE PTR [ebx],0xf9
  4121b6:	stc    
  4121b7:	shl    cl,0xdb
  4121ba:	xchg   edx,eax
  4121bb:	sub    BYTE PTR [eax+0x23],0x3
  4121bf:	sahf   
  4121c0:	sub    eax,0x492eead4
  4121c5:	(bad)  [ecx]
  4121c7:	dec    ebp
  4121c8:	dec    edi
  4121c9:	adc    ecx,esp
  4121cb:	adc    al,bl
  4121cd:	out    0x7d,al
  4121cf:	push   es
  4121d0:	cmp    DWORD PTR [edx+0x4f],edi
  4121d3:	pop    esi
  4121d4:	outs   dx,DWORD PTR ds:[esi]
  4121d5:	cmp    esp,edx
  4121d7:	(bad)  [eax]
  4121d9:	xor    al,0xcc
  4121db:	repz ja 0x412216
  4121de:	nop
  4121df:	call   0x7ebaccc2
  4121e4:	repnz in al,0xc4
  4121e7:	push   esp
  4121e8:	dec    esi
  4121e9:	psubsw mm2,mm1
  4121ec:	xor    eax,edi
  4121ee:	cmp    dl,BYTE PTR [ebx-0x41]
  4121f1:	jg     0x41217e
  4121f3:	or     DWORD PTR [edx],edx
  4121f5:	mov    ch,0x7e
  4121f7:	pop    ds
  4121f8:	jmp    0x8c9f5009
  4121fd:	inc    BYTE PTR [ebp+ebx*2-0x6214fe6f]
  412204:	(bad)  
  412205:	hlt    
  412206:	cmp    eax,0xdca965a3
  41220b:	(bad)  
  41220c:	cs in  al,dx
  41220e:	sub    eax,ebp
  412210:	mov    cl,0xb8
  412213:	xor    BYTE PTR [ecx+0x7276aa4f],dl
  412219:	rol    esi,1
  41221b:	cmp    dl,BYTE PTR [ecx]
  41221d:	adc    eax,0x588b558b
  412222:	xor    esp,ebp
  412224:	(bad)  
  412225:	fnstsw WORD PTR [ecx+0x1e]
  412228:	call   0xa2c4:0x6191642c
  41222f:	int    0xe8
  412231:	arpl   sp,si
  412233:	sbb    eax,0x36987c52
  412238:	xor    al,ch
  41223a:	out    0x24,eax
  41223c:	xor    eax,0xa043115b
  412241:	dec    ecx
  412242:	jno    0x412277
  412244:	fisubr WORD PTR ds:0xac03d7c3
  41224a:	ret    0x75d9
  41224d:	xlat   BYTE PTR ds:[ebx]
  41224e:	outs   dx,BYTE PTR ds:[esi]
  41224f:	rol    BYTE PTR [ebp-0x7567d035],1
  412255:	mov    esp,0x6c00f2ba
  41225a:	loopne 0x412286
  41225c:	or     ebx,DWORD PTR [esi+0x4e]
  41225f:	xchg   ebx,eax
  412260:	test   dh,ah
  412262:	push   edi
  412263:	mov    al,BYTE PTR [ebp+0x3bad8c5d]
  412269:	popf   
  41226a:	xchg   edx,eax
  41226b:	nop
  41226c:	ins    DWORD PTR es:[edi],dx
  41226d:	adc    BYTE PTR [eax],cl
  41226f:	sbb    eax,0xc8ce33c5
  412275:	aas    
  412276:	add    eax,0x5e8b6bc3
  41227b:	and    al,0x31
  41227d:	pop    edx
  41227e:	lds    esi,FWORD PTR [ebx]
  412280:	mov    es,WORD PTR [ebx+0x6c]
  412283:	and    BYTE PTR [ebp+edx*2-0x410e9b1f],ah
  41228a:	inc    esi
  41228b:	fst    DWORD PTR [edx-0x45f8759]
  412291:	in     eax,dx
  412292:	xchg   esi,eax
  412293:	faddp  st(0),st
  412295:	cmp    BYTE PTR [ecx-0x67],ch
  412298:	pop    ds
  412299:	jg     0x412283
  41229b:	add    cl,ah
  41229d:	fmul   st(5),st
  41229f:	pop    esp
  4122a0:	mov    esi,0x1647a751
  4122a5:	or     DWORD PTR ds:0xc567eef,ebx
  4122ab:	pushf  
  4122ac:	and    eax,0x2ce0ee2b
  4122b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122b2:	bound  esp,QWORD PTR [ecx+ebx*1-0x5bcb84ff]
  4122b9:	out    0xaa,al
  4122bb:	xor    edx,edi
  4122bd:	fisub  WORD PTR [eax]
  4122bf:	in     eax,dx
  4122c0:	push   esi
  4122c1:	daa    
  4122c2:	outs   dx,BYTE PTR ds:[esi]
  4122c3:	dec    esi
  4122c4:	xor    al,0x52
  4122c6:	sub    ch,BYTE PTR [esi-0x10b620e7]
  4122cc:	inc    edi
  4122cd:	xor    BYTE PTR [edi],dh
  4122cf:	adc    eax,0xd9b125b1
  4122d4:	mov    dh,0x1e
  4122d6:	and    BYTE PTR [ecx+0x53e84903],dh
  4122dc:	fidiv  DWORD PTR [ecx+0x1aeaf791]
  4122e2:	xchg   edx,eax
  4122e3:	sbb    ecx,ebp
  4122e5:	cmp    eax,0x7b720afc
  4122ea:	(bad)  
  4122eb:	test   BYTE PTR [ecx],0x8a
  4122ee:	push   ecx
  4122ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122f0:	pop    esi
  4122f1:	inc    ecx
  4122f2:	fs xchg ebp,eax
  4122f4:	pusha  
  4122f5:	pop    ds
  4122f6:	call   0x3905d05f
  4122fb:	sar    BYTE PTR [esi],cl
  4122fd:	cmp    al,0x44
  4122ff:	adc    al,0xbc
  412301:	mov    bh,BYTE PTR [esp+edi*2]
  412304:	jl     0x4122b0
  412306:	lea    ecx,[ecx+0x7c]
  412309:	cli    
  41230a:	in     eax,0xa9
  41230c:	dec    ebp
  41230d:	jecxz  0x4122c3
  41230f:	sub    DWORD PTR [edx+0x71],esp
  412312:	fisttp QWORD PTR [eax]
  412314:	pop    ds
  412315:	repz mov eax,ds:0xbc316514
  41231b:	gs adc eax,0x23b1297b
  412321:	rcr    BYTE PTR [ebx-0x45f28aa2],0xa0
  412328:	push   eax
  412329:	xor    DWORD PTR [ecx-0x18dae69f],ebx
  41232f:	xchg   DWORD PTR [ecx],ebx
  412331:	jbe    0x41233d
  412333:	ret    
  412334:	or     BYTE PTR [edx+0x7e],cl
  412337:	xchg   esp,eax
  412338:	jns    0x4122fa
  41233a:	xor    al,BYTE PTR [ecx]
  41233c:	inc    edx
  41233d:	add    DWORD PTR [edi-0x20],0x4fc88337
  412344:	repnz xchg esp,eax
  412346:	loope  0x412315
  412348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412349:	mov    cl,0xac
  41234b:	xor    esp,DWORD PTR [edi-0x5ae74a0e]
  412351:	and    al,BYTE PTR ds:0xa576ca73
  412357:	dec    esi
  412358:	xchg   esi,eax
  412359:	inc    eax
  41235a:	xchg   esp,eax
  41235b:	dec    eax
  41235c:	inc    ebx
  41235d:	pop    esp
  41235e:	inc    esp
  41235f:	sbb    ebp,DWORD PTR [ebx]
  412361:	(bad)  
  412362:	fs clc 
  412364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412365:	pop    esp
  412366:	mov    edx,0x7095e5b3
  41236b:	jmp    0x576bdf60
  412370:	add    al,0xcc
  412372:	mov    al,0x4b
  412374:	lds    eax,FWORD PTR [ebx-0x74a66866]
  41237a:	mov    bh,0xfe
  41237c:	add    bh,cl
  41237e:	push   0xffffff80
  412380:	and    eax,DWORD PTR [ebx-0x7f90e90c]
  412386:	fisub  DWORD PTR [edx+eiz*4-0x2a]
  41238a:	js     0x4123fd
  41238c:	xlat   BYTE PTR ds:[ebx]
  41238d:	sbb    cl,al
  41238f:	sbb    esp,ebp
  412391:	sbb    ch,BYTE PTR ds:0x652ecf5
  412397:	scas   al,BYTE PTR es:[edi]
  412398:	sbb    BYTE PTR [esi],dl
  41239a:	ret    0x9b2
  41239d:	mov    al,ds:0xb893f5c1
  4123a2:	and    BYTE PTR [ebx*1+0x5de110ae],dl
  4123a9:	fcmovu st,st(0)
  4123ab:	xchg   ebx,eax
  4123ac:	das    
  4123ad:	aas    
  4123ae:	pusha  
  4123af:	or     ah,al
  4123b1:	jmp    0xc4246fa6
  4123b6:	test   eax,0xa26eca5b
  4123bb:	mov    eax,0xb8a11559
  4123c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123c1:	push   cs
  4123c2:	mov    dl,cl
  4123c4:	push   0x70b88a2d
  4123c9:	mov    dh,BYTE PTR [edi+0x61]
  4123cc:	(bad)  
  4123cd:	cmp    BYTE PTR [ebp+edx*4-0x4db8e9f1],bh
  4123d4:	mov    cl,0xa
  4123d6:	in     al,dx
  4123d7:	mov    WORD PTR [ecx],cs
  4123d9:	pop    esi
  4123da:	and    BYTE PTR [eax+0x59],0xff
  4123de:	call   0x5ca8b9df
  4123e3:	dec    edx
  4123e4:	jno    0x41244c
  4123e6:	scas   al,BYTE PTR es:[edi]
  4123e7:	xor    eax,0xd4238ff4
  4123ec:	xchg   ebp,eax
  4123ed:	je     0x412385
  4123ef:	shl    dl,0xfa
  4123f2:	iret   
  4123f3:	cmp    BYTE PTR [ebx+0x1dd12f89],0x6c
  4123fa:	push   edx
  4123fb:	inc    esi
  4123fc:	or     BYTE PTR ds:0xceab8449,dl
  412402:	xor    al,BYTE PTR [ebp-0x27da2ead]
  412408:	xchg   edx,eax
  412409:	mov    edx,0x822956f5
  41240e:	repz ret 
  412410:	sbb    bh,BYTE PTR [ebx+ebx*8]
  412413:	out    0xd9,eax
  412415:	mov    bh,0x47
  412417:	mov    esp,0x59046d81
  41241c:	xlat   BYTE PTR ds:[ebx]
  41241d:	push   edx
  41241e:	sbb    BYTE PTR [edi+0x6b],al
  412421:	sbb    DWORD PTR [esi],esi
  412423:	jp     0x412488
  412425:	in     eax,0x83
  412427:	jl     0x4123c8
  412429:	(bad)  
  41242a:	mov    dl,0x60
  41242c:	pop    es
  41242d:	in     eax,0xef
  41242f:	mov    edi,DWORD PTR [edx]
  412431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412432:	mov    bh,0x4e
  412434:	push   eax
  412435:	aad    0xf4
  412437:	ins    BYTE PTR es:[edi],dx
  412438:	sub    eax,0x7ab46635
  41243d:	ja     0x4124ab
  41243f:	inc    edx
  412440:	jae    0x4123fd
  412442:	sub    edi,DWORD PTR [ecx+ebp*8]
  412445:	fwait
  412446:	mov    ah,0xa3
  412448:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41244a:	xchg   ebx,eax
  41244b:	ror    BYTE PTR [ebx],0xef
  41244e:	and    BYTE PTR [ebp+0x460eefd6],bl
  412454:	inc    esi
  412455:	aad    0x3c
  412457:	es out dx,al
  412459:	xor    edi,DWORD PTR [ecx]
  41245b:	cmp    al,0xe9
  41245d:	xchg   ecx,eax
  41245f:	adc    ch,bh
  412461:	and    edi,DWORD PTR [esi]
  412463:	jmp    0xdadd2d1
  412468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412469:	adc    DWORD PTR [ecx+0x28],esp
  41246c:	adc    eax,0xb07f4131
  412471:	shl    DWORD PTR [ebx],0x8f
  412474:	mov    ebp,cs
  412476:	mov    ebx,0xae7b9fb0
  41247b:	stos   BYTE PTR es:[edi],al
  41247c:	xchg   edx,eax
  41247d:	pop    edx
  41247e:	leave  
  41247f:	push   ss
  412480:	(bad)  
  412481:	pop    ebp
  412482:	xor    BYTE PTR [edi+0x77ebf1f3],ah
  412488:	fsubr  QWORD PTR [ecx+0x31]
  41248b:	push   edi
  41248c:	pushf  
  41248d:	and    eax,esi
  41248f:	fcomip st,st(2)
  412491:	iret   
  412492:	jecxz  0x412486
  412494:	mov    ch,0xac
  412496:	dec    ecx
  412497:	popf   
  412498:	mov    ah,0x3b
  41249a:	jl     0x412438
  41249c:	arpl   bx,dx
  41249e:	push   ecx
  41249f:	fldenv [ebx]
  4124a1:	push   0x4c
  4124a3:	mov    ebx,DWORD PTR [edx+0x12]
  4124a6:	dec    eax
  4124a7:	jmp    0x8ab63b8
  4124ac:	inc    edi
  4124ad:	jmp    ecx
  4124af:	jle    0x412442
  4124b1:	pop    ds
  4124b2:	mov    eax,0x80416d3c
  4124b7:	push   edi
  4124b8:	mul    DWORD PTR [eax-0x6c]
  4124bb:	adc    BYTE PTR [eax-0x33f497b],cl
  4124c1:	xlat   BYTE PTR ds:[ebx]
  4124c2:	mov    esi,0xb5848f83
  4124c7:	retf   0x40fc
  4124ca:	(bad)  
  4124cc:	push   0xfffffff1
  4124ce:	and    esp,edi
  4124d0:	mov    eax,0x4b02c776
  4124d5:	xchg   edx,eax
  4124d6:	xor    dl,BYTE PTR [edx+0x51]
  4124d9:	adc    DWORD PTR [ebx-0x66b699a3],0x1475b872
  4124e3:	cmp    ah,BYTE PTR ds:0x9833e051
  4124e9:	int    0x1e
  4124eb:	mov    bl,0x54
  4124ed:	test   eax,0xf4d0fda1
  4124f2:	mov    esp,0x97324cc9
  4124f7:	mov    dl,0xc5
  4124f9:	xlat   BYTE PTR ds:[ebx]
  4124fa:	mov    DWORD PTR [edi+0x4ddc4fac],edx
  412500:	imul   edx,esi,0x29
  412503:	adc    al,0x53
  412505:	in     eax,dx
  412506:	dec    ebx
  412507:	mov    ebx,0x4a5c456f
  41250c:	and    al,0xba
  41250e:	xor    al,BYTE PTR [ecx+0x63be7166]
  412514:	dec    edi
  412515:	data16 out 0x80,al
  412518:	add    dl,ch
  41251a:	es call 0xa254:0xe675e0e7
  412522:	sub    dl,ch
  412524:	enter  0xa2cd,0xe4
  412528:	retf   0xd7de
  41252b:	mov    ds:0x7abe7a34,eax
  412530:	popa   
  412531:	in     al,dx
  412532:	cmp    ebx,DWORD PTR ds:[edx+0x1f9ff286]
  412539:	xor    esp,DWORD PTR [eax+eiz*8-0x3]
  41253d:	divps  xmm5,xmm7
  412540:	int3   
  412541:	jae    0x412514
  412543:	cmp    al,0xf8
  412545:	xchg   edx,eax
  412546:	dec    ebp
  412547:	ret    0xb2ff
  41254a:	nop
  41254b:	pop    esi
  41254c:	imul   si,WORD PTR [ebx-0x47],0x16
  412551:	mov    eax,0xd113d8c2
  412556:	int3   
  412557:	mov    esp,edi
  412559:	adc    ecx,DWORD PTR [ebp+0x22]
  41255c:	int    0xe4
  41255e:	push   esp
  41255f:	mov    eax,0xdcf265ac
  412564:	mov    eax,ds
  412566:	mov    ds:0x42f33736,eax
  41256b:	cmp    al,0x92
  41256d:	adc    al,0x62
  41256f:	xor    BYTE PTR ds:0xd7965f2c,0x91
  412576:	sahf   
  412577:	js     0x41253d
  412579:	test   eax,0xb5db904c
  41257e:	retf   0x1ac2
  412581:	xlat   BYTE PTR ds:[ebx]
  412582:	inc    edx
  412583:	aas    
  412584:	enter  0xdf81,0x9a
  412588:	loopne 0x41258f
  41258a:	sub    bl,cl
  41258c:	daa    
  41258d:	repz les ebx,FWORD PTR [esi]
  412590:	jle    0x412562
  412592:	cld    
  412593:	test   DWORD PTR [eax-0x5cc82ed5],ebp
  412599:	(bad)  
  41259a:	push   ebp
  41259b:	or     DWORD PTR ds:[edi-0x5d],0xcba87f3c
  4125a3:	inc    edx
  4125a4:	leave  
  4125a5:	cmp    bl,dl
  4125a7:	jmp    0x412550
  4125a9:	fadd   QWORD PTR [eax-0x34]
  4125ac:	xor    cl,ch
  4125ae:	mov    bl,BYTE PTR [edx-0x7b]
  4125b1:	pop    esi
  4125b2:	jg     0x4125ce
  4125b4:	fld    DWORD PTR [edx+ecx*2+0x48]
  4125b8:	sbb    ebx,DWORD PTR [eax-0x20]
  4125bb:	and    ecx,DWORD PTR [ebp+0x534e809e]
  4125c1:	les    ebp,FWORD PTR [ebx+ebx*8-0x66dd69d7]
  4125c8:	dec    ecx
  4125c9:	repz jb 0x412572
  4125cc:	mov    ecx,0x6586baa4
  4125d1:	sbb    edx,DWORD PTR [ebx+0xdcb7107]
  4125d7:	push   0x8a53db1e
  4125dc:	xor    eax,0x10f8cfce
  4125e1:	cmp    eax,0xcf7929e1
  4125e6:	jne    0x4125aa
  4125e8:	push   ds
  4125e9:	fdivr  DWORD PTR [eax-0x65]
  4125ec:	aaa    
  4125ed:	and    BYTE PTR [ebp+0x6e],cl
  4125f0:	stos   BYTE PTR es:[edi],al
  4125f1:	int3   
  4125f2:	popa   
  4125f3:	daa    
  4125f4:	cdq    
  4125f5:	inc    ecx
  4125f6:	int    0x46
  4125f8:	xor    eax,DWORD PTR [edi+0x54]
  4125fb:	scas   al,BYTE PTR es:[edi]
  4125fc:	stos   DWORD PTR es:[edi],eax
  4125fd:	ds aaa 
  4125ff:	xchg   ebx,eax
  412600:	dec    edi
  412601:	xchg   edi,eax
  412602:	pop    ebx
  412603:	scas   eax,DWORD PTR es:[edi]
  412604:	add    BYTE PTR ds:0xcd6e08f6,cl
  41260a:	jae    0x4125c5
  41260c:	or     edi,eax
  41260e:	and    DWORD PTR [ebp+0x6568cefb],0x85350c8e
  412618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412619:	dec    edx
  41261a:	push   esp
  41261b:	jb     0x4125a3
  41261d:	cmp    bl,BYTE PTR [esi-0x65b2b2cf]
  412623:	mov    bh,0x38
  412625:	retfw  
  412627:	mov    DWORD PTR [esi],ebx
  412629:	out    dx,eax
  41262a:	test   al,0xdd
  41262c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41262d:	outs   dx,DWORD PTR ds:[esi]
  41262e:	push   esi
  41262f:	addr16 cmc 
  412631:	and    esi,DWORD PTR [ecx+0x52792d00]
  412637:	xchg   DWORD PTR [eax+0x98d819c],esp
  41263d:	ins    DWORD PTR es:[edi],dx
  41263e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41263f:	inc    eax
  412640:	cmp    eax,0xe48ea177
  412645:	pop    ds
  412646:	sub    eax,0x2a398fb3
  41264b:	in     al,0x2c
  41264d:	je     0x41263f
  41264f:	sbb    bh,BYTE PTR [edi+0x764e6603]
  412655:	jl     0x4125f6
  412657:	imul   esp,ecx,0x45
  41265a:	int3   
  41265b:	in     al,0x1b
  41265d:	lock mov BYTE PTR ds:0xe6591d36,ah
  412664:	imul   ebx,ebp,0x43
  412667:	xchg   esi,eax
  412668:	push   cs
  412669:	pop    eax
  41266a:	stc    
  41266b:	xchg   ebx,eax
  41266c:	push   0xe7256c26
  412671:	pop    ss
  412672:	mov    ch,0xbb
  412674:	cmp    esp,ecx
  412676:	repz xor eax,0xc7a6b321
  41267c:	xchg   edx,eax
  41267d:	ins    BYTE PTR es:[edi],dx
  41267e:	inc    esi
  41267f:	fsub   st,st(2)
  412681:	mov    eax,esp
  412683:	sar    BYTE PTR ss:[ebx+0x58ce2393],0x8
  41268b:	in     eax,0x8a
  41268d:	scas   al,BYTE PTR es:[edi]
  41268e:	rcr    BYTE PTR [edi-0x10a08775],0xe8
  412695:	ret    0x77c2
  412698:	dec    esp
  412699:	loopne 0x41267d
  41269b:	bound  edx,QWORD PTR [esi+0x1950e4af]
  4126a1:	jp     0x4126aa
  4126a3:	rol    ah,0xc7
  4126a6:	(bad)  
  4126a8:	imul   ecx,DWORD PTR [ecx+esi*2+0xb49f728],0xffffffaa
  4126b0:	leave  
  4126b1:	enter  0x5fd0,0xd9
  4126b5:	fidivr DWORD PTR [esp+edi*2-0x219931ec]
  4126bc:	dec    esp
  4126bd:	dec    ebp
  4126be:	mov    bh,0xb4
  4126c0:	pop    ebx
  4126c1:	(bad)
  4126c4:	jae    0x412649
  4126c6:	sahf   
  4126c7:	xchg   esp,eax
  4126c8:	stos   BYTE PTR es:[edi],al
  4126c9:	fbld   TBYTE PTR [esi+ecx*2]
  4126cc:	dec    ecx
  4126cd:	mov    ecx,0xf3d23d56
  4126d2:	or     esi,DWORD PTR [eax]
  4126d4:	daa    
  4126d5:	loop   0x4126ce
  4126d7:	in     eax,0x8e
  4126d9:	jae    0x41270d
  4126db:	and    cl,BYTE PTR [ecx-0x5f]
  4126de:	mov    ah,0x74
  4126e0:	lods   eax,DWORD PTR ds:[esi]
  4126e1:	or     edi,DWORD PTR [edx]
  4126e3:	pop    esi
  4126e4:	pop    edi
  4126e5:	mov    ebx,0xee188858
  4126ea:	bound  eax,QWORD PTR [edx]
  4126ec:	aad    0x8e
  4126ee:	jmp    0x41267f
  4126f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126f1:	int3   
  4126f2:	and    dl,BYTE PTR [ecx+ecx*2]
  4126f5:	sar    DWORD PTR [ecx+0x78],cl
  4126f8:	in     eax,0x55
  4126fa:	jno    0x41268a
  4126fc:	pop    ss
  4126fd:	push   ecx
  4126fe:	(bad)  
  4126ff:	jge    0x412686
  412701:	push   esi
  412702:	arpl   sp,cx
  412704:	add    al,0x8c
  412706:	test   BYTE PTR [ebx],al
  412708:	mov    ebx,0xca133fd9
  41270d:	sub    BYTE PTR [eax-0x1e],cl
  412710:	push   ebp
  412711:	sahf   
  412712:	or     bh,al
  412714:	xor    esi,DWORD PTR [eax]
  412716:	outs   dx,DWORD PTR ds:[esi]
  412717:	pop    edx
  412718:	mov    ah,0xfe
  41271a:	inc    ebx
  41271b:	xor    ah,al
  41271d:	ret    0xe333
  412720:	push   0x59
  412722:	cld    
  412723:	pop    ecx
  412724:	add    cl,BYTE PTR [ecx+0xfd5b27d]
  41272a:	mov    ch,0xff
  41272c:	and    al,0x19
  41272e:	mov    eax,0x395717c3
  412733:	inc    esp
  412734:	adc    eax,ebx
  412736:	repnz cs pop es
  412739:	jecxz  0x41272d
  41273b:	scas   al,BYTE PTR es:[edi]
  41273c:	xlat   BYTE PTR ds:[ebx]
  41273d:	xchg   ebp,eax
  41273e:	sti    
  41273f:	and    ah,BYTE PTR [esi+0x16]
  412742:	repz sub DWORD PTR [esi],0xffffffc2
  412746:	jp     0x4127a9
  412748:	pop    esi
  412749:	lea    ebp,[edx]
  41274b:	push   ebp
  41274c:	mov    ds:0xd5737c16,al
  412751:	(bad)  [ebx]
  412753:	ja     0x412755
  412755:	mov    dl,0x48
  412757:	div    DWORD PTR [edi+eax*4]
  41275a:	xor    DWORD PTR [ecx+0x3a],eax
  41275d:	test   al,0x7c
  41275f:	add    DWORD PTR [edx],0x8bd4a83d
  412765:	mov    ebx,eax
  412767:	push   esp
  412768:	ret    0x2b28
  41276b:	(bad)  
  41276c:	cld    
  41276d:	out    0x92,eax
  41276f:	(bad)  
  412770:	adc    al,0xc4
  412772:	(bad)  
  412773:	xchg   edx,eax
  412774:	dec    esi
  412775:	mov    ebp,DWORD PTR [ebx-0x1dba0124]
  41277b:	pushf  
  41277c:	repnz sub al,0x3f
  41277f:	stos   DWORD PTR es:[edi],eax
  412780:	hlt    
  412781:	mov    WORD PTR [ecx-0x1a],cs
  412784:	sbb    eax,0x110607d8
  412789:	dec    ecx
  41278a:	add    BYTE PTR [ecx],0x7c
  41278d:	in     al,dx
  41278e:	jae    0x4127f5
  412790:	faddp  st(3),st
  412792:	iret   
  412793:	pop    esi
  412794:	jno    0x41275c
  412796:	es ss push dx
  41279a:	jbe    0x41277f
  41279c:	ss pop eax
  41279e:	shl    DWORD PTR [eax-0x6e834f32],1
  4127a4:	jmp    0x2ecc2c8f
  4127a9:	aad    0xc7
  4127ab:	ss push es
  4127ad:	or     BYTE PTR ds:0x4cc234ab,cl
  4127b3:	shl    BYTE PTR [ebp+ebp*4+0x13e5bf86],0xaa
  4127bb:	mov    bh,0x1d
  4127bd:	mov    esi,0x52f00e90
  4127c2:	or     DWORD PTR [ebx+edx*1+0x25e71b74],ebx
  4127c9:	in     eax,dx
  4127ca:	pop    ebx
  4127cb:	stos   DWORD PTR es:[edi],eax
  4127cc:	xchg   edi,eax
  4127cd:	add    bh,BYTE PTR [ebx+eiz*4-0xe]
  4127d1:	iret   
  4127d2:	cdq    
  4127d3:	sahf   
  4127d4:	repnz pusha 
  4127d6:	loopne 0x4127ed
  4127d8:	fbstp  TBYTE PTR [ebp-0xf]
  4127db:	repnz xor al,0x13
  4127de:	stc    
  4127df:	dec    edx
  4127e0:	enter  0xbbff,0x43
  4127e4:	leave  
  4127e5:	push   esi
  4127e6:	test   eax,0xc591b43e
  4127eb:	dec    ebp
  4127ec:	push   0xffffffa4
  4127ee:	mov    BYTE PTR [esi+0x380dee3f],dh
  4127f4:	sbb    eax,0xed3c2c0c
  4127f9:	aaa    
  4127fa:	jmp    0x9fe49d4
  4127ff:	addr16 push ebp
  412801:	jae    0x41285e
  412803:	adc    ch,al
  412805:	fbld   TBYTE PTR [ecx-0x7a]
  412808:	mov    ds:0x8c2fd00f,al
  41280d:	stc    
  41280e:	fcmovb st,st(2)
  412810:	push   0xdf773273
  412815:	std    
  412816:	xchg   edx,eax
  412817:	in     eax,0x36
  412819:	mov    esp,0x2d958a6a
  41281e:	clc    
  41281f:	jb     0x4127b3
  412821:	adc    edi,DWORD PTR [eax+0xfb6a4d0]
  412827:	and    al,0x6c
  412829:	jg     0x412867
  41282b:	jne    0x412895
  41282d:	mov    cl,0xd7
  41282f:	pop    ds
  412830:	mov    ch,0xd4
  412832:	sub    al,0x8a
  412834:	in     al,0x8e
  412836:	and    edx,ecx
  412838:	mov    al,0x26
  41283a:	push   esp
  41283b:	dec    ebp
  41283c:	or     eax,0x9705282f
  412841:	bound  ebp,QWORD PTR [edx+0x9080071]
  412847:	inc    ecx
  412848:	add    al,0x18
  41284a:	dec    eax
  41284b:	jl     0x4127f9
  41284d:	ins    DWORD PTR es:[edi],dx
  41284e:	pop    edx
  41284f:	xor    BYTE PTR [ecx],0x33
  412852:	fwait
  412853:	sub    ch,BYTE PTR ds:0x2d7d34d
  412859:	jg     0x412898
  41285b:	or     bl,cl
  41285d:	call   0x981d:0x593571b1
  412864:	add    edx,0xffffffb9
  412867:	push   ss
  412868:	daa    
  412869:	sbb    BYTE PTR [edi-0x89c7894],ah
  41286f:	cmp    eax,0x8c7fbefe
  412874:	fcomp  DWORD PTR [ebp+0x2b]
  412877:	sahf   
  412878:	(bad)  
  412879:	rcl    BYTE PTR [ebp-0x43],0xd3
  41287d:	icebp  
  41287e:	jp     0x412800
  412880:	icebp  
  412881:	lods   al,BYTE PTR ds:[esi]
  412882:	xlat   BYTE PTR ds:[ebx]
  412883:	add    ecx,DWORD PTR [esi+0x4f316b87]
  412889:	inc    ecx
  41288a:	jns    0x41286e
  41288c:	das    
  41288d:	loope  0x4128f9
  41288f:	loope  0x412840
  412891:	mov    cl,0xbe
  412893:	and    BYTE PTR [edi-0x15],dl
  412896:	sbb    al,0xc
  412898:	fstp   QWORD PTR [edi]
  41289a:	jl     0x4128d4
  41289c:	jp     0x4128b2
  41289e:	mov    edi,0x50ba1cdc
  4128a3:	pop    es
  4128a4:	adc    BYTE PTR [edi+0x35],bh
  4128a7:	push   ecx
  4128a8:	sbb    eax,0x905b0cd6
  4128ad:	mov    WORD PTR [eax+0x5c],?
  4128b0:	inc    esi
  4128b1:	dec    ebp
  4128b2:	or     bh,BYTE PTR [edx]
  4128b4:	xlat   BYTE PTR ds:[ebx]
  4128b5:	pop    esp
  4128b6:	jo     0x41289a
  4128b8:	(bad)  
  4128b9:	retf   0x2cbe
  4128bc:	pop    esi
  4128bd:	gs call 0x324a5e11
  4128c3:	imul   ecx,DWORD PTR fs:[ecx+ebp*8+0x75],0x8ffb82b1
  4128cc:	outs   dx,DWORD PTR ds:[esi]
  4128cd:	scas   al,BYTE PTR es:[edi]
  4128ce:	push   esp
  4128cf:	xor    BYTE PTR [edx],ah
  4128d1:	int    0x5e
  4128d3:	(bad)  
  4128d5:	pop    esi
  4128d6:	int    0x21
  4128d8:	retf   
  4128d9:	sbb    al,0xd1
  4128db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128dc:	out    dx,al
  4128dd:	aad    0xbb
  4128df:	addr16 mov al,ds:0xa693
  4128e3:	xor    cl,dh
  4128e5:	addr16 cmp ch,ch
  4128e8:	mov    cl,0x44
  4128ea:	call   0xa942316e
  4128ef:	jbe    0x412889
  4128f1:	iret   
  4128f2:	jmp    0x1d6539eb
  4128f7:	sub    BYTE PTR [esi+0x5bdf0c20],dh
  4128fd:	retf   0x6803
  412900:	or     eax,0x91681925
  412905:	push   edi
  412906:	js     0x4128e4
  412908:	jmp    0x412898
  41290a:	xchg   BYTE PTR [edx+eax*4],bl
  41290d:	cdq    
  41290e:	repnz mov al,0x1c
  412911:	adc    dl,ah
  412913:	data16 adc BYTE PTR [ecx+0x2e],dh
  412917:	dec    ecx
  412918:	in     al,dx
  412919:	and    esp,DWORD PTR [ebx-0x7f9463ec]
  41291f:	pusha  
  412920:	and    eax,0x2973fdf9
  412926:	inc    BYTE PTR [ebx-0x13a92523]
  41292c:	int    0xd4
  41292e:	xchg   ebx,eax
  41292f:	mov    dl,0x74
  412931:	popa   
  412932:	shl    cl,cl
  412934:	popf   
  412935:	call   0x47f:0x18e7d0a9
  41293c:	xchg   BYTE PTR [eax-0x50],bl
  41293f:	sub    DWORD PTR [eax+0x6f9899e4],edi
  412945:	pop    esi
  412946:	je     0x412974
  412948:	push   ss
  412949:	pop    esi
  41294a:	lods   eax,DWORD PTR ds:[esi]
  41294b:	sahf   
  41294c:	or     ebx,DWORD PTR [edx+0x20]
  41294f:	repz pop esp
  412951:	retf   0x8ae0
  412954:	(bad)  
  412955:	pop    esi
  412957:	les    esi,FWORD PTR [edx-0x5a]
  41295a:	xchg   ecx,eax
  41295b:	xchg   edi,eax
  41295c:	scas   al,BYTE PTR es:[edi]
  41295d:	mov    bl,0x21
  41295f:	xchg   edx,eax
  412960:	popa   
  412961:	ret    0xda79
  412964:	or     ch,dl
  412966:	sbb    al,BYTE PTR [esi+ebp*4]
  412969:	mov    dl,0xa3
  41296b:	fdivr  QWORD PTR [eax]
  41296d:	mov    edx,0x59c0a6a7
  412972:	(bad)  [ecx+0x3c]
  412975:	retf   0xf048
  412978:	xor    ch,bh
  41297a:	push   edx
  41297b:	fisttp QWORD PTR [eax]
  41297d:	dec    esp
  41297e:	aas    
  41297f:	adc    DWORD PTR [ebx+0x7906bcf4],ebp
  412985:	sbb    eax,0x2ac4c6a7
  41298a:	jmp    0xc152:0xa555905e
  412991:	fstp   TBYTE PTR [ecx+0x55fbc894]
  412997:	cmp    ah,BYTE PTR [esi+0x5d34fa41]
  41299d:	scas   al,BYTE PTR es:[edi]
  41299e:	ret    0xc1c0
  4129a1:	push   esi
  4129a2:	jmp    0x201f:0xc212fa4b
  4129a9:	dec    edx
  4129aa:	or     BYTE PTR [ebx+0x669fdb1d],0x9c
  4129b1:	adc    al,0x37
  4129b3:	int    0x64
  4129b5:	leave  
  4129b6:	scas   eax,DWORD PTR es:[edi]
  4129b7:	ins    BYTE PTR es:[edi],dx
  4129b8:	xor    al,0xf7
  4129ba:	jb     0x4129d2
  4129bc:	sbb    edi,DWORD PTR [ebp+edx*2-0x5f]
  4129c0:	loop   0x4129a4
  4129c2:	or     ecx,DWORD PTR [edx+0x2b]
  4129c5:	pushf  
  4129c6:	add    eax,0xcc5ab545
  4129cb:	jns    0x412991
  4129cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129ce:	les    ebx,FWORD PTR [eax+0x59]
  4129d1:	mov    bl,0x8f
  4129d3:	test   al,0x51
  4129d5:	and    al,0x95
  4129d7:	mov    ?,ebx
  4129d9:	dec    ecx
  4129da:	lds    bp,DWORD PTR [eax+0xf24ee15]
  4129e1:	add    bh,BYTE PTR [edx+0xd127bf9]
  4129e7:	leave  
  4129e8:	sbb    DWORD PTR [edx-0x3e],0xffffffa3
  4129ec:	or     eax,ecx
  4129ee:	cwde   
  4129ef:	mov    ds:0xf79ebe87,eax
  4129f4:	mov    eax,0x269fb4c9
  4129f9:	jecxz  0x412a37
  4129fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129fc:	sbb    dh,bl
  4129fe:	inc    esi
  4129ff:	mov    eax,0x33f4c02
  412a04:	add    esp,eax
  412a06:	or     DWORD PTR ds:0xa970e66a,edi
  412a0c:	pop    esi
  412a0d:	lds    esp,FWORD PTR [edi-0x1311b23c]
  412a13:	push   eax
  412a14:	sbb    ebx,ebp
  412a16:	push   es
  412a17:	lods   eax,DWORD PTR ds:[esi]
  412a18:	jno    0x4129cd
  412a1a:	inc    ecx
  412a1b:	inc    edi
  412a1c:	adc    edi,ebx
  412a1e:	mov    ah,0xc7
  412a20:	dec    esp
  412a21:	and    BYTE PTR [ebx+0x31f9bbe8],bh
  412a27:	sbb    eax,0x29896661
  412a2c:	aaa    
  412a2d:	mov    dl,0xe
  412a2f:	call   0x6de635d8
  412a34:	dec    eax
  412a35:	outs   dx,DWORD PTR ds:[esi]
  412a36:	jl     0x412a51
  412a38:	sbb    dl,BYTE PTR [edx]
  412a3a:	test   edx,ebx
  412a3c:	xchg   edx,eax
  412a3d:	cs fsin 
  412a40:	fiadd  WORD PTR [ebp-0x7b47e1e9]
  412a46:	aad    0x14
  412a48:	fild   DWORD PTR [eax-0x45]
  412a4b:	xchg   bl,cl
  412a4d:	jmp    0xdc9e:0x560ab818
  412a54:	dec    ebx
  412a55:	dec    ecx
  412a56:	pop    edi
  412a57:	mov    dl,0xcf
  412a59:	xchg   ebp,eax
  412a5a:	loopne 0x412a07
  412a5c:	idiv   DWORD PTR [ebx+0x707424f8]
  412a62:	sbb    edi,DWORD PTR [eax+0x72]
  412a65:	dec    ebx
  412a66:	test   BYTE PTR [esi-0x6c],dl
  412a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a6a:	(bad)  
  412a6b:	cld    
  412a6c:	xor    BYTE PTR [edx],ch
  412a6e:	neg    DWORD PTR [ebx]
  412a70:	xlat   BYTE PTR ds:[ebx]
  412a71:	das    
  412a72:	mov    edx,0x60227d2a
  412a77:	gs loopne 0x412a99
  412a7a:	sahf   
  412a7b:	(bad)  
  412a7c:	adc    eax,DWORD PTR [edi]
  412a7e:	pop    ds
  412a7f:	(bad)
  412a83:	lahf   
  412a84:	jno    0x412a66
  412a86:	mov    esi,0xa0241683
  412a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a8c:	xlat   BYTE PTR ds:[ebx]
  412a8d:	adc    esp,DWORD PTR [eax+0x3e]
  412a90:	out    0x74,eax
  412a92:	retf   0x606
  412a95:	dec    DWORD PTR [edi]
  412a97:	xchg   dh,dh
  412a99:	mov    cs,WORD PTR ds:0x285d3c20
  412a9f:	pop    esp
  412aa0:	sbb    al,BYTE PTR [edi-0x1988fde2]
  412aa6:	jbe    0x412a98
  412aa8:	out    0x79,eax
  412aaa:	in     eax,dx
  412aab:	pop    ecx
  412aac:	fldenv [eax-0xc5b7022]
  412ab2:	push   edx
  412ab3:	cmp    BYTE PTR [esi],al
  412ab5:	aas    
  412ab6:	rcl    BYTE PTR [edi],cl
  412ab8:	fstp   TBYTE PTR [ebp+0xf53989e]
  412abe:	pop    edi
  412abf:	xor    BYTE PTR [edx-0x8],al
  412ac2:	rcl    DWORD PTR [eax+0x54d9ce0a],cl
  412ac8:	ret    
  412ac9:	or     dh,cl
  412acb:	cmp    al,0x9
  412acd:	dec    esp
  412ace:	cmp    BYTE PTR [eax-0x7c],0xfe
  412ad2:	pop    esi
  412ad3:	pusha  
  412ad4:	sub    eax,0x75b3a3ed
  412ad9:	mov    dl,0xf7
  412adb:	mov    ds:0xdd4a78dd,al
  412ae0:	adc    edi,DWORD PTR [edi+ebx*1]
  412ae3:	sub    BYTE PTR [edi],ch
  412ae5:	xor    ch,dl
  412ae7:	sar    BYTE PTR [esi+0x2df46ca0],0x2c
  412aee:	sub    eax,0xeb8cc6a4
  412af3:	xchg   esi,eax
  412af4:	cli    
  412af5:	(bad)  
  412af7:	mov    BYTE PTR [edx+0x4d],dl
  412afa:	std    
  412afb:	mov    dh,0x56
  412afd:	fadd   QWORD PTR [esi]
  412aff:	(bad)  
  412b00:	xor    al,0x3f
  412b02:	inc    esp
  412b03:	iret   
  412b04:	dec    edx
  412b05:	mov    ch,0x44
  412b07:	jo     0x412aec
  412b09:	das    
  412b0a:	push   edx
  412b0b:	sbb    DWORD PTR [edi+0x28],ebp
  412b0e:	xor    al,cl
  412b10:	pop    esp
  412b11:	mov    cs,edi
  412b13:	mov    ds,WORD PTR [esp+esi*8]
  412b16:	lds    edx,FWORD PTR [ebx-0x7]
  412b19:	ror    BYTE PTR [edx+0x60639fba],cl
  412b1f:	dec    ebx
  412b20:	arpl   WORD PTR [ebx-0x31ebace3],cx
  412b26:	pop    edi
  412b27:	rcr    BYTE PTR [edi],1
  412b29:	jb     0x412b63
  412b2b:	jbe    0x412aef
  412b2d:	sbb    esi,esi
  412b2f:	sbb    BYTE PTR [ebx],ah
  412b31:	pop    eax
  412b32:	mov    eax,0x76f67dbe
  412b37:	mov    bl,0x97
  412b39:	nop
  412b3a:	ror    BYTE PTR [edi+esi*2-0x17e3f82c],cl
  412b41:	xchg   edx,eax
  412b42:	mov    BYTE PTR [edi],ch
  412b44:	push   es
  412b45:	hlt    
  412b46:	enter  0x14a3,0x26
  412b4a:	xchg   ebp,eax
  412b4b:	in     eax,dx
  412b4c:	imul   esi,DWORD PTR [ecx],0x7c
  412b4f:	cmc    
  412b50:	mov    dl,BYTE PTR [ebx]
  412b52:	icebp  
  412b53:	pushf  
  412b54:	mov    ebx,0x3af09eb
  412b59:	adc    bh,ah
  412b5b:	jge    0x412b8d
  412b5d:	pop    edi
  412b5e:	ret    
  412b5f:	adc    ecx,edx
  412b61:	outs   dx,BYTE PTR ds:[esi]
  412b62:	and    BYTE PTR [eax-0x34],cl
  412b65:	cmp    BYTE PTR [edx-0x4222470b],0x30
  412b6c:	inc    eax
  412b6d:	lods   eax,DWORD PTR ds:[esi]
  412b6e:	or     bh,BYTE PTR [esi+eax*1]
  412b71:	mov    bl,0xa3
  412b73:	or     eax,0x37a5c87a
  412b78:	and    BYTE PTR [edi+eax*2],cl
  412b7b:	cmp    bl,BYTE PTR [edi]
  412b7d:	aas    
  412b7e:	std    
  412b7f:	stc    
  412b80:	leave  
  412b81:	out    dx,al
  412b82:	jge    0x412b9b
  412b84:	cwde   
  412b85:	jg     0x412ba4
  412b87:	pop    edx
  412b88:	sub    ch,cl
  412b8a:	mov    eax,ds:0x4ce2033a
  412b8f:	(bad)  
  412b90:	gs adc eax,0x80817d03
  412b96:	xor    cl,cl
  412b98:	sub    edx,DWORD PTR [eax-0x35]
  412b9b:	lahf   
  412b9c:	and    cl,BYTE PTR [edx-0x133b475d]
  412ba2:	mov    dh,0xcb
  412ba4:	les    ebp,FWORD PTR [ecx]
  412ba6:	fs stc 
  412ba8:	inc    edx
  412ba9:	repz idiv BYTE PTR [eax-0x7]
  412bad:	cmp    eax,0x5cd69587
  412bb2:	sbb    dl,al
  412bb4:	sub    eax,0x79cac6d4
  412bb9:	adc    eax,0xbe01eeb1
  412bbe:	fmulp  st(0),st
  412bc0:	mov    eax,ds:0xf307bb69
  412bc5:	arpl   WORD PTR [esi+0x5ae7bb6f],bp
  412bcb:	int    0x17
  412bcd:	lahf   
  412bce:	imul   dl
  412bd0:	sbb    BYTE PTR [ecx],al
  412bd2:	sub    BYTE PTR [ebp-0x53c2cb0e],0x6e
  412bd9:	in     al,0xc9
  412bdb:	inc    ebx
  412bdc:	mov    esp,0x16057421
  412be1:	stc    
  412be2:	repz add eax,0x5ade0096
  412be8:	ja     0x412c1e
  412bea:	es sbb eax,0xc13686eb
  412bf0:	enter  0x394b,0x7c
  412bf4:	shl    DWORD PTR [eax-0x6f],cl
  412bf7:	ret    
  412bf8:	(bad)  
  412bf9:	xlat   BYTE PTR ds:[ebx]
  412bfa:	xchg   ebp,eax
  412bfb:	sbb    al,0x22
  412bfd:	fisubr WORD PTR [ebx+0xc]
  412c00:	or     ebx,ecx
  412c02:	dec    ebp
  412c03:	mov    dh,0xda
  412c05:	xchg   BYTE PTR [esi-0x79fe5f76],cl
  412c0b:	add    DWORD PTR [ebp-0xcd9521c],eax
  412c11:	xor    ebp,esi
  412c13:	das    
  412c14:	jns    0x412c4f
  412c16:	add    DWORD PTR [edi+eiz*4+0x5f],edi
  412c1a:	cmp    edx,DWORD PTR [ebp+0x71]
  412c1d:	xor    BYTE PTR [ecx+edi*4-0x3e],dh
  412c21:	push   es
  412c22:	ds cld 
  412c24:	imul   edx,ecx,0x146134da
  412c2a:	cmp    al,0x46
  412c2c:	ins    DWORD PTR es:[edi],dx
  412c2d:	and    ebx,ecx
  412c2f:	jmp    0x96f2:0xe684793a
  412c36:	scas   eax,DWORD PTR es:[edi]
  412c37:	bound  esi,QWORD PTR [ecx]
  412c39:	scas   eax,DWORD PTR es:[edi]
  412c3a:	lds    eax,FWORD PTR ds:0x2e377f8e
  412c40:	dec    ebx
  412c41:	mov    ds:0xe9446d62,al
  412c46:	lea    ebx,[esi]
  412c48:	jae    0x412c07
  412c4a:	mov    eax,ds:0x6068a565
  412c4f:	xchg   ecx,eax
  412c50:	xor    ecx,eax
  412c52:	sti    
  412c53:	cmp    ebx,DWORD PTR [edi+esi*2]
  412c56:	mov    ds:0x718a6dbc,al
  412c5b:	and    DWORD PTR [edi+0x4d],edi
  412c5e:	cld    
  412c5f:	dec    esp
  412c60:	jecxz  0x412c10
  412c62:	mov    edx,0x7d90225
  412c67:	outs   dx,BYTE PTR ds:[esi]
  412c68:	inc    ecx
  412c69:	pop    ds
  412c6a:	retf   
  412c6b:	ds mov eax,eax
  412c6e:	in     eax,0x83
  412c70:	std    
  412c71:	out    dx,eax
  412c72:	sbb    BYTE PTR [edi-0x70714fa9],al
  412c78:	push   edx
  412c79:	iret   
  412c7a:	mov    ch,0x50
  412c7c:	pop    ebx
  412c7d:	inc    esp
  412c7e:	push   cs
  412c7f:	add    DWORD PTR [ebx-0xe],ebx
  412c82:	ficom  DWORD PTR [ecx+edi*4]
  412c85:	outs   dx,BYTE PTR ds:[esi]
  412c86:	sbb    BYTE PTR cs:[ebp+0x7c4c90f7],0xa5
  412c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c8f:	cwde   
  412c90:	shr    BYTE PTR [ecx+0x2],0x35
  412c94:	add    eax,DWORD PTR [edx+0x4599ca17]
  412c9a:	mov    bh,0x67
  412c9c:	jo     0x412c75
  412c9e:	dec    edx
  412c9f:	lds    eax,FWORD PTR [ecx+0x1f9f0608]
  412ca5:	inc    esi
  412ca6:	jne    0x412ca7
  412ca8:	not    DWORD PTR ds:0xabaa7a47
  412cae:	mov    al,0x13
  412cb0:	or     esp,esp
  412cb2:	lahf   
  412cb3:	sub    BYTE PTR ds:0x8633d0fb,0xa3
  412cba:	imul   esp,DWORD PTR [ebp-0x13],0xfffffff9
  412cbe:	add    bh,BYTE PTR [edi+0x38e501c3]
  412cc4:	sub    eax,0x7abb881e
  412cc9:	jae    0x412d42
  412ccb:	aam    0x3b
  412ccd:	xchg   ecx,eax
  412cce:	mov    bl,0xb7
  412cd0:	jae    0x412ce4
  412cd2:	or     DWORD PTR [eax+0x38ef7123],0xe507356e
  412cdc:	cmc    
  412cdd:	ret    0xc0ee
  412ce0:	mov    cl,0x3b
  412ce2:	test   al,0x59
  412ce4:	out    dx,al
  412ce5:	mov    eax,0x61435277
  412ceb:	adc    eax,0x6cab90d5
  412cf0:	sub    eax,0x3fcf1bee
  412cf5:	xor    ah,dl
  412cf7:	rcr    BYTE PTR [edi],cl
  412cf9:	lods   al,BYTE PTR ds:[esi]
  412cfa:	pop    edi
  412cfb:	xchg   edx,eax
  412cfc:	test   al,0x4a
  412cfe:	lods   al,BYTE PTR ds:[esi]
  412cff:	repnz add DWORD PTR [eax+eiz*2+0x17d4eae4],edi
  412d07:	rcl    eax,0x3e
  412d0a:	out    0xe,eax
  412d0c:	call   0x7c31:0x3c6a8803
  412d13:	pusha  
  412d14:	mov    edi,0x151a3166
  412d19:	pop    ebx
  412d1a:	rcl    cl,1
  412d1c:	bound  ebp,QWORD PTR ds:0xf3b6629a
  412d22:	fwait
  412d23:	or     eax,0xac4a3b07
  412d28:	(bad)  [eax]
  412d2a:	jo     0x412caf
  412d2c:	sub    eax,0x37650ad9
  412d31:	adc    dh,BYTE PTR [edx+0x1ede9375]
  412d37:	clc    
  412d38:	jne    0x412d4f
  412d3a:	or     al,0xbe
  412d3c:	mov    esi,0x93e6e517
  412d41:	enter  0x2220,0x3d
  412d45:	mov    es,WORD PTR [ecx-0xd]
  412d48:	js     0x412d73
  412d4a:	popf   
  412d4b:	cmp    eax,0x1c9a4aa4
  412d50:	and    ah,bl
  412d52:	sub    BYTE PTR [edi+esi*1-0x777e5038],al
  412d59:	inc    ebx
  412d5a:	frstor [edx-0x4e]
  412d5d:	ss mov al,0x34
  412d60:	sub    al,0x9e
  412d62:	jne    0x412d62
  412d64:	mov    dh,0xdc
  412d66:	into   
  412d67:	inc    esi
  412d68:	pusha  
  412d69:	push   es
  412d6a:	out    0x28,eax
  412d6c:	daa    
  412d6d:	icebp  
  412d6e:	push   ebx
  412d6f:	and    eax,0xeee38ba5
  412d74:	popf   
  412d75:	dec    edi
  412d76:	jne    0x412d38
  412d78:	xor    eax,0x1aee7c54
  412d7d:	repnz push 0x4eca5553
  412d83:	jle    0x412d07
  412d85:	clc    
  412d86:	push   ss
  412d87:	jb     0x412d75
  412d89:	ja     0x412d1b
  412d8b:	sbb    DWORD PTR ds:0xf4410369,esp
  412d91:	cmp    cl,BYTE PTR [edi-0x3f]
  412d94:	cmp    cl,BYTE PTR [edi-0x45c76b6]
  412d9a:	jne    0x412dfa
  412d9c:	(bad)  [ecx-0x4140fe6b]
  412da2:	jbe    0x412e10
  412da4:	fsubr  DWORD PTR [ecx+0x79]
  412da7:	das    
  412da8:	jmp    0x412d54
  412daa:	add    al,0x66
  412dac:	mov    al,ds:0x52339dea
  412db1:	aas    
  412db2:	mov    al,0x23
  412db4:	daa    
  412db5:	cmp    DWORD PTR [ecx+0x43],ebx
  412db8:	int    0x18
  412dba:	in     al,dx
  412dbb:	lea    ebx,[esi]
  412dbd:	int3   
  412dbe:	icebp  
  412dbf:	loope  0x412d47
  412dc1:	jp     0x412dd9
  412dc3:	icebp  
  412dc4:	jecxz  0x412d47
  412dc6:	sub    ah,ah
  412dc8:	pop    ebx
  412dc9:	dec    ebx
  412dca:	xor    al,0x9
  412dcc:	inc    ebp
  412dcd:	les    ebx,FWORD PTR [esi+0x1c978106]
  412dd3:	jle    0x412e09
  412dd5:	push   cs
  412dd6:	xor    bh,BYTE PTR [ebx+0x70800a3e]
  412ddc:	test   DWORD PTR [eax-0x33],edx
  412ddf:	call   0x1fbc:0xa3010726
  412de6:	aaa    
  412de7:	xor    bl,BYTE PTR [esi-0x5ec0799a]
  412ded:	jle    0x412e23
  412def:	scas   al,BYTE PTR es:[edi]
  412df0:	cmp    DWORD PTR [ecx-0x5],0xfffffff9
  412df4:	out    dx,al
  412df5:	pop    ds
  412df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412df7:	icebp  
  412df8:	dec    edi
  412df9:	mov    eax,0x20887df5
  412dfe:	pushf  
  412dff:	dec    edi
  412e00:	xchg   esp,eax
  412e01:	inc    ebx
  412e02:	mov    ch,0xd8
  412e04:	mov    ds:0x22c5dbf3,al
  412e09:	imul   esp,DWORD PTR [ebx+0x66],0x50
  412e0d:	inc    ebp
  412e0e:	pop    ebx
  412e0f:	imul   eax,DWORD PTR [eax],0x8358579c
  412e15:	cmp    BYTE PTR [ebx+0x391155b8],bl
  412e1b:	fs ja  0x412e2e
  412e1e:	cli    
  412e1f:	ret    0x1d69
  412e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e23:	mov    eax,0x35750aed
  412e28:	into   
  412e29:	cli    
  412e2a:	in     eax,dx
  412e2b:	in     eax,0xe1
  412e2d:	inc    ecx
  412e2e:	cmp    al,0x67
  412e30:	ja     0x412e1a
  412e32:	ins    DWORD PTR es:[edi],dx
  412e33:	xor    esi,ecx
  412e35:	sub    BYTE PTR [edx+0x5feb81aa],cl
  412e3b:	mov    ch,0x1b
  412e3d:	int3   
  412e3e:	add    al,0xe8
  412e40:	dec    ebp
  412e41:	ror    BYTE PTR [ebp+ebx*2+0x72],0x84
  412e46:	iret   
  412e47:	push   es
  412e48:	mov    eax,0xb8c62b6c
  412e4d:	test   eax,0xfd070ac
  412e52:	or     eax,0x7c82e72d
  412e57:	in     eax,0xaa
  412e59:	das    
  412e5a:	mov    WORD PTR [ecx+0x75bfeffc],cs
  412e60:	cmp    al,0x52
  412e62:	add    al,0x63
  412e64:	jo     0x412e1e
  412e66:	lods   eax,DWORD PTR ds:[esi]
  412e67:	lea    ebp,[esi]
  412e69:	fmul   st(1),st
  412e6b:	out    0x91,eax
  412e6d:	pop    es
  412e6e:	sar    DWORD PTR [esi-0x5b],cl
  412e71:	push   esi
  412e72:	stos   DWORD PTR es:[edi],eax
  412e73:	fcomi  st,st(2)
  412e75:	loopne 0x412e84
  412e77:	fild   QWORD PTR [edi+esi*2+0x23cd6182]
  412e7e:	jge    0x412e63
  412e80:	dec    ecx
  412e81:	mov    ecx,0xbe5c01cc
  412e86:	ja     0x412e10
  412e88:	xchg   eax,esi
  412e8a:	xchg   esp,eax
  412e8b:	arpl   bx,dx
  412e8d:	cmp    esi,DWORD PTR [edx-0xe400dd4]
  412e93:	jne    0x412e5c
  412e95:	adc    al,0xef
  412e97:	inc    ebp
  412e98:	sbb    edi,edx
  412e9a:	adc    edi,DWORD PTR ds:0xe162b65b
  412ea0:	dec    edi
  412ea1:	sub    DWORD PTR [eax+0x62],0x69
  412ea5:	cld    
  412ea6:	inc    eax
  412ea7:	call   0x23b01f75
  412eac:	enter  0xacb1,0xdc
  412eb0:	call   DWORD PTR [edi+eiz*4+0x0]
  412eb4:	inc    BYTE PTR [ebp-0x447acff4]
  412eba:	push   ebx
  412ebb:	push   ebx
  412ebc:	stos   DWORD PTR es:[edi],eax
  412ebd:	add    ch,dl
  412ebf:	icebp  
  412ec0:	aam    0x28
  412ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec3:	rol    BYTE PTR [ebx-0x9d864ba],cl
  412ec9:	enter  0xb9a2,0x82
  412ecd:	mov    edx,0x6fe51274
  412ed2:	out    0x69,al
  412ed4:	test   dl,0x93
  412ed7:	cdq    
  412ed8:	jecxz  0x412e63
  412eda:	lods   eax,DWORD PTR ds:[esi]
  412edb:	mov    esi,0xb0799cc2
  412ee0:	clc    
  412ee1:	pop    ss
  412ee2:	push   ds
  412ee3:	arpl   WORD PTR [ebx],bp
  412ee5:	sbb    eax,0x52abeda1
  412eea:	sbb    al,0x65
  412eec:	test   BYTE PTR [ebp-0x7a],dl
  412eef:	mov    dl,0x72
  412ef1:	ret    
  412ef2:	or     eax,0xf3b040fe
  412ef7:	push   cs
  412ef8:	xchg   esi,eax
  412ef9:	pop    es
  412efa:	jnp    0x412f75
  412efc:	rol    DWORD PTR ds:0x39f827a0,cl
  412f02:	inc    ebx
  412f03:	scas   al,BYTE PTR es:[edi]
  412f04:	inc    ecx
  412f05:	inc    esp
  412f06:	rcl    DWORD PTR [eax+0x15],0xdd
  412f0a:	js     0x412f69
  412f0c:	cwde   
  412f0d:	icebp  
  412f0e:	cmp    BYTE PTR [eax-0x56183152],cl
  412f14:	jmp    0xf50d3e13
  412f19:	cmp    ah,bl
  412f1b:	(bad)  
  412f1c:	mov    cl,0x56
  412f1e:	nop
  412f1f:	scas   eax,DWORD PTR es:[edi]
  412f20:	cmp    ch,BYTE PTR [bp+si+0xa]
  412f24:	adc    DWORD PTR [esp+esi*8+0x1ae32e95],ebp
  412f2b:	or     al,0xc9
  412f2d:	adc    al,BYTE PTR [edx-0x61]
  412f30:	retf   
  412f31:	ins    BYTE PTR es:[edi],dx
  412f32:	mov    DWORD PTR [edx+0x24],edi
  412f35:	push   ss
  412f36:	out    0x6a,eax
  412f38:	pushf  
  412f39:	xchg   edx,eax
  412f3a:	(bad)  
  412f3b:	in     eax,dx
  412f3c:	fist   WORD PTR [ecx+eiz*2-0x69]
  412f40:	test   BYTE PTR [ebx],ch
  412f42:	sub    DWORD PTR [eax-0x73],esp
  412f45:	popa   
  412f46:	repnz les edi,FWORD PTR [edx]
  412f49:	js     0x412f6f
  412f4b:	inc    ecx
  412f4c:	add    BYTE PTR ds:0x43e60dc8,0x58
  412f53:	cdq    
  412f54:	cld    
  412f55:	dec    esi
  412f56:	(bad)  
  412f57:	mov    bl,0xba
  412f59:	rcl    BYTE PTR [edx+edi*1-0x433a429b],1
  412f60:	mov    al,ds:0x634fd066
  412f65:	cmp    BYTE PTR [ecx],0x4a
  412f68:	add    ebx,DWORD PTR ds:0xc336abb9
  412f6e:	xor    DWORD PTR [esi-0x13],ebp
  412f71:	cli    
  412f72:	pop    es
  412f73:	xlat   BYTE PTR ds:[ebx]
  412f74:	stos   BYTE PTR es:[edi],al
  412f75:	or     ebp,DWORD PTR [edi-0x39]
  412f78:	cmp    al,0x3e
  412f7a:	mov    BYTE PTR ds:0xf1f9048b,bl
  412f80:	cdq    
  412f81:	and    cl,BYTE PTR [ebx+0x364a17f5]
  412f87:	in     eax,0x26
  412f89:	mov    WORD PTR [eax],ss
  412f8b:	xchg   edx,eax
  412f8c:	int3   
  412f8d:	inc    esp
  412f8e:	cmp    edx,DWORD PTR [eax-0x28c2d815]
  412f94:	aaa    
  412f95:	(bad)  
  412f96:	and    DWORD PTR [edi+0x3509024c],ebp
  412f9c:	repz cmp edx,DWORD PTR ds:[ecx-0x9]
  412fa1:	cmp    eax,0x47592d8c
  412fa6:	sub    al,0x2d
  412fa8:	inc    edx
  412fa9:	sub    al,0x5e
  412fab:	mov    edx,0xa0d25768
  412fb0:	or     DWORD PTR [edi+0x70],0xffffff89
  412fb4:	cmp    eax,0x341a3da1
  412fb9:	pop    esi
  412fba:	sbb    BYTE PTR [edi],cl
  412fbc:	ret    0x70a8
  412fbf:	not    DWORD PTR [ecx-0x1f]
  412fc2:	test   al,0x44
  412fc4:	pop    es
  412fc5:	mov    dh,0xe8
  412fc7:	push   0xef3555b1
  412fcc:	loopne 0x412f5d
  412fce:	add    eax,0x3dfad6f4
  412fd3:	hlt    
  412fd4:	jnp    0x412f91
  412fd6:	xchg   esp,eax
  412fd7:	fist   WORD PTR [esi+0x51]
  412fda:	and    bl,bh
  412fdc:	pushf  
  412fdd:	xor    BYTE PTR [edx-0x7c],ah
  412fe0:	jnp    0x412fe2
  412fe2:	sahf   
  412fe3:	cld    
  412fe4:	jns    0x412ffd
  412fe6:	mov    ch,0xca
  412fe8:	and    BYTE PTR ds:0x4f08ff75,al
  412fee:	mov    edx,0xaa216685
  412ff3:	in     al,0xa3
  412ff5:	mov    bl,0x7f
  412ff7:	lods   al,BYTE PTR ds:[esi]
  412ff8:	pop    ss
  412ff9:	push   ds
  412ffa:	ds mov al,0x4
  412ffd:	stc    
  412ffe:	add    al,0x4b
  413000:	adc    edi,ebp
  413002:	mov    esp,0x455a28e1
  413007:	mov    DWORD PTR [esi+0x26],esp
  41300a:	mov    ebx,0xae6badea
  41300f:	pop    es
  413010:	ins    DWORD PTR es:[edi],dx
  413011:	std    
  413012:	lea    ebp,[ecx+0x45]
  413015:	(bad)  
  413016:	mov    ah,0x26
  413018:	mov    al,ds:0x3094aa59
  41301d:	cdq    
  41301e:	mov    ch,0x16
  413020:	sub    bh,BYTE PTR [esi-0x2]
  413023:	ror    ebx,0x8c
  413026:	sbb    edx,esi
  413028:	add    eax,DWORD PTR [ecx-0x13db2ff2]
  41302e:	shl    DWORD PTR [ecx+0x59],cl
  413031:	jge    0x412fc4
  413033:	add    BYTE PTR [ebp-0x3d],bl
  413036:	rcl    BYTE PTR [ebx],1
  413038:	jp     0x41308d
  41303a:	or     ebx,ecx
  41303c:	std    
  41303d:	inc    ebp
  41303e:	aas    
  41303f:	cmp    BYTE PTR [esi+0x17],ah
  413042:	jbe    0x41303e
  413044:	xchg   edx,eax
  413045:	xor    ah,bh
  413047:	jno    0x413076
  413049:	hlt    
  41304a:	mov    esp,0x6c825477
  41304f:	mov    edi,0xc61a6067
  413054:	jnp    0x413094
  413056:	nop
  413057:	int    0xc
  413059:	push   edx
  41305a:	cmp    esp,DWORD PTR [edi+0x63]
  41305d:	cvtdq2ps xmm6,xmm4
  413060:	outs   dx,BYTE PTR ds:[esi]
  413061:	dec    ebp
  413062:	aas    
  413063:	inc    ebx
  413064:	xchg   edi,eax
  413065:	pop    esi
  413066:	or     BYTE PTR [ecx-0x3a],cl
  413069:	fmul   DWORD PTR [ebp-0x1e]
  41306c:	cmp    bl,cl
  41306e:	push   edx
  41306f:	xor    al,0x45
  413071:	aaa    
  413072:	(bad)  
  413074:	in     eax,0x1e
  413076:	in     al,0x29
  413078:	mov    ah,0xa2
  41307b:	ror    DWORD PTR [ebp-0x3e61167],1
  413081:	jnp    0x413033
  413083:	ds jmp 0x81999022
  413089:	pop    edx
  41308a:	sbb    al,0x66
  41308c:	aam    0x32
  41308e:	push   ebx
  41308f:	sahf   
  413090:	xchg   ecx,eax
  413091:	xor    eax,DWORD PTR [ecx-0x5a]
  413094:	fdiv   QWORD PTR [ecx-0x29]
  413097:	nop
  413098:	test   eax,0x3a970b20
  41309d:	imul   ebx,DWORD PTR [ecx+ebp*4],0x1c
  4130a1:	aas    
  4130a2:	stos   DWORD PTR es:[edi],eax
  4130a3:	jge    0x413082
  4130a5:	xchg   esp,eax
  4130a6:	int3   
  4130a7:	add    cl,BYTE PTR [eax+0x197ae7c6]
  4130ad:	and    BYTE PTR ds:0x8afb6ad5,al
  4130b3:	in     eax,0x2b
  4130b5:	retf   
  4130b6:	push   0xc4c9f737
  4130bb:	mov    bh,BYTE PTR [edi+0x65]
  4130be:	or     edi,edi
  4130c0:	xchg   ecx,eax
  4130c1:	test   BYTE PTR [esi+0x2],bl
  4130c4:	mov    ds:0x1c897c4,eax
  4130c9:	cmp    eax,0xe88ce1e6
  4130ce:	jb     0x413066
  4130d0:	loopne 0x4130de
  4130d2:	mov    DWORD PTR [edx-0x1c7914d],esi
  4130d8:	test   DWORD PTR ds:0x84891acf,esp
  4130de:	mov    ebp,0x912e1df2
  4130e3:	xchg   edx,esp
  4130e5:	pusha  
  4130e6:	mov    ds:0x13033116,eax
  4130eb:	test   DWORD PTR [edx-0x2c35dec2],ebp
  4130f1:	push   edx
  4130f2:	and    eax,DWORD PTR [ebp+0x7cbdfe2b]
  4130f8:	inc    edx
  4130f9:	adc    DWORD PTR [ecx],0xffffff92
  4130fc:	xchg   esp,eax
  4130fd:	jp     0x413123
  4130ff:	mov    DWORD PTR [edi+0x6d0a9e80],esp
  413105:	xchg   dh,al
  413107:	bound  ebp,QWORD PTR ds:0xee223b36
  41310d:	inc    edx
  41310e:	and    DWORD PTR [edx+0x743d86c],eax
  413114:	mov    ds:0x3c08dd6c,al
  413119:	sub    edi,eax
  41311b:	in     eax,0x11
  41311d:	ret    
  41311e:	jne    0x4130e6
  413120:	xor    BYTE PTR [esp+edx*4+0x3179506e],dl
  413127:	add    al,0x72
  413129:	lahf   
  41312a:	mov    esp,0xb30f4b5a
  41312f:	je     0x4130f7
  413131:	or     ah,ah
  413133:	mov    eax,ds:0x4923a9dd
  413138:	add    al,BYTE PTR [edi]
  41313a:	(bad)  
  41313b:	cli    
  41313c:	jecxz  0x41319b
  41313e:	inc    edx
  41313f:	mov    bl,BYTE PTR [edi+ebp*8+0x59]
  413143:	nop
  413144:	ss ret 0x8ebf
  413148:	rcr    BYTE PTR [esi],cl
  41314a:	cmp    ebx,edx
  41314c:	call   0x1bec:0xcfb387ed
  413153:	aam    0xbe
  413155:	mov    ebp,0xe8021fcc
  41315a:	in     eax,dx
  41315b:	jno    0x413147
  41315d:	xor    DWORD PTR [eax-0x51a3a57a],eax
  413163:	(bad)  
  413164:	cmp    eax,DWORD PTR [esi-0xf]
  413167:	mov    eax,0xe7404667
  41316c:	jmp    0xbca6:0x5db23b2f
  413173:	int    0x2e
  413175:	cdq    
  413176:	sar    DWORD PTR [ecx-0x61],cl
  413179:	test   eax,esp
  41317b:	push   edi
  41317c:	jo     0x413142
  41317e:	adc    eax,0x263d0b50
  413183:	fwait
  413184:	sub    al,dh
  413186:	adc    ah,ch
  413188:	mov    ds:0x7961a9c5,eax
  41318d:	xor    BYTE PTR [edx+0x31f249bd],dh
  413193:	sahf   
  413194:	retf   0xe7b2
  413197:	stos   BYTE PTR es:[edi],al
  413198:	pusha  
  413199:	pop    esp
  41319a:	jnp    0x413123
  41319c:	cmp    esp,DWORD PTR [ebp-0x548a531a]
  4131a2:	popa   
  4131a3:	pop    edi
  4131a4:	and    BYTE PTR ds:0x23be128c,dh
  4131aa:	pop    edx
  4131ab:	mov    ebx,esi
  4131ad:	in     al,dx
  4131ae:	dec    esi
  4131af:	and    DWORD PTR [edi],ebp
  4131b1:	xchg   DWORD PTR ds:[ecx-0x7],edi
  4131b5:	and    ebp,ebx
  4131b7:	je     0x4131a4
  4131b9:	fist   DWORD PTR [esi]
  4131bb:	jl     0x413221
  4131bd:	loopne 0x413150
  4131bf:	or     bh,BYTE PTR [ebx+edi*4]
  4131c2:	and    BYTE PTR [esi],ch
  4131c4:	outs   dx,BYTE PTR ds:[esi]
  4131c5:	bnd jg 0x4131ea
  4131c8:	outs   dx,DWORD PTR ds:[esi]
  4131c9:	scas   eax,DWORD PTR es:[edi]
  4131ca:	cmp    bl,BYTE PTR [edi]
  4131cc:	mov    bl,0x48
  4131ce:	cdq    
  4131cf:	xchg   dl,al
  4131d1:	(bad)  
  4131d3:	pop    ss
  4131d4:	jmp    0x232a4612
  4131d9:	mov    DWORD PTR [esi-0x3b],ecx
  4131dc:	xchg   DWORD PTR [eax+0x2d70039],ebp
  4131e2:	jnp    0x41319e
  4131e4:	mov    eax,gs:0x64d214c
  4131ea:	jle    0x4131d9
  4131ec:	mov    dl,0xfb
  4131ee:	retf   0xb77d
  4131f1:	push   ecx
  4131f2:	xchg   DWORD PTR [edi-0x40e6a705],ebp
  4131f8:	xor    DWORD PTR [ebp+0x5169ce21],ebp
  4131fe:	fist   DWORD PTR [edx+0x7317427e]
  413204:	mov    edi,DWORD PTR [ebp-0x5d]
  413207:	hlt    
  413208:	sub    esi,DWORD PTR [edi-0x51]
  41320b:	and    ebp,DWORD PTR [edi-0x6788ba9f]
  413211:	add    edx,edi
  413213:	push   0xfffffff8
  413215:	(bad)  
  413216:	shl    BYTE PTR [ebp+0x795398b3],cl
  41321c:	pop    ebx
  41321d:	dec    ebp
  41321e:	adc    al,0x4d
  413220:	jge    0x413217
  413222:	(bad)  
  413223:	fsubr  DWORD PTR [ebx+esi*8+0x1d3492de]
  41322a:	imul   ecx,DWORD PTR ds:0x7362655d,0xffffffef
  413231:	int3   
  413232:	cwde   
  413233:	mov    bl,0xe0
  413235:	dec    edx
  413236:	loopne 0x41325e
  413238:	dec    eax
  413239:	enter  0x9398,0x61
  41323d:	cmp    eax,0x6b05a01d
  413242:	pop    eax
  413243:	dec    esp
  413244:	cmc    
  413245:	or     bl,BYTE PTR [edi-0x16df28b6]
  41324b:	js     0x4131fc
  41324d:	fdiv   st(1),st
  41324f:	add    DWORD PTR [ecx-0x68283d13],ecx
  413255:	sub    DWORD PTR [edi],edi
  413257:	add    al,0x2c
  413259:	xor    bl,BYTE PTR [ecx]
  41325b:	pop    es
  41325c:	jg     0x413230
  41325e:	ret    0x265d
  413261:	adc    edx,edx
  413263:	sub    DWORD PTR [eax+0x21],edx
  413266:	xor    dl,ch
  413268:	stc    
  413269:	mov    ebx,0x37e28001
  41326e:	out    dx,al
  41326f:	push   0xffffff81
  413271:	xchg   esp,eax
  413272:	fwait
  413273:	xchg   edx,eax
  413274:	push   ss
  413275:	mov    eax,ds:0x8caa101e
  41327a:	(bad)
  41327d:	test   al,ah
  41327f:	mov    eax,ds:0x506f40e2
  413284:	or     al,0x2b
  413286:	repnz adc BYTE PTR cs:[ebx+0x91d34f3],0xc9
  41328f:	sub    BYTE PTR ds:[edx+0x63f01545],dl
  413296:	enter  0x13f4,0xf8
  41329a:	push   ecx
  41329b:	(bad)  
  41329c:	int    0x39
  41329e:	bound  eax,QWORD PTR [esi]
  4132a0:	mov    bh,0x88
  4132a2:	and    bh,al
  4132a4:	or     edi,DWORD PTR [esi+0x76]
  4132a7:	(bad)  
  4132a8:	(bad)  
  4132a9:	xchg   ebx,eax
  4132aa:	int    0xc4
  4132ac:	push   esp
  4132ad:	dec    eax
  4132ae:	add    eax,0x2a1428da
  4132b3:	aad    0x28
  4132b5:	push   ds
  4132b6:	scas   al,BYTE PTR es:[edi]
  4132b7:	mov    bh,0x62
  4132b9:	in     eax,0xa4
  4132bb:	test   eax,0xaede15e0
  4132c0:	in     al,0x75
  4132c2:	push   0x74
  4132c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132c5:	sbb    BYTE PTR [ebx-0x79],0x2b
  4132c9:	out    0x2f,al
  4132cb:	jb     0x413334
  4132cd:	retf   0x1372
  4132d0:	(bad)  [ecx]
  4132d2:	iret   
  4132d3:	mov    al,ds:0x63bfa11b
  4132d8:	ja     0x413359
  4132da:	inc    edx
  4132db:	pop    esi
  4132dc:	loope  0x41327a
  4132de:	dec    eax
  4132df:	out    dx,al
  4132e0:	pusha  
  4132e1:	ret    
  4132e2:	adc    al,0x1a
  4132e4:	sbb    DWORD PTR [ebx+edx*8-0x1f],ebx
  4132e8:	push   ss
  4132e9:	sub    BYTE PTR [ebx],al
  4132eb:	(bad)  
  4132ec:	out    dx,al
  4132ed:	mov    ah,0x29
  4132ef:	mul    DWORD PTR [ecx-0x5738c842]
  4132f5:	sub    edx,DWORD PTR [edx+ecx*4+0x6512598]
  4132fc:	mov    edx,ebx
  4132fe:	pop    ecx
  4132ff:	mov    dl,0x60
  413301:	or     eax,0x10c7b5c2
  413306:	cmp    edi,DWORD PTR [eax+0x34a4e28]
  41330c:	stc    
  41330d:	in     al,0xf4
  41330f:	out    dx,eax
  413310:	push   edi
  413311:	or     eax,ebx
  413313:	push   edx
  413314:	dec    esp
  413315:	popf   
  413316:	or     BYTE PTR [ebx+0x7a662c57],bl
  41331c:	cmp    BYTE PTR [ebx],ah
  41331e:	xlat   BYTE PTR ds:[ebx]
  41331f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413320:	sti    
  413321:	in     eax,dx
  413322:	aas    
  413323:	mov    ah,0x96
  413325:	push   0xffffffbe
  413327:	mov    ah,0xa
  413329:	out    0x29,eax
  41332b:	xchg   ebx,eax
  41332c:	fistp  WORD PTR [ebp+0x0]
  41332f:	(bad)  
  413331:	or     dl,BYTE PTR [eax-0x55]
  413334:	push   0xffffffd2
  413336:	cli    
  413337:	add    al,0xa8
  413339:	xchg   esi,eax
  41333a:	out    0x99,eax
  41333c:	push   cs
  41333d:	ret    0xd2de
  413340:	push   ecx
  413341:	nop
  413342:	data16 mov al,ds:0x4436e08f
  413348:	(bad)  
  41334a:	pop    eax
  41334b:	or     al,BYTE PTR [esi+ebp*4+0x29]
  41334f:	in     al,0x20
  413351:	loop   0x41339d
  413353:	add    BYTE PTR [ecx],bl
  413355:	daa    
  413356:	add    bh,bl
  413358:	sub    DWORD PTR [eax+0x48c4a641],ebx
  41335e:	call   0x7c7b12ec
  413363:	fwait
  413364:	daa    
  413365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413366:	and    BYTE PTR [edi],0x45
  413369:	test   ch,0xd9
  41336c:	stos   DWORD PTR es:[edi],eax
  41336d:	jle    0x4132fe
  41336f:	fmul   QWORD PTR [ecx+0x5a59cc5d]
  413375:	push   eax
  413376:	mov    eax,ds:0x93da90ca
  41337b:	pop    ebp
  41337c:	out    0x82,eax
  41337e:	mul    DWORD PTR [eax+eiz*1]
  413381:	add    esp,ebp
  413383:	jg     0x4133d8
  413385:	sub    al,0xe4
  413387:	pop    ecx
  413388:	push   ss
  413389:	fwait
  41338a:	in     eax,0x28
  41338c:	pop    es
  41338d:	loopne 0x4133fc
  41338f:	sub    eax,0xb59245c
  413394:	mov    DWORD PTR [edx-0x3f],0x2186be38
  41339b:	pop    edx
  41339c:	push   es
  41339d:	push   0xbe16b604
  4133a2:	cmp    ch,BYTE PTR [eax-0x10]
  4133a5:	inc    ecx
  4133a6:	ss mov ecx,0xcd2c7f13
  4133ac:	push   ss
  4133ad:	adc    DWORD PTR [ebx-0x2b],ecx
  4133b0:	call   0x4b461c36
  4133b5:	je     0x41333d
  4133b7:	scas   eax,DWORD PTR es:[edi]
  4133b8:	call   0x2a44:0x4de87b2c
  4133bf:	cmp    DWORD PTR ds:0xb2967f5f,0xffffff9a
  4133c6:	jbe    0x413403
  4133c8:	xchg   ecx,eax
  4133c9:	stos   DWORD PTR es:[edi],eax
  4133ca:	cmp    al,0x17
  4133cc:	pop    ebx
  4133cd:	jge    0x413443
  4133cf:	rcr    ah,0xc4
  4133d2:	lock xchg esi,eax
  4133d4:	icebp  
  4133d5:	clc    
  4133d6:	and    DWORD PTR [esi+0x38c677c0],0x61
  4133dd:	xor    eax,0xff8ae9b3
  4133e2:	xchg   ebp,eax
  4133e3:	adc    dh,BYTE PTR [esi]
  4133e5:	and    eax,0x84e1f087
  4133ea:	push   esp
  4133eb:	inc    edi
  4133ec:	js     0x41337e
  4133ee:	jp     0x4133ab
  4133f0:	mov    dl,0xf0
  4133f2:	in     al,0x0
  4133f4:	and    DWORD PTR [eax+0x8a9b46f],0xc6bbefe0
  4133fe:	in     eax,dx
  4133ff:	mul    BYTE PTR [eax+edx*4+0x78]
  413403:	mov    esp,0x4945fb4b
  413408:	push   0x57c25741
  41340d:	mov    esp,0x6446ef04
  413412:	aaa    
  413413:	xchg   DWORD PTR [ecx],eax
  413415:	jno    0x413462
  413417:	int    0x45
  413419:	fisub  DWORD PTR [ebp+0x789fe957]
  41341f:	jle    0x41343c
  413421:	or     al,0x83
  413423:	in     al,0xe2
  413425:	popa   
  413426:	mov    edx,0x78326b54
  41342b:	jo     0x4133bc
  41342d:	xchg   DWORD PTR [ebp+eax*8-0x1e],eax
  413431:	xor    BYTE PTR [ebp-0x7c],ch
  413434:	mov    ds:0x3c1317f6,eax
  413439:	xlat   BYTE PTR ds:[ebx]
  41343a:	pop    eax
  41343b:	in     eax,0xd6
  41343d:	std    
  41343e:	push   ecx
  41343f:	or     eax,0x8bfcdda3
  413444:	jge    0x4134b5
  413446:	xchg   ebx,eax
  413447:	popa   
  413448:	lahf   
  413449:	cmp    eax,0x9c5e63ae
  41344e:	jle    0x413466
  413450:	pop    ds
  413451:	xchg   DWORD PTR [edi+0x2778358e],ecx
  413457:	outs   dx,DWORD PTR ds:[esi]
  413458:	inc    esp
  413459:	imul   edi,esi,0x6b8807f6
  41345f:	jo     0x4134bc
  413461:	icebp  
  413462:	xor    esp,DWORD PTR [edx-0x64]
  413465:	mov    dl,0xba
  413467:	inc    edx
  413468:	sub    DWORD PTR [edi],eax
  41346a:	inc    esi
  41346b:	xor    esp,eax
  41346d:	dec    esi
  41346e:	shl    DWORD PTR [eax],1
  413470:	ret    0xfc73
  413473:	call   0xef209a20
  413478:	out    0xe0,eax
  41347a:	mov    dl,0x70
  41347c:	cmp    eax,0x1b5cec1c
  413481:	clc    
  413482:	jo     0x413481
  413484:	jns    0x4134c3
  413486:	xchg   ebp,edx
  413488:	or     ch,BYTE PTR [eax+0x21536a2]
  41348e:	shl    DWORD PTR [edi+ebx*8],cl
  413491:	xchg   edi,eax
  413492:	cmp    ebp,DWORD PTR [ecx+0x601c2d7a]
  413498:	into   
  413499:	jnp    0x41344b
  41349b:	and    eax,0xe4545fce
  4134a0:	cmp    DWORD PTR [esi+0x37cd2e07],0xffffffa1
  4134a7:	xor    BYTE PTR [ebp+0x79],al
  4134aa:	in     eax,dx
  4134ab:	xchg   ecx,eax
  4134ac:	in     eax,dx
  4134ad:	push   cs
  4134ae:	test   al,0xca
  4134b0:	adc    dh,cl
  4134b2:	sub    DWORD PTR cs:[eax+esi*8+0x2b259328],edx
  4134ba:	jge    0x4134e5
  4134bc:	clc    
  4134bd:	and    eax,eax
  4134bf:	adc    DWORD PTR [ebx-0x44],ebx
  4134c2:	jnp    0x4134e0
  4134c4:	adc    DWORD PTR [edx+eiz*2-0x1e0a23e4],eax
  4134cb:	ins    DWORD PTR es:[edi],dx
  4134cc:	das    
  4134cd:	shl    DWORD PTR [eax+edi*2-0x1],1
  4134d1:	jg     0x4134b0
  4134d3:	push   esi
  4134d4:	push   edi
  4134d5:	iret   
  4134d6:	adc    ch,bl
  4134d8:	jmp    0x7a5:0x3a2cf759
  4134df:	mov    esi,0xeeee1d0f
  4134e4:	lds    ecx,FWORD PTR [esi]
  4134e6:	push   es
  4134e7:	cmp    esp,esi
  4134e9:	fs push eax
  4134eb:	dec    edi
  4134ec:	xor    ebx,DWORD PTR [ebx+eiz*4]
  4134ef:	test   DWORD PTR [ebp+0x79],esi
  4134f2:	jb     0x41348d
  4134f4:	xor    eax,0x22b3ec23
  4134f9:	test   al,0x53
  4134fb:	outs   dx,DWORD PTR ds:[esi]
  4134fc:	jb     0x4134d7
  4134fe:	jp     0x4134ec
  413500:	mov    cl,BYTE PTR [edx]
  413502:	mov    bl,0xdb
  413504:	scas   al,BYTE PTR es:[edi]
  413505:	mov    edi,0x52817f62
  41350a:	jle    0x41352a
  41350c:	dec    esi
  41350d:	push   esi
  41350e:	mov    al,0x7e
  413510:	inc    esp
  413511:	or     dl,0x55
  413514:	pop    ecx
  413515:	(bad)  
  413517:	inc    ebp
  413518:	mov    ch,0xee
  41351a:	pop    esi
  41351b:	in     eax,dx
  41351c:	cmp    eax,0xff91a323
  413521:	cmp    esp,DWORD PTR [esi]
  413523:	movsx  ecx,BYTE PTR [edx-0x16b347d8]
  41352a:	jge    0x413594
  41352c:	sub    bh,BYTE PTR [edx-0x22]
  41352f:	jnp    0x4134d6
  413531:	dec    esi
  413532:	call   0x194a:0xee4aab2
  413539:	add    al,0x38
  41353b:	jno    0x41353a
  41353d:	mov    eax,0xd7839636
  413542:	aas    
  413543:	adc    al,BYTE PTR [esi+0x357a592c]
  413549:	xchg   ebx,eax
  41354a:	cmp    al,0xff
  41354c:	aam    0xe7
  41354e:	adc    ebp,ebp
  413550:	(bad)  
  413552:	mov    ds:0xf5e286a9,al
  413557:	dec    ebp
  413558:	stos   BYTE PTR es:[edi],al
  413559:	push   ebp
  41355a:	lock sub DWORD PTR [eax+esi*8],ebx
  41355e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41355f:	test   al,0xa3
  413561:	adc    dh,BYTE PTR [ecx+ebp*4]
  413564:	fld    QWORD PTR [eax+0x44f390b7]
  41356a:	sub    al,0xba
  41356c:	push   0x32
  41356e:	add    eax,0xe3704af4
  413573:	clc    
  413574:	xchg   edi,eax
  413575:	in     al,dx
  413576:	dec    esi
  413577:	mov    esi,0xbd7bc700
  41357c:	int    0xb4
  41357e:	mov    edx,esi
  413580:	(bad)  
  413581:	mov    dh,0x58
  413583:	bound  ebp,QWORD PTR [esi+0x6d9e581a]
  413589:	int    0x45
  41358b:	sub    ch,BYTE PTR gs:[ebx]
  41358e:	and    ah,dh
  413590:	push   es
  413591:	sub    BYTE PTR [esi-0x4b],ch
  413594:	in     eax,dx
  413595:	lahf   
  413596:	mov    WORD PTR [ebx+0x8],es
  413599:	in     al,dx
  41359a:	out    0x6d,eax
  41359c:	shl    ch,cl
  41359e:	leave  
  41359f:	xchg   esp,eax
  4135a0:	in     al,dx
  4135a1:	xchg   esi,eax
  4135a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135a3:	fwait
  4135a4:	jns    0x413526
  4135a6:	jnp    0x413601
  4135a8:	lahf   
  4135a9:	cmc    
  4135aa:	push   edx
  4135ab:	dec    eax
  4135ac:	mov    dh,BYTE PTR [esi]
  4135ae:	mov    esi,0x35018e9b
  4135b3:	jnp    0x4135f6
  4135b5:	sub    al,0xeb
  4135b7:	add    DWORD PTR [eax],ebp
  4135b9:	dec    edi
  4135ba:	daa    
  4135bb:	dec    ecx
  4135bc:	xor    dl,dl
  4135be:	jns    0x413629
  4135c0:	dec    ebx
  4135c1:	out    dx,eax
  4135c2:	push   ds
  4135c3:	mov    dh,0x30
  4135c5:	xlat   BYTE PTR ds:[ebx]
  4135c6:	mov    WORD PTR [esi+0x5f8954bd],?
  4135cc:	stos   BYTE PTR es:[edi],al
  4135cd:	xchg   ebx,eax
  4135ce:	sbb    dl,cl
  4135d0:	shl    DWORD PTR [ebx-0x50],0x2b
  4135d4:	out    dx,al
  4135d5:	jl     0x41356b
  4135d7:	retf   0x3fb2
  4135da:	inc    ebx
  4135db:	outs   dx,BYTE PTR ds:[esi]
  4135dc:	(bad)  
  4135dd:	jmp    0xf15d4030
  4135e2:	into   
  4135e3:	xchg   ebp,eax
  4135e4:	dec    ebp
  4135e5:	in     eax,dx
  4135e6:	inc    edx
  4135e7:	inc    ebp
  4135e8:	sub    BYTE PTR [ecx-0x51c7ac3c],dl
  4135ee:	mov    BYTE PTR [esi-0x13209cff],cl
  4135f4:	push   0x49
  4135f6:	adc    BYTE PTR ds:0xe77f31ac,bh
  4135fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135fd:	imul   edx,DWORD PTR [eax+0x45],0x3e988fff
  413604:	jecxz  0x4135d5
  413606:	or     edx,esp
  413608:	fdivr  st,st(6)
  41360a:	hlt    
  41360b:	icebp  
  41360c:	pusha  
  41360d:	push   eax
  41360e:	inc    ebx
  41360f:	dec    esp
  413610:	jnp    0x413674
  413612:	fist   WORD PTR [edx]
  413614:	nop
  413615:	mov    ebp,DWORD PTR [eax]
  413617:	gs call 0xe2cf:0x42e863d3
  41361f:	outs   dx,DWORD PTR ds:[esi]
  413620:	jbe    0x413610
  413622:	aad    0x78
  413624:	les    esi,FWORD PTR [ebx]
  413626:	gs jmp 0x41365c
  413629:	dec    ebx
  41362a:	cdq    
  41362b:	xor    dh,dl
  41362d:	into   
  41362e:	int3   
  41362f:	push   esp
  413630:	push   ecx
  413631:	jge    0x4135df
  413633:	arpl   WORD PTR [esi+ebx*8-0x3947179f],bx
  41363a:	cmp    al,BYTE PTR [ecx+0x16]
  41363d:	mov    ecx,0x68bb0676
  413642:	imul   esp,DWORD PTR [edx+0x697bd18e],0x3e0ce50
  41364c:	out    0xb0,al
  41364e:	cmp    al,bl
  413650:	outs   dx,BYTE PTR ds:[esi]
  413651:	pop    esi
  413652:	dec    ecx
  413653:	jle    0x4136c8
  413655:	push   es
  413656:	push   ss
  413657:	or     DWORD PTR [eax-0x565947c0],edi
  41365d:	xor    eax,0x77e3c1cd
  413662:	in     al,0x72
  413664:	inc    ebp
  413665:	xchg   esi,eax
  413666:	ins    BYTE PTR es:[edi],dx
  413667:	inc    esp
  413668:	sbb    eax,0x46b8115d
  41366d:	out    0x85,al
  41366f:	jl     0x413690
  413671:	cwde   
  413672:	data16 rol bl,0x7a
  413676:	lea    ebx,[edi-0x21]
  413679:	ret    
  41367a:	(bad)  
  41367b:	xchg   ecx,eax
  41367c:	jbe    0x41362b
  41367e:	into   
  41367f:	mov    ch,0xe
  413681:	call   0xad85f8eb
  413686:	or     bh,bh
  413688:	xchg   esi,eax
  413689:	push   es
  41368a:	jl     0x4136c6
  41368c:	jmp    0x4136d5
  41368e:	stos   DWORD PTR es:[edi],eax
  41368f:	push   ds
  413690:	add    DWORD PTR [eax+0x66],0xc10079d2
  413697:	fidiv  DWORD PTR [edi]
  413699:	(bad)  
  41369a:	ss push edi
  41369c:	mov    ds,WORD PTR [ebx]
  41369e:	repnz mov ebp,0x7cb7ad08
  4136a4:	jns    0x41364a
  4136a6:	cli    
  4136a7:	into   
  4136a8:	int    0xd5
  4136aa:	fsub   QWORD PTR [edx]
  4136ac:	popa   
  4136ad:	dec    ebx
  4136ae:	mov    fs,WORD PTR [edi-0x234566b0]
  4136b4:	aam    0xe6
  4136b6:	div    BYTE PTR [edx+0x19]
  4136b9:	mov    ah,BYTE PTR [eax]
  4136bb:	cmp    esp,esi
  4136bd:	jmp    0x28c3f5ed
  4136c2:	and    ch,BYTE PTR [ecx-0x46]
  4136c5:	int    0x1d
  4136c7:	mov    bh,0xd5
  4136c9:	xchg   edi,eax
  4136ca:	push   ds
  4136cb:	lods   al,BYTE PTR ds:[esi]
  4136cc:	xchg   esi,eax
  4136cd:	out    0x46,eax
  4136cf:	popf   
  4136d0:	xor    ebx,DWORD PTR [esi-0x6d171ae2]
  4136d6:	out    0x60,al
  4136d8:	mov    dl,bl
  4136da:	test   DWORD PTR [edx-0x3b7e1d86],ebp
  4136e0:	xor    DWORD PTR es:[ebp-0xb],eax
  4136e4:	stc    
  4136e5:	out    0x96,al
  4136e7:	loope  0x413688
  4136e9:	mov    ch,0x80
  4136eb:	mov    esp,0x7712591e
  4136f0:	(bad)  
  4136f2:	xor    al,0xe3
  4136f4:	pop    ecx
  4136f5:	adc    DWORD PTR [esi+0x16],esp
  4136f8:	and    DWORD PTR [eax+0x61],0xe1b317d4
  4136ff:	(bad)  
  413700:	aaa    
  413701:	das    
  413702:	ret    
  413703:	push   ebp
  413704:	jb     0x41374a
  413706:	ja     0x4136ce
  413708:	pop    edi
  413709:	dec    ebx
  41370a:	sub    al,0x20
  41370c:	cld    
  41370d:	adc    DWORD PTR ds:0xe8e956a0,ecx
  413713:	aas    
  413714:	leave  
  413715:	sbb    dl,cl
  413717:	ja     0x413705
  413719:	inc    esp
  41371a:	shl    bh,1
  41371c:	mov    ebp,0x9d47e88
  413721:	push   esi
  413722:	dec    edi
  413723:	pop    ecx
  413724:	clc    
  413725:	sti    
  413726:	lods   al,BYTE PTR ds:[esi]
  413727:	jbe    0x413753
  413729:	clc    
  41372a:	xchg   esi,eax
  41372b:	out    0x25,eax
  41372d:	mov    eax,0xcb94f948
  413732:	jne    0x41377b
  413734:	loopne 0x413750
  413736:	xor    eax,DWORD PTR [edx+0x46291cc7]
  41373c:	inc    edx
  41373d:	add    ebp,0x436743b
  413743:	les    esp,FWORD PTR [esi]
  413745:	mov    ebp,0x86ce46a6
  41374a:	jmp    0x2a5b:0x68b6b0ff
  413751:	jg     0x41377b
  413753:	pop    es
  413754:	repz mov eax,0xabdae376
  41375a:	jne    0x41377b
  41375c:	xchg   edx,eax
  41375d:	push   ds
  41375e:	pusha  
  41375f:	adc    ecx,DWORD PTR [ebp+0x522b685]
  413765:	mov    dl,0xe9
  413767:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413769:	nop
  41376a:	add    BYTE PTR [eax+0x642dbb81],dl
  413770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413771:	adc    edi,DWORD PTR [ecx-0x3c]
  413774:	icebp  
  413775:	fs daa 
  413777:	test   DWORD PTR [esi+ecx*2],ecx
  41377a:	repnz sbb bl,BYTE PTR [edx+0x4b]
  41377e:	inc    esi
  41377f:	and    BYTE PTR [ebx-0x79ff630b],al
  413785:	cli    
  413786:	iret   
  413787:	adc    ebp,eax
  413789:	pop    eax
  41378a:	in     al,0x5f
  41378c:	dec    ebp
  41378d:	jne    0x413778
  41378f:	pop    eax
  413790:	jmp    0xf3bbe457
  413795:	push   ebp
  413796:	mov    cl,0x14
  413798:	xor    cl,BYTE PTR [edi+0x3d]
  41379b:	pop    esi
  41379c:	mov    ds:0xdfde75f4,eax
  4137a1:	dec    ebx
  4137a2:	les    esp,FWORD PTR [edx+0xce1cf13]
  4137a8:	out    0xd1,eax
  4137aa:	xchg   DWORD PTR [ecx],edx
  4137ac:	push   cs
  4137ad:	(bad)  
  4137ae:	fild   QWORD PTR [esp+ebx*8+0x7]
  4137b2:	jbe    0x41380f
  4137b4:	lea    esp,[edx+0x54e34363]
  4137ba:	out    0x33,eax
  4137bc:	add    esi,DWORD PTR [ecx-0x39]
  4137bf:	jae    0x4137ef
  4137c1:	shr    BYTE PTR [ecx+0x51],0xd3
  4137c5:	jle    0x41377b
  4137c7:	rcr    DWORD PTR [eax-0x5d],cl
  4137ca:	inc    DWORD PTR [eax-0x7dd2ace7]
  4137d0:	add    al,BYTE PTR [esi-0x20de7f6f]
  4137d6:	adc    BYTE PTR [eax],ah
  4137d8:	loop   0x4137cb
  4137da:	cmc    
  4137db:	int3   
  4137dc:	or     eax,0x651d675b
  4137e1:	into   
  4137e2:	push   edx
  4137e3:	dec    esi
  4137e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137e5:	jmp    0x4137ed
  4137e7:	(bad)  
  4137e8:	jg     0x4137e5
  4137ea:	jns    0x4137d4
  4137ec:	jae    0x413830
  4137ee:	sub    ecx,ebp
  4137f0:	retf   
  4137f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137f2:	sti    
  4137f3:	test   BYTE PTR [esi+esi*2-0x7e],cl
  4137f7:	mov    cl,0xd4
  4137f9:	addr16 cs pop eax
  4137fc:	pop    ecx
  4137fd:	aas    
  4137fe:	adc    DWORD PTR [edx],esp
  413800:	sbb    DWORD PTR [esi-0x6],esp
  413803:	repz adc eax,0x48b5003d
  413809:	test   eax,0xfe5419b1
  41380e:	mov    ?,WORD PTR [ebx-0x31]
  413811:	pusha  
  413812:	push   esi
  413813:	(bad)  
  413814:	ds push esp
  413816:	inc    eax
  413817:	into   
  413818:	add    BYTE PTR [edx-0x37d95576],ch
  41381e:	mov    edx,0xa7375c90
  413823:	jmp    0x506f557c
  413828:	out    dx,al
  413829:	cli    
  41382a:	loope  0x413825
  41382c:	push   ebp
  41382d:	pushw  0xffc6
  413830:	ret    0xb693
  413833:	les    esp,FWORD PTR [edx+0x33]
  413836:	adc    al,0xeb
  413838:	pop    ss
  413839:	inc    esi
  41383a:	xchg   edi,eax
  41383b:	xchg   ecx,eax
  41383c:	pop    esi
  41383d:	arpl   WORD PTR [ebx-0x42273400],cx
  413843:	mov    al,ds:0x5187bdb9
  413848:	fwait
  413849:	iret   
  41384a:	mov    ebp,0x6e898df4
  41384f:	das    
  413850:	mov    esp,0xb49f64d8
  413855:	cli    
  413856:	in     al,0xdf
  413858:	xchg   ebx,eax
  413859:	pop    ss
  41385a:	and    cl,BYTE PTR [ecx-0x169f5b31]
  413860:	bound  ecx,QWORD PTR cs:0xd7b258ee
  413867:	jno    0x413890
  413869:	cmp    esp,DWORD PTR [eax]
  41386b:	cdq    
  41386c:	or     BYTE PTR [esi],0xf3
  41386f:	jno    0x413875
  413871:	mov    ecx,0xe4baf1b1
  413876:	loop   0x4138a7
  413878:	stc    
  413879:	or     bh,bl
  41387b:	cmp    BYTE PTR [esi+0x1c8653db],ah
  413881:	or     DWORD PTR [eax+0x7c],0x9427c409
  413888:	lock xor cl,BYTE PTR [edx-0x6d]
  41388c:	cmp    eax,0xd62ef5a7
  413891:	push   ebp
  413892:	sub    DWORD PTR [ebx+0x5f],0x3266c096
  413899:	out    0x5,eax
  41389b:	ins    DWORD PTR es:[edi],dx
  41389c:	imul   ecx,DWORD PTR ds:0x8ae4510b,0x6c
  4138a3:	and    ebx,DWORD PTR es:[ecx-0x64585928]
  4138aa:	push   ss
  4138ab:	sbb    ah,cl
  4138ad:	jge    0x41388b
  4138af:	ds push eax
  4138b1:	and    BYTE PTR [eax],bl
  4138b3:	es sub al,0x87
  4138b6:	sar    bh,0x67
  4138b9:	shl    BYTE PTR [esi-0x11],0x14
  4138bd:	xchg   esp,eax
  4138be:	fs jbe 0x4138c6
  4138c1:	cmp    al,0xdc
  4138c3:	ins    DWORD PTR es:[edi],dx
  4138c4:	and    al,0x7b
  4138c6:	lds    esi,FWORD PTR [edx]
  4138c8:	xor    DWORD PTR [eax+0x2],0xe0d9d284
  4138cf:	pop    ecx
  4138d0:	mov    esi,0xb357ca5f
  4138d5:	sbb    BYTE PTR [edx],al
  4138d7:	test   BYTE PTR [ecx+0x579deb2],ch
  4138dd:	loopne 0x413898
  4138df:	cmp    al,0x32
  4138e1:	out    0x79,al
  4138e3:	outs   dx,BYTE PTR ds:[esi]
  4138e4:	leave  
  4138e5:	push   cs
  4138e6:	push   esi
  4138e7:	jmp    0x2968:0xd34bbce8
  4138ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138ef:	leave  
  4138f0:	mov    WORD PTR ds:0x7dfa1d29,?
  4138f6:	inc    eax
  4138f7:	pop    ebx
  4138f8:	in     eax,0xa4
  4138fa:	popa   
  4138fb:	neg    DWORD PTR [edi-0x28a3d8a2]
  413901:	adc    esi,DWORD PTR [ecx+0x4d]
  413904:	and    eax,0xd623dfc7
  413909:	pushf  
  41390a:	jl     0x413970
  41390c:	inc    eax
  41390d:	sub    eax,edx
  41390f:	sti    
  413910:	inc    esi
  413911:	ins    DWORD PTR es:[edi],dx
  413912:	ds xor dl,bl
  413915:	clc    
  413916:	je     0x413905
  413918:	int3   
  413919:	retf   
  41391a:	push   edx
  41391b:	push   eax
  41391c:	(bad)  
  41391e:	stos   DWORD PTR es:[edi],eax
  41391f:	jbe    0x4138cd
  413921:	xor    ah,BYTE PTR [edi]
  413923:	int    0xb8
  413925:	xchg   edi,eax
  413926:	push   ebx
  413927:	jbe    0x41394c
  413929:	bound  eax,QWORD PTR [eax]
  41392b:	imul   edx
  41392d:	fld    QWORD PTR [edx]
  41392f:	mov    BYTE PTR [eax+0xe],al
  413932:	add    ah,BYTE PTR [ebx]
  413934:	mov    al,0x4d
  413936:	sahf   
  413937:	mov    esi,0xd213d4bc
  41393c:	and    eax,0xa9bddf72
  413941:	jecxz  0x413984
  413943:	jge    0x4138e7
  413945:	mov    dl,0x27
  413947:	enter  0x153a,0xc8
  41394b:	cdq    
  41394c:	clc    
  41394d:	xchg   ebx,eax
  41394e:	mov    cl,0x4c
  413950:	cli    
  413951:	out    dx,al
  413952:	push   ebx
  413953:	add    esp,DWORD PTR [ecx+0x24593c2c]
  413959:	(bad)  
  41395b:	xor    BYTE PTR [eax],0x41
  41395e:	pusha  
  41395f:	test   al,0xd6
  413961:	arpl   WORD PTR [ebx+edi*2+0x6290202b],bp
  413968:	into   
  413969:	cdq    
  41396a:	jle    0x4139db
  41396c:	aad    0x2
  41396e:	ret    
  41396f:	popa   
  413970:	scas   eax,DWORD PTR es:[edi]
  413971:	mov    edx,0x5f0e5922
  413976:	popa   
  413977:	pop    eax
  413978:	cs xchg esi,eax
  41397a:	mov    eax,0xfb88cd14
  41397f:	int    0xbb
  413981:	xor    BYTE PTR ds:0x963ae182,0x14
  413988:	push   ebx
  413989:	ins    BYTE PTR es:[edi],dx
  41398a:	outs   dx,BYTE PTR ds:[esi]
  41398b:	ins    BYTE PTR es:[edi],dx
  41398c:	aas    
  41398d:	inc    ecx
  41398e:	mov    ecx,0x8c3450d7
  413993:	xor    ch,ah
  413995:	or     ah,BYTE PTR [esi]
  413997:	rcl    DWORD PTR ds:0x5c6ced99,0x59
  41399e:	xor    DWORD PTR [esi-0x28],ebp
  4139a1:	aas    
  4139a2:	inc    ebx
  4139a3:	mov    ebp,0xcebe5bf8
  4139a8:	fistp  WORD PTR [ecx+0x79]
  4139ab:	mov    ebp,0x84e89d1b
  4139b0:	ret    0x4cf6
  4139b3:	loope  0x413a29
  4139b5:	cmove  esp,DWORD PTR [edx+0x1c88d0f7]
  4139bc:	and    DWORD PTR [ecx-0x31adcb41],esi
  4139c2:	call   0x376dd29a
  4139c7:	in     eax,dx
  4139c8:	ret    
  4139c9:	sbb    esi,eax
  4139cb:	push   ebx
  4139cc:	inc    ebp
  4139cd:	mov    al,0xb7
  4139cf:	push   esi
  4139d0:	mov    edi,0x3dcfa04a
  4139d5:	in     al,0x94
  4139d7:	std    
  4139d8:	push   edx
  4139d9:	(bad)  [esp+ebx*1+0x5b9d2b02]
  4139e0:	push   ecx
  4139e1:	ins    DWORD PTR es:[edi],dx
  4139e2:	add    BYTE PTR [edx],cl
  4139e4:	js     0x413a42
  4139e6:	xchg   esp,eax
  4139e7:	dec    edi
  4139e8:	enter  0x3bd1,0xf
  4139ec:	lea    edx,[edx]
  4139ee:	dec    esp
  4139ef:	xlat   BYTE PTR ds:[ebx]
  4139f0:	adc    eax,0xd708aa70
  4139f5:	push   0xffffffb0
  4139f7:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f9:	ins    DWORD PTR es:[edi],dx
  4139fa:	iret   
  4139fb:	cdq    
  4139fc:	psubd  mm4,mm2
  4139ff:	test   al,0x5f
  413a01:	sbb    DWORD PTR [ebp+0x293f4559],edx
  413a07:	call   0x1bf05034
  413a0c:	xchg   esi,eax
  413a0d:	in     al,dx
  413a0e:	lds    ebx,FWORD PTR [eax]
  413a10:	xlat   BYTE PTR ds:[ebx]
  413a11:	jae    0x413a2a
  413a13:	sub    al,BYTE PTR [ebx+esi*2-0x69]
  413a17:	xlat   BYTE PTR ss:[ebx]
  413a19:	in     al,dx
  413a1a:	test   BYTE PTR [ebx+eax*2-0x58],ah
  413a1e:	fsubr  QWORD PTR [edx+0x74b5f015]
  413a24:	shl    BYTE PTR [edi+0x3159a783],1
  413a2a:	mov    dh,0x74
  413a2c:	mov    ?,eax
  413a2e:	cmp    al,BYTE PTR [eax+eax*1-0x72e3766f]
  413a35:	xor    bl,BYTE PTR [esi+0x4f]
  413a38:	loope  0x413a37
  413a3a:	pop    ecx
  413a3b:	icebp  
  413a3c:	pop    ds
  413a3d:	imul   ebx,DWORD PTR gs:[esi],0xffffffc3
  413a41:	loop   0x413aa4
  413a43:	fwait
  413a44:	push   ds
  413a45:	stos   DWORD PTR es:[edi],eax
  413a46:	ret    
  413a47:	pop    ebx
  413a48:	inc    edi
  413a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a4a:	imul   BYTE PTR [edx+0x14bc8ee8]
  413a50:	ins    DWORD PTR es:[edi],dx
  413a51:	adc    cl,BYTE PTR [edx-0x7b588bd2]
  413a57:	pop    ebx
  413a58:	stc    
  413a59:	xchg   DWORD PTR [edx+0x28],edi
  413a5c:	mov    ecx,0xc4d330f
  413a61:	sub    DWORD PTR [edi-0x32],ebx
  413a64:	xor    BYTE PTR [eax],cl
  413a66:	add    dl,ch
  413a68:	cmp    dl,cl
  413a6a:	sub    BYTE PTR [ebp+0x53e9cf68],al
  413a70:	pop    ecx
  413a71:	add    al,BYTE PTR [edx-0x2302aa7e]
  413a77:	cld    
  413a78:	clc    
  413a79:	xor    DWORD PTR [esi],esi
  413a7b:	mov    dl,0x25
  413a7d:	ret    0x22c8
  413a80:	ss fwait
  413a82:	push   ss
  413a83:	cmp    BYTE PTR ds:0xd32f865a,al
  413a89:	jmp    0xf05d:0x2733e558
  413a90:	mov    eax,ds:0x365c2813
  413a95:	adc    esp,DWORD PTR [ebp+0x66ae6ac9]
  413a9b:	fs sti 
  413a9d:	fidivr WORD PTR [esi]
  413a9f:	cmp    BYTE PTR [eax-0x10],0xdf
  413aa3:	fcomp  DWORD PTR [ebx-0x1bdd587]
  413aa9:	sub    cl,BYTE PTR ds:[edi]
  413aac:	or     eax,DWORD PTR [eax-0x3db30bc4]
  413ab2:	(bad)  
  413ab3:	cmp    eax,0xd655a93f
  413ab8:	xchg   ebx,eax
  413ab9:	jge    0x413ad4
  413abb:	cmp    ecx,DWORD PTR ds:0x90cfdc89
  413ac1:	(bad)  
  413ac2:	clc    
  413ac3:	fst    DWORD PTR [ebx]
  413ac5:	out    0xa2,eax
  413ac7:	outs   dx,BYTE PTR ds:[esi]
  413ac8:	sbb    bl,BYTE PTR [ebp-0x76]
  413acb:	xchg   esi,eax
  413acc:	in     eax,dx
  413acd:	sbb    eax,0x53139480
  413ad2:	push   esi
  413ad3:	xor    bl,BYTE PTR [esi+edi*2]
  413ad6:	xor    bl,al
  413ad8:	out    dx,al
  413ad9:	fwait
  413ada:	sub    al,ch
  413adc:	jbe    0x413b2e
  413ade:	pop    esi
  413adf:	hlt    
  413ae0:	imul   edi,esi,0x77
  413ae3:	std    
  413ae4:	push   ebp
  413ae5:	in     eax,dx
  413ae6:	or     ebx,DWORD PTR [eax-0x52]
  413ae9:	or     edi,DWORD PTR [esi+0x34]
  413aec:	mov    eax,0x163cc8e7
  413af1:	jecxz  0x413b39
  413af3:	std    
  413af4:	retf   0xa5c4
  413af7:	adc    DWORD PTR [edx+0x73],esp
  413afa:	aas    
  413afb:	jnp    0x413b55
  413afd:	mov    ds:0x215c53af,eax
  413b02:	sbb    DWORD PTR [edx+0x54],esp
  413b05:	sub    DWORD PTR [edx+0x3f047214],0xfd917507
  413b0f:	dec    edx
  413b10:	sub    al,al
  413b12:	ss mov cl,0x6d
  413b15:	rcl    DWORD PTR [esi],1
  413b17:	mov    dl,0x8d
  413b19:	call   0xddbbda78
  413b1e:	push   eax
  413b1f:	inc    edi
  413b20:	xchg   esi,eax
  413b21:	es enter 0x7a10,0x92
  413b26:	ja     0x413b51
  413b28:	out    dx,al
  413b29:	jle    0x413b55
  413b2b:	js     0x413b88
  413b2d:	push   ebp
  413b2e:	jne    0x413af0
  413b30:	pop    ebx
  413b31:	mov    ebp,edx
  413b33:	inc    ecx
  413b34:	outs   dx,BYTE PTR ds:[esi]
  413b35:	xchg   DWORD PTR [edi+0x77],ecx
  413b38:	test   esi,ebp
  413b3a:	fistp  QWORD PTR [ebp+0xd]
  413b3d:	add    eax,0x378b1381
  413b42:	into   
  413b43:	cdq    
  413b44:	(bad)  
  413b45:	mov    ch,0xd
  413b47:	(bad)
  413b4b:	jmp    DWORD PTR [edx+0x4c]
  413b4e:	mov    DWORD PTR [edx],edx
  413b50:	leave  
  413b51:	aaa    
  413b52:	mov    eax,0x4ef18af4
  413b57:	(bad)  
  413b58:	push   esp
  413b59:	adc    ebp,DWORD PTR [edi+0x23]
  413b5c:	mov    eax,0x1eb9ef9
  413b61:	dec    edx
  413b62:	test   bl,bh
  413b64:	or     edx,eax
  413b66:	ds mul bl
  413b69:	lods   al,BYTE PTR ds:[esi]
  413b6a:	loop   0x413b08
  413b6c:	rol    DWORD PTR [ebx-0x57],cl
  413b6f:	cld    
  413b70:	sbb    al,0xac
  413b72:	repz fcmovbe st,st(2)
  413b75:	sbb    al,BYTE PTR [edx]
  413b77:	daa    
  413b78:	das    
  413b79:	inc    esp
  413b7a:	mov    ah,0x39
  413b7c:	inc    edi
  413b7d:	xlat   BYTE PTR ds:[ebx]
  413b7e:	or     al,BYTE PTR [edx+esi*4+0x54]
  413b82:	test   al,0x87
  413b85:	jecxz  0x413bbe
  413b87:	cmp    al,0xd1
  413b89:	xchg   ecx,eax
  413b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b8c:	loopne 0x413b8a
  413b8e:	mov    esp,0x6a92887d
  413b93:	pop    esi
  413b94:	xchg   DWORD PTR [esi+edx*1],esp
  413b97:	dec    eax
  413b98:	cmp    bh,BYTE PTR [ebx+esi*2]
  413b9b:	xchg   edi,eax
  413b9c:	mov    ch,0x44
  413b9e:	jns    0x413c16
  413ba0:	cmp    ah,ah
  413ba2:	lods   eax,DWORD PTR ds:[esi]
  413ba3:	mov    bh,0xf8
  413ba5:	mov    ecx,0xf1173707
  413baa:	pushf  
  413bab:	(bad)  
  413bad:	sub    esi,DWORD PTR [esi-0x72002ef9]
  413bb3:	sahf   
  413bb4:	imul   ebx,DWORD PTR [esi+0x2f3cdfa8],0x6b
  413bbb:	push   esi
  413bbc:	cwde   
  413bbd:	xchg   edx,eax
  413bbe:	stc    
  413bbf:	pop    edx
  413bc0:	jo     0x413bb7
  413bc2:	icebp  
  413bc3:	cmp    eax,0x5068ee1
  413bc8:	cdq    
  413bc9:	test   eax,0xf5153a2c
  413bce:	jne    0x413bd3
  413bd0:	mov    ds:0xc600dab,eax
  413bd5:	or     edi,ecx
  413bd7:	stc    
  413bd8:	pop    edx
  413bd9:	add    al,0xce
  413bdb:	inc    DWORD PTR [esi-0x76fc42aa]
  413be1:	mov    dh,BYTE PTR [edx+ebx*4-0x7b]
  413be5:	push   0x4f
  413be7:	call   0x1eb1:0xa0fd64e1
  413bee:	pop    ds
  413bef:	mov    ebp,DWORD PTR [edx]
  413bf1:	and    cl,BYTE PTR [ebx-0x57726520]
  413bf7:	shr    bh,cl
  413bf9:	inc    ebp
  413bfa:	mov    ds:0xd676965f,al
  413bff:	mov    eax,ds:0xae819856
  413c04:	sbb    al,ch
  413c06:	mov    WORD PTR [edx],ss
  413c08:	xor    al,0x55
  413c0a:	pop    esi
  413c0b:	arpl   WORD PTR [esi+0x20],sp
  413c0e:	call   0xfa1e6329
  413c13:	scas   eax,DWORD PTR es:[edi]
  413c14:	into   
  413c15:	outs   dx,BYTE PTR ds:[esi]
  413c16:	sbb    al,0x44
  413c18:	(bad)  
  413c19:	rcl    DWORD PTR [eax-0x5d92f30e],cl
  413c1f:	and    edx,edx
  413c21:	xchg   edx,eax
  413c22:	add    eax,0xa516d99
  413c27:	cld    
  413c28:	and    ch,BYTE PTR [ebp-0x9c448b6]
  413c2e:	or     eax,DWORD PTR ds:0xf47c4eaa
  413c34:	iret   
  413c35:	(bad)
  413c38:	sub    al,0x68
  413c3a:	add    edx,DWORD PTR [ebx+0x77]
  413c3d:	into   
  413c3e:	retf   0x9eca
  413c41:	inc    esp
  413c42:	cmc    
  413c43:	shl    BYTE PTR [edi-0x779735e7],cl
  413c49:	les    eax,FWORD PTR [edi+eiz*2]
  413c4c:	or     al,0x6d
  413c4e:	stos   BYTE PTR es:[edi],al
  413c4f:	test   DWORD PTR [edx-0x80],esi
  413c52:	xchg   ebx,eax
  413c53:	nop
  413c54:	sub    eax,0x2a91964c
  413c59:	loope  0x413ca7
  413c5b:	repnz retf 
  413c5d:	add    al,0x56
  413c5f:	mov    DWORD PTR [edx+0x60],ecx
  413c62:	std    
  413c63:	mov    al,0xbf
  413c65:	mov    dl,0x7d
  413c67:	out    0x7c,al
  413c69:	sub    al,0x21
  413c6b:	jb     0x413bef
  413c6d:	jg     0x413c3c
  413c6f:	aad    0x44
  413c71:	sub    DWORD PTR [ebx],esi
  413c73:	or     ebp,DWORD PTR [edx-0x6f7a0a75]
  413c79:	rol    BYTE PTR [edi],1
  413c7b:	retf   0x6424
  413c7e:	(bad)  
  413c7f:	pop    esp
  413c80:	dec    eax
  413c81:	pop    esp
  413c82:	bound  edi,QWORD PTR [edi-0x28f0ee0e]
  413c88:	and    ebx,esi
  413c8a:	shr    BYTE PTR gs:[ecx],1
  413c8d:	fdivr  DWORD PTR [ebx]
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    DWORD PTR [edx+0x600d2094]
  413c96:	sbb    BYTE PTR [ecx-0x59],al
  413c99:	mov    eax,ds:0x71aa2983
  413c9e:	outs   dx,DWORD PTR ds:[esi]
  413c9f:	outs   dx,DWORD PTR ds:[esi]
  413ca0:	inc    edi
  413ca1:	imul   ecx,DWORD PTR [ebx+0x76],0x40
  413ca5:	out    0xbe,al
  413ca7:	push   0x34f17988
  413cac:	retf   0x1650
  413caf:	out    dx,al
  413cb0:	lahf   
  413cb1:	adc    DWORD PTR [ebx],edi
  413cb3:	xor    al,0x5b
  413cb5:	dec    ecx
  413cb6:	fisttp DWORD PTR [eax]
  413cb8:	daa    
  413cb9:	and    bl,BYTE PTR [esi-0x12aaae12]
  413cbf:	or     al,0x69
  413cc1:	jbe    0x413cd6
  413cc3:	push   cs
  413cc4:	pop    es
  413cc5:	inc    esi
  413cc6:	out    0x81,al
  413cc8:	stc    
  413cc9:	pop    ecx
  413cca:	mov    al,0xb4
  413ccc:	int    0xc7
  413cce:	mov    al,ds:0x285aaac9
  413cd3:	mov    bh,0xcf
  413cd5:	add    eax,0x94228c14
  413cda:	fwait
  413cdb:	dec    esp
  413cdc:	ret    
  413cdd:	xchg   esi,eax
  413cde:	shl    BYTE PTR [ecx-0x55f47c62],cl
  413ce4:	in     eax,dx
  413ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ce6:	or     cl,dl
  413ce8:	xor    BYTE PTR [edi],cl
  413cea:	jge    0x413c82
  413cec:	stc    
  413ced:	inc    esp
  413cee:	push   esp
  413cef:	push   es
  413cf0:	idiv   DWORD PTR [edi-0x42]
  413cf3:	fwait
  413cf4:	sub    eax,0x6b24b955
  413cf9:	inc    ebp
  413cfa:	push   edi
  413cfb:	push   0x14
  413cfd:	ss mov ah,0x6c
  413d00:	xor    al,0x52
  413d02:	push   edi
  413d03:	mov    dl,0xae
  413d05:	jl     0x413d71
  413d07:	enter  0x64d4,0xe9
  413d0b:	jb     0x413d73
  413d0d:	ror    DWORD PTR [edx+0x5ff59e4e],cl
  413d13:	les    ebx,FWORD PTR [edi]
  413d15:	xor    edx,DWORD PTR [edx]
  413d17:	sbb    esp,DWORD PTR [edi+0x44cb3459]
  413d1d:	xchg   ebp,eax
  413d1e:	ins    DWORD PTR es:[edi],dx
  413d1f:	clc    
  413d20:	js     0x413d48
  413d22:	popa   
  413d23:	sbb    eax,0x475b0ba3
  413d28:	sub    BYTE PTR [ecx],0x64
  413d2b:	rol    ch,cl
  413d2d:	arpl   WORD PTR [ebx-0x689cabad],di
  413d33:	sbb    DWORD PTR [eax+eax*4],ebx
  413d36:	dec    ecx
  413d37:	adc    eax,0x4ff209b9
  413d3c:	push   ss
  413d3d:	push   ds
  413d3e:	mov    eax,ds:0x7e653235
  413d43:	int3   
  413d44:	(bad)  
  413d45:	aad    0xd0
  413d47:	in     eax,dx
  413d48:	fwait
  413d49:	mov    ds:0x6cf1a47a,eax
  413d4e:	in     al,dx
  413d4f:	and    esp,ebx
  413d51:	adc    DWORD PTR [esi-0x58],0xffffff86
  413d55:	in     al,dx
  413d56:	jle    0x413cea
  413d58:	pusha  
  413d59:	add    BYTE PTR [ebp+eiz*4+0x6e6a3cd0],dl
  413d60:	cmp    esi,DWORD PTR [eax+0x7a]
  413d63:	or     esp,esi
  413d65:	xchg   DWORD PTR [eax+0x2a],esp
  413d68:	mov    edx,DWORD PTR fs:[eax+0x9b2b579]
  413d6f:	dec    esp
  413d70:	icebp  
  413d71:	fwait
  413d72:	jne    0x413d67
  413d74:	ds xor al,0x75
  413d77:	cli    
  413d78:	jge    0x413dca
  413d7a:	mov    cl,0x10
  413d7c:	mov    ebp,0xf5a7fb86
  413d81:	push   ss
  413d82:	sahf   
  413d83:	pop    ecx
  413d84:	or     al,0x4b
  413d86:	data16 add al,BYTE PTR [ecx+0x56]
  413d8a:	dec    esi
  413d8b:	fld    QWORD PTR [ecx]
  413d8d:	push   esi
  413d8e:	out    dx,eax
  413d8f:	adc    al,0xc5
  413d91:	pop    esp
  413d92:	jb     0x413d26
  413d94:	(bad)
  413d97:	repnz std 
  413d99:	inc    DWORD PTR [ebp+0x14]
  413d9c:	icebp  
  413d9d:	in     al,dx
  413d9e:	fisubr WORD PTR [ecx+0x26a88c64]
  413da4:	popf   
  413da5:	div    DWORD PTR [ecx-0x4b]
  413da8:	icebp  
  413da9:	ficom  DWORD PTR [esi]
  413dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dac:	aam    0xfe
  413dae:	gs ss push 0x1fec5d39
  413db5:	mov    ebp,0x1665dc97
  413dba:	adc    eax,0x8898603e
  413dbf:	test   al,0xf7
  413dc1:	inc    ebp
  413dc2:	pop    ss
  413dc3:	dec    ecx
  413dc4:	mov    dl,0xf7
  413dc6:	scas   eax,DWORD PTR es:[edi]
  413dc7:	das    
  413dc8:	cli    
  413dc9:	sub    BYTE PTR [edx+0x59079089],bl
  413dcf:	stc    
  413dd0:	push   ds
  413dd1:	jae    0x413dee
  413dd3:	(bad)  [edx+0x15549e63]
  413dd9:	cwde   
  413dda:	mov    ebp,0x50ff4b6d
  413ddf:	fisubr WORD PTR [ebp-0x3]
  413de2:	test   al,0x2b
  413de4:	jnp    0x413d90
  413de6:	jecxz  0x413e39
  413de8:	cmp    al,0x16
  413dea:	dec    ebp
  413deb:	mov    ds:0x900bb26,eax
  413df0:	push   esi
  413df1:	cmp    bl,ah
  413df3:	or     edi,esi
  413df5:	outs   dx,WORD PTR ds:[esi]
  413df7:	ja     0x413e5c
  413df9:	nop
  413dfa:	psrld  mm6,QWORD PTR [ebx+0x27b0dff6]
  413e01:	scas   eax,DWORD PTR es:[edi]
  413e02:	jno    0x413e59
  413e04:	push   ss
  413e05:	out    0xec,eax
  413e07:	mov    BYTE PTR [esi],ch
  413e09:	cmc    
  413e0a:	mov    ds:0x3f14084d,eax
  413e0f:	aad    0x62
  413e11:	mov    ebp,0x144ef3
  413e16:	or     edx,ebp
  413e18:	jmp    0x413ddb
  413e1a:	mov    al,0xb6
  413e1c:	nop
  413e1d:	xchg   edi,eax
  413e1e:	(bad)  
  413e1f:	loopne 0x413e6f
  413e21:	pop    ecx
  413e22:	into   
  413e23:	cmp    cl,dh
  413e25:	in     al,0x71
  413e27:	je     0x413df9
  413e29:	inc    edi
  413e2a:	mov    esi,DWORD PTR [ecx-0x78]
  413e2d:	xchg   edx,eax
  413e2e:	lods   al,BYTE PTR ds:[esi]
  413e2f:	ins    BYTE PTR es:[edi],dx
  413e30:	loopne 0x413e81
  413e32:	mov    eax,0xbac67ba1
  413e37:	pusha  
  413e38:	push   ds
  413e39:	mov    al,0x82
  413e3b:	pop    ecx
  413e3c:	aam    0xb3
  413e3e:	mov    esi,0xa5a2b111
  413e43:	repz and BYTE PTR ds:0x9683995b,ah
  413e4a:	jne    0x413e9a
  413e4c:	mov    esi,0x8db5c918
  413e51:	jb     0x413eba
  413e53:	ss xchg ebx,eax
  413e55:	aam    0x69
  413e57:	sbb    ebx,DWORD PTR [esp+eax*1-0x4c7b18d5]
  413e5e:	inc    esi
  413e5f:	jmp    0xa2362c64
  413e64:	les    eax,FWORD PTR [esi]
  413e66:	mov    eax,ds:0xe4aea587
  413e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e6c:	and    ch,BYTE PTR [edi+0x78]
  413e6f:	pop    esi
  413e70:	mov    bh,ah
  413e72:	inc    ebx
  413e73:	cmp    eax,0xdf6b0e19
  413e78:	out    0x29,eax
  413e7a:	push   ebp
  413e7b:	pop    ebp
  413e7c:	aas    
  413e7d:	stc    
  413e7e:	push   ebx
  413e7f:	leave  
  413e80:	ss stos BYTE PTR es:[edi],al
  413e82:	xor    dh,BYTE PTR [edx-0x42578d7f]
  413e88:	inc    DWORD PTR [ebp+ebx*4+0x26b6841f]
  413e8f:	xchg   ebp,eax
  413e90:	into   
  413e91:	in     al,dx
  413e92:	xor    bl,BYTE PTR ds:0xee4c322d
  413e98:	out    dx,eax
  413e99:	inc    edx
  413e9a:	xchg   esp,eax
  413e9b:	and    WORD PTR [eax-0x225490c9],di
  413ea2:	nop
  413ea3:	daa    
  413ea4:	dec    eax
  413ea5:	ja     0x413eaf
  413ea7:	imul   ebp,DWORD PTR [edx-0x1f],0xed001f96
  413eae:	(bad)  
  413eaf:	jb     0x413f0f
  413eb1:	arpl   WORD PTR [ebx+ebp*4-0x68],sp
  413eb5:	mov    al,0x59
  413eb7:	enter  0x7f1,0x7
  413ebb:	and    eax,ebp
  413ebd:	xlat   BYTE PTR ds:[ebx]
  413ebe:	push   0xffffffe2
  413ec0:	cmp    bl,cl
  413ec2:	test   al,0xfb
  413ec4:	mov    ebp,0xeac176d2
  413ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eca:	sub    al,0x44
  413ecc:	push   es
  413ecd:	and    BYTE PTR [esi],bl
  413ecf:	arpl   WORD PTR [edx],di
  413ed1:	inc    edx
  413ed2:	dec    esp
  413ed3:	add    DWORD PTR [ebp-0x2b58222f],ebx
  413ed9:	xor    eax,0x39fe4b31
  413ede:	adc    DWORD PTR ds:0x841690c4,ebx
  413ee4:	mov    edi,0xdaa344cb
  413ee9:	mov    ebx,0xcccc8783
  413eee:	ins    DWORD PTR es:[edi],dx
  413eef:	ins    DWORD PTR es:[edi],dx
  413ef0:	bnd jns 0x413ec5
  413ef3:	adc    ah,BYTE PTR [ebp+0x5f150d51]
  413ef9:	dec    ebx
  413efa:	std    
  413efb:	arpl   WORD PTR [esi],di
  413efd:	hlt    
  413efe:	jp     0x413f0b
  413f00:	pusha  
  413f01:	jnp    0x413f28
  413f03:	sbb    eax,0xd5e39d42
  413f08:	addr16 sar bl,1
  413f0b:	scas   al,BYTE PTR es:[edi]
  413f0c:	outs   dx,DWORD PTR ds:[esi]
  413f0d:	iret   
  413f0e:	pop    eax
  413f0f:	cwde   
  413f10:	cwde   
  413f11:	jg     0x413f77
  413f13:	xor    BYTE PTR [edx+ecx*8-0x1ac89df2],ah
  413f1a:	xor    DWORD PTR es:[ecx-0x53234462],edi
  413f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f22:	fcmovbe st,st(1)
  413f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f25:	push   edi
  413f26:	sub    BYTE PTR [eax+0x2d],al
  413f29:	jns    0x413f7f
  413f2b:	pop    es
  413f2c:	test   al,0xdf
  413f2e:	daa    
  413f2f:	inc    edi
  413f30:	out    0x70,al
  413f32:	jb     0x413edc
  413f34:	cmp    ah,cl
  413f36:	daa    
  413f37:	push   esi
  413f38:	sbb    al,0x2
  413f3a:	mov    ebx,0x2b8f1c94
  413f3f:	pop    esi
  413f40:	mov    ecx,0x1202e8c9
  413f45:	add    dh,0x13
  413f48:	stos   BYTE PTR es:[edi],al
  413f49:	sub    al,0x66
  413f4b:	xchg   esi,eax
  413f4c:	outs   dx,DWORD PTR ds:[esi]
  413f4d:	jbe    0x413fbf
  413f4f:	mov    edx,0x2cf7d589
  413f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f55:	shl    DWORD PTR [edi-0x3a115bbb],cl
  413f5b:	arpl   WORD PTR [edi+0x39],ax
  413f5e:	push   edx
  413f5f:	sub    BYTE PTR [ecx-0x19],bl
  413f62:	push   ss
  413f63:	jp     0x413fb5
  413f65:	loopne 0x413f26
  413f67:	and    BYTE PTR [edx],al
  413f69:	jb     0x413f1f
  413f6b:	mov    esp,0x26198caa
  413f70:	dec    edi
  413f71:	add    BYTE PTR [edi-0x2d],cl
  413f74:	xor    eax,0x25455796
  413f79:	pop    eax
  413f7a:	ins    BYTE PTR es:[edi],dx
  413f7b:	pop    edx
  413f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f7d:	add    eax,0x7d61268
  413f82:	popf   
  413f83:	push   ecx
  413f84:	jl     0x413f39
  413f86:	call   0x7f9:0x19202ebe
  413f8d:	cs mov ebp,0x9cec13b9
  413f93:	int3   
  413f94:	mov    ds:0x84f25edd,eax
  413f99:	jmp    0xe5fe078
  413f9e:	mov    bl,BYTE PTR [esi-0x5022ae5e]
  413fa4:	test   eax,0x30f7b7da
  413fa9:	sbb    DWORD PTR [edi-0x7eee8bbf],edi
  413faf:	mov    esi,0x80b45ce9
  413fb4:	jmp    0x7edd90a4
  413fb9:	push   esi
  413fba:	dec    edx
  413fbb:	inc    edi
  413fbc:	mov    ebp,0x6207c647
  413fc1:	arpl   bp,sp
  413fc3:	dec    ebp
  413fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fc5:	imul   BYTE PTR [edx]
  413fc7:	adc    edx,DWORD PTR [ebx-0x4d]
  413fca:	mov    BYTE PTR [eax+0x7ffa18b7],al
  413fd0:	pop    edi
  413fd1:	gs pop esi
  413fd3:	lods   al,BYTE PTR ds:[esi]
  413fd4:	fdivp  st(0),st
  413fd6:	and    eax,0xe00fb0d7
  413fdb:	xor    bl,BYTE PTR [ecx+0x5bb92c92]
  413fe1:	in     al,dx
  413fe2:	sahf   
  413fe3:	repz push ecx
  413fe5:	ret    0xf440
  413fe8:	loopne 0x413fc5
  413fea:	dec    ebx
  413feb:	aaa    
  413fec:	retf   
  413fed:	sub    DWORD PTR [esi+0x763ecc7],edx
  413ff3:	jbe    0x413ffa
  413ff5:	xor    eax,0xd9ca555a
  413ffa:	push   0x61105933
  413fff:	fwait
  414000:	dec    esi
  414001:	lods   al,BYTE PTR ds:[esi]
  414002:	leave  
  414003:	repz inc ebx
  414005:	mov    WORD PTR [ebp-0x73e8432b],?
  41400b:	rcl    DWORD PTR [ebx-0x70],1
  41400e:	in     eax,0xde
  414010:	push   eax
  414011:	fld    QWORD PTR [ecx+0x21e925bf]
  414017:	adc    eax,0x45285bf8
  41401c:	xor    cl,al
  41401e:	sar    BYTE PTR [ebp+0x65],1
  414021:	add    eax,0x820bc088
  414026:	hlt    
  414027:	xchg   ecx,eax
  414028:	shr    DWORD PTR [ecx],cl
  41402a:	dec    eax
  41402b:	inc    ecx
  41402c:	jecxz  0x414058
  41402e:	or     ecx,0xffffffcd
  414031:	pushf  
  414032:	lahf   
  414033:	cmp    al,0xf5
  414035:	sub    esi,DWORD PTR [ebx-0x3e]
  414038:	loop   0x414046
  41403a:	mov    esi,0x79ca4a49
  41403f:	jnp    0x413fe8
  414041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414042:	mov    dl,0xc0
  414044:	ja     0x414041
  414046:	inc    esp
  414047:	mov    ebx,?
  414049:	push   0xa6a02137
  41404e:	leave  
  41404f:	dec    edx
  414050:	jo     0x41402c
  414052:	inc    eax
  414053:	out    dx,eax
  414054:	fist   WORD PTR [edx]
  414056:	mov    bh,0xfd
  414058:	dec    esp
  414059:	dec    edx
  41405a:	pushf  
  41405b:	jl     0x414065
  41405d:	add    al,0x3c
  41405f:	gs fst st(1)
  414062:	(bad)  
  414063:	cmc    
  414064:	adc    ebp,ecx
  414066:	inc    ecx
  414067:	outs   dx,DWORD PTR ds:[esi]
  414068:	mov    ebx,0xb0a85f59
  41406d:	sub    eax,0xe72f1ef4
  414072:	xor    DWORD PTR [eax+0x53],edi
  414075:	ins    BYTE PTR es:[edi],dx
  414076:	fisub  DWORD PTR [esi+0x69]
  414079:	xor    DWORD PTR [edi],ebp
  41407b:	add    ebp,ebp
  41407d:	aad    0xd1
  41407f:	js     0x414049
  414081:	xlat   BYTE PTR ds:[ebx]
  414082:	push   0x2aab8f1a
  414087:	add    DWORD PTR [eax+0x3d],esp
  41408a:	out    dx,al
  41408b:	inc    ebx
  41408c:	sbb    dl,BYTE PTR ds:0x848dd5e0
  414092:	xchg   ecx,eax
  414093:	nop
  414094:	cmp    eax,0x611471c3
  414099:	mov    DWORD PTR [esi+ecx*1],eax
  41409c:	push   cs
  41409d:	aam    0x2b
  41409f:	(bad)  
  4140a0:	mov    dl,0x73
  4140a2:	push   ebp
  4140a3:	pop    edx
  4140a4:	dec    esp
  4140a5:	and    BYTE PTR [ecx-0x5f],al
  4140a8:	out    dx,eax
  4140a9:	mov    ah,0x88
  4140ab:	xor    eax,0xb0c7f4a1
  4140b0:	xchg   BYTE PTR [ebp+0x75],bh
  4140b3:	jmp    FWORD PTR cs:[edi+0x11]
  4140b7:	pop    eax
  4140b8:	cli    
  4140b9:	shl    DWORD PTR [ebx+0x40b6ee95],cl
  4140bf:	mov    WORD PTR [ecx+0x31e890f0],cs
  4140c5:	js     0x414099
  4140c7:	mov    al,ds:0x8eea19ac
  4140cc:	imul   edx,DWORD PTR [ebx+0x41],0xf979b010
  4140d3:	xor    al,BYTE PTR [esp+eax*2-0x4c94e796]
  4140da:	je     0x41412d
  4140dc:	sbb    esi,0xbb89c2f4
  4140e2:	jge    0x4140e7
  4140e4:	add    al,0x22
  4140e6:	or     ah,ch
  4140e8:	repnz mov edi,0x57d25214
  4140ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ef:	das    
  4140f0:	js     0x414097
  4140f2:	xor    BYTE PTR ds:0x9dd49641,cl
  4140f8:	stc    
  4140f9:	xor    esp,DWORD PTR [edi]
  4140fb:	jne    0x41416a
  4140fd:	dec    ecx
  4140fe:	lea    ecx,[esi-0x6a]
  414101:	out    0x75,al
  414103:	sub    al,ch
  414105:	sub    ebp,DWORD PTR [ecx]
  414107:	aad    0xd4
  414109:	mov    esp,0xd62489c
  41410e:	inc    eax
  41410f:	jg     0x41415f
  414111:	xchg   esi,eax
  414112:	sbb    eax,0x1db4a8a
  414117:	cli    
  414118:	ret    
  414119:	jmp    DWORD PTR [ebp-0x1f]
  41411c:	sahf   
  41411d:	push   esp
  41411e:	cwde   
  41411f:	cmc    
  414120:	sub    eax,ebx
  414122:	pop    ds
  414123:	jb     0x414136
  414125:	and    DWORD PTR [esi+0x5e],eax
  414128:	in     al,dx
  414129:	dec    esi
  41412a:	mov    dh,0x9a
  41412c:	cmp    BYTE PTR [edi],bl
  41412e:	cdq    
  41412f:	shl    BYTE PTR ds:0xcdde382a,1
  414135:	ins    BYTE PTR es:[edi],dx
  414136:	sbb    ch,ah
  414138:	sahf   
  414139:	pop    esi
  41413a:	add    BYTE PTR [esi-0x47],dh
  41413d:	test   DWORD PTR [esi],esp
  41413f:	and    eax,0xd24730c2
  414144:	and    edx,DWORD PTR [edx-0x44db7548]
  41414a:	popa   
  41414b:	adc    ch,BYTE PTR [ebx]
  41414d:	jle    0x414119
  41414f:	(bad)  
  414150:	in     al,0x4
  414152:	add    al,0x7e
  414154:	jb     0x414135
  414156:	pop    es
  414157:	cld    
  414158:	xor    bl,BYTE PTR [ebx]
  41415a:	in     al,dx
  41415b:	lds    esi,FWORD PTR [ebx-0x28dc43be]
  414161:	jg     0x4141bd
  414163:	retf   
  414164:	cmc    
  414165:	mov    ch,0xf0
  414167:	mov    BYTE PTR gs:[eax+0x6a],dh
  41416b:	cmc    
  41416c:	mov    ecx,0x7282503e
  414171:	cmp    BYTE PTR [ecx+eiz*1],bl
  414174:	pusha  
  414175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414176:	mov    cl,0xb0
  414178:	mov    ds:0x305e31,al
  41417d:	leave  
  41417e:	fistp  WORD PTR [eax]
  414180:	imul   edx,esp,0x13a96fdc
  414186:	test   al,0x2a
  414188:	mov    ebp,0x6334321d
  41418d:	int3   
  41418e:	pop    edx
  41418f:	xchg   ecx,eax
  414190:	dec    esp
  414191:	or     al,0xe
  414193:	das    
  414194:	push   ebp
  414195:	fisub  WORD PTR [edi-0x75d37d5c]
  41419b:	jle    0x414204
  41419d:	push   ss
  41419e:	mov    dh,0x7a
  4141a0:	in     eax,dx
  4141a1:	xor    dh,BYTE PTR [eax-0x60381f25]
  4141a7:	gs stos BYTE PTR es:[edi],al
  4141a9:	push   cs
  4141aa:	mov    esp,0x94969c4e
  4141af:	lea    edx,cs:[ebp-0x4]
  4141b3:	iret   
  4141b4:	dec    esi
  4141b5:	mov    DWORD PTR [edi-0xd],ebx
  4141b8:	shl    DWORD PTR [eax*1+0x6d6bb2e1],1
  4141bf:	adc    eax,0xe07cf867
  4141c4:	mov    esp,DWORD PTR [ecx-0x54d70228]
  4141ca:	push   eax
  4141cb:	mov    dh,0x2b
  4141cd:	mov    dl,0x8c
  4141cf:	std    
  4141d0:	popf   
  4141d1:	or     DWORD PTR [ebx-0x18],ebx
  4141d4:	push   es
  4141d5:	mov    eax,0x367a82ea
  4141da:	test   DWORD PTR [ebp-0x3a],0x807681e5
  4141e1:	int3   
  4141e2:	xlat   BYTE PTR ds:[ebx]
  4141e3:	lods   eax,DWORD PTR ds:[esi]
  4141e4:	rcr    ecx,1
  4141e6:	mov    ebx,0xe3544c9
  4141eb:	mov    bl,0x3f
  4141ed:	mov    ah,0x35
  4141ef:	cmp    BYTE PTR [ecx-0x718f632d],cl
  4141f5:	test   DWORD PTR [esi+ecx*2+0x7d192d9],ebx
  4141fc:	adc    eax,DWORD PTR [esi+0x410c918c]
  414202:	mul    ch
  414204:	rol    DWORD PTR [bx+0x69f1],1
  414209:	xchg   edi,eax
  41420a:	shl    ah,1
  41420c:	fist   DWORD PTR [edx-0xf]
  41420f:	sbb    bl,dl
  414211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414212:	pusha  
  414213:	iret   
  414214:	inc    ecx
  414215:	sub    DWORD PTR [ecx-0x27],0xffffff81
  414219:	loope  0x41423a
  41421b:	lds    esi,FWORD PTR [ebp-0x62]
  41421e:	jns    0x4141bd
  414220:	jecxz  0x4141ac
  414222:	es dec esp
  414224:	lods   eax,DWORD PTR ds:[esi]
  414225:	enter  0x159a,0xfc
  414229:	and    dl,bl
  41422b:	mov    al,al
  41422d:	imul   ecx,DWORD PTR [ebx-0x75],0x5c
  414231:	nop
  414232:	mov    dl,0x25
  414234:	xchg   ecx,eax
  414235:	ins    DWORD PTR es:[edi],dx
  414236:	push   esp
  414237:	sbb    dl,BYTE PTR [edx]
  414239:	popf   
  41423a:	push   edx
  41423b:	xchg   esp,eax
  41423c:	shl    BYTE PTR [edx-0xaeb143f],0x82
  414243:	pop    ebp
  414244:	xor    BYTE PTR [eax+ecx*2+0x4d684808],al
  41424b:	jg     0x4141df
  41424d:	inc    ebp
  41424e:	cmp    BYTE PTR [edx],0xf7
  414251:	cmp    BYTE PTR [eax-0xbeb99ca],0x52
  414258:	push   ebx
  414259:	push   ebx
  41425a:	div    DWORD PTR [edi+0x3b980ac5]
  414260:	retf   
  414261:	jbe    0x414270
  414263:	xchg   edi,eax
  414264:	pop    esi
  414265:	sti    
  414266:	ins    DWORD PTR es:[edi],dx
  414267:	retf   0xf7e6
  41426a:	and    edi,esp
  41426c:	jmp    0x64bc:0xdc3fcd18
  414273:	mov    eax,ds:0xe4c834b8
  414278:	pop    ecx
  414279:	fcom   DWORD PTR [edi+0x646c2ffb]
  41427f:	aaa    
  414280:	imul   ebx,DWORD PTR [ecx+0x68f6a76d],0xfea7a9a0
  41428a:	push   edi
  41428b:	jae    0x4142e7
  41428d:	and    BYTE PTR [ecx+eiz*4+0xb],ch
  414291:	pop    edx
  414292:	aad    0x4d
  414294:	jl     0x4142e6
  414296:	rol    BYTE PTR [ebx+ebx*1-0x57],0x69
  41429b:	cwde   
  41429c:	pop    es
  41429d:	pop    ebx
  41429e:	pop    edx
  41429f:	adc    DWORD PTR [ecx*4+0xc997ff9],esp
  4142a6:	sub    al,0x39
  4142a8:	xchg   ebp,eax
  4142a9:	out    dx,eax
  4142aa:	or     bh,bh
  4142ac:	mov    dh,0x31
  4142ae:	or     cl,BYTE PTR [edx+0x6c]
  4142b1:	sti    
  4142b2:	xchg   ebx,eax
  4142b3:	test   al,0xe9
  4142b5:	xchg   edx,eax
  4142b6:	int3   
  4142b7:	dec    ebx
  4142b8:	dec    edx
  4142b9:	adc    DWORD PTR [edx+0x55],0x64
  4142bd:	shr    BYTE PTR [edi],0xf
  4142c0:	test   eax,0xa78df17f
  4142c5:	inc    esi
  4142c6:	scas   eax,DWORD PTR es:[edi]
  4142c7:	jl     0x41425f
  4142c9:	dec    ebp
  4142ca:	stc    
  4142cb:	iret   
  4142cc:	in     eax,dx
  4142cd:	into   
  4142ce:	loopne 0x41431e
  4142d0:	fs in  al,dx
  4142d2:	mov    dl,0x8d
  4142d4:	loop   0x4142b4
  4142d6:	xchg   ebx,eax
  4142d7:	mov    al,0x42
  4142d9:	aad    0xb4
  4142db:	pop    ebx
  4142dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142dd:	imul   ebp,DWORD PTR [edi+ebx*8],0x83557754
  4142e4:	sub    DWORD PTR [eax],edi
  4142e6:	int    0x6d
  4142e8:	imul   ebp,ebp,0xe8c2ed8c
  4142ee:	faddp  st(1),st
  4142f0:	div    DWORD PTR [edx+0x5d]
  4142f3:	pop    ebp
  4142f4:	add    eax,0x7d37dcc8
  4142f9:	mov    ds:0xdb80297e,eax
  4142fe:	ja     0x4142ce
  414300:	inc    di
  414302:	ins    DWORD PTR es:[edi],dx
  414303:	pop    ebp
  414304:	jno    0x41435a
  414306:	mov    bh,0x98
  414308:	inc    ebp
  414309:	jl     0x414309
  41430b:	mov    al,0xd8
  41430d:	xor    al,0x44
  41430f:	cmp    edx,ecx
  414311:	lock adc DWORD PTR [ecx+0x6f],ecx
  414315:	fmul   QWORD PTR ds:0x281f1eca
  41431b:	inc    ebp
  41431c:	test   BYTE PTR [edx-0x3463607b],bl
  414322:	shl    DWORD PTR [edx+0x5829d710],1
  414328:	jbe    0x4142d5
  41432a:	jecxz  0x4142e6
  41432c:	mov    dl,0x9b
  41432e:	fs xor eax,0x95f0bc
  414335:	leave  
  414336:	push   ebp
  414337:	ror    DWORD PTR [ecx-0x5efe1fd6],cl
  41433d:	dec    edi
  41433e:	xor    edx,DWORD PTR [ebx-0x7b]
  414341:	jp     0x414395
  414343:	pop    edi
  414344:	loop   0x414326
  414346:	ins    BYTE PTR es:[edi],dx
  414347:	cwde   
  414348:	mov    bp,0xfe07
  41434c:	pop    ss
  41434d:	enter  0x1393,0x76
  414351:	adc    ah,BYTE PTR [edx-0x129e853a]
  414357:	fwait
  414358:	pop    ss
  414359:	ins    BYTE PTR es:[edi],dx
  41435a:	aaa    
  41435b:	(bad)  [edx+0x42c85108]
  414361:	xor    al,0x5
  414363:	xor    dl,BYTE PTR [edx+0x40]
  414366:	and    dh,BYTE PTR [edi+edx*4-0x3]
  41436a:	int3   
  41436b:	mov    al,ds:0x767adddc
  414370:	mov    esp,0xe2e54e8d
  414375:	(bad)  
  414376:	addr16 dec edi
  414378:	ja     0x4143ee
  41437a:	push   ss
  41437b:	imul   DWORD PTR [ebx-0x4fd77a61]
  414381:	xchg   edi,eax
  414382:	sub    cl,BYTE PTR [edi+0x552c46c6]
  414388:	std    
  414389:	aam    0x7b
  41438b:	das    
  41438c:	hlt    
  41438d:	sbb    BYTE PTR [edx+0x48e20aec],ah
  414393:	lock popa 
  414395:	repnz inc esp
  414397:	adc    BYTE PTR ds:0x568c165a,al
  41439d:	push   eax
  41439e:	mov    WORD PTR [ecx],?
  4143a0:	xchg   ecx,eax
  4143a1:	imul   ebx,DWORD PTR [esi+edx*1-0x25fe935c],0xffffff94
  4143a9:	add    BYTE PTR [ebx+0x3d],dl
  4143ac:	imul   esi,DWORD PTR [ebp-0x121967b0],0xa61c824d
  4143b6:	push   ebx
  4143b7:	cld    
  4143b8:	ss xchg ecx,eax
  4143ba:	(bad)  
  4143bb:	in     eax,dx
  4143bc:	int    0xf9
  4143be:	push   ss
  4143bf:	sub    ah,cl
  4143c1:	ror    DWORD PTR [ecx-0x3965ca6d],0x14
  4143c8:	jmp    0x4143bd
  4143ca:	cwde   
  4143cb:	adc    DWORD PTR [edi+0x23],ebx
  4143ce:	pop    edi
  4143cf:	(bad)  
  4143d0:	push   edx
  4143d1:	adc    edx,esp
  4143d3:	pop    esi
  4143d4:	jae    0x41437d
  4143d6:	(bad)  
  4143d7:	jmp    0x414458
  4143d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143da:	(bad)  
  4143db:	fist   WORD PTR [edi]
  4143dd:	jmp    0xfe18:0xacc672a4
  4143e4:	fcom   QWORD PTR [esi]
  4143e6:	rol    BYTE PTR [esi+ebx*4-0x443215b5],0x93
  4143ee:	add    edi,DWORD PTR [ecx]
  4143f0:	pop    esp
  4143f1:	cwde   
  4143f2:	ffree  st(2)
  4143f4:	sub    eax,0x44899d2
  4143f9:	out    0xe5,eax
  4143fb:	sub    BYTE PTR [edi-0x599b5c31],dl
  414401:	inc    ebx
  414402:	adc    esi,DWORD PTR [ebx-0x2829906b]
  414408:	call   0xa2f20288
  41440d:	inc    edx
  41440e:	jnp    0x414401
  414410:	sub    bh,cl
  414412:	xor    ebx,ebx
  414414:	mov    eax,0xb50e07a7
  414419:	(bad)  
  41441b:	stos   DWORD PTR es:[edi],eax
  41441c:	rol    DWORD PTR [edi],1
  41441e:	outs   dx,BYTE PTR ds:[esi]
  41441f:	jae    0x4143dd
  414421:	jne    0x4143e1
  414423:	sbb    ebp,DWORD PTR [edx]
  414425:	and    eax,0xfaf5e39c
  41442a:	in     al,dx
  41442b:	lock jecxz 0x4143ce
  41442e:	gs jmp 0x414431
  414431:	loope  0x414492
  414433:	mov    ds:0x15e2a39,eax
  414438:	mov    bh,0xbe
  41443a:	into   
  41443b:	xlat   BYTE PTR ds:[ebx]
  41443c:	(bad)  
  41443d:	cmp    BYTE PTR [edx-0x2b278b18],dh
  414443:	ins    BYTE PTR es:[edi],dx
  414444:	cmp    edx,0x50
  414447:	call   0x1d4f:0x19d0dd7a
  41444e:	push   esi
  41444f:	stos   DWORD PTR es:[edi],eax
  414450:	mov    edx,0xb31974d
  414455:	inc    edx
  414456:	and    eax,0x60f411c0
  41445b:	sub    al,0xcb
  41445d:	dec    DWORD PTR ds:0xfab15e5d
  414463:	dec    ebp
  414464:	pop    ecx
  414465:	cld    
  414466:	inc    esp
  414467:	mov    bh,0x8f
  414469:	aaa    
  41446a:	aaa    
  41446b:	and    BYTE PTR [ebx+eiz*8+0x4703a592],al
  414472:	fcom   DWORD PTR [ebp+eiz*1-0x7f]
  414476:	sbb    eax,0xbad0d5fe
  41447b:	or     ch,cl
  41447d:	pop    esp
  41447e:	sar    BYTE PTR [ebx+0x5d5cd117],0x51
  414485:	das    
  414486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414487:	add    al,0x55
  414489:	(bad)  
  41448a:	shr    DWORD PTR [edi-0x2a6aeb85],1
  414490:	sbb    BYTE PTR ds:0x5b9b497d,cl
  414496:	adc    al,BYTE PTR [eax+eax*4+0x54]
  41449a:	fisttp DWORD PTR [esi-0x427e32e7]
  4144a0:	xor    al,0x54
  4144a2:	fs stc 
  4144a4:	pusha  
  4144a5:	(bad)  
  4144a6:	(bad)  
  4144a7:	mov    ebx,0xb66e7ad7
  4144ac:	nop
  4144ad:	jns    0x414511
  4144af:	js     0x414443
  4144b1:	out    dx,al
  4144b2:	mov    ds:0xfb098a26,eax
  4144b7:	push   cs
  4144b8:	cmp    DWORD PTR [edx+0x64313fe7],esi
  4144be:	nop
  4144bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144c0:	add    al,0x61
  4144c2:	add    eax,0x9e25f646
  4144c7:	fstp   DWORD PTR [eax]
  4144c9:	call   0xcd3e:0x3412bdc
  4144d0:	jl     0x4144b2
  4144d2:	cmp    dh,BYTE PTR [edx-0x2d2bec70]
  4144d8:	sub    dl,bl
  4144da:	mov    bl,0x66
  4144dc:	adc    al,0xf1
  4144de:	dec    ebp
  4144df:	mov    dh,0x7b
  4144e1:	(bad)
  4144e5:	pop    ecx
  4144e6:	xchg   BYTE PTR [eax-0x4f],ah
  4144e9:	scas   eax,DWORD PTR es:[edi]
  4144ea:	and    DWORD PTR [edx],ebp
  4144ec:	iret   
  4144ed:	rol    BYTE PTR [ebx+0x13],cl
  4144f0:	daa    
  4144f1:	mov    dl,0xee
  4144f3:	retf   
  4144f4:	push   ecx
  4144f5:	mov    eax,ds:0xf10f5c56
  4144fa:	ds jl  0x4144a0
  4144fd:	jae    0x4144a6
  4144ff:	lea    ecx,[ebx+eiz*2+0x561ce873]
  414506:	iret   
  414507:	rol    BYTE PTR [edi],1
  414509:	jmp    0x6c7e9c41
  41450e:	js     0x414514
  414510:	je     0x414525
  414512:	push   es
  414513:	push   esp
  414514:	mov    ebx,0xb4e2002
  414519:	pop    es
  41451a:	mov    ds:0xc5f791cb,eax
  41451f:	repnz loop 0x414564
  414522:	jo     0x414515
  414524:	jp     0x41458d
  414526:	cdq    
  414527:	jne    0x41452f
  414529:	xor    BYTE PTR [edx+0x30],bh
  41452c:	xor    dl,BYTE PTR [ebp-0x12]
  41452f:	ss xchg esi,eax
  414531:	jbe    0x4144d5
  414533:	xrelease xchg DWORD PTR [ecx+ecx*4],ebp
  414537:	daa    
  414538:	push   esi
  414539:	inc    DWORD PTR [edx+edi*1]
  41453c:	mov    edx,0x7b51e2d6
  414541:	add    ch,BYTE PTR [ecx]
  414543:	cmp    cl,dh
  414545:	fimul  WORD PTR [ecx-0x2d]
  414548:	jl     0x41459e
  41454a:	adc    dl,dl
  41454c:	mov    DWORD PTR [ebp+0x143a9933],ecx
  414552:	xor    BYTE PTR [ebp+0x549c87dc],ah
  414558:	repz and al,0xa9
  41455b:	sub    eax,0xadc7e26a
  414560:	imul   ecx,DWORD PTR [edx-0x3161e2e6],0x1a
  414567:	push   ds
  414568:	in     eax,0x32
  41456a:	aas    
  41456b:	mov    BYTE PTR [ebx-0x10],bh
  41456e:	xchg   esi,eax
  41456f:	fst    DWORD PTR [ebp-0x5eae533d]
  414575:	outs   dx,DWORD PTR ds:[esi]
  414576:	cmp    BYTE PTR [edx],al
  414578:	dec    esi
  414579:	jg     0x414557
  41457b:	inc    ebx
  41457c:	xchg   esp,eax
  41457d:	arpl   WORD PTR [ebx+eax*2+0x351a73d3],bx
  414584:	mov    al,0xce
  414586:	sub    BYTE PTR fs:[ebp-0x5f716320],0xc3
  41458e:	push   edi
  41458f:	adc    BYTE PTR [ebp-0x339e1a25],dh
  414595:	outs   dx,BYTE PTR ds:[esi]
  414596:	jl     0x414524
  414598:	jmp    0x41451f
  41459a:	dec    esp
  41459b:	lods   eax,DWORD PTR ds:[esi]
  41459c:	loop   0x4145f2
  41459e:	scas   eax,DWORD PTR es:[edi]
  41459f:	aaa    
  4145a0:	addr16 daa 
  4145a2:	jmp    0xc974:0x587d6483
  4145a9:	dec    esi
  4145aa:	cmp    al,0x6f
  4145ac:	clc    
  4145ad:	cmp    edx,edi
  4145af:	dec    esp
  4145b0:	and    BYTE PTR [ebx],0x79
  4145b3:	cmp    BYTE PTR [ebx],0x70
  4145b6:	(bad)  
  4145b7:	gs mov ebp,0xd4d0c672
  4145bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145be:	enter  0xe866,0x3c
  4145c2:	inc    edi
  4145c3:	cmc    
  4145c4:	daa    
  4145c5:	lahf   
  4145c6:	(bad)  
  4145c7:	retf   0x1c9
  4145ca:	dec    esi
  4145cb:	mov    esp,0x42bf05c0
  4145d0:	lods   eax,DWORD PTR ds:[esi]
  4145d1:	mov    ecx,0x6d776323
  4145d6:	adc    DWORD PTR [ecx-0x27],0xecd70c75
  4145dd:	(bad)  
  4145de:	inc    esp
  4145df:	lahf   
  4145e0:	dec    ebx
  4145e1:	xor    al,0xd6
  4145e3:	ja     0x414596
  4145e5:	add    al,0x5d
  4145e7:	add    al,0xc9
  4145e9:	dec    ebx
  4145ea:	push   edx
  4145eb:	out    0xce,eax
  4145ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145ee:	xchg   BYTE PTR [ebx],al
  4145f0:	stc    
  4145f1:	sar    BYTE PTR [ecx-0x9],cl
  4145f4:	mov    cs,WORD PTR [ebx-0x253dcd09]
  4145fa:	mov    DWORD PTR ss:[ecx],ebx
  4145fd:	fdivr  DWORD PTR [edi+0x78]
  414600:	xor    BYTE PTR [ecx+0x4a764390],bh
  414606:	jb     0x414683
  414608:	push   edi
  414609:	sbb    ah,BYTE PTR [edi+0x66]
  41460c:	and    al,0x9c
  41460e:	lods   al,BYTE PTR ds:[esi]
  41460f:	pop    ecx
  414610:	jecxz  0x414656
  414612:	aam    0x7f
  414614:	mov    ch,0x42
  414616:	mov    bl,0x74
  414618:	inc    edi
  414619:	mov    ds,esp
  41461b:	cli    
  41461c:	es or  ebp,esp
  41461f:	mov    dh,BYTE PTR [edi+esi*1+0x4f]
  414623:	pusha  
  414624:	push   0xd
  414626:	jg     0x414646
  414628:	inc    ebp
  414629:	adc    DWORD PTR ds:0xff2a85d1,edi
  41462f:	or     esp,DWORD PTR [ebx-0x38f84308]
  414635:	jle    0x4145f5
  414637:	repz pushf 
  414639:	ret    0xb99b
  41463c:	mov    edi,0xec991dca
  414641:	mov    ebp,0x52fbf269
  414646:	std    
  414647:	add    dh,0xad
  41464a:	pop    edi
  41464b:	(bad)  
  41464c:	mov    dl,0xbe
  41464e:	jbe    0x4145d5
  414650:	inc    esp
  414651:	mov    ah,0x1f
  414653:	push   ss
  414654:	pop    es
  414655:	(bad)  [ebp-0x6d]
  414658:	or     DWORD PTR [ecx+0x6a03e22e],ebp
  41465e:	inc    eax
  41465f:	add    dl,BYTE PTR [edx-0x42764e18]
  414665:	jge    0x414629
  414667:	adc    bl,ah
  414669:	clc    
  41466a:	retf   
  41466b:	scas   eax,DWORD PTR es:[edi]
  41466c:	xchg   ebx,eax
  41466d:	xchg   esi,eax
  41466e:	mov    cl,0xf6
  414670:	adc    eax,0x372b730c
  414675:	mov    cl,0x13
  414677:	pop    ebp
  414678:	jo     0x414614
  41467a:	pop    ebx
  41467b:	pop    ss
  41467c:	out    dx,eax
  41467d:	inc    ebp
  41467e:	mov    edx,0x1e6f1767
  414683:	sbb    BYTE PTR [edi],ch
  414685:	jecxz  0x4146fd
  414687:	fld    TBYTE PTR [ecx+0x7f]
  41468a:	jne    0x41465e
  41468c:	mov    BYTE PTR [ecx],dh
  41468e:	mov    ah,0xa8
  414690:	sbb    esp,DWORD PTR [edx]
  414692:	sub    DWORD PTR [ecx-0xc0dbb03],0x42
  414699:	mov    eax,ds:0x761c326e
  41469e:	mov    ch,0xdf
  4146a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146a1:	lahf   
  4146a2:	inc    esi
  4146a3:	cld    
  4146a4:	(bad)  
  4146a5:	fstp   DWORD PTR [esi]
  4146a7:	shl    DWORD PTR [ebp-0x17],1
  4146aa:	fwait
  4146ab:	jae    0x4146c4
  4146ad:	pop    ebx
  4146ae:	mov    esi,0xef2e34c0
  4146b3:	(bad)  
  4146b4:	fcom   QWORD PTR [eax-0x74d83d14]
  4146ba:	push   cs
  4146bb:	mov    esp,0xf0abaabe
  4146c0:	cld    
  4146c1:	call   0x4951:0x4f3bd8ca
  4146c8:	push   edi
  4146c9:	(bad)  
  4146cb:	iret   
  4146cc:	sti    
  4146cd:	(bad)
  4146d0:	fdivr  st,st(5)
  4146d2:	lds    ebp,FWORD PTR [esi+edx*2]
  4146d5:	pop    es
  4146d6:	cwde   
  4146d7:	mov    ds:0xa7a426ca,eax
  4146dc:	jp     0x414676
  4146de:	in     al,0x48
  4146e0:	ror    BYTE PTR [ecx+0xd7c95f4],1
  4146e6:	jle    0x4146a0
  4146e8:	inc    esp
  4146e9:	cdq    
  4146ea:	jp     0x41466f
  4146ec:	scas   al,BYTE PTR es:[edi]
  4146ed:	xor    DWORD PTR [ecx+0x6f],0x49
  4146f1:	mov    DWORD PTR [edx+ebx*8-0x28],ebp
  4146f5:	fnsave [edi]
  4146f7:	nop
  4146f8:	add    eax,0x8d634051
  4146fd:	es ja  0x414739
  414700:	sub    eax,0x95d06c9e
  414705:	jp     0x41474f
  414707:	icebp  
  414708:	sbb    BYTE PTR [ebp+0x69],cl
  41470b:	xor    eax,0x324f6102
  414710:	icebp  
  414711:	xlat   BYTE PTR ds:[ebx]
  414712:	sbb    al,0x6f
  414714:	fidivr WORD PTR [edi+0x3dbd476e]
  41471a:	(bad)  
  41471b:	clc    
  41471c:	loopne 0x414708
  41471e:	mov    ecx,0x9be2b9ff
  414723:	pop    ds
  414724:	add    DWORD PTR [edx],edx
  414726:	imul   BYTE PTR [esp+eiz*4]
  414729:	(bad)  
  41472a:	fild   WORD PTR [edx]
  41472c:	mov    BYTE PTR [eax-0x5a],ch
  41472f:	mov    dl,0xa
  414731:	sub    ch,BYTE PTR [ecx+0x51]
  414734:	pop    ss
  414735:	retf   0xe0ad
  414738:	xchg   edx,eax
  414739:	mov    ebx,edi
  41473b:	mov    esi,0x9c05acb2
  414740:	dec    edi
  414741:	jecxz  0x414747
  414743:	inc    ecx
  414744:	xor    bh,BYTE PTR [esi-0x67]
  414747:	add    DWORD PTR [edx-0x20],0x7
  41474b:	retf   0xf3d8
  41474e:	loopne 0x4147af
  414750:	(bad)  
  414751:	ins    DWORD PTR es:[edi],dx
  414752:	loop   0x4147a2
  414754:	push   ebx
  414755:	popf   
  414756:	sub    BYTE PTR [ecx-0x1c],al
  414759:	and    al,0x51
  41475b:	ror    DWORD PTR [edx+0x39a034ab],1
  414761:	mov    edi,0x9f077f80
  414766:	(bad)  
  414767:	fdivp  st(2),st
  414769:	add    bh,BYTE PTR [edi+ecx*1+0x5]
  41476d:	out    0xde,al
  41476f:	add    DWORD PTR ss:[ecx+0x73],ebp
  414773:	js     0x414752
  414775:	mov    edi,0xf07acbfd
  41477a:	cmc    
  41477b:	test   al,0xd7
  41477d:	rcl    edi,1
  41477f:	repz mov esp,0x88a3c007
  414785:	retf   0x5232
  414788:	inc    ebp
  414789:	adc    bl,BYTE PTR ds:0x67b69c98
  41478f:	push   edx
  414790:	mov    DWORD PTR [ecx],ecx
  414792:	into   
  414793:	(bad)  
  414794:	std    
  414795:	mov    ah,0x84
  414797:	mov    esp,0x989dbf75
  41479c:	(bad)  
  41479d:	adc    BYTE PTR [eax],bl
  41479f:	xor    al,0x3b
  4147a1:	cmp    ecx,DWORD PTR [eax-0x19]
  4147a4:	cmp    al,0xa8
  4147a6:	ss jge 0x4147cc
  4147a9:	das    
  4147aa:	in     eax,0x50
  4147ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ad:	popf   
  4147ae:	imul   eax,DWORD PTR [ebp-0x44198c8e],0x7d
  4147b5:	mov    BYTE PTR [ebx+0x4b],bl
  4147b8:	jg     0x4147c6
  4147ba:	sbb    al,0xdc
  4147bc:	dec    edx
  4147bd:	iret   
  4147be:	jno    0x414833
  4147c0:	xchg   ebx,eax
  4147c1:	call   0x25c40e56
  4147c6:	pop    ss
  4147c7:	and    ecx,ebx
  4147c9:	mov    edi,0x6674051
  4147ce:	loope  0x4147fb
  4147d0:	test   BYTE PTR [edi-0x4e],al
  4147d3:	cmp    al,BYTE PTR [esi-0x42650423]
  4147d9:	cli    
  4147da:	fcomp  QWORD PTR [eax+0x78fd7669]
  4147e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e1:	shl    DWORD PTR [ebx],cl
  4147e3:	bound  ebp,QWORD PTR [eax]
  4147e5:	sbb    eax,0xaf87399b
  4147ea:	xchg   ecx,eax
  4147eb:	out    0xea,al
  4147ed:	push   ds
  4147ee:	mov    BYTE PTR [ebx],bl
  4147f0:	out    dx,al
  4147f1:	int    0xc
  4147f3:	add    BYTE PTR [edx+0x64],ah
  4147f6:	popa   
  4147f7:	pop    esi
  4147f8:	adc    bh,dh
  4147fa:	in     eax,0xd5
  4147fc:	dec    eax
  4147fd:	pop    ds
  4147fe:	loope  0x414782
  414800:	dec    ecx
  414801:	imul   edx,DWORD PTR [edi-0x23],0x6b
  414805:	int    0x1a
  414807:	xchg   edx,eax
  414808:	pusha  
  414809:	sahf   
  41480a:	jmp    FWORD PTR [edi+ebx*4+0x5930d1fb]
  414811:	jle    0x41483c
  414813:	aaa    
  414814:	retf   0xde53
  414817:	je     0x4147d4
  414819:	test   eax,0x817c3122
  41481e:	arpl   WORD PTR [edi+0x10],si
  414821:	lods   eax,DWORD PTR ds:[esi]
  414822:	ja     0x41483f
  414824:	mov    edx,0x802c60d6
  414829:	mov    bh,BYTE PTR [eax-0x379f4613]
  41482f:	mov    ah,0xf4
  414831:	xor    ebp,esp
  414833:	pop    ebp
  414834:	lea    eax,[esi-0x73]
  414837:	popa   
  414838:	cmp    BYTE PTR [ebp-0x342ae99f],dl
  41483e:	mov    al,BYTE PTR [edi+0x4d]
  414841:	fdivrp st(1),st
  414843:	rcl    BYTE PTR [edx+0x34f01989],0x12
  41484a:	mov    ebx,0xd47c7925
  41484f:	pop    ebx
  414850:	cld    
  414851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414852:	and    BYTE PTR [ecx],al
  414854:	pop    edx
  414855:	js     0x414832
  414857:	ds xor al,0xd4
  41485a:	mov    al,0xf9
  41485c:	clc    
  41485d:	adc    dh,BYTE PTR [eax]
  41485f:	ins    BYTE PTR es:[edi],dx
  414860:	aad    0xa0
  414862:	stos   DWORD PTR es:[edi],eax
  414863:	mov    cl,0xc3
  414865:	aam    0x21
  414867:	mov    ebx,edx
  414869:	call   0x87d4e367
  41486e:	std    
  41486f:	mov    es,WORD PTR [ebp+0x7e]
  414872:	mov    ecx,0xe1e9b146
  414877:	push   ecx
  414878:	push   ebx
  414879:	out    dx,al
  41487a:	xor    ebx,ecx
  41487c:	(bad)  
  41487d:	adc    eax,0x64f2a9b4
  414882:	je     0x4148ff
  414884:	(bad)  
  414885:	sub    DWORD PTR [edx+ecx*2-0x4b],ebx
  414889:	(bad)  
  41488a:	je     0x41484d
  41488c:	adc    eax,0x67d2bb34
  414891:	and    al,BYTE PTR gs:0x98360a65
  414898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414899:	jns    0x414826
  41489b:	test   eax,0x2529df13
  4148a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148a1:	adc    bl,BYTE PTR [ecx+0x47]
  4148a4:	pop    edx
  4148a5:	(bad)  
  4148a6:	fdivp  st(4),st
  4148a8:	test   BYTE PTR [ebp-0x43],0xe3
  4148ac:	pop    es
  4148ad:	xchg   edx,eax
  4148ae:	cmp    esp,DWORD PTR [esi+0x7b]
  4148b1:	lds    ecx,FWORD PTR [ebx-0x782b6db]
  4148b7:	push   ecx
  4148b8:	xor    ebp,DWORD PTR [esi]
  4148ba:	cdq    
  4148bb:	mov    dh,0xa6
  4148bd:	inc    esi
  4148be:	pop    ds
  4148bf:	mov    BYTE PTR [edx],dl
  4148c1:	hlt    
  4148c2:	xchg   ebx,eax
  4148c3:	add    BYTE PTR [eax-0x25],0x5f
  4148c7:	mov    ah,0xe8
  4148c9:	and    al,BYTE PTR [esp+ebx*2+0x7]
  4148cd:	add    ebx,DWORD PTR [eax]
  4148cf:	int    0x5b
  4148d1:	test   BYTE PTR [esp+edi*2+0x7c66b845],dl
  4148d8:	mov    bh,0xa4
  4148da:	pop    ds
  4148db:	stos   BYTE PTR es:[edi],al
  4148dc:	and    edi,esi
  4148de:	xor    ebp,0xffffffd1
  4148e1:	mov    edx,DWORD PTR [edi+0x157e5f1c]
  4148e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148e8:	sbb    al,0x2e
  4148ea:	push   ebx
  4148eb:	mov    BYTE PTR [esi-0x3d4821b9],al
  4148f1:	stos   DWORD PTR es:[edi],eax
  4148f2:	inc    esi
  4148f3:	fdivr  DWORD PTR ds:0xc06ab14d
  4148f9:	mov    ebp,0x94ad6336
  4148fe:	repz jge 0x4148a1
  414901:	shl    DWORD PTR fs:[ecx-0x72],1
  414905:	(bad)  
  414906:	fcom   QWORD PTR [ecx+0x3c]
  414909:	pop    esp
  41490a:	mov    edx,0x245b594d
  41490f:	sub    esi,DWORD PTR [ebp-0xa7fce1e]
  414915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414916:	cld    
  414917:	sub    al,BYTE PTR [eax+0x7a]
  41491a:	or     WORD PTR [ebp+esi*4+0x4b],di
  41491f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414920:	dec    edx
  414921:	repz fadd DWORD PTR [edx-0x4f9386d1]
  414928:	adc    DWORD PTR [esi+eax*1-0x1203b9db],ebx
  41492f:	ins    BYTE PTR es:[edi],dx
  414930:	sub    eax,0x9bd3cf33
  414935:	mov    ebp,0x8757fe7c
  41493a:	inc    esi
  41493b:	pop    edi
  41493c:	cmp    eax,ebp
  41493e:	mov    ch,0x80
  414940:	and    bh,BYTE PTR [ebp+0x30]
  414943:	les    edx,FWORD PTR [ebp+0x3c]
  414946:	mov    gs,WORD PTR [ebx-0x19]
  414949:	aaa    
  41494a:	test   BYTE PTR [esi],cl
  41494c:	int    0x32
  41494e:	sbb    bl,ah
  414950:	xchg   ecx,eax
  414951:	jge    0x41492b
  414953:	sbb    eax,0xb3553b07
  414958:	fsubr  QWORD PTR [edx]
  41495a:	xchg   esp,eax
  41495b:	mov    eax,ds:0x4b28e2c6
  414960:	jno    0x4149be
  414962:	ficom  WORD PTR [esi-0x480fe86f]
  414968:	std    
  414969:	push   ebp
  41496a:	sbb    al,0xf9
  41496c:	jns    0x4148f8
  41496e:	cmp    BYTE PTR [ecx+0x25b4c084],0x89
  414975:	sub    al,0x63
  414977:	cs or  al,0x7c
  41497a:	xor    BYTE PTR [esi+ecx*1],0xf
  41497e:	xor    al,0x2e
  414980:	loope  0x4149a6
  414982:	rcr    cl,1
  414984:	enter  0x9dab,0xbd
  414988:	in     eax,dx
  414989:	dec    edi
  41498a:	xchg   esp,eax
  41498b:	or     al,0xc7
  41498d:	stos   DWORD PTR es:[edi],eax
  41498e:	jmp    0xcc52:0x20369d7d
  414995:	nop
  414996:	rcr    BYTE PTR [ecx-0x6690e4a7],1
  41499c:	idiv   BYTE PTR [ebx+0x6f9f4c30]
  4149a2:	or     al,0xd6
  4149a4:	mov    DWORD PTR [edx-0x5aa77219],ebp
  4149aa:	push   edi
  4149ab:	dec    ebp
  4149ac:	stos   DWORD PTR es:[edi],eax
  4149ad:	jmp    0x82ec0a8e
  4149b2:	pusha  
  4149b3:	(bad)  
  4149b4:	push   0x29
  4149b6:	ret    
  4149b7:	add    DWORD PTR [ecx-0x2e55c4bd],esp
  4149bd:	mov    cl,0xb8
  4149bf:	scas   eax,DWORD PTR es:[edi]
  4149c0:	push   0xffffffb4
  4149c2:	push   cs
  4149c3:	clc    
  4149c4:	mov    esi,0xa3e5c04f
  4149c9:	mov    dl,0x6d
  4149cb:	and    bl,al
  4149cd:	or     al,0xce
  4149cf:	ret    
  4149d0:	outs   dx,BYTE PTR ds:[esi]
  4149d1:	fld    QWORD PTR [ebp-0x37]
  4149d4:	fsubrp st(2),st
  4149d6:	sbb    eax,0x7794128d
  4149db:	jle    0x41495e
  4149dd:	push   es
  4149de:	inc    esp
  4149df:	xchg   BYTE PTR ds:0xa562c156,ch
  4149e5:	(bad)  
  4149e6:	mov    ch,0x99
  4149e8:	lods   al,BYTE PTR ds:[esi]
  4149e9:	pop    edi
  4149ea:	test   BYTE PTR [ebx+eax*1+0x51],ch
  4149ee:	cmp    dh,al
  4149f0:	xlat   BYTE PTR ds:[ebx]
  4149f1:	jns    0x4149ed
  4149f3:	scas   al,BYTE PTR es:[edi]
  4149f4:	(bad)  
  4149f5:	sbb    DWORD PTR [edi-0x3ad8445],edx
  4149fb:	fld    st(1)
  4149fd:	inc    edi
  4149fe:	jmp    0x414a47
  414a00:	pop    eax
  414a01:	adc    eax,0x9e8dd056
  414a06:	inc    ebp
  414a07:	ror    DWORD PTR [edx-0x5caa720b],1
  414a0d:	mov    dl,0x9a
  414a0f:	jbe    0x414a12
  414a11:	cmp    DWORD PTR [esi],ecx
  414a13:	(bad)  
  414a15:	rol    ebx,cl
  414a17:	add    edx,DWORD PTR [ebx-0x784bb946]
  414a1d:	lods   eax,DWORD PTR ds:[esi]
  414a1e:	mov    fs,WORD PTR [eax+0x21]
  414a21:	pop    ss
  414a22:	mov    esp,0x7553410a
  414a27:	dec    ecx
  414a28:	lods   al,BYTE PTR ds:[esi]
  414a29:	or     ecx,eax
  414a2b:	pop    ss
  414a2c:	in     eax,dx
  414a2d:	repnz scas eax,DWORD PTR es:[edi]
  414a2f:	adc    ah,ah
  414a31:	stos   BYTE PTR es:[edi],al
  414a32:	das    
  414a33:	test   ah,bl
  414a35:	test   BYTE PTR gs:[eax-0x6a65e2f7],0xd8
  414a3d:	add    ah,dl
  414a3f:	fsubrp st(6),st
  414a41:	mov    al,0x9e
  414a43:	inc    edx
  414a44:	ins    DWORD PTR es:[edi],dx
  414a45:	cmc    
  414a46:	or     eax,0x588f7f41
  414a4b:	loop   0x414a96
  414a4d:	lahf   
  414a4e:	jecxz  0x414a21
  414a50:	mov    edx,0x78043d5c
  414a55:	push   esp
  414a56:	sbb    eax,0xbb132b80
  414a5b:	add    edx,DWORD PTR [ecx+0x21]
  414a5e:	sti    
  414a5f:	fcomi  st,st(3)
  414a61:	out    dx,al
  414a62:	sar    dh,cl
  414a64:	push   cs
  414a65:	shr    BYTE PTR [eax],1
  414a67:	push   eax
  414a68:	mov    ecx,0x88ae1fe2
  414a6d:	adc    ah,BYTE PTR [edi-0x21]
  414a70:	test   al,0xe6
  414a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a73:	call   0x771d:0x1377c3f0
  414a7a:	add    edx,DWORD PTR [eax+0x18]
  414a7d:	ret    
  414a7e:	adc    edi,DWORD PTR [ebx]
  414a80:	in     eax,dx
  414a81:	push   ebx
  414a82:	xor    BYTE PTR [ebp+0x6d437bda],bh
  414a88:	push   eax
  414a89:	(bad)  
  414a8a:	xchg   ecx,eax
  414a8b:	popa   
  414a8c:	add    eax,0x924a8eb3
  414a91:	repnz enter 0xc251,0x84
  414a96:	mov    esi,0x261e6154
  414a9b:	fs mov esi,0x44f9005a
  414aa1:	dec    ebx
  414aa2:	je     0x414a6e
  414aa4:	dec    ecx
  414aa5:	cmp    ch,BYTE PTR ds:0xaa598644
  414aab:	in     eax,0x6f
  414aad:	jno    0x414b15
  414aaf:	dec    edi
  414ab0:	xchg   cl,dh
  414ab2:	xor    eax,0x853ec9e9
  414ab7:	retf   
  414ab8:	mov    edi,0x138f6385
  414abd:	rol    BYTE PTR [edi],0x7
  414ac0:	xchg   BYTE PTR ds:0xecfdc58b,ah
  414ac6:	call   0x3a50:0x2f95d45a
  414acd:	push   eax
  414ace:	add    eax,0x729c4d2d
  414ad3:	or     esp,DWORD PTR [esi-0x2bfee396]
  414ad9:	fstp   TBYTE PTR [ebp-0x76]
  414adc:	fisub  DWORD PTR [ecx]
  414ade:	xor    ah,bl
  414ae0:	xchg   ebx,eax
  414ae1:	cli    
  414ae2:	aam    0x3d
  414ae4:	sub    al,0x71
  414ae6:	stos   DWORD PTR es:[edi],eax
  414ae7:	xor    al,0x76
  414ae9:	and    cl,BYTE PTR [ebx]
  414aeb:	cmp    esp,DWORD PTR [ebp-0x1e47ef2b]
  414af1:	sbb    BYTE PTR [ebp+0x5],al
  414af4:	outs   dx,BYTE PTR ds:[esi]
  414af5:	mov    esi,0x4d0e9234
  414afa:	mov    WORD PTR [edx-0x330c4435],gs
  414b00:	int3   
  414b01:	test   DWORD PTR [ebx+edx*1],eax
  414b04:	xor    al,0x42
  414b06:	in     eax,dx
  414b07:	inc    edx
  414b08:	pop    ds
  414b09:	dec    esp
  414b0a:	dec    ecx
  414b0b:	enter  0x2535,0xc3
  414b0f:	jno    0x414b36
  414b11:	hlt    
  414b12:	fimul  DWORD PTR [esi]
  414b14:	dec    edi
  414b15:	inc    esp
  414b16:	sbb    eax,0x51ccb3c5
  414b1b:	push   ebp
  414b1c:	add    DWORD PTR [ebx],edi
  414b1e:	dec    ecx
  414b1f:	fisttp WORD PTR [ecx-0x2a]
  414b22:	mov    ds:0xcfbb1f27,eax
  414b27:	jl     0x414ad3
  414b29:	inc    esp
  414b2a:	loope  0x414b71
  414b2c:	pop    ss
  414b2d:	mov    eax,0xbed65716
  414b32:	push   ecx
  414b33:	mov    ds:0xcbc85974,eax
  414b38:	push   edx
  414b39:	leave  
  414b3a:	mov    ?,WORD PTR [eax]
  414b3c:	sahf   
  414b3d:	xor    al,0xf2
  414b3f:	rcr    DWORD PTR [eax+0x55],1
  414b42:	xor    al,0x4d
  414b44:	inc    esi
  414b45:	iret   
  414b46:	(bad)  
  414b47:	repz sub ecx,DWORD PTR [ebx]
  414b4a:	mov    ch,0x51
  414b4c:	nop
  414b4d:	cli    
  414b4e:	sub    ch,BYTE PTR [edx+0x2f]
  414b51:	jle    0x414bb1
  414b53:	jmp    0x88f1:0x9eba0396
  414b5a:	shl    BYTE PTR [ecx+ebp*4],0xe9
  414b5e:	dec    ebp
  414b5f:	inc    edx
  414b60:	sbb    ah,dl
  414b62:	dec    ebp
  414b64:	mov    al,ds:0xf1e1a5db
  414b69:	mov    ecx,0x21011246
  414b6e:	inc    ebp
  414b6f:	fnsave [eax-0x1d55e3d7]
  414b75:	js     0x414b43
  414b77:	(bad)  
  414b78:	je     0x414b4f
  414b7a:	mov    cl,0x53
  414b7c:	cdq    
  414b7d:	xlat   BYTE PTR ds:[ebx]
  414b7e:	mov    dh,0x94
  414b80:	cli    
  414b81:	mov    ecx,DWORD PTR [ecx+0x19d0206b]
  414b87:	or     al,BYTE PTR [ecx+eiz*2]
  414b8a:	ss jl  0x414bc0
  414b8d:	repz sub bh,BYTE PTR [edx+0x15]
  414b91:	(bad)  
  414b92:	pop    ss
  414b93:	jl     0x414bd0
  414b95:	push   esp
  414b96:	xchg   esi,eax
  414b97:	rcr    DWORD PTR [edx],1
  414b99:	pop    ds
  414b9a:	(bad)  
  414b9c:	(bad)  
  414b9e:	pusha  
  414b9f:	fwait
  414ba0:	pusha  
  414ba1:	data16 jb 0x414c02
  414ba4:	dec    esp
  414ba5:	mov    cl,0x59
  414ba7:	bound  esp,QWORD PTR [ecx-0x57]
  414baa:	push   0xffffffa1
  414bac:	sahf   
  414bad:	fidiv  WORD PTR [esi-0x6f]
  414bb0:	inc    esp
  414bb1:	adc    DWORD PTR [ebp+0x58],ebx
  414bb4:	out    dx,eax
  414bb5:	xor    eax,0x235577f
  414bba:	jno    0x414be0
  414bbc:	pop    edi
  414bbd:	inc    edi
  414bbe:	xchg   ebx,eax
  414bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bc0:	sar    DWORD PTR [esi+edx*8+0x73],0x14
  414bc5:	jge    0x414c08
  414bc7:	jnp    0x414be4
  414bc9:	push   0xffffffa4
  414bcb:	xor    BYTE PTR [ecx],0x17
  414bce:	pop    esi
  414bcf:	mov    cl,0xb2
  414bd1:	je     0x414baf
  414bd3:	jmp    FWORD PTR [ebx+eiz*2]
  414bd6:	fstp   st(2)
  414bd8:	pop    ebp
  414bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bda:	jl     0x414c26
  414bdc:	pop    eax
  414bdd:	or     DWORD PTR [ebx-0x59],edi
  414be0:	std    
  414be1:	cmp    DWORD PTR [edi-0x51319c4c],0x34
  414be8:	jle    0x414b8c
  414bea:	add    eax,0x152002b7
  414bef:	out    dx,al
  414bf0:	icebp  
  414bf1:	sub    bh,BYTE PTR [edi-0x2c918ac6]
  414bf7:	(bad)  [eax]
  414bf9:	add    DWORD PTR [eax+0x42],0x847dfe53
  414c00:	sub    BYTE PTR [eax+0x34],dh
  414c03:	mov    edi,0x784e7018
  414c08:	mov    dh,0x3d
  414c0a:	mov    dh,0x9e
  414c0c:	cmp    ebx,ebx
  414c0e:	mov    ds:0x743710a7,eax
  414c13:	inc    ebp
  414c14:	mov    ebp,0xafbd96a2
  414c19:	(bad)  
  414c1a:	(bad)  
  414c1b:	cmp    eax,0xa004ccbc
  414c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c21:	push   esp
  414c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c23:	iret   
  414c24:	or     ah,BYTE PTR [esi+0x71]
  414c27:	daa    
  414c28:	mov    ecx,0x19fb7abd
  414c2d:	lods   al,BYTE PTR ds:[esi]
  414c2e:	or     al,0xa6
  414c30:	or     al,0x6f
  414c32:	fst    QWORD PTR [esi]
  414c34:	sahf   
  414c35:	daa    
  414c36:	fadd   DWORD PTR ds:0x8566826f
  414c3c:	sbb    al,0x3d
  414c3e:	mov    ch,0x4f
  414c40:	jb     0x414c23
  414c42:	aaa    
  414c43:	(bad)  
  414c44:	aad    0xf5
  414c46:	adc    DWORD PTR ds:0x4d34ea62,ecx
  414c4c:	dec    esp
  414c4d:	mov    ecx,0xe9856c0d
  414c52:	imul   esi,DWORD PTR [edi+0x3e],0xfeeda4dd
  414c59:	pop    edi
  414c5a:	loope  0x414c39
  414c5c:	and    dh,BYTE PTR [esi*1-0x302eae]
  414c63:	lahf   
  414c64:	lods   eax,DWORD PTR ds:[esi]
  414c65:	aam    0x3
  414c67:	mov    ebp,0xec05d3db
  414c6c:	dec    edx
  414c6d:	(bad)  
  414c6e:	push   0xffffff92
  414c70:	sbb    cl,BYTE PTR [ecx+0x6784a10a]
  414c76:	adc    al,BYTE PTR [ebx-0x8]
  414c79:	and    al,0x7e
  414c7b:	push   ebx
  414c7c:	outs   dx,BYTE PTR ds:[esi]
  414c7d:	adc    BYTE PTR [ecx],dl
  414c7f:	xor    al,0x52
  414c81:	push   0x6d
  414c83:	dec    ebx
  414c84:	mov    BYTE PTR [edx+0x34dbcfa1],cl
  414c8a:	push   cs
  414c8b:	dec    ecx
  414c8c:	cs jne 0x414cc3
  414c8f:	das    
  414c90:	push   edx
  414c91:	jne    0x414c63
  414c93:	jge    0x414c54
  414c95:	ret    0xef3a
  414c98:	add    ecx,ebp
  414c9a:	(bad)  
  414c9c:	lock (bad) 
  414c9e:	out    dx,al
  414c9f:	fnstenv [esi]
  414ca1:	test   DWORD PTR [ebp-0x4fc75d28],0x1bdcbe8b
  414cab:	ret    
  414cac:	cmp    esp,DWORD PTR [eax+0x3564f74a]
  414cb2:	ret    0xc23c
  414cb5:	push   ebx
  414cb6:	imul   BYTE PTR [ebx-0x4b]
  414cb9:	outs   dx,DWORD PTR ds:[esi]
  414cba:	punpckhdq mm6,QWORD PTR [ecx-0x2133cdce]
  414cc1:	jb     0x414ca7
  414cc3:	mov    DWORD PTR ds:0x260936f8,0xfe0a6812
  414ccd:	adc    BYTE PTR [ebx-0x5],ch
  414cd0:	push   ebp
  414cd1:	jge    0x414c59
  414cd3:	pop    esp
  414cd4:	sti    
  414cd5:	shl    BYTE PTR [esi-0x41e0d3ca],0xb6
  414cdc:	push   ss
  414cdd:	xor    eax,0xe2a933a9
  414ce2:	call   0xf291f640
  414ce7:	lea    esi,[eax]
  414ce9:	fstp   st(4)
  414ceb:	dec    edx
  414cec:	add    al,0x77
  414cee:	sar    DWORD PTR [esi+0x3fec28fe],cl
  414cf4:	ror    DWORD PTR [esi],1
  414cf6:	retf   0x1df4
  414cf9:	loopne 0x414d09
  414cfb:	add    eax,0xb742da2
  414d00:	outs   dx,DWORD PTR ds:[esi]
  414d01:	push   edi
  414d02:	sub    DWORD PTR [edx],esi
  414d04:	adc    bl,BYTE PTR [edx+0xb]
  414d07:	xchg   edx,eax
  414d08:	push   ss
  414d09:	mov    eax,ds:0x314d2144
  414d0e:	xchg   edi,eax
  414d0f:	sub    dh,BYTE PTR [ebx]
  414d11:	dec    ebp
  414d12:	lock imul ecx,DWORD PTR [edx-0x64639f56],0x39
  414d1a:	mov    bh,bh
  414d1c:	dec    ebx
  414d1d:	sub    eax,0xdf0c53ed
  414d22:	clc    
  414d23:	(bad)  
  414d24:	dec    esp
  414d25:	add    al,0x56
  414d27:	sti    
  414d28:	pop    ebx
  414d29:	and    cl,dl
  414d2b:	out    0xb6,eax
  414d2d:	stos   BYTE PTR es:[edi],al
  414d2e:	sub    BYTE PTR [ebx-0x8044e5a],al
  414d34:	sahf   
  414d35:	outs   dx,BYTE PTR ds:[esi]
  414d36:	pop    ebp
  414d37:	pminsw mm7,QWORD PTR [edi]
  414d3a:	or     BYTE PTR [edx],ch
  414d3c:	js     0x414d97
  414d3e:	cmp    al,0xf8
  414d40:	fisttp QWORD PTR [ecx]
  414d42:	ror    ch,0xfa
  414d45:	or     edi,DWORD PTR [ecx-0x2f684399]
  414d4b:	push   esp
  414d4c:	jl     0x414d2d
  414d4e:	or     dl,BYTE PTR [eax-0x61]
  414d51:	sbb    ebx,DWORD PTR [edx+0x7a]
  414d54:	mov    edi,0x64d78aa4
  414d59:	pop    ebx
  414d5a:	call   0x720a:0xf050bc56
  414d61:	je     0x414de1
  414d63:	pop    ss
  414d64:	cs hlt 
  414d66:	mov    DWORD PTR [ebp+0x6a6d08c5],0x63451fd5
  414d70:	xor    edi,DWORD PTR [eax]
  414d72:	cmc    
  414d73:	sahf   
  414d74:	rcl    BYTE PTR [eax],0x0
  414d77:	pop    esp
  414d78:	ror    DWORD PTR [ecx],0x7f
  414d7b:	jmp    DWORD PTR [eax-0xc8d2dfc]
  414d81:	jge    0x414d54
  414d83:	(bad)  
  414d84:	jle    0x414dd7
  414d86:	mov    ebp,0x12cbd2f3
  414d8b:	sti    
  414d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d8e:	(bad)  
  414d8f:	mov    dl,BYTE PTR [ebp+0xb36a58a]
  414d95:	shl    edi,0xd4
  414d98:	int    0xba
  414d9a:	leave  
  414d9b:	daa    
  414d9c:	out    dx,eax
  414d9d:	mov    DWORD PTR [ebx],0xde7b1939
  414da3:	mov    esp,0xedb45f0f
  414da8:	push   cs
  414da9:	js     0x414dc5
  414dab:	aam    0x28
  414dad:	mov    DWORD PTR [esi],esp
  414daf:	ins    DWORD PTR es:[edi],dx
  414db0:	(bad)  
  414db1:	dec    esp
  414db2:	je     0x414d6c
  414db4:	test   BYTE PTR [eax+0x542bd960],ch
  414dba:	dec    edi
  414dbb:	mov    dl,0xb7
  414dbd:	rcl    BYTE PTR [eax-0x1f],0x37
  414dc1:	jnp    0x414d7e
  414dc3:	cld    
  414dc4:	sub    DWORD PTR [edi+0x6d683002],eax
  414dca:	clc    
  414dcb:	aaa    
  414dcc:	cmp    bh,dl
  414dce:	cmp    eax,0xf49415cd
  414dd3:	jne    0x414e2f
  414dd5:	adc    eax,0xe8c81521
  414dda:	xor    DWORD PTR [eax-0x22],esp
  414ddd:	loop   0x414d6c
  414ddf:	xchg   ecx,edx
  414de1:	adc    al,0xa5
  414de3:	cld    
  414de4:	or     al,0xb8
  414de6:	xor    DWORD PTR es:[edx-0x2],edi
  414dea:	pop    esp
  414deb:	push   ss
  414dec:	ficom  DWORD PTR [edx]
  414dee:	jns    0x414e28
  414df0:	xchg   ebx,eax
  414df1:	ja     0x414dae
  414df3:	sbb    DWORD PTR [edi],ebp
  414df5:	cs loop 0x414e1d
  414df8:	test   bh,0x91
  414dfb:	mov    edi,ecx
  414dfd:	xchg   ecx,eax
  414dfe:	inc    ecx
  414dff:	mul    BYTE PTR [esi]
  414e01:	jne    0x414de1
  414e03:	iret   
  414e04:	pop    ecx
  414e05:	or     eax,DWORD PTR [edx]
  414e07:	nop
  414e08:	aad    0xb
  414e0a:	ins    DWORD PTR es:[edi],dx
  414e0b:	shr    DWORD PTR [ecx],cl
  414e0d:	push   0xffffffcb
  414e0f:	test   DWORD PTR [esi],ebp
  414e11:	rcl    bl,cl
  414e13:	fadd   QWORD PTR [eax]
  414e15:	mov    bl,0x37
  414e17:	retf   
  414e18:	and    eax,DWORD PTR [ecx-0x7a4a19a3]
  414e1e:	lea    eax,[esi+0x3e]
  414e21:	sbb    cl,BYTE PTR [ebx+esi*4-0x4ca1e68d]
  414e28:	imul   ah
  414e2a:	jae    0x414dc8
  414e2c:	sub    ebx,DWORD PTR [esi-0x177830a0]
  414e32:	adc    edi,DWORD PTR [edx-0x792dc77a]
  414e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e39:	out    0x23,al
  414e3b:	pop    edi
  414e3c:	cmp    eax,0x3b361be7
  414e41:	enter  0x4b0f,0x7c
  414e45:	stos   DWORD PTR es:[edi],eax
  414e46:	sub    esi,DWORD PTR [edx+0x61]
  414e49:	sub    DWORD PTR [edx+0x386b5929],esp
  414e4f:	mov    DWORD PTR [esi-0x69e0ff1d],esi
  414e55:	and    ecx,ecx
  414e57:	pop    ecx
  414e58:	and    DWORD PTR [ecx],esi
  414e5a:	frstor [eax-0x57]
  414e5d:	jo     0x414eb5
  414e5f:	adc    eax,0x92bf69f5
  414e64:	cmp    dh,0x8c
  414e67:	mov    edi,0xa9edb70f
  414e6c:	xchg   ecx,eax
  414e6d:	xchg   ecx,eax
  414e6e:	push   ebp
  414e6f:	mov    bh,0xb7
  414e71:	cmp    BYTE PTR [ecx],ah
  414e73:	lods   eax,DWORD PTR ds:[esi]
  414e74:	push   cs
  414e75:	adc    al,0xb5
  414e77:	dec    ecx
  414e78:	sub    edx,DWORD PTR [edi+0x45]
  414e7b:	test   al,0x4
  414e7d:	lock jp 0x414ee6
  414e80:	ins    DWORD PTR es:[edi],dx
  414e81:	xor    ah,dh
  414e83:	mov    DWORD PTR [ecx+0x75],edi
  414e86:	push   eax
  414e87:	push   eax
  414e88:	jno    0x414eb5
  414e8a:	call   0x53ac0e98
  414e8f:	pushf  
  414e90:	dec    esi
  414e91:	mov    eax,ds:0x319a933e
  414e96:	push   0xfffffffe
  414e98:	inc    ecx
  414e99:	mov    bh,0xaa
  414e9b:	mov    ah,0xe1
  414e9d:	fs jno 0x414ec2
  414ea0:	or     BYTE PTR [eax],ah
  414ea2:	das    
  414ea3:	shl    ah,cl
  414ea5:	dec    esp
  414ea6:	jbe    0x414e3b
  414ea8:	push   0xaaac5117
  414ead:	iret   
  414eae:	xor    eax,0x796c9454
  414eb3:	xchg   ecx,eax
  414eb4:	mov    ah,0x59
  414eb6:	in     eax,0x13
  414eb8:	gs enter 0x3d1b,0xdf
  414ebd:	sub    al,0x19
  414ebf:	pushf  
  414ec0:	ret    
  414ec1:	jo     0x414f1a
  414ec3:	outs   dx,DWORD PTR ds:[esi]
  414ec4:	pushf  
  414ec5:	mov    bl,0x87
  414ec7:	jge    0x414e54
  414ec9:	mov    esp,0x5b598e22
  414ece:	mov    edi,0xf9ec3467
  414ed3:	jne    0x414ea4
  414ed5:	push   esp
  414ed6:	(bad)  
  414ed7:	fadd   DWORD PTR [ecx+edx*4+0x36a57843]
  414ede:	and    eax,0x6dfc41b5
  414ee3:	xchg   esi,eax
  414ee4:	mov    al,BYTE PTR [ebx-0x269eea15]
  414eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eeb:	and    esp,eax
  414eed:	outs   dx,BYTE PTR ds:[esi]
  414eee:	call   0xcdb06b60
  414ef3:	call   0x21433ac9
  414ef8:	xlat   BYTE PTR ds:[ebx]
  414ef9:	test   esi,edx
  414efb:	fisub  DWORD PTR [ebx]
  414efd:	sbb    cl,0x6f
  414f00:	add    eax,0xb926352a
  414f05:	dec    esp
  414f06:	sbb    eax,0xa24d04fd
  414f0b:	scas   eax,DWORD PTR es:[edi]
  414f0c:	xchg   DWORD PTR [edx+0x67c1a4a5],ebp
  414f12:	jo     0x414f61
  414f14:	fidivr WORD PTR [ebp+0x4e]
  414f17:	add    DWORD PTR [ecx-0x32],esp
  414f1a:	(bad)
  414f1d:	xor    cl,dh
  414f1f:	mov    ds:0xe9de4c15,al
  414f24:	jge    0x414eca
  414f26:	xor    DWORD PTR [ebx+0x54ae877a],ebp
  414f2c:	repnz inc edi
  414f2e:	icebp  
  414f2f:	enter  0xbf6f,0xce
  414f33:	into   
  414f34:	jecxz  0x414f09
  414f36:	imul   ecx,DWORD PTR [edi-0x76006747],0xffffff8a
  414f3d:	sar    cl,1
  414f3f:	or     al,0x39
  414f41:	sub    eax,ebp
  414f43:	sbb    al,0x35
  414f45:	call   0xa4871dd8
  414f4a:	cs pop ds
  414f4c:	fistp  WORD PTR [esi]
  414f4e:	hlt    
  414f4f:	cmp    DWORD PTR es:[edi],edx
  414f52:	push   esp
  414f53:	or     DWORD PTR [edx+0x28],edx
  414f56:	ror    cl,1
  414f58:	xchg   BYTE PTR [esi-0x23],dh
  414f5b:	stos   BYTE PTR es:[edi],al
  414f5c:	fisttp DWORD PTR [esi-0x76]
  414f5f:	xor    ebp,DWORD PTR [edi+ebp*4]
  414f62:	sbb    BYTE PTR [esi+edx*4+0x27],dh
  414f66:	data16 out dx,al
  414f68:	lea    esp,[edi-0x80]
  414f6b:	enter  0xcd39,0x6b
  414f6f:	test   BYTE PTR [eax+0x53],al
  414f72:	dec    edx
  414f73:	call   0xc147:0x6ab39875
  414f7a:	jp     0x414f0e
  414f7c:	mov    ecx,0x3a01ab9c
  414f81:	lds    ebp,FWORD PTR [ebx]
  414f83:	jmp    0x33795ca6
  414f88:	jmp    0x414f26
  414f8a:	out    0x53,eax
  414f8c:	jnp    0x414fa3
  414f8e:	sub    dh,bh
  414f90:	retf   0xd33e
  414f93:	imul   edx,DWORD PTR [ebx-0x5c],0x8c2b501a
  414f9a:	test   dh,dl
  414f9c:	aaa    
  414f9d:	in     eax,dx
  414f9e:	das    
  414f9f:	xchg   DWORD PTR [edx-0x50],ebx
  414fa2:	pop    edx
  414fa3:	sub    DWORD PTR [ebx+0x64],esi
  414fa6:	inc    ecx
  414fa7:	iret   
  414fa8:	gs cmp eax,0x39d34f10
  414fae:	std    
  414faf:	and    DWORD PTR [esi+0x2204cdff],ebx
  414fb5:	test   BYTE PTR [ebp-0x71ef005a],dh
  414fbb:	(bad)  
  414fbc:	xor    ecx,ecx
  414fbe:	popf   
  414fbf:	lea    ebx,[ebx+0x179a7001]
  414fc5:	test   esp,edx
  414fc7:	test   al,0x9b
  414fc9:	fistp  DWORD PTR [edx-0x71]
  414fcc:	inc    ecx
  414fcd:	jns    0x414fa0
  414fcf:	pop    es
  414fd0:	push   0xaf089b3d
  414fd5:	mov    dh,BYTE PTR [edx]
  414fd7:	ja     0x414f8a
  414fd9:	pop    edx
  414fda:	dec    BYTE PTR [ebx]
  414fdc:	stos   BYTE PTR es:[edi],al
  414fdd:	dec    esp
  414fde:	nop    DWORD PTR [esi-0x19206bb5]
  414fe5:	adc    ebx,DWORD PTR [edi-0x75]
  414fe8:	ins    BYTE PTR es:[edi],dx
  414fe9:	fstp   QWORD PTR [ecx+esi*8]
  414fec:	adc    DWORD PTR [edx-0x7dd09298],0x67434718
  414ff6:	cmp    ecx,ecx
  414ff8:	mov    bh,0x59
  414ffa:	jg     0x414fd0
  414ffc:	lds    ebx,FWORD PTR [edx]
  414ffe:	inc    esi
  414fff:	ss adc al,0xc6
  415002:	rol    BYTE PTR [eax-0x29],cl
  415005:	add    DWORD PTR [ebx-0x268b680b],ecx
  41500b:	aas    
  41500c:	int3   
  41500d:	jg     0x414fc3
  41500f:	pop    ebx
  415010:	xor    esp,DWORD PTR [edx-0x5d45ec90]
  415016:	sbb    eax,0xe4b1b126
  41501b:	ret    
  41501c:	pop    esp
  41501d:	push   edx
  41501e:	dec    ebx
  41501f:	push   0x6cff1971
  415024:	adc    ebx,ecx
  415026:	and    DWORD PTR [edi+0x552a1e28],esp
  41502c:	wrmsr  
  41502e:	pop    edx
  41502f:	ret    
  415030:	jg     0x415001
  415032:	push   ebp
  415033:	dec    edx
  415034:	popf   
  415035:	pushf  
  415036:	mov    BYTE PTR [ebx+0x2c6e9255],bl
  41503c:	inc    ecx
  41503d:	and    ebp,DWORD PTR [eax+0x1f148079]
  415043:	mov    bl,0x55
  415045:	int3   
  415046:	jbe    0x415010
  415048:	aam    0xe
  41504a:	sbb    edi,esp
  41504c:	add    edx,0xfffffff1
  41504f:	jno    0x4150ac
  415051:	mov    dh,0xbf
  415053:	aas    
  415054:	and    ebp,edi
  415056:	in     al,0xfb
  415058:	frstor [ebp-0x7dfab8d1]
  41505e:	(bad)  
  415060:	jne    0x4150a8
  415062:	mov    BYTE PTR [ebx-0x17],bh
  415065:	js     0x415097
  415067:	stos   BYTE PTR es:[edi],al
  415068:	aaa    
  415069:	pop    edi
  41506a:	outs   dx,BYTE PTR ds:[esi]
  41506b:	push   ecx
  41506c:	inc    edx
  41506d:	(bad)  
  41506e:	xor    ecx,DWORD PTR [edx+ebp*4-0x250db95a]
  415075:	hlt    
  415076:	adc    ecx,DWORD PTR [edx+0x5e393a14]
  41507c:	inc    ebp
  41507d:	iret   
  41507e:	inc    ebp
  41507f:	nop
  415080:	popa   
  415081:	mov    ch,0x9
  415083:	imul   BYTE PTR [esi+0x2db580d4]
  415089:	mov    edi,DWORD PTR [ebp-0x40081ef3]
  41508f:	inc    edx
  415090:	es ds jne 0x4150cd
  415094:	das    
  415095:	aam    0xa2
  415097:	adc    edi,ebx
  415099:	ins    DWORD PTR es:[edi],dx
  41509a:	rcr    BYTE PTR [ecx],1
  41509c:	arpl   WORD PTR [esi],sp
  41509e:	das    
  41509f:	cdq    
  4150a0:	das    
  4150a1:	call   0x6686:0x9a392381
  4150a8:	dec    esp
  4150a9:	test   BYTE PTR [ecx+0x1],ah
  4150ac:	push   ebx
  4150ad:	mov    ecx,0x876f8ce7
  4150b2:	push   0xfffffffa
  4150b4:	sbb    eax,0xd2782959
  4150b9:	jle    0x415079
  4150bb:	mov    cl,0x51
  4150bd:	shl    DWORD PTR ds:0x82303f6a,1
  4150c3:	add    eax,0x9394afcd
  4150c8:	jne    0x4150d2
  4150ca:	(bad)  
  4150cc:	jecxz  0x415103
  4150ce:	push   0xfffffffb
  4150d0:	dec    esp
  4150d1:	xchg   ebx,eax
  4150d2:	sbb    BYTE PTR [eax],ch
  4150d4:	gs and cl,al
  4150d7:	sahf   
  4150d8:	sbb    BYTE PTR [edi+0x1fe344b1],0xf9
  4150df:	add    BYTE PTR [ebx-0x30],al
  4150e2:	out    dx,eax
  4150e3:	or     bh,bh
  4150e5:	lea    edi,[ecx+0x5a461b74]
  4150eb:	mov    WORD PTR [ebx],cs
  4150ed:	add    eax,0xb0f1fdc
  4150f2:	or     bl,BYTE PTR [edi+eiz*4-0xae805a2]
  4150f9:	mov    eax,ds:0x882a5790
  4150fe:	cld    
  4150ff:	imul   esi,DWORD PTR [eax+0x7e],0x1116e96b
  415106:	inc    ebx
  415107:	test   eax,0xc1b481eb
  41510c:	pusha  
  41510d:	adc    DWORD PTR [ecx+0x34],edx
  415110:	sub    ch,BYTE PTR [esi-0x30b1939d]
  415116:	neg    DWORD PTR ds:0xcbe96a98
  41511c:	outs   dx,BYTE PTR ds:[esi]
  41511d:	fsub   DWORD PTR gs:[ecx+0x24]
  415121:	inc    edi
  415122:	add    BYTE PTR [esi+edx*8-0x3b392dbb],bh
  415129:	mov    ecx,0x9fdbd095
  41512e:	bound  esp,QWORD PTR [ebp-0x4e]
  415131:	sbb    DWORD PTR [ebp-0xd],ebx
  415134:	xor    edx,esi
  415136:	adc    DWORD PTR [eax],0xffffffe4
  415139:	enter  0x8285,0x8e
  41513d:	sahf   
  41513e:	cdq    
  41513f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415140:	dec    eax
  415141:	stos   BYTE PTR es:[edi],al
  415142:	jg     0x41516c
  415144:	ret    
  415145:	in     eax,dx
  415146:	pop    edx
  415147:	sub    DWORD PTR [eax+0x44],ecx
  41514a:	(bad)  
  41514b:	fstp   DWORD PTR [edi-0x2717990e]
  415151:	or     DWORD PTR [eax+0x36],edi
  415154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415155:	in     al,0x4
  415157:	je     0x415104
  415159:	jb     0x415170
  41515b:	mov    esp,0xf8c0e27a
  415160:	dec    edx
  415161:	xor    ch,bh
  415163:	pop    edx
  415164:	or     ecx,ecx
  415166:	mov    DWORD PTR [eax-0x44],edi
  415169:	popa   
  41516a:	mov    al,0xcb
  41516c:	lock or eax,0x64d6ba1e
  415172:	mov    ch,0x57
  415174:	es or  bh,al
  415177:	lods   eax,DWORD PTR ds:[esi]
  415178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415179:	repz imul eax,DWORD PTR [esi-0x38],0xf4ee5758
  415181:	mov    ch,0x8
  415183:	aas    
  415184:	xor    DWORD PTR [edx+0x41],ebx
  415187:	rol    bh,1
  415189:	(bad)  
  41518a:	fnstcw WORD PTR [esi]
  41518c:	pop    edi
  41518d:	daa    
  41518e:	or     al,0x50
  415190:	enter  0x420b,0xe3
  415194:	inc    edi
  415195:	xchg   edi,eax
  415196:	out    0x74,al
  415198:	pop    ebx
  415199:	cmp    DWORD PTR [ecx+esi*2],ecx
  41519c:	les    edx,FWORD PTR [ecx+0x40]
  41519f:	xchg   BYTE PTR [eax+edi*4],al
  4151a2:	add    BYTE PTR [ecx+edi*4+0x64],al
  4151a6:	imul   cl
  4151a8:	pop    ss
  4151a9:	jge    0x415220
  4151ab:	daa    
  4151ac:	lea    esi,[esi-0x14]
  4151af:	pop    ebp
  4151b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b1:	or     eax,0xfb23d96f
  4151b6:	sub    DWORD PTR [esp+ebp*1+0x36],edi
  4151ba:	ins    DWORD PTR es:[edi],dx
  4151bb:	dec    ebp
  4151bc:	add    al,0x47
  4151be:	or     edx,DWORD PTR [edi*1-0x4f749d0]
  4151c5:	(bad)  
  4151c6:	int3   
  4151c7:	push   edx
  4151c8:	aam    0xc8
  4151ca:	cs sub eax,0x2ab71f80
  4151d0:	and    ah,BYTE PTR [ebx-0x5b21ccdd]
  4151d6:	in     eax,0xd0
  4151d8:	mov    bl,0xac
  4151da:	into   
  4151db:	cmc    
  4151dc:	mov    eax,0x151c33b
  4151e1:	cld    
  4151e2:	xlat   BYTE PTR ds:[ebx]
  4151e3:	data16 sbb al,0xd1
  4151e6:	add    BYTE PTR [esi],cl
  4151e8:	mov    WORD PTR [eax+0x6b073a9a],es
  4151ee:	push   edi
  4151ef:	in     eax,dx
  4151f0:	xchg   ebp,eax
  4151f1:	jns    0x4151c3
  4151f3:	pop    ebp
  4151f4:	mov    DWORD PTR ds:0xa834f5d8,0x561318c7
  4151fe:	sahf   
  4151ff:	(bad)  
  415200:	or     DWORD PTR [ebx+ebx*4-0x4f6b9254],edx
  415207:	fwait
  415208:	inc    edi
  415209:	icebp  
  41520a:	ficom  WORD PTR [edi+0x32]
  41520d:	cmp    eax,0x294c3c18
  415212:	popa   
  415213:	mov    dl,0x42
  415215:	sbb    BYTE PTR [esi-0x3d],dl
  415218:	xor    eax,0x9078aea2
  41521d:	repz cmp eax,DWORD PTR [ebp-0x56102e47]
  415224:	push   edi
  415225:	retf   
  415226:	mov    eax,0x1385fb7f
  41522b:	fist   WORD PTR [eax-0x77]
  41522e:	rcr    ch,cl
  415230:	out    0xe2,al
  415232:	and    ch,ah
  415234:	stos   DWORD PTR es:[edi],eax
  415235:	(bad)  
  415236:	retf   
  415237:	xor    DWORD PTR [ebp+0x8],ebx
  41523a:	mov    ds:0x6f2bd057,al
  41523f:	push   ecx
  415240:	xchg   ebp,eax
  415241:	add    bh,BYTE PTR [ebx]
  415243:	ret    
  415244:	add    dh,bh
  415246:	pusha  
  415247:	inc    edi
  415248:	lods   eax,DWORD PTR ds:[esi]
  415249:	stos   BYTE PTR es:[edi],al
  41524a:	jmp    0x415267
  41524c:	pop    edx
  41524d:	cmp    DWORD PTR [edi+0x36],0x4c2378e5
  415254:	ja     0x415263
  415256:	nop    DWORD PTR [ebx]
  415259:	jae    0x415249
  41525b:	gs inc ecx
  41525d:	fistp  QWORD PTR [ebx-0x5f]
  415260:	repnz neg DWORD PTR [edi+0x428953ed]
  415267:	sahf   
  415268:	mov    ecx,0x872fb138
  41526d:	xor    DWORD PTR [eax+eiz*8+0x645dd78b],eax
  415274:	add    BYTE PTR ds:0xc5554717,dl
  41527a:	(bad)  
  41527b:	in     al,0xac
  41527d:	into   
  41527e:	ror    BYTE PTR [edx+ebx*2-0x525ab4d9],0x59
  415286:	add    dh,BYTE PTR [esi]
  415288:	adc    DWORD PTR [ebx+edi*1+0x4ee07606],ebp
  41528f:	popf   
  415290:	jbe    0x41527e
  415292:	xor    eax,0x3e31bf93
  415297:	cmp    eax,ebx
  415299:	imul   esi,DWORD PTR [edi],0xeac6d379
  41529f:	je     0x4152ee
  4152a1:	xchg   ebx,eax
  4152a2:	inc    ebp
  4152a3:	enter  0xcd8e,0xdd
  4152a7:	(bad)  
  4152a8:	dec    eax
  4152a9:	shr    DWORD PTR [ebp+0x11],0xe4
  4152ad:	jmp    0x4152da
  4152af:	das    
  4152b0:	pop    es
  4152b1:	ficomp WORD PTR [esi-0x20]
  4152b4:	rcr    BYTE PTR [eax+esi*2],cl
  4152b7:	mov    ebp,0x88848f86
  4152bc:	cmp    al,0x88
  4152be:	mov    ebp,esp
  4152c0:	fst    DWORD PTR ds:[ebx+0x2aad114]
  4152c7:	sbb    ecx,DWORD PTR [edx]
  4152c9:	sub    dl,dh
  4152cb:	or     BYTE PTR ds:0x6985da6d,0xd3
  4152d2:	xor    esi,DWORD PTR [edi-0x7acf0674]
  4152d8:	cdq    
  4152d9:	sbb    eax,DWORD PTR [ebx+0x38]
  4152dc:	cmc    
  4152dd:	std    
  4152de:	add    ah,BYTE PTR [eax-0x4b972e34]
  4152e4:	push   ds
  4152e5:	(bad)  [ecx-0x7]
  4152e8:	mov    ah,0xf1
  4152ea:	std    
  4152eb:	or     DWORD PTR cs:[ecx+edi*1],ebx
  4152ef:	add    esp,0x45a72313
  4152f5:	out    0x75,eax
  4152f7:	push   edx
  4152f8:	jmp    0x7099e3dc
  4152fd:	mov    al,ds:0xc9be848b
  415302:	pop    esp
  415303:	bound  edx,QWORD PTR [ecx+0x1a]
  415306:	mov    ebp,0x1ff5560b
  41530b:	xchg   ebp,eax
  41530c:	mov    ds,WORD PTR [eax+ebx*1+0x5a]
  415310:	sahf   
  415311:	shl    DWORD PTR ds:0x6ee5758d,0xa6
  415318:	xor    ecx,DWORD PTR [eax]
  41531a:	jecxz  0x4152f3
  41531c:	push   edi
  41531d:	arpl   WORD PTR [ebp+0x1c],bx
  415320:	out    dx,al
  415321:	push   ebx
  415322:	mov    esp,0x4982b6c7
  415327:	sub    eax,0x8a45d516
  41532c:	clc    
  41532d:	xchg   esp,eax
  41532e:	xchg   DWORD PTR [edx+0x38251efe],eax
  415334:	inc    esi
  415335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415336:	(bad)  
  415338:	cwde   
  415339:	stc    
  41533a:	cmp    bl,dl
  41533c:	mov    ss,WORD PTR [ebp-0x69]
  41533f:	mov    BYTE PTR [eax-0x6],dl
  415342:	pop    esp
  415343:	mov    cl,0x42
  415345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415346:	xchg   edx,eax
  415347:	cmp    eax,0x46c16379
  41534c:	cmp    al,0x69
  41534e:	cmp    eax,0x7d06c7cb
  415353:	sti    
  415354:	inc    edi
  415355:	inc    edx
  415356:	shr    BYTE PTR [ebx*8+0x158d03db],cl
  41535d:	jno    0x4152e9
  41535f:	push   0xa4db1ef3
  415364:	sbb    edx,0xfffffff0
  415367:	mov    bl,0x33
  415369:	add    al,0xf0
  41536b:	inc    edx
  41536c:	pop    eax
  41536d:	lea    ebp,[eax-0x4d2c6c41]
  415373:	adc    DWORD PTR [edx],ebp
  415375:	add    eax,0x45d1d5b1
  41537a:	sub    DWORD PTR [ebx-0x5c],eax
  41537d:	call   0xe5b4d455
  415382:	add    esp,ecx
  415384:	or     ecx,DWORD PTR [esp+edi*2-0x74]
  415388:	hlt    
  415389:	dec    esi
  41538a:	cld    
  41538b:	adc    esp,edi
  41538d:	add    al,0xdc
  41538f:	out    dx,al
  415390:	xor    DWORD PTR [edi-0x35],ecx
  415393:	fnsave [esi]
  415395:	dec    ebp
  415396:	mov    ds:0xcadd57fd,al
  41539b:	ins    BYTE PTR es:[edi],dx
  41539c:	sub    DWORD PTR [ebx],0x2e
  41539f:	or     ch,bl
  4153a1:	test   al,0x74
  4153a3:	rcr    dl,0x27
  4153a6:	into   
  4153a7:	mov    ds:0xa2725775,eax
  4153ac:	lahf   
  4153ad:	sbb    al,0x8b
  4153af:	push   ebp
  4153b0:	dec    edx
  4153b1:	or     bh,BYTE PTR [edi+0x5b]
  4153b4:	push   esi
  4153b5:	outs   dx,BYTE PTR ds:[esi]
  4153b6:	ret    0xd9b9
  4153b9:	cmp    BYTE PTR [ebx-0x1d],dl
  4153bc:	(bad)  
  4153be:	(bad)  
  4153bf:	pop    esi
  4153c0:	lds    esp,FWORD PTR [ebx]
  4153c2:	xchg   edx,eax
  4153c3:	pop    ebx
  4153c4:	div    BYTE PTR [esi+0x5]
  4153c7:	mov    ch,0x7d
  4153c9:	xor    ecx,ebx
  4153cb:	adc    BYTE PTR [ebx+edi*1],bl
  4153ce:	inc    esi
  4153cf:	mov    ?,edx
  4153d1:	pop    esp
  4153d2:	adc    eax,0xe099e6f
  4153d7:	mov    cl,0xfb
  4153d9:	pop    esi
  4153da:	leave  
  4153db:	mov    ah,0x29
  4153dd:	sahf   
  4153de:	adc    al,0x6a
  4153e0:	xor    ecx,ebx
  4153e2:	ja     0x4153ec
  4153e4:	add    al,dh
  4153e6:	icebp  
  4153e7:	cmp    edi,eax
  4153e9:	or     esp,DWORD PTR [esi+0x25]
  4153ec:	lahf   
  4153ed:	ror    DWORD PTR [ecx],cl
  4153ef:	xchg   ebx,eax
  4153f0:	gs into 
  4153f2:	mov    bl,0xe6
  4153f4:	popf   
  4153f5:	fild   WORD PTR [edi]
  4153f7:	daa    
  4153f8:	sub    eax,0x2d05e545
  4153fd:	or     BYTE PTR [esi],ah
  4153ff:	(bad)  
  415400:	in     al,dx
  415401:	addr16 leave 
  415403:	pop    edi
  415404:	mov    bh,0x1d
  415406:	out    0x56,al
  415408:	and    edx,DWORD PTR [esi+0x26]
  41540b:	push   ecx
  41540c:	xchg   ecx,eax
  41540d:	jl     0x4153a3
  41540f:	sbb    bl,ah
  415411:	adc    BYTE PTR [esi-0x16],ah
  415414:	mov    ?,ebp
  415416:	shl    BYTE PTR [ebp-0x7c],cl
  415419:	(bad)  
  41541a:	push   esp
  41541b:	xchg   edi,eax
  41541c:	out    dx,al
  41541d:	mov    bh,0x26
  41541f:	jbe    0x415421
  415421:	repnz test DWORD PTR gs:[ecx-0x391e114f],eax
  415429:	mov    ah,0x45
  41542b:	daa    
  41542c:	jb     0x41544b
  41542e:	cli    
  41542f:	inc    esi
  415430:	rcr    BYTE PTR [ebp+0x2e],cl
  415433:	or     ebp,edx
  415435:	sub    eax,0x65d1ce9b
  41543a:	mov    ah,0x1a
  41543c:	ss lahf 
  41543e:	mov    ah,0x0
  415440:	jmp    DWORD PTR [edx]
  415442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415443:	pop    ecx
  415444:	xchg   ebx,eax
  415445:	lahf   
  415446:	fadd   QWORD PTR [ebx-0x31]
  415449:	popf   
  41544a:	test   DWORD PTR [esi+eax*2],ecx
  41544d:	sahf   
  41544e:	out    0xbf,al
  415450:	and    bh,dl
  415452:	sub    eax,0x2372f3e7
  415457:	xor    BYTE PTR ds:0x3a6e10fb,bl
  41545d:	xor    eax,0xfbcf92d5
  415462:	shl    BYTE PTR [edi-0x34602311],cl
  415468:	fmulp  st(5),st
  41546a:	pop    esp
  41546b:	sub    al,0xc7
  41546d:	(bad)  
  41546e:	mov    ds:0xf813a8f4,al
  415473:	mov    ecx,0x49b17e5d
  415478:	int3   
  415479:	push   ebp
  41547a:	adc    esi,esp
  41547c:	inc    ebp
  41547d:	icebp  
  41547e:	push   esp
  41547f:	(bad)  
  415480:	and    BYTE PTR [edx-0x4bde5cb0],bh
  415486:	aad    0xe4
  415488:	lods   al,BYTE PTR ds:[esi]
  415489:	sbb    esp,0x8ac3593d
  41548f:	in     al,dx
  415490:	imul   ebx,edx,0xba10c618
  415496:	and    dh,bl
  415498:	ror    bh,1
  41549a:	pop    edx
  41549b:	dec    ecx
  41549c:	add    DWORD PTR [ebp-0x5d],eax
  41549f:	fmul   st(4),st
  4154a1:	mov    esp,0x510ab396
  4154a6:	mov    eax,DWORD PTR [ebx]
  4154a8:	aam    0x30
  4154aa:	popa   
  4154ab:	add    al,0x6e
  4154ad:	cmp    al,0x9a
  4154af:	jbe    0x4154f3
  4154b1:	adc    al,0x68
  4154b3:	(bad)  [eax+0x47fd0a2c]
  4154b9:	dec    esp
  4154ba:	enter  0xeea1,0x24
  4154be:	pop    esi
  4154bf:	sar    DWORD PTR [ebx+0x30],cl
  4154c2:	fidiv  WORD PTR [edi+ebx*1-0xa]
  4154c6:	cmc    
  4154c7:	cmp    esi,edx
  4154c9:	imul   edx,DWORD PTR [esi+0x60],0xb3e2249f
  4154d0:	sahf   
  4154d1:	hlt    
  4154d2:	fs sub eax,0xcc7ce4df
  4154d8:	jg     0x4154a4
  4154da:	mov    dl,0x16
  4154dc:	hlt    
  4154dd:	lahf   
  4154de:	mov    DWORD PTR [esi+0x7e],edx
  4154e1:	scas   eax,DWORD PTR es:[edi]
  4154e2:	or     DWORD PTR ds:[esi+0x357f1757],edx
  4154e9:	cwde   
  4154ea:	pushw  es
  4154ec:	inc    ebp
  4154ed:	lods   al,BYTE PTR ds:[esi]
  4154ee:	and    al,0x48
  4154f0:	mov    dh,0x82
  4154f2:	mul    edx
  4154f4:	cs push cs
  4154f6:	pop    eax
  4154f7:	jg     0x41551d
  4154f9:	loope  0x4154e1
  4154fb:	jnp    0x41549c
  4154fd:	sub    dh,BYTE PTR [esi-0x18]
  415500:	in     al,dx
  415501:	push   edi
  415502:	por    mm5,QWORD PTR [ecx+esi*4+0x66]
  415507:	aaa    
  415508:	inc    esp
  415509:	push   esp
  41550a:	jbe    0x41557a
  41550c:	ss (bad) 
  41550e:	scas   eax,DWORD PTR es:[edi]
  41550f:	fcomp  st(5)
  415511:	fcom   QWORD PTR [ecx-0x7bdb6779]
  415517:	sbb    eax,DWORD PTR [edx-0x484bb073]
  41551d:	shr    DWORD PTR [eax],cl
  41551f:	rcr    DWORD PTR ds:0x2e9c4182,0xf4
  415526:	repnz mov bl,0x3b
  415529:	mov    bh,0x62
  41552b:	scas   eax,DWORD PTR es:[edi]
  41552c:	call   0xd005c4d7
  415531:	or     ah,BYTE PTR [esi-0x1]
  415534:	pop    edi
  415535:	sbb    BYTE PTR [eax],ah
  415537:	pop    esp
  415538:	leave  
  415539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41553a:	mov    esp,esi
  41553c:	jl     0x41550f
  41553e:	push   eax
  41553f:	sbb    DWORD PTR [ecx-0x4e],ecx
  415542:	sbb    ax,0xa45c
  415546:	loop   0x4154cb
  415548:	inc    edx
  415549:	cmp    DWORD PTR cs:0x7676a907,ebx
  415550:	push   ds
  415551:	dec    ecx
  415552:	jmp    0xcf0eb2fb
  415557:	das    
  415558:	jb     0x41550f
  41555a:	xor    DWORD PTR [edi+0x2dff56c4],ecx
  415560:	bound  eax,QWORD PTR [ebx]
  415562:	(bad)  
  415563:	ja     0x4155dc
  415565:	lds    ecx,FWORD PTR [ebx]
  415567:	cld    
  415568:	stos   DWORD PTR es:[edi],eax
  415569:	jno    0x41558d
  41556b:	idiv   DWORD PTR [eax+0x1e617a24]
  415571:	push   ebx
  415572:	pop    ds
  415573:	dec    esi
  415574:	mov    ebx,0x8e0be6bc
  415579:	mov    al,ds:0xb1b3f372
  41557e:	push   edi
  41557f:	rcl    esp,1
  415581:	xor    ah,BYTE PTR [esi]
  415583:	mov    ah,0x25
  415585:	push   ebp
  415586:	bound  esp,QWORD PTR ds:0xf3a62a90
  41558c:	sub    edi,eax
  41558e:	push   ebx
  41558f:	xchg   DWORD PTR [eax+0x29],ebx
  415592:	aaa    
  415593:	das    
  415594:	add    bh,bh
  415596:	inc    edi
  415597:	xchg   ebp,eax
  415598:	and    cl,bl
  41559a:	pop    esp
  41559b:	lock fidiv DWORD PTR [edx-0x68]
  41559f:	xlat   BYTE PTR ds:[ebx]
  4155a0:	inc    ebp
  4155a1:	aas    
  4155a2:	cmp    BYTE PTR [eax+0x785cbda6],0xc2
  4155a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155aa:	xlat   BYTE PTR ds:[ebx]
  4155ab:	data16 fdiv DWORD PTR [edi]
  4155ae:	adc    al,0x8b
  4155b0:	sbb    DWORD PTR [edi],edi
  4155b2:	(bad)  
  4155b3:	cli    
  4155b4:	sub    al,0xb0
  4155b6:	vunpckhps xmm6,xmm2,XMMWORD PTR ds:0x8a990a3a
  4155be:	pop    ecx
  4155bf:	push   es
  4155c0:	xor    edi,esp
  4155c2:	push   cs
  4155c3:	push   ecx
  4155c4:	or     bl,cl
  4155c6:	ficomp DWORD PTR [edx+0x72]
  4155c9:	dec    ebx
  4155ca:	in     al,dx
  4155cb:	pop    ebp
  4155cc:	cli    
  4155cd:	mov    ?,WORD PTR [edx+0x5b71af96]
  4155d3:	mov    ebp,0xc717d520
  4155d8:	cmp    eax,0x3f9b1a9a
  4155dd:	sbb    esi,DWORD PTR [eax]
  4155df:	or     al,0xd4
  4155e1:	sahf   
  4155e2:	jbe    0x415583
  4155e4:	sub    DWORD PTR [eax+0x50444f04],esp
  4155ea:	in     al,dx
  4155eb:	repz sti 
  4155ed:	pop    ebx
  4155ee:	pop    ss
  4155ef:	jp     0x4155b2
  4155f1:	mov    al,BYTE PTR [ebx-0x7818a757]
  4155f7:	and    ch,BYTE PTR [esi-0x3d]
  4155fa:	dec    eax
  4155fb:	mov    cs,ebx
  4155fd:	das    
  4155fe:	stos   BYTE PTR es:[edi],al
  4155ff:	ins    DWORD PTR es:[edi],dx
  415600:	repz push cs
  415602:	outs   dx,DWORD PTR ds:[esi]
  415603:	fwait
  415604:	jge    0x415607
  415606:	mov    edx,0x8a1eb031
  41560b:	push   ds
  41560c:	fwait
  41560d:	push   es
  41560e:	pop    es
  41560f:	mov    dl,0x44
  415611:	xor    DWORD PTR [esi],edx
  415613:	xchg   BYTE PTR [ecx+0x2360c003],ch
  415619:	pop    esp
  41561a:	fs fwait
  41561c:	aas    
  41561d:	mov    ?,WORD PTR [eax+0x61]
  415620:	aam    0xa5
  415622:	mov    BYTE PTR [ebp+ebx*4-0xd],dh
  415626:	push   0x67
  415628:	clc    
  415629:	dec    eax
  41562a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41562b:	xor    bh,BYTE PTR [ebp+esi*8+0x6b]
  41562f:	sbb    bh,BYTE PTR [edx-0x4d597b7c]
  415635:	mov    edi,0x415e9b6a
  41563a:	arpl   WORD PTR [ebp-0x49],bx
  41563d:	repnz rcr BYTE PTR [esi+0x60],0xf4
  415642:	shr    BYTE PTR [esi-0xaf39b22],cl
  415648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415649:	enter  0xe21e,0xb1
  41564d:	xchg   esp,eax
  41564e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41564f:	dec    ebp
  415650:	mov    ds:0x12dff5c2,al
  415655:	out    0x36,eax
  415657:	and    BYTE PTR [ebx+0x7a],bl
  41565a:	das    
  41565b:	xchg   ax,ax
  41565d:	fldcw  WORD PTR [eax+0x1e]
  415660:	repz sar ch,cl
  415663:	cmp    bl,ah
  415665:	mov    ds:0x2d966e1a,al
  41566a:	pop    es
  41566b:	mov    cl,0x40
  41566d:	xor    al,0xbf
  41566f:	pop    es
  415670:	popa   
  415671:	jmp    0x2df10658
  415676:	jae    0x4156b4
  415678:	test   DWORD PTR [ebx+0x796de841],eax
  41567e:	test   eax,0x4324e39c
  415683:	xchg   ecx,eax
  415684:	fsub   DWORD PTR [ebx+esi*4-0x53]
  415688:	aad    0x5e
  41568a:	stos   BYTE PTR es:[edi],al
  41568b:	cdq    
  41568c:	push   ebp
  41568d:	cmp    al,0x12
  41568f:	jecxz  0x4156ec
  415691:	and    al,0xf1
  415693:	ins    BYTE PTR es:[edi],dx
  415694:	aad    0x25
  415696:	sbb    edx,DWORD PTR [ebp-0x4a1526a6]
  41569c:	xchg   ah,dl
  41569e:	push   esi
  41569f:	jb     0x4156b9
  4156a1:	neg    edx
  4156a3:	add    dl,BYTE PTR [edx]
  4156a5:	inc    esi
  4156a6:	test   BYTE PTR [ecx],bl
  4156a8:	ret    0xf114
  4156ab:	cdq    
  4156ac:	call   0xf8173d07
  4156b1:	push   edi
  4156b2:	mov    ds,WORD PTR [eax+eiz*8]
  4156b5:	sbb    BYTE PTR [edx+eiz*2-0x6d8cd015],al
  4156bc:	push   ebx
  4156bd:	cli    
  4156be:	mov    eax,ds:0x533473a0
  4156c3:	in     al,0x6f
  4156c5:	hlt    
  4156c6:	jecxz  0x41571b
  4156c8:	(bad)  
  4156c9:	(bad)  
  4156ca:	dec    esi
  4156cb:	sub    al,0xcb
  4156cd:	jg     0x4156eb
  4156cf:	mov    bl,0xc3
  4156d1:	and    eax,DWORD PTR [ecx+0x22d08fec]
  4156d7:	retf   0x5571
  4156da:	repnz push ss
  4156dc:	add    BYTE PTR [edi+0x34a0da9a],0xa9
  4156e3:	fcmove st,st(6)
  4156e5:	ins    DWORD PTR es:[edi],dx
  4156e6:	jp     0x415763
  4156e8:	mov    dl,0xbe
  4156ea:	dec    edi
  4156eb:	mov    edi,0xc73b4ab3
  4156f0:	add    al,0xfb
  4156f2:	push   es
  4156f3:	dec    edi
  4156f4:	pop    esp
  4156f5:	jmp    0x2dfd:0xef011fdd
  4156fc:	dec    esi
  4156fd:	(bad)  
  4156fe:	and    eax,0x1dfda88c
  415703:	aad    0x32
  415705:	sbb    esi,DWORD PTR [edx+eiz*1+0x37a1e33a]
  41570c:	cmp    ecx,DWORD PTR [eax-0x48]
  41570f:	push   eax
  415710:	js     0x4156ba
  415712:	arpl   WORD PTR [ecx+0x42],si
  415715:	frstor [edx]
  415717:	shl    ebx,0xf6
  41571a:	push   ds
  41571b:	mov    eax,0xde77e10e
  415720:	push   esi
  415721:	repz mov bl,0x1f
  415724:	push   ebx
  415725:	sbb    al,0xa8
  415727:	xchg   edx,eax
  415728:	aas    
  415729:	jg     0x4156da
  41572b:	sbb    al,BYTE PTR [ebp+0x7f0f152d]
  415731:	sbb    ch,BYTE PTR [ebp+0x36]
  415734:	xor    ch,BYTE PTR [edx]
  415736:	mov    edx,0xbe277a83
  41573b:	adc    BYTE PTR [eax],dl
  41573d:	in     al,0x31
  41573f:	inc    eax
  415740:	mov    ah,0xc8
  415742:	scas   eax,DWORD PTR es:[edi]
  415743:	mov    ah,0x46
  415745:	cld    
  415746:	mov    al,0x1f
  415748:	shl    DWORD PTR [eax],1
  41574a:	sub    al,0xbb
  41574c:	mov    ebx,0x8b1ed059
  415751:	xor    DWORD PTR [eax+edi*4+0xb195761],ecx
  415758:	std    
  415759:	sbb    DWORD PTR es:[esi],0xffffffc1
  41575d:	or     eax,esp
  41575f:	pop    es
  415760:	cld    
  415761:	pusha  
  415762:	rol    DWORD PTR [ecx+0x7dffb7e1],0x67
  415769:	ret    
  41576a:	jmp    0xa98b18a2
  41576f:	out    dx,al
  415770:	retf   
  415771:	lods   eax,DWORD PTR ds:[esi]
  415772:	int    0x71
  415774:	mov    ds:0x1d1ccb76,al
  415779:	sub    BYTE PTR ds:0xa5a3,dl
  41577e:	inc    esi
  41577f:	fwait
  415780:	cmp    ebp,ecx
  415782:	je     0x415722
  415784:	les    ebx,FWORD PTR [eax+0x38]
  415787:	dec    eax
  415788:	mov    ds:0x969688c8,eax
  41578d:	pop    es
  41578e:	inc    esp
  41578f:	pushf  
  415790:	int    0xcf
  415792:	loopne 0x4157e4
  415794:	jge    0x41574c
  415796:	mov    esp,0xc1503836
  41579b:	dec    ebp
  41579c:	add    ax,0x4f9d
  4157a0:	jb     0x415821
  4157a2:	les    ecx,FWORD PTR [ebx-0x3f375147]
  4157a8:	loopne 0x415781
  4157aa:	js     0x4157a2
  4157ac:	jnp    0x4157a4
  4157ae:	add    dh,cl
  4157b0:	pop    eax
  4157b1:	sbb    BYTE PTR [ebx-0x9],cl
  4157b4:	inc    esp
  4157b5:	push   eax
  4157b6:	ret    
  4157b7:	es pop esi
  4157b9:	sub    eax,ebx
  4157bb:	imul   ebp,DWORD PTR [edx-0x21],0x5b
  4157bf:	mov    eax,ds:0x17366de1
  4157c4:	jmp    0x415841
  4157c6:	sbb    al,0x62
  4157c8:	iret   
  4157c9:	sbb    eax,0x7820241c
  4157ce:	xchg   esp,eax
  4157cf:	mov    ds:0xcabdaecd,eax
  4157d4:	sub    eax,0x195927cb
  4157d9:	xchg   DWORD PTR ds:0xa54a7f24,esp
  4157df:	mov    ecx,0x786ffdb1
  4157e4:	sbb    eax,0x1a812c4e
  4157e9:	cmp    eax,0x5df2ab40
  4157ee:	jbe    0x41586b
  4157f0:	cli    
  4157f1:	(bad)  
  4157f3:	push   esp
  4157f4:	mov    ds:0x41b9b332,eax
  4157f9:	adc    bl,BYTE PTR [edx-0x2baa5ffb]
  4157ff:	jno    0x4157f3
  415801:	adc    al,0x3
  415803:	mov    bh,0xae
  415805:	sbb    bh,bh
  415807:	mov    gs,WORD PTR [ebp-0x7b]
  41580a:	add    DWORD PTR [esp+edi*1+0xb1b97b],edx
  415811:	push   esi
  415812:	call   0x494ae2fa
  415817:	mov    bl,0x11
  415819:	mov    ah,0xed
  41581b:	fadd   QWORD PTR [ebp+0x24]
  41581e:	xor    eax,0x494d20eb
  415823:	dec    edi
  415824:	fdivr  DWORD PTR [ebp+0x5d4c5c4f]
  41582a:	mov    ds:0x53956ef2,al
  41582f:	ins    DWORD PTR es:[edi],dx
  415830:	lods   eax,DWORD PTR ds:[esi]
  415831:	cli    
  415832:	cmp    edx,esp
  415834:	xchg   ebp,eax
  415835:	xor    ah,al
  415837:	daa    
  415838:	push   ebp
  415839:	or     ecx,DWORD PTR [esi+0x46]
  41583c:	xchg   edi,eax
  41583d:	in     eax,0x85
  41583f:	mov    eax,0x57b1f832
  415844:	mov    eax,ds:0x62de1c2d
  415849:	bt     DWORD PTR [ebp-0x1aef26c],0x28
  415851:	jno    0x41580e
  415853:	sar    eax,1
  415855:	fdivr  DWORD PTR gs:[ebx+0x5e]
  415859:	xchg   edi,eax
  41585a:	add    eax,0xd1486d09
  41585f:	test   al,0x22
  415861:	dec    ebp
  415862:	adc    al,ch
  415864:	out    dx,al
  415865:	push   cs
  415866:	ja     0x4157eb
  415868:	jo     0x41584d
  41586a:	scas   al,BYTE PTR es:[edi]
  41586b:	add    DWORD PTR [ebx+0x14],ecx
  41586e:	outs   dx,DWORD PTR ds:[esi]
  41586f:	repz rcl eax,0xbb
  415873:	aaa    
  415874:	jno    0x41580c
  415876:	and    esi,ebx
  415878:	pop    edx
  415879:	push   es
  41587a:	imul   ecx,DWORD PTR [edi],0x58
  41587d:	and    eax,0xb783d465
  415882:	push   eax
  415883:	sub    eax,0x81cf7974
  415888:	(bad)  
  415889:	xchg   ecx,eax
  41588a:	in     eax,0xeb
  41588c:	pop    ebx
  41588d:	daa    
  41588e:	jp     0x4158f6
  415890:	or     bh,BYTE PTR [esp+ebp*1]
  415893:	pop    ebp
  415894:	xchg   BYTE PTR [ebp*2-0x4e7d100f],dh
  41589b:	pop    eax
  41589c:	das    
  41589d:	add    BYTE PTR [ebp+ebx*8-0x69fe396a],al
  4158a4:	jge    0x415921
  4158a6:	cmp    eax,0xbc970af0
  4158ab:	dec    ebp
  4158ac:	cld    
  4158ad:	jle    0x4158f1
  4158af:	pop    ds
  4158b0:	xchg   DWORD PTR [edi+0x77],ecx
  4158b3:	(bad)  
  4158b4:	cmp    eax,0x920e6b56
  4158b9:	(bad)  
  4158bb:	inc    ebx
  4158bc:	into   
  4158bd:	retf   0xe64d
  4158c0:	mov    dl,ch
  4158c2:	lods   al,BYTE PTR ds:[esi]
  4158c3:	(bad)  
  4158c5:	ret    
  4158c6:	loop   0x415886
  4158c8:	sbb    eax,0x4a3d74b5
  4158cd:	shl    DWORD PTR [ebx+0x66],1
  4158d0:	shr    cl,0xfa
  4158d3:	sub    BYTE PTR [edi-0x38],cl
  4158d6:	sub    esp,ecx
  4158d8:	imul   ebx,eax,0xe54943c4
  4158de:	pop    es
  4158df:	lock sar BYTE PTR [esi+0x70],cl
  4158e3:	mov    ds:0xd6784985,eax
  4158e8:	pop    esp
  4158e9:	pushf  
  4158ea:	nop
  4158eb:	inc    esi
  4158ec:	fstp   DWORD PTR [ebx-0x40]
  4158ef:	int    0x4
  4158f1:	push   cs
  4158f2:	push   ebp
  4158f3:	and    ch,BYTE PTR [ecx-0x1b]
  4158f6:	push   es
  4158f7:	jge    0x415899
  4158f9:	sub    al,0xb6
  4158fb:	jl     0x415959
  4158fd:	push   edi
  4158fe:	jmp    0xad3c:0xea489dd4
  415905:	lahf   
  415906:	mov    DWORD PTR [ebx+0x56],ecx
  415909:	ret    
  41590a:	cmp    BYTE PTR [eax],cl
  41590c:	cmp    cl,BYTE PTR [edx]
  41590e:	sub    cl,ch
  415910:	stos   DWORD PTR es:[edi],eax
  415911:	sbb    al,0x1e
  415913:	xor    eax,DWORD PTR [esi]
  415915:	mov    esp,0xba5d5d7c
  41591a:	pop    edx
  41591b:	repnz stos BYTE PTR es:[edi],al
  41591d:	mov    eax,ds:0xb585bb41
  415922:	retf   0x30bc
  415925:	cdq    
  415926:	imul   ebp,DWORD PTR [ecx],0x4d9a5895
  41592c:	and    eax,0x5697a39a
  415931:	adc    BYTE PTR [edi-0x226faaca],0x1e
  415938:	lahf   
  415939:	test   eax,0xfaed6a10
  41593e:	jl     0x4158e8
  415940:	ror    BYTE PTR [esi-0x10],0xb8
  415944:	test   al,0x97
  415946:	dec    esi
  415947:	jo     0x4159c1
  415949:	mov    eax,0x4c9f859b
  41594e:	adc    ebp,edi
  415950:	retf   
  415951:	dec    edx
  415952:	push   0xffffffbb
  415954:	scas   eax,DWORD PTR es:[edi]
  415955:	fucom  st(2)
  415957:	in     al,0xbe
  415959:	push   cs
  41595a:	fidivr DWORD PTR [ebp+0x27b1bd2a]
  415960:	cmc    
  415961:	mov    WORD PTR [ebp-0x34],es
  415964:	ins    DWORD PTR es:[edi],dx
  415965:	lock mov esi,0x1c4ea57a
  41596b:	(bad)  
  41596c:	mov    edx,0x9ab003b1
  415971:	push   0xffffffe4
  415973:	popf   
  415974:	jb     0x41593b
  415976:	inc    esp
  415977:	mov    edi,0x90eafb5b
  41597c:	test   ebp,edx
  41597e:	jge    0x41597a
  415980:	sbb    ebp,edx
  415982:	or     al,0x2d
  415984:	or     esp,ecx
  415986:	cmc    
  415987:	push   edx
  415988:	in     eax,dx
  415989:	mov    bh,BYTE PTR [esi]
  41598b:	pop    ebp
  41598c:	mov    bl,0x3e
  41598e:	scas   eax,DWORD PTR es:[edi]
  41598f:	and    BYTE PTR [esi+0x4fdc53b6],0x9
  415996:	lea    ebp,[ebp-0x42]
  415999:	repz fidiv DWORD PTR ds:0xcb856cc
  4159a0:	data16 ja 0x415a14
  4159a3:	jecxz  0x4159cd
  4159a5:	imul   ecx,DWORD PTR [ecx],0xfffffff0
  4159a8:	mov    al,ds:0xed0ef77d
  4159ad:	or     BYTE PTR [esi+0x7ccd129a],dh
  4159b3:	leave  
  4159b4:	sbb    DWORD PTR [ecx+esi*1],eax
  4159b7:	push   edi
  4159b8:	sbb    ah,0x6
  4159bb:	arpl   bx,bx
  4159bd:	retf   0x34a4
  4159c0:	push   edi
  4159c1:	aad    0x2f
  4159c3:	loop   0x415a0c
  4159c5:	mov    ebx,0xf5c231cd
  4159ca:	add    edi,DWORD PTR [ebp-0x7a]
  4159cd:	fimul  WORD PTR [esi+0x56]
  4159d0:	fdivr  DWORD PTR [eax-0x168782b5]
  4159d6:	arpl   WORD PTR [esi+0x51a3c990],si
  4159dc:	adc    DWORD PTR [eax],0xffffffb8
  4159df:	popa   
  4159e0:	xor    ebp,DWORD PTR [edx+0x2e498003]
  4159e6:	mov    ebx,0x6a71ae18
  4159eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ec:	stos   BYTE PTR es:[edi],al
  4159ed:	sbb    edx,DWORD PTR [ecx-0x1f34d5df]
  4159f3:	pop    es
  4159f4:	repz sbb eax,0x248f36c0
  4159fa:	add    BYTE PTR [edx+0x369d9cd7],al
  415a00:	cmp    dl,BYTE PTR [ecx+ebp*1+0x60072fe]
  415a07:	cmp    edi,eax
  415a09:	imul   ecx,DWORD PTR [ecx+0xe],0x4d
  415a0d:	xchg   esi,eax
  415a0e:	xor    eax,0xbe408d5
  415a13:	mov    al,ds:0xfc5e9166
  415a18:	arpl   WORD PTR [eax+ebx*8+0x46f516a7],ax
  415a1f:	data16 xor BYTE PTR [ebp+0xe],cl
  415a23:	xchg   ecx,eax
  415a24:	jg     0x415a6f
  415a26:	xchg   esp,eax
  415a27:	out    dx,al
  415a28:	mov    ecx,0xb8dff5b9
  415a2d:	cld    
  415a2e:	jg     0x415a62
  415a30:	sbb    DWORD PTR [edi+0x19997631],0x2b
  415a37:	jbe    0x415a51
  415a39:	test   al,0x3e
  415a3b:	test   ch,al
  415a3d:	call   0xfaa9:0x2f735e13
  415a44:	mov    ebx,0xdc36e519
  415a49:	xor    DWORD PTR [ebx+0x6120ee7a],eax
  415a4f:	and    DWORD PTR [edi+edx*1],ebx
  415a52:	push   esp
  415a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a54:	xor    ah,BYTE PTR [edx-0x7563542b]
  415a5a:	inc    edi
  415a5b:	jp     0x415a41
  415a5d:	enter  0x7706,0xb6
  415a61:	les    edi,FWORD PTR [edi]
  415a63:	stos   DWORD PTR es:[edi],eax
  415a64:	sub    al,al
  415a66:	(bad)  
  415a67:	pop    esp
  415a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a69:	cli    
  415a6a:	push   ss
  415a6b:	ins    DWORD PTR es:[edi],dx
  415a6c:	and    eax,0xc38f6a42
  415a71:	push   es
  415a72:	lea    ebx,[edx]
  415a74:	scas   al,BYTE PTR es:[edi]
  415a75:	pop    ss
  415a76:	xor    ah,al
  415a78:	add    cl,BYTE PTR [esi-0x38c73180]
  415a7e:	stos   BYTE PTR es:[edi],al
  415a7f:	std    
  415a80:	test   ebx,0x5add1a60
  415a86:	inc    ecx
  415a87:	xor    ecx,esi
  415a89:	fdiv   DWORD PTR [esi+0x74aa0b05]
  415a8f:	xchg   edi,eax
  415a90:	mov    WORD PTR [ebp+ebx*1+0x52],es
  415a94:	in     al,dx
  415a95:	mov    eax,ds:0x803c14c5
  415a9a:	jbe    0x415b07
  415a9c:	xor    eax,0xffdef792
  415aa1:	mov    DWORD PTR [ecx-0x45a70ade],ebp
  415aa7:	xor    eax,DWORD PTR [edi+edx*4-0x7e]
  415aab:	popf   
  415aac:	ds mov edi,0xcf822e53
  415ab2:	lods   al,BYTE PTR ds:[esi]
  415ab3:	xor    BYTE PTR [eax+0x76],0x44
  415ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab8:	and    al,0xcf
  415aba:	aad    0x78
  415abc:	scas   eax,DWORD PTR es:[edi]
  415abd:	int    0xb2
  415abf:	ror    DWORD PTR [ecx-0x472f4a08],0xaf
  415ac6:	ja     0x415b0e
  415ac8:	push   es
  415ac9:	fsub   QWORD PTR [ecx]
  415acb:	lods   eax,DWORD PTR ds:[esi]
  415acc:	dec    edi
  415acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ace:	lds    ebx,FWORD PTR [ecx+esi*2]
  415ad1:	push   0xe
  415ad3:	sti    
  415ad4:	shr    DWORD PTR [eax+ecx*1+0x75],0x1
  415ad9:	lods   al,BYTE PTR ds:[esi]
  415ada:	push   ebx
  415adb:	xchg   DWORD PTR [ebp-0x7860d937],ecx
  415ae1:	je     0x415a91
  415ae3:	push   DWORD PTR [ebx-0x7c]
  415ae6:	sub    al,0x38
  415ae8:	fsubr  QWORD PTR [ebx-0x5]
  415aeb:	out    dx,al
  415aec:	cmp    al,0xc5
  415aee:	cld    
  415aef:	fldenv [ecx+edx*8-0x78]
  415af3:	ret    
  415af4:	je     0x415a97
  415af6:	mov    eax,0xe4d430f6
  415afb:	adc    al,0x60
  415afd:	dec    ebx
  415afe:	xor    DWORD PTR [eax+0xa59f2c5],ebx
  415b04:	add    eax,0xc9744c4a
  415b09:	pop    ebp
  415b0a:	mov    al,0xa4
  415b0c:	test   BYTE PTR [ebx-0x78113f22],cl
  415b12:	inc    edx
  415b13:	js     0x415ad7
  415b15:	repz push edi
  415b17:	or     BYTE PTR [eax-0x24],bl
  415b1a:	and    ch,BYTE PTR [edi+0x57]
  415b1d:	jle    0x415b78
  415b1f:	pop    ebx
  415b20:	cmp    eax,0x376ea3f1
  415b25:	pop    esp
  415b26:	add    edi,DWORD PTR [ecx]
  415b28:	fucom  st(5)
  415b2a:	push   cs
  415b2b:	jne    0x415b84
  415b2d:	scas   eax,DWORD PTR es:[edi]
  415b2e:	sti    
  415b2f:	mov    bh,0xa4
  415b31:	in     al,dx
  415b32:	adc    al,BYTE PTR [ebp-0x564f9c80]
  415b38:	pop    ebp
  415b39:	sub    eax,0x7ec7285c
  415b3e:	in     eax,0x3
  415b40:	sbb    eax,0x7cabb05
  415b45:	scas   al,BYTE PTR es:[edi]
  415b46:	and    BYTE PTR [ebp+edi*2-0x41],bl
  415b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b4b:	jg     0x415b01
  415b4d:	push   esp
  415b4e:	sahf   
  415b4f:	(bad)  
  415b50:	mov    bl,0xe0
  415b52:	clc    
  415b53:	mov    dh,0xc2
  415b55:	jecxz  0x415bbf
  415b57:	in     al,dx
  415b58:	arpl   WORD PTR [ebx+ebx*4+0x37af9cab],bp
  415b5f:	mov    bh,al
  415b61:	dec    ebp
  415b62:	adc    eax,0x2cf80c0c
  415b67:	mov    WORD PTR [eax+0x6a85aa86],cs
  415b6d:	iret   
  415b6e:	es imul edx,edx,0xa
  415b72:	lahf   
  415b73:	and    DWORD PTR [eax],eax
  415b75:	call   0x6c900a6
  415b7a:	fld    DWORD PTR [edi-0x50]
  415b7d:	jo     0x415b00
  415b7f:	out    0xac,al
  415b81:	enter  0x8599,0xc9
  415b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b86:	in     eax,dx
  415b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b88:	push   0x75
  415b8a:	cmp    eax,0xc6619adb
  415b8f:	sbb    bh,BYTE PTR [esi]
  415b91:	repnz mov BYTE PTR [eax],dl
  415b94:	out    0x1,eax
  415b96:	loope  0x415bf1
  415b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b99:	cli    
  415b9a:	std    
  415b9b:	adc    cl,ch
  415b9d:	lods   al,BYTE PTR ds:[esi]
  415b9e:	and    al,0xba
  415ba0:	xchg   ebx,eax
  415ba1:	stc    
  415ba2:	push   es
  415ba3:	shr    DWORD PTR [eax],0x36
  415ba6:	dec    edi
  415ba7:	pop    eax
  415ba8:	addr16 sbb al,0x9b
  415bab:	mov    eax,ds:0x361dcdaf
  415bb0:	outs   dx,DWORD PTR ds:[esi]
  415bb1:	(bad)  
  415bb2:	iret   
  415bb3:	mov    cs,WORD PTR [ebx]
  415bb5:	or     ch,ch
  415bb7:	push   edi
  415bb8:	sbb    BYTE PTR [edi],0x3c
  415bbb:	imul   ebp,DWORD PTR [ecx-0x66c98eb8],0x19904323
  415bc5:	push   esi
  415bc6:	adc    BYTE PTR [ebx+eax*8-0x1ed9a965],0x27
  415bce:	gs push eax
  415bd0:	int    0x7a
  415bd2:	cli    
  415bd3:	popa   
  415bd4:	loope  0x415b5c
  415bd6:	xor    eax,0x5ffae1dc
  415bdb:	mul    DWORD PTR [esi+0x46]
  415bde:	mov    dh,0xfe
  415be0:	(bad)  
  415be1:	sbb    BYTE PTR [edx-0x387604fe],al
  415be7:	inc    ecx
  415be8:	push   ebx
  415be9:	jmp    0xa482640e
  415bee:	(bad)  
  415bef:	mov    BYTE PTR [ecx+0x40],bl
  415bf2:	pop    esp
  415bf3:	test   BYTE PTR [edi-0x1c],ch
  415bf6:	jb     0x415bb8
  415bf8:	gs xchg ecx,eax
  415bfa:	jp     0x415b9b
  415bfc:	hlt    
  415bfd:	pop    esp
  415bfe:	or     ah,cl
  415c00:	bnd ret 0x73cd
  415c04:	in     al,0x54
  415c06:	outs   dx,BYTE PTR ds:[esi]
  415c07:	dec    eax
  415c08:	lods   al,BYTE PTR ds:[esi]
  415c09:	imul   DWORD PTR [esp+ecx*4+0x14c3b7f4]
  415c10:	out    0x50,eax
  415c12:	icebp  
  415c13:	loop   0x415ba5
  415c15:	inc    edi
  415c16:	push   eax
  415c17:	fs dec edx
  415c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c1a:	cli    
  415c1b:	ret    0xbf45
  415c1e:	pop    ecx
  415c1f:	sbb    eax,0x595e3a3d
  415c24:	outs   dx,BYTE PTR ds:[si]
  415c26:	test   dl,bl
  415c28:	mov    ebx,esp
  415c2a:	popa   
  415c2b:	ins    DWORD PTR es:[edi],dx
  415c2c:	in     al,0x6e
  415c2e:	pop    eax
  415c2f:	outs   dx,DWORD PTR ds:[esi]
  415c30:	aas    
  415c31:	mov    eax,DWORD PTR [ecx-0x7bbff8f6]
  415c37:	pop    ebp
  415c38:	pop    edx
  415c39:	not    BYTE PTR [ebx+ebx*1]
  415c3c:	out    0x44,al
  415c3e:	test   eax,0x5483d30a
  415c43:	enter  0xc27f,0xda
  415c47:	and    esi,DWORD PTR [edi]
  415c49:	and    al,0xc7
  415c4b:	(bad)  
  415c4c:	cmp    al,0x83
  415c4e:	loop   0x415c60
  415c50:	not    DWORD PTR [ecx-0x128d099e]
  415c56:	repnz ror DWORD PTR [eax+0x1],1
  415c5a:	xchg   esp,eax
  415c5b:	xor    al,0xaf
  415c5d:	mov    cl,al
  415c5f:	aas    
  415c60:	adc    al,0xa1
  415c62:	aaa    
  415c63:	aad    0xc2
  415c65:	mov    eax,ds:0xcd346966
  415c6a:	cmc    
  415c6b:	mov    esp,0xb54afd9b
  415c70:	mov    ecx,0xe4b29405
  415c75:	std    
  415c76:	push   ds
  415c77:	xor    cl,BYTE PTR [edi-0x71]
  415c7a:	sub    eax,0x84f2d44d
  415c7f:	sbb    BYTE PTR [eax+0x7e8c1e57],ah
  415c85:	mov    ecx,0xde4b9c39
  415c8a:	or     al,0xb7
  415c8c:	push   ds
  415c8d:	lods   al,BYTE PTR ds:[esi]
  415c8e:	sbb    ebx,ebp
  415c90:	mov    bh,ch
  415c92:	(bad)  
  415c94:	data16 jo 0x415cbb
  415c97:	daa    
  415c98:	fnstsw WORD PTR [edx]
  415c9a:	cld    
  415c9b:	dec    edi
  415c9c:	mov    cl,0x89
  415c9e:	mov    al,BYTE PTR [edi+0x7cbd3b61]
  415ca4:	leave  
  415ca5:	cwde   
  415ca6:	mov    ?,ebp
  415ca8:	adc    DWORD PTR [ebp+0x244c1645],esp
  415cae:	jne    0xcf9b510b
  415cb4:	pop    edx
  415cb5:	(bad)  
  415cb6:	sub    eax,0xdc930fe5
  415cbb:	in     al,0xd1
  415cbd:	mov    al,ds:0xcfa0ce1b
  415cc2:	int3   
  415cc3:	mov    esp,0xb3a49825
  415cc8:	mov    ds:0xdc7c0355,al
  415ccd:	popa   
  415cce:	pushf  
  415ccf:	or     dl,BYTE PTR [edx-0x42]
  415cd2:	jne    0x415c71
  415cd4:	sbb    dl,bl
  415cd6:	xor    DWORD PTR [ebx+edx*1+0x3fdede45],ebp
  415cdd:	push   es
  415cde:	xchg   esi,eax
  415cdf:	pop    ecx
  415ce0:	mov    al,0x74
  415ce2:	in     al,0xe1
  415ce4:	shl    dl,cl
  415ce6:	push   esp
  415ce7:	mov    ecx,0x2a827a16
  415cec:	adc    BYTE PTR [edi-0x4e],ah
  415cef:	xchg   ebp,eax
  415cf0:	jns    0x415c9d
  415cf2:	retf   
  415cf3:	enter  0xac09,0xb3
  415cf7:	aaa    
  415cf8:	mov    ds:0xa24865b1,eax
  415cfd:	repz dec edx
  415cff:	loope  0x415d31
  415d01:	pop    esi
  415d02:	into   
  415d03:	pop    ss
  415d04:	mov    WORD PTR [eax],fs
  415d06:	ds and edi,edi
  415d09:	fldenv [edi-0xdf7ef33]
  415d0f:	pop    es
  415d10:	int3   
  415d11:	xchg   ebx,eax
  415d12:	adc    al,0x97
  415d14:	int    0x1a
  415d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d17:	mov    eax,ds:0x6692ff09
  415d1c:	repnz mov al,ds:0xea488676
  415d22:	inc    edi
  415d23:	fistp  WORD PTR [ebx+0x34]
  415d26:	(bad)
  415d29:	add    DWORD PTR [esi+0x30],eax
  415d2c:	out    dx,al
  415d2d:	xor    DWORD PTR [eax-0x701f7976],0xfffffff1
  415d34:	adc    dl,BYTE PTR [ebx+0x62]
  415d37:	mov    edi,0xf75af742
  415d3c:	cmp    eax,0xf7227022
  415d41:	pop    ds
  415d42:	sbb    DWORD PTR [ebx-0x5a],ebp
  415d45:	aam    0x93
  415d47:	jge    0x415dba
  415d49:	idiv   BYTE PTR [eax+0x20]
  415d4c:	pop    ebp
  415d4d:	jne    0x415d66
  415d4f:	pop    ds
  415d50:	or     eax,0x40e76074
  415d55:	pop    esp
  415d56:	push   ebp
  415d57:	fimul  DWORD PTR [edi]
  415d59:	push   ebp
  415d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d5b:	pop    edi
  415d5c:	scas   eax,DWORD PTR es:[edi]
  415d5d:	dec    esi
  415d5e:	sahf   
  415d5f:	add    bl,BYTE PTR [edi+0xf9fac2f]
  415d65:	out    0xe5,eax
  415d67:	jo     0x415d3f
  415d69:	addr16 leave 
  415d6b:	mov    eax,ds:0x58bd744c
  415d70:	or     eax,DWORD PTR [ebx-0x2353f3a9]
  415d76:	xor    BYTE PTR ds:0x88400e23,0xd5
  415d7d:	(bad)  
  415d7e:	dec    eax
  415d7f:	xor    DWORD PTR [esi-0x7a],ecx
  415d82:	cmp    esp,DWORD PTR [ebp+0x464ff7d4]
  415d88:	adc    ah,BYTE PTR [edx-0x5a]
  415d8b:	jbe    0x415dc2
  415d8d:	mov    eax,ds:0x8d5affed
  415d92:	repz pop ds
  415d94:	xchg   esi,eax
  415d95:	xchg   edx,eax
  415d96:	push   ebp
  415d97:	sbb    al,0xf6
  415d99:	ds enter 0x9b39,0x5f
  415d9e:	push   ds
  415d9f:	aam    0x6b
  415da1:	jno    0x415db4
  415da3:	sbb    al,0xf
  415da5:	ds leave 
  415da7:	mov    eax,0xa20c1263
  415dac:	ins    DWORD PTR es:[edi],dx
  415dad:	popf   
  415dae:	call   FWORD PTR [ebp-0x72]
  415db1:	and    ch,BYTE PTR [edx]
  415db3:	inc    edi
  415db4:	mov    ds:0x9e7b148c,al
  415db9:	call   DWORD PTR [ecx+0x28]
  415dbc:	or     dh,BYTE PTR [ebp+esi*4+0xe]
  415dc0:	jge    0x415da2
  415dc2:	and    BYTE PTR [ebp+0x2b],dh
  415dc5:	int3   
  415dc6:	(bad)  
  415dc7:	push   esi
  415dc8:	sbb    BYTE PTR [ebx+0x21382a77],0x10
  415dcf:	cmp    al,BYTE PTR ds:[ebx+0x65d95f3d]
  415dd6:	push   eax
  415dd7:	adc    eax,0x71f77254
  415ddc:	and    DWORD PTR ds:0x163c236e,edi
  415de2:	iret   
  415de3:	repnz cmp al,al
  415de6:	lods   eax,DWORD PTR ds:[esi]
  415de7:	lock mov al,0xc3
  415dea:	fcomp  DWORD PTR [eax+0x39]
  415ded:	add    DWORD PTR [esi-0x70],0xffffffe0
  415df1:	pop    ss
  415df2:	xor    DWORD PTR [ebx+edi*1],edi
  415df5:	and    bl,BYTE PTR [edi-0x79d912df]
  415dfb:	ficom  DWORD PTR [eax+0x5307bd04]
  415e01:	cs pop ecx
  415e03:	mov    WORD PTR [edi+0x1b],es
  415e06:	inc    edi
  415e07:	mov    al,0xc9
  415e09:	and    BYTE PTR [ecx-0x627d44eb],0x96
  415e10:	inc    esp
  415e11:	add    eax,DWORD PTR [eax+0x47]
  415e14:	leave  
  415e15:	jge    0x415e36
  415e17:	(bad)  
  415e18:	neg    WORD PTR ds:0x483b9887
  415e1f:	add    ebx,ecx
  415e21:	push   ss
  415e22:	sti    
  415e23:	jg     0x415de7
  415e25:	jo     0x415e5b
  415e27:	ins    BYTE PTR es:[edi],dx
  415e28:	lds    edi,FWORD PTR [edi]
  415e2a:	mov    ds:0x8cbfe92b,al
  415e2f:	dec    esp
  415e30:	pop    ebp
  415e31:	jnp    0x415e62
  415e33:	out    dx,eax
  415e34:	inc    edx
  415e35:	es test eax,0x8580e3dc
  415e3b:	sbb    eax,0x49f5bac8
  415e40:	mov    eax,edi
  415e42:	in     al,0x16
  415e44:	int    0x62
  415e46:	sar    DWORD PTR [eax+esi*1-0x69],0xcb
  415e4b:	scas   al,BYTE PTR es:[edi]
  415e4c:	icebp  
  415e4d:	pop    esp
  415e4e:	loopne 0x415e25
  415e50:	ret    
  415e51:	cmp    esp,DWORD PTR [ecx+edx*8+0x50]
  415e55:	jecxz  0x415e20
  415e57:	push   ecx
  415e58:	out    dx,eax
  415e59:	pop    ecx
  415e5a:	pop    ds
  415e5b:	add    BYTE PTR [eax+0x23046a91],ch
  415e61:	mov    cl,0xc9
  415e63:	outs   dx,DWORD PTR ds:[esi]
  415e64:	and    esi,DWORD PTR [edx-0xf]
  415e67:	iret   
  415e68:	mov    esp,DWORD PTR [ebp+0xc6a2e35]
  415e6e:	pusha  
  415e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e70:	outs   dx,DWORD PTR ds:[esi]
  415e71:	aas    
  415e72:	xlat   BYTE PTR ds:[ebx]
  415e73:	push   edx
  415e74:	out    dx,eax
  415e75:	lods   al,BYTE PTR ds:[esi]
  415e76:	inc    esp
  415e77:	jmp    0xaf79:0x50687301
  415e7e:	in     eax,dx
  415e7f:	push   cs
  415e80:	sbb    BYTE PTR [ecx+0x229d581a],bl
  415e86:	and    al,0x69
  415e88:	call   0xc16a:0xcc2eff44
  415e8f:	jo     0x415e4f
  415e91:	pop    esi
  415e92:	bound  edx,QWORD PTR [eax+0x2]
  415e95:	nop
  415e96:	ret    0xcaf1
  415e99:	pushf  
  415e9a:	mov    al,0x83
  415e9c:	jo     0x415eeb
  415e9e:	or     al,0x50
  415ea0:	std    
  415ea1:	sbb    al,0x1c
  415ea3:	pop    edx
  415ea4:	or     edx,DWORD PTR [ecx+0x51ee51cc]
  415eaa:	inc    ebx
  415eab:	xchg   esp,eax
  415eac:	(bad)  
  415ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eae:	pop    ebp
  415eaf:	test   DWORD PTR [eax],esp
  415eb1:	(bad)  
  415eb2:	jl     0x415e53
  415eb4:	push   ecx
  415eb5:	in     eax,dx
  415eb6:	and    ebx,DWORD PTR [esi+eiz*2+0x1e]
  415eba:	and    dl,ch
  415ebc:	rcl    ebx,1
  415ebe:	ret    0x6c7c
  415ec1:	pop    es
  415ec2:	xlat   BYTE PTR ds:[ebx]
  415ec3:	jp     0x415f22
  415ec5:	stc    
  415ec6:	jnp    0x415ef6
  415ec8:	vpmacsdd xmm11,xmm2,xmm6,xmm7
  415ece:	ret    0x2061
  415ed1:	mov    ds:0xf146801,al
  415ed6:	aaa    
  415ed7:	mov    al,ds:0x98a31859
  415edc:	jns    0x415ec4
  415ede:	mov    edi,0x83f3812e
  415ee3:	inc    ecx
  415ee4:	aas    
  415ee5:	out    dx,eax
  415ee6:	pop    es
  415ee7:	dec    ebp
  415ee8:	or     al,0xef
  415eea:	xor    eax,0xe731d7dc
  415eef:	arpl   WORD PTR [ebx],cx
  415ef1:	in     al,dx
  415ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ef3:	dec    ebx
  415ef4:	cmp    DWORD PTR [ebx+0x0],esi
  415ef7:	out    dx,eax
  415ef8:	lds    ecx,FWORD PTR [edi-0x67903920]
  415efe:	pop    edx
  415eff:	mov    ds:0xb3c9e494,eax
  415f04:	scas   eax,DWORD PTR es:[edi]
  415f05:	mov    edx,0xb33253a0
  415f0a:	jge    0x415eaf
  415f0c:	push   esp
  415f0d:	dec    esi
  415f0e:	(bad)  
  415f10:	cmp    eax,0x43ea87c
  415f15:	test   BYTE PTR [ecx+0x67],dl
  415f18:	pop    ebx
  415f19:	(bad)  
  415f1b:	pushf  
  415f1c:	mov    BYTE PTR [ecx],cl
  415f1e:	and    bl,al
  415f20:	jmpw   0x54f8
  415f24:	call   eax
  415f26:	pop    edi
  415f27:	mov    esi,ecx
  415f29:	fsub   st,st(2)
  415f2b:	inc    ebx
  415f2c:	in     al,0xfe
  415f2e:	xor    ebp,DWORD PTR [edx]
  415f30:	stos   DWORD PTR es:[edi],eax
  415f31:	xchg   ecx,eax
  415f32:	mov    dl,0x17
  415f34:	add    al,0x5a
  415f36:	ds out dx,al
  415f38:	add    BYTE PTR [eax+0x7fec3eee],ah
  415f3e:	cmp    al,ah
  415f40:	daa    
  415f41:	(bad)  
  415f42:	cmp    bh,ch
  415f44:	inc    ecx
  415f45:	shl    esp,0xa0
  415f48:	(bad)
  415f4b:	lock fcmovb st,st(4)
  415f4e:	push   ebp
  415f4f:	pop    es
  415f50:	pusha  
  415f51:	sbb    al,0x26
  415f53:	out    dx,al
  415f54:	xchg   esp,eax
  415f55:	pop    esp
  415f56:	pop    edi
  415f57:	dec    esp
  415f58:	ror    BYTE PTR [edi],cl
  415f5a:	xchg   esp,eax
  415f5b:	ins    BYTE PTR es:[edi],dx
  415f5c:	xchg   edi,eax
  415f5d:	loopne 0x415f15
  415f5f:	enter  0xd17d,0xa5
  415f63:	sub    al,0x5f
  415f65:	mov    edx,0x86220d48
  415f6a:	cmp    ebp,esp
  415f6c:	mov    ebp,0x34f8502c
  415f71:	add    ebx,DWORD PTR [eax]
  415f73:	adc    DWORD PTR fs:[ebx],edx
  415f76:	mov    ecx,0xcec3388a
  415f7c:	adc    al,0xcc
  415f7e:	jb     0x415f85
  415f80:	xor    esp,DWORD PTR [esi+0x7]
  415f83:	les    ecx,FWORD PTR [esi]
  415f85:	fisttp WORD PTR [ecx+0x68]
  415f88:	push   0x35bfbce9
  415f8d:	cmp    eax,0x7f9402c8
  415f92:	and    DWORD PTR [ebp+0x4977c9c5],esi
  415f98:	mov    ecx,0x4951f7fd
  415f9d:	pop    ecx
  415f9e:	hlt    
  415f9f:	xchg   esp,eax
  415fa0:	cmp    esi,DWORD PTR [esp+ecx*1+0x2]
  415fa4:	lods   al,BYTE PTR ds:[esi]
  415fa5:	test   al,0x9a
  415fa7:	in     eax,0x61
  415fa9:	push   ebx
  415faa:	test   eax,0x14d64dbb
  415faf:	loopne 0x416013
  415fb1:	mov    dh,0x8e
  415fb3:	or     BYTE PTR [esp+ecx*4],dh
  415fb6:	int    0xa1
  415fb8:	push   eax
  415fb9:	push   eax
  415fba:	in     eax,dx
  415fbb:	mov    BYTE PTR [ebp+0x4898c1e],dh
  415fc1:	dec    esp
  415fc2:	aas    
  415fc3:	mov    al,ds:0x68233c13
  415fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fc9:	test   DWORD PTR [ecx*8-0x7b890791],esp
  415fd0:	mov    bh,0xd0
  415fd2:	ret    
  415fd3:	push   ebp
  415fd4:	push   0x84cd940b
  415fd9:	les    eax,FWORD PTR [edi+0x5b193dc1]
  415fdf:	mov    esi,0x5f307d25
  415fe4:	mov    al,ds:0xb9b085a7
  415fe9:	and    ebp,DWORD PTR [eax]
  415feb:	pop    eax
  415fec:	fnsetpm(287 only) 
  415fee:	sbb    BYTE PTR [ecx],dl
  415ff0:	jecxz  0x415fe9
  415ff2:	test   eax,0xb1fb1c29
  415ff7:	or     al,0x8c
  415ff9:	(bad)
  415ffc:	or     BYTE PTR [eax+0x53df8be8],dh
  416002:	retf   0x548f
  416005:	call   0xb8bb8263
  41600a:	out    dx,eax
  41600b:	or     eax,DWORD PTR [edx]
  41600d:	loope  0x416039
  41600f:	rcl    BYTE PTR [ecx],cl
  416011:	adc    BYTE PTR [ebx],al
  416013:	imul   ecx,ebp,0x4dfd6ec9
  416019:	test   eax,0xffc9abf9
  41601e:	xchg   ebp,eax
  41601f:	in     al,dx
  416020:	pcmpgtd mm6,mm6
  416023:	dec    ebp
  416024:	dec    esp
  416025:	push   cs
  416026:	cmp    cl,BYTE PTR [ebx]
  416028:	inc    esi
  416029:	and    esp,DWORD PTR [esi]
  41602b:	sbb    eax,0xe3f039b9
  416030:	out    0x42,al
  416032:	xchg   ecx,eax
  416033:	xchg   ebp,eax
  416034:	neg    BYTE PTR [eax-0x23]
  416037:	xchg   esi,eax
  416038:	jecxz  0x415fc7
  41603a:	mov    ecx,0x570e09d6
  41603f:	into   
  416040:	mov    al,ds:0xf2f736d7
  416045:	je     0x416054
  416047:	iret   
  416048:	jmp    0xd748:0x5333aebe
  41604f:	mov    edx,0xb0f21eda
  416054:	xchg   BYTE PTR [ebx+0x62],al
  416057:	sbb    DWORD PTR [edi-0x1d],edx
  41605a:	and    eax,0xbcadad73
  41605f:	mov    DWORD PTR [ecx-0x3dd7a5ae],esi
  416065:	ss (bad) 
  416068:	dec    eax
  416069:	pop    ds
  41606a:	jg     0x416090
  41606c:	ins    BYTE PTR es:[edi],dx
  41606d:	sbb    DWORD PTR [eax],eax
  41606f:	(bad)  
  416070:	adc    ebx,DWORD PTR [ebx-0x7b]
  416073:	aas    
  416074:	adc    ch,BYTE PTR [edi+ecx*4-0x6d]
  416078:	loop   0x41606f
  41607a:	cmp    al,0x2d
  41607c:	dec    ecx
  41607d:	cmp    esp,ecx
  41607f:	sub    ecx,DWORD PTR [ecx+0x1b8f144]
  416085:	dec    edx
  416086:	push   es
  416087:	mov    ch,0xd3
  416089:	cwde   
  41608a:	mov    ecx,0x28e1e131
  41608f:	ret    
  416090:	mov    ss,eax
  416092:	mov    edi,0xea14b578
  416097:	mov    BYTE PTR [edx],0xf
  41609a:	scas   eax,DWORD PTR es:[edi]
  41609b:	inc    esi
  41609c:	les    ecx,FWORD PTR [edx-0x44d12c79]
  4160a2:	pop    ss
  4160a3:	xchg   edi,eax
  4160a4:	pushf  
  4160a5:	xor    eax,0x5f10be98
  4160aa:	stos   DWORD PTR es:[edi],eax
  4160ab:	in     al,0xd6
  4160ad:	je     0x4160fa
  4160af:	adc    edx,edx
  4160b1:	pop    edx
  4160b2:	inc    ecx
  4160b3:	jns    0x4160a2
  4160b5:	rcr    BYTE PTR [ecx+eiz*8+0x61],1
  4160b9:	sbb    BYTE PTR [ebx-0x59],al
  4160bc:	and    ebx,esp
  4160be:	push   ss
  4160bf:	sti    
  4160c0:	push   ebx
  4160c1:	retf   0x229a
  4160c4:	mov    ds:0x9b082df5,eax
  4160c9:	sub    eax,edi
  4160cb:	sub    ebx,DWORD PTR [ecx+0x5ddece6c]
  4160d1:	push   esp
  4160d2:	(bad)  
  4160d4:	jmp    0x8e34:0x2eafbefa
  4160db:	loop   0x416106
  4160dd:	test   eax,0xba89d20f
  4160e2:	dec    esp
  4160e3:	mov    WORD PTR [esi],?
  4160e5:	daa    
  4160e6:	and    DWORD PTR [edi-0x48],esp
  4160e9:	sub    DWORD PTR [esi-0x3b],esi
  4160ec:	push   esp
  4160ed:	and    eax,0xff4ecc1
  4160f2:	xchg   ebx,eax
  4160f3:	arpl   WORD PTR ds:0xfb5a17c8,bx
  4160f9:	(bad)  
  4160fa:	call   0x1ecf:0x9d69b736
  416101:	push   ebp
  416102:	xchg   DWORD PTR [edx-0x4c],eax
  416105:	xor    al,0x64
  416107:	nop
  416108:	imul   edi,DWORD PTR [edi+0x13],0x7233a85
  41610f:	clc    
  416110:	cwde   
  416111:	(bad)  
  416112:	mov    bh,0xd8
  416114:	xchg   ecx,eax
  416115:	(bad)  
  416116:	adc    ebx,DWORD PTR [ebx+0x3d489f4a]
  41611c:	fld1   
  41611e:	std    
  41611f:	mov    al,0x92
  416121:	and    ah,dl
  416123:	fist   WORD PTR [ebp+0x5d42d118]
  416129:	jge    0x4160df
  41612b:	inc    ecx
  41612c:	into   
  41612d:	add    DWORD PTR [esi+0x75a08aa8],esi
  416133:	into   
  416134:	dec    eax
  416135:	in     al,0xcd
  416137:	xchg   ecx,eax
  416138:	mov    eax,ds:0xff2e556b
  41613d:	out    dx,al
  41613e:	push   edx
  41613f:	cwde   
  416140:	jnp    0x4161b0
  416142:	sub    al,BYTE PTR fs:0xd6c35fc9
  416149:	imul   eax,DWORD PTR [edi],0xffffffc6
  41614c:	adc    DWORD PTR [edi],ecx
  41614e:	mov    esi,0x7a35810d
  416153:	add    BYTE PTR [edx-0x80],bl
  416156:	idiv   edi
  416158:	inc    ecx
  416159:	leave  
  41615a:	cli    
  41615b:	mov    ds:0x6b5893bd,al
  416160:	mov    edx,0x86b9d0e9
  416165:	dec    edx
  416166:	test   BYTE PTR [edx-0x32],ch
  416169:	dec    edx
  41616a:	inc    ebp
  41616b:	pusha  
  41616c:	fsubr  DWORD PTR [ebx+0x72b1739c]
  416172:	ins    BYTE PTR es:[edi],dx
  416173:	mov    cl,0x0
  416175:	add    DWORD PTR [edx],0x85eef6f4
  41617b:	cmp    bl,al
  41617d:	lea    esi,[ebp-0x26]
  416180:	mov    al,0x71
  416182:	mov    BYTE PTR [ecx+0x1e2d9d42],bl
  416188:	sub    BYTE PTR [esi-0x32],dl
  41618b:	repz (bad) 
  41618d:	leave  
  41618e:	sbb    dh,BYTE PTR [ebp+edi*8+0x7c7763d1]
  416195:	adc    cl,al
  416197:	inc    esi
  416198:	loopne 0x4161a4
  41619a:	sub    BYTE PTR [esi-0x7716048a],0xd6
  4161a1:	xchg   edi,eax
  4161a2:	pop    edx
  4161a3:	sbb    DWORD PTR [eax],eax
  4161a5:	mov    esi,0xa81350b6
  4161aa:	push   esi
  4161ab:	push   0xffffffc5
  4161ad:	fst    DWORD PTR [ecx+0x47]
  4161b0:	jae    0x4161da
  4161b2:	or     eax,0xb03b0c8e
  4161b7:	xchg   edx,eax
  4161b8:	cmc    
  4161b9:	cld    
  4161ba:	cs out 0xda,eax
  4161bd:	mov    BYTE PTR [ebx],ch
  4161bf:	xchg   edi,eax
  4161c0:	scas   eax,DWORD PTR es:[edi]
  4161c1:	test   DWORD PTR [esi+0x7b7a1c6c],eax
  4161c7:	mov    dh,0x26
  4161c9:	les    edi,FWORD PTR [ebp-0x703fb2e7]
  4161cf:	xor    eax,0x79ec8ca0
  4161d4:	in     al,dx
  4161d5:	rol    BYTE PTR [ebx+ecx*4],1
  4161d8:	sbb    eax,0x805bca4c
  4161dd:	js     0x4161a2
  4161df:	xchg   ebp,eax
  4161e0:	push   ebx
  4161e1:	iret   
  4161e2:	push   edx
  4161e3:	ret    
  4161e4:	and    eax,0x3ff97bac
  4161e9:	and    eax,0x6162926
  4161ee:	jle    0x416191
  4161f0:	je     0x416230
  4161f2:	or     edi,DWORD PTR [esi+0x60ca359b]
  4161f8:	repz jne 0x4161d1
  4161fb:	mov    fs,WORD PTR [edi+0x295f4acb]
  416201:	cwde   
  416202:	cmp    eax,0x8baa3d58
  416207:	(bad)  
  416208:	out    0xcc,al
  41620a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41620b:	retf   0x6603
  41620e:	dec    eax
  41620f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416210:	inc    ebp
  416211:	cli    
  416212:	push   edi
  416213:	rol    DWORD PTR [ecx],1
  416215:	test   BYTE PTR ds:0xd9a7ad1d,ch
  41621b:	and    DWORD PTR [ebx+0x15],edx
  41621e:	ret    
  41621f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416220:	jmp    0xa24d812e
  416225:	mov    ecx,0x4f4c5083
  41622a:	sub    eax,0xb76f4d44
  41622f:	icebp  
  416230:	dec    ebp
  416231:	in     eax,dx
  416232:	or     eax,0x105345ae
  416237:	xchg   esp,eax
  416238:	popf   
  416239:	cmp    bh,0xbe
  41623c:	mov    WORD PTR [eax+0x69a8017c],ss
  416242:	push   ss
  416243:	mov    edx,edx
  416245:	(bad)  
  416246:	push   ebx
  416247:	clc    
  416248:	xor    eax,DWORD PTR [ecx]
  41624a:	popa   
  41624b:	xchg   al,al
  41624d:	jb     0x4161e9
  41624f:	sbb    ebp,DWORD PTR [edx-0x38cd9e34]
  416255:	mov    ebx,0x96e2491c
  41625a:	mov    ebx,0xc8970a6d
  41625f:	pop    eax
  416260:	fs or  al,0xd
  416263:	repz mov dl,BYTE PTR [edi]
  416266:	in     eax,0xf5
  416268:	outs   dx,DWORD PTR ds:[esi]
  416269:	mul    esi
  41626b:	sbb    eax,DWORD PTR [ebp-0x66]
  41626e:	into   
  41626f:	push   ds
  416270:	mov    WORD PTR [ebx-0x65],cx
  416274:	dec    edx
  416275:	mov    DWORD PTR [ebp+0x1b],ecx
  416278:	xchg   edi,eax
  416279:	je     0x416282
  41627b:	pop    edi
  41627c:	clc    
  41627d:	mov    al,0x38
  41627f:	aaa    
  416280:	inc    eax
  416281:	sub    dh,dl
  416283:	jae    0x416214
  416285:	inc    ebx
  416286:	pop    ebp
  416287:	mov    DWORD PTR [edx],ebp
  416289:	jbe    0x41622d
  41628b:	outs   dx,DWORD PTR ds:[esi]
  41628c:	jnp    0x4162d4
  41628e:	mov    ebp,0x4533451b
  416293:	xor    ebx,DWORD PTR [edx-0x75]
  416296:	or     al,BYTE PTR [esi+esi*1]
  416299:	sti    
  41629a:	xchg   esp,eax
  41629b:	inc    edi
  41629c:	inc    edx
  41629d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41629e:	stc    
  41629f:	adc    eax,0x742147cf
  4162a5:	sar    BYTE PTR [ebx-0x20eed65c],0xc9
  4162ac:	sbb    ebp,ecx
  4162ae:	xchg   ebp,eax
  4162af:	lahf   
  4162b0:	xor    eax,esp
  4162b2:	shl    DWORD PTR [edx+0x5bbfeb4c],cl
  4162b8:	pop    DWORD PTR [esi]
  4162ba:	imul   BYTE PTR [ebp+esi*4+0x1e71aa03]
  4162c1:	retf   
  4162c2:	ss add eax,0x3d311cf9
  4162c8:	sbb    eax,0x41c86227
  4162cd:	sar    BYTE PTR [eax+0x7c],1
  4162d0:	sub    BYTE PTR [si],bl
  4162d3:	ficomp WORD PTR [esi+eax*8-0x68cd4844]
  4162da:	addr16 jo 0x41626e
  4162dd:	arpl   WORD PTR [eax],bp
  4162df:	dec    esp
  4162e0:	pop    di
  4162e2:	xchg   edi,eax
  4162e3:	pop    edx
  4162e4:	mov    al,0x1c
  4162e6:	mov    al,0x14
  4162e8:	jbe    0x416354
  4162ea:	xchg   DWORD PTR [ecx],edx
  4162ec:	lock mov dh,0xd1
  4162ef:	stos   BYTE PTR es:[edi],al
  4162f0:	xchg   DWORD PTR [eax+eiz*1+0x5a],edi
  4162f4:	lea    eax,[ecx]
  4162f6:	aaa    
  4162f7:	ret    
  4162f8:	adc    al,0xac
  4162fa:	jo     0x41633f
  4162fc:	sbb    eax,ebp
  4162fe:	xchg   BYTE PTR [edi+0xd],bl
  416301:	push   ebx
  416302:	inc    eax
  416303:	adc    BYTE PTR [ebx-0xf5753cd],bl
  416309:	xor    al,0x5
  41630b:	fmul   st,st(2)
  41630d:	retf   0x1d41
  416310:	mov    ecx,0xe462d3d6
  416315:	mov    ds:0x66fcbda3,eax
  41631a:	adc    ebx,0x8335ff10
  416320:	add    al,0x13
  416322:	fstp   TBYTE PTR [eax]
  416324:	cli    
  416325:	jmp    DWORD PTR [ebx-0x700e3b8]
  41632b:	popf   
  41632c:	sbb    ah,ch
  41632e:	aaa    
  41632f:	jp     0x4162b6
  416331:	pop    ds
  416332:	int3   
  416333:	test   al,0x16
  416335:	mov    ebx,0xfafbcc97
  41633a:	ror    DWORD PTR [edi+0x7cae3b23],1
  416340:	mov    ebx,0x3b950494
  416345:	push   ecx
  416346:	jmp    DWORD PTR [edx]
  416348:	jne    0x4163b8
  41634a:	push   esi
  41634b:	add    DWORD PTR [edi-0x605dd6f6],edi
  416351:	dec    ebx
  416352:	ins    DWORD PTR es:[edi],dx
  416353:	dec    ecx
  416354:	jg     0x4162e9
  416356:	retf   0x7d7c
  416359:	call   0x7db3:0x4a6af4e6
  416360:	iret   
  416361:	enter  0x8695,0x13
  416365:	mov    esi,0xb468e82a
  41636a:	pusha  
  41636b:	xchg   edi,eax
  41636c:	xlat   BYTE PTR ds:[ebx]
  41636d:	jl     0x4162f6
  41636f:	xor    al,0x87
  416371:	cmp    edi,DWORD PTR [eax]
  416373:	jl     0x4163c8
  416375:	inc    eax
  416376:	mov    ch,0xaf
  416378:	aas    
  416379:	scas   eax,DWORD PTR es:[edi]
  41637a:	enter  0x4a0,0xa7
  41637e:	xadd   BYTE PTR [edi],ch
  416381:	std    
  416382:	inc    ebp
  416383:	(bad)  
  416384:	mov    DWORD PTR [ebx-0x3d],ebp
  416387:	cmp    bh,BYTE PTR [esi-0x7e0e2497]
  41638d:	inc    edi
  41638e:	inc    ebp
  41638f:	nop
  416390:	mov    ah,0x44
  416392:	push   esi
  416393:	nop
  416394:	addr16 xchg ecx,eax
  416396:	mov    ch,0xc0
  416398:	mov    ds:0x27e8ec93,eax
  41639d:	sar    eax,0x31
  4163a0:	add    DWORD PTR [edx],edx
  4163a2:	push   es
  4163a3:	js     0x4163b5
  4163a5:	cld    
  4163a6:	sub    ebx,ebp
  4163a8:	mov    DWORD PTR [ebx-0x61fbe6b9],0xa68c031e
  4163b2:	jecxz  0x416349
  4163b4:	and    eax,0xfc0381c3
  4163b9:	xchg   esp,eax
  4163ba:	sahf   
  4163bb:	imul   ebx,DWORD PTR [ebx+0x7139ad6],0x33
  4163c2:	xchg   edx,eax
  4163c3:	push   edi
  4163c4:	je     0x4163ab
  4163c6:	xchg   esp,eax
  4163c7:	je     0x416428
  4163c9:	xchg   ah,al
  4163cb:	enter  0xaf5c,0xc4
  4163cf:	jecxz  0x4163bf
  4163d1:	test   ebx,edi
  4163d3:	push   edx
  4163d4:	pop    ss
  4163d5:	rcl    BYTE PTR [edx+0x15],1
  4163d8:	cmp    DWORD PTR [eax-0x6d],esp
  4163db:	nop
  4163dc:	lods   eax,DWORD PTR ds:[esi]
  4163dd:	and    bl,dh
  4163df:	xchg   esp,eax
  4163e0:	es jl  0x416453
  4163e3:	mov    ds:0xb5db596c,eax
  4163e8:	ss and DWORD PTR ds:[ebp-0x56130ccd],0x59
  4163f1:	xor    al,0xe6
  4163f3:	je     0x4163c2
  4163f5:	mov    ch,0x9e
  4163f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163f8:	and    eax,0xf15eda33
  4163fd:	cli    
  4163fe:	mov    edx,0x9c53d4f6
  416403:	pop    ss
  416404:	mov    DWORD PTR [eax+0x55],edx
  416407:	sbb    esp,esp
  416409:	in     eax,0xbf
  41640b:	mov    cl,BYTE PTR [esi-0x2a72aadf]
  416411:	sub    BYTE PTR [ebx+0x22],0x85
  416415:	ja     0x4163c8
  416417:	(bad)  
  416418:	std    
  416419:	or     BYTE PTR [esp+edx*8],0x1
  41641d:	test   DWORD PTR [ebx],edx
  41641f:	xchg   esp,eax
  416420:	daa    
  416421:	mov    ch,0x20
  416423:	cwde   
  416424:	jne    0x416439
  416426:	mov    al,ds:0x6315146a
  41642b:	fcomp  DWORD PTR [eax+0x260cc4e6]
  416431:	stc    
  416432:	sub    DWORD PTR [edi+0x66],ebx
  416435:	xchg   DWORD PTR [eax],eax
  416437:	pop    ebp
  416438:	nop
  416439:	inc    ebx
  41643a:	jp     0x416435
  41643c:	push   ebp
  41643d:	in     eax,0xb3
  41643f:	mov    ebx,0xd8620769
  416444:	xchg   DWORD PTR [edi+0x4f64246c],esp
  41644a:	and    al,0x2b
  41644c:	xor    ebp,eax
  41644e:	jmp    0x4163da
  416450:	jno    0x4164b6
  416452:	xchg   edi,eax
  416453:	fsubr  DWORD PTR [eax-0x5962f446]
  416459:	xor    bl,cl
  41645b:	fnsave [esi+0x61221c37]
  416461:	inc    edi
  416462:	mov    ah,0xf9
  416464:	jo     0x4163fb
  416466:	pop    esi
  416467:	cmp    BYTE PTR [eax+ebx*2-0x78],0x29
  41646c:	fdivr  QWORD PTR [edx]
  41646e:	aas    
  41646f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416470:	popa   
  416471:	pop    ds
  416472:	xchg   esp,eax
  416473:	mov    ah,0xaa
  416475:	cld    
  416476:	mov    cl,0x5f
  416478:	mov    eax,ds:0x461b36d5
  41647d:	or     ch,BYTE PTR [edi+0x5b75bd06]
  416483:	std    
  416484:	or     BYTE PTR ds:0x6cfa53f2,dh
  41648a:	cdq    
  41648b:	call   0x407e:0xb56458e4
  416492:	adc    edx,esp
  416494:	dec    ebp
  416495:	repz mov eax,0x836df078
  41649b:	push   ds
  41649c:	or     BYTE PTR [ebp-0x68],ah
  41649f:	pop    eax
  4164a0:	rcl    cl,1
  4164a2:	scas   al,BYTE PTR es:[edi]
  4164a3:	icebp  
  4164a4:	inc    ecx
  4164a5:	ret    0x3ff2
  4164a8:	(bad)  
  4164a9:	mov    eax,0x6e1d9653
  4164ae:	les    ecx,FWORD PTR [edx+0x7722d274]
  4164b4:	ja     0x416452
  4164b6:	push   eax
  4164b7:	xor    ecx,eax
  4164b9:	aad    0x3e
  4164bb:	out    dx,al
  4164bc:	aas    
  4164bd:	rcl    BYTE PTR [ebp-0x6775afb3],cl
  4164c3:	js     0x416463
  4164c5:	xor    eax,0xa326b0f6
  4164ca:	jb     0x4164c4
  4164cc:	cmc    
  4164cd:	daa    
  4164ce:	retf   
  4164cf:	ret    
  4164d0:	jno    0x41646e
  4164d2:	mov    bl,0x11
  4164d4:	outs   dx,BYTE PTR ds:[esi]
  4164d5:	push   ecx
  4164d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d7:	push   0x4f
  4164d9:	mov    edx,fs
  4164db:	stc    
  4164dc:	and    bh,bl
  4164de:	(bad)  
  4164df:	cmp    al,0xfa
  4164e1:	or     al,0xc0
  4164e3:	fiadd  WORD PTR [esi+0x53]
  4164e6:	inc    esp
  4164e7:	iret   
  4164e8:	or     ah,BYTE PTR [ecx-0x42]
  4164eb:	adc    BYTE PTR [edx],al
  4164ed:	test   al,0xd0
  4164ef:	les    ebx,FWORD PTR [ebx]
  4164f1:	and    al,0xdf
  4164f3:	push   cs
  4164f4:	enter  0x39f,0xc8
  4164f8:	push   ds
  4164f9:	push   edi
  4164fa:	imul   ebx,DWORD PTR [eax+ebx*8-0x618421f5],0x3a6863f0
  416505:	jg     0x416512
  416507:	or     dl,BYTE PTR ds:0x8fc45eba
  41650d:	imul   esp,edi,0x6365324f
  416513:	sti    
  416514:	(bad)  
  416515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416516:	pop    ebx
  416517:	idiv   BYTE PTR [ebp+0x750b6d4b]
  41651d:	and    DWORD PTR [eax],esp
  41651f:	xchg   esi,eax
  416520:	jb     0x41651d
  416522:	sub    al,0xec
  416524:	sbb    DWORD PTR ds:0xf0746fe8,esi
  41652b:	jbe    0x416554
  41652d:	push   0x161b7c30
  416532:	pop    edx
  416533:	jmp    FWORD PTR [eax-0x54]
  416536:	rcl    BYTE PTR [edi],cl
  416538:	adc    DWORD PTR [esi+0x51076db8],0xffffffe3
  41653f:	ret    
  416540:	xlat   BYTE PTR ds:[ebx]
  416541:	jmp    DWORD PTR [eax+0x8]
  416544:	clc    
  416545:	xor    DWORD PTR [ecx+ebx*2-0x35],ebp
  416549:	ficomp WORD PTR [esi]
  41654b:	mov    edi,0x34ea2501
  416550:	inc    eax
  416551:	loope  0x41659b
  416553:	xchg   ebx,eax
  416554:	dec    esp
  416555:	adc    al,0x10
  416557:	inc    ecx
  416558:	xlat   BYTE PTR ds:[ebx]
  416559:	loop   0x41659b
  41655b:	sbb    esi,DWORD PTR [ecx]
  41655d:	jnp    0x41657d
  41655f:	pusha  
  416560:	cmc    
  416561:	push   ebp
  416562:	xchg   BYTE PTR [ecx-0x54c789bc],bl
  416568:	cmp    edi,DWORD PTR [ecx]
  41656a:	call   0x6a9997ce
  41656f:	inc    ebp
  416570:	retf   
  416571:	pop    ebx
  416572:	push   0xffffff97
  416574:	and    DWORD PTR [edx+ecx*2-0x26],0xffffffa5
  416579:	dec    esi
  41657a:	out    0x39,al
  41657c:	(bad)  
  41657d:	pop    ebx
  41657e:	add    al,BYTE PTR [ecx+0x1d1c4687]
  416584:	lods   eax,DWORD PTR ds:[esi]
  416585:	push   0x83570f0c
  41658a:	cld    
  41658b:	push   ebp
  41658c:	in     al,0xa5
  41658e:	push   0x55
  416590:	and    al,0xba
  416592:	mov    ah,0x7d
  416594:	add    edx,esi
  416596:	pusha  
  416597:	cmp    ah,BYTE PTR [edx]
  416599:	(bad)  
  41659a:	mov    bh,0xb5
  41659c:	test   DWORD PTR [esi],eax
  41659e:	addr16 ds fwait
  4165a1:	jmp    0xa19f:0x74a10c1d
  4165a8:	jbe    0x4165fe
  4165aa:	or     bh,BYTE PTR ds:0x71e1c35c
  4165b0:	addr16 xor ch,cl
  4165b3:	lea    edi,ds:0x92e7e5ce
  4165b9:	in     eax,0x16
  4165bb:	in     al,0x95
  4165bd:	mov    cl,0x82
  4165bf:	push   esp
  4165c0:	jle    0x41663f
  4165c2:	ret    0x7406
  4165c5:	jg     0x41655f
  4165c7:	arpl   WORD PTR [edx-0x99aec64],sp
  4165cd:	cmp    al,0xde
  4165cf:	adc    eax,0xc27ba71a
  4165d4:	imul   ebp,eax,0x4b
  4165d7:	stc    
  4165d8:	pop    esp
  4165d9:	lods   eax,DWORD PTR ds:[esi]
  4165da:	rcr    esi,0x5a
  4165dd:	add    edx,ebp
  4165df:	call   0xcad01bba
  4165e4:	push   ebx
  4165e5:	seto   BYTE PTR [eax-0x19]
  4165e9:	(bad)  [edx+0x49]
  4165ec:	inc    esp
  4165ed:	adc    eax,esp
  4165ef:	cmp    eax,0x201e620d
  4165f4:	xor    BYTE PTR [esi-0x4d2d084f],al
  4165fa:	xchg   esi,eax
  4165fb:	mov    al,ds:0xc9039a2d
  416600:	dec    ebx
  416601:	xchg   edi,eax
  416602:	dec    esi
  416603:	out    0x7e,al
  416605:	mov    esp,0x7be64a5b
  41660a:	rol    BYTE PTR [ebx],1
  41660c:	test   al,0xee
  41660e:	int    0x82
  416610:	out    0x69,eax
  416612:	(bad)  [edi]
  416614:	push   eax
  416615:	out    0xf7,eax
  416617:	fistp  WORD PTR [ebx]
  416619:	jl     0x416692
  41661b:	frstor [edx]
  41661d:	xor    eax,0xc3b10f9a
  416622:	add    al,0xc6
  416624:	cdq    
  416625:	(bad)
  416628:	jle    0x4165e2
  41662a:	mov    ds:0x921067d8,eax
  41662f:	inc    ecx
  416630:	cld    
  416631:	dec    ebp
  416632:	test   eax,0x5ca2c924
  416637:	sub    al,0xc0
  416639:	fcmovb st,st(1)
  41663b:	xor    esp,DWORD PTR [eax]
  41663d:	mov    esp,0x880fbe0b
  416642:	data16 add cl,BYTE PTR [eax-0xc]
  416646:	or     bl,ch
  416648:	fadd   DWORD PTR [edi-0x6a3d06a4]
  41664e:	shl    DWORD PTR [esi-0x6c52a3cc],cl
  416654:	aam    0xef
  416656:	cwde   
  416657:	and    bh,ah
  416659:	push   cs
  41665a:	inc    ecx
  41665b:	cli    
  41665c:	or     al,BYTE PTR [ebx+0x6d]
  41665f:	loop   0x4166a4
  416661:	mov    esp,0x504e1c30
  416666:	adc    eax,0xa8d9cf23
  41666b:	sbb    eax,0x390b5ef7
  416670:	inc    esi
  416671:	(bad)  
  416672:	pop    ebp
  416673:	mov    bh,0x64
  416675:	mov    ch,0x64
  416677:	call   0xf7c5:0x405ccf45
  41667e:	in     eax,0xc4
  416680:	or     eax,ebp
  416682:	pop    edi
  416683:	stc    
  416684:	xchg   ebp,eax
  416685:	sbb    al,0x4c
  416687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416688:	adc    BYTE PTR [ebx],al
  41668a:	out    0xaa,eax
  41668c:	loop   0x416699
  41668e:	jle    0x4166b2
  416690:	retf   0xf664
  416693:	adc    BYTE PTR fs:[ebp-0x79d8b2aa],bl
  41669a:	into   
  41669b:	fs pop esp
  41669d:	das    
  41669e:	dec    edi
  41669f:	mov    bl,0xe9
  4166a1:	popf   
  4166a2:	jmp    0x113a:0x3068d2d6
  4166a9:	mov    eax,DWORD PTR [ecx+esi*8-0x34]
  4166ad:	push   ds
  4166ae:	xor    ebp,DWORD PTR [esi+0x61]
  4166b1:	inc    ebx
  4166b2:	pop    ss
  4166b3:	inc    ebp
  4166b4:	outs   dx,BYTE PTR ds:[esi]
  4166b5:	dec    edi
  4166b6:	test   edi,0x4373f4a9
  4166bc:	adc    eax,0x2ed76256
  4166c1:	push   0x36
  4166c3:	or     al,0x4a
  4166c5:	and    eax,0x1585874b
  4166ca:	xchg   BYTE PTR [ecx-0x3db9e137],ah
  4166d0:	xchg   BYTE PTR [esp+ebx*8+0x6f],bh
  4166d4:	hlt    
  4166d5:	inc    edi
  4166d6:	add    DWORD PTR [ebx],0x9c003e32
  4166dc:	push   ebp
  4166dd:	mov    DWORD PTR [ebp+ebp*1+0x14f03659],ebp
  4166e4:	std    
  4166e5:	sahf   
  4166e6:	ins    BYTE PTR es:[edi],dx
  4166e7:	icebp  
  4166e8:	cwde   
  4166e9:	test   BYTE PTR [edx+0x73],ch
  4166ec:	add    bh,BYTE PTR [edx-0x6b]
  4166ef:	cli    
  4166f0:	cdq    
  4166f1:	mov    ch,0x26
  4166f3:	ins    BYTE PTR es:[edi],dx
  4166f4:	pop    esp
  4166f5:	sub    BYTE PTR [edx-0xdc576e4],dh
  4166fb:	cld    
  4166fc:	repz pop edx
  4166fe:	imul   esp,DWORD PTR [eax+eiz*2-0x78],0x6ed58e2a
  416706:	xor    BYTE PTR [edx+0xf],cl
  416709:	sub    bh,BYTE PTR [eax-0x25648dd7]
  41670f:	dec    ecx
  416710:	sbb    dl,ch
  416712:	add    ah,cl
  416714:	mov    ds:0x5fd48323,al
  416719:	in     eax,0xf6
  41671b:	in     al,0xa8
  41671d:	cmp    ch,dh
  41671f:	mov    ds:0xeed53c55,eax
  416724:	mov    dl,ah
  416726:	iret   
  416727:	sub    eax,DWORD PTR [ebp+0x303276e7]
  41672d:	jmp    0xbdaedfee
  416732:	cmp    ebp,DWORD PTR [esi]
  416734:	lea    edx,[eax+ebx*1]
  416737:	rcr    dh,0x1a
  41673a:	stc    
  41673b:	pushf  
  41673c:	outs   dx,DWORD PTR ds:[esi]
  41673d:	hlt    
  41673e:	icebp  
  41673f:	push   esi
  416740:	xor    ah,BYTE PTR [eax+0xe26469d]
  416746:	adc    bl,ch
  416748:	xchg   ecx,eax
  416749:	fbld   TBYTE PTR [esi+0x77]
  41674c:	clc    
  41674d:	in     al,0x63
  41674f:	sub    ecx,DWORD PTR [edx+0x43607e18]
  416755:	loop   0x4166fc
  416757:	push   cs
  416758:	xor    al,0xf8
  41675a:	sbb    al,0xc8
  41675c:	dec    eax
  41675d:	dec    ebp
  41675e:	adc    eax,0x1f14139f
  416763:	xchg   DWORD PTR [edi-0x2d28df76],ebx
  416769:	int3   
  41676a:	push   0xffffffd2
  41676c:	out    0x87,al
  41676e:	push   esi
  41676f:	iret   
  416770:	pop    esi
  416771:	repnz into 
  416773:	sub    edx,DWORD PTR [esi+0x45]
  416776:	mov    eax,0x3e71a477
  41677b:	or     ebx,DWORD PTR [esi-0x1c]
  41677e:	xchg   edx,eax
  41677f:	fstp   QWORD PTR [eax]
  416781:	sub    DWORD PTR es:[eax-0x46],edx
  416785:	leave  
  416786:	jo     0x41679c
  416788:	lods   eax,DWORD PTR ds:[esi]
  416789:	test   eax,0x6d308805
  41678e:	call   0x649f:0x1fa132ff
  416795:	sbb    eax,0x49ef43e3
  41679a:	inc    DWORD PTR [ebx]
  41679c:	mov    ds:0x3d7b68b1,al
  4167a1:	xor    eax,DWORD PTR [ebp+0xd]
  4167a4:	xchg   DWORD PTR [eax-0x40484d76],esi
  4167aa:	inc    ebp
  4167ab:	hlt    
  4167ac:	add    eax,DWORD PTR [ebx+0x7c43d6e3]
  4167b2:	fsub   DWORD PTR [edx+0x678b1223]
  4167b8:	jae    0x416749
  4167ba:	push   eax
  4167bb:	cwde   
  4167bc:	loopne 0x4167be
  4167be:	push   ds
  4167bf:	inc    ebp
  4167c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c1:	sub    DWORD PTR [edx-0x3327313a],edx
  4167c7:	sub    DWORD PTR [eax+eiz*4],0xda6e51d5
  4167ce:	mov    esp,0x3477ead7
  4167d3:	nop
  4167d4:	sahf   
  4167d5:	into   
  4167d6:	pop    edi
  4167d7:	push   0xffffffbf
  4167d9:	pop    es
  4167da:	inc    edx
  4167db:	gs rol ah,0x90
  4167df:	inc    ebp
  4167e0:	add    esi,DWORD PTR [ebx+0x6e50e29f]
  4167e6:	rcl    BYTE PTR [edx-0x59],1
  4167e9:	stc    
  4167ea:	and    al,0x93
  4167ec:	mov    eax,0x46b070bd
  4167f1:	int3   
  4167f2:	jno    0x41682d
  4167f4:	mov    es,eax
  4167f6:	pop    ecx
  4167f7:	dec    ebx
  4167f8:	leave  
  4167f9:	adc    eax,0xb74b6cc0
  4167fe:	dec    edx
  4167ff:	add    al,BYTE PTR [ecx]
  416801:	cmp    eax,0x1affdc0a
  416806:	or     cl,cl
  416808:	dec    ebx
  416809:	nop
  41680a:	out    0x86,al
  41680c:	gs sar ecx,1
  41680f:	ins    BYTE PTR es:[edi],dx
  416810:	fist   DWORD PTR [edx+ebx*8+0x71]
  416814:	sub    al,0x9e
  416816:	gs sub dh,dh
  416819:	cmc    
  41681a:	mov    bl,0x95
  41681c:	jge    0x41683a
  41681e:	jl     0x4167d5
  416820:	fcomp  QWORD PTR [ecx+ebx*1]
  416823:	shl    DWORD PTR [edi+0x42],cl
  416826:	xchg   edx,esi
  416828:	js     0x41688d
  41682a:	test   BYTE PTR [edi-0x6e],0x5
  41682e:	in     al,dx
  41682f:	mov    ebx,0x9c899284
  416834:	dec    ebx
  416835:	cmp    bh,ah
  416837:	xchg   esi,eax
  416838:	lods   eax,DWORD PTR ds:[esi]
  416839:	mov    ebx,0x1ff1d208
  41683e:	push   0x35b982f9
  416843:	mov    ebp,0xa9ac8691
  416848:	int    0x61
  41684a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41684b:	lods   al,BYTE PTR ds:[esi]
  41684c:	jmp    0x4167de
  41684e:	(bad)  
  416850:	push   edx
  416851:	xlat   BYTE PTR cs:[ebx]
  416853:	xor    BYTE PTR [esi],0x20
  416856:	mov    eax,ds:0x83d77885
  41685b:	fimul  DWORD PTR [ecx+0x1d]
  41685e:	jmp    0x4396:0x660cee88
  416865:	xchg   ebp,eax
  416866:	out    dx,eax
  416867:	mov    eax,ds:0x850c212d
  41686c:	push   esp
  41686d:	adc    BYTE PTR [edi],bl
  41686f:	xchg   DWORD PTR ds:0x76340578,eax
  416875:	sar    DWORD PTR [esi+ebx*1+0x55be1bff],0x65
  41687d:	imul   eax,DWORD PTR [esi+edi*8+0x65228607],0x96c6a244
  416888:	aam    0xa8
  41688a:	mov    ch,BYTE PTR [ebp-0x45]
  41688d:	js     0x41682f
  41688f:	jge    0x4168bf
  416891:	or     cl,BYTE PTR [esi+0x23a4360c]
  416897:	mov    ebx,0xdba09db4
  41689c:	mov    ecx,DWORD PTR [esi-0x47]
  41689f:	(bad)  
  4168a0:	xlat   BYTE PTR ds:[ebx]
  4168a1:	out    dx,eax
  4168a2:	push   esi
  4168a3:	xlat   BYTE PTR ds:[ebx]
  4168a4:	repz les ebp,FWORD PTR [edx+0x54246275]
  4168ab:	jnp    0x416906
  4168ad:	aas    
  4168ae:	lods   eax,DWORD PTR ds:[esi]
  4168af:	fstp   DWORD PTR [esi+ebp*2-0x1a]
  4168b3:	inc    esp
  4168b4:	dec    ecx
  4168b5:	cmp    cl,ah
  4168b7:	push   eax
  4168b8:	xchg   esi,esi
  4168ba:	sti    
  4168bb:	xor    bl,BYTE PTR [ebx]
  4168bd:	push   cs
  4168be:	push   0x476b3cec
  4168c3:	call   0x191e:0x37d27308
  4168ca:	pop    edi
  4168cb:	inc    ebx
  4168cc:	test   BYTE PTR [edi-0x75],ch
  4168cf:	int    0xea
  4168d1:	adc    ah,BYTE PTR [ebp-0x28f6014e]
  4168d7:	xor    bl,BYTE PTR [ecx-0x5f]
  4168da:	adc    al,0x71
  4168dc:	mov    ebx,es
  4168de:	jmp    0x8eb8a157
  4168e3:	setne  BYTE PTR [ebp-0x47fe4925]
  4168ea:	fs aam 0x19
  4168ed:	cli    
  4168ee:	jmp    0x27e9:0xd6cc6e3d
  4168f5:	ret    
  4168f6:	cmp    bl,cl
  4168f8:	and    ecx,DWORD PTR [edx]
  4168fa:	dec    DWORD PTR [ebx]
  4168fc:	lds    edx,FWORD PTR [ecx-0x416eca62]
  416902:	cmc    
  416903:	daa    
  416904:	and    ebp,DWORD PTR [esi]
  416906:	in     eax,0xc3
  416908:	test   BYTE PTR [edi-0x642ab5cd],0xf5
  41690f:	mov    dl,0x41
  416911:	repnz (bad) 
  416913:	in     eax,dx
  416914:	bnd ret 
  416916:	add    dh,bl
  416918:	ins    DWORD PTR es:[edi],dx
  416919:	jmp    0x41697f
  41691b:	sub    BYTE PTR [ecx+0x2f],cl
  41691e:	stos   DWORD PTR es:[edi],eax
  41691f:	push   eax
  416920:	psubq  mm5,mm0
  416923:	xchg   esi,eax
  416924:	out    0xb8,al
  416926:	and    cl,BYTE PTR [ecx-0x2b4b9be]
  41692c:	pop    esi
  41692d:	jmp    0xc96815a7
  416932:	scas   eax,DWORD PTR es:[edi]
  416933:	call   FWORD PTR [eax+0x4203e1d1]
  416939:	mov    ah,0x48
  41693b:	jg     0x416955
  41693d:	mov    edi,0xbcd6a88e
  416942:	(bad)  
  416943:	mov    ds:0x3e5f2b80,eax
  416948:	mov    ch,0x8e
  41694a:	cwde   
  41694b:	inc    ecx
  41694c:	jg     0x416909
  41694e:	mov    ?,WORD PTR [esi-0x25f568cf]
  416954:	ds mov al,0x1c
  416957:	jo     0x4169b4
  416959:	or     DWORD PTR [edi+0x795f047d],esi
  41695f:	aaa    
  416960:	cmp    BYTE PTR [edx+0x1d42ac7e],ah
  416966:	popf   
  416967:	mov    cs,WORD PTR [edi]
  416969:	pop    edi
  41696a:	sub    cl,BYTE PTR [ecx+ebp*1]
  41696d:	call   0xd1066c6f
  416972:	(bad)  
  416973:	frstor [edx+0x38]
  416976:	lahf   
  416977:	into   
  416978:	cld    
  416979:	out    0xd2,eax
  41697b:	popa   
  41697c:	inc    esp
  41697d:	enter  0x2c72,0xe1
  416981:	cmp    eax,0xbf09da30
  416986:	add    eax,0x1844e419
  41698b:	inc    esp
  41698c:	jle    0x4169e2
  41698e:	imul   DWORD PTR [edi]
  416990:	adc    eax,0x97400c26
  416995:	leave  
  416996:	fisub  DWORD PTR [ebx]
  416998:	add    edi,DWORD PTR [edi+0x4f5ad64b]
  41699e:	rol    BYTE PTR [esp+esi*2+0x33],0xc3
  4169a3:	mov    ebp,DWORD PTR [eax+0x4bd06ddd]
  4169a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169aa:	icebp  
  4169ab:	mov    esp,eax
  4169ad:	mov    ah,cl
  4169af:	mov    ecx,edx
  4169b1:	xchg   ebp,eax
  4169b2:	bound  ebx,QWORD PTR [ebp-0x67465739]
  4169b8:	xor    BYTE PTR [ebp+0x1f],dh
  4169bb:	pusha  
  4169bc:	sbb    al,0x3e
  4169be:	dec    edi
  4169bf:	pop    edx
  4169c0:	mov    eax,0xdf6aa98d
  4169c5:	pop    ecx
  4169c6:	xchg   edi,eax
  4169c7:	lods   eax,DWORD PTR ds:[esi]
  4169c8:	pop    ebx
  4169c9:	or     dh,0x57
  4169cc:	add    esi,DWORD PTR [edi+0x4fbb8f]
  4169d2:	ins    DWORD PTR es:[edi],dx
  4169d3:	call   0xfce9:0x18227504
  4169da:	je     0x416a42
  4169dc:	jmp    0x416988
  4169de:	pop    ds
  4169df:	and    edx,edx
  4169e1:	repnz outs dx,DWORD PTR ds:[esi]
  4169e3:	das    
  4169e4:	pop    es
  4169e5:	ret    
  4169e6:	jecxz  0x4169d4
  4169e8:	mov    esp,0xb645119b
  4169ed:	mov    ebx,0x9614102e
  4169f2:	and    dl,BYTE PTR gs:[edx-0x55]
  4169f6:	or     al,0xc9
  4169f8:	imul   ebp,DWORD PTR [edi+0x72],0x4d8fb5ab
  4169ff:	push   esi
  416a00:	ficom  WORD PTR [eax]
  416a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a03:	popa   
  416a04:	jo     0x416a0b
  416a06:	(bad)  
  416a07:	lock pop es
  416a09:	test   DWORD PTR [edx+ebx*4-0x3f],eax
  416a0d:	and    ebp,0x5a
  416a10:	enter  0x6ad4,0x1d
  416a14:	xchg   esi,eax
  416a15:	(bad)  
  416a16:	aas    
  416a17:	inc    esp
  416a18:	popa   
  416a19:	daa    
  416a1a:	cvtps2pi mm3,QWORD PTR [edi]
  416a1d:	mov    cs,WORD PTR ss:[ecx-0x2e]
  416a21:	not    al
  416a23:	(bad)  
  416a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a25:	add    DWORD PTR [edi-0x73],ebp
  416a28:	mov    ds:0xf290b22d,eax
  416a2d:	mov    ebp,esp
  416a2f:	push   ecx
  416a30:	mov    eax,ds:0x42bc19c2
  416a35:	dec    eax
  416a36:	adc    DWORD PTR [esi-0xe],eax
  416a39:	inc    edx
  416a3a:	xchg   esp,eax
  416a3b:	(bad)  
  416a3c:	mov    ah,0xb1
  416a3e:	out    dx,eax
  416a3f:	inc    esp
  416a40:	shl    DWORD PTR [ebp+0xa],0x33
  416a44:	inc    esp
  416a45:	mov    cl,0xe5
  416a47:	imul   ecx,DWORD PTR [edx-0x7f],0xffffffd4
  416a4b:	aad    0x5
  416a4d:	lahf   
  416a4e:	lods   al,BYTE PTR ds:[esi]
  416a4f:	addr16 xchg esp,eax
  416a51:	mov    ch,0x4b
  416a53:	or     al,0x24
  416a55:	inc    edi
  416a56:	mov    bl,0x28
  416a58:	add    bh,BYTE PTR [edi+edx*4-0x7efdb1a3]
  416a5f:	jl     0x416a02
  416a61:	stos   BYTE PTR es:[edi],al
  416a62:	pop    ds
  416a63:	cmp    al,0x61
  416a65:	nop    DWORD PTR [ebp-0x4a8a3b4d]
  416a6c:	cmp    eax,0xe741037c
  416a71:	loop   0x416a79
  416a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a74:	jmp    0x416adb
  416a76:	iret   
  416a77:	mov    ch,0xa6
  416a79:	sahf   
  416a7a:	sbb    eax,DWORD PTR [ecx]
  416a7c:	sub    BYTE PTR [ebx+0x4],cl
  416a7f:	daa    
  416a80:	add    ebx,DWORD PTR [esi+0x309a4ddc]
  416a86:	ret    
  416a87:	dec    ebp
  416a88:	ret    0x8d3d
  416a8b:	pop    esp
  416a8c:	cmp    al,0xf4
  416a8e:	xchg   ecx,eax
  416a8f:	repz fmul st(5),st
  416a92:	mov    dl,ch
  416a94:	pop    es
  416a95:	xor    DWORD PTR [ebp+0x7d],ebx
  416a98:	cli    
  416a99:	mov    fs,WORD PTR [eax]
  416a9b:	(bad)  
  416a9c:	imul   DWORD PTR [ecx+0x7fd0bbb]
  416aa2:	mov    esp,0xb7320f59
  416aa7:	pop    esp
  416aa8:	clc    
  416aa9:	js     0x416abc
  416aab:	fidiv  WORD PTR [edx+edi*2-0x2f]
  416aaf:	stos   DWORD PTR es:[edi],eax
  416ab0:	ror    edx,cl
  416ab2:	dec    edi
  416ab3:	dec    esp
  416ab4:	pop    esp
  416ab5:	stos   BYTE PTR es:[edi],al
  416ab6:	lds    ecx,FWORD PTR [esi+0x61]
  416ab9:	mov    eax,0x62489c58
  416abe:	pop    esp
  416abf:	add    BYTE PTR [ecx-0x46995796],0xf9
  416ac6:	mov    cl,0x54
  416ac8:	into   
  416ac9:	mov    edx,esi
  416acb:	or     DWORD PTR [esi-0x730a93a7],ebp
  416ad1:	lods   al,BYTE PTR fs:[esi]
  416ad3:	mov    bh,0x98
  416ad5:	xchg   esi,eax
  416ad6:	cs and ebp,eax
  416ad9:	aad    0x36
  416adb:	test   BYTE PTR [ebx-0x76],0x84
  416adf:	mov    ss,WORD PTR [edi-0x36]
  416ae2:	cs sub al,bl
  416ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ae6:	mov    eax,0x8e6aeb88
  416aeb:	clc    
  416aec:	mov    ecx,DWORD PTR [edi+0x561617ab]
  416af2:	sub    ax,0xf80e
  416af6:	fsub   st,st(3)
  416af8:	fwait
  416af9:	jno    0x416ac4
  416afb:	daa    
  416afc:	add    DWORD PTR [esi+edi*8],edx
  416aff:	mov    bh,0x51
  416b01:	shl    ch,cl
  416b03:	jmp    0x416ac4
  416b05:	push   ebp
  416b07:	jns    0x416b6c
  416b09:	das    
  416b0a:	jmp    0x53f1:0x508631ab
  416b11:	push   ss
  416b12:	adc    BYTE PTR [edx-0x1c18f9f9],ah
  416b18:	fistp  DWORD PTR [ebx+eiz*2]
  416b1b:	or     DWORD PTR [ecx],eax
  416b1d:	xchg   ebp,eax
  416b1e:	das    
  416b1f:	xchg   ecx,eax
  416b20:	inc    ebx
  416b21:	add    DWORD PTR [eax-0x44],0xffffffdf
  416b25:	sbb    al,0xf6
  416b27:	add    al,0xd5
  416b29:	mov    esi,0x6b2448e
  416b2e:	mov    al,0x61
  416b30:	xchg   DWORD PTR [esi+0x18],esp
  416b33:	cmp    DWORD PTR [ecx],eax
  416b35:	mov    ebp,ebp
  416b37:	jp     0x416b9b
  416b39:	not    dh
  416b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b3c:	sbb    eax,0x426da62b
  416b41:	js     0x416b22
  416b43:	cmp    BYTE PTR [edi*2-0x7ec7f634],ch
  416b4a:	adc    DWORD PTR [edi-0x44a3f977],ebp
  416b50:	ja     0x416b96
  416b52:	lock cmp ah,BYTE PTR [ecx-0x5eecc763]
  416b59:	xchg   edi,eax
  416b5a:	and    dl,BYTE PTR [eax+esi*2]
  416b5d:	clc    
  416b5e:	loop   0x416b1b
  416b60:	mov    eax,edx
  416b62:	fs push ds
  416b64:	cs jmp 0x19d7f3f9
  416b6a:	sbb    ebx,DWORD PTR [eax-0x6e6b6ed6]
  416b70:	mov    bh,BYTE PTR [edi+0x1a7d5dd2]
  416b76:	jecxz  0x416bb9
  416b78:	mov    esp,DWORD PTR [eax-0x49894cc0]
  416b7e:	(bad)  
  416b7f:	call   0xfd977bbe
  416b84:	push   0x8be38be5
  416b89:	and    eax,0xe296fe15
  416b8e:	add    cl,BYTE PTR [edx+0x5d19eda5]
  416b94:	int3   
  416b95:	je     0x416bf2
  416b97:	cmp    BYTE PTR [eax+eax*1+0x113d92aa],dh
  416b9e:	outs   dx,BYTE PTR ds:[esi]
  416b9f:	mov    edi,0x35bbfae3
  416ba4:	fbstp  TBYTE PTR [esi]
  416ba6:	jg     0x416b40
  416ba8:	cs sbb edx,ebp
  416bab:	xchg   ebx,eax
  416bac:	das    
  416bad:	lea    eax,[edi-0x1a]
  416bb0:	js     0x416b67
  416bb2:	dec    esp
  416bb3:	jne    0x416bc1
  416bb5:	push   edx
  416bb6:	mov    WORD PTR [esi-0x407b4d58],?
  416bbc:	push   eax
  416bbd:	ror    BYTE PTR [esi],0xfe
  416bc0:	xor    ebx,DWORD PTR [ecx+0x322fe1b7]
  416bc6:	sub    al,0xd1
  416bc8:	mov    ds:0xe039e5f3,eax
  416bcd:	push   ss
  416bce:	(bad)  
  416bcf:	mov    ds:0xed011295,eax
  416bd4:	mov    esp,0xf353a28d
  416bd9:	push   0xffffffeb
  416bdb:	add    edi,DWORD PTR [eax-0x3e]
  416bde:	xor    DWORD PTR [edi+0x33],0x95618c82
  416be5:	fnstcw WORD PTR [ebp-0x4f]
  416be8:	ins    DWORD PTR es:[edi],dx
  416be9:	test   BYTE PTR [esi+0x4a],0x57
  416bed:	je     0x416ba8
  416bef:	jbe    0x416c07
  416bf1:	add    eax,DWORD PTR [ebp+0x2e]
  416bf4:	fisttp DWORD PTR [esp+eax*4-0x257c7244]
  416bfb:	pop    esi
  416bfc:	add    eax,edx
  416bfe:	and    DWORD PTR [edi+0x4a08313],edi
  416c04:	cmp    DWORD PTR [edx],esi
  416c06:	imul   eax,DWORD PTR [eax-0x80],0x2c62ecbb
  416c0d:	inc    esi
  416c0e:	rcr    DWORD PTR [edi+0x7],0x35
  416c12:	in     eax,dx
  416c13:	icebp  
  416c14:	ret    0xdfb4
  416c17:	or     al,0x7b
  416c19:	push   esp
  416c1a:	mov    esp,0xeaff1e9c
  416c1f:	loop   0x416c91
  416c21:	test   al,0xef
  416c23:	shl    BYTE PTR [edx],cl
  416c25:	(bad)  
  416c26:	jmp    0x354c:0x5c9e7ee2
  416c2d:	add    ch,al
  416c2f:	cs inc edi
  416c31:	ins    BYTE PTR es:[edi],dx
  416c32:	pop    ebx
  416c33:	jg     0x416c47
  416c35:	psubq  mm2,mm3
  416c38:	dec    edi
  416c39:	push   ecx
  416c3a:	and    ch,BYTE PTR [ebx]
  416c3c:	mov    esp,0x49b75c7b
  416c41:	shr    BYTE PTR [ebx+0xbdecd22],0xcf
  416c48:	and    esi,esi
  416c4a:	(bad)  
  416c4c:	pop    edx
  416c4d:	out    0xc9,eax
  416c4f:	das    
  416c50:	xchg   ebx,eax
  416c51:	lods   eax,DWORD PTR ds:[esi]
  416c52:	ret    0x4ae7
  416c55:	mov    cl,0x4e
  416c57:	cwde   
  416c58:	mov    ebp,0x7bd5fd9
  416c5d:	jo     0x416cc8
  416c5f:	in     al,0x9d
  416c61:	inc    eax
  416c62:	xchg   ebx,eax
  416c63:	fnsave [esi]
  416c65:	icebp  
  416c66:	xor    eax,0x6cb7ff7f
  416c6b:	lds    ebp,FWORD PTR [edi]
  416c6d:	sub    al,0x81
  416c6f:	sbb    al,0x3a
  416c71:	cmp    BYTE PTR [edi-0x7],bl
  416c74:	mov    BYTE PTR [edx-0x457c8f12],cl
  416c7a:	fmul   QWORD PTR [ecx-0xe]
  416c7d:	repz in eax,dx
  416c7f:	and    eax,0x9e5926e8
  416c84:	sub    eax,0x3d4c7b79
  416c89:	mov    eax,ds:0x83c7f567
  416c8e:	fidivr WORD PTR [edi+0x5497fce9]
  416c94:	cwde   
  416c95:	(bad)  
  416c96:	sub    DWORD PTR [esp+esi*1],0x35443bd6
  416c9d:	dec    ebx
  416c9e:	add    eax,0xc94f0e5f
  416ca3:	or     al,0xc8
  416ca5:	sbb    al,0x7f
  416ca7:	jecxz  0x416c7a
  416ca9:	cdq    
  416caa:	sbb    DWORD PTR [ecx],0xc16ecdee
  416cb0:	push   edx
  416cb1:	jo     0x416c89
  416cb3:	fist   DWORD PTR [edx]
  416cb5:	mov    BYTE PTR ds:0xa333afba,dh
  416cbb:	arpl   WORD PTR [ebx-0x14273a58],di
  416cc1:	loopne 0x416c5d
  416cc3:	pushf  
  416cc4:	mov    ch,0x99
  416cc6:	add    eax,0x946969eb
  416ccb:	push   ebp
  416ccc:	rcr    esp,0xeb
  416ccf:	ds inc ecx
  416cd1:	jl     0x416cc2
  416cd3:	mov    esi,0xdb38edaa
  416cd8:	daa    
  416cd9:	ja     0x416ce2
  416cdb:	out    0xc4,eax
  416cdd:	ds into 
  416cdf:	mov    cl,0xd9
  416ce1:	inc    ebp
  416ce2:	int3   
  416ce3:	push   0x74
  416ce5:	pushf  
  416ce6:	xchg   ebp,eax
  416ce7:	bound  ebx,QWORD PTR [ebp-0x232f1e1]
  416ced:	xor    ebp,DWORD PTR [ebp-0x3c]
  416cf0:	mov    al,ds:0xda64e32e
  416cf5:	cwde   
  416cf6:	jle    0x416cb2
  416cf8:	add    DWORD PTR [esi-0x5c730f0c],esi
  416cfe:	call   0xa99a:0x51a11ded
  416d05:	clts   
  416d07:	lahf   
  416d08:	sub    eax,0x5ed6610c
  416d0d:	fdecstp 
  416d0f:	stc    
  416d10:	ret    
  416d11:	pop    es
  416d12:	dec    edx
  416d13:	jecxz  0x416d5a
  416d15:	(bad)  
  416d16:	arpl   WORD PTR [edi-0x2dcc679b],ax
  416d1c:	cld    
  416d1d:	mov    bl,0x7
  416d1f:	xchg   ebp,edx
  416d21:	xor    DWORD PTR ds:0x3210c665,ebx
  416d27:	jmp    0xff11:0xb4c21622
  416d2e:	xor    WORD PTR [ebx-0x623746aa],bx
  416d35:	icebp  
  416d36:	xor    al,0x95
  416d38:	xor    eax,0xc3d99aae
  416d3d:	fucomp st(2)
  416d3f:	(bad)  
  416d40:	and    al,0x79
  416d42:	pop    ds
  416d43:	fst    DWORD PTR [ebp-0x7f]
  416d46:	mov    ecx,0x71340ad8
  416d4b:	and    DWORD PTR [edx],ecx
  416d4d:	xchg   ecx,eax
  416d4e:	sbb    al,0x6c
  416d50:	push   eax
  416d51:	push   ds
  416d52:	enter  0xbaaf,0x4a
  416d56:	jo     0x416db1
  416d58:	lods   eax,DWORD PTR ds:[esi]
  416d59:	mov    eax,0x496ad3cc
  416d5e:	hlt    
  416d5f:	fwait
  416d60:	aaa    
  416d61:	lea    eax,[ebx-0x1067a7e3]
  416d67:	rdtsc  
  416d69:	pop    esp
  416d6a:	jb     0x416dc6
  416d6c:	fiadd  WORD PTR ds:0x321f047
  416d72:	jmp    0x76b0:0x90281fa9
  416d79:	or     DWORD PTR [eax],ebp
  416d7b:	test   al,0x1c
  416d7d:	mov    ebp,0xf4d47605
  416d82:	mul    BYTE PTR [edi-0x5f]
  416d85:	pushf  
  416d86:	ret    0xd17d
  416d89:	add    eax,0x39a83f9b
  416d8e:	dec    eax
  416d8f:	dec    ebp
  416d90:	mov    DWORD PTR [edx-0x58],esp
  416d93:	imul   edi,DWORD PTR [esi-0x5768a2bf],0x2f
  416d9a:	sub    ebp,DWORD PTR [ebp+ebx*1-0x4b]
  416d9e:	out    0xef,eax
  416da0:	xchg   ebx,eax
  416da1:	ret    
  416da2:	mov    cl,0x2f
  416da4:	dec    ebx
  416da5:	rol    eax,cl
  416da7:	aas    
  416da8:	or     BYTE PTR [esi+0x1e],cl
  416dab:	rcr    BYTE PTR [ebp+0x3b4b543b],0x7
  416db2:	push   ebp
  416db3:	add    eax,0x394c06b6
  416db8:	js     0x416d89
  416dba:	int3   
  416dbb:	or     eax,0x54a32541
  416dc0:	in     al,dx
  416dc1:	cs rol al,cl
  416dc4:	pop    ebx
  416dc5:	xchg   edx,eax
  416dc6:	mov    al,0xd2
  416dc8:	jl     0x416de0
  416dca:	in     al,0xcb
  416dcc:	adc    bh,ah
  416dce:	call   0x3f71:0xc9e3246b
  416dd5:	xor    BYTE PTR [edx],bh
  416dd7:	js     0x416dc7
  416dd9:	arpl   WORD PTR [edi],si
  416ddb:	rcr    BYTE PTR [esi],1
  416ddd:	jno    0x416d8e
  416ddf:	and    al,0x6d
  416de1:	jmp    0x416dd6
  416de3:	aad    0x5c
  416de5:	add    eax,0x256bdd9d
  416dea:	or     al,0x1d
  416dec:	jmp    0x416ddb
  416dee:	pop    esp
  416def:	fsubr  st,st(4)
  416df1:	fidivr DWORD PTR ds:0xaf396908
  416df7:	dec    ebp
  416df8:	lahf   
  416df9:	xchg   edx,eax
  416dfa:	scas   al,BYTE PTR es:[edi]
  416dfb:	jbe    0x416d9e
  416dfd:	dec    edi
  416dfe:	mov    edi,0x8826b050
  416e03:	frstor [eax]
  416e05:	(bad)  
  416e06:	into   
  416e07:	dec    esi
  416e08:	cmp    al,0x62
  416e0a:	pusha  
  416e0b:	or     ebp,DWORD PTR [ebx+eax*4+0x1692ebeb]
  416e12:	sub    ch,ah
  416e14:	and    eax,0x4b8f7961
  416e19:	mov    DWORD PTR [esi],esi
  416e1b:	shr    BYTE PTR [ecx],cl
  416e1d:	push   ebx
  416e1e:	inc    eax
  416e1f:	pop    ebx
  416e20:	(bad)  
  416e21:	retf   
  416e22:	push   ss
  416e23:	aam    0x4b
  416e25:	cmp    eax,0x7bad36d6
  416e2a:	paddsw mm7,QWORD PTR [ebx]
  416e2d:	sub    edx,DWORD PTR ds:0xd93939
  416e33:	jmp    0x416eaa
  416e35:	push   esp
  416e36:	pop    ss
  416e37:	mov    ebx,0x3c58c214
  416e3c:	inc    esi
  416e3d:	add    DWORD PTR [eax-0x3c],ebp
  416e40:	sub    esi,DWORD PTR [edx+0xbc3c45f]
  416e46:	mov    esp,DWORD PTR [eax-0xb]
  416e49:	sbb    eax,0xb4ca5b4a
  416e4e:	dec    ebx
  416e4f:	push   eax
  416e50:	mov    DWORD PTR [esi],ebp
  416e52:	pop    ebp
  416e53:	push   0x7971a498
  416e58:	lahf   
  416e59:	ror    DWORD PTR [ecx+0x37c2fc20],1
  416e5f:	sti    
  416e60:	in     eax,dx
  416e61:	xchg   DWORD PTR [ebp+0xde6e298],esi
  416e67:	add    bh,BYTE PTR [ebp-0x13]
  416e6a:	lods   eax,DWORD PTR ds:[esi]
  416e6b:	aaa    
  416e6c:	es xchg esp,eax
  416e6e:	adc    BYTE PTR [eax],cl
  416e70:	push   ecx
  416e71:	jecxz  0x416e8a
  416e73:	loope  0x416e4c
  416e75:	pop    ds
  416e76:	inc    edx
  416e77:	mov    eax,0xb4b34e9d
  416e7c:	pushf  
  416e7d:	or     DWORD PTR [edi],edx
  416e7f:	inc    ebp
  416e80:	cdq    
  416e81:	and    eax,0xd90fdab2
  416e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e87:	mov    WORD PTR [ecx+0x4],cs
  416e8a:	or     BYTE PTR [esi-0x11],bh
  416e8d:	stos   BYTE PTR es:[edi],al
  416e8e:	fmulp  st(4),st
  416e90:	push   edx
  416e91:	inc    edx
  416e92:	mov    bh,0xff
  416e94:	jb     0x416ebd
  416e96:	dec    esp
  416e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e98:	out    dx,eax
  416e99:	pop    DWORD PTR [ecx+0x174ffea9]
  416e9f:	sub    DWORD PTR [ebx+0xd66dd86],ebx
  416ea5:	sbb    al,BYTE PTR [eax+0x20]
  416ea8:	xlat   BYTE PTR ds:[ebx]
  416ea9:	xchg   ecx,eax
  416eaa:	jne    0x416ecc
  416eac:	push   ebx
  416ead:	shr    DWORD PTR [ebp+ecx*8+0x6ea45f3c],cl
  416eb4:	es cdq 
  416eb6:	push   ss
  416eb7:	in     eax,dx
  416eb8:	es retf 
  416eba:	inc    esi
  416ebb:	push   esp
  416ebc:	or     eax,0xec03f317
  416ec1:	cmc    
  416ec2:	scas   eax,DWORD PTR es:[edi]
  416ec3:	repnz rcr ecx,0x74
  416ec7:	and    al,0xf5
  416ec9:	iret   
  416eca:	dec    ebx
  416ecb:	nop
  416ecc:	jb     0x416ea1
  416ece:	mov    ?,WORD PTR ds:0x9fd3712f
  416ed4:	sbb    eax,0x6a1c5c62
  416ed9:	ins    BYTE PTR es:[edi],dx
  416eda:	lock jecxz 0x416ecf
  416edd:	sub    al,0x42
  416edf:	pop    es
  416ee0:	xchg   ebx,eax
  416ee1:	xor    bl,BYTE PTR [ecx]
  416ee3:	in     eax,dx
  416ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ee5:	sub    eax,0x3a06f699
  416eea:	popf   
  416eeb:	sub    dl,cl
  416eed:	mov    al,ds:0x51d7c771
  416ef2:	xchg   ebp,eax
  416ef3:	and    DWORD PTR [ebx],esp
  416ef5:	push   es
  416ef6:	dec    edx
  416ef7:	xchg   edi,eax
  416ef8:	aad    0x88
  416efa:	jg     0x416f1c
  416efc:	dec    edx
  416efd:	in     eax,dx
  416efe:	push   edx
  416eff:	mov    al,ds:0x45abb35a
  416f04:	into   
  416f05:	and    dl,ch
  416f07:	dec    ebp
  416f08:	in     al,0x6c
  416f0a:	xchg   esp,eax
  416f0b:	sub    DWORD PTR [edx-0x575ceea1],esi
  416f11:	push   cs
  416f12:	dec    edx
  416f13:	jb     0x416eb5
  416f15:	fwait
  416f16:	ins    DWORD PTR es:[edi],dx
  416f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f18:	aaa    
  416f19:	fisub  WORD PTR [ebp-0x31]
  416f1c:	and    al,0xae
  416f1e:	std    
  416f1f:	mov    edx,0xc482a9fd
  416f24:	and    DWORD PTR [ebp+0x49f447e4],ebp
  416f2a:	fmulp  st(6),st
  416f2c:	inc    ebp
  416f2d:	jmp    0x7c34:0x1888bb01
  416f34:	repz adc ebx,eax
  416f37:	push   edi
  416f38:	sub    al,0x98
  416f3a:	jle    0x416faf
  416f3c:	stos   BYTE PTR es:[edi],al
  416f3d:	cmp    esp,DWORD PTR [edx+0x1bcb796a]
  416f43:	push   edx
  416f44:	ins    DWORD PTR es:[edi],dx
  416f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f46:	pop    ss
  416f47:	dec    edi
  416f48:	xor    eax,0x18e98342
  416f4d:	das    
  416f4e:	lock dec esi
  416f50:	xchg   edx,eax
  416f51:	cli    
  416f52:	enter  0xc674,0x4b
  416f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f57:	les    ebp,FWORD PTR [edi+ecx*4]
  416f5a:	out    0x51,al
  416f5c:	mov    al,BYTE PTR [edi+0x4c]
  416f5f:	inc    ebp
  416f60:	lahf   
  416f61:	in     al,dx
  416f62:	mov    esp,0x64de041
  416f67:	push   ebx
  416f68:	scas   al,BYTE PTR es:[edi]
  416f69:	fdivp  st(6),st
  416f6b:	jle    0x416f59
  416f6d:	lea    edx,[edx+0x46c0dcae]
  416f73:	stos   BYTE PTR es:[edi],al
  416f74:	push   eax
  416f75:	sbb    al,0xdd
  416f77:	inc    eax
  416f78:	imul   DWORD PTR [ecx+0x73]
  416f7b:	mov    esp,0xa260b555
  416f80:	mov    ah,0xc
  416f82:	das    
  416f83:	add    ah,cl
  416f85:	ins    BYTE PTR es:[edi],dx
  416f86:	mov    ds:0x1666f706,eax
  416f8b:	add    al,0x27
  416f8d:	inc    edi
  416f8e:	mov    esi,0x3d9e7421
  416f93:	and    al,0x83
  416f95:	pop    eax
  416f96:	mov    bh,0x2e
  416f98:	mov    bh,0xd3
  416f9a:	inc    ebp
  416f9b:	push   ebx
  416f9c:	push   ss
  416f9d:	lods   al,BYTE PTR ds:[esi]
  416f9e:	cwde   
  416f9f:	mov    ecx,0xc16af098
  416fa4:	jns    0x416f3d
  416fa6:	pop    eax
  416fa7:	bndldx bnd3,[ebx]
  416faa:	cdq    
  416fab:	mov    edx,0xe6f4234a
  416fb0:	test   cl,ah
  416fb2:	push   0x7f0198f2
  416fb7:	push   ebx
  416fb8:	push   ds
  416fb9:	call   0xb1db04f2
  416fbe:	inc    esi
  416fbf:	pop    ecx
  416fc0:	or     DWORD PTR [ebx+0x5b],ecx
  416fc3:	or     al,0x23
  416fc5:	dec    edx
  416fc6:	ror    DWORD PTR [eax],0xff
  416fc9:	push   ss
  416fca:	mov    esp,0x72fb8d5f
  416fcf:	dec    eax
  416fd0:	aad    0x9e
  416fd2:	sub    esi,eax
  416fd4:	in     eax,dx
  416fd5:	jns    0x416fe4
  416fd7:	jbe    0x416ffc
  416fd9:	pop    esp
  416fda:	div    esi
  416fdc:	cli    
  416fdd:	inc    esi
  416fde:	inc    eax
  416fdf:	ss and eax,0xbac4c8f8
  416fe5:	inc    BYTE PTR [ecx-0x131acf9b]
  416feb:	in     al,0xa4
  416fed:	dec    ecx
  416fee:	xchg   BYTE PTR [ecx-0x68be75d1],ah
  416ff4:	out    dx,eax
  416ff5:	xor    DWORD PTR [esi+0x48],0x9
  416ff9:	stos   BYTE PTR es:[edi],al
  416ffa:	push   esi
  416ffb:	cwde   
  416ffc:	push   ss
  416ffd:	shl    DWORD PTR [ecx],0x56
  417000:	inc    esi
  417001:	xchg   edx,eax
  417002:	inc    ecx
  417003:	push   0x3c780ec4
  417008:	arpl   WORD PTR [edi-0x63],di
  41700b:	dec    esp
  41700c:	pop    ecx
  41700d:	push   cs
  41700e:	sbb    al,0xec
  417010:	jbe    0x417074
  417012:	adc    eax,DWORD PTR [eax+0x5d595dde]
  417018:	out    dx,eax
  417019:	retf   0x1a8f
  41701c:	cs dec esi
  41701e:	xrelease mov DWORD PTR [esi+0x404bb514],edi
  417025:	jae    0x417008
  417027:	cwde   
  417028:	aad    0xd9
  41702a:	icebp  
  41702b:	mov    esp,esi
  41702d:	mov    cl,0xb9
  41702f:	pop    eax
  417030:	push   ebx
  417031:	jbe    0x417054
  417033:	pop    ebx
  417034:	inc    ebp
  417035:	lahf   
  417036:	(bad)  
  417037:	sbb    al,0x86
  417039:	cmp    al,0x4d
  41703b:	xchg   edi,eax
  41703c:	lldt   WORD PTR [esi+0x6f]
  417040:	push   ecx
  417041:	inc    eax
  417042:	mov    ah,0x94
  417044:	mov    dh,0xc2
  417046:	xor    BYTE PTR [edx],0xb8
  417049:	dec    ecx
  41704a:	mov    edi,0x35090a20
  41704f:	aad    0x8a
  417051:	xchg   esi,eax
  417052:	stos   DWORD PTR es:[edi],eax
  417053:	cmp    esp,DWORD PTR [ecx-0x287990e1]
  417059:	int3   
  41705a:	jne    0x417006
  41705c:	sub    eax,0x9550e0f6
  417061:	sbb    al,0xee
  417063:	out    dx,al
  417064:	cdq    
  417065:	nop
  417066:	(bad)  
  417067:	in     al,dx
  417068:	rcl    edi,cl
  41706a:	fs aaa 
  41706c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41706d:	(bad)  
  41706e:	and    DWORD PTR [esi],ebx
  417070:	pop    edx
  417071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417072:	jbe    0x4170e9
  417074:	hlt    
  417075:	and    edi,DWORD PTR [edi]
  417077:	pop    ecx
  417078:	pop    esp
  417079:	test   BYTE PTR [ebx-0x6b],ch
  41707c:	jp     0x417059
  41707e:	cwde   
  41707f:	out    0x22,al
  417081:	out    dx,eax
  417082:	xor    bl,ah
  417084:	cmp    eax,0xb083c1bc
  417089:	ins    BYTE PTR es:[edi],dx
  41708a:	push   edx
  41708b:	cmp    BYTE PTR [edx+ebx*1-0x1d],bl
  41708f:	shl    dh,cl
  417091:	dec    edi
  417092:	lods   al,BYTE PTR ds:[esi]
  417093:	xchg   esi,eax
  417094:	je     0x4170e0
  417096:	inc    eax
  417097:	jl     0x417035
  417099:	jg     0x417071
  41709b:	shl    BYTE PTR ds:0xcb8ded94,cl
  4170a1:	ret    
  4170a2:	jne    0x417085
  4170a4:	loop   0x4170cd
  4170a6:	and    eax,DWORD PTR [edx-0x4fa486b3]
  4170ac:	out    0xf3,eax
  4170ae:	cmc    
  4170af:	mov    cl,0xc7
  4170b1:	jg     0x4170f5
  4170b3:	mov    dl,0xf4
  4170b5:	shr    ch,0x11
  4170b8:	popa   
  4170b9:	xor    cl,BYTE PTR [ebp+0x34]
  4170bc:	jp     0x417072
  4170be:	pop    ds
  4170bf:	scas   eax,DWORD PTR es:[edi]
  4170c0:	cmp    DWORD PTR [esp+eax*1+0x47d4c9ff],edx
  4170c7:	dec    ebx
  4170c8:	pop    ebx
  4170c9:	rcr    BYTE PTR [esi+0x66],1
  4170cc:	fistp  WORD PTR [eax+0x61]
  4170cf:	scas   al,BYTE PTR es:[edi]
  4170d0:	add    edi,0xaf471f2c
  4170d6:	sbb    BYTE PTR [edi+edx*8],dh
  4170d9:	mov    esi,0xd90d6985
  4170de:	and    BYTE PTR [edx+eax*4],bh
  4170e1:	loop   0x417077
  4170e3:	cli    
  4170e4:	adc    al,0xca
  4170e6:	ds pop ds
  4170e8:	jae    0x417113
  4170ea:	fmulp  st(2),st
  4170ec:	dec    edx
  4170ed:	ss jecxz 0x4170dc
  4170f0:	mov    eax,ds:0x3471c879
  4170f5:	xchg   dl,bh
  4170f7:	(bad)  
  4170f8:	pop    ds
  4170f9:	popf   
  4170fa:	and    edx,DWORD PTR [eax+eiz*4-0x5b]
  4170fe:	sbb    DWORD PTR [esp+eiz*8-0x766dffd8],edi
  417105:	jbe    0x417109
  417107:	cmp    ebp,DWORD PTR [edx-0x3cf81f6f]
  41710d:	jb     0x4170a6
  41710f:	push   esp
  417110:	cs sub ch,0xee
  417114:	sbb    edi,DWORD PTR [esi-0x4d83f2bd]
  41711a:	sub    DWORD PTR [eax+eax*8],0xffffffa8
  41711e:	mov    ds:0xbc849161,al
  417123:	mov    BYTE PTR [esi-0x71],al
  417126:	jl     0x41718c
  417128:	ror    DWORD PTR [ecx-0x29],cl
  41712b:	xchg   DWORD PTR [eax-0xb525f22],edx
  417131:	mov    edx,0xdf5abea9
  417136:	loope  0x417164
  417138:	push   cs
  417139:	dec    ebp
  41713a:	aad    0xaa
  41713c:	jnp    0x4171a2
  41713e:	mov    ebx,0x95ba34bc
  417143:	pop    ds
  417144:	mov    ebp,DWORD PTR [edx+0x9568c26]
  41714a:	mov    al,0xac
  41714c:	js     0x41716c
  41714e:	ret    0xf8e6
  417151:	js     0x41710e
  417153:	imul   ebp,DWORD PTR [esi],0xfffffff1
  417156:	xchg   BYTE PTR es:[esi],ch
  417159:	mov    WORD PTR [edx],fs
  41715b:	outs   dx,DWORD PTR ds:[esi]
  41715c:	test   BYTE PTR [edx-0x6a5a6e30],0x84
  417163:	int    0x15
  417165:	mov    edx,0x350e9b04
  41716a:	jmp    0x2a19:0xdef3812f
  417171:	call   0x3bca8038
  417176:	call   0x1825:0x2703a84f
  41717d:	test   BYTE PTR [ecx],dl
  41717f:	aaa    
  417180:	mov    ah,0xea
  417182:	sbb    DWORD PTR [ecx],esi
  417184:	sbb    ch,ah
  417186:	mov    eax,ds:0xae271274
  41718b:	push   ebx
  41718c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41718d:	sub    ebp,edx
  41718f:	(bad)  
  417190:	idiv   edx
  417192:	xchg   ecx,eax
  417193:	inc    esp
  417194:	cmp    DWORD PTR [esi-0x12],0x7313e3a4
  41719b:	call   0x5f7d:0x1c8a880e
  4171a2:	popf   
  4171a3:	sbb    edi,DWORD PTR [edi-0x64]
  4171a6:	inc    ebp
  4171a7:	dec    ebx
  4171a8:	call   0xec83:0xfcea00d1
  4171af:	mov    es,ebx
  4171b1:	mov    edi,0x6cd03b42
  4171b6:	in     eax,dx
  4171b7:	cwde   
  4171b8:	mov    eax,ds:0x9209ec62
  4171bd:	pop    ebx
  4171be:	xchg   edx,eax
  4171bf:	dec    esi
  4171c0:	pop    edi
  4171c1:	push   cs
  4171c2:	rcr    BYTE PTR [ecx+0x5487d125],0x3d
  4171c9:	test   BYTE PTR [eax-0x4fe11ca6],cl
  4171cf:	sub    edi,DWORD PTR [ebp+0xde4f585]
  4171d5:	out    dx,eax
  4171d6:	fstp   TBYTE PTR [esi+0x1d1f31c2]
  4171dc:	(bad)  
  4171dd:	cdq    
  4171de:	mov    ?,edx
  4171e0:	les    esi,FWORD PTR [ecx]
  4171e2:	jg     0x4171ad
  4171e4:	sahf   
  4171e5:	(bad)  
  4171e6:	fwait
  4171e7:	je     0x4171ab
  4171e9:	or     cl,BYTE PTR [edi+0x65757393]
  4171ef:	mov    ch,0x6
  4171f1:	ins    BYTE PTR es:[edi],dx
  4171f2:	cwde   
  4171f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171f4:	sub    al,0xde
  4171f6:	xlat   BYTE PTR ds:[ebx]
  4171f7:	adc    BYTE PTR [edx-0x34b16ed7],0xca
  4171fe:	(bad)  
  4171ff:	es popf 
  417201:	adc    ebx,ecx
  417203:	xchg   ebp,eax
  417204:	sbb    eax,0x2c832576
  417209:	inc    eax
  41720a:	fidivr WORD PTR [edx]
  41720c:	(bad)  
  41720d:	(bad)  
  41720f:	adc    ah,BYTE PTR [edx]
  417211:	sub    al,0x11
  417213:	imul   edi,DWORD PTR [edx+0xdc27627],0x39d08b
  41721d:	data16 fisub DWORD PTR ds:0xf16e5a10
  417224:	mov    eax,ds:0xcefaadf9
  417229:	out    0x49,eax
  41722b:	shl    DWORD PTR [ecx+0x7b],0x3
  41722f:	dec    esp
  417230:	cli    
  417231:	adc    dl,BYTE PTR [edi-0x2d6fdb7f]
  417237:	cmp    cl,BYTE PTR [edi-0x3f]
  41723a:	rcr    DWORD PTR [ebx+0x25],1
  41723d:	dec    esp
  41723e:	fistp  QWORD PTR [ecx+0x458cd7b2]
  417244:	push   esp
  417245:	in     al,dx
  417246:	push   ss
  417247:	mov    dl,0xec
  417249:	push   esi
  41724a:	jno    0x417246
  41724c:	sar    BYTE PTR [ecx-0x78],cl
  41724f:	iret   
  417250:	js     0x41727d
  417252:	mov    ch,0x91
  417254:	pop    eax
  417255:	mov    ebp,0x5960dd34
  41725a:	push   eax
  41725b:	or     BYTE PTR [ebx-0x1f],0xa5
  41725f:	add    BYTE PTR ds:0x86607de9,dh
  417265:	pop    edi
  417266:	cmp    ebp,eax
  417268:	ins    BYTE PTR es:[edi],dx
  417269:	fidivr DWORD PTR [eax+eax*1]
  41726c:	leave  
  41726d:	enter  0x57d1,0x42
  417271:	dec    edi
  417272:	mov    dl,0xf0
  417274:	jo     0x4172bf
  417276:	xor    DWORD PTR [edi],ecx
  417278:	pop    ecx
  417279:	pop    esi
  41727a:	pandn  mm7,QWORD PTR cs:[ebx]
  41727e:	cs scas al,BYTE PTR es:[edi]
  417280:	fwait
  417281:	ja     0x41724c
  417283:	(bad)  
  417284:	(bad)  
  417285:	outs   dx,BYTE PTR ds:[esi]
  417286:	mov    ecx,0xf486e55a
  41728b:	jle    0x4172bc
  41728d:	fimul  WORD PTR [esi+0x1e55fd67]
  417293:	pop    edi
  417294:	loop   0x4172b4
  417296:	lods   eax,DWORD PTR ds:[esi]
  417297:	inc    ebx
  417298:	push   edi
  417299:	jl     0x4172e4
  41729b:	cli    
  41729c:	fld    QWORD PTR [ebx]
  41729e:	jns    0x41726a
  4172a0:	or     DWORD PTR [esi-0x78],eax
  4172a3:	loope  0x41722a
  4172a5:	leave  
  4172a6:	int3   
  4172a7:	sbb    esi,0xffffffc8
  4172aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ab:	sub    bl,bl
  4172ad:	je     0x41725a
  4172af:	inc    edi
  4172b0:	mov    ebx,0x9bd73907
  4172b5:	outs   dx,DWORD PTR ds:[esi]
  4172b6:	loop   0x4172e2
  4172b8:	inc    esi
  4172b9:	gs pop edx
  4172bb:	or     eax,0x3641a0f3
  4172c0:	rcr    BYTE PTR [eax+0x34fa3f1e],1
  4172c6:	inc    esp
  4172c7:	pushf  
  4172c8:	xchg   ebx,eax
  4172c9:	div    DWORD PTR [esi-0x64fb4d29]
  4172cf:	out    0x3c,al
  4172d1:	loop   0x417346
  4172d3:	ja     0x41725f
  4172d5:	aas    
  4172d6:	mov    BYTE PTR [ecx+0x6e06bcfe],ch
  4172dc:	push   ebp
  4172dd:	dec    ecx
  4172de:	push   cs
  4172df:	aaa    
  4172e0:	or     ebx,DWORD PTR [ecx-0xe0956a]
  4172e6:	jge    0x4172aa
  4172e8:	sbb    DWORD PTR [esi+0x591539d2],eax
  4172ee:	mov    fs,WORD PTR [edi]
  4172f0:	xor    BYTE PTR [ebx-0x7c0ec71],al
  4172f6:	loope  0x4172dc
  4172f8:	icebp  
  4172f9:	call   0x585993bd
  4172fe:	lock pop ds
  417300:	je     0x4172f1
  417302:	test   al,0x4b
  417304:	(bad)  
  417305:	aas    
  417306:	ins    DWORD PTR es:[edi],dx
  417307:	jge    0x417300
  417309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41730a:	aas    
  41730b:	push   ecx
  41730c:	inc    esi
  41730d:	repz add eax,0x4ea7c957
  417313:	cmp    edi,DWORD PTR [ebp-0x3a66ee35]
  417319:	frstor [ebp+0x46312eb8]
  41731f:	pusha  
  417320:	jne    0x4172d3
  417322:	(bad)  
  417323:	sub    eax,esp
  417325:	pop    eax
  417326:	adc    DWORD PTR [edx-0x7a335a14],esp
  41732c:	jl     0x417313
  41732e:	or     esp,ecx
  417330:	add    DWORD PTR [edx-0xa6ef705],edi
  417336:	jo     0x4172fa
  417338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417339:	stc    
  41733a:	add    dl,BYTE PTR [ecx+eiz*4+0x10]
  41733e:	pop    esi
  41733f:	push   cs
  417340:	jbe    0x41735e
  417342:	dec    BYTE PTR [ecx]
  417344:	sub    al,0x64
  417346:	jbe    0x4173b3
  417348:	stos   DWORD PTR es:[edi],eax
  417349:	js     0x4172cc
  41734b:	mov    dl,0xf8
  41734d:	push   DWORD PTR [edi+0x4a]
  417350:	inc    edx
  417351:	out    0x46,al
  417353:	add    esp,DWORD PTR [ecx+0x4]
  417356:	mov    WORD PTR [edx-0x15],fs
  417359:	inc    ebx
  41735a:	and    edx,ebp
  41735c:	(bad)  
  41735d:	popf   
  41735e:	sub    al,0x7a
  417361:	mov    ebx,0x439cf6b7
  417366:	fimul  DWORD PTR [ebp-0x72]
  417369:	cmp    eax,DWORD PTR [ebp-0x16]
  41736c:	push   ebx
  41736d:	loop   0x417386
  41736f:	fwait
  417370:	loope  0x4173ba
  417372:	push   ebp
  417373:	dec    ecx
  417374:	pop    ds
  417375:	out    dx,eax
  417376:	xor    BYTE PTR [edi+0x1e],ah
  417379:	cmp    eax,eax
  41737b:	adc    ah,0xc4
  41737e:	mov    esp,0x5f04c041
  417383:	hlt    
  417384:	leave  
  417385:	pop    ebx
  417386:	sub    dl,bl
  417388:	clc    
  417389:	sbb    al,0xb
  41738b:	inc    esp
  41738c:	out    0x56,al
  41738e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41738f:	ret    
  417390:	bound  edx,QWORD PTR [esi+0x4f]
  417393:	xor    BYTE PTR [esi-0x8],bh
  417396:	push   cs
  417397:	inc    ecx
  417398:	pcmpgtb mm7,QWORD PTR [ebx+0x29ec224a]
  41739f:	rcl    DWORD PTR [ebx-0x7738a54f],cl
  4173a5:	ss stc 
  4173a7:	add    BYTE PTR [esi+eiz*1+0x2b],dh
  4173ab:	add    BYTE PTR [ecx+0x48],dl
  4173ae:	pop    edx
  4173af:	push   eax
  4173b0:	ficomp WORD PTR [esp+ebp*1-0x1f]
  4173b4:	lahf   
  4173b5:	jg     0x41737e
  4173b7:	fbstp  TBYTE PTR [ebp-0x3eecc5f0]
  4173bd:	push   edi
  4173be:	pop    ebx
  4173bf:	loopne 0x417359
  4173c1:	clc    
  4173c2:	cmp    eax,0x106826f
  4173c7:	jbe    0x4173f1
  4173c9:	cmp    edx,DWORD PTR [eax-0x7]
  4173cc:	pop    ebx
  4173cd:	ret    0xe8c8
  4173d0:	ss ins BYTE PTR es:[edi],dx
  4173d2:	sub    al,0x45
  4173d4:	sub    bl,BYTE PTR ds:0xa86bd1bc
  4173da:	add    eax,0xa38c54be
  4173df:	ja     0x4173f4
  4173e1:	nop
  4173e2:	popa   
  4173e3:	aad    0xf4
  4173e5:	mov    eax,ds:0xacb0ad43
  4173ea:	call   DWORD PTR [edx-0x135b7e1c]
  4173f0:	mov    esp,0x67c1cdad
  4173f5:	aad    0x1d
  4173f7:	sbb    bh,bh
  4173f9:	rcl    DWORD PTR [ebx],1
  4173fb:	jae    0x4173eb
  4173fd:	add    bl,BYTE PTR [ebx-0x70]
  417400:	lea    ecx,es:[ebx]
  417403:	add    BYTE PTR [edx-0x574b2655],ch
  417409:	inc    ebx
  41740a:	mov    ds:0x9325450f,al
  41740f:	mov    ebx,gs
  417411:	sub    eax,0xbfee049a
  417416:	sbb    eax,0xdb1d5f02
  41741b:	sub    ebx,DWORD PTR [ebx-0x5f]
  41741e:	sbb    ebx,esi
  417420:	adc    esp,ecx
  417422:	pop    esi
  417423:	ror    BYTE PTR [ebx+0x23],1
  417426:	mov    fs,WORD PTR [edi+eiz*8+0x122bdec7]
  41742d:	xor    eax,0x830bee0d
  417432:	lods   al,BYTE PTR ds:[esi]
  417433:	cwde   
  417434:	push   ebp
  417435:	into   
  417436:	rol    DWORD PTR [eax],0x5d
  417439:	jg     0x41742e
  41743b:	add    DWORD PTR [edx],0x3d
  41743e:	xchg   ebx,eax
  41743f:	jmp    0x417441
  417441:	pusha  
  417442:	sbb    al,0x1b
  417444:	xchg   ebp,eax
  417445:	iret   
  417446:	dec    edx
  417447:	xor    al,0x50
  417449:	add    DWORD PTR [edx-0x5b],ebp
  41744c:	mov    bl,0xab
  41744e:	sbb    ah,bh
  417450:	push   ss
  417451:	test   DWORD PTR [edi+ebp*4-0x4e0063c8],esi
  417458:	into   
  417459:	mov    dl,0x22
  41745b:	inc    edx
  41745c:	ret    
  41745d:	and    BYTE PTR [ecx-0x71e969d7],ah
  417463:	xor    al,BYTE PTR [eax]
  417465:	push   ebp
  417466:	popa   
  417467:	dec    ecx
  417468:	inc    eax
  417469:	cld    
  41746a:	adc    eax,0x2c5d2900
  41746f:	xor    bl,BYTE PTR [eax-0x3]
  417472:	scas   al,BYTE PTR es:[edi]
  417473:	push   ds
  417474:	jmp    0xa9d0:0xf0e407d8
  41747b:	cmp    ebx,DWORD PTR [ecx-0x5b4398a0]
  417481:	mov    edx,0x6a53bd6f
  417486:	cmp    eax,0x683f4b34
  41748b:	rcl    BYTE PTR [ebp-0x18],0x58
  41748f:	inc    ebx
  417490:	add    eax,0x8246cf7c
  417495:	mov    ch,0xfa
  417497:	pop    ebp
  417498:	outs   dx,BYTE PTR ds:[esi]
  417499:	push   edi
  41749a:	xor    BYTE PTR [ebx+0x4b73a5f],ah
  4174a0:	ss and esp,esi
  4174a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174a4:	fdivr  DWORD PTR [ebp-0x2d]
  4174a7:	jg     0x417490
  4174a9:	mov    dl,BYTE PTR [ecx+0x230515d8]
  4174af:	test   eax,0x481f5be0
  4174b4:	call   0x6cd6:0xe31449a6
  4174bb:	mov    ds:0xe1f61bd0,al
  4174c0:	loope  0x417497
  4174c2:	jb     0x4174fa
  4174c4:	adc    al,0xcd
  4174c6:	mov    esi,0xe34a7b12
  4174cb:	jae    0x4174ee
  4174cd:	fs dec ebp
  4174cf:	mov    al,ds:0xb8f7bcd0
  4174d4:	test   DWORD PTR [edx+edi*1+0x6c16f9a1],edx
  4174db:	jns    0x4174d9
  4174dd:	inc    esp
  4174de:	ja     0x41754e
  4174e0:	mov    ebx,0x60351b4
  4174e5:	sub    BYTE PTR [ebx+0x5fc52477],0x96
  4174ec:	pop    ebp
  4174ed:	xchg   edx,eax
  4174ee:	fisttp QWORD PTR [edx]
  4174f0:	ds push cs
  4174f2:	call   DWORD PTR [edi]
  4174f4:	hlt    
  4174f5:	pusha  
  4174f6:	pop    ss
  4174f7:	cli    
  4174f8:	jo     0x4174b0
  4174fa:	push   ecx
  4174fb:	mov    ecx,DWORD PTR [ecx+eiz*4+0x66]
  4174ff:	cdq    
  417500:	sub    BYTE PTR [ecx],bh
  417502:	pop    edx
  417503:	cmp    BYTE PTR [edi+0xd],dl
  417506:	inc    ebp
  417507:	imul   ebx,DWORD PTR ds:0x4ee8d6b8,0x815b8bbc
  417511:	sub    al,0x3a
  417513:	mov    ecx,0xed6bdec7
  417518:	fsub   DWORD PTR [esi+0x1d]
  41751b:	and    cl,BYTE PTR [edx]
  41751d:	sbb    al,0x99
  41751f:	fimul  DWORD PTR [ecx-0x72bc605]
  417525:	push   ss
  417526:	daa    
  417527:	into   
  417528:	push   eax
  417529:	mov    esp,0xa3224c4f
  41752e:	(bad)  
  41752f:	je     0x4174f0
  417531:	mov    ds:0xecb2afd8,al
  417536:	in     eax,dx
  417537:	mov    edx,0x498933d5
  41753c:	(bad)  
  41753d:	jmp    0xdf2702c5
  417542:	jbe    0x41759c
  417544:	pop    ebp
  417545:	xchg   esi,eax
  417546:	loop   0x41759b
  417548:	popa   
  417549:	clts   
  41754b:	cwde   
  41754c:	data16 mov BYTE PTR [ebp+0xd],dh
  417550:	push   ds
  417551:	and    DWORD PTR [edx-0x31],0xd475574d
  417558:	iret   
  417559:	xchg   BYTE PTR [edi-0x4a],al
  41755c:	fnsave [edx]
  41755e:	add    BYTE PTR [esi+0x3142ee54],al
  417564:	retf   0x84ec
  417567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417568:	jge    0x4175ac
  41756a:	mov    eax,edx
  41756c:	dec    edx
  41756d:	jns    0x4175e2
  41756f:	xchg   edi,eax
  417570:	push   ds
  417571:	in     eax,dx
  417572:	sti    
  417573:	gs jmp 0x3a4d:0x258bea5d
  41757b:	mov    al,ds:0x1a0d566b
  417580:	shr    DWORD PTR [ecx+eiz*2-0x7381dfc0],cl
  417587:	jp     0x417531
  417589:	outs   dx,BYTE PTR ds:[esi]
  41758a:	mov    eax,ds:0xa757a0b9
  41758f:	retf   0xf919
  417592:	dec    ebp
  417593:	mov    ecx,DWORD PTR [ecx+0x4d9e28c7]
  417599:	int    0xf0
  41759b:	jg     0x41753e
  41759d:	inc    edi
  41759e:	jae    0x4175b0
  4175a0:	xor    al,0x15
  4175a2:	repnz and al,0xd9
  4175a5:	cld    
  4175a6:	dec    edi
  4175a7:	(bad)  
  4175a9:	(bad)  
  4175aa:	cmp    BYTE PTR [edx-0x722f3044],ch
  4175b0:	ror    DWORD PTR [ebp+0x16e967a6],cl
  4175b6:	sub    al,0x78
  4175b8:	mov    eax,ds:0xfb641cb5
  4175bd:	jmp    0x212c168e
  4175c2:	adc    eax,DWORD PTR [ecx]
  4175c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175c5:	(bad)  
  4175c6:	pop    esp
  4175c7:	cmp    esp,edx
  4175c9:	je     0x41761c
  4175cb:	test   BYTE PTR [esi],ch
  4175cd:	(bad)  
  4175ce:	jge    0x41757a
  4175d0:	push   cs
  4175d1:	mov    edi,ebp
  4175d3:	call   0x65521704
  4175d8:	lods   al,BYTE PTR ds:[esi]
  4175d9:	mov    DWORD PTR [ebp+ebp*4-0x5b],edx
  4175dd:	push   edx
  4175de:	jno    0x417620
  4175e0:	cmp    dl,BYTE PTR [esi+0x698a9e5]
  4175e6:	cld    
  4175e7:	xlat   BYTE PTR ds:[ebx]
  4175e8:	gs mov ebp,0xf468aca0
  4175ee:	pop    edx
  4175ef:	inc    ebp
  4175f0:	mov    ebx,0x89838fce
  4175f5:	icebp  
  4175f6:	out    dx,eax
  4175f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175f8:	pop    ebp
  4175f9:	mov    bh,0xdb
  4175fb:	test   ch,0xb1
  4175fe:	mov    eax,0x197727d6
  417603:	adc    esi,DWORD PTR [edx+0x31930915]
  417609:	inc    edi
  41760a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41760b:	iret   
  41760c:	lods   eax,DWORD PTR ds:[esi]
  41760d:	mov    ebp,DWORD PTR [esi-0x7c2689b0]
  417613:	lock in al,dx
  417615:	shl    DWORD PTR [eax+0x1c3d571a],cl
  41761b:	adc    edi,edx
  41761d:	adc    eax,0x74947827
  417622:	jecxz  0x417688
  417624:	xor    eax,0x69aad99d
  417629:	pop    edi
  41762a:	push   ecx
  41762b:	mov    ecx,?
  41762d:	mov    cl,0xf5
  41762f:	and    eax,0x18f898a2
  417634:	adc    eax,0xdda8a797
  417639:	shl    BYTE PTR [ecx+ebp*8],cl
  41763c:	pop    es
  41763d:	rol    DWORD PTR [esi-0x1f],1
  417640:	ss sub al,0x96
  417643:	and    cl,BYTE PTR [edx]
  417645:	mov    cl,0x32
  417647:	int    0xc6
  417649:	adc    al,0x64
  41764b:	inc    ebp
  41764c:	in     eax,0xd9
  41764e:	call   0xedcc9695
  417653:	jg     0x4176a6
  417655:	repnz cmc 
  417657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417658:	int3   
  417659:	lods   eax,DWORD PTR ds:[esi]
  41765a:	arpl   WORD PTR [edi+0x77],si
  41765d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41765e:	pop    ebx
  41765f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417661:	mov    dl,0xef
  417663:	(bad)  
  417664:	repnz dec ebp
  417666:	xor    al,0xc9
  417668:	jl     0x417646
  41766a:	in     al,dx
  41766b:	xor    BYTE PTR [ecx],dh
  41766d:	es sub ah,bl
  417670:	call   0xfa133246
  417675:	adc    esi,DWORD PTR ds:0x60e2b70e
  41767b:	pop    ecx
  41767c:	dec    ebx
  41767d:	(bad)  
  41767e:	inc    BYTE PTR cs:[edx+0x11d864bd]
  417685:	adc    bl,dh
  417687:	dec    edi
  417688:	pop    es
  417689:	jl     0x417619
  41768b:	pop    ds
  41768c:	mov    ecx,0xdef4fba5
  417691:	imul   esi,DWORD PTR [edx+0x16],0x1ac8aa9e
  417698:	adc    bl,BYTE PTR [ebx]
  41769a:	out    0xce,al
  41769c:	pop    edi
  41769d:	cld    
  41769e:	pop    esp
  41769f:	rol    BYTE PTR [esi],1
  4176a1:	add    cl,al
  4176a3:	xor    DWORD PTR [eax],ebp
  4176a5:	and    ecx,DWORD PTR [edi+0x41]
  4176a8:	pop    esi
  4176a9:	stc    
  4176aa:	imul   edx,DWORD PTR [ecx],0xffffffae
  4176ad:	jp     0x4176c5
  4176af:	mov    eax,0x72b0a20d
  4176b4:	pop    ds
  4176b5:	cmp    al,0x90
  4176b7:	pop    ds
  4176b8:	dec    esi
  4176b9:	test   al,0x2
  4176bb:	cdq    
  4176bc:	das    
  4176bd:	push   ds
  4176be:	jg     0x41770b
  4176c0:	loop   0x417652
  4176c2:	sub    ah,BYTE PTR [edi]
  4176c4:	and    DWORD PTR [ebx+0x38],esp
  4176c7:	xor    BYTE PTR [eax+esi*1],0xf7
  4176cb:	sub    al,0x3f
  4176cd:	adc    BYTE PTR [esp+edi*1-0x4a2fedf1],dl
  4176d4:	pushf  
  4176d5:	mov    bl,BYTE PTR [edx]
  4176d7:	add    DWORD PTR [ebp+eiz*8-0x57cd8990],0x79
  4176df:	pop    esp
  4176e0:	or     ecx,ecx
  4176e2:	fbstp  TBYTE PTR [ebx+esi*1-0x46]
  4176e6:	cmp    al,0x62
  4176e8:	sbb    esi,DWORD PTR [edi]
  4176ea:	lea    esi,[ebp*2+0x2f2fcf07]
  4176f1:	pop    ebx
  4176f2:	push   ss
  4176f3:	mov    al,BYTE PTR [ebp-0x5e1d0f73]
  4176f9:	mov    eax,0x43480667
  4176fe:	sub    eax,DWORD PTR [esi]
  417700:	(bad)  
  417701:	daa    
  417702:	inc    esi
  417703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417704:	js     0x41776d
  417706:	add    eax,0xc25b8c3d
  41770b:	stos   DWORD PTR es:[edi],eax
  41770c:	stos   BYTE PTR es:[edi],al
  41770d:	xchg   esp,ecx
  41770f:	repz in al,dx
  417711:	cmp    DWORD PTR [ebx-0x2ded29b],eax
  417717:	lea    ebx,[eax+eiz*4-0x6c6956d4]
  41771e:	idiv   BYTE PTR ds:0xd35473b3
  417724:	add    BYTE PTR [edx-0x10c81f90],0xf6
  41772b:	xchg   ebp,eax
  41772c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41772d:	leave  
  41772e:	xor    eax,0x2f57dbe6
  417733:	adc    DWORD PTR [esp+ecx*8+0x22],0x64148ff6
  41773b:	pusha  
  41773c:	sbb    BYTE PTR [edx-0x61c8c58],dh
  417742:	fimul  DWORD PTR [esi+0x507454ca]
  417748:	adc    DWORD PTR [edi-0x29a169f4],eax
  41774e:	push   eax
  41774f:	inc    eax
  417750:	mov    DWORD PTR [edx],ebx
  417752:	sub    dh,dh
  417754:	scas   al,BYTE PTR es:[edi]
  417755:	pop    eax
  417756:	jmp    0x417781
  417758:	fld    QWORD PTR [ebx+0x12]
  41775b:	inc    esi
  41775c:	pop    esp
  41775d:	xchg   bh,al
  41775f:	or     bl,0xd7
  417762:	jmp    FWORD PTR [ebx-0x14c83d8c]
  417768:	pop    edi
  417769:	cwde   
  41776a:	mov    ebx,0xee2d6564
  41776f:	dec    eax
  417770:	xor    edx,DWORD PTR ds:0xd24b20e2
  417776:	pop    DWORD PTR [ecx]
  417778:	aaa    
  417779:	push   cs
  41777a:	pushf  
  41777b:	outs   dx,DWORD PTR ds:[esi]
  41777c:	mov    bh,0xc5
  41777e:	arpl   WORD PTR [edx+0x6c4bf8cb],ax
  417784:	call   0x774e4147
  417789:	jge    0x417794
  41778b:	loop   0x4177ff
  41778d:	(bad)  
  41778e:	push   esp
  41778f:	xchg   bh,dl
  417791:	mov    eax,DWORD PTR [bx-0x43]
  417795:	and    eax,0x41af643e
  41779a:	pop    eax
  41779b:	mov    eax,ds:0x5706efc7
  4177a0:	(bad)  
  4177a1:	in     al,0xa5
  4177a3:	int3   
  4177a4:	fist   WORD PTR [edx+esi*8-0x4d]
  4177a8:	imul   ebx,DWORD PTR ds:0xd607ab33,0xffffffe5
  4177af:	jo     0x4177ee
  4177b1:	pushf  
  4177b2:	xor    ebp,esp
  4177b4:	retf   0x9425
  4177b7:	sbb    eax,edx
  4177b9:	dec    esi
  4177ba:	and    DWORD PTR [ecx+0x79],esp
  4177bd:	push   esp
  4177be:	xchg   edx,eax
  4177bf:	xor    al,0x31
  4177c1:	push   edi
  4177c2:	bound  esp,QWORD PTR [edi-0x70]
  4177c5:	mov    BYTE PTR [ebp+0x6deb85f2],ch
  4177cb:	push   es
  4177cc:	xchg   esp,eax
  4177cd:	test   eax,0x4a69c844
  4177d2:	stos   BYTE PTR es:[edi],al
  4177d3:	adc    BYTE PTR [edx-0x6594aad9],bl
  4177d9:	mov    ch,0xc9
  4177db:	add    eax,0x2fb9018
  4177e0:	call   0x577833b2
  4177e5:	and    al,0x12
  4177e7:	adc    BYTE PTR [edx-0x57],ah
  4177ea:	(bad)  
  4177eb:	sar    BYTE PTR [ebx+edi*8],cl
  4177ee:	inc    eax
  4177ef:	xchg   ebx,eax
  4177f0:	fidiv  DWORD PTR [edi+0x13]
  4177f3:	je     0x417781
  4177f5:	rcr    bh,1
  4177f7:	rol    ebx,cl
  4177f9:	dec    ebp
  4177fa:	pusha  
  4177fb:	ss nop
  4177fd:	(bad)  [edx]
  4177ff:	dec    eax
  417800:	test   eax,0xfc2f8bb
  417805:	and    al,0x5d
  417807:	aad    0x69
  417809:	inc    esi
  41780a:	or     al,0x4
  41780c:	scas   eax,DWORD PTR es:[edi]
  41780d:	dec    esp
  41780e:	ins    BYTE PTR es:[edi],dx
  41780f:	pusha  
  417810:	stos   DWORD PTR es:[edi],eax
  417811:	ror    DWORD PTR [ebp+0x275f8530],1
  417817:	ja     0x4177f4
  417819:	fisub  DWORD PTR [ebx+0x2b2e5416]
  41781f:	push   eax
  417820:	les    eax,FWORD PTR ds:0xd127399a
  417826:	pop    ebx
  417827:	cmp    ebp,eax
  417829:	adc    DWORD PTR [edx],esp
  41782b:	mov    al,ds:0xed2c5a44
  417830:	test   eax,0x9daf9489
  417835:	pop    ss
  417836:	mov    WORD PTR [ecx+0x29],cs
  417839:	mov    edi,0x8da1ea84
  41783e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41783f:	sbb    ebx,DWORD PTR [ecx]
  417841:	add    esi,ecx
  417843:	(bad)  
  417844:	or     BYTE PTR [edi-0x14],ah
  417847:	dec    eax
  417848:	mov    esi,cs
  41784a:	not    DWORD PTR [esi-0x64e377e]
  417850:	mov    ebp,0x8ab3ecb
  417855:	mov    dh,0xcb
  417857:	mov    ebp,0x32af673c
  41785c:	lods   al,BYTE PTR ds:[esi]
  41785d:	repnz int 0x1
  417860:	push   ds
  417861:	xchg   ebp,eax
  417862:	test   BYTE PTR [eax+0x23f7b252],dh
  417868:	daa    
  417869:	into   
  41786a:	pop    esp
  41786b:	sbb    eax,0xc6c63e57
  417870:	cs daa 
  417872:	adc    eax,0x47fa46c
  417877:	aam    0x51
  417879:	xor    ebx,0x4863221
  41787f:	ds or  al,0xee
  417882:	mov    ds:0x439a63ba,al
  417887:	mov    BYTE PTR [ebx+0x3c],bl
  41788a:	jnp    0x4178ef
  41788c:	hlt    
  41788d:	cmp    esp,DWORD PTR [ebx+ecx*1]
  417890:	add    BYTE PTR [ebx],bl
  417892:	mov    bh,0x95
  417894:	mov    ds:0xc04b8def,al
  417899:	mov    dh,0x46
  41789b:	and    eax,0xf9239371
  4178a0:	outs   dx,BYTE PTR ds:[esi]
  4178a1:	dec    ecx
  4178a2:	mov    eax,ds:0x8bb07c48
  4178a7:	jp     0x41788e
  4178a9:	adc    DWORD PTR [edx+0x114cd2ca],0x8b02d605
  4178b3:	fldenv ds:0xf7946ec5
  4178b9:	sub    ebp,edx
  4178bb:	test   BYTE PTR [edx-0x39b01cd2],al
  4178c1:	pop    edx
  4178c2:	mov    ds:0xb22e44b6,al
  4178c7:	and    cl,BYTE PTR [ecx+0xbb33857]
  4178cd:	cmp    cl,0xc3
  4178d0:	xchg   esp,eax
  4178d1:	ss dec ebp
  4178d3:	lock aam 0x86
  4178d6:	cmp    DWORD PTR [esp+esi*4-0x51],0x3002d29b
  4178de:	(bad)  
  4178e0:	aam    0x6
  4178e2:	cld    
  4178e3:	or     ah,dh
  4178e5:	mov    BYTE PTR [esi-0x4ef3845d],bl
  4178eb:	dec    edi
  4178ec:	jmp    0x417964
  4178ee:	cld    
  4178ef:	inc    esp
  4178f0:	aam    0x68
  4178f2:	jg     0x417946
  4178f4:	mov    edi,DWORD PTR [esi+0x7864870b]
  4178fa:	or     esi,esi
  4178fc:	inc    esi
  4178fd:	adc    DWORD PTR [edi+0x3a],esp
  417900:	jb     0x41794c
  417902:	(bad)  [esi+0x2eabedcc]
  417908:	push   eax
  417909:	(bad)
  41790c:	mov    eax,0xbc88cc97
  417911:	out    0xda,al
  417913:	lock popa 
  417915:	pushf  
  417916:	pop    ds
  417917:	push   eax
  417918:	je     0x41793b
  41791a:	mov    dh,0xee
  41791c:	mov    ebx,0x7acf04bd
  417921:	xchg   edx,eax
  417922:	jno    0x417927
  417924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417925:	push   es
  417926:	in     eax,dx
  417927:	jae    0x417973
  417929:	add    al,BYTE PTR [eax+0x412f316f]
  41792f:	and    edx,DWORD PTR [eax+0x68]
  417932:	jbe    0x417902
  417934:	idiv   BYTE PTR [ebp-0x1c]
  417937:	pop    edi
  417938:	aas    
  417939:	ins    DWORD PTR es:[edi],dx
  41793a:	pop    ds
  41793b:	sub    al,0xb3
  41793d:	jecxz  0x417903
  41793f:	sbb    al,0x47
  417941:	gs inc esi
  417943:	push   ebx
  417944:	clc    
  417945:	popa   
  417946:	sub    esp,DWORD PTR [edi+eax*8+0xa]
  41794a:	pop    es
  41794b:	and    BYTE PTR [ebx+0x5482b54b],cl
  417951:	ret    0x6e48
  417954:	test   eax,0x343f6333
  417959:	je     0x4178f7
  41795b:	jp     0x417978
  41795d:	int3   
  41795e:	stos   DWORD PTR es:[edi],eax
  41795f:	mov    BYTE PTR [edi+0x7d],cl
  417962:	and    esp,DWORD PTR [ebx]
  417964:	sbb    bh,BYTE PTR [ebx-0x1]
  417967:	mov    ecx,0x7f53920f
  41796c:	inc    edi
  41796d:	addr16 jmp eax
  417970:	pop    esp
  417971:	stos   DWORD PTR es:[edi],eax
  417972:	ds ins DWORD PTR es:[edi],dx
  417974:	retf   
  417975:	int    0x47
  417977:	mov    dl,0x5d
  417979:	push   ds
  41797a:	into   
  41797b:	push   esp
  41797c:	mov    bh,cl
  41797e:	add    al,0x8c
  417980:	lock jbe 0x417982
  417983:	adc    al,0xa0
  417985:	mov    ds:0x1e2604cb,al
  41798a:	stos   DWORD PTR es:[edi],eax
  41798b:	pop    edx
  41798c:	inc    ebp
  41798d:	inc    eax
  41798e:	or     BYTE PTR ds:0x8555519,cl
  417994:	ss es (bad) 
  417997:	popa   
  417998:	loope  0x417a03
  41799a:	push   es
  41799b:	jecxz  0x417970
  41799d:	push   cs
  41799e:	mov    eax,ds:0x6ad07fee
  4179a3:	pop    ebp
  4179a4:	hlt    
  4179a5:	mov    ds:0x973c437b,eax
  4179aa:	dec    eax
  4179ab:	sbb    BYTE PTR [ecx+0x2d79c90],0x8c
  4179b2:	mov    ebx,DWORD PTR [ecx+esi*4-0x5c347747]
  4179b9:	pop    ds
  4179ba:	inc    eax
  4179bb:	jg     0x417a32
  4179bd:	loopne 0x417a2f
  4179bf:	xchg   ebp,eax
  4179c0:	mov    eax,ds:0x1fcd3abe
  4179c5:	fmul   DWORD PTR [ebp-0x51]
  4179c8:	stc    
  4179c9:	sahf   
  4179ca:	popf   
  4179cb:	sbb    esi,DWORD PTR [ebp-0x78]
  4179ce:	push   ecx
  4179cf:	pop    ss
  4179d0:	(bad)  
  4179d1:	jmp    0x2d0ddc15
  4179d6:	pop    esi
  4179d7:	popa   
  4179d8:	daa    
  4179d9:	mov    ah,BYTE PTR ds:0x1e6afce8
  4179df:	leave  
  4179e0:	sub    BYTE PTR [esp+edi*2],dl
  4179e3:	mov    esi,0xd03a3e16
  4179e8:	and    al,0x79
  4179ea:	pushf  
  4179eb:	out    0x89,eax
  4179ed:	loop   0x417a6c
  4179ef:	addr16 push cs
  4179f1:	mov    eax,ds:0xca3a5387
  4179f6:	js     0x4179a1
  4179f8:	cld    
  4179f9:	test   al,0xfe
  4179fb:	clc    
  4179fc:	inc    esi
  4179fd:	mov    esi,0x8cfbf208
  417a02:	(bad)  
  417a03:	pop    esi
  417a04:	add    DWORD PTR [eax-0x4675e90e],eax
  417a0a:	mov    edi,0xf2339c1f
  417a0f:	data16 das 
  417a11:	inc    esp
  417a12:	jnp    0x4179a0
  417a14:	popa   
  417a15:	mov    dl,0x1a
  417a17:	sub    ebx,DWORD PTR [ecx+0x6]
  417a1a:	or     dl,bl
  417a1c:	inc    ebx
  417a1d:	jne    0x417a59
  417a1f:	ins    BYTE PTR es:[edi],dx
  417a20:	mov    edi,0x1ba0c235
  417a25:	adc    DWORD PTR [ebp-0x11],ebx
  417a28:	popa   
  417a29:	push   cs
  417a2a:	xchg   edx,eax
  417a2b:	in     al,dx
  417a2c:	out    dx,eax
  417a2d:	mov    eax,ds:0xaa812230
  417a32:	xor    al,0x7c
  417a34:	fnstsw WORD PTR [eax-0x3de44a34]
  417a3a:	les    edx,FWORD PTR [edx+0x5e0afb7]
  417a40:	mov    dl,0x61
  417a42:	mov    edi,edi
  417a44:	inc    edx
  417a45:	sub    eax,0xc65a1d22
  417a4a:	pop    eax
  417a4b:	fdivr  DWORD PTR [esi+0x6bef919c]
  417a51:	rcl    BYTE PTR [edx+0x4802146c],cl
  417a57:	adc    dl,BYTE PTR [eax]
  417a59:	jl     0x417ab0
  417a5b:	in     al,0x55
  417a5d:	mov    edi,0xaa355621
  417a62:	push   ds
  417a63:	popf   
  417a64:	dec    esi
  417a65:	mov    bl,bl
  417a67:	dec    edi
  417a68:	xchg   esi,eax
  417a69:	add    DWORD PTR [ebp+0x29],ebx
  417a6c:	add    BYTE PTR [ecx-0x28],0x80
  417a70:	rol    BYTE PTR [esi],1
  417a72:	dec    eax
  417a73:	push   ss
  417a74:	push   ecx
  417a75:	imul   ebp,DWORD PTR [ebx+0x1b],0x47
  417a79:	pop    ebp
  417a7a:	mov    esp,DWORD PTR [eax-0x32]
  417a7d:	das    
  417a7e:	les    esp,FWORD PTR [edi+0x5c6c37d6]
  417a84:	push   edi
  417a85:	fs xchg esp,eax
  417a87:	adc    BYTE PTR [ecx-0x7d96fef7],bh
  417a8d:	lahf   
  417a8e:	adc    eax,0xde6e0cde
  417a93:	arpl   WORD PTR [esi+ebp*4+0x153e698],bp
  417a9a:	imul   DWORD PTR [edx]
  417a9c:	aas    
  417a9d:	sbb    DWORD PTR [edx+ecx*4-0x23],edi
  417aa1:	lods   al,BYTE PTR ds:[esi]
  417aa2:	push   esi
  417aa3:	mov    ds:0x9784bdbf,eax
  417aa8:	in     eax,0x56
  417aaa:	xchg   esp,eax
  417aab:	xchg   BYTE PTR [ebx+0x2e],dh
  417aae:	scas   al,BYTE PTR es:[edi]
  417aaf:	(bad)  
  417ab0:	aaa    
  417ab1:	pusha  
  417ab2:	mov    dl,0xa9
  417ab4:	and    esi,eax
  417ab6:	dec    eax
  417ab7:	cmp    DWORD PTR [edi+ecx*4+0x7d],edi
  417abb:	rcr    BYTE PTR [edx-0x67],0xee
  417abf:	and    eax,0x242d2b3d
  417ac4:	jp     0x417b42
  417ac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ac7:	mov    ebp,0x379c582d
  417acc:	and    eax,0xd555326c
  417ad1:	ficomp DWORD PTR [esi+0x5b9dc420]
  417ad7:	(bad)  
  417ad8:	iret   
  417ad9:	mov    dh,0x82
  417adb:	scas   al,BYTE PTR es:[edi]
  417adc:	call   0x963523f9
  417ae1:	ror    BYTE PTR [edi-0x3909e64c],cl
  417ae7:	adc    edx,esi
  417ae9:	aad    0xb6
  417aeb:	or     bh,BYTE PTR [eax-0x77d3410c]
  417af1:	imul   esp,esi,0x61fa4ad0
  417af7:	adc    DWORD PTR [edx],edi
  417af9:	addr16 clc 
  417afb:	jmp    0x417ac7
  417afd:	jnp    0x417b08
  417aff:	mov    edi,DWORD PTR [ebx]
  417b01:	clc    
  417b02:	and    ah,al
  417b04:	jmp    0x417aa6
  417b06:	cli    
  417b07:	xor    BYTE PTR [edi],dh
  417b09:	mov    ebp,0x3f753b71
  417b0e:	xor    esp,DWORD PTR [ebx]
  417b10:	pusha  
  417b11:	dec    esi
  417b12:	les    edi,FWORD PTR [edi]
  417b14:	sbb    al,0xff
  417b16:	or     BYTE PTR [edi-0x391ade6],cl
  417b1c:	and    al,0xaa
  417b1e:	std    
  417b1f:	(bad)  
  417b20:	push   ebp
  417b21:	add    ebx,DWORD PTR [eax+eax*8+0x6f8f84a]
  417b28:	clc    
  417b29:	pushf  
  417b2a:	mov    BYTE PTR fs:[esp+ecx*2-0x54],bl
  417b2f:	add    ch,BYTE PTR [esp+eax*4]
  417b32:	add    DWORD PTR [ebx+ecx*2+0x1e],esi
  417b36:	out    0xf9,al
  417b38:	addr16 ret 0x11c7
  417b3c:	adc    al,0xc2
  417b3e:	sub    BYTE PTR [esi],dh
  417b40:	pop    ebp
  417b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b42:	and    DWORD PTR [edx-0x3],eax
  417b45:	pop    ecx
  417b46:	lods   al,BYTE PTR ds:[esi]
  417b47:	ret    0xbfa6
  417b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b4b:	aas    
  417b4c:	rol    DWORD PTR [ebp*2-0x6dad5759],0x26
  417b54:	jge    0x417b52
  417b56:	loop   0x417b04
  417b58:	xchg   BYTE PTR [edx],bh
  417b5a:	jmp    0xc1ef:0x2f723960
  417b61:	in     al,0xab
  417b63:	iret   
  417b64:	icebp  
  417b65:	xor    dh,BYTE PTR [edx+0x5f]
  417b68:	and    DWORD PTR [ecx-0x2d912e48],edx
  417b6e:	sti    
  417b6f:	adc    ch,BYTE PTR [ecx]
  417b71:	xchg   DWORD PTR [edx],ecx
  417b73:	je     0x417b37
  417b75:	and    dh,BYTE PTR [eax]
  417b77:	sub    BYTE PTR [ecx+ebx*1-0x15],0xb7
  417b7c:	jl     0x417b54
  417b7e:	hlt    
  417b7f:	mov    dl,0x84
  417b81:	ror    DWORD PTR [esi+0x18],cl
  417b84:	mov    edi,DWORD PTR [ebx-0x3b19d7ee]
  417b8a:	inc    edi
  417b8b:	cmp    BYTE PTR [edi],cl
  417b8d:	in     al,0xe5
  417b8f:	js     0x417b57
  417b91:	mov    ch,0xb0
  417b93:	rcr    BYTE PTR [edi-0x27cecd76],1
  417b99:	add    al,0xd7
  417b9b:	test   DWORD PTR [eax+edx*8-0x6c],edi
  417b9f:	mov    ch,BYTE PTR [eax+0x77]
  417ba2:	repnz out 0xe3,al
  417ba5:	push   edx
  417ba6:	pushf  
  417ba7:	call   0xbedc581a
  417bac:	jo     0x417c24
  417bae:	and    al,0xc3
  417bb0:	scas   al,BYTE PTR es:[edi]
  417bb1:	adc    al,0xe
  417bb3:	adc    eax,0x502617f2
  417bb8:	dec    edx
  417bb9:	mov    al,ds:0x6cb410ab
  417bbe:	mov    ds:0xcd4aa060,eax
  417bc3:	in     eax,0x66
  417bc5:	cmp    eax,0xb51bc303
  417bca:	arpl   WORD PTR [eax-0xf],sp
  417bcd:	ror    DWORD PTR [ecx+0x7100b7a2],1
  417bd3:	fs (bad) 
  417bd6:	out    0x81,eax
  417bd8:	mov    al,0x5b
  417bda:	or     edx,DWORD PTR [eax]
  417bdc:	(bad)  
  417bde:	pop    ds
  417bdf:	cmp    DWORD PTR [ebx],esp
  417be1:	mov    al,ds:0x24368acd
  417be6:	dec    edi
  417be7:	sbb    ch,dh
  417be9:	inc    ebp
  417bea:	pop    ss
  417beb:	fs stos DWORD PTR es:[edi],eax
  417bed:	push   ss
  417bee:	in     al,dx
  417bef:	sbb    esp,DWORD PTR [ebp+0x5d2e857]
  417bf5:	imul   esi,DWORD PTR [edx-0x51],0x2f7883d3
  417bfc:	hlt    
  417bfd:	fisub  WORD PTR [ebp-0x1c3535f2]
  417c03:	dec    edi
  417c04:	push   0xe
  417c06:	add    eax,edx
  417c08:	mov    bl,0x38
  417c0a:	pop    ss
  417c0b:	inc    esi
  417c0c:	xchg   edi,eax
  417c0d:	or     dh,BYTE PTR [ecx+0x7999ff12]
  417c13:	add    DWORD PTR [ecx-0x58],0x6a6af2c
  417c1a:	out    0x91,al
  417c1c:	sbb    edx,edi
  417c1e:	cmp    dh,dl
  417c20:	and    al,0x57
  417c22:	inc    esi
  417c23:	lods   al,BYTE PTR ds:[esi]
  417c24:	pop    ebx
  417c25:	mov    WORD PTR [ebp+ebx*2+0x9],?
  417c29:	sub    eax,0xb457d690
  417c2e:	dec    eax
  417c2f:	out    dx,eax
  417c30:	das    
  417c31:	(bad)  
  417c32:	enter  0x686b,0xcf
  417c36:	xchg   ebp,eax
  417c37:	adc    al,0x12
  417c39:	out    0x95,eax
  417c3b:	pop    ecx
  417c3c:	jl     0x417bea
  417c3e:	jg     0x417c64
  417c40:	xchg   ebx,eax
  417c41:	dec    edi
  417c42:	(bad)  
  417c43:	call   0xee5dcb4b
  417c48:	cmp    DWORD PTR [ebp+edx*1+0x20f4eb0d],eax
  417c4f:	mov    eax,0x3de229d8
  417c54:	xor    DWORD PTR [edi+0x1975605b],edx
  417c5a:	mov    al,ds:0xd52d525a
  417c5f:	pop    esi
  417c60:	test   BYTE PTR [esi+ebp*8],0x58
  417c64:	fst    DWORD PTR [ebp-0x46]
  417c67:	pushf  
  417c68:	dec    ecx
  417c69:	lods   al,BYTE PTR ds:[esi]
  417c6a:	add    esi,DWORD PTR [esi-0x52]
  417c6d:	mov    bh,0xe1
  417c6f:	sti    
  417c70:	outs   dx,BYTE PTR ds:[esi]
  417c71:	sub    ebx,edi
  417c73:	sbb    al,0xf6
  417c76:	or     BYTE PTR [esi],dh
  417c78:	ins    BYTE PTR es:[edi],dx
  417c79:	inc    esp
  417c7a:	mov    ds:0x19de3356,eax
  417c7f:	and    ebp,DWORD PTR [edx-0x45]
  417c82:	clc    
  417c83:	in     al,dx
  417c84:	test   BYTE PTR [esi],bh
  417c86:	jg     0x417c8e
  417c88:	lods   al,BYTE PTR ds:[esi]
  417c89:	mov    cl,BYTE PTR [eax+0x1ec2efca]
  417c8f:	popa   
  417c90:	jmp    0x28d6ff3f
  417c95:	xchg   edx,eax
  417c96:	(bad)  
  417c97:	mov    esi,0x1347ff21
  417c9c:	adc    esp,edi
  417c9e:	jnp    0x417c5f
  417ca0:	icebp  
  417ca1:	sub    eax,0xc1507f93
  417ca6:	fdivp  st(0),st
  417ca8:	les    edx,FWORD PTR [ecx]
  417caa:	add    esi,edx
  417cac:	mov    dl,0x8c
  417cae:	fwait
  417caf:	push   edx
  417cb0:	xchg   ebx,eax
  417cb1:	xor    bh,BYTE PTR [ecx+0x14]
  417cb4:	stc    
  417cb5:	arpl   sp,dx
  417cb7:	ret    0xfa02
  417cba:	rcr    ebx,0x97
  417cbd:	inc    edi
  417cbe:	mov    esp,0xee99305c
  417cc3:	sub    BYTE PTR [edi+0x50],ah
  417cc6:	fsubr  QWORD PTR [edx-0x77554a91]
  417ccc:	push   ebx
  417ccd:	pop    es
  417cce:	test   DWORD PTR es:[edi-0x15],ebx
  417cd2:	jb     0x417c5e
  417cd4:	mov    al,0x9c
  417cd6:	ficom  WORD PTR [esi-0x75]
  417cd9:	bound  dx,DWORD PTR [esi+edx*8]
  417cdd:	fisubr WORD PTR [ebp+0x5c2667e3]
  417ce3:	leave  
  417ce4:	dec    edx
  417ce5:	mov    ebp,ebx
  417ce7:	gs jns 0x417c93
  417cea:	arpl   ax,bp
  417cec:	and    al,0x67
  417cee:	xchg   ebx,eax
  417cef:	es jb  0x417c76
  417cf2:	in     eax,dx
  417cf3:	jno    0x417d41
  417cf5:	pop    ss
  417cf6:	mov    ecx,0x58b30dd9
  417cfb:	add    DWORD PTR [esi],ebp
  417cfd:	clc    
  417cfe:	add    eax,DWORD PTR [esi]
  417d00:	inc    ecx
  417d01:	cld    
  417d02:	or     DWORD PTR [eax+0x3b705dbf],eax
  417d08:	mov    ebp,DWORD PTR [edx+ecx*2+0x2b9b7b19]
  417d0f:	(bad)  
  417d10:	dec    edi
  417d11:	(bad)  
  417d12:	in     al,0xc1
  417d14:	xchg   ebx,eax
  417d15:	aad    0x6e
  417d17:	lock (bad) 
  417d19:	fsubp  st(1),st
  417d1b:	cli    
  417d1c:	mov    ch,0x75
  417d1e:	rcr    esi,0xa1
  417d21:	inc    esp
  417d22:	cmovs  ebp,ecx
  417d25:	adc    esp,DWORD PTR [ecx]
  417d27:	push   ebx
  417d28:	ja     0x417ce6
  417d2a:	fdiv   QWORD PTR [esi]
  417d2d:	cmp    DWORD PTR [edi+0x62],edx
  417d30:	xor    esp,DWORD PTR [esi-0x29d9745c]
  417d36:	push   edx
  417d37:	outs   dx,BYTE PTR ds:[esi]
  417d38:	xchg   ebp,eax
  417d39:	sub    eax,0x96e6ee4
  417d3e:	xchg   edi,eax
  417d3f:	push   es
  417d40:	fmul   QWORD PTR [ecx]
  417d42:	dec    ebx
  417d43:	mov    dh,0xb6
  417d45:	xchg   edi,eax
  417d46:	outs   dx,DWORD PTR ds:[esi]
  417d47:	cmp    al,0x31
  417d49:	call   ebx
  417d4b:	int    0xae
  417d4d:	dec    ebx
  417d4e:	out    0x82,eax
  417d50:	add    BYTE PTR [ecx],dl
  417d52:	inc    edx
  417d53:	cld    
  417d54:	sub    esi,DWORD PTR [ebx-0x1e]
  417d57:	jmp    0xcde5:0xf6280b4
  417d5e:	stos   BYTE PTR es:[edi],al
  417d5f:	and    edi,DWORD PTR [eax+eax*4-0x79530a65]
  417d66:	in     eax,dx
  417d67:	pop    ebx
  417d68:	mov    dl,0xe7
  417d6a:	test   BYTE PTR [ebx],ch
  417d6c:	jb     0x417dda
  417d6e:	gs shl dl,1
  417d71:	stc    
  417d72:	leave  
  417d73:	jae    0x417d95
  417d75:	add    eax,0x42eade7c
  417d7a:	lds    ecx,FWORD PTR [ecx-0x2d9eaf74]
  417d80:	xchg   esi,eax
  417d81:	test   BYTE PTR [ebx-0x6320d073],bl
  417d87:	leave  
  417d88:	jae    0x417de6
  417d8a:	lea    eax,[edi+0xd]
  417d8d:	repnz adc DWORD PTR [ebx-0x38a3ed67],ebp
  417d94:	out    0x2b,al
  417d96:	shl    DWORD PTR [eax],0x3e
  417d99:	mov    DWORD PTR [ebx],ecx
  417d9b:	mov    bl,0xca
  417d9d:	iret   
  417d9e:	pop    edi
  417d9f:	ds xchg edi,eax
  417da1:	mov    esp,0x22eb5827
  417da6:	jbe    0x417d88
  417da8:	dec    edx
  417da9:	sbb    DWORD PTR ds:0xc24dc9a2,ebp
  417daf:	popf   
  417db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417db1:	inc    eax
  417db2:	push   esp
  417db3:	test   DWORD PTR [ecx-0x2eb08479],0xd043897e
  417dbd:	mov    ds:0xa5e7fb1e,al
  417dc2:	push   cs
  417dc3:	je     0x417d8f
  417dc5:	lahf   
  417dc6:	nop
  417dc7:	cmc    
  417dc8:	div    ah
  417dca:	ret    0xd56a
  417dcd:	jae    0x417da7
  417dcf:	adc    ebx,ebx
  417dd1:	sbb    eax,0x2a0bb876
  417dd6:	mov    ebp,0xeff0fc50
  417ddb:	pop    ds
  417ddc:	adc    al,0xcc
  417dde:	adc    esp,eax
  417de0:	cld    
  417de1:	or     BYTE PTR [edx+0x5ae654b8],bl
  417de7:	sub    BYTE PTR ds:0x66167772,ah
  417ded:	adc    DWORD PTR [esi+0x1f],edi
  417df0:	pop    esi
  417df1:	pop    ebp
  417df2:	push   esp
  417df3:	pusha  
  417df4:	jmp    0xd51:0x91bb19cd
  417dfb:	and    ah,cl
  417dfd:	mov    dl,ah
  417dff:	lods   al,BYTE PTR ds:[esi]
  417e00:	sub    eax,0xafe040e1
  417e05:	mov    esi,0x7af65c2f
  417e0a:	mov    cl,0x41
  417e0c:	loop   0x417dfe
  417e0e:	sbb    BYTE PTR [eax],0x94
  417e11:	sbb    eax,0xddfc844b
  417e16:	push   ss
  417e17:	sbb    al,0x58
  417e19:	gs dec esi
  417e1b:	inc    ecx
  417e1c:	push   edi
  417e1d:	imul   esp,DWORD PTR [esi],0x6449d589
  417e23:	iret   
  417e24:	imul   cx,WORD PTR [ecx-0x1b8ee070],0x2983
  417e2d:	or     ebp,ecx
  417e2f:	jg     0x417dcb
  417e31:	adc    ebx,edx
  417e33:	adc    al,BYTE PTR [edi+0x4c]
  417e36:	mov    edx,0x32ef65f9
  417e3b:	mov    bh,BYTE PTR [esi+ebp*2]
  417e3e:	aas    
  417e3f:	cs cmp dh,cl
  417e42:	aad    0xab
  417e44:	out    0xed,al
  417e46:	sbb    al,0xe6
  417e48:	lods   al,BYTE PTR ds:[esi]
  417e49:	shl    DWORD PTR ds:0xeb1b0361,1
  417e4f:	dec    BYTE PTR [edx+0xb]
  417e52:	push   esp
  417e53:	dec    ebx
  417e54:	cmp    bl,BYTE PTR [edx-0x5cfdc653]
  417e5a:	outs   dx,BYTE PTR ds:[esi]
  417e5b:	mov    cl,0x38
  417e5d:	add    eax,0x87cd581
  417e62:	dec    edi
  417e63:	mov    ebp,0x8808d571
  417e68:	out    dx,al
  417e69:	mov    WORD PTR [edi+0x4ddee9fc],cs
  417e6f:	popa   
  417e70:	adc    dh,BYTE PTR [eax+0x23]
  417e73:	cmp    dh,BYTE PTR [edi+eiz*8]
  417e76:	scas   eax,DWORD PTR es:[edi]
  417e77:	sub    al,0x6e
  417e79:	loope  0x417ef5
  417e7b:	jne    0x417e61
  417e7d:	push   esp
  417e7e:	ds int 0xd0
  417e81:	jp     0x417e6e
  417e83:	or     BYTE PTR [ebp-0x3a979320],ch
  417e89:	out    0x2a,al
  417e8b:	dec    ebp
  417e8c:	xchg   ebx,eax
  417e8d:	push   eax
  417e8e:	imul   esp,DWORD PTR [ebp-0x40],0x4c74bec1
  417e95:	or     al,0x53
  417e97:	icebp  
  417e98:	stos   BYTE PTR es:[edi],al
  417e99:	pop    edx
  417e9a:	add    eax,0x306caa05
  417e9f:	dec    esp
  417ea0:	bound  ecx,QWORD PTR [ebx]
  417ea2:	adc    DWORD PTR [edi-0x14],eax
  417ea5:	addr16 sahf 
  417ea7:	jmp    0x7f8c:0x1d2771dd
  417eae:	jg     0x417e76
  417eb0:	clc    
  417eb1:	pop    eax
  417eb2:	inc    edi
  417eb3:	sbb    ecx,esp
  417eb5:	mov    esi,0x3b164aca
  417eba:	dec    esi
  417ebb:	(bad)  
  417ebc:	in     eax,dx
  417ebd:	mov    ah,0x67
  417ebf:	(bad)  
  417ec0:	and    DWORD PTR [esi+0x6a],edx
  417ec3:	inc    esi
  417ec4:	lods   al,BYTE PTR ds:[esi]
  417ec5:	mov    ch,0x54
  417ec7:	jge    0x417f34
  417ec9:	inc    edx
  417eca:	dec    esi
  417ecb:	cmp    esp,DWORD PTR [ebx]
  417ecd:	mov    ds:0x7bd8f20c,eax
  417ed2:	pop    ebx
  417ed3:	lods   al,BYTE PTR ds:[esi]
  417ed4:	xchg   esi,eax
  417ed5:	loop   0x417f54
  417ed7:	test   DWORD PTR ds:0x9f56075d,esp
  417edd:	ret    
  417ede:	jge    0x417e93
  417ee0:	and    al,0x2d
  417ee2:	lea    edi,[ebp-0x11f238a8]
  417ee8:	imul   esi,DWORD PTR [eax-0x5b],0xffffffcb
  417eec:	repz jno 0x417ea4
  417eef:	push   esi
  417ef0:	jae    0x417ef4
  417ef2:	add    ecx,DWORD PTR [edi+0x50]
  417ef5:	dec    esp
  417ef6:	fldenv [esi+0x69]
  417ef9:	lds    edx,FWORD PTR [esi+0x2d]
  417efc:	rcr    BYTE PTR [ebx+0x494b6f62],0x38
  417f03:	(bad)  
  417f05:	stos   DWORD PTR es:[edi],eax
  417f06:	rcl    DWORD PTR [edx],cl
  417f08:	es scas eax,DWORD PTR es:[edi]
  417f0a:	push   esp
  417f0b:	int3   
  417f0c:	cmp    WORD PTR [ebx],bp
  417f0f:	pop    es
  417f10:	xor    DWORD PTR [edi],eax
  417f12:	ror    esp,1
  417f14:	jg     0x417f54
  417f16:	arpl   WORD PTR [ebx+0x11],sp
  417f19:	mov    al,ds:0x3f0ace14
  417f1e:	cwde   
  417f1f:	push   esp
  417f20:	(bad)  
  417f21:	sub    cl,BYTE PTR ds:[ebx+0x24]
  417f25:	std    
  417f26:	pop    esi
  417f27:	das    
  417f28:	pop    eax
  417f29:	mov    DWORD PTR [edi+0x28],ebx
  417f2c:	cs mov ecx,0x8f1070c6
  417f32:	(bad)  
  417f33:	in     eax,dx
  417f34:	in     eax,dx
  417f35:	mov    al,ds:0x904e5942
  417f3a:	mov    eax,ds:0xe18072cf
  417f3f:	or     DWORD PTR [esi+0x4bbeba86],ecx
  417f45:	and    eax,0x1e26c2bf
  417f4a:	repz jge 0x417ed8
  417f4d:	scas   eax,DWORD PTR es:[edi]
  417f4e:	add    edx,edi
  417f50:	adc    BYTE PTR [esi-0x6c],ch
  417f53:	ds jne 0x417ef1
  417f56:	stc    
  417f57:	shl    DWORD PTR [edi+0x6916cc0e],0xb8
  417f5e:	push   edi
  417f5f:	lods   eax,DWORD PTR ds:[esi]
  417f60:	das    
  417f61:	sti    
  417f62:	and    ah,ah
  417f64:	adc    BYTE PTR [ebx],al
  417f66:	inc    edi
  417f67:	imul   ebp,DWORD PTR [ebx+eiz*2],0xda00577
  417f6e:	sar    BYTE PTR [edx+0x340e5598],0x44
  417f75:	pop    ds
  417f76:	sbb    ah,BYTE PTR [edi-0x69]
  417f79:	mov    dh,0xb0
  417f7b:	and    al,0x5f
  417f7d:	lock inc esi
  417f7f:	mov    ah,0x82
  417f81:	xchg   edi,eax
  417f82:	dec    ecx
  417f83:	repnz rcl BYTE PTR [ebp+0x75d29c36],cl
  417f8a:	clc    
  417f8b:	adc    al,0xb0
  417f8d:	xchg   DWORD PTR [ebx-0x14],edi
  417f90:	jle    0x417f58
  417f92:	in     al,dx
  417f93:	cli    
  417f94:	adc    dl,dl
  417f96:	lods   eax,DWORD PTR ds:[esi]
  417f97:	lods   eax,DWORD PTR ds:[esi]
  417f98:	sbb    eax,0xa3db86d1
  417f9d:	leave  
  417f9e:	adc    ecx,ebp
  417fa0:	dec    ebx
  417fa1:	enter  0xb0d2,0xf0
  417fa5:	add    eax,0xf2c85e4a
  417faa:	mov    ds:0xc71aaa67,eax
  417faf:	pushw  cs
  417fb1:	fnstcw WORD PTR [edx]
  417fb3:	leave  
  417fb4:	enter  0x4be5,0xd8
  417fb8:	mov    cl,0xc
  417fba:	aad    0xd3
  417fbc:	popf   
  417fbd:	mov    ch,0xe7
  417fbf:	xchg   edi,eax
  417fc0:	shl    BYTE PTR [edx],cl
  417fc2:	cs push esi
  417fc4:	leave  
  417fc5:	xchg   ebp,eax
  417fc6:	push   ss
  417fc7:	add    ebp,0x3b
  417fca:	dec    esi
  417fcb:	shr    DWORD PTR [ebp-0xb],1
  417fce:	cmp    eax,0xcb7f8a5c
  417fd3:	jbe    0x417f8b
  417fd5:	add    DWORD PTR [eax],edi
  417fd7:	push   edi
  417fd8:	xlat   BYTE PTR ds:[ebx]
  417fd9:	sub    BYTE PTR [eax+0x1e],ch
  417fdc:	bound  ebp,QWORD PTR [edx]
  417fde:	mov    DWORD PTR [ebx],eax
  417fe0:	gs scas eax,DWORD PTR es:[edi]
  417fe2:	scas   al,BYTE PTR es:[edi]
  417fe3:	xchg   esp,eax
  417fe4:	aam    0xb8
  417fe6:	retf   0xc71c
  417fe9:	xchg   esp,eax
  417fea:	pop    ecx
  417feb:	mov    ecx,0xe9d320c0
  417ff0:	aas    
  417ff1:	add    al,0xe9
  417ff4:	adc    DWORD PTR [ecx-0x62],ebx
  417ff7:	pusha  
  417ff8:	sbb    al,0x3f
  417ffa:	jae    0x41801a
  417ffc:	sub    BYTE PTR [ebp-0x43e6a9fe],cl
  418002:	jno    0x417f87
  418004:	das    
  418005:	xor    BYTE PTR [ecx],dl
  418007:	stos   BYTE PTR es:[edi],al
  418008:	retf   0xaece
  41800b:	cmp    eax,0xf1e27eac
  418010:	xlat   BYTE PTR ds:[ebx]
  418011:	xchg   esi,eax
  418012:	stc    
  418013:	add    ebp,ebx
  418015:	(bad)  
  418016:	or     eax,0x35202a66
  41801b:	popa   
  41801c:	push   0x51
  41801e:	dec    eax
  41801f:	cmp    DWORD PTR [edi],edx
  418021:	ins    DWORD PTR es:[edi],dx
  418022:	sub    dh,BYTE PTR [eax]
  418024:	ins    DWORD PTR es:[edi],dx
  418025:	(bad)  
  418026:	out    dx,eax
  418027:	ja     0x418026
  418029:	call   0xfcb2:0x624dc756
  418030:	jmp    0xb4321cdf
  418035:	fst    DWORD PTR [eax+edi*4]
  418038:	jl     0x4180a5
  41803a:	jns    0x418095
  41803c:	outs   dx,DWORD PTR ds:[esi]
  41803d:	jno    0x418005
  41803f:	daa    
  418040:	mov    eax,ds:0x3771b25f
  418045:	xchg   ebx,eax
  418046:	push   0xc4e657ca
  41804b:	pop    eax
  41804c:	fs mov cl,0x6b
  41804f:	rep ins DWORD PTR es:[edi],dx
  418051:	mov    eax,ds:0x4ba69ae8
  418056:	push   edi
  418057:	pop    ebx
  418058:	test   DWORD PTR [edx],ebp
  41805a:	pop    ebx
  41805b:	xchg   esi,eax
  41805c:	aam    0x8
  41805e:	or     al,0xf8
  418060:	xchg   BYTE PTR [edx-0x27f40e44],cl
  418066:	jo     0x41801f
  418068:	sub    BYTE PTR [ebp+ebp*2+0x2f867249],0x5b
  418070:	adc    eax,0xd8ddc38e
  418075:	sar    DWORD PTR ds:0xd274c703,1
  41807b:	sub    esp,DWORD PTR [esp-0x3d]
  41807f:	(bad)  
  418080:	sbb    edi,DWORD PTR [edx+ebp*4]
  418083:	mov    ah,0xb5
  418085:	pop    edx
  418086:	retf   
  418087:	or     BYTE PTR [esi],bl
  418089:	aas    
  41808a:	sahf   
  41808b:	div    BYTE PTR [edx]
  41808d:	into   
  41808e:	mov    dl,0xde
  418090:	dec    esi
  418091:	mov    ch,0x79
  418093:	call   0x750fb421
  418098:	rcr    DWORD PTR [eax],1
  41809a:	xor    edx,DWORD PTR [ebp-0x8f2c1fa]
  4180a0:	inc    edx
  4180a1:	mov    al,0x8f
  4180a3:	fdivr  QWORD PTR [edx+0x53]
  4180a6:	pop    ecx
  4180a7:	loopne 0x418091
  4180a9:	or     al,0x42
  4180ab:	pusha  
  4180ac:	cmp    eax,0xcf4a3d59
  4180b1:	cmp    al,0x2d
  4180b3:	mov    cl,ah
  4180b5:	fisttp QWORD PTR [ebp+0x5e]
  4180b8:	sti    
  4180b9:	or     edx,DWORD PTR [eax-0x5c]
  4180bc:	pop    ebx
  4180bd:	cmp    eax,0x202f9aa3
  4180c2:	scas   al,BYTE PTR es:[edi]
  4180c3:	mov    ebp,0x25704b0d
  4180c8:	xchg   ebx,eax
  4180c9:	sub    eax,0xe0a2ef96
  4180ce:	lea    edi,[eax+0x64]
  4180d1:	sahf   
  4180d2:	xor    eax,0x82fcea07
  4180d7:	cld    
  4180d8:	push   eax
  4180d9:	sahf   
  4180da:	dec    ebp
  4180db:	sub    ebp,ebx
  4180dd:	(bad)  
  4180de:	add    al,0x23
  4180e0:	fsub   DWORD PTR [edx]
  4180e2:	daa    
  4180e3:	mov    al,0x70
  4180e5:	retf   0xccc4
  4180e8:	or     BYTE PTR [ebp+ecx*2-0x80],0x9
  4180ed:	sbb    ah,cl
  4180ef:	loopne 0x418091
  4180f1:	rcr    ecx,1
  4180f3:	sbb    al,0xda
  4180f5:	inc    edi
  4180f6:	pushf  
  4180f7:	adc    DWORD PTR [ebx],eax
  4180f9:	cwde   
  4180fa:	test   DWORD PTR [edx-0x296a45e9],ecx
  418100:	jp     0x4180f0
  418102:	sahf   
  418103:	mov    ch,0xd8
  418105:	mov    eax,0x4f4c459f
  41810a:	and    ebp,DWORD PTR [edx]
  41810c:	test   BYTE PTR [esi+ebp*4],ah
  41810f:	and    BYTE PTR [ebp-0x1812e1bf],bl
  418115:	out    0xf0,eax
  418117:	pusha  
  418118:	fldenv [ebx+edx*8-0x271ea2e7]
  41811f:	pop    ds
  418120:	mov    ds:0x75443343,al
  418125:	hlt    
  418126:	inc    ecx
  418127:	sub    DWORD PTR [edi-0x2c39ee22],edi
  41812d:	pop    ss
  41812e:	push   ds
  41812f:	sbb    DWORD PTR [edi+0x4b],ecx
  418132:	fs adc dh,0x3a
  418136:	cmc    
  418137:	mov    al,ds:0xa0eb0a3d
  41813c:	mov    bh,0x42
  41813e:	bound  esp,QWORD PTR [edi]
  418140:	cmp    BYTE PTR [ecx],bl
  418142:	out    0xda,eax
  418144:	pop    edx
  418145:	sbb    DWORD PTR [edi+0x30eff070],eax
  41814b:	ja     0x4181a8
  41814d:	xchg   DWORD PTR [edi],edi
  41814f:	cwde   
  418150:	nop
  418151:	mov    eax,ds:0xc1923757
  418156:	cld    
  418157:	mov    ds:0x78321378,eax
  41815c:	das    
  41815d:	xchg   BYTE PTR [ebp+0x29c4daff],ah
  418163:	jae    0x41811a
  418165:	inc    esp
  418166:	push   esi
  418167:	jo     0x4181cb
  418169:	and    al,0xf1
  41816b:	mov    WORD PTR [esi-0x1b],?
  41816e:	(bad)
  418171:	test   al,0xf0
  418173:	or     eax,0x3f760572
  418178:	inc    edx
  418179:	icebp  
  41817a:	pop    ebp
  41817b:	(bad)  
  41817c:	into   
  41817d:	mov    ?,WORD PTR [ebp-0x4e]
  418180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418181:	and    edx,DWORD PTR [ecx-0x32]
  418184:	mov    esp,esi
  418186:	jmp    0x3e133745
  41818b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41818c:	cmp    DWORD PTR [edi+ebp*4-0x30707e2f],0x7c
  418194:	enter  0x1b8c,0xf3
  418198:	mov    eax,0x29af7f86
  41819d:	xchg   cl,cl
  41819f:	ret    0x6a50
  4181a2:	shl    DWORD PTR [ebx],cl
  4181a4:	fistp  DWORD PTR [edx+ecx*2-0x23]
  4181a8:	ret    
  4181a9:	inc    esp
  4181aa:	mov    DWORD PTR [eax],esi
  4181ac:	mov    edi,0x6fcfd774
  4181b1:	retf   
  4181b2:	push   ss
  4181b3:	(bad)  
  4181b4:	mov    eax,0x184f2602
  4181b9:	sahf   
  4181ba:	dec    esp
  4181bb:	lock je 0x418166
  4181be:	push   ebp
  4181bf:	fistp  WORD PTR [ebp+0x78]
  4181c2:	dec    esi
  4181c3:	inc    esi
  4181c4:	fimul  WORD PTR [edx]
  4181c6:	adc    al,0x38
  4181c8:	sbb    eax,0xf6d720fd
  4181cd:	mov    ds:0xa7012be8,al
  4181d2:	test   al,0xfa
  4181d4:	pop    DWORD PTR [edi+edx*8-0x4b757d1f]
  4181db:	and    eax,0x185371c0
  4181e0:	and    ch,bl
  4181e2:	cdq    
  4181e3:	daa    
  4181e4:	jle    0x41821a
  4181e6:	pop    edi
  4181e7:	gs push es
  4181e9:	sahf   
  4181ea:	bound  edi,QWORD PTR [ecx-0xb]
  4181ed:	jae    0x418264
  4181ef:	add    al,0x32
  4181f1:	cmp    eax,0x47199d47
  4181f6:	and    ebx,DWORD PTR [edi-0x51]
  4181f9:	(bad)  
  4181fa:	enter  0x5aae,0xee
  4181fe:	mov    eax,ss
  418200:	mov    ebp,0xcb331245
  418205:	fst    st(7)
  418207:	mov    al,BYTE PTR [esi-0x7434c30f]
  41820d:	(bad)  
  41820e:	call   0xebc1380a
  418213:	cmp    al,0x24
  418215:	outs   dx,BYTE PTR ds:[esi]
  418216:	test   BYTE PTR [eax],al
  418218:	mov    BYTE PTR [edi-0x4a],ch
  41821b:	push   esp
  41821c:	sub    eax,0x1725b8e8
  418221:	cdq    
  418222:	mov    DWORD PTR [ebx+0x59756a6b],0x2abca6b1
  41822c:	popf   
  41822d:	in     eax,0xa2
  41822f:	inc    ebp
  418230:	aaa    
  418231:	jle    0x41828c
  418233:	clc    
  418234:	enter  0xedb8,0xbb
  418238:	mov    BYTE PTR [ecx+ebx*1-0x32],bh
  41823c:	cmp    eax,0x66ac4557
  418241:	retf   
  418242:	mov    ah,BYTE PTR [eax+0x19726ef2]
  418248:	(bad)  
  41824a:	mov    al,0xaa
  41824c:	sub    eax,0x2257610c
  418251:	or     eax,0x492dbba1
  418256:	ins    DWORD PTR es:[edi],dx
  418257:	jae    0x4182d8
  418259:	loopne 0x4181e4
  41825b:	and    bl,bl
  41825d:	dec    esp
  41825e:	xchg   edi,eax
  41825f:	repnz or dl,BYTE PTR [edx+eiz*4]
  418263:	js     0x4181f9
  418265:	loopne 0x4182ba
  418267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418268:	movlhps xmm4,xmm1
  41826b:	mov    cl,0x37
  41826d:	dec    ebp
  41826e:	shl    bl,1
  418270:	call   0x495b:0xcae2f36
  418277:	mov    ebx,0xf5fa35ef
  41827c:	outs   dx,DWORD PTR ds:[esi]
  41827d:	mov    WORD PTR [edx+0x14],?
  418280:	out    dx,eax
  418281:	pop    esp
  418282:	inc    eax
  418283:	mov    bh,0x8f
  418285:	cmp    ebx,DWORD PTR [ebp+0x79]
  418288:	sub    ebp,DWORD PTR [esi+0x68326779]
  41828e:	into   
  41828f:	inc    ecx
  418290:	test   al,0x1
  418292:	fdiv   DWORD PTR [edi]
  418294:	ficomp WORD PTR [esi-0x5424efd5]
  41829a:	jl     0x41823b
  41829c:	std    
  41829d:	adc    al,0xc6
  41829f:	dec    esp
  4182a0:	inc    ecx
  4182a1:	int3   
  4182a2:	jg     0x4182cc
  4182a4:	nop
  4182a5:	aaa    
  4182a6:	das    
  4182a7:	inc    ebp
  4182a8:	mov    eax,0xc8243459
  4182ad:	lea    esp,[edx-0x49bc05e1]
  4182b3:	mov    ebp,0xf25f9810
  4182b8:	loopne 0x4182e6
  4182ba:	pop    ecx
  4182bb:	daa    
  4182bc:	ins    DWORD PTR es:[edi],dx
  4182bd:	jno    0x4182a4
  4182bf:	ss stc 
  4182c1:	pop    ebp
  4182c2:	jae    0x41828b
  4182c4:	or     al,0x12
  4182c6:	gs push ebp
  4182c8:	push   ebx
  4182c9:	test   eax,0xcb2ffc67
  4182ce:	pop    ds
  4182cf:	jns    0x4182b2
  4182d1:	cli    
  4182d2:	and    al,0x1
  4182d4:	push   ecx
  4182d5:	int3   
  4182d6:	loop   0x418317
  4182d8:	xchg   edi,eax
  4182d9:	and    esp,esi
  4182db:	adc    BYTE PTR [eax],cl
  4182dd:	std    
  4182de:	call   0x177cbc49
  4182e3:	push   edi
  4182e4:	shl    ebx,0x38
  4182e7:	xor    DWORD PTR [edx],ebp
  4182e9:	sbb    BYTE PTR [edx-0x68],ah
  4182ec:	loope  0x418361
  4182ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ef:	out    dx,eax
  4182f0:	inc    esi
  4182f1:	push   ds
  4182f2:	adc    al,0xb7
  4182f4:	stc    
  4182f5:	mov    edx,0x815bd781
  4182fa:	mov    esi,0x84b37b2c
  4182ff:	sbb    ebx,DWORD PTR [ecx+0x75]
  418302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418303:	xor    al,0x13
  418305:	mov    ecx,0x2be1a612
  41830a:	cdq    
  41830b:	mov    bh,0x9b
  41830d:	call   0x8b3:0xfd9489b4
  418314:	dec    eax
  418315:	jnp    0xc419ac1f
  41831b:	(bad)  
  41831c:	(bad)  [ebx-0x70]
  41831f:	aaa    
  418320:	adc    BYTE PTR [ebx-0x2f],cl
  418323:	xor    bh,BYTE PTR ds:0x2358c784
  418329:	lock ja 0x418335
  41832c:	call   0xa5de:0x93a5bbeb
  418333:	pushf  
  418334:	xlat   BYTE PTR ds:[ebx]
  418335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418336:	fcmove st,st(2)
  418338:	push   ecx
  418339:	rcl    ebx,0x54
  41833c:	xchg   BYTE PTR ss:[eax+0x51],bh
  418340:	bound  ecx,QWORD PTR [esi+0x55]
  418343:	mov    esi,DWORD PTR [eax]
  418345:	mov    eax,DWORD PTR [eax-0x5a6699da]
  41834b:	mov    esi,0x37601829
  418350:	mov    cl,0xff
  418352:	inc    ecx
  418353:	jmp    0x4183cc
  418355:	rcl    eax,0x59
  418358:	pusha  
  418359:	popf   
  41835a:	nop
  41835b:	scas   eax,DWORD PTR es:[edi]
  41835c:	xchg   edi,eax
  41835d:	mov    ebp,0x7bca8913
  418362:	add    DWORD PTR [edi+ebx*4-0x5633e3a7],ebp
  418369:	jge    0x418346
  41836b:	pop    ss
  41836c:	push   ebx
  41836d:	outs   dx,DWORD PTR ds:[esi]
  41836e:	sbb    esi,DWORD PTR [ecx]
  418370:	lea    eax,[ecx-0x52]
  418373:	in     eax,dx
  418374:	and    BYTE PTR [edi+0x48452640],ah
  41837a:	push   0x61
  41837c:	(bad)
  41837f:	iret   
  418380:	out    0x99,eax
  418382:	and    DWORD PTR [ecx-0x40d801f0],eax
  418388:	int    0xd6
  41838a:	rcr    BYTE PTR ds:0xbe509cdc,cl
  418390:	xor    ecx,DWORD PTR [ebx]
  418392:	xchg   esp,eax
  418393:	shr    DWORD PTR [ebx+0x6],0xf1
  418397:	cmp    ch,dl
  418399:	pop    eax
  41839a:	jmp    0x4183dd
  41839c:	pop    ecx
  41839d:	dec    eax
  41839e:	xchg   DWORD PTR [eax+ebx*1-0x29],edi
  4183a2:	xor    edi,eax
  4183a4:	adc    eax,0xad1ee81a
  4183a9:	push   cs
  4183aa:	dec    edx
  4183ab:	js     0x418356
  4183ad:	(bad)  
  4183ae:	sbb    eax,0x8be3f710
  4183b3:	iret   
  4183b4:	mov    ch,0x1d
  4183b6:	daa    
  4183b7:	ins    DWORD PTR es:[edi],dx
  4183b8:	scas   al,BYTE PTR es:[edi]
  4183b9:	psrad  mm5,QWORD PTR [ebx]
  4183bc:	loope  0x418395
  4183be:	clc    
  4183bf:	std    
  4183c0:	leave  
  4183c1:	inc    eax
  4183c2:	cmp    edx,DWORD PTR [esi-0x11036099]
  4183c8:	clc    
  4183c9:	jge    0x4183f6
  4183cb:	shl    BYTE PTR [ebx+ecx*4+0x42b90ee5],1
  4183d2:	jp     0x4183ed
  4183d4:	add    dh,BYTE PTR [ecx+0x4226dc7b]
  4183da:	pop    ebx
  4183db:	pop    ds
  4183dc:	mov    ah,BYTE PTR [edi]
  4183de:	pop    eax
  4183df:	jle    0x41844a
  4183e1:	push   cs
  4183e2:	push   cs
  4183e3:	mov    ds:0x284c1eb1,eax
  4183e8:	xor    edx,DWORD PTR [edi+eax*2-0x3e]
  4183ec:	add    eax,0xb598a26b
  4183f1:	mov    dl,0x45
  4183f3:	aas    
  4183f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183f5:	mov    eax,0xfd611080
  4183fa:	mov    ah,0xcf
  4183fc:	ss int 0x83
  4183ff:	sub    ch,BYTE PTR [edi]
  418401:	bound  esp,QWORD PTR [ebx-0x65]
  418404:	xchg   ebx,eax
  418405:	sub    BYTE PTR [eax],ah
  418407:	cdq    
  418408:	cmp    BYTE PTR [ecx+edx*2+0x45],cl
  41840c:	add    bl,bl
  41840e:	push   ecx
  41840f:	dec    ecx
  418410:	push   ecx
  418411:	add    DWORD PTR [esi-0x43c6b2b2],esp
  418417:	sbb    BYTE PTR [ebx-0x5c],0xf3
  41841b:	add    BYTE PTR [ebx+0x2bec11db],0xfd
  418422:	mov    dh,0x90
  418424:	mov    eax,ds:0xd96e1cdb
  418429:	fistp  WORD PTR [ecx]
  41842b:	add    BYTE PTR [eax+ecx*4-0x2b],0xc
  418430:	jbe    0x418420
  418432:	pop    esi
  418433:	jnp    0x418420
  418435:	xor    al,BYTE PTR ds:[esi+0x728c1643]
  41843c:	mov    ebx,0xcdd1e45d
  418441:	in     eax,0xa7
  418443:	xchg   edx,eax
  418444:	pop    eax
  418445:	jl     0x418411
  418447:	and    BYTE PTR [bp+di+0x2c],cl
  41844b:	into   
  41844c:	(bad)  
  41844d:	push   esi
  41844e:	dec    esi
  41844f:	paddq  mm4,mm7
  418452:	and    eax,0xf14f2ff4
  418457:	aad    0xc
  418459:	push   eax
  41845a:	js     0x41846d
  41845c:	pop    esi
  41845d:	pop    es
  41845e:	push   ds
  41845f:	push   ss
  418460:	mov    al,0x82
  418462:	repnz sti 
  418464:	aam    0xaf
  418466:	pop    ds
  418467:	push   esp
  418468:	push   ss
  418469:	or     ecx,DWORD PTR [esi]
  41846b:	inc    eax
  41846c:	xchg   ebp,eax
  41846d:	and    al,0x85
  41846f:	repz push esi
  418471:	xchg   ebp,eax
  418472:	jnp    0x418410
  418474:	cmp    al,0x60
  418476:	sub    al,bl
  418478:	mov    ch,0x8e
  41847a:	push   ecx
  41847b:	sub    dl,BYTE PTR [ebx+0x3284c741]
  418481:	cs ret 
  418483:	dec    esi
  418484:	outs   dx,BYTE PTR ds:[esi]
  418485:	ret    
  418486:	dec    edx
  418487:	xchg   edx,edi
  418489:	test   ch,ch
  41848b:	adc    al,0x22
  41848d:	popa   
  41848e:	xchg   BYTE PTR [edi+0x33],dl
  418491:	mov    esi,0x5fc3363
  418496:	and    eax,ebx
  418498:	das    
  418499:	call   0xf5317dc4
  41849e:	pop    esp
  41849f:	sub    edx,DWORD PTR [edi+0x38]
  4184a2:	xchg   DWORD PTR [ecx-0x762ab59d],ebp
  4184a8:	pushf  
  4184a9:	(bad)  
  4184aa:	aad    0x6
  4184ac:	xchg   esp,eax
  4184ad:	out    0xb1,eax
  4184af:	bound  esp,QWORD PTR [eax]
  4184b1:	mov    esp,DWORD PTR [esi]
  4184b3:	outs   dx,DWORD PTR ds:[esi]
  4184b4:	ret    0x1762
  4184b7:	in     eax,dx
  4184b8:	jg     0x4184bb
  4184ba:	mov    dh,0x38
  4184bc:	ja     0x4184fd
  4184be:	dec    esp
  4184bf:	in     al,dx
  4184c0:	add    eax,0x7501c722
  4184c5:	sti    
  4184c6:	xchg   ebp,eax
  4184c7:	and    eax,0x566d173e
  4184cc:	mov    dl,0x4b
  4184ce:	cmp    DWORD PTR [bx+si-0x559a],0x26
  4184d4:	es inc ebp
  4184d6:	mov    al,0xe0
  4184d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184d9:	in     eax,0x79
  4184db:	mov    esp,0x9c198a30
  4184e0:	jl     0x41846b
  4184e2:	adc    esi,DWORD PTR [esi-0x555e78b2]
  4184e8:	xchg   BYTE PTR [edi+esi*4-0x2c],ah
  4184ec:	lods   eax,DWORD PTR ds:[esi]
  4184ed:	(bad)  
  4184ee:	arpl   WORD PTR [eax],bx
  4184f0:	(bad)  
  4184f1:	fpatan 
  4184f3:	push   edx
  4184f4:	and    BYTE PTR [esi+0x6916ae64],cl
  4184fa:	rcl    bl,cl
  4184fc:	dec    edx
  4184fd:	enter  0x7f,0x9c
  418501:	ja     0x41854c
  418503:	daa    
  418504:	fadd   QWORD PTR [ebx+0xd]
  418507:	push   ebp
  418508:	inc    ebx
  418509:	adc    ah,BYTE PTR [edx+0x68]
  41850c:	adc    dh,BYTE PTR ds:0xfaf9808f
  418512:	mov    fs,WORD PTR [edx+0x2f]
  418515:	not    DWORD PTR [edi]
  418517:	mov    ah,0xfa
  418519:	cmp    BYTE PTR [eax-0x35cb65bd],cl
  41851f:	adc    DWORD PTR [eax],eax
  418521:	mov    al,BYTE PTR [edi-0x1fe52495]
  418527:	cmc    
  418528:	pop    es
  418529:	loop   0x418581
  41852b:	sbb    dl,BYTE PTR [edi-0x6]
  41852e:	xor    DWORD PTR [ecx-0x31],ecx
  418531:	mov    ecx,0x77f26d5
  418536:	mov    ah,0x2a
  418538:	fcmove st,st(0)
  41853a:	push   esp
  41853b:	dec    eax
  41853c:	pop    edi
  41853d:	int    0xe8
  41853f:	xlat   BYTE PTR ds:[ebx]
  418540:	(bad)  
  418541:	popf   
  418542:	retf   0x5fc5
  418545:	mov    eax,ds:0xf5768485
  41854a:	addr16 leave 
  41854c:	mov    ds:0xd53b6f9d,al
  418551:	out    0x9e,eax
  418553:	adc    eax,0x4b3b9f8a
  418558:	mov    esp,0x4992f177
  41855d:	and    eax,0xcfd62c53
  418562:	mov    bh,0x3a
  418564:	xchg   ebp,eax
  418565:	mov    ebp,0xe5e82bb4
  41856a:	jns    0x418539
  41856c:	mov    dh,0xf6
  41856e:	(bad)  
  41856f:	loop   0x4185c3
  418571:	sar    DWORD PTR [edi],0x29
  418574:	sub    BYTE PTR [edi+0x61148d6a],cl
  41857a:	or     al,0xe
  41857c:	test   esp,0x731714c9
  418582:	popf   
  418583:	ret    0xd643
  418586:	pushf  
  418587:	imul   edx,DWORD PTR [edx+ebp*1-0x37],0xffffffac
  41858c:	jmp    0xf6e15e28
  418591:	dec    ebp
  418592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418593:	push   edx
  418594:	mov    ds:0xe50d948a,eax
  418599:	sbb    bh,BYTE PTR [ecx+0x57ee26d5]
  41859f:	inc    ecx
  4185a0:	in     al,dx
  4185a1:	add    al,bh
  4185a3:	leave  
  4185a4:	inc    edi
  4185a5:	dec    edi
  4185a6:	pop    ecx
  4185a7:	in     al,dx
  4185a8:	fisub  DWORD PTR [edx]
  4185aa:	pop    esp
  4185ab:	repnz fistp QWORD PTR [esi+ebp*2-0x1dc909ae]
  4185b3:	ds test eax,0xdfc38836
  4185b9:	dec    edi
  4185ba:	cmp    BYTE PTR [ebx-0x76],ah
  4185bd:	lods   al,BYTE PTR ds:[esi]
  4185be:	push   es
  4185bf:	shl    DWORD PTR ds:0xa99bc19d,0x29
  4185c6:	push   ds
  4185c7:	add    al,0x84
  4185c9:	pusha  
  4185ca:	sub    bh,BYTE PTR [edx]
  4185cc:	sbb    esp,ebx
  4185ce:	add    al,0xbc
  4185d0:	add    DWORD PTR [edi],esi
  4185d2:	or     BYTE PTR [ecx-0x29d58a5f],ch
  4185d8:	hlt    
  4185d9:	dec    esp
  4185da:	test   DWORD PTR [esi+0x18820d3c],edx
  4185e0:	lods   eax,DWORD PTR ds:[esi]
  4185e1:	retf   
  4185e2:	es cdq 
  4185e4:	sbb    eax,0xb255034
  4185e9:	in     eax,0x39
  4185eb:	pop    eax
  4185ec:	xor    BYTE PTR [ecx],cl
  4185ee:	mov    dl,0x24
  4185f0:	sti    
  4185f1:	dec    edx
  4185f2:	es pop ebp
  4185f4:	lods   al,BYTE PTR ds:[esi]
  4185f5:	call   0x4191091
  4185fa:	inc    edx
  4185fb:	push   ds
  4185fc:	mov    edi,0xe809b97f
  418601:	dec    ebx
  418602:	in     al,0xc7
  418604:	xchg   BYTE PTR [ebx],ah
  418606:	arpl   bp,si
  418608:	sti    
  418609:	inc    ecx
  41860a:	call   0xd391:0xaee6f1c2
  418611:	xchg   esi,eax
  418612:	push   ebx
  418613:	and    cl,BYTE PTR [edi+0x65373214]
  418619:	shr    BYTE PTR [edi+ecx*4-0x6d2f380],cl
  418620:	(bad)  
  418621:	sbb    al,cl
  418623:	and    edx,esp
  418625:	mov    dh,0xa2
  418627:	xor    BYTE PTR [ecx+0x37222853],0xa3
  41862e:	lock shl edx,0x9b
  418632:	icebp  
  418633:	clc    
  418634:	cli    
  418635:	pop    edi
  418636:	das    
  418637:	xlat   BYTE PTR ds:[ebx]
  418638:	cld    
  418639:	loope  0x41865e
  41863b:	gs test eax,0x5a683bc7
  418641:	cmp    BYTE PTR [ecx],bh
  418643:	dec    ebp
  418644:	fisubr WORD PTR [edx+ecx*8-0x2244ee63]
  41864b:	ins    DWORD PTR es:[edi],dx
  41864c:	push   ecx
  41864d:	add    eax,0x68e1fa34
  418652:	fstp   DWORD PTR [ebx+0x7b]
  418655:	in     eax,dx
  418656:	push   cs
  418657:	into   
  418658:	add    ecx,DWORD PTR ds:0xb1aac53d
  41865e:	cmc    
  41865f:	cmp    ebp,DWORD PTR [edi+0x26]
  418662:	jbe    0x4186b5
  418664:	fist   DWORD PTR [edx]
  418666:	adc    esp,edx
  418668:	and    BYTE PTR [esi-0x38],ah
  41866b:	and    eax,0x6efc1b3c
  418670:	imul   ebx,DWORD PTR [ecx+0x4dacac15],0xffffff9a
  418677:	call   0x96a7e09e
  41867c:	mov    ecx,0xb27e9cdb
  418681:	jg     0x418658
  418683:	xchg   edx,ecx
  418685:	jmp    0x418636
  418687:	leave  
  418688:	cmp    BYTE PTR [ebx-0x39],cl
  41868b:	inc    edi
  41868c:	rcl    BYTE PTR [edi],1
  41868e:	add    ah,dh
  418690:	test   al,0x67
  418692:	aad    0x70
  418694:	jmp    0xc99e:0x6b8e0f69
  41869b:	test   eax,0x90a9fafd
  4186a0:	ss daa 
  4186a2:	clc    
  4186a3:	xchg   ebp,eax
  4186a4:	mov    al,ds:0x63dd417d
  4186a9:	xor    cl,bh
  4186ab:	ret    0x2971
  4186ae:	pop    eax
  4186af:	adc    esi,esp
  4186b1:	fst    QWORD PTR [edi]
  4186b3:	fs das 
  4186b5:	int3   
  4186b6:	lds    ebx,FWORD PTR [ecx+0x3910cd0e]
  4186bc:	jno    0x418699
  4186be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186bf:	js     0x418643
  4186c1:	stos   BYTE PTR es:[edi],al
  4186c2:	dec    ecx
  4186c3:	(bad)
  4186c6:	mov    fs,edx
  4186c8:	add    dl,al
  4186ca:	fisub  DWORD PTR [ecx+0xd]
  4186cd:	fild   WORD PTR [edx+0x26]
  4186d0:	pop    esp
  4186d1:	stos   BYTE PTR es:[edi],al
  4186d2:	fmul   QWORD PTR [ebx-0x4e]
  4186d5:	mov    WORD PTR [esi-0xa],?
  4186d8:	jb     0x41868e
  4186da:	pop    eax
  4186db:	imul   edx,DWORD PTR [esp+eiz*4+0x261b2ccc],0x44b5ed12
  4186e6:	out    0xbe,eax
  4186e8:	out    dx,al
  4186e9:	mov    ebx,DWORD PTR [esi-0x32]
  4186ec:	(bad)  
  4186ed:	push   esi
  4186ee:	dec    ebx
  4186ef:	jnp    0x418674
  4186f1:	loop   0x41876a
  4186f3:	mov    eax,0x9111b383
  4186f8:	cwde   
  4186f9:	int3   
  4186fa:	fld    QWORD PTR [eax]
  4186fc:	test   eax,0xd036edc1
  418701:	test   eax,0x19e14def
  418706:	push   es
  418707:	and    eax,DWORD PTR [edx-0x6c2d619e]
  41870d:	mov    al,0x68
  41870f:	(bad)  
  418710:	inc    ebx
  418711:	pusha  
  418712:	add    DWORD PTR [edx],esi
  418714:	sub    DWORD PTR [esi-0x66119681],ebp
  41871a:	js     0x4186ee
  41871c:	xchg   bx,ax
  41871e:	jno    0x41873f
  418720:	push   cs
  418721:	xchg   ch,bh
  418723:	mov    ch,al
  418725:	loop   0x418728
  418727:	jbe    0x4186f4
  418729:	(bad)  
  41872a:	and    ah,BYTE PTR [edx+0x3c612bb2]
  418730:	jnp    0x418764
  418732:	inc    eax
  418733:	inc    ebp
  418734:	xchg   ecx,eax
  418735:	add    ecx,DWORD PTR [esi+0x7b]
  418738:	aaa    
  418739:	fild   DWORD PTR [ebp-0x2c]
  41873c:	test   DWORD PTR [edi],ecx
  41873e:	test   DWORD PTR cs:[esi],ebx
  418741:	xor    DWORD PTR [ebx],edi
  418743:	xor    eax,DWORD PTR [esi+eax*4]
  418746:	xchg   ebx,eax
  418747:	repz ret 0xf322
  41874b:	jbe    0x41871b
  41874d:	(bad)  
  41874f:	mov    ds:0x88e136d2,eax
  418754:	stos   BYTE PTR es:[edi],al
  418755:	out    dx,al
  418756:	ja     0x4187bc
  418758:	dec    eax
  418759:	bound  edx,QWORD PTR [ebp-0x656cfb77]
  41875f:	leave  
  418760:	push   ss
  418761:	pop    edx
  418762:	mov    edi,0xe507da0b
  418767:	xor    al,0x1b
  418769:	cmp    BYTE PTR [ecx],cl
  41876b:	cmp    BYTE PTR [edi],cl
  41876d:	mov    dh,0x55
  41876f:	stc    
  418770:	sub    DWORD PTR [edx-0x17b2cf4a],edi
  418776:	xchg   esi,eax
  418777:	mov    dl,0x85
  418779:	jecxz  0x418756
  41877b:	sub    edx,ebp
  41877d:	add    esi,DWORD PTR [edi+0x2b863174]
  418783:	and    eax,0x95570868
  418788:	mov    esp,0x640b6473
  41878d:	add    DWORD PTR [esi-0x137279a5],eax
  418793:	jg     0x41876e
  418795:	inc    edx
  418796:	ret    0xfc0b
  418799:	fsub   DWORD PTR [ebx]
  41879b:	pop    ecx
  41879c:	lods   eax,DWORD PTR ds:[esi]
  41879d:	aam    0xf
  41879f:	call   0x6b11:0xd4e560c9
  4187a6:	pop    ds
  4187a7:	dec    edx
  4187a8:	or     bl,0xeb
  4187ab:	sub    dl,BYTE PTR [edi]
  4187ad:	stc    
  4187ae:	or     al,0xb4
  4187b0:	inc    edi
  4187b1:	adc    eax,0xc735a63b
  4187b6:	add    BYTE PTR [esi],dh
  4187b8:	ja     0x4187bd
  4187ba:	loopne 0x418765
  4187bc:	jo     0x418770
  4187be:	call   0xd29ed7a2
  4187c3:	inc    edx
  4187c4:	add    DWORD PTR [edx+0x6fb117c6],ecx
  4187ca:	push   esi
  4187cb:	lods   al,BYTE PTR ds:[esi]
  4187cc:	shr    BYTE PTR ss:[eax-0x233c5b7f],cl
  4187d3:	or     DWORD PTR [ebx+0x16],ebp
  4187d6:	out    dx,al
  4187d7:	test   BYTE PTR [esi-0x51be556a],dl
  4187dd:	jno    0x418793
  4187df:	sub    edi,ebp
  4187e1:	add    eax,0xb7053c71
  4187e6:	jle    0x4187fd
  4187e8:	mov    esi,0xeb67f8f8
  4187ed:	das    
  4187ee:	icebp  
  4187ef:	lock imul edx,DWORD PTR [esi],0xcadb0955
  4187f6:	push   ecx
  4187f7:	out    dx,eax
  4187f8:	or     al,0xc7
  4187fa:	inc    esp
  4187fb:	push   ecx
  4187fc:	mov    dh,ch
  4187fe:	xchg   DWORD PTR [ecx+0x5f],ebx
  418801:	inc    eax
  418802:	or     BYTE PTR [ebp-0x32bd58c9],0x2b
  418809:	push   edi
  41880a:	push   esp
  41880b:	xchg   ebp,eax
  41880c:	sbb    al,0x2c
  41880e:	push   ecx
  41880f:	adc    al,0xdb
  418811:	dec    eax
  418812:	mov    ds:0x16533aac,al
  418817:	mov    al,ds:0x65249cbb
  41881c:	pop    es
  41881d:	xor    BYTE PTR [edi],bl
  41881f:	cmp    edx,esp
  418821:	mov    ds:0x7453364c,al
  418826:	call   0x5fef54ca
  41882b:	mov    ebp,DWORD PTR [edx]
  41882d:	(bad)  
  41882e:	jge    0x41885a
  418830:	mov    BYTE PTR [ecx],cl
  418832:	inc    esp
  418833:	inc    esi
  418834:	mov    bl,0x21
  418836:	nop
  418837:	dec    ebp
  418838:	fcomp  DWORD PTR [ecx]
  41883a:	test   eax,0x9972e90a
  41883f:	dec    esi
  418840:	into   
  418841:	mov    ds:0x3895e1f8,eax
  418846:	fnstsw ax
  418848:	arpl   WORD PTR [ecx],si
  41884a:	ret    
  41884b:	mov    eax,ds:0xaa06b456
  418851:	out    0xb0,eax
  418853:	sbb    dh,ch
  418855:	inc    eax
  418856:	rcl    DWORD PTR [eax-0x9056863],0x87
  41885d:	and    esi,DWORD PTR [ebx+esi*1-0x20]
  418861:	dec    edx
  418862:	push   edx
  418863:	push   ss
  418864:	call   0x6a2c8d26
  418869:	or     edi,DWORD PTR [edi+0x78]
  41886c:	inc    esp
  41886d:	adc    BYTE PTR [edx+edx*4],dl
  418870:	pop    eax
  418871:	adc    bh,BYTE PTR [ebp+0x2ec909c]
  418877:	sub    ah,BYTE PTR [edi+0x3b]
  41887a:	out    dx,al
  41887b:	in     al,dx
  41887c:	(bad)  
  41887d:	aad    0xc9
  41887f:	sbb    al,0xaf
  418881:	hlt    
  418882:	xchg   ebx,eax
  418883:	xchg   ebx,eax
  418884:	pop    ebx
  418885:	mov    ebx,0xca0ce33b
  41888a:	retf   0x4204
  41888d:	repz int 0xae
  418890:	(bad)  
  418891:	cli    
  418892:	popa   
  418893:	(bad)  
  418894:	addr16 inc edx
  418896:	push   0xffffffa2
  418898:	repz daa 
  41889a:	mov    ds:0x99598dd,al
  41889f:	jnp    0x4188fd
  4188a1:	xchg   edi,eax
  4188a2:	inc    ebp
  4188a3:	fmul   st(4),st
  4188a5:	jmp    0x6e6c:0xcb2b969c
  4188ac:	int    0x14
  4188ae:	fsub   QWORD PTR [ecx+0x7e]
  4188b1:	or     BYTE PTR [esi],0xe6
  4188b4:	fsubr  QWORD PTR [ebp+0x3]
  4188b7:	lahf   
  4188b8:	invd   
  4188ba:	mov    eax,0x4d22fe36
  4188bf:	sbb    ecx,DWORD PTR [eax-0x4b]
  4188c2:	sub    ah,dh
  4188c4:	stos   BYTE PTR es:[edi],al
  4188c5:	mov    ds:0xb0dd5652,al
  4188ca:	sbb    ebp,ecx
  4188cc:	inc    edi
  4188cd:	xor    al,BYTE PTR [ecx+0x1ff48234]
  4188d3:	push   esi
  4188d4:	test   al,0x4c
  4188d6:	push   ebp
  4188d7:	bound  esp,QWORD PTR [edi+0x16]
  4188da:	push   ebx
  4188db:	hlt    
  4188dc:	ja     0x418929
  4188de:	(bad)  [ecx+0x6291aadb]
  4188e4:	inc    eax
  4188e5:	pop    ecx
  4188e6:	jle    0x418930
  4188e8:	repnz sbb eax,0x60d9f622
  4188ee:	mov    bl,0x7c
  4188f0:	repnz push ebp
  4188f2:	push   esi
  4188f3:	sbb    dl,BYTE PTR [ecx+ecx*1+0x182e0237]
  4188fa:	adc    DWORD PTR [edx],ebp
  4188fc:	fdivr  QWORD PTR [esi-0x16]
  4188ff:	pop    es
  418900:	(bad)  
  418901:	mov    ch,0xe4
  418903:	push   ebx
  418904:	push   es
  418905:	ss daa 
  418907:	(bad)  
  418908:	lock cmc 
  41890a:	scas   al,BYTE PTR es:[edi]
  41890b:	pop    es
  41890c:	(bad)  [edx-0x28]
  41890f:	loope  0x41892a
  418911:	std    
  418912:	cmc    
  418913:	and    eax,0xbdc24d2f
  418918:	ja     0x418919
  41891a:	ror    DWORD PTR [eax-0x678f24b5],0xef
  418921:	cld    
  418922:	mov    ?,WORD PTR [eax-0x71eeee2b]
  418928:	xchg   ebp,eax
  418929:	out    dx,eax
  41892a:	dec    ecx
  41892b:	sub    ah,0xb
  41892e:	and    DWORD PTR [esi],ebp
  418930:	adc    DWORD PTR [edx],ebx
  418932:	int    0xc0
  418934:	pop    es
  418935:	(bad)  [ecx-0x72e40685]
  41893b:	in     eax,dx
  41893c:	mov    dh,0x8a
  41893e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41893f:	mov    BYTE PTR [esi+0x9],cl
  418942:	pop    ds
  418943:	mov    ds:0x3a1fd18,al
  418948:	loop   0x41898a
  41894a:	in     al,0x3b
  41894c:	retf   0x7fac
  41894f:	leave  
  418950:	mov    ds:0xcfe4f3e8,al
  418955:	nop
  418956:	xlat   BYTE PTR ds:[ebx]
  418957:	sub    DWORD PTR [edx],edx
  418959:	ficomp DWORD PTR [ecx]
  41895b:	into   
  41895c:	in     eax,dx
  41895d:	add    DWORD PTR [edx+0x43],ebp
  418960:	cmp    cl,bl
  418962:	and    DWORD PTR [ebx],edi
  418964:	rcr    DWORD PTR [ecx+0x6e],1
  418967:	xor    eax,0xd1b5adef
  41896c:	or     al,0xb9
  41896e:	test   BYTE PTR [edi+0x29],0x1d
  418972:	and    BYTE PTR [esp+edx*4-0x35],dl
  418976:	xchg   edi,eax
  418977:	mov    edx,0xdb43f5ac
  41897c:	xchg   ebp,eax
  41897d:	xchg   ecx,eax
  41897e:	outs   dx,DWORD PTR ds:[esi]
  41897f:	jg     0x418922
  418981:	push   ss
  418982:	or     bh,BYTE PTR [ecx+0x66]
  418985:	jnp    0x418962
  418987:	pusha  
  418988:	dec    edx
  418989:	sbb    eax,0xd123339b
  41898e:	fdivr  st(7),st
  418990:	shr    ebp,cl
  418992:	cmp    dh,BYTE PTR [esi+eiz*2]
  418995:	in     al,0x81
  418997:	ror    ch,0x97
  41899a:	xchg   ecx,eax
  41899b:	and    BYTE PTR [eax+0x52],dh
  41899e:	xchg   ecx,eax
  41899f:	das    
  4189a0:	mov    ah,0x37
  4189a2:	mov    esi,0x243e6bab
  4189a7:	scas   al,BYTE PTR es:[edi]
  4189a8:	cmc    
  4189a9:	cmp    dl,BYTE PTR [eax+0x405aaa7f]
  4189af:	xchg   edi,eax
  4189b0:	push   ebp
  4189b1:	test   DWORD PTR [ebx],ebp
  4189b3:	inc    esi
  4189b4:	mov    edx,0x8b473fa6
  4189b9:	inc    esi
  4189ba:	out    dx,al
  4189bb:	or     al,0x89
  4189bd:	mov    DWORD PTR [eax+0x54ef4cc1],esi
  4189c3:	mov    eax,0x3fd7b89b
  4189c8:	mov    ebx,0x3e336b07
  4189cd:	xchg   esi,eax
  4189ce:	std    
  4189cf:	mov    dl,0xa8
  4189d1:	pop    ds
  4189d2:	stos   DWORD PTR es:[edi],eax
  4189d3:	(bad)  
  4189d4:	ds cs leave 
  4189d7:	xor    al,0x9a
  4189d9:	call   0x9203:0x66c2f1de
  4189e0:	xor    bh,BYTE PTR [esp+ecx*2+0x958cedd]
  4189e7:	in     eax,0xa1
  4189e9:	fistp  WORD PTR [ecx-0x72039ad9]
  4189ef:	and    ch,0xdc
  4189f2:	pshufw mm6,QWORD PTR [ebx-0x6777179f],0x4e
  4189fa:	jb     0x41897c
  4189fc:	shl    BYTE PTR [edx-0x51eb8f2],1
  418a02:	int3   
  418a03:	add    BYTE PTR [ebx-0x51],al
  418a06:	xor    eax,0xae0447d7
  418a0b:	lahf   
  418a0c:	xchg   edx,eax
  418a0d:	push   0xffffff89
  418a0f:	mov    dl,0xa1
  418a11:	xchg   esi,eax
  418a12:	(bad)  
  418a13:	icebp  
  418a14:	jnp    0x4189cb
  418a16:	push   ecx
  418a17:	lods   eax,DWORD PTR ds:[esi]
  418a18:	mov    ecx,0x47f64fcd
  418a1d:	and    DWORD PTR [ecx],edx
  418a1f:	dec    esp
  418a20:	es in  eax,0x6f
  418a23:	jb     0x4189f1
  418a25:	pop    esi
  418a26:	(bad)  
  418a28:	fimul  DWORD PTR [ebp-0x14]
  418a2b:	cdq    
  418a2c:	mov    eax,ds:0xa185f19c
  418a31:	jbe    0x4189cc
  418a33:	mov    al,0x86
  418a35:	pop    ebx
  418a36:	fsubr  st,st(1)
  418a38:	add    DWORD PTR [edx],ebx
  418a3a:	mov    ds:0xe50c9bb5,al
  418a3f:	push   0xffffffcf
  418a41:	hlt    
  418a42:	data16 fidiv WORD PTR [ebx-0x1e1789a4]
  418a49:	gs and eax,0x19cd3c6a
  418a4f:	aaa    
  418a50:	mov    bl,al
  418a52:	and    dh,0xa0
  418a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a56:	and    ebx,DWORD PTR [eax]
  418a58:	inc    ebx
  418a59:	sub    eax,edx
  418a5b:	xchg   edi,eax
  418a5c:	cmp    eax,0xe03f8625
  418a61:	lea    ebp,[edx-0x1d]
  418a64:	loop   0x418a2c
  418a66:	leave  
  418a67:	sti    
  418a68:	add    BYTE PTR [edi+0x6],dl
  418a6b:	shr    BYTE PTR [ebx-0x136c4185],1
  418a71:	and    al,0x8d
  418a73:	bound  edi,QWORD PTR [esi+esi*4]
  418a76:	cmc    
  418a77:	rol    eax,0x89
  418a7a:	mov    cl,0x6c
  418a7c:	inc    edx
  418a7d:	lea    ebp,[edi-0x74169aa9]
  418a83:	ret    0x6d2e
  418a86:	xor    BYTE PTR [ebp+0x7161512a],dh
  418a8c:	fwait
  418a8d:	lea    si,[edi+ebp*1]
  418a91:	repnz shl al,0x19
  418a95:	or     ecx,DWORD PTR [edx+edi*2-0x4e]
  418a99:	cli    
  418a9a:	push   ds
  418a9b:	cs aam 0x8c
  418a9e:	or     esp,DWORD PTR [ecx+0x6]
  418aa1:	outs   dx,BYTE PTR ds:[esi]
  418aa2:	retf   0x3200
  418aa5:	fstp   st(0)
  418aa7:	fwait
  418aa8:	cli    
  418aa9:	mov    WORD PTR [eax+0x5e341c1],?
  418aaf:	in     eax,dx
  418ab0:	out    dx,al
  418ab1:	ror    ch,1
  418ab3:	ja     0x418a5a
  418ab5:	mov    esp,DWORD PTR [eax]
  418ab7:	cmc    
  418ab8:	mov    edi,0x796bd74
  418abd:	xchg   ecx,eax
  418abe:	cdq    
  418abf:	push   es
  418ac0:	mov    ds,WORD PTR [ebp*8-0x52a83fbe]
  418ac7:	or     al,0xc6
  418ac9:	mov    ecx,0xf750c671
  418ace:	fld    DWORD PTR [ebx]
  418ad0:	stc    
  418ad1:	push   esi
  418ad2:	inc    esp
  418ad3:	or     esp,DWORD PTR [ecx+0x4f]
  418ad6:	mov    bl,BYTE PTR [esi]
  418ad8:	lea    ebp,[eax]
  418ada:	test   BYTE PTR ss:[esi],bl
  418add:	jae    0x418b3d
  418adf:	pusha  
  418ae0:	js     0x418b06
  418ae2:	adc    eax,0xd63e3308
  418ae7:	xchg   BYTE PTR [ebp+0x79],bl
  418aea:	out    dx,al
  418aeb:	es ins BYTE PTR es:[edi],dx
  418aed:	cmp    eax,0xeb601735
  418af2:	pop    es
  418af3:	add    edx,0x557018cb
  418af9:	dec    edi
  418afa:	push   cs
  418afb:	xlat   BYTE PTR ds:[ebx]
  418afc:	arpl   WORD PTR [ecx],bx
  418afe:	or     dl,BYTE PTR [edx-0x29]
  418b01:	fwait
  418b02:	dec    edi
  418b03:	call   0x8276c5e4
  418b08:	xchg   DWORD PTR [ecx],ebx
  418b0a:	js     0x418b35
  418b0c:	and    eax,0x9ef6ad94
  418b11:	jo     0x418b3b
  418b13:	rol    BYTE PTR [ebx],1
  418b15:	daa    
  418b16:	rsm    
  418b18:	jle    0x418b43
  418b1a:	cmp    BYTE PTR [ebp-0x3c],0xca
  418b1e:	or     edx,ecx
  418b20:	mov    edi,DWORD PTR [ebp+eax*8+0x216edc33]
  418b27:	in     eax,dx
  418b28:	dec    ebp
  418b29:	add    al,0x38
  418b2b:	arpl   WORD PTR [eax],si
  418b2d:	adc    BYTE PTR [edi+0x17],cl
  418b30:	call   0x55cc5f5c
  418b35:	sub    eax,0xb8922a28
  418b3a:	jbe    0x418b8e
  418b3c:	add    ebx,0xd4dd89d
  418b42:	popf   
  418b43:	dec    ebp
  418b44:	sbb    DWORD PTR [eax-0x19],edi
  418b47:	xor    dh,BYTE PTR [edx+0x44bf35d0]
  418b4d:	(bad)  
  418b4e:	mov    al,0x8b
  418b50:	cmp    BYTE PTR [edx+0x13b16959],dl
  418b56:	push   edx
  418b57:	icebp  
  418b58:	je     0x418b47
  418b5a:	aaa    
  418b5b:	ins    DWORD PTR es:[edi],dx
  418b5c:	pop    es
  418b5d:	repz cmp esi,edi
  418b60:	push   ecx
  418b61:	pop    eax
  418b62:	addr16 xchg ebp,eax
  418b64:	xchg   ebx,eax
  418b65:	das    
  418b66:	std    
  418b67:	test   DWORD PTR [ebx+0xb],edx
  418b6a:	or     DWORD PTR [esi+0x8],0xdbd908b8
  418b71:	rcl    BYTE PTR [esi-0xfe68c8c],0xe2
  418b78:	dec    esp
  418b79:	les    ecx,FWORD PTR [eax-0xf]
  418b7c:	dec    ebx
  418b7d:	dec    eax
  418b7e:	dec    esi
  418b7f:	mov    esi,0x3f046b8b
  418b84:	hlt    
  418b85:	mov    dl,0x8e
  418b87:	js     0x418b98
  418b89:	das    
  418b8a:	inc    ebp
  418b8b:	leave  
  418b8c:	sbb    BYTE PTR [edi+0x5c],al
  418b8f:	int3   
  418b90:	popw   ds
  418b92:	mov    ecx,0xb64e4132
  418b97:	scas   al,BYTE PTR es:[edi]
  418b98:	(bad)  
  418b99:	icebp  
  418b9a:	imul   esp,ebx,0xffffffcd
  418b9d:	push   ss
  418b9e:	lds    ebx,FWORD PTR [ebx]
  418ba0:	mov    DWORD PTR [ebx+0x62],ebx
  418ba3:	add    esp,DWORD PTR [ecx+0x4c]
  418ba6:	sub    al,0x31
  418ba8:	or     al,0x55
  418baa:	fnsave [edx+0x7e]
  418bad:	addr16 dec esi
  418baf:	(bad)  
  418bb0:	pop    esi
  418bb1:	call   0xdbc4:0xe3734153
  418bb8:	push   esi
  418bb9:	mov    ebx,esp
  418bbb:	rcr    DWORD PTR [ebx],cl
  418bbd:	fwait
  418bbe:	out    dx,eax
  418bbf:	shr    DWORD PTR [esi],1
  418bc1:	out    dx,eax
  418bc2:	cmc    
  418bc3:	sub    ecx,DWORD PTR [ecx-0x20]
  418bc6:	inc    ecx
  418bc7:	or     al,ch
  418bc9:	pusha  
  418bca:	pop    esp
  418bcb:	mov    ?,WORD PTR [eax]
  418bcd:	jb     0x418bc3
  418bcf:	adc    ecx,eax
  418bd1:	and    BYTE PTR [edi-0x5fb99483],ch
  418bd7:	cdq    
  418bd8:	ret    
  418bd9:	std    
  418bda:	fs push ebp
  418bdc:	repnz cld 
  418bde:	movs   DWORD PTR es:[di],DWORD PTR cs:[si]
  418be1:	xchg   esi,eax
  418be2:	or     DWORD PTR [edi-0x14e8bdad],ebx
  418be8:	les    edi,FWORD PTR [ebx]
  418bea:	in     eax,dx
  418beb:	inc    edi
  418bec:	das    
  418bed:	cmp    BYTE PTR [ebp+0x1c],ah
  418bf0:	fadd   QWORD PTR [esi-0x28d03def]
  418bf6:	and    al,0x28
  418bf8:	or     BYTE PTR [ecx+0x17dbd2c6],0xdb
  418bff:	fimul  WORD PTR [edx+0x6aa61a52]
  418c05:	das    
  418c06:	push   edx
  418c07:	mov    ds:0xf894a378,al
  418c0c:	lahf   
  418c0d:	retf   0xcf08
  418c10:	bnd ret 
  418c12:	fadd   DWORD PTR [ebx-0x7f]
  418c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c16:	lea    ebx,[esi-0x95fc659]
  418c1c:	sub    esp,DWORD PTR [ebx]
  418c1e:	clc    
  418c1f:	lods   eax,DWORD PTR ds:[esi]
  418c20:	sbb    BYTE PTR [ebx+0x3a740128],dh
  418c26:	jnp    0x418c0e
  418c28:	daa    
  418c29:	loopne 0x418ca9
  418c2b:	pop    esp
  418c2c:	push   ebp
  418c2d:	int    0xc1
  418c2f:	jmp    0x418c34
  418c31:	fisttp WORD PTR [eax-0x33]
  418c34:	adc    dh,BYTE PTR [ebx-0x51]
  418c37:	jae    0x418c5d
  418c39:	mov    cl,0x83
  418c3b:	repz inc eax
  418c3d:	pop    ebp
  418c3e:	data16 mov bh,0xc1
  418c41:	inc    ecx
  418c42:	add    ebp,DWORD PTR [edi]
  418c44:	js     0x418c27
  418c46:	inc    ecx
  418c47:	pop    eax
  418c48:	(bad)  
  418c49:	mov    ebx,0xa2ff5bf4
  418c4e:	jmp    0xfad3:0xb71df01a
  418c55:	pop    ebx
  418c56:	aam    0xc0
  418c58:	and    al,0x3f
  418c5a:	pop    ds
  418c5b:	test   bh,bh
  418c5d:	imul   edi,DWORD PTR [edi+0x6],0x6290a5db
  418c64:	pop    esi
  418c65:	enter  0xd56b,0xde
  418c69:	call   0xa1a4709f
  418c6e:	push   eax
  418c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c70:	sbb    DWORD PTR [ebx-0x10],ebp
  418c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c74:	data16 hlt 
  418c76:	mov    eax,0x1a2ce058
  418c7b:	pushf  
  418c7c:	pusha  
  418c7d:	jg     0x418c78
  418c7f:	add    DWORD PTR [esi-0x2df50df3],edx
  418c85:	test   BYTE PTR [eax+edi*1],bh
  418c88:	jne    0x418c6c
  418c8a:	dec    esi
  418c8b:	fstp   QWORD PTR ds:[ecx+0x32]
  418c8f:	sub    eax,0xc04c6c5
  418c94:	inc    esi
  418c95:	shr    DWORD PTR [ecx],0xcc
  418c98:	out    dx,eax
  418c99:	push   es
  418c9a:	push   ds
  418c9b:	xor    BYTE PTR [eax+0x12],ch
  418c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c9f:	push   edi
  418ca0:	call   edi
  418ca2:	sub    ecx,0x72
  418ca5:	ins    BYTE PTR es:[edi],dx
  418ca6:	mov    ah,0xfa
  418ca8:	fimul  DWORD PTR ds:0x403fd5f8
  418cae:	jmp    0x6c64:0x20eb4687
  418cb5:	scas   eax,DWORD PTR es:[edi]
  418cb6:	mov    BYTE PTR [ebx+0x3e45c3fa],0xd7
  418cbd:	enter  0x2174,0x84
  418cc1:	mov    DWORD PTR [ebx+eiz*1-0x17],ebx
  418cc5:	fnsave [ebx+0x519aac8f]
  418ccb:	test   BYTE PTR [ebp-0x32],0x6c
  418ccf:	and    ch,0xeb
  418cd2:	std    
  418cd3:	sub    eax,0x8d43497f
  418cd8:	js     0x418ce1
  418cda:	xlat   BYTE PTR ds:[ebx]
  418cdb:	sub    edi,DWORD PTR [edi-0x6d]
  418cde:	push   cs
  418cdf:	mov    ah,0x20
  418ce1:	pushf  
  418ce2:	int3   
  418ce3:	cdq    
  418ce4:	cs sub al,0x89
  418ce7:	fldcw  WORD PTR [edi-0x242c4c89]
  418ced:	shl    DWORD PTR [eax],cl
  418cef:	and    DWORD PTR [ecx],edi
  418cf1:	mov    ebp,esi
  418cf3:	pop    edi
  418cf4:	(bad)  
  418cf5:	pop    esi
  418cf6:	out    dx,eax
  418cf7:	inc    eax
  418cf8:	and    al,0x7a
  418cfa:	sub    DWORD PTR [ecx+0x3e65fc9f],0xffffff8e
  418d01:	mov    ebx,0x4c745e8a
  418d06:	jp     0x418cd1
  418d08:	sbb    DWORD PTR [ecx-0x5aca708f],0xb1c96f46
  418d12:	(bad)  
  418d13:	adc    DWORD PTR [eax],esp
  418d15:	sbb    al,0x4c
  418d17:	jae    0x418d05
  418d19:	push   edi
  418d1a:	and    dh,bl
  418d1c:	out    dx,al
  418d1d:	xchg   BYTE PTR [ebp+0x5f388b90],cl
  418d23:	iret   
  418d24:	mov    esp,0xe037348e
  418d29:	mov    edi,0xd99365c3
  418d2e:	sub    DWORD PTR [ebx-0x6fb7686b],edx
  418d34:	adc    ah,BYTE PTR [edi]
  418d36:	inc    edx
  418d37:	pushf  
  418d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d39:	fnsave [edx]
  418d3b:	add    BYTE PTR ss:[edi-0x42833b22],cl
  418d42:	mov    gs,WORD PTR [eax]
  418d44:	mov    cl,0x73
  418d46:	int3   
  418d47:	adc    eax,DWORD PTR [eax+0x4f]
  418d4a:	repz add esi,esp
  418d4d:	mov    bl,0xc4
  418d4f:	ss call 0xf2181495
  418d55:	xchg   ebx,eax
  418d56:	xor    BYTE PTR [edi+0x76],cl
  418d59:	jo     0x418d26
  418d5b:	push   ss
  418d5c:	and    al,0xda
  418d5e:	pop    ds
  418d5f:	repz jge 0x418d1c
  418d62:	jns    0x418d48
  418d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d65:	call   0x74850504
  418d6a:	sub    BYTE PTR [edi],dl
  418d6c:	mov    ebx,0xde7dedd9
  418d71:	icebp  
  418d72:	inc    edi
  418d73:	adc    edx,ecx
  418d75:	fidiv  DWORD PTR [ebx]
  418d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d78:	cmp    DWORD PTR [eax+0x64],esp
  418d7b:	push   ss
  418d7c:	cli    
  418d7d:	aad    0x13
  418d7f:	dec    edi
  418d80:	or     eax,0x7901d632
  418d85:	mov    edx,0x82622d0c
  418d8a:	je     0x418dea
  418d8c:	dec    ebx
  418d8d:	add    BYTE PTR [edx-0x64],ch
  418d90:	cmp    esp,DWORD PTR [edi+0x66]
  418d93:	jg     0x418dd2
  418d95:	rcl    BYTE PTR [edx-0x4715d3a6],0xba
  418d9c:	mov    ebp,edx
  418d9e:	pop    ss
  418d9f:	inc    ecx
  418da0:	mov    ebp,0x5ca5adf
  418da5:	mov    edi,0xe022a145
  418daa:	stos   DWORD PTR es:[edi],eax
  418dab:	pop    ecx
  418dac:	mov    edx,fs
  418dae:	cmp    eax,0x4ddaac19
  418db3:	dec    ebx
  418db4:	jmp    0x8004cf3b
  418db9:	lock retf 
  418dbb:	dec    ebp
  418dbc:	dec    eax
  418dbd:	retf   0xa491
  418dc0:	and    ecx,ecx
  418dc2:	mov    edx,0x8d128232
  418dc7:	call   0x752c:0xa6d2328b
  418dce:	mov    ch,BYTE PTR [ebx-0x45]
  418dd1:	mov    ds:0x639d5ae4,eax
  418dd6:	in     eax,0x8f
  418dd8:	push   eax
  418dd9:	push   0xf88d835c
  418dde:	cmp    ch,BYTE PTR [ebp+0x3]
  418de1:	ins    DWORD PTR es:[edi],dx
  418de2:	lds    edx,FWORD PTR [edx]
  418de4:	dec    BYTE PTR [edi-0x5b]
  418de7:	inc    esp
  418de8:	shl    DWORD PTR [edx+0x6],cl
  418deb:	jo     0x418e34
  418ded:	inc    edi
  418dee:	outs   dx,BYTE PTR ds:[esi]
  418def:	fld    TBYTE PTR [ebx+0x15]
  418df2:	daa    
  418df3:	inc    esi
  418df4:	inc    eax
  418df5:	xchg   ebx,eax
  418df6:	mov    dh,0x41
  418df8:	pop    es
  418df9:	leave  
  418dfa:	cld    
  418dfb:	dec    edx
  418dfc:	or     DWORD PTR [edi+0x4714e675],edx
  418e02:	int    0x7b
  418e04:	pop    edx
  418e05:	(bad)  
  418e06:	mov    ebp,0xed26958f
  418e0b:	jg     0x2136e05c
  418e11:	adc    al,0x1d
  418e13:	outs   dx,DWORD PTR ds:[esi]
  418e14:	repz into 
  418e16:	test   al,0xb9
  418e18:	iret   
  418e19:	pop    esp
  418e1a:	xchg   ecx,eax
  418e1b:	aaa    
  418e1c:	add    DWORD PTR [ebx],ebp
  418e1e:	add    BYTE PTR [ebx-0x5af4c910],ch
  418e24:	add    al,0x7a
  418e26:	xor    eax,0x7f933ec0
  418e2b:	xchg   ecx,eax
  418e2c:	xor    DWORD PTR ds:0x1a9b34ee,ecx
  418e32:	dec    esp
  418e33:	jno    0x418ddb
  418e35:	mov    ?,WORD PTR [ecx]
  418e37:	test   BYTE PTR [eax],ah
  418e39:	and    eax,0x1ea0b084
  418e3e:	and    al,0x2e
  418e40:	data16 adc BYTE PTR [edi+0x7fac830],dl
  418e47:	xor    al,0x0
  418e49:	sub    ch,bl
  418e4b:	cmp    al,dh
  418e4d:	cmc    
  418e4e:	imul   ebp,DWORD PTR [ebx+0x7d57c710],0x5885668b
  418e58:	sbb    DWORD PTR [esi+0x5e65c60c],0x6f9fe2b
  418e62:	adc    DWORD PTR [ecx+0x346b8c2a],ecx
  418e68:	cmp    eax,0xcc9f5a47
  418e6d:	jno    0x418e0c
  418e6f:	cli    
  418e70:	in     eax,0xc6
  418e72:	inc    edi
  418e73:	test   al,0x2e
  418e75:	(bad)  
  418e77:	or     DWORD PTR [ecx+0x2459abaa],ebp
  418e7d:	dec    ebp
  418e7e:	mov    esp,0x484a5800
  418e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e84:	ins    BYTE PTR es:[edi],dx
  418e85:	enter  0xde74,0x71
  418e89:	pop    ebp
  418e8a:	pop    esp
  418e8b:	adc    BYTE PTR [edx+0x55],cl
  418e8e:	push   eax
  418e8f:	addr16 or eax,edi
  418e92:	(bad)  
  418e93:	adc    ebp,DWORD PTR [ebp+0x1a]
  418e96:	loope  0x418f09
  418e98:	push   esp
  418e99:	mov    ah,0xe9
  418e9b:	pushf  
  418e9c:	jb     0x418eee
  418e9e:	xchg   edi,eax
  418e9f:	fidiv  DWORD PTR [edi]
  418ea1:	ret    
  418ea2:	dec    esp
  418ea3:	pop    edx
  418ea4:	mov    esp,DWORD PTR [eax-0x7373fe5e]
  418eaa:	push   esi
  418eab:	add    al,0xd
  418ead:	(bad)  
  418eaf:	jecxz  0x418e31
  418eb1:	call   0xec4be1a5
  418eb6:	jo     0x418e52
  418eb8:	and    eax,DWORD PTR [edx]
  418eba:	inc    ebx
  418ebb:	mov    ebx,0x855a1985
  418ec0:	in     eax,0x7
  418ec2:	outs   dx,DWORD PTR ds:[esi]
  418ec3:	(bad)  
  418ec4:	jne    0x418f0d
  418ec6:	out    dx,al
  418ec7:	(bad)  
  418ec8:	(bad)  
  418ec9:	sbb    DWORD PTR [ecx+0x6cb83ce9],eax
  418ecf:	cli    
  418ed0:	test   DWORD PTR [eax-0x2ad2d331],esp
  418ed6:	push   0x8c2a1d38
  418edb:	fwait
  418edc:	xchg   ebx,eax
  418edd:	pusha  
  418ede:	mov    WORD PTR [ebx+eax*1+0x9685a7d],es
  418ee5:	xor    BYTE PTR [ebp+0x39],ch
  418ee8:	mov    cl,BYTE PTR [ebx+0x52a5da02]
  418eee:	mov    cl,0x31
  418ef0:	imul   esi,esi,0xd
  418ef3:	or     eax,0xc0f16fc
  418ef8:	xor    eax,0x20472b6b
  418efd:	or     eax,0x39daa0a1
  418f02:	pushf  
  418f03:	add    ecx,esi
  418f05:	and    DWORD PTR [ebx-0xf],edi
  418f08:	add    dh,bh
  418f0a:	test   DWORD PTR [ecx],esp
  418f0c:	aad    0x1c
  418f0e:	cmc    
  418f0f:	dec    ebp
  418f10:	shl    DWORD PTR [eax],1
  418f12:	inc    eax
  418f13:	mov    bl,0xba
  418f15:	int    0x1a
  418f17:	scas   eax,DWORD PTR es:[edi]
  418f18:	ficomp DWORD PTR [edx]
  418f1a:	mov    ah,BYTE PTR [eax]
  418f1c:	fcmovnbe st,st(3)
  418f1e:	aad    0xd4
  418f20:	inc    edx
  418f21:	ins    BYTE PTR es:[edi],dx
  418f22:	aaa    
  418f23:	imul   edx,DWORD PTR [eax],0x65
  418f26:	fcmovnu st,st(4)
  418f28:	or     BYTE PTR [ebp+0x6c5daeee],cl
  418f2e:	jae    0x418ec3
  418f30:	adc    eax,0x7dba9449
  418f35:	cs adc bh,0x8d
  418f39:	xor    bl,bl
  418f3b:	fucomi st,st(0)
  418f3d:	xor    ah,dh
  418f3f:	int    0xc4
  418f41:	jno    0x418ed9
  418f43:	jbe    0x418ec5
  418f45:	cmp    al,0xcb
  418f47:	imul   esp,DWORD PTR [edi],0xb73ff8b4
  418f4d:	mov    ebp,0xc399340b
  418f52:	aaa    
  418f53:	mov    ebp,0x38ed4122
  418f58:	jmp    FWORD PTR [ebp+0x346439a]
  418f5e:	bound  ebx,QWORD PTR [ebp-0x6d]
  418f61:	(bad)  
  418f62:	inc    edx
  418f63:	inc    ebx
  418f64:	data16 loope 0x418f48
  418f67:	mov    edx,ss
  418f69:	and    esp,DWORD PTR [edx+0x3]
  418f6c:	ins    DWORD PTR es:[edi],dx
  418f6d:	add    DWORD PTR fs:[ebp+0x73],0xe648ef21
  418f75:	push   esp
  418f76:	leave  
  418f77:	lods   al,BYTE PTR ds:[esi]
  418f78:	mov    dh,0x3c
  418f7a:	rol    DWORD PTR [eax],1
  418f7c:	mov    edx,0x4af0d6df
  418f81:	mov    al,0x69
  418f83:	rcr    dh,0x2f
  418f86:	sbb    BYTE PTR [eax-0x5fd66312],ch
  418f8c:	adc    al,0x4d
  418f8e:	stc    
  418f8f:	cmp    eax,0x79ebfc6e
  418f94:	fist   DWORD PTR ds:0x99afb81e
  418f9a:	xchg   esi,eax
  418f9b:	sbb    DWORD PTR [esi],eax
  418f9d:	loopne 0x418fa6
  418f9f:	sar    DWORD PTR [ecx+eax*1+0x53],1
  418fa3:	fmul   st(5),st
  418fa5:	dec    ebx
  418fa6:	xor    BYTE PTR [eax+0x36],cl
  418fa9:	inc    eax
  418faa:	xchg   ebp,eax
  418fab:	in     al,0xa6
  418fad:	adc    ch,0xd4
  418fb0:	mov    ecx,0xce19f0a4
  418fb5:	sbb    dl,BYTE PTR [edx-0x59]
  418fb8:	mov    ah,0x83
  418fba:	int    0xed
  418fbc:	cld    
  418fbd:	adc    BYTE PTR [ebp-0x61],bh
  418fc0:	sbb    ebx,esi
  418fc2:	arpl   WORD PTR [eax+0x7],ax
  418fc5:	and    ah,0x9f
  418fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc9:	js     0x418fb1
  418fcb:	cwde   
  418fcc:	leave  
  418fcd:	fiadd  WORD PTR [esi]
  418fcf:	mov    esi,0xb0ec55ad
  418fd4:	mov    esp,0x8ee2201c
  418fd9:	(bad)  
  418fda:	cmc    
  418fdb:	(bad)
  418fdf:	and    edi,ebp
  418fe1:	xor    bl,BYTE PTR [ecx+0x77c34c48]
  418fe7:	sub    al,0xd9
  418fe9:	das    
  418fea:	xchg   bl,ch
  418fec:	push   esi
  418fed:	xchg   edx,eax
  418fee:	nop
  418fef:	pop    eax
  418ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff1:	fisub  DWORD PTR [ebx*8-0x19aeb8dd]
  418ff8:	xor    eax,0x5c7f023c
  418ffd:	add    eax,0x89d03a46
  419002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419003:	jmp    0x41900a
  419005:	in     al,dx
  419006:	xchg   esp,eax
  419007:	ss sbb eax,0x5accc4cb
  41900d:	test   ebx,esp
  41900f:	xor    al,BYTE PTR [eax+0x73]
  419012:	mov    edi,esp
  419014:	shl    BYTE PTR es:[ebp-0x5f381e7a],cl
  41901b:	clc    
  41901c:	pop    ebp
  41901d:	data16 je 0x419035
  419020:	and    eax,DWORD PTR [edx]
  419022:	and    esp,DWORD PTR [eax-0xf001898]
  419028:	call   0xdb0d:0xa9d587b9
  41902f:	or     al,cl
  419031:	(bad)  
  419032:	lods   eax,DWORD PTR ds:[esi]
  419033:	xor    ebp,ebp
  419035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419036:	xchg   ebx,eax
  419037:	pop    ds
  419038:	dec    eax
  419039:	adc    DWORD PTR [eax],edi
  41903b:	xor    esp,edx
  41903d:	mov    esi,0xe724aa19
  419042:	push   cs
  419043:	xchg   esp,eax
  419044:	popa   
  419045:	mov    edi,0x916897c2
  41904a:	dec    ecx
  41904b:	out    dx,al
  41904c:	and    eax,0x95cc29fa
  419051:	scas   al,BYTE PTR es:[edi]
  419052:	out    0x7f,al
  419054:	xor    DWORD PTR [eax-0x336749d3],esp
  41905a:	and    eax,0xebda9815
  41905f:	aad    0xc7
  419061:	push   0xffffffa9
  419063:	jle    0x419030
  419065:	leave  
  419066:	mov    bh,0xc7
  419068:	inc    ecx
  419069:	ins    DWORD PTR es:[edi],dx
  41906a:	rcr    BYTE PTR [ecx-0x47],0xac
  41906e:	or     al,0x12
  419070:	mov    ah,0x6c
  419072:	inc    eax
  419073:	scas   eax,DWORD PTR es:[edi]
  419074:	push   eax
  419075:	or     eax,0xb97e7c6d
  41907a:	or     esp,DWORD PTR [ebx+0x530fb1b8]
  419080:	and    ah,BYTE PTR [edi-0x4e8f2245]
  419086:	out    0x95,eax
  419088:	daa    
  419089:	loope  0x419087
  41908b:	fstp   DWORD PTR [ebx-0xb]
  41908e:	xchg   ebx,eax
  41908f:	stos   BYTE PTR es:[edi],al
  419090:	(bad)  
  419091:	jg     0x419059
  419093:	cmp    DWORD PTR [esi+0x778ab956],0x5c
  41909a:	fadd   QWORD PTR [ebp-0x4d]
  41909d:	or     dl,bl
  41909f:	jb     0x419052
  4190a1:	or     BYTE PTR [edi+0x1b],0xe9
  4190a5:	jle    0x419067
  4190a7:	sti    
  4190a8:	pusha  
  4190a9:	loopne 0x419107
  4190ab:	mov    edx,DWORD PTR [eax+0x7157880d]
  4190b1:	loop   0x419099
  4190b3:	xchg   DWORD PTR [edx],edi
  4190b5:	aaa    
  4190b6:	out    0x5d,al
  4190b8:	xor    eax,0x15edfbc4
  4190bd:	dec    ecx
  4190be:	test   DWORD PTR [ebp+0xebbac86],edi
  4190c4:	adc    bh,BYTE PTR [edi-0x3bd0ce88]
  4190ca:	xchg   esp,eax
  4190cb:	outs   dx,BYTE PTR ds:[esi]
  4190cc:	push   0x8c7f8003
  4190d1:	leave  
  4190d2:	cmp    BYTE PTR [ebx],dh
  4190d4:	aas    
  4190d5:	into   
  4190d6:	push   ebx
  4190d7:	fnsave [esi]
  4190d9:	test   al,0x9e
  4190db:	out    0x37,eax
  4190dd:	add    ah,bl
  4190df:	cwde   
  4190e0:	dec    ebx
  4190e1:	test   al,0x2b
  4190e3:	aad    0xc
  4190e5:	or     ebx,DWORD PTR [eax-0x4c803392]
  4190eb:	neg    BYTE PTR [esi+0x7e]
  4190ee:	daa    
  4190ef:	push   ebp
  4190f0:	sbb    eax,DWORD PTR [ebx+0x5b]
  4190f3:	pop    ebx
  4190f4:	paddsw mm5,QWORD PTR [esi+0x5d]
  4190f8:	cdq    
  4190f9:	(bad)  
  4190fa:	out    0x32,al
  4190fc:	repz icebp 
  4190fe:	sbb    edx,edi
  419100:	pushf  
  419101:	jmp    0x3e8b:0x413987ec
  419108:	inc    eax
  419109:	jmp    0xe2ab:0xe6a0a5e7
  419110:	adc    esp,DWORD PTR [ebx+edx*2]
  419113:	mov    ds:0x5b9b6c70,eax
  419118:	cld    
  419119:	ret    
  41911a:	inc    esi
  41911b:	xor    ebp,esp
  41911d:	or     DWORD PTR [esi+edi*4-0x3e],eax
  419121:	fistp  DWORD PTR ds:0x4eab98bf
  419127:	mov    ebp,0x6042e7ee
  41912c:	dec    edx
  41912d:	loope  0x419158
  41912f:	in     eax,dx
  419130:	jg     0x4190f7
  419132:	sub    BYTE PTR [ecx-0x3888c06b],ch
  419138:	and    esp,ebx
  41913a:	adc    DWORD PTR [ecx-0x12],edx
  41913d:	mov    gs:0x25670834,al
  419143:	ss adc dl,al
  419146:	xchg   ebp,eax
  419147:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419149:	out    0x7a,al
  41914b:	es gs xor al,0x69
  41914f:	or     BYTE PTR [ebx-0x5e],bh
  419152:	mov    ah,BYTE PTR [eax]
  419154:	xlat   BYTE PTR ds:[ebx]
  419155:	xchg   ebx,eax
  419156:	(bad)  
  419157:	pop    edi
  419158:	adc    al,0x73
  41915a:	(bad)
  41915d:	push   ebp
  41915e:	or     DWORD PTR [ecx],edx
  419160:	inc    ebx
  419161:	(bad)  ss:[esi+ebp*2+0x51]
  419166:	dec    ebp
  419167:	loopne 0x419140
  419169:	xchg   esp,eax
  41916a:	ins    BYTE PTR es:[edi],dx
  41916b:	cmc    
  41916c:	or     al,0x6b
  41916e:	les    esp,FWORD PTR [ebp+0x20]
  419171:	int    0x78
  419173:	lods   eax,DWORD PTR ds:[esi]
  419174:	sbb    DWORD PTR [edx-0x4a],ecx
  419177:	dec    edi
  419178:	dec    eax
  419179:	cmp    al,0x21
  41917b:	std    
  41917c:	shr    BYTE PTR [edx],1
  41917e:	fucomi st,st(3)
  419180:	adc    edx,edx
  419182:	(bad)  
  419183:	xor    al,al
  419185:	pop    ebx
  419186:	xor    BYTE PTR [eax-0x428e1dba],dh
  41918c:	shl    ah,cl
  41918e:	pop    esp
  41918f:	into   
  419190:	dec    eax
  419191:	add    ecx,DWORD PTR [edi*8+0x53ea2ea9]
  419198:	es in  eax,dx
  41919a:	stos   DWORD PTR es:[edi],eax
  41919b:	xor    BYTE PTR [eax],bl
  41919d:	xchg   DWORD PTR [ecx],esi
  41919f:	sub    BYTE PTR [edx],0x4c
  4191a2:	sbb    eax,0xf60985c1
  4191a7:	and    al,0x82
  4191a9:	jae    0x4191cd
  4191ab:	sbb    BYTE PTR [ecx],al
  4191ad:	repz ja 0x4191de
  4191b0:	xor    DWORD PTR [edx+0x1b460f35],ecx
  4191b6:	or     DWORD PTR [ecx],0x92b542d5
  4191bc:	cld    
  4191bd:	cld    
  4191be:	fidivr WORD PTR [ecx+0x1f]
  4191c1:	pop    ecx
  4191c2:	scas   eax,DWORD PTR es:[edi]
  4191c3:	xor    ecx,DWORD PTR [ecx-0x68e583e6]
  4191c9:	and    al,0x14
  4191cb:	test   DWORD PTR [ecx],edx
  4191cd:	push   ecx
  4191ce:	loopne 0x419232
  4191d0:	rcr    DWORD PTR [eax],0x24
  4191d3:	add    eax,0x2f119f8d
  4191d8:	add    al,0x8f
  4191da:	xchg   ecx,eax
  4191db:	nop
  4191dc:	(bad)  
  4191dd:	sub    al,0xdb
  4191df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191e0:	pop    esp
  4191e1:	fsub   DWORD PTR [ecx]
  4191e3:	retf   
  4191e4:	call   0x8fbe:0xfd35c8c3
  4191eb:	mov    ch,0xe2
  4191ed:	mov    ch,0xc0
  4191ef:	xor    BYTE PTR [edi],0x86
  4191f2:	cmp    DWORD PTR [ecx+0x1c4ae0be],ebx
  4191f8:	retf   
  4191f9:	add    al,0xad
  4191fb:	xchg   edi,eax
  4191fc:	push   ss
  4191fd:	shr    BYTE PTR [esi],1
  4191ff:	mov    eax,ds:0x18749e6f
  419204:	xchg   BYTE PTR [ebp+0x3139b2e9],bh
  41920a:	or     BYTE PTR [eax+0x68],cl
  41920d:	jge    0x41922c
  41920f:	lds    edi,FWORD PTR [edx+0x13]
  419212:	push   0x7765758a
  419217:	xor    DWORD PTR [edi+0x2ebb5095],ebx
  41921d:	xor    al,0x64
  41921f:	outs   dx,DWORD PTR ds:[esi]
  419220:	jae    0x41925e
  419222:	les    ebx,FWORD PTR [edx-0x2adfb4cb]
  419228:	ret    0x99ea
  41922b:	push   ebp
  41922c:	dec    eax
  41922d:	jne    0x419257
  41922f:	add    ecx,eax
  419231:	mov    ebp,0x66b94e74
  419236:	and    al,0xc6
  419238:	(bad)  
  419239:	int    0x8e
  41923b:	add    ebp,0x149810f4
  419241:	shl    DWORD PTR [ebx],0x24
  419244:	sub    BYTE PTR [esi],ah
  419246:	dec    ebp
  419247:	pop    es
  419248:	jmp    0xa9ed7a41
  41924d:	add    al,0xaa
  41924f:	(bad)  
  419250:	inc    ebp
  419251:	and    ch,BYTE PTR [eax]
  419253:	xor    eax,0x3094a77f
  419258:	jg     0x419214
  41925a:	sbb    BYTE PTR [edx+0x13],al
  41925d:	inc    esi
  41925e:	test   al,bh
  419260:	ins    BYTE PTR es:[edi],dx
  419261:	jbe    0x419240
  419263:	lods   eax,DWORD PTR ds:[esi]
  419265:	shr    BYTE PTR [edx],1
  419267:	mov    edi,0x567e81c8
  41926c:	scas   eax,DWORD PTR es:[edi]
  41926d:	call   0xe8df:0xf8260a70
  419274:	jg     0x419259
  419276:	popa   
  419277:	xor    BYTE PTR [edx+0x5a27547e],cl
  41927d:	out    dx,al
  41927e:	ins    DWORD PTR es:[edi],dx
  41927f:	pop    edx
  419280:	jmp    0x4192a1
  419282:	mov    eax,ds:0xef87e28a
  419287:	xor    ecx,DWORD PTR [esi-0x66]
  41928a:	repz lock pop esi
  41928d:	fild   DWORD PTR [eax+0x5ed4ef00]
  419293:	in     eax,dx
  419294:	test   eax,0x8644bb5
  419299:	and    al,0xc8
  41929b:	pop    eax
  41929c:	inc    esp
  41929d:	add    BYTE PTR [ebx-0x18],dl
  4192a0:	pop    ebx
  4192a1:	pop    DWORD PTR [esi]
  4192a3:	jp     0x419314
  4192a5:	pop    edx
  4192a6:	pop    edi
  4192a7:	je     0x419312
  4192a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192aa:	jne    0x419298
  4192ac:	stc    
  4192ad:	xchg   ebx,eax
  4192ae:	stos   BYTE PTR es:[edi],al
  4192af:	push   ss
  4192b0:	dec    ecx
  4192b1:	sbb    bh,BYTE PTR [ebp-0x1]
  4192b4:	adc    BYTE PTR [ebp+0x33],ch
  4192b7:	pop    esi
  4192b8:	lods   al,BYTE PTR ds:[esi]
  4192b9:	mov    dl,0x50
  4192bb:	sub    eax,0xae8b93b0
  4192c0:	xchg   esp,eax
  4192c1:	adc    cl,al
  4192c3:	bound  ebx,QWORD PTR [ebx+0x4a18db1e]
  4192c9:	sbb    edi,DWORD PTR [esp+ebp*4]
  4192cc:	retf   
  4192cd:	push   edx
  4192ce:	repz or eax,0x7d8e901b
  4192d4:	cmp    DWORD PTR [edx-0x63],ebp
  4192d7:	xor    eax,DWORD PTR [edi+0x35]
  4192da:	jmp    0x20610b3
  4192df:	sub    ebx,esp
  4192e1:	imul   ebx,DWORD PTR [edi+0x22],0x8983023
  4192e8:	pop    edx
  4192e9:	jmp    0x713c:0xf7278f92
  4192f0:	xor    BYTE PTR [ecx],bl
  4192f2:	jnp    0x419372
  4192f4:	cmp    BYTE PTR ds:0x53cca5ad,0xbd
  4192fb:	sbb    eax,0xbe754d79
  419300:	aas    
  419301:	sbb    al,BYTE PTR [edx]
  419303:	fs xchg ebx,eax
  419305:	(bad)  
  419306:	push   ecx
  419307:	mov    esi,esi
  419309:	dec    esp
  41930a:	or     esi,DWORD PTR [ecx+0x5e]
  41930d:	mov    ss,WORD PTR [eax]
  41930f:	xor    ebp,DWORD PTR [edx+0x55]
  419312:	mov    edi,0x9804faf5
  419317:	mov    bh,0x98
  419319:	ja     0x41930d
  41931b:	jae    0x4192c9
  41931d:	mov    dh,0xff
  41931f:	mov    BYTE PTR [esi-0x7013d397],dl
  419325:	in     al,dx
  419326:	cmc    
  419327:	jns    0x41936a
  419329:	push   edx
  41932a:	inc    eax
  41932b:	(bad)  
  41932e:	not    DWORD PTR [ebx-0x7119a35]
  419334:	sbb    dl,BYTE PTR [ecx]
  419336:	stos   DWORD PTR es:[edi],eax
  419337:	out    dx,al
  419338:	xor    DWORD PTR [edi+eax*4-0x59e72699],edx
  41933f:	loopne 0x41934b
  419341:	pop    eax
  419342:	jg     0x419393
  419344:	pop    edx
  419345:	push   ebx
  419346:	and    BYTE PTR [ebx-0x19035ae8],0xb0
  41934d:	pop    ecx
  41934e:	shl    DWORD PTR [esi],0xc7
  419351:	mov    al,ds:0x72f5b036
  419356:	add    edx,DWORD PTR [esi+0x7e]
  419359:	pop    eax
  41935a:	jecxz  0x419362
  41935c:	mov    ds:0x5141b73f,eax
  419361:	inc    eax
  419362:	and    BYTE PTR [edi+0x14159f46],0xe5
  419369:	mov    ds:0x830ee4dc,al
  41936e:	mov    al,0x3f
  419370:	fcmovnu st,st(5)
  419372:	sub    BYTE PTR [ecx-0x25],0xef
  419376:	js     0x4192fd
  419378:	enter  0x7803,0xf5
  41937c:	stos   BYTE PTR es:[edi],al
  41937d:	les    eax,FWORD PTR [ecx+ebx*2+0x53]
  419381:	pop    ecx
  419382:	jp     0x419312
  419384:	jbe    0x419349
  419386:	cmp    DWORD PTR [edx],edx
  419388:	xadd   esi,ebp
  41938b:	adc    bh,BYTE PTR [edx-0x5f403504]
  419391:	das    
  419392:	pop    eax
  419393:	loope  0x419358
  419395:	fisttp WORD PTR [ebx]
  419397:	pop    esp
  419398:	test   al,0xc3
  41939a:	jnp    0x41936e
  41939c:	leave  
  41939d:	call   0x29fdd222
  4193a2:	mov    DWORD PTR [ebx-0x36697b3f],eax
  4193a8:	and    esp,DWORD PTR [ebx+0x5bb1b52f]
  4193ae:	jmp    0x5650:0x9eede7df
  4193b5:	or     al,0x23
  4193b7:	cwde   
  4193b8:	jnp    0x4193db
  4193ba:	test   al,0x16
  4193bc:	mov    ah,0x2f
  4193be:	jno    0x419436
  4193c0:	mov    al,ds:0xf2d03362
  4193c5:	dec    edx
  4193c6:	ins    BYTE PTR es:[edi],dx
  4193c7:	lds    eax,FWORD PTR [edi+0x529de4dd]
  4193cd:	sbb    esp,DWORD PTR [edi+0x28508cac]
  4193d3:	adc    ebx,DWORD PTR [ebx]
  4193d5:	mov    ah,0xba
  4193d7:	pop    esi
  4193d8:	jnp    0x419394
  4193da:	or     eax,0xa6e4c038
  4193df:	pop    sp
  4193e1:	(bad)  
  4193e2:	mov    eax,0x30b2aadf
  4193e7:	jge    0x419446
  4193e9:	int3   
  4193ea:	sbb    BYTE PTR [ebx-0x75],bh
  4193ed:	ret    0x3402
  4193f0:	cli    
  4193f1:	imul   ecx,DWORD PTR [ebp+0x8],0x2d
  4193f5:	loope  0x419427
  4193f7:	add    BYTE PTR [ebp+eax*8-0xc],bl
  4193fb:	xchg   esp,eax
  4193fc:	repz xor DWORD PTR [edi],edx
  4193ff:	mov    eax,0xbc835fbb
  419404:	ret    
  419405:	ja     0x41946b
  419407:	aaa    
  419408:	fdiv   st(6),st
  41940a:	jg     0x419466
  41940c:	bound  ebx,QWORD PTR [esi]
  41940e:	pop    es
  41940f:	lods   eax,DWORD PTR ds:[esi]
  419410:	dec    esp
  419411:	xlat   BYTE PTR ds:[ebx]
  419412:	popa   
  419413:	mov    DWORD PTR [ecx+ebx*4-0x7e],ebx
  419417:	jbe    0x41945d
  419419:	sbb    esp,DWORD PTR [esi+esi*4-0x15]
  41941d:	mov    ch,0x63
  41941f:	and    edx,0xd
  419422:	test   DWORD PTR [ebx+0x47ba734b],edx
  419428:	mov    ds:0xcce5f564,eax
  41942d:	aas    
  41942e:	out    0x5a,eax
  419430:	stos   DWORD PTR es:[edi],eax
  419431:	sbb    bl,bl
  419433:	fcomp  DWORD PTR ss:0xc50c9a53
  41943a:	sub    eax,0xc53b7dff
  41943f:	call   0x127a:0xb19a4b75
  419446:	cmp    al,0xa4
  419448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419449:	dec    edx
  41944a:	jg     0x419424
  41944c:	aaa    
  41944d:	pop    ds
  41944e:	pop    es
  41944f:	mov    ds:0x8f865789,eax
  419454:	pop    edi
  419455:	fcomip st,st(2)
  419457:	push   0x46
  419459:	ret    0xbd49
  41945c:	dec    edi
  41945d:	sub    eax,0x1947126e
  419462:	scas   eax,DWORD PTR es:[edi]
  419463:	mov    ds:0x60afec8a,eax
  419468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419469:	call   0x8c5136f3
  41946e:	pop    es
  41946f:	fstp   DWORD PTR [ecx]
  419471:	cmp    eax,esi
  419473:	call   0x98a7:0xcfb44c29
  41947a:	push   0xffffff8f
  41947c:	add    BYTE PTR [ebx+0x7b],cl
  41947f:	inc    edi
  419480:	fisub  WORD PTR [eax+eiz*8]
  419483:	sbb    al,0x5a
  419485:	int3   
  419486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419487:	sbb    ah,BYTE PTR [edx]
  419489:	sbb    dh,0xcc
  41948c:	out    0x71,eax
  41948e:	mov    edx,DWORD PTR [edx+0x42e3ffc6]
  419494:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  419496:	fst    DWORD PTR [esi+0x490d168e]
  41949c:	lahf   
  41949d:	mov    edx,0x22940c13
  4194a2:	inc    ecx
  4194a3:	sti    
  4194a4:	mov    ch,0x7e
  4194a6:	adc    al,0x55
  4194a8:	pop    es
  4194a9:	push   ds
  4194aa:	sub    dh,BYTE PTR [ecx+0x22]
  4194ad:	ins    BYTE PTR es:[edi],dx
  4194ae:	mov    BYTE PTR [eax],dh
  4194b0:	push   ss
  4194b1:	imul   ebp,ebx,0xffffffd2
  4194b4:	sti    
  4194b5:	cmp    al,0x3e
  4194b7:	push   ss
  4194b8:	cmp    bh,ah
  4194ba:	jge    0x4194bf
  4194bc:	call   DWORD PTR [edx+0x46]
  4194bf:	dec    ecx
  4194c0:	icebp  
  4194c1:	mov    eax,0xf2fe73c0
  4194c6:	pusha  
  4194c7:	mov    dl,0x88
  4194c9:	test   al,0xe7
  4194cb:	in     al,0x1f
  4194cd:	stos   DWORD PTR es:[edi],eax
  4194ce:	mov    ebp,0x25d86c1b
  4194d3:	fidiv  WORD PTR gs:[ebx-0x7e053a08]
  4194da:	add    bl,BYTE PTR [edi+0x3cca5052]
  4194e0:	mov    edx,0x153dbaec
  4194e5:	ins    BYTE PTR es:[edi],dx
  4194e6:	xor    ecx,0x611f9d4f
  4194ec:	jb     0x4194ba
  4194ee:	idiv   DWORD PTR [ebp-0x79eca63b]
  4194f4:	test   BYTE PTR [ebp+ebx*4-0x6c],ah
  4194f8:	rol    DWORD PTR [edx-0x36],cl
  4194fb:	aam    0xfe
  4194fd:	(bad)  
  4194fe:	lock inc esi
  419500:	sahf   
  419501:	dec    esp
  419502:	sahf   
  419503:	adc    DWORD PTR [esi+0x70],ebx
  419506:	in     al,dx
  419507:	in     al,dx
  419508:	bound  ecx,QWORD PTR [edx+0x19]
  41950b:	xchg   BYTE PTR ds:0xe7784166,al
  419511:	push   ebp
  419512:	pushf  
  419513:	call   0xa0b18989
  419518:	mov    ch,0xbd
  41951a:	sbb    eax,0x916fd492
  41951f:	and    bl,al
  419521:	mov    edx,0x47368745
  419526:	xor    DWORD PTR [ebp-0x698aa60b],ecx
  41952c:	fisttp DWORD PTR [eax-0x68ef2f]
  419532:	imul   esp,DWORD PTR [esi],0xffffffd2
  419535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419536:	outs   dx,DWORD PTR ds:[esi]
  419537:	xor    DWORD PTR [edi-0x40],edx
  41953a:	mov    ch,0x29
  41953c:	es ret 
  41953e:	pop    ebp
  41953f:	lods   al,BYTE PTR gs:[esi]
  419541:	aaa    
  419542:	or     BYTE PTR [edx-0x18],0xa7
  419546:	or     BYTE PTR [edi+0x47a53d1c],cl
  41954c:	xlat   BYTE PTR ds:[ebx]
  41954d:	dec    ebx
  41954e:	jns    0x41953c
  419550:	mov    al,ds:0xafa1eed
  419555:	jb     0x41955a
  419557:	neg    DWORD PTR [eax-0x69e51fa0]
  41955d:	sub    DWORD PTR [eax+0x5f351ce3],eax
  419563:	lock mov dh,0x82
  419566:	or     BYTE PTR [edi+0x7ab2d0de],bl
  41956c:	cdq    
  41956d:	std    
  41956e:	mov    ecx,0x201a1ffa
  419573:	add    edi,DWORD PTR [ebx]
  419575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419576:	call   0xc328:0x45102a73
  41957d:	dec    esp
  41957e:	dec    ax
  419580:	dec    ecx
  419581:	mov    ds:0xde9b367,al
  419586:	enter  0xdf18,0xf6
  41958a:	out    dx,eax
  41958b:	xchg   edi,eax
  41958c:	nop
  41958d:	cld    
  41958e:	shl    BYTE PTR [edi+0xe],cl
  419591:	jecxz  0x419522
  419593:	jne    0x4195ca
  419595:	or     eax,0x59cd42dc
  41959a:	sub    cl,bl
  41959c:	mov    bh,0xc5
  41959e:	cmc    
  41959f:	popa   
  4195a0:	inc    eax
  4195a1:	into   
  4195a2:	in     eax,0xf7
  4195a4:	in     eax,0xc2
  4195a6:	mov    dh,0x1c
  4195a8:	and    esi,DWORD PTR [esi]
  4195aa:	jo     0x41954f
  4195ac:	cdq    
  4195ad:	(bad)  
  4195ae:	cmc    
  4195af:	add    al,0x5
  4195b1:	call   0x3d11d0d3
  4195b6:	(bad)  
  4195b7:	(bad)  
  4195b8:	out    dx,al
  4195b9:	or     bl,bl
  4195bb:	cld    
  4195bc:	es aas 
  4195be:	popa   
  4195bf:	adc    al,0xa3
  4195c1:	push   eax
  4195c2:	mov    al,ds:0xb4d37bd4
  4195c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c8:	inc    ebx
  4195c9:	aas    
  4195ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195cb:	inc    ebx
  4195cc:	mov    dh,0x65
  4195ce:	ins    DWORD PTR es:[edi],dx
  4195cf:	push   ebp
  4195d0:	fisttp DWORD PTR [esi+0x68b97223]
  4195d6:	int    0xb
  4195d8:	dec    edx
  4195d9:	xor    ch,BYTE PTR [esp+eax*4]
  4195dc:	loopne 0x41957f
  4195de:	add    cl,BYTE PTR [ecx+0x5223c6e9]
  4195e4:	outs   dx,DWORD PTR ds:[esi]
  4195e5:	(bad)  
  4195e6:	xor    al,0x6b
  4195e8:	push   eax
  4195e9:	sbb    esp,DWORD PTR [edi]
  4195eb:	mov    esi,0x77192dbf
  4195f0:	sbb    bl,bh
  4195f2:	hlt    
  4195f3:	push   ds
  4195f4:	jge    0x4195af
  4195f6:	or     al,0x68
  4195f8:	pop    ss
  4195f9:	fist   WORD PTR [eax]
  4195fb:	out    0x4a,al
  4195fd:	adc    DWORD PTR [ecx+ecx*2],0xffffffcb
  419601:	lds    ebp,FWORD PTR [eax-0x5173561e]
  419607:	nop
  419608:	repz inc esp
  41960a:	xor    DWORD PTR [ebx+esi*8],0xf4b74390
  419611:	jae    0x4195eb
  419613:	div    DWORD PTR [ecx-0xe6a4792]
  419619:	jecxz  0x4195a1
  41961b:	sub    DWORD PTR [eax+0x53],esi
  41961e:	xor    BYTE PTR [ecx+0x62e7f9f2],dl
  419624:	imul   ebp,DWORD PTR [edi],0x1330deb3
  41962a:	outs   dx,BYTE PTR ds:[esi]
  41962b:	push   ebp
  41962c:	push   0xe5d3d9cd
  419631:	loope  0x41964b
  419633:	clc    
  419634:	fwait
  419635:	xchg   ebx,eax
  419636:	jl     0x41964a
  419638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419639:	lock outs dx,BYTE PTR ds:[esi]
  41963b:	xchg   edi,eax
  41963c:	sub    bl,BYTE PTR [eax-0x7f]
  41963f:	pusha  
  419640:	mov    dh,0xb7
  419642:	adc    DWORD PTR [edi-0x7e9e2a9],ecx
  419648:	sub    al,0x84
  41964a:	js     0x419622
  41964c:	push   eax
  41964d:	je     0x41966a
  41964f:	cmp    al,0xfd
  419651:	mov    eax,ds:0x481b3e14
  419656:	mov    ebp,0x95c54c66
  41965b:	mov    ch,0xe
  41965d:	or     DWORD PTR [edi-0x42],ebx
  419660:	jae    0x4196cb
  419662:	aas    
  419663:	inc    edx
  419664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419665:	xlat   BYTE PTR ds:[ebx]
  419666:	iret   
  419667:	neg    DWORD PTR ds:0xe25e3d48
  41966d:	arpl   bp,di
  41966f:	pop    ebx
  419670:	xchg   DWORD PTR ds:[ecx+edx*2-0x292da0ee],edi
  419678:	xor    DWORD PTR [ebp+0x2ab565fb],ecx
  41967e:	push   edi
  41967f:	pop    edx
  419680:	stos   BYTE PTR es:[edi],al
  419681:	jmp    0xf5bac7e7
  419686:	dec    ecx
  419687:	pop    edi
  419688:	mov    al,0xa2
  41968a:	or     BYTE PTR [esi],ah
  41968c:	into   
  41968d:	pop    ss
  41968e:	(bad)  
  41968f:	fwait
  419690:	jmp    0x4dd:0x7bd97536
  419697:	clc    
  419698:	pushf  
  419699:	ret    0xd2f3
  41969c:	pop    ebp
  41969d:	push   0xffffffba
  41969f:	and    sp,WORD PTR [edx+0xd]
  4196a3:	in     al,dx
  4196a4:	out    dx,eax
  4196a5:	xchg   ebp,eax
  4196a6:	pop    eax
  4196a7:	pop    esi
  4196a8:	daa    
  4196a9:	mov    esi,0xbda1a032
  4196ae:	jb     0x419689
  4196b0:	js     0x419708
  4196b2:	fdivr  DWORD PTR ds:0x27ace2e4
  4196b8:	xchg   ecx,eax
  4196b9:	repnz pop ss
  4196bb:	and    dh,BYTE PTR [ebx+0x7718a028]
  4196c1:	gs xchg ebp,eax
  4196c3:	mov    ebp,0x29d1f44c
  4196c8:	int    0x81
  4196ca:	xchg   edi,eax
  4196cb:	mov    esi,DWORD PTR [edi+0x35]
  4196ce:	lea    ecx,[edi+0x73]
  4196d1:	xor    ebp,0x6294f83b
  4196d7:	adc    BYTE PTR [eax],ch
  4196d9:	xchg   edi,eax
  4196da:	xlat   BYTE PTR ds:[ebx]
  4196db:	mov    esi,DWORD PTR [esi+0x46f99efa]
  4196e1:	stos   DWORD PTR es:[edi],eax
  4196e2:	xchg   BYTE PTR [ebp-0x35],bh
  4196e5:	cmp    ebx,edi
  4196e7:	pushf  
  4196e8:	std    
  4196e9:	call   0x9050799d
  4196ee:	jmp    0x419706
  4196f0:	test   al,0xfd
  4196f2:	push   ds
  4196f3:	ins    DWORD PTR es:[edi],dx
  4196f4:	mov    edx,0xdc9f66aa
  4196f9:	cmc    
  4196fa:	jmp    0xd584:0x5534b502
  419701:	(bad)  
  419702:	call   0x8f368caf
  419707:	aam    0x8e
  419709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41970a:	push   ds
  41970b:	inc    eax
  41970c:	jmp    DWORD PTR [ecx]
  41970e:	shl    bh,1
  419710:	jns    0x41976d
  419712:	adc    ebp,DWORD PTR [edx]
  419714:	push   edx
  419715:	mov    bl,BYTE PTR [esi-0x62]
  419718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419719:	inc    eax
  41971a:	cmp    DWORD PTR [esp+edx*8],esi
  41971d:	dec    ebp
  41971e:	and    BYTE PTR [edi-0x4ddf6164],cl
  419724:	or     BYTE PTR [ecx+0x62],al
  419727:	sub    ebx,ecx
  419729:	pop    edi
  41972a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41972b:	out    0xa2,eax
  41972d:	sbb    edx,edi
  41972f:	bound  ecx,QWORD PTR [edx+0x363bd50c]
  419735:	xor    eax,0xa9ff1f0c
  41973a:	sahf   
  41973b:	dec    edx
  41973c:	inc    esi
  41973d:	inc    edi
  41973e:	pop    esp
  41973f:	idiv   BYTE PTR [eax-0x4]
  419742:	test   DWORD PTR [ecx+0x40c915fe],esi
  419748:	addr16 cli 
  41974a:	out    dx,eax
  41974b:	push   cs
  41974c:	push   edx
  41974d:	pushf  
  41974e:	xchg   BYTE PTR [esi+ebx*4+0x76],ah
  419752:	daa    
  419753:	mov    al,ds:0xe7cceccf
  419758:	jb     0x419765
  41975a:	jl     0x4197c3
  41975c:	sub    DWORD PTR [ebx+ebp*4+0x2a],edi
  419760:	dec    edx
  419761:	shr    BYTE PTR [esi],1
  419763:	cmp    eax,0x35188af2
  419768:	mov    ebx,0x5254079a
  41976d:	inc    edx
  41976e:	jne    0x419742
  419770:	enter  0x2d82,0x4b
  419774:	fbstp  TBYTE PTR [esi+0x5d916cb8]
  41977a:	dec    eax
  41977b:	cdq    
  41977c:	out    0xe2,al
  41977e:	(bad)  
  41977f:	and    ebx,DWORD PTR [ecx+0xb]
  419782:	fs inc ecx
  419784:	dec    ecx
  419785:	xchg   esi,eax
  419786:	mov    dh,0xff
  419788:	(bad)  
  419789:	fstp   QWORD PTR [ebx-0x49]
  41978c:	outs   dx,DWORD PTR ds:[esi]
  41978d:	test   ecx,edx
  41978f:	jle    0x419787
  419791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419792:	fnstsw ax
  419794:	or     BYTE PTR [edi-0x282eae00],al
  41979a:	mov    al,dh
  41979c:	fsubr  QWORD PTR [eax]
  41979f:	ret    
  4197a0:	repnz test BYTE PTR [ebp-0x7f],ch
  4197a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197a5:	fdivr  DWORD PTR [eax]
  4197a7:	pop    es
  4197a8:	lea    eax,[ecx+0x7fc436d1]
  4197ae:	stos   BYTE PTR es:[edi],al
  4197af:	jb     0x4197b6
  4197b1:	pop    ebp
  4197b2:	pop    ss
  4197b3:	sahf   
  4197b4:	cmc    
  4197b5:	into   
  4197b6:	(bad)  
  4197b7:	dec    eax
  4197b8:	mov    ds:0x3a8b7284,al
  4197bd:	push   eax
  4197be:	mov    DWORD PTR [edi-0x21],eax
  4197c1:	call   0x5705d68e
  4197c6:	mov    bh,0x48
  4197c8:	fistp  DWORD PTR [esi]
  4197ca:	pusha  
  4197cb:	or     bl,bl
  4197cd:	push   edi
  4197ce:	push   ss
  4197cf:	cdq    
  4197d0:	sub    ebp,DWORD PTR [eax+0x14]
  4197d3:	mov    al,ds:0x33b9a68c
  4197d8:	fstp   QWORD PTR [ebp-0x71c53468]
  4197de:	jmp    0x4a3a:0x548ac88b
  4197e5:	or     eax,DWORD PTR [ecx+0x68d49963]
  4197eb:	xchg   ebp,eax
  4197ec:	mov    dh,0xac
  4197ee:	pop    ebp
  4197ef:	fst    DWORD PTR [esi+0x3c6a6124]
  4197f5:	and    ecx,DWORD PTR [edx+0x29]
  4197f8:	outs   dx,DWORD PTR ds:[esi]
  4197f9:	ins    BYTE PTR es:[edi],dx
  4197fa:	leave  
  4197fb:	add    edx,DWORD PTR [ecx]
  4197fd:	xchg   edx,eax
  4197fe:	or     bh,bl
  419800:	and    ebp,ebx
  419802:	mov    edx,ss
  419804:	and    BYTE PTR [edx],dh
  419806:	in     al,dx
  419807:	shr    DWORD PTR [edi],cl
  419809:	pop    ebx
  41980a:	mov    ds,WORD PTR [esi]
  41980c:	lea    esp,[edx+0x9]
  41980f:	jmp    DWORD PTR [edx]
  419811:	jno    0x41984e
  419813:	scas   eax,DWORD PTR es:[edi]
  419814:	mov    ecx,0x466cfa9
  419819:	mov    al,ds:0xa4d6a222
  41981e:	inc    edx
  41981f:	fcmovbe st,st(0)
  419821:	fnstenv [ebx]
  419823:	mov    ds:0xe073fb25,eax
  419828:	sahf   
  419829:	cli    
  41982a:	(bad)  
  41982b:	sub    esi,DWORD PTR [ecx]
  41982d:	or     BYTE PTR [edi-0x75],bh
  419830:	call   0x7b10:0x9e849581
  419837:	lds    edi,FWORD PTR [esi+ebx*1+0x6078e323]
  41983e:	in     al,0x3
  419840:	cmp    DWORD PTR [ebp-0x3a0bdffc],esi
  419846:	mov    eax,0x1a707eed
  41984b:	rol    BYTE PTR ds:0xe5113b,0x35
  419852:	push   ecx
  419853:	hlt    
  419854:	test   eax,0xf745608d
  419859:	jge    0x4198bd
  41985b:	sbb    ch,cl
  41985d:	fbstp  TBYTE PTR [ebp-0x4ed328aa]
  419863:	mov    ecx,ecx
  419865:	pop    ss
  419866:	imul   ebp,DWORD PTR [edx],0x3e9c21f2
  41986c:	xchg   ecx,eax
  41986d:	pop    edi
  41986e:	jmp    0x4198ee
  419870:	sub    eax,0xf803f0bb
  419875:	cli    
  419876:	pop    esp
  419877:	push   edx
  419878:	(bad)  
  419879:	push   esi
  41987a:	hlt    
  41987b:	outs   dx,DWORD PTR ds:[esi]
  41987c:	into   
  41987d:	sbb    BYTE PTR [esi-0xe],dl
  419880:	pop    esi
  419881:	outs   dx,BYTE PTR ds:[esi]
  419882:	adc    DWORD PTR [edi-0x15b010fe],edx
  419888:	(bad)  
  419889:	mov    DWORD PTR [ebp-0x63d19066],eax
  41988f:	shr    DWORD PTR [esp+ecx*4],0xd0
  419893:	fimul  DWORD PTR [ecx+ebx*1+0x55]
  419897:	jl     0x4198e7
  419899:	out    dx,eax
  41989a:	mov    bh,0x11
  41989c:	neg    bl
  41989e:	out    dx,eax
  41989f:	lea    ecx,[ebx-0x53]
  4198a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198a3:	jge    0x419892
  4198a5:	bound  edx,QWORD PTR [esi+0x5]
  4198a8:	in     al,dx
  4198a9:	add    al,0xc2
  4198ab:	or     esi,0x5db5655a
  4198b1:	jno    0x419918
  4198b3:	jecxz  0x4198f8
  4198b5:	cmp    dl,cl
  4198b7:	fbld   TBYTE PTR [edi]
  4198b9:	in     al,dx
  4198ba:	sbb    al,ah
  4198bc:	and    BYTE PTR [ecx],0x98
  4198bf:	enter  0xb68b,0xfd
  4198c3:	or     DWORD PTR [ecx+0x7caae61],esi
  4198c9:	jle    0x419867
  4198cb:	arpl   sp,sp
  4198cd:	(bad)  
  4198ce:	push   eax
  4198cf:	push   ds
  4198d0:	mov    eax,0x1a6cbf17
  4198d5:	push   ebp
  4198d6:	xor    al,0xa3
  4198d8:	test   BYTE PTR [edi-0x26],al
  4198db:	mov    bl,0x54
  4198dd:	jne    0x41991a
  4198df:	sbb    al,0x3
  4198e2:	int    0x9d
  4198e4:	icebp  
  4198e5:	and    al,ch
  4198e7:	out    0x96,al
  4198e9:	retf   0xe81
  4198ec:	inc    esp
  4198ed:	push   eax
  4198ee:	fstp   TBYTE PTR [esi+0x35e9a690]
  4198f4:	(bad)  
  4198f5:	out    0x7e,eax
  4198f7:	lods   al,BYTE PTR ds:[esi]
  4198f8:	pop    ss
  4198f9:	daa    
  4198fa:	xor    al,0x44
  4198fc:	iret   
  4198fd:	push   esp
  4198fe:	pop    ebp
  4198ff:	inc    ebx
  419900:	jle    0x41991a
  419902:	xor    ch,BYTE PTR [ecx+0x11487e1c]
  419908:	es pop ebp
  41990a:	mov    ah,BYTE PTR [edi+0x3d]
  41990d:	mov    al,0x1d
  41990f:	push   ds
  419910:	push   edx
  419911:	fdivr  QWORD PTR [esi]
  419913:	mov    ch,0x32
  419915:	retf   
  419916:	scas   al,BYTE PTR es:[edi]
  419917:	inc    edi
  419918:	add    DWORD PTR [eax-0x1c],ebx
  41991b:	push   ebp
  41991c:	mov    edx,0x82698de9
  419921:	mov    bl,0x87
  419923:	dec    eax
  419924:	pop    ecx
  419925:	pop    esi
  419926:	adc    ah,ah
  419928:	test   eax,0x750d39ff
  41992d:	push   0xd0276344
  419932:	jl     0x41990d
  419934:	(bad)  [edx+edx*8-0x55]
  419938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419939:	or     eax,0xb524b000
  41993e:	pop    ebp
  41993f:	cmp    eax,0xef06fac2
  419944:	mov    BYTE PTR [ebx+edi*8+0xc],dl
  419948:	and    DWORD PTR [ebx+0x49fd418],esi
  41994e:	not    BYTE PTR gs:[edx-0x37]
  419952:	push   esi
  419953:	cmovnp edx,esp
  419956:	call   0xd3a8fc72
  41995b:	xor    eax,0x58d3894b
  419960:	nop
  419961:	nop
  419962:	call   0x48312a3c
  419967:	cmp    ebp,DWORD PTR [edi+0x38e0b6f2]
  41996d:	push   0xd7db157
  419972:	mov    ch,BYTE PTR [eax-0x39]
  419975:	iret   
  419976:	inc    eax
  419977:	push   esp
  419978:	cmp    DWORD PTR [edx],edx
  41997a:	cmp    al,0xd2
  41997c:	(bad)  
  41997e:	sar    BYTE PTR [edi-0x3e3a8da5],1
  419984:	and    eax,0x6e61a5a7
  419989:	jns    0x41999f
  41998b:	pop    ebp
  41998c:	dec    ecx
  41998d:	stos   DWORD PTR es:[edi],eax
  41998e:	pop    esp
  41998f:	test   al,0x98
  419991:	and    bh,BYTE PTR [edi]
  419993:	ds dec esi
  419995:	retf   0xdf0
  419998:	push   esp
  419999:	inc    edx
  41999a:	sub    al,0x6
  41999c:	imul   esi,DWORD PTR [ecx],0x21
  41999f:	stos   BYTE PTR es:[edi],al
  4199a0:	pop    esi
  4199a1:	jne    0x4199c0
  4199a3:	data16 div BYTE PTR [esi]
  4199a6:	xchg   edx,eax
  4199a7:	loopne 0x4199cc
  4199a9:	data16 loope 0x419983
  4199ac:	mov    dh,0x6
  4199ae:	jne    0x419995
  4199b0:	fisub  DWORD PTR [eax]
  4199b2:	or     ch,0xa2
  4199b5:	or     eax,0x8c1f1504
  4199ba:	dec    eax
  4199bb:	imul   ecx,DWORD PTR [ebx],0x6be88ff4
  4199c1:	cmpxchg BYTE PTR [edi+0x42],bh
  4199c5:	dec    eax
  4199c6:	xlat   BYTE PTR ds:[ebx]
  4199c7:	and    BYTE PTR [ebp-0x12],ch
  4199ca:	test   al,0x89
  4199cc:	xor    al,0xd6
  4199ce:	pop    edi
  4199cf:	stc    
  4199d0:	cmovge esi,DWORD PTR ds:0xab771ce5
  4199d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199d9:	call   0x37b5b307
  4199de:	mov    al,ds:0x61534a73
  4199e3:	addr16 cs stc 
  4199e6:	sti    
  4199e7:	rcl    BYTE PTR [ebx],cl
  4199e9:	push   0x8a5ec9a3
  4199ee:	adc    al,0x66
  4199f0:	(bad)  
  4199f1:	in     eax,dx
  4199f2:	outs   dx,BYTE PTR ds:[esi]
  4199f3:	inc    edx
  4199f4:	fsub   DWORD PTR ds:0x223c5be2
  4199fa:	clc    
  4199fb:	cwde   
  4199fc:	xchg   ecx,eax
  4199fd:	add    eax,0xff45d356
  419a02:	aad    0x55
  419a04:	gs mov cl,0x6
  419a07:	arpl   WORD PTR [edi],bp
  419a09:	push   esp
  419a0a:	sbb    al,0x53
  419a0c:	adc    eax,0x8abe627
  419a11:	clc    
  419a12:	sub    ebx,DWORD PTR [edx+0x27]
  419a15:	pop    edi
  419a16:	sbb    dl,ch
  419a18:	adc    dl,BYTE PTR [edx+0x554ade4]
  419a1e:	add    al,0x3
  419a20:	jb     0x419a5a
  419a22:	jmp    0xa597bab1
  419a27:	mov    esi,0xce1eef7
  419a2c:	inc    ecx
  419a2d:	outs   dx,BYTE PTR ds:[esi]
  419a2e:	pop    ecx
  419a2f:	call   0x4bc3:0xc18b38d1
  419a36:	js     0x419a24
  419a38:	dec    edi
  419a39:	and    edx,DWORD PTR [edx+0x3e]
  419a3c:	dec    edx
  419a3d:	mov    cl,0x21
  419a3f:	jbe    0x419a3b
  419a41:	retf   
  419a42:	fist   DWORD PTR ds:[edi]
  419a45:	pusha  
  419a46:	ret    0xb636
  419a49:	rcl    BYTE PTR [edx+0x5a3134f8],1
  419a4f:	push   0xed436780
  419a54:	mov    ah,0xc8
  419a56:	xchg   ebx,eax
  419a57:	add    al,BYTE PTR [esi]
  419a59:	outs   dx,DWORD PTR ds:[esi]
  419a5a:	xchg   ebp,eax
  419a5b:	inc    ecx
  419a5c:	dec    edi
  419a5d:	mov    al,ds:0x6e4ad3b0
  419a62:	loopne 0x419a33
  419a64:	or     BYTE PTR [edx-0x725699fe],ch
  419a6a:	mov    esi,0x3bd6c085
  419a6f:	in     eax,0x85
  419a71:	dec    eax
  419a72:	lea    ecx,[edi]
  419a74:	pushf  
  419a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a76:	inc    edi
  419a77:	leave  
  419a78:	fimul  WORD PTR [edx+eax*4-0x4]
  419a7c:	icebp  
  419a7d:	clc    
  419a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a7f:	add    eax,0xfac9719f
  419a85:	cmp    ecx,eax
  419a87:	sbb    al,0x33
  419a89:	mov    ds:0xd44af5e4,al
  419a8e:	in     eax,dx
  419a8f:	xchg   esp,eax
  419a90:	ficom  WORD PTR [ebx+0x59]
  419a93:	(bad)  
  419a94:	cdq    
  419a95:	jno    0x419ad0
  419a97:	cmp    DWORD PTR [esi+edx*4-0x21],edi
  419a9b:	mov    ecx,DWORD PTR [ecx-0x40ce8e25]
  419aa1:	push   es
  419aa2:	fstp   TBYTE PTR [ebx-0x7ac80dda]
  419aa8:	adc    esi,DWORD PTR [edi]
  419aaa:	pop    ds
  419aab:	ds ja  0x419a72
  419aae:	call   0x9a5b40b
  419ab3:	xchg   ebx,eax
  419ab4:	sbb    eax,0x3354725b
  419ab9:	in     eax,0x28
  419abb:	out    0xa0,al
  419abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419abe:	and    DWORD PTR [ecx+ebx*2+0x664ead9e],esi
  419ac5:	push   eax
  419ac6:	cs into 
  419ac8:	cmp    BYTE PTR [edx-0x77],ah
  419acb:	(bad)  
  419acc:	and    eax,0xaa2ebecc
  419ad1:	pop    ds
  419ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ad3:	(bad)  
  419ad4:	jecxz  0x419b45
  419ad6:	shl    ah,1
  419ad8:	adc    BYTE PTR [ebp+ecx*8-0x7eabfa70],ch
  419adf:	xchg   ebx,eax
  419ae0:	fidiv  DWORD PTR [esp+esi*1-0x7b]
  419ae4:	imul   esi,DWORD PTR [esi+0x6],0x5d
  419ae8:	push   ds
  419ae9:	out    dx,eax
  419aea:	or     DWORD PTR [esi],esi
  419aec:	or     cl,BYTE PTR [ebp+0x67]
  419aef:	shr    DWORD PTR [edi],1
  419af1:	retf   
  419af2:	add    eax,0xafd83876
  419af7:	or     al,0xa
  419af9:	in     eax,0xe6
  419afb:	adc    al,0x2c
  419afd:	adc    BYTE PTR [edi],al
  419aff:	or     ch,bh
  419b01:	pop    edx
  419b02:	or     al,BYTE PTR [ebx+0x1239ad25]
  419b08:	mov    dh,0x67
  419b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b0b:	cmp    DWORD PTR [ebx+ecx*2-0x6791f69f],ebp
  419b12:	stc    
  419b13:	mov    ecx,0xe7d4a570
  419b18:	add    BYTE PTR [esi+esi*2+0x52239fa8],al
  419b1f:	or     ah,BYTE PTR [edx+edi*1+0x34]
  419b23:	jg     0x419b45
  419b25:	xor    ah,BYTE PTR [ecx]
  419b27:	int3   
  419b28:	ror    DWORD PTR [edx+0x219f0fd6],cl
  419b2e:	mov    ds:0xfcb18134,eax
  419b33:	push   ss
  419b34:	mov    ebp,eax
  419b36:	push   ecx
  419b37:	push   ds
  419b38:	fsubr  DWORD PTR [esi+ebx*2-0x5565da4f]
  419b3f:	mov    ebp,DWORD PTR [ebx-0x6e]
  419b42:	pop    esi
  419b43:	cmp    DWORD PTR [esi],0x8d30c530
  419b49:	dec    BYTE PTR [edx-0x74]
  419b4c:	xchg   esp,eax
  419b4d:	xor    cl,BYTE PTR [ebx-0x70951b37]
  419b53:	aad    0x40
  419b55:	call   0x4a969f6f
  419b5a:	xor    eax,0x9bcc5a96
  419b5f:	xchg   ebp,eax
  419b60:	sub    al,0xf1
  419b62:	daa    
  419b63:	sbb    bl,BYTE PTR [edi]
  419b65:	jle    0x419bca
  419b67:	or     bl,BYTE PTR [ebx-0x2d]
  419b6a:	inc    edi
  419b6b:	mov    edx,0xdcba6ac1
  419b70:	and    al,0xd1
  419b72:	ja     0x419b2e
  419b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b75:	xor    al,0xb2
  419b77:	clc    
  419b78:	cld    
  419b79:	dec    ebp
  419b7a:	inc    ecx
  419b7b:	push   edx
  419b7c:	pop    ds
  419b7d:	test   DWORD PTR [ebx+edx*4],0xe6fb2fb5
  419b84:	imul   edx,DWORD PTR [eax-0x6c],0x11d13cf8
  419b8b:	mov    bl,0x1
  419b8d:	out    dx,eax
  419b8e:	fistp  DWORD PTR [edi+0x31]
  419b91:	retf   0x2553
  419b94:	adc    DWORD PTR [edx-0x74],edx
  419b97:	jnp    0x419b1f
  419b99:	mov    gs,WORD PTR ds:0x2ec82cd8
  419b9f:	xor    DWORD PTR [ebp+0x60],eax
  419ba2:	fsubr  QWORD PTR ds:0x3bc128be
  419ba8:	push   ss
  419ba9:	mov    ch,0x24
  419bab:	jne    0x419bcd
  419bad:	xchg   edi,eax
  419bae:	fsub   QWORD PTR [eax]
  419bb0:	cmc    
  419bb1:	idiv   al
  419bb3:	call   0x11e2:0xafea2470
  419bba:	wrmsr  
  419bbc:	dec    ecx
  419bbd:	push   0x989c7e0
  419bc2:	xor    edi,DWORD PTR [eax-0x66de16ce]
  419bc8:	call   0x1c6c55ec
  419bcd:	mov    BYTE PTR [ebx-0x1c],dl
  419bd0:	fld    TBYTE PTR [eax+0x35]
  419bd3:	popf   
  419bd4:	sub    bl,ah
  419bd6:	out    0xf0,al
  419bd8:	lea    eax,[edi+0x67cf1046]
  419bde:	jae    0x419c4c
  419be0:	sahf   
  419be1:	ret    0x40c
  419be4:	fdiv   DWORD PTR [eax+0x6b]
  419be7:	cdq    
  419be8:	xchg   ebp,eax
  419be9:	ins    BYTE PTR es:[edi],dx
  419bea:	call   0x8c0777a
  419bef:	(bad)  
  419bf0:	and    al,dh
  419bf2:	dec    edx
  419bf3:	mov    al,0x56
  419bf5:	ins    DWORD PTR es:[edi],dx
  419bf6:	inc    eax
  419bf7:	mov    ebp,0xcccc7e06
  419bfc:	cld    
  419bfd:	popa   
  419bfe:	(bad)  
  419bff:	scas   eax,DWORD PTR es:[edi]
  419c00:	inc    edx
  419c01:	pop    esi
  419c02:	adc    esp,DWORD PTR [ecx-0x60a12990]
  419c08:	stos   DWORD PTR es:[edi],eax
  419c09:	add    dl,BYTE PTR [eax+0x3298f21]
  419c0f:	(bad)  
  419c10:	test   eax,0xfbe9c850
  419c15:	out    0xbc,al
  419c17:	push   ds
  419c18:	mov    bh,BYTE PTR [esi-0x5512e899]
  419c1e:	jo     0x419bae
  419c20:	cs jp  0x419c34
  419c23:	mov    bl,0xa0
  419c25:	sar    BYTE PTR [ebx],cl
  419c27:	or     dl,BYTE PTR [esi+0x34d3823c]
  419c2d:	je     0x419c4f
  419c2f:	hlt    
  419c30:	and    eax,0x3bb5e16a
  419c35:	jbe    0x419bc9
  419c37:	jnp    0x419c56
  419c39:	aaa    
  419c3a:	popa   
  419c3b:	rol    BYTE PTR [eax+ebp*2+0x37fb5b92],cl
  419c42:	adc    BYTE PTR [ebx+0x1c],dl
  419c45:	sub    DWORD PTR [edi-0x9],edx
  419c48:	xchg   ecx,eax
  419c49:	push   esi
  419c4a:	and    eax,0x6a502f33
  419c4f:	and    eax,DWORD PTR [ebx]
  419c51:	loope  0x419ca7
  419c53:	push   es
  419c54:	mov    esi,0x217fcf4e
  419c59:	and    dl,BYTE PTR [ecx]
  419c5b:	rcr    BYTE PTR [ecx],cl
  419c5d:	cmp    BYTE PTR [edi+0x19caa71d],bh
  419c63:	enter  0x7014,0x2f
  419c67:	stos   BYTE PTR es:[edi],al
  419c68:	mov    ds:0xe15f6935,eax
  419c6d:	add    edi,DWORD PTR [edi]
  419c6f:	ret    
  419c70:	sub    ebp,DWORD PTR [edx+0x3e28b026]
  419c76:	stos   BYTE PTR es:[edi],al
  419c77:	cmp    eax,0x94b3813d
  419c7c:	jp     0x419c39
  419c7e:	aad    0x75
  419c80:	mov    DWORD PTR [edi+0x616ba102],ecx
  419c86:	pop    es
  419c87:	jmp    0xbb37:0x58b87c6
  419c8e:	adc    esi,DWORD PTR [edx]
  419c90:	out    dx,al
  419c91:	mov    ebp,0xb62f3f1e
  419c96:	test   BYTE PTR [ecx],bh
  419c98:	(bad)  
  419c99:	jp     0x419cbf
  419c9b:	fwait
  419c9c:	push   esi
  419c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c9e:	mov    ds:0x7759c08d,al
  419ca3:	mov    ah,0x71
  419ca5:	mov    esi,0x41dcf374
  419caa:	push   edi
  419cab:	enter  0x28a1,0xaa
  419caf:	rcl    DWORD PTR [esi+0x13],0x29
  419cb3:	or     DWORD PTR [ebx-0xf],ebp
  419cb6:	ins    BYTE PTR es:[edi],dx
  419cb7:	mov    ds:0x9c2203b6,eax
  419cbc:	push   es
  419cbd:	jns    0x419ce4
  419cbf:	dec    eax
  419cc0:	xor    BYTE PTR [edx+0x7f],dh
  419cc3:	je     0x419ca3
  419cc5:	(bad)  
  419cc6:	push   ebx
  419cc7:	jle    0x419cc6
  419cc9:	ss aad 0x6
  419ccc:	gs (bad) 
  419cce:	adc    BYTE PTR [esi+esi*8+0x2e6c6c0f],bh
  419cd5:	adc    bh,BYTE PTR [ebx+eiz*4+0x213542d3]
  419cdc:	inc    esp
  419cdd:	pop    eax
  419cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cdf:	rcr    DWORD PTR [ebx],0x5c
  419ce2:	repz ja 0x419d36
  419ce5:	inc    edx
  419ce6:	pushf  
  419ce7:	mov    WORD PTR [ebx],cs
  419ce9:	xor    ebp,ecx
  419ceb:	and    al,0x76
  419ced:	ss xor eax,0x9d611b20
  419cf3:	aas    
  419cf4:	push   esp
  419cf5:	nop
  419cf6:	jb     0x419d34
  419cf8:	push   0xfbfe784a
  419cfd:	hlt    
  419cfe:	or     bh,bl
  419d00:	inc    edx
  419d01:	ret    
  419d02:	sbb    ebp,ebx
  419d04:	lods   al,BYTE PTR ds:[esi]
  419d05:	sbb    dl,cl
  419d07:	fs push esi
  419d09:	dec    ecx
  419d0b:	fstp   DWORD PTR [ebx+esi*2+0x61]
  419d0f:	aas    
  419d10:	arpl   WORD PTR [edi+0x6c],si
  419d13:	adc    eax,0xdef1c4cd
  419d18:	adc    al,0xd2
  419d1a:	dec    ebx
  419d1b:	inc    esp
  419d1c:	lea    eax,[ebx+0xf]
  419d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d20:	arpl   di,si
  419d22:	jmp    0x419cf0
  419d24:	sbb    al,0x78
  419d26:	rcr    edx,cl
  419d28:	adc    eax,0xacdd28f0
  419d2d:	dec    ebp
  419d2e:	dec    eax
  419d2f:	push   eax
  419d30:	mov    esi,0xdb1e2819
  419d35:	jle    0x419ccd
  419d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d38:	stc    
  419d39:	loop   0x419d13
  419d3b:	repnz xchg dl,ch
  419d3e:	xchg   BYTE PTR [eax],cl
  419d40:	stos   BYTE PTR es:[edi],al
  419d41:	test   bh,dl
  419d43:	xchg   ecx,eax
  419d44:	dec    edx
  419d45:	out    dx,eax
  419d46:	mov    ecx,0xe990131
  419d4b:	inc    edx
  419d4c:	add    al,BYTE PTR [eax-0x2d]
  419d4f:	pop    ebp
  419d50:	pop    eax
  419d51:	cmp    eax,0xb1a5b365
  419d56:	sub    ebp,DWORD PTR [ecx]
  419d58:	xchg   ecx,eax
  419d59:	xchg   BYTE PTR ds:0xf7e740b3,al
  419d5f:	mov    dl,BYTE PTR [ebx+0x1e]
  419d62:	mov    DWORD PTR [eax],edi
  419d64:	jo     0x419dc6
  419d66:	(bad)  
  419d67:	lods   eax,DWORD PTR fs:[esi]
  419d69:	retf   0x671c
  419d6c:	xlat   BYTE PTR ds:[ebx]
  419d6d:	inc    edx
  419d6e:	pop    esi
  419d6f:	lea    eax,[ebx-0x4a]
  419d72:	and    al,0x33
  419d74:	enter  0x6544,0x36
  419d78:	stos   DWORD PTR es:[edi],eax
  419d79:	clc    
  419d7a:	mov    bl,0x53
  419d7c:	test   BYTE PTR [ecx+0x845400b],dl
  419d82:	cs add eax,0x1fbf531f
  419d88:	out    dx,eax
  419d89:	xchg   esp,eax
  419d8a:	inc    edx
  419d8b:	sub    al,0x64
  419d8d:	xor    eax,0x4b254822
  419d92:	(bad)  
  419d93:	sahf   
  419d94:	pop    edi
  419d95:	xor    eax,0xe68a5447
  419d9a:	pop    es
  419d9b:	pushf  
  419d9c:	mov    bl,BYTE PTR [eax-0x26]
  419d9f:	data16 and al,al
  419da2:	mov    edx,0xe9a3e4c5
  419da7:	mov    DWORD PTR [ebp-0x35],esi
  419daa:	or     eax,0x5930421f
  419daf:	pop    edx
  419db0:	fiadd  WORD PTR [ebx+0x6c9561d4]
  419db6:	cmp    eax,0x47b5d3d5
  419dbb:	(bad)  
  419dbc:	lods   al,BYTE PTR ds:[esi]
  419dbd:	test   DWORD PTR [eax-0x6604aa4],ecx
  419dc3:	pop    esi
  419dc4:	cmp    al,al
  419dc6:	leave  
  419dc7:	fdiv   QWORD PTR [esi-0x18db7f1b]
  419dcd:	and    bl,dl
  419dcf:	xor    edx,DWORD PTR [ebx+0x6c]
  419dd2:	mov    esi,0xaad60852
  419dd7:	sub    DWORD PTR [eax+0x2e],0x8fc354af
  419dde:	mov    ch,0xd6
  419de0:	pusha  
  419de1:	inc    ecx
  419de2:	cwde   
  419de3:	pop    ss
  419de4:	dec    edx
  419de5:	inc    ecx
  419de6:	push   esp
  419de7:	xchg   esp,eax
  419de8:	mov    DWORD PTR [edi+0xe5a111e],esi
  419dee:	sbb    al,bh
  419df0:	mov    esp,0x3b4c989e
  419df5:	int    0x6
  419df7:	jle    0x419df5
  419df9:	cmp    al,0xdf
  419dfb:	sbb    DWORD PTR [eax],edx
  419dfd:	scas   eax,DWORD PTR es:[edi]
  419dfe:	mov    bh,0x1c
  419e00:	rol    DWORD PTR [ecx+0x2d],1
  419e03:	fsub   st(1),st
  419e05:	jmp    0x9a1:0x6a53b679
  419e0c:	sbb    eax,esi
  419e0e:	mov    dh,0xa5
  419e10:	retf   0x3d84
  419e13:	arpl   WORD PTR [ecx-0x67be9c84],cx
  419e19:	xchg   ebx,esp
  419e1b:	pusha  
  419e1c:	mov    eax,0xe01e545b
  419e21:	addr16 retf 0xda66
  419e25:	jl     0x419e52
  419e27:	jne    0x419e53
  419e29:	xchg   ebp,eax
  419e2a:	mov    edx,edi
  419e2c:	xor    eax,0x3216a057
  419e31:	xchg   edi,eax
  419e32:	daa    
  419e33:	sub    dh,BYTE PTR [eax+ebp*2]
  419e36:	push   0xffffffb2
  419e38:	add    DWORD PTR [esi-0x9d7cbee],esp
  419e3e:	or     ebp,0xeb2fc340
  419e44:	jg     0x419e31
  419e46:	mov    ebx,0xff728da9
  419e4b:	push   0x425d0e4
  419e50:	dec    eax
  419e51:	ja     0x419e86
  419e53:	push   ecx
  419e54:	pop    ebp
  419e55:	dec    BYTE PTR [ebp+0x39728bb3]
  419e5b:	(bad)  
  419e5d:	enter  0x68e9,0xe0
  419e61:	and    ebp,edi
  419e63:	jbe    0x419e8c
  419e65:	inc    esi
  419e66:	cwde   
  419e67:	cmp    ah,BYTE PTR [eax+ebx*1-0x2953852e]
  419e6e:	cdq    
  419e6f:	adc    DWORD PTR [esi-0x7e],0x66
  419e73:	ror    DWORD PTR [ebp-0x53],0xa0
  419e77:	xor    dl,ah
  419e79:	fidiv  DWORD PTR [esi-0x2d73e7e5]
  419e7f:	out    0x28,eax
  419e81:	clc    
  419e82:	lock dec ebx
  419e84:	popf   
  419e85:	pop    ebp
  419e86:	pop    esp
  419e87:	mov    cl,0x8f
  419e89:	ja     0x419e5e
  419e8b:	lods   al,BYTE PTR ds:[esi]
  419e8c:	dec    esi
  419e8d:	or     bl,al
  419e8f:	(bad)  
  419e90:	cmp    ah,BYTE PTR [esi+0x6ce32b9c]
  419e96:	mov    ch,0x67
  419e98:	ficomp DWORD PTR [ebx]
  419e9a:	ror    esp,cl
  419e9c:	and    eax,DWORD PTR [ebx]
  419e9e:	mov    ?,WORD PTR [edx+0x65f239b9]
  419ea4:	lea    ebx,[eax]
  419ea6:	mov    cl,0xa7
  419ea8:	ret    0xd462
  419eab:	rcl    BYTE PTR [edi-0x5e],cl
  419eae:	retf   
  419eaf:	push   es
  419eb0:	push   0x69ffbddc
  419eb5:	pusha  
  419eb6:	into   
  419eb7:	sub    eax,0x51104698
  419ebc:	fistp  DWORD PTR [eax]
  419ebe:	mov    BYTE PTR [eax-0x7b],dh
  419ec1:	(bad)  [edx-0x3]
  419ec4:	xchg   ecx,eax
  419ec5:	ja     0x419f15
  419ec7:	out    0xdc,al
  419ec9:	gs xor al,0xda
  419ecc:	iret   
  419ecd:	(bad)  
  419ece:	mov    ecx,0xd0361ece
  419ed3:	jnp    0x419e7a
  419ed5:	test   DWORD PTR [edx+0x56],0xe47f28c2
  419edc:	call   DWORD PTR [ebp+esi*1+0x53a2e301]
  419ee3:	xor    BYTE PTR [edi-0x15b875cf],0xb5
  419eea:	adc    BYTE PTR [edi+esi*4+0x4e73defa],bh
  419ef1:	mov    dh,0x2a
  419ef3:	gs push ecx
  419ef5:	sub    BYTE PTR [eax+0x2d],dl
  419ef8:	sti    
  419ef9:	fnstsw WORD PTR [ebp+eax*2+0x71]
  419efd:	jg     0x419f28
  419eff:	fld    DWORD PTR [edi-0x1a]
  419f02:	mov    BYTE PTR [edi+edi*4+0x3e],0x5d
  419f07:	inc    edx
  419f08:	mov    ch,bl
  419f0a:	bound  edx,QWORD PTR [edi+0x31]
  419f0d:	outs   dx,BYTE PTR ds:[esi]
  419f0e:	cwde   
  419f0f:	xchg   esi,eax
  419f10:	add    dl,BYTE PTR ds:0x3c27967c
  419f16:	pop    ecx
  419f17:	or     bh,BYTE PTR [ebp-0x6c]
  419f1a:	cmc    
  419f1b:	mov    ecx,0x75a70b86
  419f20:	mov    ds:0xb41fabca,al
  419f25:	dec    edx
  419f26:	mov    edi,0xa99d3892
  419f2b:	xor    ebp,DWORD PTR [ecx-0x63]
  419f2e:	test   al,0x25
  419f30:	les    edi,FWORD PTR [edi+0x3c]
  419f33:	cmp    esi,DWORD PTR [edi+ebx*8+0x39]
  419f37:	jmp    FWORD PTR [edi]
  419f39:	inc    edi
  419f3a:	jl     0x419f66
  419f3c:	fsub   QWORD PTR [edx]
  419f3e:	jecxz  0x419f5c
  419f40:	mov    dl,0x9
  419f42:	inc    edi
  419f43:	jle    0x419f5f
  419f45:	xchg   esp,eax
  419f46:	xchg   edx,eax
  419f47:	jnp    0x419fa9
  419f49:	push   cs
  419f4a:	adc    al,0xa9
  419f4c:	ins    DWORD PTR es:[edi],dx
  419f4d:	(bad)  
  419f4e:	cmp    BYTE PTR [edi+0x49],bl
  419f51:	je     0x419f6b
  419f53:	neg    ebx
  419f55:	and    eax,0xbd6c818e
  419f5a:	xchg   edx,eax
  419f5b:	adc    al,0x52
  419f5d:	mov    dh,0xba
  419f5f:	rcl    DWORD PTR [ebx+edx*8],0xe7
  419f63:	ror    al,cl
  419f65:	push   ds
  419f66:	(bad)  
  419f67:	(bad)  
  419f68:	cmp    DWORD PTR [edx-0x4c735826],ecx
  419f6e:	dec    ebp
  419f6f:	call   0x61404c62
  419f74:	ret    0x8ca7
  419f77:	or     al,0x18
  419f79:	test   al,0x60
  419f7b:	sub    eax,0x86e7bd39
  419f80:	icebp  
  419f81:	icebp  
  419f82:	neg    DWORD PTR [esi+0x4109ea8b]
  419f88:	dec    ecx
  419f89:	xchg   ebx,eax
  419f8a:	pushw  0x48
  419f8d:	adc    edx,edi
  419f8f:	hlt    
  419f90:	(bad)  
  419f91:	aaa    
  419f92:	jecxz  0x41a001
  419f94:	icebp  
  419f95:	call   0x14633e75
  419f9a:	dec    esi
  419f9b:	test   BYTE PTR [ebp+0x2da4d702],0xa4
  419fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fa3:	mov    esi,0xb6e9ead8
  419fa8:	mov    dl,0x39
  419faa:	mov    esi,0x10444d11
  419faf:	fs xchg ebx,eax
  419fb1:	dec    ecx
  419fb2:	ins    BYTE PTR es:[edi],dx
  419fb3:	jmp    0x419f99
  419fb5:	popa   
  419fb6:	fs push cs
  419fb8:	aam    0xe3
  419fba:	loopne 0x419fca
  419fbc:	idiv   DWORD PTR [edx-0x363629f]
  419fc2:	jnp    0x41a017
  419fc4:	(bad)  
  419fc5:	icebp  
  419fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fc7:	popf   
  419fc8:	xchg   ebp,eax
  419fc9:	cli    
  419fca:	ret    
  419fcb:	sub    al,0xd1
  419fcd:	shl    DWORD PTR [eax+0x7],0x2f
  419fd1:	(bad)  
  419fd2:	jb     0x419f5b
  419fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fd5:	jno    0x419f9b
  419fd7:	fwait
  419fd8:	xor    eax,0x5dda8eed
  419fdd:	aam    0x2f
  419fdf:	mov    ch,0xbc
  419fe1:	cdq    
  419fe2:	hlt    
  419fe3:	mov    dh,0x7c
  419fe5:	adc    eax,0xfebc4533
  419fea:	mov    eax,0xea8a9c17
  419fef:	or     al,0x39
  419ff1:	mov    esp,0x94b87a00
  419ff6:	(bad)  
  419ff7:	push   esp
  419ff8:	add    eax,0xf4734333
  419ffd:	shl    ebp,0xa3
  41a000:	loopne 0x419fc5
  41a002:	gs fs push edx
  41a005:	and    esi,DWORD PTR [eax-0x11]
  41a008:	mov    bl,0xad
  41a00a:	bound  esp,QWORD PTR [esi-0x31c4b00d]
  41a010:	fwait
  41a011:	jnp    0x419ff9
  41a013:	sahf   
  41a014:	in     al,dx
  41a015:	dec    ebx
  41a016:	or     bh,BYTE PTR [ebx+esi*4-0x6308785f]
  41a01d:	fstp   TBYTE PTR [edi-0x71]
  41a020:	das    
  41a021:	pop    es
  41a022:	inc    edi
  41a023:	push   0x57
  41a025:	pop    edx
  41a026:	scas   al,BYTE PTR es:[edi]
  41a027:	jae    0x419fc1
  41a029:	and    bl,BYTE PTR [edi]
  41a02b:	xchg   edx,eax
  41a02c:	or     al,0xef
  41a02e:	nop
  41a02f:	enter  0xe0b9,0x3d
  41a033:	dec    esi
  41a034:	fadd   DWORD PTR [eax-0xc]
  41a037:	mov    esp,0x18914480
  41a03c:	in     eax,dx
  41a03d:	push   esp
  41a03e:	rol    BYTE PTR [ecx],0x93
  41a041:	jg     0x41a016
  41a043:	or     DWORD PTR ds:0x8bc02bee,ecx
  41a049:	mov    bl,0x5c
  41a04b:	pop    esp
  41a04c:	mov    ch,0xc
  41a04e:	ja     0x41a024
  41a050:	int3   
  41a051:	retf   0x53e6
  41a054:	sbb    BYTE PTR [eax+0x31],bh
  41a057:	std    
  41a058:	and    DWORD PTR [eax-0x35],ebx
  41a05b:	mov    ds:0xc0438eac,eax
  41a060:	push   esp
  41a061:	into   
  41a062:	out    dx,al
  41a063:	dec    esp
  41a064:	mov    bh,0xb0
  41a066:	imul   ebp,DWORD PTR fs:[esi+edi*8-0x1a2f05f],0xc0bae5fa
  41a072:	pop    DWORD PTR [ebx-0x6386941a]
  41a078:	mov    dl,BYTE PTR [ebp+0x5c]
  41a07b:	repz mov esp,ds
  41a07e:	(bad)  
  41a07f:	ja     0x41a029
  41a081:	mov    cl,0x4e
  41a083:	xchg   esi,eax
  41a084:	ins    BYTE PTR es:[edi],dx
  41a085:	sbb    al,0x41
  41a087:	mov    bl,0xa8
  41a089:	mov    ebp,0xdfe15773
  41a08e:	cmp    DWORD PTR [edx],ebp
  41a090:	jmp    0x51bb:0xc3be7966
  41a097:	aam    0xcf
  41a099:	sbb    ch,BYTE PTR ds:0xa2763fb
  41a09f:	loopne 0x41a0da
  41a0a1:	push   ebp
  41a0a2:	pop    ss
  41a0a3:	lock shl DWORD PTR [edi+0xc],0x46
  41a0a8:	sbb    al,0xe2
  41a0aa:	loope  0x41a02f
  41a0ac:	sub    eax,0x5130fcc9
  41a0b1:	mov    ch,0xeb
  41a0b3:	xor    BYTE PTR [ebx],0x10
  41a0b6:	stc    
  41a0b7:	xchg   BYTE PTR [esi],cl
  41a0b9:	inc    ebx
  41a0ba:	int3   
  41a0bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0bc:	(bad)
  41a0c0:	out    0x66,al
  41a0c2:	dec    ebx
  41a0c3:	xor    DWORD PTR [esi],ebp
  41a0c5:	inc    esp
  41a0c6:	sub    ah,BYTE PTR [eax+0x69578603]
  41a0cc:	data16 in al,0x6e
  41a0cf:	pop    ds
  41a0d0:	repnz fcmove st,st(6)
  41a0d3:	sbb    ecx,DWORD PTR [eax]
  41a0d5:	data16 cli 
  41a0d7:	mov    esp,0x2a1d7d93
  41a0dc:	clc    
  41a0dd:	xchg   edi,eax
  41a0de:	sub    BYTE PTR [ecx-0x79],dh
  41a0e1:	and    BYTE PTR [ebx+0x314dd9ed],dl
  41a0e7:	cmp    BYTE PTR [esi],bh
  41a0e9:	bound  edx,QWORD PTR [ebx]
  41a0eb:	or     ebp,0x674a8bc0
  41a0f1:	mov    cl,0x66
  41a0f3:	cs icebp 
  41a0f5:	pop    edx
  41a0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0f7:	lds    edi,FWORD PTR [ecx-0x32]
  41a0fa:	sahf   
  41a0fb:	cwde   
  41a0fc:	pop    esi
  41a0fd:	add    eax,0xa4c01120
  41a102:	aad    0x94
  41a104:	dec    edi
  41a105:	add    DWORD PTR [ebp+ecx*4+0x7bda7224],ecx
  41a10c:	int3   
  41a10d:	out    dx,al
  41a10e:	cmp    al,0xd3
  41a110:	inc    esp
  41a111:	enter  0x7ecc,0x58
  41a115:	xor    BYTE PTR [esi-0x1a],al
  41a118:	cmp    cl,BYTE PTR [ebx]
  41a11a:	loopne 0x41a114
  41a11c:	sbb    al,0xbe
  41a11e:	add    dh,ch
  41a120:	(bad)  
  41a121:	cmp    DWORD PTR [edi-0x71779e72],eax
  41a127:	retf   
  41a128:	popa   
  41a129:	xchg   ebx,eax
  41a12a:	mov    edx,0xba04d2e7
  41a12f:	ret    
  41a130:	cs out dx,eax
  41a132:	mov    DWORD PTR [esi+0x1d],ecx
  41a135:	pop    es
  41a136:	jmp    0x62982668
  41a13b:	xchg   edx,ebx
  41a13d:	add    dh,BYTE PTR [ebx-0x6408f3e7]
  41a143:	fmul   st(5),st
  41a145:	jl     0x41a128
  41a147:	pop    edx
  41a148:	leave  
  41a149:	fsub   QWORD PTR [ecx+0x105c0c0e]
  41a14f:	aas    
  41a150:	shl    BYTE PTR cs:[edx],0xc
  41a154:	sbb    DWORD PTR [ebp-0x3f292027],eax
  41a15a:	pop    edx
  41a15b:	repz push cs
  41a15d:	add    dl,dh
  41a15f:	xchg   edx,eax
  41a160:	daa    
  41a161:	add    al,0x4b
  41a163:	dec    esi
  41a164:	and    DWORD PTR [esi],edx
  41a166:	aas    
  41a167:	je     0x41a1e1
  41a169:	fst    QWORD PTR [edx+ebp*8]
  41a16c:	pop    esp
  41a16d:	sbb    dh,dl
  41a16f:	push   0x7d
  41a171:	icebp  
  41a172:	ja     0x41a123
  41a174:	xchg   BYTE PTR [edx+0x77],dl
  41a177:	mov    ebp,edi
  41a179:	cmc    
  41a17a:	jbe    0x41a12a
  41a17c:	pop    eax
  41a17d:	and    BYTE PTR [ebp+0x7],dh
  41a180:	stos   BYTE PTR es:[edi],al
  41a181:	jns    0x41a148
  41a183:	mov    ebp,0x2f717e74
  41a188:	test   DWORD PTR [ebx],ecx
  41a18a:	push   ecx
  41a18b:	cmp    bl,dl
  41a18d:	or     DWORD PTR [esi-0x5ae407eb],esi
  41a193:	addr16 jg 0x41a1de
  41a196:	test   al,0xbd
  41a198:	mov    al,ah
  41a19a:	popf   
  41a19b:	in     eax,0x3a
  41a19d:	(bad)  [edi-0x6a9f753e]
  41a1a4:	push   ss
  41a1a5:	xor    edi,ebx
  41a1a7:	dec    edi
  41a1a8:	xchg   BYTE PTR [ebx+0x221a7947],bh
  41a1ae:	loop   0x41a211
  41a1b0:	call   0x61cf6ae8
  41a1b5:	ror    DWORD PTR [ebp+edx*2+0x23],cl
  41a1b9:	mov    cl,0x13
  41a1bb:	daa    
  41a1bc:	xor    ebp,DWORD PTR [ebx-0x4e]
  41a1bf:	or     al,0xdc
  41a1c1:	daa    
  41a1c2:	pop    esi
  41a1c3:	and    eax,DWORD PTR [edx]
  41a1c5:	dec    ecx
  41a1c6:	push   ebp
  41a1c7:	arpl   WORD PTR gs:[esi+0x18],dx
  41a1cb:	cmp    al,0x84
  41a1cd:	or     al,0xe7
  41a1cf:	lea    esp,[eax]
  41a1d1:	bound  esp,QWORD PTR [edx-0x6a]
  41a1d4:	enter  0x5eef,0xee
  41a1d8:	push   esi
  41a1d9:	dec    edi
  41a1da:	xchg   ecx,eax
  41a1db:	or     dl,ch
  41a1dd:	imul   ebx,DWORD PTR [edx],0x29
  41a1e0:	add    BYTE PTR [ecx+0x5a],al
  41a1e3:	pop    ss
  41a1e4:	(bad)  
  41a1e6:	xor    eax,0x21aecf45
  41a1eb:	cs sahf 
  41a1ed:	das    
  41a1ee:	push   ecx
  41a1ef:	bound  eax,QWORD PTR [esi]
  41a1f1:	cmc    
  41a1f2:	xor    bh,cl
  41a1f4:	mov    ecx,0x3dac716c
  41a1f9:	xor    bh,dh
  41a1fb:	arpl   ax,ax
  41a1fd:	popa   
  41a1fe:	aad    0xe8
  41a200:	mov    edi,0x908de9af
  41a205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a206:	pop    edi
  41a207:	mul    DWORD PTR [ebx+0x17]
  41a20a:	sub    al,BYTE PTR [eax+0x3ec37ac1]
  41a210:	shl    DWORD PTR [ebx-0x4b13d632],cl
  41a216:	or     BYTE PTR [edx],bh
  41a218:	jnp    0x41a1f5
  41a21a:	fisub  WORD PTR [edi]
  41a21c:	sbb    al,0x44
  41a21e:	cmp    al,0x3e
  41a220:	sahf   
  41a221:	jl     0x41a235
  41a223:	pop    esp
  41a224:	pop    ds
  41a225:	je     0x41a221
  41a227:	push   edi
  41a228:	push   esp
  41a229:	or     al,0x85
  41a22b:	inc    edx
  41a22c:	add    al,0x7e
  41a22e:	stc    
  41a22f:	cs int3 
  41a231:	xchg   esp,eax
  41a232:	aaa    
  41a233:	jmp    0x41a247
  41a235:	in     eax,dx
  41a236:	xchg   ebp,eax
  41a237:	inc    ebx
  41a238:	leave  
  41a239:	repz cld 
  41a23b:	sahf   
  41a23c:	push   DWORD PTR [edx]
  41a23e:	aaa    
  41a23f:	repz mov al,0x20
  41a242:	aad    0xb9
  41a244:	pop    esp
  41a245:	jae    0x41a28c
  41a247:	shr    BYTE PTR [ebp+0x1da0a3e0],cl
  41a24d:	lock mov DWORD PTR [eax],ecx
  41a250:	cdq    
  41a251:	add    edi,edi
  41a253:	icebp  
  41a254:	xchg   BYTE PTR [edi],al
  41a256:	hlt    
  41a257:	test   al,al
  41a259:	sub    bl,BYTE PTR [ebx]
  41a25b:	cmp    al,0x59
  41a25d:	inc    esi
  41a25e:	es ja  0x41a219
  41a261:	int    0x7d
  41a263:	dec    eax
  41a264:	fcomp  DWORD PTR [ebx]
  41a266:	or     al,0x86
  41a268:	clc    
  41a269:	ret    
  41a26a:	movq   QWORD PTR ds:0xbf63920f,mm7
  41a271:	push   cs
  41a272:	push   ebx
  41a273:	in     eax,dx
  41a274:	ja     0x41a224
  41a276:	or     ch,BYTE PTR [edx]
  41a278:	sbb    esp,DWORD PTR [esi+0x46]
  41a27b:	mov    dl,0xaf
  41a27d:	add    eax,ecx
  41a27f:	enter  0xe7f,0x8f
  41a283:	jl     0x41a2a1
  41a285:	jl     0x41a2e6
  41a287:	ret    
  41a288:	adc    al,0x9f
  41a28a:	addr16 (bad) 
  41a28d:	lods   eax,DWORD PTR ds:[esi]
  41a28e:	stos   BYTE PTR es:[edi],al
  41a28f:	pusha  
  41a290:	sub    bl,BYTE PTR [esi+0x67]
  41a293:	mov    bh,0xc4
  41a295:	push   esi
  41a296:	push   0xffffffe7
  41a298:	add    ecx,DWORD PTR [esi+eax*4+0x3f02ad9b]
  41a29f:	lock or esp,ebp
  41a2a2:	lahf   
  41a2a3:	xor    edi,DWORD PTR [edx-0x16]
  41a2a6:	and    al,0x7
  41a2a8:	into   
  41a2a9:	repz shl DWORD PTR [eax-0x4],0xea
  41a2ae:	mov    ch,0x26
  41a2b0:	bound  edi,QWORD PTR [edi-0x11566b82]
  41a2b6:	cmp    ebp,DWORD PTR [edi-0x69]
  41a2b9:	lock aam 0xff
  41a2bc:	int    0x9a
  41a2be:	push   cs
  41a2bf:	cld    
  41a2c0:	aad    0x2e
  41a2c2:	clc    
  41a2c3:	pop    ss
  41a2c4:	cld    
  41a2c5:	jmp    0xd4aa5a50
  41a2ca:	(bad)  
  41a2cb:	or     bh,dl
  41a2cd:	xor    eax,0xf7024078
  41a2d2:	ror    bl,cl
  41a2d4:	sub    eax,0x9b7415bc
  41a2d9:	push   0xffffff9c
  41a2db:	cmove  ebx,DWORD PTR [esi+0x1b6a4e5e]
  41a2e2:	adc    edx,DWORD PTR [edx]
  41a2e4:	fwait
  41a2e5:	mov    ch,0xd2
  41a2e7:	stc    
  41a2e8:	loopne 0x41a2b7
  41a2ea:	dec    ebx
  41a2eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ec:	(bad)  
  41a2ed:	daa    
  41a2ee:	jae    0x41a341
  41a2f0:	fstp   DWORD PTR [ecx+0x1]
  41a2f3:	cli    
  41a2f4:	shl    esp,cl
  41a2f6:	lock cmp eax,0x1dc0ae61
  41a2fc:	and    al,0x82
  41a2fe:	pop    ds
  41a2ff:	sub    DWORD PTR [ebx+0x5b758638],ecx
  41a305:	jns    0x41a2a6
  41a307:	mov    ds:0x27ef363b,al
  41a30c:	add    cl,ch
  41a30e:	jmp    0x11f6bb4e
  41a313:	pop    ds
  41a314:	lods   eax,DWORD PTR ds:[esi]
  41a315:	mov    ah,0xe6
  41a317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a318:	outs   dx,DWORD PTR ds:[esi]
  41a319:	clc    
  41a31a:	in     al,0xa7
  41a31c:	cli    
  41a31d:	dec    BYTE PTR [esi+0x3904d17f]
  41a323:	in     eax,0xc6
  41a325:	add    ah,BYTE PTR [ebx+0x1a]
  41a328:	jl     0x41a345
  41a32a:	xchg   DWORD PTR [ebx],esp
  41a32c:	in     eax,0x7
  41a32e:	shl    BYTE PTR [esi-0x7106cc15],cl
  41a334:	mov    eax,ds:0x40af312d
  41a339:	int    0x73
  41a33b:	repnz stc 
  41a33d:	and    bh,al
  41a33f:	dec    edx
  41a340:	add    BYTE PTR [eax+0x5d],al
  41a343:	sub    BYTE PTR [ecx-0x7e],bh
  41a346:	jb     0x41a352
  41a348:	xchg   esi,eax
  41a349:	xchg   eax,ebp
  41a34b:	and    edi,DWORD PTR [edi+0x6f]
  41a34e:	stos   BYTE PTR es:[edi],al
  41a34f:	sub    BYTE PTR [edi],ah
  41a351:	mov    bl,0xcc
  41a353:	mov    cl,0x56
  41a355:	push   ebp
  41a356:	mov    edx,0x740fdbb3
  41a35b:	fs adc eax,0xf5924ed6
  41a361:	adc    bh,BYTE PTR [edx+0x25]
  41a364:	sub    al,0xb5
  41a366:	xor    BYTE PTR [edi-0x664d1af8],ch
  41a36c:	push   esp
  41a36d:	dec    edx
  41a36e:	out    dx,al
  41a36f:	imul   eax,DWORD PTR [esp+ecx*2+0x20],0x32ce7bc8
  41a377:	mov    esi,0x5fa3853f
  41a37c:	mov    al,ds:0x1664b7ca
  41a381:	aaa    
  41a382:	pop    edi
  41a383:	repnz scas al,BYTE PTR es:[edi]
  41a385:	add    BYTE PTR [edx+0x4134d027],dh
  41a38b:	pusha  
  41a38c:	(bad)  
  41a38d:	in     al,dx
  41a38e:	out    dx,al
  41a38f:	mov    ebp,0xa6a78d2c
  41a394:	arpl   WORD PTR [edi+ebp*8-0x26adecef],dx
  41a39b:	mov    al,0xb3
  41a39d:	jg     0x41a32c
  41a39f:	js     0x41a32c
  41a3a1:	out    dx,al
  41a3a2:	int    0xfe
  41a3a4:	aad    0x19
  41a3a6:	add    eax,DWORD PTR [esi+0x22]
  41a3a9:	cli    
  41a3aa:	adc    DWORD PTR [ebx],ecx
  41a3ac:	lods   al,BYTE PTR ds:[esi]
  41a3ad:	adc    ebp,DWORD PTR [ebx]
  41a3af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3b1:	push   ebp
  41a3b2:	jmp    0xa99a4b61
  41a3b7:	outs   dx,DWORD PTR ds:[esi]
  41a3b8:	push   edi
  41a3b9:	pop    ebx
  41a3ba:	loop   0x41a3c2
  41a3bc:	mov    DWORD PTR [ebx],esp
  41a3be:	mov    ebp,0x7a945576
  41a3c3:	pushf  
  41a3c4:	ins    BYTE PTR es:[edi],dx
  41a3c5:	in     eax,dx
  41a3c6:	sti    
  41a3c7:	xchg   esi,eax
  41a3c8:	ret    0x4b3d
  41a3cb:	loope  0x41a40f
  41a3cd:	mov    dl,0x13
  41a3cf:	lock (bad) 
  41a3d1:	push   DWORD PTR [ebp+0x196208c2]
  41a3d7:	aam    0xc3
  41a3d9:	xor    BYTE PTR [esi+0x4b2e65cc],0xa9
  41a3e0:	add    dl,BYTE PTR [esi-0x4c270d5f]
  41a3e6:	xchg   DWORD PTR [edx+0x58c520c2],ecx
  41a3ec:	fsub   QWORD PTR [edi]
  41a3ee:	xchg   DWORD PTR [ebx+0x24],ecx
  41a3f1:	jecxz  0x41a3a4
  41a3f3:	xor    DWORD PTR [ebp-0x7fe39df9],ebx
  41a3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3fa:	ret    0xf7e1
  41a3fd:	pop    ecx
  41a3fe:	popf   
  41a3ff:	dec    eax
  41a400:	xor    ah,BYTE PTR [ebx]
  41a402:	jl     0x41a3f0
  41a404:	xchg   edi,eax
  41a405:	in     al,0x7c
  41a407:	push   ds
  41a408:	jae    0x41a3e5
  41a40a:	jmp    0x734658b2
  41a40f:	mov    eax,0x688e6c86
  41a414:	cmp    BYTE PTR [ebx+0x1dfc9f1],al
  41a41a:	in     eax,dx
  41a41b:	inc    ecx
  41a41c:	jns    0x41a482
  41a41e:	fwait
  41a41f:	stc    
  41a420:	mov    ecx,0x505c36bb
  41a425:	xor    eax,0x9e98bc60
  41a42a:	les    esi,FWORD PTR [ecx+ebx*2+0x10]
  41a42e:	sahf   
  41a42f:	adc    ah,BYTE PTR [ebp+0x4b873439]
  41a435:	mov    edi,edx
  41a437:	loopne 0x41a3f6
  41a439:	fild   QWORD PTR [edx+0xfef557b]
  41a43f:	and    edi,DWORD PTR [esi+ebx*4-0x56]
  41a443:	std    
  41a444:	adc    al,0x5c
  41a446:	shr    DWORD PTR [eax+0x35],0xa1
  41a44a:	xor    esi,DWORD PTR [ebx+edi*8-0xb]
  41a44e:	mov    ebp,0x6acc9577
  41a453:	cwde   
  41a454:	in     eax,0x1
  41a456:	mov    BYTE PTR ds:0x4fb00d47,ah
  41a45c:	xchg   esp,eax
  41a45d:	jle    0x41a45f
  41a45f:	jae    0x41a3eb
  41a461:	xlat   BYTE PTR ds:[ebx]
  41a462:	daa    
  41a463:	les    edx,FWORD PTR [edx+0x12]
  41a466:	adc    eax,0xff642b7e
  41a46b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a46c:	call   0xb5c2:0x36e46999
  41a473:	data16 mov al,0x2b
  41a476:	pop    es
  41a477:	outs   dx,DWORD PTR ds:[esi]
  41a478:	mov    gs,edi
  41a47a:	or     cl,BYTE PTR [ebx]
  41a47c:	data16 cmc 
  41a47e:	cli    
  41a47f:	push   ss
  41a480:	lahf   
  41a481:	push   0x85c0c0e
  41a486:	rsm    
  41a488:	and    DWORD PTR [esp+ebx*8+0x16],edx
  41a48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a48d:	add    BYTE PTR [ebx],al
  41a48f:	loopne 0x41a418
  41a491:	ins    BYTE PTR es:[edi],dx
  41a492:	xor    eax,edi
  41a494:	add    BYTE PTR [edx],ah
  41a496:	daa    
  41a497:	jp     0x41a462
  41a499:	or     eax,0x3a1223b0
  41a49e:	outs   dx,DWORD PTR ds:[esi]
  41a49f:	or     al,0xec
  41a4a1:	mov    ecx,0x4f19acd1
  41a4a6:	mov    ds:0x6d2c94c8,al
  41a4ab:	xchg   BYTE PTR [edx],bl
  41a4ad:	mov    ch,0x73
  41a4af:	jmp    0x4c43:0xa48de83b
  41a4b6:	sbb    DWORD PTR [edx+0x73948c84],esi
  41a4bc:	iret   
  41a4bd:	mov    eax,ds:0x9e943
  41a4c2:	call   0x8373eed2
  41a4c7:	cld    
  41a4c8:	cld    
  41a4c9:	bound  esp,QWORD PTR [edi+0x68bbc804]
  41a4cf:	cli    
  41a4d0:	and    al,0xd2
  41a4d2:	test   dh,bl
  41a4d4:	dec    edx
  41a4d5:	mov    ah,0x91
  41a4d7:	icebp  
  41a4d8:	add    al,0xdf
  41a4da:	mov    al,0xb0
  41a4dc:	inc    ebx
  41a4dd:	mov    bh,0x27
  41a4df:	sub    bh,BYTE PTR [eax-0x1871ef58]
  41a4e5:	jl     0x41a4b2
  41a4e7:	ret    
  41a4e8:	adc    DWORD PTR [ecx+0x7143c5fe],0x7
  41a4ef:	and    DWORD PTR [edi+0x65d939be],esi
  41a4f5:	nop
  41a4f6:	sbb    ebx,eax
  41a4f8:	add    BYTE PTR [ebp-0x5193e960],ah
  41a4fe:	push   esp
  41a4ff:	cwde   
  41a500:	jmp    0xb164c26c
  41a505:	jae    0x41a540
  41a507:	aas    
  41a508:	push   edx
  41a509:	nop
  41a50a:	adc    al,0xda
  41a50c:	mov    al,ds:0x1743b5e6
  41a511:	cmp    eax,0x3bf6a141
  41a516:	je     0x41a564
  41a518:	loope  0x41a4c4
  41a51a:	cmc    
  41a51b:	std    
  41a51c:	mov    ebx,0xbef1b5e2
  41a521:	pop    esp
  41a522:	es jmp 0x41a4b7
  41a525:	bound  edx,QWORD PTR [ebx]
  41a527:	inc    ebx
  41a528:	mov    cl,0x6c
  41a52a:	icebp  
  41a52b:	sub    BYTE PTR [eax-0xa45bbf6],cl
  41a531:	fnstsw WORD PTR [ebx+0x36]
  41a534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a535:	mov    edx,edx
  41a537:	and    DWORD PTR [ecx-0x12],esi
  41a53a:	in     eax,0xf5
  41a53c:	call   FWORD PTR [edi]
  41a53e:	aad    0xd3
  41a540:	es mov ebp,0x36d3a8b2
  41a546:	jbe    0x41a4fe
  41a548:	dec    esi
  41a549:	xchg   BYTE PTR [edi+0x7b],ah
  41a54c:	push   edx
  41a54d:	inc    esp
  41a54e:	mov    BYTE PTR [esi],dh
  41a550:	and    ebp,DWORD PTR [esi]
  41a552:	jne    0x41a538
  41a554:	jg     0x41a588
  41a556:	adc    esp,DWORD PTR [eax]
  41a558:	jg     0x41a54f
  41a55a:	arpl   WORD PTR [eax],si
  41a55c:	les    ebp,FWORD PTR ds:0xb93039ee
  41a562:	shr    BYTE PTR [ecx+edx*1-0x34],cl
  41a566:	out    dx,eax
  41a567:	push   esp
  41a568:	(bad)  
  41a569:	out    0xa5,al
  41a56b:	xchg   ebx,eax
  41a56c:	jge    0x41a58f
  41a56e:	or     al,BYTE PTR [esi]
  41a570:	imul   ebx,DWORD PTR [edx+0x4f],0x5c
  41a574:	test   eax,0xda7a6f4c
  41a579:	push   esp
  41a57a:	and    eax,0xb560afb5
  41a57f:	add    bl,BYTE PTR [ebp+0x6a]
  41a582:	mov    bh,0x4
  41a584:	jbe    0x41a508
  41a586:	xor    al,0xce
  41a588:	jle    0x41a52b
  41a58a:	xlat   BYTE PTR ds:[ebx]
  41a58b:	ins    DWORD PTR es:[edi],dx
  41a58c:	cdq    
  41a58d:	sbb    DWORD PTR [ecx+0x5925a656],esp
  41a593:	jg     0x41a612
  41a595:	fisttp DWORD PTR [edx]
  41a597:	mov    esi,0x5a94e52d
  41a59c:	ror    ch,0x60
  41a59f:	(bad)  
  41a5a0:	std    
  41a5a1:	add    eax,0x3ae50c13
  41a5a6:	out    dx,eax
  41a5a7:	cmc    
  41a5a8:	adc    bl,BYTE PTR [esi-0x18]
  41a5ab:	add    DWORD PTR [ebp+0x42],eax
  41a5ae:	inc    edi
  41a5af:	and    DWORD PTR es:[ebx-0x14fb34b7],ebp
  41a5b6:	mov    bh,0xc
  41a5b8:	dec    ebp
  41a5b9:	out    0xe7,eax
  41a5bb:	pop    ds
  41a5bc:	add    BYTE PTR [bx+si],ah
  41a5bf:	test   DWORD PTR [ecx-0x5b631c8d],ebx
  41a5c5:	and    al,0x2d
  41a5c7:	xchg   esp,eax
  41a5c8:	jo     0x41a5a0
  41a5ca:	popf   
  41a5cb:	dec    ebx
  41a5cc:	mov    ds:0x6379dcea,al
  41a5d1:	xor    ebx,DWORD PTR [ecx+eax*8+0x7f]
  41a5d5:	jmp    0xb61b1c63
  41a5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5db:	mov    edi,0x2d8fbb93
  41a5e0:	xchg   ecx,eax
  41a5e1:	mov    eax,ds:0x53c10976
  41a5e6:	dec    edx
  41a5e7:	mov    al,0x6c
  41a5e9:	cmp    eax,0xeb70b1fd
  41a5ee:	fild   DWORD PTR fs:[ebx]
  41a5f1:	ins    BYTE PTR es:[edi],dx
  41a5f2:	sbb    al,0x41
  41a5f4:	cmp    eax,esi
  41a5f6:	icebp  
  41a5f7:	jbe    0x41a5ae
  41a5f9:	add    BYTE PTR [eax+0x4367fb71],ah
  41a5ff:	out    dx,al
  41a600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a601:	or     eax,0x9a00f11c
  41a606:	cmp    BYTE PTR [edi-0x7b1e7590],al
  41a60c:	push   edi
  41a60d:	sub    eax,0xa416f38f
  41a612:	mov    bl,0x40
  41a614:	cdq    
  41a615:	jg     0x41a632
  41a617:	sbb    DWORD PTR [edx-0x5b],ecx
  41a61a:	dec    ebp
  41a61b:	stos   DWORD PTR es:[edi],eax
  41a61c:	(bad)  
  41a61d:	fcom   st(4)
  41a61f:	test   eax,0x97896fc5
  41a625:	shr    DWORD PTR [ecx],cl
  41a627:	test   eax,0xceb009fe
  41a62c:	pop    esi
  41a62d:	mov    dl,0x46
  41a62f:	push   esp
  41a630:	adc    al,0xc5
  41a632:	inc    ebp
  41a633:	and    BYTE PTR [ebx],al
  41a635:	ja     0x41a689
  41a637:	shl    DWORD PTR [eax],1
  41a639:	or     BYTE PTR [eax+0x5954d4ab],bh
  41a63f:	pop    ebp
  41a640:	rcr    DWORD PTR [ebx],1
  41a642:	test   edi,0xbec591cc
  41a648:	jle    0x41a663
  41a64a:	sub    eax,0x60509897
  41a64f:	xchg   al,dh
  41a651:	hlt    
  41a652:	jmp    0x41a5ec
  41a654:	lods   al,BYTE PTR ds:[esi]
  41a655:	sbb    eax,0x108cc437
  41a65a:	mov    ds:0x3e46c248,eax
  41a65f:	fbstp  TBYTE PTR [eax]
  41a661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a662:	daa    
  41a663:	and    eax,edx
  41a665:	xor    eax,0xb4f9e9e3
  41a66a:	fisub  WORD PTR [edi]
  41a66c:	mov    eax,ds:0x52002794
  41a671:	jmp    0x4468995
  41a676:	call   0x6f24775
  41a67b:	loope  0x41a6cc
  41a67d:	inc    ebx
  41a67e:	outs   dx,BYTE PTR ds:[esi]
  41a67f:	jecxz  0x41a6e7
  41a681:	push   esp
  41a682:	inc    ebx
  41a683:	mov    eax,0xcbb990b9
  41a688:	(bad)  
  41a689:	or     BYTE PTR [eax+ecx*8],ch
  41a68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a68d:	(bad)  
  41a68e:	cmp    eax,ecx
  41a690:	stos   DWORD PTR es:[edi],eax
  41a691:	scas   al,BYTE PTR es:[edi]
  41a692:	stos   DWORD PTR es:[edi],eax
  41a693:	sub    bh,BYTE PTR [eax+0x79d43e34]
  41a699:	cmp    ch,BYTE PTR [eax+0x5b]
  41a69c:	mov    ebp,0x3aa0aa81
  41a6a1:	dec    ebx
  41a6a2:	xor    bh,BYTE PTR [ebx+0x69a71bcb]
  41a6a8:	adc    DWORD PTR [ecx],0x69ccd77
  41a6ae:	mov    ebx,0x5118fb37
  41a6b3:	adc    ebp,DWORD PTR [ecx]
  41a6b5:	out    0x84,al
  41a6b7:	les    eax,FWORD PTR [ecx]
  41a6b9:	xor    dl,BYTE PTR [edx]
  41a6bb:	cli    
  41a6bc:	std    
  41a6bd:	cmp    BYTE PTR [edi+0x676e550e],dl
  41a6c3:	(bad)  
  41a6c4:	jp     0x41a6d7
  41a6c6:	mov    ?,WORD PTR ds:0xf78472f6
  41a6cc:	shl    BYTE PTR [ebx+0x66dc81c4],0x0
  41a6d3:	out    0x33,al
  41a6d5:	test   eax,0xe7dea90c
  41a6da:	gs cli 
  41a6dc:	push   ecx
  41a6dd:	push   esi
  41a6de:	inc    eax
  41a6df:	mov    ch,0x99
  41a6e1:	mov    bl,0xe0
  41a6e3:	inc    esp
  41a6e4:	inc    eax
  41a6e5:	jge    0x41a718
  41a6e7:	popa   
  41a6e8:	sbb    dl,al
  41a6ea:	arpl   WORD PTR [eax],cx
  41a6ec:	or     al,0x4e
  41a6ee:	add    dh,bl
  41a6f0:	lahf   
  41a6f1:	jae    0x41a6c7
  41a6f3:	(bad)  
  41a6f4:	aad    0x1d
  41a6f6:	ja     0x41a744
  41a6f8:	in     eax,dx
  41a6f9:	icebp  
  41a6fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6fb:	rol    DWORD PTR [edx+0x13],0x19
  41a6ff:	inc    edx
  41a700:	jbe    0x41a68d
  41a702:	sub    al,0xe5
  41a704:	or     al,0xf8
  41a706:	and    esp,DWORD PTR [ebp-0x71]
  41a709:	hlt    
  41a70a:	arpl   bx,bp
  41a70c:	add    ebp,DWORD PTR [esi]
  41a70e:	imul   DWORD PTR [ebp+ebp*2+0x13]
  41a712:	jge    0x41a715
  41a714:	shl    DWORD PTR [ecx-0x305a132b],cl
  41a71a:	cli    
  41a71b:	loopne 0x41a6a7
  41a71d:	mov    ds:0x4cb7cd8f,al
  41a722:	neg    BYTE PTR ds:0xa73b2061
  41a728:	dec    ecx
  41a729:	cs (bad) 
  41a72b:	push   ebx
  41a72c:	sub    ch,BYTE PTR [ecx+0x1df717d5]
  41a732:	mov    ds:0xf7d4e68c,eax
  41a737:	pop    ecx
  41a738:	push   esp
  41a739:	push   edi
  41a73a:	in     eax,dx
  41a73b:	aad    0x9
  41a73d:	xor    bh,BYTE PTR [edi]
  41a73f:	add    bl,BYTE PTR [ebp-0x51]
  41a742:	data16 clc 
  41a744:	aad    0x9
  41a746:	dec    esi
  41a747:	mov    cl,0x7b
  41a749:	add    ebx,eax
  41a74b:	push   ebx
  41a74c:	xchg   edi,eax
  41a74d:	xor    al,0x89
  41a74f:	pop    esp
  41a750:	mov    WORD PTR [esi+ebp*1+0x47],cs
  41a754:	aas    
  41a755:	stos   BYTE PTR es:[edi],al
  41a756:	scas   eax,DWORD PTR es:[edi]
  41a757:	push   ecx
  41a758:	cmp    eax,0x474df35a
  41a75d:	pop    esp
  41a75e:	sahf   
  41a75f:	pop    eax
  41a760:	fild   WORD PTR [esi+0x206c3d0c]
  41a766:	enter  0xfb13,0xc7
  41a76a:	or     cl,BYTE PTR [esi-0x747557d5]
  41a770:	mov    ecx,0xf36f7928
  41a775:	std    
  41a776:	jns    0x41a7ae
  41a778:	aam    0xf2
  41a77a:	push   es
  41a77b:	sub    DWORD PTR [edi],eax
  41a77d:	test   DWORD PTR [ebx+0x4d],esi
  41a780:	dec    ebp
  41a781:	in     eax,dx
  41a782:	imul   ebp,DWORD PTR [ebp+0x4217acb5],0x96c0ebd1
  41a78c:	jno    0x41a714
  41a78e:	aaa    
  41a78f:	in     eax,0x9c
  41a791:	clc    
  41a792:	xchg   esi,eax
  41a793:	xor    DWORD PTR [esi],edx
  41a795:	lds    edx,FWORD PTR [edi]
  41a797:	xchg   DWORD PTR [edx+ebx*8+0x10],eax
  41a79b:	aas    
  41a79c:	test   BYTE PTR [eax-0x71a421c9],0x81
  41a7a3:	rcl    BYTE PTR ds:0x3592f329,1
  41a7a9:	cmp    edx,edi
  41a7ab:	pop    eax
  41a7ac:	jmp    0x41a7d9
  41a7ae:	pop    edx
  41a7af:	aas    
  41a7b0:	pop    esi
  41a7b1:	sbb    eax,0x660731f4
  41a7b6:	mov    al,0x3a
  41a7b8:	adc    BYTE PTR [esi-0x29],0xe3
  41a7bc:	pop    ebx
  41a7bd:	fwait
  41a7be:	mov    esp,DWORD PTR [esi+0x8795923]
  41a7c4:	jge    0x41a761
  41a7c6:	cmp    BYTE PTR [ebp-0x47],bh
  41a7c9:	(bad)  
  41a7ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7cb:	inc    edx
  41a7cc:	scas   al,BYTE PTR es:[edi]
  41a7cd:	dec    ebx
  41a7ce:	dec    edi
  41a7cf:	or     ah,ah
  41a7d1:	cmp    edi,DWORD PTR [ebp+ebp*8-0x46]
  41a7d5:	(bad)  
  41a7d6:	xor    al,0xde
  41a7d8:	xchg   DWORD PTR [ecx-0x5dbc4e6a],esi
  41a7de:	inc    edi
  41a7df:	stc    
  41a7e0:	stos   DWORD PTR es:[edi],eax
  41a7e1:	push   cs
  41a7e2:	cmp    eax,0xd168b866
  41a7e7:	add    esp,DWORD PTR [esi-0x75]
  41a7ea:	sub    al,0x93
  41a7ec:	xchg   edi,eax
  41a7ed:	jmp    0x41a81a
  41a7ef:	or     cl,BYTE PTR [eax]
  41a7f1:	int    0x6f
  41a7f3:	mov    al,0xdf
  41a7f5:	mov    edi,ecx
  41a7f7:	(bad)  
  41a7f8:	test   eax,0x5521632c
  41a7fd:	call   FWORD PTR [edi-0x4d290f6e]
  41a803:	inc    ebp
  41a804:	sti    
  41a805:	lea    edi,[eax]
  41a807:	dec    ebx
  41a808:	pop    edi
  41a809:	shr    bh,0xe4
  41a80c:	jg     0x41a798
  41a80e:	(bad)  
  41a80f:	sbb    ebp,DWORD PTR [edx-0x689ee415]
  41a815:	cmovs  ebp,ebp
  41a818:	mov    edx,0x759d75bf
  41a81d:	xor    dl,BYTE PTR [ebp+0x563d73ed]
  41a823:	adc    DWORD PTR fs:[ebp-0x29014e1e],0x12
  41a82b:	gs pop ds
  41a82d:	test   eax,0xd99178b1
  41a832:	adc    al,BYTE PTR [edi]
  41a834:	cmp    eax,0x3edf5b44
  41a839:	nop
  41a83a:	(bad)  
  41a83b:	dec    edi
  41a83c:	(bad)  
  41a83d:	and    DWORD PTR [ebp-0x643fc43f],edx
  41a843:	cmp    ebp,ebx
  41a845:	cld    
  41a846:	out    dx,eax
  41a847:	push   0xffffff91
  41a849:	fsubr  QWORD PTR [eax]
  41a84b:	dec    esi
  41a84c:	cmc    
  41a84d:	cli    
  41a84e:	jle    0x41a813
  41a850:	(bad)  
  41a851:	stc    
  41a852:	das    
  41a853:	addr16 mov eax,ds:0x278f
  41a857:	call   0x7b84f28d
  41a85c:	das    
  41a85d:	pop    ss
  41a85e:	sbb    DWORD PTR [ecx+0x44],0xffffffdd
  41a862:	jmp    FWORD PTR [eax]
  41a864:	fldenv [edi+eax*1-0x59]
  41a868:	fbld   TBYTE PTR [ecx+0x60]
  41a86b:	mov    ch,0x81
  41a86d:	aas    
  41a86e:	in     eax,0x10
  41a870:	dec    esp
  41a871:	rol    DWORD PTR [edx-0x2b],cl
  41a874:	xchg   ebp,eax
  41a875:	cdq    
  41a876:	inc    ecx
  41a877:	mov    ds:0x9e7b78e8,al
  41a87c:	adc    eax,0x7745400a
  41a881:	mov    ebx,0x96748202
  41a886:	(bad)  
  41a887:	into   
  41a888:	add    edx,ebx
  41a88a:	mov    ebp,0x16e178df
  41a88f:	das    
  41a890:	das    
  41a891:	cmp    eax,0xe3fff972
  41a896:	fmul   DWORD PTR [edi]
  41a898:	sbb    esp,0xffffffc3
  41a89b:	mov    al,ds:0x92dee21d
  41a8a0:	dec    eax
  41a8a1:	imul   BYTE PTR [ebx-0x10]
  41a8a4:	cmp    BYTE PTR ds:0x71d3e2a9,al
  41a8aa:	clc    
  41a8ab:	xor    ebx,DWORD PTR [edx]
  41a8ad:	arpl   WORD PTR [ebx+0x6],bx
  41a8b0:	cmp    ebp,ebp
  41a8b2:	jecxz  0x41a922
  41a8b4:	ja     0x41a8c1
  41a8b6:	inc    ebp
  41a8b7:	fcomp  DWORD PTR [eax]
  41a8b9:	sbb    esp,DWORD PTR [ebp-0x69d37512]
  41a8bf:	mov    edi,0xaf28472c
  41a8c4:	test   eax,0xe630e483
  41a8c9:	pop    esi
  41a8ca:	ja     0x41a934
  41a8cc:	ficom  WORD PTR [edx]
  41a8ce:	push   es
  41a8cf:	mov    edi,0xd8e8775a
  41a8d4:	jb     0x41a8e9
  41a8d6:	fld    QWORD PTR [edx+0x76]
  41a8d9:	xor    eax,0x4f519b7
  41a8de:	mov    eax,ds:0x838c5ce5
  41a8e3:	or     dl,BYTE PTR ds:0x35dfe1a2
  41a8e9:	retf   
  41a8ea:	mov    esi,DWORD PTR [eax+ecx*8]
  41a8ed:	fisub  DWORD PTR [edx-0x75]
  41a8f0:	xor    esi,edi
  41a8f2:	gs ret 
  41a8f4:	add    WORD PTR [esi-0x6d],bx
  41a8f8:	sbb    ebp,ebx
  41a8fa:	adc    al,0xe7
  41a8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8fd:	scas   eax,DWORD PTR es:[edi]
  41a8fe:	jp     0x41a96e
  41a900:	stos   DWORD PTR es:[edi],eax
  41a901:	out    0xc6,al
  41a903:	jmp    0x9320:0x74f56605
  41a90a:	pushf  
  41a90b:	sub    dl,ch
  41a90d:	shr    BYTE PTR [ebx-0x4d],0x8a
  41a911:	outs   dx,DWORD PTR ds:[esi]
  41a912:	ss mov dh,ah
  41a915:	cmp    edi,DWORD PTR [ebp-0x3d]
  41a918:	pusha  
  41a919:	rcl    bl,1
  41a91b:	psrlw  mm5,QWORD PTR [ecx]
  41a91e:	icebp  
  41a91f:	int    0xe3
  41a921:	stos   BYTE PTR es:[edi],al
  41a922:	push   edi
  41a923:	loop   0x41a93e
  41a925:	loope  0x41a90b
  41a927:	inc    edi
  41a928:	and    DWORD PTR [ecx],edi
  41a92a:	in     al,0xbb
  41a92c:	pusha  
  41a92d:	fadd   DWORD PTR [ecx-0x73]
  41a930:	cmp    eax,0x10130478
  41a935:	and    dh,dl
  41a937:	inc    esi
  41a938:	sub    al,0x5c
  41a93a:	jne    0x41a8ff
  41a93c:	jmp    0x24bb:0x294252b3
  41a943:	xchg   edi,eax
  41a944:	mov    ah,0x57
  41a946:	mov    eax,0x7508d107
  41a94b:	scas   eax,DWORD PTR es:[edi]
  41a94c:	popf   
  41a94d:	or     bl,BYTE PTR ds:0xdea6a00f
  41a953:	dec    esp
  41a954:	jns    0x41a8fa
  41a956:	push   ss
  41a957:	push   cs
  41a958:	mov    ebx,0x95fa679
  41a95d:	xchg   esp,eax
  41a95e:	sub    dh,BYTE PTR [ebp+0x72001a48]
  41a964:	fs xchg ebx,eax
  41a966:	sbb    BYTE PTR [eax+0x4d283dce],al
  41a96c:	mov    ch,0x92
  41a96e:	sub    cl,bl
  41a970:	fidiv  WORD PTR [edx+0x34]
  41a973:	push   0x2490ef76
  41a978:	pop    edx
  41a979:	mov    ebp,edi
  41a97b:	stos   BYTE PTR es:[edi],al
  41a97c:	jbe    0x41a95c
  41a97e:	mov    ah,0x60
  41a980:	add    dh,bl
  41a982:	inc    eax
  41a983:	ret    
  41a984:	mov    ds:0x9e5a826,al
  41a989:	fdivr  QWORD PTR [ebx]
  41a98b:	sub    DWORD PTR [ebx-0x15639343],ecx
  41a991:	out    0x5f,al
  41a993:	push   ss
  41a994:	mov    ds:0xa293bd27,eax
  41a999:	and    al,0x17
  41a99b:	pop    ebx
  41a99c:	xor    DWORD PTR [eax],ebp
  41a99e:	aam    0x97
  41a9a0:	into   
  41a9a1:	inc    ebx
  41a9a2:	add    esp,DWORD PTR [edi]
  41a9a4:	popa   
  41a9a5:	sar    BYTE PTR [esi],cl
  41a9a7:	adc    esp,edx
  41a9a9:	push   ebp
  41a9aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ab:	mov    cl,0x30
  41a9ad:	nop
  41a9ae:	bound  edx,QWORD PTR [ecx+ecx*2]
  41a9b1:	sbb    BYTE PTR [ecx+0x1e],ah
  41a9b4:	mov    ds:0xbae0bc71,al
  41a9b9:	or     BYTE PTR [ebp-0x33c88290],al
  41a9bf:	inc    ebx
  41a9c0:	(bad)  
  41a9c1:	pop    ebp
  41a9c2:	pop    eax
  41a9c3:	mov    BYTE PTR [eax],cl
  41a9c5:	push   ds
  41a9c6:	idiv   DWORD PTR [edi+ebx*1+0x16]
  41a9ca:	or     ch,BYTE PTR [edi]
  41a9cc:	out    0x4c,al
  41a9ce:	jge    0x41a9f7
  41a9d0:	and    eax,esp
  41a9d2:	and    BYTE PTR [edx+edi*4+0x24],ch
  41a9d6:	jmp    0xd7a2:0xd4283b9f
  41a9dd:	imul   ebx,DWORD PTR ds:0xdf4055b,0xffffffa5
  41a9e4:	sub    eax,0xbd62b7fe
  41a9e9:	retf   0x95e2
  41a9ec:	out    dx,eax
  41a9ed:	or     eax,0x9f569c61
  41a9f2:	xchg   dh,dh
  41a9f4:	xor    BYTE PTR [esi-0x36253ef6],bl
  41a9fa:	gs mov esp,0x9e2f4101
  41aa00:	out    0x94,al
  41aa02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa03:	mov    esi,0xa7c2ae4c
  41aa08:	dec    eax
  41aa09:	adc    DWORD PTR [esi-0x514f032e],edi
  41aa0f:	ret    0x2f97
  41aa12:	xchg   esp,eax
  41aa13:	icebp  
  41aa14:	jbe    0x41aa31
  41aa16:	ret    0x4295
  41aa19:	sahf   
  41aa1a:	cmp    DWORD PTR [ebp+0x56ad3ba4],eax
  41aa20:	mov    dl,0xee
  41aa22:	pop    esp
  41aa23:	cmp    al,0x74
  41aa25:	imul   edi,DWORD PTR [ebx-0x62],0xffffffb5
  41aa29:	jge    0x41a9ed
  41aa2b:	repnz leave 
  41aa2d:	stos   DWORD PTR es:[edi],eax
  41aa2e:	adc    DWORD PTR [ecx+esi*8+0x2d],ebx
  41aa32:	jmp    0x3c05:0x8527d059
  41aa39:	xor    dl,BYTE PTR [ecx-0x68]
  41aa3c:	ins    DWORD PTR es:[edi],dx
  41aa3d:	and    al,0x6b
  41aa3f:	xchg   ebx,eax
  41aa40:	fiadd  WORD PTR [ecx-0x5b]
  41aa43:	add    al,0x52
  41aa45:	mov    edi,0x4d49702a
  41aa4a:	arpl   WORD PTR [ecx+0x4624021c],cx
  41aa50:	or     al,0x70
  41aa52:	(bad)  
  41aa54:	sbb    BYTE PTR [edx],0x11
  41aa57:	cmp    cl,0x65
  41aa5a:	mov    bl,0xd6
  41aa5c:	test   al,0xd8
  41aa5e:	aas    
  41aa5f:	fstp   st(4)
  41aa61:	inc    ebx
  41aa62:	jmp    0xe129a3e2
  41aa67:	xchg   BYTE PTR [ecx],bl
  41aa69:	pop    edx
  41aa6a:	sbb    dh,BYTE PTR [ecx+0x58]
  41aa6d:	mov    WORD PTR [edx+edx*2+0x4],ds
  41aa71:	and    dl,bl
  41aa73:	ret    
  41aa74:	xchg   ch,bh
  41aa76:	dec    esi
  41aa77:	inc    eax
  41aa78:	mov    ds:0xf1eda07d,eax
  41aa7d:	aas    
  41aa7e:	sub    al,ch
  41aa80:	dec    eax
  41aa81:	push   0xffffffb3
  41aa83:	ja     0x41aa81
  41aa85:	xchg   ebx,eax
  41aa86:	xchg   DWORD PTR [ecx],ebx
  41aa88:	inc    ecx
  41aa89:	mov    esi,DWORD PTR [edi+0x6f06aaff]
  41aa8f:	jne    0x41aa5b
  41aa91:	push   ss
  41aa92:	cmp    BYTE PTR [ebp-0x3990adb7],al
  41aa98:	leave  
  41aa99:	lods   eax,DWORD PTR ds:[esi]
  41aa9a:	or     bh,al
  41aa9c:	jmp    0x5189156d
  41aaa1:	imul   ebp,DWORD PTR [eax-0x6fc090e9],0xff5aa1ae
  41aaab:	retf   
  41aaac:	fisttp QWORD PTR gs:[esi+edx*8]
  41aab0:	push   es
  41aab1:	inc    edx
  41aab2:	push   ds
  41aab3:	push   ds
  41aab4:	aad    0xed
  41aab6:	pusha  
  41aab7:	icebp  
  41aab8:	scas   eax,DWORD PTR es:[edi]
  41aab9:	sbb    BYTE PTR [edi+eax*2],dh
  41aabc:	icebp  
  41aabd:	aas    
  41aabe:	sub    esi,DWORD PTR [eax+0xe]
  41aac1:	cmp    eax,0xeb9d96fb
  41aac7:	inc    edx
  41aac8:	aas    
  41aac9:	or     DWORD PTR [edx-0xbb88c6b],esi
  41aacf:	gs out 0x57,al
  41aad2:	sbb    DWORD PTR [edx+0x20d5c2f],edx
  41aad8:	icebp  
  41aad9:	add    dl,BYTE PTR ds:0x430325e7
  41aadf:	and    bl,BYTE PTR [eax]
  41aae1:	add    dh,al
  41aae3:	pop    edi
  41aae4:	addr16 test bl,bl
  41aae7:	inc    ebp
  41aae8:	outs   dx,DWORD PTR ds:[esi]
  41aae9:	scas   al,BYTE PTR es:[edi]
  41aaea:	outs   dx,DWORD PTR ds:[esi]
  41aaeb:	dec    edi
  41aaec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaed:	add    eax,0xf4265692
  41aaf2:	or     ecx,eax
  41aaf4:	aad    0xc8
  41aaf6:	rcr    DWORD PTR [eax+eax*1+0x61],0x9d
  41aafb:	lods   al,BYTE PTR ds:[esi]
  41aafc:	sub    al,0x1
  41aafe:	fsub   QWORD PTR [edi+0x79]
  41ab01:	jbe    0x41aa95
  41ab03:	push   edx
  41ab04:	mov    edi,esp
  41ab06:	ret    0xa334
  41ab09:	sbb    al,0x5a
  41ab0b:	test   BYTE PTR [esi],cl
  41ab0d:	call   0xd0e9:0xed8145fc
  41ab14:	fdiv   QWORD PTR ss:[edx]
  41ab17:	fdiv   QWORD PTR [ecx+0x58]
  41ab1a:	mov    WORD PTR [ebp+0x21b0b01b],ss
  41ab20:	jae    0x41ab8b
  41ab22:	jmp    0x17ab8388
  41ab27:	repz mov ss,ebx
  41ab2a:	repz ja 0x41aae7
  41ab2d:	mov    dh,cl
  41ab2f:	mov    ebp,0x7d9469e3
  41ab34:	pop    edx
  41ab35:	xor    BYTE PTR [eax],0x3e
  41ab38:	mov    dh,0xde
  41ab3a:	mov    dh,0x5d
  41ab3c:	jp     0x41ab19
  41ab3e:	cmp    bh,al
  41ab40:	dec    esi
  41ab41:	ins    DWORD PTR es:[edi],dx
  41ab42:	lds    ebp,FWORD PTR [eax+0x1]
  41ab45:	shl    bh,0x8f
  41ab48:	ret    
  41ab49:	jmp    0x41ab8b
  41ab4b:	cmp    al,0xa2
  41ab4d:	push   ebp
  41ab4e:	scas   eax,DWORD PTR es:[edi]
  41ab4f:	and    DWORD PTR [edx+ebp*1],ebp
  41ab52:	xchg   BYTE PTR ds:0x72e0adf9,dh
  41ab58:	or     eax,0x1df869de
  41ab5d:	pop    es
  41ab5e:	dec    edx
  41ab5f:	mov    ah,0x37
  41ab61:	pop    ss
  41ab62:	sbb    ch,al
  41ab64:	test   DWORD PTR [edi+0x4eb0a408],eax
  41ab6a:	daa    
  41ab6b:	fidivr DWORD PTR [bp+di+0x43]
  41ab70:	xchg   DWORD PTR [ecx-0x3],esp
  41ab73:	cmp    dl,ch
  41ab75:	mov    BYTE PTR [eax+0x7540ee24],al
  41ab7b:	add    al,0x7
  41ab7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab7e:	dec    ebx
  41ab7f:	xor    bh,BYTE PTR [edx]
  41ab81:	test   DWORD PTR [eax],0x986a2ef7
  41ab87:	or     ebp,ebx
  41ab89:	sahf   
  41ab8a:	push   esi
  41ab8b:	mov    dl,ah
  41ab8d:	sbb    edi,edx
  41ab8f:	lahf   
  41ab90:	jno    0x41ab26
  41ab92:	push   eax
  41ab93:	mov    edx,0x67551f3f
  41ab98:	push   ebx
  41ab99:	loope  0x41ab6e
  41ab9b:	int3   
  41ab9c:	hlt    
  41ab9d:	addr16 adc eax,0x9ba440a6
  41aba3:	je     0x41ab5e
  41aba5:	jmp    0x41ac0d
  41aba7:	(bad)  
  41aba8:	xchg   ecx,eax
  41aba9:	data16 fimul WORD PTR [edx-0x71bfea11]
  41abb0:	mov    dh,0xa
  41abb2:	(bad)  
  41abb3:	icebp  
  41abb4:	mov    ch,0x95
  41abb6:	jb     0x41abef
  41abb8:	adc    al,0xf8
  41abba:	xchg   BYTE PTR [ecx],ch
  41abbc:	jb     0x41ac3d
  41abbe:	in     al,0xd2
  41abc0:	cmp    al,0xfe
  41abc2:	aas    
  41abc3:	xchg   ecx,eax
  41abc4:	jl     0x41ac09
  41abc6:	fnstcw WORD PTR gs:[edx+0x4490ebc5]
  41abcd:	sub    BYTE PTR [eax+0x49],0x97
  41abd1:	out    0x1c,eax
  41abd3:	int3   
  41abd4:	aad    0x95
  41abd6:	sub    BYTE PTR [ecx+0xc],dh
  41abd9:	outs   dx,BYTE PTR ds:[esi]
  41abda:	icebp  
  41abdb:	iret   
  41abdc:	push   ebp
  41abdd:	add    al,0x25
  41abdf:	or     al,bh
  41abe1:	fisttp QWORD PTR [ebp+0xc]
  41abe4:	or     al,0x59
  41abe6:	lods   eax,DWORD PTR ds:[esi]
  41abe7:	dec    edi
  41abe8:	add    al,0xf9
  41abea:	mov    ah,0xeb
  41abec:	jno    0x41abfd
  41abee:	cmp    ah,BYTE PTR [eax+0xc]
  41abf1:	xor    eax,0x256f0bc7
  41abf6:	punpcklbw mm6,DWORD PTR [esi+eiz*1-0x7f]
  41abfb:	jl     0x41ac74
  41abfd:	aam    0x3c
  41abff:	xchg   esp,eax
  41ac00:	inc    edx
  41ac01:	shl    BYTE PTR [esi-0x3],cl
  41ac04:	data16 in al,dx
  41ac06:	retf   
  41ac07:	or     DWORD PTR [edi+0x1d],esi
  41ac0a:	jne    0x41aba5
  41ac0c:	push   cs
  41ac0d:	xchg   BYTE PTR [edi],dl
  41ac0f:	(bad)  
  41ac10:	int    0x6e
  41ac12:	stos   BYTE PTR es:[edi],al
  41ac13:	dec    DWORD PTR [edi]
  41ac15:	int3   
  41ac16:	mov    DWORD PTR [eax+0x4bc0431d],edx
  41ac1c:	fs ins BYTE PTR es:[edi],dx
  41ac1e:	xor    al,0x95
  41ac20:	sbb    DWORD PTR [ecx+0x6c],edx
  41ac23:	xchg   ebp,eax
  41ac24:	in     al,0xa5
  41ac26:	hlt    
  41ac27:	aam    0x23
  41ac29:	mov    ebx,0x71aa1f4e
  41ac2e:	sub    dh,0x43
  41ac31:	jge    0x41abf5
  41ac33:	push   ecx
  41ac34:	push   0xffffff92
  41ac36:	mov    edi,0x600e54aa
  41ac3b:	mov    cl,0xd8
  41ac3d:	sub    cl,dh
  41ac3f:	xchg   DWORD PTR [esp+esi*1],ebx
  41ac42:	ins    BYTE PTR es:[edi],dx
  41ac43:	imul   ecx,DWORD PTR [esi+0x4b],0xd
  41ac47:	adc    al,0x5f
  41ac49:	and    BYTE PTR [eax],0xff
  41ac4c:	neg    BYTE PTR [eax+0x6a]
  41ac4f:	mov    ah,0x27
  41ac51:	push   esp
  41ac52:	pushf  
  41ac53:	sti    
  41ac54:	daa    
  41ac55:	mov    ebp,?
  41ac57:	test   eax,0x1153a797
  41ac5c:	ss sbb al,0x92
  41ac5f:	sbb    DWORD PTR [edi],esi
  41ac61:	nop
  41ac62:	jle    0x41ac27
  41ac64:	bound  esi,QWORD PTR [ebx+0x1f]
  41ac67:	jmp    0x3c792316
  41ac6c:	popa   
  41ac6d:	push   0xffffff98
  41ac6f:	rol    edx,0x99
  41ac72:	dec    esi
  41ac73:	scas   al,BYTE PTR es:[edi]
  41ac74:	jecxz  0x41ac61
  41ac76:	mov    BYTE PTR [ecx-0x2],bl
  41ac79:	int3   
  41ac7a:	ret    0xccb
  41ac7d:	cs mov ebx,0x40d9f29b
  41ac83:	scas   al,BYTE PTR es:[edi]
  41ac84:	mov    al,BYTE PTR fs:[ecx+eax*8]
  41ac88:	xor    eax,edx
  41ac8a:	adc    BYTE PTR [ecx*4+0x5a1ed5b8],0x4d
  41ac92:	pop    eax
  41ac93:	push   esp
  41ac94:	inc    edx
  41ac95:	mov    ds:0x5416f6c0,eax
  41ac9a:	mov    edi,0x4899209e
  41ac9f:	cdq    
  41aca0:	call   0x353:0x9ef7c9bc
  41aca7:	push   esi
  41aca8:	gs push eax
  41acaa:	fdiv   st,st(3)
  41acac:	popf   
  41acad:	addr16 pusha 
  41acaf:	mov    eax,ds:0x3bcdf7a3
  41acb4:	imul   esp,DWORD PTR [ecx],0xffffffa6
  41acb7:	mov    bl,0x30
  41acb9:	xor    cl,ch
  41acbb:	(bad)  
  41acbd:	mov    eax,0x541ec2e5
  41acc2:	fidiv  DWORD PTR [edi-0x19]
  41acc5:	js     0x41ace4
  41acc7:	pop    esp
  41acc8:	push   ebx
  41acc9:	mov    ss,WORD PTR [ecx]
  41accb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41accc:	mov    eax,ds:0x7ec3d042
  41acd1:	mov    bh,BYTE PTR [edi+ebx*1+0x4c2c7fbe]
  41acd8:	jnp    0x41acc9
  41acda:	push   edi
  41acdb:	xchg   esp,eax
  41acdc:	ret    
  41acdd:	(bad)  [ecx]
  41acdf:	jbe    0x41ac99
  41ace1:	dec    ebx
  41ace2:	jl     0x41acc0
  41ace4:	hlt    
  41ace5:	or     eax,0xef3ef414
  41acea:	sub    ch,BYTE PTR [edi+0x44]
  41aced:	xor    eax,0x355cf3d9
  41acf2:	int3   
  41acf3:	call   0x725e:0x39dbd6ac
  41acfa:	aad    0x2f
  41acfc:	xor    eax,esp
  41acfe:	sub    BYTE PTR [eax+0x29],bh
  41ad01:	ret    0xa11e
  41ad04:	iret   
  41ad05:	and    cl,BYTE PTR [eax+esi*8+0x30d2ead1]
  41ad0c:	shr    BYTE PTR [ebx+0x6e],cl
  41ad0f:	xlat   BYTE PTR ds:[ebx]
  41ad10:	out    dx,al
  41ad11:	outs   dx,BYTE PTR ds:[esi]
  41ad12:	in     al,0xfb
  41ad14:	je     0x41acec
  41ad16:	test   al,0x31
  41ad18:	pxor   xmm3,xmm3
  41ad1c:	ficom  WORD PTR [ebx+ecx*4]
  41ad1f:	jae    0x41ad88
  41ad21:	jle    0x41ad82
  41ad23:	jae    0x41acbf
  41ad25:	imul   esi,DWORD PTR [ebx-0x2cf199ba],0xffffffc6
  41ad2c:	dec    ebx
  41ad2d:	mov    ch,0x37
  41ad2f:	sbb    edi,DWORD PTR [ebx+esi*8]
  41ad32:	lods   al,BYTE PTR ds:[esi]
  41ad33:	push   eax
  41ad34:	mov    WORD PTR [ebx+0x58],ds
  41ad37:	leave  
  41ad38:	outs   dx,BYTE PTR ds:[esi]
  41ad39:	sbb    DWORD PTR [esi],ebx
  41ad3b:	ss add eax,0xeab2e116
  41ad41:	sub    esp,0x74852788
  41ad47:	add    esi,ebx
  41ad49:	setbe  BYTE PTR [esi-0x1a3d0ca7]
  41ad50:	push   fs
  41ad52:	mov    esi,0x683f227f
  41ad57:	dec    esi
  41ad58:	(bad)  
  41ad59:	ss inc edx
  41ad5b:	jp     0x41ad3f
  41ad5d:	imul   BYTE PTR [ebx+0x45]
  41ad60:	rcl    esp,cl
  41ad62:	pop    ebp
  41ad63:	pop    edi
  41ad64:	pop    ecx
  41ad65:	cmc    
  41ad66:	add    edx,DWORD PTR [esi+0x68]
  41ad69:	sahf   
  41ad6a:	ret    
  41ad6b:	loop   0x41ad04
  41ad6d:	mov    al,0x82
  41ad6f:	in     eax,dx
  41ad70:	jmp    0x41ade7
  41ad72:	aad    0xa3
  41ad74:	cmc    
  41ad75:	and    edx,eax
  41ad77:	xchg   ecx,eax
  41ad78:	mov    ah,0x9b
  41ad7a:	scas   al,BYTE PTR es:[edi]
  41ad7b:	std    
  41ad7c:	sub    bl,BYTE PTR [esi+esi*1]
  41ad7f:	lds    edi,FWORD PTR [edi]
  41ad81:	dec    ebx
  41ad82:	stos   DWORD PTR es:[edi],eax
  41ad83:	(bad)  
  41ad85:	mov    ecx,0x5fb8303c
  41ad8a:	and    al,0x45
  41ad8c:	fwait
  41ad8d:	mov    esi,0x5b63a09
  41ad92:	xor    eax,0xcba2d73
  41ad97:	sub    eax,ebx
  41ad99:	mov    eax,0xacf3654d
  41ad9e:	test   DWORD PTR [edi+0x47],eax
  41ada1:	pop    edi
  41ada2:	out    0xc5,al
  41ada4:	xchg   ebx,eax
  41ada5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ada6:	mov    esi,0xa60494fa
  41adab:	into   
  41adac:	cwde   
  41adad:	fimul  WORD PTR [esi+0xaf24682]
  41adb3:	jmp    0x41ad69
  41adb5:	cmp    edi,esp
  41adb7:	push   es
  41adb8:	rcr    DWORD PTR [esi+0x69],0x1e
  41adbc:	ret    
  41adbd:	pop    eax
  41adbe:	jge    0x41ad46
  41adc0:	xchg   esi,eax
  41adc1:	(bad)  
  41adc2:	lods   al,BYTE PTR ds:[esi]
  41adc3:	loopne 0x41ae07
  41adc5:	xchg   ebp,eax
  41adc6:	and    BYTE PTR [edi+0x2ae8eefb],cl
  41adcc:	jne    0x41adee
  41adce:	rol    BYTE PTR [ebp-0xdcef872],0x56
  41add5:	js     0x41ad90
  41add7:	rcr    BYTE PTR [edx],1
  41add9:	lods   eax,DWORD PTR ds:[esi]
  41adda:	test   DWORD PTR [edi+0x5aa4a467],0x8c1da58e
  41ade4:	cmp    al,0x82
  41ade6:	add    BYTE PTR [esi],dl
  41ade8:	push   si
  41adea:	pop    ss
  41adeb:	mov    esi,0x4ee2f0a7
  41adf0:	sub    eax,DWORD PTR ds:0x6e848378
  41adf6:	add    dl,BYTE PTR es:[ebp-0x21]
  41adfa:	popa   
  41adfb:	jo     0x41adfe
  41adfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adfe:	fisub  DWORD PTR [ecx]
  41ae00:	pop    ss
  41ae01:	es int 0xd0
  41ae04:	xor    al,0x8a
  41ae06:	stos   DWORD PTR es:[edi],eax
  41ae07:	sbb    edx,esp
  41ae09:	or     BYTE PTR [ebx-0x52],al
  41ae0c:	js     0x41ae15
  41ae0e:	imul   ebx,DWORD PTR [eax],0x924749d4
  41ae14:	loope  0x41add7
  41ae16:	mov    DWORD PTR [esi+ebx*2],eax
  41ae19:	adc    eax,0x52257843
  41ae1e:	cmp    al,BYTE PTR [esi+edi*1-0x56fdf]
  41ae25:	dec    edx
  41ae26:	test   BYTE PTR [ebx],bl
  41ae28:	int3   
  41ae29:	pop    ss
  41ae2a:	xor    al,BYTE PTR [esi-0x589c8c19]
  41ae30:	sub    al,0x8d
  41ae32:	inc    ebp
  41ae33:	das    
  41ae34:	leave  
  41ae35:	adc    al,0x42
  41ae37:	outs   dx,BYTE PTR ds:[esi]
  41ae38:	aam    0xa0
  41ae3a:	mov    dl,cl
  41ae3c:	lea    ecx,[esp+esi*8+0xb]
  41ae40:	sbb    bh,BYTE PTR [edi+0x54128e3c]
  41ae46:	push   ebx
  41ae47:	out    0x5e,al
  41ae49:	mov    esp,0x7b835e0d
  41ae4e:	mov    edx,0x1de51c0
  41ae53:	pop    es
  41ae54:	mov    edx,0xf7784a5f
  41ae59:	mov    esi,0x215f5c83
  41ae5e:	aaa    
  41ae5f:	iret   
  41ae60:	mov    edx,0x12f2fadf
  41ae65:	dec    esi
  41ae66:	nop
  41ae67:	push   0xffffffc7
  41ae69:	imul   BYTE PTR ds:0xea54e18f
  41ae6f:	and    BYTE PTR [ebp+0x45],bh
  41ae72:	mov    ss,WORD PTR [ebx+0x65]
  41ae75:	inc    ebp
  41ae76:	or     edx,esp
  41ae78:	fcomp  QWORD PTR [edx-0x23]
  41ae7b:	cmp    BYTE PTR [edi-0x6aa477e9],cl
  41ae81:	cmp    edx,DWORD PTR [esi+0x4c2c5ce9]
  41ae87:	dec    edi
  41ae88:	push   esi
  41ae89:	icebp  
  41ae8a:	push   edi
  41ae8b:	xor    al,0x96
  41ae8d:	mov    WORD PTR [ebp-0x31],?
  41ae90:	frstor [ebp-0x33]
  41ae93:	cmp    DWORD PTR ds:0x4e74bc3c,esi
  41ae99:	xchg   edx,eax
  41ae9a:	ret    
  41ae9b:	lods   al,BYTE PTR ds:[esi]
  41ae9c:	add    al,0x83
  41ae9e:	(bad)  
  41ae9f:	fnstsw WORD PTR cs:[edi]
  41aea2:	pop    esp
  41aea3:	jle    0x41ae9c
  41aea5:	dec    esp
  41aea6:	sbb    eax,DWORD PTR gs:[edi]
  41aea9:	jnp    0x41ae38
  41aeab:	daa    
  41aeac:	test   al,0xdc
  41aeae:	jno    0x41af1c
  41aeb0:	shl    edx,cl
  41aeb2:	and    eax,0xc37a1967
  41aeb7:	mov    edx,0xabad1a0b
  41aebc:	inc    esi
  41aebd:	mov    edx,0xd1a36ed4
  41aec3:	mov    esp,0x20fee397
  41aec8:	cmp    ah,BYTE PTR [eax+0x1a]
  41aecb:	dec    esp
  41aecc:	mov    dl,BYTE PTR [esi+0x54a1d797]
  41aed2:	or     al,0x2
  41aed4:	push   ds
  41aed5:	fcom   DWORD PTR [ebx-0x1f29adb]
  41aedb:	mov    edi,0xa360afdb
  41aee0:	push   0xc895dc5e
  41aee5:	pop    edi
  41aee6:	je     0x41af2b
  41aee8:	adc    DWORD PTR [ebp-0x4973128c],ecx
  41aeee:	mov    ebx,0xf4722d3c
  41aef3:	stos   DWORD PTR es:[edi],eax
  41aef4:	popa   
  41aef5:	(bad)  
  41aef6:	mov    dh,0x3f
  41aef8:	jge    0x41af3a
  41aefa:	xchg   ebx,eax
  41aefb:	int3   
  41aefc:	cmp    eax,0x3a344bac
  41af01:	cmp    ebx,edi
  41af03:	les    edi,FWORD PTR [eax-0x1e18e4c2]
  41af09:	adc    ebx,DWORD PTR [ecx-0x6e07a858]
  41af0f:	xor    al,0x91
  41af11:	push   ecx
  41af12:	lock fwait
  41af14:	scas   al,BYTE PTR es:[edi]
  41af15:	ins    DWORD PTR es:[edi],dx
  41af16:	xor    eax,0x20680ddd
  41af1b:	pushf  
  41af1c:	add    edi,DWORD PTR [esi+0x58]
  41af1f:	fisttp DWORD PTR [esi-0x7a82405]
  41af25:	lahf   
  41af26:	sub    cl,BYTE PTR [edi-0x54ba79ad]
  41af2c:	call   0xa0cb:0x38be57cd
  41af33:	or     BYTE PTR [ebx-0x48],bl
  41af36:	sub    dl,BYTE PTR [eax+eax*1-0x79011d3a]
  41af3d:	xchg   ebx,eax
  41af3e:	shr    ch,cl
  41af40:	popa   
  41af41:	fwait
  41af42:	push   ebx
  41af43:	push   esp
  41af44:	addr16 xchg ecx,eax
  41af46:	out    0x79,al
  41af48:	push   cs
  41af49:	jns    0x41af43
  41af4b:	loope  0x41af34
  41af4d:	nop
  41af4e:	mov    eax,ds:0x6579b95d
  41af53:	mov    al,ds:0x9cb663ce
  41af58:	test   eax,0xc8663fce
  41af5d:	(bad)  
  41af5e:	leave  
  41af5f:	mov    dh,BYTE PTR [edx+0x78553cf5]
  41af65:	xchg   ebp,eax
  41af66:	mov    edx,0xceb5d8f3
  41af6b:	and    al,0x8f
  41af6d:	ret    0x8c23
  41af70:	gs or  eax,0x9b04f6c5
  41af76:	repz add cl,bh
  41af79:	in     al,0xd5
  41af7b:	scas   eax,DWORD PTR es:[edi]
  41af7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af7d:	jnp    0x41afce
  41af7f:	aas    
  41af80:	sbb    al,0xbd
  41af82:	sahf   
  41af83:	mov    dl,0x64
  41af85:	pop    ds
  41af86:	mov    al,ds:0xb068cbb1
  41af8b:	mov    ah,0x7
  41af8d:	std    
  41af8e:	cli    
  41af8f:	mov    ds:0x3e30a9dc,eax
  41af94:	pop    ebx
  41af95:	sub    al,0x6d
  41af97:	push   ebx
  41af98:	jo     0x41af57
  41af9a:	jb     0x41af53
  41af9c:	sbb    BYTE PTR [edi-0x105cd960],al
  41afa2:	jae    0x41af56
  41afa4:	cmp    al,0x2a
  41afa6:	jle    0x41af4d
  41afa8:	adc    eax,0x431892a0
  41afad:	std    
  41afae:	inc    esp
  41afaf:	mov    ds:0x818f2e6b,eax
  41afb4:	add    bl,dh
  41afb6:	lahf   
  41afb7:	mov    eax,0x281aba34
  41afbc:	enter  0x56fb,0xb9
  41afc0:	push   esi
  41afc1:	ins    BYTE PTR es:[edi],dx
  41afc2:	mov    esi,0x5334ac2c
  41afc7:	adc    BYTE PTR [esi-0x42],dl
  41afca:	jo     0x41af61
  41afcc:	mov    ebp,0x1ff23567
  41afd1:	cmp    al,0x1
  41afd3:	dec    edx
  41afd4:	stos   DWORD PTR es:[edi],eax
  41afd5:	(bad)  
  41afd6:	push   edi
  41afd7:	rcr    edi,0xd0
  41afda:	into   
  41afdb:	cmc    
  41afdc:	xchg   ebx,eax
  41afdd:	mov    ch,0x3a
  41afdf:	push   cx
  41afe1:	sub    dl,BYTE PTR [ebx]
  41afe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afe4:	jno    0x41b001
  41afe6:	sub    al,0x80
  41afe8:	dec    esp
  41afe9:	pop    ebp
  41afea:	test   al,0x9b
  41afec:	repnz mov ecx,0x65aa1a45
  41aff2:	(bad)  
  41aff3:	cdq    
  41aff4:	in     al,dx
  41aff5:	add    DWORD PTR [ebp-0x8],ebx
  41aff8:	(bad)  
  41aff9:	ds dec esp
  41affb:	int3   
  41affc:	adc    bh,dl
  41affe:	and    al,ah
  41b000:	jg     0x41afa6
  41b002:	jno    0x41b040
  41b004:	fwait
  41b005:	mov    edi,DWORD PTR [edi]
  41b007:	mov    WORD PTR [ecx+0x133b6736],fs
  41b00d:	daa    
  41b00e:	lods   al,BYTE PTR gs:[esi]
  41b010:	adc    cl,BYTE PTR [bp+di+0x1c]
  41b014:	sub    bh,0xda
  41b017:	mov    ch,0x21
  41b019:	sub    DWORD PTR [edx+eax*8-0x2f],eax
  41b01d:	out    0x9d,eax
  41b01f:	mov    es,WORD PTR [ecx+0x29917c30]
  41b025:	sbb    eax,0xa2c3e434
  41b02a:	fcom   DWORD PTR [edi+edi*1+0x6f93c6c9]
  41b031:	sbb    eax,ecx
  41b033:	sub    DWORD PTR [ecx],0x68aaf8c6
  41b039:	inc    esp
  41b03a:	pop    edi
  41b03b:	pop    ss
  41b03c:	push   esi
  41b03d:	sbb    ch,BYTE PTR [ebp+0x48]
  41b040:	enter  0x4637,0x9b
  41b044:	mov    ds:0xf567d4d8,al
  41b049:	xchg   dh,bl
  41b04b:	inc    edx
  41b04c:	jl     0x41b0ad
  41b04e:	ret    0x56e
  41b051:	and    ah,BYTE PTR [ebx-0x37f9b28d]
  41b057:	xor    esi,DWORD PTR [ebx-0x60b2d0a7]
  41b05d:	bound  ecx,QWORD PTR [esi]
  41b05f:	adc    DWORD PTR [ebp+0xedfcb69],ecx
  41b065:	loopne 0x41aff6
  41b067:	jge    0x41b015
  41b069:	addr16 dec edi
  41b06b:	ret    
  41b06c:	in     eax,dx
  41b06d:	(bad)  
  41b06e:	fld    QWORD PTR [ecx]
  41b070:	push   ebx
  41b071:	inc    bh
  41b073:	outs   dx,DWORD PTR ds:[esi]
  41b074:	jns    0x41b04a
  41b076:	(bad)  
  41b077:	jne    0x41b0d1
  41b079:	pop    ebx
  41b07a:	in     al,dx
  41b07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b07c:	mov    edx,0x253065a4
  41b081:	inc    esi
  41b082:	adc    DWORD PTR [edx+0xb6f6f00],esi
  41b088:	add    al,0x49
  41b08a:	push   ss
  41b08b:	test   al,0xcb
  41b08d:	lds    esp,FWORD PTR [ecx+0x7f]
  41b090:	pop    ss
  41b091:	les    edi,FWORD PTR [edi+0x5167a134]
  41b097:	idiv   dl
  41b099:	dec    ebp
  41b09a:	push   edx
  41b09b:	or     DWORD PTR [esi+0x6a],0x4a
  41b09f:	fdivr  DWORD PTR [eax+eax*1+0x51d677d7]
  41b0a6:	mov    bl,0x3a
  41b0a8:	dec    edi
  41b0a9:	xor    cl,dl
  41b0ab:	popa   
  41b0ac:	sub    al,0x69
  41b0ae:	cmp    al,0x18
  41b0b0:	in     al,dx
  41b0b1:	mov    ds:0x79bae1e3,eax
  41b0b6:	xor    eax,0xe7cd256e
  41b0bb:	add    al,0xea
  41b0bd:	or     eax,0xafdba46c
  41b0c2:	je     0x41b10b
  41b0c4:	loope  0x41b0c8
  41b0c6:	gs dec ecx
  41b0c8:	push   0x5b
  41b0ca:	ins    BYTE PTR es:[edi],dx
  41b0cb:	out    0x15,al
  41b0cd:	mov    ds:0xdd758423,eax
  41b0d2:	xchg   BYTE PTR [edi],bh
  41b0d4:	arpl   ax,ax
  41b0d6:	fsubr  DWORD PTR ss:[ebp+0x7f]
  41b0da:	mov    dl,0x9d
  41b0dc:	adc    eax,DWORD PTR [esi]
  41b0de:	and    eax,0xec787177
  41b0e3:	hlt    
  41b0e4:	rcr    BYTE PTR [edi+0x23],cl
  41b0e7:	sub    BYTE PTR ds:[ebp+ebx*1-0x69],0x57
  41b0ed:	sbb    dh,0xb0
  41b0f0:	loopne 0x41b0d8
  41b0f2:	sti    
  41b0f3:	pop    ebx
  41b0f5:	stos   DWORD PTR es:[edi],eax
  41b0f6:	dec    edi
  41b0f7:	mov    esp,es
  41b0f9:	push   ds
  41b0fa:	neg    DWORD PTR [esi+0x63]
  41b0fd:	mov    al,ds:0x8c2b127b
  41b102:	jbe    0x41b0d5
  41b104:	adc    bl,BYTE PTR [edi]
  41b106:	test   eax,0x181588aa
  41b10b:	or     DWORD PTR [edi],ecx
  41b10d:	and    bl,BYTE PTR [ecx-0x3593592b]
  41b113:	adc    BYTE PTR [edx+0x57],0x61
  41b117:	sub    al,0xd1
  41b119:	inc    esi
  41b11a:	retf   0x6df
  41b11d:	cli    
  41b11e:	imul   BYTE PTR [esi-0x4530bbcb]
  41b124:	cmp    ebp,edx
  41b126:	mov    dl,0xdf
  41b128:	sbb    ebx,DWORD PTR [ecx+eiz*1-0x1dedfa3a]
  41b12f:	inc    esi
  41b130:	outs   dx,BYTE PTR ds:[esi]
  41b131:	adc    edx,esp
  41b133:	dec    ecx
  41b134:	popa   
  41b135:	inc    ebx
  41b136:	push   cs
  41b137:	gs into 
  41b139:	ret    0xb7d1
  41b13c:	pop    esi
  41b13d:	mov    WORD PTR [eax-0x7aade481],ss
  41b143:	jnp    0x41b198
  41b145:	add    al,0x42
  41b147:	xchg   esp,eax
  41b148:	pop    ebx
  41b149:	loopne 0x41b111
  41b14b:	(bad)  
  41b14d:	aas    
  41b14e:	lock pop ss
  41b150:	out    dx,eax
  41b151:	fs pop ecx
  41b153:	in     eax,0x1e
  41b155:	xchg   DWORD PTR [eax-0x58eaf010],esp
  41b15b:	rcl    ch,1
  41b15d:	outs   dx,BYTE PTR ds:[esi]
  41b15e:	xor    ecx,DWORD PTR [edi+edi*2]
  41b161:	not    DWORD PTR [edx+0x1f]
  41b164:	fimul  DWORD PTR [esi+esi*8-0x7683befd]
  41b16b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b16c:	fsubr  DWORD PTR [ebx-0x3c]
  41b16f:	cmp    eax,0x5b6c6526
  41b174:	xor    DWORD PTR [ecx+0x30],0x3d107f32
  41b17b:	shl    BYTE PTR [ecx+0x7d7470a],cl
  41b181:	xor    esp,0xffffffa3
  41b184:	jl     0x41b1be
  41b186:	pop    eax
  41b187:	mov    dl,0x7a
  41b189:	mov    bh,dh
  41b18b:	ds jo  0x41b12c
  41b18e:	dec    edi
  41b18f:	ret    0x7e1c
  41b192:	mov    dl,0x7e
  41b194:	std    
  41b195:	jmp    0x41b1fd
  41b197:	or     ecx,ebx
  41b199:	jne    0x41b13d
  41b19b:	or     eax,ebp
  41b19d:	and    DWORD PTR [edx],edx
  41b19f:	push   edi
  41b1a0:	out    dx,al
  41b1a1:	mov    dl,0xd9
  41b1a3:	mov    eax,0x80b9b0d4
  41b1a8:	sub    DWORD PTR [ebp+0x6c],esi
  41b1ab:	aas    
  41b1ac:	push   edx
  41b1ad:	mov    WORD PTR [ecx+0x76],gs
  41b1b0:	lods   al,BYTE PTR ds:[esi]
  41b1b1:	push   eax
  41b1b2:	adc    eax,0xa1b97be6
  41b1b7:	in     eax,0xf0
  41b1b9:	loope  0x41b232
  41b1bb:	mov    ah,BYTE PTR [edi]
  41b1bd:	ror    DWORD PTR [edx],1
  41b1bf:	xchg   DWORD PTR [edx],esi
  41b1c1:	and    eax,0xacc33c00
  41b1c6:	dec    edi
  41b1c7:	in     eax,dx
  41b1c8:	jo     0x41b15e
  41b1ca:	jae    0x41b229
  41b1cc:	cmp    BYTE PTR [eax-0x42a71530],0x73
  41b1d3:	cmp    DWORD PTR [ecx+0x2c],ebp
  41b1d6:	mov    ebx,0x4adc35e2
  41b1db:	out    0xf3,eax
  41b1dd:	imul   ebp,DWORD PTR es:[edx-0x32],0x78
  41b1e2:	push   0xd9ae3d8d
  41b1e7:	lahf   
  41b1e8:	pop    edx
  41b1e9:	rol    DWORD PTR ds:0x365cfd69,cl
  41b1ef:	jl     0x41b1d2
  41b1f1:	mov    dh,0xa7
  41b1f3:	scas   eax,DWORD PTR es:[edi]
  41b1f4:	dec    edx
  41b1f5:	out    dx,al
  41b1f6:	cmp    al,0x92
  41b1f8:	push   0x39c658a4
  41b1fd:	jbe    0x41b1ba
  41b1ff:	jg     0x41b205
  41b201:	out    dx,eax
  41b202:	movd   edi,mm5
  41b205:	dec    edi
  41b206:	push   ecx
  41b207:	lock inc edx
  41b209:	push   ebp
  41b20a:	arpl   WORD PTR [ebp+0x7d],bp
  41b20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b20e:	aad    0xc9
  41b210:	dec    eax
  41b211:	add    BYTE PTR [esi],al
  41b213:	adc    ebp,DWORD PTR [esi-0x776bceeb]
  41b219:	add    edx,DWORD PTR [eax+0x6c39718a]
  41b21f:	inc    eax
  41b220:	repnz outs dx,DWORD PTR ds:[esi]
  41b222:	sbb    BYTE PTR [edx+edi*1-0x6a],0x52
  41b227:	mov    ds:0xd756e65a,eax
  41b22c:	dec    edx
  41b22d:	ins    DWORD PTR es:[edi],dx
  41b22e:	aam    0xda
  41b230:	inc    esp
  41b231:	in     eax,dx
  41b232:	out    dx,al
  41b233:	dec    ebp
  41b234:	mov    ch,BYTE PTR [ecx-0x7fc029b6]
  41b23a:	add    esi,esp
  41b23c:	outs   dx,DWORD PTR ds:[esi]
  41b23d:	inc    esi
  41b23e:	pop    edi
  41b23f:	ins    DWORD PTR es:[edi],dx
  41b240:	fist   WORD PTR [ebp-0x7e]
  41b243:	mov    bh,BYTE PTR [ebx+0x7d]
  41b246:	mov    cl,0x6c
  41b248:	pop    ebx
  41b249:	mov    bh,0x3a
  41b24b:	outs   dx,DWORD PTR ds:[esi]
  41b24c:	jbe    0x41b26f
  41b24e:	xor    bh,al
  41b250:	outs   dx,BYTE PTR ds:[esi]
  41b251:	test   DWORD PTR [ecx+0x6500853b],edx
  41b257:	hlt    
  41b258:	add    esi,ebx
  41b25a:	push   esi
  41b25b:	in     al,0x5c
  41b25d:	fs pusha 
  41b25f:	retf   0xa028
  41b262:	cmp    al,0x6f
  41b264:	mov    ds:0x77ada3c4,al
  41b269:	dec    ebp
  41b26a:	or     eax,0x5ee366bb
  41b26f:	js     0x41b244
  41b271:	and    dl,BYTE PTR [ecx-0x6c]
  41b274:	inc    ebp
  41b275:	or     BYTE PTR [edx+0x2f15f081],al
  41b27b:	mov    DWORD PTR [edi+0x6f],ebp
  41b27e:	ins    DWORD PTR es:[edi],dx
  41b27f:	(bad)  
  41b280:	gs sti 
  41b282:	shl    DWORD PTR [ebx],0xea
  41b285:	jo     0x41b217
  41b287:	push   esp
  41b288:	test   eax,0x344a0ec2
  41b28d:	xchg   esp,eax
  41b28e:	or     edx,edi
  41b290:	dec    eax
  41b291:	hlt    
  41b292:	outs   dx,BYTE PTR ds:[esi]
  41b293:	add    al,0xaa
  41b295:	mov    BYTE PTR [eax+0x79],cl
  41b298:	xor    bh,BYTE PTR [eax-0x49013dee]
  41b29e:	test   eax,0x3ab93385
  41b2a3:	scas   al,BYTE PTR es:[edi]
  41b2a4:	mov    DWORD PTR [eax],edi
  41b2a6:	jae    0x41b265
  41b2a8:	mov    ebp,0xa5924fde
  41b2ad:	jmp    0x41b306
  41b2af:	aaa    
  41b2b0:	sbb    DWORD PTR [eax-0x7e076d06],ebp
  41b2b6:	rcl    esp,0xa5
  41b2b9:	lea    eax,[ebx+0x4e625d9d]
  41b2bf:	sti    
  41b2c0:	dec    edx
  41b2c1:	test   BYTE PTR [ebp-0x71],0x6b
  41b2c5:	xor    al,0x13
  41b2c7:	and    ah,al
  41b2c9:	adc    ch,BYTE PTR ds:0x68f6357
  41b2cf:	test   al,0x59
  41b2d1:	leave  
  41b2d2:	jp     0x41b2fd
  41b2d4:	lods   eax,DWORD PTR ds:[esi]
  41b2d5:	fld    TBYTE PTR [eax+0x3f]
  41b2d8:	test   ebp,eax
  41b2da:	inc    ebx
  41b2db:	dec    esp
  41b2dc:	ret    0xc86b
  41b2df:	and    eax,0x128c3c45
  41b2e4:	mov    bl,0x65
  41b2e6:	dec    esp
  41b2e7:	iret   
  41b2e8:	outs   dx,BYTE PTR ds:[esi]
  41b2e9:	mov    ch,BYTE PTR [eax+0x4774d406]
  41b2ef:	adc    al,0x2
  41b2f1:	jp     0x41b2fb
  41b2f3:	clc    
  41b2f4:	outs   dx,BYTE PTR ds:[esi]
  41b2f5:	(bad)  
  41b2f6:	in     al,0xdb
  41b2f8:	imul   edi,DWORD PTR [edi],0x57055c1c
  41b2fe:	fnstenv [eax+0x5bae76d7]
  41b304:	or     DWORD PTR [ecx+eiz*8+0x7f],ebx
  41b308:	ret    0xfb17
  41b30b:	and    al,0xd0
  41b30d:	sub    al,0xdd
  41b30f:	inc    ecx
  41b310:	sbb    eax,0xd8f89299
  41b315:	std    
  41b316:	cdq    
  41b317:	hlt    
  41b318:	add    cl,0x74
  41b31b:	mov    ecx,0x974253a0
  41b320:	ds das 
  41b322:	scas   al,BYTE PTR es:[edi]
  41b323:	sahf   
  41b324:	cmp    BYTE PTR [eax+0x2e],0xf3
  41b328:	es retf 0xcdec
  41b32c:	shl    DWORD PTR [ecx+eax*1+0x1375efb9],1
  41b333:	sbb    BYTE PTR [ebp+0x16],0xe2
  41b337:	aaa    
  41b338:	mov    dh,0xfe
  41b33a:	mov    ah,0x1c
  41b33c:	test   eax,0xbcdfe3d
  41b341:	imul   esp,DWORD PTR [ecx+0x1e],0xfd77e2f
  41b348:	stc    
  41b349:	aad    0xca
  41b34b:	mov    bl,0x23
  41b34d:	pop    edx
  41b34e:	js     0x41b3bc
  41b350:	ja     0x41b3c4
  41b352:	test   al,0xa8
  41b354:	loop   0x41b3b5
  41b356:	sbb    DWORD PTR [ecx+0x2ddfd11b],edi
  41b35c:	cmp    dl,BYTE PTR [edi]
  41b35e:	xchg   edx,eax
  41b35f:	test   ch,dh
  41b361:	arpl   cx,bp
  41b363:	mov    dh,0x33
  41b365:	inc    edi
  41b366:	xlat   BYTE PTR ds:[ebx]
  41b367:	inc    edi
  41b368:	mov    dl,al
  41b36a:	ror    DWORD PTR [edi+eiz*8-0x2890275d],1
  41b371:	push   0x363daad1
  41b376:	mov    BYTE PTR [ebp+0x63],dh
  41b379:	ret    0xa88d
  41b37c:	repnz jecxz 0x41b3c0
  41b37f:	das    
  41b380:	lods   eax,DWORD PTR ds:[esi]
  41b381:	dec    edx
  41b382:	daa    
  41b383:	push   ss
  41b384:	xor    esp,DWORD PTR [esi+0x58]
  41b387:	pop    ecx
  41b388:	fidiv  DWORD PTR [edi-0x54]
  41b38b:	pop    ss
  41b38c:	ins    BYTE PTR es:[edi],dx
  41b38d:	rcl    BYTE PTR [esi+0x23],cl
  41b390:	in     eax,dx
  41b391:	(bad)  
  41b392:	jbe    0x41b360
  41b394:	and    eax,0xc34a6f4d
  41b399:	jnp    0x41b3c1
  41b39b:	inc    ebp
  41b39c:	or     eax,0xd8608547
  41b3a1:	jg     0x41b387
  41b3a3:	push   edi
  41b3a4:	push   edi
  41b3a5:	mov    edx,0x115a3e5e
  41b3aa:	add    dh,BYTE PTR [ebx]
  41b3ac:	pop    es
  41b3ad:	mov    edi,0x20ebfc8f
  41b3b2:	xor    ebx,ecx
  41b3b4:	adc    eax,0x48f1375d
  41b3b9:	push   cs
  41b3ba:	mov    BYTE PTR ds:0xc7d7f6ad,al
  41b3c0:	jg     0x41b43e
  41b3c2:	sti    
  41b3c3:	test   eax,0xc7379e5
  41b3c8:	add    bl,BYTE PTR [edx-0xd9c4dfd]
  41b3ce:	aas    
  41b3cf:	in     al,0x58
  41b3d1:	repz imul esp,DWORD PTR [ebp+0x1965e0ca],0xffffff95
  41b3d9:	xchg   esi,eax
  41b3da:	mov    eax,?
  41b3dc:	mov    ebx,0xd134c79b
  41b3e1:	cmp    BYTE PTR ds:[edx],bh
  41b3e4:	dec    edx
  41b3e5:	js     0x41b451
  41b3e7:	scas   eax,DWORD PTR es:[edi]
  41b3e8:	add    eax,0xe26f1081
  41b3ed:	cld    
  41b3ee:	sti    
  41b3ef:	imul   ebx,DWORD PTR [edi+0x44],0x89e32c6c
  41b3f6:	(bad)  
  41b3f7:	ds js  0x41b416
  41b3fa:	(bad)  
  41b3fb:	xor    al,0xf5
  41b3fd:	pop    ds
  41b3fe:	dec    esp
  41b3ff:	and    BYTE PTR [edx+0x7ff0451],bh
  41b405:	mov    dl,0x79
  41b407:	inc    edi
  41b408:	scas   eax,DWORD PTR es:[edi]
  41b409:	out    dx,eax
  41b40a:	push   cs
  41b40b:	adc    DWORD PTR [ebx+0x4c651d42],0xfffffffe
  41b412:	test   eax,0x993d7b8c
  41b417:	in     al,dx
  41b418:	add    bh,BYTE PTR [eax-0x53a716b8]
  41b41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b41f:	imul   edx,DWORD PTR [ebx-0x22f3ba6b],0x67b62123
  41b429:	mov    ah,0x3c
  41b42b:	or     eax,0xc10c16e9
  41b430:	sbb    bl,BYTE PTR [ebp+0x5c]
  41b433:	cli    
  41b434:	xchg   edx,eax
  41b435:	adc    edx,DWORD PTR [edx+0x1b9cc0b3]
  41b43b:	daa    
  41b43c:	ret    0x123e
  41b43f:	jns    0x41b494
  41b441:	fcom   QWORD PTR [edi-0x45]
  41b444:	jecxz  0x41b448
  41b446:	pop    ebx
  41b447:	push   es
  41b448:	mov    edi,DWORD PTR [esi+ebp*2-0x2341193a]
  41b44f:	xor    BYTE PTR [ecx+0x42],bl
  41b452:	in     eax,dx
  41b453:	test   eax,0xb2e9d847
  41b458:	stos   DWORD PTR es:[edi],eax
  41b459:	jmp    0xed77:0x49fc4811
  41b460:	lods   eax,DWORD PTR ds:[esi]
  41b461:	xchg   esp,eax
  41b462:	dec    eax
  41b463:	ins    DWORD PTR es:[edi],dx
  41b464:	rol    BYTE PTR [edx+eax*2+0x4203c283],1
  41b46b:	xor    ch,BYTE PTR [edi-0x30]
  41b46e:	add    ch,BYTE PTR [ecx+0x40]
  41b471:	cmp    ebx,DWORD PTR [esi+0x2086f261]
  41b477:	push   ds
  41b478:	and    eax,0x4d97aee9
  41b47d:	dec    esi
  41b47e:	mul    DWORD PTR [edi+0x51ba47a1]
  41b484:	mov    eax,ds:0x3d2a3115
  41b489:	repnz dec esi
  41b48b:	inc    esp
  41b48c:	dec    ebx
  41b48d:	xlat   BYTE PTR ds:[ebx]
  41b48e:	push   edx
  41b48f:	xor    BYTE PTR [esi],cl
  41b491:	ret    0x1379
  41b494:	(bad)  
  41b495:	pop    eax
  41b496:	aas    
  41b497:	xchg   DWORD PTR [esi-0x55],ecx
  41b49a:	out    dx,al
  41b49b:	push   ebp
  41b49c:	aas    
  41b49d:	lea    ebx,[ebx+0x15]
  41b4a0:	mov    edx,DWORD PTR [edx+esi*4]
  41b4a3:	out    0x30,eax
  41b4a5:	fmul   QWORD PTR [ecx+0x2341612b]
  41b4ab:	cmp    al,0xdf
  41b4ad:	mov    esp,es
  41b4af:	iret   
  41b4b0:	test   eax,0xe8827d88
  41b4b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4b6:	in     eax,0x67
  41b4b8:	mov    edi,0x283ee89f
  41b4bd:	pop    edi
  41b4be:	mov    ds:0x405a9a56,al
  41b4c3:	mov    ebp,DWORD PTR [ebx]
  41b4c5:	and    ch,ch
  41b4c7:	jmp    0x41b50f
  41b4c9:	pop    ss
  41b4ca:	loope  0x41b51b
  41b4cc:	aam    0x65
  41b4ce:	or     DWORD PTR [edx],0xec08c936
  41b4d4:	mov    ch,0xe1
  41b4d6:	push   ecx
  41b4d7:	dec    eax
  41b4d8:	xor    bh,BYTE PTR ss:[ecx-0x5b]
  41b4dc:	imul   eax,DWORD PTR [esi-0x72305024],0xed8baf90
  41b4e6:	push   cs
  41b4e7:	dec    eax
  41b4e8:	sbb    edi,DWORD PTR [eax+0x5bbf90cb]
  41b4ee:	jo     0x41b4ec
  41b4f0:	pop    esi
  41b4f1:	fs sbb al,0x5a
  41b4f4:	cmp    al,0xd8
  41b4f6:	mov    gs,WORD PTR [edi]
  41b4f8:	je     0x41b4d8
  41b4fa:	in     eax,0x66
  41b4fc:	cmp    eax,0xd6e0c7d8
  41b501:	pop    esp
  41b502:	fisub  WORD PTR [eax+0x71]
  41b505:	and    eax,0x6cbb0212
  41b50a:	push   cs
  41b50b:	test   al,0x12
  41b50d:	pop    edx
  41b50e:	call   0x35a:0x67d3dbb3
  41b515:	in     al,dx
  41b516:	xchg   edi,eax
  41b517:	jb     0x41b4fb
  41b519:	unpcklps xmm5,XMMWORD PTR [ecx+0x7797065c]
  41b520:	xor    ch,bl
  41b522:	mov    edx,0x2e84b97a
  41b527:	test   DWORD PTR [edx-0x6e0f102a],0x639b5ece
  41b531:	pushf  
  41b532:	in     eax,0x57
  41b534:	xchg   ebx,eax
  41b535:	mov    al,0x31
  41b537:	gs pop ss
  41b539:	mov    esp,0x85fbb59
  41b53e:	and    ebp,DWORD PTR [ebp-0x65]
  41b541:	sbb    BYTE PTR ds:0x6491a515,al
  41b547:	sub    bl,BYTE PTR [ebx+0x2ac42596]
  41b54d:	cwde   
  41b54e:	sbb    BYTE PTR [ebx-0x49],bh
  41b551:	inc    ch
  41b553:	movq   mm6,mm2
  41b556:	mov    al,ds:0x158c69a6
  41b55b:	inc    esi
  41b55c:	push   eax
  41b55d:	sub    al,0x79
  41b55f:	outs   dx,DWORD PTR ds:[esi]
  41b560:	cmp    cl,BYTE PTR ds:0x9bf730e8
  41b566:	lods   eax,DWORD PTR ds:[esi]
  41b567:	adc    cl,ah
  41b569:	popf   
  41b56a:	out    dx,eax
  41b56b:	ret    0x4268
  41b56e:	in     eax,dx
  41b56f:	sub    DWORD PTR [ecx-0x72],0xffffff84
  41b573:	fistp  DWORD PTR [edx+0x46]
  41b577:	mov    edx,0x956d73c6
  41b57c:	clc    
  41b57d:	dec    edx
  41b57e:	mov    bl,0x20
  41b580:	imul   eax,DWORD PTR [eax],0xcb2b80a4
  41b586:	fabs   
  41b588:	leave  
  41b589:	sbb    eax,0x845e3d4d
  41b58e:	and    al,0x93
  41b590:	(bad)  
  41b591:	pop    ebx
  41b592:	mov    esp,0x47e4ae15
  41b597:	cmp    BYTE PTR [edi],cl
  41b599:	add    eax,0x3f5f47ca
  41b59e:	mov    esi,ecx
  41b5a0:	mov    ah,0xfc
  41b5a2:	xchg   ecx,eax
  41b5a3:	scas   al,BYTE PTR es:[edi]
  41b5a4:	push   ebx
  41b5a5:	fwait
  41b5a6:	ror    bl,1
  41b5a8:	stos   BYTE PTR es:[edi],al
  41b5a9:	rcl    cl,1
  41b5ab:	bound  eax,QWORD PTR [eax-0x4]
  41b5ae:	outs   dx,BYTE PTR ds:[esi]
  41b5af:	xchg   edx,eax
  41b5b0:	push   eax
  41b5b1:	imul   ebp,esp,0x3bf1526d
  41b5b7:	jbe    0x41b5ad
  41b5b9:	int3   
  41b5ba:	xchg   esp,eax
  41b5bb:	mov    edi,0x6ef67ccd
  41b5c0:	sub    al,0x57
  41b5c2:	daa    
  41b5c3:	cli    
  41b5c4:	cwde   
  41b5c5:	dec    ebx
  41b5c6:	out    dx,eax
  41b5c7:	repz inc esp
  41b5c9:	lea    edi,[edx+edx*2+0x47b45d78]
  41b5d0:	cmp    edi,edx
  41b5d2:	lea    edx,[ebp+0x21]
  41b5d5:	and    eax,0x417aa3c0
  41b5da:	sti    
  41b5db:	pop    ds
  41b5dc:	xchg   ecx,eax
  41b5dd:	pop    ss
  41b5de:	iret   
  41b5df:	bound  ebp,QWORD PTR [esi-0x35]
  41b5e2:	add    al,0xec
  41b5e4:	(bad)  
  41b5e5:	leave  
  41b5e6:	loope  0x41b5ce
  41b5e8:	rcl    BYTE PTR [ebx+0x6298281b],cl
  41b5ee:	data16 fs aam 0xe6
  41b5f2:	mov    edx,0x7159de0f
  41b5f7:	jle    0x41b60a
  41b5f9:	jg     0x41b5d8
  41b5fb:	push   esi
  41b5fc:	cld    
  41b5fd:	std    
  41b5fe:	(bad)  
  41b5ff:	rol    BYTE PTR [esi-0x65],1
  41b602:	and    dh,cl
  41b604:	mov    edx,0x1b4ba7d9
  41b609:	loopne 0x41b5eb
  41b60b:	not    ebp
  41b60d:	mov    ebx,0x37d13e14
  41b612:	sahf   
  41b613:	mov    bh,0x84
  41b615:	push   esi
  41b616:	sbb    al,0xbc
  41b618:	jbe    0x41b685
  41b61a:	jmp    0x50c7:0x95fe579c
  41b621:	cmp    al,0x87
  41b623:	int    0x43
  41b625:	mov    es,WORD PTR [ebx+0x68c920b]
  41b62b:	clc    
  41b62c:	rcl    BYTE PTR [esi-0x4b],0x2a
  41b630:	mov    edi,DWORD PTR [ebx+edx*8-0x1da51bb5]
  41b637:	mov    eax,ds:0x616735a1
  41b63c:	cmp    ebx,edi
  41b63e:	mov    al,0x7
  41b640:	mov    cl,0xa0
  41b642:	das    
  41b643:	fisttp DWORD PTR [ebp-0x484b7a05]
  41b649:	push   ds
  41b64a:	test   ebx,ebx
  41b64c:	fisttp DWORD PTR fs:[ebx]
  41b64f:	adc    ebx,DWORD PTR [ecx]
  41b651:	mov    edx,0x429c356
  41b656:	inc    ebp
  41b657:	loop   0x41b609
  41b659:	jecxz  0x41b66e
  41b65b:	jno    0x41b5f8
  41b65d:	mov    BYTE PTR [edx],ch
  41b65f:	jl     0x41b664
  41b661:	or     dh,BYTE PTR [ebx-0x43]
  41b664:	xchg   edx,eax
  41b665:	mov    ch,BYTE PTR [edx-0x7763ae59]
  41b66b:	dec    ebp
  41b66c:	rcl    BYTE PTR [edx+0x5e050d7e],1
  41b672:	and    dh,BYTE PTR [ebp+0x4d]
  41b675:	push   0x318af63
  41b67a:	mov    ah,0x76
  41b67c:	jmp    0x7f5d5202
  41b681:	and    eax,0xf4b4c428
  41b686:	std    
  41b687:	inc    ecx
  41b688:	sbb    al,0xc1
  41b68a:	adc    eax,0xda1f79c4
  41b68f:	ins    DWORD PTR es:[edi],dx
  41b690:	call   0xb3bc9cbb
  41b695:	cwde   
  41b696:	mov    bh,0x50
  41b698:	in     al,dx
  41b699:	xor    al,0x9d
  41b69b:	jmp    0x41b669
  41b69d:	xor    cl,0xac
  41b6a0:	xor    eax,0xbb5641c0
  41b6a5:	ins    BYTE PTR es:[edi],dx
  41b6a6:	aam    0xe
  41b6a8:	sbb    ah,BYTE PTR [eax+0x2114419b]
  41b6ae:	sbb    edx,DWORD PTR ds:0xba3c
  41b6b3:	cmp    al,0x66
  41b6b5:	adc    eax,0x365ca163
  41b6ba:	stos   DWORD PTR es:[edi],eax
  41b6bb:	pop    esp
  41b6bc:	mov    esi,0xb0bc06e3
  41b6c1:	pop    esp
  41b6c2:	scas   eax,DWORD PTR es:[edi]
  41b6c3:	icebp  
  41b6c4:	lea    eax,ds:0xd722ef37
  41b6ca:	jmp    0x7d0c1e8d
  41b6cf:	and    eax,0x4638b32f
  41b6d4:	inc    esi
  41b6d5:	jge    0x41b6a5
  41b6d7:	into   
  41b6d8:	xor    bl,BYTE PTR [eax+0x6fdba1b2]
  41b6de:	adc    al,0x50
  41b6e0:	call   0x13c9539a
  41b6e5:	sbb    al,BYTE PTR [eax+0x48]
  41b6e8:	iret   
  41b6e9:	xchg   esi,eax
  41b6ea:	ret    0xf3c4
  41b6ed:	inc    ecx
  41b6ee:	scas   eax,DWORD PTR es:[edi]
  41b6ef:	sub    BYTE PTR [edx-0xc],bl
  41b6f2:	std    
  41b6f3:	and    esi,edx
  41b6f5:	neg    BYTE PTR [ecx]
  41b6f7:	fwait
  41b6f8:	inc    eax
  41b6f9:	mov    ebx,0x36f70a3a
  41b6fe:	adc    dh,BYTE PTR [edi]
  41b700:	test   DWORD PTR [edx+0x4f1d0317],edx
  41b706:	sub    al,0xb0
  41b708:	inc    ebx
  41b709:	nop    DWORD PTR [edx+0x5a]
  41b70d:	rcl    esp,0xf9
  41b710:	int3   
  41b711:	and    eax,0x8690eb0
  41b716:	jmp    DWORD PTR [ecx]
  41b718:	jg     0x41b765
  41b71a:	out    dx,al
  41b71b:	cwde   
  41b71c:	add    esp,esi
  41b71e:	push   esp
  41b71f:	push   ds
  41b720:	lods   eax,DWORD PTR ds:[esi]
  41b721:	sbb    al,0x9f
  41b723:	sti    
  41b724:	add    ebx,edx
  41b726:	jmp    0x7b80:0x6fc95fad
  41b72d:	mov    ds:0xd408a400,al
  41b732:	nop
  41b733:	fbld   TBYTE PTR [edi-0x4c1a9657]
  41b739:	sbb    ch,cl
  41b73b:	test   ebp,eax
  41b73d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b73e:	das    
  41b73f:	test   eax,0xc0d5eb95
  41b744:	xor    DWORD PTR [edx+ecx*8-0x2473fb88],esi
  41b74b:	sahf   
  41b74c:	mov    bh,0xe9
  41b74e:	jae    0x41b7a2
  41b750:	aaa    
  41b751:	gs dec esp
  41b753:	(bad)  
  41b754:	(bad)  
  41b755:	add    ah,BYTE PTR [eax]
  41b757:	outs   dx,BYTE PTR ds:[esi]
  41b758:	loopne 0x41b777
  41b75a:	pop    DWORD PTR [ecx]
  41b75c:	idiv   bl
  41b75e:	fadd   DWORD PTR [edi]
  41b760:	out    dx,eax
  41b761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b762:	jns    0x41b751
  41b764:	rcr    al,cl
  41b766:	pushf  
  41b767:	push   ds
  41b768:	adc    BYTE PTR [ebx],ch
  41b76a:	inc    esp
  41b76b:	lock cld 
  41b76d:	sbb    BYTE PTR [eax+0x1a3e1ad2],0x41
  41b774:	shl    BYTE PTR [ecx-0x75cc9c4],0x49
  41b77b:	sub    ch,ah
  41b77d:	mov    dh,0xfe
  41b77f:	popa   
  41b780:	mov    edi,es
  41b782:	inc    esi
  41b783:	adc    esi,DWORD PTR [esi+ebp*8-0x1f86189f]
  41b78a:	push   esi
  41b78b:	pusha  
  41b78c:	adc    DWORD PTR [ecx],0x18
  41b78f:	jmp    0x41b7bb
  41b791:	call   0x7ece:0x3f1d427d
  41b798:	mov    ?,WORD PTR [eax+edx*8]
  41b79b:	xor    al,0x4a
  41b79d:	dec    ecx
  41b79e:	mov    ch,0xed
  41b7a0:	adc    ebx,ecx
  41b7a2:	sbb    eax,0x3283adb0
  41b7a7:	pushf  
  41b7a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7a9:	mov    edi,ebp
  41b7ab:	pop    edi
  41b7ac:	mov    ds:0xf55bd21f,eax
  41b7b1:	jb     0x41b73f
  41b7b3:	fistp  WORD PTR [ecx]
  41b7b5:	jmp    FWORD PTR [edx-0x6f]
  41b7b8:	add    al,0xe5
  41b7ba:	and    ebp,DWORD PTR [ebx+ecx*4-0x6f]
  41b7be:	sub    edi,DWORD PTR [ecx]
  41b7c0:	xor    DWORD PTR [ebp-0x52],0xa897d392
  41b7c7:	jns    0x41b83e
  41b7c9:	mov    al,0x57
  41b7cb:	out    0x65,al
  41b7cd:	jecxz  0x41b757
  41b7cf:	jb     0x41b7a1
  41b7d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7d2:	clc    
  41b7d3:	ja     0x41b838
  41b7d5:	fucomip st,st(2)
  41b7d7:	mov    eax,ds:0xf3ee3cbc
  41b7dc:	and    ch,bl
  41b7de:	retf   
  41b7df:	lea    edx,[eax-0x59]
  41b7e2:	xchg   ebp,eax
  41b7e3:	ror    BYTE PTR [esi+0x78],cl
  41b7e6:	mov    dh,0x83
  41b7e8:	sub    dl,BYTE PTR [ecx]
  41b7ea:	jge    0x41b817
  41b7ec:	cdq    
  41b7ed:	jle    0x41b801
  41b7ef:	shl    BYTE PTR [esi-0x5cee58a4],0x81
  41b7f6:	pop    ecx
  41b7f7:	inc    esi
  41b7f8:	and    eax,ecx
  41b7fa:	and    BYTE PTR [edi+eiz*8],ah
  41b7fd:	xchg   ebx,eax
  41b7fe:	std    
  41b7ff:	sbb    eax,0xe077fb92
  41b804:	cmc    
  41b805:	adc    al,0x72
  41b807:	retf   0x258f
  41b80a:	addr16 xchg ecx,eax
  41b80c:	pop    edx
  41b80d:	push   ebp
  41b80e:	(bad)  
  41b80f:	(bad)  
  41b810:	outs   dx,BYTE PTR ds:[esi]
  41b811:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b813:	xor    eax,0xc66aa8b0
  41b818:	dec    edi
  41b819:	or     ch,BYTE PTR [ecx+0x2453d91e]
  41b81f:	leave  
  41b820:	add    DWORD PTR [ebx-0x47],eax
  41b823:	xor    eax,DWORD PTR [esi+0x1edc5431]
  41b829:	shl    eax,cl
  41b82b:	sti    
  41b82c:	popf   
  41b82d:	pcmpeqb mm4,mm5
  41b830:	adc    ebx,DWORD PTR [ecx]
  41b832:	xchg   BYTE PTR [eax+0x59099e6e],al
  41b838:	pop    edx
  41b839:	iret   
  41b83a:	cmp    BYTE PTR [esi-0x129bcf0c],ah
  41b840:	mov    ?,WORD PTR [ecx+0x4d]
  41b843:	bound  ecx,QWORD PTR [esi+0x1e3f4772]
  41b849:	enter  0x53b8,0xa8
  41b84d:	adc    dl,BYTE PTR [eax-0x21]
  41b850:	and    BYTE PTR [ebx+0x23],dl
  41b853:	ins    DWORD PTR es:[edi],dx
  41b854:	lods   eax,DWORD PTR ds:[esi]
  41b855:	ins    BYTE PTR es:[edi],dx
  41b856:	mov    dh,0x2d
  41b858:	jo     0x41b8b8
  41b85a:	sbb    edi,DWORD PTR [esi+0x541f62ce]
  41b860:	cmp    ch,BYTE PTR [ecx+0x12f5e46a]
  41b866:	mov    BYTE PTR [esi+0x29],bh
  41b869:	xor    eax,0x6b4c84fb
  41b86e:	mov    cl,0xf5
  41b870:	mov    eax,0xd1974709
  41b875:	xchg   ebx,eax
  41b876:	cwde   
  41b877:	push   0xffffffa1
  41b879:	js     0x41b893
  41b87b:	int3   
  41b87c:	ficom  WORD PTR [eax]
  41b87e:	dec    esi
  41b87f:	int3   
  41b880:	cmp    eax,0x453ed679
  41b885:	mov    ebx,0xf439e25f
  41b88a:	in     al,0x77
  41b88c:	loop   0x41b8a6
  41b88e:	loopne 0x41b813
  41b890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b891:	ret    
  41b892:	mov    dh,BYTE PTR [edx-0x558ab94e]
  41b898:	xchg   edi,eax
  41b899:	xor    eax,0xe0db1797
  41b89e:	xchg   esi,eax
  41b89f:	ret    
  41b8a0:	mov    edx,0x5686ac17
  41b8a5:	jl     0x41b828
  41b8a7:	call   0x303f:0xa404928b
  41b8ae:	(bad)  
  41b8af:	iret   
  41b8b0:	ret    
  41b8b1:	or     BYTE PTR [ecx-0x1deab9b],al
  41b8b7:	lahf   
  41b8b8:	dec    esi
  41b8b9:	add    ch,BYTE PTR [ecx]
  41b8bb:	sub    eax,0x14b29933
  41b8c0:	mov    WORD PTR [eax+0x40463e5a],es
  41b8c6:	bound  eax,QWORD PTR [esi]
  41b8c8:	loope  0x41b8b9
  41b8ca:	rcr    BYTE PTR [eax],cl
  41b8cc:	std    
  41b8cd:	int3   
  41b8ce:	push   esp
  41b8cf:	xchg   esi,eax
  41b8d0:	int    0x8c
  41b8d2:	stc    
  41b8d3:	adc    DWORD PTR [esi-0x44],edx
  41b8d6:	jecxz  0x41b864
  41b8d8:	pop    ds
  41b8d9:	dec    ecx
  41b8da:	add    BYTE PTR [ecx+esi*4],0x9
  41b8de:	cmp    BYTE PTR [ebp-0x3ddc4643],bl
  41b8e4:	bound  ebp,QWORD PTR [esp+ebx*2]
  41b8e7:	fadd   st,st(2)
  41b8e9:	cmp    BYTE PTR [edi],bh
  41b8eb:	and    bh,cl
  41b8ed:	jns    0x41b907
  41b8ef:	jnp    0x41b89f
  41b8f1:	mov    bl,0x46
  41b8f3:	pop    ebp
  41b8f4:	mov    ch,0xd4
  41b8f6:	(bad)  
  41b8f7:	mov    esp,0xc013207b
  41b8fc:	stos   BYTE PTR es:[edi],al
  41b8fd:	add    DWORD PTR [ecx+0x68f48488],esp
  41b903:	je     0x41b967
  41b905:	push   eax
  41b906:	daa    
  41b907:	shr    ch,0xf1
  41b90a:	stos   BYTE PTR es:[edi],al
  41b90b:	cmp    esi,DWORD PTR [edx+ebx*8+0x27]
  41b90f:	mov    esi,0x62b41e14
  41b914:	call   0xf563d177
  41b919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b91a:	mov    edx,0x649e1fc2
  41b91f:	mov    eax,ds:0x9f2b07c5
  41b924:	pop    ebp
  41b925:	inc    edi
  41b926:	add    dh,al
  41b928:	or     eax,0x13e64556
  41b92d:	inc    esp
  41b92e:	ins    BYTE PTR es:[edi],dx
  41b92f:	call   DWORD PTR [ebp-0x62]
  41b932:	adc    al,0xff
  41b934:	fmul   DWORD PTR [edx]
  41b936:	pop    ebp
  41b937:	fwait
  41b938:	idiv   DWORD PTR [esi-0x38a948b4]
  41b93e:	cmc    
  41b93f:	rcl    DWORD PTR [edx+ecx*2+0x7b58455d],cl
  41b946:	or     DWORD PTR [edx+esi*8],edx
  41b949:	add    al,0x78
  41b94b:	mov    bl,0x52
  41b94d:	call   0xce70:0xa9f4c87
  41b954:	xchg   esi,eax
  41b955:	enter  0xeb4b,0xd2
  41b959:	sub    eax,0xfb10a751
  41b95e:	cdq    
  41b95f:	gs push edi
  41b961:	clc    
  41b962:	ss pop esp
  41b964:	sbb    esi,DWORD PTR [eax]
  41b966:	jb     0x41b98e
  41b968:	mov    dl,0xf9
  41b96a:	dec    edi
  41b96b:	ins    BYTE PTR es:[edi],dx
  41b96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b96d:	nop
  41b96e:	aaa    
  41b96f:	xlat   BYTE PTR ds:[ebx]
  41b970:	fcmovnb st,st(6)
  41b972:	(bad)  
  41b973:	aas    
  41b974:	lahf   
  41b975:	cmp    DWORD PTR [ebx],edi
  41b977:	fstp   TBYTE PTR [edi+eiz*2-0x516fd36e]
  41b97e:	adc    eax,0x59b33fa9
  41b983:	inc    esp
  41b984:	add    cl,ch
  41b986:	adc    DWORD PTR [edx+0x21da1458],esp
  41b98c:	in     eax,dx
  41b98d:	mov    esp,gs
  41b98f:	push   esp
  41b990:	add    al,0xbb
  41b992:	sbb    al,0xf1
  41b994:	push   ebp
  41b995:	ja     0x41b92e
  41b997:	das    
  41b998:	shl    DWORD PTR [edi+0x54],0xdd
  41b99c:	mov    edi,0xeacc6290
  41b9a1:	jl     0x41b941
  41b9a3:	imul   eax,DWORD PTR [eax+ebx*1-0x400e9c76],0x59aa710d
  41b9ae:	xchg   ecx,eax
  41b9af:	mov    ch,0x8d
  41b9b1:	ret    
  41b9b2:	clc    
  41b9b3:	jo     0x41b96e
  41b9b5:	jns    0x41b975
  41b9b7:	sub    DWORD PTR [eax],edx
  41b9b9:	icebp  
  41b9ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9bb:	(bad)  
  41b9bd:	dec    eax
  41b9be:	cmp    ebp,ebp
  41b9c0:	pop    esp
  41b9c1:	mov    dh,cl
  41b9c3:	cmp    eax,0xcf22bb84
  41b9c8:	push   ecx
  41b9c9:	xchg   ebp,eax
  41b9ca:	and    ah,BYTE PTR [eax]
  41b9cc:	add    esi,DWORD PTR [eax+edx*8-0x27]
  41b9d0:	push   0x1d
  41b9d2:	cmp    al,0xd9
  41b9d4:	add    BYTE PTR [ecx+0x4],cl
  41b9d7:	hlt    
  41b9d8:	mov    esp,0x45fc77b9
  41b9dd:	adc    eax,0x628275f9
  41b9e2:	pusha  
  41b9e3:	sbb    ch,bl
  41b9e5:	and    esi,DWORD PTR [esi+ebx*1]
  41b9e8:	ins    BYTE PTR es:[edi],dx
  41b9e9:	test   DWORD PTR [ecx-0x45],eax
  41b9ec:	fxtract 
  41b9ee:	push   es
  41b9ef:	adc    eax,0x1a9dace8
  41b9f4:	pop    ebx
  41b9f5:	inc    ecx
  41b9f6:	ret    0x8c
  41b9f9:	imul   edx,edi,0xb1efaaa0
  41b9ff:	pop    ecx
  41ba00:	lods   al,BYTE PTR ds:[esi]
  41ba01:	fmul   QWORD PTR [edi+eax*8+0x304b9a]
  41ba08:	cwde   
  41ba09:	sbb    esp,DWORD PTR [edi-0x76]
  41ba0c:	clc    
  41ba0d:	adc    edi,DWORD PTR [ecx-0x29]
  41ba10:	cwde   
  41ba11:	and    DWORD PTR [edi+0x627dbf0f],esp
  41ba17:	xor    BYTE PTR [esi-0x3f],dl
  41ba1a:	jmp    0x41ba0e
  41ba1c:	xchg   ebp,eax
  41ba1d:	out    0x74,al
  41ba1f:	cmp    ecx,DWORD PTR [ecx]
  41ba21:	pop    edx
  41ba22:	sub    ebp,DWORD PTR [edi-0x7]
  41ba25:	js     0x41ba8d
  41ba27:	dec    ecx
  41ba28:	in     al,dx
  41ba29:	xor    esp,DWORD PTR [edx]
  41ba2b:	in     eax,dx
  41ba2c:	sub    DWORD PTR [ebp-0x5d7e18fe],0x3b782e1d
  41ba36:	push   es
  41ba37:	scas   eax,DWORD PTR es:[edi]
  41ba38:	xchg   ebp,eax
  41ba39:	pop    es
  41ba3a:	repnz and al,0xaa
  41ba3d:	pop    ebx
  41ba3e:	inc    edx
  41ba3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba40:	and    al,BYTE PTR [edx]
  41ba42:	sti    
  41ba43:	cdq    
  41ba44:	pusha  
  41ba45:	lds    esp,FWORD PTR [edx]
  41ba47:	les    eax,FWORD PTR [ecx+0x0]
  41ba4a:	inc    ebx
  41ba4b:	call   0x3518a253
  41ba50:	in     eax,dx
  41ba51:	aaa    
  41ba52:	mov    al,ds:0xba503ad8
  41ba57:	mov    ebx,0xfea5c1ce
  41ba5c:	enter  0x2644,0xa6
  41ba60:	adc    eax,0xcdb9ae9e
  41ba65:	mov    eax,ds:0x40849116
  41ba6a:	call   0xd321:0xae43d081
  41ba71:	xchg   eax,edi
  41ba73:	push   ss
  41ba74:	mov    gs,WORD PTR [ebx]
  41ba76:	or     al,0x86
  41ba78:	or     DWORD PTR [ebx-0x6545274a],ebp
  41ba7e:	pop    ds
  41ba7f:	jb     0x41ba91
  41ba81:	sub    edi,ecx
  41ba83:	retf   0xe664
  41ba86:	push   0x2d60d307
  41ba8b:	ficomp WORD PTR [ecx+0x2e]
  41ba8e:	pop    ecx
  41ba8f:	popa   
  41ba90:	(bad)  
  41ba91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba92:	sub    bl,BYTE PTR [esi+ecx*4+0x64]
  41ba96:	call   0x32a6:0x4d27a121
  41ba9d:	sti    
  41ba9e:	add    eax,0x461e1438
  41baa3:	lods   al,BYTE PTR ds:[esi]
  41baa4:	dec    ebp
  41baa5:	sbb    eax,0x25
  41baa8:	jg     0x41bb21
  41baaa:	inc    ebx
  41baab:	add    BYTE PTR [edx-0x6],bl
  41baae:	mov    cl,0xff
  41bab0:	int    0x20
  41bab2:	jle    0x41bae6
  41bab4:	ds adc esi,edx
  41bab7:	clc    
  41bab8:	aam    0x54
  41baba:	inc    edx
  41babb:	cmp    DWORD PTR [edx+eax*4+0x2e],edi
  41babf:	mov    esi,esp
  41bac1:	xor    al,0xcd
  41bac3:	lahf   
  41bac4:	scas   al,BYTE PTR es:[edi]
  41bac5:	adc    BYTE PTR [eax],0xf6
  41bac8:	and    eax,0xacf8d8dc
  41bacd:	mov    BYTE PTR [ebx-0x66b8b402],ah
  41bad3:	mov    esp,0x5c72f6b2
  41bad8:	inc    ebx
  41bad9:	nop
  41bada:	mov    edx,0x86eff3a1
  41badf:	test   eax,0x3f6d48ca
  41bae4:	jnp    0x41ba8a
  41bae6:	cld    
  41bae7:	jmp    0x80e4:0xdff5827
  41baee:	retf   0x7342
  41baf1:	mov    esi,0x8f21d4d2
  41baf6:	jmp    0x41bb66
  41baf8:	mov    eax,ds:0x82168a25
  41bafd:	sub    esi,DWORD PTR [ecx+edi*2]
  41bb00:	ret    0x718f
  41bb03:	push   ebp
  41bb04:	arpl   WORD PTR [ebx],bp
  41bb06:	sub    eax,0x64b7ea1e
  41bb0b:	rcr    DWORD PTR [esi+edx*4+0x626c28f1],0xce
  41bb13:	adc    dh,BYTE PTR [ebp+0x1fe73b08]
  41bb19:	ds daa 
  41bb1b:	jb     0x41baa5
  41bb1d:	mov    edi,0x86cdb84f
  41bb22:	push   0xffffffd2
  41bb24:	out    0x64,al
  41bb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb27:	fisubr DWORD PTR [eax+0x65d91d60]
  41bb2d:	int    0x6
  41bb2f:	enter  0xafa,0xf6
  41bb33:	imul   edx,DWORD PTR [edi],0x5d
  41bb36:	call   0xbc33:0x6e4c7ec6
  41bb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb3e:	hlt    
  41bb3f:	cmp    eax,0xdf342b53
  41bb44:	enter  0xf385,0x26
  41bb48:	mov    ds:0x97d61e4,eax
  41bb4d:	push   edx
  41bb4e:	cmp    edi,edi
  41bb50:	aas    
  41bb51:	sti    
  41bb52:	fdivp  st(6),st
  41bb54:	sbb    al,0x9d
  41bb56:	cmp    ecx,ecx
  41bb58:	inc    ebx
  41bb59:	push   di
  41bb5b:	mov    ecx,0x60c54189
  41bb60:	and    eax,0x59294b83
  41bb65:	das    
  41bb66:	push   es
  41bb67:	push   es
  41bb68:	or     eax,0xfd16149c
  41bb6d:	mov    ecx,DWORD PTR [ebx+eiz*8]
  41bb70:	ss fs (bad) 
  41bb73:	mov    ecx,?
  41bb75:	mov    ebp,0xd397b405
  41bb7a:	sti    
  41bb7b:	pushf  
  41bb7c:	sbb    al,0x1e
  41bb7e:	dec    esi
  41bb7f:	fbld   TBYTE PTR ds:0x3b3f5a88
  41bb85:	adc    DWORD PTR [ecx-0x57],0x58673bf4
  41bb8c:	xchg   edi,eax
  41bb8d:	lods   eax,DWORD PTR ds:[esi]
  41bb8e:	lea    edx,[edi+esi*8-0x97803af]
  41bb95:	push   edx
  41bb96:	lods   eax,DWORD PTR ds:[esi]
  41bb97:	push   0xc098ad3e
  41bb9c:	adc    al,0x56
  41bb9e:	or     BYTE PTR [ebp-0x23],dh
  41bba1:	daa    
  41bba2:	aas    
  41bba3:	push   eax
  41bba4:	and    eax,0xe1545544
  41bba9:	jge    0x41bb4a
  41bbab:	rcl    BYTE PTR [eax+0x37],0x17
  41bbaf:	mov    dl,al
  41bbb1:	mov    cl,0xa6
  41bbb3:	push   ecx
  41bbb4:	mov    dh,0x5a
  41bbb6:	call   0xceb7:0x2591d5cd
  41bbbd:	pop    DWORD PTR [ecx+0x32ab386f]
  41bbc3:	test   DWORD PTR [eax-0x1e],esp
  41bbc6:	sub    bh,dl
  41bbc8:	sbb    eax,0x3af9d83d
  41bbcd:	jb     0x41bbe7
  41bbcf:	jle    0x41bc3f
  41bbd1:	fwait
  41bbd2:	std    
  41bbd3:	fidivr WORD PTR [edi]
  41bbd5:	lods   eax,DWORD PTR ds:[esi]
  41bbd6:	mov    ebx,0xe2ac92b0
  41bbdb:	xchg   esi,eax
  41bbdc:	inc    esp
  41bbdd:	cmp    esi,DWORD PTR [esi+ebp*8+0x107aa465]
  41bbe4:	loope  0x41bbac
  41bbe6:	lea    ebx,[eax-0xb]
  41bbe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbea:	int3   
  41bbeb:	pop    esp
  41bbec:	or     eax,0xa73a8e2a
  41bbf1:	mov    dh,0xf1
  41bbf3:	and    eax,0xef8ab3d4
  41bbf8:	cdq    
  41bbf9:	repz (bad) [esi]
  41bbfc:	hlt    
  41bbfd:	inc    eax
  41bbfe:	rol    bl,1
  41bc00:	sti    
  41bc01:	xor    ebx,DWORD PTR [esi]
  41bc03:	mov    ch,0xc
  41bc05:	inc    edx
  41bc06:	or     DWORD PTR [ebp+0x6c],esi
  41bc09:	inc    ebp
  41bc0a:	(bad)  
  41bc0b:	cld    
  41bc0c:	xchg   edi,eax
  41bc0d:	mov    dl,0x18
  41bc0f:	cmp    BYTE PTR [esi+eax*1-0x47],0xb0
  41bc14:	cmp    bh,BYTE PTR [eax]
  41bc16:	add    dh,BYTE PTR [ebx]
  41bc18:	add    eax,0x9ef44d1a
  41bc1d:	fwait
  41bc1e:	cli    
  41bc1f:	je     0x41bc00
  41bc21:	(bad)  
  41bc22:	push   ecx
  41bc23:	(bad)  
  41bc25:	dec    eax
  41bc26:	sub    DWORD PTR [edx-0x52b14fe2],eax
  41bc2c:	sub    eax,0x2020a289
  41bc31:	push   ss
  41bc32:	or     DWORD PTR [edx+0x5a],ecx
  41bc35:	jecxz  0x41bc0e
  41bc37:	(bad)  
  41bc38:	jns    0x41bc11
  41bc3a:	inc    eax
  41bc3b:	mov    bh,bh
  41bc3d:	into   
  41bc3e:	fisubr WORD PTR [ebx]
  41bc40:	or     edx,edi
  41bc42:	stos   DWORD PTR es:[edi],eax
  41bc43:	dec    edi
  41bc44:	xor    bh,BYTE PTR [edi+0x2]
  41bc47:	in     eax,0x61
  41bc49:	js     0x41bc20
  41bc4b:	or     eax,0xbec7b45
  41bc50:	sbb    BYTE PTR [eax],ch
  41bc52:	fisttp DWORD PTR [edx+ebp*1+0x4c]
  41bc56:	in     al,0x8c
  41bc58:	dec    esi
  41bc59:	mov    esi,cs
  41bc5b:	aaa    
  41bc5c:	es das 
  41bc5e:	outs   dx,DWORD PTR ds:[esi]
  41bc5f:	add    edi,ebp
  41bc61:	and    al,0xed
  41bc63:	and    ebx,DWORD PTR [ebx-0x64a23f4c]
  41bc69:	icebp  
  41bc6a:	pop    edx
  41bc6b:	leave  
  41bc6c:	mov    esi,DWORD PTR [esi-0x7]
  41bc6f:	das    
  41bc70:	out    0x8d,al
  41bc72:	jne    0x41bc72
  41bc74:	sub    DWORD PTR [esi-0x3d],ebp
  41bc77:	mov    cl,0xec
  41bc79:	pop    es
  41bc7a:	xlat   BYTE PTR ds:[ebx]
  41bc7b:	jl     0x41bc12
  41bc7d:	sbb    esi,DWORD PTR [eax-0x2bcdc082]
  41bc83:	imul   esp,DWORD PTR [edi+0x9],0xffffff96
  41bc87:	std    
  41bc88:	pusha  
  41bc89:	dec    edx
  41bc8a:	imul   eax,DWORD PTR [edx+0x3648af2b],0xf390a3a0
  41bc94:	cmp    DWORD PTR [edi-0x6450ee0d],esp
  41bc9a:	pop    ds
  41bc9b:	xchg   DWORD PTR [eax],edi
  41bc9d:	push   ds
  41bc9e:	sbb    ah,BYTE PTR [eax-0x65f2e35f]
  41bca4:	dec    edx
  41bca5:	fist   DWORD PTR [ecx-0x50e3712e]
  41bcab:	in     eax,0x73
  41bcad:	fwait
  41bcae:	lds    eax,FWORD PTR [edx-0x201aaea6]
  41bcb4:	inc    eax
  41bcb5:	mov    edi,0xcd58b462
  41bcba:	jmp    0x41bd26
  41bcbc:	add    al,0xf
  41bcbe:	adc    ah,BYTE PTR [ebx]
  41bcc0:	fwait
  41bcc1:	jns    0x41bcde
  41bcc3:	(bad)  
  41bcc4:	xchg   ebp,eax
  41bcc5:	(bad)  
  41bcc6:	adc    eax,0xa3f29435
  41bccb:	fiadd  DWORD PTR [edx-0x44]
  41bcce:	lea    edi,[ebp+0x3f]
  41bcd1:	aad    0x60
  41bcd3:	adc    DWORD PTR [esi],0x76
  41bcd6:	and    DWORD PTR [esi],ecx
  41bcd8:	and    BYTE PTR [ebp+0x2e],0xe7
  41bcdc:	jo     0x41bca2
  41bcde:	dec    ebx
  41bcdf:	(bad)  
  41bce0:	mov    DWORD PTR [esi-0x35],ebx
  41bce3:	mov    ebp,0xce97aaa2
  41bce8:	lds    esi,FWORD PTR [ebx-0x42]
  41bceb:	mov    eax,ds:0xbc160d83
  41bcf0:	(bad)  
  41bcf1:	mov    WORD PTR [edx-0x77],ds
  41bcf4:	jne    0x41bcb2
  41bcf6:	mov    ah,0x18
  41bcf8:	ja     0x41bd42
  41bcfa:	gs push ecx
  41bcfc:	jno    0x41bd48
  41bcfe:	scas   eax,DWORD PTR es:[edi]
  41bcff:	fcomp  QWORD PTR [eax-0x72]
  41bd02:	(bad)  
  41bd03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd04:	xor    bh,BYTE PTR [ecx]
  41bd06:	clc    
  41bd07:	push   0xffffffb6
  41bd09:	pop    es
  41bd0a:	pop    ecx
  41bd0b:	add    eax,0x48bb60d1
  41bd10:	repz mov WORD PTR ds:0x2eaaee7b,ss
  41bd17:	mov    cl,0xe2
  41bd19:	addr16 adc eax,0x981289c5
  41bd1f:	mov    eax,ds:0xc82e9de2
  41bd24:	pop    ebx
  41bd25:	mov    bl,0xd1
  41bd27:	cld    
  41bd28:	add    DWORD PTR [edx-0x1ba8211a],ecx
  41bd2e:	sbb    ah,0x85
  41bd31:	jecxz  0x41bd72
  41bd33:	jle    0x41bccd
  41bd35:	scas   al,BYTE PTR es:[edi]
  41bd36:	gs xchg esp,eax
  41bd38:	mov    WORD PTR [ebx+ecx*2-0x19],es
  41bd3c:	mov    cl,0x46
  41bd3e:	jl     0x41bda9
  41bd40:	or     DWORD PTR [edx+0x676cbc36],ebx
  41bd46:	fsub   QWORD PTR [ecx+0x3788b220]
  41bd4c:	adc    ah,BYTE PTR [ebp+0x3d18a47f]
  41bd52:	cmp    DWORD PTR [ebx],ebx
  41bd54:	retf   
  41bd55:	mul    DWORD PTR [esi+esi*1]
  41bd58:	lods   al,BYTE PTR ds:[esi]
  41bd59:	sbb    esp,DWORD PTR [esi]
  41bd5b:	mov    eax,ds:0xbbc6f94e
  41bd60:	add    esp,DWORD PTR ds:0xa0ee0186
  41bd66:	cmp    eax,0x325cdf22
  41bd6b:	popf   
  41bd6c:	js     0x41bd9d
  41bd6e:	lea    ecx,[eax+0xb4d7d12]
  41bd74:	adc    DWORD PTR [edx],eax
  41bd76:	daa    
  41bd77:	jnp    0x41bdb8
  41bd79:	dec    ebp
  41bd7a:	mov    esi,0xb58ea057
  41bd7f:	xor    eax,0xd10d337a
  41bd84:	not    BYTE PTR [edx]
  41bd86:	stos   BYTE PTR es:[edi],al
  41bd87:	pop    edx
  41bd88:	xor    bh,bh
  41bd8a:	mov    ebx,0x47128f60
  41bd8f:	sub    ecx,DWORD PTR [ebp-0x41932cbf]
  41bd95:	jg     0x41be01
  41bd97:	jmp    0x1eeed30e
  41bd9c:	or     ebx,DWORD PTR [eax]
  41bd9e:	mov    dl,0x1
  41bda0:	mov    cl,0x25
  41bda2:	xchg   ecx,eax
  41bda3:	jge    0x41bdb2
  41bda5:	sub    DWORD PTR [eax+0x70429525],ebp
  41bdab:	xlat   BYTE PTR ds:[ebx]
  41bdac:	add    ebp,esp
  41bdae:	div    al
  41bdb0:	outs   dx,BYTE PTR ds:[esi]
  41bdb1:	sbb    DWORD PTR [esi+0x451176c2],eax
  41bdb7:	or     BYTE PTR ds:0xd5861102,al
  41bdbd:	iret   
  41bdbe:	sahf   
  41bdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc0:	xor    ch,bl
  41bdc2:	jb     0x41bdfd
  41bdc4:	repz pop ebx
  41bdc6:	(bad)  
  41bdc7:	loope  0x41bdca
  41bdc9:	inc    BYTE PTR [ebp+0x61]
  41bdcc:	ins    DWORD PTR es:[edi],dx
  41bdcd:	xchg   dh,al
  41bdcf:	push   es
  41bdd0:	jmp    0x41bdfa
  41bdd2:	ret    
  41bdd3:	in     eax,dx
  41bdd4:	and    al,0xd
  41bdd6:	cwde   
  41bdd7:	daa    
  41bdd8:	iret   
  41bdd9:	out    dx,eax
  41bdda:	mov    dh,BYTE PTR [ecx]
  41bddc:	dec    eax
  41bddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdde:	inc    eax
  41bddf:	lea    ebx,[ecx+0x30]
  41bde2:	jbe    0x41be34
  41bde4:	ror    BYTE PTR [edx+eiz*8-0x44a1963c],0x1b
  41bdec:	jae    0x41bd90
  41bdee:	jno    0x41bdbf
  41bdf0:	mov    ds:0xf25f980b,eax
  41bdf5:	(bad)  
  41bdf6:	stos   BYTE PTR es:[edi],al
  41bdf7:	inc    eax
  41bdf8:	push   ss
  41bdf9:	cld    
  41bdfa:	imul   ebx,DWORD PTR [esi-0x64],0x26
  41bdfe:	mov    eax,ds:0x5b5e84f8
  41be03:	sub    esp,ebp
  41be05:	or     al,0xd9
  41be07:	push   es
  41be08:	xor    ah,cl
  41be0a:	loopne 0x41bde7
  41be0c:	xchg   esp,eax
  41be0d:	adc    bl,BYTE PTR [edx]
  41be0f:	add    DWORD PTR [ebp+0x11],esp
  41be12:	sub    dh,BYTE PTR [esi]
  41be14:	cmp    edi,edx
  41be16:	call   FWORD PTR [esi+eax*1+0x6336df62]
  41be1d:	gs stos DWORD PTR es:[edi],eax
  41be1f:	xor    al,0x41
  41be21:	xlat   BYTE PTR ds:[ebx]
  41be22:	nop
  41be23:	mov    DWORD PTR [esi-0x4385568d],0x60252188
  41be2d:	and    al,0xa0
  41be2f:	enter  0x5ac,0x37
  41be33:	push   esp
  41be34:	jmp    0x41be5a
  41be36:	int    0x41
  41be38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be3a:	mov    ebx,0x881c55f
  41be3f:	(bad)  
  41be40:	push   cs
  41be41:	popa   
  41be42:	add    BYTE PTR [ebx],bh
  41be44:	(bad)  
  41be45:	mov    edx,0xf2237a1e
  41be4a:	mov    BYTE PTR [edx+0x55ac0c37],bl
  41be50:	into   
  41be51:	test   ah,ah
  41be53:	test   DWORD PTR [ebx-0x71ff06a6],edi
  41be59:	addr16 loop 0x41be6d
  41be5c:	mov    ebp,0x169c6984
  41be61:	mov    esi,0xaefb376
  41be66:	add    edi,ecx
  41be68:	aas    
  41be69:	nop
  41be6a:	inc    edx
  41be6b:	or     BYTE PTR [edx+0x49],dl
  41be6e:	popa   
  41be6f:	xchg   ebx,eax
  41be70:	sub    DWORD PTR [esi+0x5e027d17],0xc8b2fe5b
  41be7a:	jae    0x41be9e
  41be7c:	xlat   BYTE PTR ds:[ebx]
  41be7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be7e:	or     bl,al
  41be80:	mov    ds:0x28cd0f2f,eax
  41be85:	mov    cl,0xbd
  41be87:	inc    edi
  41be88:	pop    ecx
  41be89:	(bad)  
  41be8a:	in     al,0x8f
  41be8c:	pushf  
  41be8d:	inc    eax
  41be8e:	push   ecx
  41be8f:	push   ebx
  41be90:	in     eax,0x8d
  41be92:	push   ds
  41be93:	cmp    al,0x3a
  41be95:	fwait
  41be96:	dec    ecx
  41be97:	and    ecx,DWORD PTR [esi+0x2a13aede]
  41be9d:	adc    eax,DWORD PTR [edi-0xd2cce18]
  41bea3:	dec    ebp
  41bea4:	mov    edi,0x89318d41
  41bea9:	push   0x87256ab8
  41beae:	in     al,dx
  41beaf:	xchg   edi,eax
  41beb0:	fsub   DWORD PTR [ebp+0x2e]
  41beb3:	lods   al,BYTE PTR ds:[esi]
  41beb4:	add    ch,BYTE PTR [ebx-0x27]
  41beb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beb8:	add    esi,ebp
  41beba:	and    DWORD PTR [esi-0x405f781b],ecx
  41bec0:	push   ss
  41bec1:	call   0x771a:0x2f185149
  41bec8:	in     eax,dx
  41bec9:	ret    
  41beca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41becb:	dec    ebp
  41becc:	sub    bl,BYTE PTR ds:0xe445f5b1
  41bed2:	scas   eax,DWORD PTR es:[edi]
  41bed3:	pop    ds
  41bed4:	pop    edi
  41bed5:	push   DWORD PTR [edi-0x40]
  41bed8:	inc    eax
  41bed9:	lods   al,BYTE PTR ds:[esi]
  41beda:	test   DWORD PTR [edi-0x37],esp
  41bedd:	jl     0x41beff
  41bedf:	xor    edi,DWORD PTR [edx-0x21]
  41bee2:	pushf  
  41bee3:	lods   eax,DWORD PTR ds:[esi]
  41bee4:	js     0x41be87
  41bee6:	les    edx,FWORD PTR [edx+0x2158cddf]
  41beec:	fnstcw WORD PTR [ebx+0x38b5c9ed]
  41bef2:	(bad)  
  41bef3:	(bad)  
  41bef4:	xchg   esp,eax
  41bef5:	call   0xb9eb:0x4bdd8089
  41befc:	stc    
  41befd:	jne    0x41beda
  41beff:	out    0xe7,al
  41bf01:	fstp   QWORD PTR [edi+edi*4+0x62]
  41bf05:	or     DWORD PTR ds:0x9de32fda,0xba5bdb87
  41bf10:	stos   DWORD PTR es:[edi],eax
  41bf11:	jge    0x41be99
  41bf13:	in     eax,0x3a
  41bf15:	sti    
  41bf16:	je     0x41bf07
  41bf18:	(bad)  
  41bf19:	ja     0x41bef0
  41bf1b:	xchg   edi,eax
  41bf1c:	mov    esp,0xd9d993ce
  41bf21:	jmp    0x8df1a309
  41bf26:	enter  0xec4,0x4d
  41bf2a:	lea    esp,[ebx+0x5fae705d]
  41bf30:	pop    ebp
  41bf31:	push   es
  41bf32:	adc    eax,DWORD PTR [esi]
  41bf34:	cmp    DWORD PTR [edx+0x2a026417],0x48eebcac
  41bf3e:	sub    eax,0x7174a611
  41bf43:	xchg   edi,eax
  41bf44:	je     0x41bf22
  41bf46:	mov    dl,0xd0
  41bf48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf49:	and    BYTE PTR [edi],ch
  41bf4b:	ss pop ebp
  41bf4d:	push   esp
  41bf4e:	or     eax,0xece3a31b
  41bf53:	sub    DWORD PTR [ebp+0x70],ebp
  41bf56:	retf   
  41bf57:	and    BYTE PTR [eax-0x3a6208e0],0x36
  41bf5e:	test   ch,al
  41bf60:	jp     0x41bf69
  41bf62:	rcr    DWORD PTR [edi-0x6426aa8b],cl
  41bf68:	cmp    BYTE PTR [ebp-0x40],ch
  41bf6b:	mov    dl,0xa3
  41bf6d:	pop    ecx
  41bf6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf6f:	adc    eax,0xc00f7a8
  41bf74:	in     al,0xbf
  41bf76:	push   cs
  41bf77:	jb     0x41bf99
  41bf79:	ja     0x41bf8a
  41bf7b:	sub    eax,0x58d63cd4
  41bf80:	jns    0x41c000
  41bf82:	les    eax,FWORD PTR [ebp+0x287df7be]
  41bf88:	sahf   
  41bf89:	sbb    al,0xf8
  41bf8b:	and    al,BYTE PTR [edx]
  41bf8d:	inc    edx
  41bf8e:	mov    bl,0x88
  41bf90:	arpl   WORD PTR [ebx+0x23],sp
  41bf93:	repz shl BYTE PTR [edx],cl
  41bf96:	jge    0x41bf46
  41bf98:	add    eax,0x734d9e1d
  41bf9d:	xlat   BYTE PTR ds:[ebx]
  41bf9e:	scas   al,BYTE PTR es:[edi]
  41bf9f:	mov    eax,ds:0x54877297
  41bfa4:	popf   
  41bfa5:	dec    ebp
  41bfa6:	hlt    
  41bfa7:	sub    DWORD PTR [esi+0x36],edx
  41bfaa:	idiv   eax
  41bfac:	mov    WORD PTR [edx*8+0x1aad2248],ds
  41bfb3:	adc    al,0x63
  41bfb5:	mov    esi,0xd1a36402
  41bfba:	adc    ebx,DWORD PTR [edi]
  41bfbc:	add    al,0x4d
  41bfbe:	sub    ah,BYTE PTR [ebp+0x1c88aa4b]
  41bfc4:	mov    ebp,0x6d297cd8
  41bfc9:	loope  0x41bf59
  41bfcb:	enter  0xee32,0x73
  41bfcf:	push   edx
  41bfd0:	mov    ds,WORD PTR [eax+0x3a]
  41bfd3:	jmp    0xb55a3028
  41bfd8:	dec    ebx
  41bfd9:	lods   eax,DWORD PTR ds:[esi]
  41bfda:	mov    ecx,0x68089a4c
  41bfdf:	adc    al,0xf9
  41bfe1:	arpl   WORD PTR es:[ebp+esi*1-0x56fe065c],bx
  41bfe9:	pop    edx
  41bfea:	mov    esi,0x9b6dbb0c
  41bfef:	repz mov ch,0xa0
  41bff2:	jo     0x41c024
  41bff4:	adc    eax,0xfac009af
  41bff9:	test   BYTE PTR [edi],0xbe
  41bffc:	jg     0x41bf8f
  41bffe:	repnz bound ebp,QWORD PTR [esi+0x59]
  41c002:	aam    0x20
  41c004:	fs dec edx
  41c006:	sub    edi,esi
  41c008:	mov    ds:0xe0d7ae85,al
  41c00d:	cs in  eax,0x90
  41c010:	pop    esp
  41c011:	inc    ecx
  41c012:	sbb    ebx,DWORD PTR [ebx]
  41c014:	cmp    al,0xf
  41c016:	je     0x41bff2
  41c018:	in     eax,0xdc
  41c01a:	cmp    eax,0x64a8e1ee
  41c01f:	or     DWORD PTR [esi+0x35],eax
  41c022:	push   ebp
  41c023:	mov    ebx,0x4325d66f
  41c028:	xor    BYTE PTR [esi+0x3c],dh
  41c02b:	or     al,0x88
  41c02d:	push   0x43
  41c02f:	ficomp WORD PTR [esi+0x1d]
  41c032:	mov    al,ds:0xe6aac042
  41c037:	ss dec esi
  41c039:	leave  
  41c03a:	push   0x666b7571
  41c03f:	nop
  41c040:	sbb    DWORD PTR [ecx-0x1],esi
  41c043:	dec    ebx
  41c044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c045:	cs pop ebp
  41c047:	or     BYTE PTR [eax-0x6bd50d1a],ch
  41c04d:	js     0x41c0bf
  41c04f:	loopne 0x41c0b3
  41c051:	and    BYTE PTR ds:0x7490ce7c,ah
  41c057:	and    al,0x82
  41c059:	or     al,0xc9
  41c05b:	(bad)  
  41c05c:	xor    edx,ecx
  41c05e:	dec    ebx
  41c05f:	(bad)  
  41c060:	and    ebx,ecx
  41c062:	dec    esi
  41c063:	das    
  41c064:	inc    eax
  41c065:	fsub   st,st(6)
  41c067:	mov    ch,0x42
  41c069:	adc    edi,DWORD PTR [ecx]
  41c06b:	aas    
  41c06c:	adc    DWORD PTR [edx-0xf],ecx
  41c06f:	retf   
  41c070:	(bad)  
  41c072:	sti    
  41c073:	ds pop eax
  41c075:	pusha  
  41c076:	fist   DWORD PTR [ebp-0x15]
  41c079:	sub    DWORD PTR [edi],esp
  41c07b:	icebp  
  41c07c:	xchg   esp,eax
  41c07d:	mov    bl,cl
  41c07f:	idiv   ah
  41c081:	add    al,al
  41c083:	push   0x2dddbebd
  41c088:	inc    eax
  41c089:	mov    edi,0xc51450b3
  41c08e:	adc    bl,al
  41c090:	push   ebx
  41c091:	jnp    0x41c05d
  41c093:	retf   0x5ba6
  41c096:	inc    BYTE PTR [ebx-0x6053628c]
  41c09c:	out    dx,eax
  41c09d:	mov    edi,0xaa0e5f77
  41c0a2:	cmc    
  41c0a3:	and    DWORD PTR [eax+edx*1+0xdd215e9],0x3c
  41c0ab:	sub    cl,dl
  41c0ad:	xchg   ebp,eax
  41c0ae:	js     0x41c061
  41c0b0:	iret   
  41c0b1:	(bad)  
  41c0b3:	mov    ecx,0x9fb55f02
  41c0b8:	xor    BYTE PTR [esi+0x1a],0x14
  41c0bc:	imul   edx,DWORD PTR [eax+0x58c2a709],0x74
  41c0c3:	arpl   WORD PTR [ebx],cx
  41c0c5:	adc    al,0xd6
  41c0c7:	jmp    0x41c0cc
  41c0c9:	pop    ebx
  41c0ca:	ins    DWORD PTR es:[edi],dx
  41c0cb:	xchg   DWORD PTR [eax+0x30f9af2a],esi
  41c0d1:	pop    esi
  41c0d2:	fstp   DWORD PTR [ecx]
  41c0d4:	shl    esi,1
  41c0d6:	mov    eax,0x1b39ff87
  41c0db:	in     eax,0x73
  41c0dd:	call   0xe361:0xe2840420
  41c0e4:	sub    al,0x6d
  41c0e6:	adc    DWORD PTR [edi-0x4d],0xffffff96
  41c0ea:	add    eax,0xe28fe2af
  41c0ef:	sub    BYTE PTR [edi+0x7cd47206],al
  41c0f5:	xchg   esp,eax
  41c0f6:	xchg   ebp,eax
  41c0f7:	idiv   BYTE PTR [ecx+eax*1+0x72c674fa]
  41c0fe:	fsubrp st(0),st
  41c100:	pop    eax
  41c101:	lea    edi,[esi]
  41c103:	jns    0x41c17a
  41c105:	adc    ch,0x99
  41c108:	pushf  
  41c109:	mov    ebx,0x152702b
  41c10e:	mov    ds:0x463355f4,al
  41c113:	lds    ebx,FWORD PTR [esi-0xf]
  41c116:	mov    ds:0x8ed9fb7f,eax
  41c11b:	add    bl,BYTE PTR [ecx]
  41c11d:	out    0xc1,eax
  41c11f:	xchg   ebp,eax
  41c120:	arpl   WORD PTR [esi+0x4c17d2c3],ax
  41c126:	arpl   WORD PTR [esi],bx
  41c128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c129:	or     DWORD PTR [edx+0x78d18db],0xffffff83
  41c130:	call   0xf280efe7
  41c135:	xchg   edi,eax
  41c136:	push   edx
  41c137:	loop   0x41c1a9
  41c139:	and    DWORD PTR [esi-0x1e],edx
  41c13c:	mov    es,WORD PTR [ebx+0x2c]
  41c13f:	popa   
  41c140:	push   esi
  41c141:	leave  
  41c142:	jo     0x41c16c
  41c144:	sub    ch,BYTE PTR [eax]
  41c146:	and    ch,0xb4
  41c149:	mov    dh,0xd6
  41c14b:	ficomp WORD PTR [edi]
  41c14d:	xchg   ebx,eax
  41c14e:	pop    edx
  41c14f:	cmp    eax,0xc9012096
  41c154:	mov    ds:0xcd0a6f01,al
  41c159:	jg     0x41c13f
  41c15b:	push   ds
  41c15c:	pushf  
  41c15d:	sbb    ch,BYTE PTR [ecx]
  41c15f:	fidiv  WORD PTR [edi]
  41c161:	out    0xc2,al
  41c163:	push   ds
  41c164:	xor    esi,DWORD PTR [edi+ecx*2+0x12e35d31]
  41c16b:	jmp    0x41c17e
  41c16d:	dec    esp
  41c16e:	mov    eax,ds:0x85935d08
  41c173:	data16 loop 0x41c101
  41c176:	add    esi,edx
  41c178:	(bad)  
  41c179:	xlat   BYTE PTR ds:[ebx]
  41c17a:	lea    ebx,[ebp+0x78aaf4]
  41c180:	sbb    esi,DWORD PTR [ecx]
  41c182:	lods   al,BYTE PTR ds:[esi]
  41c183:	fstp   st(3)
  41c185:	icebp  
  41c186:	lock test DWORD PTR [eax],esi
  41c189:	stos   DWORD PTR es:[edi],eax
  41c18a:	(bad)  
  41c18b:	loop   0x41c203
  41c18d:	adc    eax,0xcef18db6
  41c192:	add    cl,al
  41c194:	loope  0x41c1b6
  41c196:	sbb    al,0xe6
  41c198:	xor    al,0xcb
  41c19a:	push   edi
  41c19b:	and    eax,0xfabe0c4c
  41c1a0:	ret    0xd5ae
  41c1a3:	dec    ebx
  41c1a4:	jns    0x41c199
  41c1a6:	shl    BYTE PTR [eax+edi*2],0x5a
  41c1aa:	fld    DWORD PTR [eax-0x60]
  41c1ad:	push   esp
  41c1ae:	push   ebx
  41c1af:	arpl   WORD PTR [ebx-0x36],ax
  41c1b2:	xchg   esi,eax
  41c1b3:	ror    DWORD PTR [ebx-0x78626e59],1
  41c1b9:	dec    esi
  41c1ba:	adc    bl,dh
  41c1bc:	loop   0x41c1e3
  41c1be:	pop    ds
  41c1bf:	inc    esp
  41c1c0:	adc    BYTE PTR [ebx],bl
  41c1c2:	jnp    0x41c1a2
  41c1c4:	inc    eax
  41c1c5:	mov    ch,0xa7
  41c1c7:	ins    DWORD PTR es:[edi],dx
  41c1c8:	mov    bl,0x91
  41c1ca:	aaa    
  41c1cb:	mov    cl,0x74
  41c1cd:	mov    bl,0x23
  41c1cf:	mov    ebx,0xfbe1f4b6
  41c1d4:	sub    DWORD PTR [ebx-0x6],ebx
  41c1d7:	lods   eax,DWORD PTR ds:[esi]
  41c1d8:	jmp    0xf4cb:0xc9139722
  41c1df:	pop    esi
  41c1e0:	imul   BYTE PTR [edi+0x3d81178e]
  41c1e6:	ja     0x41c1d6
  41c1e8:	stos   BYTE PTR es:[edi],al
  41c1e9:	xor    ecx,DWORD PTR [edi-0x7f]
  41c1ec:	sub    ecx,DWORD PTR [ecx]
  41c1ee:	dec    edi
  41c1ef:	loope  0x41c1fd
  41c1f1:	aas    
  41c1f2:	ins    DWORD PTR es:[edi],dx
  41c1f3:	adc    BYTE PTR [ebp-0x635ca9b4],al
  41c1f9:	vpsllq xmm1,xmm4,xmm7
  41c1fd:	retf   
  41c1fe:	or     BYTE PTR [ecx+0x1f74a918],bl
  41c204:	add    DWORD PTR [edx],ecx
  41c206:	push   eax
  41c207:	mov    edi,0x9b4a256a
  41c20c:	sub    bh,dl
  41c20e:	loope  0x41c26c
  41c210:	aaa    
  41c211:	jmp    0xa895:0x843d213a
  41c218:	dec    esi
  41c219:	mov    ch,0x2c
  41c21b:	out    0x17,eax
  41c21d:	out    0xda,eax
  41c21f:	ins    BYTE PTR es:[edi],dx
  41c220:	mov    ah,bh
  41c222:	les    ebp,FWORD PTR [edx+0x28]
  41c225:	sub    al,0xbe
  41c227:	sub    eax,0x837e5a65
  41c22c:	sbb    bh,BYTE PTR gs:[ebx+0x2bbfd34a]
  41c233:	imul   edx,DWORD PTR [edi+0x18928ee],0xffffffe9
  41c23a:	(bad)  
  41c23b:	arpl   bx,si
  41c23d:	stos   BYTE PTR es:[edi],al
  41c23e:	icebp  
  41c23f:	fcom   st(5)
  41c241:	(bad)  
  41c242:	jmp    0x41c28a
  41c244:	aad    0x21
  41c246:	mov    ah,0x31
  41c248:	das    
  41c249:	ret    
  41c24a:	les    edx,FWORD PTR [ebp-0x6d]
  41c24d:	inc    edx
  41c24e:	and    al,0xd7
  41c250:	or     dh,BYTE PTR [ebx+esi*1]
  41c253:	loope  0x41c290
  41c255:	sti    
  41c256:	pop    esi
  41c257:	mov    edx,0x55c6e3fe
  41c25c:	sub    BYTE PTR [edx],bh
  41c25e:	iret   
  41c25f:	sub    eax,edi
  41c261:	push   es
  41c262:	imul   edi,esp,0xba44a729
  41c268:	or     al,0x8c
  41c26a:	jnp    0x41c223
  41c26c:	std    
  41c26d:	xor    al,0xae
  41c26f:	int3   
  41c270:	lea    edi,[esi]
  41c272:	xor    eax,0x5b67695e
  41c277:	ins    DWORD PTR es:[edi],dx
  41c278:	dec    ebx
  41c279:	ds dec ebx
  41c27b:	icebp  
  41c27c:	mov    edx,0xe19cfa1e
  41c281:	add    cl,BYTE PTR [esi-0x7c0b137f]
  41c287:	pop    esi
  41c288:	pop    ebp
  41c289:	js     0x41c2d2
  41c28b:	mov    al,ds:0xcd1b5bf4
  41c290:	mov    edx,0x75a32ecd
  41c295:	sbb    ebp,DWORD PTR [edi]
  41c297:	xchg   esi,eax
  41c298:	pop    ecx
  41c299:	fs jg  0x41c2db
  41c29c:	mov    edx,0xdcf0d135
  41c2a1:	stos   BYTE PTR es:[edi],al
  41c2a2:	xor    DWORD PTR [esi-0x72f987f],eax
  41c2a8:	sti    
  41c2a9:	jl     0x41c31c
  41c2ab:	mov    cs,ebx
  41c2ad:	or     BYTE PTR [ebx+ecx*8-0x3b],bl
  41c2b1:	sbb    BYTE PTR ds:0xb325b329,ah
  41c2b7:	add    BYTE PTR [ecx-0x3b],ah
  41c2ba:	push   0xac490125
  41c2bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2c0:	aam    0x63
  41c2c2:	cli    
  41c2c3:	pop    ss
  41c2c4:	push   0x732ccf0d
  41c2c9:	aam    0xea
  41c2cb:	ficom  WORD PTR [eax-0x32d7244f]
  41c2d1:	dec    ebp
  41c2d2:	pushf  
  41c2d3:	test   al,0x5e
  41c2d5:	or     DWORD PTR [esi+0x27cfe895],ebx
  41c2db:	jle    0x41c2fc
  41c2dd:	xor    esi,DWORD PTR [esi-0x3ecbffac]
  41c2e3:	inc    esp
  41c2e4:	mov    bh,0xfa
  41c2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2e7:	into   
  41c2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2e9:	xor    cl,BYTE PTR [edi-0x3f]
  41c2ec:	data16 mov BYTE PTR [eax+0x72a42bec],cl
  41c2f3:	pop    esp
  41c2f4:	fldcw  WORD PTR [ebx]
  41c2f6:	xchg   ecx,eax
  41c2f7:	add    BYTE PTR [ebx+0x2e],dh
  41c2fa:	fstp   DWORD PTR [eax]
  41c2fc:	push   esi
  41c2fd:	(bad)  
  41c2fe:	fmul   DWORD PTR [ebp+0x3b44ced1]
  41c304:	adc    ebp,DWORD PTR [edx]
  41c306:	lea    esi,gs:[ecx+0x31fa37db]
  41c30d:	jb     0x41c370
  41c30f:	mov    bl,0x89
  41c311:	pop    ss
  41c312:	std    
  41c313:	cmp    DWORD PTR [ebx+edi*8+0x6f5a7569],0x8b38c514
  41c31e:	fisttp WORD PTR ds:0x933aa52d
  41c324:	retf   
  41c325:	cs inc ebp
  41c327:	jae    0x41c391
  41c329:	retf   0xcec4
  41c32c:	dec    ebx
  41c32d:	rcr    ebx,1
  41c32f:	nop
  41c330:	in     al,0x28
  41c332:	sub    ecx,DWORD PTR [esi+0x6fca75b7]
  41c338:	pusha  
  41c339:	and    DWORD PTR [ecx],esi
  41c33b:	xchg   ebp,eax
  41c33c:	cmp    eax,0xfca707d9
  41c341:	loope  0x41c382
  41c343:	sahf   
  41c344:	cmp    BYTE PTR [ebp-0x11],ch
  41c347:	add    BYTE PTR [ecx+esi*4+0x3dc6fce6],bl
  41c34e:	pushf  
  41c34f:	xor    BYTE PTR [esi-0x26],cl
  41c352:	xor    BYTE PTR [ebx],al
  41c354:	pop    edi
  41c355:	adc    bh,BYTE PTR [edi]
  41c357:	or     DWORD PTR [ebx+0x74fc6f87],ecx
  41c35d:	push   eax
  41c35e:	lea    di,[esi+0x1201c8]
  41c365:	call   0x8acb4d2e
  41c36a:	shr    DWORD PTR [ebp-0x5c11ad54],cl
  41c370:	ja     0x41c303
  41c372:	pop    eax
  41c373:	pop    ss
  41c374:	js     0x41c38c
  41c376:	ds daa 
  41c378:	and    al,0xaa
  41c37a:	sahf   
  41c37b:	push   edx
  41c37c:	cwde   
  41c37d:	inc    edx
  41c37e:	xchg   ebp,eax
  41c37f:	xchg   esp,eax
  41c380:	mov    ah,0x53
  41c382:	push   ecx
  41c383:	and    BYTE PTR [eax-0x14],bl
  41c386:	cmp    BYTE PTR [eax+0x30b26aaa],dh
  41c38c:	jne    0x41c32c
  41c38e:	sahf   
  41c38f:	cld    
  41c390:	out    dx,al
  41c391:	inc    ebx
  41c392:	mov    ax,ds:0x22cf47b6
  41c398:	into   
  41c399:	jmp    0x2ee2cf7a
  41c39e:	push   esp
  41c39f:	inc    ebx
  41c3a0:	jbe    0x41c356
  41c3a2:	add    DWORD PTR [ebx-0x5f],edi
  41c3a5:	mov    dh,BYTE PTR [ebp+eiz*2-0xb]
  41c3a9:	push   ss
  41c3aa:	push   ds
  41c3ab:	clc    
  41c3ac:	(bad)  
  41c3ad:	outs   dx,BYTE PTR ds:[esi]
  41c3ae:	mov    edx,0x8b570b39
  41c3b3:	into   
  41c3b4:	sub    bl,BYTE PTR [eax+eiz*2]
  41c3b7:	out    0xe7,eax
  41c3b9:	or     ch,BYTE PTR ds:0x30007790
  41c3bf:	pop    ss
  41c3c0:	mov    ch,0xef
  41c3c2:	scas   al,BYTE PTR es:[edi]
  41c3c3:	mov    ecx,0x70603daa
  41c3c8:	sub    bl,ah
  41c3ca:	push   0xd9ff5531
  41c3cf:	cli    
  41c3d0:	sbb    al,0x36
  41c3d2:	dec    ebx
  41c3d3:	dec    ebp
  41c3d4:	xor    al,0x40
  41c3d6:	arpl   WORD PTR [ebx+0x51595520],cx
  41c3dc:	sbb    edi,DWORD PTR [esi+0x302ed56]
  41c3e2:	jle    0x41c439
  41c3e4:	out    dx,al
  41c3e5:	push   ss
  41c3e6:	push   edi
  41c3e7:	xor    BYTE PTR [ebx-0x7e],bh
  41c3ea:	inc    esi
  41c3eb:	rcr    DWORD PTR [eax],1
  41c3ed:	out    0x2e,eax
  41c3ef:	mov    dh,0xae
  41c3f1:	imul   eax,DWORD PTR [eax+eiz*2-0x59],0x50
  41c3f6:	or     eax,DWORD PTR [ebp-0x559fc779]
  41c3fc:	or     ch,cl
  41c3fe:	mov    ds:0x48a48523,al
  41c403:	push   esi
  41c404:	aas    
  41c405:	cmp    al,0x94
  41c407:	jp     0x41c46c
  41c409:	dec    edi
  41c40a:	scas   eax,DWORD PTR es:[edi]
  41c40b:	test   dh,dl
  41c40d:	retf   
  41c40e:	jmp    0xe74f:0xccefdc80
  41c415:	jo     0x41c496
  41c417:	sbb    eax,eax
  41c419:	and    DWORD PTR [ebx+0x15fe48b3],0xffffffbe
  41c420:	cmp    al,0x57
  41c422:	push   ss
  41c423:	(bad)  
  41c424:	cmc    
  41c425:	or     BYTE PTR [eiz*2+0x65276eb5],dl
  41c42c:	push   ebp
  41c42d:	outs   dx,BYTE PTR ds:[esi]
  41c42e:	ja     0x41c42c
  41c430:	mov    ah,0xcb
  41c432:	ror    DWORD PTR [bx+si],cl
  41c435:	sub    eax,0x9f9c2124
  41c43a:	sbb    esp,DWORD PTR [ecx-0x3e1976d1]
  41c440:	into   
  41c441:	stos   DWORD PTR es:[edi],eax
  41c442:	je     0x41c3f7
  41c444:	sbb    ah,BYTE PTR [eax+ebp*4]
  41c447:	dec    esi
  41c448:	cwde   
  41c449:	ss mov esp,0xba8d09ec
  41c44f:	inc    edx
  41c450:	sti    
  41c451:	stos   BYTE PTR es:[edi],al
  41c452:	push   ebx
  41c453:	les    eax,FWORD PTR [ebx+ecx*4-0x41]
  41c457:	cmp    edx,DWORD PTR [edx+0x991d5f7]
  41c45d:	sub    eax,ebx
  41c45f:	ds je  0x41c400
  41c462:	sub    BYTE PTR [edi+0xbbe604a],cl
  41c468:	jae    0x41c49d
  41c46a:	mov    bl,0xdb
  41c46c:	cmp    ebp,DWORD PTR [edi-0x7aa52624]
  41c472:	test   eax,0x2aa70f1c
  41c477:	cmp    DWORD PTR [ebx+0x53e0515c],esp
  41c47d:	imul   esp,DWORD PTR [ebp-0x31ec432c],0xd89bdf9e
  41c487:	std    
  41c488:	icebp  
  41c489:	xchg   esp,eax
  41c48a:	loope  0x41c46c
  41c48c:	lea    esi,ds:0xb43636a1
  41c492:	or     DWORD PTR [ecx-0x80],esi
  41c495:	inc    eax
  41c496:	xchg   BYTE PTR [esi],bl
  41c498:	ds adc al,0x5e
  41c49b:	sbb    DWORD PTR [eax+0x10746b02],0x13
  41c4a2:	std    
  41c4a3:	and    BYTE PTR ds:0xc62c541f,ah
  41c4a9:	ds mov esi,ebx
  41c4ac:	cmp    eax,0x7864db0c
  41c4b1:	dec    edx
  41c4b2:	les    esi,FWORD PTR [edx+0x262ecfee]
  41c4b8:	out    dx,eax
  41c4b9:	push   esp
  41c4ba:	jo     0x41c4d0
  41c4bc:	(bad)  
  41c4bd:	das    
  41c4be:	cmp    ebx,0xb752aac6
  41c4c4:	dec    esp
  41c4c5:	out    dx,al
  41c4c6:	cmp    DWORD PTR [ebx-0x3a84036f],eax
  41c4cc:	inc    edi
  41c4cd:	arpl   WORD PTR [esi+0x25],bx
  41c4d0:	xchg   ebp,eax
  41c4d1:	mov    bl,0x4a
  41c4d3:	lods   eax,DWORD PTR ds:[esi]
  41c4d4:	cdq    
  41c4d5:	ror    bl,1
  41c4d7:	test   eax,0xb2cd7ad0
  41c4dc:	fsub   DWORD PTR [esi]
  41c4de:	cmc    
  41c4df:	aaa    
  41c4e0:	xor    edx,edx
  41c4e2:	(bad)  
  41c4e3:	and    BYTE PTR [esi+0x4c],al
  41c4e6:	inc    ecx
  41c4e7:	mov    esi,0x76584155
  41c4ec:	mov    esi,ecx
  41c4ee:	popa   
  41c4ef:	out    0xca,al
  41c4f1:	xchg   ecx,eax
  41c4f2:	adc    al,0xa7
  41c4f4:	cmp    DWORD PTR [esi],edi
  41c4f6:	int    0xe
  41c4f8:	fadd   QWORD PTR [ecx-0x31]
  41c4fb:	xor    al,0xc9
  41c4fe:	pop    esp
  41c4ff:	mov    dh,0x21
  41c501:	mov    bl,0xea
  41c503:	cmp    eax,0x3cad6de9
  41c508:	int    0x4c
  41c50a:	aam    0x9f
  41c50c:	in     eax,0xe0
  41c50e:	popa   
  41c50f:	clc    
  41c510:	mov    esp,0x44749827
  41c515:	jns    0x41c4c6
  41c517:	test   eax,0x953b6b03
  41c51c:	aas    
  41c51d:	or     esi,DWORD PTR [edx-0x79]
  41c520:	hlt    
  41c521:	cld    
  41c522:	or     DWORD PTR [esi+esi*4],esi
  41c525:	stos   BYTE PTR es:[edi],al
  41c526:	test   eax,0x47081a96
  41c52b:	mov    bl,0x3d
  41c52d:	out    0x42,al
  41c52f:	inc    ecx
  41c530:	daa    
  41c531:	arpl   sp,dx
  41c533:	les    edi,FWORD PTR [ecx-0x30]
  41c536:	enter  0xbdeb,0xdb
  41c53a:	cld    
  41c53b:	(bad)  
  41c53c:	rcl    BYTE PTR ds:0x1c5087c2,0x5
  41c543:	mov    ch,0x4b
  41c545:	cmp    esi,DWORD PTR [esi-0x68]
  41c548:	or     al,0x36
  41c54a:	or     eax,0xd94e4410
  41c54f:	mov    ah,0xd5
  41c551:	jnp    0x41c5bc
  41c553:	dec    ebx
  41c554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c555:	outs   dx,BYTE PTR ds:[esi]
  41c556:	add    al,0x8f
  41c558:	daa    
  41c559:	adc    esi,DWORD PTR [ebp-0x7c]
  41c55c:	rcr    edx,0xc3
  41c55f:	mov    al,ds:0xbdfb863d
  41c564:	push   esi
  41c565:	stc    
  41c566:	xor    eax,0xb7e1f7dd
  41c56b:	sub    bl,BYTE PTR [ecx+0x19]
  41c56e:	es pop edx
  41c570:	inc    ebp
  41c571:	repnz push esi
  41c573:	push   edi
  41c574:	sbb    DWORD PTR [ecx+0x528adb63],esi
  41c57a:	dec    eax
  41c57b:	cmp    DWORD PTR ds:0x1e66ceb9,eax
  41c581:	mov    esi,0xd51a193a
  41c586:	inc    esp
  41c587:	mov    ds,WORD PTR [edx+edi*2-0x1e7d1865]
  41c58e:	mov    dl,0xc8
  41c590:	xchg   edi,eax
  41c591:	mov    dh,0xe8
  41c593:	pop    ds
  41c594:	push   ecx
  41c595:	ja     0x41c544
  41c597:	outs   dx,BYTE PTR ds:[esi]
  41c598:	sbb    al,0x19
  41c59a:	xor    DWORD PTR [ecx-0x28],0x73
  41c59e:	xor    bl,BYTE PTR [edi+0x61]
  41c5a1:	std    
  41c5a2:	jmp    0xd0cd:0xb316f64c
  41c5a9:	scas   al,BYTE PTR es:[edi]
  41c5aa:	gs fcmovnb st,st(0)
  41c5ad:	sbb    al,0xd6
  41c5af:	push   0x24
  41c5b1:	data16 (bad) 
  41c5b4:	je     0x41c631
  41c5b6:	push   ebx
  41c5b7:	and    DWORD PTR [esi-0x7554e4a5],ebx
  41c5bd:	sbb    DWORD PTR [edx-0x23],edi
  41c5c0:	pop    es
  41c5c1:	ja     0x41c5e3
  41c5c3:	addr16 sti 
  41c5c5:	pop    ds
  41c5c6:	test   BYTE PTR [edi+0x4c428ca5],0x1f
  41c5cd:	das    
  41c5ce:	or     al,0x1e
  41c5d0:	fild   DWORD PTR [ecx+0x12]
  41c5d3:	xchg   ebx,eax
  41c5d4:	test   edx,ecx
  41c5d6:	es pop edi
  41c5d8:	jg     0x41c5b8
  41c5da:	or     bh,al
  41c5dc:	cmp    edi,ebp
  41c5de:	xchg   ecx,eax
  41c5df:	in     eax,0xca
  41c5e1:	aas    
  41c5e2:	daa    
  41c5e3:	mov    ch,0xbd
  41c5e5:	scas   eax,DWORD PTR es:[edi]
  41c5e6:	cmp    bh,0xcd
  41c5e9:	or     DWORD PTR ds:0x627fbf56,esi
  41c5ef:	jge    0x41c5c2
  41c5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5f2:	add    esp,DWORD PTR [edi+0xddb35f2]
  41c5f8:	mov    edi,DWORD PTR [edx+ebp*4+0x76]
  41c5fc:	jae    0x41c587
  41c5fe:	adc    DWORD PTR ds:0x4d7f08fe,esp
  41c604:	ror    DWORD PTR [eax+0x45cbc150],cl
  41c60a:	neg    DWORD PTR [ecx+0x5e4cbea2]
  41c610:	adc    ebp,ecx
  41c612:	repnz enter 0x4994,0x7b
  41c617:	jmp    edx
  41c619:	cmp    al,0x97
  41c61b:	ins    DWORD PTR es:[edi],dx
  41c61c:	cmp    ch,BYTE PTR [esi-0xd]
  41c61f:	push   esp
  41c620:	outs   dx,DWORD PTR ds:[esi]
  41c621:	mov    dl,0xb
  41c623:	or     eax,0x93c37d91
  41c628:	adc    BYTE PTR [ecx+0x34c77217],bh
  41c62e:	inc    BYTE PTR [ecx-0x66]
  41c631:	adc    WORD PTR [edx-0x2836dffd],0xb421
  41c63a:	mov    eax,0x7722187f
  41c63f:	call   ebx
  41c641:	scas   eax,DWORD PTR es:[edi]
  41c642:	sub    ah,ah
  41c644:	(bad)  
  41c645:	push   eax
  41c646:	(bad)  
  41c647:	out    dx,al
  41c648:	mov    cl,0x12
  41c64a:	div    DWORD PTR [ebp+0x58c29ab8]
  41c650:	and    BYTE PTR [ebx+0x59],cl
  41c653:	retf   0x3590
  41c656:	imul   eax,DWORD PTR [ecx],0x679215f4
  41c65c:	leave  
  41c65d:	icebp  
  41c65e:	fcomp  st(3)
  41c660:	ins    BYTE PTR es:[edi],dx
  41c661:	test   eax,0x6b43bbb8
  41c666:	(bad)  
  41c668:	shl    ah,0xcf
  41c66b:	retf   0xa82d
  41c66e:	gs js  0x41c63a
  41c671:	sub    eax,0x5091f152
  41c676:	pop    esi
  41c677:	test   BYTE PTR [ebx+0x474e1f73],dl
  41c67d:	push   cs
  41c67e:	sti    
  41c67f:	jbe    0x41c6d3
  41c681:	mov    eax,ds:0xd59cdbaf
  41c686:	and    dh,dl
  41c688:	add    al,BYTE PTR [esi-0x761f907e]
  41c68e:	cmp    edi,ecx
  41c690:	add    BYTE PTR ds:[esi-0x3f],ch
  41c694:	fwait
  41c695:	adc    edi,DWORD PTR [edi-0x5fff2cc9]
  41c69b:	je     0x41c6a9
  41c69d:	sbb    BYTE PTR [edx-0x72],dl
  41c6a0:	jnp    0x41c70a
  41c6a2:	sbb    edx,DWORD PTR [edx+0x519ac10]
  41c6a8:	es mov ah,0x49
  41c6ab:	lods   al,BYTE PTR ds:[esi]
  41c6ac:	or     al,0xdb
  41c6ae:	test   dh,dh
  41c6b0:	jg     0x41c650
  41c6b2:	(bad)  
  41c6b4:	pop    eax
  41c6b5:	mov    esi,0xc15cead5
  41c6ba:	sbb    al,0xae
  41c6bc:	test   BYTE PTR [ebx+0x23],0xdd
  41c6c0:	xchg   esp,eax
  41c6c1:	call   0x8e709d42
  41c6c6:	mov    ebp,0x343c61b2
  41c6cb:	popf   
  41c6cc:	retf   
  41c6cd:	loop   0x41c676
  41c6cf:	fcomp  DWORD PTR [edx+ebx*2-0x3c]
  41c6d3:	clc    
  41c6d4:	jae    0x41c668
  41c6d6:	xchg   ebx,eax
  41c6d7:	lds    edx,FWORD PTR [eax+esi*4+0x6d98f4ea]
  41c6de:	jne    0x41c730
  41c6e0:	(bad)  
  41c6e1:	int    0x1c
  41c6e3:	test   edx,esi
  41c6e5:	cmp    al,0xf6
  41c6e7:	stos   DWORD PTR es:[edi],eax
  41c6e8:	out    dx,al
  41c6e9:	mov    dh,0x4a
  41c6eb:	add    al,0xfa
  41c6ed:	cmp    bh,cl
  41c6ef:	or     eax,0xb75557fc
  41c6f4:	shl    eax,cl
  41c6f6:	xchg   ecx,eax
  41c6f7:	fisttp WORD PTR [ebx+ebp*8-0x1c01107b]
  41c6fe:	xchg   esp,eax
  41c6ff:	retf   0xf9db
  41c702:	in     eax,dx
  41c703:	out    dx,eax
  41c704:	sub    al,0x57
  41c706:	jmp    0x41c749
  41c708:	mov    ch,0x55
  41c70a:	lock cmp DWORD PTR [ebp+0x2f8a8817],0xffffffde
  41c712:	(bad)  
  41c713:	sar    cl,1
  41c715:	push   eax
  41c716:	test   BYTE PTR ds:0x139a6c2e,bl
  41c71c:	loop   0x41c70f
  41c71e:	xor    DWORD PTR [ebp-0x67002561],esp
  41c724:	lods   al,BYTE PTR ds:[esi]
  41c725:	enter  0xb97b,0x8
  41c729:	sbb    ebp,DWORD PTR [ecx+0xd]
  41c72c:	pop    esi
  41c72d:	je     0x41c762
  41c72f:	push   es
  41c730:	stc    
  41c731:	neg    BYTE PTR [esi-0x60]
  41c734:	bound  ecx,QWORD PTR [edx-0x4f]
  41c737:	push   ebp
  41c738:	stc    
  41c739:	mov    ss:0xc6a87dfe,al
  41c73f:	call   0xfc3eca2
  41c744:	outs   dx,DWORD PTR ds:[esi]
  41c745:	scas   al,BYTE PTR es:[edi]
  41c746:	mov    ebp,0xfd20eaa6
  41c74b:	iret   
  41c74c:	std    
  41c74d:	imul   esp,DWORD PTR [edi-0x7c],0x88ea607b
  41c754:	bound  edx,QWORD PTR [ebp+0x50]
  41c757:	mov    dl,0x21
  41c759:	inc    ebx
  41c75a:	imul   esp,ecx,0xffffffaa
  41c75d:	or     DWORD PTR [eax+0x68fd610],0x25
  41c764:	inc    edi
  41c765:	add    eax,esi
  41c767:	add    DWORD PTR [eax+0x44a00f50],edi
  41c76d:	stos   DWORD PTR es:[edi],eax
  41c76e:	push   cs
  41c76f:	jecxz  0x41c75c
  41c771:	mov    WORD PTR [ebx-0x72eff0f3],?
  41c777:	ds pop edi
  41c779:	cmp    dl,ah
  41c77b:	mov    cl,0x1a
  41c77d:	out    0xc7,al
  41c77f:	dec    ebp
  41c780:	inc    edx
  41c781:	fwait
  41c782:	jnp    0x41c791
  41c784:	retf   0xda61
  41c787:	and    eax,0x7e516e49
  41c78c:	jns    0x41c7d4
  41c78e:	push   eax
  41c78f:	pusha  
  41c790:	pop    es
  41c791:	add    esi,edx
  41c793:	and    eax,0x966733f9
  41c798:	(bad)  
  41c799:	and    eax,0x38ef763c
  41c79e:	or     BYTE PTR [edi+0x6d],dl
  41c7a1:	rcl    DWORD PTR [ebp+0x672d4c9c],cl
  41c7a7:	sub    DWORD PTR ds:0xe4be282d,eax
  41c7ad:	cmp    DWORD PTR [eax],ebx
  41c7af:	mov    bl,0xc3
  41c7b1:	adc    eax,0x5c049b5a
  41c7b6:	xchg   ecx,eax
  41c7b7:	fwait
  41c7b8:	sti    
  41c7b9:	stc    
  41c7ba:	adc    BYTE PTR [eax],al
  41c7bc:	xchg   edx,eax
  41c7bd:	das    
  41c7be:	fs jle 0x41c763
  41c7c1:	push   esi
  41c7c2:	repz jae 0x41c80a
  41c7c5:	mov    al,0x1
  41c7c7:	aad    0x4b
  41c7c9:	and    edx,ebp
  41c7cb:	xchg   BYTE PTR [ebp-0x59],dl
  41c7ce:	adc    BYTE PTR [esi+edx*2+0x78],ah
  41c7d2:	vpsrlw ymm7,ymm4,XMMWORD PTR ds:0x735a6b97
  41c7da:	push   ecx
  41c7db:	xlat   BYTE PTR ds:[ebx]
  41c7dc:	jmp    0x996eea57
  41c7e1:	push   ds
  41c7e2:	inc    ecx
  41c7e3:	adc    bh,BYTE PTR [eax+0x4d]
  41c7e6:	scas   al,BYTE PTR es:[edi]
  41c7e7:	mov    dh,0x10
  41c7e9:	sbb    eax,0x9e6c7f76
  41c7ee:	out    dx,al
  41c7ef:	mov    ch,0xf2
  41c7f1:	out    0x90,eax
  41c7f3:	mov    ds:0x9c58854b,al
  41c7f8:	and    eax,0x8e1ab80f
  41c7fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7fe:	call   esi
  41c800:	push   eax
  41c801:	bound  eax,QWORD PTR ds:0xe50d13d9
  41c807:	test   DWORD PTR [ebx],eax
  41c809:	aaa    
  41c80a:	push   es
  41c80b:	adc    BYTE PTR [ebp+0x56e82e96],dl
  41c811:	xchg   DWORD PTR [edx+0x17a1b7fa],ecx
  41c817:	or     BYTE PTR [edi-0x2],dl
  41c81a:	das    
  41c81b:	push   0x28
  41c81d:	sub    al,0xd3
  41c81f:	out    0xb4,eax
  41c821:	loop   0x41c82e
  41c823:	pop    ecx
  41c824:	fadd   QWORD PTR [edx+eiz*2]
  41c827:	jbe    0x41c848
  41c829:	gs push 0x6e
  41c82c:	hlt    
  41c82d:	add    BYTE PTR [ecx+0x75],dl
  41c830:	dec    ebx
  41c831:	xor    DWORD PTR [ebx+esi*1],edi
  41c834:	scas   eax,DWORD PTR es:[edi]
  41c835:	xchg   ecx,eax
  41c836:	jbe    0x41c839
  41c838:	mov    ch,0x62
  41c83a:	popf   
  41c83b:	cmp    BYTE PTR [edi-0x6d],ch
  41c83e:	in     eax,0x7b
  41c840:	ret    0xfb
  41c843:	ds ds in al,0x30
  41c847:	mov    ebx,0xd739d5b3
  41c84c:	nop
  41c84d:	or     ebp,ebp
  41c84f:	xchg   edx,eax
  41c850:	dec    esp
  41c851:	add    DWORD PTR [ebx+0x312c982d],ebp
  41c857:	icebp  
  41c858:	or     eax,0x840df13
  41c85d:	dec    edx
  41c85e:	popf   
  41c85f:	mov    esi,0x68e88525
  41c864:	fcom   QWORD PTR [edx+0x7e17c936]
  41c86a:	or     DWORD PTR [edi],ebp
  41c86c:	fstcw  WORD PTR [ebx+0x7f8fb82b]
  41c873:	sub    dl,BYTE PTR [ebx-0x8]
  41c876:	cmp    edx,DWORD PTR [bx+si-0x4720]
  41c87b:	stc    
  41c87c:	sub    al,0x9c
  41c87e:	mov    edi,0x63d06ce6
  41c883:	and    bl,BYTE PTR fs:[edx]
  41c886:	xchg   edi,eax
  41c887:	add    edi,edx
  41c889:	clc    
  41c88a:	cli    
  41c88b:	loope  0x41c881
  41c88d:	xor    DWORD PTR [edi-0x30a3fec1],edi
  41c893:	out    0x36,eax
  41c895:	xor    dh,0x66
  41c898:	add    BYTE PTR [esi],cl
  41c89a:	pop    ebx
  41c89b:	mov    ch,0x7f
  41c89d:	in     eax,dx
  41c89e:	mov    ch,0xe1
  41c8a0:	push   ebp
  41c8a1:	shl    DWORD PTR [edx],1
  41c8a3:	fdiv   DWORD PTR [eax-0x35]
  41c8a6:	mov    bl,0xac
  41c8a8:	ja     0x41c869
  41c8aa:	test   al,0x6e
  41c8ac:	mov    ds:0x1a559015,al
  41c8b1:	and    eax,0x9d9eb664
  41c8b6:	dec    ebp
  41c8b7:	in     eax,dx
  41c8b8:	outs   dx,DWORD PTR ds:[esi]
  41c8b9:	mov    cs,WORD PTR [edx]
  41c8bb:	pop    ecx
  41c8bc:	fld    DWORD PTR [edi-0x780dd12c]
  41c8c2:	sub    ebp,DWORD PTR [ecx+0x6e]
  41c8c5:	pop    edi
  41c8c6:	call   0x7e1b745d
  41c8cb:	mov    cl,0xce
  41c8cd:	ret    
  41c8ce:	das    
  41c8cf:	es loopne 0x41c88d
  41c8d2:	jo     0x41c8b9
  41c8d4:	and    DWORD PTR [eax],ecx
  41c8d6:	jnp    0x41c914
  41c8d8:	arpl   WORD PTR [ecx],cx
  41c8da:	test   BYTE PTR [ebx+0x59],0x9b
  41c8de:	and    BYTE PTR [edx],ah
  41c8e0:	sub    eax,DWORD PTR [edi+eiz*8]
  41c8e3:	fstp   TBYTE PTR [ebp+0x401d4d04]
  41c8e9:	gs jp  0x41c913
  41c8ec:	sahf   
  41c8ed:	pop    ecx
  41c8ee:	test   al,0x88
  41c8f0:	daa    
  41c8f1:	gs das 
  41c8f3:	adc    ah,cl
  41c8f5:	ret    
  41c8f6:	int    0x3f
  41c8f8:	xchg   ebx,eax
  41c8f9:	and    eax,0xca3faf3c
  41c8fe:	(bad)  
  41c8ff:	or     al,0xc6
  41c901:	out    0x5b,al
  41c903:	and    ebp,DWORD PTR [edx]
  41c905:	inc    ebp
  41c906:	clts   
  41c908:	in     al,0x65
  41c90a:	mov    cl,al
  41c90c:	int    0x57
  41c90e:	clc    
  41c90f:	loop   0x41c8b2
  41c911:	(bad)  
  41c914:	pop    ss
  41c915:	(bad)  [ebx]
  41c917:	ret    
  41c918:	push   eax
  41c919:	dec    eax
  41c91a:	ins    DWORD PTR es:[edi],dx
  41c91b:	xor    eax,0x1a78d43f
  41c920:	les    esp,FWORD PTR [ecx+0x60]
  41c923:	rcl    DWORD PTR [esi+0x74],cl
  41c926:	inc    ecx
  41c927:	jmp    0xcdc:0x985bbd5d
  41c92e:	jbe    0x41c97a
  41c930:	push   ebx
  41c931:	and    BYTE PTR [ebx],bl
  41c933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c934:	gs pop ss
  41c936:	cs jb  0x41c912
  41c939:	retf   0xc3b2
  41c93c:	(bad)  
  41c93d:	aad    0x69
  41c93f:	outs   dx,DWORD PTR ds:[esi]
  41c940:	iret   
  41c941:	fwait
  41c942:	xchg   esi,eax
  41c943:	(bad)  
  41c944:	push   ecx
  41c945:	seta   BYTE PTR [edx+0x4f]
  41c949:	dec    eax
  41c94a:	or     BYTE PTR [edx+0x76],0x37
  41c94e:	(bad)  
  41c950:	jae    0x41c970
  41c952:	push   ecx
  41c953:	nop
  41c954:	fisub  DWORD PTR [ebx-0x31]
  41c957:	ret    0x1b69
  41c95a:	xor    DWORD PTR [ecx],ecx
  41c95c:	(bad)  
  41c95d:	ss js  0x41c969
  41c960:	xchg   esi,eax
  41c961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c962:	mov    BYTE PTR [ebx+0x7e],bl
  41c965:	or     al,0x8d
  41c967:	mov    cl,BYTE PTR [ebx-0x3b]
  41c96a:	lods   eax,DWORD PTR ds:[esi]
  41c96b:	sbb    DWORD PTR [eax],0x24
  41c96e:	sbb    BYTE PTR [edi+0x21],bl
  41c971:	popa   
  41c972:	mov    edi,0x29366c41
  41c977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c978:	and    esi,edx
  41c97a:	popf   
  41c97b:	dec    eax
  41c97c:	mov    ecx,DWORD PTR [ebx-0x54831ff2]
  41c982:	outs   dx,BYTE PTR ds:[esi]
  41c983:	mov    bh,0x8e
  41c985:	and    ah,BYTE PTR [ebx]
  41c987:	dec    eax
  41c988:	adc    BYTE PTR [ebx],cl
  41c98a:	es hlt 
  41c98c:	inc    esi
  41c98d:	test   DWORD PTR [edi+0x479bb073],ebx
  41c993:	add    esp,DWORD PTR [edx+0xa]
  41c996:	scas   al,BYTE PTR es:[edi]
  41c997:	push   0xd14d25c6
  41c99c:	mov    eax,ds:0x28540ae8
  41c9a1:	adc    BYTE PTR [ebx-0x761cc594],cl
  41c9a7:	sbb    dl,BYTE PTR [ebx]
  41c9a9:	retf   0xab85
  41c9ac:	and    ch,bh
  41c9ae:	mov    dl,0xc5
  41c9b0:	or     edi,DWORD PTR [eax]
  41c9b2:	sbb    al,BYTE PTR [ebx+esi*4]
  41c9b5:	dec    esi
  41c9b6:	call   0xdf6ecbd4
  41c9bb:	push   ebp
  41c9bc:	mov    bl,0x54
  41c9be:	and    BYTE PTR [ecx],0xe7
  41c9c1:	inc    eax
  41c9c2:	inc    edx
  41c9c3:	xchg   esi,eax
  41c9c4:	inc    edi
  41c9c5:	cmc    
  41c9c6:	push   edi
  41c9c7:	dec    ecx
  41c9c8:	dec    ebp
  41c9c9:	call   0xe601:0x45883fb8
  41c9d0:	or     eax,0xbc90d547
  41c9d5:	rol    esi,1
  41c9d7:	inc    ecx
  41c9d8:	popf   
  41c9d9:	sub    bh,BYTE PTR [ecx-0x3b]
  41c9dc:	xchg   ebx,eax
  41c9dd:	xchg   edi,eax
  41c9de:	pop    eax
  41c9df:	ins    BYTE PTR es:[edi],dx
  41c9e0:	out    dx,al
  41c9e1:	jbe    0x41c970
  41c9e3:	push   ss
  41c9e4:	mov    ds:0xd5657b77,al
  41c9e9:	ins    BYTE PTR es:[edi],dx
  41c9ea:	xchg   ebx,eax
  41c9eb:	sbb    ah,BYTE PTR [esi-0x57]
  41c9ee:	inc    edx
  41c9ef:	or     al,al
  41c9f1:	ret    0x19ce
  41c9f4:	(bad)  
  41c9f5:	ss mov ecx,edi
  41c9f8:	pop    es
  41c9f9:	test   dh,ch
  41c9fb:	jae    0x41ca7a
  41c9fd:	int3   
  41c9fe:	pop    esp
  41c9ff:	mov    al,ds:0x6073cf57
  41ca04:	and    ebp,DWORD PTR [ebx+0xa]
  41ca07:	pop    esp
  41ca08:	scas   al,BYTE PTR es:[edi]
  41ca09:	sub    edx,DWORD PTR [ecx+0x369925df]
  41ca0f:	stos   DWORD PTR es:[edi],eax
  41ca10:	int3   
  41ca11:	jns    0x41ca4f
  41ca13:	xchg   edi,eax
  41ca14:	mov    bh,0xc9
  41ca16:	cmp    esp,ebp
  41ca18:	mov    bh,0x2e
  41ca1a:	scas   al,BYTE PTR es:[edi]
  41ca1b:	sbb    BYTE PTR [eax],dl
  41ca1d:	mov    ecx,0x45efcd29
  41ca22:	pop    ss
  41ca23:	or     dl,dh
  41ca25:	xlat   BYTE PTR ds:[ebx]
  41ca26:	push   eax
  41ca27:	test   al,0xb1
  41ca29:	mov    bh,0xb9
  41ca2b:	jecxz  0x41ca77
  41ca2d:	inc    eax
  41ca2e:	jae    0x41ca20
  41ca30:	mov    dl,BYTE PTR [ebx+0x6656d946]
  41ca36:	xchg   DWORD PTR [edi-0x233d33da],edx
  41ca3c:	ja     0x41c9d1
  41ca3e:	into   
  41ca3f:	push   edx
  41ca40:	mov    al,0x7
  41ca42:	in     eax,0xcb
  41ca44:	(bad)  
  41ca45:	daa    
  41ca46:	jmp    0x41c9f8
  41ca48:	imul   ebx,DWORD PTR [eax+0x59e8557c],0xd05fb394
  41ca52:	sbb    ch,al
  41ca54:	mov    esp,0xc2b71737
  41ca59:	mov    ch,0x87
  41ca5b:	pop    ds
  41ca5c:	pop    esi
  41ca5d:	fsub   st(7),st
  41ca5f:	sub    esi,DWORD PTR [ecx]
  41ca61:	aas    
  41ca62:	xchg   BYTE PTR [eax],cl
  41ca64:	or     ch,BYTE PTR [ebx]
  41ca66:	push   ecx
  41ca67:	pop    ecx
  41ca68:	adc    al,0x72
  41ca6a:	outs   dx,DWORD PTR ds:[esi]
  41ca6b:	daa    
  41ca6c:	inc    edi
  41ca6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca6e:	std    
  41ca6f:	mov    ah,0x7d
  41ca71:	adc    BYTE PTR [esi],cl
  41ca73:	mov    ebx,0x518ee3d2
  41ca78:	mov    cl,0xa9
  41ca7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca7b:	add    ebp,edi
  41ca7d:	and    edx,esi
  41ca7f:	push   ecx
  41ca80:	in     eax,0x89
  41ca82:	xor    al,0x3e
  41ca84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca85:	xor    edx,ecx
  41ca87:	mul    DWORD PTR [ecx-0x7da7716a]
  41ca8d:	xor    edx,DWORD PTR ds:0x7e052fb1
  41ca93:	and    ebp,DWORD PTR [edx-0x33]
  41ca96:	into   
  41ca97:	loopne 0x41caa9
  41ca99:	stc    
  41ca9a:	jmp    0x2af:0x418ab71b
  41caa1:	mov    cl,0xad
  41caa3:	ins    BYTE PTR es:[edi],dx
  41caa4:	outs   dx,DWORD PTR ds:[esi]
  41caa5:	mov    ch,0x8b
  41caa7:	adc    ebp,ecx
  41caa9:	xchg   esi,eax
  41caaa:	loopne 0x41cb0b
  41caac:	sbb    ch,dh
  41caae:	shr    BYTE PTR [ecx-0x675719a2],1
  41cab4:	push   0x15
  41cab6:	scas   eax,DWORD PTR es:[edi]
  41cab7:	leave  
  41cab8:	sbb    al,0x53
  41caba:	int3   
  41cabb:	inc    BYTE PTR [ebx+0x2c]
  41cabe:	xchg   ebx,eax
  41cabf:	mov    edi,0x8e4f8342
  41cac4:	cmp    BYTE PTR [esi-0x1d],ah
  41cac7:	jno    0x41caef
  41cac9:	inc    esp
  41caca:	sub    dh,BYTE PTR gs:[edx]
  41cacd:	dec    eax
  41cace:	pop    ds
  41cacf:	pusha  
  41cad0:	retf   
  41cad1:	loop   0x41caa4
  41cad3:	adc    eax,0xdadc84a0
  41cad8:	add    ah,BYTE PTR [ecx]
  41cada:	in     eax,0xd8
  41cadc:	cmp    bl,BYTE PTR [ecx]
  41cade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cadf:	stos   DWORD PTR es:[edi],eax
  41cae0:	pusha  
  41cae1:	mov    edx,0xfff04ea0
  41cae6:	xchg   dl,bh
  41cae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cae9:	out    0x6b,al
  41caeb:	cmp    ebx,ebp
  41caed:	retf   
  41caee:	dec    ecx
  41caef:	and    eax,0x4896622c
  41caf4:	push   ebp
  41caf5:	inc    edx
  41caf6:	jle    0x41cb48
  41caf8:	mov    bl,0x6c
  41cafa:	cmp    ah,ch
  41cafc:	push   ebx
  41cafd:	dec    ecx
  41cafe:	mov    edi,0x778dff23
  41cb03:	(bad)  
  41cb04:	push   ecx
  41cb05:	out    dx,al
  41cb06:	and    al,BYTE PTR [eax+eiz*1+0x54]
  41cb0a:	jle    0x41cb51
  41cb0c:	and    al,BYTE PTR [ecx]
  41cb0e:	push   0x37
  41cb10:	xchg   ebp,eax
  41cb11:	pushf  
  41cb12:	ficomp WORD PTR [eax+0x50]
  41cb15:	lods   eax,DWORD PTR ds:[esi]
  41cb16:	pop    edi
  41cb17:	xchg   esp,eax
  41cb18:	push   cs
  41cb19:	push   ecx
  41cb1a:	and    DWORD PTR [edi+ecx*8+0x7],0xffffff85
  41cb1f:	mov    ds:0x1ee85d7d,al
  41cb24:	cmc    
  41cb25:	sbb    BYTE PTR [eax],bl
  41cb27:	gs sub al,al
  41cb2a:	jo     0x41cb8e
  41cb2c:	pop    ebp
  41cb2d:	push   0x118cae90
  41cb32:	jmp    0x842e:0x3ee7bdf1
  41cb39:	(bad)  
  41cb3a:	shl    DWORD PTR [ecx+ecx*8],1
  41cb3d:	mov    edi,0xf9c29a77
  41cb42:	cdq    
  41cb43:	enter  0xa4ea,0xb8
  41cb47:	pop    edi
  41cb48:	das    
  41cb49:	inc    ecx
  41cb4a:	sub    DWORD PTR [edx+0x8],ecx
  41cb4d:	dec    ebp
  41cb4e:	push   edx
  41cb4f:	out    0x4f,eax
  41cb51:	mov    edx,0x4161c521
  41cb56:	push   esp
  41cb58:	(bad)  
  41cb5a:	out    0x0,al
  41cb5c:	or     esp,DWORD PTR [ebp+0x54]
  41cb5f:	jns    0x41cb7c
  41cb61:	mov    ecx,0xf9872a7c
  41cb66:	inc    ebx
  41cb67:	fdivr  QWORD PTR [edi+0x39d91df4]
  41cb6d:	sub    cl,BYTE PTR [esi+0x59]
  41cb70:	adc    BYTE PTR [edx+0x4337e567],ch
  41cb76:	aas    
  41cb77:	push   edi
  41cb78:	xchg   ecx,eax
  41cb79:	test   eax,0x17904798
  41cb7e:	adc    bh,BYTE PTR [edi-0x2a]
  41cb81:	scas   al,BYTE PTR es:[edi]
  41cb82:	(bad)  
  41cb83:	xor    ch,al
  41cb85:	aaa    
  41cb86:	sbb    edx,DWORD PTR [edi+0x40]
  41cb89:	jbe    0x41cb0e
  41cb8b:	push   esp
  41cb8c:	or     ebp,DWORD PTR ss:[edx+0x71]
  41cb90:	sti    
  41cb91:	sub    DWORD PTR [ebx+0x47809f09],esp
  41cb97:	or     ebx,0x1d288ca3
  41cb9d:	mov    cl,BYTE PTR [ebp+0x27]
  41cba0:	(bad)  
  41cba1:	hlt    
  41cba2:	mov    ecx,DWORD PTR [esi]
  41cba4:	pop    es
  41cba5:	nop    edx
  41cba8:	mov    DWORD PTR [bp+si-0x37],ebp
  41cbac:	je     0x41cb81
  41cbae:	inc    ebx
  41cbaf:	sub    DWORD PTR [ebx-0x6f8ae3bf],esp
  41cbb5:	push   ds
  41cbb6:	xor    esi,DWORD PTR [eax+ecx*4+0x52]
  41cbba:	in     al,0x6f
  41cbbc:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41cbbe:	retf   0x2ded
  41cbc1:	nop
  41cbc2:	dec    ecx
  41cbc3:	fnsave [ebp+0x77fa7c6]
  41cbc9:	dec    ecx
  41cbca:	bound  ebp,QWORD PTR [ebx+0x387ef4af]
  41cbd0:	aad    0xb9
  41cbd2:	jne    0x41cb87
  41cbd4:	mov    ds:0xd86ecee9,al
  41cbd9:	mov    esi,cs
  41cbdb:	out    0x27,eax
  41cbdd:	lea    eax,[ecx-0x679e400]
  41cbe3:	lahf   
  41cbe4:	mov    ah,0x42
  41cbe6:	js     0x41cb77
  41cbe8:	mov    al,ds:0x14ca460a
  41cbed:	fadd   DWORD PTR [edx-0x9]
  41cbf0:	and    al,0x7f
  41cbf2:	push   cs
  41cbf3:	xor    ebp,ebx
  41cbf5:	sbb    BYTE PTR [esi+0x15],dl
  41cbf8:	int    0x24
  41cbfa:	and    eax,0x6e8e7145
  41cbff:	sub    eax,0x668d07a1
  41cc04:	mov    al,ds:0xcb7de37f
  41cc09:	ins    BYTE PTR es:[edi],dx
  41cc0a:	bound  edx,QWORD PTR [eax+0x11b340b3]
  41cc10:	jnp    0x41cc77
  41cc12:	cmp    DWORD PTR [edi-0x5c],ebx
  41cc15:	xor    bh,ah
  41cc17:	iret   
  41cc18:	jno    0x41cc5d
  41cc1a:	and    dl,BYTE PTR [edx+0x26746c2e]
  41cc20:	dec    esp
  41cc21:	push   edi
  41cc22:	sbb    eax,0x8ea212c9
  41cc27:	cmp    eax,0x71e6d5d0
  41cc2c:	aad    0xe7
  41cc2e:	pop    eax
  41cc2f:	into   
  41cc30:	mov    al,ds:0xcbe24995
  41cc35:	outs   dx,BYTE PTR ds:[esi]
  41cc36:	xchg   ecx,eax
  41cc37:	sbb    edx,edx
  41cc39:	xchg   esp,eax
  41cc3a:	lds    edx,FWORD PTR [ecx]
  41cc3c:	jp     0x41cc03
  41cc3e:	pop    ebx
  41cc3f:	inc    esi
  41cc40:	aaa    
  41cc41:	sub    bl,dh
  41cc43:	lea    edx,[ecx+eax*4+0x6f]
  41cc47:	mov    dh,0xe0
  41cc49:	call   0xc372:0x4c85f0ba
  41cc50:	pop    edx
  41cc51:	mov    edx,0x4b8706d3
  41cc56:	and    BYTE PTR [ebp+0x9],0x83
  41cc5a:	jg     0x41cc4b
  41cc5c:	cmc    
  41cc5d:	dec    esp
  41cc5e:	pop    esp
  41cc5f:	(bad)
  41cc62:	dec    ecx
  41cc63:	mov    ebx,0x94bab143
  41cc68:	mov    ds:0xe3df1727,eax
  41cc6d:	pop    edi
  41cc6e:	pop    esp
  41cc6f:	stos   DWORD PTR es:[edi],eax
  41cc70:	retf   
  41cc71:	call   0x2b8c:0x163a8a1b
  41cc78:	sbb    al,0x1e
  41cc7a:	sub    eax,0x40321c3a
  41cc7f:	lods   al,BYTE PTR ds:[esi]
  41cc80:	and    BYTE PTR [edx+edi*2],dh
  41cc83:	dec    ecx
  41cc84:	int    0x55
  41cc86:	sbb    DWORD PTR [edx],0x4f
  41cc89:	xor    BYTE PTR [ecx+0x65],bl
  41cc8c:	fnstcw WORD PTR [ebx+0x64f9c8c]
  41cc92:	jge    0x41ccc0
  41cc94:	pop    edi
  41cc95:	and    edx,DWORD PTR [edx-0x11e4725b]
  41cc9b:	dec    ebp
  41cc9c:	mov    edx,0x78b63b19
  41cca1:	xor    BYTE PTR [ecx+0x57daac62],bl
  41cca7:	mov    edi,0x6bf2144d
  41ccac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccad:	ins    BYTE PTR es:[edi],dx
  41ccae:	xor    BYTE PTR [ebx-0x5],bh
  41ccb1:	jmp    0x41cd1b
  41ccb3:	ds sbb bl,0xf1
  41ccb7:	in     al,dx
  41ccb8:	jmp    0xb54:0xc8d36a6e
  41ccbf:	out    0x32,eax
  41ccc1:	cmp    eax,0xbec57b9a
  41ccc6:	stc    
  41ccc7:	inc    ebx
  41ccc8:	xchg   ebx,eax
  41ccc9:	mov    dh,0x1c
  41cccb:	fbstp  TBYTE PTR [ecx]
  41cccd:	fnstenv gs:[edi-0x1d]
  41ccd1:	(bad)  
  41ccd2:	cmp    DWORD PTR [ebp+ebp*4-0x5163cb82],edx
  41ccd9:	(bad)  
  41ccda:	arpl   bx,sp
  41ccdc:	jns    0x41ccea
  41ccde:	clc    
  41ccdf:	jno    0x41cd2a
  41cce1:	mov    ch,ah
  41cce3:	adc    eax,0x31335bbc
  41cce8:	adc    al,0xa
  41ccea:	js     0x41cd4c
  41ccec:	out    dx,eax
  41cced:	mov    dh,0x32
  41ccef:	push   0xfffffff9
  41ccf1:	push   0x1a
  41ccf3:	sub    al,dh
  41ccf5:	jb     0x41cd3d
  41ccf7:	pop    ecx
  41ccf8:	xchg   ebp,eax
  41ccf9:	out    0x7e,al
  41ccfb:	sti    
  41ccfc:	scas   eax,DWORD PTR es:[edi]
  41ccfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccfe:	or     DWORD PTR [esi+0x3d],edx
  41cd01:	rcr    DWORD PTR [ebp+0x534a16a0],cl
  41cd07:	sub    al,0x3f
  41cd09:	push   ebx
  41cd0a:	sub    BYTE PTR [esi],0x6
  41cd0d:	add    esi,DWORD PTR [eax-0x34]
  41cd10:	jmp    0x181f:0x485c06d1
  41cd17:	cwde   
  41cd18:	cwde   
  41cd19:	add    eax,0x797b74bd
  41cd1e:	add    BYTE PTR [esi+esi*8],dl
  41cd21:	imul   edi,DWORD PTR [ebp-0x15db03d2],0x33
  41cd28:	imul   eax,DWORD PTR [eax+ebx*8-0x263b9047],0x29
  41cd30:	ret    
  41cd31:	into   
  41cd32:	jg     0x41cd0a
  41cd34:	dec    DWORD PTR [eax+0x4f91980a]
  41cd3a:	fnstsw WORD PTR [edx-0x4a0f0d51]
  41cd40:	cmc    
  41cd41:	push   0xffffffb2
  41cd43:	xor    al,0x41
  41cd45:	mov    ss,WORD PTR [edi+0x22]
  41cd48:	inc    ebx
  41cd49:	cmp    BYTE PTR [edx],ah
  41cd4b:	ins    DWORD PTR es:[edi],dx
  41cd4c:	inc    eax
  41cd4d:	sbb    bh,dh
  41cd4f:	xchg   edi,eax
  41cd50:	pusha  
  41cd51:	and    BYTE PTR [ebx-0x6097ec92],dl
  41cd57:	sub    BYTE PTR [esi+edx*2-0x46edb9e5],bh
  41cd5e:	stos   DWORD PTR es:[edi],eax
  41cd5f:	mov    ds:0x222f283f,eax
  41cd64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd65:	je     0x41cd68
  41cd67:	mov    ah,0x69
  41cd69:	scas   eax,DWORD PTR es:[edi]
  41cd6a:	mov    eax,esp
  41cd6c:	push   ebp
  41cd6d:	and    eax,0x26f0ff2c
  41cd72:	and    ecx,DWORD PTR [ebp+0x1b]
  41cd75:	popa   
  41cd76:	adc    cl,ch
  41cd78:	xchg   ebp,eax
  41cd79:	or     bl,bh
  41cd7b:	(bad)  [edi]
  41cd7d:	outs   dx,DWORD PTR ds:[esi]
  41cd7e:	arpl   bp,si
  41cd80:	cld    
  41cd81:	or     DWORD PTR [edx],0xb40f1532
  41cd87:	or     ecx,edi
  41cd89:	(bad)  [ebx-0x6c]
  41cd8c:	mov    ah,0x5f
  41cd8e:	loope  0x41cd16
  41cd90:	push   ebx
  41cd91:	cli    
  41cd92:	pop    esi
  41cd93:	xchg   ebp,eax
  41cd94:	out    dx,eax
  41cd95:	neg    BYTE PTR [eax-0x1aa44f63]
  41cd9b:	and    DWORD PTR [edi+0x395bafd8],ebx
  41cda1:	mov    dh,0x8c
  41cda3:	fimul  WORD PTR [ebp+0x6c]
  41cda6:	(bad)  
  41cda7:	mov    dh,0xb7
  41cda9:	cmc    
  41cdaa:	mov    esi,0x4e7456a7
  41cdaf:	shl    BYTE PTR [esi+0x6c],cl
  41cdb2:	or     al,0xa2
  41cdb4:	mov    DWORD PTR [esi+0x8],edx
  41cdb7:	mov    dh,0x67
  41cdb9:	inc    esi
  41cdba:	ins    BYTE PTR es:[edi],dx
  41cdbb:	mov    esi,0xf4422b29
  41cdc0:	dec    edi
  41cdc1:	or     ch,ch
  41cdc3:	imul   eax,ecx,0x4df6f4b2
  41cdc9:	pop    edx
  41cdca:	sub    al,0x23
  41cdcc:	inc    eax
  41cdcd:	mov    esi,0xe12a0f3b
  41cdd2:	jb     0x41cdf8
  41cdd4:	ror    BYTE PTR [ebx-0x6d8a607e],1
  41cdda:	mov    esp,0xba7a1295
  41cddf:	and    eax,0x55049dd1
  41cde4:	into   
  41cde5:	inc    ebx
  41cde6:	mov    ebx,0xb6e04c44
  41cdeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdec:	stc    
  41cded:	xor    edx,DWORD PTR [eax-0x4e]
  41cdf0:	fdiv   DWORD PTR [eax+0x65]
  41cdf3:	and    al,0x40
  41cdf5:	cdq    
  41cdf6:	cmp    al,0xb8
  41cdf8:	sbb    DWORD PTR [edx-0x73942f],ebp
  41cdfe:	xchg   BYTE PTR [esi],al
  41ce00:	pop    ebp
  41ce01:	xchg   edi,eax
  41ce02:	push   0x85d149b6
  41ce07:	jmp    0x9b5:0x7c337ff5
  41ce0e:	xchg   esi,eax
  41ce0f:	add    al,0xe8
  41ce11:	jne    0x41cdb3
  41ce13:	sbb    al,0xfe
  41ce15:	jmp    0x41ce8a
  41ce17:	jmp    0x5b47:0xa05c06c5
  41ce1e:	clc    
  41ce1f:	popa   
  41ce20:	jno    0x41cdb6
  41ce22:	fs jb  0x41cdf9
  41ce25:	ss ja  0x41cde4
  41ce28:	xchg   ebx,eax
  41ce29:	and    eax,0xe7d0dc58
  41ce2e:	xor    DWORD PTR [ecx+0x32c9d797],esi
  41ce34:	(bad)  
  41ce35:	mov    ebx,edi
  41ce37:	fadd   DWORD PTR [eax]
  41ce39:	xchg   DWORD PTR [edx],ebx
  41ce3b:	(bad)  
  41ce3c:	fisubr WORD PTR [ebx]
  41ce3e:	adc    BYTE PTR [edi+0x6cb560b5],bl
  41ce44:	es ins DWORD PTR es:[edi],dx
  41ce46:	in     al,0x8d
  41ce48:	push   0xe9e941cc
  41ce4d:	pop    ebp
  41ce4e:	les    esp,FWORD PTR [edx]
  41ce50:	in     eax,dx
  41ce51:	and    BYTE PTR [esi+0x55],dl
  41ce54:	pop    eax
  41ce55:	int    0x4
  41ce57:	adc    bl,bl
  41ce59:	pop    edx
  41ce5a:	mov    ebx,DWORD PTR [ecx]
  41ce5c:	mov    eax,0x694beaec
  41ce61:	hlt    
  41ce62:	mov    bl,0x2b
  41ce64:	push   ebp
  41ce65:	into   
  41ce66:	popa   
  41ce67:	pandn  mm7,QWORD PTR [ebx+0x6a]
  41ce6b:	mov    ebx,0xf680971
  41ce70:	call   0x4b4812ca
  41ce75:	test   DWORD PTR [ebx],esi
  41ce77:	mov    ebp,0xaed3e301
  41ce7c:	and    DWORD PTR [ebx+0x6a],esp
  41ce7f:	sub    eax,0x55a4707
  41ce84:	loope  0x41ceeb
  41ce86:	pop    edi
  41ce87:	fcmovnb st,st(0)
  41ce89:	cmp    DWORD PTR [eax+0x49596594],ecx
  41ce8f:	mov    bh,0x24
  41ce91:	push   ebp
  41ce92:	xchg   esi,eax
  41ce93:	test   DWORD PTR ds:0x894bdaf7,0x3990dffa
  41ce9d:	aad    0xd3
  41ce9f:	rol    BYTE PTR [edi+0x7a],cl
  41cea2:	xor    bl,BYTE PTR [eax+0x47a8dcc]
  41cea8:	adc    eax,0x5deba1d3
  41cead:	lea    eax,[ebx+0x159f7466]
  41ceb3:	sbb    al,0x28
  41ceb5:	sub    DWORD PTR [edi],ebx
  41ceb7:	jge    0x41cec3
  41ceb9:	dec    ecx
  41ceba:	or     eax,0x1425239e
  41cebf:	aaa    
  41cec0:	hlt    
  41cec1:	or     al,BYTE PTR [edx]
  41cec3:	jle    0x41cf1a
  41cec5:	rcr    BYTE PTR [edx+0x556e4cd9],1
  41cecb:	bound  edx,QWORD PTR [ecx]
  41cecd:	(bad)  
  41cece:	cmp    ecx,DWORD PTR [edi]
  41ced0:	push   cs
  41ced1:	icebp  
  41ced2:	dec    ebx
  41ced3:	push   ebp
  41ced4:	xchg   ecx,eax
  41ced5:	call   0xa52f4c6d
  41ceda:	add    al,0x25
  41cedc:	imul   esi,DWORD PTR [edi+0x68],0xffffffa4
  41cee0:	or     eax,0x16778198
  41cee5:	xor    eax,0xd3491ced
  41ceea:	cmp    DWORD PTR [ecx+0x2a],edi
  41ceed:	nop
  41ceee:	add    eax,0xb4178e63
  41cef3:	arpl   WORD PTR [esi+0x77e37f81],cx
  41cef9:	dec    esi
  41cefa:	pop    ebp
  41cefb:	add    eax,0x1f1a382e
  41cf00:	(bad)  
  41cf01:	mul    BYTE PTR [esi+0x572214e3]
  41cf07:	nop
  41cf08:	shl    BYTE PTR [esi],1
  41cf0a:	dec    ebx
  41cf0b:	pop    edx
  41cf0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf0d:	test   DWORD PTR [ebp+0x3c],edi
  41cf10:	(bad)  
  41cf11:	pop    ss
  41cf12:	or     bl,ah
  41cf14:	out    0x94,al
  41cf16:	inc    esi
  41cf17:	(bad)  
  41cf18:	mov    esp,0x5b30f841
  41cf1d:	jp     0x41ced8
  41cf1f:	push   esi
  41cf20:	rcr    ebp,cl
  41cf22:	mov    ah,0xe5
  41cf24:	or     eax,0x1c4dda
  41cf29:	sbb    DWORD PTR [edx-0x4d9b8bf7],ebp
  41cf2f:	cmc    
  41cf30:	pusha  
  41cf31:	ds cmp eax,eax
  41cf34:	ds loope 0x41cf69
  41cf37:	fdivr  st,st(0)
  41cf39:	mov    esp,DWORD PTR [ebx]
  41cf3b:	fdivr  DWORD PTR [edi-0x5f]
  41cf3e:	inc    DWORD PTR [ebp-0x70]
  41cf41:	push   cs
  41cf42:	enter  0x15be,0xb
  41cf46:	and    DWORD PTR [eax-0x3d2840d7],edi
  41cf4c:	(bad)  
  41cf4d:	cmp    eax,0x2095f15
  41cf52:	push   es
  41cf53:	push   ecx
  41cf54:	xor    al,0xc3
  41cf56:	jno    0x41cf45
  41cf58:	mov    eax,0x27e55c7a
  41cf5d:	test   al,0x53
  41cf5f:	xor    BYTE PTR [ebp-0x23],dh
  41cf62:	call   0x6823bc6e
  41cf67:	out    0x38,eax
  41cf69:	out    0x5f,al
  41cf6b:	test   al,0xd2
  41cf6d:	ror    DWORD PTR [ebx-0x4d4067dd],1
  41cf73:	ret    
  41cf74:	inc    edx
  41cf75:	ja     0x41cf9f
  41cf77:	(bad)  
  41cf78:	ja     0x41cf7a
  41cf7a:	inc    eax
  41cf7b:	push   edx
  41cf7c:	ins    BYTE PTR es:[edi],dx
  41cf7d:	inc    ebx
  41cf7e:	mov    bh,0x85
  41cf80:	pop    ds
  41cf81:	mov    bp,0xc6a2
  41cf85:	retf   0x7139
  41cf88:	push   ebx
  41cf89:	mov    WORD PTR [edx+esi*1],?
  41cf8c:	aam    0x6a
  41cf8e:	sub    al,0xa8
  41cf90:	jge    0x41cf2b
  41cf92:	mov    esi,0x5d13bede
  41cf97:	bound  esp,QWORD PTR [ecx+0x29d57204]
  41cf9d:	or     al,0x98
  41cf9f:	jg     0x41cfbe
  41cfa1:	pusha  
  41cfa2:	addr16 xchg ecx,eax
  41cfa4:	rol    ah,0x41
  41cfa7:	sti    
  41cfa8:	xchg   DWORD PTR [ebx+0x515d0aaa],esi
  41cfae:	out    dx,eax
  41cfaf:	es ins DWORD PTR es:[edi],dx
  41cfb1:	dec    ebp
  41cfb2:	jmp    0x41d00e
  41cfb4:	pop    edi
  41cfb5:	fstp   QWORD PTR [edi-0x74a7f26]
  41cfbb:	lock inc esp
  41cfbd:	cli    
  41cfbe:	and    BYTE PTR [edi],ah
  41cfc0:	and    eax,0xb7700f4c
  41cfc5:	stos   BYTE PTR es:[edi],al
  41cfc6:	pop    es
  41cfc7:	jmp    ecx
  41cfc9:	or     eax,0x6eafcc5a
  41cfce:	test   eax,0x451ccc97
  41cfd3:	punpckhwd mm2,QWORD PTR [ecx+0x652b2665]
  41cfda:	fmul   st,st(0)
  41cfdc:	ret    0xcc37
  41cfdf:	mov    ch,0x74
  41cfe1:	fwait
  41cfe2:	push   esi
  41cfe3:	int3   
  41cfe4:	mov    eax,ds:0xa340520b
  41cfe9:	dec    ebx
  41cfea:	(bad)  
  41cfeb:	pop    es
  41cfec:	addr16 popf 
  41cfee:	push   ecx
  41cfef:	int3   
  41cff0:	dec    edx
  41cff1:	push   ds
  41cff2:	data16 test al,0xe4
  41cff5:	mov    gs,WORD PTR [ebx]
  41cff7:	cmp    eax,0xfe4c0739
  41cffc:	mov    esp,0x75685dad
  41d001:	sbb    DWORD PTR [ebp+esi*4+0x52729110],edx
  41d008:	sahf   
  41d009:	xchg   ebp,eax
  41d00a:	add    al,ch
  41d00c:	cmp    al,0xbc
  41d00e:	(bad)  [ecx-0xe]
  41d011:	iret   
  41d012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d013:	sbb    bh,al
  41d015:	imul   eax,DWORD PTR [ebp-0x28cf0061],0xffffffc7
  41d01c:	xchg   edi,eax
  41d01d:	nop
  41d01e:	jmp    0xa584c5ba
  41d023:	shr    BYTE PTR [edx],cl
  41d025:	outs   dx,BYTE PTR ds:[esi]
  41d026:	je     0x41cfdc
  41d028:	in     eax,dx
  41d029:	adc    al,0xf8
  41d02b:	inc    esi
  41d02c:	mov    edx,0x4eaa6bc6
  41d031:	out    0x2,al
  41d033:	mov    dh,0x1c
  41d035:	jl     0x41cff5
  41d037:	jns    0x41cfcb
  41d039:	jge    0x41d050
  41d03b:	mov    al,ds:0xce402146
  41d040:	adc    edx,DWORD PTR [ecx]
  41d042:	push   eax
  41d043:	pop    ebx
  41d044:	into   
  41d045:	mov    ecx,0xb5186e4c
  41d04a:	jb     0x41d0a1
  41d04c:	jecxz  0x41d070
  41d04e:	hlt    
  41d04f:	sub    BYTE PTR [edx],ah
  41d051:	push   edx
  41d052:	int3   
  41d053:	pop    eax
  41d054:	mov    DWORD PTR [esi+0x2d],eax
  41d057:	xor    esp,DWORD PTR [ebx+0x5d]
  41d05a:	pushf  
  41d05b:	cs mov dh,0x0
  41d05e:	je     0x41d038
  41d060:	stos   DWORD PTR es:[edi],eax
  41d061:	xor    al,0xea
  41d063:	out    dx,eax
  41d064:	or     BYTE PTR [eax+0x238a9b6e],al
  41d06a:	call   0xc25d4384
  41d06f:	popa   
  41d070:	fst    DWORD PTR [edi-0x76]
  41d073:	stos   BYTE PTR es:[edi],al
  41d074:	sub    al,0x5f
  41d076:	pop    edi
  41d077:	inc    ebp
  41d078:	xchg   WORD PTR [ebp+0x4],bx
  41d07c:	inc    ecx
  41d07d:	pop    ecx
  41d07e:	out    dx,eax
  41d07f:	mov    ebx,0x5cc007e7
  41d084:	popa   
  41d085:	stc    
  41d086:	sub    BYTE PTR [ecx+0xa],bl
  41d089:	mov    ecx,0x15e128c7
  41d08e:	das    
  41d08f:	mov    al,ds:0x22e929f8
  41d094:	js     0x41d077
  41d096:	push   cs
  41d097:	nop
  41d098:	mov    eax,ds:0xb80eae4b
  41d09d:	(bad)  
  41d09e:	cdq    
  41d09f:	jbe    0x41d06f
  41d0a1:	ins    DWORD PTR es:[edi],dx
  41d0a2:	(bad)  
  41d0a3:	imul   ecx,DWORD PTR [esi-0x73],0x2e
  41d0a7:	(bad)  
  41d0a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0a9:	fdiv   QWORD PTR [ecx]
  41d0ab:	out    0x3e,al
  41d0ad:	push   es
  41d0ae:	shl    BYTE PTR [ecx+0x36687bfd],1
  41d0b4:	pushf  
  41d0b5:	mov    ds:0x3ad78958,al
  41d0ba:	sbb    bl,al
  41d0bc:	sub    dh,BYTE PTR [edx-0x20]
  41d0bf:	fucom  st(4)
  41d0c1:	sbb    bl,BYTE PTR [eax+0x7b56b377]
  41d0c7:	pusha  
  41d0c8:	xor    DWORD PTR [ecx+0x62],ecx
  41d0cb:	jbe    0x41d0fb
  41d0cd:	sbb    ebp,DWORD PTR [edi+0x67136824]
  41d0d3:	pop    ds
  41d0d4:	mov    eax,0x19c8744e
  41d0d9:	mov    bl,0xc0
  41d0db:	xor    ebp,DWORD PTR [edi+edi*8+0x3e]
  41d0df:	mov    edi,DWORD PTR [ecx+edi*4]
  41d0e2:	mov    dh,bl
  41d0e4:	cs int3 
  41d0e6:	jbe    0x41d136
  41d0e8:	push   esp
  41d0e9:	mov    ch,dh
  41d0eb:	mov    al,ds:0x87e9cabb
  41d0f0:	add    eax,0x824c047f
  41d0f5:	scas   al,BYTE PTR es:[edi]
  41d0f6:	sbb    ebx,eax
  41d0f8:	or     al,0x3d
  41d0fa:	or     BYTE PTR [ecx-0x7ee7f210],dl
  41d100:	daa    
  41d101:	inc    edi
  41d102:	xor    dl,ch
  41d104:	mov    dl,dl
  41d106:	fdiv   DWORD PTR [ebx+0xd68ac76]
  41d10c:	arpl   WORD PTR [ebp+0x379108c5],dx
  41d112:	adc    dl,ah
  41d114:	in     eax,0x1
  41d116:	scas   al,BYTE PTR es:[edi]
  41d117:	mov    DWORD PTR [ecx],0xd3379eb7
  41d11d:	pop    ss
  41d11e:	adc    al,0xbc
  41d120:	retf   
  41d121:	scas   eax,DWORD PTR es:[edi]
  41d122:	pop    edi
  41d123:	aam    0x2
  41d125:	outs   dx,BYTE PTR ds:[esi]
  41d126:	cmp    BYTE PTR [esi+ecx*8],dl
  41d129:	sub    eax,0xa00f3466
  41d12e:	int    0x5d
  41d130:	xchg   al,dl
  41d132:	dec    edx
  41d133:	nop
  41d134:	mov    edx,0x1cb3c1c9
  41d139:	into   
  41d13a:	add    esi,DWORD PTR es:[esi]
  41d13d:	jns    0x41d134
  41d13f:	imul   ebx,DWORD PTR [eax-0x7ffd44fd],0x28523dd8
  41d149:	(bad)  
  41d14a:	mov    edi,0xc459a6d8
  41d14f:	test   BYTE PTR ds:0x452c94c,bl
  41d155:	pop    edi
  41d156:	adc    edx,edx
  41d158:	(bad)  
  41d159:	jmp    0x41d1bf
  41d15b:	lahf   
  41d15c:	sti    
  41d15d:	mov    WORD PTR [ebx-0x507009e2],es
  41d163:	lea    edx,[edi+0x73]
  41d166:	mov    cl,0x11
  41d168:	arpl   dx,bp
  41d16a:	lahf   
  41d16b:	push   0x306f9e36
  41d170:	fmul   st,st(1)
  41d172:	push   0xffffffcc
  41d174:	cmp    al,0x8c
  41d176:	int    0x1
  41d178:	aam    0xe4
  41d17a:	fidivr DWORD PTR [eax]
  41d17c:	stos   DWORD PTR es:[edi],eax
  41d17d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d17e:	sbb    eax,0x4e1e2de0
  41d183:	cdq    
  41d184:	pushf  
  41d185:	jmp    0xc104:0x636fd23d
  41d18c:	xchg   esi,ebx
  41d18e:	dec    ebx
  41d18f:	retf   
  41d190:	mov    ecx,0xf71c1a1a
  41d195:	daa    
  41d196:	and    esi,DWORD PTR [edi+0x5428fb22]
  41d19c:	clc    
  41d19d:	or     dh,BYTE PTR [edx]
  41d19f:	mov    al,0xb9
  41d1a1:	cmp    al,0xd1
  41d1a3:	mov    esi,esp
  41d1a5:	cmc    
  41d1a6:	fcmovne st,st(6)
  41d1a8:	test   al,0x3e
  41d1aa:	(bad)  
  41d1ab:	aaa    
  41d1ac:	out    dx,eax
  41d1ad:	pop    es
  41d1ae:	cmp    edx,DWORD PTR [esi+0x59b90ee1]
  41d1b4:	adc    DWORD PTR [esi+0x1972d4a2],esi
  41d1ba:	sub    esi,DWORD PTR [esi]
  41d1bc:	mov    bl,0xf6
  41d1be:	xor    eax,0x20e1fa66
  41d1c3:	sbb    DWORD PTR [esi+0x54b48ae4],ecx
  41d1c9:	lock xor edi,esi
  41d1cc:	loopne 0x41d153
  41d1ce:	pop    ebp
  41d1cf:	fsubp  st(7),st
  41d1d1:	daa    
  41d1d2:	ds push 0xbc147743
  41d1d8:	std    
  41d1d9:	int3   
  41d1da:	cs (bad) 
  41d1dc:	push   ds
  41d1dd:	imul   eax,ecx,0xffffff9d
  41d1e0:	test   al,0xb7
  41d1e2:	nop
  41d1e3:	adc    ebx,esi
  41d1e5:	or     al,BYTE PTR [ebp-0x2d]
  41d1e8:	test   DWORD PTR [esi],ebx
  41d1ea:	jae    0x41d23f
  41d1ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1ed:	(bad)  
  41d1ee:	fst    DWORD PTR ds:0x8d964052
  41d1f4:	int    0xd
  41d1f6:	in     al,0xd4
  41d1f8:	ds es push 0xfecd1e23
  41d1ff:	retf   0x1fca
  41d202:	push   ds
  41d203:	and    eax,0xdc50cc37
  41d208:	hlt    
  41d209:	pop    esp
  41d20a:	jle    0x41d25c
  41d20c:	jle    0x41d1e9
  41d20e:	sub    bh,BYTE PTR [ebx-0x4b]
  41d211:	jmp    0x329d6bc
  41d216:	pushf  
  41d217:	in     al,0xa9
  41d219:	ja     0x41d29a
  41d21b:	xor    eax,eax
  41d21d:	shl    esp,0x86
  41d220:	fidivr WORD PTR [eax+eax*1]
  41d223:	out    0x12,al
  41d225:	loopne 0x41d21b
  41d227:	dec    edi
  41d228:	rcr    BYTE PTR [ebx+eiz*2-0x644abd2d],0xd9
  41d230:	jae    0x41d233
  41d232:	lea    ecx,[eax]
  41d234:	push   ebx
  41d235:	add    DWORD PTR [ecx],esi
  41d237:	cmp    bh,ah
  41d239:	inc    ecx
  41d23a:	xchg   edx,eax
  41d23b:	push   esp
  41d23c:	cli    
  41d23d:	inc    esi
  41d23e:	xchg   esp,eax
  41d23f:	jb     0x41d24e
  41d241:	push   esp
  41d242:	imul   edx,DWORD PTR [edx+0x6c],0xeb8279a1
  41d249:	xchg   edx,eax
  41d24a:	fimul  DWORD PTR [edi+0x13]
  41d24d:	jne    0x41d1f8
  41d24f:	mov    dh,0x43
  41d251:	hlt    
  41d252:	retf   0xe38a
  41d255:	dec    esp
  41d256:	dec    esi
  41d257:	scas   eax,DWORD PTR es:[edi]
  41d258:	adc    esi,esi
  41d25a:	mov    cl,0x62
  41d25c:	or     eax,0x963ab0eb
  41d261:	lea    ecx,[eax+edi*1]
  41d264:	std    
  41d265:	retf   0xb35f
  41d268:	aad    0xf1
  41d26a:	pop    ds
  41d26b:	inc    esi
  41d26c:	sbb    edx,DWORD PTR [edx+0x2a]
  41d26f:	xchg   ebx,eax
  41d270:	jo     0x41d2a1
  41d272:	mov    dh,0x26
  41d274:	push   ebp
  41d275:	pusha  
  41d276:	lods   al,BYTE PTR ds:[esi]
  41d277:	aaa    
  41d278:	lea    eax,[eax-0x41]
  41d27b:	add    ebp,DWORD PTR [esi+0xbcb6306]
  41d281:	or     eax,0xc70848d4
  41d286:	push   ds
  41d287:	xchg   esi,eax
  41d288:	or     dh,BYTE PTR [edx+0x5f]
  41d28b:	idiv   eax
  41d28d:	outs   dx,DWORD PTR ds:[esi]
  41d28e:	pusha  
  41d28f:	(bad)  
  41d290:	jmp    0x588dc754
  41d295:	sar    DWORD PTR [edi],0xb0
  41d298:	adc    ch,BYTE PTR [ebx+0x2fa4a359]
  41d29e:	push   edi
  41d29f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2a0:	add    DWORD PTR [ebx],0xffffffa9
  41d2a3:	sti    
  41d2a4:	push   ss
  41d2a5:	in     al,dx
  41d2a6:	or     DWORD PTR [eax],0xffffffff
  41d2a9:	xchg   bh,bl
  41d2ab:	test   BYTE PTR [ecx],al
  41d2ad:	fdivr  st,st(6)
  41d2af:	push   esp
  41d2b0:	mov    dh,0x4
  41d2b2:	and    al,0x1a
  41d2b4:	push   ss
  41d2b5:	pop    ss
  41d2b6:	mov    edi,0xc8fbfa51
  41d2bb:	in     al,0x30
  41d2bd:	fwait
  41d2be:	std    
  41d2bf:	out    0xff,al
  41d2c1:	loope  0x41d315
  41d2c3:	adc    eax,0xbee307bb
  41d2c8:	sbb    al,0x9f
  41d2ca:	cs xchg ebp,eax
  41d2cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2cd:	xor    ch,BYTE PTR [ecx]
  41d2cf:	dec    ebx
  41d2d0:	or     eax,0xae7b36b6
  41d2d5:	jnp    0x41d330
  41d2d7:	jmp    0x41d25c
  41d2d9:	leave  
  41d2da:	jle    0x41d2bd
  41d2dc:	mov    DWORD PTR ds:0xa8a44939,ebp
  41d2e2:	sub    edx,DWORD PTR [ebx-0x18]
  41d2e5:	(bad)  
  41d2e6:	out    0x2f,eax
  41d2e8:	jbe    0x41d26a
  41d2ea:	lods   al,BYTE PTR ds:[esi]
  41d2eb:	sub    al,0x7e
  41d2ed:	xchg   edi,eax
  41d2ee:	bound  esi,QWORD PTR [esi+0x7aeafec8]
  41d2f4:	bound  esp,QWORD PTR [eax]
  41d2f6:	shl    al,cl
  41d2f8:	push   ebp
  41d2f9:	scas   eax,DWORD PTR es:[edi]
  41d2fa:	into   
  41d2fb:	jbe    0x41d2d6
  41d2fd:	call   0xd981585a
  41d302:	add    eax,0xfb3f9af5
  41d307:	pop    edx
  41d308:	les    ecx,FWORD PTR [edx]
  41d30a:	cmp    eax,0x4d23433b
  41d30f:	scas   eax,DWORD PTR es:[edi]
  41d310:	xor    BYTE PTR [edx-0x65],al
  41d313:	data16 pushaw 
  41d316:	daa    
  41d317:	jns    0x41d34e
  41d319:	push   es
  41d31a:	fwait
  41d31b:	inc    ebx
  41d31c:	call   0x4b5b0923
  41d321:	int    0x40
  41d323:	cmp    BYTE PTR [esp+eax*2],0x36
  41d327:	fwait
  41d328:	pop    es
  41d329:	fwait
  41d32a:	sbb    DWORD PTR [esi],ebp
  41d32c:	lds    edx,FWORD PTR [ecx+0x68]
  41d32f:	mov    dl,BYTE PTR [edx-0x29]
  41d332:	or     DWORD PTR [edx],edi
  41d334:	mov    cl,0x27
  41d336:	arpl   WORD PTR [ecx-0x6874980],dx
  41d33c:	dec    esp
  41d33d:	call   0x100ea2dd
  41d342:	loopne 0x41d3ad
  41d344:	jp     0x41d3a3
  41d346:	ins    DWORD PTR es:[edi],dx
  41d347:	fbld   TBYTE PTR [edx-0x19eadf72]
  41d34d:	push   es
  41d34e:	push   esp
  41d34f:	icebp  
  41d350:	jns    0x41d349
  41d352:	add    eax,0x3e8026ae
  41d357:	test   al,0xad
  41d359:	lea    esp,[edi]
  41d35b:	mov    dl,0x2
  41d35d:	mov    cl,0xa4
  41d35f:	sub    DWORD PTR [esi+0x67],0xf464a3a3
  41d366:	xchg   bh,cl
  41d368:	inc    edi
  41d369:	or     edi,DWORD PTR [esi-0x627bd1d6]
  41d36f:	in     eax,0x2f
  41d371:	jecxz  0x41d33f
  41d373:	adc    al,0xf0
  41d375:	fpatan 
  41d377:	mov    bl,BYTE PTR [ecx+eiz*1+0x27f14af2]
  41d37e:	fidiv  DWORD PTR [eax+0x10]
  41d381:	gs inc eax
  41d383:	test   DWORD PTR [ebp+0x6a],0xcee8fc7d
  41d38a:	test   DWORD PTR [esi+ebx*1],ebx
  41d38d:	out    0x6c,al
  41d38f:	pop    ds
  41d390:	adc    bh,dh
  41d392:	mov    WORD PTR [edi+eax*2],ss
  41d395:	aam    0xe6
  41d397:	ret    
  41d398:	ficom  WORD PTR [ebx+ebx*2-0x19b542c3]
  41d39f:	retf   
  41d3a0:	mov    esp,0x77146a8a
  41d3a5:	and    al,0x3d
  41d3a7:	sbb    DWORD PTR [ecx-0x6dcd553b],0xffffff8f
  41d3ae:	pop    ecx
  41d3af:	sub    bh,0x29
  41d3b2:	inc    ebp
  41d3b3:	fild   DWORD PTR [eax+0x667e307d]
  41d3b9:	inc    ebx
  41d3ba:	and    eax,0x30a310ef
  41d3bf:	mov    al,ds:0x469ffaa9
  41d3c4:	fnstenv [edi+0x34ab2981]
  41d3ca:	cli    
  41d3cb:	dec    BYTE PTR [edx]
  41d3cd:	popa   
  41d3ce:	into   
  41d3cf:	mov    ch,0xe5
  41d3d1:	out    dx,al
  41d3d2:	jo     0x41d3e4
  41d3d4:	scas   al,BYTE PTR es:[edi]
  41d3d5:	outs   dx,BYTE PTR ds:[esi]
  41d3d6:	test   DWORD PTR [esi-0x32edb8b0],esp
  41d3dc:	inc    ebp
  41d3dd:	jne    0xd2b7b04b
  41d3e3:	mov    ecx,0x4ae80691
  41d3e8:	ins    BYTE PTR es:[edi],dx
  41d3e9:	xlat   BYTE PTR ds:[ebx]
  41d3ea:	xlat   BYTE PTR ds:[ebx]
  41d3eb:	ds clc 
  41d3ed:	test   DWORD PTR [eax+0x70ed5b55],ebp
  41d3f3:	push   ebx
  41d3f4:	retf   0x8547
  41d3f7:	sub    ebx,ebp
  41d3f9:	adc    eax,0x7e0778bd
  41d3fe:	pushf  
  41d3ff:	and    al,BYTE PTR [edx]
  41d401:	dec    esp
  41d402:	in     eax,0x2c
  41d404:	push   ebp
  41d405:	call   0x4fe54225
  41d40a:	std    
  41d40b:	in     al,0xa7
  41d40d:	outs   dx,DWORD PTR ds:[esi]
  41d40e:	jbe    0x41d3dd
  41d410:	in     al,dx
  41d411:	lahf   
  41d412:	and    DWORD PTR [edi],ebx
  41d414:	mov    WORD PTR [esi+ecx*4-0x9],fs
  41d418:	mov    ch,0x43
  41d41a:	fld    TBYTE PTR [edx]
  41d41c:	push   0x51
  41d41e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d41f:	jne    0x41d3df
  41d421:	mov    dh,0xa4
  41d423:	push   eax
  41d424:	pushf  
  41d425:	leave  
  41d426:	mov    dl,0xc7
  41d428:	repz cmp DWORD PTR [eax+ebx*8],ecx
  41d42c:	pusha  
  41d42d:	jl     0x41d47c
  41d42f:	stos   BYTE PTR es:[edi],al
  41d430:	push   edx
  41d431:	mov    al,0x27
  41d433:	cs out dx,eax
  41d435:	adc    al,0x52
  41d437:	cs (bad) 
  41d439:	aaa    
  41d43a:	push   esp
  41d43b:	pop    eax
  41d43c:	test   eax,0xa282ab06
  41d441:	dec    esp
  41d442:	outs   dx,BYTE PTR ds:[esi]
  41d443:	retf   0xd576
  41d446:	loop   0x41d4be
  41d448:	mov    ah,0xeb
  41d44a:	inc    esi
  41d44b:	leave  
  41d44c:	inc    edi
  41d44d:	mov    edi,0xd60d8522
  41d452:	pop    edx
  41d453:	jb     0x41d3f0
  41d455:	loope  0x41d4c2
  41d457:	mov    eax,ds:0xbebc9195
  41d45c:	daa    
  41d45d:	daa    
  41d45e:	push   cs
  41d45f:	mov    ebx,0xfd10ab24
  41d464:	mov    cl,0x45
  41d466:	repnz mov ebx,0x23b60566
  41d46c:	jbe    0x41d413
  41d46e:	add    eax,0xafd68e1d
  41d473:	add    eax,0x61aec78e
  41d478:	or     bh,cl
  41d47a:	push   esp
  41d47b:	cmp    eax,0xd449574c
  41d480:	out    0xf8,eax
  41d482:	ror    BYTE PTR [edi+0x45],1
  41d485:	jp     0x41d4e6
  41d487:	out    0x15,al
  41d489:	arpl   WORD PTR [edx+0x79503268],di
  41d48f:	imul   ebx,edi,0x71
  41d492:	jg     0x41d487
  41d494:	cdq    
  41d495:	adc    eax,0xf410b95a
  41d49a:	add    dl,BYTE PTR [edi-0xc491807]
  41d4a0:	std    
  41d4a1:	jae    0x41d430
  41d4a3:	sbb    bh,ch
  41d4a5:	cmc    
  41d4a6:	mov    ecx,DWORD PTR fs:[edx-0x64aeb6b8]
  41d4ad:	jp     0x41d441
  41d4af:	adc    bl,bl
  41d4b1:	push   cs
  41d4b2:	pushf  
  41d4b3:	scas   eax,DWORD PTR es:[edi]
  41d4b4:	retf   0xe16c
  41d4b7:	mov    ecx,DWORD PTR [edi+0x364d493e]
  41d4bd:	rcr    BYTE PTR [ecx-0x3a],1
  41d4c0:	add    DWORD PTR [ebp-0x26],ecx
  41d4c3:	ins    DWORD PTR es:[edi],dx
  41d4c4:	pop    ebx
  41d4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4c6:	dec    esp
  41d4c7:	in     al,dx
  41d4c8:	dec    ecx
  41d4c9:	mov    ds:0xc7760922,eax
  41d4ce:	xchg   esi,eax
  41d4cf:	mov    DWORD PTR [esi-0x50],ebp
  41d4d2:	add    esi,DWORD PTR [edx+ecx*8-0x25]
  41d4d6:	cld    
  41d4d7:	test   al,0xf7
  41d4d9:	xchg   ebp,eax
  41d4da:	repz mov ch,0xcc
  41d4dd:	pop    edx
  41d4de:	pop    es
  41d4df:	fimul  DWORD PTR [ebp+edx*4-0x40]
  41d4e3:	mov    dh,0xd7
  41d4e5:	and    eax,0xa57884af
  41d4ea:	ja     0x41d4a1
  41d4ec:	dec    ebx
  41d4ed:	mov    ds:0xfde80f31,eax
  41d4f2:	push   edi
  41d4f3:	std    
  41d4f4:	aam    0xd4
  41d4f6:	mov    eax,0xabbafb10
  41d4fb:	pop    ebp
  41d4fc:	jp     0x41d4b3
  41d4fe:	hlt    
  41d4ff:	test   al,0xc3
  41d501:	dec    esp
  41d502:	xchg   ecx,eax
  41d503:	into   
  41d504:	push   cs
  41d505:	sub    eax,0xa75c4946
  41d50a:	retf   0xc796
  41d50d:	sub    BYTE PTR [esp+ecx*4+0x1f],0x6a
  41d512:	dec    ebx
  41d513:	mov    ds:0xec8c9a8c,eax
  41d518:	aas    
  41d519:	sbb    ah,bl
  41d51b:	jae    0x41d562
  41d51d:	cwde   
  41d51e:	daa    
  41d51f:	test   BYTE PTR [ebx+ebp*4+0x6bf3472d],bh
  41d526:	es ret 0xdfe0
  41d52a:	jle    0x41d4cd
  41d52c:	fisubr WORD PTR [ebx+0x8]
  41d52f:	fisttp QWORD PTR [ecx]
  41d531:	fisubr WORD PTR [esi-0x17]
  41d534:	push   ecx
  41d535:	add    esi,DWORD PTR [edx+eiz*2-0x33df278b]
  41d53c:	(bad)  
  41d53d:	gs pop esp
  41d53f:	dec    edx
  41d540:	popa   
  41d541:	hlt    
  41d542:	adc    eax,0xc66de99d
  41d547:	ret    
  41d548:	push   ds
  41d549:	sbb    al,0x68
  41d54b:	dec    ebx
  41d54c:	and    ebp,ebx
  41d54e:	sbb    dh,bl
  41d550:	xchg   ecx,eax
  41d551:	lods   al,BYTE PTR ds:[esi]
  41d552:	xor    dh,BYTE PTR [ebx+0x23]
  41d555:	push   ds
  41d556:	int    0x15
  41d558:	xchg   esi,eax
  41d559:	mov    esp,0x4594da2
  41d55e:	popa   
  41d55f:	jg     0x41d520
  41d561:	ret    0x60d
  41d564:	sub    cl,BYTE PTR [ecx]
  41d566:	sub    dl,BYTE PTR [edx-0x64]
  41d569:	pop    ecx
  41d56a:	inc    ebp
  41d56b:	lods   eax,DWORD PTR ds:[esi]
  41d56c:	inc    edx
  41d56d:	out    dx,al
  41d56e:	inc    ebp
  41d56f:	dec    eax
  41d570:	popf   
  41d571:	iret   
  41d572:	or     BYTE PTR [edi],ah
  41d574:	push   ss
  41d575:	push   esi
  41d576:	push   0x2240dda
  41d57b:	dec    ebp
  41d57c:	xor    al,0xa9
  41d57e:	sub    ch,bl
  41d580:	adc    esi,esi
  41d582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d583:	mov    eax,0x99589389
  41d588:	mov    DWORD PTR [esi-0x4c2b25cb],ebx
  41d58e:	jb     0x41d57a
  41d590:	mov    ebx,0xd0986f99
  41d595:	enter  0xe22,0x0
  41d599:	sbb    ch,BYTE PTR [esi+0x6952d671]
  41d59f:	sbb    DWORD PTR [esi*1-0x37539d76],ecx
  41d5a6:	rol    BYTE PTR [eax],0xa7
  41d5a9:	jne    0x41d5c2
  41d5ab:	pop    eax
  41d5ac:	push   ebx
  41d5ad:	das    
  41d5ae:	cmp    BYTE PTR [ecx+0x77],0xd3
  41d5b2:	mov    ah,0x79
  41d5b4:	push   eax
  41d5b5:	push   edi
  41d5b6:	in     eax,0x92
  41d5b8:	dec    edx
  41d5b9:	repnz and esp,DWORD PTR [esi-0x48]
  41d5bd:	mov    eax,ds:0xac7c3389
  41d5c2:	cld    
  41d5c3:	cmp    edx,DWORD PTR [ebx+0x41]
  41d5c6:	fcmove st,st(6)
  41d5c8:	jmp    0x41d632
  41d5ca:	fdiv   QWORD PTR [ebp-0x46c602f9]
  41d5d0:	cli    
  41d5d1:	ret    0xfe21
  41d5d4:	dec    ecx
  41d5d5:	pop    ecx
  41d5d6:	pop    edi
  41d5d7:	cli    
  41d5d8:	imul   ebp,eax,0x14788899
  41d5de:	aaa    
  41d5df:	cdq    
  41d5e0:	and    al,0x9
  41d5e2:	mov    DWORD PTR [edi],eax
  41d5e4:	push   eax
  41d5e5:	lods   al,BYTE PTR ds:[esi]
  41d5e6:	add    ebp,ecx
  41d5e8:	test   DWORD PTR [edx-0x70190123],edx
  41d5ee:	pop    ds
  41d5ef:	xor    DWORD PTR ds:0xf85af634,ebp
  41d5f5:	aam    0x67
  41d5f7:	out    dx,eax
  41d5f8:	cli    
  41d5f9:	ret    
  41d5fa:	adc    BYTE PTR [esi-0x2a],0x6
  41d5fe:	mov    ah,BYTE PTR [ecx+0x16]
  41d601:	call   0xfe63e2c5
  41d606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d607:	out    0xeb,eax
  41d609:	sbb    DWORD PTR [edx-0x20fee6ad],ebp
  41d60f:	mov    eax,ds:0xfbb350cf
  41d614:	and    BYTE PTR ds:0xb025e76,ah
  41d61a:	sti    
  41d61b:	push   esp
  41d61c:	and    eax,0xfdb4b37b
  41d621:	mov    dh,0xb0
  41d623:	imul   esp,DWORD PTR [edi+0x23],0xc1bc90
  41d62a:	retf   
  41d62b:	pop    ds
  41d62c:	in     al,0xdc
  41d62e:	out    dx,eax
  41d62f:	dec    esp
  41d630:	mov    eax,ds:0xef0a9de7
  41d635:	sar    DWORD PTR [ecx+0x72],1
  41d638:	(bad)  
  41d639:	and    esp,DWORD PTR [ebp+0xc827cbe]
  41d63f:	sub    DWORD PTR [ecx-0x23],0xdefa0a08
  41d646:	xchg   BYTE PTR [ebx+eax*8-0x3327687a],dl
  41d64d:	ret    
  41d64e:	mov    esi,0xbd01aac6
  41d653:	or     ch,bh
  41d655:	mov    cl,0xf2
  41d657:	lods   al,BYTE PTR ds:[esi]
  41d658:	pop    esi
  41d659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d65a:	and    BYTE PTR [ebp+0x50],bh
  41d65d:	fistp  WORD PTR [esi]
  41d65f:	add    BYTE PTR [ebx],bl
  41d661:	push   ds
  41d662:	pop    ebx
  41d663:	in     eax,dx
  41d664:	push   edi
  41d665:	xchg   DWORD PTR [ecx],eax
  41d667:	dec    eax
  41d668:	cmp    eax,0xd221e7b1
  41d66d:	sbb    edx,esp
  41d66f:	sbb    edi,DWORD PTR [ebp-0x57135cd1]
  41d675:	inc    edi
  41d676:	cld    
  41d677:	push   edx
  41d678:	cmp    ebx,edi
  41d67a:	lds    edi,FWORD PTR [edx+0x48e8c9a3]
  41d680:	(bad)  
  41d681:	sub    al,BYTE PTR [eax-0x3330b221]
  41d687:	test   al,0x21
  41d689:	in     al,dx
  41d68a:	mov    al,ds:0x61325a2d
  41d68f:	in     al,dx
  41d690:	xchg   esi,eax
  41d691:	xchg   edi,eax
  41d692:	outs   dx,BYTE PTR ds:[esi]
  41d693:	sub    dl,BYTE PTR [esi]
  41d695:	sbb    ebx,edi
  41d697:	call   0xc9fd0fd9
  41d69c:	jne    0x41d6ae
  41d69e:	sub    edi,esp
  41d6a0:	add    BYTE PTR [edi],dh
  41d6a2:	fcomi  st,st(3)
  41d6a4:	mov    eax,ds:0x3afebec4
  41d6a9:	or     bh,BYTE PTR [eax-0x71]
  41d6ac:	mov    ds:0xc96db96e,eax
  41d6b1:	adc    DWORD PTR [ecx-0x1e3f3eaf],ecx
  41d6b7:	sub    al,0x31
  41d6b9:	sbb    DWORD PTR [edi+0x719eb4cd],edx
  41d6bf:	das    
  41d6c0:	into   
  41d6c1:	jge    0x41d73d
  41d6c3:	(bad)  
  41d6c4:	cld    
  41d6c5:	jg     0x41d6a8
  41d6c7:	jmp    0x41d709
  41d6c9:	mul    DWORD PTR [edx+ecx*1-0x9]
  41d6cd:	lods   al,BYTE PTR ds:[esi]
  41d6ce:	adc    BYTE PTR [ecx],al
  41d6d0:	ins    BYTE PTR es:[edi],dx
  41d6d1:	pop    ds
  41d6d2:	cmp    cl,ch
  41d6d4:	dec    edi
  41d6d5:	nop
  41d6d6:	enter  0x2910,0x5
  41d6da:	adc    dl,ah
  41d6dc:	nop
  41d6dd:	jmp    0x41d745
  41d6df:	add    dl,BYTE PTR [ecx+0x12d3b381]
  41d6e5:	std    
  41d6e6:	retf   0x3317
  41d6e9:	push   edx
  41d6ea:	mov    cl,0x46
  41d6ec:	test   DWORD PTR [ebx+0x27],esi
  41d6ef:	test   esi,esp
  41d6f1:	es dec esi
  41d6f3:	call   0x3f09:0x4ae197d4
  41d6fa:	sub    cl,al
  41d6fc:	mov    ds:0x8a0a05d0,eax
  41d701:	pop    ecx
  41d702:	jl     0x41d77f
  41d704:	push   cs
  41d705:	xor    ecx,DWORD PTR [edx-0x70f3bdd1]
  41d70b:	(bad)  
  41d70c:	fwait
  41d70d:	pop    ds
  41d70e:	leave  
  41d70f:	sar    esi,1
  41d711:	out    dx,al
  41d712:	out    0x2e,eax
  41d714:	cs pushf 
  41d716:	ror    DWORD PTR [edi-0x24],1
  41d719:	neg    DWORD PTR [ecx+0x63]
  41d71c:	pop    ebx
  41d71d:	push   0x56
  41d71f:	inc    ecx
  41d720:	fld    TBYTE PTR [eax+0x476f78ab]
  41d726:	mov    esp,0x1a7373d5
  41d72b:	call   0x6f3e:0x4913406
  41d732:	xchg   edx,eax
  41d733:	mov    edx,0xd29267e7
  41d738:	je     0x41d773
  41d73a:	outs   dx,BYTE PTR ds:[esi]
  41d73b:	fs inc eax
  41d73d:	mul    DWORD PTR [esi+0x41366a4a]
  41d743:	into   
  41d744:	jle    0x41d6d8
  41d746:	stos   DWORD PTR es:[edi],eax
  41d747:	mov    eax,0x48157a05
  41d74c:	stc    
  41d74d:	pop    ecx
  41d74e:	jmp    0xeb0d3d43
  41d753:	pop    ss
  41d754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d755:	mov    ebx,0x7438d6c7
  41d75a:	fdiv   QWORD PTR [edi-0x63]
  41d75d:	ins    BYTE PTR es:[edi],dx
  41d75e:	pop    esp
  41d75f:	data16 jp 0x41d7b4
  41d762:	add    eax,0xa8ad3064
  41d767:	test   DWORD PTR [eax],ebp
  41d769:	adc    DWORD PTR [esi],ecx
  41d76b:	rol    bl,0x18
  41d76e:	adc    ebx,DWORD PTR [esi+0x16]
  41d771:	mov    dl,0x7f
  41d773:	mov    dh,0xa6
  41d775:	mov    WORD PTR [esi+0x1],ds
  41d778:	das    
  41d779:	adc    al,0x1c
  41d77b:	clc    
  41d77c:	cmp    ch,BYTE PTR [esi+edx*1+0x5f]
  41d780:	iret   
  41d781:	mov    ebp,0x7560acc9
  41d786:	pop    es
  41d787:	mov    cl,0xdc
  41d789:	xor    DWORD PTR [ecx+0x6e],esp
  41d78c:	mov    edi,DWORD PTR [ebx-0x1622c157]
  41d792:	ret    
  41d793:	add    DWORD PTR [ebx+0x46],esi
  41d796:	mov    BYTE PTR [edx],ch
  41d798:	dec    esi
  41d799:	iret   
  41d79a:	jecxz  0x41d78a
  41d79c:	jge    0x41d773
  41d79e:	cmp    ebp,DWORD PTR [ebx-0x5b1d6767]
  41d7a4:	aaa    
  41d7a5:	out    dx,al
  41d7a6:	cld    
  41d7a7:	sti    
  41d7a8:	xchg   ecx,eax
  41d7a9:	push   edx
  41d7aa:	daa    
  41d7ab:	js     0x41d7c7
  41d7ad:	cwde   
  41d7ae:	mov    eax,0xe46ebadb
  41d7b3:	push   0x1d70b12a
  41d7b8:	cmp    ebx,DWORD PTR [ecx+ecx*8+0x37]
  41d7bc:	adc    DWORD PTR [edi],eax
  41d7be:	pop    eax
  41d7bf:	out    dx,eax
  41d7c0:	push   ebx
  41d7c1:	mov    DWORD PTR [ecx+0x710601c9],ebp
  41d7c7:	fild   WORD PTR [esi+0x6ac6a2e]
  41d7cd:	repnz popf 
  41d7cf:	or     DWORD PTR [edx+edi*8+0x687850a4],eax
  41d7d6:	into   
  41d7d7:	ins    DWORD PTR es:[edi],dx
  41d7d8:	jl     0x41d84e
  41d7da:	adc    cl,BYTE PTR [eax-0x5810a07b]
  41d7e0:	xchg   edi,eax
  41d7e1:	ins    DWORD PTR es:[edi],dx
  41d7e2:	xor    BYTE PTR [eax+0x9b48d1d],bh
  41d7e8:	(bad)  
  41d7e9:	pop    eax
  41d7ea:	cwde   
  41d7eb:	test   DWORD PTR [esi],ebx
  41d7ed:	arpl   WORD PTR [edx],bp
  41d7ef:	cld    
  41d7f0:	mov    dl,0x1f
  41d7f2:	lea    esi,[ebx+0xe]
  41d7f5:	ss scas eax,DWORD PTR es:[edi]
  41d7f7:	idiv   BYTE PTR [ebx]
  41d7f9:	inc    edx
  41d7fa:	sahf   
  41d7fb:	jecxz  0x41d84f
  41d7fd:	hlt    
  41d7fe:	(bad)  
  41d7ff:	mov    dl,0x56
  41d801:	out    0x97,eax
  41d803:	adc    DWORD PTR [ecx],esp
  41d805:	out    0xec,al
  41d807:	push   edi
  41d808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d809:	pop    es
  41d80a:	mov    ch,0x85
  41d80c:	mov    ah,0x75
  41d80e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d80f:	mov    ecx,edi
  41d811:	ficom  WORD PTR [edi+0x1623156a]
  41d817:	push   ebp
  41d818:	sbb    dl,ch
  41d81a:	sub    eax,0x1142648b
  41d81f:	push   edi
  41d820:	cli    
  41d821:	rol    DWORD PTR [esi-0x4a],0x8e
  41d825:	jae    0x41d83b
  41d827:	nop
  41d828:	xchg   edx,eax
  41d829:	mov    eax,ds:0x7297f5a
  41d82e:	and    BYTE PTR [esi+0x73],ch
  41d831:	cld    
  41d832:	add    eax,0xe8fae81b
  41d837:	data16 lahf 
  41d839:	rcr    bl,0x75
  41d83c:	and    DWORD PTR gs:[eax],edi
  41d83f:	out    dx,eax
  41d840:	mov    dh,BYTE PTR [ecx-0x38aed0ea]
  41d846:	xchg   esp,eax
  41d847:	ins    DWORD PTR es:[edi],dx
  41d848:	bound  esi,QWORD PTR [ecx]
  41d84a:	or     al,0x79
  41d84c:	sbb    esp,ebx
  41d84e:	call   0x87e2:0x7f0723ce
  41d855:	xchg   BYTE PTR [esi-0x2b],bl
  41d858:	pop    esp
  41d859:	pusha  
  41d85a:	cmp    eax,0x982769b5
  41d85f:	fsub   QWORD PTR [eax]
  41d861:	int    0x8b
  41d863:	fild   WORD PTR [ebp+0x3a23036]
  41d869:	leave  
  41d86a:	imul   edi,esp,0xffffff8d
  41d86d:	sti    
  41d86e:	bound  ecx,QWORD PTR [ebx+ebx*4-0x1591a7ce]
  41d875:	jne    0x41d894
  41d877:	mov    dl,0x75
  41d879:	push   eax
  41d87a:	retf   
  41d87b:	icebp  
  41d87c:	and    eax,0x6a4d2341
  41d881:	fcomp  DWORD PTR [edi]
  41d883:	mov    ebp,0x5d882c3e
  41d888:	or     edi,0x4c76f93a
  41d88e:	loope  0x41d88c
  41d890:	lock enter 0xaa79,0x65
  41d895:	imul   eax,edi,0xffffff9a
  41d898:	in     al,0xae
  41d89a:	clc    
  41d89b:	lahf   
  41d89c:	rcl    DWORD PTR [edi+0x632fb8d],1
  41d8a2:	retf   
  41d8a3:	or     eax,0xcf497f34
  41d8a8:	dec    edi
  41d8a9:	aad    0x11
  41d8ab:	lahf   
  41d8ac:	aad    0x82
  41d8ae:	sbb    al,0xaf
  41d8b0:	stos   DWORD PTR es:[edi],eax
  41d8b1:	inc    ebx
  41d8b2:	mov    ebx,0x70b8ca0a
  41d8b7:	push   esi
  41d8b8:	add    BYTE PTR [ebp+eax*4+0x4fc8037c],ah
  41d8bf:	mov    gs,WORD PTR [edi-0x7b9fd793]
  41d8c5:	aas    
  41d8c6:	mov    al,ds:0x8295d12b
  41d8cb:	inc    eax
  41d8cc:	rol    cl,0x1e
  41d8cf:	lods   eax,DWORD PTR ds:[esi]
  41d8d0:	sub    eax,0x372f750a
  41d8d5:	hlt    
  41d8d6:	idiv   BYTE PTR [edx+0x7cd5ae5f]
  41d8dc:	mov    eax,ds:0x7e89a056
  41d8e1:	push   ebp
  41d8e2:	jmp    DWORD PTR [esi]
  41d8e4:	mov    ah,0xa3
  41d8e6:	outs   dx,DWORD PTR ds:[esi]
  41d8e7:	hlt    
  41d8e8:	cs pop ebx
  41d8ea:	jl     0x41d8a0
  41d8ec:	loope  0x41d93d
  41d8ee:	cwde   
  41d8ef:	mov    ebp,0x4a71e908
  41d8f4:	jno    0x41d923
  41d8f6:	aas    
  41d8f7:	lods   eax,DWORD PTR ds:[esi]
  41d8f8:	jl     0x41d8e9
  41d8fa:	(bad)  
  41d8fb:	(bad)  
  41d8fc:	data16 out 0x83,al
  41d8ff:	ins    DWORD PTR es:[edi],dx
  41d900:	fadd   QWORD PTR [ebx]
  41d902:	pop    esi
  41d903:	pop    esp
  41d904:	mov    esi,0x6bc8933a
  41d909:	jge    0x41d915
  41d90b:	fst    QWORD PTR [ebx+0xf]
  41d90e:	iret   
  41d90f:	push   0x69
  41d911:	je     0x41d948
  41d913:	(bad)  
  41d914:	aad    0x80
  41d916:	loope  0x41d8f6
  41d918:	in     eax,0x9e
  41d91a:	shl    BYTE PTR [eax+ebp*8],1
  41d91d:	ret    0x26ce
  41d920:	inc    edx
  41d921:	(bad)  
  41d922:	inc    ecx
  41d923:	aaa    
  41d924:	adc    eax,0x958da3f5
  41d929:	mov    eax,ds:0x74d27e9c
  41d92e:	popa   
  41d92f:	out    dx,eax
  41d930:	fcomp  DWORD PTR [eax+eax*4-0x5c321a47]
  41d937:	jae    0x41d8bf
  41d939:	or     dh,BYTE PTR [ebx]
  41d93b:	or     dh,cl
  41d93d:	pop    esp
  41d93e:	into   
  41d93f:	arpl   WORD PTR [ebx-0x4e2d19f5],bx
  41d945:	iret   
  41d946:	stos   BYTE PTR es:[edi],al
  41d947:	sub    DWORD PTR [edi-0x5ad143ce],esi
  41d94d:	jb     0x41d979
  41d94f:	add    dl,dl
  41d951:	retf   
  41d952:	adc    DWORD PTR es:[edi],0x1730ac21
  41d959:	inc    ecx
  41d95a:	stos   BYTE PTR es:[edi],al
  41d95b:	(bad)  
  41d95c:	lock fwait
  41d95e:	ins    BYTE PTR es:[edi],dx
  41d95f:	inc    edi
  41d960:	ficomp WORD PTR [esp+esi*2+0x66]
  41d964:	mov    eax,ds:0x1c0266c7
  41d969:	dec    esi
  41d96a:	stos   DWORD PTR es:[edi],eax
  41d96b:	push   edx
  41d96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d96d:	adc    ecx,ebx
  41d96f:	xchg   DWORD PTR [edi],edx
  41d971:	fimul  DWORD PTR es:[esi+esi*4-0x497b7304]
  41d97a:	aam    0x68
  41d97c:	xor    eax,0x523d3d37
  41d981:	jmp    0x41d958
  41d983:	lahf   
  41d984:	(bad)  
  41d986:	(bad)  
  41d988:	ret    
  41d989:	mov    eax,ds:0xe566e7fe
  41d98e:	sbb    dl,BYTE PTR [ecx]
  41d990:	adc    DWORD PTR [esi],esp
  41d992:	mov    edi,0x9bbc8cbb
  41d997:	cmp    bl,BYTE PTR [esi-0x3139fcbb]
  41d99d:	fld    QWORD PTR [edi+0x13]
  41d9a0:	ja     0x41d959
  41d9a2:	mov    esi,DWORD PTR [edi]
  41d9a4:	test   DWORD PTR ds:0x2b7f28ca,0x92718611
  41d9ae:	and    edi,DWORD PTR [ebp+0x5f1c5d43]
  41d9b4:	sub    ebp,DWORD PTR [edx-0x3f3bb6dc]
  41d9ba:	arpl   WORD PTR [ebp+esi*8-0x55af753c],dx
  41d9c1:	mov    eax,0xd00c31a2
  41d9c6:	adc    eax,DWORD PTR [ebp-0x1a]
  41d9c9:	test   DWORD PTR [ecx+0x5e],esi
  41d9cc:	sub    dh,BYTE PTR [eax]
  41d9ce:	push   ebp
  41d9cf:	ins    DWORD PTR es:[edi],dx
  41d9d0:	xchg   edi,eax
  41d9d1:	cmp    BYTE PTR [edx-0x938cce2],dl
  41d9d7:	sub    BYTE PTR [ecx],cl
  41d9d9:	mov    edx,0x1f68852a
  41d9de:	js     0x41da47
  41d9e0:	mov    edx,0x5f252b06
  41d9e5:	aad    0xe6
  41d9e7:	arpl   bp,sp
  41d9e9:	iret   
  41d9ea:	mov    esp,0x6bd843b5
  41d9ef:	(bad)  
  41d9f1:	and    edx,DWORD PTR [esi+0x417ee14]
  41d9f7:	leave  
  41d9f8:	shl    BYTE PTR [edi],0x2c
  41d9fb:	fimul  WORD PTR [ebx]
  41d9fd:	cdq    
  41d9fe:	scas   eax,DWORD PTR es:[edi]
  41d9ff:	add    BYTE PTR [ebx-0x2fadce17],bl
  41da05:	mov    DWORD PTR [ecx+eax*4-0x7010329],eax
  41da0c:	les    ecx,FWORD PTR [edi+0x406ce817]
  41da12:	add    DWORD PTR [edi],esi
  41da14:	mov    ds:0x114b2ee,al
  41da19:	(bad)  
  41da1a:	sbb    DWORD PTR [esi+0x5d6d1e0c],edx
  41da20:	xchg   esi,eax
  41da21:	pop    edx
  41da22:	mov    BYTE PTR [edx],ch
  41da24:	mov    ?,WORD PTR [edi+0x1e]
  41da27:	adc    DWORD PTR [ebp+0x517d56b5],0xffffff81
  41da2e:	pop    ebp
  41da2f:	stos   DWORD PTR es:[edi],eax
  41da30:	pop    ss
  41da31:	lods   al,BYTE PTR ds:[esi]
  41da32:	ret    0xfce9
  41da35:	xchg   ecx,eax
  41da36:	aas    
  41da37:	imul   esi,DWORD PTR [ebx+0xb],0x79
  41da3b:	mov    ebp,0xc55fe64b
  41da40:	fild   QWORD PTR [ebp-0x4f]
  41da43:	cli    
  41da44:	and    eax,0x322b530a
  41da49:	lea    ecx,[esi+0x43497a59]
  41da4f:	mov    ebp,0x2a2fd211
  41da54:	add    eax,0x77c3cb8e
  41da59:	rcl    DWORD PTR gs:[ebp-0x4e5798ac],cl
  41da60:	mul    BYTE PTR [esi-0xf]
  41da63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da64:	cmp    edx,edx
  41da66:	xor    dl,BYTE PTR ds:[ebx-0x7689927b]
  41da6d:	dec    ecx
  41da6e:	jl     0x41da85
  41da70:	push   esp
  41da71:	push   ebx
  41da72:	pmaxsw mm6,QWORD PTR [esi+0x10f393d6]
  41da79:	out    dx,eax
  41da7a:	(bad)
  41da7d:	mov    ah,0x47
  41da7f:	xor    al,0x60
  41da81:	into   
  41da82:	scas   al,BYTE PTR es:[edi]
  41da83:	rcl    al,1
  41da85:	mov    ds:0x1f3ea595,eax
  41da8a:	cmp    ecx,edx
  41da8c:	cmc    
  41da8d:	out    dx,eax
  41da8e:	pop    ebx
  41da8f:	and    DWORD PTR [edi+0x43],edi
  41da92:	js     0x41dacb
  41da94:	mov    al,0xca
  41da96:	test   BYTE PTR [esp+edi*4],al
  41da99:	stos   DWORD PTR es:[edi],eax
  41da9a:	or     ebp,DWORD PTR [ebx+0x12]
  41da9d:	push   0x7c
  41da9f:	pop    esi
  41daa0:	pop    ss
  41daa1:	xor    bl,BYTE PTR [edx+0x37]
  41daa4:	in     eax,0xda
  41daa6:	jnp    0x41daf6
  41daa8:	adc    edx,ebp
  41daaa:	das    
  41daab:	push   esi
  41daac:	cdq    
  41daad:	xor    BYTE PTR [eax-0x16],dl
  41dab0:	pusha  
  41dab1:	(bad)  
  41dab2:	das    
  41dab3:	add    al,0xd2
  41dab5:	out    dx,eax
  41dab6:	add    eax,0xa6f35b51
  41dabb:	and    eax,0x22c0b5ff
  41dac0:	cs fmul st,st(1)
  41dac3:	and    al,0xb8
  41dac5:	and    al,dh
  41dac7:	xor    al,0xf4
  41dac9:	loope  0x41daf8
  41dacb:	lea    eax,[edx+eax*1-0x2b9c4730]
  41dad2:	ins    DWORD PTR es:[edi],dx
  41dad3:	inc    ebx
  41dad4:	(bad)  
  41dad6:	push   ecx
  41dad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dad8:	dec    edx
  41dad9:	sbb    ah,BYTE PTR [edi+0x387e0fa]
  41dadf:	inc    eax
  41dae0:	rcl    BYTE PTR [ebx-0x4fcb6df7],1
  41dae6:	mov    cl,0x29
  41dae8:	ret    0x33ea
  41daeb:	push   ebx
  41daec:	out    dx,eax
  41daed:	or     eax,0x7bf092f6
  41daf2:	inc    ebx
  41daf3:	dec    ecx
  41daf4:	xchg   ecx,eax
  41daf5:	cmp    bl,BYTE PTR [esi]
  41daf7:	sbb    eax,DWORD PTR [eax]
  41daf9:	jmp    DWORD PTR [ecx+0xe2061a4]
  41daff:	in     al,0x6b
  41db01:	sbb    DWORD PTR [ebp-0x1842849],eax
  41db07:	fnsave [ebx+0x3c6087d1]
  41db0d:	sti    
  41db0e:	pop    ds
  41db0f:	pop    ebx
  41db10:	cwde   
  41db11:	dec    edx
  41db12:	mov    ah,0xe4
  41db14:	iret   
  41db15:	enter  0xabaf,0xd2
  41db19:	es daa 
  41db1b:	jp     0x41db25
  41db1d:	pop    edi
  41db1e:	pop    eax
  41db1f:	dec    esp
  41db20:	arpl   WORD PTR [eax+ebp*2+0x79d6121a],bx
  41db27:	inc    ebx
  41db28:	scas   eax,DWORD PTR es:[edi]
  41db29:	stc    
  41db2a:	dec    edx
  41db2b:	pop    eax
  41db2c:	push   esi
  41db2d:	add    BYTE PTR [edi+0x1a3bfb4d],0x35
  41db34:	push   edi
  41db35:	shl    edi,cl
  41db37:	xor    dl,BYTE PTR [esi]
  41db39:	cmp    ah,BYTE PTR cs:[ecx+0x1c]
  41db3d:	mov    esi,0x8044287a
  41db42:	inc    edi
  41db43:	pushf  
  41db44:	xchg   edi,eax
  41db45:	pop    esi
  41db46:	stos   DWORD PTR es:[edi],eax
  41db47:	test   BYTE PTR [ebx],cl
  41db49:	xor    BYTE PTR [edx-0x16660f46],bl
  41db4f:	jbe    0x41db5f
  41db51:	xchg   edx,eax
  41db52:	inc    edi
  41db53:	xor    ch,BYTE PTR [edi-0x3f863931]
  41db59:	mov    dh,0x48
  41db5b:	cld    
  41db5c:	add    BYTE PTR [ebx-0x76],dh
  41db5f:	and    DWORD PTR [ebp+eax*2-0x20],edx
  41db63:	jg     0x41dbd7
  41db65:	pop    ss
  41db66:	cld    
  41db67:	lea    edx,[edi+0x62]
  41db6a:	(bad)  
  41db6c:	mov    al,0x2f
  41db6e:	jo     0x41db64
  41db70:	or     DWORD PTR [edx],esi
  41db72:	jns    0x41dbed
  41db74:	add    DWORD PTR [esi-0x452d6b6],edi
  41db7a:	cmp    al,0x54
  41db7c:	dec    edi
  41db7d:	jg     0x41dbad
  41db7f:	jae    0x41dbd5
  41db81:	imul   ebp,DWORD PTR [ebx+0x17b1929e],0x6e
  41db88:	add    DWORD PTR [ebx],esi
  41db8a:	rcr    DWORD PTR [esi+0x533d3c89],cl
  41db90:	adc    dl,BYTE PTR [edx]
  41db92:	test   BYTE PTR [edi+0x50],cl
  41db95:	mov    ecx,0x10af1475
  41db9a:	dec    eax
  41db9b:	in     al,0x5f
  41db9d:	sbb    eax,0xdaf48fa0
  41dba2:	in     al,dx
  41dba3:	pop    ecx
  41dba4:	lock or eax,0x2b75c8c4
  41dbaa:	mov    bh,0x5
  41dbac:	fcom   DWORD PTR [esi]
  41dbae:	fld    DWORD PTR [ecx]
  41dbb0:	scas   eax,DWORD PTR es:[edi]
  41dbb1:	jmp    0x46823bff
  41dbb6:	ja     0x41db7f
  41dbb8:	add    al,cl
  41dbba:	sub    BYTE PTR [ecx+0x8c0bdad],ah
  41dbc0:	sbb    BYTE PTR [ecx-0x38f12cd7],ch
  41dbc6:	(bad)
  41dbc9:	jbe    0x41dbd9
  41dbcb:	mov    esp,0xb90ac266
  41dbd0:	stos   DWORD PTR es:[edi],eax
  41dbd1:	test   al,0xd9
  41dbd3:	ret    0x1ee6
  41dbd6:	inc    eax
  41dbd7:	jne    0x41dbeb
  41dbd9:	in     ax,dx
  41dbdb:	lock sahf 
  41dbdd:	pop    ebx
  41dbde:	mov    dl,0xe9
  41dbe0:	daa    
  41dbe1:	add    eax,0xc1307fd3
  41dbe6:	push   cs
  41dbe7:	jmp    0x77802a31
  41dbec:	icebp  
  41dbed:	lods   eax,DWORD PTR ds:[esi]
  41dbee:	jno    0x41dc44
  41dbf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbf1:	lods   eax,DWORD PTR ds:[esi]
  41dbf2:	cmc    
  41dbf3:	sbb    BYTE PTR [eax-0x798bed5b],al
  41dbf9:	inc    ebp
  41dbfa:	push   esi
  41dbfb:	lahf   
  41dbfc:	dec    esi
  41dbfd:	pop    edi
  41dbfe:	and    edi,ecx
  41dc00:	neg    DWORD PTR [esi+esi*8]
  41dc03:	fidiv  WORD PTR [ebx-0x3992c2a1]
  41dc09:	stos   DWORD PTR es:[edi],eax
  41dc0a:	and    dl,bl
  41dc0c:	and    ecx,esi
  41dc0e:	adc    esp,esp
  41dc10:	jns    0x41dc43
  41dc12:	leave  
  41dc13:	add    esp,ebx
  41dc15:	pop    ds
  41dc16:	out    dx,eax
  41dc17:	add    edi,DWORD PTR [eax]
  41dc19:	or     edx,DWORD PTR ds:0x94f135a9
  41dc1f:	pop    edi
  41dc20:	into   
  41dc21:	or     BYTE PTR [ebp-0x33],bh
  41dc24:	or     dl,BYTE PTR [edx+0x2e]
  41dc27:	cmp    DWORD PTR [edi-0x5e7d1b67],eax
  41dc2d:	sbb    DWORD PTR [ebp+0x77],0x66db6392
  41dc34:	out    dx,eax
  41dc35:	sub    bl,BYTE PTR [ebx+0x17c21116]
  41dc3b:	je     0x41dc85
  41dc3d:	cmp    al,0x5f
  41dc3f:	out    0x6b,eax
  41dc41:	dec    esp
  41dc42:	cmp    DWORD PTR [ebp+eax*2-0x1b],eax
  41dc46:	outs   dx,BYTE PTR ds:[esi]
  41dc47:	mov    ch,0x1e
  41dc49:	test   DWORD PTR [esi+0x5d3fa68c],ebx
  41dc4f:	stos   DWORD PTR es:[edi],eax
  41dc50:	or     ebx,esp
  41dc52:	or     eax,0xc143dd4c
  41dc57:	aad    0xa8
  41dc59:	nop
  41dc5a:	popa   
  41dc5b:	dec    ecx
  41dc5c:	and    DWORD PTR [edx],esp
  41dc5e:	daa    
  41dc5f:	cmp    al,0xa8
  41dc61:	aas    
  41dc62:	add    dl,BYTE PTR ds:0x2bb455ec
  41dc68:	jae    0x41dc10
  41dc6a:	pushf  
  41dc6b:	test   BYTE PTR [eax-0x64],cl
  41dc6e:	outs   dx,DWORD PTR ds:[esi]
  41dc6f:	xchg   DWORD PTR [ebp+0x4bdb5321],ebx
  41dc75:	mov    al,0xe6
  41dc77:	outs   dx,DWORD PTR ds:[esi]
  41dc78:	xchg   BYTE PTR [esi-0x46],bl
  41dc7b:	daa    
  41dc7c:	ds cmp BYTE PTR ss:[eax+0x38],bh
  41dc81:	int3   
  41dc82:	mov    al,ds:0x867257c6
  41dc87:	add    eax,0xc776dbd2
  41dc8c:	pusha  
  41dc8d:	leave  
  41dc8e:	mov    esi,0xd1938609
  41dc93:	jno    0x41dcb6
  41dc95:	std    
  41dc96:	test   BYTE PTR [eax],bh
  41dc98:	idiv   BYTE PTR [ecx+edi*4+0x6ce2c4fc]
  41dc9f:	retf   0xa869
  41dca2:	add    BYTE PTR [edi-0x77048229],bl
  41dca8:	fisttp DWORD PTR [ebp+0x1016d745]
  41dcae:	adc    al,0xe9
  41dcb0:	xor    al,0xf0
  41dcb2:	push   es
  41dcb3:	jl     0x41dc66
  41dcb5:	into   
  41dcb6:	cmp    eax,0xa2a155f9
  41dcbb:	in     eax,0x8a
  41dcbd:	bound  ecx,QWORD PTR [eax]
  41dcbf:	pop    edi
  41dcc0:	pop    ecx
  41dcc1:	mov    esp,DWORD PTR [ecx+0x492b4e1f]
  41dcc7:	xor    edx,edx
  41dcc9:	pop    esp
  41dcca:	outs   dx,BYTE PTR ds:[esi]
  41dccb:	sar    BYTE PTR [edx],1
  41dccd:	mov    esi,0x50558462
  41dcd2:	mov    bh,0x5c
  41dcd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcd5:	dec    ebp
  41dcd6:	in     al,dx
  41dcd7:	dec    esp
  41dcd8:	adc    ah,cl
  41dcda:	in     al,0x7b
  41dcdc:	aas    
  41dcdd:	or     bh,BYTE PTR [bp+si+0x54]
  41dce1:	daa    
  41dce2:	cmp    BYTE PTR [ecx],cl
  41dce4:	mov    dl,0xca
  41dce6:	lahf   
  41dce7:	les    ebp,FWORD PTR [edi+0x2f09311e]
  41dced:	jo     0x41dc77
  41dcef:	dec    ecx
  41dcf0:	pop    edx
  41dcf1:	mov    ch,0x7d
  41dcf3:	aas    
  41dcf4:	aas    
  41dcf5:	or     al,0xe1
  41dcf7:	jae    0x41dd58
  41dcf9:	xchg   ebp,eax
  41dcfa:	push   ss
  41dcfb:	or     al,0x48
  41dcfd:	fadd   QWORD PTR [edx-0x1f]
  41dd00:	in     al,dx
  41dd01:	inc    ebp
  41dd02:	jne    0x41dcf0
  41dd04:	enter  0x246c,0x9b
  41dd08:	mov    dh,0x18
  41dd0a:	mov    eax,0x1fff657e
  41dd0f:	fcmovne st,st(6)
  41dd11:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd13:	mov    esi,0xe42622cc
  41dd18:	(bad)  
  41dd1a:	and    ch,BYTE PTR [ebx]
  41dd1c:	ficomp WORD PTR [eax]
  41dd1e:	sub    ecx,DWORD PTR [edi]
  41dd20:	inc    edi
  41dd21:	or     eax,0xe5da0783
  41dd26:	fldenv [ebx+0x72]
  41dd29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd2a:	add    al,0xe0
  41dd2c:	xor    ebx,DWORD PTR [edi-0x3]
  41dd2f:	dec    esi
  41dd30:	fnstcw WORD PTR [edx-0x1f]
  41dd33:	cmp    BYTE PTR [esi+0x4d],bh
  41dd36:	push   0x74
  41dd38:	push   cs
  41dd39:	stc    
  41dd3a:	test   ch,dl
  41dd3c:	push   ebp
  41dd3d:	dec    esi
  41dd3e:	clc    
  41dd3f:	mov    dl,cl
  41dd41:	dec    ebx
  41dd42:	les    ebp,FWORD PTR [esi]
  41dd44:	pop    esi
  41dd45:	dec    edi
  41dd46:	mov    ds:0xedc93d3b,al
  41dd4b:	mov    esp,0xa20fcb74
  41dd50:	push   ds
  41dd51:	sbb    al,0x15
  41dd53:	dec    esi
  41dd54:	imul   DWORD PTR [ecx+0x3e]
  41dd57:	out    0x23,al
  41dd59:	into   
  41dd5a:	rol    BYTE PTR [eax*1-0x1750a857],cl
  41dd61:	jnp    0x41dd48
  41dd63:	addr16 pop esi
  41dd65:	(bad)  
  41dd66:	repz clc 
  41dd68:	adc    al,0x42
  41dd6a:	cmp    eax,0x6bf0f5fc
  41dd6f:	scas   eax,DWORD PTR es:[edi]
  41dd70:	or     eax,0x585ad2d9
  41dd75:	pop    ss
  41dd76:	cmp    eax,0xcb237453
  41dd7b:	loop   0x41dd0d
  41dd7d:	fwait
  41dd7e:	sub    BYTE PTR [edx-0xd],ah
  41dd81:	test   BYTE PTR [edi],al
  41dd83:	cmp    edx,esp
  41dd85:	push   eax
  41dd86:	aam    0x9d
  41dd88:	jl     0x41ddfd
  41dd8a:	pop    ebx
  41dd8b:	jb     0x41dda5
  41dd8d:	inc    ebx
  41dd8e:	xchg   ebp,eax
  41dd8f:	cld    
  41dd90:	in     al,0xc4
  41dd92:	rol    dl,1
  41dd94:	xchg   edx,eax
  41dd95:	int    0xf
  41dd97:	dec    edx
  41dd98:	push   edi
  41dd99:	aad    0x48
  41dd9b:	xor    dl,BYTE PTR [eax]
  41dd9d:	sti    
  41dd9e:	push   ecx
  41dd9f:	jns    0x41dd4a
  41dda1:	pop    edi
  41dda2:	jle    0x41dd50
  41dda4:	inc    ebx
  41dda5:	in     eax,dx
  41dda6:	cmp    al,0x83
  41dda8:	ins    DWORD PTR es:[edi],dx
  41dda9:	js     0x41dd76
  41ddab:	push   0x0
  41ddad:	pusha  
  41ddae:	call   0xa61b183d
  41ddb3:	out    0xda,al
  41ddb5:	bswap  edi
  41ddb7:	mov    dh,0xae
  41ddb9:	ret    
  41ddba:	inc    ebx
  41ddbb:	inc    eax
  41ddbc:	ins    BYTE PTR es:[edi],dx
  41ddbd:	add    BYTE PTR [ebp-0xc],bl
  41ddc0:	(bad)  
  41ddc1:	inc    edi
  41ddc2:	jne    0x41dd98
  41ddc4:	scas   eax,DWORD PTR es:[edi]
  41ddc5:	lock sahf 
  41ddc7:	sar    DWORD PTR [ebx+0x3],cl
  41ddca:	mov    esp,0x5522151d
  41ddcf:	jp     0x41de08
  41ddd1:	or     eax,0x956aa740
  41ddd6:	dec    ebx
  41ddd7:	popa   
  41ddd8:	mov    esp,DWORD PTR [ebp+edx*4+0x1c]
  41dddc:	jb     0x41ddbf
  41ddde:	retf   0x985d
  41dde1:	adc    bh,dh
  41dde3:	sbb    BYTE PTR [edi],dh
  41dde5:	gs inc esi
  41dde7:	xchg   edx,eax
  41dde8:	cmp    al,0x63
  41ddea:	hlt    
  41ddeb:	mov    eax,ds:0x77e9c837
  41ddf0:	mov    ds:0xd0ccd412,eax
  41ddf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddf6:	gs dec esi
  41ddf8:	xor    ebp,DWORD PTR [esi]
  41ddfa:	ja     0x41de0d
  41ddfc:	div    DWORD PTR [ecx+0x2e]
  41ddff:	xchg   edx,eax
  41de00:	test   eax,0x5e6460
  41de05:	into   
  41de06:	cld    
  41de07:	pop    esi
  41de08:	fs out 0x5c,al
  41de0b:	and    ecx,ebp
  41de0d:	xor    BYTE PTR ds:0x61f1ab3a,0xcc
  41de14:	aas    
  41de15:	xchg   edx,eax
  41de16:	aaa    
  41de17:	test   BYTE PTR ds:0x2d2a8fcd,0xe0
  41de1e:	lea    esp,[eax-0x8]
  41de21:	mov    esp,0xdcfeffd1
  41de26:	dec    ecx
  41de27:	(bad)  
  41de29:	sbb    DWORD PTR [edx],ebp
  41de2b:	adc    al,BYTE PTR [ecx-0x5e]
  41de2e:	push   ss
  41de2f:	xchg   ebx,eax
  41de30:	inc    edi
  41de31:	jle    0x41de56
  41de33:	adc    al,0xf8
  41de35:	adc    eax,0x292e8253
  41de3a:	push   edx
  41de3b:	fstp   DWORD PTR [edx+ecx*8-0x1cdd3b31]
  41de42:	sub    ah,bl
  41de44:	in     eax,0x1b
  41de46:	or     DWORD PTR [ebx-0x6b59d515],eax
  41de4c:	loop   0x41de73
  41de4e:	inc    ebx
  41de4f:	pop    ss
  41de50:	scas   eax,DWORD PTR es:[edi]
  41de51:	jbe    0x41de51
  41de53:	ror    dh,cl
  41de55:	pop    ebx
  41de56:	push   ebx
  41de57:	sub    dh,BYTE PTR [ebx+0x78128a7e]
  41de5d:	lahf   
  41de5e:	sub    al,0x8c
  41de60:	je     0x41de63
  41de62:	ss push esp
  41de64:	mov    edi,0x93517a64
  41de69:	jno    0x41dea7
  41de6b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41de6d:	ins    DWORD PTR es:[edi],dx
  41de6e:	lahf   
  41de6f:	mov    dh,0x0
  41de71:	enter  0x7c7d,0x18
  41de75:	bound  ebp,QWORD PTR [eax-0x16]
  41de78:	dec    ebp
  41de79:	fstp   TBYTE PTR [ebx]
  41de7b:	or     DWORD PTR [edi+0x47131def],0x65
  41de82:	out    0xf2,al
  41de84:	mov    bl,0x47
  41de86:	les    edi,FWORD PTR ds:0xea67af81
  41de8c:	dec    ebp
  41de8d:	cmp    ch,BYTE PTR [ecx-0x630df370]
  41de93:	sti    
  41de94:	dec    esi
  41de95:	push   edi
  41de96:	ins    BYTE PTR es:[edi],dx
  41de97:	sub    al,0x22
  41de99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de9a:	push   0x79
  41de9c:	inc    ebp
  41de9d:	jmp    0xcd124a85
  41dea2:	outs   dx,DWORD PTR ds:[esi]
  41dea3:	or     BYTE PTR [ebp-0x4],ah
  41dea6:	add    DWORD PTR [eax-0x5c78a826],edi
  41deac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dead:	pop    eax
  41deae:	out    dx,eax
  41deaf:	dec    edx
  41deb0:	dec    esp
  41deb1:	cmc    
  41deb2:	test   al,0xbf
  41deb4:	dec    esp
  41deb5:	jae    0x41dec1
  41deb7:	adc    BYTE PTR ds:0x4709547d,al
  41debd:	loop   0x41df07
  41debf:	jnp    0x41dee6
  41dec1:	loopne 0x41decb
  41dec3:	jle    0x41decb
  41dec5:	jle    0x41deea
  41dec7:	jno    0x41df05
  41dec9:	inc    esi
  41deca:	mov    al,ds:0xf62bfbed
  41decf:	not    BYTE PTR [ecx-0x4a]
  41ded2:	cdq    
  41ded3:	es jl  0x41df02
  41ded6:	xor    al,0x88
  41ded8:	push   0x5749655
  41dedd:	por    mm1,QWORD PTR [eax+0x60]
  41dee1:	xor    al,0x7a
  41dee3:	fmul   st,st(4)
  41dee5:	cdq    
  41dee6:	ss jge 0x41df23
  41dee9:	adc    DWORD PTR [eax-0x3256ad10],edx
  41deef:	popf   
  41def0:	or     edx,edx
  41def2:	adc    ebx,DWORD PTR ds:0xc1a7
  41def7:	push   ds
  41def8:	xchg   ebx,eax
  41def9:	sbb    DWORD PTR [edi],edi
  41defb:	cmc    
  41defc:	push   edi
  41defd:	int    0x36
  41deff:	dec    esp
  41df00:	push   esp
  41df01:	jnp    0x41df27
  41df03:	dec    ecx
  41df04:	hlt    
  41df05:	push   esp
  41df06:	outs   dx,BYTE PTR ds:[esi]
  41df07:	sbb    dh,BYTE PTR [esi+0x71]
  41df0a:	cmp    DWORD PTR [eax+ebx*1+0x46acb3e],esp
  41df11:	imul   ebp,DWORD PTR [ebx],0x3d77f39d
  41df17:	mov    BYTE PTR [edx-0x1d],bh
  41df1a:	(bad)  
  41df1b:	jecxz  0x41deb1
  41df1d:	mov    edx,ecx
  41df1f:	jb     0x41df7c
  41df21:	pop    ecx
  41df22:	push   cs
  41df23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df24:	dec    esi
  41df25:	inc    ebx
  41df26:	add    edi,DWORD PTR [edx+ecx*1+0x50b4f6a2]
  41df2d:	sub    al,0x3b
  41df2f:	xchg   esi,eax
  41df30:	daa    
  41df31:	es mov bl,0x22
  41df34:	xor    BYTE PTR [ebp+0x4e13ff6e],bh
  41df3a:	add    DWORD PTR [ebx-0x5fc6edd],edx
  41df40:	test   al,0x6e
  41df42:	jns    0x41df53
  41df44:	cmp    al,0x9b
  41df46:	loope  0x41df5e
  41df48:	(bad)  
  41df49:	mov    WORD PTR [edi],gs
  41df4b:	dec    edx
  41df4c:	mov    bl,BYTE PTR [edx]
  41df4e:	bound  esi,QWORD PTR [ebx+0x127ce840]
  41df54:	lock ret 0x5734
  41df58:	pop    ebx
  41df59:	loop   0x41df6f
  41df5b:	jge    0x41dfbb
  41df5d:	ret    0x229b
  41df60:	mov    al,0x6d
  41df62:	imul   ebx,DWORD PTR [edi+edi*4],0xa94ddd8c
  41df69:	imul   ebp,DWORD PTR [ebx],0xaa00496c
  41df6f:	pop    ebx
  41df70:	jae    0x41dfad
  41df72:	fmul   QWORD PTR [eax+0x14]
  41df75:	out    0x7c,eax
  41df77:	xchg   ecx,ebx
  41df79:	fist   WORD PTR [esi-0x3]
  41df7c:	icebp  
  41df7d:	shl    BYTE PTR [edx],1
  41df7f:	jbe    0x41df61
  41df81:	es inc esi
  41df83:	inc    edx
  41df84:	or     esp,DWORD PTR [eax+0x6c17c741]
  41df8a:	out    dx,eax
  41df8b:	das    
  41df8c:	(bad)  
  41df8d:	mov    bh,0x20
  41df8f:	mov    esi,0xf3ce838e
  41df94:	jb     0x41df17
  41df96:	sbb    BYTE PTR [ebx],bh
  41df98:	rcl    DWORD PTR fs:[edx-0x4c86cdf3],cl
  41df9f:	jne    0x41df5f
  41dfa1:	das    
  41dfa2:	dec    esp
  41dfa3:	loope  0x41e017
  41dfa5:	cmovbe ebx,DWORD PTR ds:0xd8c31177
  41dfac:	lds    esp,FWORD PTR [edx+edx*2]
  41dfaf:	arpl   WORD PTR [ebx-0x7d],di
  41dfb2:	push   ebx
  41dfb3:	pusha  
  41dfb4:	(bad)  
  41dfb5:	jp     0x41dfa6
  41dfb7:	jge    0x41dfcb
  41dfb9:	add    DWORD PTR [eax],edi
  41dfbb:	pusha  
  41dfbc:	popf   
  41dfbd:	in     al,dx
  41dfbe:	mov    ch,0x9e
  41dfc0:	(bad)  [eax-0x439bd95b]
  41dfc6:	int    0xd9
  41dfc8:	ret    0x293c
  41dfcb:	mov    al,ds:0x23f796bb
  41dfd0:	int    0x28
  41dfd2:	adc    al,0x42
  41dfd4:	inc    ecx
  41dfd5:	xor    DWORD PTR [edx+0x1c2f60c0],ebx
  41dfdb:	jecxz  0x41dfee
  41dfdd:	or     edx,DWORD PTR [ebx]
  41dfdf:	xor    eax,0x2e27ee26
  41dfe4:	imul   edx,DWORD PTR [ebx-0x731c6ddb],0x59b7f3c8
  41dfee:	xor    al,0x70
  41dff0:	push   cs
  41dff1:	mov    eax,ds:0xc95ab943
  41dff6:	push   0x50
  41dff8:	mov    edi,0x3815299
  41dffd:	jnp    0x41e048
  41dfff:	adc    BYTE PTR [eax+ebp*4-0x71c5797e],ch
  41e006:	das    
  41e007:	jge    0x41df8f
  41e009:	pop    ecx
  41e00a:	adc    BYTE PTR [esi+0x19],ah
  41e00d:	lods   eax,DWORD PTR ds:[esi]
  41e00e:	dec    edx
  41e00f:	xor    eax,0xdcc4bf8f
  41e014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e015:	jo     0x41e07f
  41e017:	aad    0x9f
  41e019:	ret    
  41e01a:	enter  0xbeed,0xde
  41e01e:	test   eax,0x1e31e7b8
  41e023:	fstp   DWORD PTR ds:0x982b80ef
  41e029:	mov    al,ds:0xd37c6f95
  41e02e:	iret   
  41e02f:	data16 cs test al,0x44
  41e033:	jecxz  0x41e005
  41e035:	push   es
  41e036:	not    DWORD PTR [esi-0x4941a297]
  41e03c:	inc    ebp
  41e03d:	sub    DWORD PTR [eax+0x4e43a2bd],edx
  41e043:	clc    
  41e044:	scas   eax,DWORD PTR es:[edi]
  41e045:	dec    esi
  41e046:	jmp    0x6f1a:0x9dcd2443
  41e04d:	sub    al,0x34
  41e04f:	jns    0x41e030
  41e051:	pop    ebp
  41e052:	fdiv   QWORD PTR ds:0x6c442dda
  41e058:	ror    edx,1
  41e05a:	sub    DWORD PTR [ecx-0x53],edx
  41e05d:	out    dx,al
  41e05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e05f:	xor    bh,BYTE PTR [esi+0x56c2828b]
  41e065:	jnp    0x41e0a9
  41e067:	mov    edx,0xb5d1df2c
  41e06c:	aam    0xbd
  41e06e:	outs   dx,DWORD PTR ds:[esi]
  41e06f:	add    al,0xdd
  41e071:	and    al,0x2e
  41e073:	push   es
  41e074:	inc    ecx
  41e075:	pop    ds
  41e076:	cwde   
  41e077:	cwde   
  41e078:	or     DWORD PTR [ecx-0x33acc7b6],0xd1981aa8
  41e082:	stos   BYTE PTR es:[edi],al
  41e083:	cmp    esi,ebx
  41e085:	push   esi
  41e086:	add    bl,BYTE PTR [esi]
  41e088:	out    dx,eax
  41e089:	bound  ebp,QWORD PTR [ecx+0x30]
  41e08c:	retf   
  41e08d:	inc    edi
  41e08e:	sbb    eax,0x7a3a916d
  41e093:	pop    eax
  41e094:	pop    edi
  41e095:	cmp    ah,ah
  41e097:	out    0xc6,al
  41e099:	or     DWORD PTR [ebp-0x6c6e7bcf],ebp
  41e09f:	sub    al,0xf3
  41e0a1:	ret    
  41e0a2:	dec    esi
  41e0a3:	push   ebp
  41e0a4:	cdq    
  41e0a5:	pop    esi
  41e0a6:	ret    
  41e0a7:	cmp    eax,0x2fee85da
  41e0ac:	push   edi
  41e0ad:	and    BYTE PTR [eax],0x6e
  41e0b0:	inc    ah
  41e0b2:	pop    esi
  41e0b3:	lods   eax,DWORD PTR ds:[esi]
  41e0b4:	pop    ds
  41e0b5:	mov    al,0x94
  41e0b7:	xor    DWORD PTR [eax+0x65816cb8],edx
  41e0bd:	mov    ebp,0x16291862
  41e0c2:	ins    BYTE PTR es:[edi],dx
  41e0c3:	jnp    0x41e0e4
  41e0c5:	or     DWORD PTR [edx],0xffffffab
  41e0c8:	mov    BYTE PTR [ecx-0x2d],dh
  41e0cb:	std    
  41e0cc:	jmp    0xfa52409b
  41e0d1:	cld    
  41e0d2:	dec    ebp
  41e0d3:	and    dl,bh
  41e0d5:	popf   
  41e0d6:	dec    ebp
  41e0d7:	outs   dx,DWORD PTR ds:[esi]
  41e0d8:	aas    
  41e0d9:	(bad)  
  41e0da:	jmp    0x303ee14a
  41e0df:	fnstsw WORD PTR [ecx+edx*1]
  41e0e2:	imul   ebp,DWORD PTR [edi+0x33],0xffffffde
  41e0e6:	inc    esi
  41e0e7:	leave  
  41e0e8:	adc    al,0x75
  41e0ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0eb:	adc    eax,0x618008a3
  41e0f0:	jle    0x41e07a
  41e0f2:	sbb    ah,BYTE PTR [edx-0x326017d7]
  41e0f8:	dec    esi
  41e0f9:	ins    DWORD PTR es:[edi],dx
  41e0fa:	aam    0xd6
  41e0fc:	mov    ds:0xcf522214,al
  41e101:	adc    al,0x5d
  41e103:	cmovno eax,DWORD PTR [ecx+ebx*1]
  41e107:	shl    BYTE PTR [ebx],1
  41e109:	dec    edx
  41e10a:	pop    ebp
  41e10b:	dec    ecx
  41e10c:	mov    BYTE PTR ds:0xb86915de,dh
  41e112:	rol    BYTE PTR [edx-0x3550c03],1
  41e118:	fiadd  WORD PTR [esi]
  41e11a:	xchg   edx,eax
  41e11b:	jmp    0x41e123
  41e11d:	and    ch,cl
  41e11f:	iret   
  41e120:	pusha  
  41e121:	adc    al,0xf0
  41e123:	jecxz  0x41e174
  41e125:	lods   al,BYTE PTR ds:[esi]
  41e126:	fs scas al,BYTE PTR es:[edi]
  41e128:	in     eax,dx
  41e129:	mov    dl,BYTE PTR [ecx+0x79aa5332]
  41e12f:	popf   
  41e130:	popf   
  41e131:	inc    ecx
  41e132:	into   
  41e133:	repz mov WORD PTR ds:0x6017efbf,ds
  41e13a:	test   al,0x1
  41e13c:	pushf  
  41e13d:	hlt    
  41e13e:	test   BYTE PTR [edi],bl
  41e140:	xchg   ah,al
  41e142:	sbb    BYTE PTR [ebx-0x7a0e1df6],dl
  41e148:	inc    esp
  41e149:	and    ecx,esi
  41e14b:	test   al,0x50
  41e14d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e14e:	mov    dh,0x6e
  41e150:	fidiv  WORD PTR [edx]
  41e152:	xor    eax,0xa51ee7d1
  41e157:	lods   al,BYTE PTR ds:[esi]
  41e158:	push   ss
  41e159:	and    ebp,ebx
  41e15b:	jae    0x41e196
  41e15d:	pop    esi
  41e15e:	xchg   DWORD PTR [esp+ebx*8-0x4],eax
  41e162:	test   BYTE PTR [esi],ch
  41e164:	xchg   edi,eax
  41e165:	cwde   
  41e166:	xchg   edi,eax
  41e167:	ds icebp 
  41e169:	mov    BYTE PTR [ebp+esi*8+0x7a1f52ee],dh
  41e170:	mov    esp,DWORD PTR [eax]
  41e172:	jmp    0xf4a9:0x346c8b90
  41e179:	les    edx,FWORD PTR [esi]
  41e17b:	pop    edi
  41e17c:	fdiv   DWORD PTR [eax+0x8fec626]
  41e182:	iret   
  41e183:	inc    ecx
  41e184:	or     dh,BYTE PTR [esi]
  41e186:	dec    BYTE PTR [edi]
  41e188:	push   0x49
  41e18a:	call   FWORD PTR [edi+0x52df8580]
  41e190:	adc    ch,BYTE PTR [edi-0x6e]
  41e193:	xchg   edi,eax
  41e194:	into   
  41e195:	aas    
  41e196:	hlt    
  41e197:	or     cl,BYTE PTR [ecx]
  41e199:	mov    al,0x59
  41e19b:	jg     0x41e1e4
  41e19d:	jb     0x41e18d
  41e19f:	in     al,dx
  41e1a0:	or     ebx,DWORD PTR [ecx-0x6d]
  41e1a3:	inc    edi
  41e1a4:	shr    edi,1
  41e1a6:	mov    esp,0xfb4c4448
  41e1ab:	push   cs
  41e1ac:	int    0x81
  41e1ae:	mov    eax,0x5455a49d
  41e1b3:	test   eax,0xdfdf5933
  41e1b8:	mov    ds:0x52c399d1,al
  41e1bd:	sub    esi,esi
  41e1bf:	dec    ebx
  41e1c0:	retf   0xd407
  41e1c3:	mov    WORD PTR [edi-0x60e1a1c],ds
  41e1c9:	adc    al,0xd8
  41e1cb:	and    ecx,DWORD PTR [edi+ebp*4]
  41e1ce:	xchg   ecx,edx
  41e1d0:	xlat   BYTE PTR ds:[ebx]
  41e1d1:	mov    bl,0x31
  41e1d3:	pop    ebx
  41e1d4:	mov    cl,0x18
  41e1d6:	mov    ds:0x1972238d,al
  41e1db:	in     eax,0xb9
  41e1dd:	push   ecx
  41e1de:	bound  edi,QWORD PTR [edx-0x5c86b896]
  41e1e4:	inc    ebx
  41e1e5:	test   al,0xf5
  41e1e7:	bound  eax,QWORD PTR [ebx-0x75]
  41e1ea:	in     eax,dx
  41e1eb:	je     0x41e246
  41e1ed:	mov    bl,0xf5
  41e1ef:	xor    DWORD PTR [edx-0x39ce354f],0x7c3bd75d
  41e1f9:	xlat   BYTE PTR ds:[ebx]
  41e1fa:	push   ebp
  41e1fb:	loop   0x41e23c
  41e1fd:	pop    ebp
  41e1fe:	inc    ebx
  41e1ff:	mov    BYTE PTR [edi],cl
  41e201:	clc    
  41e202:	mov    edi,0x1e904fc5
  41e207:	inc    esp
  41e208:	pop    ss
  41e209:	test   BYTE PTR [ebx-0x80],ah
  41e20c:	or     eax,0x8b1d3a16
  41e211:	stc    
  41e212:	mov    al,ds:0x9571db4b
  41e217:	add    eax,0x846aa0f5
  41e21c:	test   BYTE PTR [ebx],bl
  41e21e:	lahf   
  41e21f:	jbe    0x41e1fd
  41e221:	inc    ebp
  41e222:	mov    ss,WORD PTR [ebx-0x34]
  41e225:	stos   BYTE PTR es:[edi],al
  41e226:	add    DWORD PTR [ebx+0x75e1eaf9],edx
  41e22c:	rol    DWORD PTR [ecx+0x43],cl
  41e22f:	mov    ?,edi
  41e231:	pop    ss
  41e232:	push   ebp
  41e233:	push   cs
  41e234:	jle    0x41e221
  41e236:	pop    es
  41e237:	sbb    eax,0x5a8b0d89
  41e23c:	daa    
  41e23d:	lds    ecx,FWORD PTR [edx]
  41e23f:	inc    ebx
  41e240:	push   ebx
  41e241:	adc    DWORD PTR [ebx-0x1bb76b7f],edx
  41e247:	add    ah,al
  41e249:	jo     0x41e247
  41e24b:	xor    BYTE PTR ds:0x60c2a320,dh
  41e251:	adc    BYTE PTR fs:[esp+ebx*1],al
  41e255:	lea    ecx,[edx]
  41e257:	push   0x73
  41e259:	push   es
  41e25a:	leave  
  41e25b:	scas   al,BYTE PTR es:[edi]
  41e25c:	neg    DWORD PTR [edi-0x4a]
  41e25f:	cdq    
  41e260:	and    al,0xe8
  41e262:	dec    ebp
  41e263:	push   edx
  41e264:	scas   eax,DWORD PTR es:[edi]
  41e265:	lahf   
  41e266:	imul   ebp,DWORD PTR [esi+0x5e],0xffffffab
  41e26a:	not    BYTE PTR [edi-0x20046152]
  41e270:	pop    DWORD PTR [esi-0x160b7f87]
  41e276:	mov    dh,0xb
  41e278:	mov    bl,BYTE PTR [ebx-0x4d]
  41e27b:	mov    WORD PTR [eax-0x3bc45cf3],?
  41e281:	cmp    eax,0x4336bcae
  41e286:	sbb    ebx,edx
  41e288:	cmp    dh,bh
  41e28a:	push   ebx
  41e28b:	in     eax,0xe7
  41e28d:	or     al,0xec
  41e28f:	add    BYTE PTR [eax-0x21e7440],0x26
  41e296:	mov    ds:0x396f884d,eax
  41e29b:	sub    eax,0x11db2f18
  41e2a0:	mov    dh,0x7b
  41e2a2:	adc    edi,DWORD PTR [edi+ebx*8]
  41e2a5:	pop    edx
  41e2a6:	jne    0x41e246
  41e2a8:	mov    ?,edi
  41e2aa:	push   esi
  41e2ab:	arpl   WORD PTR [ebx],bp
  41e2ad:	sub    DWORD PTR cs:[edi+0x35],edx
  41e2b1:	shl    dl,1
  41e2b3:	fild   WORD PTR [esi+0x14]
  41e2b6:	inc    ecx
  41e2b7:	xchg   ebp,eax
  41e2b8:	das    
  41e2b9:	push   ecx
  41e2ba:	imul   eax,DWORD PTR [esp+eax*2-0x4ae23fff],0x3cb67b3e
  41e2c5:	jno    0x41e309
  41e2c7:	scas   al,BYTE PTR es:[edi]
  41e2c8:	sub    al,0x3
  41e2ca:	push   esp
  41e2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2cc:	sbb    eax,0xb537ee7f
  41e2d1:	hlt    
  41e2d2:	xchg   edi,eax
  41e2d3:	sti    
  41e2d4:	adc    ebp,ebp
  41e2d6:	push   0x73df563b
  41e2db:	out    0x5b,al
  41e2dd:	sub    al,0xc7
  41e2df:	out    dx,al
  41e2e0:	stos   BYTE PTR es:[edi],al
  41e2e1:	pop    edi
  41e2e2:	pushf  
  41e2e3:	dec    edx
  41e2e4:	mov    cl,0x75
  41e2e6:	adc    edi,DWORD PTR [esi+0x1c9f415f]
  41e2ec:	mov    al,ds:0xd6d6ed5c
  41e2f1:	sti    
  41e2f2:	push   esi
  41e2f3:	fxch   st(5)
  41e2f5:	ins    BYTE PTR es:[edi],dx
  41e2f6:	or     BYTE PTR [edi-0x74],cl
  41e2f9:	dec    edi
  41e2fa:	ja     0x41e2f9
  41e2fc:	fisttp WORD PTR [ecx-0x7e]
  41e2ff:	sub    bl,BYTE PTR [edi]
  41e301:	xchg   eax,esp
  41e303:	pop    edx
  41e304:	push   edi
  41e305:	adc    eax,0xc2627d60
  41e30a:	popa   
  41e30b:	and    DWORD PTR [eax+0xe],esi
  41e30e:	inc    esp
  41e30f:	std    
  41e310:	ins    BYTE PTR es:[edi],dx
  41e311:	sbb    esi,DWORD PTR [ebp+0x2d]
  41e314:	mov    eax,0x344c7c74
  41e319:	mov    ds,WORD PTR [ebx+eiz*8+0x485a6637]
  41e320:	inc    ecx
  41e321:	push   ds
  41e322:	dec    ecx
  41e323:	lods   al,BYTE PTR fs:[esi]
  41e325:	push   cs
  41e326:	aas    
  41e327:	aaa    
  41e328:	adc    al,0x5b
  41e32a:	mov    ebx,DWORD PTR [eax+0xe77d95c]
  41e330:	mov    BYTE PTR [edx-0x34],bh
  41e333:	xor    BYTE PTR [esi],bh
  41e335:	jno    0x41e2d8
  41e337:	scas   al,BYTE PTR es:[edi]
  41e338:	call   0x8787:0x4b69e93b
  41e33f:	ret    0xcc72
  41e342:	cmp    DWORD PTR [ecx-0x201147b7],edx
  41e348:	mul    esi
  41e34a:	(bad)  
  41e34b:	shr    DWORD PTR [edi+ebp*1+0x4f],0x68
  41e350:	lock cmp eax,0x2fd3e9b5
  41e356:	jp     0x41e321
  41e358:	aad    0x52
  41e35a:	fwait
  41e35b:	adc    bh,ch
  41e35d:	(bad)  
  41e35e:	fisttp QWORD PTR [esi+eiz*1+0x5b2edabd]
  41e365:	mov    ds:0xa73b9111,eax
  41e36a:	adc    ah,0xe9
  41e36d:	aad    0x1
  41e36f:	into   
  41e370:	pop    ebx
  41e371:	fisubr DWORD PTR [edx]
  41e373:	imul   ebp,DWORD PTR ds:0xd30be460,0xffffffcd
  41e37a:	dec    edx
  41e37b:	inc    eax
  41e37c:	imul   edx,DWORD PTR [ecx-0x38475295],0xecac5f2e
  41e386:	sar    BYTE PTR [ebx],0xbd
  41e389:	dec    edx
  41e38a:	cld    
  41e38b:	jae    0x41e3cf
  41e38d:	xor    al,0x36
  41e38f:	retf   
  41e390:	mov    eax,ds:0x35f20824
  41e395:	jno    0x41e3e2
  41e397:	dec    edx
  41e398:	push   0x5b87ce63
  41e39d:	hlt    
  41e39e:	push   esi
  41e39f:	mov    eax,ds:0x6f87217c
  41e3a4:	call   0x842fd2d0
  41e3a9:	mov    WORD PTR [ebx+esi*4],ss
  41e3ac:	mov    ch,0xbc
  41e3ae:	push   ds
  41e3af:	dec    eax
  41e3b0:	sar    BYTE PTR [eax+eax*1+0x72],1
  41e3b4:	cli    
  41e3b5:	fcomi  st,st(7)
  41e3b8:	cmp    eax,eax
  41e3ba:	fnstsw WORD PTR [eax+0x28bf4358]
  41e3c0:	bound  esp,QWORD PTR [esi-0x51b8b6c9]
  41e3c6:	nop
  41e3c7:	ret    0x1674
  41e3ca:	xchg   DWORD PTR [edi-0x54a7a313],edx
  41e3d0:	enter  0xd48d,0x8e
  41e3d4:	mov    dl,0xad
  41e3d6:	xor    DWORD PTR [ebx],esi
  41e3d8:	cdq    
  41e3d9:	adc    BYTE PTR ds:0x79f369bf,dl
  41e3df:	pop    ecx
  41e3e0:	jmp    0x41e378
  41e3e2:	mov    ?,WORD PTR [edx+0x7e07eb05]
  41e3e8:	xor    edx,eax
  41e3ea:	sbb    al,0x38
  41e3ec:	das    
  41e3ed:	scas   eax,DWORD PTR es:[edi]
  41e3ee:	stc    
  41e3ef:	mov    esp,0x58d4190c
  41e3f4:	push   ebp
  41e3f5:	push   es
  41e3f6:	repnz inc edx
  41e3f8:	mov    ds:0x4a27d598,eax
  41e3fd:	jno    0x41e449
  41e3ff:	pop    edx
  41e400:	jl     0x41e425
  41e402:	xor    BYTE PTR [esi],dl
  41e404:	push   eax
  41e405:	fist   WORD PTR [edi+0x11]
  41e408:	add    BYTE PTR [ebp+0x47],bl
  41e40b:	jnp    0x41e3d3
  41e40d:	ret    
  41e40e:	mov    dh,0x6e
  41e410:	xor    DWORD PTR [ebx-0x75],ebx
  41e413:	push   ecx
  41e414:	dec    ebx
  41e415:	fld    TBYTE PTR [esi+0x72c99120]
  41e41b:	xchg   DWORD PTR [esi+0x6f],ebx
  41e41e:	cdq    
  41e41f:	addr16 (bad) 
  41e421:	neg    BYTE PTR [edi+ebp*4-0x4a6bf411]
  41e428:	ret    
  41e429:	pop    es
  41e42a:	mul    BYTE PTR [edx+0x40f856da]
  41e430:	sbb    al,0x6e
  41e432:	ja     0x41e46f
  41e434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e435:	shl    BYTE PTR [ecx+0x25],cl
  41e438:	xchg   dh,ah
  41e43a:	ror    BYTE PTR [edi-0x64],1
  41e43d:	rcl    DWORD PTR [eax+0x7],cl
  41e440:	adc    ch,BYTE PTR [edx-0x610276d3]
  41e446:	(bad)  
  41e447:	xor    bh,BYTE PTR [edx+0x63]
  41e44a:	xchg   ebp,eax
  41e44b:	inc    ebp
  41e44c:	dec    eax
  41e44d:	jmp    0x41e499
  41e44f:	inc    eax
  41e450:	not    BYTE PTR [edx+0x49de5e4b]
  41e456:	jl     0x41e434
  41e458:	mov    ds:0x7462c69c,al
  41e45d:	(bad)  
  41e45f:	add    ebp,DWORD PTR [ebp-0x46]
  41e462:	pop    ebx
  41e463:	adc    al,0x53
  41e465:	popa   
  41e466:	sub    al,0xab
  41e468:	dec    ebx
  41e469:	jp     0x41e4a1
  41e46b:	inc    esp
  41e46c:	imul   eax,DWORD PTR [edx-0x4f],0x34
  41e470:	mov    bl,0x5c
  41e472:	or     al,0xf8
  41e474:	fimul  DWORD PTR [edx+edx*2]
  41e477:	(bad)  [ecx+ebx*8]
  41e47a:	ds cld 
  41e47c:	adc    DWORD PTR [edx],ebp
  41e47e:	rol    BYTE PTR [esp+ecx*4],0xc1
  41e482:	and    DWORD PTR [ebp+0x8],esi
  41e485:	cwde   
  41e486:	xor    DWORD PTR [esi+0x52],ebx
  41e489:	or     DWORD PTR [edi+0x2e4e77cb],esp
  41e48f:	mov    dh,0x70
  41e491:	out    0x45,eax
  41e493:	mov    eax,ds:0xcf9aa729
  41e498:	pop    edi
  41e499:	sub    ebx,ebp
  41e49b:	rcl    bh,1
  41e49d:	jns    0x41e516
  41e49f:	jnp    0x41e50c
  41e4a1:	inc    ecx
  41e4a2:	push   edi
  41e4a3:	xchg   ebp,eax
  41e4a4:	inc    ebx
  41e4a5:	in     al,dx
  41e4a6:	xchg   ecx,eax
  41e4a7:	cdq    
  41e4a8:	xlat   BYTE PTR ds:[ebx]
  41e4a9:	(bad)  
  41e4aa:	ret    
  41e4ab:	jnp    0x41e50c
  41e4ad:	sub    DWORD PTR [esi],ebx
  41e4af:	shl    DWORD PTR [ebp-0xa9c2afb],0x64
  41e4b6:	sar    DWORD PTR [esi+0x3c],cl
  41e4b9:	sbb    BYTE PTR [eax],ch
  41e4bb:	rcr    BYTE PTR [edi],cl
  41e4bd:	add    esi,DWORD PTR [edx+0x4d082973]
  41e4c3:	fadd   QWORD PTR [ebx]
  41e4c5:	mov    ebx,0xe56709c7
  41e4ca:	mov    esp,0xc95b1599
  41e4cf:	mov    bl,0x41
  41e4d1:	jae    0x41e476
  41e4d3:	xchg   DWORD PTR [ebx+0x7e5b41da],ebx
  41e4d9:	daa    
  41e4da:	(bad)  
  41e4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4dc:	test   DWORD PTR [eax-0x6c],0xba651bc9
  41e4e3:	sub    ebx,0x7f
  41e4e6:	arpl   bp,dx
  41e4e8:	mov    ch,0xc2
  41e4ea:	rol    DWORD PTR [eax-0x2093b2f4],cl
  41e4f0:	data16 and al,0x56
  41e4f3:	das    
  41e4f4:	into   
  41e4f5:	inc    esp
  41e4f6:	push   eax
  41e4f7:	dec    ebp
  41e4f8:	mov    esp,0x160397ef
  41e4fd:	arpl   dx,bp
  41e4ff:	jp     0x41e555
  41e501:	pop    ebx
  41e502:	ins    DWORD PTR es:[edi],dx
  41e503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e504:	popf   
  41e505:	jae    0x41e57e
  41e507:	mov    al,ds:0x50d6ac59
  41e50c:	out    0x75,eax
  41e50e:	es mov ebx,0x43a59b61
  41e514:	sahf   
  41e515:	pop    ebx
  41e516:	je     0x41e56e
  41e518:	jge    0x41e515
  41e51a:	add    esi,edx
  41e51c:	mov    eax,0xd706226
  41e521:	retf   0xaeec
  41e524:	ret    
  41e525:	sub    al,0x1c
  41e527:	sahf   
  41e528:	inc    ebx
  41e529:	or     al,0xc8
  41e52b:	jmp    0xd1d91706
  41e530:	sar    ecx,1
  41e532:	mov    dh,0x15
  41e534:	call   0xc7eb:0x730e62db
  41e53b:	dec    eax
  41e53c:	aas    
  41e53d:	adc    al,dl
  41e53f:	push   cs
  41e540:	and    al,0xc7
  41e542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e543:	enter  0x4ddd,0x39
  41e547:	nop
  41e548:	in     eax,0xbe
  41e54a:	sar    DWORD PTR [ecx+0x179f211a],0x2a
  41e551:	rol    DWORD PTR [edi],0xd
  41e554:	xchg   ebp,eax
  41e555:	mov    al,ds:0xf9829c57
  41e55a:	sub    al,0x3a
  41e55c:	or     al,BYTE PTR [edi]
  41e55e:	push   0x2c
  41e560:	pop    es
  41e561:	push   es
  41e562:	jg     0x41e5dd
  41e564:	sbb    al,0xa6
  41e566:	cdq    
  41e567:	jecxz  0x41e567
  41e569:	sti    
  41e56a:	pop    edx
  41e56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e56c:	inc    ebp
  41e56d:	or     BYTE PTR ds:0x2a39e038,al
  41e573:	xor    DWORD PTR [ebp+0x7f],esi
  41e576:	mov    bh,0x65
  41e578:	sub    BYTE PTR [edi+0x73a5662f],ah
  41e57e:	mov    ds:0xcc334a71,eax
  41e583:	rol    edi,0xfc
  41e586:	(bad)
  41e589:	mov    ebx,0x165e6db9
  41e58f:	addr16 mov ebp,0x5eb9c43d
  41e595:	lahf   
  41e596:	pusha  
  41e597:	xor    ecx,DWORD PTR [edx+0x11f9e696]
  41e59d:	or     al,0x72
  41e59f:	iret   
  41e5a0:	push   eax
  41e5a1:	add    eax,0x36c37cb9
  41e5a6:	sub    ah,BYTE PTR [edi+0x4f]
  41e5a9:	mov    esp,0x79b758b2
  41e5ae:	push   ecx
  41e5af:	imul   ecx,DWORD PTR [eax],0xe632d6bf
  41e5b5:	rol    DWORD PTR [ecx+0x39],cl
  41e5b8:	into   
  41e5b9:	out    dx,eax
  41e5ba:	es pop ss
  41e5bc:	pavgb  mm5,mm2
  41e5bf:	and    bl,BYTE PTR [edi+0x5b9603f0]
  41e5c5:	fisttp QWORD PTR [eax+0x11]
  41e5c8:	aaa    
  41e5c9:	add    al,0xa
  41e5cb:	xor    bl,0x2f
  41e5ce:	fidiv  WORD PTR [ebp+0x27]
  41e5d1:	lea    esp,[edx-0x5eebd99]
  41e5d7:	cmp    DWORD PTR [edx-0x75dd43ef],ebp
  41e5dd:	cdq    
  41e5de:	jno    0x41e572
  41e5e0:	imul   ecx,DWORD PTR [ebx],0x1429b0cf
  41e5e6:	cs push ebp
  41e5e8:	mov    al,ds:0xf9eb1e04
  41e5ed:	mov    edi,0x2101aaab
  41e5f2:	stos   DWORD PTR es:[edi],eax
  41e5f3:	(bad)  
  41e5f4:	and    eax,esp
  41e5f6:	mov    DWORD PTR [esp+ecx*4-0x31],esi
  41e5fa:	jecxz  0x41e634
  41e5fc:	cld    
  41e5fd:	adc    BYTE PTR [ecx+0x3adc32a1],bl
  41e603:	out    0x17,eax
  41e605:	push   ebx
  41e606:	xor    eax,0x4ae571a4
  41e60b:	jle    0x41e64a
  41e60d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e60e:	jno    0x41e5de
  41e610:	sahf   
  41e611:	add    DWORD PTR [eax+0x5],esp
  41e614:	fwait
  41e615:	cld    
  41e616:	shr    BYTE PTR [edi+0x49],cl
  41e619:	and    eax,0x7f2ce052
  41e61e:	test   dh,al
  41e620:	mov    bl,0xa9
  41e622:	dec    ebp
  41e623:	dec    ebx
  41e624:	bound  esi,QWORD PTR [esi+0x22]
  41e627:	inc    ebp
  41e628:	cmp    ch,al
  41e62a:	mov    esi,0x904b6b6a
  41e62f:	idiv   BYTE PTR [ebx+ebp*1-0x687cd297]
  41e636:	cmc    
  41e637:	hlt    
  41e638:	in     al,0xd0
  41e63a:	fild   WORD PTR [eax+0x24]
  41e63d:	sbb    esi,DWORD PTR [ebp+esi*4+0x384ec5a6]
  41e644:	mov    ds:0x41139efe,eax
  41e649:	or     bl,BYTE PTR [esi-0x1f]
  41e64c:	xor    eax,0x514ab161
  41e651:	pop    ecx
  41e652:	stc    
  41e653:	dec    ebp
  41e654:	out    0x4f,eax
  41e656:	cmp    eax,0x396c4f57
  41e65b:	dec    edi
  41e65c:	cmp    al,0x48
  41e65e:	jae    0x41e67f
  41e660:	mov    esi,0xc615d680
  41e665:	div    BYTE PTR [ebx-0x19]
  41e668:	mov    al,0xf9
  41e66a:	mov    eax,0x15b7a7d4
  41e66f:	cmp    BYTE PTR [ebx+esi*4-0x5c78818a],cl
  41e676:	sbb    bl,ah
  41e678:	xchg   esp,eax
  41e679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e67a:	popf   
  41e67b:	mov    ds:0x6215104d,eax
  41e680:	adc    al,0x49
  41e682:	in     eax,0x7d
  41e684:	call   0xc184:0x37acb482
  41e68b:	aad    0xda
  41e68d:	add    BYTE PTR [edx],dl
  41e68f:	mov    edi,0xbe7737d6
  41e694:	xchg   edi,eax
  41e695:	pop    ds
  41e696:	pop    ebp
  41e697:	and    eax,0x6703d453
  41e69c:	jp     0x41e668
  41e69e:	jge    0x41e69e
  41e6a0:	pop    eax
  41e6a1:	retf   
  41e6a2:	xor    al,0x1c
  41e6a4:	pusha  
  41e6a5:	sbb    eax,0xa301974d
  41e6aa:	jg     0x41e6cd
  41e6ac:	rcr    DWORD PTR [edi+0x3e16e31],1
  41e6b2:	mov    ecx,0xd943b7b0
  41e6b7:	outs   dx,DWORD PTR ds:[esi]
  41e6b8:	pop    ecx
  41e6b9:	push   ebp
  41e6ba:	sahf   
  41e6bb:	shl    BYTE PTR [edx+0x3b],0x60
  41e6bf:	xchg   ecx,eax
  41e6c0:	cmp    al,0xbf
  41e6c2:	adc    BYTE PTR ds:0xa5ac6093,cl
  41e6c8:	inc    eax
  41e6c9:	aam    0xb0
  41e6cb:	xchg   esi,eax
  41e6cc:	xor    esi,eax
  41e6ce:	cmp    ch,BYTE PTR [edi+eax*2]
  41e6d1:	xor    al,0x7
  41e6d3:	jb     0x41e716
  41e6d5:	push   esp
  41e6d6:	(bad)  
  41e6d7:	fst    DWORD PTR [eax+0x24b4aaa9]
  41e6dd:	test   esp,eax
  41e6df:	dec    edx
  41e6e0:	idiv   BYTE PTR [ecx]
  41e6e2:	push   ss
  41e6e3:	aaa    
  41e6e4:	or     dh,dh
  41e6e6:	shr    DWORD PTR [edx],cl
  41e6e8:	jecxz  0x41e709
  41e6ea:	dec    DWORD PTR [ebp+0x2d]
  41e6ed:	enter  0x7684,0x80
  41e6f1:	xor    al,0x11
  41e6f3:	hlt    
  41e6f4:	add    eax,0x971a9a9d
  41e6f9:	jns    0x41e73f
  41e6fb:	mov    WORD PTR [eax],es
  41e6fd:	mov    edi,0x8c19bf83
  41e702:	push   cs
  41e703:	pushf  
  41e704:	outs   dx,DWORD PTR ds:[esi]
  41e705:	mov    BYTE PTR [ebx+0x6b],0x73
  41e709:	xchg   BYTE PTR [ebp-0x6e],ah
  41e70c:	call   0x65ed:0x4392d5d5
  41e713:	add    al,0xdc
  41e715:	xor    esi,DWORD PTR [edx-0x59]
  41e718:	jmp    0xe5b5:0xbc468e6f
  41e71f:	push   esi
  41e720:	cmp    al,cl
  41e722:	mov    ch,al
  41e724:	cdq    
  41e725:	xor    BYTE PTR [ebx+0x74],ch
  41e728:	rcl    BYTE PTR [ecx],cl
  41e72a:	leave  
  41e72b:	mov    ds:0x35d28894,eax
  41e730:	loopne 0x41e6f4
  41e732:	(bad)  
  41e733:	and    edi,ebx
  41e735:	jnp    0x41e71c
  41e737:	lock in eax,dx
  41e739:	push   0xa80cfca5
  41e73e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e73f:	fcmovu st,st(5)
  41e741:	daa    
  41e742:	and    ch,bl
  41e744:	mov    esi,DWORD PTR [ecx+edi*2-0x5c363cf]
  41e74b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e74c:	adc    al,0xe5
  41e74e:	xchg   edx,eax
  41e74f:	imul   ecx,DWORD PTR [esp+edi*1],0x99276bd6
  41e756:	and    edx,edx
  41e758:	lock sbb DWORD PTR [eax+0x6127e245],0xffffff99
  41e760:	or     DWORD PTR [esi+0x6b],esp
  41e763:	push   esp
  41e764:	push   esi
  41e765:	ds lock fwait
  41e768:	push   0xe7504ab0
  41e76d:	or     DWORD PTR [esi],esi
  41e76f:	and    eax,0x4b538a85
  41e774:	adc    ch,BYTE PTR [ecx+0xf]
  41e777:	jns    0x41e786
  41e779:	dec    eax
  41e77a:	(bad)  
  41e77b:	clc    
  41e77c:	mov    ebx,0xce7b8307
  41e781:	mov    edi,0xb5e68434
  41e786:	aas    
  41e787:	mov    eax,ds:0xf5478bdd
  41e78c:	mov    ds:0x8f64ae5a,al
  41e791:	push   ebp
  41e792:	sub    ah,dh
  41e794:	sar    DWORD PTR [eax-0x61b91d90],cl
  41e79a:	mov    DWORD PTR [edx+esi*4],ebp
  41e79d:	push   0xffffffe3
  41e79f:	jge    0x41e727
  41e7a1:	in     eax,0x18
  41e7a3:	xor    dh,dh
  41e7a5:	and    bh,cl
  41e7a7:	push   ebx
  41e7a8:	pop    es
  41e7a9:	cs push esi
  41e7ab:	push   edx
  41e7ac:	sti    
  41e7ad:	pop    edx
  41e7ae:	cdq    
  41e7af:	or     eax,0xa25c85fa
  41e7b4:	shl    DWORD PTR [ecx+0x4a965c7],1
  41e7ba:	adc    al,0xdd
  41e7bc:	popf   
  41e7bd:	cmp    BYTE PTR [ebp+0x7423caef],0x6f
  41e7c4:	add    eax,0xefd4a22d
  41e7c9:	call   0x2a01bdfc
  41e7ce:	dec    ecx
  41e7cf:	imul   ebx,DWORD PTR [eax-0x3c],0xffffffb0
  41e7d3:	lock xchg ebx,eax
  41e7d5:	fild   DWORD PTR [ecx+eiz*8-0x69f66b48]
  41e7dc:	fadd   QWORD PTR [eax+eax*2-0x76e1bad8]
  41e7e3:	push   0x5f
  41e7e5:	in     al,0x59
  41e7e7:	aad    0xef
  41e7e9:	jno    0x41e7bb
  41e7eb:	loope  0x41e7c1
  41e7ed:	push   ds
  41e7ee:	ss push ebp
  41e7f0:	mov    ds:0x4deea4ad,al
  41e7f5:	cld    
  41e7f6:	jge    0x41e80b
  41e7f8:	mov    edi,0xf238f24
  41e7fd:	inc    edx
  41e7fe:	adc    ah,cl
  41e800:	out    dx,eax
  41e801:	xor    eax,0xe5287054
  41e806:	xor    ebp,DWORD PTR [ebx-0x45]
  41e809:	jo     0x41e817
  41e80b:	lock outs dx,DWORD PTR ds:[esi]
  41e80d:	out    dx,eax
  41e80e:	sahf   
  41e80f:	xchg   esp,eax
  41e810:	inc    edx
  41e811:	nop    ecx
  41e814:	hlt    
  41e815:	fiadd  DWORD PTR [ebp-0x7c32c080]
  41e81b:	pop    ebx
  41e81c:	repnz pop edx
  41e81e:	jecxz  0x41e882
  41e820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e821:	imul   eax,DWORD PTR [edi],0xbece4a4c
  41e827:	xchg   DWORD PTR [esi-0x31],ebp
  41e82a:	xchg   esp,esp
  41e82c:	(bad)  
  41e82d:	add    ebp,ebp
  41e82f:	retf   
  41e830:	std    
  41e831:	mov    WORD PTR [esi-0x79],cs
  41e834:	ds sbb esp,ebx
  41e837:	or     al,0xd7
  41e839:	shl    ecx,1
  41e83b:	or     al,0xe
  41e83d:	aas    
  41e83e:	loope  0x41e89e
  41e840:	jmp    0xbd192955
  41e845:	inc    edx
  41e846:	push   DWORD PTR [eax]
  41e848:	(bad)  
  41e849:	leave  
  41e84a:	adc    eax,0xc1e730b
  41e84f:	mov    eax,0x66f1ed01
  41e854:	adc    esi,DWORD PTR [ebp+0x61]
  41e857:	cmc    
  41e858:	adc    BYTE PTR [ecx],al
  41e85a:	mov    ah,0xd8
  41e85c:	mov    eax,ds:0x52f80d38
  41e861:	cld    
  41e862:	or     bh,cl
  41e864:	leave  
  41e865:	cmp    DWORD PTR [esi],esi
  41e867:	push   cs
  41e868:	mov    WORD PTR [edx+0x4b],ds
  41e86b:	aas    
  41e86c:	scas   al,BYTE PTR es:[edi]
  41e86d:	or     al,0x75
  41e86f:	add    ebp,0x6d
  41e872:	inc    eax
  41e873:	adc    BYTE PTR cs:[edi],0x11
  41e877:	jmp    0x41e8aa
  41e879:	aaa    
  41e87a:	cmp    esi,DWORD PTR [ebx-0x69]
  41e87d:	stos   DWORD PTR es:[edi],eax
  41e87e:	pop    ebx
  41e87f:	test   al,0x93
  41e881:	setne  BYTE PTR [ecx-0x27]
  41e885:	fld    TBYTE PTR [ecx-0x3a5c0744]
  41e88b:	aaa    
  41e88c:	(bad)  
  41e88d:	push   ebx
  41e88e:	ss jmp 0x4e63:0x364fee2a
  41e896:	mov    eax,0x66e2c093
  41e89b:	add    al,0xa3
  41e89d:	lea    esi,[edx+0x32d14b87]
  41e8a3:	cmc    
  41e8a4:	or     dh,BYTE PTR [esi-0x235c7b99]
  41e8aa:	mov    bl,0x19
  41e8ac:	xchg   edx,eax
  41e8ad:	int3   
  41e8ae:	out    dx,al
  41e8af:	or     eax,0xc33cf09a
  41e8b4:	icebp  
  41e8b5:	aam    0x57
  41e8b7:	cs inc ebp
  41e8b9:	pop    ebp
  41e8ba:	dec    eax
  41e8bb:	add    ch,cl
  41e8bd:	mov    bl,BYTE PTR [edx]
  41e8bf:	mov    edi,0x656b95f4
  41e8c4:	cmp    cl,ch
  41e8c6:	dec    edx
  41e8c7:	(bad)  
  41e8c8:	ds aam 0xce
  41e8cb:	push   ecx
  41e8cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8cd:	add    BYTE PTR [edx],al
  41e8cf:	or     eax,0x5b41306b
  41e8d4:	inc    ebx
  41e8d5:	mov    esp,0xc7c3de0e
  41e8da:	jp     0x41e8f9
  41e8dc:	xchg   edi,eax
  41e8dd:	cmp    ah,dl
  41e8df:	and    DWORD PTR [edx+eiz*4+0x10],esi
  41e8e3:	mov    esp,0x2b90f4c0
  41e8e8:	pop    ss
  41e8e9:	mov    ebx,0x8a35952
  41e8ee:	and    al,0x7e
  41e8f0:	sub    al,0x64
  41e8f2:	jb     0x41e8a2
  41e8f4:	xchg   edx,eax
  41e8f5:	push   eax
  41e8f6:	sbb    ch,dl
  41e8f8:	(bad)  
  41e8f9:	call   0xe433:0xa6358109
  41e900:	mov    ch,0x52
  41e902:	pop    edi
  41e903:	mov    ah,0x7a
  41e905:	jle    0x41e945
  41e907:	adc    eax,0x86705cff
  41e90c:	sbb    BYTE PTR [ebx-0x1e3c5f47],bh
  41e912:	daa    
  41e913:	mov    ch,0x2f
  41e915:	ficomp DWORD PTR [esi+0x3aa61cb8]
  41e91b:	fcomp  QWORD PTR [ecx]
  41e91d:	(bad)  
  41e91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e920:	jo     0x41e8ce
  41e922:	out    dx,al
  41e923:	xor    BYTE PTR [eax],0x21
  41e926:	cmp    bh,BYTE PTR [ecx+esi*8-0x78074cdb]
  41e92d:	add    ah,BYTE PTR [eax-0x4f]
  41e930:	xchg   ebp,eax
  41e931:	cs pop ds
  41e933:	sti    
  41e934:	inc    ebp
  41e935:	inc    ebp
  41e936:	(bad)  
  41e937:	aam    0x90
  41e939:	add    edi,DWORD PTR [ebx]
  41e93b:	xchg   edi,eax
  41e93c:	jge    0x41e906
  41e93e:	aam    0x81
  41e940:	pop    ds
  41e941:	imul   DWORD PTR [edi]
  41e943:	push   esp
  41e944:	cmp    ebp,0xb7e0a824
  41e94a:	clc    
  41e94b:	cmp    al,0x3d
  41e94d:	mov    al,0x74
  41e94f:	data16 into 
  41e951:	jb     0x41e970
  41e953:	sbb    bh,BYTE PTR [edx-0x2114c123]
  41e959:	retf   
  41e95a:	xor    eax,0xab4ec2f0
  41e95f:	mov    bl,0xdc
  41e961:	aad    0xbc
  41e963:	ret    
  41e964:	sbb    bl,BYTE PTR [ecx-0x1]
  41e967:	mov    bl,0x6f
  41e969:	mov    ch,0xc2
  41e96b:	pop    eax
  41e96c:	sbb    BYTE PTR [edx],bl
  41e96e:	out    dx,al
  41e96f:	retf   
  41e970:	scas   al,BYTE PTR es:[edi]
  41e971:	cmp    ebx,DWORD PTR [ebp+0x40]
  41e974:	aam    0x64
  41e976:	arpl   WORD PTR [ecx+eiz*2-0x3bac78d8],si
  41e97d:	xchg   ecx,eax
  41e97e:	push   ds
  41e97f:	mov    esp,0x6f2ee5a3
  41e984:	cmp    DWORD PTR [edi+edx*1-0x72],esi
  41e988:	mov    ds:0xb139e0ab,eax
  41e98d:	mov    edi,0x481fc77f
  41e992:	jne    0x41e96f
  41e994:	dec    ebx
  41e995:	sub    ch,BYTE PTR [esi+0x35f9aa1]
  41e99b:	scas   al,BYTE PTR es:[edi]
  41e99c:	ror    DWORD PTR [ebx+0x3262334c],1
  41e9a2:	cmp    BYTE PTR [esi],al
  41e9a4:	(bad)  
  41e9a7:	call   0x88ff:0x3bd98aea
  41e9ae:	out    0xbd,eax
  41e9b0:	fisubr DWORD PTR [edi-0x714123be]
  41e9b6:	cs push ebp
  41e9b8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41e9ba:	imul   ecx,eax,0x1b
  41e9bd:	fisubr DWORD PTR [ecx]
  41e9bf:	pop    es
  41e9c0:	(bad)  
  41e9c1:	in     eax,0x56
  41e9c3:	fst    DWORD PTR ds:0x77e34f5f
  41e9c9:	inc    edx
  41e9ca:	pop    esi
  41e9cb:	add    BYTE PTR gs:[ebp+edx*8-0x4af406e3],dl
  41e9d3:	fdivr  QWORD PTR [edx+0x4cee9673]
  41e9d9:	and    bl,BYTE PTR [ebx+0x4f]
  41e9dc:	and    al,0x9c
  41e9de:	or     ah,bh
  41e9e0:	sub    eax,0x20480ed
  41e9e5:	into   
  41e9e6:	daa    
  41e9e7:	and    esp,esp
  41e9e9:	sbb    BYTE PTR [esi-0x20],0xc2
  41e9ed:	adc    al,0x34
  41e9ef:	jg     0x41e9ef
  41e9f1:	scas   eax,DWORD PTR es:[edi]
  41e9f2:	sub    eax,0x4cab0565
  41e9f7:	pop    eax
  41e9f8:	add    eax,DWORD PTR [edi+ecx*8+0x36]
  41e9fc:	outs   dx,DWORD PTR es:[esi]
  41e9fe:	push   ebx
  41e9ff:	sub    BYTE PTR [eax+edi*2-0xe1a994],0xe3
  41ea07:	pop    ebx
  41ea08:	sidtd  [eax-0x63f61ec6]
  41ea0f:	pop    esi
  41ea10:	push   es
  41ea11:	mov    DWORD PTR [eax+0x61],edi
  41ea14:	enter  0x8a02,0xd2
  41ea18:	xchg   ebx,eax
  41ea19:	nop
  41ea1a:	or     al,0xf7
  41ea1c:	sbb    al,0xd8
  41ea1e:	rcl    eax,0x98
  41ea21:	outs   dx,DWORD PTR ds:[esi]
  41ea22:	inc    BYTE PTR [edx+0x35a73e3b]
  41ea28:	loopne 0x41e9b5
  41ea2a:	push   es
  41ea2b:	enter  0x6a44,0xcc
  41ea2f:	add    ebp,DWORD PTR [ecx]
  41ea31:	push   esp
  41ea32:	mov    ebp,0xa481e429
  41ea37:	repnz pop ebp
  41ea39:	push   DWORD PTR [ecx+0x4f7ec2a0]
  41ea3f:	mov    eax,0xe21864ae
  41ea44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea45:	mov    ch,0x23
  41ea47:	or     eax,DWORD PTR [ecx-0x3]
  41ea4a:	or     al,0x8c
  41ea4c:	rcr    BYTE PTR ds:0x94a1c9f,cl
  41ea52:	sub    eax,0x7fcfb93e
  41ea57:	jmp    0x8ec98892
  41ea5c:	(bad)  
  41ea5d:	sub    BYTE PTR [ebx+ecx*8-0x11510d53],cl
  41ea64:	retf   0x6c06
  41ea67:	aam    0x4c
  41ea69:	sbb    DWORD PTR [eax],edx
  41ea6b:	dec    esp
  41ea6c:	jmp    0x41ea31
  41ea6e:	leave  
  41ea6f:	imul   esi,DWORD PTR [edx],0x1ece5d2a
  41ea75:	and    edx,ecx
  41ea77:	push   es
  41ea78:	sti    
  41ea79:	jo     0x41eab5
  41ea7b:	pop    ss
  41ea7c:	adc    DWORD PTR [esi-0x16b1f458],ebx
  41ea82:	and    al,0x91
  41ea84:	mov    eax,0x1f95d8
  41ea89:	or     eax,0xc42c044b
  41ea8e:	bound  esp,QWORD PTR [eax+0x2f]
  41ea91:	jnp    0x41ea9c
  41ea93:	or     al,0x3d
  41ea95:	iret   
  41ea96:	inc    ebx
  41ea97:	xor    esi,DWORD PTR [edi-0x12]
  41ea9a:	shl    cl,0x27
  41ea9d:	repz addr16 cli 
  41eaa0:	or     BYTE PTR [edi],ah
  41eaa2:	shl    BYTE PTR [ebp-0x64],cl
  41eaa5:	sahf   
  41eaa6:	pop    ss
  41eaa7:	jmp    0x72033c9e
  41eaac:	lds    esi,FWORD PTR [eax-0x61f91f05]
  41eab2:	cwde   
  41eab3:	arpl   sp,cx
  41eab5:	add    DWORD PTR [esi+0x51d7a53d],0x70
  41eabc:	in     al,dx
  41eabd:	sar    DWORD PTR [esi+0x1348d4d5],1
  41eac3:	rsm    
  41eac5:	add    al,0xf4
  41eac7:	mov    eax,0xaeab5d7
  41eacc:	gs mov dh,0x48
  41eacf:	(bad)  
  41ead1:	sub    edx,DWORD PTR [ebp-0x3a4351b9]
  41ead7:	lahf   
  41ead8:	add    BYTE PTR [ebp+edi*4-0x28],cl
  41eadc:	dec    ebx
  41eadd:	mov    ecx,0xba7cf183
  41eae2:	out    0xe0,eax
  41eae4:	inc    edi
  41eae5:	icebp  
  41eae6:	test   al,0xed
  41eae8:	pop    ebx
  41eae9:	sbb    DWORD PTR [eax],esi
  41eaeb:	cs pop esi
  41eaed:	mov    BYTE PTR [ebp+0x1f],0x7b
  41eaf1:	mov    fs,WORD PTR [esi+0x23]
  41eaf4:	shl    BYTE PTR ds:0xbf90e820,0x32
  41eafb:	jg     0x41eb3b
  41eafd:	add    al,0x28
  41eaff:	cmp    BYTE PTR [edi-0x131f3a57],ah
  41eb05:	mov    esi,0x84cd5b02
  41eb0a:	iret   
  41eb0b:	cmp    al,0x1b
  41eb0d:	push   edx
  41eb0e:	call   0x2135aef3
  41eb13:	cmp    ah,BYTE PTR [edx]
  41eb15:	mov    al,0xee
  41eb17:	push   ebx
  41eb18:	push   ebp
  41eb19:	sub    DWORD PTR [ebp-0x43],esi
  41eb1c:	mul    ah
  41eb1e:	stos   BYTE PTR es:[edi],al
  41eb1f:	mov    ds:0x8fb5a2ef,eax
  41eb24:	push   0xdb7eded3
  41eb29:	cs push ds
  41eb2b:	or     BYTE PTR [edx+0x2e],ah
  41eb2e:	add    DWORD PTR [eax-0x1d],ecx
  41eb31:	ss push es
  41eb33:	and    eax,0x73283fa2
  41eb38:	int    0x87
  41eb3a:	xchg   ebp,eax
  41eb3b:	mov    dh,0x69
  41eb3d:	sbb    al,BYTE PTR [edi+0x32]
  41eb40:	cld    
  41eb41:	mov    ebx,0x335ed7e4
  41eb46:	push   esp
  41eb47:	mov    DWORD PTR [ebp+0x31a64b2],ebp
  41eb4d:	jne    0x41eb82
  41eb4f:	pusha  
  41eb50:	or     ch,bh
  41eb52:	or     bh,ah
  41eb54:	dec    ebx
  41eb55:	push   ds
  41eb56:	rol    BYTE PTR [ecx],1
  41eb58:	leave  
  41eb59:	jo     0x41eb41
  41eb5b:	rcl    DWORD PTR [edi+0x49dca53c],0x70
  41eb62:	dec    edx
  41eb63:	cmp    eax,0x254fa527
  41eb68:	or     DWORD PTR [eax+esi*4],ebp
  41eb6b:	jae    0x41eb0a
  41eb6d:	call   0x42aecd62
  41eb72:	retf   0xd543
  41eb75:	hlt    
  41eb76:	jmp    0x28a94304
  41eb7b:	push   DWORD PTR [ebp+edx*2-0x6eaf54aa]
  41eb82:	sub    BYTE PTR [ebx+0x25],0x9e
  41eb86:	dec    edx
  41eb87:	jle    0x41eb0a
  41eb89:	out    dx,eax
  41eb8a:	push   eax
  41eb8b:	pusha  
  41eb8c:	(bad)  
  41eb8d:	mov    cl,0x2a
  41eb8f:	nop
  41eb90:	fwait
  41eb91:	xchg   edi,eax
  41eb92:	mov    ds:0x5c400bde,eax
  41eb97:	loope  0x41ebcb
  41eb99:	mov    ss,WORD PTR [ecx+0x1fe44e05]
  41eb9f:	push   ecx
  41eba0:	inc    eax
  41eba1:	and    BYTE PTR [ecx-0x37129483],bh
  41eba7:	dec    ebp
  41eba8:	sub    ah,ch
  41ebaa:	(bad)  
  41ebab:	mov    ch,0x17
  41ebad:	pop    ebp
  41ebae:	pop    ss
  41ebaf:	mov    ecx,0x8a1b81d3
  41ebb4:	xor    al,0xc8
  41ebb6:	xor    BYTE PTR [ebx-0x7b83156e],bh
  41ebbc:	sub    al,0xe3
  41ebbe:	neg    edx
  41ebc0:	into   
  41ebc1:	in     eax,dx
  41ebc2:	cmp    bl,BYTE PTR [ebx-0x6c]
  41ebc5:	jle    0x41ec0f
  41ebc7:	psrlw  mm0,QWORD PTR [ebp+0x13]
  41ebcb:	clc    
  41ebcc:	popf   
  41ebcd:	cmp    eax,0x6d8da554
  41ebd2:	sti    
  41ebd3:	loope  0x41ec04
  41ebd5:	pop    esp
  41ebd6:	test   DWORD PTR [ebp-0x7635dc8e],ebx
  41ebdc:	loopne 0x41ec1f
  41ebde:	adc    BYTE PTR [ecx+edx*2],ah
  41ebe1:	xor    dl,al
  41ebe3:	and    DWORD PTR fs:[ecx],0xffffff94
  41ebe7:	xchg   ebp,eax
  41ebe8:	inc    edi
  41ebe9:	inc    ebp
  41ebea:	cs iret 
  41ebec:	push   edx
  41ebed:	(bad)  
  41ebef:	xchg   edx,eax
  41ebf0:	or     DWORD PTR [eax-0x3d],eax
  41ebf3:	adc    DWORD PTR [esi],edi
  41ebf5:	cdq    
  41ebf6:	mov    eax,0x64b53dc2
  41ebfb:	call   0x1dcca6b1
  41ec00:	daa    
  41ec01:	jnp    0x41eb88
  41ec03:	jo     0x41ec24
  41ec05:	sub    bh,BYTE PTR [edi-0x2341d463]
  41ec0b:	push   edx
  41ec0c:	idiv   DWORD PTR [edx]
  41ec0e:	retf   
  41ec0f:	add    al,0x1c
  41ec11:	ret    0xb8e1
  41ec14:	inc    ecx
  41ec15:	sub    esp,0x56
  41ec18:	nop
  41ec19:	fadd   DWORD PTR [eax]
  41ec1b:	or     al,0x58
  41ec1d:	rcl    BYTE PTR ds:0xd673da9c,cl
  41ec23:	(bad)  
  41ec25:	jns    0x41ec38
  41ec27:	push   esi
  41ec28:	pushf  
  41ec29:	int    0x39
  41ec2b:	inc    esi
  41ec2c:	push   edi
  41ec2d:	mov    ds:0x4b32ea4,eax
  41ec32:	sub    BYTE PTR [edx],dl
  41ec34:	fisubr WORD PTR [esi+0x4d]
  41ec37:	xor    cl,bh
  41ec39:	(bad)
  41ec3d:	add    eax,0x5f143527
  41ec42:	aas    
  41ec43:	xchg   edi,eax
  41ec44:	mov    al,0x8c
  41ec46:	outs   dx,BYTE PTR ds:[esi]
  41ec47:	dec    ecx
  41ec48:	push   ecx
  41ec49:	add    DWORD PTR [edx-0x3c],edx
  41ec4c:	adc    edi,ebx
  41ec4e:	pop    ss
  41ec4f:	call   FWORD PTR [eax]
  41ec51:	fucomi st,st(2)
  41ec53:	inc    edi
  41ec54:	mov    WORD PTR [ecx-0x8],gs
  41ec57:	lds    esp,FWORD PTR [eax]
  41ec59:	adc    al,0xc3
  41ec5b:	pop    esi
  41ec5c:	jnp    0x41ec4a
  41ec5e:	cmp    eax,DWORD PTR [ecx+0x214c52b0]
  41ec64:	sub    BYTE PTR [eax],bh
  41ec66:	inc    ebx
  41ec67:	mov    bl,bh
  41ec69:	xchg   ebp,eax
  41ec6a:	xchg   ebx,eax
  41ec6b:	pop    edi
  41ec6c:	xor    eax,DWORD PTR [edx]
  41ec6e:	jmp    0x41ec4d
  41ec70:	push   ds
  41ec71:	xor    ecx,DWORD PTR [ebx-0x174120c5]
  41ec77:	mov    dl,0x4b
  41ec79:	fwait
  41ec7a:	pop    ds
  41ec7b:	sbb    DWORD PTR [edi+0x730010a0],0xd60dd5b3
  41ec85:	cli    
  41ec86:	jo     0x41eca6
  41ec88:	adc    DWORD PTR [esi-0x39807d0],edx
  41ec8e:	mov    ebp,0x2e0f732b
  41ec93:	or     ebp,DWORD PTR [ecx-0x4eb620c3]
  41ec99:	mov    ah,0xb7
  41ec9b:	fld    DWORD PTR [ecx+0x3d01f205]
  41eca1:	dec    ebp
  41eca2:	mov    ds:0x7ca99a1c,al
  41eca7:	add    DWORD PTR [ecx],ebp
  41eca9:	adc    eax,0x12b162c2
  41ecae:	jnp    0x41ece0
  41ecb0:	stos   DWORD PTR es:[edi],eax
  41ecb1:	ret    
  41ecb2:	push   ecx
  41ecb3:	mov    cl,0x21
  41ecb5:	(bad)  
  41ecb6:	imul   eax,DWORD PTR [edx+0xc2aaeb7],0x77d464f7
  41ecc0:	push   edx
  41ecc1:	push   edi
  41ecc2:	adc    BYTE PTR [edx+0x11e8cce8],al
  41ecc8:	or     al,0x31
  41ecca:	pop    ebx
  41eccb:	sbb    eax,esi
  41eccd:	(bad)  
  41ecce:	in     al,dx
  41eccf:	aad    0x4c
  41ecd1:	outs   dx,DWORD PTR ds:[esi]
  41ecd2:	xor    al,0x6a
  41ecd4:	or     BYTE PTR [ecx+0x5aa2b4],dh
  41ecda:	retf   
  41ecdb:	popf   
  41ecdc:	mov    bl,0xb5
  41ecde:	rol    DWORD PTR [edi-0x60d11251],cl
  41ece4:	(bad)  [ecx-0x75caa13a]
  41ecea:	scas   al,BYTE PTR es:[edi]
  41eceb:	adc    bl,bl
  41eced:	push   DWORD PTR [ebp+0xe]
  41ecf0:	in     eax,dx
  41ecf1:	xchg   edi,eax
  41ecf2:	mov    bl,0xd3
  41ecf4:	push   esp
  41ecf5:	xor    ch,BYTE PTR [edx-0x49177d6]
  41ecfb:	add    eax,0x490c10fb
  41ed00:	mov    esi,0xe58a635
  41ed05:	and    eax,0xcfab24e2
  41ed0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed0b:	jnp    0x41ed53
  41ed0d:	imul   DWORD PTR [esp+eax*4+0x36]
  41ed11:	add    al,0xf2
  41ed13:	fwait
  41ed14:	aam    0x68
  41ed16:	dec    ebx
  41ed17:	sub    DWORD PTR [ebp+0x6f],eax
  41ed1a:	add    eax,0xe0242d74
  41ed1f:	jnp    0x41ed23
  41ed21:	adc    al,0x22
  41ed23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed24:	or     bl,BYTE PTR [eax+0x2834af31]
  41ed2a:	(bad)  
  41ed2b:	sar    BYTE PTR [ecx-0x62],cl
  41ed2e:	adc    al,0xa2
  41ed30:	mov    eax,0xbe9362f6
  41ed35:	popf   
  41ed36:	mov    esi,0xab67eac
  41ed3b:	cld    
  41ed3c:	xlat   BYTE PTR ds:[ebx]
  41ed3d:	xor    DWORD PTR [ebp+ecx*1-0x2fd7016f],0xf0a1299
  41ed48:	or     BYTE PTR [ecx],bl
  41ed4a:	lahf   
  41ed4b:	rol    BYTE PTR ds:0x6ab92b3c,cl
  41ed51:	cli    
  41ed52:	loope  0x41ed9b
  41ed54:	jbe    0x41ed33
  41ed56:	adc    DWORD PTR [edx-0x23],0xf2a20eee
  41ed5d:	and    al,0xb1
  41ed5f:	fwait
  41ed60:	xor    ecx,DWORD PTR [ecx+0x4daddf44]
  41ed66:	pop    eax
  41ed67:	xchg   esp,eax
  41ed68:	jmp    0x1bd2:0xa05b1755
  41ed6f:	fs daa 
  41ed71:	ds adc al,0xff
  41ed74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed75:	sub    al,0xd7
  41ed77:	ud0    esp,DWORD PTR [ecx+0x3e]
  41ed7b:	mov    dh,0x4f
  41ed7d:	data16 fbstp TBYTE PTR [esi-0x23]
  41ed81:	aaa    
  41ed82:	xchg   edi,eax
  41ed83:	pushf  
  41ed84:	inc    edx
  41ed85:	xor    ebp,ebp
  41ed87:	and    DWORD PTR [ecx],eax
  41ed89:	scas   eax,DWORD PTR es:[edi]
  41ed8a:	loop   0x41ed2a
  41ed8c:	aam    0xf8
  41ed8e:	retf   0xf87a
  41ed91:	xor    BYTE PTR [edx],ch
  41ed93:	xor    al,0x16
  41ed95:	xor    ecx,DWORD PTR [eax+0x2f7e59b8]
  41ed9b:	loope  0x41edd0
  41ed9d:	mov    ebx,0x58fed00a
  41eda2:	jne    0x41ed2e
  41eda4:	pop    ebx
  41eda5:	ins    BYTE PTR es:[edi],dx
  41eda6:	outs   dx,DWORD PTR ds:[esi]
  41eda7:	hlt    
  41eda8:	sti    
  41eda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edaa:	mov    DWORD PTR [eax-0x2a],eax
  41edad:	call   esi
  41edaf:	stc    
  41edb0:	inc    eax
  41edb1:	mov    al,0x25
  41edb3:	fsub   st(3),st
  41edb5:	and    BYTE PTR [ecx],bl
  41edb7:	or     al,0x85
  41edb9:	mov    al,ds:0x377e9551
  41edbe:	or     al,0x27
  41edc0:	int    0xfe
  41edc2:	ret    0xfdf4
  41edc5:	lds    ebp,FWORD PTR [eax-0x4b9e52e7]
  41edcb:	cmp    al,0x49
  41edcd:	adc    ah,BYTE PTR [esi-0x2b7c4fdf]
  41edd3:	add    eax,edx
  41edd5:	lock cmp esp,0x48
  41edd9:	adc    BYTE PTR [ebx+ebp*2+0x19],bl
  41eddd:	out    0x2e,al
  41eddf:	out    0x45,eax
  41ede1:	mov    DWORD PTR [eax+0x74c593ee],esp
  41ede7:	mov    eax,0xf7ea8ca7
  41edec:	mov    ah,0x6d
  41edee:	sbb    ebx,DWORD PTR [eax-0x6a5c4447]
  41edf4:	popf   
  41edf5:	gs dec esi
  41edf7:	sti    
  41edf8:	sbb    al,0x1f
  41edfa:	ins    DWORD PTR es:[edi],dx
  41edfb:	xor    al,0x35
  41edfd:	sti    
  41edfe:	scas   al,BYTE PTR es:[edi]
  41edff:	jmp    0x8bb0:0x5bcf91d4
  41ee06:	inc    edx
  41ee07:	xchg   DWORD PTR [edx-0xe34b005],ebx
  41ee0d:	push   cs
  41ee0e:	inc    esi
  41ee0f:	push   esp
  41ee10:	mov    ebp,0xf364c317
  41ee15:	jno    0x41ee8b
  41ee17:	adc    BYTE PTR [eax-0x28],bh
  41ee1a:	adc    ebp,DWORD PTR [eax+0xcead44b]
  41ee20:	adc    al,0x9e
  41ee22:	push   ds
  41ee23:	fsub   QWORD PTR [eax-0x32c37fea]
  41ee29:	or     al,BYTE PTR [ebp+0x1]
  41ee2c:	test   BYTE PTR [ebx],ch
  41ee2e:	lods   al,BYTE PTR ds:[esi]
  41ee2f:	xor    al,0xa3
  41ee31:	mov    ds:0x4053d5a5,eax
  41ee36:	sbb    BYTE PTR [ebx+ecx*4],0xb4
  41ee3a:	jnp    0x41ee8d
  41ee3c:	fld    TBYTE PTR [esi+0x16d4e217]
  41ee42:	and    esi,DWORD PTR [edx]
  41ee44:	call   0x34359748
  41ee49:	call   0x1498:0x7d844935
  41ee50:	sbb    al,0xef
  41ee52:	mov    ebp,0x52adea71
  41ee57:	clc    
  41ee58:	jl     0x41eeaf
  41ee5a:	pop    eax
  41ee5b:	fld    DWORD PTR [edi+edi*1]
  41ee5e:	test   BYTE PTR [eax-0x56],0x9c
  41ee62:	das    
  41ee63:	cdq    
  41ee64:	je     0x41ee13
  41ee66:	or     eax,0x97e6728
  41ee6b:	rcr    DWORD PTR [edx+0x4],cl
  41ee6e:	jae    0x41ee1e
  41ee70:	mov    dh,0x19
  41ee72:	or     DWORD PTR [ebx-0x4e0bee25],0xfffffffd
  41ee79:	enter  0x3a64,0xa8
  41ee7d:	cmp    eax,0x27a7ea11
  41ee82:	dec    ebp
  41ee83:	xchg   esp,eax
  41ee84:	or     al,0x5e
  41ee86:	xchg   esi,eax
  41ee87:	jmp    0xff80:0x302057ec
  41ee8e:	xor    BYTE PTR [ebp+ebx*8+0x7ed8a4f0],cl
  41ee95:	retf   0xebe0
  41ee98:	fs xchg edx,eax
  41ee9a:	sub    BYTE PTR [edx-0x4d],bl
  41ee9d:	aaa    
  41ee9e:	into   
  41ee9f:	add    eax,0x37c91473
  41eea4:	and    esi,edi
  41eea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eea7:	inc    ecx
  41eea8:	mov    BYTE PTR [ecx],al
  41eeaa:	fiadd  DWORD PTR [edx+0x4e362cc]
  41eeb0:	push   edx
  41eeb1:	pusha  
  41eeb2:	pop    eax
  41eeb3:	js     0x41eec8
  41eeb5:	dec    eax
  41eeb6:	or     al,BYTE PTR [edx+esi*4+0x45cd75b3]
  41eebd:	or     BYTE PTR [esi],0x58
  41eec0:	ror    DWORD PTR [eax+0x64c5724b],0x35
  41eec7:	fld    TBYTE PTR [esp+eax*8]
  41eeca:	jle    0x41ef18
  41eecc:	scas   eax,DWORD PTR es:[di]
  41eece:	pop    ds
  41eecf:	int    0x1a
  41eed1:	pop    ebp
  41eed2:	or     BYTE PTR [eax+0x2d8c8bcd],ah
  41eed8:	push   edi
  41eed9:	hlt    
  41eeda:	cs dec ebp
  41eedc:	fsub   st(5),st
  41eede:	lock dec ebp
  41eee0:	(bad)  
  41eee1:	loopne 0x41ee68
  41eee3:	fs sbb eax,0x43fe8b9
  41eee9:	pop    ebp
  41eeea:	push   edx
  41eeeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeec:	jmp    0xa14db76d
  41eef1:	dec    ebx
  41eef2:	ins    BYTE PTR es:[edi],dx
  41eef3:	mov    cs,WORD PTR ds:0xe4bcde9b
  41eef9:	jno    0x41ef71
  41eefb:	mov    ecx,0x4413f814
  41ef00:	push   ebx
  41ef01:	shr    BYTE PTR [edi],cl
  41ef03:	(bad)  
  41ef05:	sub    al,0x42
  41ef07:	cmp    cl,BYTE PTR [edi]
  41ef09:	push   ss
  41ef0a:	loope  0x41eeaa
  41ef0c:	adc    esp,DWORD PTR [ebx+0x32]
  41ef0f:	add    ch,BYTE PTR [edi-0x250dcdcb]
  41ef15:	(bad)  
  41ef16:	call   0xb476:0x9a17e9ea
  41ef1d:	xor    DWORD PTR [ebx-0x2e09a59c],esi
  41ef23:	add    bh,cl
  41ef25:	mov    BYTE PTR [ebx+0x2c],0x83
  41ef29:	add    ebx,DWORD PTR [edi+0x7253375e]
  41ef2f:	and    BYTE PTR [ebx-0xa],dl
  41ef32:	push   esi
  41ef33:	adc    dh,ch
  41ef35:	push   ecx
  41ef36:	cmp    al,0x70
  41ef38:	jae    0x41efb4
  41ef3a:	js     0x41ef1a
  41ef3c:	sub    al,0x3c
  41ef3e:	stc    
  41ef3f:	jae    0x41ef21
  41ef41:	pop    ebp
  41ef42:	sub    ah,dh
  41ef44:	stc    
  41ef45:	adc    DWORD PTR [eax+ebx*1-0x6681e3aa],edi
  41ef4c:	sahf   
  41ef4d:	popf   
  41ef4e:	sbb    eax,0x30e830
  41ef53:	mov    al,0x4d
  41ef55:	push   esp
  41ef56:	and    edx,DWORD PTR [edi+edi*2+0x60f4b77f]
  41ef5d:	fisttp WORD PTR [esi]
  41ef5f:	je     0x41ef9a
  41ef61:	xor    DWORD PTR [edi-0x1f31669a],0xc7e5a768
  41ef6b:	int    0x44
  41ef6d:	push   ebp
  41ef6e:	mov    ebp,0xc4eb8ae1
  41ef73:	mov    ds:0xee5e5662,al
  41ef78:	jne    0x41ef30
  41ef7a:	xor    eax,0x5c076a35
  41ef7f:	mov    es,eax
  41ef81:	ret    0xbc69
  41ef84:	and    dh,BYTE PTR [eax+0x281ef365]
  41ef8a:	in     eax,dx
  41ef8b:	in     al,dx
  41ef8c:	xor    al,0x79
  41ef8e:	and    eax,ecx
  41ef90:	or     eax,0xc309dfa
  41ef95:	xchg   ebx,eax
  41ef96:	cmp    eax,0xb63f638a
  41ef9b:	and    dl,dl
  41ef9d:	(bad)  
  41ef9e:	dec    esp
  41ef9f:	test   BYTE PTR [ebx],dh
  41efa1:	lods   eax,DWORD PTR ds:[esi]
  41efa2:	jl     0x41efe5
  41efa4:	cwde   
  41efa5:	cli    
  41efa6:	cmp    ah,al
  41efa8:	mov    ebx,0x52d14b59
  41efad:	bound  edi,QWORD PTR [esp+ebp*8+0x4ad63a0b]
  41efb4:	pop    ss
  41efb5:	sbb    edx,DWORD PTR [ecx-0x3c]
  41efb8:	jl     0x41effb
  41efba:	enter  0x1083,0x2c
  41efbe:	es in  eax,0x70
  41efc1:	jp     0x41f03a
  41efc3:	jl     0x41efd1
  41efc5:	test   DWORD PTR [eax-0xa],edx
  41efc8:	or     bl,ch
  41efca:	ret    0x7f09
  41efcd:	sbb    ecx,edx
  41efcf:	mov    cl,cl
  41efd1:	cmp    DWORD PTR [esi-0x192a9085],edx
  41efd7:	jb     0x41efa4
  41efd9:	test   DWORD PTR [ecx-0x17f58b86],esi
  41efdf:	dec    eax
  41efe0:	dec    eax
  41efe1:	or     al,0x74
  41efe3:	xor    cl,BYTE PTR [edx+0x6582e660]
  41efe9:	out    0x1c,eax
  41efeb:	sbb    al,0x33
  41efed:	sub    ebp,esp
  41efef:	pop    edx
  41eff0:	push   cs
  41eff1:	lea    edi,[ecx]
  41eff3:	mov    dh,BYTE PTR [esi-0x35996e0b]
  41eff9:	jnp    0x41ef8f
  41effb:	jg     0x41f024
  41effd:	mov    ?,edx
  41efff:	xchg   ecx,eax
  41f000:	lock pop ebx
  41f002:	add    eax,0x55e84d5e
  41f007:	inc    esp
  41f008:	clc    
  41f009:	pushf  
  41f00a:	xor    dl,BYTE PTR ds:0x48d6fcf7
  41f010:	jns    0x41f081
  41f012:	or     al,0xa
  41f014:	ja     0x41f010
  41f016:	rcl    DWORD PTR [edi],0x1f
  41f019:	mov    bh,BYTE PTR [ebx+eiz*2]
  41f01c:	lfs    ebx,FWORD PTR [esi+0x47ead808]
  41f023:	icebp  
  41f024:	sar    BYTE PTR [edx],0x56
  41f027:	(bad)  
  41f028:	sbb    al,BYTE PTR [edi-0x15]
  41f02b:	jae    0x41efda
  41f02d:	dec    edx
  41f02e:	shr    BYTE PTR [edi-0x71],cl
  41f031:	popa   
  41f032:	jmp    0x41f02e
  41f034:	mov    bh,0xbe
  41f036:	pop    es
  41f037:	and    BYTE PTR [esi-0x2d57009f],dl
  41f03d:	outs   dx,BYTE PTR ds:[esi]
  41f03e:	out    0xce,al
  41f040:	(bad)  
  41f042:	push   cs
  41f043:	jnp    0x41eff7
  41f045:	xchg   esi,eax
  41f046:	push   0x8e656193
  41f04b:	outs   dx,BYTE PTR ds:[esi]
  41f04c:	out    dx,al
  41f04d:	(bad)  
  41f04e:	aaa    
  41f04f:	shr    BYTE PTR ds:0xef26eab4,1
  41f055:	or     DWORD PTR [ecx+0x64786c46],esp
  41f05b:	push   ds
  41f05c:	(bad)  
  41f05e:	fsubr  QWORD PTR [edx+0x209e3f00]
  41f064:	arpl   ax,sp
  41f066:	and    al,0xb7
  41f068:	adc    al,0x5
  41f06a:	enter  0x6190,0xbf
  41f06e:	aas    
  41f06f:	push   esp
  41f070:	mov    al,0x8b
  41f072:	adc    esi,0xffffffcd
  41f075:	test   eax,esp
  41f077:	out    dx,eax
  41f078:	or     ebp,edi
  41f07a:	fstp   DWORD PTR [ebx-0x7f1a5ad2]
  41f080:	pop    ds
  41f081:	add    al,BYTE PTR [ebx-0x35b82fad]
  41f087:	inc    eax
  41f088:	inc    ecx
  41f089:	ds leave 
  41f08b:	test   al,0x9b
  41f08d:	test   DWORD PTR [ebx-0x12f9e52d],esi
  41f093:	xor    ch,BYTE PTR [ecx]
  41f095:	fmul   st,st(2)
  41f097:	scas   al,BYTE PTR es:[edi]
  41f098:	nop
  41f099:	cmp    al,0x38
  41f09b:	mov    ch,0x5e
  41f09d:	ds adc edx,ebp
  41f0a0:	and    eax,0x7c571025
  41f0a5:	sbb    dl,BYTE PTR [ebx-0x56]
  41f0a8:	and    bh,BYTE PTR [ecx-0x462e3a25]
  41f0ae:	mov    BYTE PTR [eax-0x58],cl
  41f0b1:	setae  bh
  41f0b4:	add    edx,esi
  41f0b6:	sbb    al,0xc3
  41f0b8:	and    DWORD PTR [ecx-0x27],edx
  41f0bb:	ins    DWORD PTR es:[edi],dx
  41f0bc:	push   es
  41f0bd:	mov    ebx,0xd323d85d
  41f0c2:	pop    edi
  41f0c3:	iret   
  41f0c4:	stos   DWORD PTR es:[edi],eax
  41f0c5:	pop    eax
  41f0c6:	daa    
  41f0c7:	add    BYTE PTR [ebx+0x51],ch
  41f0ca:	clc    
  41f0cb:	sub    al,0x8b
  41f0cd:	xor    ecx,DWORD PTR [esi-0x5ae392b3]
  41f0d3:	sti    
  41f0d4:	lock rol BYTE PTR [ecx+0x4ce9443f],cl
  41f0db:	xchg   esi,eax
  41f0dc:	sbb    ch,BYTE PTR [ecx+0x24]
  41f0df:	and    edx,ecx
  41f0e1:	pusha  
  41f0e2:	cmp    BYTE PTR [ecx],cl
  41f0e4:	in     eax,0x69
  41f0e6:	enter  0xaf70,0xcf
  41f0ea:	popf   
  41f0eb:	push   esp
  41f0ec:	dec    esp
  41f0ed:	mov    dh,0x82
  41f0ef:	add    BYTE PTR [ebx],bh
  41f0f1:	mov    edi,edx
  41f0f3:	fcom   QWORD PTR [esi-0x2cdc5f00]
  41f0f9:	sbb    eax,0x3211b4cd
  41f0fe:	inc    ecx
  41f0ff:	into   
  41f100:	mov    edi,0xa057c048
  41f105:	push   fs
  41f107:	add    al,0x2e
  41f109:	fist   WORD PTR [ebp+0x64944356]
  41f10f:	rol    DWORD PTR [eax-0x3a],1
  41f112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f113:	out    dx,eax
  41f114:	xchg   edx,eax
  41f115:	aas    
  41f116:	aam    0x8
  41f118:	or     DWORD PTR [eax+0x5ff0a4a4],edi
  41f11e:	inc    edi
  41f11f:	push   esp
  41f120:	mov    ebp,0xae9130e2
  41f125:	xchg   DWORD PTR [ecx],ebp
  41f127:	out    dx,eax
  41f128:	rcr    bl,1
  41f12a:	adc    DWORD PTR [ecx+eax*4-0x49],esp
  41f12e:	mov    edx,DWORD PTR [eax-0x1c]
  41f131:	lock and BYTE PTR [ebx-0x45b0e0a5],cl
  41f138:	mov    dh,0x33
  41f13a:	dec    edi
  41f13b:	xlat   BYTE PTR ds:[ebx]
  41f13c:	mov    ecx,0x6ad84edb
  41f141:	push   ds
  41f142:	sub    al,0x96
  41f144:	test   al,0xd
  41f146:	pop    ebp
  41f147:	mov    dh,0x1c
  41f149:	add    eax,0x319d21af
  41f14e:	pop    ss
  41f14f:	mov    ebx,0x1d5386fe
  41f154:	fwait
  41f155:	pop    edi
  41f156:	cmp    ch,bh
  41f158:	out    dx,eax
  41f159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f15a:	add    ah,BYTE PTR [edx]
  41f15c:	inc    eax
  41f15d:	neg    DWORD PTR [eax]
  41f15f:	xor    al,0x34
  41f161:	not    BYTE PTR [edi+0x3b]
  41f164:	sub    eax,0xed253d93
  41f169:	mov    al,0x1d
  41f16b:	daa    
  41f16c:	stos   DWORD PTR es:[edi],eax
  41f16d:	cdq    
  41f16e:	mov    edi,0xa29f801
  41f173:	jbe    0x41f1d5
  41f175:	dec    ebp
  41f176:	adc    eax,0x51348077
  41f17b:	mov    DWORD PTR [esi+0x44],0x35a3301e
  41f182:	push   ss
  41f183:	jecxz  0x41f110
  41f185:	jb     0x41f18f
  41f187:	mov    edx,0xedc5693a
  41f18c:	ror    ebp,1
  41f18e:	call   0xc8cd38a1
  41f193:	xchg   DWORD PTR [ecx-0x38454e02],edx
  41f199:	imul   ebp,DWORD PTR [eax+0x5e],0x3a2469ad
  41f1a0:	in     al,0xbf
  41f1a2:	dec    esp
  41f1a3:	push   ebp
  41f1a4:	pop    esp
  41f1a6:	inc    ecx
  41f1a7:	adc    BYTE PTR [edi+0x5f],dl
  41f1aa:	jle    0x41f226
  41f1ac:	inc    esp
  41f1ad:	adc    eax,0x866712cf
  41f1b2:	leave  
  41f1b3:	mov    ecx,0x46321ac5
  41f1b8:	jge    0x41f195
  41f1ba:	adc    DWORD PTR [eax+ebx*2-0x24],0x20
  41f1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1c0:	xchg   ebp,eax
  41f1c1:	clc    
  41f1c2:	push   esp
  41f1c3:	mov    eax,ds:0x7eb5af14
  41f1c8:	fistp  QWORD PTR [ecx+0x50]
  41f1cb:	dec    eax
  41f1cc:	mov    DWORD PTR [esi+0x63],edx
  41f1cf:	popf   
  41f1d0:	push   es
  41f1d1:	hlt    
  41f1d2:	loopne 0x41f1c4
  41f1d4:	cld    
  41f1d5:	sub    al,BYTE PTR ds:[ebx-0x2b6fa7a0]
  41f1dc:	dec    ecx
  41f1dd:	sahf   
  41f1de:	push   ebx
  41f1df:	aas    
  41f1e0:	xchg   edx,eax
  41f1e1:	nop
  41f1e2:	jle    0x41f1c2
  41f1e4:	mov    esi,0x46616389
  41f1e9:	ins    DWORD PTR es:[edi],dx
  41f1ea:	xor    DWORD PTR [ebp-0x30],edx
  41f1ed:	aam    0xdd
  41f1ef:	fcom   DWORD PTR ds:0x2f98ddbe
  41f1f5:	xchg   edi,eax
  41f1f6:	aad    0xcb
  41f1f8:	mov    ch,0x28
  41f1fa:	push   edx
  41f1fc:	jl     0x41f21e
  41f1fe:	mov    cl,0xaf
  41f200:	sbb    cl,BYTE PTR [ebx+ebp*4+0x13]
  41f204:	nop
  41f205:	jo     0x41f1cb
  41f207:	jmp    0x41f263
  41f209:	adc    ebp,ebp
  41f20b:	push   ecx
  41f20c:	push   ss
  41f20d:	jmp    0xed7de869
  41f212:	je     0x41f211
  41f214:	inc    edi
  41f215:	fnsave [esi]
  41f217:	sbb    BYTE PTR [ecx],ah
  41f219:	push   ebx
  41f21a:	adc    al,0xd9
  41f21c:	mov    cs,WORD PTR [esi-0x6d25043c]
  41f222:	sbb    eax,0x9c7af7d1
  41f227:	test   DWORD PTR [esp+esi*1],esp
  41f22a:	jnp    0x41f255
  41f22c:	jbe    0x41f1dc
  41f22e:	data16 jg 0x41f1ca
  41f231:	pop    ebx
  41f232:	pop    edi
  41f233:	mov    ah,0x41
  41f235:	or     ah,BYTE PTR [edx-0x5a9afa87]
  41f23b:	push   edi
  41f23c:	sub    al,0xce
  41f23e:	call   0x699e3377
  41f243:	xchg   edi,eax
  41f244:	mov    ebp,0xf9c6fe9d
  41f249:	in     al,0x98
  41f24b:	loop   0x41f213
  41f24d:	dec    esi
  41f24e:	jae    0x41f214
  41f250:	mov    bl,bl
  41f252:	jle    0x41f2a8
  41f254:	xor    BYTE PTR [edx-0x3fa475e4],bh
  41f25a:	repnz dec ebp
  41f25c:	xlat   BYTE PTR ds:[ebx]
  41f25d:	pop    ds
  41f25e:	xor    bh,BYTE PTR [ebp+0x7eafc3ab]
  41f264:	cmp    BYTE PTR [eax],bh
  41f266:	loope  0x41f296
  41f268:	stc    
  41f269:	add    eax,0x8fdbab94
  41f26e:	cmp    DWORD PTR [eax+0x1bc2d4e6],esi
  41f274:	in     al,0x26
  41f276:	dec    ecx
  41f277:	fldcw  WORD PTR [edi+0x224c4167]
  41f27d:	mov    eax,0x14ca57ea
  41f282:	rcr    ah,1
  41f284:	xor    ch,BYTE PTR [esp+eax*2-0xb4e224b]
  41f28b:	cmp    cl,BYTE PTR [ebx-0x64b6a4ed]
  41f291:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f293:	xor    ebp,DWORD PTR [ecx]
  41f295:	pop    eax
  41f296:	and    ah,BYTE PTR [esi+0x26]
  41f299:	inc    esi
  41f29a:	dec    edi
  41f29b:	imul   ebp,DWORD PTR [esp+ecx*8+0x4b],0x71
  41f2a0:	into   
  41f2a1:	sub    ebx,esi
  41f2a3:	inc    edi
  41f2a4:	pop    esp
  41f2a5:	xor    al,0x69
  41f2a7:	mov    ecx,0xf8f68ecf
  41f2ac:	jmp    0x41f25f
  41f2ae:	icebp  
  41f2af:	xor    DWORD PTR [esp+eiz*8],ecx
  41f2b2:	idiv   BYTE PTR [ebx-0x14211e2f]
  41f2b8:	lea    esi,[ebx]
  41f2ba:	mov    dh,0x93
  41f2bc:	sbb    DWORD PTR [eax+0x3145564a],0xe810f45f
  41f2c6:	push   ecx
  41f2c7:	pop    edx
  41f2c8:	or     al,0x67
  41f2ca:	int3   
  41f2cb:	in     eax,0x66
  41f2cd:	push   ds
  41f2ce:	mov    ch,0xe6
  41f2d0:	in     al,0xca
  41f2d2:	mov    dl,0x7d
  41f2d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d5:	out    0xc1,al
  41f2d7:	ret    0x19f3
  41f2da:	mov    ebp,DWORD PTR [ebx-0x59]
  41f2dd:	retf   
  41f2de:	call   0x2569:0xe0cc95ec
  41f2e5:	mov    ds:0x153ce86,eax
  41f2ea:	fs sbb eax,0x8aa6aa2e
  41f2f0:	aas    
  41f2f1:	ja     0x41f2b4
  41f2f3:	dec    ebp
  41f2f4:	cdq    
  41f2f5:	mov    ds:0xc30df126,al
  41f2fa:	aaa    
  41f2fb:	dec    edi
  41f2fc:	inc    esp
  41f2fd:	(bad)  [edx]
  41f2ff:	push   ecx
  41f300:	sub    eax,0x3e8c6949
  41f305:	adc    DWORD PTR [edi-0x6a7ef80a],eax
  41f30b:	jge    0x41f35d
  41f30d:	fidivr WORD PTR [edx-0x33]
  41f310:	pop    ebx
  41f311:	mov    ebp,0xa60faadb
  41f316:	jae    0x41f2fb
  41f318:	xor    al,0x6f
  41f31a:	ja     0x41f2a4
  41f31c:	repnz adc esp,DWORD PTR [ecx+0x38a277a9]
  41f323:	add    BYTE PTR [ecx-0x52e41d5b],cl
  41f329:	xor    BYTE PTR [eax-0x7067732a],dh
  41f32f:	ds or  ecx,edx
  41f332:	xor    dl,dl
  41f334:	add    al,0x69
  41f336:	mov    esi,0x8487c840
  41f33b:	js     0x41f3a0
  41f33d:	out    0x46,eax
  41f33f:	enter  0xc3be,0xe8
  41f343:	call   0x8222371e
  41f348:	cdq    
  41f349:	and    ecx,edx
  41f34b:	outs   dx,BYTE PTR ds:[esi]
  41f34c:	push   0x6f
  41f34e:	out    0x4e,al
  41f350:	pushf  
  41f351:	hlt    
  41f352:	mov    esi,0x5ed219df
  41f357:	fmul   st,st(0)
  41f359:	xor    eax,0x10063776
  41f35e:	fs xor al,0x2f
  41f361:	mov    cs,WORD PTR [eax]
  41f363:	rcl    DWORD PTR [ebx],1
  41f365:	mov    eax,0xd6479185
  41f36a:	sbb    al,0xf8
  41f36c:	aad    0x9d
  41f36e:	imul   ebx,edx,0x7e
  41f371:	add    eax,0x719f0ca6
  41f376:	xor    eax,esi
  41f378:	loope  0x41f36f
  41f37a:	xchg   esi,eax
  41f37b:	mov    ecx,0x5b3cfb36
  41f380:	push   edx
  41f381:	dec    eax
  41f382:	fdiv   QWORD PTR ds:0x76e4e526
  41f388:	rol    DWORD PTR [ecx+0x76],cl
  41f38b:	mov    bh,0x4e
  41f38d:	les    ecx,FWORD PTR [ebp+0x1af407a7]
  41f393:	scas   eax,DWORD PTR es:[edi]
  41f394:	jno    0x41f3da
  41f396:	inc    edi
  41f397:	xor    edi,eax
  41f399:	dec    esp
  41f39a:	jg     0x41f375
  41f39c:	jmp    0x41f343
  41f39e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41f3a0:	mov    dl,0xf1
  41f3a2:	mov    ch,0x2e
  41f3a4:	dec    esi
  41f3a5:	(bad)  
  41f3a6:	das    
  41f3a7:	retf   
  41f3a8:	cmc    
  41f3a9:	ins    DWORD PTR es:[edi],dx
  41f3aa:	mov    ah,0x79
  41f3ac:	jmp    0xb194:0x2edc2b6
  41f3b3:	sub    esp,DWORD PTR [ecx]
  41f3b5:	jge    0x41f433
  41f3b7:	dec    ebp
  41f3b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b9:	mov    BYTE PTR gs:[edi-0x4acab9fb],dl
  41f3c0:	jge    0x41f430
  41f3c2:	aas    
  41f3c3:	cld    
  41f3c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3c5:	dec    ebx
  41f3c6:	lds    esi,FWORD PTR [eax-0x56]
  41f3c9:	dec    esp
  41f3ca:	jp     0x41f406
  41f3cc:	jbe    0x41f3c2
  41f3ce:	mov    dl,0xcd
  41f3d0:	cld    
  41f3d1:	sbb    eax,DWORD PTR [esi+0x28]
  41f3d4:	retf   
  41f3d5:	rcr    esp,cl
  41f3d7:	bound  esp,QWORD PTR [ebx+0x1f]
  41f3da:	call   0x331e:0xb50eea07
  41f3e1:	ss sahf 
  41f3e3:	pop    edi
  41f3e4:	mov    ch,0xa6
  41f3e6:	xchg   esp,eax
  41f3e7:	xor    edx,esp
  41f3e9:	in     al,dx
  41f3ea:	mul    BYTE PTR ss:[ebx-0x4409de3d]
  41f3f1:	jmp    0x41f45b
  41f3f3:	inc    esp
  41f3f4:	adc    eax,0x3eefd4c0
  41f3f9:	dec    edx
  41f3fa:	stc    
  41f3fb:	mov    WORD PTR [edx-0x639569e0],gs
  41f401:	cs mov edx,0x7f635d5d
  41f407:	jecxz  0x41f3c6
  41f409:	pop    es
  41f40a:	inc    edi
  41f40b:	xor    ebp,DWORD PTR [ebp-0x208bd264]
  41f411:	dec    edi
  41f412:	rcr    DWORD PTR [edi],cl
  41f414:	jl     0x41f3bb
  41f416:	xor    eax,0xbfb25dce
  41f41b:	ja     0x41f3ce
  41f41d:	jecxz  0x41f3da
  41f41f:	adc    DWORD PTR [ecx+ecx*4-0x245b8aad],esp
  41f426:	(bad)  
  41f427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f428:	pop    ss
  41f429:	lds    ebx,FWORD PTR [edi-0x4aba9d94]
  41f42f:	mov    eax,0xf31e4d50
  41f434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f435:	rol    DWORD PTR [esp+ebp*2+0x70b23f85],1
  41f43c:	ret    0xa97e
  41f43f:	mov    ebp,esp
  41f441:	call   0x92387029
  41f446:	adc    BYTE PTR [ecx],cl
  41f448:	mov    edx,0x6eb25502
  41f44d:	push   esi
  41f44e:	inc    ebx
  41f44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f450:	loopne 0x41f4c7
  41f452:	jp     0x41f4a1
  41f454:	dec    ebp
  41f455:	push   ss
  41f456:	ficomp WORD PTR [esi-0x43a9db93]
  41f45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f45d:	mov    ebx,DWORD PTR ds:[ecx]
  41f460:	inc    ebp
  41f461:	icebp  
  41f462:	jp     0x41f43a
  41f464:	cli    
  41f465:	jae    0x41f3eb
  41f467:	lahf   
  41f468:	stc    
  41f469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f46a:	ret    
  41f46b:	dec    esp
  41f46c:	jge    0x41f44b
  41f46e:	inc    esi
  41f46f:	(bad)  
  41f470:	jg     0x41f460
  41f472:	push   0xffffffc0
  41f474:	jb     0x41f481
  41f476:	int3   
  41f477:	inc    ebx
  41f478:	ret    
  41f479:	jns    0x41f4a6
  41f47b:	pop    ebp
  41f47c:	and    al,BYTE PTR [eax-0x7a52c32f]
  41f482:	xor    al,0xf6
  41f484:	mov    ah,0x67
  41f486:	xchg   DWORD PTR [ecx-0x6821bbbf],ebx
  41f48c:	sahf   
  41f48d:	mov    bh,0x5d
  41f48f:	and    BYTE PTR [ebx],0x79
  41f492:	sahf   
  41f493:	jno    0x41f42d
  41f495:	mov    dl,0xa
  41f497:	les    edx,FWORD PTR [edx+edi*4+0x4f1acd99]
  41f49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f49f:	jno    0x41f47f
  41f4a1:	cmc    
  41f4a2:	or     eax,0x6d61557b
  41f4a7:	inc    ebp
  41f4a8:	hlt    
  41f4a9:	jle    0x41f4f2
  41f4ab:	pop    edx
  41f4ac:	les    edx,FWORD PTR [ebx]
  41f4ae:	mov    eax,0xb719d670
  41f4b3:	inc    edi
  41f4b4:	lods   eax,DWORD PTR ds:[esi]
  41f4b5:	inc    ecx
  41f4b6:	(bad)
  41f4b9:	or     eax,0x33dad28a
  41f4be:	jge    0x41f52f
  41f4c0:	sbb    DWORD PTR [edx],esp
  41f4c2:	xor    ebp,DWORD PTR [ebx+0x169b9088]
  41f4c8:	nop
  41f4c9:	mov    DWORD PTR [ebx-0x42],edx
  41f4cc:	popa   
  41f4cd:	adc    al,0x6f
  41f4cf:	adc    al,0x74
  41f4d1:	dec    ebp
  41f4d2:	adc    DWORD PTR [ebx+0x2a],ebp
  41f4d5:	mov    edx,0xb734cc4f
  41f4da:	aad    0x87
  41f4dc:	cmp    DWORD PTR [ebx+0x24],edx
  41f4df:	int    0x8d
  41f4e1:	jmp    FWORD PTR ds:0xb2df7584
  41f4e7:	pop    ebx
  41f4e8:	dec    esi
  41f4e9:	or     ebp,edi
  41f4eb:	jno    0x41f559
  41f4ed:	inc    ebp
  41f4ee:	les    ebx,FWORD PTR [ebp-0x3]
  41f4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4f2:	jns    0x41f499
  41f4f4:	(bad)  
  41f4f5:	loopne 0x41f4ae
  41f4f7:	sbb    eax,0xb587ccd2
  41f4fc:	out    0xe2,eax
  41f4fe:	jmp    FWORD PTR [edx]
  41f500:	inc    esp
  41f501:	add    BYTE PTR [esi],bl
  41f503:	pop    ebp
  41f504:	hlt    
  41f505:	fisubr DWORD PTR [eax-0x701a5011]
  41f50b:	lods   al,BYTE PTR ds:[esi]
  41f50c:	jmp    0x41f4f8
  41f50e:	mov    ah,0x40
  41f510:	bnd jmp 0x41f578
  41f513:	push   ss
  41f514:	sub    dh,BYTE PTR [ecx]
  41f516:	push   es
  41f517:	mov    ds:0x4975e6c2,al
  41f51c:	out    dx,al
  41f51d:	(bad)  
  41f51e:	cs lahf 
  41f520:	add    ch,BYTE PTR [ebp-0x4b90b64]
  41f526:	scas   eax,DWORD PTR es:[edi]
  41f527:	dec    ebp
  41f528:	jmp    0x41f520
  41f52a:	xor    esi,ecx
  41f52c:	bound  ebp,QWORD PTR [ecx]
  41f52e:	xchg   ebp,eax
  41f52f:	adc    DWORD PTR [ecx+0x44],0xfffffff2
  41f533:	jge    0x41f551
  41f535:	fidivr WORD PTR [eax]
  41f537:	sbb    BYTE PTR [edi-0x11b1ef16],0xb1
  41f53e:	lods   al,BYTE PTR ds:[esi]
  41f53f:	inc    esp
  41f540:	in     al,0x13
  41f542:	bnd jae 0x41f59c
  41f545:	dec    eax
  41f546:	(bad)  
  41f547:	je     0x41f596
  41f549:	in     eax,dx
  41f54a:	imul   ecx,DWORD PTR [eax-0xe],0xfffffffe
  41f54e:	(bad)  
  41f54f:	sti    
  41f550:	fisub  WORD PTR [esi]
  41f552:	sbb    BYTE PTR [bx+di-0x19],0x73
  41f557:	call   0x9e6eb3
  41f55c:	pop    ecx
  41f55d:	icebp  
  41f55e:	bound  edi,QWORD PTR [edx]
  41f560:	daa    
  41f561:	cmp    BYTE PTR [edi+0x27],0x8a
  41f565:	leave  
  41f566:	and    al,0xa7
  41f568:	jmp    0x41f52f
  41f56a:	xor    al,0x5e
  41f56c:	es arpl sp,ax
  41f56f:	in     eax,0x3c
  41f571:	fcom   DWORD PTR [ebp+0x37a1d12e]
  41f577:	pop    esp
  41f578:	into   
  41f579:	(bad)  
  41f57a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f57b:	dec    esi
  41f57c:	fld    QWORD PTR [eax+0x73b88b40]
  41f582:	iret   
  41f583:	addr16 es mov ah,0x34
  41f587:	dec    DWORD PTR [ebp+edx*1-0x26]
  41f58b:	nop
  41f58c:	dec    edi
  41f58d:	pop    edx
  41f58e:	mov    al,ds:0x4f5f4bb7
  41f593:	push   ss
  41f594:	push   eax
  41f595:	fwait
  41f596:	aam    0x67
  41f598:	icebp  
  41f599:	scas   al,BYTE PTR es:[edi]
  41f59a:	lods   al,BYTE PTR ds:[esi]
  41f59b:	scas   al,BYTE PTR es:[edi]
  41f59c:	iret   
  41f59d:	dec    edx
  41f59e:	mov    ebp,0x11688b5a
  41f5a3:	sbb    al,dl
  41f5a5:	mov    cs,edx
  41f5a7:	fld    QWORD PTR [ebp-0x73]
  41f5aa:	cmp    DWORD PTR [eax+ebp*4],ebx
  41f5ad:	pop    esi
  41f5ae:	outs   dx,DWORD PTR ds:[esi]
  41f5af:	jmp    0xbc67:0x46fcd8ec
  41f5b6:	mov    esi,0xf33dff8f
  41f5bb:	inc    esp
  41f5bc:	lahf   
  41f5bd:	sahf   
  41f5be:	jb     0x41f5eb
  41f5c0:	jmp    0xa144:0x98a2db07
  41f5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5c8:	xchg   edx,eax
  41f5c9:	test   edi,0x555d4aa6
  41f5cf:	adc    ebp,0x668f7f04
  41f5d5:	push   esi
  41f5d6:	pop    esp
  41f5d7:	mov    al,0xbf
  41f5d9:	or     al,0xa3
  41f5db:	push   ecx
  41f5dc:	cli    
  41f5dd:	cs sub al,0xf
  41f5e0:	aaa    
  41f5e1:	or     BYTE PTR ds:0x6bcfdc39,0xc7
  41f5e8:	repnz cmp BYTE PTR [edx+ebx*4],dh
  41f5ec:	int3   
  41f5ed:	xor    ecx,edx
  41f5ef:	sub    bl,BYTE PTR [ecx-0x5c202975]
  41f5f5:	lds    esp,FWORD PTR ds:0xc9d96138
  41f5fb:	retf   
  41f5fc:	mov    al,ds:0xc94b5ff4
  41f601:	out    0xa0,eax
  41f603:	jmp    0xbc7a2bf1
  41f608:	adc    eax,0x2552cfa8
  41f60d:	dec    edi
  41f60e:	fnsave [ebp+edi*4-0x5a]
  41f612:	push   es
  41f613:	popf   
  41f614:	sub    eax,0xb171ac7d
  41f619:	int    0xf6
  41f61b:	inc    edi
  41f61c:	add    al,0xde
  41f61e:	enter  0xb2e4,0xcc
  41f622:	mov    eax,0x6b24e304
  41f627:	pop    eax
  41f628:	fcomp  DWORD PTR [eax+0x7c9091cf]
  41f62e:	scas   eax,DWORD PTR es:[edi]
  41f62f:	pusha  
  41f630:	outs   dx,DWORD PTR ds:[esi]
  41f631:	jns    0x41f612
  41f633:	scas   al,BYTE PTR es:[edi]
  41f634:	sbb    bl,cl
  41f636:	inc    edx
  41f637:	and    al,0xd1
  41f639:	mov    ch,0x5
  41f63b:	mov    bh,0x88
  41f63d:	inc    ebx
  41f63e:	int    0x35
  41f640:	xlat   BYTE PTR ds:[ebx]
  41f641:	stc    
  41f642:	mov    ecx,0x12468ea3
  41f647:	pusha  
  41f648:	jne    0x41f62b
  41f64a:	mov    ebx,0x1390a1d5
  41f64f:	pusha  
  41f650:	icebp  
  41f651:	mov    cs,WORD PTR [edi]
  41f653:	setl   bh
  41f656:	pop    ss
  41f657:	jo     0x41f679
  41f659:	xchg   ecx,esp
  41f65b:	test   DWORD PTR [edi-0x70],0xc41a3fe9
  41f662:	out    0xf2,eax
  41f664:	cwde   
  41f665:	div    BYTE PTR [eax+0x7f3171ea]
  41f66b:	xchg   edi,eax
  41f66c:	jae    0x41f698
  41f66e:	xchg   ecx,eax
  41f66f:	jmp    0x41f66e
  41f671:	xchg   ebx,eax
  41f672:	call   FWORD PTR [eax-0x46]
  41f675:	jmp    0x41f632
  41f677:	jae    0x41f656
  41f679:	fincstp 
  41f67b:	test   DWORD PTR [ecx+0x56],edx
  41f67e:	jno    0x41f693
  41f680:	sbb    ch,BYTE PTR ds:0x6d211204
  41f686:	mov    eax,0xc6a73ef7
  41f68b:	repz cmp BYTE PTR [ebp+eiz*8-0x52f8c8fb],al
  41f693:	sub    DWORD PTR [ebx+0x71],esi
  41f696:	xchg   ecx,eax
  41f697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f698:	cmp    eax,0xf6357329
  41f69d:	or     eax,0x3e08e9a3
  41f6a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6a3:	int    0xe5
  41f6a5:	test   eax,0xddf5e01d
  41f6aa:	pushf  
  41f6ab:	clc    
  41f6ac:	push   eax
  41f6ad:	out    0xca,al
  41f6af:	pop    ecx
  41f6b0:	xchg   esp,eax
  41f6b1:	dec    esp
  41f6b2:	mov    ecx,0x25872a54
  41f6b7:	out    0xc0,al
  41f6b9:	pop    edx
  41f6ba:	jne    0x41f70c
  41f6bc:	inc    esp
  41f6bd:	and    edx,DWORD PTR [ebp+0x20bdc791]
  41f6c3:	jecxz  0x41f65d
  41f6c5:	sbb    ah,BYTE PTR [ebp-0x5a]
  41f6c8:	add    BYTE PTR [ecx+0x5f],al
  41f6cb:	add    eax,0x83d237e0
  41f6d0:	call   FWORD PTR [ebp+0x62]
  41f6d3:	mov    ecx,0x3b6649e0
  41f6d8:	fwait
  41f6d9:	or     al,0x5d
  41f6db:	push   0xffffffb1
  41f6dd:	mov    bl,0xf4
  41f6df:	scas   al,BYTE PTR es:[edi]
  41f6e0:	fdivr  QWORD PTR cs:[esp+edi*1]
  41f6e4:	ja     0x41f690
  41f6e6:	dec    ecx
  41f6e7:	ins    DWORD PTR es:[edi],dx
  41f6e8:	es push 0xfffffff8
  41f6eb:	imul   ebp,DWORD PTR [ebx-0x53],0xc
  41f6ef:	or     al,0x32
  41f6f1:	adc    DWORD PTR ds:0x4d6e2456,eax
  41f6f7:	push   ebp
  41f6f8:	mov    edx,0x16ed604d
  41f6fd:	imul   esi,DWORD PTR [eax+esi*4+0x770dd296],0xffffffc0
  41f705:	jb     0x41f6ab
  41f707:	scas   al,BYTE PTR es:[edi]
  41f708:	adc    al,0x69
  41f70a:	test   al,0x6
  41f70c:	or     eax,0x6850bcfd
  41f711:	pop    ebp
  41f712:	(bad)  
  41f713:	dec    BYTE PTR [esi-0x72]
  41f716:	mov    cl,0x68
  41f718:	(bad)  
  41f719:	xor    DWORD PTR [ecx],eax
  41f71b:	dec    ebp
  41f71c:	jp     0x41f76b
  41f71e:	(bad)
  41f721:	stos   DWORD PTR es:[edi],eax
  41f722:	das    
  41f723:	xor    ebp,DWORD PTR ds:0xd97681d1
  41f729:	pop    esi
  41f72a:	fidivr DWORD PTR [ebp+0x75b0f5df]
  41f730:	popa   
  41f731:	jae    0x41f6ca
  41f733:	push   es
  41f734:	stos   DWORD PTR es:[edi],eax
  41f735:	and    DWORD PTR [edx],0x705e00f3
  41f73b:	adc    ecx,DWORD PTR [eax+0x63cc0d9b]
  41f741:	push   ebx
  41f742:	add    al,0x92
  41f744:	(bad)  
  41f745:	hlt    
  41f746:	aam    0xa4
  41f748:	repnz dec edi
  41f74a:	add    eax,0x2b8e5c83
  41f74f:	push   ebx
  41f750:	imul   DWORD PTR [ebx+0x85c6b4f]
  41f756:	xchg   esi,eax
  41f757:	out    0x40,eax
  41f759:	retf   
  41f75a:	cli    
  41f75b:	xor    edx,ebp
  41f75d:	iret   
  41f75e:	xor    edx,edi
  41f760:	fild   DWORD PTR [eax+ecx*8+0x9]
  41f764:	add    eax,0xc8625b5c
  41f769:	sub    al,BYTE PTR [ecx+eax*2-0x34648bfb]
  41f770:	lds    edx,FWORD PTR [edi-0x6051e879]
  41f776:	sar    DWORD PTR [esi+eax*4],1
  41f779:	jmp    0xa3ee8648
  41f77e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f77f:	jns    0x41f757
  41f781:	push   DWORD PTR [esi]
  41f783:	xchg   esp,eax
  41f784:	push   eax
  41f785:	or     al,0xde
  41f787:	(bad)  
  41f788:	dec    ecx
  41f789:	push   0xffffffcf
  41f78b:	xor    esi,DWORD PTR [bx+di]
  41f78e:	iret   
  41f78f:	nop
  41f790:	mov    es,WORD PTR [edi+0x643b9f11]
  41f796:	or     DWORD PTR [ecx],edx
  41f798:	dec    edx
  41f799:	out    0x9d,al
  41f79b:	mov    ds:0xb41b612b,al
  41f7a0:	(bad)  
  41f7a1:	mov    cl,0xeb
  41f7a3:	aam    0x7d
  41f7a5:	cmp    al,0xa0
  41f7a7:	sbb    DWORD PTR [edi],ebx
  41f7a9:	(bad)  
  41f7aa:	je     0x41f744
  41f7ac:	adc    bh,bh
  41f7ae:	dec    edi
  41f7af:	jns    0x41f804
  41f7b1:	retf   0xbea6
  41f7b4:	mov    eax,0xc9ad7d3b
  41f7b9:	cmp    al,0xbf
  41f7bb:	arpl   WORD PTR [ebx+0x3d66e761],si
  41f7c1:	and    DWORD PTR [esi-0x6c],0x1e
  41f7c5:	sub    eax,0xb6de2e7b
  41f7ca:	inc    esi
  41f7cb:	pop    ecx
  41f7cc:	push   cs
  41f7cd:	sahf   
  41f7ce:	pop    ss
  41f7cf:	push   edx
  41f7d0:	les    esi,FWORD PTR [ebx+0x3db97dc5]
  41f7d6:	sbb    dl,bl
  41f7d8:	or     BYTE PTR [ecx+0x34],ch
  41f7db:	sub    ch,cl
  41f7dd:	ss retf 
  41f7df:	ret    
  41f7e0:	(bad)  
  41f7e1:	and    edi,DWORD PTR [ebx-0x20]
  41f7e4:	mov    cl,0xea
  41f7e6:	pop    ecx
  41f7e7:	adc    ah,BYTE PTR [esi+0x2e]
  41f7ea:	mov    ecx,0x38828cf5
  41f7ef:	lock (bad) 
  41f7f1:	scas   eax,DWORD PTR es:[edi]
  41f7f2:	repnz dec ecx
  41f7f4:	aaa    
  41f7f5:	(bad)
  41f7f8:	cmp    eax,0xab210fb5
  41f7fd:	jg     0x41f7c5
  41f7ff:	xchg   edi,eax
  41f800:	push   0xffffff90
  41f802:	cmp    ch,ah
  41f804:	push   esp
  41f805:	xchg   ebp,eax
  41f806:	faddp  st(5),st
  41f808:	pop    esp
  41f809:	push   esp
  41f80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f80b:	(bad)  
  41f80c:	xchg   ebx,eax
  41f80d:	ds ret 0x122f
  41f811:	dec    ebx
  41f812:	mov    edi,ebx
  41f814:	fisub  DWORD PTR [ebp+eax*8+0x53]
  41f818:	mov    ebx,0x952f5cdb
  41f81d:	ins    BYTE PTR es:[edi],dx
  41f81e:	clc    
  41f81f:	ja     0x41f885
  41f821:	and    dh,BYTE PTR [esi+0x226aeb2d]
  41f827:	jne    0x41f879
  41f829:	(bad)  
  41f82b:	cmp    eax,0xa19a329c
  41f830:	(bad)  
  41f832:	popa   
  41f833:	aad    0x6a
  41f835:	cs ds push 0xb82841bd
  41f83c:	call   0x7a2:0x7511b50b
  41f843:	rcr    BYTE PTR [esi-0x3862cd7b],cl
  41f849:	add    eax,0x9aa925ce
  41f84e:	fimul  DWORD PTR [esi]
  41f850:	add    DWORD PTR ds:0xc21beeb7,ebx
  41f856:	(bad)  
  41f858:	add    al,0x91
  41f85a:	(bad)  
  41f85b:	cmp    esp,DWORD PTR [edi-0x4c]
  41f85e:	or     dh,BYTE PTR [edx+0x3b]
  41f861:	ja     0x41f7e4
  41f863:	cli    
  41f864:	ret    0x2561
  41f867:	ins    DWORD PTR es:[edi],dx
  41f868:	xor    ecx,ecx
  41f86a:	jmp    0x41f883
  41f86c:	dec    ecx
  41f86d:	ds mov cl,0x46
  41f870:	fnstsw WORD PTR [esi]
  41f872:	mov    BYTE PTR [edx+0x8],bl
  41f875:	sbb    al,0xf4
  41f877:	in     eax,0x8f
  41f879:	imul   bh
  41f87b:	int3   
  41f87c:	test   al,0x77
  41f87e:	xchg   esp,eax
  41f87f:	inc    edi
  41f880:	cmp    eax,0x9c6fd158
  41f885:	outs   dx,BYTE PTR ds:[esi]
  41f886:	push   ecx
  41f887:	xchg   DWORD PTR [ecx],ebp
  41f889:	adc    ebx,DWORD PTR [ebx-0x45]
  41f88c:	cwde   
  41f88d:	and    BYTE PTR [ebx-0x52],bl
  41f890:	sar    ah,1
  41f892:	pop    ebp
  41f893:	imul   esp,DWORD PTR [ebx-0x19af444b],0x3eba3328
  41f89d:	jle    0x41f8df
  41f89f:	sub    DWORD PTR [esi+0x18],eax
  41f8a2:	adc    al,0x13
  41f8a4:	mov    al,0xba
  41f8a6:	ds hlt 
  41f8a8:	and    eax,0xe3ad9c3e
  41f8ad:	out    dx,al
  41f8ae:	lock (bad) 
  41f8b2:	mov    ds:0xaa328433,eax
  41f8b7:	stos   DWORD PTR es:[edi],eax
  41f8b8:	int    0xb8
  41f8ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8bb:	dec    esp
  41f8bc:	jne    0x41f86b
  41f8be:	mov    ds:0xb259fb5e,al
  41f8c3:	xor    BYTE PTR ds:0xe6bfa997,bh
  41f8c9:	push   es
  41f8ca:	jbe    0x41f8ee
  41f8cc:	ins    BYTE PTR es:[edi],dx
  41f8cd:	xor    edx,esi
  41f8cf:	sbb    ebx,DWORD PTR [eax-0x7d]
  41f8d2:	pop    es
  41f8d3:	or     esi,DWORD PTR cs:[ecx]
  41f8d6:	mov    esp,0x3c124b2c
  41f8db:	in     eax,0x95
  41f8dd:	pop    esi
  41f8de:	cdq    
  41f8df:	cwde   
  41f8e0:	and    ebp,edx
  41f8e2:	stos   BYTE PTR es:[edi],al
  41f8e3:	jge    0x41f8d0
  41f8e5:	ror    esi,cl
  41f8e7:	sbb    cl,BYTE PTR [edx+0x19ced979]
  41f8ed:	jno    0x41f88b
  41f8ef:	xchg   edx,ecx
  41f8f1:	cmp    eax,0x5e8a78dc
  41f8f6:	psubsw mm0,QWORD PTR [eax+0x4a]
  41f8fa:	push   es
  41f8fb:	xor    DWORD PTR [ecx-0x14d53043],edi
  41f901:	not    ebx
  41f903:	jmp    0x41f8e1
  41f905:	fcom   QWORD PTR [edi+0x32b3891a]
  41f90b:	cmp    eax,0x1a885799
  41f910:	pop    ebp
  41f911:	sub    dh,ch
  41f913:	ja     0x41f8ba
  41f915:	adc    eax,0x7dd21a5a
  41f91a:	aaa    
  41f91b:	jge    0x41f984
  41f91d:	cli    
  41f91e:	mov    cs:0xf66dc6e7,eax
  41f924:	aaa    
  41f925:	jae    0x41f900
  41f927:	mov    ah,0xc7
  41f929:	dec    edx
  41f92a:	ss int 0xae
  41f92d:	adc    edi,DWORD PTR [ebx+0x39b7a9b8]
  41f933:	lods   eax,DWORD PTR ds:[esi]
  41f934:	mov    ds:0xe4e2dc13,eax
  41f939:	imul   ecx,DWORD PTR [ecx+0x742118bb],0xcc4561d4
  41f943:	adc    al,0x7a
  41f946:	jp     0x41f936
  41f948:	cmp    al,BYTE PTR [edx]
  41f94a:	test   eax,0x73c41178
  41f94f:	pop    ds
  41f950:	dec    edi
  41f951:	cs or  bl,dh
  41f954:	inc    ecx
  41f955:	je     0x41f91b
  41f957:	xchg   DWORD PTR ds:0xfe004f80,edx
  41f95d:	mov    ah,0x66
  41f95f:	lds    ebx,FWORD PTR [ebp+ecx*2+0x44]
  41f963:	repnz add dh,BYTE PTR [edi]
  41f966:	jg     0x41f957
  41f968:	fcom   st(7)
  41f96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f96b:	or     eax,0x43b9c81c
  41f970:	fwait
  41f971:	mov    esp,0xcb0da2af
  41f976:	fst    QWORD PTR [edi-0x3b]
  41f979:	pop    esp
  41f97a:	sbb    eax,0xc0711303
  41f97f:	inc    ecx
  41f980:	test   cl,ch
  41f982:	test   al,0x4a
  41f984:	fwait
  41f985:	or     DWORD PTR [ebx],esi
  41f987:	inc    esi
  41f988:	jb     0x41f9fc
  41f98a:	test   BYTE PTR [esi],bh
  41f98c:	push   0x48
  41f98e:	xor    DWORD PTR [edx-0x6ea1be9c],ecx
  41f994:	lock jnp 0x41fa0d
  41f997:	les    eax,FWORD PTR [eax+0x66]
  41f99a:	push   cs
  41f99b:	mov    edx,0x62a0273b
  41f9a0:	shr    DWORD PTR [esi+0x4],cl
  41f9a3:	push   ecx
  41f9a4:	mov    ah,0x5e
  41f9a6:	cmp    eax,0x88b42fd8
  41f9ab:	mov    DWORD PTR [ecx-0x38],0x96141e52
  41f9b2:	sar    DWORD PTR [ebx-0x57],1
  41f9b5:	inc    ecx
  41f9b6:	jno    0x41f94e
  41f9b8:	jo     0x41f94d
  41f9ba:	cs ds or al,0x8f
  41f9be:	call   0x3cdd:0x1ed2caf2
  41f9c5:	pop    ecx
  41f9c6:	inc    edx
  41f9c7:	test   DWORD PTR [ebp+0x2a97036],esp
  41f9cd:	(bad)  
  41f9ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9cf:	add    al,0xcf
  41f9d1:	mov    ah,0x64
  41f9d3:	hlt    
  41f9d4:	dec    eax
  41f9d5:	ds jl  0x41f9a3
  41f9d8:	and    eax,0xdd506547
  41f9dd:	pusha  
  41f9de:	xchg   ebx,eax
  41f9df:	dec    DWORD PTR [esi-0x49]
  41f9e2:	out    dx,eax
  41f9e3:	or     eax,DWORD PTR [ebx+0x31108d20]
  41f9e9:	sub    ebx,DWORD PTR [esi+0x6625f8]
  41f9ef:	inc    eax
  41f9f0:	xor    cl,BYTE PTR [edi+ecx*8+0x2d]
  41f9f4:	clc    
  41f9f5:	out    dx,al
  41f9f6:	sahf   
  41f9f7:	pusha  
  41f9f8:	fs inc ecx
  41f9fa:	lods   eax,DWORD PTR ds:[esi]
  41f9fb:	ror    BYTE PTR [edi+0x896859b],cl
  41fa01:	pop    ss
  41fa02:	bnd jae 0x41fa08
  41fa05:	imul   ebp,DWORD PTR [ebp-0x16],0xdb3a7424
  41fa0c:	push   edi
  41fa0d:	pop    es
  41fa0e:	and    ebx,edx
  41fa10:	in     eax,0x96
  41fa12:	pusha  
  41fa13:	addr16 jnp 0x41f9ee
  41fa16:	stos   BYTE PTR es:[edi],al
  41fa17:	shl    BYTE PTR [esp+ebx*4-0x13aec1a2],0x89
  41fa1f:	out    0xf2,al
  41fa21:	adc    BYTE PTR [esi+0x55],cl
  41fa24:	pop    esi
  41fa25:	push   ebx
  41fa26:	dec    eax
  41fa27:	shl    eax,1
  41fa29:	test   BYTE PTR [ebx-0x4063265b],ah
  41fa2f:	aas    
  41fa30:	push   esp
  41fa31:	push   ebx
  41fa32:	fcmovnu st,st(5)
  41fa34:	or     BYTE PTR [ecx+ecx*8+0x7ba0b7d],0xba
  41fa3c:	or     bl,BYTE PTR [eax-0x18e5bac2]
  41fa42:	mov    ah,BYTE PTR ss:[esi]
  41fa45:	push   eax
  41fa46:	lea    ebx,ds:0x192c251d
  41fa4c:	daa    
  41fa4d:	xchg   ebx,eax
  41fa4e:	das    
  41fa4f:	clc    
  41fa50:	ins    DWORD PTR es:[edi],dx
  41fa51:	mov    edx,DWORD PTR [edx-0x5a]
  41fa54:	call   0xcf928495
  41fa59:	ins    DWORD PTR es:[edi],dx
  41fa5a:	mov    esp,0xbe7d0f9e
  41fa5f:	add    ebp,ecx
  41fa61:	mov    DWORD PTR [eax-0x12f608be],eax
  41fa67:	int3   
  41fa68:	not    BYTE PTR [esi]
  41fa6a:	and    DWORD PTR [ebx-0x6bda6613],edi
  41fa70:	mov    fs,WORD PTR [esi+eiz*8-0x46ee66ee]
  41fa77:	or     DWORD PTR [ecx-0xc9f347],0xffffffef
  41fa7e:	mov    esi,0xac22e669
  41fa83:	mov    ds:0x9f9cb08,eax
  41fa88:	cmp    BYTE PTR [ebx+0x2f0d3531],dh
  41fa8e:	jbe    0x41fa8c
  41fa90:	xchg   esp,eax
  41fa91:	and    ch,BYTE PTR [eax+ebp*4]
  41fa94:	in     al,dx
  41fa95:	mov    ch,0x99
  41fa97:	lea    edx,[eax-0x46669f26]
  41fa9d:	(bad)  [ebx+ecx*1-0x481375ae]
  41faa4:	dec    ebx
  41faa5:	call   0x2e7a7a85
  41faaa:	inc    ecx
  41faab:	repz jb 0x41fab1
  41faae:	jbe    0x41faf8
  41fab0:	adc    esi,DWORD PTR [eax-0x9]
  41fab3:	mov    ah,0x3d
  41fab5:	mov    eax,ds:0xc3c6a6b3
  41faba:	push   edi
  41fabb:	mov    al,cl
  41fabd:	repz in eax,dx
  41fabf:	and    bl,ch
  41fac1:	popa   
  41fac2:	je     0x41fad8
  41fac4:	clc    
  41fac5:	or     BYTE PTR [eax+esi*1],ah
  41fac8:	jg     0x41faac
  41faca:	inc    ebp
  41facb:	adc    esi,edx
  41facd:	ds jecxz 0x41fa89
  41fad0:	loop   0x41fb2a
  41fad2:	dec    ecx
  41fad3:	out    dx,al
  41fad4:	repz test esi,ecx
  41fad7:	xchg   ebp,eax
  41fad8:	or     DWORD PTR ds:0xe4004146,ecx
  41fade:	dec    ebp
  41fadf:	shr    BYTE PTR [ebx-0x7a],cl
  41fae2:	rcr    esi,1
  41fae4:	fadd   DWORD PTR [eax]
  41fae6:	xor    BYTE PTR [ecx+0xf],dl
  41fae9:	out    0x41,al
  41faeb:	sub    bl,BYTE PTR [ebx-0x7c]
  41faee:	push   edi
  41faef:	or     dh,BYTE PTR [eax+0x3e83e329]
  41faf5:	adc    cl,dh
  41faf7:	data16 jbe 0x41fab9
  41fafa:	inc    esp
  41fafb:	adc    al,0x5a
  41fafd:	or     dl,BYTE PTR [eax-0x1485b26a]
  41fb03:	(bad)  
  41fb04:	jg     0x41fb74
  41fb06:	fwait
  41fb07:	sbb    ebp,DWORD PTR [ebp-0x51]
  41fb0a:	bound  edi,QWORD PTR [ebp+0x224ccd3e]
  41fb10:	mov    ds:0x544d89b0,eax
  41fb15:	cmp    DWORD PTR [ebp-0x28603a8c],0x62113fc1
  41fb1f:	add    BYTE PTR [edx+ecx*8+0x68],ah
  41fb23:	out    dx,al
  41fb24:	sub    al,0x45
  41fb26:	stc    
  41fb27:	push   es
  41fb28:	mov    edi,0x142a2b0
  41fb2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb2e:	lds    eax,FWORD PTR [edi-0x17]
  41fb31:	(bad)  
  41fb32:	jge    0x41fb81
  41fb34:	rcr    BYTE PTR [eax+0x7a1cc7f4],1
  41fb3a:	mov    dh,0xc2
  41fb3c:	cld    
  41fb3d:	out    dx,al
  41fb3e:	int    0x55
  41fb40:	rcr    BYTE PTR [ecx+0x4f86519],cl
  41fb46:	ins    BYTE PTR es:[edi],dx
  41fb47:	mov    ds:0x5d59c3f,eax
  41fb4c:	imul   eax,DWORD PTR [edi],0xdcc845aa
  41fb52:	fidiv  DWORD PTR [esi]
  41fb54:	and    eax,0xc6ca3894
  41fb59:	sbb    DWORD PTR [edx+esi*8],esi
  41fb5c:	fs or  edx,edi
  41fb5f:	lahf   
  41fb60:	mov    gs,WORD PTR [ebp-0x462e5435]
  41fb66:	jbe    0x41fb61
  41fb68:	out    dx,al
  41fb69:	ret    
  41fb6a:	(bad)  
  41fb6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb6c:	inc    esp
  41fb6d:	dec    ebp
  41fb6e:	xor    eax,0x8ba94e0b
  41fb73:	int3   
  41fb74:	xchg   edx,eax
  41fb75:	addr16 push edi
  41fb77:	scas   eax,DWORD PTR es:[edi]
  41fb78:	out    dx,al
  41fb79:	sbb    BYTE PTR [ecx-0x53],dl
  41fb7c:	or     BYTE PTR [edi+0x29],ah
  41fb7f:	mov    ds:0x730f2450,al
  41fb84:	test   DWORD PTR [eax],0x2f181686
  41fb8a:	fild   QWORD PTR [edx+0x76c4ed4d]
  41fb90:	and    ebx,edx
  41fb92:	xor    ecx,esi
  41fb94:	jns    0x41fc07
  41fb96:	(bad)  
  41fb97:	leave  
  41fb98:	cmp    eax,0xbd483b3c
  41fb9d:	popf   
  41fb9e:	xor    esi,edx
  41fba0:	inc    edx
  41fba1:	or     dh,BYTE PTR [edx+esi*8-0x488d8264]
  41fba8:	push   0x8d75f713
  41fbad:	aaa    
  41fbae:	jbe    0x41fb7a
  41fbb0:	or     cl,0x30
  41fbb3:	loop   0x41fbc8
  41fbb5:	mov    bh,0x10
  41fbb7:	scas   eax,DWORD PTR es:[edi]
  41fbb8:	dec    ebp
  41fbb9:	jo     0x41fc1d
  41fbbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbbc:	shl    BYTE PTR gs:[ecx+0x3b],cl
  41fbc0:	cmp    ebp,ebx
  41fbc2:	and    dh,BYTE PTR [ebx+0x3c8d14ce]
  41fbc8:	dec    ebx
  41fbc9:	std    
  41fbca:	dec    eax
  41fbcb:	fild   DWORD PTR [eax-0x5aaf50dc]
  41fbd1:	outs   dx,DWORD PTR ds:[esi]
  41fbd2:	aaa    
  41fbd3:	cmp    esp,DWORD PTR ds:0x1a7eda2
  41fbd9:	jmp    0x68868ee0
  41fbde:	pop    esp
  41fbdf:	ins    DWORD PTR es:[edi],dx
  41fbe0:	push   ebx
  41fbe1:	cmp    eax,DWORD PTR [ebx+esi*8+0x5761cbc6]
  41fbe8:	push   ecx
  41fbe9:	xor    DWORD PTR [eax+ebx*4-0x5ba905db],ecx
  41fbf0:	fdivr  DWORD PTR [ecx+ebp*2+0x3]
  41fbf4:	jmp    0x41fc4d
  41fbf6:	inc    ecx
  41fbf7:	gs iret 
  41fbf9:	mov    BYTE PTR [ecx],bh
  41fbfb:	jmp    0x41fc37
  41fbfd:	jno    0x41fbf5
  41fbff:	jp     0x41fc28
  41fc01:	push   edi
  41fc02:	dec    eax
  41fc03:	cli    
  41fc04:	pop    eax
  41fc05:	fdecstp 
  41fc07:	aaa    
  41fc08:	fadd   DWORD PTR [ebx]
  41fc0a:	xchg   esi,eax
  41fc0b:	push   ebx
  41fc0c:	dec    ecx
  41fc0d:	fisttp DWORD PTR [ebx-0x1d7c5a98]
  41fc13:	into   
  41fc14:	push   esp
  41fc15:	shl    bl,0xee
  41fc18:	adc    al,BYTE PTR [edx-0x76]
  41fc1b:	popf   
  41fc1c:	popa   
  41fc1d:	inc    ebx
  41fc1e:	cdq    
  41fc1f:	inc    edx
  41fc20:	sub    bl,BYTE PTR [ebx+0x211a9103]
  41fc26:	mov    eax,ds:0x1f127632
  41fc2b:	or     BYTE PTR [ebp-0x4361ad9f],0x8a
  41fc32:	inc    esp
  41fc33:	jo     0x41fc0d
  41fc35:	ss sbb al,0x2c
  41fc38:	dec    edi
  41fc39:	xchg   BYTE PTR [ebx-0xe6dbcb1],cl
  41fc3f:	jb     0x41fc51
  41fc41:	int3   
  41fc42:	fsubr  DWORD PTR [esi]
  41fc44:	adc    eax,0x20f2f4a9
  41fc49:	push   esp
  41fc4a:	mov    ah,0x49
  41fc4c:	data16 add al,0xe2
  41fc4f:	or     al,0xe7
  41fc51:	loop   0x41fbf5
  41fc53:	loopne 0x41fcbe
  41fc55:	push   0x66e22b65
  41fc5a:	push   eax
  41fc5b:	cmp    BYTE PTR [edi+ebp*8],cl
  41fc5e:	mov    edi,0x646fd882
  41fc63:	jl     0x41fc7c
  41fc65:	scas   al,BYTE PTR es:[edi]
  41fc66:	(bad)  
  41fc67:	in     al,dx
  41fc68:	mov    edx,DWORD PTR [esi-0x74]
  41fc6b:	mov    al,ds:0x4024ad9f
  41fc70:	or     bh,BYTE PTR [esi]
  41fc72:	lea    eax,[eax]
  41fc74:	aam    0x5f
  41fc76:	in     al,dx
  41fc77:	jg     0x41fcd7
  41fc79:	jbe    0x41fc02
  41fc7b:	sbb    eax,0x10574368
  41fc80:	mov    WORD PTR [ebx],fs
  41fc82:	mov    ch,0xd1
  41fc84:	lods   al,BYTE PTR ds:[esi]
  41fc85:	and    al,0x11
  41fc87:	sti    
  41fc88:	hlt    
  41fc89:	sbb    eax,0x9c9dae98
  41fc8e:	xor    al,0x31
  41fc90:	inc    ecx
  41fc91:	pop    edx
  41fc92:	pop    edx
  41fc93:	jo     0x41fc6b
  41fc95:	repz fabs 
  41fc98:	xchg   esp,eax
  41fc99:	shl    dl,cl
  41fc9b:	mov    ds:0xd5f0a2b,eax
  41fca0:	sbb    BYTE PTR [esi],dh
  41fca2:	mov    esp,0x8fd35e6f
  41fca7:	jnp    0x41fce5
  41fca9:	mov    ecx,0x576db30f
  41fcae:	out    dx,eax
  41fcaf:	jnp    0x41fc46
  41fcb1:	xor    BYTE PTR [edx-0x3c],dl
  41fcb4:	and    edx,DWORD PTR [edi]
  41fcb6:	ins    DWORD PTR es:[edi],dx
  41fcb7:	dec    ecx
  41fcb8:	loop   0x41fcac
  41fcba:	out    0x6e,eax
  41fcbc:	xchg   ecx,eax
  41fcbd:	xchg   esp,eax
  41fcbe:	xchg   ebx,eax
  41fcbf:	nop
  41fcc0:	nop
  41fcc1:	hlt    
  41fcc2:	xor    eax,0x6f16443d
  41fcc7:	inc    edi
  41fcc8:	test   DWORD PTR [edx],esi
  41fcca:	and    DWORD PTR [ecx-0x45],ebp
  41fccd:	jns    0x41fd0a
  41fccf:	hlt    
  41fcd0:	call   esp
  41fcd2:	pushw  cs
  41fcd4:	mov    dl,0x32
  41fcd6:	call   0x63c69046
  41fcdb:	adc    DWORD PTR [eax+0x42db4120],esp
  41fce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fce2:	daa    
  41fce3:	fidiv  DWORD PTR [eax+0x2f]
  41fce6:	sub    cl,dl
  41fce8:	mov    ds:0x78b33652,eax
  41fced:	jp     0x41fd07
  41fcef:	ret    0xedaa
  41fcf2:	mov    cl,0x9c
  41fcf4:	pop    esi
  41fcf5:	inc    edi
  41fcf6:	lds    ebp,FWORD PTR [esi+0x24340338]
  41fcfc:	xchg   edx,eax
  41fcfd:	ret    
  41fcfe:	or     BYTE PTR [ebx+0x2],0x9e
  41fd02:	scas   eax,DWORD PTR es:[edi]
  41fd03:	in     al,dx
  41fd04:	out    0x1b,eax
  41fd06:	cmc    
  41fd07:	test   al,0x3
  41fd09:	dec    esp
  41fd0a:	xor    eax,0x8c2d4b3e
  41fd0f:	fdiv   st,st(5)
  41fd11:	xor    edx,edi
  41fd13:	mov    ecx,0xcc382663
  41fd18:	pop    ecx
  41fd19:	xchg   esp,eax
  41fd1a:	sub    edx,ebp
  41fd1c:	retf   
  41fd1d:	cmp    esp,DWORD PTR ds:0x41601967
  41fd23:	xor    edi,ebp
  41fd25:	inc    eax
  41fd26:	mov    ?,WORD PTR [ebp+edx*4+0x64b5761c]
  41fd2d:	add    eax,0x9b8f15f8
  41fd32:	fimul  DWORD PTR [esi]
  41fd34:	enter  0x7c0c,0x1b
  41fd38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd39:	xor    bh,BYTE PTR [ebp+0x6afd58aa]
  41fd3f:	dec    esi
  41fd40:	add    al,0xbc
  41fd42:	jo     0x41fd78
  41fd44:	sti    
  41fd45:	ds clc 
  41fd47:	or     dh,dh
  41fd49:	loopne 0x41fd35
  41fd4b:	(bad)  
  41fd4c:	int3   
  41fd4d:	sahf   
  41fd4e:	adc    DWORD PTR [edx+0x267450ce],edx
  41fd54:	cwde   
  41fd55:	push   ebp
  41fd56:	out    dx,al
  41fd57:	fld    QWORD PTR [edx+0x68]
  41fd5a:	and    DWORD PTR [ebp+0x2ed9ddda],ebp
  41fd60:	data16 jbe 0x41fd69
  41fd63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd64:	out    0x3f,al
  41fd66:	pop    es
  41fd67:	das    
  41fd68:	gs push eax
  41fd6a:	pop    ss
  41fd6b:	call   0xff83:0x7d3e3247
  41fd72:	inc    ecx
  41fd73:	adc    eax,0x10e85123
  41fd78:	jg     0x41fd11
  41fd7a:	sbb    ch,BYTE PTR [eax+0x19]
  41fd7d:	inc    edi
  41fd7e:	into   
  41fd7f:	adc    DWORD PTR [edi],edx
  41fd81:	ret    
  41fd82:	loope  0x41fd37
  41fd84:	jo     0x41fd10
  41fd86:	aas    
  41fd87:	jae    0x41fd27
  41fd89:	xchg   edx,eax
  41fd8a:	retf   0xda17
  41fd8d:	not    DWORD PTR gs:[eax+ebp*8+0x66]
  41fd92:	push   0x14b4cb40
  41fd97:	jmp    0x8124:0xcd546361
  41fd9e:	mov    ds:0x5bee62d5,al
  41fda3:	xor    bh,al
  41fda5:	icebp  
  41fda6:	push   eax
  41fda7:	test   DWORD PTR [esi-0x782c1f56],ecx
  41fdad:	jnp    0x41fdec
  41fdaf:	xlat   BYTE PTR ds:[ebx]
  41fdb0:	nop
  41fdb1:	loope  0x41fdf8
  41fdb3:	sar    BYTE PTR [esi+0x5d],1
  41fdb6:	retf   
  41fdb7:	dec    ecx
  41fdb8:	lods   eax,DWORD PTR ds:[esi]
  41fdb9:	sbb    al,0x33
  41fdbb:	xlat   BYTE PTR ds:[ebx]
  41fdbc:	or     al,0x62
  41fdbe:	imul   ecx,esp,0xdeed04fb
  41fdc4:	pop    ss
  41fdc5:	inc    esp
  41fdc6:	push   0xeb17fbab
  41fdcb:	xor    edi,DWORD PTR [ebp+0x10d0ce3b]
  41fdd1:	adc    BYTE PTR [esi+esi*2],al
  41fdd4:	cmp    BYTE PTR [eax-0x77ce2687],dl
  41fdda:	mov    ch,0x56
  41fddc:	or     al,0xae
  41fdde:	adc    BYTE PTR [esi+0x6c4a8cf7],al
  41fde4:	xchg   edx,eax
  41fde5:	jo     0x41fdae
  41fde7:	mov    al,0x2c
  41fde9:	xchg   esi,edi
  41fdeb:	or     ecx,ebx
  41fded:	sub    al,BYTE PTR [eax+edi*1-0x7d]
  41fdf1:	jmp    0xdfdfdd72
  41fdf6:	sti    
  41fdf7:	and    DWORD PTR [ebx+0x1d183875],eax
  41fdfd:	nop
  41fdfe:	aas    
  41fdff:	sub    DWORD PTR [edx-0x79aa278d],esp
  41fe05:	rol    DWORD PTR [esi-0x53],0x43
  41fe09:	jns    0x41fe64
  41fe0b:	mov    bl,0x19
  41fe0d:	mov    ch,0xb4
  41fe0f:	stc    
  41fe10:	sub    eax,DWORD PTR [ecx-0x49]
  41fe13:	int3   
  41fe14:	cdq    
  41fe15:	popa   
  41fe16:	cwde   
  41fe17:	jnp    0x41fdda
  41fe19:	retf   0xd4ae
  41fe1c:	jmp    0x41fdc3
  41fe1e:	and    DWORD PTR [edx+edi*8+0x76],0xffffffdc
  41fe23:	popa   
  41fe24:	shr    BYTE PTR [ecx-0x51],cl
  41fe27:	mov    dh,0xca
  41fe29:	fisttp WORD PTR [ecx-0x4d4975a8]
  41fe2f:	cmp    cl,BYTE PTR [esp+edi*8]
  41fe32:	mov    esp,0x5f75c6d7
  41fe37:	jbe    0x41fea0
  41fe39:	fisttp WORD PTR [edi+0x5a]
  41fe3c:	push   ebp
  41fe3d:	scas   eax,DWORD PTR es:[edi]
  41fe3e:	jl     0x41fddd
  41fe40:	fsub   QWORD PTR [eax]
  41fe42:	push   0x39
  41fe44:	xchg   ecx,eax
  41fe45:	in     eax,dx
  41fe46:	xor    ebx,DWORD PTR [ebx+ebp*8]
  41fe49:	ja     0x41fddd
  41fe4b:	or     al,0x47
  41fe4d:	jmp    0x41fe5e
  41fe4f:	or     dh,BYTE PTR [ecx-0xb2a0583]
  41fe55:	mov    bh,0xf4
  41fe57:	pop    edx
  41fe58:	aam    0xff
  41fe5a:	shl    DWORD PTR [ebp+0x45],0x7f
  41fe5e:	dec    edx
  41fe5f:	and    cl,BYTE PTR [ebp+0x7a]
  41fe62:	inc    esp
  41fe63:	push   ecx
  41fe64:	mov    edi,0x5725b288
  41fe69:	rcr    BYTE PTR [ebp+0x2ecc418b],cl
  41fe6f:	push   ebx
  41fe70:	sbb    ebx,ecx
  41fe72:	and    ecx,ebx
  41fe74:	inc    ebx
  41fe75:	cmp    ah,dl
  41fe77:	lods   al,BYTE PTR ds:[esi]
  41fe78:	daa    
  41fe79:	leave  
  41fe7a:	outs   dx,BYTE PTR ds:[esi]
  41fe7b:	repnz inc esi
  41fe7d:	push   0xf579e1de
  41fe82:	mov    esi,0x9184351b
  41fe87:	sub    al,0xee
  41fe89:	ins    BYTE PTR es:[edi],dx
  41fe8a:	xchg   eax,ebx
  41fe8c:	and    eax,0xddca043a
  41fe91:	sbb    esp,DWORD PTR [esi+0x1a]
  41fe94:	imul   ebx
  41fe96:	and    al,0x57
  41fe98:	mov    esp,0x2a086abc
  41fe9d:	push   0x1e634a5d
  41fea2:	call   0x2cf49bc4
  41fea7:	add    DWORD PTR [esp+eax*1+0x19],ebp
  41feab:	xchg   esp,eax
  41feac:	mov    ebp,0x1c12d3e9
  41feb1:	mov    cs,ebp
  41feb3:	cmp    eax,0x93649859
  41feb8:	scas   al,BYTE PTR es:[edi]
  41feb9:	nop
  41feba:	popa   
  41febb:	pop    ebp
  41febc:	push   esp
  41febd:	retf   
  41febe:	xadd   BYTE PTR [edi+0x64b1e6f3],ch
  41fec5:	sub    DWORD PTR [ebp+0x6e],edx
  41fec8:	imul   edx,DWORD PTR ds:0x99dfd2ef,0xffffffe7
  41fecf:	adc    eax,0xa4d0909e
  41fed4:	xlat   BYTE PTR cs:[ebx]
  41fed6:	xor    esp,eax
  41fed8:	je     0x41ff1e
  41feda:	or     BYTE PTR [edi+eiz*2-0x42],bh
  41fede:	sbb    DWORD PTR [ecx],ebp
  41fee0:	aad    0x46
  41fee2:	pushf  
  41fee3:	ror    DWORD PTR [edi+0x8a51a1],cl
  41fee9:	and    edx,DWORD PTR ds:0x81095535
  41feef:	jg     0x41ff2b
  41fef1:	dec    edi
  41fef2:	pop    esp
  41fef3:	xor    bl,cl
  41fef5:	(bad)  
  41fef6:	push   ecx
  41fef7:	gs xor eax,0xd1820f81
  41fefd:	outs   dx,DWORD PTR ds:[esi]
  41fefe:	mov    ah,0x59
  41ff00:	adc    ebx,DWORD PTR [eax]
  41ff02:	lock ficom WORD PTR [esi+ebp*2+0x6eb84973]
  41ff0a:	pop    ebp
  41ff0b:	imul   edx,DWORD PTR [ebp+eiz*4-0x3b],0xa
  41ff10:	(bad)  
  41ff11:	jno    0x41ff53
  41ff13:	call   0xce535482
  41ff18:	test   al,0x16
  41ff1a:	sub    eax,0xe5825d10
  41ff1f:	and    eax,0x2b361f13
  41ff24:	repnz jmp 0xf67b:0x8a1221e8
  41ff2c:	test   BYTE PTR [ebx+ebx*2+0x29],dh
  41ff30:	dec    ecx
  41ff31:	adc    eax,0x6a53c3
  41ff36:	sbb    al,0x32
  41ff38:	gs pop edx
  41ff3a:	and    bh,bh
  41ff3c:	lock leave 
  41ff3e:	xor    DWORD PTR [esi+0x53fb4b0],esp
  41ff44:	rep outs dx,DWORD PTR ds:[esi]
  41ff46:	mov    ecx,0x681d32b
  41ff4b:	xchg   ebx,eax
  41ff4c:	ret    0x1b19
  41ff4f:	jmp    0x41ff24
  41ff51:	(bad)  
  41ff52:	cmp    DWORD PTR [ebp+0x27dcff58],eax
  41ff58:	and    BYTE PTR [ebx-0x13],dl
  41ff5b:	cmp    ax,0xdd1d
  41ff5f:	into   
  41ff60:	lock pop ss
  41ff62:	fldenv [eax]
  41ff64:	(bad)  
  41ff65:	pop    ecx
  41ff66:	dec    eax
  41ff67:	mov    ebx,0x71e80b56
  41ff6c:	sar    ah,1
  41ff6e:	jo     0x41ff6c
  41ff70:	dec    ecx
  41ff71:	out    0xab,eax
  41ff73:	repz sbb DWORD PTR [ecx+ebp*8-0x14],edx
  41ff78:	push   ecx
  41ff79:	inc    ebp
  41ff7a:	add    eax,0xb28ab2d2
  41ff7f:	iret   
  41ff80:	(bad)  
  41ff81:	push   edi
  41ff82:	push   ebp
  41ff83:	out    dx,eax
  41ff84:	xchg   ecx,eax
  41ff85:	das    
  41ff86:	in     eax,dx
  41ff87:	nop
  41ff88:	pop    ss
  41ff89:	push   edi
  41ff8a:	mov    ah,0xbc
  41ff8c:	je     0x41ffe8
  41ff8e:	add    BYTE PTR [ebx-0x1],ah
  41ff91:	jo     0x41ff18
  41ff93:	jne    0x41ff9d
  41ff95:	jo     0x420016
  41ff97:	inc    esp
  41ff98:	adc    esp,esp
  41ff9a:	jae    0x41ff69
  41ff9c:	and    DWORD PTR [esi],edx
  41ff9e:	push   ebp
  41ff9f:	loope  0x41ff97
  41ffa1:	inc    edi
  41ffa2:	push   edi
  41ffa3:	sbb    esi,esp
  41ffa5:	mov    ecx,0x541fd741
  41ffaa:	jnp    0x420002
  41ffac:	adc    BYTE PTR [ebx],0x5e
  41ffaf:	std    
  41ffb0:	xor    BYTE PTR [ebx+0x41],0xa7
  41ffb4:	aad    0x11
  41ffb6:	cmp    bx,0x78
  41ffba:	iret   
  41ffbb:	add    bl,ch
  41ffbd:	jp     0x41ffd3
  41ffbf:	mov    ebx,es
  41ffc1:	push   cs
  41ffc2:	or     bh,BYTE PTR [edi]
  41ffc4:	xchg   esp,eax
  41ffc5:	push   esi
  41ffc6:	pop    esi
  41ffc7:	cmp    ecx,esi
  41ffc9:	xor    BYTE PTR [ecx-0x488e54a],ch
  41ffcf:	retf   
  41ffd0:	add    ah,bl
  41ffd2:	in     al,0x35
  41ffd4:	or     BYTE PTR [ebx-0x23ba4609],cl
  41ffda:	xor    dx,WORD PTR [eax+ebp*2+0x473b64dc]
  41ffe2:	or     al,0xca
  41ffe4:	sub    DWORD PTR [edx],eax
  41ffe6:	mov    cl,0x11
  41ffe8:	loopne 0x420049
  41ffea:	retf   
  41ffeb:	inc    ebp
  41ffec:	cdq    
  41ffed:	into   
  41ffee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffef:	aaa    
  41fff0:	leave  
  41fff1:	lds    esp,FWORD PTR ds:0x9410fc9f
  41fff7:	push   ecx
  41fff8:	js     0x420018
  41fffa:	and    esi,DWORD PTR [esi]
  41fffc:	sbb    ecx,DWORD PTR [ebp-0x5b721ab7]
  420002:	pop    edx
  420003:	ret    0x3997
  420006:	push   esi
  420007:	xor    dh,BYTE PTR cs:[eax*4-0x61952f3f]
  42000f:	shl    dl,0xa1
  420012:	mov    edi,DWORD PTR [eax-0x246ab169]
  420018:	dec    ebp
  420019:	sbb    bl,al
  42001b:	push   cs
  42001c:	pop    esi
  42001d:	mov    esi,0x66473427
  420022:	mov    DWORD PTR [edi+0x60],0xa8575ffa
  420029:	pop    edi
  42002a:	icebp  
  42002b:	aam    0xb6
  42002d:	in     eax,dx
  42002e:	call   0x2355:0x56111d36
  420035:	pop    es
  420036:	arpl   WORD PTR [eax-0x5a3e0341],di
  42003c:	lods   al,BYTE PTR ds:[esi]
  42003d:	ins    DWORD PTR es:[edi],dx
  42003e:	fnstsw WORD PTR [esi+0x672ac67d]
  420044:	xchg   ebx,eax
  420045:	add    edi,edi
  420047:	dec    ebx
  420048:	loopne 0x42003a
  42004a:	or     ebp,esi
  42004c:	pop    esi
  42004d:	sahf   
  42004e:	inc    edx
  42004f:	loop   0x420096
  420051:	cmp    eax,0x878816ae
  420056:	leave  
  420057:	mov    cl,0xa5
  420059:	pop    esp
  42005a:	int    0x9c
  42005c:	dec    edx
  42005d:	mov    ds:0x4da70638,eax
  420062:	pop    ecx
  420063:	imul   ecx,DWORD PTR [edi-0x32d6dedf],0xa64efd29
  42006d:	xor    DWORD PTR [edx],esi
  42006f:	pop    edx
  420070:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420072:	mov    edi,0x2804432b
  420077:	mov    cl,0xfb
  420079:	xor    bh,BYTE PTR [esi+ecx*8-0x59]
  42007d:	xlat   BYTE PTR ds:[ebx]
  42007e:	out    dx,eax
  42007f:	ret    
  420080:	cdq    
  420081:	mov    ecx,0x41fb766b
  420086:	add    al,0xcc
  420088:	and    BYTE PTR [ebp+0x6efdbd2f],ch
  42008e:	pushf  
  42008f:	dec    eax
  420090:	lods   eax,DWORD PTR ds:[esi]
  420091:	shr    esp,1
  420093:	popa   
  420094:	dec    esi
  420095:	scas   al,BYTE PTR es:[edi]
  420096:	inc    esp
  420097:	or     DWORD PTR [edx+0x1fac0d88],eax
  42009d:	imul   edi,DWORD PTR [ebx-0x7b4f2556],0xd3639395
  4200a7:	fdiv   st,st(2)
  4200a9:	scas   eax,DWORD PTR es:[edi]
  4200aa:	jg     0x420086
  4200ac:	mov    ecx,DWORD PTR [esp+ebp*4]
  4200af:	jns    0x420094
  4200b1:	jno    0x4200de
  4200b3:	test   DWORD PTR [edi],0xa6ada74b
  4200b9:	pop    esp
  4200ba:	out    dx,al
  4200bb:	push   0x6d
  4200bd:	test   eax,0x9cf000ae
  4200c2:	xor    al,0x8
  4200c4:	push   cs
  4200c5:	mov    cs,WORD PTR [edx-0x2]
  4200c8:	mov    BYTE PTR [ecx-0x53ab2c02],ah
  4200ce:	std    
  4200cf:	aaa    
  4200d0:	stc    
  4200d1:	int3   
  4200d2:	jo     0x42007f
  4200d4:	retf   
  4200d5:	or     BYTE PTR [edx],0xbf
  4200d8:	call   0x2d01:0x7ce41a2
  4200df:	inc    edi
  4200e0:	int    0x5a
  4200e2:	leave  
  4200e3:	jnp    0x4200d6
  4200e5:	lea    ebp,es:[esp+ebx*2]
  4200e9:	push   edx
  4200ea:	mov    ds:0x94f9fc91,eax
  4200ef:	lea    ebp,[ecx+0x5b]
  4200f2:	and    al,0x6c
  4200f4:	in     al,0x3d
  4200f6:	sbb    al,0xe
  4200f8:	ins    BYTE PTR es:[edi],dx
  4200f9:	and    BYTE PTR [ecx+eiz*8],al
  4200fc:	loope  0x4200c0
  4200fe:	push   0xffffffad
  420100:	out    dx,eax
  420101:	adc    al,0xb4
  420103:	std    
  420104:	(bad)  
  420105:	mov    ds:0x98cd0817,al
  42010a:	xchg   ecx,eax
  42010b:	stos   DWORD PTR es:[edi],eax
  42010c:	push   ds
  42010d:	xchg   ecx,eax
  42010e:	stos   DWORD PTR es:[edi],eax
  42010f:	mov    WORD PTR [eax-0x7aee1ca2],ss
  420115:	pop    ds
  420116:	push   ds
  420117:	les    esp,FWORD PTR [eax-0x34]
  42011a:	hlt    
  42011b:	stc    
  42011c:	add    DWORD PTR [esp+ebp*8],ebx
  42011f:	pop    ecx
  420120:	xor    DWORD PTR [ebp-0x6d],0x44
  420124:	popa   
  420125:	push   eax
  420126:	loop   0x4200c4
  420128:	sub    edx,DWORD PTR [ebx+0x3ec56599]
  42012e:	sub    eax,0x71805f0d
  420133:	in     eax,dx
  420134:	jmp    0x8b78acf4
  420139:	mov    al,0x8c
  42013b:	data16 jno 0x42013a
  42013e:	jg     0x4200f7
  420140:	mov    edi,esi
  420142:	inc    edi
  420143:	push   eax
  420144:	imul   ebx,DWORD PTR [ebx+0x7c],0x2c
  420148:	add    al,0xc4
  42014a:	add    DWORD PTR [ebx+0x1f9009cc],edx
  420150:	xchg   edi,eax
  420151:	sub    BYTE PTR [esp+edi*8],bl
  420154:	ss loopne 0x420163
  420157:	loop   0x4201a5
  420159:	mov    cl,0x52
  42015b:	pop    esi
  42015c:	push   eax
  42015d:	call   0x33c1:0x8087c27c
  420164:	pop    DWORD PTR [ebx-0x558a35aa]
  42016a:	mov    cl,0x74
  42016c:	and    BYTE PTR [eax-0x32c51c96],ch
  420172:	mov    edx,cs
  420174:	dec    edx
  420175:	dec    ecx
  420176:	lock (bad) [esi+ecx*4-0x73]
  42017b:	les    ecx,FWORD PTR [eax+edx*8]
  42017e:	scas   al,BYTE PTR es:[edi]
  42017f:	mov    ch,0x43
  420181:	pop    edx
  420182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420183:	add    edi,esi
  420185:	push   esp
  420186:	je     0x42019f
  420188:	push   ss
  420189:	fdiv   QWORD PTR [edi+0x2b]
  42018c:	adc    esp,DWORD PTR [ecx]
  42018e:	inc    eax
  42018f:	pop    DWORD PTR [ecx]
  420191:	xchg   ebp,eax
  420192:	icebp  
  420193:	jl     0x4201b3
  420195:	xor    eax,DWORD PTR [ecx]
  420197:	push   ebp
  420198:	sbb    eax,0x370b06e4
  42019d:	mov    bh,0x8e
  42019f:	pop    ecx
  4201a0:	int    0x9f
  4201a2:	(bad)  
  4201a3:	fimul  WORD PTR [esi]
  4201a5:	xor    DWORD PTR [edi+0x71],ebp
  4201a8:	xor    al,0x1a
  4201aa:	adc    ah,bl
  4201ac:	and    DWORD PTR [edx+edx*1-0x75],ecx
  4201b0:	jbe    0x420230
  4201b2:	inc    edx
  4201b3:	ins    DWORD PTR es:[edi],dx
  4201b4:	ins    DWORD PTR es:[edi],dx
  4201b5:	sub    ah,BYTE PTR [ebp-0x58]
  4201b8:	pop    ss
  4201b9:	and    al,0x8a
  4201bb:	(bad)  
  4201bd:	popa   
  4201be:	add    al,0x44
  4201c0:	sub    cl,BYTE PTR [esi+0x6f]
  4201c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201c4:	ret    
  4201c5:	mov    eax,0x14b5aa
  4201ca:	dec    ebp
  4201cb:	addr16 sbb al,0x82
  4201ce:	push   0x87a3074a
  4201d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201d4:	dec    ebx
  4201d5:	(bad)  
  4201d6:	pusha  
  4201d7:	push   ecx
  4201d8:	test   eax,0xc8bdaa42
  4201dd:	mov    ds:0x18b4f875,al
  4201e2:	frndint 
  4201e4:	frstor gs:[eax-0x43162f95]
  4201eb:	nop
  4201ec:	push   ss
  4201ed:	mov    al,0x10
  4201ef:	ret    
  4201f0:	sub    DWORD PTR [edx],eax
  4201f2:	jge    0x420266
  4201f4:	sbb    dl,BYTE PTR [edx+0x49]
  4201f7:	ror    DWORD PTR [edi+ebp*4],cl
  4201fa:	jmp    0x4201e7
  4201fc:	cmc    
  4201fd:	push   edx
  4201fe:	inc    ebx
  4201ff:	pop    edx
  420200:	jmp    0xf0ef5dd7
  420205:	push   0xb0e31e44
  42020a:	lock aaa 
  42020c:	imul   edx,DWORD PTR ds:0xa1162e28,0x2dfdb023
  420216:	cs repnz sub al,0x58
  42021a:	outs   dx,DWORD PTR ds:[esi]
  42021b:	xchg   esi,eax
  42021c:	add    cl,dl
  42021e:	jbe    0x420218
  420220:	ins    DWORD PTR es:[edi],dx
  420221:	xchg   DWORD PTR [ecx+0x6b54c912],esi
  420227:	sub    dh,BYTE PTR [ecx-0x254e3041]
  42022d:	data16 loopne 0x4201f7
  420230:	xchg   edx,eax
  420231:	inc    edi
  420232:	dec    edi
  420233:	mov    bh,0xc7
  420235:	add    edx,esi
  420237:	dec    ebp
  420238:	or     bl,BYTE PTR [ebx+ebx*8-0x2d358b5a]
  42023f:	xor    dl,BYTE PTR [ecx]
  420241:	push   ss
  420242:	bound  ebp,QWORD PTR [ecx+0x78]
  420245:	std    
  420246:	inc    eax
  420247:	(bad)  
  420249:	arpl   bp,dx
  42024b:	push   ecx
  42024c:	cmp    BYTE PTR [edi-0x1e],bl
  42024f:	dec    esp
  420250:	adc    al,0x12
  420252:	push   ds
  420253:	(bad)  
  420254:	loope  0x420220
  420256:	mov    bl,0x5f
  420258:	add    esp,DWORD PTR [ecx]
  42025a:	mov    al,ds:0x257b7b0b
  42025f:	inc    esi
  420260:	cmc    
  420261:	mov    eax,ds:0x95de0e41
  420266:	push   0xd0662803
  42026b:	mov    ah,0x35
  42026d:	push   ebp
  42026e:	mov    ebx,0x600a60de
  420273:	mov    dl,BYTE PTR [ebp+0x79a7f17d]
  420279:	xor    ch,BYTE PTR [eax]
  42027b:	adc    al,BYTE PTR [ebx]
  42027d:	xor    BYTE PTR [ebx+0x2bba9899],ah
  420283:	lods   al,BYTE PTR ds:[esi]
  420284:	call   0xdaa9:0xc9362620
  42028b:	pop    ds
  42028c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42028d:	xor    al,0x5
  42028f:	fs pop ds
  420291:	test   BYTE PTR [esi+0x43460db6],cl
  420297:	sbb    DWORD PTR [esi],ecx
  420299:	dec    edi
  42029a:	jo     0x42029e
  42029c:	stos   DWORD PTR es:[edi],eax
  42029d:	arpl   WORD PTR [esp-0x3cc2800e],sp
  4202a4:	test   eax,0x34f34578
  4202a9:	stos   BYTE PTR es:[edi],al
  4202aa:	gs (bad) 
  4202ad:	mov    eax,ds:0x259fdc4d
  4202b2:	fbstp  TBYTE PTR [ecx]
  4202b4:	aaa    
  4202b5:	xchg   esi,eax
  4202b6:	cld    
  4202b7:	cmp    ecx,DWORD PTR [ebx+0x7ecdb7c7]
  4202bd:	in     eax,0xe
  4202bf:	xchg   esp,eax
  4202c0:	jnp    0x420330
  4202c2:	mov    WORD PTR [esi],?
  4202c4:	call   0x50809af0
  4202c9:	dec    esp
  4202ca:	cmc    
  4202cb:	test   BYTE PTR [ecx+0x335b0335],0xd4
  4202d2:	pop    ss
  4202d3:	dec    edx
  4202d4:	xchg   esp,eax
  4202d5:	sub    eax,0xf2c5a18e
  4202da:	lea    eax,[eax+0x589570c3]
  4202e0:	pop    eax
  4202e1:	push   DWORD PTR [edi-0x74]
  4202e4:	add    dl,BYTE PTR [edi+0xf]
  4202e7:	movq   QWORD PTR [ebp-0x3e],mm6
  4202eb:	push   ebp
  4202ec:	mov    gs,esi
  4202ee:	ret    
  4202ef:	jbe    0x4202b8
  4202f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202f2:	cmp    BYTE PTR [eax],dl
  4202f4:	mov    ds:0x17f9d767,eax
  4202f9:	inc    esi
  4202fa:	cmp    al,0xa4
  4202fc:	fld    QWORD PTR [esp+esi*4-0x5f4a5370]
  420303:	shl    BYTE PTR [eax-0xd4a1c74],cl
  420309:	mov    dh,0xb0
  42030b:	push   DWORD PTR [ebx+0x6dc0f8e9]
  420311:	stc    
  420312:	inc    ebx
  420313:	lds    edx,FWORD PTR [edi]
  420315:	add    bh,BYTE PTR [eax+0x76]
  420318:	lahf   
  420319:	pop    es
  42031a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42031b:	fs sub eax,0x89b2c999
  420321:	cmp    ah,bh
  420323:	jbe    0x42034b
  420325:	adc    BYTE PTR [ebx+0x62ef8a18],0x6f
  42032c:	test   esi,esp
  42032e:	dec    ebx
  42032f:	inc    edi
  420330:	idiv   BYTE PTR [edi+0x7cd15532]
  420336:	sub    bh,cl
  420338:	xchg   ebp,eax
  420339:	cs cdq 
  42033b:	mov    bh,0x14
  42033d:	jle    0x4202bf
  42033f:	pop    ds
  420340:	push   ecx
  420341:	jnp    0x4203c0
  420343:	or     al,0xa5
  420345:	aam    0xe
  420347:	xchg   esi,eax
  420348:	test   al,0x54
  42034a:	in     eax,0xba
  42034c:	xchg   DWORD PTR [edx+0x42],eax
  42034f:	xchg   ebx,eax
  420350:	mov    cl,0xb4
  420352:	or     ebx,DWORD PTR [edi+0x4e]
  420355:	mov    al,ds:0x3317435b
  42035a:	dec    ax
  42035c:	(bad)  
  42035d:	data16 mov dh,0xa0
  420360:	scas   eax,DWORD PTR es:[edi]
  420361:	shl    BYTE PTR [eax+0x6],1
  420364:	xchg   BYTE PTR [edx],ch
  420366:	stos   BYTE PTR es:[edi],al
  420367:	mov    ebx,DWORD PTR [esi+0x726f168d]
  42036d:	push   ds
  42036e:	les    ecx,FWORD PTR [edx-0x1]
  420371:	call   0x17dc:0xf687fe65
  420378:	std    
  420379:	call   0x2383b1a3
  42037e:	mov    bl,0xd1
  420380:	jbe    0x42031f
  420382:	mov    DWORD PTR [edi+0xe59b7f0],ebp
  420388:	scas   eax,DWORD PTR es:[edi]
  420389:	xchg   ebx,eax
  42038a:	jmp    0x3aa73fcc
  42038f:	dec    edi
  420390:	mov    al,ds:0x2c03fa5b
  420395:	out    dx,al
  420396:	fndisi(8087 only) 
  420398:	sub    BYTE PTR [ebx+0x4b63de8a],dl
  42039e:	ja     0x42033d
  4203a0:	(bad)  
  4203a1:	aas    
  4203a2:	xor    eax,0x39e5c357
  4203a7:	and    eax,0x820c74b
  4203ac:	into   
  4203ad:	(bad)  
  4203ae:	test   al,0xe9
  4203b0:	mov    dl,BYTE PTR [ebx-0xf14fa43]
  4203b6:	leave  
  4203b7:	mov    ebx,0x9ae369ab
  4203bc:	jne    0x420376
  4203be:	inc    edi
  4203bf:	test   BYTE PTR [ebp-0x6c307ec3],dl
  4203c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c6:	sub    al,BYTE PTR [eax]
  4203c8:	loop   0x42035d
  4203ca:	jg     0x4203ea
  4203cc:	mov    DWORD PTR [ecx-0x38],edi
  4203cf:	popa   
  4203d0:	test   edx,0x12ddc6cf
  4203d6:	add    eax,DWORD PTR [edi+0x15]
  4203d9:	iret   
  4203da:	mov    dl,0x9e
  4203dc:	mov    BYTE PTR [edx],dl
  4203de:	jnp    0x42040c
  4203e0:	add    eax,0x4f9c7e54
  4203e5:	scas   al,BYTE PTR es:[edi]
  4203e6:	pop    ebp
  4203e7:	push   edi
  4203e8:	lahf   
  4203e9:	ja     0x42038f
  4203eb:	push   0xffffffa0
  4203ed:	jno    0x420370
  4203ef:	hlt    
  4203f0:	arpl   WORD PTR [edi+0x75],sp
  4203f3:	push   eax
  4203f4:	cdq    
  4203f5:	jle    0x420454
  4203f7:	pop    ss
  4203f8:	rol    DWORD PTR [ebx+ecx*4+0x69],1
  4203fc:	jecxz  0x42044d
  4203fe:	mov    esp,0x83dde429
  420403:	mov    ebx,fs
  420405:	adc    DWORD PTR [ebp+0x78],0xffffffc3
  420409:	add    eax,DWORD PTR [ebx+0x6f2acc57]
  42040f:	or     dl,BYTE PTR [eax]
  420411:	push   edi
  420412:	bound  ebx,QWORD PTR [edi+0x19026a43]
  420418:	leave  
  420419:	sahf   
  42041a:	test   DWORD PTR [edi+0xa],edi
  42041d:	ins    BYTE PTR es:[edi],dx
  42041e:	add    al,0x3b
  420420:	xchg   ebp,eax
  420421:	pop    es
  420422:	push   esi
  420423:	sbb    BYTE PTR [edi+0x25],cl
  420426:	call   0x9efa:0x61a3f64
  42042d:	cdq    
  42042e:	mov    ebx,DWORD PTR [eax]
  420430:	rcr    BYTE PTR [ebp*8-0x50a9454f],1
  420437:	push   ss
  420438:	sbb    BYTE PTR [eax-0x50cf2eb],al
  42043e:	fnsave [esi-0x4d]
  420441:	(bad)  
  420442:	sbb    esi,DWORD PTR [esi+0x69c3bd56]
  420448:	jmp    0xb4d:0x5dbf3b92
  42044f:	repz fild QWORD PTR [ebx+0x37]
  420453:	sub    eax,0x7c19944b
  420458:	inc    esp
  420459:	out    dx,al
  42045a:	dec    ecx
  42045b:	push   ebp
  42045c:	sbb    ecx,ebp
  42045e:	out    dx,al
  42045f:	jmp    0x1417:0xf45e1b75
  420466:	fidivr WORD PTR [eax+ebp*8+0x4f1adeb4]
  42046d:	jecxz  0x4204d7
  42046f:	xor    edx,DWORD PTR [edx+edi*8-0x7a0ce804]
  420476:	test   DWORD PTR [ebx+0x6],eax
  420479:	icebp  
  42047a:	sub    BYTE PTR gs:[esi-0x278c54d8],ah
  420481:	repnz add BYTE PTR [ebx+0x594ec477],bl
  420488:	mov    cl,0x64
  42048a:	int3   
  42048b:	inc    edx
  42048c:	push   ebp
  42048d:	adc    cl,BYTE PTR [eax+0x51]
  420490:	test   BYTE PTR [ebx+ecx*1-0x3950534],bh
  420497:	jmp    0x4204cf
  420499:	aaa    
  42049a:	iret   
  42049b:	jne    0x4204fb
  42049d:	mov    ds:0xe0f45509,al
  4204a2:	std    
  4204a3:	xchg   edi,eax
  4204a4:	popa   
  4204a5:	push   esp
  4204a6:	sbb    al,0xb1
  4204a8:	dec    edx
  4204a9:	xchg   ecx,eax
  4204aa:	rcr    DWORD PTR [edx+0x7d29a8f9],1
  4204b0:	and    BYTE PTR [esi],dh
  4204b2:	xchg   esp,eax
  4204b3:	je     0x4204f0
  4204b5:	or     bl,bh
  4204b7:	iret   
  4204b8:	pop    ds
  4204b9:	xor    bl,BYTE PTR [ecx+0x75]
  4204bc:	mov    dh,0xf3
  4204be:	push   esp
  4204bf:	or     al,0x1f
  4204c1:	xchg   ebx,eax
  4204c2:	cmp    dl,ah
  4204c4:	fs daa 
  4204c6:	and    bh,BYTE PTR [eax-0x728c893e]
  4204cc:	hlt    
  4204cd:	mov    ds:0x4712d13d,al
  4204d2:	add    dh,ah
  4204d4:	push   ss
  4204d5:	in     eax,0xc0
  4204d7:	adc    eax,0x3d841941
  4204dc:	outs   dx,BYTE PTR ds:[esi]
  4204dd:	or     BYTE PTR [ecx-0x28],cl
  4204e0:	das    
  4204e1:	(bad)  
  4204e2:	retf   
  4204e3:	(bad)  
  4204e4:	mov    ds:0x74a1f6fd,eax
  4204e9:	pop    eax
  4204ea:	test   DWORD PTR [edi-0x743fb24],ebp
  4204f0:	add    eax,0x4a64cfe4
  4204f5:	mov    ds:0xe96e6a6b,al
  4204fa:	mov    ds:0x834da080,eax
  4204ff:	push   ecx
  420500:	xchg   BYTE PTR [eax-0x65],bl
  420503:	stc    
  420504:	and    DWORD PTR [edi],esi
  420506:	hlt    
  420507:	(bad)  
  420508:	ja     0x420495
  42050a:	sub    BYTE PTR [ebp-0x46],ah
  42050d:	jle    0x42058b
  42050f:	mov    esi,eax
  420511:	sub    dh,BYTE PTR [ebp+0xe682125]
  420517:	test   eax,0x3bd5419a
  42051c:	hlt    
  42051d:	out    0xf3,al
  42051f:	ret    0x65d8
  420522:	pop    esi
  420523:	fsub   st(4),st
  420525:	jbe    0x42052f
  420527:	and    ah,dl
  420529:	nop
  42052a:	cmp    BYTE PTR [edx-0xd],al
  42052d:	jne    0x4204af
  42052f:	sbb    BYTE PTR [edx],al
  420531:	inc    BYTE PTR [ebp+edi*8-0x66]
  420535:	outs   dx,DWORD PTR ds:[esi]
  420536:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  420538:	fmul   DWORD PTR [eax-0x59]
  42053b:	mov    al,0x30
  42053d:	pop    ss
  42053e:	push   ebp
  42053f:	pop    ds
  420540:	and    eax,DWORD PTR [ecx-0x4f7f142f]
  420546:	sub    esi,esi
  420548:	ret    
  420549:	pop    ecx
  42054a:	(bad)  
  42054b:	(bad)  
  42054c:	dec    DWORD PTR [edx]
  42054e:	jg     0x4205b0
  420550:	fnstenv [edx+esi*1]
  420553:	xor    eax,edx
  420555:	inc    ebp
  420556:	je     0x420593
  420558:	or     esp,ecx
  42055a:	in     al,dx
  42055b:	xor    eax,0x4a63da7f
  420560:	in     al,dx
  420561:	push   0xf563770e
  420566:	push   esi
  420567:	jne    0x420523
  420569:	or     eax,0xca9d6747
  42056e:	pop    ecx
  42056f:	sub    BYTE PTR ds:0x120a0c70,dl
  420575:	and    ah,BYTE PTR [ecx-0x4e]
  420578:	outs   dx,DWORD PTR ds:[esi]
  420579:	outs   dx,DWORD PTR ds:[esi]
  42057a:	je     0x420501
  42057c:	shld   esp,edi,cl
  42057f:	int3   
  420580:	inc    esp
  420581:	out    0x2e,al
  420583:	arpl   di,bp
  420585:	fbld   TBYTE PTR [edi-0x2e]
  420588:	add    al,0x8b
  42058a:	or     BYTE PTR [esi+0x49],0xff
  42058e:	xor    al,0xea
  420590:	aam    0xe7
  420592:	fs mov edx,0xd81b458e
  420598:	pusha  
  420599:	test   al,0x8f
  42059b:	cmc    
  42059c:	cmp    edi,0x18cc74e3
  4205a2:	and    edi,edx
  4205a4:	add    bl,BYTE PTR [ebx-0x7a]
  4205a7:	pop    edx
  4205a8:	mov    cl,0x5c
  4205aa:	or     dl,bl
  4205ac:	mov    ebx,0xc3359d0c
  4205b1:	nop
  4205b2:	les    ebp,FWORD PTR [eax-0x71]
  4205b5:	arpl   WORD PTR [esi+0x50],bx
  4205b8:	rcl    bl,0x98
  4205bb:	mov    ah,0x82
  4205bd:	mov    edx,0x70bef6e8
  4205c2:	mov    cl,0x56
  4205c4:	fiadd  WORD PTR [edx+esi*4]
  4205c7:	std    
  4205c8:	mov    bh,0xa5
  4205ca:	retfw  0xd9b5
  4205ce:	xor    BYTE PTR [eax],bl
  4205d0:	fcom   QWORD PTR [ebx]
  4205d2:	inc    edx
  4205d3:	scas   al,BYTE PTR es:[di]
  4205d5:	sbb    al,0x4b
  4205d7:	push   ecx
  4205d8:	inc    eax
  4205d9:	popa   
  4205da:	xor    esi,DWORD PTR [ebx+0x33]
  4205dd:	pop    esi
  4205de:	dec    edx
  4205df:	mov    edx,0xaccbc205
  4205e4:	add    eax,0xb9ec77bc
  4205e9:	out    dx,eax
  4205ea:	pop    eax
  4205eb:	lods   eax,DWORD PTR ds:[esi]
  4205ec:	sub    eax,0x42cb846d
  4205f1:	ficom  WORD PTR [edx]
  4205f3:	cmp    ch,BYTE PTR gs:[esi+edi*2]
  4205f7:	sbb    al,0x1b
  4205f9:	ins    DWORD PTR es:[edi],dx
  4205fa:	push   edx
  4205fb:	push   cs
  4205fc:	gs mov bl,0xff
  4205ff:	outs   dx,BYTE PTR ds:[esi]
  420600:	pop    esi
  420601:	sar    edi,0x9e
  420604:	or     al,0xe8
  420606:	(bad)  
  420607:	int    0x2b
  420609:	cmp    ebx,ecx
  42060b:	push   0xffffffcc
  42060d:	add    ah,BYTE PTR [edi+edx*8+0x888b8f9]
  420614:	pop    ss
  420615:	fs out dx,al
  420617:	ins    DWORD PTR es:[edi],dx
  420618:	data16 jge 0x420630
  42061b:	add    eax,0xd061d8f5
  420620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420621:	jns    0x420610
  420623:	test   DWORD PTR [ebx],esp
  420625:	push   ds
  420626:	retf   0xd92d
  420629:	popa   
  42062a:	mov    ch,0x7d
  42062c:	dec    ecx
  42062d:	bound  esp,QWORD PTR [esi-0x7]
  420630:	xchg   esi,eax
  420631:	retf   
  420632:	sbb    al,0xad
  420634:	mov    bl,0x9
  420636:	and    DWORD PTR [edx],ebx
  420638:	out    0x75,al
  42063a:	int3   
  42063b:	jno    0x420670
  42063d:	ror    DWORD PTR [edx-0x28715b19],0x57
  420644:	in     al,0xa3
  420646:	test   BYTE PTR [ebp+0x653b1ebf],al
  42064c:	jae    0x4206a1
  42064e:	pop    esp
  42064f:	retf   
  420650:	jns    0x42060b
  420652:	and    BYTE PTR [ebx-0x41],ch
  420655:	lahf   
  420656:	arpl   WORD PTR [edx],si
  420658:	push   edi
  420659:	nop
  42065a:	jmp    0x6d6e72c0
  42065f:	fadd   st(0),st
  420661:	mov    bh,0xf
  420663:	dec    ebx
  420664:	popf   
  420665:	mov    edx,0x9c4fd93e
  42066a:	(bad)  
  42066b:	loope  0x4206b4
  42066d:	nop
  42066e:	mov    ecx,esi
  420670:	sbb    eax,0x9686f9a8
  420675:	xchg   BYTE PTR [edx+edi*8+0x44],bh
  420679:	aam    0x6
  42067b:	push   edx
  42067c:	iret   
  42067d:	test   al,0xfc
  42067f:	and    edi,edx
  420681:	(bad)  
  420682:	(bad)  
  420683:	in     al,0x7f
  420685:	dec    esi
  420686:	push   ecx
  420687:	mov    BYTE PTR [ebx+ebp*1-0x3f0f49d2],ch
  42068e:	nop
  42068f:	xor    eax,0x7c97e39a
  420694:	add    esi,ecx
  420696:	xor    edi,DWORD PTR [esp-0x1d]
  42069a:	push   ebp
  42069b:	sti    
  42069c:	dec    ecx
  42069d:	mov    al,0xf0
  42069f:	sub    BYTE PTR [edx-0x1911e53a],dh
  4206a5:	inc    esp
  4206a6:	and    al,0xb9
  4206a8:	mov    bl,0x37
  4206aa:	gs cli 
  4206ac:	inc    esp
  4206ad:	xlat   BYTE PTR ds:[ebx]
  4206ae:	adc    DWORD PTR [ebp+ebx*2+0x45],ebx
  4206b2:	mov    cl,0x9
  4206b4:	shl    ebp,1
  4206b6:	adc    ebp,0x9172a70a
  4206bc:	out    dx,eax
  4206bd:	mov    eax,ds:0xfec833b8
  4206c2:	fmul   st(1),st
  4206c4:	mov    ch,0xe9
  4206c6:	pop    esi
  4206c7:	cmp    dl,BYTE PTR [ecx-0x69464566]
  4206cd:	push   edx
  4206ce:	mov    ds,WORD PTR [ebx-0x2e]
  4206d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206d2:	xchg   cl,al
  4206d4:	sar    BYTE PTR [ecx-0x72dd5d62],1
  4206da:	xor    eax,0x4ad77935
  4206df:	and    DWORD PTR [ebx-0x7b],ecx
  4206e2:	loopne 0x420726
  4206e4:	xor    dh,ah
  4206e6:	pop    ss
  4206e7:	mov    bh,0xce
  4206e9:	jmp    0xa43b:0x96e0d405
  4206f0:	pop    eax
  4206f1:	jns    0x42068d
  4206f3:	adc    DWORD PTR [esi-0x1],ecx
  4206f6:	int3   
  4206f7:	std    
  4206f8:	pop    ecx
  4206f9:	mov    ecx,0x43a324e8
  4206fe:	mov    bh,0xc6
  420700:	push   es
  420701:	adc    edi,eax
  420703:	mov    ch,0x29
  420705:	in     al,0x5
  420707:	dec    ecx
  420708:	out    dx,al
  420709:	das    
  42070a:	add    ebp,DWORD PTR [ebx-0x4446c6df]
  420710:	push   ds
  420711:	retf   0xeb98
  420714:	jb     0x420759
  420716:	jo     0x4206b0
  420718:	out    dx,eax
  420719:	jmp    0xc06b:0xeb4a590f
  420720:	mov    dl,0xb
  420722:	cvtpi2ps xmm5,QWORD PTR [esi-0x4a733a0]
  420729:	mov    ecx,0xb6a97b57
  42072e:	push   eax
  42072f:	mov    edx,0x9b349bfb
  420734:	aam    0xaf
  420736:	(bad)  
  420737:	pusha  
  420738:	jle    0x42079c
  42073a:	xchg   ecx,eax
  42073b:	fidiv  WORD PTR [ebp+0x5dbc83c6]
  420741:	xchg   ebx,eax
  420742:	cmp    ah,dl
  420744:	push   ss
  420745:	rol    BYTE PTR [edi+eax*8+0x18],1
  420749:	test   eax,0xbd6ee931
  42074e:	sub    edx,DWORD PTR ds:0x1e47ca89
  420754:	cwde   
  420755:	inc    esp
  420756:	mov    edx,0x60b1955f
  42075b:	cs cwde 
  42075d:	mov    ebx,?
  42075f:	fmul   QWORD PTR [ebp+0x57]
  420762:	cli    
  420763:	jecxz  0x42074d
  420765:	jae    0x4207dc
  420767:	jecxz  0x420761
  420769:	jb     0x420744
  42076b:	into   
  42076c:	add    eax,DWORD PTR [edi+0x7a97d21c]
  420772:	sbb    ah,bl
  420774:	stos   BYTE PTR es:[edi],al
  420775:	add    BYTE PTR [edi+0x7f],cl
  420778:	push   edi
  420779:	push   edx
  42077a:	sbb    eax,0x55002042
  42077f:	ins    DWORD PTR es:[edi],dx
  420780:	inc    edi
  420781:	cmc    
  420782:	pop    esi
  420783:	popf   
  420784:	iret   
  420785:	cwde   
  420786:	fistp  WORD PTR [edi+0x6948be0c]
  42078c:	adc    eax,0xc529d3dd
  420791:	rcr    eax,0x67
  420794:	fbstp  TBYTE PTR [eax]
  420796:	sbb    BYTE PTR [edi],0xa5
  420799:	enter  0xe9a7,0xd7
  42079d:	add    dh,bl
  42079f:	sub    DWORD PTR [ebp+0x752f3c2b],ebx
  4207a5:	in     eax,0xf2
  4207a7:	loopne 0x4207fd
  4207a9:	jns    0x4207c1
  4207ab:	rol    BYTE PTR [eax+ebx*1-0x3d],cl
  4207af:	dec    ecx
  4207b0:	mov    bl,0x9c
  4207b2:	xchg   esp,eax
  4207b3:	xchg   esp,eax
  4207b4:	jnp    0x4207c9
  4207b6:	pop    ss
  4207b7:	and    eax,0x12415193
  4207bc:	pop    edi
  4207bd:	sub    al,0x91
  4207bf:	es pop ebp
  4207c1:	imul   ecx,DWORD PTR [edi-0x20102562],0xffffff8a
  4207c8:	cmp    edi,DWORD PTR [ebp-0x53]
  4207cb:	push   0xba1ceace
  4207d0:	mov    ds:0xf62cfe9a,al
  4207d5:	and    DWORD PTR [edi],edi
  4207d7:	leave  
  4207d8:	ss push ebp
  4207da:	mov    bl,0x9e
  4207dc:	xor    al,0x8f
  4207de:	dec    edx
  4207df:	push   0x5
  4207e1:	sub    ah,BYTE PTR [eax-0x304f105b]
  4207e7:	push   ebp
  4207e8:	mov    esi,0x1bffacf2
  4207ed:	jb     0x420801
  4207ef:	ret    
  4207f0:	push   eax
  4207f1:	mov    DWORD PTR [eax+edx*4-0x64c90d86],ebx
  4207f8:	icebp  
  4207f9:	adc    esi,ebx
  4207fb:	add    DWORD PTR [eax],ebp
  4207fd:	mov    ds:0xb1a0c362,al
  420802:	push   ebx
  420803:	xchg   esi,eax
  420804:	add    esi,DWORD PTR [ebp-0x2b]
  420807:	shr    ebx,0xc9
  42080a:	iret   
  42080b:	popa   
  42080c:	cdq    
  42080d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42080e:	test   eax,0x35f5bad7
  420813:	or     al,bl
  420815:	xchg   ebx,eax
  420816:	out    0x5b,al
  420818:	pop    esi
  420819:	rcr    BYTE PTR [esi+0x70493f02],0x52
  420820:	lea    edx,[ebx-0x17]
  420823:	mov    ch,0xbc
  420825:	scas   eax,DWORD PTR es:[edi]
  420826:	xchg   edi,eax
  420827:	pushf  
  420828:	dec    ebp
  420829:	iret   
  42082a:	xchg   ebx,eax
  42082b:	ins    DWORD PTR es:[edi],dx
  42082c:	(bad)  [esi+ecx*2+0x6b1df545]
  420833:	adc    edi,DWORD PTR [edx]
  420835:	lds    ebp,FWORD PTR [eax+0x12]
  420838:	and    eax,0x706128d9
  42083d:	dec    esp
  42083e:	mov    ds:0x8c388fa2,eax
  420843:	inc    ebp
  420844:	lahf   
  420845:	or     BYTE PTR [edi+0x1ce5e9b6],bl
  42084b:	xor    eax,0x7a3aac23
  420850:	mov    edi,0xf3d24ee
  420855:	retf   
  420856:	mov    ch,0x49
  420858:	xor    edx,ebx
  42085a:	fwait
  42085b:	push   0xffffffce
  42085d:	in     al,dx
  42085e:	inc    ebx
  42085f:	retf   
  420860:	(bad)  
  420861:	jo     0x42081e
  420863:	imul   ebp,ebp,0x49
  420866:	push   esp
  420867:	(bad)  
  420868:	fdivr  QWORD PTR [edx+0x22]
  42086b:	not    BYTE PTR [ecx+0x7]
  42086e:	shr    DWORD PTR [edx+0x1035df2c],cl
  420874:	inc    ecx
  420875:	(bad)  
  420876:	dec    eax
  420877:	xor    eax,0x3dc4dea7
  42087c:	cmp    ebp,DWORD PTR [ebx-0x4c]
  42087f:	fcom   DWORD PTR [ebx]
  420881:	test   DWORD PTR [ecx-0x26],ebx
  420884:	or     edi,ecx
  420886:	pop    ebp
  420887:	loope  0x420810
  420889:	out    0x9f,eax
  42088b:	add    BYTE PTR [eax],bh
  42088d:	popa   
  42088e:	jge    0x420820
  420890:	xchg   edx,eax
  420891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420892:	mov    ecx,0x13eabb8e
  420897:	and    BYTE PTR [edi-0x17],ah
  42089a:	aad    0x1
  42089c:	xor    BYTE PTR [esi-0x1e],ch
  42089f:	xor    al,0xab
  4208a1:	gs test edi,esi
  4208a4:	call   0xd1836782
  4208a9:	pop    edx
  4208aa:	mov    bh,0x45
  4208ac:	rol    BYTE PTR [esi+0x4d],0xbb
  4208b0:	or     al,0xd1
  4208b2:	mov    ebp,0xc766ee04
  4208b7:	mov    ebx,0x48319741
  4208bc:	dec    ebp
  4208bd:	sbb    DWORD PTR es:0xe719af64,0xffffff8b
  4208c5:	aam    0xf3
  4208c7:	mov    ch,0xcd
  4208c9:	mov    bh,0x92
  4208cb:	mov    al,0xc8
  4208cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208ce:	mov    ebx,0x835ddd3d
  4208d3:	int3   
  4208d4:	int    0x41
  4208d6:	xchg   ecx,eax
  4208d7:	pop    edi
  4208d8:	cdq    
  4208d9:	cmp    dl,BYTE PTR [ecx]
  4208db:	fnsave [ebx*2-0x48d025f]
  4208e2:	aas    
  4208e3:	pusha  
  4208e4:	push   eax
  4208e5:	hlt    
  4208e6:	adc    BYTE PTR [ecx+0x95a9121],dl
  4208ec:	fistp  QWORD PTR ds:0x5e4fcc99
  4208f2:	or     esi,DWORD PTR [esi-0x14f20434]
  4208f8:	adc    BYTE PTR [edx-0x1],0x67
  4208fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208fe:	sub    al,0xf9
  420900:	sbb    DWORD PTR [ecx],ecx
  420902:	jmp    0x7054:0xc418743b
  420909:	hlt    
  42090a:	fnstsw WORD PTR [edi]
  42090c:	adc    DWORD PTR [edi-0x358a1436],edi
  420912:	fld    QWORD PTR [edx-0x57a01e85]
  420918:	adc    esi,DWORD PTR [esi]
  42091a:	lsl    eax,WORD PTR [edx]
  42091d:	mov    esi,0x474943ac
  420922:	or     BYTE PTR [ecx],ch
  420924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420925:	or     al,0x1a
  420927:	rcr    ebx,1
  420929:	sub    eax,edi
  42092b:	out    0x7c,al
  42092d:	pusha  
  42092e:	push   edx
  42092f:	fwait
  420930:	jno    0x4209a3
  420932:	out    0xf,eax
  420934:	add    al,0x54
  420936:	mov    al,ds:0x79996932
  42093b:	and    DWORD PTR [ebp+0x6b349841],esi
  420941:	cmp    al,BYTE PTR [edi-0x4d]
  420944:	(bad)  
  420945:	push   ss
  420946:	sub    eax,0xccce5eb6
  42094b:	out    0x46,eax
  42094d:	pop    ds
  42094e:	mov    esi,0xf84694f7
  420953:	lods   al,BYTE PTR ds:[esi]
  420954:	fwait
  420955:	pop    ebp
  420956:	mov    cl,0x56
  420958:	(bad)  
  420959:	popa   
  42095a:	outs   dx,DWORD PTR ds:[esi]
  42095b:	mov    DWORD PTR [ebp*1-0x4185f0d5],ebx
  420962:	push   0xfffffff2
  420964:	sbb    al,0x3e
  420966:	push   esi
  420967:	mov    esi,0x8aec399a
  42096c:	dec    ebx
  42096d:	sbb    ah,BYTE PTR [ebx-0x4f3fde77]
  420973:	sub    DWORD PTR [eax+0x46a24acc],esp
  420979:	in     al,dx
  42097a:	test   DWORD PTR [eax+0x6d],0xaaf0639e
  420981:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  420983:	into   
  420984:	jbe    0x4209a8
  420986:	adc    BYTE PTR [ebp+0x7a],0xa9
  42098a:	or     eax,0xeea8bdce
  42098f:	nop
  420990:	ds hlt 
  420992:	jnp    0x4209aa
  420994:	sub    DWORD PTR [ebx+ecx*2+0x33c18807],0xa330b7f5
  42099f:	push   ds
  4209a0:	mov    edx,0x3cd1fcce
  4209a5:	inc    eax
  4209a6:	cmp    al,0x97
  4209a8:	std    
  4209a9:	mov    ah,0x11
  4209ab:	sub    ch,BYTE PTR [edx-0x3b2dafae]
  4209b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209b2:	jo     0x42098a
  4209b4:	jne    0x4209e6
  4209b6:	scas   eax,DWORD PTR es:[edi]
  4209b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209b8:	mov    ds:0x2b9813bf,al
  4209bd:	add    BYTE PTR [edi],0xc9
  4209c0:	lock or BYTE PTR es:[ebx+edi*2],0x5a
  4209c6:	add    eax,0x5f429382
  4209cb:	lahf   
  4209cc:	mov    al,0x4e
  4209ce:	sub    bh,BYTE PTR [eax]
  4209d0:	jo     0x420a32
  4209d2:	idiv   DWORD PTR [ebx+0x36]
  4209d5:	loopne 0x420a23
  4209d7:	sub    ecx,DWORD PTR [bx+si]
  4209da:	bound  esi,QWORD PTR [edx]
  4209dc:	outs   dx,DWORD PTR ds:[esi]
  4209dd:	xchg   esp,eax
  4209de:	enter  0xbcc0,0xd9
  4209e2:	ja     0x4209bc
  4209e4:	loop   0x420a04
  4209e6:	test   eax,0x3cb8d6f1
  4209eb:	outs   dx,DWORD PTR ds:[esi]
  4209ec:	jnp    0x420a34
  4209ee:	mov    ds:0x134f2d5a,eax
  4209f3:	aad    0xb0
  4209f5:	xchg   ebp,eax
  4209f6:	adc    eax,0x2a6504b1
  4209fb:	adc    DWORD PTR [esi+eax*1-0x7],edi
  4209ff:	xchg   ebp,eax
  420a00:	push   edi
  420a01:	shl    BYTE PTR [edx],cl
  420a03:	add    al,dh
  420a05:	mov    ds:0x45f2f059,al
  420a0a:	pop    ecx
  420a0b:	sub    ebp,edx
  420a0d:	mov    al,ds:0x97086eb1
  420a12:	ds add al,0xe0
  420a15:	push   ecx
  420a16:	jo     0x420a60
  420a18:	push   0x33
  420a1a:	loope  0x4209d7
  420a1c:	iret   
  420a1d:	sbb    eax,0x814504df
  420a22:	pop    eax
  420a23:	popa   
  420a24:	or     BYTE PTR [edx-0x326fb5b8],dl
  420a2a:	pop    ebp
  420a2b:	jns    0x420a27
  420a2d:	(bad)  
  420a2e:	loop   0x4209d0
  420a30:	cmp    ecx,DWORD PTR [ebx-0xccb0ced]
  420a36:	push   0x23
  420a38:	inc    esp
  420a39:	push   esi
  420a3a:	and    esp,eax
  420a3c:	xchg   BYTE PTR [edi],dl
  420a3e:	add    al,0x40
  420a40:	outs   dx,DWORD PTR ds:[esi]
  420a41:	call   0xb6bb1389
  420a46:	or     DWORD PTR [ebx+ebx*1+0x40bd4407],edx
  420a4d:	call   0xc998:0x2d5f4bbe
  420a54:	dec    esp
  420a55:	xor    eax,0x8172c16e
  420a5a:	or     al,0xb7
  420a5c:	mov    ch,0x5e
  420a5e:	arpl   WORD PTR [bp-0x52e8],sp
  420a63:	data16 xor dl,BYTE PTR [edx]
  420a66:	stos   BYTE PTR es:[edi],al
  420a67:	mov    edx,0x1993a883
  420a6c:	mov    eax,ds:0x34bc2d3a
  420a71:	repz mov eax,DWORD PTR [edx-0x129eeee6]
  420a78:	call   0x31b695ec
  420a7d:	xchg   ecx,eax
  420a7e:	mov    bh,0x3f
  420a80:	test   eax,0x94ebbf24
  420a85:	xchg   BYTE PTR cs:[esi+edi*1+0xc172dd],bl
  420a8d:	and    eax,DWORD PTR ds:0x9e701ccc
  420a93:	cli    
  420a94:	push   ds
  420a95:	pop    edi
  420a96:	ret    
  420a97:	jge    0x420af9
  420a99:	add    bh,BYTE PTR [edx+ebp*1+0x29]
  420a9d:	xor    DWORD PTR [edi-0x3f],0xffffff83
  420aa1:	inc    ebp
  420aa2:	push   0x3
  420aa4:	add    ebp,ecx
  420aa6:	inc    eax
  420aa7:	adc    esp,edi
  420aa9:	lds    ebp,FWORD PTR [esp+edi*4+0x2a]
  420aad:	sub    BYTE PTR ds:[eax+ebx*8-0x55],bl
  420ab2:	fbld   TBYTE PTR [ebx]
  420ab4:	push   esp
  420ab5:	(bad)  
  420ab6:	push   0x239ecc39
  420abb:	inc    edx
  420abc:	adc    DWORD PTR [eax],ecx
  420abe:	popa   
  420abf:	pop    ds
  420ac0:	jbe    0x420a48
  420ac2:	or     ah,BYTE PTR [ebx+0x47d44332]
  420ac8:	addr16 ret 
  420aca:	jne    0x420ae4
  420acc:	pop    eax
  420acd:	pop    edx
  420ace:	fs mov dh,0x2d
  420ad1:	int    0xd9
  420ad3:	mov    BYTE PTR [ebx],0x2b
  420ad6:	leave  
  420ad7:	in     eax,dx
  420ad8:	call   0xba5a:0x11688c16
  420adf:	imul   ebx,ebp,0xffffffaa
  420ae2:	mov    dh,0xc0
  420ae4:	jmp    0x52e6:0xdeba5239
  420aeb:	mov    dh,0xdc
  420aed:	mov    ebx,DWORD PTR [eax+0x8]
  420af0:	ret    
  420af1:	adc    BYTE PTR [ebp+0x44],0x43
  420af5:	(bad)  
  420af6:	xlat   BYTE PTR ds:[ebx]
  420af7:	ret    0x55ed
  420afa:	sahf   
  420afb:	cli    
  420afc:	inc    esi
  420afd:	add    al,0xf9
  420aff:	loopne 0x420ad4
  420b01:	fild   QWORD PTR [ebp*8-0x2a989ff9]
  420b08:	imul   ecx,DWORD PTR [ebp+esi*4+0x13],0xfffffffb
  420b0d:	or     eax,0x7c197cea
  420b12:	neg    BYTE PTR [eax-0xae36846]
  420b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b19:	dec    edi
  420b1a:	test   DWORD PTR [edi+0x7c9b84ee],eax
  420b20:	ins    DWORD PTR es:[edi],dx
  420b21:	ss scas eax,DWORD PTR es:[edi]
  420b23:	inc    edi
  420b24:	mov    edi,0x803d7141
  420b29:	out    0x37,eax
  420b2b:	inc    edi
  420b2c:	test   BYTE PTR [esi+0x4df13f7b],bh
  420b32:	sbb    ah,BYTE PTR [edx+edx*8-0x4c]
  420b36:	push   esp
  420b37:	test   ebx,esp
  420b39:	fsub   DWORD PTR [ebx]
  420b3b:	mov    dh,BYTE PTR [ebp-0x4a2cf394]
  420b41:	mov    bh,0xf4
  420b43:	push   0x28e7cc04
  420b48:	push   0x2a
  420b4a:	xlat   BYTE PTR ds:[ebx]
  420b4b:	dec    ebp
  420b4c:	cmp    DWORD PTR ds:0x37f3670a,ebp
  420b52:	push   esp
  420b53:	(bad)  
  420b54:	xor    ebx,ecx
  420b56:	mov    ecx,0xba81a27b
  420b5b:	pop    es
  420b5c:	imul   esi,DWORD PTR [edi-0x2da7f6ab],0xed8578db
  420b66:	xchg   ecx,eax
  420b67:	bound  ecx,QWORD PTR [edi+0x29]
  420b6a:	or     DWORD PTR [ecx],ecx
  420b6c:	daa    
  420b6d:	mov    dl,0xba
  420b6f:	aas    
  420b70:	and    ah,BYTE PTR [eax-0x71]
  420b73:	rol    BYTE PTR ds:0x6fab5d53,cl
  420b79:	fisttp QWORD PTR [ecx-0x2e]
  420b7c:	push   ebp
  420b7d:	mov    ah,0x15
  420b7f:	adc    DWORD PTR [edx+0x39],ebx
  420b82:	mov    bl,0x59
  420b84:	ret    
  420b85:	push   ds
  420b86:	sbb    ebp,DWORD PTR [esi+0x40b046f3]
  420b8c:	xor    BYTE PTR [esi-0x6b476b1e],al
  420b92:	adc    edx,DWORD PTR [edx-0xd]
  420b95:	jg     0x420bc5
  420b97:	mov    edx,0x8ceb9dd5
  420b9c:	lock cdq 
  420b9e:	xchg   ebp,eax
  420b9f:	mov    es,WORD PTR ds:0xc15dc33f
  420ba5:	mov    eax,ds:0x38c1f9f7
  420baa:	cmc    
  420bab:	mov    dl,0x9c
  420bad:	out    dx,al
  420bae:	dec    ebp
  420baf:	aaa    
  420bb0:	pop    edx
  420bb1:	in     al,0x6b
  420bb3:	mov    ebx,0x9fbbf50e
  420bb8:	xchg   esp,eax
  420bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bba:	aas    
  420bbb:	lock xchg ebx,eax
  420bbd:	(bad)  
  420bbe:	lods   al,BYTE PTR ds:[esi]
  420bbf:	popf   
  420bc0:	dec    ebp
  420bc1:	out    dx,eax
  420bc2:	sbb    eax,0xae8bb672
  420bc7:	add    dh,BYTE PTR [esi+0x198d4184]
  420bcd:	je     0x420b67
  420bcf:	loop   0x420c0b
  420bd1:	dec    esi
  420bd2:	push   0xffffffe1
  420bd4:	dec    esp
  420bd5:	scas   al,BYTE PTR es:[edi]
  420bd6:	dec    ecx
  420bd7:	cmp    ah,BYTE PTR [ecx-0x210ae64e]
  420bdd:	push   edi
  420bde:	cmc    
  420bdf:	in     eax,0xc5
  420be1:	movq   QWORD PTR [edi-0x30],mm7
  420be5:	cmp    BYTE PTR [ecx],0x9f
  420be8:	(bad)  
  420be9:	jo     0x420bcf
  420beb:	pop    ds
  420bec:	cmp    dh,dl
  420bee:	inc    eax
  420bef:	aad    0xd0
  420bf1:	sar    DWORD PTR [ecx-0x2a74d42d],cl
  420bf7:	and    cl,BYTE PTR [esi-0x6d]
  420bfa:	loop   0x420c10
  420bfc:	mov    dl,al
  420bfe:	xor    esp,DWORD PTR [ecx]
  420c00:	add    BYTE PTR [edx],0xa1
  420c03:	xchg   ebp,eax
  420c04:	inc    ecx
  420c05:	pop    ds
  420c06:	ins    DWORD PTR es:[edi],dx
  420c07:	cdq    
  420c08:	xor    BYTE PTR [ebx-0x6b],cl
  420c0b:	cmp    BYTE PTR [ecx],ah
  420c0d:	sub    ebp,DWORD PTR [edx]
  420c0f:	sub    DWORD PTR [esi-0x25074cc3],ebp
  420c15:	adc    DWORD PTR [esi],0x1
  420c18:	loopne 0x420c80
  420c1a:	inc    eax
  420c1b:	nop
  420c1c:	cmp    BYTE PTR [ebx+0x575dd805],dh
  420c22:	pop    edx
  420c23:	adc    al,dl
  420c25:	das    
  420c26:	or     eax,DWORD PTR ds:[ecx+0x33]
  420c2a:	adc    eax,0x7fdf1d61
  420c2f:	or     DWORD PTR ds:0x13ba93db,ebx
  420c35:	pop    eax
  420c36:	or     eax,0x22e61277
  420c3b:	add    eax,0xa73951d0
  420c40:	push   esi
  420c41:	or     al,0xc7
  420c43:	xor    DWORD PTR [edi+0x37],ebx
  420c46:	fist   DWORD PTR [ebx-0x1b]
  420c49:	out    0xc1,eax
  420c4b:	out    0x65,eax
  420c4d:	frstor [edx]
  420c4f:	add    dl,dl
  420c51:	mov    al,0xc6
  420c53:	call   0x90cdf6dc
  420c58:	mov    al,0x5f
  420c5a:	in     al,0x4e
  420c5c:	xchg   edi,eax
  420c5d:	jg     0x420c21
  420c5f:	lahf   
  420c60:	les    ecx,FWORD PTR [edi+0x59]
  420c63:	ror    DWORD PTR [ebx+0x7c],cl
  420c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c67:	add    bl,ah
  420c69:	adc    al,BYTE PTR [edx-0x4]
  420c6c:	and    dh,BYTE PTR [edi+0x44]
  420c6f:	fimul  DWORD PTR [esi-0xa]
  420c72:	ja     0x420c2b
  420c74:	xchg   BYTE PTR ds:0xd491ba43,bh
  420c7a:	bound  edx,QWORD PTR [edx+0x2eb1f5e8]
  420c80:	sub    DWORD PTR [ebp+0x793889ba],esp
  420c86:	repnz xchg ebp,eax
  420c88:	stc    
  420c89:	sbb    DWORD PTR [eax+eiz*4-0x14],esp
  420c8d:	sub    eax,0xc7b65d05
  420c92:	shl    DWORD PTR [ebx],1
  420c94:	lock hlt 
  420c96:	dec    ecx
  420c97:	cld    
  420c98:	aad    0x2b
  420c9a:	push   edi
  420c9b:	add    DWORD PTR [esi+0x18c5b79a],ecx
  420ca1:	pushf  
  420ca2:	pushf  
  420ca3:	nop
  420ca4:	outs   dx,BYTE PTR ds:[esi]
  420ca5:	cwde   
  420ca6:	cmp    DWORD PTR [ebx+edx*4+0x551911cb],ebp
  420cad:	jnp    0x420cad
  420caf:	fstp   DWORD PTR [ebx-0x70]
  420cb2:	and    ebx,edx
  420cb4:	cmp    eax,0xed15b874
  420cb9:	xchg   ecx,eax
  420cba:	jbe    0x420cc9
  420cbc:	pop    edi
  420cbd:	mov    al,ds:0x63ff6c08
  420cc2:	dec    esp
  420cc3:	fistp  DWORD PTR [ebx]
  420cc5:	jl     0x420c4a
  420cc7:	leave  
  420cc8:	mov    bh,0x9e
  420cca:	mov    al,0x8d
  420ccc:	or     ebp,esi
  420cce:	mov    ah,0xe9
  420cd0:	jns    0x420cdf
  420cd2:	push   ds
  420cd3:	mov    ebx,0xd44b2029
  420cd8:	mov    al,0x95
  420cda:	mov    esp,0xb30c7ef5
  420cdf:	in     al,0x71
  420ce1:	pop    edi
  420ce2:	pop    esp
  420ce3:	scas   al,BYTE PTR es:[edi]
  420ce4:	cs inc eax
  420ce6:	pop    ss
  420ce7:	lods   al,BYTE PTR ds:[esi]
  420ce8:	pop    ss
  420ce9:	(bad)  
  420cea:	idiv   BYTE PTR [esi*1+0x472ae3b0]
  420cf1:	mov    dh,0x9f
  420cf3:	jmp    0x9188c109
  420cf8:	xor    edx,DWORD PTR [edi+0x67322e24]
  420cfe:	sar    eax,cl
  420d00:	bound  eax,QWORD PTR [ebx+0x3f9eafda]
  420d06:	dec    esp
  420d07:	inc    edi
  420d08:	jecxz  0x420d65
  420d0a:	arpl   ax,di
  420d0c:	mov    ebx,0x4373a0a5
  420d11:	nop
  420d12:	scas   eax,DWORD PTR es:[edi]
  420d13:	inc    ebp
  420d14:	push   cs
  420d15:	imul   edi,edi,0xfab1584b
  420d1b:	and    BYTE PTR [edi+0x30ce51ae],0x54
  420d22:	rcl    al,1
  420d24:	jge    0x420d94
  420d26:	adc    edi,0xa607c162
  420d2c:	pop    ecx
  420d2d:	dec    edi
  420d2e:	or     DWORD PTR [ecx],esi
  420d30:	mov    edi,0x372fe16b
  420d35:	cmp    al,0xcd
  420d37:	or     DWORD PTR [edx],esi
  420d39:	push   ds
  420d3a:	and    DWORD PTR [ebx-0x77],0x59
  420d3e:	and    BYTE PTR [ebx-0xe],dh
  420d41:	push   0xc00ef488
  420d46:	xor    BYTE PTR [edi-0x1cba69a3],0xd0
  420d4d:	scas   eax,DWORD PTR es:[edi]
  420d4e:	sub    DWORD PTR es:[ebx-0x7c],eax
  420d52:	rol    dl,cl
  420d54:	jnp    0x420dc8
  420d56:	jbe    0x420d18
  420d58:	and    ebx,DWORD PTR [eax]
  420d5a:	daa    
  420d5b:	mov    ds,edx
  420d5d:	xchg   ebx,eax
  420d5e:	jo     0x420d50
  420d60:	mov    ecx,0xa79d9e2c
  420d65:	dec    edi
  420d66:	cmp    ebx,DWORD PTR [eax+0x7e]
  420d69:	jnp    0x420d8b
  420d6b:	pop    esi
  420d6c:	mov    edx,0x789f94fb
  420d71:	repnz xor eax,0xaf212713
  420d77:	(bad)  
  420d78:	push   DWORD PTR [ebp+0x59]
  420d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d7c:	inc    edi
  420d7d:	fbstp  TBYTE PTR [edx+edx*1-0x22]
  420d81:	fs in  eax,dx
  420d83:	xor    cl,bl
  420d85:	mov    ch,0xb6
  420d87:	icebp  
  420d88:	mov    esp,0x50266324
  420d8d:	fistp  QWORD PTR [eax+edx*2+0x582c14b7]
  420d94:	xor    al,BYTE PTR [edi-0x4f]
  420d97:	jno    0x420d8e
  420d99:	lock bound ebp,QWORD PTR [edx-0x36]
  420d9d:	lods   eax,DWORD PTR ds:[esi]
  420d9e:	retf   0xaf3d
  420da1:	lock retf 0x55b
  420da5:	xchg   ebx,eax
  420da6:	shl    DWORD PTR [ebx+0x3e],0x9b
  420daa:	enter  0xa7da,0xff
  420dae:	(bad)  
  420daf:	std    
  420db0:	inc    esp
  420db1:	xchg   ecx,eax
  420db2:	mov    DWORD PTR [eax-0x6b],eax
  420db5:	add    bh,0x8a
  420db8:	adc    eax,0x6e4cb697
  420dbd:	outs   dx,BYTE PTR ds:[esi]
  420dbe:	adc    al,0x62
  420dc0:	jecxz  0x420d5b
  420dc2:	imul   edi,DWORD PTR [ecx+eiz*1-0x69],0xffffff85
  420dc7:	and    dh,BYTE PTR [ecx]
  420dc9:	scas   al,BYTE PTR es:[edi]
  420dca:	scas   eax,DWORD PTR es:[di]
  420dcc:	ins    DWORD PTR es:[edi],dx
  420dcd:	and    al,0xe1
  420dcf:	fwait
  420dd0:	mov    esp,DWORD PTR [eax+ecx*2]
  420dd3:	daa    
  420dd4:	inc    edx
  420dd5:	jbe    0x420dcb
  420dd7:	ret    
  420dd8:	and    al,0xf8
  420dda:	inc    eax
  420ddb:	aad    0x7b
  420ddd:	stos   BYTE PTR es:[edi],al
  420dde:	retf   0xf2ca
  420de1:	lahf   
  420de2:	sbb    eax,0x7d614473
  420de7:	not    DWORD PTR [ecx-0x34]
  420dea:	jle    0x420e26
  420dec:	or     DWORD PTR ds:0xc5039bf,edi
  420df2:	xchg   esp,eax
  420df3:	arpl   si,ax
  420df5:	dec    ebp
  420df6:	lea    edi,[edx-0xb95aaac]
  420dfc:	mov    eax,ds:0x53df8292
  420e01:	cli    
  420e02:	js     0x420e1a
  420e04:	or     eax,0x5f1ecc31
  420e09:	fcmovb st,st(0)
  420e0b:	mov    esp,0x2fc35c0e
  420e10:	pop    ebp
  420e11:	daa    
  420e12:	stc    
  420e13:	pop    edx
  420e14:	push   eax
  420e15:	mov    esi,0x3f346f27
  420e1a:	inc    ebx
  420e1b:	and    al,BYTE PTR [ebx-0x4b3061f]
  420e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e22:	test   eax,0x47b2ff67
  420e27:	jmp    0x6cb0:0x251306c3
  420e2e:	scas   al,BYTE PTR es:[edi]
  420e2f:	xor    eax,0x2d49198a
  420e34:	data16 mov al,0xc3
  420e37:	lock mov eax,ds:0x3f10fc71
  420e3d:	ffreep st(0)
  420e3f:	jle    0x420df2
  420e41:	xchg   esp,eax
  420e42:	jle    0x420e52
  420e44:	mov    al,ds:0x15e8e6cf
  420e49:	nop
  420e4a:	aas    
  420e4b:	faddp  st(2),st
  420e4d:	cmp    esp,DWORD PTR [eax-0x28cbcd51]
  420e53:	or     esp,DWORD PTR ds:0x7539376e
  420e59:	int3   
  420e5a:	xchg   edx,eax
  420e5b:	pop    ebp
  420e5c:	xor    cl,dh
  420e5e:	popa   
  420e5f:	retf   
  420e60:	pop    esp
  420e61:	js     0x420ec9
  420e63:	dec    ecx
  420e64:	cwde   
  420e65:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420e67:	call   0x5c2942ce
  420e6c:	push   esi
  420e6d:	mov    WORD PTR [eax+0x27],ss
  420e70:	push   0xc442ab9f
  420e75:	mov    BYTE PTR [esi-0x3c7f4874],dh
  420e7b:	dec    edx
  420e7c:	jmp    0x420e33
  420e7e:	xchg   ebx,eax
  420e7f:	imul   eax,DWORD PTR [eax-0x13],0xbb875bb
  420e86:	in     al,0xbe
  420e88:	add    dl,al
  420e8a:	ret    0xfcb2
  420e8d:	shr    BYTE PTR [esp+ecx*1],cl
  420e90:	fdivr  st(0),st
  420e92:	fild   WORD PTR [ebx-0x1]
  420e95:	dec    esi
  420e96:	xor    cl,ch
  420e98:	fs push edx
  420e9a:	inc    ecx
  420e9b:	add    DWORD PTR [ebx+0x1a],ecx
  420e9e:	sbb    ch,BYTE PTR [ecx+0x18]
  420ea1:	cwde   
  420ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ea3:	push   es
  420ea4:	les    esi,FWORD PTR [ecx-0x20]
  420ea7:	mov    ds,WORD PTR [eax]
  420ea9:	xchg   esp,eax
  420eaa:	fbstp  TBYTE PTR [eax+0x3a1c1244]
  420eb0:	std    
  420eb1:	ss sub al,0x16
  420eb4:	adc    BYTE PTR [eax-0x6a],0x4e
  420eb8:	mov    al,ds:0x2f4bc88d
  420ebd:	add    eax,0x4a5f7da6
  420ec2:	leave  
  420ec3:	push   esp
  420ec4:	add    esp,ebp
  420ec6:	add    esp,DWORD PTR [ecx+0x19]
  420ec9:	mov    ?,WORD PTR [edx+0x43dbbcaa]
  420ecf:	inc    edi
  420ed0:	(bad)  
  420ed1:	mov    al,ds:0xaf8cfdb7
  420ed6:	test   dl,dl
  420ed8:	mov    BYTE PTR [eax+0x4f],dl
  420edb:	push   ecx
  420edc:	retf   
  420edd:	shr    BYTE PTR [edi],1
  420edf:	ja     0x420eea
  420ee1:	and    dl,BYTE PTR [ecx-0x32]
  420ee4:	mov    ah,0x74
  420ee6:	lahf   
  420ee7:	outs   dx,BYTE PTR ds:[esi]
  420ee8:	ja     0x420ed8
  420eea:	jae    0x420edd
  420eec:	js     0x420eb4
  420eee:	push   esp
  420eef:	jo     0x420f24
  420ef1:	leave  
  420ef2:	cmp    al,0x2f
  420ef4:	dec    esp
  420ef5:	sbb    cl,bl
  420ef7:	cmc    
  420ef8:	dec    esi
  420ef9:	ret    0x2dd7
  420efc:	push   edx
  420efd:	ja     0x420edb
  420eff:	pop    esp
  420f00:	movd   mm1,DWORD PTR [edi-0x34]
  420f04:	sub    ebx,eax
  420f06:	dec    eax
  420f07:	jbe    0x420ef6
  420f09:	call   0x9c8d948a
  420f0e:	imul   ebx,DWORD PTR [esi+0x3389b833],0x53
  420f15:	or     edi,DWORD PTR [eax+esi*4]
  420f18:	ins    BYTE PTR es:[edi],dx
  420f19:	cmp    esp,DWORD PTR [eax+0x46]
  420f1c:	push   cs
  420f1d:	cmp    dh,BYTE PTR [eax+ebx*2]
  420f20:	jno    0x420f9d
  420f22:	out    0xb0,eax
  420f24:	jbe    0x420edb
  420f26:	bnd jbe 0x420fa0
  420f29:	idiv   DWORD PTR [edx+0x4]
  420f2c:	stc    
  420f2d:	inc    cx
  420f2f:	mov    BYTE PTR [edx],al
  420f31:	daa    
  420f32:	outs   dx,DWORD PTR ds:[esi]
  420f33:	out    dx,al
  420f34:	out    dx,eax
  420f35:	rol    bh,0x30
  420f38:	cwde   
  420f39:	xor    BYTE PTR [edi+0x1],bh
  420f3c:	push   cs
  420f3d:	pop    ecx
  420f3e:	push   edi
  420f3f:	xchg   esp,eax
  420f40:	in     al,0x28
  420f42:	adc    esi,DWORD PTR [esi-0x7c46d3a4]
  420f48:	jmp    0x30a:0x20e5ef02
  420f4f:	scas   eax,DWORD PTR es:[edi]
  420f50:	xlat   BYTE PTR ds:[ebx]
  420f51:	sbb    al,0x72
  420f54:	retf   
  420f55:	clc    
  420f56:	test   al,0x96
  420f58:	sub    al,0x5b
  420f5a:	dec    ebx
  420f5b:	daa    
  420f5c:	daa    
  420f5d:	std    
  420f5e:	call   0x4e17d2da
  420f63:	ret    
  420f64:	pop    esi
  420f65:	add    al,al
  420f67:	ficom  WORD PTR [edi-0x3d]
  420f6a:	jle    0x420f3c
  420f6c:	sbb    BYTE PTR [edi-0x6fb7e6ca],dh
  420f72:	cmc    
  420f73:	fucom  st(4)
  420f75:	add    al,0xa1
  420f77:	push   esi
  420f78:	add    esp,DWORD PTR [edi]
  420f7a:	shr    BYTE PTR [eax+0x2b210553],0x5a
  420f81:	jg     0x420fac
  420f83:	pop    ds
  420f84:	retf   0x4cb0
  420f87:	dec    ebp
  420f88:	and    BYTE PTR [ebx+0x157a060f],ch
  420f8e:	pop    eax
  420f8f:	in     eax,0x3d
  420f91:	int3   
  420f92:	jns    0x420ff6
  420f94:	and    ah,cl
  420f96:	jge    0x420fec
  420f98:	push   ds
  420f99:	retf   
  420f9a:	mov    bh,ah
  420f9c:	dec    esi
  420f9d:	dec    ebp
  420f9e:	jecxz  0x421016
  420fa0:	xchg   ebp,eax
  420fa1:	push   esp
  420fa2:	jmp    0xd265:0x3b3bdbbc
  420fa9:	sub    eax,DWORD PTR [ebx+0x6ba783d1]
  420faf:	mov    ecx,0x1055812b
  420fb4:	push   0x5
  420fb6:	repz push esp
  420fb8:	cld    
  420fb9:	and    eax,0x9cd73031
  420fbe:	imul   ebx,edi,0xffffffd9
  420fc1:	mov    edi,0xc47ff930
  420fc6:	and    DWORD PTR [edi],esi
  420fc8:	imul   ecx,DWORD PTR ds:0x15981563,0x1b2ea868
  420fd2:	mov    cl,0x23
  420fd4:	pop    edi
  420fd5:	sbb    al,0xa1
  420fd7:	push   edx
  420fd8:	jmp    0x421009
  420fda:	xor    eax,0x1229ed96
  420fdf:	in     eax,dx
  420fe0:	adc    al,BYTE PTR [eax-0x7dbd2916]
  420fe6:	mov    esi,0x2991ff23
  420feb:	repz sub DWORD PTR [ecx+0x75],edx
  420fef:	ins    BYTE PTR es:[edi],dx
  420ff0:	(bad)  
  420ff1:	jmp    0x420f86
  420ff3:	push   ds
  420ff4:	test   eax,0x6a61bbe5
  420ff9:	mov    esp,DWORD PTR [ebx+0x46]
  420ffc:	les    esp,FWORD PTR [ebx]
  420ffe:	dec    esi
  420fff:	hlt    
  421000:	sub    DWORD PTR [ebx],esp
  421002:	mov    al,ds:0xa37e37b2
  421007:	jmp    0x6c4d:0xbfcc0392
  42100e:	push   edi
  42100f:	out    dx,al
  421010:	mov    ds:0xb41740ad,eax
  421015:	pushf  
  421016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421017:	pop    esi
  421018:	test   BYTE PTR [edx],ch
  42101a:	(bad)  
  42101b:	mov    edx,0x1b6bb4d8
  421020:	ins    DWORD PTR es:[edi],dx
  421021:	test   eax,0xf67f37fe
  421026:	push   edi
  421027:	js     0x420fbc
  421029:	test   eax,0x2be19f51
  42102e:	mov    edx,DWORD PTR [edi+0x35]
  421031:	dec    eax
  421032:	in     eax,dx
  421033:	mov    edx,DWORD PTR [eax+0x39]
  421036:	fdivr  DWORD PTR [ebx+0x40]
  421039:	and    BYTE PTR [esi-0x3f715046],cl
  42103f:	mov    bh,0x69
  421041:	aas    
  421042:	dec    ebx
  421043:	imul   ebx,DWORD PTR [edi+0x48],0xfffffff3
  421047:	push   ebp
  421048:	adc    eax,0xd0f16756
  42104d:	jecxz  0x42107d
  42104f:	jno    0x421090
  421051:	or     DWORD PTR [esp+eiz*2+0x37],edi
  421055:	mov    edx,eax
  421057:	xchg   BYTE PTR [ebx+0x7f],cl
  42105a:	call   0x726f:0x6eaa0ccb
  421061:	cdq    
  421062:	jle    0x421004
  421064:	sub    eax,0x1b626954
  421069:	xchg   ebp,eax
  42106a:	mov    al,gs:0x49e85525
  421070:	in     eax,dx
  421071:	ja     0x421025
  421073:	out    dx,eax
  421074:	xchg   ecx,eax
  421075:	fdiv   DWORD PTR [ebp+0x63628dbe]
  42107b:	pop    edx
  42107c:	or     bl,ch
  42107e:	rcl    BYTE PTR [ebx-0x79],0x7e
  421082:	cmp    al,0x8d
  421084:	ret    0x21a7
  421087:	inc    ebx
  421088:	inc    esi
  421089:	mov    bh,BYTE PTR [eax]
  42108b:	push   ds
  42108c:	test   BYTE PTR [eax+0x70],cl
  42108f:	dec    ebx
  421090:	(bad)  
  421092:	adc    ebx,DWORD PTR [ecx]
  421094:	stos   DWORD PTR es:[edi],eax
  421095:	arpl   WORD PTR [ecx],sp
  421097:	hlt    
  421098:	cld    
  421099:	mov    cl,0xd0
  42109b:	push   esi
  42109c:	jns    0x4210f3
  42109e:	cld    
  42109f:	js     0x421092
  4210a1:	sub    eax,DWORD PTR [eax]
  4210a3:	add    BYTE PTR [edi],cl
  4210a5:	dec    ecx
  4210a6:	inc    esi
  4210a7:	dec    esi
  4210a8:	inc    ebx
  4210a9:	cmc    
  4210aa:	outs   dx,BYTE PTR ds:[esi]
  4210ab:	test   ch,al
  4210ad:	in     eax,0x10
  4210af:	arpl   WORD PTR [esi+0x76b3f722],ax
  4210b5:	and    esi,0x51097e43
  4210bb:	test   BYTE PTR [ebx+0xc],al
  4210be:	jl     0x4210ce
  4210c0:	mov    BYTE PTR [ebx],ah
  4210c2:	jecxz  0x421059
  4210c4:	push   ss
  4210c5:	fldcw  WORD PTR [ebp+0x536c02a]
  4210cb:	xchg   edi,ebx
  4210cd:	cmp    BYTE PTR [ebp-0x2a32d80a],bl
  4210d3:	push   eax
  4210d4:	fild   WORD PTR [ecx]
  4210d6:	(bad)  
  4210d7:	(bad)  
  4210d8:	sub    eax,0x6da2ec7
  4210dd:	retf   0x7008
  4210e0:	mov    dl,0xec
  4210e2:	inc    edi
  4210e3:	inc    ebp
  4210e4:	sub    esp,esp
  4210e6:	jl     0x4210b8
  4210e8:	jp     0x4210b1
  4210ea:	pop    esp
  4210eb:	stos   DWORD PTR es:[edi],eax
  4210ec:	push   ss
  4210ed:	xor    BYTE PTR [edx],0x49
  4210f0:	(bad)  
  4210f1:	std    
  4210f2:	pop    ss
  4210f3:	and    DWORD PTR [ebx-0x20],esi
  4210f6:	retf   
  4210f7:	mov    BYTE PTR [edx+0x23],dh
  4210fa:	cwde   
  4210fb:	fs push ds
  4210fd:	in     al,dx
  4210fe:	icebp  
  4210ff:	dec    ebx
  421100:	sub    DWORD PTR [eax-0x515d0311],0x710a5d6a
  42110a:	xor    dh,dh
  42110c:	ds jl  0x421154
  42110f:	dec    edx
  421110:	in     al,0xbf
  421112:	xor    ebx,ecx
  421114:	and    esp,DWORD PTR [ebp+0x1b5fb7ac]
  42111a:	repz and dl,0x16
  42111e:	out    dx,al
  42111f:	mov    dl,BYTE PTR [ecx-0x65496000]
  421125:	imul   eax,esp,0xffffff88
  421128:	sbb    edi,DWORD PTR [edx]
  42112a:	and    ebp,DWORD PTR [edi+0x3cedcfad]
  421130:	jmp    0x4723:0xf7519523
  421137:	mov    eax,ds:0xb9c5977d
  42113c:	add    al,0x83
  42113e:	pop    ebp
  42113f:	ret    
  421140:	jns    0x42118d
  421142:	sar    BYTE PTR [eax-0x61],0xee
  421146:	div    dh
  421148:	daa    
  421149:	xor    esp,DWORD PTR [edi]
  42114b:	sar    DWORD PTR [edx],0x48
  42114e:	inc    ebp
  42114f:	sub    eax,0x1b858058
  421154:	jmp    0xd792:0x8a74752
  42115b:	cwde   
  42115c:	cdq    
  42115d:	and    eax,0x3401095f
  421162:	scas   eax,DWORD PTR es:[edi]
  421163:	push   ss
  421164:	inc    esi
  421165:	out    dx,al
  421166:	pop    esi
  421167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421168:	jns    0x421183
  42116a:	and    dh,dl
  42116c:	mov    esi,0x53af21aa
  421171:	sbb    ecx,DWORD PTR [eax-0x2e]
  421174:	les    esi,FWORD PTR [ebx+0x8]
  421177:	sub    BYTE PTR [edx-0x2e6bdcfc],al
  42117d:	pop    eax
  42117e:	mov    eax,ds:0xe6f1b64d
  421183:	jnp    0x4211a8
  421185:	mov    esi,0x14f5ba5b
  42118a:	push   edx
  42118b:	sbb    ecx,DWORD PTR [eax+0x486dd142]
  421191:	xor    cl,BYTE PTR [esi+0x46]
  421194:	push   cs
  421195:	mov    edx,0x840a7b9c
  42119a:	or     BYTE PTR [edx+0x34],0x7b
  42119e:	aas    
  42119f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211a0:	test   al,0xa3
  4211a2:	sahf   
  4211a3:	mov    esi,0xa625f5e6
  4211a8:	mov    ds:0x2db7391d,al
  4211ad:	data16 test al,0xde
  4211b0:	dec    edi
  4211b1:	jmp    0x3e57:0x4b42fc06
  4211b8:	int3   
  4211b9:	ins    DWORD PTR es:[edi],dx
  4211ba:	es (bad) 
  4211bc:	mov    bh,0x51
  4211be:	std    
  4211bf:	imul   edx,edi,0x27bbd719
  4211c5:	dec    ebx
  4211c6:	out    0xff,eax
  4211c8:	in     eax,0x1e
  4211ca:	retf   
  4211cb:	jmp    0x4211c0
  4211cd:	adc    al,0x16
  4211cf:	adc    eax,0x6db9c281
  4211d4:	in     al,0x27
  4211d6:	ds add al,0x6a
  4211d9:	in     al,dx
  4211da:	dec    esp
  4211db:	sub    al,0xd9
  4211dd:	mov    al,0x2d
  4211df:	std    
  4211e0:	push   0x5ea0e111
  4211e5:	cmp    esi,edi
  4211e7:	call   0xa93:0x20772cd
  4211ee:	repz out dx,al
  4211f0:	add    eax,0xd6cae077
  4211f5:	cmp    DWORD PTR [ecx+0x23],ebx
  4211f8:	hlt    
  4211f9:	(bad)  
  4211fa:	mov    bl,0xc1
  4211fc:	nop
  4211fd:	fadd   DWORD PTR [ebx-0x56]
  421200:	sub    bl,bl
  421202:	pop    es
  421203:	lods   eax,DWORD PTR ds:[esi]
  421204:	pop    ss
  421205:	add    DWORD PTR [edx],esi
  421207:	add    DWORD PTR [esi-0x74],eax
  42120a:	pop    eax
  42120b:	or     bh,bh
  42120d:	dec    DWORD PTR [esi]
  42120f:	jbe    0x42119b
  421211:	js     0x421233
  421213:	push   eax
  421214:	loop   0x4211f7
  421216:	sub    ch,dl
  421218:	and    ebp,DWORD PTR [esi+0x1248f742]
  42121e:	imul   esi,DWORD PTR [ebp+0x2b],0xa100e83f
  421225:	stos   BYTE PTR es:[edi],al
  421226:	ret    
  421227:	xchg   esp,eax
  421228:	loope  0x4211f2
  42122a:	cmp    eax,0xe351194b
  42122f:	inc    esp
  421230:	xchg   edi,eax
  421231:	loop   0x421285
  421233:	test   eax,0xdeeb4d01
  421238:	adc    BYTE PTR [eax],al
  42123a:	(bad)  
  42123b:	pop    esi
  42123c:	out    dx,al
  42123d:	jmp    0x9fb3:0x11fb2f86
  421244:	loope  0x421299
  421246:	sahf   
  421247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421248:	loop   0x4211e0
  42124a:	mov    ds:0x7c890cd1,eax
  42124f:	lods   al,BYTE PTR ds:[esi]
  421250:	rol    BYTE PTR [ebx],cl
  421252:	(bad)  
  421253:	cmp    BYTE PTR ds:0x845ca91d,ch
  421259:	push   0xffffff9b
  42125b:	(bad)  
  42125c:	and    DWORD PTR [ebx-0x343803c0],esp
  421262:	mov    edx,esp
  421264:	scas   al,BYTE PTR es:[edi]
  421265:	fisubr WORD PTR [edx]
  421267:	ins    BYTE PTR es:[edi],dx
  421268:	ins    BYTE PTR es:[edi],dx
  421269:	mov    al,ds:0x2a5c12ae
  42126e:	inc    edx
  42126f:	inc    bh
  421271:	xlat   BYTE PTR ds:[ebx]
  421272:	fst    DWORD PTR [ebx+edx*4]
  421275:	lods   al,BYTE PTR ds:[esi]
  421276:	das    
  421277:	int    0x64
  421279:	push   edx
  42127a:	sahf   
  42127b:	les    eax,FWORD PTR [ebx-0x32c6af3d]
  421281:	aas    
  421282:	xor    bl,BYTE PTR [edi+0x2a4dda09]
  421288:	imul   ecx,DWORD PTR [ebp-0x7d],0x8ecd6c2e
  42128f:	dec    edi
  421290:	mov    cs,WORD PTR [esi-0x6c]
  421293:	ds jp  0x4212ec
  421296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421297:	pop    edi
  421298:	nop
  421299:	mov    al,0x1b
  42129b:	pop    ebp
  42129c:	mov    al,ds:0xaba3497
  4212a1:	jl     0x4212d7
  4212a3:	(bad)  
  4212a4:	xor    al,BYTE PTR [esi]
  4212a6:	aam    0xae
  4212a8:	popa   
  4212a9:	psubq  mm1,QWORD PTR [ecx-0x41]
  4212ad:	mov    dl,0x26
  4212af:	popa   
  4212b0:	out    dx,eax
  4212b1:	nop
  4212b2:	sub    al,0x15
  4212b4:	(bad)  
  4212b5:	cmp    edx,DWORD PTR [eax-0x15]
  4212b8:	mov    dh,0xf1
  4212ba:	in     eax,dx
  4212bb:	enter  0x55a8,0xf2
  4212bf:	cdq    
  4212c0:	and    cl,BYTE PTR [eax+0x73240319]
  4212c6:	cmp    eax,0x303e26e3
  4212cb:	sub    BYTE PTR [edx+0x461723b5],0x36
  4212d2:	ss (bad) 
  4212d4:	cmp    al,0x76
  4212d6:	rcr    WORD PTR [edx+eax*2+0x32f4c4f5],0x85
  4212df:	mov    eax,0x41bb3b8d
  4212e4:	fisttp QWORD PTR ds:0x122308aa
  4212ea:	das    
  4212eb:	cmp    BYTE PTR [esi-0x56],bh
  4212ee:	mov    ebp,DWORD PTR [ebx+0x27]
  4212f1:	sub    eax,ecx
  4212f3:	int3   
  4212f4:	popa   
  4212f5:	push   ecx
  4212f6:	xor    al,0x3c
  4212f8:	ss es push edx
  4212fb:	lahf   
  4212fc:	sub    eax,0xe0025ec2
  421301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421302:	fldcw  WORD PTR [eiz*2+0x3bbd388d]
  421309:	push   es
  42130a:	adc    dl,BYTE PTR [esi+0xf933213]
  421310:	mov    ds:0xf0b2586a,eax
  421315:	sbb    BYTE PTR [ebp+eiz*2+0x67],dl
  421319:	cmp    eax,DWORD PTR [ebx+0x273f2bb0]
  42131f:	push   esi
  421320:	stos   BYTE PTR es:[edi],al
  421321:	enter  0x381b,0x7
  421325:	pop    ebp
  421326:	pusha  
  421327:	xor    bh,ch
  421329:	push   cs
  42132a:	jl     0x421314
  42132c:	dec    esp
  42132d:	ds mov edx,0xd2b780c0
  421333:	mov    dh,0x58
  421335:	push   DWORD PTR [edi]
  421337:	enter  0xbe7,0xd2
  42133b:	data16 jns 0x421390
  42133e:	cs push esp
  421340:	lods   al,BYTE PTR ds:[esi]
  421341:	push   eax
  421342:	mov    al,ds:0x7ed193b3
  421347:	ror    esp,cl
  421349:	mov    bh,0xc1
  42134b:	inc    esi
  42134c:	int3   
  42134d:	pop    ebp
  42134e:	mov    al,0xd7
  421350:	sti    
  421351:	dec    esi
  421352:	adc    eax,0xe4e6a55f
  421357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421358:	fwait
  421359:	sub    BYTE PTR [eax-0x145fc257],0xad
  421360:	cmp    eax,0x111d1efe
  421365:	sbb    ecx,DWORD PTR [si]
  421368:	jp     0x421364
  42136a:	retw   
  42136c:	push   eax
  42136d:	sahf   
  42136e:	or     DWORD PTR [edx],esi
  421370:	inc    edi
  421371:	lock addr16 jg 0x421399
  421375:	mov    ds:0x663c1c54,al
  42137a:	sub    BYTE PTR [eax-0x3b2e6daa],dl
  421380:	push   0x2dfc92fe
  421385:	hlt    
  421386:	push   es
  421387:	(bad)  [ebp-0x65b217e2]
  42138d:	outs   dx,DWORD PTR ds:[esi]
  42138e:	cmp    eax,0x65f88b4
  421393:	das    
  421394:	int    0xdf
  421396:	sub    bl,BYTE PTR [edx-0x2e0a263a]
  42139c:	pop    edi
  42139d:	ror    BYTE PTR [ebx+esi*4],1
  4213a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213a1:	into   
  4213a2:	sub    bh,BYTE PTR [ebp-0x5e86cd5f]
  4213a8:	ficomp DWORD PTR [ebp-0x2ba0cc9d]
  4213ae:	jno    0x42142e
  4213b0:	(bad)  
  4213b1:	pop    ecx
  4213b2:	xchg   DWORD PTR [ebp-0x63],esp
  4213b5:	sbb    esp,DWORD PTR [ecx-0x33afd3a5]
  4213bb:	in     al,dx
  4213bc:	daa    
  4213bd:	add    esp,ebx
  4213bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213c0:	pop    ebx
  4213c1:	pop    ebp
  4213c2:	jne    0x42136f
  4213c4:	mov    dh,0x41
  4213c6:	cmp    bl,BYTE PTR [edx-0x7d]
  4213c9:	fs repnz xchg ecx,eax
  4213cc:	sub    al,0x64
  4213ce:	cdq    
  4213cf:	jp     0x421421
  4213d1:	xchg   edx,eax
  4213d2:	pop    es
  4213d3:	stos   DWORD PTR es:[edi],eax
  4213d4:	in     al,dx
  4213d5:	imul   edx,DWORD PTR [eax+0x74dec979],0xd4e42bd
  4213df:	pop    esp
  4213e0:	inc    esp
  4213e1:	repnz mov ds:0x7ca55a1e,al
  4213e7:	lea    ecx,[ecx+0xeaa49a8]
  4213ed:	aas    
  4213ee:	mov    al,0x3b
  4213f0:	in     eax,0x10
  4213f2:	sbb    eax,0x1d0ca173
  4213f7:	in     al,dx
  4213f8:	mov    ?,WORD PTR [edx+0x34a9121a]
  4213fe:	push   edi
  4213ff:	cmp    BYTE PTR [ebx-0x59],ch
  421402:	dec    ecx
  421403:	xchg   ebp,eax
  421404:	leave  
  421405:	or     BYTE PTR [ecx],0x1e
  421408:	sbb    cl,BYTE PTR ds:0x1929dd90
  42140e:	sub    eax,0x3436c8ef
  421413:	and    al,0x5c
  421415:	dec    edi
  421416:	cmp    al,0x2a
  421418:	xor    BYTE PTR [ecx+0x2e],dh
  42141b:	into   
  42141c:	sbb    eax,eax
  42141e:	jle    0x42147b
  421420:	and    bl,ch
  421422:	push   cs
  421423:	inc    eax
  421424:	aam    0x0
  421426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421427:	fwait
  421428:	aaa    
  421429:	jne    0x421456
  42142b:	mov    ah,0x52
  42142d:	sbb    BYTE PTR [ecx+0x747ebe96],cl
  421433:	jmp    0xf3ff0ef3
  421438:	je     0x42140e
  42143a:	pop    ss
  42143b:	or     BYTE PTR [ecx-0x69],cl
  42143e:	out    0x8d,al
  421440:	sbb    bl,BYTE PTR [edi-0x70c3789d]
  421446:	rol    dh,0xba
  421449:	(bad)  
  42144a:	inc    esi
  42144b:	aam    0x5f
  42144d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42144e:	loop   0x4213df
  421450:	add    al,0x56
  421452:	pop    esp
  421453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421454:	(bad)  
  421455:	xor    bh,dh
  421457:	pop    edi
  421458:	cmp    ebx,DWORD PTR [ebp-0x6a]
  42145b:	mov    BYTE PTR [eax+eax*8-0x41],bl
  42145f:	test   DWORD PTR [edx-0x2],esi
  421462:	mov    ebp,0x2fa62257
  421467:	setae  BYTE PTR [edx+eax*4-0x7b]
  42146c:	mov    eax,0xb4d5c043
  421471:	mov    ebp,0xff871873
  421476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421477:	ret    
  421478:	xor    ch,ah
  42147a:	jbe    0x421468
  42147c:	aam    0x1b
  42147e:	ret    
  42147f:	and    al,0xca
  421481:	je     0x421463
  421483:	sbb    al,0x45
  421485:	push   ebx
  421486:	or     BYTE PTR [ebx],dh
  421488:	dec    ebx
  421489:	xchg   BYTE PTR [edx+ebp*2+0x56],dh
  42148d:	mul    BYTE PTR [edi-0x3ffe97b]
  421493:	je     0x42145d
  421495:	mov    ah,0xb9
  421497:	dec    ecx
  421498:	jne    0x4214f7
  42149a:	pop    edi
  42149b:	fnstcw WORD PTR [eax-0x24a32d6f]
  4214a1:	cmp    DWORD PTR [ecx+0x21],0xc16176d7
  4214a8:	sbb    esi,DWORD PTR [esi+0x5c]
  4214ab:	mov    BYTE PTR [eax],al
  4214ad:	mov    fs,ebp
  4214af:	mov    al,BYTE PTR [ecx+ebx*1-0x70]
  4214b3:	or     al,0xba
  4214b5:	pop    ebx
  4214b6:	icebp  
  4214b7:	sar    DWORD PTR cs:[edi-0x63],0x43
  4214bc:	fdivp  st(4),st
  4214be:	shl    BYTE PTR [eax-0x3b01a4d],1
  4214c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214c5:	mov    dl,0x69
  4214c7:	inc    esp
  4214c8:	shl    BYTE PTR [ebx],0xc0
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x3a9c6400
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xb711e94e
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	inc    DWORD PTR [ebx+ebx*2+0xdfcf8cd]
  421834:	mov    WORD PTR [ebp+0x1e],es
  421837:	stos   BYTE PTR es:[edi],al
  421838:	mov    gs:0x5d0136ef,eax
  42183e:	inc    eax
  42183f:	dec    DWORD PTR ds:0xaa1a458c
  421845:	gs jecxz 0x421858
  421848:	leave  
  421849:	add    DWORD PTR [ebp-0x8],ebx
  42184c:	dec    DWORD PTR ds:0xaa1a458c
  421852:	mov    gs:0x5d01c910,eax
  421858:	clc    
  421859:	dec    DWORD PTR ds:0xaa1a458c
  42185f:	mov    gs:0x5d01c910,eax
  421865:	clc    
  421866:	dec    DWORD PTR ds:0xaae2458c
  42186c:	mov    gs:0x53bbd61e,eax
  421872:	clc    
  421873:	dec    ebx
  421874:	add    al,0x41
  421876:	mov    fs:0x316e29ab,al
  42187c:	popf   
  42187d:	imul   esi,DWORD PTR [ebx+ecx*4],0x2afe7ddf
  421884:	jge    0x42185e
  421886:	add    al,0xce
  421888:	xor    BYTE PTR [edx-0x6f69cca0],ch
  42188e:	jns    0x42183c
  421890:	daa    
  421891:	jg     0x42181d
  421893:	pop    ss
  421894:	(bad)  
  421895:	jle    0x421880
  421897:	push   0x42bbd833
  42189c:	fbld   TBYTE PTR [ebp+0x77]
  42189f:	lds    eax,FWORD PTR [ecx]
  4218a1:	(bad)  
  4218a2:	les    ecx,FWORD PTR ds:[edi+edx*2]
  4218a6:	fdiv   st(7),st
  4218a8:	or     eax,0xaa1a458c
  4218ad:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4218af:	mov    DWORD PTR ds:0x6d001e58,esi
  4218b5:	pop    es
  4218b6:	iret   
  4218b7:	mov    ebp,0x5b26a088
  4218bc:	add    bl,0x59
  4218bf:	cmp    ah,dh
  4218c1:	cmc    
  4218c2:	push   edx
  4218c3:	je     0x42189c
  4218c5:	adc    dl,dh
  4218c7:	add    BYTE PTR [ebx-0x3006f4e6],bl
  4218cd:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218cf:	push   0x52724fb5
  4218d4:	imul   DWORD PTR [ecx+0x5738473c]
  4218da:	mov    esi,0xf869f07
  4218df:	call   0xb5b:0xe8e96fbb
  4218e6:	pop    ss
  4218e7:	js     0x4218e7
  4218e9:	pop    es
  4218ea:	aam    0xbd
  4218ec:	mov    BYTE PTR [eax-0x3c7ca4da],ah
  4218f2:	sub    DWORD PTR [edx+ebp*2-0x3aab4d0b],esp
  4218f9:	adc    bh,ah
  4218fb:	popf   
  4218fc:	xor    DWORD PTR [edx],ebx
  4218fe:	xchg   ecx,eax
  4218ff:	fs pusha 
  421901:	repnz div ebp
  421904:	push   ds
  421905:	dec    edi
  421906:	inc    edx
  421907:	iret   
  421908:	ins    DWORD PTR es:[edi],dx
  421909:	test   eax,0x57933152
  42190e:	mov    al,ds:0x786029a
  421913:	loop   0x42194d
  421915:	outs   dx,DWORD PTR ds:[esi]
  421916:	icebp  
  421917:	jns    0x4218c3
  421919:	imul   ebx,DWORD PTR [esi],0x8c076d00
  42191f:	inc    ebp
  421920:	sbb    ch,BYTE PTR [edx-0x36ef5c9b]
  421926:	push   ecx
  421927:	sbb    al,bh
  421929:	inc    DWORD PTR [ecx-0x73]
  42192c:	inc    edi
  42192d:	sbb    cl,BYTE PTR [edx]
  42192f:	mov    ch,0xc8
  421931:	pop    edi
  421932:	leave  
  421933:	add    DWORD PTR [ebp-0x8],ebx
  421936:	dec    DWORD PTR ds:0xaafa458c
  42193c:	data16 mov ds:0x5d0bc81b,al
  421942:	clc    
  421943:	adc    DWORD PTR [ecx],ecx
  421945:	mov    WORD PTR [ebp-0x5a],es
  421948:	lods   al,BYTE PTR ds:[esi]
  421949:	mov    gs:0x4c01c910,eax
  42194f:	inc    ebp
  421950:	dec    DWORD PTR ds:0xaa1a558c
  421956:	mov    gs:0x5d01c915,eax
  42195c:	mov    ecx,0x459c0dff
  421961:	sbb    ch,BYTE PTR [edx-0x33ef5c99]
  421967:	add    DWORD PTR [eax+edi*8-0x1],ebx
  42196b:	or     eax,0xaa1f458c
  421970:	mov    fs:0x5d01c910,eax
  421976:	clc    
  421977:	scas   eax,DWORD PTR es:[edi]
  421978:	add    DWORD PTR [ebp+eax*2-0x5d9a55e2],ecx
  42197f:	hlt    
  421980:	int3   
  421981:	add    DWORD PTR [edi-0x8],ebx
  421984:	dec    DWORD PTR [ebp-0x55f5ba74]
  42198a:	gs mov bl,0x10
  42198d:	leave  
  42198e:	add    DWORD PTR [ebp-0x18],ebx
  421991:	dec    DWORD PTR ds:0xaa1a459c
  421997:	mov    gs:0x5d01d910,eax
  42199d:	clc    
  42199e:	dec    DWORD PTR ds:0xaa1a458c
  4219a4:	mov    gs:0x5d0df0e4,eax
  4219aa:	xchg   ecx,eax
  4219ab:	cld    
  4219ac:	or     eax,0xa1ea458c
  4219b1:	gs in  al,dx
  4219b3:	pop    ecx
  4219b4:	leave  
  4219b5:	add    DWORD PTR [ebp-0x8],ebx
  4219b8:	dec    DWORD PTR ds:0xaa1a458c
  4219be:	mov    gs:0x5d01c910,eax
  4219c4:	clc    
  4219c5:	dec    DWORD PTR ds:0xaa1a458c
  4219cb:	mov    gs:0x5d01c910,eax
  4219d1:	clc    
  4219d2:	dec    DWORD PTR ds:0xaa1a458c
  4219d8:	mov    gs:0x5d01c910,eax
  4219de:	clc    
  4219df:	dec    DWORD PTR ds:0xaa1a458c
  4219e5:	mov    gs:0x5d01c910,eax
  4219eb:	clc    
  4219ec:	dec    DWORD PTR ds:0xaa1a458c
  4219f2:	mov    gs:0x5d01c910,eax
  4219f8:	clc    
  4219f9:	dec    DWORD PTR ds:0xaa1a458c
  4219ff:	mov    gs:0x5d01c910,eax
  421a05:	clc    
  421a06:	dec    DWORD PTR ds:0xaa1a458c
  421a0c:	mov    gs:0x5d01c910,eax
  421a12:	clc    
  421a13:	dec    DWORD PTR ds:0xaa1a458c
  421a19:	mov    gs:0x7301c910,eax
  421a1f:	mov    WORD PTR [edx+0x1a45f875],ds
  421a25:	stos   BYTE PTR es:[edi],al
  421a26:	gs inc ebx
  421a28:	sbb    ecx,ecx
  421a2a:	add    DWORD PTR [ebp-0x8],ecx
  421a2d:	dec    DWORD PTR ds:0xaa1a4158
  421a33:	popa   
  421a34:	mov    ds:0x1e449910,eax
  421a39:	retf   0x42ab
  421a3c:	mov    WORD PTR [ebp+0x1a],es
  421a3f:	stos   BYTE PTR es:[edi],al
  421a40:	mov    gs:0xbd01c930,eax
  421a46:	(bad)  
  421a47:	lea    edi,[esi-0x2]
  421a4a:	sbb    ch,BYTE PTR es:[edx-0x368f5c9b]
  421a51:	add    DWORD PTR [ebp+0x8],ebx
  421a54:	hlt    
  421a55:	or     eax,0xaa1a1f8c
  421a5a:	gs jnp 0x421a71
  421a5d:	leave  
  421a5e:	add    DWORD PTR [ebp-0x8],ebx
  421a61:	dec    DWORD PTR ds:0xaa1a458c
  421a67:	mov    gs:0x5d01e910,eax
  421a6d:	sbb    bh,bh
  421a6f:	or     eax,0xaa1a458c
  421a74:	mov    gs:0x5d01c910,eax
  421a7a:	clc    
  421a7b:	dec    DWORD PTR ds:0xaa1a458c
  421a81:	mov    gs:0x5d01c910,eax
  421a87:	clc    
  421a88:	dec    DWORD PTR ds:0xaa1a458c
  421a8e:	mov    gs:0x5d01c910,eax
  421a94:	clc    
  421a95:	dec    DWORD PTR ds:0xaa1a458c
  421a9b:	mov    gs:0x5d01c910,eax
  421aa1:	clc    
  421aa2:	dec    DWORD PTR ds:0xaa1a458c
  421aa8:	mov    gs:0x5d01c910,eax
  421aae:	clc    
  421aaf:	dec    DWORD PTR ds:0xaa1a458c
  421ab5:	mov    gs:0x5d01c910,eax
  421abb:	clc    
  421abc:	dec    DWORD PTR ds:0xaa1a458c
  421ac2:	mov    gs:0x5d01c910,eax
  421ac8:	clc    
  421ac9:	dec    DWORD PTR ds:0xaa1a458c
  421acf:	mov    gs:0x5d01c910,eax
  421ad5:	clc    
  421ad6:	dec    DWORD PTR ds:0xaa1a458c
  421adc:	mov    gs:0x5d01c910,eax
  421ae2:	clc    
  421ae3:	dec    DWORD PTR ds:0xaa1a458c
  421ae9:	mov    gs:0x5d01c910,eax
  421aef:	clc    
  421af0:	dec    DWORD PTR ds:0xaa1a458c
  421af6:	mov    gs:0x5d01c910,eax
  421afc:	clc    
  421afd:	dec    DWORD PTR ds:0xaa1a458c
  421b03:	mov    gs:0x5d01c910,eax
  421b09:	clc    
  421b0a:	dec    DWORD PTR ds:0xaa1a458c
  421b10:	mov    gs:0x5d01c910,eax
  421b16:	clc    
  421b17:	dec    DWORD PTR ds:0xaa1a458c
  421b1d:	mov    gs:0x5d01c910,eax
  421b23:	clc    
  421b24:	dec    DWORD PTR ds:0xaa1a458c
  421b2a:	mov    gs:0x5d01c910,eax
  421b30:	clc    
  421b31:	dec    DWORD PTR ds:0xaa1a458c
  421b37:	mov    gs:0x5d01c910,eax
  421b3d:	clc    
  421b3e:	dec    DWORD PTR ds:0xaa1a458c
  421b44:	mov    gs:0x5d01c910,eax
  421b4a:	clc    
  421b4b:	dec    DWORD PTR ds:0xaa1a458c
  421b51:	mov    gs:0x5d01c910,eax
  421b57:	clc    
  421b58:	dec    DWORD PTR ds:0xaa1a458c
  421b5e:	mov    gs:0x5d01c910,eax
  421b64:	clc    
  421b65:	dec    DWORD PTR ds:0xaa1a458c
  421b6b:	mov    gs:0x5d01c910,eax
  421b71:	clc    
  421b72:	dec    DWORD PTR ds:0xaa1a458c
  421b78:	mov    gs:0x5d01c910,eax
  421b7e:	clc    
  421b7f:	dec    DWORD PTR ds:0xaa1a458c
  421b85:	mov    gs:0x5d01c910,eax
  421b8b:	clc    
  421b8c:	dec    DWORD PTR ds:0xaa1a458c
  421b92:	mov    gs:0x5d01c910,eax
  421b98:	clc    
  421b99:	dec    DWORD PTR ds:0xaa1a458c
  421b9f:	mov    gs:0x5d01c910,eax
  421ba5:	clc    
  421ba6:	dec    DWORD PTR ds:0xaa1a458c
  421bac:	mov    gs:0x5d01c910,eax
  421bb2:	clc    
  421bb3:	dec    DWORD PTR ds:0xaa1a458c
  421bb9:	mov    gs:0x5d01c910,eax
  421bbf:	clc    
  421bc0:	dec    DWORD PTR ds:0xaa1a458c
  421bc6:	mov    gs:0x5d01c910,eax
  421bcc:	clc    
  421bcd:	dec    DWORD PTR ds:0xaa1a458c
  421bd3:	mov    gs:0x5d01c910,eax
  421bd9:	clc    
  421bda:	dec    DWORD PTR ds:0xaa1a458c
  421be0:	mov    gs:0x5d01c910,eax
  421be6:	clc    
  421be7:	dec    DWORD PTR ds:0xaa1a458c
  421bed:	mov    gs:0x5d01c910,eax
  421bf3:	clc    
  421bf4:	dec    DWORD PTR ds:0xaa1a458c
  421bfa:	mov    gs:0x5d01c910,eax
  421c00:	clc    
  421c01:	dec    DWORD PTR ds:0xaa1a458c
  421c07:	mov    gs:0x5d01c910,eax
  421c0d:	clc    
  421c0e:	dec    DWORD PTR ds:0xaa1a458c
  421c14:	mov    gs:0x5d01c910,eax
  421c1a:	clc    
  421c1b:	dec    DWORD PTR ds:0xaa1a458c
  421c21:	mov    gs:0x5d01c910,eax
  421c27:	clc    
  421c28:	dec    DWORD PTR ds:0xaa1a458c
  421c2e:	or     cl,BYTE PTR [ebx]
  421c30:	sbb    ecx,ecx
  421c32:	cs pop ebp
  421c34:	clc    
  421c35:	out    dx,eax
  421c36:	or     eax,0x70b86f8c
  421c3b:	adc    al,0xc5
  421c3d:	out    dx,eax
  421c3e:	in     al,0x9f
  421c40:	fisubr DWORD PTR [eax+0x56643b12]
  421c46:	scas   al,BYTE PTR es:[edi]
  421c47:	aas    
  421c48:	add    edx,edx
  421c4a:	xchg   esp,eax
  421c4b:	xchg   ebx,eax
  421c4c:	adc    ch,ah
  421c4e:	dec    edi
  421c4f:	jmp    0x9c1184b4
  421c54:	ins    BYTE PTR es:[edi],dx
  421c55:	dec    ebx
  421c56:	rol    DWORD PTR [eax-0x4891c70a],0x4e
  421c5d:	sbb    ch,BYTE PTR [esi-0x12f2c2bb]
  421c63:	test   BYTE PTR [ecx-0x5c],0xa8
  421c67:	outs   dx,DWORD PTR ds:[esi]
  421c68:	lds    esp,FWORD PTR [edx]
  421c6a:	sbb    DWORD PTR ds:0x41741525,edi
  421c70:	sbb    BYTE PTR [edx+ebx*1-0x3c],bl
  421c74:	jb     0x421c76
  421c76:	popa   
  421c77:	pop    es
  421c78:	arpl   WORD PTR [ecx],sp
  421c7a:	cmp    cl,BYTE PTR [ecx]
  421c7c:	push   0x52
  421c7e:	mov    edx,0xbe2544e4
  421c83:	scas   al,BYTE PTR es:[edi]
  421c84:	dec    esi
  421c85:	inc    edx
  421c86:	hlt    
  421c87:	pop    esp
  421c88:	sbb    DWORD PTR [eax],0x3e
  421c8b:	xchg   ecx,eax
  421c8c:	xchg   ebx,eax
  421c8d:	jecxz  0x421ce9
  421c8f:	dec    esp
  421c90:	jge    0x421cd0
  421c92:	out    0xa1,eax
  421c94:	cmp    ebx,DWORD PTR [edx+0x4]
  421c97:	sub    BYTE PTR [eax+0x6f],dh
  421c9a:	adc    eax,0x25541f71
  421c9f:	(bad)  
  421ca0:	mov    ds:0xfc7e0a25,al
  421ca5:	mov    ds:0x83e14773,al
  421caa:	(bad)  
  421cab:	dec    edi
  421cac:	mov    ds:0xa99b2bba,al
  421cb1:	adc    al,0x1f
  421cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb4:	mov    ds:0x7d24503,eax
  421cb9:	leave  
  421cba:	or     DWORD PTR [edi+0x7490eae3],0xd0da75da
  421cc4:	mov    ebp,0x37f80a51
  421cc9:	pop    eax
  421cca:	outs   dx,DWORD PTR ds:[esi]
  421ccb:	das    
  421ccc:	inc    ecx
  421ccd:	shl    DWORD PTR [edx-0x24aa8a5],1
  421cd3:	xchg   esi,eax
  421cd4:	int3   
  421cd5:	pop    edx
  421cd6:	in     eax,0x7d
  421cd8:	(bad)  
  421cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cda:	and    edi,DWORD PTR [ecx-0x3962bd9]
  421ce0:	add    ebp,DWORD PTR [edi]
  421ce2:	sub    bh,BYTE PTR [edi-0x5d9a5bb1]
  421ce8:	repz in eax,dx
  421cea:	(bad)  
  421ceb:	ins    DWORD PTR es:[edi],dx
  421cec:	into   
  421ced:	inc    edi
  421cee:	mov    ecx,0x61e7b413
  421cf3:	int    0x7d
  421cf5:	and    dh,BYTE PTR [edx+0x3dc2057]
  421cfb:	ins    DWORD PTR es:[edi],dx
  421cfc:	dec    esp
  421cfd:	fs mov ecx,0x3cb30737
  421d03:	stos   DWORD PTR es:[edi],eax
  421d04:	idiv   BYTE PTR [eax-0x6ea9d307]
  421d0a:	pop    es
  421d0b:	fdiv   DWORD PTR [eax+ebx*4]
  421d0e:	retf   0xb55c
  421d11:	ja     0xfc99dd36
  421d17:	push   esp
  421d18:	mov    dh,bl
  421d1a:	loopne 0x421d5d
  421d1c:	jo     0x421cd4
  421d1e:	jmp    0x65afee2e
  421d23:	js     0x421d9b
  421d25:	jl     0x421cae
  421d27:	ins    DWORD PTR es:[edi],dx
  421d28:	sub    eax,0x61
  421d2b:	jnp    0x421d54
  421d2d:	ss mov edi,0xb2c69c16
  421d33:	push   esp
  421d34:	mov    ah,0x7d
  421d36:	xchg   edi,esi
  421d38:	out    0xb4,al
  421d3a:	les    edx,FWORD PTR [edx]
  421d3c:	add    al,0xda
  421d3e:	mov    WORD PTR [ebx+0x7f6aa104],gs
  421d44:	stc    
  421d45:	mov    ds:0x5983f16f,al
  421d4a:	test   eax,0x6c3a59a9
  421d4f:	test   BYTE PTR [esp+eax*8],dh
  421d52:	clc    
  421d53:	sub    ecx,DWORD PTR [eiz*8-0xda432e2]
  421d5a:	lods   al,BYTE PTR ds:[esi]
  421d5b:	xchg   ebp,eax
  421d5c:	mov    bl,0xc5
  421d5e:	pushf  
  421d5f:	leave  
  421d60:	add    al,0x87
  421d62:	dec    edx
  421d63:	rcr    BYTE PTR [ebx-0x25],0x82
  421d67:	(bad)  
  421d68:	retf   0xf08e
  421d6b:	in     al,dx
  421d6c:	add    DWORD PTR [esi+0x1c],ebx
  421d6f:	inc    edx
  421d70:	inc    eax
  421d71:	mov    al,ds:0xdced105e
  421d76:	std    
  421d77:	aam    0xa
  421d79:	sub    BYTE PTR [ecx+0x2befc0f9],al
  421d7f:	es or  al,0x51
  421d82:	sub    dh,ah
  421d84:	jl     0x421d80
  421d86:	arpl   cx,si
  421d88:	and    edi,DWORD PTR [ebp+ebp*8-0x4885888f]
  421d8f:	aam    0x85
  421d91:	and    eax,0x29723b8
  421d96:	rcl    edi,cl
  421d98:	pop    ebp
  421d99:	mov    bl,0x9d
  421d9b:	not    BYTE PTR [esi]
  421d9d:	inc    ebp
  421d9e:	ret    0x3e74
  421da1:	xchg   edx,eax
  421da2:	jp     0x421de1
  421da4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  421da6:	ss iret 
  421da8:	and    eax,0x634a84d4
  421dad:	mov    ds,WORD PTR [esi-0x37]
  421db0:	repnz adc BYTE PTR [esi],bh
  421db3:	std    
  421db4:	xor    DWORD PTR [esi-0x3f5ebfe2],ecx
  421dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dbb:	push   ebp
  421dbc:	fadd   QWORD PTR [ebp-0x2526cbbd]
  421dc2:	pop    ebp
  421dc3:	pusha  
  421dc4:	cmp    DWORD PTR [esi-0x15],0x3b59b169
  421dcb:	dec    ebp
  421dcc:	push   0xffffffd8
  421dce:	mov    ds:0x78eb14e5,al
  421dd3:	neg    dl
  421dd5:	pushf  
  421dd6:	adc    al,0xa6
  421dd8:	js     0x421dcf
  421dda:	dec    esp
  421ddb:	sbb    ebx,DWORD PTR [edx]
  421ddd:	jns    0x421e2a
  421ddf:	or     bl,BYTE PTR [eax]
  421de1:	sahf   
  421de2:	mov    cs,WORD PTR [ebx+0xb73ba1e]
  421de8:	pop    ds
  421de9:	dec    edi
  421dea:	(bad)  
  421deb:	jmp    0x421e37
  421ded:	and    BYTE PTR [edx-0x62],ch
  421df0:	adc    cl,cl
  421df2:	dec    ebx
  421df3:	out    0xa7,al
  421df5:	int    0x3d
  421df7:	call   0x58ff:0x80cd44cb
  421dfe:	in     eax,0xc2
  421e00:	fidivr WORD PTR [esp+eax*2+0x3d]
  421e04:	retf   
  421e05:	inc    esp
  421e06:	push   es
  421e07:	retf   
  421e08:	and    cl,BYTE PTR [eax+0x1b]
  421e0b:	(bad)  
  421e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e0e:	jl     0x421e08
  421e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e11:	jle    0x421db4
  421e13:	mov    ebx,0x71a51037
  421e18:	push   esp
  421e19:	pop    ds
  421e1a:	pop    edi
  421e1b:	pop    edi
  421e1c:	in     al,0x3c
  421e1e:	inc    ebx
  421e1f:	cli    
  421e20:	clc    
  421e21:	in     al,dx
  421e22:	push   ebx
  421e23:	mov    bl,0x81
  421e25:	pop    ecx
  421e26:	mov    ch,BYTE PTR [ecx+0x68]
  421e29:	sbb    al,0x8b
  421e2b:	repnz (bad) 
  421e2d:	in     al,dx
  421e2e:	shl    BYTE PTR [ecx+esi*1-0x24],0xf7
  421e33:	aaa    
  421e34:	xchg   edx,eax
  421e35:	shr    ch,cl
  421e37:	outs   dx,DWORD PTR ds:[esi]
  421e38:	jmp    0x421e2a
  421e3a:	enter  0x1ddd,0xfc
  421e3e:	addr16 js 0x421e4a
  421e41:	xlat   BYTE PTR ds:[ebx]
  421e42:	mov    ch,0x56
  421e44:	gs sub eax,edx
  421e47:	stos   DWORD PTR es:[edi],eax
  421e48:	inc    ecx
  421e49:	cmp    edi,DWORD PTR [ecx-0x39]
  421e4c:	add    edi,ecx
  421e4e:	adc    DWORD PTR [esi-0x78404d89],eax
  421e54:	inc    esp
  421e55:	(bad)
  421e58:	rol    cl,1
  421e5a:	jno    0x421ec5
  421e5c:	mov    ah,0x84
  421e5e:	loopne 0x421e7c
  421e60:	xchg   edx,eax
  421e61:	loope  0x421ea4
  421e63:	dec    esi
  421e64:	(bad)  [edx]
  421e66:	mov    ah,0x5b
  421e68:	xchg   ebp,eax
  421e69:	jmp    0x421e46
  421e6b:	shl    BYTE PTR [esp+edx*8-0x78],0x69
  421e70:	cs push 0x856d3d2
  421e76:	in     al,dx
  421e77:	mov    bl,0xbe
  421e79:	ror    DWORD PTR ds:0xba59b450,0x35
  421e80:	mov    cl,BYTE PTR [edx+0x61]
  421e83:	add    DWORD PTR ds:0x59106485,esp
  421e89:	(bad)  
  421e8a:	jecxz  0x421e49
  421e8c:	or     al,0xda
  421e8e:	cdq    
  421e8f:	push   ss
  421e90:	cmc    
  421e91:	hlt    
  421e92:	xchg   ebx,eax
  421e93:	mov    edx,0xbb601cac
  421e98:	pop    es
  421e99:	xrelease xchg DWORD PTR [ebx+0x1],esi
  421e9d:	leave  
  421e9e:	pop    edx
  421e9f:	inc    esp
  421ea0:	jmp    0xed65140f
  421ea5:	xchg   bl,dh
  421ea7:	fadd   QWORD PTR [edx-0x7e]
  421eaa:	gs sub eax,0x6d23cb0c
  421eb0:	and    DWORD PTR [ebx+eax*2],eax
  421eb3:	dec    ebp
  421eb4:	sbb    eax,0xdfa12091
  421eb9:	mov    bh,0xb2
  421ebb:	mov    dl,0xcd
  421ebd:	cmp    ecx,DWORD PTR [ebx+ecx*4-0x19]
  421ec1:	sbb    al,0x3a
  421ec3:	push   ecx
  421ec4:	jp     0x421ef5
  421ec6:	fld    TBYTE PTR [eax-0x6d4e0db3]
  421ecc:	loopne 0x421e58
  421ece:	rol    bl,0x55
  421ed1:	mov    ch,0x82
  421ed3:	repnz mov ebp,0x455d97c1
  421ed9:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  421edb:	sti    
  421edc:	iret   
  421edd:	add    BYTE PTR [edx],ah
  421edf:	stos   BYTE PTR es:[di],al
  421ee1:	push   ecx
  421ee2:	and    DWORD PTR [ebx],ebp
  421ee4:	xchg   ebp,eax
  421ee5:	or     al,0xbc
  421ee7:	inc    esp
  421ee8:	aaa    
  421ee9:	push   ss
  421eea:	dec    esi
  421eeb:	push   es
  421eec:	push   ebp
  421eed:	or     BYTE PTR [ebx],cl
  421eef:	mov    ecx,0x9a814ae4
  421ef4:	ret    
  421ef5:	add    DWORD PTR [eax],ebp
  421ef7:	or     al,0xe7
  421ef9:	stos   DWORD PTR es:[edi],eax
  421efa:	and    al,0xfb
  421efc:	sbb    bl,BYTE PTR [ecx+0x4e]
  421eff:	scas   eax,DWORD PTR es:[edi]
  421f00:	fwait
  421f01:	setge  ch
  421f04:	popa   
  421f05:	sub    ebp,esi
  421f07:	pop    es
  421f08:	jmp    0xd5d7:0x3dc721de
  421f0f:	or     BYTE PTR [edi],bh
  421f11:	in     eax,dx
  421f12:	mov    ebp,0x5a130c05
  421f17:	push   ecx
  421f18:	cmp    bl,ch
  421f1a:	clc    
  421f1b:	in     eax,0x73
  421f1d:	mov    eax,ds:0x11badc0
  421f22:	jbe    0x421eff
  421f24:	je     0x421f4f
  421f26:	inc    edi
  421f27:	mov    eax,ds:0x82c7dbe9
  421f2c:	inc    eax
  421f2d:	mov    esi,0xe921b195
  421f32:	inc    ebx
  421f33:	nop
  421f34:	jg     0x421f46
  421f36:	xchg   ebx,eax
  421f37:	xor    bh,BYTE PTR [ecx+0x42]
  421f3a:	ins    DWORD PTR es:[edi],dx
  421f3b:	test   BYTE PTR [eax+0x70ecdf3f],al
  421f41:	or     DWORD PTR [esi+0x713367cf],0xffffffd1
  421f48:	lods   eax,DWORD PTR ds:[esi]
  421f49:	ror    DWORD PTR es:[ebx-0x341212b5],cl
  421f50:	or     DWORD PTR [ebp-0x27],ebp
  421f53:	fs std 
  421f55:	dec    esp
  421f56:	je     0x421f3c
  421f58:	pop    es
  421f59:	mov    cl,0x9d
  421f5b:	(bad)  
  421f5d:	add    al,0x98
  421f5f:	dec    ecx
  421f60:	add    DWORD PTR [edx],eax
  421f62:	fisub  DWORD PTR [edi-0xe217ed4]
  421f69:	les    edx,FWORD PTR [eax+0x2]
  421f6c:	xchg   DWORD PTR ds:0x85cd7f27,ebp
  421f72:	inc    edi
  421f73:	or     bl,BYTE PTR [eax]
  421f75:	outs   dx,DWORD PTR ds:[esi]
  421f76:	iret   
  421f77:	dec    ebp
  421f78:	mov    dl,0xa7
  421f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f7b:	fucom  st(7)
  421f7d:	or     DWORD PTR [ebx],edi
  421f7f:	faddp  st(1),st
  421f81:	inc    ebx
  421f82:	xor    BYTE PTR [eax],ah
  421f84:	sub    esi,DWORD PTR [edi]
  421f86:	pop    edx
  421f87:	ss dec ebp
  421f89:	je     0x421fc7
  421f8b:	inc    edi
  421f8c:	mov    eax,gs:0x4a150055
  421f92:	lods   eax,DWORD PTR ds:[esi]
  421f93:	mov    ebx,0xe2156aa2
  421f98:	(bad)  
  421f99:	jnp    0x421ff0
  421f9b:	and    ecx,DWORD PTR [ecx-0x7c]
  421f9e:	xor    DWORD PTR [esp+ebp*4+0x5af7d5ad],ebp
  421fa5:	xchg   ecx,eax
  421fa6:	jle    0x421f5f
  421fa8:	(bad)  
  421fa9:	hlt    
  421faa:	and    bh,BYTE PTR ds:0xae7b2c7b
  421fb0:	scas   al,BYTE PTR es:[edi]
  421fb1:	dec    esp
  421fb2:	cdq    
  421fb3:	xor    DWORD PTR [eax+0x68404427],0xffffffe6
  421fba:	jbe    0x422009
  421fbc:	out    dx,al
  421fbd:	xor    al,0x9d
  421fbf:	fcomip st,st(0)
  421fc1:	lea    edi,[eax-0x14]
  421fc4:	inc    edi
  421fc5:	(bad)  
  421fc6:	cwde   
  421fc7:	sbb    al,0xf8
  421fc9:	add    al,0xfe
  421fcb:	repz xchg esi,eax
  421fcd:	mov    al,ds:0x701616cb
  421fd2:	aaa    
  421fd3:	or     BYTE PTR [ecx+edi*1-0x11],ch
  421fd7:	into   
  421fd8:	mov    al,0xf2
  421fda:	outs   dx,DWORD PTR ds:[esi]
  421fdb:	mov    dh,0xee
  421fdd:	and    al,0x6e
  421fdf:	pusha  
  421fe0:	(bad)  
  421fe1:	ins    BYTE PTR es:[edi],dx
  421fe2:	dec    edi
  421fe3:	mov    ebp,0x72d8c372
  421fe8:	stos   DWORD PTR es:[edi],eax
  421fe9:	add    ah,ch
  421feb:	fiadd  WORD PTR [esi]
  421fed:	nop
  421fee:	inc    edx
  421fef:	and    BYTE PTR ds:0xf9aeaaab,bh
  421ff5:	or     DWORD PTR [edx],eax
  421ff7:	inc    esp
  421ff8:	mov    bh,0x7d
  421ffa:	popa   
  421ffb:	inc    esp
  421ffc:	and    edx,DWORD PTR [ecx]
  421ffe:	aaa    
  421fff:	es leave 
  422001:	sbb    al,0xa5
  422003:	mov    cl,BYTE PTR [eax]
  422005:	sbb    BYTE PTR [esi-0x6d],dl
  422008:	shr    ebx,1
  42200a:	dec    ebx
  42200b:	add    edi,esi
  42200d:	outs   dx,BYTE PTR ds:[esi]
  42200e:	pop    ds
  42200f:	test   eax,0xb62ac1b3
  422014:	sub    al,0xcb
  422016:	(bad)  
  422017:	jbe    0x422029
  422019:	leave  
  42201a:	jo     0x421faf
  42201c:	bnd jo 0x42208d
  42201f:	loop   0x422097
  422021:	cmp    al,0xcc
  422023:	fsubr  QWORD PTR [edi-0x2e]
  422026:	repz pop ss
  422028:	sub    dl,al
  42202a:	loopne 0x42208c
  42202c:	retf   0x5fcb
  42202f:	or     eax,0xdefc42b3
  422034:	mov    bh,0x31
  422036:	addr16 mov eax,ds:0x83f2
  42203a:	aam    0x12
  42203c:	add    ebp,DWORD PTR [ebx+0xf]
  42203f:	rol    esi,1
  422041:	es cld 
  422043:	out    dx,al
  422044:	arpl   si,sp
  422046:	out    0x77,eax
  422048:	add    cl,BYTE PTR [ebp-0x74]
  42204b:	add    DWORD PTR ds:0x839bcfe4,eax
  422051:	cmp    DWORD PTR [eax],eax
  422053:	pop    eax
  422054:	push   esi
  422055:	push   eax
  422056:	aas    
  422057:	into   
  422058:	dec    ch
  42205a:	popf   
  42205b:	fsub   st(0),st
  42205d:	lea    esp,[eax]
  42205f:	jmp    0xcfc9:0xf72c793b
  422066:	clc    
  422067:	popf   
  422068:	fs test al,0x66
  42206b:	addr16 iret 
  42206d:	sahf   
  42206e:	push   cs
  42206f:	or     edx,DWORD PTR [ebx]
  422071:	cmp    al,0xfb
  422073:	xchg   edi,eax
  422074:	test   al,0xce
  422076:	sbb    eax,DWORD PTR [esi]
  422078:	cld    
  422079:	loopne 0x422020
  42207b:	outs   dx,BYTE PTR ds:[esi]
  42207c:	pop    ds
  42207d:	stos   BYTE PTR es:[edi],al
  42207e:	std    
  42207f:	movzx  ebp,WORD PTR [edx-0x40]
  422083:	pop    ss
  422084:	rcl    DWORD PTR [ebx+esi*1],cl
  422087:	cmp    eax,0xfecd7f03
  42208c:	jg     0x422087
  42208e:	aas    
  42208f:	in     eax,0xf2
  422091:	fdivr  QWORD PTR [esi]
  422093:	push   es
  422094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422095:	mov    ds:0xf27689ee,al
  42209a:	test   eax,0xa36b1e7b
  42209f:	nop
  4220a0:	push   eax
  4220a1:	push   ss
  4220a2:	(bad)  
  4220a3:	adc    DWORD PTR [eax+0x3ecf39b9],ecx
  4220a9:	jno    0x422077
  4220ab:	push   ss
  4220ac:	stos   DWORD PTR es:[edi],eax
  4220ad:	jmp    0x422039
  4220af:	jns    0x4220b7
  4220b1:	mov    eax,ds:0x9b72cb44
  4220b6:	lock jno 0x42211f
  4220b9:	adc    edx,esp
  4220bb:	sar    ah,cl
  4220bd:	out    dx,al
  4220be:	fstp   DWORD PTR [edi-0x709efb41]
  4220c4:	adc    eax,edx
  4220c6:	cmp    bl,BYTE PTR [edx-0x45377f92]
  4220cc:	push   cs
  4220cd:	xor    DWORD PTR [edi+0xd],0x86fd7132
  4220d4:	stos   BYTE PTR es:[edi],al
  4220d5:	xchg   esp,eax
  4220d6:	lods   al,BYTE PTR ds:[esi]
  4220d7:	(bad)  
  4220d8:	adc    eax,0xf6dc9f46
  4220dd:	pop    es
  4220de:	out    0x28,al
  4220e0:	aam    0x4e
  4220e2:	push   es
  4220e3:	pusha  
  4220e4:	xor    esi,esi
  4220e6:	xchg   BYTE PTR [ecx-0x14],dh
  4220e9:	mov    ah,0xf6
  4220eb:	sahf   
  4220ec:	stos   DWORD PTR es:[edi],eax
  4220ed:	cdq    
  4220ee:	add    DWORD PTR [ebx+eiz*2],0xfffffffd
  4220f2:	and    eax,0xdc5e164
  4220f7:	lock aad 0x5e
  4220fa:	loopne 0x42211e
  4220fc:	popf   
  4220fd:	mov    dl,0xac
  4220ff:	or     DWORD PTR [ebx],ecx
  422101:	push   ecx
  422102:	cs data16 sti 
  422105:	pop    ss
  422106:	(bad)  
  422107:	icebp  
  422108:	scas   eax,DWORD PTR es:[edi]
  422109:	pusha  
  42210a:	cdq    
  42210b:	addr16 mov esp,0x2eb9c806
  422111:	xor    DWORD PTR [ecx-0xed4fd22],edx
  422117:	out    dx,eax
  422118:	lock pop ds
  42211a:	mov    cl,0xe9
  42211c:	stos   DWORD PTR es:[edi],eax
  42211d:	mov    ds:0x8d2d08fd,al
  422122:	mov    ecx,0x1abc7b5b
  422127:	mov    ebp,edi
  422129:	xor    bh,BYTE PTR [ecx+0x18]
  42212c:	sub    al,0xbf
  42212e:	push   esp
  42212f:	mov    dl,0xbc
  422131:	mov    ah,BYTE PTR [edi-0x2]
  422134:	daa    
  422135:	mov    al,ds:0x1cf916ee
  42213a:	adc    al,0xab
  42213c:	jnp    0x4221a7
  42213e:	cdq    
  42213f:	mov    bl,0x83
  422141:	mov    edi,0x969097c0
  422146:	push   cs
  422147:	inc    BYTE PTR [eax+0x9]
  42214a:	add    BYTE PTR [esi+0x1a],ah
  42214d:	fnstsw WORD PTR [esi-0xd350a54]
  422153:	lods   al,BYTE PTR ds:[esi]
  422154:	int3   
  422155:	mov    ch,0xbc
  422157:	push   cs
  422158:	mov    eax,ds:0xcc1ddb48
  42215d:	pop    edx
  42215e:	neg    DWORD PTR [eax+0xd]
  422161:	adc    BYTE PTR [edx-0x387afa4e],cl
  422167:	retf   
  422168:	pop    ds
  422169:	jmp    0x42217e
  42216b:	adc    edx,ecx
  42216d:	dec    ebx
  42216e:	and    bh,ah
  422170:	cmp    BYTE PTR [eax+0x57ed1883],0x9b
  422177:	sbb    al,0xdc
  422179:	loope  0x42213f
  42217b:	aas    
  42217c:	xchg   edx,eax
  42217d:	imul   ebx,esi,0xef8efdd9
  422183:	retf   0x6313
  422186:	jns    0x4221f4
  422188:	ins    BYTE PTR es:[edi],dx
  422189:	push   cs
  42218a:	inc    edx
  42218b:	push   0x5f7f9f37
  422190:	push   edx
  422191:	push   edx
  422192:	sti    
  422193:	test   al,0xfc
  422195:	stos   BYTE PTR es:[edi],al
  422196:	mov    dl,dh
  422198:	mov    esi,0x938ffef4
  42219d:	push   ds
  42219e:	mov    cl,0x53
  4221a0:	scas   eax,DWORD PTR es:[edi]
  4221a1:	xor    al,BYTE PTR [eax-0x18fd1b26]
  4221a7:	sub    eax,0x3f017afe
  4221ac:	jge    0x42213d
  4221ae:	add    eax,0xd419d555
  4221b3:	psrlw  mm1,QWORD PTR [ecx]
  4221b6:	or     dh,BYTE PTR [ebp-0x58efa16]
  4221bc:	cmp    eax,0x89ee12f4
  4221c1:	call   0x148da82c
  4221c6:	into   
  4221c7:	inc    ebp
  4221c8:	pop    ss
  4221c9:	sahf   
  4221ca:	cs jns 0x422153
  4221cd:	xor    DWORD PTR [ecx],ebx
  4221cf:	out    0x5e,al
  4221d1:	ja     0x42216c
  4221d3:	lock scas al,BYTE PTR es:[edi]
  4221d5:	pusha  
  4221d6:	mov    ebx,0x3c77e3e9
  4221db:	lds    ebx,FWORD PTR [ecx+0x5bdefbf6]
  4221e1:	sbb    eax,DWORD PTR [ecx]
  4221e3:	add    BYTE PTR [esi-0x4a0abd33],0xb2
  4221ea:	push   es
  4221eb:	cli    
  4221ec:	mov    bh,0x69
  4221ee:	xor    dl,BYTE PTR [esi]
  4221f0:	mov    ebp,0xffcd0c3d
  4221f5:	mov    ebp,0xa52ce92b
  4221fa:	adc    dh,BYTE PTR [esi-0x66d983f6]
  422200:	stos   DWORD PTR es:[edi],eax
  422201:	push   0x19
  422203:	test   BYTE PTR [edx],bl
  422205:	jb     0x422198
  422207:	jbe    0x42220f
  422209:	add    BYTE PTR cs:[edi+0x6a],ch
  42220d:	into   
  42220e:	sub    BYTE PTR [esi+0x368fb9df],bh
  422214:	or     al,0x30
  422216:	retf   
  422217:	(bad)  
  422218:	dec    eax
  422219:	xchg   ebx,eax
  42221a:	inc    esp
  42221b:	fnstenv [eax]
  42221d:	jbe    0x42225b
  42221f:	addr16 jo 0x42228b
  422222:	cmp    DWORD PTR [ebp-0x4db338dc],ebp
  422228:	xor    eax,0xc097d431
  42222d:	push   eax
  42222e:	cmp    ebx,0x31c5a9f9
  422234:	test   DWORD PTR [edx-0x370b08ed],ebx
  42223a:	(bad)  
  42223b:	aam    0xb8
  42223d:	retf   0xff21
  422240:	std    
  422241:	mov    eax,ds:0x25f1eca3
  422246:	inc    edi
  422247:	scas   eax,DWORD PTR es:[edi]
  422248:	mov    dh,0x8b
  42224a:	push   eax
  42224b:	pop    edx
  42224c:	jne    0x42229d
  42224e:	and    eax,0x34a1c177
  422253:	bound  ebx,QWORD PTR [ecx-0x33]
  422256:	imul   edi,DWORD PTR [edi],0x82ea25dc
  42225c:	icebp  
  42225d:	lods   eax,DWORD PTR ds:[esi]
  42225e:	jmp    0x71f6:0x4d8f9886
  422265:	mov    ah,0x5c
  422267:	in     eax,0x99
  422269:	push   0x53472a1c
  42226e:	push   eax
  42226f:	push   edx
  422270:	sahf   
  422271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422272:	daa    
  422273:	retf   
  422274:	loop   0x4222cb
  422276:	push   ecx
  422277:	aaa    
  422278:	mov    ds:0xb9c3cd6b,al
  42227d:	test   DWORD PTR [ebx+0x2e],esi
  422280:	pop    eax
  422281:	fsubr  DWORD PTR [esi+ebx*4+0xe]
  422285:	sahf   
  422286:	xor    eax,ecx
  422288:	xchg   esi,eax
  422289:	mov    BYTE PTR [ebx-0x1f4781f6],al
  42228f:	mov    ebx,0x5fbd1170
  422294:	cmp    DWORD PTR [esi-0x62],edx
  422297:	sar    eax,1
  422299:	mov    ah,0x4a
  42229b:	test   BYTE PTR [edi+0x5db69164],0x3e
  4222a2:	gs mov ah,bh
  4222a5:	pusha  
  4222a6:	ins    DWORD PTR es:[edi],dx
  4222a7:	in     al,0xc1
  4222a9:	lds    eax,FWORD PTR [ebp+0x30973974]
  4222af:	dec    esi
  4222b0:	inc    ecx
  4222b1:	mov    ecx,0x5c257f55
  4222b6:	cmp    ecx,DWORD PTR [eax+0x614e188b]
  4222bc:	clc    
  4222bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222be:	scas   al,BYTE PTR es:[edi]
  4222bf:	inc    esi
  4222c0:	test   DWORD PTR [ebp-0x57],ebx
  4222c3:	inc    ebp
  4222c4:	jb     0x422281
  4222c6:	cmovge ebp,eax
  4222c9:	inc    esp
  4222ca:	lock ja 0x422267
  4222cd:	jno    0x42227a
  4222cf:	fiadd  WORD PTR [esi-0x25a136af]
  4222d5:	xchg   ecx,eax
  4222d6:	cmp    DWORD PTR [eax],edi
  4222d8:	aas    
  4222d9:	gs xchg esi,eax
  4222db:	fwait
  4222dc:	jg     0x422344
  4222de:	inc    ebp
  4222df:	pop    ds
  4222e0:	lds    esp,FWORD PTR [esp+esi*2-0x50cd7494]
  4222e7:	out    0x89,eax
  4222e9:	mov    eax,ds:0xccaa18f7
  4222ee:	cs jecxz 0x4222d8
  4222f1:	or     al,0x9f
  4222f3:	push   es
  4222f4:	lods   eax,DWORD PTR ds:[esi]
  4222f5:	jo     0x422317
  4222f7:	xchg   esp,eax
  4222f8:	mov    DWORD PTR [eax+0x25],ecx
  4222fb:	add    al,0xfa
  4222fd:	push   ebp
  4222fe:	push   ss
  4222ff:	xchg   ecx,eax
  422300:	test   eax,0x33ecd518
  422305:	xor    eax,DWORD PTR [edi+0xc]
  422308:	(bad)  
  422309:	sbb    ebp,eax
  42230b:	int3   
  42230c:	dec    eax
  42230d:	lea    esp,[ebp-0x4]
  422310:	retf   
  422311:	xchg   edx,eax
  422312:	inc    esi
  422313:	shl    BYTE PTR [esi-0x29128486],cl
  422319:	ret    
  42231a:	packuswb mm2,mm2
  42231d:	ins    DWORD PTR es:[edi],dx
  42231e:	sbb    DWORD PTR [edi],ebx
  422320:	sbb    ch,bl
  422322:	mov    ebx,0xafd7575e
  422327:	popf   
  422328:	add    al,0xab
  42232a:	push   0xd5d40520
  42232f:	mov    cl,0xfa
  422331:	adc    dh,BYTE PTR [ebx+0x51ea1541]
  422337:	xchg   ebp,eax
  422338:	inc    esi
  422339:	clc    
  42233a:	and    bh,BYTE PTR [eax+esi*8+0x72]
  42233e:	mov    ebx,0x4f22fbfa
  422343:	push   0xbcb184dd
  422348:	mov    al,ds:0xf8a0ae35
  42234d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42234e:	(bad)  
  42234f:	pop    eax
  422350:	int    0xc1
  422352:	or     esi,DWORD PTR [ebx+ebx*8+0x310db24a]
  422359:	rol    BYTE PTR [ecx],cl
  42235b:	inc    ecx
  42235c:	js     0x4222e7
  42235e:	add    eax,0x927cd969
  422363:	outs   dx,BYTE PTR ds:[esi]
  422364:	pop    edx
  422365:	lods   eax,DWORD PTR ds:[esi]
  422366:	popf   
  422367:	int    0xbf
  422369:	add    al,0xeb
  42236b:	sub    ebp,DWORD PTR [esi+0x7d]
  42236e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42236f:	jbe    0x4223b9
  422371:	stos   DWORD PTR es:[edi],eax
  422372:	leave  
  422373:	inc    DWORD PTR [edx+0x7dc4e6dd]
  422379:	push   ecx
  42237a:	and    DWORD PTR [ebx+esi*4],ebp
  42237d:	aam    0x38
  42237f:	sbb    DWORD PTR [ecx+0x1c],ebp
  422382:	add    al,0xfd
  422384:	cmp    BYTE PTR [edi-0x23],ah
  422387:	jge    0x4223fd
  422389:	test   eax,0x57054d99
  42238e:	adc    al,0x34
  422390:	repnz sub DWORD PTR [ecx],edx
  422393:	inc    BYTE PTR [esi+eax*1]
  422396:	mov    bh,0x46
  422398:	gs push eax
  42239a:	jbe    0x4223ea
  42239c:	daa    
  42239d:	icebp  
  42239e:	xor    DWORD PTR [ecx+0x37a906a9],esp
  4223a4:	mov    bl,0x67
  4223a6:	mov    dh,0xc7
  4223a8:	sar    BYTE PTR [esi+0x59e4145],cl
  4223ae:	jecxz  0x42241a
  4223b0:	pop    ebp
  4223b1:	test   BYTE PTR [ecx+0x4f],dh
  4223b4:	test   DWORD PTR [esi],eax
  4223b6:	sbb    ebx,DWORD PTR [ecx-0xa]
  4223b9:	add    edi,DWORD PTR [ecx-0x17]
  4223bc:	(bad)  [esi]
  4223be:	loope  0x4223f0
  4223c0:	imul   esi,DWORD PTR [ecx],0x39bfb1c4
  4223c6:	ss xor eax,0xa0315f31
  4223cc:	sub    al,0x41
  4223ce:	xor    ebx,DWORD PTR [eax-0x2b]
  4223d1:	mov    ebx,0x39d9b42e
  4223d6:	ret    0x8a4b
  4223d9:	mov    esi,0x97d1ea09
  4223de:	(bad)  
  4223df:	xor    DWORD PTR [edi+ecx*4],ebx
  4223e2:	xor    DWORD PTR [eax*2+0x679fa448],edi
  4223e9:	pop    esp
  4223ea:	and    DWORD PTR [ecx-0x3556c1b],0xfffffffb
  4223f1:	bound  esp,QWORD PTR [edx+0x29]
  4223f4:	push   ebx
  4223f5:	xor    eax,0x836204c6
  4223fa:	push   cs
  4223fb:	jae    0x4223d0
  4223fd:	es (bad) 
  4223ff:	imul   esp,esi,0x32
  422402:	jnp    0x422413
  422404:	jle    0x4223b0
  422406:	add    bh,BYTE PTR [esi-0x16]
  422409:	retf   0x79a5
  42240c:	aas    
  42240d:	pusha  
  42240e:	inc    ebx
  42240f:	sub    al,0x3
  422411:	nop
  422412:	and    al,0x64
  422414:	sub    al,0xbc
  422416:	scas   al,BYTE PTR es:[edi]
  422417:	sub    ebx,ebp
  422419:	push   edx
  42241a:	xor    BYTE PTR ds:0xaa8cbe1a,al
  422420:	push   ecx
  422421:	push   ebp
  422422:	iret   
  422423:	(bad)  
  422424:	int    0xfd
  422426:	aam    0xfa
  422428:	sub    ebp,esi
  42242a:	mov    edi,0xc8f51046
  42242f:	xchg   DWORD PTR [esi+0x68ea20c3],ecx
  422435:	dec    ecx
  422436:	jnp    0x4223e0
  422438:	inc    ebp
  422439:	cmc    
  42243a:	push   ds
  42243b:	jg     0x4224a5
  42243d:	inc    ebx
  42243e:	pop    esp
  42243f:	enter  0x229a,0x3c
  422443:	(bad)  
  422444:	cli    
  422445:	dec    edx
  422446:	jne    0x42246b
  422448:	jecxz  0x4223d3
  42244a:	adc    al,0xe4
  42244c:	inc    ecx
  42244d:	lds    eax,FWORD PTR [edi+0x6a24ec5a]
  422453:	ret    
  422454:	les    eax,FWORD PTR [eax]
  422456:	test   BYTE PTR [eax-0x5b991bcd],dh
  42245c:	test   eax,0xd641c0c5
  422461:	bound  eax,QWORD PTR [edi+0x4f]
  422464:	mov    bl,0xa
  422466:	addr16 leave 
  422468:	cli    
  422469:	inc    edi
  42246a:	dec    ebx
  42246b:	push   es
  42246c:	sub    al,0x2f
  42246e:	aam    0xbf
  422470:	(bad)  
  422471:	cmp    cl,dl
  422473:	adc    esp,edi
  422475:	(bad)  
  422476:	push   ss
  422477:	push   edi
  422478:	in     al,dx
  422479:	mov    ah,0x85
  42247b:	mov    eax,0xbf67d0b1
  422480:	mov    DWORD PTR [esi-0x19cbc5c3],edi
  422486:	nop
  422487:	stos   BYTE PTR es:[edi],al
  422488:	inc    ecx
  422489:	or     BYTE PTR [esp+edx*4],ah
  42248c:	out    0xfe,al
  42248e:	popa   
  42248f:	and    dl,BYTE PTR [esi+0x32]
  422492:	sbb    eax,0x926ccaae
  422497:	repnz pop ecx
  422499:	test   BYTE PTR [edx],ch
  42249b:	fisubr DWORD PTR [ecx-0x3c]
  42249e:	xchg   edi,eax
  42249f:	mov    eax,ds:0x3f3298c3
  4224a4:	jne    0x422512
  4224a6:	popa   
  4224a7:	add    al,0xb2
  4224a9:	aas    
  4224aa:	mov    edx,0x785fe0e5
  4224af:	add    ah,al
  4224b1:	fcom   DWORD PTR [eax+0x5a]
  4224b4:	xchg   ebx,eax
  4224b5:	push   ebx
  4224b6:	sbb    BYTE PTR [eax],dl
  4224b8:	mov    esp,0x9f381e96
  4224bd:	sub    cl,0x21
  4224c0:	mov    BYTE PTR [edx-0x60],bl
  4224c3:	retf   
  4224c4:	pop    es
  4224c5:	icebp  
  4224c6:	(bad)  
  4224c8:	mov    edi,0x6d157462
  4224cd:	pushw  0x8d0b
  4224d1:	mov    edx,0x268a65b7
  4224d6:	xchg   ebp,eax
  4224d7:	xor    eax,0x61a4d8e1
  4224dc:	lods   eax,DWORD PTR ds:[esi]
  4224dd:	inc    edx
  4224de:	(bad)
  4224e1:	out    dx,al
  4224e2:	bound  edi,QWORD PTR ds:0x5c7e906d
  4224e8:	push   ebx
  4224e9:	(bad)  
  4224ea:	fdiv   DWORD PTR [esp+ebx*8+0x21]
  4224ee:	mov    ds:0xa21e90ae,eax
  4224f3:	(bad)  
  4224f4:	xchg   esp,eax
  4224f5:	push   es
  4224f6:	rcr    DWORD PTR [eax-0x4e],1
  4224f9:	adc    cl,BYTE PTR [edi+esi*1]
  4224fc:	xchg   edx,eax
  4224fd:	jb     0x4224cd
  4224ff:	mov    ds,WORD PTR [edi]
  422501:	nop
  422502:	xor    al,0xef
  422504:	jbe    0x42254d
  422506:	adc    eax,0x8e9258ca
  42250b:	ror    BYTE PTR [esi-0x5d],0x5a
  42250f:	sbb    DWORD PTR [ebx+0x64],0x0
  422513:	mov    ecx,0x1761c14e
  422518:	mov    BYTE PTR [esi+0x5b88a120],bh
  42251e:	mov    ch,0x9a
  422520:	in     al,dx
  422521:	popf   
  422522:	das    
  422523:	outs   dx,BYTE PTR ds:[esi]
  422524:	dec    ebx
  422525:	dec    ebx
  422526:	jae    0x422521
  422528:	(bad)  
  422529:	in     al,0xa7
  42252b:	sbb    dh,BYTE PTR [ebx-0x15]
  42252e:	test   ebp,0xfc8368b5
  422534:	mov    ss,WORD PTR [esi-0x1d1ef64d]
  42253a:	pop    eax
  42253b:	jno    0x422598
  42253d:	xchg   esp,eax
  42253e:	test   BYTE PTR [ebp-0x5],bh
  422541:	mov    dl,0x2e
  422543:	xor    BYTE PTR [edi-0x35551ac5],0xd6
  42254a:	outs   dx,DWORD PTR ds:[esi]
  42254b:	outs   dx,BYTE PTR ds:[esi]
  42254c:	inc    esp
  42254d:	leave  
  42254e:	push   esp
  42254f:	iret   
  422550:	jno    0x4225af
  422552:	(bad)  
  422553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422554:	jno    0x422534
  422556:	sbb    al,0x88
  422558:	out    0x57,eax
  42255a:	(bad)  
  42255b:	(bad)  
  42255d:	sbb    cl,ah
  42255f:	mov    al,0x58
  422561:	pushf  
  422562:	pop    ds
  422563:	mov    edi,ebp
  422565:	mov    edi,0x3ff423d4
  42256a:	fbstp  TBYTE PTR [ecx]
  42256c:	sbb    esp,DWORD PTR [ecx+esi*2+0x5d71ede8]
  422573:	lock mov edi,0xc64acea1
  422579:	ss dec esp
  42257b:	xlat   BYTE PTR ds:[ebx]
  42257c:	push   esi
  42257d:	gs in  al,dx
  42257f:	adc    cl,BYTE PTR [ecx]
  422581:	push   esp
  422582:	sub    DWORD PTR [ecx-0x58e35f94],edi
  422588:	adc    eax,0x6b12af2c
  42258d:	inc    eax
  42258e:	push   edx
  42258f:	mov    eax,0xe7b72712
  422594:	mov    eax,ds:0xd3d1eafc
  422599:	ins    DWORD PTR es:[edi],dx
  42259a:	pop    ds
  42259b:	mov    dh,0x66
  42259d:	and    eax,DWORD PTR ds:0xcccc89c8
  4225a3:	nop
  4225a4:	dec    esp
  4225a5:	(bad)  
  4225a6:	test   esp,0x2362ede
  4225ac:	inc    edx
  4225ad:	cmp    dl,BYTE PTR [esi-0x1cfddf20]
  4225b3:	frstor [ecx-0x590fbec0]
  4225b9:	mov    dl,0x17
  4225bb:	rcl    DWORD PTR [eax+0x35],cl
  4225be:	push   0x72
  4225c0:	sub    DWORD PTR [ecx+0x56be7391],ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225f9
  4225c9:	mov    ds:0x57696201,al
  4225ce:	and    al,0xbe
  4225d0:	add    esp,DWORD PTR [ecx+0x69923891]
  4225d6:	add    BYTE PTR [edi-0x60],bh
  4225d9:	pushf  
  4225da:	jge    0x422610
  4225dc:	(bad)  
  4225dd:	pop    ss
  4225de:	shl    ecx,1
  4225e0:	xor    BYTE PTR [ebp-0x6e],dh
  4225e3:	mov    ds:0xa25c7f23,al
  4225e8:	ss in  eax,dx
  4225ea:	mov    ecx,cs
  4225ec:	mov    ebx,0x2ed60b87
  4225f1:	adc    al,0xe3
  4225f3:	ins    DWORD PTR es:[edi],dx
  4225f4:	or     ebp,DWORD PTR [esi+0x12]
  4225f7:	mov    bl,0x66
  4225f9:	int    0xda
  4225fb:	rol    bh,cl
  4225fd:	sub    BYTE PTR [eax],ch
  4225ff:	call   0xa041d46c
  422604:	(bad)  
  422605:	loopne 0x422679
  422607:	add    al,0x96
  422609:	ins    DWORD PTR es:[edi],dx
  42260a:	(bad)  
  42260c:	loopne 0x4225c4
  42260e:	cmp    eax,0xec063bb4
  422613:	iret   
  422614:	mov    esp,0x7ee7f49e
  422619:	repz loopne 0x42264f
  42261c:	jbe    0x4225fc
  42261e:	jge    0x4225e8
  422620:	mov    esi,0x5f07b51a
  422625:	mov    BYTE PTR [ecx+0x20484585],ch
  42262b:	pop    esp
  42262c:	aad    0x94
  42262e:	mov    esi,0x19c397b
  422633:	iret   
  422634:	imul   edx,DWORD PTR [eax+edi*1-0x7],0x32
  422639:	jge    0x422686
  42263b:	xlat   BYTE PTR ds:[ebx]
  42263c:	mov    al,0x3f
  42263e:	mov    WORD PTR [edi-0x7],ss
  422641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422642:	mov    edi,0xcd1e2b87
  422647:	test   BYTE PTR [ebx],dl
  422649:	lahf   
  42264a:	pop    ebp
  42264b:	jns    0x4225d8
  42264d:	int3   
  42264e:	rcl    DWORD PTR [ebx+0x11d37750],cl
  422654:	fsubr  DWORD PTR [edi-0x42412a35]
  42265a:	and    BYTE PTR [edi-0x23],ah
  42265d:	mov    ecx,0x9267d7aa
  422662:	pushf  
  422663:	and    eax,0x56e30ff1
  422668:	push   edi
  422669:	scas   al,BYTE PTR es:[edi]
  42266a:	xor    BYTE PTR ss:[ebx-0x33],dl
  42266e:	and    eax,0x186bde48
  422673:	sub    DWORD PTR [ebx-0x20],edx
  422676:	test   eax,0x9853b122
  42267b:	in     al,dx
  42267c:	nop
  42267d:	test   DWORD PTR [esi+0x460616e3],0xc884b2cc
  422687:	mov    ebx,0xf57f2a2a
  42268c:	and    eax,0x6559426
  422691:	xchg   edi,eax
  422692:	outs   dx,DWORD PTR ds:[esi]
  422693:	imul   ecx,DWORD PTR [ebx-0xf40af5f],0x2a
  42269a:	shl    DWORD PTR [ebx],0x7c
  42269d:	ret    
  42269e:	(bad)  
  42269f:	je     0x422672
  4226a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a3:	out    0x47,eax
  4226a5:	fbstp  TBYTE PTR [edi+0x7e5d59ce]
  4226ac:	sub    bl,BYTE PTR ds:0x56898cdd
  4226b2:	xchg   DWORD PTR [esi+0x7],edx
  4226b5:	push   ebp
  4226b6:	call   0x4668:0x43227532
  4226bd:	push   cs
  4226be:	ret    
  4226bf:	sbb    esi,DWORD PTR [ebp-0x35a5e737]
  4226c5:	call   0x79180310
  4226ca:	push   eax
  4226cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226cc:	and    esp,DWORD PTR [edx+0x51]
  4226cf:	les    esi,FWORD PTR [edi-0x12a1558c]
  4226d5:	jns    0x4226f9
  4226d7:	repz loopne 0x42273a
  4226da:	xchg   esp,eax
  4226db:	and    DWORD PTR [esi-0x55],0x9
  4226df:	sbb    al,0xc4
  4226e1:	xchg   DWORD PTR [ebx+0x7a6d6db],ebx
  4226e7:	sbb    BYTE PTR [edi],dl
  4226e9:	mov    al,ds:0x23f91386
  4226ee:	xlat   BYTE PTR ds:[ebx]
  4226ef:	cwde   
  4226f0:	loope  0x422761
  4226f2:	fst    QWORD PTR [edi+0x27]
  4226f5:	sbb    DWORD PTR [ebp-0x1175f54a],eax
  4226fb:	fwait
  4226fc:	mov    ecx,0x64aac248
  422701:	je     0x42276a
  422703:	and    edi,DWORD PTR [ebx+0x55]
  422706:	cli    
  422707:	mov    esi,DWORD PTR [ecx+0x5f]
  42270a:	add    bl,0xcf
  42270d:	push   edx
  42270e:	in     al,0x2e
  422710:	cmp    eax,esp
  422712:	rcr    DWORD PTR [ecx+0x2ab90f99],0x83
  422719:	jg     0x42276a
  42271b:	cmp    edx,ecx
  42271d:	loop   0x4226a0
  42271f:	jl     0x42271c
  422721:	rol    eax,cl
  422723:	jmp    0x422747
  422725:	push   eax
  422726:	push   cs
  422727:	mov    ch,0x42
  422729:	jb     0x4226dd
  42272b:	iret   
  42272c:	xlat   BYTE PTR ds:[ebx]
  42272d:	mul    BYTE PTR [esi+0x35]
  422730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422731:	call   0x704716f0
  422736:	test   eax,0x5c757a7f
  42273b:	in     eax,dx
  42273c:	cs stc 
  42273e:	repnz scas eax,DWORD PTR es:[edi]
  422740:	push   ecx
  422741:	cmp    ch,BYTE PTR [edi+0x2e]
  422744:	pop    ebx
  422745:	dec    edi
  422746:	jb     0x422711
  422748:	xchg   ebx,eax
  422749:	nop
  42274a:	fadd   QWORD PTR [eax-0x4a14662b]
  422750:	dec    eax
  422751:	xlat   BYTE PTR ds:[ebx]
  422752:	sidtd  [edi-0x1a]
  422756:	in     al,dx
  422757:	cs dec esp
  422759:	dec    edi
  42275a:	std    
  42275b:	cmp    al,0xa3
  42275d:	jb     0x422709
  42275f:	jl     0x422774
  422761:	jno    0x422772
  422763:	sahf   
  422764:	and    al,0x4b
  422766:	mov    cl,0x7e
  422768:	mov    al,0x38
  42276a:	lods   al,BYTE PTR ds:[esi]
  42276b:	push   ds
  42276c:	int    0xfc
  42276e:	or     al,0xd4
  422770:	jno    0x422733
  422772:	mov    eax,0x3cb4eabf
  422777:	in     eax,0x8a
  422779:	fidiv  DWORD PTR [eax-0x2b]
  42277c:	sub    ecx,DWORD PTR [ebp-0x59]
  42277f:	loope  0x4227f8
  422781:	add    edx,DWORD PTR [esi-0x48]
  422784:	in     al,0xc4
  422786:	js     0x422761
  422788:	mov    bh,0xe
  42278a:	cmp    BYTE PTR [esi-0x5e],0x91
  42278e:	retf   
  42278f:	out    0x3a,al
  422791:	repz aaa 
  422793:	aas    
  422794:	nop
  422795:	fcmovnb st,st(2)
  422797:	and    al,0x15
  422799:	push   edi
  42279a:	das    
  42279b:	in     eax,0xf8
  42279d:	in     eax,0x8d
  42279f:	stos   BYTE PTR es:[edi],al
  4227a0:	add    DWORD PTR [eax],ebx
  4227a2:	push   ecx
  4227a3:	cdq    
  4227a4:	retf   0xa2fa
  4227a7:	out    dx,al
  4227a8:	sbb    bl,ch
  4227aa:	fsub   QWORD PTR [esi]
  4227ac:	or     bh,BYTE PTR [edi]
  4227ae:	rcl    DWORD PTR [eax+0x5d],1
  4227b1:	cdq    
  4227b2:	jge    0x422829
  4227b4:	xor    al,BYTE PTR [ecx+0x4afdcc6e]
  4227ba:	adc    DWORD PTR [ecx-0x1d1dd1f],0x249da047
  4227c4:	mov    ch,0x68
  4227c6:	cld    
  4227c7:	sbb    esp,0x3223398b
  4227cd:	xlat   BYTE PTR ds:[ebx]
  4227ce:	dec    ebp
  4227cf:	and    DWORD PTR [esi+ebx*8],0xf73b00ae
  4227d6:	xchg   ecx,eax
  4227d7:	lahf   
  4227d8:	outs   dx,BYTE PTR ds:[esi]
  4227d9:	js     0x422769
  4227db:	daa    
  4227dc:	mov    eax,0x105ab3cf
  4227e1:	cs into 
  4227e3:	push   0x6bbee4cb
  4227e8:	adc    eax,0x1464b1e1
  4227ed:	xchg   ebp,eax
  4227ee:	adc    eax,0xb886a1d6
  4227f3:	test   al,0xe
  4227f5:	gs imul esp,esi,0xffffff8d
  4227f9:	sub    eax,0xa4e51ef5
  4227fe:	mov    cl,BYTE PTR [edx-0x586793d9]
  422804:	adc    ecx,DWORD PTR [edx+0x48]
  422807:	fiadd  DWORD PTR [ebp+0x21efc7b5]
  42280d:	ret    0x2b2b
  422810:	popa   
  422811:	lds    eax,FWORD PTR [edi]
  422813:	mov    eax,ds:0x188e3b2b
  422818:	call   0xeff0:0x2160d06b
  42281f:	mov    ah,0x7f
  422821:	xor    esi,DWORD PTR [ecx]
  422823:	pop    ebx
  422824:	dec    ebx
  422825:	in     al,0x22
  422827:	xor    BYTE PTR [esi-0x47a9ad44],0x8
  42282e:	add    cl,cl
  422830:	add    DWORD PTR [edx],ebp
  422832:	es cdq 
  422834:	lds    edx,FWORD PTR [ebp+0x51]
  422837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422838:	inc    ebp
  422839:	adc    al,0x2c
  42283b:	jae    0x42288a
  42283d:	(bad)  
  42283e:	mov    edi,0xc05c4e61
  422843:	clc    
  422844:	loope  0x4228b5
  422846:	inc    edx
  422847:	sub    eax,0x54870987
  42284c:	xchg   ebx,eax
  42284d:	jae    0x42289c
  42284f:	mov    ah,0xb8
  422851:	sub    ebp,DWORD PTR [ecx-0x7e524292]
  422857:	or     eax,DWORD PTR [edx+edi*2-0x16a9c55f]
  42285e:	fnstcw WORD PTR [edx+0x45]
  422861:	mov    dh,0x82
  422863:	mov    BYTE PTR [edx],bh
  422865:	or     al,0x92
  422867:	and    al,0xee
  422869:	loopne 0x42284d
  42286b:	out    0xba,al
  42286d:	dec    esi
  42286e:	mov    eax,0x40f98fa8
  422873:	push   esp
  422874:	mov    bl,0x8a
  422876:	(bad)  
  422877:	dec    edx
  422878:	pushf  
  422879:	shl    ebp,1
  42287b:	ds xchg edi,eax
  42287d:	not    eax
  42287f:	enter  0x417a,0x76
  422883:	gs or  ah,bh
  422886:	pop    esi
  422887:	adc    eax,0x3354b5dd
  42288c:	jg     0x422836
  42288e:	loopne 0x4228b5
  422890:	imul   eax
  422892:	mov    al,ds:0x36ee63d
  422897:	xchg   BYTE PTR [ebx+esi*8-0x4e302eb2],dl
  42289e:	ds icebp 
  4228a0:	push   edi
  4228a1:	or     ecx,edi
  4228a3:	sahf   
  4228a4:	jbe    0x422852
  4228a6:	pop    ss
  4228a7:	jns    0x42290f
  4228a9:	pop    esp
  4228aa:	fs (bad) 
  4228ac:	into   
  4228ad:	jg     0x422833
  4228af:	xchg   edx,esi
  4228b1:	jns    0x42287b
  4228b3:	mov    es:0xd27cdc6b,eax
  4228b9:	call   0x7c51:0xbdb7294e
  4228c0:	jo     0x422903
  4228c2:	(bad)  
  4228c4:	pop    edi
  4228c5:	aad    0x32
  4228c7:	xchg   edi,eax
  4228c9:	mov    WORD PTR [eax-0x210e0f10],fs
  4228cf:	xor    esi,DWORD PTR [ebx]
  4228d1:	mov    ds:0x3988a64c,eax
  4228d6:	xchg   ebp,ecx
  4228d8:	cs xor al,0x74
  4228db:	or     dl,BYTE PTR [ecx+0x51]
  4228de:	(bad)  
  4228e0:	and    BYTE PTR [ecx-0x114d9fc8],ah
  4228e6:	je     0x4228a2
  4228e8:	(bad)  
  4228e9:	mov    es,WORD PTR [ebx+0x74ae6ad7]
  4228ef:	pop    edx
  4228f0:	jge    0x4228ad
  4228f2:	add    ebp,ebx
  4228f4:	mov    dl,0x4a
  4228f6:	lahf   
  4228f7:	out    dx,eax
  4228f8:	les    esi,FWORD PTR ds:0xe617f0b4
  4228fe:	sbb    DWORD PTR [edi],esp
  422900:	retf   
  422901:	outs   dx,BYTE PTR ds:[esi]
  422902:	sbb    DWORD PTR [esi+edi*4-0x7],ebp
  422906:	cmp    BYTE PTR [esi],0xa7
  422909:	ss mov ch,0x99
  42290c:	jecxz  0x4228b2
  42290e:	call   0xad50:0x6667bbe9
  422915:	loop   0x422965
  422917:	xor    eax,0xd9b56617
  42291c:	popa   
  42291d:	jb     0x42293a
  42291f:	pusha  
  422920:	inc    ebx
  422921:	out    dx,al
  422922:	sbb    DWORD PTR [ecx],0xffffffa2
  422925:	imul   ebx,DWORD PTR [eax],0x61
  422928:	sbb    DWORD PTR [eax+0x53f01519],eax
  42292e:	ss aad 0x37
  422931:	inc    edi
  422932:	sub    BYTE PTR [edx+edi*1+0x18141b0a],bh
  422939:	shl    DWORD PTR [edx+0x13],cl
  42293c:	shr    DWORD PTR [edx+0x7f],0xd
  422940:	xchg   edi,eax
  422941:	and    ebx,edx
  422943:	adc    DWORD PTR [ebx+eax*4],0xffffff84
  422947:	push   ss
  422948:	xchg   BYTE PTR [esi+0x5344de2c],ah
  42294e:	jb     0x422911
  422950:	aad    0xd7
  422952:	pop    es
  422953:	cmp    eax,ecx
  422955:	add    esi,0xffffffa7
  422958:	dec    edi
  422959:	lahf   
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
