
5eda35a8318c1809b75349be19fe048128cb657574adf8e93147654fe6ebe94f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a743
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x4298b7
  401084:	mov    ecx,DWORD PTR ds:0x42a003
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a74b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x42a013
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a74f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x42a00f
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a753
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a757
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a75f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a763
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a767
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x551192fe
  40178d:	pop    ss
  40178e:	daa    
  40178f:	add    DWORD PTR [ebx+0x5cef8383],0xffffff83
  401796:	sub    DWORD PTR [edx],0x2d
  401799:	and    al,0x3e
  40179b:	cmp    ah,BYTE PTR es:[eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x76437776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x22],ebx
  40183b:	icebp  
  40183c:	mov    eax,ds:0xc3a86c89
  401841:	push   0x23
  401843:	(bad)  
  401844:	and    BYTE PTR [ebp+0x35938a3],bl
  40184a:	push   es
  40184b:	dec    ecx
  40184c:	xor    BYTE PTR [ecx],dl
  40184e:	js     0x4018b4
  401850:	in     al,0xc8
  401852:	push   cs
  401853:	fidiv  DWORD PTR [ebx-0x38]
  401856:	int    0xd4
  401858:	cmp    bh,BYTE PTR [edi+0x51]
  40185b:	in     al,0xb
  40185d:	inc    ebx
  40185e:	sub    esp,DWORD PTR [eax-0x4591c7e8]
  401864:	xor    DWORD PTR [esi-0xcab113c],ebp
  40186a:	in     eax,dx
  40186b:	(bad)  
  40186c:	mov    ch,0xff
  40186e:	cmp    DWORD PTR [eax-0x4b],ebx
  401871:	cdq    
  401872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401873:	les    esp,FWORD PTR [ecx-0x7b]
  401876:	stos   DWORD PTR es:[edi],eax
  401877:	imul   DWORD PTR [ebp+0x6a607f0b]
  40187d:	imul   ebp,DWORD PTR [ecx-0x5fb77f4b],0x4c
  401884:	jmp    0x3334:0xd26f8252
  40188b:	cmp    DWORD PTR [ebx+0x6f],edi
  40188e:	mov    dl,0xd7
  401890:	call   0x93a5be58
  401895:	das    
  401896:	xchg   DWORD PTR [edi],esi
  401898:	inc    BYTE PTR [edx]
  40189a:	jle    0x401836
  40189c:	outs   dx,BYTE PTR ds:[esi]
  40189d:	js     0x40188e
  40189f:	sub    eax,0xdd0a0fd2
  4018a4:	mov    WORD PTR [ebx],fs
  4018a6:	add    dl,dh
  4018a8:	or     al,0xb2
  4018aa:	pop    ds
  4018ab:	mov    ah,0xc8
  4018ad:	mov    cl,0xd2
  4018af:	cmp    DWORD PTR [edx-0x4f469125],edx
  4018b5:	retf   
  4018b6:	aad    0xb2
  4018b8:	mov    ss,WORD PTR [edx]
  4018ba:	inc    ebp
  4018bb:	sub    bh,BYTE PTR [ebx]
  4018bd:	stc    
  4018be:	popf   
  4018bf:	inc    edx
  4018c0:	ins    DWORD PTR es:[edi],dx
  4018c1:	push   ds
  4018c2:	mov    ds:0x15621853,al
  4018c7:	sbb    DWORD PTR [esi-0x2c],0x4c
  4018cb:	jae    0x4018b8
  4018cd:	call   0xb831b228
  4018d2:	mov    al,ds:0x2ae0f22a
  4018d7:	pop    eax
  4018d8:	xor    al,0x9c
  4018da:	aam    0x29
  4018dc:	fcom   st(3)
  4018de:	dec    edx
  4018df:	dec    ecx
  4018e0:	inc    edi
  4018e1:	pop    esp
  4018e2:	aas    
  4018e3:	jp     0x401938
  4018e5:	and    eax,0x3ce3515d
  4018ea:	(bad)  
  4018eb:	shl    BYTE PTR [edi-0x18e22386],0xc8
  4018f2:	xor    eax,0x4278842a
  4018f7:	ja     0x401914
  4018f9:	sub    ah,BYTE PTR ss:[esi+0x3f]
  4018fd:	sub    bh,cl
  4018ff:	jo     0x40192f
  401901:	imul   DWORD PTR [eax+0x23b0e1e7]
  401907:	jnp    0x4018a1
  401909:	aad    0x6d
  40190b:	repz rcr ch,1
  40190e:	push   eax
  40190f:	shl    BYTE PTR [ecx-0x2cbd60f5],1
  401915:	add    BYTE PTR [eax+0x6b3097b1],ah
  40191b:	pushf  
  40191c:	nop
  40191d:	jge    0x4018a6
  40191f:	mov    al,ds:0xa5f6eedd
  401924:	aad    0x15
  401926:	retf   
  401927:	sub    ah,BYTE PTR [eax+0x1a1804fc]
  40192d:	jbe    0x40198f
  40192f:	test   eax,0x3190cb7f
  401934:	and    eax,0x86d72ff7
  401939:	and    BYTE PTR [edx+0x719b86c5],al
  40193f:	cld    
  401940:	aad    0xc5
  401942:	mov    bl,0x3e
  401944:	pop    esi
  401945:	test   al,0xaf
  401947:	inc    eax
  401948:	jb     0x40198c
  40194a:	(bad)  
  40194b:	adc    bh,BYTE PTR [edi+edi*4+0x1a]
  40194f:	sub    eax,0xbc898f12
  401954:	mov    esi,0xab2d89f4
  401959:	pop    ss
  40195a:	add    eax,0x26fd1688
  40195f:	mov    bh,BYTE PTR [ebx+0x53603843]
  401965:	lock xchg BYTE PTR [ebp-0x55181b81],ch
  40196c:	adc    edx,0xbcddf284
  401972:	js     0x401995
  401974:	sub    BYTE PTR [ecx],cl
  401976:	in     eax,dx
  401977:	ja     0x4019dd
  401979:	cli    
  40197a:	fcom   st(7)
  40197c:	dec    esp
  40197d:	xor    BYTE PTR [edx-0x4b384385],ch
  401983:	out    0xf9,eax
  401985:	(bad)  
  401986:	push   edx
  401987:	shr    DWORD PTR [eax-0x17],1
  40198a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40198b:	aas    
  40198c:	das    
  40198d:	pushf  
  40198e:	mov    edi,0xe86747f8
  401993:	in     al,dx
  401994:	sti    
  401995:	imul   edx,DWORD PTR [edi],0x1f1cad06
  40199b:	dec    bh
  40199d:	idiv   DWORD PTR [ebx+0x43]
  4019a0:	jo     0x401929
  4019a2:	mov    edx,esi
  4019a4:	out    0x12,al
  4019a6:	xchg   ecx,eax
  4019a7:	jns    0x4019c5
  4019a9:	dec    edx
  4019aa:	adc    eax,0xba33bd55
  4019af:	in     al,0x3
  4019b1:	xchg   edi,eax
  4019b2:	dec    esp
  4019b3:	or     DWORD PTR [ecx],esi
  4019b5:	imul   ebp,DWORD PTR [eax+0xa],0x21
  4019b9:	lods   al,BYTE PTR ds:[esi]
  4019ba:	mov    BYTE PTR [ebp+eiz*1+0x27a485ce],dh
  4019c1:	pop    esi
  4019c2:	fs dec edx
  4019c4:	mov    ah,0x88
  4019c6:	leave  
  4019c7:	mov    esi,0x1abf82bd
  4019cc:	ss xchg edi,eax
  4019ce:	cmc    
  4019cf:	sahf   
  4019d0:	jo     0x401a47
  4019d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019d3:	test   eax,0x92f39399
  4019d8:	loopne 0x401971
  4019da:	in     al,dx
  4019db:	sub    cl,BYTE PTR [edx-0x5e]
  4019de:	iret   
  4019df:	popa   
  4019e0:	cmp    al,0x45
  4019e2:	jbe    0x401a4d
  4019e4:	aas    
  4019e5:	pop    ebp
  4019e6:	aam    0x23
  4019e8:	lock inc ecx
  4019ea:	fiadd  DWORD PTR [ecx]
  4019ec:	repz fisttp QWORD PTR [esi+0x23]
  4019f0:	fistp  DWORD PTR [esi]
  4019f2:	xchg   esp,eax
  4019f3:	dec    al
  4019f5:	inc    ebp
  4019f6:	into   
  4019f7:	pop    es
  4019f8:	inc    ecx
  4019f9:	jmp    0xaccb94ec
  4019fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019ff:	push   ebp
  401a00:	jmp    0x765c0393
  401a05:	xchg   edi,eax
  401a06:	fdivp  st(4),st
  401a08:	add    al,0x84
  401a0a:	push   0xffffffbd
  401a0c:	shr    ah,cl
  401a0e:	ja     0x4019aa
  401a10:	jle    0x4019dc
  401a12:	inc    esp
  401a13:	je     0x401a05
  401a15:	lfs    esi,FWORD PTR [esi-0x6c5eea4c]
  401a1c:	in     eax,dx
  401a1d:	jae    0x401a3a
  401a1f:	fist   WORD PTR [edx]
  401a21:	rol    bh,cl
  401a23:	jns    0x401a6c
  401a25:	mov    al,ds:0x29fc042f
  401a2a:	xor    eax,0x6679d2b5
  401a2f:	pop    ebp
  401a30:	fmul   DWORD PTR [esi]
  401a32:	sbb    DWORD PTR [ebp-0x59519bed],esi
  401a38:	fimul  WORD PTR [ebp+0xaec9bcd]
  401a3e:	pop    es
  401a3f:	(bad)  
  401a40:	in     al,0x30
  401a42:	add    BYTE PTR [edx],dl
  401a44:	cld    
  401a45:	gs out 0x2,al
  401a48:	mul    BYTE PTR [ebp+0x4abffa1f]
  401a4e:	adc    DWORD PTR [ebx+0x6601bc3d],0x21
  401a55:	mov    ebx,0xba80cb3
  401a5a:	jb     0x401a33
  401a5c:	xlat   BYTE PTR ds:[ebx]
  401a5d:	sub    BYTE PTR [ecx+0x7f],al
  401a60:	icebp  
  401a61:	add    ch,0x4d
  401a64:	(bad)  
  401a65:	push   edi
  401a66:	and    DWORD PTR [eax],edi
  401a68:	dec    ecx
  401a69:	adc    DWORD PTR [ebx+esi*8-0x41],esi
  401a6d:	fidiv  DWORD PTR [edx-0x13234b4d]
  401a73:	lock add DWORD PTR [ebp-0x6857f0e0],esi
  401a7a:	mov    ds,ebp
  401a7c:	sar    DWORD PTR [ebx],cl
  401a7e:	jo     0x401adb
  401a80:	jne    0x401a0c
  401a82:	cmp    ch,bh
  401a84:	stc    
  401a85:	retf   
  401a86:	jg     0x401a99
  401a88:	test   eax,0x5336be31
  401a8d:	inc    esi
  401a8e:	in     al,dx
  401a8f:	iret   
  401a90:	rol    DWORD PTR [ecx+eiz*4+0x35],cl
  401a94:	mov    cl,0x41
  401a96:	mov    al,ds:0x996b06c3
  401a9b:	dec    esp
  401a9c:	shl    DWORD PTR [ecx],1
  401a9e:	xor    ecx,DWORD PTR [edi]
  401aa0:	fisttp QWORD PTR [eax-0x2c]
  401aa3:	icebp  
  401aa4:	mov    dl,0xd2
  401aa6:	mov    DWORD PTR [eax-0x3d],edx
  401aa9:	jnp    0x401a86
  401aab:	dec    edi
  401aac:	int    0xf7
  401aae:	hlt    
  401aaf:	in     eax,0x93
  401ab1:	fs shr edx,1
  401ab4:	rcr    BYTE PTR [edx-0x79c3c125],1
  401aba:	pop    ecx
  401abb:	push   ecx
  401abc:	and    BYTE PTR fs:[ebx-0x2cdd09fa],bh
  401ac3:	mov    ?,WORD PTR [edx+0x63fda798]
  401ac9:	cmc    
  401aca:	popa   
  401acb:	dec    ebx
  401acc:	in     eax,dx
  401acd:	(bad)  
  401ace:	loopne 0x401b22
  401ad0:	dec    esi
  401ad1:	fdiv   QWORD PTR ds:0x208aaf7a
  401ad7:	pop    esi
  401ad8:	mov    ah,0xc1
  401ada:	or     al,0x4a
  401adc:	out    dx,al
  401add:	xchg   ecx,eax
  401ade:	into   
  401adf:	xor    ebp,DWORD PTR [ebx+ecx*1+0x20f2c80]
  401ae6:	cmp    eax,0x5e9654f5
  401aeb:	cld    
  401aec:	ja     0x401ad7
  401aee:	cdq    
  401aef:	clc    
  401af0:	addr16 sti 
  401af2:	lods   al,BYTE PTR ds:[esi]
  401af3:	mov    ds:0x4e92d0bb,eax
  401af8:	pop    esi
  401af9:	lahf   
  401afa:	push   esp
  401afb:	mov    DWORD PTR [edx],eax
  401afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401afe:	xchg   BYTE PTR [eax-0x47],bl
  401b01:	push   esi
  401b02:	not    DWORD PTR [eax]
  401b04:	stos   DWORD PTR es:[edi],eax
  401b05:	xor    BYTE PTR [eax+0x42a81704],bh
  401b0b:	xchg   ebx,eax
  401b0c:	sar    DWORD PTR [eax+eax*2-0x6c01bdd5],0x8
  401b14:	popf   
  401b15:	xlat   BYTE PTR ds:[ebx]
  401b16:	das    
  401b17:	aaa    
  401b18:	int3   
  401b19:	pop    ds
  401b1a:	add    al,0x88
  401b1c:	pop    eax
  401b1d:	mov    bh,0x7d
  401b1f:	adc    eax,0xf4ce62da
  401b24:	mov    dh,bh
  401b26:	fdivr  st(5),st
  401b28:	fisubr DWORD PTR [eax-0x1]
  401b2b:	xchg   ebp,eax
  401b2c:	lods   eax,DWORD PTR ds:[esi]
  401b2d:	add    BYTE PTR [esi],0x33
  401b30:	hlt    
  401b31:	xor    eax,0xc1566b79
  401b36:	sub    eax,0xa72c6c25
  401b3b:	std    
  401b3c:	imul   edx,DWORD PTR [ebp+0x474253e],0x32
  401b43:	ret    
  401b44:	in     al,0x1e
  401b46:	psubsw mm6,mm0
  401b49:	loopne 0x401b5b
  401b4b:	pop    ebx
  401b4c:	adc    ebp,DWORD PTR [eax+0x4]
  401b4f:	mov    ds:0xc0b19393,eax
  401b54:	outs   dx,DWORD PTR ds:[esi]
  401b55:	push   edx
  401b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b57:	ret    0x5a13
  401b5a:	int3   
  401b5b:	(bad)  
  401b5c:	imul   esp,DWORD PTR [esp+edx*1-0x16b00340],0x90976131
  401b67:	push   ecx
  401b68:	std    
  401b69:	or     edx,DWORD PTR [ebp-0x5a]
  401b6c:	cmp    ebp,esi
  401b6e:	retf   
  401b6f:	stos   BYTE PTR es:[edi],al
  401b70:	shr    BYTE PTR [edx-0x66],0x4c
  401b74:	mov    esi,0xb2d0b0a6
  401b79:	jno    0x401b77
  401b7b:	xor    eax,0x210ef59a
  401b80:	cdq    
  401b81:	and    ebp,DWORD PTR [edx+0x275d4991]
  401b87:	lock push edi
  401b89:	xchg   esp,eax
  401b8a:	jle    0x401bd9
  401b8c:	cmp    eax,0x470d2efb
  401b91:	je     0x401bda
  401b93:	jmp    0x401b77
  401b95:	cli    
  401b96:	or     DWORD PTR [eax-0x5924cb70],esp
  401b9c:	fdiv   QWORD PTR [ecx-0x42ec38a8]
  401ba2:	mov    edi,0x77f60ac8
  401ba7:	fstp   DWORD PTR [esi]
  401ba9:	or     eax,0xadc1f5a
  401bae:	dec    ebx
  401baf:	cmp    DWORD PTR [esi-0x436122fd],0xffffffc6
  401bb6:	stc    
  401bb7:	push   ebp
  401bb8:	mov    ah,0x2e
  401bba:	sub    al,0xc5
  401bbc:	mov    dl,0xd6
  401bbe:	mov    dl,0x66
  401bc0:	adc    BYTE PTR [edx-0x2a],0x77
  401bc4:	enter  0xd4eb,0x40
  401bc8:	jmp    0xeea4:0x4d1e8b76
  401bcf:	test   ebp,0x725b110a
  401bd5:	inc    ebx
  401bd6:	retf   0x5dc8
  401bd9:	add    BYTE PTR [ebx],0xd
  401bdc:	loop   0x401c32
  401bde:	jg     0x401be7
  401be0:	push   ebp
  401be1:	push   ss
  401be2:	sar    BYTE PTR [edi-0x6d2b8eb2],cl
  401be8:	inc    ecx
  401be9:	ss mov al,0xdb
  401bec:	(bad)  
  401bed:	icebp  
  401bee:	fimul  WORD PTR [ecx+0x19]
  401bf1:	int    0x72
  401bf3:	adc    al,0xe1
  401bf5:	lds    edx,FWORD PTR [edi+0x12e11371]
  401bfb:	dec    ecx
  401bfc:	xchg   ebp,eax
  401bfd:	pop    ebp
  401bfe:	in     al,0xf2
  401c00:	add    ecx,esi
  401c02:	and    BYTE PTR [ebx-0x5297e807],cl
  401c08:	push   ecx
  401c09:	adc    al,0x27
  401c0b:	test   DWORD PTR [edx-0x1acd52ea],0x667db18b
  401c15:	repz sahf 
  401c17:	jae    0x401c0a
  401c19:	jo     0x401c27
  401c1b:	pop    ebp
  401c1c:	jnp    0x401c8f
  401c1e:	repz jmp 0xd9cf:0xf34a4569
  401c26:	adc    DWORD PTR [esi],ecx
  401c28:	mov    ds:0xbf3304c7,al
  401c2d:	aad    0xe2
  401c2f:	loopne 0x401bc4
  401c31:	mov    esi,es
  401c33:	mov    DWORD PTR [esi-0x77],esp
  401c36:	and    cl,dl
  401c38:	fcmovbe st,st(0)
  401c3a:	jmp    0x401bc3
  401c3c:	push   eax
  401c3d:	lds    ebx,FWORD PTR [edx+0x23c206a]
  401c43:	inc    esi
  401c44:	frstor [ebx+esi*8-0x50dda279]
  401c4b:	push   ecx
  401c4c:	outs   dx,BYTE PTR ds:[esi]
  401c4d:	or     bh,bh
  401c4f:	jp     0x401bf6
  401c51:	xchg   BYTE PTR [ebx],dl
  401c53:	jge    0x401ccd
  401c55:	or     BYTE PTR [edi-0x2],0x7d
  401c59:	inc    eax
  401c5a:	loop   0x401ca2
  401c5c:	ret    0x7fb6
  401c5f:	mov    esp,0x1549f6
  401c64:	dec    edi
  401c65:	dec    eax
  401c66:	sti    
  401c67:	aad    0xfa
  401c69:	pop    es
  401c6a:	adc    al,0xc6
  401c6c:	lahf   
  401c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c6e:	pop    eax
  401c6f:	and    al,BYTE PTR [ebp-0x3bd53648]
  401c75:	int    0x26
  401c77:	das    
  401c78:	loope  0x401c68
  401c7a:	inc    ebx
  401c7b:	out    dx,eax
  401c7c:	push   0x58
  401c7e:	cmp    DWORD PTR [edi+0x66b0d9b7],esi
  401c84:	dec    eax
  401c85:	mov    BYTE PTR [ecx-0x7cd253ce],0x6b
  401c8c:	cwde   
  401c8d:	xor    BYTE PTR [edx],bh
  401c8f:	out    dx,eax
  401c90:	mov    ch,0x4e
  401c92:	pop    ecx
  401c93:	jge    0x401cdb
  401c95:	jp     0x401c35
  401c97:	xchg   edx,eax
  401c98:	mov    ebp,0x59b5792f
  401c9d:	mov    eax,0x713b6d31
  401ca2:	mov    ecx,0xcc099938
  401ca7:	fwait
  401ca8:	test   eax,0x2dfe557c
  401cad:	sbb    eax,0xcaea6adf
  401cb2:	bound  esp,QWORD PTR [edi-0x4e3406ee]
  401cb8:	pop    ebx
  401cb9:	xor    cl,BYTE PTR ds:0xedc6e022
  401cbf:	lds    edx,FWORD PTR [edx]
  401cc1:	jmp    FWORD PTR [edi+eax*2]
  401cc4:	push   ds
  401cc5:	dec    edi
  401cc6:	in     al,dx
  401cc7:	test   ah,dh
  401cc9:	ret    
  401cca:	mov    edi,0xe3a2487c
  401ccf:	fcmovnu st,st(3)
  401cd1:	inc    ebp
  401cd2:	fstp   DWORD PTR [edx*2+0x427a8ae3]
  401cd9:	dec    ecx
  401cda:	jge    0x401c9f
  401cdc:	pop    ds
  401cdd:	sbb    esi,edi
  401cdf:	fld    DWORD PTR ds:0x127505da
  401ce5:	loop   0x401d36
  401ce7:	fstp   TBYTE PTR [ebx]
  401ce9:	push   0x48835dd7
  401cee:	in     eax,0x17
  401cf0:	shl    DWORD PTR [ebp+0x7068819e],0x1d
  401cf7:	dec    ecx
  401cf8:	ror    DWORD PTR [ebx+0x53],cl
  401cfb:	test   al,0xd2
  401cfd:	cwde   
  401cfe:	add    BYTE PTR [eax-0x3c8bc7fb],bh
  401d04:	xchg   BYTE PTR [ebx+0xfa5d7ec],ch
  401d0a:	jp     0x401d5b
  401d0c:	push   ebp
  401d0d:	inc    ecx
  401d0e:	adc    BYTE PTR [eax],ch
  401d10:	push   edx
  401d11:	cwde   
  401d12:	mov    cl,0x6f
  401d14:	ds dec ebx
  401d16:	add    DWORD PTR [ecx-0x42],edx
  401d19:	int    0xac
  401d1b:	aad    0xa0
  401d1d:	fcom   QWORD PTR [esi-0x7e]
  401d20:	in     eax,0x69
  401d22:	fdivr  QWORD PTR ds:0x182bc0da
  401d28:	fld    st(3)
  401d2a:	cmc    
  401d2b:	shl    DWORD PTR [esi],0xa8
  401d2e:	xlat   BYTE PTR ds:[ebx]
  401d2f:	push   eax
  401d30:	and    eax,0x61c9f5ce
  401d35:	loope  0x401ccc
  401d37:	jecxz  0x401dae
  401d39:	test   BYTE PTR [ebp-0xc3d312b],ch
  401d3f:	arpl   WORD PTR [edi-0x20d90c27],bp
  401d45:	mov    bl,0x5
  401d48:	jno    0x401d8f
  401d4a:	in     eax,0x85
  401d4c:	pop    eax
  401d4d:	pop    ebp
  401d4e:	aad    0xb9
  401d50:	push   edi
  401d51:	sbb    eax,0x97d60b26
  401d56:	sti    
  401d57:	inc    edi
  401d58:	cmc    
  401d59:	or     dl,al
  401d5b:	ja     0x401db3
  401d5d:	mov    al,ds:0xae482a24
  401d62:	ja     0x401ddb
  401d64:	loop   0x401cf0
  401d66:	test   eax,0xb0bcca38
  401d6b:	add    DWORD PTR [ecx],0xffffffc9
  401d6e:	dec    edi
  401d6f:	mov    cl,0xfd
  401d71:	and    eax,0x2e567b50
  401d76:	in     eax,0x67
  401d78:	ret    
  401d79:	mov    ah,BYTE PTR [edx-0x60]
  401d7c:	fstp   QWORD PTR [eax+0x75]
  401d7f:	dec    esi
  401d80:	add    bl,BYTE PTR [eax+ebp*1]
  401d83:	sbb    eax,0xcc600f81
  401d88:	dec    ebp
  401d89:	sub    BYTE PTR [esi],bh
  401d8b:	inc    esp
  401d8c:	fstp   st(6)
  401d8e:	mov    ds:0x400ba45d,al
  401d93:	fs cs enter 0xca9b,0xef
  401d99:	fistp  DWORD PTR [edi]
  401d9b:	cmc    
  401d9c:	in     al,dx
  401d9d:	ret    0x3bb9
  401da0:	mov    dh,0x16
  401da2:	or     ah,BYTE PTR [edx]
  401da4:	fsubr  QWORD PTR [esp+edx*4+0x5f]
  401da8:	jns    0x401d3f
  401daa:	mov    ecx,0x3b559a8f
  401daf:	es mov dh,0x87
  401db2:	(bad)  
  401db3:	jbe    0x401db7
  401db5:	cmp    al,0x1e
  401db7:	js     0x401da1
  401db9:	sub    ch,BYTE PTR [eax]
  401dbb:	pop    ebp
  401dbc:	stos   BYTE PTR es:[edi],al
  401dbd:	mov    eax,0xd2bfcd83
  401dc2:	mov    bl,0xc3
  401dc4:	inc    eax
  401dc5:	popf   
  401dc6:	fcomp  QWORD PTR [ebx+0x6b79d167]
  401dcc:	jae    0x401da9
  401dce:	iret   
  401dcf:	or     al,0xfd
  401dd1:	cmp    bh,BYTE PTR [edi]
  401dd3:	sub    al,BYTE PTR [ecx]
  401dd5:	pusha  
  401dd6:	arpl   WORD PTR [edi-0x7c],dx
  401dd9:	push   es
  401dda:	(bad)  
  401ddb:	sar    esp,cl
  401ddd:	aad    0x13
  401ddf:	jecxz  0x401e0e
  401de1:	pop    edx
  401de2:	scas   eax,DWORD PTR es:[edi]
  401de3:	inc    ebx
  401de4:	(bad)  
  401de5:	rcr    DWORD PTR [edx-0x77],cl
  401de8:	into   
  401de9:	jmp    0x401dca
  401deb:	fs stc 
  401ded:	and    eax,0x6498a962
  401df2:	repnz mov ebx,0x7db53294
  401df8:	jb     0x401e4b
  401dfa:	pop    ss
  401dfb:	inc    edx
  401dfc:	jae    0x401d7e
  401dfe:	mov    al,ds:0xf2db3655
  401e03:	or     eax,0x591f96c2
  401e08:	(bad)  
  401e0a:	aam    0x77
  401e0c:	jbe    0x401e88
  401e0e:	jnp    0x401e3d
  401e10:	or     esp,DWORD PTR [ecx-0x54a9d06b]
  401e16:	dec    eax
  401e17:	push   edx
  401e18:	data16 mov bl,BYTE PTR [di+0x22c4]
  401e1e:	stos   DWORD PTR es:[edi],eax
  401e1f:	mov    ch,0x34
  401e21:	call   0x33950123
  401e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e27:	xor    al,0x1c
  401e29:	pop    ebp
  401e2a:	in     eax,dx
  401e2b:	test   al,0xdc
  401e2d:	sbb    ah,dh
  401e2f:	xchg   ebx,eax
  401e30:	sub    DWORD PTR [edx+0x1],0x76cf526e
  401e37:	rol    DWORD PTR [edx+0x18dab166],cl
  401e3d:	xor    DWORD PTR [esi],eax
  401e3f:	pusha  
  401e40:	pop    ds
  401e41:	stc    
  401e42:	mov    dl,0x43
  401e44:	popfw  
  401e46:	dec    ecx
  401e47:	jno    0x401e64
  401e49:	mov    cs,WORD PTR [edx-0x16]
  401e4c:	fisttp QWORD PTR [ebx-0x65]
  401e4f:	cdq    
  401e50:	dec    edx
  401e51:	mov    esp,0x43aff69a
  401e56:	xchg   edx,eax
  401e57:	ins    BYTE PTR es:[edi],dx
  401e58:	ror    dh,cl
  401e5a:	(bad)  
  401e5b:	aas    
  401e5c:	sbb    ch,BYTE PTR [ecx-0x20]
  401e5f:	xor    DWORD PTR [ebx+eiz*4],edi
  401e62:	out    dx,al
  401e63:	test   BYTE PTR [edx+0x78],al
  401e66:	xchg   ebx,eax
  401e67:	pop    es
  401e68:	dec    ebx
  401e69:	lods   eax,DWORD PTR ds:[esi]
  401e6a:	lds    ebx,FWORD PTR [edx-0x4b507a77]
  401e70:	in     eax,0x2a
  401e72:	dec    ecx
  401e73:	in     al,dx
  401e74:	jg     0x401e68
  401e76:	int    0xb5
  401e78:	xchg   ebp,eax
  401e79:	mov    cs,WORD PTR [edx]
  401e7b:	sbb    eax,0x99128f8e
  401e80:	mov    ecx,DWORD PTR [edi]
  401e82:	xchg   ebx,eax
  401e83:	outs   dx,BYTE PTR ds:[esi]
  401e84:	repnz fmul st,st(1)
  401e87:	imul   DWORD PTR [ebx]
  401e89:	xchg   al,dl
  401e8b:	fs jae 0x401e84
  401e8e:	fnstenv [ebx-0x7cc83b6f]
  401e94:	icebp  
  401e95:	call   0x690293bd
  401e9a:	cmp    ecx,DWORD PTR [ecx-0x977dee4]
  401ea0:	pop    ds
  401ea1:	pusha  
  401ea2:	into   
  401ea3:	cli    
  401ea4:	mov    esi,0xe70199f8
  401ea9:	cmp    ah,bh
  401eab:	dec    ebx
  401eac:	jmp    0x401edd
  401eae:	(bad)  
  401eaf:	lods   al,BYTE PTR ds:[esi]
  401eb0:	rcl    DWORD PTR [edi+ebx*2+0x3b],cl
  401eb4:	aam    0xde
  401eb6:	pop    edi
  401eb7:	lahf   
  401eb8:	sti    
  401eb9:	jo     0x401e9e
  401ebb:	xchg   bl,dl
  401ebd:	jge    0x401e85
  401ebf:	mov    bl,0x4
  401ec1:	out    dx,al
  401ec2:	mov    ?,WORD PTR [eax]
  401ec4:	dec    edi
  401ec5:	xor    ch,dh
  401ec7:	mov    edx,0xa8434593
  401ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ecd:	ds leave 
  401ecf:	out    0xc2,al
  401ed1:	mov    esi,0xd8ea9448
  401ed6:	test   ebx,esp
  401ed8:	stos   DWORD PTR es:[edi],eax
  401ed9:	xchg   esi,eax
  401eda:	mov    edx,0xc807511e
  401edf:	sub    al,0xf6
  401ee1:	imul   esi,DWORD PTR [edi-0x60],0xeb3ccf73
  401ee8:	add    edi,DWORD PTR [ebp+esi*2+0x10]
  401eec:	(bad)  
  401eed:	shr    BYTE PTR [edx],cl
  401eef:	mov    esp,0xad2ba1fb
  401ef4:	call   0x668d:0xd11894f1
  401efb:	push   ss
  401efc:	popa   
  401efd:	(bad)  
  401efe:	ins    BYTE PTR es:[edi],dx
  401eff:	sub    DWORD PTR [edx+0x67],ecx
  401f02:	add    ecx,0xbf1a1fe9
  401f08:	mov    ch,0x42
  401f0a:	xor    DWORD PTR [ebx-0x55],esi
  401f0d:	add    al,0xc8
  401f0f:	cli    
  401f10:	mov    ?,edi
  401f12:	bound  ebp,QWORD PTR [edx-0x11]
  401f15:	imul   BYTE PTR ds:0xda1c0e53
  401f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f1c:	and    DWORD PTR [ebx],edi
  401f1e:	inc    ebx
  401f1f:	sti    
  401f20:	cdq    
  401f21:	jno    0x401eab
  401f23:	jbe    0x401f17
  401f25:	cmp    al,0x3f
  401f27:	pop    ecx
  401f28:	cmp    BYTE PTR [edx-0x1d],bl
  401f2b:	cdq    
  401f2c:	lahf   
  401f2d:	cmp    ecx,DWORD PTR [eax+0x7cccaa31]
  401f33:	sub    ecx,DWORD PTR [edi]
  401f35:	xchg   esi,eax
  401f36:	shl    dh,0xc7
  401f39:	cmp    eax,0xe84474cf
  401f3e:	gs and eax,0x849050e8
  401f44:	mov    eax,0x4d886d5d
  401f49:	pop    es
  401f4a:	call   0x6114acaf
  401f4f:	mov    dl,0x52
  401f51:	xchg   esi,eax
  401f52:	rcr    ch,1
  401f54:	repnz push cs
  401f56:	push   0xccc248cc
  401f5b:	cmp    al,0xd2
  401f5d:	pop    ss
  401f5e:	pop    es
  401f5f:	jno    0x401f87
  401f61:	in     eax,0xf9
  401f63:	mov    cl,0xa8
  401f65:	fsubr  DWORD PTR [edi]
  401f67:	mov    bl,0x14
  401f69:	das    
  401f6a:	in     al,dx
  401f6b:	mov    esi,0x3c87651d
  401f70:	dec    eax
  401f71:	stos   DWORD PTR es:[edi],eax
  401f72:	repnz cmp DWORD PTR [esi-0x29],esi
  401f76:	arpl   WORD PTR [ecx+0x56],ax
  401f79:	jge    0x401f40
  401f7b:	in     al,dx
  401f7c:	jle    0x401f2d
  401f7e:	outs   dx,BYTE PTR ds:[esi]
  401f7f:	hlt    
  401f80:	test   BYTE PTR [ebx-0x5413c8fd],al
  401f86:	inc    ecx
  401f87:	xchg   dh,ch
  401f89:	aas    
  401f8a:	xchg   ebp,eax
  401f8b:	sbb    dh,cl
  401f8d:	or     dh,BYTE PTR [edi+0x63]
  401f90:	xchg   esi,eax
  401f91:	push   esi
  401f92:	scas   al,BYTE PTR es:[edi]
  401f93:	jmp    0x401f1e
  401f95:	dec    edx
  401f96:	in     al,0x56
  401f98:	jne    0x401fac
  401f9a:	jecxz  0x401fb4
  401f9c:	mov    DWORD PTR [ebp-0x4fbc8175],ebp
  401fa2:	pop    eax
  401fa3:	pop    esi
  401fa4:	cmp    DWORD PTR [edi+0x74f72609],edi
  401faa:	test   al,0x55
  401fac:	sub    cl,ch
  401fae:	xchg   BYTE PTR [ecx+0x1e0e0115],dl
  401fb4:	into   
  401fb5:	push   esi
  401fb6:	jmp    0x12ad6a9b
  401fbb:	mov    dl,0x93
  401fbd:	sbb    cl,al
  401fbf:	mov    esi,0x6462667f
  401fc4:	mov    ds:0x8107c96a,eax
  401fc9:	xchg   ecx,eax
  401fca:	cmp    DWORD PTR [edi-0x69942ad5],eax
  401fd0:	cmp    al,0xef
  401fd2:	and    eax,0x771e0283
  401fd7:	pushf  
  401fd8:	aad    0x58
  401fda:	mov    ecx,0x676fac2
  401fdf:	sub    al,0x1f
  401fe1:	fnstsw WORD PTR cs:[ebx-0x29]
  401fe5:	mov    al,ds:0xc70abb83
  401fea:	and    ch,al
  401fec:	mov    eax,ds:0x53fd88be
  401ff1:	mov    esi,0x9acfcb03
  401ff6:	push   es
  401ff7:	pop    edi
  401ff8:	mov    ds:0x8982d19,al
  401ffd:	jbe    0x402077
  401fff:	in     eax,dx
  402000:	(bad)
  402004:	mov    edx,0x95cdcd9f
  402009:	dec    ecx
  40200a:	fadd   DWORD PTR [edi-0x87836eb]
  402010:	popa   
  402011:	lds    ebp,FWORD PTR [ebp-0x52]
  402014:	lods   al,BYTE PTR ds:[esi]
  402015:	aam    0x1f
  402017:	mov    eax,0x10366d31
  40201c:	sar    DWORD PTR [ebx+0x5a],cl
  40201f:	dec    esp
  402020:	fwait
  402021:	popf   
  402022:	and    edx,ebx
  402024:	and    BYTE PTR [esi+edi*1],dl
  402027:	cmp    ebx,DWORD PTR [esi-0x69]
  40202a:	xchg   esi,eax
  40202b:	xor    DWORD PTR [ebx+0x2453a4a2],esp
  402031:	outs   dx,BYTE PTR ds:[esi]
  402032:	aad    0x99
  402034:	inc    ebp
  402035:	adc    eax,0x5e982a79
  40203a:	sahf   
  40203b:	test   eax,0x6167cb94
  402040:	adc    eax,DWORD PTR [ebp+0x769dc02f]
  402046:	pop    ds
  402047:	ds xchg ebp,eax
  402049:	cmp    ebx,edx
  40204b:	pop    ebx
  40204c:	pop    ecx
  40204d:	leave  
  40204e:	scas   al,BYTE PTR es:[edi]
  40204f:	lahf   
  402050:	enter  0x4aec,0x81
  402054:	mov    dh,0x9e
  402056:	push   esp
  402057:	push   esp
  402058:	or     BYTE PTR [ebx+0x13ae9b0f],ch
  40205e:	dec    ebx
  40205f:	ret    0x4c57
  402062:	jl     0x4020c8
  402064:	pusha  
  402065:	push   ebp
  402066:	adc    eax,0xbdf08a67
  40206b:	les    ebp,FWORD PTR [esi]
  40206d:	mov    ebx,0x305a0d5d
  402072:	jmp    0x720907cb
  402077:	xchg   ebx,eax
  402078:	cmp    al,0x68
  40207a:	xor    edx,edx
  40207c:	shr    cl,1
  40207e:	shl    BYTE PTR ds:0x6ff1f89,cl
  402084:	jecxz  0x4020d9
  402086:	mov    esi,0xfaecc14d
  40208b:	or     bh,ah
  40208d:	call   0xc2ce:0x56a83975
  402094:	dec    edi
  402095:	and    ebx,esp
  402097:	neg    ebp
  402099:	push   ebp
  40209a:	call   0x878c8122
  40209f:	dec    esi
  4020a0:	inc    esp
  4020a1:	ret    
  4020a2:	mov    ebp,0x9cfe9c4
  4020a7:	stos   BYTE PTR es:[edi],al
  4020a8:	je     0x402128
  4020aa:	adc    DWORD PTR [edx],esp
  4020ac:	pop    edx
  4020ad:	jno    0x40205a
  4020af:	cmp    al,0x90
  4020b1:	sub    BYTE PTR [bp+di-0x17ec],ch
  4020b6:	adc    al,0x19
  4020b8:	out    0x14,al
  4020ba:	jge    0x4020ed
  4020bc:	dec    ebp
  4020bd:	nop
  4020be:	(bad)  
  4020bf:	icebp  
  4020c0:	add    esi,DWORD PTR [edx-0x30]
  4020c3:	pop    edx
  4020c4:	ret    0xfebd
  4020c7:	adc    dh,BYTE PTR [eax-0x3da7d095]
  4020cd:	aad    0x81
  4020cf:	fild   DWORD PTR [esi+0x40]
  4020d2:	lds    ebx,FWORD PTR [ecx+ebx*4-0x20]
  4020d6:	mov    ebp,0xa0661b3e
  4020db:	mov    bh,0xb
  4020dd:	ds in  al,dx
  4020df:	dec    esi
  4020e0:	icebp  
  4020e1:	adc    DWORD PTR [ebx],esp
  4020e3:	das    
  4020e4:	xchg   ebp,eax
  4020e5:	inc    ecx
  4020e6:	inc    ebx
  4020e7:	mov    dl,0xf9
  4020e9:	(bad)  
  4020eb:	retf   0x20d6
  4020ee:	lahf   
  4020ef:	xchg   ebp,eax
  4020f0:	push   0xffffff83
  4020f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020f3:	ins    DWORD PTR es:[edi],dx
  4020f4:	int    0x3c
  4020f6:	stos   DWORD PTR es:[edi],eax
  4020f7:	pop    eax
  4020f8:	dec    esi
  4020f9:	mov    bl,0x7d
  4020fb:	cdq    
  4020fc:	rcr    BYTE PTR [ecx+0x3ff190aa],cl
  402102:	add    edi,DWORD PTR [esi]
  402104:	popa   
  402105:	data16 shr BYTE PTR [ecx],0xff
  402109:	sbb    eax,0x68176b0c
  40210e:	int3   
  40210f:	fwait
  402110:	dec    esi
  402111:	sti    
  402112:	cmp    DWORD PTR [edi+ebx*4],edi
  402115:	sbb    DWORD PTR ds:0x9e354340,ebx
  40211b:	push   edx
  40211c:	lods   al,BYTE PTR ds:[esi]
  40211d:	fcmovnu st,st(5)
  40211f:	shr    DWORD PTR [edi-0x65131410],0x5c
  402126:	and    BYTE PTR [eax+0xb],ah
  402129:	leave  
  40212a:	and    eax,0x79f16a60
  40212f:	sub    edi,edi
  402131:	add    al,0xfa
  402133:	je     0x402110
  402135:	push   esi
  402136:	outs   dx,BYTE PTR ds:[esi]
  402137:	sti    
  402138:	int    0x5
  40213a:	bound  edi,QWORD PTR [ebx+0x6cab009c]
  402140:	rcl    dl,cl
  402142:	adc    esi,DWORD PTR [ebp-0x5aff4835]
  402148:	xchg   ecx,eax
  402149:	pop    ds
  40214a:	mov    ebp,0x331328c1
  40214f:	mov    ebp,0xda3101af
  402154:	add    al,0x34
  402156:	popf   
  402157:	sub    esp,DWORD PTR [edx+0x79]
  40215a:	pop    esi
  40215b:	inc    esi
  40215c:	(bad)  
  40215d:	xchg   ecx,eax
  40215e:	mov    ecx,0x406e8df2
  402163:	in     al,dx
  402164:	dec    eax
  402166:	call   0x9e47:0x67ab6aae
  40216d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40216e:	das    
  40216f:	(bad)  
  402171:	ror    BYTE PTR [ebx-0x59],cl
  402174:	jmp    0xcd353fb9
  402179:	add    al,0x22
  40217b:	sbb    bl,dh
  40217d:	(bad)  
  40217e:	and    DWORD PTR [ecx],eax
  402180:	fistp  DWORD PTR [ebx-0x5b]
  402183:	in     eax,0xb3
  402185:	sub    eax,0x6e73849e
  40218a:	xlat   BYTE PTR ds:[ebx]
  40218b:	mov    edi,0x3c845ad6
  402190:	pop    es
  402191:	jmp    0x7a99:0x90afdea
  402198:	jge    0x402192
  40219a:	mov    edi,0x24805183
  40219f:	cwde   
  4021a0:	dec    ecx
  4021a1:	ins    BYTE PTR es:[edi],dx
  4021a2:	dec    edx
  4021a3:	mov    dl,0x6a
  4021a5:	cmp    al,0x8d
  4021a7:	shl    DWORD PTR [eax+0x6b],cl
  4021aa:	retf   
  4021ab:	pop    ebx
  4021ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021ad:	and    BYTE PTR [ebp+0x7aa5a5b1],bh
  4021b3:	mov    ebx,?
  4021b5:	in     al,0x48
  4021b7:	stos   BYTE PTR es:[edi],al
  4021b8:	int    0x5d
  4021ba:	mov    edx,0xb707af40
  4021bf:	daa    
  4021c0:	and    al,0xa7
  4021c2:	sub    DWORD PTR ds:0xf994b217,edi
  4021c8:	enter  0x9871,0xaf
  4021cc:	or     ebx,DWORD PTR [esi+0x12]
  4021cf:	or     eax,0xec42e358
  4021d4:	xor    dh,ah
  4021d6:	push   ss
  4021d7:	daa    
  4021d8:	jl     0x4021e6
  4021da:	add    ch,BYTE PTR [ebp+0x27]
  4021dd:	xchg   BYTE PTR [edi-0x69],bl
  4021e0:	iret   
  4021e1:	cwde   
  4021e2:	pop    ds
  4021e3:	ins    BYTE PTR es:[edi],dx
  4021e4:	pusha  
  4021e5:	bnd jb 0x4021a1
  4021e8:	jmp    0xd8aa:0xcb7ac6d5
  4021ef:	sub    edx,esp
  4021f1:	pop    ds
  4021f2:	call   0x85646b94
  4021f7:	(bad)  
  4021f8:	mov    es,WORD PTR [edx]
  4021fa:	add    esp,DWORD PTR [ebx-0x2e]
  4021fd:	popa   
  4021fe:	jae    0x402232
  402200:	clc    
  402201:	or     BYTE PTR [eax-0x60038214],bl
  402207:	rcl    DWORD PTR [esi-0x1d],0x9
  40220b:	je     0x40219d
  40220d:	mov    ah,0x14
  40220f:	stos   BYTE PTR es:[edi],al
  402210:	sub    BYTE PTR [edx+0x65],bl
  402213:	or     DWORD PTR ss:[ecx-0x6],esi
  402217:	xchg   ebx,eax
  402218:	in     al,dx
  402219:	in     eax,0x9d
  40221b:	cmp    al,0x50
  40221d:	loopne 0x40228d
  40221f:	in     eax,dx
  402220:	mov    BYTE PTR [ebp-0x4a],dl
  402223:	jae    0x402283
  402225:	mov    edi,0xb41889f4
  40222a:	xor    DWORD PTR [ebp+0x32cd01b1],edx
  402230:	dec    ebp
  402231:	pop    esp
  402232:	or     BYTE PTR [esi+0x45d333fe],cl
  402238:	or     esp,eax
  40223a:	dec    ecx
  40223b:	mov    edi,0x71f5ca0e
  402240:	sub    eax,0x4fdcf8f6
  402245:	cmp    al,0x88
  402247:	popa   
  402248:	pop    edi
  402249:	into   
  40224a:	jae    0x402238
  40224c:	xor    ebx,esi
  40224e:	fcomp  QWORD PTR [edi]
  402250:	aad    0xfa
  402252:	pop    eax
  402253:	and    BYTE PTR [edx-0x72139e66],ah
  402259:	and    ebp,DWORD PTR [ebp-0x74de3646]
  40225f:	(bad)  
  402260:	out    0xfc,al
  402262:	(bad)  [ecx]
  402264:	push   esi
  402265:	stos   BYTE PTR es:[edi],al
  402266:	push   0xffffff90
  402268:	leave  
  402269:	or     ch,cl
  40226b:	add    eax,0x211b31ba
  402270:	fyl2xp1 
  402272:	arpl   WORD PTR [ebp-0x23],bp
  402275:	push   0x3d
  402277:	adc    cl,dh
  402279:	call   0x4372b003
  40227e:	adc    bl,bh
  402280:	pop    es
  402281:	(bad)  
  402282:	jmp    0x4022bb
  402284:	cli    
  402285:	neg    esi
  402287:	mov    ecx,0x90d003c4
  40228c:	cmp    BYTE PTR [ebx],ah
  40228e:	adc    DWORD PTR [ecx],esi
  402290:	fisubr DWORD PTR [edx]
  402292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402293:	pushf  
  402294:	int3   
  402295:	sub    bl,BYTE PTR ds:0xc9a592e7
  40229b:	stos   BYTE PTR es:[edi],al
  40229c:	mov    eax,0x37d62885
  4022a1:	fcomp  QWORD PTR [ecx+ebp*4]
  4022a4:	les    esi,FWORD PTR [ebx]
  4022a6:	add    esp,esi
  4022a8:	fs jb  0x402298
  4022ab:	push   esi
  4022ac:	cli    
  4022ad:	adc    ecx,DWORD PTR [edx+ebp*1-0xcee3039]
  4022b4:	jle    0x402306
  4022b6:	mov    esp,edi
  4022b8:	loop   0x402265
  4022ba:	mov    edi,0x8a2b0905
  4022bf:	addr16 nop
  4022c1:	adc    eax,0x6c5048d3
  4022c6:	or     edi,DWORD PTR [edi-0x3c]
  4022c9:	adc    BYTE PTR [ebp+esi*1-0xe],al
  4022cd:	out    0x6a,al
  4022cf:	mov    esp,0xc6dd46d0
  4022d4:	jge    0x4022ee
  4022d6:	in     al,dx
  4022d7:	xchg   ebx,eax
  4022d8:	dec    ebx
  4022d9:	mov    ch,0x9f
  4022db:	(bad)  
  4022dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022de:	out    0xcc,al
  4022e0:	fld    QWORD PTR [edi+0x24]
  4022e3:	sbb    ecx,ebx
  4022e5:	mul    DWORD PTR ds:0xafde7caf
  4022eb:	mov    eax,ds:0xf87186e
  4022f0:	push   ebx
  4022f1:	mov    ah,0x66
  4022f3:	repnz cmp cl,dl
  4022f6:	repz mov ch,dl
  4022f9:	pop    esi
  4022fa:	dec    ecx
  4022fb:	aam    0xc7
  4022fd:	push   es
  4022fe:	mov    ds:0xe5af0d63,al
  402303:	cmc    
  402304:	or     BYTE PTR [eax],ah
  402306:	xor    DWORD PTR [ecx],esi
  402308:	xor    DWORD PTR [eax+0x38583836],ebx
  40230e:	jg     0x402290
  402310:	jmp    0xec37:0xa19694c3
  402317:	icebp  
  402318:	cmp    esi,DWORD PTR [edi]
  40231a:	les    edi,FWORD PTR [edi+eiz*1]
  40231d:	icebp  
  40231e:	and    eax,0xc97facc4
  402323:	in     eax,dx
  402324:	jp     0x402346
  402326:	popa   
  402327:	retf   
  402328:	or     ch,al
  40232a:	jecxz  0x4022b9
  40232c:	or     esp,DWORD PTR ds:0xcf9059ea
  402332:	inc    ecx
  402333:	repnz cdq 
  402335:	add    al,0xac
  402337:	outs   dx,BYTE PTR ds:[esi]
  402338:	xor    DWORD PTR [eax-0x4588b90c],esi
  40233e:	adc    dl,bh
  402340:	or     BYTE PTR [edi],ch
  402342:	stos   DWORD PTR es:[edi],eax
  402343:	xor    DWORD PTR gs:[esi-0x53eb23db],ecx
  40234a:	popf   
  40234b:	sbb    eax,0xf5c3761c
  402350:	xchg   ecx,eax
  402351:	sbb    al,0x8f
  402353:	push   ecx
  402354:	add    dh,BYTE PTR [ebx-0x1f95d1f5]
  40235a:	in     eax,dx
  40235b:	in     eax,dx
  40235c:	sub    DWORD PTR [ecx+0x72],esi
  40235f:	js     0x402365
  402361:	test   al,0x65
  402363:	div    dh
  402365:	sbb    esp,DWORD PTR [ecx+0x6e]
  402368:	mov    eax,ds
  40236a:	push   ecx
  40236b:	aaa    
  40236c:	retf   
  40236d:	pop    esi
  40236e:	sub    al,al
  402370:	scas   al,BYTE PTR es:[edi]
  402371:	outs   dx,BYTE PTR ds:[esi]
  402372:	adc    al,0xbf
  402374:	mov    edx,DWORD PTR [edx+0x48]
  402377:	loop   0x402356
  402379:	ret    
  40237a:	mov    ebx,eax
  40237c:	jmp    0x245ea1f2
  402381:	sar    BYTE PTR [edx],0x9b
  402384:	(bad)  
  402385:	enter  0x91a5,0x38
  402389:	mov    ds,ecx
  40238b:	pop    es
  40238c:	int3   
  40238d:	cmp    eax,0xeb7a71eb
  402392:	lods   eax,DWORD PTR ds:[esi]
  402393:	adc    eax,0x6a1e446a
  402398:	imul   ecx,DWORD PTR [eax+ebx*8+0x3dd047ff],0xffffffb0
  4023a0:	add    eax,0x206b6bba
  4023a5:	add    BYTE PTR [edx+ebp*1],ch
  4023a8:	retf   
  4023a9:	jmp    0x40236d
  4023ab:	aas    
  4023ac:	cmp    DWORD PTR [si-0x73],eax
  4023b0:	or     al,0xbe
  4023b2:	inc    edx
  4023b3:	scas   eax,DWORD PTR es:[edi]
  4023b4:	jnp    0x4023e1
  4023b6:	pop    esp
  4023b7:	xchg   edi,eax
  4023b8:	ret    
  4023b9:	je     0x40235f
  4023bb:	add    BYTE PTR [edx],0xd3
  4023be:	(bad)
  4023c2:	push   ss
  4023c3:	push   0xffffffa3
  4023c5:	test   bl,dh
  4023c7:	jbe    0x402413
  4023c9:	les    edi,FWORD PTR [ecx-0x1a70718]
  4023cf:	xor    BYTE PTR [ecx-0x4d81b988],0xe
  4023d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d7:	aam    0xec
  4023d9:	leave  
  4023da:	out    0xb3,al
  4023dc:	xchg   ebx,eax
  4023dd:	out    dx,eax
  4023de:	mov    ch,BYTE PTR [si+0xee2]
  4023e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023e4:	in     eax,0xf1
  4023e6:	mov    BYTE PTR [ebp+0x4b],cl
  4023e9:	xchg   edi,eax
  4023ea:	sti    
  4023eb:	push   edx
  4023ec:	sahf   
  4023ed:	sub    ah,BYTE PTR [edi-0x1c9b6e35]
  4023f3:	pop    esi
  4023f4:	add    esp,edi
  4023f6:	mov    ds:0xeba3c58b,eax
  4023fb:	je     0x4023a7
  4023fd:	add    eax,0x9f99bc28
  402402:	inc    ecx
  402403:	imul   edx,DWORD PTR [ebx],0xc09b448e
  402409:	mov    eax,0x363026b1
  40240e:	jge    0x402434
  402410:	fwait
  402411:	jg     0x40244f
  402413:	sbb    al,0x51
  402415:	pop    ebp
  402416:	sub    bl,cl
  402418:	aad    0x8e
  40241a:	test   al,0xef
  40241c:	adc    BYTE PTR [eax-0x3a],ah
  40241f:	xchg   esp,eax
  402420:	adc    eax,0x9c050668
  402425:	sbb    ebx,ebx
  402427:	ins    BYTE PTR es:[edi],dx
  402428:	or     BYTE PTR [ebx+0x7a392973],ah
  40242e:	push   esp
  40242f:	ss stos BYTE PTR es:[edi],al
  402431:	vfmsub213sd xmm7{k5},xmm6,(bad)
  402432:	loop   0x402401
  402434:	pop    ebp
  402435:	stos   DWORD PTR es:[edi],eax
  402436:	mov    ecx,0xe92e599c
  40243b:	sbb    eax,0xf85b792b
  402440:	mov    BYTE PTR [ebx+0x63322f66],al
  402446:	out    0x55,eax
  402448:	out    0x21,eax
  40244a:	lods   eax,DWORD PTR ds:[esi]
  40244b:	cmp    eax,0x7f28b50f
  402450:	outs   dx,BYTE PTR ds:[esi]
  402451:	cld    
  402452:	jno    0x4024b8
  402454:	and    ebp,DWORD PTR [esi]
  402456:	jmp    0x40246f
  402458:	imul   edi,DWORD PTR [esp+ebx*4+0x5a],0x8f352daa
  402460:	adc    BYTE PTR [ebx],0xaf
  402463:	xchg   edx,eax
  402464:	cmp    ebx,ecx
  402466:	pop    esi
  402467:	pop    ss
  402468:	sbb    eax,DWORD PTR [ecx-0x2a]
  40246b:	mov    ch,0x14
  40246d:	xor    al,0x5a
  40246f:	in     al,0xa6
  402471:	mov    al,ds:0xf01d62e6
  402476:	and    al,0xc7
  402478:	xchg   ebx,eax
  402479:	dec    ebp
  40247a:	jmp    0x4024da
  40247c:	inc    ebx
  40247d:	inc    edx
  40247e:	icebp  
  40247f:	pusha  
  402480:	add    BYTE PTR [ebx+0x6da9a981],cl
  402486:	(bad)  
  402487:	out    dx,eax
  402488:	es fucomi st,st(2)
  40248b:	cwde   
  40248c:	sbb    cl,BYTE PTR [ecx+0x79]
  40248f:	outs   dx,DWORD PTR ds:[esi]
  402490:	xor    ebx,edx
  402492:	lods   eax,DWORD PTR ds:[esi]
  402493:	add    DWORD PTR [ecx-0x4d7a9bb4],ebp
  402499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40249a:	(bad)  
  40249b:	push   edi
  40249c:	or     DWORD PTR [edx+0x1b038966],eax
  4024a2:	xchg   edx,eax
  4024a3:	out    0xe8,al
  4024a5:	div    BYTE PTR [eax-0x28705eac]
  4024ab:	rol    ebx,0x45
  4024ae:	sbb    eax,esp
  4024b0:	pop    esp
  4024b1:	in     eax,0x40
  4024b3:	(bad)  
  4024b4:	ror    DWORD PTR [ebp+0x7f],cl
  4024b7:	xor    BYTE PTR ds:0x3fe19e0d,ah
  4024bd:	cs push ds
  4024bf:	jmp    0xc0cd:0xe94cab39
  4024c6:	xor    edx,DWORD PTR [edi-0x1c]
  4024c9:	(bad)  
  4024ca:	aas    
  4024cb:	leave  
  4024cc:	mov    bh,0x68
  4024ce:	js     0x402523
  4024d0:	call   0x7ef2:0x78de36a2
  4024d7:	out    0xa6,al
  4024d9:	sub    bl,BYTE PTR [edx-0x6ac6a725]
  4024df:	dec    esp
  4024e0:	ret    
  4024e1:	inc    esp
  4024e2:	mov    ch,0x21
  4024e4:	push   edi
  4024e5:	xchg   ebp,eax
  4024e6:	xchg   edx,eax
  4024e7:	add    dl,BYTE PTR [esi]
  4024e9:	add    eax,0xcc438293
  4024ee:	push   0x8d66f0e4
  4024f3:	int3   
  4024f4:	adc    al,0x7e
  4024f6:	mov    esp,0xc625a84
  4024fb:	push   ss
  4024fc:	mov    dl,0x9e
  4024fe:	or     eax,0x4153f0d4
  402503:	out    0xd8,eax
  402505:	mov    dh,0x42
  402507:	xlat   BYTE PTR ds:[ebx]
  402508:	and    ch,BYTE PTR [edi+0x44]
  40250b:	ds loopne 0x402565
  40250e:	mov    dh,BYTE PTR [ecx-0x7c7183f]
  402514:	mov    ds:0xd5d7ea50,eax
  402519:	(bad)  
  40251a:	mov    al,ds:0xd785ea7c
  40251f:	mov    es,WORD PTR [ebp-0x56]
  402522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402523:	mov    al,0x41
  402525:	mov    BYTE PTR [esi],0x69
  402528:	pushf  
  402529:	pop    ebx
  40252a:	aas    
  40252b:	in     al,dx
  40252c:	loop   0x4024df
  40252e:	iret   
  40252f:	dec    edi
  402530:	rcr    BYTE PTR [esi],0xa6
  402533:	sbb    al,0x2f
  402535:	dec    eax
  402536:	jns    0x4024d7
  402538:	(bad)  
  402539:	cmc    
  40253a:	jg     0x402553
  40253c:	(bad)  
  40253d:	jmp    0x53bf:0xa52854c4
  402544:	push   edi
  402545:	out    0x13,al
  402547:	pop    esp
  402548:	fsubr  QWORD PTR ds:0x8aace209
  40254e:	pop    es
  40254f:	popf   
  402550:	test   DWORD PTR [edi+eiz*2-0x3c2e60df],ebp
  402557:	lock scas al,BYTE PTR es:[edi]
  402559:	pop    ebx
  40255a:	mov    dh,0xa7
  40255c:	inc    edi
  40255d:	cli    
  40255e:	int3   
  40255f:	sub    cl,bh
  402561:	xor    esp,ebp
  402563:	xchg   esp,ecx
  402565:	xchg   edx,eax
  402566:	or     eax,0x5d76966c
  40256b:	je     0x402587
  40256d:	inc    eax
  40256e:	leave  
  40256f:	(bad)  
  402570:	repnz pop ecx
  402572:	aad    0x90
  402574:	in     eax,0xd2
  402576:	push   cs
  402577:	ds int 0x47
  40257a:	pop    edx
  40257b:	popa   
  40257c:	pusha  
  40257d:	adc    BYTE PTR [esi+0x2195ac50],0xe9
  402584:	jno    0x4025aa
  402586:	out    0x3a,eax
  402588:	mov    cl,0xc4
  40258a:	push   es
  40258b:	enter  0xf266,0x2d
  40258f:	mov    edx,0x23165561
  402594:	inc    ebx
  402595:	dec    ebp
  402596:	aas    
  402597:	cwde   
  402598:	adc    al,0x7e
  40259a:	adc    eax,DWORD PTR [esi+0x15]
  40259d:	jbe    0x4025ff
  40259f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025a0:	and    edx,eax
  4025a2:	mov    bh,0x39
  4025a4:	cmp    edi,esi
  4025a6:	jge    0x40252f
  4025a8:	mov    BYTE PTR [edi+0x1b990a41],al
  4025ae:	lahf   
  4025af:	repz mov al,0x76
  4025b2:	jg     0x40256b
  4025b4:	inc    esp
  4025b5:	sub    BYTE PTR [ebx-0x1ddfed86],ah
  4025bb:	mov    WORD PTR [ecx+0x64],cs
  4025be:	xchg   edx,eax
  4025bf:	mov    ebp,0x8b0e2634
  4025c4:	dec    edx
  4025c5:	push   eax
  4025c6:	jo     0x4025d3
  4025c8:	push   edi
  4025c9:	sbb    BYTE PTR [edi+edx*2+0x60],0xc3
  4025ce:	xchg   esp,eax
  4025cf:	xor    esp,DWORD PTR [edi-0x5b]
  4025d2:	(bad)  
  4025d3:	sbb    BYTE PTR [edx+eax*1+0x1fff7f4b],ah
  4025da:	in     al,0xbe
  4025dc:	and    dl,dl
  4025de:	xchg   BYTE PTR [ebp+0xfc8e642],dl
  4025e4:	add    DWORD PTR [edi+edx*8-0x3],esp
  4025e8:	rdpmc  
  4025ea:	pop    esp
  4025eb:	imul   ecx,DWORD PTR [esi-0x24d6da2c],0x72
  4025f2:	aas    
  4025f3:	xchg   ebp,eax
  4025f4:	mov    BYTE PTR [edx+0x125db976],0xbe
  4025fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025fc:	(bad)  
  4025fd:	sbb    al,0xc3
  4025ff:	fistp  WORD PTR [ebx+0x33]
  402602:	inc    ecx
  402603:	mov    dh,0xd2
  402605:	xlat   BYTE PTR ds:[ebx]
  402606:	popf   
  402607:	repz push ecx
  402609:	les    esp,FWORD PTR [ecx*2-0x7c66b3fd]
  402610:	push   esp
  402611:	loopne 0x402686
  402613:	dec    edi
  402614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402615:	out    dx,eax
  402616:	repz ret 
  402618:	jmp    DWORD PTR [ebp-0x64]
  40261b:	aaa    
  40261c:	pop    ds
  40261d:	mov    eax,ds:0x6316ec5e
  402622:	loopne 0x4025ff
  402624:	nop
  402625:	and    DWORD PTR [edi+0x39ab910b],esp
  40262b:	adc    al,0x8d
  40262d:	std    
  40262e:	pause  
  402630:	dec    esp
  402631:	xchg   ebx,eax
  402632:	mov    bl,0x30
  402634:	sub    bl,0x73
  402637:	es cmp eax,esi
  40263a:	xchg   esi,eax
  40263b:	push   ds
  40263c:	mov    WORD PTR [edx-0x40],fs
  40263f:	xchg   ecx,eax
  402640:	xchg   BYTE PTR [edi+0x63],bl
  402643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402644:	xchg   ebx,eax
  402645:	shl    BYTE PTR [eax+0x14],0x88
  402649:	lahf   
  40264a:	fnstsw WORD PTR [ecx+0x64]
  40264d:	jmp    0x4025e5
  40264f:	repz add al,0xa5
  402652:	mov    dh,0xdc
  402654:	(bad)  
  402655:	pushf  
  402656:	mov    eax,0x244e3dc8
  40265b:	aad    0x40
  40265d:	loopne 0x402616
  40265f:	jmp    0x739234db
  402664:	pop    es
  402665:	fcmovnbe st,st(1)
  402667:	out    dx,al
  402668:	test   BYTE PTR [edi-0x6e780d20],dh
  40266e:	arpl   bx,bx
  402670:	sub    DWORD PTR [esi+0x43],0xfffffff7
  402674:	jge    0x402640
  402676:	add    DWORD PTR [ebx-0x52d53cfd],eax
  40267c:	(bad)  
  40267d:	jl     0x4026bb
  40267f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402680:	cli    
  402681:	pop    ds
  402682:	mov    ebx,0xc5dd40e
  402687:	fist   DWORD PTR [ebp+0x7dff7b18]
  40268d:	push   es
  40268e:	push   ss
  40268f:	sub    eax,0xfb79f74d
  402694:	hlt    
  402695:	pop    fs
  402697:	aad    0x92
  402699:	(bad)  
  40269a:	cli    
  40269b:	sahf   
  40269c:	inc    edx
  40269d:	mov    ebp,0x7fb944f8
  4026a2:	loope  0x4026eb
  4026a4:	sbb    BYTE PTR [eax],0x62
  4026a7:	aad    0x30
  4026a9:	lock xlat BYTE PTR ds:[ebx]
  4026ab:	int3   
  4026ac:	pop    esp
  4026ad:	int3   
  4026ae:	push   es
  4026af:	retf   
  4026b0:	pop    ss
  4026b1:	and    al,0x5d
  4026b3:	mov    ebx,0x6bb6dcf9
  4026b8:	fs jmp 0x402676
  4026bb:	test   bl,dh
  4026bd:	stos   DWORD PTR es:[edi],eax
  4026be:	jb     0x402694
  4026c0:	xchg   esp,eax
  4026c1:	fcomp  DWORD PTR [edx-0x1030dba3]
  4026c7:	scas   al,BYTE PTR es:[edi]
  4026c8:	cdq    
  4026c9:	pushf  
  4026ca:	add    BYTE PTR [eax],0xc1
  4026cd:	loopne 0x4026a4
  4026cf:	mov    ebx,0xc5c8cfb1
  4026d4:	cmp    eax,0x5157acaf
  4026d9:	mov    ah,0x28
  4026db:	dec    eax
  4026dc:	cli    
  4026dd:	push   ecx
  4026de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026df:	test   DWORD PTR [ebp+0x2316a125],ebx
  4026e5:	xlat   BYTE PTR ds:[ebx]
  4026e6:	mov    DWORD PTR [ebp+esi*8+0x46],esi
  4026ea:	pop    ecx
  4026eb:	or     BYTE PTR [ebx-0x69],cl
  4026ee:	ror    DWORD PTR [eax],0x75
  4026f1:	fidiv  DWORD PTR [edi+0x5d]
  4026f4:	adc    ah,BYTE PTR [edx-0xc7aa634]
  4026fa:	ds inc ebx
  4026fc:	sub    eax,0x549bf88c
  402701:	sub    ah,BYTE PTR [eax+0x51aec416]
  402707:	lea    eax,[esi-0x6fdab3a6]
  40270d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40270e:	arpl   WORD PTR [ecx+eax*4-0x3e],bx
  402712:	push   ds
  402713:	push   esp
  402714:	fdiv   DWORD PTR [esi+0x40]
  402717:	add    eax,DWORD PTR [ecx-0x27b9fbbd]
  40271d:	and    DWORD PTR [eiz*2+0x3f15d389],edi
  402724:	repnz ss pop es
  402727:	pop    ebp
  402728:	lods   al,BYTE PTR ds:[esi]
  402729:	imul   BYTE PTR [eax+edx*2+0x79]
  40272d:	(bad)  
  40272e:	xor    eax,0x2256e18d
  402733:	(bad)  
  402734:	jmp    0x402724
  402736:	cld    
  402737:	stos   BYTE PTR es:[edi],al
  402738:	cmp    cl,dl
  40273a:	dec    edi
  40273b:	dec    ecx
  40273c:	sti    
  40273d:	adc    al,0xdc
  40273f:	cmp    al,0x9
  402741:	mov    ecx,edx
  402743:	rcr    DWORD PTR [edi],cl
  402745:	or     DWORD PTR [ecx-0x1944cd37],edx
  40274b:	inc    esi
  40274c:	rcl    BYTE PTR [esi+0x6],cl
  40274f:	dec    esi
  402750:	add    al,ah
  402752:	repz dec ebp
  402754:	ror    DWORD PTR [eax+0x5af91f29],1
  40275a:	sub    DWORD PTR [eax],edx
  40275c:	(bad)  
  40275d:	lds    esi,FWORD PTR [eax+0x71]
  402760:	mov    edx,0xb1905ac4
  402765:	ret    0xf9a7
  402768:	xchg   BYTE PTR [esi+ebx*4-0x1c],bh
  40276c:	jmp    0x4027c2
  40276e:	cmp    bh,BYTE PTR [esi+0x7b6d6a8a]
  402774:	xor    eax,0xa3da881b
  402779:	test   DWORD PTR [edx+0x2d13565f],ebp
  40277f:	xchg   ecx,eax
  402780:	and    DWORD PTR [edi],esp
  402782:	dec    eax
  402783:	cli    
  402784:	mov    cl,0xcb
  402786:	push   ebp
  402787:	loop   0x40272b
  402789:	mov    edi,0x2faa8c58
  40278e:	dec    DWORD PTR [ecx-0x54]
  402791:	repz jmp 0xb44ed6fe
  402797:	sub    cl,bl
  402799:	popf   
  40279a:	mov    esi,ss
  40279c:	aam    0xbf
  40279e:	sub    ebx,DWORD PTR [eax-0x66c8c907]
  4027a4:	xchg   ebx,eax
  4027a5:	sbb    al,0x6e
  4027a7:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4027a9:	cmp    BYTE PTR [edi-0x17895b47],cl
  4027af:	adc    al,0xf2
  4027b1:	inc    eax
  4027b2:	fwait
  4027b3:	sub    al,0xf5
  4027b5:	mov    al,0xfc
  4027b7:	mov    dl,bh
  4027b9:	popa   
  4027ba:	adc    eax,0x343c907d
  4027bf:	lods   al,BYTE PTR ds:[esi]
  4027c0:	mov    ecx,0x2ad43ee6
  4027c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027c6:	fisubr DWORD PTR [esp+eax*2+0x1e]
  4027ca:	jg     0x402817
  4027cc:	cmp    bl,BYTE PTR [eax-0x50]
  4027cf:	jecxz  0x4027f4
  4027d1:	je     0x402802
  4027d3:	or     dh,dl
  4027d5:	mov    bl,0xb8
  4027d7:	and    BYTE PTR [eax-0x58],bh
  4027da:	shl    BYTE PTR [ebx+ebp*2-0x7d5b5cb0],1
  4027e1:	and    ecx,esp
  4027e3:	sbb    edx,eax
  4027e5:	fwait
  4027e6:	bnd jle 0x4027bc
  4027e9:	call   0xf2a1:0x42ae0546
  4027f0:	push   0xf4ad8e3b
  4027f5:	xor    BYTE PTR [edi],cl
  4027f7:	clc    
  4027f8:	loope  0x402787
  4027fa:	and    al,0xe5
  4027fc:	sub    al,0x44
  4027fe:	pop    eax
  4027ff:	jnp    0x4027e5
  402801:	fdiv   QWORD PTR [eax]
  402803:	xor    BYTE PTR [ebx],dl
  402805:	mov    ch,0x3b
  402807:	popa   
  402808:	ret    0xf5d2
  40280b:	cs in  al,0x9e
  40280e:	adc    ebx,DWORD PTR [ebx+0x7b93b490]
  402814:	dec    edx
  402815:	clc    
  402816:	inc    esi
  402817:	(bad)  
  402818:	int    0xd9
  40281a:	pop    es
  40281b:	xchg   edx,eax
  40281c:	mov    ds:0x42565a44,al
  402821:	sub    al,0xcd
  402823:	int    0x54
  402825:	push   ebx
  402826:	ins    BYTE PTR es:[edi],dx
  402827:	in     al,0x4f
  402829:	xchg   edx,eax
  40282a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40282b:	xchg   ebp,eax
  40282c:	test   eax,0xfaf89e96
  402831:	sub    eax,0x4ea187cc
  402836:	mov    esi,esi
  402838:	mov    ecx,0x5ca48096
  40283d:	out    dx,al
  40283e:	sahf   
  40283f:	push   DWORD PTR [ecx]
  402841:	inc    ecx
  402842:	mov    bl,0xef
  402844:	popa   
  402845:	(bad)  
  402847:	inc    eax
  402848:	xchg   ebp,eax
  402849:	mov    edi,0xa12e2034
  40284e:	fidivr DWORD PTR [edi]
  402850:	scas   al,BYTE PTR es:[edi]
  402851:	dec    eax
  402852:	jge    0x4028be
  402854:	xor    edx,DWORD PTR [edi]
  402856:	sbb    bh,cl
  402858:	xor    DWORD PTR [edi-0x20c000e3],0x7d2f5975
  402862:	imul   esp,DWORD PTR [edx],0x26
  402865:	sar    BYTE PTR [ecx+0x58bad93a],cl
  40286b:	into   
  40286c:	out    dx,eax
  40286d:	pop    es
  40286e:	int    0x8f
  402870:	add    eax,0xcf447589
  402875:	mov    dh,0xd0
  402877:	xchg   ebp,eax
  402878:	sbb    BYTE PTR [edx],dl
  40287a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40287b:	or     DWORD PTR [eax+0x7687d43a],0xffffffe6
  402882:	retf   
  402883:	pop    ebp
  402884:	mov    al,0xe0
  402886:	das    
  402887:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  402889:	or     DWORD PTR [ebx],eax
  40288b:	add    ah,BYTE PTR [ebx-0x5f178eab]
  402891:	jo     0x402854
  402893:	push   eax
  402894:	out    dx,eax
  402895:	ds ja  0x4028a4
  402898:	jmp    0x4028d7
  40289a:	sti    
  40289b:	cmp    DWORD PTR [bx],ebp
  40289e:	ins    BYTE PTR es:[edi],dx
  40289f:	aas    
  4028a0:	out    0xfb,al
  4028a2:	mov    bh,0xe4
  4028a4:	mov    al,ds:0x7d449b5d
  4028a9:	adc    al,0x0
  4028ab:	inc    edi
  4028ac:	cdq    
  4028ad:	sub    bl,BYTE PTR [edi+0x268f7301]
  4028b3:	loopne 0x40292a
  4028b5:	dec    esp
  4028b6:	mov    edi,0x4531d7cf
  4028bb:	repz add al,0x0
  4028be:	repnz mov dl,0x39
  4028c1:	adc    eax,0xcf26a4ea
  4028c6:	dec    ebx
  4028c7:	sbb    ah,BYTE PTR [ebx-0x76a21b8f]
  4028cd:	out    dx,al
  4028ce:	and    dl,BYTE PTR [eax-0x6a]
  4028d1:	cmp    DWORD PTR [ecx+ebp*8-0x5e1e1327],esp
  4028d8:	retf   
  4028d9:	jge    0x402905
  4028db:	pop    ecx
  4028dc:	dec    esi
  4028dd:	dec    ebx
  4028de:	xchg   ebp,eax
  4028df:	push   es
  4028e0:	aam    0x1b
  4028e2:	push   cs
  4028e3:	mov    BYTE PTR [ecx],dl
  4028e5:	(bad)  [esi+esi*4+0x7b]
  4028e9:	mov    ebx,0x15abf39a
  4028ee:	in     eax,dx
  4028ef:	sahf   
  4028f0:	jle    0x4028e2
  4028f2:	sub    DWORD PTR [edi+0x54c09a20],esp
  4028f8:	xor    DWORD PTR [edx+esi*4+0x2d],edx
  4028fc:	outs   dx,DWORD PTR ds:[esi]
  4028fd:	adc    ebp,eax
  4028ff:	sub    ebp,DWORD PTR [ebp+0x65b04800]
  402905:	mov    al,ds:0x4632107
  40290a:	pop    edi
  40290b:	test   DWORD PTR [ebx],esi
  40290d:	fisttp WORD PTR [ebx-0x59d39c06]
  402913:	xor    dh,0x36
  402916:	cmp    al,0x17
  402918:	or     al,0x8f
  40291a:	int3   
  40291b:	(bad)  [esi+ecx*2+0x4f02ebe8]
  402922:	add    DWORD PTR [ecx-0x95098f7],0x7c
  402929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40292a:	add    al,0xbf
  40292c:	retf   
  40292d:	out    dx,al
  40292e:	dec    edx
  40292f:	fwait
  402930:	mov    esi,edx
  402932:	dec    edi
  402933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402934:	or     eax,0xd6d12587
  402939:	and    BYTE PTR [ebx+0x5b40efe2],bl
  40293f:	cs lahf 
  402941:	pop    eax
  402942:	jecxz  0x40294a
  402944:	push   eax
  402945:	fwait
  402946:	add    eax,0xecc7aeb6
  40294b:	cmp    BYTE PTR [esi+edx*2+0x61],ah
  40294f:	iret   
  402950:	mov    ebp,0x515e2085
  402955:	and    al,0x73
  402957:	in     eax,0x28
  402959:	adc    DWORD PTR [ebx+0x3268b0ce],eax
  40295f:	stos   DWORD PTR es:[edi],eax
  402960:	popa   
  402961:	mov    al,0xa2
  402963:	xor    esp,ebx
  402965:	pop    ebx
  402966:	and    ebx,esi
  402968:	dec    esp
  402969:	popa   
  40296a:	in     al,dx
  40296b:	std    
  40296c:	xchg   edx,eax
  40296d:	cld    
  40296e:	jns    0x402919
  402970:	nop
  402971:	arpl   bx,di
  402973:	sar    BYTE PTR [ecx+ecx*1+0x51],0x3d
  402978:	jns    0x40293a
  40297a:	mul    BYTE PTR [esi-0x30]
  40297d:	push   edx
  40297e:	pusha  
  40297f:	retf   0x1490
  402982:	inc    ebp
  402983:	cmp    ebx,edx
  402985:	call   0xec46:0xb9241349
  40298c:	adc    DWORD PTR [eax-0x55e8b8ad],esi
  402992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402993:	nop
  402994:	mov    ebx,0xca7575e9
  402999:	nop
  40299a:	xchg   edi,eax
  40299b:	adc    bh,BYTE PTR [edi]
  40299d:	out    0x32,eax
  40299f:	int    0x31
  4029a1:	fimul  DWORD PTR [edx+0x11]
  4029a4:	test   al,0xbd
  4029a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029a8:	jmp    0xf205:0x823ca812
  4029af:	les    esp,FWORD PTR [eax-0x271104a0]
  4029b5:	dec    ebx
  4029b6:	addr16 mov al,0x2e
  4029b9:	leave  
  4029ba:	ins    DWORD PTR es:[edi],dx
  4029bb:	xlat   BYTE PTR ds:[ebx]
  4029bc:	imul   esi,esp,0x96a8682f
  4029c2:	test   al,0x9e
  4029c4:	mov    ecx,0x568f54b9
  4029c9:	clc    
  4029ca:	test   al,0x9f
  4029cc:	out    dx,al
  4029cd:	mov    al,ds:0xdbca6899
  4029d2:	(bad)  
  4029d3:	shl    DWORD PTR [ebp-0x326bb3eb],1
  4029d9:	aad    0x73
  4029db:	xchg   edi,eax
  4029dc:	retf   0x9e44
  4029df:	pop    es
  4029e0:	je     0x402980
  4029e2:	sub    bl,BYTE PTR [ecx+0xcdc6042]
  4029e8:	sbb    eax,0x4bf63fb0
  4029ed:	sahf   
  4029ee:	gs js  0x4029e1
  4029f1:	jle    0x402a57
  4029f3:	mov    DWORD PTR [eax],0xbb3092a2
  4029f9:	shl    ecx,1
  4029fb:	sbb    al,bh
  4029fd:	xor    eax,0x4896a1dd
  402a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a03:	call   0xfa82:0x8007a223
  402a0a:	dec    ebx
  402a0b:	into   
  402a0c:	adc    eax,0x58
  402a0f:	sti    
  402a10:	mov    dl,0x82
  402a12:	sbb    edx,DWORD PTR [ebp-0x7]
  402a15:	add    DWORD PTR [ebx+edx*1],0xf2ad7a10
  402a1c:	mov    ch,0x54
  402a1e:	loopne 0x402a7b
  402a20:	adc    eax,0xb8bbf311
  402a25:	pushf  
  402a26:	fiadd  WORD PTR [edx-0x67b42eb4]
  402a2c:	dec    esi
  402a2d:	in     eax,dx
  402a2e:	fmulp  st(1),st
  402a30:	shr    DWORD PTR [ebp+0x70],cl
  402a33:	dec    eax
  402a34:	cmp    DWORD PTR [ebp+0x27],ebp
  402a37:	inc    ebx
  402a38:	adc    al,0xde
  402a3a:	lods   al,BYTE PTR ds:[esi]
  402a3b:	jecxz  0x402a60
  402a3d:	jmp    0x2f085a00
  402a42:	xchg   ebx,edx
  402a44:	fstp   TBYTE PTR [edi-0x2]
  402a47:	push   ebp
  402a48:	retf   
  402a49:	jmp    0x402a1c
  402a4b:	shl    dl,1
  402a4d:	dec    esp
  402a4e:	lea    ebp,ds:0x6c841637
  402a54:	scas   eax,DWORD PTR es:[edi]
  402a55:	or     DWORD PTR [edx+0x9],eax
  402a58:	out    dx,al
  402a59:	es push esp
  402a5b:	fild   DWORD PTR [edi-0x49]
  402a5e:	repz inc BYTE PTR gs:[edi+esi*4]
  402a63:	and    BYTE PTR [eax],bl
  402a65:	pop    esp
  402a66:	mov    dl,0xeb
  402a68:	push   0x44
  402a6a:	mov    bl,0xc4
  402a6c:	mov    bl,0xb7
  402a6e:	outs   dx,BYTE PTR ds:[esi]
  402a6f:	and    DWORD PTR [ecx-0x61],edx
  402a72:	add    DWORD PTR fs:[ebx+ebp*4-0x55],edx
  402a77:	or     BYTE PTR [eax],ch
  402a79:	test   eax,0x325c2550
  402a7e:	xor    bh,ch
  402a80:	sub    BYTE PTR [esi],dh
  402a82:	ss pop ecx
  402a84:	popa   
  402a85:	adc    eax,0x90e8794a
  402a8a:	out    dx,eax
  402a8b:	das    
  402a8c:	fsubrp st(1),st
  402a8e:	mov    ds:0x6df4686d,eax
  402a93:	fsubp  st(3),st
  402a95:	and    al,0x2a
  402a97:	test   BYTE PTR [edx],0xae
  402a9a:	test   BYTE PTR [ebp-0x5e604d9b],0xd4
  402aa1:	(bad)  
  402aa2:	call   0x529416ed
  402aa7:	in     al,0xe1
  402aa9:	push   ebp
  402aaa:	or     edi,DWORD PTR [ebx-0x4d980ad8]
  402ab0:	imul   ebp,ebp,0xcd80c281
  402ab6:	pusha  
  402ab7:	lds    ecx,FWORD PTR [esi+0x1c3cbef]
  402abd:	stc    
  402abe:	push   0xb0db8a8f
  402ac3:	or     BYTE PTR [edi],dl
  402ac5:	dec    ebx
  402ac6:	(bad)  
  402ac7:	jmp    0xefb3e9e8
  402acc:	add    BYTE PTR [eax-0x1bf94fb3],dl
  402ad2:	fs (bad) 
  402ad4:	js     0x402a6b
  402ad6:	add    dl,BYTE PTR [ebp-0x16779f75]
  402adc:	pushf  
  402add:	fimul  DWORD PTR [ebx]
  402adf:	mov    edx,0xea592c58
  402ae4:	lahf   
  402ae5:	cwde   
  402ae6:	mov    bh,0x54
  402ae8:	mov    dl,0x95
  402aea:	int    0x94
  402aec:	xchg   edi,eax
  402aed:	cdq    
  402aee:	loope  0x402b5d
  402af0:	mov    cl,0x78
  402af2:	scas   al,BYTE PTR es:[edi]
  402af3:	adc    al,0xee
  402af5:	imul   DWORD PTR [edx+0x57]
  402af8:	lahf   
  402af9:	dec    esp
  402afa:	aaa    
  402afb:	inc    ecx
  402afc:	es dec ebp
  402afe:	push   ebp
  402aff:	push   esp
  402b00:	fwait
  402b01:	jae    0x402b48
  402b03:	das    
  402b04:	cdq    
  402b05:	outs   dx,DWORD PTR ds:[esi]
  402b06:	fild   WORD PTR [ecx]
  402b08:	xor    DWORD PTR [edi-0x40],eax
  402b0b:	fiadd  WORD PTR ds:0x649ee29d
  402b11:	(bad)  [edx+0x2f17442e]
  402b17:	add    BYTE PTR [ebx+0x3f],bh
  402b1a:	les    ebx,FWORD PTR [esi-0x59c28f75]
  402b20:	mov    ebx,0x73f657c
  402b25:	lds    ecx,FWORD PTR [edx+0x6293a19c]
  402b2b:	pop    esp
  402b2c:	call   0x64f:0xea8cdac5
  402b33:	and    BYTE PTR [esi],ah
  402b35:	adc    DWORD PTR [esi+0x4212fd85],ebp
  402b3b:	sub    DWORD PTR [ecx-0x1b],ecx
  402b3e:	push   ecx
  402b3f:	or     ecx,esi
  402b41:	jmp    0x402af1
  402b43:	xchg   bl,ah
  402b45:	pop    edx
  402b46:	fwait
  402b47:	fs mov eax,cs:0x491a4eb6
  402b4e:	repnz xchg esp,eax
  402b50:	add    eax,0x39264a24
  402b55:	inc    edi
  402b56:	ins    DWORD PTR es:[edi],dx
  402b57:	fidiv  DWORD PTR [edx-0x7deb7cfb]
  402b5d:	add    ebp,DWORD PTR [esi-0x3830d600]
  402b63:	stc    
  402b64:	cmp    ah,BYTE PTR [ecx+0xf5e3c8f]
  402b6a:	push   0xa9c7913d
  402b6f:	nop
  402b70:	xchg   ebp,eax
  402b71:	adc    DWORD PTR [ebx],esi
  402b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b74:	mov    bl,0xcc
  402b76:	(bad)  
  402b77:	shl    dh,cl
  402b79:	or     edx,DWORD PTR [edx-0x37bc2e7b]
  402b7f:	cmp    DWORD PTR [edx+0x16],ecx
  402b82:	push   ecx
  402b83:	sbb    edx,DWORD PTR [ebx]
  402b85:	cli    
  402b86:	retf   0x7d5f
  402b89:	in     al,dx
  402b8a:	xchg   ebp,eax
  402b8b:	icebp  
  402b8c:	repnz sbb DWORD PTR [edi],ebx
  402b8f:	imul   ecx,DWORD PTR [ebx-0x979913a],0xffffffed
  402b96:	adc    DWORD PTR [ebx+ebx*2+0x13],edx
  402b9a:	dec    ecx
  402b9b:	arpl   WORD PTR [ebp+0x50],dx
  402b9e:	push   0x57
  402ba0:	imul   ebx,DWORD PTR [edi],0x4d88aead
  402ba6:	addr16 push cs
  402ba8:	xor    DWORD PTR [esi+0x656f4ec0],edi
  402bae:	sub    eax,0x2adee8f2
  402bb3:	shl    al,cl
  402bb5:	adc    eax,0x8fb839b6
  402bba:	inc    ecx
  402bbb:	fmul   st,st(7)
  402bbd:	test   al,0x20
  402bbf:	nop
  402bc0:	push   0xf410767d
  402bc5:	rol    BYTE PTR [edi+0x17],cl
  402bc8:	jae    0x402b88
  402bca:	pushf  
  402bcb:	mov    bl,0x89
  402bcd:	jo     0x402ba7
  402bcf:	mov    edi,0xdedb529d
  402bd4:	push   ds
  402bd5:	outs   dx,BYTE PTR ds:[esi]
  402bd6:	je     0x402c52
  402bd8:	jp     0x402bf7
  402bda:	and    DWORD PTR [edi-0x47939175],eax
  402be0:	pusha  
  402be1:	in     al,0xcb
  402be3:	shl    BYTE PTR [edx],1
  402be5:	xor    esi,DWORD PTR [ecx+0x51]
  402be8:	dec    esi
  402be9:	push   ss
  402bea:	mov    dh,0xfb
  402bec:	mov    WORD PTR [ebx],cs
  402bee:	test   DWORD PTR [ecx+esi*8+0x2d2a0657],eax
  402bf5:	(bad)  
  402bf6:	and    esi,DWORD PTR [ecx]
  402bf8:	push   eax
  402bf9:	outs   dx,DWORD PTR ds:[esi]
  402bfa:	ins    BYTE PTR es:[edi],dx
  402bfb:	nop
  402bfc:	push   edx
  402bfd:	repnz add edx,DWORD PTR ds:0x8132c1bb
  402c04:	mov    al,0x59
  402c06:	gs mov eax,0xe1229bfc
  402c0c:	icebp  
  402c0d:	push   esi
  402c0e:	mov    ds:0x9f6b7402,al
  402c13:	shl    bh,1
  402c15:	jp     0x402bb1
  402c17:	jmp    0x90a4:0xab4d7986
  402c1e:	test   eax,eax
  402c20:	or     eax,0xbe6c54b5
  402c25:	out    dx,eax
  402c26:	test   DWORD PTR [eax],esp
  402c28:	inc    esp
  402c29:	push   eax
  402c2a:	dec    esi
  402c2b:	add    dh,BYTE PTR [ebp-0x7b18b12e]
  402c31:	loope  0x402c4c
  402c33:	imul   ebx,DWORD PTR [esi],0x685119dc
  402c39:	jo     0x402c91
  402c3b:	mov    ebp,0x6c939baf
  402c40:	lods   al,BYTE PTR ds:[esi]
  402c41:	cdq    
  402c42:	pop    edi
  402c43:	(bad)  
  402c44:	mov    esp,0x145a4f1d
  402c49:	daa    
  402c4a:	mov    esi,0x76f52a4e
  402c4f:	sahf   
  402c50:	int    0x3e
  402c52:	ret    
  402c53:	enter  0x4730,0x89
  402c57:	or     BYTE PTR ds:0xe72e3e26,bl
  402c5d:	ins    BYTE PTR es:[edi],dx
  402c5e:	imul   BYTE PTR [esi+0x4bf4ddc]
  402c64:	sti    
  402c65:	jno    0x402cd4
  402c67:	rcr    BYTE PTR [esp+ebx*2+0x4],0x39
  402c6c:	fadd   DWORD PTR [edx+0x39]
  402c6f:	xchg   edx,eax
  402c70:	mov    edx,edi
  402c72:	adc    al,0xb6
  402c74:	inc    eax
  402c75:	scas   al,BYTE PTR es:[edi]
  402c76:	scas   eax,DWORD PTR es:[edi]
  402c77:	out    0x73,al
  402c79:	add    ch,BYTE PTR [edi+0x67]
  402c7c:	cli    
  402c7d:	xor    BYTE PTR [edi+0x76],bh
  402c80:	fmul   QWORD PTR [esi+0x57c3286e]
  402c86:	clc    
  402c87:	jae    0x402c80
  402c89:	cli    
  402c8a:	inc    edi
  402c8b:	call   0x91d18890
  402c90:	xor    al,0x12
  402c92:	xchg   ecx,eax
  402c93:	aad    0xc5
  402c95:	push   ss
  402c96:	pop    eax
  402c97:	aaa    
  402c98:	push   ss
  402c99:	mov    WORD PTR [edx+0x2990e41a],?
  402c9f:	xchg   BYTE PTR [edx-0x1fb58b59],ch
  402ca5:	call   0x82c9:0x3d9aa208
  402cac:	fsub   DWORD PTR [ecx+0x3]
  402caf:	arpl   WORD PTR [ebp+0x72],di
  402cb2:	or     al,0x88
  402cb4:	jb     0x402cce
  402cb6:	cwde   
  402cb7:	sub    bl,BYTE PTR [edx]
  402cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cba:	or     eax,0x1aba4510
  402cbf:	inc    esp
  402cc0:	inc    edi
  402cc1:	mov    esp,0x5f15df1b
  402cc6:	xchg   esp,eax
  402cc7:	ins    BYTE PTR es:[edi],dx
  402cc8:	cmp    al,0x5b
  402cca:	mov    ah,0x35
  402ccc:	sti    
  402ccd:	mov    bl,0xaa
  402ccf:	jg     0x402d08
  402cd1:	shl    DWORD PTR [eax+0x46],cl
  402cd4:	aas    
  402cd5:	pop    esp
  402cd6:	(bad)  
  402cd7:	(bad)  
  402cd8:	shr    BYTE PTR ds:0xeebda222,0x94
  402cdf:	xor    DWORD PTR [eax],ebx
  402ce1:	das    
  402ce2:	xor    BYTE PTR [edx+0x44],cl
  402ce5:	pop    esi
  402ce6:	cwde   
  402ce7:	dec    esp
  402ce8:	lods   al,BYTE PTR ds:[esi]
  402ce9:	leave  
  402cea:	cmovbe esi,DWORD PTR [ebx]
  402ced:	sub    BYTE PTR [ecx+0x1f5e097a],0x4e
  402cf4:	or     DWORD PTR [esi+0x14],edi
  402cf7:	or     eax,0xc2af448e
  402cfc:	test   bh,bl
  402cfe:	add    DWORD PTR [esi-0x64],0xffffffd0
  402d02:	imul   esi,DWORD PTR [edx+esi*2-0x13]
  402d07:	pusha  
  402d08:	jo     0x402ca1
  402d0a:	pop    eax
  402d0b:	dec    esp
  402d0c:	or     dl,BYTE PTR [ebp-0x46e07ee7]
  402d12:	add    al,0xb
  402d14:	mov    esp,0x66a07fa4
  402d19:	in     al,0xf4
  402d1b:	ja     0x402caf
  402d1d:	div    ah
  402d1f:	mov    ch,0x1e
  402d21:	es fs int3 
  402d24:	sbb    esi,ebp
  402d26:	cli    
  402d27:	add    al,0x89
  402d29:	test   ebp,0x2780944f
  402d2f:	pushf  
  402d30:	and    eax,0xed19d9a8
  402d35:	loope  0x402ceb
  402d37:	mov    edi,0xa472a95a
  402d3c:	fwait
  402d3d:	(bad)  
  402d3e:	push   ss
  402d3f:	clc    
  402d40:	jmp    0x402d84
  402d42:	es cmc 
  402d44:	cmp    ah,ah
  402d46:	add    BYTE PTR [ecx],cl
  402d48:	or     ebx,eax
  402d4a:	lea    ecx,[ebp-0x67]
  402d4d:	xor    BYTE PTR [edx],0xf2
  402d50:	adc    eax,esi
  402d52:	mov    fs,WORD PTR [ebx+0x770815c8]
  402d58:	fidivr DWORD PTR [eax+0x3fbfee47]
  402d5e:	sti    
  402d5f:	mov    ds,eax
  402d61:	outs   dx,BYTE PTR ds:[esi]
  402d62:	sub    DWORD PTR [ebx-0x3d3da42e],ecx
  402d68:	mov    ebp,0xe55389a3
  402d6d:	dec    edx
  402d6e:	jmp    0x402d64
  402d70:	cmp    DWORD PTR [edi+0x43],edi
  402d73:	daa    
  402d74:	sahf   
  402d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d76:	ja     0x402dd9
  402d78:	sub    eax,0x8be2080b
  402d7d:	push   edx
  402d7e:	or     ecx,ebp
  402d80:	mov    ds:0x3dc3fa42,eax
  402d85:	mov    DWORD PTR [eax+ecx*1-0x47152d82],ebp
  402d8c:	jno    0x402df8
  402d8e:	ins    DWORD PTR es:[edi],dx
  402d8f:	daa    
  402d90:	mov    edi,0x9598947e
  402d95:	jne    0x402e09
  402d97:	pop    esp
  402d98:	repz fdiv QWORD PTR ds:0x7a4f2af5
  402d9f:	repnz xlat BYTE PTR ds:[ebx]
  402da1:	adc    al,0x4e
  402da3:	dec    esi
  402da4:	xchg   edx,eax
  402da5:	int    0x42
  402da7:	pop    ss
  402da8:	sbb    edi,DWORD PTR [ecx+0x5b]
  402dab:	adc    al,bh
  402dad:	mov    ah,0x3e
  402daf:	mov    bl,0x6f
  402db1:	ja     0x402dab
  402db3:	add    BYTE PTR [ebx-0x45],bh
  402db6:	add    bh,BYTE PTR [eax+0x65a72522]
  402dbc:	in     al,0x3a
  402dbe:	push   0x20950c78
  402dc3:	add    al,0xdf
  402dc5:	inc    ebx
  402dc6:	fist   DWORD PTR ds:[edi-0x197b84bc]
  402dcd:	push   ss
  402dce:	push   eax
  402dcf:	xchg   esp,eax
  402dd0:	xchg   edx,eax
  402dd1:	in     eax,dx
  402dd2:	ins    BYTE PTR es:[edi],dx
  402dd3:	in     eax,dx
  402dd4:	(bad)  
  402dd5:	mov    dl,0xe9
  402dd7:	adc    edx,esp
  402dd9:	mov    eax,0x282fc132
  402dde:	adc    al,0xda
  402de0:	mov    esi,0xc5ce941e
  402de5:	out    0xf2,eax
  402de7:	test   ebp,edi
  402de9:	rcl    DWORD PTR [edx-0x136ec626],0xce
  402df0:	je     0x402e22
  402df2:	aaa    
  402df3:	fcomp  DWORD PTR [eax+0x9]
  402df6:	into   
  402df7:	mov    ebx,DWORD PTR ds:0x2ab46123
  402dfd:	dec    edx
  402dfe:	pop    ds
  402dff:	dec    edx
  402e00:	push   0xf775d54c
  402e05:	push   edi
  402e06:	test   edx,ebp
  402e08:	ret    
  402e09:	and    ebp,edi
  402e0b:	xor    DWORD PTR [esi],ebp
  402e0d:	loopne 0x402dd9
  402e0f:	or     DWORD PTR [eax],edx
  402e11:	push   0x30
  402e13:	xchg   edx,eax
  402e14:	mov    al,ds:0x9f34cccc
  402e19:	xor    BYTE PTR [edi],bl
  402e1b:	div    BYTE PTR ds:0x5cf98658
  402e21:	gs in  eax,dx
  402e23:	pop    esi
  402e24:	imul   edi,DWORD PTR [ecx+0x58893b3b],0x36d5e396
  402e2e:	cld    
  402e2f:	xor    al,BYTE PTR [ebp-0x48]
  402e32:	sti    
  402e33:	dec    ecx
  402e34:	(bad)  ds:0x5a078ba6
  402e3a:	cmp    dh,BYTE PTR [ecx]
  402e3c:	or     ch,bl
  402e3e:	lods   al,BYTE PTR es:[esi]
  402e40:	add    bl,bh
  402e42:	sbb    edx,edx
  402e44:	and    dh,BYTE PTR [ebx]
  402e46:	cs inc eax
  402e48:	push   ecx
  402e49:	je     0x402e4b
  402e4b:	das    
  402e4c:	mov    ah,0x9a
  402e4e:	addr16 je 0x402e55
  402e51:	not    esi
  402e53:	mov    bl,0xd6
  402e55:	(bad)  
  402e56:	ret    0xe01d
  402e59:	and    bl,BYTE PTR [esi]
  402e5b:	mov    eax,0x87dd76d7
  402e60:	lods   eax,DWORD PTR ds:[esi]
  402e61:	in     al,dx
  402e62:	xchg   esi,eax
  402e63:	jecxz  0x402e20
  402e65:	pop    esi
  402e66:	xchg   eax,esi
  402e68:	cmp    BYTE PTR [ebp-0x13d1d2be],0x22
  402e6f:	add    DWORD PTR [ecx],esi
  402e71:	(bad)  
  402e72:	jge    0x402e27
  402e74:	xchg   esi,eax
  402e75:	cld    
  402e76:	jmp    0xac39:0x15ed0da5
  402e7d:	adc    BYTE PTR [eax+0x7],0xfe
  402e81:	and    edi,eax
  402e83:	add    DWORD PTR [esi+0x775d515f],ebp
  402e89:	(bad)
  402e8c:	inc    edi
  402e8d:	imul   BYTE PTR [edx+0x36f49c3d]
  402e93:	cmp    DWORD PTR [edi+0x615ae3b1],0x7008afe0
  402e9d:	mov    eax,ds:0xbabde64d
  402ea2:	cwde   
  402ea3:	pop    ss
  402ea4:	daa    
  402ea5:	mov    eax,ds:0x2ba8506e
  402eaa:	or     BYTE PTR ds:0x1d8c85b5,al
  402eb0:	push   0x5c7c5ca1
  402eb5:	bound  esi,QWORD PTR [ecx]
  402eb7:	or     BYTE PTR [esi+0x3af4e226],ah
  402ebd:	icebp  
  402ebe:	cdq    
  402ebf:	aam    0x67
  402ec1:	js     0x402eba
  402ec3:	ret    0xce68
  402ec6:	or     eax,0x5c856988
  402ecb:	lahf   
  402ecc:	inc    eax
  402ecd:	mov    bl,ah
  402ecf:	xor    al,0xc7
  402ed1:	ja     0x402f11
  402ed3:	jae    0x402f28
  402ed5:	xor    ch,BYTE PTR [edi-0x66]
  402ed8:	inc    ebx
  402eda:	push   ebp
  402edb:	repz xlat BYTE PTR ds:[ebx]
  402edd:	push   es
  402ede:	scas   al,BYTE PTR es:[edi]
  402edf:	xchg   ebx,eax
  402ee0:	aaa    
  402ee1:	(bad)  
  402ee2:	fdivr  DWORD PTR [ebp+0x68]
  402ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee6:	fstp   TBYTE PTR [edx]
  402ee8:	xchg   ebp,eax
  402ee9:	push   es
  402eea:	add    DWORD PTR [edi+0x67f2b10d],ebx
  402ef0:	xchg   ebp,eax
  402ef1:	jmp    0xa3d0:0xce144cf0
  402ef8:	(bad)  
  402efa:	ret    
  402efb:	or     eax,ebx
  402efd:	sbb    eax,0xffb4f2c7
  402f02:	jle    0x402e91
  402f04:	aaa    
  402f05:	icebp  
  402f06:	mov    dh,0xa0
  402f08:	mov    dl,0x5f
  402f0a:	adc    dh,BYTE PTR [eax-0x45ee23c7]
  402f10:	outs   dx,DWORD PTR ds:[esi]
  402f11:	jp     0x402f72
  402f13:	mov    ebp,DWORD PTR [esp+eax*1+0x3b]
  402f17:	js     0x402f98
  402f19:	adc    eax,0xefc4824d
  402f1e:	(bad)  
  402f1f:	cld    
  402f20:	mov    ecx,0xa80cf577
  402f25:	pop    ss
  402f26:	mov    dh,0x70
  402f28:	xchg   ebx,eax
  402f29:	xchg   esp,eax
  402f2a:	in     al,0x7a
  402f2c:	jb     0x402ec6
  402f2e:	or     cl,BYTE PTR ds:0xc99063b6
  402f34:	loopne 0x402fa8
  402f36:	stos   DWORD PTR es:[edi],eax
  402f37:	outs   dx,BYTE PTR ds:[esi]
  402f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f39:	fs ins BYTE PTR es:[edi],dx
  402f3b:	inc    edx
  402f3c:	dec    ebx
  402f3d:	loopne 0x402fb6
  402f3f:	clc    
  402f40:	xlat   BYTE PTR ds:[ebx]
  402f41:	(bad)  
  402f42:	pop    ecx
  402f43:	lock mov bh,0x14
  402f46:	std    
  402f47:	pop    es
  402f48:	ret    0x5878
  402f4b:	pop    esp
  402f4c:	adc    dh,ch
  402f4e:	retf   0x591c
  402f51:	xor    ebx,DWORD PTR [ecx]
  402f53:	and    al,0xe9
  402f56:	and    DWORD PTR [edx+0x1b],0xffffffbc
  402f5a:	and    al,dl
  402f5c:	mov    bh,BYTE PTR [ebx+0x1f2d07db]
  402f62:	or     DWORD PTR [ecx],0xe
  402f65:	or     DWORD PTR [ecx+0x3c],esi
  402f68:	hlt    
  402f69:	(bad)  
  402f6a:	bound  esi,QWORD PTR [eax-0x2d]
  402f6d:	and    DWORD PTR [edi-0x5ab98e85],ebx
  402f73:	push   eax
  402f74:	or     BYTE PTR [eax+0x620908af],bh
  402f7a:	pop    ecx
  402f7b:	(bad)  
  402f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f7d:	sbb    al,BYTE PTR [esi-0x46563b35]
  402f83:	jmp    0xff0b:0x3a6b8522
  402f8a:	scas   eax,DWORD PTR es:[edi]
  402f8b:	adc    dl,BYTE PTR [ebp+0x6773ae49]
  402f91:	mov    ch,0x83
  402f93:	pop    ss
  402f94:	dec    esp
  402f95:	jge    0x402f60
  402f97:	popf   
  402f98:	fld    QWORD PTR [edi-0x6c]
  402f9b:	add    eax,0xd9ae91c8
  402fa0:	mov    al,BYTE PTR [ebx]
  402fa2:	sti    
  402fa3:	sbb    bh,BYTE PTR [edx]
  402fa5:	outs   dx,DWORD PTR ds:[esi]
  402fa6:	cmp    BYTE PTR [ebp-0x50563f2a],ah
  402fac:	mov    dh,BYTE PTR [esi+0x5e]
  402faf:	add    edi,DWORD PTR [ecx]
  402fb1:	aam    0x51
  402fb3:	adc    DWORD PTR [eax+0xf],eax
  402fb6:	push   cs
  402fb7:	in     al,dx
  402fb8:	jp     0x402f81
  402fba:	clc    
  402fbb:	xchg   DWORD PTR [ecx],ebp
  402fbd:	jg     0x402f5b
  402fbf:	push   cs
  402fc0:	test   al,0x61
  402fc2:	add    eax,0x3fafec3f
  402fc7:	std    
  402fc8:	das    
  402fc9:	xchg   esp,eax
  402fca:	xor    ch,ch
  402fcc:	in     eax,0x23
  402fce:	rcr    DWORD PTR [edi-0x74],0x2f
  402fd2:	fadd   st,st(5)
  402fd4:	fwait
  402fd5:	das    
  402fd6:	xor    BYTE PTR [esi+0x6d],0x9b
  402fda:	adc    eax,edx
  402fdc:	stos   BYTE PTR es:[edi],al
  402fdd:	outs   dx,DWORD PTR ds:[esi]
  402fde:	mov    bh,0x5
  402fe0:	push   ecx
  402fe1:	sbb    BYTE PTR [ebp+0x4f],0xbf
  402fe5:	pop    eax
  402fe6:	imul   ecx,DWORD PTR [edi+ecx*4+0x20],0xffffff97
  402feb:	(bad)  
  402fec:	sahf   
  402fed:	cmp    edx,0x1
  402ff0:	push   ebx
  402ff1:	aas    
  402ff2:	in     eax,dx
  402ff3:	mov    al,0x73
  402ff5:	or     esp,DWORD PTR [ecx-0x30]
  402ff8:	gs call 0x9f64:0x2b621e94
  403000:	ret    0x501d
  403003:	cmp    esp,DWORD PTR [ebp+0x3b]
  403006:	idiv   bh
  403008:	sar    DWORD PTR ss:[ebx-0x76c04ebe],0x47
  403010:	mov    dl,0xa2
  403012:	rcl    DWORD PTR [eax+edx*1],0x4c
  403016:	adc    BYTE PTR [ecx-0x38d01b4f],ch
  40301c:	jns    0x403032
  40301e:	mov    BYTE PTR [edx+0x12],ah
  403021:	jp     0x40309f
  403023:	inc    ebx
  403024:	jno    0x403000
  403026:	clc    
  403027:	lods   al,BYTE PTR ds:[esi]
  403028:	mov    esp,esp
  40302a:	add    DWORD PTR [ecx+0x451c7d30],edx
  403030:	cmp    eax,0xfbf229bf
  403035:	mov    eax,ds:0xdedb94fe
  40303a:	hlt    
  40303b:	push   ss
  40303c:	into   
  40303d:	dec    ecx
  40303e:	dec    eax
  40303f:	ins    DWORD PTR es:[edi],dx
  403040:	adc    BYTE PTR [eax+0x36],dh
  403043:	out    dx,eax
  403044:	jmp    0x403030
  403046:	mov    ds:0x466164bb,al
  40304b:	jp     0x403038
  40304d:	push   ss
  40304e:	out    0x1c,eax
  403050:	jle    0x403046
  403052:	test   DWORD PTR ds:0x7234612,ecx
  403058:	sbb    DWORD PTR [edi+0xe1bfb63],0x17de56c7
  403062:	mov    ecx,0xd645f03
  403067:	push   ss
  403068:	pop    ebp
  403069:	enter  0x6266,0x51
  40306d:	pop    eax
  40306e:	aaa    
  40306f:	stos   DWORD PTR es:[edi],eax
  403070:	or     BYTE PTR [edx+eiz*2+0x1a46f82c],al
  403077:	out    0xc3,eax
  403079:	fisttp WORD PTR [eax-0x71214f4]
  40307f:	push   eax
  403080:	sub    BYTE PTR [eax+0x52],ah
  403083:	imul   ebx,edx,0xffffffef
  403086:	out    0xf7,al
  403088:	pusha  
  403089:	inc    edx
  40308a:	in     al,0x22
  40308c:	adc    DWORD PTR [edx-0x53339a22],ecx
  403092:	out    0x41,al
  403094:	pop    ecx
  403095:	pop    esp
  403096:	jnp    0x4030a3
  403098:	xor    BYTE PTR [edx],dl
  40309a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40309b:	adc    ah,BYTE PTR [edi-0x3d]
  40309e:	mov    ch,0x7c
  4030a0:	mov    bh,0x4d
  4030a2:	or     eax,ebx
  4030a4:	rcl    BYTE PTR [ecx],1
  4030a6:	adc    bh,BYTE PTR [esi]
  4030a8:	lea    ecx,[edx-0x6d8b74fd]
  4030ae:	aas    
  4030af:	or     BYTE PTR [edx],cl
  4030b1:	mov    esi,0xef235ffb
  4030b6:	inc    ebp
  4030b7:	je     0x403049
  4030b9:	pop    edx
  4030ba:	nop
  4030bb:	rol    BYTE PTR [ecx+0x6cc8257f],0x65
  4030c2:	dec    ebx
  4030c3:	sub    eax,DWORD PTR [ebp+eax*2+0x1f49aa47]
  4030ca:	sbb    al,0xfa
  4030cc:	xchg   edi,eax
  4030cd:	cmp    DWORD PTR [ebx],ecx
  4030cf:	pop    ds
  4030d0:	js     0x4030cb
  4030d2:	sub    DWORD PTR [ebx-0x78],ecx
  4030d5:	js     0x40312b
  4030d7:	push   edi
  4030d8:	add    al,0xa4
  4030da:	in     eax,dx
  4030db:	mov    al,0x1a
  4030dd:	into   
  4030de:	mov    edx,0x8c49d905
  4030e3:	imul   eax,DWORD PTR [ecx+0x603fead8],0xb40d3dd9
  4030ed:	xchg   esp,eax
  4030ee:	adc    BYTE PTR [esi],ah
  4030f0:	out    dx,al
  4030f1:	jne    0x40310b
  4030f3:	mov    dh,0x71
  4030f5:	aad    0x95
  4030f7:	mov    cl,0x73
  4030f9:	aaa    
  4030fa:	retf   
  4030fb:	add    eax,0xc55cb57c
  403100:	in     eax,0x84
  403102:	adc    eax,0x729ba609
  403107:	nop
  403108:	sbb    al,0x5e
  40310a:	xor    al,0x32
  40310c:	(bad)  
  40310d:	xor    al,BYTE PTR [ebx]
  40310f:	clc    
  403110:	repz aad 0x4d
  403113:	mov    esi,0x27c11b35
  403118:	ret    
  403119:	dec    edi
  40311a:	lahf   
  40311b:	adc    eax,0xe267a6e8
  403120:	pop    ebx
  403121:	or     bl,ch
  403123:	sub    bh,BYTE PTR [eax]
  403125:	push   ebx
  403126:	lods   al,BYTE PTR ds:[esi]
  403127:	test   cl,dl
  403129:	sar    DWORD PTR [eax-0x2c],0x51
  40312d:	in     al,dx
  40312e:	in     eax,0x97
  403130:	push   cs
  403131:	js     0x403128
  403133:	frstor [esi+0x1d]
  403136:	and    eax,0x165ccd27
  40313b:	pop    edx
  40313c:	retf   
  40313d:	push   0xffffff9f
  40313f:	mov    al,ds:0xcc322c35
  403144:	ror    DWORD PTR [eax],0x52
  403147:	loope  0x403171
  403149:	or     BYTE PTR [eax+0x5d],dl
  40314c:	fisttp DWORD PTR [edi-0x21]
  40314f:	jmp    0x4030f8
  403151:	push   ebx
  403152:	adc    DWORD PTR [ebx-0x67],esi
  403155:	push   es
  403156:	push   esi
  403157:	pusha  
  403158:	ja     0x4031d2
  40315a:	imul   esp,ebx,0x4bd9bda9
  403160:	gs inc esi
  403162:	sbb    eax,0xbc9b61b4
  403167:	ret    0xdb31
  40316a:	fcmovnb st,st(7)
  40316c:	pop    esp
  40316d:	xor    esp,ebx
  40316f:	fcomp  st(3)
  403171:	enter  0xbf1a,0x81
  403175:	mov    esi,0x90a43d96
  40317a:	das    
  40317b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40317c:	bound  ebx,QWORD PTR [esi-0x45198c88]
  403182:	or     dh,bl
  403184:	retf   0x8677
  403187:	xor    eax,0xa7f6d832
  40318c:	mov    dh,0x85
  40318e:	mov    ch,0xbd
  403190:	inc    eax
  403191:	push   0x64
  403193:	hlt    
  403194:	push   edx
  403195:	adc    eax,ebp
  403197:	dec    edi
  403198:	push   ebx
  403199:	fiadd  WORD PTR [eax+0x5b0b7f57]
  40319f:	xchg   DWORD PTR [edi+0x1321121d],ecx
  4031a5:	int    0xd3
  4031a7:	dec    ebp
  4031a8:	call   0x3d6487df
  4031ad:	hlt    
  4031ae:	call   DWORD PTR [ebx*8-0xfd1474e]
  4031b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031b6:	or     DWORD PTR [edx],edx
  4031b8:	int3   
  4031b9:	mov    DWORD PTR [ebp-0x10a85782],edi
  4031bf:	fbstp  TBYTE PTR [ebp+0x2c]
  4031c2:	or     BYTE PTR [eax],al
  4031c4:	loope  0x40314d
  4031c6:	aad    0x5f
  4031c8:	iret   
  4031c9:	icebp  
  4031ca:	or     eax,0xb119bdc5
  4031cf:	and    al,0xfe
  4031d1:	dec    eax
  4031d2:	lods   eax,DWORD PTR ds:[esi]
  4031d3:	pop    esi
  4031d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031d5:	push   eax
  4031d6:	ret    
  4031d7:	mov    al,0xae
  4031d9:	mov    BYTE PTR [edi-0x1d],dh
  4031dc:	inc    ebx
  4031dd:	es or  eax,0x22441254
  4031e3:	lahf   
  4031e4:	jo     0x403217
  4031e6:	ret    
  4031e7:	iret   
  4031e8:	aaa    
  4031e9:	ret    
  4031ea:	mov    ah,0x87
  4031ec:	scas   al,BYTE PTR es:[edi]
  4031ed:	shl    ebx,0xc4
  4031f0:	daa    
  4031f1:	daa    
  4031f2:	inc    edx
  4031f3:	sti    
  4031f4:	ror    DWORD PTR [edx+0x4edec82c],cl
  4031fa:	mov    edi,0x31b3e2a1
  4031ff:	inc    esp
  403200:	or     al,0x6
  403202:	or     eax,0x7ff959
  403207:	leave  
  403208:	ins    BYTE PTR es:[edi],dx
  403209:	adc    ah,bl
  40320b:	outs   dx,BYTE PTR ds:[esi]
  40320c:	xor    BYTE PTR [ecx-0x64656a63],al
  403212:	data16 sub BYTE PTR [edi],0x6d
  403216:	aaa    
  403217:	cmp    eax,esp
  403219:	pop    ds
  40321a:	jae    0x403222
  40321c:	fcom   DWORD PTR [ecx+esi*4]
  40321f:	popf   
  403220:	fisubr DWORD PTR [ecx]
  403222:	mov    ds:0x2974dd44,eax
  403227:	scas   eax,DWORD PTR es:[edi]
  403228:	test   ah,ch
  40322a:	dec    esp
  40322b:	iret   
  40322c:	(bad)  [ebx]
  40322e:	push   ds
  40322f:	js     0x403250
  403231:	mov    ds:0x225ae219,eax
  403237:	or     BYTE PTR [edx+eiz*1+0x502f869a],0x87
  40323f:	mov    ecx,0xfe8e6581
  403244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403245:	and    eax,0xaa2a65ed
  40324a:	lods   eax,DWORD PTR ds:[esi]
  40324b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40324c:	out    0x1a,al
  40324e:	int3   
  40324f:	mov    edi,esp
  403251:	mov    ch,0xd0
  403253:	sahf   
  403254:	mov    eax,ds:0xdafc24f9
  403259:	pop    ebp
  40325a:	pop    ebx
  40325b:	add    cl,cl
  40325d:	ins    BYTE PTR es:[edi],dx
  40325e:	xchg   esi,eax
  40325f:	mov    edi,DWORD PTR [ecx+0x5a08474a]
  403265:	mov    ecx,0x268b1812
  40326a:	mov    bl,BYTE PTR [ebx-0x5c04c78f]
  403270:	std    
  403271:	ins    BYTE PTR es:[edi],dx
  403272:	inc    ebx
  403273:	push   esi
  403274:	retf   0xfbae
  403277:	xchg   esp,eax
  403278:	jb     0x403228
  40327a:	arpl   di,di
  40327c:	fs or  al,0x6d
  40327f:	sbb    ecx,DWORD PTR cs:[ecx]
  403282:	and    DWORD PTR [esi+0x120b355f],0x289c871
  40328c:	loope  0x4032dc
  40328e:	fisub  WORD PTR [ebp+0xc]
  403291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403292:	int3   
  403293:	mov    ch,0x4f
  403295:	jbe    0x403292
  403297:	fwait
  403298:	add    bl,dh
  40329a:	in     eax,0x5b
  40329c:	aaa    
  40329d:	push   es
  40329e:	jmp    0x9f3:0x317b0059
  4032a5:	jne    0x40329b
  4032a7:	dec    esp
  4032a8:	test   ebp,eax
  4032aa:	pop    eax
  4032ab:	push   0x40
  4032ad:	pop    edx
  4032ae:	mov    bh,0x63
  4032b0:	leave  
  4032b1:	ret    0x5d92
  4032b4:	(bad)  
  4032b5:	gs mov ebp,0xe0085d28
  4032bc:	pop    eax
  4032bd:	mul    DWORD PTR [ebp+0x2792e370]
  4032c3:	scas   eax,DWORD PTR es:[edi]
  4032c4:	idiv   DWORD PTR [ebx+0x2d]
  4032c7:	nop
  4032c8:	cmc    
  4032c9:	nop
  4032ca:	push   cs
  4032cb:	je     0x403294
  4032cd:	ror    DWORD PTR [ebx+0x36],0xec
  4032d1:	ss mov edi,0x3346ba44
  4032d7:	push   esi
  4032d8:	jmp    DWORD PTR ds:0xb8f63852
  4032de:	and    ch,BYTE PTR fs:[edi]
  4032e1:	xor    BYTE PTR [eax+0x62],cl
  4032e4:	rol    edi,cl
  4032e6:	dec    bl
  4032e8:	pop    ecx
  4032e9:	and    eax,0xd05d629d
  4032ee:	xor    ah,BYTE PTR [esi-0x79]
  4032f1:	mov    edi,0xc89bc63c
  4032f6:	push   0x2b14459b
  4032fb:	aad    0x76
  4032fd:	pop    edx
  4032fe:	clc    
  4032ff:	add    BYTE PTR [ebx+0x72],al
  403302:	xchg   ebx,eax
  403303:	outs   dx,BYTE PTR ds:[esi]
  403304:	fidivr DWORD PTR [edi-0x9]
  403307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403308:	jl     0x4032f1
  40330a:	inc    dl
  40330c:	mov    eax,0x5a108028
  403311:	inc    ebp
  403312:	aad    0x63
  403314:	repnz pop ecx
  403316:	xchg   esi,eax
  403317:	jno    0x4032ed
  403319:	lods   al,BYTE PTR ds:[esi]
  40331a:	and    esp,edx
  40331c:	or     dh,ch
  40331e:	sahf   
  40331f:	(bad)  
  403320:	call   0xaa5e:0x6e9c1aa2
  403327:	mov    ds:0x36724e32,al
  40332c:	push   cs
  40332d:	xchg   ebx,eax
  40332e:	cmp    BYTE PTR ds:0xab473b1d,bh
  403335:	adc    esi,edx
  403337:	sahf   
  403338:	cmp    eax,0xb9a61cdb
  40333d:	sbb    DWORD PTR [eax+0x3be6b0f1],0xffffff86
  403344:	inc    ebp
  403345:	and    cl,ah
  403347:	pop    eax
  403349:	jg     0x4032fa
  40334b:	xor    bl,ch
  40334d:	sbb    ebx,0x5f
  403350:	shr    eax,1
  403352:	mov    eax,ds:0xed769772
  403357:	add    al,0x26
  403359:	test   DWORD PTR [esi],ecx
  40335b:	fist   WORD PTR [edi+ecx*1]
  40335e:	and    eax,0x9e65f4f5
  403363:	xchg   ecx,eax
  403364:	inc    esi
  403365:	xchg   BYTE PTR [esi],al
  403367:	lock stos DWORD PTR es:[edi],eax
  403369:	aad    0x79
  40336b:	fisttp WORD PTR ds:0xe0d385bf
  403371:	adc    dh,BYTE PTR [ebp+0x78]
  403374:	out    dx,eax
  403375:	sar    DWORD PTR [ecx-0x3d10c199],cl
  40337b:	addr16 mov al,0xf5
  40337e:	ret    0x5d3c
  403381:	xchg   edi,eax
  403382:	pop    esp
  403383:	and    al,0x1c
  403385:	xchg   edi,eax
  403386:	jg     0x403366
  403388:	sahf   
  403389:	stc    
  40338a:	adc    ecx,0x79db7ccc
  403390:	pop    ss
  403391:	test   BYTE PTR [ebx-0x78baab54],ah
  403397:	mov    eax,ds:0x8255124e
  40339c:	xor    BYTE PTR [ebp+0x4],0x6f
  4033a0:	sbb    al,0xb8
  4033a2:	adc    al,0xb6
  4033a4:	or     DWORD PTR [esi+0x7c],0xffffffa5
  4033a8:	lods   eax,DWORD PTR ds:[esi]
  4033a9:	icebp  
  4033aa:	fadd   st,st(2)
  4033ac:	ss jbe 0x40336e
  4033af:	dec    ecx
  4033b0:	ret    0xb1e
  4033b3:	ja     0x403430
  4033b5:	jbe    0x4033a5
  4033b7:	fstp   DWORD PTR [ebp+0x37]
  4033ba:	cmp    bl,BYTE PTR [ebx-0x29]
  4033bd:	not    DWORD PTR [edx]
  4033bf:	in     al,0x22
  4033c1:	adc    DWORD PTR [ebx],esi
  4033c3:	mov    esp,0x5039264b
  4033c8:	jmp    0xe625:0x3fba8880
  4033cf:	pop    ebp
  4033d0:	cs in  eax,0x2c
  4033d3:	push   esi
  4033d4:	test   DWORD PTR [eax],ecx
  4033d6:	push   ds
  4033d7:	jg     0x40344e
  4033d9:	cmp    BYTE PTR [edx],bh
  4033db:	je     0x4033cd
  4033dd:	inc    esp
  4033de:	fsub   QWORD PTR [esi-0x342926e9]
  4033e4:	push   esi
  4033e5:	dec    ecx
  4033e6:	mov    bh,0x79
  4033e8:	fist   DWORD PTR [eax+0x49]
  4033eb:	pop    ebx
  4033ec:	in     al,0xd8
  4033ee:	loope  0x403422
  4033f0:	mov    edi,edi
  4033f2:	mov    WORD PTR [edi],ss
  4033f4:	in     al,0x67
  4033f6:	sub    ebx,DWORD PTR [eax]
  4033f8:	out    0x3b,eax
  4033fa:	or     al,0x59
  4033fc:	mov    ds:0xe638cfe5,al
  403401:	stos   BYTE PTR es:[edi],al
  403402:	js     0x40340a
  403404:	add    BYTE PTR [ebx+0x66],bl
  403407:	mov    BYTE PTR [ebx+0x14],ch
  40340a:	rcr    BYTE PTR [ecx+ebp*8-0x19e6947],1
  403411:	ins    BYTE PTR es:[edi],dx
  403412:	mov    ebx,0xbe6ec53d
  403417:	call   0xb7f3:0x9948c6d0
  40341e:	aas    
  40341f:	pop    ss
  403420:	mov    ecx,0xc7e9db20
  403425:	clc    
  403426:	(bad)  
  403427:	add    ch,dh
  403429:	sub    esi,ebp
  40342b:	pop    ebp
  40342c:	push   ds
  40342d:	es push ebp
  40342f:	push   0xca63cc32
  403434:	test   al,0x88
  403436:	test   eax,0x88f8dea9
  40343b:	ss xchg ebx,eax
  40343d:	and    eax,0xb4da3637
  403442:	jbe    0x40346b
  403444:	aaa    
  403445:	sub    BYTE PTR [ecx+0x57],dh
  403448:	out    0x12,al
  40344a:	push   eax
  40344b:	or     al,0xd9
  40344d:	sub    eax,0x72a819a1
  403452:	in     al,dx
  403453:	mov    edi,DWORD PTR [ecx+0x68f9e66a]
  403459:	add    esp,esi
  40345b:	call   0x1dcc506a
  403460:	push   ss
  403461:	xchg   ebp,eax
  403462:	fldcw  WORD PTR [esi+0x61]
  403465:	push   edx
  403466:	cs into 
  403468:	out    dx,al
  403469:	jb     0x403448
  40346b:	iret   
  40346c:	xor    bl,dh
  40346e:	in     eax,0x87
  403470:	mov    ecx,0x88be4600
  403475:	js     0x40342c
  403477:	adc    DWORD PTR [ebx+0x214deae6],esp
  40347d:	shr    BYTE PTR ds:0x5ef05fc0,0x5d
  403484:	aaa    
  403485:	add    al,0xf6
  403487:	push   0xce9454ca
  40348c:	and    DWORD PTR [edx+0x32fe2bea],ecx
  403492:	stos   BYTE PTR es:[edi],al
  403493:	sub    eax,edi
  403495:	cmc    
  403496:	scas   al,BYTE PTR es:[edi]
  403497:	mov    DWORD PTR [ebp+0x6b6f9b9c],ebp
  40349d:	jle    0x40344c
  40349f:	mov    esi,0x91d96699
  4034a4:	or     eax,0xde0f73f8
  4034a9:	jb     0x4034dc
  4034ab:	push   ds
  4034ac:	push   ebx
  4034ad:	cmp    esp,ecx
  4034af:	mov    al,0x68
  4034b1:	cli    
  4034b2:	mov    edx,0xf62cad22
  4034b7:	mov    edi,0xfd5c094e
  4034bc:	daa    
  4034bd:	or     DWORD PTR [ebp+0x2115d794],ecx
  4034c3:	aas    
  4034c4:	xor    ebp,DWORD PTR [edi+0x23f3979]
  4034ca:	jmp    0x4034c0
  4034cc:	pop    ebp
  4034cd:	pop    esp
  4034ce:	hlt    
  4034cf:	push   esp
  4034d0:	(bad)  [ebx-0x676bdcc]
  4034d6:	push   edi
  4034d7:	jp     0x4034f1
  4034d9:	cmp    al,0xd7
  4034db:	push   ss
  4034dc:	sbb    edi,DWORD PTR [ecx]
  4034de:	mov    ds:0x30c90c5d,al
  4034e3:	inc    BYTE PTR [ecx]
  4034e5:	jge    0x4034bd
  4034e7:	jmp    0x8ef98f9a
  4034ec:	jo     0x403525
  4034ee:	dec    esp
  4034ef:	repz adc BYTE PTR [esi-0x35],cl
  4034f3:	iret   
  4034f4:	jg     0x403503
  4034f6:	push   cs
  4034f7:	and    ah,ch
  4034f9:	shr    DWORD PTR [edi+esi*1-0x39e2219d],0xda
  403501:	jae    0x403568
  403503:	cmp    bl,BYTE PTR [esi+edx*1+0x12]
  403507:	mov    cl,ch
  403509:	xor    DWORD PTR [ecx],ebx
  40350b:	cs imul esp,ebp,0xbb083e85
  403512:	fcomi  st,st(1)
  403514:	stos   BYTE PTR es:[edi],al
  403515:	retf   
  403516:	mov    al,ds:0x3dd3d5ea
  40351b:	mov    dh,0x85
  40351d:	xchg   ebx,eax
  40351e:	sbb    DWORD PTR [edx-0x13b76201],0xffffffb4
  403525:	pop    esi
  403526:	call   0xfceb:0x1ec17c4b
  40352d:	call   0xf733ca33
  403532:	(bad)  
  403533:	(bad)  
  403534:	cwde   
  403535:	pop    ebp
  403536:	lahf   
  403537:	dec    eax
  403538:	sub    ch,BYTE PTR [ebx]
  40353a:	(bad)  
  40353c:	stos   DWORD PTR es:[edi],eax
  40353d:	out    0x2f,al
  40353f:	add    eax,0xd1a5ca09
  403544:	xchg   ebp,eax
  403545:	mov    ch,0x5c
  403547:	mov    ds:0xbd331d53,al
  40354c:	dec    edx
  40354d:	pop    eax
  40354e:	add    al,0x44
  403550:	push   ecx
  403551:	lods   al,BYTE PTR ds:[esi]
  403552:	cdq    
  403553:	mov    ecx,0x858e5af5
  403558:	or     edx,DWORD PTR [eax+0x8]
  40355b:	sbb    eax,0x36dcefdb
  403560:	dec    ebx
  403561:	cmp    DWORD PTR [edx+0x6b4869e5],0x4e78028a
  40356b:	imul   eax,DWORD PTR [esi-0x1ef39f07],0x1f
  403572:	add    BYTE PTR [eax],0x14
  403575:	mov    al,0xb9
  403577:	sbb    DWORD PTR [esi-0x39],0x1ea90a35
  40357e:	push   edx
  40357f:	aaa    
  403580:	push   ss
  403581:	add    eax,0xb81f0014
  403586:	add    al,0x2d
  403588:	add    cl,BYTE PTR [edi-0x2ea08ada]
  40358e:	and    al,bl
  403590:	mov    eax,ds:0xfa665214
  403595:	mov    dh,0xb1
  403597:	push   0xffffff99
  403599:	cdq    
  40359a:	stc    
  40359b:	push   edi
  40359c:	bound  esi,QWORD PTR [edi]
  40359e:	xchg   ebp,eax
  40359f:	pop    edi
  4035a0:	lds    esp,FWORD PTR [ebx+0x601a7e2e]
  4035a6:	jns    0x4035ad
  4035a8:	addr16 cld 
  4035aa:	mov    eax,0x6980e169
  4035af:	fwait
  4035b0:	dec    ebx
  4035b1:	cli    
  4035b2:	pop    ecx
  4035b3:	mov    ecx,0x5f1bbf9e
  4035b8:	test   al,0x34
  4035ba:	retf   
  4035bb:	sub    ebp,ecx
  4035bd:	fst    QWORD PTR [esp+eax*4]
  4035c0:	push   ecx
  4035c1:	inc    edi
  4035c2:	ss popa 
  4035c4:	(bad)  
  4035c6:	sti    
  4035c7:	outs   dx,DWORD PTR ds:[esi]
  4035c8:	imul   ecx,DWORD PTR ds:0xbe5b1564,0xffffffb0
  4035cf:	outs   dx,DWORD PTR ds:[esi]
  4035d0:	jmp    0xe580824c
  4035d5:	(bad)  
  4035d6:	jo     0x403607
  4035d8:	ins    DWORD PTR es:[edi],dx
  4035d9:	sbb    al,0x1d
  4035db:	pusha  
  4035dc:	cwde   
  4035dd:	pop    eax
  4035de:	jnp    0x40361b
  4035e0:	loope  0x40358c
  4035e2:	cli    
  4035e3:	mov    dl,0xa
  4035e5:	ret    0x1379
  4035e8:	xchg   ecx,eax
  4035e9:	lods   eax,DWORD PTR ds:[esi]
  4035ea:	push   ebx
  4035eb:	push   0x50
  4035ed:	xchg   esi,eax
  4035ee:	add    ah,cl
  4035f0:	push   esp
  4035f1:	dec    ebx
  4035f2:	push   ecx
  4035f3:	into   
  4035f4:	loop   0x40366e
  4035f6:	adc    ebp,DWORD PTR ss:[ebx+0x5a367519]
  4035fd:	jge    0x40366f
  4035ff:	fbld   TBYTE PTR [ecx+0x6825e965]
  403605:	sub    edi,DWORD PTR [ebx]
  403607:	stos   DWORD PTR es:[edi],eax
  403608:	aaa    
  403609:	adc    BYTE PTR [ebp+0x413a5cae],dl
  40360f:	aam    0xbc
  403611:	cli    
  403612:	(bad)  
  403614:	or     ebp,eax
  403616:	sub    edi,esp
  403618:	sub    eax,0x98a84a7f
  40361d:	adc    ebx,DWORD PTR [esi-0x5c]
  403620:	pop    ds
  403621:	push   ebx
  403622:	clts   
  403624:	popf   
  403625:	addr16 cdq 
  403627:	js     0x40365b
  403629:	das    
  40362a:	icebp  
  40362b:	sub    dh,BYTE PTR [edi-0x4c]
  40362e:	int3   
  40362f:	sbb    al,0xdf
  403631:	dec    esi
  403632:	gs in  al,dx
  403634:	jle    0x403688
  403636:	hlt    
  403637:	dec    esi
  403638:	(bad)  
  403639:	jo     0x40368c
  40363b:	fs mov al,0x8d
  40363e:	dec    eax
  40363f:	jnp    0x4035ea
  403641:	sbb    al,BYTE PTR [esi+esi*2]
  403644:	(bad)  
  403645:	mov    ds:0x617d7345,eax
  40364a:	sbb    BYTE PTR ds:0xf471c045,0x82
  403651:	in     al,0x7f
  403653:	test   eax,0xa8784ccd
  403658:	int    0x2a
  40365a:	rcl    esp,1
  40365c:	dec    ebp
  40365d:	adc    BYTE PTR [ebx],cl
  40365f:	scas   eax,DWORD PTR es:[edi]
  403660:	shr    cl,cl
  403662:	je     0x4035e9
  403664:	push   ebp
  403665:	mov    bl,BYTE PTR [edx+0x73a80730]
  40366b:	mov    dh,BYTE PTR [esp+ecx*4+0x34]
  40366f:	push   ebp
  403670:	jp     0x40360f
  403672:	jne    0x4036d3
  403674:	imul   ebp,DWORD PTR [eax],0x22
  403677:	mov    ss,ebx
  403679:	fsubrp st(5),st
  40367b:	jmp    0x344d46bb
  403680:	dec    DWORD PTR [esi]
  403682:	call   DWORD PTR [ebp-0x7a70dd65]
  403688:	mov    eax,0xca1e98be
  40368d:	mov    edi,0xb90f1e53
  403692:	pusha  
  403693:	inc    ebx
  403694:	pop    esi
  403695:	cmp    DWORD PTR [edx-0xd],edi
  403698:	mov    bh,0x5d
  40369a:	(bad)  
  40369b:	cld    
  40369c:	(bad)  
  40369d:	fdivr  QWORD PTR ds:0x7d957b92
  4036a3:	fisub  DWORD PTR [ebx+0x6d]
  4036a6:	jmp    0xac7f:0xbb828548
  4036ad:	arpl   cx,di
  4036af:	jo     0x4036b4
  4036b1:	test   BYTE PTR [eax+eax*1],dl
  4036b4:	adc    al,0x26
  4036b6:	and    BYTE PTR [edx+0x66],0xfa
  4036ba:	push   cs
  4036bb:	gs pop ss
  4036bd:	and    al,0xed
  4036bf:	jae    0x403660
  4036c1:	cli    
  4036c2:	retf   0xe3c3
  4036c5:	sbb    BYTE PTR [eax+esi*8-0x6c875baa],al
  4036cc:	jb     0x4036ac
  4036ce:	add    BYTE PTR [ebx],al
  4036d0:	adc    DWORD PTR es:[edi-0x35c7d2ef],0x25afc0de
  4036db:	pop    es
  4036dc:	imul   edi,DWORD PTR [ecx+0xeabc9b3],0x3e
  4036e3:	imul   edx,esp,0x98548c4f
  4036e9:	das    
  4036ea:	xor    eax,0x86f70d77
  4036ef:	aaa    
  4036f0:	push   es
  4036f1:	xchg   esi,eax
  4036f2:	std    
  4036f3:	push   ds
  4036f4:	test   BYTE PTR [eax-0x99e31f2],dl
  4036fa:	mov    bh,0x7
  4036fc:	jne    0x4036a8
  4036fe:	or     dh,dh
  403700:	cdq    
  403701:	daa    
  403702:	retf   0x3143
  403705:	out    0x21,al
  403707:	add    edi,eax
  403709:	fcom   DWORD PTR [esi]
  40370b:	nop
  40370c:	cld    
  40370d:	loopne 0x403737
  40370f:	or     al,0xfa
  403711:	mov    dh,bh
  403713:	and    BYTE PTR [ecx+edx*1],al
  403716:	pop    ds
  403717:	sub    ebp,DWORD PTR [ebp-0x40]
  40371a:	adc    al,0xb
  40371c:	scas   eax,DWORD PTR es:[edi]
  40371d:	pop    edi
  40371e:	sbb    eax,0xdb9682ea
  403723:	mov    ebx,0x2105426d
  403728:	jp     0x40377f
  40372a:	mov    ds,WORD PTR [ebx+0x45c2abd5]
  403730:	test   DWORD PTR [esi+0x10],edi
  403733:	les    eax,FWORD PTR [esi-0x68]
  403736:	ret    0x6785
  403739:	add    BYTE PTR [edi],0x98
  40373c:	push   es
  40373d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40373f:	icebp  
  403740:	inc    ebp
  403741:	mov    esi,0x9d903da9
  403746:	packsswb mm0,QWORD PTR [esi-0x36682456]
  40374d:	ficomp WORD PTR es:[esi+0x29da2f2b]
  403754:	adc    DWORD PTR [edx],ebp
  403756:	dec    edi
  403757:	and    dh,ah
  403759:	in     eax,0x85
  40375b:	jae    0x40376c
  40375d:	push   esi
  40375e:	pop    esi
  40375f:	mov    ebx,0xe08e4ea7
  403764:	mov    eax,0x856629ca
  403769:	adc    edi,DWORD PTR [edx+esi*8-0x74]
  40376d:	popf   
  40376e:	mov    dl,0x59
  403770:	sub    ch,BYTE PTR [esi-0xa0cce51]
  403776:	mov    eax,0x33f5132f
  40377b:	pop    ebx
  40377c:	outs   dx,DWORD PTR ds:[esi]
  40377d:	leave  
  40377e:	pop    esp
  40377f:	inc    eax
  403780:	inc    ebp
  403781:	sub    DWORD PTR [edi+edx*4+0x23],esp
  403785:	ds push ss
  403787:	icebp  
  403788:	in     eax,dx
  403789:	stc    
  40378a:	adc    edi,DWORD PTR [eax-0x165932ee]
  403790:	fld    TBYTE PTR [edx+eax*1+0x6915e553]
  403797:	sbb    eax,0x306b4e13
  40379c:	pusha  
  40379d:	xor    eax,0x328c0d8f
  4037a2:	pop    esp
  4037a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037a4:	push   es
  4037a5:	dec    ebp
  4037a6:	into   
  4037a7:	ficom  DWORD PTR [edi-0x57]
  4037aa:	inc    esp
  4037ab:	hlt    
  4037ac:	lock xchg esi,eax
  4037ae:	xchg   ebx,eax
  4037af:	xchg   ebp,eax
  4037b0:	fsub   QWORD PTR [esi]
  4037b2:	stc    
  4037b3:	jg     0x4037fc
  4037b5:	daa    
  4037b6:	mov    DWORD PTR [ebx+edi*4],edx
  4037b9:	fst    QWORD PTR [eax+ebx*8-0x66]
  4037bd:	loop   0x4037ae
  4037bf:	cmp    ecx,edi
  4037c1:	push   0xfffffff2
  4037c3:	lds    esi,FWORD PTR [edx-0x7b]
  4037c6:	adc    ebx,DWORD PTR [eax]
  4037c8:	pop    es
  4037c9:	sbb    ah,BYTE PTR [eax]
  4037cb:	cmp    al,0xec
  4037cd:	push   ecx
  4037ce:	mov    al,ds:0xd7c34458
  4037d3:	lods   al,BYTE PTR ds:[esi]
  4037d4:	pop    ds
  4037d5:	ret    
  4037d6:	inc    ebx
  4037d7:	inc    eax
  4037d8:	repz mov dh,0xbe
  4037db:	push   0xb3596969
  4037e0:	jp     0x4037c2
  4037e2:	jge    0x4037b2
  4037e4:	daa    
  4037e5:	ja     0x4037f5
  4037e7:	nop
  4037e8:	cmp    BYTE PTR gs:[ecx-0x38],ah
  4037ec:	inc    edi
  4037ed:	pop    ebp
  4037ee:	cmp    BYTE PTR [ebx],al
  4037f0:	dec    edx
  4037f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037f2:	dec    ebx
  4037f3:	xor    DWORD PTR [esp+ecx*1+0x50],esp
  4037f7:	fnstcw WORD PTR [ecx-0x3767af99]
  4037fd:	int    0x40
  4037ff:	sbb    al,BYTE PTR [edx+ebx*4]
  403802:	arpl   WORD PTR [edi+0x695e1819],bp
  403808:	mov    edx,0xf844ffdf
  40380d:	ss mov ebp,0x87f4fa12
  403813:	call   FWORD PTR [esi+edi*2+0x6b]
  403817:	mov    ah,0x72
  403819:	pop    edi
  40381a:	mov    bl,0xbf
  40381c:	je     0x40384b
  40381e:	mov    bh,0x41
  403820:	test   DWORD PTR [eax],eax
  403822:	adc    ebp,edi
  403824:	ja     0x4037ab
  403826:	xor    edx,DWORD PTR [edi+0x6c5626fe]
  40382c:	es add cl,ch
  40382f:	js     0x403808
  403831:	ins    BYTE PTR es:[edi],dx
  403832:	pushf  
  403833:	pop    esp
  403834:	push   esi
  403835:	sbb    dh,BYTE PTR [ebx+0x204dfb7e]
  40383b:	shl    ecx,1
  40383d:	scas   eax,DWORD PTR es:[edi]
  40383e:	mov    bl,0x6b
  403840:	aam    0x3b
  403842:	call   0xa7e05269
  403847:	out    dx,al
  403848:	sbb    al,0x79
  40384a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40384b:	add    al,0x6a
  40384d:	cli    
  40384e:	inc    eax
  40384f:	addr16 xchg esp,eax
  403851:	and    bl,al
  403853:	dec    ebp
  403854:	fcmovu st,st(4)
  403856:	pushf  
  403857:	ins    DWORD PTR es:[edi],dx
  403858:	push   edi
  403859:	cdq    
  40385a:	sahf   
  40385b:	cwde   
  40385c:	push   edi
  40385d:	(bad)  
  40385e:	shl    dh,1
  403860:	inc    edx
  403861:	jmp    0xe945:0x93fdaf02
  403868:	adc    BYTE PTR ds:[eax-0x53],al
  40386c:	push   edx
  40386d:	fcom   DWORD PTR [eax]
  40386f:	push   ss
  403870:	adc    bl,BYTE PTR [esi-0x6eddea77]
  403876:	add    al,BYTE PTR [edx-0x525f462b]
  40387c:	and    BYTE PTR [ebp-0x5b],dh
  40387f:	xor    ah,al
  403881:	adc    BYTE PTR [edx],ch
  403883:	cmp    al,bl
  403885:	in     eax,0x6d
  403887:	das    
  403888:	out    0x43,al
  40388a:	xlat   BYTE PTR ds:[ebx]
  40388b:	push   0xffffff90
  40388d:	push   ecx
  40388e:	loope  0x40386f
  403890:	sub    al,0x1e
  403892:	or     eax,0xa4417704
  403897:	stos   BYTE PTR es:[edi],al
  403898:	adc    eax,DWORD PTR [esi-0x7b]
  40389b:	push   ebx
  40389c:	repz mov bl,0x99
  40389f:	fprem1 
  4038a1:	ret    
  4038a2:	(bad)  
  4038a3:	xchg   BYTE PTR [eax],bl
  4038a5:	outs   dx,DWORD PTR ds:[esi]
  4038a6:	xor    BYTE PTR [ebx-0x2],al
  4038a9:	push   ss
  4038aa:	lea    ebp,[ecx]
  4038ac:	and    cl,0x92
  4038af:	mov    ds,WORD PTR [edx-0x31]
  4038b2:	mov    esi,0x38baab4f
  4038b7:	push   cs
  4038b8:	(bad)
  4038bc:	jecxz  0x4038ef
  4038be:	pop    edx
  4038bf:	add    al,0x67
  4038c1:	aas    
  4038c2:	dec    edx
  4038c3:	add    ebx,DWORD PTR [edi+0x6be30d7c]
  4038c9:	loop   0x4038f1
  4038cb:	icebp  
  4038cc:	sbb    DWORD PTR [edi+0x58],edx
  4038cf:	dec    eax
  4038d0:	pop    ds
  4038d1:	cmp    BYTE PTR [bx+si],ch
  4038d4:	pop    ss
  4038d5:	fsub   DWORD PTR [ebx]
  4038d7:	sub    DWORD PTR [ebp-0xf],ecx
  4038da:	in     eax,0x93
  4038dc:	(bad)  
  4038dd:	cmp    ch,bh
  4038df:	(bad)  
  4038e0:	sar    edx,cl
  4038e2:	jg     0x4038b7
  4038e4:	dec    ebp
  4038e5:	inc    edi
  4038e6:	in     eax,dx
  4038e7:	cli    
  4038e8:	arpl   WORD PTR [eax+0x7b867a88],bp
  4038ee:	sub    al,0x69
  4038f0:	jno    0x4038b4
  4038f2:	mov    ebp,0x7c827864
  4038f7:	ret    0xa979
  4038fa:	add    ebp,DWORD PTR [edx]
  4038fc:	sub    DWORD PTR [eax-0x62d1e48c],eax
  403902:	inc    ebx
  403903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403904:	ficom  WORD PTR [ebx+eax*4-0x7c9f6b06]
  40390b:	jg     0x4038fd
  40390d:	loopne 0x4038b7
  40390f:	popa   
  403910:	shr    BYTE PTR [esi+0x4c],0x97
  403914:	xchg   ecx,eax
  403915:	inc    eax
  403916:	pop    edi
  403917:	clc    
  403918:	xchg   DWORD PTR [ebx+ecx*8+0x16],ecx
  40391c:	inc    edx
  40391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40391e:	mov    dl,0xe7
  403920:	and    ch,al
  403922:	jae    0x40396e
  403924:	jecxz  0x4038b2
  403926:	repnz sbb al,0xf
  403929:	cmp    cl,cl
  40392b:	adc    al,0x47
  40392d:	ror    BYTE PTR [ebx+0x42],cl
  403930:	sar    edx,1
  403932:	mov    al,0xc9
  403935:	loope  0x40398f
  403937:	inc    ebp
  403938:	push   ds
  403939:	cmp    ch,BYTE PTR [esi+0x5febd23e]
  40393f:	xchg   esi,eax
  403940:	popf   
  403941:	dec    edi
  403942:	mov    ds:0xadd6a14,eax
  403947:	test   al,0x2d
  403949:	cld    
  40394a:	pushf  
  40394b:	pusha  
  40394c:	push   es
  40394d:	jb     0x403938
  40394f:	aaa    
  403950:	data16 jnp 0x403921
  403953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403954:	inc    esi
  403955:	adc    BYTE PTR [eax+0x2a],bh
  403958:	sbb    al,0x9f
  40395a:	(bad)  
  40395b:	aam    0x14
  40395d:	cmp    edx,DWORD PTR [edx]
  40395f:	pop    ds
  403960:	jg     0x403927
  403962:	int3   
  403963:	push   0x3e
  403965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403966:	call   0x3583:0xd0e6a085
  40396d:	imul   ecx,DWORD PTR [edx-0x29],0xb6b021e7
  403974:	test   eax,esi
  403976:	xchg   ebx,eax
  403977:	pusha  
  403978:	pop    ebp
  403979:	xchg   ebx,eax
  40397a:	adc    ebx,DWORD PTR [esi]
  40397c:	sub    DWORD PTR [esi+ecx*2+0x22],ecx
  403980:	ficomp DWORD PTR [eax-0x5ba32a0c]
  403986:	cs dec esi
  403988:	cdq    
  403989:	test   al,0xaf
  40398b:	std    
  40398c:	mov    ecx,0xbea728ca
  403991:	sbb    edi,DWORD PTR [eax]
  403993:	mov    edx,0x1a018cff
  403998:	jl     0x403a18
  40399a:	push   ebx
  40399b:	jp     0x403a06
  40399d:	cwde   
  40399e:	xor    DWORD PTR [ebx],0xba3f7aa
  4039a4:	(bad)  
  4039a5:	repz ror BYTE PTR [ebp+0x47],cl
  4039a9:	mov    edi,0x38507ae1
  4039ae:	out    dx,al
  4039af:	addr16 sub eax,ebp
  4039b2:	nop
  4039b3:	mov    esi,ecx
  4039b5:	lods   eax,DWORD PTR ds:[esi]
  4039b6:	pop    ds
  4039b7:	fwait
  4039b8:	aad    0x70
  4039ba:	xor    al,0x37
  4039bc:	or     BYTE PTR [ecx-0x5b],ah
  4039bf:	xor    al,0x9f
  4039c1:	fisubr WORD PTR [eax]
  4039c3:	cmp    bl,BYTE PTR [eax+0x784aa0e0]
  4039c9:	into   
  4039ca:	jb     0x4039a9
  4039cc:	cmc    
  4039cd:	add    bl,ah
  4039cf:	mov    ebx,edx
  4039d1:	addr16 jno 0x40395e
  4039d4:	pushf  
  4039d5:	pop    ecx
  4039d6:	aaa    
  4039d7:	int3   
  4039d8:	jp     0x403986
  4039da:	es xchg ebx,eax
  4039dc:	cmp    DWORD PTR [ecx-0x438e6281],edi
  4039e2:	xor    eax,0xdb69865b
  4039e7:	lods   al,BYTE PTR ds:[esi]
  4039e8:	mov    edi,0x4efe6a28
  4039ed:	fwait
  4039ee:	ret    0xe347
  4039f1:	sub    DWORD PTR [ebx-0x46478fe0],edi
  4039f7:	rcl    DWORD PTR cs:[ebx+0x2c],cl
  4039fb:	mov    ebx,0xe7008bec
  403a00:	cwde   
  403a01:	cmovle esi,eax
  403a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a05:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403a07:	mov    ds:0xef4f9bf6,al
  403a0c:	retf   
  403a0d:	ins    BYTE PTR es:[edi],dx
  403a0e:	das    
  403a0f:	repnz not ecx
  403a12:	xlat   BYTE PTR ds:[ebx]
  403a13:	and    DWORD PTR [ecx],esp
  403a15:	jg     0x403a93
  403a17:	add    al,BYTE PTR [edx+0x54]
  403a1a:	jmp    0x95a5:0x2d586354
  403a21:	div    ebp
  403a23:	inc    eax
  403a24:	jne    0x403a0b
  403a26:	jb     0x403a56
  403a28:	xchg   edi,eax
  403a29:	dec    ebx
  403a2a:	and    DWORD PTR [edi+0x32],esi
  403a2d:	dec    esi
  403a2e:	mov    edi,0xb6328c4
  403a33:	or     DWORD PTR [edx+0x14e81890],0x27c77db1
  403a3d:	mov    cl,0x3c
  403a3f:	add    eax,0xa128b417
  403a44:	std    
  403a45:	int3   
  403a46:	and    BYTE PTR [ebx+eiz*4+0x35814846],al
  403a4d:	shr    DWORD PTR [edi-0x2d91fb4c],1
  403a53:	mov    esi,0xbd0adc3b
  403a58:	sahf   
  403a59:	push   cs
  403a5a:	jnp    0x4039dd
  403a5c:	xor    ch,BYTE PTR [esi+eiz*1]
  403a5f:	js     0x4039ef
  403a61:	xchg   ebx,eax
  403a62:	cmp    dl,BYTE PTR [eax]
  403a64:	pop    eax
  403a65:	push   es
  403a66:	mov    esp,0x6e581783
  403a6b:	(bad)  [esp+ebx*8-0x71ec852d]
  403a72:	lds    edx,FWORD PTR [ebp+0x67fc3807]
  403a78:	(bad)  
  403a7a:	loop   0x403a8f
  403a7c:	lock lods eax,DWORD PTR ds:[esi]
  403a7e:	xor    ebp,DWORD PTR [edx-0x5]
  403a81:	lea    ebx,[edi+0x133bdf27]
  403a87:	jp     0x403a31
  403a89:	jmp    0x6b2f:0x86f939a4
  403a90:	test   ebx,ebx
  403a92:	jb     0x403a46
  403a94:	fstp   st(4)
  403a96:	mov    ebx,0xd7c9882c
  403a9b:	jmp    0xe851:0x3c007dc0
  403aa2:	fld    TBYTE PTR [edx-0x5b]
  403aa5:	inc    ebp
  403aa6:	mov    ecx,0xa7ac3d1c
  403aab:	push   esp
  403aac:	nop
  403aad:	xchg   DWORD PTR [ebp+0x7b],edx
  403ab0:	repz inc esi
  403ab2:	fs jns 0x403b1d
  403ab5:	bound  ecx,QWORD PTR ds:0x2bc25b6d
  403abb:	xchg   ebp,eax
  403abc:	xor    ecx,ecx
  403abe:	mov    eax,0x63c1b01b
  403ac3:	pop    ebp
  403ac4:	dec    eax
  403ac5:	xor    bh,BYTE PTR [ecx+edx*2-0x6743ce52]
  403acc:	ret    0x26ad
  403acf:	jle    0x403a54
  403ad1:	push   0x6b03474e
  403ad6:	xor    DWORD PTR [esi],ebp
  403ad8:	shl    DWORD PTR [edi+0x4b2131ea],1
  403ade:	rol    BYTE PTR [ebx+0x73],1
  403ae1:	lods   eax,DWORD PTR ds:[esi]
  403ae2:	cmp    DWORD PTR [edx],esp
  403ae4:	push   edi
  403ae5:	jmp    0xc1da0618
  403aea:	out    0x7a,al
  403aec:	ds inc ebx
  403aee:	push   cs
  403aef:	test   DWORD PTR [ebx+0x679d7257],esp
  403af5:	sbb    al,0x46
  403af7:	lea    esp,[ebx+ebp*8-0xe]
  403afb:	jne    0x403b0e
  403afd:	or     BYTE PTR [ebx+0x47],0x63
  403b01:	adc    bh,BYTE PTR [esi]
  403b03:	loope  0x403b77
  403b05:	jge    0x403b15
  403b07:	jbe    0x403ab1
  403b09:	pushf  
  403b0a:	popa   
  403b0b:	xchg   edx,eax
  403b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b0d:	dec    ecx
  403b0e:	fnclex 
  403b10:	fisttp QWORD PTR [esi]
  403b12:	aaa    
  403b13:	out    dx,al
  403b14:	fs sbb al,0x69
  403b17:	jo     0x403b63
  403b19:	jo     0x403b57
  403b1b:	sub    DWORD PTR [edi+edx*8-0x3d],0x4adbea1e
  403b23:	inc    esi
  403b24:	add    eax,0x284de55f
  403b29:	jmp    0x3407669e
  403b2e:	(bad)  
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429c1f
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	fstp   QWORD PTR [edi-0x101d6d94]
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0xffffffbf
  403ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ca7:	iret   
  403ca8:	add    BYTE PTR [ebx+ebp*1+0x10267d5d],ah
  403caf:	cmp    al,0xf9
  403cb1:	daa    
  403cb2:	fisttp QWORD PTR fs:[esi+0x7ee30c63]
  403cb9:	test   DWORD PTR [ebx],esp
  403cbb:	cmp    BYTE PTR [eax+0x2cc02acf],al
  403cc1:	stos   DWORD PTR es:[edi],eax
  403cc2:	lods   al,BYTE PTR ds:[esi]
  403cc3:	sub    eax,DWORD PTR [edx]
  403cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cc6:	xchg   BYTE PTR [edi],bh
  403cc8:	mov    eax,ds:0x27130176
  403ccd:	dec    eax
  403cce:	xor    eax,0x3a7839ec
  403cd3:	jp     0x403cef
  403cd5:	add    BYTE PTR [esi-0x2d4a0145],bh
  403cdb:	pop    esi
  403cdc:	or     al,0xb3
  403cde:	cs push ebx
  403ce0:	retf   0xfc10
  403ce3:	pop    eax
  403ce4:	into   
  403ce5:	loopne 0x403c81
  403ce7:	pop    eax
  403ce8:	mov    eax,ds:0xcdd67e70
  403ced:	imul   DWORD PTR [ebx-0x3eabdf07]
  403cf3:	add    bh,0x54
  403cf6:	inc    edi
  403cf7:	sbb    al,0x7d
  403cf9:	inc    edx
  403cfa:	test   bh,dl
  403cfc:	scas   eax,DWORD PTR es:[edi]
  403cfd:	or     al,0xe7
  403cff:	mov    eax,ds:0x8f6e9d76
  403d04:	adc    BYTE PTR ds:0xe04b4b0b,dh
  403d0a:	cdq    
  403d0b:	mov    al,0xeb
  403d0d:	xchg   esp,eax
  403d0e:	add    esp,DWORD PTR [esi+0x2d]
  403d11:	dec    edx
  403d13:	scas   eax,DWORD PTR es:[edi]
  403d14:	test   DWORD PTR [ebx+ebx*1-0x34],ebx
  403d18:	pop    ecx
  403d19:	mov    ds:0x6c9d0388,al
  403d1e:	ror    DWORD PTR [eax],0x5f
  403d21:	ins    BYTE PTR es:[edi],dx
  403d22:	jne    0x403caa
  403d24:	jo     0x403d1a
  403d26:	jecxz  0x403cd7
  403d28:	ds pop edx
  403d2a:	cmp    BYTE PTR [edx-0x1a10adcc],0x8a
  403d31:	sub    eax,0xe6f4cb7e
  403d36:	xchg   edi,eax
  403d37:	es and al,0x12
  403d3a:	or     al,0xbe
  403d3c:	imul   esi,esp,0x403ef52d
  403d42:	retf   
  403d43:	test   al,0x4c
  403d45:	aad    0xe3
  403d47:	aas    
  403d48:	(bad)  
  403d49:	fdivr  st(1),st
  403d4b:	xlat   BYTE PTR ds:[ebx]
  403d4c:	inc    edi
  403d4d:	push   0x2e81d93a
  403d52:	sub    DWORD PTR [eax-0x2e87abc9],edx
  403d58:	scas   eax,DWORD PTR es:[edi]
  403d59:	retf   0x87ad
  403d5c:	sar    DWORD PTR [ecx+esi*2],1
  403d5f:	pop    edi
  403d60:	call   0x6df9:0x86494301
  403d67:	loope  0x403d6e
  403d69:	push   ebp
  403d6a:	in     eax,dx
  403d6b:	ins    BYTE PTR es:[edi],dx
  403d6c:	in     eax,0xda
  403d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d6f:	and    BYTE PTR [edi+eiz*8],bl
  403d72:	bound  esp,QWORD PTR [edx+0x67]
  403d75:	cmp    dl,ch
  403d77:	dec    ebp
  403d78:	aad    0x24
  403d7a:	iret   
  403d7b:	das    
  403d7c:	push   edi
  403d7d:	clc    
  403d7e:	pusha  
  403d7f:	or     eax,0x4abf6da9
  403d84:	imul   ebp,DWORD PTR [eax+ebx*2-0x5c],0xe44345cf
  403d8c:	ret    
  403d8d:	arpl   WORD PTR [edx-0x26],sp
  403d90:	test   edx,edx
  403d92:	and    bh,0xc1
  403d95:	scas   al,BYTE PTR es:[edi]
  403d96:	cmp    eax,0xd3d4bbc4
  403d9b:	addr16 out dx,al
  403d9d:	ins    DWORD PTR es:[edi],dx
  403d9e:	jg     0x403dbe
  403da0:	or     DWORD PTR [ecx+eax*4-0x51],ecx
  403da4:	adc    eax,0xd9ae4f2f
  403da9:	add    cl,BYTE PTR [edi+ebp*2+0x23]
  403dad:	hlt    
  403dae:	scas   eax,DWORD PTR es:[edi]
  403daf:	fsubr  QWORD PTR [esi]
  403db1:	lahf   
  403db2:	add    DWORD PTR [ecx],0xf11cdf9a
  403db8:	sbb    BYTE PTR [edx+0x3d],al
  403dbb:	jg     0x403d5f
  403dbd:	and    eax,0x30c11bfd
  403dc2:	dec    edi
  403dc3:	call   0x1237:0xf5b2f094
  403dca:	inc    esi
  403dcb:	(bad)  
  403dcc:	adc    BYTE PTR [ebp+0x2d1aa268],dl
  403dd2:	pop    eax
  403dd3:	push   ecx
  403dd4:	push   edi
  403dd5:	push   ecx
  403dd6:	add    DWORD PTR [eax-0x64],eax
  403dd9:	push   ecx
  403dda:	sub    al,0x1a
  403ddc:	lahf   
  403ddd:	dec    edx
  403dde:	add    BYTE PTR [eax],ah
  403de0:	pop    esp
  403de1:	mov    edx,0x8c5a40e4
  403de6:	dec    edi
  403de7:	jmp    0x403e3a
  403de9:	xlat   BYTE PTR ds:[ebx]
  403dea:	push   cs
  403deb:	ret    
  403dec:	sti    
  403ded:	repnz inc ebp
  403def:	pop    esp
  403df0:	outs   dx,DWORD PTR ds:[esi]
  403df1:	test   DWORD PTR [esi-0x5b402ce3],0xd5bfbc0f
  403dfb:	pop    ebx
  403dfc:	mov    al,0x69
  403dfe:	sub    DWORD PTR [edx-0x27d5bc3b],ebp
  403e04:	aaa    
  403e05:	iret   
  403e06:	cmp    edi,ebp
  403e08:	les    ebp,FWORD PTR [eax]
  403e0a:	sub    al,0x35
  403e0c:	mov    eax,0x848a04e4
  403e11:	addr16 in eax,0xef
  403e14:	imul   esp,DWORD PTR [ecx],0x5d1d3f46
  403e1a:	push   cs
  403e1b:	jne    0x403e43
  403e1d:	mov    dh,0xe7
  403e1f:	inc    edx
  403e20:	mov    ds,WORD PTR [eax-0xcdafd0b]
  403e26:	add    BYTE PTR [eax],cl
  403e28:	call   0xd1bce336
  403e2d:	icebp  
  403e2e:	xchg   esp,eax
  403e2f:	out    dx,al
  403e30:	xor    BYTE PTR [ebp-0x4bdb5ffb],ch
  403e36:	mov    ebx,edx
  403e38:	dec    esi
  403e39:	in     eax,dx
  403e3a:	inc    edi
  403e3b:	in     eax,0xba
  403e3d:	mov    esp,0x4d850fb
  403e42:	xchg   ebp,eax
  403e43:	push   ss
  403e44:	push   esi
  403e45:	pop    ebp
  403e46:	pop    ecx
  403e47:	or     edx,DWORD PTR [ebx]
  403e49:	add    al,0x28
  403e4b:	repnz sub eax,0x97312d4e
  403e51:	arpl   WORD PTR [edx-0x11],si
  403e54:	inc    ebx
  403e55:	lock repnz dec eax
  403e58:	jecxz  0x403df1
  403e5a:	mov    bl,0xe6
  403e5c:	cmp    eax,0x29e383bb
  403e61:	inc    esi
  403e62:	popa   
  403e63:	jne    0x403eb3
  403e65:	mov    ch,0x85
  403e67:	push   ebx
  403e68:	loope  0x403e10
  403e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e6b:	push   0x57f07223
  403e70:	jle    0x403e3b
  403e72:	jb     0x403eee
  403e74:	jo     0x403e4e
  403e76:	dec    eax
  403e77:	jmp    0x5437:0xa0ee6147
  403e7e:	loope  0x403e72
  403e80:	xchg   edx,eax
  403e81:	in     eax,0x90
  403e83:	xor    esi,DWORD PTR [eax-0x31]
  403e86:	sti    
  403e87:	sbb    BYTE PTR [edi+esi*4-0x56905278],cl
  403e8e:	push   ecx
  403e8f:	adc    BYTE PTR [ecx+0x38],cl
  403e92:	and    bl,bl
  403e94:	repnz mov eax,ds:0xff8e69e0
  403e9a:	mov    ebp,0x5eae3dc0
  403e9f:	aad    0x67
  403ea1:	shl    DWORD PTR [edi+0x2fc386bd],0x7b
  403ea8:	add    al,dh
  403eaa:	scas   eax,DWORD PTR es:[edi]
  403eab:	and    esp,DWORD PTR [esi-0x4b37618e]
  403eb1:	pushf  
  403eb2:	push   edx
  403eb3:	loope  0x403f2f
  403eb5:	push   edx
  403eb6:	lahf   
  403eb7:	add    DWORD PTR [ebp+0x13],esp
  403eba:	xor    al,0x5c
  403ebc:	shl    DWORD PTR [ebp+0x74],cl
  403ebf:	mov    ch,0x36
  403ec1:	outs   dx,DWORD PTR ds:[esi]
  403ec2:	mov    ds:0xab9b3048,al
  403ec7:	out    0x9c,al
  403ec9:	sbb    al,dh
  403ecb:	les    ebx,FWORD PTR [ebx-0x752cccf9]
  403ed1:	pop    ds
  403ed2:	add    al,0x7d
  403ed4:	mov    BYTE PTR [edi],al
  403ed6:	clc    
  403ed7:	(bad)  
  403ed8:	xor    dl,BYTE PTR [ecx+eax*4+0x8]
  403edc:	xchg   ecx,eax
  403edd:	call   0x90ddbacb
  403ee2:	add    al,0xa2
  403ee4:	repz es or eax,0xdd8bfd18
  403eeb:	ins    DWORD PTR es:[edi],dx
  403eec:	mov    BYTE PTR [edx+ecx*4+0x7f2b23c4],ch
  403ef3:	pop    ebx
  403ef4:	mov    esp,0xf35ff72f
  403ef9:	dec    esp
  403efa:	lea    ebx,[edx+0x23]
  403efd:	imul   esp,DWORD PTR [eax+0x6b],0xc5db535b
  403f04:	inc    eax
  403f05:	stc    
  403f06:	xlat   BYTE PTR ds:[ebx]
  403f07:	outs   dx,DWORD PTR ds:[esi]
  403f08:	push   esi
  403f09:	and    BYTE PTR [edi-0xe],dl
  403f0c:	jno    0x403ef0
  403f0e:	adc    BYTE PTR [eax*2-0x2d9eb223],0xbf
  403f16:	cmp    bh,ch
  403f18:	test   al,0xec
  403f1a:	mov    ds:0x580fb626,al
  403f1f:	pop    esi
  403f20:	outs   dx,DWORD PTR ds:[esi]
  403f21:	lods   eax,DWORD PTR ds:[esi]
  403f22:	ror    BYTE PTR [ecx+0x48],cl
  403f25:	test   esi,edi
  403f27:	xchg   edi,eax
  403f28:	or     bl,BYTE PTR [edx+0x5cc1c2a7]
  403f2e:	adc    DWORD PTR [eax],0xbb96fac4
  403f34:	inc    ebx
  403f35:	gs enter 0xe207,0x3a
  403f3a:	out    0xef,eax
  403f3c:	cdq    
  403f3d:	mul    DWORD PTR [ecx+eiz*2]
  403f40:	test   eax,0x1bb13bd9
  403f45:	cmc    
  403f46:	cld    
  403f47:	lahf   
  403f48:	fadd   st,st(4)
  403f4a:	and    dh,BYTE PTR [ecx]
  403f4c:	clc    
  403f4d:	stos   DWORD PTR es:[edi],eax
  403f4e:	dec    esp
  403f4f:	mov    dl,0xb7
  403f51:	xchg   ecx,eax
  403f52:	or     al,0x88
  403f54:	adc    ebp,esi
  403f56:	test   DWORD PTR [esi-0x2147d330],ecx
  403f5c:	mov    ds:0x73de2345,al
  403f61:	lahf   
  403f62:	rcl    DWORD PTR [ebp+0x43],1
  403f65:	jns    0x403f74
  403f67:	pop    esi
  403f68:	data16 scas al,BYTE PTR es:[edi]
  403f6a:	mov    esp,esp
  403f6c:	dec    ebp
  403f6d:	addr16 sbb al,0x6e
  403f70:	out    0x23,al
  403f72:	aas    
  403f73:	mov    al,ds:0xe5108638
  403f78:	test   DWORD PTR [edx],esi
  403f7a:	call   0xcd4d:0x7b06f0d2
  403f81:	pop    esp
  403f82:	sbb    edx,DWORD PTR [ebx+0x467d9732]
  403f88:	inc    esi
  403f89:	je     0x403ff0
  403f8b:	push   ebp
  403f8c:	adc    bl,0xc3
  403f8f:	xor    esi,edi
  403f91:	push   ebp
  403f92:	(bad)  
  403f93:	imul   esp,DWORD PTR [ecx+ecx*8-0x5b],0xffffffb6
  403f98:	mov    ds:0xff0998a,eax
  403f9d:	xchg   edx,eax
  403f9e:	jnp    0x403fec
  403fa0:	jmp    0xd222ec83
  403fa5:	enter  0x4877,0x68
  403fa9:	test   DWORD PTR [eax-0x66e51322],esi
  403faf:	sar    DWORD PTR [eax],0x9
  403fb2:	ds (bad) 
  403fb4:	cld    
  403fb5:	sub    ah,BYTE PTR [ebp+0x74]
  403fb8:	retf   
  403fb9:	cmp    edi,eax
  403fbb:	pop    edx
  403fbc:	das    
  403fbd:	cmp    DWORD PTR [ebx-0x72],eax
  403fc0:	jne    0x404014
  403fc2:	jecxz  0x403f99
  403fc4:	les    edx,FWORD PTR [edx]
  403fc6:	pop    es
  403fc7:	pop    ecx
  403fc8:	jl     0x403f76
  403fca:	fiadd  WORD PTR [ecx+0x5b]
  403fcd:	outs   dx,BYTE PTR ds:[esi]
  403fce:	xor    BYTE PTR [edi+0x35c7e689],dh
  403fd4:	popa   
  403fd5:	lahf   
  403fd6:	jne    0x403fa4
  403fd8:	inc    edi
  403fd9:	(bad)  
  403fda:	jbe    0x403fab
  403fdc:	in     al,0x5b
  403fde:	xor    esi,DWORD PTR [ecx-0x694d3cd0]
  403fe4:	sub    eax,0x43456d23
  403fe9:	cdq    
  403fea:	in     al,dx
  403feb:	jo     0x403fee
  403fed:	xor    BYTE PTR [ecx+ebp*8-0x5388d1a6],0xc2
  403ff5:	cs jl  0x403f8a
  403ff8:	cmp    ebx,DWORD PTR [eax+edi*4]
  403ffb:	xchg   edx,eax
  403ffc:	xchg   ecx,eax
  403ffd:	cmp    DWORD PTR [edi+0x6cf40630],0xba28e58c
  404007:	cmp    eax,0x3feffd57
  40400c:	adc    DWORD PTR ds:0x85319e90,0x8817143e
  404016:	mov    dl,0xdd
  404018:	push   ecx
  404019:	cs cdq 
  40401b:	ins    DWORD PTR es:[edi],dx
  40401c:	ss popa 
  40401e:	into   
  40401f:	clc    
  404020:	lods   al,BYTE PTR ds:[esi]
  404021:	xor    DWORD PTR [ecx+0x69eacbc5],esp
  404027:	xor    eax,0x9ba04c7e
  40402c:	mov    WORD PTR [ebx],ds
  40402e:	add    DWORD PTR [eax+0x51],edx
  404031:	aas    
  404032:	das    
  404033:	sub    BYTE PTR [edx],dh
  404035:	lahf   
  404036:	or     BYTE PTR [edi-0xc],0x79
  40403a:	in     al,0xc7
  40403c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40403d:	(bad)  
  40403e:	sti    
  40403f:	aad    0x37
  404041:	jb     0x404097
  404043:	dec    esi
  404044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404045:	rep lods al,BYTE PTR ss:[esi]
  404048:	icebp  
  404049:	sub    ch,al
  40404b:	fmulp  st(6),st
  40404d:	cmp    eax,ecx
  40404f:	jle    0x403fff
  404051:	or     edx,DWORD PTR [ecx+0x62]
  404054:	and    bh,BYTE PTR [esi]
  404056:	int    0x29
  404058:	pop    edx
  404059:	adc    DWORD PTR [esi+0x7e],ecx
  40405c:	shr    DWORD PTR [esi*1+0x7206b694],0xc7
  404064:	jmp    0x404026
  404066:	lds    ebx,FWORD PTR [edi-0x2c]
  404069:	inc    BYTE PTR [esp+eax*1]
  40406c:	sub    edx,0x63
  40406f:	sub    eax,0xf9836644
  404074:	push   cs
  404075:	sbb    esi,ebx
  404077:	hlt    
  404078:	mov    eax,ds:0x2d52deb0
  40407d:	push   0x17
  40407f:	pushf  
  404080:	sub    cl,BYTE PTR [edx-0x4f33c1f7]
  404086:	xchg   edx,eax
  404087:	test   BYTE PTR [ebx+0x41],ah
  40408a:	jnp    0x4040e7
  40408c:	fucomip st,st(5)
  40408e:	outs   dx,BYTE PTR ds:[esi]
  40408f:	out    0xc2,eax
  404091:	pop    ebx
  404092:	sub    al,0x51
  404094:	inc    edi
  404095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404096:	mov    dh,0xb1
  404098:	(bad)  
  404099:	xchg   si,ax
  40409b:	jg     0x40408d
  40409d:	mov    ebp,0x2ee782a9
  4040a2:	mov    al,ds:0x72bb4637
  4040a7:	push   esi
  4040a8:	pop    es
  4040a9:	fild   DWORD PTR ds:0xc45a3a98
  4040af:	leave  
  4040b0:	inc    eax
  4040b1:	rcr    DWORD PTR [edi+0x743202b8],cl
  4040b7:	xor    dl,BYTE PTR [eax*4-0x28b1f197]
  4040be:	icebp  
  4040bf:	gs clts 
  4040c2:	ret    
  4040c3:	pop    ecx
  4040c4:	fsubr  st,st(0)
  4040c6:	xor    ch,BYTE PTR [ecx+0xcc8acbe]
  4040cc:	test   DWORD PTR [esi],esp
  4040ce:	pop    esi
  4040cf:	cmp    DWORD PTR [ebx-0x6a],eax
  4040d2:	jl     0x40412c
  4040d4:	adc    ecx,DWORD PTR [edi+0x5]
  4040d7:	into   
  4040d8:	cdq    
  4040d9:	push   ecx
  4040da:	pushf  
  4040db:	adc    eax,0xe1ac08a6
  4040e0:	int3   
  4040e1:	mov    ds:0x63b5b4c5,eax
  4040e6:	addr16 dec esi
  4040e8:	jl     0x404151
  4040ea:	sub    edi,DWORD PTR [ecx+0x495e504]
  4040f0:	(bad)  
  4040f2:	push   esi
  4040f3:	inc    ecx
  4040f4:	push   esi
  4040f5:	mov    WORD PTR [edi-0x64],gs
  4040f8:	push   cs
  4040f9:	(bad)  
  4040fa:	lods   al,BYTE PTR ds:[esi]
  4040fb:	inc    ecx
  4040fc:	pop    ss
  4040fd:	jmp    FWORD PTR [eax]
  4040ff:	or     al,0x12
  404101:	xchg   bp,ax
  404103:	fs push es
  404105:	retf   0xa227
  404108:	jl     0x404159
  40410a:	push   edi
  40410b:	and    eax,0xb7d198a3
  404110:	lods   al,BYTE PTR ds:[esi]
  404111:	push   ecx
  404112:	repnz xor esi,edi
  404115:	int3   
  404116:	(bad)  
  404117:	ret    
  404118:	repz fincstp 
  40411b:	xchg   ebp,eax
  40411c:	cli    
  40411d:	(bad)  
  40411e:	mov    dh,0xd8
  404120:	dec    ecx
  404121:	cwde   
  404122:	adc    DWORD PTR [edx+0x4b],edx
  404125:	dec    ecx
  404126:	and    dl,BYTE PTR [ebp-0x40]
  404129:	xor    ch,BYTE PTR [edi+eiz*8-0x76]
  40412d:	sbb    eax,DWORD PTR [edx+0x17611959]
  404133:	cmp    al,0x37
  404135:	scas   al,BYTE PTR es:[edi]
  404136:	jge    0x4040e0
  404138:	add    al,0x38
  40413a:	or     BYTE PTR [esi],0xff
  40413d:	xchg   esi,eax
  40413e:	sub    BYTE PTR [ebx+0xc5e71a8],dh
  404144:	jl     0x404135
  404146:	inc    ecx
  404147:	mov    dl,0xe5
  404149:	add    cl,BYTE PTR [esi]
  40414b:	mov    esi,0xc6d5a8d4
  404150:	and    eax,0x9555135f
  404155:	stc    
  404156:	fcomp  QWORD PTR [eax]
  404158:	cmp    eax,DWORD PTR [ebp+0x779a49f7]
  40415e:	(bad)  [ecx]
  404160:	inc    esp
  404161:	shr    al,cl
  404163:	jbe    0x404138
  404165:	sub    edi,DWORD PTR ds:0xe0a8e6c9
  40416b:	inc    ebp
  40416c:	dec    edi
  40416d:	adc    esp,DWORD PTR [ebp-0x50881912]
  404173:	cmp    DWORD PTR [ecx-0x7b0f612c],ebx
  404179:	dec    edi
  40417a:	xor    eax,0xdbd3491b
  40417f:	or     eax,0x6058569c
  404184:	mov    DWORD PTR [ecx+eiz*1-0x510f23cd],ebp
  40418b:	(bad)  
  40418c:	hlt    
  40418d:	adc    eax,0xa30af2b9
  404192:	xlat   BYTE PTR ds:[ebx]
  404193:	fmul   QWORD PTR [esi+0x79af50f1]
  404199:	out    0x96,eax
  40419b:	jge    0x4041ef
  40419d:	jb     0x404135
  40419f:	rcl    BYTE PTR [esi],0x18
  4041a2:	(bad)  
  4041a3:	in     al,dx
  4041a4:	push   esp
  4041a5:	aam    0x50
  4041a7:	sub    al,0x44
  4041a9:	scas   eax,DWORD PTR es:[edi]
  4041aa:	xchg   esp,eax
  4041ab:	repz jmp 0xd0c8:0xdf90d23d
  4041b3:	inc    ebx
  4041b4:	cld    
  4041b5:	pop    ds
  4041b6:	jmp    0x14f4bca2
  4041bb:	mov    dh,0x8d
  4041bd:	xchg   ebx,eax
  4041be:	mov    edi,0x183e017e
  4041c3:	daa    
  4041c4:	shl    DWORD PTR [esi+0x4d1d4d88],cl
  4041ca:	div    BYTE PTR [ecx]
  4041cc:	(bad)  
  4041cd:	test   eax,0xabdba35c
  4041d2:	dec    eax
  4041d3:	and    cl,BYTE PTR [esi]
  4041d5:	add    DWORD PTR [eax-0x64],ecx
  4041d8:	daa    
  4041d9:	mov    ebx,0x90254db3
  4041de:	ja     0x404178
  4041e0:	or     al,0xb4
  4041e2:	mov    WORD PTR [edi+0x15f18324],cs
  4041e8:	mov    ch,0x54
  4041ea:	xchg   ebp,eax
  4041eb:	in     eax,0xc3
  4041ed:	fbstp  TBYTE PTR [edx+0x6]
  4041f0:	pushf  
  4041f1:	lock sbb BYTE PTR [ebx+0x6d],ah
  4041f5:	push   0xa
  4041f7:	inc    esp
  4041f8:	mov    bl,dh
  4041fa:	inc    edi
  4041fb:	es cmp al,0xc8
  4041fe:	add    al,0xf5
  404200:	xchg   ebx,eax
  404201:	xor    DWORD PTR [edi-0x72e3c617],esp
  404207:	ss in  eax,0xae
  40420a:	adc    BYTE PTR [edi-0x4f8babba],al
  404210:	dec    esi
  404211:	mov    ds:0x25257fca,eax
  404216:	fdivr  DWORD PTR [ebx+0x2a]
  404219:	adc    BYTE PTR [edx+0x17],bh
  40421c:	mov    ecx,0xf7549406
  404221:	and    al,0x2
  404223:	cmp    al,0xcf
  404225:	mov    WORD PTR [ebp-0x6e6402b8],?
  40422b:	mov    WORD PTR [edx+eiz*8+0x18],gs
  40422f:	push   edx
  404230:	clc    
  404231:	fidiv  WORD PTR [eax-0x6a]
  404234:	or     DWORD PTR [eax-0x68],ecx
  404237:	stos   BYTE PTR es:[edi],al
  404238:	test   DWORD PTR [ecx-0x26],eax
  40423b:	xchg   ebp,eax
  40423c:	or     cl,BYTE PTR [edx+0x6a]
  40423f:	outs   dx,BYTE PTR ds:[esi]
  404240:	shl    DWORD PTR [ebp+edx*4+0x632a06a7],cl
  404247:	inc    ecx
  404248:	cdq    
  404249:	sar    DWORD PTR [ebp-0x2e8d70c0],cl
  40424f:	push   edx
  404250:	mov    ds:0x6d60b552,al
  404255:	and    BYTE PTR [ecx-0x24fd314],cl
  40425b:	and    dl,BYTE PTR [eax+0x54]
  40425e:	xor    dh,0x48
  404261:	inc    DWORD PTR [ebx+0x45]
  404264:	sti    
  404265:	ins    BYTE PTR es:[edi],dx
  404266:	ja     0x404221
  404268:	shl    esi,0xa4
  40426b:	cmp    BYTE PTR ds:0x13d4f0a8,al
  404271:	shl    bl,cl
  404273:	inc    ebx
  404274:	jnp    0x404209
  404276:	push   cs
  404277:	xchg   ecx,eax
  404278:	push   edi
  404279:	sub    eax,0xb0b583b1
  40427e:	(bad)  
  40427f:	inc    eax
  404280:	sbb    dh,dl
  404282:	dec    ecx
  404283:	mov    ds:0x1f3a504f,eax
  404288:	or     ebx,ecx
  40428a:	cmovb  edi,DWORD PTR [ebx-0x1ecf676f]
  404291:	fiadd  DWORD PTR [eax+0x2ba3c09b]
  404297:	pop    esi
  404298:	xchg   edx,eax
  404299:	inc    ecx
  40429a:	ja     0x4042f6
  40429c:	inc    esp
  40429d:	and    ecx,esi
  40429f:	or     BYTE PTR [ecx],ah
  4042a1:	retf   0x274d
  4042a4:	in     eax,0x24
  4042a6:	out    dx,al
  4042a7:	inc    edx
  4042a8:	push   esi
  4042a9:	jge    0x4042f4
  4042ab:	cmc    
  4042ac:	pop    ecx
  4042ad:	stc    
  4042ae:	jae    0x404250
  4042b0:	fild   DWORD PTR [ecx+0xf]
  4042b3:	or     DWORD PTR [ebx+0xea0476],0x76
  4042ba:	adc    al,0x70
  4042bc:	int3   
  4042bd:	jno    0x404318
  4042bf:	dec    edx
  4042c0:	xchg   DWORD PTR [ebx-0x3f],ebx
  4042c3:	ror    BYTE PTR [esi-0x4e13da6c],1
  4042c9:	test   eax,0xd2a4e474
  4042ce:	and    DWORD PTR [ebp-0x55],esi
  4042d1:	stos   DWORD PTR es:[edi],eax
  4042d2:	adc    edx,esi
  4042d4:	fs ror eax,cl
  4042d7:	es into 
  4042d9:	jb     0x4042c9
  4042db:	sar    DWORD PTR [ebp+0x6d],1
  4042de:	out    0xdb,eax
  4042e0:	pop    es
  4042e1:	repnz rol DWORD PTR [esp+ecx*1-0x70],cl
  4042e6:	or     al,0xf2
  4042e8:	mov    ?,WORD PTR [edx]
  4042ea:	(bad)  
  4042eb:	imul   ebx,DWORD PTR [edi-0x650b38eb],0x66e44b40
  4042f5:	arpl   WORD PTR [edi+ebx*4-0x1c],si
  4042f9:	shl    BYTE PTR [esp+ecx*2+0x35f8e20a],0xcc
  404301:	or     eax,0x5550e5d2
  404306:	sbb    DWORD PTR [edi],eax
  404308:	je     0x40436c
  40430a:	add    BYTE PTR [ebp+0x6],0xaa
  40430e:	test   ecx,esp
  404310:	call   0xa7a15f55
  404315:	mov    ebp,0x6582a279
  40431a:	out    0x45,eax
  40431c:	frstor [ebx+0xefe21bf]
  404322:	retf   
  404323:	mov    bh,0x48
  404325:	jno    0x4042c8
  404327:	nop
  404328:	gs xchg esp,eax
  40432a:	and    DWORD PTR [esi],edi
  40432c:	sbb    BYTE PTR [ebx-0x7f],cl
  40432f:	test   eax,0x44c97565
  404334:	ins    DWORD PTR es:[edi],dx
  404335:	hlt    
  404336:	mov    ah,0xd2
  404338:	add    eax,0x8ddb001d
  40433d:	(bad)  
  40433f:	push   eax
  404340:	jbe    0x404393
  404342:	xchg   edi,eax
  404343:	push   esp
  404344:	add    ebx,DWORD PTR [esi-0x796c3af7]
  40434a:	ins    BYTE PTR es:[edi],dx
  40434b:	pop    ss
  40434c:	add    ecx,DWORD PTR [ebx-0x1d7b12f8]
  404352:	push   ebp
  404353:	dec    esi
  404354:	lahf   
  404355:	mov    ecx,0x5610a0cb
  40435a:	fnstsw WORD PTR [ecx]
  40435c:	sub    eax,0x2803b27
  404361:	xor    al,0xbd
  404363:	daa    
  404364:	cmp    al,0xcd
  404366:	stc    
  404367:	and    DWORD PTR [ebx+0x26bd8ab2],ebx
  40436d:	imul   ecx,DWORD PTR [esi],0x9
  404370:	or     al,BYTE PTR [esi-0x31]
  404373:	xchg   BYTE PTR [ebx],ch
  404375:	xchg   ebx,eax
  404376:	pop    eax
  404377:	xchg   DWORD PTR [esi-0x7942b87b],edx
  40437d:	and    eax,0x3682d06
  404382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404383:	int    0x8
  404385:	jmp    0x4043ad
  404387:	fisttp DWORD PTR [ebx-0x2f19fbc8]
  40438d:	and    ah,BYTE PTR [edi-0x77]
  404390:	inc    edx
  404391:	test   al,0x47
  404393:	lahf   
  404394:	sbb    DWORD PTR [ebp+0x27b997a4],0xb6b922c3
  40439e:	ror    esi,0x64
  4043a1:	jl     0x4043d9
  4043a3:	xchg   esi,eax
  4043a4:	ret    0xd703
  4043a7:	dec    edx
  4043a8:	mov    WORD PTR ds:0x7cf55c13,?
  4043ae:	mov    ebp,0xd8c548be
  4043b3:	xchg   ebx,eax
  4043b4:	add    dh,BYTE PTR [edi]
  4043b6:	sub    esi,edi
  4043b8:	or     DWORD PTR [esi],esi
  4043ba:	sub    ah,BYTE PTR [edi-0x6b2c183c]
  4043c0:	xchg   BYTE PTR [ecx-0x55f6582a],bh
  4043c6:	mov    bh,cl
  4043c8:	mov    esi,0xaf5a4b5e
  4043cd:	xchg   edx,eax
  4043ce:	arpl   WORD PTR [ecx],dx
  4043d0:	enter  0x9144,0xa0
  4043d4:	jbe    0x4043ec
  4043d6:	or     ecx,DWORD PTR [ebx]
  4043d8:	add    esp,DWORD PTR [esp+edi*1-0x33]
  4043dc:	test   BYTE PTR [edx],cl
  4043de:	(bad)  
  4043df:	xor    cl,BYTE PTR [ecx+0x69dc9ad7]
  4043e5:	pusha  
  4043e6:	jo     0x404396
  4043e8:	in     eax,dx
  4043e9:	jl     0x4043f0
  4043eb:	stos   BYTE PTR es:[edi],al
  4043ec:	div    DWORD PTR [ebp-0x20]
  4043ef:	lock (bad) 
  4043f1:	mov    dh,0x7
  4043f3:	(bad)  
  4043f4:	jnp    0x4043ae
  4043f6:	ret    
  4043f7:	loope  0x404383
  4043f9:	pop    edi
  4043fa:	fsubr  st(1),st
  4043fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043fd:	push   0x7b
  4043ff:	push   ebp
  404400:	popf   
  404401:	or     eax,0x4d8e716a
  404406:	shl    BYTE PTR [edx-0x6b],1
  404409:	dec    esp
  40440a:	xor    dl,bl
  40440c:	(bad)  
  40440d:	fwait
  40440e:	sbb    esp,DWORD PTR [esi]
  404410:	cmp    DWORD PTR [ebp+ebx*2-0x8df37c3],0x694d0a51
  40441b:	pop    eax
  40441c:	inc    edi
  40441d:	cmovge edx,DWORD PTR gs:[ecx+0x11]
  404422:	push   eax
  404423:	dec    edi
  404424:	rol    DWORD PTR [ebp-0x1e128868],cl
  40442a:	jecxz  0x40444f
  40442c:	sub    ecx,ebx
  40442e:	inc    ecx
  40442f:	ret    
  404430:	jb     0x4043f6
  404432:	ja     0x404429
  404434:	push   es
  404435:	das    
  404436:	fisub  WORD PTR [ecx+ebx*2+0x5e]
  40443a:	sbb    al,0x74
  40443c:	cli    
  40443d:	aaa    
  40443e:	lods   al,BYTE PTR ds:[esi]
  40443f:	push   esp
  404440:	popf   
  404441:	inc    ebp
  404442:	dec    esp
  404443:	mov    ds:0xbf5461b4,eax
  404448:	sub    eax,0xf19c52e4
  40444d:	adc    BYTE PTR [ebp-0x37],ch
  404450:	sbb    edi,DWORD PTR [ebx+0x4e]
  404453:	push   ebx
  404454:	loop   0x4044bf
  404456:	or     DWORD PTR [ebp+0x0],ebx
  404459:	jmp    0x404432
  40445b:	outs   dx,DWORD PTR ds:[esi]
  40445c:	sti    
  40445d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40445e:	fcomp  QWORD PTR [ecx+0x7ee7d065]
  404464:	push   0xb3054801
  404469:	dec    DWORD PTR [edi+0x2240c1d5]
  40446f:	xchg   dl,bh
  404471:	mov    DWORD PTR [ebx+0x1a],0xabb377f4
  404478:	jne    0x4044cf
  40447a:	jno    0x4044c0
  40447c:	retf   
  40447d:	repnz div BYTE PTR [ebx]
  404480:	gs repz and eax,0x73e2349f
  404487:	pusha  
  404488:	out    dx,eax
  404489:	or     eax,0x443133f
  40448e:	sub    bl,BYTE PTR ds:0x3faa27e3
  404494:	jl     0x404502
  404496:	pop    ecx
  404497:	and    ebx,DWORD PTR [ebp+0x14627f08]
  40449d:	out    0x4e,al
  40449f:	mov    esp,0x8331d685
  4044a4:	mov    dh,0x5f
  4044a6:	jnp    0x4044fa
  4044a8:	mov    fs,esp
  4044aa:	or     eax,0xe4364928
  4044af:	pop    edi
  4044b0:	adc    al,0x5
  4044b2:	div    BYTE PTR [ebx+0x36]
  4044b5:	aad    0x9d
  4044b7:	cmp    dl,BYTE PTR [eax+0x4ec38079]
  4044bd:	jbe    0x404526
  4044bf:	call   0x96a2:0xab9e1a12
  4044c6:	add    bl,BYTE PTR [ecx-0x24]
  4044c9:	cdq    
  4044ca:	cmp    BYTE PTR [ebp-0x40],bh
  4044cd:	mov    cl,0x30
  4044cf:	mov    dl,0x4c
  4044d1:	cmp    ah,BYTE PTR [esi-0x2a3e86bf]
  4044d7:	leave  
  4044d8:	xchg   esi,eax
  4044d9:	xchg   ebx,eax
  4044da:	inc    esi
  4044db:	mov    edx,0xd08d4e13
  4044e1:	inc    edi
  4044e2:	div    BYTE PTR [esi-0xc2b5740]
  4044e8:	lock dec esi
  4044ea:	pop    edx
  4044eb:	icebp  
  4044ec:	sbb    DWORD PTR [esi],edx
  4044ee:	jecxz  0x4044e9
  4044f0:	mov    esp,0x4645c1cc
  4044f5:	pop    ebp
  4044f6:	loope  0x4044db
  4044f8:	adc    BYTE PTR [eax],al
  4044fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044fb:	loopne 0x404555
  4044fd:	fnstenv [ecx-0x73f66010]
  404503:	outs   dx,DWORD PTR ds:[esi]
  404504:	gs mov ch,0xd1
  404507:	in     al,dx
  404508:	mov    al,0xf3
  40450a:	jmp    FWORD PTR [ecx+eiz*8]
  40450d:	arpl   WORD PTR [ecx+0x57693342],bp
  404513:	fwait
  404514:	dec    edx
  404515:	(bad)  
  404516:	pop    edi
  404517:	in     eax,0x48
  404519:	pop    ss
  40451a:	ins    BYTE PTR es:[edi],dx
  40451b:	imul   esp,ecx,0x52c82bbb
  404521:	sbb    al,BYTE PTR [edi-0x47]
  404524:	sti    
  404525:	cmp    dl,BYTE PTR [eax]
  404527:	ss fcmovb st,st(1)
  40452a:	push   0xf39ab3eb
  40452f:	hlt    
  404530:	cmp    BYTE PTR [ebx+edi*4],ah
  404533:	ins    DWORD PTR es:[edi],dx
  404534:	int    0xb
  404536:	and    eax,0xe55517d8
  40453b:	jecxz  0x4044c2
  40453d:	imul   edi,DWORD PTR [edx+0x24],0x2d
  404541:	cdq    
  404542:	add    al,0xe9
  404544:	imul   eax,eax,0xb1fd397c
  40454a:	bound  esp,QWORD PTR [ecx]
  40454c:	mov    al,ds:0xca56ad39
  404551:	ins    DWORD PTR es:[edi],dx
  404552:	(bad)  
  404553:	sar    DWORD PTR [eax+0x1a],cl
  404556:	mov    ecx,0xdf75d56a
  40455b:	jmp    0xb8ccf7a6
  404560:	ins    BYTE PTR es:[edi],dx
  404561:	cmp    ah,BYTE PTR [ecx-0x31]
  404564:	je     0x40459f
  404566:	push   ebx
  404567:	jl     0x404579
  404569:	push   ebx
  40456a:	test   eax,eax
  40456c:	inc    esp
  40456d:	fmul   QWORD PTR [eax+0x2492b10f]
  404573:	cmp    eax,0x98c7e9f9
  404578:	sub    al,0x29
  40457a:	out    dx,al
  40457b:	stos   BYTE PTR es:[edi],al
  40457c:	jle    0x4045fc
  40457e:	les    esp,FWORD PTR [edx+0x5ad3d1e8]
  404584:	fs (bad) 
  404586:	dec    ah
  404588:	pop    ds
  404589:	pushf  
  40458a:	inc    edi
  40458b:	sar    DWORD PTR [ebp+0x7eee62c7],1
  404591:	pushf  
  404592:	lods   al,BYTE PTR ds:[esi]
  404593:	rcr    BYTE PTR [ecx+ecx*2],1
  404596:	mov    esi,0x345d5169
  40459b:	sub    ebp,0xffffffbf
  40459e:	gs inc eax
  4045a0:	imul   ebx,edi,0xffffffeb
  4045a3:	xor    eax,0xd16043d0
  4045a8:	or     al,BYTE PTR [edx]
  4045aa:	xchg   esp,eax
  4045ab:	jle    0x404568
  4045ad:	pop    ebp
  4045ae:	dec    esi
  4045af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045b0:	and    DWORD PTR [edi+0x7c],edi
  4045b3:	xchg   edx,eax
  4045b4:	arpl   WORD PTR [edx],ax
  4045b6:	mov    ds:0x96c64c54,eax
  4045bb:	popf   
  4045bc:	push   0x2e
  4045be:	les    esp,FWORD PTR [ebx]
  4045c0:	cmp    al,0xe
  4045c2:	cdq    
  4045c3:	stos   DWORD PTR es:[edi],eax
  4045c4:	cmp    ch,BYTE PTR [edi+0x1]
  4045c7:	adc    DWORD PTR [edi-0x30599a13],ebp
  4045cd:	pop    ebp
  4045ce:	xor    BYTE PTR [ebx-0x78],cl
  4045d1:	add    al,BYTE PTR ds:[esi]
  4045d4:	js     0x4045b5
  4045d6:	push   0x3e6e6ec4
  4045db:	pop    ss
  4045dc:	rol    bh,cl
  4045de:	stos   BYTE PTR es:[edi],al
  4045df:	pop    ebp
  4045e0:	inc    eax
  4045e1:	xor    DWORD PTR [esi-0x46c2644b],edi
  4045e7:	push   esi
  4045e8:	xchg   BYTE PTR [edi],dh
  4045ea:	pop    ecx
  4045eb:	xchg   ecx,eax
  4045ec:	cmp    eax,0x2b4e0987
  4045f1:	and    al,0x1e
  4045f3:	into   
  4045f4:	jmp    0xf436:0xcc98cccb
  4045fb:	aaa    
  4045fc:	out    dx,eax
  4045fd:	pop    ebx
  4045fe:	jmp    0xbd6c0213
  404603:	int    0x7f
  404605:	jg     0x40460f
  404607:	idiv   BYTE PTR [ecx-0x73146962]
  40460d:	mov    ebp,DWORD PTR [eax]
  40460f:	mov    eax,ds:0x53e562ee
  404614:	xchg   esp,eax
  404615:	pusha  
  404616:	daa    
  404617:	in     eax,dx
  404618:	or     BYTE PTR [edi+0x1d],bl
  40461b:	das    
  40461c:	into   
  40461d:	daa    
  40461e:	xor    edx,edx
  404620:	aad    0xa5
  404622:	push   ds
  404623:	mov    edi,DWORD PTR ds:0xc019455e
  404629:	addr16 push esi
  40462b:	cmp    al,0x24
  40462d:	jbe    0x4045d1
  40462f:	mov    edx,0x854513d8
  404634:	daa    
  404635:	sbb    eax,0x6773042f
  40463a:	add    dh,dl
  40463c:	inc    ebp
  40463d:	xor    BYTE PTR [esi-0x712afc85],al
  404643:	pop    esp
  404644:	cwde   
  404645:	loopne 0x404634
  404647:	(bad)  
  40464b:	call   0x44b5:0xa5d4449a
  404652:	(bad)
  404656:	sub    esi,DWORD PTR [esi]
  404658:	arpl   WORD PTR ds:0x29b42212,si
  40465e:	gs (bad) 
  404660:	xlat   BYTE PTR ds:[ebx]
  404661:	or     al,BYTE PTR [esi+0x9]
  404664:	dec    esp
  404665:	pop    edi
  404666:	cmp    ecx,edi
  404668:	jg     0x404662
  40466a:	pop    esi
  40466b:	arpl   WORD PTR [ebp+0x5a],sp
  40466e:	xchg   ebx,eax
  40466f:	imul   ecx,ebx,0xffffffa6
  404672:	jmp    0x404635
  404674:	xlat   BYTE PTR ds:[ebx]
  404675:	xor    eax,0xf58049a6
  40467a:	in     eax,0xd7
  40467c:	test   eax,0xf01feb5e
  404681:	pop    edx
  404682:	es ja  0x404697
  404685:	jae    0x4046e6
  404687:	neg    DWORD PTR [ecx-0x53]
  40468a:	fdiv   QWORD PTR [ecx-0xa]
  40468d:	xchg   DWORD PTR [edx],ebx
  40468f:	or     dl,BYTE PTR [eax+esi*4]
  404692:	outs   dx,DWORD PTR ds:[esi]
  404693:	stos   DWORD PTR es:[edi],eax
  404694:	ret    
  404695:	int    0x16
  404697:	dec    ebx
  404698:	add    BYTE PTR [edi+0x652d46be],dh
  40469e:	or     eax,0x74f28724
  4046a3:	pop    ds
  4046a4:	das    
  4046a5:	and    al,0x37
  4046a7:	in     eax,dx
  4046a8:	mov    DWORD PTR [esp+eax*1],ecx
  4046ab:	(bad)  
  4046ae:	mov    bh,0x46
  4046b0:	xchg   ebx,eax
  4046b1:	sbb    ebx,edx
  4046b3:	enter  0x6d75,0x7
  4046b7:	out    0x1c,al
  4046b9:	xor    BYTE PTR [eax-0x3652a1c5],cl
  4046bf:	in     eax,0x88
  4046c1:	fdiv   DWORD PTR [edx]
  4046c3:	popa   
  4046c4:	in     eax,dx
  4046c5:	aam    0x2c
  4046c7:	cdq    
  4046c8:	xor    al,0x49
  4046ca:	adc    DWORD PTR [ecx-0x1c5ac976],edi
  4046d0:	mov    ah,0x2f
  4046d2:	loop   0x4046e1
  4046d4:	cmc    
  4046d5:	into   
  4046d6:	dec    ebp
  4046d7:	push   cs
  4046d8:	push   es
  4046d9:	sbb    eax,eax
  4046db:	cmp    bl,BYTE PTR [edi]
  4046dd:	push   esi
  4046de:	sbb    DWORD PTR [eax-0x55],edx
  4046e1:	ins    BYTE PTR es:[edi],dx
  4046e2:	add    edi,DWORD PTR [ebx+0x3a4d6ee1]
  4046e8:	xchg   edx,eax
  4046e9:	and    dl,BYTE PTR [ecx+0x72]
  4046ec:	sti    
  4046ed:	test   BYTE PTR [ebx],dl
  4046ef:	adc    ebx,DWORD PTR [ecx+eiz*8+0x6c]
  4046f3:	push   ss
  4046f4:	stc    
  4046f5:	imul   esi,DWORD PTR [edi-0x7f9a2a38],0x18
  4046fc:	mov    esp,0xc194e37a
  404701:	pop    ds
  404702:	mov    fs,WORD PTR [edx]
  404704:	jg     0x404776
  404706:	mov    edi,0x51758365
  40470b:	jbe    0x404764
  40470d:	lea    esi,[edi+ebx*8]
  404710:	out    0xa0,eax
  404712:	cmp    eax,0xacc81b6f
  404717:	dec    edx
  404718:	int    0x9c
  40471a:	mov    ?,WORD PTR [ebx]
  40471c:	(bad)  
  40471d:	imul   ebx,DWORD PTR [ecx+0x73],0x57
  404721:	outs   dx,BYTE PTR ds:[esi]
  404722:	dec    esi
  404723:	mov    ds:0x714f9e01,al
  404728:	hlt    
  404729:	dec    esp
  40472a:	(bad)  
  40472b:	rcl    esp,1
  40472d:	xor    bh,al
  40472f:	adc    al,0x9e
  404731:	adc    eax,0x9f37f3d8
  404736:	mov    esp,0x43e32152
  40473b:	and    eax,0x48f1b5f1
  404740:	inc    esi
  404741:	loopne 0x4046f2
  404743:	and    al,BYTE PTR [edx+0x1d]
  404746:	pop    ebp
  404747:	xor    bh,al
  404749:	pop    edi
  40474a:	pop    ebp
  40474b:	ss jmp 0x40472b
  40474e:	ret    
  40474f:	and    al,0x31
  404751:	popa   
  404752:	or     ecx,DWORD PTR [ebp+0x719e344d]
  404758:	lods   al,BYTE PTR ds:[esi]
  404759:	adc    eax,0xfdf1d218
  40475e:	sbb    eax,0x939caa1a
  404763:	xor    dl,bh
  404765:	xchg   ebp,eax
  404766:	mov    BYTE PTR [edx+0x3c2a2484],0x24
  40476d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40476e:	(bad)  
  404770:	adc    dh,cl
  404772:	adc    dl,dl
  404774:	in     eax,dx
  404775:	dec    edx
  404776:	icebp  
  404777:	pop    edi
  404778:	mov    al,ds:0xc40631e6
  40477d:	sub    DWORD PTR [ebp+0x3eb41fe],0x8822bb60
  404787:	fiadd  DWORD PTR [ecx-0x68380de2]
  40478d:	push   edx
  40478e:	mov    dh,0x21
  404790:	inc    edx
  404791:	inc    ecx
  404792:	adc    dl,BYTE PTR [eax-0x1d]
  404795:	shl    BYTE PTR ds:0xc22833f0,1
  40479b:	aas    
  40479c:	cmp    ecx,DWORD PTR [ecx]
  40479e:	ret    0xb117
  4047a1:	fisub  WORD PTR [esp+ebp*8+0x24155718]
  4047a8:	out    0x9c,eax
  4047aa:	sub    al,0xf8
  4047ac:	mov    eax,0x5f5996b9
  4047b1:	stos   BYTE PTR es:[edi],al
  4047b2:	add    esi,DWORD PTR [esi-0x2b]
  4047b5:	lds    eax,FWORD PTR [esi-0x3d]
  4047b8:	or     BYTE PTR [esi+0x3b],0x4e
  4047bc:	dec    ebx
  4047bd:	push   es
  4047be:	sbb    DWORD PTR [edi-0x138c14b9],esp
  4047c4:	in     al,dx
  4047c5:	sbb    dl,dh
  4047c7:	outs   dx,BYTE PTR ds:[esi]
  4047c8:	dec    al
  4047ca:	sbb    BYTE PTR [edi],bh
  4047cc:	pop    ss
  4047cd:	int    0xe8
  4047cf:	loopne 0x404776
  4047d1:	(bad)  
  4047d2:	icebp  
  4047d3:	sbb    cl,dh
  4047d5:	pop    ss
  4047d6:	pusha  
  4047d7:	mov    al,ds:0x4ab75fd2
  4047dc:	sar    BYTE PTR [edx-0x7e9721d7],cl
  4047e2:	popa   
  4047e3:	idiv   ah
  4047e5:	or     ecx,DWORD PTR [eax-0x3c504c92]
  4047eb:	and    eax,0x7c484c0c
  4047f0:	test   eax,0xfd2eeca5
  4047f5:	push   edi
  4047f6:	out    0x7,eax
  4047f8:	neg    DWORD PTR [ebx]
  4047fa:	fld    TBYTE PTR [edx-0x73]
  4047fd:	out    0xea,eax
  4047ff:	and    DWORD PTR [ecx],eax
  404801:	stos   BYTE PTR es:[edi],al
  404802:	lods   eax,DWORD PTR ds:[esi]
  404803:	aaa    
  404804:	dec    edi
  404805:	jo     0x4047b7
  404807:	mov    bh,0xcc
  404809:	adc    dh,ch
  40480b:	cli    
  40480c:	por    mm4,QWORD PTR [edx-0x95bd135]
  404813:	sahf   
  404814:	inc    ebx
  404815:	mov    dh,0x6e
  404817:	add    bl,BYTE PTR [ecx+0x7a9671b9]
  40481d:	inc    esp
  40481e:	push   esp
  40481f:	mov    edx,0x504415f1
  404824:	add    cl,cl
  404826:	sub    eax,DWORD PTR [ebx-0x3d206371]
  40482c:	mov    ch,0x8f
  40482e:	push   ecx
  40482f:	adc    BYTE PTR [edx+0x28],cl
  404832:	pop    DWORD PTR [edi+eax*8-0x1f]
  404836:	xchg   ecx,eax
  404837:	sub    ebp,DWORD PTR [esi+0x64677749]
  40483d:	push   eax
  40483e:	mov    ah,0x4a
  404840:	jae    0x404883
  404842:	loope  0x404836
  404844:	pop    edx
  404845:	inc    eax
  404846:	mov    dh,0xd8
  404848:	pop    ss
  404849:	lods   al,BYTE PTR ds:[esi]
  40484a:	lahf   
  40484b:	jg     0x404845
  40484d:	scas   eax,DWORD PTR es:[edi]
  40484e:	cmp    BYTE PTR [edi+0x159c8dbd],0xa0
  404855:	or     bl,BYTE PTR [ebx]
  404857:	mov    bh,ah
  404859:	cmp    eax,DWORD PTR [eax+0x687d7b63]
  40485f:	imul   esp,DWORD PTR [ebx],0xafe4a739
  404865:	clc    
  404866:	lahf   
  404867:	lock and edi,edx
  40486a:	test   al,0x59
  40486c:	imul   ebx,DWORD PTR [ebp+0x7edb3d29],0x3784d119
  404876:	dec    edx
  404877:	fwait
  404878:	sbb    esp,DWORD PTR [edx-0x445a5747]
  40487e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40487f:	pop    ecx
  404880:	test   eax,0x826052eb
  404885:	mov    esi,0x7d7d3e46
  40488a:	sub    bl,dh
  40488c:	enter  0xc3aa,0x78
  404890:	sub    ebx,DWORD PTR ss:[ebx+edx*2]
  404894:	mov    dl,0x42
  404896:	push   ds
  404897:	xabort 0xfe
  40489a:	or     al,0xfe
  40489c:	ins    BYTE PTR es:[edi],dx
  40489d:	test   eax,0x8afabcd9
  4048a2:	inc    esi
  4048a3:	and    DWORD PTR [ebx],esi
  4048a5:	add    esi,eax
  4048a7:	call   0xaf6fbafe
  4048ac:	mov    edx,edi
  4048ae:	mov    ah,BYTE PTR [edi]
  4048b0:	jo     0x404835
  4048b2:	push   ecx
  4048b3:	lea    ecx,[edx+ecx*1+0x44cb0038]
  4048ba:	ds pusha 
  4048bc:	inc    ebx
  4048bd:	nop
  4048be:	xor    eax,0x7f6ee966
  4048c3:	xor    BYTE PTR [ebx+ebp*1+0x7abfca5e],bl
  4048ca:	lock cmp eax,DWORD PTR [ebx-0x7ab76788]
  4048d1:	add    al,0x39
  4048d3:	shr    BYTE PTR [ecx],0x95
  4048d6:	fsin   
  4048d8:	fist   DWORD PTR ds:0xebb76fc9
  4048de:	in     eax,0x5f
  4048e0:	nop
  4048e1:	stc    
  4048e2:	(bad)  
  4048e3:	cmp    BYTE PTR [eax+esi*1],ah
  4048e6:	inc    esi
  4048e7:	mov    edi,0x4e23c57
  4048ec:	mov    esp,0x6f870b6d
  4048f1:	sbb    ebx,DWORD PTR [edx]
  4048f3:	or     ecx,esi
  4048f5:	dec    ebp
  4048f6:	retf   0xf010
  4048f9:	jno    0x40491a
  4048fb:	shl    BYTE PTR [ecx+0x73],cl
  4048fe:	(bad)  
  4048ff:	xor    BYTE PTR [esp+edx*4+0x116f495],bl
  404906:	mov    dh,al
  404908:	adc    ebx,eax
  40490a:	into   
  40490b:	dec    edx
  40490c:	lods   eax,DWORD PTR ds:[esi]
  40490d:	cdq    
  40490e:	mov    dh,0x44
  404910:	xor    edi,DWORD PTR [ebx-0x4bc852dc]
  404916:	pusha  
  404917:	add    eax,0xe738886e
  40491c:	xor    al,0xa0
  40491e:	aad    0x65
  404920:	ud2    
  404922:	daa    
  404923:	cs ret 0xca07
  404927:	aad    0x84
  404929:	leave  
  40492a:	out    dx,ax
  40492c:	adc    BYTE PTR [edi+0xb44b159],0x9b
  404933:	mov    cl,0x28
  404935:	mov    esi,0x4a13be8e
  40493a:	mov    bh,0x24
  40493c:	lods   al,BYTE PTR ds:[esi]
  40493d:	push   esp
  40493e:	lods   eax,DWORD PTR ds:[esi]
  40493f:	mov    ?,WORD PTR [ebx]
  404941:	ins    DWORD PTR es:[edi],dx
  404942:	leave  
  404943:	push   edi
  404944:	call   0x6a5c75f7
  404949:	push   ebp
  40494a:	adc    eax,0x834a45fa
  40494f:	cli    
  404950:	jo     0x4049ad
  404952:	lods   eax,DWORD PTR ds:[esi]
  404953:	jae    0x4048d8
  404955:	push   esp
  404956:	nop
  404957:	xchg   ecx,eax
  404958:	add    ebp,DWORD PTR [edx+0x50c4761e]
  40495e:	scas   al,BYTE PTR es:[edi]
  40495f:	sar    DWORD PTR [esi-0x79],1
  404962:	sbb    bl,ah
  404964:	faddp  st(2),st
  404966:	dec    edx
  404967:	cmp    BYTE PTR [edx],0x91
  40496a:	ret    
  40496b:	add    eax,0x163a42c0
  404970:	(bad)  
  404971:	mov    WORD PTR [ebp-0x642bad2f],cs
  404977:	imul   esi,DWORD PTR [ebx-0x1b],0x6d28e30d
  40497e:	add    DWORD PTR [edi-0x2e],eax
  404981:	sub    al,0xde
  404983:	mov    dl,0x99
  404985:	cld    
  404986:	call   0xcc2cc04e
  40498b:	pop    ss
  40498c:	ss fs adc al,0x2
  404990:	dec    edi
  404991:	popa   
  404992:	adc    cl,BYTE PTR [ecx]
  404994:	pop    es
  404995:	mov    ah,BYTE PTR [edi]
  404997:	jae    0x40499b
  404999:	int3   
  40499a:	scas   al,BYTE PTR es:[edi]
  40499b:	and    cl,BYTE PTR [ebx+0xb]
  40499e:	call   0x7a27:0xbecf5605
  4049a5:	mov    ebp,0xbc60416f
  4049aa:	jmp    0x8e:0x6cd6b08c
  4049b1:	lea    ebp,[edx+eiz*4]
  4049b4:	adc    eax,0xa1d56b72
  4049b9:	rcr    ecx,1
  4049bb:	dec    ebp
  4049bc:	retf   
  4049bd:	push   ebx
  4049be:	and    ah,BYTE PTR [edi+0x67]
  4049c1:	sbb    eax,0xc22f3e9d
  4049c6:	loop   0x4049de
  4049c8:	pusha  
  4049c9:	jae    0x4049e9
  4049cb:	mov    eax,0x2eb5c474
  4049d0:	fsub   QWORD PTR [edi+0x21]
  4049d3:	or     eax,0xa67e8c2c
  4049d8:	mov    ecx,0x2db9603e
  4049dd:	xor    BYTE PTR [ebx],bh
  4049df:	ror    esi,1
  4049e1:	inc    ebx
  4049e2:	adc    DWORD PTR [ecx+edi*8+0x170ce996],ebp
  4049e9:	into   
  4049ea:	sub    DWORD PTR [ecx],ecx
  4049ec:	cmp    esp,DWORD PTR [esi]
  4049ee:	shl    DWORD PTR [ebx+0x6b],1
  4049f1:	xchg   ebx,eax
  4049f2:	fwait
  4049f3:	push   edi
  4049f4:	mov    cl,0x60
  4049f6:	mov    al,ds:0x8b2d7038
  4049fb:	mov    dl,0xcd
  4049fd:	mov    al,bl
  4049ff:	arpl   WORD PTR [ecx],ax
  404a01:	dec    eax
  404a02:	mov    bl,0xd4
  404a04:	inc    edi
  404a05:	mov    bh,0xde
  404a07:	lods   eax,DWORD PTR ds:[esi]
  404a08:	shl    BYTE PTR [edx-0x7f],1
  404a0b:	ror    BYTE PTR [esi],cl
  404a0d:	and    DWORD PTR [ebp-0x63e056d8],ebp
  404a13:	jmp    0xd273:0x528b87dd
  404a1a:	popf   
  404a1b:	pop    ebx
  404a1c:	inc    edx
  404a1d:	leave  
  404a1e:	adc    ecx,ebx
  404a20:	cmp    DWORD PTR [ecx-0x27],0x9a806683
  404a27:	idiv   DWORD PTR [edi+esi*2]
  404a2a:	sar    BYTE PTR [eax],cl
  404a2c:	mov    al,ds:0xb9379af5
  404a31:	js     0x4049c3
  404a33:	neg    DWORD PTR [eax]
  404a35:	test   eax,0x5d5409e0
  404a3a:	push   0x11
  404a3c:	cmc    
  404a3d:	dec    ebp
  404a3e:	dec    edx
  404a3f:	xlat   BYTE PTR ds:[ebx]
  404a40:	lods   eax,DWORD PTR ds:[esi]
  404a41:	adc    al,0x75
  404a43:	daa    
  404a44:	jl     0x404aaf
  404a46:	enter  0xc30e,0x74
  404a4a:	xchg   cl,cl
  404a4c:	lahf   
  404a4d:	je     0x404a7c
  404a4f:	sub    bh,BYTE PTR [eax+0x4c]
  404a52:	mov    esi,0xf15ec4b9
  404a57:	pop    es
  404a58:	shl    BYTE PTR [eax+edi*8+0x60899974],0x6f
  404a60:	inc    ebp
  404a61:	es push ebx
  404a63:	adc    dl,0x56
  404a66:	std    
  404a67:	rol    BYTE PTR [ecx],0x4e
  404a6a:	push   DWORD PTR [edx+eiz*2]
  404a6d:	jl     0x404aaa
  404a6f:	xor    BYTE PTR [ebx+ecx*8],bh
  404a72:	jo     0x404ad5
  404a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a75:	ds repz in eax,0xdd
  404a79:	fistp  DWORD PTR [esi+0x38fde884]
  404a7f:	jg     0x404a32
  404a81:	inc    esp
  404a82:	ret    0x8a13
  404a85:	popf   
  404a86:	sbb    al,0x70
  404a88:	push   ss
  404a89:	out    0x8d,al
  404a8b:	and    eax,0xcfe75c91
  404a90:	pop    es
  404a91:	int    0x4f
  404a93:	cmp    eax,0x3715b620
  404a98:	mov    ?,WORD PTR [edi-0x6315c7fc]
  404a9e:	je     0x404a40
  404aa0:	pop    ebx
  404aa1:	and    BYTE PTR [ecx],0x4c
  404aa4:	sub    edx,edi
  404aa6:	xor    DWORD PTR [ebp+eax*4+0x7f],0x33
  404aab:	mov    dl,0xa8
  404aad:	jne    0x404a55
  404aaf:	(bad)  
  404ab1:	xor    edx,esi
  404ab3:	add    eax,0x933ea35e
  404ab8:	mov    edi,0xb0ee6b94
  404abd:	and    eax,0x613bb85a
  404ac2:	or     eax,0xbe78d62
  404ac7:	imul   edx,DWORD PTR [edx+eax*8+0xacfc8f4],0xffffff9f
  404acf:	shl    DWORD PTR [ecx],cl
  404ad1:	addr16 mov ds:0xcebf,al
  404ad5:	mov    cl,0x66
  404ad7:	sbb    BYTE PTR [ecx-0x60],0x77
  404adb:	sub    eax,0x3efd12a
  404ae0:	mov    ds:0xa4f63d0,eax
  404ae5:	add    ah,BYTE PTR [esi+eax*1]
  404ae8:	cmp    BYTE PTR [edi+0x57],cl
  404aeb:	scas   eax,DWORD PTR es:[edi]
  404aec:	xor    DWORD PTR [ebp+0x61],edx
  404aef:	test   al,0x2a
  404af1:	int    0x3
  404af3:	imul   esi,DWORD PTR [edx],0x232cbe18
  404af9:	scas   eax,DWORD PTR es:[edi]
  404afa:	imul   ecx,DWORD PTR [ebx-0x68],0xe845ee9a
  404b01:	and    eax,0x8738a871
  404b06:	popa   
  404b07:	jbe    0x404b65
  404b09:	add    al,0xa3
  404b0b:	out    0x83,eax
  404b0d:	push   edi
  404b0e:	ret    
  404b0f:	aaa    
  404b10:	mov    al,ds:0x3cd5b311
  404b15:	fcomp  QWORD PTR [edx+edi*2-0x5cf15869]
  404b1c:	shl    BYTE PTR [esi],cl
  404b1e:	adc    ebx,DWORD PTR [edi+edx*4]
  404b21:	xchg   ecx,eax
  404b22:	int    0xff
  404b24:	xchg   al,bl
  404b26:	pusha  
  404b27:	int    0x53
  404b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b2a:	pusha  
  404b2b:	(bad)  
  404b2c:	sbb    cl,bl
  404b2e:	out    0xf,al
  404b30:	add    BYTE PTR [edi],dh
  404b32:	pop    eax
  404b33:	xchg   ebp,eax
  404b34:	pop    ebx
  404b35:	jle    0x404ab9
  404b37:	shl    DWORD PTR [ecx-0x4a644869],1
  404b3d:	fisttp DWORD PTR [ebp+0x38]
  404b40:	push   ds
  404b41:	(bad)  
  404b42:	mov    edx,ebp
  404b44:	xor    eax,0xb78453e0
  404b49:	push   ebp
  404b4a:	scas   al,BYTE PTR es:[edi]
  404b4b:	sbb    al,0x64
  404b4d:	mov    WORD PTR [ecx+0x78],ds
  404b50:	or     BYTE PTR [eax],cl
  404b52:	sbb    ecx,DWORD PTR [edx+esi*2]
  404b55:	out    0xe4,eax
  404b57:	ror    DWORD PTR [edx-0x6a],1
  404b5a:	jns    0x404b1d
  404b5c:	dec    edx
  404b5d:	mov    ebp,0xcde3147b
  404b62:	add    eax,0x62361f56
  404b67:	shr    DWORD PTR [edi-0x36],1
  404b6a:	iret   
  404b6b:	sub    DWORD PTR [ecx-0x101b969d],0xdeda1c07
  404b75:	inc    ebx
  404b76:	cmp    bh,bh
  404b78:	xlat   BYTE PTR ds:[ebx]
  404b79:	mov    dh,0x3b
  404b7b:	dec    edi
  404b7c:	push   ecx
  404b7d:	inc    edx
  404b7e:	inc    ebp
  404b7f:	cmp    eax,0xccd23d32
  404b84:	rcr    BYTE PTR [esi],1
  404b86:	inc    ebx
  404b87:	xor    bl,al
  404b89:	cmp    BYTE PTR [edx+0x5972b25e],al
  404b8f:	jmp    0x5ea0:0x3a5adc
  404b96:	adc    cl,bh
  404b98:	test   eax,0x2fe6389c
  404b9d:	add    edx,DWORD PTR [bx+di]
  404ba0:	mov    WORD PTR [edx],ds
  404ba2:	in     al,dx
  404ba3:	mov    es:0xd02d01a5,eax
  404ba9:	sbb    bh,BYTE PTR [ebx-0x20664daf]
  404baf:	out    0x6f,eax
  404bb1:	add    BYTE PTR [edx],bl
  404bb3:	adc    al,0x48
  404bb6:	(bad)  
  404bb7:	pop    esi
  404bb8:	push   esi
  404bb9:	jb     0x404bcd
  404bbb:	adc    edx,DWORD PTR [esi]
  404bbd:	push   eax
  404bbe:	in     al,dx
  404bbf:	ret    
  404bc0:	pop    ds
  404bc1:	fcomp  QWORD PTR [ecx+0x403b6643]
  404bc7:	xor    esi,DWORD PTR es:[ebx+edx*8+0x1940f7f6]
  404bcf:	sub    al,0x4e
  404bd1:	pop    esp
  404bd2:	(bad)  
  404bd3:	mov    bh,0xf6
  404bd5:	mov    dl,0xa2
  404bd7:	test   eax,0x3761a0f8
  404bdc:	cmp    dh,bh
  404bde:	pop    ds
  404bdf:	sub    eax,0x27335763
  404be4:	cmc    
  404be5:	sub    ebp,DWORD PTR [ebp+0x15c9f6f1]
  404beb:	xchg   ebp,eax
  404bec:	in     al,0x51
  404bee:	out    dx,eax
  404bef:	fidiv  WORD PTR [eax-0x56]
  404bf2:	daa    
  404bf3:	mov    esp,0x23b0e9b4
  404bf8:	mov    ebx,0x69f2ed75
  404bfd:	inc    ebx
  404bfe:	(bad)  
  404c00:	fadd   QWORD PTR [eax+0x70bd7770]
  404c06:	jnp    0x404c01
  404c08:	pop    esi
  404c09:	pop    ebx
  404c0a:	in     al,0x98
  404c0c:	jb     0x404bd9
  404c0e:	mov    cl,0x40
  404c10:	dec    esp
  404c11:	mov    edi,es
  404c13:	lds    edx,FWORD PTR [ebx*1+0x7735366e]
  404c1a:	dec    ebp
  404c1b:	ja     0x404bae
  404c1d:	cs daa 
  404c1f:	(bad)  
  404c21:	push   cs
  404c22:	pushf  
  404c23:	pushf  
  404c24:	sub    bl,al
  404c26:	call   0x8201:0x400b00b6
  404c2d:	cmp    eax,0x465fb3a2
  404c32:	xchg   edx,eax
  404c33:	pop    ebx
  404c34:	int    0xe0
  404c36:	das    
  404c37:	repz mov dl,BYTE PTR [ebx-0x13]
  404c3b:	add    DWORD PTR ds:0xb12d7062,edi
  404c41:	in     al,0x1d
  404c43:	jg     0x404bd2
  404c45:	jae    0x404bdd
  404c47:	mov    al,0xf1
  404c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c4a:	repz es cwde 
  404c4d:	out    0x25,al
  404c4f:	out    dx,al
  404c50:	mov    bh,0xaf
  404c52:	je     0x404c41
  404c54:	frstor [ecx-0xc]
  404c57:	or     BYTE PTR [ecx+0x25],bh
  404c5a:	das    
  404c5b:	sub    ebx,ebx
  404c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c5e:	pop    ebx
  404c5f:	shl    edi,cl
  404c61:	setnp  BYTE PTR ds:0xf81cb3c7
  404c68:	cs push edx
  404c6a:	pop    edi
  404c6b:	dec    eax
  404c6c:	jmp    DWORD PTR [ebx-0x9]
  404c6f:	pushf  
  404c70:	jno    0x404c38
  404c72:	stos   BYTE PTR es:[edi],al
  404c73:	lods   eax,DWORD PTR ds:[esi]
  404c74:	scas   al,BYTE PTR es:[edi]
  404c75:	push   esi
  404c76:	or     bl,BYTE PTR [ebp+edx*4-0x8ef4d2f]
  404c7d:	lods   al,BYTE PTR ds:[esi]
  404c7e:	jo     0x404c16
  404c80:	or     al,0x74
  404c82:	adc    al,0x89
  404c85:	dec    edx
  404c86:	sub    DWORD PTR [ebp+0x3c],edx
  404c89:	sbb    al,0x1b
  404c8b:	ret    
  404c8c:	scas   al,BYTE PTR es:[edi]
  404c8d:	adc    eax,0x1ab44a78
  404c92:	mov    ah,0x6a
  404c94:	dec    ebx
  404c95:	or     bl,BYTE PTR es:[esi+eiz*8-0x4f]
  404c9a:	push   edi
  404c9b:	jo     0x404cec
  404c9d:	fstp   QWORD PTR [ebx+0x2f]
  404ca0:	frstor [ecx]
  404ca2:	pfcmpgt mm2,QWORD PTR [edx-0x7fa5ad7]
  404caa:	add    edx,eax
  404cac:	push   DWORD PTR [eax]
  404cae:	cld    
  404caf:	or     BYTE PTR [edx+0x33],bl
  404cb2:	push   edx
  404cb3:	cmp    al,BYTE PTR [ebx-0x62694447]
  404cb9:	inc    ebx
  404cba:	lods   al,BYTE PTR ds:[esi]
  404cbb:	fwait
  404cbc:	xchg   ebp,eax
  404cbd:	add    al,0x7d
  404cbf:	xor    eax,0x18f68cc0
  404cc4:	add    ecx,0xbb2163b5
  404cca:	shl    DWORD PTR [eax],cl
  404ccc:	les    edx,FWORD PTR [edx-0x77]
  404ccf:	call   0x92bc08f9
  404cd4:	das    
  404cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd6:	out    dx,al
  404cd7:	pop    ebp
  404cd8:	push   0x881d0c82
  404cdd:	sbb    BYTE PTR [edx],dh
  404cdf:	dec    ebx
  404ce0:	jg     0x404d36
  404ce2:	sub    dl,bh
  404ce4:	or     eax,0xcf206a75
  404ce9:	mov    WORD PTR [esi+esi*8],es
  404cec:	pop    edi
  404ced:	push   0x3a
  404cef:	pop    ebp
  404cf0:	pop    ebp
  404cf1:	pop    ebp
  404cf2:	test   bh,bh
  404cf4:	je     0x404d5a
  404cf6:	ss push edi
  404cf8:	and    DWORD PTR [eax-0x4f],edx
  404cfb:	adc    DWORD PTR [esi-0x8],0xffffffce
  404cff:	mov    ds:0xf18770d1,eax
  404d04:	adc    BYTE PTR [esp+ecx*2],al
  404d07:	loopne 0x404d65
  404d09:	sbb    edx,ecx
  404d0b:	je     0x404cc2
  404d0d:	mov    bh,0xad
  404d0f:	inc    ebx
  404d10:	and    DWORD PTR [eax],edx
  404d12:	das    
  404d13:	ret    0x1735
  404d16:	lock into 
  404d18:	mov    edx,0xfc82bd26
  404d1d:	mov    ch,0x13
  404d1f:	mov    ecx,0x52362db
  404d24:	push   0x17344e04
  404d29:	aas    
  404d2a:	inc    ecx
  404d2b:	xchg   DWORD PTR [edi-0xc1cd4b9],esp
  404d31:	in     eax,0x39
  404d33:	aam    0x60
  404d35:	js     0x404d3a
  404d37:	aaa    
  404d38:	jmp    0x404cbf
  404d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d3b:	stc    
  404d3c:	adc    DWORD PTR [ebp+0x24],0x72445803
  404d43:	shl    BYTE PTR [edi],0xdb
  404d46:	lods   al,BYTE PTR ds:[esi]
  404d47:	pop    ebp
  404d48:	test   al,0x77
  404d4a:	mov    BYTE PTR [edi+0x6e3ded6c],cl
  404d50:	mov    esi,0x8ef46ef2
  404d55:	mov    al,0xa6
  404d57:	test   BYTE PTR [ecx+0x22],ch
  404d5a:	inc    ebx
  404d5b:	mov    ah,0x32
  404d5d:	call   0x24654e1a
  404d62:	(bad)  [bp+si+0x61fa]
  404d67:	ror    eax,0x42
  404d6a:	xchg   DWORD PTR [eax],ebp
  404d6c:	lea    ebx,[edi]
  404d6e:	out    dx,al
  404d6f:	push   edi
  404d70:	mov    ds:0x9da8f51f,al
  404d75:	adc    al,0xc4
  404d77:	jp     0x404cfb
  404d79:	nop
  404d7a:	sbb    ebp,DWORD PTR [eax-0x125b9981]
  404d80:	push   esp
  404d81:	pop    ecx
  404d82:	imul   edx,edi,0x53b1b63
  404d88:	scas   al,BYTE PTR es:[edi]
  404d89:	sbb    BYTE PTR [ebp+0x4ac9e21f],cl
  404d8f:	(bad)  [ecx]
  404d91:	sub    al,0x14
  404d93:	mov    eax,0x6bfa2a98
  404d98:	ret    0x4955
  404d9b:	loope  0x404d32
  404d9d:	and    ch,BYTE PTR [eax+esi*4-0x72]
  404da1:	push   ds
  404da2:	imul   esp,DWORD PTR [ebp*8-0x63034d38],0xffffffe3
  404daa:	out    dx,al
  404dab:	aad    0x69
  404dad:	ja     0x404def
  404daf:	inc    ecx
  404db0:	inc    ecx
  404db1:	aas    
  404db2:	mov    eax,0x3600b9ec
  404db7:	das    
  404db8:	lock fwait
  404dba:	sbb    edi,ebx
  404dbc:	push   edx
  404dbd:	inc    ecx
  404dbe:	int    0x72
  404dc0:	adc    eax,0x7b835891
  404dc5:	jle    0x404d93
  404dc7:	test   edx,eax
  404dc9:	mov    ah,0x5
  404dcb:	mov    ecx,0x3fc8c21
  404dd0:	jecxz  0x404d71
  404dd2:	mov    bh,0xe9
  404dd4:	bound  ebx,QWORD PTR [edi]
  404dd6:	cmp    ecx,DWORD PTR [esi]
  404dd8:	outs   dx,DWORD PTR ds:[esi]
  404dd9:	(bad)  
  404ddb:	fnstenv [edi+0x680202d4]
  404de1:	sub    bl,BYTE PTR [edi]
  404de3:	push   ds
  404de4:	pop    ecx
  404de5:	xor    dh,dh
  404de7:	lods   eax,DWORD PTR ds:[esi]
  404de8:	(bad)  
  404de9:	in     eax,dx
  404dea:	pop    ebp
  404deb:	test   al,0xd6
  404ded:	ret    0x148
  404df0:	mov    ecx,0xadb14718
  404df5:	retf   
  404df6:	ficomp DWORD PTR [eax+0x37f5c055]
  404dfc:	scas   al,BYTE PTR es:[edi]
  404dfd:	imul   ebp,DWORD PTR [ebx+ebx*4+0x4f],0xffffffb7
  404e02:	cmp    al,0xdd
  404e04:	repnz fucomi st,st(4)
  404e07:	push   0x62
  404e09:	adc    eax,0x23addc14
  404e0e:	fcomip st,st(0)
  404e10:	push   0x37d9f03f
  404e15:	pushf  
  404e16:	or     dl,BYTE PTR [ebp-0x3da9a0ff]
  404e1c:	jg     0x404e6c
  404e1e:	sbb    cl,dl
  404e20:	mov    BYTE PTR [eax+0x290c9a25],bh
  404e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e27:	hlt    
  404e28:	adc    ebx,esp
  404e2a:	add    DWORD PTR [edx+0x73024fbb],0x37732fbd
  404e34:	inc    edi
  404e35:	fisttp QWORD PTR [eax+0x17574791]
  404e3b:	sub    DWORD PTR [edi+0x3a],ebp
  404e3e:	or     eax,0xbd69c162
  404e43:	cmp    BYTE PTR [esi+0x6d371b83],0xae
  404e4a:	jb     0x404dde
  404e4c:	sbb    BYTE PTR [edi],0x93
  404e4f:	jl     0x404ec2
  404e51:	ss ret 0x1a40
  404e55:	push   cs
  404e56:	ror    bl,cl
  404e58:	test   BYTE PTR [ebp-0x67b3ba08],ah
  404e5e:	and    edx,DWORD PTR [ecx]
  404e60:	test   ecx,ebp
  404e62:	(bad)  
  404e63:	and    al,dh
  404e65:	or     ch,BYTE PTR [eax+0x346907dc]
  404e6b:	or     ebx,DWORD PTR [ebp-0x26]
  404e6e:	out    dx,al
  404e6f:	in     al,dx
  404e70:	(bad)  
  404e72:	and    bh,dh
  404e74:	clc    
  404e75:	(bad)  
  404e76:	(bad)  
  404e78:	test   al,ch
  404e7a:	xor    ecx,DWORD PTR [eax-0x7446715]
  404e80:	dec    esp
  404e81:	jmp    0x4f422c5a
  404e86:	mov    al,0x2d
  404e88:	cwde   
  404e89:	fsubr  st(4),st
  404e8b:	adc    BYTE PTR [ecx],0xd4
  404e8e:	rcl    bh,0xb6
  404e91:	cmc    
  404e92:	add    esi,edx
  404e94:	or     DWORD PTR [edx],0xffffffc0
  404e97:	jnp    0x404e31
  404e99:	int3   
  404e9a:	xor    edi,DWORD PTR [edi+0x617654d8]
  404ea0:	dec    ecx
  404ea1:	and    al,0x2f
  404ea3:	mov    cl,0x3
  404ea5:	popa   
  404ea6:	fidivr DWORD PTR [edi+0x7c]
  404ea9:	ret    0x27db
  404eac:	xor    eax,0x23a37420
  404eb1:	jg     0x404e84
  404eb3:	cdq    
  404eb4:	add    bl,ch
  404eb6:	lahf   
  404eb7:	and    dh,BYTE PTR ds:0xf9e25615
  404ebd:	and    edx,DWORD PTR [ebx+0x57]
  404ec0:	and    DWORD PTR [esp+ebx*2+0x58cf35f],esi
  404ec7:	or     al,0xce
  404ec9:	repnz adc BYTE PTR [edi-0x46],0x20
  404ece:	pushf  
  404ecf:	hlt    
  404ed0:	and    BYTE PTR [edi+0x53ddd561],0x23
  404ed7:	mov    esi,0xd3cc4685
  404edc:	das    
  404edd:	pop    ecx
  404ede:	dec    esp
  404edf:	vpmaxub zmm7{k6},zmm1,zmm5
  404ee5:	sbb    al,0x9d
  404ee7:	and    dl,BYTE PTR [eax]
  404ee9:	dec    eax
  404eea:	add    edx,DWORD PTR [esi+ebx*8+0x6459f988]
  404ef1:	mov    ebx,DWORD PTR [edx+0x3c]
  404ef4:	iret   
  404ef5:	xchg   ecx,eax
  404ef6:	cmp    al,0xa2
  404ef8:	jmp    0x5e1b4591
  404efd:	retf   0x3bd3
  404f00:	idiv   bh
  404f02:	jmp    0xf64c5076
  404f07:	mov    ebx,0xebebda0c
  404f0c:	inc    esp
  404f0d:	or     BYTE PTR [ebx+0x1556c047],bl
  404f13:	aaa    
  404f14:	jb     0x404f56
  404f16:	addr16 xchg esp,eax
  404f18:	jmp    0xd403dc0f
  404f1d:	jecxz  0x404f60
  404f1f:	mov    gs,WORD PTR [edx-0x31]
  404f22:	jl     0x404f9b
  404f24:	cmp    BYTE PTR [ebp+eax*2+0x2a],0xb0
  404f29:	jae    0x404ebb
  404f2b:	mov    ds:0xf0c5cdf3,al
  404f30:	push   edx
  404f31:	jne    0x404f6d
  404f33:	je     0x404f46
  404f35:	adc    edx,ecx
  404f37:	sbb    DWORD PTR [edi],ecx
  404f39:	test   DWORD PTR [ecx+0x37e7d015],esi
  404f3f:	das    
  404f40:	push   cs
  404f41:	mov    al,ds:0x43fb6852
  404f46:	(bad)  
  404f47:	jb     0x404f12
  404f49:	ins    DWORD PTR es:[edi],dx
  404f4a:	adc    ecx,0x61
  404f4d:	imul   edi,DWORD PTR [edi-0x3a3f482e],0x8c60b16
  404f57:	nop
  404f58:	push   es
  404f59:	and    dl,bh
  404f5b:	cmp    al,0xe1
  404f5d:	test   DWORD PTR [eax+edx*8-0x4efa3e42],edi
  404f64:	mov    cl,0xcf
  404f66:	add    eax,0x682ed22e
  404f6b:	add    bh,BYTE PTR [ebp-0x20]
  404f6e:	xor    al,0xa1
  404f70:	inc    esi
  404f71:	xor    eax,0xcc9daa3d
  404f76:	jmp    0xb04:0x5f9e569d
  404f7d:	in     eax,dx
  404f7e:	daa    
  404f7f:	jb     0x404f15
  404f81:	add    eax,0x50f72e2a
  404f86:	dec    edx
  404f87:	pusha  
  404f88:	sub    DWORD PTR [edx-0x1b],edi
  404f8b:	fsubr  DWORD PTR [edi-0x600f5345]
  404f91:	mov    esi,0xb1708ec3
  404f96:	mov    cl,0x5c
  404f98:	mov    ds:0xcaea0591,al
  404f9d:	fmul   DWORD PTR [eax+ebx*8+0x2f]
  404fa1:	and    BYTE PTR [bp-0x3d],ah
  404fa5:	xlat   BYTE PTR ds:[ebx]
  404fa6:	pushf  
  404fa7:	adc    edi,DWORD PTR [edx+eax*4]
  404faa:	xchg   esp,eax
  404fab:	cmp    DWORD PTR [ebp+0x4c484fe6],eax
  404fb1:	inc    ebp
  404fb2:	xlat   BYTE PTR ds:[ebx]
  404fb3:	adc    eax,0x966e3f39
  404fb8:	mov    eax,0xc057c015
  404fbd:	stos   BYTE PTR es:[edi],al
  404fbe:	and    BYTE PTR [eax-0x7d],al
  404fc1:	or     esp,esi
  404fc3:	call   0xb0947000
  404fc8:	xor    esi,DWORD PTR [edx]
  404fca:	jl     0x404fc7
  404fcc:	outs   dx,BYTE PTR ds:[esi]
  404fcd:	pop    eax
  404fce:	fs xchg edi,eax
  404fd0:	mov    edx,0xfb850a00
  404fd5:	jno    0x404f6a
  404fd7:	mov    bh,0x14
  404fd9:	mov    esi,0xb8716ad7
  404fde:	adc    BYTE PTR [ebp+0x42512ed1],bl
  404fe4:	bound  edx,QWORD PTR [edi]
  404fe6:	or     eax,DWORD PTR [edi]
  404fe8:	inc    ecx
  404fe9:	sti    
  404fea:	xor    ah,BYTE PTR [ecx+eiz*1]
  404fed:	xlat   BYTE PTR ds:[ebx]
  404fee:	ja     0x405006
  404ff0:	ret    
  404ff1:	inc    edx
  404ff2:	mov    ds:0xc5dcf2b6,eax
  404ff7:	pop    ss
  404ff8:	sar    BYTE PTR [ebp+0x326ac58d],1
  404ffe:	mov    eax,ds:0x84f8a86
  405003:	cmc    
  405004:	mov    esp,DWORD PTR [edx-0xd]
  405007:	mov    edx,0x203cc8db
  40500c:	lahf   
  40500d:	ins    BYTE PTR es:[edi],dx
  40500e:	sub    al,dl
  405010:	outs   dx,BYTE PTR ds:[esi]
  405011:	out    dx,al
  405012:	fnsave [edi+0x21cd3def]
  405018:	jns    0x405078
  40501a:	es ds xchg ecx,eax
  40501d:	or     BYTE PTR [edx+0x2e],dh
  405020:	inc    eax
  405021:	vpsraw ymm7,ymm0,XMMWORD PTR [ecx*2+0x214b162a]
  40502a:	mov    esi,0xb420f6db
  40502f:	lds    esi,FWORD PTR [eax-0x6e8b8ab6]
  405035:	push   esp
  405036:	cmp    BYTE PTR [ebp-0x4631331d],0x5f
  40503d:	popa   
  40503e:	rcl    eax,0x23
  405041:	lahf   
  405042:	nop
  405043:	fwait
  405044:	cmp    al,0xa
  405046:	ss pop ebx
  405048:	adc    BYTE PTR [edi+esi*8-0x2],bh
  40504c:	xor    DWORD PTR [esp+ebp*8-0x2a],ebx
  405050:	jmp    FWORD PTR [ecx]
  405052:	popw   ds
  405054:	pop    ds
  405055:	cmp    BYTE PTR [edi-0x4],ah
  405058:	pop    esp
  405059:	xchg   ebx,eax
  40505a:	mov    eax,ds:0xca5b82ac
  40505f:	addr16 jnp 0x404ffb
  405062:	xchg   esi,eax
  405063:	sub    edx,DWORD PTR [edi+ebx*2+0x17d2cfa9]
  40506a:	test   DWORD PTR [esi+0x6f],0xef973b45
  405071:	mov    edx,DWORD PTR [ebx]
  405073:	call   0x4093:0xf61a5ab9
  40507a:	jge    0x405007
  40507c:	xchg   edi,eax
  40507d:	push   0xb8fcec54
  405082:	adc    eax,0xedbd1f8c
  405087:	sbb    bh,ah
  405089:	call   0x286faec1
  40508e:	stos   DWORD PTR es:[edi],eax
  40508f:	inc    eax
  405090:	or     al,0x1b
  405092:	mov    bh,0xf2
  405094:	and    DWORD PTR [ebx],edx
  405096:	outs   dx,BYTE PTR ds:[si]
  405098:	or     al,0xef
  40509a:	xor    bl,0x6c
  40509d:	out    0xca,al
  40509f:	inc    esp
  4050a0:	xchg   ecx,eax
  4050a1:	add    BYTE PTR ds:0xab09180c,bh
  4050a7:	test   bl,al
  4050a9:	xlat   BYTE PTR ds:[ebx]
  4050aa:	mov    ah,BYTE PTR [eax+0x41ca0d14]
  4050b0:	out    dx,al
  4050b1:	lds    esp,FWORD PTR [ecx-0x27]
  4050b4:	loopne 0x4050a3
  4050b6:	dec    esp
  4050b7:	mov    dl,0x85
  4050b9:	cld    
  4050ba:	mov    bh,0x4
  4050bc:	rcl    BYTE PTR [esi+0x2c],0xe1
  4050c0:	cdq    
  4050c1:	loopne 0x40511f
  4050c3:	xchg   ebx,esi
  4050c5:	shl    BYTE PTR [ebx-0x100c6fc1],cl
  4050cb:	mov    dl,dl
  4050cd:	xor    al,BYTE PTR [edi-0x2852b15d]
  4050d3:	inc    esi
  4050d4:	xor    DWORD PTR [edx],ebx
  4050d6:	sbb    esi,DWORD PTR [edi-0x5e117b29]
  4050dc:	dec    ecx
  4050dd:	lahf   
  4050de:	ja     0x40506f
  4050e0:	dec    esp
  4050e1:	pop    ss
  4050e2:	push   cs
  4050e3:	sub    al,0x2c
  4050e5:	push   ebp
  4050e6:	addr16 jo 0x405117
  4050e9:	xchg   ecx,eax
  4050ea:	inc    edi
  4050eb:	clc    
  4050ec:	arpl   WORD PTR [ebp-0x61],sp
  4050ef:	sub    ch,BYTE PTR [ebx+ebp*8-0x5c579fe2]
  4050f6:	bound  esi,QWORD PTR [edi]
  4050f8:	(bad)  
  4050f9:	sbb    ebp,DWORD PTR [esp+0x5c839a37]
  405100:	ins    BYTE PTR es:[edi],dx
  405101:	popa   
  405102:	and    eax,0x6c7d6c05
  405107:	mul    edx
  405109:	pop    es
  40510a:	add    eax,0x7d423742
  40510f:	sti    
  405110:	cmp    ah,BYTE PTR [edi+edx*4-0x60]
  405114:	test   al,0x2b
  405116:	xor    eax,0x6b1817bb
  40511b:	test   DWORD PTR [edi-0x35cf257b],edx
  405121:	fild   WORD PTR [ebp-0x54bf3122]
  405127:	cmp    al,bl
  405129:	jbe    0x4050e1
  40512b:	test   ecx,edx
  40512d:	je     0x405149
  40512f:	jmp    0x4050bd
  405131:	shl    BYTE PTR [esi+0x54],0x83
  405135:	mov    ecx,0x3fb2acfb
  40513a:	add    BYTE PTR [ebx+0x4975c8c6],al
  405140:	test   DWORD PTR [edx+eiz*4-0x10],eax
  405144:	test   al,0x92
  405146:	mov    al,0xd3
  405148:	int    0x22
  40514a:	(bad)  
  40514b:	inc    esi
  40514c:	mov    edi,0x12da1795
  405151:	cdq    
  405152:	das    
  405153:	(bad)  
  405154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405155:	sub    BYTE PTR [eax],bh
  405157:	lods   al,BYTE PTR ds:[esi]
  405158:	sbb    DWORD PTR [ecx],0xd5183438
  40515e:	adc    DWORD PTR [edi+0x3a2e67a0],esp
  405164:	fld    QWORD PTR [edx+0x695ab587]
  40516a:	sub    al,0x2d
  40516c:	jo     0x4051d0
  40516e:	cmp    DWORD PTR [edi],ecx
  405170:	mov    ebx,0xd1185205
  405175:	sbb    al,0x18
  405177:	push   ecx
  405178:	hlt    
  405179:	xor    DWORD PTR [ecx-0x39d9ae5f],edi
  40517f:	inc    eax
  405180:	call   0xae53:0xbb871c64
  405187:	and    BYTE PTR [ebx-0x3f],dh
  40518a:	sub    dl,BYTE PTR [esi]
  40518c:	pop    ss
  40518d:	push   esi
  40518e:	jmp    0x65018914
  405193:	sub    eax,0xb0c788c6
  405198:	adc    DWORD PTR [ebx-0x34],edx
  40519b:	xor    BYTE PTR [edx],dh
  40519d:	mov    ah,BYTE PTR [ebp-0x4a34d209]
  4051a3:	xor    al,0xf0
  4051a5:	xor    eax,0x666ab360
  4051aa:	inc    esp
  4051ab:	loope  0x40512d
  4051ad:	les    ecx,FWORD PTR [edx-0x7c]
  4051b0:	jno    0x405199
  4051b2:	xchg   ecx,eax
  4051b3:	pop    es
  4051b4:	push   ds
  4051b5:	mov    ebx,DWORD PTR [esi-0x5b474419]
  4051bb:	adc    ah,BYTE PTR [ecx]
  4051bd:	dec    esi
  4051be:	pop    esi
  4051bf:	mov    ch,0x55
  4051c1:	mov    ebp,0xf3b642d8
  4051c6:	jae    0x40523d
  4051c8:	popa   
  4051c9:	jmp    0x59455e87
  4051ce:	icebp  
  4051cf:	push   esp
  4051d0:	sub    DWORD PTR [ebx-0x5b],ebp
  4051d3:	das    
  4051d4:	clc    
  4051d5:	mov    dl,BYTE PTR [ebp+0x6e]
  4051d8:	call   0xc4d1:0x8e3cc414
  4051df:	repz inc edi
  4051e1:	popa   
  4051e2:	jb     0x4051ac
  4051e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051e5:	dec    ebx
  4051e6:	imul   DWORD PTR [eax*8-0x4bb7bdb]
  4051ed:	mov    edi,0xb15e594
  4051f2:	xor    al,0xa0
  4051f4:	jge    0x405191
  4051f6:	or     dh,ch
  4051f8:	xchg   edi,eax
  4051f9:	out    dx,eax
  4051fa:	aaa    
  4051fb:	and    DWORD PTR [edi+0x257898fb],esp
  405201:	and    ebx,ecx
  405203:	jmp    0x405185
  405205:	add    cl,BYTE PTR [ecx]
  405207:	in     al,0x61
  405209:	cld    
  40520a:	lods   al,BYTE PTR ds:[esi]
  40520b:	fiadd  WORD PTR [edx+0x3b]
  40520e:	pop    esp
  40520f:	in     eax,dx
  405210:	loopne 0x40523b
  405212:	inc    edx
  405213:	sbb    eax,0x9a7226be
  405218:	rcr    BYTE PTR [edx-0x710b2119],cl
  40521e:	sbb    al,0x39
  405220:	push   esp
  405221:	and    BYTE PTR [edi+eax*8],dh
  405224:	xchg   edi,eax
  405225:	dec    edx
  405226:	add    bl,BYTE PTR [esp+ecx*8]
  405229:	dec    esi
  40522a:	dec    edi
  40522b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40522c:	inc    esp
  40522d:	(bad)  
  40522e:	or     al,0x3a
  405230:	push   ss
  405231:	test   dl,al
  405233:	jbe    0x405294
  405235:	cmp    bh,ch
  405237:	mov    ebx,0xd91f42f4
  40523c:	stos   BYTE PTR es:[edi],al
  40523d:	xchg   ecx,eax
  40523e:	jne    0x405204
  405240:	mov    ebx,gs
  405242:	and    ah,BYTE PTR [ecx+eax*1]
  405245:	in     al,0x3f
  405247:	jno    0x4052a3
  405249:	or     DWORD PTR [ecx],ebx
  40524b:	mov    dh,0x9a
  40524d:	add    ebx,DWORD PTR [esi]
  40524f:	and    eax,0x147ddbf4
  405254:	leave  
  405255:	sub    al,0xc7
  405257:	lahf   
  405258:	xchg   ebp,eax
  405259:	pop    ebx
  40525a:	int3   
  40525b:	push   es
  40525c:	sbb    al,0x47
  40525e:	lock jns 0x4051ee
  405261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405262:	ret    
  405263:	retf   
  405264:	sbb    dl,ah
  405266:	and    eax,0xce91e62e
  40526b:	cli    
  40526c:	mov    WORD PTR ds:0x3a4eea12,?
  405272:	cmp    eax,eax
  405274:	mov    BYTE PTR [eax],0x78
  405277:	test   eax,0x59494baf
  40527c:	xor    esp,ebp
  40527e:	push   esi
  40527f:	sub    esi,DWORD PTR [ebx]
  405281:	aaa    
  405282:	add    edi,eax
  405284:	out    0xe5,al
  405286:	sub    edx,DWORD PTR [ecx]
  405288:	push   edi
  405289:	mov    gs,eax
  40528b:	iret   
  40528c:	dec    ebp
  40528d:	add    eax,esi
  40528f:	sbb    al,0x55
  405291:	mov    dl,0x9
  405293:	cmc    
  405294:	mov    ah,0xce
  405296:	mov    eax,ds:0xa0d72204
  40529b:	cdq    
  40529c:	sbb    BYTE PTR [edx+0x20],dl
  40529f:	push   ss
  4052a0:	dec    ebx
  4052a1:	or     eax,0x4a588d2a
  4052a6:	or     BYTE PTR [ebx-0xe],bl
  4052a9:	jmp    0x40526f
  4052ab:	xor    ch,dh
  4052ad:	clc    
  4052ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052af:	or     ebp,DWORD PTR [ebx]
  4052b1:	lods   al,BYTE PTR ds:[esi]
  4052b2:	adc    DWORD PTR [ebp-0x6133a6f5],0xffffffb0
  4052b9:	mov    ah,0x2a
  4052bb:	enter  0xceef,0xfd
  4052bf:	loop   0x4052be
  4052c1:	mov    fs,WORD PTR [edx+0x53e5a02f]
  4052c7:	jl     0x4052b3
  4052c9:	pop    edx
  4052ca:	cs stos DWORD PTR es:[edi],eax
  4052cc:	xchg   ecx,eax
  4052cd:	jnp    0x40532c
  4052cf:	ror    DWORD PTR [ebp-0x7],cl
  4052d2:	jecxz  0x405300
  4052d4:	mov    edi,0xb6bfe2e7
  4052d9:	jo     0x405328
  4052db:	shl    DWORD PTR [ebx+0x6085466],1
  4052e1:	bound  edi,QWORD PTR [ecx+ecx*1-0x5f2f9ce2]
  4052e8:	xchg   esi,eax
  4052e9:	outs   dx,DWORD PTR ds:[esi]
  4052ea:	dec    esi
  4052eb:	pop    ss
  4052ec:	adc    BYTE PTR ds:[edx+0x94c195b],dl
  4052f3:	mov    cl,0xa5
  4052f5:	out    0x78,eax
  4052f7:	in     al,dx
  4052f8:	imul   edx,DWORD PTR [edi],0x3c
  4052fb:	pop    eax
  4052fc:	add    DWORD PTR [ecx+ebx*4],edi
  4052ff:	jle    0x405338
  405301:	retf   0xdc4c
  405304:	pop    edi
  405305:	lods   eax,DWORD PTR ds:[esi]
  405306:	out    dx,eax
  405307:	push   esp
  405308:	hlt    
  405309:	scas   eax,DWORD PTR es:[edi]
  40530a:	cmp    dh,BYTE PTR [edx]
  40530c:	rcl    DWORD PTR [edx],0x82
  40530f:	jne    0x405315
  405311:	sub    ecx,eax
  405313:	clc    
  405314:	inc    edi
  405315:	cli    
  405316:	adc    edi,DWORD PTR [esi+ebx*1]
  405319:	mov    esp,0xf937601f
  40531e:	retf   0xdfcd
  405321:	mov    ds:0x60ac6895,eax
  405326:	enter  0x607f,0x20
  40532a:	xor    BYTE PTR fs:[esi],al
  40532d:	jmp    0x405319
  40532f:	jle    0x405342
  405331:	repz stc 
  405333:	ds or  al,0x13
  405336:	stos   BYTE PTR es:[edi],al
  405337:	mov    WORD PTR [edi+0x5],ds
  40533a:	cmp    eax,0xb4fb8e46
  40533f:	lahf   
  405340:	dec    edx
  405341:	pusha  
  405342:	pop    esi
  405343:	jmp    0x40539a
  405345:	mov    edi,0x1c0a84b9
  40534a:	cli    
  40534b:	hlt    
  40534c:	(bad)  
  40534d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40534e:	stos   BYTE PTR es:[edi],al
  40534f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405350:	jo     0x4053b1
  405352:	ss cli 
  405354:	xor    ecx,esp
  405356:	sbb    dl,bh
  405358:	je     0x40534d
  40535a:	inc    edx
  40535b:	sbb    al,0x9a
  40535d:	add    bl,ah
  40535f:	lea    esi,[ecx+0x36f3868c]
  405365:	push   esp
  405366:	ror    ecx,cl
  405368:	mov    ds:0xaa59dba0,al
  40536d:	jecxz  0x4053d4
  40536f:	out    0x64,eax
  405371:	loopne 0x40536f
  405373:	retf   
  405374:	cmp    al,0xac
  405376:	jp     0x4053d1
  405378:	stc    
  405379:	mov    al,0x65
  40537b:	idiv   DWORD PTR [eax+0x39]
  40537e:	lahf   
  40537f:	pushf  
  405380:	retf   
  405381:	adc    DWORD PTR [esi+0x7ed8121a],ebp
  405387:	mov    ebx,0xedaf2130
  40538c:	cwde   
  40538d:	and    al,BYTE PTR [ebp+0x2c]
  405390:	mov    ah,0x3a
  405392:	shr    DWORD PTR [ebp+0x41],0xda
  405396:	mov    eax,ds:0x73a447df
  40539b:	lds    ebx,FWORD PTR [esi]
  40539d:	add    ah,BYTE PTR ds:0xbeba6c60
  4053a3:	jecxz  0x405364
  4053a5:	(bad)  
  4053a6:	mov    esi,0xdac44485
  4053ab:	ret    0x8f9d
  4053ae:	push   cs
  4053af:	daa    
  4053b0:	add    eax,0x8517ded4
  4053b5:	add    BYTE PTR [ebx+0x50],ch
  4053b8:	or     DWORD PTR [ebp+0x384dc881],esi
  4053be:	sub    al,0xf2
  4053c0:	mov    ebx,0xc836d12d
  4053c5:	pop    ds
  4053c6:	scas   eax,DWORD PTR es:[edi]
  4053c7:	adc    BYTE PTR [edi-0x33240f85],ch
  4053cd:	ds jo  0x40544c
  4053d0:	shl    ch,1
  4053d2:	push   es
  4053d3:	mov    ch,0xd9
  4053d5:	in     eax,0x18
  4053d7:	fs inc ecx
  4053d9:	jg     0x40543e
  4053db:	sti    
  4053dc:	inc    esi
  4053dd:	dec    esi
  4053de:	call   0x3b9d1dcf
  4053e3:	icebp  
  4053e4:	shl    DWORD PTR [ebp+0x106d27a],0x20
  4053eb:	enter  0x403b,0x93
  4053ef:	sub    BYTE PTR [edi-0x5eabb90a],dl
  4053f5:	loopne 0x4053b4
  4053f7:	repnz fmul QWORD PTR [ecx]
  4053fa:	mov    ebp,0x636f5c48
  4053ff:	inc    esi
  405400:	or     eax,DWORD PTR [esi]
  405402:	push   0x26
  405404:	stos   BYTE PTR es:[edi],al
  405405:	lea    edi,[ebp-0x11]
  405408:	inc    edx
  405409:	jbe    0x40540b
  40540b:	cwde   
  40540c:	pop    esp
  40540d:	push   0x59
  40540f:	ror    BYTE PTR [edx+ebx*2-0x6f],1
  405413:	jle    0x405433
  405415:	jns    0x405479
  405417:	rcl    BYTE PTR [eax-0x2f],0xcd
  40541b:	jae    0x4053e3
  40541d:	xchg   ecx,eax
  40541e:	inc    ecx
  40541f:	inc    ebp
  405420:	iret   
  405421:	mov    eax,esp
  405423:	or     bh,0x6b
  405426:	js     0x4053bf
  405428:	fmul   QWORD PTR [eax]
  40542a:	lods   eax,DWORD PTR ds:[esi]
  40542b:	sbb    ah,BYTE PTR [edx]
  40542d:	dec    esi
  40542e:	dec    edx
  40542f:	mov    ch,0xb6
  405431:	pop    esp
  405432:	xlat   BYTE PTR ds:[ebx]
  405433:	call   0xd5c3:0xa6a69ecb
  40543a:	add    al,0x46
  40543c:	jne    0x4054ac
  40543e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40543f:	scas   eax,DWORD PTR es:[edi]
  405440:	sub    esi,ecx
  405442:	int3   
  405443:	mov    edi,0x74b94036
  405448:	sahf   
  405449:	jp     0x4053e6
  40544b:	or     cl,ah
  40544d:	(bad)  
  40544e:	lods   eax,DWORD PTR es:[si]
  405451:	jmp    0x405407
  405453:	pshufw mm6,mm2,0xfe
  405457:	or     ch,BYTE PTR [edx+0x74]
  40545a:	mov    esi,0x57a0be44
  40545f:	push   edx
  405460:	(bad)  
  405461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405462:	popa   
  405463:	and    esi,DWORD PTR [esi+0x38]
  405466:	fistp  QWORD PTR [edi-0x66f134ad]
  40546c:	and    DWORD PTR [ebx],0xb7d9a044
  405472:	push   ds
  405473:	les    esp,FWORD PTR [esi+0x65]
  405476:	int3   
  405477:	or     eax,0x2c77235a
  40547c:	shr    BYTE PTR [esi-0x8d95286],cl
  405482:	fsubr  QWORD PTR [edx+eax*8]
  405485:	or     ebp,DWORD PTR [esi+0x6b6fc1ab]
  40548b:	jmp    0x8bbc0a39
  405490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405491:	dec    ebx
  405492:	xchg   edi,eax
  405493:	jle    0x4054b3
  405495:	retf   0xc14
  405498:	mov    ds:0x56568fc6,eax
  40549d:	das    
  40549e:	test   eax,0x9a98a96c
  4054a3:	xchg   edi,eax
  4054a4:	xchg   esp,ebx
  4054a6:	cld    
  4054a7:	pushf  
  4054a8:	push   ds
  4054a9:	out    0x46,eax
  4054ab:	test   DWORD PTR ds:0xb39d1e7f,0x289aa286
  4054b5:	fild   WORD PTR [ecx+0x6e]
  4054b8:	dec    edx
  4054b9:	xchg   esp,ebx
  4054bb:	or     BYTE PTR [ebp+0x4edc43a4],0xe2
  4054c2:	or     eax,0xbd608302
  4054c7:	icebp  
  4054c8:	mov    edi,0x622f0682
  4054cd:	pusha  
  4054ce:	sub    BYTE PTR [edi+0x115f95a7],cl
  4054d4:	adc    eax,DWORD PTR [ebx+0x7c1315c9]
  4054da:	mov    edx,0x831d2af5
  4054df:	shl    DWORD PTR es:[esi],0xfc
  4054e3:	fcomp  QWORD PTR [eax]
  4054e5:	lods   eax,DWORD PTR ds:[esi]
  4054e6:	icebp  
  4054e7:	mov    dl,0x97
  4054e9:	adc    DWORD PTR [edx],edi
  4054eb:	sar    BYTE PTR [esi-0x5e],1
  4054ee:	es add cl,dl
  4054f1:	sar    DWORD PTR ds:0x557dcba0,0x35
  4054f8:	xchg   ebx,eax
  4054f9:	cli    
  4054fa:	sbb    edi,DWORD PTR [esi+0x189cc93]
  405500:	aam    0xb7
  405502:	pop    esp
  405503:	dec    ecx
  405504:	int    0x47
  405506:	sbb    esi,ecx
  405508:	inc    ebx
  405509:	int3   
  40550a:	jg     0x4054d5
  40550c:	in     eax,0xe4
  40550e:	pop    edx
  40550f:	inc    edx
  405510:	(bad)  
  405511:	std    
  405512:	xchg   esp,eax
  405513:	jb     0x405557
  405515:	xchg   edx,eax
  405516:	push   ss
  405517:	inc    ecx
  405518:	push   esi
  405519:	lea    esp,[ebx]
  40551b:	pop    edi
  40551c:	enter  0x5e5,0x9d
  405520:	pushf  
  405521:	pop    ecx
  405522:	imul   esi,DWORD PTR ds:0x1e1264f3,0x52
  405529:	mov    eax,ds:0xa7d6d30e
  40552e:	adc    BYTE PTR [ecx-0x65310f63],0xa5
  405535:	lahf   
  405536:	shr    bh,0x1e
  405539:	pop    ebx
  40553a:	xor    al,0x42
  40553c:	add    DWORD PTR [edi],ebx
  40553e:	xlat   BYTE PTR ds:[ebx]
  40553f:	inc    ecx
  405540:	mov    edx,0x2622b990
  405545:	adc    DWORD PTR [ebp+0x768880c0],0x52
  40554c:	popa   
  40554d:	mov    ebx,0x9c0a46b3
  405552:	sub    edx,DWORD PTR [edx]
  405554:	loopne 0x4055ca
  405556:	jno    0x40555e
  405558:	sub    eax,esi
  40555a:	xor    DWORD PTR [eax-0x7f],ebx
  40555d:	aam    0xd1
  40555f:	fisub  DWORD PTR [ebx+eiz*1]
  405562:	xor    BYTE PTR [esi*2+0x4a6401f3],bl
  405569:	add    eax,0x222f123d
  40556e:	or     al,0xc3
  405570:	push   0x42
  405572:	retf   0xdc9b
  405575:	cmp    ebx,DWORD PTR [ebx]
  405577:	mov    bl,0x81
  405579:	repz or edi,esi
  40557c:	imul   ebx,DWORD PTR [edx-0x1c],0x8f61a1ce
  405583:	nop
  405584:	and    al,dl
  405586:	push   es
  405587:	test   al,0xaf
  405589:	mov    eax,0x3591db42
  40558e:	mov    cl,0x67
  405590:	sbb    BYTE PTR [ecx-0x27f7eb8b],ch
  405596:	or     BYTE PTR [edx-0x60c1a38e],bh
  40559c:	adc    bh,BYTE PTR [esp+esi*2+0x7198e884]
  4055a3:	mov    edi,0xeff4cc0a
  4055a8:	adc    bl,0xde
  4055ab:	push   cs
  4055ac:	inc    esp
  4055ad:	adc    edi,edx
  4055af:	scas   eax,DWORD PTR es:[edi]
  4055b0:	mov    dl,0x7
  4055b2:	mov    al,ds:0xde091487
  4055b7:	sbb    ch,cl
  4055b9:	fadd   DWORD PTR [ecx-0x5c7ad7eb]
  4055bf:	sbb    al,dh
  4055c1:	das    
  4055c2:	cwde   
  4055c3:	and    eax,0xc5f39d8e
  4055c8:	nop
  4055c9:	in     al,dx
  4055ca:	jl     0x4055ef
  4055cc:	or     ecx,DWORD PTR fs:[edi]
  4055cf:	outs   dx,DWORD PTR ds:[esi]
  4055d0:	test   al,0x62
  4055d2:	sub    al,0x37
  4055d4:	xchg   edx,eax
  4055d5:	dec    esi
  4055d6:	xor    BYTE PTR [ebp-0x538d7664],bl
  4055dc:	cwde   
  4055dd:	push   ebp
  4055de:	mov    ds:0xe8e426e0,al
  4055e3:	outs   dx,BYTE PTR ds:[esi]
  4055e4:	or     al,0x89
  4055e6:	add    DWORD PTR [edx+0x67770f87],0x38e0c932
  4055f0:	or     bl,BYTE PTR [eax+0x3]
  4055f3:	xchg   DWORD PTR [eax-0x50ae2e50],edi
  4055f9:	cmp    DWORD PTR [edx-0x1b],ecx
  4055fc:	(bad)  
  4055fd:	nop
  4055fe:	push   cs
  4055ff:	adc    eax,0xbb3d6991
  405604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405605:	fwait
  405606:	loop   0x4055aa
  405608:	dec    ebp
  405609:	mov    ds:0x6a395e1c,eax
  40560e:	xchg   esp,eax
  40560f:	test   cl,dl
  405611:	in     eax,0xd4
  405613:	pop    esp
  405614:	mov    ebp,0x38712481
  405619:	pop    esp
  40561a:	ins    DWORD PTR es:[edi],dx
  40561b:	repz mov edx,0x5cbccc7b
  405621:	aad    0x9
  405623:	and    ecx,DWORD PTR [edx+0x3e]
  405626:	pop    es
  405627:	or     ebp,DWORD PTR [esi]
  405629:	xchg   edi,eax
  40562a:	out    dx,eax
  40562b:	xchg   esi,eax
  40562c:	fidiv  WORD PTR [ebp-0x41e74025]
  405632:	cwde   
  405633:	ret    0x8e9b
  405636:	pop    es
  405637:	sbb    BYTE PTR ds:[edi+0x2e7ea6ae],bl
  40563e:	xlat   BYTE PTR ds:[ebx]
  40563f:	into   
  405640:	in     eax,0x49
  405642:	pop    ecx
  405643:	fst    DWORD PTR [eax+0x4b]
  405646:	rol    ch,0xb0
  405649:	xchg   edi,eax
  40564a:	push   0x3255be5a
  40564f:	shr    dl,0x99
  405652:	inc    eax
  405653:	sti    
  405654:	mov    dh,0xfe
  405656:	mov    eax,0x53c56a88
  40565b:	pop    es
  40565c:	or     edx,DWORD PTR [eax+0x579ef009]
  405662:	jo     0x40563e
  405664:	lds    eax,FWORD PTR [esi+eiz*2+0x43d111f4]
  40566b:	sub    BYTE PTR [eax+0x6149108d],dh
  405671:	mov    al,0x63
  405673:	jbe    0x405697
  405675:	adc    DWORD PTR [ebx],esp
  405677:	and    ch,BYTE PTR [ecx]
  405679:	fadd   st,st(5)
  40567b:	mov    es,WORD PTR [edi]
  40567d:	xor    esi,DWORD PTR [ebx+0x18ea7cc9]
  405683:	and    DWORD PTR [ebp+0x7e],0xffffff99
  405687:	push   esp
  405688:	adc    BYTE PTR [edx-0x32],al
  40568b:	(bad)  
  40568c:	in     eax,dx
  40568d:	mov    al,0x9c
  40568f:	pop    eax
  405690:	or     eax,esi
  405692:	add    al,0xa0
  405694:	das    
  405695:	dec    ebx
  405696:	daa    
  405697:	push   ds
  405698:	js     0x405693
  40569a:	dec    esp
  40569b:	mov    ds:0x43693e3c,eax
  4056a0:	mov    eax,edx
  4056a2:	icebp  
  4056a3:	xchg   ebx,eax
  4056a4:	aad    0x7c
  4056a6:	inc    esp
  4056a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056a8:	rol    BYTE PTR [edi-0x31],1
  4056ab:	mov    al,0xd3
  4056ad:	test   eax,0xb44c4cde
  4056b2:	stos   BYTE PTR es:[edi],al
  4056b3:	adc    BYTE PTR [edi-0x23],dh
  4056b6:	dec    ebp
  4056b7:	mov    bl,0xed
  4056b9:	mov    ds:0x6c6c00a1,al
  4056be:	or     eax,0xcbda004b
  4056c3:	xor    eax,0xe6ba9155
  4056c8:	mov    al,0xa0
  4056ca:	fisubr WORD PTR [esi-0x13239763]
  4056d0:	je     0x4056bb
  4056d2:	fwait
  4056d3:	sbb    esp,DWORD PTR [esp+ebp*8]
  4056d6:	repz dec eax
  4056d8:	imul   ebp,DWORD PTR [edi-0x449ebeb4],0xd981e8bd
  4056e2:	jo     0x405748
  4056e4:	jle    0x40571e
  4056e6:	xchg   DWORD PTR [eax-0x66addff2],eax
  4056ec:	add    al,0xf3
  4056ee:	in     eax,dx
  4056ef:	loopne 0x4056ad
  4056f1:	sbb    al,0x35
  4056f3:	lock je 0x40575e
  4056f6:	imul   eax,DWORD PTR [edx+0x50682e9a],0xfad0695d
  405700:	fucomip st,st(6)
  405702:	push   es
  405703:	sbb    al,0x8a
  405705:	jmp    0x70af:0xcfd6e540
  40570c:	(bad)  
  40570d:	lock (bad) 
  40570f:	popf   
  405710:	cmp    ah,al
  405712:	or     BYTE PTR [ecx+eiz*4],ah
  405715:	and    eax,0xae913380
  40571a:	repnz add BYTE PTR [ecx],bl
  40571d:	pop    esp
  40571e:	mov    ah,BYTE PTR [edx-0x3e284773]
  405724:	xchg   esi,eax
  405725:	adc    ch,BYTE PTR [esi]
  405727:	push   ss
  405728:	shl    bh,0xdc
  40572b:	test   al,0x5f
  40572d:	xchg   ebp,eax
  40572e:	inc    ecx
  40572f:	sub    eax,0x804fc5c4
  405734:	stos   DWORD PTR es:[edi],eax
  405735:	fstp   st(4)
  405737:	out    dx,eax
  405738:	dec    ecx
  405739:	je     0x405714
  40573b:	mov    eax,0x67f10c80
  405740:	sbb    eax,DWORD PTR [ebp+0x77]
  405743:	pop    es
  405744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405745:	push   0xffffff90
  405747:	xlat   BYTE PTR ds:[ebx]
  405748:	push   eax
  405749:	lds    ecx,FWORD PTR [ebx+0x597ffb9d]
  40574f:	mov    al,ds:0xc74630a9
  405754:	js     0x405777
  405756:	pop    ds
  405757:	js     0x405766
  405759:	jl     0x4056e8
  40575b:	pop    edi
  40575c:	repnz push cs
  40575e:	outs   dx,BYTE PTR ds:[esi]
  40575f:	and    esp,0xed4f9439
  405765:	loope  0x4057a3
  405767:	jb     0x4056f0
  405769:	dec    eax
  40576a:	pop    esp
  40576b:	das    
  40576c:	fs aas 
  40576e:	or     al,0x48
  405770:	mov    ch,0x84
  405772:	jns    0x405738
  405774:	rcr    edx,0x12
  405777:	sub    al,BYTE PTR [edx-0x6b]
  40577a:	lds    edx,FWORD PTR [esi-0x2a]
  40577d:	sub    cl,ah
  40577f:	and    ah,BYTE PTR [ebp+0x51]
  405782:	xlat   BYTE PTR ds:[ebx]
  405783:	outs   dx,BYTE PTR ds:[esi]
  405784:	mov    ah,0x2
  405786:	pop    edi
  405787:	pop    edx
  405788:	ret    
  405789:	dec    edx
  40578a:	das    
  40578b:	jne    0x4057ce
  40578d:	jg     0x405764
  40578f:	out    dx,eax
  405790:	shr    DWORD PTR [ebx+0x67],cl
  405793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405794:	xchg   ebx,eax
  405795:	fnsave [esi]
  405797:	jmp    0xc6a6fb0d
  40579c:	sahf   
  40579d:	test   BYTE PTR [ecx+0x1e],0x80
  4057a1:	jecxz  0x4057c8
  4057a3:	jae    0x405813
  4057a5:	aam    0x36
  4057a7:	shl    BYTE PTR [edi],0x13
  4057aa:	enter  0x2907,0xfd
  4057ae:	fucom  st(5)
  4057b0:	xlat   BYTE PTR ds:[ebx]
  4057b1:	cwde   
  4057b2:	(bad)  
  4057b3:	push   ebp
  4057b4:	iret   
  4057b5:	aas    
  4057b6:	mov    ?,WORD PTR [ebx-0x1d]
  4057b9:	and    esi,DWORD PTR [eax]
  4057bb:	(bad)  
  4057bc:	stc    
  4057bd:	stos   BYTE PTR es:[edi],al
  4057be:	xchg   edx,eax
  4057bf:	push   esp
  4057c0:	rcr    BYTE PTR [ebp-0x377ca47c],1
  4057c6:	jmp    0x40575e
  4057c8:	jge    0x40575a
  4057ca:	out    0xcf,eax
  4057cc:	std    
  4057cd:	ss gs add BYTE PTR ss:[ebx],bl
  4057d2:	sar    BYTE PTR [esi+0x5abe7f07],1
  4057d8:	xchg   edi,eax
  4057d9:	add    BYTE PTR [edi+0x78e8bfa8],dl
  4057df:	xor    BYTE PTR [eax+edi*2-0x105d6929],bl
  4057e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e7:	sar    BYTE PTR [edi+ebp*4-0x10],0x4f
  4057ec:	push   edi
  4057ed:	mov    cl,0x96
  4057ef:	retf   0xbe7c
  4057f2:	inc    edi
  4057f3:	mov    eax,0xeab1471
  4057f8:	test   BYTE PTR fs:[eax+0x1e],ch
  4057fc:	jmp    0xedfa2742
  405801:	jmp    0x4057fe
  405803:	(bad)  
  405804:	xchg   DWORD PTR [edx],edx
  405806:	dec    edi
  405807:	test   al,0x4c
  405809:	adc    eax,0xa6647629
  40580e:	aaa    
  40580f:	popf   
  405810:	or     BYTE PTR [edx+0x72],cl
  405813:	dec    edi
  405814:	or     bp,sp
  405817:	add    al,dl
  405819:	fiadd  DWORD PTR [ecx+0x679c969f]
  40581f:	push   eax
  405820:	mov    ebx,0x94e31099
  405825:	jae    0x4057f1
  405827:	push   0xfffffff5
  405829:	iret   
  40582a:	mov    ebp,0x64ed7358
  40582f:	xchg   esp,eax
  405830:	(bad)  
  405831:	jmp    0x959327e3
  405836:	xor    esi,ebp
  405838:	sbb    DWORD PTR [edx+0x3],edi
  40583b:	jmp    0x405827
  40583d:	xchg   ebx,eax
  40583e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40583f:	adc    ah,BYTE PTR [ebp-0x23]
  405842:	xchg   edi,eax
  405843:	jb     0x4057d9
  405845:	test   al,0x81
  405847:	push   edx
  405848:	imul   esi,DWORD PTR [ecx-0x47d58fe8],0x8bd81f24
  405852:	jne    0x405806
  405854:	pop    esi
  405855:	lods   eax,DWORD PTR ds:[esi]
  405856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405857:	lahf   
  405858:	sbb    dh,cl
  40585a:	push   ebp
  40585b:	rcr    DWORD PTR [edx-0x5a],0x9a
  40585f:	loope  0x405828
  405861:	mov    bl,BYTE PTR [ebp-0x58]
  405864:	xor    BYTE PTR [edi-0x70],dl
  405867:	cmp    dh,al
  405869:	mov    bl,0x82
  40586b:	xor    al,0xb7
  40586d:	outs   dx,BYTE PTR ds:[si]
  40586f:	push   esi
  405870:	lock jae 0x40580b
  405873:	cwde   
  405874:	(bad)  
  405875:	sub    dl,BYTE PTR [eax-0x7a]
  405878:	and    eax,DWORD PTR [esi]
  40587a:	pop    ebp
  40587b:	add    DWORD PTR [ebp+0x4f],0x8
  40587f:	add    ebp,0x6
  405882:	in     eax,dx
  405883:	adc    edi,DWORD PTR [edi-0x4027a94]
  405889:	ja     0x405895
  40588b:	sub    edi,esi
  40588d:	adc    BYTE PTR [ebx-0x7d56f714],bh
  405893:	xchg   edi,eax
  405894:	push   ecx
  405895:	jns    0x405890
  405897:	xchg   ebx,eax
  405898:	std    
  405899:	adc    eax,0x48a7a843
  40589e:	dec    edi
  40589f:	mov    al,0x23
  4058a1:	jno    0x4058ba
  4058a3:	mov    ecx,DWORD PTR [edi]
  4058a5:	xchg   esi,eax
  4058a6:	sahf   
  4058a7:	shl    BYTE PTR [edx],cl
  4058a9:	clc    
  4058aa:	mov    edx,0xf6ce1ac8
  4058af:	out    dx,eax
  4058b0:	cmp    BYTE PTR [eax+0x4a8c5bff],0xe8
  4058b7:	mov    ebx,0x1827326c
  4058bc:	loop   0x4058ad
  4058be:	mov    al,0xd2
  4058c0:	cmovae esp,DWORD PTR [ebx]
  4058c3:	loopne 0x4058cc
  4058c5:	mov    dh,dl
  4058c7:	ret    0x45af
  4058ca:	dec    ebx
  4058cb:	push   ds
  4058cc:	push   0xffffffe7
  4058ce:	push   ebx
  4058cf:	cmp    al,0x15
  4058d1:	cmc    
  4058d2:	(bad)  
  4058d3:	imul   eax,DWORD PTR [eax],0xe31a5505
  4058d9:	mul    DWORD PTR [edx-0x53a9fb4e]
  4058df:	dec    edi
  4058e0:	jle    0x405875
  4058e2:	mov    esi,0xce5b5370
  4058e7:	jo     0x405916
  4058e9:	sub    DWORD PTR [esi],eax
  4058eb:	xchg   esp,eax
  4058ec:	ror    DWORD PTR [edx],1
  4058ee:	xlat   BYTE PTR ds:[ebx]
  4058ef:	pop    es
  4058f0:	inc    ebp
  4058f1:	push   0x63
  4058f3:	add    BYTE PTR [ebx-0x9f27a20],dh
  4058f9:	jmp    0x5092:0x230c268d
  405900:	es nop
  405902:	mov    ebp,DWORD PTR [ecx]
  405904:	mov    ebx,0x280adb02
  405909:	push   0x3c
  40590b:	cmc    
  40590c:	js     0x405935
  40590e:	push   ecx
  40590f:	lock iret 
  405911:	adc    edx,DWORD PTR [ebx-0x56]
  405914:	sbb    al,0x5b
  405916:	aam    0x20
  405918:	add    DWORD PTR [esi+ebp*1],esi
  40591b:	repnz repz pop esp
  40591e:	xchg   ecx,eax
  40591f:	adc    bl,BYTE PTR [ebx+ebp*8]
  405922:	add    eax,0x2d617529
  405927:	cli    
  405928:	push   edi
  405929:	data16 fild WORD PTR [ecx]
  40592c:	inc    ebx
  40592d:	cmp    dh,bh
  40592f:	dec    esi
  405930:	xchg   ebx,eax
  405931:	call   0x700cd6ff
  405936:	shr    DWORD PTR [ecx+0xb],1
  405939:	out    0x50,al
  40593b:	sub    esi,DWORD PTR [edi-0x277ccbbc]
  405941:	jle    0x4058d4
  405943:	es xchg esi,eax
  405945:	xor    BYTE PTR [esi+eiz*4+0x5b],0x93
  40594a:	inc    ebp
  40594b:	xor    BYTE PTR [ecx-0xe4e5f2f],cl
  405951:	xchg   DWORD PTR [ecx-0x2a],ecx
  405954:	jge    0x405929
  405956:	into   
  405957:	inc    edx
  405958:	test   cl,ah
  40595a:	sbb    ebx,DWORD PTR ds:0xbc807656
  405960:	inc    ebp
  405961:	cmc    
  405962:	add    al,dl
  405964:	jne    0x405955
  405966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405968:	sti    
  405969:	jae    0x405951
  40596b:	mov    ds:0x50b67bc2,al
  405970:	pop    ds
  405971:	xor    BYTE PTR ds:0x9501704b,bh
  405977:	mov    ecx,0xa08306fd
  40597c:	lds    ebp,FWORD PTR [ebx-0x6a]
  40597f:	ins    BYTE PTR es:[edi],dx
  405980:	sub    al,0x7f
  405982:	inc    ecx
  405983:	fild   DWORD PTR [ebx-0x57]
  405986:	aad    0xea
  405988:	popa   
  405989:	addr16 leave 
  40598b:	data16 lahf 
  40598d:	sar    DWORD PTR [edx+0x591f7caf],cl
  405993:	sub    eax,0x622b6173
  405998:	adc    BYTE PTR [esi],bl
  40599a:	sahf   
  40599b:	call   0xea86:0x9469cb04
  4059a2:	mov    WORD PTR [edx+esi*2],ds
  4059a5:	gs lahf 
  4059a7:	sar    BYTE PTR [edx],1
  4059a9:	das    
  4059aa:	imul   esp,DWORD PTR [edi],0x995f3792
  4059b0:	pop    es
  4059b1:	mov    eax,ds:0xfc185c0e
  4059b6:	inc    ebx
  4059b7:	or     eax,0x73c003d6
  4059bc:	push   eax
  4059bd:	push   es
  4059be:	inc    esp
  4059bf:	adc    al,0x2a
  4059c1:	inc    eax
  4059c2:	lds    eax,FWORD PTR [ebx-0x4501444]
  4059c8:	xchg   BYTE PTR cs:[edi-0x61b688],dl
  4059cf:	in     eax,dx
  4059d0:	mov    dl,0x75
  4059d2:	adc    eax,0xd9d0e1fc
  4059d7:	test   bl,dl
  4059d9:	bound  esi,QWORD PTR [ebx+0x89ae37f]
  4059df:	jmp    0xcd1f:0x147bcd6
  4059e6:	lock test DWORD PTR [esi],ecx
  4059e9:	test   edi,esp
  4059eb:	test   BYTE PTR [edi+edx*2],cl
  4059ee:	or     eax,0x5508bef8
  4059f3:	mov    esi,0xf97ec07d
  4059f8:	jecxz  0x405a61
  4059fa:	mov    al,cl
  4059fc:	shl    DWORD PTR [ecx-0x20],1
  4059ff:	mov    ebp,0x2d3d0808
  405a04:	and    eax,0x45097137
  405a09:	mov    ds,WORD PTR ds:0xdbd69861
  405a0f:	ret    
  405a10:	xchg   DWORD PTR [ebx+0x42c17155],ebx
  405a16:	jno    0x4059c4
  405a18:	cmp    al,0x56
  405a1a:	mov    cl,BYTE PTR [eax-0x3c725231]
  405a20:	dec    ebp
  405a21:	xor    BYTE PTR [eax-0x5f],ch
  405a24:	mov    al,0x7c
  405a26:	xchg   esp,edx
  405a28:	inc    edi
  405a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2a:	and    eax,0x2b5b11aa
  405a2f:	sti    
  405a30:	into   
  405a31:	in     eax,0xc
  405a33:	rcr    DWORD PTR [ecx+ebp*2-0xe082744],1
  405a3a:	push   0x5dd8c8fd
  405a3f:	(bad)  
  405a40:	fdiv   QWORD PTR [esi+0x46febc72]
  405a46:	aam    0x31
  405a48:	rcr    DWORD PTR [edi+ebp*1+0x64],0x4b
  405a4d:	arpl   WORD PTR [eax+esi*1],di
  405a50:	mov    al,0x36
  405a52:	push   0x6a
  405a54:	lods   eax,DWORD PTR ds:[esi]
  405a55:	into   
  405a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a57:	xchg   ebp,eax
  405a58:	loop   0x405a18
  405a5a:	push   ebp
  405a5b:	retf   
  405a5c:	sub    al,0x91
  405a5e:	mov    ch,0x14
  405a60:	jns    0x405a4b
  405a62:	in     al,0xcb
  405a64:	arpl   sp,di
  405a66:	xor    BYTE PTR [edx-0x5d],ah
  405a69:	dec    esp
  405a6a:	mov    eax,DWORD PTR [ebx+0x6646ac3b]
  405a70:	mov    eax,ds:0xe278faf0
  405a75:	lds    ebp,FWORD PTR [ebp+0x1e]
  405a78:	adc    BYTE PTR [ebx],ch
  405a7a:	rol    DWORD PTR [edi+0x6],0x7b
  405a7e:	leave  
  405a7f:	std    
  405a80:	lock xchg ebp,eax
  405a82:	fidiv  DWORD PTR [ebx]
  405a84:	aam    0xde
  405a86:	mov    edx,0x4c66eae7
  405a8b:	jl     0x405a51
  405a8d:	dec    ebx
  405a8e:	xor    al,0xef
  405a90:	add    ebp,edi
  405a92:	into   
  405a93:	std    
  405a94:	call   0x9cae3f1
  405a99:	push   0xffffffd2
  405a9b:	dec    esi
  405a9c:	jecxz  0x405a34
  405a9e:	in     al,dx
  405a9f:	mov    edi,0x799c3dd2
  405aa4:	add    DWORD PTR [ecx*4+0x2545413e],esp
  405aab:	ins    DWORD PTR es:[edi],dx
  405aac:	out    0xd0,eax
  405aae:	(bad)  
  405aaf:	(bad)  
  405ab0:	sub    al,0x3
  405ab2:	int3   
  405ab3:	mov    ds:0xc52ab715,al
  405ab8:	nop
  405ab9:	rcl    BYTE PTR [ebp-0x28e5931f],0x29
  405ac0:	xchg   edx,eax
  405ac1:	add    ch,BYTE PTR [eax-0x1a7eb79]
  405ac7:	stc    
  405ac8:	xor    BYTE PTR [ecx-0x46],ch
  405acb:	and    bh,dh
  405acd:	sbb    eax,0xdcc2923c
  405ad2:	mov    ?,WORD PTR [esi+0x31]
  405ad5:	dec    edx
  405ad6:	push   edx
  405ad7:	in     eax,dx
  405ad8:	das    
  405ad9:	imul   ebx,DWORD PTR [eax],0x21e28f3e
  405adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ae0:	ds mov esi,edi
  405ae3:	push   0xffffff84
  405ae5:	xor    cl,BYTE PTR [ebx]
  405ae7:	das    
  405ae8:	loop   0x405b34
  405aea:	int3   
  405aeb:	jnp    0x405a7e
  405aed:	mov    ?,WORD PTR [esi-0x36]
  405af0:	retf   0xaae9
  405af3:	out    0x73,al
  405af5:	data16 jo 0x405b6f
  405af8:	stos   DWORD PTR es:[edi],eax
  405af9:	in     al,0x95
  405afb:	push   ecx
  405afc:	in     al,0xa6
  405afe:	mov    ecx,0xb348b9cd
  405b03:	ja     0x405ab9
  405b05:	retf   0xa164
  405b08:	stos   DWORD PTR es:[edi],eax
  405b09:	fst    QWORD PTR [esi-0x45bda8c2]
  405b0f:	cld    
  405b10:	xchg   edi,ebx
  405b12:	bound  edx,QWORD PTR [esi-0xc]
  405b15:	dec    esi
  405b16:	(bad)  [ecx]
  405b18:	sub    eax,0x70818174
  405b1d:	test   eax,0x278938f
  405b22:	pop    eax
  405b23:	pop    ecx
  405b24:	mov    cl,0xc4
  405b26:	dec    edx
  405b27:	and    DWORD PTR [ebp-0x13],0xffffffe4
  405b2b:	or     dh,ch
  405b2d:	lods   al,BYTE PTR ds:[esi]
  405b2e:	rol    BYTE PTR ds:[eax],1
  405b31:	in     eax,0xb0
  405b33:	cs ins DWORD PTR es:[edi],dx
  405b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b36:	mov    esp,0x5ee7d009
  405b3b:	adc    ax,0x178b
  405b3f:	outs   dx,BYTE PTR ds:[esi]
  405b40:	pop    ds
  405b41:	mov    esi,0xef2ed44e
  405b46:	push   ss
  405b47:	xor    DWORD PTR ds:0x98942931,esp
  405b4d:	out    dx,eax
  405b4e:	sti    
  405b4f:	cdq    
  405b50:	lods   al,BYTE PTR ds:[esi]
  405b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b52:	xchg   DWORD PTR [ecx-0x20],ecx
  405b55:	dec    edi
  405b56:	loop   0x405b63
  405b58:	sub    eax,0xd38c60cc
  405b5d:	repnz in ax,0x95
  405b61:	cmp    bl,BYTE PTR [eax]
  405b63:	push   0x21
  405b65:	rcr    DWORD PTR [eax-0x32],0x3e
  405b69:	mov    eax,0xa5882ffc
  405b6e:	adc    ch,BYTE PTR [eax+0x1ce52918]
  405b74:	aam    0x9
  405b76:	jge    0x405be1
  405b78:	mov    ds:0x9dfbc24c,eax
  405b7d:	fcmovbe st,st(0)
  405b7f:	mov    WORD PTR [esi],cs
  405b81:	retf   0x5d66
  405b84:	aas    
  405b85:	js     0x405b1a
  405b87:	js     0x405b54
  405b89:	xchg   DWORD PTR [ecx-0x59],esi
  405b8c:	xor    eax,0xdca19ae
  405b91:	cwde   
  405b92:	rcl    BYTE PTR [esi-0x38d1a737],cl
  405b98:	into   
  405b99:	int    0x1d
  405b9b:	dec    edx
  405b9c:	call   0xdcd5:0x155c802c
  405ba3:	cdq    
  405ba4:	loopne 0x405bef
  405ba6:	aaa    
  405ba7:	sbb    al,BYTE PTR [esi+ecx*1]
  405baa:	pop    eax
  405bab:	xor    bh,BYTE PTR [esp+esi*8-0x2a]
  405baf:	and    cl,BYTE PTR [ebx+edi*4+0x6b]
  405bb3:	or     al,0x20
  405bb5:	inc    edi
  405bb6:	idiv   eax
  405bb8:	sub    DWORD PTR [edi-0x70c8c582],eax
  405bbe:	pop    es
  405bbf:	das    
  405bc0:	mov    dh,0xd9
  405bc2:	imul   edi,DWORD PTR [eax],0xcd8ec162
  405bc8:	mov    bl,0xff
  405bca:	ins    BYTE PTR es:[edi],dx
  405bcb:	mov    ebp,edx
  405bcd:	test   DWORD PTR [ebx+eax*4],esi
  405bd0:	xor    al,0xcb
  405bd2:	and    ebx,ebp
  405bd4:	iret   
  405bd5:	mov    BYTE PTR [ecx-0x31612528],cl
  405bdb:	lds    ecx,FWORD PTR [edi+0x2131bbac]
  405be1:	icebp  
  405be2:	xchg   edx,eax
  405be3:	jl     0x405be0
  405be5:	or     BYTE PTR [esi-0x1a],dh
  405be8:	sahf   
  405be9:	mov    bh,BYTE PTR [ebp+0x2a]
  405bec:	sub    bl,dh
  405bee:	jge    0x405c38
  405bf0:	push   ds
  405bf1:	ror    BYTE PTR [ebp-0x52],0x15
  405bf5:	fxch   st(5)
  405bf7:	push   es
  405bf8:	xchg   DWORD PTR [eax],edx
  405bfa:	xlat   BYTE PTR ds:[ebx]
  405bfb:	repnz enter 0xbc02,0xb
  405c00:	mov    WORD PTR [ecx+eiz*4],ss
  405c03:	sub    DWORD PTR [esi+0x47],ebp
  405c06:	lds    ecx,FWORD PTR [ecx+eax*2-0x2a68b552]
  405c0d:	and    eax,0x4a9a19cc
  405c12:	dec    ebx
  405c13:	sti    
  405c14:	lock pushf 
  405c16:	cmp    DWORD PTR [eax],0x1f
  405c19:	lds    esi,FWORD PTR [edi-0x60]
  405c1c:	iret   
  405c1d:	outs   dx,BYTE PTR ds:[esi]
  405c1e:	cwde   
  405c1f:	cmp    esi,DWORD PTR [ecx-0x1aadb729]
  405c25:	xchg   edx,eax
  405c26:	mov    ebx,0xcba2cd9e
  405c2b:	mov    al,ds:0x187fc24a
  405c30:	out    0x4,eax
  405c32:	sbb    BYTE PTR [esi-0x7d],ah
  405c35:	cli    
  405c36:	ja     0x405c20
  405c38:	adc    DWORD PTR [esp+ebp*4-0x25],ebx
  405c3c:	sub    BYTE PTR [esi-0x72],dh
  405c3f:	push   0x75db8318
  405c44:	repz dec ebx
  405c46:	mov    ebx,0x2198b5b1
  405c4b:	jo     0x405c7b
  405c4d:	sbb    edx,edi
  405c4f:	xchg   esi,eax
  405c50:	jecxz  0x405bfa
  405c52:	push   0xdc454067
  405c57:	pop    ss
  405c58:	fwait
  405c59:	retf   
  405c5a:	dec    ecx
  405c5b:	mov    esi,0xf17a8001
  405c60:	mov    eax,0xa7393996
  405c65:	call   0xf4ce:0xf0b47e68
  405c6c:	xor    eax,0xbd693e74
  405c71:	and    edi,DWORD PTR [edx]
  405c73:	in     eax,0xd1
  405c75:	jp     0x405c09
  405c77:	outs   dx,DWORD PTR ds:[esi]
  405c78:	or     eax,eax
  405c7a:	pop    es
  405c7b:	or     eax,0x1ced6bcd
  405c80:	test   DWORD PTR [ecx-0x55],ecx
  405c83:	nop
  405c84:	jmp    0x405c16
  405c86:	pop    ss
  405c87:	popf   
  405c88:	jl     0x405c4a
  405c8a:	inc    esp
  405c8b:	mov    ds:0x8d0ccd24,al
  405c90:	pop    ebp
  405c91:	loopne 0x405c75
  405c93:	fimul  DWORD PTR [ecx+ebp*8+0x1d]
  405c97:	mov    dh,0x24
  405c99:	dec    esi
  405c9a:	js     0x405d02
  405c9c:	jge    0x405ca3
  405c9e:	cmc    
  405c9f:	or     al,0xcc
  405ca1:	outs   dx,BYTE PTR ds:[esi]
  405ca2:	fistp  QWORD PTR [edx+eax*4-0x734c27d7]
  405ca9:	and    eax,0xd0b07ef1
  405cae:	xchg   esp,eax
  405caf:	pop    ebp
  405cb0:	mov    al,0xf
  405cb2:	xchg   esi,eax
  405cb3:	mov    ds:0x75daa0be,al
  405cb8:	fldcw  WORD PTR [edx+0x76]
  405cbb:	in     al,dx
  405cbc:	cli    
  405cbd:	inc    edx
  405cbe:	scas   al,BYTE PTR es:[edi]
  405cbf:	sbb    BYTE PTR [ecx-0x25],0x12
  405cc3:	jmp    0xa32ef273
  405cc8:	dec    edi
  405cc9:	inc    eax
  405cca:	(bad)  
  405ccb:	mov    ebx,0xf66a0e8a
  405cd0:	add    al,0x85
  405cd2:	mov    dh,bl
  405cd4:	sub    DWORD PTR [ebx],eax
  405cd6:	and    bh,bh
  405cd8:	push   esi
  405cd9:	sub    dl,ah
  405cdb:	mov    ecx,0x4f537881
  405ce0:	jp     0x405c92
  405ce2:	dec    esp
  405ce3:	rcl    BYTE PTR [eax+0x41],0x53
  405ce7:	push   ebx
  405ce8:	fsubr  QWORD PTR [edx+0x709f8677]
  405cee:	icebp  
  405cef:	cmp    BYTE PTR [edi],0x1b
  405cf2:	push   esi
  405cf3:	and    BYTE PTR [esi],al
  405cf5:	hlt    
  405cf6:	ja     0x405d17
  405cf8:	dec    ecx
  405cf9:	sbb    dl,al
  405cfb:	int3   
  405cfc:	sbb    dl,BYTE PTR [ecx]
  405cfe:	sub    BYTE PTR [ecx],bl
  405d00:	mov    cl,0x11
  405d02:	cmc    
  405d03:	sub    ebx,DWORD PTR gs:[edi-0x7f8f82a3]
  405d0a:	push   ds
  405d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d0c:	nop
  405d0d:	mov    ch,BYTE PTR [eax-0x1c7b6c5]
  405d13:	(bad)  
  405d14:	imul   esi,DWORD PTR es:[ecx-0x7d4d921a],0xfffffffe
  405d1c:	adc    al,0x35
  405d1e:	sbb    eax,0x7e558432
  405d23:	xchg   esi,eax
  405d24:	jp     0x405d1e
  405d26:	sub    eax,0x8e87a615
  405d2b:	sub    BYTE PTR [ecx-0x2575dee0],ch
  405d31:	aas    
  405d32:	(bad)  
  405d33:	ja     0x405d1d
  405d35:	or     DWORD PTR [edi],0xffffff85
  405d38:	push   ebx
  405d39:	cmp    al,cl
  405d3b:	inc    ecx
  405d3c:	shr    BYTE PTR gs:[edi+0xa6f6b93],0xd
  405d44:	ret    
  405d45:	bound  esp,QWORD PTR [ebp-0xe4011c6]
  405d4b:	push   ebx
  405d4c:	pop    edi
  405d4d:	mov    ds:0x32123123,al
  405d52:	jl     0x405d3e
  405d54:	hlt    
  405d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d56:	xor    BYTE PTR [edx+0x14],0xf6
  405d5a:	mov    ch,0x74
  405d5c:	or     al,0x10
  405d5e:	jo     0x405d8a
  405d60:	xor    ecx,ebx
  405d62:	rcr    BYTE PTR [eax],1
  405d64:	cmp    BYTE PTR [ebp+0x1391895c],0xb4
  405d6b:	push   0x35ebbf72
  405d70:	add    BYTE PTR [ebx+ecx*8-0x1d],ch
  405d74:	cmp    al,BYTE PTR [eax+0x1f]
  405d77:	and    bh,dl
  405d79:	and    ecx,esp
  405d7b:	sub    al,0xe2
  405d7d:	dec    ebp
  405d7e:	std    
  405d7f:	add    DWORD PTR [edx+0x73],edi
  405d82:	adc    edi,DWORD PTR [ebx-0x98b20c5]
  405d88:	sbb    DWORD PTR [esi],eax
  405d8a:	mov    eax,ds:0x245516c2
  405d8f:	ja     0x405ddb
  405d91:	xchg   ecx,eax
  405d92:	mov    eax,ds:0xde841329
  405d97:	cmp    BYTE PTR [esi],ah
  405d99:	cmc    
  405d9a:	shl    DWORD PTR [edi],0x8e
  405d9d:	shr    BYTE PTR [ecx+eax*4+0x2baccba8],cl
  405da4:	cmp    BYTE PTR [ebx],bh
  405da6:	inc    edx
  405da7:	ja     0x405dbd
  405da9:	xchg   ebp,eax
  405daa:	lods   al,BYTE PTR ds:[esi]
  405dab:	lods   eax,DWORD PTR ds:[esi]
  405dac:	sbb    BYTE PTR [eax+edi*2+0x39],0x98
  405db1:	xor    al,ch
  405db3:	sbb    edx,esi
  405db5:	cld    
  405db6:	xchg   ecx,eax
  405db7:	jns    0x405e36
  405db9:	xor    bl,dh
  405dbb:	jge    0x405da0
  405dbd:	and    al,BYTE PTR [edx+0x6540bff3]
  405dc3:	push   ebx
  405dc4:	out    dx,eax
  405dc5:	mov    edx,0x8d9d7cc3
  405dca:	mov    ecx,0x33cdb001
  405dcf:	pop    ds
  405dd0:	jmp    0xa1b3:0xdcafefac
  405dd7:	pop    edx
  405dd8:	and    al,0xe3
  405dda:	clc    
  405ddb:	ds test al,0xd7
  405dde:	nop
  405ddf:	daa    
  405de0:	outs   dx,DWORD PTR ds:[esi]
  405de1:	mov    al,ds:0xd93ace84
  405de6:	retf   
  405de7:	jmp    0xab80197b
  405dec:	add    edx,ecx
  405dee:	fs into 
  405df0:	dec    ecx
  405df1:	adc    ah,BYTE PTR [edi+0x6c]
  405df4:	pcmpeqd mm4,QWORD PTR [edx]
  405df7:	mov    ah,0x73
  405df9:	test   eax,0x52de230
  405dfe:	retf   
  405dff:	sbb    dh,BYTE PTR [ebx]
  405e01:	pop    ss
  405e02:	xchg   edx,eax
  405e03:	clc    
  405e04:	pop    es
  405e05:	push   ds
  405e06:	pop    edi
  405e07:	ret    
  405e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e09:	and    cl,BYTE PTR [esi+edx*1+0x13d03293]
  405e10:	sbb    BYTE PTR [eax],0x2e
  405e13:	jmp    0xa4b20700
  405e18:	arpl   ax,sp
  405e1a:	push   ecx
  405e1b:	dec    eax
  405e1c:	sub    ebx,DWORD PTR [edx+eiz*8-0x58]
  405e20:	(bad)  
  405e21:	pop    eax
  405e22:	in     eax,0x9e
  405e24:	adc    al,0xc4
  405e26:	call   edx
  405e28:	and    esp,edi
  405e2a:	cs inc eax
  405e2c:	jnp    0x405e97
  405e2e:	push   ebx
  405e2f:	dec    esi
  405e30:	jmp    0xd764e9eb
  405e35:	popf   
  405e36:	mov    ds:0x78a6d486,eax
  405e3b:	in     al,0xba
  405e3d:	jnp    0x405e47
  405e3f:	fs out 0xaa,eax
  405e42:	push   edi
  405e43:	sub    dh,ch
  405e45:	push   cs
  405e46:	mov    ds:0x18a91c05,al
  405e4b:	sub    ch,BYTE PTR [ecx]
  405e4d:	push   esp
  405e4e:	inc    edi
  405e4f:	out    0xc9,al
  405e51:	ins    DWORD PTR es:[edi],dx
  405e52:	xchg   esi,eax
  405e53:	ret    
  405e54:	jmp    0x1273aa5b
  405e59:	push   esp
  405e5a:	ins    DWORD PTR es:[edi],dx
  405e5b:	jb     0x405eb6
  405e5d:	and    DWORD PTR [edi+edi*2+0x23021f77],0xffffffb4
  405e65:	scas   eax,DWORD PTR es:[edi]
  405e66:	mov    edi,0x331fd996
  405e6b:	jge    0x405e72
  405e6d:	push   ebx
  405e6e:	xchg   esi,eax
  405e6f:	rol    ebx,1
  405e71:	mov    dl,0xd5
  405e73:	xchg   ecx,eax
  405e74:	ret    0xf1bf
  405e77:	sbb    DWORD PTR [esi],ebp
  405e79:	call   0xe776b6e8
  405e7e:	mov    dh,0x2c
  405e80:	test   eax,0xaa0badd2
  405e85:	xor    esi,eax
  405e87:	jmp    0xa773:0xd7124952
  405e8e:	dec    ecx
  405e8f:	pop    edi
  405e90:	in     al,dx
  405e91:	push   ecx
  405e92:	(bad)  
  405e93:	mov    esi,0x20039225
  405e98:	or     BYTE PTR ds:[edx-0x6f],0x6
  405e9d:	push   ss
  405e9e:	iret   
  405e9f:	cmp    dh,0xc0
  405ea2:	xchg   edi,eax
  405ea3:	stos   BYTE PTR es:[edi],al
  405ea4:	and    ebp,DWORD PTR [edi-0x65b6a05b]
  405eaa:	fnstsw WORD PTR [esi-0x16]
  405ead:	retf   0x7cfb
  405eb0:	mov    dh,0xcc
  405eb2:	and    dh,dl
  405eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eb5:	sub    al,0x1f
  405eb7:	or     BYTE PTR [eax+ebp*2],ch
  405eba:	add    DWORD PTR ds:0x93430f0,0x1d088a8d
  405ec4:	xlat   BYTE PTR ds:[ebx]
  405ec5:	test   BYTE PTR [ecx+0x5ddbd928],0x28
  405ecc:	push   cs
  405ecd:	retf   0x20f1
  405ed0:	and    cl,BYTE PTR [esi-0x2cbc12d]
  405ed6:	pop    ecx
  405ed7:	loop   0x405edb
  405ed9:	fadd   DWORD PTR [ebx+0x67876898]
  405edf:	mov    edx,DWORD PTR [ebx+ebp*1]
  405ee2:	mov    BYTE PTR [ebp+0x62747986],ch
  405ee8:	(bad)  
  405eea:	cmc    
  405eeb:	sbb    dl,dh
  405eed:	dec    esi
  405eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eef:	test   al,0x7d
  405ef1:	push   esi
  405ef2:	lock cmp BYTE PTR [ebx],bl
  405ef5:	loopne 0x405f2e
  405ef7:	pop    esp
  405ef8:	jno    0x405e97
  405efa:	jl     0x405f74
  405efc:	xor    ebx,DWORD PTR [edi-0x7c79e1a6]
  405f02:	xchg   ebx,eax
  405f03:	push   eax
  405f04:	jbe    0x405f3e
  405f06:	mov    al,ds:0x15407bdd
  405f0b:	ret    
  405f0c:	les    edi,FWORD PTR [ebp+ebp*2-0x47]
  405f10:	std    
  405f11:	cmc    
  405f12:	mov    edx,0xc35da419
  405f17:	je     0x405f26
  405f19:	pop    ds
  405f1a:	push   cs
  405f1b:	ret    0xb915
  405f1e:	cli    
  405f1f:	push   edx
  405f20:	sbb    BYTE PTR [edx+0xe],al
  405f23:	in     al,dx
  405f24:	mov    ds:0xb7f82b8c,eax
  405f29:	adc    bh,BYTE PTR [ebx-0x3e]
  405f2c:	mov    ah,0xbb
  405f2e:	mov    ds:0xb3494c91,eax
  405f33:	push   cs
  405f34:	xchg   esp,eax
  405f35:	push   ebp
  405f36:	mov    ebp,0x74b8cb6b
  405f3b:	bound  edi,QWORD PTR [ecx+0x79]
  405f3e:	sub    esi,DWORD PTR [edi-0x5b]
  405f41:	imul   edx,DWORD PTR [ebp-0x6f412093],0x7dd25a8c
  405f4b:	sbb    DWORD PTR [edi-0x256eb1e3],ebx
  405f51:	push   esp
  405f52:	dec    ebp
  405f53:	loope  0x405f4b
  405f55:	or     al,0x8d
  405f57:	inc    ebx
  405f58:	outs   dx,DWORD PTR ds:[esi]
  405f59:	adc    al,0x2f
  405f5b:	mov    ecx,0xe3b7874e
  405f60:	and    ch,ah
  405f62:	fcom   QWORD PTR [edi]
  405f64:	adc    ebp,ebp
  405f66:	and    DWORD PTR [eax-0x54745a21],0xfffffff7
  405f6d:	out    dx,al
  405f6e:	cmp    ah,cl
  405f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f71:	jl     0x405f87
  405f73:	into   
  405f74:	fsub   DWORD PTR [eax+eiz*8]
  405f77:	test   eax,0x14667fa5
  405f7c:	sub    al,0xef
  405f7e:	cmp    eax,0x210cbee8
  405f83:	lea    ebp,[esi]
  405f85:	pop    edx
  405f86:	(bad)  
  405f87:	and    al,0xc2
  405f89:	dec    ecx
  405f8a:	push   0x74
  405f8c:	pop    esi
  405f8d:	inc    ecx
  405f8e:	sbb    eax,DWORD PTR [ebp-0x2eb09dd6]
  405f94:	loope  0x406001
  405f96:	lods   eax,DWORD PTR ds:[esi]
  405f97:	pusha  
  405f98:	cli    
  405f99:	rcr    ah,cl
  405f9b:	out    0xd,eax
  405f9d:	sbb    dh,ah
  405f9f:	jae    0x405fd7
  405fa1:	mov    ds:0xdc023565,al
  405fa6:	adc    al,dl
  405fa8:	mov    al,ds:0x4e042295
  405fad:	not    BYTE PTR [ecx]
  405faf:	pusha  
  405fb0:	cmp    eax,0x8c44dcf4
  405fb5:	call   0xc17778a3
  405fba:	ds inc edi
  405fbc:	mov    ebp,0x82f3b9b2
  405fc1:	ror    BYTE PTR [edx-0x6e8d9616],1
  405fc7:	lock mov ah,0x1c
  405fca:	ins    BYTE PTR es:[edi],dx
  405fcb:	push   ds
  405fcc:	stc    
  405fcd:	test   al,0x0
  405fcf:	add    eax,0x49868f8e
  405fd4:	or     eax,0xd2d6fbc9
  405fd9:	cmp    eax,0x2d2d06f0
  405fde:	adc    al,0x96
  405fe0:	(bad)  
  405fe1:	cdq    
  405fe2:	pop    gs
  405fe4:	pop    esp
  405fe5:	mov    bh,0x98
  405fe7:	jae    0x405ff1
  405fe9:	iret   
  405fea:	jne    0x405fc8
  405fec:	sub    cl,BYTE PTR [esi]
  405fee:	xor    al,0x88
  405ff0:	adc    al,0x3a
  405ff2:	mov    al,0x71
  405ff4:	push   edx
  405ff5:	js     0x40604c
  405ff7:	cmp    esi,eax
  405ff9:	and    BYTE PTR [eax+eax*1],cl
  405ffc:	fsub   DWORD PTR [ecx]
  405ffe:	push   edi
  405fff:	loopne 0x406006
  406001:	sar    BYTE PTR [ebx+0x4],0x85
  406005:	jo     0x405f9e
  406007:	jo     0x405f8e
  406009:	aaa    
  40600a:	xor    BYTE PTR [ebx+0x73],bl
  40600d:	jmp    0x405fbe
  40600f:	stos   DWORD PTR es:[edi],eax
  406010:	(bad)  
  406011:	jnp    0x406091
  406013:	sub    eax,0xa4c1ee1c
  406018:	jnp    0x406002
  40601a:	stc    
  40601b:	and    BYTE PTR [esi-0x30],dl
  40601e:	push   ebx
  40601f:	nop
  406020:	xor    al,0x82
  406022:	shl    esi,1
  406024:	shl    DWORD PTR [esp+eax*4],cl
  406027:	shl    ch,0xb9
  40602a:	mov    eax,ds:0xd6baa811
  40602f:	cmp    BYTE PTR [edx-0x1dd240d8],cl
  406035:	in     eax,0x1c
  406037:	jmp    0x40600f
  406039:	xor    eax,esi
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	fcmove st,st(4)
  40615e:	inc    ebp
  40615f:	call   FWORD PTR [ebx+0x38]
  406162:	add    DWORD PTR [ebx-0x7c7ca311],0xffffff8a
  406169:	outs   dx,DWORD PTR ds:[esi]
  40616a:	jbe    0x406168
  40616c:	mov    ebx,0xcc68a734
  406171:	bound  eax,QWORD PTR [ecx]
  406173:	sbb    al,0x1c
  406175:	jae    0x4061aa
  406177:	loopne 0x4061da
  406179:	push   edi
  40617a:	call   0x4c331a59
  40617f:	xchg   ebp,eax
  406180:	push   0x3434c9ca
  406185:	mov    dh,0x73
  406187:	jp     0x40612c
  406189:	(bad)  
  40618a:	mov    ch,0x36
  40618c:	push   ss
  40618d:	xchg   esi,eax
  40618e:	aas    
  40618f:	imul   BYTE PTR [edx]
  406191:	dec    edi
  406192:	inc    esi
  406193:	lahf   
  406194:	or     dh,ch
  406196:	std    
  406197:	inc    esp
  406198:	ds xor eax,0x60963735
  40619e:	xor    eax,0xef870485
  4061a3:	fstp   st(2)
  4061a5:	or     ebp,DWORD PTR [ebx-0x77]
  4061a8:	mov    eax,ds:0xfff59eb1
  4061ad:	pusha  
  4061ae:	dec    ebx
  4061af:	fild   QWORD PTR [edi-0x1847f01f]
  4061b5:	inc    eax
  4061b6:	mov    esp,0xc19b2550
  4061bb:	pop    eax
  4061bc:	cli    
  4061bd:	sub    bh,BYTE PTR [eax+ebp*4+0x55]
  4061c1:	iret   
  4061c2:	add    DWORD PTR [eax+eax*8],0xffffff96
  4061c6:	jge    0x40616f
  4061c8:	push   0xffffffbb
  4061ca:	adc    ebp,ebx
  4061cc:	lods   al,BYTE PTR ds:[esi]
  4061cd:	jg     0x406233
  4061cf:	jle    0x406230
  4061d1:	sti    
  4061d2:	repnz fadd QWORD PTR [ecx-0x4efeff66]
  4061d9:	out    dx,eax
  4061da:	jns    0x40624d
  4061dc:	pusha  
  4061dd:	pop    esp
  4061de:	jmp    0x406198
  4061e0:	sbb    DWORD PTR [ecx],esi
  4061e2:	push   eax
  4061e3:	nop
  4061e4:	call   0x8fe3e121
  4061e9:	loopne 0x406254
  4061eb:	cmp    edi,DWORD PTR [edx-0x417d0d47]
  4061f1:	jnp    0x406216
  4061f3:	jmp    0x54bf:0x5aecc192
  4061fa:	pop    ebp
  4061fb:	div    eax
  4061fd:	mov    dh,0xab
  4061ff:	sub    BYTE PTR [eax],bl
  406201:	xchg   edx,eax
  406202:	loop   0x406274
  406204:	mov    cl,0x9c
  406206:	and    eax,0x3cd71d1a
  40620b:	mov    eax,ds:0xac151c64
  406210:	xchg   BYTE PTR [eax-0x2f7bfd79],al
  406216:	push   ds
  406217:	int3   
  406218:	inc    edx
  406219:	div    BYTE PTR [eax+edi*2-0x41]
  40621d:	imul   esi,ebp,0xdd163add
  406223:	adc    eax,0x86d13ddd
  406228:	xor    DWORD PTR [esi+0x1dbbfb76],edx
  40622e:	cmp    edi,esp
  406230:	adc    BYTE PTR [edi-0x574315af],al
  406236:	push   edx
  406237:	sbb    eax,0xebce2ed2
  40623c:	and    al,0xae
  40623e:	xchg   esi,eax
  40623f:	test   BYTE PTR [ecx],ah
  406241:	xchg   ebx,eax
  406242:	pop    ebx
  406243:	inc    ecx
  406244:	dec    edi
  406245:	sbb    dl,BYTE PTR [esi]
  406247:	cmp    dl,BYTE PTR [ecx+esi*4]
  40624a:	jo     0x406287
  40624c:	shr    BYTE PTR ds:0x4c14f325,1
  406252:	test   BYTE PTR ds:0xd27fe0e6,bh
  406258:	lahf   
  406259:	mov    ecx,0x1c5ff8bd
  40625e:	jecxz  0x4062d7
  406260:	or     al,0xaa
  406262:	cmp    BYTE PTR [ebx],bl
  406264:	cwde   
  406265:	scas   eax,DWORD PTR es:[edi]
  406266:	pop    eax
  406267:	jbe    0x406234
  406269:	push   ebx
  40626a:	not    DWORD PTR es:[edx-0x42]
  40626e:	push   esp
  40626f:	scas   al,BYTE PTR es:[edi]
  406270:	jnp    0x4062d6
  406272:	fnstenv [edi-0x53]
  406275:	not    BYTE PTR [esp+ebp*1+0x7a]
  406279:	shl    eax,0xfe
  40627c:	(bad)  
  40627d:	stos   DWORD PTR es:[edi],eax
  40627e:	nop
  40627f:	adc    esp,esp
  406281:	(bad)  
  406282:	arpl   WORD PTR [esi+0x1c],sp
  406285:	xchg   ebp,eax
  406286:	das    
  406287:	std    
  406288:	idiv   DWORD PTR [edx+0x7704de54]
  40628e:	arpl   WORD PTR [edx-0x1c],di
  406291:	and    ebx,ebx
  406293:	add    al,0xac
  406295:	lock call 0x93f4de31
  40629b:	(bad)  
  40629c:	cdq    
  40629d:	pop    edx
  40629e:	xor    BYTE PTR [eax+edi*2-0x17],0xe4
  4062a3:	cdq    
  4062a4:	push   0xffffffaa
  4062a6:	push   esp
  4062a7:	imul   ebp,DWORD PTR [eax-0xe],0x98a63798
  4062ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062af:	mov    cl,dl
  4062b1:	lods   al,BYTE PTR ds:[esi]
  4062b2:	sub    BYTE PTR ds:0xd284f26a,cl
  4062b8:	adc    esp,esp
  4062ba:	ja     0x4062d5
  4062bc:	dec    eax
  4062bd:	(bad)  
  4062be:	mov    dl,0xce
  4062c0:	icebp  
  4062c1:	repz mov esi,0xd2935964
  4062c7:	dec    esi
  4062c8:	daa    
  4062c9:	push   esp
  4062ca:	inc    esp
  4062cb:	clc    
  4062cc:	sub    eax,DWORD PTR [edx-0x18]
  4062cf:	psadbw mm0,QWORD PTR [eax+0x2f2aec36]
  4062d6:	int3   
  4062d7:	stos   BYTE PTR es:[edi],al
  4062d8:	fldcw  WORD PTR [ebx-0x80]
  4062db:	jle    0x406282
  4062dd:	pop    ds
  4062de:	mov    dh,0xe
  4062e0:	fstp   TBYTE PTR [ecx-0x7]
  4062e3:	pop    edi
  4062e4:	jmp    0xd8db8c8f
  4062e9:	jnp    0x4062a4
  4062eb:	dec    esi
  4062ec:	jmp    0x6758ece0
  4062f1:	(bad)  
  4062f2:	pop    esi
  4062f3:	xor    ch,ch
  4062f5:	jae    0x406338
  4062f7:	add    dl,cl
  4062f9:	sub    esi,DWORD PTR [eax+edx*1-0x40]
  4062fd:	aaa    
  4062fe:	(bad)
  406302:	hlt    
  406303:	sbb    BYTE PTR [edi],dl
  406305:	or     eax,0x8583215e
  40630a:	xchg   esp,eax
  40630b:	cmp    DWORD PTR [edx-0x78],ebx
  40630e:	sub    BYTE PTR [edi],ch
  406310:	mov    edx,0xf326b1d3
  406315:	adc    BYTE PTR [esi],bl
  406317:	dec    dl
  406319:	out    0xbf,eax
  40631b:	push   0x8
  40631d:	cmc    
  40631e:	and    BYTE PTR [ecx+0x629602cb],ah
  406324:	into   
  406325:	push   cs
  406326:	adc    al,0xed
  406328:	mov    DWORD PTR [esi*1-0x54b6ccfd],0x8093bf3e
  406333:	dec    edi
  406334:	jmp    0x9773:0x67b9a4f8
  40633b:	addr16 mov ds:0x54b0,eax
  40633f:	imul   edx,esi,0x5be0af43
  406345:	aad    0xf3
  406347:	ficom  DWORD PTR [ebx-0x35aaed96]
  40634d:	in     eax,0x90
  40634f:	arpl   WORD PTR [edx-0x45],sp
  406352:	fild   QWORD PTR [eax+0x5293e665]
  406358:	ret    0xe262
  40635b:	mov    ebp,0x34f0faa1
  406360:	inc    edi
  406361:	and    eax,0x91ba7d54
  406366:	mov    ecx,0x3f4a3b00
  40636b:	pop    ecx
  40636c:	test   DWORD PTR [eax+0x40],ecx
  40636f:	enter  0x1c46,0xc8
  406373:	cmc    
  406374:	hlt    
  406375:	jne    0x406371
  406377:	imul   ecx,DWORD PTR ds:0x3d1561a4,0x58660628
  406381:	scas   eax,DWORD PTR es:[edi]
  406382:	or     BYTE PTR [eax],ch
  406384:	jno    0x406389
  406386:	outs   dx,DWORD PTR ds:[esi]
  406387:	add    BYTE PTR [ecx-0x6edaed55],bh
  40638d:	mov    dh,dh
  40638f:	popf   
  406390:	cmp    eax,0x183b15e7
  406395:	push   edx
  406396:	int    0x9
  406398:	dec    esp
  406399:	pop    ebx
  40639a:	mov    ebp,0x385b8af7
  40639f:	mov    eax,ds:0xb9672d7
  4063a4:	sub    al,0xe4
  4063a6:	or     DWORD PTR [ebp+0x46d550c6],ecx
  4063ac:	popf   
  4063ad:	lds    esi,FWORD PTR [edi-0x552b5c3a]
  4063b3:	xchg   ebp,eax
  4063b4:	and    al,0x43
  4063b6:	xchg   ebp,eax
  4063b7:	inc    ebp
  4063b8:	retf   
  4063b9:	push   ss
  4063ba:	mov    al,0x12
  4063bc:	pop    esi
  4063bd:	(bad)  
  4063be:	fdivrp st(0),st
  4063c0:	inc    ecx
  4063c1:	sbb    eax,0x71429390
  4063c6:	mov    ecx,0xac1b5370
  4063cb:	or     al,0x97
  4063cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ce:	into   
  4063cf:	jp     0x406433
  4063d1:	loope  0x406444
  4063d3:	out    dx,al
  4063d4:	cmp    al,BYTE PTR [esp+eax*1-0x7f]
  4063d8:	fsubrp st(5),st
  4063da:	imul   eax,DWORD PTR [edx],0xffffffc7
  4063dd:	mov    esp,0xd26ae7aa
  4063e2:	out    0x88,eax
  4063e4:	mov    ebp,0x360565eb
  4063e9:	int    0xaf
  4063eb:	push   esi
  4063ec:	ins    DWORD PTR es:[edi],dx
  4063ed:	xchg   edx,eax
  4063ee:	push   ss
  4063ef:	xchg   edx,eax
  4063f0:	jne    0x406436
  4063f2:	in     al,dx
  4063f3:	add    al,BYTE PTR [eax]
  4063f5:	pop    esp
  4063f6:	call   0x4678:0x99ea606b
  4063fd:	hlt    
  4063fe:	sar    edx,0x96
  406401:	jnp    0x4063cd
  406403:	aas    
  406404:	into   
  406405:	inc    esi
  406406:	jne    0x4063fd
  406408:	test   ax,0xf506
  40640c:	mov    ch,0xe2
  40640e:	inc    edx
  40640f:	ds cmc 
  406411:	mov    cl,0x51
  406413:	mov    eax,0x7787fb01
  406418:	ret    0x6ed0
  40641b:	mov    ch,bl
  40641d:	cdq    
  40641e:	dec    esp
  40641f:	les    eax,FWORD PTR [edi]
  406421:	cmp    eax,0x7f405417
  406426:	sub    al,0x5d
  406428:	aas    
  406429:	dec    esp
  40642a:	or     dl,BYTE PTR [ebx-0x1d]
  40642d:	add    eax,0x462c8572
  406432:	ret    0x4505
  406435:	call   0xeb80:0x5d8de297
  40643c:	(bad)  
  40643d:	cmp    dh,bh
  40643f:	in     eax,dx
  406440:	push   ecx
  406441:	jb     0x4064c0
  406443:	(bad)
  406446:	adc    BYTE PTR [ecx-0x1b6adde4],dl
  40644c:	adc    eax,0xa1ff3851
  406451:	pop    edi
  406452:	inc    edx
  406453:	in     al,dx
  406454:	(bad)  
  406455:	jge    0x40645c
  406457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406458:	inc    ebp
  406459:	pop    eax
  40645a:	inc    edi
  40645b:	fadd   QWORD PTR [eax+0x6ba2fcfa]
  406461:	mov    eax,DWORD PTR [edi]
  406463:	dec    esi
  406464:	int3   
  406465:	push   0xfcdf6276
  40646a:	aad    0x3e
  40646c:	mov    bl,0x57
  40646e:	add    al,0xcf
  406470:	ja     0x4064bc
  406472:	pop    edx
  406473:	mov    gs:0xc060d1e1,al
  406479:	call   0x7cab:0x5e31ff27
  406480:	cmp    dl,BYTE PTR ds:0x2456b7ff
  406486:	jmp    0x8ccd9ccb
  40648b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40648c:	xor    DWORD PTR [esi-0x1ce8ea07],ebx
  406492:	jmp    0x406421
  406494:	pop    ebx
  406495:	mov    ss,WORD PTR [edi+ecx*4+0x717bdfd5]
  40649c:	xchg   edx,eax
  40649d:	rcr    BYTE PTR [eax-0xe0f96b6],1
  4064a3:	dec    DWORD PTR [ebp-0x61]
  4064a6:	add    BYTE PTR [esi],ah
  4064a8:	call   0x9ac6:0xed295eee
  4064af:	aam    0x8a
  4064b1:	out    0x5,eax
  4064b3:	push   edx
  4064b4:	out    0x41,eax
  4064b6:	pop    es
  4064b7:	fdivr  QWORD PTR [eax+0x52]
  4064ba:	dec    BYTE PTR [ebp+0x634ead04]
  4064c0:	aad    0x9f
  4064c2:	dec    esi
  4064c3:	lods   eax,DWORD PTR ds:[esi]
  4064c4:	jecxz  0x4064f1
  4064c6:	and    eax,0x2072aee0
  4064cb:	xchg   edx,eax
  4064cc:	dec    edx
  4064cd:	loop   0x4064ce
  4064cf:	cli    
  4064d0:	hlt    
  4064d1:	add    al,0xe1
  4064d3:	test   al,0x96
  4064d5:	loopne 0x4064ab
  4064d7:	jmp    0x4064bb
  4064d9:	cmp    DWORD PTR [ecx+ebp*8+0x2bee23ab],0xbed8ac80
  4064e4:	push   ds
  4064e5:	mov    ds,WORD PTR ds:0x380c84f7
  4064eb:	aad    0xc
  4064ed:	popa   
  4064ee:	(bad)
  4064f1:	(bad)  
  4064f2:	adc    al,0xe5
  4064f4:	mov    ebp,0x7073a21f
  4064f9:	xchg   edx,eax
  4064fa:	mov    dl,0x7e
  4064fc:	outs   dx,BYTE PTR ds:[esi]
  4064fd:	outs   dx,BYTE PTR ds:[esi]
  4064fe:	xor    ebx,DWORD PTR [ecx]
  406500:	(bad)  
  406501:	call   0x4e95:0x5ba3a4fa
  406508:	xor    eax,0x467851f4
  40650d:	(bad)  
  40650e:	test   eax,0xac59d6fa
  406513:	int3   
  406514:	cmp    ecx,ebx
  406516:	jge    0x40658a
  406518:	push   edx
  406519:	pop    es
  40651a:	out    0xbc,eax
  40651c:	das    
  40651d:	popa   
  40651e:	cdq    
  40651f:	mov    eax,ds:0x45f2a9f2
  406524:	icebp  
  406525:	mov    edx,0xc03e8623
  40652a:	pop    eax
  40652b:	pop    ss
  40652c:	arpl   bx,cx
  40652e:	jecxz  0x4064ca
  406530:	out    0xa8,eax
  406532:	cmp    BYTE PTR [ebx+0x2ff2f77e],al
  406538:	pop    edx
  406539:	cld    
  40653a:	adc    eax,0x104e7733
  40653f:	jae    0x406579
  406541:	in     eax,dx
  406542:	inc    ecx
  406543:	add    esp,DWORD PTR [esi]
  406545:	mov    al,ds:0x2b622c46
  40654a:	arpl   WORD PTR [esp+eax*4+0x611987da],si
  406551:	and    esi,ebx
  406553:	mov    BYTE PTR [ebp+0x63],0xfb
  406557:	sub    al,0xc5
  406559:	scas   eax,DWORD PTR es:[edi]
  40655a:	mov    dh,0x77
  40655c:	dec    edi
  40655d:	xchg   edx,ebx
  40655f:	int    0xef
  406561:	mov    ebx,0x3ba2b0a1
  406566:	mov    dl,0x9d
  406568:	fld    TBYTE PTR [edi-0x56]
  40656b:	pop    esi
  40656c:	sbb    bh,bl
  40656e:	or     esp,edx
  406570:	cmp    ah,BYTE PTR [edi+0x5d]
  406573:	cmp    ebx,edi
  406575:	jle    0x4065ef
  406577:	sub    BYTE PTR [eax+0x7a],al
  40657a:	sbb    esi,edi
  40657c:	mov    eax,0x3b82a253
  406581:	cwde   
  406582:	fild   DWORD PTR [edx]
  406584:	popf   
  406585:	and    eax,0x6ed75a9c
  40658a:	or     ecx,esi
  40658c:	test   eax,0xf8a0dca0
  406591:	inc    edx
  406592:	mov    ds:0xdb04681,eax
  406597:	cmp    bl,BYTE PTR [ebx+0x3359c5fe]
  40659d:	fist   DWORD PTR [esi-0x3f]
  4065a0:	and    ebp,DWORD PTR [esi]
  4065a2:	ror    DWORD PTR [edx+0x53],cl
  4065a5:	imul   ecx,eax,0x8cd9c6d
  4065ab:	ret    0x32eb
  4065ae:	mov    ch,0xc1
  4065b0:	cs pop eax
  4065b2:	or     bh,al
  4065b4:	xor    al,0x2b
  4065b6:	push   edx
  4065b7:	add    ecx,esp
  4065b9:	lahf   
  4065ba:	push   edx
  4065bb:	jg     0x4065d0
  4065bd:	sbb    DWORD PTR [ecx+0x7631735],ebx
  4065c3:	(bad)  
  4065c4:	and    eax,0x92293bfe
  4065c9:	mov    ah,BYTE PTR [esp+esi*4-0x2dd7ca59]
  4065d0:	and    al,0x31
  4065d2:	sahf   
  4065d3:	push   bx
  4065d5:	out    dx,al
  4065d6:	push   esi
  4065d7:	jmp    0x6e5a4952
  4065dc:	js     0x4065be
  4065de:	xchg   ebx,eax
  4065df:	xchg   edx,eax
  4065e0:	sbb    eax,0x9ffaaac7
  4065e5:	loope  0x40658a
  4065e7:	add    bh,cl
  4065e9:	loopne 0x4065b9
  4065eb:	shl    BYTE PTR [ebx+ecx*4-0x19c9aa87],0x50
  4065f3:	loopne 0x4065c4
  4065f5:	inc    esi
  4065f6:	stc    
  4065f7:	xor    edx,DWORD PTR [edi-0x7]
  4065fa:	dec    edi
  4065fb:	inc    bp
  4065fd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065ff:	sub    al,0x78
  406601:	sbb    DWORD PTR [ecx-0x3c],ebx
  406604:	loopne 0x406605
  406606:	mov    bl,0x2e
  406608:	pop    eax
  406609:	inc    BYTE PTR [esi-0xc]
  40660c:	rol    BYTE PTR [ecx-0x54],1
  40660f:	pop    ss
  406610:	imul   edx,DWORD PTR [edx],0x495bc969
  406616:	xor    edx,DWORD PTR [ecx-0x5a2ed8e2]
  40661c:	scas   al,BYTE PTR es:[edi]
  40661d:	jg     0x406647
  40661f:	sbb    eax,0xed58e1c6
  406624:	dec    edx
  406625:	lock mov ds:0xe8b5ed6,eax
  40662b:	xchg   ebp,eax
  40662c:	and    ebp,edi
  40662e:	lds    esi,FWORD PTR [edi-0x6b]
  406631:	sub    BYTE PTR [edi+edx*4-0x48],bh
  406635:	cmp    al,0x48
  406637:	dec    edx
  406638:	pop    edx
  406639:	mov    al,0xa7
  40663b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40663c:	inc    edi
  40663d:	mov    ?,WORD PTR [esp+ebx*1+0x18e55d9b]
  406644:	pop    edi
  406645:	rcr    DWORD PTR [eax-0x6aa36770],cl
  40664b:	jg     0x40665a
  40664d:	dec    ebp
  40664e:	inc    esi
  40664f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406650:	mov    ah,0x57
  406652:	or     ebx,eax
  406654:	lahf   
  406655:	pop    ebp
  406656:	pop    ss
  406657:	xchg   BYTE PTR [ecx],al
  406659:	adc    dh,bl
  40665b:	lahf   
  40665c:	out    dx,eax
  40665d:	xchg   edx,ecx
  40665f:	pop    ebp
  406660:	ins    DWORD PTR es:[edi],dx
  406661:	xor    esi,DWORD PTR [edx+0x3d860eaf]
  406667:	mov    edi,0x1bf43f72
  40666c:	jnp    0x406683
  40666e:	cmc    
  40666f:	jne    0x406617
  406671:	xor    BYTE PTR [edi-0x66ee81b1],bl
  406677:	rcr    BYTE PTR [eax+eiz*2-0x208d3dba],0x99
  40667f:	out    dx,al
  406680:	je     0x4066a4
  406682:	jecxz  0x40660f
  406684:	push   ebp
  406685:	idiv   BYTE PTR [ecx-0x7602e1c9]
  40668b:	cmpps  xmm1,XMMWORD PTR [eax+0x6f],0xa
  406690:	sub    ecx,edi
  406692:	sub    al,0x31
  406694:	cli    
  406695:	adc    ah,BYTE PTR [ecx-0x70db9f52]
  40669b:	lods   eax,DWORD PTR ds:[esi]
  40669c:	cmp    eax,0x3ae78840
  4066a1:	lds    esi,FWORD PTR [edx+0xa]
  4066a4:	dec    ecx
  4066a5:	leave  
  4066a6:	mov    dh,0x2
  4066a8:	inc    edx
  4066a9:	(bad)  
  4066aa:	nop
  4066ab:	lds    ebx,FWORD PTR [eax+edx*8]
  4066ae:	mov    ebp,0xc460b26f
  4066b3:	cmp    ebx,esp
  4066b5:	loop   0x406643
  4066b7:	test   eax,ebx
  4066b9:	add    dh,BYTE PTR [esi+0x4e76af98]
  4066bf:	add    eax,0xeae82571
  4066c4:	fistp  WORD PTR [ebp+0x3eeea799]
  4066ca:	pop    esi
  4066cb:	ror    DWORD PTR [esi-0x3d9e1810],cl
  4066d1:	xchg   esp,eax
  4066d2:	in     eax,0xec
  4066d4:	fild   DWORD PTR [bx+di]
  4066d7:	aam    0x1e
  4066d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066da:	push   es
  4066db:	push   esp
  4066dc:	in     eax,0x7
  4066de:	mov    ebx,esp
  4066e0:	leave  
  4066e1:	out    0xac,al
  4066e3:	sbb    ch,al
  4066e5:	retf   0xd1e4
  4066e8:	jle    0x4066fd
  4066ea:	pushf  
  4066eb:	shl    edx,1
  4066ed:	out    0x98,al
  4066ef:	cmp    DWORD PTR [ebx+0xd4760bc],ebp
  4066f5:	in     al,0xf9
  4066f7:	push   es
  4066f8:	push   edx
  4066f9:	sbb    esp,DWORD PTR [edx]
  4066fb:	repnz xchg ebx,eax
  4066fd:	pop    ecx
  4066fe:	mov    ah,0xb7
  406700:	repnz adc BYTE PTR cs:[ebx-0x53],al
  406705:	dec    eax
  406706:	(bad)  
  406707:	outs   dx,DWORD PTR ds:[esi]
  406708:	pop    ds
  406709:	mov    eax,0x2d6a515c
  40670e:	enter  0x50d7,0x78
  406712:	jge    0x4066cc
  406714:	les    ebp,FWORD PTR [ebx-0x6e]
  406717:	(bad)  
  406718:	sbb    esi,ecx
  40671a:	jb     0x406769
  40671c:	mov    esi,0x205d6c5c
  406721:	cmp    ah,ch
  406723:	fidivr DWORD PTR [edx]
  406725:	xor    bl,BYTE PTR [edi+0x5a]
  406728:	mov    ebx,0x6c0394f8
  40672d:	push   ds
  40672e:	push   eax
  40672f:	xchg   eax,eax
  406731:	mov    ecx,0x10dd4335
  406736:	aad    0x24
  406738:	lock aam 0xdb
  40673b:	jae    0x406748
  40673d:	inc    ebp
  40673e:	mov    eax,0x20fd919b
  406743:	push   esi
  406744:	mov    BYTE PTR [ebp+ebp*2-0x76c8aa74],dl
  40674b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40674c:	sbb    eax,0xcfb827bf
  406751:	data16 and ch,BYTE PTR [esi]
  406754:	icebp  
  406755:	mov    ds:0xaf57e4a9,eax
  40675a:	pop    ebx
  40675b:	xlat   BYTE PTR ds:[ebx]
  40675c:	inc    eax
  40675d:	data16 loope 0x406788
  406760:	inc    edi
  406761:	mov    bl,0x96
  406763:	icebp  
  406764:	jle    0x406767
  406766:	je     0x40678c
  406768:	or     eax,DWORD PTR [edx]
  40676a:	fs mov esi,0xa6c8031c
  406770:	mov    cl,0xa1
  406772:	push   edx
  406773:	shr    BYTE PTR [edi-0x5e9e88f7],1
  406779:	in     al,0x30
  40677b:	xor    ebp,edi
  40677d:	push   es
  40677e:	push   es
  40677f:	aad    0x92
  406781:	scas   eax,DWORD PTR es:[edi]
  406782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406783:	(bad)  [edi-0x3df34198]
  406789:	jmp    0xd1de857a
  40678e:	into   
  40678f:	sub    dl,cl
  406791:	ret    
  406792:	mov    dl,0x3a
  406794:	jmp    0xe205a4d1
  406799:	xchg   ebx,eax
  40679a:	lahf   
  40679b:	xor    al,BYTE PTR [edx-0x7a537370]
  4067a1:	pushf  
  4067a2:	add    BYTE PTR [ebp-0x14fe5357],ah
  4067a8:	pop    esi
  4067a9:	mov    ds:0xa1ca4029,al
  4067ae:	lds    edi,FWORD PTR [esi-0x18]
  4067b1:	sbb    ch,BYTE PTR [edx-0x19651bd]
  4067b7:	mov    bh,0x6
  4067b9:	cs push esi
  4067bb:	cld    
  4067bc:	mov    al,ds:0x4cef4801
  4067c1:	cli    
  4067c2:	or     al,0xa4
  4067c4:	sbb    eax,0x2d9fae46
  4067c9:	in     eax,0xab
  4067cb:	jbe    0x40681c
  4067cd:	mov    ds:0x6ac57c61,al
  4067d2:	pusha  
  4067d3:	jno    0x4067e5
  4067d5:	or     eax,0xe7f94c97
  4067da:	fidivr DWORD PTR [ebx+0x5728e8d]
  4067e0:	and    DWORD PTR [esi],0xffffff8f
  4067e3:	ins    BYTE PTR es:[edi],dx
  4067e4:	inc    ebp
  4067e5:	cmp    esi,edx
  4067e7:	test   eax,0x44c7212b
  4067ec:	jnp    0x406772
  4067ee:	jmp    0xab83:0x6285882a
  4067f5:	sub    eax,0x523b40d4
  4067fa:	pushf  
  4067fb:	sbb    eax,0xf07b10bc
  406800:	or     esp,esp
  406802:	outs   dx,BYTE PTR ds:[esi]
  406803:	(bad)  
  406805:	jno    0x40683e
  406807:	inc    ebx
  406808:	mov    BYTE PTR [edx],al
  40680a:	cmp    dl,ah
  40680c:	cmc    
  40680d:	sub    BYTE PTR [edx-0x1dfcaa19],bl
  406813:	inc    ebx
  406814:	and    DWORD PTR [edi+0x78],edx
  406817:	mov    esi,0x7618054a
  40681c:	sbb    al,BYTE PTR ds:0x1e2918d0
  406822:	scas   eax,DWORD PTR es:[edi]
  406823:	xor    DWORD PTR [edx],edi
  406825:	push   esp
  406826:	pop    eax
  406827:	xlat   BYTE PTR ds:[ebx]
  406828:	ret    
  406829:	dec    ebx
  40682a:	push   cs
  40682b:	dec    ecx
  40682c:	mov    al,ds:0xbc30443b
  406831:	lea    esi,[ebp+0x40]
  406834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406835:	pop    ss
  406836:	push   cs
  406837:	int3   
  406838:	sub    edi,DWORD PTR [ebx-0x49ff9280]
  40683e:	jo     0x406880
  406840:	sub    bh,bl
  406842:	ins    BYTE PTR es:[edi],dx
  406843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406844:	inc    ebp
  406845:	push   esi
  406846:	bound  esp,QWORD PTR [esi+ebx*8+0x7bd3cfe5]
  40684d:	jb     0x4067fd
  40684f:	jne    0x406844
  406851:	or     BYTE PTR [esi],cl
  406853:	sub    esi,DWORD PTR [ecx+0xf910776]
  406859:	mov    esp,DWORD PTR [ebx]
  40685b:	ret    
  40685c:	mov    edi,0xbe3e521a
  406861:	or     bl,al
  406863:	jbe    0x4068e4
  406865:	push   ds
  406866:	out    dx,eax
  406867:	loop   0x406841
  406869:	and    bh,BYTE PTR [ecx]
  40686b:	jp     0x4068c8
  40686d:	lea    edi,[edx+0x26]
  406870:	push   edx
  406872:	push   0x1a
  406874:	cwde   
  406875:	jecxz  0x4068e7
  406877:	or     eax,0x8901d9a1
  40687c:	mov    al,0xd1
  40687e:	sbb    BYTE PTR [ecx],al
  406880:	nop
  406881:	adc    al,0x99
  406883:	xor    al,BYTE PTR [eax+0x2a]
  406886:	pop    ds
  406887:	lods   eax,DWORD PTR ds:[esi]
  406888:	mov    edi,DWORD PTR [edx-0x1451b99d]
  40688e:	loop   0x406864
  406890:	xor    ebx,edx
  406892:	sub    BYTE PTR [edx],cl
  406894:	iret   
  406895:	pusha  
  406896:	jecxz  0x4068dd
  406898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406899:	dec    ebx
  40689a:	push   ebp
  40689b:	inc    edx
  40689c:	xor    eax,DWORD PTR [esi]
  40689e:	hlt    
  40689f:	sti    
  4068a0:	or     DWORD PTR [ebx*2+0x6bb3850d],ebx
  4068a7:	ins    BYTE PTR es:[edi],dx
  4068a8:	push   edi
  4068a9:	sar    DWORD PTR [ebx],0x35
  4068ac:	daa    
  4068ad:	js     0x4068d9
  4068af:	ss sbb dl,0xd7
  4068b3:	sbb    DWORD PTR ss:[eax+0x7e1d4969],edi
  4068ba:	div    DWORD PTR [eax+0x9cac0c5]
  4068c0:	fist   DWORD PTR [eax]
  4068c2:	adc    DWORD PTR [edx+0x24],0xffffffb4
  4068c6:	or     eax,0x8cdce962
  4068cb:	in     al,0xd0
  4068cd:	outs   dx,BYTE PTR ds:[esi]
  4068ce:	addr16 lahf 
  4068d0:	outs   dx,BYTE PTR ds:[esi]
  4068d1:	mov    ch,0xc8
  4068d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068d4:	(bad)  [ebp-0x5e55aeb7]
  4068da:	ds xchg ebp,eax
  4068dc:	cdq    
  4068dd:	dec    esp
  4068de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068df:	repz jns 0x4068d9
  4068e2:	cmp    al,0xca
  4068e4:	fs icebp 
  4068e6:	jle    0x4068f6
  4068e8:	adc    ebp,DWORD PTR fs:0x2d1cb8a2
  4068ef:	rcl    DWORD PTR [edx],0x89
  4068f2:	cmc    
  4068f3:	xor    eax,0x974558fa
  4068f8:	cs cs or bh,ch
  4068fc:	inc    edi
  4068fd:	call   0xf9601485
  406902:	pop    ecx
  406903:	push   ss
  406904:	jecxz  0x40694b
  406906:	cmp    DWORD PTR [eax+0x2f39b923],0xdcb1cd07
  406910:	js     0x4068b1
  406912:	xor    eax,0x3afd1c68
  406917:	cmp    BYTE PTR [ecx+0x57],cl
  40691a:	cmp    DWORD PTR [ebx-0x758a9289],esi
  406920:	push   ecx
  406921:	xor    cl,BYTE PTR [ecx-0x7cb27c40]
  406927:	add    al,0xae
  406929:	pop    DWORD PTR [ebp+0x1eb456fa]
  40692f:	fwait
  406930:	mov    al,ds:0xb9a18f8e
  406935:	jg     0x4068c5
  406937:	dec    ebx
  406938:	mov    bh,0xf3
  40693a:	mov    dh,0x59
  40693c:	dec    ebx
  40693d:	jle    0x4069b6
  40693f:	jg     0x40695e
  406941:	lea    esi,[esi+0x38]
  406944:	in     eax,0x85
  406946:	mov    bh,0x5
  406948:	jmp    0x101b:0xc796272d
  40694f:	out    dx,al
  406950:	gs in  al,dx
  406952:	fnsave [ecx]
  406954:	xchg   BYTE PTR [eax+ebp*2],ah
  406957:	xchg   esp,eax
  406958:	xor    eax,0x82bbf41b
  40695d:	push   ecx
  40695e:	mov    DWORD PTR [edx+esi*4-0x7d],eax
  406962:	loope  0x40690f
  406964:	push   ebx
  406965:	push   es
  406966:	(bad)  
  406967:	cli    
  406968:	clc    
  406969:	push   cs
  40696a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696b:	mov    ebp,0x80c6f390
  406970:	test   ecx,ebx
  406972:	cs mov bl,0xdf
  406975:	fsubrp st(3),st
  406977:	push   esi
  406978:	repz xlat BYTE PTR ds:[ebx]
  40697a:	adc    dh,BYTE PTR [eax-0x15]
  40697d:	fadd   st(0),st
  40697f:	daa    
  406980:	and    eax,0x79a0f568
  406985:	retf   
  406986:	loopne 0x40692d
  406988:	fst    st(7)
  40698a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40698b:	sbb    al,0xc
  40698d:	jns    0x40695c
  40698f:	mov    ecx,0x71812fb2
  406994:	call   0x131b:0x92bcc7a3
  40699b:	aaa    
  40699c:	icebp  
  40699d:	sahf   
  40699e:	fwait
  40699f:	int    0x20
  4069a1:	jno    0x406967
  4069a3:	ins    BYTE PTR es:[edi],dx
  4069a4:	xchg   ebp,eax
  4069a5:	mov    bl,0x1d
  4069a7:	fadd   st,st(7)
  4069a9:	(bad)  
  4069aa:	ret    
  4069ab:	jns    0x406a18
  4069ad:	xchg   BYTE PTR [ecx+0x22],cl
  4069b0:	add    DWORD PTR [ebp-0x2d],esi
  4069b3:	mov    eax,es:0x93dcacce
  4069b9:	inc    esi
  4069ba:	lea    edx,[esi+0x206854bd]
  4069c0:	sbb    BYTE PTR [ebx+0x34],dh
  4069c3:	rol    DWORD PTR [ebx],1
  4069c5:	mov    WORD PTR [ebx+0x6a],es
  4069c8:	sbb    al,0x43
  4069ca:	out    dx,al
  4069cb:	add    al,0x78
  4069cd:	inc    esi
  4069ce:	out    0xe8,eax
  4069d0:	loope  0x406a2c
  4069d2:	xchg   edi,eax
  4069d3:	lods   al,BYTE PTR ds:[esi]
  4069d4:	leave  
  4069d5:	call   0xa4636664
  4069da:	idiv   DWORD PTR [edx-0x39159198]
  4069e0:	cmp    bh,BYTE PTR [ecx]
  4069e2:	push   esp
  4069e3:	cs mov dl,0x76
  4069e6:	mov    ecx,0x36ed4d38
  4069eb:	mov    ecx,0xe3c9ba73
  4069f0:	xchg   edx,eax
  4069f1:	loop   0x4069ce
  4069f3:	or     BYTE PTR [ecx-0x408345d4],0xf2
  4069fa:	int    0x75
  4069fc:	int3   
  4069fd:	out    0x78,eax
  4069ff:	xchg   edi,eax
  406a00:	sub    al,BYTE PTR [edi+0x238924b0]
  406a06:	xchg   edx,eax
  406a07:	mov    DWORD PTR [edi+ebx*1-0x5fc9f4a5],edx
  406a0e:	out    0x40,eax
  406a10:	in     eax,dx
  406a11:	mov    al,ds:0xe1ae4bcc
  406a16:	call   0x871a:0xb3ba854d
  406a1d:	jmp    0x8ece:0xb3dc92a4
  406a24:	fisubr DWORD PTR [ebx+0x2d]
  406a27:	or     cl,dh
  406a29:	das    
  406a2a:	or     eax,0xbc3c3667
  406a2f:	and    ecx,DWORD PTR [edx]
  406a31:	ja     0x406a00
  406a33:	(bad)  
  406a34:	pushf  
  406a35:	fnsave [ecx]
  406a37:	jns    0x406aa5
  406a39:	xchg   ebp,eax
  406a3a:	loopne 0x406a56
  406a3c:	std    
  406a3d:	outs   dx,BYTE PTR ds:[esi]
  406a3e:	(bad)  
  406a3f:	jmp    0x406a63
  406a41:	js     0x4069c9
  406a43:	(bad)  
  406a44:	fnstenv [esi]
  406a46:	int3   
  406a47:	addr16 gs jno 0x406aac
  406a4b:	ds add eax,0xe394cd90
  406a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a52:	pop    ebp
  406a53:	in     eax,dx
  406a54:	in     al,dx
  406a55:	xchg   DWORD PTR [edi+ecx*8+0x65],ebx
  406a59:	fstp   st(3)
  406a5b:	(bad)  
  406a5c:	jmp    0x71985b7c
  406a61:	xchg   BYTE PTR [ecx],bh
  406a63:	aad    0x26
  406a65:	or     eax,0x93927a32
  406a6a:	sbb    edi,DWORD PTR [edi]
  406a6c:	out    0x9c,eax
  406a6e:	(bad)  
  406a6f:	cmp    dl,BYTE PTR ds:0xa3987c32
  406a75:	inc    ebp
  406a76:	das    
  406a77:	std    
  406a78:	call   0x28e46dd3
  406a7d:	jbe    0x406a33
  406a7f:	xor    BYTE PTR [edi+0x13cb0c1],bh
  406a85:	add    esp,DWORD PTR [ecx+0x24]
  406a88:	iret   
  406a89:	jl     0x406b04
  406a8b:	js     0x406b04
  406a8d:	pop    edi
  406a8e:	pusha  
  406a8f:	mov    esp,0x387eac3c
  406a94:	push   esp
  406a95:	xchg   ebx,eax
  406a96:	push   ebx
  406a97:	sbb    al,0x1d
  406a99:	add    bh,dl
  406a9b:	xlat   BYTE PTR ds:[ebx]
  406a9c:	fs jge 0x406a92
  406a9f:	xor    ah,bh
  406aa1:	sbb    edi,DWORD PTR [ebx]
  406aa3:	fmul   st(0),st
  406aa5:	dec    ebp
  406aa6:	mov    ch,BYTE PTR [ebx-0x10dbdba2]
  406aac:	jns    0x406aa6
  406aae:	pop    esp
  406aaf:	out    dx,eax
  406ab0:	xchg   BYTE PTR [edi+0x731e1eb2],bh
  406ab6:	add    edi,DWORD PTR [ecx-0x1]
  406ab9:	pop    ebp
  406aba:	push   0xffffffd2
  406abc:	in     al,0x3f
  406abe:	nop
  406abf:	ins    BYTE PTR es:[edi],dx
  406ac0:	inc    ecx
  406ac1:	xor    BYTE PTR [edx],bl
  406ac3:	lods   al,BYTE PTR fs:[esi]
  406ac5:	xor    eax,0x3528b765
  406aca:	xchg   ebp,edx
  406acc:	hlt    
  406acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ace:	sbb    al,0xdc
  406ad0:	ret    
  406ad1:	test   ch,dh
  406ad3:	pop    ebx
  406ad4:	inc    ecx
  406ad5:	sbb    al,0xf7
  406ad7:	mov    al,ah
  406ad9:	mov    bh,0x4e
  406adb:	fldenv [ecx-0x75fcdb16]
  406ae1:	inc    eax
  406ae2:	push   esi
  406ae3:	cdq    
  406ae4:	(bad)  
  406ae5:	sbb    edi,DWORD PTR [edx]
  406ae7:	push   ebx
  406ae8:	mov    edx,0x9ba9f707
  406aed:	fild   WORD PTR [esi-0x64ec99a1]
  406af3:	push   esp
  406af4:	in     al,dx
  406af5:	rol    edx,0x1d
  406af8:	(bad)
  406afb:	pop    ecx
  406afc:	mov    al,0x38
  406afe:	mov    ds:0x8e645266,eax
  406b03:	imul   eax,ebx,0x59
  406b06:	mov    edx,0xf13b1596
  406b0b:	into   
  406b0c:	fst    st(7)
  406b0e:	jg     0x406b85
  406b10:	lea    ebx,[esi+0x3]
  406b13:	xchg   ebp,eax
  406b14:	enter  0xfb1e,0xf7
  406b18:	inc    esp
  406b19:	aas    
  406b1a:	loope  0x406ae6
  406b1c:	loopne 0x406b76
  406b1e:	mov    ebx,0x65ae6e3b
  406b23:	iret   
  406b24:	jg     0x406b73
  406b26:	xor    BYTE PTR [eax+0x3f],dh
  406b29:	mov    DWORD PTR [edi+0x73700a4b],ecx
  406b2f:	mov    ch,BYTE PTR [ecx+eax*4+0x21757027]
  406b36:	or     dl,BYTE PTR [ebx+0x9]
  406b39:	mov    cl,0x20
  406b3b:	loopne 0x406b57
  406b3d:	call   0x954c3710
  406b42:	push   esi
  406b43:	in     eax,dx
  406b44:	cmp    al,0xa1
  406b46:	adc    ch,BYTE PTR [eax]
  406b48:	int    0x2a
  406b4a:	dec    esp
  406b4b:	pusha  
  406b4c:	dec    edi
  406b4d:	inc    eax
  406b4e:	or     BYTE PTR [edi-0x23],ch
  406b51:	pushf  
  406b52:	jo     0x406b1c
  406b54:	dec    eax
  406b55:	out    0x64,eax
  406b57:	int    0xb
  406b59:	repz jmp 0x9597:0x8cdc5dcd
  406b61:	jge    0x406bcc
  406b63:	mov    eax,ds:0xcafc000b
  406b68:	in     eax,0x8c
  406b6a:	push   0x72d19f32
  406b6f:	push   ebx
  406b70:	lds    eax,FWORD PTR [edx-0x45b86f06]
  406b76:	or     ebx,DWORD PTR [ebp-0x2b]
  406b79:	ret    0x5e7
  406b7c:	shl    BYTE PTR [edi+ecx*2+0x27],cl
  406b80:	call   0xf20127de
  406b85:	pop    esp
  406b86:	into   
  406b87:	dec    eax
  406b88:	xchg   esi,eax
  406b89:	xchg   esp,esp
  406b8b:	xor    DWORD PTR [ebx+0xa4ea69b],edi
  406b91:	cmp    BYTE PTR [ebp-0x55],cl
  406b94:	stos   DWORD PTR es:[edi],eax
  406b95:	pop    edx
  406b96:	and    dl,BYTE PTR [ebp-0x7b]
  406b99:	es xchg edx,eax
  406b9b:	nop
  406b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b9d:	sbb    al,0x20
  406b9f:	and    ecx,DWORD PTR [esi-0x34]
  406ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ba3:	call   0x80c9:0x2f6ca02f
  406baa:	imul   edi,DWORD PTR [ebp-0x3fde8428],0x8072f09b
  406bb4:	or     al,0x28
  406bb6:	dec    edi
  406bb7:	outs   dx,BYTE PTR ds:[esi]
  406bb8:	push   eax
  406bb9:	jle    0x406bb4
  406bbb:	sar    DWORD PTR [ebx],0x9
  406bbe:	dec    esi
  406bbf:	popf   
  406bc0:	jle    0x406c01
  406bc2:	adc    al,BYTE PTR ds:0xc1b58279
  406bc8:	fbld   TBYTE PTR [esp+eax*1]
  406bcb:	jae    0x406b89
  406bcd:	cmc    
  406bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bcf:	aas    
  406bd0:	xchg   ebx,eax
  406bd1:	call   0xde21:0x61c1f26e
  406bd8:	ja     0x406beb
  406bda:	dec    ebx
  406bdb:	loopne 0x406b66
  406bdd:	dec    edi
  406bde:	fdiv   DWORD PTR [edx-0x9]
  406be2:	leave  
  406be3:	jl     0x406c59
  406be5:	cmp    bh,BYTE PTR [ebx-0x2bd9de2f]
  406beb:	jmp    0x4bf7:0x38a2b6e8
  406bf2:	push   cs
  406bf3:	icebp  
  406bf4:	clc    
  406bf5:	fist   DWORD PTR [edi+0x67]
  406bf8:	pop    ebx
  406bf9:	mov    esi,0x4693b8a9
  406bfe:	inc    ebx
  406bff:	icebp  
  406c00:	fstp   TBYTE PTR [ebx]
  406c02:	sub    ecx,DWORD PTR [esi]
  406c04:	mov    edi,0xbb2f71e7
  406c09:	cwde   
  406c0a:	imul   edi,DWORD PTR es:[ecx],0x483b775a
  406c11:	jle    0x406c63
  406c13:	into   
  406c14:	popf   
  406c15:	popf   
  406c16:	jecxz  0x406c8c
  406c18:	sub    eax,0xebdc5ca4
  406c1d:	rol    BYTE PTR [edx-0x76],0x5b
  406c21:	unpcklps xmm2,XMMWORD PTR [edi-0x483f9be3]
  406c28:	aaa    
  406c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c2a:	dec    edx
  406c2b:	(bad)  
  406c2c:	push   0x7e8600ee
  406c31:	jecxz  0x406cb2
  406c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c34:	dec    edx
  406c35:	fmul   QWORD PTR [edi]
  406c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c38:	outs   dx,DWORD PTR ds:[esi]
  406c39:	inc    esp
  406c3a:	jmp    0x9797b27b
  406c3f:	pop    ds
  406c40:	icebp  
  406c41:	not    DWORD PTR [ebx]
  406c43:	jle    0x406bf9
  406c45:	loope  0x406c54
  406c47:	xchg   ecx,eax
  406c48:	arpl   WORD PTR [ebx-0x6d],di
  406c4b:	mov    ds:0xa0839a5a,al
  406c50:	mov    esp,0xd74e29ea
  406c55:	sbb    al,0xe9
  406c57:	cmp    eax,0xc64177f0
  406c5c:	rcl    BYTE PTR [edx+eax*2],cl
  406c5f:	call   0xc06e7aaf
  406c64:	xor    esp,edi
  406c66:	xchg   esp,eax
  406c67:	inc    ebx
  406c68:	aas    
  406c69:	xor    ebp,DWORD PTR [edi-0x56]
  406c6c:	bound  esp,QWORD PTR [eax]
  406c6e:	inc    ebx
  406c6f:	sub    DWORD PTR [edi],ecx
  406c71:	sbb    esp,DWORD PTR [edx-0x5541181b]
  406c77:	lea    esp,[esi+ebx*4-0x685e5aa7]
  406c7e:	popa   
  406c7f:	sbb    al,0x60
  406c81:	call   0xa81eb0e
  406c86:	push   cs
  406c87:	mov    ch,0x17
  406c89:	jge    0x406c8f
  406c8b:	(bad)  
  406c8c:	out    dx,al
  406c8d:	dec    ebp
  406c8e:	fadd   DWORD PTR [edi+ebp*8+0x4c8bb6dc]
  406c95:	in     al,0xe6
  406c97:	data16 dec BYTE PTR [edi+0x27adb747]
  406c9e:	push   edi
  406c9f:	cmp    BYTE PTR [eax+0x13],al
  406ca2:	jbe    0x406cdb
  406ca4:	mov    ebx,0x544df950
  406ca9:	or     eax,0x33982e68
  406cae:	xchg   esi,eax
  406caf:	xor    esp,DWORD PTR [eax]
  406cb1:	cmp    eax,0x981e4f4f
  406cb6:	push   ss
  406cb7:	push   ds
  406cb8:	leave  
  406cb9:	add    ecx,DWORD PTR [edi+0x8]
  406cbc:	je     0x406cad
  406cbe:	int    0x28
  406cc0:	mov    DWORD PTR [eax-0x7683c565],edi
  406cc6:	lods   al,BYTE PTR ds:[esi]
  406cc7:	(bad)  
  406cc8:	call   0x63a8c6de
  406ccd:	adc    BYTE PTR [edx+0x2fddff17],al
  406cd3:	lahf   
  406cd4:	and    al,BYTE PTR [eax]
  406cd6:	or     dl,cl
  406cd8:	shl    dh,0x65
  406cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cdc:	adc    DWORD PTR [edi-0x2d],0xfc9bd68e
  406ce3:	mov    edi,0x7383645a
  406ce8:	ins    BYTE PTR es:[edi],dx
  406ce9:	(bad)  
  406cea:	shl    cl,1
  406cec:	icebp  
  406ced:	and    dh,BYTE PTR [edx+0x62926511]
  406cf3:	cdq    
  406cf4:	pusha  
  406cf5:	pop    eax
  406cf6:	inc    ebx
  406cf7:	loop   0x406d3d
  406cf9:	adc    BYTE PTR gs:[esi+0x35882cf4],bl
  406d00:	aas    
  406d01:	xlat   BYTE PTR ds:[ebx]
  406d02:	xchg   ebx,eax
  406d03:	dec    ebp
  406d04:	clc    
  406d05:	ficom  WORD PTR [eax-0x2ad69450]
  406d0b:	pop    edx
  406d0c:	add    BYTE PTR [ebp-0x69163e69],dh
  406d12:	cmp    BYTE PTR [edi+eiz*1],al
  406d15:	cmp    eax,0x5e36566
  406d1a:	daa    
  406d1b:	jae    0x406d2a
  406d1d:	stos   DWORD PTR es:[edi],eax
  406d1e:	pushf  
  406d1f:	jle    0x406ca8
  406d21:	dec    BYTE PTR [esi]
  406d23:	xchg   edi,eax
  406d24:	and    DWORD PTR [ebx+0x4d],edx
  406d27:	pop    edi
  406d28:	nop
  406d29:	rcl    cl,1
  406d2b:	shr    DWORD PTR [eax-0x3786ac06],1
  406d31:	les    edx,FWORD PTR [ecx-0x4f]
  406d34:	add    eax,0x677f88c3
  406d39:	cmp    ebx,DWORD PTR [edi]
  406d3b:	jmp    0x406d3f
  406d3d:	sub    dh,BYTE PTR [ebp-0x4a]
  406d40:	xor    ch,BYTE PTR [eax]
  406d42:	outs   dx,BYTE PTR ds:[esi]
  406d43:	fld    st(7)
  406d45:	lea    edx,[ebx+edx*2-0x2]
  406d49:	push   eax
  406d4a:	cmp    eax,0x53fc38e7
  406d4f:	ret    
  406d50:	mov    ah,0x1f
  406d52:	push   eax
  406d53:	lods   eax,DWORD PTR ds:[esi]
  406d54:	idiv   BYTE PTR [edx]
  406d56:	pop    ss
  406d57:	push   esp
  406d58:	fdiv   st(0),st
  406d5a:	or     eax,0x8e16d321
  406d5f:	cmp    eax,0x26f18095
  406d64:	add    ebp,DWORD PTR [edx+0x50d16a8]
  406d6a:	jmp    0x50ee6acd
  406d6f:	jge    0x406da9
  406d71:	in     eax,dx
  406d72:	jae    0x406d50
  406d74:	mov    ecx,0x25dee38a
  406d79:	mov    DWORD PTR [ebp+0x142c76d9],ebp
  406d7f:	xchg   ecx,eax
  406d80:	adc    ebp,eax
  406d82:	fidivr DWORD PTR [edx-0x45]
  406d85:	push   cs
  406d86:	cmc    
  406d87:	call   0xde1e:0x476f8bbb
  406d8e:	mov    esi,0xc0509e77
  406d93:	aam    0xd7
  406d95:	leave  
  406d96:	or     BYTE PTR [ebx],al
  406d98:	pop    ebx
  406d99:	pop    eax
  406d9a:	dec    edx
  406d9b:	push   cs
  406d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d9d:	loop   0x406d85
  406d9f:	sub    al,0x20
  406da1:	pop    eax
  406da2:	cdq    
  406da3:	adc    eax,0xd6a89332
  406da8:	test   eax,0x26fca666
  406dad:	push   es
  406dae:	fdiv   DWORD PTR [eax-0x53]
  406db1:	push   ebp
  406db2:	mov    dh,0xa1
  406db4:	test   DWORD PTR ds:0xa3470f7d,edi
  406dba:	cmp    DWORD PTR [eax+0x1a],ebx
  406dbd:	push   cs
  406dbe:	inc    esp
  406dbf:	sub    bh,BYTE PTR [edx]
  406dc1:	and    eax,0x37e99a24
  406dc6:	mov    ds:0x2f26d7d0,al
  406dcb:	ja     0x406e10
  406dcd:	mov    al,ds:0x18739466
  406dd2:	sub    dl,BYTE PTR [esi]
  406dd4:	and    DWORD PTR [eax],0x46
  406dd7:	mov    ecx,esi
  406dd9:	stc    
  406dda:	mov    BYTE PTR [eax],dl
  406ddc:	in     eax,0xf4
  406dde:	lds    ebx,FWORD PTR [edi-0x62]
  406de1:	and    dl,BYTE PTR [edx]
  406de3:	sbb    al,dl
  406de5:	jp     0x406e1b
  406de7:	pop    eax
  406de8:	push   es
  406de9:	out    0xde,al
  406deb:	push   0xdb61355
  406df0:	loope  0x406dd2
  406df2:	out    dx,al
  406df3:	(bad)  
  406df4:	pop    edi
  406df5:	xchg   esi,eax
  406df6:	mov    ecx,0x1bbca2ef
  406dfb:	popa   
  406dfc:	mov    eax,ds:0xc246e91f
  406e01:	idiv   BYTE PTR [ebx+ebp*8-0x5]
  406e05:	int    0xc2
  406e07:	fdivr  QWORD PTR [edi+0x3e290aa3]
  406e0d:	jp     0x406e48
  406e0f:	push   ss
  406e10:	mov    esp,0xce576a84
  406e15:	sub    al,0x34
  406e17:	mov    ecx,0x76df3ba6
  406e1c:	pushf  
  406e1d:	int    0xff
  406e1f:	jbe    0x406e7d
  406e21:	jmp    0x406dea
  406e23:	aas    
  406e24:	imul   esp,DWORD PTR [esi+eax*2+0x40],0x95f68b36
  406e2c:	inc    edi
  406e2d:	jo     0x406e3a
  406e2f:	fwait
  406e30:	jae    0x406e06
  406e32:	ror    BYTE PTR [ebp-0x62],1
  406e35:	inc    eax
  406e36:	push   ss
  406e37:	jb     0x406e6a
  406e39:	stc    
  406e3a:	mov    ebp,0x5e82f556
  406e3f:	jp     0x406dc2
  406e41:	int3   
  406e42:	ret    
  406e43:	dec    esp
  406e44:	in     al,0x2d
  406e46:	mov    edi,0x9b4a640b
  406e4b:	adc    eax,0x68920a1
  406e50:	push   ss
  406e51:	ja     0x406eaf
  406e53:	inc    ebp
  406e54:	test   eax,0x63039d7
  406e59:	loopne 0x406de4
  406e5b:	cmp    cl,BYTE PTR [eax]
  406e5d:	jno    0x406ea2
  406e5f:	enter  0x6e08,0xd2
  406e63:	hlt    
  406e64:	and    DWORD PTR [ebp-0x79a324c8],esi
  406e6a:	jg     0x406ea1
  406e6c:	out    0x7c,al
  406e6e:	cmp    DWORD PTR [eax-0x4],ecx
  406e71:	and    al,0xb
  406e73:	hlt    
  406e74:	(bad)
  406e77:	push   edi
  406e78:	xor    ch,BYTE PTR [ebp-0x2c6eaaa9]
  406e7e:	fs mov ah,0x2c
  406e81:	lds    ecx,FWORD PTR [esi+0x4fd0e460]
  406e87:	or     al,0x68
  406e89:	ror    BYTE PTR [eax+0x7ccc0baa],1
  406e8f:	(bad)  
  406e90:	(bad)  ds:0xb5e32f57
  406e96:	daa    
  406e97:	mov    esp,DWORD PTR [esi-0x7abf1e0d]
  406e9d:	dec    ebp
  406e9e:	push   ebx
  406e9f:	mov    ch,0xe
  406ea1:	iret   
  406ea2:	pop    es
  406ea3:	daa    
  406ea4:	cmp    eax,0x2db21752
  406ea9:	and    al,0xe
  406eab:	jp     0x406f13
  406ead:	nop
  406eae:	adc    cl,ch
  406eb0:	add    ebp,DWORD PTR [edx+0x62204535]
  406eb6:	inc    ecx
  406eb7:	and    ebx,0xffffffa4
  406eba:	jns    0x406f0b
  406ebc:	aam    0x24
  406ebe:	pop    ecx
  406ebf:	and    BYTE PTR [eax-0x5f7708ed],al
  406ec5:	test   al,0x8f
  406ec7:	ss in  eax,dx
  406ec9:	lock ss jne 0x406ee6
  406ecd:	mov    ebp,0x54c26946
  406ed2:	xlat   BYTE PTR ds:[ebx]
  406ed3:	imul   esi,edx,0xe9ca5dbe
  406ed9:	gs jmp 0xf5e85200
  406edf:	inc    ecx
  406ee0:	and    BYTE PTR [esi-0x68],dh
  406ee3:	mov    ah,0x85
  406ee5:	stos   BYTE PTR es:[edi],al
  406ee6:	cmp    BYTE PTR [ebp+0x2b],dl
  406ee9:	loope  0x406efb
  406eeb:	fisubr WORD PTR [edi-0x4]
  406eee:	pop    ebp
  406eef:	adc    ch,bl
  406ef1:	xor    BYTE PTR [edx-0xeef08e5],0xde
  406ef8:	in     al,0x39
  406efa:	out    0xe3,eax
  406efc:	idiv   DWORD PTR [esp+ebp*2]
  406eff:	imul   ecx,DWORD PTR [ecx-0x74],0x4c
  406f03:	or     al,0x38
  406f05:	inc    esi
  406f06:	scas   eax,DWORD PTR es:[edi]
  406f07:	lock xchg esi,eax
  406f09:	pop    edx
  406f0a:	push   esi
  406f0b:	add    edx,DWORD PTR [eax+0x4fce6f0]
  406f11:	xchg   DWORD PTR [edx-0x6b],ebp
  406f14:	(bad)  
  406f15:	dec    edx
  406f16:	adc    ah,BYTE PTR [edi]
  406f18:	repz call 0xa0b526bf
  406f1e:	or     al,0x23
  406f20:	adc    al,0x3d
  406f22:	in     al,0x26
  406f24:	push   ebx
  406f25:	test   eax,0x318d09d4
  406f2a:	retf   0x4177
  406f2d:	dec    ecx
  406f2e:	jg     0x406f2d
  406f30:	adc    DWORD PTR [eax-0x65739f30],esi
  406f36:	(bad)
  406f39:	fs xchg ebx,ebx
  406f3c:	mov    eax,DWORD PTR [esi+0x4da06b22]
  406f42:	pop    es
  406f43:	fs xor eax,0x267c032d
  406f49:	adc    bl,BYTE PTR [esi]
  406f4b:	(bad)  
  406f4c:	xor    BYTE PTR [ecx],ch
  406f4e:	jge    0x406f95
  406f50:	fisubr WORD PTR [esi-0x3b]
  406f53:	in     al,dx
  406f54:	add    BYTE PTR gs:[edi+ecx*1-0x38],dl
  406f59:	jp     0x406f7f
  406f5b:	sti    
  406f5c:	mov    ds:0x3eabe121,eax
  406f61:	or     bh,ch
  406f63:	je     0x406f5e
  406f65:	mov    esp,0xa3ee1f52
  406f6a:	mov    dh,0x5
  406f6c:	pop    ebp
  406f6d:	shr    DWORD PTR [edi-0x3a],cl
  406f70:	mov    cs,WORD PTR [edi-0x48]
  406f73:	pop    edx
  406f74:	imul   ebx,DWORD PTR [ecx+0x2c4285ba],0x41b1e4bf
  406f7e:	les    eax,FWORD PTR [ebp-0x56f941f0]
  406f84:	mov    esp,0xfb7d1cc4
  406f89:	or     eax,0xdae944b9
  406f8e:	xchg   ebx,eax
  406f8f:	add    ah,ah
  406f91:	test   BYTE PTR [esi],bl
  406f93:	sub    eax,0x6e5abf0e
  406f98:	xchg   edi,eax
  406f99:	daa    
  406f9a:	mov    al,ds:0xd904402e
  406f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fa0:	sbb    bl,ch
  406fa2:	imul   esi,eax,0xffffffe6
  406fa5:	out    0x9c,eax
  406fa7:	fwait
  406fa8:	xchg   esp,eax
  406fa9:	mov    bh,0x45
  406fab:	loopne 0x406ff7
  406fad:	ficomp DWORD PTR [esi-0x61e5c1cf]
  406fb3:	mov    ecx,0xfa9c2172
  406fb8:	icebp  
  406fb9:	mov    esi,edi
  406fbb:	loop   0x406f74
  406fbd:	mov    ds:0xd60c6023,eax
  406fc2:	jg     0x406fee
  406fc4:	out    dx,eax
  406fc5:	rcl    BYTE PTR [ebx+0x52],cl
  406fc8:	daa    
  406fc9:	fwait
  406fca:	sub    ch,dl
  406fcc:	(bad)  
  406fcd:	dec    ecx
  406fce:	repnz fild WORD PTR [ebx]
  406fd1:	movzx  edx,sp
  406fd4:	sub    bh,BYTE PTR ds:0x84906d87
  406fda:	xchg   edi,ebp
  406fdc:	pop    es
  406fdd:	mov    ebp,0x90d06218
  406fe2:	jecxz  0x406fed
  406fe4:	cvtps2pd xmm1,QWORD PTR [edi-0x6e]
  406fe8:	sub    BYTE PTR [edx+0x51],ah
  406feb:	(bad)  
  406fed:	(bad)  
  406fee:	xchg   edi,eax
  406fef:	ror    esi,0xe7
  406ff2:	in     al,0x3
  406ff4:	mov    bl,BYTE PTR [ebx+0x31d8c1f6]
  406ffa:	mov    al,ds:0xbad8e406
  406fff:	push   ds
  407000:	sar    DWORD PTR ds:0x214721dc,cl
  407006:	inc    ecx
  407007:	clc    
  407008:	enter  0xc3a0,0xb9
  40700c:	hlt    
  40700d:	cmp    eax,0xe0eccc05
  407012:	xchg   esp,eax
  407013:	mov    ah,0xca
  407015:	rol    BYTE PTR [esp+esi*1+0x689f4142],1
  40701c:	and    bh,BYTE PTR [edi-0x132b5265]
  407022:	fadd   QWORD PTR [esi+ebx*1+0x34]
  407026:	(bad)  [edx+ebp*2+0x10]
  40702a:	mov    edx,0x368e09d2
  40702f:	cmp    al,0xfc
  407031:	pop    esi
  407032:	lods   eax,DWORD PTR ds:[esi]
  407033:	jecxz  0x407063
  407035:	jns    0x406ff4
  407037:	xor    eax,0xccbf45a4
  40703c:	pusha  
  40703d:	jnp    0x406fda
  40703f:	hlt    
  407040:	loope  0x406fdd
  407042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407043:	jle    0x407079
  407045:	sbb    ah,bl
  407047:	and    cl,ah
  407049:	sbb    ah,BYTE PTR [ecx]
  40704b:	or     al,0xdd
  40704d:	mov    dl,0xd1
  40704f:	push   ecx
  407050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407051:	or     BYTE PTR [ebx-0xe5f871f],dh
  407057:	in     eax,dx
  407058:	adc    BYTE PTR [ecx],0xac
  40705b:	sub    ch,BYTE PTR [esi+0xd31cd0c]
  407061:	in     eax,0xe8
  407063:	mov    ebx,0xea47a02f
  407068:	aas    
  407069:	and    al,0x68
  40706b:	out    0xe4,eax
  40706d:	shr    DWORD PTR [ebx],cl
  40706f:	pop    esi
  407070:	and    DWORD PTR cs:[ecx+0x7383bcef],esi
  407077:	push   cs
  407078:	sbb    BYTE PTR [edx],0x66
  40707b:	sbb    edx,DWORD PTR [ebx]
  40707d:	mov    ds:0x8f16f28,al
  407082:	inc    eax
  407083:	mov    WORD PTR [ebp+eax*8-0x32],es
  407087:	pop    edx
  407088:	jmp    0x407051
  40708a:	hlt    
  40708b:	cmc    
  40708c:	push   ds
  40708d:	pop    eax
  40708e:	in     eax,dx
  40708f:	sahf   
  407090:	fnsave [ecx]
  407092:	push   esi
  407093:	je     0x4070b3
  407095:	stc    
  407096:	pop    esi
  407097:	jecxz  0x40702e
  407099:	pop    edx
  40709a:	push   ds
  40709b:	xchg   edx,eax
  40709c:	inc    edi
  40709d:	bound  edi,QWORD PTR [esi+0x5625a1c2]
  4070a3:	pushf  
  4070a4:	loop   0x40711f
  4070a6:	(bad)  
  4070aa:	and    eax,0xe08a6b9c
  4070af:	or     edi,DWORD PTR [esi]
  4070b1:	(bad)  
  4070b2:	push   0x4f28e34b
  4070b7:	ds jge 0x407049
  4070ba:	fist   DWORD PTR [esi-0x6ef45dad]
  4070c0:	imul   ebx,DWORD PTR [edx],0x7e969cce
  4070c6:	add    BYTE PTR gs:[esi],bl
  4070c9:	add    DWORD PTR [eax+0x12a81a8a],eax
  4070cf:	aam    0x96
  4070d1:	inc    esp
  4070d2:	aas    
  4070d3:	cmp    DWORD PTR [ecx-0x16],ebp
  4070d6:	std    
  4070d7:	sub    BYTE PTR [edi],0x9c
  4070da:	add    al,BYTE PTR [edx-0x7a]
  4070dd:	xchg   BYTE PTR [edi+0x27],al
  4070e0:	rcr    DWORD PTR [eax],1
  4070e2:	mov    ebp,0x4134ab0e
  4070e7:	adc    al,0xe4
  4070e9:	inc    eax
  4070ea:	or     dl,BYTE PTR [eax]
  4070ec:	xor    dl,BYTE PTR [eax+edi*1+0x34]
  4070f0:	dec    esp
  4070f1:	or     BYTE PTR [esi-0x1c04218e],bl
  4070f7:	cld    
  4070f8:	es icebp 
  4070fa:	xchg   ebx,edi
  4070fc:	jl     0x407105
  4070fe:	loope  0x4070d7
  407100:	lods   al,BYTE PTR ds:[esi]
  407101:	push   0xe95870ba
  407106:	sar    DWORD PTR [eax-0x50932f89],1
  40710c:	xchg   edi,eax
  40710d:	icebp  
  40710e:	test   eax,0xd1d952f2
  407113:	or     eax,0x32007a3d
  407118:	ins    DWORD PTR es:[edi],dx
  407119:	icebp  
  40711a:	pop    ecx
  40711b:	mov    ah,0xee
  40711d:	retf   0x7ea2
  407120:	cmp    edi,ecx
  407122:	add    DWORD PTR [edi+0x7b],eax
  407125:	test   esp,edi
  407127:	and    ah,BYTE PTR [ebx-0x38fdb02e]
  40712d:	mov    cl,0xd4
  40712f:	aas    
  407130:	lahf   
  407131:	lods   al,BYTE PTR ds:[esi]
  407132:	sbb    bl,BYTE PTR [eax]
  407134:	jcxz   0x407190
  407137:	jmp    0xb40f:0x7772e833
  40713e:	push   cs
  40713f:	sub    ecx,DWORD PTR [esi]
  407141:	ret    
  407142:	xor    DWORD PTR [eax+0x1000ef80],0x293fd842
  40714c:	xchg   BYTE PTR [eax],bh
  40714e:	les    ecx,FWORD PTR [esi+ebx*1-0xd]
  407152:	push   edi
  407153:	shl    BYTE PTR [eax],1
  407155:	pop    esi
  407156:	out    0xe6,eax
  407158:	or     DWORD PTR [eax-0x305a0b6d],edx
  40715e:	fbld   TBYTE PTR [edx]
  407160:	daa    
  407161:	das    
  407162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407163:	mov    bl,0x5
  407165:	imul   ecx,ebx,0xcd494e2e
  40716b:	pop    ebx
  40716c:	dec    ebp
  40716d:	out    dx,al
  40716e:	repnz dec BYTE PTR [edx]
  407171:	sahf   
  407172:	pop    DWORD PTR [eax+0x14]
  407175:	into   
  407176:	add    BYTE PTR [edx+edi*1+0x1f],ah
  40717a:	pusha  
  40717b:	jmp    0x585045f3
  407180:	gs push esp
  407182:	dec    edi
  407183:	mov    ah,0x6e
  407185:	jmp    0x971d:0xbbf61edb
  40718c:	pop    edx
  40718d:	inc    esp
  40718e:	iret   
  40718f:	jo     0x40719f
  407191:	pop    ss
  407192:	or     edx,DWORD PTR ds:0xfd7e9ca9
  407198:	bound  ebp,QWORD PTR [esi]
  40719a:	inc    esi
  40719b:	in     al,0x90
  40719d:	fcom   QWORD PTR [ecx]
  40719f:	jnp    0x407144
  4071a1:	cdq    
  4071a2:	rcl    DWORD PTR [esi-0x4f],1
  4071a5:	aaa    
  4071a6:	das    
  4071a7:	sbb    eax,0x984e7c40
  4071ac:	test   eax,0x1bea9efd
  4071b1:	mov    edi,esi
  4071b3:	bound  ecx,QWORD PTR [esp+edi*8+0x6d17f8db]
  4071ba:	lea    ecx,[eax-0x6cc1bcc0]
  4071c0:	mov    ecx,0x5d8f561b
  4071c5:	std    
  4071c6:	pushf  
  4071c7:	jl     0x4071f1
  4071c9:	cmp    al,0xe6
  4071cb:	xchg   edi,eax
  4071cc:	lods   al,BYTE PTR ds:[esi]
  4071cd:	fwait
  4071ce:	push   edx
  4071cf:	(bad)  
  4071d0:	outs   dx,BYTE PTR ds:[esi]
  4071d1:	jmp    0x40720e
  4071d3:	cmp    BYTE PTR [esi+0x25],0x4d
  4071d7:	dec    edi
  4071d8:	fild   DWORD PTR [ecx]
  4071da:	xor    al,0x88
  4071dc:	adc    ebx,DWORD PTR [esi+0x38]
  4071df:	jnp    0x407181
  4071e1:	ror    DWORD PTR [ecx],1
  4071e3:	pop    es
  4071e4:	ficomp WORD PTR [edi-0x53]
  4071e7:	sub    cl,BYTE PTR [edx+0x4cd40674]
  4071ed:	push   es
  4071ee:	sbb    dh,BYTE PTR [edx-0x4a]
  4071f1:	mov    ah,0x76
  4071f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071f4:	test   al,0xde
  4071f6:	pop    ebp
  4071f7:	gs (bad) 
  4071f9:	test   al,0x9a
  4071fb:	jns    0x407275
  4071fd:	cmp    DWORD PTR [edx],esi
  4071ff:	sti    
  407200:	ds out 0xb1,eax
  407203:	aam    0x35
  407205:	(bad)  
  407206:	cmp    eax,0xf64a2875
  40720b:	or     edi,ebx
  40720d:	or     BYTE PTR [ebx+eax*2+0x35],0x6b
  407212:	sub    ah,BYTE PTR [eax+0x58]
  407215:	cmp    ebp,DWORD PTR [ecx+0x44f93fe3]
  40721b:	pop    eax
  40721c:	xor    BYTE PTR [eax+0x4e],cl
  40721f:	fwait
  407220:	ins    DWORD PTR es:[edi],dx
  407221:	ins    DWORD PTR es:[edi],dx
  407222:	dec    esi
  407223:	mov    esi,0xea622987
  407228:	sbb    al,0x8f
  40722a:	jmp    0xb731:0xef8267ba
  407231:	jne    0x40724c
  407233:	add    eax,DWORD PTR [ecx+edi*2-0x379c952f]
  40723a:	lock loop 0x40723b
  40723d:	test   DWORD PTR [ebx-0x7c],ecx
  407240:	adc    bh,BYTE PTR [ebp+0x702e9ed2]
  407246:	scas   eax,DWORD PTR es:[edi]
  407247:	retf   0xab3f
  40724a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40724b:	sti    
  40724c:	popf   
  40724d:	sub    al,0x2d
  40724f:	fwait
  407250:	jg     0x407238
  407252:	pop    ebp
  407253:	or     DWORD PTR [edx-0xdecaa55],edx
  407259:	sub    esi,DWORD PTR [edi+0x5ba759b1]
  40725f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407260:	in     al,dx
  407261:	out    dx,al
  407262:	sbb    BYTE PTR [eax+0x67],bh
  407265:	dec    edx
  407266:	xor    edx,ebx
  407268:	pusha  
  407269:	pop    eax
  40726a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40726b:	or     BYTE PTR [eax-0x37a5da44],0xf5
  407272:	mov    ecx,0x2056b1cd
  407277:	lods   al,BYTE PTR ds:[esi]
  407278:	mov    edi,0x96e2c7f
  40727d:	(bad)  
  40727f:	mov    DWORD PTR [ecx],ebp
  407281:	add    eax,DWORD PTR [eax]
  407283:	xlat   BYTE PTR ds:[ebx]
  407284:	and    dh,al
  407286:	pop    ecx
  407287:	retf   
  407288:	outs   dx,BYTE PTR ds:[esi]
  407289:	and    BYTE PTR [ebp-0x66],ah
  40728c:	cmp    al,0x5
  40728e:	mov    edx,0x705917ee
  407293:	(bad)  
  407294:	cli    
  407295:	mov    eax,ds:0x241db90a
  40729a:	sbb    dl,ah
  40729c:	or     BYTE PTR [ebp-0x676f16e2],dl
  4072a2:	push   ds
  4072a3:	(bad)  
  4072a5:	stos   DWORD PTR es:[edi],eax
  4072a6:	nop
  4072a7:	idiv   dl
  4072a9:	cmp    al,0xac
  4072ab:	and    BYTE PTR [edi],bh
  4072ad:	pop    ds
  4072ae:	sbb    ah,ah
  4072b0:	pop    ecx
  4072b1:	and    al,0x64
  4072b3:	fimul  WORD PTR [ebx-0x7]
  4072b6:	cli    
  4072b7:	xor    BYTE PTR [ebx],dh
  4072b9:	call   0x63c8:0xa1b1b6a0
  4072c0:	shl    BYTE PTR [ebx+edi*2],1
  4072c3:	or     al,0x56
  4072c5:	stos   DWORD PTR es:[edi],eax
  4072c6:	xor    DWORD PTR [ecx],ecx
  4072c8:	fist   DWORD PTR [eax]
  4072ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072cb:	fwait
  4072cc:	dec    edi
  4072cd:	pop    ecx
  4072ce:	std    
  4072cf:	scas   eax,DWORD PTR es:[edi]
  4072d0:	cmc    
  4072d1:	mov    BYTE PTR [eax],bl
  4072d3:	and    al,0xcd
  4072d5:	sbb    al,0x41
  4072d7:	jo     0x407280
  4072d9:	loope  0x4072c5
  4072db:	(bad)  
  4072dc:	sub    eax,0x68c7433
  4072e1:	mov    al,ds:0x6339dda4
  4072e6:	add    al,0xe4
  4072e8:	jne    0x407354
  4072ea:	repz hlt 
  4072ec:	jbe    0x407345
  4072ee:	lods   eax,DWORD PTR ds:[esi]
  4072ef:	mov    esp,DWORD PTR [esi+0x73b14131]
  4072f5:	xchg   ebp,eax
  4072f6:	or     esi,DWORD PTR [esi-0xd]
  4072f9:	sub    ebx,DWORD PTR [edi]
  4072fb:	mov    ds:0xe42298ff,eax
  407300:	div    ebx
  407302:	and    edi,ebp
  407304:	add    bl,al
  407306:	pop    es
  407307:	scas   al,BYTE PTR es:[edi]
  407308:	sti    
  407309:	dec    ecx
  40730a:	in     eax,dx
  40730b:	arpl   si,cx
  40730d:	in     eax,0xfc
  40730f:	dec    esp
  407310:	(bad)  
  407312:	pop    ebx
  407313:	sbb    al,0xe2
  407315:	pop    ebp
  407316:	in     al,0x4f
  407318:	push   0xffffffdf
  40731a:	push   edi
  40731b:	push   ds
  40731c:	xchg   edx,eax
  40731d:	iret   
  40731e:	retf   
  40731f:	sbb    DWORD PTR [edx],edx
  407321:	test   al,0x79
  407323:	jecxz  0x407306
  407325:	loopne 0x40735a
  407327:	pop    edi
  407328:	fwait
  407329:	pop    es
  40732a:	int    0x2b
  40732c:	push   eax
  40732d:	stos   DWORD PTR es:[edi],eax
  40732e:	fcom   DWORD PTR [ebx-0x4a]
  407331:	sbb    al,BYTE PTR ds:[eax+0x6f]
  407335:	add    dh,0xb7
  407338:	mov    ebp,0xe0d74442
  40733d:	xchg   esp,eax
  40733e:	dec    esp
  40733f:	jne    0x40737a
  407341:	and    al,BYTE PTR [esi-0x6f88feaf]
  407347:	popa   
  407348:	jp     0x407388
  40734a:	jno    0x4072dd
  40734c:	mov    sp,0x62aa
  407350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407351:	outs   dx,BYTE PTR ds:[esi]
  407352:	repnz mov ch,0x1c
  407355:	xchg   DWORD PTR [ecx],ecx
  407357:	(bad)  
  407358:	bound  ebx,QWORD PTR [eax+0x63]
  40735b:	dec    ecx
  40735c:	leave  
  40735d:	mov    eax,ds:0x60a9b8e5
  407362:	dec    ecx
  407363:	sti    
  407364:	std    
  407365:	pop    es
  407366:	push   0x9301851b
  40736b:	je     0x4073cc
  40736d:	das    
  40736e:	iret   
  40736f:	dec    edx
  407370:	test   DWORD PTR [ecx-0x7e],edx
  407373:	mov    eax,0x5f50a2b
  407378:	out    dx,eax
  407379:	adc    ebx,DWORD PTR [eax-0x671885c5]
  40737f:	pop    ss
  407380:	push   edx
  407381:	pop    edi
  407382:	pushf  
  407383:	xchg   DWORD PTR [esi+eax*2+0x3378b2a5],edi
  40738a:	cmp    BYTE PTR [esi-0x5],cl
  40738d:	scas   eax,DWORD PTR es:[edi]
  40738e:	div    DWORD PTR [ebx+ecx*8-0xb]
  407392:	into   
  407393:	daa    
  407394:	test   BYTE PTR [eax],cl
  407396:	xchg   esp,eax
  407397:	cmp    al,0xa3
  407399:	sub    esp,esp
  40739b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40739c:	pop    ds
  40739d:	inc    edi
  40739e:	mov    esp,0xf9cca594
  4073a3:	dec    ebx
  4073a4:	idiv   ch
  4073a6:	neg    BYTE PTR [ebx]
  4073a8:	sar    BYTE PTR [ebp-0x3669561a],1
  4073ae:	ins    DWORD PTR es:[edi],dx
  4073af:	adc    al,0x53
  4073b1:	sbb    BYTE PTR [esi-0xc940589],dl
  4073b7:	sbb    DWORD PTR [ebx],edx
  4073b9:	mov    dl,0xaa
  4073bb:	add    DWORD PTR [eax-0x4e],edi
  4073be:	cdq    
  4073bf:	out    0x2e,eax
  4073c1:	in     eax,dx
  4073c2:	leave  
  4073c3:	ret    
  4073c4:	dec    ecx
  4073c5:	pop    eax
  4073c6:	(bad)  
  4073c7:	lods   al,BYTE PTR ds:[esi]
  4073c8:	fwait
  4073c9:	sub    eax,0x982a4c18
  4073ce:	mov    ch,0x5d
  4073d0:	jle    0x4073d7
  4073d2:	sub    BYTE PTR [ecx+eax*8],dl
  4073d5:	shr    BYTE PTR [ecx+0x1],0x3b
  4073d9:	xchg   esp,eax
  4073da:	cwde   
  4073db:	loope  0x40737a
  4073dd:	mov    ds:0x5311dec3,al
  4073e2:	mov    ebp,0x82a4cd3b
  4073e7:	aad    0x58
  4073e9:	ins    BYTE PTR es:[edi],dx
  4073ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073eb:	push   cs
  4073ec:	retf   
  4073ed:	jo     0x4073cb
  4073ef:	fwait
  4073f0:	stos   DWORD PTR es:[edi],eax
  4073f1:	mul    eax
  4073f3:	adc    BYTE PTR [edi],al
  4073f5:	cs pop es
  4073f7:	lahf   
  4073f8:	gs repnz test esp,edx
  4073fc:	xchg   edx,eax
  4073fd:	inc    ecx
  4073fe:	out    dx,eax
  4073ff:	xchg   ebx,eax
  407400:	xchg   DWORD PTR [ebp-0x1d],edi
  407403:	adc    BYTE PTR [edi-0x55],al
  407406:	nop
  407407:	pusha  
  407408:	mov    ebx,fs
  40740a:	je     0x407477
  40740c:	jo     0x4073fa
  40740e:	lods   al,BYTE PTR ds:[esi]
  40740f:	sbb    BYTE PTR [edi-0x5e],dl
  407412:	jl     0x4073ee
  407414:	enter  0x96a5,0xd2
  407418:	cmp    BYTE PTR [edx+0x5c],bl
  40741b:	mov    gs,eax
  40741d:	xor    dl,cl
  40741f:	out    0xb6,eax
  407421:	ins    DWORD PTR es:[edi],dx
  407422:	out    0xc2,al
  407424:	or     eax,0xb19ccae3
  407429:	jg     0x4073e3
  40742b:	(bad)  
  40742c:	mov    ebp,0x1918237f
  407431:	ja     0x407468
  407433:	jns    0x4074a6
  407435:	mov    ebp,0xc6220464
  40743a:	mov    ?,WORD PTR [esi+0x22a9dfd9]
  407440:	inc    esp
  407441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407442:	gs xchg edi,eax
  407444:	pop    ds
  407445:	sub    eax,0x8d0a9c77
  40744a:	pop    es
  40744b:	stc    
  40744c:	(bad)  
  40744d:	xor    esi,DWORD PTR [edi-0x21e7982d]
  407453:	cld    
  407454:	pop    eax
  407455:	test   al,0xce
  407457:	push   es
  407458:	add    edi,esi
  40745a:	or     cl,bl
  40745c:	xchg   ebp,ebx
  40745e:	adc    al,0x39
  407460:	cmp    BYTE PTR [edx-0x47676209],bh
  407466:	jne    0x4074ad
  407468:	xchg   ebx,eax
  407469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40746a:	cmp    BYTE PTR [edi-0xd],al
  40746d:	call   0x2fcdc5cc
  407472:	cmp    al,BYTE PTR [ecx+0x3d952012]
  407478:	mov    ecx,0x2327f352
  40747d:	mov    ds:0xe00b45aa,al
  407482:	sub    DWORD PTR [eax+0x49bdb82b],edi
  407488:	mov    cl,0xc5
  40748a:	mov    eax,ds:0x717c13b1
  40748f:	int3   
  407490:	inc    ebp
  407491:	push   esp
  407492:	fdiv   st,st(1)
  407494:	xor    esp,0x882a315b
  40749a:	popf   
  40749b:	bnd fs jp 0x407509
  40749f:	cli    
  4074a0:	sub    al,0x1d
  4074a2:	(bad)  
  4074a3:	test   DWORD PTR [edi+eax*4-0x48cb12f5],0x117a499c
  4074ae:	paddusw mm4,QWORD PTR [edx+esi*4-0x3f2c5cff]
  4074b6:	adc    BYTE PTR [eax],ch
  4074b8:	std    
  4074b9:	lods   al,BYTE PTR ds:[esi]
  4074ba:	jg     0x407458
  4074bc:	sub    eax,0x9795c273
  4074c1:	xchg   esp,eax
  4074c2:	jbe    0x407491
  4074c4:	push   esi
  4074c5:	fmul   DWORD PTR [ecx+0x6813ec98]
  4074cb:	les    esi,FWORD PTR [ebp-0x53c2fe96]
  4074d1:	cmc    
  4074d2:	daa    
  4074d3:	call   0x94d:0x9294b503
  4074da:	mov    edi,0xddac5d6f
  4074df:	in     eax,0xf2
  4074e1:	sub    dl,ah
  4074e3:	sahf   
  4074e4:	xchg   ebp,eax
  4074e5:	int3   
  4074e6:	aam    0x64
  4074e8:	test   BYTE PTR [edx],ch
  4074ea:	out    dx,al
  4074eb:	or     DWORD PTR gs:[bx+di-0x7018],edi
  4074f1:	out    dx,al
  4074f2:	adc    eax,0xe3c4fd0
  4074f7:	cmp    DWORD PTR ds:0x28632c5,0xffffffcf
  4074fe:	cwde   
  4074ff:	pop    edx
  407500:	stos   DWORD PTR es:[edi],eax
  407501:	pop    ebx
  407502:	sub    eax,0xf1ab9fd1
  407507:	inc    esi
  407508:	sub    esp,esp
  40750a:	mov    al,0x59
  40750c:	or     esi,ebx
  40750e:	addps  xmm4,XMMWORD PTR [esi+0x492cd089]
  407515:	mov    al,ds:0x4e17f001
  40751a:	xlat   BYTE PTR ds:[ebx]
  40751b:	sar    DWORD PTR [eax],1
  40751d:	sahf   
  40751e:	cs inc ebp
  407520:	loopne 0x4074c7
  407522:	rol    BYTE PTR [esp+edx*4-0x51d42579],1
  407529:	loope  0x407513
  40752b:	xor    ah,BYTE PTR [ebx+0x75]
  40752e:	aam    0x75
  407530:	out    0xf8,eax
  407532:	inc    ebp
  407533:	inc    ebx
  407534:	(bad)  
  407535:	push   edi
  407536:	js     0x40753b
  407538:	jp     0x4074d2
  40753a:	and    DWORD PTR [edi+0x3aac9af2],ecx
  407540:	dec    ebp
  407541:	call   0xf35dbb20
  407546:	popa   
  407547:	xchg   edi,eax
  407548:	in     eax,0xd0
  40754a:	xor    DWORD PTR [edi],0x8540f269
  407550:	leave  
  407551:	js     0x4074eb
  407553:	adc    DWORD PTR [ebx-0x99b575f],edx
  407559:	std    
  40755a:	mov    ebp,DWORD PTR [eax]
  40755c:	dec    ecx
  40755d:	stos   DWORD PTR es:[edi],eax
  40755e:	aad    0xf4
  407560:	mov    ebx,0x6249077f
  407565:	or     BYTE PTR [edx],bl
  407567:	call   0xfe24:0x1811b174
  40756e:	fwait
  40756f:	shl    BYTE PTR [ecx+0x31339ad7],cl
  407575:	mov    ah,0xbb
  407577:	arpl   dx,bx
  407579:	or     DWORD PTR [edi-0x45],edx
  40757c:	push   edi
  40757d:	push   cs
  40757e:	jecxz  0x4075ba
  407580:	dec    esi
  407581:	je     0x407522
  407583:	stc    
  407584:	xchg   DWORD PTR [edx],esp
  407586:	inc    esi
  407587:	mov    WORD PTR [eax+0x42],ds
  40758a:	pop    ebp
  40758b:	bswap  ebp
  40758d:	xor    eax,DWORD PTR [esi-0x75]
  407590:	enter  0x940e,0x77
  407594:	sbb    al,0x19
  407596:	pop    es
  407597:	dec    esp
  407598:	mov    edx,ebx
  40759a:	dec    esi
  40759b:	add    ebp,DWORD PTR [esi]
  40759d:	repnz in eax,dx
  40759f:	mov    esi,0xb3bd9982
  4075a4:	push   ebx
  4075a5:	push   ebx
  4075a6:	xor    cl,BYTE PTR [ebp+0x28]
  4075a9:	mov    ds:0x370ac634,al
  4075ae:	xchg   esi,eax
  4075af:	retf   
  4075b0:	xchg   esp,eax
  4075b1:	jge    0x40762d
  4075b3:	and    al,0x34
  4075b5:	imul   esi,DWORD PTR [ebx+0x5801e620],0x633f6d4
  4075bf:	imul   esp,ebx,0xfa059ecf
  4075c5:	stc    
  4075c6:	in     eax,dx
  4075c7:	retf   0xf446
  4075ca:	dec    eax
  4075cb:	lahf   
  4075cc:	pop    edi
  4075cd:	fldenv [edx+ebp*2-0x27]
  4075d1:	pop    es
  4075d2:	xchg   edx,eax
  4075d3:	aas    
  4075d4:	in     al,0x6b
  4075d6:	adc    DWORD PTR [ebp+0x47],ebx
  4075d9:	in     eax,dx
  4075da:	lods   eax,DWORD PTR ds:[esi]
  4075db:	lahf   
  4075dc:	pop    edi
  4075dd:	xchg   esi,eax
  4075de:	adc    ch,bl
  4075e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075e1:	sub    eax,0xc38d42b7
  4075e6:	loopne 0x407643
  4075e8:	aas    
  4075e9:	xor    BYTE PTR [ecx+0x5b001c7f],bl
  4075ef:	sbb    bl,ch
  4075f1:	into   
  4075f2:	xchg   dl,cl
  4075f4:	inc    ecx
  4075f5:	jbe    0x407593
  4075f7:	inc    ecx
  4075f8:	push   0x31
  4075fa:	sbb    DWORD PTR [esi+0x4811c332],esi
  407600:	in     eax,0x9f
  407602:	sub    DWORD PTR [ebx+0x67],ebp
  407605:	fist   WORD PTR [esi]
  407607:	push   eax
  407608:	jle    0x407628
  40760a:	pop    ds
  40760b:	xor    ah,dl
  40760d:	outs   dx,BYTE PTR ds:[esi]
  40760e:	push   0xffffffec
  407610:	pusha  
  407611:	(bad)  
  407612:	dec    eax
  407613:	(bad)  
  407615:	or     BYTE PTR [ebp+0x5f102859],bh
  40761b:	jb     0x407683
  40761d:	sub    eax,0xf150a112
  407622:	jecxz  0x4075eb
  407624:	sub    BYTE PTR [esi],cl
  407626:	mov    ecx,0x33a3918b
  40762b:	sbb    DWORD PTR [edx-0x62],eax
  40762e:	mov    eax,ds:0x63aa722f
  407633:	cwde   
  407634:	pop    DWORD PTR [ebp+edi*1-0x6932191e]
  40763b:	adc    BYTE PTR [eax],al
  40763d:	sub    al,0x17
  40763f:	mov    ecx,0x140b116f
  407644:	dec    esp
  407645:	sub    DWORD PTR [ecx+0x410c9065],0xffffffba
  40764c:	popf   
  40764d:	das    
  40764e:	xchg   ebx,eax
  40764f:	loope  0x407613
  407651:	mov    ecx,0xe5b607d4
  407656:	aas    
  407657:	jbe    0x40761e
  407659:	pop    ebx
  40765a:	add    al,0xb3
  40765c:	mov    al,ds:0xa053aef8
  407661:	push   0xffffff97
  407663:	int3   
  407664:	jno    0x407638
  407666:	cmp    eax,0x183c098e
  40766b:	aad    0xcf
  40766d:	jl     0x407609
  40766f:	or     DWORD PTR [edi-0x52],0x6b64eed2
  407676:	add    DWORD PTR [edx-0x53d75cd7],edi
  40767c:	out    0xbf,al
  40767e:	mov    al,ds:0x2a6b53e1
  407683:	and    edi,edi
  407685:	test   DWORD PTR [ebx-0x4b14e98e],ebx
  40768b:	push   ds
  40768c:	pop    ss
  40768d:	into   
  40768e:	and    eax,0x7a35ca74
  407693:	mov    WORD PTR [eax+ebx*2-0x1b],es
  407697:	clc    
  407698:	dec    ebp
  407699:	and    ecx,DWORD PTR [ebx-0x32]
  40769c:	mov    edx,0xb88bffce
  4076a1:	pop    edx
  4076a2:	sbb    bh,BYTE PTR [ecx+0xe21c556]
  4076a8:	push   esp
  4076a9:	and    al,0xa4
  4076ab:	push   ecx
  4076ac:	or     eax,0x17ceb8fd
  4076b1:	in     eax,0x5a
  4076b3:	dec    ebx
  4076b4:	shr    DWORD PTR [edi+eiz*4-0x16577360],0x17
  4076bc:	pop    edi
  4076bd:	test   BYTE PTR [ebx+0x546f54cb],cl
  4076c3:	imul   edx,DWORD PTR [edx+ebp*1+0x27],0xffffffbd
  4076c8:	cld    
  4076c9:	mov    ecx,0x92bd86ab
  4076ce:	push   ebp
  4076cf:	cwde   
  4076d0:	cmp    BYTE PTR [ebp+0x18],dh
  4076d3:	retf   
  4076d4:	pop    edx
  4076d5:	and    ebx,edi
  4076d7:	mov    edx,DWORD PTR [ebp+0x56ad6ddf]
  4076dd:	add    eax,0x80d0e788
  4076e2:	inc    ebp
  4076e3:	push   ecx
  4076e4:	adc    eax,0xccdcef65
  4076e9:	lahf   
  4076ea:	shr    edx,cl
  4076ec:	outs   dx,DWORD PTR ds:[esi]
  4076ed:	cs fs jbe 0x407719
  4076f1:	add    DWORD PTR [esi+0x3d],ebp
  4076f4:	push   ebp
  4076f5:	jno    0x407678
  4076f7:	xchg   esp,eax
  4076f8:	inc    ebx
  4076f9:	jg     0x40774b
  4076fb:	addr16 xor bh,ch
  4076fe:	in     al,dx
  4076ff:	ds out 0x11,al
  407702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407703:	adc    ch,dh
  407705:	mov    ch,0xa5
  407707:	outs   dx,DWORD PTR ds:[esi]
  407708:	out    dx,al
  407709:	xor    eax,0xe3946539
  40770e:	and    eax,0xddd99c21
  407713:	adc    eax,0xfebae1be
  407718:	mov    ch,0x65
  40771a:	lods   eax,DWORD PTR ds:[esi]
  40771b:	cmp    ebp,DWORD PTR [edi]
  40771d:	scas   al,BYTE PTR es:[edi]
  40771e:	inc    ebp
  40771f:	sub    DWORD PTR [eax-0x19],ebx
  407722:	test   eax,0xefe4dd14
  407727:	push   eax
  407728:	hlt    
  407729:	jae    0x407726
  40772b:	hlt    
  40772c:	jmp    0x86dd04c2
  407731:	icebp  
  407732:	mov    edi,0x7fc0386d
  407737:	scas   al,BYTE PTR es:[edi]
  407738:	sub    al,al
  40773a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40773b:	sub    ah,BYTE PTR [ecx+0x66]
  40773e:	sbb    DWORD PTR [eax+0x30db1552],0xffffff8f
  407745:	dec    ebp
  407746:	mov    BYTE PTR [ecx+0x5d97cd1],bl
  40774c:	sbb    eax,0xf8b8cf52
  407751:	int    0x22
  407753:	push   esi
  407754:	jns    0x407754
  407756:	mov    esp,0x2c9f93f7
  40775b:	aaa    
  40775c:	add    BYTE PTR [esi-0x1fc223b9],cl
  407762:	and    BYTE PTR [ecx+0x58a0d736],0xb3
  407769:	sar    BYTE PTR [esi],cl
  40776b:	cmp    al,0xc4
  40776d:	push   ebx
  40776e:	jnp    0x407708
  407770:	scas   eax,DWORD PTR es:[edi]
  407771:	pop    esi
  407772:	lea    ebx,[ebp+0x47cf4c80]
  407778:	sub    bl,BYTE PTR ds:0x937271ed
  40777e:	sbb    al,0x37
  407780:	test   DWORD PTR [esi+0x1a77e4c2],edx
  407786:	jbe    0x40774a
  407788:	xchg   BYTE PTR [esi+0x5c816103],ch
  40778e:	fst    DWORD PTR [edx-0x639b74a0]
  407794:	in     al,dx
  407795:	mov    WORD PTR [edx+0x77],ds
  407798:	xchg   bl,ah
  40779a:	adc    ecx,DWORD PTR [eax]
  40779c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40779d:	push   cs
  40779e:	add    bl,BYTE PTR [esi+edx*1-0x46fb3954]
  4077a5:	xor    eax,0xfa7697b7
  4077aa:	adc    eax,0x9b0cf6d1
  4077af:	xor    eax,0x3c67447
  4077b4:	test   DWORD PTR [ecx-0x58420b95],ebp
  4077ba:	and    BYTE PTR [ebp+0x139abdd4],ch
  4077c0:	and    BYTE PTR [edi+0x62],dh
  4077c3:	js     0x40779b
  4077c5:	dec    edx
  4077c6:	fwait
  4077c7:	loop   0x407802
  4077c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ca:	call   0x62542ec
  4077cf:	push   es
  4077d0:	pop    ebp
  4077d1:	mov    ?,WORD PTR [edi+ebx*8]
  4077d4:	mov    dl,BYTE PTR [ebp+0x7c]
  4077d7:	jo     0x407847
  4077d9:	inc    ebx
  4077da:	jmp    0x6a09:0x4a13d40e
  4077e1:	cdq    
  4077e2:	in     al,dx
  4077e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077e4:	fist   DWORD PTR [edx]
  4077e6:	mov    eax,ds:0x635af42f
  4077eb:	push   es
  4077ec:	ja     0x4077e5
  4077ee:	lods   eax,DWORD PTR ds:[esi]
  4077ef:	test   al,0xc6
  4077f1:	push   ecx
  4077f2:	mov    ecx,0x7bd9c998
  4077f7:	test   al,0xb0
  4077f9:	jne    0x4077ca
  4077fb:	xchg   BYTE PTR [edi],bl
  4077fd:	dec    edx
  4077fe:	mov    esp,0x269427f
  407803:	push   ebx
  407804:	gs jae 0x407794
  407807:	mov    esi,0x962b2ee4
  40780c:	adc    bl,dl
  40780e:	jmp    0x103b4311
  407813:	sar    BYTE PTR ds:0x140bfcb2,cl
  407819:	rol    BYTE PTR [ebp+0x47],0xd8
  40781d:	aad    0x68
  40781f:	fwait
  407820:	int3   
  407821:	jmp    0x59b92861
  407826:	inc    edx
  407827:	mov    al,0x6b
  407829:	fwait
  40782a:	push   ss
  40782b:	or     bl,BYTE PTR [edx-0x26b50c0f]
  407831:	mov    dh,0xea
  407833:	pop    esp
  407834:	mov    ch,0x45
  407836:	stos   DWORD PTR es:[edi],eax
  407837:	(bad)  
  407838:	pusha  
  407839:	test   DWORD PTR [eax*4-0x64f2c7ff],edi
  407840:	xchg   ebp,eax
  407841:	push   0x8dd0dc07
  407846:	in     al,0xc6
  407848:	xor    bl,BYTE PTR [esi-0x3d]
  40784b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40784c:	push   ecx
  40784d:	gs aam 0xd8
  407850:	daa    
  407851:	mov    edi,0x4b65f958
  407856:	push   edx
  407857:	mov    edi,0xc2a08d33
  40785c:	ja     0x40782c
  40785e:	sub    esi,DWORD PTR [ecx]
  407860:	stc    
  407861:	xchg   DWORD PTR [ebp-0xbfde94e],esi
  407867:	dec    ecx
  407868:	and    dl,ah
  40786a:	dec    esi
  40786b:	xchg   esi,eax
  40786c:	cmp    eax,0x4722e72e
  407871:	icebp  
  407872:	bound  edx,QWORD PTR [ecx-0x1bc53c47]
  407878:	mov    eax,ds:0xc335edfb
  40787d:	push   eax
  40787e:	sub    DWORD PTR ds:0xc4736349,0xffffffa3
  407885:	jg     0x407856
  407887:	jb     0x40786c
  407889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40788a:	je     0x4078ba
  40788c:	inc    ebx
  40788d:	adc    ah,BYTE PTR [esi]
  40788f:	adc    bh,BYTE PTR [esi-0x9d5ef66]
  407895:	inc    esp
  407896:	aas    
  407897:	fwait
  407898:	add    eax,0xe2d48bb2
  40789d:	icebp  
  40789e:	shl    DWORD PTR [edx],cl
  4078a0:	xor    al,0x27
  4078a2:	mov    bh,0xac
  4078a4:	int3   
  4078a5:	jg     0x407835
  4078a7:	cmp    ebp,DWORD PTR [ecx-0x80]
  4078aa:	lods   al,BYTE PTR ds:[esi]
  4078ab:	push   ebx
  4078ac:	push   eax
  4078ad:	push   esi
  4078ae:	jae    0x407899
  4078b0:	sbb    al,0x51
  4078b2:	je     0x407877
  4078b4:	mov    DWORD PTR [edi-0x54fcdb16],ecx
  4078ba:	fcomp  DWORD PTR [ecx+ebp*4-0x58]
  4078be:	push   eax
  4078bf:	adc    eax,0x495a03c8
  4078c4:	inc    eax
  4078c5:	push   ebx
  4078c6:	sbb    DWORD PTR [esi+0x34],eax
  4078c9:	aas    
  4078ca:	in     al,0x33
  4078cc:	into   
  4078cd:	call   0x7f89:0xcbd0fae0
  4078d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078d5:	xor    edi,DWORD PTR [ecx+0x30]
  4078d8:	xor    ch,al
  4078da:	out    0xa9,eax
  4078dc:	push   ds
  4078dd:	jle    0x407952
  4078df:	pop    ebp
  4078e0:	std    
  4078e1:	sub    BYTE PTR [ecx+edx*4-0x49],0x9d
  4078e6:	outs   dx,BYTE PTR ds:[esi]
  4078e7:	sbb    eax,0xd4ce83cd
  4078ec:	pusha  
  4078ed:	mov    eax,ds:0xd2b5075b
  4078f2:	push   ebx
  4078f3:	nop
  4078f4:	pop    esi
  4078f5:	stos   DWORD PTR es:[edi],eax
  4078f6:	es pop ecx
  4078f8:	mov    ecx,0xd06021ed
  4078fd:	(bad)  
  4078fe:	xor    cl,ch
  407900:	fisttp QWORD PTR ds:0x93968e51
  407906:	sbb    ebp,ebp
  407908:	and    ah,BYTE PTR [edi+0x19]
  40790b:	jne    0x4078ba
  40790d:	test   DWORD PTR [edx],0x1520e9eb
  407913:	push   eax
  407914:	ja     0x4078f4
  407916:	push   edx
  407917:	jnp    0x4078c7
  407919:	jl     0x40790a
  40791b:	adc    eax,0x48472b5c
  407920:	adc    ebx,DWORD PTR [ecx-0xe]
  407923:	ds cs cmc 
  407926:	stc    
  407927:	stos   DWORD PTR es:[edi],eax
  407928:	in     eax,0x39
  40792a:	js     0x407934
  40792c:	push   edi
  40792d:	add    al,0x30
  40792f:	xchg   ebp,eax
  407930:	sub    al,0xc5
  407932:	enter  0x4a3b,0x18
  407936:	xchg   ebp,eax
  407937:	aaa    
  407938:	and    dh,ch
  40793a:	sbb    BYTE PTR [edi+0x3c],cl
  40793d:	jmp    0x40790d
  40793f:	scas   eax,DWORD PTR es:[edi]
  407940:	(bad)  
  407941:	or     al,BYTE PTR [eax-0x37581710]
  407947:	ja     0x407927
  407949:	ret    
  40794a:	sub    al,0x42
  40794c:	jmp    0x6c45:0xb00e3f29
  407953:	cmp    al,0xff
  407955:	pop    edx
  407956:	lods   al,BYTE PTR ds:[esi]
  407957:	ins    BYTE PTR es:[edi],dx
  407958:	(bad)  [esi-0x31]
  40795b:	bound  eax,QWORD PTR [ebx-0x6bbf0072]
  407961:	push   ebx
  407962:	fist   WORD PTR [ecx+ebp*2-0x2d]
  407966:	add    ch,bl
  407968:	lods   al,BYTE PTR ds:[esi]
  407969:	add    al,0xe5
  40796b:	dec    ecx
  40796c:	adc    DWORD PTR [edx-0x6c],ecx
  40796f:	mov    eax,ds:0xe38ede6f
  407974:	ret    0x1c74
  407977:	scas   al,BYTE PTR es:[edi]
  407978:	popf   
  407979:	fs es icebp 
  40797c:	pop    edi
  40797d:	adc    edx,DWORD PTR [edi-0x13]
  407980:	nop
  407981:	ins    DWORD PTR es:[edi],dx
  407982:	jge    0x407955
  407984:	mov    edx,0x5b397bb7
  407989:	pop    ss
  40798a:	lods   eax,DWORD PTR ds:[esi]
  40798b:	push   ebx
  40798c:	gs pop es
  40798e:	jmp    0x1d9:0xf8113fe
  407995:	(bad)  
  407997:	sub    al,0xcd
  407999:	mov    esp,ebx
  40799b:	jle    0x4079cd
  40799d:	xchg   ebp,eax
  40799e:	mov    cl,0x21
  4079a0:	xor    al,0xf7
  4079a2:	lods   eax,DWORD PTR ds:[esi]
  4079a3:	out    dx,al
  4079a4:	cs add cl,ch
  4079a7:	inc    esi
  4079a8:	jns    0x4079a5
  4079aa:	mov    eax,ds:0x87215d7b
  4079af:	leave  
  4079b0:	test   DWORD PTR es:[edx],0xcc806bf7
  4079b7:	repz test DWORD PTR [ebp+0x1ae73b0f],edx
  4079be:	push   esp
  4079bf:	mov    eax,ds:0xc7fd51bb
  4079c4:	jno    0x407997
  4079c6:	loop   0x4079e3
  4079c8:	xlat   BYTE PTR ds:[ebx]
  4079c9:	xor    DWORD PTR [eax],eax
  4079cb:	lds    ebp,FWORD PTR [edi+eiz*2]
  4079ce:	retf   
  4079cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079d0:	adc    esi,esi
  4079d2:	mov    dh,0x50
  4079d4:	scas   eax,DWORD PTR es:[edi]
  4079d5:	adc    ebx,ebp
  4079d7:	mov    ds:0x5616e67c,eax
  4079dc:	jge    0x4079a9
  4079de:	sbb    al,0xe6
  4079e0:	sar    DWORD PTR [ebp+0x25],1
  4079e3:	iret   
  4079e4:	inc    ebx
  4079e5:	mov    dl,0xd4
  4079e7:	loopne 0x40798c
  4079e9:	cmp    al,0x66
  4079eb:	push   cs
  4079ec:	data16 test al,0x42
  4079ef:	cmc    
  4079f0:	dec    esp
  4079f1:	sub    al,BYTE PTR [edx+0x64e33ca]
  4079f7:	fmulp  st(7),st
  4079f9:	push   esi
  4079fa:	sub    bh,dh
  4079fc:	sub    al,0x7
  4079fe:	mov    dh,0xcf
  407a00:	data16 mov ds:0x515db4c2,al
  407a06:	pushf  
  407a07:	fild   QWORD PTR [edx]
  407a09:	inc    ebx
  407a0a:	inc    ebx
  407a0b:	iret   
  407a0c:	push   0xb75a2465
  407a11:	test   eax,0x97d60b97
  407a16:	test   BYTE PTR [edi-0x1c],bh
  407a19:	cdq    
  407a1a:	gs ins DWORD PTR es:[edi],dx
  407a1c:	hlt    
  407a1d:	out    0xf0,al
  407a1f:	repnz mov edx,0x5bc5f83
  407a25:	sub    eax,DWORD PTR [eax]
  407a27:	nop
  407a28:	iret   
  407a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a2a:	(bad)  [ebx+0x65df687a]
  407a30:	test   eax,0x4f4ec5bf
  407a35:	mov    dh,0xbe
  407a37:	hlt    
  407a38:	stos   BYTE PTR es:[edi],al
  407a39:	cs (bad) 
  407a3b:	lock inc ebp
  407a3d:	cmp    DWORD PTR [esi-0xa0b56dc],ecx
  407a43:	in     eax,dx
  407a44:	(bad)  
  407a45:	push   cs
  407a46:	or     esi,DWORD PTR [ebx]
  407a48:	out    dx,eax
  407a49:	dec    ecx
  407a4a:	repnz sar DWORD PTR [ecx],0xbc
  407a4e:	loope  0x407a30
  407a50:	jne    0x4079f1
  407a52:	imul   edx,DWORD PTR [edi-0x44],0x15
  407a56:	pop    esp
  407a57:	int3   
  407a58:	hlt    
  407a59:	adc    al,0x53
  407a5b:	ret    
  407a5c:	repz sub BYTE PTR [edx+ecx*1-0x6d749d81],cl
  407a64:	inc    edx
  407a65:	arpl   WORD PTR [edi],cx
  407a67:	jmp    0xc25cde5
  407a6c:	mov    ch,0x7
  407a6e:	add    ecx,DWORD PTR [eax]
  407a70:	lds    ebp,FWORD PTR [eax-0x18]
  407a73:	sbb    ecx,0x4c5ddb38
  407a79:	ret    
  407a7a:	xor    eax,0x9a079e8c
  407a7f:	jp     0x407a38
  407a81:	sahf   
  407a82:	xchg   ecx,eax
  407a83:	out    dx,eax
  407a84:	add    ch,BYTE PTR [ecx]
  407a86:	and    eax,0x84ed4b31
  407a8b:	ja     0x407afd
  407a8d:	test   BYTE PTR [ebx-0x7a],dh
  407a90:	pop    ecx
  407a91:	push   edx
  407a92:	xor    BYTE PTR [ebx-0x57],al
  407a95:	outs   dx,DWORD PTR ds:[esi]
  407a96:	mov    WORD PTR [edi],es
  407a98:	push   es
  407a99:	outs   dx,DWORD PTR ds:[esi]
  407a9a:	imul   edi,edx,0x3c
  407a9d:	cmp    BYTE PTR [ebx-0x5d],bh
  407aa0:	aas    
  407aa1:	iret   
  407aa2:	jnp    0x407ac5
  407aa4:	imul   BYTE PTR [eax+0x63c64d2]
  407aaa:	(bad)  
  407aab:	loop   0x407a35
  407aad:	and    BYTE PTR [ecx+0x76],cl
  407ab0:	dec    eax
  407ab1:	sub    ah,BYTE PTR [esi]
  407ab3:	cdq    
  407ab4:	sub    BYTE PTR [ecx],bh
  407ab6:	cwde   
  407ab7:	test   eax,0x635cd27e
  407abc:	adc    edx,DWORD PTR [esi+0x428dc4ed]
  407ac2:	aam    0x35
  407ac4:	and    cl,bl
  407ac6:	add    ebx,DWORD PTR [eax-0x53]
  407ac9:	cld    
  407aca:	mov    ds:0x4b04ae1f,al
  407acf:	nop
  407ad0:	xor    bl,cl
  407ad2:	jl     0x407af7
  407ad4:	shr    DWORD PTR gs:[esi+0x1c213b7a],0x9
  407adc:	test   BYTE PTR [eax+0x7],cl
  407adf:	cwde   
  407ae0:	or     esi,esp
  407ae2:	out    dx,eax
  407ae3:	xor    dh,dh
  407ae5:	pop    ds
  407ae6:	fsub   QWORD PTR [esi-0xb]
  407ae9:	sbb    al,0x5f
  407aeb:	xchg   ebx,eax
  407aec:	pop    edi
  407aed:	mul    BYTE PTR fs:[ecx]
  407af0:	test   BYTE PTR [eax+0x50],cl
  407af3:	(bad)  
  407af4:	popa   
  407af5:	in     al,dx
  407af6:	ja     0x407a97
  407af8:	icebp  
  407af9:	sub    ebp,DWORD PTR [eax]
  407afb:	mov    edx,0x86d4e9c9
  407b00:	shl    BYTE PTR [edx+0x457c214e],0xc4
  407b07:	add    BYTE PTR [edx],al
  407b09:	data16 clc 
  407b0b:	imul   esp,DWORD PTR [eax+0x20ab9e73],0xffffffa8
  407b12:	sbb    eax,0x9ff65bf8
  407b17:	ret    
  407b18:	lea    edx,[edi+0x17ef8a94]
  407b1e:	(bad)  
  407b1f:	lea    esi,[ecx-0x1b03007]
  407b25:	cs mov ebx,0xf0e67ab2
  407b2b:	cmp    al,0xc1
  407b2d:	(bad)  
  407b2e:	mov    bl,0x61
  407b30:	pop    ebp
  407b31:	push   0x3a
  407b33:	inc    edi
  407b34:	fimul  DWORD PTR [ebx-0x3bd058ac]
  407b3a:	cmp    ch,BYTE PTR [esi]
  407b3c:	int    0xca
  407b3e:	sbb    eax,0x47aa9a75
  407b43:	popf   
  407b44:	jge    0x407b0a
  407b46:	mov    eax,ds:0xcee2d0a7
  407b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b4c:	(bad)  
  407b4d:	pusha  
  407b4e:	mov    bh,0x2d
  407b50:	ja     0x407ae4
  407b52:	or     edx,esi
  407b54:	adc    eax,0x912cd629
  407b59:	jbe    0x407b49
  407b5b:	and    al,0x41
  407b5d:	adc    al,BYTE PTR [ebp-0x56a5da7e]
  407b63:	or     esp,0x4
  407b66:	adc    DWORD PTR [ebx+ecx*4+0x65],edi
  407b6a:	pop    ebp
  407b6b:	jo     0x407b74
  407b6d:	jne    0x407b50
  407b6f:	xchg   esp,eax
  407b70:	adc    al,0xcd
  407b72:	mov    esi,0x56a45363
  407b77:	das    
  407b78:	imul   ch
  407b7a:	stos   BYTE PTR es:[edi],al
  407b7b:	pop    edi
  407b7c:	loope  0x407b69
  407b7e:	and    eax,0xbb17c37f
  407b83:	pop    ds
  407b84:	mov    edi,0x23dab4b2
  407b89:	jg     0x407b39
  407b8b:	sti    
  407b8c:	cdq    
  407b8d:	push   esp
  407b8e:	retf   0x3c9b
  407b91:	xor    dl,BYTE PTR [esi-0x4a]
  407b94:	test   eax,0x421d7ca5
  407b99:	stos   BYTE PTR es:[edi],al
  407b9a:	enter  0xb675,0x2e
  407b9e:	js     0x407c16
  407ba0:	jecxz  0x407b36
  407ba2:	cld    
  407ba3:	data16 lock sub al,0x8f
  407ba7:	pop    esp
  407ba8:	out    0x91,al
  407baa:	sub    ah,dh
  407bac:	imul   ebp,DWORD PTR [esi],0xfffffff3
  407baf:	or     BYTE PTR [edx-0x3d],0xf8
  407bb3:	std    
  407bb4:	scas   al,BYTE PTR es:[edi]
  407bb5:	dec    edi
  407bb6:	rcl    BYTE PTR [ecx+0x41],1
  407bb9:	shr    DWORD PTR [esi-0x5b20a43a],cl
  407bbf:	mov    BYTE PTR [eax],ch
  407bc1:	pop    edi
  407bc2:	push   0xaf58bb2b
  407bc7:	ja     0x407bf2
  407bc9:	int3   
  407bca:	(bad)  
  407bcb:	in     eax,0x38
  407bcd:	(bad)  
  407bce:	fsubr  QWORD PTR [edi]
  407bd0:	xchg   esi,eax
  407bd1:	sahf   
  407bd2:	(bad)  
  407bd3:	in     eax,0x95
  407bd5:	add    esp,DWORD PTR [edx+0x1b22453b]
  407bdb:	cli    
  407bdc:	jbe    0x407bfe
  407bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bdf:	cdq    
  407be0:	rcl    BYTE PTR [esi-0x19],cl
  407be3:	mov    ecx,0x45c6f1bc
  407be8:	and    cl,cl
  407bea:	lds    esp,FWORD PTR [ebx+esi*8]
  407bed:	dec    edi
  407bee:	test   BYTE PTR [esi],al
  407bf0:	mov    ebp,eax
  407bf2:	xor    al,0x18
  407bf4:	jmp    0x8d61:0x43a7a0
  407bfb:	imul   esi,DWORD PTR [esi],0xfffffffb
  407bfe:	dec    ebx
  407bff:	jne    0x407bd5
  407c01:	mov    cl,0x49
  407c03:	mov    WORD PTR [ebp+eax*4-0x61],fs
  407c07:	ins    BYTE PTR es:[edi],dx
  407c08:	inc    edi
  407c09:	sbb    al,0xaa
  407c0b:	fcom   QWORD PTR [edi-0x5ef2c988]
  407c11:	ret    
  407c12:	icebp  
  407c13:	mov    ch,0x86
  407c15:	sub    BYTE PTR [esi-0x15c01e15],al
  407c1b:	adc    BYTE PTR [edi-0x615b808f],cl
  407c21:	aad    0xb6
  407c23:	mov    WORD PTR [edi],cs
  407c25:	xchg   esp,eax
  407c26:	add    al,0xf0
  407c28:	mov    ebx,0xec9249e0
  407c2e:	mov    bl,BYTE PTR [ecx]
  407c30:	xchg   edi,eax
  407c31:	dec    esi
  407c32:	ins    BYTE PTR es:[edi],dx
  407c33:	shl    BYTE PTR [edx-0x65fe2e3a],1
  407c39:	add    dl,bh
  407c3b:	popf   
  407c3c:	(bad)  
  407c3e:	cmp    al,0x62
  407c40:	xor    DWORD PTR [ebx-0x7a32f039],0xfffffff4
  407c47:	call   0xa64:0x62ad26a1
  407c4e:	dec    ebx
  407c4f:	test   eax,0x748c401c
  407c54:	jmp    0xef6f8727
  407c59:	and    DWORD PTR [eax-0x10f806d2],eax
  407c5f:	cwde   
  407c60:	enter  0x1a5d,0x4
  407c64:	xor    eax,DWORD PTR [ebp+edx*1-0x5998729e]
  407c6b:	push   eax
  407c6c:	add    dl,0xcd
  407c6f:	mov    eax,0x42bf26fa
  407c74:	cs jl  0x407c8f
  407c77:	push   ebx
  407c78:	test   al,0x53
  407c7a:	int3   
  407c7b:	js     0x407ced
  407c7d:	retf   
  407c7e:	push   edx
  407c7f:	xchg   BYTE PTR [ebp-0x60],ch
  407c82:	cmc    
  407c83:	popf   
  407c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c85:	sbb    BYTE PTR [edx+0x555b94db],dl
  407c8b:	push   ebx
  407c8c:	and    BYTE PTR gs:[ecx],bh
  407c8f:	(bad)  
  407c90:	push   ebp
  407c91:	retf   0x54cc
  407c94:	sub    ebp,ebx
  407c96:	arpl   WORD PTR [ecx-0x7e],dx
  407c99:	push   0x25
  407c9b:	in     al,dx
  407c9c:	scas   eax,DWORD PTR es:[edi]
  407c9d:	ja     0x407cb7
  407c9f:	mov    ds:0x509cb7e7,eax
  407ca4:	jnp    0x407cda
  407ca6:	cld    
  407ca7:	mov    BYTE PTR [edi-0x5cbfd912],dh
  407cad:	sbb    eax,DWORD PTR [edx+esi*8+0x70b0d648]
  407cb4:	stc    
  407cb5:	pop    ebp
  407cb6:	test   BYTE PTR [ebx],al
  407cb8:	sbb    ebp,ecx
  407cba:	in     al,0x98
  407cbc:	or     eax,0x50d3a455
  407cc1:	pusha  
  407cc2:	pop    ss
  407cc3:	not    BYTE PTR [ebx+0x62]
  407cc6:	and    BYTE PTR [eax+0x5c216793],cl
  407ccc:	fmul   QWORD PTR [eax]
  407cce:	add    DWORD PTR [eax-0x1650af5f],esp
  407cd4:	fidiv  DWORD PTR [ebp+0x4d]
  407cd7:	pop    edi
  407cd8:	pop    ebx
  407cd9:	cs (bad) 
  407cdb:	stc    
  407cdc:	fwait
  407cdd:	mov    ebp,0x45e65767
  407ce2:	(bad)  [ebx+0xe]
  407ce5:	push   edx
  407ce6:	inc    edi
  407ce7:	shl    BYTE PTR [eax+0x5b1dc740],cl
  407ced:	xchg   ecx,eax
  407cee:	sub    eax,0x45abeabe
  407cf3:	pop    ebx
  407cf4:	mov    ch,0x74
  407cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf7:	out    0xa0,al
  407cf9:	jle    0x407d0e
  407cfb:	icebp  
  407cfc:	(bad)  [ebx]
  407cfe:	lds    ecx,FWORD PTR [eax-0xa1b8136]
  407d04:	cmp    edx,DWORD PTR [eax+eiz*2]
  407d07:	sub    ah,BYTE PTR [ebp+0x3b]
  407d0a:	inc    esi
  407d0b:	fist   WORD PTR [ebx+0x18008991]
  407d11:	mov    ds:0xf3d581b8,al
  407d16:	add    eax,0x703b7f54
  407d1b:	sahf   
  407d1c:	scas   eax,DWORD PTR es:[edi]
  407d1d:	(bad)  
  407d1f:	xor    eax,0xafa236ba
  407d24:	das    
  407d25:	sub    bl,BYTE PTR [ecx-0xd]
  407d28:	mov    bl,0x2e
  407d2a:	sub    bh,BYTE PTR [edi]
  407d2c:	pop    eax
  407d2d:	mov    dh,0xf9
  407d2f:	and    al,0x32
  407d31:	pop    esp
  407d32:	fdivr  DWORD PTR ds:0x481baa49
  407d38:	push   esp
  407d39:	jo     0x407d10
  407d3b:	enter  0x6660,0xab
  407d3f:	leave  
  407d40:	out    dx,al
  407d41:	nop
  407d42:	xchg   BYTE PTR [edx+edx*8+0x32],dh
  407d46:	fiadd  WORD PTR [ebx-0x15]
  407d49:	loop   0x407d14
  407d4b:	jns    0x407cda
  407d4d:	shr    DWORD PTR [ebp+0x40b05e],cl
  407d53:	sbb    ch,ah
  407d55:	ret    0x9bee
  407d58:	xchg   ebx,eax
  407d59:	sbb    al,0xa2
  407d5b:	xor    esi,DWORD PTR [edx+0x4e]
  407d5e:	adc    al,0x7
  407d60:	add    eax,0xa74dff2f
  407d65:	sbb    DWORD PTR [ebx-0x8],esp
  407d68:	mov    eax,ds:0xf70f94e9
  407d6d:	call   0xc937dbe1
  407d72:	mov    ebp,0x944a2ad1
  407d77:	inc    esi
  407d78:	aam    0xa8
  407d7a:	pop    DWORD PTR [ecx+0x77]
  407d7d:	repnz lahf 
  407d7f:	adc    al,0xf5
  407d81:	leave  
  407d82:	pop    eax
  407d83:	(bad)  
  407d85:	push   ebx
  407d86:	adc    esp,DWORD PTR [esi+0x70]
  407d89:	arpl   cx,si
  407d8b:	or     BYTE PTR ds:0x3e10f096,dl
  407d91:	mov    dl,0xa4
  407d93:	lahf   
  407d94:	xchg   DWORD PTR [esi],ecx
  407d96:	lds    edi,FWORD PTR [ecx+0x28b54c03]
  407d9c:	sbb    DWORD PTR [ebp+0x31a9ba5f],edx
  407da2:	jmp    0x407de3
  407da4:	inc    eax
  407da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da6:	mov    ebp,0x1ee93d38
  407dab:	mov    ah,0x4
  407dad:	add    bh,al
  407daf:	iret   
  407db0:	dec    BYTE PTR [esi+0x36]
  407db3:	mov    ds:0xb0e51ab7,al
  407db8:	xchg   BYTE PTR es:[ebx],ch
  407dbb:	inc    ecx
  407dbc:	cdq    
  407dbd:	jno    0x407e09
  407dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dc0:	push   ebx
  407dc1:	iret   
  407dc2:	jmp    0x4d1aa95c
  407dc7:	xor    edx,DWORD PTR [edx+ecx*2-0x57e8301f]
  407dce:	inc    eax
  407dcf:	(bad)  
  407dd0:	jne    0x407e45
  407dd2:	push   ss
  407dd3:	xor    BYTE PTR [esi],0xf2
  407dd6:	pop    ecx
  407dd7:	repz mov esp,0x43e29e77
  407ddd:	ret    
  407dde:	jmp    0xb418c98e
  407de3:	neg    edi
  407de5:	or     ch,al
  407de7:	or     al,0x78
  407de9:	mov    ch,0xb3
  407deb:	popf   
  407dec:	adc    al,0xfd
  407dee:	mov    ds:0xff293e23,eax
  407df3:	sbb    eax,0x10e3d5cd
  407df8:	pushf  
  407df9:	xor    eax,0x90d40aff
  407dfe:	stos   BYTE PTR es:[edi],al
  407dff:	fcomp  QWORD PTR [esi+edi*2]
  407e02:	jae    0x407dee
  407e04:	sub    dl,BYTE PTR [esi+0x4d]
  407e07:	fisubr WORD PTR [ebx+ecx*8+0x2951a00f]
  407e0e:	dec    dh
  407e10:	out    dx,al
  407e11:	outs   dx,DWORD PTR ds:[esi]
  407e12:	int    0x21
  407e14:	icebp  
  407e15:	or     al,0x4d
  407e17:	adc    bl,BYTE PTR [edi+edi*2]
  407e1a:	scas   eax,DWORD PTR es:[edi]
  407e1b:	push   ds
  407e1c:	ret    0x19a7
  407e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e20:	sub    eax,0xae2e631b
  407e25:	jge    0x407e4e
  407e27:	inc    eax
  407e28:	pushf  
  407e29:	and    eax,0x50cbd144
  407e2e:	and    bh,BYTE PTR [ebx+0x6ab665fa]
  407e34:	rcl    DWORD PTR [ebx-0x6d],cl
  407e37:	fldz   
  407e39:	xchg   edx,eax
  407e3a:	mov    dl,0x29
  407e3c:	dec    edx
  407e3d:	mov    DWORD PTR [eax-0x2e58b541],eax
  407e43:	sti    
  407e44:	(bad)  
  407e45:	call   0xb44:0xe94d07bb
  407e4c:	in     eax,0xbd
  407e4e:	sbb    edx,edx
  407e50:	div    BYTE PTR [edx]
  407e52:	push   0xffffffa0
  407e54:	test   DWORD PTR [ebp-0x205c1679],ebx
  407e5a:	fwait
  407e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e5c:	xchg   ebx,eax
  407e5d:	and    eax,0x7b7a986c
  407e62:	push   ds
  407e63:	test   DWORD PTR [ecx],0x8ccd2b02
  407e69:	in     al,dx
  407e6a:	xor    DWORD PTR [ebp-0x6a],ebx
  407e6d:	loope  0x407ea8
  407e6f:	pop    ecx
  407e70:	dec    esp
  407e71:	xchg   edx,eax
  407e72:	bound  esp,QWORD PTR [edx]
  407e74:	mov    ds:0x5d21e8fe,eax
  407e79:	sbb    eax,0x6f8f6bbb
  407e7e:	ja     0x407ee0
  407e80:	dec    eax
  407e81:	jl     0x407ed0
  407e83:	cdq    
  407e84:	fmulp  st(6),st
  407e86:	sub    ebp,DWORD PTR [ecx]
  407e88:	jo     0x407ec9
  407e8a:	mov    eax,ds:0x82467a0b
  407e8f:	push   ds
  407e90:	cmc    
  407e91:	mov    dh,0x41
  407e93:	into   
  407e94:	xor    eax,0x5add4026
  407e99:	aad    0xbc
  407e9b:	jb     0x407e7a
  407e9d:	and    al,0xa4
  407e9f:	mov    DWORD PTR [ecx-0x1d],ebx
  407ea2:	dec    eax
  407ea3:	dec    edx
  407ea4:	dec    ebp
  407ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ea6:	ins    DWORD PTR es:[edi],dx
  407ea7:	and    DWORD PTR [edx*8-0x75f69bf],eax
  407eae:	xor    eax,0xee2852fd
  407eb3:	in     eax,dx
  407eb4:	adc    ecx,esi
  407eb6:	pop    es
  407eb7:	int3   
  407eb8:	mov    bh,0xfe
  407eba:	or     edi,DWORD PTR [ecx-0x2ff6456b]
  407ec0:	sbb    esp,DWORD PTR [edx]
  407ec2:	dec    esp
  407ec3:	fs daa 
  407ec5:	fdiv   st,st(6)
  407ec7:	sti    
  407ec8:	add    edx,DWORD PTR [ebx]
  407eca:	popf   
  407ecb:	xor    al,al
  407ecd:	xchg   esp,eax
  407ece:	loope  0x407e80
  407ed0:	test   BYTE PTR [eax+eiz*1-0x48],al
  407ed4:	cmp    eax,0x6d1f606a
  407ed9:	neg    BYTE PTR ds:0x7dae1a60
  407edf:	(bad)  
  407ee0:	mov    ?,WORD PTR [esi-0x5d]
  407ee3:	sbb    esi,DWORD PTR [edx+0x33]
  407ee6:	test   eax,0x7d03008a
  407eeb:	int    0x10
  407eed:	sahf   
  407eee:	and    DWORD PTR [edx+eax*8+0x3a637751],esp
  407ef5:	in     eax,dx
  407ef6:	(bad)  
  407ef7:	iret   
  407ef8:	out    dx,al
  407ef9:	and    al,0xc4
  407efb:	into   
  407efc:	std    
  407efd:	pop    eax
  407efe:	aaa    
  407eff:	sub    ah,al
  407f01:	sbb    DWORD PTR [edi-0x7b],edi
  407f04:	retf   
  407f05:	sbb    al,0xf2
  407f07:	or     BYTE PTR [ebp-0x5d],ch
  407f0a:	xchg   edx,eax
  407f0b:	in     al,dx
  407f0c:	jmp    0xd6b78311
  407f11:	dec    ebp
  407f12:	mov    eax,esp
  407f14:	jg     0x407ed7
  407f16:	mov    ds:0x544e4908,eax
  407f1b:	pop    ecx
  407f1c:	inc    ebp
  407f1d:	rol    DWORD PTR [eax],0xe3
  407f20:	adc    al,0xdd
  407f22:	repnz sar BYTE PTR [ecx-0x2e],cl
  407f26:	sub    al,0xd2
  407f28:	sti    
  407f29:	or     eax,0xaabff5bd
  407f2e:	or     DWORD PTR [edx+eax*8-0x17],esi
  407f32:	lods   al,BYTE PTR ds:[esi]
  407f33:	sub    eax,0xb2e432b9
  407f38:	or     al,0x1e
  407f3a:	adc    DWORD PTR [ebx],ecx
  407f3c:	mov    dh,0x18
  407f3e:	ret    
  407f3f:	or     ebx,esp
  407f41:	cmp    eax,0x1c9adc07
  407f46:	add    eax,0x42375350
  407f4b:	mov    esp,0xad59696f
  407f50:	les    ebp,FWORD PTR [ecx-0x1]
  407f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f54:	out    dx,al
  407f55:	in     al,dx
  407f56:	sbb    esi,DWORD PTR [ebx-0x44]
  407f59:	xlat   BYTE PTR ds:[ebx]
  407f5a:	sbb    ebx,DWORD PTR [ebp-0x42db4c85]
  407f60:	dec    eax
  407f61:	sbb    DWORD PTR [ecx+0x6f8474c3],eax
  407f67:	push   esp
  407f68:	mov    DWORD PTR [ebx],edi
  407f6a:	or     esi,DWORD PTR [edi+0x4b036938]
  407f70:	int3   
  407f71:	mov    esp,0x9a51cd94
  407f76:	nop
  407f77:	mov    BYTE PTR [ebx+0x78],ah
  407f7a:	fisttp WORD PTR [eax+0x76]
  407f7d:	in     eax,0xaf
  407f7f:	push   esp
  407f80:	std    
  407f81:	mov    ch,0xfa
  407f83:	repnz aas 
  407f85:	or     BYTE PTR [ebx+0x33],dl
  407f88:	adc    esi,DWORD PTR [ebx+esi*4+0x1e]
  407f8c:	mov    ah,0x45
  407f8e:	and    DWORD PTR [eax],ebx
  407f90:	fsubp  st(4),st
  407f92:	fimul  WORD PTR [ebp+0x4b]
  407f95:	das    
  407f96:	inc    esp
  407f97:	out    0x4c,eax
  407f99:	cmp    edi,edi
  407f9b:	aas    
  407f9c:	(bad)
  407fa0:	es jo  0x407f42
  407fa3:	or     al,0xb
  407fa5:	jns    0x40800e
  407fa7:	jecxz  0x407f71
  407fa9:	push   ds
  407faa:	rol    DWORD PTR [ebx+0x31],0x60
  407fae:	dec    ecx
  407faf:	bound  ecx,QWORD PTR [ebx-0x1f]
  407fb2:	cvtps2pd xmm6,QWORD PTR [edx-0x12cf5dab]
  407fb9:	dec    esi
  407fba:	jnp    0x407f7f
  407fbc:	lods   al,BYTE PTR ds:[esi]
  407fbd:	repz mov ah,0x22
  407fc0:	popa   
  407fc1:	aas    
  407fc2:	fwait
  407fc3:	test   eax,0x5e84f22d
  407fc8:	and    eax,0xad91d999
  407fcd:	lods   al,BYTE PTR ds:[esi]
  407fce:	or     eax,0x7aaac0e3
  407fd3:	mov    dl,0xb
  407fd5:	or     DWORD PTR [ebp+0x15e68782],edi
  407fdb:	jns    0x407fa8
  407fdd:	xor    DWORD PTR [edi+eiz*4+0x44b06250],edi
  407fe4:	mov    ds:0xd39a34c2,eax
  407fe9:	sbb    al,dl
  407feb:	mov    al,ds:0xfca02e18
  407ff0:	sub    eax,0xc20666c1
  407ff5:	adc    eax,0x97fefecb
  407ffa:	xor    esp,DWORD PTR [ebp+0x19]
  407ffd:	fist   DWORD PTR [eiz*2-0x3af1b921]
  408004:	jl     0x407ff7
  408006:	pop    ss
  408007:	adc    eax,0x46170768
  40800c:	pushf  
  40800d:	mov    BYTE PTR [edi+0x50],dl
  408010:	ins    DWORD PTR es:[edi],dx
  408011:	dec    edx
  408012:	ret    
  408013:	or     eax,0xcb347085
  408018:	pop    esi
  408019:	push   ss
  40801a:	ds jle 0x408089
  40801d:	push   ss
  40801e:	mov    edx,0x4e00a030
  408023:	mov    esi,0xa12fedd1
  408028:	xor    eax,0x6577c65f
  40802d:	test   BYTE PTR [edx],0xd4
  408030:	push   0xef985a16
  408035:	sbb    DWORD PTR [ebx+edx*2],edx
  408038:	push   ds
  408039:	rcl    BYTE PTR [ebp+0x56],cl
  40803c:	add    al,0xce
  40803e:	lock dec edi
  408040:	fldenv [ebx-0x2]
  408043:	imul   ecx,DWORD PTR [ebp+0x0],0x70978d57
  40804a:	dec    edi
  40804b:	xchg   esp,eax
  40804c:	fs dec edi
  40804e:	adc    al,0x91
  408050:	shl    DWORD PTR [esi+0x3eb542eb],cl
  408056:	and    eax,0xd6d96b45
  40805b:	push   ss
  40805c:	sbb    DWORD PTR [ebx+0xd],edi
  40805f:	or     ebp,DWORD PTR [edx]
  408061:	inc    esi
  408062:	cmc    
  408063:	test   eax,0xe7b246aa
  408068:	xchg   esi,eax
  408069:	dec    ebp
  40806a:	xchg   DWORD PTR [ecx-0x60],ebx
  40806d:	test   eax,0xbcbf2499
  408072:	js     0x4080c9
  408074:	not    DWORD PTR [eax+0x2d]
  408077:	outs   dx,BYTE PTR ds:[esi]
  408078:	cmc    
  408079:	push   cs
  40807a:	sub    bl,BYTE PTR [edi+ebp*2-0x75e5a96b]
  408081:	pop    cx
  408083:	cmp    esi,DWORD PTR [eax]
  408085:	nop
  408086:	add    DWORD PTR [edx],eax
  408088:	sbb    BYTE PTR ds:0xb7bd2c65,dh
  40808e:	loop   0x408077
  408090:	pop    edx
  408091:	ror    bh,cl
  408093:	ins    BYTE PTR es:[edi],dx
  408094:	rcr    ebp,0xcf
  408097:	xor    edi,DWORD PTR [esi+0x75]
  40809a:	mov    ebp,0xfb0bcdc
  40809f:	xor    ah,al
  4080a1:	scas   al,BYTE PTR es:[edi]
  4080a2:	imul   esi,DWORD PTR [edi-0x2],0x2706d87d
  4080a9:	sub    DWORD PTR [eax],0x2cd134f3
  4080af:	es imul ecx,esi,0xffffffeb
  4080b3:	mov    dh,0x8a
  4080b5:	retf   
  4080b6:	fnsave [ebx+edx*2-0x72c53005]
  4080bd:	mov    gs,WORD PTR [ebx]
  4080bf:	mov    esi,0xb42f3bce
  4080c4:	and    al,0x22
  4080c6:	sub    bl,BYTE PTR [edi]
  4080c8:	ins    DWORD PTR es:[edi],dx
  4080c9:	jmp    0xc96d:0x4e07a9b2
  4080d0:	sahf   
  4080d1:	xchg   eax,eax
  4080d3:	pusha  
  4080d4:	fcmove st,st(0)
  4080d6:	js     0x40810d
  4080d8:	loop   0x40814b
  4080da:	xchg   ebx,eax
  4080db:	jne    0x408148
  4080dd:	sbb    eax,0x83bac656
  4080e2:	lahf   
  4080e3:	inc    esi
  4080e4:	mov    ds:0x722c01b4,al
  4080e9:	mov    esi,0x205b1538
  4080ee:	add    BYTE PTR [ebx-0x4e],bh
  4080f1:	(bad)  
  4080f2:	cdq    
  4080f3:	mov    bh,0x79
  4080f5:	inc    esi
  4080f6:	imul   ecx,DWORD PTR [ebx],0xa8cbde1e
  4080fc:	or     esi,DWORD PTR [edx+0x5d]
  4080ff:	or     dl,BYTE PTR [eax+0x793bb4d9]
  408105:	shl    BYTE PTR [edi-0x64],1
  408108:	add    al,0xa
  40810a:	fldenv [ecx-0x2c]
  40810d:	or     BYTE PTR [edi],bh
  40810f:	xor    BYTE PTR [eax-0x50061824],cl
  408115:	inc    edi
  408116:	adc    BYTE PTR [edx+0x1b1817c2],dl
  40811c:	sub    al,0x7
  40811e:	das    
  40811f:	in     eax,0xad
  408121:	mov    dh,ah
  408123:	adc    dl,BYTE PTR [eax+edi*1+0x7531221b]
  40812a:	cwde   
  40812b:	bound  edx,QWORD PTR [edi+eax*1+0x4f9bc985]
  408132:	(bad)  
  408133:	aad    0xe1
  408135:	pop    edi
  408136:	dec    ebx
  408137:	add    al,0xf5
  408139:	lods   al,BYTE PTR ds:[esi]
  40813a:	or     al,BYTE PTR [edi+0x1af8a100]
  408140:	js     0x4080de
  408142:	std    
  408143:	dec    ebp
  408144:	sub    DWORD PTR [ebx],esi
  408146:	(bad)  
  408147:	xlat   BYTE PTR ds:[ebx]
  408148:	mov    esi,0xeb5f9fb3
  40814d:	and    eax,0x4a7054ed
  408152:	inc    edi
  408153:	test   al,0xde
  408155:	add    BYTE PTR [ecx],cl
  408157:	add    eax,0xd150c8f
  40815c:	mov    bl,0x3
  40815e:	mov    cl,0xd5
  408160:	ins    DWORD PTR es:[edi],dx
  408161:	std    
  408162:	inc    esi
  408163:	gs pop edx
  408165:	rol    BYTE PTR [esi-0x15c00ee2],cl
  40816b:	inc    ebp
  40816c:	push   ebp
  40816d:	lock or DWORD PTR [ebx+0x6f],0xffffffd2
  408172:	inc    esp
  408173:	or     BYTE PTR fs:[ecx],al
  408176:	cmp    BYTE PTR [edx+0x144ca30b],cl
  40817c:	push   esi
  40817d:	scas   eax,DWORD PTR es:[edi]
  40817e:	push   0xffffff93
  408180:	and    BYTE PTR [ebp+0x84e8e6],ah
  408186:	pop    ecx
  408187:	mov    esi,0xfd2cd672
  40818c:	(bad)  [eax-0x4677ce5a]
  408192:	fdivr  QWORD PTR [esi+0x34]
  408195:	data16 aam 0x36
  408198:	cmp    BYTE PTR [esi],dl
  40819a:	test   eax,0xf0f7332e
  40819f:	sub    ch,ch
  4081a1:	jae    0x4081c7
  4081a3:	xor    al,0x57
  4081a5:	xchg   ebx,eax
  4081a6:	dec    esp
  4081a7:	and    esi,DWORD PTR [ecx+eiz*1+0x18]
  4081ab:	retf   
  4081ac:	daa    
  4081ad:	cmp    al,0xd3
  4081af:	push   edi
  4081b0:	aad    0xe0
  4081b2:	pop    edi
  4081b3:	je     0x4081ed
  4081b5:	fidiv  DWORD PTR [esi-0x8]
  4081b8:	iret   
  4081b9:	and    eax,0xebd5ab23
  4081be:	lahf   
  4081bf:	(bad)  
  4081c0:	cmp    eax,0x285da3dd
  4081c5:	sbb    ebp,DWORD PTR [ebx+0x428c9a1e]
  4081cb:	data16 xor cl,BYTE PTR [ecx-0x5e]
  4081cf:	div    bl
  4081d1:	ins    DWORD PTR es:[edi],dx
  4081d2:	dec    ebx
  4081d3:	cmp    BYTE PTR [eax-0xa610562],bh
  4081d9:	add    BYTE PTR [ecx+0x358e4d01],0xf7
  4081e0:	inc    esp
  4081e1:	sub    DWORD PTR [eax],esp
  4081e3:	out    dx,eax
  4081e4:	dec    esp
  4081e5:	in     al,0x7f
  4081e7:	mov    edx,DWORD PTR [edi]
  4081e9:	loop   0x40821c
  4081eb:	xchg   esp,eax
  4081ec:	jno    0x4081a9
  4081ee:	and    ecx,DWORD PTR [ebp+0x73]
  4081f1:	stos   DWORD PTR es:[edi],eax
  4081f2:	pop    es
  4081f3:	and    ah,bh
  4081f5:	popf   
  4081f6:	es (bad) 
  4081f8:	xchg   esp,eax
  4081f9:	not    BYTE PTR [ecx]
  4081fb:	outs   dx,BYTE PTR ds:[esi]
  4081fc:	jbe    0x4081ba
  4081fe:	adc    DWORD PTR [ecx-0x7f],0xf0a2e3d0
  408205:	lahf   
  408206:	(bad)  
  408207:	and    edx,edi
  408209:	shr    BYTE PTR [ecx-0x5f],cl
  40820c:	iret   
  40820d:	sub    bl,ch
  40820f:	ja     0x40819f
  408211:	leave  
  408212:	mov    bl,0xea
  408214:	sub    DWORD PTR [edx-0x25],ecx
  408217:	(bad)  
  408218:	jmp    0xf7bd:0xed6338ce
  40821f:	imul   DWORD PTR [ebp-0x69]
  408222:	jo     0x408278
  408224:	out    dx,eax
  408225:	mov    esp,0x17c7fa6c
  40822a:	push   cs
  40822b:	sbb    al,0xa4
  40822d:	sbb    BYTE PTR [esi],0xb1
  408230:	data16 xor al,BYTE PTR [ebx]
  408233:	mov    bl,0x13
  408235:	call   0x258e:0x5329765e
  40823c:	xchg   ebx,eax
  40823d:	sbb    dl,BYTE PTR [ecx+eiz*4]
  408240:	push   esp
  408241:	jae    0x4081d5
  408243:	fwait
  408244:	scas   eax,DWORD PTR es:[edi]
  408245:	cmc    
  408246:	imul   eax,eax,0x60
  408249:	rcr    BYTE PTR [ebx],0x63
  40824c:	adc    al,0xda
  40824e:	cwde   
  40824f:	mov    al,0xd8
  408251:	jns    0x40826d
  408253:	sub    BYTE PTR [ecx+0x7002aee8],bh
  408259:	out    dx,eax
  40825a:	lock mov ch,0xc9
  40825d:	cmp    DWORD PTR [ebx],esp
  40825f:	dec    edi
  408260:	and    BYTE PTR [edi],ah
  408262:	mov    eax,0x1f2df99d
  408267:	xchg   esp,eax
  408268:	icebp  
  408269:	stc    
  40826a:	adc    eax,0x55
  40826d:	xchg   edx,edi
  40826f:	out    0x0,eax
  408271:	push   0x435090ba
  408276:	cmp    bh,BYTE PTR [eax+ebp*8+0x52b9da2]
  40827d:	les    ebx,FWORD PTR [ebx+0x4a8dfa39]
  408283:	mov    ch,0x39
  408285:	xchg   DWORD PTR [edi],edx
  408287:	stos   DWORD PTR es:[edi],eax
  408288:	adc    dl,ch
  40828a:	scas   al,BYTE PTR es:[edi]
  40828b:	xlat   BYTE PTR ds:[ebx]
  40828c:	jbe    0x408308
  40828e:	jbe    0x408294
  408290:	cmc    
  408291:	push   esi
  408292:	cli    
  408293:	mov    eax,0x21f6ea4d
  408298:	xchg   edx,ebp
  40829a:	es ret 
  40829c:	jg     0x40826b
  40829e:	daa    
  40829f:	test   DWORD PTR [esi],edx
  4082a1:	push   eax
  4082a2:	in     eax,0xe8
  4082a4:	xor    al,0xf7
  4082a6:	shl    BYTE PTR [ebx+0x25098c10],1
  4082ac:	and    esi,DWORD PTR [esp+edx*1+0x2]
  4082b0:	pusha  
  4082b1:	retf   0x494c
  4082b4:	or     DWORD PTR [ecx-0x69cd2e51],ecx
  4082ba:	mov    ch,BYTE PTR [ebx-0x160b5bd]
  4082c0:	fcomp  DWORD PTR [ebp+0x51]
  4082c3:	cmp    bh,BYTE PTR [ecx-0x30]
  4082c6:	cwde   
  4082c7:	and    al,0x8c
  4082c9:	inc    ecx
  4082ca:	xchg   esp,eax
  4082cb:	aam    0x9
  4082cd:	sti    
  4082ce:	inc    BYTE PTR [eax-0x42d32c04]
  4082d4:	in     al,0x88
  4082d6:	inc    edi
  4082d7:	push   es
  4082d8:	stos   BYTE PTR es:[edi],al
  4082d9:	fstp   DWORD PTR [ebp-0x2c8e7c20]
  4082df:	adc    eax,esp
  4082e1:	sbb    al,0xa9
  4082e3:	sub    eax,0x785edb01
  4082e8:	in     al,dx
  4082e9:	lea    eax,[ebx+eiz*4+0x3]
  4082ed:	lods   al,BYTE PTR ds:[esi]
  4082ee:	jo     0x408325
  4082f0:	psadbw mm3,QWORD PTR [esi+esi*2-0x5a]
  4082f5:	add    al,0x12
  4082f7:	xor    al,al
  4082f9:	sbb    BYTE PTR [eax+0x1d],0xea
  4082fd:	das    
  4082fe:	jne    0x4082c0
  408300:	sti    
  408301:	dec    eax
  408302:	(bad)
  408305:	lock jmp 0x4082e7
  408308:	jns    0x408291
  40830a:	loop   0x408375
  40830c:	add    BYTE PTR [esi*2-0x77235d06],ch
  408313:	mov    edx,0x45f543c9
  408318:	xor    BYTE PTR ds:0x75e93159,al
  40831e:	mov    ds:0x80feea55,eax
  408323:	je     0x408345
  408325:	xchg   esi,eax
  408326:	fcom   QWORD PTR [edi-0x265f0fb3]
  40832c:	std    
  40832d:	mov    ds,WORD PTR [edi+eax*8]
  408330:	sub    BYTE PTR [eax+0x39],dh
  408333:	sub    eax,0xe26b8e1f
  408338:	or     al,BYTE PTR [ecx-0x29827f9b]
  40833e:	inc    eax
  40833f:	jmp    0x6cc9:0x136f41f9
  408346:	imul   esp,DWORD PTR [edi-0x35],0xffffffc2
  40834a:	lods   eax,DWORD PTR ds:[esi]
  40834b:	pop    edx
  40834c:	mov    eax,ds:0xe9de18de
  408351:	mov    edi,0x6ca76420
  408356:	fist   WORD PTR [edx]
  408358:	sbb    ebp,esp
  40835a:	xor    al,0xf9
  40835c:	js     0x408353
  40835e:	ror    DWORD PTR [edi+0x120221c7],1
  408364:	data16 jae 0x408302
  408367:	call   0x95ab:0xee634b08
  40836e:	js     0x4082f0
  408370:	popa   
  408371:	xor    eax,0xbabbc05f
  408376:	cmp    DWORD PTR [eax],edx
  408378:	mov    edx,0xf35603da
  40837e:	jns    0x408317
  408380:	push   0x17
  408382:	push   es
  408383:	lods   al,BYTE PTR ds:[esi]
  408384:	sub    al,0x2
  408386:	int    0x81
  408388:	int3   
  408389:	loop   0x4083d6
  40838b:	push   esi
  40838c:	mov    bl,0xfc
  40838e:	aaa    
  40838f:	je     0x40833d
  408391:	sub    al,0x14
  408393:	cmp    BYTE PTR [edx+0xa],cl
  408396:	mov    al,0xb1
  408398:	mov    bh,0x40
  40839a:	test   al,0xe5
  40839c:	test   BYTE PTR [edi+eax*1],dh
  40839f:	ret    0x4154
  4083a2:	add    edx,ebp
  4083a4:	test   al,0x91
  4083a6:	add    al,0x4d
  4083a8:	inc    ebp
  4083a9:	cmc    
  4083aa:	jl     0x40840e
  4083ac:	push   cs
  4083ad:	fisub  WORD PTR [edx-0x34aa02a]
  4083b3:	mov    eax,0x98134ca3
  4083b8:	(bad)  
  4083b9:	mov    WORD PTR [eax+0x5b],fs
  4083bc:	imul   esp,DWORD PTR [eax+eiz*1+0x2c13b64d],0x45
  4083c4:	pop    ecx
  4083c5:	xchg   esi,eax
  4083c6:	ss jno 0x40838a
  4083c9:	mov    DWORD PTR [ebp+0x18b69b5e],edx
  4083cf:	adc    al,0xb0
  4083d1:	mov    edi,0xd4be7f72
  4083d6:	inc    edi
  4083d7:	xor    BYTE PTR [ecx+ebx*4],ah
  4083da:	add    DWORD PTR ds:0x19af9c9,edi
  4083e0:	jecxz  0x408423
  4083e2:	jae    0x408406
  4083e4:	xchg   ecx,eax
  4083e5:	push   esi
  4083e6:	lods   eax,DWORD PTR ds:[esi]
  4083e7:	inc    eax
  4083e8:	imul   esi,DWORD PTR [ebx+0x6414ba44],0x3fb9808
  4083f2:	xor    DWORD PTR [ecx],ecx
  4083f4:	jno    0x4083b6
  4083f6:	push   ecx
  4083f7:	jge    0x408454
  4083f9:	inc    eax
  4083fa:	test   eax,0x4974457
  4083ff:	adc    ebx,DWORD PTR [ebp-0x122271b]
  408405:	call   0x8ed84f86
  40840a:	mov    al,ds:0xa2fed7d2
  40840f:	mov    cs,WORD PTR [esi]
  408411:	push   es
  408412:	lods   eax,DWORD PTR ds:[esi]
  408413:	dec    ecx
  408414:	js     0x4083a7
  408416:	xor    cl,BYTE PTR [ebp+0x304eb037]
  40841c:	fldenv [esi-0x22cf1c9b]
  408422:	test   DWORD PTR [eax],0x97466489
  408428:	and    ah,0x99
  40842b:	test   eax,ecx
  40842d:	add    BYTE PTR ds:0x17603e8b,dl
  408433:	inc    ebp
  408434:	popf   
  408435:	xchg   edx,eax
  408436:	xchg   BYTE PTR [ebx-0x38],dl
  408439:	push   edi
  40843a:	xchg   ebp,eax
  40843b:	int3   
  40843c:	mov    esi,0x53e247a
  408441:	rol    BYTE PTR [edi-0x3e79c6e3],0x6d
  408448:	ins    DWORD PTR es:[edi],dx
  408449:	sbb    al,0xd0
  40844b:	test   dh,dl
  40844d:	and    dh,BYTE PTR [esi]
  40844f:	in     eax,0xe1
  408451:	les    edx,FWORD PTR [edx]
  408453:	fistp  DWORD PTR [ecx+edx*8+0x42849b62]
  40845a:	outs   dx,BYTE PTR ds:[esi]
  40845b:	loope  0x408478
  40845d:	arpl   WORD PTR [ebx+0x4e6f8fa0],si
  408463:	add    al,0x35
  408465:	popf   
  408466:	imul   ecx,DWORD PTR [edx-0xd],0xffffffe3
  40846a:	mov    ecx,0x82e9429d
  40846f:	in     eax,0x1
  408471:	retf   
  408472:	loopne 0x4084e2
  408474:	dec    edi
  408475:	iret   
  408476:	xor    eax,0x353867a
  40847b:	bound  ecx,QWORD PTR [edi-0x69]
  40847e:	lods   eax,DWORD PTR ds:[esi]
  40847f:	enter  0x4a3e,0xfd
  408483:	lahf   
  408484:	inc    edx
  408485:	cmp    eax,0xd85a508b
  40848a:	adc    DWORD PTR [esi],0x37
  40848d:	dec    ebp
  40848e:	hlt    
  40848f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408490:	xor    BYTE PTR cs:[edx+0x25],0xb0
  408495:	scas   eax,DWORD PTR es:[edi]
  408496:	mov    ebp,0xe4106b44
  40849b:	push   0xdaccebcd
  4084a0:	adc    DWORD PTR ds:0xbdec,esp
  4084a5:	mov    bh,0xf8
  4084a7:	xchg   edx,eax
  4084a8:	aam    0x2c
  4084aa:	(bad)  
  4084ab:	mov    edx,0xba4e681
  4084b0:	fs (bad) 
  4084b2:	sub    DWORD PTR [edx+edx*8-0x1e],esi
  4084b6:	arpl   WORD PTR [ecx],ax
  4084b8:	jge    0x4084a3
  4084ba:	mov    eax,0x8d9e4019
  4084bf:	dec    eax
  4084c0:	mov    edx,0x18ef90ae
  4084c5:	and    BYTE PTR [edi+0x2f],ah
  4084c8:	dec    ecx
  4084c9:	jne    0x4084c8
  4084cb:	jnp    0x40854a
  4084cd:	dec    edi
  4084ce:	pop    edi
  4084cf:	push   ds
  4084d0:	xchg   ebp,eax
  4084d1:	pop    ecx
  4084d2:	pop    ds
  4084d3:	mov    dh,0x31
  4084d5:	dec    edi
  4084d6:	or     bh,ah
  4084d8:	stc    
  4084d9:	mov    eax,0xa93e602a
  4084de:	or     cl,BYTE PTR [esi+0x44]
  4084e1:	outs   dx,BYTE PTR ds:[esi]
  4084e2:	fwait
  4084e3:	lods   eax,DWORD PTR ds:[esi]
  4084e4:	mov    ecx,DWORD PTR [ebx+0x2c]
  4084e7:	fmul   QWORD PTR [esi]
  4084e9:	mov    al,ds:0xe19388f5
  4084ee:	mov    ch,0x3c
  4084f0:	js     0x408541
  4084f2:	fisttp WORD PTR [edi+0x49]
  4084f5:	xor    ecx,DWORD PTR ds:0x95781f30
  4084fb:	mov    ch,0x88
  4084fd:	add    al,0x1a
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a76b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a76f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a773
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a77b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a743
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   ch,al
  4089f8:	popa   
  4089f9:	sub    dh,BYTE PTR [edi+eax*8+0x15]
  4089fd:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffc8
  408a04:	push   es
  408a05:	popa   
  408a06:	fisttp DWORD PTR [eax-0x1a1b92d5]
  408a0c:	(bad)  
  408a0d:	je     0x408a28
  408a0f:	push   esi
  408a10:	adc    ecx,edx
  408a12:	(bad)  
  408a13:	xchg   edx,eax
  408a14:	pop    ecx
  408a15:	pop    ecx
  408a16:	imul   edx,DWORD PTR [edx+0x2f],0x6c
  408a1a:	sbb    eax,ebx
  408a1c:	inc    esp
  408a1d:	pop    ds
  408a1e:	sub    eax,0x41bcb03d
  408a23:	int3   
  408a24:	imul   eax,DWORD PTR [ecx-0x6a673f2c],0x12
  408a2b:	ficomp DWORD PTR [edx]
  408a2d:	mov    dh,0xf8
  408a2f:	jmp    0xa524b111
  408a34:	das    
  408a35:	scas   eax,DWORD PTR es:[edi]
  408a36:	xor    BYTE PTR [ebx-0x58fe0b14],al
  408a3c:	inc    ecx
  408a3d:	fadd   st,st(5)
  408a3f:	and    eax,0x944d60d6
  408a44:	adc    dh,BYTE PTR [eax+0x2591395c]
  408a4a:	ror    BYTE PTR [ecx-0x40348be0],1
  408a50:	int    0x8b
  408a52:	test   dl,ah
  408a54:	pop    ecx
  408a55:	ret    0x2745
  408a58:	mov    edi,0xa4132fe9
  408a5d:	cmp    ebp,ebp
  408a5f:	test   al,0x84
  408a61:	lahf   
  408a62:	jbe    0x408ab4
  408a64:	aad    0xb2
  408a66:	jg     0x408ad6
  408a68:	in     eax,dx
  408a69:	pop    ss
  408a6a:	mul    BYTE PTR [ecx-0x4494b28c]
  408a70:	fdiv   st(5),st
  408a72:	imul   ebp,ebx,0x680db5d5
  408a78:	fadd   st,st(3)
  408a7a:	lahf   
  408a7b:	add    al,0xb5
  408a7d:	fmul   DWORD PTR [ebp+0x192e7373]
  408a83:	cs mov al,0x33
  408a86:	ja     0x408aa1
  408a88:	sub    BYTE PTR [esi],dh
  408a8a:	jo     0x408af0
  408a8c:	cs inc ebp
  408a8e:	add    bl,BYTE PTR [ebx-0x6081c12f]
  408a94:	fist   DWORD PTR ds:0xe1df76e9
  408a9a:	sbb    eax,0x4bd6de4b
  408a9f:	call   0xcad:0x3df04d33
  408aa6:	or     al,0x94
  408aa8:	mov    ds:0x22da52c6,al
  408aad:	cli    
  408aae:	sub    BYTE PTR [eax-0x71],al
  408ab1:	pop    eax
  408ab2:	jg     0x408b11
  408ab4:	push   eax
  408ab5:	mov    DWORD PTR [ebx+0x5131667d],eax
  408abb:	jns    0x408b20
  408abd:	pop    es
  408abe:	push   0xffffffbe
  408ac0:	cmp    BYTE PTR [eax],bl
  408ac2:	add    esp,DWORD PTR [ebp-0x14e5511f]
  408ac8:	loope  0x408a57
  408aca:	jo     0x408abe
  408acc:	stos   BYTE PTR es:[edi],al
  408acd:	push   esp
  408ace:	mov    ds:0x3770ffb,eax
  408ad3:	not    dh
  408ad5:	add    edx,DWORD PTR [edx+0x74]
  408ad8:	or     eax,edx
  408ada:	push   esi
  408adb:	cmp    eax,0xedbdde6d
  408ae0:	push   ss
  408ae1:	ins    BYTE PTR es:[edi],dx
  408ae2:	inc    ecx
  408ae3:	mov    dl,0xd7
  408ae5:	add    eax,0x13043aa2
  408aea:	(bad)  
  408aeb:	mov    al,ds:0x7a2418b0
  408af0:	jo     0x408a75
  408af2:	stos   DWORD PTR es:[edi],eax
  408af3:	add    ebx,DWORD PTR [edi+edi*2-0x2d]
  408af7:	cmp    esi,DWORD PTR [edx-0xbe8ea37]
  408afd:	mov    eax,ds:0x3671b7cd
  408b02:	and    DWORD PTR [ebx-0x26],ebp
  408b05:	push   ds
  408b06:	cmp    al,0x7e
  408b08:	sub    al,0x8
  408b0a:	inc    esp
  408b0b:	push   ss
  408b0c:	ja     0x408ac0
  408b0e:	fwait
  408b0f:	mov    bh,BYTE PTR [ebx+ecx*1-0x60d9e78e]
  408b16:	pop    es
  408b17:	jnp    0x408b7e
  408b19:	int3   
  408b1a:	stc    
  408b1b:	call   0x3c66:0x5106b6
  408b22:	inc    esi
  408b23:	stos   DWORD PTR es:[edi],eax
  408b24:	repz push ebx
  408b26:	scas   eax,DWORD PTR es:[edi]
  408b27:	imul   esi,esi,0x72b8ed1f
  408b2d:	fmul   QWORD PTR [eax]
  408b2f:	push   0xfffffffa
  408b31:	in     eax,dx
  408b32:	inc    edx
  408b33:	shl    DWORD PTR [edi+0x33],1
  408b36:	inc    ebx
  408b37:	dec    ecx
  408b38:	cmp    al,0x82
  408b3a:	fldenv [ebp-0x37358287]
  408b40:	sbb    BYTE PTR [ebx+0xd84c622],dh
  408b46:	popa   
  408b47:	dec    edi
  408b48:	aas    
  408b49:	ror    DWORD PTR [eax],1
  408b4b:	(bad)  
  408b4c:	pop    ss
  408b4d:	xor    cl,BYTE PTR [ecx+0x4c]
  408b50:	pop    ebp
  408b51:	inc    edx
  408b52:	scas   al,BYTE PTR es:[edi]
  408b53:	inc    eax
  408b54:	in     eax,dx
  408b55:	and    DWORD PTR [edx+0x441a5089],esp
  408b5b:	fisubr WORD PTR [edi]
  408b5d:	mov    edx,?
  408b5f:	arpl   di,bx
  408b61:	fcomp  QWORD PTR [eax]
  408b63:	pop    esp
  408b64:	sbb    ecx,edi
  408b66:	push   esp
  408b67:	push   0x65f17f44
  408b6c:	cmp    cl,BYTE PTR [ecx-0x1fd4927b]
  408b72:	fisubr DWORD PTR [esi-0x26]
  408b75:	jl     0x408baa
  408b77:	enter  0xffdd,0x53
  408b7b:	inc    eax
  408b7c:	dec    ebp
  408b7d:	(bad)  
  408b7e:	fadd   st,st(1)
  408b80:	mov    ecx,0xb67f3d39
  408b85:	adc    al,0x6e
  408b87:	hlt    
  408b88:	pop    eax
  408b89:	cmc    
  408b8a:	pop    esi
  408b8b:	shr    BYTE PTR [ebp-0x5c],0x56
  408b8f:	(bad)  
  408b90:	f2xm1  
  408b92:	mov    eax,ds:0x256001f1
  408b97:	pusha  
  408b98:	xor    di,WORD PTR [ebp-0xe570016]
  408b9f:	int    0x54
  408ba1:	test   eax,0xd4809d0c
  408ba6:	mov    eax,ds:0x44ec7d3c
  408bab:	inc    ecx
  408bac:	xchg   BYTE PTR [ecx],ah
  408bae:	xor    eax,0xc0a43ef7
  408bb3:	xchg   edx,eax
  408bb4:	sbb    bh,BYTE PTR [ebx+0x21]
  408bb7:	out    0xe,al
  408bb9:	(bad)  
  408bba:	cdq    
  408bbb:	(bad)  
  408bbc:	sub    eax,0x386c1a87
  408bc1:	add    cl,BYTE PTR [edi+0x58]
  408bc4:	mov    edx,0x9efd96f
  408bc9:	mov    esi,0xcf13c1bc
  408bce:	aad    0xcc
  408bd0:	popa   
  408bd1:	add    BYTE PTR [ecx+0x30552f3c],bl
  408bd7:	dec    ebp
  408bd8:	jbe    0x408bb8
  408bda:	add    al,0xcb
  408bdc:	mov    esp,0x49adbb5
  408be1:	rcl    BYTE PTR [esi-0x15f8417d],1
  408be7:	sbb    ah,BYTE PTR [esp+ecx*2+0x1cd9f92d]
  408bee:	call   0xc9b2:0x4d900e21
  408bf5:	fdiv   st(0),st
  408bf7:	push   0xfffffff1
  408bf9:	sbb    DWORD PTR [ebp+0x13],edi
  408bfc:	mov    bl,BYTE PTR [eax]
  408bfe:	dec    esp
  408bff:	lds    eax,FWORD PTR [ebp+0x20fc21c2]
  408c05:	ror    DWORD PTR [eax],cl
  408c07:	out    0x85,al
  408c09:	ret    
  408c0a:	hlt    
  408c0b:	adc    al,0x84
  408c0d:	ret    0xd9fc
  408c10:	ret    0xfb05
  408c13:	scas   al,BYTE PTR es:[edi]
  408c14:	push   esp
  408c15:	shl    DWORD PTR [edx-0x1877fb2e],0x9a
  408c1c:	mov    cl,0xb2
  408c1e:	push   esp
  408c1f:	inc    ebp
  408c20:	mov    eax,0xb8553e40
  408c25:	xor    esi,DWORD PTR [esi+ecx*1-0x60]
  408c29:	xchg   ecx,eax
  408c2a:	jl     0x408bc1
  408c2c:	sbb    edi,DWORD PTR ds:[ebx]
  408c2f:	in     eax,dx
  408c30:	sub    edx,DWORD PTR [edi-0x4e79486f]
  408c36:	stos   BYTE PTR es:[edi],al
  408c37:	lods   eax,DWORD PTR ds:[esi]
  408c38:	xchg   edi,eax
  408c39:	mov    dh,0x9d
  408c3b:	(bad)  
  408c3c:	jnp    0x408c20
  408c3e:	inc    esi
  408c3f:	icebp  
  408c40:	addr16 mov cl,0xd3
  408c43:	jg     0x408c38
  408c45:	sbb    al,0x63
  408c47:	inc    edx
  408c48:	push   esi
  408c49:	xchg   ebp,eax
  408c4a:	aam    0x68
  408c4c:	xor    ebx,edx
  408c4e:	cld    
  408c4f:	push   0x15
  408c51:	cld    
  408c52:	arpl   dx,si
  408c54:	aam    0xe5
  408c56:	jmp    0x6f2dcd18
  408c5b:	add    eax,0xb4387216
  408c60:	sub    eax,0x2ecea5aa
  408c65:	push   ecx
  408c66:	mov    DWORD PTR [ebp-0x5e],ebx
  408c69:	in     al,dx
  408c6a:	jb     0x408ce1
  408c6c:	jle    0x408bfb
  408c6e:	jbe    0x408c2d
  408c70:	push   ds
  408c71:	test   al,0xe3
  408c73:	loope  0x408ca5
  408c75:	dec    eax
  408c76:	sbb    DWORD PTR [ebx],esp
  408c78:	jb     0x408ce3
  408c7a:	sub    DWORD PTR [edx-0x5b],0xfffffffb
  408c7e:	ret    0xf9d
  408c81:	mov    esp,0x99b36210
  408c86:	add    DWORD PTR [edx-0x5a],ebx
  408c89:	imul   DWORD PTR [ecx-0x4a]
  408c8c:	adc    eax,0xb30f4381
  408c91:	xchg   ebx,eax
  408c92:	push   ss
  408c93:	sti    
  408c94:	dec    eax
  408c95:	in     eax,0x6a
  408c97:	xchg   edx,eax
  408c98:	std    
  408c99:	and    DWORD PTR [ebp+0x36],0x3375d42f
  408ca0:	mov    eax,cr3
  408ca3:	les    esp,FWORD PTR [esp+ebp*4-0x7b]
  408ca7:	mov    dh,0x56
  408ca9:	push   ds
  408caa:	pop    ds
  408cab:	mov    dl,bh
  408cad:	loopne 0x408c67
  408caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb0:	into   
  408cb1:	jb     0x408cfe
  408cb3:	js     0x408c6e
  408cb5:	(bad)  
  408cb6:	pop    ss
  408cb7:	jb     0x408c64
  408cb9:	pop    ebx
  408cba:	pop    edi
  408cbb:	pop    edx
  408cbc:	mov    esi,0x252cc1bd
  408cc1:	sbb    ch,dl
  408cc3:	fst    QWORD PTR [ebx-0x1d21fd71]
  408cc9:	mov    ds:0xd631a367,eax
  408cce:	jae    0x408d47
  408cd0:	inc    ebp
  408cd1:	push   cs
  408cd2:	sub    al,0x47
  408cd4:	sub    eax,0xb639d2c1
  408cd9:	jecxz  0x408cb9
  408cdb:	xchg   esi,eax
  408cdc:	xor    al,0x85
  408cde:	js     0x408d26
  408ce0:	outs   dx,DWORD PTR ds:[esi]
  408ce1:	stos   DWORD PTR es:[edi],eax
  408ce2:	fdivr  QWORD PTR [edx-0x78907e18]
  408ce8:	dec    esi
  408ce9:	jnp    0x408ca6
  408ceb:	sbb    bh,BYTE PTR [edx]
  408ced:	push   cs
  408cee:	cmc    
  408cef:	jl     0x408cd1
  408cf1:	div    DWORD PTR [ebx]
  408cf3:	xlat   BYTE PTR ds:[ebx]
  408cf4:	dec    ebx
  408cf5:	inc    ecx
  408cf6:	sbb    DWORD PTR [ebx-0xbaf5665],0x33
  408cfd:	mov    bh,0xba
  408cff:	dec    edx
  408d00:	push   cs
  408d01:	sub    bl,BYTE PTR [ebx-0x38b6c0f7]
  408d07:	stos   DWORD PTR es:[edi],eax
  408d08:	aam    0x71
  408d0a:	popa   
  408d0b:	outs   dx,DWORD PTR ds:[esi]
  408d0c:	mov    BYTE PTR [edi-0x17],bl
  408d0f:	loope  0x408ca0
  408d11:	lea    esi,[eax+ebx*1-0x58b623e0]
  408d18:	es jb  0x408d19
  408d1b:	int    0x91
  408d1d:	inc    esp
  408d1e:	add    ebx,DWORD PTR [ebx]
  408d20:	inc    esi
  408d21:	mov    ecx,0x999f56fd
  408d26:	gs pop ecx
  408d28:	enter  0x9eb4,0x88
  408d2c:	shl    DWORD PTR [ebx-0x77],1
  408d2f:	into   
  408d30:	mov    eax,0xb3adb7a
  408d35:	sub    al,0xd3
  408d37:	lods   eax,DWORD PTR ds:[esi]
  408d38:	and    eax,0xf694fbf1
  408d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d3e:	dec    edx
  408d3f:	adc    al,ch
  408d41:	pop    ebp
  408d42:	jmp    0x9a3a8af4
  408d47:	lahf   
  408d48:	xor    esi,DWORD PTR [esi+0x2c3dcf0b]
  408d4e:	xchg   esp,eax
  408d4f:	dec    ebp
  408d50:	cmp    ebx,edx
  408d52:	pop    edx
  408d53:	pop    ebp
  408d54:	test   DWORD PTR [edx+0x73b690bb],eax
  408d5a:	pop    ebp
  408d5b:	test   eax,0xf97d1aa1
  408d60:	mov    ds:0xae7214e8,al
  408d65:	inc    ebx
  408d66:	repz (bad) 
  408d69:	mov    esp,0x3f3aac1
  408d6e:	(bad)  
  408d6f:	es nop
  408d71:	ds xchg ecx,eax
  408d73:	and    al,0x49
  408d75:	pop    ebx
  408d76:	lods   al,BYTE PTR ds:[esi]
  408d77:	mov    esi,0x5b61fc2d
  408d7c:	mov    eax,ds
  408d7e:	mov    esi,0x91a7a10e
  408d83:	cmp    bl,BYTE PTR [edi]
  408d85:	mov    edx,0x54c9b257
  408d8a:	add    al,0xdf
  408d8c:	loop   0x408dc6
  408d8e:	enter  0xc389,0xa4
  408d92:	sar    DWORD PTR [edx+eiz*2],cl
  408d95:	cld    
  408d96:	out    dx,eax
  408d97:	and    BYTE PTR [esp+ebx*8-0x32],dl
  408d9b:	(bad)  
  408d9c:	idiv   DWORD PTR [edi+0x4c]
  408d9f:	mov    al,BYTE PTR [edi+0x31]
  408da2:	push   edx
  408da3:	or     DWORD PTR [ebp-0x3],0xffffffb4
  408da7:	rcl    BYTE PTR [edi],cl
  408da9:	aam    0x1e
  408dab:	add    edx,esp
  408dad:	xchg   DWORD PTR [edx],edx
  408daf:	daa    
  408db0:	cmp    DWORD PTR [ebp+0x544819c1],0xffffff97
  408db7:	(bad)
  408dbb:	daa    
  408dbc:	cmp    ebp,DWORD PTR [esi]
  408dbe:	sbb    DWORD PTR [eax+0x1a],edx
  408dc1:	int3   
  408dc2:	(bad)  
  408dc4:	popa   
  408dc5:	pop    es
  408dc6:	push   esp
  408dc7:	out    dx,eax
  408dc8:	mov    ds:0x229dceff,al
  408dcd:	xchg   ebx,eax
  408dce:	or     eax,0xda15642f
  408dd3:	dec    ecx
  408dd4:	popa   
  408dd5:	out    dx,eax
  408dd6:	int3   
  408dd7:	jns    0x408dfc
  408dd9:	xchg   BYTE PTR [esp+eiz*8+0x1e],bl
  408ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dde:	xchg   ecx,eax
  408ddf:	xor    BYTE PTR [edi],0x89
  408de2:	inc    edi
  408de3:	or     bl,BYTE PTR [ecx+0x5d]
  408de6:	test   DWORD PTR [edx-0x2b],ebx
  408de9:	dec    ebp
  408dea:	push   0x815f6801
  408def:	inc    ecx
  408df0:	cmp    ebp,0x2e26a1f5
  408df6:	neg    BYTE PTR [ecx-0x21]
  408df9:	cli    
  408dfa:	adc    edi,ecx
  408dfc:	and    bl,BYTE PTR [ecx]
  408dfe:	mov    ch,0xc0
  408e00:	xchg   edx,eax
  408e01:	int    0x31
  408e03:	sbb    al,0xf4
  408e05:	cmp    eax,0x13cce41b
  408e0a:	mov    edx,0x49fc25da
  408e0f:	cmc    
  408e10:	jmp    0x408e3a
  408e12:	rcl    DWORD PTR [edi+0x23],0x21
  408e16:	rcl    DWORD PTR [ebx-0x7],cl
  408e19:	xor    BYTE PTR [edx],ch
  408e1b:	mov    BYTE PTR [edi],cl
  408e1d:	out    0xb1,al
  408e1f:	pushf  
  408e20:	and    eax,0x43600ee2
  408e25:	add    cl,BYTE PTR [esi+0x2218f812]
  408e2b:	add    eax,0x1479cb3c
  408e30:	and    eax,0xdfb07652
  408e35:	les    edi,FWORD PTR [ebx+0x14fb495e]
  408e3b:	es in  al,0xa2
  408e3e:	and    eax,0x836a3e4e
  408e43:	(bad)  
  408e44:	lock inc esp
  408e46:	ficomp WORD PTR [edi-0xdd8ee41]
  408e4c:	sub    al,0x6c
  408e4e:	cld    
  408e4f:	cld    
  408e50:	mov    cl,0x10
  408e52:	fwait
  408e53:	aaa    
  408e54:	mov    bl,0xbc
  408e56:	div    bl
  408e58:	les    edi,FWORD PTR ds:0x456db032
  408e5e:	aaa    
  408e5f:	dec    ecx
  408e60:	ja     0x408ed0
  408e62:	sar    BYTE PTR [ebx],1
  408e64:	push   eax
  408e65:	push   eax
  408e66:	ret    
  408e67:	fs in  al,dx
  408e69:	mov    ds:0x67807487,eax
  408e6e:	cwde   
  408e6f:	xchg   DWORD PTR [edx+esi*2],ebp
  408e72:	mov    DWORD PTR [ecx-0x6fd7a311],ecx
  408e78:	(bad)  [ebp-0x1cee82dc]
  408e7e:	xchg   ebp,eax
  408e7f:	enter  0xcec7,0x1
  408e83:	mov    al,ds:0xa543121f
  408e88:	aas    
  408e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e8a:	xchg   DWORD PTR [eax],eax
  408e8c:	mov    edi,0xf7de5902
  408e91:	std    
  408e92:	call   0xd05eae14
  408e97:	mov    eax,0x7854d759
  408e9c:	push   ecx
  408e9d:	lock jne 0x408e73
  408ea0:	jo     0x408e98
  408ea2:	adc    eax,0x6a0e222
  408ea7:	xchg   ebx,eax
  408ea8:	dec    ebx
  408ea9:	dec    ebp
  408eaa:	dec    edi
  408eab:	popa   
  408eac:	sti    
  408ead:	jp     0x408ec1
  408eaf:	jmp    0x7ee0:0xe9b4112c
  408eb6:	iret   
  408eb7:	or     dh,cl
  408eb9:	add    al,0xdb
  408ebb:	or     edx,esp
  408ebd:	push   0xc5c11e17
  408ec2:	cmp    ch,al
  408ec4:	cmp    cl,BYTE PTR [ecx+0x10]
  408ec7:	jae    0x408e73
  408ec9:	das    
  408eca:	out    0x37,al
  408ecc:	dec    esp
  408ecd:	sub    BYTE PTR [eax+0x1bb99680],0xfd
  408ed4:	sub    eax,0xee28ac12
  408ed9:	sbb    dh,dh
  408edb:	mov    bh,0xe7
  408edd:	inc    edx
  408ede:	js     0x408e83
  408ee0:	mov    ecx,0xe1b8ad7f
  408ee5:	pop    eax
  408ee6:	pop    ecx
  408ee7:	mov    ecx,0xdfc86487
  408eec:	and    al,0x8c
  408eee:	or     BYTE PTR [edx],ah
  408ef0:	cmc    
  408ef1:	mov    fs,edx
  408ef3:	adc    BYTE PTR [ebx+0x7f],ch
  408ef6:	push   esi
  408ef7:	cmc    
  408ef8:	and    BYTE PTR [ecx-0x7c1b6319],dh
  408efe:	nop
  408eff:	cmp    DWORD PTR es:[esi-0x616534c7],edi
  408f06:	repnz xor BYTE PTR [edi+0x6e],ah
  408f0a:	jecxz  0x408f37
  408f0c:	inc    eax
  408f0d:	jg     0x408f35
  408f0f:	shl    ebp,0xd8
  408f12:	mov    eax,ds:0x4ab53fdf
  408f17:	pop    esp
  408f18:	gs ja  0x408f09
  408f1b:	fisttp DWORD PTR [edx-0x23df1064]
  408f21:	add    ebp,DWORD PTR [esi-0x433b71cd]
  408f27:	add    BYTE PTR [ecx+0x758c1513],dh
  408f2d:	jo     0x408f20
  408f2f:	xlat   BYTE PTR ds:[ebx]
  408f30:	clc    
  408f31:	dec    esi
  408f32:	stc    
  408f33:	ret    0xe0a7
  408f36:	retf   0x1453
  408f39:	nop
  408f3a:	or     al,0xf0
  408f3c:	clc    
  408f3d:	add    al,0xc8
  408f3f:	sbb    edx,DWORD PTR [eax+0x4e]
  408f42:	imul   ebp,DWORD PTR [edx-0x65],0x31
  408f46:	jnp    0x408f2e
  408f48:	adc    DWORD PTR [edi-0x22],edi
  408f4b:	inc    edi
  408f4c:	pop    es
  408f4d:	jns    0x408fcd
  408f4f:	fcomp  QWORD PTR [esi]
  408f51:	xchg   edi,eax
  408f52:	push   ds
  408f53:	mov    ebp,0xce6d4a99
  408f58:	rol    DWORD PTR [ecx+esi*8+0x2],cl
  408f5c:	out    dx,eax
  408f5d:	loope  0x408eea
  408f5f:	mov    esp,0x48555775
  408f64:	push   ss
  408f65:	hlt    
  408f66:	or     esp,esp
  408f68:	daa    
  408f69:	cmp    DWORD PTR [ecx-0x76],0x2e
  408f6d:	(bad)  
  408f6f:	cwde   
  408f70:	push   edx
  408f71:	pop    edi
  408f72:	dec    BYTE PTR [eax]
  408f74:	lods   eax,DWORD PTR ds:[esi]
  408f75:	daa    
  408f76:	fdiv   st,st(4)
  408f78:	and    dl,ah
  408f7a:	je     0x408fba
  408f7c:	dec    esp
  408f7d:	sub    ah,BYTE PTR [edx]
  408f7f:	repnz pop eax
  408f81:	xor    cl,ah
  408f83:	rcr    BYTE PTR [ebp-0x60e014e0],0x14
  408f8a:	jmp    0xebfc18cf
  408f8f:	dec    ebp
  408f90:	xor    DWORD PTR [ebx+esi*8-0x7420805b],ebp
  408f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f98:	stc    
  408f99:	mov    edi,0xcb35e438
  408f9e:	pop    ebx
  408f9f:	adc    al,0x2e
  408fa1:	pop    edx
  408fa2:	adc    eax,0x58e69095
  408fa7:	imul   edx,DWORD PTR [ebp-0x3f279c31],0xffffffe2
  408fae:	pop    edx
  408faf:	push   ebp
  408fb0:	add    al,0x81
  408fb2:	mov    WORD PTR [ebx],cs
  408fb4:	(bad)  
  408fb5:	fbld   TBYTE PTR [ebp+0x260b0561]
  408fbb:	mov    ah,0x7a
  408fbd:	cli    
  408fbe:	mov    eax,0x778a5f46
  408fc3:	das    
  408fc4:	ret    0x1560
  408fc7:	sbb    al,BYTE PTR [esi]
  408fc9:	lock mov ch,0x1d
  408fcc:	mov    bh,0x8e
  408fce:	adc    ebp,edx
  408fd0:	pop    ecx
  408fd1:	mov    ds:0xbc7ee74f,eax
  408fd6:	in     al,dx
  408fd7:	repnz retf 0x7b0d
  408fdb:	mov    dl,0x56
  408fdd:	dec    esp
  408fde:	push   esi
  408fdf:	ret    
  408fe0:	ret    
  408fe1:	xor    dh,dl
  408fe3:	jae    0x408ffc
  408fe5:	ds mov edx,0x146acc3c
  408feb:	push   edx
  408fec:	retf   0xa062
  408fef:	bound  edi,QWORD PTR [edx-0x53]
  408ff2:	and    ecx,DWORD PTR [edi+ebx*1-0x51]
  408ff6:	cs ss out dx,al
  408ff9:	jns    0x409018
  408ffb:	(bad)  ss:[ecx+0x1129bd41]
  409002:	mov    cl,0x42
  409004:	and    edx,DWORD PTR [ebp+edx*4+0x11]
  409008:	test   cl,al
  40900a:	cld    
  40900b:	into   
  40900c:	retf   
  40900d:	(bad)  
  40900e:	mov    ss,WORD PTR [ecx]
  409010:	leave  
  409011:	es push esi
  409013:	or     eax,0x7037c5af
  409018:	call   0x6983:0xe5f36315
  40901f:	shl    DWORD PTR [ecx+edx*1],1
  409022:	jg     0x409005
  409024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409025:	jmp    0x40903a
  409027:	jecxz  0x409019
  409029:	mov    edi,0xa5916a47
  40902e:	retf   
  40902f:	repnz shl BYTE PTR [edx+esi*4],cl
  409033:	cmp    BYTE PTR ss:[eax],0x28
  409037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409038:	pop    edi
  409039:	xchg   BYTE PTR [ebx+0xf63208b],al
  40903f:	push   0x32
  409041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409042:	mov    bl,0x22
  409044:	push   ds
  409045:	mov    dl,bl
  409047:	outs   dx,BYTE PTR ds:[esi]
  409048:	add    eax,0xc7510230
  40904d:	mov    al,0xc3
  40904f:	pop    ss
  409050:	in     eax,0xe0
  409052:	mov    esi,0x922ce63
  409057:	lea    ebx,[ecx+eiz*4+0x1615efe3]
  40905e:	xor    bl,BYTE PTR [esi+0x5d52b7d]
  409064:	icebp  
  409065:	das    
  409066:	repz sub dx,WORD PTR [ecx-0x78]
  40906b:	in     al,dx
  40906c:	jae    0x409022
  40906e:	sbb    ah,ch
  409070:	ret    0xcceb
  409073:	sahf   
  409074:	aam    0x3a
  409076:	jae    0x4090a6
  409078:	sbb    al,0x0
  40907a:	xlat   BYTE PTR ds:[ebx]
  40907b:	fwait
  40907c:	ror    BYTE PTR [esi-0x2a],1
  40907f:	mov    dl,0xb9
  409081:	dec    esp
  409082:	pop    edi
  409083:	jmp    0x409031
  409085:	sbb    eax,0x2ed60fbf
  40908a:	clc    
  40908b:	mov    eax,DWORD PTR [eax]
  40908d:	jle    0x4090ab
  40908f:	jnp    0x4090f3
  409091:	add    edx,DWORD PTR ds:0xf043f4d3
  409097:	retf   0x282b
  40909a:	jmp    0x409023
  40909c:	or     eax,0x9e5245c9
  4090a1:	pushf  
  4090a2:	cwde   
  4090a3:	repz std 
  4090a5:	stos   BYTE PTR es:[edi],al
  4090a6:	mov    bh,0x76
  4090a8:	lock sahf 
  4090aa:	fucomip st,st(5)
  4090ac:	into   
  4090ad:	leave  
  4090ae:	mov    eax,ds:0x40cddbe2
  4090b3:	mov    esi,0x54443c00
  4090b8:	imul   ebx,DWORD PTR [ebp+edx*8-0x60],0xffffffdc
  4090bd:	pop    edx
  4090be:	nop
  4090bf:	jmp    0x2eea:0x68fb25c4
  4090c6:	mov    dl,0xb
  4090c8:	adc    ch,BYTE PTR [ecx-0x4af91a79]
  4090ce:	cmp    DWORD PTR [edx],ebx
  4090d0:	xchg   ebp,eax
  4090d1:	shl    al,1
  4090d3:	xchg   ecx,eax
  4090d4:	push   esi
  4090d5:	sbb    BYTE PTR [ecx+0x232eaf28],bl
  4090db:	or     al,0xed
  4090dd:	jmp    0x4090a3
  4090df:	stos   BYTE PTR es:[edi],al
  4090e0:	xor    DWORD PTR [edi-0x1b52693e],esi
  4090e6:	jmp    0xd117:0x9d0bb49c
  4090ed:	inc    eax
  4090ee:	sbb    eax,0x3cec8c0e
  4090f3:	call   0xbd80:0xa1c474dc
  4090fa:	jae    0x40912a
  4090fc:	xchg   edi,eax
  4090fd:	int    0xb4
  4090ff:	repz cs cmp ah,bh
  409103:	aam    0x47
  409105:	pop    ds
  409106:	js     0x4090ef
  409108:	cmp    cl,ch
  40910a:	ja     0x40910a
  40910c:	call   0x3188:0x3ed25bb8
  409113:	and    dh,BYTE PTR [edi+0x22a4cf6b]
  409119:	out    dx,eax
  40911a:	xor    BYTE PTR [ecx-0x48],0xcc
  40911e:	xor    al,0xe3
  409120:	push   0x28
  409122:	cwde   
  409123:	xor    al,0xf7
  409125:	jne    0x4090af
  409127:	mov    bh,0xd5
  409129:	aaa    
  40912a:	lock add BYTE PTR [edx-0x769f79af],al
  409131:	or     al,0x7
  409133:	inc    ebp
  409134:	jmp    0x9b5c7a
  409139:	dec    edx
  40913a:	push   ebp
  40913b:	pop    eax
  40913c:	and    al,0x49
  40913e:	pop    ebp
  40913f:	sbb    BYTE PTR [eax],0x50
  409142:	fdivr  DWORD PTR [edi]
  409144:	pop    esp
  409145:	mov    eax,0x99c5d373
  40914a:	cmc    
  40914b:	and    dl,BYTE PTR [eax+ecx*4-0x6c]
  40914f:	push   0x37b926f
  409154:	mul    cl
  409156:	out    0x48,al
  409158:	jl     0x409149
  40915a:	and    BYTE PTR [edi],ch
  40915c:	sbb    BYTE PTR [ecx+0x2d],bl
  40915f:	mov    ah,0x9a
  409161:	loope  0x409196
  409163:	das    
  409164:	xlat   BYTE PTR ds:[ebx]
  409165:	sub    DWORD PTR [ebx+ebp*4-0x208a5d1],ebx
  40916c:	call   0x5bf42327
  409171:	imul   ecx,DWORD PTR [edx],0x21
  409174:	loope  0x4091e8
  409176:	dec    esi
  409177:	push   0xffffff8b
  409179:	xchg   edi,eax
  40917a:	int3   
  40917b:	mov    eax,0x87bb9115
  409180:	adc    al,0xfa
  409182:	xchg   ch,al
  409184:	pop    ss
  409185:	test   al,0x10
  409187:	scas   al,BYTE PTR es:[edi]
  409188:	sub    ah,cl
  40918a:	loop   0x40919f
  40918c:	lds    esi,FWORD PTR [ebx]
  40918e:	jb     0x409197
  409190:	(bad)  
  409191:	and    bh,BYTE PTR [eax]
  409193:	scas   al,BYTE PTR es:[edi]
  409194:	or     ecx,ebx
  409196:	loop   0x4091fb
  409198:	ja     0x40916d
  40919a:	xchg   edx,eax
  40919b:	jb     0x40918c
  40919d:	in     al,0x40
  40919f:	add    BYTE PTR [ecx],ah
  4091a1:	pushf  
  4091a2:	fisub  WORD PTR [ebx]
  4091a4:	stos   DWORD PTR es:[edi],eax
  4091a5:	add    DWORD PTR [edx],eax
  4091a7:	pop    ds
  4091a8:	inc    ecx
  4091a9:	sti    
  4091aa:	mov    al,ds:0xfdf7a43
  4091af:	in     eax,0xd0
  4091b1:	das    
  4091b2:	and    al,0x7f
  4091b4:	sti    
  4091b5:	or     bl,BYTE PTR [edi]
  4091b7:	loope  0x4091b7
  4091b9:	push   0x74
  4091bb:	push   0x8a2af70d
  4091c0:	push   edi
  4091c1:	mov    edi,cs
  4091c3:	push   ds
  4091c4:	push   edx
  4091c5:	xchg   DWORD PTR [eax+0x3a17eaaa],ebx
  4091cb:	adc    eax,DWORD PTR [edx]
  4091cd:	rcr    cl,cl
  4091cf:	mov    edx,0x373142dd
  4091d4:	test   edi,ecx
  4091d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d7:	mov    bh,0xd1
  4091d9:	retf   
  4091da:	xchg   edx,eax
  4091db:	xchg   ebx,eax
  4091dc:	or     ebx,DWORD PTR [ebx+0x6ba64d63]
  4091e2:	mov    bh,cl
  4091e4:	mov    bl,0x8d
  4091e6:	and    BYTE PTR [ecx+0x563901f8],al
  4091ec:	hlt    
  4091ed:	repnz mov esi,0x26dbd707
  4091f3:	jae    0x4091ee
  4091f5:	xchg   ebp,eax
  4091f6:	in     eax,0x7c
  4091f8:	lea    edi,[eax-0x5e]
  4091fb:	retf   0x8c1f
  4091fe:	into   
  4091ff:	pop    es
  409200:	pop    ebx
  409201:	jp     0x4091cd
  409203:	mov    al,0xa9
  409205:	scas   eax,DWORD PTR es:[edi]
  409206:	mov    ebp,0x9b6f77fc
  40920b:	stos   DWORD PTR es:[edi],eax
  40920c:	xor    ebp,DWORD PTR [esi+esi*2-0x2e0f41d0]
  409213:	ret    
  409214:	push   esp
  409215:	jb     0x409233
  409217:	adc    DWORD PTR [ecx-0x70],ecx
  40921a:	cmc    
  40921b:	les    ebp,FWORD PTR [ecx]
  40921d:	out    0x1e,al
  40921f:	sub    al,0x84
  409221:	add    dh,BYTE PTR [ebx-0x71]
  409224:	fadd   DWORD PTR [esi-0x6a0bad86]
  40922a:	pop    esp
  40922b:	push   eax
  40922c:	out    0x4c,al
  40922e:	mov    ecx,db1
  409231:	xchg   esi,eax
  409232:	xchg   ebp,eax
  409233:	cmp    ebx,eax
  409235:	adc    eax,0x74b7ac80
  40923a:	ja     0x409289
  40923c:	test   eax,0x2365cf31
  409241:	push   cs
  409242:	jmp    0x4091e5
  409244:	cld    
  409245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409246:	sbb    eax,0x850e5a4a
  40924b:	ins    DWORD PTR es:[edi],dx
  40924c:	call   0xa8850d9e
  409251:	and    BYTE PTR [esi],bh
  409253:	fdiv   DWORD PTR [edi+0x230fd6d6]
  409259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40925a:	mov    ecx,0x3f5b12c6
  40925f:	dec    edx
  409260:	and    cl,BYTE PTR [esi-0x5a0fdf68]
  409266:	aaa    
  409267:	or     bh,bl
  409269:	mov    cl,0x9e
  40926b:	call   0x6288:0x70f898d0
  409272:	sub    al,0xf4
  409274:	rcr    DWORD PTR [ebx],0xdb
  409277:	fcom   DWORD PTR [ebp+0x71]
  40927a:	mov    edi,0xa56bda07
  40927f:	dec    ecx
  409280:	fistp  DWORD PTR [ebx+0x6e]
  409283:	aam    0x66
  409285:	syscall 
  409287:	(bad)  
  409288:	outs   dx,BYTE PTR ds:[esi]
  409289:	mov    eax,0x33aa99fd
  40928e:	jb     0x409213
  409290:	mov    ah,0x4b
  409292:	stc    
  409293:	shr    DWORD PTR [ebx],cl
  409295:	push   0x47f2f06
  40929a:	cmp    al,0xb7
  40929c:	inc    esi
  40929d:	or     DWORD PTR [edx+eax*1+0x367a4912],eax
  4092a4:	(bad)  
  4092a5:	test   DWORD PTR [esi],0x3e0f8a6b
  4092ab:	mov    ebp,0xa38454c8
  4092b0:	std    
  4092b1:	scas   eax,DWORD PTR es:[edi]
  4092b2:	ret    
  4092b3:	inc    edi
  4092b4:	and    al,0xa6
  4092b6:	dec    esp
  4092b7:	inc    edi
  4092b8:	popa   
  4092b9:	das    
  4092ba:	xchg   edi,eax
  4092bb:	cmp    al,0x4
  4092bd:	cmp    al,0xc8
  4092bf:	pop    ebp
  4092c0:	jo     0x4092f8
  4092c2:	loopne 0x40930f
  4092c4:	imul   bh
  4092c6:	xor    esi,DWORD PTR [ecx]
  4092c8:	shl    DWORD PTR [edi],1
  4092ca:	(bad)  
  4092cb:	ficomp DWORD PTR [ebx-0x6c5b0eee]
  4092d1:	inc    edi
  4092d2:	pop    edi
  4092d3:	adc    DWORD PTR [esi+0x754b812a],0xffffffcf
  4092da:	in     al,0x36
  4092dc:	mov    ds:0x9e0afd0b,eax
  4092e1:	mov    ecx,0x42ad9f16
  4092e6:	sbb    DWORD PTR [edi+edi*1-0x34371ca5],edi
  4092ed:	pop    ds
  4092ee:	sbb    al,0x4a
  4092f0:	inc    edx
  4092f1:	sub    DWORD PTR [ebx],ebx
  4092f3:	lods   eax,DWORD PTR ds:[esi]
  4092f4:	inc    ebx
  4092f5:	in     al,0xb1
  4092f7:	ficomp WORD PTR [edi+0x3a29b036]
  4092fd:	inc    eax
  4092fe:	sub    DWORD PTR [edx+0x5930475a],edx
  409304:	aam    0xf2
  409306:	mov    cl,0x16
  409308:	mul    DWORD PTR ds:0x51e1c948
  40930e:	es jmp 0x4092fd
  409311:	sti    
  409312:	xchg   esi,eax
  409313:	in     al,dx
  409314:	mov    cl,0xbf
  409316:	nop
  409317:	sbb    dl,al
  409319:	adc    BYTE PTR [edx-0x8],bl
  40931c:	push   DWORD PTR [eax]
  40931e:	jne    0x40937d
  409320:	jo     0x4092e2
  409322:	xchg   DWORD PTR ds:0x797dbacd,esp
  409328:	(bad)  
  409329:	inc    ecx
  40932a:	dec    esp
  40932b:	nop
  40932c:	pop    edi
  40932d:	sahf   
  40932e:	mov    cs,WORD PTR [esi+0x4520ab3e]
  409334:	mov    BYTE PTR [esi+ebx*8-0x1e],0x10
  409339:	icebp  
  40933a:	push   0xffffffaa
  40933c:	pop    ebp
  40933d:	loopne 0x40930e
  40933f:	lods   eax,DWORD PTR ds:[esi]
  409340:	enter  0xd5bf,0xd
  409344:	xor    dl,BYTE PTR [edx+0x75f13cc6]
  40934a:	cli    
  40934b:	call   0xc7f6:0xb49ff8ee
  409352:	jne    0x4092f3
  409354:	jle    0x4093cc
  409356:	rol    DWORD PTR ds:[edx],0xf3
  40935a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40935b:	mov    dl,0x22
  40935d:	jmp    0xd42a:0xfa9c8db8
  409364:	mov    al,ds:0x9b4b8e75
  409369:	out    dx,eax
  40936a:	mov    ds:0xa8d84b09,al
  40936f:	shl    ebp,cl
  409371:	xor    BYTE PTR [ebp+0x661f8485],dl
  409377:	dec    ecx
  409378:	and    bh,BYTE PTR [edx-0x37]
  40937b:	or     al,0x22
  40937d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40937e:	sub    al,BYTE PTR [ebx+0x19]
  409381:	jecxz  0x4093bd
  409383:	mov    ch,0xb8
  409385:	inc    eax
  409386:	push   es
  409387:	pop    eax
  409388:	pop    eax
  409389:	dec    edx
  40938a:	cmp    al,0x2d
  40938c:	bound  edi,QWORD PTR [ebx+0x7a]
  40938f:	dec    edi
  409390:	punpckldq mm6,mm1
  409393:	add    esi,DWORD PTR [edi+0x27]
  409396:	sti    
  409397:	inc    ebp
  409398:	addr16 ds loop 0x409393
  40939c:	stc    
  40939d:	scas   eax,DWORD PTR es:[edi]
  40939e:	xchg   edx,eax
  40939f:	and    BYTE PTR [eax-0x3ea23bd4],bl
  4093a5:	push   es
  4093a6:	sub    eax,0x2152993e
  4093ab:	push   0x50
  4093ad:	mov    edi,0x809e2367
  4093b2:	jae    0x40939b
  4093b4:	sub    dl,bh
  4093b6:	es push ebp
  4093b8:	imul   ebp,DWORD PTR [esi-0x26],0x54
  4093bc:	jp     0x4093f4
  4093be:	jnp    0x4093e3
  4093c0:	or     cl,BYTE PTR [ecx+0x6e]
  4093c3:	test   BYTE PTR [edx+ebx*2+0x6847492e],cl
  4093ca:	jae    0x4093c0
  4093cc:	add    bl,BYTE PTR [edi]
  4093ce:	test   BYTE PTR [ebp+0x26fc3a1a],0x53
  4093d5:	addr16 mov edx,0x37b41c83
  4093db:	jae    0x4093ee
  4093dd:	test   BYTE PTR [ecx+edx*8-0x7e5146ff],bl
  4093e4:	pop    esp
  4093e5:	and    al,0xcc
  4093e7:	push   eax
  4093e8:	inc    eax
  4093e9:	sub    al,0xeb
  4093eb:	or     bl,BYTE PTR [esi]
  4093ed:	jno    0x409371
  4093ef:	mov    eax,ds:0xdfa5983e
  4093f4:	adc    BYTE PTR [esi],0xba
  4093f7:	push   ebx
  4093f8:	mov    esi,0x95de0797
  4093fd:	fst    QWORD PTR [eax+edi*2-0x41a1ce74]
  409404:	add    BYTE PTR [edi-0x5a],ah
  409407:	push   ebp
  409408:	jecxz  0x4093bb
  40940a:	cmp    eax,0x9866d5e0
  40940f:	in     al,0x2a
  409411:	push   es
  409412:	jbe    0x409441
  409414:	jmp    0x409425
  409416:	pop    esi
  409417:	or     bl,BYTE PTR [ebp+0x0]
  40941a:	aad    0x95
  40941c:	jp     0x409468
  40941e:	pop    ebp
  40941f:	not    BYTE PTR [esi-0x2a8cefd4]
  409425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409426:	mov    esi,DWORD PTR [edx+0x11]
  409429:	fsub   DWORD PTR ds:0x5e17458c
  40942f:	imul   DWORD PTR [eax+0x3c5c6246]
  409435:	test   BYTE PTR [edi-0x2d],ch
  409438:	xchg   ecx,eax
  409439:	jae    0x40943c
  40943b:	adc    cl,0x14
  40943e:	jmp    0x4ed877ab
  409443:	add    al,BYTE PTR [ebx-0x2a2f68c7]
  409449:	pop    eax
  40944a:	push   ebx
  40944b:	cli    
  40944c:	test   DWORD PTR [esi-0x65],esp
  40944f:	lods   eax,DWORD PTR ds:[esi]
  409450:	mov    edx,0xc20e7bc4
  409455:	dec    eax
  409456:	popa   
  409457:	jbe    0x40945c
  409459:	mov    edi,0x8fb29d5c
  40945e:	sbb    al,0x61
  409460:	ds (bad) 
  409462:	lods   al,BYTE PTR ds:[esi]
  409463:	sub    dh,ch
  409465:	pop    ds
  409466:	mov    BYTE PTR [ebx*4-0x300cfa69],ah
  40946d:	cwde   
  40946e:	dec    esp
  40946f:	mov    bh,0x2d
  409471:	out    0x7a,eax
  409473:	int3   
  409474:	nop
  409475:	add    cl,BYTE PTR [edi]
  409477:	add    ah,0x4e
  40947a:	jp     0x40943c
  40947c:	pop    ecx
  40947d:	ret    
  40947e:	adc    eax,edi
  409480:	pop    edx
  409481:	xor    eax,DWORD PTR [edx]
  409483:	loope  0x40942e
  409485:	xor    bl,dl
  409487:	(bad)  
  409489:	inc    ebx
  40948a:	lea    edx,[eax-0x1f]
  40948d:	imul   esi,esp,0xffffffca
  409490:	sti    
  409491:	and    bh,BYTE PTR [eax]
  409493:	aaa    
  409494:	mov    esp,0xcfb784a0
  409499:	mov    eax,es
  40949b:	push   esi
  40949c:	(bad)
  4094a1:	pop    es
  4094a2:	jbe    0x4094f2
  4094a4:	and    BYTE PTR [ebx+0xb],ah
  4094a7:	out    dx,eax
  4094a8:	xchg   BYTE PTR [edi-0x68b86d3f],dl
  4094ae:	xor    BYTE PTR ss:[ecx+0x13ee9cf5],bh
  4094b5:	adc    esp,DWORD PTR [ebx-0x27]
  4094b8:	push   DWORD PTR [edi+ecx*4+0x3097d32f]
  4094bf:	adc    DWORD PTR [esi+0x67a4ddbd],ecx
  4094c5:	addr16 test al,0x23
  4094c8:	sar    DWORD PTR [edi+edx*4],0x78
  4094cc:	jbe    0x409537
  4094ce:	stos   BYTE PTR es:[edi],al
  4094cf:	inc    ebp
  4094d0:	sbb    eax,0xd88f0ec7
  4094d5:	and    BYTE PTR ds:0x6ff7fcd0,0xda
  4094dc:	cvtdq2ps xmm5,xmm5
  4094df:	pop    esp
  4094e0:	das    
  4094e1:	push   ds
  4094e2:	int    0x38
  4094e4:	sqrtps xmm7,XMMWORD PTR [edx-0x6a]
  4094e8:	mov    ds,WORD PTR [edi-0x70705e7f]
  4094ee:	aam    0x7
  4094f0:	ret    
  4094f1:	mov    ?,WORD PTR [ecx]
  4094f3:	mov    eax,ds:0xd5b3dde0
  4094f8:	cmp    edi,DWORD PTR [ecx]
  4094fa:	xlat   BYTE PTR ds:[ebx]
  4094fb:	das    
  4094fc:	into   
  4094fd:	test   DWORD PTR [edx],esp
  4094ff:	mov    WORD PTR [esi+0x27],fs
  409502:	test   al,0xee
  409504:	mov    cl,0xe6
  409506:	mov    ebp,0x495ce02a
  40950b:	fsubr  st,st(2)
  40950d:	xchg   ebx,eax
  40950e:	mov    ebx,0x348fbe75
  409513:	fild   QWORD PTR [ebx+0x34]
  409516:	cwde   
  409517:	(bad)
  40951a:	pcmpeqb mm4,QWORD PTR [edx+0x8]
  40951e:	popa   
  40951f:	in     eax,0x73
  409521:	add    BYTE PTR [ecx-0x3b],dh
  409524:	sub    eax,0x4665f4a5
  409529:	dec    ebp
  40952a:	cmp    dh,cl
  40952c:	mov    BYTE PTR [ebp+0x7b],ch
  40952f:	stc    
  409530:	mov    ebp,0xde9279ba
  409535:	xchg   edx,eax
  409536:	or     BYTE PTR [ebx],0x53
  409539:	jae    0x4094d3
  40953b:	shl    bl,cl
  40953d:	push   edi
  40953e:	dec    eax
  40953f:	out    0xde,eax
  409541:	aaa    
  409542:	pop    esp
  409543:	inc    ebp
  409544:	inc    ebp
  409545:	cwde   
  409546:	imul   edi,ecx,0x29
  409549:	xor    cl,cl
  40954b:	ins    BYTE PTR es:[edi],dx
  40954c:	in     al,0x1d
  40954e:	scas   al,BYTE PTR es:[edi]
  40954f:	jo     0x40950f
  409551:	arpl   WORD PTR [esi],dx
  409553:	mov    esp,DWORD PTR [ebp+0xbb6e2f0]
  409559:	sbb    al,0x22
  40955b:	icebp  
  40955c:	test   eax,0x4c8f191
  409561:	mov    ebx,DWORD PTR [esi+0x75e7879e]
  409567:	fsubr  QWORD PTR [eax]
  409569:	jge    0x4095af
  40956b:	in     eax,0xf8
  40956d:	adc    DWORD PTR [ebx+0xfe43fa8],esi
  409573:	mov    ch,0x36
  409575:	cld    
  409576:	mov    edi,edi
  409578:	add    edi,DWORD PTR [edi-0x5c6f21cb]
  40957e:	popa   
  40957f:	jmp    0x7134:0xa19de4ce
  409586:	xor    al,0x85
  409588:	fidivr DWORD PTR [edx+0x59]
  40958b:	mov    bh,bh
  40958d:	push   ds
  40958e:	dec    esp
  40958f:	je     0x4095ec
  409591:	mov    esp,0x197e4e38
  409596:	xor    eax,0xc1b01c8d
  40959b:	pop    ds
  40959c:	mov    ds:0xbf45d127,eax
  4095a1:	sub    eax,0xfb2c876c
  4095a6:	and    al,0x32
  4095a8:	test   eax,0x8159ff6b
  4095ad:	loopne 0x4095da
  4095af:	inc    edx
  4095b0:	ret    0x7428
  4095b3:	jmp    0xfb3cee3
  4095b8:	xchg   edi,eax
  4095b9:	dec    esp
  4095ba:	call   0x38a2:0xc2fce9cd
  4095c1:	rol    DWORD PTR [ecx],0x91
  4095c4:	xchg   ecx,eax
  4095c5:	repnz rcr cl,1
  4095c8:	xor    al,0x3e
  4095ca:	xor    bl,BYTE PTR [edi-0x13]
  4095cd:	inc    ebp
  4095ce:	dec    ecx
  4095cf:	inc    ebx
  4095d0:	rol    edx,0xba
  4095d3:	xchg   esp,eax
  4095d4:	jg     0x40955e
  4095d6:	sbb    DWORD PTR [edi],eax
  4095d8:	or     BYTE PTR [esi+0x36],0x66
  4095dc:	and    al,0xc0
  4095de:	mul    bl
  4095e0:	aaa    
  4095e1:	cmp    BYTE PTR ss:[eax],ah
  4095e4:	pop    ds
  4095e5:	push   esi
  4095e6:	les    esi,FWORD PTR [edx+0x12]
  4095e9:	cdq    
  4095ea:	mov    bh,0x14
  4095ec:	dec    esp
  4095ed:	aad    0xc8
  4095ef:	ins    BYTE PTR es:[edi],dx
  4095f0:	adc    al,0x6c
  4095f2:	lahf   
  4095f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095f5:	dec    ebp
  4095f6:	mov    BYTE PTR ds:0xe3c6b459,ah
  4095fc:	(bad)  
  4095fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095fe:	inc    edi
  4095ff:	iret   
  409600:	shl    BYTE PTR [ebx+edx*4+0x40],0xb5
  409605:	(bad)  
  409607:	es inc ebx
  409609:	mov    cl,0xf5
  40960b:	rcl    BYTE PTR [edi+0x54c5bc31],1
  409611:	lods   al,BYTE PTR ds:[esi]
  409612:	std    
  409613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409614:	out    dx,al
  409615:	ficomp DWORD PTR [edi*8+0x74d101e3]
  40961c:	cmp    esi,DWORD PTR [eax]
  40961e:	das    
  40961f:	sub    al,0xf0
  409621:	jmp    0x2a600c61
  409626:	scas   eax,DWORD PTR es:[di]
  409628:	dec    ecx
  409629:	out    dx,eax
  40962a:	mov    ah,0x49
  40962c:	push   edi
  40962d:	jecxz  0x40963e
  40962f:	inc    esi
  409630:	(bad)  
  409631:	stos   DWORD PTR es:[edi],eax
  409632:	call   0xa5f8de55
  409637:	leave  
  409638:	xor    BYTE PTR fs:[edi+0x2625678e],0x5c
  409640:	(bad)  
  409641:	out    dx,al
  409642:	dec    edi
  409643:	out    0xb0,al
  409645:	cmc    
  409646:	mov    al,bl
  409648:	push   0x1ea1788b
  40964d:	adc    al,0xfe
  40964f:	rol    esi,0xab
  409652:	(bad)  
  409653:	pop    edi
  409654:	and    edi,ecx
  409656:	jg     0x4095ed
  409658:	xor    dl,BYTE PTR [ebx-0x7f]
  40965b:	push   ds
  40965c:	cwde   
  40965d:	or     DWORD PTR [esi+0x79],ebx
  409660:	mov    al,ds:0xbd5fe04b
  409665:	out    dx,al
  409666:	loope  0x409676
  409668:	icebp  
  409669:	scas   al,BYTE PTR es:[edi]
  40966a:	or     BYTE PTR [edx+ebp*4+0x38001751],0xe2
  409672:	stos   DWORD PTR es:[edi],eax
  409673:	ret    
  409674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409675:	iret   
  409676:	icebp  
  409677:	loopne 0x40963a
  409679:	pop    es
  40967a:	cmp    DWORD PTR [esi+0x752e616f],0x5538ab10
  409684:	test   DWORD PTR [ebx+ebp*8+0x1],ecx
  409688:	imul   edi,DWORD PTR [ebp-0x31],0xe5e1001c
  40968f:	push   0x657cf627
  409694:	mov    eax,ds:0x8a416577
  409699:	imul   edx,edi,0x6d9df7b8
  40969f:	pushf  
  4096a0:	adc    eax,0x8ba600a7
  4096a5:	(bad)  
  4096a6:	lea    ebp,[ebx-0x4b]
  4096a9:	aad    0xa3
  4096ab:	xor    bl,BYTE PTR [ebx-0x47776583]
  4096b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096b2:	jg     0x4096a8
  4096b4:	mov    al,ds:0x2577b082
  4096b9:	push   ebp
  4096ba:	ror    BYTE PTR [ecx+0x1b],0x8b
  4096be:	xchg   DWORD PTR [ebp+0x52],edx
  4096c1:	test   al,0xed
  4096c3:	stos   DWORD PTR es:[edi],eax
  4096c4:	pop    ecx
  4096c5:	mov    edx,0x5bf96d20
  4096ca:	fmul   st(3),st
  4096cc:	sti    
  4096cd:	cmp    eax,0x8b746ce4
  4096d2:	js     0x4096a6
  4096d4:	scas   al,BYTE PTR es:[edi]
  4096d5:	imul   esi,DWORD PTR [ebp+ebp*8+0x68],0x0
  4096da:	call   0x1d4c:0x531321f7
  4096e1:	pusha  
  4096e2:	pop    esp
  4096e3:	jle    0x409746
  4096e5:	or     eax,0x3e7cf4d5
  4096ea:	mov    ch,0x7b
  4096ec:	add    eax,eax
  4096ee:	mov    bl,0xd8
  4096f0:	jb     0x4096f3
  4096f2:	cs inc ebp
  4096f4:	mov    bl,0xf4
  4096f6:	inc    esp
  4096f7:	(bad)  
  4096f9:	xor    BYTE PTR [ebx],dh
  4096fb:	(bad)  
  4096fc:	cmc    
  4096fd:	out    0xa5,al
  4096ff:	addr16 pop ebp
  409701:	stos   BYTE PTR es:[edi],al
  409702:	xchg   ebp,eax
  409703:	sub    eax,0x6d2a9eee
  409708:	adc    esi,DWORD PTR [ecx]
  40970a:	push   0x45b550b9
  40970f:	jbe    0x409762
  409711:	mov    esi,0x39743c6e
  409716:	das    
  409717:	sbb    BYTE PTR [edi+0x5ba1b9d9],bl
  40971d:	jo     0x4096e8
  40971f:	xchg   edx,eax
  409720:	mov    bh,0xe3
  409722:	pop    eax
  409723:	add    eax,0x46721a02
  409728:	pop    ecx
  409729:	inc    esi
  40972a:	inc    esp
  40972b:	pushf  
  40972c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40972d:	jge    0x409761
  40972f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409730:	out    0xf9,eax
  409732:	rcr    DWORD PTR [esi-0x5fb89010],0xef
  409739:	call   0xd1c4:0x7ffb660a
  409740:	sub    eax,0xca22517
  409745:	rol    DWORD PTR [esp+ebx*2+0x55],1
  409749:	xor    cl,BYTE PTR [edi+eiz*2-0x25]
  40974d:	push   esp
  40974e:	lahf   
  40974f:	es (bad) 
  409751:	ja     0x4096d9
  409753:	dec    eax
  409754:	dec    eax
  409755:	xchg   ebx,eax
  409756:	add    eax,0x4db4ce8c
  40975b:	adc    BYTE PTR [edx],bh
  40975d:	loope  0x4096e7
  40975f:	and    eax,0x7281dbde
  409764:	fstp   DWORD PTR [ecx]
  409766:	xchg   DWORD PTR [edi],edx
  409768:	push   eax
  409769:	pop    ds
  40976a:	cld    
  40976b:	mov    ds:0xffac2c0,al
  409770:	push   esp
  409771:	mov    al,ds:0x3a59dde4
  409776:	cld    
  409777:	bound  esp,QWORD PTR [eax+ebp*1]
  40977a:	jne    0x409761
  40977c:	out    0x3a,al
  40977e:	outs   dx,DWORD PTR ds:[esi]
  40977f:	sub    bl,cl
  409781:	imul   eax,DWORD PTR ds:0x8bc7a1ca,0x54b59012
  40978b:	and    bl,BYTE PTR [eax-0x7c32d48a]
  409791:	sbb    eax,ebx
  409793:	and    ecx,ebx
  409795:	push   ecx
  409796:	sub    DWORD PTR [ecx+0x50c69b1],edx
  40979c:	test   eax,0x62eff393
  4097a1:	cmp    BYTE PTR [ecx+0x4d],bl
  4097a4:	sbb    BYTE PTR [edi],ch
  4097a6:	xchg   esi,eax
  4097a7:	ins    DWORD PTR es:[edi],dx
  4097a8:	mov    eax,0xd27886d0
  4097ad:	xor    DWORD PTR [ebx],0xffffffb4
  4097b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097b1:	sbb    eax,ebx
  4097b3:	mov    BYTE PTR [edi+0x5b],dl
  4097b6:	leave  
  4097b7:	jb     0x40975a
  4097b9:	adc    ah,cl
  4097bb:	repz in al,dx
  4097bd:	pop    edi
  4097be:	push   ecx
  4097bf:	icebp  
  4097c0:	outs   dx,BYTE PTR ds:[esi]
  4097c1:	cmp    eax,DWORD PTR [eax]
  4097c3:	pop    edx
  4097c4:	enter  0x92a1,0x5c
  4097c8:	out    dx,eax
  4097c9:	jmp    0x6a8:0x876ebc88
  4097d0:	mov    BYTE PTR [eax-0x4a],bh
  4097d3:	(bad)  
  4097d4:	mov    al,ds:0x3d460844
  4097d9:	out    dx,eax
  4097da:	fwait
  4097db:	jge    0x409791
  4097dd:	(bad)  
  4097de:	lds    esi,FWORD PTR [ecx+0x2f]
  4097e1:	inc    esi
  4097e2:	sahf   
  4097e3:	lgs    edx,FWORD PTR [ecx]
  4097e6:	retf   
  4097e7:	mov    cl,0x30
  4097e9:	xor    DWORD PTR [esi],ecx
  4097eb:	jl     0x409785
  4097ed:	setnp  cl
  4097f0:	shl    DWORD PTR [edx+eiz*8],1
  4097f3:	mov    WORD PTR gs:[ebx+0x65],ss
  4097f7:	pop    ebx
  4097f8:	pop    edx
  4097f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097fa:	fcmovbe st,st(2)
  4097fc:	mov    eax,0x14388a5d
  409801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409802:	ja     0x409825
  409804:	push   0x8c371415
  409809:	je     0x4097cc
  40980b:	jmp    0x33b2e8a2
  409810:	test   edx,edi
  409812:	xor    al,0x61
  409814:	je     0x40988e
  409816:	mov    cl,0x4e
  409818:	int3   
  409819:	cmc    
  40981a:	imul   esp,DWORD PTR [ebp+0x5eb9234f],0x4a
  409821:	mov    edi,0x29562f82
  409826:	stc    
  409827:	fldenv [edi-0x66]
  40982a:	mov    edx,0x290bd0e3
  40982f:	cmc    
  409830:	or     DWORD PTR [edi+ecx*8],0x9e2b0c9f
  409837:	pop    esi
  409838:	hlt    
  409839:	ja     0x409812
  40983b:	lock lds esp,FWORD PTR [eax]
  40983e:	js     0x4098b0
  409840:	das    
  409841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409842:	sbb    DWORD PTR [ebp-0xf],ebx
  409845:	int    0xb1
  409847:	loope  0x409815
  409849:	mov    dl,0x7a
  40984b:	jp     0x409818
  40984d:	sbb    bl,al
  40984f:	fnsave [eax+0x0]
  409852:	outs   dx,BYTE PTR ds:[esi]
  409853:	repz leave 
  409855:	pop    ecx
  409856:	and    eax,0x7dc2e83
  40985b:	test   al,0x5b
  40985d:	push   ss
  40985e:	and    eax,ebx
  409860:	int    0xa
  409862:	jp     0x409832
  409864:	push   ds
  409865:	lods   al,BYTE PTR ds:[esi]
  409866:	sub    eax,0x7df8eed2
  40986b:	mov    al,0x1e
  40986d:	pushf  
  40986e:	cmp    BYTE PTR [ebx+0x7],ah
  409871:	mov    ecx,0xb859869f
  409876:	mov    al,BYTE PTR [edi]
  409878:	addr16 jmp 0x5c50:0xb95af1bd
  409880:	push   es
  409881:	je     0x4098e0
  409883:	fstp   TBYTE PTR [edx+ebx*1]
  409886:	out    dx,al
  409887:	test   eax,0xf8cdc3df
  40988c:	aam    0x66
  40988e:	loop   0x40982d
  409890:	and    DWORD PTR [esi+0x320c5812],eax
  409896:	dec    esi
  409897:	pop    esi
  409898:	repz inc ebp
  40989a:	ficom  WORD PTR [esi-0x52]
  40989d:	inc    eax
  40989e:	lahf   
  40989f:	pop    ecx
  4098a0:	cmp    al,0x2
  4098a2:	sbb    al,0x7d
  4098a4:	cwde   
  4098a5:	jns    0x40990e
  4098a7:	pop    ebx
  4098a8:	mov    esi,DWORD PTR [ecx-0x1bdc0302]
  4098ae:	and    al,cl
  4098b0:	adc    ebp,DWORD PTR [edi+0x72]
  4098b3:	push   cs
  4098b4:	add    ebp,DWORD PTR [eax+eiz*4-0x10]
  4098b8:	hlt    
  4098b9:	pop    ds
  4098ba:	xor    al,BYTE PTR [ebp+0x2a6edb63]
  4098c0:	(bad)  
  4098c1:	mov    ds:0xa5f12255,al
  4098c6:	inc    edx
  4098c7:	add    al,0x82
  4098c9:	out    dx,al
  4098ca:	dec    edi
  4098cb:	pop    es
  4098cc:	dec    edi
  4098cd:	out    0xcc,eax
  4098cf:	push   0x6d
  4098d1:	es loope 0x409901
  4098d4:	xchg   edi,eax
  4098d5:	add    ecx,DWORD PTR [edx-0x3ddcb9f9]
  4098db:	out    dx,eax
  4098dc:	(bad)  
  4098dd:	dec    ecx
  4098de:	ins    DWORD PTR es:[edi],dx
  4098df:	lds    esp,FWORD PTR [ebx-0x74]
  4098e2:	add    al,0xdc
  4098e4:	xchg   ebx,eax
  4098e5:	into   
  4098e6:	(bad)  
  4098e7:	push   esi
  4098e8:	or     ah,BYTE PTR [eax-0x2]
  4098eb:	(bad)  
  4098ec:	cmc    
  4098ed:	jecxz  0x4098db
  4098ef:	inc    BYTE PTR [edx+0x6b71d9ee]
  4098f5:	add    DWORD PTR ds:0x30940983,0x99170ef7
  4098ff:	inc    ebx
  409900:	pop    ds
  409901:	loope  0x409954
  409903:	xchg   BYTE PTR [ebp+0x5c],cl
  409906:	daa    
  409907:	xor    eax,edi
  409909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40990a:	out    0xa,al
  40990c:	dec    ecx
  40990d:	pop    eax
  40990e:	dec    edx
  40990f:	mov    esp,eax
  409911:	sub    bl,BYTE PTR [eax+0x16]
  409914:	and    ecx,eax
  409916:	pop    DWORD PTR [ecx+ebx*8+0x7a5c7a63]
  40991d:	sub    BYTE PTR [edx+0x2f],dh
  409920:	into   
  409921:	fdiv   DWORD PTR [ebx+edx*4-0xd]
  409925:	popf   
  409926:	cli    
  409927:	push   DWORD PTR [edx+0x52]
  40992a:	addr16 lahf 
  40992c:	add    DWORD PTR [ebp-0x38],edx
  40992f:	scas   eax,DWORD PTR es:[edi]
  409930:	xor    al,0xac
  409932:	sbb    eax,0xf3506bd7
  409937:	retf   
  409938:	push   0xe76dfb49
  40993d:	cmp    DWORD PTR [eax-0x15],esp
  409940:	mov    WORD PTR [ebp+ebp*1-0x5f26223c],gs
  409947:	inc    esp
  409948:	mov    ah,0xe7
  40994a:	fdivr  DWORD PTR [esi]
  40994c:	and    esp,DWORD PTR [eax]
  40994e:	lahf   
  40994f:	adc    BYTE PTR [esi+esi*4],cl
  409952:	stos   BYTE PTR es:[edi],al
  409953:	daa    
  409954:	gs fwait
  409956:	in     eax,0x13
  409958:	addr16 mov ah,dh
  40995b:	mov    ecx,0xff8e1d99
  409960:	mov    ch,0x47
  409962:	gs jb  0x409963
  409965:	pop    ss
  409966:	and    eax,0x711ba344
  40996b:	push   es
  40996c:	mov    eax,0xa81eefd4
  409971:	fwait
  409972:	push   ss
  409973:	push   eax
  409974:	mov    dh,0x0
  409976:	cwde   
  409977:	push   es
  409978:	mov    ebp,0x55abae70
  40997d:	std    
  40997e:	cmp    DWORD PTR [eax+0x3a],ecx
  409981:	cmp    dh,BYTE PTR [edx+eiz*8]
  409984:	pop    edx
  409985:	fsub   QWORD PTR [esi-0x5c]
  409988:	adc    esp,ebx
  40998a:	daa    
  40998b:	in     eax,0x34
  40998d:	loop   0x4099a5
  40998f:	sti    
  409990:	les    ebx,FWORD PTR [edx+0x50]
  409993:	inc    ecx
  409994:	das    
  409995:	gs (bad) 
  409997:	in     eax,0xb7
  409999:	mov    bh,0x93
  40999b:	jb     0x40998a
  40999d:	(bad)  
  40999f:	mov    edi,0x4a237d42
  4099a4:	mov    WORD PTR [ebx],cs
  4099a6:	aam    0x2c
  4099a8:	dec    esp
  4099a9:	push   edi
  4099aa:	sti    
  4099ab:	cs aaa 
  4099ad:	fdiv   DWORD PTR [esi]
  4099af:	adc    BYTE PTR [ebx+ebp*4+0x50],bl
  4099b3:	sbb    edi,DWORD PTR [edi+0x1477b266]
  4099b9:	jle    0x409a2f
  4099bb:	pop    ss
  4099bc:	scas   al,BYTE PTR es:[edi]
  4099bd:	stos   DWORD PTR es:[edi],eax
  4099be:	inc    esp
  4099bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c0:	dec    esp
  4099c1:	(bad)  
  4099c3:	xchg   ecx,eax
  4099c4:	fs gs icebp 
  4099c7:	jae    0x4099d0
  4099c9:	push   ss
  4099ca:	mov    BYTE PTR [eax+0x796fba00],dl
  4099d0:	push   ebp
  4099d1:	jnp    0x409980
  4099d3:	mov    BYTE PTR [ecx],al
  4099d5:	and    eax,0xbd2ef79e
  4099da:	fstp   QWORD PTR [ebx+0x397b8ba1]
  4099e0:	in     eax,0x63
  4099e2:	fisttp WORD PTR [edi]
  4099e4:	dec    esp
  4099e5:	ret    0xd187
  4099e8:	shr    BYTE PTR [ebx],cl
  4099ea:	fwait
  4099eb:	ss dec esi
  4099ed:	shl    edx,0x8b
  4099f0:	daa    
  4099f1:	(bad)  [edi+edx*1+0x6d]
  4099f5:	pop    ebx
  4099f6:	jno    0x409988
  4099f8:	test   DWORD PTR [ebx],edx
  4099fa:	cmp    DWORD PTR [ecx-0x25],0xe55edf59
  409a01:	pop    ebp
  409a02:	stos   BYTE PTR es:[edi],al
  409a03:	lea    eax,[esi+0x43]
  409a06:	mov    dh,0x1e
  409a08:	dec    ebp
  409a09:	dec    edx
  409a0a:	je     0x409a1c
  409a0c:	push   edi
  409a0d:	ja     0x4099fc
  409a0f:	pop    ss
  409a10:	lods   al,BYTE PTR ds:[esi]
  409a11:	and    ebx,DWORD PTR ds:0x2a400f90
  409a17:	mov    esp,0xa0d96e2e
  409a1c:	jmp    FWORD PTR [edx]
  409a1e:	xchg   ecx,eax
  409a1f:	xchg   esp,eax
  409a20:	or     al,0x34
  409a22:	rcl    DWORD PTR es:[edi-0x64c4e5ed],1
  409a29:	add    DWORD PTR [ebx*1+0x3e2eb7ee],ebx
  409a30:	outs   dx,BYTE PTR ds:[esi]
  409a31:	bound  ebp,QWORD PTR [ebx+0x44]
  409a34:	lea    ebp,[ebx+0x21945b3d]
  409a3a:	inc    ecx
  409a3b:	neg    BYTE PTR [edx-0x68336884]
  409a41:	inc    edi
  409a42:	pop    edi
  409a43:	jl     0x409a2d
  409a45:	mov    WORD PTR [eax+0x490a1ab9],ds
  409a4b:	loope  0x409a24
  409a4d:	sbb    al,0x66
  409a4f:	nop
  409a50:	orps   xmm1,XMMWORD PTR [esi+0x4e78f83e]
  409a57:	jg     0x409a1e
  409a59:	cli    
  409a5a:	adc    DWORD PTR [edi],ecx
  409a5c:	pop    esp
  409a5d:	push   0x69
  409a5f:	idiv   DWORD PTR [edi+0x3eae03d4]
  409a65:	mov    ebp,0x88e154b6
  409a6a:	lods   eax,DWORD PTR ds:[esi]
  409a6b:	mov    ebx,0xa45dc6fc
  409a70:	arpl   si,si
  409a72:	ins    BYTE PTR es:[edi],dx
  409a73:	inc    ebx
  409a74:	xchg   BYTE PTR [ebx-0x46395da7],cl
  409a7a:	mov    esi,0xd4e5f16f
  409a7f:	(bad)  
  409a80:	inc    ebx
  409a81:	outs   dx,BYTE PTR ds:[esi]
  409a82:	dec    edi
  409a83:	jmp    0x89d6:0x54905ace
  409a8a:	jmp    0xdb3a0453
  409a8f:	ror    DWORD PTR [ecx-0x10416344],cl
  409a95:	push   ds
  409a96:	cdq    
  409a97:	mov    ebp,DWORD PTR [edi+0x44aa211a]
  409a9d:	mov    al,0xa8
  409a9f:	retf   0xb5ee
  409aa2:	sub    DWORD PTR [ecx+edi*1+0x168a0303],0xd3df4dc2
  409aad:	jns    0x409a34
  409aaf:	retf   0x602
  409ab2:	test   BYTE PTR [ebp+0x37c22696],bl
  409ab8:	sub    al,0x19
  409aba:	mov    cl,0xa2
  409abc:	mov    BYTE PTR [ecx-0x4c],0x9f
  409ac0:	pushf  
  409ac1:	cmp    al,0x6c
  409ac3:	jo     0x409b07
  409ac5:	xchg   esp,eax
  409ac6:	fcom   DWORD PTR [eax+ebp*8]
  409ac9:	inc    edx
  409aca:	mov    ah,0xb6
  409acc:	sbb    al,0xa8
  409ace:	inc    ebx
  409acf:	outs   dx,BYTE PTR ds:[esi]
  409ad0:	adc    BYTE PTR [ebp+ebp*4-0x79407416],0x94
  409ad8:	cdq    
  409ad9:	out    dx,eax
  409ada:	mov    esp,0x7ad683db
  409adf:	xchg   BYTE PTR [edi],al
  409ae1:	aad    0x50
  409ae3:	sub    al,0x68
  409ae5:	(bad)  [edi+0x2d]
  409ae8:	push   edi
  409ae9:	in     eax,dx
  409aea:	push   edx
  409aeb:	inc    edx
  409aec:	mov    bh,0xd5
  409aee:	dec    dx
  409af0:	daa    
  409af1:	adc    BYTE PTR [edi+0x512d49a8],al
  409af7:	inc    edx
  409af8:	stc    
  409af9:	test   al,0x67
  409afb:	xor    eax,0x3a2ff770
  409b00:	push   es
  409b01:	les    esp,FWORD PTR [ebx]
  409b03:	adc    BYTE PTR [edi-0x24],0x9d
  409b07:	imul   esi,esi,0x7f
  409b0a:	stc    
  409b0b:	stos   BYTE PTR es:[edi],al
  409b0c:	sub    dl,ah
  409b0e:	mov    ah,0x7d
  409b10:	pop    ecx
  409b11:	loope  0x409b28
  409b13:	cmp    DWORD PTR [edx],ecx
  409b15:	fnstcw WORD PTR es:[eax]
  409b18:	xor    BYTE PTR [edx],dl
  409b1a:	idiv   BYTE PTR [eax]
  409b1c:	stc    
  409b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b1e:	xchg   edi,eax
  409b1f:	in     eax,dx
  409b20:	push   edx
  409b21:	dec    ebp
  409b22:	inc    eax
  409b23:	push   edx
  409b24:	inc    edi
  409b25:	jmp    0x409b1a
  409b27:	mov    ds:0x30caf895,eax
  409b2c:	mov    edi,0xfff733e4
  409b31:	mov    bl,0x28
  409b33:	mul    BYTE PTR [ecx]
  409b35:	or     esi,DWORD PTR [edx-0x5e7d3f3]
  409b3b:	out    dx,al
  409b3c:	(bad)  
  409b3d:	enter  0x7cf0,0xc2
  409b41:	mov    ch,0xde
  409b43:	push   ecx
  409b44:	rcr    BYTE PTR [ecx+0x3acca7f0],0xfb
  409b4b:	jne    0x409b4c
  409b4d:	push   eax
  409b4e:	ds inc esi
  409b50:	lea    edi,[edx-0x13b89fae]
  409b56:	jne    0x409b2d
  409b58:	pop    esp
  409b59:	jp     0x409ae6
  409b5b:	add    esi,DWORD PTR ds:0xf3eb5d04
  409b61:	xchg   DWORD PTR [ecx-0x65],ebx
  409b64:	jns    0x409bc2
  409b66:	jmp    0x83584158
  409b6b:	test   BYTE PTR ds:0x633322fc,ch
  409b71:	push   0xffffffc8
  409b73:	mov    ds,WORD PTR [bx+si-0x7e8c]
  409b78:	scas   al,BYTE PTR es:[edi]
  409b79:	adc    edx,DWORD PTR [ebp-0x80]
  409b7c:	rcr    esp,0x37
  409b7f:	inc    ebx
  409b80:	mov    eax,0x21372420
  409b85:	popf   
  409b86:	lods   eax,DWORD PTR ds:[esi]
  409b87:	(bad)  
  409b88:	push   cs
  409b89:	or     eax,0xbd8118de
  409b8e:	lds    esi,FWORD PTR [ebx+0x5c]
  409b91:	jo     0x409bdd
  409b93:	sub    ecx,DWORD PTR [eax+eax*2]
  409b96:	adc    cl,bl
  409b98:	push   ebp
  409b99:	or     al,0x35
  409b9b:	out    0xf2,eax
  409b9d:	mov    edx,0x980edb87
  409ba2:	sahf   
  409ba3:	fcomp  DWORD PTR [ebp+0x345f7677]
  409ba9:	ja     0x409bdf
  409bab:	out    0x3e,eax
  409bad:	int    0xe0
  409baf:	lds    edi,FWORD PTR [ebp+eax*1-0x134b7e08]
  409bb6:	test   DWORD PTR [edx],ebx
  409bb8:	mov    ch,0xf
  409bba:	push   ebx
  409bbb:	fstp   TBYTE PTR [ecx-0x75d6492c]
  409bc1:	retf   0xba98
  409bc4:	xchg   esi,eax
  409bc5:	in     al,dx
  409bc6:	xchg   DWORD PTR [edx],ebp
  409bc8:	out    0x4b,al
  409bca:	cmp    DWORD PTR [ecx+0x1a1c1553],edi
  409bd0:	mov    bh,BYTE PTR [ebx-0x75]
  409bd3:	repnz out dx,al
  409bd5:	in     eax,dx
  409bd6:	inc    esp
  409bd7:	into   
  409bd8:	jb     0x409b7f
  409bda:	adc    bl,BYTE PTR [edi+0x1c375c58]
  409be0:	inc    edx
  409be1:	push   edx
  409be2:	add    eax,0xe57a4788
  409be7:	mov    dh,0xa
  409be9:	and    DWORD PTR [esi+ebx*1],edx
  409bec:	test   DWORD PTR [esi+0x6007132f],eax
  409bf2:	ret    0x3cb1
  409bf5:	(bad)  
  409bf6:	pop    ebx
  409bf7:	sbb    BYTE PTR [edx+ebx*2+0x2afd2dc9],al
  409bfe:	adc    ch,BYTE PTR [ecx]
  409c00:	xchg   BYTE PTR [esi-0x6e],dl
  409c03:	call   0x5ea683c4
  409c08:	add    cl,BYTE PTR [eax+edi*1]
  409c0b:	call   0xafb13f
  409c10:	adc    BYTE PTR [edx],dh
  409c12:	xchg   ebx,ebp
  409c14:	and    DWORD PTR [esi-0x64],0x17
  409c18:	push   eax
  409c19:	fmul   DWORD PTR [ebx-0x3]
  409c1c:	pop    ss
  409c1d:	mov    ch,0x81
  409c1f:	or     esi,DWORD PTR [ecx]
  409c21:	jecxz  0x409bbe
  409c23:	es movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  409c26:	mov    al,ds:0x44ea822a
  409c2b:	cmp    eax,0x682f97ec
  409c30:	jmp    0x603a9ad7
  409c35:	stos   BYTE PTR es:[edi],al
  409c36:	pop    ebp
  409c37:	aas    
  409c38:	fcomp  QWORD PTR [ebx+eax*2-0x40]
  409c3c:	sbb    dl,BYTE PTR [edi+0xa37a6b8]
  409c42:	push   esp
  409c43:	xchg   ecx,eax
  409c44:	cmp    eax,0xea4b5bab
  409c49:	in     al,0x37
  409c4b:	adc    al,0xa
  409c4d:	push   0x27022e48
  409c52:	sbb    cl,BYTE PTR [esi]
  409c54:	ret    0x76f2
  409c57:	inc    esp
  409c58:	cli    
  409c59:	outs   dx,BYTE PTR ds:[esi]
  409c5a:	mov    eax,0x50f24bda
  409c5f:	clc    
  409c60:	aam    0xe9
  409c62:	test   BYTE PTR [edi-0x2c],dl
  409c65:	and    al,0x6f
  409c67:	(bad)  
  409c68:	ret    
  409c69:	adc    BYTE PTR es:[edi-0x693803da],bh
  409c70:	retf   
  409c71:	icebp  
  409c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c73:	mov    edi,DWORD PTR [eax-0x2f]
  409c76:	xchg   ebx,eax
  409c77:	mov    edi,0x4bcae9d7
  409c7c:	push   es
  409c7d:	xchg   ebp,eax
  409c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c7f:	inc    edi
  409c80:	and    edi,DWORD PTR [esi]
  409c82:	pushf  
  409c83:	mov    ebx,DWORD PTR [edx]
  409c85:	mov    ebx,0x6cabb858
  409c8a:	je     0x409c56
  409c8c:	rcr    esi,1
  409c8e:	pop    edi
  409c8f:	int3   
  409c90:	dec    ecx
  409c91:	ret    
  409c92:	call   0x373c:0x48567e88
  409c99:	int    0xc5
  409c9b:	xchg   ebp,eax
  409c9c:	mov    ds:0xbe2da42b,al
  409ca1:	inc    esi
  409ca2:	push   ebp
  409ca3:	push   ds
  409ca4:	cmp    bl,ch
  409ca6:	sbb    esp,DWORD PTR [ebx-0x18d026e2]
  409cac:	popf   
  409cad:	jb     0x409d14
  409caf:	add    ecx,0x6
  409cb2:	rol    BYTE PTR [eax+0x2f03cb1],0x51
  409cb9:	retf   
  409cba:	mov    DWORD PTR [ecx+ebx*8+0x1],esi
  409cbe:	in     eax,0xa9
  409cc0:	adc    DWORD PTR [ebx+0x12d43854],esi
  409cc6:	ins    BYTE PTR es:[edi],dx
  409cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cc8:	fwait
  409cc9:	repnz fs mov esi,esi
  409ccd:	or     edx,ebx
  409ccf:	mov    bl,0xb2
  409cd1:	ss fsubrp st(5),st
  409cd4:	leave  
  409cd5:	fwait
  409cd6:	mov    ds:0x472f6eaa,eax
  409cdb:	cmp    eax,0xb143111f
  409ce0:	ror    bh,0xdf
  409ce3:	or     BYTE PTR [esi+0x1d],dh
  409ce6:	js     0x409d5b
  409ce8:	fnstenv [eax+ebp*2]
  409ceb:	xor    al,dl
  409ced:	pop    ebx
  409cee:	mov    al,0xe0
  409cf0:	mov    ebp,0x21cb6af0
  409cf5:	mov    ah,0xd6
  409cf7:	jge    0x409ca6
  409cf9:	das    
  409cfa:	pop    ebx
  409cfb:	retf   
  409cfc:	fiadd  WORD PTR [edi+0x52]
  409cff:	jne    0x409d20
  409d01:	fidivr WORD PTR [esi+0x7]
  409d04:	inc    edi
  409d05:	mov    dh,0x3b
  409d07:	shr    BYTE PTR [esi-0x6e],1
  409d0a:	dec    ebp
  409d0b:	and    DWORD PTR [eax+0x7517baad],esi
  409d11:	mov    dl,0x4
  409d13:	cmp    DWORD PTR [ebx+0x6b],0x87fb6b70
  409d1a:	pop    ecx
  409d1b:	inc    edx
  409d1c:	mov    edi,0xdf9e9201
  409d21:	pop    eax
  409d22:	adc    BYTE PTR [esi],bh
  409d24:	sahf   
  409d25:	jg     0x409cd4
  409d27:	fimul  DWORD PTR [eax]
  409d29:	stos   DWORD PTR es:[edi],eax
  409d2a:	xlat   BYTE PTR ds:[ebx]
  409d2b:	push   es
  409d2c:	push   cs
  409d2d:	mov    al,0x32
  409d2f:	xchg   DWORD PTR ds:0x39196c74,edi
  409d35:	int    0x35
  409d37:	sub    BYTE PTR [edx],dl
  409d39:	xor    ebx,ebx
  409d3b:	std    
  409d3c:	std    
  409d3d:	cmp    BYTE PTR [ebx],al
  409d3f:	in     eax,0xbc
  409d41:	in     al,dx
  409d42:	(bad)  
  409d43:	arpl   WORD PTR [edx],si
  409d45:	ficom  DWORD PTR [ebx-0x1]
  409d48:	hlt    
  409d49:	aad    0xb3
  409d4b:	(bad)  
  409d4c:	pop    ebp
  409d4d:	bnd call 0x4788c736
  409d53:	retf   0xfc75
  409d56:	cmp    eax,0x24c1a998
  409d5b:	fimul  WORD PTR [ebx-0x10]
  409d5e:	jnp    0x409dd2
  409d60:	jb     0x409d54
  409d62:	sbb    BYTE PTR [esi+edi*2-0x6f8e9d08],0x1f
  409d6a:	addr16 mov ds:0xc292,al
  409d6e:	add    dh,0x16
  409d71:	xchg   esp,eax
  409d72:	inc    BYTE PTR [edi+0x581fbe8a]
  409d78:	mov    ebp,0x8bea4741
  409d7d:	pop    ebx
  409d7e:	ret    0xd05f
  409d81:	das    
  409d82:	or     BYTE PTR [eax-0x581097df],al
  409d88:	jne    0x409da8
  409d8a:	cmp    esp,esp
  409d8c:	xchg   edx,eax
  409d8d:	pop    esi
  409d8e:	out    0x66,al
  409d90:	cmp    BYTE PTR [esp+eax*8-0x20],bl
  409d94:	and    BYTE PTR [ebp+0x5c1a0264],0x52
  409d9b:	mov    eax,0x4e2a29fc
  409da0:	adc    eax,0x262717d0
  409da5:	jne    0x409d5f
  409da7:	xchg   esi,eax
  409da8:	not    DWORD PTR [ecx]
  409daa:	add    eax,0xd9f4b2b0
  409daf:	out    dx,al
  409db0:	dec    edx
  409db1:	lods   eax,DWORD PTR ds:[esi]
  409db2:	dec    dx
  409db4:	pop    ds
  409db5:	es jb  0x409d4a
  409db8:	xchg   al,al
  409dba:	gs js  0x409de3
  409dbd:	mov    bh,BYTE PTR [eax]
  409dbf:	dec    ecx
  409dc0:	ins    DWORD PTR es:[edi],dx
  409dc1:	out    dx,al
  409dc2:	bound  ebx,QWORD PTR [edx+0x60]
  409dc5:	stc    
  409dc6:	pop    eax
  409dc7:	popf   
  409dc8:	lock mov BYTE PTR [eax],ah
  409dcb:	cmp    al,0xeb
  409dcd:	daa    
  409dce:	push   ss
  409dcf:	jle    0x409de0
  409dd1:	and    al,0x1b
  409dd3:	jl     0x409d92
  409dd5:	inc    edx
  409dd6:	dec    ecx
  409dd7:	shl    BYTE PTR [edx-0x3d47afa9],0xc5
  409dde:	push   ebx
  409ddf:	or     ch,BYTE PTR [ebp+edi*8-0x5b]
  409de3:	xchg   esp,eax
  409de4:	js     0x409dc8
  409de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de7:	mov    cl,0x3
  409de9:	push   0xbc94998f
  409dee:	cli    
  409def:	arpl   WORD PTR [bp+si],cx
  409df2:	aam    0x3b
  409df4:	mov    cl,0xa9
  409df6:	fst    QWORD PTR [eax+0x262f26f]
  409dfc:	and    esp,DWORD PTR [ebp-0x13]
  409dff:	jge    0x409e4a
  409e01:	xor    bh,BYTE PTR [ebp+esi*8+0x44fe8975]
  409e08:	pop    eax
  409e09:	inc    ebp
  409e0a:	outs   dx,BYTE PTR ds:[esi]
  409e0b:	and    DWORD PTR [esi+ebx*1],eax
  409e0e:	cld    
  409e0f:	adc    dl,BYTE PTR [ecx+ebx*4+0x35]
  409e13:	(bad)  
  409e14:	adc    eax,0x19f096f9
  409e19:	inc    di
  409e1b:	gs pop ds
  409e1d:	stc    
  409e1e:	and    DWORD PTR ds:0x9afa5917,esp
  409e24:	dec    BYTE PTR [ecx]
  409e26:	adc    DWORD PTR [eax-0x26eb7429],edx
  409e2c:	daa    
  409e2d:	fistp  QWORD PTR [edx]
  409e2f:	and    eax,DWORD PTR [ecx]
  409e31:	or     BYTE PTR [esi],cl
  409e33:	jno    0x409dd4
  409e35:	mov    BYTE PTR [edi+0x7d],dh
  409e38:	sbb    DWORD PTR [eax],0xfffffff0
  409e3b:	(bad)  
  409e3c:	ja     0x409e54
  409e3e:	jecxz  0x409e00
  409e40:	xchg   edi,eax
  409e41:	cwde   
  409e42:	mov    ds:0xf042b28f,al
  409e47:	cmp    ebp,ebx
  409e49:	and    DWORD PTR [edx+ecx*4],eax
  409e4c:	in     eax,dx
  409e4d:	repnz dec esi
  409e4f:	ret    0x5342
  409e52:	shl    DWORD PTR [edi],1
  409e54:	pop    ebp
  409e55:	out    0xd1,eax
  409e57:	add    edi,esp
  409e59:	adc    ch,BYTE PTR ss:0x52df3ee
  409e60:	stos   DWORD PTR es:[edi],eax
  409e61:	xor    al,0x44
  409e63:	cdq    
  409e64:	mov    edi,0x99c3b866
  409e69:	and    eax,0xe796825
  409e6e:	mov    eax,0x380d3d27
  409e73:	hlt    
  409e74:	rcl    BYTE PTR [edx-0x6a58650a],1
  409e7a:	test   DWORD PTR ds:0x2fa4c764,eax
  409e80:	mov    ecx,0xd16ddc0f
  409e85:	pusha  
  409e86:	push   ecx
  409e87:	loopne 0x409ed9
  409e89:	fwait
  409e8a:	xor    ah,BYTE PTR [ebx]
  409e8c:	push   edi
  409e8d:	sar    ebx,0x4c
  409e90:	fldcw  WORD PTR [ebx-0x2a]
  409e93:	sub    DWORD PTR [edx+0xb],0xde7c162c
  409e9a:	cmp    esp,DWORD PTR [ebp+0x6aba5ca8]
  409ea0:	(bad)  
  409ea1:	push   ds
  409ea2:	aas    
  409ea3:	inc    esp
  409ea4:	icebp  
  409ea5:	cld    
  409ea6:	mov    al,0x66
  409ea8:	adc    ah,BYTE PTR [eax+0x6b]
  409eab:	lods   al,BYTE PTR ds:[esi]
  409eac:	inc    ecx
  409ead:	popa   
  409eae:	enter  0xc5f2,0x36
  409eb2:	jmp    0x28df63f9
  409eb7:	jo     0x409e5b
  409eb9:	xchg   esp,eax
  409eba:	out    dx,eax
  409ebb:	jg     0x409e47
  409ebd:	int3   
  409ebe:	shr    ch,0x6a
  409ec1:	test   eax,0xd855e9
  409ec6:	cmp    eax,0x8fabb513
  409ecb:	jae    0x409e6d
  409ecd:	lds    eax,FWORD PTR [ebp-0x4b573070]
  409ed3:	add    ebp,ecx
  409ed5:	fst    QWORD PTR [eax]
  409ed7:	aad    0xa6
  409ed9:	les    esp,FWORD PTR [eax+edi*1-0x2b]
  409edd:	adc    DWORD PTR [ecx+eax*8+0x4],edi
  409ee1:	inc    edi
  409ee2:	loop   0x409eda
  409ee4:	outs   dx,DWORD PTR ds:[esi]
  409ee5:	push   esi
  409ee6:	in     eax,0xec
  409ee8:	cs xchg edi,eax
  409eea:	sbb    DWORD PTR [esi-0x4],esp
  409eed:	mov    ecx,0x7101090d
  409ef2:	into   
  409ef3:	push   DWORD PTR [edi+eiz*1+0x7f]
  409ef7:	mov    ch,0x6b
  409ef9:	push   eax
  409efa:	jo     0x409f22
  409efc:	std    
  409efd:	adc    al,0x28
  409eff:	cdq    
  409f00:	shl    al,1
  409f02:	cmp    ah,BYTE PTR [eax-0x5e]
  409f05:	in     al,dx
  409f06:	inc    ecx
  409f07:	aaa    
  409f08:	(bad)  
  409f09:	and    DWORD PTR [ecx],esp
  409f0b:	add    eax,DWORD PTR [ebp+0x5a]
  409f0e:	xchg   esi,eax
  409f0f:	leave  
  409f10:	sar    BYTE PTR [ebx-0x53],cl
  409f13:	sub    edi,eax
  409f15:	adc    cl,bl
  409f17:	in     eax,0xda
  409f19:	xlat   BYTE PTR ds:[ebx]
  409f1a:	pop    eax
  409f1b:	add    ch,BYTE PTR [eax+0x71]
  409f1e:	xor    DWORD PTR [edx-0x46ad1b0a],ebx
  409f24:	ss (bad) 
  409f26:	test   eax,0x22711aba
  409f2b:	mov    cl,0xd1
  409f2d:	jmp    0x5b118d3
  409f32:	addr16 iret 
  409f34:	pop    ebp
  409f35:	pushf  
  409f36:	je     0x409ebe
  409f38:	push   ds
  409f39:	xchg   BYTE PTR [edi+edx*2],dh
  409f3c:	lea    esp,[ebp+0x3b]
  409f3f:	arpl   WORD PTR [ebp+0x22],bx
  409f42:	xor    BYTE PTR [edi+0x67d66d38],cl
  409f48:	sub    eax,0x40461cf5
  409f4d:	fisub  WORD PTR [ecx-0x78]
  409f50:	or     edx,DWORD PTR [ebx]
  409f52:	loop   0x409ed6
  409f54:	push   cs
  409f55:	and    BYTE PTR [esi+0x221995c7],dh
  409f5b:	lds    esi,FWORD PTR [ebp+0x25]
  409f5e:	jbe    0x409f06
  409f60:	jg     0x409fe0
  409f62:	ret    
  409f63:	xchg   edx,eax
  409f64:	ret    
  409f65:	das    
  409f66:	mov    cl,0xc0
  409f68:	(bad)  
  409f69:	cmp    edx,DWORD PTR [ebx+0x54]
  409f6c:	jbe    0x409f7b
  409f6e:	in     eax,0x11
  409f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f71:	sbb    DWORD PTR [edx-0xf],ebp
  409f74:	bound  eax,QWORD PTR [eax-0x17e68f3f]
  409f7a:	xchg   ebp,eax
  409f7b:	icebp  
  409f7c:	sbb    al,0xc4
  409f7e:	add    cl,BYTE PTR [edx]
  409f80:	icebp  
  409f81:	xor    eax,ebx
  409f83:	mov    al,0x10
  409f85:	mov    ds:0x6f764529,eax
  409f8a:	jo     0x409f8e
  409f8c:	jmp    0x90329ba6
  409f91:	fild   DWORD PTR [edx+0x650bc5c6]
  409f97:	mov    ch,0x8c
  409f99:	mov    eax,0xf36d9f22
  409f9e:	daa    
  409f9f:	or     BYTE PTR [edx],dh
  409fa1:	inc    ecx
  409fa2:	push   ebp
  409fa3:	jb     0x409f7c
  409fa5:	push   eax
  409fa6:	add    ebp,DWORD PTR [ebx+0x5ef8dd33]
  409fac:	push   ebp
  409fad:	sub    esi,esp
  409faf:	and    al,0xa4
  409fb1:	jmp    0xfb03ec01
  409fb6:	sbb    al,0xf1
  409fb8:	mov    cl,0xde
  409fba:	sub    BYTE PTR [eax+0xd],0xd8
  409fbe:	dec    ecx
  409fbf:	jnp    0x409fc6
  409fc1:	call   0x7581:0x580e5fba
  409fc8:	in     eax,0xb4
  409fca:	mov    ch,0x9e
  409fcc:	push   edx
  409fcd:	or     DWORD PTR [edi+0x47371a67],0xdd5ac9fd
  409fd7:	push   es
  409fd8:	push   ebx
  409fd9:	loope  0x409f6f
  409fdb:	popf   
  409fdc:	dec    edi
  409fdd:	icebp  
  409fde:	aad    0x45
  409fe0:	push   edi
  409fe1:	mov    dl,0x69
  409fe3:	lods   al,BYTE PTR ds:[esi]
  409fe4:	jg     0x40a023
  409fe6:	outs   dx,DWORD PTR ds:[esi]
  409fe7:	fnstcw WORD PTR [eax]
  409fe9:	ja     0x409f82
  409feb:	in     eax,0xdd
  409fed:	clc    
  409fee:	repz xlat BYTE PTR ds:[ebx]
  409ff0:	mov    bh,0x11
  409ff2:	jae    0x40a002
  409ff4:	loop   0x40a049
  409ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ff7:	in     eax,0x6
  409ff9:	mov    esi,0x35030fc1
  409ffe:	push   edx
  409fff:	dec    eax
  40a000:	mov    bh,0xfc
  40a002:	mov    esp,eax
  40a004:	nop
  40a005:	std    
  40a006:	mov    ecx,0xbddbac2a
  40a00b:	add    DWORD PTR [edx],ebx
  40a00d:	mov    esi,0xf7455c5b
  40a012:	je     0x40a05e
  40a014:	outs   dx,DWORD PTR ds:[esi]
  40a015:	push   ebx
  40a016:	cmp    BYTE PTR ds:0x7423f85f,bh
  40a01c:	and    eax,0x48d91463
  40a021:	scas   al,BYTE PTR es:[edi]
  40a022:	push   ebx
  40a023:	pop    eax
  40a024:	xchg   ecx,eax
  40a025:	imul   esi,DWORD PTR [edi],0x4d
  40a028:	push   ecx
  40a029:	les    ebx,FWORD PTR [esi-0x26]
  40a02c:	retf   0x2166
  40a02f:	in     eax,0x59
  40a031:	mov    edx,0x6edba738
  40a036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a037:	dec    ebx
  40a038:	mov    eax,ds:0xb8147a2a
  40a03d:	in     al,dx
  40a03e:	sub    ecx,DWORD PTR [edx+0x75]
  40a041:	push   ebx
  40a042:	dec    esp
  40a043:	fdivr  DWORD PTR [edx-0x1f48f6e0]
  40a049:	or     al,0x61
  40a04b:	sahf   
  40a04c:	sbb    BYTE PTR [eax+0x27484876],bh
  40a052:	jl     0x40a02c
  40a054:	call   FWORD PTR [esi+0x5b]
  40a057:	mov    ch,0xc9
  40a059:	shl    ebp,1
  40a05b:	pusha  
  40a05c:	pop    eax
  40a05d:	jle    0x40a0a8
  40a05f:	(bad)  
  40a060:	lahf   
  40a061:	fist   DWORD PTR [eax-0x1dcd297]
  40a067:	adc    eax,0x3dc20d7f
  40a06c:	jl     0x40a077
  40a06e:	mov    ds:0xc8eb8fc8,al
  40a073:	fistp  QWORD PTR [eax-0x5fe3a25a]
  40a079:	xor    BYTE PTR [edx],cl
  40a07b:	fdecstp 
  40a07d:	ss (bad) 
  40a07f:	push   ecx
  40a080:	mov    gs,WORD PTR [edi]
  40a082:	jecxz  0x40a0c1
  40a084:	adc    al,0x35
  40a086:	xor    DWORD PTR [eax+0x75],0x5d3a9a91
  40a08d:	(bad)  
  40a08e:	pop    esp
  40a08f:	adc    ecx,eax
  40a091:	pop    esi
  40a092:	iret   
  40a093:	dec    ecx
  40a094:	scas   al,BYTE PTR es:[edi]
  40a095:	push   cs
  40a096:	push   ecx
  40a097:	mov    ecx,0x14e9391e
  40a09c:	push   edx
  40a09d:	mov    edi,0x8ca63b04
  40a0a2:	mov    WORD PTR [esi-0x690b6ee4],fs
  40a0a8:	push   cs
  40a0a9:	or     DWORD PTR [edi-0x6],0xffffffff
  40a0ad:	pop    ebp
  40a0ae:	or     bl,0xa2
  40a0b1:	daa    
  40a0b2:	dec    edx
  40a0b3:	jne    0x40a0e8
  40a0b5:	adc    eax,0x9d3dd83d
  40a0ba:	mov    edi,0x7e157dfa
  40a0bf:	mov    DWORD PTR [ebx],0x233ff70c
  40a0c5:	scas   eax,DWORD PTR es:[edi]
  40a0c6:	sti    
  40a0c7:	in     al,dx
  40a0c8:	mov    al,ds:0xb78ee96d
  40a0cd:	pop    ebx
  40a0ce:	outs   dx,BYTE PTR fs:[esi]
  40a0d0:	ins    BYTE PTR es:[edi],dx
  40a0d1:	scas   al,BYTE PTR es:[edi]
  40a0d2:	pop    es
  40a0d3:	outs   dx,DWORD PTR ds:[esi]
  40a0d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0d5:	popa   
  40a0d6:	cdq    
  40a0d7:	loopne 0x40a0d8
  40a0d9:	div    BYTE PTR [ecx-0x23e1cd5f]
  40a0df:	shl    DWORD PTR [esi-0x78484e9a],0x6c
  40a0e6:	div    DWORD PTR [edx]
  40a0e8:	imul   ebp,DWORD PTR [eax],0xfdacff44
  40a0ee:	fcmovnu st,st(4)
  40a0f0:	shr    ecx,cl
  40a0f2:	sbb    esp,0xddc28f7f
  40a0f8:	adc    cl,ch
  40a0fa:	mov    bh,0x23
  40a0fc:	not    BYTE PTR [ecx-0x18]
  40a0ff:	in     eax,0x8f
  40a101:	or     eax,0xd6c8b6d9
  40a106:	xor    al,0x90
  40a108:	adc    ch,ch
  40a10a:	or     dl,BYTE PTR [edi]
  40a10c:	iret   
  40a10d:	nop
  40a10e:	mov    ebx,0x5e27aa9d
  40a113:	je     0x40a0d4
  40a115:	jno    0x40a16d
  40a117:	dec    eax
  40a118:	mov    edi,0xe4184a07
  40a11d:	clc    
  40a11e:	les    edx,FWORD PTR [ebx-0x77]
  40a121:	(bad)  
  40a122:	jo     0x40a0e4
  40a124:	stos   DWORD PTR es:[edi],eax
  40a125:	int    0xb9
  40a127:	das    
  40a128:	adc    eax,0x7495d17b
  40a12d:	mov    dh,bh
  40a12f:	inc    ecx
  40a130:	push   ebp
  40a131:	addr16 es mov ch,0xb3
  40a135:	jne    0x40a164
  40a137:	clc    
  40a138:	lahf   
  40a139:	jg     0x40a0c7
  40a13b:	mov    ecx,ds
  40a13d:	jb     0x40a19a
  40a13f:	hlt    
  40a140:	stos   BYTE PTR es:[edi],al
  40a141:	inc    esi
  40a142:	leave  
  40a143:	add    al,0x41
  40a145:	icebp  
  40a146:	and    al,BYTE PTR [eax-0x51]
  40a149:	cmp    al,0xbc
  40a14b:	mov    eax,ds:0x47ef9db1
  40a150:	xchg   ebx,eax
  40a151:	pop    edi
  40a152:	test   BYTE PTR [edx-0x53e54e50],0x43
  40a159:	js     0x40a1ab
  40a15b:	cld    
  40a15c:	and    eax,0xa9011dcf
  40a161:	inc    ebx
  40a162:	mov    ds:0xb89f435d,eax
  40a167:	lods   eax,DWORD PTR ds:[esi]
  40a168:	call   0x6408:0x303ed856
  40a16f:	jnp    0x40a19a
  40a171:	xor    DWORD PTR [edx+0x3d9a072f],edi
  40a177:	dec    edi
  40a178:	cmc    
  40a179:	jmp    0x40a1cf
  40a17b:	pop    es
  40a17c:	mov    bl,0xaa
  40a17e:	cdq    
  40a17f:	ret    
  40a180:	rol    DWORD PTR [edi+0x1a],cl
  40a183:	xor    eax,0x38105f08
  40a188:	cmp    bh,al
  40a18a:	adc    esp,DWORD PTR [edx+esi*8]
  40a18d:	sub    dl,BYTE PTR [edx-0x43]
  40a190:	adc    dl,al
  40a192:	js     0x40a1ec
  40a194:	jb     0x40a1f1
  40a196:	or     edx,DWORD PTR [eax-0x52ba8cdc]
  40a19c:	retf   
  40a19d:	mov    al,ds:0xf87a8eba
  40a1a2:	adc    BYTE PTR [ebp-0x21bfe874],cl
  40a1a8:	test   eax,esi
  40a1aa:	or     eax,0x120fc538
  40a1af:	xor    DWORD PTR ss:[edx-0x49],esi
  40a1b3:	jp     0x40a22c
  40a1b5:	xchg   esi,eax
  40a1b6:	repz std 
  40a1b8:	pop    esi
  40a1b9:	ret    
  40a1ba:	fsub   DWORD PTR [esi]
  40a1bc:	test   BYTE PTR [edx],al
  40a1be:	xchg   edi,eax
  40a1bf:	add    BYTE PTR [edx-0x4bcc5130],dl
  40a1c5:	loop   0x40a159
  40a1c7:	stos   BYTE PTR es:[edi],al
  40a1c8:	in     eax,0x1e
  40a1ca:	mov    ebx,0x4bb88b7e
  40a1cf:	fiadd  WORD PTR ds:0x2e2676a7
  40a1d5:	out    dx,al
  40a1d6:	jp     0x40a1d0
  40a1d8:	mov    ebp,0x92b5206
  40a1dd:	sbb    edi,eax
  40a1df:	rcl    BYTE PTR [esi+0x52140222],cl
  40a1e5:	adc    BYTE PTR [ebx+0x52],dh
  40a1e8:	xchg   esi,eax
  40a1e9:	outs   dx,DWORD PTR ds:[esi]
  40a1ea:	sub    ebp,DWORD PTR [edi-0x2b]
  40a1ed:	or     eax,DWORD PTR [edx]
  40a1ef:	scas   al,BYTE PTR es:[edi]
  40a1f0:	scas   al,BYTE PTR es:[edi]
  40a1f1:	add    BYTE PTR [eax],0x32
  40a1f4:	dec    eax
  40a1f5:	test   al,0x82
  40a1f7:	dec    ecx
  40a1f8:	inc    eax
  40a1f9:	mov    dh,0xc2
  40a1fb:	adc    ecx,ebx
  40a1fd:	mov    cl,0x85
  40a1ff:	repnz inc ecx
  40a201:	mov    dl,BYTE PTR [ebp-0x66597ddf]
  40a207:	sub    edi,DWORD PTR [ebx+ebx*4-0x63]
  40a20b:	jno    0x40a26d
  40a20d:	in     eax,dx
  40a20e:	imul   eax,esi,0xfd90c41b
  40a214:	mov    cl,0xcd
  40a216:	xchg   ebx,eax
  40a217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a218:	in     al,0x29
  40a21a:	inc    edi
  40a21b:	mov    ds:0x588faf2b,eax
  40a220:	mov    dl,0x55
  40a222:	push   es
  40a223:	sbb    edx,ecx
  40a225:	mov    bh,0xc9
  40a227:	mov    edi,0x35556d4
  40a22c:	fs (bad) 
  40a22e:	jns    0x40a246
  40a230:	sub    al,BYTE PTR [edi-0x57]
  40a233:	outs   dx,BYTE PTR ds:[esi]
  40a234:	adc    ecx,DWORD PTR [eax-0x678b6ecf]
  40a23a:	sahf   
  40a23b:	cmp    DWORD PTR [ebp+0x2],eax
  40a23e:	jns    0x40a257
  40a240:	adc    ecx,0x1cb27c16
  40a246:	and    al,0x38
  40a248:	(bad)  
  40a24a:	fs or  dl,cl
  40a24d:	inc    eax
  40a24e:	je     0x40a27b
  40a250:	sahf   
  40a251:	fwait
  40a252:	cwde   
  40a253:	mov    ch,0x57
  40a255:	jge    0x40a258
  40a257:	retf   0x6998
  40a25a:	repnz inc ebp
  40a25c:	fcomp  st(6)
  40a25e:	mov    bh,0x8
  40a260:	mov    al,ds:0x5ff334e7
  40a265:	std    
  40a266:	or     ah,BYTE PTR [esp+ebx*2+0x36]
  40a26a:	add    eax,0xc8c8422d
  40a26f:	loopne 0x40a2be
  40a271:	pop    edx
  40a272:	and    edx,DWORD PTR [edi*4+0x7269895a]
  40a279:	cmc    
  40a27a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a27b:	jg     0x40a266
  40a27d:	shl    BYTE PTR [edx+ecx*4-0x7b],cl
  40a281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a282:	xor    cl,BYTE PTR [ebp+0x6cbd1ce0]
  40a288:	or     eax,0xe14e22db
  40a28d:	or     DWORD PTR [ebx+0x52859a10],edi
  40a293:	push   edi
  40a294:	cdq    
  40a295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a296:	stos   BYTE PTR es:[edi],al
  40a297:	dec    ebx
  40a298:	sub    BYTE PTR [eax-0x6b],al
  40a29b:	sbb    edx,DWORD PTR [esi]
  40a29d:	mov    eax,ds:0x14b85fd8
  40a2a2:	jge    0x40a290
  40a2a4:	cmc    
  40a2a5:	inc    eax
  40a2a6:	sti    
  40a2a7:	cwde   
  40a2a8:	lahf   
  40a2a9:	rcl    BYTE PTR [ebx+0x5a62c07],cl
  40a2af:	inc    eax
  40a2b0:	data16 loope 0x40a312
  40a2b3:	jnp    0x40a2d2
  40a2b5:	loop   0x40a2d2
  40a2b7:	ins    BYTE PTR es:[edi],dx
  40a2b8:	xchg   esi,eax
  40a2b9:	fwait
  40a2ba:	and    al,BYTE PTR [edx+0x2]
  40a2bd:	(bad)  
  40a2be:	dec    edx
  40a2bf:	repnz iret 
  40a2c1:	jbe    0x40a2f7
  40a2c3:	add    dl,BYTE PTR [ebp-0x6c]
  40a2c6:	and    edi,edi
  40a2c8:	or     cl,BYTE PTR [ecx-0x66e8c736]
  40a2ce:	outs   dx,DWORD PTR ds:[esi]
  40a2cf:	dec    esi
  40a2d0:	je     0x40a34b
  40a2d2:	repz mov bl,0x27
  40a2d5:	imul   ebx,edx,0x45
  40a2d8:	push   edi
  40a2d9:	sahf   
  40a2da:	jl     0x40a31b
  40a2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2dd:	sbb    ch,dl
  40a2df:	xacquire xchg DWORD PTR [esi-0x65],ecx
  40a2e3:	fisttp QWORD PTR gs:[ebx+0xea45d23]
  40a2ea:	xchg   ecx,eax
  40a2eb:	push   0xb2eae463
  40a2f0:	add    ch,BYTE PTR [eax-0x3883e404]
  40a2f6:	push   ss
  40a2f7:	and    DWORD PTR [edx],ebx
  40a2f9:	(bad)
  40a2fc:	push   es
  40a2fd:	mov    ebx,0xc87994b
  40a302:	popf   
  40a303:	pop    eax
  40a304:	add    DWORD PTR [edx+0x76],edi
  40a307:	rcr    DWORD PTR [ecx],cl
  40a309:	cmp    DWORD PTR fs:[esi-0x358402fa],esi
  40a310:	pop    ss
  40a311:	push   ebp
  40a312:	int    0xe9
  40a314:	shl    BYTE PTR [esi-0x243421e1],cl
  40a31a:	push   eax
  40a31b:	jo     0x40a2b1
  40a31d:	mov    esi,0x2039c9f7
  40a322:	test   ecx,ebp
  40a324:	sub    al,0xb5
  40a326:	jno    0x40a328
  40a328:	push   eax
  40a329:	hlt    
  40a32a:	adc    eax,0xe3373600
  40a32f:	lea    ecx,[ebp+eax*8+0x5a6dcc51]
  40a336:	mov    eax,0xfb02f1a9
  40a33b:	sbb    al,0x68
  40a33d:	mov    edi,0x42ea1b7c
  40a342:	lods   al,BYTE PTR ds:[esi]
  40a343:	lods   eax,DWORD PTR ds:[esi]
  40a344:	out    dx,eax
  40a345:	push   edx
  40a346:	js     0x40a30d
  40a348:	fs dec ebp
  40a34a:	int    0x49
  40a34c:	cdq    
  40a34d:	fisubr WORD PTR [ecx]
  40a34f:	ret    
  40a350:	test   DWORD PTR [ecx+0xc60c33a],ebp
  40a356:	push   0xffffffc2
  40a358:	jmp    0xea23833
  40a35d:	xchg   ecx,eax
  40a35e:	push   0xfffffffc
  40a360:	adc    DWORD PTR [edx+edi*4],eax
  40a363:	sub    eax,0x84c6bb35
  40a368:	xchg   ch,al
  40a36a:	push   ebx
  40a36b:	xor    BYTE PTR [ecx+eiz*8-0x550395c0],ch
  40a372:	mov    ds:0xc977da24,al
  40a377:	fstp   DWORD PTR [ebx]
  40a379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a37a:	jle    0x40a3e3
  40a37c:	shr    DWORD PTR [edx-0x3eb4b729],0xb6
  40a383:	cmc    
  40a384:	sbb    eax,0x9818ad10
  40a389:	outs   dx,BYTE PTR ds:[esi]
  40a38a:	stos   DWORD PTR es:[edi],eax
  40a38b:	sub    al,BYTE PTR [esi]
  40a38d:	into   
  40a38e:	add    DWORD PTR [edx+0x53],ebp
  40a391:	out    dx,al
  40a392:	mov    cl,0x34
  40a394:	cwde   
  40a395:	sub    BYTE PTR [edx],bh
  40a397:	jne    0x40a38f
  40a399:	lods   al,BYTE PTR ds:[esi]
  40a39a:	pop    edi
  40a39b:	outs   dx,DWORD PTR ds:[esi]
  40a39c:	rcr    BYTE PTR [edi-0x29],0x6c
  40a3a0:	mov    dl,0xfb
  40a3a2:	std    
  40a3a3:	dec    ebx
  40a3a4:	mov    cl,0x97
  40a3a6:	into   
  40a3a7:	add    ch,0x80
  40a3aa:	sahf   
  40a3ab:	pushf  
  40a3ac:	pop    esi
  40a3ad:	cmp    bh,BYTE PTR [ecx]
  40a3af:	mov    dl,0x35
  40a3b1:	pop    ebx
  40a3b2:	dec    esp
  40a3b3:	mov    cl,0x37
  40a3b5:	stos   BYTE PTR es:[edi],al
  40a3b6:	push   cs
  40a3b7:	cmp    dl,BYTE PTR [edi]
  40a3b9:	sbb    al,0xc7
  40a3bc:	sub    ebp,0x39
  40a3bf:	stos   BYTE PTR es:[edi],al
  40a3c0:	mov    ah,al
  40a3c2:	lods   al,BYTE PTR ds:[esi]
  40a3c3:	dec    esp
  40a3c4:	loopne 0x40a3b9
  40a3c6:	push   eax
  40a3c7:	jle    0x40a3f4
  40a3c9:	ins    DWORD PTR es:[edi],dx
  40a3ca:	ret    0x1d88
  40a3cd:	mov    dh,ah
  40a3cf:	lea    ecx,[edi]
  40a3d1:	nop
  40a3d2:	lds    esp,FWORD PTR [ecx+edx*2-0x5d]
  40a3d6:	inc    eax
  40a3d7:	cmc    
  40a3d8:	sub    DWORD PTR [edx+0x14ff5d24],esi
  40a3de:	out    0x92,eax
  40a3e0:	dec    ebx
  40a3e1:	cmp    DWORD PTR [ebp+0x744e25e3],edx
  40a3e7:	jno    0x40a40a
  40a3e9:	xor    edi,DWORD PTR [eax-0x7a]
  40a3ec:	sbb    BYTE PTR [esi+0x586d9422],bl
  40a3f2:	or     al,0x6e
  40a3f4:	je     0x40a3ad
  40a3f6:	xor    eax,0x1df4412a
  40a3fb:	ret    
  40a3fc:	popf   
  40a3fd:	call   0x7829:0x902cf765
  40a404:	fcomp  DWORD PTR [ecx+0xfea66b]
  40a40a:	push   cs
  40a40b:	out    0xf0,al
  40a40d:	mov    BYTE PTR [eax],bh
  40a40f:	dec    ebx
  40a410:	stos   BYTE PTR es:[edi],al
  40a411:	adc    al,0x19
  40a413:	je     0x40a493
  40a415:	jb     0x40a3f7
  40a417:	dec    edi
  40a418:	test   eax,0xbdee5c9f
  40a41d:	shl    bh,cl
  40a41f:	xchg   ebx,eax
  40a420:	rol    DWORD PTR [esi],cl
  40a422:	sti    
  40a423:	push   eax
  40a424:	jecxz  0x40a3f5
  40a426:	adc    al,0xf9
  40a428:	lahf   
  40a429:	adc    eax,0xd3ee93fa
  40a42e:	jp     0x40a3ca
  40a430:	repz sbb bl,cl
  40a433:	cdq    
  40a434:	fs ss adc edi,edx
  40a438:	clc    
  40a439:	mov    ebx,0x15523780
  40a43e:	adc    ecx,DWORD PTR ds:0x984215f6
  40a444:	xchg   esi,eax
  40a445:	gs jbe 0x40a499
  40a448:	cwde   
  40a449:	hlt    
  40a44a:	adc    eax,0xc976bdf
  40a44f:	add    DWORD PTR [esi+0x34],eax
  40a452:	iret   
  40a453:	js     0x40a3f6
  40a455:	addr16 hlt 
  40a457:	cwde   
  40a458:	cld    
  40a459:	mov    dh,0xfa
  40a45b:	push   edx
  40a45c:	rcr    BYTE PTR [edi-0x7f38ca02],1
  40a462:	xchg   ecx,eax
  40a463:	test   BYTE PTR ds:0x4aea634,dl
  40a469:	jmp    0x994a:0x1dbdf9d2
  40a470:	jle    0x40a4c1
  40a472:	xchg   ebx,eax
  40a473:	or     ecx,DWORD PTR [edi+0x2dff4977]
  40a479:	scas   al,BYTE PTR es:[edi]
  40a47a:	lock adc BYTE PTR [edi],bl
  40a47d:	scas   eax,DWORD PTR es:[edi]
  40a47e:	cmp    al,0x76
  40a480:	push   ss
  40a481:	pop    DWORD PTR [ebx+0x7cbd6a9c]
  40a487:	push   cs
  40a488:	imul   ebp,DWORD PTR [ecx],0x4cd7a451
  40a48e:	cmp    BYTE PTR [ebx+0x4eb83d95],bl
  40a494:	ss sub al,0x3b
  40a497:	mov    BYTE PTR [esi-0x30],ch
  40a49a:	aam    0x22
  40a49c:	add    DWORD PTR [ebx+0x1],ebx
  40a49f:	sahf   
  40a4a0:	xor    edx,DWORD PTR [ebx-0x41]
  40a4a3:	lods   al,BYTE PTR ds:[esi]
  40a4a4:	daa    
  40a4a5:	out    dx,al
  40a4a6:	rcr    DWORD PTR [eax+edi*2-0x37],0x99
  40a4ab:	adc    eax,0x1db6e76d
  40a4b0:	sub    eax,0xaf4ca26c
  40a4b5:	inc    ebp
  40a4b6:	out    dx,al
  40a4b7:	sbb    DWORD PTR [edx],0x14399963
  40a4bd:	mov    ah,BYTE PTR [esi+ecx*1+0x1da74fbf]
  40a4c4:	stos   BYTE PTR es:[edi],al
  40a4c5:	shr    BYTE PTR [edi],cl
  40a4c7:	(bad)  [ecx]
  40a4c9:	sbb    edx,DWORD PTR [esi+0x24]
  40a4cc:	add    eax,0x122e67d2
  40a4d1:	lock mov DWORD PTR [ebp+0x4d],0x6364fc56
  40a4d9:	mov    dl,0x7f
  40a4db:	pop    ecx
  40a4dc:	mov    ds:0xd52ed5b,al
  40a4e1:	dec    eax
  40a4e2:	sbb    cl,BYTE PTR [edx+0x3e]
  40a4e5:	push   edx
  40a4e6:	stc    
  40a4e7:	int3   
  40a4e8:	sbb    al,0x88
  40a4ea:	mov    eax,0x113521a8
  40a4ef:	pop    edx
  40a4f0:	shr    cl,0x7d
  40a4f3:	test   BYTE PTR [ebp+ebp*8+0x30],dh
  40a4f7:	adc    eax,0x8cd9c4d
  40a4fc:	leave  
  40a4fd:	push   0xc33b0940
  40a502:	inc    ebx
  40a503:	add    eax,DWORD PTR [ebx+0x31c4f21a]
  40a509:	ss cmc 
  40a50b:	fist   DWORD PTR [eax-0x3bcdcb9b]
  40a511:	cmp    eax,0x71eb5e5e
  40a516:	out    dx,al
  40a517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a518:	xchg   ecx,eax
  40a519:	inc    esp
  40a51a:	jae    0x40a595
  40a51c:	sbb    BYTE PTR [eax],cl
  40a51e:	sbb    al,0xa6
  40a520:	test   al,0xff
  40a522:	into   
  40a523:	xchg   DWORD PTR [esi+ebp*8-0x1e],eax
  40a527:	fisttp DWORD PTR [esi]
  40a529:	jl     0x40a561
  40a52b:	mov    ds:0x460335a8,eax
  40a530:	sti    
  40a531:	retf   
  40a532:	and    ah,BYTE PTR [ebp+0x7b69b732]
  40a538:	mov    eax,ds:0x1eef6028
  40a53d:	mov    WORD PTR [esi],ss
  40a53f:	add    ch,ah
  40a541:	mov    DWORD PTR [ebp+0x28],edi
  40a544:	xlat   BYTE PTR ds:[ebx]
  40a545:	xor    ebx,DWORD PTR [bx+si]
  40a548:	sbb    ebp,0x5b9aa3fa
  40a54e:	test   BYTE PTR [edi-0x6d],ch
  40a551:	push   eax
  40a552:	ror    DWORD PTR [eax-0x146f3d0a],0x58
  40a559:	sahf   
  40a55a:	ins    BYTE PTR es:[edi],dx
  40a55b:	mov    fs,WORD PTR ds:[ecx-0x38]
  40a55f:	outs   dx,DWORD PTR ds:[si]
  40a561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a562:	or     bl,ch
  40a564:	ins    DWORD PTR es:[edi],dx
  40a565:	out    dx,eax
  40a566:	out    dx,eax
  40a567:	idiv   BYTE PTR [edx+edx*8-0x5df5ff88]
  40a56e:	and    al,0x35
  40a570:	inc    esi
  40a571:	bound  eax,QWORD PTR [ecx-0xfbcbcbc]
  40a577:	sub    cl,BYTE PTR [esi]
  40a579:	cmp    eax,0xa38856b3
  40a57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a57f:	mov    esp,edx
  40a581:	(bad)  
  40a582:	sub    al,0x4a
  40a584:	sar    esi,0x21
  40a587:	test   BYTE PTR [esi+0x17],dl
  40a58a:	push   esi
  40a58b:	mov    dl,0x64
  40a58d:	pushf  
  40a58e:	aas    
  40a58f:	xchg   ebp,eax
  40a590:	outs   dx,BYTE PTR ds:[esi]
  40a591:	sbb    al,0xd6
  40a593:	arpl   WORD PTR [esi],cx
  40a595:	into   
  40a596:	ss push 0xdf581032
  40a59c:	loop   0x40a53c
  40a59e:	out    0xd2,eax
  40a5a0:	retf   0xf14
  40a5a3:	jle    0x40a543
  40a5a5:	mov    esp,0x75782c6f
  40a5aa:	inc    ecx
  40a5ab:	outs   dx,DWORD PTR ds:[esi]
  40a5ac:	(bad)  
  40a5ad:	mov    cs,WORD PTR [ebx-0x2de89e4]
  40a5b3:	xchg   esi,eax
  40a5b4:	mov    ebp,0x6e40649
  40a5b9:	imul   edx,DWORD PTR [ebx],0x6a24fc82
  40a5bf:	fisttp WORD PTR [edi+0x2218308e]
  40a5c5:	div    DWORD PTR [ebx-0x776ad129]
  40a5cb:	jnp    0x40a56d
  40a5cd:	daa    
  40a5ce:	mov    esi,0x77401022
  40a5d3:	pop    esi
  40a5d4:	ss dec ebp
  40a5d6:	mov    edx,0x4d777a7c
  40a5db:	loope  0x40a64f
  40a5dd:	in     al,dx
  40a5de:	mov    esi,0x7d350360
  40a5e3:	sahf   
  40a5e4:	mov    esp,0x9f0cbeb3
  40a5e9:	rcr    esi,0xdd
  40a5ec:	inc    eax
  40a5ed:	push   edi
  40a5ee:	lods   al,BYTE PTR ds:[esi]
  40a5ef:	push   es
  40a5f0:	lock jmp 0x40a581
  40a5f3:	or     al,0xcf
  40a5f5:	mov    ah,bl
  40a5f7:	mov    ah,0x59
  40a5f9:	mov    al,0xbd
  40a5fb:	ins    DWORD PTR es:[edi],dx
  40a5fc:	repnz stc 
  40a5fe:	leave  
  40a5ff:	shl    BYTE PTR [ebx+0x66a1746],1
  40a605:	add    esi,DWORD PTR [esi]
  40a607:	jmp    0xff29:0x93030664
  40a60e:	(bad)  
  40a610:	or     cl,BYTE PTR [ebp+0x4c88be4f]
  40a616:	inc    eax
  40a617:	test   DWORD PTR [ecx-0x56],edx
  40a61a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a61b:	dec    eax
  40a61c:	jne    0x40a64c
  40a61e:	popf   
  40a61f:	pushf  
  40a620:	xor    eax,0x955ed8b5
  40a625:	adc    esi,DWORD PTR [edi+ebp*2+0x39]
  40a629:	leave  
  40a62a:	and    al,0xdd
  40a62c:	xchg   esp,eax
  40a62d:	xchg   ecx,eax
  40a62e:	arpl   WORD PTR [eax+0x55],si
  40a631:	je     0x40a5c1
  40a633:	xor    DWORD PTR es:[edi],esp
  40a636:	cli    
  40a637:	stc    
  40a638:	jp     0x40a661
  40a63a:	xchg   edx,eax
  40a63b:	fwait
  40a63c:	pop    ebx
  40a63d:	cmp    dh,cl
  40a63f:	fimul  DWORD PTR ds:0x506b79da
  40a645:	adc    dh,ch
  40a647:	fwait
  40a648:	popa   
  40a649:	shl    BYTE PTR [ebp-0x6f],1
  40a64c:	xchg   esp,eax
  40a64d:	xchg   ebp,eax
  40a64e:	adc    edx,DWORD PTR [edi+edx*4+0x20712408]
  40a655:	(bad)  
  40a657:	mov    eax,0x5e9fab9a
  40a65c:	test   al,0xd1
  40a65e:	cs pop ebp
  40a660:	xor    BYTE PTR [edx-0x6],0x7e
  40a664:	xchg   esp,eax
  40a665:	scas   eax,DWORD PTR es:[edi]
  40a666:	xchg   esi,eax
  40a667:	(bad)  
  40a668:	nop
  40a669:	mov    BYTE PTR [ebp-0x4f],bl
  40a66c:	jne    0x40a605
  40a66e:	mov    WORD PTR [eax+0x1c],cs
  40a671:	loopne 0x40a6b1
  40a673:	push   ebx
  40a674:	(bad)  
  40a675:	cmp    eax,0xcc69e4aa
  40a67a:	call   0xdef66f14
  40a67f:	repz inc esi
  40a681:	add    DWORD PTR [ecx],esp
  40a683:	sub    DWORD PTR [ebx],edi
  40a685:	out    0x53,eax
  40a687:	fcomi  st,st(0)
  40a689:	dec    esp
  40a68a:	fnstsw WORD PTR [ebp+0x26]
  40a68d:	pop    esp
  40a68e:	shl    BYTE PTR [eax+0x4dd7b62b],0xa8
  40a695:	in     al,dx
  40a696:	fdiv   QWORD PTR [esi]
  40a698:	and    al,0x63
  40a69a:	mov    esp,DWORD PTR [esi+0x40be23ad]
  40a6a0:	push   ebp
  40a6a1:	popf   
  40a6a2:	sub    BYTE PTR [edx-0x6f],bh
  40a6a5:	cmp    ebx,DWORD PTR [edi-0x11e1172a]
  40a6ab:	inc    ebp
  40a6ac:	jg     0x40a6c9
  40a6ae:	rcr    BYTE PTR [ecx+0x1e36a6f8],0xda
  40a6b5:	push   esi
  40a6b6:	dec    edi
  40a6b7:	jno    0x40a6a7
  40a6b9:	fcomp  DWORD PTR [edx]
  40a6bb:	lock stos DWORD PTR es:[edi],eax
  40a6bd:	xor    BYTE PTR [edi-0x6e],0x33
  40a6c1:	ss adc ecx,edi
  40a6c4:	clc    
  40a6c5:	(bad)  
  40a6c6:	pop    ss
  40a6c7:	ja     0x40a709
  40a6c9:	jmp    0x37e1fce1
  40a6ce:	loopne 0x40a74e
  40a6d0:	popf   
  40a6d1:	pop    ss
  40a6d2:	out    dx,eax
  40a6d3:	ret    
  40a6d4:	push   es
  40a6d5:	pop    eax
  40a6d6:	pusha  
  40a6d7:	mov    dh,BYTE PTR [eax]
  40a6d9:	mov    ah,0xd6
  40a6db:	mov    ecx,DWORD PTR [ecx+0x497676e3]
  40a6e1:	sub    ebx,DWORD PTR [ecx]
  40a6e3:	js     0x40a687
  40a6e5:	jmp    0x39ee:0x6c70e82a
  40a6ec:	lea    ecx,[eax-0x4d7fefa9]
  40a6f2:	fwait
  40a6f3:	icebp  
  40a6f4:	inc    ebx
  40a6f5:	push   ds
  40a6f6:	daa    
  40a6f7:	mov    cl,0xe5
  40a6f9:	test   eax,0x1fa33143
  40a6fe:	inc    ebp
  40a6ff:	inc    ecx
  40a700:	inc    ebp
  40a701:	leave  
  40a702:	(bad)  
  40a703:	cmc    
  40a704:	arpl   WORD PTR [edx+0x20],cx
  40a707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a708:	popf   
  40a709:	loope  0x40a695
  40a70b:	cmp    eax,0xd3340b97
  40a710:	mov    dh,0x56
  40a712:	out    dx,eax
  40a713:	int3   
  40a714:	imul   eax,DWORD PTR [esp+edx*2],0x73
  40a718:	ret    0xfbf6
  40a71b:	call   0xf41a7fd0
  40a720:	out    dx,eax
  40a721:	xchg   DWORD PTR [ebx-0xdf7f5c3],esi
  40a727:	out    dx,eax
  40a728:	iret   
  40a729:	aam    0x47
  40a72b:	test   al,0xec
  40a72d:	(bad)  
  40a731:	xchg   edi,eax
  40a732:	in     al,dx
  40a733:	leave  
  40a734:	inc    ebx
  40a735:	cwde   
  40a736:	stc    
  40a737:	mov    ebp,0x52acc095
  40a73c:	and    eax,0x81baa3dd
  40a741:	(bad)  
  40a742:	into   
  40a743:	in     eax,dx
  40a744:	addr16 retf 
  40a746:	bound  edx,QWORD PTR [eax+0x2c]
  40a749:	test   al,0xf1
  40a74b:	mov    ebx,0x5bb76ad7
  40a750:	jns    0x40a6dd
  40a752:	push   ecx
  40a753:	and    BYTE PTR [ebx],ch
  40a755:	cdq    
  40a756:	and    bl,BYTE PTR [edx-0x49]
  40a759:	pop    ecx
  40a75a:	in     eax,dx
  40a75b:	dec    eax
  40a75c:	mov    edi,edi
  40a75e:	rol    DWORD PTR [ecx+eax*1-0x32],1
  40a762:	add    ah,ah
  40a764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a765:	call   0x29c4d665
  40a76a:	jg     0x40a72b
  40a76c:	sbb    DWORD PTR [eax],0xe9c9b81b
  40a772:	and    ebp,edx
  40a774:	inc    ecx
  40a775:	not    DWORD PTR [edi+0x3]
  40a778:	xor    DWORD PTR [edx],edi
  40a77a:	into   
  40a77b:	cs fwait
  40a77d:	mov    ebx,0xbe3631b7
  40a782:	cld    
  40a783:	ins    BYTE PTR es:[edi],dx
  40a784:	adc    DWORD PTR [edi-0x2e],eax
  40a787:	jp     0x40a740
  40a789:	arpl   WORD PTR [edx-0x3d308e18],cx
  40a78f:	mov    esi,0x7453a9ed
  40a794:	mov    bl,0x67
  40a796:	shl    DWORD PTR [edi],1
  40a798:	xchg   edx,eax
  40a799:	iret   
  40a79a:	mov    eax,esp
  40a79c:	punpcklbw mm6,mm0
  40a79f:	push   ss
  40a7a0:	aam    0x30
  40a7a2:	jg     0x40a734
  40a7a4:	dec    edi
  40a7a5:	mov    cl,0x65
  40a7a7:	xchg   esi,eax
  40a7a8:	xor    ebx,DWORD PTR [ecx-0x72d0ff5]
  40a7ae:	clc    
  40a7af:	(bad)  
  40a7b0:	pop    edx
  40a7b1:	mov    al,ds:0xdc020011
  40a7b6:	xchg   edi,eax
  40a7b7:	stos   BYTE PTR es:[edi],al
  40a7b8:	imul   esi,DWORD PTR [edi-0x369a54ad],0x9c603b68
  40a7c2:	lock cmp al,0x9
  40a7c5:	sbb    ebx,DWORD PTR [edi-0x70]
  40a7c8:	mov    eax,0x45f6fe48
  40a7cd:	adc    dl,BYTE PTR ds:0xed394ac2
  40a7d3:	dec    esi
  40a7d4:	mov    al,ds:0xf4cbe14
  40a7d9:	adc    BYTE PTR [edx+0x25],0x1c
  40a7dd:	pop    edx
  40a7de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7df:	jae    0x40a79c
  40a7e1:	mov    edx,0x62067776
  40a7e6:	push   ebx
  40a7e7:	(bad)  
  40a7e8:	pop    eax
  40a7e9:	jmp    0x8ff10d06
  40a7ee:	dec    ecx
  40a7ef:	fcom   DWORD PTR [ecx-0x44]
  40a7f2:	fcom   QWORD PTR [ecx]
  40a7f4:	jmp    0x40a79b
  40a7f6:	add    eax,0xbe7459bd
  40a7fb:	sbb    al,BYTE PTR [eax+edx*8-0x73]
  40a7ff:	std    
  40a800:	std    
  40a801:	inc    eax
  40a802:	and    BYTE PTR [esi+0x64],bh
  40a805:	cmp    al,0xed
  40a807:	nop
  40a808:	xor    esp,DWORD PTR [ebx+0x7]
  40a80b:	add    cl,BYTE PTR ds:0x88fbdfca
  40a811:	mov    al,0xc8
  40a813:	cmp    BYTE PTR [esi+0x2f],dh
  40a816:	ret    
  40a817:	sti    
  40a818:	xchg   edx,eax
  40a819:	cli    
  40a81a:	mov    ah,0xf1
  40a81c:	xchg   edi,eax
  40a81d:	popa   
  40a81e:	add    eax,0x2de9966c
  40a823:	cmp    al,0xe7
  40a825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a826:	sub    al,0x9a
  40a828:	cmp    bl,BYTE PTR [ecx]
  40a82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a82b:	pop    esi
  40a82c:	jle    0x40a7c7
  40a82e:	pop    ss
  40a82f:	test   eax,0xcd333432
  40a834:	ret    0x2598
  40a837:	mov    ch,0xf9
  40a839:	jo     0x40a88e
  40a83b:	je     0x40a808
  40a83d:	ja     0x40a807
  40a83f:	adc    eax,0xfd3aa4fc
  40a844:	xor    edx,DWORD PTR [edi+0x6356b6b4]
  40a84a:	icebp  
  40a84b:	inc    esi
  40a84c:	sbb    bh,BYTE PTR [ecx]
  40a84e:	stc    
  40a84f:	pop    ebx
  40a850:	cs (bad) 
  40a852:	mov    eax,DWORD PTR [edx]
  40a854:	pop    eax
  40a855:	xor    dh,0x9a
  40a858:	jle    0x40a827
  40a85a:	or     BYTE PTR [edx+0x7f],al
  40a85d:	add    bh,BYTE PTR [edi+0x561cedc5]
  40a863:	xchg   DWORD PTR [edx-0x18],esi
  40a866:	jo     0x40a834
  40a868:	fwait
  40a869:	and    eax,0xaefab86c
  40a86e:	and    eax,0x92e20751
  40a873:	push   ss
  40a874:	jmp    0x40a849
  40a876:	shl    DWORD PTR [edi-0x2b],cl
  40a879:	jne    0x40a8f3
  40a87b:	repz and DWORD PTR ds:0x5c856ebf,ebx
  40a882:	leave  
  40a883:	retf   0xfd50
  40a886:	aaa    
  40a887:	or     eax,edi
  40a889:	push   ebp
  40a88a:	xor    eax,0x7ff78e42
  40a88f:	pop    ebx
  40a890:	dec    edx
  40a891:	call   0x822c2fff
  40a896:	cmc    
  40a897:	retf   0x49c6
  40a89a:	iret   
  40a89b:	mov    DWORD PTR [ebp-0x15],edi
  40a89e:	jno    0x40a864
  40a8a0:	inc    ebp
  40a8a1:	mov    esp,0x57ccd919
  40a8a6:	sub    eax,0xe00d9bf4
  40a8ab:	das    
  40a8ac:	ds inc edx
  40a8ae:	ficom  DWORD PTR [edi]
  40a8b0:	mov    ds:0xb37ec037,al
  40a8b5:	(bad)  
  40a8b6:	or     eax,0xa6a4f604
  40a8bb:	sub    eax,0x9ac62b39
  40a8c0:	or     BYTE PTR [eax],cl
  40a8c2:	push   0xffffffa2
  40a8c4:	xchg   edx,eax
  40a8c5:	inc    edi
  40a8c6:	call   0x487fcca9
  40a8cb:	or     esi,esp
  40a8cd:	pushf  
  40a8ce:	xor    bl,BYTE PTR [ebx]
  40a8d0:	and    ch,BYTE PTR [ecx+0x712f60bd]
  40a8d6:	(bad)  
  40a8d7:	(bad)  
  40a8d8:	mov    dl,0x79
  40a8da:	rcr    edx,cl
  40a8dc:	lods   eax,DWORD PTR ds:[esi]
  40a8dd:	repnz mov ecx,0x9ab363a3
  40a8e3:	adc    al,BYTE PTR [edx]
  40a8e5:	sbb    eax,0xf445de70
  40a8ea:	and    ebx,0xffffffc5
  40a8ed:	retf   0x99c8
  40a8f0:	mov    ah,0xf5
  40a8f2:	push   es
  40a8f3:	adc    DWORD PTR [esi],esi
  40a8f5:	xor    ebx,DWORD PTR [edx+edi*2-0x21370ad0]
  40a8fc:	hlt    
  40a8fd:	pop    ebp
  40a8fe:	xor    eax,0x61683476
  40a903:	and    DWORD PTR [esi],ebp
  40a905:	mov    esi,ebx
  40a907:	out    dx,eax
  40a908:	ins    BYTE PTR es:[edi],dx
  40a909:	es inc esp
  40a90b:	mov    ds:0x5af76c4e,al
  40a910:	rcl    BYTE PTR [edi+ecx*2-0x1c11d806],1
  40a917:	scas   eax,DWORD PTR es:[edi]
  40a918:	enter  0x8cd,0xc2
  40a91c:	dec    ebx
  40a91d:	and    edi,DWORD PTR [edx-0x2b]
  40a920:	dec    edi
  40a921:	out    dx,eax
  40a922:	ja     0x40a98c
  40a924:	mov    bl,0xc
  40a926:	shl    ecx,1
  40a928:	(bad)  [edi+0x7d990642]
  40a92e:	sar    BYTE PTR [edx],1
  40a930:	pusha  
  40a931:	shl    DWORD PTR ds:0xf0906d11,1
  40a937:	jns    0x40a94a
  40a939:	xor    al,0x99
  40a93b:	fisttp DWORD PTR [ebp-0x77c31c97]
  40a941:	jmp    0x6232:0x3d51fa5c
  40a948:	cmp    dl,bh
  40a94a:	jp     0x40a92b
  40a94c:	push   0x13eb65ad
  40a951:	xor    ebx,eax
  40a953:	jmp    0x40a8db
  40a955:	(bad)  
  40a956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a957:	inc    edx
  40a958:	aad    0xd8
  40a95a:	clc    
  40a95b:	(bad)  
  40a95c:	sbb    ah,BYTE PTR [ebx-0x59]
  40a95f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a961:	push   esp
  40a962:	and    bh,BYTE PTR [esi+0xdd9d00a]
  40a968:	pusha  
  40a969:	add    eax,0x5981d981
  40a96e:	and    al,0xe3
  40a970:	in     eax,0x2e
  40a972:	jecxz  0x40a934
  40a974:	(bad)  
  40a975:	int    0xd9
  40a977:	mov    ah,0x70
  40a979:	aad    0xb4
  40a97b:	inc    esp
  40a97c:	popf   
  40a97d:	aas    
  40a97e:	and    eax,0x1892fcc5
  40a983:	(bad)  
  40a984:	fdivr  QWORD PTR [edi+0x76d0d91d]
  40a98a:	addr16 pushf 
  40a98c:	or     cl,BYTE PTR [edi-0x2b]
  40a98f:	add    eax,0xc45581f3
  40a994:	in     al,dx
  40a995:	and    DWORD PTR [edx+0x16],esp
  40a998:	jb     0x40a946
  40a99a:	repnz mov esi,0x69d0770d
  40a9a0:	sti    
  40a9a1:	add    ebp,edx
  40a9a3:	sbb    BYTE PTR ds:0xf615ece5,0x51
  40a9aa:	enter  0x4fb7,0x9a
  40a9ae:	sub    esp,esi
  40a9b0:	(bad)  
  40a9b1:	xchg   edi,eax
  40a9b2:	pop    ebp
  40a9b3:	or     eax,0xcdd0a98e
  40a9b8:	pop    esi
  40a9b9:	mov    ds:0x4a4c85de,al
  40a9be:	dec    edx
  40a9bf:	and    al,0x37
  40a9c1:	push   ds
  40a9c2:	mov    eax,ds:0x217df93c
  40a9c7:	pushf  
  40a9c8:	mov    edx,DWORD PTR [ebp+0x31]
  40a9cb:	mov    eax,DWORD PTR ss:[ecx]
  40a9ce:	(bad)  
  40a9cf:	adc    BYTE PTR [ecx],dl
  40a9d1:	sbb    BYTE PTR [esi],bh
  40a9d3:	imul   ebp,DWORD PTR [ecx-0x575ba152],0xffffffac
  40a9da:	sub    al,dl
  40a9dc:	repnz cmc 
  40a9de:	mov    esp,edx
  40a9e0:	mov    edx,0x571a947a
  40a9e5:	rcr    ecx,cl
  40a9e7:	enter  0xd16e,0xb1
  40a9eb:	push   ebp
  40a9ec:	std    
  40a9ed:	add    eax,0x1fe48608
  40a9f2:	inc    ecx
  40a9f3:	jb     0x40a98a
  40a9f5:	pop    ss
  40a9f6:	push   ebp
  40a9f7:	mov    ecx,DWORD PTR [eax+0x1]
  40a9fa:	xor    ecx,esi
  40a9fc:	mov    bl,0xfe
  40a9fe:	mov    edi,0xe6888608
  40aa03:	jg     0x40aa43
  40aa05:	jns    0x40a9b2
  40aa07:	hlt    
  40aa08:	mov    dl,0xab
  40aa0a:	fwait
  40aa0b:	mov    edx,0xf4e1c418
  40aa10:	retf   
  40aa11:	dec    edi
  40aa12:	add    al,0xfb
  40aa14:	sub    ecx,ebp
  40aa16:	in     eax,0x35
  40aa18:	lds    ebx,FWORD PTR [ecx]
  40aa1a:	dec    edi
  40aa1b:	int3   
  40aa1c:	adc    ebp,esp
  40aa1e:	sub    al,0x8b
  40aa20:	(bad)  
  40aa21:	gs repz push ebx
  40aa24:	push   ebp
  40aa25:	mov    ch,BYTE PTR [ecx+0x7e09c3ed]
  40aa2b:	fidivr WORD PTR [eax+eax*4]
  40aa2e:	and    al,0x77
  40aa30:	add    ebp,DWORD PTR [ebx+edx*1-0x35ec01f2]
  40aa37:	ret    0xa19f
  40aa3a:	loope  0x40aa20
  40aa3c:	repz and DWORD PTR [ecx],ecx
  40aa3f:	and    BYTE PTR [ecx],0x59
  40aa42:	adc    BYTE PTR [ebp+0x4e213c59],dh
  40aa48:	xor    cl,bh
  40aa4a:	jecxz  0x40aa70
  40aa4c:	les    eax,FWORD PTR [eax+0x34]
  40aa4f:	xor    edi,DWORD PTR ds:0xd7db0336
  40aa55:	inc    ecx
  40aa56:	push   ebx
  40aa57:	ffree  st(3)
  40aa59:	or     eax,0xc21b7480
  40aa5e:	rcr    DWORD PTR [edx-0x56],1
  40aa61:	pop    ds
  40aa62:	neg    bl
  40aa64:	inc    esi
  40aa65:	div    BYTE PTR [eax+0x27]
  40aa68:	mov    al,ds:0x364b099d
  40aa6d:	mov    dl,0x95
  40aa6f:	xchg   BYTE PTR [esi+0x6b673ae9],cl
  40aa75:	out    0xb,al
  40aa77:	pop    ds
  40aa78:	pop    edi
  40aa79:	sbb    ebp,DWORD PTR gs:[edx-0x5b]
  40aa7d:	adc    DWORD PTR [edi+0x5d],edx
  40aa80:	push   0x3e445b10
  40aa85:	repnz aaa 
  40aa87:	mov    ch,0x39
  40aa89:	out    dx,eax
  40aa8a:	pusha  
  40aa8b:	pop    eax
  40aa8c:	pop    ebp
  40aa8d:	sbb    ch,BYTE PTR [eax+eax*8+0x75]
  40aa91:	mov    ds:0xbcf557ba,al
  40aa96:	stos   DWORD PTR es:[edi],eax
  40aa97:	dec    ecx
  40aa98:	jp     0x40aaa2
  40aa9a:	xor    eax,eax
  40aa9c:	push   eax
  40aa9d:	jbe    0x40aab9
  40aa9f:	inc    BYTE PTR [eax]
  40aaa1:	xchg   esp,eax
  40aaa2:	in     eax,0x27
  40aaa4:	add    eax,0xd2187a9
  40aaa9:	cmp    ebp,DWORD PTR gs:[ecx-0x7527cae9]
  40aab0:	sub    ebx,ebp
  40aab2:	mov    DWORD PTR [ebp-0x4f],edi
  40aab5:	push   esi
  40aab6:	mov    ecx,0xf2cb5869
  40aabb:	(bad)  [ecx+0x71]
  40aabe:	sbb    BYTE PTR [ecx+0x45],ah
  40aac1:	mov    dl,0xe1
  40aac3:	and    al,0xa4
  40aac5:	cmc    
  40aac6:	pusha  
  40aac7:	fwait
  40aac8:	adc    eax,0xf001c0a9
  40aacd:	(bad)  
  40aace:	push   ss
  40aacf:	cli    
  40aad0:	pop    ecx
  40aad1:	sbb    eax,DWORD PTR ds:0x64d54b34
  40aad7:	inc    ebp
  40aad8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40aada:	cdq    
  40aadb:	jo     0x40aac4
  40aadd:	adc    BYTE PTR [edx+0x351a4410],0x36
  40aae4:	hlt    
  40aae5:	scas   al,BYTE PTR es:[edi]
  40aae6:	push   0x2a
  40aae8:	(bad)  
  40aae9:	(bad)  
  40aaea:	xchg   edi,eax
  40aaeb:	das    
  40aaec:	mov    ds:0x1e69acd2,eax
  40aaf1:	mov    dh,0xe0
  40aaf3:	movq   mm1,mm0
  40aaf6:	inc    edx
  40aaf7:	rol    cl,cl
  40aaf9:	jo     0x40aade
  40aafb:	or     dh,dh
  40aafd:	add    ebp,DWORD PTR [ecx+0x1]
  40ab00:	mov    esi,0xab4addb7
  40ab05:	fcomip st,st(1)
  40ab07:	inc    eax
  40ab08:	hlt    
  40ab09:	scas   al,BYTE PTR es:[edi]
  40ab0a:	or     eax,0x304ccf00
  40ab0f:	mov    BYTE PTR [esi-0x6293f67e],ch
  40ab15:	inc    edx
  40ab16:	adc    BYTE PTR [eax+0x5806f9b9],ch
  40ab1c:	test   BYTE PTR [edi+0x563dfc4b],0xc8
  40ab23:	cmp    al,0x76
  40ab25:	in     al,0x75
  40ab27:	xlat   BYTE PTR ds:[ebx]
  40ab28:	retf   0x6f47
  40ab2b:	out    dx,eax
  40ab2c:	es dec ebp
  40ab2e:	xchg   ebp,eax
  40ab2f:	mov    ah,0xda
  40ab31:	sub    ch,BYTE PTR [ebx-0x16631a0e]
  40ab37:	push   edx
  40ab38:	dec    ecx
  40ab39:	xchg   ebx,eax
  40ab3a:	in     al,dx
  40ab3b:	jp     0x40ab7a
  40ab3d:	std    
  40ab3e:	xchg   ebx,eax
  40ab3f:	push   es
  40ab40:	dec    ebx
  40ab41:	ins    DWORD PTR es:[edi],dx
  40ab42:	mov    ecx,0x6fed5b86
  40ab47:	dec    ebp
  40ab48:	mov    edx,0x8972bbeb
  40ab4d:	pop    es
  40ab4e:	test   DWORD PTR [ebx+0x33],0x2670e05e
  40ab55:	scas   al,BYTE PTR es:[edi]
  40ab56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab57:	cmp    al,0xf8
  40ab59:	sti    
  40ab5a:	fld    DWORD PTR [esi+edx*8+0x7feb8f1]
  40ab61:	loopne 0x40ab77
  40ab63:	outs   dx,DWORD PTR ds:[esi]
  40ab64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab65:	mov    dl,0xaf
  40ab67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab68:	les    edx,FWORD PTR [edx+0x2a5acfc4]
  40ab6e:	xchg   ebx,ecx
  40ab70:	add    ecx,DWORD PTR [edi-0xa]
  40ab73:	jl     0x40aafc
  40ab75:	dec    ecx
  40ab76:	pop    ss
  40ab77:	int    0x54
  40ab79:	or     bh,0xf5
  40ab7c:	mov    eax,DWORD PTR [eax-0x5b526018]
  40ab82:	sbb    eax,ebp
  40ab84:	sbb    al,0x77
  40ab86:	push   ds
  40ab87:	jg     0x40ab1a
  40ab89:	(bad)
  40ab8d:	mov    dh,0x63
  40ab8f:	adc    edx,DWORD PTR [ebp+0x5504b358]
  40ab95:	loope  0x40abbd
  40ab97:	pop    esi
  40ab98:	leave  
  40ab99:	dec    eax
  40ab9a:	xchg   ebp,eax
  40ab9b:	sub    eax,0xd5bdbb90
  40aba0:	and    esi,esi
  40aba2:	ins    DWORD PTR es:[edi],dx
  40aba3:	(bad)  
  40aba4:	fwait
  40aba5:	cmp    DWORD PTR [edx-0x2b],ebp
  40aba8:	xor    DWORD PTR [edi-0x3a],esi
  40abab:	test   al,0xb3
  40abad:	sbb    eax,0xfb656c66
  40abb2:	cmp    edi,esi
  40abb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb5:	and    cl,BYTE PTR [edi]
  40abb7:	in     al,0x85
  40abb9:	cld    
  40abba:	(bad)  
  40abbb:	call   0xf225:0x3afa1d73
  40abc2:	cwde   
  40abc3:	dec    ebx
  40abc4:	ins    DWORD PTR es:[edi],dx
  40abc5:	into   
  40abc6:	pop    esp
  40abc7:	pop    edi
  40abc8:	mov    ebx,DWORD PTR [edx-0x3700244f]
  40abce:	fsubrp st(4),st
  40abd0:	pop    ecx
  40abd1:	add    BYTE PTR fs:[ecx],dl
  40abd4:	retf   0xb046
  40abd7:	inc    ebx
  40abd8:	lods   al,BYTE PTR ss:[esi]
  40abda:	cs aam 0x2a
  40abdd:	pop    esp
  40abde:	popf   
  40abdf:	imul   esi,esi,0xf22a06d
  40abe5:	push   0x62
  40abe7:	mov    ch,0xbc
  40abe9:	mov    BYTE PTR [edx+0x45127860],dh
  40abef:	mov    ebx,0x207012d5
  40abf4:	lods   al,BYTE PTR ds:[esi]
  40abf5:	les    ebx,FWORD PTR [edx]
  40abf7:	xlat   BYTE PTR ds:[ebx]
  40abf8:	imul   esp
  40abfa:	push   cs
  40abfb:	mov    esi,0x53f65244
  40ac00:	cli    
  40ac01:	and    al,0x2f
  40ac03:	repz pop es
  40ac05:	jg     0x40ac4f
  40ac07:	mov    ebp,edi
  40ac09:	mov    ebx,0xb666a8b7
  40ac0e:	(bad)  
  40ac0f:	jae    0x40ac56
  40ac11:	loope  0x40ac27
  40ac13:	arpl   WORD PTR [edi],bx
  40ac15:	dec    edi
  40ac16:	cli    
  40ac17:	jnp    0x40ac5a
  40ac19:	cmp    bl,ah
  40ac1b:	mov    ch,0x76
  40ac1d:	out    dx,eax
  40ac1e:	pop    esp
  40ac1f:	out    0x8c,al
  40ac21:	or     ch,cl
  40ac23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac24:	fmul   DWORD PTR [ebp-0x25]
  40ac27:	xchg   BYTE PTR ds:0xff70edee,bh
  40ac2d:	ror    BYTE PTR [esi+0x4d],1
  40ac30:	cmc    
  40ac31:	xlat   BYTE PTR ds:[ebx]
  40ac32:	xchg   esp,eax
  40ac33:	xchg   ebp,eax
  40ac34:	jmp    0xf5e5:0x7508579e
  40ac3b:	push   0xffffffb7
  40ac3d:	push   0x7d
  40ac3f:	out    0x4f,eax
  40ac41:	outs   dx,BYTE PTR ds:[esi]
  40ac42:	xchg   ecx,eax
  40ac43:	(bad)  
  40ac44:	mov    ecx,0xb474fea2
  40ac49:	sbb    esp,DWORD PTR [ebx]
  40ac4b:	stos   DWORD PTR es:[edi],eax
  40ac4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac4d:	cli    
  40ac4e:	jb     0x40acb3
  40ac50:	mov    ah,0x53
  40ac52:	inc    eax
  40ac53:	out    0x7,al
  40ac55:	add    eax,0x69be1c8f
  40ac5a:	dec    esp
  40ac5b:	mov    ch,0x30
  40ac5d:	jg     0x40ac40
  40ac5f:	inc    ebx
  40ac60:	push   0x36
  40ac62:	out    0xbd,al
  40ac64:	cmp    al,0x3a
  40ac66:	push   esp
  40ac67:	outs   dx,DWORD PTR ds:[esi]
  40ac68:	xchg   ebx,eax
  40ac69:	mov    dh,0x99
  40ac6b:	sub    cl,cl
  40ac6d:	mov    dl,0x91
  40ac6f:	mov    esi,0xa276c1b2
  40ac74:	push   esi
  40ac75:	lods   eax,DWORD PTR ds:[esi]
  40ac76:	jge    0x40ac93
  40ac78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac79:	int    0x5c
  40ac7b:	pop    ebx
  40ac7c:	add    al,0x31
  40ac7e:	sar    esi,1
  40ac80:	inc    edi
  40ac81:	fnstcw WORD PTR [edx]
  40ac83:	fidivr DWORD PTR [eax]
  40ac85:	js     0x40acea
  40ac87:	sub    al,0x3d
  40ac89:	jnp    0x40ac2e
  40ac8b:	push   eax
  40ac8c:	and    al,0xc8
  40ac8e:	xlat   BYTE PTR ds:[ebx]
  40ac8f:	test   al,0xc0
  40ac91:	mov    bh,0x8d
  40ac93:	js     0x40acad
  40ac95:	push   ss
  40ac96:	leave  
  40ac97:	jno    0x40ac3e
  40ac99:	ds jno 0x40acf9
  40ac9c:	mov    bl,0x82
  40ac9e:	push   esi
  40ac9f:	push   ebx
  40aca0:	repnz cmp edx,ebp
  40aca3:	fs mov eax,0xf606665e
  40aca9:	fs inc ecx
  40acab:	mov    eax,0xad49dfe2
  40acb0:	ret    0x124e
  40acb3:	leave  
  40acb4:	mov    ebx,0x953772c6
  40acb9:	mov    ch,0x1e
  40acbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acbc:	xchg   edi,eax
  40acbd:	xchg   ecx,eax
  40acbe:	call   0x7a232d65
  40acc3:	clc    
  40acc4:	sbb    ch,BYTE PTR [edx]
  40acc6:	push   ebx
  40acc7:	push   edx
  40acc8:	or     BYTE PTR [eax+0x70a98533],cl
  40acce:	push   ebx
  40accf:	or     BYTE PTR [edx+0x19],al
  40acd2:	ss jmp 0xc617:0x8a445d39
  40acda:	fnsave [edx+edi*2-0x41dcd81e]
  40ace1:	repz in eax,0xc4
  40ace4:	xor    DWORD PTR [ebx+0x49],ebp
  40ace7:	mov    eax,0x1691c4ae
  40acec:	ror    BYTE PTR [eax],0xbe
  40acef:	cli    
  40acf0:	pop    edx
  40acf1:	mov    ds:0x401bcdc0,eax
  40acf6:	fist   WORD PTR [ecx]
  40acf8:	push   ecx
  40acf9:	inc    esp
  40acfa:	jle    0x40ad18
  40acfc:	xchg   esi,eax
  40acfd:	inc    eax
  40acfe:	dec    edx
  40acff:	mov    ch,0x75
  40ad01:	aaa    
  40ad02:	aaa    
  40ad03:	mov    esi,0xa51aabb
  40ad08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad09:	pop    ds
  40ad0a:	retf   
  40ad0b:	neg    DWORD PTR [esi+0x5fed5ef4]
  40ad11:	xchg   ecx,eax
  40ad12:	jmp    0x645:0x36a9a4c3
  40ad19:	fst    DWORD PTR [ebx+eax*8]
  40ad1c:	ins    DWORD PTR es:[edi],dx
  40ad1d:	cdq    
  40ad1e:	sub    DWORD PTR [edx],eax
  40ad20:	dec    eax
  40ad21:	xor    ecx,DWORD PTR ds:0x4db687ad
  40ad27:	jnp    0x40ad50
  40ad29:	xchg   edi,ecx
  40ad2b:	lea    esi,[bp+0x7421]
  40ad30:	xchg   edx,eax
  40ad31:	ds push esi
  40ad33:	or     BYTE PTR ds:0xc43c192,ch
  40ad39:	fstp   DWORD PTR [ecx]
  40ad3b:	retf   
  40ad3c:	daa    
  40ad3d:	rol    BYTE PTR [ebp+0x7a413aca],1
  40ad43:	xchg   ch,bl
  40ad45:	push   es
  40ad46:	pop    edi
  40ad47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad48:	std    
  40ad49:	pop    esi
  40ad4a:	cmp    eax,0x33b7253b
  40ad4f:	(bad)  
  40ad50:	xor    eax,0x4cf4d9d
  40ad55:	dec    esi
  40ad56:	ds push edx
  40ad58:	ret    
  40ad59:	into   
  40ad5a:	or     BYTE PTR [ecx],bl
  40ad5c:	dec    ebx
  40ad5d:	pusha  
  40ad5e:	sar    edi,cl
  40ad60:	int    0xcf
  40ad62:	inc    esp
  40ad63:	imul   edx,DWORD PTR [edi],0x26
  40ad66:	in     al,0x3a
  40ad68:	leave  
  40ad69:	mov    ds:0x566ebaa3,eax
  40ad6e:	or     esi,DWORD PTR [esi+ebx*1-0xb62199e]
  40ad75:	repnz (bad) 
  40ad77:	sbb    eax,0x869bc8f4
  40ad7c:	inc    esp
  40ad7d:	into   
  40ad7e:	lods   al,BYTE PTR es:[esi]
  40ad80:	into   
  40ad81:	jg     0x40ad69
  40ad83:	repnz and esp,DWORD PTR [ebx]
  40ad86:	mov    dh,ch
  40ad88:	mov    ch,0x26
  40ad8a:	or     DWORD PTR [edi-0x3b],ecx
  40ad8d:	mov    esp,0x5dfe620d
  40ad92:	loop   0x40ad49
  40ad94:	(bad)  
  40ad95:	mov    esi,0xb0126a95
  40ad9a:	mov    eax,DWORD PTR [ebp-0x14]
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a74b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a74f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi-0x12ac6ef5]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0x65
  40aed6:	fdiv   DWORD PTR [edx+ecx*1+0x77]
  40aeda:	pushf  
  40aedb:	or     ah,BYTE PTR [esi-0x12]
  40aede:	xor    ebp,0xffffffa8
  40aee1:	shl    ch,1
  40aee3:	leave  
  40aee4:	test   eax,0x6f1a87c8
  40aee9:	cmp    al,0xf
  40aeeb:	inc    esi
  40aeec:	jge    0x40aeff
  40aeee:	push   eax
  40aeef:	icebp  
  40aef0:	int3   
  40aef1:	pop    esi
  40aef2:	clc    
  40aef3:	jecxz  0x40ae76
  40aef5:	lahf   
  40aef6:	aam    0x3f
  40aef8:	xchg   edi,eax
  40aef9:	ss jno 0x40ae97
  40aefc:	loop   0x40aeb8
  40aefe:	xchg   ecx,eax
  40aeff:	dec    ebp
  40af00:	enter  0x1e0d,0x1e
  40af04:	adc    dh,BYTE PTR [esi]
  40af06:	mov    dl,0xb7
  40af08:	push   0xa8779bca
  40af0d:	call   0xf0f4:0x8865c748
  40af14:	xchg   ebx,eax
  40af15:	sahf   
  40af16:	out    0x9e,al
  40af18:	push   ebp
  40af19:	mov    al,0xd7
  40af1b:	xchg   esi,eax
  40af1c:	sbb    al,0x47
  40af1e:	xor    al,0xb3
  40af20:	mov    bh,0x13
  40af22:	test   ah,0xb8
  40af25:	test   eax,0x4ceb114d
  40af2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af2b:	mov    al,ds:0x26017103
  40af30:	mov    esi,0x7ba0c940
  40af35:	mov    ebx,0xd56ab21f
  40af3a:	in     al,0xf9
  40af3c:	pop    es
  40af3d:	jno    0x40af5c
  40af3f:	or     eax,0x2f8dceef
  40af44:	xor    DWORD PTR [ebx+0x59],esp
  40af47:	outs   dx,BYTE PTR ds:[esi]
  40af48:	js     0x40af32
  40af4a:	imul   edx,DWORD PTR [edi],0x14
  40af4d:	sub    ch,BYTE PTR [ebx]
  40af4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af50:	mov    ch,0x19
  40af52:	lods   eax,DWORD PTR ds:[esi]
  40af53:	retf   
  40af54:	mov    ah,0x35
  40af56:	add    al,0xfc
  40af58:	scas   al,BYTE PTR es:[edi]
  40af59:	lds    esi,FWORD PTR [edi]
  40af5b:	(bad)  
  40af5c:	lahf   
  40af5d:	mov    ebp,ds
  40af5f:	je     0x40af26
  40af61:	ss cdq 
  40af63:	jns    0x40afa9
  40af65:	outs   dx,DWORD PTR ds:[esi]
  40af66:	sti    
  40af67:	retf   0x6c5a
  40af6a:	es jle 0x40af71
  40af6d:	outs   dx,DWORD PTR ds:[esi]
  40af6e:	adc    ah,BYTE PTR [ebp-0x29ffb126]
  40af74:	dec    esi
  40af75:	lahf   
  40af76:	out    0x50,eax
  40af78:	int    0x7f
  40af7a:	sub    esi,DWORD PTR cs:[ecx+0x54]
  40af7e:	and    eax,0xfa68b987
  40af83:	cmc    
  40af84:	mov    ebx,0x8867aca0
  40af89:	repz popa 
  40af8b:	fwait
  40af8c:	add    DWORD PTR [ecx+0xb],0x16014928
  40af93:	mov    dl,0x42
  40af95:	add    eax,DWORD PTR [edi+eiz*1]
  40af98:	cmovb  esi,DWORD PTR [ebp-0x47c03674]
  40af9f:	jmp    0x1ca902dd
  40afa4:	inc    edx
  40afa5:	dec    ebx
  40afa6:	pop    edx
  40afa7:	lahf   
  40afa8:	into   
  40afa9:	sbb    edi,DWORD PTR [edx-0x9dcbb25]
  40afaf:	pop    es
  40afb0:	leave  
  40afb1:	mov    bl,0x72
  40afb3:	add    eax,0x77cf049d
  40afb8:	ds jge 0x40afa1
  40afbb:	mov    ds:0xe2d54f56,eax
  40afc0:	sub    eax,0xe2a0c9d7
  40afc5:	cld    
  40afc6:	sbb    edx,DWORD PTR [eax-0x725907c]
  40afcc:	add    esp,DWORD PTR [ecx+0x4d]
  40afcf:	out    0x76,al
  40afd1:	and    eax,0x449acf8d
  40afd6:	ins    BYTE PTR es:[edi],dx
  40afd7:	inc    ebp
  40afd8:	cld    
  40afd9:	(bad)  
  40afda:	mov    esp,0x2997db48
  40afdf:	test   al,0x9
  40afe1:	loop   0x40b035
  40afe3:	sbb    ebx,DWORD PTR [ecx-0x1ff0c80e]
  40afe9:	hlt    
  40afea:	and    esp,DWORD PTR [ebp+0x2e]
  40afed:	mov    BYTE PTR [ecx],0xd9
  40aff0:	push   ebp
  40aff1:	xor    edi,DWORD PTR [ebx]
  40aff3:	cmp    bl,0x57
  40aff6:	sar    DWORD PTR [ebp+0x1517e396],1
  40affc:	es ins DWORD PTR es:[edi],dx
  40affe:	bound  ebx,QWORD PTR [ebx-0x12]
  40b001:	pop    ss
  40b002:	jp     0x40afc2
  40b004:	jbe    0x40af90
  40b006:	mov    esi,0x580c30d9
  40b00b:	pop    ds
  40b00c:	push   ecx
  40b00d:	(bad)  
  40b00f:	scas   eax,DWORD PTR es:[edi]
  40b010:	cld    
  40b011:	loop   0x40b06a
  40b013:	daa    
  40b014:	repz popf 
  40b016:	jnp    0x40b03e
  40b018:	inc    esi
  40b019:	add    eax,0xf45cf813
  40b01e:	push   eax
  40b01f:	cmp    al,BYTE PTR [edx]
  40b021:	mov    esi,es
  40b023:	ins    DWORD PTR es:[edi],dx
  40b024:	jae    0x40b084
  40b026:	adc    edx,DWORD PTR [esp+edi*2]
  40b029:	aam    0xd2
  40b02b:	adc    BYTE PTR [ebx],dl
  40b02d:	cs aas 
  40b02f:	sbb    edx,0x18
  40b032:	xor    eax,0xa8a09922
  40b037:	adc    al,BYTE PTR [esp+ecx*8-0x6f]
  40b03b:	es jle 0x40b07c
  40b03e:	xchg   esi,esi
  40b040:	into   
  40b041:	jecxz  0x40b082
  40b043:	jl     0x40afcd
  40b045:	xlat   BYTE PTR ds:[ebx]
  40b046:	jbe    0x40b095
  40b048:	dec    ecx
  40b049:	enter  0x29d3,0x65
  40b04d:	mov    al,ds:0x36b9b1aa
  40b052:	cmp    eax,0xf759e06f
  40b057:	mov    cl,BYTE PTR [esi+ecx*8+0x2b]
  40b05b:	mov    al,0xd4
  40b05d:	mov    ah,0x9
  40b05f:	inc    esi
  40b060:	sub    bl,BYTE PTR [ebp+0x160f19eb]
  40b066:	aas    
  40b067:	sbb    eax,0xdb5ddc41
  40b06c:	es mov bh,0x9d
  40b06f:	xchg   esp,eax
  40b070:	sbb    BYTE PTR [esi-0x47],dl
  40b073:	mov    ?,WORD PTR [ebx-0x3b]
  40b076:	bound  esp,QWORD PTR [esi+0x65]
  40b079:	xor    eax,0x21ce6b28
  40b07e:	add    al,0xf4
  40b080:	test   al,0xb7
  40b082:	or     BYTE PTR [edx+0x27ce5653],ah
  40b088:	hlt    
  40b089:	cmp    ch,al
  40b08b:	stc    
  40b08c:	sub    al,0xf8
  40b08e:	xchg   esp,eax
  40b08f:	stc    
  40b090:	pop    ebx
  40b091:	sbb    eax,0xfa19646f
  40b096:	xor    esp,DWORD PTR [ecx-0x76]
  40b099:	mov    BYTE PTR ds:0x8d307974,bh
  40b09f:	rcr    DWORD PTR [ebx+ebp*8-0x7f],cl
  40b0a3:	dec    edi
  40b0a4:	add    al,0x5b
  40b0a6:	cwde   
  40b0a7:	lods   eax,DWORD PTR ss:[esi]
  40b0a9:	jecxz  0x40b0b6
  40b0ab:	cs dec esi
  40b0ad:	or     dh,al
  40b0af:	aam    0x28
  40b0b1:	pop    ebp
  40b0b2:	lock jge 0x40b057
  40b0b5:	arpl   di,bx
  40b0b7:	ss push ds
  40b0b9:	stos   BYTE PTR es:[edi],al
  40b0ba:	sar    BYTE PTR [ebx],0x56
  40b0bd:	inc    ebp
  40b0be:	test   BYTE PTR [ecx],bl
  40b0c0:	xor    eax,0x7ce50ce9
  40b0c5:	clc    
  40b0c6:	shr    BYTE PTR [ebp+0x61],0x3e
  40b0ca:	lods   eax,DWORD PTR ds:[esi]
  40b0cb:	call   0xddae:0xd4b70990
  40b0d2:	cmp    dl,ch
  40b0d4:	adc    edi,ebp
  40b0d6:	loope  0x40b138
  40b0d8:	and    al,0x2b
  40b0da:	inc    esi
  40b0db:	mov    al,0x3a
  40b0dd:	ins    BYTE PTR es:[edi],dx
  40b0de:	retf   0x5a82
  40b0e1:	pop    eax
  40b0e2:	sar    BYTE PTR [edi+0x46693269],cl
  40b0e8:	aaa    
  40b0e9:	xlat   BYTE PTR ds:[ebx]
  40b0ea:	fidivr WORD PTR [esi-0x4e791b4f]
  40b0f0:	push   ds
  40b0f1:	inc    ebp
  40b0f2:	mov    edi,0x838a1a3
  40b0f7:	add    eax,DWORD PTR [esi+eiz*2]
  40b0fa:	and    esi,ebx
  40b0fc:	ins    BYTE PTR es:[edi],dx
  40b0fd:	mov    esi,0x9d707bae
  40b102:	jae    0x40b135
  40b104:	xchg   esi,eax
  40b105:	jle    0x40b0b4
  40b107:	in     al,dx
  40b108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b109:	jecxz  0x40b0b7
  40b10b:	dec    ecx
  40b10c:	xor    dl,BYTE PTR [ebp+0x18]
  40b10f:	pop    ds
  40b110:	ja     0x40b172
  40b112:	stos   BYTE PTR es:[edi],al
  40b113:	inc    ebx
  40b114:	mov    ah,BYTE PTR fs:[ebp+edi*8-0x5c]
  40b119:	into   
  40b11a:	ss je  0x40b0b5
  40b11d:	inc    esi
  40b11e:	mov    edi,DWORD PTR [ecx]
  40b120:	cmp    BYTE PTR [ebp+0x23],bh
  40b123:	ds mov ebp,0xc124c59a
  40b129:	push   edi
  40b12a:	or     edi,ebx
  40b12c:	add    esi,DWORD PTR ds:0xa4c0c814
  40b132:	pop    ss
  40b133:	(bad)
  40b136:	mov    al,ds:0x3c6d9a2b
  40b13b:	(bad)  
  40b13c:	pop    ss
  40b13d:	scas   eax,DWORD PTR es:[edi]
  40b13e:	retf   0x46de
  40b141:	pop    eax
  40b142:	in     al,dx
  40b143:	stos   DWORD PTR es:[edi],eax
  40b144:	in     eax,dx
  40b145:	and    BYTE PTR [ebx+0x4d34733],0xb5
  40b14c:	xor    ecx,DWORD PTR [esi]
  40b14e:	addr16 in eax,0xe2
  40b151:	xchg   esp,eax
  40b152:	pop    edi
  40b153:	aas    
  40b154:	retf   0x6c33
  40b157:	xchg   DWORD PTR [eax+0x21245069],ecx
  40b15d:	dec    edi
  40b15e:	out    dx,al
  40b15f:	add    al,0x9
  40b161:	lds    edx,FWORD PTR [ecx+0x1469e1d2]
  40b167:	adc    ecx,DWORD PTR [ebx]
  40b169:	shr    ebx,0x68
  40b16c:	retf   0xe2ae
  40b16f:	mov    ?,WORD PTR [edx+esi*1+0x61d2f50d]
  40b176:	cmp    eax,0x36a35a03
  40b17b:	dec    ebp
  40b17c:	xchg   BYTE PTR [ebx-0x48a8a0b8],bh
  40b182:	int3   
  40b183:	test   bh,dh
  40b185:	sbb    BYTE PTR ds:0xc7c4dc28,ah
  40b18b:	fmul   DWORD PTR [ecx+eax*4]
  40b18e:	int3   
  40b18f:	jp     0x40b1a5
  40b191:	and    al,0x93
  40b193:	push   eax
  40b194:	repnz addr16 xchg edx,eax
  40b197:	aas    
  40b198:	repz inc esi
  40b19a:	popa   
  40b19b:	fld    DWORD PTR ds:0xa3e4c621
  40b1a1:	xor    DWORD PTR [ebp+0x1b72a6a],ecx
  40b1a7:	push   ecx
  40b1a8:	cmp    eax,0x7dfa6620
  40b1ad:	retf   0xc58b
  40b1b0:	sbb    bh,ch
  40b1b2:	jnp    0x40b1ed
  40b1b4:	dec    ecx
  40b1b5:	dec    edi
  40b1b6:	adc    DWORD PTR [ebp-0x14],ebp
  40b1b9:	jg     0x40b1c9
  40b1bb:	sbb    DWORD PTR [edi+0x5857128a],edx
  40b1c1:	cmp    ch,bh
  40b1c3:	xor    ecx,DWORD PTR [ebp+0x3c]
  40b1c6:	(bad)  
  40b1c7:	shl    BYTE PTR [esp+ecx*1-0x51],1
  40b1cb:	(bad)  
  40b1cc:	(bad)  
  40b1cd:	lock push es
  40b1cf:	scas   eax,DWORD PTR es:[edi]
  40b1d0:	sub    esi,DWORD PTR [edx+0x2f]
  40b1d3:	xor    DWORD PTR [ecx-0x1860a9c5],esp
  40b1d9:	xchg   ebx,eax
  40b1da:	in     al,0xc5
  40b1dc:	lahf   
  40b1dd:	push   cs
  40b1de:	xchg   edi,eax
  40b1df:	and    DWORD PTR [eax+0x45],0xf07aa73c
  40b1e6:	jg     0x40b22d
  40b1e8:	jnp    0x40b184
  40b1ea:	jno    0x40b1e4
  40b1ec:	dec    esi
  40b1ed:	das    
  40b1ee:	add    DWORD PTR [ebp+0x1c4f28ee],ebx
  40b1f4:	mov    bh,0x3a
  40b1f6:	push   ebx
  40b1f7:	inc    edi
  40b1f8:	mov    eax,0x4d458ad4
  40b1fd:	imul   esi,DWORD PTR [eax+0x34],0xc
  40b201:	aam    0x20
  40b203:	push   ss
  40b204:	push   ebp
  40b205:	push   edi
  40b206:	dec    ebp
  40b207:	shr    BYTE PTR [ecx+ebp*4],cl
  40b20a:	lahf   
  40b20b:	mov    WORD PTR [eax],cs
  40b20d:	js     0x40b1e8
  40b20f:	mov    ds:0x56d9af38,al
  40b214:	mov    al,ds:0xc7ec27f2
  40b219:	pop    ebx
  40b21a:	lock mov al,ds:0x75cb4eb9
  40b220:	repz jg 0x40b29b
  40b223:	stos   BYTE PTR es:[edi],al
  40b224:	shr    BYTE PTR [edx-0x63],0xd5
  40b228:	jne    0x40b1d0
  40b22a:	xor    ch,BYTE PTR [ecx-0x46]
  40b22d:	jg     0x40b298
  40b22f:	xchg   BYTE PTR [ecx+ecx*2],al
  40b232:	mov    edx,0xfeb22399
  40b237:	mov    WORD PTR [eax],gs
  40b239:	call   0x5bad:0xe9c1fe8c
  40b240:	into   
  40b241:	shr    edx,cl
  40b243:	push   esi
  40b244:	or     al,0x2c
  40b246:	repz sub al,0xfe
  40b249:	dec    ebx
  40b24a:	test   al,0x7a
  40b24c:	or     BYTE PTR ds:0x690d3220,al
  40b252:	add    eax,0xf4623c22
  40b257:	ret    
  40b258:	sbb    ecx,DWORD PTR [edi+0x1a]
  40b25b:	push   esp
  40b25c:	out    0x5b,eax
  40b25e:	hlt    
  40b25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b260:	cmp    DWORD PTR [esp+ebx*4-0x54],esi
  40b264:	jmp    0x40b200
  40b266:	bound  edx,QWORD PTR [esi]
  40b268:	mov    ah,0xa9
  40b26a:	ja     0x40b288
  40b26c:	in     al,dx
  40b26d:	test   eax,0xf2ff10e3
  40b272:	fidivr DWORD PTR [ecx+0x134d59b4]
  40b278:	pop    ss
  40b279:	fcmove st,st(6)
  40b27b:	(bad)  
  40b27c:	pop    ebx
  40b27d:	xchg   esi,eax
  40b27e:	mov    ebp,0xfd40be47
  40b283:	mov    eax,0x1c71a9dd
  40b288:	(bad)  
  40b289:	mov    cl,0xbf
  40b28b:	imul   eax,DWORD PTR [edi],0xfffffffb
  40b28e:	cmc    
  40b28f:	jno    0x40b26b
  40b291:	cmp    BYTE PTR [ebx],dh
  40b293:	inc    ecx
  40b294:	mov    ecx,0x5f8ac732
  40b299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b29a:	xor    al,0xe
  40b29c:	shl    ecx,1
  40b29e:	mov    DWORD PTR [edi+0x2b39d4eb],eax
  40b2a4:	add    esp,edx
  40b2a6:	push   es
  40b2a7:	leave  
  40b2a8:	out    0x10,eax
  40b2aa:	dec    edx
  40b2ab:	mov    ch,0x82
  40b2ad:	sbb    cl,dh
  40b2af:	jae    0x40b262
  40b2b1:	(bad)  [edx]
  40b2b3:	pop    edx
  40b2b4:	test   BYTE PTR [esi+0x689b1e74],ah
  40b2ba:	call   0x67eb:0xd22d497e
  40b2c1:	xlat   BYTE PTR ds:[ebx]
  40b2c2:	or     DWORD PTR [ebx],ecx
  40b2c4:	fnstcw WORD PTR [eax+eax*4]
  40b2c7:	sub    BYTE PTR ds:0x1e11f4bd,0xac
  40b2ce:	push   ds
  40b2cf:	rol    DWORD PTR es:[eax],0x66
  40b2d3:	mov    eax,0xc8202149
  40b2d8:	(bad)  
  40b2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2da:	adc    cl,BYTE PTR ds:0x719a3052
  40b2e0:	cdq    
  40b2e1:	stos   DWORD PTR es:[edi],eax
  40b2e2:	fsubr  DWORD PTR [edx-0x39516415]
  40b2e8:	stc    
  40b2e9:	mov    ecx,0xbc46b148
  40b2ee:	mov    gs,WORD PTR [bx+si+0x5c53]
  40b2f3:	xor    eax,0xa523798
  40b2f8:	inc    ecx
  40b2f9:	ins    BYTE PTR es:[edi],dx
  40b2fa:	arpl   WORD PTR [ecx],si
  40b2fc:	add    al,0xb1
  40b2fe:	push   ebp
  40b2ff:	or     edx,DWORD PTR ds:0xaba59621
  40b305:	daa    
  40b306:	aaa    
  40b307:	add    eax,0x22c670dd
  40b30c:	clc    
  40b30d:	add    al,0xb7
  40b30f:	repnz and DWORD PTR [edx-0x1d],eax
  40b313:	loope  0x40b33d
  40b315:	sub    al,0xb6
  40b317:	and    bh,0x7
  40b31a:	jne    0x40b346
  40b31c:	or     eax,0x74d7386
  40b321:	(bad)  
  40b322:	and    edx,ebp
  40b324:	push   esi
  40b325:	lea    edx,[ebp+0x31d4c50e]
  40b32b:	fld    TBYTE PTR [edx-0x61]
  40b32e:	ins    DWORD PTR es:[edi],dx
  40b32f:	pop    es
  40b330:	mov    esp,0x14777a70
  40b335:	sub    eax,0xb1f0fe30
  40b33a:	(bad)  
  40b33b:	sub    eax,0x751135a0
  40b340:	xchg   ebp,eax
  40b341:	push   0xffffffcb
  40b343:	pop    ebp
  40b344:	scas   eax,DWORD PTR es:[edi]
  40b345:	xchg   ah,ah
  40b347:	push   ss
  40b348:	jmp    0xfd10949e
  40b34d:	ss cld 
  40b34f:	dec    esp
  40b350:	inc    esp
  40b351:	aam    0x85
  40b353:	xchg   edx,eax
  40b354:	pop    edi
  40b355:	(bad)  
  40b356:	enter  0x1de1,0x44
  40b35a:	test   ebx,ebx
  40b35c:	inc    edi
  40b35d:	mov    ss,WORD PTR [ecx-0x47e496b]
  40b363:	jle    0x40b3c4
  40b365:	fcom   DWORD PTR [ebx-0x39c3f66a]
  40b36b:	fisub  DWORD PTR [ebx+0x3c]
  40b36e:	mov    al,ds:0xc7691522
  40b373:	not    DWORD PTR [edx]
  40b375:	das    
  40b376:	inc    eax
  40b377:	ss fwait
  40b379:	js     0x40b3c4
  40b37b:	add    BYTE PTR [edx],al
  40b37d:	std    
  40b37e:	jae    0x40b3bb
  40b380:	dec    ebp
  40b381:	mov    edx,0x9b3b6697
  40b386:	add    BYTE PTR [eax],0xf4
  40b389:	sti    
  40b38a:	cs mov edi,0x5f86367c
  40b390:	(bad)  
  40b391:	or     cl,BYTE PTR [edx]
  40b393:	(bad)  
  40b394:	jb     0x40b3d2
  40b396:	ins    BYTE PTR es:[edi],dx
  40b397:	mov    ecx,ebp
  40b399:	push   ds
  40b39a:	xor    BYTE PTR [edi],0x53
  40b39d:	cmp    BYTE PTR [eax-0x579041bd],0x27
  40b3a4:	ret    
  40b3a5:	xchg   DWORD PTR [ecx],ecx
  40b3a7:	pop    esi
  40b3a8:	outs   dx,DWORD PTR ds:[esi]
  40b3a9:	add    al,dh
  40b3ab:	mov    ds:0xd37774f0,al
  40b3b0:	retf   0x2fd8
  40b3b3:	pop    ecx
  40b3b4:	jecxz  0x40b361
  40b3b6:	cli    
  40b3b7:	adc    eax,0x8b1e9121
  40b3bc:	cmp    BYTE PTR [ebp-0x77],al
  40b3bf:	retf   
  40b3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3c1:	js     0x40b34d
  40b3c3:	mov    edx,0xbb710b98
  40b3c8:	jmp    FWORD PTR [esi]
  40b3ca:	test   al,0x6c
  40b3cc:	scas   al,BYTE PTR es:[edi]
  40b3cd:	pop    es
  40b3ce:	leave  
  40b3cf:	mov    ebp,gs
  40b3d1:	pop    ecx
  40b3d2:	add    BYTE PTR ds:[edi],al
  40b3d5:	jp     0x40b421
  40b3d7:	mov    ch,0x83
  40b3d9:	pop    ecx
  40b3da:	adc    al,0xc2
  40b3dc:	fisttp DWORD PTR [ebx]
  40b3de:	mov    edi,0x4c6168d6
  40b3e3:	ficom  WORD PTR [esi+0x4c]
  40b3e6:	jbe    0x40b3c8
  40b3e8:	xor    DWORD PTR [ebx+eax*8-0x44],edi
  40b3ec:	pusha  
  40b3ed:	mov    cl,0x94
  40b3ef:	fisttp DWORD PTR [esi]
  40b3f1:	mov    edi,0xd73ca02a
  40b3f7:	push   ds
  40b3f8:	inc    esi
  40b3f9:	mov    dh,0x62
  40b3fb:	adc    al,0xd5
  40b3fd:	cmp    DWORD PTR [edx-0x4fe5065d],0x9b594b63
  40b407:	add    ah,0x58
  40b40a:	pop    ecx
  40b40b:	stc    
  40b40c:	pop    ds
  40b40d:	push   edx
  40b40e:	(bad)  
  40b40f:	jp     0x40b3d8
  40b411:	fwait
  40b412:	mov    dh,BYTE PTR [si]
  40b415:	pop    es
  40b416:	mov    dl,0x19
  40b418:	mov    al,0x4e
  40b41a:	inc    ebx
  40b41b:	shl    BYTE PTR [ebx],0x4b
  40b41e:	out    0xda,al
  40b420:	lds    ecx,FWORD PTR [ebp+0x628963e7]
  40b426:	es mov bh,0xb7
  40b429:	inc    esp
  40b42a:	jecxz  0x40b499
  40b42c:	cli    
  40b42d:	data16 icebp 
  40b42f:	xchg   ecx,eax
  40b430:	(bad)  
  40b431:	dec    edi
  40b432:	and    DWORD PTR [edi+0x79],edi
  40b435:	das    
  40b436:	sbb    BYTE PTR [ecx-0x2a494af3],dl
  40b43c:	mov    ebx,0xe2433e8a
  40b441:	sbb    al,0x3
  40b443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b444:	xor    al,0x11
  40b446:	or     DWORD PTR [ebx+0x5a],eax
  40b449:	pop    edi
  40b44a:	sub    DWORD PTR [eax],0x7a
  40b44d:	sub    ecx,DWORD PTR ds:[ebx-0x3b]
  40b451:	imul   ecx,DWORD PTR [ebx+0x70],0x91c7e049
  40b458:	sar    dl,1
  40b45a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b45b:	mov    ch,0x1
  40b45d:	popf   
  40b45e:	ret    
  40b45f:	rcr    BYTE PTR [eax+0x56451023],cl
  40b465:	pusha  
  40b466:	mov    dl,0xa
  40b468:	ret    
  40b469:	adc    eax,DWORD PTR [ecx-0x5b]
  40b46c:	ins    BYTE PTR es:[edi],dx
  40b46d:	stc    
  40b46e:	xchg   ebp,eax
  40b46f:	xchg   ebp,eax
  40b470:	cs xchg edx,eax
  40b472:	shl    ch,0xef
  40b475:	jl     0x40b4ec
  40b477:	fadd   st(7),st
  40b479:	pop    edi
  40b47a:	jge    0x40b424
  40b47c:	mov    ah,0xe0
  40b47e:	cmp    eax,0xd5bc5bd9
  40b483:	xlat   BYTE PTR ds:[ebx]
  40b484:	or     eax,0x48271674
  40b489:	daa    
  40b48a:	or     dh,BYTE PTR [ecx+edi*1]
  40b48d:	jmp    0x40b4e0
  40b48f:	cdq    
  40b490:	jns    0x40b4d5
  40b492:	mov    al,ds:0x4882fdf0
  40b497:	mov    ebx,0x520d0524
  40b49c:	out    0x8d,al
  40b49e:	xchg   edx,eax
  40b49f:	jb     0x40b4a6
  40b4a1:	loopne 0x40b4e9
  40b4a3:	dec    ecx
  40b4a4:	out    dx,eax
  40b4a5:	cld    
  40b4a6:	sbb    bh,BYTE PTR [ebx+0x63f6478b]
  40b4ac:	mov    al,ds:0x98fe1570
  40b4b1:	pop    ebx
  40b4b2:	fnstsw WORD PTR [ebp-0x14cc1d48]
  40b4b8:	push   edi
  40b4b9:	sbb    BYTE PTR [ebp+0x40],dl
  40b4bc:	ret    
  40b4bd:	bound  edx,QWORD PTR [ebp+0x20cf5e16]
  40b4c3:	mov    ds:0xbcbcbabe,al
  40b4c8:	xchg   ecx,eax
  40b4c9:	adc    ebp,DWORD PTR [ebx-0x15f5665a]
  40b4cf:	test   eax,0x9ffbcc35
  40b4d4:	push   es
  40b4d5:	jns    0x40b4ad
  40b4d7:	nop
  40b4d8:	lea    esp,[edi-0x363352f4]
  40b4de:	cmp    bh,BYTE PTR [ecx+0x4b]
  40b4e1:	bound  esi,QWORD PTR [ecx+0x4ce48fb2]
  40b4e7:	(bad)  
  40b4e8:	and    eax,0xe25a3329
  40b4ed:	or     DWORD PTR [esi+0x63],ebp
  40b4f0:	sub    esi,DWORD PTR [ebp+0x2c453287]
  40b4f6:	and    eax,0x9a6bc2c0
  40b4fb:	adc    BYTE PTR [ecx],0xb5
  40b4fe:	shl    DWORD PTR [esp+esi*4-0x5d93e97e],1
  40b505:	push   eax
  40b506:	xchg   BYTE PTR [esi+0x4a],dl
  40b509:	mov    eax,DWORD PTR [eax-0x68eea9c4]
  40b50f:	xor    ebp,DWORD PTR [edi+0x56]
  40b512:	mov    ds:0x43d47110,al
  40b517:	popa   
  40b518:	iret   
  40b519:	mov    BYTE PTR [ebp-0x11],0xff
  40b51d:	push   edx
  40b51e:	lds    eax,FWORD PTR [ebp-0x2e]
  40b521:	ror    ah,cl
  40b523:	adc    BYTE PTR [edi-0x7de29074],dh
  40b529:	push   ebp
  40b52a:	popf   
  40b52b:	xchg   esi,eax
  40b52c:	pop    ebx
  40b52d:	xchg   edi,eax
  40b52e:	mov    eax,ds:0xc819744b
  40b533:	adc    eax,0xfef320dd
  40b538:	and    eax,ebx
  40b53a:	sub    al,0x66
  40b53c:	inc    ecx
  40b53d:	int    0x9f
  40b53f:	cdq    
  40b540:	cmp    BYTE PTR [ecx+0x70],bh
  40b543:	sub    esi,ebx
  40b545:	adc    al,0x61
  40b547:	aas    
  40b548:	xor    al,0x74
  40b54a:	add    edi,DWORD PTR [edi]
  40b54c:	push   esp
  40b54d:	or     dl,bh
  40b54f:	dec    ebp
  40b550:	cmp    DWORD PTR [ebp+0x30],edi
  40b553:	pushf  
  40b554:	add    al,0xb0
  40b556:	out    dx,al
  40b557:	fwait
  40b558:	pop    ebx
  40b559:	lds    eax,FWORD PTR [ecx]
  40b55b:	xor    BYTE PTR ds:0x31607c7b,dl
  40b561:	mov    edi,0x3f5a7d5d
  40b566:	lods   eax,DWORD PTR ds:[esi]
  40b567:	scas   al,BYTE PTR es:[edi]
  40b568:	mov    bh,0xd1
  40b56a:	(bad)  
  40b56c:	push   ecx
  40b56d:	shr    BYTE PTR [edx+0x59],cl
  40b570:	loop   0x40b542
  40b572:	xor    ebx,DWORD PTR [ecx]
  40b574:	int3   
  40b575:	ds jecxz 0x40b589
  40b578:	push   edx
  40b579:	xchg   DWORD PTR [ebp-0x44],esp
  40b57c:	xlat   BYTE PTR ds:[ebx]
  40b57d:	cli    
  40b57e:	jg     0x40b5cd
  40b580:	mov    esp,0x7506697d
  40b585:	cli    
  40b586:	sbb    BYTE PTR [ebp+0x1d],ah
  40b589:	xchg   esi,eax
  40b58a:	repz cmp al,0xcc
  40b58d:	inc    edx
  40b58e:	test   DWORD PTR [edx-0x5b21386f],0xf6c2541f
  40b598:	cmp    dl,ch
  40b59a:	jecxz  0x40b5d5
  40b59c:	sahf   
  40b59d:	push   eax
  40b59e:	mov    ds:0xe9020bc3,eax
  40b5a3:	(bad)  
  40b5a4:	jp     0x40b545
  40b5a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5a7:	jae    0x40b5ac
  40b5a9:	and    BYTE PTR [esi+ebp*2-0x1a7812b4],cl
  40b5b0:	jle    0x40b600
  40b5b2:	mov    ecx,0xf039b303
  40b5b7:	push   0xbdca09d1
  40b5bc:	jb     0x40b5ab
  40b5be:	mov    cl,ah
  40b5c0:	icebp  
  40b5c1:	mov    ecx,0x44f411b2
  40b5c6:	xor    edx,ecx
  40b5c8:	cmp    eax,ebp
  40b5ca:	xor    dl,BYTE PTR [edi-0x43]
  40b5cd:	add    BYTE PTR [ecx+0x3085c273],cl
  40b5d3:	sbb    edx,DWORD PTR [edx-0x1]
  40b5d6:	cmp    BYTE PTR [edx],dh
  40b5d8:	bound  ebp,QWORD PTR [esi-0x5d]
  40b5db:	jl     0x40b623
  40b5dd:	jle    0x40b578
  40b5df:	test   DWORD PTR ds:0x4fbb35f9,edx
  40b5e5:	fs fwait
  40b5e7:	mov    esi,0xfd19be84
  40b5ec:	js     0x40b5f3
  40b5ee:	push   esi
  40b5ef:	and    esi,DWORD PTR [esi+ebx*1-0x381fd6cc]
  40b5f6:	icebp  
  40b5f7:	sbb    eax,0x5114b85e
  40b5fc:	pusha  
  40b5fd:	push   ds
  40b5fe:	push   ds
  40b5ff:	fistp  DWORD PTR [esp+ebp*8]
  40b602:	out    dx,eax
  40b603:	push   ds
  40b604:	out    dx,eax
  40b605:	addr16 xchg ebp,eax
  40b607:	(bad)  
  40b608:	push   ecx
  40b609:	jmp    0x6f11f931
  40b60e:	iret   
  40b60f:	add    esp,DWORD PTR [esi-0x244ddc44]
  40b615:	sbb    DWORD PTR [ebx],edi
  40b617:	fstp   QWORD PTR [edi-0x71]
  40b61a:	jae    0x40b626
  40b61c:	sub    al,0x49
  40b61e:	add    DWORD PTR [ebx+0x21],ecx
  40b621:	popf   
  40b622:	lock popf 
  40b624:	arpl   WORD PTR [edx-0x6a7abf53],cx
  40b62a:	xchg   esp,eax
  40b62b:	push   esp
  40b62c:	mov    esi,gs
  40b62e:	call   0xd66d:0xd2971eba
  40b635:	movd   mm7,DWORD PTR [edx+0x36c51368]
  40b63c:	dec    eax
  40b63d:	mov    ebx,0x6fe77867
  40b642:	icebp  
  40b643:	mov    al,0x53
  40b645:	mov    WORD PTR [ecx],ds
  40b647:	mov    eax,0x7f57aea4
  40b64c:	movaps XMMWORD PTR [ebx],xmm1
  40b64f:	iret   
  40b650:	data16 or ah,dh
  40b653:	test   BYTE PTR ds:[ebx+eiz*8-0x73d20865],ch
  40b65b:	out    dx,al
  40b65c:	pop    edi
  40b65d:	fs xchg edi,eax
  40b65f:	sar    DWORD PTR [bx+di-0x4a42],0x7a
  40b665:	mov    esp,0x8ce04eb5
  40b66a:	aad    0xde
  40b66c:	push   edx
  40b66d:	(bad)  
  40b66f:	mov    ecx,0x77f2fd7
  40b674:	mov    esi,0x78a7e46d
  40b679:	xchg   ebp,eax
  40b67a:	or     esi,ecx
  40b67c:	add    eax,0xf6b93a81
  40b681:	xchg   ebp,eax
  40b682:	sub    DWORD PTR [esi+0x40df9dbb],0xfac769f
  40b68c:	ins    DWORD PTR es:[edi],dx
  40b68d:	outs   dx,DWORD PTR ds:[esi]
  40b68e:	mov    eax,ds:0x98987a91
  40b693:	ja     0x40b6b6
  40b695:	mov    esp,0xaed065a0
  40b69a:	pop    edx
  40b69b:	sbb    cl,bl
  40b69d:	jge    0x40b6fb
  40b69f:	ss cld 
  40b6a1:	pop    ebp
  40b6a2:	shr    DWORD PTR ds:0x2a982e15,cl
  40b6a8:	test   BYTE PTR [ecx-0x4e6d8524],dl
  40b6ae:	call   0x30fef9a9
  40b6b3:	arpl   WORD PTR [ecx],bx
  40b6b5:	mov    dh,0x47
  40b6b7:	jmp    0x40b704
  40b6b9:	mov    ds:0x72a3cb22,al
  40b6be:	mov    esp,0x23099fdb
  40b6c3:	loope  0x40b6d3
  40b6c5:	aas    
  40b6c6:	pop    ebp
  40b6c7:	dec    edi
  40b6c8:	push   edx
  40b6c9:	push   es
  40b6ca:	ss in  eax,dx
  40b6cc:	xchg   esi,eax
  40b6cd:	push   esp
  40b6ce:	and    dh,bl
  40b6d0:	dec    ecx
  40b6d1:	xchg   esp,eax
  40b6d2:	jle    0x40b6e1
  40b6d4:	mov    ds:0x5dae7a14,al
  40b6d9:	push   ecx
  40b6da:	or     eax,0xb2becd02
  40b6df:	cmp    DWORD PTR [ebx+esi*4-0x79],edx
  40b6e3:	imul   edi,DWORD PTR [ebx+0x9c377ca],0xffffffb5
  40b6ea:	inc    ebx
  40b6eb:	mov    ah,0xcd
  40b6ed:	cmp    BYTE PTR cs:[eax+edi*8-0x2808b07f],bh
  40b6f5:	or     ah,BYTE PTR ds:0x8a613dc4
  40b6fb:	add    dl,BYTE PTR [edi+0x60]
  40b6fe:	xor    BYTE PTR [edx-0x16063ed3],ah
  40b704:	enter  0x6759,0x3a
  40b708:	mov    esi,DWORD PTR [ebx]
  40b70a:	add    edi,ebp
  40b70c:	mov    bl,0x0
  40b70e:	imul   ecx,DWORD PTR [ecx-0x38001c49],0x29017106
  40b718:	or     al,0xe5
  40b71a:	mov    ch,0xc8
  40b71c:	loop   0x40b6ad
  40b71e:	cmp    DWORD PTR [ebx+eiz*4],esp
  40b721:	sbb    eax,0xd9dad0
  40b726:	cld    
  40b727:	das    
  40b728:	pop    ecx
  40b729:	rcr    DWORD PTR [ebx+0x27],1
  40b72c:	mov    cs,WORD PTR [edx+ecx*1+0x62c32051]
  40b733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b734:	push   edi
  40b735:	frstor [edx+0x49e979b7]
  40b73b:	in     eax,dx
  40b73c:	pop    eax
  40b73d:	push   edx
  40b73e:	and    cl,BYTE PTR [edi]
  40b740:	retf   
  40b741:	(bad)  
  40b743:	add    DWORD PTR [ebx+0x4bda8c55],ebx
  40b749:	jmp    0x40b768
  40b74b:	cmp    ebx,0x6844794f
  40b751:	inc    esp
  40b752:	cmp    al,0x36
  40b754:	sub    eax,0x333d3322
  40b759:	cmp    eax,0xc8f28be8
  40b75e:	aad    0x4e
  40b760:	sub    DWORD PTR [esp+eiz*2+0x9],esp
  40b764:	mov    al,0xd4
  40b766:	lds    eax,FWORD PTR [ebp-0x70]
  40b769:	xchg   ebx,eax
  40b76a:	dec    esi
  40b76b:	sub    bh,BYTE PTR [ebx+0x76]
  40b76e:	mov    ds:0xa9fe04ff,al
  40b773:	scas   al,BYTE PTR es:[edi]
  40b774:	xor    DWORD PTR [ebx],0x19225d80
  40b77a:	sar    edi,0x38
  40b77d:	sahf   
  40b77e:	pop    eax
  40b77f:	imul   esp,DWORD PTR [eax+0x67],0x0
  40b783:	adc    dl,dl
  40b785:	cld    
  40b786:	test   al,0xc5
  40b788:	rol    cl,0x97
  40b78b:	ror    DWORD PTR [edi+0x67],0x13
  40b78f:	call   0xcecc:0xd9ba7105
  40b796:	pop    ebx
  40b797:	or     bh,BYTE PTR [edx+edx*1+0x4a40eec]
  40b79e:	arpl   sp,sp
  40b7a0:	js     0x40b750
  40b7a2:	push   edi
  40b7a3:	outs   dx,DWORD PTR ds:[esi]
  40b7a4:	jmp    0xa6c6ceb
  40b7a9:	fist   DWORD PTR [ebx+0x3c7980f3]
  40b7af:	lds    edi,FWORD PTR [edx]
  40b7b1:	xor    BYTE PTR [ecx-0x3],0x9b
  40b7b5:	xor    ecx,DWORD PTR [esp+eax*4]
  40b7b8:	fnstcw WORD PTR [edi+0x52]
  40b7bb:	loop   0x40b7d3
  40b7bd:	sub    eax,0x93658bc6
  40b7c2:	pop    edx
  40b7c3:	fdivr  st,st(0)
  40b7c5:	add    DWORD PTR [ecx+0x578e764a],edx
  40b7cb:	loop   0x40b7da
  40b7cd:	mov    bh,0xfb
  40b7cf:	(bad)  
  40b7d0:	js     0x40b7a0
  40b7d2:	dec    esi
  40b7d3:	push   es
  40b7d4:	jae    0x40b812
  40b7d6:	mov    ds:0x51b6ccf0,al
  40b7db:	mov    ch,0x3e
  40b7dd:	inc    DWORD PTR [ebx+0x28]
  40b7e0:	rcr    BYTE PTR [ecx+edx*8-0xf],1
  40b7e4:	aaa    
  40b7e5:	into   
  40b7e6:	xor    BYTE PTR [ebx+0x7],al
  40b7e9:	jbe    0x40b810
  40b7eb:	addr16 sti 
  40b7ed:	mov    WORD PTR fs:[ecx-0x73d6111e],cs
  40b7f4:	pop    ds
  40b7f5:	jmp    0x56e3b2a8
  40b7fa:	into   
  40b7fb:	fidivr DWORD PTR [ebp-0x25]
  40b7fe:	add    eax,0xe49a474c
  40b803:	pusha  
  40b804:	and    esp,ecx
  40b806:	inc    esp
  40b807:	les    ebp,FWORD PTR [esi]
  40b809:	bound  esi,QWORD PTR [ecx]
  40b80b:	xor    DWORD PTR [edx],ebp
  40b80d:	ja     0x40b887
  40b80f:	push   0xffffffc0
  40b811:	pusha  
  40b812:	jbe    0x40b893
  40b814:	dec    ebx
  40b815:	arpl   WORD PTR [esi-0x7a],dx
  40b818:	fisttp QWORD PTR [esi+ecx*8]
  40b81b:	ins    DWORD PTR es:[edi],dx
  40b81c:	pop    edi
  40b81d:	add    ebx,DWORD PTR ds:0xb8305ec6
  40b823:	orps   xmm7,xmm5
  40b826:	ffree  st(2)
  40b828:	cmp    BYTE PTR [eax-0x70aa5b99],bh
  40b82e:	in     eax,dx
  40b82f:	push   ebp
  40b830:	ja     0x40b887
  40b832:	rcl    BYTE PTR [ecx+0x22],0x3e
  40b836:	sbb    al,0xb7
  40b838:	ss inc edx
  40b83a:	xchg   edx,eax
  40b83b:	sbb    DWORD PTR [ebp+0x6f35d834],edi
  40b841:	jmp    0xd26f7b50
  40b846:	aam    0xbb
  40b848:	cdq    
  40b849:	jmp    0xd918efe2
  40b84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b84f:	fs dec ebx
  40b851:	int    0xf6
  40b853:	dec    ebx
  40b854:	sahf   
  40b855:	pop    ss
  40b856:	xchg   edx,eax
  40b857:	test   eax,0xfa5012dc
  40b85c:	cli    
  40b85d:	mov    dl,0xbd
  40b85f:	dec    ecx
  40b860:	and    eax,0x96bfcaaf
  40b865:	in     eax,dx
  40b866:	push   eax
  40b867:	push   esp
  40b868:	mov    es,WORD PTR [ecx+0x6a26ee8d]
  40b86e:	add    DWORD PTR [esi-0x64],eax
  40b871:	test   DWORD PTR [esi+0x56],ebx
  40b874:	jno    0x40b81b
  40b876:	dec    eax
  40b877:	jge    0x40b81b
  40b879:	add    BYTE PTR [eax+eiz*8],dh
  40b87c:	adc    eax,0xcffcbe2a
  40b881:	test   DWORD PTR [edi-0x372e7a4],0x69757884
  40b88b:	pop    es
  40b88c:	and    al,0x2
  40b88e:	lds    ebp,FWORD PTR [edx]
  40b890:	cli    
  40b891:	(bad)  
  40b892:	fcomp  QWORD PTR [eax]
  40b894:	mov    cl,0xba
  40b896:	arpl   ax,cx
  40b898:	or     edx,DWORD PTR [ebp+ecx*4+0x2608c93f]
  40b89f:	test   al,0x83
  40b8a1:	xor    DWORD PTR [ecx+0x73afd11b],eax
  40b8a7:	jp     0x40b885
  40b8a9:	out    0xcc,al
  40b8ab:	pop    ecx
  40b8ac:	jmp    0x40b8c5
  40b8ae:	jnp    0x40b8e3
  40b8b0:	mov    esp,DWORD PTR [edx-0x26]
  40b8b3:	shr    BYTE PTR [esi],cl
  40b8b5:	jne    0x40b8ec
  40b8b7:	sahf   
  40b8b8:	xchg   esi,eax
  40b8b9:	and    esi,ebp
  40b8bb:	rol    BYTE PTR [edi],0x41
  40b8be:	call   0xc7b1d5f0
  40b8c3:	ss stos DWORD PTR es:[edi],eax
  40b8c5:	inc    ebp
  40b8c6:	out    dx,eax
  40b8c7:	mov    dh,0x62
  40b8c9:	dec    esp
  40b8ca:	mov    ds:0x7473c26f,al
  40b8cf:	mul    eax
  40b8d1:	mov    DWORD PTR [eax+eax*4-0x29],edi
  40b8d5:	outs   dx,BYTE PTR ds:[esi]
  40b8d6:	xor    esi,DWORD PTR [edx-0x26f8749b]
  40b8dc:	cmp    BYTE PTR [eax],0xb0
  40b8df:	cmp    dh,al
  40b8e1:	sub    eax,0x7279ba73
  40b8e6:	test   ebx,eax
  40b8e8:	fldln2 
  40b8ea:	test   DWORD PTR [ebx],edx
  40b8ec:	out    dx,eax
  40b8ed:	mov    dh,al
  40b8ef:	xor    BYTE PTR [esi+ebx*2-0x4e389eca],bh
  40b8f6:	adc    BYTE PTR [edi],0x5b
  40b8f9:	mov    ebx,0x517ebd19
  40b8fe:	popf   
  40b8ff:	pop    edi
  40b900:	push   ecx
  40b901:	test   DWORD PTR [eax-0x44],edx
  40b904:	shl    BYTE PTR [ebx-0x31fca275],cl
  40b90a:	sub    BYTE PTR [edi+0x7badf35f],dl
  40b910:	data16 xchg BYTE PTR [esi-0x22941947],dl
  40b917:	push   es
  40b918:	mov    esp,0xd28018bc
  40b91d:	fistp  QWORD PTR [ebp+0x56]
  40b920:	ja     0x40b8fa
  40b922:	int    0x1a
  40b924:	inc    edi
  40b925:	dec    ebx
  40b926:	into   
  40b927:	cli    
  40b928:	inc    ebp
  40b929:	test   al,0x42
  40b92b:	inc    eax
  40b92c:	xor    eax,0x554701e3
  40b931:	cmp    esi,DWORD PTR [ebp+0x57]
  40b934:	ror    BYTE PTR [edx+0x2],0x8e
  40b938:	mov    cl,0x6f
  40b93a:	and    al,0xae
  40b93c:	push   ecx
  40b93d:	mov    ecx,DWORD PTR [ebx]
  40b93f:	and    dl,bh
  40b941:	jl     0x40b9c0
  40b943:	xlat   BYTE PTR ds:[ebx]
  40b944:	test   DWORD PTR [esi-0x3c],eax
  40b947:	jmp    DWORD PTR [edi+0x6181506c]
  40b94d:	sti    
  40b94e:	mov    ds:0x69728a97,eax
  40b953:	retf   
  40b954:	push   0x728a29a9
  40b959:	ret    
  40b95a:	mov    dh,0x86
  40b95c:	iret   
  40b95d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95e:	retf   0x2fe8
  40b961:	cmp    BYTE PTR [eax-0x6e],dl
  40b964:	je     0x40b90b
  40b966:	lds    edi,FWORD PTR [eax+0x1a]
  40b969:	pop    eax
  40b96a:	xor    DWORD PTR [edi-0x198f1b81],esi
  40b970:	clc    
  40b971:	outs   dx,DWORD PTR ds:[esi]
  40b972:	ins    BYTE PTR es:[edi],dx
  40b973:	mov    ch,0x41
  40b975:	sbb    edx,DWORD PTR [eax-0xa]
  40b978:	mov    dh,0xfe
  40b97a:	std    
  40b97b:	cdq    
  40b97c:	pop    ecx
  40b97d:	sahf   
  40b97e:	inc    edi
  40b97f:	mov    edi,0x27526de0
  40b984:	jae    0x40b9a4
  40b986:	pop    edx
  40b987:	xor    edi,eax
  40b989:	shl    ecx,1
  40b98b:	inc    esi
  40b98c:	cld    
  40b98d:	adc    al,0xf0
  40b98f:	sbb    eax,0x7db29f90
  40b994:	nop
  40b995:	icebp  
  40b996:	and    eax,DWORD PTR [esi+0x6c]
  40b999:	rcl    DWORD PTR [edx],0x3e
  40b99c:	mov    ebp,DWORD PTR [esi]
  40b99e:	out    dx,al
  40b99f:	into   
  40b9a0:	les    ebp,FWORD PTR [ebp-0x2c]
  40b9a3:	sbb    eax,0x25e89d72
  40b9a8:	dec    ebx
  40b9a9:	loopne 0x40b938
  40b9ab:	mov    ds:0xecc600ab,eax
  40b9b0:	ds push es
  40b9b2:	sar    edi,cl
  40b9b4:	ss inc ebp
  40b9b6:	lahf   
  40b9b7:	je     0x40b9de
  40b9b9:	and    esi,0x6a9d4fea
  40b9bf:	and    eax,0x88fe85d2
  40b9c4:	mov    ebp,0x74fbf928
  40b9c9:	out    dx,al
  40b9ca:	sti    
  40b9cb:	sub    BYTE PTR [ebp-0x48],al
  40b9ce:	ficomp DWORD PTR [esi]
  40b9d0:	push   esp
  40b9d1:	in     eax,0xfb
  40b9d3:	cmp    esi,DWORD PTR ds:0xfcfe63c8
  40b9d9:	mov    al,bh
  40b9db:	out    dx,eax
  40b9dc:	gs sub eax,0xf585cc1c
  40b9e2:	push   ecx
  40b9e3:	daa    
  40b9e4:	bound  ebp,QWORD PTR [ebx-0x3ead75d5]
  40b9ea:	pop    eax
  40b9eb:	jecxz  0x40ba32
  40b9ed:	add    ecx,DWORD PTR [edi+0x74]
  40b9f0:	inc    ebx
  40b9f1:	or     DWORD PTR [ecx],ebx
  40b9f3:	test   eax,0x36090e05
  40b9f8:	mov    edx,0x4d545eb2
  40b9fd:	mov    ?,WORD PTR [edi+esi*4+0x3b]
  40ba01:	xor    al,0xff
  40ba03:	and    al,0x10
  40ba05:	pop    ecx
  40ba06:	mov    edi,0xc97f470
  40ba0b:	xor    dh,cl
  40ba0d:	in     eax,dx
  40ba0e:	fstp   DWORD PTR [eax+0x34bba96c]
  40ba14:	scas   al,BYTE PTR es:[edi]
  40ba15:	sbb    cl,ch
  40ba17:	and    eax,0x71dd9b88
  40ba1c:	mov    ch,0x18
  40ba1e:	pop    edi
  40ba1f:	aad    0xf4
  40ba21:	inc    eax
  40ba22:	push   ebx
  40ba23:	mov    edx,0x896d7ab7
  40ba28:	pusha  
  40ba29:	xchg   BYTE PTR [ebx+0x2ffc2a25],ah
  40ba2f:	fstp   QWORD PTR [eax-0x49]
  40ba32:	out    dx,al
  40ba33:	ror    DWORD PTR [edx-0xb],1
  40ba36:	dec    edi
  40ba37:	popa   
  40ba38:	or     al,0x39
  40ba3a:	inc    edx
  40ba3b:	mov    ds:0x3daeb3b4,eax
  40ba40:	mov    esi,0x9c135ade
  40ba45:	add    cl,BYTE PTR [edx]
  40ba47:	mov    eax,ds:0xfe7c7c4b
  40ba4c:	repnz push esi
  40ba4e:	pop    edi
  40ba4f:	xlat   BYTE PTR ds:[ebx]
  40ba50:	add    bl,BYTE PTR [esi+0x149f778e]
  40ba56:	jg     0x40baca
  40ba58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba59:	push   es
  40ba5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba5b:	jp     0x40bada
  40ba5d:	inc    ecx
  40ba5e:	pop    edx
  40ba5f:	test   BYTE PTR [eax+edi*8],ch
  40ba62:	js     0x40bad2
  40ba64:	shl    ebp,0xb2
  40ba67:	jae    0x40ba27
  40ba69:	in     eax,dx
  40ba6a:	jns    0x40babc
  40ba6c:	call   0xe284150c
  40ba71:	dec    BYTE PTR [ebx+0x38]
  40ba74:	outs   dx,DWORD PTR ds:[esi]
  40ba75:	imul   edi,DWORD PTR [ebp+ebp*4+0x61],0xffffffc9
  40ba7a:	add    bl,BYTE PTR [ebp+0x23]
  40ba7d:	popa   
  40ba7e:	mov    bh,BYTE PTR [edx-0x2d]
  40ba81:	xchg   ebx,eax
  40ba82:	xchg   BYTE PTR [eax+0x38795812],bl
  40ba88:	push   ds
  40ba89:	fs dec ecx
  40ba8b:	test   BYTE PTR [ebx],cl
  40ba8d:	cld    
  40ba8e:	xchg   ebp,eax
  40ba8f:	dec    edx
  40ba90:	loopne 0x40baaf
  40ba92:	push   ecx
  40ba93:	fcom   DWORD PTR ds:0xba2826ad
  40ba99:	sar    DWORD PTR [ecx+0x1d],0xe4
  40ba9d:	fcmovbe st,st(3)
  40ba9f:	mov    ebx,DWORD PTR [ebx+ebx*2+0x2f]
  40baa3:	or     al,0x59
  40baa5:	retf   0x1b51
  40baa8:	pop    esp
  40baa9:	cmp    DWORD PTR [edx],0x30
  40baac:	sub    eax,0xc944cba8
  40bab1:	xchg   esp,eax
  40bab2:	lahf   
  40bab3:	aad    0xdb
  40bab5:	ja     0x40ba62
  40bab7:	icebp  
  40bab8:	adc    eax,0x3d67d556
  40babd:	cmp    BYTE PTR [ebx-0x2d],dh
  40bac0:	mov    ah,bh
  40bac2:	jp     0x40bb26
  40bac4:	js     0x40ba73
  40bac6:	sbb    esp,DWORD PTR [ebp+0x54]
  40bac9:	sub    eax,0x87413fec
  40bace:	mov    esp,eax
  40bad0:	push   cs
  40bad1:	int3   
  40bad2:	out    dx,al
  40bad3:	inc    esp
  40bad4:	push   eax
  40bad5:	push   eax
  40bad6:	mov    esi,0x9ac2aeb
  40badb:	clc    
  40badc:	stos   DWORD PTR es:[edi],eax
  40badd:	mov    dl,0x6e
  40badf:	js     0x40ba87
  40bae1:	data16 (bad) 
  40bae3:	loopne 0x40bb06
  40bae5:	xchg   ecx,eax
  40bae6:	pusha  
  40bae7:	dec    esi
  40bae8:	add    al,0x5f
  40baea:	call   0x5d44c546
  40baef:	pop    edx
  40baf0:	ds pop ebx
  40baf2:	out    dx,eax
  40baf3:	add    DWORD PTR [ecx],edi
  40baf5:	push   ecx
  40baf6:	out    0x86,al
  40baf8:	popf   
  40baf9:	inc    ebx
  40bafa:	mov    cl,0x62
  40bafc:	adc    al,0xbe
  40bafe:	lds    edx,FWORD PTR [edx]
  40bb00:	fidiv  WORD PTR [ebx+0x25]
  40bb03:	aad    0x7
  40bb05:	pop    ebp
  40bb06:	rol    BYTE PTR [eax+ebp*8-0x10199cf5],0x9f
  40bb0e:	retf   0x49f3
  40bb11:	std    
  40bb12:	jp     0x40baeb
  40bb14:	jmp    0xf2d58728
  40bb19:	aaa    
  40bb1a:	cwde   
  40bb1b:	mov    esi,DWORD PTR [edi-0x3787cf7e]
  40bb21:	mov    ds:0x5055321b,eax
  40bb26:	push   0xe01cda64
  40bb2b:	int3   
  40bb2c:	arpl   WORD PTR [eax-0xac62602],di
  40bb32:	out    0x52,al
  40bb34:	xor    DWORD PTR [eax+ebx*1],0x5e2ca8f6
  40bb3b:	sub    DWORD PTR [eax],ebx
  40bb3d:	jg     0x40bb7f
  40bb3f:	inc    edx
  40bb40:	or     eax,0xadd290db
  40bb45:	or     al,0x7b
  40bb47:	and    eax,0xcbee177e
  40bb4c:	(bad)  
  40bb4d:	aam    0xa4
  40bb4f:	mov    edi,0x95975a56
  40bb54:	stc    
  40bb55:	clc    
  40bb56:	mov    ebp,0x1c08c80f
  40bb5b:	add    al,0x25
  40bb5d:	mov    bl,0x8b
  40bb5f:	addr16 sbb al,0x93
  40bb62:	icebp  
  40bb63:	adc    BYTE PTR [edx],bh
  40bb65:	dec    edx
  40bb66:	or     al,0xa8
  40bb68:	pop    ebp
  40bb69:	ds nop
  40bb6b:	add    cl,ah
  40bb6d:	push   esi
  40bb6e:	ficom  DWORD PTR [edi-0x66bc6625]
  40bb74:	inc    edx
  40bb75:	test   DWORD PTR [ebx-0x5b],0xd18d3f76
  40bb7c:	fisttp WORD PTR [edx]
  40bb7e:	adc    BYTE PTR [esi-0x347a7b2],0xb1
  40bb85:	xor    BYTE PTR [eax+eiz*4+0x34e1728],dh
  40bb8c:	cmp    cl,BYTE PTR [edi-0x502bc3de]
  40bb92:	mov    esi,0xbcbf5491
  40bb97:	dec    esp
  40bb98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb99:	push   0xd7c03496
  40bb9e:	pop    ebx
  40bb9f:	retf   0xac14
  40bba2:	lock and BYTE PTR [esi],ch
  40bba5:	call   0x3f18:0x4d80cd25
  40bbac:	xchg   esp,esi
  40bbae:	adc    cl,dl
  40bbb0:	inc    ebx
  40bbb1:	xchg   edx,eax
  40bbb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbb3:	adc    al,0xa5
  40bbb5:	mov    bl,0x65
  40bbb7:	rcl    DWORD PTR [edi+0x3b04f2ae],cl
  40bbbd:	dec    ecx
  40bbbe:	(bad)  
  40bbc0:	push   cs
  40bbc1:	neg    edx
  40bbc3:	rcl    BYTE PTR [esi-0x6d],cl
  40bbc6:	ficom  WORD PTR [ebx]
  40bbc8:	int3   
  40bbc9:	push   ebp
  40bbca:	pushf  
  40bbcb:	outs   dx,DWORD PTR ds:[esi]
  40bbcc:	sub    DWORD PTR [ebp+0x21],ebx
  40bbcf:	mov    esp,0x3f6c9198
  40bbd4:	or     al,0x1a
  40bbd6:	pop    edi
  40bbd7:	inc    edx
  40bbd8:	add    bl,BYTE PTR [ebx]
  40bbda:	and    eax,0xe3ea4694
  40bbdf:	test   DWORD PTR [esi-0x51],0x4444392
  40bbe6:	mov    edi,0x8c98c16f
  40bbeb:	inc    eax
  40bbec:	cmp    DWORD PTR ds:0x5692e347,edx
  40bbf2:	daa    
  40bbf3:	std    
  40bbf4:	inc    ebx
  40bbf5:	inc    ebp
  40bbf6:	and    al,BYTE PTR [eax-0x72]
  40bbf9:	popf   
  40bbfa:	dec    edx
  40bbfb:	sbb    DWORD PTR [edx],eax
  40bbfd:	stc    
  40bbfe:	adc    al,0xfa
  40bc00:	mov    edi,0x1401855e
  40bc05:	pop    ebx
  40bc06:	mov    ch,0xa6
  40bc08:	dec    esp
  40bc09:	repnz (bad) 
  40bc0c:	and    al,0xff
  40bc0e:	or     dh,BYTE PTR [ebp+0x48]
  40bc11:	push   es
  40bc12:	mov    BYTE PTR [ecx+ebp*8-0x7],ch
  40bc16:	stos   BYTE PTR es:[edi],al
  40bc17:	pop    esp
  40bc18:	dec    eax
  40bc19:	js     0x40bbfe
  40bc1b:	add    ebx,eax
  40bc1d:	popa   
  40bc1e:	call   DWORD PTR [esi+0x6c]
  40bc21:	adc    cl,BYTE PTR [edx-0x70d5d51d]
  40bc27:	loop   0x40bc00
  40bc29:	cld    
  40bc2a:	pop    ecx
  40bc2b:	and    al,0x40
  40bc2d:	cld    
  40bc2e:	xor    DWORD PTR [ebx-0x499d3cc6],0x6487ccf6
  40bc38:	dec    eax
  40bc39:	cmp    BYTE PTR [ebx+eax*1+0x0],0x2b
  40bc3e:	cmp    eax,0xd090a36f
  40bc43:	jbe    0x40bbc6
  40bc45:	(bad)  
  40bc46:	adc    DWORD PTR [ebp+0x352b5fb8],edi
  40bc4c:	imul   esp,DWORD PTR [ebp-0x6b],0x67
  40bc50:	sbb    DWORD PTR [esi+0x27],esi
  40bc53:	mul    DWORD PTR [edx+0xc09322f]
  40bc59:	pop    ecx
  40bc5a:	and    BYTE PTR [edi+0x10487a7b],dh
  40bc60:	in     eax,0xc9
  40bc62:	jge    0x40bcd6
  40bc64:	sahf   
  40bc65:	fdiv   DWORD PTR [edx+0xb]
  40bc68:	inc    edx
  40bc69:	push   0x8d8e0fb3
  40bc6e:	mov    al,0x45
  40bc70:	inc    ecx
  40bc71:	shl    DWORD PTR [ebp+0x4f],cl
  40bc74:	sahf   
  40bc75:	fist   WORD PTR [edx-0x274342d0]
  40bc7b:	push   ss
  40bc7c:	popa   
  40bc7d:	int    0x90
  40bc7f:	inc    ecx
  40bc80:	mov    ecx,DWORD PTR [eax]
  40bc82:	mov    edx,0x79dc570c
  40bc87:	mov    BYTE PTR [ebx+0x31b9cc02],bh
  40bc8d:	xor    bh,BYTE PTR [edi-0x5ce477dc]
  40bc93:	sbb    al,0xfa
  40bc95:	add    ah,0xca
  40bc98:	mov    edi,0x703a956b
  40bc9d:	js     0x40bd1b
  40bc9f:	iret   
  40bca0:	pop    ebx
  40bca1:	call   0x3dfc:0x5089080e
  40bca8:	rol    DWORD PTR [esi-0x7b],1
  40bcab:	and    esp,DWORD PTR ds:0x12cf3da7
  40bcb1:	adc    al,0x21
  40bcb3:	xor    cl,dh
  40bcb5:	ret    0x26e6
  40bcb8:	and    esi,DWORD PTR [eax-0x599fbb2f]
  40bcbe:	je     0x40bcee
  40bcc0:	sahf   
  40bcc1:	iret   
  40bcc2:	adc    BYTE PTR [ebx],bl
  40bcc4:	int3   
  40bcc5:	sub    eax,DWORD PTR [eax+0x9]
  40bcc8:	sbb    al,0x37
  40bcca:	out    0x80,eax
  40bccc:	jp     0x40bd3c
  40bcce:	or     dl,BYTE PTR [ecx]
  40bcd0:	adc    DWORD PTR [edx+ebp*2-0x7e28a702],edx
  40bcd7:	in     al,dx
  40bcd8:	mov    esi,0x80c2c71b
  40bcdd:	mov    cl,0x6a
  40bcdf:	ret    
  40bce0:	and    ecx,DWORD PTR [eax]
  40bce2:	inc    eax
  40bce3:	ja     0x40bd19
  40bce5:	inc    ebx
  40bce6:	es repz aam 0x9e
  40bcea:	push   ecx
  40bceb:	fsubr  DWORD PTR [edi+0x4255b7de]
  40bcf1:	inc    edx
  40bcf2:	add    al,0x8a
  40bcf4:	dec    ecx
  40bcf5:	(bad)  
  40bcf6:	push   ecx
  40bcf7:	fadd   QWORD PTR cs:[esi+0x70c41492]
  40bcfe:	mov    ds:0xe141765d,al
  40bd03:	or     BYTE PTR [edx-0x12],ah
  40bd06:	stc    
  40bd07:	add    BYTE PTR [esi+eiz*2+0x54],dl
  40bd0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd0c:	rol    ebp,1
  40bd0e:	inc    BYTE PTR [edx-0x6c]
  40bd11:	ja     0x40bd8e
  40bd13:	pusha  
  40bd14:	loope  0x40bd56
  40bd16:	pop    eax
  40bd17:	test   eax,0xae496595
  40bd1c:	test   eax,0xb9b39dc0
  40bd21:	mov    ecx,0x2f41eb9
  40bd26:	mov    ecx,0x40e63c5c
  40bd2b:	ins    DWORD PTR es:[edi],dx
  40bd2c:	adc    cl,BYTE PTR [eax+0x6cd1d41b]
  40bd32:	test   eax,0xbe4a1492
  40bd37:	sbb    DWORD PTR [eax+0x3d],0x7d
  40bd3b:	jg     0x40bd7e
  40bd3d:	xchg   esi,eax
  40bd3e:	fsubr  QWORD PTR [ebx+0x20fbde25]
  40bd44:	jecxz  0x40bd7c
  40bd46:	jl     0x40bcd5
  40bd48:	sahf   
  40bd49:	jbe    0x40bccf
  40bd4b:	lods   al,BYTE PTR ds:[esi]
  40bd4c:	push   0x3f
  40bd4e:	inc    edx
  40bd4f:	sbb    eax,0xae54b57d
  40bd54:	fidiv  WORD PTR [ebx+0x1c90db5e]
  40bd5a:	ja     0x40bd82
  40bd5c:	push   edi
  40bd5d:	adc    al,0xa6
  40bd5f:	push   0x3c4ebc89
  40bd64:	add    BYTE PTR [ecx+esi*4+0x1af586f9],0x40
  40bd6c:	jbe    0x40bd15
  40bd6e:	jmp    FWORD PTR [eax-0x17424f81]
  40bd74:	pushf  
  40bd75:	xor    eax,0x9c7036dd
  40bd7a:	jg     0x40bd23
  40bd7c:	and    DWORD PTR [esi-0x27],esp
  40bd7f:	inc    eax
  40bd80:	sub    esp,DWORD PTR [esi+edx*2-0x684f86f]
  40bd87:	lods   eax,DWORD PTR ds:[esi]
  40bd88:	and    ch,ah
  40bd8a:	neg    edi
  40bd8c:	sbb    BYTE PTR cs:[eax+0x6],al
  40bd90:	jge    0x40bd97
  40bd92:	mov    bh,0x38
  40bd94:	cmp    BYTE PTR [edi],ch
  40bd96:	call   0xb9980c4d
  40bd9b:	xchg   esp,eax
  40bd9c:	or     BYTE PTR [ebx+edx*2-0x26fd1765],dh
  40bda3:	rcl    DWORD PTR [edx+0x5c29bee6],cl
  40bda9:	cmp    ah,cl
  40bdab:	lds    eax,FWORD PTR [ecx+0x48]
  40bdae:	stos   DWORD PTR es:[edi],eax
  40bdaf:	rol    BYTE PTR [esi-0x71],0xea
  40bdb3:	mov    edx,DWORD PTR [ebp+0x259f521f]
  40bdb9:	xor    BYTE PTR [ecx-0xf],0xd5
  40bdbd:	outs   dx,BYTE PTR ds:[esi]
  40bdbe:	cmp    ah,BYTE PTR [edi-0x73]
  40bdc1:	aas    
  40bdc2:	loope  0x40bdbc
  40bdc4:	and    ebp,DWORD PTR [edi]
  40bdc6:	adc    BYTE PTR [ebx-0x35],bl
  40bdc9:	inc    ebx
  40bdca:	dec    edx
  40bdcb:	data16 xor al,0x21
  40bdce:	mov    ebp,0x1f1873da
  40bdd3:	pop    ds
  40bdd4:	(bad)  
  40bdd5:	fadd   DWORD PTR [ecx-0x103bce1f]
  40bddb:	rcl    ecx,cl
  40bddd:	and    eax,0x9bb9fa36
  40bde2:	repnz shr BYTE PTR [si+0x52],cl
  40bde7:	out    dx,eax
  40bde8:	pop    ebp
  40bde9:	mov    ebp,0xd2a61083
  40bdee:	int3   
  40bdef:	push   0xe1ab92d1
  40bdf4:	inc    edi
  40bdf5:	xor    al,0x70
  40bdf7:	sbb    eax,0xc7f54ae2
  40bdfc:	sbb    eax,0xfcbaf286
  40be01:	xor    edx,edi
  40be03:	mov    ds:0x7218635b,al
  40be08:	test   DWORD PTR [ebx+0x0],0xdfddb1ba
  40be0f:	push   ebp
  40be10:	into   
  40be11:	xor    DWORD PTR [ecx-0x472bfadf],ecx
  40be17:	aad    0x9e
  40be19:	popa   
  40be1a:	pusha  
  40be1b:	adc    BYTE PTR [ebx+0xaf90ca4],bl
  40be21:	ja     0x40be07
  40be23:	inc    esp
  40be24:	ins    DWORD PTR es:[edi],dx
  40be25:	mov    ebp,0xe3789b2d
  40be2a:	lods   eax,DWORD PTR gs:[esi]
  40be2c:	in     al,0xb6
  40be2e:	retf   0xa9ba
  40be31:	mov    al,BYTE PTR [ebp-0x4b]
  40be34:	xchg   BYTE PTR [ebx+0x53ffa634],bl
  40be3a:	sub    esi,DWORD PTR [esi]
  40be3c:	retf   0xc7aa
  40be3f:	pop    ss
  40be40:	cmp    DWORD PTR [ebx+0x4c],0x78b3a2d3
  40be47:	adc    eax,0xc3b1e15a
  40be4c:	mov    ch,0xf1
  40be4e:	scas   eax,DWORD PTR es:[edi]
  40be4f:	das    
  40be50:	popa   
  40be51:	popa   
  40be52:	xchg   esi,eax
  40be53:	xchg   ebp,eax
  40be54:	or     al,0xe5
  40be56:	call   0x5593c8b5
  40be5b:	xchg   DWORD PTR [ecx],esp
  40be5d:	lods   eax,DWORD PTR ds:[esi]
  40be5e:	test   al,0x39
  40be60:	aas    
  40be61:	and    BYTE PTR [edx],cl
  40be63:	ret    0x7045
  40be66:	mov    ds:0x2ee6fbac,eax
  40be6b:	and    al,0x66
  40be6d:	mov    bl,0xe6
  40be6f:	mov    ch,0x26
  40be71:	xlat   BYTE PTR ds:[ebx]
  40be72:	test   al,0x1d
  40be74:	xchg   ebp,eax
  40be75:	push   ebp
  40be76:	adc    ah,BYTE PTR ds:0x3e873237
  40be7c:	cmp    al,0xf9
  40be7e:	aad    0x2a
  40be80:	int    0xfd
  40be82:	pop    ebx
  40be83:	mov    al,ds:0x5791da8e
  40be88:	cwde   
  40be89:	add    BYTE PTR [edx-0x5354db4e],bl
  40be8f:	cmp    eax,0xb63f68ab
  40be94:	arpl   WORD PTR [esi],cx
  40be96:	push   ebp
  40be97:	stos   DWORD PTR es:[edi],eax
  40be98:	mov    bl,0x70
  40be9a:	adc    ah,BYTE PTR [esi+0x76]
  40be9d:	fist   WORD PTR [ecx+0x6a]
  40bea0:	in     eax,dx
  40bea1:	sbb    DWORD PTR [ecx+ebx*2-0x7c],ecx
  40bea5:	sub    BYTE PTR [eax],bh
  40bea7:	inc    esi
  40bea8:	pop    edx
  40bea9:	mov    dh,BYTE PTR [edi-0x7d]
  40beac:	sub    bh,bh
  40beae:	iret   
  40beaf:	jbe    0x40be49
  40beb1:	mov    edi,0x73a3a096
  40beb6:	dec    edi
  40beb7:	or     DWORD PTR [eax+ecx*1],ecx
  40beba:	addr16 jnp 0x1c61b324
  40bec1:	sahf   
  40bec2:	loope  0x40be79
  40bec4:	or     dl,al
  40bec6:	push   edx
  40bec7:	dec    esi
  40bec8:	mov    bh,0x79
  40beca:	fcomi  st,st(3)
  40becc:	int    0xe8
  40bece:	sahf   
  40becf:	mov    al,ds:0xf0a2f9d4
  40bed4:	arpl   ax,dx
  40bed6:	test   ah,dl
  40bed8:	cli    
  40bed9:	iret   
  40beda:	pop    ss
  40bedb:	call   0x74d9:0x79e2547
  40bee2:	pop    ss
  40bee3:	and    DWORD PTR [ebx],ecx
  40bee5:	jo     0x40bec5
  40bee7:	ins    BYTE PTR es:[edi],dx
  40bee8:	shr    DWORD PTR [edx+0x4],cl
  40beeb:	push   0x13
  40beed:	jb     0x40bede
  40beef:	jecxz  0x40be8c
  40bef1:	mov    edx,0x4b344fcb
  40bef6:	push   esp
  40bef7:	xor    DWORD PTR [ecx+0x6cfdc383],ecx
  40befd:	test   eax,0x8cd51648
  40bf02:	inc    ebp
  40bf03:	pushf  
  40bf04:	inc    ebp
  40bf05:	std    
  40bf06:	mov    eax,0x7465c19b
  40bf0b:	cmp    eax,0x9fe890d5
  40bf10:	(bad)  
  40bf11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf12:	jb     0x40bf05
  40bf14:	aam    0x5a
  40bf16:	sahf   
  40bf17:	adc    eax,0x212a74db
  40bf1c:	call   0xb6d6:0x964434ab
  40bf23:	arpl   WORD PTR [edx+0x24],cx
  40bf26:	mov    cl,0xab
  40bf28:	fild   WORD PTR [ecx-0x26098be8]
  40bf2e:	aam    0xa3
  40bf30:	sbb    DWORD PTR [edx-0x6af5e1e],0xbcc7d9d1
  40bf3a:	add    bh,dl
  40bf3c:	imul   ebx,DWORD PTR [eax],0x59
  40bf3f:	ror    BYTE PTR [esi+0x50],cl
  40bf42:	retf   0x9054
  40bf45:	(bad)  
  40bf46:	rcl    dl,1
  40bf48:	mov    esi,fs
  40bf4a:	sbb    bh,BYTE PTR [esi-0x362486e5]
  40bf50:	lahf   
  40bf51:	cmp    BYTE PTR [edx],ah
  40bf53:	mov    bh,0xbf
  40bf55:	ins    DWORD PTR es:[edi],dx
  40bf56:	das    
  40bf57:	loopne 0x40beec
  40bf59:	pop    esp
  40bf5a:	mov    al,0x95
  40bf5c:	jg     0x40bfc3
  40bf5e:	push   es
  40bf5f:	das    
  40bf60:	(bad)  
  40bf61:	(bad)  
  40bf62:	dec    esp
  40bf63:	mov    ds:0x53b77820,eax
  40bf68:	cli    
  40bf69:	dec    ebx
  40bf6a:	sbb    dh,BYTE PTR [ebx-0xa]
  40bf6d:	push   esi
  40bf6e:	xor    al,BYTE PTR [edi]
  40bf70:	jp     0x40bfe3
  40bf72:	bound  eax,QWORD PTR [ebx-0x5c]
  40bf75:	cdq    
  40bf76:	scas   al,BYTE PTR es:[edi]
  40bf77:	js     0x40bf95
  40bf79:	add    eax,0xbec7ca80
  40bf7e:	sahf   
  40bf7f:	outs   dx,DWORD PTR ds:[esi]
  40bf80:	clc    
  40bf81:	and    cl,cl
  40bf83:	cmp    eax,DWORD PTR [edx+edi*4+0x2c]
  40bf87:	rcr    al,1
  40bf89:	jg     0x40bf6a
  40bf8b:	fldz   
  40bf8d:	fistp  QWORD PTR [ecx-0x70]
  40bf90:	jns    0x40bf33
  40bf92:	mov    WORD PTR [edx-0x24d5884a],fs
  40bf98:	not    DWORD PTR [edi+0x51]
  40bf9b:	push   edi
  40bf9c:	and    bl,0xdf
  40bf9f:	dec    eax
  40bfa0:	mov    ebp,0xd9d47910
  40bfa5:	cmc    
  40bfa6:	(bad)  
  40bfa7:	xor    eax,0x8c8903be
  40bfac:	addr16 mov ds:0x39b1,eax
  40bfb0:	lods   eax,DWORD PTR ds:[esi]
  40bfb1:	lea    esp,[edx-0x671f3f18]
  40bfb7:	ss in  al,dx
  40bfb9:	mov    al,ds:0x63aeae
  40bfbe:	mov    bh,0x4e
  40bfc0:	mov    eax,ds:0x34d98e7e
  40bfc5:	ins    BYTE PTR es:[edi],dx
  40bfc6:	jmp    0x40bfe6
  40bfc8:	call   0x89ec5182
  40bfcd:	cld    
  40bfce:	stos   DWORD PTR es:[edi],eax
  40bfcf:	sbb    al,0xce
  40bfd1:	xchg   esi,eax
  40bfd2:	xor    BYTE PTR [esi-0x1e],cl
  40bfd5:	add    DWORD PTR [ebx-0x7e],edx
  40bfd8:	inc    ecx
  40bfd9:	loope  0x40c04a
  40bfdb:	dec    edx
  40bfdc:	or     edi,DWORD PTR [esi-0x28ce416e]
  40bfe2:	scas   eax,DWORD PTR es:[edi]
  40bfe3:	test   al,0x27
  40bfe5:	ins    BYTE PTR es:[edi],dx
  40bfe6:	ret    0x4f27
  40bfe9:	pop    ecx
  40bfea:	aad    0x4d
  40bfec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfed:	dec    ebp
  40bfee:	jecxz  0x40bf97
  40bff0:	imul   edi,esi,0xffffffbd
  40bff3:	push   cs
  40bff4:	mov    WORD PTR [edi-0x1e192a48],ss
  40bffa:	shl    BYTE PTR [ecx-0x79],cl
  40bffd:	lea    edx,[esi+0x1a9b00fe]
  40c003:	dec    edi
  40c004:	mov    ds:0x84652226,al
  40c009:	mov    dh,0x93
  40c00b:	pop    eax
  40c00c:	and    edi,DWORD PTR [eax+0x66eec107]
  40c012:	les    edx,FWORD PTR [ebp-0x38]
  40c015:	fist   WORD PTR [edx+0x3f]
  40c018:	cli    
  40c019:	sbb    edi,ecx
  40c01b:	pop    ss
  40c01c:	mov    ebp,0x53c9983
  40c021:	push   ecx
  40c022:	std    
  40c023:	inc    ecx
  40c024:	fcmovb st,st(4)
  40c026:	add    esp,edi
  40c028:	jnp    0x40c052
  40c02a:	call   0xb4d0:0x36f72d2a
  40c031:	jne    0x40c094
  40c033:	jo     0x40c049
  40c035:	adc    eax,0x902dd99
  40c03a:	mov    cs,WORD PTR [edi]
  40c03c:	call   0xd47e3187
  40c041:	(bad)  
  40c042:	jmp    0xf817:0x94f0fdb7
  40c049:	lock xor bl,BYTE PTR [esi-0xfe80d2c]
  40c050:	arpl   bx,di
  40c052:	sti    
  40c053:	nop
  40c054:	cdq    
  40c055:	mov    eax,DWORD PTR [edx+eiz*8+0x37]
  40c059:	mov    ecx,0xaaf00826
  40c05e:	(bad)  
  40c05f:	mov    es,WORD PTR [ebx]
  40c061:	js     0x40c057
  40c063:	and    BYTE PTR [eax],dl
  40c065:	jecxz  0x40c03d
  40c067:	push   es
  40c068:	jmp    0x40c0c5
  40c06a:	lea    edx,[esi-0x4c]
  40c06d:	inc    edx
  40c06e:	mov    ds:0x7bd3b721,al
  40c073:	pushf  
  40c074:	fdivr  st,st(3)
  40c076:	or     BYTE PTR [ebp-0x7ce03280],bl
  40c07c:	sub    DWORD PTR [eax],0x5a
  40c07f:	loopne 0x40c080
  40c081:	aaa    
  40c082:	into   
  40c083:	xchg   edx,eax
  40c084:	iret   
  40c085:	loopne 0x40c0e3
  40c087:	lods   al,BYTE PTR ds:[esi]
  40c088:	stos   DWORD PTR es:[edi],eax
  40c089:	repnz mov WORD PTR [edi-0x2f],es
  40c08d:	add    eax,0xa1aaaafa
  40c092:	mov    dl,0x7f
  40c094:	and    esi,ebp
  40c096:	mov    eax,ds:0x4392995b
  40c09b:	mov    ebp,DWORD PTR [edi+ebp*8+0x6d]
  40c09f:	call   FWORD PTR [eax+eax*4-0x13]
  40c0a3:	or     eax,DWORD PTR [esi+ebp*8+0x69]
  40c0a7:	call   0x12df:0xd050052b
  40c0ae:	addr16 xor al,0x96
  40c0b1:	pop    eax
  40c0b2:	push   esp
  40c0b3:	rep ins BYTE PTR es:[edi],dx
  40c0b5:	pop    ebx
  40c0b6:	push   ds
  40c0b7:	jnp    0x40c04e
  40c0b9:	and    DWORD PTR [ecx-0x73],0x824c51e4
  40c0c0:	mov    al,0xc
  40c0c2:	cmp    edi,DWORD PTR ds:0xb366b8ee
  40c0c8:	stos   DWORD PTR es:[edi],eax
  40c0c9:	aad    0x2a
  40c0cb:	mov    ebp,0x99bb973b
  40c0d0:	adc    eax,DWORD PTR [ebx+0x2c]
  40c0d3:	inc    ebp
  40c0d4:	sbb    DWORD PTR [edx-0x314d3e59],eax
  40c0da:	mov    ch,BYTE PTR [esi-0x60]
  40c0dd:	enter  0x7889,0x17
  40c0e1:	loop   0x40c0f2
  40c0e3:	dec    ebx
  40c0e4:	inc    edi
  40c0e5:	pop    DWORD PTR es:[ebp+0x1a]
  40c0e9:	dec    esi
  40c0ea:	cmp    esi,DWORD PTR [esi+0x16]
  40c0ed:	jg     0x40c077
  40c0ef:	push   ss
  40c0f0:	adc    eax,DWORD PTR [eax+0x8]
  40c0f3:	sahf   
  40c0f4:	bound  edx,QWORD PTR [ebx-0x67]
  40c0f7:	loop   0x40c0dc
  40c0f9:	pop    ebp
  40c0fa:	jge    0x40c10f
  40c0fc:	fisttp DWORD PTR [ebp+0x70]
  40c0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c100:	and    ah,cl
  40c102:	and    esi,DWORD PTR [edi]
  40c104:	mov    dl,0x45
  40c106:	retf   
  40c107:	iret   
  40c108:	xchg   esp,eax
  40c109:	repz inc edx
  40c10b:	lock mov esp,0x874ec6f7
  40c111:	mov    ds:0xc8ffb274,eax
  40c116:	cmp    al,0x99
  40c118:	sub    eax,0x2e10ebca
  40c11d:	mov    ah,0x81
  40c11f:	test   eax,0x4955e15
  40c124:	sub    eax,0x25fc9dbd
  40c129:	cmp    dl,BYTE PTR [esi+0x1a]
  40c12c:	loop   0x40c0c6
  40c12e:	or     dl,BYTE PTR [ebx]
  40c130:	jle    0x40c0d3
  40c132:	ds fstp st(5)
  40c135:	dec    ebp
  40c136:	inc    esi
  40c137:	ficomp DWORD PTR [esi]
  40c139:	ds jns 0x40c114
  40c13c:	pop    esp
  40c13d:	cmc    
  40c13e:	ror    DWORD PTR [edx+0x2255f9b7],cl
  40c144:	ins    DWORD PTR es:[edi],dx
  40c145:	xchg   ebx,eax
  40c146:	inc    esp
  40c147:	pop    esp
  40c148:	xor    dh,bh
  40c14a:	stos   BYTE PTR es:[edi],al
  40c14b:	aas    
  40c14c:	ja     0x40c0e1
  40c14e:	out    dx,eax
  40c14f:	in     al,0x30
  40c151:	pop    ss
  40c152:	cmp    al,0x2
  40c154:	xchg   eax,ebp
  40c156:	push   cs
  40c157:	js     0x40c1af
  40c159:	rcr    BYTE PTR [ecx],0x7
  40c15c:	mov    dl,cl
  40c15e:	add    al,0xa9
  40c160:	(bad)  
  40c161:	and    BYTE PTR [eax+0xf],ch
  40c164:	cld    
  40c165:	aam    0x59
  40c167:	popa   
  40c168:	xchg   edi,eax
  40c169:	loopne 0x40c1e1
  40c16b:	xchg   ecx,eax
  40c16c:	(bad)  
  40c16d:	call   0x53b1c64e
  40c172:	int3   
  40c173:	and    eax,0x8251dbf4
  40c178:	aaa    
  40c179:	outs   dx,DWORD PTR ds:[esi]
  40c17a:	iret   
  40c17b:	and    eax,0x2dbe06f7
  40c180:	cmp    BYTE PTR [ecx-0x76c5fcba],ch
  40c186:	in     eax,dx
  40c187:	push   ebx
  40c188:	pop    ss
  40c189:	dec    edi
  40c18a:	ret    0x8f6f
  40c18d:	aad    0x5d
  40c18f:	and    BYTE PTR [eax],al
  40c191:	xor    dh,BYTE PTR [edi+0x2bb84ff7]
  40c197:	jb     0x40c15b
  40c199:	pop    ss
  40c19a:	out    dx,al
  40c19b:	shl    bl,cl
  40c19d:	shl    DWORD PTR ds:[edi],1
  40c1a0:	mov    ebp,0x2c7afdad
  40c1a5:	push   edi
  40c1a6:	mov    edx,0xc292ad95
  40c1ab:	dec    ebp
  40c1ac:	push   0xfffffff8
  40c1ae:	adc    al,0x9c
  40c1b0:	stos   BYTE PTR es:[edi],al
  40c1b1:	das    
  40c1b2:	jmp    0x40c15a
  40c1b4:	out    dx,al
  40c1b5:	je     0x40c208
  40c1b7:	jne    0x40c212
  40c1b9:	sbb    ah,BYTE PTR [eax+edi*8]
  40c1bc:	into   
  40c1bd:	mov    cl,0x6e
  40c1bf:	(bad)  
  40c1c0:	imul   esp,DWORD PTR [eax-0x3c1c67c1],0xffffffa3
  40c1c7:	les    esi,FWORD PTR [eax]
  40c1c9:	(bad)  
  40c1cb:	cli    
  40c1cc:	jmp    0x40c22c
  40c1ce:	push   cs
  40c1cf:	xor    ah,BYTE PTR [esi]
  40c1d1:	enter  0x4174,0x4f
  40c1d5:	scas   eax,DWORD PTR es:[edi]
  40c1d6:	push   0xffffffff
  40c1d8:	int3   
  40c1d9:	popf   
  40c1da:	jno    0x40c1da
  40c1dc:	ret    
  40c1dd:	and    ecx,DWORD PTR [esi+0x7714729a]
  40c1e3:	sahf   
  40c1e4:	sbb    edi,DWORD PTR [ebx]
  40c1e6:	xor    al,0xfb
  40c1e8:	or     al,0x6e
  40c1ea:	sbb    DWORD PTR [ebp+0x33afa400],edi
  40c1f0:	icebp  
  40c1f1:	inc    ebp
  40c1f2:	out    0x56,eax
  40c1f4:	mov    edi,0x3316b865
  40c1f9:	and    eax,0x1369ce5d
  40c1fe:	test   BYTE PTR [ecx],bl
  40c200:	cld    
  40c201:	sahf   
  40c202:	clc    
  40c203:	jnp    0x40c259
  40c205:	ja     0x40c26d
  40c207:	js     0x40c288
  40c209:	xor    eax,0xc59078a
  40c20e:	sub    BYTE PTR [edx-0x35],0xbe
  40c212:	bound  edx,QWORD PTR [esi-0x35]
  40c215:	dec    edx
  40c216:	cli    
  40c217:	xchg   ebp,eax
  40c218:	sbb    DWORD PTR [edi],0x3ca14d7c
  40c21e:	push   esp
  40c21f:	mov    ebx,0x83459dd0
  40c224:	inc    ah
  40c226:	nop
  40c227:	push   esp
  40c228:	sub    cl,BYTE PTR [edi]
  40c22a:	in     eax,0xcf
  40c22c:	stc    
  40c22d:	sbb    eax,0x66dd6f2d
  40c232:	jl     0x40c1ec
  40c234:	jle    0x40c21c
  40c236:	jg     0x40c1e9
  40c238:	jnp    0x40c1fb
  40c23a:	sbb    al,0x6c
  40c23c:	push   ebx
  40c23d:	aad    0x59
  40c23f:	fwait
  40c240:	xor    BYTE PTR [edi],bh
  40c242:	dec    edi
  40c243:	sbb    BYTE PTR [eax+0x1a],ch
  40c246:	sub    edi,DWORD PTR [ebx+0x1a92e110]
  40c24c:	add    eax,0xe541e09f
  40c251:	out    dx,al
  40c252:	lock mov eax,0xae8fa8e0
  40c258:	adc    al,0x8e
  40c25a:	data16 xlat BYTE PTR ds:[ebx]
  40c25c:	mov    ds:0x6911de92,al
  40c261:	lahf   
  40c262:	sahf   
  40c263:	or     eax,0xfe9b94a2
  40c268:	addr16 jge 0x40c22a
  40c26b:	ins    BYTE PTR es:[edi],dx
  40c26c:	sub    ch,ch
  40c26e:	scas   al,BYTE PTR es:[edi]
  40c26f:	push   ebp
  40c270:	call   0xaa8ec672
  40c275:	dec    ebx
  40c276:	mov    WORD PTR [ecx],cs
  40c278:	lahf   
  40c279:	nop
  40c27a:	inc    edi
  40c27b:	repz adc ebp,DWORD PTR [esi+0x5c]
  40c27f:	ja     0x40c2cf
  40c281:	(bad)  
  40c282:	jne    0x40c2be
  40c284:	loopne 0x40c2ac
  40c286:	mov    ah,0x4
  40c288:	lea    eax,[edi]
  40c28a:	cli    
  40c28b:	xor    eax,0xd0360b18
  40c290:	sub    eax,0x7102506
  40c295:	xor    BYTE PTR [edi+0x62fc4ee1],ch
  40c29b:	dec    ebx
  40c29c:	mov    ch,0x28
  40c29e:	sub    ecx,DWORD PTR gs:0xfb44f96b
  40c2a5:	test   eax,0xace39552
  40c2aa:	aas    
  40c2ab:	test   BYTE PTR [edi],0xc4
  40c2ae:	jl     0x40c231
  40c2b0:	adc    ch,dh
  40c2b2:	repnz repz pop ss
  40c2b5:	jns    0x40c32e
  40c2b7:	stos   DWORD PTR es:[edi],eax
  40c2b8:	(bad)  
  40c2b9:	sub    DWORD PTR [edx],edi
  40c2bb:	not    BYTE PTR [esi-0x13]
  40c2be:	xlat   BYTE PTR ds:[ebx]
  40c2bf:	data16 cli 
  40c2c1:	scas   al,BYTE PTR es:[edi]
  40c2c2:	jae    0x40c283
  40c2c4:	test   DWORD PTR [eax+0x6a93c1eb],edx
  40c2ca:	xchg   esi,eax
  40c2cb:	nop
  40c2cc:	sbb    bl,ah
  40c2ce:	mov    bh,0x44
  40c2d0:	(bad)  
  40c2d1:	test   DWORD PTR [bx+si],esp
  40c2d4:	sbb    ah,0x40
  40c2d7:	or     al,BYTE PTR [eax+edx*4+0x70064bc9]
  40c2de:	in     al,dx
  40c2df:	repnz sbb eax,0xd0207132
  40c2e5:	out    dx,al
  40c2e6:	and    al,0xe8
  40c2e8:	and    eax,0x7b373b76
  40c2ed:	xchg   ebp,eax
  40c2ee:	lds    ebp,FWORD PTR [eax+edi*8-0x6d328f1f]
  40c2f5:	pop    ss
  40c2f6:	ins    DWORD PTR es:[edi],dx
  40c2f7:	cmp    eax,0xaa14bf0c
  40c2fc:	pop    es
  40c2fd:	jae    0x40c2c2
  40c2ff:	lods   al,BYTE PTR ds:[esi]
  40c300:	cmp    eax,0x2f5b5ba0
  40c305:	jns    0x40c29d
  40c307:	hlt    
  40c308:	jmp    0xc9a7:0xfb6c977d
  40c30f:	outs   dx,BYTE PTR ds:[esi]
  40c310:	xlat   BYTE PTR ds:[ebx]
  40c311:	mov    ds:0x246f26a4,eax
  40c316:	xor    DWORD PTR [ecx-0x54],esp
  40c319:	ja     0x40c35f
  40c31b:	or     BYTE PTR [ebp+edx*4+0x20537772],bh
  40c322:	mov    edx,0x23dc9fd5
  40c327:	push   0xffffffd9
  40c329:	jbe    0x40c2f5
  40c32b:	push   eax
  40c32c:	push   edi
  40c32d:	add    BYTE PTR [edx],dh
  40c32f:	mov    ebp,0xd3730b29
  40c334:	cmp    al,0x5f
  40c336:	sub    esi,esi
  40c338:	mov    edi,ebx
  40c33a:	add    al,0xa6
  40c33c:	jge    0x40c310
  40c33e:	cld    
  40c33f:	dec    esp
  40c340:	inc    esi
  40c341:	add    eax,0xab5be532
  40c346:	push   es
  40c347:	inc    eax
  40c348:	in     al,dx
  40c349:	sub    ebp,DWORD PTR [edi+0x5e]
  40c34c:	out    0x3b,eax
  40c34e:	loop   0x40c33d
  40c350:	into   
  40c351:	xchg   ebp,eax
  40c352:	xchg   ebp,eax
  40c353:	pop    ebx
  40c354:	push   es
  40c355:	sahf   
  40c356:	in     eax,0x56
  40c358:	jge    0x40c341
  40c35a:	and    al,0x8c
  40c35c:	or     bl,bh
  40c35e:	dec    ebp
  40c35f:	and    eax,0x30b77f72
  40c364:	aad    0x95
  40c366:	add    al,0x3d
  40c368:	jmp    0x1bfd:0xc63ece3f
  40c36f:	dec    esp
  40c370:	das    
  40c371:	add    eax,0xf8f8c8b9
  40c376:	lahf   
  40c377:	pushf  
  40c378:	adc    al,BYTE PTR [eax]
  40c37a:	sub    DWORD PTR [edx-0x433ddd51],ebp
  40c380:	mov    edi,0x9e2a5927
  40c385:	mov    edi,0xbacb7bc0
  40c38a:	mov    esi,0x9cb955f1
  40c38f:	(bad)  
  40c390:	jno    0x40c3b4
  40c392:	idiv   BYTE PTR [ecx-0x1d]
  40c395:	or     BYTE PTR [edx],al
  40c397:	stos   BYTE PTR es:[edi],al
  40c398:	fs push ebp
  40c39a:	sbb    cl,ah
  40c39c:	ret    0xef3f
  40c39f:	jns    0x40c3d7
  40c3a1:	or     edi,DWORD PTR [esi]
  40c3a3:	push   ecx
  40c3a4:	lods   eax,DWORD PTR ds:[esi]
  40c3a5:	lahf   
  40c3a6:	dec    edi
  40c3a7:	cli    
  40c3a8:	xchg   edx,eax
  40c3a9:	xlat   BYTE PTR ds:[ebx]
  40c3aa:	mov    eax,ds:0xb6ef331
  40c3af:	test   al,0x1f
  40c3b1:	jns    0x40c342
  40c3b3:	out    0x25,eax
  40c3b5:	das    
  40c3b6:	jg     0x40c408
  40c3b8:	stos   DWORD PTR es:[edi],eax
  40c3b9:	or     BYTE PTR [esi-0x6c],bh
  40c3bc:	jecxz  0x40c415
  40c3be:	add    al,al
  40c3c0:	into   
  40c3c1:	adc    DWORD PTR [ecx],ecx
  40c3c3:	cmp    eax,0x6ef7693a
  40c3c8:	jns    0x40c3f3
  40c3ca:	mov    bl,0xc5
  40c3cc:	mov    esp,0x13e7a149
  40c3d1:	ins    DWORD PTR es:[edi],dx
  40c3d2:	cld    
  40c3d3:	mov    dh,0x23
  40c3d5:	sar    eax,0xf7
  40c3d8:	loope  0x40c3c3
  40c3da:	mov    dh,0xfa
  40c3dc:	cdq    
  40c3dd:	(bad)  
  40c3df:	push   ebx
  40c3e0:	jb     0x40c41c
  40c3e2:	adc    dl,BYTE PTR [ebx+edi*2-0x36]
  40c3e6:	icebp  
  40c3e7:	cli    
  40c3e8:	ja     0x40c452
  40c3ea:	in     eax,dx
  40c3eb:	push   edi
  40c3ec:	add    BYTE PTR [ecx],ch
  40c3ee:	outs   dx,BYTE PTR ds:[esi]
  40c3ef:	int    0x40
  40c3f1:	into   
  40c3f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3f3:	daa    
  40c3f4:	xchg   DWORD PTR [ebx-0x1fae90d3],ebp
  40c3fa:	(bad)
  40c3fd:	xor    ebp,eax
  40c3ff:	jbe    0x40c39b
  40c401:	sub    ecx,eax
  40c403:	enter  0x6732,0x51
  40c407:	mov    esp,DWORD PTR [ebp-0x51]
  40c40a:	mov    ah,0xb5
  40c40c:	push   ebx
  40c40d:	hlt    
  40c40e:	sbb    DWORD PTR [ecx-0x37],0xfffffff4
  40c412:	push   0x47
  40c414:	inc    esi
  40c415:	ror    DWORD PTR [eax-0xd],0xe5
  40c419:	adc    eax,0xc113d241
  40c41e:	mov    dl,0xe7
  40c420:	retf   0x7fc7
  40c423:	add    al,0x82
  40c425:	test   al,0x22
  40c427:	push   eax
  40c428:	and    al,0x1b
  40c42a:	xchg   ecx,eax
  40c42b:	xchg   ebp,eax
  40c42c:	inc    esp
  40c42d:	dec    eax
  40c42e:	inc    esp
  40c42f:	dec    edi
  40c430:	or     DWORD PTR [ecx+0x66],ecx
  40c433:	cmp    eax,0xfd29e13a
  40c438:	sub    al,0x6
  40c43a:	outs   dx,DWORD PTR ds:[esi]
  40c43b:	(bad)  
  40c43c:	rol    BYTE PTR [edi+0x6d],1
  40c43f:	mov    ds:0xc585786,eax
  40c444:	in     eax,0x92
  40c446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c448:	ficom  WORD PTR [ecx+0x677ffd5]
  40c44e:	hlt    
  40c44f:	lea    esp,[ecx]
  40c451:	das    
  40c452:	scas   eax,DWORD PTR es:[edi]
  40c453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c454:	push   edx
  40c455:	mov    al,ds:0xe68241d8
  40c45a:	js     0x40c491
  40c45c:	fs cmp eax,0x9dd660
  40c462:	ja     0x40c456
  40c464:	(bad)  
  40c465:	jmp    0x7835:0xe15c80f8
  40c46c:	into   
  40c46d:	and    BYTE PTR [eax+eiz*8],0x55
  40c471:	sub    dl,BYTE PTR [ebx+0x73fe142b]
  40c477:	jg     0x40c476
  40c479:	mov    ebx,0x224944b6
  40c47e:	push   0x5cff0ab9
  40c483:	int    0xf2
  40c485:	jp     0x40c4f7
  40c487:	or     al,BYTE PTR [ecx+eax*2+0x5acda0f]
  40c48e:	sbb    edx,0xc
  40c491:	stc    
  40c492:	je     0x40c4ed
  40c494:	das    
  40c495:	outs   dx,BYTE PTR cs:[esi]
  40c497:	sub    edi,DWORD PTR [ecx+0xf205a7]
  40c49d:	mov    dl,0x62
  40c49f:	jmp    0xfb56:0x5e8098f6
  40c4a6:	out    dx,eax
  40c4a7:	arpl   WORD PTR [edi],cx
  40c4a9:	sti    
  40c4aa:	xchg   edx,eax
  40c4ab:	mov    eax,ds:0x585fd119
  40c4b0:	xchg   esi,eax
  40c4b1:	xlat   BYTE PTR ds:[ebx]
  40c4b2:	sub    edx,ecx
  40c4b4:	or     dh,dl
  40c4b6:	jp     0x40c50f
  40c4b8:	popf   
  40c4b9:	addr16 int 0xdb
  40c4bc:	ret    0x56b4
  40c4bf:	aad    0x7e
  40c4c1:	mov    dl,0x52
  40c4c3:	fld    DWORD PTR [esp+edi*8]
  40c4c6:	test   BYTE PTR [ebp-0xcc7a512],al
  40c4cc:	fimul  DWORD PTR [eax-0x247eaff1]
  40c4d2:	aas    
  40c4d3:	test   al,0x80
  40c4d5:	inc    ax
  40c4d7:	imul   esp,DWORD PTR [esp+ebp*8],0xffffffab
  40c4db:	push   es
  40c4dc:	ja     0x40c48a
  40c4de:	push   ss
  40c4df:	adc    BYTE PTR [edi+0x3b3b9bf4],0x34
  40c4e6:	mov    cl,0x50
  40c4e8:	cmc    
  40c4e9:	mov    ebp,0xb6d29848
  40c4ee:	xchg   ebp,eax
  40c4ef:	mov    edi,esp
  40c4f1:	fadd   DWORD PTR [ebp+0x16]
  40c4f4:	in     eax,0xf1
  40c4f6:	push   es
  40c4f7:	push   cs
  40c4f8:	icebp  
  40c4f9:	(bad)  
  40c4fa:	out    dx,eax
  40c4fb:	sbb    BYTE PTR [edx+eiz*8-0x69],ch
  40c4ff:	psubq  mm4,QWORD PTR [esi]
  40c502:	repz sub eax,0xd55b997f
  40c508:	adc    dh,BYTE PTR [edi]
  40c50a:	fisubr DWORD PTR [eax-0x561433f5]
  40c510:	jmp    0x820d24f5
  40c515:	jb     0x40c55a
  40c517:	mov    cl,0xcb
  40c519:	mov    edi,0x3714a828
  40c51e:	sub    cl,BYTE PTR ds:[ebx]
  40c521:	xchg   edx,eax
  40c522:	popa   
  40c523:	and    DWORD PTR [edx+eax*1],edx
  40c526:	jmp    0x40c599
  40c528:	pop    eax
  40c529:	scas   eax,DWORD PTR es:[edi]
  40c52a:	push   edi
  40c52b:	add    dh,BYTE PTR [ebx+0x567e89ce]
  40c531:	adc    eax,0x9cc7a803
  40c536:	leave  
  40c537:	rcr    BYTE PTR [edi+esi*2+0x60],0x58
  40c53c:	and    BYTE PTR [edi],dl
  40c53e:	inc    ebp
  40c53f:	dec    esi
  40c540:	cmp    edi,DWORD PTR [eax+edi*8-0x6fd6ed0e]
  40c547:	mul    ebx
  40c549:	int3   
  40c54a:	les    esi,FWORD PTR [edx]
  40c54c:	adc    eax,0xfcb97a0a
  40c551:	std    
  40c552:	scas   eax,DWORD PTR es:[edi]
  40c553:	dec    edi
  40c554:	or     dh,BYTE PTR [eax+0x2a]
  40c557:	push   eax
  40c558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c559:	stos   DWORD PTR es:[edi],eax
  40c55a:	popa   
  40c55b:	sbb    BYTE PTR [eax+ecx*4+0x5e],al
  40c55f:	or     al,0xab
  40c561:	inc    eax
  40c562:	pop    ds
  40c563:	iret   
  40c564:	retf   
  40c565:	(bad)  
  40c566:	cdq    
  40c567:	mov    cl,0x95
  40c569:	inc    edi
  40c56a:	mov    esi,0x63db1a4d
  40c56f:	lahf   
  40c570:	pop    edx
  40c571:	xlat   BYTE PTR ds:[ebx]
  40c572:	sbb    dl,BYTE PTR [eax+eiz*4-0x15]
  40c576:	aas    
  40c577:	jmp    0x40c5ba
  40c579:	inc    edx
  40c57a:	fisubr WORD PTR [eax*2-0x3f3e5abc]
  40c581:	add    eax,0xf3d04b06
  40c586:	cmp    ecx,DWORD PTR [eax]
  40c588:	enter  0xcf30,0x37
  40c58c:	cwde   
  40c58d:	push   cs
  40c58e:	dec    esp
  40c58f:	pusha  
  40c590:	mov    esi,0xdd572b90
  40c595:	(bad)  
  40c597:	push   0xffffff9d
  40c599:	in     eax,dx
  40c59a:	xchg   ebp,eax
  40c59b:	mov    cl,0x10
  40c59d:	es addr16 mov ch,0x7c
  40c5a1:	ret    
  40c5a2:	inc    ebx
  40c5a3:	test   dl,cl
  40c5a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5a6:	jae    0x40c5ed
  40c5a8:	sbb    BYTE PTR [edi],bl
  40c5aa:	cmp    BYTE PTR [eax-0xa696367],ah
  40c5b0:	lahf   
  40c5b1:	mov    cl,0xf
  40c5b3:	mov    ecx,0xf7051d69
  40c5b8:	outs   dx,BYTE PTR ds:[esi]
  40c5b9:	sti    
  40c5ba:	aas    
  40c5bb:	or     DWORD PTR [ebx],eax
  40c5bd:	call   0x7276a9
  40c5c2:	adc    DWORD PTR [ecx+0x2f],esi
  40c5c5:	push   esp
  40c5c6:	and    DWORD PTR [esi-0x26],0x68c300ae
  40c5cd:	dec    eax
  40c5ce:	sbb    al,BYTE PTR es:[edi]
  40c5d1:	and    DWORD PTR [ebx],esp
  40c5d3:	mov    al,ds:0x4e963100
  40c5d8:	jmp    0x40c56a
  40c5da:	(bad)  
  40c5db:	adc    eax,0x47d2022b
  40c5e0:	xchg   esp,eax
  40c5e1:	cld    
  40c5e2:	mov    ch,BYTE PTR [edi]
  40c5e4:	mov    eax,0xda80e3fd
  40c5e9:	push   0x1
  40c5eb:	bound  ecx,QWORD PTR [ebx+0x56]
  40c5ee:	cmp    ah,bl
  40c5f0:	sub    dl,dh
  40c5f2:	push   eax
  40c5f3:	push   edi
  40c5f4:	call   DWORD PTR [edx-0x4808c713]
  40c5fa:	push   0x6fc01a88
  40c5ff:	push   0x547fbb3a
  40c604:	xchg   ebp,eax
  40c605:	mov    esp,0x13289a65
  40c60a:	loop   0x40c677
  40c60c:	mov    ebp,0xe86749f
  40c611:	ret    0xad0a
  40c614:	sbb    al,0xb3
  40c616:	pushf  
  40c617:	fistp  DWORD PTR [esi]
  40c619:	in     eax,0x2e
  40c61b:	pushf  
  40c61c:	cmp    al,0x7
  40c61e:	stos   DWORD PTR es:[edi],eax
  40c61f:	shr    BYTE PTR [edi],1
  40c621:	ret    
  40c622:	out    0x34,eax
  40c624:	(bad)  
  40c625:	sub    ecx,ebp
  40c627:	mov    cl,BYTE PTR [eax]
  40c629:	das    
  40c62a:	fsub   QWORD PTR ds:0xe01d93d9
  40c630:	or     al,0xb6
  40c632:	pop    ss
  40c633:	sbb    DWORD PTR [eax-0x5a155a4b],0x280dbf7d
  40c63d:	daa    
  40c63e:	jl     0x40c656
  40c640:	sysenter 
  40c642:	inc    edi
  40c643:	ror    DWORD PTR [ebx+0x353c96f7],1
  40c649:	nop
  40c64a:	push   0x9c5d1f5c
  40c64f:	dec    edx
  40c650:	inc    edi
  40c651:	mov    BYTE PTR fs:[edi-0x7d],cl
  40c655:	sub    eax,0x84303bf7
  40c65a:	sar    edi,1
  40c65c:	xchg   esi,ecx
  40c65e:	sub    eax,0xed0bae63
  40c663:	inc    esi
  40c664:	xchg   ebx,eax
  40c665:	test   BYTE PTR [ebp+0x39fb4711],0x87
  40c66c:	(bad)  
  40c66f:	pop    ds
  40c670:	jno    0x40c696
  40c672:	mov    ebp,0x816bd9d
  40c677:	hlt    
  40c678:	jno    0x40c67d
  40c67a:	ins    BYTE PTR es:[edi],dx
  40c67b:	add    al,0xb2
  40c67d:	push   ebx
  40c67e:	or     cl,BYTE PTR [ebx+0x72717bab]
  40c684:	sbb    DWORD PTR [edi+0x66],eax
  40c687:	cmp    eax,DWORD PTR [edi-0x56]
  40c68a:	sub    BYTE PTR [eax],ch
  40c68c:	xchg   esi,eax
  40c68d:	xor    esi,DWORD PTR [esi]
  40c68f:	loope  0x40c687
  40c691:	jno    0x40c6e7
  40c693:	sbb    bl,bh
  40c695:	pop    esp
  40c696:	and    DWORD PTR [esi+0x12],0xffffff82
  40c69a:	mov    ebp,0xca6ea233
  40c69f:	xor    al,0x60
  40c6a1:	jmp    0x40c6ca
  40c6a3:	adc    DWORD PTR [ebx+ebp*8-0x80],eax
  40c6a7:	mov    al,0xee
  40c6a9:	scas   al,BYTE PTR es:[edi]
  40c6aa:	mov    ch,0xc8
  40c6ac:	addr16 mov ds:0x405,al
  40c6b0:	push   ecx
  40c6b1:	jno    0x40c6ac
  40c6b3:	xchg   edx,eax
  40c6b4:	or     BYTE PTR [eax],dl
  40c6b6:	jmp    0x8795:0xfebd608c
  40c6bd:	sbb    al,BYTE PTR [ecx]
  40c6bf:	mov    ebp,0xefe64108
  40c6c4:	inc    esi
  40c6c5:	mov    ebx,0xae4402d4
  40c6ca:	inc    esi
  40c6cb:	test   BYTE PTR [ecx],ch
  40c6cd:	sub    al,0x6d
  40c6cf:	cmp    al,0x63
  40c6d1:	add    dh,0xfc
  40c6d4:	repz push ss
  40c6d6:	sub    DWORD PTR [eax+0x79],ecx
  40c6d9:	push   esi
  40c6da:	mov    ds,WORD PTR [ebp-0x4439f4dc]
  40c6e0:	stos   BYTE PTR es:[edi],al
  40c6e1:	pop    edi
  40c6e2:	loope  0x40c665
  40c6e4:	xchg   edx,eax
  40c6e5:	ins    DWORD PTR es:[edi],dx
  40c6e6:	into   
  40c6e7:	sbb    dh,BYTE PTR [eax-0x45f52ed7]
  40c6ed:	popa   
  40c6ee:	sbb    DWORD PTR gs:[ebx+0x65],ebx
  40c6f2:	lods   al,BYTE PTR ds:[esi]
  40c6f3:	mov    bl,0x45
  40c6f5:	in     eax,0x24
  40c6f7:	sbb    dl,BYTE PTR ds:0xd5926fdf
  40c6fd:	sub    esp,DWORD PTR [edx+0x5d016605]
  40c703:	lock aad 0x42
  40c706:	(bad)  
  40c708:	and    BYTE PTR [eax-0x53],ch
  40c70b:	arpl   WORD PTR [ebx+0x55],di
  40c70e:	addr16 and eax,0x774c39fc
  40c714:	pop    esi
  40c715:	adc    BYTE PTR [esi+0x1e],bh
  40c718:	pop    ds
  40c719:	fadd   DWORD PTR [ebp+0x4c]
  40c71c:	and    ah,BYTE PTR [ebx-0x3a]
  40c71f:	mov    al,ds:0x30ec00df
  40c724:	not    BYTE PTR [edx+0x26d17b99]
  40c72a:	ins    BYTE PTR es:[edi],dx
  40c72b:	xor    al,0xf2
  40c72d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c72e:	stos   DWORD PTR es:[edi],eax
  40c72f:	jmp    0x303416be
  40c734:	jae    0x40c7a8
  40c736:	mov    ebp,0x3aac913
  40c73b:	aad    0x23
  40c73d:	jecxz  0x40c78d
  40c73f:	iret   
  40c740:	test   eax,0x93156901
  40c745:	xlat   BYTE PTR ds:[ebx]
  40c746:	test   al,0xa7
  40c748:	push   0xffffffc5
  40c74a:	mov    edx,0xaefaee0c
  40c74f:	xchg   BYTE PTR [ecx-0x34689c3],dh
  40c755:	add    ah,BYTE PTR ss:[edi-0x60]
  40c759:	inc    edi
  40c75a:	cmp    esp,edi
  40c75c:	dec    edx
  40c75d:	xchg   ebp,eax
  40c75e:	or     BYTE PTR ds:0xb3eb421f,0x96
  40c765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c766:	lods   al,BYTE PTR ds:[esi]
  40c767:	lahf   
  40c768:	sbb    ch,bl
  40c76a:	xchg   edi,eax
  40c76b:	add    cl,BYTE PTR [ebx]
  40c76d:	lahf   
  40c76e:	imul   ebp,DWORD PTR [esi+0x50],0xc99518b9
  40c775:	js     0x40c6fa
  40c777:	jmp    DWORD PTR [edx+0x59694a64]
  40c77d:	dec    ecx
  40c77e:	lock into 
  40c780:	and    DWORD PTR [ecx],0xc7936168
  40c786:	in     eax,dx
  40c787:	inc    ecx
  40c788:	mov    eax,ds:0x631420b2
  40c78d:	mov    esp,0x13bd6764
  40c792:	loope  0x40c7b8
  40c794:	xor    eax,0x5a830e4d
  40c799:	inc    ebx
  40c79a:	or     edx,DWORD PTR [edx]
  40c79c:	(bad)  
  40c79e:	les    esp,FWORD PTR [edi+0x687a78b2]
  40c7a4:	xchg   ecx,eax
  40c7a5:	das    
  40c7a6:	dec    ebx
  40c7a7:	push   ds
  40c7a8:	or     ebx,DWORD PTR [esi+edi*1]
  40c7ab:	adc    dh,0x73
  40c7ae:	fiadd  DWORD PTR [eax-0x55a534cd]
  40c7b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b5:	sbb    al,0x59
  40c7b7:	jo     0x40c7a4
  40c7b9:	push   ecx
  40c7ba:	mov    eax,0xacf89089
  40c7bf:	jle    0x40c7a2
  40c7c1:	add    eax,0xae73d096
  40c7c6:	stos   BYTE PTR es:[edi],al
  40c7c7:	gs jmp 0xf533a432
  40c7cd:	mov    al,0x7
  40c7cf:	lods   eax,DWORD PTR ds:[esi]
  40c7d0:	pop    ss
  40c7d1:	mov    ch,0x6e
  40c7d3:	push   cs
  40c7d4:	push   ebx
  40c7d5:	xchg   esp,eax
  40c7d6:	xor    bl,BYTE PTR [ecx+0x66a069da]
  40c7dc:	out    dx,eax
  40c7dd:	fdiv   QWORD PTR [edi]
  40c7df:	push   0x22
  40c7e1:	xor    BYTE PTR [esi-0x2f],bl
  40c7e4:	fnstsw ax
  40c7e6:	sub    al,0x19
  40c7e8:	js     0x40c780
  40c7ea:	mov    ah,BYTE PTR [edi+ebx*2]
  40c7ed:	out    dx,eax
  40c7ee:	and    ebx,esi
  40c7f0:	jae    0x40c7c6
  40c7f2:	push   ebx
  40c7f3:	mov    cl,0x8
  40c7f5:	icebp  
  40c7f6:	xchg   ebp,eax
  40c7f7:	lock sbb dh,BYTE PTR [ebp+0x7515a16f]
  40c7fe:	int3   
  40c7ff:	and    al,0x85
  40c801:	inc    ecx
  40c802:	push   ds
  40c803:	xor    dl,BYTE PTR [esi]
  40c805:	cld    
  40c806:	ja     0x40c7cd
  40c808:	lods   al,BYTE PTR ds:[esi]
  40c809:	mov    ah,0x8c
  40c80b:	sbb    DWORD PTR [edi],edi
  40c80d:	mov    bh,0xe9
  40c80f:	jb     0x40c7e2
  40c811:	inc    edx
  40c812:	out    0x76,eax
  40c814:	jb     0x40c85c
  40c816:	dec    ecx
  40c817:	push   ds
  40c818:	daa    
  40c819:	mov    ds:0x7bde9e56,eax
  40c81e:	pop    ebx
  40c81f:	(bad)  
  40c820:	fmul   DWORD PTR [esi]
  40c822:	xchg   edx,eax
  40c823:	xor    DWORD PTR [esi-0x8d8d854],esi
  40c829:	mov    al,ds:0x38862348
  40c82e:	push   es
  40c82f:	mov    bh,BYTE PTR [edx+edi*1]
  40c832:	inc    ebp
  40c833:	and    al,0xcb
  40c835:	or     BYTE PTR [edx-0x32],bl
  40c838:	not    DWORD PTR [esi]
  40c83a:	mov    edx,DWORD PTR ds:0xda6cb8dc
  40c840:	add    DWORD PTR [esi+0x6b46036b],ebx
  40c846:	imul   bl
  40c848:	push   0xfffffff5
  40c84a:	stos   DWORD PTR es:[edi],eax
  40c84b:	mov    ds:0x28b8d17d,al
  40c850:	pop    ds
  40c851:	mov    eax,0x20cfeeeb
  40c856:	lahf   
  40c857:	les    edx,FWORD PTR [edi]
  40c859:	stos   DWORD PTR es:[edi],eax
  40c85a:	movhps xmm1,QWORD PTR [eax+0x267954c7]
  40c861:	loope  0x40c83a
  40c863:	mov    eax,0xf9894e43
  40c868:	loopne 0x40c7fe
  40c86a:	cwde   
  40c86b:	and    BYTE PTR [ecx+esi*4],dh
  40c86e:	sti    
  40c86f:	xor    edi,DWORD PTR [esi]
  40c871:	test   DWORD PTR [edi+0x7a],esi
  40c874:	push   edi
  40c875:	push   ebp
  40c876:	jmp    0xc10a:0x59174eaf
  40c87d:	call   0x11e9:0xdafe46b1
  40c884:	and    BYTE PTR [esi],bh
  40c886:	aad    0xe9
  40c888:	je     0x40c879
  40c88a:	pop    edx
  40c88b:	push   ebp
  40c88c:	xchg   esp,eax
  40c88d:	(bad)  
  40c88e:	xlat   BYTE PTR ds:[ebx]
  40c88f:	rcr    cl,1
  40c891:	nop
  40c892:	fistp  DWORD PTR ds:0x2b934e45
  40c898:	sub    BYTE PTR [edi+0x66],bl
  40c89b:	mov    dl,0xe7
  40c89d:	sub    DWORD PTR [ebx],0x61
  40c8a0:	hlt    
  40c8a1:	fcom   QWORD PTR [ebp+0x2d436549]
  40c8a7:	dec    eax
  40c8a8:	dec    edi
  40c8a9:	stos   DWORD PTR es:[edi],eax
  40c8aa:	adc    ah,ah
  40c8ac:	rcl    DWORD PTR [ecx],1
  40c8ae:	aam    0x6e
  40c8b0:	sub    bh,BYTE PTR [ecx]
  40c8b2:	into   
  40c8b3:	outs   dx,DWORD PTR ds:[esi]
  40c8b4:	les    ebx,FWORD PTR [edi-0x9]
  40c8b7:	fisttp QWORD PTR [esi+0x44a63c1d]
  40c8bd:	lds    ebp,FWORD PTR [edx+0x1b22855e]
  40c8c3:	fst    DWORD PTR [edi-0x1c]
  40c8c6:	pop    edi
  40c8c7:	std    
  40c8c8:	mov    al,0xbe
  40c8ca:	add    eax,0x203f7aa9
  40c8cf:	or     al,BYTE PTR [ecx+0x374c10c0]
  40c8d5:	lea    ecx,[ecx+0x7]
  40c8d8:	pushf  
  40c8d9:	in     al,dx
  40c8da:	jne    0x40c8ee
  40c8dc:	fwait
  40c8dd:	out    dx,eax
  40c8de:	test   ah,dh
  40c8e0:	in     eax,dx
  40c8e1:	mov    edi,0x48790a99
  40c8e6:	fst    DWORD PTR [eax]
  40c8e8:	shr    bl,1
  40c8ea:	repz sbb al,BYTE PTR [ebx-0x59]
  40c8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8ef:	inc    ecx
  40c8f0:	iret   
  40c8f1:	jg     0x40c8bd
  40c8f3:	ss mov ebp,0x4450bfe2
  40c8f9:	sub    al,0x22
  40c8fb:	outs   dx,DWORD PTR ds:[esi]
  40c8fc:	mov    ecx,0x387810bc
  40c901:	dec    ebx
  40c902:	inc    ebp
  40c903:	fld    QWORD PTR ds:0x94b3c2aa
  40c909:	and    ebx,DWORD PTR [ebx+0x6ebfc181]
  40c90f:	mov    bl,0xa9
  40c911:	jnp    0x40c919
  40c913:	mov    al,0x85
  40c915:	rol    DWORD PTR [edi+0x70],1
  40c918:	sbb    eax,0x8ab4ebc
  40c91d:	mov    edx,0xb188a23a
  40c922:	dec    eax
  40c923:	test   BYTE PTR [esi-0x5ab306ae],bl
  40c929:	shl    bh,cl
  40c92b:	loopne 0x40c939
  40c92d:	dec    edx
  40c92e:	pop    edx
  40c92f:	adc    eax,0xcbbcddcd
  40c934:	add    DWORD PTR [ecx-0x62],ecx
  40c937:	cwde   
  40c938:	xchg   ebx,eax
  40c939:	dec    ecx
  40c93a:	and    DWORD PTR [edx],ecx
  40c93c:	mov    ?,WORD PTR [eax+0x13]
  40c93f:	mov    eax,ds:0x1775ac02
  40c944:	pop    edi
  40c945:	fiadd  WORD PTR [ecx+0x2a35236f]
  40c94b:	sbb    bl,dh
  40c94d:	neg    DWORD PTR [esi+esi*8]
  40c950:	sbb    ebp,DWORD PTR [esi+eiz*2]
  40c953:	ins    DWORD PTR es:[di],dx
  40c955:	adc    DWORD PTR [ebx],ecx
  40c957:	icebp  
  40c958:	jmp    0x40c949
  40c95a:	pop    ebx
  40c95b:	pop    edi
  40c95c:	push   ebp
  40c95d:	pusha  
  40c95e:	and    eax,0xeaa4ecbf
  40c963:	repz or DWORD PTR [ebx-0x74fa3ef5],esi
  40c96a:	dec    esi
  40c96b:	adc    cl,BYTE PTR [ebx-0x1b210742]
  40c971:	repz sahf 
  40c973:	push   ds
  40c974:	mov    ds:0x64924344,al
  40c979:	dec    esp
  40c97a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c97b:	mov    BYTE PTR [edx-0x71],al
  40c97e:	adc    ecx,edi
  40c980:	xor    BYTE PTR [esi],dh
  40c982:	add    al,0xc3
  40c984:	cmp    eax,0xb8d81aa3
  40c989:	xchg   esp,eax
  40c98a:	jnp    0x40c9dd
  40c98c:	call   0x48c:0xce41cf86
  40c993:	or     eax,DWORD PTR [esi-0x37]
  40c996:	mov    WORD PTR [eax-0x45e5068d],fs
  40c99c:	inc    ecx
  40c99d:	daa    
  40c99e:	push   esp
  40c99f:	and    BYTE PTR [ecx-0x7],bh
  40c9a2:	xchg   ebp,eax
  40c9a3:	inc    ebp
  40c9a4:	xchg   esi,eax
  40c9a5:	xor    DWORD PTR [edi],ecx
  40c9a7:	int3   
  40c9a8:	xor    BYTE PTR [edx+eax*1],cl
  40c9ab:	push   edx
  40c9ac:	dec    ebx
  40c9ad:	mov    ah,BYTE PTR [edi+0x26]
  40c9b0:	push   0x2d
  40c9b2:	popf   
  40c9b3:	adc    eax,0x718ddf36
  40c9b8:	pop    ecx
  40c9b9:	add    DWORD PTR [ebx],esi
  40c9bb:	push   0xcf7ea141
  40c9c0:	lahf   
  40c9c1:	and    al,0xb8
  40c9c3:	lahf   
  40c9c4:	mov    dh,0x6d
  40c9c6:	push   ds
  40c9c7:	xchg   edx,eax
  40c9c8:	ins    DWORD PTR es:[edi],dx
  40c9c9:	hlt    
  40c9ca:	fcmovnu st,st(1)
  40c9cc:	xchg   BYTE PTR [ebx+0x27],ah
  40c9cf:	outs   dx,BYTE PTR ds:[esi]
  40c9d0:	jo     0x40ca45
  40c9d2:	shr    DWORD PTR [ebx-0x3b],0x5b
  40c9d6:	call   0x41102699
  40c9db:	cmc    
  40c9dc:	(bad)  
  40c9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9de:	pop    ecx
  40c9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9e0:	xor    DWORD PTR [eax+edi*2+0x59514d1b],esi
  40c9e7:	cmc    
  40c9e8:	hlt    
  40c9e9:	and    BYTE PTR [edx+0x6d],0xa6
  40c9ed:	sbb    al,0x7f
  40c9ef:	popa   
  40c9f0:	lahf   
  40c9f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9f2:	xchg   edi,eax
  40c9f3:	mov    ds:0x23160148,al
  40c9f8:	mov    ch,0x41
  40c9fa:	and    al,0xf6
  40c9fc:	adc    DWORD PTR [ebp-0x6f],0xffffff8a
  40ca00:	test   DWORD PTR [eax+0x73],0x12500a63
  40ca07:	out    0x51,al
  40ca09:	retf   0x23ac
  40ca0c:	clc    
  40ca0d:	pushf  
  40ca0e:	or     DWORD PTR [esi+0x3a],esp
  40ca11:	mov    ch,0x50
  40ca13:	loopne 0x40ca66
  40ca15:	ss xchg ebx,eax
  40ca17:	inc    esp
  40ca18:	int3   
  40ca19:	ja     0x40ca4e
  40ca1b:	fmulp  st(4),st
  40ca1d:	dec    edx
  40ca1e:	sbb    cl,ah
  40ca20:	inc    ebp
  40ca21:	and    bh,BYTE PTR [ecx]
  40ca23:	ins    DWORD PTR es:[edi],dx
  40ca24:	mov    al,ds:0xed8bb2e5
  40ca29:	arpl   WORD PTR [edi+0x6ef28eb],bp
  40ca2f:	or     ebp,DWORD PTR [edx]
  40ca31:	jg     0x40c9d7
  40ca33:	stos   BYTE PTR es:[edi],al
  40ca34:	mov    ds:0x32c8189,eax
  40ca39:	into   
  40ca3a:	loope  0x40c9f0
  40ca3c:	xor    eax,DWORD PTR [ebx-0x14]
  40ca3f:	scas   al,BYTE PTR es:[edi]
  40ca40:	stos   BYTE PTR es:[edi],al
  40ca41:	push   0x34
  40ca43:	arpl   WORD PTR [ebx-0x3e],cx
  40ca46:	(bad)  
  40ca47:	mov    BYTE PTR [esi+0x1591cf5f],0x8b
  40ca4e:	adc    edx,DWORD PTR [edi]
  40ca50:	mov    cl,0xe6
  40ca52:	mov    esp,0x29c27984
  40ca57:	js     0x40ca81
  40ca59:	pop    eax
  40ca5a:	jp     0x40ca08
  40ca5c:	rcr    DWORD PTR [ebx+0x6d],0x64
  40ca60:	jl     0x40ca8a
  40ca62:	pop    eax
  40ca63:	jns    0x40ca80
  40ca65:	call   0x37eb:0xf209aefb
  40ca6c:	jmp    0x40cad6
  40ca6e:	(bad)  
  40ca6f:	mov    al,ds:0x8802bf
  40ca74:	repnz out dx,al
  40ca76:	adc    edi,ecx
  40ca78:	cld    
  40ca79:	pop    ds
  40ca7a:	adc    eax,0x45d664d3
  40ca7f:	dec    esi
  40ca80:	push   cs
  40ca81:	test   BYTE PTR [ebx+0x46],0x8
  40ca85:	mov    ch,0x33
  40ca87:	jmp    0x40ca99
  40ca89:	dec    ebp
  40ca8a:	inc    ebp
  40ca8b:	xchg   edi,eax
  40ca8c:	mov    esp,0x1e01cc43
  40ca91:	pop    ebp
  40ca92:	inc    esp
  40ca93:	pop    esi
  40ca94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca95:	cmp    ah,BYTE PTR [edx+0x3f1ea0]
  40ca9b:	dec    esi
  40ca9c:	int    0x68
  40ca9e:	fimul  DWORD PTR [ebx+0x78]
  40caa1:	cmp    DWORD PTR [eax-0x7d7a48c8],ebp
  40caa7:	lods   al,BYTE PTR ds:[esi]
  40caa8:	cmp    dh,BYTE PTR [edx-0x2c]
  40caab:	jb     0x40ca60
  40caad:	mov    esp,0x9a175ec7
  40cab2:	jae    0x40caae
  40cab4:	stos   BYTE PTR es:[edi],al
  40cab5:	bound  edi,QWORD PTR [esp+ebp*1]
  40cab8:	push   ss
  40cab9:	in     al,0x82
  40cabb:	and    eax,0x227e8b06
  40cac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cac1:	mov    eax,ds:0xd2853d07
  40cac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cac7:	add    eax,0x24c72ea5
  40cacc:	in     al,0x15
  40cace:	inc    ebx
  40cacf:	inc    ebx
  40cad0:	jns    0x40cb4b
  40cad2:	cmc    
  40cad3:	xor    bh,BYTE PTR [ecx]
  40cad5:	xchg   ecx,eax
  40cad6:	sub    ecx,DWORD PTR [edx-0x5eff776e]
  40cadc:	pop    ecx
  40cadd:	mov    ds:0x590a6816,al
  40cae2:	xchg   ebx,eax
  40cae3:	pop    edx
  40cae4:	out    0x10,al
  40cae6:	jo     0x40ca68
  40cae8:	stos   BYTE PTR es:[edi],al
  40cae9:	xlat   BYTE PTR ds:[ebx]
  40caea:	nop
  40caeb:	or     BYTE PTR [edi+0x4f],bl
  40caee:	int3   
  40caef:	mov    eax,ds:0xdfb34806
  40caf4:	dec    ebx
  40caf5:	fs cs sbb al,0xf6
  40caf9:	sbb    al,0x69
  40cafb:	add    ah,BYTE PTR [esi+ebx*1]
  40cafe:	and    al,BYTE PTR [esi+eiz*2]
  40cb01:	fnstcw WORD PTR [ebx-0x35]
  40cb04:	xor    al,0x69
  40cb06:	dec    ecx
  40cb07:	retf   0xe951
  40cb0a:	lods   al,BYTE PTR ds:[esi]
  40cb0b:	push   ebp
  40cb0c:	aaa    
  40cb0d:	fild   DWORD PTR [ebp-0x110b718d]
  40cb13:	mov    edi,DWORD PTR [ebx]
  40cb15:	stos   DWORD PTR es:[edi],eax
  40cb16:	fst    DWORD PTR [edi+0x63150014]
  40cb1c:	adc    ah,BYTE PTR [ebx-0x72]
  40cb1f:	ins    BYTE PTR es:[edi],dx
  40cb20:	add    BYTE PTR [eax+0x6558b97d],cl
  40cb26:	sub    al,0x4f
  40cb28:	add    dl,ch
  40cb2a:	fsubr  DWORD PTR [ebp+0x2b]
  40cb2d:	xchg   edi,eax
  40cb2e:	cmp    al,0xf2
  40cb30:	inc    edx
  40cb31:	adc    ah,al
  40cb33:	mov    ch,0xaf
  40cb35:	xor    DWORD PTR [edx-0x4d],eax
  40cb38:	pop    edi
  40cb39:	pop    ds
  40cb3a:	push   0xb4622bc5
  40cb3f:	sub    cl,BYTE PTR [esi-0x73]
  40cb42:	mov    ebp,0x43679416
  40cb47:	inc    edx
  40cb48:	push   eax
  40cb49:	add    eax,0xc2ba9b17
  40cb4e:	imul   ecx,DWORD PTR [edx-0xf],0xffffffca
  40cb52:	or     ah,BYTE PTR [ebx-0x2ceb3a3b]
  40cb58:	sbb    BYTE PTR [esi-0x4e095b77],bl
  40cb5e:	in     eax,0x38
  40cb60:	or     eax,DWORD PTR [ebx-0x309eda87]
  40cb66:	and    ebx,DWORD PTR [eax-0x32d6711]
  40cb6c:	push   esi
  40cb6d:	mov    BYTE PTR [esi+0x49ed9ab9],ch
  40cb73:	call   0xb64a:0x9f47936b
  40cb7a:	call   0x4dd0:0x4787bd01
  40cb81:	es aaa 
  40cb83:	(bad)  
  40cb84:	stc    
  40cb85:	jmp    0xa6cba136
  40cb8a:	sar    DWORD PTR [ebx+0x3a],cl
  40cb8d:	cmp    al,0x6c
  40cb8f:	jb     0x40cb83
  40cb91:	sub    ch,0xe4
  40cb94:	pop    esi
  40cb95:	xor    BYTE PTR [edi-0x1bd2b6ae],ch
  40cb9b:	inc    esp
  40cb9c:	xor    eax,0x67aa33cc
  40cba1:	scas   al,BYTE PTR es:[edi]
  40cba2:	cmp    esi,DWORD PTR [edx]
  40cba4:	int3   
  40cba5:	mov    al,BYTE PTR [ecx+0x67dc8728]
  40cbab:	retf   0xbbb1
  40cbae:	xlat   BYTE PTR ds:[ebx]
  40cbaf:	cmp    esp,edi
  40cbb1:	xor    BYTE PTR [edi+0x73],ah
  40cbb4:	arpl   dx,bp
  40cbb6:	daa    
  40cbb7:	mov    BYTE PTR [edi+0x7d68af6f],ah
  40cbbd:	pop    ds
  40cbbe:	rcl    BYTE PTR [eax+ebp*4+0x6c],0x5b
  40cbc3:	add    DWORD PTR [eax-0xf],ebp
  40cbc6:	rcr    BYTE PTR gs:[edi-0x70],1
  40cbca:	push   edi
  40cbcb:	scas   eax,DWORD PTR es:[edi]
  40cbcc:	(bad)  
  40cbcd:	fsubr  QWORD PTR [eax-0x30ca3d2]
  40cbd3:	xor    ch,BYTE PTR [esi+0x38]
  40cbd6:	retf   
  40cbd7:	inc    edx
  40cbd8:	fstp   DWORD PTR [esi+eiz*4]
  40cbdb:	add    eax,esi
  40cbdd:	push   ss
  40cbde:	enter  0x485b,0x9a
  40cbe2:	or     eax,0x5509cc3b
  40cbe7:	cmp    eax,DWORD PTR [ebx+0x47286de8]
  40cbed:	enter  0x5908,0xa0
  40cbf1:	rcr    DWORD PTR [eax+0x1e84f539],cl
  40cbf7:	xchg   ebx,eax
  40cbf8:	pop    ss
  40cbf9:	stos   BYTE PTR es:[edi],al
  40cbfa:	mov    bh,0x22
  40cbfc:	clc    
  40cbfd:	sbb    ebx,DWORD PTR [edx+ebx*8]
  40cc00:	cmp    BYTE PTR [edx-0x39],0x1d
  40cc04:	xchg   BYTE PTR ds:0x143e8698,cl
  40cc0a:	ror    DWORD PTR [edi],cl
  40cc0c:	fs xchg edx,eax
  40cc0e:	xor    al,0x60
  40cc10:	inc    esi
  40cc11:	mov    ecx,0x88fc77c0
  40cc16:	and    DWORD PTR [esi+0x57056aba],edx
  40cc1c:	lea    eax,[ebx-0x4b]
  40cc1f:	or     al,BYTE PTR [esi]
  40cc21:	fmul   DWORD PTR [ecx+0x61]
  40cc24:	rcl    BYTE PTR [ecx-0x3e],0x85
  40cc28:	test   eax,0xfefbe14c
  40cc2d:	rcl    dl,cl
  40cc2f:	jns    0x40cbf1
  40cc31:	scas   al,BYTE PTR es:[edi]
  40cc32:	shl    DWORD PTR es:0x5b2dbd5a,1
  40cc39:	xchg   edx,eax
  40cc3a:	dec    edx
  40cc3b:	fcom   st(1)
  40cc3d:	aas    
  40cc3e:	cs (bad) 
  40cc40:	sti    
  40cc41:	inc    ebx
  40cc42:	(bad)  
  40cc44:	fdivr  QWORD PTR [edi+0x7]
  40cc47:	xchg   esp,eax
  40cc48:	adc    BYTE PTR [edi+0x11],bh
  40cc4b:	push   ecx
  40cc4c:	mov    bh,0x2f
  40cc4e:	adc    bl,ch
  40cc50:	hlt    
  40cc51:	or     al,0xe
  40cc53:	and    BYTE PTR [esi-0x7],ah
  40cc56:	les    esp,FWORD PTR [ebp+0x3d3ee84c]
  40cc5c:	or     eax,0x88fa8a7c
  40cc61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc62:	popf   
  40cc63:	ins    DWORD PTR es:[edi],dx
  40cc64:	jne    0x40cc41
  40cc66:	mov    ebp,0x71eaaadb
  40cc6b:	sti    
  40cc6c:	(bad)  
  40cc6d:	int3   
  40cc6e:	push   eax
  40cc6f:	sbb    BYTE PTR [edi-0x750b848c],0x2d
  40cc76:	(bad)  
  40cc78:	push   ebx
  40cc79:	push   ebx
  40cc7a:	ja     0x40cc45
  40cc7c:	test   al,0xce
  40cc7e:	ror    ebx,0xcc
  40cc81:	pop    sp
  40cc83:	cmp    al,0xb4
  40cc85:	mov    al,0x54
  40cc87:	fldenv [esi]
  40cc89:	and    DWORD PTR [ebx+esi*2+0xc2ddd18],esp
  40cc90:	mov    dl,ah
  40cc92:	dec    edx
  40cc93:	retf   
  40cc94:	xor    ecx,DWORD PTR [ebp-0x2e51375]
  40cc9a:	and    BYTE PTR [edx-0x3d],ah
  40cc9d:	sbb    edx,0x1c
  40cca0:	(bad)  
  40cca2:	loope  0x40cd1a
  40cca4:	retf   0x37e
  40cca7:	ror    BYTE PTR [ecx],0x1b
  40ccaa:	sar    BYTE PTR [esi+0x36273927],0x63
  40ccb1:	dec    ecx
  40ccb2:	fdivr  DWORD PTR [ecx]
  40ccb4:	into   
  40ccb5:	ins    BYTE PTR es:[edi],dx
  40ccb6:	or     dl,0xef
  40ccb9:	daa    
  40ccba:	scas   eax,DWORD PTR es:[edi]
  40ccbb:	dec    ebp
  40ccbc:	test   eax,0xb784313c
  40ccc1:	leave  
  40ccc2:	adc    al,0x23
  40ccc4:	cmp    bl,bh
  40ccc6:	and    eax,0xd12a7f9a
  40cccb:	pop    esp
  40cccc:	and    BYTE PTR [ecx-0x26],dh
  40cccf:	retf   
  40ccd0:	not    BYTE PTR [ebx-0x18]
  40ccd3:	es sub eax,0x812969ca
  40ccd9:	sub    ch,bh
  40ccdb:	pusha  
  40ccdc:	fs js  0x40cc67
  40ccdf:	test   BYTE PTR [esi],bl
  40cce1:	aam    0x7f
  40cce3:	adc    ebx,DWORD PTR [edi]
  40cce5:	pop    edi
  40cce6:	and    bh,bh
  40cce8:	icebp  
  40cce9:	xor    cl,dh
  40cceb:	fadd   QWORD PTR [eax+0x75]
  40ccee:	sub    DWORD PTR [esi+edi*2],ebx
  40ccf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccf2:	ss pop edx
  40ccf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccf5:	push   ss
  40ccf6:	adc    eax,0xed99f8f3
  40ccfb:	and    bh,0x7c
  40ccfe:	(bad)  
  40ccff:	shl    al,cl
  40cd01:	data16 and al,0x76
  40cd04:	jmp    0x6d382dd6
  40cd09:	xchg   dx,ax
  40cd0b:	and    eax,0x2fae228
  40cd10:	js     0x40cd6d
  40cd12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd13:	push   edi
  40cd14:	stos   DWORD PTR es:[edi],eax
  40cd15:	mov    ecx,0xebdaf210
  40cd1a:	test   BYTE PTR [esi-0x2b],0xd5
  40cd1e:	push   ecx
  40cd1f:	add    BYTE PTR [esp+ebx*1-0x5b],0x8
  40cd24:	xor    DWORD PTR [edx+eiz*2-0x34],edx
  40cd28:	xor    DWORD PTR [ebx],ecx
  40cd2a:	out    dx,eax
  40cd2b:	retf   0x7074
  40cd2e:	fistp  DWORD PTR [esi+0x58]
  40cd31:	test   dl,dh
  40cd33:	dec    ecx
  40cd34:	mov    ch,0x9a
  40cd36:	out    dx,al
  40cd37:	mov    bl,0x33
  40cd39:	adc    bh,BYTE PTR [edx]
  40cd3b:	sbb    eax,0x12db5ff9
  40cd40:	repnz cld 
  40cd42:	mov    esp,0x150bdac1
  40cd47:	retf   0xc205
  40cd4a:	dec    esi
  40cd4b:	pop    ebx
  40cd4c:	sub    bh,bl
  40cd4e:	jo     0x40cd47
  40cd50:	(bad)  
  40cd51:	xchg   ecx,eax
  40cd52:	xchg   DWORD PTR [ecx],ebx
  40cd54:	ins    BYTE PTR es:[edi],dx
  40cd55:	ins    DWORD PTR es:[edi],dx
  40cd56:	push   edi
  40cd57:	adc    DWORD PTR [edx],edx
  40cd59:	pop    edx
  40cd5a:	sub    edi,DWORD PTR [eax+eax*8]
  40cd5d:	adc    ecx,DWORD PTR [eax]
  40cd5f:	in     al,0x35
  40cd61:	test   BYTE PTR [edi+ebx*4],0xe9
  40cd65:	jmp    0x40cd99
  40cd67:	adc    BYTE PTR ds:0x45ec71d6,ah
  40cd6d:	pushf  
  40cd6e:	test   eax,0x7b25343a
  40cd73:	dec    ebp
  40cd74:	inc    eax
  40cd75:	shr    BYTE PTR [ecx],1
  40cd77:	mov    esp,?
  40cd79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd7a:	push   edx
  40cd7b:	cmp    eax,0x49bf5434
  40cd80:	push   eax
  40cd81:	mov    dh,0x71
  40cd83:	imul   eax,DWORD PTR [esi+0xc4c4013],0xffffffc2
  40cd8a:	and    BYTE PTR [edi],0xb7
  40cd8d:	arpl   WORD PTR [ecx-0x29],bx
  40cd90:	lea    ebx,[ebx]
  40cd92:	arpl   ax,cx
  40cd94:	pop    es
  40cd95:	imul   ecx,edx,0xffffffab
  40cd98:	mov    edi,0x5f094420
  40cd9d:	out    dx,al
  40cd9e:	call   0x5520c107
  40cda3:	and    eax,0x76056880
  40cda8:	adc    eax,0xdf7e3d3f
  40cdad:	jne    0x40cde1
  40cdaf:	icebp  
  40cdb0:	and    eax,0x35925c33
  40cdb5:	(bad)  
  40cdb6:	jmp    0xd7d6e69c
  40cdbb:	cmp    BYTE PTR [ebx-0x44d8b2e],0x58
  40cdc2:	div    cl
  40cdc4:	xchg   dl,ch
  40cdc6:	(bad)  
  40cdc7:	scas   al,BYTE PTR es:[edi]
  40cdc8:	arpl   WORD PTR [ecx-0x7a3df741],si
  40cdce:	pop    esp
  40cdcf:	mov    edi,DWORD PTR [edx+0x41]
  40cdd2:	mov    edi,DWORD PTR [eax+0x6]
  40cdd5:	inc    ebx
  40cdd6:	push   cs
  40cdd7:	push   esi
  40cdd8:	shl    DWORD PTR [esi+0xd],1
  40cddb:	or     BYTE PTR ds:0x623d8275,0xb6
  40cde2:	jmp    0x40cd65
  40cde4:	cmp    dh,BYTE PTR [ebp-0x4e]
  40cde7:	rol    BYTE PTR ds:0x5259e070,1
  40cded:	mov    ebx,DWORD PTR [ebx]
  40cdef:	jle    0x40cdd1
  40cdf1:	push   0xfc68c711
  40cdf6:	cmp    dh,bl
  40cdf8:	(bad)  
  40cdf9:	in     eax,dx
  40cdfa:	lea    esi,[ebx]
  40cdfc:	int3   
  40cdfd:	jmp    DWORD PTR [ebx-0x68c7ff2]
  40ce03:	push   eax
  40ce04:	ds test edi,ecx
  40ce07:	mov    esp,DWORD PTR [ecx+edx*8-0x50]
  40ce0b:	retf   0xab40
  40ce0e:	xchg   edx,eax
  40ce0f:	mov    gs,WORD PTR [ecx]
  40ce11:	pop    edi
  40ce12:	ret    
  40ce13:	fucom  st(3)
  40ce15:	or     esp,DWORD PTR [ebx]
  40ce17:	mov    edi,DWORD PTR [esi+edi*1-0x40]
  40ce1b:	and    edx,DWORD PTR [ebx]
  40ce1d:	mov    al,0x66
  40ce1f:	cmp    BYTE PTR [ebx],bh
  40ce21:	sbb    eax,0x4c830ce9
  40ce26:	mov    al,0xeb
  40ce28:	retf   0x699b
  40ce2b:	mov    ebp,0xb791acf7
  40ce30:	sub    al,0x46
  40ce32:	addr16 push ds
  40ce34:	push   edi
  40ce35:	repnz out 0xac,eax
  40ce38:	ret    0xbeda
  40ce3b:	push   0xf87ff310
  40ce40:	ret    0xfcfc
  40ce43:	dec    esp
  40ce44:	xchg   BYTE PTR [edi],ah
  40ce46:	in     eax,dx
  40ce47:	cwde   
  40ce48:	jg     0x40ce39
  40ce4a:	mov    al,0x64
  40ce4c:	loop   0x40ce8c
  40ce4e:	xchg   ebx,eax
  40ce4f:	cmp    bl,BYTE PTR [edx-0x795308de]
  40ce55:	mov    edx,0xfb7b9d69
  40ce5a:	popf   
  40ce5b:	lods   al,BYTE PTR ds:[esi]
  40ce5c:	sub    BYTE PTR [edi+ecx*4+0x54c4978c],0x3a
  40ce64:	rcr    BYTE PTR [ebx-0x5f77b96c],0xe0
  40ce6b:	arpl   sp,di
  40ce6d:	adc    al,0x73
  40ce6f:	push   0xe89fe212
  40ce74:	scas   al,BYTE PTR es:[edi]
  40ce75:	or     bl,BYTE PTR [ecx+0x25002080]
  40ce7b:	dec    edx
  40ce7c:	leave  
  40ce7d:	mov    esi,0xa379115a
  40ce82:	cmc    
  40ce83:	loopne 0x40cef2
  40ce85:	cmp    ecx,DWORD PTR [ecx]
  40ce87:	stc    
  40ce88:	fadd   DWORD PTR ds:0x4b12147f
  40ce8e:	rol    DWORD PTR [ecx+edi*8],0x84
  40ce92:	pop    ds
  40ce93:	stc    
  40ce94:	jl     0x40ce33
  40ce96:	(bad)  
  40ce97:	test   DWORD PTR [edi],0x7e116109
  40ce9d:	mov    edx,DWORD PTR [edx]
  40ce9f:	push   ebx
  40cea0:	and    cl,BYTE PTR [ecx-0x5c]
  40cea3:	sub    eax,0x7c5b6db4
  40cea8:	in     al,0x53
  40ceaa:	jl     0x40ce2c
  40ceac:	out    0xf0,al
  40ceae:	retf   
  40ceaf:	mov    dh,0x86
  40ceb1:	ror    BYTE PTR ds:0xdefbb90e,cl
  40ceb7:	mov    DWORD PTR [ebx+esi*2+0x16],ebx
  40cebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cebc:	cld    
  40cebd:	adc    BYTE PTR [esi],bl
  40cebf:	mov    DWORD PTR [esi-0x1c0786b2],esi
  40cec5:	pop    esp
  40cec6:	mov    al,ds:0x84ebe71d
  40cecb:	test   al,0x27
  40cecd:	push   es
  40cece:	cmp    BYTE PTR [edx],0xaa
  40ced1:	fdiv   DWORD PTR [esi+0x564a3388]
  40ced7:	retf   0x3a94
  40ceda:	jo     0x40ce78
  40cedc:	adc    BYTE PTR [ebx+ebp*1],al
  40cedf:	pop    es
  40cee0:	cmp    eax,esp
  40cee2:	jne    0x40ce69
  40cee4:	push   ds
  40cee5:	xor    DWORD PTR [edi+0x1b135a47],esp
  40ceeb:	sub    eax,0x4bf89977
  40cef0:	jb     0x40cf29
  40cef2:	(bad)  
  40cef4:	std    
  40cef5:	lock dec sp
  40cef8:	push   0x89cba17c
  40cefd:	addr16 nop
  40ceff:	rcr    BYTE PTR [edx-0xec47659],0x52
  40cf06:	add    eax,0xa5898c
  40cf0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf0c:	cdq    
  40cf0d:	ja     0x40cec8
  40cf0f:	scas   al,BYTE PTR es:[edi]
  40cf10:	add    BYTE PTR [ebx+0x6f],0xab
  40cf14:	lds    ebp,FWORD PTR [eax]
  40cf16:	pop    edi
  40cf17:	call   0xa39d:0x2e008daa
  40cf1e:	adc    ah,BYTE PTR [edx-0x1a]
  40cf21:	inc    esi
  40cf22:	mov    ecx,DWORD PTR [ebp+0x15]
  40cf25:	inc    ebp
  40cf26:	les    edi,FWORD PTR [ecx+0xd]
  40cf29:	(bad)  
  40cf2a:	and    edi,edx
  40cf2c:	sbb    DWORD PTR [ebx+0x2a798504],edi
  40cf32:	(bad)  
  40cf33:	cmp    al,0xd7
  40cf35:	xor    al,0x75
  40cf37:	pop    es
  40cf38:	xchg   edx,eax
  40cf39:	xchg   esi,eax
  40cf3a:	in     eax,0x44
  40cf3c:	ja     0x40cf33
  40cf3e:	stos   DWORD PTR es:[edi],eax
  40cf3f:	(bad)  
  40cf40:	and    BYTE PTR [ebx+0x22],dl
  40cf43:	and    DWORD PTR [esi-0x25],0x442e779a
  40cf4a:	ss push ebp
  40cf4c:	scas   eax,DWORD PTR es:[edi]
  40cf4d:	add    eax,0x150c4d1e
  40cf52:	cmp    bl,BYTE PTR [ebx+eax*4]
  40cf55:	mov    edx,0xb72eb7a2
  40cf5a:	daa    
  40cf5b:	fidiv  DWORD PTR ss:[ebx]
  40cf5e:	sub    BYTE PTR [ebp+0x13],0x8d
  40cf62:	(bad)  
  40cf63:	in     al,dx
  40cf64:	mov    DWORD PTR [edi+0x6],0x4c5d261a
  40cf6b:	xchg   dl,al
  40cf6d:	out    0x5b,al
  40cf6f:	in     eax,dx
  40cf70:	(bad)  
  40cf71:	sbb    BYTE PTR [eax-0x4a],ah
  40cf74:	std    
  40cf75:	test   DWORD PTR [edi+0x78],esi
  40cf78:	push   edi
  40cf79:	(bad)  
  40cf7a:	dec    edx
  40cf7b:	sbb    al,0xeb
  40cf7d:	repz lahf 
  40cf7f:	test   eax,0xd3ef603
  40cf84:	mov    esp,esi
  40cf86:	in     al,dx
  40cf87:	mov    cl,0x5d
  40cf8a:	leave  
  40cf8b:	cmp    al,0xec
  40cf8d:	push   ds
  40cf8e:	je     0x40cf8f
  40cf90:	int    0x18
  40cf92:	test   DWORD PTR [esi+0x25],ebp
  40cf95:	fistp  WORD PTR [ecx+0x3c]
  40cf98:	cdq    
  40cf99:	retf   0x4650
  40cf9c:	into   
  40cf9d:	lods   eax,DWORD PTR ds:[esi]
  40cf9e:	sbb    al,BYTE PTR [ebx+0x2ac3abda]
  40cfa4:	or     al,0x74
  40cfa6:	jmp    0x9e18:0xfed49d1
  40cfad:	cwde   
  40cfae:	push   ds
  40cfaf:	sub    esi,edi
  40cfb1:	call   0x4218:0xc68f60d2
  40cfb8:	inc    ebx
  40cfb9:	(bad)  [esi]
  40cfbb:	and    DWORD PTR [eax+0x511c8c72],0x7e
  40cfc2:	xchg   edi,eax
  40cfc3:	xchg   ebx,eax
  40cfc4:	ror    BYTE PTR [ecx],cl
  40cfc6:	mov    gs,ecx
  40cfc8:	jg     0x40cf84
  40cfca:	adc    BYTE PTR [si-0x22c0],dl
  40cfcf:	das    
  40cfd0:	mov    al,ds:0x819dab7
  40cfd5:	add    esi,ecx
  40cfd7:	inc    edx
  40cfd8:	jns    0x40cfa1
  40cfda:	jmp    0x31975fa
  40cfdf:	test   edx,esi
  40cfe1:	lods   eax,DWORD PTR ds:[esi]
  40cfe2:	jo     0x40d008
  40cfe4:	jmp    0x40cfaf
  40cfe6:	jae    0x40cf8d
  40cfe8:	in     eax,0x7e
  40cfea:	mov    ds:0xcc76713f,eax
  40cfef:	mov    edi,DWORD PTR [edi-0xa]
  40cff2:	pop    edx
  40cff3:	jecxz  0x40d042
  40cff5:	into   
  40cff6:	inc    ebx
  40cff8:	hlt    
  40cff9:	sub    BYTE PTR [edi],bh
  40cffb:	fs ins BYTE PTR es:[edi],dx
  40cffd:	mov    al,ds:0x38ff8561
  40d002:	ins    BYTE PTR es:[edi],dx
  40d003:	mov    al,ds:0xf91477a
  40d008:	cmp    BYTE PTR [eax+0x17def8ca],0x10
  40d00f:	xor    eax,0xdaebc8a1
  40d014:	test   al,0x7c
  40d016:	xor    eax,0x6b2c91ca
  40d01b:	fst    DWORD PTR [eax+0x6e023f8d]
  40d021:	shl    DWORD PTR [edx+0x7304bfb2],0x46
  40d028:	cld    
  40d029:	sahf   
  40d02a:	push   esi
  40d02b:	fwait
  40d02c:	add    bl,BYTE PTR [ebp-0xf]
  40d02f:	rcr    BYTE PTR [ebp+eax*1-0x1a],cl
  40d033:	mov    ecx,0x32e09927
  40d038:	pop    ds
  40d039:	aam    0xe4
  40d03b:	mov    eax,0xe53115b2
  40d040:	mov    eax,0x70c5a730
  40d045:	adc    al,0x4f
  40d047:	pop    eax
  40d048:	sub    eax,0x7c5ba44e
  40d04d:	mov    ecx,0x3d86b085
  40d052:	fst    DWORD PTR [ebp-0xa03a80]
  40d058:	aad    0xed
  40d05a:	cmp    ebp,DWORD PTR [edx]
  40d05c:	out    dx,al
  40d05d:	gs dec eax
  40d05f:	fmul   QWORD PTR [edi+0x69009309]
  40d065:	push   esp
  40d066:	cmp    eax,0xfc386bb5
  40d06b:	xor    ebp,edx
  40d06d:	mov    fs:0xe352d97f,al
  40d073:	test   DWORD PTR ds:0xeb2731b6,esp
  40d079:	dec    edi
  40d07a:	lds    esp,FWORD PTR [ebp+0x23]
  40d07d:	dec    eax
  40d07e:	in     al,0x87
  40d080:	xor    BYTE PTR [ecx-0x4b],0xd6
  40d084:	mov    ebp,0xffd93b79
  40d089:	bound  ebp,QWORD PTR [edi]
  40d08b:	inc    ebx
  40d08c:	or     eax,0xef2b2ec2
  40d091:	push   esp
  40d092:	bound  edx,QWORD PTR [eax+0x26f177ff]
  40d098:	call   0xbd6f88bc
  40d09d:	xchg   esp,eax
  40d09e:	cdq    
  40d09f:	fisub  WORD PTR [ebx+edi*2+0x66]
  40d0a3:	fwait
  40d0a4:	sub    bh,bh
  40d0a6:	xor    cl,BYTE PTR [ebx-0x29368e23]
  40d0ac:	bnd jo 0x40d0c1
  40d0af:	dec    edi
  40d0b0:	das    
  40d0b1:	les    esi,FWORD PTR [edi-0x2e]
  40d0b4:	shl    BYTE PTR [esi-0x488dbff3],0x91
  40d0bb:	sub    al,0x14
  40d0bd:	clc    
  40d0be:	bound  ebx,QWORD PTR [edi+0x925799c]
  40d0c4:	out    0x46,eax
  40d0c6:	and    ebx,DWORD PTR [ebp-0x4]
  40d0c9:	out    0x3e,eax
  40d0cb:	fcmovnbe st,st(1)
  40d0cd:	cmp    al,0xb4
  40d0cf:	inc    edx
  40d0d0:	pop    eax
  40d0d1:	push   0x7e
  40d0d3:	popf   
  40d0d4:	nop
  40d0d5:	mov    cl,0xde
  40d0d7:	push   0x3f
  40d0d9:	adc    al,0x6f
  40d0db:	lods   al,BYTE PTR ds:[esi]
  40d0dc:	stos   DWORD PTR es:[edi],eax
  40d0dd:	iret   
  40d0de:	mov    edx,DWORD PTR [ecx*2+0x5815b33d]
  40d0e5:	jl     0x40d0e7
  40d0e7:	jae    0x40d086
  40d0e9:	dec    DWORD PTR [esi+ecx*8]
  40d0ec:	sub    ah,BYTE PTR [edi+0x21941b8f]
  40d0f2:	int    0x7a
  40d0f4:	(bad)  
  40d0f6:	repnz push ss
  40d0f8:	adc    al,0x6a
  40d0fa:	mov    ebx,0xc90bf6d7
  40d0ff:	lea    edi,[edi-0x3c]
  40d102:	pusha  
  40d103:	cdq    
  40d104:	mov    edi,0x89bbb28c
  40d109:	mov    ebx,tr2
  40d10c:	call   0xe44a:0x2ac9c9ea
  40d113:	jo     0x40d129
  40d115:	ds pushw ds
  40d118:	sbb    DWORD PTR [ebx+0x3c75fa94],edx
  40d11e:	mov    bh,0x2e
  40d120:	mov    dh,0x3b
  40d122:	repnz (bad) fs:[edx+0x1d5f9457]
  40d12a:	dec    ecx
  40d12b:	and    eax,0x27b6935f
  40d130:	jb     0x40d165
  40d132:	ror    DWORD PTR [ebx-0xb],cl
  40d135:	push   esp
  40d136:	add    BYTE PTR [ecx+0x40],0x52
  40d13a:	xor    BYTE PTR [esi-0xc],al
  40d13d:	adc    BYTE PTR [ebx-0x40e16eae],cl
  40d143:	fcmovne st,st(3)
  40d145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d146:	mov    edi,0xd3abf220
  40d14b:	test   eax,0x7e04a97f
  40d150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d151:	sub    esp,DWORD PTR [eax-0x6b410294]
  40d157:	pop    ebx
  40d158:	in     eax,dx
  40d159:	call   FWORD PTR [eax]
  40d15b:	cld    
  40d15c:	(bad)  
  40d15d:	fbstp  TBYTE PTR [edi+ecx*1]
  40d160:	xor    ah,BYTE PTR [ecx+ebx*2]
  40d163:	sub    eax,0x2e521570
  40d168:	mov    edi,0xe83c8303
  40d16d:	jno    0x40d143
  40d16f:	pushf  
  40d170:	loope  0x40d0fa
  40d172:	out    0xcd,eax
  40d174:	mov    ch,BYTE PTR [esi+0x8ce5f76]
  40d17a:	dec    eax
  40d17b:	imul   BYTE PTR [ebp+0x6f787fc0]
  40d181:	xchg   ecx,eax
  40d182:	inc    eax
  40d183:	push   esp
  40d184:	dec    edx
  40d185:	sbb    al,al
  40d187:	mov    edi,0x34a78c64
  40d18c:	push   ds
  40d18d:	sbb    al,0x1c
  40d18f:	inc    edi
  40d190:	add    BYTE PTR [edi],cl
  40d192:	mov    cl,0x8d
  40d194:	xchg   ecx,eax
  40d195:	test   BYTE PTR [esi+0x4],al
  40d198:	mov    ds:0x3d68fcf5,al
  40d19d:	call   0xd0e:0x22736f88
  40d1a4:	push   edx
  40d1a5:	mov    esi,0x318ecd7e
  40d1aa:	cmp    DWORD PTR ds:0xdd9a668d,edi
  40d1b0:	jb     0x40d171
  40d1b2:	cmp    DWORD PTR [esi+0x1d],edi
  40d1b5:	outs   dx,BYTE PTR ss:[esi]
  40d1b7:	mov    ds:0x546d613d,eax
  40d1bc:	mov    ds,WORD PTR [ebx+0x1a]
  40d1bf:	ror    eax,1
  40d1c1:	imul   edx,DWORD PTR [ecx*8+0x352d46e8],0xe9ed25c1
  40d1cc:	stc    
  40d1cd:	add    ebp,edi
  40d1cf:	aas    
  40d1d0:	add    eax,0x22ef0461
  40d1d5:	inc    esp
  40d1d6:	cmp    dl,BYTE PTR [ebx+0x41]
  40d1d9:	push   ds
  40d1da:	ret    0x8182
  40d1dd:	jg     0x40d1f2
  40d1df:	fs test cl,bl
  40d1e2:	arpl   WORD PTR [edx-0x20],cx
  40d1e5:	add    cl,0xfa
  40d1e8:	sub    BYTE PTR [ebp+0x5e0c642b],al
  40d1ee:	add    dh,bh
  40d1f0:	xchg   esi,eax
  40d1f1:	xchg   edx,eax
  40d1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f3:	cmp    al,0x85
  40d1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f6:	and    DWORD PTR [edx],esp
  40d1f8:	(bad)  [edi]
  40d1fa:	(bad)  
  40d1fb:	pop    edi
  40d1fc:	out    0x77,al
  40d1fe:	pop    ecx
  40d1ff:	gs test al,0xdf
  40d202:	push   ebp
  40d203:	jmp    0x4278:0xfa97904c
  40d20a:	pusha  
  40d20b:	or     eax,0x4e12d942
  40d210:	pop    esi
  40d211:	(bad)  
  40d212:	sbb    dh,al
  40d214:	shl    DWORD PTR [ebp+0x44],cl
  40d217:	xchg   ebp,eax
  40d218:	lods   al,BYTE PTR ds:[esi]
  40d219:	retf   
  40d21a:	out    dx,al
  40d21b:	sub    BYTE PTR [ecx+eiz*4+0x26b1fdfd],ah
  40d222:	loope  0x40d250
  40d224:	cmp    BYTE PTR [ebx+0x7e],al
  40d227:	ins    BYTE PTR es:[edi],dx
  40d228:	cdq    
  40d229:	or     ax,0x6c4f
  40d22d:	pop    ds
  40d22e:	sar    ebx,0xdb
  40d231:	xchg   ecx,eax
  40d232:	cmc    
  40d233:	jmp    0xdf73cd23
  40d238:	jge    0x40d251
  40d23a:	call   0x205f:0xf0bc8a7b
  40d241:	mov    ebp,0xfe04913b
  40d246:	sub    DWORD PTR [ecx-0x32168f8d],edi
  40d24c:	adc    eax,0x97e4767f
  40d251:	iret   
  40d252:	loopne 0x40d2b1
  40d254:	mov    DWORD PTR [ecx-0x5baeeafb],eax
  40d25a:	and    eax,DWORD PTR [esi+0x359d9b30]
  40d260:	pop    ebx
  40d261:	sbb    eax,0x38ca06f0
  40d266:	mov    bh,BYTE PTR [eax+0x44]
  40d269:	dec    edx
  40d26a:	stc    
  40d26b:	fs add eax,edi
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	add    DWORD PTR [ecx-0x2d6a96d9],edx
  40d302:	add    DWORD PTR [ebx-0x7c7ca318],0x6c
  40d309:	arpl   WORD PTR [eax-0x4e449a7b],sp
  40d30f:	sti    
  40d310:	push   ecx
  40d311:	jb     0x40d2ee
  40d313:	(bad)  
  40d314:	cmp    DWORD PTR [ebx+0x21eb8523],edx
  40d31a:	jge    0x40d2ee
  40d31c:	inc    esi
  40d31d:	leave  
  40d31e:	pop    eax
  40d31f:	adc    bl,0x5c
  40d322:	xor    DWORD PTR [ebx],ebx
  40d324:	jp     0x40d2fd
  40d326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d328:	mov    al,0x4e
  40d32a:	(bad)  
  40d32b:	(bad)  
  40d32c:	out    0x20,al
  40d32e:	cmp    DWORD PTR [eax+0x2b],ebp
  40d331:	inc    edi
  40d332:	push   eax
  40d333:	nop
  40d334:	mov    cl,BYTE PTR [ebp+0x7c]
  40d337:	adc    ah,dl
  40d339:	loopne 0x40d2c6
  40d33b:	dec    BYTE PTR [ebx]
  40d33d:	and    al,0x50
  40d33f:	int3   
  40d340:	test   eax,0xf43ee873
  40d345:	add    al,0xf8
  40d347:	pop    ecx
  40d348:	and    BYTE PTR ds:0xdcefbe81,bh
  40d34e:	adc    al,0x1f
  40d350:	into   
  40d351:	mov    bh,0x2a
  40d353:	pushf  
  40d354:	mov    ds:0xe185508b,al
  40d359:	call   0x96ea:0x2700aee8
  40d360:	add    eax,0x70c2b303
  40d365:	dec    eax
  40d366:	dec    edi
  40d367:	jmp    0x51da6927
  40d36c:	dec    ebx
  40d36d:	and    bh,BYTE PTR [ecx]
  40d36f:	dec    ecx
  40d370:	push   0xd43356fe
  40d375:	outs   dx,DWORD PTR ds:[esi]
  40d376:	pushf  
  40d377:	push   ebx
  40d378:	lods   al,BYTE PTR ds:[esi]
  40d379:	sub    edx,edi
  40d37b:	icebp  
  40d37c:	xor    DWORD PTR [ecx],ecx
  40d37e:	ficomp DWORD PTR [eax-0x2a]
  40d381:	jmp    0x8cf3e7f
  40d386:	sahf   
  40d387:	sub    DWORD PTR [edx+eax*8],ebp
  40d38a:	pop    edx
  40d38b:	out    0xd3,eax
  40d38d:	in     al,0x59
  40d38f:	mov    al,0xa9
  40d391:	shl    DWORD PTR [edi-0x4ab45db],cl
  40d397:	adc    edi,DWORD PTR [esi-0x53a9ad51]
  40d39d:	outs   dx,DWORD PTR ds:[esi]
  40d39e:	xchg   BYTE PTR [ebx+ebx*2-0x7e],dh
  40d3a2:	(bad)  
  40d3a3:	adc    esp,DWORD PTR [eax]
  40d3a5:	iret   
  40d3a6:	test   bl,dl
  40d3a8:	cmp    al,0xb9
  40d3aa:	mov    ebp,0x8c909a84
  40d3af:	mov    cl,0x43
  40d3b1:	clc    
  40d3b2:	adc    ebx,ebx
  40d3b4:	adc    BYTE PTR [edx+eax*2-0x71],ch
  40d3b8:	cmp    ebx,DWORD PTR [eax]
  40d3ba:	jecxz  0x40d3f9
  40d3bc:	sub    al,0x67
  40d3be:	stc    
  40d3bf:	xchg   esi,eax
  40d3c0:	aaa    
  40d3c1:	aad    0x7c
  40d3c3:	mov    eax,0x3564f71e
  40d3c8:	jne    0x40d39f
  40d3ca:	(bad)  
  40d3cb:	mov    ah,0xf8
  40d3cd:	gs cwde 
  40d3cf:	loop   0x40d409
  40d3d1:	adc    bl,BYTE PTR [edx]
  40d3d3:	cdq    
  40d3d4:	loope  0x40d42d
  40d3d6:	cmp    ch,0x47
  40d3d9:	cwde   
  40d3da:	mov    ds:0xdfcb75ab,eax
  40d3df:	out    0xae,eax
  40d3e1:	or     ch,cl
  40d3e3:	retf   0x4011
  40d3e6:	push   cs
  40d3e7:	int    0xee
  40d3e9:	sahf   
  40d3ea:	pop    ebp
  40d3eb:	sub    ecx,DWORD PTR [eax+ecx*2+0x6835a469]
  40d3f2:	in     eax,dx
  40d3f3:	int3   
  40d3f4:	xlat   BYTE PTR ds:[ebx]
  40d3f5:	cmp    ebx,DWORD PTR [eax+0x51]
  40d3f8:	(bad)  
  40d3f9:	loope  0x40d3e4
  40d3fb:	xlat   BYTE PTR ds:[ebx]
  40d3fc:	arpl   di,bx
  40d3fe:	adc    BYTE PTR [ebx],bl
  40d400:	cdq    
  40d401:	push   eax
  40d402:	xor    BYTE PTR [ecx+0x391fdee2],0x22
  40d409:	mov    gs,WORD PTR [ebp+0x256d9a2d]
  40d40f:	sbb    DWORD PTR [ebp+ecx*4+0x74],esp
  40d413:	dec    eax
  40d414:	test   BYTE PTR [eax],0x7c
  40d417:	cdq    
  40d418:	cld    
  40d419:	sub    BYTE PTR [eax-0x64622074],dl
  40d41f:	mov    dl,0x76
  40d421:	mov    dh,0x8a
  40d423:	dec    ebp
  40d424:	and    al,0x90
  40d427:	mov    ecx,0x4f00f94e
  40d42c:	cmc    
  40d42d:	push   ss
  40d42e:	(bad)  
  40d42f:	jmp    0x40d3f9
  40d431:	jg     0x40d406
  40d433:	dec    eax
  40d434:	hlt    
  40d435:	mov    DWORD PTR [ebp-0x66],eax
  40d438:	stos   DWORD PTR es:[edi],eax
  40d439:	imul   edx,esp,0x625ffd87
  40d43f:	pop    esp
  40d440:	or     eax,0xbcc404b8
  40d445:	addr16 jmp 0x40d471
  40d448:	loop   0x40d430
  40d44a:	jp     0x40d459
  40d44c:	ds mov cl,0x52
  40d44f:	cmp    edi,edx
  40d451:	adc    eax,DWORD PTR [edx-0x7b]
  40d454:	add    cl,BYTE PTR [eax-0x5]
  40d457:	sub    ch,cl
  40d459:	jno    0x40d428
  40d45b:	inc    edx
  40d45c:	pusha  
  40d45d:	dec    edx
  40d45e:	xchg   BYTE PTR [esi],ah
  40d460:	hlt    
  40d461:	daa    
  40d462:	stos   BYTE PTR es:[edi],al
  40d463:	mul    DWORD PTR [edi+0x2fa4b3d3]
  40d469:	or     DWORD PTR [esi+0x74957d5c],eax
  40d46f:	nop
  40d470:	cwde   
  40d471:	mov    al,0xc9
  40d473:	js     0x40d3f8
  40d475:	shl    BYTE PTR [ebx-0x30],cl
  40d478:	push   esp
  40d479:	and    BYTE PTR [ebx-0x61],al
  40d47c:	mov    esp,0x58525e6d
  40d481:	aaa    
  40d482:	jecxz  0x40d43f
  40d484:	aas    
  40d485:	adc    BYTE PTR [edx],al
  40d487:	mov    bh,BYTE PTR [edi]
  40d489:	popa   
  40d48a:	mov    edi,0x2350759
  40d48f:	gs in  al,dx
  40d491:	mov    ecx,0x52d3223
  40d496:	pusha  
  40d497:	lods   eax,DWORD PTR ds:[esi]
  40d498:	mov    dh,0x75
  40d49a:	sti    
  40d49b:	hlt    
  40d49c:	fsub   QWORD PTR [eax]
  40d49e:	jmp    0x9779c410
  40d4a3:	call   0x3714:0x79603db3
  40d4aa:	dec    edi
  40d4ab:	jle    0x40d4f9
  40d4ad:	shl    DWORD PTR [ebp-0x689f27ef],1
  40d4b3:	aaa    
  40d4b4:	adc    edi,DWORD PTR [eax-0xd475e0]
  40d4ba:	ret    0x4d9e
  40d4bd:	stos   BYTE PTR es:[edi],al
  40d4be:	ins    BYTE PTR es:[edi],dx
  40d4bf:	test   al,0x1d
  40d4c1:	int    0xf5
  40d4c3:	div    dl
  40d4c5:	inc    edi
  40d4c6:	in     al,0xf5
  40d4c8:	test   DWORD PTR [ecx+esi*2-0x5ea51fdd],esi
  40d4cf:	mov    edx,0x2914ed5d
  40d4d4:	fcom   st(7)
  40d4d6:	pop    ds
  40d4d7:	adc    ch,BYTE PTR [ebx-0x6e]
  40d4da:	call   0xaf1036ff
  40d4df:	mov    eax,ds:0xd239e25c
  40d4e4:	sbb    cl,0x7a
  40d4e7:	dec    BYTE PTR [esi+0x7f0dac51]
  40d4ed:	mov    al,dl
  40d4ef:	mov    esi,eax
  40d4f1:	dec    esi
  40d4f2:	cdq    
  40d4f3:	inc    ebp
  40d4f4:	adc    DWORD PTR [esp+edx*4-0x15447418],ebx
  40d4fb:	mov    dl,0xd3
  40d4fd:	xchg   esp,eax
  40d4fe:	adc    BYTE PTR [ecx+0x3c25bd21],0xe7
  40d505:	in     al,0x83
  40d507:	imul   esp,DWORD PTR [ecx],0x47eca3a8
  40d50d:	test   al,0xd1
  40d50f:	mov    eax,ds:0x9ea59cb
  40d514:	test   edi,eax
  40d516:	push   edi
  40d517:	call   0x717dc5d
  40d51c:	loop   0x40d557
  40d51e:	add    DWORD PTR [ebx+eax*4-0x69f65343],ebx
  40d525:	pop    ss
  40d526:	push   eax
  40d527:	xor    edx,DWORD PTR [edx-0x1b]
  40d52a:	jecxz  0x40d596
  40d52c:	addr16 nop
  40d52e:	scas   al,BYTE PTR es:[edi]
  40d52f:	aad    0x46
  40d531:	es retf 
  40d533:	test   DWORD PTR [eax],eax
  40d535:	xor    ebx,esi
  40d537:	mov    ecx,0x194b67e3
  40d53c:	fs push ss
  40d53e:	addr16 adc ah,bl
  40d541:	dec    eax
  40d542:	mov    al,ds:0x47c7ee2a
  40d547:	mov    ecx,0xaa641c76
  40d54c:	mov    edx,0x43e633c5
  40d551:	mov    WORD PTR [ebx-0x46],ds
  40d554:	lahf   
  40d555:	sbb    al,bl
  40d557:	(bad)  
  40d559:	sub    al,0x15
  40d55b:	pop    edi
  40d55c:	cli    
  40d55d:	and    eax,0xb6aa4249
  40d562:	or     dl,BYTE PTR [esi-0x320c4f3]
  40d568:	xchg   edx,eax
  40d569:	bound  edx,QWORD PTR [edx-0x7271763c]
  40d56f:	sbb    edx,DWORD PTR [esi]
  40d571:	and    al,0x5e
  40d573:	arpl   bx,bp
  40d575:	pop    ecx
  40d576:	aaa    
  40d577:	mov    esp,0xd9f22de7
  40d57c:	ret    
  40d57d:	lock call 0xea24:0xb997a4b8
  40d585:	repz fist DWORD PTR [ebx]
  40d588:	fidivr WORD PTR [edx]
  40d58a:	sbb    ebp,DWORD PTR [ecx]
  40d58c:	mov    dl,0xc0
  40d58e:	cwde   
  40d58f:	clc    
  40d590:	or     eax,0x5e84b051
  40d595:	loop   0x40d59f
  40d597:	fdivr  DWORD PTR [ebp+0x547b0af8]
  40d59d:	fwait
  40d59e:	pusha  
  40d59f:	xchg   ecx,eax
  40d5a0:	mov    bh,BYTE PTR [edi]
  40d5a2:	bnd ja 0x40d5a6
  40d5a5:	in     al,dx
  40d5a6:	popf   
  40d5a7:	lds    edx,FWORD PTR [ebx+0x1f744b1a]
  40d5ad:	inc    edi
  40d5ae:	repz mov edx,0xcfda330f
  40d5b4:	push   0x63555078
  40d5b9:	push   0xffffffbb
  40d5bb:	push   edi
  40d5bc:	sub    eax,0x172aac90
  40d5c1:	push   es
  40d5c2:	ins    BYTE PTR es:[edi],dx
  40d5c3:	xor    BYTE PTR [esi-0x59],bh
  40d5c6:	ret    0x4c96
  40d5c9:	repnz xor BYTE PTR [edx+0x6035231f],ah
  40d5d0:	addr16 adc eax,0xb9b96f7f
  40d5d6:	cdq    
  40d5d7:	je     0x40d61f
  40d5d9:	dec    ecx
  40d5da:	int    0x47
  40d5dc:	and    al,0xcb
  40d5de:	sub    BYTE PTR [esi-0x2c],dl
  40d5e1:	cmp    al,0x8b
  40d5e3:	xor    al,0xf5
  40d5e5:	je     0x40d57b
  40d5e7:	popf   
  40d5e8:	inc    esi
  40d5e9:	sub    edx,DWORD PTR [edx]
  40d5eb:	pop    esi
  40d5ec:	in     al,0x44
  40d5ee:	xlat   BYTE PTR ds:[ebx]
  40d5ef:	out    0x99,eax
  40d5f1:	ds out 0x3b,eax
  40d5f4:	cli    
  40d5f5:	or     DWORD PTR [edx-0x49],ebp
  40d5f8:	js     0x40d642
  40d5fa:	cmp    al,0xcc
  40d5fc:	pop    eax
  40d5fd:	push   ebp
  40d5fe:	sahf   
  40d5ff:	repnz push esi
  40d601:	inc    ecx
  40d602:	and    eax,0x2a4a19ff
  40d607:	xor    ebp,ebp
  40d609:	xchg   ecx,eax
  40d60a:	mov    eax,ebx
  40d60c:	test   eax,0x1f59e338
  40d611:	mov    esp,0x9b0fdbe2
  40d616:	inc    ebp
  40d617:	(bad)  
  40d618:	xchg   ecx,eax
  40d619:	jmp    0x26ea:0x1d5258f0
  40d620:	(bad)  
  40d621:	sbb    eax,0x64326b23
  40d626:	pushw  0x8a44
  40d62a:	fadd   st,st(4)
  40d62c:	xchg   DWORD PTR [ebx-0xc8b7646],esp
  40d632:	dec    edi
  40d633:	and    eax,0x65d39133
  40d638:	jns    0x40d5bc
  40d63a:	jbe    0x40d5ed
  40d63c:	and    DWORD PTR [edi],ecx
  40d63e:	sbb    eax,0x5bc4cbe1
  40d643:	jno    0x40d687
  40d645:	xchg   esi,eax
  40d646:	xchg   ebp,eax
  40d647:	inc    esp
  40d648:	pop    eax
  40d649:	dec    ebp
  40d64a:	das    
  40d64b:	mov    ds:0x496546cf,eax
  40d650:	sbb    al,0x7a
  40d652:	fwait
  40d653:	(bad)  
  40d654:	and    eax,0x2233fcb
  40d659:	push   ecx
  40d65a:	loopne 0x40d610
  40d65c:	xchg   esi,eax
  40d65d:	inc    esi
  40d65e:	fsub   QWORD PTR ds:0xf36bf8e4
  40d664:	das    
  40d665:	in     eax,0xec
  40d667:	adc    ch,BYTE PTR [ebp-0x1d]
  40d66a:	pop    esi
  40d66b:	arpl   WORD PTR [ebp-0x20],ax
  40d66e:	xchg   BYTE PTR [edx+eiz*8],dl
  40d671:	cwde   
  40d672:	into   
  40d673:	call   esp
  40d675:	ror    BYTE PTR [eax+0x2d],cl
  40d678:	inc    ebp
  40d679:	and    BYTE PTR [ecx],ah
  40d67b:	das    
  40d67c:	or     BYTE PTR [ecx],ch
  40d67e:	xchg   edi,eax
  40d67f:	dec    ebp
  40d680:	push   ebx
  40d681:	sub    bh,BYTE PTR [ecx]
  40d683:	in     al,dx
  40d684:	stos   BYTE PTR es:[edi],al
  40d685:	fwait
  40d686:	loope  0x40d624
  40d688:	fwait
  40d689:	add    edx,edi
  40d68b:	push   cs
  40d68c:	mov    ch,0xd5
  40d68e:	cmp    dh,BYTE PTR [edi]
  40d690:	ins    BYTE PTR es:[edi],dx
  40d691:	jo     0x40d66f
  40d693:	int    0xa5
  40d695:	sub    dh,bh
  40d697:	lods   al,BYTE PTR ds:[esi]
  40d698:	pop    ss
  40d699:	addr16 and ch,dh
  40d69c:	pop    ss
  40d69d:	lahf   
  40d69e:	movzx  edi,WORD PTR [eax]
  40d6a1:	(bad)  
  40d6a3:	int    0x46
  40d6a5:	dec    ecx
  40d6a6:	mov    bl,0xe5
  40d6a8:	(bad)  
  40d6a9:	out    dx,al
  40d6aa:	rcl    BYTE PTR [edx+0x12],0xbd
  40d6ae:	scas   al,BYTE PTR es:[edi]
  40d6af:	cwde   
  40d6b0:	adc    BYTE PTR [eax-0x15],al
  40d6b3:	xchg   DWORD PTR [edx-0x3a],edx
  40d6b6:	jp     0x40d6bf
  40d6b8:	js     0x40d702
  40d6ba:	add    DWORD PTR ds:0x5fdd994,edx
  40d6c0:	jecxz  0x40d6c9
  40d6c2:	int3   
  40d6c3:	scas   al,BYTE PTR es:[edi]
  40d6c4:	mov    ebp,0xa8d4abaf
  40d6c9:	retf   
  40d6ca:	xor    eax,0xe8471817
  40d6cf:	inc    ecx
  40d6d0:	jmp    FWORD PTR [ecx-0x3c]
  40d6d3:	call   0xdec466a0
  40d6d8:	mov    ds:0x681109e6,eax
  40d6dd:	lods   eax,DWORD PTR ds:[esi]
  40d6de:	jb     0x40d75f
  40d6e0:	mov    ds:0xbaaf723c,al
  40d6e6:	loope  0x40d706
  40d6e8:	and    ebp,ebp
  40d6ea:	add    eax,0xc9f49973
  40d6ef:	push   ss
  40d6f0:	js     0x40d722
  40d6f2:	shl    DWORD PTR [esi-0x42],0xd0
  40d6f6:	cmovb  eax,DWORD PTR [edi]
  40d6f9:	out    0xeb,eax
  40d6fb:	sti    
  40d6fc:	push   cs
  40d6fd:	test   BYTE PTR [edi+0x36862b97],ch
  40d703:	xchg   ecx,eax
  40d704:	ja     0x40d72f
  40d706:	stos   DWORD PTR es:[edi],eax
  40d707:	shl    al,1
  40d709:	in     eax,dx
  40d70a:	loope  0x40d748
  40d70c:	(bad)  
  40d70e:	test   eax,0x8e44797d
  40d713:	push   ebp
  40d714:	mov    esp,0x4a3c3091
  40d719:	cmp    BYTE PTR [ecx+0x7d],0x58
  40d71d:	daa    
  40d71e:	and    eax,0x114c659b
  40d723:	mov    ds:0x9913acc9,eax
  40d728:	ja     0x40d741
  40d72a:	mov    ecx,DWORD PTR [edx]
  40d72c:	in     eax,dx
  40d72d:	mov    ch,0xb4
  40d72f:	jge    0x40d6d4
  40d731:	jmp    DWORD PTR [ebx-0x6a]
  40d734:	push   eax
  40d735:	add    dl,BYTE PTR [eax+0xc]
  40d738:	in     eax,0xa9
  40d73a:	hlt    
  40d73b:	pop    ecx
  40d73c:	xor    eax,0x392b6045
  40d741:	inc    ebp
  40d742:	in     al,0xbb
  40d744:	jl     0x40d7ae
  40d746:	or     ch,BYTE PTR [ecx+ecx*4]
  40d749:	or     BYTE PTR [ecx+0x1c],dh
  40d74c:	push   edx
  40d74d:	fsubr  st(1),st
  40d74f:	pop    ss
  40d750:	and    ebx,esi
  40d752:	dec    ebp
  40d753:	call   0xd4a256dc
  40d758:	(bad)  
  40d75a:	addr16 and al,0x6
  40d75d:	xchg   esp,eax
  40d75e:	lds    edx,FWORD PTR [ebp+eax*4+0x5ef4f59a]
  40d765:	sub    eax,0x340bd881
  40d76a:	gs leave 
  40d76c:	iret   
  40d76d:	lds    ebp,FWORD PTR [esi+eiz*1]
  40d770:	mov    bh,BYTE PTR [eax+0x0]
  40d773:	or     bh,bh
  40d775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d776:	mov    edi,0xc33dfe98
  40d77b:	(bad)  
  40d77c:	push   0x25097c1d
  40d781:	(bad)  [edx]
  40d783:	fldenv [ebp+eiz*4-0x702f6b6b]
  40d78a:	adc    eax,0x4004a002
  40d78f:	xor    DWORD PTR [edx-0x79],0xb95eab24
  40d796:	jno    0x40d71c
  40d798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d799:	cmc    
  40d79a:	into   
  40d79b:	sub    BYTE PTR [ebx+0x6a],0x64
  40d79f:	push   0xd642445e
  40d7a4:	push   es
  40d7a5:	test   BYTE PTR [ecx+0x12d59a86],cl
  40d7ab:	sbb    DWORD PTR [ecx],esi
  40d7ad:	sbb    dl,BYTE PTR [edi+ecx*8]
  40d7b0:	sub    ebx,DWORD PTR [ebx+0x65e49d4c]
  40d7b6:	retf   0x4a59
  40d7b9:	pop    ecx
  40d7ba:	hlt    
  40d7bb:	push   edx
  40d7bc:	out    dx,al
  40d7bd:	cld    
  40d7be:	pop    ecx
  40d7bf:	lds    ebp,FWORD PTR [esi]
  40d7c1:	sub    al,0xdb
  40d7c3:	ret    0x1c11
  40d7c6:	cdq    
  40d7c7:	call   0xdf1b:0x83628b3b
  40d7ce:	in     eax,dx
  40d7cf:	pop    esi
  40d7d0:	dec    esp
  40d7d1:	pushf  
  40d7d2:	push   edx
  40d7d3:	dec    edi
  40d7d4:	pop    edx
  40d7d5:	loop   0x40d83c
  40d7d7:	repnz scas eax,DWORD PTR es:[edi]
  40d7d9:	cwde   
  40d7da:	lock mov dl,0x27
  40d7dd:	or     BYTE PTR [esi+esi*2+0x282306e0],dl
  40d7e4:	jge    0x40d807
  40d7e6:	enter  0xf40,0x1c
  40d7ea:	bound  ecx,QWORD PTR [esi+esi*4]
  40d7ed:	dec    eax
  40d7ee:	or     ebx,esi
  40d7f0:	(bad)  
  40d7f1:	ror    BYTE PTR [esi+0x3a3da39d],1
  40d7f7:	xchg   ecx,eax
  40d7f8:	sub    DWORD PTR [edi],0x10
  40d7fb:	cli    
  40d7fc:	stos   DWORD PTR es:[edi],eax
  40d7fd:	call   0xaf10c28a
  40d802:	fild   WORD PTR [eax+0x78]
  40d805:	cs imul edx,edx,0x7d
  40d809:	cdq    
  40d80a:	shr    DWORD PTR [esi-0x2bd4157c],cl
  40d810:	loop   0x40d834
  40d812:	cdq    
  40d813:	cmp    esi,DWORD PTR [esi+eiz*4+0x67910159]
  40d81a:	fcom   QWORD PTR [edi+0x6461e200]
  40d820:	xchg   ecx,eax
  40d821:	ss retf 
  40d823:	sub    bl,BYTE PTR [edx-0x2cf9d7b8]
  40d829:	pop    ecx
  40d82a:	pusha  
  40d82b:	rcr    esp,cl
  40d82d:	stc    
  40d82e:	aas    
  40d82f:	inc    ecx
  40d830:	add    ah,BYTE PTR [eax+0x6c4eecdd]
  40d836:	mov    es,WORD PTR ds:0x8168181a
  40d83c:	mov    cl,0x93
  40d83e:	aaa    
  40d83f:	cmp    al,0x2
  40d841:	arpl   bp,dx
  40d843:	fcmove st,st(5)
  40d845:	popf   
  40d846:	out    dx,al
  40d847:	aas    
  40d848:	lods   eax,DWORD PTR ds:[esi]
  40d849:	add    cl,cl
  40d84b:	inc    esp
  40d84c:	shr    al,0x38
  40d84f:	pop    edx
  40d850:	and    edi,DWORD PTR [ebx+eiz*2-0x61]
  40d854:	(bad)  
  40d855:	cmp    al,0x4b
  40d857:	(bad)  
  40d859:	xor    eax,0x8feb8288
  40d85e:	dec    esi
  40d85f:	aam    0x8b
  40d861:	aas    
  40d862:	call   0x545:0x12c9924d
  40d869:	aaa    
  40d86a:	mov    al,0x8f
  40d86c:	test   al,0x31
  40d86e:	repnz pop es
  40d870:	and    al,BYTE PTR [edx]
  40d872:	mov    cl,0xc6
  40d874:	jl     0x40d806
  40d876:	or     BYTE PTR [edx],bl
  40d878:	add    eax,0x1f9ad756
  40d87d:	hlt    
  40d87e:	mov    al,ds:0x4e3d730a
  40d883:	fmul   st,st(0)
  40d885:	out    dx,al
  40d886:	push   cs
  40d887:	sub    al,0xb0
  40d889:	pushf  
  40d88a:	cmp    cl,ah
  40d88c:	cld    
  40d88d:	push   0xffffff9d
  40d88f:	shl    DWORD PTR [esi-0x74],cl
  40d892:	pushf  
  40d893:	push   0x1495c200
  40d898:	cs push edx
  40d89a:	dec    edi
  40d89b:	jl     0x40d850
  40d89d:	mov    dl,0x87
  40d89f:	call   0xf007:0x82188c75
  40d8a6:	lea    eax,[ebx+0xa]
  40d8a9:	push   0xdf410463
  40d8ae:	icebp  
  40d8af:	outs   dx,DWORD PTR ds:[esi]
  40d8b0:	xor    al,0xd5
  40d8b2:	fisttp DWORD PTR [ecx-0x5e5ff6bf]
  40d8b8:	pop    esi
  40d8b9:	pusha  
  40d8ba:	sbb    edi,DWORD PTR [bp+di-0x66]
  40d8be:	mov    ebp,0x390c397
  40d8c3:	outs   dx,DWORD PTR ds:[esi]
  40d8c4:	jecxz  0x40d878
  40d8c6:	out    0x35,al
  40d8c8:	cdq    
  40d8c9:	mov    al,ds:0x6f8c64fa
  40d8ce:	test   edi,eax
  40d8d0:	inc    esp
  40d8d1:	push   esp
  40d8d2:	inc    esp
  40d8d3:	sbb    al,0xde
  40d8d5:	je     0x40d87c
  40d8d7:	arpl   WORD PTR [edi-0xf],ax
  40d8da:	iret   
  40d8db:	scas   eax,DWORD PTR es:[edi]
  40d8dc:	inc    ebx
  40d8dd:	mov    eax,ds:0x64834784
  40d8e2:	or     BYTE PTR [ebp+0x45],cl
  40d8e5:	idiv   BYTE PTR [eax]
  40d8e7:	loop   0x40d88f
  40d8e9:	jbe    0x40d892
  40d8eb:	les    edx,FWORD PTR [ebp+eiz*1+0x2c]
  40d8ef:	les    eax,FWORD PTR [edx+edi*1-0x5d]
  40d8f3:	pusha  
  40d8f4:	lahf   
  40d8f5:	into   
  40d8f6:	cmp    BYTE PTR [edi-0x76be2ad],al
  40d8fc:	add    ebp,DWORD PTR [edi]
  40d8fe:	jle    0x40d954
  40d900:	push   edx
  40d901:	dec    edi
  40d902:	xor    ebp,DWORD PTR [esi+eax*2]
  40d905:	cs std 
  40d907:	inc    edi
  40d908:	test   BYTE PTR [eax+edx*4-0x3f],bl
  40d90c:	shl    BYTE PTR ds:0x41dec9d9,1
  40d912:	das    
  40d913:	adc    al,0xf1
  40d915:	ins    DWORD PTR es:[edi],dx
  40d916:	mov    BYTE PTR [esi-0xf],dl
  40d919:	(bad)  
  40d91a:	pusha  
  40d91b:	mov    edx,0x23d0b1ed
  40d920:	jne    0x40d8ca
  40d922:	mov    ebx,0xb3c1dbd4
  40d927:	adc    al,0xe7
  40d929:	inc    ebp
  40d92a:	push   edi
  40d92b:	pop    ecx
  40d92c:	jmp    DWORD PTR [edx-0x3501246b]
  40d932:	(bad)  
  40d933:	push   edi
  40d934:	dec    ebp
  40d935:	xchg   WORD PTR [eax+ebp*8-0x286b1382],ax
  40d93d:	sbb    edx,DWORD PTR [ebp+eax*4+0x297c0d58]
  40d944:	pusha  
  40d945:	in     al,0x43
  40d947:	jle    0x40d938
  40d949:	dec    ebx
  40d94a:	adc    DWORD PTR [esp+eax*8],ecx
  40d94d:	mov    edx,0x9d498149
  40d952:	rol    DWORD PTR [esi+edx*8+0x1b91cc2c],0x1d
  40d95a:	xchg   DWORD PTR [ebp+0x5ef5ec2a],esp
  40d960:	mov    dh,0x37
  40d962:	inc    edx
  40d963:	fwait
  40d964:	jne    0x40d9ab
  40d966:	mov    eax,ds:0x1863e13
  40d96b:	mov    al,0x5e
  40d96d:	pop    edx
  40d96e:	jno    0x40d9cb
  40d970:	repnz ds mov dl,0xb
  40d974:	xchg   DWORD PTR cs:[ebx+0x74],ebp
  40d978:	imul   ecx,esi,0x12d58da6
  40d97e:	out    dx,al
  40d97f:	retf   0xaea0
  40d982:	popa   
  40d983:	lea    esi,[edi-0x4179a55e]
  40d989:	xlat   BYTE PTR ds:[ebx]
  40d98a:	dec    ebp
  40d98b:	jmp    0x40d961
  40d98d:	in     eax,dx
  40d98e:	pushf  
  40d98f:	mov    al,0x68
  40d991:	mov    edi,0x820d439f
  40d996:	cs mov ebp,0x2bc1fb31
  40d99c:	(bad)  [ebx+0x51]
  40d99f:	pusha  
  40d9a0:	cmp    ebp,esi
  40d9a2:	arpl   cx,ax
  40d9a4:	xchg   ebx,eax
  40d9a5:	mov    ds:0xc73ee4e4,al
  40d9aa:	fs cmp al,0x19
  40d9ad:	push   ecx
  40d9ae:	cmc    
  40d9af:	push   0x3e35c067
  40d9b4:	dec    ebp
  40d9b5:	fild   QWORD PTR [edx+0x5c5cf8b1]
  40d9bb:	jbe    0x40da12
  40d9bd:	push   ecx
  40d9be:	cwde   
  40d9bf:	cmp    edi,ebp
  40d9c1:	enter  0xa889,0xd9
  40d9c5:	mov    esp,ebp
  40d9c7:	push   edx
  40d9c8:	add    bh,BYTE PTR [edi+esi*1]
  40d9cb:	pop    eax
  40d9cc:	jnp    0x40da45
  40d9ce:	xor    al,0xb
  40d9d0:	jne    0x40da00
  40d9d2:	inc    ebx
  40d9d3:	cld    
  40d9d4:	lock into 
  40d9d6:	jl     0x40d999
  40d9d8:	jg     0x40da49
  40d9da:	mov    dl,BYTE PTR [ebx+0x7bb86a10]
  40d9e0:	ret    
  40d9e1:	cmp    DWORD PTR [ebx],ecx
  40d9e3:	sub    BYTE PTR [edx-0x3d],bl
  40d9e6:	int    0xe8
  40d9e8:	cmp    dl,BYTE PTR [ebx-0x7b]
  40d9eb:	jbe    0x40d99b
  40d9ed:	sbb    DWORD PTR [ebx+ebp*8+0x41b6578c],ecx
  40d9f4:	push   esi
  40d9f5:	rol    ebx,1
  40d9f7:	pop    ds
  40d9f8:	stos   BYTE PTR es:[edi],al
  40d9f9:	pop    edx
  40d9fa:	dec    esi
  40d9fb:	pop    ds
  40d9fc:	pushf  
  40d9fd:	adc    eax,0xe368cd1d
  40da02:	adc    eax,esi
  40da04:	popa   
  40da05:	dec    ebx
  40da06:	idiv   DWORD PTR [esi-0x50b3237b]
  40da0c:	jl     0x40da52
  40da0e:	ins    DWORD PTR es:[edi],dx
  40da0f:	jmp    0xb460:0x44ec92e1
  40da16:	sahf   
  40da17:	jp     0x40da27
  40da19:	mov    bl,BYTE PTR ds:0xc9c98940
  40da1f:	ret    0x317d
  40da22:	inc    edi
  40da23:	or     eax,DWORD PTR [ebx+0x2349b778]
  40da29:	sbb    DWORD PTR [ebx],ebp
  40da2b:	mov    ch,BYTE PTR [ebx+esi*8]
  40da2e:	jne    0x40da30
  40da30:	test   al,0x1e
  40da32:	stos   DWORD PTR es:[edi],eax
  40da33:	nop
  40da34:	enter  0xc5f8,0x92
  40da38:	not    esi
  40da3a:	xchg   DWORD PTR [edx-0x45],ebp
  40da3d:	in     eax,dx
  40da3e:	push   edx
  40da3f:	adc    ebx,DWORD PTR [edi+0x3a3f7efb]
  40da45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da46:	pop    ecx
  40da47:	push   ebp
  40da48:	lahf   
  40da49:	imul   edi,DWORD PTR [esi-0x4d],0x51
  40da4d:	sbb    ebx,esi
  40da4f:	jmp    0x3e57:0xd3191cef
  40da56:	or     DWORD PTR [edx+eax*8],eax
  40da59:	cmp    al,0xab
  40da5b:	jecxz  0x40dabe
  40da5d:	cs retf 
  40da5f:	das    
  40da60:	mov    ebp,DWORD PTR [edi+eiz*2]
  40da63:	cmp    DWORD PTR [esi-0x59],edi
  40da66:	mov    esi,0x2d243b95
  40da6b:	shl    DWORD PTR [edi-0x17],cl
  40da6e:	xchg   ecx,eax
  40da6f:	jo     0x40da56
  40da71:	test   BYTE PTR [ebx+0x50],0x99
  40da75:	jge    0x40da8c
  40da77:	fsub   QWORD PTR [edi]
  40da79:	push   cs
  40da7a:	dec    esi
  40da7b:	(bad)  
  40da7c:	jge    0x40da4d
  40da7e:	stos   BYTE PTR es:[edi],al
  40da7f:	jbe    0x40da9b
  40da81:	addr16 pusha 
  40da83:	xchg   esp,eax
  40da84:	fisttp QWORD PTR [ebp+eax*4-0x3d]
  40da88:	xor    eax,DWORD PTR [eax+ecx*8-0x855ac2]
  40da8f:	dec    ebx
  40da90:	outs   dx,BYTE PTR ds:[esi]
  40da91:	aam    0x69
  40da93:	sub    BYTE PTR [ecx+0xe1d293f],bh
  40da99:	and    dl,BYTE PTR [edi+0x5998c08e]
  40da9f:	dec    DWORD PTR [ecx]
  40daa1:	xlat   BYTE PTR ds:[ebx]
  40daa2:	stc    
  40daa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa4:	pop    ss
  40daa5:	pop    edi
  40daa6:	add    ebp,esp
  40daa8:	mov    ah,0x33
  40daaa:	pop    ebp
  40daab:	mov    ah,0x97
  40daad:	cli    
  40daae:	sbb    eax,0x64cfe26d
  40dab3:	xor    ecx,DWORD PTR [edi+0x9]
  40dab6:	rol    BYTE PTR [eax],cl
  40dab8:	imul   esp,esp,0x5e
  40dabb:	scas   al,BYTE PTR es:[edi]
  40dabc:	add    eax,0xcb788e14
  40dac1:	fs pop edi
  40dac3:	test   BYTE PTR [edx],bh
  40dac5:	xlat   BYTE PTR ds:[ebx]
  40dac6:	push   eax
  40dac7:	push   edx
  40dac8:	and    al,0x65
  40daca:	std    
  40dacb:	add    esp,ebx
  40dacd:	into   
  40dace:	cli    
  40dacf:	or     bl,dh
  40dad1:	or     BYTE PTR [edx+0x4a7b25b5],bl
  40dad7:	add    eax,0x4ec82f4b
  40dadc:	test   eax,0xe4f95012
  40dae1:	and    BYTE PTR [esi+0x374f8cef],ah
  40dae7:	sti    
  40dae8:	fcom   QWORD PTR [esi]
  40daea:	fcomp  st(2)
  40daec:	pushf  
  40daed:	pushf  
  40daee:	and    al,BYTE PTR [ecx+0x4c1dc9df]
  40daf4:	gs dec edi
  40daf6:	jne    0x40dad3
  40daf8:	and    al,0xfe
  40dafa:	mov    BYTE PTR [edx+0x55],ah
  40dafd:	pop    eax
  40dafe:	cmp    al,0x52
  40db00:	xor    al,0x6d
  40db02:	pop    edx
  40db03:	mov    bh,BYTE PTR [ebx-0x5d]
  40db06:	rol    BYTE PTR [ebx+0x37c94c9f],1
  40db0c:	lock scas al,BYTE PTR es:[edi]
  40db0e:	(bad)  
  40db0f:	or     edx,DWORD PTR [ecx+ebp*2]
  40db12:	push   esp
  40db13:	inc    edi
  40db14:	jle    0x40db0b
  40db16:	mov    edx,0x6c0e56c
  40db1b:	out    0x1a,eax
  40db1d:	inc    esi
  40db1e:	dec    eax
  40db1f:	es sbb eax,0x5a003735
  40db25:	adc    al,0x10
  40db27:	mov    bh,0x4b
  40db29:	mov    dh,0x1a
  40db2b:	(bad)  
  40db2c:	cdq    
  40db2d:	jno    0x40dba1
  40db2f:	lahf   
  40db30:	mov    ds:0x97cb78c5,al
  40db35:	popf   
  40db36:	add    al,0xae
  40db38:	cmc    
  40db39:	jp     0x40db80
  40db3b:	add    BYTE PTR [esi+0x651f72db],ah
  40db41:	xor    DWORD PTR [ebx+0x6fd6da5],ebx
  40db47:	adc    eax,0x7671674e
  40db4c:	xchg   esi,eax
  40db4d:	std    
  40db4e:	cmp    ah,BYTE PTR [esi+0x391372a9]
  40db54:	jp     0x40db96
  40db56:	pop    esi
  40db57:	add    al,ch
  40db59:	pop    edx
  40db5a:	(bad)  
  40db5c:	outs   dx,BYTE PTR ds:[esi]
  40db5d:	les    ebx,FWORD PTR [edi-0x10]
  40db60:	pop    ebp
  40db61:	push   cs
  40db62:	mov    DWORD PTR [ebx-0x11],edx
  40db65:	push   ss
  40db66:	xchg   BYTE PTR [ebx],dl
  40db68:	inc    edi
  40db69:	mov    ecx,0xa8588865
  40db6e:	sbb    edi,DWORD PTR [ebx-0xe]
  40db71:	cli    
  40db72:	aaa    
  40db73:	xchg   DWORD PTR [edx+0x20d308a3],ecx
  40db79:	jae    0x40dbf6
  40db7b:	fcmove st,st(7)
  40db7d:	and    DWORD PTR [ebp-0x28b6b245],esi
  40db83:	and    al,0x4f
  40db85:	mov    al,0x72
  40db87:	add    al,0x17
  40db89:	dec    ebx
  40db8a:	xchg   ebp,eax
  40db8b:	sbb    al,0x39
  40db8d:	jnp    0x40db84
  40db8f:	pushf  
  40db90:	clc    
  40db91:	shl    DWORD PTR [edx],1
  40db93:	rol    DWORD PTR [ecx-0x6b],0xc7
  40db97:	sbb    BYTE PTR [ecx],ch
  40db99:	inc    edx
  40db9a:	enter  0x618f,0xa6
  40db9e:	jns    0x40dbc6
  40dba0:	jno    0x40db64
  40dba2:	mov    esi,0x208c725a
  40dba7:	das    
  40dba8:	push   0x64
  40dbaa:	sbb    edx,eax
  40dbac:	fstp   QWORD PTR [ecx-0x4f]
  40dbaf:	mov    ebx,0x708d0ce
  40dbb4:	jge    0x40db4e
  40dbb6:	sub    DWORD PTR [ebx+edi*1+0x69],edi
  40dbba:	pusha  
  40dbbb:	or     esi,DWORD PTR [edi-0x6b25c13]
  40dbc1:	add    BYTE PTR [eax+esi*1-0x7d],al
  40dbc5:	xor    ah,BYTE PTR [esi-0x250add2]
  40dbcb:	lods   al,BYTE PTR ds:[esi]
  40dbcc:	in     eax,dx
  40dbcd:	shl    dl,0x89
  40dbd0:	mov    al,ds:0xf07b510a
  40dbd5:	bound  edx,QWORD PTR [ebx-0x6e]
  40dbd8:	pop    ss
  40dbd9:	fwait
  40dbda:	jo     0x40dc2a
  40dbdc:	loope  0x40db9b
  40dbde:	pop    ss
  40dbdf:	iret   
  40dbe0:	pop    ds
  40dbe1:	xor    DWORD PTR [edx+eax*8],esp
  40dbe4:	in     al,0x21
  40dbe6:	pop    eax
  40dbe7:	daa    
  40dbe8:	mov    ds:0x41f08cd9,al
  40dbed:	xchg   edx,eax
  40dbee:	sbb    BYTE PTR [ebp+eax*1+0x26],al
  40dbf2:	retf   
  40dbf3:	loopne 0x40dc6f
  40dbf5:	inc    ebx
  40dbf6:	xchg   esp,eax
  40dbf7:	sub    DWORD PTR [esi-0x7a67a99a],ecx
  40dbfd:	inc    eax
  40dbfe:	sub    esp,DWORD PTR [edx+esi*8]
  40dc01:	mov    bh,0x76
  40dc03:	inc    edi
  40dc04:	arpl   WORD PTR [eax+eax*8-0x15e22912],ax
  40dc0b:	adc    al,0xe1
  40dc0d:	(bad)  
  40dc0e:	clc    
  40dc0f:	into   
  40dc10:	scas   al,BYTE PTR es:[edi]
  40dc11:	and    dl,BYTE PTR fs:[ecx+0x49c12b1b]
  40dc18:	in     eax,0x58
  40dc1a:	call   0x919a:0x18dc215f
  40dc21:	push   edi
  40dc22:	les    edx,FWORD PTR [ebp-0x48a68c4a]
  40dc28:	mov    al,0xee
  40dc2a:	xor    al,0xc5
  40dc2c:	dec    esp
  40dc2d:	mov    al,ds:0x952669cb
  40dc32:	add    edx,ebp
  40dc34:	mov    dh,BYTE PTR [ebx+0x26]
  40dc37:	sub    bl,BYTE PTR [ebx-0x7b43f730]
  40dc3d:	cwde   
  40dc3e:	xor    al,0x94
  40dc40:	mov    WORD PTR [ecx+0x74734d46],cs
  40dc46:	mov    eax,ds:0x9a2552f0
  40dc4b:	jmp    0xc2985953
  40dc50:	add    al,BYTE PTR [ecx+eax*1+0x62]
  40dc54:	add    ebx,DWORD PTR [esi+0x1c7a075f]
  40dc5a:	mov    esi,esp
  40dc5c:	and    esp,DWORD PTR [edx+0x794a843b]
  40dc62:	in     eax,0x62
  40dc64:	pop    ecx
  40dc65:	aas    
  40dc66:	xchg   DWORD PTR [ecx+eiz*8],ecx
  40dc69:	sbb    esp,DWORD PTR [ebp+eiz*1+0x6bf3c42c]
  40dc70:	add    esp,DWORD PTR [edx-0x44]
  40dc73:	call   0x9d6c:0x975f91bf
  40dc7a:	inc    ebp
  40dc7b:	add    DWORD PTR [edi-0x3b6c0a01],ebx
  40dc81:	cs ret 0xa4ca
  40dc85:	sub    ch,BYTE PTR [edi]
  40dc87:	and    dh,BYTE PTR [eax+0x25]
  40dc8a:	retf   
  40dc8b:	outs   dx,BYTE PTR ds:[esi]
  40dc8c:	push   ds
  40dc8d:	dec    ebp
  40dc8e:	jmp    0x8514:0x5e560b30
  40dc95:	cld    
  40dc96:	sub    ah,bh
  40dc98:	rcl    ebx,cl
  40dc9a:	nop
  40dc9b:	shr    DWORD PTR cs:[edx],0x1a
  40dc9f:	shl    DWORD PTR [ebx-0x327058ba],cl
  40dca5:	enter  0x5be0,0x3b
  40dca9:	pushf  
  40dcaa:	mov    dl,BYTE PTR [edi-0x7424a5b]
  40dcb0:	aas    
  40dcb1:	push   ebp
  40dcb2:	mov    bh,0xde
  40dcb4:	aas    
  40dcb5:	sub    BYTE PTR [edx-0x4],bl
  40dcb8:	mov    edx,0xc34134e3
  40dcbd:	inc    esp
  40dcbe:	pop    esp
  40dcbf:	add    edx,edi
  40dcc1:	loop   0x40dc9b
  40dcc3:	and    eax,0xbb1ed659
  40dcc8:	popa   
  40dcc9:	sbb    al,0x98
  40dccb:	xchg   DWORD PTR [esi],ebp
  40dccd:	cmp    BYTE PTR [edx+0x7c],dl
  40dcd0:	test   BYTE PTR [edx+ebp*1],dh
  40dcd3:	repz or DWORD PTR [edx-0x14d37f7c],0x3177212e
  40dcde:	sbb    ah,BYTE PTR [eax]
  40dce0:	inc    eax
  40dce1:	cwde   
  40dce2:	mov    ebp,DWORD PTR [ebp+0x75]
  40dce5:	xchg   esi,eax
  40dce6:	popf   
  40dce7:	xchg   edx,eax
  40dce8:	sub    esi,esi
  40dcea:	add    esp,DWORD PTR [ebp+0x7d]
  40dced:	mov    al,0xe6
  40dcef:	rcl    DWORD PTR [edi+ebp*4+0x3152adcf],1
  40dcf6:	xchg   ecx,eax
  40dcf7:	xchg   ebx,eax
  40dcf8:	xchg   DWORD PTR [ecx-0x70],edx
  40dcfb:	(bad)  
  40dcfc:	popa   
  40dcfd:	hlt    
  40dcfe:	cmp    bh,BYTE PTR [edx+0x5c9c8f52]
  40dd04:	cwde   
  40dd05:	in     al,dx
  40dd06:	addr16 mov al,0x67
  40dd09:	dec    edx
  40dd0a:	adc    ch,BYTE PTR [ecx+0x6950e5d5]
  40dd10:	in     eax,0xcc
  40dd12:	mov    ebp,0x6dccb2a8
  40dd17:	lds    esp,FWORD PTR [ebp+0x5b]
  40dd1a:	rol    DWORD PTR [eax],cl
  40dd1c:	retf   
  40dd1d:	cmp    edx,eax
  40dd1f:	or     esi,esi
  40dd21:	out    0x31,eax
  40dd23:	jmp    DWORD PTR [edx]
  40dd25:	or     eax,0xb86d24c3
  40dd2a:	clc    
  40dd2b:	inc    esp
  40dd2c:	mov    eax,ds:0x26b34318
  40dd31:	adc    bl,dh
  40dd33:	xchg   bh,al
  40dd35:	fwait
  40dd36:	jg     0x40dd04
  40dd38:	ret    
  40dd39:	pop    esp
  40dd3b:	mov    cl,0x31
  40dd3d:	loopne 0x40dcde
  40dd3f:	add    al,0xbe
  40dd41:	or     cl,bh
  40dd43:	test   al,0x71
  40dd45:	and    esp,esp
  40dd47:	dec    ebp
  40dd48:	mov    cl,0xfb
  40dd4a:	enter  0xe89a,0xa4
  40dd4e:	cmp    eax,0xe4c0c2c6
  40dd53:	in     al,dx
  40dd54:	and    al,BYTE PTR [ebp+0x47]
  40dd57:	mov    dh,BYTE PTR [eax+0x1c]
  40dd5a:	adc    al,0xdd
  40dd5c:	inc    esi
  40dd5d:	pop    es
  40dd5e:	mov    ebx,0xff1d6e52
  40dd63:	mov    bl,0x3
  40dd65:	push   ebx
  40dd66:	inc    esp
  40dd67:	cdq    
  40dd68:	imul   esi,DWORD PTR ss:[ebx-0x20dd31a1],0x162430fc
  40dd73:	add    DWORD PTR [edx+0x18],edi
  40dd76:	pop    ebp
  40dd77:	xchg   BYTE PTR [ecx-0x4ad015be],ch
  40dd7d:	adc    BYTE PTR [esi-0x532396e4],0xf3
  40dd84:	pop    esp
  40dd85:	fiadd  WORD PTR [eax+0x78]
  40dd88:	imul   ebx,ebp,0x9312c67e
  40dd8e:	ins    DWORD PTR es:[edi],dx
  40dd8f:	fadd   st,st(2)
  40dd91:	inc    ecx
  40dd92:	adc    al,BYTE PTR [eax+0x7c]
  40dd95:	xchg   DWORD PTR [ecx+edi*8-0x61f29f48],eax
  40dd9c:	fincstp 
  40dd9e:	add    ebp,DWORD PTR [ebp+0x48357d6a]
  40dda4:	pop    eax
  40dda5:	(bad)  
  40dda6:	sub    DWORD PTR [ecx],esi
  40dda8:	popa   
  40dda9:	push   esi
  40ddaa:	fidivr WORD PTR [esi]
  40ddac:	nop
  40ddad:	imul   edi,DWORD PTR ds:0x9170d94f,0x46057b09
  40ddb7:	dec    ebp
  40ddb8:	jmp    DWORD PTR [esi+eiz*2+0x36]
  40ddbc:	subps  xmm1,XMMWORD PTR [edx+eiz*1+0x5d]
  40ddc1:	mov    dx,0x7bce
  40ddc5:	fs jnp 0x40de2c
  40ddc8:	or     esp,DWORD PTR [eax]
  40ddca:	cmp    edi,esi
  40ddcc:	retf   
  40ddcd:	pop    esp
  40ddce:	repz adc DWORD PTR [ecx-0x5],0xffffffd6
  40ddd3:	pop    ecx
  40ddd4:	xchg   edi,eax
  40ddd5:	les    eax,FWORD PTR [ebx-0x349a86e1]
  40dddb:	(bad)  
  40dddc:	or     al,0xde
  40ddde:	mov    edi,0x37a893ac
  40dde3:	popf   
  40dde4:	jno    0x40dd92
  40dde6:	pop    ebx
  40dde7:	daa    
  40dde8:	iret   
  40dde9:	pop    esi
  40ddea:	cwde   
  40ddeb:	in     al,dx
  40ddec:	mov    eax,ds:0x39c90ba
  40ddf1:	loope  0x40de20
  40ddf3:	pop    ss
  40ddf4:	cmp    BYTE PTR ds:0x497870c1,cl
  40ddfa:	adc    al,0x9c
  40ddfc:	test   al,0xcd
  40ddfe:	jge    0x40de70
  40de00:	inc    eax
  40de02:	iret   
  40de03:	and    eax,0x1f9ebc06
  40de08:	xchg   esi,eax
  40de09:	add    ebp,DWORD PTR [ecx+esi*1-0x4f831762]
  40de10:	xchg   DWORD PTR [ecx+edx*2],ebp
  40de13:	mov    ds:0x31107488,al
  40de18:	(bad)
  40de1d:	arpl   cx,si
  40de1f:	xchg   ecx,eax
  40de20:	pop    edi
  40de21:	aas    
  40de22:	push   cs
  40de23:	ins    DWORD PTR es:[edi],dx
  40de24:	shl    edi,cl
  40de26:	mov    ecx,0x789874a9
  40de2b:	sub    eax,0x5be307d5
  40de30:	jns    0x40de15
  40de32:	jno    0x40de94
  40de34:	dec    edx
  40de35:	arpl   WORD PTR [ebx],bp
  40de37:	sbb    dl,BYTE PTR ds:0xc8b2a26a
  40de3d:	jle    0x40de91
  40de3f:	popa   
  40de40:	jne    0x40de5a
  40de42:	or     eax,0x62c69100
  40de47:	dec    edi
  40de48:	call   0x3516c2
  40de4d:	sbb    al,0xfd
  40de4f:	sbb    dh,BYTE PTR [eax+0x44eb90ac]
  40de55:	xchg   ecx,eax
  40de56:	test   al,0xb5
  40de58:	cmp    al,0xcf
  40de5a:	in     eax,dx
  40de5b:	xor    DWORD PTR [edi],ebp
  40de5d:	pushf  
  40de5e:	cli    
  40de5f:	ja     0x40de85
  40de61:	call   0xf2fa070f
  40de66:	xchg   esi,eax
  40de67:	or     ch,cl
  40de69:	xor    BYTE PTR [edi-0x4c],ch
  40de6c:	mov    ch,0xea
  40de6e:	adc    ebp,DWORD PTR [eax-0x3a4c4900]
  40de74:	xchg   edi,eax
  40de75:	xchg   edx,eax
  40de76:	push   eax
  40de77:	lods   al,BYTE PTR ds:[esi]
  40de78:	sub    DWORD PTR [esp+eax*1],edx
  40de7b:	scas   al,BYTE PTR es:[edi]
  40de7c:	aam    0x93
  40de7e:	sahf   
  40de7f:	sbb    edx,ecx
  40de81:	inc    eax
  40de82:	xlat   BYTE PTR ds:[ebx]
  40de83:	int3   
  40de84:	ins    BYTE PTR es:[edi],dx
  40de85:	(bad)  
  40de87:	nop
  40de88:	aam    0x23
  40de8a:	int    0xe1
  40de8c:	int    0x11
  40de8e:	(bad)
  40de93:	cli    
  40de94:	jl     0x40deba
  40de96:	jb     0x40de5d
  40de98:	add    bh,ch
  40de9a:	pop    ds
  40de9b:	mov    ch,0xf8
  40de9d:	cwde   
  40de9e:	sti    
  40de9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dea0:	xchg   esp,eax
  40dea1:	pop    eax
  40dea2:	jbe    0x40df1f
  40dea4:	out    dx,al
  40dea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea6:	jnp    0x40debe
  40dea8:	mov    al,ds:0x11e440f1
  40dead:	mov    dl,0x88
  40deaf:	jno    0x40df2a
  40deb1:	mov    dh,0xc8
  40deb3:	test   DWORD PTR [esp+ebp*2],eax
  40deb6:	sub    BYTE PTR [esi-0x67],dl
  40deb9:	aas    
  40deba:	lahf   
  40debb:	bound  ebp,QWORD PTR [edi+0x49]
  40debe:	fcomp  st(3)
  40dec0:	sbb    DWORD PTR [esi],ecx
  40dec2:	loope  0x40def6
  40dec4:	es dec eax
  40dec6:	inc    ebp
  40dec7:	inc    BYTE PTR [edx]
  40dec9:	xor    ch,BYTE PTR [edx-0x36]
  40decc:	ja     0x40deb5
  40dece:	or     esp,DWORD PTR [edi+0x1a8eede3]
  40ded4:	mov    ebx,0xca28340
  40ded9:	sar    bh,1
  40dedb:	dec    DWORD PTR [ebx-0x77]
  40dede:	into   
  40dedf:	rcl    BYTE PTR [esi+0x1265ce79],0x54
  40dee6:	cmp    edx,edx
  40dee8:	dec    esp
  40dee9:	add    ebp,DWORD PTR [ebp+0x73]
  40deec:	fwait
  40deed:	mov    es,WORD PTR [eax]
  40deef:	lock adc dh,BYTE PTR [ebx]
  40def2:	js     0x40de9d
  40def4:	mov    cl,0x42
  40def6:	stos   BYTE PTR es:[edi],al
  40def7:	cli    
  40def8:	aas    
  40def9:	jge    0x40de97
  40defb:	call   0xae076dc2
  40df00:	xor    eax,0x9d7156e1
  40df05:	xor    ebp,ecx
  40df07:	repz push ecx
  40df09:	or     ecx,DWORD PTR [eax-0x7b]
  40df0c:	into   
  40df0d:	aaa    
  40df0e:	push   0xf04ccb1c
  40df13:	mov    bh,BYTE PTR [edx]
  40df15:	push   eax
  40df16:	xchg   ebx,eax
  40df17:	in     al,dx
  40df18:	inc    edx
  40df19:	stos   BYTE PTR es:[edi],al
  40df1a:	dec    ebx
  40df1b:	jne    0x40df70
  40df1d:	xchg   edx,eax
  40df1e:	pop    esi
  40df1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df20:	or     al,0x4f
  40df22:	mov    al,ds:0xf0f4d3b2
  40df27:	sub    eax,0xb470ccdd
  40df2c:	test   DWORD PTR ds:0xddb285f7,0xe5703cd3
  40df36:	int    0xc7
  40df38:	dec    ecx
  40df39:	jg     0x40dfb7
  40df3b:	cld    
  40df3c:	dec    ebx
  40df3d:	xchg   esi,eax
  40df3e:	mov    bl,0x64
  40df40:	mov    ah,0xde
  40df42:	in     al,0x89
  40df44:	push   es
  40df45:	ds push 0x6ce631df
  40df4b:	imul   edi,DWORD PTR [eax+ebp*1+0x73a9d73c],0xffffff8e
  40df53:	pop    ecx
  40df54:	ins    BYTE PTR es:[edi],dx
  40df55:	(bad)  
  40df56:	hlt    
  40df57:	dec    esp
  40df58:	pop    ss
  40df59:	nop
  40df5a:	cdq    
  40df5b:	fistp  QWORD PTR [edx]
  40df5d:	xchg   ecx,eax
  40df5e:	xchg   esp,eax
  40df5f:	jns    0x40df11
  40df61:	scas   al,BYTE PTR es:[edi]
  40df62:	sub    al,0x13
  40df64:	pop    edx
  40df65:	jecxz  0x40dfe4
  40df67:	gs out 0xf8,eax
  40df6a:	hlt    
  40df6b:	(bad)  
  40df6c:	stc    
  40df6d:	lods   al,BYTE PTR ds:[esi]
  40df6e:	into   
  40df6f:	fdiv   DWORD PTR [edx+0x53]
  40df72:	sti    
  40df73:	dec    esi
  40df74:	(bad)  
  40df75:	and    ebp,edi
  40df77:	out    dx,al
  40df78:	or     DWORD PTR [ebx],ebx
  40df7a:	sub    al,0xf
  40df7c:	xchg   ecx,eax
  40df7d:	(bad)  
  40df7e:	test   BYTE PTR [esi],dl
  40df80:	imul   esi,DWORD PTR [ebp+0x65b81bb7],0xdc641fd2
  40df8a:	aaa    
  40df8b:	hlt    
  40df8c:	retf   
  40df8d:	fisub  WORD PTR [edx-0x43]
  40df90:	pop    ss
  40df91:	or     BYTE PTR [edi],0x9a
  40df94:	inc    esi
  40df95:	sub    eax,0x173baeaa
  40df9a:	jp     0x40df9e
  40df9c:	ins    BYTE PTR es:[edi],dx
  40df9d:	pop    ecx
  40df9e:	mov    eax,0xa0d7ac5e
  40dfa3:	out    0x5b,al
  40dfa5:	sbb    al,0x95
  40dfa7:	add    DWORD PTR [ebx],0xec0c08d2
  40dfad:	cmp    BYTE PTR [esi-0x50],cl
  40dfb0:	xchg   ebp,eax
  40dfb1:	retf   0xbcbf
  40dfb4:	pop    ebx
  40dfb5:	lahf   
  40dfb6:	xor    dh,BYTE PTR [ebp-0x5adae630]
  40dfbc:	xchg   esp,eax
  40dfbd:	mov    ds:0x44c267ef,eax
  40dfc2:	les    ecx,FWORD PTR [edi]
  40dfc4:	in     eax,0x7f
  40dfc6:	xchg   esi,eax
  40dfc7:	shl    dh,1
  40dfc9:	or     cl,cl
  40dfcb:	in     eax,0x4f
  40dfcd:	iret   
  40dfce:	shl    BYTE PTR [edx+0x259bfa14],cl
  40dfd4:	(bad)  
  40dfd5:	mov    al,BYTE PTR [ecx-0x7051c1df]
  40dfdb:	sub    bl,BYTE PTR ds:0xc8754a2f
  40dfe1:	push   esp
  40dfe2:	retf   0x5752
  40dfe5:	push   esi
  40dfe6:	jge    0x40dfa5
  40dfe8:	sbb    bh,BYTE PTR [edi]
  40dfea:	push   edx
  40dfeb:	inc    edx
  40dfec:	sub    ah,dl
  40dfee:	ret    0x6288
  40dff1:	cli    
  40dff2:	gs dec esp
  40dff4:	and    DWORD PTR [edi-0x609e5432],edx
  40dffa:	clc    
  40dffb:	pop    esp
  40dffc:	dec    eax
  40dffd:	test   DWORD PTR [esi+eax*1+0x63],eax
  40e001:	outs   dx,BYTE PTR ds:[esi]
  40e002:	sbb    BYTE PTR [edi-0x3a9a01aa],al
  40e008:	jno    0x40e043
  40e00a:	lods   eax,DWORD PTR ds:[esi]
  40e00b:	int3   
  40e00c:	leave  
  40e00d:	into   
  40e00e:	pusha  
  40e00f:	sar    BYTE PTR ds:0xf465e942,0xd7
  40e016:	pop    esi
  40e017:	xchg   esp,eax
  40e018:	mov    ah,0x4d
  40e01a:	mov    al,0xe1
  40e01c:	je     0x40e002
  40e01e:	and    DWORD PTR [edi+eiz*2-0x30],eax
  40e022:	ins    BYTE PTR es:[edi],dx
  40e023:	cmp    BYTE PTR [edi],cl
  40e025:	rcl    BYTE PTR [esi],0xbf
  40e028:	mov    dh,0xd7
  40e02a:	inc    eax
  40e02b:	adc    edi,DWORD PTR [esi]
  40e02d:	add    al,0xae
  40e02f:	jge    0x40e0ab
  40e031:	or     dl,BYTE PTR [ecx]
  40e033:	sbb    DWORD PTR [esi-0x587f1fdd],ebp
  40e039:	imul   ebp,DWORD PTR [edi+0x6f],0xf42e001
  40e040:	cmp    DWORD PTR [eax-0x3e],eax
  40e043:	test   eax,edi
  40e045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e046:	call   0xb3095d60
  40e04b:	jb     0x40e095
  40e04d:	jo     0x40e021
  40e04f:	jbe    0x40dfef
  40e051:	loop   0x40e080
  40e053:	push   ss
  40e054:	mov    bl,0x80
  40e056:	loopne 0x40dfe9
  40e058:	in     eax,0x50
  40e05a:	cs cmp eax,0xed274a02
  40e060:	xchg   edx,eax
  40e061:	test   BYTE PTR [ebx-0x45],0xa8
  40e065:	neg    DWORD PTR [ecx-0x50346d5d]
  40e06b:	(bad)  
  40e06c:	retf   
  40e06d:	push   edx
  40e06e:	jp     0x40e064
  40e070:	add    edi,DWORD PTR [edx]
  40e072:	push   eax
  40e073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e074:	loope  0x40e0d1
  40e076:	push   esi
  40e077:	nop
  40e078:	mov    ebx,0xf3242f58
  40e07d:	push   edi
  40e07e:	add    DWORD PTR [edx+0x64816601],edi
  40e084:	not    eax
  40e086:	retf   0x5476
  40e089:	aaa    
  40e08a:	imul   ebp,DWORD PTR [eax-0x50acdef5],0x92c48ea3
  40e094:	xchg   DWORD PTR [edx],edi
  40e096:	mov    dl,0xf9
  40e098:	jecxz  0x40e061
  40e09a:	or     al,0x31
  40e09c:	(bad)  
  40e09e:	punpckhbw mm7,QWORD PTR [ecx]
  40e0a1:	jno    0x40e063
  40e0a3:	dec    ebx
  40e0a4:	xchg   ebx,eax
  40e0a5:	(bad)  
  40e0a6:	jle    0x40e100
  40e0a8:	mov    al,ds:0xa99e526d
  40e0ad:	cmp    dl,BYTE PTR [ebx]
  40e0af:	push   ebx
  40e0b0:	out    dx,eax
  40e0b1:	cli    
  40e0b2:	sbb    edx,eax
  40e0b4:	mov    ebp,0x23a94273
  40e0b9:	mov    dl,0x63
  40e0bb:	(bad)  
  40e0bc:	push   edi
  40e0bd:	gs sti 
  40e0bf:	sbb    DWORD PTR [ebp-0x48],edx
  40e0c2:	out    dx,eax
  40e0c3:	jne    0x40e110
  40e0c5:	sbb    esp,ebp
  40e0c7:	pop    ss
  40e0c8:	aaa    
  40e0c9:	dec    bp
  40e0cb:	mov    ebp,0x40b7599
  40e0d0:	push   0xffffffe0
  40e0d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0d3:	enter  0x6841,0x63
  40e0d7:	and    edx,DWORD PTR [esi]
  40e0d9:	or     eax,0x78fdac5e
  40e0de:	fisub  DWORD PTR [ebx-0x25840233]
  40e0e4:	(bad)  
  40e0e5:	rol    BYTE PTR [ebx-0x3f],1
  40e0e8:	test   BYTE PTR [esi-0x27],dl
  40e0eb:	mov    bl,BYTE PTR [edi-0x31]
  40e0ee:	push   ebx
  40e0ef:	ret    0x83b7
  40e0f2:	paddsb mm1,QWORD PTR [ebx+0x338a84a0]
  40e0f9:	(bad)  
  40e0fa:	mov    ebp,0xcdbc0aa0
  40e0ff:	rol    DWORD PTR [ebx],0xb8
  40e102:	add    DWORD PTR [ecx],edx
  40e104:	jmp    0x8012:0x11447ce4
  40e10b:	or     al,0x12
  40e10d:	daa    
  40e10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e10f:	cmp    DWORD PTR ds:0xf9d45229,0xffffff9e
  40e116:	and    BYTE PTR [ecx],cl
  40e118:	jb     0x40e145
  40e11a:	shl    BYTE PTR [eax],cl
  40e11c:	leave  
  40e11d:	inc    ecx
  40e11e:	pop    edi
  40e11f:	bound  ecx,QWORD PTR [ebx+0x3c9ac123]
  40e125:	rol    al,0x7f
  40e128:	or     esi,ebx
  40e12a:	and    BYTE PTR [edi],dl
  40e12c:	xchg   esi,eax
  40e12d:	sub    eax,0xd3e77a3
  40e132:	lock dec esi
  40e134:	addr16 mov dl,0x14
  40e137:	inc    edi
  40e138:	and    al,0xfa
  40e13a:	jo     0x40e144
  40e13c:	mov    esi,0x85b59ed4
  40e141:	data16 ds in al,dx
  40e144:	sub    BYTE PTR [ebx+edx*8-0x4ef80411],dl
  40e14b:	add    DWORD PTR [edx],ebp
  40e14d:	xor    edi,DWORD PTR [ebx+0x49]
  40e150:	sub    eax,DWORD PTR [ecx]
  40e152:	test   eax,0x2ca6c22a
  40e157:	leave  
  40e158:	push   ds
  40e159:	xor    DWORD PTR [ecx+0x27],esi
  40e15c:	test   al,0x86
  40e15e:	push   cs
  40e15f:	mov    edx,0x664c8c05
  40e164:	lods   eax,DWORD PTR ds:[esi]
  40e165:	xchg   DWORD PTR [esi-0x2f613682],esi
  40e16b:	ins    DWORD PTR es:[edi],dx
  40e16c:	jmp    0xc022:0x524feb84
  40e173:	mov    ds:0x74791632,eax
  40e178:	pop    edi
  40e179:	mov    eax,ds:0xb3784499
  40e17e:	or     al,0xcf
  40e180:	inc    esp
  40e181:	out    0xbd,eax
  40e183:	fdiv   DWORD PTR [esp+edi*2-0x33]
  40e187:	pop    ss
  40e188:	or     BYTE PTR [edi-0x37],ah
  40e18b:	sub    DWORD PTR [ebx-0x3ea379f1],esp
  40e191:	retf   
  40e192:	jp     0x40e1ec
  40e194:	or     eax,0xd80fc098
  40e199:	inc    edx
  40e19a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e19b:	and    eax,0x52644983
  40e1a0:	pop    ss
  40e1a1:	mov    bl,0xe
  40e1a3:	mov    al,ds:0x8b2797c1
  40e1a8:	mov    cl,0xc2
  40e1aa:	ja     0x40e14c
  40e1ac:	pop    edi
  40e1ad:	pushf  
  40e1ae:	cmp    al,BYTE PTR [ecx+eax*1+0x5be0662d]
  40e1b5:	mov    esp,0x4d83f43a
  40e1ba:	adc    al,0x65
  40e1bc:	jecxz  0x40e18d
  40e1be:	in     al,dx
  40e1bf:	aas    
  40e1c0:	loop   0x40e1e5
  40e1c2:	mov    edx,0x92ac0d6a
  40e1c7:	mov    al,BYTE PTR [esi+ecx*1+0x73]
  40e1cb:	cmp    edx,DWORD PTR ds:0x39a69325
  40e1d1:	rcr    BYTE PTR [ebx+0x23],0x76
  40e1d5:	jg     0x40e1ca
  40e1d7:	xchg   edi,eax
  40e1d8:	test   DWORD PTR [eax],esi
  40e1da:	rol    BYTE PTR [ebx-0x46],1
  40e1dd:	ret    0x3754
  40e1e0:	outs   dx,DWORD PTR ds:[esi]
  40e1e1:	ins    DWORD PTR es:[edi],dx
  40e1e2:	push   edx
  40e1e3:	arpl   WORD PTR [bx+di],sp
  40e1e6:	push   0xc363880a
  40e1eb:	loopne 0x40e1b4
  40e1ed:	mov    WORD PTR [eax],?
  40e1ef:	xor    esi,eax
  40e1f1:	call   0x4d90:0x8ee66070
  40e1f8:	hlt    
  40e1f9:	out    0xea,al
  40e1fb:	in     al,dx
  40e1fc:	xor    eax,0x88bced3a
  40e201:	fdivr  DWORD PTR [ecx]
  40e203:	stos   BYTE PTR es:[edi],al
  40e204:	mov    edx,gs
  40e206:	es jne 0x40e266
  40e209:	adc    ebp,ecx
  40e20b:	inc    cl
  40e20d:	xchg   ecx,eax
  40e20e:	mov    dl,0x5f
  40e210:	add    BYTE PTR ds:0xb6651d42,dl
  40e216:	jge    0x40e1be
  40e218:	addr16 (bad) 
  40e21a:	jg     0x40e1d8
  40e21c:	dec    esp
  40e21d:	in     al,0xb6
  40e21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e220:	mov    dl,0x43
  40e222:	cdq    
  40e223:	push   0x1e5ae835
  40e228:	or     al,0x78
  40e22a:	gs pop edi
  40e22c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e22d:	dec    esi
  40e22e:	repnz ins DWORD PTR es:[edi],dx
  40e230:	push   edx
  40e231:	nop
  40e232:	pop    ds
  40e233:	lahf   
  40e234:	ja     0x40e1ce
  40e236:	outs   dx,DWORD PTR ds:[esi]
  40e237:	xchg   ebx,eax
  40e238:	nop
  40e239:	inc    esp
  40e23a:	jp     0x40e23c
  40e23c:	xor    al,0x46
  40e23e:	test   BYTE PTR [edx-0x1788f99],dl
  40e244:	mov    ebp,0x4b86c568
  40e249:	into   
  40e24a:	iret   
  40e24b:	jmp    0xf144:0xc47d72d0
  40e252:	dec    ecx
  40e253:	mov    al,0xfa
  40e255:	pop    ecx
  40e256:	mov    bh,0x8
  40e258:	pop    ebx
  40e259:	rol    ch,1
  40e25b:	in     al,0x64
  40e25d:	jns    0x40e2ac
  40e25f:	adc    DWORD PTR [eax-0x3f],edx
  40e262:	push   es
  40e263:	push   edi
  40e264:	cmp    bh,bl
  40e266:	clc    
  40e267:	sbb    edi,DWORD PTR [edi-0x2f]
  40e26a:	cdq    
  40e26b:	adc    ch,al
  40e26d:	(bad)  [esi+0x67]
  40e270:	mul    BYTE PTR [ecx+0x36b44b2e]
  40e276:	ins    DWORD PTR es:[edi],dx
  40e277:	add    DWORD PTR [edi-0x50e16324],edi
  40e27d:	or     al,0xb1
  40e27f:	mov    DWORD PTR [ebp-0x44],esi
  40e282:	adc    eax,0x1e9fe7dd
  40e287:	stc    
  40e288:	nop
  40e289:	pop    ebx
  40e28a:	loope  0x40e245
  40e28c:	sar    DWORD PTR [ecx],1
  40e28e:	inc    edx
  40e28f:	cmp    eax,0x8c3c57b0
  40e294:	pop    edi
  40e295:	pop    ds
  40e296:	loopne 0x40e287
  40e298:	adc    esp,DWORD PTR [eax+0x69d9ee87]
  40e29e:	jge    0x40e22c
  40e2a0:	(bad)  
  40e2a1:	push   edi
  40e2a2:	cmp    dh,BYTE PTR [eax]
  40e2a4:	and    esp,esi
  40e2a6:	leave  
  40e2a7:	rcr    BYTE PTR [ebx-0x5906dfca],0x3b
  40e2ae:	push   esp
  40e2af:	mov    ch,0x2d
  40e2b1:	pop    edx
  40e2b2:	bound  ecx,QWORD PTR [ebx-0x57514331]
  40e2b8:	and    ah,BYTE PTR [edx+0x73]
  40e2bb:	lods   al,BYTE PTR ds:[esi]
  40e2bc:	push   esi
  40e2bd:	dec    ebx
  40e2be:	xor    ecx,DWORD PTR [edi-0x60]
  40e2c1:	inc    edi
  40e2c2:	dec    esp
  40e2c3:	adc    ecx,esi
  40e2c5:	jne    0x40e2a9
  40e2c7:	inc    edx
  40e2c8:	sub    dl,0x71
  40e2cb:	mov    bh,0x4f
  40e2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ce:	popa   
  40e2cf:	xchg   esp,eax
  40e2d0:	outs   dx,DWORD PTR ds:[esi]
  40e2d1:	pop    esp
  40e2d2:	jecxz  0x40e334
  40e2d4:	mov    ebx,0xde21cf0e
  40e2d9:	jecxz  0x40e2d7
  40e2db:	cmp    di,WORD PTR ds:0x692452d0
  40e2e2:	ror    ebx,1
  40e2e4:	imul   esi,DWORD PTR [eax-0x4b],0x12
  40e2e8:	out    0xcf,eax
  40e2ea:	xor    al,0x64
  40e2ec:	outs   dx,DWORD PTR ds:[esi]
  40e2ed:	xchg   ebp,eax
  40e2ee:	ret    
  40e2ef:	cmp    ah,BYTE PTR [edi]
  40e2f1:	jnp    0x40e2fb
  40e2f3:	pop    ecx
  40e2f4:	jne    0x40e2da
  40e2f6:	bound  edi,QWORD PTR [esi+0x23]
  40e2f9:	mov    ah,0xe9
  40e2fb:	shl    bh,1
  40e2fd:	popf   
  40e2fe:	out    dx,al
  40e2ff:	dec    edx
  40e300:	lods   al,BYTE PTR ds:[esi]
  40e301:	pop    eax
  40e302:	mov    edx,0x98470685
  40e307:	xchg   esi,eax
  40e308:	pop    edi
  40e309:	pop    ds
  40e30a:	(bad)  
  40e30b:	mov    ds:0xe50bd05d,eax
  40e310:	and    ebx,eax
  40e312:	mov    eax,ds:0x141790a1
  40e317:	(bad)  
  40e318:	jne    0x40e2f3
  40e31a:	call   0x8c87:0x1f09176a
  40e321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e322:	retf   
  40e323:	push   eax
  40e324:	loop   0x40e2ae
  40e326:	test   DWORD PTR [ecx-0x13],esp
  40e329:	loopne 0x40e2cf
  40e32b:	(bad)  
  40e32c:	cmpps  xmm3,XMMWORD PTR [eax+0x4d9028f1],0x92
  40e334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e335:	cmc    
  40e336:	inc    eax
  40e337:	gs and al,0x29
  40e33a:	or     eax,0x7a2779ee
  40e33f:	aam    0x90
  40e341:	dec    edx
  40e342:	fwait
  40e343:	dec    edi
  40e344:	jle    0x40e318
  40e346:	pusha  
  40e347:	inc    ecx
  40e348:	xchg   esp,eax
  40e349:	cmp    ebp,DWORD PTR [ebx-0x71a73242]
  40e34f:	pushf  
  40e350:	sub    DWORD PTR [edx],edx
  40e352:	sub    bl,dl
  40e354:	adc    BYTE PTR [edx],0xfe
  40e357:	aad    0xbd
  40e359:	sbb    al,0xf6
  40e35b:	lods   eax,DWORD PTR ds:[esi]
  40e35c:	mov    WORD PTR [ecx-0x3e2d7267],gs
  40e362:	std    
  40e363:	pop    ss
  40e364:	in     eax,0x5d
  40e366:	or     ah,BYTE PTR [edi-0x76]
  40e369:	sar    DWORD PTR [eax+0x2447aacf],1
  40e36f:	mov    bl,0x31
  40e371:	sbb    al,0x12
  40e373:	sub    DWORD PTR [ecx],0xa0a5e4c1
  40e379:	jb     0x40e39c
  40e37b:	pop    ecx
  40e37c:	in     al,0xd3
  40e37e:	mov    edi,0xc40fdff6
  40e383:	add    DWORD PTR ds:0x74f0b961,esi
  40e389:	shr    DWORD PTR [esp+edi*1+0x3a887928],1
  40e390:	loop   0x40e3c3
  40e392:	mov    dh,0x4f
  40e394:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40e396:	cld    
  40e397:	fld    QWORD PTR ds:0x8181d2a4
  40e39d:	cmp    al,cl
  40e39f:	pop    ebp
  40e3a0:	jp     0x40e415
  40e3a2:	or     DWORD PTR [ebx-0x4ced9c80],ebx
  40e3a8:	test   eax,0x83dc2622
  40e3ad:	mov    bl,0x4b
  40e3af:	hlt    
  40e3b0:	pop    ebx
  40e3b1:	xchg   ecx,eax
  40e3b2:	cmp    eax,0xf08af3b4
  40e3b7:	dec    ecx
  40e3b8:	mov    edi,0xa258b75a
  40e3bd:	lahf   
  40e3be:	out    dx,eax
  40e3bf:	pop    ds
  40e3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3c1:	add    ch,cl
  40e3c3:	lea    ebx,[eax+eiz*2+0x43]
  40e3c7:	(bad)  
  40e3c8:	push   esi
  40e3c9:	loopne 0x40e363
  40e3cb:	sbb    DWORD PTR [ebx+eax*4-0x2406eea3],esp
  40e3d2:	stos   BYTE PTR es:[edi],al
  40e3d3:	popa   
  40e3d4:	shr    BYTE PTR [esi+ecx*1+0x7afb065a],1
  40e3db:	sbb    bh,BYTE PTR [esp+esi*1+0x63]
  40e3df:	mov    cl,0xd5
  40e3e1:	sbb    eax,0xb3a3db6e
  40e3e6:	cmp    BYTE PTR [eax+ebx*4],dh
  40e3e9:	repz jp 0x40e3cc
  40e3ec:	jne    0x40e3e0
  40e3ee:	cmc    
  40e3ef:	or     BYTE PTR [edi-0x24f08481],ah
  40e3f5:	xchg   DWORD PTR [esi],edx
  40e3f7:	or     eax,0x81527152
  40e3fc:	test   esp,ebx
  40e3fe:	mov    ah,0xf6
  40e400:	js     0x40e395
  40e402:	jmp    0x17b2:0x65e679b2
  40e409:	xor    BYTE PTR [ecx],cl
  40e40b:	iret   
  40e40c:	int    0x50
  40e40e:	and    al,0xb0
  40e410:	(bad)  [ebp+edi*1+0x34e68e05]
  40e417:	ret    0x4b13
  40e41a:	jp     0x40e40f
  40e41c:	xor    al,0x31
  40e41e:	dec    ecx
  40e41f:	out    dx,eax
  40e420:	jecxz  0x40e3d9
  40e422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e423:	fwait
  40e424:	jo     0x40e419
  40e426:	cmp    BYTE PTR [ecx-0x77ca2e5b],0x38
  40e42d:	xlat   BYTE PTR ss:[ebx]
  40e42f:	scas   eax,DWORD PTR es:[edi]
  40e430:	es sahf 
  40e432:	xchg   ebx,eax
  40e433:	pop    eax
  40e434:	push   ss
  40e435:	mov    ?,WORD PTR ss:[esi-0x7423ac36]
  40e43c:	mov    BYTE PTR [esi+0x273ac87c],0xab
  40e443:	or     BYTE PTR [eax-0x3d],al
  40e446:	jmp    0x40e428
  40e448:	mov    esp,DWORD PTR [ebp-0x5b]
  40e44b:	push   ecx
  40e44c:	imul   esp,edx,0xffffffac
  40e44f:	int3   
  40e450:	sahf   
  40e451:	lods   al,BYTE PTR ds:[esi]
  40e452:	push   ebp
  40e453:	or     BYTE PTR [edi+0x75],ch
  40e456:	ins    BYTE PTR es:[edi],dx
  40e457:	cli    
  40e458:	mov    WORD PTR [esi],fs
  40e45a:	adc    eax,DWORD PTR [ebp+0x1f21b653]
  40e460:	sbb    al,0x46
  40e462:	xchg   ebp,eax
  40e463:	cli    
  40e464:	push   esp
  40e465:	stos   DWORD PTR es:[edi],eax
  40e466:	sbb    eax,0xa8779c1d
  40e46b:	aaa    
  40e46c:	cwde   
  40e46d:	pushf  
  40e46e:	mov    eax,0x288d9230
  40e473:	xchg   DWORD PTR [esi+0x34660e],eax
  40e479:	rol    DWORD PTR [ebp+ebx*2-0x3b294b7],cl
  40e480:	in     al,dx
  40e481:	ror    DWORD PTR [edi],cl
  40e483:	inc    edx
  40e484:	stc    
  40e485:	mov    edi,0x3cf4acf4
  40e48a:	ds xchg cl,cl
  40e48d:	sbb    esi,DWORD PTR [ebp+0x3a3e9e59]
  40e493:	inc    ecx
  40e494:	fnsave [esi]
  40e496:	stos   DWORD PTR es:[edi],eax
  40e497:	mov    dl,0xcf
  40e499:	int3   
  40e49a:	popa   
  40e49b:	ins    DWORD PTR es:[edi],dx
  40e49c:	cmova  ecx,DWORD PTR [ecx]
  40e49f:	jmp    0x40e4b9
  40e4a1:	stos   BYTE PTR es:[edi],al
  40e4a2:	jno    0x40e4f3
  40e4a4:	shl    bh,cl
  40e4a6:	repnz xchg esp,eax
  40e4a8:	out    dx,al
  40e4a9:	jns    0x40e499
  40e4ab:	and    esp,edi
  40e4ad:	les    esi,FWORD PTR [edx]
  40e4af:	xlat   BYTE PTR ds:[bx]
  40e4b1:	fwait
  40e4b2:	cmp    bh,BYTE PTR [ebx+0x61e79322]
  40e4b8:	push   ecx
  40e4b9:	imul   esp,DWORD PTR [esi],0x24
  40e4bc:	xor    bh,BYTE PTR fs:[edi+ecx*8+0xb927734]
  40e4c4:	push   cs
  40e4c5:	cmc    
  40e4c6:	lahf   
  40e4c7:	xchg   esi,eax
  40e4c8:	pop    esi
  40e4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ca:	stc    
  40e4cb:	push   ss
  40e4cc:	imul   ebx,ebp,0xffffffd8
  40e4cf:	xor    BYTE PTR [esi+0x3af50612],0xc8
  40e4d6:	jne    0x40e548
  40e4d8:	xchg   edi,eax
  40e4d9:	js     0x40e46e
  40e4db:	jmp    0xc696:0x9096f5eb
  40e4e2:	imul   esi,DWORD PTR [edi-0x4cf350fd],0x40bb747f
  40e4ec:	or     BYTE PTR ds:0xa96ae72a,bh
  40e4f2:	adc    edi,edx
  40e4f4:	pop    DWORD PTR [eax+0x310f8d6a]
  40e4fa:	pop    edx
  40e4fb:	stos   BYTE PTR es:[edi],al
  40e4fc:	xchg   esi,eax
  40e4fd:	stos   BYTE PTR es:[edi],al
  40e4fe:	xchg   edx,eax
  40e4ff:	jo     0x40e4d3
  40e501:	mov    cl,0xf3
  40e503:	jnp    0x40e4da
  40e505:	dec    esp
  40e506:	retf   0x5a6e
  40e509:	call   0xf029:0x95843424
  40e510:	pop    edi
  40e511:	push   esi
  40e512:	lods   al,BYTE PTR ds:[esi]
  40e513:	mov    ds:0x81d14240,al
  40e518:	xchg   ebx,eax
  40e519:	sbb    ebx,DWORD PTR [eax-0x3a]
  40e51c:	std    
  40e51d:	and    eax,0x5373871
  40e522:	dec    eax
  40e523:	inc    esi
  40e524:	or     DWORD PTR [edi],ecx
  40e526:	in     eax,dx
  40e527:	iret   
  40e528:	xor    eax,0xadf6cc0e
  40e52d:	xor    eax,0xb61ddf9
  40e532:	mov    dl,0x27
  40e534:	addr16 adc ebx,ebx
  40e537:	rcl    bl,1
  40e539:	call   FWORD PTR [ebx+0x3b]
  40e53c:	mov    eax,edx
  40e53e:	inc    edx
  40e53f:	fs sub eax,0x10f0b151
  40e545:	enter  0xd525,0xe1
  40e549:	mov    eax,0x78594fa
  40e54e:	add    eax,0x831dccb6
  40e553:	fnstenv [esi-0x63]
  40e556:	add    al,0x85
  40e558:	xor    edi,DWORD PTR [ecx]
  40e55a:	(bad)  [edx-0x54]
  40e55d:	add    ah,BYTE PTR [ebx]
  40e55f:	jae    0x40e5d4
  40e561:	movups xmm3,xmm4
  40e564:	arpl   WORD PTR [esi],bx
  40e566:	mov    ds:0x7a49c9a3,al
  40e56b:	repnz mov bh,bl
  40e56e:	outs   dx,BYTE PTR ds:[esi]
  40e56f:	int3   
  40e570:	out    dx,eax
  40e571:	(bad)  
  40e573:	dec    esp
  40e574:	aas    
  40e575:	dec    ebp
  40e576:	dec    edx
  40e577:	inc    edx
  40e578:	push   0x3f
  40e57a:	pushf  
  40e57b:	loop   0x40e59c
  40e57d:	xor    BYTE PTR [esi+ebx*2-0x3039853d],cl
  40e584:	push   cs
  40e585:	in     al,0x13
  40e587:	mov    ecx,0xf4d4c2ac
  40e58c:	ret    0xdf81
  40e58f:	mov    ebx,0x9bb77e38
  40e594:	(bad)  
  40e595:	xor    eax,0xdbb0f732
  40e59a:	xlat   BYTE PTR ds:[ebx]
  40e59b:	mov    ah,0xf4
  40e59d:	pop    edi
  40e59e:	out    dx,eax
  40e59f:	loope  0x40e594
  40e5a1:	add    BYTE PTR ds:0x3d287d8b,ah
  40e5a7:	inc    ebx
  40e5a8:	push   edx
  40e5a9:	jmp    0xf96d5bd3
  40e5ae:	idiv   BYTE PTR [edx-0x42f202af]
  40e5b4:	jae    0x40e57c
  40e5b6:	sbb    esi,edi
  40e5b8:	shl    dh,cl
  40e5ba:	inc    esp
  40e5bb:	imul   esp,DWORD PTR [eax-0x7c],0x31
  40e5bf:	mov    esp,0xc96f960d
  40e5c4:	jmp    0x5abf:0xfe3e49b
  40e5cb:	ret    
  40e5cc:	ja     0x40e63e
  40e5ce:	jae    0x40e5c3
  40e5d0:	sbb    ecx,esi
  40e5d2:	out    0xeb,al
  40e5d4:	gs stos DWORD PTR es:[edi],eax
  40e5d6:	lods   al,BYTE PTR ss:[esi]
  40e5d8:	sar    DWORD PTR [esi-0x8],0x22
  40e5dc:	scas   al,BYTE PTR es:[edi]
  40e5dd:	cmovbe esi,ebp
  40e5e0:	fild   WORD PTR [eax+0x74]
  40e5e3:	pop    ecx
  40e5e4:	and    esi,DWORD PTR [esi+0x20]
  40e5e7:	pop    ds
  40e5e8:	(bad)  
  40e5e9:	std    
  40e5ea:	dec    edx
  40e5eb:	ss clc 
  40e5ed:	add    DWORD PTR [edx-0x61],esp
  40e5f0:	ja     0x40e636
  40e5f2:	cmp    ah,BYTE PTR [edi-0x39dbcb85]
  40e5f8:	mov    ecx,0x4dea4037
  40e5fd:	in     eax,0xed
  40e5ff:	add    DWORD PTR [esi],edx
  40e601:	mov    ebp,0x53dd7784
  40e606:	stos   BYTE PTR es:[edi],al
  40e607:	outs   dx,DWORD PTR ds:[esi]
  40e608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e609:	in     eax,0x48
  40e60b:	aas    
  40e60c:	loope  0x40e602
  40e60e:	imul   ebx,DWORD PTR [ebp-0x60],0x47
  40e612:	ror    BYTE PTR [esi+eax*4+0x7938549],cl
  40e619:	dec    esp
  40e61a:	mov    edx,0xb4f03f0f
  40e61f:	call   0xe2e34ad1
  40e624:	mov    DWORD PTR [ecx-0x5d],edi
  40e627:	fdiv   DWORD PTR [ecx+0x2fe4c061]
  40e62d:	dec    ebx
  40e62e:	cmp    al,0xe
  40e631:	out    dx,al
  40e632:	push   ebx
  40e633:	imul   ebp,ebp,0xffffffe9
  40e636:	push   ecx
  40e637:	cmp    sp,WORD PTR ss:[ebx+0x59]
  40e63c:	cmp    dh,cl
  40e63e:	aaa    
  40e63f:	test   eax,0x13176818
  40e644:	mov    esp,0xfa9d1882
  40e649:	sub    cl,cl
  40e64b:	xor    eax,0xe206cf3c
  40e650:	mov    esi,0xb4a67ca4
  40e655:	mov    dl,0xf8
  40e657:	fstp   QWORD PTR [ebx+0x10e8481e]
  40e65d:	aaa    
  40e65e:	popa   
  40e65f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e660:	dec    esp
  40e661:	mov    ds:0xd5df366d,al
  40e666:	cmp    al,0xe5
  40e668:	ins    DWORD PTR es:[edi],dx
  40e669:	and    eax,ebx
  40e66b:	mov    ecx,0x8f289c21
  40e670:	pop    edx
  40e671:	or     DWORD PTR [ebp-0x5d],ebp
  40e674:	mov    edi,0xecd32ffa
  40e679:	or     al,0xeb
  40e67b:	adc    edi,DWORD PTR [eax+0x4f4405c9]
  40e681:	dec    eax
  40e682:	outs   dx,DWORD PTR ds:[esi]
  40e683:	js     0x40e697
  40e685:	or     bh,BYTE PTR [edi+0x4aadecd5]
  40e68b:	cmc    
  40e68c:	icebp  
  40e68d:	fisttp QWORD PTR [eax-0x117012b]
  40e693:	jne    0x40e620
  40e695:	sbb    al,0x1e
  40e697:	pop    ebp
  40e698:	retf   0xa3cb
  40e69b:	xchg   BYTE PTR [ebp-0x62abb7d9],dh
  40e6a1:	ja     0x40e667
  40e6a3:	in     al,0x32
  40e6a5:	cmp    BYTE PTR [ebx-0x466c73c4],bh
  40e6ab:	push   0x9e34728f
  40e6b0:	lods   al,BYTE PTR ds:[esi]
  40e6b1:	fchs   
  40e6b3:	test   al,0x46
  40e6b5:	lds    edi,FWORD PTR [ebp+0x40e5722]
  40e6bb:	dec    edi
  40e6bc:	shr    ecx,1
  40e6be:	mov    edi,0xa10ed0f1
  40e6c3:	inc    eax
  40e6c4:	push   ds
  40e6c5:	adc    dl,BYTE PTR [ebp-0x66]
  40e6c8:	into   
  40e6c9:	fwait
  40e6ca:	out    0xc8,al
  40e6cc:	arpl   bp,si
  40e6ce:	sahf   
  40e6cf:	wbinvd 
  40e6d1:	jle    0x40e66d
  40e6d3:	dec    ecx
  40e6d4:	or     DWORD PTR [esi],ecx
  40e6d6:	sahf   
  40e6d7:	xchg   edx,eax
  40e6d8:	aas    
  40e6d9:	sahf   
  40e6da:	ins    BYTE PTR es:[edi],dx
  40e6db:	pop    esi
  40e6dc:	add    eax,0xe25d3659
  40e6e1:	(bad)  
  40e6e2:	jecxz  0x40e69f
  40e6e4:	xchg   BYTE PTR [edx-0x51],ch
  40e6e7:	pushf  
  40e6e8:	mov    ah,0xb1
  40e6ea:	(bad)  
  40e6eb:	sub    ch,0xa2
  40e6ee:	shl    DWORD PTR [edx],1
  40e6f0:	rol    DWORD PTR [esi],0xd1
  40e6f3:	sbb    BYTE PTR [ebx-0x55],dh
  40e6f6:	loope  0x40e6a4
  40e6f8:	cmp    ah,bh
  40e6fa:	xor    eax,0xd1dd4cd8
  40e6ff:	dec    edi
  40e700:	nop
  40e701:	sub    bh,BYTE PTR [ebx+ebp*1+0x35454283]
  40e708:	shr    BYTE PTR [edi+0x57e04d37],1
  40e70e:	int3   
  40e70f:	lea    edx,[edx+0x12aa6834]
  40e715:	scas   eax,DWORD PTR es:[edi]
  40e716:	rol    ecx,1
  40e718:	sub    BYTE PTR [edx+0x22],cl
  40e71b:	xchg   ecx,eax
  40e71c:	scas   al,BYTE PTR es:[edi]
  40e71d:	or     edx,esp
  40e71f:	jo     0x40e6a9
  40e721:	popa   
  40e722:	sahf   
  40e723:	frstor [edx+0x62]
  40e726:	add    edi,edi
  40e728:	xchg   ebx,eax
  40e729:	imul   esi,DWORD PTR [edi],0x35
  40e72c:	adc    dh,al
  40e72e:	jbe    0x40e790
  40e730:	icebp  
  40e731:	shr    BYTE PTR [ecx-0x49],1
  40e734:	sbb    al,0xe5
  40e736:	stos   DWORD PTR es:[edi],eax
  40e737:	aas    
  40e738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e739:	xchg   bp,ax
  40e73b:	test   DWORD PTR [esi-0x4c],0xa03d8fe2
  40e742:	inc    ebx
  40e743:	int    0xdb
  40e745:	and    DWORD PTR [edx-0x5df60dbc],edx
  40e74b:	sar    BYTE PTR [edi-0x236e86b7],0xd7
  40e752:	cmp    bh,BYTE PTR [ecx-0x6be83737]
  40e758:	push   ebp
  40e759:	in     al,0xb9
  40e75b:	js     0x40e71a
  40e75d:	mov    ds:0xa575d601,al
  40e762:	mov    eax,0xe4159e71
  40e767:	call   0xc33f6866
  40e76c:	sbb    eax,0x74db2b86
  40e771:	push   cs
  40e772:	cmp    eax,0x583de175
  40e777:	sub    BYTE PTR [eax+ebx*2],ah
  40e77a:	add    ecx,DWORD PTR [edx+0x10715e3f]
  40e780:	call   0xb5c6:0x6b61d0f8
  40e787:	in     al,dx
  40e788:	jecxz  0x40e77c
  40e78a:	lahf   
  40e78b:	clc    
  40e78c:	cmp    BYTE PTR [esi],dh
  40e78e:	cli    
  40e78f:	sbb    DWORD PTR [ebp+eax*1-0x32ea197f],esi
  40e796:	ror    BYTE PTR [esi-0x7775b588],0xd9
  40e79d:	clc    
  40e79e:	pop    es
  40e79f:	jle    0x40e76f
  40e7a1:	fdiv   DWORD PTR [ebp-0x76cf544d]
  40e7a7:	clc    
  40e7a8:	pop    eax
  40e7a9:	sbb    DWORD PTR [ecx+0x43],ecx
  40e7ac:	data16 loop 0x40e821
  40e7af:	shl    BYTE PTR [esi+0x631e340e],cl
  40e7b5:	jecxz  0x40e7a5
  40e7b7:	jno    0x40e79e
  40e7b9:	(bad)  
  40e7ba:	mov    esi,0xe3903223
  40e7bf:	mov    bl,0x3d
  40e7c1:	inc    edx
  40e7c2:	das    
  40e7c3:	and    BYTE PTR [eax-0x6788e99d],0x9
  40e7ca:	add    ah,BYTE PTR [ecx]
  40e7cc:	(bad)  
  40e7cd:	fsub   QWORD PTR [ebx]
  40e7cf:	aaa    
  40e7d0:	and    eax,0x81ba040e
  40e7d5:	mov    esi,?
  40e7d7:	inc    ebp
  40e7d8:	imul   esp,DWORD PTR [ebx],0xfffffffb
  40e7db:	pop    eax
  40e7dc:	sub    eax,0xe50fc769
  40e7e1:	cld    
  40e7e2:	cs mov eax,0xbfe22ec1
  40e7e8:	jne    0x40e7ff
  40e7ea:	sub    al,0xcc
  40e7ec:	test   eax,edx
  40e7ee:	jae    0x40e850
  40e7f0:	and    edi,DWORD PTR [ebx+0x3b]
  40e7f3:	inc    esp
  40e7f4:	push   ecx
  40e7f5:	push   eax
  40e7f6:	or     al,0xf5
  40e7f8:	pop    edi
  40e7f9:	mov    ds:0x54fb446a,al
  40e7fe:	call   FWORD PTR ds:0x1eeb7321
  40e804:	xchg   edi,eax
  40e805:	sar    BYTE PTR [ecx+0x60af1b10],0x6c
  40e80c:	inc    esp
  40e80d:	adc    BYTE PTR [eax],dl
  40e80f:	fs mov dl,0x13
  40e812:	fs (bad) 
  40e814:	dec    eax
  40e815:	mov    dl,0xfa
  40e817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e818:	cli    
  40e819:	outs   dx,BYTE PTR ds:[esi]
  40e81a:	lahf   
  40e81b:	sbb    esi,eax
  40e81d:	es int3 
  40e81f:	fdivr  DWORD PTR [edi]
  40e821:	je     0x40e7ae
  40e823:	je     0x40e834
  40e825:	xor    al,0x45
  40e827:	bound  ecx,QWORD PTR [ecx+ecx*8+0x32213a55]
  40e82e:	or     DWORD PTR [eax-0x3ab87038],esp
  40e834:	test   ebp,eax
  40e836:	sub    al,0xc9
  40e838:	dec    esp
  40e839:	aas    
  40e83a:	push   ds
  40e83b:	cmc    
  40e83c:	(bad)  
  40e83d:	fnstsw WORD PTR [esi+0x7a7a490c]
  40e843:	shr    DWORD PTR [esi],1
  40e845:	mov    esi,0x8e400c0
  40e84a:	adc    eax,0x6b75c48b
  40e84f:	adc    dh,BYTE PTR [esi]
  40e851:	xor    bh,BYTE PTR [esi+edx*2-0x7f]
  40e855:	mov    ds:0xe627b32b,al
  40e85a:	xchg   esi,eax
  40e85b:	inc    esi
  40e85c:	data16 ins BYTE PTR es:[edi],dx
  40e85e:	pop    esi
  40e85f:	lea    ebx,[edx-0x45]
  40e862:	frstor [edi-0x75]
  40e865:	repnz push ebp
  40e867:	inc    esi
  40e868:	idiv   DWORD PTR [ebx+edi*1+0x0]
  40e86c:	test   al,0x1d
  40e86e:	ret    
  40e86f:	jae    0x40e8e3
  40e871:	ins    DWORD PTR es:[edi],dx
  40e872:	mov    cl,0x6c
  40e874:	outs   dx,BYTE PTR ds:[esi]
  40e875:	add    ah,0x13
  40e878:	gs push ds
  40e87a:	test   DWORD PTR [ecx],0xcf80790e
  40e880:	cwde   
  40e881:	and    ebx,DWORD PTR [esi]
  40e883:	push   edx
  40e884:	call   0xb2406ac6
  40e889:	push   ss
  40e88a:	mov    ebp,0x69dc5f43
  40e88f:	pop    ecx
  40e890:	sub    al,0x1e
  40e892:	lahf   
  40e893:	lods   eax,DWORD PTR ds:[esi]
  40e894:	xchg   ecx,eax
  40e895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e896:	lods   eax,DWORD PTR ds:[esi]
  40e897:	xchg   edx,eax
  40e898:	(bad)  
  40e899:	(bad)  
  40e89a:	jbe    0x40e845
  40e89c:	in     eax,dx
  40e89d:	or     BYTE PTR [esi-0x47],0xc2
  40e8a1:	mov    dl,0x6
  40e8a3:	adc    ch,bh
  40e8a5:	push   edx
  40e8a6:	jmp    0x4e4a777b
  40e8ab:	(bad)  
  40e8ac:	rcl    cl,0xf5
  40e8af:	ds fsubp st(4),st
  40e8b2:	fisubr DWORD PTR [esi+ebx*4-0x4b]
  40e8b6:	idiv   esi
  40e8b8:	and    eax,0xe56dd97a
  40e8bd:	pusha  
  40e8be:	shr    DWORD PTR [eax-0x88b3937],1
  40e8c4:	test   BYTE PTR [esi*2-0x6aff6578],bh
  40e8cb:	dec    eax
  40e8cc:	test   eax,0x641e300d
  40e8d1:	loop   0x40e853
  40e8d3:	loope  0x40e91a
  40e8d5:	into   
  40e8d6:	mov    edx,0x3168254e
  40e8db:	push   esp
  40e8dc:	leave  
  40e8dd:	div    BYTE PTR [ebx]
  40e8df:	add    al,0xde
  40e8e1:	lods   al,BYTE PTR ds:[esi]
  40e8e2:	sbb    DWORD PTR [edx*4+0x238f56f5],ebp
  40e8e9:	stc    
  40e8ea:	mov    ah,0xae
  40e8ec:	add    BYTE PTR [ebx+eiz*8-0x60],al
  40e8f0:	imul   esi,DWORD PTR [edi-0x544f0037],0xb5ed41f3
  40e8fa:	xor    ebp,DWORD PTR [edi]
  40e8fc:	mov    DWORD PTR [ecx],0xabb9ed48
  40e902:	xchg   esp,eax
  40e903:	int    0x83
  40e905:	xor    BYTE PTR [ebx],al
  40e907:	mov    dl,0x3e
  40e909:	jge    0x40e975
  40e90b:	inc    esp
  40e90c:	icebp  
  40e90d:	cmp    BYTE PTR [ecx+0x25],ch
  40e910:	loop   0x40e97c
  40e912:	in     al,0x84
  40e914:	or     al,0x6b
  40e916:	mov    esp,0x634759d5
  40e91b:	pop    ds
  40e91c:	out    dx,eax
  40e91d:	enter  0x3674,0xc8
  40e921:	pop    eax
  40e922:	cmc    
  40e923:	push   esp
  40e924:	push   cs
  40e925:	push   0xffffffe3
  40e927:	aam    0x78
  40e929:	cmp    bh,0x92
  40e92c:	aam    0x20
  40e92e:	cs inc esp
  40e930:	stos   DWORD PTR es:[edi],eax
  40e931:	les    esp,FWORD PTR [edx+0x7cb29dc]
  40e937:	sbb    al,0xdd
  40e939:	psrlq  mm5,mm1
  40e93c:	or     al,0x28
  40e93e:	pop    ds
  40e93f:	and    DWORD PTR [ebx],ebx
  40e941:	dec    esp
  40e942:	stos   BYTE PTR es:[edi],al
  40e943:	cmp    esp,eax
  40e945:	aas    
  40e946:	dec    ebx
  40e947:	jp     0x40e947
  40e949:	out    dx,al
  40e94a:	call   0x762a6da3
  40e94f:	fstp   QWORD PTR [edx-0x4d0cbc81]
  40e955:	nop
  40e956:	sub    eax,0xd7abf242
  40e95b:	mov    dh,0x15
  40e95d:	inc    edi
  40e95e:	adc    dl,BYTE PTR [ecx]
  40e960:	and    al,0xd1
  40e962:	mov    ebp,0xc885f8fb
  40e967:	mov    WORD PTR [eax+0x1c255d64],fs
  40e96d:	lods   eax,DWORD PTR ds:[esi]
  40e96e:	or     BYTE PTR ds:0x8f50d8ac,ah
  40e974:	ins    DWORD PTR es:[edi],dx
  40e975:	cmp    al,0x84
  40e977:	dec    edi
  40e978:	xchg   ebx,eax
  40e979:	sbb    BYTE PTR [edi-0x21],ah
  40e97c:	mov    esi,0xf44381d0
  40e981:	mov    bl,0x4d
  40e983:	mov    edx,0x50a9a5b1
  40e988:	xor    esi,DWORD PTR [ecx-0x43]
  40e98b:	jae    0x40e955
  40e98d:	sub    BYTE PTR [ebp-0x22be3197],0xd
  40e994:	cli    
  40e995:	sbb    eax,0x8d08dbc4
  40e99a:	je     0x40e926
  40e99c:	in     eax,0x46
  40e99e:	jmp    0x40e9c0
  40e9a0:	pushf  
  40e9a1:	adc    dl,cl
  40e9a3:	in     eax,0x86
  40e9a5:	dec    edx
  40e9a6:	mov    al,ds:0x29c24178
  40e9ab:	xchg   ebp,eax
  40e9ac:	and    BYTE PTR [ebx+ebx*8+0x6a],bl
  40e9b0:	dec    eax
  40e9b1:	fs sbb esp,ebp
  40e9b4:	shl    DWORD PTR [esi],1
  40e9b6:	in     al,0xdc
  40e9b8:	lock xchg edi,eax
  40e9ba:	ror    ebx,cl
  40e9bc:	rol    BYTE PTR [edx-0x56ad590d],1
  40e9c2:	cmp    BYTE PTR [ecx],ch
  40e9c4:	xchg   BYTE PTR [eax+0x65eccec9],dh
  40e9ca:	retf   
  40e9cb:	xor    ebx,esp
  40e9cd:	stc    
  40e9ce:	xchg   DWORD PTR [ebp-0x4],esi
  40e9d1:	lahf   
  40e9d2:	push   ds
  40e9d3:	or     al,0xd1
  40e9d5:	ins    BYTE PTR es:[edi],dx
  40e9d6:	sysexit 
  40e9d8:	adc    edx,DWORD PTR [ecx+0x43]
  40e9db:	adc    DWORD PTR [ecx+edi*8-0x5f93c1cb],ecx
  40e9e2:	call   0x408ffa42
  40e9e7:	dec    ebp
  40e9e8:	test   al,0x6d
  40e9ea:	cmc    
  40e9eb:	nop
  40e9ec:	dec    ebx
  40e9ed:	jmp    0x1fcf3b1f
  40e9f2:	mov    ecx,0x48f5e337
  40e9f7:	mov    ebp,0x455abf8e
  40e9fc:	mov    bl,0xfe
  40e9fe:	ret    
  40e9ff:	iret   
  40ea00:	out    dx,eax
  40ea01:	or     eax,0xc6c3864e
  40ea06:	stos   DWORD PTR es:[edi],eax
  40ea07:	xor    al,0x8b
  40ea09:	jns    0x40ea0c
  40ea0b:	lds    edx,FWORD PTR [edi-0x4a0a4789]
  40ea11:	nop
  40ea12:	mov    esp,DWORD PTR [ebx+0x0]
  40ea15:	jmp    0x91dd:0x7f708634
  40ea1c:	cmp    dl,BYTE PTR [edx+0x9]
  40ea1f:	mov    esp,0x714f08d
  40ea24:	lock inc ebp
  40ea26:	lods   eax,DWORD PTR ds:[esi]
  40ea27:	push   esp
  40ea28:	jno    0x40ea35
  40ea2a:	aas    
  40ea2b:	pop    ebx
  40ea2c:	mov    dh,cl
  40ea2e:	aas    
  40ea2f:	div    DWORD PTR [esi-0x6d]
  40ea32:	pop    ebp
  40ea33:	jmp    0x5be7:0x8cb45ec5
  40ea3a:	fwait
  40ea3b:	shr    DWORD PTR [eax+0x878fe47],0x7b
  40ea42:	int    0x68
  40ea44:	out    dx,eax
  40ea45:	out    0xd7,eax
  40ea47:	mov    ecx,0x2517cb69
  40ea4c:	lahf   
  40ea4d:	xlat   BYTE PTR ds:[ebx]
  40ea4e:	mov    ebp,DWORD PTR [eax+0x4940fd51]
  40ea54:	jge    0x40ea1d
  40ea56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea57:	jno    0x40ea91
  40ea59:	push   ebx
  40ea5a:	out    dx,al
  40ea5b:	int3   
  40ea5c:	mov    ebp,0x34ebfd1c
  40ea61:	mov    al,0x21
  40ea63:	shl    BYTE PTR [esi],cl
  40ea65:	out    dx,eax
  40ea66:	mov    ch,0xa2
  40ea68:	push   eax
  40ea69:	sar    BYTE PTR [ecx],0x16
  40ea6c:	std    
  40ea6d:	outs   dx,BYTE PTR ds:[esi]
  40ea6e:	inc    edx
  40ea6f:	ins    BYTE PTR es:[edi],dx
  40ea70:	test   eax,0x4c70bb01
  40ea75:	int3   
  40ea76:	mov    esp,0x64e4ba86
  40ea7b:	mov    ecx,DWORD PTR [esi]
  40ea7d:	or     eax,esp
  40ea7f:	xchg   DWORD PTR [esi+0x110d0c3d],edx
  40ea85:	xchg   esp,eax
  40ea86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea87:	stc    
  40ea88:	push   eax
  40ea89:	ret    0xd0d0
  40ea8c:	sub    eax,0xf253798b
  40ea91:	popf   
  40ea92:	or     ebp,DWORD PTR [eax]
  40ea94:	and    cl,BYTE PTR [esp+edi*1-0x2813281e]
  40ea9b:	mov    cl,0xf5
  40ea9d:	sbb    eax,0xb349eeca
  40eaa2:	loope  0x40eaf1
  40eaa4:	sub    cl,al
  40eaa6:	std    
  40eaa7:	sbb    al,0x55
  40eaa9:	sti    
  40eaaa:	mov    cl,BYTE PTR [ecx+0x50a8f59f]
  40eab0:	jp     0x40ea4e
  40eab2:	add    al,0x32
  40eab4:	mov    al,ds:0x4da50cbe
  40eab9:	aaa    
  40eaba:	clc    
  40eabb:	sbb    al,0x87
  40eabd:	out    0x93,eax
  40eabf:	add    al,0x40
  40eac1:	dec    esi
  40eac2:	push   ebp
  40eac3:	(bad)  
  40eac4:	iret   
  40eac5:	shl    BYTE PTR [eax-0x339afbf3],cl
  40eacb:	pop    es
  40eacc:	mov    ds:0x2cbbbf76,eax
  40ead1:	add    BYTE PTR [eax],bh
  40ead3:	jno    0x40eaaa
  40ead5:	in     al,dx
  40ead6:	and    eax,ebx
  40ead8:	outs   dx,DWORD PTR ds:[esi]
  40ead9:	sbb    dh,BYTE PTR [esi]
  40eadb:	imul   sp,WORD PTR [edi-0x63],0xffe1
  40eae0:	icebp  
  40eae1:	push   ebp
  40eae2:	mov    ecx,0x9d52d3c7
  40eae7:	mov    bl,0xd8
  40eae9:	mov    WORD PTR [ebx-0x5f2fd00e],gs
  40eaef:	loop   0x40eab3
  40eaf1:	cdq    
  40eaf2:	and    ebx,DWORD PTR [ebp-0x23]
  40eaf5:	inc    eax
  40eaf6:	test   ecx,ebx
  40eaf8:	mov    dl,0xc0
  40eafa:	push   edx
  40eafb:	mov    bh,0xcd
  40eafd:	xchg   ecx,eax
  40eafe:	or     eax,0x41a121b4
  40eb03:	jecxz  0x40eb5e
  40eb05:	shld   DWORD PTR [edi],esp,0x1c
  40eb09:	or     DWORD PTR [ebp+0x47],edi
  40eb0c:	lahf   
  40eb0d:	imul   DWORD PTR ds:[eax+0x6fc688a4]
  40eb14:	fmul   DWORD PTR [eax+0x2bfd33e9]
  40eb1a:	inc    edx
  40eb1b:	ins    BYTE PTR es:[edi],dx
  40eb1c:	push   edi
  40eb1d:	jb     0x40eb5e
  40eb1f:	js     0x40eb53
  40eb21:	mov    edi,0xd9badba3
  40eb26:	sub    ebp,ebx
  40eb28:	jmp    0x9a61dc83
  40eb2d:	jnp    0x40ead7
  40eb2f:	mov    esi,0x1aaab901
  40eb34:	push   0xffffff83
  40eb36:	aad    0x2f
  40eb38:	push   ebx
  40eb39:	xlat   BYTE PTR ds:[ebx]
  40eb3a:	das    
  40eb3b:	xor    DWORD PTR [ebx-0x32],0xffffff8e
  40eb3f:	add    al,0x48
  40eb41:	mov    dh,0x9
  40eb43:	mov    dh,0xf2
  40eb45:	sbb    DWORD PTR [eax],0x394cb14d
  40eb4b:	hlt    
  40eb4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb4d:	mov    cl,0x8b
  40eb4f:	jge    0x40eb3b
  40eb51:	mov    al,ds:0x74a4564a
  40eb56:	xchg   esi,esp
  40eb58:	jecxz  0x40eba6
  40eb5a:	push   esp
  40eb5b:	fcmovb st,st(6)
  40eb5d:	cmp    eax,0xe7fadd7c
  40eb62:	mov    cl,0xd7
  40eb64:	sti    
  40eb65:	sub    ecx,DWORD PTR [edi+0xe]
  40eb68:	jno    0x40eb94
  40eb6a:	xchg   DWORD PTR [eax],eax
  40eb6c:	fidiv  WORD PTR [esp+esi*2+0x45]
  40eb70:	sbb    DWORD PTR [ecx],ebx
  40eb72:	int    0x86
  40eb74:	out    dx,al
  40eb75:	push   ds
  40eb76:	test   BYTE PTR [edi-0x16],dl
  40eb79:	jge    0x40eb93
  40eb7b:	lods   al,BYTE PTR ds:[esi]
  40eb7c:	push   ecx
  40eb7d:	pusha  
  40eb7e:	dec    esp
  40eb7f:	fist   DWORD PTR [ebp-0x5b]
  40eb82:	and    eax,0xc8a976b3
  40eb87:	sbb    al,0xcc
  40eb89:	popa   
  40eb8a:	cwde   
  40eb8b:	jl     0x40eb51
  40eb8d:	ds shr dh,1
  40eb90:	call   0x77c0:0xdb1b59ab
  40eb97:	jle    0x40ebb4
  40eb99:	call   0xc6ff843a
  40eb9e:	js     0x40eb69
  40eba0:	pushf  
  40eba1:	in     al,0xc4
  40eba3:	sahf   
  40eba4:	dec    edi
  40eba5:	xchg   DWORD PTR [esi-0x57d29c07],edx
  40ebab:	jge    0x40eb74
  40ebad:	out    dx,eax
  40ebae:	inc    edi
  40ebaf:	jmp    0x75ae:0xe690190e
  40ebb6:	mov    ebx,0x3632f6ea
  40ebbb:	ins    BYTE PTR es:[edi],dx
  40ebbc:	arpl   WORD PTR [ecx],bx
  40ebbe:	rcr    bh,0x52
  40ebc1:	outs   dx,BYTE PTR ds:[esi]
  40ebc2:	push   ds
  40ebc3:	out    0xe0,eax
  40ebc5:	mov    esi,esp
  40ebc7:	into   
  40ebc8:	stc    
  40ebc9:	lahf   
  40ebca:	mov    bl,0xf1
  40ebcc:	mov    ah,0xbb
  40ebce:	jnp    0x40ec2b
  40ebd0:	ret    
  40ebd1:	push   0x6e
  40ebd3:	adc    BYTE PTR [ebx-0x271e193a],bh
  40ebd9:	pushf  
  40ebda:	icebp  
  40ebdb:	fwait
  40ebdc:	retf   0xa297
  40ebdf:	and    dl,cl
  40ebe1:	lds    ebx,FWORD PTR [ebp+0xe3117a5]
  40ebe7:	ret    0x678d
  40ebea:	loop   0x40ebe5
  40ebec:	add    eax,0xf0b75145
  40ebf1:	xor    al,0xbb
  40ebf3:	jo     0x40ebb7
  40ebf5:	imul   edx,DWORD PTR [ebp-0x29],0xffffffa8
  40ebf9:	lods   eax,DWORD PTR ds:[esi]
  40ebfa:	shl    DWORD PTR [edx],cl
  40ebfc:	jge    0x40ebf4
  40ebfe:	sub    eax,0xbfb66382
  40ec03:	ds jmp 0x40eb9b
  40ec06:	call   0xd586:0xd940a054
  40ec0d:	out    dx,eax
  40ec0e:	in     eax,0xc3
  40ec10:	sbb    al,0xb6
  40ec12:	pop    esi
  40ec13:	(bad)  
  40ec14:	mov    bh,0x1b
  40ec16:	cmc    
  40ec17:	jae    0x40ec3b
  40ec19:	loope  0x40ec3c
  40ec1b:	and    DWORD PTR [edi+0x10],0x4e
  40ec1f:	pop    ebp
  40ec20:	xchg   ebx,eax
  40ec21:	out    0x81,al
  40ec23:	xor    DWORD PTR [edx],0x5ad93aae
  40ec29:	mov    ebp,0x6f45bfd
  40ec2e:	and    al,BYTE PTR [eax]
  40ec30:	mov    eax,ds
  40ec32:	bswap  esi
  40ec34:	mov    BYTE PTR [esi+0x3f],ah
  40ec37:	xor    ebp,DWORD PTR [edx]
  40ec39:	out    0xef,eax
  40ec3b:	dec    si
  40ec3d:	push   esp
  40ec3e:	test   eax,0xab766a39
  40ec43:	fistp  DWORD PTR [edi]
  40ec45:	and    bl,BYTE PTR [eax]
  40ec47:	leave  
  40ec48:	loopne 0x40ebd1
  40ec4a:	xor    al,0x89
  40ec4c:	xchg   edx,eax
  40ec4d:	(bad)
  40ec51:	sti    
  40ec52:	push   0x22
  40ec54:	cmp    BYTE PTR [eax+0x6e72dab6],al
  40ec5a:	inc    esi
  40ec5b:	mov    al,0xf5
  40ec5d:	sbb    al,0xec
  40ec5f:	loopne 0x40ec0e
  40ec61:	xlat   BYTE PTR ds:[ebx]
  40ec62:	sbb    esp,DWORD PTR [eax+edi*4+0x31f87fe6]
  40ec69:	mov    ds:0x455a6b78,eax
  40ec6e:	push   ds
  40ec6f:	or     eax,edx
  40ec71:	mov    bh,0x26
  40ec73:	pop    esp
  40ec74:	xchg   ch,bl
  40ec76:	daa    
  40ec77:	call   0xbe23002f
  40ec7c:	es stos DWORD PTR es:[edi],eax
  40ec7e:	out    0x94,al
  40ec80:	dec    esi
  40ec81:	ror    eax,1
  40ec83:	jnp    0x40ec1c
  40ec85:	popa   
  40ec86:	sub    BYTE PTR [eax],dl
  40ec88:	je     0x40ec42
  40ec8a:	push   eax
  40ec8b:	mov    ah,0x49
  40ec8d:	jbe    0x40ecec
  40ec8f:	mov    esi,0xa758eaf7
  40ec94:	loope  0x40ec31
  40ec96:	iret   
  40ec97:	cli    
  40ec98:	loope  0x40ec4d
  40ec9a:	pop    ebp
  40ec9b:	sbb    BYTE PTR [eax],0xff
  40ec9e:	add    cl,bh
  40eca0:	scas   al,BYTE PTR es:[edi]
  40eca1:	ja     0x40ecf1
  40eca3:	int3   
  40eca4:	mov    dl,0x77
  40eca6:	inc    eax
  40eca7:	mov    WORD PTR [edi],cs
  40eca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecaa:	mov    ecx,0x4d6b79d5
  40ecaf:	inc    esi
  40ecb0:	and    edi,DWORD PTR [ecx]
  40ecb2:	and    eax,0x2334575a
  40ecb7:	sbb    ah,BYTE PTR [edx]
  40ecb9:	push   ecx
  40ecba:	daa    
  40ecbb:	push   esp
  40ecbc:	test   edx,0xa9565354
  40ecc2:	lahf   
  40ecc3:	mov    ebx,0x97181429
  40ecc8:	cmp    BYTE PTR [eax],0x8c
  40eccb:	pop    es
  40eccc:	imul   esp,DWORD PTR [eax-0x6d],0xffffffba
  40ecd0:	(bad)  [edi]
  40ecd2:	std    
  40ecd3:	sbb    esi,DWORD PTR [ecx]
  40ecd5:	mov    al,ds:0xb1b0dfe1
  40ecda:	mov    eax,0xb1077d3f
  40ecdf:	lds    ebx,FWORD PTR [edx+0x73]
  40ece2:	in     eax,dx
  40ece3:	add    BYTE PTR [esi+ebp*8+0x4c],ah
  40ece7:	std    
  40ece8:	(bad)  
  40ece9:	pop    ds
  40ecea:	add    al,0x53
  40ecec:	adc    eax,0x4f97e3d3
  40ecf1:	fs inc esp
  40ecf3:	cmc    
  40ecf4:	mov    ds:0xa4219f0e,eax
  40ecf9:	adc    bh,BYTE PTR [edi]
  40ecfb:	mov    eax,ds:0x7374d96e
  40ed00:	out    0x8,al
  40ed02:	daa    
  40ed03:	rol    ch,cl
  40ed05:	pop    ebp
  40ed06:	sbb    ecx,ebx
  40ed08:	repz adc esi,esp
  40ed0b:	pop    ebp
  40ed0c:	aaa    
  40ed0d:	pusha  
  40ed0e:	mov    ds:0xc99dfc4,al
  40ed13:	jo     0x40ecea
  40ed15:	loopne 0x40ecea
  40ed17:	jo     0x40ecd4
  40ed19:	out    dx,al
  40ed1a:	push   esi
  40ed1b:	mov    bl,0xa1
  40ed1d:	shr    DWORD PTR [ecx-0xfe09716],0x20
  40ed24:	xor    eax,0xb8095c1d
  40ed29:	das    
  40ed2a:	ss clc 
  40ed2c:	scas   al,BYTE PTR es:[edi]
  40ed2d:	daa    
  40ed2e:	jp     0x40ecf5
  40ed30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed31:	fsub   DWORD PTR [eax]
  40ed33:	inc    esp
  40ed34:	sti    
  40ed35:	cdq    
  40ed36:	cmc    
  40ed37:	xchg   edx,eax
  40ed38:	int3   
  40ed39:	out    0x7f,al
  40ed3b:	out    dx,eax
  40ed3c:	adc    BYTE PTR [esi-0x50],al
  40ed3f:	ret    0x7884
  40ed42:	ret    
  40ed43:	sahf   
  40ed44:	push   ds
  40ed45:	ins    BYTE PTR es:[edi],dx
  40ed46:	in     al,dx
  40ed47:	sahf   
  40ed48:	add    eax,DWORD PTR [ebp+0x7adaeaf0]
  40ed4e:	mov    edi,0x8c783355
  40ed53:	adc    bl,BYTE PTR [edx+0x329bcf49]
  40ed59:	mov    edx,DWORD PTR [ebx+ebx*1+0x6e400e98]
  40ed60:	sub    BYTE PTR cs:[eax-0x46],al
  40ed64:	push   0xfa28d985
  40ed69:	ret    
  40ed6a:	adc    BYTE PTR ds:0xf195547e,dl
  40ed70:	jecxz  0x40edb0
  40ed72:	sub    ebx,DWORD PTR [ecx*4+0x5c7771b]
  40ed79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed7a:	rcr    DWORD PTR [edi+0x4304f66c],1
  40ed80:	js     0x40ed10
  40ed82:	lahf   
  40ed83:	hlt    
  40ed84:	out    dx,al
  40ed85:	pop    esi
  40ed86:	pop    eax
  40ed87:	aas    
  40ed88:	inc    esi
  40ed89:	mov    bh,0x60
  40ed8b:	or     ebx,DWORD PTR [eax]
  40ed8d:	jle    0x40ee02
  40ed8f:	cmp    al,dh
  40ed91:	rcr    al,1
  40ed93:	(bad)  
  40ed95:	mov    al,0xbf
  40ed97:	xchg   esi,eax
  40ed98:	mov    eax,0x37071af9
  40ed9d:	call   0xe7bba36d
  40eda2:	cli    
  40eda3:	call   0xce5a:0x97317b8f
  40edaa:	es push eax
  40edac:	inc    esi
  40edad:	add    BYTE PTR [edi+0x384e875],bl
  40edb3:	loopne 0x40edda
  40edb5:	or     al,0xbd
  40edb7:	or     al,0xc
  40edb9:	lods   eax,DWORD PTR ds:[esi]
  40edba:	call   0x258b022e
  40edbf:	cli    
  40edc0:	xor    al,0x41
  40edc2:	aas    
  40edc3:	jg     0x40ed77
  40edc5:	adc    DWORD PTR [ecx-0x46b4fb78],esi
  40edcb:	leave  
  40edcc:	cld    
  40edcd:	dec    ebx
  40edce:	jo     0x40ed75
  40edd0:	or     ebp,DWORD PTR [ebx]
  40edd2:	jecxz  0x40ee3e
  40edd4:	ror    DWORD PTR [esi+0x618e405a],1
  40edda:	or     BYTE PTR [eax+0x3bec676a],cl
  40ede0:	mov    esp,DWORD PTR [eax+0x52]
  40ede3:	repnz ins DWORD PTR es:[edi],dx
  40ede5:	jp     0x40ee02
  40ede7:	mov    ds:0x11ed6d4d,eax
  40edec:	fstp   QWORD PTR [ecx]
  40edee:	call   0x3e8987b2
  40edf3:	imul   edi,DWORD PTR [ecx-0x3b340896],0xba63423
  40edfd:	mov    edx,0x1a4cb582
  40ee02:	push   0xffffffb5
  40ee04:	xchg   BYTE PTR [eax-0x6b5153b3],ah
  40ee0a:	out    dx,al
  40ee0b:	retf   
  40ee0c:	mov    dh,dl
  40ee0e:	rol    edi,1
  40ee10:	xchg   edx,eax
  40ee11:	fistp  WORD PTR [edx+0xb]
  40ee14:	pop    ebp
  40ee15:	popa   
  40ee16:	cld    
  40ee17:	xor    DWORD PTR [edi],esi
  40ee19:	push   0x36
  40ee1b:	jae    0x40ee53
  40ee1d:	xor    al,0xd6
  40ee1f:	mov    DWORD PTR [esi+0x2e],esp
  40ee22:	ja     0x40ee30
  40ee24:	adc    al,0xa6
  40ee26:	retf   0x7105
  40ee29:	stos   DWORD PTR es:[edi],eax
  40ee2a:	shl    DWORD PTR [ecx+0x14],0xa4
  40ee2e:	in     al,0x34
  40ee30:	xchg   esi,eax
  40ee31:	and    eax,0xbb262be6
  40ee36:	dec    edi
  40ee37:	and    DWORD PTR [ebx],0x52499881
  40ee3d:	push   0x79bf4a1f
  40ee42:	push   esp
  40ee43:	cmp    DWORD PTR [eax-0x32],0xffffff9d
  40ee47:	fbstp  TBYTE PTR [esi]
  40ee49:	and    edx,edx
  40ee4b:	add    ah,BYTE PTR [esi]
  40ee4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee4e:	mov    bh,ch
  40ee50:	ret    
  40ee51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee52:	push   edi
  40ee53:	pop    edx
  40ee54:	aas    
  40ee55:	addr16 pop esi
  40ee57:	xor    al,0x69
  40ee59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee5a:	xor    ebp,DWORD PTR ds:0x789a22c6
  40ee60:	jnp    0x40ee49
  40ee62:	dec    ebx
  40ee63:	inc    esp
  40ee64:	pop    eax
  40ee65:	retf   
  40ee66:	xchg   edx,eax
  40ee67:	inc    esi
  40ee68:	adc    eax,DWORD PTR [eax-0x4dbadf0e]
  40ee6e:	xchg   edi,eax
  40ee6f:	add    eax,DWORD PTR [ebp-0x2a]
  40ee72:	lds    edx,FWORD PTR [eax]
  40ee74:	push   eax
  40ee75:	in     al,0xed
  40ee77:	mov    bh,0xec
  40ee79:	xor    DWORD PTR [edi+0x47],0xc9e9e412
  40ee80:	sbb    eax,0x7d18d03
  40ee85:	mov    WORD PTR [eax],ss
  40ee87:	jbe    0x40ee89
  40ee89:	pop    esi
  40ee8a:	and    ecx,DWORD PTR [edx]
  40ee8c:	mov    esp,fs
  40ee8e:	jl     0x40ee81
  40ee90:	scas   al,BYTE PTR es:[edi]
  40ee91:	popa   
  40ee92:	jl     0x40ee82
  40ee94:	imul   ebx,DWORD PTR [edx+0x5ff5a55a],0xfa028697
  40ee9e:	sahf   
  40ee9f:	add    eax,0xdc48d6b7
  40eea4:	or     al,0x7
  40eea6:	popf   
  40eea7:	mov    WORD PTR [ecx+0x51],?
  40eeaa:	pop    ss
  40eeab:	sbb    esp,eax
  40eead:	jmp    ebx
  40eeaf:	(bad)  [eax]
  40eeb1:	loopne 0x40ee9d
  40eeb3:	lods   al,BYTE PTR ds:[esi]
  40eeb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb5:	gs and eax,0xfa953561
  40eebb:	pop    ebx
  40eebc:	not    DWORD PTR [ecx-0x6d]
  40eebf:	mov    ds:0x641d2528,eax
  40eec4:	push   ds
  40eec5:	inc    esp
  40eec6:	(bad)
  40eec9:	and    ah,BYTE PTR [ebx-0x85a1bf7]
  40eecf:	inc    edx
  40eed0:	shr    ebp,1
  40eed2:	inc    eax
  40eed3:	addr16 dec edi
  40eed5:	mov    bh,0x20
  40eed7:	push   esp
  40eed8:	stos   BYTE PTR es:[edi],al
  40eed9:	xlat   BYTE PTR ds:[ebx]
  40eeda:	cmp    DWORD PTR [ebx-0x6c],esi
  40eedd:	pusha  
  40eede:	push   0x530af75e
  40eee3:	mov    ebp,0xe4a4ea49
  40eee8:	fld    st(2)
  40eeea:	test   DWORD PTR [edi+0xc80c24e],0x6e7b9ee2
  40eef4:	scas   al,BYTE PTR es:[edi]
  40eef5:	sti    
  40eef6:	xor    BYTE PTR [ecx+ebx*2],bl
  40eef9:	sub    BYTE PTR [edx+0x4c1bc054],cl
  40eeff:	mov    esp,0x5aee0e11
  40ef04:	(bad)  [edx]
  40ef06:	and    DWORD PTR [ebp+0x246ea157],0x9bd25a6f
  40ef10:	push   ds
  40ef11:	rol    DWORD PTR [edx+0x4aca6de7],1
  40ef17:	inc    BYTE PTR [ecx-0x666ba8a2]
  40ef1d:	lods   eax,DWORD PTR ds:[esi]
  40ef1f:	add    DWORD PTR [ebp+0x17f58af0],esp
  40ef25:	in     al,0x99
  40ef27:	xchg   BYTE PTR [esi],ah
  40ef29:	sub    ecx,DWORD PTR [edx+0x17cbfe2b]
  40ef2f:	add    al,0x67
  40ef31:	std    
  40ef32:	test   al,0xf7
  40ef34:	mov    esi,0xd3ae629d
  40ef39:	das    
  40ef3a:	cmp    al,0x16
  40ef3c:	lds    esp,FWORD PTR [edi-0x1c2bc7e6]
  40ef42:	mov    ds:0xb20f5a0a,eax
  40ef47:	push   eax
  40ef48:	push   bx
  40ef4a:	test   eax,0x57054e2f
  40ef4f:	push   ebx
  40ef50:	ret    
  40ef51:	scas   al,BYTE PTR es:[edi]
  40ef52:	adc    BYTE PTR [eax+edx*8-0x54],dl
  40ef56:	and    DWORD PTR [ecx-0x68c71cf5],edi
  40ef5c:	cmp    ecx,0xffffffef
  40ef5f:	xlat   BYTE PTR ds:[ebx]
  40ef60:	fldenv [edx]
  40ef62:	jns    0x40eef1
  40ef64:	mov    DWORD PTR [esi-0x7dc27f0c],ebx
  40ef6a:	call   0xfd42:0x8171f8d3
  40ef71:	xchg   esp,eax
  40ef72:	lahf   
  40ef73:	sbb    al,0x13
  40ef75:	in     al,dx
  40ef76:	push   ebp
  40ef77:	and    al,0x39
  40ef79:	pop    es
  40ef7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef7b:	dec    esp
  40ef7c:	lea    ebx,[ebp-0x493b2da3]
  40ef82:	das    
  40ef83:	js     0x40efe4
  40ef85:	cmp    BYTE PTR [esp+edi*8-0x67],bl
  40ef89:	push   esp
  40ef8a:	mov    ah,0x3f
  40ef8c:	mov    eax,0xbe37088f
  40ef91:	jle    0x40efb3
  40ef93:	cld    
  40ef94:	ficom  WORD PTR [ebp-0x39]
  40ef97:	(bad)  
  40ef98:	loop   0x40ef89
  40ef9a:	es leave 
  40ef9c:	or     BYTE PTR [esi-0x74b971d1],al
  40efa2:	cwde   
  40efa3:	scas   eax,DWORD PTR es:[edi]
  40efa4:	cmp    eax,0xa402f08c
  40efa9:	(bad)  
  40efaa:	out    dx,eax
  40efab:	inc    esp
  40efac:	cdq    
  40efad:	daa    
  40efae:	push   esi
  40efaf:	sub    eax,0xc2e39b9c
  40efb4:	jns    0x40ef54
  40efb6:	cdq    
  40efb7:	push   ecx
  40efb8:	jnp    0x40efa7
  40efba:	loop   0x40efb6
  40efbc:	gs pop edi
  40efbe:	lock cli 
  40efc0:	popa   
  40efc1:	mov    ebx,0x160741c5
  40efc6:	cmp    edx,esi
  40efc8:	jmp    0x40ef6d
  40efca:	adc    BYTE PTR [edx],bl
  40efcc:	pusha  
  40efcd:	out    dx,eax
  40efce:	cmp    eax,0xcf018519
  40efd3:	cmp    eax,0xa7e11b62
  40efd8:	enter  0x382,0x24
  40efdc:	xchg   esi,eax
  40efdd:	mov    ch,0xa1
  40efdf:	or     DWORD PTR [esi],edx
  40efe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efe2:	pop    esp
  40efe3:	fiadd  DWORD PTR ds:0xc667de5a
  40efe9:	xor    eax,0xca15d249
  40efee:	sti    
  40efef:	aas    
  40eff0:	lods   eax,DWORD PTR ds:[esi]
  40eff1:	pop    ebp
  40eff2:	pop    eax
  40eff3:	mov    dl,0x8c
  40eff5:	mov    ebp,0x578023bc
  40effa:	sub    esi,DWORD PTR gs:[edi]
  40effd:	arpl   WORD PTR ds:0x12421a23,di
  40f003:	lods   al,BYTE PTR fs:[esi]
  40f005:	call   0x904f332e
  40f00a:	push   ds
  40f00b:	mov    dh,0xf7
  40f00d:	hlt    
  40f00e:	pop    edx
  40f00f:	loop   0x40f01d
  40f011:	fcomp  DWORD PTR [esi+0x57]
  40f014:	lock xor esp,DWORD PTR [edx+0x28448f9b]
  40f01b:	sbb    BYTE PTR [ebx-0x1c06302a],0x69
  40f022:	jnp    0x40f03b
  40f024:	in     eax,dx
  40f025:	test   eax,0x7e7f09a9
  40f02a:	out    0xf,al
  40f02c:	retf   0x77f1
  40f02f:	out    0xa8,al
  40f031:	or     eax,0xc0834708
  40f036:	sub    BYTE PTR [edi+0xfff6ede],cl
  40f03c:	cmc    
  40f03d:	pop    ebp
  40f03e:	enter  0x329c,0xac
  40f042:	mov    al,0xb6
  40f044:	sub    DWORD PTR [esp+edi*2],esi
  40f047:	xchg   edi,eax
  40f048:	dec    ebp
  40f049:	add    dh,BYTE PTR [eax-0x58bb5713]
  40f04f:	call   FWORD PTR [esi+0x51]
  40f052:	inc    DWORD PTR [edi+0xd]
  40f055:	call   0xa10c:0xf51d61e9
  40f05c:	push   0x129f2fa1
  40f061:	or     DWORD PTR ds:0xc363c389,0xffffffa4
  40f068:	mov    bh,0xf6
  40f06a:	mov    ebx,0xcf644c1e
  40f06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f070:	(bad)  
  40f072:	pop    ecx
  40f073:	inc    esp
  40f074:	loopne 0x40f0b5
  40f076:	ss jmp 0x40f052
  40f079:	cmc    
  40f07a:	lods   al,BYTE PTR ds:[esi]
  40f07b:	sub    dh,BYTE PTR [ebp-0x1e]
  40f07e:	clc    
  40f07f:	outs   dx,BYTE PTR ds:[esi]
  40f080:	or     al,ch
  40f082:	shr    edx,0x46
  40f085:	loope  0x40f0ad
  40f087:	vmwrite eax,ecx
  40f08a:	aad    0xc3
  40f08c:	mov    eax,ds:0xd9f4500e
  40f091:	xlat   BYTE PTR ds:[ebx]
  40f092:	inc    esi
  40f093:	iret   
  40f094:	jne    0x40f0c0
  40f096:	inc    edx
  40f097:	scas   al,BYTE PTR es:[edi]
  40f098:	std    
  40f099:	inc    ebx
  40f09a:	add    al,0x9d
  40f09c:	jge    0x40f02b
  40f09e:	pusha  
  40f09f:	je     0x40f04d
  40f0a1:	pusha  
  40f0a2:	mov    DWORD PTR [ebp+ebx*4-0x3cc9b233],ebp
  40f0a9:	fst    DWORD PTR [ebx+0x61]
  40f0ac:	fidivr DWORD PTR [ebx]
  40f0ae:	adc    BYTE PTR [edx],ah
  40f0b0:	fbstp  TBYTE PTR [ecx+0x7872a3ff]
  40f0b6:	add    eax,0xf6dd762
  40f0bb:	push   ebp
  40f0bc:	dec    edx
  40f0bd:	and    al,0x60
  40f0bf:	stos   DWORD PTR es:[edi],eax
  40f0c0:	mov    eax,ds:0xb7642415
  40f0c5:	adc    eax,0x19a93595
  40f0ca:	mov    bh,0xb3
  40f0cc:	adc    DWORD PTR [ebp+0x2f],edx
  40f0cf:	pop    esp
  40f0d0:	mov    ds:0xfdc0982,eax
  40f0d5:	lock les esp,FWORD PTR [edx]
  40f0d8:	inc    ebx
  40f0d9:	xor    eax,0xf9dbc74c
  40f0de:	inc    ebp
  40f0df:	sbb    dl,BYTE PTR fs:[esi]
  40f0e2:	sbb    BYTE PTR ds:0x4ffb6c35,dh
  40f0e8:	sar    esp,1
  40f0ea:	xchg   edi,eax
  40f0eb:	mov    ebx,0x1c14ecd
  40f0f0:	int3   
  40f0f1:	pusha  
  40f0f2:	test   DWORD PTR [ecx+edi*4+0x3d],esi
  40f0f6:	add    BYTE PTR [ecx+0x137d663a],bh
  40f0fc:	add    al,0x62
  40f0fe:	ja     0x40f171
  40f100:	sub    BYTE PTR [esi+0x7c],ch
  40f103:	sti    
  40f104:	leave  
  40f105:	popf   
  40f106:	ret    0xf2b8
  40f109:	fnsave [ebx-0xd]
  40f10c:	adc    al,0x42
  40f10e:	fild   QWORD PTR [ecx+0x8feda2f]
  40f114:	xor    al,0x21
  40f116:	ret    0xd42a
  40f119:	mov    cl,0x10
  40f11b:	fdiv   QWORD PTR [ecx+edi*1+0x18]
  40f11f:	sti    
  40f120:	or     eax,DWORD PTR [eax+0x76eb3db0]
  40f126:	mov    ch,0xb2
  40f128:	mov    dh,0x50
  40f12a:	imul   ebx,DWORD PTR [eax-0x78e4ef97],0xfcc9e2a8
  40f134:	pop    ds
  40f135:	enter  0xac72,0x17
  40f139:	repnz cdq 
  40f13b:	or     al,0x64
  40f13d:	cmp    bh,bh
  40f13f:	dec    esp
  40f140:	sti    
  40f141:	pop    edx
  40f142:	loop   0x40f17c
  40f144:	mov    WORD PTR [edi+0x57d4f137],ds
  40f14a:	xor    BYTE PTR [edi],dl
  40f14c:	sub    bl,0x3d
  40f14f:	test   bh,dl
  40f151:	call   0x78ea:0x8b5af082
  40f158:	and    al,0xc7
  40f15a:	and    eax,0xfa48f1f8
  40f15f:	sbb    DWORD PTR [eax+0x6e2eb433],ecx
  40f165:	shl    BYTE PTR [ebx],1
  40f167:	ja     0x40f16d
  40f169:	fadd   DWORD PTR [esi]
  40f16b:	scas   eax,DWORD PTR es:[edi]
  40f16c:	sub    DWORD PTR [ecx],esp
  40f16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f16f:	(bad)  
  40f171:	sbb    al,0x22
  40f173:	xchg   DWORD PTR [ebp+ebx*8-0x59224bae],ecx
  40f17a:	sbb    ah,BYTE PTR [eax-0x1c]
  40f17d:	pop    ebp
  40f17e:	loop   0x40f11c
  40f180:	or     esi,DWORD PTR [edx+edx*2-0x70]
  40f184:	xchg   edi,eax
  40f185:	jo     0x40f1ab
  40f187:	jnp    0x40f19b
  40f189:	push   esp
  40f18b:	aas    
  40f18c:	sub    BYTE PTR [edx],bl
  40f18e:	shl    BYTE PTR [ecx+0xa],0x6b
  40f192:	repnz fild DWORD PTR [ecx+0x38]
  40f196:	jp     0x40f125
  40f198:	lods   eax,DWORD PTR ds:[esi]
  40f199:	(bad)  
  40f19a:	fbstp  TBYTE PTR [edi+edi*1+0x44917e26]
  40f1a1:	sbb    eax,0x3dd61848
  40f1a6:	inc    ecx
  40f1a7:	xchg   esi,eax
  40f1a8:	xchg   ecx,ebx
  40f1aa:	push   edi
  40f1ab:	push   0x37
  40f1ad:	and    al,0x41
  40f1af:	jo     0x40f162
  40f1b1:	lods   al,BYTE PTR ds:[esi]
  40f1b2:	jbe    0x40f222
  40f1b4:	cmp    eax,0x19957cf
  40f1b9:	lods   eax,DWORD PTR ds:[esi]
  40f1ba:	dec    ebp
  40f1bb:	sbb    al,0xa1
  40f1bd:	sub    eax,0xa0f1f992
  40f1c2:	mov    ch,BYTE PTR [ecx+edi*2+0x485105c1]
  40f1c9:	out    0xff,eax
  40f1cb:	jo     0x4c414912
  40f1d1:	push   ebp
  40f1d2:	jge    0x40f1c1
  40f1d4:	(bad)
  40f1d7:	adc    esp,DWORD PTR [edi-0x601fcf13]
  40f1dd:	(bad)  
  40f1de:	rol    bl,1
  40f1e0:	dec    ecx
  40f1e1:	push   ecx
  40f1e2:	aam    0xae
  40f1e4:	(bad)  
  40f1e5:	fisubr WORD PTR [ecx+edx*2-0x140d9d8]
  40f1ec:	(bad)  
  40f1ed:	mov    ?,WORD PTR [ecx-0x81ef5a6]
  40f1f3:	shl    eax,0xd0
  40f1f6:	xor    eax,0x74a5774e
  40f1fb:	les    edi,FWORD PTR [esi-0x41]
  40f1fe:	jne    0x40f27b
  40f200:	dec    ecx
  40f201:	sbb    bl,BYTE PTR [ebx]
  40f203:	sbb    al,0x56
  40f205:	js     0x40f258
  40f207:	sbb    eax,0x78aa58e2
  40f20c:	lock jl 0x40f23e
  40f20f:	pop    esi
  40f210:	dec    esi
  40f211:	repnz dec edx
  40f213:	jg     0x40f293
  40f215:	shl    BYTE PTR [ebx],1
  40f217:	pop    ecx
  40f218:	nop
  40f219:	fistp  WORD PTR [eax-0x74]
  40f21c:	push   ds
  40f21d:	out    dx,al
  40f21e:	push   0xbe3ff9fa
  40f223:	dec    ecx
  40f224:	enter  0x7570,0x5f
  40f228:	jo     0x40f260
  40f22a:	jnp    0x40f287
  40f22c:	imul   ebx,DWORD PTR [edi],0x47
  40f22f:	dec    ecx
  40f230:	sbb    BYTE PTR [esi+0x38],ah
  40f233:	jbe    0x40f1ba
  40f235:	inc    edx
  40f236:	mov    ds:0x14ad7903,eax
  40f23b:	add    al,0x8d
  40f23d:	mov    eax,0xb7c8ae0a
  40f242:	push   ecx
  40f243:	cmc    
  40f244:	and    DWORD PTR [eax-0x6e],esp
  40f247:	popa   
  40f248:	cwde   
  40f249:	cdq    
  40f24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f24b:	test   ch,ch
  40f24d:	mov    bl,cl
  40f24f:	adc    bh,cl
  40f251:	shl    BYTE PTR [ebx-0x45],0xd9
  40f255:	adc    BYTE PTR [ebx+0x2e],dh
  40f258:	cmp    eax,0xdb6aaa87
  40f25d:	shl    DWORD PTR [eax],1
  40f25f:	or     dl,0xbd
  40f262:	fstp   DWORD PTR [edx]
  40f264:	outs   dx,BYTE PTR ds:[esi]
  40f265:	sub    esp,DWORD PTR [ebx]
  40f267:	and    al,0x9b
  40f269:	pushf  
  40f26a:	outs   dx,DWORD PTR ds:[esi]
  40f26b:	pop    eax
  40f26c:	add    eax,0xfe77b57c
  40f271:	pop    ss
  40f272:	jo     0x40f271
  40f274:	sbb    BYTE PTR ds:0x5af9c4af,bl
  40f27a:	neg    DWORD PTR [eax-0x6f]
  40f27d:	pop    edx
  40f27e:	sbb    ecx,DWORD PTR [ebx-0x36]
  40f281:	stc    
  40f282:	fwait
  40f283:	push   ebp
  40f284:	sub    bl,BYTE PTR [ecx]
  40f286:	pop    ebx
  40f287:	xchg   edi,eax
  40f288:	xlat   BYTE PTR ds:[ebx]
  40f289:	sar    BYTE PTR [ebx+0xd],0xb4
  40f28d:	and    DWORD PTR [esi-0x7aa72f3],esp
  40f293:	mov    ch,0xc8
  40f295:	ds add al,0x11
  40f298:	mov    eax,0x4a404b16
  40f29d:	pop    eax
  40f29e:	pop    ebx
  40f29f:	cli    
  40f2a0:	jmp    0x36fa:0x8e9621b6
  40f2a7:	out    dx,al
  40f2a8:	xchg   BYTE PTR [ebp+0x678dcf23],bh
  40f2ae:	dec    eax
  40f2af:	stc    
  40f2b0:	jecxz  0x40f273
  40f2b2:	not    DWORD PTR [esi-0x556fe927]
  40f2b8:	je     0x40f337
  40f2ba:	sub    esi,DWORD PTR [ebx+0x37b2ab6a]
  40f2c0:	test   DWORD PTR [ebp+0x29],esp
  40f2c3:	outs   dx,BYTE PTR ds:[esi]
  40f2c4:	aam    0x5d
  40f2c6:	sbb    esp,DWORD PTR [eax]
  40f2c8:	add    eax,DWORD PTR [edx-0x44]
  40f2cb:	inc    eax
  40f2cc:	imul   eax,DWORD PTR [ebx],0x33f0d2a3
  40f2d2:	add    esi,DWORD PTR [ebp-0x4e3c58e5]
  40f2d8:	mov    esp,DWORD PTR [ecx-0x1e]
  40f2db:	jns    0x40f2d4
  40f2dd:	mov    eax,ds:0x23854383
  40f2e2:	in     al,0x40
  40f2e4:	or     BYTE PTR ds:0x7c17c8b3,cl
  40f2ea:	cmp    DWORD PTR [esi-0x600b03af],eax
  40f2f0:	sub    al,0xf4
  40f2f2:	scas   al,BYTE PTR es:[edi]
  40f2f3:	repz sub eax,DWORD PTR gs:[eax-0x7e]
  40f2f8:	sub    al,0xe
  40f2fa:	dec    esp
  40f2fb:	pop    ss
  40f2fc:	push   esi
  40f2fd:	push   ebx
  40f2fe:	mov    bl,0x73
  40f300:	fadd   DWORD PTR [edi-0xd]
  40f303:	imul   eax,DWORD PTR [eax+ebx*4],0xdd8a73c
  40f30a:	adc    ah,BYTE PTR [ecx]
  40f30c:	cdq    
  40f30d:	lock mov eax,ds:0x2c928f79
  40f313:	dec    edx
  40f314:	mov    ecx,0x4dc94f34
  40f319:	mov    cl,0x5c
  40f31b:	pushf  
  40f31c:	fsub   QWORD PTR [esi+0x622319c3]
  40f322:	jg     0x40f334
  40f324:	pusha  
  40f325:	jno    0x40f2e2
  40f327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f328:	(bad)  
  40f329:	int    0x54
  40f32b:	test   bh,0xa2
  40f32e:	aam    0x84
  40f330:	pop    ss
  40f331:	dec    ecx
  40f332:	fist   WORD PTR [esi+0x58]
  40f335:	shl    BYTE PTR [ebp+0xaef86ff],cl
  40f33b:	call   DWORD PTR [eax-0x40bfc695]
  40f341:	xor    bh,BYTE PTR [edi]
  40f343:	and    eax,0x9de31c7b
  40f348:	in     al,0x57
  40f34a:	mov    BYTE PTR [eax-0x5a06daf7],dl
  40f350:	push   0x85069dee
  40f355:	xlat   BYTE PTR ds:[ebx]
  40f356:	mov    ds:0x39dfe7f3,al
  40f35b:	daa    
  40f35c:	scas   al,BYTE PTR es:[edi]
  40f35d:	xchg   esp,eax
  40f35e:	aad    0x4f
  40f360:	jle    0x40f2f5
  40f362:	pusha  
  40f363:	add    esi,DWORD PTR [edi-0x4f4ad051]
  40f369:	pop    edi
  40f36a:	xlat   BYTE PTR ds:[ebx]
  40f36b:	xor    edi,DWORD PTR [ebp+0x29452650]
  40f371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f372:	push   esp
  40f373:	dec    ebp
  40f374:	sahf   
  40f375:	shl    ch,1
  40f377:	cmp    edi,eax
  40f379:	xor    ebp,DWORD PTR [esi-0x63]
  40f37c:	sub    BYTE PTR [ecx+0x759fba8a],dh
  40f382:	and    DWORD PTR [ecx-0x126d4845],esp
  40f388:	pushf  
  40f389:	out    0x83,eax
  40f38b:	ret    0xf3fe
  40f38e:	les    esp,FWORD PTR [ecx-0x5c]
  40f391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f392:	inc    ebx
  40f393:	xchg   esp,eax
  40f394:	test   al,0xc2
  40f396:	repz out 0x4d,eax
  40f399:	mov    ecx,0x692a130e
  40f39e:	das    
  40f39f:	mov    bl,0x19
  40f3a1:	dec    eax
  40f3a2:	cmp    al,0xd8
  40f3a4:	or     esi,edx
  40f3a6:	sbb    eax,0xd796fb05
  40f3ab:	mov    dh,BYTE PTR ds:0x21e5ae6f
  40f3b1:	pop    ss
  40f3b2:	cwde   
  40f3b3:	in     al,dx
  40f3b4:	push   es
  40f3b5:	dec    esp
  40f3b6:	mov    al,ds:0xd8011c7c
  40f3bb:	mov    bh,0x77
  40f3bd:	mov    edx,0xec0c234c
  40f3c2:	dec    ebp
  40f3c3:	test   DWORD PTR [edi+ecx*1-0x64],edx
  40f3c7:	push   ecx
  40f3c8:	jmp    0x8bfc:0x1a3af3dd
  40f3cf:	mov    ch,0x73
  40f3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3d2:	xchg   esp,eax
  40f3d3:	jns    0x40f37e
  40f3d5:	push   ss
  40f3d6:	mov    dl,0x5e
  40f3d8:	mov    edi,?
  40f3da:	ret    
  40f3db:	mov    ebp,fs
  40f3dd:	mov    ah,BYTE PTR [edx]
  40f3df:	push   ebp
  40f3e0:	pop    es
  40f3e1:	dec    edi
  40f3e2:	inc    ebx
  40f3e3:	add    ebp,ecx
  40f3e5:	push   ds
  40f3e6:	rep outs dx,BYTE PTR ds:[esi]
  40f3e8:	mov    cl,BYTE PTR [eax+esi*4+0x700a8a]
  40f3ef:	jecxz  0x40f375
  40f3f1:	(bad)  
  40f3f2:	out    0xc8,eax
  40f3f4:	jns    0x40f3e9
  40f3f6:	jge    0x40f3ae
  40f3f8:	fimul  DWORD PTR [ebp+0x6e031d07]
  40f3fe:	or     al,0x23
  40f400:	leave  
  40f401:	jecxz  0x40f445
  40f403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f404:	push   0x2f2e4d1e
  40f409:	scas   al,BYTE PTR es:[edi]
  40f40a:	inc    esp
  40f40b:	ss cdq 
  40f40d:	test   DWORD PTR [ebx+0x4bf4505],ecx
  40f413:	and    DWORD PTR [ebp-0x1a59ee57],esi
  40f419:	sub    bl,ah
  40f41b:	out    0xf9,al
  40f41d:	sbb    BYTE PTR [eax-0x121835c2],dl
  40f423:	ss idiv bl
  40f426:	test   BYTE PTR [esi+0x45],dl
  40f429:	addr16 dec esp
  40f42b:	add    eax,0x5f610ce7
  40f430:	test   eax,0xb7e897c0
  40f435:	test   BYTE PTR [esi-0x1e56170b],0x89
  40f43c:	mov    ?,WORD PTR [ebx+eiz*4+0x1c]
  40f440:	sub    ah,ch
  40f442:	xchg   DWORD PTR [edi-0x2d],eax
  40f445:	fiadd  DWORD PTR ds:0xfbe62980
  40f44b:	adc    esp,DWORD PTR [eax-0x13]
  40f44e:	mov    esp,0x64ca76ad
  40f453:	jmp    0xbd23:0xfc09ed6b
  40f45a:	(bad)  
  40f45b:	lahf   
  40f45c:	push   edx
  40f45d:	push   0xa328391e
  40f462:	jae    0x40f495
  40f464:	xor    BYTE PTR [ebx-0x75f7e5cb],bl
  40f46a:	(bad)  
  40f46b:	sub    ebp,DWORD PTR [edx+eax*2]
  40f46e:	cmp    BYTE PTR [edi-0x32be539a],0x3e
  40f475:	pop    edx
  40f476:	adc    DWORD PTR [esi-0x20],eax
  40f479:	loopne 0x40f4a0
  40f47b:	cmp    BYTE PTR [ecx-0x2c18cb3f],dl
  40f481:	lods   eax,DWORD PTR ds:[esi]
  40f482:	fld    DWORD PTR [edx+0x61]
  40f485:	das    
  40f486:	or     al,0x5f
  40f488:	or     BYTE PTR [esi],ah
  40f48a:	aad    0x8e
  40f48c:	mov    al,0xbf
  40f48e:	cli    
  40f48f:	sbb    BYTE PTR [ebp-0x25c14d84],0x46
  40f496:	inc    edi
  40f497:	xor    eax,0xd03fe114
  40f49c:	mov    bh,0xa7
  40f49e:	and    al,0x3
  40f4a0:	xchg   edi,eax
  40f4a1:	aaa    
  40f4a2:	sub    edx,DWORD PTR [eax]
  40f4a4:	mov    ds:0xc0700621,al
  40f4a9:	cmp    BYTE PTR [ecx-0x48],0x36
  40f4ad:	fadd   st(5),st
  40f4af:	cmp    BYTE PTR [ebx-0x2772058e],ah
  40f4b5:	scas   al,BYTE PTR es:[edi]
  40f4b6:	inc    esp
  40f4b7:	ja     0x40f43c
  40f4b9:	pop    ds
  40f4ba:	sub    dh,cl
  40f4bc:	rol    DWORD PTR [ebx+ebx*8+0x6010b970],0x33
  40f4c4:	mov    dl,0x5d
  40f4c6:	pushf  
  40f4c7:	out    dx,al
  40f4c8:	adc    edx,DWORD PTR [ebx]
  40f4ca:	and    BYTE PTR [edi+ebp*1],ah
  40f4cd:	sub    dh,0x1b
  40f4d0:	sar    BYTE PTR [eax+0xc],0x56
  40f4d4:	inc    BYTE PTR [edx]
  40f4d6:	rcl    DWORD PTR ds:0xec8cd0d0,0xdb
  40f4dd:	jno    0x40f4ec
  40f4df:	cld    
  40f4e0:	and    al,0x2
  40f4e2:	dec    esp
  40f4e3:	jecxz  0x40f46e
  40f4e5:	push   cs
  40f4e6:	mov    ecx,0xc75e78ea
  40f4ec:	sub    eax,0xffc5fecd
  40f4f1:	ret    
  40f4f2:	out    dx,eax
  40f4f3:	ficom  DWORD PTR [edi]
  40f4f5:	imul   edi,esp,0xffffffbe
  40f4f8:	cli    
  40f4f9:	push   0x908a9feb
  40f4fe:	sub    dh,cl
  40f500:	fnsave [edx+0x1a]
  40f503:	push   cs
  40f504:	loop   0x40f571
  40f506:	(bad)  
  40f507:	jo     0x40f4fa
  40f509:	jg     0x40f530
  40f50b:	push   esp
  40f50c:	add    DWORD PTR [ecx-0x7c6b5361],ebx
  40f512:	push   es
  40f513:	sbb    eax,0x6137ca33
  40f518:	jmp    0x40f595
  40f51a:	xor    DWORD PTR [edx+esi*1+0x422ad025],edx
  40f521:	mov    ds:0x6864d959,eax
  40f526:	or     cl,bl
  40f528:	inc    edi
  40f529:	scas   al,BYTE PTR es:[edi]
  40f52a:	adc    al,BYTE PTR [ebx]
  40f52c:	adc    al,0xb5
  40f52e:	sbb    BYTE PTR [edi-0x41],ch
  40f531:	retf   0xce3a
  40f534:	das    
  40f535:	pop    esp
  40f536:	sti    
  40f537:	push   0x5c36becb
  40f53c:	jecxz  0x40f4e0
  40f53e:	jle    0x40f50f
  40f540:	inc    ebp
  40f541:	cli    
  40f542:	xchg   BYTE PTR [ebp+0x2492cc70],cl
  40f548:	in     al,dx
  40f549:	jnp    0x40f4f7
  40f54b:	sti    
  40f54c:	push   0x27de224f
  40f551:	jmp    0x8360473c
  40f556:	jb     0x40f5b9
  40f558:	cwde   
  40f559:	cld    
  40f55a:	repz call 0xc74d8915
  40f560:	mov    cl,0xf6
  40f562:	mov    esi,0x7b5e33f9
  40f567:	sbb    dl,BYTE PTR [ebx+ebp*1-0x75]
  40f56b:	sbb    al,0x53
  40f56d:	and    ebp,DWORD PTR [ebp+0x6a0667d7]
  40f573:	mov    esp,0xa7d9988f
  40f578:	sbb    esp,DWORD PTR [edx+0x28]
  40f57b:	repz mov al,ds:0x40842463
  40f581:	sub    ebx,DWORD PTR [ebx-0x31c645a2]
  40f587:	ret    0x972e
  40f58a:	dec    BYTE PTR es:[edi-0x6d2a6572]
  40f591:	xor    bl,ah
  40f593:	jmp    0xa2fd4e64
  40f598:	pop    esp
  40f599:	mov    esp,0x44fdf84d
  40f59e:	cs or  al,0xde
  40f5a1:	adc    al,0xbc
  40f5a3:	ret    0x7d42
  40f5a6:	fisub  DWORD PTR [ebx+0x5ba92baf]
  40f5ac:	fisttp DWORD PTR ss:[ecx+0x1a]
  40f5b0:	xchg   ebp,eax
  40f5b1:	mov    ch,0xfb
  40f5b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5b4:	mov    bh,0xd4
  40f5b6:	fidivr DWORD PTR [ecx]
  40f5b8:	xchg   ecx,eax
  40f5b9:	repz mov bl,0x6
  40f5bc:	mov    al,ds:0x808baad1
  40f5c1:	ins    DWORD PTR es:[edi],dx
  40f5c2:	jo     0x40f5ed
  40f5c4:	mov    ds:0x8e355ff6,al
  40f5c9:	ins    BYTE PTR es:[edi],dx
  40f5ca:	loop   0x40f552
  40f5cc:	je     0x40f645
  40f5ce:	xchg   esp,eax
  40f5cf:	and    bh,ah
  40f5d1:	(bad)  
  40f5d2:	mov    edi,0x9b5ede24
  40f5d7:	mov    esi,ebx
  40f5d9:	mov    ecx,0xd7a2f722
  40f5de:	fidivr DWORD PTR [ebx-0x6d1c5a04]
  40f5e4:	ret    0x2f75
  40f5e7:	cmp    eax,0x7d56ba4d
  40f5ec:	ret    0x1b1a
  40f5ef:	gs dec esi
  40f5f1:	out    dx,al
  40f5f2:	outs   dx,DWORD PTR ds:[esi]
  40f5f3:	mov    ebp,DWORD PTR [esi]
  40f5f5:	mov    ebp,0xec8709a1
  40f5fa:	nop    DWORD PTR [esi-0x71]
  40f5fe:	push   ebx
  40f5ff:	add    eax,0x7cda2216
  40f604:	jle    0x40f58f
  40f606:	push   cs
  40f607:	sbb    eax,0xb90f9086
  40f60c:	in     eax,dx
  40f60d:	test   eax,0xd861434c
  40f612:	rol    DWORD PTR [ebx],cl
  40f614:	and    BYTE PTR [ebx],0x67
  40f617:	imul   ebp,DWORD PTR [ebx+0x35],0x4a77353d
  40f61e:	and    DWORD PTR [ebx+0x62],esp
  40f621:	nop
  40f622:	xor    DWORD PTR [eax-0x1c],edi
  40f625:	sub    al,0x6c
  40f627:	push   ecx
  40f628:	pop    ebx
  40f629:	pushf  
  40f62a:	inc    esp
  40f62b:	dec    ebx
  40f62c:	popa   
  40f62d:	mov    ds:0x33c81a3a,eax
  40f632:	add    DWORD PTR [esi+0x3df6317c],esp
  40f638:	sbb    al,dl
  40f63a:	mov    al,ds:0x97360c4f
  40f63f:	jg     0x40f673
  40f641:	pop    ds
  40f642:	shl    DWORD PTR [eax],cl
  40f644:	outs   dx,DWORD PTR ds:[esi]
  40f645:	push   es
  40f646:	adc    al,0x23
  40f648:	stos   BYTE PTR es:[edi],al
  40f649:	aas    
  40f64a:	sahf   
  40f64b:	sbb    DWORD PTR [edx+0x28d11ae0],edi
  40f651:	jmp    0xf3becc78
  40f656:	je     0x40f5f2
  40f658:	mov    cl,0xc6
  40f65a:	jo     0x40f6bf
  40f65c:	mov    eax,0xf6256a27
  40f661:	push   0xfe653ba7
  40f666:	or     ch,cl
  40f668:	rol    DWORD PTR [ecx],0xf9
  40f66b:	jmp    0xe160:0xd50b10a1
  40f672:	sub    ecx,0x25
  40f675:	ficom  DWORD PTR [ebp-0x43bfeb7a]
  40f67b:	mov    ds:0x6e72ff5c,eax
  40f680:	push   esp
  40f681:	rol    BYTE PTR [edi+ebx*1],0x91
  40f685:	pop    eax
  40f686:	push   esi
  40f687:	and    bh,BYTE PTR [ebx]
  40f689:	mov    ebx,0x4fbd4e9f
  40f68e:	ds inc esp
  40f690:	imul   ecx,DWORD PTR [edi+0x2952c0f5],0xffffffbd
  40f697:	int3   
  40f698:	repnz xchg esi,eax
  40f69a:	and    al,0x97
  40f69c:	das    
  40f69d:	xchg   ebp,eax
  40f69e:	sub    eax,DWORD PTR [ebx]
  40f6a0:	(bad)  
  40f6a1:	jmp    0x411b79
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x25dd2df0
  40f71a:	dec    ebp
  40f71b:	add    ch,BYTE PTR [esi+0x5ce88383]
  40f721:	add    DWORD PTR [ebx+0x3ba3cd7],0x52
  40f728:	and    DWORD PTR [edi+0x13490153],ebp
  40f72e:	cwde   
  40f72f:	xor    bl,BYTE PTR [ebx+0x76]
  40f732:	cmp    al,BYTE PTR [ebx-0x7e]
  40f735:	int3   
  40f736:	lods   al,BYTE PTR ds:[esi]
  40f737:	adc    ecx,esp
  40f739:	loopne 0x40f78c
  40f73b:	jo     0x40f759
  40f73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f73e:	rol    BYTE PTR [ebp-0xc97f951],1
  40f744:	dec    ecx
  40f745:	dec    ebp
  40f746:	js     0x40f785
  40f748:	adc    ecx,DWORD PTR [eax-0x407ac98f]
  40f74e:	pop    es
  40f74f:	xchg   bp,ax
  40f751:	dec    ebp
  40f752:	mov    bh,0xeb
  40f754:	jo     0x40f742
  40f756:	cmp    dh,BYTE PTR [edi-0x146f24a9]
  40f75c:	sub    cl,BYTE PTR [eax+0x7f]
  40f75f:	xchg   BYTE PTR [edx],ch
  40f761:	mov    edx,0x97c3f372
  40f766:	icebp  
  40f767:	sub    BYTE PTR [ebp-0x492db971],ah
  40f76d:	add    al,0x2d
  40f76f:	test   eax,0x56df31ec
  40f774:	jne    0x40f71f
  40f776:	mov    edx,0x71170289
  40f77b:	and    DWORD PTR [ecx],ebp
  40f77d:	cmp    al,0xfe
  40f77f:	mov    BYTE PTR [edi+edx*4+0x45],al
  40f783:	outs   dx,DWORD PTR ds:[esi]
  40f784:	in     al,dx
  40f785:	pop    ebp
  40f786:	not    DWORD PTR [esi+esi*1-0x685b4dfa]
  40f78d:	xchg   esi,eax
  40f78f:	bound  eax,QWORD PTR [ebx+ecx*8]
  40f792:	call   FWORD PTR [ecx-0x46cf2e87]
  40f798:	push   esi
  40f799:	pushaw 
  40f79b:	xor    BYTE PTR [ecx-0x69d61d0d],cl
  40f7a1:	fcom   QWORD PTR [edi]
  40f7a3:	not    BYTE PTR [edx+0x58]
  40f7a6:	(bad)  
  40f7a7:	mov    edx,0xae388ee4
  40f7ac:	pop    ebp
  40f7ad:	mov    edi,0x3870e514
  40f7b2:	mov    ds:0xc15c41db,al
  40f7b7:	cmc    
  40f7b8:	push   esi
  40f7b9:	push   ebx
  40f7ba:	jae    0x40f77f
  40f7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7bd:	hlt    
  40f7be:	les    edi,FWORD PTR [edx+0x1c]
  40f7c1:	inc    edi
  40f7c2:	jmp    0x9e77:0xcffbf544
  40f7c9:	div    esi
  40f7cb:	and    eax,0x78381c6c
  40f7d0:	je     0x40f7c7
  40f7d2:	mov    ds:0x5cb8c329,al
  40f7d7:	pushf  
  40f7d8:	mov    dl,0x47
  40f7da:	lods   eax,DWORD PTR ds:[esi]
  40f7db:	shr    dh,0x19
  40f7de:	leave  
  40f7df:	sub    DWORD PTR [ebx],eax
  40f7e1:	xlat   BYTE PTR ds:[ebx]
  40f7e2:	lds    ebx,FWORD PTR [eax]
  40f7e4:	inc    ebx
  40f7e5:	cmp    bl,dl
  40f7e7:	or     al,0x81
  40f7e9:	xchg   esp,eax
  40f7ea:	out    dx,al
  40f7eb:	mov    cl,0x26
  40f7ed:	in     al,0x85
  40f7ef:	test   al,0x47
  40f7f1:	cwde   
  40f7f2:	xor    ebx,DWORD PTR [ecx+0x74]
  40f7f5:	das    
  40f7f6:	fsub   QWORD PTR [ebp+0x4544f2e8]
  40f7fc:	cmovnp edx,DWORD PTR [ecx-0x3c]
  40f800:	push   0x10
  40f802:	hlt    
  40f803:	addr16 mov al,ds:0x5882
  40f807:	jne    0x40f86b
  40f809:	mov    fs,WORD PTR [esi+0x11]
  40f80c:	ret    0x419
  40f80f:	adc    al,0xf6
  40f811:	dec    ebp
  40f812:	adc    BYTE PTR [ebp+0x30904f3d],ch
  40f818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f819:	out    0x6,eax
  40f81b:	xor    al,0x3d
  40f81d:	cmc    
  40f81e:	adc    bl,BYTE PTR [ebp+0x23b9f94b]
  40f824:	(bad)  
  40f825:	outs   dx,DWORD PTR ds:[esi]
  40f826:	test   DWORD PTR [edi],0x39575ac2
  40f82c:	test   BYTE PTR [ecx+0x33],bh
  40f82f:	cs mov bh,0x5a
  40f832:	ficomp WORD PTR [eax]
  40f834:	rcl    DWORD PTR [eax-0x53],cl
  40f837:	cmp    BYTE PTR [esp+esi*4],ch
  40f83a:	call   0xd30d25d6
  40f83f:	and    al,0x25
  40f841:	xchg   edi,eax
  40f842:	cld    
  40f843:	add    al,0x86
  40f845:	(bad)  
  40f846:	or     ecx,DWORD PTR [ebp+ebp*4+0x2b653484]
  40f84d:	cmc    
  40f84e:	dec    esp
  40f84f:	cwde   
  40f850:	ret    0x651c
  40f853:	and    al,0x46
  40f855:	mul    edx
  40f857:	mov    bh,0xf2
  40f859:	cmp    eax,0xfc62a09c
  40f85e:	loop   0x40f815
  40f860:	int    0xb8
  40f862:	pop    ebx
  40f863:	loop   0x40f8cb
  40f865:	or     dl,0xc7
  40f868:	daa    
  40f869:	pop    edx
  40f86a:	das    
  40f86b:	xor    BYTE PTR [edx+0x64],ah
  40f86e:	ins    DWORD PTR es:[edi],dx
  40f86f:	dec    edi
  40f870:	add    eax,0x18ce7ce6
  40f875:	adc    eax,0x4809c386
  40f87a:	jmp    0x19f1:0x360518c6
  40f881:	cwde   
  40f882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f883:	aam    0x4f
  40f885:	cmp    al,0x10
  40f887:	jne    0x40f819
  40f889:	add    al,0x25
  40f88b:	inc    eax
  40f88c:	bound  esi,QWORD PTR [ebp-0x10]
  40f88f:	xchg   esi,eax
  40f890:	jo     0x40f8f7
  40f892:	ror    BYTE PTR [edi],cl
  40f894:	pop    edi
  40f895:	ret    0xe100
  40f898:	mov    ebp,0x5c0eba81
  40f89d:	ins    BYTE PTR es:[edi],dx
  40f89e:	jge    0x40f8f2
  40f8a0:	js     0x40f8ee
  40f8a2:	pop    eax
  40f8a3:	jp     0x40f889
  40f8a5:	jno    0x40f90f
  40f8a7:	add    edx,DWORD PTR [esi+eax*1]
  40f8aa:	test   al,0xf2
  40f8ac:	mov    dl,0xb0
  40f8ae:	mov    ebx,0x86ee90e
  40f8b3:	jno    0x40f848
  40f8b5:	sbb    BYTE PTR [ebx-0x2],bh
  40f8b8:	dec    ecx
  40f8b9:	stc    
  40f8ba:	adc    al,0x41
  40f8bc:	pop    edi
  40f8bd:	fs dec ecx
  40f8bf:	sbb    DWORD PTR [edx],eax
  40f8c1:	sbb    BYTE PTR [edi],bh
  40f8c3:	and    BYTE PTR [esi+0x9],0xfc
  40f8c7:	mov    eax,0xde696095
  40f8cc:	pop    ecx
  40f8cd:	add    ah,BYTE PTR [ebx-0x546e7fe0]
  40f8d3:	loop   0x40f88f
  40f8d5:	mov    cl,0xcb
  40f8d7:	enter  0x6e75,0x1a
  40f8db:	adc    cl,BYTE PTR ds:0x97f1030
  40f8e1:	adc    eax,DWORD PTR [ecx-0x413c4227]
  40f8e7:	dec    edx
  40f8e8:	xchg   ecx,eax
  40f8e9:	sub    ah,dh
  40f8eb:	xor    ah,BYTE PTR [eax+0x57]
  40f8ee:	ds ins BYTE PTR es:[edi],dx
  40f8f0:	shl    DWORD PTR [esi+0x1071307e],cl
  40f8f6:	push   esi
  40f8f7:	adc    edx,DWORD PTR [esi+0x48]
  40f8fa:	fwait
  40f8fb:	icebp  
  40f8fc:	mov    ah,0x62
  40f8fe:	xor    eax,0x1f6741be
  40f903:	dec    ebx
  40f904:	mov    dl,BYTE PTR ds:0xc7805500
  40f90a:	add    al,0xe0
  40f90c:	mov    DWORD PTR [edx],esi
  40f90e:	pop    ecx
  40f90f:	sub    BYTE PTR [ebp+0x1639d1a8],bh
  40f915:	pop    esp
  40f916:	push   ebx
  40f917:	cmp    eax,0xc7fecfed
  40f91c:	iret   
  40f91d:	addr16 imul edx,esp,0xb6c9434b
  40f924:	in     al,0x3c
  40f926:	xchg   edx,eax
  40f927:	jmp    0x40f970
  40f929:	js     0x40f96d
  40f92b:	inc    edi
  40f92c:	cmp    eax,DWORD PTR [eax]
  40f92e:	sub    eax,0x19f23f80
  40f933:	jecxz  0x40f944
  40f935:	(bad)  [ecx+0x5a]
  40f938:	sub    cl,BYTE PTR [esi+0x3c4fc386]
  40f93e:	cli    
  40f93f:	push   edi
  40f940:	ror    dl,0x91
  40f943:	xor    cl,bh
  40f945:	and    DWORD PTR [ebp-0x14],esp
  40f948:	and    DWORD PTR [edx],ebx
  40f94a:	adc    al,0xee
  40f94c:	mul    DWORD PTR [edx+eiz*8-0x69e6d08a]
  40f953:	xchg   dh,bl
  40f955:	mov    ecx,0xce7ad37b
  40f95a:	test   BYTE PTR [ecx-0x2b],dh
  40f95d:	bound  edx,QWORD PTR [ecx+edx*2-0x3e152fb0]
  40f964:	sub    DWORD PTR ds:0x92b4fd75,esi
  40f96a:	in     al,dx
  40f96b:	outs   dx,BYTE PTR ds:[esi]
  40f96c:	dec    ebx
  40f96d:	mov    dl,0x9c
  40f96f:	std    
  40f970:	pop    ebp
  40f971:	in     al,0x92
  40f973:	in     al,dx
  40f974:	adc    eax,0x8f8b627f
  40f979:	in     eax,dx
  40f97a:	bound  ebx,QWORD PTR [ebp+ebp*1+0x2e6869e3]
  40f981:	mov    esi,0x5dee396d
  40f986:	inc    ecx
  40f987:	xor    eax,DWORD PTR [edx+0x198931ab]
  40f98d:	dec    edi
  40f98e:	scas   al,BYTE PTR es:[edi]
  40f98f:	test   DWORD PTR [ebp+eiz*8-0xcfbf7d1],ebp
  40f996:	and    ebp,edi
  40f998:	imul   ebp,DWORD PTR [esi+0x5d2eaad1],0x5c
  40f99f:	or     eax,0xc21780b0
  40f9a4:	or     dl,BYTE PTR [edx]
  40f9a6:	sbb    ah,bh
  40f9a8:	mov    al,ds:0x68a946cd
  40f9ad:	fsubr  DWORD PTR [edi-0x22]
  40f9b0:	mov    ebp,0x76f9afb9
  40f9b5:	dec    edi
  40f9b6:	adc    cl,BYTE PTR ds:0x3928a74f
  40f9bc:	into   
  40f9bd:	jae    0x40f993
  40f9bf:	mov    al,ds:0xc5df7ba0
  40f9c4:	mov    dh,0x1d
  40f9c6:	imul   edx,DWORD PTR [ecx+0x1c57244b],0xffffffea
  40f9cd:	xchg   cx,ax
  40f9cf:	pop    edx
  40f9d0:	or     ecx,DWORD PTR [ecx+0x3a]
  40f9d3:	mov    BYTE PTR [eax+0x3f],dl
  40f9d6:	cs loop 0x40f9a4
  40f9d9:	out    dx,eax
  40f9da:	ret    
  40f9db:	or     DWORD PTR [esi],esp
  40f9dd:	push   edi
  40f9de:	sbb    DWORD PTR [edi+ecx*8],0xa64b1771
  40f9e5:	or     ah,BYTE PTR [esi]
  40f9e7:	rol    ch,1
  40f9e9:	sbb    eax,0x9fcc9e4b
  40f9ee:	and    al,dl
  40f9f0:	cmp    esp,0x647493a2
  40f9f6:	sub    al,cl
  40f9f8:	mov    ebx,0x514dc9d7
  40f9fd:	ins    BYTE PTR es:[edi],dx
  40f9fe:	xchg   edi,eax
  40f9ff:	test   ecx,esp
  40fa01:	(bad)  
  40fa02:	xlat   BYTE PTR ds:[ebx]
  40fa03:	or     BYTE PTR [ebp-0x77ba89f7],dl
  40fa09:	outs   dx,BYTE PTR ds:[esi]
  40fa0a:	xlat   BYTE PTR ds:[ebx]
  40fa0b:	lods   eax,DWORD PTR ds:[esi]
  40fa0c:	call   0x2794b765
  40fa11:	adc    al,0xe5
  40fa13:	dec    edi
  40fa14:	sub    esi,DWORD PTR [esi+0x88ced06]
  40fa1a:	test   ebx,0xfdf88045
  40fa20:	dec    ebx
  40fa21:	cwde   
  40fa22:	pop    edx
  40fa23:	jb     0x40fa7a
  40fa25:	push   cs
  40fa26:	mov    ebx,0x39996604
  40fa2b:	push   ss
  40fa2c:	mov    ebx,0x4f8d0c25
  40fa31:	or     BYTE PTR [ecx-0x5b],ch
  40fa34:	push   ds
  40fa35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa36:	cwde   
  40fa37:	xchg   edx,eax
  40fa38:	pop    edx
  40fa39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa3a:	out    dx,al
  40fa3b:	bswap  edi
  40fa3d:	cmp    dh,BYTE PTR [ebp-0x1eb98f80]
  40fa43:	cmp    eax,0x57bb4df4
  40fa48:	enter  0xd9f,0x71
  40fa4c:	stc    
  40fa4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa4e:	mov    ds:0xc5fc2c76,eax
  40fa53:	out    dx,eax
  40fa54:	pop    esp
  40fa55:	das    
  40fa56:	icebp  
  40fa57:	ror    DWORD PTR [ebx+ecx*2],1
  40fa5a:	sub    al,BYTE PTR [ebx+0x6dd6f825]
  40fa60:	fiadd  WORD PTR [ecx+esi*8+0x49]
  40fa64:	xchg   esi,eax
  40fa65:	add    al,0xdc
  40fa67:	jbe    0x40fa57
  40fa69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa6a:	sti    
  40fa6b:	adc    eax,0x26f99ded
  40fa70:	out    dx,eax
  40fa71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa72:	test   al,0x74
  40fa74:	push   ecx
  40fa75:	mov    BYTE PTR [esi-0x2e],dl
  40fa78:	mov    esi,0x979a59df
  40fa7d:	repz ror BYTE PTR [ebx-0x51],0xd1
  40fa82:	nop
  40fa83:	test   DWORD PTR [ecx+0x16],esp
  40fa86:	dec    eax
  40fa87:	cdq    
  40fa88:	push   edi
  40fa89:	retf   0xf78
  40fa8c:	repnz shr DWORD PTR [edx-0x38f63462],1
  40fa93:	or     eax,DWORD PTR [eax]
  40fa95:	inc    ebx
  40fa96:	mov    ds:0xa570294d,al
  40fa9b:	loop   0x40fa99
  40fa9d:	lods   eax,DWORD PTR ds:[esi]
  40fa9e:	jmp    0x87c1:0xe3691b13
  40faa5:	dec    edi
  40faa6:	mov    ds,esi
  40faa8:	je     0x40fab8
  40faaa:	ins    DWORD PTR es:[edi],dx
  40faab:	mov    esp,0x853c4a42
  40fab0:	xchg   ecx,eax
  40fab1:	pop    ds
  40fab2:	sbb    al,0xe5
  40fab4:	dec    edi
  40fab5:	mov    dh,0x99
  40fab7:	in     al,dx
  40fab8:	inc    esi
  40fab9:	adc    eax,0xaf0113bb
  40fabe:	(bad)  
  40fabf:	fisubr WORD PTR [ecx]
  40fac1:	fcmovnu st,st(1)
  40fac3:	out    0x23,al
  40fac5:	dec    edx
  40fac6:	into   
  40fac7:	adc    eax,0xa290b86
  40facc:	rcr    edx,cl
  40face:	or     DWORD PTR [ecx-0x69],ecx
  40fad1:	pop    esp
  40fad2:	scas   al,BYTE PTR es:[edi]
  40fad3:	or     DWORD PTR [esi],edi
  40fad5:	lds    ebp,FWORD PTR [ebp+0x34]
  40fad8:	add    ebp,0x63
  40fadb:	cmp    ebp,esp
  40fadd:	nop
  40fade:	(bad)
  40fae1:	dec    ecx
  40fae2:	pop    edi
  40fae3:	mov    ch,0x1e
  40fae5:	or     al,0xdc
  40fae7:	pop    edi
  40fae8:	loopne 0x40fa81
  40faea:	stos   BYTE PTR es:[edi],al
  40faeb:	neg    esp
  40faed:	and    eax,0xb36d4c9a
  40faf2:	ret    0xd74a
  40faf5:	jl     0x40fb09
  40faf7:	cwde   
  40faf8:	push   ds
  40faf9:	test   DWORD PTR [ecx-0x1cc58b87],eax
  40faff:	aas    
  40fb00:	or     eax,0x907410f4
  40fb05:	aam    0xa4
  40fb07:	out    dx,eax
  40fb08:	dec    esp
  40fb09:	ins    DWORD PTR es:[edi],dx
  40fb0a:	nop
  40fb0b:	paddq  mm0,QWORD PTR [edi-0x78b5a319]
  40fb12:	xchg   esi,eax
  40fb13:	pop    ebp
  40fb14:	(bad)  
  40fb15:	push   eax
  40fb16:	inc    esi
  40fb17:	push   ecx
  40fb18:	mov    ebx,0xd34b7a10
  40fb1d:	push   es
  40fb1e:	lock scas eax,DWORD PTR es:[edi]
  40fb20:	jmp    0xd7345c33
  40fb25:	dec    esi
  40fb26:	not    bh
  40fb28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb29:	loopne 0x40fb1d
  40fb2b:	jne    0x40fb7b
  40fb2d:	scas   eax,DWORD PTR es:[edi]
  40fb2e:	inc    edi
  40fb2f:	mov    edi,0xb1da1854
  40fb34:	fistp  QWORD PTR [ecx]
  40fb36:	aad    0x1d
  40fb38:	inc    esp
  40fb39:	push   0xda66efb2
  40fb3e:	cs push ebp
  40fb40:	dec    ecx
  40fb41:	cs mov ch,0xa3
  40fb44:	pop    esi
  40fb45:	xchg   ebx,eax
  40fb46:	sbb    al,0xfc
  40fb48:	iret   
  40fb49:	mov    ds:0x558656dc,al
  40fb4e:	pushf  
  40fb4f:	test   al,0xb3
  40fb51:	dec    ebp
  40fb52:	ins    DWORD PTR es:[edi],dx
  40fb53:	cmp    DWORD PTR [edi+0x7e],0x42
  40fb57:	loop   0x40fba2
  40fb59:	xchg   edx,eax
  40fb5a:	shl    DWORD PTR [edx-0x148b532a],0x62
  40fb61:	cdq    
  40fb62:	mov    ds:0x1b90da69,eax
  40fb67:	and    ecx,esp
  40fb69:	fwait
  40fb6a:	jp     0x40fb4a
  40fb6c:	dec    eax
  40fb6d:	and    cl,bh
  40fb6f:	dec    ebx
  40fb70:	cmp    ebx,esp
  40fb72:	xor    eax,0x8db1176e
  40fb77:	dec    ebp
  40fb78:	sub    eax,0x318add7e
  40fb7d:	mov    bh,0x83
  40fb7f:	push   esi
  40fb80:	ja     0x40fb2a
  40fb82:	sub    eax,0x1a4bb397
  40fb87:	xor    BYTE PTR ds:0xab0bb864,dh
  40fb8d:	lods   eax,DWORD PTR ds:[esi]
  40fb8e:	cmp    bh,BYTE PTR [edi+0x42]
  40fb91:	daa    
  40fb92:	xchg   edx,eax
  40fb93:	fcom   QWORD PTR ss:[edx-0x26]
  40fb97:	xchg   ecx,eax
  40fb98:	inc    ebp
  40fb99:	mov    al,ds:0x786a2e98
  40fb9e:	adc    BYTE PTR [eax-0x51],al
  40fba1:	add    bh,BYTE PTR [edi]
  40fba3:	fimul  WORD PTR [ebx-0x5e]
  40fba6:	in     al,dx
  40fba7:	cdq    
  40fba8:	call   0x1ee6:0x6012c784
  40fbaf:	mov    ds:0xae345226,al
  40fbb4:	sub    al,0x21
  40fbb6:	adc    ebp,edi
  40fbb8:	adc    al,0x82
  40fbba:	add    edx,ebx
  40fbbc:	out    dx,al
  40fbbd:	push   edi
  40fbbe:	mov    ds:0x2528a580,eax
  40fbc3:	xchg   esi,eax
  40fbc4:	sahf   
  40fbc5:	cmp    BYTE PTR [ecx-0x67],ah
  40fbc8:	push   eax
  40fbc9:	bound  esp,QWORD PTR [esp+esi*4+0x2a749353]
  40fbd0:	adc    eax,0x77d0fc9c
  40fbd5:	aas    
  40fbd6:	dec    ebx
  40fbd7:	pop    ebp
  40fbd8:	push   ebx
  40fbd9:	jle    0x40fc08
  40fbdb:	mov    esp,0x596853fb
  40fbe0:	add    edi,edi
  40fbe2:	sbb    al,0xfd
  40fbe4:	in     eax,0x77
  40fbe6:	inc    esp
  40fbe7:	aam    0xae
  40fbe9:	pop    esi
  40fbea:	sub    eax,0x948f329e
  40fbef:	bndldx bnd1,[edi+0x76]
  40fbf3:	cli    
  40fbf4:	rcl    DWORD PTR [ebx],1
  40fbf6:	jle    0x40fbc4
  40fbf8:	pop    ss
  40fbf9:	and    BYTE PTR [ebp-0xf],dh
  40fbfc:	cmp    al,0xc6
  40fbfe:	sub    esi,DWORD PTR [ebx]
  40fc00:	push   eax
  40fc01:	pop    ss
  40fc02:	in     eax,dx
  40fc03:	inc    ecx
  40fc04:	jmp    0x40fc02
  40fc06:	loope  0x40fc7f
  40fc08:	mov    esp,?
  40fc0a:	aad    0x5b
  40fc0c:	js     0x40fbd7
  40fc0e:	xchg   edx,eax
  40fc0f:	inc    ecx
  40fc10:	cli    
  40fc11:	xchg   edi,eax
  40fc12:	xchg   ebx,eax
  40fc13:	add    BYTE PTR [bp+si-0x3a],0x66
  40fc18:	pop    edi
  40fc19:	das    
  40fc1a:	cmp    BYTE PTR es:[edi+eiz*1],0x71
  40fc1f:	shl    BYTE PTR [edx-0x790fae78],0xb9
  40fc26:	retf   0xddfa
  40fc29:	dec    ecx
  40fc2a:	dec    eax
  40fc2b:	xchg   ebx,eax
  40fc2c:	inc    eax
  40fc2d:	fs pusha 
  40fc2f:	bound  ebx,QWORD PTR [ebx+0x27]
  40fc32:	iret   
  40fc33:	jae    0x40fbbf
  40fc35:	hlt    
  40fc36:	lahf   
  40fc37:	ja     0x40fbd5
  40fc39:	pop    edi
  40fc3a:	les    esp,FWORD PTR [ebx+0x6e]
  40fc3d:	and    ah,BYTE PTR gs:[esi]
  40fc40:	ins    DWORD PTR es:[edi],dx
  40fc41:	dec    ebx
  40fc42:	stc    
  40fc43:	mov    ds:0x98f24a7,al
  40fc48:	jnp    0x40fc9e
  40fc4a:	push   cs
  40fc4b:	popa   
  40fc4c:	dec    ebx
  40fc4d:	(bad)  
  40fc4e:	pop    ecx
  40fc4f:	popa   
  40fc50:	lock push ebp
  40fc52:	ins    BYTE PTR es:[edi],dx
  40fc53:	ins    DWORD PTR es:[edi],dx
  40fc54:	cld    
  40fc55:	inc    ebp
  40fc56:	push   cs
  40fc57:	rcl    BYTE PTR [ecx],1
  40fc59:	xrelease xchg BYTE PTR [di+0x71],bh
  40fc5e:	sbb    al,0x3b
  40fc60:	sub    eax,0xd3613cbf
  40fc65:	and    al,0xd
  40fc67:	ror    BYTE PTR [edx-0x5e],0x86
  40fc6b:	inc    ebp
  40fc6c:	addr16 inc edi
  40fc6e:	clc    
  40fc6f:	adc    BYTE PTR [esi+0x3c],0xeb
  40fc73:	enter  0x33e2,0xaa
  40fc77:	add    eax,0xcb980ae2
  40fc7c:	sar    DWORD PTR [ebx+ebp*2+0x263e87ea],1
  40fc83:	mov    cl,0x6c
  40fc85:	loop   0x40fcb7
  40fc87:	push   0x61f8cbcc
  40fc8c:	jno    0x40fcdc
  40fc8e:	leavew 
  40fc90:	mov    ax,ds:0xdddecf5c
  40fc96:	inc    esi
  40fc97:	and    BYTE PTR gs:[ecx+0x20ff106e],bl
  40fc9e:	pusha  
  40fc9f:	fcom   st(0)
  40fca1:	mov    al,ds:0x8fde0c76
  40fca6:	pop    esi
  40fca7:	ins    DWORD PTR es:[edi],dx
  40fca8:	mov    WORD PTR [edx],ss
  40fcaa:	mov    ebx,0xb446dc1b
  40fcaf:	mov    edi,DWORD PTR [edx+0x7a]
  40fcb2:	and    al,0x99
  40fcb4:	cmp    edx,eax
  40fcb6:	outs   dx,DWORD PTR ds:[esi]
  40fcb7:	jg     0x40fc53
  40fcb9:	aas    
  40fcba:	retf   
  40fcbb:	push   edx
  40fcbc:	jns    0x40fcc0
  40fcbe:	(bad)  
  40fcbf:	idiv   DWORD PTR [eax+0x298933ed]
  40fcc5:	inc    ecx
  40fcc6:	xchg   edx,eax
  40fcc7:	mov    ebx,0xa0ddbc19
  40fccc:	push   esi
  40fccd:	ds fcmovne st,st(0)
  40fcd0:	clc    
  40fcd1:	xlat   BYTE PTR ds:[ebx]
  40fcd2:	jecxz  0x40fc68
  40fcd4:	dec    edi
  40fcd5:	xchg   DWORD PTR [ecx-0x2881b3b8],ebp
  40fcdb:	mov    bh,dl
  40fcdd:	sahf   
  40fcde:	lock ret 
  40fce0:	(bad)  
  40fce1:	mov    DWORD PTR [ebx+esi*4+0x6fbe4f1],ecx
  40fce8:	xchg   edx,eax
  40fce9:	xchg   ecx,eax
  40fcea:	pop    edi
  40fceb:	mov    edi,0xb91d610d
  40fcf0:	xchg   edx,eax
  40fcf1:	leave  
  40fcf2:	je     0x40fd65
  40fcf4:	pop    DWORD PTR [eax]
  40fcf6:	mov    esp,edi
  40fcf8:	sub    ebx,esi
  40fcfa:	inc    edi
  40fcfb:	jno    0x40fcb6
  40fcfd:	in     al,dx
  40fcfe:	push   0x61
  40fd00:	ret    
  40fd01:	inc    esi
  40fd02:	push   esi
  40fd03:	dec    edi
  40fd04:	mov    ch,BYTE PTR [ebp-0x2c]
  40fd07:	fcom   DWORD PTR [ecx]
  40fd09:	arpl   WORD PTR [eax],di
  40fd0b:	or     ebp,DWORD PTR [edi]
  40fd0d:	push   ds
  40fd0e:	fdiv   QWORD PTR [eax+0x5e]
  40fd11:	fld    DWORD PTR [ebx]
  40fd13:	fcom   QWORD PTR [edx]
  40fd15:	mov    ds:0x447bb7c2,al
  40fd1a:	jno    0x40fcd4
  40fd1c:	xchg   edi,eax
  40fd1d:	ins    BYTE PTR es:[edi],dx
  40fd1e:	in     al,dx
  40fd1f:	mov    BYTE PTR [ebp+0x67cc94b6],bl
  40fd25:	imul   esp,ebp,0xffffff92
  40fd28:	sub    al,0x83
  40fd2a:	cmp    al,0xf1
  40fd2c:	fistp  DWORD PTR [edi+edx*1+0x3a]
  40fd30:	dec    ebp
  40fd31:	mov    ebp,0x34d4cf6f
  40fd36:	cmp    edx,DWORD PTR [edx-0x73]
  40fd39:	lea    ebx,[edi]
  40fd3b:	in     al,dx
  40fd3c:	xchg   DWORD PTR [eax+ecx*2+0x1af34f3d],ecx
  40fd43:	clc    
  40fd44:	mov    dl,0xca
  40fd46:	and    eax,0xec2eaefb
  40fd4b:	mov    ebx,0xf2458600
  40fd50:	out    dx,al
  40fd51:	jp     0x40fda9
  40fd53:	dec    edi
  40fd54:	pop    ds
  40fd55:	pop    ds
  40fd56:	daa    
  40fd57:	repnz (bad) 
  40fd59:	(bad)  
  40fd5a:	cmp    al,0x53
  40fd5c:	dec    eax
  40fd5d:	inc    eax
  40fd5e:	jmp    0xcdadfadc
  40fd63:	mov    ebx,0xfb1d70fe
  40fd68:	jae    0x40fd31
  40fd6a:	jmp    0x40fd0d
  40fd6c:	ss aas 
  40fd6e:	inc    ebx
  40fd6f:	ja     0x40fd67
  40fd71:	aad    0xd1
  40fd73:	(bad)  
  40fd75:	xchg   ecx,eax
  40fd76:	dec    eax
  40fd77:	mov    ebx,0x78138d4c
  40fd7c:	jb     0x40fd40
  40fd7e:	sbb    eax,DWORD PTR [ecx+0xde6db82]
  40fd84:	out    dx,eax
  40fd85:	jp     0x40fd8a
  40fd87:	jmp    0x40fd0d
  40fd89:	(bad)  
  40fd8a:	mov    al,bl
  40fd8c:	aad    0x54
  40fd8e:	mov    ds:0x64a40c0f,eax
  40fd93:	scas   al,BYTE PTR es:[edi]
  40fd94:	rol    BYTE PTR [ecx+0x712ca9ac],1
  40fd9a:	jmp    0xd914:0x15f811e7
  40fda1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fda2:	daa    
  40fda3:	stc    
  40fda4:	or     bl,al
  40fda6:	jbe    0x40fe12
  40fda8:	mov    ebp,0x1e65922e
  40fdad:	push   ecx
  40fdae:	add    al,0x5c
  40fdb0:	or     ch,BYTE PTR [esi+0x3d]
  40fdb3:	popf   
  40fdb4:	sbb    DWORD PTR [ecx],esi
  40fdb6:	add    edi,ebx
  40fdb8:	iret   
  40fdb9:	push   ebx
  40fdba:	fsubp  st(0),st
  40fdbc:	mov    dh,0xb0
  40fdbe:	mov    ch,0xe7
  40fdc0:	sbb    al,0x22
  40fdc2:	fcomp  DWORD PTR [ebx-0x3ac9039e]
  40fdc8:	xor    BYTE PTR [edi],ah
  40fdca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdcb:	adc    al,0xcb
  40fdcd:	loop   0x40fe17
  40fdcf:	mov    ecx,0xd0d28a4d
  40fdd4:	(bad)  
  40fdd5:	stc    
  40fdd6:	add    dh,ch
  40fdd8:	std    
  40fdd9:	xor    BYTE PTR [edx+0x14],dl
  40fddc:	loopne 0x40fdb6
  40fdde:	stos   DWORD PTR es:[edi],eax
  40fddf:	pop    es
  40fde0:	ja     0x40fdb1
  40fde2:	add    edi,DWORD PTR [edx-0x2a4077ca]
  40fde8:	call   0xc09ab864
  40fded:	dec    ecx
  40fdee:	jae    0x40fe58
  40fdf0:	jmp    0x40fe5e
  40fdf2:	dec    eax
  40fdf3:	push   ds
  40fdf4:	gs jno 0x40fdec
  40fdf7:	adc    ebx,DWORD PTR [edi]
  40fdf9:	pop    es
  40fdfa:	push   0x2
  40fdfc:	stc    
  40fdfd:	leave  
  40fdfe:	mov    ds:0x1a201b3c,eax
  40fe03:	sbb    DWORD PTR [ebx+0x1c2f6011],esp
  40fe09:	pop    esi
  40fe0a:	(bad)  
  40fe0b:	cli    
  40fe0c:	and    esp,DWORD PTR [edi]
  40fe0e:	xor    al,0x69
  40fe10:	loop   0x40fdbf
  40fe12:	xor    esi,eax
  40fe14:	daa    
  40fe15:	loope  0x40fe28
  40fe17:	lods   eax,DWORD PTR ds:[esi]
  40fe18:	push   edi
  40fe19:	mov    ds:0x6cca74b0,al
  40fe1e:	xchg   ebp,eax
  40fe1f:	pop    esi
  40fe20:	dec    eax
  40fe21:	push   es
  40fe22:	ins    BYTE PTR es:[edi],dx
  40fe23:	stos   BYTE PTR es:[di],al
  40fe25:	lock jns 0x40fdb3
  40fe28:	push   eax
  40fe29:	(bad)  
  40fe2a:	and    ecx,esp
  40fe2c:	lods   al,BYTE PTR ds:[esi]
  40fe2d:	fsubr  st(0),st
  40fe2f:	add    ebp,DWORD PTR [ebp+0x7d]
  40fe32:	inc    edx
  40fe33:	pop    ecx
  40fe34:	xchg   edi,esp
  40fe36:	xchg   ebp,eax
  40fe37:	sbb    esi,DWORD PTR [esi+esi*8+0x2e]
  40fe3b:	in     al,0x81
  40fe3d:	test   edx,eax
  40fe3f:	into   
  40fe40:	inc    edi
  40fe41:	push   esp
  40fe42:	push   ebp
  40fe43:	add    BYTE PTR [edi],bl
  40fe45:	icebp  
  40fe46:	popa   
  40fe47:	mov    esi,0xd394cd0e
  40fe4c:	push   ss
  40fe4d:	aas    
  40fe4e:	sahf   
  40fe4f:	popa   
  40fe50:	adc    esi,esp
  40fe52:	xchg   ebp,eax
  40fe53:	ins    BYTE PTR es:[edi],dx
  40fe54:	jp     0x40fe0e
  40fe56:	rcl    DWORD PTR es:[esi-0x70ff005a],1
  40fe5d:	ss into 
  40fe5f:	xor    al,0xaa
  40fe61:	jb     0x40fea1
  40fe63:	sbb    bh,BYTE PTR ds:0xdd3fde74
  40fe69:	adc    esp,DWORD PTR [edx+0x2d18cc58]
  40fe6f:	push   es
  40fe70:	push   esp
  40fe71:	fisubr WORD PTR [eax-0x380c9c5]
  40fe77:	or     eax,0x75b845bb
  40fe7c:	sbb    eax,DWORD PTR [ebp-0x20]
  40fe7f:	pop    edi
  40fe80:	sbb    dh,BYTE PTR ds:0x4e869f75
  40fe86:	inc    edx
  40fe87:	or     ebx,DWORD PTR [edx-0x3cb4a667]
  40fe8d:	loop   0x40ff0a
  40fe8f:	xor    al,0x53
  40fe91:	(bad)  
  40fe92:	lock repnz rcl BYTE PTR [ecx],1
  40fe96:	test   DWORD PTR [ebp+0x14],0xd1e9ad4e
  40fe9d:	xor    DWORD PTR [ecx+0xc],esp
  40fea0:	repnz sbb DWORD PTR [esi-0x537a9b12],esi
  40fea7:	in     al,dx
  40fea8:	in     al,0x8a
  40feaa:	das    
  40feab:	int3   
  40feac:	ds aad 0xd
  40feaf:	pop    ecx
  40feb0:	dec    esp
  40feb1:	fwait
  40feb2:	js     0x40fe69
  40feb4:	pop    ds
  40feb5:	cld    
  40feb6:	test   DWORD PTR [edx-0x414670e4],ebx
  40febc:	xchg   esp,eax
  40febd:	les    ecx,FWORD PTR [eax+0x79]
  40fec0:	inc    eax
  40fec1:	mov    esp,0xba6c45a5
  40fec6:	in     eax,dx
  40fec7:	jle    0x40fece
  40fec9:	nop
  40feca:	sbb    al,0xb5
  40fecc:	mov    esp,0xe20be30a
  40fed1:	cwde   
  40fed2:	bound  esi,QWORD PTR [esi]
  40fed4:	out    dx,eax
  40fed5:	imul   ebp,DWORD PTR [edi],0x7
  40fed8:	xor    al,al
  40feda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fedb:	push   esp
  40fedc:	cwde   
  40fedd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fede:	popf   
  40fedf:	xchg   DWORD PTR [ebx],esi
  40fee1:	dec    ebx
  40fee2:	cmp    bl,BYTE PTR [edi+0x7d9da924]
  40fee8:	pop    ecx
  40fee9:	inc    eax
  40feea:	add    DWORD PTR [esi+0x3],ebp
  40feed:	test   eax,0x9e4bbeb2
  40fef2:	push   eax
  40fef3:	xchg   ecx,ecx
  40fef5:	jle    0x40fec3
  40fef7:	dec    DWORD PTR [ebx+ecx*8]
  40fefa:	cdq    
  40fefb:	xchg   esi,eax
  40fefc:	(bad)  
  40fefd:	sbb    al,0xae
  40feff:	hlt    
  40ff00:	ins    BYTE PTR es:[edi],dx
  40ff01:	jns    0x40ff4d
  40ff03:	jns    0x40fee1
  40ff05:	or     esp,edx
  40ff07:	mov    bl,0x73
  40ff09:	jno    0x40fefc
  40ff0b:	repnz push ebp
  40ff0d:	add    al,0xe9
  40ff0f:	inc    eax
  40ff10:	adc    BYTE PTR [ecx-0x1a],cl
  40ff13:	stos   DWORD PTR es:[edi],eax
  40ff14:	inc    ebp
  40ff15:	daa    
  40ff16:	stc    
  40ff17:	xchg   esp,eax
  40ff18:	in     eax,dx
  40ff19:	xchg   ebx,eax
  40ff1a:	mov    al,ds:0xf8e6e2f4
  40ff1f:	pop    eax
  40ff20:	ja     0x40ff4c
  40ff22:	test   DWORD PTR [eax],esp
  40ff24:	xchg   edi,eax
  40ff25:	loopne 0x40ff3a
  40ff27:	adc    dl,BYTE PTR [edi+0x64]
  40ff2a:	mov    ch,0x40
  40ff2c:	push   es
  40ff2d:	(bad)  
  40ff2f:	xor    eax,0x817b6c0c
  40ff34:	xlat   BYTE PTR ds:[ebx]
  40ff35:	in     al,0xbf
  40ff37:	imul   eax,DWORD PTR [edx+eiz*8+0x1b27cb87],0x2036b747
  40ff42:	imul   ebp,DWORD PTR fs:[eax+0xb],0x5c
  40ff47:	je     0x40ffb7
  40ff49:	fimul  WORD PTR [eax]
  40ff4b:	hlt    
  40ff4c:	jnp    0x40ff6d
  40ff4e:	pop    ss
  40ff4f:	mov    eax,0x4eba39ac
  40ff54:	xor    eax,0xe22b4bea
  40ff59:	lock xor BYTE PTR [ebx-0x5d],dh
  40ff5d:	int3   
  40ff5e:	popa   
  40ff5f:	inc    ebp
  40ff60:	inc    ebp
  40ff61:	xor    bl,BYTE PTR [eax-0x45]
  40ff64:	ins    DWORD PTR es:[edi],dx
  40ff65:	clc    
  40ff66:	jle    0x40ff66
  40ff68:	imul   DWORD PTR [ebp+ebx*8-0x53872b37]
  40ff6f:	or     edx,DWORD PTR [esi-0x71ba113b]
  40ff75:	dec    esp
  40ff76:	inc    esp
  40ff77:	in     al,dx
  40ff78:	mov    ds:0xe8b77655,al
  40ff7d:	jmp    0xf9893825
  40ff82:	fidivr DWORD PTR [ebp+0x2682c19a]
  40ff88:	sbb    BYTE PTR [ecx],ch
  40ff8a:	arpl   WORD PTR [edi+0x59],si
  40ff8d:	push   0x1c
  40ff8f:	push   DWORD PTR [ebx]
  40ff91:	push   ebp
  40ff92:	imul   esp,DWORD PTR [ebx+0x11],0xffffff9c
  40ff96:	lea    eax,ds:[edi+eiz*8-0x59]
  40ff9b:	jle    0x40fffb
  40ff9d:	adc    al,0x9c
  40ff9f:	push   ecx
  40ffa0:	pusha  
  40ffa1:	cmp    dh,BYTE PTR [esi]
  40ffa3:	mov    ds:0xb99881d2,al
  40ffa8:	enter  0x568,0x9b
  40ffac:	ds inc esi
  40ffae:	sbb    BYTE PTR [ecx],dl
  40ffb0:	into   
  40ffb1:	push   cs
  40ffb2:	iret   
  40ffb3:	inc    BYTE PTR [esi+0x1b]
  40ffb6:	sub    dl,BYTE PTR [esi]
  40ffb8:	imul   esi,DWORD PTR [edi+ebx*1],0xa5280664
  40ffbf:	adc    ebx,edx
  40ffc1:	mov    ds:0xd7cd86d9,al
  40ffc6:	cdq    
  40ffc7:	add    bh,al
  40ffc9:	fbld   TBYTE PTR [edx+ebp*8-0x524c830f]
  40ffd0:	(bad)  
  40ffd1:	cli    
  40ffd2:	push   es
  40ffd3:	or     ecx,DWORD PTR [ebp-0x1b]
  40ffd6:	xor    ah,cl
  40ffd8:	test   eax,0xba1c97bb
  40ffdd:	in     al,0xe7
  40ffdf:	mov    dl,0x6
  40ffe1:	dec    ebp
  40ffe2:	mov    edx,0x8df0fbb5
  40ffe7:	sbb    DWORD PTR [eiz*8-0x51c55ca5],edx
  40ffee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffef:	stc    
  40fff0:	xchg   edx,eax
  40fff1:	jle    0x410038
  40fff3:	push   ebp
  40fff4:	mov    ebx,0x49cbd67f
  40fff9:	stos   DWORD PTR es:[edi],eax
  40fffa:	inc    ecx
  40fffb:	std    
  40fffc:	jmp    0x40ff98
  40fffe:	dec    esp
  40ffff:	sub    BYTE PTR [esi+0x45b4952a],0xf8
  410006:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  410008:	sbb    BYTE PTR [ebx+0x2f3b26d],cl
  41000e:	(bad)  
  41000f:	lods   eax,DWORD PTR ds:[esi]
  410010:	or     cl,bh
  410012:	mov    DWORD PTR [eax],edx
  410014:	pop    eax
  410015:	jge    0x410063
  410017:	mov    DWORD PTR [edi-0x5c8adf62],ecx
  41001d:	ss (bad) 
  41001f:	xchg   esp,eax
  410020:	cs mov eax,0x124c3e6
  410026:	arpl   WORD PTR [ecx-0x5d0f8b81],dx
  41002c:	cmp    BYTE PTR [ebp-0x4f6bfd55],cl
  410032:	mov    eax,DWORD PTR [ebp-0x43]
  410035:	xchg   ah,cl
  410037:	mov    esp,0xd20dc785
  41003c:	add    eax,ecx
  41003e:	icebp  
  41003f:	arpl   WORD PTR [ebp+edi*2+0x13c9e745],dx
  410046:	jge    0x40ffce
  410048:	jmp    0xd3e9:0x691dd4db
  41004f:	or     al,0xe9
  410051:	out    0xc1,al
  410053:	mov    cl,0x2b
  410055:	cmp    al,0xde
  410057:	fdivr  st,st(5)
  410059:	nop
  41005a:	ret    
  41005b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41005c:	mov    edx,0xe99b8f04
  410061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410062:	sub    edx,ebp
  410064:	es mov dh,dh
  410067:	jb     0x410081
  410069:	mov    WORD PTR [eax],es
  41006b:	out    dx,al
  41006c:	jne    0x410090
  41006e:	add    edx,edx
  410070:	jnp    0x4100c6
  410072:	out    dx,eax
  410073:	xchg   edx,eax
  410074:	std    
  410075:	outs   dx,DWORD PTR ds:[esi]
  410076:	sub    cl,BYTE PTR [ebp-0x20]
  410079:	add    edi,DWORD PTR [edi+0x57]
  41007c:	jns    0x4100d3
  41007e:	cmc    
  41007f:	mov    ah,0x1e
  410081:	or     al,0x8b
  410083:	or     bl,BYTE PTR [ebp+0x6d]
  410086:	fild   DWORD PTR [edi]
  410088:	dec    esp
  410089:	inc    esp
  41008a:	push   0x75
  41008c:	arpl   WORD PTR [edx],bp
  41008e:	jle    0x4100c4
  410090:	push   0xffffffc5
  410092:	mov    edx,0x4741f973
  410097:	pushf  
  410098:	jo     0x4100af
  41009a:	pop    edi
  41009b:	call   0xd8eaf903
  4100a0:	sbb    cl,dh
  4100a2:	inc    esi
  4100a3:	xchg   esi,eax
  4100a4:	leave  
  4100a5:	icebp  
  4100a6:	shr    DWORD PTR [esi-0x3461eac1],0x17
  4100ad:	cmc    
  4100ae:	add    esi,edi
  4100b0:	sbb    ch,bl
  4100b2:	add    DWORD PTR [edx-0xfa3c003],0x10d89e36
  4100bc:	clc    
  4100bd:	xor    DWORD PTR [ebx-0x23],0x18
  4100c1:	sub    DWORD PTR [edi+0x5cecbdf3],0xffffffd2
  4100c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100ca:	add    ah,cl
  4100cc:	mov    cl,0x1d
  4100ce:	jns    0x410101
  4100d0:	and    eax,0x746f000a
  4100d5:	ins    DWORD PTR es:[edi],dx
  4100d6:	xor    ebp,DWORD PTR [edi]
  4100d8:	inc    eax
  4100d9:	jmp    0x88e6cc3b
  4100de:	sbb    DWORD PTR [edi-0x1a4969ae],esi
  4100e4:	scas   eax,DWORD PTR es:[edi]
  4100e5:	f2xm1  
  4100e7:	repz push es
  4100e9:	sub    BYTE PTR [esi],bl
  4100eb:	dec    esi
  4100ec:	int3   
  4100ed:	mov    bl,0xc6
  4100ef:	jnp    0x4100df
  4100f1:	push   esi
  4100f2:	pop    edx
  4100f4:	in     al,dx
  4100f5:	xor    BYTE PTR [ebx+esi*8],al
  4100f8:	xor    esp,DWORD PTR [edx+0x2ce9dd56]
  4100fe:	mov    ebx,0x65f54488
  410103:	inc    eax
  410104:	dec    edi
  410105:	pop    eax
  410106:	cmp    bh,BYTE PTR [edi]
  410108:	out    dx,eax
  410109:	(bad)  
  41010a:	push   ds
  41010b:	inc    ecx
  41010c:	mov    al,0xc6
  41010e:	(bad)  
  41010f:	mov    ds,WORD PTR [esi-0x45b52450]
  410115:	ins    DWORD PTR es:[edi],dx
  410116:	sub    eax,0x2f9e23ba
  41011b:	add    ebp,DWORD PTR [ebx-0x15]
  41011e:	ds std 
  410120:	out    dx,eax
  410121:	in     eax,0x8a
  410123:	pop    eax
  410124:	jne    0x410176
  410126:	mov    edi,0x755cf87d
  41012b:	sub    al,0x6b
  41012d:	ja     0x410156
  41012f:	cmp    eax,0x90bf53
  410134:	clc    
  410135:	jae    0x4100b7
  410137:	jns    0x410101
  410139:	cmp    eax,DWORD PTR [edi+0x1f]
  41013c:	outs   dx,BYTE PTR ds:[esi]
  41013d:	adc    DWORD PTR [ebx-0x6121be60],0x45f6c18a
  410147:	add    DWORD PTR [ebx+0x42482033],eax
  41014d:	ret    
  41014e:	leave  
  41014f:	and    eax,edi
  410151:	les    edx,FWORD PTR [eax]
  410153:	std    
  410154:	dec    ebp
  410155:	ds adc al,0x9a
  410158:	inc    ebx
  410159:	cli    
  41015a:	inc    ecx
  41015b:	inc    esi
  41015c:	jl     0x41017d
  41015e:	shl    DWORD PTR [esi],1
  410160:	jnp    0x41017b
  410162:	sbb    ah,cl
  410164:	dec    ebx
  410165:	sbb    eax,0x139c07ce
  41016a:	sub    eax,DWORD PTR [ebp-0x40]
  41016d:	jno    0x4101be
  41016f:	mov    dh,0x1f
  410171:	push   ds
  410172:	push   ebx
  410173:	dec    eax
  410174:	dec    esp
  410175:	xchg   edi,eax
  410176:	(bad)  
  410177:	dec    ecx
  410178:	mov    ds:0xede17f14,eax
  41017d:	clc    
  41017e:	jmp    0xaeb6:0xb00c0143
  410185:	inc    ebp
  410186:	shl    ebx,1
  410188:	and    cl,bl
  41018a:	shl    ch,cl
  41018c:	cmp    eax,ecx
  41018e:	pop    eax
  41018f:	ds mov dh,0x4a
  410192:	sub    al,0x75
  410195:	adc    al,0x42
  410197:	out    0x89,eax
  410199:	push   ds
  41019a:	cmc    
  41019b:	sub    DWORD PTR [ebx-0x3b],esp
  41019e:	pop    ecx
  41019f:	mov    al,0xdd
  4101a1:	call   0x429f:0x1dedcc52
  4101a8:	adc    ebp,DWORD PTR [ecx+0x62]
  4101ab:	cmp    eax,0x5cff89d1
  4101b0:	scas   eax,DWORD PTR es:[edi]
  4101b1:	test   edi,0x7a49f2a0
  4101b7:	sbb    eax,0xaa086f49
  4101bc:	pop    ebx
  4101bd:	xor    dh,al
  4101bf:	loop   0x41020f
  4101c1:	sbb    DWORD PTR [edi-0xd],esp
  4101c4:	inc    eax
  4101c5:	pop    eax
  4101c6:	pop    ecx
  4101c7:	js     0x410149
  4101c9:	(bad)  
  4101ca:	mov    bl,dl
  4101cc:	jo     0x41016c
  4101ce:	xchg   edx,eax
  4101cf:	xor    BYTE PTR [edx-0x5c],al
  4101d2:	push   ebx
  4101d3:	push   ecx
  4101d4:	mov    eax,0xaa424c0d
  4101d9:	in     al,dx
  4101da:	and    DWORD PTR [ebx+0x64],edi
  4101dd:	mov    bl,0xb1
  4101df:	sbb    al,0xc5
  4101e1:	adc    bl,BYTE PTR [eax-0xdd8993c]
  4101e7:	arpl   WORD PTR [edi],bp
  4101e9:	add    DWORD PTR [eax],ebp
  4101eb:	js     0x410234
  4101ed:	test   al,0xc8
  4101ef:	icebp  
  4101f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101f1:	call   DWORD PTR [edx+0x31]
  4101f4:	xchg   DWORD PTR [ebx],edi
  4101f6:	ins    BYTE PTR es:[edi],dx
  4101f7:	sbb    BYTE PTR [edi-0x67],bl
  4101fa:	rcr    bl,0xfe
  4101fd:	mov    ebp,0xbb600f1c
  410202:	test   BYTE PTR [esi+0x75],dl
  410205:	mov    esi,0x4a2343c7
  41020a:	xor    eax,0x1b3066e
  41020f:	lock call 0x4d0b:0x8257e401
  410217:	jmp    0x4cbd8648
  41021c:	mov    ebx,0xa18ad691
  410221:	dec    esp
  410222:	gs ds xchg ebp,eax
  410225:	outs   dx,BYTE PTR ds:[esi]
  410226:	mov    edi,0x63bc025e
  41022b:	xchg   edx,eax
  41022c:	dec    ebx
  41022d:	xchg   edi,eax
  41022e:	cmp    DWORD PTR [edx-0x37],0x1b83c8f0
  410235:	push   0x6cd6eed9
  41023a:	dec    esp
  41023b:	and    BYTE PTR [ebx+edi*2-0x7e],0xc1
  410240:	(bad)  
  410242:	sub    dl,bl
  410244:	(bad)  
  410245:	cmp    ah,BYTE PTR [edx-0x56]
  410248:	jecxz  0x410287
  41024a:	push   ecx
  41024b:	adc    eax,0x519d28fd
  410250:	retf   0x693d
  410253:	cmp    bh,BYTE PTR [edi-0x14e86e97]
  410259:	and    BYTE PTR fs:[ebp+0x77],ah
  41025d:	cmp    ebx,DWORD PTR [ebp-0x13b4d699]
  410263:	xor    DWORD PTR [ecx-0x79],esp
  410266:	out    dx,al
  410267:	pop    ebx
  410268:	in     eax,0xd0
  41026a:	(bad)  
  41026b:	(bad)  
  41026c:	and    eax,0xc737d0c0
  410271:	push   ebx
  410272:	add    BYTE PTR ds:0x22851fe7,dh
  410278:	gs push ds
  41027a:	dec    edi
  41027b:	push   0x871846f3
  410280:	std    
  410281:	mov    al,0x37
  410283:	and    eax,0x885074f0
  410288:	clc    
  410289:	(bad)  
  41028b:	cmp    al,0x29
  41028d:	push   cs
  41028e:	jbe    0x4102af
  410290:	jl     0x410236
  410292:	adc    al,0x2e
  410294:	test   ax,0xa9fc
  410298:	pop    ds
  410299:	call   0x9db8:0xfb9ad1e0
  4102a0:	stos   BYTE PTR es:[edi],al
  4102a1:	and    DWORD PTR [eax+0x7e],0xffffff9c
  4102a5:	cwde   
  4102a6:	dec    esp
  4102a7:	clc    
  4102a8:	add    ebx,DWORD PTR ds:0xe7b3bf9c
  4102ae:	push   ecx
  4102af:	add    BYTE PTR [ebx+eax*2],bh
  4102b2:	inc    esp
  4102b3:	pop    ecx
  4102b4:	or     esp,esi
  4102b6:	arpl   ax,di
  4102b8:	xor    BYTE PTR [esi],0x19
  4102bb:	push   0xd5de9298
  4102c0:	loopne 0x4102bc
  4102c2:	into   
  4102c3:	pusha  
  4102c4:	fild   DWORD PTR [ebx]
  4102c6:	das    
  4102c7:	js     0x4102b1
  4102c9:	fiadd  WORD PTR [esi]
  4102cb:	xor    BYTE PTR [edx+0x60],bl
  4102ce:	jecxz  0x4102e5
  4102d0:	fld    DWORD PTR [ebx+0x44]
  4102d3:	cmc    
  4102d4:	outs   dx,BYTE PTR ds:[esi]
  4102d5:	sbb    eax,0xca6df959
  4102da:	mov    esi,0xcc7751db
  4102df:	addr16 call 0xebbfe1c5
  4102e5:	loopne 0x4102c0
  4102e7:	mov    al,0xd6
  4102e9:	xor    esp,0x2f
  4102ec:	stos   BYTE PTR es:[edi],al
  4102ed:	int3   
  4102ee:	std    
  4102ef:	(bad)  
  4102f0:	pop    esp
  4102f1:	test   al,0x6a
  4102f3:	int    0xc8
  4102f5:	xchg   ebp,eax
  4102f6:	sub    eax,DWORD PTR [esi]
  4102f8:	jnp    0x410364
  4102fa:	ret    0x6e32
  4102fd:	loop   0x41035e
  4102ff:	neg    BYTE PTR [eax+0x40b1b2dc]
  410305:	xor    eax,DWORD PTR [eax]
  410307:	out    0x77,eax
  410309:	into   
  41030a:	imul   esi,DWORD PTR [eax-0x10],0x6e
  41030e:	or     cl,BYTE PTR [edi-0x79]
  410311:	xor    eax,0x92dd0f77
  410316:	cli    
  410317:	dec    ecx
  410318:	sub    eax,DWORD PTR [ebp-0x42]
  41031b:	retf   0xf1da
  41031e:	fld    DWORD PTR [ebp+0x68]
  410321:	in     eax,dx
  410322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410323:	dec    ecx
  410324:	mov    ah,BYTE PTR [eax+0x59662478]
  41032a:	test   al,0x11
  41032c:	adc    eax,DWORD PTR [ebx]
  41032e:	add    al,0x9b
  410330:	adc    BYTE PTR [edi+0x7ca86c2b],ah
  410336:	sub    DWORD PTR [ebx],eax
  410338:	mov    esp,0xbc2cdfb
  41033d:	push   0xc14f5e11
  410342:	nop
  410343:	popf   
  410344:	pop    es
  410345:	sbb    dl,BYTE PTR [esp+eiz*8+0x44]
  410349:	(bad)  
  41034a:	dec    ecx
  41034b:	fneni(8087 only) 
  41034d:	mov    ebx,0x683acce2
  410352:	outs   dx,BYTE PTR ds:[esi]
  410353:	int3   
  410354:	ins    BYTE PTR es:[edi],dx
  410355:	ins    BYTE PTR es:[edi],dx
  410356:	ror    BYTE PTR [ebx+0x311e493d],cl
  41035c:	repnz outs dx,BYTE PTR ds:[esi]
  41035e:	ror    DWORD PTR [esi],1
  410360:	call   0xe117fd44
  410365:	call   0x33f:0x4b0b0b40
  41036c:	xchg   ecx,eax
  41036d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41036f:	pop    esi
  410370:	inc    ecx
  410371:	dec    esi
  410372:	jmp    0xa189:0x13829b53
  410379:	xor    BYTE PTR [esp+ebx*1],cl
  41037c:	xor    cl,ch
  41037e:	push   0x51427b59
  410383:	dec    ecx
  410384:	int3   
  410385:	mov    dh,BYTE PTR [edi-0x12]
  410388:	or     ebp,DWORD PTR [ecx+edx*4]
  41038b:	xor    bh,BYTE PTR [esi-0x54174752]
  410391:	ins    BYTE PTR es:[edi],dx
  410392:	push   ecx
  410393:	jne    0x410328
  410395:	int3   
  410396:	sahf   
  410397:	stos   BYTE PTR es:[edi],al
  410398:	mov    ebx,DWORD PTR [ebp-0x7e696d61]
  41039e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41039f:	mov    bh,0x0
  4103a1:	mov    ebp,0x9e438829
  4103a6:	jae    0x41036f
  4103a8:	push   ds
  4103a9:	push   edx
  4103aa:	cmp    BYTE PTR [ebp+ebp*4+0x3c957259],ch
  4103b1:	jp     0x41035e
  4103b3:	xchg   BYTE PTR [esi],dl
  4103b5:	mov    cl,0x6b
  4103b7:	cdq    
  4103b8:	mov    ds:0x48697c7c,al
  4103bd:	pop    ds
  4103be:	xlat   BYTE PTR ds:[ebx]
  4103bf:	dec    ebp
  4103c0:	nop
  4103c1:	std    
  4103c2:	test   ah,bl
  4103c4:	xchg   ecx,eax
  4103c5:	pop    ds
  4103c6:	inc    ebx
  4103c7:	push   cx
  4103c9:	fild   DWORD PTR [edi-0x69]
  4103cc:	pop    ebp
  4103cd:	rcr    BYTE PTR [ecx+eax*2+0x5a80694b],cl
  4103d4:	cli    
  4103d5:	inc    ebx
  4103d6:	jl     0x41042b
  4103d8:	and    ecx,DWORD PTR [ecx+0x62]
  4103db:	inc    edx
  4103dc:	push   edx
  4103dd:	iret   
  4103de:	and    DWORD PTR [edi],ebx
  4103e0:	inc    edi
  4103e1:	inc    esp
  4103e2:	sub    eax,0xbbded25f
  4103e7:	cld    
  4103e8:	push   0x5560f16f
  4103ed:	mov    cl,0x65
  4103ef:	jbe    0x4103a6
  4103f1:	adc    eax,0x4bcd74b5
  4103f6:	push   ebx
  4103f7:	in     al,0x78
  4103f9:	push   edi
  4103fa:	jb     0x4103ff
  4103fc:	ja     0x410418
  4103fe:	sar    BYTE PTR [ebx+0x2c],cl
  410401:	gs xchg edx,eax
  410403:	dec    eax
  410404:	xor    DWORD PTR [edi+0x61feedbb],edi
  41040a:	aas    
  41040b:	out    dx,eax
  41040c:	mov    edx,0xe17d7c18
  410411:	fild   WORD PTR [eax]
  410413:	test   al,0x13
  410415:	fsubr  QWORD PTR [esi+esi*4+0x6ae5ec1c]
  41041c:	jle    0x41040f
  41041e:	ret    0x5f96
  410421:	lea    edi,[eax+0x5e867ddc]
  410427:	shl    al,0x72
  41042a:	(bad)  
  41042b:	and    al,BYTE PTR [edx+0x138779bc]
  410431:	xlat   BYTE PTR ds:[ebx]
  410432:	pop    ss
  410433:	or     dh,BYTE PTR [edi+ecx*8]
  410436:	mov    ds:0x1cac3c4c,al
  41043b:	dec    edx
  41043c:	cmp    eax,edi
  41043e:	add    ecx,DWORD PTR [edi-0x62]
  410441:	or     BYTE PTR [eax-0x78],cl
  410444:	inc    edx
  410445:	rol    ebp,cl
  410447:	jl     0x410437
  410449:	popf   
  41044a:	out    0xb4,al
  41044c:	mov    dl,0x92
  41044e:	shr    BYTE PTR [ebp-0x13b9ae80],0xbc
  410455:	cwde   
  410456:	lds    edx,FWORD PTR [ecx+0x3cedb246]
  41045c:	ds ret 0xd1d7
  410460:	add    ch,BYTE PTR [edi]
  410462:	(bad)  
  410463:	xor    DWORD PTR [ebx-0x79],ebp
  410466:	gs (bad) 
  410468:	sar    ebx,1
  41046a:	adc    eax,DWORD PTR [eax+esi*2-0x1e]
  41046e:	aas    
  41046f:	add    dl,al
  410471:	xchg   cl,ah
  410473:	out    0xc0,al
  410475:	sahf   
  410476:	cmp    eax,0x52289afb
  41047b:	jmp    0xee49:0x764cdab4
  410482:	mov    esp,0x9cd1608c
  410487:	ja     0x41049f
  410489:	mov    ebx,0xf910587e
  41048e:	aaa    
  41048f:	mov    dl,0xe
  410491:	call   0xc884:0x545773bf
  410498:	cmc    
  410499:	xchg   esp,eax
  41049a:	fistp  DWORD PTR [ebx]
  41049c:	jp     0x410439
  41049e:	adc    bl,ah
  4104a0:	addr16 dec edx
  4104a2:	and    DWORD PTR [edx+eax*8-0x4d],ebp
  4104a6:	sbb    al,0xa7
  4104a8:	(bad)  [edi]
  4104aa:	ret    
  4104ab:	cmp    DWORD PTR [ebx],ecx
  4104ad:	outs   dx,BYTE PTR ds:[esi]
  4104ae:	sbb    eax,0x24db87a6
  4104b3:	addr16 xor eax,0x6e1d96df
  4104b9:	mov    ebx,0xfcaaab9c
  4104be:	pop    edi
  4104bf:	sub    al,0x25
  4104c1:	sub    eax,0xfe5ac368
  4104c6:	aad    0x8e
  4104c8:	xchg   ecx,eax
  4104c9:	or     BYTE PTR [ebp+0x5c4764e1],bh
  4104cf:	cs mov dh,al
  4104d2:	pop    eax
  4104d3:	mov    dh,0x35
  4104d5:	dec    esi
  4104d6:	aam    0x31
  4104d8:	push   ds
  4104d9:	and    bl,dl
  4104db:	push   eax
  4104dc:	fmul   QWORD PTR [esi+0x1500c463]
  4104e2:	cmp    dl,BYTE PTR [ecx+0x17]
  4104e5:	and    esi,DWORD PTR [eax-0x373dae9]
  4104eb:	cmp    al,0x4b
  4104ed:	test   BYTE PTR ds:0xc15f8575,bh
  4104f3:	inc    edi
  4104f4:	ffreep st(5)
  4104f6:	push   eax
  4104f7:	push   es
  4104f8:	mov    edi,0x4b51caf1
  4104fd:	sbb    eax,0x13b41f62
  410502:	mov    ch,0x84
  410504:	sbb    DWORD PTR [esi+0x106a895d],esp
  41050a:	dec    esi
  41050b:	push   ebp
  41050c:	dec    ebp
  41050d:	and    edi,DWORD PTR [esi-0x8]
  410510:	aam    0xd9
  410512:	xchg   BYTE PTR [ecx+0x13cac34f],bl
  410518:	adc    bl,BYTE PTR [edx-0x3]
  41051b:	cs push ebp
  41051d:	pop    esp
  41051e:	loopne 0x410530
  410520:	jge    0x410534
  410522:	and    bh,BYTE PTR [edx]
  410524:	scas   al,BYTE PTR es:[edi]
  410525:	push   edi
  410526:	ins    DWORD PTR es:[edi],dx
  410527:	adc    eax,0x597a48a6
  41052c:	inc    eax
  41052d:	mov    al,ds:0x299c22f1
  410532:	xchg   edi,ebx
  410534:	in     al,0xeb
  410536:	repz loope 0x410558
  410539:	ror    DWORD PTR [ebx+0x40],cl
  41053c:	std    
  41053d:	mov    WORD PTR [eax+esi*2-0xa597f1a],?
  410544:	xor    al,0x72
  410546:	(bad)  [eax+eax*4+0x3b]
  41054a:	jp     0x410579
  41054c:	das    
  41054d:	loopne 0x4104e4
  41054f:	sub    dh,BYTE PTR [ecx+0x24]
  410552:	out    0x76,al
  410554:	xchg   BYTE PTR [ebx],bh
  410556:	jo     0x4104fa
  410558:	xchg   ecx,eax
  410559:	lods   al,BYTE PTR ds:[esi]
  41055a:	es or  esp,edx
  41055d:	ja     0x4105a5
  41055f:	mov    eax,ds:0x826a047c
  410564:	pusha  
  410565:	mov    bl,0x76
  410567:	addr16 cli 
  410569:	mov    esi,0xc57fabb
  41056e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41056f:	cmp    al,bh
  410571:	sub    esi,DWORD PTR [ebp+eiz*2-0xa40bb2a]
  410578:	sbb    eax,0x260cdd3a
  41057d:	xchg   esp,eax
  41057e:	xchg   edi,eax
  41057f:	cld    
  410580:	cmp    DWORD PTR [esi+0x79ff20ce],0xffffffb2
  410587:	pusha  
  410588:	nop
  410589:	push   es
  41058a:	div    BYTE PTR [edi+0x3f]
  41058d:	xor    eax,0x86e37da0
  410592:	das    
  410593:	jb     0x410569
  410595:	push   eax
  410596:	ret    0xea39
  410599:	jns    0x4105f1
  41059b:	push   edx
  41059c:	iret   
  41059d:	push   esp
  41059e:	adc    eax,0xbb6022cf
  4105a3:	push   es
  4105a4:	es mov bl,0x9f
  4105a7:	mov    eax,0x2e34d37c
  4105ac:	int    0x4b
  4105ae:	cmp    BYTE PTR [eax+eiz*1],dl
  4105b1:	add    BYTE PTR [edx],dh
  4105b3:	(bad)  
  4105b4:	leave  
  4105b5:	fld    DWORD PTR [eax]
  4105b7:	punpckhdq mm0,QWORD PTR [edx-0x4e]
  4105bb:	dec    esp
  4105bc:	add    edx,eax
  4105be:	pop    ss
  4105bf:	xchg   edi,eax
  4105c0:	mov    ebp,0x7b601024
  4105c5:	retf   
  4105c6:	popf   
  4105c7:	int    0xb8
  4105c9:	mov    cl,0x70
  4105cb:	test   bh,al
  4105cd:	dec    ecx
  4105ce:	inc    esi
  4105cf:	shl    BYTE PTR [eax],cl
  4105d1:	or     al,al
  4105d3:	sub    eax,0x3352deff
  4105d8:	dec    esp
  4105d9:	arpl   WORD PTR [edx-0x479c7853],cx
  4105df:	mov    eax,0x76e0bcc1
  4105e4:	push   0xffffffdd
  4105e6:	xchg   DWORD PTR [ebx],esi
  4105e8:	adc    BYTE PTR cs:[edi+0x63],0xea
  4105ed:	push   edi
  4105ee:	push   0x4d7c32aa
  4105f3:	pusha  
  4105f4:	clc    
  4105f5:	xlat   BYTE PTR ds:[ebx]
  4105f6:	mov    eax,0x729be324
  4105fb:	in     al,0xd3
  4105fd:	mov    esp,0x11c637b9
  410602:	aas    
  410603:	xor    dh,al
  410605:	not    DWORD PTR [edi-0x77062334]
  41060b:	stc    
  41060c:	push   0x3088033f
  410611:	push   ebp
  410612:	mov    edx,0x14472962
  410617:	aad    0xb9
  410619:	outs   dx,DWORD PTR ds:[esi]
  41061a:	mov    edx,0x82562c57
  41061f:	sub    BYTE PTR [edi+edx*8+0x74],dl
  410623:	bound  ebx,QWORD PTR [ebx-0x1d]
  410626:	outs   dx,DWORD PTR ds:[esi]
  410627:	cmp    al,0x25
  410629:	arpl   dx,dx
  41062b:	imul   eax,DWORD PTR [esi],0xfffffff0
  41062e:	adc    ebp,DWORD PTR [esi+0xae5aa8d]
  410634:	adc    bl,BYTE PTR [ecx+0x79478a16]
  41063a:	pop    ss
  41063b:	enter  0x13a5,0x82
  41063f:	imul   esi,DWORD PTR [esp+eax*4+0x360f39ce],0x50
  410647:	sub    bl,bh
  410649:	or     esp,DWORD PTR [ebp-0x19]
  41064c:	fwait
  41064d:	bound  eax,QWORD PTR [edx+esi*2+0x24]
  410651:	push   es
  410652:	cmp    DWORD PTR [eax+0x7ce3df98],esp
  410658:	pushf  
  410659:	in     al,0xf9
  41065b:	mov    dl,0xb0
  41065d:	in     al,0xa9
  41065f:	jbe    0x410607
  410661:	cmp    BYTE PTR [ecx+0x7a177309],bh
  410667:	mov    ds:0x503be8d0,eax
  41066c:	push   cs
  41066d:	fst    QWORD PTR [esp+eiz*8+0x1d344476]
  410674:	shl    edi,cl
  410676:	sub    dl,bh
  410678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410679:	lods   al,BYTE PTR ds:[esi]
  41067a:	lock retf 
  41067c:	in     eax,0xb2
  41067e:	dec    esi
  41067f:	jne    0x4106fa
  410681:	push   edx
  410682:	and    al,0x80
  410684:	sar    BYTE PTR [edi+0x66],cl
  410687:	loopne 0x4106ed
  410689:	retf   
  41068a:	sub    edi,DWORD PTR [eax-0x41605836]
  410690:	cmp    ebp,esp
  410692:	mov    ds:0x2558debc,eax
  410697:	arpl   WORD PTR [edx+0x9],bx
  41069a:	lods   al,BYTE PTR ds:[esi]
  41069b:	bound  edx,QWORD PTR [ebp-0x7e]
  41069e:	test   BYTE PTR [edi-0x18],cl
  4106a1:	xor    al,ch
  4106a3:	xor    BYTE PTR [edi+0x7cec5dd1],dl
  4106a9:	call   0xd13a196d
  4106ae:	lods   eax,DWORD PTR ds:[esi]
  4106af:	mov    esi,0xec21957d
  4106b4:	push   es
  4106b5:	fadd   st,st(5)
  4106b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106b8:	mov    ah,0xb7
  4106ba:	cwde   
  4106bb:	or     eax,0x4b7d6526
  4106c0:	dec    esp
  4106c1:	std    
  4106c2:	adc    BYTE PTR [ebx-0x6a],al
  4106c5:	aas    
  4106c6:	cmp    DWORD PTR [edi-0x7d88ee1d],0x707aa02e
  4106d0:	ds dec esi
  4106d2:	jno    0x4106cc
  4106d4:	ds mov esi,ebp
  4106d7:	xor    al,0xf5
  4106d9:	xlat   BYTE PTR ds:[ebx]
  4106da:	xor    dl,BYTE PTR [ecx]
  4106dc:	cmp    edi,ebx
  4106de:	mov    bl,0xeb
  4106e0:	dec    esi
  4106e1:	or     BYTE PTR [esi],bl
  4106e3:	sub    DWORD PTR [ecx+0x79],eax
  4106e6:	out    dx,eax
  4106e7:	push   cs
  4106e8:	pop    eax
  4106e9:	xor    DWORD PTR [si-0x7746],ebp
  4106ee:	inc    ecx
  4106ef:	(bad)  
  4106f1:	jmp    0xd111e7f0
  4106f6:	out    dx,al
  4106f7:	jno    0x4106d9
  4106f9:	mov    eax,ds:0xcdb6c133
  4106fe:	loop   0x41071a
  410700:	dec    ebx
  410701:	dec    esi
  410702:	sub    bl,0xf0
  410705:	jg     0x4106d8
  410707:	mov    dl,0xb7
  410709:	mov    BYTE PTR [edi],dh
  41070b:	cdq    
  41070c:	les    edi,FWORD PTR [edi+0x3ec3dbf9]
  410712:	ja     0x410750
  410714:	mov    dh,0x32
  410716:	xlat   BYTE PTR es:[ebx]
  410718:	std    
  410719:	pop    esi
  41071a:	fucomp st(3)
  41071c:	or     DWORD PTR [edi+0x4a],edi
  41071f:	add    eax,0xde9ab701
  410724:	stos   BYTE PTR es:[edi],al
  410725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410726:	ret    0x9126
  410729:	imul   ecx
  41072b:	cs mov esi,0x95457fd9
  410731:	sbb    BYTE PTR [ebx-0xba699b4],0xe8
  410738:	test   al,0x2c
  41073a:	lods   al,BYTE PTR ds:[esi]
  41073b:	rcr    BYTE PTR ds:0x361385bd,cl
  410741:	arpl   WORD PTR [ebp-0x18ba1acb],di
  410747:	clc    
  410748:	jecxz  0x41079a
  41074a:	push   ebx
  41074b:	arpl   WORD PTR [ebx-0x3],dx
  41074e:	cli    
  41074f:	test   eax,0xb64330e6
  410754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410755:	cmp    eax,0x2cafa945
  41075a:	pop    esi
  41075b:	mov    esp,0x436a0dcb
  410760:	pop    esi
  410761:	test   ch,dh
  410763:	mov    WORD PTR [ebx+0x79],ds
  410766:	hlt    
  410767:	inc    edx
  410768:	stc    
  410769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41076a:	add    DWORD PTR es:[edi+edi*1+0x33730fbd],ebx
  410772:	adc    BYTE PTR [ebx+0x50],bl
  410775:	push   esp
  410776:	and    edx,ebx
  410778:	sub    dl,BYTE PTR [ecx]
  41077a:	mov    ds:0xead9ec29,eax
  41077f:	fld    QWORD PTR [ebp+0x37]
  410782:	mov    BYTE PTR [edx],cl
  410784:	pop    eax
  410785:	xor    DWORD PTR [esi+eiz*1],edx
  410788:	daa    
  410789:	or     eax,0x3f2711c7
  41078e:	stc    
  41078f:	push   ebp
  410790:	jmp    0x36539db8
  410795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410796:	outs   dx,BYTE PTR ds:[esi]
  410797:	nop
  410798:	sub    BYTE PTR [eax-0x2],dl
  41079b:	imul   ebp,ebp,0x38
  41079e:	sbb    edx,edi
  4107a0:	add    edx,edx
  4107a2:	in     eax,dx
  4107a3:	mov    edx,0x1473fb49
  4107a8:	shl    DWORD PTR [ecx+0x53],1
  4107ab:	fcmovnu st,st(4)
  4107ad:	cmp    BYTE PTR [edi+0x77b6151],dh
  4107b3:	sub    eax,0x600e0b44
  4107b8:	fs or  BYTE PTR ds:[eax+0x695cdc1f],dl
  4107c0:	(bad)  
  4107c1:	mov    dh,0xab
  4107c3:	push   ds
  4107c4:	dec    edi
  4107c5:	push   esp
  4107c6:	(bad)  
  4107c7:	(bad)  
  4107c8:	clc    
  4107c9:	mov    ds,esi
  4107cb:	xor    DWORD PTR [edx-0x5101e33b],0xfffffff6
  4107d2:	or     ebp,DWORD PTR [edi]
  4107d4:	xchg   edx,eax
  4107d5:	and    DWORD PTR [eax+0x364359ae],ebp
  4107db:	cmc    
  4107dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107dd:	mov    dh,0x2
  4107df:	jle    0x410808
  4107e1:	sbb    DWORD PTR [ebp-0x61],ebp
  4107e4:	xor    esp,edi
  4107e6:	pop    ebp
  4107e7:	mov    esi,0xac6f4e4a
  4107ec:	mov    ch,0x8b
  4107ee:	mov    al,ds:0x49f762bb
  4107f3:	(bad)  
  4107f4:	popa   
  4107f5:	pop    esp
  4107f6:	not    DWORD PTR [edi-0x2371b6c4]
  4107fc:	nop
  4107fd:	in     eax,dx
  4107fe:	push   esp
  4107ff:	lods   eax,DWORD PTR ds:[esi]
  410800:	adc    eax,0x701491ca
  410805:	xchg   esi,eax
  410806:	mov    ah,0x84
  410808:	gs push ebx
  41080a:	dec    ebp
  41080b:	gs (bad) 
  41080f:	pop    eax
  410810:	loope  0x41080a
  410812:	xor    edi,DWORD PTR [ebx+0x67]
  410815:	add    cl,BYTE PTR [ebx]
  410817:	mov    edi,0x7e2fb86c
  41081c:	push   es
  41081d:	mov    cs,ebx
  41081f:	and    eax,0x98490b8c
  410824:	(bad)  
  410825:	in     al,0x67
  410827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410828:	xchg   BYTE PTR [esi],bh
  41082a:	xchg   BYTE PTR [eax-0x33],bl
  41082d:	into   
  41082e:	add    al,ch
  410830:	mov    esi,0xc04823dc
  410835:	mov    al,0x37
  410837:	pop    ecx
  410838:	xor    eax,0x1c08faff
  41083d:	add    eax,0x8f0bb59f
  410842:	cdq    
  410843:	xchg   DWORD PTR [ebx],edi
  410845:	sar    BYTE PTR [ebx+eax*4+0x24],1
  410849:	test   esi,edx
  41084b:	push   ebp
  41084c:	out    dx,eax
  41084d:	sahf   
  41084e:	jp     0x4108bf
  410850:	sbb    dh,0x8c
  410853:	pop    edi
  410854:	push   edi
  410855:	mov    esp,0x2cb27efe
  41085a:	(bad)  
  41085b:	es mov dh,0x20
  41085e:	out    0xa,eax
  410860:	out    dx,eax
  410861:	call   FWORD PTR [eax]
  410863:	pop    ebx
  410864:	fild   WORD PTR [eax+0x55]
  410867:	int    0xc8
  410869:	sub    BYTE PTR [esi-0x40],ch
  41086c:	loope  0x410861
  41086e:	xchg   DWORD PTR [ebx-0x51],ebp
  410871:	sbb    DWORD PTR [edx+0x7044540a],edx
  410877:	inc    ebp
  410878:	jg     0x41083d
  41087a:	rcr    BYTE PTR [eax+0x4b],cl
  41087d:	jg     0x410878
  41087f:	mov    al,0xe0
  410881:	adc    al,0xc5
  410883:	(bad)  
  410884:	cwde   
  410885:	pop    esi
  410886:	(bad)  
  410887:	retf   0x4889
  41088a:	sahf   
  41088b:	cmp    bl,BYTE PTR [eax]
  41088d:	or     eax,0x5742a258
  410892:	aaa    
  410893:	fidivr DWORD PTR [edx+0x6f]
  410896:	dec    ebx
  410897:	lds    edi,FWORD PTR [esi+0x1db3be3e]
  41089d:	sbb    eax,0x519f7674
  4108a2:	jge    0x4108cc
  4108a4:	or     eax,0x1d7d3eab
  4108a9:	rcl    DWORD PTR [edx+0x5],0x4b
  4108ad:	pop    es
  4108ae:	cli    
  4108af:	cli    
  4108b0:	adc    al,0x56
  4108b2:	sahf   
  4108b3:	push   ecx
  4108b4:	mov    ch,dh
  4108b6:	dec    edx
  4108b7:	ror    DWORD PTR [edi-0x6281895e],1
  4108bd:	sbb    BYTE PTR [ecx-0x62],0xa0
  4108c1:	jbe    0x4108f8
  4108c3:	inc    eax
  4108c4:	(bad)  
  4108c5:	add    esp,DWORD PTR [ebx-0x3f8486a6]
  4108cb:	mov    al,ds:0x84e6fd78
  4108d0:	mov    BYTE PTR [esi+0x73],ah
  4108d3:	inc    edx
  4108d4:	add    al,0x1
  4108d6:	inc    ebp
  4108d7:	mov    ebx,0xaa3cb0df
  4108dc:	push   0xffffffaf
  4108de:	test   BYTE PTR [ebx+0x9],dh
  4108e1:	adc    BYTE PTR [ebp+0x6e],bl
  4108e4:	pop    ss
  4108e5:	inc    edx
  4108e6:	nop
  4108e7:	sub    DWORD PTR [di-0x32],esi
  4108eb:	outs   dx,BYTE PTR ds:[esi]
  4108ec:	adc    esi,ecx
  4108ee:	mov    dl,0xde
  4108f0:	inc    ebx
  4108f1:	jecxz  0x4108db
  4108f3:	arpl   sp,di
  4108f5:	data16 and al,0x18
  4108f8:	call   0x231a:0xdffd9e41
  4108ff:	(bad)  
  410900:	in     eax,dx
  410901:	(bad)  
  410902:	ds fucomip st,st(6)
  410905:	push   cs
  410906:	cwde   
  410907:	jmp    0x56d261e3
  41090c:	sub    DWORD PTR [esi],ebp
  41090e:	rcr    DWORD PTR [ecx+0x77],0xc7
  410912:	mov    esi,0xb2ce226e
  410917:	add    dl,BYTE PTR [ebx+0x14]
  41091a:	xor    DWORD PTR [esi+0x233158a4],eax
  410920:	aaa    
  410921:	stos   DWORD PTR es:[edi],eax
  410922:	bnd jns 0x4108fa
  410925:	add    BYTE PTR ds:0x3247490f,bh
  41092b:	pop    es
  41092c:	lahf   
  41092d:	enterw 0x9a4a,0xe9
  410932:	retf   0xa6c0
  410935:	pusha  
  410936:	jno    0x41097c
  410938:	lds    edx,FWORD PTR ds:0xbad26bd
  41093e:	adc    eax,DWORD PTR [edi-0x62beb3e5]
  410944:	xor    BYTE PTR [ebp+0xd],ah
  410947:	test   BYTE PTR [ebp+0xd],ch
  41094a:	pop    ebx
  41094b:	gs mov ch,0x56
  41094e:	add    DWORD PTR [ebx],esi
  410950:	add    al,0x86
  410952:	inc    ebp
  410953:	ror    BYTE PTR [edi-0x4367bdec],0x1
  41095a:	ret    
  41095b:	daa    
  41095c:	xor    DWORD PTR [eax+eiz*4-0x31],ebp
  410960:	lods   al,BYTE PTR ds:[esi]
  410961:	or     esp,DWORD PTR [eax-0x34c59df1]
  410967:	cmp    ch,BYTE PTR [ebx]
  410969:	pop    edx
  41096a:	jnp    0x410956
  41096c:	dec    edx
  41096d:	or     BYTE PTR [edx],dl
  41096f:	in     eax,0x34
  410971:	ja     0x410988
  410973:	pop    edi
  410974:	mov    ebp,0x131985ee
  410979:	and    DWORD PTR [ebp+0x7c90cdbe],edx
  41097f:	enter  0xf02d,0x8
  410983:	xor    eax,0xb6450224
  410988:	and    edx,DWORD PTR [edi-0x6c2ef63f]
  41098e:	aas    
  41098f:	and    DWORD PTR [edx+0x6],edi
  410992:	jns    0x41099b
  410994:	add    bl,dh
  410996:	adc    dh,BYTE PTR [eax+0x1c]
  410999:	(bad)  
  41099b:	cmp    edi,edi
  41099d:	sbb    BYTE PTR [ecx+0x5ae7bd87],bl
  4109a3:	popf   
  4109a4:	outs   dx,DWORD PTR ds:[esi]
  4109a5:	lock dec esp
  4109a7:	sbb    ebx,DWORD PTR [ecx+0x59]
  4109aa:	(bad)  
  4109ab:	cmp    ch,BYTE PTR ds:0xb3d5f8d3
  4109b1:	xor    eax,0x41b69880
  4109b6:	fst    DWORD PTR [ebx-0x5c]
  4109b9:	daa    
  4109ba:	retf   0x5697
  4109bd:	in     al,dx
  4109be:	add    al,0xf0
  4109c0:	mov    BYTE PTR [ebp+0x5a6d5961],ah
  4109c6:	dec    ebp
  4109c7:	sahf   
  4109c8:	mov    al,ds:0x962c1e69
  4109cd:	xor    DWORD PTR [ecx+0x60c09f60],edi
  4109d3:	in     eax,0x88
  4109d5:	f2xm1  
  4109d7:	push   edx
  4109d8:	ins    DWORD PTR es:[edi],dx
  4109d9:	adc    eax,0x208b8550
  4109de:	or     DWORD PTR [ecx-0xc],ecx
  4109e1:	dec    esi
  4109e2:	ins    DWORD PTR es:[edi],dx
  4109e3:	out    0x78,al
  4109e5:	or     BYTE PTR [ecx-0x36],0xf
  4109e9:	sub    DWORD PTR [eax-0x2f],esp
  4109ec:	mov    ebx,0x83f2980a
  4109f1:	sub    DWORD PTR [ebx-0x31ea6140],ebx
  4109f7:	pop    esp
  4109f8:	jmp    0x50e9dbe1
  4109fd:	mov    DWORD PTR [edi+edx*2-0x2b6891a9],ebx
  410a04:	add    esi,DWORD PTR [eax+0x3301247c]
  410a0a:	(bad)  
  410a0b:	repz setnp BYTE PTR [ebx-0x80]
  410a10:	lea    esi,[ebx]
  410a12:	in     al,dx
  410a13:	cmc    
  410a14:	push   esi
  410a15:	xchg   ebx,eax
  410a16:	in     eax,dx
  410a17:	xchg   DWORD PTR ds:0x58c78c4c,esi
  410a1d:	cmp    eax,0xdacd4dc6
  410a22:	es mov esp,0x894eb910
  410a28:	aad    0x3b
  410a2a:	test   DWORD PTR [eax+0x69],0x3256e2bb
  410a31:	icebp  
  410a32:	ret    
  410a33:	xor    al,BYTE PTR [ebx]
  410a35:	inc    eax
  410a36:	ja     0x410a83
  410a38:	xor    al,0x56
  410a3a:	mov    eax,edx
  410a3c:	inc    ebx
  410a3d:	sbb    ecx,DWORD PTR [ebx-0x37e6371f]
  410a43:	inc    edi
  410a44:	gs mov cl,0xcb
  410a47:	(bad)  
  410a49:	test   bh,bh
  410a4b:	xor    BYTE PTR [ebx-0x7d],cl
  410a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a4f:	cmc    
  410a50:	sub    DWORD PTR ds:0xf2aad6ca,ebx
  410a56:	dec    esi
  410a57:	sahf   
  410a58:	jge    0x410ab8
  410a5a:	in     al,dx
  410a5b:	aad    0x8
  410a5d:	push   esp
  410a5e:	pop    ebx
  410a5f:	adc    BYTE PTR [eax-0x2167a2be],bl
  410a65:	std    
  410a66:	addr16 push edi
  410a68:	aas    
  410a69:	mov    ebx,0xcb85578a
  410a6e:	mov    BYTE PTR [edx-0x26bffd3],ch
  410a74:	mov    edi,0xcabb2202
  410a79:	dec    esi
  410a7a:	lds    ecx,FWORD PTR [edx]
  410a7c:	jl     0x410a82
  410a7e:	cmp    DWORD PTR [edx-0x1a09da1d],ebp
  410a84:	js     0x410a43
  410a86:	push   ds
  410a87:	addr16 mov esp,0xb009f5ae
  410a8d:	inc    edx
  410a8e:	cwde   
  410a8f:	ret    0x4672
  410a92:	cmp    al,0xae
  410a94:	adc    eax,0x5
  410a97:	xchg   edi,eax
  410a98:	sub    eax,0xf5242cf
  410a9d:	dec    ebx
  410a9e:	push   ss
  410a9f:	xchg   esi,eax
  410aa0:	aam    0xb8
  410aa2:	pop    ds
  410aa3:	loopne 0x410a8b
  410aa5:	jl     0x410a77
  410aa7:	inc    eax
  410aa8:	push   ss
  410aa9:	cdq    
  410aaa:	adc    edi,ebx
  410aac:	fwait
  410aad:	jmp    0xede1:0x8788889c
  410ab4:	mov    ah,0x61
  410ab6:	out    dx,eax
  410ab7:	mov    dl,0xf1
  410ab9:	neg    DWORD PTR [eax]
  410abb:	or     edx,DWORD PTR [esi]
  410abd:	ins    DWORD PTR es:[edi],dx
  410abe:	pop    ebx
  410abf:	mov    ah,0x9b
  410ac1:	mov    ecx,0x8c2ab5c5
  410ac6:	add    esp,edi
  410ac8:	or     dl,0xcb
  410acb:	ds in  eax,dx
  410acd:	inc    edx
  410ace:	jmp    0x1fe2:0xda57a59b
  410ad5:	push   es
  410ad6:	sahf   
  410ad7:	sub    cl,BYTE PTR [ebp+0x3d]
  410ada:	mov    ecx,0x909f23c
  410adf:	inc    ebp
  410ae0:	(bad)  
  410ae1:	push   edi
  410ae2:	xchg   ebx,eax
  410ae3:	pushf  
  410ae4:	test   DWORD PTR [edx+0x8],0xe9a20dcb
  410aeb:	xchg   ebx,eax
  410aec:	adc    al,cl
  410aee:	jmp    0xa8a42e62
  410af3:	int    0x5a
  410af5:	mov    dl,0xc4
  410af7:	dec    eax
  410af8:	xchg   esi,eax
  410af9:	pop    ecx
  410afa:	pushf  
  410afb:	xchg   edi,eax
  410afc:	mov    ds:0x6933b488,al
  410b01:	sbb    ebx,DWORD PTR [ecx+0x6f]
  410b04:	pop    ebx
  410b05:	in     eax,dx
  410b06:	loopne 0x410a98
  410b08:	call   0xbb3d9bb6
  410b0d:	int3   
  410b0e:	hlt    
  410b0f:	jp     0x410b3a
  410b11:	or     ch,BYTE PTR [esi]
  410b13:	out    dx,eax
  410b14:	pushf  
  410b15:	push   esi
  410b16:	lock sbb eax,0x3226d892
  410b1c:	in     al,0x11
  410b1e:	cmp    eax,0xd5e3d2c1
  410b23:	lods   al,BYTE PTR ds:[esi]
  410b24:	and    eax,0x82f2e52c
  410b29:	das    
  410b2a:	pop    ss
  410b2b:	(bad)  
  410b2d:	dec    edi
  410b2e:	mov    eax,ds:0x1ec82bf5
  410b33:	arpl   ax,ax
  410b35:	out    0x5b,eax
  410b37:	add    eax,0xd9f33c6a
  410b3c:	shr    BYTE PTR [esi],1
  410b3e:	or     DWORD PTR [eax],esi
  410b40:	pop    eax
  410b41:	mov    al,ds:0x7ab4a6ce
  410b46:	or     cl,0x96
  410b49:	ins    BYTE PTR es:[edi],dx
  410b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4b:	add    BYTE PTR [edi-0x58],bh
  410b4e:	pop    ss
  410b4f:	rcr    DWORD PTR [esp+eax*4-0x7a45cc5b],0xf4
  410b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b58:	or     cl,0x56
  410b5b:	xor    eax,0xecb0f298
  410b60:	sar    ebx,1
  410b62:	inc    ebp
  410b63:	imul   ecx,DWORD PTR gs:[esi-0x38],0x4a
  410b68:	loopne 0x410b6f
  410b6a:	push   ss
  410b6b:	jo     0x410b24
  410b6d:	push   es
  410b6e:	push   esp
  410b6f:	out    dx,eax
  410b70:	jp     0x410b8c
  410b72:	jae    0x410af7
  410b74:	fs push ss
  410b76:	in     eax,0x2e
  410b78:	sahf   
  410b79:	add    eax,0x5ae96051
  410b7e:	rcl    DWORD PTR es:[ebx],1
  410b81:	iret   
  410b82:	imul   DWORD PTR [edx-0x39dcfb86]
  410b88:	sahf   
  410b89:	stc    
  410b8a:	add    cl,BYTE PTR [edx+0x68]
  410b8d:	xor    al,0xc6
  410b8f:	pushf  
  410b90:	icebp  
  410b91:	in     al,dx
  410b92:	in     eax,0xb2
  410b94:	data16 jae 0x410c0d
  410b97:	or     al,0x70
  410b99:	xchg   edx,eax
  410b9a:	lds    esi,FWORD PTR [ebp+ebx*1-0x2a]
  410b9e:	gs mov bl,0x6b
  410ba1:	stc    
  410ba2:	mov    ch,0x66
  410ba4:	bound  edx,QWORD PTR [edi]
  410ba6:	cmp    BYTE PTR [edx+0x3a],dh
  410ba9:	adc    eax,ebp
  410bab:	pop    ebp
  410bac:	cld    
  410bad:	or     al,0x25
  410baf:	adc    BYTE PTR [esi],cl
  410bb1:	push   0x5981e5d4
  410bb6:	in     eax,0xa4
  410bb8:	shl    DWORD PTR [edx],0x5a
  410bbb:	xlat   BYTE PTR ds:[ebx]
  410bbc:	mov    ds:0x7f9a8508,eax
  410bc1:	and    al,0x3f
  410bc3:	sub    ebp,DWORD PTR [ebx]
  410bc5:	ins    DWORD PTR es:[edi],dx
  410bc6:	jl     0x410c05
  410bc8:	push   esp
  410bc9:	and    ebx,esi
  410bcb:	jb     0x410bec
  410bcd:	pop    eax
  410bce:	sbb    al,0x51
  410bd0:	mov    bh,BYTE PTR [ebp+0x35]
  410bd3:	sub    dh,BYTE PTR [ebp+0x75]
  410bd6:	xchg   bl,ch
  410bd8:	cmc    
  410bd9:	retf   
  410bda:	call   0x52:0xf88dfb2b
  410be1:	pushf  
  410be2:	jae    0x410c49
  410be4:	out    dx,eax
  410be5:	mov    ch,0x17
  410be7:	addr16 pop eax
  410be9:	pop    ds
  410bea:	jmp    0x410b8f
  410bec:	cmp    BYTE PTR [ebp+0x12],0x56
  410bf0:	xlat   BYTE PTR ds:[ebx]
  410bf1:	fadd   QWORD PTR [eax-0x58d63d3f]
  410bf7:	jae    0x410c5d
  410bf9:	stos   DWORD PTR es:[edi],eax
  410bfa:	clc    
  410bfb:	push   ebp
  410bfc:	mov    ah,0xd8
  410bfe:	fs (bad) 
  410c00:	push   esp
  410c01:	fldcw  WORD PTR [esi-0x7fefb8a4]
  410c07:	and    DWORD PTR [esi+0x34],edi
  410c0a:	xchg   edx,eax
  410c0b:	xchg   ebp,eax
  410c0c:	sar    DWORD PTR [esi],0x94
  410c0f:	aad    0xb7
  410c11:	sbb    eax,0xb2907ecb
  410c16:	cmp    al,0x77
  410c18:	jb     0x410c2e
  410c1a:	xchg   esp,eax
  410c1b:	mov    esp,0xf07755aa
  410c20:	jno    0x410bf0
  410c22:	imul   ecx,DWORD PTR [eax-0xd],0xc4f16c2b
  410c29:	mov    ebp,0x2beda2df
  410c2e:	(bad)  
  410c2f:	cld    
  410c30:	sar    DWORD PTR [edx+0x2fa3d42f],cl
  410c36:	stc    
  410c37:	fld    QWORD PTR [ecx]
  410c39:	xor    BYTE PTR [ebx+0x325c10d2],dh
  410c3f:	add    al,0x57
  410c41:	call   0x7e6:0x8fd0e6d1
  410c48:	push   0x88e58479
  410c4d:	jo     0x410c74
  410c4f:	aaa    
  410c50:	stc    
  410c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c52:	or     ch,al
  410c54:	mov    eax,ds:0xcd73855a
  410c59:	popa   
  410c5a:	mov    ebp,0x7d6b1d6
  410c5f:	mov    eax,cs:0x1ed412e5
  410c65:	mov    ebx,0xf34106cf
  410c6a:	xor    bl,BYTE PTR ss:[esi]
  410c6d:	mov    esi,0x55b48b30
  410c72:	jbe    0x410c15
  410c74:	jo     0x410c53
  410c76:	shr    DWORD PTR [esi-0x1f855ce9],0x10
  410c7d:	outs   dx,BYTE PTR ds:[esi]
  410c7e:	push   eax
  410c7f:	push   eax
  410c80:	sub    bl,BYTE PTR ds:0x944afcc7
  410c86:	dec    ecx
  410c87:	pushf  
  410c88:	(bad)  
  410c89:	mov    ch,0x36
  410c8b:	pop    ebp
  410c8c:	jmp    0x5bcc0186
  410c91:	jmp    0x7b5f9307
  410c96:	pop    ecx
  410c97:	fwait
  410c98:	pop    esi
  410c99:	xchg   ebx,eax
  410c9a:	add    ecx,eax
  410c9c:	stos   BYTE PTR es:[edi],al
  410c9d:	jne    0x410c70
  410c9f:	xor    eax,0xbe0e71cd
  410ca4:	(bad)  
  410ca5:	jmp    0x410cca
  410ca7:	inc    ebx
  410ca8:	sbb    ah,BYTE PTR [edi]
  410caa:	popa   
  410cab:	cld    
  410cac:	addr16 push edi
  410cae:	mov    dh,dl
  410cb0:	or     edx,DWORD PTR [ebx+ecx*4]
  410cb3:	push   esi
  410cb4:	mov    ecx,0xb5c7cc73
  410cb9:	dec    esi
  410cba:	(bad)
  410cbd:	addr16 aam 0xb
  410cc0:	lods   al,BYTE PTR ds:[esi]
  410cc1:	or     DWORD PTR ds:0xb3641dc0,esp
  410cc7:	scas   al,BYTE PTR es:[edi]
  410cc8:	test   edi,edi
  410cca:	test   eax,0x8dc06c04
  410ccf:	sbb    eax,ebx
  410cd1:	adc    bl,BYTE PTR [edi]
  410cd3:	sbb    BYTE PTR [eax],ah
  410cd5:	push   0xd3d08bf0
  410cda:	inc    ecx
  410cdb:	mov    ds:0xed6f803c,al
  410ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ce1:	out    0xd5,eax
  410ce3:	sti    
  410ce4:	add    DWORD PTR [edx],0xde191ab2
  410cea:	sbb    al,0xd0
  410cec:	ror    DWORD PTR [edi+0x4e50ae29],1
  410cf2:	xor    ebp,DWORD PTR ds:0xcc9f55bb
  410cf8:	ss push 0x43
  410cfb:	fstp   DWORD PTR [edi+ecx*4]
  410cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cff:	outs   dx,DWORD PTR ds:[esi]
  410d00:	daa    
  410d01:	inc    ebx
  410d02:	pop    ebx
  410d03:	mov    esi,0x18b61589
  410d08:	adc    DWORD PTR [eax+eiz*8+0x50e27e83],edx
  410d0f:	ror    BYTE PTR [ebx+0x5e],cl
  410d12:	xor    DWORD PTR [esi+ebx*2-0x10],ebp
  410d16:	mov    ds:0xbd08fad9,al
  410d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d1c:	loop   0x410d23
  410d1e:	push   esp
  410d1f:	imul   edi,DWORD PTR [eax-0x4c],0xffffffdc
  410d23:	sub    al,0x7f
  410d25:	pushf  
  410d26:	lods   eax,DWORD PTR ds:[esi]
  410d27:	outs   dx,DWORD PTR ds:[esi]
  410d28:	pushf  
  410d29:	ja     0x410d69
  410d2b:	or     al,0x92
  410d2d:	pop    ss
  410d2e:	dec    ebp
  410d2f:	pop    esp
  410d30:	sub    BYTE PTR [esi+0x65ef9f68],ah
  410d36:	sub    BYTE PTR [esp+eax*4],0x35
  410d3a:	enter  0x742c,0x63
  410d3e:	mov    esp,ebx
  410d40:	sub    eax,0xdfe2030
  410d45:	into   
  410d46:	push   ds
  410d47:	add    edx,eax
  410d49:	fstp   QWORD PTR [esi+0x37899a1b]
  410d4f:	ss cmp ebp,edx
  410d52:	test   al,0x50
  410d54:	ins    BYTE PTR es:[edi],dx
  410d55:	or     ch,al
  410d57:	sub    eax,0xaf4cb008
  410d5c:	jmp    0x410d12
  410d5e:	lds    edi,FWORD PTR [esi+0x76480a3c]
  410d64:	xchg   cl,ch
  410d66:	mov    dh,0x38
  410d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d69:	pop    ecx
  410d6a:	sbb    ebx,eax
  410d6c:	inc    ebp
  410d6d:	nop
  410d6e:	mov    cl,0x6
  410d70:	sar    BYTE PTR [ebp+0x68b0f230],cl
  410d76:	mov    WORD PTR [ebx],?
  410d78:	ds push edx
  410d7a:	int3   
  410d7b:	xchg   ecx,eax
  410d7c:	mov    esp,0x6b82a064
  410d81:	fadd   DWORD PTR [esi-0x21]
  410d84:	popa   
  410d85:	sar    eax,1
  410d87:	jge    0x410d47
  410d89:	std    
  410d8a:	push   esi
  410d8b:	dec    edi
  410d8c:	das    
  410d8d:	scas   al,BYTE PTR es:[edi]
  410d8e:	push   edi
  410d8f:	fild   QWORD PTR [esi-0x78f597a5]
  410d95:	mov    bh,0x8b
  410d97:	xor    al,0x44
  410d99:	scas   eax,DWORD PTR es:[edi]
  410d9a:	push   0x154c7ef9
  410d9f:	idiv   BYTE PTR [ecx+0x54aabd3c]
  410da5:	cld    
  410da6:	mov    ebp,0x23bc313e
  410dab:	adc    DWORD PTR [ebx+edx*1],0x62
  410daf:	adc    al,0x7e
  410db1:	ins    DWORD PTR es:[edi],dx
  410db2:	aam    0x30
  410db4:	mov    ecx,0x66841309
  410db9:	push   ss
  410dba:	loopne 0x410da8
  410dbc:	push   es
  410dbd:	xor    eax,0x338ab78c
  410dc2:	mov    edi,0x412e7baa
  410dc7:	sbb    ebp,DWORD PTR [eax+0x59]
  410dca:	and    eax,0x86fb7961
  410dcf:	xor    eax,0x7342554b
  410dd4:	dec    esp
  410dd5:	test   DWORD PTR [edx],0xf67c8b79
  410ddb:	jg     0x410e12
  410ddd:	xlat   BYTE PTR ds:[ebx]
  410dde:	mov    esi,0x4ce9d68c
  410de3:	in     eax,dx
  410de4:	lods   eax,DWORD PTR ds:[esi]
  410de5:	imul   edi,edx,0x36141dc9
  410deb:	mov    ebp,0x73112cb2
  410df0:	mov    dh,0x84
  410df2:	inc    esi
  410df3:	mov    es,WORD PTR [ecx*1-0x4a25e15f]
  410dfa:	fwait
  410dfb:	in     al,0x99
  410dfd:	xor    bh,al
  410dff:	loop   0x410dcc
  410e01:	push   ecx
  410e02:	cwde   
  410e03:	lds    edx,FWORD PTR [eax+0x3dbce356]
  410e09:	pop    edi
  410e0a:	jg     0x410db2
  410e0c:	pushf  
  410e0d:	data16 outs dx,BYTE PTR ds:[esi]
  410e0f:	add    ch,BYTE PTR [edi+0x68b0c372]
  410e15:	sti    
  410e16:	cmp    ecx,eax
  410e18:	lods   al,BYTE PTR ds:[esi]
  410e19:	clc    
  410e1a:	sbb    eax,0x9249ab9c
  410e1f:	sbb    ebx,edi
  410e21:	and    DWORD PTR [esi+0x42],0xda8bfcba
  410e28:	mov    WORD PTR [eax],fs
  410e2a:	mov    edx,0xb271db37
  410e2f:	mov    bh,0xc3
  410e31:	and    ah,BYTE PTR [ebp+0x4a]
  410e34:	dec    ebp
  410e35:	or     esi,DWORD PTR [edx+0x55c97d05]
  410e3b:	rcr    BYTE PTR [edi],1
  410e3d:	sbb    al,0xb
  410e3f:	jmp    0x410e00
  410e41:	pop    ebp
  410e42:	jo     0x410dfb
  410e44:	add    eax,0xa29c4709
  410e49:	jo     0x410e1c
  410e4b:	and    al,0xbf
  410e4d:	xor    eax,0x9f01a478
  410e52:	or     DWORD PTR [esi-0x52],edi
  410e55:	sbb    BYTE PTR [edx-0x34],ah
  410e58:	adc    edi,DWORD PTR [ecx-0x4b9919de]
  410e5e:	test   DWORD PTR [ebp+eiz*1-0x53],ebx
  410e62:	repz aas 
  410e64:	pop    ds
  410e65:	outs   dx,BYTE PTR ds:[esi]
  410e66:	mov    ecx,DWORD PTR [ebx]
  410e68:	add    ebp,DWORD PTR [edi+edx*1-0x116be430]
  410e6f:	or     eax,DWORD PTR [ecx+0x2c13f8d3]
  410e75:	push   ss
  410e76:	cmp    bl,cl
  410e78:	pop    eax
  410e79:	imul   edi,DWORD PTR [esi+0x33697e90],0xffffffff
  410e80:	sti    
  410e81:	xor    eax,0x6fe628c8
  410e86:	jmp    0xb06d:0xcaaef2f2
  410e8d:	jbe    0x410e31
  410e8f:	outs   dx,BYTE PTR ds:[esi]
  410e90:	das    
  410e91:	lods   al,BYTE PTR ds:[esi]
  410e92:	stos   BYTE PTR es:[edi],al
  410e93:	imul   ebp,DWORD PTR [edx-0x66906e6e],0xd696b0f4
  410e9d:	test   al,bh
  410e9f:	test   DWORD PTR [edx+0x1b],edi
  410ea2:	cmp    eax,0x18a2c082
  410ea7:	(bad)  
  410ea8:	mov    esp,0x39fea74b
  410ead:	scas   al,BYTE PTR es:[edi]
  410eae:	dec    edx
  410eaf:	xchg   BYTE PTR [ebx+eiz*1-0x72dcc075],dh
  410eb6:	xchg   ebx,eax
  410eb7:	cmp    cl,BYTE PTR [ecx]
  410eb9:	or     esi,0xb017a65b
  410ebf:	mov    ah,0xf2
  410ec1:	inc    edi
  410ec2:	sar    BYTE PTR [eax],0x84
  410ec5:	cdq    
  410ec6:	add    eax,0xaf0cac89
  410ecb:	lods   eax,DWORD PTR ds:[esi]
  410ecc:	push   esp
  410ecd:	or     al,0x20
  410ecf:	cmp    edi,DWORD PTR [esp+edi*4]
  410ed2:	inc    esp
  410ed3:	dec    esi
  410ed4:	inc    bl
  410ed6:	ss retf 0x6f44
  410eda:	out    0x3a,eax
  410edc:	gs push ecx
  410ede:	test   al,0xf3
  410ee0:	call   0x7dfd:0x3e40bb3d
  410ee7:	mov    dl,BYTE PTR [esi-0x70]
  410eea:	ret    
  410eeb:	push   edx
  410eec:	jmp    0x410f61
  410eee:	sub    eax,0x8da4d7e7
  410ef3:	mov    edi,ds
  410ef5:	mov    ds:0xfc38ab17,eax
  410efa:	xor    ebp,edx
  410efc:	mov    BYTE PTR [edi+0x2e],ah
  410eff:	out    dx,eax
  410f00:	fmulp  st(0),st
  410f02:	xchg   edx,eax
  410f03:	dec    ebx
  410f04:	mov    ss,ecx
  410f06:	xor    DWORD PTR [ecx+0x779b6690],eax
  410f0c:	pop    edx
  410f0d:	xor    eax,ebp
  410f0f:	pusha  
  410f10:	dec    esp
  410f11:	pushf  
  410f12:	inc    ecx
  410f13:	lods   al,BYTE PTR ds:[esi]
  410f14:	lock dec eax
  410f16:	push   esi
  410f17:	sub    DWORD PTR [ebx+0x2d],edx
  410f1a:	les    ebp,FWORD PTR [eax+0xf6182a0]
  410f20:	loope  0x410f62
  410f22:	inc    ebx
  410f23:	or     eax,0x2980d277
  410f28:	fwait
  410f29:	inc    eax
  410f2a:	sub    BYTE PTR [ecx+eiz*2],bh
  410f2d:	adc    DWORD PTR [ecx],edi
  410f2f:	add    ecx,DWORD PTR [eax+esi*4+0x3d]
  410f33:	mov    ecx,ebp
  410f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f36:	cdq    
  410f37:	jl     0x410f36
  410f39:	mov    dh,0x5b
  410f3b:	add    ch,BYTE PTR [edx+0x6d]
  410f3e:	ja     0x410f03
  410f40:	inc    ebx
  410f41:	push   es
  410f42:	mov    al,ds:0xfd2e9d2e
  410f47:	enter  0xc493,0x0
  410f4b:	sub    ebp,edx
  410f4d:	jmp    0x410f03
  410f4f:	test   ecx,esi
  410f51:	out    0x5a,eax
  410f53:	jp     0x410f31
  410f55:	ret    
  410f56:	inc    edx
  410f57:	jg     0x410f9f
  410f59:	je     0x410eef
  410f5b:	stos   BYTE PTR es:[edi],al
  410f5c:	loop   0x410fd8
  410f5e:	jp     0x410f0f
  410f60:	mov    edx,0x1da521c
  410f65:	and    al,0x58
  410f67:	xor    dl,BYTE PTR [edi+0x1f]
  410f6a:	or     dh,BYTE PTR [edx]
  410f6c:	addr16 dec ebx
  410f6e:	daa    
  410f6f:	adc    al,BYTE PTR ds:0xce134174
  410f75:	mov    ch,0x73
  410f77:	cmc    
  410f78:	or     al,0xd6
  410f7a:	lds    ebp,FWORD PTR [edx-0x3dedd1ca]
  410f80:	sub    ebp,ecx
  410f82:	push   cs
  410f83:	adc    eax,0x82e6b20f
  410f89:	neg    eax
  410f8b:	loopne 0x410f4a
  410f8d:	push   ecx
  410f8e:	push   ecx
  410f8f:	lods   eax,DWORD PTR ds:[esi]
  410f90:	mov    eax,ds:0xc5e8734e
  410f95:	cmp    eax,0x266e57bc
  410f9a:	xor    eax,DWORD PTR [ebp+0x46347d23]
  410fa0:	sbb    eax,0xe9cafa85
  410fa5:	mov    dh,0x4e
  410fa7:	pop    eax
  410fa8:	call   0x15a:0x2ff69cfa
  410faf:	in     al,dx
  410fb0:	push   esp
  410fb1:	add    DWORD PTR [ecx+0x71],ecx
  410fb4:	and    eax,0x2de6e689
  410fb9:	nop
  410fba:	(bad)  
  410fbb:	dec    edi
  410fbc:	adc    eax,0xcc342730
  410fc1:	and    DWORD PTR [edi],edi
  410fc3:	jo     0x410f7b
  410fc5:	scas   al,BYTE PTR es:[edi]
  410fc6:	xchg   BYTE PTR [ebx-0x7b],dl
  410fc9:	je     0x410fec
  410fcb:	mov    bl,0xd6
  410fcd:	test   eax,0x596c77a4
  410fd2:	mov    esp,0x4010146d
  410fd7:	mov    edx,0x4f7ca68b
  410fdc:	mov    ds,edi
  410fde:	in     eax,dx
  410fdf:	fidiv  WORD PTR [edx+0xdddb83b]
  410fe5:	mov    eax,ds:0x4e701379
  410fea:	shr    cl,1
  410fec:	rsm    
  410fee:	outs   dx,DWORD PTR ds:[esi]
  410fef:	scas   al,BYTE PTR es:[edi]
  410ff0:	jmp    0xc48c3bdc
  410ff5:	aam    0xfe
  410ff7:	fwait
  410ff8:	bound  bp,DWORD PTR [edi+0x28e15df6]
  410fff:	shl    DWORD PTR [ebx-0x53],0xb9
  411003:	rcl    BYTE PTR [eax+0x36aa9c13],cl
  411009:	ret    0xca1b
  41100c:	sbb    cl,BYTE PTR [eax+0x7d]
  41100f:	mov    ?,WORD PTR [edx+0xb]
  411012:	mov    esi,0x167bae19
  411017:	cli    
  411018:	retf   0x7f2a
  41101b:	ins    BYTE PTR es:[edi],dx
  41101c:	pop    ebx
  41101d:	test   BYTE PTR [ecx+0x4f],bh
  411020:	mov    esp,0x8a353a9f
  411025:	shl    esi,0x71
  411028:	repnz jecxz 0x41106c
  41102b:	mov    WORD PTR [ecx-0x7b],ss
  41102e:	in     al,dx
  41102f:	in     eax,dx
  411030:	mov    eax,DWORD PTR cs:[esi+0x9ba5cf2]
  411037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411038:	push   ebp
  411039:	cmp    BYTE PTR ds:0x4073741b,0xd3
  411040:	mov    BYTE PTR [eax-0x10f33a97],bl
  411046:	test   al,0x49
  411048:	jl     0x4110a5
  41104a:	adc    bl,BYTE PTR [ebp-0xa9aa22]
  411050:	stos   BYTE PTR es:[edi],al
  411051:	push   es
  411052:	ins    DWORD PTR es:[edi],dx
  411053:	(bad)  
  411054:	stos   DWORD PTR es:[edi],eax
  411055:	mov    gs,WORD PTR [esi-0x511bf14e]
  41105b:	xchg   ebx,eax
  41105c:	inc    ebp
  41105d:	out    0xe,al
  41105f:	push   edi
  411060:	lods   eax,DWORD PTR ds:[esi]
  411061:	aam    0xa1
  411063:	sbb    ecx,esi
  411065:	and    al,0x8b
  411067:	test   al,0x19
  411069:	ins    DWORD PTR es:[edi],dx
  41106a:	ucomiss xmm4,DWORD PTR [ebx-0x1f]
  41106e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41106f:	ds xchg esi,eax
  411071:	idiv   edx
  411073:	inc    ebx
  411074:	cld    
  411075:	addr16 test edi,ebp
  411078:	push   0x228e59c5
  41107d:	fdivr  QWORD PTR [edx-0x55]
  411080:	cdq    
  411081:	lods   al,BYTE PTR ds:[esi]
  411082:	test   BYTE PTR [edx],bl
  411084:	mov    BYTE PTR [ecx+eiz*8],cl
  411087:	xor    DWORD PTR [ecx-0x30],ebp
  41108a:	cmp    al,0xdd
  41108c:	arpl   bx,cx
  41108e:	ret    0x119d
  411091:	scas   al,BYTE PTR es:[edi]
  411092:	pop    es
  411093:	xlat   BYTE PTR ds:[ebx]
  411094:	neg    esp
  411096:	mov    ebx,0x5cc6f2a0
  41109b:	pop    ss
  41109c:	dec    esp
  41109d:	imul   ebp,DWORD PTR [eax-0x7f1bb9df],0xd55add44
  4110a7:	xor    DWORD PTR [ecx+0x56],0x2d
  4110ab:	cmc    
  4110ac:	loop   0x4110d8
  4110ae:	mov    cl,0x48
  4110b0:	loopne 0x411050
  4110b2:	mov    DWORD PTR [ebx+ebx*2],0x3fccc90
  4110b9:	rol    al,cl
  4110bb:	and    eax,0x4dde1b99
  4110c0:	mov    ebp,0x6f1f81df
  4110c5:	jmp    0xc5ef3a18
  4110ca:	aam    0x3f
  4110cc:	jb     0x41109d
  4110ce:	pushf  
  4110cf:	fsub   QWORD PTR [ebp-0x37281aff]
  4110d5:	add    eax,0x85699ec6
  4110da:	cmp    ebp,DWORD PTR [esp+edx*8+0x29]
  4110de:	xor    eax,0xd9963590
  4110e3:	mov    ds:0x33d8205a,eax
  4110e8:	ror    DWORD PTR [ecx+edx*2-0x954c3e6],0xf7
  4110f0:	outs   dx,DWORD PTR ds:[esi]
  4110f1:	setle  dl
  4110f4:	imul   eax,DWORD PTR [ebx],0x594ee676
  4110fa:	ffreep st(1)
  4110fc:	push   ebx
  4110fd:	pop    edx
  4110fe:	mov    ebp,0xe9d3108a
  411103:	addr16 (bad) 
  411105:	jl     0x411143
  411107:	mov    ecx,0x818d131f
  41110c:	outs   dx,BYTE PTR ds:[esi]
  41110d:	cmp    cl,dh
  41110f:	cmp    dh,BYTE PTR [ecx]
  411111:	mov    esi,0xd83e90f8
  411116:	pop    DWORD PTR [edx-0x1456d0ee]
  41111c:	and    dl,BYTE PTR [ecx]
  41111e:	(bad)  
  41111f:	mov    esp,0x18dc2c82
  411124:	and    esi,esi
  411126:	hlt    
  411127:	fmul   QWORD PTR [edx+0xf]
  41112a:	mov    dh,dl
  41112c:	xor    BYTE PTR [eax-0x59d7e5b1],al
  411132:	add    al,0xe4
  411134:	push   ecx
  411135:	pop    eax
  411136:	aad    0x62
  411138:	mov    ecx,DWORD PTR [esi+0x4be874df]
  41113e:	push   ebp
  41113f:	shr    dl,cl
  411141:	ds int 0x69
  411144:	and    ecx,esp
  411146:	add    ch,BYTE PTR [edi]
  411148:	xor    eax,0x14ef9f5e
  41114d:	mov    bl,0xb8
  41114f:	cdq    
  411150:	or     eax,0x6ab7ad15
  411155:	sbb    ch,BYTE PTR [eax+ebp*1]
  411158:	cmc    
  411159:	(bad)
  41115c:	jbe    0x411146
  41115e:	cmp    DWORD PTR [ebx+eiz*4-0x32],eax
  411162:	repz dec edx
  411164:	sub    DWORD PTR [esi+0x77b0ee0c],edi
  41116a:	mov    ecx,0xaf6ef45c
  41116f:	ja     0x411192
  411171:	cmp    al,0xc8
  411173:	sub    bh,BYTE PTR [edx]
  411175:	in     al,dx
  411176:	push   esp
  411177:	inc    ebx
  411178:	aas    
  411179:	fs add dh,bl
  41117c:	sub    bl,bh
  41117e:	lea    esi,[ebx]
  411180:	lods   eax,DWORD PTR ds:[esi]
  411181:	inc    eax
  411182:	imul   ecx,DWORD PTR [esi],0x4b34fb95
  411188:	rol    DWORD PTR [ebx+esi*8-0x125ee076],1
  41118f:	les    edi,FWORD PTR ds:0x3b91b74c
  411195:	icebp  
  411196:	lods   al,BYTE PTR ds:[esi]
  411197:	cdq    
  411198:	pop    ebp
  411199:	push   0xffffffa9
  41119b:	lock mov DWORD PTR [ebx+0x2b5e0233],esi
  4111a2:	outs   dx,BYTE PTR ds:[esi]
  4111a3:	inc    ebp
  4111a4:	push   ds
  4111a5:	(bad)  
  4111a7:	mov    edx,0xe1050860
  4111ac:	and    edi,DWORD PTR [edx-0x24]
  4111af:	inc    ecx
  4111b0:	or     cl,BYTE PTR [edx]
  4111b2:	clc    
  4111b3:	jecxz  0x4111ff
  4111b5:	jbe    0x41115d
  4111b7:	mov    bh,0x20
  4111b9:	pusha  
  4111ba:	dec    esp
  4111bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111bc:	pop    ebx
  4111bd:	mov    gs,WORD PTR [edi-0x50]
  4111c0:	mov    es,WORD PTR [edi-0x53]
  4111c3:	(bad)  
  4111c5:	call   0xd27f:0xc2dc766d
  4111cc:	push   0x59
  4111ce:	jo     0x4111d5
  4111d0:	popf   
  4111d1:	out    dx,eax
  4111d2:	jae    0x411222
  4111d4:	pop    edx
  4111d5:	xchg   ebx,eax
  4111d6:	cmp    al,0x89
  4111d8:	xor    dl,ah
  4111da:	inc    ecx
  4111db:	jno    0x41120d
  4111dd:	pop    esp
  4111de:	and    esp,DWORD PTR [edi-0x7a555c3d]
  4111e4:	xchg   edi,ebx
  4111e6:	gs mov dl,0x55
  4111e9:	jae    0x411219
  4111eb:	mov    dh,0xff
  4111ed:	xchg   edi,eax
  4111ee:	sbb    bl,ch
  4111f0:	das    
  4111f1:	jb     0x4111e2
  4111f3:	dec    ebp
  4111f4:	int    0x6
  4111f6:	retf   
  4111f7:	imul   ecx,DWORD PTR [edx+ebp*1-0x400efe21],0xffffffeb
  4111ff:	push   ebx
  411200:	fwait
  411201:	call   0x3fc836a5
  411206:	pushf  
  411207:	cmp    edi,edi
  411209:	mov    al,ds:0xb8f3b017
  41120e:	inc    ecx
  41120f:	dec    esp
  411210:	retf   
  411211:	xor    eax,0xf9c3e328
  411216:	(bad)  
  411217:	imul   esi,DWORD PTR [edx-0x62918142],0xffffffc5
  41121e:	add    DWORD PTR [edx-0x5173488f],0x337253db
  411228:	outs   dx,DWORD PTR ds:[esi]
  411229:	popa   
  41122a:	sub    eax,0x5b52d893
  41122f:	jno    0x41124b
  411231:	popa   
  411232:	jb     0x41125c
  411234:	mov    ch,0x5d
  411236:	push   edi
  411237:	xor    DWORD PTR [eax-0x6d],0x16115bcf
  41123e:	addr16 sbb eax,0x5f9cd9de
  411244:	call   0x7ea678fc
  411249:	(bad)  
  41124a:	(bad)  
  41124b:	cld    
  41124c:	and    al,0x2
  41124e:	mov    dh,0xc2
  411250:	dec    ebp
  411251:	aaa    
  411252:	out    0x8d,al
  411254:	dec    ebp
  411255:	ret    
  411256:	dec    ebp
  411257:	jmp    DWORD PTR [ebx+ecx*4-0x6c]
  41125b:	sar    BYTE PTR [eax-0x6c],0x9e
  41125f:	in     eax,0x92
  411261:	or     ch,BYTE PTR [ebp+0x44]
  411264:	ret    0xc09a
  411267:	les    esp,FWORD PTR [eax]
  411269:	jo     0x4112d5
  41126b:	pop    ss
  41126c:	mov    ds:0x6963dca5,eax
  411271:	sub    ah,BYTE PTR [ecx]
  411273:	jp     0x411214
  411275:	mov    bl,0x0
  411277:	lahf   
  411278:	or     ch,al
  41127a:	ins    DWORD PTR es:[edi],dx
  41127b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41127c:	cdq    
  41127d:	or     edx,DWORD PTR [edx+0x10]
  411280:	in     al,dx
  411281:	(bad)  
  411283:	retf   
  411284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411285:	mov    ah,0x3b
  411287:	xrelease xchg DWORD PTR [ecx-0x7d9ca3b9],esi
  41128e:	ins    DWORD PTR es:[edi],dx
  41128f:	pop    ss
  411290:	leave  
  411291:	push   es
  411292:	dec    esp
  411293:	lock pop esp
  411295:	dec    edi
  411296:	ror    DWORD PTR ds:0x3d813a78,cl
  41129c:	jl     0x411289
  41129e:	fs ret 
  4112a0:	push   eax
  4112a1:	popa   
  4112a2:	pop    esi
  4112a3:	aas    
  4112a4:	repz test DWORD PTR [ecx+0x3e],0x7f9d96cd
  4112ac:	(bad)  
  4112ad:	fisttp WORD PTR [ebx]
  4112af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112b0:	jae    0x411294
  4112b2:	neg    DWORD PTR [ecx-0x1de4b4cd]
  4112b8:	xor    al,0xa6
  4112ba:	daa    
  4112bb:	mov    ebx,0xfc75c8f2
  4112c0:	retf   0x72bf
  4112c3:	(bad)  
  4112c4:	pop    ss
  4112c5:	jnp    0x41133b
  4112c7:	in     eax,0x7
  4112c9:	icebp  
  4112ca:	push   edx
  4112cb:	xor    al,0x8e
  4112cd:	jne    0x41133f
  4112cf:	scas   eax,DWORD PTR es:[edi]
  4112d0:	ins    BYTE PTR es:[edi],dx
  4112d1:	push   ss
  4112d2:	ins    BYTE PTR es:[edi],dx
  4112d3:	xchg   edx,eax
  4112d4:	xchg   edi,edx
  4112d6:	aad    0xb2
  4112d8:	xchg   edi,eax
  4112d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112da:	xchg   ebp,eax
  4112db:	mov    dh,0x24
  4112dd:	sbb    al,0x97
  4112df:	in     al,dx
  4112e0:	xchg   ebx,eax
  4112e1:	pushf  
  4112e2:	xor    eax,DWORD PTR [edi]
  4112e4:	inc    esp
  4112e5:	test   BYTE PTR [eax+0x6a41c819],cl
  4112eb:	stc    
  4112ec:	daa    
  4112ed:	cmp    al,0xda
  4112ef:	(bad)  
  4112f0:	mov    ecx,0xb90de898
  4112f5:	das    
  4112f6:	cld    
  4112f7:	je     0x411351
  4112f9:	push   ebp
  4112fa:	test   BYTE PTR [edx-0x7c840325],bh
  411300:	sahf   
  411301:	xchg   esi,esp
  411303:	sbb    al,0x10
  411305:	xor    ecx,esp
  411307:	jg     0x411344
  411309:	cmp    eax,0xe769008e
  41130e:	jmp    0x4112eb
  411310:	(bad)  
  411312:	iret   
  411313:	jp     0x4112b0
  411315:	lods   al,BYTE PTR ds:[esi]
  411316:	xchg   ebx,eax
  411317:	repnz xor eax,0x885fb016
  41131d:	rol    DWORD PTR [edx+0x7edd03df],cl
  411323:	xchg   BYTE PTR [edx-0x88e5afd],dh
  411329:	pusha  
  41132a:	imul   edx,DWORD PTR [esi+0x5c],0xfffffffd
  41132e:	mov    ds,WORD PTR [ebp+0x6966cd0c]
  411334:	jecxz  0x411358
  411336:	pop    edi
  411337:	jae    0x4113a9
  411339:	out    0xe7,eax
  41133b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41133c:	pop    ebx
  41133d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41133e:	not    DWORD PTR [edx]
  411340:	mov    dh,0x5f
  411342:	mov    edi,0x431f032a
  411347:	repnz lock fnstcw WORD PTR [eax+0x4e]
  41134c:	(bad)  
  41134d:	les    edi,FWORD PTR [ecx+ebx*2-0x223144e3]
  411354:	and    ah,ah
  411356:	das    
  411357:	mov    ebx,0x53abb2c8
  41135c:	and    DWORD PTR [ecx+eax*4],0x72
  411360:	mov    eax,0x7ab9e817
  411365:	call   0x58f9:0x1f3bf47
  41136c:	and    BYTE PTR [edx],ch
  41136e:	pop    ecx
  41136f:	in     al,dx
  411370:	aas    
  411371:	stos   DWORD PTR es:[edi],eax
  411372:	cdq    
  411373:	int3   
  411374:	loop   0x41134d
  411376:	mov    al,0xbb
  411378:	cli    
  411379:	mov    esi,0x81d92cb3
  41137e:	imul   ebp,edx,0x4b
  411381:	push   ebp
  411382:	inc    eax
  411383:	pop    edi
  411384:	mov    al,ds:0x8cabb675
  411389:	out    0xaf,al
  41138b:	inc    ecx
  41138c:	sbb    eax,0xcc4ec6cb
  411391:	fisub  WORD PTR [esi]
  411393:	mov    WORD PTR gs:[ebp-0x4b],gs
  411397:	inc    ecx
  411398:	push   eax
  411399:	rol    DWORD PTR [ebp*8-0x6d77b068],0xff
  4113a1:	inc    ebx
  4113a2:	fucompp 
  4113a4:	pop    esi
  4113a5:	fsubr  QWORD PTR [edx]
  4113a7:	mov    ah,0x12
  4113a9:	arpl   WORD PTR [esi+0x28fc4900],bp
  4113af:	jg     0x4113f0
  4113b1:	sbb    bh,BYTE PTR ds:0xbdaf7cfc
  4113b7:	dec    eax
  4113b8:	loope  0x411364
  4113ba:	jno    0x411432
  4113bc:	add    BYTE PTR [edi+esi*4-0x7a],0x5
  4113c1:	adc    ecx,DWORD PTR [ecx+ebx*4+0x7b]
  4113c5:	xchg   edx,eax
  4113c6:	mov    ss,WORD PTR [eax-0x6]
  4113c9:	and    ebx,DWORD PTR [edx-0x62]
  4113cc:	jle    0x41138d
  4113ce:	in     eax,dx
  4113cf:	mov    esp,0x69cdb01f
  4113d4:	out    dx,eax
  4113d5:	mov    ah,0x77
  4113d7:	inc    esi
  4113d8:	push   ecx
  4113d9:	fidiv  WORD PTR [eax+0x64c20a7]
  4113df:	imul   ebp,ecx,0xdd7eec98
  4113e5:	inc    ecx
  4113e6:	dec    esp
  4113e7:	dec    ecx
  4113e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113e9:	mov    ebx,DWORD PTR [ebp+0x2e32e30c]
  4113ef:	cmp    dl,BYTE PTR [esi+0x1f472532]
  4113f5:	mov    eax,ds:0xd85d56ba
  4113fa:	lock jmp 0xf4fc:0x66f51f6e
  411402:	repz dec edx
  411404:	test   al,0xdd
  411406:	jno    0x4113f1
  411408:	mov    dh,0x77
  41140a:	push   ss
  41140b:	add    edi,DWORD PTR [ebp-0xb]
  41140e:	and    al,0x85
  411410:	shl    BYTE PTR [ebp+0x5e],cl
  411413:	test   dh,bh
  411415:	out    0x74,eax
  411417:	popf   
  411418:	iret   
  411419:	shr    BYTE PTR [esi+ebx*8+0x4d00da43],1
  411420:	arpl   WORD PTR [edi-0x4b],di
  411423:	xor    DWORD PTR [esi-0x6e235ecd],ebp
  411429:	adc    al,0x5f
  41142b:	in     al,dx
  41142c:	inc    eax
  41142d:	add    al,0x44
  41142f:	and    eax,0x4503bb12
  411434:	push   0x2f
  411436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411437:	cli    
  411438:	mov    ds:0xfc093092,eax
  41143d:	push   ebp
  41143e:	(bad)  
  411440:	and    esi,DWORD PTR [ebx]
  411442:	cs pop edi
  411444:	retf   0x53b9
  411447:	sub    cl,0x1f
  41144a:	jne    0x41146e
  41144c:	sar    DWORD PTR [ebp+0x15],cl
  41144f:	adc    al,0x83
  411451:	loope  0x411421
  411453:	aaa    
  411454:	add    DWORD PTR [edx],ebp
  411456:	jecxz  0x4113fb
  411458:	outs   dx,DWORD PTR ds:[esi]
  411459:	pop    es
  41145a:	lods   eax,DWORD PTR ds:[esi]
  41145b:	add    esi,DWORD PTR [ebp+0x457d82e0]
  411461:	push   ss
  411462:	je     0x4113ee
  411464:	loope  0x411468
  411466:	pop    es
  411467:	aam    0x6e
  411469:	je     0x4113fc
  41146b:	test   ecx,esp
  41146d:	ja     0x411404
  41146f:	leave  
  411470:	inc    esi
  411471:	mov    bh,0xf1
  411473:	sti    
  411474:	pop    edx
  411475:	add    eax,0x4109de8c
  41147a:	imul   ebp,DWORD PTR [esi-0x4e],0x6a
  41147e:	repnz das 
  411480:	or     ch,ch
  411482:	sar    DWORD PTR ds:0xcebca1c2,1
  411488:	sbb    eax,ebx
  41148a:	add    DWORD PTR [ebx+0x6efc3cb9],ebp
  411490:	dec    edx
  411491:	sbb    esp,ecx
  411493:	out    dx,eax
  411494:	imul   edi,DWORD PTR cs:[edx+ebx*1+0x77701b66],0x6
  41149d:	xchg   DWORD PTR [ecx-0x52106438],eax
  4114a3:	dec    ebp
  4114a4:	sbb    bh,BYTE PTR [esi-0x2d]
  4114a7:	outs   dx,DWORD PTR ds:[esi]
  4114a8:	jmp    0x6a4e:0x960d63df
  4114af:	pop    es
  4114b0:	imul   ecx,DWORD PTR [ebp+0x2be0573c],0x2973bb5
  4114ba:	push   ebx
  4114bb:	mov    bl,0xd3
  4114bd:	and    bl,BYTE PTR [edx+esi*1+0x7790e01e]
  4114c4:	pop    edx
  4114c5:	jo     0x4114e1
  4114c7:	fld    DWORD PTR [esi+0x7d]
  4114ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114cb:	sub    al,0x2d
  4114cd:	mov    edi,0xa791e6c9
  4114d2:	mov    ds:0xf9a3ab49,eax
  4114d7:	loop   0x41151d
  4114d9:	jb     0x411500
  4114db:	mov    ch,0x95
  4114dd:	xchg   dh,dl
  4114df:	lods   al,BYTE PTR ds:[esi]
  4114e0:	test   DWORD PTR [edi+0x1839e3bc],ecx
  4114e6:	jg     0x411475
  4114e8:	mov    WORD PTR [ebx+0x58ae74c],ss
  4114ee:	xchg   ebp,eax
  4114ef:	popf   
  4114f0:	in     eax,0x8c
  4114f2:	test   DWORD PTR [edx+ebp*2-0x1cebecb1],ebp
  4114f9:	scas   al,BYTE PTR es:[edi]
  4114fa:	add    DWORD PTR [ecx+ecx*1+0xbfe0307],ecx
  411501:	gs ror ebx,cl
  411504:	add    al,0x1d
  411506:	pop    eax
  411507:	pusha  
  411508:	test   al,0x35
  41150a:	mov    bl,0xf4
  41150c:	imul   ecx,DWORD PTR [ecx+0x38],0xffffffad
  411510:	push   ebp
  411511:	rol    BYTE PTR [eiz*4+0x40e24099],cl
  411518:	mov    bl,0x96
  41151a:	sbb    bl,al
  41151c:	xchg   ecx,eax
  41151d:	popa   
  41151e:	xor    eax,0x19a3b527
  411523:	sti    
  411524:	pop    ebx
  411525:	nop
  411526:	loope  0x411513
  411528:	fdivp  st(4),st
  41152a:	add    esi,edi
  41152c:	or     ebx,DWORD PTR [ebx+0x5c]
  41152f:	imul   esp,ecx,0xcba0733e
  411535:	jp     0x411557
  411537:	ror    DWORD PTR [edi],0xc0
  41153a:	fcomp  st(4)
  41153c:	clc    
  41153d:	nop
  41153e:	or     esp,DWORD PTR [eax]
  411540:	ja     0x4114cd
  411542:	cmp    BYTE PTR ds:0x82d67b3c,bh
  411548:	mov    BYTE PTR [ebx+0x27],dl
  41154b:	mov    cs,WORD PTR [edx-0x10bb1f61]
  411551:	call   0xc241ec83
  411556:	and    ecx,DWORD PTR [ebx+0x56]
  411559:	pop    esp
  41155a:	das    
  41155b:	pop    edx
  41155c:	imul   eax,DWORD PTR [eax+0x42c5a3a0],0xe77c28ec
  411566:	push   esi
  411567:	mov    al,ds:0x9b20be3b
  41156c:	in     eax,0x3
  41156e:	mov    bh,0x50
  411570:	cmp    ah,bh
  411572:	mul    ah
  411574:	jmp    0x32eb:0xd2fc6416
  41157b:	fwait
  41157c:	adc    al,0x37
  41157e:	mov    ebp,0xd91805c3
  411583:	push   0xcc01f3f7
  411588:	adc    BYTE PTR [edx-0x42218faa],bh
  41158e:	iret   
  41158f:	rcl    BYTE PTR [edx],1
  411591:	cmp    DWORD PTR [ecx-0xeda7215],ecx
  411597:	test   BYTE PTR [edx+0x5c],al
  41159a:	mov    ds:0x4de3049d,al
  41159f:	ror    ebx,cl
  4115a1:	nop
  4115a2:	push   ebx
  4115a3:	call   0x9f9fe83d
  4115a8:	inc    ebp
  4115a9:	xchg   ecx,eax
  4115aa:	xchg   ebp,eax
  4115ab:	mov    ds:0x98768086,eax
  4115b0:	xlat   BYTE PTR ds:[ebx]
  4115b1:	cmp    BYTE PTR [esi],dl
  4115b3:	jne    0x4115c8
  4115b5:	shr    DWORD PTR [edx+0x70a49ace],1
  4115bb:	jo     0x4115a2
  4115bd:	dec    edi
  4115be:	in     al,dx
  4115bf:	add    DWORD PTR [eax+edx*8],eax
  4115c2:	mov    al,0x41
  4115c4:	inc    edi
  4115c5:	ja     0x41162e
  4115c7:	push   0xffffff9f
  4115c9:	out    dx,al
  4115ca:	xchg   ebx,eax
  4115cb:	add    al,0x70
  4115cd:	lea    edx,[ebp+0x169a9d2d]
  4115d3:	inc    ecx
  4115d4:	push   edx
  4115d5:	enter  0x645a,0x97
  4115d9:	or     eax,0x5e2787d2
  4115de:	push   ds
  4115df:	push   es
  4115e0:	pushf  
  4115e1:	sub    eax,0x9d1a2aa2
  4115e6:	in     al,0x7a
  4115e8:	call   0x1dbc:0x8edca7ba
  4115ef:	and    eax,DWORD PTR [edx-0x35c8a7c7]
  4115f5:	fidiv  DWORD PTR ds:0xd7e1a6be
  4115fb:	jmp    0x18ef:0x255db23
  411602:	pop    ecx
  411603:	addr16 addr16 mov ah,0xd4
  411607:	and    ebx,DWORD PTR [edx+0x43]
  41160a:	mov    dh,BYTE PTR [eax+eiz*1-0x4d]
  41160e:	les    edx,FWORD PTR [edi]
  411610:	mov    dl,0x24
  411612:	cmp    BYTE PTR ds:0x7b95e994,ch
  411618:	xor    eax,0x9a51d0d9
  41161d:	into   
  41161e:	sbb    eax,0x9544ba11
  411623:	mov    DWORD PTR [ebx+0x576d0718],edx
  411629:	lods   ax,WORD PTR ds:[esi]
  41162b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41162c:	out    dx,al
  41162d:	xlat   BYTE PTR ds:[ebx]
  41162e:	mov    ebx,0x173a0f30
  411633:	stos   BYTE PTR es:[edi],al
  411634:	xchg   esi,eax
  411635:	add    eax,DWORD PTR [edi]
  411637:	inc    edx
  411638:	int    0x57
  41163a:	adc    DWORD PTR [edx-0x21],esi
  41163d:	mov    ecx,0xa2dc5244
  411642:	js     0x411608
  411644:	push   ds
  411645:	mov    DWORD PTR [ebp-0x1df7da57],esp
  41164b:	and    al,0x44
  41164d:	outs   dx,DWORD PTR ds:[esi]
  41164e:	pop    ss
  41164f:	les    edi,FWORD PTR [eax+0x9596955]
  411655:	int3   
  411656:	push   ss
  411657:	xchg   edx,eax
  411658:	fdiv   QWORD PTR [ebp+0x7d]
  41165b:	cmp    eax,0x63dbd515
  411660:	lea    esi,[ebx+0x65]
  411663:	imul   eax,eax,0x197bf7ac
  411669:	fidivr DWORD PTR [esi-0x57]
  41166c:	call   0x2ca5:0xe9f581d4
  411673:	push   0x6c
  411675:	ins    BYTE PTR es:[edi],dx
  411676:	xchg   ebp,eax
  411677:	push   edi
  411678:	fmul   st(2),st
  41167a:	cmp    eax,0xb589b1ef
  41167f:	push   cs
  411680:	retf   0x4b5d
  411683:	aam    0xce
  411685:	push   ebp
  411686:	xchg   edi,eax
  411687:	stc    
  411688:	jno    0x411610
  41168a:	cmp    BYTE PTR [edi+eax*4-0x60bf9c25],al
  411691:	out    dx,al
  411692:	push   ss
  411693:	xchg   edi,eax
  411694:	add    ebx,DWORD PTR [ecx+0x7]
  411697:	mov    eax,ds:0x5d87bfe3
  41169c:	xchg   esi,eax
  41169d:	pop    es
  41169e:	mov    ecx,ecx
  4116a0:	call   0x5870c3ee
  4116a5:	test   DWORD PTR [esi],ecx
  4116a7:	(bad)  
  4116a8:	call   0xf66a71af
  4116ad:	mov    esp,0x767711ef
  4116b2:	cmp    BYTE PTR [esi-0x67],cl
  4116b5:	hlt    
  4116b6:	dec    edx
  4116b7:	repz out dx,eax
  4116b9:	jns    0x41169f
  4116bb:	jl     0x4116e7
  4116bd:	push   ds
  4116be:	test   BYTE PTR [edx-0x4f471ff3],0xd6
  4116c5:	(bad)  
  4116c7:	xor    DWORD PTR ds:0x63024787,ebp
  4116cd:	jne    0x411737
  4116cf:	xchg   ebp,eax
  4116d0:	sbb    ebx,0xbd2d6db7
  4116d6:	adc    ecx,DWORD PTR ds:0x99a51d4c
  4116dc:	cs xchg esp,eax
  4116de:	jne    0x411716
  4116e0:	or     al,bh
  4116e2:	xor    DWORD PTR [edx+0x67386b52],ebx
  4116e8:	add    al,BYTE PTR [eax+0x33]
  4116eb:	cmp    al,0x3b
  4116ed:	xchg   esp,eax
  4116ee:	dec    edi
  4116ef:	mov    al,0x5a
  4116f1:	(bad)  
  4116f2:	fist   WORD PTR [ebp+0x78]
  4116f5:	jecxz  0x411739
  4116f7:	add    al,0x7
  4116f9:	setno  BYTE PTR [ebp+0x24]
  4116fd:	je     0x41172a
  4116ff:	sbb    al,BYTE PTR [ebx-0x7f]
  411702:	cmp    al,0x7c
  411704:	sub    BYTE PTR [edx+ecx*8-0x48],ah
  411708:	sbb    al,0xe1
  41170a:	aaa    
  41170b:	and    eax,0x5dafd86c
  411710:	add    bh,BYTE PTR [esi-0x5e]
  411713:	xchg   ebx,eax
  411714:	stos   BYTE PTR es:[edi],al
  411715:	mov    WORD PTR [esi+ebp*4-0xc],cs
  411719:	out    dx,eax
  41171a:	mov    ch,0x96
  41171c:	adc    edi,0x5e
  41171f:	mov    edx,0xe0523774
  411724:	imul   eax,ecx,0x84897101
  41172a:	lahf   
  41172b:	retf   
  41172c:	lahf   
  41172d:	out    0xa5,al
  41172f:	pop    ebx
  411730:	mov    ebp,0x872d9e76
  411735:	arpl   WORD PTR [eax+0x75daaaa],si
  41173b:	movzx  ebp,dh
  41173e:	pusha  
  41173f:	push   ecx
  411740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411741:	jg     0x4116e7
  411743:	pop    es
  411744:	(bad)  
  411745:	push   ebp
  411746:	push   0x2c
  411748:	(bad)  
  411749:	push   DWORD PTR [eax]
  41174b:	dec    esi
  41174c:	retf   
  41174d:	ror    DWORD PTR [ebx],cl
  41174f:	add    BYTE PTR [ebp-0xa],al
  411752:	ja     0x4116f1
  411754:	sbb    edx,esi
  411756:	push   edi
  411757:	cmp    bl,BYTE PTR [edx-0x38]
  41175a:	jnp    0x4117c4
  41175c:	mov    cl,0x61
  41175e:	shl    cl,cl
  411760:	(bad)  
  411761:	ja     0x411761
  411763:	jge    0x4116f8
  411765:	ins    DWORD PTR es:[edi],dx
  411766:	popa   
  411767:	mov    ch,0xe9
  411769:	xlat   BYTE PTR ds:[ebx]
  41176a:	pusha  
  41176b:	cld    
  41176c:	aaa    
  41176d:	push   eax
  41176e:	mov    ds:0xfd756407,al
  411773:	adc    ch,BYTE PTR [ebx+0x70]
  411776:	jae    0x4117a4
  411778:	test   al,0xe4
  41177a:	xor    eax,0xe41f798f
  41177f:	mov    ds:0xa90a6d36,al
  411784:	push   es
  411785:	test   al,0xdc
  411787:	sub    eax,0x59a39f4c
  41178c:	adc    eax,0x973c5469
  411791:	lea    esp,[ecx+0x7db2bebc]
  411797:	sub    eax,ebx
  411799:	fimul  DWORD PTR [ebx+0x570f5872]
  41179f:	adc    ebx,DWORD PTR [ebp-0x27353ab1]
  4117a5:	(bad)  
  4117a6:	popa   
  4117a7:	call   0xec4fcdda
  4117ac:	mov    BYTE PTR [edx],ah
  4117ae:	gs inc eax
  4117b0:	pop    ds
  4117b1:	outs   dx,BYTE PTR ds:[esi]
  4117b2:	xor    al,0x7c
  4117b4:	cdq    
  4117b5:	shl    DWORD PTR [eax-0x5fc08ba9],0x83
  4117bc:	out    dx,eax
  4117bd:	sub    eax,0x7d496e15
  4117c2:	push   ds
  4117c3:	dec    ecx
  4117c4:	in     eax,0x4b
  4117c6:	retf   
  4117c7:	fisttp DWORD PTR ds:0xaa753f31
  4117cd:	inc    ebp
  4117ce:	leave  
  4117cf:	pop    ecx
  4117d0:	jno    0x41175c
  4117d2:	sbb    BYTE PTR [esi+0x3e26f559],ch
  4117d8:	cs out dx,al
  4117da:	pop    esp
  4117db:	call   0x90aa:0x3ad2a00c
  4117e2:	dec    ebp
  4117e3:	bound  ebp,QWORD PTR [edx-0x222f18cd]
  4117e9:	stos   BYTE PTR es:[edi],al
  4117ea:	popf   
  4117eb:	sub    ebp,0xffffffeb
  4117ee:	shl    BYTE PTR [ecx-0x599ae90f],cl
  4117f4:	or     ebx,DWORD PTR [edi-0x2618c7e]
  4117fa:	push   ecx
  4117fb:	cmp    DWORD PTR [edx+0xe6acdf5],ecx
  411801:	xchg   edi,eax
  411802:	inc    edi
  411803:	sub    DWORD PTR [eax+0x5b],ebx
  411806:	outs   dx,BYTE PTR ds:[esi]
  411807:	loope  0x411837
  411809:	(bad)  
  41180b:	dec    ebp
  41180c:	pop    esi
  41180d:	push   cs
  41180e:	mov    eax,ds:0xcf488044
  411813:	cmc    
  411814:	cmp    dl,BYTE PTR [edx]
  411816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411818:	sti    
  411819:	mov    ebx,0x3395d442
  41181e:	enter  0x3711,0x45
  411822:	sub    DWORD PTR [ebx-0xdb13a40],0xe2f17201
  41182c:	test   BYTE PTR [ebx-0x76272052],cl
  411832:	cmp    ch,ch
  411834:	sbb    edx,DWORD PTR [ecx+0x67bb6c20]
  41183a:	jns    0x4117df
  41183c:	mov    esi,0xaa5fe417
  411841:	or     eax,0xd31b587f
  411846:	int    0x8f
  411848:	test   BYTE PTR [ecx],ah
  41184a:	mov    ebp,0xc18be8d2
  41184f:	mov    BYTE PTR [edi],ch
  411851:	xor    al,BYTE PTR [esi-0x2094d9fd]
  411857:	cmp    DWORD PTR [esi-0x3f37bd3d],0x6a8b6a6a
  411861:	push   ebx
  411862:	jae    0x411881
  411864:	inc    ebp
  411865:	sbb    eax,0x47288b1e
  41186a:	mov    ds:0xe3c384b9,al
  41186f:	adc    DWORD PTR [edx+ebp*2+0x12],0xdb2df3b1
  411877:	(bad)  
  411878:	xchg   esp,eax
  411879:	mov    al,0x45
  41187b:	sbb    DWORD PTR [ebx+0x58aef9b],esp
  411881:	shr    DWORD PTR [ebp+0x1880476c],cl
  411887:	cmp    ecx,DWORD PTR [edi]
  411889:	mov    ds:0xa95148b0,eax
  41188e:	add    BYTE PTR [ecx+0x7c3417ac],dl
  411894:	adc    DWORD PTR [ebx-0x6b],ecx
  411897:	pop    esp
  411898:	lea    edx,[eax*4-0x21e3e6b3]
  41189f:	mov    al,BYTE PTR [eax+ecx*8+0x36]
  4118a3:	push   0x2e1a395f
  4118a8:	les    ebp,FWORD PTR [edx]
  4118aa:	and    edi,eax
  4118ac:	xchg   esp,eax
  4118ad:	iret   
  4118ae:	push   eax
  4118af:	push   ecx
  4118b0:	pop    ds
  4118b1:	and    eax,0x92fdc132
  4118b6:	neg    DWORD PTR fs:[edi-0x61077a98]
  4118bd:	xchg   DWORD PTR [edx+edi*8+0x5d],eax
  4118c1:	or     eax,0x4d303956
  4118c6:	xchg   esp,eax
  4118c7:	or     eax,0xaf472692
  4118cc:	aaa    
  4118cd:	xor    DWORD PTR [ecx+0x5f0f0f10],ebp
  4118d3:	mov    WORD PTR [eax-0x4c],?
  4118d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118d7:	jb     0x411913
  4118d9:	push   ebp
  4118da:	iret   
  4118db:	mov    ds:0x5528a750,al
  4118e0:	popa   
  4118e1:	push   ecx
  4118e2:	cmp    eax,DWORD PTR [ecx+0x11]
  4118e5:	xor    bl,al
  4118e7:	mov    edi,0x3004b217
  4118ec:	call   0xbdfafe86
  4118f1:	add    BYTE PTR [eax+esi*1-0x376cd86a],0xd8
  4118f9:	scas   al,BYTE PTR es:[edi]
  4118fa:	pop    ds
  4118fb:	jg     0x4118f9
  4118fd:	lods   eax,DWORD PTR ds:[esi]
  4118fe:	adc    BYTE PTR [edi-0x36b947d4],dl
  411904:	or     al,0x54
  411906:	inc    edx
  411907:	push   ebp
  411908:	dec    ebp
  411909:	jnp    0x411901
  41190b:	mov    ch,0x9e
  41190d:	call   0x2f432420
  411912:	add    BYTE PTR [edx+0xf8b7786],dl
  411918:	dec    ebx
  411919:	add    al,0xf7
  41191b:	outs   dx,BYTE PTR ds:[esi]
  41191c:	leave  
  41191d:	adc    eax,0xa872bdda
  411922:	inc    edx
  411923:	or     DWORD PTR [edx-0x5b],edi
  411926:	(bad)  
  411927:	into   
  411928:	jl     0x41193a
  41192a:	push   eax
  41192b:	mov    ah,0x53
  41192d:	pop    ecx
  41192e:	(bad)  
  41192f:	pop    edi
  411930:	repnz cmp BYTE PTR [ecx+eax*8-0x2e8de686],bh
  411938:	or     BYTE PTR [ebx+0x132fc6dc],ah
  41193e:	sahf   
  41193f:	sbb    eax,0x1de61e75
  411944:	jo     0x411966
  411946:	sbb    edx,DWORD PTR [edi+edi*8-0x4b834e45]
  41194d:	mov    DWORD PTR [esi+0x6f],esi
  411950:	jp     0x41190c
  411952:	and    edi,DWORD PTR [eax+0x783ae09f]
  411958:	imul   esp,ecx,0x67
  41195b:	rcr    BYTE PTR [esi],0x2b
  41195e:	mov    edx,0xf07f6139
  411963:	inc    ebp
  411964:	popf   
  411965:	jb     0x4119c7
  411967:	test   DWORD PTR [ebx+0x7451e3a1],eax
  41196d:	sti    
  41196e:	stc    
  41196f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411970:	lea    eax,[ebp-0x5f31439b]
  411976:	dec    eax
  411977:	or     BYTE PTR [esi-0x41],al
  41197a:	xchg   ebp,eax
  41197b:	mov    ecx,0x1d6cf4ca
  411980:	shl    DWORD PTR [ecx],cl
  411982:	push   ebp
  411983:	test   DWORD PTR [ebx],esp
  411985:	enter  0x54a8,0xa
  411989:	lock xor DWORD PTR [eax-0x4eff5f56],ebx
  411990:	loop   0x4119ae
  411992:	les    eax,FWORD PTR [ebx+0x31a90675]
  411998:	(bad)
  41199d:	xor    DWORD PTR [edx-0x2d],ebx
  4119a0:	cmp    dh,BYTE PTR [eax]
  4119a2:	pop    ds
  4119a3:	stos   DWORD PTR es:[edi],eax
  4119a4:	pop    ebp
  4119a5:	xchg   edx,eax
  4119a6:	and    DWORD PTR [esi+0x75648d31],edx
  4119ac:	jno    0x411a00
  4119ae:	ror    BYTE PTR [esi-0x4f7cc509],cl
  4119b4:	daa    
  4119b5:	xlat   BYTE PTR ds:[ebx]
  4119b6:	scas   eax,DWORD PTR es:[edi]
  4119b7:	fld    TBYTE PTR [edi-0x5c9e0c7b]
  4119bd:	jge    0x4119d9
  4119bf:	cdq    
  4119c0:	push   esi
  4119c1:	push   ecx
  4119c2:	icebp  
  4119c3:	jnp    0x41194d
  4119c5:	rcl    DWORD PTR [ecx+0x63a24699],cl
  4119cb:	xchg   DWORD PTR [edi-0x31],ebp
  4119ce:	loop   0x411a2c
  4119d0:	dec    edx
  4119d1:	shr    DWORD PTR [ebp+0x4f4e59ef],cl
  4119d7:	inc    ebp
  4119d8:	loope  0x411a04
  4119da:	lock push cs
  4119dc:	inc    ecx
  4119dd:	xchg   edi,eax
  4119de:	aaa    
  4119df:	fisttp WORD PTR [ecx-0x57a254e0]
  4119e5:	(bad)  
  4119e6:	and    BYTE PTR [edi-0x70d0974e],ah
  4119ec:	sub    BYTE PTR [ebx+edx*2],ah
  4119ef:	data16 hlt 
  4119f1:	sbb    cl,BYTE PTR [edx+ecx*8]
  4119f4:	cwde   
  4119f5:	jb     0x411a3f
  4119f7:	push   edi
  4119f8:	loopne 0x411a60
  4119fa:	addr16 xor al,0x76
  4119fd:	and    cl,BYTE PTR [edx]
  4119ff:	and    DWORD PTR [edi+0x3b53cf82],ebx
  411a05:	fst    QWORD PTR [edi-0x512b15c8]
  411a0b:	mov    cl,0x18
  411a0d:	aam    0xd2
  411a0f:	aas    
  411a10:	push   ss
  411a11:	and    BYTE PTR [edi-0x79],cl
  411a14:	out    0x42,al
  411a16:	call   0xe1f6e946
  411a1b:	pop    es
  411a1c:	pop    edi
  411a1d:	fidiv  DWORD PTR [edi]
  411a1f:	mov    esp,DWORD PTR ds:0xa88b27e5
  411a25:	ret    0xfad7
  411a28:	push   ebx
  411a29:	push   ecx
  411a2a:	push   ebx
  411a2b:	out    dx,eax
  411a2c:	or     dl,BYTE PTR [esi-0x5713b75f]
  411a32:	in     al,dx
  411a33:	and    dl,BYTE PTR [edi]
  411a35:	shl    dh,1
  411a37:	aam    0x47
  411a39:	call   0xc877c526
  411a3e:	dec    eax
  411a3f:	pop    edi
  411a40:	mov    edx,0x3f2ee43e
  411a45:	rcr    WORD PTR [si],cl
  411a49:	xor    esi,DWORD PTR [esi+0xc117a6]
  411a4f:	sti    
  411a50:	sbb    BYTE PTR [edi-0x27],0x44
  411a54:	adc    eax,0x346cd938
  411a59:	shl    BYTE PTR [edx+0x15],0xd7
  411a5d:	popf   
  411a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a5f:	pop    ss
  411a60:	pop    ds
  411a61:	inc    edi
  411a62:	sub    esi,DWORD PTR [edx]
  411a64:	dec    eax
  411a65:	jg     0x411ae4
  411a67:	xor    eax,0x9d3c0531
  411a6c:	sub    ebp,DWORD PTR [ebp+0x75]
  411a6f:	xchg   BYTE PTR [ebp+0x3a702f73],dl
  411a75:	xchg   esi,eax
  411a76:	inc    esi
  411a77:	jne    0x411a4b
  411a79:	shl    esi,cl
  411a7b:	shl    dl,1
  411a7d:	or     BYTE PTR [ebx-0x32],dl
  411a80:	jp     0x411a8a
  411a82:	or     ah,dh
  411a84:	adc    al,0x8f
  411a86:	push   ebx
  411a87:	loope  0x411aa0
  411a89:	repnz test al,0x3f
  411a8c:	(bad)
  411a8f:	xor    DWORD PTR [edx-0x57],edx
  411a92:	jge    0x411a91
  411a94:	push   ss
  411a95:	adc    al,0x95
  411a97:	rcr    BYTE PTR [ecx],cl
  411a99:	inc    edx
  411a9a:	add    al,0x62
  411a9c:	ret    0x9e55
  411a9f:	jb     0x411af2
  411aa1:	dec    esp
  411aa2:	aaa    
  411aa3:	fisubr WORD PTR cs:[ebx]
  411aa6:	test   eax,0x5bbf1e17
  411aab:	div    DWORD PTR [ecx]
  411aad:	push   es
  411aae:	pushf  
  411aaf:	xchg   edi,eax
  411ab0:	inc    edx
  411ab1:	dec    edx
  411ab2:	div    DWORD PTR [ebx+eax*8-0x68bfa4a9]
  411ab9:	mov    eax,0x848dce33
  411abe:	add    ebx,esi
  411ac0:	jb     0x411af4
  411ac2:	add    BYTE PTR [ebx+0x558b084d],cl
  411ac8:	loopne 0x411a53
  411aca:	add    al,0x8a
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a753
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a757
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a75f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a763
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a767
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a76b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a76f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a773
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a77b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a743
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a74b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a74f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a753
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a757
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [esi-0x39],bl
  412637:	push   edi
  412638:	xor    ebp,DWORD PTR [ebx-0x76]
  41263b:	add    DWORD PTR [ebx-0x7c7ca3e9],0xffffff93
  412642:	inc    ebp
  412643:	xchg   ebp,eax
  412644:	mov    al,0x42
  412646:	jge    0x412642
  412648:	retf   0x54a1
  41264b:	popf   
  41264c:	popa   
  41264d:	cwde   
  41264e:	or     eax,0xf6f46ed8
  412653:	inc    esp
  412654:	aas    
  412655:	push   ds
  412656:	mov    eax,ds:0x9cbd6ad1
  41265b:	push   ds
  41265c:	cld    
  41265d:	xor    BYTE PTR [edi],ah
  41265f:	sti    
  412660:	fwait
  412661:	add    ah,BYTE PTR [ebp+0x3d003250]
  412667:	sbb    BYTE PTR [edx+0x35],ah
  41266a:	mov    ch,0xed
  41266c:	pop    eax
  41266d:	add    eax,0x79c2a63b
  412672:	push   edi
  412673:	jbe    0x412648
  412675:	sbb    BYTE PTR [ecx-0x68ed929d],bh
  41267b:	push   edi
  41267c:	cmp    DWORD PTR [ebx],ebp
  41267e:	fsubr  QWORD PTR [eax]
  412680:	jge    0x41260c
  412682:	cld    
  412683:	mov    ebp,0xa1cd3dca
  412688:	test   BYTE PTR [edx],bh
  41268a:	mov    ebp,0x70d93dd0
  41268f:	xor    eax,0x996156de
  412694:	repnz nop
  412696:	cmp    bh,bh
  412698:	push   ss
  412699:	adc    bh,0x95
  41269c:	mov    bl,BYTE PTR [edx+0x2ff2a861]
  4126a2:	mov    WORD PTR [ecx-0x70545fa4],?
  4126a8:	shr    DWORD PTR [edx-0xb41e44],0xbb
  4126af:	sub    BYTE PTR ds:0x4676fb80,cl
  4126b5:	(bad)  
  4126b6:	dec    edx
  4126b7:	pusha  
  4126b8:	and    BYTE PTR [eax],al
  4126ba:	cli    
  4126bb:	bound  ebp,QWORD PTR [ebp-0x63]
  4126be:	not    DWORD PTR [edx-0x27e70b7]
  4126c4:	cmp    eax,0x9737577b
  4126c9:	repnz push 0x3230d632
  4126cf:	mov    eax,ds:0x5cc2b458
  4126d4:	mov    esp,DWORD PTR [ebx]
  4126d6:	icebp  
  4126d7:	ror    DWORD PTR [edi+0x1b],1
  4126da:	lods   eax,DWORD PTR ds:[esi]
  4126db:	mov    ch,0xce
  4126dd:	jb     0x412718
  4126df:	in     eax,dx
  4126e0:	aam    0xbe
  4126e2:	xchg   edi,eax
  4126e3:	jo     0x41275e
  4126e5:	cmp    eax,0x2eef83ed
  4126ea:	mov    DWORD PTR [eax+0x57],eax
  4126ed:	lods   eax,DWORD PTR ds:[esi]
  4126ee:	in     al,dx
  4126ef:	jb     0x41274c
  4126f1:	sub    ecx,esp
  4126f3:	hlt    
  4126f4:	adc    eax,0xadd2e9ae
  4126f9:	(bad)  
  4126fa:	xor    al,0xa7
  4126fc:	mov    ds:0x2040f188,al
  412701:	dec    esi
  412702:	test   eax,0x2b6a4d0b
  412707:	xchg   ecx,eax
  412708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412709:	lock or ah,BYTE PTR [ebx+0x32]
  41270d:	lods   eax,DWORD PTR ds:[esi]
  41270e:	jmp    0x1341:0x331e4bef
  412715:	ror    DWORD PTR [eax+0x1d],0xe1
  412719:	cwde   
  41271a:	clc    
  41271b:	(bad)  
  41271d:	and    eax,0xcf3de67a
  412722:	out    dx,eax
  412723:	in     al,dx
  412724:	jmp    0x9ee80a70
  412729:	scas   eax,DWORD PTR es:[edi]
  41272a:	call   0xa70a651d
  41272f:	ins    DWORD PTR es:[edi],dx
  412730:	into   
  412731:	jnp    0x4127a5
  412733:	dec    esi
  412734:	push   ebp
  412735:	pop    esp
  412736:	jb     0x412717
  412738:	xchg   esi,eax
  412739:	out    dx,eax
  41273a:	jmp    0xe0dcaf4e
  41273f:	test   al,0x7e
  412741:	inc    ecx
  412742:	add    dh,BYTE PTR [edx-0x78]
  412745:	or     cl,al
  412747:	int    0x8a
  412749:	popf   
  41274a:	retf   0x5354
  41274d:	add    ebx,DWORD PTR [ebx+0x7]
  412750:	mov    eax,0x92dea59e
  412755:	pop    edi
  412756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412757:	adc    eax,0x2209587a
  41275c:	mov    bl,0xc2
  41275e:	mov    al,0x85
  412760:	cmovs  eax,DWORD PTR [edx+0x613822d2]
  412767:	dec    edx
  412768:	mov    eax,gs:0xc4937b9a
  41276e:	(bad)  
  41276f:	or     eax,0xfcd2a81f
  412774:	icebp  
  412775:	shl    DWORD PTR [ebx-0x701f53b7],1
  41277b:	stos   BYTE PTR es:[edi],al
  41277c:	cwde   
  41277d:	adc    ch,ch
  41277f:	push   ebp
  412780:	xor    BYTE PTR [eax+0x1956393c],dh
  412786:	adc    BYTE PTR [ecx],al
  412788:	mov    gs,ecx
  41278a:	mov    cl,0x15
  41278c:	mov    esi,ecx
  41278e:	out    dx,eax
  41278f:	mov    BYTE PTR [ebx+0x131515d3],dh
  412795:	sub    DWORD PTR [edi+0x66],eax
  412798:	push   0xda7a36a
  41279d:	lods   eax,DWORD PTR ds:[esi]
  41279e:	aad    0x4c
  4127a0:	cmp    DWORD PTR [edi+0xa],esp
  4127a3:	jo     0x412757
  4127a5:	cs out dx,al
  4127a7:	sub    eax,0x378f99c5
  4127ac:	outs   dx,BYTE PTR ds:[esi]
  4127ad:	xchg   DWORD PTR [edi],ebx
  4127af:	mov    edx,0xb85e83ac
  4127b4:	arpl   WORD PTR [edi+0x9],di
  4127b7:	mov    ebp,0xce98f08f
  4127bc:	data16 imul cl
  4127bf:	inc    ebx
  4127c0:	sar    BYTE PTR [edi+0x2a],cl
  4127c3:	pop    ebx
  4127c4:	jmp    0x4127d2
  4127c6:	ret    
  4127c7:	fadd   QWORD PTR [edi-0x1d89b8ed]
  4127cd:	mov    esi,0x6f1f99fe
  4127d2:	gs and ebp,esp
  4127d5:	icebp  
  4127d6:	push   ds
  4127d7:	leave  
  4127d8:	bound  esp,QWORD PTR es:[ebx]
  4127db:	adc    BYTE PTR [ecx-0x657b0932],0xca
  4127e2:	jb     0x412801
  4127e4:	retf   
  4127e5:	shl    BYTE PTR [ecx+esi*2],1
  4127e8:	aad    0xf0
  4127ea:	out    0x34,eax
  4127ec:	adc    al,0xc5
  4127ee:	loop   0x412807
  4127f0:	retf   0x3fca
  4127f3:	in     al,dx
  4127f4:	xlat   BYTE PTR ds:[ebx]
  4127f5:	xchg   esi,eax
  4127f6:	mov    ch,0x54
  4127f8:	add    bh,0xa0
  4127fb:	jge    0x412836
  4127fd:	mov    eax,ds:0xcb170763
  412802:	fs fwait
  412804:	cdq    
  412805:	inc    esp
  412806:	xchg   esp,eax
  412807:	pop    edi
  412808:	cmp    DWORD PTR [eax+0x41279a47],ebp
  41280e:	jnp    0x41280d
  412810:	add    DWORD PTR [ebp-0x54],ecx
  412813:	dec    eax
  412814:	mov    al,ds:0xe7b72c1d
  412819:	mov    esi,esp
  41281b:	sub    DWORD PTR [edx+0x7c],esi
  41281e:	out    0xb5,eax
  412820:	sbb    eax,0x47669333
  412825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412826:	push   ebx
  412827:	push   0xa058bbdd
  41282c:	and    BYTE PTR [ebx+eiz*4-0x4587f909],bh
  412833:	imul   esi,DWORD PTR [edx+0x19],0xab05629f
  41283a:	mov    bh,0xfe
  41283c:	pop    ss
  41283d:	(bad)  
  41283f:	imul   edx,DWORD PTR [eax],0xffffff94
  412842:	cmp    DWORD PTR [ecx],0xf9170482
  412848:	pop    ebx
  412849:	(bad)  [ecx+0x7b]
  41284c:	cmc    
  41284d:	push   ebp
  41284e:	cs sub esp,0x2f
  412852:	mov    ah,0xa1
  412854:	and    ah,BYTE PTR [ebp+0xa]
  412857:	inc    ecx
  412858:	sub    eax,0x4aa04ee9
  41285d:	push   esp
  41285e:	ins    BYTE PTR es:[edi],dx
  41285f:	jae    0x412893
  412861:	clc    
  412862:	jb     0x412867
  412864:	push   ss
  412865:	xchg   ecx,eax
  412866:	mov    eax,0x2926a59
  41286b:	mov    BYTE PTR [esi],dl
  41286d:	mov    edx,0x3ef8215d
  412872:	adc    esi,esp
  412874:	dec    edx
  412875:	and    bh,BYTE PTR ds:0xc2b9bc1a
  41287b:	mov    eax,0xee1b11ab
  412880:	jmp    0xe20fc81a
  412885:	mov    DWORD PTR [edi+0x5651e572],esp
  41288b:	fst    QWORD PTR [esi-0xca82248]
  412891:	ds pop ss
  412893:	enter  0xcc09,0xfc
  412897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412898:	jmp    0xfb0f:0x110c30e0
  41289f:	dec    ecx
  4128a0:	loopne 0x41284a
  4128a2:	lods   ax,WORD PTR ds:[esi]
  4128a4:	sub    bh,bl
  4128a6:	call   DWORD PTR [ebp-0x29]
  4128a9:	les    esp,FWORD PTR [esi+ebx*1+0x26]
  4128ad:	jl     0x4128bb
  4128af:	aas    
  4128b0:	test   DWORD PTR [edx-0x20],ebp
  4128b3:	inc    ebp
  4128b4:	test   bl,ah
  4128b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128b7:	sbb    DWORD PTR [edi-0xaedf645],0x87c81e3b
  4128c1:	in     al,0xcd
  4128c3:	ret    0x1a38
  4128c6:	adc    eax,0x836cd465
  4128cb:	cwde   
  4128cc:	imul   ecx,DWORD PTR [edi-0x43],0xffffff9f
  4128d0:	loop   0x41288a
  4128d2:	pop    ecx
  4128d3:	pop    es
  4128d4:	adc    al,0x39
  4128d6:	inc    esp
  4128d7:	pop    ecx
  4128d8:	jae    0x412942
  4128da:	retf   
  4128db:	(bad)  
  4128dc:	lds    edx,FWORD PTR es:[esi+0x5]
  4128e0:	fist   WORD PTR [esi+edx*2]
  4128e3:	mov    ds:0x5f42625a,al
  4128e8:	imul   ebx,DWORD PTR [ecx],0x1e344d08
  4128ee:	or     al,0x4e
  4128f0:	aaa    
  4128f1:	rol    ebx,cl
  4128f3:	aaa    
  4128f4:	push   cs
  4128f5:	push   edi
  4128f6:	jo     0x412896
  4128f8:	sub    DWORD PTR [ecx],ebx
  4128fa:	(bad)  
  4128fb:	mov    esp,es
  4128fd:	and    al,0xd0
  4128ff:	lar    edx,WORD PTR [edi]
  412902:	test   DWORD PTR [edi+edi*4],ebp
  412905:	sbb    al,0x16
  412907:	push   cs
  412908:	sub    DWORD PTR [ecx-0x40],edi
  41290b:	popf   
  41290c:	stos   BYTE PTR es:[edi],al
  41290d:	imul   edx,DWORD PTR [ebx],0x86aa77f1
  412913:	repz pop ds
  412915:	pop    ds
  412916:	push   ebx
  412917:	lahf   
  412918:	xor    eax,0x145a68b0
  41291d:	cmp    DWORD PTR [esi-0x6b],ebp
  412920:	cld    
  412921:	cmp    edi,DWORD PTR [ecx+0x33]
  412924:	cmp    eax,0x5efb1834
  412929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41292a:	call   DWORD PTR [edi+0x59]
  41292d:	xor    BYTE PTR [ebx+0x32],bh
  412930:	cmp    al,BYTE PTR [ecx+0x4b]
  412933:	adc    edx,edi
  412935:	(bad)  
  412936:	or     bl,BYTE PTR [edi-0x77]
  412939:	in     al,dx
  41293a:	inc    ebp
  41293b:	aad    0xe7
  41293d:	push   ss
  41293e:	(bad)  
  412940:	add    dl,ah
  412942:	(bad)  
  412944:	mov    dl,0x2a
  412946:	inc    edx
  412947:	pop    ecx
  412948:	in     al,dx
  412949:	arpl   WORD PTR [ebp-0x10ae64fe],di
  41294f:	cmp    eax,0x1e870451
  412954:	jmp    0x16697671
  412959:	jbe    0x412930
  41295b:	nop
  41295c:	in     eax,0xaf
  41295e:	pop    esp
  41295f:	xchg   ebp,eax
  412960:	retf   
  412961:	mul    DWORD PTR [ebp+0x23a6fda3]
  412967:	jne    0x41297d
  412969:	cld    
  41296a:	fidivr WORD PTR [ecx-0x1d]
  41296d:	mov    cl,0x86
  41296f:	mov    eax,ds:0x7d86aa67
  412974:	das    
  412975:	dec    ebp
  412976:	in     al,0xce
  412978:	mov    ?,WORD PTR [eax-0x474079a4]
  41297e:	js     0x412940
  412980:	push   es
  412981:	data16 mov al,BYTE PTR [esi]
  412984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412985:	ret    
  412986:	iret   
  412987:	inc    ebp
  412988:	push   esi
  412989:	mov    eax,ds:0x805160ae
  41298e:	(bad)  
  41298f:	adc    DWORD PTR [ebp+eax*8+0x2f5eb060],edi
  412996:	push   edx
  412997:	(bad)  
  412998:	cld    
  412999:	rcr    DWORD PTR [ebp-0x58d2cf43],cl
  41299f:	loope  0x412933
  4129a1:	pop    eax
  4129a2:	or     al,0xa3
  4129a4:	or     eax,0xad262e88
  4129a9:	jbe    0x412a1a
  4129ab:	cmc    
  4129ac:	pop    edi
  4129ad:	adc    eax,0xf0055d6d
  4129b2:	test   BYTE PTR [eax],dl
  4129b4:	dec    edx
  4129b5:	(bad)  
  4129b6:	xchg   edi,eax
  4129b7:	nop
  4129b8:	cdq    
  4129b9:	sub    al,0x19
  4129bb:	imul   esi,DWORD PTR [ecx+0x49],0xffffffa3
  4129bf:	cli    
  4129c0:	jg     0x4129d2
  4129c2:	(bad)  
  4129c3:	mov    ds:0x8deabf3a,al
  4129c8:	pusha  
  4129c9:	and    DWORD PTR [eax+0x69],eax
  4129cc:	mov    dh,0x4d
  4129ce:	test   ebx,esp
  4129d0:	xor    al,0xc8
  4129d2:	mov    cl,0xbc
  4129d4:	pop    ds
  4129d5:	add    BYTE PTR [edi+ebp*8-0x62],bl
  4129d9:	clc    
  4129da:	inc    ecx
  4129db:	sub    eax,0x715adc59
  4129e0:	mov    dl,0xe0
  4129e2:	nop
  4129e3:	lods   al,BYTE PTR ds:[esi]
  4129e4:	fs pop es
  4129e6:	add    esi,esi
  4129e8:	sub    al,0x31
  4129ea:	mov    ebp,DWORD PTR [ebx]
  4129ec:	sbb    DWORD PTR [esi+eax*2+0x33965f9e],esi
  4129f3:	(bad)  
  4129f5:	mov    esi,0x8653f8cb
  4129fa:	loope  0x412a13
  4129fc:	cmp    DWORD PTR [eax+eiz*2],ebp
  4129ff:	add    BYTE PTR [esi],cl
  412a01:	icebp  
  412a02:	xlat   BYTE PTR ds:[ebx]
  412a03:	mov    bh,0xb1
  412a05:	add    al,0x90
  412a07:	mov    ebp,DWORD PTR [esi-0x5e460d7c]
  412a0d:	sbb    dl,BYTE PTR [ebx]
  412a0f:	mov    al,ds:0xa4af99fa
  412a14:	aas    
  412a15:	nop
  412a16:	(bad)  
  412a17:	push   ss
  412a18:	adc    cl,ah
  412a1a:	(bad)  
  412a1b:	(bad)  
  412a1c:	rcr    DWORD PTR [edx],cl
  412a1e:	pop    esp
  412a1f:	bound  edx,QWORD PTR [esi-0x7fcbf28b]
  412a25:	pop    edi
  412a26:	inc    edi
  412a27:	mov    WORD PTR [esi-0x6688ce2d],es
  412a2d:	xchg   BYTE PTR [esi+0x6e07ba39],cl
  412a33:	cmp    cl,0x1d
  412a36:	pop    ds
  412a37:	pinsrw mm1,WORD PTR [edi+0x70],0x69
  412a3c:	pop    ebp
  412a3d:	fstp   TBYTE PTR [ebp-0x176b5466]
  412a43:	retf   
  412a44:	inc    edi
  412a45:	rcl    ah,0xc9
  412a48:	(bad)  
  412a49:	dec    ebx
  412a4a:	pop    ebx
  412a4b:	adc    eax,0xdcc161e3
  412a50:	cld    
  412a51:	cmp    esi,DWORD PTR [edi+ebx*4]
  412a54:	out    0x29,al
  412a56:	mov    edx,0xbe979561
  412a5b:	std    
  412a5c:	aad    0xe7
  412a5e:	js     0x412a75
  412a60:	rol    ecx,cl
  412a62:	aas    
  412a63:	fadd   st,st(5)
  412a65:	rcr    ebx,0xa
  412a68:	popf   
  412a69:	ret    0x40da
  412a6c:	out    0x93,al
  412a6e:	aaa    
  412a6f:	or     DWORD PTR [ebx-0x50],esi
  412a72:	inc    ebp
  412a73:	jp     0x412a79
  412a75:	and    al,0x8
  412a77:	inc    ebx
  412a78:	lods   al,BYTE PTR ds:[esi]
  412a79:	jp     0x412a4d
  412a7b:	jmp    0x4d2:0x6d1d4a53
  412a82:	pop    edx
  412a83:	bound  esi,QWORD PTR [ebp-0x65e1edd1]
  412a89:	icebp  
  412a8a:	fisub  DWORD PTR [ecx-0x7f47db26]
  412a90:	imul   esp,esi,0x27b6beee
  412a96:	mov    ecx,0x2b1dc9f9
  412a9b:	mov    eax,DWORD PTR [edx+0x1f7d33d5]
  412aa1:	aad    0x63
  412aa3:	jbe    0x412b11
  412aa5:	(bad)  
  412aa6:	sub    edi,DWORD PTR [ecx+0x472231f]
  412aac:	std    
  412aad:	pop    ecx
  412aae:	les    ebp,FWORD PTR [ebx]
  412ab0:	xchg   esp,eax
  412ab1:	mov    WORD PTR [edx],?
  412ab3:	sbb    dl,BYTE PTR [ecx]
  412ab5:	mov    DWORD PTR [ecx],0xe865416d
  412abb:	xchg   DWORD PTR [eax-0x30],esi
  412abe:	jle    0x412ad7
  412ac0:	rcr    BYTE PTR [edx+0x10],1
  412ac3:	add    ch,BYTE PTR [ecx+0x3610dac9]
  412ac9:	push   ds
  412aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412acb:	mov    bh,0x2a
  412acd:	out    dx,al
  412ace:	push   ss
  412acf:	inc    edx
  412ad0:	add    BYTE PTR [edx+0x53be8f02],dh
  412ad6:	push   eax
  412ad7:	jnp    0x412b05
  412ad9:	scas   eax,DWORD PTR es:[edi]
  412ada:	push   edi
  412adb:	call   0xfac74daa
  412ae0:	shl    BYTE PTR [eax-0x1e9939a],1
  412ae6:	out    dx,eax
  412ae7:	jno    0x412b06
  412ae9:	pop    esi
  412aea:	xlat   BYTE PTR ds:[ebx]
  412aeb:	jge    0x412adc
  412aed:	(bad)  
  412aef:	sub    DWORD PTR [edx-0xe3b840c],eax
  412af5:	mov    dl,0xb6
  412af7:	(bad)  
  412af8:	cdq    
  412af9:	mov    ah,0x80
  412afb:	pop    ss
  412afc:	(bad)  
  412afd:	pushf  
  412afe:	cdq    
  412aff:	xchg   ecx,eax
  412b00:	sub    edx,DWORD PTR [edi]
  412b02:	pop    es
  412b03:	(bad)  ds:0xeac18b3e
  412b09:	sub    eax,0xb4071b70
  412b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b0f:	jne    0x412b21
  412b11:	xchg   ebp,eax
  412b12:	leave  
  412b13:	(bad)  
  412b14:	dec    esi
  412b15:	and    bl,BYTE PTR [eax-0x56e3ecc8]
  412b1b:	sbb    BYTE PTR [ebp+0x52],cl
  412b1e:	sub    BYTE PTR [eax],cl
  412b20:	pop    ecx
  412b21:	inc    edi
  412b22:	clc    
  412b23:	pusha  
  412b24:	ja     0x412b44
  412b26:	pop    ebp
  412b27:	cmp    BYTE PTR [ecx+edx*2+0x58dd0a2c],dh
  412b2e:	cmp    ebp,edi
  412b30:	xchg   esi,eax
  412b31:	jp     0x412b19
  412b33:	cld    
  412b34:	cmp    BYTE PTR [ebx-0x62],0x45
  412b38:	jp     0x412b59
  412b3a:	xchg   edx,eax
  412b3b:	jge    0x412afa
  412b3d:	mov    BYTE PTR [esi-0x56],bh
  412b40:	(bad)  [ebx+esi*4+0x2aa63168]
  412b47:	mov    cl,0x9b
  412b49:	cmp    edx,DWORD PTR [ebx]
  412b4b:	lds    ebp,FWORD PTR [ebx+0x72]
  412b4e:	pop    edx
  412b4f:	pop    es
  412b50:	stos   DWORD PTR es:[edi],eax
  412b51:	and    al,0x25
  412b53:	mov    BYTE PTR [ecx-0x2683fb07],0x20
  412b5a:	sub    al,0xe1
  412b5c:	js     0x412baa
  412b5e:	jno    0x412b91
  412b60:	add    al,0x72
  412b62:	adc    esp,esp
  412b64:	sbb    al,0xc6
  412b66:	js     0x412b1e
  412b68:	into   
  412b69:	push   cs
  412b6a:	xchg   ebp,eax
  412b6b:	into   
  412b6c:	test   eax,0x60dd68e6
  412b71:	jmp    ebx
  412b73:	and    esp,DWORD PTR [esp+edx*1+0x39]
  412b77:	dec    ebx
  412b78:	ds sub al,0xc2
  412b7b:	adc    al,0x9d
  412b7d:	or     ebp,esp
  412b7f:	rol    ah,0xa0
  412b82:	or     ecx,0x1f20402b
  412b88:	out    dx,al
  412b89:	aad    0xa4
  412b8b:	mov    dh,BYTE PTR [eax]
  412b8d:	mov    BYTE PTR [esi-0x5b],bh
  412b90:	or     DWORD PTR [edi+ebp*1+0x1c],ebp
  412b94:	(bad)  
  412b95:	clc    
  412b96:	jne    0x412bf0
  412b98:	adc    al,0xc
  412b9a:	mov    ds:0xceaaa5d,al
  412b9f:	into   
  412ba0:	xchg   ebp,eax
  412ba1:	xchg   BYTE PTR [edi+0x1b],ch
  412ba4:	cmc    
  412ba5:	stc    
  412ba6:	test   al,0xa7
  412ba8:	and    ebp,DWORD PTR [eax]
  412baa:	push   0x4
  412bac:	ret    
  412bad:	xchg   esp,eax
  412bae:	sbb    eax,0x1401dff4
  412bb3:	add    DWORD PTR [edx],eax
  412bb5:	xor    BYTE PTR [edi],dl
  412bb7:	int    0x66
  412bb9:	fidiv  DWORD PTR [edi-0x3c]
  412bbc:	loopne 0x412bca
  412bbe:	sbb    al,0x3a
  412bc0:	jo     0x412bbd
  412bc2:	sbb    eax,0x10daaa7
  412bc7:	push   es
  412bc8:	mov    ah,0x23
  412bca:	mov    dl,0xcd
  412bcc:	and    DWORD PTR [ebx],esi
  412bce:	sub    al,0xa8
  412bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd1:	not    BYTE PTR [ecx-0x36]
  412bd4:	(bad)  
  412bd5:	jnp    0x412b7b
  412bd7:	aam    0xf0
  412bd9:	jb     0x412c05
  412bdb:	pop    ebp
  412bdc:	(bad)  
  412bdd:	jmp    0x9b8a:0x4c17aa65
  412be4:	push   cs
  412be5:	loope  0x412b78
  412be7:	jb     0x412c13
  412be9:	mov    edi,0xf6b80cf3
  412bee:	in     al,dx
  412bef:	or     edx,ecx
  412bf1:	sbb    al,0x80
  412bf3:	(bad)  
  412bf4:	cmp    BYTE PTR [ecx],dh
  412bf6:	(bad)  
  412bf7:	rol    DWORD PTR [eax],0xe6
  412bfa:	mov    edx,0xde30fc8b
  412bff:	cmp    edx,DWORD PTR [edx]
  412c01:	cmp    esi,eax
  412c03:	bound  edx,QWORD PTR [eax]
  412c05:	add    edi,DWORD PTR [eax-0x15]
  412c08:	push   ss
  412c09:	dec    BYTE PTR [edx+edi*2]
  412c0c:	inc    ebx
  412c0d:	jns    0x412c27
  412c0f:	out    dx,eax
  412c10:	imul   DWORD PTR [eax+edi*4-0x6f]
  412c14:	inc    edx
  412c15:	or     BYTE PTR [esi],al
  412c17:	xor    eax,0x9f226a9a
  412c1c:	cdq    
  412c1d:	mov    WORD PTR [eax-0x33],?
  412c20:	dec    eax
  412c21:	js     0x412c3c
  412c23:	sti    
  412c24:	jno    0x412bbb
  412c26:	(bad)  
  412c27:	in     eax,0xc4
  412c29:	dec    ebp
  412c2a:	push   ds
  412c2b:	pop    esi
  412c2c:	and    cl,cl
  412c2e:	pminsw mm3,QWORD PTR [edi+0x15575fe6]
  412c35:	cmp    ebp,DWORD PTR [ecx-0x1d]
  412c38:	out    0xc4,eax
  412c3a:	into   
  412c3b:	mov    BYTE PTR [edx+0x144b0414],dh
  412c41:	push   ds
  412c42:	dec    ecx
  412c43:	xchg   ebx,eax
  412c44:	ror    DWORD PTR [eax+0x67],cl
  412c47:	cli    
  412c48:	inc    esi
  412c49:	cli    
  412c4a:	loop   0x412c15
  412c4c:	rcl    BYTE PTR [ebx],1
  412c4e:	jnp    0x412c2c
  412c50:	mov    ebp,0x4ed7fb4d
  412c55:	out    0xb4,eax
  412c57:	mov    BYTE PTR [edx-0x3e],dh
  412c5a:	fmul   DWORD PTR [ebx-0xf]
  412c5d:	das    
  412c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c5f:	inc    ecx
  412c60:	outs   dx,DWORD PTR ds:[esi]
  412c61:	jg     0x412c83
  412c63:	pop    ds
  412c64:	fisubr DWORD PTR [esi+0x255f8728]
  412c6a:	mov    ch,BYTE PTR [edx]
  412c6c:	test   DWORD PTR [edi],ebp
  412c6e:	pop    esi
  412c6f:	call   0x571814c2
  412c74:	div    BYTE PTR [edi+0x7fb9aefb]
  412c7a:	fisub  WORD PTR [esi+ebx*2+0x39262336]
  412c81:	mov    BYTE PTR [ecx+0x545a670f],dh
  412c87:	pop    ebx
  412c88:	sub    BYTE PTR [eax-0x5936afd7],al
  412c8e:	or     ebp,DWORD PTR [esi]
  412c90:	xchg   ecx,eax
  412c91:	fisub  WORD PTR [edi+0x70]
  412c94:	xchg   esp,eax
  412c95:	nop
  412c96:	lahf   
  412c97:	push   ecx
  412c98:	je     0x412c41
  412c9a:	push   esi
  412c9b:	scas   al,BYTE PTR es:[edi]
  412c9c:	ffreep st(5)
  412c9e:	mov    esp,0x8a5e5e32
  412ca3:	inc    esi
  412ca4:	jl     0x412c6c
  412ca6:	cmp    ah,BYTE PTR [esi+ebp*4+0x3130831]
  412cad:	emms   
  412caf:	inc    edx
  412cb0:	stos   BYTE PTR es:[edi],al
  412cb1:	cmp    dl,BYTE PTR [ecx+0x76]
  412cb4:	cwde   
  412cb5:	mov    dl,0xa0
  412cb7:	shr    BYTE PTR [esi],cl
  412cb9:	mov    esi,0x24fad89c
  412cbe:	sbb    BYTE PTR [ebp-0x4],0x6a
  412cc2:	fprem1 
  412cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc5:	and    al,BYTE PTR [ebx+0x49cafd4c]
  412ccb:	test   BYTE PTR [esi+ebx*2+0xb9070f8],cl
  412cd2:	and    ah,dl
  412cd4:	inc    esi
  412cd5:	and    dl,BYTE PTR [ebp-0x70ac7560]
  412cdb:	push   ds
  412cdc:	pushf  
  412cdd:	mov    ah,bl
  412cdf:	mov    esp,0xee2004a8
  412ce4:	xor    eax,0x43d7a70e
  412ce9:	data16 out 0x7,al
  412cec:	imul   BYTE PTR [edi+ebp*8]
  412cef:	add    BYTE PTR [edx-0x20],ch
  412cf2:	nop
  412cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf4:	sbb    dl,BYTE PTR [ebx]
  412cf6:	in     eax,dx
  412cf7:	nop
  412cf8:	mov    ch,0xe
  412cfa:	out    0x28,al
  412cfc:	pusha  
  412cfd:	data16 aad 0x68
  412d00:	repnz cld 
  412d02:	xchg   esp,eax
  412d03:	stos   BYTE PTR es:[edi],al
  412d04:	lds    ebp,FWORD PTR [eax]
  412d06:	xor    al,ch
  412d08:	sub    al,0x6d
  412d0a:	push   DWORD PTR [ebx+0x59]
  412d0d:	sbb    esi,esp
  412d0f:	mov    DWORD PTR [edi+edi*1+0x25fe04d],ebp
  412d16:	or     BYTE PTR [ebp-0x7220b176],0x2
  412d1d:	sahf   
  412d1e:	fiadd  DWORD PTR [ecx]
  412d20:	sub    al,al
  412d22:	test   eax,0x4ff29e3d
  412d27:	push   esp
  412d28:	ret    
  412d29:	out    0x34,eax
  412d2b:	dec    edi
  412d2c:	bsr    ebx,DWORD PTR [esi-0x70]
  412d30:	loopne 0x412d2f
  412d32:	pop    ebp
  412d33:	clc    
  412d34:	stos   BYTE PTR es:[edi],al
  412d35:	mov    WORD PTR [ecx+ebp*8+0xd],?
  412d39:	imul   eax,DWORD PTR [edi],0x0
  412d3c:	loopne 0x412cd3
  412d3e:	shr    ebx,0x22
  412d41:	mov    ecx,0x635a6424
  412d46:	fnsave [eax+eiz*8-0x3522f1a3]
  412d4d:	push   edx
  412d4e:	and    esi,ebx
  412d50:	jnp    0x412d7b
  412d52:	xor    dh,dh
  412d54:	pop    ss
  412d55:	outs   dx,BYTE PTR ds:[esi]
  412d56:	adc    al,0xcf
  412d58:	fwait
  412d59:	dec    DWORD PTR [eax]
  412d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d5c:	jae    0x412d3e
  412d5e:	xor    ecx,esp
  412d60:	or     BYTE PTR [edx-0x1cc69ddc],ah
  412d66:	call   0xb725556c
  412d6b:	mov    dl,0x82
  412d6d:	pop    ebx
  412d6e:	(bad)  
  412d6f:	mov    dh,0x79
  412d71:	rol    ebx,0x4e
  412d74:	in     eax,dx
  412d75:	push   ecx
  412d76:	call   0x9c2a:0x55a8345
  412d7d:	or     eax,ebx
  412d7f:	pop    edx
  412d80:	sbb    BYTE PTR [ebp-0x5e8824c8],dh
  412d86:	xchg   ebp,eax
  412d87:	cmc    
  412d88:	adc    ebx,DWORD PTR [ebx+eiz*2]
  412d8b:	sahf   
  412d8c:	or     eax,edx
  412d8e:	imul   edi,DWORD PTR [ecx+0x211d1e04],0x43
  412d95:	rcl    BYTE PTR [edx+0x39f483b5],cl
  412d9b:	rcl    BYTE PTR [ecx],0xfc
  412d9e:	popa   
  412d9f:	out    0x9d,eax
  412da1:	xor    BYTE PTR [ecx+eax*8],bl
  412da4:	mov    ah,0x48
  412da6:	sbb    ah,ch
  412da8:	aad    0xc1
  412daa:	jecxz  0x412e22
  412dac:	inc    eax
  412dad:	sbb    BYTE PTR [ebx+0xd],dh
  412db0:	(bad)  
  412db1:	lock mov dl,0xc8
  412db4:	pushf  
  412db5:	scas   eax,DWORD PTR es:[edi]
  412db6:	mov    esi,0x43d7b31c
  412dbb:	arpl   WORD PTR [edx+0x145a9c1c],cx
  412dc1:	cmp    eax,0x68193572
  412dc6:	dec    edi
  412dc7:	and    ebx,0x3d628ebf
  412dcd:	inc    esp
  412dce:	cmp    DWORD PTR [eax+ecx*4-0x56],eax
  412dd2:	cld    
  412dd3:	cmp    ebp,esp
  412dd5:	scas   eax,DWORD PTR es:[edi]
  412dd6:	retf   0xf876
  412dd9:	mov    esi,0x3314c0d8
  412dde:	fnstcw WORD PTR [edi+0x16]
  412de1:	and    eax,0x7f0073e8
  412de6:	imul   ebx,DWORD PTR [edi-0x6c],0xffffff97
  412dea:	mov    WORD PTR [ebx+0x6],es
  412ded:	mov    bh,0xf8
  412def:	xor    ecx,ecx
  412df1:	inc    ecx
  412df2:	call   0xde49f29e
  412df7:	jl     0x412e68
  412df9:	test   eax,0xb9066850
  412dfe:	(bad)  
  412dff:	pusha  
  412e00:	jnp    0x412d8e
  412e02:	fst    QWORD PTR [ecx-0x232bc110]
  412e08:	and    BYTE PTR [eax],bl
  412e0a:	or     esi,DWORD PTR [esi+ebx*2]
  412e0d:	cmp    ch,BYTE PTR [edi-0x560326fc]
  412e13:	and    al,0x88
  412e15:	stc    
  412e16:	dec    edx
  412e17:	enter  0xc0eb,0xb8
  412e1b:	test   DWORD PTR [esi],edi
  412e1d:	scas   eax,DWORD PTR es:[edi]
  412e1e:	jns    0x412e5d
  412e20:	mov    eax,ds:0x7a8280cd
  412e25:	push   ds
  412e26:	inc    ebx
  412e27:	xor    ebx,esp
  412e29:	repz scas eax,DWORD PTR es:[edi]
  412e2b:	nop
  412e2c:	sbb    eax,edi
  412e2e:	mov    edx,0x3f8db7a1
  412e33:	loop   0x412dd2
  412e35:	inc    edx
  412e36:	xor    al,0x43
  412e38:	sti    
  412e39:	mov    dh,BYTE PTR [ecx-0x3b]
  412e3c:	hlt    
  412e3d:	jb     0x412e71
  412e3f:	inc    edx
  412e40:	dec    edi
  412e41:	fsub   QWORD PTR [ebp-0x35]
  412e44:	push   ebx
  412e45:	out    dx,eax
  412e46:	cmova  ebp,DWORD PTR [eax+0x44]
  412e4a:	xor    al,0xeb
  412e4c:	xchg   ecx,eax
  412e4d:	sbb    eax,0x497cdd30
  412e52:	push   esi
  412e53:	and    bh,bh
  412e55:	adc    edi,DWORD PTR [edi+0x58]
  412e58:	pop    ss
  412e59:	adc    ah,BYTE PTR [edx+esi*2+0x2183909b]
  412e60:	hlt    
  412e61:	jmp    0x412e33
  412e63:	add    cl,dh
  412e65:	mov    bl,0xc4
  412e67:	mov    ebx,0xab5bc0c6
  412e6c:	pop    esi
  412e6d:	or     edi,esi
  412e6f:	arpl   WORD PTR [ebp+0x74],sp
  412e72:	sub    bl,BYTE PTR [esi]
  412e74:	ficom  DWORD PTR [edi]
  412e76:	aam    0x64
  412e78:	mov    esi,0xc9000b16
  412e7d:	sbb    esi,esi
  412e7f:	mov    dl,0x43
  412e81:	daa    
  412e82:	rcl    DWORD PTR [edx-0x5],0xdb
  412e86:	xlat   BYTE PTR ds:[ebx]
  412e87:	(bad)  
  412e88:	push   eax
  412e89:	xor    edx,DWORD PTR [ebp-0x79a7396e]
  412e8f:	and    eax,DWORD PTR [esi+0x58]
  412e92:	add    ah,BYTE PTR [edi-0x28d45898]
  412e98:	or     BYTE PTR ds:0x95c9d5fb,ch
  412e9e:	sbb    al,0x44
  412ea0:	(bad)  
  412ea1:	cmp    dl,bh
  412ea3:	imul   edi,DWORD PTR [eax],0xd9d4391b
  412ea9:	mov    eax,0xa82208e4
  412eae:	sbb    cl,BYTE PTR [ebx+0x1e10c74c]
  412eb4:	inc    BYTE PTR [edx-0x165ec41c]
  412eba:	ins    DWORD PTR es:[edi],dx
  412ebb:	mov    esp,0x8bcdc48b
  412ec0:	jmp    0x8eb164b0
  412ec5:	enter  0x386f,0x5f
  412ec9:	(bad)  
  412eca:	or     BYTE PTR [ebx],ch
  412ecc:	mov    edi,?
  412ece:	or     ecx,DWORD PTR [esi+0x4a]
  412ed1:	mov    esi,0x8774678c
  412ed6:	sbb    bl,BYTE PTR fs:[ebx-0x2432296c]
  412edd:	ret    0xa728
  412ee0:	outs   dx,BYTE PTR ds:[esi]
  412ee1:	jns    0x412edb
  412ee3:	or     al,0xea
  412ee5:	dec    eax
  412ee6:	xor    DWORD PTR [ebp-0x26],ebx
  412ee9:	sbb    ebx,DWORD PTR [esi-0x357e749e]
  412eef:	nop
  412ef0:	lock adc eax,0xd002e68b
  412ef6:	xchg   ebp,eax
  412ef7:	adc    BYTE PTR [edi-0x6a],bl
  412efa:	mov    WORD PTR [esi],es
  412efc:	jne    0x412f30
  412efe:	shl    DWORD PTR [edx],0x9e
  412f01:	addr16 or bl,dl
  412f04:	dec    ecx
  412f05:	sub    DWORD PTR [esi],edi
  412f07:	out    dx,al
  412f08:	dec    esp
  412f09:	nop
  412f0a:	pop    ecx
  412f0b:	xchg   ecx,eax
  412f0c:	push   esi
  412f0d:	jbe    0x412f56
  412f0f:	lahf   
  412f10:	push   eax
  412f11:	loope  0x412ef8
  412f13:	xchg   edx,eax
  412f14:	xchg   esp,eax
  412f15:	and    eax,0xf65912a8
  412f1a:	das    
  412f1b:	pop    esi
  412f1c:	xchg   ecx,eax
  412f1d:	jb     0x412f14
  412f1f:	adc    ecx,DWORD PTR [ebx+edx*4-0x237eb220]
  412f26:	cli    
  412f27:	jae    0x412f48
  412f29:	pushf  
  412f2a:	mov    edi,0x51a17536
  412f2f:	icebp  
  412f30:	dec    edx
  412f31:	inc    ebp
  412f32:	push   eax
  412f33:	push   esp
  412f34:	pop    esp
  412f35:	jl     0x412faf
  412f37:	test   DWORD PTR [edi+0x66],ebx
  412f3a:	cmp    ah,BYTE PTR [ecx+0x4fb6c31]
  412f40:	sar    BYTE PTR [edx],1
  412f42:	xchg   ebp,eax
  412f43:	or     BYTE PTR [edi+0x6e],0xd5
  412f47:	lds    esp,FWORD PTR [edx+0x4f2b76d5]
  412f4d:	jo     0x412f21
  412f4f:	jbe    0x412f81
  412f51:	mov    ch,0x55
  412f53:	sbb    dl,ah
  412f55:	sub    ecx,DWORD PTR [eax-0x48]
  412f58:	shr    BYTE PTR [ecx+0x5ea18d91],1
  412f5e:	add    eax,0x7d8c72b1
  412f63:	ss call 0xf558:0x25f03747
  412f6b:	push   0xffffff82
  412f6d:	push   0x2902cf13
  412f72:	es mov edx,0x40c26d2
  412f78:	add    ch,BYTE PTR [ebx-0x48]
  412f7b:	lods   eax,DWORD PTR ds:[esi]
  412f7c:	pop    esp
  412f7d:	jmp    0xde699ac9
  412f82:	mov    ebx,0x11b4c545
  412f87:	std    
  412f88:	xchg   ebx,eax
  412f89:	add    ebp,DWORD PTR [edx*2-0x4ca8f771]
  412f90:	pop    edx
  412f91:	jmp    0x412fbc
  412f93:	xor    eax,0x86cc63bc
  412f98:	mov    es,WORD PTR [edi+0x28]
  412f9b:	or     cl,BYTE PTR [eax+0x3949359]
  412fa1:	push   ds
  412fa2:	aad    0xa7
  412fa4:	or     al,0xd5
  412fa6:	jl     0x412fa6
  412fa8:	mov    ebx,0xedc975b2
  412fad:	sar    DWORD PTR [esi+0x3c3bd6a8],0xae
  412fb4:	push   ds
  412fb5:	js     0x412fa3
  412fb7:	ins    DWORD PTR es:[edi],dx
  412fb8:	add    bh,BYTE PTR [eax-0x22]
  412fbb:	sub    BYTE PTR [edx-0x7a],dl
  412fbe:	jmp    0xf30a003e
  412fc3:	sti    
  412fc4:	add    al,0xfe
  412fc6:	and    DWORD PTR [esi+eax*1],ebp
  412fc9:	jl     0x412fcc
  412fcb:	not    ebx
  412fcd:	mov    ds:0x5b25be8,eax
  412fd2:	xor    ebp,eax
  412fd4:	xchg   BYTE PTR [ecx+0x41],dh
  412fd7:	cwde   
  412fd8:	push   cs
  412fd9:	cmp    ebx,esi
  412fdb:	outs   dx,BYTE PTR ds:[esi]
  412fdc:	cmp    edi,DWORD PTR [edi]
  412fde:	int3   
  412fdf:	pop    edx
  412fe0:	xor    eax,0x6bbe8fb2
  412fe5:	inc    ebp
  412fe6:	aad    0xc8
  412fe8:	jne    0x413008
  412fea:	lea    ebx,[ebx+0x2c65db20]
  412ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff1:	xor    dh,al
  412ff3:	push   eax
  412ff4:	in     al,dx
  412ff5:	popa   
  412ff6:	ins    BYTE PTR es:[edi],dx
  412ff7:	data16 sbb dh,BYTE PTR [edx-0x8]
  412ffb:	call   0x9b0d:0xb1205794
  413002:	shl    DWORD PTR [ecx-0x5bb5ba4d],1
  413008:	je     0x412fb9
  41300a:	leave  
  41300b:	mov    bh,0x4d
  41300d:	in     al,dx
  41300e:	pop    ds
  41300f:	in     eax,dx
  413010:	jmp    0x412ff7
  413012:	bound  ecx,QWORD PTR [ebx-0x13]
  413015:	test   al,bh
  413017:	push   edi
  413018:	cli    
  413019:	je     0x41307f
  41301b:	and    al,0x5b
  41301d:	push   esi
  41301e:	dec    ecx
  41301f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413020:	mov    dl,0x25
  413022:	mov    dl,0x5a
  413024:	out    0x1e,al
  413026:	sub    eax,0xbdd4d9d9
  41302b:	out    dx,eax
  41302c:	adc    al,0xcf
  41302e:	sub    DWORD PTR [ebp+0x3d44e186],ecx
  413034:	dec    ebx
  413035:	out    0x57,eax
  413037:	and    ebp,DWORD PTR [edi]
  413039:	dec    edx
  41303a:	je     0x4130a8
  41303c:	or     bl,dl
  41303e:	mov    ds:0x784eb604,eax
  413043:	mov    edi,0x9f677957
  413048:	pop    es
  413049:	fsubr  st(7),st
  41304b:	push   edx
  41304c:	jge    0x413019
  41304e:	test   al,0x5d
  413050:	lods   al,BYTE PTR ds:[esi]
  413051:	cwde   
  413052:	mov    ah,0xac
  413054:	push   0xc
  413056:	xor    al,0x61
  413058:	mov    esi,0x32eb0a66
  41305d:	jmp    0x413006
  41305f:	sbb    al,dh
  413061:	push   ebp
  413062:	xchg   ebp,eax
  413063:	les    ecx,FWORD PTR [eax-0x6b]
  413066:	xor    esp,DWORD PTR [esi-0x3d]
  413069:	leave  
  41306a:	dec    esi
  41306b:	sar    DWORD PTR [esi+ebp*1-0x408fb5be],cl
  413072:	aas    
  413073:	push   ss
  413074:	mov    ds:0x9d32637a,eax
  413079:	xchg   esp,eax
  41307a:	std    
  41307b:	cli    
  41307c:	arpl   WORD PTR [ecx-0x2f],si
  41307f:	mov    ah,0x5a
  413081:	mov    al,ds:0x4b4ecab6
  413086:	int    0x92
  413088:	cdq    
  413089:	daa    
  41308a:	mov    cl,0xfe
  41308c:	in     eax,dx
  41308d:	mov    bh,0x55
  41308f:	ret    0x1d86
  413092:	es into 
  413094:	loopne 0x413053
  413096:	loopne 0x4130dc
  413098:	icebp  
  413099:	sub    bh,BYTE PTR [ecx-0x6c]
  41309c:	test   BYTE PTR [esi-0x319f7adc],bh
  4130a2:	in     al,dx
  4130a3:	pop    ecx
  4130a4:	sub    eax,0x546b5ab6
  4130a9:	out    0xe3,eax
  4130ab:	push   edi
  4130ac:	fdiv   st(3),st
  4130ae:	nop    edx
  4130b1:	xchg   DWORD PTR [edx-0x38a9ac38],ebp
  4130b7:	pusha  
  4130b8:	mov    ebp,0x1bbe9e8
  4130bd:	or     al,0xb6
  4130bf:	mov    ds:0xcfa706b8,eax
  4130c4:	push   esp
  4130c5:	or     BYTE PTR [ebx+0x1c29a1af],dh
  4130cb:	cmp    DWORD PTR [ebp-0x5c95dcb5],0xffffffc6
  4130d2:	lea    ecx,[eax+eax*4-0x5]
  4130d6:	inc    ecx
  4130d7:	or     DWORD PTR [esi-0x4a960cc4],0xffffffd4
  4130de:	xchg   edx,eax
  4130df:	jne    0x4130d5
  4130e1:	xlat   BYTE PTR ds:[ebx]
  4130e2:	inc    edi
  4130e3:	and    BYTE PTR [edi+0x6b],dl
  4130e6:	fmul   st,st(5)
  4130e8:	pop    esp
  4130e9:	pop    ecx
  4130ea:	mov    dh,0x50
  4130ec:	scas   al,BYTE PTR es:[edi]
  4130ed:	and    BYTE PTR [esi],al
  4130ef:	mov    al,BYTE PTR [ebx+0xeb1bf2b]
  4130f5:	adc    dl,BYTE PTR [ebp-0x62]
  4130f8:	or     BYTE PTR [ecx],bl
  4130fa:	(bad)  
  4130fb:	hlt    
  4130fc:	shl    DWORD PTR [ecx-0x29],0x97
  413100:	retf   0x8d08
  413103:	mov    ebx,DWORD PTR [edx]
  413105:	jnp    0x4130a6
  413107:	lods   eax,DWORD PTR ds:[esi]
  413108:	adc    DWORD PTR [eax+0x43003504],ebp
  41310e:	cs sub edx,0xd34f2713
  413115:	pop    esi
  413116:	adc    BYTE PTR [ebp-0x68e08904],0x29
  41311d:	mov    eax,0x2bdc0cc
  413122:	pushf  
  413123:	or     BYTE PTR [edi],ah
  413125:	inc    esp
  413126:	(bad)  
  413128:	xchg   edi,eax
  413129:	jae    0x4131a9
  41312b:	call   0x9bbc95ed
  413130:	push   0x37
  413132:	jge    0x4130d8
  413134:	sbb    edx,0xa9937524
  41313a:	cwde   
  41313b:	shl    BYTE PTR [ebp-0x5f],1
  41313e:	retf   
  41313f:	mov    al,0xb7
  413141:	je     0x4131b4
  413143:	inc    esi
  413144:	loope  0x413182
  413146:	inc    edx
  413147:	ins    BYTE PTR es:[edi],dx
  413148:	lds    esp,FWORD PTR [edi+0x1c]
  41314b:	pop    ebx
  41314c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41314d:	call   0xf574:0xd0184ff4
  413154:	loop   0x4131c5
  413156:	sti    
  413157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413158:	mov    bh,0x57
  41315a:	xchg   ebx,eax
  41315b:	pop    edi
  41315c:	(bad)  
  41315d:	fisttp QWORD PTR [ebp+ecx*1+0x774e2699]
  413164:	stos   BYTE PTR es:[edi],al
  413165:	daa    
  413166:	jle    0x413114
  413168:	xor    ah,BYTE PTR [edx]
  41316a:	test   eax,0x60cfce87
  41316f:	xor    al,0x25
  413171:	mov    BYTE PTR [esi-0x63eb1072],bl
  413177:	mov    cl,0xe0
  413179:	push   ebx
  41317a:	in     eax,0x54
  41317c:	mov    dl,0x36
  41317e:	xor    bh,BYTE PTR [esi]
  413180:	inc    ebx
  413181:	push   edx
  413182:	pop    edi
  413183:	pop    ds
  413184:	fadd   st,st(2)
  413186:	inc    ebp
  413187:	gs jp  0x413142
  41318a:	mov    dl,0x80
  41318c:	shl    esp,0x3a
  41318f:	ds lock fcomi st,st(1)
  413193:	enter  0x300,0x2c
  413197:	jmp    0x413151
  413199:	mov    bl,0x39
  41319b:	jbe    0x413173
  41319d:	cmp    edx,DWORD PTR [edx-0x25953ede]
  4131a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a4:	sub    al,0xd
  4131a6:	inc    esi
  4131a7:	cmp    edi,DWORD PTR [ebx-0x672e5ffc]
  4131ad:	dec    esi
  4131ae:	ss adc al,0x6f
  4131b1:	ss jmp 0x34a4:0xc9246e31
  4131b9:	data16 fs sbb bh,ah
  4131bd:	mov    ebp,0x5a6d1c1a
  4131c2:	ror    edx,1
  4131c4:	dec    ecx
  4131c5:	scas   eax,DWORD PTR es:[edi]
  4131c6:	aam    0x5b
  4131c8:	adc    al,0x27
  4131ca:	push   ebx
  4131cb:	int    0xc5
  4131cd:	lods   al,BYTE PTR ds:[esi]
  4131ce:	pop    es
  4131cf:	xor    esi,DWORD PTR [edi-0x74741e75]
  4131d5:	test   BYTE PTR [ebx],al
  4131d7:	aam    0xfe
  4131d9:	or     al,0x18
  4131db:	push   esi
  4131dc:	sti    
  4131dd:	call   0x9505:0x57917863
  4131e4:	hlt    
  4131e5:	push   ebp
  4131e6:	or     eax,0x69c150
  4131eb:	fadd   QWORD PTR [edi-0xf]
  4131ee:	sub    BYTE PTR [ecx],cl
  4131f0:	pop    eax
  4131f1:	jle    0x41318b
  4131f3:	cli    
  4131f4:	mov    edx,0x842e55b5
  4131f9:	cs pop eax
  4131fb:	mov    ds,WORD PTR [ebp-0x35c130b2]
  413201:	ds cld 
  413203:	cmp    BYTE PTR [ebp+0x19],bh
  413206:	push   edx
  413207:	jle    0x4131b8
  413209:	inc    edx
  41320a:	aad    0x20
  41320c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41320d:	push   ss
  41320e:	shr    BYTE PTR [eax-0x79eda3e0],1
  413214:	push   0x4e41df57
  413219:	aaa    
  41321a:	jb     0x4131cf
  41321c:	out    dx,al
  41321d:	push   ss
  41321e:	dec    esp
  41321f:	inc    ecx
  413220:	and    al,dh
  413222:	call   0x3571:0xd4a18472
  413229:	lahf   
  41322a:	out    0xe2,eax
  41322c:	cdq    
  41322d:	xchg   esp,eax
  41322e:	or     DWORD PTR [esi-0x19abd102],esp
  413234:	sub    ebp,DWORD PTR [eax+0x6ac91a87]
  41323a:	adc    eax,0x6c3aaebc
  41323f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413240:	pop    esp
  413241:	jl     0x41327e
  413243:	inc    ebp
  413244:	pop    ecx
  413245:	mov    edi,0x1a64fe71
  41324a:	mov    ebx,0xc39f2733
  41324f:	aaa    
  413250:	mov    edi,0x878113ea
  413255:	dec    ebx
  413256:	mov    esi,0x46558ccf
  41325b:	dec    edi
  41325c:	pop    es
  41325d:	xchg   esi,eax
  41325e:	clc    
  41325f:	fs in  al,0x67
  413262:	xor    eax,edx
  413264:	xchg   ebp,eax
  413265:	inc    ecx
  413266:	jae    0x4131f5
  413268:	out    dx,eax
  413269:	and    al,0x65
  41326b:	xor    edx,0xffffffec
  41326e:	push   0x76
  413270:	jno    0x413220
  413272:	pop    es
  413273:	pop    esi
  413274:	mov    ebp,ecx
  413276:	shl    BYTE PTR [esi-0x33],1
  413279:	mov    ds:0xe9822252,al
  41327e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41327f:	pusha  
  413280:	fucomip st,st(0)
  413282:	fist   DWORD PTR [ecx+0xe]
  413285:	cmp    esp,DWORD PTR [edx]
  413287:	and    eax,DWORD PTR [esi+0x79]
  41328a:	popf   
  41328b:	mov    ch,0xf9
  41328d:	aam    0xbe
  41328f:	cmp    al,BYTE PTR [eax-0xe]
  413292:	jmp    0xf3fad693
  413297:	icebp  
  413298:	sar    BYTE PTR [ebp-0x2c1248db],1
  41329e:	push   ebx
  41329f:	in     al,0xc7
  4132a1:	push   edx
  4132a2:	fs pop esp
  4132a4:	out    dx,eax
  4132a5:	mov    WORD PTR [edx+0x5d],ds
  4132a8:	adc    al,0xe2
  4132aa:	xchg   ecx,eax
  4132ab:	jge    0x41325d
  4132ad:	imul   DWORD PTR ds:0x19cb9736
  4132b3:	loope  0x41329a
  4132b5:	and    BYTE PTR [esi-0x7e232486],ch
  4132bb:	add    BYTE PTR [eax+0x6a06234e],dh
  4132c1:	mov    al,0x3
  4132c3:	mov    dh,0x71
  4132c5:	inc    eax
  4132c6:	je     0x413266
  4132c8:	cmp    eax,0x6d5e6c05
  4132cd:	popa   
  4132ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132cf:	jno    0x413316
  4132d1:	add    eax,0x48cffcb2
  4132d6:	jnp    0x413294
  4132d8:	sbb    DWORD PTR [edi-0x3f441ff0],ebp
  4132de:	or     BYTE PTR [ecx],0x8
  4132e1:	mov    cl,0xd1
  4132e3:	xlat   BYTE PTR ds:[ebx]
  4132e4:	jb     0x4132b5
  4132e6:	aad    0x24
  4132e8:	or     edx,edi
  4132ea:	or     edi,DWORD PTR [edi+0x391b0b4a]
  4132f0:	adc    eax,0xa85d6d31
  4132f5:	in     eax,0x5
  4132f7:	les    ebp,FWORD PTR [edx-0x3e]
  4132fa:	cwde   
  4132fb:	mov    edx,0xe8c776c1
  413300:	cdq    
  413301:	repz xchg ebx,eax
  413303:	cmp    bh,BYTE PTR [eax]
  413305:	call   0x71aad4a5
  41330a:	push   edi
  41330b:	retf   
  41330c:	inc    edi
  41330d:	jnp    0x413296
  41330f:	dec    edi
  413310:	(bad)  
  413311:	jp     0x413338
  413313:	pop    edx
  413314:	jle    0x4132e9
  413316:	mov    dl,0xf9
  413318:	out    dx,al
  413319:	stc    
  41331a:	sub    eax,0x876959be
  41331f:	ds enter 0xaef9,0xcf
  413324:	aaa    
  413325:	out    0xe3,eax
  413327:	push   eax
  413328:	pop    ds
  413329:	jbe    0x41331d
  41332b:	sub    DWORD PTR [ecx],eax
  41332d:	mov    esp,0x41496a86
  413332:	or     edx,DWORD PTR [ecx]
  413334:	push   esp
  413335:	les    esi,FWORD PTR [eax+0xe]
  413338:	mov    bh,0x91
  41333a:	ins    DWORD PTR es:[edi],dx
  41333b:	pop    ss
  41333c:	jo     0x413321
  41333e:	test   BYTE PTR [edx-0x21],al
  413341:	sahf   
  413342:	shl    bl,0xbc
  413345:	cmp    BYTE PTR [edx+0x16],0xff
  413349:	push   ds
  41334a:	test   BYTE PTR [esi-0x75],cl
  41334d:	loopne 0x413351
  41334f:	xor    ebx,DWORD PTR [ecx]
  413351:	rcl    DWORD PTR [eax+0x4d],cl
  413354:	retf   
  413355:	not    DWORD PTR [edi+0x6706c5a6]
  41335b:	rcl    DWORD PTR [edi],1
  41335d:	jo     0x4132f7
  41335f:	xor    eax,0x8f87194b
  413364:	(bad)  
  413366:	out    dx,eax
  413367:	and    esi,DWORD PTR [ebx-0x498dc990]
  41336d:	int3   
  41336e:	xor    ebx,ebp
  413370:	xor    eax,0x96454e10
  413375:	cli    
  413376:	push   cs
  413377:	outs   dx,DWORD PTR ds:[esi]
  413378:	jmp    0x5553a2de
  41337d:	pop    ecx
  41337e:	loop   0x4133b2
  413380:	lods   al,BYTE PTR ds:[esi]
  413381:	adc    DWORD PTR [edi+0x12],ecx
  413384:	jae    0x41338d
  413386:	sbb    esi,DWORD PTR [edx+0x669c1fdc]
  41338c:	outs   dx,BYTE PTR ds:[esi]
  41338d:	mov    esp,0xab71bbf
  413392:	cs in  al,dx
  413394:	push   ss
  413395:	and    BYTE PTR [esi-0x36878daa],ch
  41339b:	fwait
  41339c:	mov    DWORD PTR [eax-0x459777b6],eax
  4133a2:	sbb    edi,DWORD PTR [esi]
  4133a4:	jge    0x41335f
  4133a6:	clc    
  4133a7:	fs xchg ebx,eax
  4133a9:	test   al,0x1
  4133ab:	dec    edi
  4133ac:	stc    
  4133ad:	inc    ebp
  4133ae:	(bad)  
  4133af:	and    ebx,DWORD PTR [bx-0x3f]
  4133b3:	daa    
  4133b4:	lods   eax,DWORD PTR ds:[esi]
  4133b5:	sbb    al,0x58
  4133b7:	pushf  
  4133b8:	(bad)  
  4133ba:	loop   0x4133b7
  4133bc:	xchg   ebx,eax
  4133bd:	jae    0x413391
  4133bf:	cmp    ah,0x88
  4133c2:	xor    BYTE PTR [eax+edi*4],ch
  4133c5:	cmc    
  4133c6:	push   ds
  4133c7:	cmp    eax,0xddf758d
  4133cc:	xor    dl,dh
  4133ce:	or     eax,0xb3935f28
  4133d3:	dec    esp
  4133d4:	or     al,0x13
  4133d6:	or     bl,dh
  4133d8:	sub    BYTE PTR [edx-0x73190224],al
  4133de:	in     eax,0x6
  4133e0:	lahf   
  4133e1:	and    ecx,DWORD PTR [edx-0x339656e8]
  4133e7:	pop    ss
  4133e8:	ja     0x413377
  4133ea:	dec    edx
  4133eb:	xchg   ebx,eax
  4133ec:	jbe    0x413405
  4133ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ef:	push   cs
  4133f0:	and    cl,BYTE PTR [ebx-0x11]
  4133f3:	inc    BYTE PTR [edx+0x30e20634]
  4133f9:	dec    esp
  4133fa:	lds    edx,FWORD PTR [ebx+0x4ebda6ab]
  413400:	test   BYTE PTR [edi+0x42890e36],bh
  413406:	dec    edx
  413407:	inc    edx
  413408:	sub    al,0x66
  41340a:	jbe    0x4133cc
  41340c:	sti    
  41340d:	scas   eax,DWORD PTR es:[edi]
  41340e:	pusha  
  41340f:	adc    DWORD PTR [esi],0xfffffff1
  413412:	lds    edx,FWORD PTR [edi+0x1f]
  413415:	(bad)  
  413416:	stos   DWORD PTR es:[edi],eax
  413417:	mov    esi,0x43a126f8
  41341c:	sub    dl,BYTE PTR [edx-0x48]
  41341f:	or     eax,0xf042a658
  413424:	push   0x15
  413426:	outs   dx,DWORD PTR ds:[esi]
  413427:	and    DWORD PTR [esi+edi*2-0xf],edi
  41342b:	lahf   
  41342c:	push   edi
  41342d:	das    
  41342e:	xchg   DWORD PTR [ebx-0x167d6ce1],ecx
  413434:	and    DWORD PTR [eax-0x4f],edx
  413437:	sbb    DWORD PTR [ebx+0x56],esp
  41343a:	nop
  41343b:	push   esp
  41343c:	dec    ebx
  41343d:	jg     0x41345d
  41343f:	ret    
  413440:	test   al,0x8e
  413442:	int    0x19
  413444:	aam    0xbc
  413446:	jmp    DWORD PTR [eax-0x24]
  413449:	or     eax,0x523253f5
  41344e:	pop    eax
  41344f:	int3   
  413450:	jl     0x4134a0
  413452:	imul   ebx,DWORD PTR [ebx+0xa],0x29
  413456:	cmp    ecx,0xfffffff8
  413459:	cmp    al,BYTE PTR [ecx]
  41345b:	mov    cl,0xa8
  41345d:	shr    BYTE PTR [edx],0x96
  413460:	or     al,ah
  413462:	xor    ebx,DWORD PTR [esi]
  413464:	cmp    esp,DWORD PTR [ebx+0x63a4c3b7]
  41346a:	call   0x538a548e
  41346f:	aas    
  413470:	(bad)  
  413471:	nop
  413472:	imul   edx,DWORD PTR [esi+0x4d5d5522],0xbf85074f
  41347c:	or     dh,bl
  41347e:	push   0x24
  413480:	push   esi
  413481:	call   0xb2c0:0xeec0da4f
  413488:	cli    
  413489:	jmp    0xce30:0xeff6cf3d
  413490:	fdiv   QWORD PTR [edx-0xac6156e]
  413496:	inc    ecx
  413497:	repnz mov esp,0xc3f5889b
  41349d:	in     al,0xbd
  41349f:	xor    al,0xa9
  4134a1:	ins    DWORD PTR es:[edi],dx
  4134a2:	mov    ebx,0xf8a189ee
  4134a7:	dec    edi
  4134a8:	mov    ah,0x64
  4134aa:	pop    esp
  4134ab:	mov    al,0x3d
  4134ad:	jns    0x413524
  4134af:	pop    esi
  4134b0:	ret    0x4d51
  4134b3:	or     dl,BYTE PTR [edx]
  4134b5:	jo     0x41345a
  4134b7:	daa    
  4134b8:	add    ebx,ebx
  4134ba:	cwde   
  4134bb:	sti    
  4134bc:	stc    
  4134bd:	push   0xffffffdb
  4134bf:	jle    0x4134d1
  4134c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134c2:	jle    0x413529
  4134c4:	rol    ah,cl
  4134c6:	and    al,0xef
  4134c8:	ror    DWORD PTR es:[eax+ebp*1-0x73],0x2e
  4134ce:	ins    DWORD PTR es:[edi],dx
  4134cf:	add    DWORD PTR [edx-0x33169561],ebp
  4134d5:	pop    es
  4134d6:	mov    dh,0xcb
  4134d8:	test   BYTE PTR [ebp+0x4df3a52],0xa5
  4134df:	xchg   edx,eax
  4134e0:	mov    dh,0x12
  4134e2:	jle    0x4134c9
  4134e4:	retf   0xbd79
  4134e7:	or     ecx,edi
  4134e9:	fdiv   QWORD PTR [edi+ecx*2]
  4134ec:	push   ebp
  4134ed:	xchg   esi,eax
  4134ee:	mov    eax,ds:0x678229cb
  4134f3:	or     bh,BYTE PTR [ebx+0x32]
  4134f6:	rcr    DWORD PTR [edx],cl
  4134f8:	xchg   esi,eax
  4134f9:	iret   
  4134fa:	xchg   bl,cl
  4134fc:	cmp    DWORD PTR [esi],ebx
  4134fe:	push   ebp
  4134ff:	mov    edi,0xbb74a099
  413504:	push   cs
  413505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413506:	dec    ecx
  413507:	in     eax,dx
  413508:	dec    esi
  413509:	add    DWORD PTR [edx+edx*1+0x33],edx
  41350d:	xchg   ecx,eax
  41350e:	js     0x413500
  413510:	ja     0x41350d
  413512:	cmp    BYTE PTR [ebx-0x178c3fbb],al
  413518:	ret    0x9344
  41351b:	inc    ebx
  41351c:	lea    ebx,[edi-0x18d1ae35]
  413522:	fstp   st(4)
  413524:	dec    edi
  413525:	pop    es
  413526:	sbb    BYTE PTR [ebp-0x62771441],al
  41352c:	pop    ds
  41352d:	ror    edi,1
  41352f:	hlt    
  413530:	pushf  
  413531:	sub    ebp,DWORD PTR [ebx]
  413533:	bound  esp,QWORD PTR [edi+ebx*4]
  413536:	mov    ecx,0x15b989fd
  41353b:	push   edx
  41353c:	lock xor DWORD PTR [edx+0x747bcec7],esi
  413543:	push   eax
  413544:	add    edi,DWORD PTR [ebx]
  413546:	xchg   BYTE PTR [ebx-0x5108473b],ch
  41354c:	ss add eax,0x4a277df0
  413552:	xchg   ecx,eax
  413553:	arpl   WORD PTR [ebp+0x10],ax
  413556:	mov    al,ds:0xc181b2d2
  41355b:	test   BYTE PTR [ebx-0x4b],al
  41355e:	(bad)
  413561:	add    al,0x13
  413563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413564:	scas   al,BYTE PTR es:[edi]
  413565:	jno    0x41359a
  413567:	mov    esi,DWORD PTR [ebx+0x469e4220]
  41356d:	loop   0x4135e3
  41356f:	push   ebx
  413570:	fist   WORD PTR [ebx-0x2b]
  413573:	add    edi,DWORD PTR [edx+0x2586c4d2]
  413579:	adc    esi,DWORD PTR [eax+0x3b56f6bf]
  41357f:	mov    eax,ds:0xf45fddf0
  413584:	fdiv   st,st(1)
  413586:	imul   ebx,DWORD PTR [edx],0x1f4e252c
  41358c:	pmaxub mm3,QWORD PTR [eax+0x6a]
  413590:	mov    esp,DWORD PTR [ecx-0x60]
  413593:	sub    eax,0x96287479
  413598:	mov    edi,DWORD PTR [ecx+ecx*1+0xe]
  41359c:	leave  
  41359d:	aaa    
  41359e:	mov    ss,eax
  4135a0:	pop    edi
  4135a1:	xchg   BYTE PTR [edi],ch
  4135a3:	or     eax,DWORD PTR [edx+0x325db6e6]
  4135a9:	sti    
  4135aa:	and    esi,ebp
  4135ac:	adc    ecx,esi
  4135ae:	pop    ds
  4135af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b0:	xor    dl,0xc7
  4135b3:	add    ebp,DWORD PTR [eax-0x461094e6]
  4135b9:	mov    esp,0x58afc8fd
  4135be:	xor    cl,BYTE PTR [ebx+0x55d715ba]
  4135c4:	xchg   esi,eax
  4135c5:	(bad)  
  4135c6:	adc    ah,BYTE PTR [ebp+0x75]
  4135c9:	jmp    0x8aaac51e
  4135ce:	retf   0x3488
  4135d1:	adc    edx,ebp
  4135d3:	cmp    eax,0x535c00e5
  4135d8:	and    BYTE PTR [esi+0x5f9a1fc5],dh
  4135de:	add    dl,dl
  4135e0:	xor    eax,ebp
  4135e2:	xchg   esi,eax
  4135e3:	adc    ecx,edx
  4135e5:	stos   DWORD PTR es:[edi],eax
  4135e6:	mov    eax,ds:0x1809f23d
  4135eb:	lds    edi,FWORD PTR [ebp+0x6b76cf05]
  4135f1:	push   ds
  4135f2:	jns    0x4135bd
  4135f4:	mov    bl,0xed
  4135f6:	popf   
  4135f7:	ret    
  4135f8:	sub    eax,ebp
  4135fa:	sub    al,0xaf
  4135fc:	jnp    0x413601
  4135fe:	mov    bl,0x8d
  413600:	hlt    
  413601:	shl    BYTE PTR [edi+esi*8],cl
  413604:	and    eax,DWORD PTR [edi-0x599e35fa]
  41360a:	jb     0x4135fb
  41360c:	test   eax,0xede26da9
  413611:	(bad)  [eax-0x1aeb5488]
  413617:	xchg   ebx,eax
  413618:	cmp    BYTE PTR ds:0x92fc92c9,bl
  41361e:	rcr    BYTE PTR [edi+0x35efe721],cl
  413624:	loopne 0x413658
  413626:	xor    al,0xc6
  413628:	and    edx,DWORD PTR [edi]
  41362a:	push   edi
  41362b:	jne    0x4135cb
  41362d:	xchg   esi,eax
  41362e:	mov    esi,0x7ec93cb2
  413633:	mov    eax,ds:0x34b4b670
  413638:	aad    0x27
  41363a:	bound  esp,QWORD PTR [ebx-0x4c]
  41363d:	popa   
  41363e:	push   ebx
  41363f:	jbe    0x41367b
  413641:	or     al,0x47
  413643:	cwde   
  413644:	lea    ebx,[edi-0x1]
  413647:	dec    ecx
  413648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413649:	sbb    DWORD PTR [eax+0x1],esi
  41364c:	fist   DWORD PTR ds:0xff6f243f
  413652:	icebp  
  413653:	sbb    eax,0x5fa829fe
  413658:	jmp    0x41364c
  41365a:	js     0x413642
  41365c:	int3   
  41365d:	ror    edi,cl
  41365f:	pop    esi
  413660:	xchg   ebp,eax
  413661:	cmp    eax,0x238de07a
  413666:	jno    0x4136c7
  413668:	push   0xeeb40a9c
  41366d:	jmp    0x1f32fbf0
  413672:	out    dx,eax
  413673:	outs   dx,DWORD PTR ds:[esi]
  413674:	adc    eax,0xcf0ed41
  413679:	mov    esi,0x9eb8ee53
  41367e:	xor    DWORD PTR [ebx+0x6c1889a4],0xffffffc1
  413685:	sbb    BYTE PTR [esi+0x52e3c7e6],dl
  41368b:	(bad)  
  41368c:	(bad)  
  41368e:	outs   dx,DWORD PTR ds:[esi]
  41368f:	mov    ebp,0xca84e09
  413694:	mov    ch,BYTE PTR [esi]
  413696:	cs test eax,0x297ddb54
  41369c:	sub    BYTE PTR [edi],al
  41369e:	lea    edx,[ebx-0x48]
  4136a1:	jp     0x413690
  4136a3:	clc    
  4136a4:	ss es call 0x1eea:0x1968406f
  4136ad:	sbb    eax,0x8b444aa1
  4136b2:	mov    dh,0x2a
  4136b4:	inc    esp
  4136b5:	aaa    
  4136b6:	push   edx
  4136b7:	push   0x35d6d24e
  4136bc:	adc    ebx,DWORD PTR [ebx+edi*4]
  4136bf:	imul   ebx,ebx,0x1c
  4136c2:	out    dx,al
  4136c3:	mov    ah,0xf0
  4136c5:	fbld   TBYTE PTR [ebx-0x4c5f9d95]
  4136cb:	imul   ebp,eax,0xffffff9d
  4136ce:	clc    
  4136cf:	dec    esi
  4136d0:	in     al,0x59
  4136d2:	dec    esp
  4136d3:	aam    0xbb
  4136d5:	sub    BYTE PTR [esi],bh
  4136d7:	jnp    0x41372b
  4136d9:	push   ebp
  4136da:	fs icebp 
  4136dc:	mov    ch,0x80
  4136de:	in     eax,dx
  4136df:	pop    esp
  4136e0:	call   0xc4151910
  4136e5:	jne    0x4136b8
  4136e7:	retf   
  4136e8:	sahf   
  4136e9:	jb     0x41370f
  4136eb:	sar    edx,0x3a
  4136ee:	les    ebx,FWORD PTR [eax+0x5e97b7b]
  4136f4:	popa   
  4136f5:	mov    eax,0x2c2969fc
  4136fa:	das    
  4136fb:	out    0x70,eax
  4136fd:	inc    esp
  4136fe:	and    ecx,DWORD PTR [ecx+0x20bd8555]
  413704:	xchg   edx,eax
  413705:	(bad)  
  413706:	pushf  
  413707:	sbb    eax,DWORD PTR [ecx-0x2b46b4c6]
  41370d:	push   es
  41370e:	sbb    bh,BYTE PTR [esi+ecx*8-0x41d8b8e6]
  413715:	jmp    0x4136fb
  413717:	mov    ecx,DWORD PTR [esi-0x5d]
  41371a:	xchg   edi,eax
  41371b:	xchg   ebp,eax
  41371c:	lods   eax,DWORD PTR ds:[esi]
  41371d:	or     eax,0xb85407d8
  413722:	add    esp,DWORD PTR [edi+0x5d619177]
  413728:	inc    eax
  413729:	cmp    al,0xa7
  41372b:	cmp    DWORD PTR [ebp-0x4e809321],ebx
  413731:	add    esi,DWORD PTR [ebp+0x77608773]
  413737:	sbb    edi,DWORD PTR [esi+0x69db052e]
  41373d:	inc    esi
  41373e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41373f:	mov    dh,0x55
  413741:	and    BYTE PTR [ecx],bl
  413743:	mov    dh,0xff
  413745:	loope  0x41371f
  413747:	jno    0x413751
  413749:	xchg   esp,eax
  41374a:	or     eax,0x30722643
  41374f:	int    0xc4
  413751:	sbb    BYTE PTR [edi-0x1591f422],bl
  413757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413758:	fwait
  413759:	inc    esp
  41375a:	sbb    al,0x33
  41375c:	and    al,0x5c
  41375e:	(bad)  
  41375f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413760:	rcl    BYTE PTR [edi],0x1b
  413763:	mov    dl,0x9e
  413765:	push   0xffffffd7
  413767:	jne    0x41370b
  413769:	sbb    ch,BYTE PTR [eax-0x50]
  41376c:	loopne 0x4137c8
  41376e:	mov    ah,0x58
  413770:	add    dl,BYTE PTR [edi+0x5b]
  413773:	adc    ecx,DWORD PTR [esi]
  413775:	fnsave [esi]
  413777:	test   al,0xf9
  413779:	pop    esi
  41377a:	fadd   st,st(4)
  41377c:	aam    0x7f
  41377e:	mov    eax,ds:0xb9657516
  413783:	mov    dh,0x74
  413785:	mov    ds:0x570c0427,al
  41378a:	aas    
  41378b:	xchg   ebx,eax
  41378c:	call   0xe647:0xb3714dd2
  413793:	jg     0x4137dd
  413795:	adc    dh,BYTE PTR [ebx+0x203cf3ec]
  41379b:	sar    edi,1
  41379d:	add    eax,0x3ff2d796
  4137a2:	mov    ebp,0x98f907e
  4137a7:	outs   dx,DWORD PTR ds:[esi]
  4137a8:	dec    eax
  4137a9:	push   0xffffff9f
  4137ab:	add    eax,0x4029c843
  4137b0:	sub    DWORD PTR [eax-0xc],eax
  4137b3:	dec    esp
  4137b4:	test   DWORD PTR [ebp+0x49],esp
  4137b7:	sti    
  4137b8:	pop    ebp
  4137b9:	test   al,0xfb
  4137bb:	rcr    dh,0xe4
  4137be:	clc    
  4137bf:	sub    bl,BYTE PTR [edi+edx*2]
  4137c2:	mov    ch,BYTE PTR [ebx]
  4137c4:	add    BYTE PTR [ecx],ah
  4137c6:	outs   dx,DWORD PTR ds:[esi]
  4137c7:	xor    eax,DWORD PTR [ebp+0x8]
  4137ca:	mov    ds:0xc64e3e9,al
  4137cf:	jmp    0x18c3ae16
  4137d4:	stos   DWORD PTR es:[edi],eax
  4137d5:	into   
  4137d6:	adc    al,0x2c
  4137d8:	addr16 leave 
  4137da:	repz jns 0x413785
  4137dd:	xor    dl,dh
  4137df:	retf   0xec3d
  4137e2:	and    ebx,ebp
  4137e4:	fisttp QWORD PTR [eax-0x4d]
  4137e7:	add    BYTE PTR [eax+0x2f3cfed7],dl
  4137ed:	mov    cl,0x88
  4137ef:	enter  0xf241,0x86
  4137f3:	pop    ss
  4137f4:	mov    dh,0xa9
  4137f6:	loope  0x41378b
  4137f8:	push   esi
  4137f9:	arpl   WORD PTR [esi+0xd],dx
  4137fc:	sub    eax,0x9e6d0423
  413801:	aaa    
  413802:	fnstenv [ebx+0x16]
  413805:	cmp    eax,0x119b9e6a
  41380a:	jbe    0x4137ec
  41380c:	mov    ebp,0x53032170
  413811:	ficom  DWORD PTR [ecx]
  413813:	aad    0x13
  413815:	xlat   BYTE PTR ds:[ebx]
  413816:	stos   DWORD PTR es:[edi],eax
  413817:	cmc    
  413818:	jmp    0x3811:0xe9863466
  41381f:	push   edi
  413820:	xchg   esp,eax
  413821:	dec    esi
  413822:	in     al,dx
  413823:	adc    DWORD PTR [ebp+0x6e],ebp
  413826:	idiv   esp
  413828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413829:	xlat   BYTE PTR ds:[ebx]
  41382a:	and    DWORD PTR ds:0x533b274d,0xcb9a991b
  413834:	inc    edx
  413835:	lea    esp,[eax]
  413837:	lods   al,BYTE PTR ds:[esi]
  413838:	(bad)  
  413839:	repnz retf 
  41383b:	fmul   QWORD PTR [ecx]
  41383d:	sbb    esp,DWORD PTR [edx+0x63]
  413840:	in     al,0x5f
  413842:	mov    bl,0x7a
  413844:	pushf  
  413845:	hlt    
  413846:	fucom  st(5)
  413848:	mov    ebp,0xf6eac462
  41384d:	cmp    eax,0x16255baa
  413852:	aaa    
  413853:	inc    esp
  413854:	pop    ds
  413855:	into   
  413856:	jecxz  0x413884
  413858:	adc    esp,ebp
  41385a:	(bad)
  41385d:	(bad)  
  41385e:	sbb    DWORD PTR [eax+ebx*4],ecx
  413861:	stc    
  413862:	adc    dh,BYTE PTR [ebp+ebx*1+0x43f11694]
  413869:	mov    dh,0xac
  41386b:	es mov esp,0x2b16525c
  413871:	sbb    BYTE PTR [ebx],ah
  413873:	push   esp
  413874:	xchg   ecx,eax
  413875:	dec    esp
  413876:	cli    
  413877:	adc    ah,BYTE PTR [eax-0x6f]
  41387a:	test   eax,0x3c272e87
  41387f:	ficom  DWORD PTR gs:[eax-0x7b2d125a]
  413886:	(bad)  
  413887:	imul   ecx,DWORD PTR [ecx],0xffffff91
  41388a:	inc    ecx
  41388b:	sbb    al,0x2b
  41388d:	cld    
  41388e:	shr    BYTE PTR [esi+0x600188d7],0x40
  413895:	pop    ecx
  413896:	mov    edi,0x1bfb9766
  41389b:	or     ebx,esp
  41389d:	sbb    edx,DWORD PTR [ebx+ebx*8-0x150634d7]
  4138a4:	cmp    edi,ebx
  4138a6:	pop    ds
  4138a7:	rcl    dh,0xcd
  4138aa:	test   eax,edx
  4138ac:	jb     0x41383f
  4138ae:	and    al,0xab
  4138b0:	inc    esp
  4138b1:	sub    eax,0x95276c34
  4138b6:	xchg   esi,eax
  4138b7:	gs inc edx
  4138b9:	aas    
  4138ba:	xchg   ebp,eax
  4138bb:	xor    edx,DWORD PTR [ebx+0x13]
  4138be:	mov    bh,0xfd
  4138c0:	sbb    eax,0xcd49895d
  4138c5:	lods   al,BYTE PTR ds:[esi]
  4138c6:	or     DWORD PTR [ecx+0x18],edx
  4138c9:	cmp    al,0x3f
  4138cb:	push   cs
  4138cc:	out    0xea,al
  4138ce:	rol    BYTE PTR [edx+0x57],1
  4138d1:	(bad)  
  4138d2:	xchg   esp,eax
  4138d3:	adc    al,0x61
  4138d5:	dec    eax
  4138d6:	xlat   BYTE PTR ds:[ebx]
  4138d7:	imul   ecx,ebx,0x6ead37b8
  4138dd:	adc    BYTE PTR [edi],cl
  4138df:	jbe    0x4138aa
  4138e1:	icebp  
  4138e2:	pushf  
  4138e3:	popf   
  4138e4:	fstp   TBYTE PTR [ebp+0x26d361f4]
  4138ea:	rol    BYTE PTR [ebp+0x56],cl
  4138ed:	xor    eax,0x2dc90960
  4138f2:	js     0x413955
  4138f4:	push   eax
  4138f5:	loopne 0x41387d
  4138f7:	xchg   ebp,eax
  4138f8:	cmp    al,0x79
  4138fa:	add    BYTE PTR cs:[esi-0x77],0x0
  4138ff:	xor    ah,bl
  413901:	sub    edi,edx
  413903:	adc    DWORD PTR [edx],edi
  413905:	add    DWORD PTR [ecx+0xdbb211a],0xca69d2e7
  41390f:	inc    esi
  413910:	call   FWORD PTR [eax-0x744c6786]
  413916:	pop    esp
  413917:	and    BYTE PTR [eax-0x6d],0x56
  41391b:	fistp  DWORD PTR [ebx-0x5d]
  41391e:	add    DWORD PTR [esi+0x37],0xae634602
  413925:	pop    esi
  413926:	rcl    BYTE PTR [edi-0x5a23c883],1
  41392c:	cmp    al,0x79
  41392e:	fild   QWORD PTR [edi+0x34be3343]
  413934:	pop    esp
  413935:	xchg   esi,eax
  413936:	push   eax
  413937:	mov    edi,0x18f9bb10
  41393c:	call   DWORD PTR [ebx]
  41393e:	sar    DWORD PTR [ecx+0x72],0x87
  413942:	push   eax
  413943:	push   edx
  413944:	int    0x6d
  413946:	push   ds
  413947:	sti    
  413948:	ins    DWORD PTR es:[edi],dx
  413949:	cmp    DWORD PTR ds:[edx+0x40],esi
  41394d:	mov    dl,0x2f
  41394f:	and    ax,0xa4ad
  413953:	mov    bl,0x88
  413955:	ror    DWORD PTR [ebx],1
  413957:	shr    BYTE PTR [bp-0x44],cl
  41395b:	retf   0xa958
  41395e:	call   0xe8bb:0x9faf070b
  413965:	pop    ecx
  413966:	shr    DWORD PTR ds:0x2b6c6df7,1
  41396c:	fst    QWORD PTR [esi+0x65]
  41396f:	cmp    eax,DWORD PTR [eax+0x2e]
  413972:	xchg   ebp,eax
  413973:	pop    edx
  413974:	(bad)  
  413976:	inc    edx
  413977:	sbb    bl,bl
  413979:	push   0x97e2c7f5
  41397e:	(bad)  
  41397f:	and    BYTE PTR [ebp+0x56],bh
  413982:	add    DWORD PTR [ecx-0x10],esp
  413985:	test   al,0xca
  413987:	inc    edx
  413988:	push   ecx
  413989:	arpl   WORD PTR [edx+0x55fd9d33],si
  41398f:	dec    ebp
  413990:	inc    ebp
  413991:	adc    al,BYTE PTR [edx+0x237936c8]
  413997:	dec    DWORD PTR [eax-0x1cf547ff]
  41399d:	jae    0x413957
  41399f:	test   DWORD PTR [esi+eiz*8],0x9b374184
  4139a6:	scas   eax,DWORD PTR es:[edi]
  4139a7:	mov    al,0xad
  4139a9:	cmp    al,0xe2
  4139ab:	popf   
  4139ac:	xchg   ebp,eax
  4139ad:	repz jns 0x413949
  4139b0:	ins    DWORD PTR es:[edi],dx
  4139b1:	mov    ecx,0x39d1e5aa
  4139b6:	into   
  4139b7:	bound  edi,QWORD PTR [eax]
  4139b9:	repz int 0xdc
  4139bc:	and    BYTE PTR ds:0x7eeb4d78,bl
  4139c2:	cwde   
  4139c3:	sahf   
  4139c4:	and    eax,0x337bbf36
  4139c9:	sbb    DWORD PTR [edx+esi*4],ebx
  4139cc:	push   edx
  4139cd:	out    dx,eax
  4139ce:	push   edi
  4139cf:	mov    eax,0x7a44ecaf
  4139d4:	dec    edi
  4139d5:	pop    es
  4139d6:	jge    0x413a11
  4139d8:	ret    
  4139d9:	xchg   edx,eax
  4139da:	mov    bh,0xf9
  4139dc:	add    esp,DWORD PTR [ebx]
  4139de:	push   es
  4139df:	xchg   edx,eax
  4139e0:	leave  
  4139e1:	cmp    BYTE PTR [ebx+0x540eb9ef],dh
  4139e7:	repz inc esi
  4139e9:	mov    DWORD PTR [edx-0xf],ecx
  4139ec:	dec    ecx
  4139ed:	call   0xda1a:0x5923fb4b
  4139f4:	mov    dh,0xa2
  4139f6:	push   cs
  4139f7:	out    dx,eax
  4139f8:	pop    edx
  4139f9:	retf   0xd2c5
  4139fc:	cmp    BYTE PTR ss:[esi+edx*1+0x3f],0x86
  413a02:	lods   al,BYTE PTR ds:[esi]
  413a03:	mov    fs,WORD PTR [edi-0x45311532]
  413a09:	sub    DWORD PTR [edx],ecx
  413a0b:	outs   dx,DWORD PTR ds:[esi]
  413a0c:	xchg   BYTE PTR [edx],dl
  413a0e:	or     BYTE PTR [esp+edx*4+0x8db5865],dl
  413a15:	pop    ebp
  413a16:	sbb    dl,BYTE PTR [ebx]
  413a18:	and    ch,cl
  413a1a:	xchg   ecx,eax
  413a1b:	mov    ah,0xb2
  413a1d:	xchg   esi,eax
  413a1e:	jmp    0xca14055b
  413a23:	jne    0x413a44
  413a25:	int3   
  413a26:	mov    DWORD PTR [edi-0x5d],0xfb3d6c35
  413a2d:	std    
  413a2e:	push   cs
  413a2f:	cmp    DWORD PTR [eax+0x3a],ecx
  413a32:	jbe    0x413a28
  413a34:	idiv   BYTE PTR [eax+0x39]
  413a37:	adc    dh,bl
  413a39:	fxch   st(1)
  413a3b:	mov    ebp,0x90903e03
  413a40:	jg     0x413a9e
  413a42:	adc    al,0xf2
  413a44:	shl    BYTE PTR [edi],0x98
  413a47:	or     BYTE PTR [ebx],al
  413a49:	inc    edi
  413a4a:	adc    BYTE PTR [edx],cl
  413a4c:	jecxz  0x413a5a
  413a4e:	or     esi,eax
  413a50:	fwait
  413a51:	pop    ebp
  413a52:	pop    edi
  413a53:	in     al,dx
  413a54:	add    eax,0x9fccc26e
  413a59:	popa   
  413a5a:	fsub   QWORD PTR [esi+0x7368070e]
  413a60:	repz add DWORD PTR [edi+eiz*4-0x1d],0x56
  413a66:	fnstcw WORD PTR [ebx-0x3]
  413a69:	push   esp
  413a6a:	add    edx,DWORD PTR [esi-0x2ccf916]
  413a70:	daa    
  413a71:	cmc    
  413a72:	jmp    FWORD PTR [eax-0x14529e08]
  413a78:	mov    bl,0x49
  413a7a:	pop    ecx
  413a7b:	fisub  DWORD PTR [ecx-0xaf7345d]
  413a81:	in     eax,0x41
  413a83:	mov    dh,0x5b
  413a85:	sub    esp,DWORD PTR [ebp-0x7b]
  413a88:	xor    dh,BYTE PTR [ecx+0x69b49144]
  413a8e:	fadd   QWORD PTR ds:0x46eeab27
  413a94:	push   esi
  413a95:	pop    edi
  413a96:	or     ebp,ebx
  413a98:	js     0x413b03
  413a9a:	add    eax,0xd008c79c
  413a9f:	cmp    al,BYTE PTR fs:[ebx-0x32]
  413aa3:	push   eax
  413aa4:	jns    0x413a48
  413aa6:	xor    edx,DWORD PTR [edi+0x25]
  413aa9:	sub    DWORD PTR [eax],edi
  413aab:	adc    BYTE PTR [ecx-0x6],0xe1
  413aaf:	addr16 daa 
  413ab1:	sar    eax,0x3f
  413ab4:	and    al,0x67
  413ab6:	xchg   BYTE PTR ds:0x868266cb,dl
  413abc:	jge    0x413a9d
  413abe:	xchg   ecx,eax
  413abf:	repnz cmp eax,0x8a23d772
  413ac5:	in     al,dx
  413ac6:	push   ds
  413ac7:	lds    edi,FWORD PTR [eax]
  413ac9:	sbb    BYTE PTR [eax-0x73a20fef],dl
  413acf:	or     al,0x32
  413ad1:	or     al,0xd6
  413ad3:	in     al,dx
  413ad4:	dec    esp
  413ad5:	inc    esp
  413ad6:	pop    ds
  413ad7:	fnstsw WORD PTR ds:[esi+0x4d]
  413adb:	pop    esp
  413adc:	lods   al,BYTE PTR ds:[esi]
  413add:	mov    edx,0x795ceb8
  413ae2:	fldenv [esi+0x72]
  413ae5:	mov    ah,0xb6
  413ae7:	sbb    eax,0x8ddfecd9
  413aec:	inc    edi
  413aed:	mov    bh,0xf1
  413aef:	and    al,0xed
  413af1:	fs in  eax,0x5c
  413af4:	inc    eax
  413af5:	ds dec eax
  413af7:	sub    DWORD PTR [ebp+0x2c],0x31bbab1e
  413afe:	das    
  413aff:	pop    eax
  413b00:	mov    ebp,0xc681bbe5
  413b05:	cmp    al,0x4e
  413b07:	loopne 0x413aa0
  413b09:	xchg   ebp,eax
  413b0a:	inc    edi
  413b0b:	aaa    
  413b0c:	shr    BYTE PTR ss:[eax+ecx*1-0x63],cl
  413b11:	push   cs
  413b12:	imul   esp,DWORD PTR [eax-0xada1a8e],0xffffffd2
  413b19:	std    
  413b1a:	pop    edi
  413b1b:	or     al,0xe2
  413b1d:	adc    bh,BYTE PTR ds:0x273f28b9
  413b23:	cmp    bh,BYTE PTR [ebx]
  413b25:	pop    edx
  413b26:	(bad)  [edi-0x1123d8ab]
  413b2c:	fwait
  413b2d:	jns    0x413abe
  413b2f:	push   edx
  413b30:	mov    esi,0x9152abde
  413b35:	cmp    ecx,edi
  413b37:	test   eax,0x75f09429
  413b3c:	(bad)  
  413b3d:	scas   al,BYTE PTR es:[edi]
  413b3e:	out    dx,eax
  413b3f:	jmp    0xbab4db7c
  413b44:	stos   BYTE PTR es:[edi],al
  413b45:	enter  0xd20e,0x16
  413b49:	aas    
  413b4a:	jnp    0x413b8b
  413b4c:	jno    0x413b16
  413b4e:	adc    al,BYTE PTR [edx]
  413b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b52:	push   esp
  413b53:	(bad)  
  413b54:	stos   BYTE PTR es:[edi],al
  413b55:	popa   
  413b56:	in     al,0x1e
  413b58:	cli    
  413b59:	or     eax,0xbf3ccb95
  413b5e:	mov    esi,0x39fb3c60
  413b63:	add    ebp,DWORD PTR ds:0xc624e1a6
  413b69:	icebp  
  413b6a:	popa   
  413b6b:	dec    edi
  413b6c:	add    bh,BYTE PTR [edi]
  413b6e:	sub    eax,0x4ec43bf7
  413b73:	int3   
  413b74:	mov    ch,BYTE PTR [ebp-0x2b]
  413b77:	inc    esi
  413b78:	mov    dl,0xcc
  413b7a:	stc    
  413b7b:	pop    ebx
  413b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b7d:	cmp    dh,BYTE PTR [ebx+0x6]
  413b80:	retf   0xb439
  413b83:	sbb    DWORD PTR [ecx],ebx
  413b85:	inc    ebp
  413b86:	cld    
  413b87:	in     eax,dx
  413b88:	es retf 
  413b8a:	sbb    al,0x9d
  413b8c:	sub    bl,BYTE PTR [edi]
  413b8e:	outs   dx,DWORD PTR ds:[esi]
  413b8f:	sbb    al,0x32
  413b91:	and    ebx,esi
  413b93:	nop
  413b94:	arpl   cx,bx
  413b96:	daa    
  413b97:	cld    
  413b98:	fsubr  DWORD PTR ds:0xc56a678d
  413b9e:	mov    edx,0x4e762c9
  413ba3:	push   ds
  413ba4:	push   ecx
  413ba5:	xchg   ecx,eax
  413ba6:	ficomp WORD PTR [ebp+ecx*1-0x62]
  413baa:	inc    ebp
  413bab:	outs   dx,DWORD PTR ds:[esi]
  413bac:	dec    eax
  413bad:	rol    DWORD PTR [edx+eiz*2-0x43f59d61],1
  413bb4:	and    DWORD PTR [ecx+0x31],0xfffffff7
  413bb8:	(bad)  
  413bb9:	cdq    
  413bba:	lock loopne 0x413b55
  413bbd:	mov    ds:0xadcbbc9e,al
  413bc2:	dec    esi
  413bc3:	xchg   BYTE PTR [edi-0x6],ah
  413bc6:	loope  0x413ba0
  413bc8:	push   edx
  413bc9:	dec    ebx
  413bca:	lea    ebx,[esi]
  413bcc:	lea    ebp,[ebp+0x1cc09f7]
  413bd2:	repz scas al,BYTE PTR es:[edi]
  413bd4:	lods   al,BYTE PTR ds:[esi]
  413bd5:	inc    edi
  413bd6:	or     edx,esp
  413bd8:	and    ah,BYTE PTR [edi-0x17c237ae]
  413bde:	imul   esp,DWORD PTR [ecx+0x7203acd1],0xac5fc3b6
  413be8:	mov    eax,ds:0x36e71370
  413bed:	test   ah,ch
  413bef:	or     BYTE PTR [edi+0x41ddd0c6],ah
  413bf5:	sub    eax,0x2deb620a
  413bfa:	push   cs
  413bfb:	sar    BYTE PTR [esi],cl
  413bfd:	xchg   ebp,eax
  413bfe:	xor    ebx,DWORD PTR [edx]
  413c00:	push   ds
  413c01:	jge    0x413c20
  413c03:	jbe    0x413c6f
  413c05:	adc    al,0x92
  413c07:	add    BYTE PTR [ebp+0x3e37ba47],dl
  413c0d:	mov    dh,0x6
  413c0f:	(bad)  
  413c10:	int3   
  413c11:	arpl   WORD PTR [esi+0x5625395c],cx
  413c17:	push   ebp
  413c18:	ror    ebp,0xa
  413c1b:	adc    eax,0x83233926
  413c20:	pop    ebp
  413c21:	add    BYTE PTR [edx],ch
  413c23:	cmp    BYTE PTR [ebx],dh
  413c25:	push   ebx
  413c26:	and    DWORD PTR [esi+eax*1-0x4db67e75],esi
  413c2d:	mov    ah,0x9e
  413c2f:	dec    esi
  413c30:	pushf  
  413c31:	push   es
  413c32:	cmp    eax,0x9fe89d02
  413c37:	jae    0x413c1a
  413c39:	mov    al,0x22
  413c3b:	add    BYTE PTR [edi-0x5],bh
  413c3e:	ficomp DWORD PTR [ebx]
  413c40:	dec    edx
  413c41:	cli    
  413c42:	ja     0x413cb0
  413c44:	lds    ecx,FWORD PTR [ebx]
  413c46:	push   0xed18e023
  413c4b:	mov    eax,ds:0xd952a97c
  413c50:	(bad)  
  413c51:	mov    esi,0x2c6c5e5
  413c56:	jle    0x413c9a
  413c58:	aaa    
  413c59:	std    
  413c5a:	retf   0x45b7
  413c5d:	add    eax,0x34a5fe92
  413c62:	sub    DWORD PTR [ecx],eax
  413c64:	dec    esi
  413c65:	(bad)  
  413c66:	jnp    0x413c71
  413c68:	or     DWORD PTR [eax],ebp
  413c6a:	cmp    al,dl
  413c6c:	int    0x66
  413c6e:	leave  
  413c6f:	sbb    cl,BYTE PTR [edi]
  413c71:	xor    eax,0x917050fb
  413c76:	cmp    edx,DWORD PTR [esi+0x27]
  413c79:	xor    BYTE PTR [ecx-0x1b],al
  413c7c:	rcl    al,cl
  413c7e:	mov    BYTE PTR [edx],bh
  413c80:	mov    ah,dh
  413c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c83:	cdq    
  413c84:	ja     0x413c40
  413c86:	sub    DWORD PTR [eax+0x52092cec],esp
  413c8c:	mov    esi,0x6a52f644
  413c91:	cld    
  413c92:	fldenv [ebx-0x14bb57c9]
  413c98:	cmp    ebx,DWORD PTR [ebx-0x787e4a7e]
  413c9e:	cmp    ebx,esi
  413ca0:	loopne 0x413cdd
  413ca2:	push   ds
  413ca3:	mov    DWORD PTR [ebx-0x5e1146c9],edx
  413ca9:	push   edi
  413caa:	ins    DWORD PTR es:[edi],dx
  413cab:	int3   
  413cac:	mov    BYTE PTR [ecx],0x60
  413caf:	mov    ecx,0xfd81a185
  413cb4:	or     dh,BYTE PTR [ebx+0x646f2767]
  413cba:	(bad)  
  413cbb:	fdiv   DWORD PTR [eax+0x9467ea3]
  413cc1:	arpl   WORD PTR [eax-0x9],bp
  413cc4:	in     eax,dx
  413cc5:	mov    ah,0x33
  413cc7:	cld    
  413cc8:	stos   DWORD PTR es:[edi],eax
  413cc9:	dec    edx
  413cca:	les    eax,FWORD PTR [edi-0x3a225481]
  413cd0:	pushf  
  413cd1:	cmp    DWORD PTR [edx],ecx
  413cd3:	jbe    0x413cb1
  413cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cd6:	mov    DWORD PTR [edx+ebx*8],ebp
  413cd9:	pop    esi
  413cda:	sbb    ebx,ecx
  413cdc:	xchg   esp,eax
  413cdd:	loop   0x413d3a
  413cdf:	jl     0x413c7c
  413ce1:	int3   
  413ce2:	adc    edi,DWORD PTR [ecx+ebx*1+0x12]
  413ce6:	(bad)
  413cea:	add    eax,0xffffffcf
  413ced:	daa    
  413cee:	pop    esi
  413cef:	jns    0x413c92
  413cf1:	and    dl,dh
  413cf3:	mov    ebp,DWORD PTR [ebx]
  413cf5:	push   edi
  413cf6:	nop
  413cf7:	hlt    
  413cf8:	call   0x275e2db3
  413cfd:	inc    ebp
  413cfe:	sub    eax,0x9dca36f9
  413d03:	repz inc esi
  413d05:	and    DWORD PTR [edi+0x78f5b1cb],0xffffff91
  413d0c:	adc    BYTE PTR [ecx],al
  413d0e:	in     al,dx
  413d0f:	lock rcl DWORD PTR [ebx-0x2f518ff7],cl
  413d16:	es adc ebp,esi
  413d19:	and    DWORD PTR [eax-0x3f4cf387],0x60bda294
  413d23:	inc    eax
  413d24:	jl     0x413d95
  413d26:	sub    ebp,DWORD PTR [ebx-0x29]
  413d29:	add    cl,bl
  413d2b:	push   es
  413d2c:	in     eax,0x24
  413d2e:	or     bh,BYTE PTR [edi+edi*4-0x3e]
  413d32:	out    dx,eax
  413d33:	or     bh,cl
  413d35:	in     eax,dx
  413d36:	dec    eax
  413d37:	fild   WORD PTR [eax-0x53c09b23]
  413d3d:	and    DWORD PTR [ecx-0x25],eax
  413d40:	push   ds
  413d41:	out    dx,al
  413d42:	jmp    0x4761:0x97430a25
  413d49:	dec    esi
  413d4a:	cmp    DWORD PTR [bx],eax
  413d4d:	xchg   edx,eax
  413d4e:	pop    eax
  413d4f:	xchg   edx,eax
  413d50:	mov    ds:0x89e27b3b,eax
  413d55:	mov    ds:0xc2ba879d,eax
  413d5a:	in     eax,dx
  413d5b:	cmp    eax,0x26474ea8
  413d60:	pusha  
  413d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d62:	adc    eax,0x91e87ad
  413d67:	mov    al,ds:0x21168f36
  413d6c:	add    DWORD PTR [ebp+0x77],ebx
  413d6f:	jb     0x413da9
  413d71:	push   esp
  413d72:	push   esi
  413d73:	sub    ebx,ebx
  413d75:	icebp  
  413d76:	outs   dx,DWORD PTR ds:[esi]
  413d77:	jge    0x413d65
  413d79:	push   edi
  413d7a:	cmp    al,0xae
  413d7d:	pop    ebx
  413d7e:	mov    ebp,0xcc8d0598
  413d83:	repz inc eax
  413d85:	into   
  413d86:	cs push esi
  413d88:	(bad)  
  413d89:	stos   DWORD PTR es:[edi],eax
  413d8a:	es jp  0x413d7b
  413d8d:	es or  BYTE PTR es:[eax],cl
  413d91:	test   BYTE PTR [ebx],cl
  413d93:	ins    DWORD PTR es:[edi],dx
  413d94:	jmp    0x3850:0x70c9627c
  413d9b:	addr16 dec ebp
  413d9d:	popa   
  413d9e:	es sub al,0xbc
  413da1:	jmp    0xae49:0x4ecf5f64
  413da8:	xchg   dl,ch
  413daa:	imul   BYTE PTR [ecx+0x28a2d076]
  413db0:	xchg   ecx,eax
  413db1:	(bad)  
  413db2:	stos   BYTE PTR es:[edi],al
  413db3:	sar    BYTE PTR [ebx-0x67],1
  413db6:	aad    0xb0
  413db8:	mov    ch,0x1f
  413dba:	(bad)  
  413dbb:	clc    
  413dbc:	push   edi
  413dbd:	jo     0x413daa
  413dbf:	pop    ds
  413dc0:	icebp  
  413dc1:	(bad)  [esi-0x9b47535]
  413dc7:	enter  0x8edf,0xb5
  413dcb:	jo     0x413d91
  413dcd:	xchg   DWORD PTR [ebp-0x1da3d056],eax
  413dd3:	mov    al,ds:0x277cf9d4
  413dd8:	into   
  413dd9:	xchg   ecx,eax
  413dda:	or     eax,esi
  413ddc:	pop    ebp
  413ddd:	(bad)  
  413dde:	ins    BYTE PTR es:[edi],dx
  413ddf:	add    DWORD PTR [eax],ebx
  413de1:	push   ecx
  413de2:	mov    ebp,0x185d384c
  413de7:	push   ecx
  413de8:	mov    DWORD PTR [ecx],ebx
  413dea:	pop    ebx
  413deb:	test   al,0xff
  413ded:	jmp    0xe6ce:0x39d21c4d
  413df4:	or     ch,BYTE PTR [esi+0x38]
  413df7:	hlt    
  413df8:	pop    ss
  413df9:	jae    0x413da5
  413dfb:	push   eax
  413dfc:	rcr    ebx,1
  413dfe:	mov    al,0x22
  413e00:	sbb    eax,0x4737136c
  413e05:	jmp    0x413e65
  413e07:	jnp    0x413db3
  413e09:	dec    esp
  413e0a:	adc    esi,DWORD PTR [edi+0x36]
  413e0d:	sahf   
  413e0e:	adc    DWORD PTR [esi-0x37cdf627],esi
  413e14:	xlat   BYTE PTR ds:[ebx]
  413e15:	mov    es,WORD PTR [ebx+0x2ddfabe2]
  413e1b:	push   ebp
  413e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e1d:	inc    ecx
  413e1e:	sbb    al,0x1d
  413e20:	sub    eax,0xb90733fa
  413e25:	pushf  
  413e26:	frstor [esi+0x5164d71b]
  413e2c:	inc    edx
  413e2d:	rol    DWORD PTR [ebp-0x29eec727],0xbf
  413e34:	cwde   
  413e35:	push   ebp
  413e36:	(bad)  
  413e37:	lods   eax,DWORD PTR ds:[esi]
  413e38:	outs   dx,DWORD PTR ds:[esi]
  413e39:	mov    bl,0xd0
  413e3b:	fldln2 
  413e3d:	dec    edi
  413e3e:	jo     0x413e6b
  413e40:	push   ebp
  413e41:	sbb    edi,DWORD PTR [ebx]
  413e43:	stos   BYTE PTR es:[edi],al
  413e44:	dec    esi
  413e45:	fidiv  WORD PTR [esi-0x3e]
  413e48:	lea    ebx,[ebp*4+0x354346ca]
  413e4f:	pop    ds
  413e50:	ja     0x413ead
  413e52:	sbb    esi,DWORD PTR [edi+0x5ea39f7c]
  413e58:	fcmove st,st(0)
  413e5a:	(bad)  
  413e5b:	xor    ch,ch
  413e5d:	imul   ebx,DWORD PTR ds:0x1a33e76d,0x118d3071
  413e67:	mov    cl,0x4e
  413e69:	or     al,0xf4
  413e6c:	addr16 dec edx
  413e6e:	test   DWORD PTR [ebp-0x20],esp
  413e71:	adc    DWORD PTR [edx+0x40a8d9e8],0xffffffa0
  413e78:	inc    eax
  413e79:	rol    cl,1
  413e7b:	sbb    al,0x8d
  413e7d:	mov    cl,0x7e
  413e7f:	aam    0x7c
  413e81:	cmc    
  413e82:	in     al,dx
  413e83:	mov    DWORD PTR [edi+0x23],ebx
  413e86:	(bad)  
  413e87:	sti    
  413e88:	jns    0x413ee1
  413e8a:	ins    DWORD PTR es:[edi],dx
  413e8b:	fwait
  413e8c:	adc    eax,0x4adbc4c2
  413e91:	dec    eax
  413e92:	aaa    
  413e93:	push   0xcaededc4
  413e98:	aad    0xb5
  413e9a:	jo     0x413f17
  413e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e9d:	bndldx (bad),[ecx]
  413ea0:	cmc    
  413ea1:	stc    
  413ea2:	mov    ch,0x22
  413ea4:	jg     0x413e31
  413ea6:	push   cs
  413ea7:	inc    ecx
  413ea8:	sahf   
  413ea9:	lahf   
  413eaa:	mov    eax,0x4069a9d9
  413eaf:	fwait
  413eb0:	loopne 0x413e64
  413eb2:	fist   WORD PTR [eax-0x197a12e6]
  413eb8:	mov    esi,0xd2ce9f92
  413ebd:	jg     0x413f01
  413ebf:	pop    ebx
  413ec0:	mov    ds:0x903d832c,al
  413ec5:	fist   WORD PTR [esi+ebp*1-0x3b8a211d]
  413ecc:	mov    bh,bh
  413ece:	int    0x41
  413ed0:	mov    esi,0xee7732d4
  413ed5:	jb     0x413ea9
  413ed7:	outs   dx,BYTE PTR ds:[esi]
  413ed8:	ins    BYTE PTR es:[edi],dx
  413ed9:	sub    BYTE PTR [edi-0x62],al
  413edc:	mov    esi,0x3ce7672f
  413ee1:	cld    
  413ee2:	sahf   
  413ee3:	lods   eax,DWORD PTR ds:[esi]
  413ee4:	xchg   esi,eax
  413ee5:	cmp    eax,0x47f6b8d5
  413eea:	leave  
  413eeb:	jb     0x413ef0
  413eed:	pushf  
  413eee:	mov    BYTE PTR [ebp-0x1b],bl
  413ef1:	jnp    0x413ea4
  413ef3:	ret    
  413ef4:	pop    esi
  413ef5:	pop    edx
  413ef6:	jae    0x413eb2
  413ef8:	mov    cl,0x49
  413efa:	retf   
  413efb:	and    ebx,edi
  413efd:	jl     0x413e90
  413eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f00:	sbb    BYTE PTR [edx+0x7],al
  413f03:	push   0x96ebc47f
  413f08:	pop    esi
  413f09:	mov    edi,0x62b2f00d
  413f0e:	or     eax,0x3248360c
  413f13:	adc    al,0x87
  413f15:	fisub  WORD PTR [esi+edi*4]
  413f18:	pop    esp
  413f19:	call   0x3508:0x8203e2ec
  413f20:	sub    dl,cl
  413f22:	xlat   BYTE PTR ds:[ebx]
  413f23:	push   ecx
  413f24:	cwde   
  413f25:	rcl    BYTE PTR fs:[edi-0x14],1
  413f29:	into   
  413f2a:	sbb    eax,0x92e933c9
  413f2f:	enter  0xf9c4,0x0
  413f33:	mov    esp,0x4e30b96e
  413f38:	mul    BYTE PTR [ecx]
  413f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f3b:	mov    ah,0x4e
  413f3d:	div    BYTE PTR [edx+0x757ccb59]
  413f43:	loop   0x413ef7
  413f45:	in     eax,0x75
  413f47:	hlt    
  413f48:	data16 adc BYTE PTR [esi-0x13],dl
  413f4c:	and    BYTE PTR [eax+0x194f8ff6],al
  413f52:	and    bh,cl
  413f54:	jns    0x413f4f
  413f56:	out    dx,eax
  413f57:	cld    
  413f58:	jns    0x413f1e
  413f5a:	stos   DWORD PTR es:[edi],eax
  413f5b:	or     edx,0xe9891b91
  413f61:	xchg   esp,eax
  413f62:	adc    ebx,DWORD PTR [ecx-0x54f49e0f]
  413f68:	les    eax,FWORD PTR [ebx+0x17]
  413f6b:	inc    ebp
  413f6c:	or     DWORD PTR ds:0x5212bc6e,edi
  413f72:	test   BYTE PTR [edx],bl
  413f74:	mov    bl,0xc
  413f76:	cmp    eax,edx
  413f78:	jecxz  0x413f89
  413f7a:	fadd   DWORD PTR [ebp+0x66]
  413f7d:	int3   
  413f7e:	ret    
  413f7f:	fcomi  st,st(4)
  413f81:	nop
  413f82:	arpl   WORD PTR [ebx],ax
  413f84:	pop    es
  413f85:	lock mov bh,0x7d
  413f88:	mov    edx,0xce456039
  413f8d:	outs   dx,DWORD PTR ds:[esi]
  413f8e:	jae    0x413f6f
  413f90:	mov    dl,0x7e
  413f92:	push   esp
  413f94:	push   cs
  413f95:	push   ebx
  413f96:	das    
  413f97:	popa   
  413f98:	imul   ebp,DWORD PTR [eax+0x5f89e977],0x19d76996
  413fa2:	cli    
  413fa3:	add    bh,BYTE PTR [ebx+0xd989827]
  413fa9:	int    0x56
  413fab:	imul   ebx,DWORD PTR [ecx+ecx*4-0x1f298d8b],0xfffffffb
  413fb3:	mov    al,0x3
  413fb5:	outs   dx,BYTE PTR ds:[esi]
  413fb6:	mov    ebp,eax
  413fb8:	jmp    0x413ff2
  413fba:	adc    ch,BYTE PTR [eax-0x25]
  413fbd:	int    0x35
  413fbf:	mov    edx,0x56650d21
  413fc4:	imul   eax,DWORD PTR [ebx+0x68],0x76
  413fc8:	(bad)  
  413fc9:	and    eax,0xa40fd854
  413fce:	mov    eax,ds:0x25a81272
  413fd3:	jmp    0x414001
  413fd5:	dec    edx
  413fd6:	sub    ecx,eax
  413fd8:	scas   al,BYTE PTR es:[edi]
  413fd9:	add    esi,eax
  413fdb:	pop    esi
  413fdc:	mov    dh,0x73
  413fde:	pop    ecx
  413fdf:	fwait
  413fe0:	ds nop
  413fe2:	mov    ch,0x79
  413fe4:	cmp    DWORD PTR [edi-0x5b],ecx
  413fe7:	adc    bh,al
  413fe9:	cwde   
  413fea:	loop   0x413f75
  413fec:	pop    edx
  413fed:	rol    DWORD PTR [esi],0x3d
  413ff0:	mov    esi,0xa6d8f7b2
  413ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ff6:	xor    ch,BYTE PTR [ebp+ecx*1+0x3b]
  413ffa:	mov    cl,0x3b
  413ffc:	clc    
  413ffd:	or     ecx,DWORD PTR [edi-0x74]
  414000:	jns    0x414022
  414002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414003:	push   ss
  414004:	dec    edx
  414005:	fld    QWORD PTR [edx-0x22]
  414008:	ins    DWORD PTR es:[edi],dx
  414009:	mov    ss,WORD PTR [ecx]
  41400b:	(bad)  [esi-0xd1af3c6]
  414011:	add    ebp,DWORD PTR [ebp+ecx*8-0x18]
  414015:	call   0xf3e9:0x140f86ba
  41401c:	out    dx,eax
  41401d:	and    al,0xb0
  41401f:	(bad)  
  414020:	ja     0x413fe3
  414022:	lahf   
  414023:	jb     0x41400b
  414025:	inc    ecx
  414026:	das    
  414027:	lea    ebp,[eax+0x37f514bf]
  41402d:	dec    ebx
  41402e:	stos   BYTE PTR es:[edi],al
  41402f:	js     0x414084
  414031:	fdivr  QWORD PTR [ecx+0x45]
  414034:	cwde   
  414035:	in     eax,0x92
  414037:	rcl    DWORD PTR [eax],cl
  414039:	test   al,0x2e
  41403b:	jmp    0x18360692
  414040:	(bad)  
  414041:	fcom   st(2)
  414043:	lods   al,BYTE PTR ds:[esi]
  414044:	xchg   esi,eax
  414045:	push   cs
  414046:	mov    cl,0x50
  414048:	add    eax,0x74089272
  41404d:	clc    
  41404e:	icebp  
  41404f:	icebp  
  414050:	pop    esp
  414051:	enter  0xc430,0x94
  414055:	pop    ebx
  414056:	inc    esp
  414057:	cmp    al,BYTE PTR [edi+0x6452dcc5]
  41405d:	add    al,BYTE PTR [eax]
  41405f:	lock pop ebx
  414061:	adc    DWORD PTR [esi+0x45d77ac],0x71ae8fc6
  41406b:	lock and eax,0x2c03a3ae
  414071:	mov    WORD PTR [ebp+0x5e],cs
  414074:	sbb    al,0xa7
  414076:	cmp    esi,ecx
  414078:	adc    DWORD PTR [eax-0x33aaa43a],esp
  41407e:	mov    bh,0x30
  414080:	dec    eax
  414081:	cld    
  414082:	sub    eax,0xc3661097
  414087:	adc    esi,DWORD PTR [esi-0x44]
  41408a:	stc    
  41408b:	add    DWORD PTR [ebp+eax*4-0x3702421d],ecx
  414092:	sbb    BYTE PTR [ebx+0x51],cl
  414095:	ins    DWORD PTR es:[edi],dx
  414096:	stos   BYTE PTR es:[edi],al
  414097:	or     BYTE PTR [edx-0x4eddeacd],dh
  41409d:	imul   ebx,DWORD PTR ds:0x3a03636a,0xb1a0769c
  4140a7:	pusha  
  4140a8:	sbb    eax,0x50494b05
  4140ad:	fdiv   DWORD PTR ds:0x5ea526c2
  4140b3:	add    al,BYTE PTR [edx]
  4140b5:	jns    0x4140d0
  4140b7:	fcom   QWORD PTR [edi+0x2603a62a]
  4140bd:	mov    ecx,0x69c46d3c
  4140c2:	push   eax
  4140c3:	out    dx,eax
  4140c4:	sub    ecx,ecx
  4140c6:	adc    BYTE PTR [esi-0x2f88bb46],ah
  4140cc:	adc    eax,edx
  4140ce:	mov    ecx,0x3150af43
  4140d3:	dec    edx
  4140d4:	xor    ecx,DWORD PTR [eax+0x26]
  4140d7:	mov    ecx,0x76bfdff9
  4140dc:	les    ecx,FWORD PTR [ebp-0x56]
  4140df:	mov    al,ds:0x6407395e
  4140e4:	scas   eax,DWORD PTR es:[edi]
  4140e5:	inc    ebx
  4140e6:	rcl    DWORD PTR [edi-0x4e],0xfd
  4140ea:	sbb    ecx,esp
  4140ec:	mov    WORD PTR [eax],?
  4140ee:	adc    ecx,DWORD PTR [ebp-0x64c1ce86]
  4140f4:	push   ebx
  4140f5:	push   ebp
  4140f6:	cld    
  4140f7:	inc    esi
  4140f8:	loopne 0x4140e5
  4140fa:	mov    al,ds:0x4087e291
  4140ff:	xchg   ebp,eax
  414100:	iret   
  414101:	push   0xffffffbd
  414103:	cmp    esp,esi
  414105:	call   0x8aab5f50
  41410a:	pop    esp
  41410b:	leave  
  41410c:	or     eax,edi
  41410e:	sub    BYTE PTR [esi-0x3c5f697],bh
  414114:	cmp    WORD PTR [esi],bx
  414117:	push   0x49
  414119:	js     0x41417e
  41411b:	adc    ch,dh
  41411d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411f:	popa   
  414120:	mov    edi,0x487e39d0
  414125:	jno    0x41414e
  414127:	cmp    dh,bl
  414129:	fcomp  QWORD PTR [edx]
  41412b:	dec    ebp
  41412c:	jae    0x41417c
  41412e:	lds    eax,FWORD PTR [esi+edi*2]
  414131:	or     dh,cl
  414133:	scas   eax,DWORD PTR es:[edi]
  414134:	jbe    0x41418e
  414136:	sub    ebp,DWORD PTR [ebx]
  414138:	or     al,0x33
  41413a:	dec    eax
  41413c:	push   ecx
  41413d:	cmp    DWORD PTR [eax-0x7bb4bb98],edi
  414143:	sbb    edx,0x6e
  414146:	xor    DWORD PTR [esi-0x7ca9b87d],esi
  41414c:	clc    
  41414d:	sub    dh,BYTE PTR [ecx+eax*8-0x4b96465f]
  414154:	call   0x6d838ff3
  414159:	push   ss
  41415a:	inc    BYTE PTR [eax-0x6]
  41415d:	xchg   ebx,eax
  41415e:	fcom   QWORD PTR [edi-0x7065fc20]
  414164:	data16 (bad) 
  414166:	in     eax,dx
  414167:	mov    bh,BYTE PTR [ebp+0xbf3ed67]
  41416d:	popf   
  41416e:	push   ebx
  41416f:	fmul   st(7),st
  414171:	mov    ds,WORD PTR [esi]
  414173:	xchg   esp,eax
  414174:	out    0x66,eax
  414176:	das    
  414177:	out    0xa7,eax
  414179:	pop    es
  41417a:	ror    BYTE PTR [eax+0x49],0x46
  41417e:	not    dl
  414180:	pop    eax
  414181:	dec    edx
  414182:	xchg   edi,eax
  414183:	xor    al,BYTE PTR [ecx+0x4d]
  414186:	stos   BYTE PTR es:[edi],al
  414187:	add    BYTE PTR [eax+0x7],al
  41418a:	sub    al,0x1d
  41418c:	push   esi
  41418d:	mov    cl,0x2a
  41418f:	pop    eax
  414190:	nop/reserved BYTE PTR [edi+0x60]
  414194:	cdq    
  414195:	mov    esp,0x8dc5bfa9
  41419a:	js     0x414185
  41419c:	add    ah,BYTE PTR [ecx-0xb]
  41419f:	add    eax,0x1848eace
  4141a4:	leave  
  4141a5:	cwde   
  4141a6:	std    
  4141a7:	dec    ebx
  4141a8:	pop    eax
  4141a9:	or     al,0xf
  4141ab:	enter  0x252,0xb5
  4141af:	lds    esi,FWORD PTR [eax+0x45]
  4141b2:	arpl   WORD PTR [ebp+ebp*8+0x1518116b],di
  4141b9:	fisttp DWORD PTR [esi]
  4141bb:	jle    0x414153
  4141bd:	les    ebp,FWORD PTR [esi-0x67e0c0d0]
  4141c3:	cmc    
  4141c4:	sub    esp,0xffffffa8
  4141c7:	xchg   ecx,eax
  4141c8:	lahf   
  4141c9:	jmp    0x1cb8:0x5cf2a616
  4141d0:	pusha  
  4141d1:	xlat   BYTE PTR ds:[ebx]
  4141d2:	mov    ds:0x6e8d85e9,al
  4141d7:	dec    ebx
  4141d8:	pop    ebx
  4141d9:	xchg   ebp,eax
  4141da:	test   al,0x68
  4141dc:	inc    ecx
  4141dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141de:	call   0x43f:0xc2cebcc3
  4141e5:	xor    al,BYTE PTR ds:0xf5d9438e
  4141eb:	sbb    DWORD PTR [ebx],edx
  4141ed:	dec    ebx
  4141ee:	pop    es
  4141ef:	fisub  DWORD PTR [ecx+0x162fa849]
  4141f5:	js     0x4141ba
  4141f7:	sub    al,0x30
  4141f9:	and    DWORD PTR [edx-0x45c067f2],esi
  4141ff:	push   ebx
  414200:	js     0x4141fe
  414202:	pop    ecx
  414203:	aad    0x47
  414205:	outs   dx,DWORD PTR ds:[esi]
  414206:	xchg   bh,ch
  414208:	dec    ebx
  414209:	mov    bh,0xd9
  41420b:	ret    0xfb78
  41420e:	dec    edi
  41420f:	adc    DWORD PTR [edi-0xbdf6103],0x9b4ba16c
  414219:	fnsave [edx-0x2b29356]
  41421f:	js     0x4141f1
  414221:	shl    edi,cl
  414223:	lds    edi,FWORD PTR [ecx-0x51af5fbd]
  414229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41422a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41422b:	mov    eax,ds:0x60e76fa2
  414230:	fdivr  QWORD PTR [edx]
  414232:	cmp    eax,0x105fa292
  414237:	test   BYTE PTR [edx+0xa3633d0],bh
  41423d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41423e:	sahf   
  41423f:	mov    fs,WORD PTR [ecx+0x1b]
  414242:	xchg   ebx,eax
  414243:	aam    0xfd
  414245:	loope  0x414231
  414247:	repz or eax,0x807bced1
  41424d:	daa    
  41424e:	pop    ecx
  41424f:	adc    eax,0x78661b83
  414254:	fiadd  WORD PTR [esi]
  414256:	imul   esi,DWORD PTR [esi-0x3ee0b766],0x5ae3e690
  414260:	add    al,0x8a
  414262:	pop    esi
  414263:	test   al,0xeb
  414265:	sahf   
  414266:	adc    bl,BYTE PTR [eax-0x524a4e1a]
  41426c:	mov    ah,0x90
  41426e:	adc    eax,0x2fba8dec
  414273:	pop    edi
  414274:	int    0x67
  414276:	push   ds
  414277:	ret    
  414278:	cmp    eax,0xa3337171
  41427d:	popa   
  41427e:	adc    al,0x3
  414280:	xchg   edi,eax
  414281:	lock jae 0x414282
  414284:	xchg   ebx,eax
  414285:	test   BYTE PTR [ecx+0x41],bh
  414288:	cdq    
  414289:	retf   
  41428a:	xchg   edi,eax
  41428b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41428c:	sbb    eax,0x90393188
  414291:	mov    eax,ds:0x500ff5a1
  414296:	stos   BYTE PTR es:[edi],al
  414297:	fld    TBYTE PTR [esi+0x8]
  41429a:	xor    edx,DWORD PTR [edi+0x3ebbe3a]
  4142a0:	sub    al,BYTE PTR [edx+eiz*4-0x8e22907]
  4142a7:	les    ecx,FWORD PTR [ebp-0xbcfc3dd]
  4142ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142ae:	gs out dx,eax
  4142b0:	js     0x4142ca
  4142b2:	inc    eax
  4142b3:	cmp    al,0x84
  4142b5:	in     eax,0x83
  4142b7:	(bad)  
  4142b9:	inc    edi
  4142ba:	test   BYTE PTR ds:0x98e9f0d4,dl
  4142c0:	out    0xc2,al
  4142c2:	and    DWORD PTR [esi],0xffffff9e
  4142c5:	aas    
  4142c6:	hlt    
  4142c7:	jp     0x41427e
  4142c9:	xchg   ebp,eax
  4142ca:	fwait
  4142cb:	push   edx
  4142cc:	pop    eax
  4142cd:	inc    ebx
  4142ce:	mov    eax,0xe9f8ef2a
  4142d3:	or     WORD PTR [edx-0x29],di
  4142d7:	dec    edx
  4142d8:	jnp    0x4142b1
  4142da:	int3   
  4142db:	mov    dl,0xbe
  4142dd:	(bad)  
  4142df:	leave  
  4142e0:	inc    ebx
  4142e1:	lahf   
  4142e2:	jle    0x4142b6
  4142e4:	sahf   
  4142e5:	aaa    
  4142e6:	xchg   BYTE PTR [ecx-0x21],dl
  4142e9:	inc    esp
  4142ea:	or     ch,BYTE PTR [edi+0x2c2198c7]
  4142f0:	sub    BYTE PTR [ecx],bl
  4142f2:	neg    DWORD PTR [ebp-0x3bfb4f3a]
  4142f8:	enter  0xc77e,0xa1
  4142fc:	repnz in al,dx
  4142fe:	fistp  QWORD PTR ds:0xa5ec8485
  414304:	cmc    
  414305:	mov    bh,0x62
  414307:	dec    ebx
  414308:	inc    ebx
  414309:	push   ss
  41430a:	test   al,0x8a
  41430c:	mul    BYTE PTR [edx+0x2]
  41430f:	inc    ebx
  414310:	jmp    0x4142e2
  414312:	cmp    al,0x3c
  414314:	pop    ebx
  414315:	(bad)  
  414316:	xchg   edx,eax
  414317:	cmp    DWORD PTR [esi+0xe896688],edi
  41431d:	lea    ecx,[esi]
  41431f:	cmp    BYTE PTR [edx+0x684ccfdf],ah
  414325:	sahf   
  414326:	push   ebp
  414327:	dec    ebx
  414328:	aam    0x2a
  41432a:	add    BYTE PTR [eax+eiz*1+0x1bde2f95],cl
  414331:	pop    eax
  414332:	test   BYTE PTR ds:0x45c591d,dh
  414338:	(bad)  
  414339:	hlt    
  41433a:	sar    ebx,1
  41433c:	(bad)  
  41433d:	std    
  41433e:	push   ecx
  41433f:	and    ah,ch
  414341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414342:	jns    0x41433b
  414344:	stos   BYTE PTR es:[edi],al
  414345:	adc    eax,0x25f763d3
  41434a:	cmp    BYTE PTR [ebx+edx*1-0x50],0x4b
  41434f:	push   edx
  414350:	push   ss
  414351:	jl     0x414363
  414353:	jge    0x41433c
  414355:	mov    dh,0xd6
  414357:	xchg   ebx,eax
  414358:	mov    esp,0xf48ebf98
  41435d:	aad    0x9a
  41435f:	iret   
  414360:	sbb    ecx,DWORD PTR ds:0xbdc9ffff
  414366:	push   esp
  414367:	sub    eax,0xf721ac4b
  41436c:	aad    0x7
  41436e:	pop    ss
  41436f:	loope  0x41432f
  414371:	jbe    0x41430d
  414373:	mov    eax,ds:0x8beef602
  414378:	loop   0x4143c6
  41437a:	inc    ecx
  41437b:	int3   
  41437c:	xlat   BYTE PTR ds:[ebx]
  41437d:	cdq    
  41437e:	mov    ds:0x5703b646,al
  414383:	ret    0x1171
  414386:	fist   DWORD PTR [ebx+eax*2-0x3b]
  41438a:	nop
  41438b:	add    al,0x64
  41438d:	(bad)  
  41438e:	ss jne 0x414409
  414391:	sar    bh,cl
  414393:	jmp    0x88ffcd02
  414398:	fwait
  414399:	lods   eax,DWORD PTR ds:[esi]
  41439a:	cli    
  41439b:	mov    bh,0x5e
  41439d:	rcl    BYTE PTR [ebx-0x64],cl
  4143a0:	xor    DWORD PTR [eax],edi
  4143a2:	xchg   esp,eax
  4143a3:	inc    esp
  4143a4:	daa    
  4143a5:	add    eax,0xccf22e91
  4143aa:	add    DWORD PTR [esi+ebp*4-0x5409aa77],0x7abbfd84
  4143b5:	dec    ebp
  4143b6:	push   0x50
  4143b8:	test   al,0x55
  4143ba:	aad    0x54
  4143bc:	cmc    
  4143bd:	call   0x7960ed1c
  4143c2:	fwait
  4143c3:	mov    ebx,0xb1aa0556
  4143c8:	mov    ds:0x1b7882f2,al
  4143cd:	pop    eax
  4143ce:	mov    edi,0x3395ef7f
  4143d3:	in     al,dx
  4143d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143d5:	jnp    0x4143af
  4143d7:	mov    esi,DWORD PTR ss:[ecx+0x11]
  4143db:	or     ch,BYTE PTR [edx-0x26bdb609]
  4143e1:	inc    esp
  4143e2:	int3   
  4143e3:	retf   0x7e65
  4143e6:	pop    edi
  4143e7:	test   eax,0x2619375c
  4143ec:	lea    ebx,[ecx+0x20]
  4143ef:	lahf   
  4143f0:	popa   
  4143f1:	ror    esi,cl
  4143f3:	out    dx,eax
  4143f4:	lock (bad) 
  4143f6:	into   
  4143f7:	inc    eax
  4143f8:	cmc    
  4143f9:	jmp    0xe971:0x4af48d0a
  414400:	mov    dh,0xe7
  414402:	ud0    esp,esp
  414405:	int3   
  414406:	add    edi,DWORD PTR ds:0xfedf477c
  41440c:	jne    0x4143a9
  41440e:	shr    ebp,cl
  414410:	jl     0x4143e3
  414412:	pop    ds
  414413:	cmp    dl,BYTE PTR [eax-0x71801eb]
  414419:	or     ebp,ecx
  41441b:	std    
  41441c:	fwait
  41441d:	out    dx,al
  41441e:	call   0x7aa1:0x618aee76
  414425:	fistp  WORD PTR [edx+0x4c25508e]
  41442b:	test   al,0xf3
  41442d:	sbb    DWORD PTR [ecx-0x2f],edi
  414430:	inc    esi
  414431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414432:	push   edx
  414433:	cmp    al,BYTE PTR ds:0x27089a68
  414439:	sbb    ecx,DWORD PTR [edx-0x1bab50d0]
  41443f:	mov    fs,edx
  414441:	add    eax,0xdc32526e
  414446:	pop    ss
  414447:	push   cs
  414448:	(bad)  
  414449:	ins    DWORD PTR es:[edi],dx
  41444a:	fwait
  41444b:	repnz loopne 0x414444
  41444e:	clc    
  41444f:	jae    0x4144a6
  414451:	repnz cmp BYTE PTR [esp+edx*8-0x775b3965],0x9b
  41445a:	pop    edi
  41445b:	mov    esi,0x752e98cb
  414460:	dec    eax
  414461:	add    al,0x26
  414463:	es pop edx
  414465:	pop    ss
  414466:	(bad)  
  414467:	iret   
  414468:	mov    al,0x19
  41446a:	jae    0x4144a6
  41446c:	fisub  DWORD PTR [ecx]
  41446e:	cmp    eax,0xcb4e0710
  414473:	mov    ebx,0x5f29c8cd
  414478:	mov    ecx,0x177dba6
  41447d:	pop    ebx
  41447e:	(bad)  
  41447f:	sti    
  414480:	dec    edi
  414481:	sbb    ebx,DWORD PTR [ebp-0x7c]
  414484:	push   es
  414485:	fdiv   QWORD PTR [edx-0x65]
  414488:	jle    0x414473
  41448a:	push   esp
  41448b:	and    eax,0x7a5d6b1
  414490:	mov    ds:0x1355b696,al
  414495:	xchg   DWORD PTR [eax-0x783860f6],edx
  41449b:	cdq    
  41449c:	add    eax,0x6d36f2b4
  4144a1:	hlt    
  4144a2:	fs or  eax,0xb2f5f0ec
  4144a8:	hlt    
  4144a9:	stos   BYTE PTR es:[edi],al
  4144aa:	jae    0x41451b
  4144ac:	adc    ecx,DWORD PTR [edi]
  4144ae:	pop    ds
  4144af:	xchg   ecx,eax
  4144b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144b1:	jo     0x4144bf
  4144b3:	and    dh,BYTE PTR [ebx+0x649c53f8]
  4144b9:	inc    esi
  4144ba:	popf   
  4144bb:	jg     0x4144ff
  4144bd:	aad    0x13
  4144bf:	in     eax,0xa
  4144c1:	mov    ds:0x8087fbf3,eax
  4144c6:	jmp    0xecc9:0xb57be71b
  4144cd:	adc    esi,eax
  4144cf:	cmc    
  4144d0:	add    esp,esp
  4144d2:	pop    ecx
  4144d3:	or     al,0xa3
  4144d5:	ins    BYTE PTR es:[edi],dx
  4144d6:	inc    esi
  4144d7:	cwde   
  4144d8:	test   DWORD PTR [esi+0x36],esp
  4144db:	nop
  4144dc:	xchg   ecx,eax
  4144dd:	push   eax
  4144de:	(bad)  
  4144e0:	cld    
  4144e1:	aad    0x42
  4144e3:	das    
  4144e4:	dec    ecx
  4144e5:	mov    dh,0x3f
  4144e7:	fst    DWORD PTR [edi+0x239bbeb9]
  4144ed:	js     0x4144a6
  4144ef:	mov    edx,DWORD PTR [eax-0x20136393]
  4144f5:	sbb    DWORD PTR [ebx+0x13],edi
  4144f8:	pop    es
  4144f9:	ins    DWORD PTR es:[edi],dx
  4144fa:	jecxz  0x414572
  4144fc:	shl    ebp,cl
  4144fe:	call   0xd1f6:0xbd7963c2
  414505:	sbb    BYTE PTR ds:0x4ddf1f41,dl
  41450b:	jnp    0x414534
  41450d:	mov    ds:0xd6722acd,eax
  414512:	cwde   
  414513:	cmp    DWORD PTR [esi],ebx
  414515:	push   edi
  414516:	cli    
  414517:	not    DWORD PTR [ebp+0x52939a14]
  41451d:	les    edx,FWORD PTR [ecx+0x1703543]
  414523:	test   eax,0xdccd6d1f
  414528:	jae    0x4144c3
  41452a:	pop    ecx
  41452b:	data16 stos BYTE PTR es:[edi],al
  41452d:	add    eax,ebx
  41452f:	sbb    al,0x52
  414531:	pusha  
  414532:	push   eax
  414533:	mov    ah,0xb4
  414535:	adc    al,0xd5
  414537:	imul   eax,DWORD PTR [eax+0x309cbe68],0x65
  41453e:	sahf   
  41453f:	(bad)  
  414540:	mov    al,ds:0xbf946fea
  414545:	sub    al,0x54
  414547:	push   eax
  414548:	mov    al,ds:0xcd17f5e8
  41454d:	sti    
  41454e:	inc    esp
  41454f:	pandn  mm0,mm3
  414552:	into   
  414553:	dec    edi
  414554:	mov    edx,0xce8cab31
  414559:	test   eax,0x991feec1
  41455e:	mov    esi,0x7979054f
  414563:	pop    ecx
  414564:	sub    al,0xd6
  414566:	xchg   esp,eax
  414567:	push   ecx
  414568:	or     edi,DWORD PTR [ecx]
  41456a:	xor    BYTE PTR [ecx-0x397eb82],bh
  414570:	jle    0x4145de
  414572:	call   0x65c9244f
  414577:	add    al,0xcd
  414579:	fadd   DWORD PTR [eax]
  41457b:	out    dx,eax
  41457c:	jle    0x414525
  41457e:	jnp    0x4145be
  414580:	or     eax,0x23b63f0d
  414585:	inc    DWORD PTR [ebp+eax*1+0x20]
  414589:	xor    eax,0x871eef99
  41458e:	stos   DWORD PTR es:[edi],eax
  41458f:	(bad)  
  414590:	mov    fs:0x11e30f91,al
  414596:	cld    
  414597:	jmp    0xe7b3d139
  41459c:	addr16 mov bh,0x44
  41459f:	imul   ebp,ebp,0xfffffff9
  4145a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145a3:	mov    bh,0x82
  4145a5:	icebp  
  4145a6:	retf   0x5ca6
  4145a9:	fsub   QWORD PTR [ecx-0x17]
  4145ac:	push   0xffffffc0
  4145ae:	jne    0x4145a4
  4145b0:	sbb    DWORD PTR [edi+0x716e2de0],ebx
  4145b6:	pop    eax
  4145b7:	jae    0x4145a5
  4145b9:	mov    al,0xd7
  4145bb:	ins    DWORD PTR es:[edi],dx
  4145bc:	ins    DWORD PTR es:[edi],dx
  4145bd:	and    BYTE PTR [edi],ch
  4145bf:	(bad)  
  4145c0:	fld    DWORD PTR [esi]
  4145c2:	ficom  DWORD PTR [eax-0x40]
  4145c5:	mov    ecx,DWORD PTR [eax+0xe091baf]
  4145cb:	mov    ?,WORD PTR [ecx]
  4145cd:	add    eax,0xce888d07
  4145d2:	dec    esp
  4145d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145d4:	(bad)  
  4145d6:	fisttp DWORD PTR [esi-0x27]
  4145d9:	or     DWORD PTR [ebx-0x78431763],ebx
  4145df:	jne    0x414621
  4145e1:	scas   al,BYTE PTR es:[edi]
  4145e2:	js     0x414569
  4145e4:	mov    al,0x4a
  4145e6:	fiadd  WORD PTR [edx]
  4145e8:	jns    0x414599
  4145ea:	ror    BYTE PTR [esi+0x49875b04],cl
  4145f0:	loopne 0x414640
  4145f2:	inc    DWORD PTR [ebp+0x6c]
  4145f5:	div    DWORD PTR [ebx]
  4145f7:	pop    ecx
  4145f8:	jl     0x41461c
  4145fa:	mov    esi,0x2e58c21b
  4145ff:	mov    gs,WORD PTR [ebp+0x46789cfc]
  414605:	push   cs
  414606:	mov    ss,WORD PTR [ebp-0x29]
  414609:	mov    cl,0xe5
  41460b:	lock and al,0x84
  41460e:	repnz out dx,eax
  414610:	xor    al,0x6f
  414612:	inc    edx
  414613:	push   cs
  414614:	jnp    0x41459b
  414616:	leave  
  414617:	push   edx
  414618:	xor    DWORD PTR [edi+0x76],ecx
  41461b:	cdq    
  41461c:	inc    edi
  41461d:	(bad)  
  41461e:	fiadd  WORD PTR [ebx+0x2f]
  414621:	pop    ecx
  414622:	sub    ch,cl
  414624:	gs sub eax,0xe914a9c1
  41462a:	jmp    0x1ae6:0x79f97561
  414631:	or     eax,0x94eba002
  414636:	jecxz  0x4145ba
  414638:	or     al,0x19
  41463a:	retf   
  41463b:	stos   DWORD PTR es:[edi],eax
  41463c:	(bad)  
  41463d:	out    dx,eax
  41463e:	dec    ecx
  41463f:	in     al,0xad
  414641:	pusha  
  414642:	sbb    ebp,0xffffffc5
  414645:	or     DWORD PTR [eax-0x2836a564],esi
  41464b:	sub    DWORD PTR [edi],edx
  41464d:	leave  
  41464e:	(bad)  
  41464f:	xchg   edx,eax
  414650:	mov    al,0x7d
  414652:	leave  
  414653:	cmp    al,ah
  414655:	push   0x2b
  414657:	and    al,0x28
  414659:	loop   0x414685
  41465b:	lock fcmovbe st,st(3)
  41465e:	dec    esi
  41465f:	in     eax,0x66
  414661:	add    ch,0x15
  414664:	(bad)  
  414665:	fs iret 
  414667:	cmp    bl,bh
  414669:	cmp    edx,DWORD PTR [ebp+0x57]
  41466c:	xchg   DWORD PTR [ebp+0x27a7042a],ecx
  414672:	(bad)  
  414673:	loope  0x4146db
  414675:	imul   ebp,DWORD PTR [eax+0x5c0fce16],0xd
  41467c:	push   ds
  41467d:	stos   BYTE PTR es:[edi],al
  41467e:	cmc    
  41467f:	test   eax,0x42ffc135
  414684:	jg     0x414694
  414686:	mov    esp,0xdfab8d07
  41468b:	fnstenv [edx+0x3f]
  41468e:	dec    esp
  41468f:	push   ss
  414690:	inc    ebp
  414691:	mov    eax,esi
  414693:	adc    eax,ecx
  414695:	push   0x54
  414697:	or     eax,0xc9fc0933
  41469c:	and    BYTE PTR [eax+esi*2+0x5f],ch
  4146a0:	loope  0x414650
  4146a2:	(bad)  [ecx-0x78]
  4146a5:	jl     0x4146e6
  4146a7:	es pop esi
  4146a9:	push   edi
  4146aa:	pop    es
  4146ab:	out    0xb9,eax
  4146ad:	sub    DWORD PTR [edx-0x49],esp
  4146b0:	shl    esp,0x9f
  4146b3:	std    
  4146b4:	sbb    dl,BYTE PTR [eax]
  4146b6:	shl    DWORD PTR [ebx+0x768127c6],0x22
  4146bd:	fcom   DWORD PTR [eax+0x24]
  4146c0:	sti    
  4146c1:	mov    ebx,DWORD PTR [ebx-0x23]
  4146c4:	adc    al,0xf1
  4146c6:	inc    esi
  4146c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146c8:	das    
  4146c9:	sub    ecx,DWORD PTR [eax]
  4146cb:	jge    0x414732
  4146cd:	(bad)  
  4146ce:	stc    
  4146cf:	xlat   BYTE PTR ds:[ebx]
  4146d0:	fsubr  QWORD PTR [edx+0x4c8b5558]
  4146d6:	dec    ebx
  4146d7:	adc    bl,dl
  4146d9:	(bad)  
  4146da:	icebp  
  4146db:	mov    dh,0x9c
  4146dd:	xchg   ebp,eax
  4146de:	call   0xf2ea:0xde25f845
  4146e5:	and    bl,cl
  4146e7:	jle    0x41470f
  4146e9:	sar    edx,0xe6
  4146ec:	mov    eax,ds:0xec60460f
  4146f1:	call   0x6ef6:0x6065b457
  4146f8:	mov    ecx,0x965c9c3e
  4146fd:	inc    ebx
  4146fe:	dec    edx
  4146ff:	lods   al,BYTE PTR ds:[esi]
  414700:	fwait
  414701:	mov    bh,0xe7
  414703:	push   es
  414704:	dec    eax
  414705:	sub    BYTE PTR [eax+0x33fd13fe],bh
  41470b:	jns    0x4146b9
  41470d:	push   cs
  41470e:	(bad)  
  41470f:	out    0x19,al
  414711:	xor    BYTE PTR [edi+ebp*8+0x2d],al
  414715:	sbb    DWORD PTR [edi+0x2dcf5ed2],ecx
  41471b:	daa    
  41471c:	out    dx,eax
  41471d:	dec    DWORD PTR es:[edx+0x60]
  414721:	pop    es
  414722:	or     edi,0xffffffa9
  414725:	cmc    
  414726:	cmp    BYTE PTR ds:0xe8d517c4,bl
  41472c:	inc    eax
  41472d:	pop    ecx
  41472e:	sub    eax,esp
  414730:	ins    BYTE PTR es:[edi],dx
  414731:	jmp    0x414795
  414733:	mov    bh,0x75
  414735:	xchg   ecx,eax
  414736:	addr16 iret 
  414738:	jne    0x41472a
  41473a:	jle    0x4146bc
  41473c:	(bad)  
  41473d:	adc    cl,BYTE PTR [ecx+0x41fecfb0]
  414743:	xchg   edi,eax
  414744:	push   ds
  414745:	sub    BYTE PTR [edi-0x21],cl
  414748:	mov    edx,0x123cb86e
  41474d:	inc    esi
  41474e:	pushf  
  41474f:	stos   DWORD PTR es:[edi],eax
  414750:	inc    ebx
  414751:	jae    0x4146f3
  414753:	aad    0x25
  414755:	sbb    esp,DWORD PTR [edx+edx*1-0x7b843a9a]
  41475c:	xchg   esp,eax
  41475d:	outs   dx,DWORD PTR ds:[esi]
  41475e:	popf   
  41475f:	call   0x48dd7266
  414764:	ds mov al,0x82
  414767:	sti    
  414768:	mov    ecx,0xf4fe053d
  41476d:	jb     0x4147d2
  41476f:	sbb    ebp,DWORD PTR [esp+ebp*8]
  414772:	jge    0x41474d
  414774:	mov    bl,0x4d
  414776:	mov    al,ds:0xa707a8a4
  41477b:	fcomp  QWORD PTR [edx+0x11]
  41477e:	scas   eax,DWORD PTR es:[edi]
  41477f:	call   0xe1b4:0x2f66a9e7
  414786:	push   edx
  414787:	jmp    0x414747
  414789:	(bad)  
  41478a:	nop
  41478b:	jae    0x414745
  41478d:	pop    edi
  41478e:	call   0x84d:0xc5db21cb
  414795:	mov    bh,0x6b
  414797:	outs   dx,DWORD PTR ds:[esi]
  414798:	and    al,0x39
  41479a:	xchg   esp,eax
  41479b:	push   ss
  41479c:	cwde   
  41479d:	ret    0x2741
  4147a0:	jmp    0x4147d6
  4147a2:	es addr16 mov ah,0xf7
  4147a6:	and    al,0x1f
  4147a8:	add    al,0x1a
  4147aa:	scas   al,BYTE PTR es:[edi]
  4147ab:	ss mov bl,0xc4
  4147ae:	jb     0x414801
  4147b0:	jg     0x4147c2
  4147b2:	lahf   
  4147b3:	stos   DWORD PTR es:[edi],eax
  4147b4:	or     al,0x19
  4147b6:	stos   DWORD PTR es:[edi],eax
  4147b7:	cmp    al,0x50
  4147b9:	mov    ch,0x90
  4147bb:	fimul  DWORD PTR [edi+0x7e]
  4147be:	test   DWORD PTR [edi+0x2118f075],eax
  4147c4:	xchg   dl,bl
  4147c6:	jb     0x4147ac
  4147c8:	(bad)  
  4147ca:	xchg   esp,eax
  4147cb:	cmp    eax,0x6956a595
  4147d0:	inc    esi
  4147d1:	jo     0x41478e
  4147d3:	imul   esi,DWORD PTR [edi-0x10ea455c],0xfffffffe
  4147da:	add    eax,0xeeb8393d
  4147df:	daa    
  4147e0:	jl     0x4147f8
  4147e2:	in     eax,0x64
  4147e4:	pop    ss
  4147e5:	sbb    eax,0xd1fa804
  4147ea:	dec    esp
  4147eb:	push   ebx
  4147ec:	jnp    0x41484e
  4147ee:	jbe    0x4147d6
  4147f0:	adc    cl,0x8e
  4147f3:	cmp    al,0xe
  4147f5:	cwde   
  4147f6:	jle    0x41484d
  4147f8:	push   0x66
  4147fa:	lahf   
  4147fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147fc:	mov    edi,0xcf970c31
  414801:	inc    esi
  414802:	ins    BYTE PTR es:[edi],dx
  414803:	dec    esi
  414804:	(bad)  [ebx+edi*1+0x71]
  414808:	push   es
  414809:	imul   esp,DWORD PTR [edi+0x7e],0xffffff8c
  41480d:	mov    edx,0xe9ee66c4
  414812:	adc    al,0xd2
  414814:	fbstp  TBYTE PTR [ebp-0x40000863]
  41481a:	push   es
  41481b:	ins    DWORD PTR es:[edi],dx
  41481c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41481d:	shl    BYTE PTR [edi+eiz*2],1
  414820:	push   eax
  414821:	inc    edi
  414822:	adc    BYTE PTR [edi-0x3be89148],dl
  414828:	addr16 and al,0x5a
  41482b:	dec    ebp
  41482c:	jmp    0x4147ae
  41482e:	ds push es
  414830:	jo     0x414810
  414832:	(bad)  
  414833:	repnz inc eax
  414835:	jno    0x4148a7
  414837:	jb     0x414857
  414839:	mov    dl,0x4f
  41483b:	stos   DWORD PTR es:[edi],eax
  41483c:	mov    DWORD PTR [ebx-0x5e],esi
  41483f:	in     eax,0x4b
  414841:	or     edx,DWORD PTR [ebp-0x4e]
  414844:	aam    0x73
  414846:	sbb    eax,0x2f541849
  41484b:	inc    ebx
  41484c:	pop    ebp
  41484d:	mov    WORD PTR [edx-0x108f8762],fs
  414853:	enter  0x5873,0xcd
  414857:	loope  0x4147d9
  414859:	xor    eax,0x17d6fdf9
  41485e:	and    DWORD PTR [ebp+0x29263025],ebx
  414864:	jle    0x414898
  414866:	jno    0x4148b7
  414868:	fldl2e 
  41486a:	outs   dx,BYTE PTR ds:[esi]
  41486b:	mov    cl,0x79
  41486d:	js     0x414875
  41486f:	imul   edi,DWORD PTR [esi],0x69982921
  414875:	jns    0x414851
  414877:	xor    al,cl
  414879:	in     eax,dx
  41487a:	clc    
  41487b:	cs xchg esp,eax
  41487d:	inc    ebx
  41487e:	in     eax,0xb2
  414880:	xchg   esi,eax
  414881:	ins    DWORD PTR es:[edi],dx
  414882:	fnsave [ebp-0x4]
  414885:	fcmovb st,st(5)
  414887:	mov    esp,0xe430789b
  41488c:	fwait
  41488d:	or     al,0xcf
  41488f:	div    BYTE PTR [esi-0x2074eac6]
  414895:	jl     0x414882
  414897:	pop    es
  414898:	and    eax,0x5a028adf
  41489d:	fldenv ss:[eax]
  4148a0:	fadd   DWORD PTR [esi+0x67]
  4148a3:	aad    0x80
  4148a5:	ins    DWORD PTR es:[edi],dx
  4148a6:	js     0x4148e5
  4148a8:	lods   al,BYTE PTR ds:[esi]
  4148a9:	inc    ebx
  4148aa:	mov    bh,0xe1
  4148ac:	xor    bl,BYTE PTR [edi+0x75]
  4148af:	dec    ebx
  4148b0:	mov    ss,WORD PTR [edi+0x42]
  4148b3:	repnz retf 0x51c8
  4148b7:	sub    ebp,ecx
  4148b9:	add    ebp,DWORD PTR [eax-0x6c]
  4148bc:	leave  
  4148bd:	int    0x2b
  4148bf:	add    eax,0x7621171d
  4148c4:	jae    0x4148b1
  4148c6:	in     eax,0xab
  4148c8:	mov    ebx,ebx
  4148ca:	adc    eax,0x45663c96
  4148cf:	mov    bh,0xf5
  4148d1:	jne    0x414933
  4148d3:	pop    ds
  4148d4:	jnp    0x4148e2
  4148d6:	mov    DWORD PTR [edx+0x37],ecx
  4148d9:	jle    0x414927
  4148db:	jne    0x4148cd
  4148dd:	(bad)
  4148e2:	leave  
  4148e3:	in     al,0x53
  4148e5:	fadd   DWORD PTR [eax]
  4148e7:	pop    es
  4148e8:	jl     0x41492e
  4148ea:	gs add ebp,edi
  4148ed:	rep stos BYTE PTR es:[edi],al
  4148ef:	and    bh,BYTE PTR [esi]
  4148f1:	lods   al,BYTE PTR ds:[esi]
  4148f2:	mov    al,ds:0x94a8eac0
  4148f7:	test   DWORD PTR [esp+edx*8-0x26],eax
  4148fb:	sbb    ah,BYTE PTR [eax-0x70]
  4148fe:	cvtps2pi mm3,QWORD PTR [esi-0x2cc3864]
  414905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414906:	cmp    BYTE PTR [ebx-0x75271ac6],ah
  41490c:	lds    eax,FWORD PTR [ebp-0x3897db90]
  414912:	ficom  WORD PTR [edx]
  414914:	je     0x4148f0
  414916:	fbld   TBYTE PTR [esi-0x5e3ea48]
  41491c:	dec    edi
  41491d:	lods   al,BYTE PTR ds:[esi]
  41491e:	jbe    0x41494d
  414920:	cmp    ch,cl
  414922:	cmp    ch,BYTE PTR ds:0xea880879
  414928:	adc    DWORD PTR [edi+0x75],eax
  41492b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41492c:	jmp    DWORD PTR [edx+ebp*8-0x434f9947]
  414933:	cdq    
  414934:	cmp    al,0x69
  414936:	xor    DWORD PTR [esi-0x526d3059],edi
  41493c:	or     al,0xc9
  41493e:	sbb    ch,ah
  414940:	mov    al,ds:0x7277136f
  414945:	loopne 0x41496c
  414947:	dec    edi
  414948:	aas    
  414949:	cmp    eax,0xcf3e0e54
  41494e:	(bad)  
  41494f:	imul   eax,DWORD PTR [edi],0x24
  414952:	sbb    ch,bl
  414954:	mov    ah,0x3c
  414956:	xor    bh,dh
  414958:	jno    0x41492a
  41495a:	mov    DWORD PTR [edx+0x66a9488d],ebp
  414960:	nop
  414961:	mov    dl,0xa1
  414963:	sub    esi,DWORD PTR [esp+edx*2]
  414966:	aaa    
  414967:	imul   edi,DWORD PTR [eax-0x6dc0cb26],0xfffffffd
  41496e:	jne    0x4149c2
  414970:	les    edi,FWORD PTR [ecx]
  414972:	jb     0x414964
  414974:	dec    esp
  414975:	xchg   ecx,eax
  414976:	ret    
  414977:	(bad)  
  414978:	cmp    eax,0x8dd716fc
  41497d:	pop    ds
  41497e:	imul   edx,DWORD PTR [edi+0x7e17bc5e],0xffffff82
  414985:	test   eax,0x788ad55b
  41498a:	mov    dl,0xc
  41498c:	xchg   edx,eax
  41498d:	mov    al,0x7f
  41498f:	cmp    BYTE PTR [eax+0x38],ah
  414992:	push   0xb4c950bc
  414997:	test   al,0x82
  414999:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41499b:	mov    ebx,ebx
  41499d:	mov    edx,0x2ba94b95
  4149a2:	sbb    bh,BYTE PTR [edx+0x7c285561]
  4149a8:	(bad)  
  4149a9:	cld    
  4149aa:	imul   esp,DWORD PTR [eax+0x85589d6],0x70e9
  4149b4:	add    BYTE PTR [ebx+0x5d8b0855],cl
  4149ba:	clc    
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	(bad)  
  414b89:	retf   
  414b8a:	pop    esi
  414b8b:	popf   
  414b8c:	jmp    DWORD PTR [edi-0x7e]
  414b8f:	adc    DWORD PTR [edi],0x5c
  414b92:	add    DWORD PTR [ebx+0x77112848],0x69
  414b99:	xchg   esp,esp
  414b9b:	and    eax,0xb3a903d4
  414ba0:	xor    BYTE PTR [ebp+0x49b8eea7],dl
  414ba6:	xor    BYTE PTR [ebp+ecx*2-0x2e3b985],0xe0
  414bae:	xchg   edx,eax
  414baf:	push   edx
  414bb0:	add    ebx,DWORD PTR [esi+0x4d]
  414bb3:	call   0xe5ff4df6
  414bb8:	fild   DWORD PTR [ebp+0x18]
  414bbb:	dec    ebx
  414bbc:	nop
  414bbd:	inc    edi
  414bbe:	test   BYTE PTR [ecx-0x203ccf8f],cl
  414bc4:	xchg   BYTE PTR [ecx+0x12c329cb],bl
  414bca:	jmp    0x414c25
  414bcc:	mov    al,ds:0x76ca9a73
  414bd1:	mov    ds:0x150996b2,al
  414bd6:	sbb    BYTE PTR [ebx],ah
  414bd8:	call   0xa6ee:0x9a61ff5a
  414bdf:	and    esp,DWORD PTR [ebp+0x43]
  414be2:	in     eax,0x64
  414be4:	lea    esi,[esi+ebp*2-0x6c]
  414be8:	fisubr WORD PTR [ebx]
  414bea:	lock cdq 
  414bec:	mov    ebp,0xf3a93992
  414bf1:	sete   BYTE PTR [esi+0x42122112]
  414bf8:	mov    cl,0xe7
  414bfa:	outs   dx,BYTE PTR ds:[esi]
  414bfb:	test   eax,0x574ca02a
  414c00:	add    eax,0x65d3e79f
  414c05:	inc    ebx
  414c06:	jo     0x414c5d
  414c08:	mov    gs,WORD PTR [edx-0x13]
  414c0b:	pop    esi
  414c0c:	or     esp,esp
  414c0e:	dec    edx
  414c0f:	sti    
  414c10:	lods   al,BYTE PTR ds:[esi]
  414c11:	or     bl,BYTE PTR [esi+0x269d1614]
  414c17:	push   ebp
  414c18:	cmp    al,0xe1
  414c1a:	retf   
  414c1b:	mov    ebx,0x170795de
  414c20:	inc    esi
  414c21:	pop    edx
  414c22:	ret    0x279c
  414c25:	inc    ebx
  414c26:	or     ch,BYTE PTR [ecx+0x5f]
  414c29:	and    al,0x1b
  414c2b:	push   ds
  414c2c:	(bad)  
  414c2d:	in     eax,dx
  414c2e:	ficom  DWORD PTR [edi+0x58]
  414c31:	xor    edi,DWORD PTR [edx+0x4452f94]
  414c37:	sbb    BYTE PTR [eax+0x6d],0x73
  414c3b:	in     al,dx
  414c3c:	jb     0x414c27
  414c3e:	in     al,0xc5
  414c40:	call   0xa5dcbc6a
  414c45:	and    eax,0x210a7633
  414c4a:	shr    DWORD PTR [eax-0x3ccfc62],cl
  414c50:	dec    edx
  414c51:	sbb    cl,BYTE PTR [ebp+0x2a39b3ba]
  414c57:	xchg   ebp,eax
  414c58:	fist   DWORD PTR [edi-0x48]
  414c5b:	push   ecx
  414c5c:	mov    esi,0x54df8ec6
  414c61:	sub    ah,BYTE PTR [ebx+0x4ae14679]
  414c67:	sub    BYTE PTR [esi+0x2b6a2b3e],ah
  414c6d:	lds    eax,FWORD PTR [esp+ecx*2+0x69]
  414c71:	scas   al,BYTE PTR es:[edi]
  414c72:	loopne 0x414c68
  414c74:	add    cl,al
  414c76:	test   BYTE PTR [ebp+0x18157ac4],ah
  414c7c:	cmp    ah,cl
  414c7e:	inc    eax
  414c7f:	sub    esp,esi
  414c81:	push   0x4e
  414c83:	in     eax,0xa4
  414c85:	mov    DWORD PTR [edx+0x2047e5fe],0x687788d5
  414c8f:	sub    edx,edi
  414c91:	xor    bh,BYTE PTR [ecx]
  414c93:	pop    esp
  414c94:	sub    al,0x5a
  414c96:	xchg   ah,bl
  414c98:	ror    BYTE PTR [ebp-0xe],0x32
  414c9c:	shr    esp,cl
  414c9e:	dec    esp
  414c9f:	sbb    al,0x73
  414ca1:	(bad)  
  414ca2:	jl     0x414cfc
  414ca4:	xor    eax,ebp
  414ca6:	mov    al,0x18
  414ca8:	iret   
  414ca9:	ficom  DWORD PTR [esi-0x6f]
  414cac:	(bad)  
  414cad:	mov    ch,dl
  414caf:	xchg   ecx,eax
  414cb0:	cs out dx,al
  414cb2:	(bad)  
  414cb3:	cli    
  414cb4:	aad    0xd9
  414cb6:	mov    dl,0x92
  414cb8:	je     0x414d28
  414cba:	inc    esp
  414cbb:	sar    DWORD PTR [edi],1
  414cbd:	pop    es
  414cbe:	adc    eax,0xa686c2c5
  414cc3:	xchg   BYTE PTR [ebp+0x12cd04c0],bh
  414cc9:	mov    cl,0xe4
  414ccb:	pusha  
  414ccc:	fstp   QWORD PTR ds:0xfca9ecac
  414cd2:	add    ch,BYTE PTR [ebp+0x3defb41f]
  414cd8:	or     BYTE PTR [esi],al
  414cda:	mov    eax,0xad1e2522
  414cdf:	fidiv  DWORD PTR [edi-0x32]
  414ce2:	pusha  
  414ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ce4:	leave  
  414ce5:	mov    ebx,0xd2f8155a
  414cea:	sub    al,0x2e
  414cec:	data16 mov al,ds:0x2b2d1e8f
  414cf2:	jp     0x414d57
  414cf4:	mov    al,0x41
  414cf6:	add    eax,0x967d38c6
  414cfb:	lock jnp 0x414d59
  414cfe:	pop    ebx
  414cff:	shl    BYTE PTR [edi+0x13e6f6ad],1
  414d05:	sbb    edi,DWORD PTR [eax]
  414d07:	fwait
  414d08:	pop    eax
  414d09:	(bad)  
  414d0a:	sti    
  414d0b:	add    bl,ch
  414d0d:	xchg   edi,eax
  414d0e:	ja     0x414d09
  414d10:	adc    eax,0x92407e88
  414d15:	cmp    al,0xbc
  414d17:	loope  0x414cda
  414d19:	sub    esp,ebp
  414d1b:	xchg   edx,eax
  414d1c:	add    DWORD PTR [esi],edx
  414d1e:	sub    cl,BYTE PTR [eax+0x41]
  414d21:	dec    ebp
  414d22:	mov    cl,0x4a
  414d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d25:	outs   dx,BYTE PTR ds:[esi]
  414d26:	xchg   BYTE PTR [ebp-0x2d],bl
  414d29:	es jecxz 0x414cea
  414d2c:	int    0xed
  414d2e:	rcr    BYTE PTR [ebp+0x5746ac96],1
  414d34:	pop    ds
  414d35:	imul   esp
  414d37:	push   0x214f307f
  414d3c:	pop    esi
  414d3d:	pop    esp
  414d3e:	mov    ebx,DWORD PTR [esi]
  414d40:	sub    ebx,esi
  414d42:	lahf   
  414d43:	mov    ds:0x4ea2ccd2,al
  414d48:	dec    edx
  414d49:	arpl   WORD PTR es:[ebx+ebx*4-0x1647bd6c],si
  414d51:	out    dx,eax
  414d52:	or     cl,bl
  414d54:	sbb    ah,BYTE PTR [ebx+0x117d4f7e]
  414d5a:	fcmove st,st(6)
  414d5c:	clc    
  414d5d:	mov    DWORD PTR [ebx-0x7f],esp
  414d60:	popf   
  414d61:	ins    DWORD PTR es:[edi],dx
  414d62:	inc    edi
  414d63:	add    ah,BYTE PTR [eax+0x5b]
  414d66:	data16 repz cld 
  414d69:	clc    
  414d6a:	mov    bh,0xd
  414d6c:	mov    eax,0x6fd051f5
  414d71:	inc    edx
  414d72:	(bad)  
  414d74:	nop
  414d75:	fisttp WORD PTR [edi-0x88f269e]
  414d7b:	ins    BYTE PTR es:[edi],dx
  414d7c:	jecxz  0x414d58
  414d7e:	jge    0x414d8c
  414d80:	and    bl,BYTE PTR [esp+eax*2-0x3894ce0a]
  414d87:	loopne 0x414dfb
  414d89:	dec    edx
  414d8a:	mov    edi,0x647e43e3
  414d8f:	iret   
  414d90:	shl    esi,cl
  414d92:	jnp    0x414d57
  414d94:	iret   
  414d95:	cmp    bh,ch
  414d97:	cmp    eax,0x3e31c4c7
  414d9c:	push   edx
  414d9d:	(bad)  
  414d9f:	or     ebp,DWORD PTR ds:0x321add89
  414da5:	call   0x499cab0
  414daa:	outs   dx,BYTE PTR ds:[esi]
  414dab:	xor    eax,0x4ea7bf10
  414db0:	lods   eax,DWORD PTR ds:[esi]
  414db1:	add    bh,cl
  414db3:	mov    ecx,0xce3d1334
  414db8:	dec    ebx
  414db9:	loopne 0x414d58
  414dbb:	or     ebx,DWORD PTR [eax+ecx*8+0x50]
  414dbf:	scas   eax,DWORD PTR es:[edi]
  414dc0:	ss and al,0x2b
  414dc3:	cld    
  414dc4:	sbb    al,0x9e
  414dc6:	inc    eax
  414dc7:	leave  
  414dc8:	fisubr DWORD PTR [ebp-0x244c1f4e]
  414dce:	mov    ebp,DWORD PTR [ebx+ebp*2-0x8]
  414dd2:	ret    
  414dd3:	lock and DWORD PTR [esi-0x2ca0f976],esi
  414dda:	cmp    eax,0x6f8c23ab
  414ddf:	push   0x48
  414de1:	scas   eax,DWORD PTR es:[edi]
  414de2:	fs cli 
  414de4:	stos   DWORD PTR es:[edi],eax
  414de5:	add    DWORD PTR [ecx+ebp*2],ebx
  414de8:	lods   al,BYTE PTR ds:[esi]
  414de9:	mov    ecx,0x9d9ed1b
  414dee:	std    
  414def:	or     eax,esi
  414df1:	sbb    bh,BYTE PTR [eax-0x29971ab1]
  414df7:	or     ebx,esp
  414df9:	mov    ebx,0xc88787d9
  414dfe:	loopne 0x414dba
  414e00:	push   ecx
  414e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e02:	sbb    ch,al
  414e04:	(bad)  
  414e05:	fucomip st,st(7)
  414e07:	sti    
  414e08:	sub    BYTE PTR [ebx],0x1f
  414e0b:	jbe    0x414df6
  414e0d:	inc    esi
  414e0e:	xor    esp,edx
  414e10:	dec    ebp
  414e11:	dec    esp
  414e12:	mov    edx,0xefd68298
  414e17:	xor    BYTE PTR ds:0x69dd2342,0x8f
  414e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e1f:	adc    al,0x2b
  414e21:	jg     0x414e84
  414e23:	add    BYTE PTR [ebp-0x6a5b309e],ch
  414e29:	pop    es
  414e2a:	repnz mov ecx,0xd6c65ccf
  414e30:	mov    ch,BYTE PTR [edi]
  414e32:	add    BYTE PTR [ebx+0x4],bl
  414e35:	mov    bl,0x22
  414e37:	mov    esp,0xb232ffa8
  414e3c:	add    al,0x5a
  414e3e:	mov    eax,ebp
  414e40:	cmp    al,0xc8
  414e42:	jle    0x414e5f
  414e44:	xor    al,0x80
  414e46:	stos   BYTE PTR es:[edi],al
  414e47:	test   dh,0xff
  414e4a:	cwde   
  414e4b:	ss int3 
  414e4d:	scas   al,BYTE PTR es:[edi]
  414e4e:	cmp    DWORD PTR [esi],eax
  414e50:	in     eax,0xb1
  414e52:	data16 js 0x414e13
  414e55:	mov    ecx,gs
  414e57:	retf   0xebe1
  414e5a:	(bad)  
  414e5b:	xchg   ebx,eax
  414e5c:	sbb    DWORD PTR [edi],ebx
  414e5e:	ins    DWORD PTR es:[edi],dx
  414e5f:	ins    BYTE PTR es:[edi],dx
  414e60:	(bad)  
  414e61:	mov    edx,0x4c0c0b88
  414e66:	xor    cl,al
  414e68:	ret    0xe1af
  414e6b:	arpl   bp,cx
  414e6d:	add    al,0x40
  414e6f:	add    al,0x9b
  414e71:	outs   dx,DWORD PTR ds:[esi]
  414e72:	sti    
  414e73:	mov    BYTE PTR ds:0x35222dcd,bh
  414e79:	imul   eax
  414e7b:	xchg   DWORD PTR [ebx-0x4b716c46],ebx
  414e81:	inc    ecx
  414e82:	addr16 aaa 
  414e84:	popf   
  414e85:	es dec esp
  414e87:	xor    BYTE PTR [ecx+0x65],bh
  414e8a:	or     bl,BYTE PTR ds:[ebp+0x1a5c5746]
  414e91:	fldenv [ebp+0x19]
  414e94:	dec    ebp
  414e95:	xlat   BYTE PTR ds:[ebx]
  414e96:	inc    ebx
  414e97:	jae    0x414eba
  414e99:	retf   0x157a
  414e9c:	fstp   TBYTE PTR [edx]
  414e9e:	jbe    0x414e4d
  414ea0:	inc    edi
  414ea1:	inc    esp
  414ea2:	test   eax,0x702c1807
  414ea7:	enter  0x8528,0xa1
  414eab:	ja     0x414e9c
  414ead:	sbb    edi,DWORD PTR [edx+0x317aafce]
  414eb3:	iret   
  414eb4:	mov    ebp,0x2c224183
  414eb9:	mov    dh,0xa2
  414ebb:	jb     0x414eab
  414ebd:	std    
  414ebe:	(bad)  
  414ebf:	rcl    DWORD PTR [ebx+ecx*8+0x7a],0xc4
  414ec4:	jmp    0x7d449552
  414ec9:	inc    ebx
  414eca:	fldenv [ecx]
  414ecc:	dec    ebp
  414ecd:	cmp    al,0xd1
  414ecf:	bound  edi,QWORD PTR [ecx+0x3c]
  414ed2:	dec    edx
  414ed3:	pop    esi
  414ed4:	fs jecxz 0x414e70
  414ed7:	inc    DWORD PTR [ebx+ebp*1+0x123686e0]
  414ede:	add    DWORD PTR [ebp-0x1c61a5d6],0x111bdc50
  414ee8:	and    DWORD PTR [ebx-0x2d],ebp
  414eeb:	push   ss
  414eec:	add    edi,DWORD PTR [ecx+0x30]
  414eef:	pop    ecx
  414ef0:	and    al,0x9d
  414ef2:	out    dx,eax
  414ef3:	lock push 0x6d305bf7
  414ef9:	cmp    cl,BYTE PTR [eax+ecx*1+0x5730b69e]
  414f00:	nop
  414f01:	push   0xffffff94
  414f03:	add    BYTE PTR [ebx+0x124e0f97],ch
  414f09:	mov    esp,0x6608844f
  414f0e:	xchg   edi,eax
  414f0f:	outs   dx,BYTE PTR ds:[esi]
  414f10:	inc    ebp
  414f11:	fs popa 
  414f13:	dec    ecx
  414f14:	jmp    0x7716:0x51f9181a
  414f1b:	mov    ebx,0x1120ca73
  414f20:	add    DWORD PTR [edi-0x2a9d1d9a],ebx
  414f26:	push   0xd5a00352
  414f2b:	stos   DWORD PTR es:[edi],eax
  414f2c:	cld    
  414f2d:	push   ss
  414f2e:	mov    bl,0x8c
  414f30:	adc    eax,eax
  414f32:	adc    esi,DWORD PTR [ebp+0x1ce2a3db]
  414f38:	retf   0x9e2e
  414f3b:	sbb    al,0x6
  414f3d:	or     BYTE PTR [esp+ecx*4],0xf
  414f41:	cdq    
  414f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f43:	and    ebx,DWORD PTR [ecx-0x18d491f0]
  414f49:	ins    DWORD PTR es:[edi],dx
  414f4a:	cmp    BYTE PTR [ebp+0x6f],ah
  414f4d:	xchg   ebp,eax
  414f4e:	(bad)  
  414f4f:	icebp  
  414f50:	jae    0x414ee1
  414f52:	lods   al,BYTE PTR ds:[esi]
  414f53:	pusha  
  414f54:	retf   0x4a48
  414f57:	cdq    
  414f58:	jb     0x414ef8
  414f5a:	cdq    
  414f5b:	sub    eax,0xe03f446f
  414f60:	fwait
  414f61:	mov    WORD PTR [ebx],?
  414f63:	xchg   ecx,eax
  414f64:	pop    ebx
  414f65:	repnz (bad) 
  414f67:	pop    ecx
  414f68:	cmp    DWORD PTR [ebp+0x659ef6ce],ebp
  414f6e:	jp     0x414ef1
  414f70:	ror    BYTE PTR [eax],1
  414f72:	or     ebp,edx
  414f74:	dec    eax
  414f75:	mov    ecx,0x152f81b8
  414f7a:	xchg   esp,eax
  414f7b:	(bad)  
  414f7d:	pop    esp
  414f7e:	imul   ecx,edi,0xffffff96
  414f81:	sbb    DWORD PTR [ecx+0x7b],eax
  414f84:	add    DWORD PTR [edi+0x15],ecx
  414f87:	inc    ebp
  414f88:	inc    BYTE PTR ds:0x1211a1ed
  414f8e:	push   esp
  414f8f:	cmp    BYTE PTR [edi],cl
  414f91:	xor    DWORD PTR [ebp+0x6c],esi
  414f94:	sbb    eax,0x1a901a71
  414f99:	mov    bl,BYTE PTR [edi-0x10]
  414f9c:	fnstcw WORD PTR [eax-0x4cbb511c]
  414fa2:	xchg   edx,eax
  414fa3:	add    BYTE PTR [esi],cl
  414fa5:	les    ecx,FWORD PTR [edx]
  414fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fa8:	cmp    eax,0x18387f1d
  414fad:	loop   0x414f87
  414faf:	clc    
  414fb0:	iret   
  414fb1:	mov    esi,DWORD PTR [ebp+0x59ffe0d5]
  414fb7:	inc    ecx
  414fb8:	jo     0x41500c
  414fba:	les    ecx,FWORD PTR [edi+0x5c9e9beb]
  414fc0:	pop    ecx
  414fc1:	leave  
  414fc2:	xchg   DWORD PTR [edx+0x57],ebp
  414fc5:	inc    eax
  414fc6:	push   ebp
  414fc7:	out    dx,eax
  414fc8:	inc    ebx
  414fc9:	inc    ch
  414fcb:	xchg   esi,edi
  414fcd:	or     DWORD PTR cs:[eax+0x297fde14],ebx
  414fd4:	lds    edx,FWORD PTR [ebp-0x4aafc643]
  414fda:	mov    edi,0x8ddd6dc7
  414fdf:	test   BYTE PTR [ebx-0x2459f7c2],ch
  414fe5:	mov    ah,0x50
  414fe7:	leave  
  414fe8:	mov    ecx,0x1b783b8d
  414fed:	xor    BYTE PTR [edi+ebx*4-0x3f],bl
  414ff1:	inc    ebx
  414ff2:	or     eax,0xc6f3f2ae
  414ff7:	or     bh,BYTE PTR ds:0xdf32b038
  414ffd:	lods   eax,DWORD PTR ds:[esi]
  414ffe:	xchg   ecx,eax
  414fff:	or     eax,0x6e2de83
  415004:	(bad)  
  415006:	pushf  
  415007:	xor    edx,edx
  415009:	pop    edi
  41500a:	sbb    al,0x8c
  41500c:	dec    edx
  41500d:	lds    eax,FWORD PTR [ecx+0x6]
  415010:	push   esp
  415011:	icebp  
  415012:	mov    dl,0xa9
  415014:	retf   
  415015:	sub    al,0x61
  415017:	sbb    BYTE PTR [ecx],dl
  415019:	mov    eax,ds:0x9cebc5eb
  41501e:	and    ch,BYTE PTR [ebx-0x3bd0213b]
  415024:	and    BYTE PTR [edx+0x25],0x44
  415028:	fld    QWORD PTR [ecx]
  41502a:	mov    ecx,0x1d8dfbe8
  41502f:	inc    esp
  415030:	xlat   BYTE PTR ds:[ebx]
  415031:	push   ecx
  415032:	xor    BYTE PTR ds:0x417c2ea2,al
  415038:	mov    ebp,0xd2b34cb3
  41503d:	cmp    al,0x39
  41503f:	fnsave [eax+eax*1+0x6614e3fe]
  415046:	enter  0xf0e3,0xd4
  41504a:	stos   BYTE PTR es:[edi],al
  41504b:	in     al,dx
  41504c:	sbb    ebp,DWORD PTR [edi+0x2bce7228]
  415052:	shl    BYTE PTR [edx+0x64a548f6],cl
  415058:	mov    dh,0x5c
  41505a:	loop   0x41509c
  41505c:	vmwrite edi,ebp
  41505f:	xchg   edx,eax
  415060:	retf   0x2812
  415063:	pop    ds
  415064:	loopne 0x415024
  415066:	sub    BYTE PTR [eax-0x71e8557d],dh
  41506c:	inc    esi
  41506d:	aas    
  41506e:	lea    esp,[esi]
  415070:	and    al,BYTE PTR [ebx-0x18]
  415073:	cwde   
  415074:	mov    ecx,0x5c1cf58f
  415079:	out    0x93,al
  41507b:	stc    
  41507c:	imul   edx,eax,0xe0d51d52
  415082:	cmp    DWORD PTR [ebp+edi*1-0x4a],eax
  415086:	inc    ecx
  415087:	repnz cmp BYTE PTR ds:0xaf696e,bh
  41508e:	cld    
  41508f:	push   ds
  415090:	lock push esi
  415092:	cs jne 0x415059
  415095:	fs sahf 
  415097:	add    al,0x7d
  415099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41509a:	lahf   
  41509b:	sub    esi,eax
  41509d:	cmp    ch,cl
  41509f:	outs   dx,BYTE PTR gs:[esi]
  4150a1:	pusha  
  4150a2:	in     al,dx
  4150a3:	inc    edx
  4150a4:	pop    ds
  4150a5:	mov    edi,0x3d171d6c
  4150aa:	lock loopne 0x4150ea
  4150ad:	cmp    esp,esi
  4150af:	das    
  4150b0:	sbb    DWORD PTR [edi+0x5d],eax
  4150b3:	arpl   WORD PTR [esi],sp
  4150b5:	ss adc al,0x6b
  4150b8:	call   0xcdf95a4
  4150bd:	fwait
  4150be:	xor    DWORD PTR [ebp+0x79],eax
  4150c1:	jge    0x4150b2
  4150c3:	popf   
  4150c4:	sahf   
  4150c5:	lea    edx,[ebp-0xcbadb3b]
  4150cb:	ret    0xa0a
  4150ce:	and    BYTE PTR [edi-0x55b5a610],bl
  4150d4:	(bad)  
  4150d5:	xchg   ecx,eax
  4150d6:	jecxz  0x41506d
  4150d8:	stc    
  4150d9:	pop    ebx
  4150da:	cmc    
  4150db:	retf   0x9823
  4150de:	mov    ecx,0x25f4f558
  4150e3:	sti    
  4150e4:	jo     0x41515c
  4150e6:	xchg   BYTE PTR [ecx],ah
  4150e8:	push   0xb8f12038
  4150ed:	dec    edx
  4150ee:	sbb    BYTE PTR [eax+eiz*4+0x6498d8cf],ch
  4150f5:	mov    BYTE PTR [eax-0x3b],al
  4150f8:	and    ebx,DWORD PTR [edi-0x56a9bdc9]
  4150fe:	inc    edi
  4150ff:	adc    ecx,ebx
  415101:	pop    ebx
  415102:	pop    esi
  415103:	cld    
  415104:	hlt    
  415105:	popa   
  415106:	fsub   DWORD PTR [ecx]
  415108:	and    bl,BYTE PTR [eax-0x69]
  41510b:	ret    0xbc9b
  41510e:	stos   DWORD PTR es:[edi],eax
  41510f:	dec    esp
  415110:	int3   
  415111:	pop    ds
  415112:	lods   al,BYTE PTR ds:[esi]
  415113:	sahf   
  415114:	ret    0x167f
  415117:	cli    
  415118:	inc    ah
  41511a:	aaa    
  41511b:	sub    al,0xd9
  41511d:	stos   BYTE PTR es:[edi],al
  41511e:	inc    BYTE PTR [ebx]
  415120:	dec    esi
  415121:	add    eax,0x8d984188
  415126:	into   
  415127:	or     esi,DWORD PTR [eiz*1-0x678b4b97]
  41512e:	pusha  
  41512f:	mov    ecx,0xb4b25160
  415134:	xchg   ebp,eax
  415135:	out    0x70,al
  415137:	push   eax
  415138:	inc    edi
  415139:	mov    bl,0xe1
  41513b:	repz in eax,dx
  41513d:	push   es
  41513e:	xchg   edx,eax
  41513f:	cdq    
  415140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415141:	shl    BYTE PTR [eax],cl
  415143:	pop    ebx
  415144:	test   BYTE PTR [eax-0x69],bh
  415147:	mov    ebp,0xfc48e2f
  41514c:	cs sub edi,eax
  41514f:	adc    bl,cl
  415151:	cdq    
  415152:	or     al,0x57
  415154:	jg     0x41512b
  415156:	data16 loopne 0x4150e7
  415159:	dec    edi
  41515a:	sub    DWORD PTR fs:[ecx+0x4e],0xffffffe4
  41515f:	je     0x4151c6
  415161:	jmp    0x41516f
  415163:	nop
  415164:	mov    al,0xcc
  415166:	ds pop ss
  415168:	mov    al,0x45
  41516a:	cmp    dh,bh
  41516c:	add    dl,BYTE PTR [eax+0x1e]
  41516f:	sbb    bl,BYTE PTR [edi+edx*8-0x2b]
  415173:	and    BYTE PTR [ebx+eax*1+0x681ae357],0xf3
  41517b:	pop    esp
  41517c:	dec    esp
  41517d:	cwde   
  41517e:	or     DWORD PTR [ebp+edx*2+0x51],eax
  415182:	jb     0x41518b
  415184:	inc    esi
  415185:	cdq    
  415186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415187:	dec    eax
  415188:	sbb    BYTE PTR [edi-0x77],cl
  41518b:	mov    ah,BYTE PTR [ebp+0x20]
  41518e:	int    0x66
  415190:	lock jns 0x4151e2
  415193:	add    bh,bl
  415195:	pop    edi
  415196:	adc    DWORD PTR [edx-0x76],esi
  415199:	push   eax
  41519a:	mov    edx,0x395328ad
  41519f:	dec    esi
  4151a0:	jbe    0x415174
  4151a2:	xor    esp,edx
  4151a4:	pop    ecx
  4151a5:	push   ss
  4151a6:	bound  ecx,QWORD PTR [ebx]
  4151a8:	popf   
  4151a9:	in     al,dx
  4151aa:	adc    al,0x10
  4151ac:	and    bl,BYTE PTR [ebp+0x30]
  4151af:	dec    edi
  4151b0:	jne    0x415217
  4151b2:	arpl   WORD PTR [edx+0x3d],si
  4151b5:	ficomp DWORD PTR [ecx]
  4151b7:	(bad)  
  4151b9:	ret    0x9bea
  4151bc:	jnp    0x415204
  4151be:	and    dl,0xa7
  4151c1:	xor    al,0x32
  4151c3:	lods   al,BYTE PTR ds:[esi]
  4151c4:	lock lahf 
  4151c6:	loopne 0x4151f2
  4151c8:	sti    
  4151c9:	(bad)  
  4151ca:	cmc    
  4151cb:	xor    BYTE PTR [esi+0x15ac5644],ch
  4151d1:	mov    fs,ebx
  4151d3:	xlat   BYTE PTR ds:[ebx]
  4151d4:	(bad)  
  4151d5:	push   ds
  4151d6:	mov    BYTE PTR [edi+0x36],0x54
  4151da:	mov    ah,0xfe
  4151dc:	mov    ebx,0x9b376188
  4151e1:	js     0x415240
  4151e3:	jge    0x4151ef
  4151e5:	in     al,dx
  4151e6:	xchg   esp,eax
  4151e7:	or     al,0xc2
  4151e9:	jns    0x41519e
  4151eb:	fbstp  TBYTE PTR [eax-0x61]
  4151ee:	stc    
  4151ef:	(bad)  
  4151f0:	rcr    ch,cl
  4151f2:	pop    ebx
  4151f3:	mov    esi,0x879688d4
  4151f8:	or     bh,BYTE PTR [edx+0x583a5cf5]
  4151fe:	cld    
  4151ff:	jecxz  0x4151d9
  415201:	xor    DWORD PTR [ecx-0x65],ebx
  415204:	aam    0x4
  415206:	jnp    0x415227
  415208:	cmc    
  415209:	and    al,0x2
  41520b:	inc    esi
  41520c:	adc    eax,0xf5b63f79
  415211:	shl    bh,0x5
  415214:	pcmpgtb mm1,QWORD PTR cs:[eax+0x45e74bb8]
  41521c:	aaa    
  41521d:	test   BYTE PTR [edi-0x700cabb7],bh
  415223:	mov    dl,0x6d
  415225:	inc    esi
  415226:	fst    DWORD PTR ds:0xfdcb9bfc
  41522c:	xor    ch,BYTE PTR [ebx-0x5]
  41522f:	xor    eax,0x5b440cc0
  415234:	sub    BYTE PTR [edi+0x18],0x9c
  415238:	rcr    BYTE PTR [edx],0x24
  41523b:	push   eax
  41523c:	jge    0x41520d
  41523e:	jg     0x415204
  415240:	or     dh,BYTE PTR [edi+0x76]
  415243:	dec    ecx
  415244:	mov    ebx,0x53d4042e
  415249:	lea    esi,[ecx+0x5a4b5391]
  41524f:	xchg   edx,eax
  415250:	or     eax,0x92bbf9c6
  415255:	dec    esi
  415256:	push   ebx
  415257:	add    al,0x2e
  415259:	jmp    0xa5f3:0xf872988a
  415260:	bound  esp,QWORD PTR [esi-0x2eb6b744]
  415266:	mov    DWORD PTR [edx-0x6ddc2c05],edi
  41526c:	mov    ebx,0x84074315
  415271:	call   0x387e070b
  415276:	stc    
  415277:	sub    BYTE PTR [edi+eax*2+0x7b720bb1],bl
  41527e:	aas    
  41527f:	test   BYTE PTR [esi+eax*8+0x26],al
  415283:	jnp    0x41521e
  415285:	sub    al,0xab
  415287:	mov    al,0xb9
  415289:	push   ds
  41528a:	pop    ebp
  41528b:	int    0xb1
  41528d:	mov    al,ds:0x88a7022e
  415292:	aam    0x8
  415294:	push   ss
  415295:	cld    
  415296:	icebp  
  415297:	jmp    0x5071:0x559128e0
  41529e:	fs stos BYTE PTR es:[edi],al
  4152a0:	cmp    eax,0x7312f990
  4152a5:	cmp    dh,BYTE PTR [ebp+0x1b]
  4152a8:	adc    eax,0xe70d9491
  4152ad:	rcr    DWORD PTR [edi+0x43],0xfc
  4152b1:	pop    ss
  4152b2:	push   ecx
  4152b3:	iret   
  4152b4:	out    dx,al
  4152b5:	outs   dx,DWORD PTR ds:[esi]
  4152b6:	or     ecx,ebp
  4152b8:	scas   al,BYTE PTR es:[edi]
  4152b9:	jmp    0xa311:0xcf47d48b
  4152c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152c1:	int3   
  4152c2:	lahf   
  4152c3:	icebp  
  4152c4:	mov    ds:0xb01d9200,al
  4152c9:	icebp  
  4152ca:	adc    eax,0x898b9611
  4152cf:	jecxz  0x415304
  4152d1:	add    DWORD PTR ds:0x2d5341b3,eax
  4152d7:	sqrtps xmm0,xmm2
  4152da:	pop    edi
  4152db:	pop    ss
  4152dc:	ret    
  4152dd:	xchg   esp,eax
  4152de:	dec    edx
  4152df:	sub    al,0x40
  4152e1:	jg     0x4152c8
  4152e3:	add    BYTE PTR [edi+0x8],ch
  4152e6:	cdq    
  4152e7:	adc    BYTE PTR [ebp-0x6a],bh
  4152ea:	xchg   esp,eax
  4152eb:	jae    0x415279
  4152ed:	aad    0x98
  4152ef:	loope  0x415332
  4152f1:	mov    edi,0xc99fde70
  4152f6:	test   eax,0x7996fcd4
  4152fb:	jmp    0x4152f5
  4152fd:	aaa    
  4152fe:	mov    edi,DWORD PTR [ecx-0x5d7fd7f3]
  415304:	cli    
  415305:	cmp    al,0x7a
  415307:	test   al,0x3c
  415309:	(bad)  
  41530a:	pop    ss
  41530b:	div    BYTE PTR [edi+0x7404a904]
  415311:	mov    ch,0x41
  415313:	std    
  415314:	sar    ah,0x39
  415317:	jl     0x415391
  415319:	xchg   DWORD PTR ds:0x8766ff01,ecx
  41531f:	cs sbb esp,edx
  415322:	popf   
  415323:	push   ss
  415324:	ja     0x4152e4
  415326:	cmp    edi,DWORD PTR [ecx-0x3957b1ca]
  41532c:	test   BYTE PTR [ebp+ecx*8+0x79ff4e3b],ah
  415333:	call   0xebfc26dc
  415338:	gs cmp eax,0x4cfcb64b
  41533e:	nop
  41533f:	ins    DWORD PTR es:[edi],dx
  415340:	and    BYTE PTR [edx-0xa419d41],dl
  415346:	arpl   WORD PTR [ebx],cx
  415348:	stc    
  415349:	hlt    
  41534a:	push   ebp
  41534b:	loop   0x4153b4
  41534d:	or     DWORD PTR [edi+0x175c72f3],eax
  415353:	cmp    BYTE PTR [edx+0x38],0x8b
  415357:	jp     0x415309
  415359:	fld    DWORD PTR [esp+eiz*4+0x57c8d93]
  415360:	(bad)  
  415361:	fist   WORD PTR [ebp+0x3]
  415364:	lods   eax,DWORD PTR ds:[esi]
  415365:	adc    eax,0x868af471
  41536a:	das    
  41536b:	std    
  41536c:	mov    ah,BYTE PTR [ebx-0x15]
  41536f:	pop    edx
  415370:	cmc    
  415371:	out    0x27,eax
  415373:	retf   0x700b
  415376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415377:	imul   edi,edi,0x31d8da8e
  41537d:	xchg   DWORD PTR [ecx],esp
  41537f:	cs stos BYTE PTR es:[edi],al
  415381:	repnz mov ds:0x8e92ca81,eax
  415387:	fstp   DWORD PTR [ebp+0x1b]
  41538a:	push   cs
  41538b:	sbb    DWORD PTR [ebx],eax
  41538d:	adc    DWORD PTR [edi-0x6b],ebx
  415390:	xor    al,0xc6
  415392:	xlat   BYTE PTR ds:[ebx]
  415393:	cli    
  415394:	pop    edx
  415395:	mov    esi,0x234b6d
  41539a:	inc    edi
  41539b:	rol    DWORD PTR [edi],1
  41539d:	and    BYTE PTR [ecx+0x7a9be4f8],0x46
  4153a4:	mov    eax,gs
  4153a6:	mov    ecx,ebp
  4153a8:	ja     0x415352
  4153aa:	jmp    0x21ce:0x5631d2a2
  4153b1:	cmp    BYTE PTR [edi-0x18a6b667],ah
  4153b7:	sbb    al,0xda
  4153b9:	rcl    BYTE PTR [ecx+edi*1],cl
  4153bc:	std    
  4153bd:	shl    BYTE PTR [ecx-0x2e8cf7ea],1
  4153c3:	pop    ecx
  4153c4:	jmp    0x415372
  4153c6:	or     ebx,DWORD PTR [eax-0x6e]
  4153c9:	ficomp DWORD PTR [ecx+0x13]
  4153cc:	aaa    
  4153cd:	leave  
  4153ce:	or     eax,0x96a1b587
  4153d3:	cli    
  4153d4:	inc    esi
  4153d5:	into   
  4153d6:	inc    esi
  4153d7:	jo     0x41535a
  4153d9:	bound  esi,QWORD PTR [esp+ebx*2+0x6e320868]
  4153e0:	and    ecx,DWORD PTR [esi+0x67]
  4153e3:	sub    DWORD PTR [esi-0x48016dce],esp
  4153e9:	out    0xa6,al
  4153eb:	lds    edx,FWORD PTR [bp+si]
  4153ee:	mov    eax,ds:0x2f86bb40
  4153f3:	push   es
  4153f4:	(bad)  
  4153f5:	in     eax,0x86
  4153f7:	xchg   ebx,eax
  4153f8:	or     dh,BYTE PTR [edx]
  4153fa:	push   cs
  4153fb:	sbb    bl,al
  4153fd:	or     al,0x2a
  4153ff:	fdivr  DWORD PTR [ecx-0x6a5217fe]
  415405:	or     edx,DWORD PTR [esi]
  415407:	add    ebx,DWORD PTR [edx+0x4e262aaa]
  41540d:	fcomi  st,st(6)
  41540f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415410:	mov    cl,0x10
  415412:	scas   al,BYTE PTR es:[edi]
  415413:	xchg   ecx,eax
  415414:	aam    0x84
  415416:	or     DWORD PTR ds:0x7903547b,0x145d214
  415420:	jg     0x415449
  415422:	lds    esp,FWORD PTR [edx+0x5f]
  415425:	ror    BYTE PTR [eax+0x46675288],0x74
  41542c:	hlt    
  41542d:	pushf  
  41542e:	cli    
  41542f:	fld    QWORD PTR [ebx-0x4db9f171]
  415435:	enter  0x9b6a,0x4b
  415439:	retf   
  41543a:	pop    ebp
  41543b:	(bad)  
  41543d:	nop
  41543e:	inc    DWORD PTR [eax]
  415440:	sti    
  415441:	cmp    ebx,DWORD PTR [ecx-0x3e]
  415444:	sub    BYTE PTR [ebx-0x2b8e4358],dl
  41544a:	push   esp
  41544b:	inc    esi
  41544c:	(bad)  
  41544d:	cli    
  41544e:	pop    esp
  41544f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415450:	mov    eax,0xf72661ef
  415455:	retf   
  415456:	jmp    0x527d366f
  41545b:	pusha  
  41545c:	stos   DWORD PTR es:[edi],eax
  41545d:	push   esp
  41545e:	mov    ?,eax
  415460:	jo     0x4153e8
  415462:	add    edi,DWORD PTR [edi+0x5deb3317]
  415468:	push   edi
  415469:	and    eax,0x2ad3469c
  41546e:	adc    DWORD PTR [ecx],0x27
  415471:	push   ecx
  415472:	fisttp DWORD PTR [ebp+0x4f]
  415475:	push   esp
  415476:	aam    0x98
  415478:	sub    eax,0xc95059ad
  41547d:	ds mov al,0x9b
  415480:	retf   
  415481:	mov    ds:0xe0a7ff0c,eax
  415486:	push   edi
  415487:	add    BYTE PTR [ebp-0x46],bl
  41548a:	jbe    0x4154d7
  41548c:	leave  
  41548d:	test   BYTE PTR [esi],0x82
  415490:	and    DWORD PTR ds:0x56d90e51,edx
  415496:	fst    DWORD PTR ds:0xb5ccd6ba
  41549c:	add    DWORD PTR ds:0x795c5bb5,ebp
  4154a2:	push   cs
  4154a3:	cmc    
  4154a4:	outs   dx,DWORD PTR ds:[esi]
  4154a5:	fnstsw WORD PTR [eax-0x10295daa]
  4154ab:	or     BYTE PTR [edi+0x77],0x8c
  4154af:	xchg   esi,eax
  4154b0:	mov    ecx,0xf99bbf3a
  4154b5:	sti    
  4154b6:	pop    ebp
  4154b7:	(bad)
  4154bb:	add    dh,BYTE PTR [edx+0x4]
  4154be:	mov    cl,0x44
  4154c0:	lahf   
  4154c1:	cmp    eax,0xc0569454
  4154c6:	cld    
  4154c7:	sbb    BYTE PTR [edi-0x29016657],dl
  4154cd:	pop    es
  4154ce:	sbb    BYTE PTR [esp+eax*2+0x3b],al
  4154d2:	jb     0x415495
  4154d4:	jmp    0x41548e
  4154d6:	fsubr  QWORD PTR [ebx]
  4154d8:	jnp    0x41545b
  4154da:	test   al,0x12
  4154dc:	aaa    
  4154dd:	mov    bl,0x8e
  4154df:	in     eax,0x51
  4154e1:	es aad 0xf5
  4154e4:	popf   
  4154e5:	sbb    ebp,ebp
  4154e7:	adc    eax,0xf3b526ae
  4154ec:	fwait
  4154ed:	mov    edi,0xcc6c49bc
  4154f2:	not    dh
  4154f4:	fdivr  st,st(6)
  4154f6:	dec    esi
  4154f7:	push   ds
  4154f8:	inc    ebx
  4154f9:	add    eax,0x724aafdb
  4154ff:	pushf  
  415500:	ret    0x41ee
  415503:	jno    0x415537
  415505:	nop
  415506:	retf   
  415507:	lods   al,BYTE PTR ds:[esi]
  415508:	mov    ecx,0x2cb7d282
  41550d:	in     eax,dx
  41550e:	lea    eax,[eax+0x675b978f]
  415514:	int3   
  415515:	sbb    al,BYTE PTR [ebx-0x72]
  415518:	xchg   DWORD PTR [eax-0x3abf4564],esp
  41551e:	sub    eax,0x5ff4509f
  415523:	push   0xffffffca
  415525:	in     al,0xf5
  415527:	cmp    eax,DWORD PTR [ebp-0x7bcf3c]
  41552d:	mov    ch,0x4f
  41552f:	mov    ch,0x1b
  415531:	pop    ds
  415532:	cmp    ebx,edx
  415534:	aaa    
  415535:	lods   al,BYTE PTR ds:[esi]
  415536:	mov    ebp,0xb9c17e3d
  41553b:	or     esp,DWORD PTR [ecx]
  41553d:	dec    ebx
  41553e:	stos   DWORD PTR es:[edi],eax
  41553f:	xor    eax,0x1868e12f
  415544:	push   0xffffffdd
  415546:	mov    edi,0xa50131db
  41554b:	mov    al,0xc8
  41554d:	mov    ebx,DWORD PTR [ecx+0x128e7e6a]
  415553:	test   al,0x78
  415555:	jge    0x41555d
  415557:	adc    al,0x72
  415559:	bound  esp,QWORD PTR [ecx+0x53]
  41555c:	cld    
  41555d:	jge    0x4155ca
  41555f:	push   cs
  415560:	push   0xffffffa6
  415562:	mov    dl,0x72
  415564:	xchg   edi,eax
  415565:	push   cs
  415566:	cmp    dl,BYTE PTR [edi-0x7e5457cf]
  41556c:	outs   dx,DWORD PTR ds:[esi]
  41556d:	sub    ebp,DWORD PTR [esp+eax*1-0x7b]
  415571:	lea    edx,[ebp-0x53]
  415574:	div    BYTE PTR [edx-0xed436ab]
  41557a:	je     0x4154fd
  41557c:	out    dx,eax
  41557d:	mov    eax,0xc168a9b8
  415582:	mov    eax,ds:0xc9cfb123
  415587:	and    eax,0x17f1b546
  41558c:	ret    
  41558d:	cmp    BYTE PTR [esp+edi*8],dh
  415590:	inc    esi
  415591:	xchg   dl,ch
  415593:	push   0xffffffc2
  415595:	push   ebp
  415596:	dec    ebx
  415597:	stos   DWORD PTR es:[edi],eax
  415598:	fst    DWORD PTR ds:0x284a0fa3
  41559e:	mov    bl,0xa2
  4155a0:	popf   
  4155a1:	pop    es
  4155a2:	imul   ecx,DWORD PTR [eax-0x77],0x320e8fa4
  4155a9:	push   0x6a
  4155ab:	or     BYTE PTR [edi+ecx*1-0x4d],0x13
  4155b0:	xchg   edi,eax
  4155b1:	and    BYTE PTR [ebx-0x1a252ca6],0x19
  4155b8:	pop    esp
  4155b9:	cmp    BYTE PTR [ebp-0x30],dl
  4155bc:	lock data16 mov bh,0x7f
  4155c0:	inc    ebx
  4155c1:	mov    ds:0x665f513e,al
  4155c6:	and    ebx,DWORD PTR [ebp+0x60]
  4155c9:	pop    esi
  4155ca:	push   esi
  4155cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155cc:	in     al,dx
  4155cd:	fcomi  st,st(5)
  4155cf:	jecxz  0x4155e2
  4155d1:	(bad)  
  4155d2:	lea    ebp,[ebx+0x5e]
  4155d5:	(bad)  
  4155d6:	es in  eax,dx
  4155d8:	sbb    esp,ebx
  4155da:	push   ds
  4155db:	sub    al,0x96
  4155dd:	popf   
  4155de:	mov    ch,0x2b
  4155e0:	inc    edi
  4155e1:	ret    0x899a
  4155e4:	cdq    
  4155e5:	xchg   esp,eax
  4155e6:	popf   
  4155e7:	jp     0x415665
  4155e9:	aaa    
  4155ea:	mov    ds:0x955c3be,al
  4155ef:	repz loope 0x4155b9
  4155f2:	add    BYTE PTR [ebx-0x6],dh
  4155f5:	out    dx,eax
  4155f6:	pusha  
  4155f7:	dec    edi
  4155f8:	gs fs pop ecx
  4155fb:	dec    eax
  4155fc:	mov    ecx,0xfb927eb1
  415601:	push   ds
  415602:	dec    ecx
  415603:	sbb    dh,dh
  415605:	rol    DWORD PTR [esp+eax*2-0x28a5cb42],0x42
  41560d:	jecxz  0x415606
  41560f:	xchg   edi,eax
  415610:	pushf  
  415611:	dec    ebx
  415612:	fstp   st(5)
  415614:	adc    eax,0xe462b690
  415619:	xchg   ecx,eax
  41561a:	ret    
  41561b:	(bad)  [ebx]
  41561d:	out    dx,eax
  41561e:	aas    
  41561f:	xor    al,BYTE PTR [ebx+0x5f]
  415622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415623:	sbb    eax,0x232e5c7e
  415628:	gs cmp al,0x0
  41562b:	and    WORD PTR [ebx],sp
  41562e:	es ss hlt 
  415631:	(bad)  
  415632:	dec    ecx
  415633:	fistp  QWORD PTR [esp+ecx*1-0x5f]
  415637:	add    DWORD PTR [ecx-0x48],0xffffff9b
  41563b:	gs xchg ebp,eax
  41563d:	cmp    cl,BYTE PTR [ebx-0x37c87e03]
  415643:	dec    esi
  415644:	rol    DWORD PTR [edx-0x168cef52],0x97
  41564b:	ss pop esp
  41564d:	ror    BYTE PTR [edx-0x5e232c07],0xfa
  415654:	stos   BYTE PTR es:[edi],al
  415655:	dec    ecx
  415656:	shl    cl,0x75
  415659:	cmp    al,0xa5
  41565b:	sub    al,0xfa
  41565d:	aad    0xc7
  41565f:	push   ecx
  415660:	out    0xd9,al
  415662:	js     0x415654
  415664:	xor    DWORD PTR [edi+eax*4],eax
  415667:	push   es
  415668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415669:	int3   
  41566a:	or     esi,0xe783c302
  415670:	push   cs
  415671:	sbb    esi,edx
  415673:	jmp    0xd37b2b80
  415678:	fld    DWORD PTR ds:0x3188162f
  41567e:	xchg   esi,eax
  41567f:	add    edi,0x3
  415682:	fwait
  415683:	sub    al,0x12
  415685:	mov    WORD PTR [eax-0x5],fs
  415688:	cmp    esi,DWORD PTR [ebp+0x52b072ec]
  41568e:	aad    0x7
  415690:	adc    eax,0x4f957728
  415695:	fst    DWORD PTR [ebx]
  415697:	push   esp
  415698:	mov    al,0xc0
  41569a:	hlt    
  41569b:	inc    esp
  41569c:	mov    al,ds:0x37eeefa3
  4156a1:	cs pop ebp
  4156a3:	(bad)  
  4156a5:	jb     0x415665
  4156a7:	outs   dx,DWORD PTR ds:[esi]
  4156a8:	mov    esi,DWORD PTR [eax]
  4156aa:	sub    al,0x9a
  4156ac:	imul   esi,DWORD PTR [esi+0x16],0xf21d6c7a
  4156b3:	mov    ds:0xfbb3bed7,al
  4156b8:	mov    bh,0xf3
  4156ba:	mov    edi,0x4af93e3d
  4156bf:	call   0x69e1637a
  4156c4:	jae    0x415700
  4156c6:	lea    edx,[esi+eax*1+0xa]
  4156ca:	mov    eax,DWORD PTR [edx+ecx*1]
  4156cd:	jl     0x415661
  4156cf:	fwait
  4156d0:	test   DWORD PTR [esi],edx
  4156d2:	mov    dh,0x72
  4156d4:	test   BYTE PTR [edx-0x43],al
  4156d7:	bound  edx,QWORD PTR ds:0x4cca3d20
  4156dd:	mov    eax,0x454835cb
  4156e2:	mov    esi,0x449ea435
  4156e7:	jne    0x4156f0
  4156e9:	mov    ds:0xab370610,al
  4156ee:	rol    BYTE PTR [ecx+edi*4],1
  4156f1:	nop
  4156f2:	xor    ah,BYTE PTR [ebx+0x17]
  4156f5:	cmp    al,0x29
  4156f7:	add    eax,0xdb038b7e
  4156fc:	or     BYTE PTR [edx+0x36],ah
  4156ff:	push   ss
  415700:	pusha  
  415701:	cmp    BYTE PTR [ecx],ah
  415703:	(bad)  
  415704:	cmc    
  415705:	adc    al,0x71
  415707:	pop    esi
  415708:	mov    al,0x59
  41570a:	and    bl,cl
  41570c:	and    BYTE PTR [edx+0x30],bh
  41570f:	repz push 0x37d48050
  415715:	mov    ecx,0xa04e8fa0
  41571a:	ja     0x415751
  41571c:	in     al,dx
  41571d:	in     al,dx
  41571e:	ja     0x4156e8
  415720:	mov    bh,0x73
  415722:	push   ds
  415723:	pop    ebp
  415724:	(bad)  [ebx]
  415726:	shr    eax,0xc2
  415729:	jnp    0x4157a6
  41572b:	push   es
  41572c:	jne    0x415769
  41572e:	inc    edi
  41572f:	xor    edx,edx
  415731:	stos   BYTE PTR es:[edi],al
  415732:	push   ebp
  415733:	or     BYTE PTR [ebp+eax*8-0x7b7b9d1d],ch
  41573a:	push   esi
  41573b:	inc    edx
  41573c:	pop    eax
  41573d:	sub    bl,cl
  41573f:	and    BYTE PTR ds:0xfa94be24,al
  415745:	inc    ebp
  415746:	jp     0x415733
  415748:	ficom  WORD PTR [ebp-0x3fa50954]
  41574e:	out    0x54,al
  415750:	ja     0x41579a
  415752:	int3   
  415753:	and    BYTE PTR [eax+edx*4-0x58],0x1a
  415758:	retf   
  415759:	dec    ecx
  41575a:	(bad)  
  41575b:	ss jecxz 0x415709
  41575e:	mov    ss,WORD PTR [ebp+0x53]
  415761:	sub    eax,0x6f5bad48
  415766:	out    0x75,eax
  415768:	xchg   edi,eax
  415769:	cmp    eax,0x6c04cea1
  41576e:	stc    
  41576f:	xchg   ebp,eax
  415770:	aaa    
  415771:	mov    esi,0x85bbf37c
  415776:	out    dx,al
  415777:	add    DWORD PTR [edx],edx
  415779:	xor    DWORD PTR [edx-0x1b],ebp
  41577c:	push   ecx
  41577d:	sub    DWORD PTR [edx],0xb75e62e1
  415783:	sti    
  415784:	rol    bl,cl
  415786:	jae    0x415793
  415788:	cmp    cl,BYTE PTR ds:0x65a2cd5f
  41578e:	and    ebx,DWORD PTR [eax-0x5a]
  415791:	popf   
  415792:	lock in al,0xdb
  415795:	dec    eax
  415796:	xchg   ecx,eax
  415797:	and    al,0xb8
  415799:	xor    ah,BYTE PTR [esi]
  41579b:	mov    ebp,es
  41579d:	retf   0x292a
  4157a0:	dec    eax
  4157a1:	add    al,al
  4157a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157a4:	fcmovnb st,st(1)
  4157a6:	hlt    
  4157a7:	(bad)  
  4157a8:	ss ffree st(4)
  4157ab:	in     al,dx
  4157ac:	(bad)  
  4157ad:	in     al,0x88
  4157af:	(bad)  
  4157b0:	pusha  
  4157b1:	or     BYTE PTR [eax-0x8b8f33f],ch
  4157b7:	ficom  DWORD PTR [ebp+edx*8-0x1]
  4157bb:	fidivr WORD PTR ds:0x21a8e825
  4157c1:	cmp    BYTE PTR ds:0x6858f81d,0xcd
  4157c8:	push   cs
  4157c9:	cmp    eax,0x214fb4df
  4157ce:	pop    esi
  4157cf:	mov    ds:0xa50fd642,eax
  4157d4:	mov    ch,0x9f
  4157d6:	in     al,0xd0
  4157d8:	pop    ds
  4157d9:	jmp    0xf3b9:0x6f9e7532
  4157e0:	adc    cl,dh
  4157e2:	int    0x21
  4157e4:	addr16 daa 
  4157e6:	hlt    
  4157e7:	lea    eax,[ecx]
  4157e9:	or     DWORD PTR [ebx+edi*1+0x1],0x67b20319
  4157f1:	jae    0x4157b5
  4157f3:	pop    esi
  4157f4:	jmp    0x3a955107
  4157f9:	dec    esi
  4157fa:	icebp  
  4157fb:	inc    ebp
  4157fc:	and    dh,BYTE PTR [eax-0x574e503c]
  415802:	pusha  
  415803:	add    eax,0x622f2eca
  415808:	jg     0x41587d
  41580a:	sbb    DWORD PTR ds:0xb9059bd4,ecx
  415810:	sub    al,0x93
  415812:	xchg   esp,eax
  415813:	add    DWORD PTR [ecx+0x58a99c81],0x76
  41581a:	outs   dx,DWORD PTR ds:[esi]
  41581b:	out    dx,eax
  41581c:	rcr    BYTE PTR [edi+ebx*4+0x16],0xe
  415821:	cmp    al,0x42
  415823:	push   esi
  415824:	xor    edx,DWORD PTR [esi]
  415826:	cwde   
  415827:	cmp    al,0xb0
  415829:	les    edx,FWORD PTR [eax-0x11]
  41582c:	inc    edx
  41582d:	jb     0x415870
  41582f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415830:	jge    0x415877
  415832:	add    BYTE PTR [ebx],dl
  415834:	pop    ecx
  415835:	push   0xffffff95
  415837:	pop    ds
  415838:	push   ss
  415839:	mov    BYTE PTR [ebp+eiz*4+0x14],dh
  41583d:	mov    al,0x17
  41583f:	mov    dl,BYTE PTR [eax-0x7c]
  415842:	aas    
  415843:	(bad)  
  415844:	in     al,dx
  415845:	cmp    ecx,DWORD PTR [ebx+ebx*2+0xa]
  415849:	call   0xb3e0:0x6ea78508
  415850:	adc    BYTE PTR [esi+eiz*8+0x5936df1d],dh
  415857:	ss es std 
  41585a:	add    BYTE PTR [edx-0x3ec213],dh
  415860:	out    dx,eax
  415861:	(bad)  
  415862:	in     eax,dx
  415863:	cmp    bh,BYTE PTR ds:0xf6fafd9f
  415869:	div    DWORD PTR [edx-0x43f220df]
  41586f:	jecxz  0x4158a7
  415871:	mov    BYTE PTR [eax],cl
  415873:	cdq    
  415874:	outs   dx,BYTE PTR ds:[esi]
  415875:	jmp    0x415895
  415877:	iret   
  415878:	sbb    al,0xff
  41587a:	dec    ebx
  41587b:	push   ebx
  41587c:	int3   
  41587d:	xchg   esi,eax
  41587e:	jp     0x415854
  415880:	outs   dx,BYTE PTR ds:[esi]
  415881:	xor    BYTE PTR [edi+0x4e],0xae
  415885:	xor    al,0x70
  415887:	adc    al,0x56
  415889:	xchg   edx,eax
  41588a:	xchg   ebx,eax
  41588b:	adc    esp,DWORD PTR [esp+ebx*4]
  41588e:	nop
  41588f:	aas    
  415890:	fimul  DWORD PTR [eax]
  415892:	aaa    
  415893:	mov    ah,0xd6
  415895:	sahf   
  415896:	xchg   ebx,eax
  415897:	cwde   
  415898:	aaa    
  415899:	sti    
  41589a:	out    dx,al
  41589b:	shl    BYTE PTR ds:0xfcace879,0xc6
  4158a2:	pop    ebp
  4158a3:	mov    edx,0xe630abfb
  4158a8:	mov    ds:0x60e92aab,eax
  4158ad:	int3   
  4158ae:	std    
  4158af:	add    al,0xfd
  4158b1:	repnz mov bl,bl
  4158b4:	xchg   esi,eax
  4158b5:	add    eax,0xae90a994
  4158ba:	push   edx
  4158bb:	mov    eax,ds:0x45e8154e
  4158c0:	xor    al,0x81
  4158c2:	loopne 0x415859
  4158c4:	dec    edx
  4158c5:	xchg   ebx,eax
  4158c6:	pop    edi
  4158c7:	sub    edx,ecx
  4158c9:	aam    0x18
  4158cb:	dec    esi
  4158cc:	out    dx,eax
  4158cd:	pop    es
  4158ce:	addr16 mov esp,0xf47423f8
  4158d4:	cli    
  4158d5:	jmp    0xc2d241c
  4158da:	rcl    DWORD PTR [edx-0x60],0x84
  4158de:	mov    al,ds:0x5aa2f77e
  4158e3:	rcr    BYTE PTR [ecx-0x7],0x8e
  4158e7:	(bad)  
  4158e8:	dec    eax
  4158e9:	push   esi
  4158ea:	mov    eax,ds:0xbc5f8ce1
  4158ef:	pushf  
  4158f0:	push   ebp
  4158f1:	push   ebp
  4158f2:	sbb    ebp,DWORD PTR [esi]
  4158f4:	jp     0x415950
  4158f6:	mov    ebp,0xaada675d
  4158fb:	inc    ebx
  4158fc:	lahf   
  4158fd:	jae    0x415964
  4158ff:	lods   eax,DWORD PTR ds:[esi]
  415900:	je     0x4158e7
  415902:	(bad)  
  415903:	jbe    0x41590c
  415905:	faddp  st(4),st
  415907:	pop    ebp
  415908:	lock imul esp,DWORD PTR [ebp+0x4c],0xffffffd4
  41590d:	push   ds
  41590e:	or     al,0xe2
  415910:	push   es
  415911:	mov    ecx,0xa18a0101
  415916:	add    BYTE PTR [edi-0x75],ah
  415919:	mov    ds:0x3f722347,al
  41591e:	jge    0x41595d
  415920:	(bad)  
  415921:	and    eax,esp
  415923:	fimul  WORD PTR ds:0xac2bf3dc
  415929:	jmp    0x509c:0xa96df622
  415930:	rcr    BYTE PTR [edx+0x4f],cl
  415933:	mov    eax,0xac0f9c72
  415938:	mov    ebp,0x119e08fa
  41593d:	xchg   ebx,eax
  41593e:	aam    0x85
  415940:	fiadd  WORD PTR [edi]
  415942:	test   bl,cl
  415944:	ds cdq 
  415946:	out    0xc8,al
  415948:	fnstsw WORD PTR [esi-0x36b18b6b]
  41594e:	xor    BYTE PTR [esi],ah
  415950:	xchg   esi,eax
  415951:	and    dh,al
  415953:	(bad)  
  415954:	retf   
  415955:	aas    
  415956:	jmp    0x4158e0
  415958:	hlt    
  415959:	ins    DWORD PTR es:[edi],dx
  41595a:	jmp    0x5970:0x1adbd6f9
  415961:	and    eax,0x5e233726
  415966:	arpl   WORD PTR [esi],cx
  415968:	das    
  415969:	addr16 push 0xffffff99
  41596c:	mov    BYTE PTR [ecx+0x59],dl
  41596f:	nop
  415970:	into   
  415971:	push   esi
  415972:	cdq    
  415973:	xchg   edx,eax
  415974:	stos   BYTE PTR es:[edi],al
  415975:	dec    edi
  415976:	inc    ebx
  415977:	mov    esp,gs
  415979:	and    cl,BYTE PTR [edi+eiz*2]
  41597c:	rcl    BYTE PTR [esi+0x31],cl
  41597f:	shr    bh,1
  415981:	jns    0x41596c
  415983:	mov    dl,0x8d
  415985:	xchg   DWORD PTR [esi],edi
  415987:	xor    dl,BYTE PTR [ebp-0x599bbc60]
  41598d:	inc    ebx
  41598e:	test   BYTE PTR [eax-0x26627942],0xfc
  415995:	test   DWORD PTR [edi+0x1f],0x72779053
  41599c:	pop    ss
  41599d:	in     al,dx
  41599e:	xor    dh,al
  4159a0:	jns    0x415a0f
  4159a2:	push   edi
  4159a3:	mov    bh,0x73
  4159a5:	dec    edi
  4159a6:	add    eax,0x58c01f90
  4159ab:	std    
  4159ac:	js     0x4159aa
  4159ae:	jp     0x4159ab
  4159b0:	mov    ds:0x4501ef8d,al
  4159b5:	and    al,BYTE PTR [eax]
  4159b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159b8:	ds dec edi
  4159ba:	xor    al,0x9f
  4159bc:	retf   0x9762
  4159bf:	jne    0x415a36
  4159c1:	pop    eax
  4159c2:	call   0x5b76:0x511f177a
  4159c9:	mov    BYTE PTR [ebp+0xa],dl
  4159cc:	mov    ds:0x7fed4ae7,eax
  4159d1:	or     dh,BYTE PTR [ebp+ecx*2-0x34a44bc3]
  4159d8:	mov    esp,0xcab92e5
  4159dd:	cmp    esp,0x6b
  4159e0:	outs   dx,DWORD PTR ds:[esi]
  4159e1:	inc    eax
  4159e2:	test   DWORD PTR [ebp+0x57],esp
  4159e5:	js     0x4159ec
  4159e7:	mov    al,ds:0x12c8ad96
  4159ed:	cmp    esp,DWORD PTR ds:[eax+ebp*1-0x70]
  4159f2:	les    ecx,FWORD PTR [ebx]
  4159f4:	lds    eax,FWORD PTR [ecx]
  4159f6:	loope  0x415a5e
  4159f8:	jg     0x415a65
  4159fa:	xchg   edx,eax
  4159fb:	xlat   BYTE PTR ds:[ebx]
  4159fc:	lahf   
  4159fd:	fldenv [edi]
  4159ff:	inc    ebp
  415a00:	(bad)
  415a03:	xchg   DWORD PTR [ecx-0x127ab4e9],edx
  415a09:	fwait
  415a0a:	hlt    
  415a0b:	pop    ds
  415a0c:	fsub   DWORD PTR [edx]
  415a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a0f:	clc    
  415a10:	int3   
  415a11:	jg     0x415a71
  415a13:	(bad)  
  415a14:	sahf   
  415a15:	gs icebp 
  415a17:	mov    ch,0x7e
  415a19:	or     ah,BYTE PTR [esi+eax*1+0xf]
  415a1d:	call   0x6be3:0xe3230c98
  415a24:	fisub  DWORD PTR ds:0xa9991d22
  415a2a:	aad    0x2
  415a2c:	test   al,0x2
  415a2e:	and    ebx,ecx
  415a30:	cmp    DWORD PTR [eax-0x69],0x51
  415a34:	test   eax,0xab8a558e
  415a39:	iret   
  415a3a:	xor    eax,0xd1006bf3
  415a3f:	arpl   WORD PTR [ecx+0x628ffdfe],bx
  415a45:	push   edx
  415a46:	jb     0x4159cb
  415a48:	(bad)  
  415a49:	jns    0x4159e3
  415a4b:	xchg   BYTE PTR [edi-0x5a],al
  415a4e:	addr16 test ah,ch
  415a51:	jle    0x4159ea
  415a53:	push   edi
  415a54:	adc    DWORD PTR [esi],0x39051a54
  415a5a:	mov    fs,WORD PTR [edi-0x7f1a53f3]
  415a60:	sub    bh,ah
  415a62:	fs push ss
  415a64:	mov    dh,0x64
  415a66:	pop    edi
  415a67:	pop    ds
  415a68:	dec    esp
  415a69:	pop    ebx
  415a6a:	dec    edx
  415a6b:	inc    edi
  415a6c:	std    
  415a6d:	xchg   ebp,esp
  415a6f:	or     eax,0x13b46fec
  415a74:	jg     0x415ab0
  415a76:	mov    WORD PTR [edi+edi*8-0x6f],cs
  415a7a:	xchg   esi,eax
  415a7b:	cmp    eax,DWORD PTR [edx+0x4f]
  415a7e:	pop    ecx
  415a7f:	test   eax,0xdfd34b2c
  415a84:	sbb    al,0xf6
  415a86:	shl    DWORD PTR [eax],cl
  415a88:	imul   eax,DWORD PTR [eax+0x2a],0xffffff8c
  415a8c:	or     BYTE PTR [ebp-0x4d],dh
  415a8f:	xchg   edi,eax
  415a90:	pop    ebp
  415a91:	sbb    BYTE PTR [edi],bl
  415a93:	repz sub al,0x60
  415a96:	sbb    BYTE PTR [ebx],ah
  415a98:	sub    ebx,eax
  415a9a:	push   0xb1431047
  415a9f:	fdivr  st,st(4)
  415aa1:	enter  0xf9b2,0xf0
  415aa5:	pop    eax
  415aa6:	sbb    BYTE PTR [eax],cl
  415aa8:	ret    
  415aa9:	(bad)  
  415aab:	push   edi
  415aac:	fld    DWORD PTR [esi-0xf4c0120]
  415ab2:	idiv   BYTE PTR [ebp-0x76d2806]
  415ab8:	jl     0x415acc
  415aba:	dec    esp
  415abb:	sub    ebp,ecx
  415abd:	ins    DWORD PTR es:[edi],dx
  415abe:	xor    BYTE PTR [ecx-0x6d],al
  415ac1:	dec    ecx
  415ac2:	fucomi st,st(6)
  415ac4:	lods   eax,DWORD PTR ds:[esi]
  415ac5:	scas   eax,DWORD PTR es:[edi]
  415ac6:	div    BYTE PTR [ebp+0x78]
  415ac9:	mov    bh,0x75
  415acb:	(bad)  
  415acc:	loop   0x415ac9
  415ace:	sub    al,BYTE PTR [edx-0x3ba45a1a]
  415ad4:	(bad)  
  415ad5:	cmp    ch,BYTE PTR [ecx+0x8]
  415ad8:	inc    esi
  415ad9:	gs cmc 
  415adb:	xor    al,0xe6
  415add:	test   BYTE PTR [ebx+0x4f098720],bl
  415ae3:	mov    ebx,0x5c8898ff
  415ae8:	jo     0x415b58
  415aea:	fsubr  DWORD PTR [edi+0x1e]
  415aed:	stos   DWORD PTR es:[edi],eax
  415aee:	and    BYTE PTR [edi+0x68e70252],ah
  415af4:	shr    BYTE PTR [edi],cl
  415af6:	pop    ebx
  415af7:	or     al,0xfb
  415af9:	addr16 retf 0x8d39
  415afd:	cdq    
  415afe:	adc    esi,0xffffff87
  415b01:	clc    
  415b02:	mov    DWORD PTR [esi+0x7521c836],ecx
  415b08:	pop    esp
  415b09:	cld    
  415b0a:	inc    ebp
  415b0b:	push   0xfffffffe
  415b0d:	jmp    eax
  415b0f:	mov    dl,0x58
  415b11:	mov    al,0xad
  415b13:	repz js 0x415aad
  415b16:	cld    
  415b17:	mov    dh,0x28
  415b19:	mov    es,edi
  415b1b:	ds test ebx,esi
  415b1e:	outs   dx,DWORD PTR ds:[esi]
  415b1f:	add    edi,ebp
  415b21:	ins    DWORD PTR es:[edi],dx
  415b22:	dec    eax
  415b23:	cmovns edx,DWORD PTR [eax+0x43d1b5d0]
  415b2a:	mov    bh,0xe6
  415b2c:	(bad)  
  415b2d:	daa    
  415b2e:	mov    ah,0x93
  415b30:	mov    eax,ds:0x23413faa
  415b35:	dec    ebp
  415b36:	add    BYTE PTR [edi],al
  415b38:	(bad)  
  415b39:	mov    cl,0x7c
  415b3b:	jb     0x415b3d
  415b3d:	in     al,0xd3
  415b3f:	stos   BYTE PTR es:[edi],al
  415b40:	xchg   edx,eax
  415b41:	push   ecx
  415b42:	mov    fs,WORD PTR [ecx+0x3715f909]
  415b48:	mov    dl,0xc6
  415b4a:	iret   
  415b4b:	mov    dl,0xbc
  415b4d:	mov    eax,ds:0xc9975e85
  415b52:	jnp    0x415b58
  415b54:	fs pop ds
  415b56:	and    eax,0x5a03ab2a
  415b5b:	and    eax,0x3abcad24
  415b60:	cmp    DWORD PTR [esi],0xbd4706f0
  415b66:	push   eax
  415b67:	stos   BYTE PTR es:[edi],al
  415b68:	mov    BYTE PTR [edi+0x1d2b3ae4],ah
  415b6e:	pop    ds
  415b6f:	rcl    DWORD PTR [edx+ebp*2+0x6f0ea431],cl
  415b76:	jmp    0x17d4:0x5650ba81
  415b7d:	sbb    BYTE PTR [ebx+0xe0019f0],0xb3
  415b84:	rol    al,1
  415b86:	mov    eax,DWORD PTR [edx+0x98181e0]
  415b8c:	adc    DWORD PTR [edx+eax*4],edi
  415b8f:	retf   0xdbc5
  415b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b93:	xor    bh,BYTE PTR [eax-0x5e91a81]
  415b99:	shl    al,1
  415b9b:	jne    0x415b20
  415b9d:	mov    ds:0x534b03a6,eax
  415ba2:	loop   0x415b4d
  415ba4:	stc    
  415ba5:	out    dx,eax
  415ba6:	mov    cl,0x8f
  415ba8:	iret   
  415ba9:	clc    
  415baa:	sbb    bh,BYTE PTR [ebp+0x1e011bcd]
  415bb0:	mov    al,0xd6
  415bb2:	sbb    ch,BYTE PTR [edi+edx*1-0x74]
  415bb6:	push   esp
  415bb7:	cmp    al,0x8a
  415bb9:	cld    
  415bba:	out    dx,al
  415bbb:	imul   eax,edi,0x8a8070b2
  415bc1:	arpl   WORD PTR [esi+0x37],bp
  415bc4:	jg     0x415b50
  415bc6:	sub    DWORD PTR [ecx],esi
  415bc8:	xlat   BYTE PTR ds:[ebx]
  415bc9:	sbb    DWORD PTR [ecx],esp
  415bcb:	retf   
  415bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bcd:	aas    
  415bce:	(bad)  
  415bcf:	(bad)  
  415bd0:	xlat   BYTE PTR ds:[ebx]
  415bd1:	mov    eax,ds:0x6b1b31b0
  415bd6:	mov    al,0x95
  415bd8:	sub    eax,0x30ebe79e
  415bdd:	or     BYTE PTR [edx+ecx*1-0x61],0xe5
  415be2:	ins    BYTE PTR es:[edi],dx
  415be3:	xchg   edi,eax
  415be4:	xor    eax,0x75cbcbb6
  415be9:	inc    ecx
  415bea:	dec    ecx
  415beb:	sub    DWORD PTR [edi],eax
  415bed:	dec    esi
  415bee:	aas    
  415bef:	mov    ebx,0x87aa2e3c
  415bf4:	xchg   bh,ah
  415bf6:	jns    0x415c13
  415bf8:	sahf   
  415bf9:	jns    0x415c0b
  415bfb:	daa    
  415bfc:	(bad)
  415bff:	call   0xcc0e28a1
  415c04:	cld    
  415c05:	pop    esp
  415c06:	leave  
  415c07:	mov    ds:0xcde69d05,eax
  415c0c:	ins    DWORD PTR es:[edi],dx
  415c0d:	lods   eax,DWORD PTR ds:[esi]
  415c0e:	push   0x26190b01
  415c13:	xchg   ch,ch
  415c15:	cmc    
  415c16:	cdq    
  415c17:	lds    esi,FWORD PTR [ecx+0x665721f1]
  415c1d:	xor    ebp,DWORD PTR [ecx]
  415c1f:	pop    edx
  415c20:	ins    DWORD PTR es:[edi],dx
  415c21:	mov    ecx,ebp
  415c23:	cs inc ecx
  415c25:	push   esp
  415c26:	outs   dx,BYTE PTR ds:[esi]
  415c27:	cmp    eax,DWORD PTR ds:[ecx-0x782f0656]
  415c2e:	pop    eax
  415c2f:	mov    edi,0xfcf42272
  415c34:	(bad)  
  415c36:	rol    BYTE PTR [edx-0x7c57d0ba],0x57
  415c3d:	inc    ebx
  415c3e:	fst    QWORD PTR [bx+di+0x6025]
  415c43:	jne    0x415bec
  415c45:	adc    DWORD PTR [edx],ebp
  415c47:	mov    eax,0x34abdba7
  415c4c:	vminpd ymm5,ymm5,YMMWORD PTR [eax-0x1539169f]
  415c54:	cld    
  415c55:	test   al,0xbb
  415c57:	xor    esp,DWORD PTR [edi]
  415c59:	call   0xb330c4b9
  415c5e:	not    DWORD PTR [ecx+esi*1+0x36]
  415c62:	xor    BYTE PTR [ecx+0x16f5ac08],al
  415c68:	in     al,dx
  415c69:	mov    eax,fs
  415c6b:	mov    ebp,edx
  415c6d:	push   ds
  415c6e:	cli    
  415c6f:	cmp    BYTE PTR [esi],cl
  415c71:	fst    st(2)
  415c73:	adc    eax,0x58bfda93
  415c78:	mov    ebx,0x69d659f2
  415c7d:	jbe    0x415c7b
  415c7f:	xor    al,0x6d
  415c81:	xchg   edi,eax
  415c82:	inc    esp
  415c83:	imul   ebp,esp,0x58d70740
  415c89:	xor    cl,BYTE PTR [eax-0x76]
  415c8c:	pop    es
  415c8d:	dec    edx
  415c8e:	pop    esp
  415c8f:	jno    0x415c60
  415c91:	shr    ch,0xcb
  415c94:	xchg   esp,eax
  415c95:	fimul  DWORD PTR [eax+0x52601321]
  415c9b:	nop
  415c9c:	push   edx
  415c9d:	mov    al,0xcb
  415c9f:	popa   
  415ca0:	jno    0x415c6e
  415ca2:	mov    WORD PTR [esi],?
  415ca4:	mov    bh,0x4d
  415ca6:	imul   eax,DWORD PTR [eax],0x2b0c99bf
  415cac:	loope  0x415d09
  415cae:	dec    esi
  415caf:	imul   eax,DWORD PTR [esi+0x6a924aa9],0x101358e
  415cb9:	stos   DWORD PTR es:[edi],eax
  415cba:	jbe    0x415d0b
  415cbc:	pop    edi
  415cbd:	aas    
  415cbe:	(bad)  
  415cbf:	aad    0x28
  415cc1:	jl     0x415ca2
  415cc3:	push   ecx
  415cc4:	jnp    0x415cbf
  415cc6:	add    BYTE PTR [esi-0x406ae779],al
  415ccc:	or     edi,DWORD PTR [esp+esi*1]
  415ccf:	(bad)  
  415cd0:	fidiv  DWORD PTR [esi]
  415cd2:	ror    BYTE PTR [ecx],cl
  415cd4:	loopne 0x415c6f
  415cd6:	arpl   WORD PTR [ecx+ebp*2+0x19],ax
  415cda:	daa    
  415cdb:	inc    esi
  415cdc:	inc    ecx
  415cdd:	add    ebx,DWORD PTR [ecx+0x6510b4fd]
  415ce3:	pop    ecx
  415ce4:	mov    bh,0x8c
  415ce6:	inc    esi
  415ce7:	push   es
  415ce8:	and    al,0x66
  415cea:	les    ebx,FWORD PTR [ebx-0x2d]
  415ced:	add    ecx,0x50
  415cf0:	and    cl,BYTE PTR [ebp+0x78528198]
  415cf6:	jbe    0x415ced
  415cf8:	cmp    DWORD PTR [ecx+eax*4],0x4ffa95a1
  415cff:	mov    ds:0xd9650f63,al
  415d04:	fdecstp 
  415d06:	scas   eax,DWORD PTR es:[edi]
  415d07:	add    al,0x7
  415d09:	mov    eax,0x9dcefd74
  415d0e:	jmp    0x415cd6
  415d10:	adc    DWORD PTR [ebp+0x47],ebx
  415d13:	dec    eax
  415d14:	jecxz  0x415cf3
  415d16:	or     al,0x6c
  415d18:	or     eax,0x905c3b90
  415d1d:	or     ebx,ebp
  415d1f:	xor    BYTE PTR [ecx-0x5be33976],bl
  415d25:	push   ss
  415d26:	cwde   
  415d27:	fild   QWORD PTR [ebx+0x43d953]
  415d2d:	mov    eax,ds:0xdcc3a6f
  415d32:	sti    
  415d33:	jnp    0x415cf0
  415d35:	add    BYTE PTR [edx+0x70],0xb8
  415d39:	mov    al,ds:0x76384b5c
  415d3e:	pusha  
  415d3f:	and    eax,0x771cf11a
  415d44:	inc    ecx
  415d45:	cdq    
  415d46:	(bad)  
  415d47:	and    DWORD PTR [ecx-0x6e],edx
  415d4a:	mov    esp,0x3eaa295b
  415d4f:	sbb    eax,0xa996893a
  415d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d56:	inc    ebp
  415d57:	cmp    dl,ah
  415d59:	int    0x22
  415d5b:	clc    
  415d5c:	sub    DWORD PTR [edx-0x53264f43],ebx
  415d62:	int3   
  415d63:	mov    cl,BYTE PTR [esi]
  415d65:	mov    ecx,DWORD PTR [eax]
  415d67:	imul   ecx,DWORD PTR [esi],0xfd5d5843
  415d6d:	mov    al,ds:0xff2616c6
  415d72:	sar    DWORD PTR [ebp+0x4e],1
  415d75:	pop    ds
  415d76:	xor    ch,BYTE PTR [edi+0x4a]
  415d79:	push   0xad0373f1
  415d7e:	sub    ebp,DWORD PTR [edi]
  415d80:	ja     0x415db2
  415d82:	mov    ds:0x323f0150,eax
  415d87:	gs mov esp,0x45651eb2
  415d8d:	dec    esp
  415d8e:	pushf  
  415d8f:	mov    eax,0xb0d8adc0
  415d94:	dec    edx
  415d95:	leave  
  415d96:	scas   eax,DWORD PTR es:[edi]
  415d97:	sti    
  415d98:	and    al,0x5d
  415d9a:	xor    BYTE PTR [edx-0x57ff9496],dl
  415da0:	(bad)  
  415da1:	addr16 or bh,0x1
  415da5:	push   ss
  415da6:	and    ebp,ecx
  415da8:	mov    dl,0x74
  415daa:	les    esp,FWORD PTR [ebp-0x7b]
  415dad:	call   0xfbab80c7
  415db2:	lods   al,BYTE PTR ds:[esi]
  415db3:	aad    0xdc
  415db5:	scas   al,BYTE PTR es:[edi]
  415db6:	cmc    
  415db7:	push   edx
  415db8:	push   ebp
  415db9:	xor    DWORD PTR [ecx+0x2b],edi
  415dbc:	adc    ch,BYTE PTR [edi-0x77c335e6]
  415dc2:	stc    
  415dc3:	rcr    BYTE PTR [eax+0x37],1
  415dc6:	sbb    al,0xb1
  415dc8:	mov    esp,0xafe24ec0
  415dcd:	sahf   
  415dce:	inc    ebp
  415dcf:	jmp    0x415e0e
  415dd1:	mov    ds:0x8e2759c7,eax
  415dd6:	push   edi
  415dd7:	pop    esp
  415dd8:	cmp    al,BYTE PTR [edi+edi*4]
  415ddb:	rcr    ecx,cl
  415ddd:	call   FWORD PTR [ecx-0x60]
  415de0:	or     dl,BYTE PTR [edi]
  415de2:	sbb    BYTE PTR [edx+0x27],dl
  415de5:	rcr    DWORD PTR [edi],1
  415de7:	dec    esp
  415de8:	add    bh,BYTE PTR ds:0xd17784a2
  415dee:	push   ss
  415def:	gs pop ebx
  415df1:	pushfw 
  415df3:	dec    ecx
  415df4:	retfw  0xfbba
  415df8:	jbe    0x415ddc
  415dfa:	jl     0x415e5a
  415dfc:	pushaw 
  415dfe:	(bad)  
  415dff:	fisttp QWORD PTR [esp+ecx*2]
  415e02:	sub    ch,BYTE PTR [ebx+0x3d]
  415e05:	out    0x4b,eax
  415e07:	xchg   DWORD PTR [eax+0x623faaae],edx
  415e0d:	push   cs
  415e0e:	sbb    eax,0x3d638be9
  415e13:	int    0x1a
  415e15:	mov    bl,0x14
  415e17:	lock dec edx
  415e19:	inc    ecx
  415e1a:	and    esi,DWORD PTR [ebp-0x2b3872af]
  415e20:	add    DWORD PTR [ebp-0xffde415],0xea6eef08
  415e2a:	pop    es
  415e2b:	dec    BYTE PTR [edx-0x26]
  415e2e:	lock in eax,0xc5
  415e31:	adc    BYTE PTR [ebp+0x6478ed45],0xd3
  415e38:	or     BYTE PTR ds:0x3dce68b6,ah
  415e3e:	(bad)  
  415e3f:	sbb    BYTE PTR [esi],bl
  415e41:	sar    BYTE PTR [eax+0x1e],cl
  415e44:	jecxz  0x415e8c
  415e46:	adc    DWORD PTR [eax+0x5b],0xfffffff2
  415e4a:	loop   0x415e0d
  415e4c:	mov    bl,BYTE PTR [ecx+0x64]
  415e4f:	inc    edi
  415e50:	outs   dx,DWORD PTR ds:[esi]
  415e51:	test   DWORD PTR ds:0xaaa57e8c,0xfefe7529
  415e5b:	fmul   st,st(5)
  415e5d:	mov    ecx,0x139e841a
  415e62:	(bad)  
  415e63:	stc    
  415e64:	sbb    ecx,DWORD PTR [eax+edx*1-0x270623bf]
  415e6b:	sahf   
  415e6c:	cld    
  415e6d:	dec    ecx
  415e6e:	push   ecx
  415e6f:	mov    eax,ds:0x12dc2b1e
  415e74:	dec    edi
  415e75:	popa   
  415e76:	outs   dx,BYTE PTR ds:[esi]
  415e77:	addr16 popa 
  415e79:	call   0x6634:0x65e29a8f
  415e80:	jnp    0x415e0a
  415e82:	out    0x5f,al
  415e84:	mov    eax,ds:0x317cfe14
  415e89:	shl    DWORD PTR [ebp-0x58],0x4e
  415e8d:	icebp  
  415e8e:	ins    BYTE PTR es:[edi],dx
  415e8f:	les    eax,FWORD PTR [edx]
  415e91:	cmp    DWORD PTR [ebp+0x4a],eax
  415e94:	test   al,0x31
  415e96:	jno    0x415e2c
  415e98:	fidivr DWORD PTR [eax+0x64222cad]
  415e9e:	int3   
  415e9f:	xor    eax,0xbc3b417c
  415ea4:	jb     0x415f15
  415ea6:	(bad)  
  415ea8:	mov    ebx,0x98e87021
  415ead:	outs   dx,BYTE PTR ds:[esi]
  415eae:	dec    eax
  415eaf:	xor    DWORD PTR [esi+0x1a],edx
  415eb2:	stos   DWORD PTR es:[edi],eax
  415eb3:	mov    ecx,0x3aed1c44
  415eb8:	test   BYTE PTR [ecx+0x54],cl
  415ebb:	shl    eax,1
  415ebd:	xchg   DWORD PTR [ebx+0x6f],esi
  415ec0:	or     bh,ah
  415ec2:	int    0x8d
  415ec4:	stos   DWORD PTR es:[edi],eax
  415ec5:	icebp  
  415ec6:	into   
  415ec7:	addr16 push ebp
  415ec9:	outs   dx,DWORD PTR ds:[esi]
  415eca:	pusha  
  415ecb:	popa   
  415ecc:	test   BYTE PTR [eax+0x26],dl
  415ecf:	pop    esp
  415ed0:	dec    esp
  415ed1:	pop    edx
  415ed2:	mov    ds,WORD PTR [esi-0x45]
  415ed5:	inc    esi
  415ed6:	mov    dl,0x29
  415ed8:	in     eax,0x14
  415eda:	les    ebp,FWORD PTR [edx]
  415edc:	and    al,0x12
  415ede:	sub    dl,ah
  415ee0:	test   al,0x33
  415ee2:	push   ds
  415ee3:	cmp    eax,0x63a1e4a8
  415ee8:	retf   0x8528
  415eeb:	inc    esi
  415eec:	retf   0xd9dd
  415eef:	scas   al,BYTE PTR es:[edi]
  415ef0:	xlat   BYTE PTR ds:[ebx]
  415ef1:	jae    0x415f15
  415ef3:	inc    edx
  415ef4:	mov    ecx,0x36d891ae
  415ef9:	int3   
  415efa:	stc    
  415efb:	mov    ?,WORD PTR ds:0xc3a13df2
  415f01:	pusha  
  415f02:	in     eax,dx
  415f03:	rcr    DWORD PTR [edx+0x64],0x3c
  415f07:	dec    esi
  415f08:	or     DWORD PTR [edi+edi*2-0x7c95b579],0xc40639e6
  415f13:	dec    ebx
  415f14:	xor    cl,BYTE PTR [edx-0x78]
  415f17:	jp     0x415f45
  415f19:	xor    bl,BYTE PTR [ebx-0x3a]
  415f1c:	or     bl,BYTE PTR [ebx+ebp*8-0x319af42f]
  415f23:	ja     0x415f42
  415f25:	out    dx,al
  415f26:	pop    edx
  415f27:	ss inc ebp
  415f29:	bound  edi,QWORD PTR [esi]
  415f2b:	and    BYTE PTR [ebx],cl
  415f2d:	push   esp
  415f2e:	xor    eax,0x8bb4bb94
  415f33:	mov    dh,0x61
  415f35:	and    DWORD PTR [edi+0x3c],esp
  415f38:	ds mov ax,0xd381
  415f3d:	call   0x5e68edd4
  415f42:	add    edi,DWORD PTR [ecx]
  415f44:	lahf   
  415f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f46:	hlt    
  415f47:	xchg   ebp,eax
  415f48:	pop    es
  415f49:	mov    ecx,0x25f0aa13
  415f4e:	jns    0x415f46
  415f50:	xor    al,0xc2
  415f52:	int    0xc2
  415f54:	jnp    0x415fb8
  415f56:	mov    ds:0x94134190,al
  415f5b:	or     BYTE PTR [ecx],cl
  415f5d:	fstp   DWORD PTR [edx-0x388df57]
  415f63:	bound  edx,QWORD PTR ds:0xa40c9018
  415f69:	mov    DWORD PTR [edi-0x51f55cb6],edi
  415f6f:	add    DWORD PTR [edx],ecx
  415f71:	mov    eax,0xca3cdc11
  415f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f77:	test   al,0x6a
  415f79:	scas   eax,DWORD PTR es:[edi]
  415f7a:	stos   BYTE PTR es:[edi],al
  415f7b:	cmp    DWORD PTR [ecx-0x6edb1ca7],0xffffff8e
  415f82:	stos   BYTE PTR es:[edi],al
  415f83:	retf   
  415f84:	inc    DWORD PTR [edi]
  415f86:	bound  edi,QWORD PTR [ebp-0x4c923e8a]
  415f8c:	sub    dh,ch
  415f8e:	add    eax,0x6a1de0de
  415f93:	int3   
  415f94:	das    
  415f95:	call   0x88837da2
  415f9a:	stc    
  415f9b:	cmc    
  415f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f9d:	sub    BYTE PTR [edx],bl
  415f9f:	aaa    
  415fa0:	pop    ss
  415fa1:	pop    esp
  415fa2:	and    esi,DWORD PTR [edi-0x211d1593]
  415fa8:	cli    
  415fa9:	mov    bh,0x70
  415fab:	sub    al,0x52
  415fad:	rcl    ecx,cl
  415faf:	or     esi,DWORD PTR [edx+0x737256f2]
  415fb5:	(bad)  
  415fb6:	ins    BYTE PTR es:[edi],dx
  415fb7:	mov    edi,edx
  415fb9:	push   esi
  415fba:	lods   al,BYTE PTR ds:[esi]
  415fbb:	push   ebx
  415fbc:	scas   eax,DWORD PTR es:[edi]
  415fbd:	loope  0x415f71
  415fbf:	or     ebp,DWORD PTR ds:0xe1ab4474
  415fc5:	jmp    0x416000
  415fc7:	push   ds
  415fc8:	lea    esp,[eax+edi*2-0x35e52834]
  415fcf:	pop    es
  415fd0:	jbe    0x415fa0
  415fd2:	mov    eax,0xdc83a285
  415fd7:	sub    al,0x19
  415fd9:	cmp    dl,dl
  415fdb:	addr16 mov ds:0x919f,al
  415fdf:	and    BYTE PTR [esi+esi*1-0x60],bl
  415fe3:	cmc    
  415fe4:	lea    ecx,[edi*1+0x2b173ee6]
  415feb:	xor    al,0x82
  415fed:	pop    ebx
  415fee:	cmp    DWORD PTR [ebx+0x7b],esi
  415ff1:	dec    esp
  415ff2:	int    0x5
  415ff4:	ror    BYTE PTR [esi-0x36e0978f],cl
  415ffa:	ja     0x416004
  415ffc:	push   eax
  415ffd:	inc    ebx
  415ffe:	push   ds
  415fff:	fistp  WORD PTR [ebp-0x1266350c]
  416005:	mov    esi,0x972ac71a
  41600a:	push   esi
  41600b:	sbb    DWORD PTR [edx-0x69a2c527],esp
  416011:	(bad)  
  416012:	rcr    DWORD PTR [ecx],cl
  416014:	daa    
  416015:	push   edi
  416016:	sbb    al,0xa9
  416018:	out    dx,eax
  416019:	cdq    
  41601a:	ja     0x41604e
  41601c:	push   es
  41601d:	inc    esi
  41601e:	push   ebp
  41601f:	sub    eax,0x87b20c3f
  416024:	sbb    DWORD PTR [edx+ebp*1],ebx
  416027:	loopne 0x415ffa
  416029:	sbb    BYTE PTR [eax],0x22
  41602c:	push   ecx
  41602d:	adc    dl,bl
  41602f:	jle    0x41605a
  416031:	fist   WORD PTR [ebp+0x29f09b6b]
  416037:	and    BYTE PTR [edx],ch
  416039:	mov    WORD PTR [eax],cs
  41603b:	cs inc esi
  41603d:	xchg   BYTE PTR [ebx],dl
  41603f:	rol    DWORD PTR [esi+eiz*2-0x2b],1
  416043:	jae    0x416031
  416045:	jmp    0xa33c:0x913d445c
  41604c:	fidiv  DWORD PTR [edx+0x203b8865]
  416052:	push   edi
  416053:	inc    edi
  416054:	fmulp  st(5),st
  416056:	and    ecx,edx
  416058:	iret   
  416059:	out    dx,al
  41605a:	ret    
  41605b:	mov    ebp,?
  41605d:	pop    ebx
  41605e:	loop   0x41600e
  416060:	lahf   
  416061:	loope  0x415ff3
  416063:	and    BYTE PTR [edx+edx*1-0x6a8ee4e2],ah
  41606a:	mov    ds:0xd60a40da,al
  41606f:	xor    eax,0xbf100d03
  416074:	adc    al,0xf7
  416076:	pop    ebp
  416077:	sti    
  416078:	xchg   edx,eax
  416079:	xchg   ebp,eax
  41607a:	or     dh,BYTE PTR [edi]
  41607c:	mov    bh,BYTE PTR [edx]
  41607e:	imul   esi,DWORD PTR [esi+edi*4-0x5f],0x1c8a2851
  416086:	dec    edx
  416087:	xlat   BYTE PTR ds:[ebx]
  416088:	popf   
  416089:	fld    DWORD PTR cs:[ebx-0x48]
  41608d:	or     ch,BYTE PTR [ebp+0xf60e31e]
  416093:	ins    DWORD PTR es:[edi],dx
  416094:	pusha  
  416095:	pop    ds
  416096:	nop
  416097:	cmp    eax,0x7b75bdf5
  41609c:	xor    al,0x25
  41609e:	int3   
  41609f:	popf   
  4160a0:	mov    ah,0xda
  4160a2:	retf   
  4160a3:	mov    edx,0xc9ec7e0a
  4160a8:	fistp  QWORD PTR [edx+0x137a2401]
  4160ae:	add    DWORD PTR [edx+0x7771eb82],ebp
  4160b4:	sub    bl,BYTE PTR gs:[edi-0x41]
  4160b8:	push   eax
  4160b9:	in     eax,0x45
  4160bb:	cld    
  4160bc:	stc    
  4160bd:	dec    ecx
  4160be:	mov    WORD PTR [esi+0x43],fs
  4160c1:	cvtps2pi mm7,QWORD PTR cs:[ebp+esi*8-0x45afb3f9]
  4160ca:	or     DWORD PTR [eax],ebx
  4160cc:	or     eax,0x2306d5ae
  4160d1:	addr16 (bad) 
  4160d3:	dec    edi
  4160d4:	lods   eax,DWORD PTR ds:[esi]
  4160d5:	cli    
  4160d6:	pop    ds
  4160d7:	das    
  4160d8:	scas   eax,DWORD PTR es:[edi]
  4160d9:	shl    DWORD PTR [esi+0x5d],cl
  4160dc:	and    bl,al
  4160de:	xchg   ebp,eax
  4160df:	push   cs
  4160e0:	or     DWORD PTR [ecx-0x5747135e],esi
  4160e6:	pop    ebp
  4160e7:	dec    esp
  4160e8:	or     ebx,edi
  4160ea:	or     cl,al
  4160ec:	cdq    
  4160ed:	lds    esi,FWORD PTR [ecx+0x304ad345]
  4160f3:	xchg   ecx,eax
  4160f4:	and    BYTE PTR [esi-0x14e81d3c],dh
  4160fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160fb:	shr    ebx,cl
  4160fd:	add    al,0x24
  4160ff:	or     DWORD PTR [ebp+ebp*1+0x7e],esp
  416103:	pop    ds
  416104:	jo     0x4160d0
  416106:	mov    ch,0x2f
  416108:	cmp    BYTE PTR [eax],dl
  41610a:	in     eax,dx
  41610b:	mov    cs,WORD PTR ds:0xce9e3661
  416111:	push   edi
  416112:	and    BYTE PTR [eax+0x5cdb943b],dh
  416118:	cwde   
  416119:	push   es
  41611a:	push   ss
  41611b:	xchg   ecx,eax
  41611c:	push   es
  41611d:	nop
  41611e:	pusha  
  41611f:	stos   DWORD PTR es:[edi],eax
  416120:	aas    
  416121:	cld    
  416122:	lahf   
  416123:	or     DWORD PTR [edx-0x4],ebp
  416126:	jecxz  0x4160d1
  416128:	pop    ebx
  416129:	cdq    
  41612a:	jle    0x4160cf
  41612c:	pop    edx
  41612d:	xchg   edx,eax
  41612e:	jae    0x4160b0
  416130:	xchg   esp,eax
  416131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416132:	frstor [esi]
  416134:	lods   eax,DWORD PTR ds:[esi]
  416135:	leave  
  416136:	xchg   ebx,eax
  416137:	and    DWORD PTR ds:0xabc45d10,ecx
  41613d:	je     0x41618a
  41613f:	pop    edi
  416140:	xlat   BYTE PTR ds:[ebx]
  416141:	lods   al,BYTE PTR ds:[esi]
  416142:	mov    edx,DWORD PTR [esi]
  416144:	sub    ebp,DWORD PTR [eax+0x31]
  416147:	xchg   cl,al
  416149:	xor    eax,0xf64e728c
  41614e:	cmp    DWORD PTR [edx+eax*2],eax
  416151:	xor    BYTE PTR [eax],al
  416153:	adc    al,0xaa
  416155:	outs   dx,DWORD PTR ds:[esi]
  416156:	mov    eax,DWORD PTR [esi-0x52ff58e1]
  41615c:	xor    eax,0x98ab6636
  416161:	cmp    eax,0x8c59fa28
  416166:	and    eax,0x62c5405e
  41616b:	iret   
  41616c:	jge    0x41615b
  41616e:	inc    edi
  41616f:	stc    
  416170:	pusha  
  416171:	ins    BYTE PTR es:[edi],dx
  416172:	jno    0x416120
  416174:	mov    cl,0x71
  416176:	mov    esp,0x8e4264d6
  41617b:	mov    esp,DWORD PTR [edi-0x55]
  41617e:	inc    ecx
  41617f:	gs jle 0x416135
  416182:	push   ebp
  416183:	test   esi,edx
  416185:	stc    
  416186:	pop    ss
  416187:	(bad)  
  416188:	mov    bl,0x65
  41618a:	(bad)  
  41618b:	outs   dx,DWORD PTR ds:[esi]
  41618c:	xlat   BYTE PTR ds:[ebx]
  41618d:	stos   DWORD PTR es:[edi],eax
  41618e:	adc    ch,bl
  416190:	fild   WORD PTR [eax]
  416192:	xor    edx,DWORD PTR [esi+0x3594ebbd]
  416198:	(bad)  
  41619a:	int3   
  41619b:	dec    esi
  41619c:	dec    eax
  41619d:	cmp    eax,DWORD PTR [ebp-0x7]
  4161a0:	push   ecx
  4161a1:	jecxz  0x416212
  4161a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a4:	sub    ah,0xc9
  4161a7:	push   ebp
  4161a8:	or     al,0xb
  4161aa:	dec    ebx
  4161ab:	mov    bl,dl
  4161ad:	lods   eax,DWORD PTR ds:[esi]
  4161ae:	sbb    eax,0xce14db6b
  4161b3:	ret    
  4161b4:	cld    
  4161b5:	les    edx,FWORD PTR [edx]
  4161b7:	out    dx,eax
  4161b8:	sbb    edx,DWORD PTR [edx]
  4161ba:	adc    BYTE PTR [edi+0x210cbeb2],bl
  4161c0:	adc    al,0x32
  4161c2:	xor    cl,bl
  4161c4:	jbe    0x4161ca
  4161c6:	sub    ch,BYTE PTR [edx-0x472649eb]
  4161cc:	rol    ebp,cl
  4161ce:	adc    dh,ch
  4161d0:	daa    
  4161d1:	push   esp
  4161d2:	cmp    BYTE PTR ds:[edx+edx*1+0x1e2f9aa5],0xc9
  4161db:	jmp    0x2431da62
  4161e0:	push   cs
  4161e1:	push   edx
  4161e2:	push   edx
  4161e3:	cwde   
  4161e4:	lods   eax,DWORD PTR ds:[esi]
  4161e5:	jp     0x416259
  4161e7:	cmp    eax,0x103c7ad4
  4161ec:	xor    BYTE PTR [edx+0x61],dh
  4161ef:	shl    BYTE PTR [esi-0x2f],cl
  4161f2:	pop    ebx
  4161f3:	dec    ebp
  4161f4:	jbe    0x4161e4
  4161f6:	dec    esi
  4161f7:	das    
  4161f8:	mov    edx,0xb30c4da
  4161fd:	inc    esi
  4161fe:	dec    ebp
  4161ff:	add    al,0xd
  416201:	mov    dl,0xc6
  416203:	xchg   ebx,eax
  416204:	add    al,dl
  416206:	pop    edx
  416207:	call   0x1fb3f4e0
  41620c:	push   ds
  41620d:	xor    edx,DWORD PTR [ecx]
  41620f:	jo     0x416285
  416211:	popf   
  416212:	jp     0x4161a7
  416214:	fdivrp st(7),st
  416216:	mov    dl,0x6
  416219:	pop    edi
  41621a:	neg    BYTE PTR [edi+edi*4-0x1a]
  41621e:	jmp    0x7e582d3c
  416223:	lods   eax,DWORD PTR ds:[esi]
  416224:	pop    edi
  416225:	and    esp,DWORD PTR [ecx]
  416227:	out    0xc3,eax
  416229:	xor    BYTE PTR [edx+0x5301564b],al
  41622f:	not    DWORD PTR [ecx+0x4f]
  416232:	dec    ecx
  416233:	mov    bh,0xc8
  416235:	sub    esi,ecx
  416237:	mov    esi,0xde7f0edd
  41623c:	xchg   DWORD PTR [ecx-0x67246d92],edx
  416242:	fcomp  DWORD PTR [ebp-0x1a]
  416245:	or     DWORD PTR [eax+0x65c85cf7],0x5ff4b405
  41624f:	or     DWORD PTR [edx+0x2979e51a],ecx
  416255:	xchg   esp,eax
  416256:	xchg   esi,eax
  416257:	aas    
  416258:	adc    al,0x2e
  41625a:	(bad)  
  41625b:	aad    0x13
  41625d:	sub    esi,esi
  41625f:	mov    eax,ds:0xdae1f07f
  416264:	int3   
  416265:	clc    
  416266:	sub    ah,0x23
  416269:	adc    DWORD PTR [ebx+ebp*8+0x53],ebx
  41626d:	(bad)  
  41626e:	call   DWORD PTR [esp+eax*8-0x3a]
  416272:	scas   al,BYTE PTR es:[edi]
  416273:	cmp    dh,BYTE PTR ds:0xc250fd2
  416279:	mov    al,0xae
  41627b:	push   ss
  41627c:	xor    ch,BYTE PTR [eax]
  41627e:	arpl   WORD PTR [esi-0x3e16b1e],di
  416284:	cld    
  416285:	mov    dh,BYTE PTR [ebp-0x2e]
  416288:	call   0xd567:0xcff878c6
  41628f:	mov    ds:0x543dc41a,eax
  416294:	inc    edi
  416295:	push   cs
  416296:	xor    BYTE PTR ds:0xb0ddb771,bh
  41629c:	adc    edi,DWORD PTR [ebx-0x70]
  41629f:	push   ecx
  4162a0:	dec    esi
  4162a1:	mov    eax,ds:0x3922dc0b
  4162a6:	cmp    bl,BYTE PTR [ebx+0x72ee920]
  4162ac:	retf   
  4162ad:	jno    0x4162ee
  4162af:	cld    
  4162b0:	push   esp
  4162b1:	test   eax,0x797858c8
  4162b6:	jno    0x41627f
  4162b8:	jno    0x4162e9
  4162ba:	cmc    
  4162bb:	push   0xffffffb2
  4162bd:	mov    edi,0xdcce0020
  4162c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c3:	imul   edi,ebp,0xe3057c2b
  4162c9:	adc    eax,0xd59dcb70
  4162ce:	xchg   esi,eax
  4162cf:	mov    esi,0xaf9caa6c
  4162d4:	mov    DWORD PTR [esi],ebp
  4162d6:	enter  0xb273,0x95
  4162da:	mov    WORD PTR [ecx-0xb],ds
  4162dd:	(bad)  
  4162de:	iret   
  4162df:	adc    BYTE PTR [eax],bl
  4162e1:	std    
  4162e2:	lock test bh,ah
  4162e5:	xchg   esp,eax
  4162e6:	ret    
  4162e7:	daa    
  4162e8:	es icebp 
  4162ea:	pop    ebp
  4162eb:	test   al,0xb4
  4162ed:	mov    dl,0xd7
  4162ef:	mov    al,ds:0xdcefbb1f
  4162f4:	pop    edx
  4162f5:	loop   0x41627f
  4162f7:	or     cl,cl
  4162f9:	(bad)  
  4162fa:	mov    al,0x9d
  4162fc:	shl    esp,cl
  4162fe:	cdq    
  4162ff:	add    dh,BYTE PTR [edx+0x8]
  416302:	mov    esp,0xe626fed3
  416307:	enter  0xe046,0x17
  41630b:	stos   DWORD PTR es:[edi],eax
  41630c:	mov    edi,0x37b43d24
  416312:	mov    ebp,?
  416314:	adc    eax,0x4c8268c2
  416319:	ins    BYTE PTR es:[edi],dx
  41631a:	outs   dx,WORD PTR ds:[esi]
  41631c:	call   0x1b80:0xb5752d3a
  416323:	sub    edi,esi
  416325:	adc    eax,0x5fe5b583
  41632a:	imul   BYTE PTR [eax+0x32]
  41632d:	sahf   
  41632e:	daa    
  41632f:	loop   0x416327
  416331:	ins    DWORD PTR es:[edi],dx
  416332:	adc    dl,BYTE PTR [ebp+0x37]
  416335:	cmp    edi,ebx
  416337:	jg     0x4162c8
  416339:	xor    esi,DWORD PTR [eax]
  41633b:	sub    eax,0x5c0af923
  416340:	jl     0x416376
  416342:	and    dh,dl
  416344:	jmp    FWORD PTR [esi-0x1cb5a90f]
  41634a:	inc    ecx
  41634b:	cmp    ecx,DWORD PTR ds:0xfa7e37db
  416351:	aas    
  416352:	dec    esp
  416353:	jo     0x41634c
  416355:	arpl   bx,si
  416357:	in     eax,dx
  416358:	adc    cl,BYTE PTR [edi+0x6aeeb4d3]
  41635e:	mov    ebx,0x45b86732
  416363:	dec    esi
  416364:	jmp    0x416361
  416366:	mov    BYTE PTR [esi],bh
  416368:	sub    esp,DWORD PTR [edi+edi*8+0x38]
  41636c:	xor    bh,ah
  41636e:	mov    eax,ds:0x84bc2303
  416373:	iret   
  416374:	dec    esi
  416375:	shl    BYTE PTR [ebx+0x51],cl
  416378:	stos   BYTE PTR es:[edi],al
  416379:	hlt    
  41637a:	sbb    cl,al
  41637c:	rol    BYTE PTR [edi],cl
  41637e:	fidivr WORD PTR [edx-0x6a]
  416381:	aam    0x95
  416383:	sub    al,0xf8
  416385:	mov    esi,0x690e19e2
  41638a:	(bad)  [edi-0x1c]
  41638d:	add    bh,bh
  41638f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416390:	es imul edi,ebx,0x65f72f7a
  416397:	(bad)  [edx+0x60]
  41639a:	dec    edi
  41639b:	(bad)  
  41639c:	add    DWORD PTR ss:[eax-0x18],ebx
  4163a0:	xor    esp,DWORD PTR [edi-0x6c]
  4163a3:	pop    ecx
  4163a4:	mov    bh,BYTE PTR [ecx]
  4163a6:	mov    DWORD PTR [edx-0x2943c014],ebp
  4163ac:	dec    eax
  4163ad:	or     ah,bh
  4163af:	lock pop eax
  4163b1:	(bad)  
  4163b2:	enter  0x6a99,0x42
  4163b6:	adc    al,0x34
  4163b8:	mov    ah,0xdd
  4163ba:	push   ecx
  4163bb:	mov    esp,0xb5e14c70
  4163c0:	xor    eax,0x81ceff33
  4163c5:	pop    ss
  4163c6:	sub    eax,0xbdb39e42
  4163cb:	shl    ch,1
  4163cd:	bound  edi,QWORD PTR [ecx-0x59]
  4163d0:	mov    BYTE PTR [edi+0x67],dh
  4163d3:	stos   DWORD PTR es:[edi],eax
  4163d4:	mov    esp,0xcdcb6d56
  4163d9:	push   ebp
  4163da:	inc    cx
  4163dc:	rcr    DWORD PTR [eax+ecx*2-0x54c027ad],1
  4163e3:	mov    ebp,0x10988828
  4163e8:	jmp    0x3ca362e5
  4163ed:	repz push ss
  4163ef:	xor    BYTE PTR [edi+0x76],0xaa
  4163f3:	(bad)  
  4163f4:	lock dec ebp
  4163f6:	daa    
  4163f7:	pop    edi
  4163f8:	mov    eax,0xcb0cbc35
  4163fd:	add    eax,0x124e160f
  416402:	adc    BYTE PTR ds:[ebx+0x704fd8b8],dl
  416409:	mov    edi,eax
  41640b:	test   al,0x80
  41640d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41640e:	je     0x41647f
  416410:	cld    
  416411:	mov    ds:0x9ad64704,al
  416416:	cmp    ch,bl
  416418:	jno    0x416489
  41641a:	int3   
  41641b:	fimul  DWORD PTR [edi]
  41641d:	push   ebx
  41641e:	rol    DWORD PTR [edx+0x77],cl
  416421:	mov    ds,WORD PTR [eax+0x59]
  416424:	aas    
  416425:	aas    
  416426:	inc    ebp
  416427:	inc    ebx
  416428:	stos   BYTE PTR es:[edi],al
  416429:	adc    al,0xb4
  41642b:	mov    ecx,0xe78924d2
  416430:	inc    eax
  416431:	sub    eax,0x588d1d95
  416436:	push   ebx
  416437:	addr16 loop 0x41646d
  41643a:	ret    0x68d0
  41643d:	add    dh,BYTE PTR [edi+0x47]
  416440:	mov    esp,0x3b8ac367
  416445:	in     al,dx
  416446:	test   eax,0x8d1a5fce
  41644b:	xor    eax,0x7d343513
  416450:	push   cs
  416451:	retf   
  416452:	fld    TBYTE PTR [edi]
  416454:	mov    al,0xf5
  416456:	outs   dx,DWORD PTR ds:[esi]
  416457:	jno    0x416443
  416459:	push   ebp
  41645a:	inc    ecx
  41645b:	pop    edi
  41645c:	scas   eax,DWORD PTR es:[edi]
  41645d:	nop
  41645e:	adc    al,0xb6
  416460:	adc    DWORD PTR ds:0x46a5aac,ebx
  416466:	bound  eax,QWORD PTR ds:0x97dddc72
  41646c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41646d:	sub    al,0xed
  41646f:	or     DWORD PTR [esi-0x2e],ebp
  416472:	adc    DWORD PTR [esi],eax
  416474:	shr    DWORD PTR [edi-0x68140c5a],cl
  41647a:	or     eax,0xd780199
  41647f:	xor    edi,DWORD PTR [edx-0x2f]
  416482:	fptan  
  416484:	ret    
  416485:	test   ah,bl
  416487:	cmp    eax,0xdbbb6b09
  41648c:	gs mov dh,0xfe
  41648f:	test   DWORD PTR [ecx+0x4d],esp
  416492:	or     eax,DWORD PTR [ebx]
  416494:	lods   eax,DWORD PTR ds:[esi]
  416495:	repz cld 
  416497:	and    al,0xba
  416499:	aas    
  41649a:	mov    esi,0xf66d70de
  41649f:	adc    al,0x7
  4164a1:	ret    0xd04b
  4164a4:	push   ebx
  4164a5:	cmovl  esp,DWORD PTR [ecx+0x6b457b1a]
  4164ac:	push   0x77
  4164ae:	and    eax,0x6d8b2340
  4164b3:	pop    ebp
  4164b4:	push   eax
  4164b5:	dec    eax
  4164b6:	cmp    ch,bl
  4164b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164b9:	dec    ecx
  4164ba:	xchg   ebx,eax
  4164bb:	rol    BYTE PTR [edx+edx*8+0x36029d2f],cl
  4164c2:	fiadd  WORD PTR [edi]
  4164c4:	aas    
  4164c5:	push   edx
  4164c6:	stos   BYTE PTR es:[edi],al
  4164c7:	test   al,0xd3
  4164c9:	addr16 inc ebp
  4164cb:	mov    BYTE PTR [esi],ah
  4164cd:	xchg   esi,eax
  4164ce:	int3   
  4164cf:	fsubr  DWORD PTR [ebp+0x4a797b5b]
  4164d5:	cmp    al,0xff
  4164d7:	inc    esi
  4164d8:	push   ecx
  4164d9:	aas    
  4164da:	scas   al,BYTE PTR es:[edi]
  4164db:	inc    esp
  4164dc:	push   es
  4164dd:	test   DWORD PTR [edi+0x48],0x838cd808
  4164e4:	jae    0x416525
  4164e6:	add    BYTE PTR ds:0x68b15885,0x89
  4164ed:	jno    0x416563
  4164ef:	std    
  4164f0:	or     ecx,ebx
  4164f2:	leave  
  4164f3:	add    DWORD PTR [edi+0x18e45403],esp
  4164f9:	ds jbe 0x416495
  4164fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164fd:	repnz cdq 
  4164ff:	clc    
  416500:	adc    ebp,DWORD PTR [ebp+0x5]
  416503:	mov    ecx,0xb66aae81
  416508:	mov    ecx,DWORD PTR [edx]
  41650a:	mov    ds:0x9739d681,eax
  41650f:	and    ch,cl
  416511:	sub    al,BYTE PTR [edi-0x78830ce7]
  416517:	xchg   DWORD PTR [ecx+0x7c],esp
  41651a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41651b:	loopne 0x41651c
  41651d:	sbb    ebx,DWORD PTR [esp+edi*1-0x44]
  416521:	(bad)  
  416522:	cs fldcw WORD PTR cs:[esi]
  416526:	int3   
  416527:	ins    DWORD PTR es:[edi],dx
  416528:	jmp    0x539acac5
  41652d:	sahf   
  41652e:	xchg   esi,eax
  41652f:	or     al,0x12
  416531:	pop    ss
  416532:	xchg   esi,eax
  416533:	stos   BYTE PTR es:[edi],al
  416534:	add    eax,0xb6bf56c8
  416539:	daa    
  41653a:	mov    esp,0xaf67681b
  41653f:	push   ecx
  416540:	je     0x41658b
  416542:	(bad)  
  416543:	pop    DWORD PTR [eax]
  416545:	mov    ds:0xbe36ebc4,eax
  41654a:	ret    0x7f3e
  41654d:	sbb    DWORD PTR [ecx],ecx
  41654f:	add    eax,0x7f86de26
  416554:	xchg   edi,eax
  416555:	bound  esi,QWORD PTR [edx+0x3a2d40da]
  41655b:	bsr    eax,ebx
  41655e:	retf   
  41655f:	mov    ds,ecx
  416561:	sbb    dh,dh
  416563:	jle    0x41655b
  416565:	inc    ecx
  416566:	retf   
  416567:	adc    bl,BYTE PTR ds:0xa55d0273
  41656d:	jne    0x416570
  41656f:	scas   al,BYTE PTR es:[edi]
  416570:	int3   
  416571:	jmp    0x1c7e:0xa2e4ebe2
  416578:	jecxz  0x416516
  41657a:	adc    BYTE PTR [eax],dl
  41657c:	test   DWORD PTR [esi-0x1f],esp
  41657f:	xor    al,0x9b
  416581:	sar    BYTE PTR [edx+eax*1],1
  416584:	test   eax,0x8943a3a0
  416589:	retf   
  41658a:	or     edx,esi
  41658c:	icebp  
  41658d:	aaa    
  41658e:	out    dx,al
  41658f:	jmp    0x4165d2
  416591:	inc    edi
  416592:	loop   0x4165f0
  416594:	mov    cl,0xea
  416596:	jmp    0x4165b6
  416598:	cmp    BYTE PTR [eax],bl
  41659a:	mov    DWORD PTR [ecx-0x66],edi
  41659d:	mov    DWORD PTR [esi-0x75328a68],esp
  4165a3:	push   ds
  4165a4:	arpl   WORD PTR [ebp-0x2c],ax
  4165a7:	and    dh,BYTE PTR [esp+eax*2-0x3b]
  4165ab:	inc    edi
  4165ac:	xchg   BYTE PTR [esi],dh
  4165ae:	pop    ss
  4165af:	das    
  4165b0:	jp     0x416615
  4165b2:	jecxz  0x416603
  4165b4:	mov    cl,0x21
  4165b6:	xor    al,0x0
  4165b8:	xor    eax,0xcedec13f
  4165bd:	in     al,dx
  4165be:	jns    0x41660c
  4165c0:	jb     0x416551
  4165c2:	push   cs
  4165c3:	ficomp DWORD PTR [ebp+0x23]
  4165c6:	outs   dx,BYTE PTR ds:[esi]
  4165c7:	cmp    al,0x47
  4165c9:	test   eax,0xa9b225c
  4165ce:	xor    DWORD PTR [edx-0x7e16b81d],0x6116d5af
  4165d8:	sub    BYTE PTR [edx],al
  4165da:	fsubp  st(7),st
  4165dc:	xor    eax,0x4020fb30
  4165e1:	adc    al,BYTE PTR [ebx]
  4165e3:	mov    BYTE PTR ds:0xb28edb58,dh
  4165e9:	jl     0x41658c
  4165eb:	jg     0x416585
  4165ed:	call   0x52ad:0x92b311ca
  4165f4:	pop    edx
  4165f5:	add    eax,0xef7eed8b
  4165fa:	daa    
  4165fb:	mov    eax,0x8ba23208
  416600:	(bad)  
  416601:	pop    ds
  416602:	lods   eax,DWORD PTR ds:[esi]
  416603:	xchg   esi,ebx
  416605:	and    DWORD PTR [edx],edx
  416607:	pop    esi
  416608:	cmc    
  416609:	mov    ch,0xd0
  41660b:	out    0x1b,al
  41660d:	pop    esi
  41660e:	adc    ebx,DWORD PTR [edi]
  416610:	mov    esp,0x93b71ca4
  416615:	hlt    
  416616:	mov    bh,0xcb
  416618:	add    eax,0xd89ae60a
  41661d:	popa   
  41661e:	int3   
  41661f:	or     BYTE PTR [edx],bh
  416621:	mov    BYTE PTR [eax-0x147478d0],bh
  416627:	mov    bl,0x99
  416629:	loope  0x4165b8
  41662b:	push   edx
  41662c:	fnstenv [esi]
  41662e:	push   esi
  41662f:	sub    dl,al
  416631:	sbb    DWORD PTR ds:0xe12225bf,eax
  416637:	and    al,dh
  416639:	cwde   
  41663a:	pop    esi
  41663b:	pop    ebx
  41663c:	div    BYTE PTR [ecx-0x1f88ca6b]
  416642:	bound  edx,QWORD PTR [edx]
  416644:	mov    bl,0x7d
  416646:	scas   al,BYTE PTR es:[edi]
  416647:	iret   
  416648:	shr    BYTE PTR [edx-0x64],0xa5
  41664c:	int    0x0
  41664e:	sahf   
  41664f:	pop    esi
  416650:	jae    0x416647
  416652:	xlat   BYTE PTR ds:[ebx]
  416653:	mov    DWORD PTR [ebx+0x6333715b],edx
  416659:	jge    0x4165f8
  41665b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41665c:	add    edi,DWORD PTR [ebx+0x14]
  41665f:	adc    BYTE PTR [edi-0x66],0xa2
  416663:	pop    edi
  416665:	ins    DWORD PTR es:[edi],dx
  416666:	ins    BYTE PTR es:[edi],dx
  416667:	jl     0x416641
  416669:	iret   
  41666a:	xchg   dh,ah
  41666c:	pop    edi
  41666d:	test   DWORD PTR [esi],0x93b3da6a
  416673:	mov    WORD PTR [ecx+0xe],cs
  416676:	in     eax,dx
  416677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416678:	jg     0x41660c
  41667a:	and    al,0xd4
  41667c:	(bad)  
  41667d:	mov    edi,0xe2686ab2
  416682:	inc    esi
  416683:	pusha  
  416684:	cdq    
  416685:	(bad)  [eax]
  416687:	sub    al,0x35
  416689:	add    DWORD PTR [ebx],0x25e38f65
  41668f:	retf   
  416690:	clc    
  416691:	arpl   WORD PTR [ebp-0x5],si
  416694:	cld    
  416695:	outs   dx,BYTE PTR ds:[esi]
  416696:	lea    ebx,[ecx]
  416698:	loop   0x4166bb
  41669a:	in     eax,0x6e
  41669c:	(bad)  
  41669e:	xchg   ebx,eax
  41669f:	mov    bh,0x9d
  4166a1:	push   es
  4166a2:	pop    esi
  4166a3:	mov    ebp,0x85b9727c
  4166a8:	lds    edi,FWORD PTR [edi]
  4166aa:	inc    esi
  4166ab:	mov    ecx,0x4fb7a7d9
  4166b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166b1:	mov    ds:0x6389a458,al
  4166b6:	mov    bh,0xa4
  4166b8:	adc    eax,0x79706bab
  4166bd:	mov    WORD PTR [ebx+0x29158702],?
  4166c3:	sbb    bh,dh
  4166c5:	es in  al,0x62
  4166c8:	mov    eax,ebx
  4166ca:	pop    ss
  4166cb:	jae    0x416667
  4166cd:	or     DWORD PTR [ebx+0x26],ebx
  4166d0:	addr16 fsin 
  4166d3:	jmp    0x4166e0
  4166d5:	aam    0xed
  4166d7:	leave  
  4166d8:	xchg   ebx,eax
  4166d9:	sub    bl,BYTE PTR [esi-0x1b]
  4166dc:	enter  0x7320,0x17
  4166e0:	sbb    DWORD PTR [edi+ebp*8-0x76],esi
  4166e4:	mov    esi,0xf10c99ac
  4166e9:	mov    al,0x8a
  4166eb:	push   ebp
  4166ec:	jmp    0x558a2983
  4166f1:	pop    ebx
  4166f2:	fs (bad) 
  4166f4:	fcmovu st,st(7)
  4166f6:	popa   
  4166f7:	mov    ecx,0xadc0cca7
  4166fc:	popf   
  4166fd:	pop    edi
  4166fe:	push   edx
  4166ff:	icebp  
  416700:	lods   eax,DWORD PTR ds:[esi]
  416701:	inc    eax
  416702:	popf   
  416703:	mov    cl,0xc5
  416705:	inc    esi
  416706:	lods   al,BYTE PTR ds:[esi]
  416707:	mov    dl,0xa5
  416709:	sbb    cl,BYTE PTR [ebx]
  41670b:	sar    BYTE PTR [ebx],1
  41670d:	(bad)  
  41670e:	pop    eax
  41670f:	push   0x9
  416711:	dec    esp
  416712:	inc    esi
  416713:	fsub   QWORD PTR [esi+0x21]
  416716:	aaa    
  416717:	fiadd  DWORD PTR [eax+0x39351a69]
  41671d:	push   esi
  41671e:	clc    
  41671f:	jg     0x4166ba
  416721:	mov    al,ds:0x12ba9843
  416726:	fisub  WORD PTR [ebp+0x28e45bcb]
  41672c:	inc    ebx
  41672d:	lods   al,BYTE PTR ds:[esi]
  41672e:	sbb    al,bh
  416730:	(bad)  
  416731:	cmp    al,0xca
  416733:	retf   
  416734:	daa    
  416735:	mov    eax,0xd35cb3d6
  41673a:	(bad)
  41673e:	in     al,0xe0
  416740:	loopne 0x41677e
  416742:	inc    ebp
  416743:	push   esi
  416744:	idiv   DWORD PTR [edx-0x2d09c5cf]
  41674a:	(bad)  
  41674b:	idiv   bh
  41674d:	leave  
  41674e:	sbb    al,0xc3
  416750:	and    eax,0xeedcc3fb
  416755:	mov    edx,0xc07363d3
  41675a:	fist   WORD PTR fs:0xf0432842
  416761:	mov    bl,0x34
  416763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416764:	in     al,0x4f
  416766:	dec    ebp
  416767:	das    
  416768:	pop    esp
  416769:	imul   edi,DWORD PTR [eax],0x17
  41676c:	scas   eax,DWORD PTR es:[edi]
  41676d:	jmp    0xc74:0x61b689b8
  416774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416775:	mov    ch,0xba
  416777:	xchg   ebx,eax
  416778:	xor    dl,dh
  41677a:	pop    es
  41677b:	sar    BYTE PTR ss:[ecx],0xe3
  41677f:	mov    al,0xf0
  416781:	cwde   
  416782:	xchg   esi,eax
  416783:	popf   
  416784:	repz sbb dl,bh
  416787:	and    ah,ch
  416789:	pop    ebp
  41678a:	sbb    cl,dl
  41678c:	xchg   ecx,eax
  41678d:	pop    esi
  41678e:	lods   al,BYTE PTR ds:[esi]
  41678f:	ins    BYTE PTR es:[edi],dx
  416790:	aaa    
  416791:	imul   ecx,DWORD PTR [eax+0x64],0xfffffff5
  416795:	arpl   WORD PTR [ebx-0x19],dx
  416798:	mov    edx,0x14febe31
  41679d:	xchg   DWORD PTR [edx-0x25],esi
  4167a0:	out    dx,al
  4167a1:	ror    bl,0x8d
  4167a4:	sahf   
  4167a5:	shr    DWORD PTR [ebx],1
  4167a7:	inc    edx
  4167a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a9:	in     al,dx
  4167aa:	sbb    al,0xd4
  4167ac:	jge    0x4167e8
  4167ae:	std    
  4167af:	mov    ds:0x8a0aefbb,al
  4167b4:	lds    esi,FWORD PTR [edx+edi*2-0x58]
  4167b8:	test   al,0x58
  4167ba:	add    ecx,edx
  4167bc:	popf   
  4167bd:	xor    ebx,esi
  4167bf:	icebp  
  4167c0:	add    DWORD PTR [esi],eax
  4167c2:	jge    0x416810
  4167c4:	or     al,0xd1
  4167c6:	cmp    DWORD PTR [eax-0x19d2d259],0xa758d0b6
  4167d0:	pop    eax
  4167d1:	sub    DWORD PTR es:[edi+0x503227c],ecx
  4167d8:	and    al,ch
  4167da:	cmp    BYTE PTR [edx+0x56],al
  4167dd:	cld    
  4167de:	out    dx,eax
  4167df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e0:	pop    ebp
  4167e1:	ficom  DWORD PTR [esi]
  4167e3:	(bad)
  4167e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167e8:	and    al,0xe8
  4167ea:	adc    dh,dh
  4167ec:	sub    BYTE PTR [ecx],bh
  4167ee:	call   0xbcb271d4
  4167f3:	aad    0xb7
  4167f5:	(bad)  
  4167f6:	scas   eax,DWORD PTR es:[edi]
  4167f7:	rol    BYTE PTR ss:[edi+ebx*1],cl
  4167fb:	ficom  DWORD PTR [ebx-0x5a]
  4167fe:	mov    edx,0x596368a0
  416803:	pop    ebp
  416804:	popa   
  416805:	mov    ch,0x76
  416807:	std    
  416808:	mov    esi,0x888893f9
  41680d:	loop   0x416852
  41680f:	xlat   BYTE PTR ds:[ebx]
  416810:	xor    DWORD PTR [esi+0x52effa17],eax
  416816:	enter  0xa766,0x57
  41681a:	cwde   
  41681b:	(bad)  
  41681c:	push   ss
  41681d:	jmp    0x12eb:0x19b26fe0
  416824:	xchg   DWORD PTR [ebp+0x3b352272],edx
  41682a:	mov    DWORD PTR [esi+0x29ed7b1],eax
  416830:	push   ebp
  416831:	into   
  416832:	jne    0x416841
  416834:	fbstp  TBYTE PTR [eax-0x4adab801]
  41683a:	push   ds
  41683b:	outs   dx,DWORD PTR ds:[esi]
  41683c:	pop    ebx
  41683d:	adc    al,BYTE PTR [esi+0x13]
  416840:	sub    cl,al
  416842:	hlt    
  416843:	retf   0x91ef
  416846:	addr16 pop edx
  416848:	mov    fs,WORD PTR [eax-0x26]
  41684b:	inc    edx
  41684c:	bound  eax,QWORD PTR ds:[esi]
  41684f:	popa   
  416850:	mov    al,ds:0xcbaa9b2e
  416855:	mov    al,ds:0x537cbab2
  41685a:	ss push eax
  41685c:	jo     0x41686e
  41685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685f:	xor    al,0xa7
  416861:	sub    DWORD PTR [edx-0x29b5322c],ebp
  416867:	jg     0x416871
  416869:	test   DWORD PTR [ecx-0x42d67fdb],edi
  41686f:	(bad)  
  416870:	xor    eax,edi
  416872:	sub    al,0xb3
  416874:	mov    bh,0x3b
  416876:	pop    ebx
  416877:	das    
  416878:	jne    0x416897
  41687a:	out    dx,al
  41687b:	mov    bl,0xc7
  41687d:	mov    DWORD PTR [eax+0xe155d6e],esp
  416883:	stc    
  416884:	sbb    ebp,ebp
  416886:	add    bl,BYTE PTR [edi+edx*4-0x1a]
  41688a:	dec    ecx
  41688b:	fs sbb al,0x7f
  41688e:	ss xchg ecx,eax
  416890:	cwde   
  416891:	or     DWORD PTR [edi-0x1effa6ab],eax
  416897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416898:	test   BYTE PTR [ecx+0xb900764],bl
  41689e:	fistp  DWORD PTR [edx+0x3]
  4168a1:	sbb    BYTE PTR [esi+edi*8-0x1b56122],ch
  4168a8:	sbb    ecx,DWORD PTR [ecx]
  4168aa:	push   ecx
  4168ab:	push   ecx
  4168ac:	out    0xa0,al
  4168ae:	test   al,0x2c
  4168b0:	in     al,dx
  4168b1:	add    DWORD PTR [edi-0x54e0541d],edx
  4168b7:	std    
  4168b8:	out    0xd9,eax
  4168ba:	in     eax,0xe6
  4168bc:	xor    BYTE PTR [edx],dl
  4168be:	aaa    
  4168bf:	add    al,0x8a
  4168c1:	call   0x54106929
  4168c6:	fcomp  st(4)
  4168c8:	out    dx,eax
  4168c9:	xor    DWORD PTR [edx+0x11],0x6ef64563
  4168d0:	ds adc eax,0x568150be
  4168d6:	icebp  
  4168d7:	jg     0x416942
  4168d9:	dec    ebx
  4168da:	ss mov dl,0x43
  4168dd:	xchg   BYTE PTR [ebp+0x3d],dl
  4168e0:	iret   
  4168e1:	dec    sp
  4168e3:	int3   
  4168e4:	cmp    esp,DWORD PTR [ecx+ebp*2]
  4168e7:	jg     0x4168e2
  4168e9:	fld    DWORD PTR [ecx+0x9]
  4168ec:	xchg   esp,eax
  4168ed:	cld    
  4168ee:	push   0x27
  4168f0:	mov    DWORD PTR ds:0x473e5c06,eax
  4168f6:	loopne 0x416890
  4168f8:	and    eax,0xf15da2e5
  4168fd:	pop    ecx
  4168fe:	shr    DWORD PTR [ebp-0x23],0x1d
  416902:	add    ebp,DWORD PTR [ebp+ecx*2+0x14]
  416906:	lods   al,BYTE PTR ds:[esi]
  416907:	sbb    DWORD PTR [edx-0x1b507bcb],ebx
  41690d:	aam    0xaa
  41690f:	mov    BYTE PTR [edx],ch
  416911:	sbb    eax,0x9e105932
  416916:	jmp    0xff01:0x4c2035e
  41691d:	adc    eax,0x4d347b35
  416922:	movlps xmm6,QWORD PTR [edx+edx*2-0x51]
  416927:	lea    edx,[edi]
  416929:	jae    0x4168ad
  41692b:	fsub   QWORD PTR [ebx]
  41692d:	(bad)  
  41692f:	shl    BYTE PTR [ebp-0x78],0xea
  416933:	iret   
  416934:	sbb    DWORD PTR ds:0xdde7de0f,ebx
  41693a:	shrd   DWORD PTR [edx-0x28e7bd2d],edi,cl
  416941:	dec    ebx
  416942:	xor    edi,DWORD PTR ds:0x912b4000
  416948:	adc    DWORD PTR [esi],0x39
  41694b:	or     DWORD PTR [edi],ecx
  41694d:	mov    ebp,0xe46f0751
  416952:	lahf   
  416953:	inc    edx
  416954:	add    al,0xf
  416956:	lock add DWORD PTR [ebp-0x45],ebx
  41695a:	cmp    eax,0x5adc68d9
  41695f:	aas    
  416960:	sbb    al,0x19
  416962:	test   eax,0xdb9f2c18
  416967:	lock lods eax,DWORD PTR ds:[esi]
  416969:	outs   dx,DWORD PTR ds:[esi]
  41696a:	jo     0x416995
  41696c:	and    bl,BYTE PTR [eax-0xae649b]
  416972:	mov    dh,0x93
  416974:	jbe    0x416929
  416976:	jo     0x416905
  416978:	jle    0x41690f
  41697a:	shl    DWORD PTR [esi],cl
  41697c:	push   0x3aae820e
  416981:	scas   al,BYTE PTR es:[edi]
  416982:	ins    DWORD PTR es:[edi],dx
  416983:	inc    eax
  416984:	shl    DWORD PTR [edx],cl
  416986:	push   edi
  416987:	push   0x21
  416989:	sti    
  41698a:	and    DWORD PTR [ebx],0x5d
  41698d:	pop    ds
  41698e:	loop   0x41694e
  416990:	cdq    
  416991:	ins    BYTE PTR es:[edi],dx
  416992:	xor    edx,ebp
  416994:	or     bh,BYTE PTR [ebp+0x7d2b5ba]
  41699a:	out    0x2b,eax
  41699c:	or     BYTE PTR [ebx-0xb],al
  41699f:	sbb    al,0xf1
  4169a1:	push   ecx
  4169a2:	rcl    BYTE PTR [edx+0x6bb5266f],0x20
  4169a9:	in     eax,dx
  4169aa:	or     BYTE PTR [ebx+0x56],bh
  4169ad:	jbe    0x4169b5
  4169af:	mov    ebp,DWORD PTR [edi+0x35c97e92]
  4169b5:	push   ds
  4169b6:	xlat   BYTE PTR ds:[ebx]
  4169b7:	lods   eax,DWORD PTR ds:[esi]
  4169b8:	cmp    eax,0xf45493a7
  4169bd:	or     al,0x25
  4169bf:	mov    ecx,0x9aead6fa
  4169c4:	sub    cl,BYTE PTR [eax]
  4169c6:	fsubr  DWORD PTR [bp+si]
  4169c9:	es pop es
  4169cb:	imul   ebx,DWORD PTR [edi-0x2f],0xc46a42c2
  4169d2:	(bad)  
  4169d3:	cmp    al,0x7c
  4169d5:	in     eax,0xd
  4169d7:	adc    DWORD PTR [ecx-0x3955e159],esi
  4169dd:	aas    
  4169de:	xchg   ebx,eax
  4169df:	mov    al,0x7f
  4169e1:	and    al,0x94
  4169e3:	push   es
  4169e4:	inc    ebx
  4169e5:	enter  0x8683,0x6e
  4169e9:	inc    ebx
  4169ea:	nop
  4169eb:	jmp    0x416a25
  4169ed:	outs   dx,BYTE PTR ds:[esi]
  4169ee:	ret    0xc072
  4169f1:	sub    eax,0xc1897e7d
  4169f6:	rcl    DWORD PTR [esi+0x4],1
  4169f9:	mov    edi,0x139edb8b
  4169fe:	sub    eax,0x208ee05c
  416a03:	(bad)  
  416a04:	mov    gs,WORD PTR [ebx+0x15]
  416a07:	sahf   
  416a08:	retf   0x5dc4
  416a0b:	out    0xe3,eax
  416a0d:	ds mov ch,0xc2
  416a10:	retf   
  416a11:	push   ebp
  416a12:	inc    esp
  416a13:	inc    esp
  416a14:	mov    eax,0xf3cb7f0e
  416a19:	dec    esp
  416a1a:	or     al,0x63
  416a1c:	and    ebx,edx
  416a1e:	cmp    bh,ah
  416a20:	fdivp  st(5),st
  416a22:	lahf   
  416a23:	dec    edi
  416a24:	ret    
  416a25:	xadd   DWORD PTR [ebp+0x5],edx
  416a29:	arpl   WORD PTR [eax+0x1d6fa456],si
  416a2f:	sbb    eax,0x6fb6cd89
  416a34:	sahf   
  416a35:	div    DWORD PTR [esi-0x5b6af230]
  416a3b:	lahf   
  416a3c:	push   eax
  416a3d:	sbb    al,BYTE PTR [edi+0x407282e4]
  416a43:	and    al,0x4f
  416a45:	cmc    
  416a46:	shl    BYTE PTR [ecx+0x191036ac],0xa4
  416a4d:	fsub   QWORD PTR [ebx-0xf]
  416a50:	cld    
  416a51:	mov    dh,0x80
  416a53:	cld    
  416a54:	icebp  
  416a55:	call   0x1943:0xefadab7d
  416a5c:	sbb    eax,0xcd572601
  416a61:	cs ds pop ebp
  416a64:	mov    dl,0x53
  416a66:	mov    esp,0xc74be53c
  416a6b:	test   al,0x1b
  416a6d:	fadd   QWORD PTR [edi]
  416a6f:	cmp    al,0xc
  416a71:	dec    esi
  416a72:	cmp    eax,0x11c2239b
  416a77:	ret    0xc80b
  416a7a:	aas    
  416a7b:	jne    0x416aa3
  416a7d:	or     eax,0x63a42139
  416a82:	out    dx,eax
  416a83:	js     0x416ae5
  416a85:	lds    esp,FWORD PTR [ecx+0x41]
  416a88:	arpl   WORD PTR [ebx+0x58c9f2c4],ax
  416a8e:	(bad)  
  416a8f:	shr    BYTE PTR [ebp-0x7],1
  416a92:	push   edx
  416a93:	hlt    
  416a94:	stos   DWORD PTR es:[edi],eax
  416a95:	rcr    BYTE PTR ds:[ebx+0x39],cl
  416a99:	cmp    al,0xc4
  416a9b:	int3   
  416a9c:	mov    ds:0x67ac8ceb,eax
  416aa1:	inc    edx
  416aa2:	mov    edx,0x56b36b9d
  416aa7:	ficomp WORD PTR [edx*2+0x630411c5]
  416aae:	push   ecx
  416aaf:	hlt    
  416ab0:	mov    esp,0x7a75107d
  416ab5:	mov    bh,0x7a
  416ab7:	sub    esp,ecx
  416ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aba:	fs and ebx,ecx
  416abd:	mov    edx,0xbd79f4
  416ac2:	ja     0x416b00
  416ac4:	jge    0x416afb
  416ac6:	push   cx
  416ac8:	push   esp
  416ac9:	pop    esi
  416aca:	rcr    BYTE PTR [edx],0x3a
  416acd:	mov    eax,ds:0xb843f22b
  416ad2:	leave  
  416ad3:	adc    DWORD PTR [eax+eiz*2],0xffffff9c
  416ad7:	and    eax,ebx
  416ad9:	scas   eax,DWORD PTR es:[edi]
  416ada:	pop    ebp
  416adb:	ret    
  416adc:	inc    ebx
  416add:	js     0x416a64
  416adf:	js     0x416aa9
  416ae1:	(bad)  
  416ae2:	call   0xb6a4e229
  416ae7:	pop    ebx
  416ae8:	pop    eax
  416ae9:	jp     0x416a9c
  416aeb:	call   0xad1070a8
  416af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416af1:	jecxz  0x416abd
  416af3:	lea    di,ds:0x65cec3ea
  416afa:	dec    ebp
  416afb:	fdecstp 
  416afd:	pop    edi
  416afe:	adc    BYTE PTR [edx+0x62],bl
  416b01:	cmc    
  416b02:	mov    DWORD PTR [esi],esi
  416b04:	cs mov ecx,0xf828988f
  416b0a:	frstor [eax-0x78]
  416b0d:	sar    DWORD PTR [edi-0x5ea2a2b7],0xcd
  416b14:	push   esp
  416b15:	adc    BYTE PTR [edx],ah
  416b17:	push   ecx
  416b18:	add    DWORD PTR [ecx],esp
  416b1a:	mov    eax,0x3624a201
  416b1f:	stc    
  416b20:	fild   DWORD PTR [edi+0x25]
  416b23:	sbb    ebp,DWORD PTR [ecx+0x18c92e4b]
  416b29:	push   cs
  416b2a:	push   edi
  416b2b:	rol    bh,cl
  416b2d:	out    dx,eax
  416b2e:	shr    DWORD PTR [edx-0x19],0xbb
  416b32:	dec    edx
  416b33:	mov    al,BYTE PTR [edx]
  416b35:	arpl   WORD PTR [eax-0x1a],si
  416b38:	popa   
  416b39:	dec    ecx
  416b3a:	aaa    
  416b3b:	add    dh,bh
  416b3d:	jae    0x416b61
  416b3f:	es xor edi,ebp
  416b42:	fcomp  DWORD PTR [esi]
  416b44:	xor    esi,ebx
  416b46:	inc    edx
  416b47:	stc    
  416b48:	fistp  WORD PTR [ebx-0x49]
  416b4b:	dec    edx
  416b4c:	fs ins BYTE PTR es:[edi],dx
  416b4e:	rcr    BYTE PTR [ebx+esi*1+0x15],cl
  416b52:	xchg   eax,esi
  416b54:	arpl   WORD PTR [edx+0x4e],bp
  416b57:	mov    bh,0x42
  416b59:	jns    0x416afc
  416b5b:	or     esp,DWORD PTR [ecx+0x74]
  416b5e:	fcom   QWORD PTR [edi+0x75]
  416b61:	mov    dl,0xd9
  416b63:	sub    BYTE PTR [esi],al
  416b65:	(bad)  
  416b67:	cmp    eax,DWORD PTR [eax-0x5c705b45]
  416b6d:	(bad)  
  416b6e:	pushf  
  416b6f:	or     ecx,edi
  416b71:	xor    dl,BYTE PTR [bp+di+0x1a]
  416b75:	add    al,0x45
  416b77:	clc    
  416b78:	and    BYTE PTR cs:[ebp-0x42],bl
  416b7c:	cmp    esp,DWORD PTR [eax]
  416b7e:	sbb    al,0xc4
  416b80:	and    DWORD PTR [eax],0x7e
  416b83:	into   
  416b84:	fstp   DWORD PTR [esi*2-0x3a1130ce]
  416b8b:	jmp    DWORD PTR [edx+0x6e81c782]
  416b91:	aas    
  416b92:	push   esp
  416b93:	mov    ds:0xa69ea5bb,al
  416b98:	int    0x94
  416b9a:	add    al,0x93
  416b9c:	inc    edx
  416b9d:	(bad)  
  416b9e:	ds and eax,esp
  416ba1:	or     BYTE PTR [ecx-0x7a],dl
  416ba4:	push   edx
  416ba5:	and    eax,0x7dcbeef3
  416baa:	clc    
  416bab:	xchg   ebp,eax
  416bac:	in     al,0x53
  416bae:	xchg   ecx,eax
  416baf:	fwait
  416bb0:	sti    
  416bb1:	jne    0x416bdb
  416bb3:	shl    DWORD PTR [ecx-0x75],1
  416bb6:	sbb    al,0x7b
  416bb8:	xchg   edi,eax
  416bb9:	clc    
  416bba:	inc    esi
  416bbb:	or     eax,ebx
  416bbd:	sahf   
  416bbe:	mov    ch,0x11
  416bc0:	outs   dx,BYTE PTR ds:[esi]
  416bc1:	fdiv   DWORD PTR [ebp-0x1c]
  416bc4:	add    eax,0xbfc08a48
  416bc9:	jl     0x416b74
  416bcb:	popa   
  416bcc:	ds popa 
  416bce:	mov    edi,0x50ad29a2
  416bd3:	sub    cl,dl
  416bd5:	imul   esp,DWORD PTR [eax+edx*1-0xd],0xfde52e92
  416bdd:	xor    DWORD PTR [ebx+0x2d8705ed],ecx
  416be3:	fsub   DWORD PTR [ebx+0x71f07b5e]
  416be9:	push   ebx
  416bea:	out    dx,al
  416beb:	dec    ecx
  416bec:	leave  
  416bed:	dec    eax
  416bee:	mov    al,ds:0xbb500b1b
  416bf3:	push   ebp
  416bf4:	das    
  416bf5:	cmp    BYTE PTR [ecx-0x7c],0x5b
  416bf9:	jne    0x416c79
  416bfb:	leave  
  416bfc:	sbb    cl,bh
  416bfe:	xchg   edi,eax
  416bff:	inc    esp
  416c00:	mov    BYTE PTR [ecx+edi*4+0x57709268],al
  416c07:	xchg   esi,eax
  416c08:	retf   0x445a
  416c0b:	xchg   ebx,eax
  416c0c:	add    ah,BYTE PTR [ecx-0x7295aa25]
  416c12:	push   esp
  416c13:	call   0x1747:0x6a384781
  416c1a:	add    edx,edx
  416c1c:	lods   al,BYTE PTR ds:[esi]
  416c1d:	in     al,0x13
  416c1f:	arpl   WORD PTR [ebp-0x37],sp
  416c22:	sbb    BYTE PTR [esi+ebp*4],cl
  416c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c26:	or     DWORD PTR [ecx-0x3b],edx
  416c29:	jmp    FWORD PTR [eax+0x54]
  416c2c:	pop    edx
  416c2d:	cli    
  416c2e:	stc    
  416c2f:	cs out dx,al
  416c31:	adc    al,0x60
  416c33:	or     eax,0xa6bbba11
  416c38:	mov    ebp,0xf232cd26
  416c3d:	or     al,0x1f
  416c3f:	setg   BYTE PTR [ecx]
  416c42:	add    al,BYTE PTR [eax-0x18041c78]
  416c48:	mov    esp,0x30da0638
  416c4d:	fs imul edi,edi,0xffffff84
  416c51:	sub    ch,BYTE PTR [ebp-0x504b1900]
  416c57:	fcom   DWORD PTR [eax+0x48c56822]
  416c5d:	pushf  
  416c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c5f:	mov    edi,0x8fc62b4f
  416c64:	sbb    eax,0xc0640bad
  416c69:	ja     0x416c3b
  416c6b:	test   eax,0x98eb2ca3
  416c70:	clc    
  416c71:	pop    esi
  416c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c73:	call   0xa4cc2421
  416c78:	loope  0x416c58
  416c7a:	xor    cl,BYTE PTR [ecx+0x5]
  416c7d:	fcmovu st,st(2)
  416c7f:	xor    eax,0xc7c883cb
  416c84:	pop    esp
  416c85:	popf   
  416c86:	mov    BYTE PTR [eax+0x23627ed6],bl
  416c8c:	fisttp WORD PTR [ebp+0x17]
  416c8f:	jae    0x416c6f
  416c91:	adc    al,0x9d
  416c93:	jnp    0x416cf8
  416c95:	hlt    
  416c96:	pop    edx
  416c97:	out    dx,al
  416c98:	jno    0x416cbf
  416c9a:	fcomp  QWORD PTR [edi+0x69]
  416c9d:	xchg   edi,eax
  416c9e:	dec    edx
  416c9f:	loop   0x416ce5
  416ca1:	mov    al,fs:0x46d3c304
  416ca7:	stc    
  416ca8:	icebp  
  416ca9:	retf   0x3153
  416cac:	mov    ebp,0x28de71b2
  416cb1:	push   0x1b
  416cb3:	jnp    0x416c44
  416cb5:	leave  
  416cb6:	mov    WORD PTR [ebx],?
  416cb8:	arpl   WORD PTR [esi],dx
  416cba:	test   BYTE PTR [ebp-0x49],bh
  416cbd:	adc    cl,al
  416cbf:	or     BYTE PTR [edi+0xfb54020],cl
  416cc5:	mov    ebp,0x629fd3e1
  416cca:	dec    eax
  416ccb:	xchg   BYTE PTR [eax+0x49c39a15],dl
  416cd1:	bound  esi,QWORD PTR [edi+ebx*4+0x13b08f53]
  416cd8:	loopne 0x416c86
  416cda:	adc    al,0xd1
  416cdc:	jns    0x416c69
  416cde:	(bad)  
  416ce0:	sbb    esi,DWORD PTR ds:0xd946d896
  416ce6:	fcmove st,st(7)
  416ce8:	xlat   BYTE PTR ds:[ebx]
  416ce9:	sub    bh,ah
  416ceb:	jo     0x416ccb
  416ced:	dec    ebx
  416cee:	jge    0x416d2d
  416cf0:	and    eax,0x6344daa3
  416cf5:	pushf  
  416cf6:	and    eax,0x68b4fb42
  416cfb:	ret    
  416cfc:	or     eax,0x5909e311
  416d01:	mov    dh,0x4
  416d03:	jge    0x416ce8
  416d05:	call   0x656b:0xfde8fe19
  416d0c:	push   eax
  416d0d:	mov    ss,ecx
  416d0f:	gs jmp 0x22ae56
  416d15:	fdivr  DWORD PTR [ebp+0x5e]
  416d18:	sbb    BYTE PTR [ebp-0xe],bh
  416d1b:	out    dx,eax
  416d1c:	mov    ch,0x63
  416d1e:	data16 sbb al,0xe8
  416d21:	test   BYTE PTR [esi],0x5c
  416d24:	cmp    DWORD PTR [edx-0x2792ebd3],eax
  416d2a:	aas    
  416d2b:	add    eax,0x16ffd0db
  416d30:	mov    cs,WORD PTR [eax]
  416d32:	xchg   ebx,eax
  416d33:	push   0x33
  416d35:	mov    WORD PTR ss:[esi],es
  416d38:	adc    eax,0xd7bca2e1
  416d3d:	jmp    0x78e:0xb7fcf1e2
  416d44:	jp     0x416d18
  416d46:	jl     0x416d8f
  416d48:	dec    edx
  416d49:	inc    esp
  416d4a:	fisubr DWORD PTR [ebx]
  416d4c:	in     eax,dx
  416d4d:	pop    es
  416d4e:	inc    ebx
  416d4f:	imul   DWORD PTR [ecx-0x7d]
  416d52:	mov    ecx,0xc200f94a
  416d57:	jae    0x416dc9
  416d59:	push   ecx
  416d5a:	adc    al,0x79
  416d5c:	imul   esp,DWORD PTR [ecx],0x1f
  416d5f:	jns    0x416d61
  416d61:	imul   esp,edi,0x78
  416d64:	pop    ds
  416d65:	and    DWORD PTR [edx+ecx*1],ebx
  416d68:	sub    BYTE PTR [esi-0x36],0x1c
  416d6c:	cld    
  416d6d:	adc    eax,DWORD PTR [ebp+0x40]
  416d70:	fcom   DWORD PTR [ebp-0x7fd57bdb]
  416d76:	aas    
  416d77:	jne    0x416d50
  416d79:	cmp    bh,BYTE PTR [ebx-0x5c]
  416d7c:	mov    DWORD PTR [edi-0x67],esp
  416d7f:	inc    edx
  416d80:	cli    
  416d81:	mov    es,WORD PTR [esi-0x66]
  416d84:	add    dl,BYTE PTR [ecx+ebx*4+0x3d]
  416d88:	jg     0x416dd1
  416d8a:	ret    0x9a50
  416d8d:	shl    ebp,1
  416d8f:	mov    ah,al
  416d91:	pop    ebx
  416d92:	push   edx
  416d93:	mov    esp,0x9efaba
  416d98:	mov    ch,0x69
  416d9a:	xchg   esi,eax
  416d9b:	add    al,0x86
  416d9d:	fld    QWORD PTR [ecx+0x740931af]
  416da3:	test   al,0xc8
  416da5:	imul   ebp,DWORD PTR [ebp-0x26],0x28d59590
  416dac:	pop    esp
  416dad:	sbb    al,0xae
  416daf:	rol    BYTE PTR [ebx+0x12f5f36f],cl
  416db5:	sub    eax,0x483a134
  416dba:	jecxz  0x416e25
  416dbc:	push   eax
  416dbd:	push   es
  416dbe:	retf   0x64de
  416dc1:	dec    edi
  416dc2:	mov    bh,0x8
  416dc4:	shr    DWORD PTR [ebx+0x1da7f16f],1
  416dca:	mov    ?,WORD PTR [eax+0x2b]
  416dcd:	add    DWORD PTR [ebp+0x5f299772],esi
  416dd3:	inc    ebx
  416dd4:	repz jne 0x416d87
  416dd7:	mov    bl,0x20
  416dd9:	cli    
  416dda:	mov    eax,ebx
  416ddc:	xchg   ecx,eax
  416ddd:	and    cl,bl
  416ddf:	dec    eax
  416de0:	jno    0x416df0
  416de2:	fcmovbe st,st(6)
  416de4:	push   esp
  416de5:	pop    ss
  416de6:	out    dx,eax
  416de7:	leave  
  416de8:	push   edi
  416de9:	icebp  
  416dea:	jae    0x416d8a
  416dec:	cdq    
  416ded:	int    0xb8
  416def:	pop    eax
  416df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df1:	or     edi,DWORD PTR [eax-0x7c5f798f]
  416df7:	out    dx,al
  416df8:	jnp    0x416e6f
  416dfa:	mov    ?,edi
  416dfc:	jmp    0x2651:0x86ba453d
  416e03:	imul   eax,DWORD PTR [esi+ebx*1+0x4076f51e],0xb00c803e
  416e0e:	xchg   edx,eax
  416e0f:	sub    DWORD PTR [ebp+0x77],ebx
  416e12:	or     cl,BYTE PTR [ebx]
  416e14:	rcr    ah,0x9f
  416e17:	aaa    
  416e18:	mov    ah,0xd9
  416e1a:	or     DWORD PTR [edx],ebp
  416e1c:	jne    0x416e4c
  416e1e:	push   cs
  416e1f:	or     cl,BYTE PTR [ebx+0x70]
  416e22:	inc    edx
  416e23:	sub    eax,0x4862147e
  416e28:	or     eax,0xbe1862a1
  416e2d:	int3   
  416e2e:	fisttp QWORD PTR [ecx]
  416e30:	test   eax,0xec7e99b2
  416e35:	dec    edx
  416e36:	lock jp 0x416e1d
  416e39:	xor    BYTE PTR [esi],bl
  416e3b:	mov    cl,0x5d
  416e3d:	mov    ch,0xa5
  416e3f:	out    0xc6,eax
  416e41:	pop    ss
  416e42:	je     0x416e0a
  416e44:	jl     0x416e9a
  416e46:	test   BYTE PTR [ebx-0xa3ca8d3],cl
  416e4c:	sub    DWORD PTR [edx+0x6e81618b],edi
  416e52:	test   BYTE PTR [ebp+0x103b0efd],ch
  416e58:	scas   al,BYTE PTR es:[edi]
  416e59:	mov    bl,0x97
  416e5b:	lahf   
  416e5c:	aas    
  416e5d:	push   ss
  416e5e:	cmp    al,0xd5
  416e60:	lahf   
  416e61:	push   ds
  416e62:	sub    al,0x85
  416e64:	in     eax,0x8f
  416e66:	cmp    al,0x92
  416e68:	out    0x16,eax
  416e6a:	idiv   ebx
  416e6c:	or     eax,0xf143fceb
  416e71:	mov    bh,0xb2
  416e73:	pusha  
  416e74:	mov    esi,0xdf5f6cca
  416e79:	sub    DWORD PTR [esi],edi
  416e7b:	shl    BYTE PTR [ebx+ebp*2],cl
  416e7e:	and    edx,eax
  416e80:	out    0x69,al
  416e82:	mov    ecx,eax
  416e84:	loopne 0x416ea8
  416e86:	fidivr DWORD PTR [esi-0x7e]
  416e89:	repz or eax,0xa13ec15b
  416e8f:	adc    esp,DWORD PTR [edi]
  416e91:	fadd   QWORD PTR [edx]
  416e93:	sbb    DWORD PTR [edx+0x66],eax
  416e96:	jl     0x416edf
  416e98:	addr16 sahf 
  416e9a:	add    ecx,DWORD PTR [edi]
  416e9c:	mov    WORD PTR [eax-0x25eba2a1],cs
  416ea2:	shl    DWORD PTR [ebx+0x67],0xf2
  416ea6:	mov    ds:0x527b29ca,al
  416eab:	pop    edx
  416eac:	add    eax,0xef3c8bad
  416eb1:	inc    eax
  416eb2:	cmp    dh,BYTE PTR [edx+0x32]
  416eb5:	fmul   st(4),st
  416eb7:	(bad)  
  416eb8:	xlat   BYTE PTR ds:[ebx]
  416eb9:	pop    edi
  416eba:	dec    ebx
  416ebb:	call   0x6f6b948e
  416ec0:	mov    ah,0x39
  416ec2:	fs dec esp
  416ec4:	jne    0x416eab
  416ec6:	gs mov bh,0x5e
  416ec9:	into   
  416eca:	adc    ebp,DWORD PTR [ebx+edx*1-0x4d0b8e2d]
  416ed1:	push   edi
  416ed2:	test   al,0xe9
  416ed4:	pop    edi
  416ed5:	push   ds
  416ed6:	pop    ecx
  416ed7:	add    al,0xf3
  416ed9:	test   eax,0x34b7c6a3
  416ede:	(bad)  
  416edf:	pusha  
  416ee0:	xor    bh,ch
  416ee2:	fs mov ch,0x15
  416ee5:	lea    edi,[ecx-0x2f]
  416ee8:	imul   esp,DWORD PTR [ebp-0x44],0xfffffffe
  416eec:	mov    cl,bl
  416eee:	hlt    
  416eef:	sbb    eax,0x284e9f0c
  416ef4:	or     DWORD PTR ds:0xab9a60a5,edi
  416efa:	mov    al,ds:0x85eddd1b
  416eff:	scas   eax,DWORD PTR es:[edi]
  416f00:	xor    edx,eax
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	mov    edx,esi
  416f19:	add    cl,BYTE PTR [esi]
  416f1b:	xchg   ebx,eax
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0x4a
  416f24:	add    edx,ebp
  416f26:	sub    al,0xba
  416f28:	push   0x8ff7e6a6
  416f2d:	(bad)  
  416f2e:	stc    
  416f2f:	push   ebx
  416f30:	pop    esi
  416f31:	(bad)  
  416f32:	imul   ebp,DWORD PTR ds:0x3a493786,0xffffff81
  416f39:	cdq    
  416f3a:	ret    0xc728
  416f3d:	push   edx
  416f3e:	sub    al,0xa6
  416f40:	push   ds
  416f41:	mov    dh,0x7c
  416f43:	repz push esi
  416f45:	fstp   DWORD PTR [esi-0x6d]
  416f48:	sub    BYTE PTR [ebx-0x17],al
  416f4b:	ins    DWORD PTR es:[edi],dx
  416f4c:	pop    eax
  416f4d:	mov    bl,0x38
  416f4f:	xchg   ecx,eax
  416f50:	inc    esi
  416f51:	and    eax,0xce4d74ff
  416f56:	test   al,0x23
  416f58:	rol    BYTE PTR ds:0xc53fcba8,cl
  416f5e:	jg     0x416f76
  416f60:	mov    ebx,0xbe05b22b
  416f65:	call   0x9435671d
  416f6a:	(bad)  
  416f6b:	pop    edx
  416f6c:	or     esi,DWORD PTR [ebx]
  416f6e:	inc    eax
  416f6f:	test   DWORD PTR [edx],0xeaeff8af
  416f75:	aaa    
  416f76:	or     DWORD PTR [edi-0x6a8ee00c],eax
  416f7c:	push   edx
  416f7d:	push   eax
  416f7e:	jle    0x416f37
  416f80:	test   BYTE PTR [ebx-0x4ec1e76d],dl
  416f86:	aad    0x91
  416f88:	inc    ebp
  416f89:	add    al,0x17
  416f8b:	inc    esp
  416f8c:	pop    esp
  416f8d:	and    esp,eax
  416f8f:	retf   0x4bd0
  416f92:	and    ecx,DWORD PTR [edx+ebx*8]
  416f95:	out    dx,eax
  416f96:	and    al,0xe6
  416f98:	jo     0x41700d
  416f9a:	pop    ebp
  416f9b:	aas    
  416f9c:	dec    ecx
  416f9d:	xor    eax,0x12501a43
  416fa2:	jmp    0xdb1de94c
  416fa7:	and    cl,BYTE PTR [edx+edi*4+0x29]
  416fab:	dec    ebp
  416fac:	mov    esp,0xbc36c15a
  416fb1:	mov    edi,0xef6e360e
  416fb6:	fldenv [esi+0x2808d483]
  416fbc:	mov    al,ds:0xcc9b8d29
  416fc1:	sbb    BYTE PTR [esi+0x78],ch
  416fc4:	add    BYTE PTR ds:0x14c45585,0xfe
  416fcb:	in     eax,dx
  416fcc:	pop    ebp
  416fcd:	jbe    0x417006
  416fcf:	outs   dx,BYTE PTR fs:[esi]
  416fd1:	lods   eax,DWORD PTR ds:[esi]
  416fd2:	jle    0x417015
  416fd4:	sbb    edi,0xffffffab
  416fd7:	outs   dx,BYTE PTR ds:[esi]
  416fd8:	push   edi
  416fd9:	xchg   esi,eax
  416fda:	mov    eax,ds:0x964da0f4
  416fdf:	(bad)  
  416fe0:	mov    ecx,eax
  416fe2:	pop    es
  416fe3:	cld    
  416fe4:	lock jl 0x41703e
  416fe7:	sub    eax,0xbd508718
  416fec:	div    DWORD PTR [ebx-0x39]
  416fef:	adc    DWORD PTR ds:0x8a2d9f00,0xf1881fb9
  416ff9:	and    esp,DWORD PTR [edi-0x2a]
  416ffc:	cmp    al,0x79
  416ffe:	cmc    
  416fff:	fldenv [edx-0x5e]
  417002:	push   es
  417003:	dec    ecx
  417004:	sti    
  417005:	inc    ecx
  417006:	test   BYTE PTR [ebp-0x6c],ch
  417009:	fild   WORD PTR [edi+eiz*1-0x7a]
  41700d:	add    bl,BYTE PTR [edi+0x2a]
  417010:	sbb    ebp,DWORD PTR [ebx+0x2dc3727b]
  417016:	into   
  417017:	jp     0x41700d
  417019:	call   0xd79f9068
  41701e:	mov    cl,0xeb
  417020:	add    dh,BYTE PTR [ebp+0x20]
  417023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417024:	mov    BYTE PTR [ebx],al
  417026:	call   0x8bb7f5b6
  41702b:	mov    edx,0x4204f9c9
  417030:	sbb    edi,DWORD PTR [ebx+eax*8-0x1f28f08d]
  417037:	jmp    0x718acdd5
  41703c:	mov    ebx,0x9199dfe5
  417041:	push   es
  417042:	push   cs
  417043:	shl    DWORD PTR [eax],1
  417045:	mov    ch,0x67
  417047:	push   eax
  417048:	pop    esi
  417049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41704a:	ror    BYTE PTR [edx-0x2e547999],0xa2
  417051:	stos   BYTE PTR es:[edi],al
  417052:	xor    edx,DWORD PTR [ecx]
  417054:	inc    ebx
  417055:	inc    ecx
  417056:	das    
  417057:	jno    0x417075
  417059:	cwde   
  41705a:	idiv   ecx
  41705c:	fild   QWORD PTR [ebx+0x75cdcb]
  417062:	nop
  417063:	lahf   
  417064:	lods   eax,DWORD PTR ds:[esi]
  417065:	ret    
  417066:	loopne 0x417005
  417068:	xlat   BYTE PTR ds:[ebx]
  417069:	pop    edi
  41706a:	or     eax,0x8e18c1a1
  41706f:	cmp    bh,BYTE PTR [edx-0x2e]
  417072:	or     edx,DWORD PTR gs:[ebp+eax*1-0x2a]
  417077:	jb     0x417025
  417079:	mov    DWORD PTR [esi+0x24950d55],ecx
  41707f:	xor    BYTE PTR [edi+esi*4-0x62dd6b49],al
  417086:	fistp  WORD PTR [edi+ecx*4-0x75fc3144]
  41708d:	push   ecx
  41708e:	jmp    0xdd02:0x8d421891
  417095:	push   0xe9d0d98f
  41709a:	jmp    0x4170aa
  41709c:	mov    cl,0x98
  41709e:	std    
  41709f:	pushf  
  4170a0:	xchg   edx,eax
  4170a1:	sbb    esp,DWORD PTR [ebp+0x4878a508]
  4170a7:	jo     0x4170fb
  4170a9:	nop
  4170aa:	outs   dx,BYTE PTR ds:[esi]
  4170ab:	inc    edx
  4170ac:	sub    bl,bh
  4170ae:	fcom   QWORD PTR [ebx]
  4170b0:	mov    ebx,0x8e0debaf
  4170b5:	xchg   BYTE PTR [eax],ah
  4170b7:	sub    ebx,edi
  4170b9:	jns    0x4170bb
  4170bb:	inc    esp
  4170bc:	push   0x60f236c2
  4170c1:	inc    edx
  4170c2:	push   edi
  4170c3:	inc    edx
  4170c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170c5:	lahf   
  4170c6:	xor    ch,dl
  4170c8:	sbb    DWORD PTR ss:[eax+0x79],esi
  4170cc:	fwait
  4170cd:	mov    ecx,ds
  4170cf:	jne    0x4170ba
  4170d1:	shr    ecx,cl
  4170d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d4:	imul   ebx,DWORD PTR [esp+ecx*1],0x3e100ed6
  4170db:	popf   
  4170dc:	in     eax,0x5f
  4170de:	mov    ds:0x7d6761dc,al
  4170e3:	sbb    dh,BYTE PTR [eax-0x703bc359]
  4170e9:	in     eax,dx
  4170ea:	lods   al,BYTE PTR ds:[esi]
  4170eb:	mov    esi,0xdb6c2eb3
  4170f0:	(bad)  
  4170f1:	jne    0x417152
  4170f3:	push   ss
  4170f4:	pop    es
  4170f5:	cli    
  4170f6:	or     edi,DWORD PTR ds:0x7f49cf41
  4170fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170fd:	retf   
  4170fe:	push   ebx
  4170ff:	xor    edx,DWORD PTR [edx-0x1bebb6f7]
  417105:	out    0x24,eax
  417107:	add    DWORD PTR [esi-0x1c602186],eax
  41710d:	xchg   DWORD PTR [ebp-0x79a5159e],eax
  417113:	enter  0xe2b6,0x3b
  417117:	aas    
  417118:	adc    dh,ah
  41711a:	cdq    
  41711b:	js     0x417199
  41711d:	cs std 
  41711f:	jnp    0x417199
  417121:	in     al,0x82
  417123:	pop    ebp
  417124:	sahf   
  417125:	or     DWORD PTR [edx],esi
  417127:	or     dl,dh
  417129:	jp     0x4170cc
  41712b:	xchg   DWORD PTR [eax-0x64],ecx
  41712e:	sti    
  41712f:	inc    esp
  417130:	dec    ebp
  417131:	int    0x2f
  417133:	or     eax,0xbb07d406
  417138:	stc    
  417139:	ds std 
  41713b:	fcomp  QWORD PTR [ebx]
  41713d:	(bad)  
  41713e:	sub    ch,BYTE PTR [edx-0x1]
  417141:	pop    esp
  417142:	xchg   ecx,eax
  417143:	mov    edi,0x4c9b6475
  417148:	mov    bl,0x13
  41714a:	lahf   
  41714b:	pop    esp
  41714c:	pop    es
  41714d:	popa   
  41714e:	mov    al,0x50
  417150:	xor    esp,DWORD PTR [edx-0x3f331a81]
  417156:	fs (bad) 
  417158:	xchg   ebx,eax
  417159:	dec    esi
  41715a:	sub    ch,dl
  41715c:	sbb    BYTE PTR [edi-0x4a],al
  41715f:	push   ebp
  417160:	fsub   st,st(6)
  417162:	jo     0x417199
  417164:	sub    eax,DWORD PTR [eax-0x7a]
  417167:	xor    ch,bl
  417169:	push   eax
  41716a:	push   edi
  41716b:	adc    DWORD PTR [edx],0x39f482df
  417171:	or     bh,BYTE PTR [edx-0x48bf627]
  417177:	lahf   
  417178:	loope  0x4171f5
  41717a:	mov    ds:0xe21a0cdb,al
  41717f:	cmp    eax,0x47dc6f78
  417184:	stos   BYTE PTR es:[di],al
  417186:	mov    cl,0x23
  417188:	xchg   ebp,eax
  417189:	fwait
  41718a:	sahf   
  41718b:	inc    esi
  41718c:	mov    ebx,0xb66de812
  417191:	call   0x72f32b1e
  417196:	fcmovne st,st(7)
  417198:	push   ebp
  417199:	push   edi
  41719a:	(bad)  
  41719c:	mov    dh,0x97
  41719e:	sbb    edi,ebp
  4171a0:	cmp    eax,0x5cb357d4
  4171a5:	(bad)
  4171a8:	in     al,0x60
  4171aa:	scas   al,BYTE PTR es:[edi]
  4171ab:	stos   DWORD PTR es:[edi],eax
  4171ac:	push   0x4f
  4171ae:	ins    BYTE PTR es:[edi],dx
  4171af:	adc    edi,esp
  4171b1:	test   eax,0x7d5b8f65
  4171b6:	and    ebx,DWORD PTR [esi]
  4171b8:	mov    ecx,0x7c7ab3e2
  4171bd:	std    
  4171be:	push   edx
  4171bf:	lds    esp,FWORD PTR [edi+0x359407a6]
  4171c5:	jg     0x4171a7
  4171c7:	retf   
  4171c8:	sub    esi,DWORD PTR [edx+0xcd7b02f]
  4171ce:	mov    esp,0xca5a4397
  4171d3:	test   BYTE PTR [eax],dl
  4171d5:	or     bl,ah
  4171d7:	push   ebp
  4171d8:	inc    edi
  4171d9:	mov    edi,0x796bd398
  4171de:	test   DWORD PTR [edi],ecx
  4171e0:	and    BYTE PTR [edx+0x61],bl
  4171e3:	nop
  4171e4:	jo     0x4171a4
  4171e6:	ss retf 
  4171e8:	cmp    ecx,edx
  4171ea:	and    al,BYTE PTR [ecx-0x52dac6e6]
  4171f0:	cmp    DWORD PTR [ebx],0x821656de
  4171f6:	mov    al,ds:0x2e31a625
  4171fb:	into   
  4171fc:	js     0x41724e
  4171fe:	out    0x1,eax
  417200:	xlat   BYTE PTR ds:[ebx]
  417201:	icebp  
  417202:	jle    0x417189
  417204:	aaa    
  417205:	ins    DWORD PTR es:[edi],dx
  417206:	mov    cl,0x14
  417208:	cmp    al,0xc5
  41720a:	pop    ds
  41720b:	xor    DWORD PTR [esi-0x49],ecx
  41720e:	jg     0x41720a
  417210:	inc    esi
  417211:	test   bl,al
  417213:	sub    DWORD PTR [eax],edi
  417215:	xchg   ebx,eax
  417216:	cmp    bl,BYTE PTR [ebp+0x1b45645]
  41721c:	mov    edx,0x69ba518
  417221:	pop    eax
  417222:	(bad)  
  417223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417224:	int    0x89
  417226:	sbb    ebx,DWORD PTR [ecx+ecx*4-0x59d086bd]
  41722d:	pop    ecx
  41722e:	inc    edx
  41722f:	xchg   edx,eax
  417230:	pop    ds
  417231:	shl    DWORD PTR [ecx+0x73],1
  417234:	test   eax,0xb31a7e69
  417239:	ret    
  41723a:	push   ss
  41723b:	ds stc 
  41723d:	xor    DWORD PTR [ebp+ebp*4-0x3e6a2dd8],esi
  417244:	and    al,BYTE PTR [ebp+0x5554993c]
  41724a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41724b:	push   esp
  41724c:	and    DWORD PTR [edx+0x7e],esp
  41724f:	shl    BYTE PTR [edi-0x45],1
  417252:	jmp    0x4eb3:0x6762ed04
  417259:	loopne 0x4172c3
  41725b:	test   DWORD PTR ds:0xb8478471,edx
  417261:	jne    0x4172b9
  417263:	out    0x35,al
  417265:	daa    
  417266:	mov    ebp,DWORD PTR [esi]
  417268:	lods   eax,DWORD PTR ds:[esi]
  417269:	stc    
  41726a:	jmp    0xed283906
  41726f:	add    BYTE PTR [eax+0x6d],bl
  417272:	pop    ecx
  417273:	add    dh,BYTE PTR ds:0xc5ed8e21
  417279:	inc    ebp
  41727a:	dec    edi
  41727b:	in     eax,0xea
  41727d:	adc    ebp,ecx
  41727f:	mov    ebx,0xb803bb59
  417284:	imul   ecx,esi,0xb45da911
  41728a:	out    0x5e,eax
  41728c:	mov    BYTE PTR [edi+ecx*4-0x3e],ch
  417290:	shl    BYTE PTR [edi+0x658a7028],cl
  417296:	enter  0x4ac6,0x7a
  41729a:	rcr    DWORD PTR [edi+0x71d181f0],0x18
  4172a1:	lods   al,BYTE PTR ds:[esi]
  4172a2:	sar    cl,0x93
  4172a5:	pop    ds
  4172a6:	xor    BYTE PTR [eax+esi*8],0x61
  4172aa:	shl    BYTE PTR [edi+edi*8-0x3d],0xc
  4172af:	adc    ecx,DWORD PTR [edx+0x77]
  4172b2:	test   DWORD PTR [edx-0x77],edx
  4172b5:	mov    bl,0x46
  4172b7:	sbb    esi,DWORD PTR [ebx+0x20f8bcc0]
  4172bd:	push   esp
  4172be:	clc    
  4172bf:	retf   
  4172c0:	xchg   esi,eax
  4172c1:	inc    ebp
  4172c2:	fwait
  4172c3:	js     0x417342
  4172c5:	enter  0xceca,0x88
  4172c9:	jmp    0xf362:0xcd258d18
  4172d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d1:	shl    al,cl
  4172d3:	cmp    esi,0xad537696
  4172d9:	out    0xb2,al
  4172db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172dc:	xor    al,0x13
  4172de:	mov    ds:0xc176b484,eax
  4172e3:	sub    eax,0xa2d24677
  4172e8:	mov    ecx,0x275e09d
  4172ed:	imul   edi,DWORD PTR [eax],0xffffffc9
  4172f0:	mov    DWORD PTR [esi+edx*2+0x40abd1f5],ebp
  4172f7:	fld    st(6)
  4172f9:	addr16 mov edx,cs
  4172fc:	mov    ah,0x16
  4172fe:	mov    ds:0xdb0ca7a8,eax
  417303:	push   edi
  417304:	pop    edi
  417305:	xchg   BYTE PTR ds:[eax+0x3c],al
  417309:	icebp  
  41730a:	sbb    DWORD PTR [ebx-0x8548c53],eax
  417310:	std    
  417311:	sub    BYTE PTR ds:0xcec5e521,al
  417317:	inc    esi
  417318:	cli    
  417319:	aam    0x1
  41731b:	xchg   DWORD PTR [ecx],ebx
  41731d:	dec    eax
  41731e:	mov    ebx,esi
  417320:	and    al,0xaf
  417322:	or     al,0x6b
  417324:	dec    ecx
  417325:	aas    
  417326:	ss or  al,0x38
  417329:	push   ebp
  41732a:	and    ebx,DWORD PTR [esi]
  41732c:	out    0x98,eax
  41732e:	pop    ds
  41732f:	dec    edi
  417330:	mov    dh,0x13
  417332:	mov    ch,0x45
  417334:	(bad)  
  417335:	cld    
  417336:	pop    es
  417337:	stc    
  417338:	or     dh,BYTE PTR gs:[esi+0x68382638]
  41733f:	jp     0x417322
  417341:	cmp    al,0x4c
  417343:	iret   
  417344:	call   0xa8d48037
  417349:	pop    es
  41734a:	iret   
  41734b:	or     BYTE PTR [edx],bl
  41734d:	in     al,dx
  41734e:	fild   WORD PTR [esi]
  417350:	shl    bl,0x5
  417353:	outs   dx,DWORD PTR ds:[esi]
  417354:	jb     0x417377
  417356:	jne    0x417321
  417358:	fcmovu st,st(3)
  41735a:	sub    bh,BYTE PTR [ebx+0x57]
  41735d:	mov    dh,0x90
  417360:	add    al,0xf0
  417362:	(bad)  
  417363:	xor    esp,ebx
  417365:	dec    edi
  417366:	stc    
  417367:	aam    0x76
  417369:	pop    ecx
  41736a:	mov    dl,0x18
  41736c:	jg     0x4173bd
  41736e:	and    bl,BYTE PTR [eax]
  417370:	inc    edx
  417371:	clc    
  417372:	std    
  417373:	mov    bh,0xc4
  417375:	adc    DWORD PTR [ecx-0x2b678a1],0x58b81763
  41737f:	push   ecx
  417380:	rol    BYTE PTR [ebp*4-0x10858640],0xf6
  417388:	xor    BYTE PTR [esi+0x10],dh
  41738b:	js     0x417337
  41738d:	xchg   BYTE PTR [ecx-0x100feb03],dl
  417393:	push   ecx
  417394:	jnp    0x41740b
  417396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417397:	test   eax,0x6b0b1a78
  41739c:	push   0x45
  41739e:	shl    BYTE PTR [ebp-0x1c4e1989],cl
  4173a4:	push   es
  4173a5:	jne    0x4173cf
  4173a7:	fisubr WORD PTR [edx]
  4173a9:	imul   ecx,DWORD PTR [esi+0x35],0xffffff88
  4173ad:	lds    ebp,FWORD PTR [edi-0x1158adb1]
  4173b3:	cmp    bh,ch
  4173b5:	cld    
  4173b6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4173b8:	or     ebp,DWORD PTR [ebx-0x6f]
  4173bb:	aad    0xdb
  4173bd:	mov    al,ds:0x7a92fcaf
  4173c2:	xor    eax,0xfc731d9e
  4173c7:	push   ecx
  4173c8:	mov    cl,BYTE PTR [ebx+edx*2]
  4173cb:	sbb    ecx,DWORD PTR [ebp+0x4436fa66]
  4173d1:	cmp    eax,0x90ebb1f1
  4173d6:	mov    ?,WORD PTR [ebp-0x7f68d1b4]
  4173dc:	gs inc edx
  4173de:	ins    DWORD PTR es:[edi],dx
  4173df:	dec    edx
  4173e0:	sar    BYTE PTR [eax+0x4c],0x6c
  4173e4:	int    0x35
  4173e6:	mov    DWORD PTR [ebx-0x2030226f],edi
  4173ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ed:	mov    bl,0x79
  4173ef:	cmp    BYTE PTR [ecx+0x1a50d266],bl
  4173f5:	leave  
  4173f6:	add    al,0xda
  4173f8:	jecxz  0x4173e7
  4173fa:	mov    ebp,0x44e1233d
  4173ff:	(bad)  
  417400:	sub    eax,0x8798e185
  417405:	sti    
  417406:	jge    0x4173ba
  417408:	aam    0x6c
  41740a:	or     esp,ebp
  41740c:	dec    esp
  41740d:	scas   al,BYTE PTR es:[edi]
  41740e:	inc    ecx
  41740f:	and    al,0x39
  417411:	sub    al,dl
  417413:	jae    0x417430
  417415:	or     eax,0x50ae3262
  41741a:	jg     0x417491
  41741c:	sar    ah,1
  41741e:	or     BYTE PTR [eax-0x7be87d84],cl
  417424:	sub    dh,dl
  417426:	pop    ebx
  417427:	clc    
  417428:	pop    ebp
  417429:	pop    ebp
  41742a:	mov    DWORD PTR [eax+0x67d5ef32],0x4e2c75e6
  417434:	jns    0x4173b7
  417436:	pop    ds
  417437:	in     al,0xe5
  417439:	test   BYTE PTR [esi-0x2ac42cba],0xef
  417440:	push   ax
  417442:	jb     0x417418
  417444:	aad    0x55
  417446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417447:	xchg   esp,eax
  417448:	inc    edi
  417449:	push   es
  41744a:	fsub   DWORD PTR [edi+0x3d]
  41744d:	xchg   esi,eax
  41744e:	fidiv  WORD PTR [edi+eax*4]
  417451:	sub    al,0x31
  417453:	and    edx,DWORD PTR [eax]
  417455:	in     eax,dx
  417456:	pusha  
  417457:	call   0x480e814a
  41745c:	cmp    bl,BYTE PTR [edi-0x50a02c74]
  417462:	inc    si
  417464:	cwde   
  417465:	stos   DWORD PTR es:[edi],eax
  417466:	jmp    0x5b25f770
  41746b:	mov    dh,0xec
  41746d:	xor    ah,cl
  41746f:	cmp    ecx,ebx
  417471:	dec    esp
  417472:	ss fs push ecx
  417475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417476:	in     eax,dx
  417477:	je     0x417413
  417479:	shl    DWORD PTR [edi],cl
  41747b:	and    DWORD PTR [edx-0x11d81944],ebp
  417481:	or     al,0x8c
  417483:	loope  0x41744a
  417485:	jmp    0xabef2e56
  41748a:	dec    ebx
  41748b:	dec    edi
  41748c:	xchg   ebx,eax
  41748d:	lahf   
  41748e:	idiv   bh
  417490:	dec    ebx
  417491:	mov    bh,0x4b
  417493:	push   ecx
  417494:	popf   
  417495:	lds    edx,FWORD PTR [eax]
  417497:	out    0xf5,al
  417499:	inc    ebp
  41749a:	loop   0x4174a7
  41749c:	ror    BYTE PTR [ecx],1
  41749e:	jecxz  0x41747c
  4174a0:	outs   dx,DWORD PTR ds:[esi]
  4174a1:	xchg   ebp,eax
  4174a2:	sti    
  4174a3:	in     eax,dx
  4174a4:	clc    
  4174a5:	jb     0x417477
  4174a7:	das    
  4174a8:	pop    edx
  4174a9:	aas    
  4174aa:	into   
  4174ab:	scas   al,BYTE PTR es:[edi]
  4174ac:	sub    BYTE PTR [edi-0x595c03ad],dh
  4174b2:	es pop ebx
  4174b4:	das    
  4174b5:	fadd   QWORD PTR [esi+0x6758b4a1]
  4174bb:	add    DWORD PTR fs:[ebx+0x43],esi
  4174bf:	arpl   WORD PTR [ebx+0x1e],si
  4174c2:	in     al,dx
  4174c3:	fwait
  4174c4:	add    bl,al
  4174c6:	shl    BYTE PTR [edi+0x17d89cd6],cl
  4174cc:	inc    ebx
  4174cd:	mov    dl,ah
  4174cf:	loopne 0x4174ec
  4174d1:	inc    ebp
  4174d2:	push   ds
  4174d3:	or     ah,dh
  4174d5:	inc    ebx
  4174d6:	cmp    BYTE PTR [eax+0x28b886ba],cl
  4174dc:	cli    
  4174dd:	xor    eax,DWORD PTR [edx]
  4174df:	adc    BYTE PTR [esi+0x4be6d629],ch
  4174e5:	jns    0x417545
  4174e7:	repz stc 
  4174e9:	push   0x878b84e2
  4174ee:	pop    es
  4174ef:	pmaddwd mm5,QWORD PTR [esi-0x43]
  4174f3:	out    dx,al
  4174f4:	(bad)  
  4174f5:	or     al,0x11
  4174f7:	inc    ebp
  4174f8:	data16 aad 0xa1
  4174fb:	int3   
  4174fc:	rol    BYTE PTR [edi+ebx*8-0x2a],cl
  417500:	jo     0x4174dd
  417502:	test   al,0x74
  417504:	clc    
  417505:	pusha  
  417506:	add    DWORD PTR [edi],0xffffff90
  417509:	retf   
  41750a:	stos   DWORD PTR es:[edi],eax
  41750b:	and    al,0xdb
  41750d:	add    eax,0xad76e21f
  417512:	jne    0x4174c3
  417514:	push   0x5b181ec7
  417519:	xchg   edi,eax
  41751a:	adc    eax,0x6986044d
  41751f:	cld    
  417520:	jnp    0x4174bc
  417522:	mov    cl,0xa6
  417524:	xor    BYTE PTR [ebp+0x56e651e7],0x3b
  41752b:	fcom   QWORD PTR [ebx+0x6e48e5f]
  417531:	loop   0x4174be
  417533:	gs retf 
  417535:	jno    0x4174ba
  417537:	out    0xc1,eax
  417539:	lock paddb mm6,mm2
  41753d:	(bad)  
  41753e:	fistp  WORD PTR [ebx-0x31af31b1]
  417544:	setno  BYTE PTR [ecx+ebp*8+0x7]
  417549:	dec    edx
  41754a:	inc    esi
  41754b:	jp     0x4174f7
  41754d:	(bad)  
  41754f:	mov    edx,0x5dc4232f
  417554:	xlat   BYTE PTR ds:[ebx]
  417555:	out    dx,al
  417556:	loop   0x417536
  417558:	dec    eax
  417559:	das    
  41755a:	inc    esp
  41755b:	les    ecx,FWORD PTR [edi]
  41755d:	mov    ah,0xdf
  41755f:	jmp    0x4174fe
  417561:	inc    esi
  417562:	jbe    0x4175ce
  417564:	sub    al,0xb
  417566:	xchg   ecx,eax
  417567:	jbe    0x4175b8
  417569:	std    
  41756a:	dec    eax
  41756b:	stos   DWORD PTR es:[edi],eax
  41756c:	clc    
  41756d:	jp     0x4175a7
  41756f:	xchg   edx,eax
  417570:	data16 mov bl,0xa1
  417573:	pop    eax
  417574:	outs   dx,DWORD PTR ds:[esi]
  417575:	xchg   DWORD PTR [eax+0x427ee05f],esp
  41757b:	mov    al,BYTE PTR [ebp-0x47]
  41757e:	in     eax,0x37
  417580:	jecxz  0x4175ec
  417582:	fldcw  WORD PTR [ecx]
  417584:	imul   edx,DWORD PTR [edx+0x7fd00611],0xffffffdc
  41758b:	ret    0xb5cc
  41758e:	xor    edi,DWORD PTR [edi+0x51]
  417591:	stc    
  417592:	test   al,0x68
  417594:	add    esp,DWORD PTR [ecx+0x2b7b846a]
  41759a:	pop    eax
  41759b:	test   esp,ebx
  41759d:	(bad)  
  41759e:	aam    0x73
  4175a0:	inc    eax
  4175a1:	mov    ds:0x73622a9f,al
  4175a6:	fld    st(6)
  4175a8:	out    dx,al
  4175a9:	mov    ds:0x8bedb154,al
  4175ae:	pop    ebx
  4175af:	into   
  4175b0:	pop    es
  4175b1:	dec    edi
  4175b2:	inc    eax
  4175b3:	pusha  
  4175b4:	lods   al,BYTE PTR ds:[esi]
  4175b5:	mov    DWORD PTR [eax],esp
  4175b7:	sbb    WORD PTR [esi-0x69],bx
  4175bb:	lea    edx,[edx-0x35c57549]
  4175c1:	dec    DWORD PTR [ebx+0x42]
  4175c4:	les    eax,FWORD PTR [ecx]
  4175c6:	mov    ebx,0xa0e67613
  4175cb:	cmp    BYTE PTR [esi+0x2ebfa816],bh
  4175d1:	xor    al,BYTE PTR [ebp+0x38]
  4175d4:	jns    0x41759e
  4175d6:	jge    0x41755c
  4175d8:	imul   eax,DWORD PTR [edx-0x669a8bf5],0xffffffdd
  4175df:	enter  0xa8f8,0xb3
  4175e3:	arpl   WORD PTR ds:0x3b9ba779,ax
  4175e9:	out    dx,al
  4175ea:	cmp    al,0x4b
  4175ec:	fstp   TBYTE PTR [esp+edi*4]
  4175ef:	retf   0x1a3
  4175f2:	(bad)  
  4175f3:	inc    edx
  4175f4:	test   DWORD PTR [eax+0x4038a870],ebp
  4175fa:	push   edx
  4175fb:	icebp  
  4175fc:	call   0x40c2:0x90de32f8
  417603:	out    0x61,eax
  417605:	sti    
  417606:	mov    edx,0xde3e71e1
  41760b:	ins    BYTE PTR es:[edi],dx
  41760c:	fst    st(4)
  41760e:	cmp    DWORD PTR [eax],esp
  417610:	div    DWORD PTR [ebp-0x41]
  417613:	(bad)  
  417614:	out    0x1c,eax
  417616:	xor    ah,ah
  417618:	adc    eax,0x180d7601
  41761d:	das    
  41761e:	cmp    DWORD PTR [esi+0xd14e2e6],edi
  417624:	retf   0x3036
  417627:	scas   al,BYTE PTR es:[edi]
  417628:	mov    dh,0x48
  41762a:	mov    bl,0xde
  41762c:	mov    cl,0xc6
  41762e:	ins    DWORD PTR es:[edi],dx
  41762f:	inc    esp
  417630:	adc    esi,DWORD PTR gs:[esi+0x52]
  417634:	jge    0x417689
  417636:	xchg   ecx,eax
  417637:	and    BYTE PTR [ebx-0x5c],dl
  41763a:	push   edx
  41763b:	dec    ecx
  41763c:	pop    edi
  41763d:	or     eax,0x92859457
  417642:	rcl    DWORD PTR [esi],0x34
  417645:	inc    eax
  417646:	push   ss
  417647:	dec    edi
  417648:	retf   0x45d8
  41764b:	add    eax,DWORD PTR [eax+0x2994f38a]
  417651:	shl    cl,1
  417653:	fs retf 0xd9d7
  417657:	pop    edi
  417658:	ret    0x98cc
  41765b:	push   edi
  41765c:	pop    esp
  41765d:	xchg   esi,eax
  41765e:	mov    ah,0x3e
  417660:	repnz mov BYTE PTR [ecx+0x6d4f1602],bh
  417667:	push   es
  417668:	out    0xe4,al
  41766a:	jno    0x417622
  41766c:	mov    ds:0xae99d7f3,eax
  417671:	xchg   ebx,eax
  417672:	jge    0x417695
  417674:	push   ebp
  417675:	les    ebp,FWORD PTR [ebx+0xd]
  417678:	sub    BYTE PTR [edi+edi*1],ch
  41767b:	and    esi,DWORD PTR [edx]
  41767d:	arpl   WORD PTR [edi-0x68],bp
  417680:	ror    DWORD PTR [edx+0x48],0xed
  417684:	jecxz  0x41764b
  417686:	add    al,0xbd
  417688:	or     DWORD PTR [esi-0x7fee76b6],ebp
  41768e:	imul   eax,DWORD PTR [ecx+ebp*4],0xffffffda
  417692:	out    dx,eax
  417693:	or     ecx,eax
  417695:	mov    ebp,0x70fae14c
  41769a:	ret    0xf876
  41769d:	inc    ecx
  41769e:	cmc    
  41769f:	xchg   ebp,eax
  4176a0:	mov    al,0x5c
  4176a2:	adc    DWORD PTR [edx+0x223fca5],0x62c31062
  4176ac:	rcl    DWORD PTR [edx-0x29],1
  4176af:	ins    BYTE PTR es:[edi],dx
  4176b0:	(bad)  
  4176b1:	int    0x74
  4176b3:	ds push edi
  4176b6:	xchg   edx,eax
  4176b7:	mov    edi,0xc009e998
  4176bc:	dec    ebx
  4176bd:	pop    esp
  4176be:	fdiv   DWORD PTR [esi+0x2a07ae53]
  4176c4:	js     0x417732
  4176c6:	pop    ebx
  4176c7:	ins    DWORD PTR es:[edi],dx
  4176c8:	add    esp,edi
  4176ca:	push   es
  4176cb:	xlat   BYTE PTR ds:[ebx]
  4176cc:	fisttp WORD PTR [eax-0x15]
  4176cf:	test   al,0x44
  4176d1:	dec    edx
  4176d2:	cmc    
  4176d3:	cld    
  4176d4:	and    BYTE PTR [ebp-0x331cb253],dl
  4176da:	sbb    al,0x36
  4176dc:	nop
  4176dd:	pop    edx
  4176de:	or     DWORD PTR [edx+0x3a],ebx
  4176e1:	and    al,0xf
  4176e3:	and    BYTE PTR [esi+0x6],dl
  4176e6:	aaa    
  4176e7:	add    DWORD PTR [ebx+esi*1-0x374c383b],esi
  4176ee:	test   eax,0x5e613e5d
  4176f3:	call   0x8e79a2cf
  4176f8:	fild   QWORD PTR [eax+ebx*4+0x3e]
  4176fc:	and    BYTE PTR [edx-0x7d],cl
  4176ff:	mov    esp,DWORD PTR [edi]
  417701:	jge    0x4176fe
  417703:	dec    BYTE PTR [eax+eiz*4]
  417706:	xbegin 0x39059bdc
  41770c:	jle    0x4176de
  41770e:	sbb    DWORD PTR [eax-0x7a],esp
  417711:	sbb    al,0x42
  417713:	repz fld DWORD PTR [ecx]
  417716:	fdiv   st(7),st
  417718:	scas   al,BYTE PTR es:[edi]
  417719:	push   ecx
  41771a:	repnz inc edi
  41771c:	repz cs es jno 0x4176df
  417721:	pusha  
  417722:	ins    DWORD PTR es:[edi],dx
  417723:	pop    edi
  417724:	xor    eax,0x797b8e5f
  417729:	xlat   BYTE PTR ds:[ebx]
  41772a:	mov    al,ds:0x232de753
  41772f:	in     eax,dx
  417730:	cmp    al,0x47
  417732:	nop
  417733:	repz mov al,0xc6
  417736:	icebp  
  417737:	jecxz  0x41774b
  417739:	jp     0x4176da
  41773b:	pop    ds
  41773c:	mov    ds:0xf7ade729,eax
  417741:	cmovne eax,DWORD PTR [edi+0x66c0b1e7]
  417748:	ret    
  417749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41774a:	in     al,0xa0
  41774c:	jns    0x4176db
  41774e:	clc    
  41774f:	sti    
  417750:	jmp    0x4177a1
  417752:	sahf   
  417753:	lods   eax,DWORD PTR ds:[esi]
  417754:	or     DWORD PTR [ebx],ebx
  417756:	das    
  417757:	pop    eax
  417758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417759:	je     0x417778
  41775b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41775c:	inc    edi
  41775d:	jae    0x41775e
  41775f:	aas    
  417760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417761:	jns    0x417716
  417763:	dec    edi
  417764:	(bad)  
  417765:	push   ebp
  417766:	lea    esi,[esi+0x260019ec]
  41776c:	dec    ecx
  41776d:	push   edi
  41776e:	jecxz  0x417738
  417770:	inc    eax
  417771:	outs   dx,BYTE PTR ds:[esi]
  417772:	jmp    0x7847:0xd615e784
  417779:	ret    
  41777a:	mov    DWORD PTR [ebx+esi*1+0x47],ebx
  41777e:	jmp    0x41771e
  417780:	add    al,BYTE PTR [ebp-0x65a69aff]
  417786:	pop    ebp
  417787:	or     ebp,ecx
  417789:	mov    ah,0xc2
  41778b:	outs   dx,BYTE PTR ds:[esi]
  41778c:	inc    eax
  41778d:	cmp    cl,BYTE PTR [eax-0x1d]
  417790:	xlat   BYTE PTR ds:[ebx]
  417791:	fidiv  DWORD PTR [edi-0x4b]
  417794:	push   esp
  417795:	dec    eax
  417796:	dec    ebx
  417797:	jo     0x41774f
  417799:	sub    cl,ah
  41779b:	repz hlt 
  41779d:	stos   DWORD PTR es:[edi],eax
  41779e:	and    BYTE PTR [eax],0x84
  4177a1:	jmp    0x79cc5526
  4177a6:	pop    esi
  4177a7:	pop    ebp
  4177a8:	daa    
  4177a9:	adc    ebx,DWORD PTR [edx]
  4177ab:	dec    eax
  4177ac:	or     al,0x7e
  4177af:	ret    0x67ca
  4177b2:	inc    esi
  4177b3:	inc    bl
  4177b5:	ins    BYTE PTR es:[edi],dx
  4177b6:	cmp    DWORD PTR [edx-0x60],eax
  4177b9:	adc    al,0x18
  4177bb:	hlt    
  4177bc:	xor    DWORD PTR [edx],ecx
  4177be:	pop    es
  4177bf:	add    al,0xa8
  4177c1:	test   edi,esp
  4177c3:	imul   esi,DWORD PTR [eax+0x40],0xffffffb4
  4177c7:	inc    esp
  4177c8:	call   0x7966:0xe631d632
  4177cf:	mov    al,0xb7
  4177d1:	fwait
  4177d2:	sub    al,0xb3
  4177d4:	mov    ecx,0x3de80020
  4177d9:	mov    ecx,0xbd36dfd3
  4177de:	mov    edi,0x872fb263
  4177e3:	xlat   BYTE PTR ds:[ebx]
  4177e4:	xor    eax,0xb73917ff
  4177e9:	xchg   ecx,eax
  4177ea:	pusha  
  4177eb:	in     al,0xbd
  4177ed:	ja     0x417794
  4177ef:	out    dx,eax
  4177f0:	xchg   ecx,eax
  4177f1:	gs sub edx,ecx
  4177f4:	(bad)  
  4177f6:	out    dx,al
  4177f7:	push   DWORD PTR [eax-0x4e]
  4177fa:	adc    DWORD PTR [ebp+ecx*1-0xd],esi
  4177fe:	shl    BYTE PTR [eax+0x37],1
  417801:	add    cl,BYTE PTR [ecx-0x589c37aa]
  417807:	sbb    eax,0x1e3e8dc4
  41780c:	in     al,0x85
  41780e:	jb     0x417846
  417810:	ret    
  417811:	fidivr DWORD PTR [ecx]
  417813:	cwde   
  417814:	adc    DWORD PTR [eax+0x44011eae],ebp
  41781a:	lahf   
  41781b:	and    esp,DWORD PTR [edx]
  41781d:	pushf  
  41781e:	ftst   
  417820:	fistp  WORD PTR ds:0x52c677ae
  417826:	(bad)  
  417827:	cmp    DWORD PTR [edx+0x1dd0394],eax
  41782d:	mov    ch,0x15
  41782f:	push   esi
  417830:	add    eax,0xe9661881
  417835:	xor    DWORD PTR [edx-0x8],0x14
  417839:	mov    cl,0xf9
  41783b:	test   al,0xf
  41783d:	stc    
  41783e:	xor    al,0x46
  417840:	call   0xa7e55a92
  417845:	cmp    ah,bh
  417847:	ins    DWORD PTR es:[edi],dx
  417848:	into   
  417849:	repz mov esp,ebx
  41784c:	mov    al,ds:0xbb88dc17
  417851:	sahf   
  417852:	loope  0x417884
  417854:	enter  0xff44,0x86
  417858:	lods   eax,DWORD PTR ds:[esi]
  417859:	out    dx,al
  41785a:	mov    ebp,0xd4624764
  41785f:	cmc    
  417860:	adc    BYTE PTR [eax+0x2a],bh
  417863:	fidiv  DWORD PTR [edx]
  417865:	pop    edx
  417866:	add    dh,dh
  417868:	sub    ebp,DWORD PTR [eax]
  41786a:	(bad)
  41786d:	cmp    BYTE PTR [esp+edi*2-0x5f],0xb
  417872:	sbb    DWORD PTR [edi],ecx
  417874:	jno    0x4178cb
  417876:	push   edx
  417877:	daa    
  417878:	retf   0xf2a0
  41787b:	sti    
  41787c:	fnsave [ebp-0x53]
  41787f:	cdq    
  417880:	lock loop 0x4178f9
  417883:	xchg   edi,eax
  417884:	int3   
  417885:	shl    DWORD PTR [ebp+0x5ed4aa],1
  41788b:	lahf   
  41788c:	pop    esi
  41788d:	jge    0x417905
  41788f:	xchg   DWORD PTR [edi-0x7a],edi
  417892:	(bad)  
  417893:	mov    ch,BYTE PTR [ebp+0xc5441c5]
  417899:	(bad)  
  41789a:	jmp    FWORD PTR [esi+0xe]
  41789d:	int    0xc8
  41789f:	or     BYTE PTR [ecx],cl
  4178a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178a2:	inc    edi
  4178a3:	pop    eax
  4178a4:	pop    ds
  4178a5:	xor    DWORD PTR [ecx],ebx
  4178a7:	(bad)  
  4178a8:	jle    0x4178af
  4178aa:	ficom  DWORD PTR [edi+0x52]
  4178ad:	sub    BYTE PTR [bp+si-0xa],bl
  4178b1:	add    ebp,0x39
  4178b4:	aas    
  4178b5:	mov    di,WORD PTR [ecx-0x650487fb]
  4178bc:	(bad)  
  4178bd:	pushf  
  4178be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178bf:	xor    BYTE PTR [eax-0xc],ch
  4178c2:	inc    ebp
  4178c3:	call   0x62f559cd
  4178c8:	sub    BYTE PTR [edi+0x66],cl
  4178cb:	dec    ecx
  4178cc:	push   ds
  4178cd:	sub    eax,0xcbaac6e3
  4178d2:	cwde   
  4178d3:	sbb    BYTE PTR [ebp+0x71],ah
  4178d6:	arpl   WORD PTR [eax],cx
  4178d8:	call   0xafd9:0xfc137b3a
  4178df:	add    DWORD PTR [edi-0x756e6bd8],edx
  4178e5:	xchg   ebx,eax
  4178e6:	and    esi,DWORD PTR [ebx]
  4178e8:	je     0x41795b
  4178ea:	or     al,0xd2
  4178ec:	mov    eax,0xcaeb1929
  4178f1:	inc    edi
  4178f2:	jb     0x41791b
  4178f4:	and    DWORD PTR [ebp+0x1b],eax
  4178f7:	aam    0xac
  4178f9:	bnd jns 0x417893
  4178fc:	mov    ebx,0x6e1c3891
  417901:	mov    eax,ds:0x3a06706c
  417906:	mov    dl,0x83
  417908:	add    BYTE PTR [ebp+0x3d],cl
  41790b:	push   esi
  41790c:	push   ss
  41790d:	or     eax,DWORD PTR [ebx]
  41790f:	xor    eax,0x3a
  417912:	icebp  
  417913:	mov    ebx,0xef825167
  417918:	mov    DWORD PTR [ecx+0x6d],eax
  41791b:	pop    eax
  41791c:	ja     0x4178bc
  41791e:	aam    0x66
  417920:	leave  
  417921:	sub    DWORD PTR [edx+0x4ed6d66f],esi
  417927:	adc    BYTE PTR [edx+ebp*4],bl
  41792a:	adc    cl,BYTE PTR [ebx-0x22]
  41792d:	inc    esp
  41792e:	mov    WORD PTR [edx],gs
  417930:	sahf   
  417931:	popf   
  417932:	mov    bh,0x3b
  417934:	fist   DWORD PTR [esi-0xc]
  417937:	xchg   ebx,eax
  417938:	and    DWORD PTR [ecx-0xe],edx
  41793b:	std    
  41793c:	or     ebx,DWORD PTR [ebx+esi*1+0x7d]
  417940:	and    ah,BYTE PTR [ebx+0x24]
  417943:	mov    ch,0xfd
  417945:	sub    DWORD PTR [bp+di-0x7f55],ebx
  41794a:	pop    ebx
  41794b:	mov    dl,BYTE PTR [ecx+0x167f5f3a]
  417951:	das    
  417952:	bound  ebx,QWORD PTR [edx]
  417954:	(bad)  
  417955:	jp     0x4179aa
  417957:	push   0xffffffcd
  417959:	in     eax,0xb3
  41795b:	call   0x971a1c15
  417960:	ins    BYTE PTR es:[edi],dx
  417961:	dec    edi
  417962:	jns    0x417985
  417964:	add    DWORD PTR [esi-0x2733f3a0],esp
  41796a:	mov    ecx,0xe8d4fa05
  41796f:	sub    al,ah
  417971:	in     eax,0x91
  417973:	xchg   ebx,eax
  417974:	push   ds
  417975:	add    al,BYTE PTR [ebx+0x17]
  417978:	outs   dx,BYTE PTR ds:[esi]
  417979:	jl     0x4179dc
  41797b:	iret   
  41797c:	jp     0x417978
  41797e:	repnz out 0xa1,eax
  417981:	adc    cl,bl
  417983:	in     eax,dx
  417984:	pop    edx
  417985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417986:	adc    edi,eax
  417988:	gs xchg ebp,eax
  41798a:	in     al,dx
  41798b:	fwait
  41798c:	sub    al,0xf7
  41798e:	shl    BYTE PTR [ebp-0x68],cl
  417991:	sub    BYTE PTR [ebp+ecx*4+0x183ca8a8],bl
  417998:	retf   0x6ebf
  41799b:	outs   dx,BYTE PTR ds:[esi]
  41799c:	cmp    DWORD PTR [ebx],esi
  41799e:	add    al,0xec
  4179a1:	std    
  4179a2:	mov    al,ds:0x4d7b7df6
  4179a7:	mov    eax,ds:0xcd5e1ea4
  4179ac:	sub    al,0x8d
  4179ae:	push   eax
  4179af:	add    al,0xec
  4179b1:	je     0x417940
  4179b3:	js     0x417a02
  4179b5:	jmp    0x9eea4d2f
  4179ba:	fild   WORD PTR [edx-0x7b6c947d]
  4179c0:	mov    ah,0x3d
  4179c2:	xchg   ebp,eax
  4179c3:	out    dx,al
  4179c4:	jae    0x4179a0
  4179c6:	jp     0x417948
  4179c8:	pop    edx
  4179c9:	inc    ebp
  4179ca:	or     eax,0x9b771ea8
  4179cf:	push   esi
  4179d0:	xor    al,BYTE PTR [edx-0x34]
  4179d3:	in     al,dx
  4179d4:	icebp  
  4179d5:	xchg   ebx,eax
  4179d6:	inc    edx
  4179d7:	aaa    
  4179d8:	fisttp QWORD PTR [edx+0x4c252f]
  4179de:	mov    al,0xda
  4179e0:	call   0xb795:0x31c35432
  4179e7:	mov    dh,0xf5
  4179e9:	push   0xec75071e
  4179ee:	sahf   
  4179ef:	push   edi
  4179f0:	es adc al,0x99
  4179f3:	repnz push eax
  4179f5:	xchg   DWORD PTR [ebp+0x77e8d3a],ebx
  4179fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179fc:	into   
  4179fd:	inc    ebx
  4179fe:	dec    eax
  4179ff:	neg    ebp
  417a01:	js     0x417a24
  417a03:	(bad)  
  417a04:	imul   edi,DWORD PTR [eax+0x4d3c1fd2],0x7c
  417a0b:	fnstsw WORD PTR [esi-0x4908d058]
  417a11:	mov    edi,0xec56b342
  417a16:	jg     0x4179b9
  417a18:	mov    dh,0x8
  417a1a:	addr16 mov al,0x87
  417a1d:	call   0xf8e:0x72df7fe5
  417a24:	pop    esi
  417a25:	sub    DWORD PTR [ecx],edi
  417a27:	mov    cl,0x6a
  417a29:	mov    BYTE PTR [edi+ebp*8-0x42],0xea
  417a2e:	retf   
  417a2f:	jmp    0x417a2f
  417a31:	push   eax
  417a32:	test   BYTE PTR [ebp+0x33],bh
  417a35:	mov    edx,0x4152795e
  417a3a:	(bad)  
  417a3b:	aas    
  417a3c:	pop    esi
  417a3d:	jg     0x4179c7
  417a3f:	and    DWORD PTR [ecx],eax
  417a41:	cmp    bh,BYTE PTR ss:[ecx]
  417a44:	daa    
  417a45:	imul   edx,edi,0xb8785f96
  417a4b:	and    BYTE PTR [eax],cl
  417a4d:	xor    eax,0xb335fb6
  417a52:	dec    esi
  417a53:	jnp    0x417ad2
  417a55:	inc    edi
  417a56:	sbb    edx,DWORD PTR [ecx-0x23]
  417a59:	mov    esp,0x95a5c05b
  417a5e:	ds ret 
  417a60:	imul   DWORD PTR [esi-0x73b03529]
  417a66:	jae    0x417ae0
  417a68:	jb     0x417adc
  417a6a:	sahf   
  417a6b:	call   0x923b7503
  417a70:	jno    0x417a68
  417a72:	lds    eax,FWORD PTR [ecx]
  417a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a75:	das    
  417a76:	xor    ah,BYTE PTR [edi+ebx*8+0x62]
  417a7a:	jne    0x417ac3
  417a7c:	sahf   
  417a7d:	mov    eax,0xcf4617a
  417a82:	call   0x628f:0x8752fa38
  417a89:	mov    BYTE PTR [ecx+0x68],ch
  417a8c:	cdq    
  417a8d:	sub    al,0x40
  417a8f:	aad    0xed
  417a91:	popa   
  417a92:	or     esi,ebx
  417a94:	sub    eax,0xc542ea5d
  417a99:	dec    esi
  417a9a:	ja     0x417afc
  417a9c:	jb     0x417a4d
  417a9e:	jno    0x417a3f
  417aa0:	push   es
  417aa1:	outs   dx,DWORD PTR ds:[esi]
  417aa2:	test   BYTE PTR [eax-0x1d],ah
  417aa5:	test   eax,0x31b97efa
  417aaa:	lods   al,BYTE PTR ds:[esi]
  417aab:	push   ss
  417aac:	leave  
  417aad:	add    BYTE PTR [ecx-0xc],dh
  417ab0:	fisubr WORD PTR [ebp+0x4fe01779]
  417ab6:	xchg   DWORD PTR [ebx-0x4e],edx
  417ab9:	pop    eax
  417aba:	mov    esp,0xce5b4cc2
  417abf:	rcl    bh,0xcd
  417ac2:	cmp    BYTE PTR [esi+0x5b],dl
  417ac5:	adc    al,0x42
  417ac7:	pusha  
  417ac8:	or     ch,BYTE PTR [ebp+0x419ad215]
  417ace:	cmp    dl,ah
  417ad0:	jo     0x417a55
  417ad2:	mov    ecx,0x812ec952
  417ad7:	xchg   al,bl
  417ad9:	push   esi
  417ada:	sbb    cl,BYTE PTR [edi-0x69]
  417add:	(bad)  
  417ade:	mov    cl,0x51
  417ae0:	push   esi
  417ae1:	out    dx,eax
  417ae2:	xchg   ecx,esp
  417ae4:	sbb    ecx,ecx
  417ae6:	rcl    BYTE PTR [edx-0x39],1
  417ae9:	push   esp
  417aea:	mov    edi,0x1143350c
  417aef:	gs aam 0x60
  417af2:	and    al,0xc2
  417af4:	mov    bl,0x91
  417af6:	xor    esp,DWORD PTR [ebx+0x35]
  417af9:	lahf   
  417afa:	gs ins BYTE PTR es:[edi],dx
  417afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417afd:	cli    
  417afe:	push   0xd5ddee91
  417b03:	popa   
  417b04:	mov    eax,ds:0x4fae509e
  417b09:	jae    0x417abb
  417b0b:	sahf   
  417b0c:	mov    dl,0xd2
  417b0e:	xor    al,0xd9
  417b10:	inc    edi
  417b11:	les    ebx,FWORD PTR [edi]
  417b13:	sahf   
  417b14:	retf   0x580d
  417b17:	loop   0x417b0f
  417b19:	jmp    0x417b3e
  417b1b:	adc    BYTE PTR [eax],al
  417b1d:	je     0x417af8
  417b1f:	sub    al,0xe0
  417b21:	dec    eax
  417b22:	shr    BYTE PTR [eax+0x37e5417f],cl
  417b28:	mov    ah,0xc2
  417b2a:	out    0x87,eax
  417b2c:	xchg   esp,eax
  417b2d:	inc    edx
  417b2e:	add    al,0x2b
  417b30:	retf   
  417b31:	sub    DWORD PTR [ebx],ebx
  417b33:	inc    ebx
  417b34:	mov    ah,0xe8
  417b36:	mov    esi,0xa58a4e0b
  417b3b:	and    bl,BYTE PTR [edi]
  417b3d:	and    eax,0x14d1f09c
  417b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b43:	(bad)  
  417b44:	out    0x7a,al
  417b46:	icebp  
  417b47:	lock jno 0x6bb6a1bb
  417b4e:	nop
  417b4f:	enter  0xa3c4,0x9a
  417b53:	imul   ebp,eax,0x4b
  417b56:	outs   dx,DWORD PTR ds:[esi]
  417b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b58:	xchg   edx,eax
  417b59:	xlat   BYTE PTR ds:[ebx]
  417b5a:	adc    eax,0x819561b3
  417b5f:	ret    0x475
  417b62:	clc    
  417b63:	jmp    DWORD PTR [eax*4+0x2b6fe0c4]
  417b6a:	jecxz  0x417b0f
  417b6c:	sub    DWORD PTR [ebp-0x3de180a8],ecx
  417b72:	push   ecx
  417b73:	(bad)  
  417b74:	pop    ebx
  417b75:	add    eax,DWORD PTR [edi-0xc175048]
  417b7b:	sub    BYTE PTR [edx],0x7c
  417b7e:	xchg   ecx,eax
  417b7f:	iret   
  417b80:	inc    ebp
  417b81:	sbb    BYTE PTR [ebp-0x57f883d],cl
  417b87:	mov    edx,DWORD PTR [eax+0x552a08a7]
  417b8d:	mov    esi,0x9ff514b9
  417b92:	pop    ds
  417b93:	out    dx,al
  417b94:	jns    0x417bfd
  417b96:	fld    TBYTE PTR [edx]
  417b98:	sbb    bl,BYTE PTR [eax+0x26ce269f]
  417b9e:	mov    BYTE PTR [ecx],al
  417ba0:	imul   ebp,DWORD PTR [ecx-0x5e20f6d4],0x90ea4c9d
  417baa:	stos   BYTE PTR es:[edi],al
  417bab:	mov    edi,edx
  417bad:	cmp    eax,0x68
  417bb0:	mov    dh,0xcc
  417bb2:	scas   eax,DWORD PTR es:[edi]
  417bb3:	popf   
  417bb4:	(bad)  
  417bb5:	push   ds
  417bb6:	jecxz  0x417b39
  417bb8:	xlat   BYTE PTR ds:[ebx]
  417bb9:	mov    esp,0x1fa735af
  417bbe:	mov    ah,0x5f
  417bc0:	cmc    
  417bc1:	jo     0x417bcb
  417bc3:	xor    DWORD PTR [eax+ecx*2-0x31e25351],edi
  417bca:	adc    ebx,DWORD PTR [ebx+0x314e9d3]
  417bd0:	jne    0x417bb4
  417bd2:	das    
  417bd3:	jmp    0x417bf4
  417bd5:	in     al,0xa5
  417bd7:	gs mov ebp,0x3eadcf9f
  417bdd:	mov    esi,0x984cfcee
  417be2:	push   ecx
  417be3:	pop    ds
  417be4:	xlat   BYTE PTR ds:[ebx]
  417be5:	dec    esp
  417be6:	jg     0x417c4e
  417be8:	es jecxz 0x417b7d
  417beb:	jl     0x417c55
  417bed:	in     al,0x3f
  417bef:	inc    eax
  417bf0:	call   0x43bb:0x611f9993
  417bf7:	mov    WORD PTR [ebx],?
  417bf9:	jae    0x417ba1
  417bfb:	xchg   ebp,eax
  417bfc:	or     al,0x3f
  417bfe:	or     edi,DWORD PTR [esi-0x4c]
  417c01:	mov    esp,0x73f221be
  417c06:	ins    BYTE PTR es:[edi],dx
  417c07:	pop    ebx
  417c08:	lea    esp,[edi-0x56]
  417c0b:	cli    
  417c0c:	and    cl,bl
  417c0e:	adc    bl,BYTE PTR [edx+0x848197c]
  417c14:	cdq    
  417c15:	or     ch,cl
  417c17:	lds    ebp,FWORD PTR [edi+0x4c]
  417c1a:	popa   
  417c1b:	xchg   edi,eax
  417c1c:	test   DWORD PTR [edi+0x1a],0x5bb62114
  417c23:	nop
  417c24:	mov    ecx,0xdd6119ca
  417c29:	mov    esp,0x2e44652e
  417c2e:	js     0x417c09
  417c30:	jmp    0xba8262c0
  417c35:	sub    DWORD PTR [ebx-0x6fd13d0a],ecx
  417c3b:	inc    eax
  417c3c:	mov    dl,0xb4
  417c3e:	pop    esi
  417c3f:	jge    0x417cb5
  417c41:	adc    al,BYTE PTR [ebx]
  417c43:	mov    ecx,0x8b178346
  417c48:	rol    DWORD PTR [esi],1
  417c4a:	imul   BYTE PTR [ebx+0x2c]
  417c4d:	sub    DWORD PTR [esi-0x57],esp
  417c50:	shl    BYTE PTR [edi],1
  417c52:	jmp    0xcc5b:0x4616867b
  417c59:	retf   0x26eb
  417c5c:	not    DWORD PTR [esp+esi*2+0x4bbbfc3d]
  417c63:	icebp  
  417c64:	xchg   bh,ah
  417c66:	sub    cl,BYTE PTR [eax-0x76ef40c6]
  417c6c:	rcr    bh,1
  417c6e:	call   0xc31b:0xfffc5ec3
  417c75:	shl    BYTE PTR gs:[edx-0x746fceec],0x63
  417c7d:	stos   BYTE PTR es:[edi],al
  417c7e:	hlt    
  417c7f:	push   edx
  417c80:	fcomp  QWORD PTR [eax]
  417c82:	jns    0x417c7f
  417c84:	sar    DWORD PTR [ecx+eax*1+0x65bc8662],cl
  417c8b:	stc    
  417c8c:	and    eax,0xe64c8ea5
  417c91:	retf   
  417c92:	test   al,0xa2
  417c94:	fld    DWORD PTR [ebx+0x5773d240]
  417c9a:	lods   al,BYTE PTR ds:[esi]
  417c9b:	inc    edx
  417c9c:	adc    cl,BYTE PTR [eax*1+0x3a41ea5e]
  417ca3:	jo     0x417c9c
  417ca5:	ja     0x417c36
  417ca7:	push   es
  417ca8:	je     0x417c6d
  417caa:	mov    bh,0xa
  417cac:	dec    esi
  417cad:	sub    DWORD PTR [ecx+0x5149ba69],0x11
  417cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cb5:	(bad)  
  417cb6:	xlat   BYTE PTR ds:[ebx]
  417cb7:	push   ecx
  417cb8:	call   0x7dce:0x3e3e4792
  417cbf:	dec    edx
  417cc0:	mov    edi,0x6be90969
  417cc5:	loope  0x417d15
  417cc7:	test   al,0xcd
  417cc9:	mov    ebx,0xd00f4b89
  417cce:	sahf   
  417ccf:	lds    edx,FWORD PTR [edi]
  417cd1:	ins    BYTE PTR es:[edi],dx
  417cd2:	push   eax
  417cd3:	nop
  417cd4:	mov    edx,0xc811fa5e
  417cd9:	xchg   bl,cl
  417cdb:	add    bl,dl
  417cdd:	pop    ecx
  417cde:	add    BYTE PTR [ebx],dh
  417ce0:	jp     0x417c66
  417ce2:	mov    WORD PTR ds:0x91c5be3e,ds
  417ce8:	inc    esi
  417ce9:	mov    DWORD PTR [eax-0x2a489fde],edx
  417cef:	popa   
  417cf0:	scas   al,BYTE PTR es:[edi]
  417cf1:	bound  esp,QWORD PTR [ecx-0x73d5e215]
  417cf7:	pop    edx
  417cf8:	pop    es
  417cf9:	push   0x80405588
  417cfe:	sti    
  417cff:	call   0x4cb7:0xfdedf9e0
  417d06:	jp     0x417cfe
  417d08:	cli    
  417d09:	cmc    
  417d0a:	pusha  
  417d0b:	pop    es
  417d0c:	les    ebx,FWORD PTR [ebx]
  417d0e:	fild   DWORD PTR [eax-0x18e85b3a]
  417d14:	pop    ecx
  417d15:	mov    BYTE PTR [esi+0x64ed152],bh
  417d1b:	sub    DWORD PTR [edi-0x4e60ef18],ebp
  417d21:	cmp    eax,0x8b54526a
  417d26:	sbb    al,0xe7
  417d28:	nop
  417d29:	pushf  
  417d2a:	stos   DWORD PTR es:[edi],eax
  417d2b:	pop    esi
  417d2c:	mov    cl,0x0
  417d2e:	cwde   
  417d2f:	imul   ebp,DWORD PTR [edi-0x6],0x6e
  417d33:	aad    0xe1
  417d35:	push   edi
  417d36:	pop    ss
  417d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d38:	dec    eax
  417d39:	sub    al,0x2c
  417d3b:	jo     0x417d1d
  417d3d:	and    DWORD PTR [edx-0x1],ecx
  417d40:	fidivr DWORD PTR gs:[ebx*4-0xdc249c2]
  417d48:	popa   
  417d49:	jae    0x417ccb
  417d4b:	jmp    0x6443:0x96fb8ad2
  417d52:	jne    0x417d9b
  417d54:	(bad)  
  417d55:	loope  0x417d28
  417d57:	cli    
  417d58:	mov    esp,0x7423a8b2
  417d5d:	icebp  
  417d5e:	dec    eax
  417d5f:	jl     0x417cf6
  417d61:	clc    
  417d62:	lea    ebx,[ebp+0x4273e6c9]
  417d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d69:	rol    BYTE PTR [edx+eiz*4+0x7d61f4f3],1
  417d70:	jecxz  0x417d0c
  417d72:	xchg   ecx,eax
  417d73:	(bad)  
  417d74:	and    eax,0xa5d40084
  417d79:	push   0x5
  417d7b:	ficomp DWORD PTR [edx-0xb082609]
  417d81:	out    0x7e,al
  417d83:	xchg   DWORD PTR [edx-0x1779a406],edx
  417d89:	adc    eax,0x228d75ae
  417d8e:	pop    edi
  417d8f:	in     al,0x44
  417d91:	or     BYTE PTR [edi-0xce26f95],cl
  417d97:	xlat   BYTE PTR ds:[ebx]
  417d98:	int3   
  417d99:	imul   ebp,DWORD PTR [edx-0x28],0x5c4c02a4
  417da0:	adc    al,0x3e
  417da2:	popa   
  417da3:	jge    0x417d32
  417da5:	ins    DWORD PTR es:[edi],dx
  417da6:	mov    ecx,0xe3706577
  417dab:	sbb    al,0x1b
  417dad:	test   DWORD PTR [ebx-0x18],edi
  417db0:	add    eax,0x42275a87
  417db5:	hlt    
  417db6:	inc    esp
  417db7:	mov    ?,WORD PTR [ebx+ecx*8+0x7590e689]
  417dbe:	adc    BYTE PTR [ebp+esi*4-0x16],dh
  417dc2:	adc    eax,0x7aed286
  417dc7:	jge    0x417da1
  417dc9:	ror    esp,0xe3
  417dcc:	jo     0x417e29
  417dce:	sub    bh,bh
  417dd0:	iret   
  417dd1:	shr    BYTE PTR [ecx-0x43],cl
  417dd4:	jg     0x417d6f
  417dd6:	jnp    0x417e0c
  417dd8:	inc    edx
  417dd9:	sbb    esi,DWORD PTR gs:[edi+0xc0505ee]
  417de0:	xor    al,0x1c
  417de2:	dec    esp
  417de3:	sahf   
  417de4:	repz push edi
  417de6:	xor    DWORD PTR [eax],ebp
  417de8:	mov    ecx,0x7df02374
  417ded:	out    0xcc,eax
  417def:	mov    al,ds:0x228ca097
  417df4:	clc    
  417df5:	and    ebx,DWORD PTR [edi-0x7c]
  417df8:	inc    esi
  417df9:	or     ebx,ebp
  417dfb:	cs retf 0x26ef
  417dff:	mov    ds:0x4bbdf8a,al
  417e04:	adc    eax,0x93ac4807
  417e09:	in     al,0x21
  417e0b:	aam    0xee
  417e0d:	(bad)  
  417e0f:	lock aam 0x21
  417e12:	pop    edx
  417e13:	int3   
  417e14:	dec    esp
  417e15:	inc    esp
  417e16:	sub    al,0x4a
  417e18:	mov    bl,0xbf
  417e1a:	and    al,BYTE PTR [edx-0x13a4e53]
  417e20:	xor    dl,BYTE PTR [ecx+0x13]
  417e23:	and    ecx,DWORD PTR [eax+0x56f70454]
  417e29:	jmp    0x417e3b
  417e2b:	(bad)  
  417e2c:	dec    ecx
  417e2d:	jmp    0x417df1
  417e2f:	pusha  
  417e30:	ins    DWORD PTR es:[edi],dx
  417e31:	loopne 0x417e67
  417e33:	mov    esi,0xcf8fe913
  417e38:	popa   
  417e39:	sub    eax,0x3204fe5c
  417e3e:	jge    0x417e50
  417e40:	push   esi
  417e41:	mov    ebp,0x34c9461f
  417e46:	add    bl,ah
  417e48:	dec    ebp
  417e49:	mov    ds:0x3664681d,al
  417e4e:	push   cs
  417e4f:	aam    0x7e
  417e51:	push   es
  417e52:	cmp    BYTE PTR [edi+0x53a10442],0x38
  417e59:	lods   eax,DWORD PTR ds:[esi]
  417e5a:	mov    ds,WORD PTR [edi-0x7f]
  417e5d:	addr16 inc ecx
  417e5f:	ds ds gs inc edi
  417e63:	xor    al,0x7
  417e65:	or     eax,DWORD PTR [esi+0x45]
  417e68:	jge    0x417e60
  417e6a:	retf   
  417e6b:	out    0x68,eax
  417e6d:	inc    ecx
  417e6e:	sub    eax,0x63b3c66d
  417e73:	jmp    0xb14d1996
  417e78:	mov    ebp,0x75afc98d
  417e7d:	popa   
  417e7e:	cli    
  417e7f:	cmp    cl,BYTE PTR [edx]
  417e81:	test   al,0x2c
  417e83:	data16 cmp al,0xad
  417e86:	mov    ah,0x35
  417e88:	sahf   
  417e89:	loopne 0x417f00
  417e8b:	idiv   DWORD PTR [eax]
  417e8d:	cmp    ebp,esp
  417e8f:	out    0x36,al
  417e91:	loopne 0x417e55
  417e93:	pushf  
  417e94:	xchg   esi,eax
  417e95:	fcomp  DWORD PTR [edx+0x10]
  417e98:	xor    cl,dh
  417e9a:	jg     0x417e98
  417e9c:	mov    DWORD PTR [eax+0x7de16d04],esp
  417ea2:	inc    ecx
  417ea3:	mov    esp,DWORD PTR [eax+ebx*4-0x29]
  417ea7:	sub    BYTE PTR [edx],0x8
  417eaa:	jmp    0x417e73
  417eac:	push   cs
  417ead:	sbb    eax,0xea1d46bd
  417eb2:	xlat   BYTE PTR ds:[ebx]
  417eb3:	mov    eax,0x595c35aa
  417eb8:	xchg   esp,eax
  417eb9:	nop
  417eba:	dec    edx
  417ebb:	jle    0x417ece
  417ebd:	lds    ebx,FWORD PTR [esi]
  417ebf:	add    BYTE PTR [edx],ah
  417ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ec2:	ins    DWORD PTR es:[edi],dx
  417ec3:	sbb    BYTE PTR [edi],bl
  417ec5:	push   ecx
  417ec6:	(bad)  
  417ec7:	(bad)  
  417ec8:	sbb    eax,0xdd1d31d6
  417ecd:	adc    BYTE PTR [eax-0xb],0xf6
  417ed1:	push   esi
  417ed2:	pop    ecx
  417ed3:	xchg   ebp,eax
  417ed4:	mov    ebp,0xa730816e
  417ed9:	adc    al,0x6
  417edb:	sub    bl,bl
  417edd:	mov    edx,0x4e93f1b6
  417ee2:	sub    esi,DWORD PTR [ecx-0x26]
  417ee5:	or     ecx,DWORD PTR [edx]
  417ee7:	imul   DWORD PTR [esi-0xd36bc49]
  417eed:	jne    0x417e9c
  417eef:	xchg   edi,eax
  417ef0:	outs   dx,DWORD PTR ds:[esi]
  417ef1:	adc    bh,BYTE PTR [ebx]
  417ef3:	bound  ebx,QWORD PTR [edi+0x53daf49f]
  417ef9:	sbb    DWORD PTR [ecx+0x1c],0x707d8268
  417f00:	mov    ebx,0x86a27f1d
  417f05:	into   
  417f06:	push   esi
  417f07:	push   es
  417f08:	jb     0x417eab
  417f0a:	lea    ebp,[edi+0x575aea25]
  417f10:	outs   dx,BYTE PTR ds:[esi]
  417f11:	lods   eax,DWORD PTR ds:[esi]
  417f12:	mov    fs,edx
  417f14:	or     eax,DWORD PTR [ebx]
  417f16:	inc    esp
  417f17:	ja     0x417f08
  417f19:	mov    al,0xb3
  417f1b:	scas   eax,DWORD PTR es:[edi]
  417f1c:	cwde   
  417f1d:	inc    eax
  417f1e:	les    esp,FWORD PTR [edx-0x4b]
  417f21:	mov    ds:0x79faf50,eax
  417f26:	fsubr  DWORD PTR [ecx-0x2717ea92]
  417f2c:	test   cl,al
  417f2e:	fs test bl,dh
  417f31:	ror    BYTE PTR [esi-0x2e],0x78
  417f35:	jmp    0x417f20
  417f37:	ret    0x7281
  417f3a:	fdiv   DWORD PTR [ecx]
  417f3c:	repnz stc 
  417f3e:	xchg   edi,eax
  417f3f:	jmp    DWORD PTR [ebp*1-0x2bcc733d]
  417f46:	mov    DWORD PTR [ecx],esi
  417f48:	fnstenv [esi-0x71]
  417f4b:	fs inc ebp
  417f4d:	imul   ebx,DWORD PTR [ecx],0xaa6ccfce
  417f53:	xlat   BYTE PTR ds:[ebx]
  417f54:	sbb    cl,BYTE PTR [ecx-0x25]
  417f57:	and    cl,dh
  417f59:	aam    0x10
  417f5b:	js     0x417f11
  417f5d:	loope  0x417fc4
  417f5f:	(bad)  
  417f60:	mov    ebx,esi
  417f62:	lock mov ds:0x6fa8f313,al
  417f68:	sbb    BYTE PTR cs:[ebx+0x37a03350],ah
  417f6f:	retf   0xf203
  417f72:	imul   edx,DWORD PTR [ebx],0x795fe38b
  417f78:	mov    dh,0xb9
  417f7a:	pop    edx
  417f7b:	retf   0x919c
  417f7e:	test   eax,0xec9681f8
  417f83:	xor    al,0xdb
  417f85:	les    ecx,FWORD PTR [edi]
  417f87:	sti    
  417f88:	cmp    eax,0xe5c4c4ab
  417f8d:	cdq    
  417f8e:	mov    edi,0x5a68c36d
  417f93:	rcr    eax,1
  417f95:	jp     0x417f7a
  417f97:	daa    
  417f98:	pop    edx
  417f99:	lea    eax,[ecx-0x60]
  417f9c:	mov    ebp,edx
  417f9e:	icebp  
  417f9f:	add    DWORD PTR [edi+0x667fcf94],ebp
  417fa5:	push   cs
  417fa6:	dec    ebx
  417fa7:	push   edi
  417fa8:	ds adc BYTE PTR ds:[ebx+eax*8+0x7d],bl
  417fae:	bound  esp,QWORD PTR [eax]
  417fb0:	sub    bh,BYTE PTR [esi]
  417fb2:	imul   edx,DWORD PTR [bx-0x4f],0xffffff8b
  417fb7:	pop    ecx
  417fb8:	lock mov cl,0x80
  417fbb:	xor    ebp,DWORD PTR [esi]
  417fbd:	iret   
  417fbe:	push   DWORD PTR [ebp-0x6d]
  417fc1:	mov    esp,ds
  417fc3:	jnp    0x41802f
  417fc5:	icebp  
  417fc6:	mov    ecx,0x7408bd68
  417fcb:	mov    BYTE PTR [esi],ah
  417fcd:	add    al,0x52
  417fcf:	pusha  
  417fd0:	xchg   cl,ah
  417fd2:	leave  
  417fd3:	cmp    ah,bl
  417fd5:	loopne 0x418033
  417fd7:	mov    al,0xc0
  417fd9:	repnz xlat BYTE PTR ds:[ebx]
  417fdb:	push   esp
  417fdc:	lods   al,BYTE PTR ds:[esi]
  417fdd:	xchg   esi,eax
  417fdf:	cs cmp edx,esi
  417fe2:	and    ch,dh
  417fe4:	add    ecx,eax
  417fe6:	out    0xdf,eax
  417fe8:	(bad)  
  417fea:	push   ss
  417feb:	inc    esi
  417fec:	in     eax,0xfd
  417fee:	fidivr WORD PTR [edi-0x17]
  417ff1:	cmpxchg8b QWORD PTR [ecx-0x23]
  417ff5:	push   cs
  417ff6:	and    al,0xc9
  417ff8:	push   cs
  417ff9:	jae    0x41801f
  417ffb:	fstp   TBYTE PTR [esi]
  417ffd:	dec    esi
  417ffe:	push   edx
  417fff:	inc    ecx
  418000:	mov    WORD PTR [ecx+0x5],?
  418003:	sub    BYTE PTR [ecx+0x4cfd03f1],dl
  418009:	xor    DWORD PTR [esi-0x7d4fd989],ebx
  41800f:	mov    dh,0x3e
  418011:	sbb    BYTE PTR [ebx+0x2e90ee38],0x27
  418018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418019:	adc    bh,BYTE PTR [eax+edx*1-0x20]
  41801d:	das    
  41801e:	ss xchg ebp,eax
  418020:	push   ecx
  418021:	sbb    al,0xb
  418023:	mov    al,ds:0x5937f822
  418028:	inc    ebp
  418029:	cmp    bl,BYTE PTR [ebp+0x74]
  41802c:	jmp    0xbc07:0x69a0953b
  418033:	mov    ebp,0xa079d3af
  418038:	pushf  
  418039:	test   BYTE PTR [ecx-0x3665e3c8],0x7b
  418040:	outs   dx,DWORD PTR ds:[esi]
  418041:	mov    edi,0x31dac34c
  418046:	push   edx
  418047:	mov    bl,0x4f
  418049:	or     ebx,ebx
  41804b:	mov    DWORD PTR [ebp+0x17],ebp
  41804e:	push   ebp
  41804f:	or     DWORD PTR [ecx-0x75],0xc571d06b
  418056:	arpl   WORD PTR [edx],di
  418058:	nop
  418059:	ds ins DWORD PTR es:[edi],dx
  41805b:	sub    eax,0x94e0fcde
  418060:	jns    0x4180bd
  418062:	xor    al,0xbe
  418064:	sbb    al,0xcb
  418066:	sbb    DWORD PTR [esi+0x1ed92283],ecx
  41806c:	push   ecx
  41806d:	lods   al,BYTE PTR ds:[esi]
  41806e:	xor    DWORD PTR [eax],ecx
  418070:	mov    bl,0xf3
  418072:	pop    esi
  418073:	mov    esi,0x88a963f2
  418078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418079:	fistp  QWORD PTR ds:0x72a37918
  41807f:	xchg   ecx,eax
  418080:	pop    esi
  418081:	push   0xffffffe4
  418083:	adc    DWORD PTR [eax],ecx
  418085:	and    al,0xeb
  418087:	inc    edi
  418088:	jle    0x4180a5
  41808a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41808b:	push   eax
  41808c:	sbb    al,0x18
  41808e:	dec    esp
  41808f:	fld    DWORD PTR [ecx]
  418091:	mov    eax,ds:0x9bbc7e3b
  418096:	mov    esp,0x407ec95f
  41809b:	pop    ebp
  41809c:	inc    ecx
  41809d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41809f:	lahf   
  4180a0:	push   esp
  4180a1:	xor    dh,BYTE PTR [ebp-0x27]
  4180a4:	aam    0xa3
  4180a6:	xor    dh,cl
  4180a8:	sub    bh,dl
  4180aa:	mov    bl,0xc5
  4180ac:	cmp    cl,BYTE PTR [eiz*4-0x440a6dd1]
  4180b3:	push   0x53
  4180b5:	push   0x47fee5af
  4180ba:	std    
  4180bb:	mov    edi,eax
  4180bd:	or     DWORD PTR [ebx-0x1ef3205],edi
  4180c3:	dec    edx
  4180c4:	shl    ebp,1
  4180c6:	stos   DWORD PTR es:[edi],eax
  4180c7:	xchg   edx,eax
  4180c8:	xchg   esp,eax
  4180c9:	aaa    
  4180ca:	hlt    
  4180cb:	hlt    
  4180cc:	(bad)  
  4180cd:	jno    0x4180a3
  4180cf:	mov    al,BYTE PTR [esi+edx*4-0x4b86a1a9]
  4180d6:	sar    BYTE PTR [edx-0x2d],1
  4180d9:	daa    
  4180da:	or     DWORD PTR [edx],ebx
  4180dc:	call   0xab2d:0xa5269925
  4180e3:	clc    
  4180e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e5:	inc    esi
  4180e6:	hlt    
  4180e7:	xor    eax,0xf7f783e7
  4180ec:	(bad)  
  4180ed:	iret   
  4180ee:	in     al,dx
  4180ef:	and    dh,BYTE PTR [esi+0x2a]
  4180f2:	pop    ebp
  4180f3:	cld    
  4180f4:	dec    ecx
  4180f5:	pop    edx
  4180f6:	repz imul edi,DWORD PTR [eax-0x32],0xffffffee
  4180fb:	aam    0xe6
  4180fd:	scas   eax,DWORD PTR es:[edi]
  4180fe:	and    DWORD PTR [ebx+0x9],0xffffff94
  418102:	(bad)  [edi]
  418104:	adc    edx,esi
  418106:	das    
  418107:	fidivr WORD PTR [esi-0x71]
  41810a:	xor    dl,cl
  41810c:	aaa    
  41810d:	sub    ah,0xf5
  418110:	sub    bh,BYTE PTR [edi+0x13]
  418113:	stc    
  418114:	mov    BYTE PTR [edx],dl
  418116:	and    DWORD PTR [edi-0x3b],edx
  418119:	aad    0xf0
  41811b:	dec    edi
  41811c:	adc    BYTE PTR [edx+0x53],dh
  41811f:	test   BYTE PTR [eax+eax*8],ah
  418122:	(bad)  
  418123:	clc    
  418124:	mov    edi,0x9a00c900
  418129:	(bad)  
  41812a:	pop    esp
  41812b:	jge    0x41819d
  41812d:	scas   al,BYTE PTR es:[edi]
  41812e:	daa    
  41812f:	rcr    ebx,0x4f
  418132:	cli    
  418133:	inc    eax
  418134:	cmp    eax,0x6b448363
  418139:	sub    ah,BYTE PTR [eax-0x3b]
  41813c:	push   es
  41813d:	fucomip st,st(6)
  41813f:	test   BYTE PTR [esi-0x47],ch
  418142:	cmp    al,BYTE PTR [edx]
  418144:	pop    ebx
  418145:	sub    eax,0x4acdac4f
  41814a:	adc    DWORD PTR [edx+0x73],edx
  41814d:	out    dx,eax
  41814e:	and    al,BYTE PTR [edi-0x50d13d05]
  418154:	and    eax,0xe4bee920
  418159:	mov    ebp,0x5d8acb27
  41815e:	mov    ebp,0xa98ed23c
  418163:	pop    esi
  418164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418165:	xchg   ebp,eax
  418166:	sahf   
  418167:	test   DWORD PTR [eax+0x46],esp
  41816a:	dec    ebx
  41816b:	int    0x2f
  41816d:	or     eax,0x93dc6a77
  418172:	outs   dx,DWORD PTR ds:[esi]
  418173:	cmc    
  418174:	mov    bh,0xd5
  418176:	jns    0x418171
  418178:	shl    DWORD PTR [edi],1
  41817a:	pushf  
  41817b:	adc    esi,DWORD PTR [edi-0x3ee58766]
  418181:	repz shl DWORD PTR [eax],0x58
  418185:	add    cl,BYTE PTR [edi-0x39]
  418188:	mov    al,ds:0x47e14854
  41818d:	add    DWORD PTR [edx],ebx
  41818f:	and    eax,0x617dd082
  418194:	pop    esi
  418195:	xchg   esp,eax
  418196:	sahf   
  418197:	(bad)  
  418199:	data16 mov dl,0x3d
  41819c:	bndstx [esi+0x5383892d],bnd2
  4181a3:	test   BYTE PTR [esi],bh
  4181a5:	es pop ebx
  4181a7:	mov    ebx,0xfa189477
  4181ac:	and    al,0x65
  4181ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181af:	call   0xc40d:0xc919c5e6
  4181b6:	xchg   ebp,eax
  4181b7:	and    dh,bl
  4181b9:	(bad)  
  4181ba:	in     al,dx
  4181bb:	imul   edx,DWORD PTR [esi+ebp*2],0x693338a0
  4181c2:	and    eax,0x4e544f93
  4181c7:	sbb    ebx,DWORD PTR ss:[esi-0x1]
  4181cb:	cld    
  4181cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181cd:	cmp    DWORD PTR [ebp+0x25729609],ebx
  4181d3:	stos   DWORD PTR es:[edi],eax
  4181d4:	push   edx
  4181d5:	test   al,0x81
  4181d7:	jl     0x4181b2
  4181d9:	ja     0x4181ff
  4181db:	inc    edi
  4181dc:	or     BYTE PTR [ebp+0x21],ch
  4181df:	inc    ebx
  4181e0:	mov    ebx,0x90d57ab7
  4181e5:	and    eax,0x658a6b3a
  4181ea:	(bad)  
  4181eb:	ss pop esi
  4181ed:	ss inc ebx
  4181ef:	xchg   eax,edi
  4181f1:	adc    BYTE PTR [ebp+ecx*1-0x6e],bl
  4181f5:	dec    ebx
  4181f6:	outs   dx,DWORD PTR ds:[esi]
  4181f7:	in     al,dx
  4181f8:	jg     0x41817e
  4181fa:	(bad)  
  4181fb:	mov    ecx,0xca394ca8
  418200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418201:	xor    esi,DWORD PTR [ecx+0x7f]
  418204:	xor    ecx,DWORD PTR [ebp-0x4a]
  418207:	out    dx,eax
  418208:	sub    BYTE PTR [ebx+0x2e552da0],al
  41820e:	push   cs
  41820f:	cs in  eax,0x64
  418212:	adc    al,0x5c
  418214:	xor    al,0x64
  418216:	and    BYTE PTR [eax+0x5eab9eb8],bl
  41821c:	mov    esp,gs
  41821e:	pop    ebx
  41821f:	popa   
  418220:	stos   BYTE PTR es:[edi],al
  418221:	fidivr WORD PTR [ebx+0x3d]
  418224:	es icebp 
  418226:	retf   
  418227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418228:	jecxz  0x418294
  41822a:	shr    BYTE PTR [ebx-0x124127e2],cl
  418230:	jbe    0x4181f8
  418232:	test   DWORD PTR [ebp-0x14],0xce743348
  418239:	xchg   esi,eax
  41823a:	pusha  
  41823b:	outs   dx,BYTE PTR ds:[esi]
  41823c:	and    eax,DWORD PTR [ecx]
  41823e:	cdq    
  41823f:	int3   
  418240:	in     al,dx
  418241:	retf   0x4f8f
  418244:	jmp    0x2f0f:0x7f8453d5
  41824b:	loopne 0x41821b
  41824d:	(bad)  
  41824e:	clc    
  41824f:	shr    dl,cl
  418251:	aaa    
  418252:	adc    DWORD PTR [ecx+0x47],esp
  418255:	xor    eax,0x5c8a3d1a
  41825a:	call   DWORD PTR [ebp+0x24]
  41825d:	pusha  
  41825e:	sbb    bh,dh
  418260:	and    ah,BYTE PTR [ecx-0x112180c8]
  418266:	dec    esi
  418267:	jecxz  0x4181ee
  418269:	cdq    
  41826a:	or     dh,BYTE PTR [eax]
  41826c:	sbb    eax,0x1f
  41826f:	lods   al,BYTE PTR ds:[esi]
  418270:	ret    0x7c87
  418273:	neg    ebx
  418275:	add    al,BYTE PTR ds:0xe7873027
  41827b:	push   edi
  41827c:	stos   DWORD PTR es:[edi],eax
  41827d:	retf   
  41827e:	outs   dx,BYTE PTR ds:[esi]
  41827f:	fcom   QWORD PTR [ebx+ebx*4-0x3c]
  418283:	neg    DWORD PTR [edx+0x62]
  418286:	dec    ecx
  418287:	inc    sp
  418289:	nop
  41828a:	test   ecx,esi
  41828c:	adc    DWORD PTR [ecx+0x674ac27d],0xa222e79c
  418296:	addr16 test eax,0x7953d794
  41829c:	xchg   ebx,eax
  41829d:	jo     0x4182b4
  41829f:	fsubr  DWORD PTR [ebx]
  4182a1:	dec    ecx
  4182a2:	sbb    DWORD PTR [eax-0xa],ebx
  4182a5:	in     eax,0x0
  4182a7:	pop    edi
  4182a8:	sbb    eax,0x8ba989eb
  4182ad:	and    eax,0x57503f0a
  4182b2:	xor    al,0x6d
  4182b4:	popa   
  4182b5:	mov    esi,DWORD PTR [ebx+0x3]
  4182b8:	inc    eax
  4182b9:	mov    BYTE PTR [edx-0x66987bd9],dh
  4182bf:	sbb    al,0x4e
  4182c1:	and    BYTE PTR [esi-0x3e],ch
  4182c4:	cmp    ah,al
  4182c6:	ja     0x41826d
  4182c8:	bound  ecx,QWORD PTR [ecx+0x4a]
  4182cb:	dec    ebx
  4182cc:	lahf   
  4182cd:	or     BYTE PTR [esi],0x1f
  4182d0:	sar    DWORD PTR [ecx+0x3a],0x95
  4182d4:	mov    edx,0xc2bbce2f
  4182d9:	jg     0x418306
  4182db:	lea    ebx,[esi-0x1e]
  4182de:	dec    ebx
  4182df:	leave  
  4182e0:	jge    0x4182c3
  4182e2:	ds dec eax
  4182e4:	leave  
  4182e5:	dec    edx
  4182e6:	daa    
  4182e7:	adc    al,0xaf
  4182e9:	stos   BYTE PTR es:[edi],al
  4182ea:	lods   al,BYTE PTR ds:[esi]
  4182eb:	push   DWORD PTR [eax-0x72]
  4182ee:	pop    ebp
  4182ef:	fisttp WORD PTR [edi-0x72664810]
  4182f5:	xchg   ecx,eax
  4182f6:	lock mul DWORD PTR [eax+esi*1]
  4182fa:	add    DWORD PTR [edi+0x2deeaf28],esi
  418300:	jbe    0x418307
  418302:	pop    es
  418303:	loope  0x41831d
  418305:	ins    BYTE PTR es:[edi],dx
  418306:	lods   eax,DWORD PTR ds:[esi]
  418307:	jmp    0x418362
  418309:	shl    DWORD PTR [ebx-0x5d710602],cl
  41830f:	dec    edx
  418310:	ret    0x4c8
  418313:	sbb    BYTE PTR [ecx+0x5b],dl
  418316:	sub    ebp,DWORD PTR [esi-0xe9b3920]
  41831c:	adc    esi,DWORD PTR [si]
  41831f:	stos   BYTE PTR es:[edi],al
  418320:	in     eax,dx
  418321:	xchg   BYTE PTR [esi+0x4a],dl
  418324:	test   eax,0x50ad7059
  418329:	or     DWORD PTR [ebx+0x5a],esp
  41832c:	mov    dh,0xbc
  41832e:	jle    0x4182f5
  418330:	or     al,0x8c
  418333:	inc    ebx
  418334:	add    edx,DWORD PTR [ebp+0x30]
  418337:	cld    
  418338:	adc    eax,0x95d5ca69
  41833d:	enter  0x220f,0x6c
  418341:	fcom   DWORD PTR cs:[esi+0x27]
  418345:	lods   eax,DWORD PTR ds:[esi]
  418346:	cld    
  418347:	xlat   BYTE PTR ds:[ebx]
  418348:	outs   dx,DWORD PTR ds:[esi]
  418349:	add    al,0x82
  41834b:	mov    ebx,0x5e12777e
  418350:	mov    bh,0x56
  418352:	or     ah,BYTE PTR [edx+ecx*8-0x437c48bc]
  418359:	jmp    0x57c430c7
  41835e:	frstor [ecx-0x5e]
  418361:	push   edi
  418362:	lods   al,BYTE PTR ds:[esi]
  418363:	sub    esp,DWORD PTR [edi+ecx*8+0x2bc26e66]
  41836a:	mov    esp,0xf8a2f014
  41836f:	mov    dl,0xcd
  418371:	add    BYTE PTR [edx-0x58],ah
  418374:	jle    0x418320
  418376:	jle    0x418320
  418378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418379:	js     0x4183f7
  41837b:	and    BYTE PTR [edi-0x6825d41f],0xf6
  418382:	push   cs
  418383:	push   cs
  418384:	jmp    0xe267:0x5985107e
  41838b:	setle  ah
  41838e:	or     eax,ebx
  418390:	lock out 0x0,eax
  418393:	mov    al,0x88
  418395:	imul   ecx,DWORD PTR [edi+0x60],0x2f721dda
  41839c:	(bad)  
  41839d:	cmp    al,0x8d
  41839f:	mov    ch,0x94
  4183a1:	sbb    DWORD PTR [ebx+0x25],ebp
  4183a4:	cmp    ebp,DWORD PTR [eax]
  4183a6:	mov    dh,0x1c
  4183a8:	and    al,0x68
  4183aa:	add    eax,0xb1bfe240
  4183af:	xor    edi,0xffffffda
  4183b2:	rcr    DWORD PTR [esi+eax*1-0x124ac72e],cl
  4183b9:	shr    BYTE PTR [ebp-0x1d],0x3e
  4183bd:	(bad)  
  4183be:	in     al,0x3c
  4183c0:	das    
  4183c1:	dec    eax
  4183c2:	jbe    0x4183f8
  4183c4:	adc    BYTE PTR [esi-0x3357f8f3],bh
  4183ca:	dec    ebp
  4183cb:	shl    DWORD PTR [esp+eiz*8],0x26
  4183cf:	xor    eax,0x2973d66
  4183d4:	dec    esp
  4183d5:	pop    esp
  4183d6:	inc    edi
  4183d7:	call   0x33a68579
  4183dc:	out    0xea,eax
  4183de:	mov    eax,0xc382bc77
  4183e3:	jb     0x4183fd
  4183e5:	mov    esp,0x86690ac6
  4183ea:	lods   al,BYTE PTR ds:[esi]
  4183eb:	scas   al,BYTE PTR es:[edi]
  4183ec:	sbb    BYTE PTR [edx],dh
  4183ee:	lods   al,BYTE PTR ds:[esi]
  4183ef:	mov    dl,0xf0
  4183f1:	retf   
  4183f2:	jne    0x4183b8
  4183f4:	pop    ecx
  4183f5:	leave  
  4183f6:	mov    dl,cl
  4183f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183f9:	mov    cl,0x1c
  4183fb:	ss xchg ebp,eax
  4183fd:	inc    ebp
  4183fe:	xchg   edx,eax
  4183ff:	fwait
  418400:	rcl    BYTE PTR [edx],1
  418402:	jns    0x41839a
  418404:	xor    DWORD PTR [ebp+0x54],ecx
  418407:	fsubr  st(4),st
  418409:	fs xor eax,0xdb9e1c25
  41840f:	pop    ebp
  418410:	add    eax,0xfce8a4bf
  418415:	dec    ecx
  418416:	or     BYTE PTR ds:0xb90a2b1f,dl
  41841c:	fild   WORD PTR [ecx+0x421ecd45]
  418422:	shr    BYTE PTR [ecx-0x6a],0x3d
  418426:	jl     0x418408
  418428:	stc    
  418429:	jl     0x4183b9
  41842b:	push   es
  41842c:	arpl   ax,bx
  41842e:	lea    edx,[ebp-0x28]
  418431:	lea    ecx,[ebp+0x72]
  418434:	pop    es
  418435:	outs   dx,BYTE PTR ds:[esi]
  418436:	xchg   esp,eax
  418437:	repz add BYTE PTR fs:[esi+0x44],bl
  41843c:	(bad)  [ecx-0x62]
  41843f:	dec    ebx
  418440:	mov    eax,0xcbeadf27
  418445:	out    0x7c,al
  418447:	(bad)  
  418449:	inc    edi
  41844b:	add    al,0x48
  41844d:	loop   0x4184c5
  41844f:	mov    ah,0x77
  418451:	hlt    
  418452:	bnd jp 0x41844b
  418455:	xor    esi,DWORD PTR [esi-0x6df8c95]
  41845b:	or     ah,BYTE PTR gs:[eax+0x65]
  41845f:	aad    0x54
  418461:	cmp    cl,ch
  418463:	mov    ebx,0x59c8fbdc
  418468:	out    0x95,eax
  41846a:	lods   al,BYTE PTR cs:[esi]
  41846c:	xor    BYTE PTR [esi],dh
  41846e:	(bad)  
  41846f:	sbb    dl,bh
  418471:	push   cs
  418472:	shl    BYTE PTR [esp+eiz*4-0x19839d74],cl
  418479:	outs   dx,BYTE PTR ds:[esi]
  41847a:	xor    eax,0xc659f9b7
  41847f:	ss fadd st(2),st
  418482:	loop   0x4184b9
  418484:	jge    0x41847a
  418486:	pop    ebx
  418487:	idiv   DWORD PTR [eax-0x4a6bcb42]
  41848d:	les    ebx,FWORD PTR [ebp+0x705fe382]
  418493:	pop    edx
  418494:	push   eax
  418495:	nop
  418496:	and    al,BYTE PTR [ebx-0xa]
  418499:	push   DWORD PTR [ebp+0x4a]
  41849c:	call   DWORD PTR ds:0x6c749fd1
  4184a2:	repnz inc ecx
  4184a4:	adc    DWORD PTR [eax],0x5
  4184a7:	pop    es
  4184a8:	into   
  4184a9:	jno    0x41843f
  4184ab:	in     eax,0x77
  4184ad:	inc    edi
  4184ae:	sbb    eax,0x71a127cb
  4184b3:	sub    ch,0x53
  4184b6:	jne    0x4184a3
  4184b8:	mov    eax,0x6d3ac620
  4184bd:	mov    dl,0xa0
  4184bf:	or     BYTE PTR [edx],0x48
  4184c2:	sbb    dh,BYTE PTR [ecx]
  4184c4:	ret    0x17e5
  4184c7:	fld    DWORD PTR [esi]
  4184c9:	fwait
  4184ca:	stc    
  4184cb:	dec    ecx
  4184cc:	mov    bh,0x7b
  4184ce:	(bad)
  4184d1:	push   es
  4184d2:	mov    ah,0xa9
  4184d4:	(bad)  
  4184d5:	scas   al,BYTE PTR es:[edi]
  4184d6:	push   ebp
  4184d7:	es mov dh,0x35
  4184da:	mov    bl,BYTE PTR ds:[edi-0x66]
  4184de:	mov    ecx,0xd6cc67a3
  4184e3:	data16 and ch,0xd7
  4184e7:	out    dx,eax
  4184e8:	or     BYTE PTR [eax-0x2e42868f],dh
  4184ee:	mov    bl,0x4e
  4184f0:	push   ebx
  4184f1:	in     eax,dx
  4184f2:	fucom  st(5)
  4184f4:	adc    edx,eax
  4184f6:	lahf   
  4184f7:	dec    eax
  4184f8:	dec    esp
  4184f9:	data16 data16 jecxz 0x41851d
  4184fd:	mov    ds:0x4ddb48ef,al
  418502:	gs in  eax,dx
  418504:	sbb    dh,BYTE PTR [ebp+0x38]
  418507:	outs   dx,DWORD PTR ds:[esi]
  418508:	aaa    
  418509:	in     eax,dx
  41850a:	inc    ebx
  41850b:	repnz test al,0x7c
  41850e:	loopne 0x418581
  418510:	mov    ch,dh
  418512:	add    edx,DWORD PTR [edx+ebp*8]
  418515:	icebp  
  418516:	mov    edi,0x97a05ef0
  41851b:	repnz dec eax
  41851d:	fcomip st,st(5)
  41851f:	dec    ecx
  418520:	mov    bp,0x9e4d
  418524:	mov    ch,0xba
  418526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418527:	enter  0xd49a,0xc
  41852b:	sbb    DWORD PTR [esi-0x39],0xffe23b65
  418532:	push   edi
  418533:	ins    BYTE PTR es:[edi],dx
  418534:	dec    ebp
  418535:	in     eax,dx
  418536:	(bad)  
  418537:	mov    ecx,0xfec4ad49
  41853c:	out    dx,eax
  41853d:	xor    al,0xdd
  41853f:	jl     0x418511
  418541:	iret   
  418542:	cs mov ss,edi
  418545:	call   0x92da:0x99b1575b
  41854c:	pop    ss
  41854d:	adc    BYTE PTR [esi+0xe],cl
  418550:	mov    bh,0x30
  418552:	pop    es
  418553:	fsub   QWORD PTR [esi+0x2d]
  418556:	or     eax,DWORD PTR [eax]
  418558:	xchg   ebx,eax
  418559:	jmp    0x41854a
  41855b:	nop
  41855c:	sub    DWORD PTR ds:0x9360c32d,edx
  418562:	enter  0xb77f,0xe5
  418566:	mov    dl,0x60
  418568:	out    dx,eax
  418569:	sar    ebp,cl
  41856b:	sub    eax,0x8519168d
  418570:	scas   al,BYTE PTR es:[edi]
  418571:	mov    cl,0xd6
  418573:	xchg   ebx,eax
  418574:	addr16 (bad) 
  418576:	sub    eax,0x5ddf8dde
  41857b:	shl    dl,0x3a
  41857e:	inc    ebx
  41857f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418580:	xchg   esi,eax
  418581:	(bad)  
  418582:	push   ebp
  418583:	jmp    0x41858c
  418585:	mov    edx,0xac7f0ae7
  41858a:	jns    0x4185d3
  41858c:	imul   ecx,DWORD PTR [edx],0xd136b1ef
  418592:	xor    DWORD PTR [edi],ebx
  418594:	stos   DWORD PTR es:[edi],eax
  418595:	cmp    ebp,ebx
  418597:	addr16 pop esi
  418599:	call   0xa3c8:0x675dc38c
  4185a0:	cmp    BYTE PTR ds:0xa5961d24,dh
  4185a6:	fimul  WORD PTR [ebx]
  4185a8:	pop    esi
  4185a9:	(bad)  
  4185aa:	push   0x18da1dab
  4185af:	xchg   ebp,eax
  4185b0:	aam    0x7
  4185b2:	ins    DWORD PTR es:[edi],dx
  4185b3:	cmp    eax,0x49472af8
  4185b8:	jmp    0xf7bbc358
  4185bd:	pop    edi
  4185be:	mov    ecx,0xafa48b4f
  4185c3:	push   0xcdca84cb
  4185c8:	sti    
  4185c9:	ss push ss
  4185cb:	mov    ebp,0x6b1a912f
  4185d0:	mov    DWORD PTR [eax-0xc],esp
  4185d3:	adc    BYTE PTR [edi],bl
  4185d5:	aad    0x5a
  4185d7:	xchg   ebx,eax
  4185d8:	loopne 0x4185dc
  4185da:	cwde   
  4185db:	ret    0xb53a
  4185de:	ja     0x418636
  4185e0:	out    0xe4,eax
  4185e2:	jnp    0x418583
  4185e4:	xor    eax,0xc1ed1d0
  4185e9:	aaa    
  4185ea:	mov    al,0x8
  4185ec:	popa   
  4185ed:	sub    DWORD PTR [edi+0x54],ebp
  4185f0:	ja     0x418596
  4185f2:	jns    0x418645
  4185f4:	sar    ebp,1
  4185f6:	pusha  
  4185f7:	jge    0x4185d9
  4185f9:	fldcw  WORD PTR [esi]
  4185fc:	push   eax
  4185fd:	dec    BYTE PTR [edx+0x49ef3cd2]
  418603:	mov    esp,0x78b74ae3
  418608:	pop    edx
  418609:	jp     0x418680
  41860b:	xrelease mov DWORD PTR [eax+0x77],esp
  41860f:	sbb    DWORD PTR [ecx+edx*4],0x9e859833
  418616:	hlt    
  418617:	xchg   esi,eax
  418618:	cwde   
  418619:	ucomiss xmm4,xmm0
  41861c:	inc    ecx
  41861d:	imul   edi,ebx,0x2e
  418620:	xor    al,0x42
  418622:	adc    al,0xa
  418624:	add    BYTE PTR [ecx-0x26],0xb8
  418628:	nop
  418629:	arpl   WORD PTR [esi],dx
  41862b:	leave  
  41862c:	mov    ebp,?
  41862e:	jnp    0x418687
  418630:	shr    bh,cl
  418632:	and    al,0x9
  418634:	cmp    eax,0xaf736524
  418639:	xor    BYTE PTR [eax+0x4],dh
  41863c:	push   ds
  41863d:	pusha  
  41863e:	cli    
  41863f:	pop    ecx
  418640:	add    DWORD PTR [esi-0x3b],eax
  418643:	mov    bh,0xf7
  418645:	stos   DWORD PTR es:[edi],eax
  418646:	jp     0x418605
  418648:	mul    BYTE PTR [ebx-0x464beab7]
  41864e:	das    
  41864f:	shr    DWORD PTR [eax-0x606b893d],0xa5
  418656:	push   ecx
  418657:	jmp    0xe8f6799
  41865c:	xor    esi,DWORD PTR [edx-0x1d]
  41865f:	test   ch,bl
  418661:	jno    0x418677
  418663:	cmc    
  418664:	jmp    0xd323817c
  418669:	jns    0x41862e
  41866b:	test   BYTE PTR [edi],ah
  41866d:	push   ds
  41866e:	int3   
  41866f:	mov    edx,0xd52601be
  418674:	jb     0x418669
  418676:	pcmpeqd mm5,QWORD PTR [edx-0x6d]
  41867a:	sbb    eax,0x2288cecb
  41867f:	out    0x1,al
  418681:	mov    ds,WORD PTR [esp+ebx*8+0x54]
  418685:	aas    
  418686:	in     al,dx
  418687:	out    dx,eax
  418688:	cmp    BYTE PTR fs:[ecx+0x18],0xa9
  41868d:	scas   al,BYTE PTR es:[edi]
  41868e:	je     0x4186b3
  418690:	inc    edi
  418691:	push   esi
  418692:	xchg   ebp,eax
  418693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418695:	aam    0x30
  418697:	jns    0x4186e3
  418699:	lods   al,BYTE PTR ds:[esi]
  41869a:	mov    ch,0xfd
  41869c:	xchg   edx,eax
  41869d:	xchg   edi,eax
  41869e:	mov    esi,0xf69ab798
  4186a3:	jns    0x41867b
  4186a5:	pop    es
  4186a6:	lahf   
  4186a7:	aas    
  4186a8:	and    al,0x71
  4186aa:	jmp    0x418651
  4186ac:	pop    edx
  4186ad:	ins    BYTE PTR es:[edi],dx
  4186ae:	repz sar DWORD PTR [esi],0xd6
  4186b2:	xchg   edx,eax
  4186b3:	or     al,0x64
  4186b5:	outs   dx,DWORD PTR ds:[esi]
  4186b6:	pop    edi
  4186b7:	jb     0x4186f5
  4186b9:	leave  
  4186ba:	mov    edx,0x9e70e032
  4186bf:	les    ebp,FWORD PTR [ecx-0x10078666]
  4186c5:	(bad)  
  4186c6:	je     0x4186c7
  4186c8:	popf   
  4186c9:	iret   
  4186ca:	xor    esi,eax
  4186cc:	cmp    bl,dh
  4186ce:	loopne 0x418655
  4186d0:	sbb    al,0x1a
  4186d2:	ins    DWORD PTR es:[edi],dx
  4186d3:	sub    al,0x66
  4186d5:	lock out 0x59,al
  4186d8:	add    edi,ebp
  4186da:	std    
  4186db:	sub    DWORD PTR [ebx],0xa8b31b13
  4186e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186e2:	outs   dx,DWORD PTR ds:[esi]
  4186e3:	sbb    dl,BYTE PTR [ebp+0x7784b825]
  4186e9:	jmp    0x4186bb
  4186eb:	nop
  4186ec:	stos   BYTE PTR es:[edi],al
  4186ed:	mov    WORD PTR [ebx+ebp*2],cs
  4186f0:	and    BYTE PTR [ebx+0x24e1431f],0x84
  4186f7:	sar    DWORD PTR [edx],cl
  4186f9:	cmp    eax,0xc7b3e0e5
  4186fe:	push   es
  4186ff:	mov    edi,0xf87d55ca
  418704:	dec    ebx
  418705:	xor    al,0xe0
  418707:	out    dx,al
  418708:	retf   0x6eb1
  41870b:	aas    
  41870c:	fs or  al,0xe1
  41870f:	cmp    BYTE PTR [ebp+0x54b079cf],cl
  418715:	fldenv [edi-0x7e]
  418718:	inc    ebx
  418719:	(bad)  [ebx+0x21]
  41871c:	mov    bl,0xf7
  41871e:	push   edx
  41871f:	jmp    FWORD PTR [edx]
  418721:	mov    dl,0x43
  418723:	pop    ds
  418724:	outs   dx,DWORD PTR ds:[esi]
  418725:	or     dh,BYTE PTR [edx+0x636c44d4]
  41872b:	inc    edi
  41872c:	loopne 0x41877a
  41872e:	push   0x14285e0e
  418733:	sti    
  418734:	jge    0x418749
  418736:	test   DWORD PTR ds:0x7d648179,esp
  41873c:	xor    ebp,DWORD PTR [esi+edi*2+0x45]
  418740:	adc    eax,0xce3f2e53
  418745:	fisub  WORD PTR [ebx+0x2477ba0b]
  41874b:	xor    al,0xf9
  41874d:	stos   BYTE PTR es:[edi],al
  41874e:	or     ch,BYTE PTR [ebx]
  418750:	pop    eax
  418751:	cwde   
  418752:	ins    BYTE PTR es:[edi],dx
  418753:	loopne 0x418708
  418755:	(bad)  
  418757:	(bad)  
  418758:	popf   
  418759:	push   ecx
  41875b:	(bad)  
  41875c:	or     dh,BYTE PTR [eax]
  41875e:	inc    ecx
  41875f:	fs retf 
  418761:	scas   al,BYTE PTR es:[edi]
  418762:	in     al,0x12
  418764:	arpl   si,cx
  418766:	loopne 0x418752
  418768:	push   cs
  418769:	call   0xb239:0xe58aac5d
  418770:	mov    al,ds:0x35bc8dfe
  418775:	clc    
  418776:	dec    esp
  418777:	jae    0x418771
  418779:	inc    esi
  41877a:	daa    
  41877b:	cwde   
  41877c:	or     ebp,DWORD PTR [ecx+eax*1+0x79f08c81]
  418783:	popa   
  418784:	shr    BYTE PTR [ebp+0x44e23054],1
  41878a:	movaps XMMWORD PTR [ecx-0x5a7c6a57],xmm1
  418791:	in     al,0x1
  418793:	mov    edi,0xe0114ad1
  418798:	jecxz  0x41871b
  41879a:	dec    eax
  41879b:	ss mov eax,0x754bbae9
  4187a1:	jns    0x418739
  4187a3:	in     eax,0x79
  4187a5:	add    al,0x85
  4187a7:	lods   al,BYTE PTR ds:[esi]
  4187a8:	sub    DWORD PTR [esp+edx*4-0x59],ebx
  4187ac:	mov    eax,ds:0x6a1c9314
  4187b1:	leave  
  4187b2:	xchg   esi,eax
  4187b3:	inc    ebp
  4187b4:	or     al,bl
  4187b6:	out    0x19,eax
  4187b8:	cli    
  4187b9:	or     BYTE PTR [ebp+0x2794c3b6],dh
  4187bf:	repz mov dl,0x9b
  4187c2:	dec    ecx
  4187c3:	rol    eax,1
  4187c5:	mov    ?,WORD PTR cs:[ebx-0x58]
  4187c9:	int3   
  4187ca:	xchg   ecx,eax
  4187cb:	sbb    al,0x83
  4187cd:	jb     0x4187de
  4187cf:	and    al,BYTE PTR [eax-0xf]
  4187d2:	fldenv [esi-0x24]
  4187d5:	sub    bh,BYTE PTR [ecx+0x24]
  4187d8:	sbb    al,0x81
  4187da:	popa   
  4187db:	mov    ebx,0xd690f403
  4187e0:	adc    dl,BYTE PTR [edi+0x40cf3645]
  4187e6:	jnp    0x41884f
  4187e8:	or     eax,0xdcf47450
  4187ed:	out    0xd0,eax
  4187ef:	test   eax,0x9f0ae38d
  4187f4:	mov    DWORD PTR [ecx+edi*4+0x66],edi
  4187f8:	fcom   st(0)
  4187fa:	callw  0xeaba
  4187fe:	shr    BYTE PTR [ecx+0x5d236948],cl
  418804:	adc    dh,ah
  418806:	add    ah,BYTE PTR [eax+0x4f0873b6]
  41880c:	ror    ecx,1
  41880e:	cmp    al,0x6f
  418810:	test   BYTE PTR [ecx],0x37
  418813:	jle    0x41885e
  418815:	mov    dh,BYTE PTR [ebx-0x3831a6a1]
  41881b:	mov    dh,0xc
  41881d:	lods   eax,DWORD PTR ds:[esi]
  41881e:	and    eax,0x55e68197
  418823:	jg     0x418882
  418825:	sub    eax,0x4e624de1
  41882a:	jne    0x4187cc
  41882c:	pop    edx
  41882d:	pop    ds
  41882e:	jmp    0x4187dd
  418830:	xchg   edx,eax
  418831:	and    al,0x1f
  418833:	mov    ecx,0x23e7d2d3
  418838:	mul    BYTE PTR [edx+0x2e7f6aa0]
  41883e:	rcr    BYTE PTR [eax-0x58],cl
  418841:	int3   
  418842:	or     eax,0xbef751ae
  418847:	cwde   
  418848:	loop   0x41884f
  41884a:	xor    ch,0xc9
  41884d:	neg    DWORD PTR [edi+0x33]
  418850:	xor    bh,BYTE PTR [esi-0x744a645b]
  418856:	xor    DWORD PTR [ebx-0x52],ebx
  418859:	add    bl,BYTE PTR [ebp+0x53d16867]
  41885f:	les    esi,FWORD PTR [eax+0xdbfdf8d]
  418865:	inc    ebx
  418866:	jmp    0x6e0673fe
  41886b:	mov    bh,0x14
  41886d:	sbb    eax,0x24fe31c1
  418872:	arpl   WORD PTR [edi],si
  418874:	scas   eax,DWORD PTR es:[edi]
  418875:	inc    eax
  418876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418877:	iret   
  418878:	push   eax
  418879:	sbb    edx,DWORD PTR [ebp-0x3a]
  41887c:	xchg   DWORD PTR [ebx-0x1cfb12ad],ebx
  418882:	mov    DWORD PTR [edx-0x703882e3],ebp
  418888:	mov    cs,edx
  41888a:	jne    0x4188a6
  41888c:	in     eax,0x9b
  41888e:	jmp    0x5637:0x1d58b3a6
  418895:	iret   
  418896:	jmp    0x15cb:0xd8a2dc25
  41889d:	pushf  
  41889e:	int    0x11
  4188a0:	fcom   QWORD PTR fs:[edx]
  4188a3:	test   DWORD PTR [ebp+0x10],0x64f1bb70
  4188aa:	xor    BYTE PTR [ecx-0x5f9ba2aa],dh
  4188b0:	add    ah,bl
  4188b2:	aaa    
  4188b3:	cwde   
  4188b4:	xchg   edx,eax
  4188b5:	mov    DWORD PTR [ebp+0x95bc643],esi
  4188bb:	xor    eax,0x15d4e987
  4188c0:	aas    
  4188c1:	out    0x7,al
  4188c3:	mov    ecx,es
  4188c5:	out    0x37,eax
  4188c7:	in     al,0x47
  4188c9:	sub    bh,dl
  4188cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188cc:	and    DWORD PTR [ebx-0x4f],0xe3e10171
  4188d3:	(bad)  
  4188d4:	adc    eax,0x6a4d69c2
  4188d9:	xor    eax,0xc536f392
  4188de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188df:	(bad)  
  4188e1:	loop   0x4188d6
  4188e3:	cld    
  4188e4:	fcomp  DWORD PTR [ebp-0x4f2884d]
  4188ea:	dec    edi
  4188eb:	xchg   esi,eax
  4188ec:	dec    esi
  4188ed:	inc    edi
  4188ee:	mov    edx,0xc9e2cd16
  4188f3:	adc    eax,0x9e1c280e
  4188f8:	(bad)  
  4188f9:	loopne 0x418893
  4188fb:	mov    ebx,0x46ddb63f
  418900:	pop    esi
  418901:	push   0xffffffe9
  418903:	adc    ecx,DWORD PTR [eax+ecx*2+0x15cca476]
  41890a:	inc    ecx
  41890b:	pop    edx
  41890c:	loope  0x418891
  41890e:	cmp    BYTE PTR fs:[edi],dh
  418911:	cmp    esp,edx
  418913:	add    al,BYTE PTR ss:[ecx]
  418916:	ret    
  418917:	es xchg ebp,eax
  418919:	jo     0x41892e
  41891b:	adc    bh,bh
  41891d:	pop    edx
  41891e:	fs cmp al,0x42
  418921:	out    0x7d,al
  418923:	jb     0x418962
  418925:	shr    DWORD PTR [ecx-0x17],cl
  418928:	pop    ebx
  418929:	leave  
  41892a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892b:	push   es
  41892c:	mov    ah,0x9c
  41892e:	test   BYTE PTR [ecx+0x31964333],ah
  418934:	js     0x418938
  418936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418937:	adc    BYTE PTR [edx+0x4],ah
  41893a:	mov    esp,0x2f00acea
  41893f:	cdq    
  418940:	mov    al,ds:0xa2bb0010
  418945:	xchg   edi,eax
  418946:	cmp    BYTE PTR [ebp+0x315c8ec2],0x5d
  41894d:	hlt    
  41894e:	dec    ecx
  41894f:	stc    
  418950:	inc    ecx
  418951:	inc    esi
  418952:	xor    edx,DWORD PTR ds:0xf9e7eb75
  418958:	xor    eax,0x173383c9
  41895d:	pop    eax
  41895e:	sub    al,0xdd
  418960:	mov    edx,0x8adc29a3
  418965:	mov    esp,0x7535da69
  41896a:	sub    DWORD PTR [esi+0x4afb3274],0xffffffaf
  418971:	loopne 0x418937
  418973:	sbb    eax,0x943e9e94
  418978:	repz jle 0x4189c7
  41897b:	jae    0x41891f
  41897d:	jge    0x41894c
  41897f:	pop    es
  418980:	xor    ebp,DWORD PTR [ebx]
  418982:	pop    ecx
  418983:	mov    esi,0x7a2d49f
  418988:	jo     0x418962
  41898a:	add    al,0x39
  41898c:	mov    eax,0x613b0a52
  418991:	aam    0x68
  418993:	sbb    BYTE PTR [ecx+ecx*4-0x5cf20a2],ch
  41899a:	jecxz  0x418981
  41899c:	lods   eax,DWORD PTR ds:[esi]
  41899d:	sbb    ecx,edx
  41899f:	cli    
  4189a0:	or     ebp,ebp
  4189a2:	iret   
  4189a3:	cwde   
  4189a4:	bound  eax,QWORD PTR [edx+0x6e40eae4]
  4189aa:	mov    ebp,0x125fdaaf
  4189af:	push   es
  4189b0:	loopne 0x418a31
  4189b2:	pop    ebx
  4189b3:	sub    ecx,esi
  4189b5:	pop    ecx
  4189b6:	pop    eax
  4189b7:	or     edx,DWORD PTR [ebp+0x6b0939c1]
  4189bd:	jp     0x4189e0
  4189bf:	lods   al,BYTE PTR ds:[esi]
  4189c0:	cmp    DWORD PTR ds:0xeae2b5ce,eax
  4189c6:	dec    ecx
  4189c7:	retf   
  4189c8:	or     BYTE PTR [edx-0x30ea7237],bh
  4189ce:	jmp    0xab83:0x7649736d
  4189d5:	rcr    BYTE PTR [edi+0x5e933dbf],0xa2
  4189dc:	pop    esi
  4189dd:	cdq    
  4189de:	jno    0x418968
  4189e0:	mov    ds:0xfd6ed77c,al
  4189e5:	iret   
  4189e6:	icebp  
  4189e7:	mul    DWORD PTR [edi]
  4189e9:	shl    dh,cl
  4189eb:	mov    esi,0x6ee12b46
  4189f0:	dec    esi
  4189f1:	and    edi,edi
  4189f3:	sub    DWORD PTR [esi+esi*8-0x1f3a11d],ecx
  4189fa:	mov    edx,0xe4e40967
  4189ff:	sub    eax,0x6ba7d5c7
  418a04:	pop    esi
  418a05:	repz sbb al,0xcb
  418a08:	popa   
  418a09:	in     al,dx
  418a0a:	adc    al,0xc
  418a0c:	jmp    0x418a46
  418a0e:	fs in  eax,dx
  418a10:	test   al,0xbf
  418a12:	stc    
  418a13:	(bad)  
  418a14:	retf   0x6009
  418a17:	dec    ebx
  418a18:	xchg   edx,eax
  418a19:	jb     0x418a14
  418a1b:	mov    dh,0x51
  418a1d:	ss stos DWORD PTR es:[edi],eax
  418a1f:	dec    ebp
  418a20:	cmp    al,0x88
  418a22:	fistp  QWORD PTR [esi+0x35]
  418a25:	mov    ?,WORD PTR [edi+eax*8-0x3a]
  418a29:	es inc edx
  418a2b:	push   0x77
  418a2d:	dec    ebp
  418a2e:	mov    eax,0x356e2adf
  418a33:	cmp    DWORD PTR [ecx],ebp
  418a35:	arpl   WORD PTR [eax-0x5f1aae1c],ax
  418a3b:	inc    ecx
  418a3c:	out    dx,al
  418a3d:	sbb    ch,dh
  418a3f:	xor    al,BYTE PTR [ebp-0x49]
  418a42:	ins    DWORD PTR es:[edi],dx
  418a43:	inc    eax
  418a44:	clc    
  418a45:	dec    esp
  418a46:	cmp    al,0x1f
  418a48:	pop    eax
  418a49:	fidiv  WORD PTR [ebx+0x4f]
  418a4c:	xor    bl,BYTE PTR [esi-0x114dc328]
  418a52:	dec    esp
  418a53:	push   cs
  418a54:	imul   eax,ebx,0x205a92ef
  418a5a:	cmp    ebx,DWORD PTR [eax-0x43f4b5cd]
  418a60:	inc    ecx
  418a61:	enter  0xe0c9,0x97
  418a65:	dec    edx
  418a66:	mov    fs,WORD PTR [esi*8-0x10cecba1]
  418a6d:	push   ebx
  418a6e:	xor    BYTE PTR [esi],cl
  418a70:	outs   dx,BYTE PTR ds:[esi]
  418a71:	pop    ebx
  418a72:	popf   
  418a73:	fnsave [eax-0x2e]
  418a76:	mov    cl,0xfb
  418a78:	pop    edi
  418a79:	inc    esp
  418a7a:	push   esp
  418a7b:	(bad)  
  418a7c:	sbb    BYTE PTR [esp+edi*4-0xa],ah
  418a80:	pop    es
  418a81:	dec    ebp
  418a82:	sti    
  418a83:	data16 int3 
  418a85:	outs   dx,BYTE PTR ds:[esi]
  418a86:	lahf   
  418a87:	jl     0x418a9f
  418a89:	outs   dx,DWORD PTR ds:[esi]
  418a8a:	stos   BYTE PTR es:[edi],al
  418a8b:	mov    ds:0x9d3988fe,eax
  418a90:	pop    ebx
  418a91:	inc    eax
  418a92:	mov    edx,DWORD PTR [ebx+0x56]
  418a95:	pop    esi
  418a96:	(bad)  
  418a97:	fisubr DWORD PTR [esi-0x64]
  418a9a:	int    0x84
  418a9c:	inc    edi
  418a9d:	xchg   ebp,eax
  418a9e:	mov    edi,0xf8bfc19f
  418aa3:	inc    ebp
  418aa4:	push   esi
  418aa5:	fst    DWORD PTR [ebx-0x38]
  418aa8:	xor    BYTE PTR [ebx-0x2ee53bad],ch
  418aae:	jecxz  0x418a73
  418ab0:	out    0x47,eax
  418ab2:	and    BYTE PTR [eax-0x44],ah
  418ab5:	icebp  
  418ab6:	inc    esp
  418ab7:	adc    esi,ebp
  418ab9:	adc    eax,0x757be8f8
  418abe:	pushf  
  418abf:	pop    ss
  418ac0:	loopne 0x418af6
  418ac2:	mov    BYTE PTR [ebx],ah
  418ac4:	adc    eax,0xd4d58ff9
  418ac9:	sbb    esi,DWORD PTR [esi-0x501bb1d]
  418acf:	stos   BYTE PTR es:[edi],al
  418ad0:	shr    DWORD PTR [edi],0xba
  418ad3:	je     0x418b37
  418ad5:	xlat   BYTE PTR ds:[ebx]
  418ad6:	sbb    BYTE PTR [edx+0x7ac72074],bh
  418adc:	nop
  418add:	js     0x418afb
  418adf:	and    DWORD PTR [ecx-0x76],eax
  418ae2:	aad    0x6a
  418ae4:	lock jl 0x418adb
  418ae7:	pusha  
  418ae8:	cdq    
  418ae9:	jle    0x418a76
  418aeb:	xchg   edi,eax
  418aec:	sbb    BYTE PTR [edi-0x27be185a],bl
  418af2:	pusha  
  418af3:	inc    ebx
  418af4:	and    eax,0xd48ec685
  418af9:	xor    al,0xea
  418afb:	mov    bh,0x45
  418afd:	jne    0x418b31
  418aff:	dec    eax
  418b00:	dec    eax
  418b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b02:	adc    DWORD PTR [ebp-0x2c61b354],edx
  418b08:	daa    
  418b09:	(bad)  
  418b0a:	stos   DWORD PTR es:[edi],eax
  418b0b:	into   
  418b0c:	fldcw  WORD PTR [esi]
  418b0e:	mov    cl,0xa3
  418b10:	push   edx
  418b11:	not    DWORD PTR [edx+0x6a838395]
  418b17:	inc    eax
  418b18:	jge    0x418b6e
  418b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b1b:	mov    esp,0x4bc8aec9
  418b20:	xor    DWORD PTR [eax+ebx*8+0x7ac809f3],eax
  418b27:	cmp    ah,BYTE PTR [ecx-0x54ed6593]
  418b2d:	add    eax,0x72a2a904
  418b32:	adc    al,0xee
  418b34:	mov    cl,0xac
  418b36:	aaa    
  418b37:	add    al,0xff
  418b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b3a:	xlat   BYTE PTR ds:[ebx]
  418b3b:	push   ecx
  418b3c:	clc    
  418b3d:	sub    eax,0xdd3360de
  418b42:	(bad)  
  418b43:	mov    edi,0x4b1aabb5
  418b48:	xchg   esp,eax
  418b49:	mov    dh,0xe7
  418b4b:	pop    ecx
  418b4c:	adc    eax,0xd585bfb4
  418b51:	mov    eax,0x3f493293
  418b56:	inc    ebx
  418b57:	dec    ebp
  418b58:	jbe    0x418b5c
  418b5a:	xchg   esp,eax
  418b5b:	mov    bl,0xf5
  418b5d:	lock adc eax,0xb08a43d
  418b63:	push   esp
  418b64:	data16 ins BYTE PTR es:[edi],dx
  418b66:	push   ebp
  418b67:	push   esp
  418b68:	mov    ch,0xdf
  418b6a:	sub    al,0x18
  418b6c:	scas   eax,DWORD PTR es:[edi]
  418b6d:	sub    eax,0x9ecf7227
  418b72:	dec    esp
  418b73:	add    al,BYTE PTR [eax+0x30ee25c]
  418b79:	enter  0xfa74,0x3
  418b7d:	fmul   QWORD PTR [ebx]
  418b7f:	or     eax,0x7f2b790e
  418b84:	rol    BYTE PTR [esi+esi*1],0xb9
  418b88:	mov    ebp,0xe1e39b6a
  418b8d:	mov    cl,0x24
  418b8f:	mov    WORD PTR [edi-0x1f32b394],ss
  418b95:	out    dx,al
  418b96:	loope  0x418b8c
  418b98:	jne    0x418b81
  418b9a:	sub    al,BYTE PTR ds:0x4614f7f1
  418ba0:	fisubr WORD PTR [edi-0xb447df5]
  418ba6:	stos   BYTE PTR es:[edi],al
  418ba7:	xchg   ecx,eax
  418ba8:	push   ebx
  418ba9:	ins    BYTE PTR es:[edi],dx
  418baa:	(bad)  
  418bab:	in     eax,dx
  418bac:	iret   
  418bad:	cmp    BYTE PTR [esi+0x3b5ce485],ch
  418bb3:	add    DWORD PTR [ebx],0x874e38e7
  418bb9:	sahf   
  418bba:	test   BYTE PTR [edx-0x335c2cb5],dl
  418bc0:	fist   WORD PTR [ecx]
  418bc2:	ins    DWORD PTR es:[edi],dx
  418bc3:	rcr    DWORD PTR [ecx],0x44
  418bc6:	test   DWORD PTR [ebp+eiz*8-0x40b9de68],edi
  418bcd:	scas   eax,DWORD PTR es:[edi]
  418bce:	xchg   edx,eax
  418bcf:	movhps QWORD PTR [edx+0x37],xmm7
  418bd3:	in     al,0xcd
  418bd5:	sbb    BYTE PTR [ebx-0x9a17163],0x65
  418bdc:	(bad)  
  418bdd:	icebp  
  418bde:	loope  0x418c18
  418be0:	psrlw  mm5,mm5
  418be3:	inc    eax
  418be4:	cmp    BYTE PTR [ecx-0x5a],dl
  418be7:	das    
  418be8:	sar    DWORD PTR [ebx+0x47],1
  418beb:	aaa    
  418bec:	dec    eax
  418bed:	xchg   esi,eax
  418bee:	or     eax,0x246b5acf
  418bf4:	dec    esi
  418bf5:	out    0x7f,eax
  418bf7:	jmp    0x3fb7:0xe0588588
  418bfe:	jp     0x418bc7
  418c00:	pushf  
  418c01:	test   al,0x5d
  418c03:	sub    eax,0xea2117c
  418c08:	je     0x418c76
  418c0a:	stc    
  418c0b:	jp     0x418c05
  418c0d:	mov    ch,0x23
  418c0f:	pavgb  mm3,mm6
  418c12:	(bad)  
  418c13:	cli    
  418c14:	rol    DWORD PTR [eax+0x30],0xe0
  418c18:	ds add edi,esi
  418c1b:	xchg   ecx,eax
  418c1c:	(bad)  [ebx+0x62f6dc91]
  418c22:	(bad)  
  418c23:	sar    DWORD PTR [ebx],cl
  418c25:	pop    esp
  418c26:	xchg   ecx,eax
  418c27:	pop    es
  418c28:	mov    dl,0x4a
  418c2a:	dec    ebx
  418c2b:	push   es
  418c2c:	ficomp WORD PTR [edi+edi*4-0x42998335]
  418c33:	pop    esp
  418c34:	mov    bh,0xeb
  418c36:	push   ss
  418c37:	jb     0x418c27
  418c39:	push   ds
  418c3a:	adc    al,0xc2
  418c3c:	imul   esp,DWORD PTR [ecx-0x2ae6470],0x484e9e5d
  418c46:	jne    0x418bd6
  418c48:	int    0x39
  418c4a:	ret    
  418c4b:	xor    eax,0x2e07029
  418c50:	adc    esp,DWORD PTR [edx+edi*4+0x12]
  418c54:	mov    dh,BYTE PTR [ecx-0x77efc45c]
  418c5a:	adc    eax,0xdf6caaa5
  418c5f:	ret    
  418c60:	(bad)
  418c63:	cmp    ebp,edi
  418c65:	lods   al,BYTE PTR ds:[esi]
  418c66:	push   0xe59b518
  418c6b:	fcomp  DWORD PTR [ebx+0x482f4542]
  418c71:	(bad)  
  418c72:	sbb    ecx,DWORD PTR [ebx-0x20]
  418c75:	mov    dl,0x6c
  418c77:	pushf  
  418c78:	sbb    DWORD PTR [eax],esi
  418c7a:	ret    
  418c7b:	sub    BYTE PTR [ecx+ebx*4-0x731661e5],bh
  418c82:	mov    esp,0xa164e431
  418c87:	mov    eax,0xaaf82eb9
  418c8c:	dec    esp
  418c8d:	retf   0xe6a3
  418c90:	jo     0x418ca5
  418c92:	imul   BYTE PTR [esi-0x46c97b33]
  418c98:	mov    BYTE PTR [eax],cl
  418c9a:	adc    al,0xa6
  418c9c:	aas    
  418c9d:	fmul   QWORD PTR [edx-0x41]
  418ca0:	ja     0x418c4a
  418ca2:	mov    WORD PTR [esi-0x15c8b263],gs
  418ca8:	pusha  
  418ca9:	fpatan 
  418cab:	jle    0x418c38
  418cad:	mov    ebp,0xd4805dcf
  418cb2:	ss daa 
  418cb4:	and    edi,eax
  418cb6:	dec    ecx
  418cb7:	xchg   esi,eax
  418cb8:	or     bh,BYTE PTR [edi+esi*4]
  418cbb:	retf   
  418cbc:	or     BYTE PTR [eax+0x74],0x53
  418cc0:	loop   0x418d1a
  418cc2:	hlt    
  418cc3:	mov    ebp,0xe5a9554f
  418cc8:	stos   DWORD PTR es:[edi],eax
  418cc9:	add    al,0xe2
  418ccb:	jns    0x418d03
  418ccd:	cmp    dh,ch
  418ccf:	(bad)  
  418cd1:	cdq    
  418cd2:	ins    DWORD PTR es:[edi],dx
  418cd3:	push   edi
  418cd4:	jbe    0x418ce4
  418cd6:	out    dx,eax
  418cd7:	pop    edi
  418cd8:	rcl    BYTE PTR [ecx],cl
  418cda:	add    eax,0xe1fea9db
  418cdf:	lods   al,BYTE PTR ds:[esi]
  418ce0:	cmp    ecx,DWORD PTR [edx-0x5d]
  418ce3:	inc    ebx
  418ce4:	and    ebp,DWORD PTR [ecx-0x1]
  418ce7:	in     al,0x85
  418ce9:	daa    
  418cea:	(bad)  
  418ceb:	mov    ebx,0x5593a93f
  418cf0:	mov    eax,0x711137f5
  418cf5:	adc    DWORD PTR [edx-0x24],0xa8b95b25
  418cfc:	and    BYTE PTR [esi+0x3401b4ff],al
  418d02:	pop    ebx
  418d03:	test   al,0xfe
  418d05:	data16 hlt 
  418d07:	sub    eax,0x189870a1
  418d0c:	xchg   BYTE PTR [ecx-0x77],ch
  418d0f:	arpl   dx,bp
  418d11:	inc    esi
  418d12:	pop    eax
  418d13:	leave  
  418d14:	push   eax
  418d15:	inc    esi
  418d16:	aam    0xd2
  418d18:	into   
  418d19:	iret   
  418d1a:	cs aas 
  418d1c:	stos   BYTE PTR es:[edi],al
  418d1d:	push   es
  418d1e:	les    eax,FWORD PTR [eax+0xf]
  418d21:	dec    edx
  418d22:	or     BYTE PTR [edi],dh
  418d24:	xor    ch,cl
  418d26:	sbb    ebx,DWORD PTR [edi+0x734bb463]
  418d2c:	pop    ecx
  418d2d:	inc    ecx
  418d2e:	jb     0x418d32
  418d30:	in     al,dx
  418d31:	push   ds
  418d32:	in     al,0x30
  418d34:	dec    edi
  418d35:	(bad)  
  418d36:	out    0x57,al
  418d38:	cmp    BYTE PTR [edi-0x149fb77a],bh
  418d3e:	fistp  QWORD PTR [ebx+0x8]
  418d41:	mov    ebp,0x29388f63
  418d46:	pop    es
  418d47:	add    DWORD PTR [esi-0x18267592],eax
  418d4d:	inc    edx
  418d4e:	push   ecx
  418d4f:	jmp    0x418d27
  418d51:	or     al,0xf2
  418d53:	in     eax,0x7b
  418d55:	jl     0x418da9
  418d57:	sub    bl,BYTE PTR [esi-0x1cc79e1e]
  418d5d:	call   0x6d20:0x6ad0142a
  418d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d65:	(bad)  
  418d66:	jmp    0x7233:0xf9019b0a
  418d6d:	or     bh,BYTE PTR [edi+0x11]
  418d70:	out    dx,al
  418d71:	and    BYTE PTR [esi+0x5b],0x21
  418d75:	push   ebx
  418d76:	adc    BYTE PTR [ebx-0x5a],al
  418d79:	jl     0x418d29
  418d7b:	pop    eax
  418d7c:	call   0xe9a13745
  418d81:	stc    
  418d82:	cmp    al,0xcc
  418d84:	push   es
  418d85:	ret    
  418d86:	rep stos DWORD PTR es:[edi],eax
  418d88:	mov    DWORD PTR [esi-0x26],eax
  418d8b:	shl    DWORD PTR [esp+edi*4],cl
  418d8e:	lahf   
  418d8f:	out    0x2b,al
  418d91:	xor    esp,DWORD PTR [edx+eiz*2+0x17]
  418d95:	push   0x57
  418d97:	inc    eax
  418d98:	scas   al,BYTE PTR es:[edi]
  418d99:	jnp    0x418d66
  418d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d9c:	jmp    0x6ddefd70
  418da1:	imul   ebx,DWORD PTR [edx+ebx*2+0x2],0xd
  418da6:	nop
  418da7:	das    
  418da8:	das    
  418da9:	scas   eax,DWORD PTR es:[edi]
  418daa:	jge    0x418db1
  418dac:	sbb    eax,0x8d429a39
  418db1:	sbb    BYTE PTR [edi-0x46],bl
  418db4:	or     al,bh
  418db6:	xchg   ebp,eax
  418db7:	cmp    ah,BYTE PTR [eax-0x3ca60073]
  418dbd:	repnz xor edi,ebx
  418dc0:	stos   BYTE PTR es:[edi],al
  418dc1:	pop    edx
  418dc2:	pop    esi
  418dc3:	and    BYTE PTR [esi+0x72],ah
  418dc6:	sbb    DWORD PTR [ecx-0x6a538a51],esi
  418dcc:	stos   BYTE PTR es:[edi],al
  418dcd:	xchg   esi,eax
  418dce:	add    BYTE PTR [edi],dh
  418dd0:	jo     0x418e13
  418dd2:	push   0x6632e079
  418dd7:	fs in  al,dx
  418dd9:	mov    DWORD PTR [edx-0x686c204],ebp
  418ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418de0:	imul   cx,WORD PTR [eax+ecx*2+0x35a8ab6c],0xffb6
  418de9:	or     al,0x8f
  418deb:	push   ebp
  418dec:	popa   
  418ded:	push   es
  418dee:	test   al,0xb7
  418df0:	jmp    0x5206:0xd8c3fa66
  418df7:	lods   eax,DWORD PTR ds:[esi]
  418df8:	rol    edi,1
  418dfa:	(bad)  
  418dfb:	fstp   TBYTE PTR [edi-0x7c]
  418dfe:	stc    
  418dff:	stc    
  418e00:	aad    0xf4
  418e02:	call   FWORD PTR [eax]
  418e04:	retf   0x65f4
  418e07:	or     ah,BYTE PTR [edi+ecx*2]
  418e0a:	pushf  
  418e0b:	xchg   ebp,eax
  418e0c:	arpl   WORD PTR [ecx],dx
  418e0e:	and    esp,DWORD PTR [ebx+edi*8+0x1198d0a2]
  418e15:	pop    ebx
  418e16:	dec    DWORD PTR [ecx-0x73e5431]
  418e1c:	push   ds
  418e1d:	ins    BYTE PTR es:[edi],dx
  418e1e:	out    dx,eax
  418e1f:	jns    0x418dbe
  418e21:	sub    ebx,DWORD PTR [eax]
  418e23:	cwde   
  418e24:	jne    0x418db3
  418e26:	add    BYTE PTR [edx],0x4a
  418e29:	mov    eax,0x9eeb3b80
  418e2e:	xor    al,0x72
  418e30:	xchg   edi,eax
  418e31:	jg     0x418e64
  418e33:	jmp    0x418e25
  418e35:	not    BYTE PTR [ecx]
  418e37:	xchg   DWORD PTR [edx+0x61c546cb],ebx
  418e3d:	call   0xc94f689f
  418e42:	stos   BYTE PTR es:[edi],al
  418e43:	cdq    
  418e44:	mov    eax,0x6e120607
  418e49:	popa   
  418e4a:	lods   al,BYTE PTR ds:[esi]
  418e4b:	fwait
  418e4c:	loop   0x418e0a
  418e4e:	inc    esp
  418e4f:	dec    ebx
  418e50:	push   ebx
  418e51:	dec    eax
  418e52:	sahf   
  418e53:	add    al,dl
  418e55:	sti    
  418e56:	mov    ebx,0x2fe840d1
  418e5b:	pusha  
  418e5c:	xchg   al,cl
  418e5e:	loope  0x418e9c
  418e60:	mov    dh,0x97
  418e62:	push   esp
  418e63:	ins    DWORD PTR es:[edi],dx
  418e64:	(bad)  
  418e65:	fimul  WORD PTR [ebp-0x1f3f22fc]
  418e6b:	std    
  418e6c:	adc    al,dh
  418e6e:	ret    0x4c86
  418e71:	xor    DWORD PTR [ebx],edi
  418e73:	dec    esi
  418e74:	icebp  
  418e75:	jl     0x418e07
  418e77:	sbb    BYTE PTR [edx+0x24],ch
  418e7a:	push   ebp
  418e7b:	xlat   BYTE PTR ds:[ebx]
  418e7c:	adc    BYTE PTR [edx-0xb],bh
  418e7f:	xor    esi,0xfecaff83
  418e85:	push   0xd3b2c769
  418e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e8b:	or     DWORD PTR [ecx-0x60f80f52],esi
  418e91:	add    ch,BYTE PTR [ecx-0x7e29d7fb]
  418e97:	ret    0x7b78
  418e9a:	(bad)  [ebp-0x18a4313a]
  418ea0:	cdq    
  418ea1:	rcr    BYTE PTR [esi+0x7e],0x31
  418ea5:	mov    ds:0x61ff425c,al
  418eaa:	or     DWORD PTR [ebx-0x2b],edi
  418ead:	sbb    al,0x8a
  418eaf:	pop    ebx
  418eb0:	push   ebp
  418eb1:	test   DWORD PTR [ebx-0x70d562fb],ebx
  418eb7:	sar    BYTE PTR [esp+ebp*8-0x184b3180],0x15
  418ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec0:	jo     0x418f0e
  418ec2:	sub    ebx,ecx
  418ec4:	cwde   
  418ec5:	lock in eax,dx
  418ec7:	and    BYTE PTR [esi+0x2b],dl
  418eca:	push   ds
  418ecb:	cmp    DWORD PTR [edi-0x7a],0x2d
  418ecf:	(bad)  
  418ed0:	int3   
  418ed1:	loope  0x418e71
  418ed3:	push   edi
  418ed4:	mov    edx,0xe5056a35
  418ed9:	data16 aas 
  418edb:	rol    BYTE PTR [esi],0xfc
  418ede:	stos   BYTE PTR es:[edi],al
  418edf:	enter  0x31fe,0xec
  418ee3:	sar    BYTE PTR [ebx-0x1432748c],cl
  418ee9:	out    dx,al
  418eea:	out    dx,al
  418eeb:	dec    eax
  418eec:	test   bl,dl
  418eee:	fmulp  st(5),st
  418ef0:	addr16 test eax,0x64f4cb87
  418ef6:	jmp    0x418eea
  418ef8:	cli    
  418ef9:	retf   0xf416
  418efc:	in     al,0x9f
  418efe:	jle    0x418f29
  418f00:	hlt    
  418f01:	jno    0x418f50
  418f03:	ja     0x418f11
  418f05:	and    al,0x77
  418f07:	das    
  418f08:	and    dh,BYTE PTR [esi+0x6e182065]
  418f0e:	jg     0x418f00
  418f10:	mov    ah,0x36
  418f12:	push   fs
  418f14:	outs   dx,DWORD PTR ds:[esi]
  418f15:	test   BYTE PTR [ebp+0x65],al
  418f18:	test   BYTE PTR [esi+0x1f],0xd3
  418f1c:	leave  
  418f1d:	outs   dx,DWORD PTR ds:[esi]
  418f1e:	mov    cl,BYTE PTR [edx-0x56]
  418f21:	xor    edx,0x5b
  418f24:	or     al,0x8a
  418f26:	lds    ebp,FWORD PTR [edx-0xd6a6fe]
  418f2c:	mov    ch,0xf5
  418f2e:	fnstcw WORD PTR [ebx]
  418f30:	fisttp DWORD PTR [esi+0x5e0482cc]
  418f36:	dec    ecx
  418f37:	rcl    BYTE PTR [edi],0xc2
  418f3a:	mov    bl,dh
  418f3c:	cmc    
  418f3d:	mov    edi,0x2887c85f
  418f42:	cli    
  418f43:	int    0x31
  418f45:	call   0xb62f:0xb978d50c
  418f4c:	std    
  418f4d:	jle    0x418f4a
  418f4f:	in     eax,dx
  418f50:	sbb    ebp,esp
  418f52:	mov    eax,0x8287238e
  418f57:	jne    0x418f02
  418f59:	and    cl,BYTE PTR [eax+ebx*2]
  418f5c:	mov    ch,0xc6
  418f5e:	mov    ds:0x9020001e,al
  418f63:	jbe    0x418f38
  418f65:	push   es
  418f66:	dec    edi
  418f67:	dec    ebp
  418f68:	cwde   
  418f69:	dec    ebp
  418f6a:	push   edx
  418f6b:	sbb    DWORD PTR [ecx+edx*2],ebx
  418f6e:	loope  0x418ef7
  418f70:	test   al,0x1f
  418f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f73:	shl    BYTE PTR [ecx-0x7d],1
  418f76:	inc    ecx
  418f77:	dec    esi
  418f78:	out    0xfd,eax
  418f7a:	mul    BYTE PTR [edx+ebx*8]
  418f7d:	shr    cl,0x27
  418f80:	out    0x62,eax
  418f82:	jp     0x418f6e
  418f84:	fwait
  418f85:	loop   0x418f3d
  418f87:	and    BYTE PTR [ebx+eiz*1+0x30338984],al
  418f8e:	cmc    
  418f8f:	xor    al,0x4c
  418f91:	push   es
  418f92:	xchg   DWORD PTR [eax-0x53227934],ebp
  418f98:	dec    ebp
  418f99:	sub    eax,0x5aadddb2
  418f9e:	and    ebp,ebx
  418fa0:	fistp  WORD PTR [esi+0x2528b348]
  418fa6:	mov    esi,0x33c35720
  418fab:	dec    eax
  418fac:	mov    esi,0x18dad166
  418fb1:	mov    ah,0x2a
  418fb3:	pop    ecx
  418fb4:	sbb    al,0xb0
  418fb6:	push   esp
  418fb7:	loope  0x418fd2
  418fb9:	mov    dl,0x50
  418fbb:	scas   al,BYTE PTR es:[edi]
  418fbc:	cmp    cl,BYTE PTR [ecx]
  418fbe:	cli    
  418fbf:	out    dx,al
  418fc0:	cmp    al,0xd4
  418fc2:	xchg   ebp,eax
  418fc3:	pop    esp
  418fc4:	(bad)  
  418fc5:	das    
  418fc6:	push   esp
  418fc7:	push   ebx
  418fc8:	lods   eax,DWORD PTR ds:[esi]
  418fc9:	out    0xd1,eax
  418fcb:	leave  
  418fcc:	js     0x418fe1
  418fce:	lods   al,BYTE PTR ds:[esi]
  418fcf:	out    0x71,eax
  418fd1:	fst    DWORD PTR [esi]
  418fd3:	and    BYTE PTR ds:0x17de512d,bl
  418fd9:	enter  0x4774,0x30
  418fdd:	adc    DWORD PTR [eax],ebp
  418fdf:	cwde   
  418fe0:	mov    ds:0x2a55ec1e,eax
  418fe5:	in     eax,0xef
  418fe7:	scas   al,BYTE PTR es:[edi]
  418fe8:	adc    ebp,DWORD PTR [edi+0x49]
  418feb:	jp     0x41900f
  418fed:	mov    ch,0x69
  418fef:	out    dx,al
  418ff0:	and    BYTE PTR [ebp+0x2a402855],ah
  418ff6:	(bad)  
  418ff8:	out    0x14,eax
  418ffa:	or     al,0xb3
  418ffc:	popf   
  418ffd:	sbb    ebx,DWORD PTR [eax-0x74]
  419000:	mov    edi,DWORD PTR [eax-0x3926c37a]
  419006:	pop    eax
  419007:	sub    DWORD PTR [ebx-0xc],ecx
  41900a:	shl    BYTE PTR [esi+0x481f66f0],0x9
  419011:	dec    esp
  419012:	sbb    DWORD PTR [ebx-0x2e5ef446],ebx
  419018:	inc    eax
  419019:	shl    BYTE PTR [edx+0x29b8af25],0x78
  419020:	fst    DWORD PTR [ebx+0x14c4eadf]
  419026:	and    al,bh
  419028:	dec    esi
  419029:	fdivr  QWORD PTR [eax]
  41902b:	xor    BYTE PTR [edx-0x2e062e25],ch
  419031:	test   al,0xee
  419033:	test   al,0xe9
  419035:	pusha  
  419036:	jne    0x419070
  419038:	and    al,BYTE PTR [ebx+0x35]
  41903b:	outs   dx,BYTE PTR ds:[esi]
  41903c:	jns    0x41900a
  41903e:	push   ebp
  41903f:	imul   ebp,DWORD PTR [eax-0xb7461de],0x21
  419046:	xchg   edx,eax
  419047:	ss aaa 
  419049:	push   cs
  41904a:	cld    
  41904b:	pop    ds
  41904c:	in     al,0x1d
  41904e:	in     al,dx
  41904f:	push   ds
  419050:	stos   DWORD PTR es:[edi],eax
  419051:	into   
  419052:	mov    dl,BYTE PTR [ebx]
  419054:	add    DWORD PTR [eax],eax
  419056:	nop
  419057:	popa   
  419058:	mov    edi,0x20298f40
  41905d:	sbb    al,0xb9
  41905f:	xor    al,0xda
  419061:	jg     0x419019
  419063:	xor    al,0xa5
  419065:	lods   al,BYTE PTR ds:[esi]
  419066:	nop
  419067:	inc    DWORD PTR [esi]
  419069:	sub    al,0x5d
  41906b:	aad    0x3d
  41906d:	cmp    eax,0x7c75926c
  419072:	gs inc esp
  419074:	mov    bl,0xff
  419076:	repnz test BYTE PTR [edi-0x194c628b],cl
  41907d:	(bad)  
  41907e:	adc    DWORD PTR [edx+0x1e],edi
  419081:	test   eax,0x391183ab
  419086:	aam    0x95
  419088:	ret    0xa8cf
  41908b:	push   edx
  41908c:	mov    esp,0xc4326dee
  419091:	pop    edx
  419092:	jnp    0x419024
  419094:	xor    edx,DWORD PTR ds:0x8c394191
  41909a:	or     DWORD PTR [ebp-0x75],0x4af15a01
  4190a1:	or     BYTE PTR [edi],0xc7
  4190a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190a5:	push   esp
  4190a6:	xlat   BYTE PTR ds:[ebx]
  4190a7:	sbb    ax,0x82fa
  4190ab:	and    eax,0x9d5f2ef4
  4190b0:	pop    eax
  4190b1:	and    edi,DWORD PTR [ecx-0x29]
  4190b4:	pop    ecx
  4190b5:	jae    0x41909f
  4190b7:	mov    ds:0xe33aef7a,eax
  4190bc:	clc    
  4190bd:	test   eax,0xa1010855
  4190c2:	sub    cl,dh
  4190c4:	push   edi
  4190c5:	repz mov dl,0x82
  4190c8:	retf   0x8a20
  4190cb:	shl    DWORD PTR [ebx-0x6b89a29a],cl
  4190d1:	jne    0x4190f6
  4190d3:	mov    ebp,0xcb712987
  4190d8:	sbb    DWORD PTR [ecx-0x402f3198],ebp
  4190de:	imul   esp,DWORD PTR [ebx+0x12],0x1853af64
  4190e5:	fs js  0x41914b
  4190e8:	xchg   ebp,eax
  4190e9:	ret    
  4190ea:	dec    eax
  4190eb:	jmp    0xd3fca7bb
  4190f0:	add    BYTE PTR [edi-0x6d],ch
  4190f3:	int3   
  4190f4:	mov    DWORD PTR [edi],ecx
  4190f6:	or     edx,DWORD PTR [esi+0x465d2109]
  4190fc:	ret    
  4190fd:	pop    esi
  4190fe:	jbe    0x419105
  419100:	sbb    esi,ebx
  419102:	and    eax,0xa62e76f9
  419107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419108:	popf   
  419109:	adc    DWORD PTR [ecx+0x656c8924],0xe1657838
  419113:	dec    eax
  419114:	mov    si,0x1923
  419118:	fimul  DWORD PTR [edi+0x70d11fb9]
  41911e:	(bad)  
  41911f:	mov    bh,0x3b
  419121:	gs mov edx,0x531808b8
  419127:	iret   
  419128:	push   ecx
  419129:	or     esp,ecx
  41912b:	dec    esi
  41912c:	test   eax,0xa22b944e
  419131:	or     eax,ebx
  419133:	ins    BYTE PTR es:[edi],dx
  419134:	sub    ah,BYTE PTR [ebp+0xa775ee5]
  41913a:	jo     0x4190d1
  41913c:	pusha  
  41913d:	sbb    ebx,DWORD PTR [esi-0x511996fd]
  419143:	daa    
  419144:	rcr    DWORD PTR [edi+ebp*2+0x61794f70],1
  41914b:	push   edi
  41914c:	push   ebx
  41914d:	ins    BYTE PTR es:[edi],dx
  41914e:	jb     0x419192
  419150:	ret    
  419151:	or     bl,bh
  419153:	and    ebp,esp
  419155:	xor    ecx,DWORD PTR [ecx]
  419157:	aam    0x84
  419159:	mov    eax,ds:0x52bd775c
  41915e:	ret    0xfce1
  419161:	lods   eax,DWORD PTR ds:[esi]
  419162:	addr16 cmc 
  419164:	inc    ecx
  419165:	inc    ecx
  419166:	jae    0x4191c8
  419168:	xchg   esp,eax
  419169:	add    al,0x4a
  41916b:	aas    
  41916c:	fisttp QWORD PTR [edx-0x33191d11]
  419172:	das    
  419173:	mov    ds:0xaec5c3c4,eax
  419178:	dec    edx
  419179:	mov    ebp,0x58dbe3f0
  41917e:	hlt    
  41917f:	test   BYTE PTR [eax+0x17],ah
  419182:	in     eax,dx
  419183:	mov    WORD PTR [edi+0x3e],cs
  419186:	aad    0xf9
  419188:	cwde   
  419189:	ror    BYTE PTR [edi-0x6],1
  41918c:	repz mov ah,BYTE PTR [esi+0xb78f8a8]
  419193:	rcr    DWORD PTR [edx],cl
  419195:	xchg   DWORD PTR [ebp+0x52],edi
  419198:	xchg   eax,esp
  41919a:	fst    DWORD PTR [edi+0x53]
  41919d:	ja     0x41918f
  41919f:	aaa    
  4191a0:	inc    ebp
  4191a1:	nop
  4191a2:	in     eax,dx
  4191a3:	inc    edx
  4191a4:	aas    
  4191a5:	(bad)  
  4191a6:	push   edi
  4191a7:	rcl    DWORD PTR [edx-0x453c5a11],cl
  4191ad:	stos   BYTE PTR es:[edi],al
  4191ae:	jno    0x419145
  4191b0:	dec    esp
  4191b1:	mov    BYTE PTR [ebp+0x4c],bl
  4191b4:	aas    
  4191b5:	xor    bh,BYTE PTR [esi-0x56]
  4191b8:	loopne 0x4191c8
  4191ba:	(bad)  [edi-0x6ab51d39]
  4191c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191c1:	jne    0x41914d
  4191c3:	fldcw  WORD PTR [edx+esi*8]
  4191c6:	lds    esi,FWORD PTR [eax]
  4191c8:	jg     0x4191cd
  4191ca:	imul   esp,DWORD PTR [edx+edi*8+0x1a9cf0ae],0x9f4a170f
  4191d5:	sbb    ah,BYTE PTR ds:0xdfcabb2
  4191db:	iret   
  4191dc:	sub    eax,0x512f4c69
  4191e1:	test   DWORD PTR [edx],ebx
  4191e3:	jns    0x419172
  4191e5:	cmp    al,0xbd
  4191e7:	sub    DWORD PTR [edx+0x74],eax
  4191ea:	xor    eax,0x6f1922f5
  4191ef:	xor    BYTE PTR [ebp+0x34],ah
  4191f2:	jnp    0x41919a
  4191f4:	add    cl,ah
  4191f6:	lods   eax,DWORD PTR ds:[esi]
  4191f7:	pop    ds
  4191f8:	pop    es
  4191f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191fa:	fcom   st(5)
  4191fc:	gs inc edx
  4191fe:	in     al,0x97
  419200:	pop    eax
  419201:	or     al,0x36
  419203:	ins    DWORD PTR es:[edi],dx
  419204:	and    al,0x38
  419206:	pop    ebx
  419207:	adc    ecx,edi
  419209:	popf   
  41920a:	push   esi
  41920b:	inc    esp
  41920c:	(bad)
  41920f:	push   esi
  419210:	cmp    eax,DWORD PTR [ebx+0x1ff78a57]
  419216:	sbb    ah,BYTE PTR [ebp+0x44b2fe78]
  41921c:	pop    ebx
  41921d:	jmp    0xf59c:0xd9262d8f
  419224:	xchg   esp,eax
  419225:	jb     0x4191b1
  419227:	xor    eax,0xd4b2bde4
  41922c:	xchg   ebx,eax
  41922d:	mov    ecx,0x47c61a13
  419232:	xchg   BYTE PTR [esi+0x12e48edb],dh
  419238:	jne    0x41929b
  41923a:	outs   dx,BYTE PTR ds:[esi]
  41923b:	fadd   st(7),st
  41923d:	repnz mov bl,0x3
  419240:	pop    es
  419241:	sbb    al,al
  419243:	pop    DWORD PTR [ecx-0x1c64a9c4]
  419249:	pop    ss
  41924a:	repz push ebx
  41924c:	bound  edi,QWORD PTR [esi+0x408d8c17]
  419252:	sahf   
  419253:	in     eax,0xdc
  419255:	dec    edx
  419256:	in     al,dx
  419257:	lods   al,BYTE PTR ds:[esi]
  419258:	mov    esi,0x35cc4bed
  41925d:	mov    ds:0x3a2a516c,eax
  419262:	jb     0x419217
  419264:	sbb    BYTE PTR [eax+esi*4+0x56face47],cl
  41926b:	ins    DWORD PTR es:[edi],dx
  41926c:	sahf   
  41926d:	mov    edx,0xc9f3ae
  419272:	push   0x42
  419274:	push   0x1e
  419276:	enter  0xce54,0x13
  41927a:	inc    edx
  41927b:	fnstcw WORD PTR [ecx+eax*4+0x56bb5b3e]
  419282:	jl     0x41926c
  419284:	and    DWORD PTR [eax],ebp
  419286:	xor    dl,BYTE PTR [edi-0x5c926683]
  41928c:	ins    BYTE PTR es:[edi],dx
  41928d:	inc    edi
  41928e:	shl    BYTE PTR [ebx],cl
  419290:	enter  0x4d89,0x8
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0x0
  4192cc:	cmc    
  4192cd:	shr    DWORD PTR [esi-0x7c7de3d9],1
  4192d3:	pop    ss
  4192d4:	pop    esp
  4192d5:	add    DWORD PTR [ebx-0x36145ad9],0x22
  4192dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192dd:	fwait
  4192de:	adc    BYTE PTR [ebx+ebp*2-0x69e56fa5],cl
  4192e5:	inc    edi
  4192e6:	sbb    al,0x69
  4192e8:	and    DWORD PTR [ebx-0x5d6f6a29],ebp
  4192ee:	bound  ebp,QWORD PTR [ebx+0x3]
  4192f1:	dec    eax
  4192f2:	gs dec esp
  4192f4:	add    DWORD PTR [esi+ebp*2+0x479fb066],esi
  4192fb:	mov    WORD PTR [esi-0x299939d5],ss
  419301:	or     eax,0x87444f7
  419306:	or     DWORD PTR [ecx-0x654a8547],esi
  41930c:	imul   BYTE PTR [ebp+0x2b]
  41930f:	dec    edx
  419310:	mov    ebx,0x948a9f0e
  419315:	cmp    al,0x69
  419317:	jnp    0x419308
  419319:	sub    esi,DWORD PTR [eax-0x4]
  41931c:	push   ebx
  41931d:	cmc    
  41931e:	dec    eax
  41931f:	pop    edx
  419320:	sahf   
  419321:	(bad)  
  419322:	repz and BYTE PTR [edi+edx*2],bh
  419326:	xor    al,0x35
  419328:	lahf   
  419329:	cmp    al,0xbe
  41932b:	(bad)  
  41932c:	adc    dl,BYTE PTR [edi+0x6ef316a7]
  419332:	jne    0x419321
  419334:	mov    ds:0xee4aabad,eax
  419339:	cmp    BYTE PTR [ebp-0x2ce10aba],ah
  41933f:	add    DWORD PTR [ebx-0x50],0x2dd8e581
  419346:	xchg   esi,eax
  419347:	sbb    ecx,edi
  419349:	adc    DWORD PTR [eax-0x43],0x63
  41934d:	push   esp
  41934e:	and    eax,0xf6c61e1f
  419353:	cli    
  419354:	sbb    ch,BYTE PTR [edi+0xf36b138]
  41935a:	push   edx
  41935b:	stc    
  41935c:	pop    ecx
  41935d:	jecxz  0x41932c
  41935f:	xchg   esi,eax
  419360:	jl     0x41934e
  419362:	mov    ds:0x13f87bd,eax
  419367:	or     eax,DWORD PTR [eax+0x4f]
  41936a:	and    ecx,0xfffffff9
  41936d:	inc    esi
  41936e:	fsub   DWORD PTR [edx]
  419370:	mov    ecx,0xc718076
  419375:	cmp    dh,BYTE PTR [eax+0x21b41ab8]
  41937b:	jo     0x4193af
  41937d:	call   ebp
  41937f:	les    ebp,FWORD PTR [esi+0x3b129da7]
  419385:	and    BYTE PTR [esp+ebx*4],dl
  419388:	jns    0x4193bf
  41938a:	mov    cl,0x26
  41938c:	add    al,0xb7
  41938e:	stos   BYTE PTR es:[edi],al
  41938f:	jmp    0xb38900f3
  419394:	enter  0x1e36,0xf5
  419398:	push   edi
  419399:	iret   
  41939a:	xchg   DWORD PTR [edi],ebp
  41939c:	int3   
  41939d:	push   dx
  41939f:	or     al,bh
  4193a1:	mov    gs,WORD PTR [ebp+0x39f369c6]
  4193a7:	je     0x41936e
  4193a9:	mov    cl,BYTE PTR [edx]
  4193ab:	adc    eax,0x28c88d2b
  4193b0:	jl     0x41942b
  4193b2:	and    DWORD PTR [eax+0x26],ebp
  4193b5:	pushf  
  4193b6:	sbb    BYTE PTR [eax+0x79],ah
  4193b9:	imul   edi,DWORD PTR [ebx-0x514d34e2],0xffffffc3
  4193c0:	xchg   edi,eax
  4193c1:	ds push esp
  4193c3:	pop    ds
  4193c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c5:	dec    eax
  4193c6:	xor    al,0xe7
  4193c8:	scas   eax,DWORD PTR es:[edi]
  4193c9:	idiv   esp
  4193cb:	mov    ch,0xc5
  4193cd:	fcomp  DWORD PTR [esi+0x622ae00b]
  4193d3:	add    ebp,eax
  4193d5:	lahf   
  4193d6:	pop    ebp
  4193d7:	mov    al,ds:0x93ef1562
  4193dc:	lods   eax,DWORD PTR ds:[esi]
  4193dd:	pop    eax
  4193de:	sbb    ebx,ebp
  4193e0:	mov    al,ds:0xcb81e71c
  4193e5:	pop    edx
  4193e6:	xor    esi,DWORD PTR [ebx+0x67228e43]
  4193ec:	sbb    eax,0x9d8c7f2a
  4193f1:	add    BYTE PTR [esi],dl
  4193f3:	inc    ecx
  4193f4:	mov    bl,0x64
  4193f6:	daa    
  4193f7:	mov    cl,0xc4
  4193f9:	mov    edx,0x684b2f3f
  4193fe:	jp     0x419471
  419400:	test   cl,al
  419402:	mov    ah,0xb3
  419404:	lds    edi,FWORD PTR [edi-0x12535716]
  41940a:	mov    esp,0x18a055f7
  41940f:	jmp    0x4193da
  419411:	addr16 mov ch,0x8
  419414:	mul    DWORD PTR [edi-0x7abe9009]
  41941a:	hlt    
  41941b:	stos   DWORD PTR es:[edi],eax
  41941c:	mov    dh,0x89
  41941e:	inc    edi
  41941f:	jmp    0x4193c1
  419421:	jns    0x4193ba
  419423:	adc    DWORD PTR [ebp+0x67f18bd9],ebx
  419429:	pop    edi
  41942a:	cmp    esp,ebx
  41942c:	into   
  41942d:	leave  
  41942e:	(bad)  
  41942f:	call   0xa02efba6
  419434:	add    eax,0xd413475b
  419439:	cmp    al,al
  41943b:	test   esi,ebx
  41943d:	sahf   
  41943e:	sti    
  41943f:	into   
  419440:	fisttp WORD PTR [ecx-0x522a29f2]
  419446:	into   
  419447:	cmp    edi,ebx
  419449:	xor    BYTE PTR [ebx+0x6a15e6c0],bh
  41944f:	ins    BYTE PTR es:[edi],dx
  419450:	out    dx,al
  419451:	adc    al,0x42
  419453:	mov    ah,0xd7
  419455:	cld    
  419456:	sub    edx,ebx
  419458:	dec    ebp
  419459:	fs loope 0x4194bf
  41945c:	mov    ebp,0x359a9bec
  419461:	std    
  419462:	pop    ds
  419463:	out    0x60,eax
  419465:	cmc    
  419466:	fist   WORD PTR [ebx]
  419468:	add    eax,0x243c93ce
  41946d:	ins    BYTE PTR es:[edi],dx
  41946e:	jmp    0x4193f2
  419470:	xor    eax,0x35f24d5d
  419475:	call   FWORD PTR [edx]
  419477:	inc    eax
  419478:	push   cs
  419479:	cli    
  41947a:	dec    edi
  41947b:	dec    ebx
  41947c:	int3   
  41947d:	inc    edi
  41947e:	sbb    ebp,DWORD PTR [ebx-0x37]
  419481:	mov    eax,ds:0xf7fe4e07
  419486:	pop    edi
  419487:	pop    edi
  419488:	int    0x38
  41948a:	repz push ds
  41948c:	call   0x732b7d79
  419491:	push   ecx
  419492:	stc    
  419493:	enter  0xf021,0x9e
  419497:	pop    esp
  419498:	cdq    
  419499:	and    BYTE PTR [eax-0x4efa576a],ch
  41949f:	cli    
  4194a0:	imul   ebx,ebp,0x59
  4194a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194a4:	fs daa 
  4194a6:	mov    cl,0x3d
  4194a8:	pop    edx
  4194a9:	rcr    ecx,0xfd
  4194ac:	push   ebp
  4194ad:	pusha  
  4194ae:	sub    eax,0xedfb8909
  4194b3:	pop    es
  4194b4:	pop    edx
  4194b5:	iret   
  4194b6:	ins    BYTE PTR es:[edi],dx
  4194b7:	ins    BYTE PTR es:[edi],dx
  4194b8:	or     BYTE PTR [edi+edx*4],dh
  4194bb:	(bad)  
  4194bc:	mov    esi,0x7be7995e
  4194c1:	aam    0xbb
  4194c3:	jb     0x419539
  4194c5:	inc    ecx
  4194c6:	cmp    al,dh
  4194c8:	imul   ebx,DWORD PTR [ecx+0x66bcfbd0],0x19
  4194cf:	leave  
  4194d0:	enter  0xd756,0x45
  4194d4:	and    bh,BYTE PTR [bx+di-0x6e73]
  4194d9:	mov    esp,0x33d0493d
  4194de:	cmp    eax,0xf66286fe
  4194e3:	xchg   edi,eax
  4194e4:	je     0x4194d3
  4194e6:	int    0x0
  4194e8:	add    ah,dl
  4194ea:	sar    ch,cl
  4194ec:	mov    al,0x72
  4194ee:	sub    DWORD PTR [esi+ebp*1-0xc],ebx
  4194f2:	inc    esp
  4194f3:	call   0xa79:0x6bf510c8
  4194fa:	xor    ebp,DWORD PTR [eax+0x4369ba5f]
  419500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419501:	stos   DWORD PTR es:[edi],eax
  419502:	mov    cl,0x17
  419504:	lods   al,BYTE PTR ds:[esi]
  419505:	xor    esi,DWORD PTR cs:[ecx+0x7]
  419509:	es jmp 0x16548056
  41950f:	leave  
  419510:	(bad)  
  419512:	and    eax,0xea060a48
  419517:	popa   
  419518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419519:	out    dx,al
  41951a:	mov    eax,0x79eec2a7
  41951f:	mov    ds:0x5bf1cd40,eax
  419524:	mov    al,ds:0x34d9a7c6
  419529:	adc    al,0x4d
  41952b:	xchg   ebp,eax
  41952c:	mov    ds:0x297afe68,eax
  419531:	shl    BYTE PTR [esi+ebp*2-0x22],1
  419535:	mov    eax,ds:0x545ff052
  41953a:	sub    al,BYTE PTR [esp+esi*8-0x2a]
  41953e:	sar    BYTE PTR ds:0x230ba878,1
  419544:	mov    ds:0x20f9c230,al
  419549:	jb     0x419549
  41954b:	lea    esi,[edx]
  41954d:	mov    esp,0xa833b3c7
  419552:	jae    0x4195c6
  419554:	scas   eax,DWORD PTR es:[edi]
  419555:	xchg   DWORD PTR [edx-0x1e],ebx
  419558:	push   0x66f30852
  41955d:	xor    DWORD PTR [eax-0x9],ebp
  419560:	or     dl,bl
  419562:	in     al,dx
  419563:	mov    cl,0xe6
  419565:	inc    eax
  419566:	mov    ecx,0x206263c
  41956b:	push   eax
  41956c:	xor    BYTE PTR [ecx],dl
  41956e:	mov    ds:0x8f8b4625,eax
  419573:	or     eax,0xe996ae74
  419578:	mov    ds:0xa1ba5df8,eax
  41957d:	push   esi
  41957e:	mov    ebp,0x56ffc8ab
  419583:	in     al,dx
  419584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419585:	in     eax,0xf7
  419587:	push   eax
  419588:	jmp    0x65dccbf2
  41958d:	push   edi
  41958e:	fsub   QWORD PTR [edi+0x74a4eec0]
  419594:	shr    BYTE PTR [ecx+ecx*2],1
  419597:	ret    0x7d90
  41959a:	jbe    0x41959e
  41959c:	fs test al,0x8
  41959f:	mov    bl,0x1
  4195a1:	mov    ebp,0x9b284a32
  4195a6:	xor    eax,0x34f387e8
  4195ab:	mov    ds:0xb59690da,eax
  4195b0:	mov    edx,0xd713fc18
  4195b5:	leave  
  4195b6:	mov    DWORD PTR [ecx],esp
  4195b8:	mov    ch,0xe8
  4195ba:	fwait
  4195bb:	scas   eax,DWORD PTR es:[edi]
  4195bc:	xor    bl,BYTE PTR [ebx+eax*8-0x6c32022e]
  4195c3:	scas   al,BYTE PTR es:[edi]
  4195c4:	push   ds
  4195c5:	dec    ebp
  4195c6:	pop    edi
  4195c7:	data16 (bad) 
  4195c9:	(bad)  
  4195ca:	jp     0x41959d
  4195cc:	and    BYTE PTR [esi+0x5f],0x96
  4195d0:	in     al,0xe4
  4195d2:	and    eax,0xc07bb821
  4195d7:	add    al,0xdd
  4195d9:	mov    bl,0x42
  4195db:	xor    ebx,DWORD PTR gs:[edi-0x14]
  4195df:	or     ebx,ebx
  4195e1:	loopne 0x419638
  4195e3:	loopne 0x4195b4
  4195e5:	mov    dh,0x1d
  4195e7:	daa    
  4195e8:	dec    edi
  4195e9:	ja     0x419618
  4195eb:	add    edi,DWORD PTR [esi-0x44130858]
  4195f1:	imul   ebp,DWORD PTR [ebx+0x7d8bd264],0xf
  4195f8:	test   BYTE PTR [ecx+esi*1+0x4d90e659],bl
  4195ff:	push   0xffffffa3
  419601:	mov    eax,0x658cd0a4
  419606:	inc    edi
  419607:	adc    bl,BYTE PTR [ecx+edx*1+0x677d9721]
  41960e:	jg     0x41965c
  419610:	cmp    eax,esi
  419612:	ja     0x41960a
  419614:	sbb    edx,edi
  419616:	rcl    bl,cl
  419618:	ret    0x7c32
  41961b:	mov    dh,0xc3
  41961d:	in     al,dx
  41961e:	outs   dx,DWORD PTR ds:[esi]
  41961f:	push   esp
  419620:	aam    0x76
  419622:	sbb    bx,WORD PTR [edx+0x66e180b9]
  419629:	fldenv [bp+di]
  41962c:	je     0x41964c
  41962e:	xchg   BYTE PTR [ebp+0x73],dh
  419631:	cmp    al,0x8e
  419633:	sub    ecx,DWORD PTR [eax+0x44e9f7b7]
  419639:	cld    
  41963a:	call   0xead3a05e
  41963f:	js     0x419686
  419641:	stos   DWORD PTR es:[edi],eax
  419642:	aaa    
  419643:	clc    
  419644:	xchg   DWORD PTR [esi+eiz*1+0x5d9a157c],esp
  41964b:	xchg   ebp,eax
  41964c:	sar    BYTE PTR [ecx-0x54618923],1
  419652:	fld    DWORD PTR [ecx+0x4f140b56]
  419658:	inc    edi
  419659:	mov    edi,0x57b09427
  41965e:	pusha  
  41965f:	std    
  419660:	jns    0x419681
  419662:	loopne 0x4195ec
  419664:	pop    ss
  419665:	test   BYTE PTR [ecx-0x3b],bh
  419668:	xchg   edi,eax
  419669:	repz mov dh,0x93
  41966c:	xchg   di,ax
  41966e:	mov    ecx,0x25488f
  419673:	push   ebx
  419674:	jmp    0xc02b:0xe2b53f09
  41967b:	enter  0x2bd6,0xfa
  41967f:	jnp    0x41963c
  419681:	ror    DWORD PTR [ebp-0x52b2dcd1],cl
  419687:	rol    ecx,1
  419689:	cmp    al,0x41
  41968b:	cdq    
  41968c:	xor    bh,BYTE PTR [ebp-0xd]
  41968f:	retf   
  419690:	xchg   edx,eax
  419691:	fidiv  WORD PTR [ebx]
  419693:	imul   dl
  419695:	lods   al,BYTE PTR ds:[esi]
  419696:	popf   
  419697:	imul   DWORD PTR [eax+0x73e508bf]
  41969d:	adc    al,0x65
  41969f:	lds    edx,FWORD PTR [edi-0x5c1b73b1]
  4196a5:	xor    eax,0xe2d82cb8
  4196aa:	push   ss
  4196ab:	loop   0x419690
  4196ad:	sahf   
  4196ae:	dec    eax
  4196af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196b0:	ins    BYTE PTR es:[edi],dx
  4196b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196b2:	push   esp
  4196b3:	sub    eax,0xcd499aba
  4196b8:	out    0xb8,eax
  4196ba:	inc    esi
  4196bb:	mov    eax,0x9c165d12
  4196c0:	mov    al,ds:0xf8840fdf
  4196c5:	into   
  4196c6:	fnstsw WORD PTR [eax]
  4196c8:	test   BYTE PTR [eax-0x3ce3b26c],ch
  4196ce:	jge    0x4196e0
  4196d0:	pop    ss
  4196d1:	push   esp
  4196d2:	shl    esi,1
  4196d4:	xor    ecx,eax
  4196d6:	sub    ch,BYTE PTR [eax-0x9419f28]
  4196dc:	scas   al,BYTE PTR es:[edi]
  4196dd:	inc    edx
  4196de:	clc    
  4196df:	jno    0x4196e8
  4196e1:	in     eax,dx
  4196e2:	dec    ebx
  4196e3:	mov    esp,0x3b08f445
  4196e8:	aas    
  4196e9:	jl     0x419754
  4196eb:	imul   esi,DWORD PTR [ebx-0x6185feb3],0x98546256
  4196f5:	jmp    0x419742
  4196f7:	dec    ebp
  4196f8:	cmp    ecx,esi
  4196fa:	xor    DWORD PTR [ecx-0x5e],esi
  4196fd:	lock fsubp st(5),st
  419700:	jge    0x41973f
  419702:	inc    DWORD PTR [eax+0x34284a10]
  419708:	fidiv  DWORD PTR [edi-0x55eb2b70]
  41970e:	out    dx,al
  41970f:	xor    dh,BYTE PTR [edx]
  419711:	lock push esi
  419713:	sbb    BYTE PTR [ebp+eax*4-0x7b87d54c],bh
  41971a:	mov    esi,0x391a0b04
  41971f:	jns    0x4196b7
  419721:	mov    ch,0xd0
  419723:	pop    es
  419724:	retf   0x605a
  419727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419728:	aad    0xe2
  41972a:	cmp    edx,DWORD PTR [edx-0x79]
  41972d:	mov    ss,WORD PTR [eax-0x55]
  419730:	fs push eax
  419732:	les    esp,FWORD PTR [edx*1-0x7ea1d51]
  419739:	jmp    0x419736
  41973b:	test   DWORD PTR [ebx+0x1],esi
  41973e:	dec    ecx
  41973f:	xchg   esp,eax
  419740:	xchg   esi,eax
  419741:	ds pop ds
  419743:	sbb    bl,BYTE PTR [ebx-0x3eba6345]
  419749:	fstp   QWORD PTR [edx+0x1f]
  41974c:	xchg   DWORD PTR [ebp+ecx*2-0x54],esi
  419750:	loop   0x4197a8
  419752:	inc    ecx
  419753:	jmp    0xa01411b6
  419758:	dec    edx
  419759:	imul   edi,DWORD PTR [ecx+0x7c],0x6edd7c8a
  419760:	jg     0x4196f9
  419762:	adc    eax,0xf980e46a
  419767:	(bad)  
  419768:	pop    ebp
  419769:	jae    0x419757
  41976b:	lods   al,BYTE PTR ds:[esi]
  41976c:	std    
  41976d:	mov    ecx,0xf5d16cda
  419772:	jmp    0x419779
  419774:	push   eax
  419775:	fmulp  st(3),st
  419777:	shr    DWORD PTR [edi],cl
  419779:	mov    ds:0x401da56f,al
  41977e:	sbb    al,0x1c
  419780:	int3   
  419781:	jns    0x419797
  419783:	jo     0x419752
  419785:	arpl   WORD PTR [edi-0x200f3944],bp
  41978b:	inc    esi
  41978c:	dec    edi
  41978d:	cdq    
  41978e:	cmp    al,0x91
  419790:	rep outs dx,BYTE PTR ds:[esi]
  419792:	cmp    ah,BYTE PTR [edx+0x9809012]
  419798:	mov    esp,0x6d39f480
  41979d:	lods   al,BYTE PTR ds:[esi]
  41979e:	test   BYTE PTR [ecx],bh
  4197a0:	sbb    DWORD PTR [edi-0x2b507e4d],ebp
  4197a6:	dec    edx
  4197a7:	in     eax,dx
  4197a8:	pop    ebx
  4197a9:	push   ecx
  4197aa:	in     al,0x75
  4197ac:	pop    ss
  4197ad:	outs   dx,BYTE PTR ds:[esi]
  4197ae:	adc    ebx,edx
  4197b0:	jge    0x41979a
  4197b2:	add    BYTE PTR [edi],bl
  4197b4:	je     0x419790
  4197b6:	push   ebx
  4197b7:	jg     0x419769
  4197b9:	inc    esp
  4197ba:	sti    
  4197bb:	dec    esi
  4197bc:	popa   
  4197bd:	mov    al,0x2
  4197bf:	aas    
  4197c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197c1:	aaa    
  4197c2:	or     al,0xe6
  4197c4:	fnstsw WORD PTR [ebx+0x1cfa6fe9]
  4197ca:	jnp    0x4197cf
  4197cc:	fsubr  QWORD PTR [ebp+0x40]
  4197cf:	ret    0x7bb0
  4197d2:	fldcw  WORD PTR ds:0x64494491
  4197d8:	outs   dx,DWORD PTR ds:[esi]
  4197d9:	rol    BYTE PTR [edx+0x3f8937c8],0x9f
  4197e0:	mov    ds:0x2d75efed,eax
  4197e5:	icebp  
  4197e6:	test   al,0xeb
  4197e8:	test   eax,0xe2f7c96c
  4197ee:	xchg   edx,eax
  4197ef:	inc    eax
  4197f0:	mov    al,0xaf
  4197f2:	aam    0x47
  4197f4:	pop    edx
  4197f5:	bound  ebx,QWORD PTR [edi]
  4197f7:	adc    DWORD PTR [edx],ecx
  4197f9:	or     BYTE PTR [ebx+0x55],0xc7
  4197fd:	ins    BYTE PTR es:[edi],dx
  4197fe:	dec    esi
  4197ff:	mov    ds:0x5dce88e3,eax
  419804:	cmp    eax,eax
  419806:	or     BYTE PTR [eax+ecx*8-0x2bf94e8b],al
  41980d:	dec    ecx
  41980e:	punpckhwd mm7,QWORD PTR ds:0xd54f7685
  419815:	dec    esi
  419816:	mov    al,0x6b
  419818:	push   0x26f803b
  41981d:	dec    ebp
  41981e:	jno    0x419888
  419820:	fistp  DWORD PTR [edi+0x14f556b3]
  419826:	add    al,0xf9
  419828:	jb     0x4197ac
  41982a:	ja     0x4197f5
  41982c:	and    dh,dl
  41982e:	out    dx,al
  41982f:	xchg   BYTE PTR [edi+0x71],dh
  419832:	push   0xf7e7ecfb
  419837:	jecxz  0x419897
  419839:	sub    ecx,DWORD PTR [edx-0xa7d2eee]
  41983f:	arpl   WORD PTR [edx-0x32],cx
  419842:	(bad)  
  419843:	lds    edx,FWORD PTR [edi]
  419845:	sub    DWORD PTR [eax-0x1a1822c1],ecx
  41984b:	or     ch,BYTE PTR [ecx+0x165e1f15]
  419851:	clc    
  419852:	dec    edi
  419853:	mov    cl,0x30
  419855:	iret   
  419856:	adc    DWORD PTR [edx-0x20],edx
  419859:	cmp    eax,0x39d7c648
  41985e:	push   edx
  41985f:	or     eax,DWORD PTR [esi+0x1f]
  419862:	pop    ebx
  419863:	imul   edi,esp,0xffffff9d
  419866:	lods   eax,DWORD PTR ds:[esi]
  419867:	icebp  
  419868:	fild   DWORD PTR [ebx-0x27b59cbd]
  41986e:	fild   WORD PTR ds:0x25c84ce2
  419874:	jge    0x41986d
  419876:	fs lahf 
  419878:	push   edx
  419879:	test   eax,0xd3a00b76
  41987e:	adc    eax,0x6d60a523
  419883:	jne    0x4198ed
  419885:	sbb    DWORD PTR cs:[eax+esi*1+0x65bfdf0c],esp
  41988d:	(bad)  
  41988e:	mov    eax,ds:0x3f76d246
  419893:	adc    ebx,ebp
  419895:	mov    cs,WORD PTR [ebp+0x533bf30b]
  41989b:	sub    ebp,esp
  41989d:	sbb    eax,0x4b4539fc
  4198a2:	push   ss
  4198a3:	or     ebp,esp
  4198a5:	sbb    eax,0x5608de1
  4198aa:	(bad)  
  4198ab:	ds data16 out dx,al
  4198ae:	cmp    dl,ch
  4198b0:	out    dx,eax
  4198b1:	push   0xd5e77398
  4198b6:	push   edi
  4198b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198b8:	jno    0x419888
  4198ba:	jmp    0x4198b0
  4198bc:	pop    ebp
  4198bd:	cmp    ch,BYTE PTR [ecx-0xede02ee]
  4198c3:	arpl   WORD PTR [edi-0xde984ac],sp
  4198c9:	retf   0xe336
  4198cc:	jle    0x419927
  4198ce:	cmp    eax,0xc264513
  4198d3:	or     DWORD PTR [ebx+ecx*2-0x19],edx
  4198d7:	and    DWORD PTR [ebp-0x7f],0x557ec129
  4198de:	push   edi
  4198df:	les    edx,FWORD PTR [edi+0x7ba34cf5]
  4198e5:	iret   
  4198e6:	jns    0x419868
  4198e8:	push   0xffffffb0
  4198ea:	gs out 0x4f,eax
  4198ed:	(bad)  
  4198ee:	dec    edi
  4198ef:	mov    ebx,ecx
  4198f1:	es mov dl,0xcf
  4198f4:	cmp    DWORD PTR ds:0x17463cfa,eax
  4198fa:	dec    eax
  4198fb:	sub    al,0xf3
  4198fd:	icebp  
  4198fe:	shl    BYTE PTR [ecx-0x67],0xba
  419902:	test   eax,0x500ad181
  419907:	fdiv   DWORD PTR [eax-0x8e39d5d]
  41990d:	les    ebx,FWORD PTR [ecx]
  41990f:	sub    cl,ah
  419911:	mov    esi,DWORD PTR [ebp+0x27202c48]
  419917:	mov    ch,0x42
  419919:	sub    bh,cl
  41991b:	aaa    
  41991c:	nop
  41991d:	xor    DWORD PTR [esi+0x28],esp
  419920:	pusha  
  419921:	cmp    al,BYTE PTR [edx]
  419923:	mov    dh,0x8f
  419925:	arpl   WORD PTR [esi],si
  419927:	in     al,dx
  419928:	pop    eax
  419929:	(bad)  
  41992a:	stc    
  41992b:	popf   
  41992c:	mov    ebp,0xe276b17c
  419931:	cmp    al,0x7e
  419933:	in     al,dx
  419934:	loopne 0x41990a
  419936:	mov    eax,ds:0xbda6be65
  41993b:	icebp  
  41993c:	or     ch,cl
  41993e:	mov    cl,0x45
  419940:	inc    edx
  419941:	ret    
  419942:	outs   dx,BYTE PTR ds:[esi]
  419943:	(bad)  
  419944:	std    
  419945:	mov    ds:0x74f9f368,al
  41994a:	push   ss
  41994b:	inc    ecx
  41994c:	outs   dx,BYTE PTR ds:[esi]
  41994d:	pushf  
  41994e:	int3   
  41994f:	mov    bl,0x68
  419951:	cdq    
  419952:	jmp    0x52b58c4a
  419957:	fs imul eax
  41995a:	adc    eax,0x33c5e2ba
  41995f:	nop
  419960:	and    DWORD PTR [ebx+0x45ac761],edi
  419966:	inc    bp
  419968:	jne    0x4199e8
  41996a:	retf   
  41996b:	push   cs
  41996c:	mov    bh,0xb2
  41996e:	mov    eax,0x1a3114ee
  419973:	lea    edx,[ebx-0x22]
  419976:	xor    al,0xd3
  419978:	pop    esi
  419979:	out    0x8f,eax
  41997b:	movlps QWORD PTR [ecx+0x2073b41e],xmm5
  419982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419983:	dec    ebx
  419984:	into   
  419985:	mov    cl,0xc0
  419987:	jg     0x419917
  419989:	fcom   QWORD PTR [edx+0x43]
  41998c:	jno    0x419959
  41998e:	add    ch,al
  419990:	xor    al,0x9a
  419993:	fbld   TBYTE PTR [ecx+0x70]
  419996:	sbb    eax,0x5d68bf9a
  41999b:	sti    
  41999c:	pusha  
  41999d:	stc    
  41999e:	test   BYTE PTR [edi-0x6f],ah
  4199a1:	lahf   
  4199a2:	dec    esi
  4199a3:	pop    es
  4199a4:	xor    dh,BYTE PTR [eax+0x643ce00]
  4199aa:	xor    edx,DWORD PTR [eax]
  4199ac:	or     eax,0x9e702ac9
  4199b1:	cmp    eax,0x87be8f14
  4199b6:	data16 mov bl,0xcf
  4199b9:	jle    0x4199c2
  4199bb:	fst    QWORD PTR [eax]
  4199bd:	fs adc dl,dh
  4199c0:	out    0x3c,eax
  4199c2:	sbb    DWORD PTR [ecx-0x21],esp
  4199c5:	pop    DWORD PTR [esi+0x150f1024]
  4199cb:	xchg   esp,eax
  4199cc:	fist   WORD PTR [edi-0x68]
  4199cf:	cmp    DWORD PTR [ebx-0x7b],esp
  4199d2:	or     eax,0x4dfc5cbe
  4199d7:	fidivr WORD PTR [ecx+0x2c]
  4199da:	sbb    eax,0x9009a656
  4199df:	cdq    
  4199e0:	fucom  st(6)
  4199e2:	mov    bl,0x4f
  4199e4:	and    DWORD PTR [eax+edx*1-0xd],0x77
  4199e9:	inc    ebp
  4199ea:	fcmovu st,st(6)
  4199ec:	mov    ds:0xd0370bb6,al
  4199f1:	hlt    
  4199f2:	ret    0xf1a9
  4199f5:	imul   edx,DWORD PTR [ecx-0x10456f8a],0xffffffad
  4199fc:	adc    DWORD PTR [edi],esi
  4199fe:	jne    0x4199b9
  419a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a01:	mov    BYTE PTR [eax-0x32],bh
  419a04:	fisub  DWORD PTR [ebx-0x47de04ff]
  419a0a:	jbe    0x4199ec
  419a0c:	inc    ebp
  419a0d:	adc    eax,edi
  419a0f:	mov    al,ds:0x96d04206
  419a14:	ja     0x419a94
  419a16:	mov    al,0x21
  419a18:	bound  ebx,QWORD PTR [edi*4+0x3f8d3b36]
  419a1f:	inc    edx
  419a20:	mov    dl,0xb4
  419a22:	out    dx,al
  419a23:	push   esi
  419a24:	sti    
  419a25:	xor    al,0xdb
  419a27:	imul   DWORD PTR [eax-0x48d5eca8]
  419a2d:	mov    BYTE PTR [edx],bl
  419a2f:	out    dx,eax
  419a30:	lock jp 0x419a19
  419a33:	pushf  
  419a34:	loop   0x419a8c
  419a36:	jp     0x419a91
  419a38:	jnp    0x4199e0
  419a3a:	sbb    edx,DWORD PTR [ecx+ecx*8-0x8]
  419a3e:	dec    edx
  419a3f:	cld    
  419a40:	fild   QWORD PTR [esi+ebx*1]
  419a43:	pop    edx
  419a44:	pop    ds
  419a45:	cmp    BYTE PTR [ecx-0x35291893],bl
  419a4b:	clc    
  419a4c:	push   ds
  419a4d:	in     al,0x9a
  419a4f:	adc    al,0x9a
  419a51:	sbb    dh,cl
  419a53:	jae    0x4199de
  419a55:	out    dx,al
  419a56:	sbb    bh,BYTE PTR [edi]
  419a58:	pop    ss
  419a59:	out    dx,eax
  419a5a:	pop    eax
  419a5b:	adc    esp,DWORD PTR ds:0xd7ec00f3
  419a61:	in     al,dx
  419a62:	sbb    DWORD PTR [eax],ebp
  419a64:	mov    eax,0x6b4909f7
  419a69:	cmp    edi,esi
  419a6b:	ror    DWORD PTR [esi-0x2dad79fc],cl
  419a71:	std    
  419a72:	xor    edi,esp
  419a74:	push   ebp
  419a75:	mov    ebx,0x9d72e7ce
  419a7a:	or     dh,bh
  419a7c:	mov    ecx,0x37649f9b
  419a81:	in     al,dx
  419a82:	add    cl,al
  419a84:	pushf  
  419a85:	pop    ebx
  419a86:	inc    edi
  419a87:	popa   
  419a88:	xor    BYTE PTR [ecx-0x4973e23f],0xb3
  419a8f:	inc    eax
  419a90:	int3   
  419a91:	sub    bl,dl
  419a93:	js     0x419ad9
  419a95:	add    al,0x87
  419a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a98:	rcl    DWORD PTR [edi+0x5a],1
  419a9b:	xor    al,BYTE PTR [eax-0x3b70183e]
  419aa1:	sub    esp,DWORD PTR [ecx+0x3b9a522e]
  419aa7:	pop    es
  419aa8:	mov    cl,0x3
  419aaa:	(bad)  
  419aac:	jge    0x419abc
  419aae:	adc    dl,BYTE PTR ds:0x60b22c6a
  419ab4:	xchg   ecx,eax
  419ab5:	jbe    0x419b22
  419ab7:	mov    ecx,0xd731643d
  419abc:	sub    DWORD PTR [ebx-0x93d27d5],ebx
  419ac2:	xor    eax,0xda1a04bc
  419ac7:	outs   dx,BYTE PTR ds:[esi]
  419ac8:	adc    BYTE PTR [ebp-0x4b],dl
  419acb:	gs or  al,dh
  419ace:	js     0x419a54
  419ad0:	in     eax,dx
  419ad1:	call   0xe390b195
  419ad6:	addr16 int3 
  419ad8:	pop    ds
  419ad9:	push   ds
  419ada:	scas   eax,DWORD PTR es:[edi]
  419adb:	sbb    al,0x80
  419add:	inc    eax
  419ade:	mov    ecx,DWORD PTR [ecx-0x67922190]
  419ae4:	sub    ebp,DWORD PTR [edi+0x4d]
  419ae7:	es ja  0x419af5
  419aea:	fldcw  WORD PTR [ebp+0x4326d22d]
  419af0:	lahf   
  419af1:	mov    ebp,0x1c0a5d7d
  419af6:	pop    edx
  419af7:	ins    DWORD PTR es:[edi],dx
  419af8:	outs   dx,BYTE PTR ds:[esi]
  419af9:	(bad)  
  419afa:	pop    ecx
  419afb:	rcl    BYTE PTR [edi],cl
  419afd:	xor    al,BYTE PTR [esi+esi*4+0x34]
  419b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b02:	call   DWORD PTR [ecx]
  419b04:	or     al,BYTE PTR [ecx]
  419b06:	rcl    BYTE PTR [ebx+0x3849bf5a],0xa9
  419b0d:	bound  ebx,QWORD PTR [ebp+0x15ce1f1d]
  419b13:	fcomp  QWORD PTR [edx+0x38]
  419b16:	je     0x419b7b
  419b18:	or     DWORD PTR ds:0xf36a4134,0x55
  419b1f:	out    0x16,al
  419b21:	jle    0x419b37
  419b23:	pop    edi
  419b24:	push   ecx
  419b25:	cwde   
  419b26:	sub    BYTE PTR [edx-0x23a958df],cl
  419b2c:	(bad)  
  419b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b2f:	sub    ah,BYTE PTR [ebx-0x2661ed19]
  419b35:	dec    ecx
  419b36:	push   esp
  419b37:	mov    bl,0x1b
  419b39:	xchg   dl,cl
  419b3b:	adc    BYTE PTR [esi+eax*1+0x12],dh
  419b3f:	popf   
  419b40:	mov    BYTE PTR [ecx-0x7d53ef5e],0x9b
  419b47:	inc    esp
  419b48:	dec    ecx
  419b49:	xchg   eax,eax
  419b4b:	sbb    al,0x32
  419b4d:	ficomp WORD PTR [eax-0x8]
  419b50:	xor    DWORD PTR [edx+0x75],esi
  419b53:	std    
  419b54:	xchg   esp,eax
  419b55:	fisubr DWORD PTR [eax]
  419b57:	and    BYTE PTR [ebp+0x3c],ch
  419b5a:	icebp  
  419b5b:	mov    ebx,DWORD PTR [edx]
  419b5d:	adc    al,0x2b
  419b5f:	ss push edx
  419b61:	pushf  
  419b62:	pop    eax
  419b63:	test   BYTE PTR [esi+0x59c26ae],ch
  419b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b6a:	repnz pop esp
  419b6c:	mov    edi,0x21c3c17f
  419b71:	es inc esp
  419b73:	pop    eax
  419b74:	jo     0x419bde
  419b76:	out    0x20,eax
  419b78:	in     al,0xd4
  419b7a:	jle    0x419b71
  419b7c:	or     DWORD PTR [edx+0x57],esp
  419b7f:	in     al,dx
  419b80:	mov    DWORD PTR [edi],0xb2ee74f8
  419b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b87:	rol    BYTE PTR [eax+0x4c],1
  419b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b8b:	add    al,BYTE PTR [edi+ebp*4+0x65]
  419b8f:	mov    edi,0x108466ff
  419b94:	cmp    ecx,DWORD PTR [ebx+0x5f91231a]
  419b9a:	retf   
  419b9b:	aam    0x95
  419b9d:	hlt    
  419b9e:	ja     0x419bd0
  419ba0:	xchg   BYTE PTR [eax-0xd],ch
  419ba3:	int    0xcb
  419ba5:	(bad)  
  419ba6:	or     edi,DWORD PTR [ebx+0x2a6b2261]
  419bac:	pop    edx
  419bad:	fs cdq 
  419baf:	(bad)  
  419bb0:	test   eax,0x5dec2a64
  419bb5:	push   edi
  419bb6:	cmp    al,0x62
  419bb8:	outs   dx,BYTE PTR ds:[esi]
  419bb9:	scas   eax,DWORD PTR es:[edi]
  419bba:	mov    DWORD PTR [esi],ecx
  419bbc:	cld    
  419bbd:	sub    al,0xcb
  419bbf:	mov    edx,0x502734f0
  419bc4:	and    edx,DWORD PTR [ecx+esi*2-0x20]
  419bc8:	push   ebx
  419bc9:	ins    DWORD PTR es:[edi],dx
  419bca:	rcl    BYTE PTR gs:[edi+esi*2+0xd841c60],0x8
  419bd3:	shld   esp,edi,0x49
  419bd7:	stc    
  419bd8:	aaa    
  419bd9:	aad    0x7a
  419bdb:	stos   DWORD PTR es:[edi],eax
  419bdc:	fistp  WORD PTR [edx]
  419bde:	push   edx
  419bdf:	xchg   edi,eax
  419be0:	inc    edx
  419be1:	adc    DWORD PTR [ecx],eax
  419be3:	inc    esi
  419be4:	or     eax,0x3cbd06b3
  419be9:	mov    al,ds:0x31e0375a
  419bee:	mov    bl,0xe7
  419bf0:	push   esi
  419bf1:	inc    edi
  419bf2:	lds    ebx,FWORD PTR [esi-0x6bc9b2a8]
  419bf8:	addr16 mov ds:0x384d,al
  419bfc:	jnp    0x419ba7
  419bfe:	loope  0x419c50
  419c00:	jne    0x419c2f
  419c02:	dec    ecx
  419c03:	bound  edi,QWORD PTR [ebx+0x1b]
  419c06:	adc    ecx,DWORD PTR [esi-0x5f]
  419c09:	add    edi,DWORD PTR [eax+0x62b1377c]
  419c0f:	and    ecx,DWORD PTR [esp+eax*2]
  419c12:	xchg   BYTE PTR [edx],dh
  419c14:	or     dh,BYTE PTR [eax]
  419c16:	mov    eax,ds:0xbaa48244
  419c1b:	push   es
  419c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c1d:	mov    DWORD PTR ds:0xa71f7200,edi
  419c23:	add    bh,BYTE PTR [ebx-0x1e469d88]
  419c29:	push   ebp
  419c2a:	xor    eax,0x4c394bb1
  419c2f:	mov    cs:0xaa241623,eax
  419c35:	xor    eax,0xa57d51f
  419c3a:	and    ecx,edi
  419c3c:	ret    
  419c3d:	add    BYTE PTR [eax+eax*4],dh
  419c40:	ss pop ds
  419c42:	rcl    DWORD PTR [edi+0x70],cl
  419c45:	sahf   
  419c46:	xchg   ecx,eax
  419c47:	ret    0x484a
  419c4a:	mov    dh,0x57
  419c4c:	arpl   WORD PTR [esi-0x22],sp
  419c4f:	add    BYTE PTR [esi-0x1e],bl
  419c52:	cmp    eax,0x9771714b
  419c57:	shr    DWORD PTR [esi],0xcb
  419c5a:	aas    
  419c5b:	jp     0x419bf1
  419c5d:	call   FWORD PTR gs:[eax+0x7407a36f]
  419c64:	pop    esp
  419c65:	cmp    bl,ah
  419c67:	jg     0x419cd7
  419c69:	or     DWORD PTR [esp+edi*1],edi
  419c6c:	(bad)  [edi-0x41]
  419c6f:	push   eax
  419c70:	push   0xd7ec6b7b
  419c75:	jp     0x419c05
  419c77:	inc    edi
  419c79:	repnz sbb esi,DWORD PTR [ecx]
  419c7c:	mov    bl,0x37
  419c7e:	mov    dh,0xfe
  419c80:	and    al,0xc2
  419c82:	pop    ebx
  419c83:	sbb    al,0xde
  419c85:	loopne 0x419c68
  419c87:	(bad)  
  419c88:	shl    DWORD PTR ds:0x9059c40b,0xe5
  419c8f:	call   0x48cea59d
  419c94:	stc    
  419c95:	mov    edx,0x6eecf590
  419c9a:	aam    0xa4
  419c9c:	ror    BYTE PTR [edx],cl
  419c9e:	pop    DWORD PTR [edx]
  419ca0:	fwait
  419ca1:	adc    DWORD PTR [ecx-0x743b4185],0xb
  419ca8:	xchg   edi,eax
  419ca9:	es js  0x419ce4
  419cac:	pop    edx
  419cad:	retf   0x6000
  419cb0:	mov    DWORD PTR [ecx+0x6566fb4b],0xdf6586bc
  419cba:	push   esp
  419cbb:	jmp    0x1f887fa
  419cc0:	in     eax,dx
  419cc1:	mov    ch,0x88
  419cc3:	sbb    DWORD PTR [ebx+0xe],edi
  419cc6:	mov    al,ds:0x940b687a
  419ccb:	or     dl,0x82
  419cce:	ficomp WORD PTR [ebx-0x26bef1bb]
  419cd4:	sub    al,0xd1
  419cd6:	data16 mov ch,0x72
  419cd9:	(bad)  
  419cda:	nop
  419cdb:	ss retf 0x13e0
  419cdf:	jo     0x419cd7
  419ce1:	jp     0x419d3d
  419ce3:	mov    edx,0xeb8ed577
  419ce8:	ret    
  419ce9:	or     BYTE PTR [ebp-0x2d],0x80
  419ced:	ror    BYTE PTR [esi],0xe9
  419cf0:	or     dl,BYTE PTR [esi-0x11dcbdb0]
  419cf6:	xor    bl,al
  419cf8:	shl    bl,1
  419cfa:	jecxz  0x419cee
  419cfc:	jp     0x419d55
  419cfe:	ja     0x419d65
  419d00:	xchg   esi,eax
  419d01:	jl     0x419c83
  419d03:	loop   0x419cc9
  419d05:	dec    ecx
  419d06:	es mov ah,0x5d
  419d09:	mov    ds,WORD PTR [edi-0x58]
  419d0c:	pusha  
  419d0d:	add    edx,DWORD PTR [edx]
  419d0f:	mov    ah,0x2a
  419d11:	mov    edi,0x15ed73d
  419d16:	jo     0x419caf
  419d18:	mov    dl,ch
  419d1a:	push   ds
  419d1b:	sub    al,0x3
  419d1d:	aas    
  419d1e:	inc    eax
  419d1f:	stc    
  419d20:	int    0x3
  419d22:	sahf   
  419d23:	stos   DWORD PTR es:[edi],eax
  419d24:	xchg   edx,eax
  419d25:	xor    esi,esp
  419d27:	ret    0x16e3
  419d2a:	cmp    DWORD PTR [ecx-0x60],ebx
  419d2d:	not    DWORD PTR [eax-0x79]
  419d30:	aas    
  419d31:	es (bad) 
  419d33:	std    
  419d34:	stc    
  419d35:	fistp  QWORD PTR [edi]
  419d37:	xor    eax,0x33ceca33
  419d3c:	aad    0x86
  419d3e:	cmc    
  419d3f:	sub    eax,0xa876d83d
  419d44:	dec    ebp
  419d45:	xor    al,0x59
  419d47:	test   eax,0xcca3b230
  419d4c:	icebp  
  419d4d:	ja     0x419cf6
  419d4f:	push   eax
  419d50:	xchg   edi,eax
  419d51:	mov    eax,ds:0x82579a79
  419d56:	jg     0x419d60
  419d58:	adc    ecx,DWORD PTR [eax-0x34]
  419d5b:	and    eax,0xde6101e6
  419d60:	pop    eax
  419d61:	cmp    eax,0x4482c2ec
  419d66:	(bad)  
  419d67:	jmp    0xc50e:0xcec39a39
  419d6e:	xchg   ecx,eax
  419d6f:	sbb    BYTE PTR [ecx+edi*8-0x33c642b1],dh
  419d76:	hlt    
  419d77:	leave  
  419d78:	fsub   QWORD PTR [edi+0x7daaae90]
  419d7e:	lds    edx,FWORD PTR [eax+0x479794ce]
  419d84:	add    eax,0x8406d5b3
  419d89:	dec    ecx
  419d8a:	cli    
  419d8b:	inc    ebp
  419d8c:	or     eax,0xa92a68ec
  419d91:	inc    ecx
  419d92:	mov    ch,0x5f
  419d94:	mov    BYTE PTR [eax-0x38],ah
  419d97:	xchg   esp,eax
  419d98:	inc    ebx
  419d99:	cdq    
  419d9a:	or     al,0x54
  419d9c:	mov    edx,0x54115f1f
  419da1:	sub    cl,bl
  419da3:	push   0xffffffcb
  419da5:	lods   eax,DWORD PTR ds:[esi]
  419da6:	aaa    
  419da7:	ret    0x5e49
  419daa:	or     ebp,DWORD PTR [edx]
  419dac:	mov    al,0x45
  419dae:	mov    dh,0x4b
  419db0:	xchg   BYTE PTR [ebx],bl
  419db2:	and    eax,0xb73ab2
  419db7:	ficom  WORD PTR [ecx-0x70]
  419dba:	and    al,0x82
  419dbc:	lods   eax,DWORD PTR ds:[esi]
  419dbd:	pop    eax
  419dbe:	fs dec edx
  419dc0:	pop    edx
  419dc1:	cmp    al,0xae
  419dc3:	gs mov esp,0xcb5d32a6
  419dc9:	pop    ebx
  419dca:	jae    0x419e0c
  419dcc:	cmp    edi,eax
  419dce:	push   ebx
  419dcf:	(bad)  
  419dd0:	or     al,0xf4
  419dd2:	or     bl,BYTE PTR [edx+0x6e]
  419dd5:	lea    edx,[edx-0x5f]
  419dd8:	into   
  419dd9:	xchg   ecx,eax
  419dda:	ja     0x419da6
  419ddc:	push   ds
  419ddd:	or     BYTE PTR [edx-0x7165c71a],al
  419de3:	mov    cl,0x41
  419de5:	shr    DWORD PTR [esi+0x664267d8],cl
  419deb:	retf   0xd368
  419dee:	push   esp
  419def:	stos   BYTE PTR es:[edi],al
  419df0:	jne    0x419e5d
  419df2:	inc    ebp
  419df3:	shr    bh,0x8f
  419df6:	mov    ds:0x2c078dbf,al
  419dfb:	loope  0x419e54
  419dfd:	push   esp
  419dfe:	sub    al,0x25
  419e00:	sbb    ch,ch
  419e02:	or     eax,0x95fd6f65
  419e07:	outs   dx,DWORD PTR ds:[esi]
  419e08:	dec    ebx
  419e09:	test   ebp,ecx
  419e0b:	jb     0x419e50
  419e0d:	jmp    0x4945f214
  419e12:	jb     0x419e61
  419e14:	push   ecx
  419e15:	iret   
  419e16:	add    al,0x95
  419e18:	mov    cl,0xb7
  419e1a:	add    DWORD PTR [edx-0x221b4803],esi
  419e20:	jp     0x419e54
  419e22:	add    eax,0xc373122b
  419e27:	aas    
  419e28:	sahf   
  419e29:	push   ecx
  419e2a:	repz xor DWORD PTR [eax],esp
  419e2d:	or     eax,0x94beb347
  419e32:	scas   al,BYTE PTR es:[edi]
  419e33:	mov    esp,0xf7e04abf
  419e38:	stos   DWORD PTR es:[edi],eax
  419e39:	push   ds
  419e3a:	mov    eax,ds:0x3d3326b6
  419e3f:	dec    BYTE PTR [eax+0x5541fdc3]
  419e45:	and    cl,BYTE PTR [ecx]
  419e47:	mov    dh,0xea
  419e49:	cmp    al,0x99
  419e4b:	xlat   BYTE PTR ds:[ebx]
  419e4c:	loop   0x419e59
  419e4e:	jge    0x419e86
  419e50:	ret    0x9064
  419e53:	(bad)  
  419e54:	hlt    
  419e55:	cdq    
  419e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e57:	mov    ebp,0xff2502e2
  419e5c:	data16 adc al,0x7f
  419e5f:	aaa    
  419e60:	mov    al,ds:0x5814002e
  419e65:	or     BYTE PTR [esi+0x21],dh
  419e68:	mov    al,ds:0xf773a1d3
  419e6d:	shl    DWORD PTR [edi],cl
  419e6f:	test   DWORD PTR [edi-0x23],edx
  419e72:	scas   al,BYTE PTR es:[edi]
  419e73:	int    0x70
  419e75:	push   eax
  419e76:	xchg   edx,eax
  419e77:	mov    esp,0xb0f0be97
  419e7c:	mov    esi,0x26ce2e15
  419e81:	test   al,0x96
  419e83:	inc    ebp
  419e84:	ror    DWORD PTR [eax+0x18bdb53c],cl
  419e8a:	retf   0x99c0
  419e8d:	sbb    BYTE PTR [eax+esi*1-0x3b],bh
  419e91:	dec    ecx
  419e92:	outs   dx,DWORD PTR ds:[esi]
  419e93:	inc    esi
  419e94:	mov    cl,0xdd
  419e96:	clc    
  419e97:	cmp    ch,BYTE PTR [edx+0x66481a12]
  419e9d:	in     eax,0xb7
  419e9f:	lock and DWORD PTR [edi-0x3930e38f],eax
  419ea6:	adc    BYTE PTR [eax*8-0x5110dc77],0xc3
  419eae:	in     eax,dx
  419eaf:	jno    0x419efe
  419eb1:	out    dx,al
  419eb2:	sbb    cl,0xc2
  419eb5:	call   0x98fac66b
  419eba:	adc    ebp,DWORD PTR [esi+ebx*8]
  419ebd:	aaa    
  419ebe:	jmp    0x419f29
  419ec0:	aad    0x45
  419ec2:	pusha  
  419ec3:	dec    ebp
  419ec4:	jmp    0x753e:0x8528bbf4
  419ecb:	sbb    edx,DWORD PTR [edx+0x39de907d]
  419ed1:	sub    DWORD PTR [edi+edx*2+0x34],ebp
  419ed5:	sbb    DWORD PTR [edi+0x70d348fb],ebp
  419edb:	sbb    dl,ch
  419edd:	pop    ebp
  419ede:	mov    bl,0x8b
  419ee0:	ret    0x4b3c
  419ee3:	mov    ecx,0xfb65ef80
  419ee8:	outs   dx,BYTE PTR ds:[esi]
  419ee9:	and    al,ch
  419eeb:	push   0xffffffcf
  419eed:	test   esp,edi
  419eef:	xchg   ecx,eax
  419ef0:	fs dec edx
  419ef2:	pop    eax
  419ef3:	push   ds
  419ef4:	dec    eax
  419ef5:	pop    eax
  419ef6:	dec    ebx
  419ef7:	shr    BYTE PTR [eax-0x14],0x2c
  419efb:	fisttp DWORD PTR [ebx-0x2dc2821b]
  419f01:	ins    BYTE PTR es:[edi],dx
  419f02:	dec    edi
  419f03:	pusha  
  419f04:	mov    ecx,0x80251581
  419f09:	outs   dx,BYTE PTR ds:[esi]
  419f0a:	push   ds
  419f0b:	div    edi
  419f0d:	mov    ecx,0x11709ab1
  419f12:	jmp    0x419f82
  419f14:	dec    ecx
  419f15:	repz lock dec ecx
  419f18:	mov    ebp,DWORD PTR [eax]
  419f1a:	mov    al,ds:0x220c1e51
  419f1f:	ins    DWORD PTR es:[edi],dx
  419f20:	cmc    
  419f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f22:	jbe    0x419fa2
  419f24:	dec    esi
  419f25:	es xor eax,0xfa3fafc9
  419f2b:	pop    esp
  419f2c:	cs loope 0x419eaf
  419f2f:	cdq    
  419f30:	pop    ds
  419f31:	shl    BYTE PTR [ecx+0x57],cl
  419f34:	out    0x35,al
  419f36:	adc    bl,cl
  419f38:	and    BYTE PTR [ecx+0x1b],ah
  419f3b:	xor    esi,DWORD PTR ds:0x5581d73
  419f41:	dec    eax
  419f42:	and    al,0x99
  419f44:	pop    esi
  419f45:	les    edi,FWORD PTR [esi-0x2bd93780]
  419f4b:	add    ch,BYTE PTR [edi]
  419f4d:	shl    BYTE PTR [ebx-0x5bbeb937],1
  419f53:	loopne 0x419fb4
  419f55:	jp     0x419f0e
  419f57:	jno    0x419fd3
  419f59:	fs pop edi
  419f5b:	pop    ds
  419f5c:	inc    eax
  419f5d:	xlat   BYTE PTR ds:[ebx]
  419f5e:	mov    BYTE PTR [ecx-0x4acbbf56],bh
  419f64:	mov    dh,BYTE PTR [ebp-0x39]
  419f67:	jge    0x419ef0
  419f69:	sbb    esi,DWORD PTR [eax]
  419f6b:	jle    0x419f61
  419f6d:	lds    ebx,FWORD PTR [ebx-0x4]
  419f70:	adc    BYTE PTR [eax],ch
  419f72:	mov    ch,0x6c
  419f74:	cwde   
  419f75:	dec    esi
  419f76:	or     ebp,DWORD PTR [edi+0x32]
  419f79:	stos   DWORD PTR es:[edi],eax
  419f7a:	jmp    0x4372f110
  419f7f:	sar    DWORD PTR [edx+0x45],0x29
  419f83:	mov    BYTE PTR [esi],dh
  419f85:	gs jmp 0xedf6:0x741a7f94
  419f8d:	fld    DWORD PTR [eax-0x3]
  419f90:	hlt    
  419f91:	push   cs
  419f92:	and    al,0x91
  419f94:	clc    
  419f95:	es (bad) 
  419f97:	sahf   
  419f98:	sbb    al,0x7c
  419f9a:	out    0xdc,al
  419f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f9d:	xchg   DWORD PTR [edi+0x49],ebx
  419fa0:	inc    ebp
  419fa1:	inc    ebp
  419fa2:	pop    es
  419fa3:	popf   
  419fa4:	inc    BYTE PTR [esi+0x5aef972]
  419faa:	mov    bl,BYTE PTR [ecx]
  419fac:	cdq    
  419fad:	das    
  419fae:	cwde   
  419faf:	jno    0x419fe1
  419fb1:	xchg   esi,eax
  419fb2:	jmp    0xf61b:0x719c2ac3
  419fb9:	pop    eax
  419fba:	xor    BYTE PTR [edx],cl
  419fbc:	push   edx
  419fbd:	std    
  419fbe:	mov    dl,0x9e
  419fc0:	mov    ds:0xf281f141,al
  419fc5:	cmp    eax,0xa638b9a1
  419fca:	loop   0x419f95
  419fcc:	int3   
  419fcd:	inc    ebx
  419fce:	sub    edx,ecx
  419fd0:	mov    ch,0x68
  419fd2:	scas   eax,DWORD PTR es:[edi]
  419fd3:	mul    esp
  419fd5:	mov    ebx,0x62c5abb8
  419fda:	leave  
  419fdb:	xchg   ebp,eax
  419fdc:	xchg   esp,eax
  419fdd:	lods   eax,DWORD PTR ds:[esi]
  419fde:	and    DWORD PTR [edx+0x4eb483e2],ecx
  419fe4:	fisttp WORD PTR [ebp+0x0]
  419fe7:	pusha  
  419fe8:	jl     0x41a044
  419fea:	nop
  419feb:	ficomp DWORD PTR [eax]
  419fed:	push   esi
  419fee:	mov    ch,0x7e
  419ff0:	sbb    dl,BYTE PTR [ecx+edi*1+0x9a612bb]
  419ff7:	inc    edi
  419ff8:	into   
  419ff9:	hlt    
  419ffa:	rcr    BYTE PTR [eax+0x4e],0x2d
  419ffe:	lahf   
  419fff:	scas   eax,DWORD PTR es:[edi]
  41a000:	xor    dh,BYTE PTR ds:0x390bfe02
  41a006:	mov    ch,0x3d
  41a008:	stos   DWORD PTR es:[edi],eax
  41a009:	adc    al,0x11
  41a00b:	sub    cl,BYTE PTR [edx]
  41a00d:	jne    0x419ff2
  41a00f:	cmp    cl,BYTE PTR [ebp-0x7d]
  41a012:	cmp    ecx,DWORD PTR [ebp-0x20]
  41a015:	pop    eax
  41a016:	in     eax,0x56
  41a018:	sbb    BYTE PTR [edx-0xf],al
  41a01b:	jl     0x41a038
  41a01d:	xlat   BYTE PTR ds:[ebx]
  41a01e:	jecxz  0x41a00f
  41a020:	inc    DWORD PTR [eax+0x2b32f8f7]
  41a026:	in     eax,0xe7
  41a028:	stc    
  41a029:	rcr    DWORD PTR [edx],0xb0
  41a02c:	mov    dh,BYTE PTR [esp+ebp*1-0x3f873c5]
  41a033:	mov    DWORD PTR [edi],eax
  41a035:	add    DWORD PTR [ebp+0x59cc9294],edx
  41a03b:	sar    DWORD PTR [ebx+esi*8],1
  41a03e:	gs aas 
  41a040:	xchg   edx,eax
  41a041:	pop    edi
  41a042:	push   ebp
  41a043:	fsub   QWORD PTR [edi]
  41a045:	int    0xbf
  41a047:	push   ebx
  41a048:	dec    edi
  41a049:	xchg   esi,eax
  41a04a:	sbb    cl,BYTE PTR [edi-0x50e34496]
  41a050:	mov    eax,0x92df72f
  41a055:	(bad)  
  41a056:	and    dl,bl
  41a058:	loop   0x41a052
  41a05a:	dec    esi
  41a05b:	and    al,0x9a
  41a05d:	xchg   ebx,eax
  41a05e:	pop    ss
  41a05f:	retf   
  41a060:	call   0x1da6:0x3afdca51
  41a067:	test   DWORD PTR ds:0x29b935d9,esi
  41a06d:	pop    ss
  41a06e:	loop   0x41a09b
  41a070:	in     al,dx
  41a071:	adc    eax,0x8c306d34
  41a076:	mov    bl,0x99
  41a078:	cdq    
  41a079:	leave  
  41a07a:	dec    DWORD PTR [eax]
  41a07c:	clc    
  41a07d:	lods   al,BYTE PTR ds:[esi]
  41a07e:	and    BYTE PTR ss:[ebx+0x7e],al
  41a082:	in     eax,0x94
  41a084:	enter  0x11c0,0x21
  41a088:	fsub   DWORD PTR [edx]
  41a08a:	sbb    DWORD PTR ds:0xb73c10a,ecx
  41a090:	outs   dx,BYTE PTR ds:[esi]
  41a091:	jae    0x41a108
  41a093:	pop    ss
  41a094:	fs pushf 
  41a096:	fisubr DWORD PTR [eax+ebp*1+0x2d]
  41a09a:	mov    BYTE PTR [esi],al
  41a09c:	mov    eax,DWORD PTR [esi+0x4e2ed2cb]
  41a0a2:	ret    0x9caa
  41a0a5:	test   al,0x57
  41a0a7:	in     eax,0x73
  41a0a9:	into   
  41a0aa:	enter  0x2aeb,0x66
  41a0ae:	fiadd  DWORD PTR [edx-0x35]
  41a0b1:	inc    edx
  41a0b2:	pop    eax
  41a0b3:	popf   
  41a0b4:	frstor [edi]
  41a0b6:	lahf   
  41a0b7:	ret    
  41a0b8:	pop    ebp
  41a0b9:	(bad)  
  41a0ba:	shl    DWORD PTR [esi],cl
  41a0bc:	xchg   esi,eax
  41a0bd:	test   BYTE PTR [ecx],dh
  41a0bf:	scas   eax,DWORD PTR es:[edi]
  41a0c0:	inc    BYTE PTR [ebx-0x78]
  41a0c3:	sar    esi,cl
  41a0c5:	fld    st(2)
  41a0c7:	stos   DWORD PTR es:[edi],eax
  41a0c8:	call   0x1806:0x994da0af
  41a0cf:	ja     0x41a0ea
  41a0d1:	in     eax,0xe8
  41a0d3:	ja     0x41a0fa
  41a0d5:	rcr    BYTE PTR [esi+0x6a],0xfd
  41a0d9:	sbb    ebx,DWORD PTR [ecx]
  41a0db:	cs int 0xab
  41a0de:	lds    edx,FWORD PTR [edx-0x5dfb0746]
  41a0e4:	imul   edx,esp,0x7dce07f5
  41a0ea:	loopne 0x41a146
  41a0ec:	cli    
  41a0ed:	in     al,dx
  41a0ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ef:	sub    al,0x36
  41a0f1:	jp     0x41a0b1
  41a0f3:	(bad)  
  41a0f4:	call   0x5ef51c18
  41a0f9:	ret    
  41a0fa:	dec    ebp
  41a0fb:	jecxz  0x41a085
  41a0fd:	dec    edi
  41a0fe:	dec    esi
  41a0ff:	dec    ebx
  41a100:	sbb    BYTE PTR [ecx-0x4ac7f98b],cl
  41a106:	pop    ebx
  41a107:	cmc    
  41a108:	mov    ds:0x67cdf702,eax
  41a10d:	inc    esi
  41a10e:	jne    0x41a0a0
  41a110:	leave  
  41a111:	push   ds
  41a112:	push   ebp
  41a114:	and    eax,0xb5260c7d
  41a119:	sbb    ecx,DWORD PTR [eax-0x70]
  41a11c:	test   edx,eax
  41a11e:	cld    
  41a11f:	xlat   BYTE PTR ds:[ebx]
  41a120:	stos   DWORD PTR es:[edi],eax
  41a121:	dec    edx
  41a122:	pop    esi
  41a123:	pop    eax
  41a124:	pop    esp
  41a125:	pushw  cs
  41a127:	push   ebx
  41a128:	jg     0x41a16e
  41a12a:	mov    esi,0xb65adbb0
  41a12f:	sbb    edi,DWORD PTR [esi+eiz*1-0x18b966c7]
  41a136:	out    dx,eax
  41a137:	mov    edi,DWORD PTR [ecx]
  41a139:	mov    ss,WORD PTR [edx+0x79]
  41a13c:	out    0x6f,eax
  41a13e:	inc    esp
  41a13f:	enter  0x2373,0xa9
  41a143:	and    esp,edi
  41a145:	pop    ebx
  41a146:	xor    bl,cl
  41a148:	xor    eax,0x25766a7d
  41a14d:	sti    
  41a14e:	pop    ebx
  41a14f:	mov    ds:0x71e3700a,eax
  41a154:	jl     0x41a12c
  41a156:	cld    
  41a157:	test   eax,0xf97f7c78
  41a15c:	xchg   ecx,eax
  41a15d:	call   0x7bf7:0x5263be51
  41a164:	jp     0x41a122
  41a166:	ss cdq 
  41a168:	mov    ch,0xfb
  41a16a:	(bad)  
  41a16b:	cmp    esi,DWORD PTR [ecx]
  41a16d:	push   esi
  41a16e:	shl    BYTE PTR [esi-0x62],cl
  41a171:	dec    edi
  41a172:	shl    DWORD PTR [edx+0x46ad7563],cl
  41a178:	and    bl,BYTE PTR [edx+0x27]
  41a17b:	neg    cl
  41a17d:	les    edi,FWORD PTR [esp+edx*4-0x6412ff07]
  41a184:	aam    0x64
  41a186:	daa    
  41a187:	jmp    0xbf45:0x6fea0ee7
  41a18e:	jmp    0x9840:0xafe207ce
  41a195:	and    eax,DWORD PTR ds:[edx-0x2f]
  41a199:	fisubr DWORD PTR [edi+0x4f811b4c]
  41a19f:	jne    0x41a1ff
  41a1a1:	ds data16 aad 0xd8
  41a1a5:	mov    ebx,0x82f33de5
  41a1aa:	push   eax
  41a1ab:	adc    ebx,DWORD PTR [edi]
  41a1ad:	mov    edx,0x67cf3832
  41a1b2:	inc    esp
  41a1b3:	and    eax,0x7fc65dc1
  41a1b8:	js     0x41a228
  41a1ba:	mov    edx,edx
  41a1bc:	cmp    DWORD PTR [ecx],esi
  41a1be:	gs nop
  41a1c0:	and    edi,0x36
  41a1c3:	test   al,0x49
  41a1c5:	add    dh,BYTE PTR [edx+edx*4]
  41a1c8:	sub    DWORD PTR [ecx-0x3aeee7d3],ecx
  41a1ce:	jp     0x41a1e2
  41a1d0:	mov    al,0xc9
  41a1d2:	fnstsw WORD PTR [edi-0x71]
  41a1d5:	mov    ebx,0xae1f5583
  41a1da:	test   DWORD PTR [ebp-0x9dd821f],edx
  41a1e0:	fs stos DWORD PTR es:[edi],eax
  41a1e2:	(bad)  
  41a1e3:	mov    eax,0xc3d10e95
  41a1e8:	jo     0x41a23d
  41a1ea:	nop
  41a1eb:	mov    ecx,0x67378cbc
  41a1f0:	dec    ebp
  41a1f1:	out    0x7,eax
  41a1f3:	shr    DWORD PTR [ecx],0x64
  41a1f6:	jne    0x41a1f9
  41a1f8:	xor    al,BYTE PTR [esi+0x2bfe84a5]
  41a1fe:	sar    BYTE PTR [ecx+0x4c6b14e8],0x4a
  41a205:	out    0xc4,eax
  41a207:	loopne 0x41a1b5
  41a209:	add    esp,DWORD PTR [ebp-0x44]
  41a20c:	iret   
  41a20d:	sbb    bh,BYTE PTR [edx]
  41a20f:	mov    ah,0xf1
  41a211:	cmp    DWORD PTR [edi-0x40a88ef4],ecx
  41a217:	fcom   DWORD PTR [edi]
  41a219:	outs   dx,BYTE PTR ds:[esi]
  41a21a:	lock inc ebp
  41a21c:	sbb    ebp,DWORD PTR [edx+eax*8+0x450d41fb]
  41a223:	dec    esp
  41a224:	shr    BYTE PTR [eax+0x7],1
  41a227:	rcr    DWORD PTR [ecx-0x10],cl
  41a22a:	mov    ah,0x17
  41a22c:	fwait
  41a22d:	cmp    BYTE PTR [ebx+0x8],dl
  41a230:	jmp    0x8d328839
  41a235:	in     eax,dx
  41a236:	sbb    ebx,DWORD PTR [ecx]
  41a238:	pop    ds
  41a239:	sub    eax,DWORD PTR [ebx+eax*2-0x66632512]
  41a240:	repnz mov BYTE PTR [ecx-0x5e],ah
  41a244:	add    ebx,edi
  41a246:	jo     0x41a1e9
  41a248:	cmp    DWORD PTR [edx],0xffffffcf
  41a24b:	mov    esi,0xf9e31f50
  41a250:	sbb    ebx,DWORD PTR [ecx-0x615492cf]
  41a256:	call   0xdfac:0xfd4bf79
  41a25d:	fs stos DWORD PTR es:[edi],eax
  41a25f:	and    ch,BYTE PTR [esi-0x30]
  41a262:	sbb    BYTE PTR [esi],al
  41a264:	loope  0x41a242
  41a266:	dec    esp
  41a267:	pop    eax
  41a268:	repnz shr ch,1
  41a26b:	dec    ebx
  41a26c:	sti    
  41a26d:	jge    0x41a24f
  41a26f:	sub    BYTE PTR [eax+edi*4+0x288d9436],ah
  41a276:	sbb    BYTE PTR [eax+eax*8],0x60
  41a27a:	mov    bh,0x1a
  41a27c:	out    0xcb,al
  41a27e:	pop    ds
  41a27f:	fld    QWORD PTR [edi-0x34ae20e]
  41a285:	mov    al,0xec
  41a287:	jmp    DWORD PTR [ecx+edx*8-0x1e]
  41a28b:	ds std 
  41a28d:	div    BYTE PTR [eax+0x57ef771f]
  41a293:	nop
  41a294:	jns    0x41a21d
  41a296:	sub    eax,0x9a6f2dca
  41a29b:	rol    DWORD PTR [edx-0x7bf6641a],cl
  41a2a1:	jno    0x41a2b1
  41a2a3:	in     al,0xec
  41a2a5:	adc    dh,0xe7
  41a2a8:	pop    edx
  41a2a9:	push   esp
  41a2aa:	push   0xfffffff5
  41a2ac:	sahf   
  41a2ad:	dec    ecx
  41a2ae:	std    
  41a2af:	mov    al,0x20
  41a2b1:	imul   ebx,DWORD PTR [ecx],0x4f2a469b
  41a2b7:	pop    ebp
  41a2b8:	sub    BYTE PTR [edi+0x73],al
  41a2bb:	sub    BYTE PTR [ecx+ebp*1-0x5fd03666],ah
  41a2c2:	add    edx,DWORD PTR [ebp-0x33fc4598]
  41a2c8:	outs   dx,DWORD PTR ds:[esi]
  41a2c9:	add    edi,edx
  41a2cb:	sbb    dh,BYTE PTR [ebx+0x77f01230]
  41a2d1:	fadd   st,st(2)
  41a2d3:	fisttp DWORD PTR [ecx]
  41a2d5:	out    dx,eax
  41a2d6:	push   ds
  41a2d7:	add    esp,DWORD PTR [edx+esi*4]
  41a2da:	xor    al,0x48
  41a2dc:	jb     0x41a2d1
  41a2de:	xchg   edi,eax
  41a2df:	test   BYTE PTR [eax-0x4e79446d],cl
  41a2e5:	pop    esi
  41a2e6:	mov    ecx,0x7182939f
  41a2eb:	add    BYTE PTR [eax],0x79
  41a2ee:	mov    BYTE PTR [esi-0xe1ad9a7],dh
  41a2f4:	or     cl,al
  41a2f6:	push   edx
  41a2f7:	or     bh,BYTE PTR [eax]
  41a2f9:	push   edx
  41a2fa:	ja     0x41a2a9
  41a2fc:	or     BYTE PTR [edi+0x369ae8b6],ah
  41a302:	sbb    ah,dh
  41a304:	jb     0x41a2ba
  41a306:	sbb    bh,bl
  41a308:	stos   BYTE PTR es:[edi],al
  41a309:	outs   dx,DWORD PTR ds:[esi]
  41a30a:	mov    al,ds:0x37db7e40
  41a30f:	push   ss
  41a310:	mov    al,BYTE PTR [edi+0x847ffc8]
  41a316:	or     BYTE PTR ds:[ebx-0x6564f403],0x8e
  41a31e:	mov    ds:0x948bab3e,al
  41a323:	sti    
  41a324:	or     dl,0xa9
  41a327:	adc    eax,0xac89409d
  41a32c:	push   cs
  41a32d:	mov    bh,0x9e
  41a32f:	rcr    BYTE PTR ds:0x19965df0,1
  41a335:	adc    BYTE PTR [edi+0x5a],bh
  41a338:	or     BYTE PTR [ecx+0x3dd4891b],bl
  41a33e:	dec    esp
  41a33f:	inc    ebp
  41a340:	dec    ebp
  41a341:	cli    
  41a342:	sub    ch,bh
  41a344:	and    BYTE PTR [edi+0x7a],0x7a
  41a348:	sub    esi,DWORD PTR ds:0x3b893aa4
  41a34e:	pop    ds
  41a34f:	dec    ebp
  41a350:	sub    BYTE PTR [esi-0x17],0x50
  41a354:	push   ebp
  41a355:	repnz cmp DWORD PTR [eax+0x6fa9d1e1],esi
  41a35c:	push   ss
  41a35d:	cs imul ecx,eax,0xbf829c83
  41a364:	mov    DWORD PTR [ecx+0x4a797d0f],ecx
  41a36a:	dec    edi
  41a36b:	rcl    BYTE PTR [eax-0x705f4daf],0xc8
  41a372:	iret   
  41a373:	call   0xe9e09a98
  41a378:	pop    esi
  41a379:	cmp    eax,0x40ef5d96
  41a37e:	xchg   edx,eax
  41a37f:	call   0x3d4a3858
  41a384:	push   edi
  41a385:	(bad)  
  41a386:	loope  0x41a31c
  41a388:	lock leave 
  41a38a:	cmp    BYTE PTR [eax-0x38bf632b],al
  41a390:	fwait
  41a391:	sub    DWORD PTR [ebp+0x79],0xd8fa0f25
  41a398:	es adc eax,0x1f33a4e1
  41a39e:	add    DWORD PTR ds:0xd31b8622,ebx
  41a3a4:	mov    al,BYTE PTR [ebx+0x73]
  41a3a7:	add    ebx,edx
  41a3a9:	adc    BYTE PTR [esi+eiz*8+0x895d8f6],bl
  41a3b0:	int3   
  41a3b1:	xchg   BYTE PTR [ebp-0x459b0a58],al
  41a3b7:	(bad)  
  41a3b8:	mov    ch,0x45
  41a3ba:	cwde   
  41a3bb:	inc    esi
  41a3bc:	or     DWORD PTR [ecx+0x5f],0x45
  41a3c0:	pop    ebx
  41a3c1:	xchg   esp,eax
  41a3c2:	je     0x41a40c
  41a3c4:	xchg   ebp,eax
  41a3c5:	enter  0xac1b,0x42
  41a3c9:	pushf  
  41a3ca:	repnz fistp WORD PTR [edi+0x52]
  41a3ce:	retf   0x325
  41a3d1:	sbb    BYTE PTR [esp+eax*1-0x25],bh
  41a3d5:	frstor [ebx-0x4eafed16]
  41a3db:	daa    
  41a3dc:	or     dh,BYTE PTR ds:0x7dce0f2e
  41a3e2:	and    eax,0xd94f0477
  41a3e7:	neg    DWORD PTR [eax+0x64]
  41a3ea:	or     DWORD PTR [esi-0x223a7919],esi
  41a3f0:	mov    esi,0xd649143a
  41a3f5:	mov    eax,0x6fb983a
  41a3fa:	fimul  WORD PTR [edi]
  41a3fc:	jne    0x41a462
  41a3fe:	mov    esi,0x3ff3d8d5
  41a403:	sbb    DWORD PTR [edi],ecx
  41a405:	dec    eax
  41a406:	dec    esi
  41a407:	or     al,0x92
  41a409:	jmp    0x41a464
  41a40b:	out    0x84,al
  41a40d:	inc    ecx
  41a40e:	inc    esp
  41a40f:	jp     0x41a454
  41a411:	push   ebp
  41a412:	xor    al,0x47
  41a414:	mov    al,0x78
  41a416:	cmc    
  41a417:	and    DWORD PTR [esi],esp
  41a419:	jl     0x41a452
  41a41b:	ficomp DWORD PTR [edi+0x3]
  41a41e:	cs das 
  41a420:	nop
  41a421:	pusha  
  41a422:	add    eax,0xc22d4870
  41a427:	push   ss
  41a428:	push   edx
  41a429:	mov    ecx,0x49f9a05c
  41a42e:	fsub   QWORD PTR [edx+0x5d]
  41a431:	and    edx,DWORD PTR [esi]
  41a433:	xor    edx,eax
  41a435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a436:	mov    esi,0xc2e14c
  41a43b:	iret   
  41a43c:	gs dec ebp
  41a43e:	mov    cl,0x8f
  41a440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a441:	pop    esi
  41a442:	retf   
  41a443:	xchg   edi,eax
  41a444:	jge    0x41a3e5
  41a446:	(bad)  
  41a447:	mov    esp,0xcf21f60c
  41a44c:	adc    BYTE PTR [edi],ah
  41a44e:	pusha  
  41a44f:	xor    eax,0x8985a873
  41a454:	xchg   esp,eax
  41a455:	adc    al,0x14
  41a457:	push   ecx
  41a458:	outs   dx,DWORD PTR ds:[esi]
  41a459:	pop    DWORD PTR [eax]
  41a45b:	jns    0x41a4be
  41a45d:	neg    BYTE PTR [ebp+eax*8+0x7]
  41a461:	test   eax,0xadc18a3d
  41a466:	jae    0x41a4b9
  41a468:	js     0x41a3f9
  41a46a:	rcl    BYTE PTR [ecx],1
  41a46c:	adc    ch,bl
  41a46e:	cmp    ebp,DWORD PTR [edx+0x7fb5320d]
  41a474:	leave  
  41a475:	cmc    
  41a476:	mov    dl,0xac
  41a478:	dec    ebp
  41a479:	dec    ecx
  41a47a:	inc    ebx
  41a47b:	sbb    DWORD PTR [eax],ebx
  41a47d:	sub    eax,0x35357d16
  41a482:	gs aas 
  41a484:	aam    0x8b
  41a486:	and    DWORD PTR [eax-0x7a2ff400],eax
  41a48c:	mov    eax,0x20071bc6
  41a491:	xor    esi,DWORD PTR [ebx]
  41a493:	pop    ds
  41a494:	mov    bh,0xe1
  41a496:	std    
  41a497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a498:	and    BYTE PTR [edx+esi*4],0x79
  41a49c:	rol    DWORD PTR [ebx+0x3f1093ee],cl
  41a4a2:	jno    0x41a498
  41a4a4:	clc    
  41a4a5:	pop    esp
  41a4a6:	cmp    al,0xc8
  41a4a8:	xchg   esi,eax
  41a4a9:	mov    bh,BYTE PTR [ebp+0x14]
  41a4ac:	lahf   
  41a4ad:	inc    eax
  41a4ae:	xor    DWORD PTR [ebx-0x5bdb229a],eax
  41a4b4:	lock mov DWORD PTR [ecx+0xb4acb17],ecx
  41a4bb:	jbe    0x41a4d2
  41a4bd:	xchg   esi,eax
  41a4be:	fist   WORD PTR [ecx]
  41a4c0:	inc    esp
  41a4c1:	jge    0x41a4c4
  41a4c3:	mov    DWORD PTR [edi],ebp
  41a4c5:	ds ja  0x41a4f0
  41a4c8:	outs   dx,BYTE PTR ds:[esi]
  41a4c9:	and    eax,DWORD PTR [edi]
  41a4cb:	xchg   esp,eax
  41a4cc:	mov    ecx,ebx
  41a4ce:	mov    al,0x2c
  41a4d0:	mov    edx,?
  41a4d2:	jno    0x41a4c7
  41a4d4:	adc    al,0x77
  41a4d6:	fld    QWORD PTR [ebp-0x31]
  41a4d9:	jns    0x41a47c
  41a4db:	xchg   edi,eax
  41a4dc:	xor    ah,cl
  41a4de:	mov    eax,0x2ff6c707
  41a4e3:	mov    al,ds:0xa7058110
  41a4e8:	or     WORD PTR [edx],0xff82
  41a4ec:	pop    ss
  41a4ed:	mov    esp,0xf721bf75
  41a4f2:	sub    esi,DWORD PTR [edx]
  41a4f4:	pop    ecx
  41a4f5:	shr    DWORD PTR [eax-0xee72273],0x73
  41a4fc:	ficom  WORD PTR [eax]
  41a4fe:	mov    bl,0xb
  41a500:	(bad)
  41a504:	adc    BYTE PTR [edi-0x530fe78],bl
  41a50a:	fucom  st(0)
  41a50c:	aad    0x9d
  41a50e:	pop    bp
  41a510:	outs   dx,DWORD PTR ds:[esi]
  41a511:	sahf   
  41a512:	push   esi
  41a513:	rol    DWORD PTR [eax+0x67],1
  41a516:	sub    al,0x28
  41a518:	aad    0x99
  41a51a:	fisub  WORD PTR [esi+0x6108425f]
  41a520:	fst    st(6)
  41a522:	mov    bl,0xe7
  41a524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a525:	cmc    
  41a526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a527:	mov    ch,0xab
  41a529:	fwait
  41a52a:	loope  0x41a543
  41a52c:	sar    DWORD PTR [edx+0x5],0x57
  41a530:	pop    ebp
  41a531:	xchg   ebp,eax
  41a532:	jmp    0x7937941e
  41a537:	popa   
  41a538:	arpl   WORD PTR [edx+0x14],ax
  41a53b:	out    dx,al
  41a53c:	pop    ss
  41a53d:	arpl   WORD PTR [eax],dx
  41a53f:	int3   
  41a540:	loopne 0x41a557
  41a542:	pop    esp
  41a543:	inc    ecx
  41a544:	clc    
  41a545:	pop    esp
  41a546:	imul   esi,DWORD PTR ds:0xcab0eacc,0x5a
  41a54d:	mov    eax,0xce80c881
  41a552:	mov    ss,WORD PTR [esi-0xc]
  41a555:	jg     0x41a5b1
  41a557:	jae    0x41a4f1
  41a559:	and    eax,0xc26d9010
  41a55e:	dec    edx
  41a55f:	add    BYTE PTR [eax],dl
  41a561:	xchg   edx,eax
  41a562:	jne    0x41a507
  41a564:	shl    DWORD PTR [edi-0x73],1
  41a567:	scas   al,BYTE PTR es:[edi]
  41a568:	packuswb mm6,QWORD PTR [edx-0x5160a904]
  41a56f:	jp     0x41a569
  41a571:	fimul  WORD PTR [ecx+0x7d]
  41a574:	push   ds
  41a575:	xchg   BYTE PTR [ebp+0x52],ah
  41a578:	into   
  41a579:	mov    ch,0x86
  41a57b:	or     esp,DWORD PTR [esi]
  41a57d:	xchg   edx,eax
  41a57e:	mov    DWORD PTR [ecx+eax*2],0xef77c534
  41a585:	outs   dx,BYTE PTR ds:[esi]
  41a586:	ss inc edx
  41a588:	pop    ds
  41a589:	push   ebp
  41a58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a58b:	xor    dl,dl
  41a58d:	mov    ch,0xd6
  41a58f:	loope  0x41a603
  41a591:	cdq    
  41a592:	xor    cl,ch
  41a594:	call   0xb5376efc
  41a599:	sub    bl,cl
  41a59b:	ins    DWORD PTR es:[edi],dx
  41a59c:	sbb    eax,DWORD PTR [esi]
  41a59e:	mov    dl,0x9c
  41a5a0:	and    al,0x5f
  41a5a2:	in     al,dx
  41a5a3:	leave  
  41a5a4:	xchg   edi,eax
  41a5a5:	jecxz  0x41a5a2
  41a5a7:	xor    eax,DWORD PTR ds:0x656a0a28
  41a5ad:	pop    ss
  41a5ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5af:	adc    BYTE PTR [edx-0x46],bl
  41a5b2:	cmp    ebp,DWORD PTR [esi+ebx*1-0x588c27a9]
  41a5b9:	add    esp,edi
  41a5bb:	mov    WORD PTR [ebx-0x100e3943],cs
  41a5c1:	ret    0x8c3a
  41a5c4:	loopne 0x41a59b
  41a5c6:	xchg   ebx,eax
  41a5c7:	rol    dh,0x7c
  41a5ca:	sub    DWORD PTR [esi],edx
  41a5cc:	and    dh,cl
  41a5ce:	lea    eax,[edi]
  41a5d0:	fldcw  WORD PTR [edx-0x616a754]
  41a5d6:	mov    ecx,0xaa2ac5c
  41a5db:	ret    0xf41c
  41a5de:	mov    al,0x26
  41a5e0:	lahf   
  41a5e1:	pop    ebp
  41a5e2:	xor    ecx,0x1be95461
  41a5e8:	pushf  
  41a5e9:	gs push es
  41a5eb:	xor    eax,0x9f36ebdb
  41a5f0:	fsubr  DWORD PTR [esi-0x1179d367]
  41a5f6:	retf   
  41a5f7:	cmp    eax,0xb0296b5
  41a5fc:	je     0x41a5b5
  41a5fe:	add    ebx,DWORD PTR [esi+ecx*8-0xbe3b7ce]
  41a605:	or     al,0x49
  41a607:	mov    esi,0xf4bca748
  41a60c:	xchg   esi,eax
  41a60d:	lahf   
  41a60e:	inc    ebx
  41a60f:	imul   ecx,DWORD PTR [ecx+ebx*4+0x62],0xffffff94
  41a614:	push   ds
  41a615:	out    dx,al
  41a616:	int    0xcc
  41a618:	add    ecx,esi
  41a61a:	mov    al,0x51
  41a61c:	or     DWORD PTR [esi-0x496bcd49],edi
  41a622:	inc    esp
  41a623:	mov    eax,ds:0x893d279f
  41a628:	push   ecx
  41a629:	dec    esi
  41a62a:	or     eax,0xf0b5650
  41a62f:	mov    eax,ds:0x9792d9af
  41a634:	pop    ebx
  41a635:	sub    DWORD PTR es:[ebx-0x3458c85b],esp
  41a63c:	leave  
  41a63d:	and    dl,BYTE PTR [eax+0x65]
  41a640:	ret    
  41a641:	inc    edx
  41a642:	out    0xa3,al
  41a644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a645:	rol    DWORD PTR [edx-0x65ccb2f8],1
  41a64b:	ds std 
  41a64d:	or     ecx,DWORD PTR [esi-0x80]
  41a650:	ss and eax,0xe9ee17db
  41a656:	dec    ecx
  41a657:	jno    0x41a619
  41a659:	sub    DWORD PTR [ecx+0x51],esp
  41a65c:	push   0xe71e4e14
  41a661:	call   0xef7c:0x4347088e
  41a668:	call   0xaf78:0x7f847855
  41a66f:	daa    
  41a670:	mov    al,ds:0xa3097129
  41a675:	mov    al,ds:0x210273e8
  41a67a:	fild   QWORD PTR [eax]
  41a67c:	mov    esp,0x45723185
  41a681:	adc    al,0xa6
  41a683:	add    eax,0xd143a288
  41a688:	imul   edi,DWORD PTR [edi+0x9],0x4f
  41a68c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a68d:	add    eax,DWORD PTR [eax]
  41a68f:	mov    dl,0x88
  41a691:	mov    ah,0x53
  41a693:	jae    0x41a634
  41a695:	ja     0x41a6db
  41a697:	sbb    BYTE PTR [edx-0x6e2a93ef],bl
  41a69d:	aam    0x78
  41a69f:	mov    dl,bl
  41a6a1:	in     eax,dx
  41a6a2:	jae    0x41a6bc
  41a6a4:	jnp    0x41a71b
  41a6a6:	daa    
  41a6a7:	ds push 0x27af4f72
  41a6ad:	(bad)  
  41a6ae:	lods   eax,DWORD PTR ds:[esi]
  41a6af:	mov    edi,0x81a07b75
  41a6b4:	jne    0x41a6d7
  41a6b6:	fisubr DWORD PTR [eax-0x52]
  41a6b9:	and    eax,DWORD PTR [eax+0x20]
  41a6bc:	mov    ecx,0x9e7a96aa
  41a6c1:	das    
  41a6c2:	xor    BYTE PTR [ebx-0x3e],dh
  41a6c5:	push   ebp
  41a6c6:	js     0x41a698
  41a6c8:	out    0xf8,al
  41a6ca:	test   eax,0xc2fcad46
  41a6cf:	out    dx,al
  41a6d0:	(bad)  
  41a6d1:	retf   
  41a6d2:	std    
  41a6d3:	test   DWORD PTR [ebx-0x7e],esi
  41a6d6:	or     ebx,DWORD PTR [ecx]
  41a6d8:	pop    ss
  41a6d9:	(bad)  [edx+eiz*8-0x1dd8d469]
  41a6e0:	stc    
  41a6e1:	fnstcw WORD PTR [eax-0x6d0f1780]
  41a6e7:	cld    
  41a6e8:	imul   edx,DWORD PTR [edi-0x1e],0xfffffff0
  41a6ec:	cmc    
  41a6ed:	inc    esi
  41a6ee:	fnstcw WORD PTR [esi-0x1]
  41a6f1:	ret    0x4c9a
  41a6f4:	loopne 0x41a760
  41a6f6:	xchg   ecx,eax
  41a6f7:	mov    bh,0x4f
  41a6f9:	sahf   
  41a6fa:	inc    esp
  41a6fb:	mov    ebx,0x3133fc9
  41a700:	mov    cl,0xee
  41a702:	jae    0x41a6df
  41a704:	nop
  41a705:	dec    esi
  41a706:	std    
  41a707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a708:	jno    0x41a745
  41a70a:	pop    edx
  41a70b:	fsin   
  41a70d:	inc    ebx
  41a70e:	xchg   esp,eax
  41a70f:	jmp    0x1515:0x5fd44f77
  41a716:	pop    edx
  41a717:	or     eax,0x80ffbf67
  41a71c:	ret    0xb419
  41a71f:	push   ds
  41a720:	je     0x41a6d2
  41a722:	(bad)  
  41a723:	sar    esi,1
  41a725:	cmp    eax,0xf188e6b
  41a72a:	pushf  
  41a72b:	pop    es
  41a72c:	outs   dx,BYTE PTR ds:[esi]
  41a72d:	icebp  
  41a72e:	xchg   ebp,eax
  41a72f:	retf   
  41a730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a731:	jmp    0xaf54:0x59865265
  41a738:	loop   0x41a6ed
  41a73a:	and    DWORD PTR [ebx],eax
  41a73c:	daa    
  41a73d:	dec    esi
  41a73e:	popa   
  41a73f:	stc    
  41a740:	inc    eax
  41a741:	aas    
  41a742:	jge    0x41a758
  41a744:	retf   0x15c
  41a747:	and    al,BYTE PTR [esi]
  41a749:	or     eax,0x283e347f
  41a74e:	pop    esp
  41a74f:	lock bound edi,QWORD PTR [ecx-0x61]
  41a753:	addr16 inc esp
  41a755:	add    al,0xc9
  41a757:	into   
  41a758:	push   0x70417032
  41a75d:	xor    ebp,DWORD PTR [ebx]
  41a75f:	inc    esi
  41a760:	scas   al,BYTE PTR es:[edi]
  41a761:	jg     0x41a7cf
  41a763:	mul    BYTE PTR [ebp+0x7]
  41a766:	xchg   BYTE PTR [edx],al
  41a768:	pop    eax
  41a769:	jae    0x41a771
  41a76b:	pushf  
  41a76c:	pop    ds
  41a76d:	enter  0xce3d,0x47
  41a771:	ret    
  41a772:	(bad)  
  41a773:	aam    0xfe
  41a775:	inc    edi
  41a776:	sbb    ebp,DWORD PTR [ecx]
  41a778:	sbb    DWORD PTR [edx-0x298bb9e8],esp
  41a77e:	xchg   edi,eax
  41a77f:	pop    edx
  41a780:	xchg   ch,dh
  41a782:	shl    BYTE PTR [ecx],1
  41a784:	in     al,dx
  41a785:	sub    al,0xe3
  41a787:	ds test al,0x5b
  41a78a:	cmp    eax,0x8c946f23
  41a78f:	hlt    
  41a790:	xor    eax,0x887b6248
  41a795:	xor    BYTE PTR [ebx],0x25
  41a798:	pop    ebp
  41a799:	fwait
  41a79a:	pop    ebp
  41a79b:	dec    ebx
  41a79c:	daa    
  41a79d:	sbb    eax,0xd1b81b85
  41a7a2:	mov    eax,0x988cb1f6
  41a7a7:	fstp   DWORD PTR [esi+0x1a1ee50a]
  41a7ad:	mov    esp,0x862395e
  41a7b2:	test   al,0xef
  41a7b4:	mov    ebx,0x6ea1da4a
  41a7b9:	push   esp
  41a7ba:	fisubr DWORD PTR [esp+ebp*1-0x63163b4e]
  41a7c1:	imul   ecx,DWORD PTR [ecx+0x55e143bd],0xfffffffb
  41a7c8:	popf   
  41a7c9:	daa    
  41a7ca:	sub    DWORD PTR [eax-0x2a],0x277f0155
  41a7d1:	lock ret 
  41a7d3:	mov    esi,0x726e2898
  41a7d8:	dec    ebp
  41a7d9:	imul   eax,esp,0xc76cc559
  41a7df:	push   edx
  41a7e0:	or     DWORD PTR [eax],ecx
  41a7e2:	push   ds
  41a7e3:	cmp    DWORD PTR [edx],edi
  41a7e5:	jl     0x41a7e5
  41a7e7:	xchg   DWORD PTR [eax+0x423d211c],edi
  41a7ed:	add    dl,BYTE PTR [eax-0x5c]
  41a7f0:	icebp  
  41a7f1:	imul   ebp,DWORD PTR [edi+0x1db9ab02],0x10762c69
  41a7fb:	je     0x41a83f
  41a7fd:	ficom  DWORD PTR [eax-0x5d]
  41a800:	cmc    
  41a801:	push   ecx
  41a802:	cwde   
  41a803:	jg     0x41a7f8
  41a805:	in     al,0x46
  41a807:	push   ecx
  41a809:	lds    edx,FWORD PTR [ecx+edx*2-0xece2bd2]
  41a810:	jbe    0x41a793
  41a812:	scas   eax,DWORD PTR es:[edi]
  41a813:	inc    ecx
  41a814:	push   es
  41a815:	xchg   ebx,eax
  41a816:	inc    ebx
  41a817:	xchg   ebx,eax
  41a818:	push   eax
  41a819:	inc    ebx
  41a81a:	jge    0x41a881
  41a81c:	xchg   edx,eax
  41a81d:	jle    0x41a882
  41a81f:	xchg   ecx,eax
  41a820:	enter  0x9aee,0xe
  41a824:	(bad)  ds:0x1adbfe3e
  41a82a:	push   es
  41a82b:	fidivr DWORD PTR [ecx]
  41a82d:	and    eax,0x16f9862c
  41a832:	scas   eax,DWORD PTR es:[edi]
  41a833:	cli    
  41a834:	ficom  DWORD PTR [esi]
  41a836:	mov    ebp,DWORD PTR [esi+edx*2-0x7d71cd4c]
  41a83d:	push   edx
  41a83e:	sbb    BYTE PTR [esi],dl
  41a840:	mov    edx,0xede6f54b
  41a845:	cld    
  41a846:	or     DWORD PTR [ebx-0xa0d0f3e],eax
  41a84c:	cld    
  41a84d:	fcomp  QWORD PTR [edx+ebx*1-0x5a]
  41a851:	mov    ds:0x8fbe9b25,eax
  41a856:	mov    ?,WORD PTR [edi-0x50]
  41a859:	mov    edi,0x2e59b1c3
  41a85e:	js     0x41a829
  41a860:	out    dx,eax
  41a861:	leave  
  41a862:	sub    al,0xb
  41a864:	adc    DWORD PTR [eax+0x13a4a1d5],ecx
  41a86a:	pop    es
  41a86b:	jo     0x41a8d2
  41a86d:	sbb    al,0xb8
  41a86f:	jo     0x41a86a
  41a871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a872:	jmp    0x41a875
  41a874:	in     eax,dx
  41a875:	test   bh,0x5a
  41a878:	mov    al,0xec
  41a87a:	and    eax,0xf9d440ba
  41a87f:	aam    0xc0
  41a881:	repnz mov ebp,0x6e18e01
  41a887:	dec    ebx
  41a888:	outs   dx,DWORD PTR ds:[esi]
  41a889:	jmp    0x41a0:0x29a47ba4
  41a890:	adc    BYTE PTR ds:0x6196c105,ah
  41a896:	aaa    
  41a897:	xchg   ecx,eax
  41a898:	fsubrp st(3),st
  41a89a:	retf   0xf0b9
  41a89d:	int3   
  41a89e:	sar    DWORD PTR [ecx],cl
  41a8a0:	(bad)  
  41a8a2:	inc    eax
  41a8a3:	test   DWORD PTR [ecx+0x4be8b3e8],eax
  41a8a9:	mov    edi,0xc21f59d7
  41a8ae:	and    al,0xb8
  41a8b0:	mov    ecx,0x7ede0a49
  41a8b5:	jae    0x41a904
  41a8b7:	xchg   edx,eax
  41a8b8:	xor    eax,0x39bfbb7d
  41a8bd:	mov    ds:0x10d435f6,eax
  41a8c2:	and    eax,0xf6d2e2ac
  41a8c7:	jecxz  0x41a8f1
  41a8c9:	shl    BYTE PTR [edi+0x3c477c72],0xbd
  41a8d0:	aad    0x89
  41a8d2:	inc    ebp
  41a8d3:	sub    ch,BYTE PTR [esi]
  41a8d5:	int3   
  41a8d6:	push   eax
  41a8d7:	mov    al,0x81
  41a8d9:	or     dl,al
  41a8db:	dec    eax
  41a8dc:	(bad)  
  41a8dd:	imul   edx,DWORD PTR [edi+0x76],0xffffffa8
  41a8e1:	jle    0x41a86b
  41a8e3:	loope  0x41a8f4
  41a8e5:	je     0x41a959
  41a8e7:	mul    BYTE PTR [ebp-0x1]
  41a8ea:	adc    eax,0x9eb672d0
  41a8ef:	mov    al,ds:0xe80b6d1b
  41a8f4:	mov    ch,0x6a
  41a8f6:	ds in  eax,0x4e
  41a8f9:	pop    ds
  41a8fa:	stos   BYTE PTR es:[edi],al
  41a8fb:	mov    BYTE PTR [eax+0x13],ch
  41a8fe:	mov    al,0x3d
  41a900:	xor    BYTE PTR [ebx-0x70],cl
  41a903:	loope  0x41a957
  41a905:	(bad)  
  41a907:	mov    ch,0xb4
  41a909:	test   al,0xbd
  41a90b:	into   
  41a90c:	push   esp
  41a90d:	push   esi
  41a90e:	das    
  41a90f:	or     eax,0x6d4b6b98
  41a914:	loope  0x41a95e
  41a916:	inc    ecx
  41a917:	adc    eax,0xf089f4a1
  41a91c:	iret   
  41a91d:	popa   
  41a91e:	fild   DWORD PTR [esi]
  41a920:	mov    ch,0xe4
  41a922:	xchg   ebx,eax
  41a923:	mov    ?,edi
  41a925:	adc    BYTE PTR [ebx+0x19],0x26
  41a929:	sbb    eax,0x9d3b00ff
  41a92e:	(bad)  
  41a92f:	ins    BYTE PTR es:[edi],dx
  41a930:	push   eax
  41a931:	popf   
  41a932:	and    BYTE PTR [ecx+0x11],bh
  41a935:	xchg   ecx,eax
  41a936:	scas   al,BYTE PTR es:[edi]
  41a937:	jmp    0x5c3d09eb
  41a93c:	(bad)  
  41a93d:	cmp    esi,DWORD PTR [ebp+eiz*4+0x36d71292]
  41a944:	push   ss
  41a945:	sbb    DWORD PTR [eax+ebp*8],eax
  41a948:	inc    edi
  41a949:	shr    DWORD PTR [ebx+0x9587571],cl
  41a94f:	cmp    eax,ebp
  41a951:	xchg   esi,eax
  41a952:	nop
  41a953:	xor    DWORD PTR [edx+0x67cc84d8],edx
  41a959:	jbe    0x41a9c7
  41a95b:	nop
  41a95c:	jmp    0x27fd7f77
  41a961:	jl     0x41a978
  41a963:	inc    edx
  41a964:	fcmove st,st(4)
  41a966:	add    eax,0xa40ca0e5
  41a96b:	cmp    DWORD PTR [esp+ebp*2+0x5d83cbb4],0xffffffcd
  41a973:	into   
  41a974:	or     cl,BYTE PTR [edx-0x1895a978]
  41a97a:	cmp    ecx,DWORD PTR [edx-0x9]
  41a97d:	(bad)  
  41a97e:	cld    
  41a97f:	arpl   di,sp
  41a981:	push   ebx
  41a982:	popa   
  41a983:	test   eax,0xc5780f13
  41a988:	pop    ds
  41a989:	clc    
  41a98a:	out    0xa6,eax
  41a98c:	int    0xdc
  41a98e:	sub    eax,0xe0c01d8d
  41a993:	ror    BYTE PTR [ebp+0x37ce8972],0x31
  41a99a:	inc    esp
  41a99b:	icebp  
  41a99c:	or     al,0x21
  41a99e:	fsubr  st(3),st
  41a9a0:	pop    edi
  41a9a1:	and    esi,DWORD PTR fs:[edx]
  41a9a4:	cld    
  41a9a5:	fadd   DWORD PTR [eax-0x1f591b65]
  41a9ab:	nop
  41a9ac:	jecxz  0x41a952
  41a9ae:	xor    eax,0x7f08d83c
  41a9b3:	scas   al,BYTE PTR es:[edi]
  41a9b4:	bound  ebp,QWORD PTR [edx-0xc]
  41a9b7:	call   0x9476:0xf2749712
  41a9be:	pop    ebx
  41a9bf:	or     al,0x77
  41a9c1:	mov    al,0x4d
  41a9c3:	xor    al,0x24
  41a9c5:	test   DWORD PTR [ebx-0xa],0xc52d24ba
  41a9cc:	push   es
  41a9cd:	cmp    al,0x10
  41a9cf:	pop    esp
  41a9d0:	ja     0x41aa18
  41a9d2:	xlat   BYTE PTR ds:[ebx]
  41a9d3:	mov    es,WORD PTR [edx]
  41a9d5:	adc    esp,DWORD PTR [ebx]
  41a9d7:	fisub  DWORD PTR [ebx]
  41a9d9:	mov    es,WORD PTR [ebx]
  41a9db:	nop
  41a9dc:	jmp    0x41aa34
  41a9de:	mov    ah,0x69
  41a9e0:	cdq    
  41a9e1:	mul    DWORD PTR [ecx+0x6a]
  41a9e4:	cmc    
  41a9e5:	psubsb mm3,QWORD PTR [edx-0x5e]
  41a9e9:	imul   edx,ebx,0x866fb3ed
  41a9ef:	arpl   WORD PTR [edi],bx
  41a9f1:	out    dx,al
  41a9f2:	cdq    
  41a9f3:	push   ebx
  41a9f4:	xor    ecx,DWORD PTR [ebp-0x6d1d2a27]
  41a9fa:	or     ch,BYTE PTR [esi]
  41a9fc:	push   esp
  41a9fd:	sbb    al,0x1
  41a9ff:	xchg   ecx,eax
  41aa00:	jnp    0x41a9a2
  41aa02:	leave  
  41aa03:	je     0x41aa37
  41aa05:	mov    eax,0x5ef4019b
  41aa0a:	inc    eax
  41aa0b:	les    esp,FWORD PTR [edx]
  41aa0d:	cmc    
  41aa0e:	jmp    0x41aa83
  41aa10:	shl    BYTE PTR [esi-0x48],cl
  41aa13:	xchg   edx,eax
  41aa14:	scas   al,BYTE PTR es:[edi]
  41aa15:	rcr    BYTE PTR [esp+esi*1+0x50c0db7],cl
  41aa1c:	adc    BYTE PTR [edi],0xea
  41aa1f:	loop   0x41aa20
  41aa21:	retf   0xd834
  41aa24:	(bad)  
  41aa25:	cdq    
  41aa26:	je     0x41aa6f
  41aa28:	pop    edi
  41aa29:	outs   dx,BYTE PTR ds:[esi]
  41aa2a:	xchg   esi,eax
  41aa2b:	cmp    eax,0x2032e44a
  41aa30:	stc    
  41aa31:	xchg   DWORD PTR ds:0xb7c3ba77,ebp
  41aa37:	push   esi
  41aa38:	in     al,0x29
  41aa3a:	add    dh,bh
  41aa3c:	and    cl,BYTE PTR ds:0xe43553c4
  41aa42:	outs   dx,BYTE PTR ds:[esi]
  41aa43:	int3   
  41aa44:	push   edx
  41aa45:	push   edi
  41aa46:	ds inc esp
  41aa48:	mov    ebp,0x7ea77de8
  41aa4d:	lds    ecx,FWORD PTR [ebx]
  41aa4f:	stos   DWORD PTR es:[edi],eax
  41aa50:	sbb    BYTE PTR [edx],al
  41aa52:	fld    QWORD PTR [ecx-0xc]
  41aa55:	rol    bl,1
  41aa57:	cmp    DWORD PTR [ebx+ebx*1+0x30],edi
  41aa5b:	mov    WORD PTR [edi],?
  41aa5d:	add    edx,edx
  41aa5f:	sub    eax,DWORD PTR [ebp+0x35]
  41aa62:	dec    eax
  41aa63:	js     0x41aa59
  41aa65:	adc    DWORD PTR gs:[esi-0x524d97f4],eax
  41aa6c:	gs jle 0x41aa70
  41aa6f:	cli    
  41aa70:	fdivrp st(0),st
  41aa72:	iret   
  41aa73:	out    0xfd,al
  41aa75:	ds pushf 
  41aa77:	inc    ebp
  41aa78:	cmp    DWORD PTR [ebx+ebx*1-0x4d],edi
  41aa7c:	mov    esi,0x55e3db7f
  41aa81:	push   ds
  41aa82:	in     eax,dx
  41aa83:	(bad)  
  41aa84:	mov    eax,0xf1e26ab0
  41aa89:	repnz stc 
  41aa8b:	jl     0x41aafe
  41aa8d:	pop    es
  41aa8e:	shl    edx,1
  41aa90:	and    DWORD PTR [edi+ecx*4],ecx
  41aa93:	inc    edi
  41aa94:	cld    
  41aa95:	gs xchg ecx,eax
  41aa97:	xchg   ebx,eax
  41aa98:	dec    ebp
  41aa99:	adc    DWORD PTR [ecx],edi
  41aa9b:	inc    esi
  41aa9c:	jnp    0x41aa92
  41aa9e:	cs xor ah,0x58
  41aaa2:	push   ecx
  41aaa3:	xor    al,0x3f
  41aaa5:	out    0x47,al
  41aaa7:	push   es
  41aaa8:	pop    es
  41aaa9:	xchg   edx,eax
  41aaaa:	push   0xffffffea
  41aaac:	mov    edi,0xcff79f1d
  41aab1:	out    0x19,al
  41aab3:	cmc    
  41aab4:	pusha  
  41aab5:	fsubrp st(1),st
  41aab7:	pop    esp
  41aab8:	inc    edi
  41aab9:	repz (bad) 
  41aabc:	popf   
  41aabd:	mov    WORD PTR [ebx],cs
  41aabf:	(bad)  [eax-0x70556428]
  41aac5:	(bad)
  41aaca:	jmp    0x41aac3
  41aacc:	mov    ebx,0x9b8169a7
  41aad1:	daa    
  41aad2:	fwait
  41aad3:	push   edx
  41aad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aad5:	adc    DWORD PTR [esi-0x15],ebp
  41aad8:	push   edx
  41aad9:	add    eax,edi
  41aadb:	fwait
  41aadc:	xchg   esi,eax
  41aadd:	inc    edi
  41aade:	cmp    bh,BYTE PTR [ebx+0x7cf643f4]
  41aae4:	retf   
  41aae5:	frstor [eax+0x10]
  41aae8:	not    dl
  41aaea:	lods   eax,DWORD PTR ds:[esi]
  41aaeb:	popa   
  41aaec:	repz call 0x1cdc:0x11e8b39c
  41aaf4:	arpl   WORD PTR [edx+0x3c],ax
  41aaf7:	mov    ah,0x72
  41aaf9:	int    0x94
  41aafb:	sbb    eax,0x42db5f89
  41ab00:	mov    fs,WORD PTR [ebp-0x5ce99f7a]
  41ab06:	ja     0x41aad2
  41ab08:	repz dec edi
  41ab0a:	enter  0x2dc9,0x24
  41ab0e:	rcr    DWORD PTR [ebx-0xd],cl
  41ab11:	and    esp,DWORD PTR [eax]
  41ab13:	(bad)  
  41ab14:	fcom   st(6)
  41ab16:	dec    BYTE PTR [eax-0x4d93f2f]
  41ab1c:	push   esp
  41ab1d:	xor    esi,DWORD PTR ds:0x719e3af0
  41ab23:	ins    DWORD PTR es:[edi],dx
  41ab24:	jnp    0x41ab57
  41ab26:	(bad)  
  41ab27:	cmc    
  41ab28:	inc    esi
  41ab29:	repnz xor al,0x41
  41ab2c:	and    BYTE PTR [edi+0x41],cl
  41ab2f:	shr    DWORD PTR ds:0x74297064,0xb7
  41ab36:	dec    esp
  41ab37:	dec    edx
  41ab38:	aas    
  41ab39:	mov    ds:0x6edf065b,al
  41ab3e:	pop    esp
  41ab3f:	dec    esi
  41ab40:	in     eax,dx
  41ab41:	in     eax,0xcf
  41ab43:	leave  
  41ab44:	dec    esi
  41ab45:	fwait
  41ab46:	in     al,dx
  41ab47:	or     eax,0xbda9628c
  41ab4c:	outs   dx,DWORD PTR ds:[esi]
  41ab4d:	mov    ch,0xc9
  41ab4f:	cmc    
  41ab50:	mov    bl,0x2f
  41ab52:	pop    ds
  41ab53:	test   BYTE PTR [eax+0x4debdf78],dl
  41ab59:	mov    eax,ds:0x95c1e75d
  41ab5e:	mov    bh,BYTE PTR [ebx]
  41ab60:	adc    ah,BYTE PTR [eax+0x6abf0709]
  41ab66:	stc    
  41ab67:	jo     0x41abd8
  41ab69:	sbb    eax,0x25ceb7f0
  41ab6e:	xor    BYTE PTR [eax+0x37f3b430],bh
  41ab74:	xchg   edi,eax
  41ab75:	dec    esp
  41ab76:	add    ch,al
  41ab78:	add    esp,esp
  41ab7a:	xor    bh,BYTE PTR [eax]
  41ab7c:	pop    esi
  41ab7d:	dec    edx
  41ab7e:	fidiv  DWORD PTR [edi+0x2]
  41ab81:	in     eax,0x72
  41ab83:	out    dx,eax
  41ab84:	pop    esp
  41ab85:	add    ecx,DWORD PTR [ebx]
  41ab87:	pop    ss
  41ab88:	jae    0x41abc5
  41ab8a:	cdq    
  41ab8b:	cmp    BYTE PTR [ecx],bl
  41ab8d:	pop    eax
  41ab8e:	mov    ah,0xa
  41ab90:	js     0x41ac00
  41ab92:	cmp    BYTE PTR [eax],ah
  41ab94:	inc    ecx
  41ab95:	jg     0x41aba6
  41ab97:	or     dh,0x51
  41ab9a:	push   ds
  41ab9b:	retw   
  41ab9d:	xchg   edx,eax
  41ab9e:	jns    0x41ab94
  41aba0:	cli    
  41aba1:	inc    esp
  41aba2:	jo     0x41ab76
  41aba4:	dec    eax
  41aba5:	cmp    edx,DWORD PTR [ebp-0x1]
  41aba8:	fisttp WORD PTR [esi+0x11]
  41abab:	sbb    al,0x69
  41abad:	push   ebx
  41abae:	test   al,0x80
  41abb0:	push   ecx
  41abb1:	rol    DWORD PTR [ebx-0x5b2bfb8f],cl
  41abb7:	rsm    
  41abb9:	cmp    BYTE PTR [edi],dh
  41abbb:	or     al,0xef
  41abbd:	sti    
  41abbe:	outs   dx,DWORD PTR ds:[esi]
  41abbf:	or     DWORD PTR [ecx-0x2f],edi
  41abc2:	je     0x41ac1c
  41abc4:	stos   BYTE PTR es:[edi],al
  41abc5:	mov    esp,0xc3c769ad
  41abca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abcb:	pop    eax
  41abcc:	cmp    DWORD PTR [ebx+0x2b93b30f],ebx
  41abd2:	test   eax,0x34f6642c
  41abd7:	in     al,dx
  41abd8:	out    0x39,al
  41abda:	pop    ss
  41abdb:	inc    ebp
  41abdc:	loop   0x41ab5e
  41abde:	mov    ebp,ebp
  41abe0:	test   DWORD PTR [ecx+ebp*1-0x324e60fa],edx
  41abe7:	mov    dl,ch
  41abe9:	bound  eax,QWORD PTR [esi+0x34a07811]
  41abef:	(bad)  
  41abf0:	mov    ecx,0x51770675
  41abf5:	mov    ecx,0x390b711d
  41abfa:	popf   
  41abfb:	aad    0x18
  41abfd:	out    0x22,eax
  41abff:	mov    dl,0x48
  41ac01:	cli    
  41ac02:	jmp    0x3f39:0x9f4dad81
  41ac09:	pop    edi
  41ac0a:	dec    ebp
  41ac0b:	ins    BYTE PTR es:[edi],dx
  41ac0c:	(bad)  
  41ac0e:	jb     0x41abc0
  41ac10:	jecxz  0x41abfb
  41ac12:	es int 0xc6
  41ac15:	and    ebx,DWORD PTR [ebx]
  41ac17:	or     BYTE PTR [eax-0x233e7e75],ah
  41ac1d:	cmp    al,al
  41ac1f:	xor    al,BYTE PTR [ebp+0x3918cbc3]
  41ac25:	(bad)  
  41ac26:	int    0x99
  41ac28:	jae    0x41ac1f
  41ac2a:	(bad)  
  41ac2b:	js     0x41ac7f
  41ac2d:	xor    ch,BYTE PTR [esi]
  41ac2f:	inc    edx
  41ac30:	cmp    DWORD PTR [esi-0x7434fde4],esi
  41ac36:	pop    ecx
  41ac37:	add    BYTE PTR [ecx-0x6a],bl
  41ac3a:	mov    ch,0xb4
  41ac3c:	call   0x6948:0x6f263296
  41ac43:	pop    ds
  41ac44:	push   esi
  41ac45:	push   eax
  41ac46:	mov    ds:0x657d9c06,al
  41ac4b:	cmp    eax,0xaf550cd
  41ac50:	xor    ch,BYTE PTR [ebp-0x77f9f06b]
  41ac56:	out    dx,al
  41ac57:	add    al,0xcd
  41ac59:	ins    DWORD PTR es:[edi],dx
  41ac5a:	(bad)  
  41ac5b:	pop    ds
  41ac5c:	xor    al,0xe7
  41ac5e:	push   esp
  41ac5f:	clc    
  41ac60:	mov    edi,0x381b2082
  41ac65:	ret    
  41ac66:	ins    DWORD PTR es:[edi],dx
  41ac67:	fist   WORD PTR [ebp-0x4c]
  41ac6a:	mov    edx,0xfb63fa04
  41ac6f:	and    eax,0x100abb43
  41ac74:	rol    DWORD PTR cs:[esi+eiz*1],1
  41ac78:	ins    DWORD PTR es:[edi],dx
  41ac79:	inc    edi
  41ac7a:	cmc    
  41ac7b:	push   es
  41ac7c:	jno    0x41ac78
  41ac7e:	mov    dh,dl
  41ac80:	sahf   
  41ac81:	inc    esi
  41ac82:	aaa    
  41ac83:	xor    BYTE PTR [ebp+edx*8+0x17],0x35
  41ac88:	rol    BYTE PTR [ebx],cl
  41ac8a:	call   0xa120a6ac
  41ac8f:	pop    ss
  41ac90:	(bad)  
  41ac91:	std    
  41ac92:	in     al,0xfb
  41ac94:	mov    edi,0x9cb1fcf5
  41ac99:	mov    al,ds:0xf1e8de00
  41ac9e:	add    DWORD PTR [eax-0x29],edx
  41aca1:	pop    esi
  41aca2:	jge    0x41ad1e
  41aca4:	mov    eax,ds:0x6ae8ae87
  41aca9:	mov    ds:0x4faa855a,eax
  41acae:	push   0xecff0918
  41acb3:	cmc    
  41acb4:	add    eax,0xe03d9ed8
  41acb9:	xchg   edx,esp
  41acbb:	ja     0x41accc
  41acbd:	in     al,dx
  41acbe:	jle    0x41ac6e
  41acc0:	or     ebp,eax
  41acc2:	data16 into 
  41acc4:	sub    bl,BYTE PTR [ecx-0x4bf2a12b]
  41acca:	mov    fs,WORD PTR [ecx]
  41accc:	or     al,0xe1
  41acce:	(bad)  
  41accf:	call   0x18283fc
  41acd4:	jno    0x41ad35
  41acd6:	add    eax,0x6cc96867
  41acdb:	idiv   DWORD PTR [ecx+0x22166061]
  41ace1:	fs dec edx
  41ace3:	cmp    dh,BYTE PTR [ebp-0x20]
  41ace6:	sbb    al,0xe9
  41ace8:	dec    DWORD PTR [edx+0x6f]
  41aceb:	xchg   DWORD PTR [ebp+0x4ad7f7cc],edx
  41acf1:	or     al,BYTE PTR [esi+0x44]
  41acf4:	shl    DWORD PTR [edi-0x2f],cl
  41acf7:	loope  0x41ace2
  41acf9:	fsub   st(6),st
  41acfb:	popf   
  41acfc:	jb     0x41aced
  41acfe:	nop
  41acff:	cmp    BYTE PTR [ecx],al
  41ad01:	mov    BYTE PTR [eax+ecx*4],al
  41ad04:	jns    0x41acfc
  41ad06:	sahf   
  41ad07:	cmp    BYTE PTR [ebx-0x4],bl
  41ad0a:	sbb    bl,dl
  41ad0c:	pop    es
  41ad0d:	push   esi
  41ad0e:	retf   
  41ad0f:	(bad)  
  41ad10:	jae    0x41ace1
  41ad12:	and    al,0x26
  41ad14:	rol    BYTE PTR [esi-0x7],1
  41ad17:	repz cmp BYTE PTR [eax],bl
  41ad1a:	and    BYTE PTR [ecx+0x67],ah
  41ad1d:	das    
  41ad1e:	out    dx,eax
  41ad1f:	xor    BYTE PTR [edx],ah
  41ad21:	dec    ebp
  41ad22:	mov    esi,0x9d204f40
  41ad27:	dec    esp
  41ad28:	or     al,BYTE PTR [ebx+0x5a]
  41ad2b:	neg    eax
  41ad2d:	and    ebp,DWORD PTR [edi-0x27c1a6b7]
  41ad33:	imul   ebx,esp,0xffffffb2
  41ad36:	popf   
  41ad37:	push   ebp
  41ad38:	inc    esp
  41ad39:	cmp    ebx,DWORD PTR [ebx+0xb]
  41ad3c:	mov    bh,0x77
  41ad3e:	mov    ebx,edi
  41ad40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad41:	aad    0xe5
  41ad43:	rcl    DWORD PTR [edx+0x7],0xa6
  41ad47:	push   ebx
  41ad48:	mov    dh,dh
  41ad4a:	data16 es mov bl,0xb9
  41ad4e:	out    dx,eax
  41ad4f:	fbstp  TBYTE PTR [ebp-0x4d]
  41ad52:	push   esp
  41ad53:	xchg   BYTE PTR [ecx-0x18],bl
  41ad56:	xchg   edx,eax
  41ad57:	call   0xb2c9:0x9179db28
  41ad5e:	dec    esp
  41ad5f:	sub    esp,0xdcce7ba9
  41ad65:	fwait
  41ad66:	mov    esi,0xe297475
  41ad6b:	and    ebx,ebx
  41ad6d:	dec    eax
  41ad6e:	push   eax
  41ad6f:	test   DWORD PTR [edx+0x181a98af],edi
  41ad75:	das    
  41ad76:	sti    
  41ad77:	call   0xde252b11
  41ad7c:	xchg   esi,ecx
  41ad7e:	das    
  41ad7f:	aaa    
  41ad80:	sub    al,0x57
  41ad82:	inc    ebp
  41ad83:	jns    0x41ad73
  41ad85:	popa   
  41ad86:	mov    bl,0x8d
  41ad88:	cmp    ecx,esi
  41ad8a:	push   esp
  41ad8b:	mov    al,BYTE PTR [ecx]
  41ad8d:	inc    edi
  41ad8e:	jno    0x41adb6
  41ad90:	add    BYTE PTR [ebx+ebx*1],al
  41ad93:	or     DWORD PTR [eax-0x38fd45f2],0xffffffbd
  41ad9a:	adc    ah,bh
  41ad9c:	sbb    eax,0x6088d412
  41ada1:	add    DWORD PTR [ebx-0x1abf1132],eax
  41ada7:	(bad)  
  41ada8:	mov    bh,0xd1
  41adaa:	inc    esi
  41adab:	mov    dh,0x4e
  41adad:	add    ebx,DWORD PTR ds:0x20a9f0e
  41adb3:	les    esp,FWORD PTR [edx-0x467f8a77]
  41adb9:	dec    ecx
  41adba:	ins    BYTE PTR es:[edi],dx
  41adbb:	and    dl,BYTE PTR [ecx-0x12]
  41adbe:	in     al,dx
  41adbf:	inc    eax
  41adc0:	push   eax
  41adc1:	pop    esi
  41adc2:	mov    dl,0x2b
  41adc4:	rcl    edi,0x1b
  41adc7:	loop   0x41ae0b
  41adc9:	imul   edi,DWORD PTR [ebp+0x5f7239f],0x31
  41add0:	pop    ebx
  41add1:	mov    eax,0xe21ce7b
  41add6:	push   ds
  41add7:	ror    DWORD PTR [eax+0x446031b8],cl
  41addd:	mov    ds:0x6f68fc44,al
  41ade2:	jle    0x41ade1
  41ade4:	or     DWORD PTR gs:[esi-0x34851b07],0x25
  41adec:	cmc    
  41aded:	test   al,0x1a
  41adef:	push   ds
  41adf0:	xchg   esp,eax
  41adf1:	ret    0xb221
  41adf4:	add    al,0x4c
  41adf6:	dec    esp
  41adf7:	push   esp
  41adf8:	jge    0x41ade9
  41adfa:	and    al,0xab
  41adfc:	ror    DWORD PTR [eax-0x55],cl
  41adff:	dec    esi
  41ae00:	add    BYTE PTR [esi],0xdc
  41ae03:	aas    
  41ae04:	loope  0x41ade5
  41ae06:	mov    BYTE PTR [esi+0x3],dh
  41ae09:	xor    ebp,0xb31912a8
  41ae0f:	xlat   BYTE PTR ds:[ebx]
  41ae10:	int3   
  41ae11:	test   DWORD PTR [eax],0xe75688d2
  41ae17:	je     0x41ae70
  41ae19:	imul   esp,DWORD PTR [ebx],0x9133bb22
  41ae1f:	pop    ds
  41ae20:	jnp    0x41ae21
  41ae22:	es inc ebp
  41ae24:	sub    eax,ebp
  41ae26:	push   0x3a01db25
  41ae2b:	call   0x4c95778
  41ae30:	ss jl  0x41ae3e
  41ae33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae34:	mov    ?,WORD PTR es:[edi+edi*1-0x24]
  41ae39:	pop    ds
  41ae3a:	lea    ecx,[ebx]
  41ae3c:	mov    dh,0xc2
  41ae3e:	xchg   esp,eax
  41ae3f:	cmp    eax,0x7a645c49
  41ae44:	xchg   ebp,eax
  41ae45:	push   esi
  41ae46:	xor    DWORD PTR [edi+0x69],esi
  41ae49:	pushf  
  41ae4a:	imul   edx,DWORD PTR [ebp+0x1e],0x58
  41ae4e:	cmp    al,0x77
  41ae50:	mov    ah,0x75
  41ae52:	jmp    0x41ae20
  41ae54:	or     DWORD PTR [ecx-0x51a65a81],eax
  41ae5a:	dec    ebx
  41ae5b:	adc    DWORD PTR [edx-0x4b045483],esp
  41ae61:	nop
  41ae62:	imul   esp,DWORD PTR [edi],0x3a87ed94
  41ae68:	and    al,0x2c
  41ae6a:	nop
  41ae6b:	loop   0x41adf1
  41ae6d:	xor    BYTE PTR [edi-0x2f],bh
  41ae70:	push   ebp
  41ae71:	out    dx,al
  41ae72:	jne    0x41ae2e
  41ae74:	loopne 0x41ae5c
  41ae76:	in     al,dx
  41ae77:	adc    al,0x27
  41ae79:	rol    DWORD PTR [ecx],0xd3
  41ae7c:	jl     0x41ae2b
  41ae7e:	adc    DWORD PTR [ebx],edx
  41ae80:	mov    ebp,0xd741481d
  41ae85:	mov    ah,0xbd
  41ae87:	loope  0x41ae84
  41ae89:	inc    edi
  41ae8a:	cmp    BYTE PTR [esi+0x7a],cl
  41ae8d:	in     al,dx
  41ae8e:	dec    edi
  41ae8f:	jg     0x41ae65
  41ae91:	ins    BYTE PTR es:[edi],dx
  41ae92:	popa   
  41ae93:	mov    esi,0x1f19e400
  41ae98:	pop    eax
  41ae99:	inc    DWORD PTR [ebx-0x6c2e5e3a]
  41ae9f:	imul   ebx,DWORD PTR [eax+ecx*8],0x5702cbbe
  41aea6:	jecxz  0x41ae93
  41aea8:	adc    eax,0xed34828
  41aead:	stos   BYTE PTR es:[edi],al
  41aeae:	or     al,cl
  41aeb0:	add    BYTE PTR [esi+0x32],al
  41aeb3:	std    
  41aeb4:	stos   DWORD PTR es:[edi],eax
  41aeb5:	jb     0x41ae48
  41aeb7:	sub    ah,al
  41aeb9:	adc    al,0x71
  41aebb:	loop   0x41af35
  41aebd:	and    eax,0xe2cc63b5
  41aec2:	sbb    esi,DWORD PTR [ecx]
  41aec4:	xchg   ebx,eax
  41aec5:	xor    eax,0x3227ea22
  41aeca:	cli    
  41aecb:	sbb    al,0x72
  41aecd:	sub    DWORD PTR [ebp+0x35f82208],edi
  41aed3:	icebp  
  41aed4:	dec    ebp
  41aed5:	and    eax,0xab7ec8c6
  41aeda:	out    dx,al
  41aedb:	outs   dx,DWORD PTR ds:[esi]
  41aedc:	cmp    al,0x9
  41aede:	mov    bh,0xf3
  41aee0:	test   BYTE PTR [ecx],ah
  41aee2:	leave  
  41aee3:	outs   dx,DWORD PTR ds:[esi]
  41aee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aee5:	mov    bl,0xda
  41aee7:	sbb    al,0x8b
  41aee9:	and    al,0x88
  41aeeb:	fdivr  DWORD PTR [ebx-0x60550320]
  41aef1:	inc    edx
  41aef2:	lahf   
  41aef3:	js     0x41ae8e
  41aef5:	push   esp
  41aef6:	scas   al,BYTE PTR es:[edi]
  41aef7:	cmp    eax,0x62c78612
  41aefc:	adc    edx,esi
  41aefe:	ins    DWORD PTR es:[edi],dx
  41aeff:	mov    ebp,ebx
  41af01:	cmp    bh,BYTE PTR [ebp-0x474c3586]
  41af07:	enter  0x661,0xe4
  41af0b:	cmp    BYTE PTR [edi-0x4c],dh
  41af0e:	dec    ebx
  41af0f:	loopne 0x41aef6
  41af11:	pop    ebp
  41af12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af13:	xchg   ebx,eax
  41af14:	lock push ecx
  41af16:	xchg   edx,eax
  41af17:	cld    
  41af18:	retf   0xc5e4
  41af1b:	sbb    DWORD PTR [ecx-0x6d41c437],ebx
  41af21:	ret    0xd53c
  41af24:	repnz mov ds:0xa85a4574,eax
  41af2a:	xor    cl,BYTE PTR [edx+0x44f9b6f4]
  41af30:	jmp    0x2c8a0be6
  41af35:	mov    ah,0x3b
  41af37:	fistp  QWORD PTR [ebx]
  41af39:	mov    cs,WORD PTR [ebx+0x2ba92a3]
  41af3f:	rol    cl,1
  41af41:	data16 lahf 
  41af43:	into   
  41af44:	test   al,0xaf
  41af46:	pop    esi
  41af47:	jp     0x41af3b
  41af49:	push   es
  41af4a:	lock sub edi,DWORD PTR [ecx]
  41af4d:	in     eax,dx
  41af4e:	test   DWORD PTR [edi+0x6ff2edce],esi
  41af54:	push   es
  41af55:	mov    ch,0x3d
  41af57:	cmp    BYTE PTR [esi],cl
  41af59:	lahf   
  41af5a:	test   DWORD PTR [ebx-0x10],edi
  41af5d:	fldenv [ebp-0x6f]
  41af60:	popa   
  41af61:	call   0xaaf196d9
  41af66:	ins    BYTE PTR es:[edi],dx
  41af67:	jns    0x41af0c
  41af69:	and    al,0x66
  41af6b:	xor    DWORD PTR [esi-0x7b1878d0],0xffffffcd
  41af72:	or     eax,0x6d088b11
  41af77:	mov    bh,0x78
  41af79:	call   0xd328ee36
  41af7e:	rol    dl,1
  41af80:	scas   eax,DWORD PTR es:[edi]
  41af81:	xchg   DWORD PTR [edx-0x12],edx
  41af84:	pop    ss
  41af85:	rol    BYTE PTR [ecx],cl
  41af87:	sbb    al,0xf9
  41af89:	int    0x65
  41af8b:	push   ss
  41af8c:	adc    ebp,DWORD PTR [esi+0x28]
  41af8f:	jne    0x41af22
  41af91:	daa    
  41af92:	ins    DWORD PTR es:[edi],dx
  41af93:	xchg   esi,eax
  41af94:	in     eax,0x3c
  41af96:	adc    eax,0xc61903fa
  41af9b:	(bad)  
  41af9c:	sahf   
  41af9d:	in     al,dx
  41af9e:	mov    eax,ds:0x61b23030
  41afa3:	mov    edx,0x4e273f23
  41afa8:	push   eax
  41afa9:	cwde   
  41afaa:	sbb    al,0x72
  41afac:	lods   eax,DWORD PTR ds:[esi]
  41afad:	cmp    esi,eax
  41afaf:	fcomp  DWORD PTR [edi-0x45]
  41afb2:	mov    eax,0x717693aa
  41afb7:	sub    ecx,edx
  41afb9:	inc    edx
  41afba:	fs xchg ebx,eax
  41afbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afbd:	mov    esi,0xad8ac31a
  41afc2:	jne    0x41af67
  41afc4:	sbb    dl,BYTE PTR [eax]
  41afc6:	loope  0x41af57
  41afc8:	cmp    DWORD PTR gs:[edi],esi
  41afcb:	aaa    
  41afcc:	mov    ebp,es
  41afce:	out    dx,eax
  41afcf:	push   edi
  41afd0:	out    0x81,eax
  41afd2:	xchg   ebp,eax
  41afd3:	aam    0x9e
  41afd5:	retf   0xc26a
  41afd8:	sub    eax,0x359c2bf5
  41afdd:	in     al,0xb
  41afdf:	sbb    ebp,DWORD PTR [esi+0x2ea76f65]
  41afe5:	idiv   DWORD PTR [esi-0x10]
  41afe8:	or     bl,BYTE PTR [esi-0x4a3d4f8e]
  41afee:	cs pop es
  41aff0:	xor    edx,esp
  41aff2:	aad    0x27
  41aff4:	shl    DWORD PTR ds:0x277e7f7a,0x19
  41affb:	pop    edx
  41affc:	sub    DWORD PTR [edx],ebx
  41affe:	push   ebx
  41afff:	push   ss
  41b000:	mov    esi,0x8bf79ceb
  41b005:	and    al,BYTE PTR [esi-0x42369941]
  41b00b:	clc    
  41b00c:	rol    BYTE PTR [esi+0x7a],0x3f
  41b010:	mov    eax,ds:0x82f2688d
  41b015:	sub    ch,bl
  41b017:	dec    edi
  41b018:	popa   
  41b019:	neg    DWORD PTR [ecx-0x32]
  41b01c:	and    eax,0x34557a84
  41b021:	add    eax,0xece7e645
  41b026:	push   ebx
  41b027:	push   0xfe7c9bf1
  41b02c:	nop
  41b02d:	jb     0x41b0ad
  41b02f:	jge    0x41b0b0
  41b031:	mov    bh,0xd8
  41b033:	test   BYTE PTR [ebx],dh
  41b035:	inc    edi
  41b036:	mov    ah,0xd2
  41b038:	xchg   esi,eax
  41b039:	jmp    0x406f043a
  41b03e:	outs   dx,DWORD PTR gs:[esi]
  41b040:	test   al,0x22
  41b042:	js     0x41b023
  41b044:	xchg   ebx,eax
  41b045:	jl     0x41b09f
  41b047:	mov    dl,0x9e
  41b049:	gs inc esp
  41b04b:	xlat   BYTE PTR ds:[ebx]
  41b04c:	shl    DWORD PTR ds:0x4e80f8e1,cl
  41b052:	sbb    BYTE PTR [ebx],bl
  41b054:	aas    
  41b055:	loop   0x41b01c
  41b057:	imul   ecx,esi,0xea864014
  41b05d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b05e:	cmp    BYTE PTR [esi-0x1e3d20b6],cl
  41b064:	inc    edx
  41b065:	lea    esp,[edi+edx*1]
  41b068:	cld    
  41b069:	xchg   ebx,eax
  41b06a:	inc    esp
  41b06b:	pop    edi
  41b06c:	mov    edx,0x16ba1a98
  41b071:	push   esi
  41b072:	sti    
  41b073:	fiadd  WORD PTR [esi+0x21]
  41b076:	and    BYTE PTR [ebp+0x3a6761cc],al
  41b07c:	ins    BYTE PTR es:[edi],dx
  41b07d:	psllq  mm1,QWORD PTR [ecx]
  41b080:	outs   dx,DWORD PTR ds:[esi]
  41b081:	mov    ds:0xded96021,al
  41b086:	jecxz  0x41b092
  41b088:	enter  0x9917,0x1b
  41b08c:	cli    
  41b08d:	sub    BYTE PTR [ebp+eiz*1+0x4f],0x9e
  41b092:	cli    
  41b093:	sub    cl,0xc5
  41b096:	jns    0x41b01a
  41b098:	cld    
  41b099:	stc    
  41b09a:	mov    al,0xa5
  41b09c:	jb     0x41b036
  41b09e:	inc    esi
  41b09f:	(bad)  
  41b0a0:	jns    0x41b042
  41b0a2:	or     al,0x5
  41b0a4:	int3   
  41b0a5:	ins    DWORD PTR es:[edi],dx
  41b0a6:	inc    ebp
  41b0a7:	inc    edi
  41b0a8:	(bad)  
  41b0a9:	ror    ch,cl
  41b0ab:	(bad)  
  41b0ac:	push   0x4cecd9e3
  41b0b1:	inc    edi
  41b0b2:	and    bh,ch
  41b0b4:	jecxz  0x41b055
  41b0b6:	iret   
  41b0b7:	into   
  41b0b8:	push   ebp
  41b0b9:	cs call 0x115:0xe947fd5f
  41b0c1:	xchg   DWORD PTR [eax-0x30],ebp
  41b0c4:	xchg   ebx,eax
  41b0c5:	mov    eax,DWORD PTR [edi+0x47]
  41b0c8:	xchg   BYTE PTR [ecx-0x9c457b1],bh
  41b0ce:	shr    BYTE PTR [esi-0x264f35ad],cl
  41b0d4:	retf   
  41b0d5:	jae    0x41b058
  41b0d7:	js     0x41b13c
  41b0d9:	sti    
  41b0da:	jno    0x41b13e
  41b0dc:	pop    edx
  41b0dd:	das    
  41b0de:	jo     0x41b0d9
  41b0e0:	call   0x45c8fcfb
  41b0e5:	ja     0x41b120
  41b0e7:	adc    DWORD PTR [edi+0x34321420],esi
  41b0ed:	cmp    al,0x92
  41b0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0f0:	xchg   esi,eax
  41b0f1:	pop    ss
  41b0f2:	adc    DWORD PTR [edx-0x6df06fbb],ebx
  41b0f8:	and    BYTE PTR [edx+esi*2-0x59715b45],ah
  41b0ff:	or     al,dl
  41b101:	out    dx,al
  41b102:	fdiv   QWORD PTR [edx-0x8]
  41b105:	fs cdq 
  41b107:	arpl   WORD PTR [edx+0x22],di
  41b10a:	ins    DWORD PTR es:[edi],dx
  41b10b:	icebp  
  41b10c:	mov    al,ds:0x7535cf1d
  41b111:	add    al,0xb8
  41b113:	mov    edx,0x49f4321c
  41b118:	mov    cl,0x3d
  41b11a:	sub    al,0xc7
  41b11c:	cs in  eax,0x50
  41b11f:	pop    edx
  41b120:	mov    ebx,edi
  41b122:	sti    
  41b123:	add    al,0xf9
  41b125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b126:	adc    esi,eax
  41b128:	push   ebx
  41b129:	mov    ds:0x13f5c59c,al
  41b12e:	mov    ebx,esi
  41b130:	push   ss
  41b131:	bound  ebx,QWORD PTR [esp+edi*8+0x6002dfe2]
  41b138:	xchg   edx,eax
  41b139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b13a:	xchg   edx,eax
  41b13b:	add    al,0x53
  41b13d:	sbb    ch,BYTE PTR [eax+0x5a]
  41b140:	xadd   BYTE PTR [edx],bh
  41b143:	jne    0x41b0da
  41b145:	sub    DWORD PTR [bp+0x2fb0],ebp
  41b14a:	fsubr  QWORD PTR [eax+0x3cb0557f]
  41b150:	ins    DWORD PTR es:[edi],dx
  41b151:	push   ds
  41b152:	jbe    0x41b0fd
  41b154:	and    al,0x8
  41b156:	push   0x69
  41b158:	xchg   esi,eax
  41b159:	mov    ebx,0x3d046ba8
  41b15e:	xor    BYTE PTR [edi+0x51fa7f8a],0x6
  41b165:	lock sub ebx,eax
  41b168:	mov    dl,0xdc
  41b16a:	jns    0x41b1c1
  41b16c:	popa   
  41b16d:	xor    al,0xb9
  41b16f:	add    ch,BYTE PTR [edi-0x76302e97]
  41b175:	xor    edx,DWORD PTR ds:[edi-0x76]
  41b179:	js     0x41b168
  41b17b:	push   ecx
  41b17c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b17d:	sub    ecx,edi
  41b17f:	inc    edx
  41b180:	or     eax,0xac260710
  41b185:	pop    ds
  41b186:	pop    edi
  41b187:	and    al,0xa1
  41b189:	popf   
  41b18a:	dec    edi
  41b18b:	js     0x41b1e8
  41b18d:	mov    ds:0x472a7c2a,eax
  41b192:	or     al,0x45
  41b194:	fadd   DWORD PTR [edi-0x652ef266]
  41b19a:	retf   
  41b19b:	aas    
  41b19c:	sahf   
  41b19d:	xchg   DWORD PTR [ebp-0x510ec31b],eax
  41b1a3:	ss aaa 
  41b1a5:	stos   BYTE PTR es:[edi],al
  41b1a6:	lahf   
  41b1a7:	mov    bl,0x3f
  41b1a9:	ret    
  41b1aa:	xchg   edx,eax
  41b1ab:	add    BYTE PTR [eax],0x4b
  41b1ae:	jbe    0x41b207
  41b1b0:	sub    al,0x3e
  41b1b2:	or     BYTE PTR [ecx],ah
  41b1b4:	push   edi
  41b1b5:	jmp    0x9127ff8a
  41b1ba:	pop    esp
  41b1bb:	jae    0x41b1ff
  41b1bd:	int    0x85
  41b1bf:	sub    ebp,DWORD PTR [ebx]
  41b1c1:	fs sub dh,ch
  41b1c4:	add    eax,ebx
  41b1c6:	addr16 mov esp,0x94ee1d13
  41b1cc:	push   es
  41b1cd:	jmp    DWORD PTR [eax-0x7f]
  41b1d0:	stos   BYTE PTR es:[edi],al
  41b1d1:	mov    edi,0xef5dcacc
  41b1d6:	or     ah,0x2a
  41b1d9:	jae    0x41b16a
  41b1db:	pop    edx
  41b1dc:	(bad)  
  41b1dd:	fs sbb eax,0xc11dc6ca
  41b1e3:	jp     0x41b1ad
  41b1e5:	inc    edi
  41b1e6:	shl    ecx,0xcb
  41b1e9:	jmp    0x347d331f
  41b1ee:	je     0x41b224
  41b1f0:	jbe    0x41b1ba
  41b1f2:	je     0x41b18f
  41b1f4:	cmp    esp,DWORD PTR [eax+0x6a]
  41b1f7:	mov    BYTE PTR [bx+di+0x3e],ah
  41b1fb:	xchg   ecx,eax
  41b1fc:	imul   eax,DWORD PTR [ecx+0x552223a0],0xe8f46839
  41b206:	retf   0x9fe0
  41b209:	jg     0x41b1d3
  41b20b:	hlt    
  41b20c:	and    BYTE PTR [ebx+0x46],0x8e
  41b210:	pusha  
  41b211:	into   
  41b212:	dec    esp
  41b213:	adc    DWORD PTR [edi],eax
  41b215:	cld    
  41b216:	mov    esp,0x1da63e8c
  41b21b:	sahf   
  41b21c:	pop    edi
  41b21d:	push   ds
  41b21e:	lods   eax,DWORD PTR ds:[esi]
  41b21f:	aam    0xb7
  41b221:	mov    ah,0xc
  41b223:	lods   al,BYTE PTR ds:[esi]
  41b224:	inc    ebx
  41b225:	xchg   edx,eax
  41b226:	adc    esi,DWORD PTR [ebx+eax*4]
  41b229:	inc    ecx
  41b22a:	jp     0x41b290
  41b22c:	jae    0x41b25b
  41b22e:	rol    edx,cl
  41b230:	sub    BYTE PTR [ecx],0x92
  41b233:	das    
  41b234:	mov    eax,ds:0x97bc17e
  41b239:	stc    
  41b23a:	mov    ebx,0x14070c39
  41b23f:	shr    BYTE PTR [ecx+0x3cc56847],cl
  41b245:	pusha  
  41b246:	push   0x9aa06fad
  41b24b:	mov    ds:0xf0db2ec3,al
  41b250:	or     edx,esp
  41b252:	mov    ds:0xb21bc6b1,eax
  41b257:	adc    cl,BYTE PTR [esi]
  41b259:	sbb    DWORD PTR [edi-0x51],edx
  41b25c:	lds    ebp,FWORD PTR [eax]
  41b25e:	sub    BYTE PTR [ebp+0x13496bf8],bl
  41b264:	cld    
  41b265:	mov    WORD PTR [esi],ss
  41b267:	or     DWORD PTR [esi+0x50e6ffb],0xd56d98c6
  41b271:	sbb    eax,ebx
  41b273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b274:	lods   eax,DWORD PTR ds:[esi]
  41b275:	retf   0x7281
  41b278:	xchg   ebx,eax
  41b279:	mov    es,WORD PTR [esi-0x59548acc]
  41b27f:	aaa    
  41b280:	sbb    DWORD PTR [ecx+0x60],edx
  41b283:	imul   eax,edx,0xffffffa0
  41b286:	and    ax,0xd344
  41b28a:	push   ecx
  41b28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b28c:	out    dx,al
  41b28d:	inc    ebx
  41b28e:	jge    0x41b223
  41b290:	cmp    al,0x90
  41b292:	je     0x41b276
  41b294:	sbb    edi,DWORD PTR [ecx+0x632b505]
  41b29a:	jge    0x41b233
  41b29c:	fcom   QWORD PTR [ebp-0x77]
  41b29f:	and    BYTE PTR [ebp+0x54],ah
  41b2a2:	or     esp,DWORD PTR [edi+0x4465bc87]
  41b2a8:	ret    
  41b2a9:	add    esi,DWORD PTR [edx+edi*4-0x14]
  41b2ad:	sbb    bl,BYTE PTR [esi]
  41b2af:	test   eax,0x3b9a8b0c
  41b2b4:	mov    DWORD PTR [esi-0x38a1eca5],ebp
  41b2ba:	jecxz  0x41b258
  41b2bc:	push   0xffffffc3
  41b2be:	inc    eax
  41b2bf:	je     0x41b2e5
  41b2c1:	sub    DWORD PTR [ecx+0x7b96ef90],0xffffffbc
  41b2c8:	sub    eax,0x43472223
  41b2cd:	fld    DWORD PTR [edi+0x45a35eb]
  41b2d3:	push   ebp
  41b2d4:	dec    esi
  41b2d5:	ja     0x41b2c0
  41b2d7:	sub    eax,0x541f33da
  41b2dc:	loop   0x41b2b7
  41b2de:	fldcw  WORD PTR [edx]
  41b2e0:	popf   
  41b2e1:	das    
  41b2e2:	iret   
  41b2e3:	inc    edi
  41b2e4:	and    eax,0x3a9c90ff
  41b2e9:	in     eax,0x12
  41b2eb:	pop    es
  41b2ec:	fisub  DWORD PTR ds:0x2c757468
  41b2f2:	loopne 0x41b31b
  41b2f4:	ror    DWORD PTR cs:[ecx],0x47
  41b2f8:	mov    ebx,0xcb9e89ba
  41b2fd:	lds    ebx,FWORD PTR [esi]
  41b2ff:	jge    0x41b363
  41b301:	loope  0x41b320
  41b303:	es imul edx,eax,0x9aac87c
  41b30a:	push   ds
  41b30b:	inc    ecx
  41b30c:	in     eax,0xca
  41b30e:	jmp    0xbf96a0f1
  41b313:	(bad)  
  41b314:	lahf   
  41b315:	and    DWORD PTR [edx-0x61],esi
  41b318:	pusha  
  41b319:	push   es
  41b31a:	js     0x41b33d
  41b31c:	mov    fs,WORD PTR [ecx+0x6a]
  41b31f:	rol    DWORD PTR [esi+0x59],cl
  41b322:	fidiv  WORD PTR [ebp+0x3f]
  41b325:	idiv   ch
  41b327:	cmp    ah,BYTE PTR [esi]
  41b329:	cli    
  41b32a:	xchg   edi,eax
  41b32b:	mov    dh,0x83
  41b32d:	add    DWORD PTR [ebx+0x37],esp
  41b330:	mov    dl,dl
  41b332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b333:	shl    DWORD PTR [esi+0x25],cl
  41b336:	lock jmp 0x40a6:0x42dc8390
  41b33e:	(bad)  
  41b33f:	aam    0x5e
  41b341:	push   ds
  41b342:	push   ecx
  41b343:	and    eax,0x1bb6fe3c
  41b348:	mov    dh,0x34
  41b34a:	test   bh,ch
  41b34c:	mov    dl,cl
  41b34e:	push   edx
  41b34f:	pop    ds
  41b350:	cmp    ah,BYTE PTR [ebx]
  41b352:	popf   
  41b353:	add    DWORD PTR [ecx+edx*1+0x14c88cab],edi
  41b35a:	aas    
  41b35b:	cmp    al,0x51
  41b35d:	repnz xor DWORD PTR [esi],ebp
  41b360:	lods   eax,DWORD PTR ds:[esi]
  41b361:	sub    BYTE PTR [ecx+edx*1+0x45],bl
  41b365:	aas    
  41b366:	push   ss
  41b367:	mov    bh,0x18
  41b369:	call   eax
  41b36b:	and    al,0x1d
  41b36d:	fcmovu st,st(5)
  41b36f:	(bad)  
  41b370:	and    ch,bl
  41b372:	dec    esp
  41b373:	push   es
  41b374:	imul   ebx,DWORD PTR [eax+esi*2+0x5c498b83],0x4494feeb
  41b37f:	ret    0x469d
  41b382:	stos   DWORD PTR es:[edi],eax
  41b383:	out    dx,al
  41b384:	push   ebx
  41b385:	adc    edi,DWORD PTR [ebp-0x2e]
  41b388:	repnz xchg edx,eax
  41b38a:	je     0x41b313
  41b38c:	pop    esi
  41b38d:	and    al,0x81
  41b38f:	mov    DWORD PTR [eax+0x4944c86c],esp
  41b395:	stos   DWORD PTR es:[edi],eax
  41b396:	test   eax,0xd2e8d15d
  41b39b:	daa    
  41b39c:	adc    esi,DWORD PTR [ebx-0x60]
  41b39f:	lds    ebp,FWORD PTR [edx+0x297faeb8]
  41b3a5:	mov    ds:0x705cd341,al
  41b3aa:	inc    ebx
  41b3ab:	sti    
  41b3ac:	pusha  
  41b3ad:	and    ebx,DWORD PTR [edx]
  41b3af:	pop    ss
  41b3b0:	adc    al,0x86
  41b3b2:	or     al,0x56
  41b3b4:	test   bh,0x61
  41b3b7:	jge    0x41b3da
  41b3b9:	enter  0x31c2,0x31
  41b3bd:	pop    ds
  41b3be:	cdq    
  41b3bf:	mov    bl,al
  41b3c1:	retf   
  41b3c2:	ins    BYTE PTR es:[edi],dx
  41b3c3:	cmp    DWORD PTR [esp+ebx*8-0x330250dc],ebp
  41b3ca:	stos   DWORD PTR es:[edi],eax
  41b3cb:	dec    edi
  41b3cc:	xchg   ecx,eax
  41b3cd:	dec    edi
  41b3ce:	cmp    al,0xc5
  41b3d0:	por    mm2,mm5
  41b3d3:	repz test DWORD PTR [esi+0x5],ecx
  41b3d7:	test   al,0x1e
  41b3d9:	mov    esp,0x7d2f9f06
  41b3de:	pushf  
  41b3df:	int3   
  41b3e0:	cli    
  41b3e1:	loope  0x41b439
  41b3e3:	popf   
  41b3e4:	aad    0x9a
  41b3e6:	cmp    ebx,DWORD PTR [edi]
  41b3e8:	loopne 0x41b42f
  41b3ea:	dec    esp
  41b3eb:	fcmovb st,st(0)
  41b3ed:	pop    edi
  41b3ee:	xor    ebp,DWORD PTR [ebp+0x653106f3]
  41b3f4:	push   edx
  41b3f5:	mov    ds:0x8aedcdeb,al
  41b3fa:	or     edx,DWORD PTR [esi+0xc1d0540]
  41b400:	xchg   esp,eax
  41b401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b402:	sbb    al,0x2
  41b404:	sub    al,0x92
  41b406:	adc    bl,ch
  41b408:	adc    DWORD PTR [ecx],0x22
  41b40b:	bound  edi,QWORD PTR [eax]
  41b40d:	lahf   
  41b40e:	ins    BYTE PTR es:[edi],dx
  41b40f:	ret    
  41b410:	or     DWORD PTR [ebp+0xfbacd99],esp
  41b416:	mov    bl,0xf5
  41b418:	(bad)  
  41b419:	hlt    
  41b41a:	sbb    BYTE PTR [edx+0x9f24255],bl
  41b420:	loop   0x41b432
  41b422:	adc    eax,0x1174893e
  41b427:	enter  0x5a10,0xd7
  41b42b:	add    BYTE PTR [edi+esi*2-0x4f4093dc],0xa
  41b433:	sbb    cl,bl
  41b435:	or     BYTE PTR [edx],0x46
  41b438:	xor    BYTE PTR [ebp-0xe],ah
  41b43b:	mov    ecx,0x19cf459d
  41b440:	imul   DWORD PTR [edx-0x4c52acd5]
  41b446:	repnz pop edi
  41b448:	sbb    DWORD PTR [ebp-0x404a59b],ebx
  41b44e:	mov    bl,BYTE PTR [edi]
  41b450:	inc    ecx
  41b451:	xchg   DWORD PTR [ebp+0x14faab5a],ecx
  41b457:	addr16 loopne 0x41b4b3
  41b45a:	xchg   ebx,edx
  41b45c:	sar    DWORD PTR [ecx+0x6a],0x86
  41b460:	in     al,dx
  41b461:	arpl   WORD PTR [esi+0x13562b6e],bp
  41b467:	dec    esp
  41b468:	fst    QWORD PTR [esi-0xf751041]
  41b46e:	les    esp,FWORD PTR [edx+0x37f713b5]
  41b474:	inc    esp
  41b475:	(bad)  ds:0xfd378be3
  41b47b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b47c:	push   edi
  41b47d:	mov    eax,ds:0x8edf3f1e
  41b482:	(bad)  
  41b483:	std    
  41b484:	daa    
  41b485:	shl    BYTE PTR [ecx+eax*4-0x3a1f1492],1
  41b48c:	dec    edi
  41b48d:	sbb    eax,0xa248d6db
  41b492:	jo     0x41b4bf
  41b494:	retf   0xc2a6
  41b497:	xor    ebp,DWORD PTR [ebx]
  41b499:	loope  0x41b4c2
  41b49b:	mov    DWORD PTR es:[ebx+0x72],ebx
  41b49f:	jns    0x41b519
  41b4a1:	xlat   BYTE PTR ds:[ebx]
  41b4a2:	sbb    ebx,DWORD PTR [edi-0x87aab74]
  41b4a8:	xor    al,BYTE PTR [esi-0x3a]
  41b4ab:	es pop edi
  41b4ad:	ss cmp eax,0x330a8f88
  41b4b3:	imul   ebx,DWORD PTR [ebx+0x47],0x3
  41b4b7:	fs mov esi,0xedba249a
  41b4bd:	leave  
  41b4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4bf:	ja     0x41b51e
  41b4c1:	int3   
  41b4c2:	adc    DWORD PTR [esi-0x5f046e2b],edx
  41b4c8:	scas   al,BYTE PTR es:[edi]
  41b4c9:	and    al,0x47
  41b4cb:	jnp    0x41b51a
  41b4cd:	jg     0x41b4c6
  41b4cf:	ffree  st(4)
  41b4d1:	out    dx,al
  41b4d2:	das    
  41b4d3:	jecxz  0x41b496
  41b4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4d6:	outs   dx,DWORD PTR ds:[esi]
  41b4d7:	pop    edx
  41b4d8:	ret    0x2bbb
  41b4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4dc:	xchg   DWORD PTR [ecx],ebp
  41b4de:	test   eax,0xe2436789
  41b4e3:	and    BYTE PTR [edi+0x38],al
  41b4e6:	div    esi
  41b4e8:	lahf   
  41b4e9:	adc    cl,BYTE PTR [edi]
  41b4eb:	ret    
  41b4ec:	xchg   edx,eax
  41b4ed:	xchg   ebx,eax
  41b4ee:	xchg   esi,eax
  41b4ef:	and    BYTE PTR [esi-0x55],cl
  41b4f2:	and    eax,DWORD PTR [edi]
  41b4f4:	(bad)  
  41b4f5:	push   ss
  41b4f6:	test   al,0x8c
  41b4f8:	jecxz  0x41b4e8
  41b4fa:	lds    ebp,FWORD PTR [edx+0x51]
  41b4fd:	ffree  st(6)
  41b4ff:	repz loopne 0x41b495
  41b502:	mov    ds:0x21e173d0,al
  41b507:	adc    BYTE PTR [eax-0x80],dh
  41b50a:	cmp    al,0x74
  41b50c:	sub    DWORD PTR [edx],esi
  41b50e:	pop    ebp
  41b50f:	adc    eax,0xebac12de
  41b514:	cli    
  41b515:	and    al,ch
  41b517:	sbb    eax,0x26c5ef07
  41b51c:	ror    DWORD PTR cs:[esi+0x8],1
  41b520:	inc    eax
  41b521:	fcomp  QWORD PTR [edi]
  41b523:	add    DWORD PTR [ebx],0xffffffc5
  41b526:	jmp    0x42dc:0x48eb21b
  41b52d:	cmp    BYTE PTR [ebp-0x766ccdd],cl
  41b533:	sbb    eax,0xf45ba908
  41b538:	loop   0x41b4ea
  41b53a:	xchg   esi,eax
  41b53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b53c:	pop    ebp
  41b53d:	jmp    FWORD PTR [ebx]
  41b53f:	sub    al,0xe2
  41b541:	dec    ebx
  41b542:	cmc    
  41b543:	cmp    dh,BYTE PTR [ebp+0x7a]
  41b546:	in     al,dx
  41b547:	cdq    
  41b548:	outs   dx,DWORD PTR ds:[esi]
  41b549:	dec    ebx
  41b54a:	fs cwde 
  41b54c:	mov    ch,0xc
  41b54e:	vpxor  ymm0,ymm7,YMMWORD PTR [esi+eiz*1-0x14f543c2]
  41b557:	pop    eax
  41b558:	pop    ds
  41b559:	popf   
  41b55a:	adc    BYTE PTR [ecx-0x5502247c],0x36
  41b561:	lods   al,BYTE PTR ds:[esi]
  41b562:	jmp    0x517df728
  41b567:	dec    ebp
  41b568:	inc    esp
  41b569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b56a:	sub    eax,0xa42ca255
  41b56f:	and    bh,BYTE PTR [edi]
  41b571:	add    BYTE PTR [esi],bh
  41b573:	mov    al,ds:0x5ca4bfcb
  41b578:	or     esp,0xffffffd0
  41b57b:	add    al,0x3d
  41b57d:	sbb    esp,DWORD PTR [edi]
  41b57f:	push   cs
  41b580:	and    ah,0xe3
  41b583:	dec    ebp
  41b584:	mov    esi,0xcb71b5d3
  41b589:	mov    esp,0xbcecbbae
  41b58e:	vunpcklps xmm5,xmm7,xmm7
  41b592:	xchg   ebx,eax
  41b593:	cmp    al,0xa
  41b595:	loope  0x41b557
  41b597:	sub    DWORD PTR [eax],eax
  41b599:	scas   al,BYTE PTR es:[edi]
  41b59a:	mov    edi,0xfc4381ff
  41b59f:	test   eax,0x21f0cf9f
  41b5a4:	jmp    0x84fa4050
  41b5a9:	dec    esi
  41b5aa:	mov    dh,0x7d
  41b5ac:	push   es
  41b5ad:	(bad)
  41b5b0:	and    al,0xc9
  41b5b2:	add    eax,0x8207bbd6
  41b5b7:	mov    eax,DWORD PTR [ebx+0x6d]
  41b5ba:	fwait
  41b5bb:	xchg   edi,eax
  41b5bc:	gs inc esi
  41b5be:	pushf  
  41b5bf:	mov    WORD PTR [eax+0x11e738b4],cs
  41b5c5:	aas    
  41b5c6:	gs jp  0x41b56a
  41b5c9:	xor    dh,ch
  41b5cb:	xor    eax,0xe5ee5f3d
  41b5d0:	cli    
  41b5d1:	pop    ebx
  41b5d2:	jmp    0x41b574
  41b5d4:	xchg   ecx,eax
  41b5d5:	cwde   
  41b5d6:	js     0x41b5be
  41b5d8:	and    cl,BYTE PTR [eax-0x1e9b54c7]
  41b5de:	imul   ebp,DWORD PTR ds:0x1de5a464,0x4
  41b5e5:	fwait
  41b5e6:	ds mov ah,0x8d
  41b5e9:	test   DWORD PTR [edx+0x34],ebx
  41b5ec:	into   
  41b5ed:	push   es
  41b5ee:	(bad)  
  41b5ef:	xor    eax,0x69716129
  41b5f4:	cld    
  41b5f5:	fwait
  41b5f6:	pop    ds
  41b5f7:	out    0xc,al
  41b5f9:	mov    ah,0x13
  41b5fb:	xchg   edi,eax
  41b5fc:	outs   dx,BYTE PTR ds:[esi]
  41b5fd:	aas    
  41b5fe:	jnp    0x41b622
  41b600:	stc    
  41b601:	mov    cl,0xe3
  41b603:	stos   BYTE PTR es:[edi],al
  41b604:	shr    BYTE PTR [edi+eiz*1],1
  41b607:	xor    eax,0xce0c8382
  41b60c:	cli    
  41b60d:	dec    edi
  41b60e:	dec    ecx
  41b60f:	aad    0xaa
  41b611:	pop    es
  41b612:	pop    edx
  41b613:	int3   
  41b614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b615:	ja     0x41b5c7
  41b617:	add    eax,0xadc4c307
  41b61c:	xchg   esp,eax
  41b61d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41b61f:	xor    DWORD PTR [edx-0x53],esi
  41b622:	clc    
  41b623:	sbb    al,0xa
  41b625:	js     0x41b68f
  41b627:	pop    edi
  41b628:	popf   
  41b629:	call   0xf31e:0x4c98a33
  41b630:	loop   0x41b66d
  41b632:	sbb    al,0xc4
  41b634:	mov    ebp,0x4f200c55
  41b639:	pusha  
  41b63a:	retf   0x757b
  41b63d:	inc    edi
  41b63e:	sar    BYTE PTR [esi+0x7f],1
  41b641:	add    ecx,DWORD PTR [ebx-0x75]
  41b644:	push   ebp
  41b645:	mov    al,0x81
  41b647:	ror    ebp,0xeb
  41b64a:	inc    edx
  41b64b:	add    dh,BYTE PTR [ebx]
  41b64d:	retf   0x4d89
  41b650:	mov    al,0x8b
  41b652:	dec    ebp
  41b653:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a75f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a763
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a767
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a76b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a76f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a773
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42989b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a77b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a743
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429c1f
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a74b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a74f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a753
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a757
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	shl    DWORD PTR [edi-0x2e],cl
  41bf77:	xchg   ebx,eax
  41bf78:	and    edi,DWORD PTR [ebx-0x267c7d07]
  41bf7e:	pop    esp
  41bf7f:	add    DWORD PTR [ebx-0x9314e0c],0x4f
  41bf86:	repz ds dec ebp
  41bf89:	(bad)  
  41bf8b:	(bad)  
  41bf8c:	loope  0x41bf3c
  41bf8e:	mov    ebp,0xa8517f01
  41bf93:	mov    ebx,0x933b2355
  41bf98:	sbb    DWORD PTR ds:[ebx-0x44],eax
  41bf9c:	stos   BYTE PTR es:[edi],al
  41bf9d:	mov    ebx,0x425eb3f8
  41bfa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfa3:	jmp    0x537c087d
  41bfa8:	data16 fcmovbe st,st(0)
  41bfab:	cs jmp 0x83bf:0x68c905f8
  41bfb3:	mov    bl,0x32
  41bfb5:	rcr    DWORD PTR [esi],cl
  41bfb7:	inc    ebp
  41bfb8:	fisttp DWORD PTR [esi+0x62]
  41bfbb:	int    0x1b
  41bfbd:	and    ebx,DWORD PTR [edx+edi*1-0x42]
  41bfc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfc2:	pop    edx
  41bfc3:	pop    esi
  41bfc4:	push   0x6e
  41bfc6:	out    0xb0,al
  41bfc8:	jbe    0x41bfa1
  41bfca:	jbe    0x41bf50
  41bfcc:	pop    ebx
  41bfcd:	lods   eax,DWORD PTR fs:[esi]
  41bfcf:	and    al,0xfe
  41bfd1:	lahf   
  41bfd2:	xor    eax,0xf7e8b504
  41bfd7:	fwait
  41bfd8:	xchg   BYTE PTR es:[ebp+0x75],bh
  41bfdc:	test   ebp,edi
  41bfde:	call   0xd7e3:0x4263bd5e
  41bfe5:	xchg   edx,eax
  41bfe6:	and    al,bh
  41bfe8:	add    DWORD PTR [edi+0x29],ebp
  41bfeb:	les    ebp,FWORD PTR [edx]
  41bfed:	mov    eax,fs
  41bfef:	add    al,0xdf
  41bff1:	fmul   QWORD PTR [ecx+esi*4]
  41bff4:	mov    ebx,0x9c5f748
  41bff9:	and    edx,edi
  41bffb:	push   esp
  41bffc:	adc    DWORD PTR [edi+ecx*8],0x18201f11
  41c003:	clc    
  41c004:	sbb    bh,BYTE PTR [ebp+eax*2-0x29]
  41c008:	sbb    cl,BYTE PTR [ecx-0x4f]
  41c00b:	lds    edx,FWORD PTR [edi+0x62]
  41c00e:	aas    
  41c00f:	mov    ebx,0x2ed48dc3
  41c014:	dec    esi
  41c015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c016:	push   0x57
  41c018:	xchg   ebx,eax
  41c019:	mov    ebp,0x6fd72f25
  41c01f:	pop    esi
  41c020:	jmp    0xe4348529
  41c025:	inc    edi
  41c026:	sub    eax,0x290419fe
  41c02b:	pop    ebx
  41c02c:	and    DWORD PTR [esi+ebp*8-0x194ff946],0x60
  41c034:	jmp    0x4d7d:0x2913b16c
  41c03b:	mov    ebp,0xdba6c9ae
  41c040:	sub    BYTE PTR [ecx-0x60f49f8d],al
  41c046:	push   ebx
  41c047:	lock mov ebx,DWORD PTR [edx]
  41c04a:	shr    BYTE PTR [ecx+0x27ea4588],1
  41c050:	jno    0x41c057
  41c052:	test   al,0x7a
  41c054:	and    eax,0x87577412
  41c059:	imul   esi,DWORD PTR [edi-0x2556b087],0x74c38dde
  41c063:	cmp    bl,BYTE PTR [ebp+esi*1+0x79]
  41c067:	aad    0x24
  41c069:	(bad)  
  41c06a:	int3   
  41c06b:	test   al,0x7
  41c06d:	loopne 0x41c02a
  41c06f:	jns    0x41c0ca
  41c071:	cmovp  esi,edx
  41c074:	ror    DWORD PTR [ebp+0x59b7bed1],cl
  41c07a:	outs   dx,DWORD PTR ss:[esi]
  41c07c:	pop    eax
  41c07d:	call   0x7e98109e
  41c082:	shl    dh,0x9a
  41c085:	ror    DWORD PTR [ebp+0x3e],cl
  41c088:	sub    edi,DWORD PTR [ebx]
  41c08a:	cli    
  41c08b:	iret   
  41c08c:	and    DWORD PTR [esi+0x24],esp
  41c08f:	retf   
  41c090:	sar    BYTE PTR [edi-0x1a],cl
  41c093:	in     al,dx
  41c094:	fadd   DWORD PTR [ebx]
  41c096:	or     ebp,DWORD PTR [esi-0x7]
  41c099:	arpl   si,si
  41c09b:	add    BYTE PTR [ebp-0x166e3bd2],0x4
  41c0a2:	xor    BYTE PTR [esi+0x73bea123],0x1e
  41c0a9:	shl    edx,1
  41c0ab:	pop    edi
  41c0ac:	mov    DWORD PTR [ecx-0x29],esp
  41c0af:	mov    bl,0x6a
  41c0b1:	xchg   esp,eax
  41c0b2:	and    al,0xfd
  41c0b4:	adc    DWORD PTR [esi-0x6b816a91],esp
  41c0ba:	inc    edx
  41c0bb:	and    eax,0x28974ba3
  41c0c0:	jg     0x41c112
  41c0c2:	cmp    BYTE PTR [edi-0x21665371],bl
  41c0c8:	inc    edi
  41c0c9:	fs int 0xb3
  41c0cc:	pop    ebp
  41c0cd:	adc    DWORD PTR [ebp+ebp*8+0x3d],esp
  41c0d1:	mov    edi,0x6476e221
  41c0d6:	mov    ebx,0xa6370559
  41c0db:	jne    0x41c08d
  41c0dd:	pusha  
  41c0de:	mov    edx,0x8ea0c9c0
  41c0e3:	pop    edi
  41c0e4:	enter  0xb52c,0x49
  41c0e8:	(bad)  
  41c0e9:	pop    ss
  41c0ea:	xrelease mov BYTE PTR [esi+0x52dea3fa],dh
  41c0f1:	xor    edi,ecx
  41c0f3:	inc    edx
  41c0f4:	push   es
  41c0f5:	push   es
  41c0f6:	push   es
  41c0f7:	and    eax,DWORD PTR [ebx-0x11]
  41c0fa:	stc    
  41c0fb:	or     al,BYTE PTR [edi-0x4607ba3f]
  41c101:	dec    ebx
  41c102:	and    DWORD PTR [ebx],edx
  41c104:	outs   dx,DWORD PTR ds:[esi]
  41c105:	push   ebp
  41c106:	pop    edx
  41c107:	jl     0x41c166
  41c109:	mov    ch,0xb7
  41c10b:	data16 test BYTE PTR [eax],bh
  41c10e:	add    al,0x3a
  41c110:	and    BYTE PTR [esi],dl
  41c112:	fs push ds
  41c114:	aam    0x56
  41c116:	jns    0x41c0f4
  41c118:	xchg   esi,eax
  41c119:	imul   esi,ebx,0x18
  41c11c:	stc    
  41c11d:	xor    al,0xd6
  41c11f:	or     bl,BYTE PTR [eax+0x20]
  41c122:	cmp    BYTE PTR [edx+0x8],dl
  41c125:	dec    ebp
  41c126:	mov    DWORD PTR [ebp+0x4c5b255c],0xb02b2b37
  41c130:	inc    ebp
  41c131:	pop    ss
  41c132:	es jmp 0x41c0e4
  41c135:	enter  0x8d7,0xf1
  41c139:	cmp    al,0x24
  41c13b:	or     cl,BYTE PTR [ecx]
  41c13d:	call   DWORD PTR [edx+0x58443fad]
  41c143:	mov    ebx,esp
  41c145:	adc    BYTE PTR [ebx-0x7],dh
  41c148:	test   BYTE PTR [esi+0x4c],dl
  41c14b:	test   ecx,0x4ffc175b
  41c151:	mov    edi,DWORD PTR [ebx+ebx*4-0x49]
  41c155:	fidivr DWORD PTR [ebx-0x8d8fc49]
  41c15b:	and    cl,dl
  41c15d:	ret    
  41c15e:	gs sar bh,1
  41c161:	push   es
  41c162:	mov    eax,ds:0x8c90aa4a
  41c167:	loope  0x41c10a
  41c169:	mov    dh,BYTE PTR [ebp+0x10]
  41c16c:	shl    BYTE PTR [esi*1-0x381970a0],cl
  41c173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c174:	sub    ebx,DWORD PTR [eax-0x75]
  41c177:	out    0x23,eax
  41c179:	jno    0x41c122
  41c17b:	mov    bh,0x9f
  41c17d:	add    DWORD PTR [edx-0x6a3d7f39],eax
  41c183:	ss out dx,eax
  41c185:	outs   dx,BYTE PTR ds:[esi]
  41c186:	mov    BYTE PTR [edi+0xa2e48c6],dh
  41c18c:	aad    0x83
  41c18e:	rcr    esp,0x7e
  41c191:	leave  
  41c192:	inc    eax
  41c193:	mov    ds:0x6c368f1a,eax
  41c198:	cmp    BYTE PTR [esi],ah
  41c19a:	repnz aaa 
  41c19c:	jge    0x41c14a
  41c19e:	gs ins DWORD PTR es:[edi],dx
  41c1a0:	jmp    0xa8ea:0x40b65aa1
  41c1a7:	mov    al,0xfd
  41c1a9:	out    0xc8,al
  41c1ab:	mov    eax,ds:0x17780bb7
  41c1b0:	sahf   
  41c1b1:	addr16 jmp 0xc83c:0x22f5101c
  41c1b9:	aas    
  41c1ba:	jl     0x41c202
  41c1bc:	repnz idiv bl
  41c1bf:	mov    edx,0x20e7acbf
  41c1c4:	pop    ecx
  41c1c5:	jb     0x41c207
  41c1c7:	jp     0x41c1b2
  41c1c9:	mov    ebp,0xdbb86ccf
  41c1cf:	mov    DWORD PTR [edx+0x30ad119a],esp
  41c1d5:	xor    al,0xae
  41c1d7:	stc    
  41c1d8:	daa    
  41c1d9:	pusha  
  41c1da:	adc    al,0x46
  41c1dc:	dec    edx
  41c1dd:	cmp    bl,ch
  41c1df:	neg    dh
  41c1e1:	call   0x648fb15c
  41c1e6:	mov    ah,0x77
  41c1e8:	test   eax,0xb13098ed
  41c1ed:	sbb    DWORD PTR [esp+ecx*8],esi
  41c1f0:	imul   ebx,edx,0x80db0c77
  41c1f6:	sub    ebx,edx
  41c1f8:	pop    edx
  41c1f9:	mov    eax,ecx
  41c1fb:	inc    ebp
  41c1fc:	lock push ss
  41c1fe:	call   0xaaaec42b
  41c203:	enter  0xda6,0x13
  41c207:	mov    al,ds:0x1e246fc
  41c20c:	fst    st(5)
  41c20e:	sar    BYTE PTR [ecx+eiz*4-0x5d],0x56
  41c213:	jne    0x41c243
  41c215:	nop
  41c216:	push   ebp
  41c217:	out    0x7c,eax
  41c219:	xchg   DWORD PTR ds:0x44ae4ead,ebp
  41c21f:	adc    ebp,esp
  41c221:	mov    eax,ds:0xc939334c
  41c226:	jecxz  0x41c268
  41c228:	mov    dl,0x1b
  41c22a:	jmp    0xb306:0x617fb9ed
  41c231:	into   
  41c232:	sahf   
  41c233:	(bad)  
  41c234:	xchg   ecx,eax
  41c235:	jl     0x41c22a
  41c237:	fisubr WORD PTR [eax-0x30]
  41c23a:	(bad)  
  41c23b:	mov    ch,0xbe
  41c23d:	or     ebp,DWORD PTR [ecx]
  41c23f:	mov    ds:0x85fcf1bd,eax
  41c244:	jg     0x41c22f
  41c246:	rol    BYTE PTR [eax+0x263a683],0xe6
  41c24d:	(bad)  
  41c24e:	jecxz  0x41c212
  41c250:	test   al,0x8c
  41c252:	lahf   
  41c253:	mov    eax,ds:0x5b58cd2
  41c258:	dec    ecx
  41c259:	gs mov edx,esp
  41c25c:	xchg   edi,eax
  41c25d:	ins    DWORD PTR es:[edi],dx
  41c25e:	xor    eax,0xe015cd33
  41c263:	out    dx,eax
  41c264:	xchg   ebp,eax
  41c265:	lock pop esi
  41c267:	sub    BYTE PTR [ecx-0x45],ah
  41c26a:	js     0x41c1f6
  41c26c:	imul   BYTE PTR [esi]
  41c26e:	dec    esi
  41c26f:	mov    esi,0x71b27550
  41c274:	sahf   
  41c275:	inc    esp
  41c276:	je     0x41c2f0
  41c278:	mov    eax,ds:0x716870df
  41c27d:	mov    ah,0x28
  41c27f:	jecxz  0x41c2c7
  41c281:	jmp    0x41c2af
  41c283:	ret    
  41c284:	mov    dh,0x36
  41c286:	add    dl,ah
  41c288:	pop    esi
  41c289:	pop    ss
  41c28a:	fwait
  41c28b:	mov    eax,ds:0x16368fd1
  41c290:	or     cl,ah
  41c292:	fcom   DWORD PTR [ebx-0x3c51ade1]
  41c298:	cmp    esp,ecx
  41c29a:	jnp    0x41c2dc
  41c29c:	jecxz  0x41c305
  41c29e:	ins    BYTE PTR es:[edi],dx
  41c29f:	inc    esp
  41c2a0:	jmp    0xa1e66c7c
  41c2a5:	xor    bl,ch
  41c2a7:	sub    al,0xa4
  41c2a9:	xchg   DWORD PTR [ecx],esp
  41c2ab:	loopne 0x41c308
  41c2ad:	iret   
  41c2ae:	pusha  
  41c2af:	ret    0xa7dc
  41c2b2:	outs   dx,DWORD PTR ds:[esi]
  41c2b3:	aam    0x99
  41c2b5:	mov    al,ds:0x6c1a36d
  41c2ba:	bound  esi,QWORD PTR [ebx-0x2d4ccd69]
  41c2c0:	fist   DWORD PTR ds:0xfc81a882
  41c2c6:	fdivr  DWORD PTR [eax+0x46da0f95]
  41c2cc:	inc    eax
  41c2cd:	repz sbb DWORD PTR [edi+0x2e],esp
  41c2d1:	lds    ebx,FWORD PTR [edx+0x692184bb]
  41c2d7:	mov    ecx,0x516cdec8
  41c2dc:	push   ecx
  41c2dd:	pop    ss
  41c2de:	in     eax,0x18
  41c2e0:	or     al,BYTE PTR [ecx-0x71]
  41c2e3:	sub    eax,0x8c574ae6
  41c2e8:	pop    ecx
  41c2e9:	sbb    DWORD PTR [ecx],ebx
  41c2eb:	outs   dx,BYTE PTR ds:[esi]
  41c2ec:	or     DWORD PTR [eax+0x7d92c20a],ebp
  41c2f2:	cmovg  edx,DWORD PTR [edx]
  41c2f5:	jbe    0x41c317
  41c2f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2f8:	retf   
  41c2f9:	sub    al,0x22
  41c2fb:	je     0x41c2c6
  41c2fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2fe:	adc    al,0xce
  41c300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c301:	daa    
  41c302:	jno    0x41c32e
  41c304:	sbb    BYTE PTR [eax],dh
  41c306:	ret    
  41c307:	mov    eax,ds:0x6ffa17f9
  41c30c:	aaa    
  41c30d:	shl    esi,1
  41c30f:	call   0xa9174587
  41c314:	cmp    DWORD PTR [eax+0x5e3922ea],ecx
  41c31a:	lock push ebx
  41c31c:	pushf  
  41c31d:	add    DWORD PTR [edi+0x494a6f9a],edx
  41c323:	mov    bh,0x76
  41c325:	dec    eax
  41c326:	xor    ebx,DWORD PTR [edx+esi*2+0x3b06185d]
  41c32d:	inc    esp
  41c32e:	mov    esp,0x416425de
  41c333:	jb     0x41c370
  41c335:	mov    ah,BYTE PTR [ecx]
  41c337:	iret   
  41c338:	xor    ecx,DWORD PTR [eax]
  41c33a:	adc    eax,0xd6f8bcc4
  41c33f:	jns    0x41c383
  41c341:	jo     0x41c326
  41c343:	mov    ds:0x1a6ba7d1,al
  41c348:	imul   ebp,eax,0xc5cabaa6
  41c34e:	jns    0x41c375
  41c350:	scas   al,BYTE PTR es:[edi]
  41c351:	push   edx
  41c352:	fdivr  st,st(6)
  41c354:	mov    ebx,0x5b156da4
  41c359:	pop    ds
  41c35a:	daa    
  41c35b:	sbb    BYTE PTR [ecx-0x1d],ch
  41c35e:	xchg   ebx,esp
  41c360:	clc    
  41c361:	(bad)  
  41c362:	imul   eax,DWORD PTR [edi-0x1d],0x1e15051e
  41c369:	add    BYTE PTR [ebp-0x60],dl
  41c36c:	xor    ebx,DWORD PTR [ebx]
  41c36e:	loop   0x41c2fa
  41c370:	das    
  41c371:	inc    ebx
  41c372:	sub    DWORD PTR [ebx+edx*2],esp
  41c375:	cmp    DWORD PTR [ecx+0x7198f1e9],eax
  41c37b:	daa    
  41c37c:	arpl   WORD PTR [esi],bp
  41c37e:	retf   
  41c37f:	adc    al,0x91
  41c381:	(bad)  
  41c382:	jne    0x41c3a2
  41c384:	jno    0x41c3e9
  41c386:	xchg   BYTE PTR [esi+edi*8-0x18],dh
  41c38a:	sub    al,0x37
  41c38c:	pop    esp
  41c38d:	xor    ebx,DWORD PTR [eax+0x6a]
  41c390:	jnp    0x41c3d6
  41c392:	repnz xor ecx,edi
  41c395:	sahf   
  41c396:	cmp    DWORD PTR [esi],eax
  41c398:	cmc    
  41c399:	outs   dx,BYTE PTR ds:[esi]
  41c39a:	cmp    ebx,eax
  41c39c:	sbb    BYTE PTR [eax],al
  41c39e:	lods   al,BYTE PTR ds:[esi]
  41c39f:	sbb    BYTE PTR ds:0xbd69f579,bh
  41c3a5:	jl     0x41c34e
  41c3a7:	imul   esi,DWORD PTR [ebp+0x69],0xffffffbb
  41c3ab:	addr16 jmp 0xa96a:0x9719956f
  41c3b3:	ja     0x41c428
  41c3b5:	daa    
  41c3b6:	mov    ecx,0x8194bfca
  41c3bb:	fistp  QWORD PTR [ebp-0x5ca244cf]
  41c3c1:	push   ebx
  41c3c2:	or     ebx,DWORD PTR [ecx]
  41c3c4:	cvttps2pi mm5,QWORD PTR [eax-0x10]
  41c3c8:	ret    
  41c3c9:	xor    BYTE PTR ds:0xd9e38529,al
  41c3cf:	xchg   ebp,eax
  41c3d0:	mov    edi,0x6fd29677
  41c3d5:	jg     0x41c365
  41c3d7:	pop    eax
  41c3d8:	scas   eax,DWORD PTR es:[edi]
  41c3d9:	sbb    ah,bh
  41c3db:	dec    ebp
  41c3dc:	popf   
  41c3dd:	xchg   esi,eax
  41c3de:	push   edi
  41c3df:	or     DWORD PTR cs:[edi+0xff5cff2],ebp
  41c3e6:	sub    DWORD PTR [edi+0x630d1c8d],edx
  41c3ec:	or     BYTE PTR [ebx-0x6c],dh
  41c3ef:	in     al,0x56
  41c3f1:	jne    0x41c471
  41c3f3:	sub    BYTE PTR [ebx-0x692b43e9],dl
  41c3f9:	jo     0x41c46c
  41c3fb:	add    esp,ebp
  41c3fd:	xlat   BYTE PTR ds:[ebx]
  41c3fe:	xlat   BYTE PTR ds:[ebx]
  41c3ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c400:	or     DWORD PTR [ecx+0x282a64e1],0x4f
  41c407:	sahf   
  41c408:	test   eax,0xebd3601c
  41c40d:	cmp    DWORD PTR [eax-0x7e],0xffffffa1
  41c411:	xchg   ebx,eax
  41c412:	test   al,0x3b
  41c414:	xor    ebp,DWORD PTR [ecx+0x79ee1e11]
  41c41a:	mov    eax,ds:0x454e375b
  41c41f:	pop    ds
  41c420:	(bad)  
  41c421:	arpl   WORD PTR [esi],ax
  41c423:	cdq    
  41c424:	loope  0x41c4a0
  41c426:	scas   eax,DWORD PTR es:[edi]
  41c427:	jecxz  0x41c3ed
  41c429:	jmp    0xe54f129a
  41c42e:	or     al,0x51
  41c431:	sbb    eax,0x5ee876a4
  41c436:	push   ebp
  41c437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c438:	and    BYTE PTR [ecx],ah
  41c43a:	mov    ebp,0x1861ba90
  41c43f:	stos   DWORD PTR es:[edi],eax
  41c440:	arpl   WORD PTR ds:[esi-0x55f30cfc],bp
  41c447:	adc    al,0x5
  41c449:	add    al,0xf2
  41c44b:	add    ecx,DWORD PTR [ecx+0xb]
  41c44e:	in     eax,0x5d
  41c450:	iret   
  41c451:	and    bl,dh
  41c453:	aad    0xa6
  41c455:	add    DWORD PTR [eax],ecx
  41c457:	mov    bl,0x60
  41c459:	in     al,0xd2
  41c45b:	and    al,0x9d
  41c45d:	dec    dx
  41c45f:	mov    dh,0x56
  41c461:	xchg   esi,esi
  41c463:	sub    bl,BYTE PTR [esi-0x71d6cba]
  41c469:	jae    0x41c483
  41c46b:	in     eax,dx
  41c46c:	adc    eax,DWORD PTR cs:[ebx+0x414f85af]
  41c473:	pop    ebx
  41c474:	mov    esp,0x7378f77f
  41c479:	mov    eax,0x61b11026
  41c47e:	sbb    BYTE PTR [eax-0x37877a8b],bh
  41c484:	ins    DWORD PTR es:[edi],dx
  41c485:	jo     0x41c461
  41c487:	dec    eax
  41c488:	inc    eax
  41c489:	aam    0x13
  41c48b:	and    al,0xe0
  41c48d:	repz jnp 0x41c438
  41c490:	adc    BYTE PTR [edx-0x50],bh
  41c493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c494:	inc    eax
  41c495:	or     ch,BYTE PTR [ebp+0x237654b7]
  41c49b:	sub    bh,BYTE PTR [edi+0x4ccc5b4e]
  41c4a1:	push   edx
  41c4a2:	iret   
  41c4a3:	xor    eax,0x5f6ec53f
  41c4a8:	inc    ecx
  41c4a9:	sub    eax,0x8aed8fca
  41c4ae:	lods   al,BYTE PTR ds:[esi]
  41c4af:	es push esi
  41c4b1:	pop    eax
  41c4b2:	sbb    ah,dh
  41c4b4:	adc    dh,dh
  41c4b6:	mov    esp,0x5ffb6b75
  41c4bb:	popf   
  41c4bc:	cmp    dh,BYTE PTR [ebx]
  41c4be:	dec    esp
  41c4bf:	nop
  41c4c0:	pop    edi
  41c4c1:	out    0x5c,eax
  41c4c3:	cmp    BYTE PTR [ecx+0x51],ah
  41c4c6:	push   ebx
  41c4c7:	jmp    0x41c540
  41c4c9:	inc    ebp
  41c4ca:	in     eax,dx
  41c4cb:	mov    eax,esi
  41c4cd:	mov    ds:0x468954cf,al
  41c4d2:	rdpmc  
  41c4d4:	jno    0x41c472
  41c4d6:	jns    0x41c506
  41c4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4d9:	in     eax,dx
  41c4da:	test   eax,0xbb84077f
  41c4df:	add    eax,0x9f2846d9
  41c4e4:	sti    
  41c4e5:	jb     0x41c468
  41c4e7:	ror    DWORD PTR [ecx+eax*8-0x10],cl
  41c4eb:	xor    eax,0x6202d0cd
  41c4f0:	cmp    eax,DWORD PTR [eax-0x6f]
  41c4f3:	jbe    0x41c4ac
  41c4f5:	lods   al,BYTE PTR ds:[esi]
  41c4f6:	or     al,0xa5
  41c4f8:	test   al,0xee
  41c4fa:	sti    
  41c4fb:	jmp    0xeb46243e
  41c500:	sahf   
  41c501:	adc    BYTE PTR [edx+eax*4+0x71],ah
  41c505:	mov    ah,0xe3
  41c507:	sbb    eax,0xf7d42403
  41c50c:	test   al,0xcf
  41c50e:	mov    ch,0x2
  41c510:	add    ebx,DWORD PTR [ebx-0x31]
  41c513:	xchg   DWORD PTR [esi],ebp
  41c515:	inc    ebx
  41c516:	mov    dl,0xd5
  41c519:	sub    eax,0xbae2e079
  41c51e:	or     BYTE PTR [ebx],bl
  41c520:	leave  
  41c521:	push   edi
  41c522:	sbb    edx,DWORD PTR [ecx-0x3af82735]
  41c528:	mov    eax,ds:0x57485600
  41c52d:	sub    eax,0x74ab108d
  41c532:	xchg   edi,eax
  41c533:	push   eax
  41c534:	scas   eax,DWORD PTR es:[edi]
  41c535:	clc    
  41c536:	popf   
  41c537:	sub    ebp,ecx
  41c539:	sub    BYTE PTR [eax+0x68],al
  41c53c:	inc    ebx
  41c53d:	adc    cl,ch
  41c53f:	popf   
  41c540:	lea    esi,[edx]
  41c542:	pop    edi
  41c543:	pushf  
  41c544:	shl    BYTE PTR [ebx+0x3c],0x6d
  41c548:	jp     0x41c579
  41c54a:	mov    bh,0x77
  41c54c:	lods   eax,DWORD PTR ds:[esi]
  41c54d:	std    
  41c54e:	pop    edx
  41c54f:	lock sub BYTE PTR [ecx-0x11ad06be],ch
  41c556:	ficom  WORD PTR [esi-0xffcf354]
  41c55c:	mov    esi,DWORD PTR [eax-0x7618dac3]
  41c562:	add    al,0xd9
  41c564:	test   al,0x9d
  41c566:	mov    esp,0xee42ee02
  41c56b:	push   cs
  41c56c:	xchg   ebp,eax
  41c56d:	mov    bl,ch
  41c56f:	dec    ecx
  41c570:	lahf   
  41c571:	jmp    0x41c5cc
  41c573:	cmp    DWORD PTR [edi-0x25],esp
  41c576:	clc    
  41c577:	repz jne 0x41c5b0
  41c57a:	ror    DWORD PTR gs:[edi+0x49],cl
  41c57e:	xor    eax,DWORD PTR ds:0x49738c7b
  41c584:	ret    
  41c585:	push   ebx
  41c586:	test   DWORD PTR [edx-0x7e],edx
  41c589:	dec    ecx
  41c58a:	dec    ebx
  41c58b:	dec    BYTE PTR [ebp+0x38]
  41c58e:	xor    ch,bl
  41c590:	cdq    
  41c591:	jmp    0x41c5b5
  41c593:	jecxz  0x41c5f0
  41c595:	xchg   edi,eax
  41c596:	push   ds
  41c597:	scas   al,BYTE PTR es:[edi]
  41c598:	test   DWORD PTR [ebx+ecx*2],esi
  41c59b:	pop    esi
  41c59c:	xchg   esi,eax
  41c59d:	pop    esi
  41c59e:	loope  0x41c5a3
  41c5a0:	add    bh,cl
  41c5a2:	xchg   ebx,eax
  41c5a3:	sub    al,0xee
  41c5a5:	mov    ch,0x43
  41c5a7:	mov    al,ds:0x54af73c1
  41c5ac:	(bad)  
  41c5ae:	fnstcw WORD PTR [ebp+0x23]
  41c5b1:	iret   
  41c5b2:	arpl   WORD PTR [eax-0x26],sp
  41c5b5:	stos   DWORD PTR es:[edi],eax
  41c5b6:	fdiv   QWORD PTR [esi-0x6b2471fe]
  41c5bc:	push   cs
  41c5bd:	jno    0x41c563
  41c5bf:	fmul   st(3),st
  41c5c1:	push   cs
  41c5c2:	jle    0x41c574
  41c5c4:	fcom   DWORD PTR [edx]
  41c5c6:	cmp    BYTE PTR [edi],dl
  41c5c8:	xchg   esp,esp
  41c5ca:	fs hlt 
  41c5cc:	jl     0x41c646
  41c5ce:	aaa    
  41c5cf:	lods   al,BYTE PTR ds:[esi]
  41c5d0:	test   al,0x9d
  41c5d2:	das    
  41c5d3:	xlat   BYTE PTR cs:[ebx]
  41c5d5:	add    edi,ecx
  41c5d7:	mov    ebx,0xea63b94b
  41c5dc:	jmp    0xcaf:0x8726fc3c
  41c5e3:	push   ebp
  41c5e4:	and    dl,BYTE PTR [esi-0x28]
  41c5e7:	std    
  41c5e8:	icebp  
  41c5e9:	aas    
  41c5ea:	push   eax
  41c5eb:	sub    esp,DWORD PTR [ebp+0x17156308]
  41c5f1:	shl    BYTE PTR [esi-0x20],0xda
  41c5f5:	push   edi
  41c5f6:	cmp    ch,BYTE PTR [eax]
  41c5f8:	push   0x2ba1894f
  41c5fd:	xor    eax,0xda89ae17
  41c602:	cmp    bh,dh
  41c604:	add    dh,cl
  41c606:	jne    0x41c613
  41c608:	fst    DWORD PTR [ebx+0x28e3690]
  41c60f:	js     0x41c652
  41c611:	lods   eax,DWORD PTR ds:[esi]
  41c612:	gs out 0xe1,eax
  41c615:	push   ecx
  41c616:	cld    
  41c617:	pop    es
  41c618:	or     edx,edx
  41c61a:	sub    eax,0x44960318
  41c61f:	ficom  DWORD PTR [ecx-0x46]
  41c622:	push   0x3e
  41c624:	arpl   WORD PTR [ecx+ebp*4-0x2c23d192],bx
  41c62b:	fadd   DWORD PTR [ecx+eiz*1-0x2b0d582a]
  41c632:	and    BYTE PTR [ebp+0x39],ah
  41c635:	aam    0xb1
  41c637:	cli    
  41c638:	sub    BYTE PTR [ebx*4-0x248d2958],dh
  41c63f:	cli    
  41c640:	out    dx,eax
  41c641:	out    0xe2,eax
  41c643:	cdq    
  41c644:	cmp    al,0x79
  41c646:	das    
  41c647:	cmc    
  41c648:	pop    esp
  41c649:	and    dh,BYTE PTR [esi]
  41c64b:	add    ebp,edx
  41c64d:	pop    eax
  41c64e:	je     0x41c64e
  41c650:	and    al,BYTE PTR [ecx+0x7f087ea7]
  41c656:	ss jb  0x41c63e
  41c659:	sub    BYTE PTR ss:[edi-0x2e],al
  41c65d:	cmp    al,dl
  41c65f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c660:	xchg   ebp,eax
  41c661:	arpl   WORD PTR gs:[edx+0x27],bx
  41c665:	push   0x1b4c5624
  41c66a:	xchg   ecx,eax
  41c66b:	xchg   ecx,eax
  41c66c:	(bad)  
  41c66d:	dec    eax
  41c66e:	shl    BYTE PTR [edi],1
  41c670:	out    dx,eax
  41c671:	call   0x9fdc92cf
  41c676:	push   0xffffff96
  41c678:	pop    es
  41c679:	clc    
  41c67a:	cmp    eax,0xa4506304
  41c67f:	imul   esp,edx,0xeecfc74c
  41c685:	xchg   ebp,eax
  41c686:	xor    al,0x8d
  41c688:	jae    0x41c654
  41c68a:	(bad)  
  41c68b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c68c:	lea    edx,[edx+edi*8-0x6b32ac69]
  41c693:	sbb    eax,0x204b5745
  41c698:	repnz mov edx,0xc9c94775
  41c69e:	rcl    ecx,1
  41c6a0:	adc    BYTE PTR [edx-0x6fc03d4],al
  41c6a6:	and    BYTE PTR [ebp+0x52],dh
  41c6a9:	and    eax,DWORD PTR [ecx]
  41c6ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6ac:	pop    ebx
  41c6ad:	les    esi,FWORD PTR [eax]
  41c6af:	das    
  41c6b0:	adc    DWORD PTR [ecx+0x57],ecx
  41c6b3:	mov    ah,0x48
  41c6b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6b6:	mov    esp,0x87f97728
  41c6bb:	sbb    ebp,edi
  41c6bd:	aaa    
  41c6be:	ja     0x41c6be
  41c6c0:	mov    eax,ds:0x2d17a497
  41c6c5:	mov    eax,ds:0x6da66b35
  41c6ca:	dec    edi
  41c6cb:	jmp    0x41c692
  41c6cd:	xchg   edi,eax
  41c6ce:	xor    eax,DWORD PTR [eax]
  41c6d0:	mov    ah,0x84
  41c6d2:	jnp    0x41c732
  41c6d4:	loope  0x41c70e
  41c6d6:	dec    ecx
  41c6d7:	sbb    DWORD PTR [edx-0x45],0x9ca7412b
  41c6de:	xlat   BYTE PTR ds:[ebx]
  41c6df:	ret    0x41d7
  41c6e2:	lods   eax,DWORD PTR ds:[esi]
  41c6e3:	dec    eax
  41c6e4:	jge    0x41c6e8
  41c6e6:	fadd   st(0),st
  41c6e8:	imul   edx,DWORD PTR [ebp-0x44],0x49
  41c6ec:	stos   DWORD PTR es:[edi],eax
  41c6ed:	jp     0x41c6ff
  41c6ef:	mov    ebp,0x5b4477c2
  41c6f4:	mov    dh,BYTE PTR [ecx-0x80]
  41c6f7:	inc    ecx
  41c6f8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6fa:	sbb    esp,0x9e21ca91
  41c700:	les    eax,FWORD PTR [ecx-0xd]
  41c703:	out    0x4b,al
  41c705:	jge    0x41c6c3
  41c707:	and    esp,DWORD PTR [ecx-0x33]
  41c70a:	inc    eax
  41c70b:	inc    ecx
  41c70c:	mov    ebp,0xb860d371
  41c711:	dec    eax
  41c712:	mov    edx,0x36d72e7b
  41c717:	pop    edi
  41c718:	ins    BYTE PTR es:[edi],dx
  41c719:	fdiv   DWORD PTR [ebx-0x35ba8168]
  41c71f:	aad    0xfc
  41c721:	div    ebp
  41c723:	iret   
  41c724:	sbb    BYTE PTR [ebx],bl
  41c726:	inc    edx
  41c727:	push   ebp
  41c728:	mov    bl,0x43
  41c72a:	adc    BYTE PTR [edi],0xa
  41c72d:	in     al,0xe8
  41c72f:	add    al,cl
  41c731:	sub    eax,0x77e875ac
  41c736:	inc    eax
  41c737:	xchg   edx,eax
  41c738:	adc    DWORD PTR [ebx+0x46baeae5],eax
  41c73e:	push   eax
  41c73f:	mov    ebx,DWORD PTR [edi+0x29ac6752]
  41c745:	enter  0x9f1e,0xaf
  41c749:	test   cl,bh
  41c74b:	pop    esp
  41c74c:	pop    eax
  41c74d:	mov    ebp,0x8cd9956e
  41c752:	sub    edi,DWORD PTR [ecx]
  41c754:	js     0x41c7bd
  41c756:	clc    
  41c757:	in     al,dx
  41c758:	aad    0x71
  41c75a:	or     al,0x51
  41c75c:	loop   0x41c750
  41c75e:	inc    esp
  41c75f:	xchg   ecx,eax
  41c760:	xchg   ebp,eax
  41c761:	(bad)  
  41c763:	sbb    cl,BYTE PTR [edi-0x36e0c313]
  41c769:	xor    eax,0x4f9d8618
  41c76e:	and    eax,0x50ef6183
  41c773:	(bad)  
  41c774:	gs je  0x41c7cf
  41c777:	cmp    al,0x8b
  41c779:	sub    bh,ah
  41c77b:	rcr    BYTE PTR [edx+0xe4f886a],cl
  41c781:	dec    ebp
  41c782:	(bad)  
  41c783:	jmp    0x41c705
  41c785:	mov    esi,DWORD PTR ds:0xb9ca4f73
  41c78b:	inc    edi
  41c78c:	push   edi
  41c78d:	lods   eax,DWORD PTR ds:[esi]
  41c78e:	or     al,0xb5
  41c790:	xlat   BYTE PTR ds:[ebx]
  41c791:	arpl   WORD PTR [ebp+0x30],sp
  41c794:	mov    ?,ecx
  41c796:	ret    
  41c797:	push   esi
  41c798:	ficomp DWORD PTR [eax+0x4bd3f433]
  41c79e:	dec    esi
  41c79f:	leave  
  41c7a0:	retf   0x4c5c
  41c7a3:	(bad)  
  41c7a4:	lods   eax,DWORD PTR ds:[esi]
  41c7a5:	xor    al,al
  41c7a7:	and    DWORD PTR [ebx+0x36],ebx
  41c7aa:	test   al,0x91
  41c7ac:	pop    ss
  41c7ad:	xor    cl,BYTE PTR [esi+0x25]
  41c7b0:	in     al,dx
  41c7b1:	pop    ecx
  41c7b2:	or     BYTE PTR [ecx-0xe],bh
  41c7b5:	ret    0x5f05
  41c7b8:	(bad)  
  41c7b9:	mov    edx,0xd422ce9e
  41c7be:	adc    BYTE PTR [ebp+0x11c9ce8d],ah
  41c7c4:	aam    0xfa
  41c7c6:	cwde   
  41c7c7:	fnstenv [edi+0x15890df3]
  41c7cd:	mov    bl,0x68
  41c7cf:	mov    cl,0x3c
  41c7d1:	and    ebx,DWORD PTR [edi+eax*2-0x99836fe]
  41c7d8:	sbb    ch,0xea
  41c7db:	cld    
  41c7dc:	call   0xec7f:0xb0af5716
  41c7e3:	std    
  41c7e4:	daa    
  41c7e5:	ror    DWORD PTR [ecx-0x6c11acc8],0xb7
  41c7ec:	dec    eax
  41c7ed:	pop    ds
  41c7ee:	cmp    dh,dl
  41c7f0:	adc    eax,0x82c1d93
  41c7f5:	popa   
  41c7f6:	fnstenv [ebp-0x66]
  41c7f9:	mov    eax,0x87d96893
  41c7fe:	stc    
  41c7ff:	dec    esi
  41c800:	ret    
  41c801:	pop    edx
  41c802:	lock sub ch,BYTE PTR [ecx]
  41c805:	jno    0x41c847
  41c807:	stc    
  41c808:	sbb    eax,0xf8cffa37
  41c80d:	inc    eax
  41c80e:	inc    ebp
  41c80f:	xchg   edx,eax
  41c810:	arpl   WORD PTR [ecx+0x3ee2b664],bp
  41c816:	retf   0x6630
  41c819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c81a:	popf   
  41c81b:	dec    esp
  41c81c:	sbb    DWORD PTR [ecx],0xe23d99b7
  41c822:	xlat   BYTE PTR ds:[ebx]
  41c823:	outs   dx,DWORD PTR ds:[esi]
  41c824:	sbb    cl,BYTE PTR [ebx-0x3d]
  41c827:	sbb    DWORD PTR [esp+ecx*8+0x41],edi
  41c82b:	mov    ecx,0x19bf243c
  41c830:	pop    esp
  41c831:	(bad)  
  41c832:	(bad)  
  41c833:	out    dx,al
  41c834:	or     ebx,edx
  41c836:	in     al,0x66
  41c838:	daa    
  41c839:	pop    ebx
  41c83a:	or     al,0x91
  41c83c:	out    0xe,eax
  41c83e:	ret    
  41c83f:	pop    ebp
  41c840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c841:	lea    edi,[edi+ecx*8-0x69d7df18]
  41c848:	pop    edx
  41c849:	lods   eax,DWORD PTR ds:[esi]
  41c84a:	cmp    dl,ah
  41c84c:	xor    cl,BYTE PTR [edi-0x7b]
  41c84f:	call   0x9395:0x88a62246
  41c856:	out    0x16,eax
  41c858:	mov    ?,WORD PTR [eax+0x6a]
  41c85b:	call   0xf2aa:0x68bbc814
  41c862:	or     DWORD PTR [eax],0x70
  41c865:	mov    edx,0x5e60d80a
  41c86a:	push   DWORD PTR [edi]
  41c86c:	fdiv   st(5),st
  41c86e:	fidiv  DWORD PTR [esi-0x3991f38d]
  41c874:	mov    eax,ds:0xb7b9f83d
  41c879:	enter  0xba98,0x1b
  41c87d:	in     eax,dx
  41c87e:	xchg   esi,eax
  41c87f:	mov    eax,DWORD PTR [edx+0x31]
  41c882:	aad    0x43
  41c884:	(bad)  
  41c887:	cli    
  41c888:	lea    edi,[esi+0x2a]
  41c88b:	pop    es
  41c88c:	arpl   dx,bx
  41c88e:	mov    WORD PTR [edx],gs
  41c890:	cld    
  41c891:	jl     0x41c8f7
  41c893:	ins    DWORD PTR es:[edi],dx
  41c894:	inc    edi
  41c895:	jmp    0x5a38:0x635780c9
  41c89c:	(bad)  
  41c89d:	repz shr DWORD PTR [ebp+edx*4+0x58035d95],0x26
  41c8a6:	fld    QWORD PTR [esi+0x5ceefc69]
  41c8ac:	mov    edi,0xb87970f
  41c8b1:	test   BYTE PTR [ebx],0xf2
  41c8b4:	bound  ebx,QWORD PTR [eax-0x48]
  41c8b7:	stos   BYTE PTR es:[edi],al
  41c8b8:	mov    ds:0x84a4558a,al
  41c8bd:	sbb    dh,cl
  41c8bf:	dec    esi
  41c8c0:	pop    ebx
  41c8c1:	lods   al,BYTE PTR ds:[esi]
  41c8c2:	sub    bl,BYTE PTR [edi]
  41c8c4:	js     0x41c8ed
  41c8c6:	int3   
  41c8c7:	aas    
  41c8c8:	jb     0x41c886
  41c8ca:	imul   DWORD PTR ds:0x8ba676e4
  41c8d0:	pop    es
  41c8d1:	push   edx
  41c8d2:	adc    al,0x7
  41c8d4:	ins    DWORD PTR es:[edi],dx
  41c8d5:	pop    ss
  41c8d6:	cwde   
  41c8d7:	rcr    sp,cl
  41c8da:	push   0xa49ebb3
  41c8df:	pop    esp
  41c8e0:	mov    bh,0xbf
  41c8e2:	jg     0x41c8e2
  41c8e4:	cmc    
  41c8e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8e6:	inc    esi
  41c8e7:	rcl    DWORD PTR [ecx+0x6e57110e],cl
  41c8ed:	cmp    al,0xe5
  41c8ef:	mov    ebx,DWORD PTR [edx+0xe]
  41c8f2:	and    cl,ch
  41c8f4:	jmp    0x41c887
  41c8f6:	push   es
  41c8f7:	mov    ecx,DWORD PTR [esi+0x2ae98ab6]
  41c8fd:	cmp    eax,0xf2a53959
  41c902:	mov    bh,0xcd
  41c904:	push   ebx
  41c905:	xchg   ecx,eax
  41c906:	jne    0x41c96c
  41c908:	push   edx
  41c909:	or     esp,DWORD PTR [ecx]
  41c90b:	dec    esi
  41c90c:	xor    BYTE PTR [esi+0x5d],al
  41c90f:	mov    DWORD PTR [eax-0x4f],esp
  41c912:	enter  0x7f7b,0xe8
  41c916:	cmp    al,BYTE PTR [edi+0x6b]
  41c919:	les    ecx,FWORD PTR [esi+0x62c26426]
  41c91f:	or     al,0x2d
  41c921:	mov    dl,0xe2
  41c923:	fstp   DWORD PTR [edx]
  41c925:	loop   0x41c96c
  41c927:	(bad)  
  41c928:	repnz test BYTE PTR gs:[edi-0x6c],bh
  41c92d:	xchg   edi,eax
  41c92e:	inc    ebx
  41c92f:	add    DWORD PTR [eax-0x50],ecx
  41c932:	in     eax,dx
  41c933:	ret    
  41c934:	push   ebx
  41c935:	push   eax
  41c936:	jae    0x41c8ec
  41c938:	fisubr DWORD PTR [edi]
  41c93a:	fwait
  41c93b:	adc    al,0x48
  41c93d:	test   BYTE PTR [esi-0x4102331d],cl
  41c943:	mov    edi,0x5fd588f
  41c948:	xor    ch,BYTE PTR [edi+0x2a]
  41c94b:	adc    ch,al
  41c94d:	in     al,dx
  41c94e:	cmc    
  41c94f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c950:	mov    bh,0x93
  41c952:	fistp  QWORD PTR [edi+0x16a97ddf]
  41c958:	dec    ebp
  41c959:	push   ss
  41c95a:	ss push 0x51
  41c95d:	inc    edi
  41c95e:	cmp    bl,dh
  41c960:	add    DWORD PTR [ecx-0x4e7d7034],edi
  41c966:	and    ebp,ebp
  41c968:	push   eax
  41c969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c96a:	xchg   esi,eax
  41c96b:	das    
  41c96c:	inc    edx
  41c96d:	rcl    DWORD PTR [edi+0x74],1
  41c970:	xlat   BYTE PTR ds:[ebx]
  41c971:	jbe    0x41c9aa
  41c973:	test   eax,0xc411f04c
  41c978:	ret    0xae55
  41c97b:	and    bl,BYTE PTR [edx+eiz*1-0x67e8d917]
  41c982:	xor    BYTE PTR [edx+0x62],bh
  41c985:	cmp    al,BYTE PTR [ecx+0xe48d94]
  41c98b:	cli    
  41c98c:	leave  
  41c98d:	pusha  
  41c98e:	adc    cl,al
  41c990:	xor    eax,0x933f3efe
  41c995:	pop    ds
  41c996:	aad    0xe0
  41c998:	dec    ecx
  41c999:	mov    cl,BYTE PTR [eax-0x73]
  41c99c:	mov    al,0xe5
  41c99e:	stos   DWORD PTR es:[edi],eax
  41c99f:	adc    BYTE PTR [ecx+0x71],ah
  41c9a2:	push   ds
  41c9a3:	inc    esp
  41c9a4:	xor    BYTE PTR [esi-0x1b],bh
  41c9a7:	sub    eax,0xd3655e12
  41c9ac:	aam    0x8d
  41c9ae:	adc    eax,0xa0ac9fd
  41c9b3:	jmp    0x41c99d
  41c9b5:	mov    BYTE PTR [ecx],ch
  41c9b7:	outs   dx,BYTE PTR fs:[esi]
  41c9b9:	jg     0x41ca38
  41c9bb:	jbe    0x41ca0a
  41c9bd:	and    BYTE PTR [eax],bh
  41c9bf:	aas    
  41c9c0:	cmp    edx,ecx
  41c9c2:	mov    BYTE PTR [ecx-0x66dcb5c9],bl
  41c9c8:	lock scas al,BYTE PTR es:[edi]
  41c9ca:	inc    eax
  41c9cb:	dec    edi
  41c9cc:	test   edx,ecx
  41c9ce:	mov    edx,0x574801b7
  41c9d3:	icebp  
  41c9d4:	or     bl,BYTE PTR [esp+ecx*4]
  41c9d7:	sub    dl,0xb9
  41c9da:	int    0x0
  41c9dc:	outs   dx,DWORD PTR ds:[esi]
  41c9dd:	xor    al,0x79
  41c9df:	mov    WORD PTR [edx-0x1b70173b],es
  41c9e5:	pop    ebx
  41c9e6:	fs pusha 
  41c9e8:	fdivr  DWORD PTR [eax+edx*4]
  41c9eb:	sub    eax,0xc188bd83
  41c9f0:	dec    edi
  41c9f1:	xor    edi,edi
  41c9f3:	out    0x1f,eax
  41c9f5:	add    ebx,DWORD PTR [eax+0x46]
  41c9f8:	mov    BYTE PTR [ecx],dh
  41c9fa:	push   ss
  41c9fb:	xchg   esp,eax
  41c9fc:	adc    eax,DWORD PTR [eax+ebp*1+0x428b6e29]
  41ca03:	imul   BYTE PTR [eax+0x6d]
  41ca06:	adc    eax,0x22951ed
  41ca0b:	ret    0x9d32
  41ca0e:	ins    BYTE PTR es:[edi],dx
  41ca0f:	sub    DWORD PTR [ecx+0x74],edx
  41ca12:	in     al,0x3f
  41ca14:	xchg   edx,esp
  41ca16:	sub    al,0xf0
  41ca18:	fdivp  st(5),st
  41ca1a:	stc    
  41ca1b:	les    eax,FWORD PTR [eax+0x76]
  41ca1e:	adc    ah,BYTE PTR [ebp+ebp*1-0x65]
  41ca22:	test   BYTE PTR [ecx+0x32],0xa0
  41ca26:	xor    eax,0x46a3df16
  41ca2b:	enter  0x3d2c,0xbc
  41ca2f:	into   
  41ca30:	or     BYTE PTR [edi+0x1e],al
  41ca33:	mov    ch,0x63
  41ca35:	pop    ss
  41ca36:	inc    ah
  41ca38:	mov    edi,0xf3c3217b
  41ca3d:	(bad)  
  41ca3e:	push   edx
  41ca3f:	xchg   esi,eax
  41ca40:	jmp    0x1125:0x9b88e5f7
  41ca47:	inc    ecx
  41ca48:	jne    0x41cab0
  41ca4a:	push   ebp
  41ca4b:	add    eax,DWORD PTR [ebx+0x65]
  41ca4e:	outs   dx,DWORD PTR ds:[esi]
  41ca4f:	xor    DWORD PTR [eax+ebp*2],edx
  41ca52:	push   ebp
  41ca53:	(bad)  
  41ca54:	jo     0x41ca4c
  41ca56:	pop    edi
  41ca57:	repnz ror ebx,1
  41ca5a:	ins    DWORD PTR es:[edi],dx
  41ca5b:	jbe    0x41cab6
  41ca5d:	sbb    al,0xfd
  41ca5f:	mov    ebp,0xcb82527
  41ca64:	sbb    ch,BYTE PTR [edx-0x73]
  41ca67:	inc    ecx
  41ca68:	adc    DWORD PTR [eax],0x3e
  41ca6b:	mov    ds:0xd1a3e711,eax
  41ca70:	add    al,BYTE PTR [ecx+0xbc8f288]
  41ca76:	mov    eax,0x5add7f43
  41ca7c:	ror    BYTE PTR [esi-0x6c38266],0x38
  41ca83:	repnz adc esi,DWORD PTR [edi+0x7b]
  41ca87:	ins    BYTE PTR es:[edi],dx
  41ca88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca89:	jmp    0x41cab7
  41ca8b:	push   cs
  41ca8c:	mov    cl,0x25
  41ca8e:	lock cmp dl,BYTE PTR [ecx-0x7a04a9d9]
  41ca95:	ret    
  41ca96:	lock or ebp,ecx
  41ca99:	pop    eax
  41ca9a:	rcl    BYTE PTR [eax],0xd6
  41ca9d:	add    al,0x5
  41ca9f:	inc    ebx
  41caa0:	cmp    DWORD PTR [bp+di],0xffffffe1
  41caa4:	sub    eax,0xa984d8f5
  41caa9:	out    dx,al
  41caaa:	pop    ecx
  41caab:	jae    0x41ca81
  41caad:	addr16 dec edx
  41caaf:	out    0xd0,al
  41cab1:	cmp    ah,dl
  41cab3:	pop    ds
  41cab4:	es xchg esi,eax
  41cab6:	ret    
  41cab7:	mov    bh,0x4a
  41cab9:	push   cs
  41caba:	jo     0x41cae6
  41cabc:	add    al,0x93
  41cabe:	or     bl,BYTE PTR [ebx+0x4fa0d5d]
  41cac4:	sbb    bh,BYTE PTR [edi+0x4f8546ea]
  41caca:	bound  ebp,QWORD PTR [ebp-0x77927e84]
  41cad0:	pop    ebx
  41cad1:	xchg   ebx,eax
  41cad2:	jno    0x41cab1
  41cad4:	push   ebx
  41cad5:	les    ebp,FWORD PTR [edx+ebx*1]
  41cad8:	or     BYTE PTR [ebx+eiz*8+0x68dfde92],ah
  41cadf:	sbb    BYTE PTR [edx+edx*8],bl
  41cae2:	ja     0x41cb5a
  41cae4:	enter  0x70eb,0x59
  41cae8:	daa    
  41cae9:	inc    ecx
  41caea:	xchg   ecx,eax
  41caeb:	aaa    
  41caec:	popa   
  41caed:	outs   dx,BYTE PTR ds:[esi]
  41caee:	and    edx,DWORD PTR [eax-0x79]
  41caf1:	dec    edx
  41caf2:	mov    eax,ds:0x653e382d
  41caf7:	int3   
  41caf8:	scas   al,BYTE PTR es:[edi]
  41caf9:	and    bh,BYTE PTR [edi-0x6ad1ca97]
  41caff:	adc    DWORD PTR [ebx+0x61],esp
  41cb02:	xchg   dh,dh
  41cb04:	cwde   
  41cb05:	push   cs
  41cb06:	push   ebp
  41cb07:	and    DWORD PTR [esi],edi
  41cb09:	daa    
  41cb0a:	enter  0xf115,0x75
  41cb0e:	(bad)  
  41cb0f:	mov    ds:0x9e60fa85,eax
  41cb14:	repz sbb eax,0xf6dee357
  41cb1a:	or     edi,DWORD PTR [edx+ebx*1-0x17]
  41cb1e:	sbb    cl,dl
  41cb20:	or     ebx,DWORD PTR [ecx-0x155a98d]
  41cb26:	mov    esp,0x22a5139b
  41cb2b:	idiv   DWORD PTR [esi-0x75]
  41cb2e:	mov    ecx,0x6db0ae23
  41cb33:	popa   
  41cb34:	inc    esi
  41cb35:	sub    cl,cl
  41cb37:	sub    eax,0x8799190a
  41cb3c:	xchg   ebp,eax
  41cb3d:	pop    ebx
  41cb3e:	aad    0x42
  41cb40:	xchg   ebp,eax
  41cb41:	pusha  
  41cb42:	xor    ch,BYTE PTR [eax]
  41cb44:	pop    ebp
  41cb45:	jnp    0x41cae8
  41cb47:	add    eax,0x70f60da7
  41cb4c:	xchg   ebp,eax
  41cb4d:	leave  
  41cb4e:	icebp  
  41cb4f:	inc    ecx
  41cb50:	call   0x6724:0x896638d1
  41cb57:	outs   dx,BYTE PTR ds:[esi]
  41cb58:	inc    ecx
  41cb59:	repz fiadd DWORD PTR [edx]
  41cb5c:	(bad)
  41cb60:	test   al,0x25
  41cb62:	cwde   
  41cb63:	jge    0x41cb5a
  41cb65:	push   esp
  41cb66:	xchg   al,dl
  41cb68:	inc    esp
  41cb69:	test   eax,0xc2ae15b1
  41cb6e:	dec    esi
  41cb6f:	in     eax,0x33
  41cb71:	fimul  DWORD PTR [esi+0x9ac1aad]
  41cb77:	push   ss
  41cb78:	jae    0x41cba1
  41cb7a:	add    eax,0xbd36ebb0
  41cb7f:	lds    esi,FWORD PTR [bp+si]
  41cb82:	outs   dx,DWORD PTR ds:[esi]
  41cb83:	pop    ebx
  41cb84:	xchg   edi,eax
  41cb85:	es fs jg 0x41cb29
  41cb89:	aam    0xfd
  41cb8b:	fbstp  TBYTE PTR [ecx]
  41cb8d:	cmc    
  41cb8e:	add    eax,0xc8cf4af0
  41cb93:	std    
  41cb94:	mov    ah,0x97
  41cb96:	outs   dx,BYTE PTR ds:[esi]
  41cb97:	retf   0xa40a
  41cb9a:	(bad)  
  41cb9b:	sub    ch,BYTE PTR [edi]
  41cb9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb9e:	in     eax,0x32
  41cba0:	popf   
  41cba1:	stos   BYTE PTR es:[edi],al
  41cba2:	hlt    
  41cba3:	sub    eax,0xcb9cc619
  41cba8:	fs nop
  41cbaa:	push   eax
  41cbab:	mov    eax,ds:0xb42c5326
  41cbb0:	mov    ah,0x45
  41cbb2:	clc    
  41cbb3:	dec    esp
  41cbb4:	dec    bh
  41cbb6:	xor    DWORD PTR [eax+0x24],eax
  41cbb9:	aas    
  41cbba:	rol    BYTE PTR [edx+0x758021e9],cl
  41cbc0:	xchg   esi,eax
  41cbc2:	pop    edi
  41cbc3:	cdq    
  41cbc4:	add    esp,DWORD PTR [edi+eax*8]
  41cbc7:	fdivr  st(1),st
  41cbc9:	dec    edi
  41cbca:	mov    ch,0xa4
  41cbcc:	jg     0x41cc10
  41cbce:	push   edx
  41cbcf:	(bad)  
  41cbd0:	into   
  41cbd1:	xor    DWORD PTR [ebp+0x59343151],edi
  41cbd7:	jb     0x41cc09
  41cbd9:	xchg   ebp,eax
  41cbda:	adc    al,0x1f
  41cbdc:	jg     0x41cb8e
  41cbde:	enter  0xc77e,0x77
  41cbe2:	jno    0x41cb95
  41cbe4:	in     al,dx
  41cbe5:	pop    esp
  41cbe6:	pusha  
  41cbe7:	popf   
  41cbe8:	push   ebp
  41cbe9:	leave  
  41cbea:	jl     0x41cb6f
  41cbec:	mov    ebx,0x4af3a47f
  41cbf1:	stos   BYTE PTR es:[edi],al
  41cbf2:	sub    al,0x36
  41cbf4:	xor    bl,cl
  41cbf6:	inc    esp
  41cbf7:	cwde   
  41cbf8:	fisub  WORD PTR [edx-0x41bdb103]
  41cbfe:	or     DWORD PTR [edi+0x66],ebx
  41cc01:	(bad)  
  41cc02:	jne    0x41cc3a
  41cc04:	jb     0x41cc08
  41cc06:	push   esi
  41cc07:	rol    edi,1
  41cc09:	sub    al,0xcc
  41cc0b:	dec    esi
  41cc0c:	and    eax,DWORD PTR [eax+edi*2-0x6f530cd6]
  41cc13:	cmp    eax,0xcfd1c744
  41cc18:	pop    ss
  41cc19:	fsubr  QWORD PTR [edx+esi*2+0x1e]
  41cc1d:	mov    fs,esi
  41cc1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc20:	repz inc BYTE PTR [ebx+ebp*8-0x62]
  41cc25:	imul   eax,esp,0xffffffde
  41cc28:	cmc    
  41cc29:	clc    
  41cc2a:	aam    0xf3
  41cc2c:	test   eax,0x35782c4e
  41cc31:	cld    
  41cc32:	pop    ebp
  41cc33:	xor    BYTE PTR [ebp+esi*8-0x2bea3019],cl
  41cc3a:	ins    DWORD PTR es:[edi],dx
  41cc3b:	cmp    eax,0xe7972b73
  41cc40:	fistp  QWORD PTR [esi-0x3f3685e5]
  41cc46:	mov    WORD PTR [edi-0x44c21a25],cs
  41cc4c:	jg     0x41ccc5
  41cc4e:	sub    DWORD PTR [edx-0x521a307b],0x8593377f
  41cc58:	or     ebp,DWORD PTR [esi-0x7c523a1f]
  41cc5e:	add    cl,BYTE PTR [edi]
  41cc60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc61:	test   eax,0xf8e4cb94
  41cc66:	jb     0x41ccc9
  41cc68:	cmp    dh,bl
  41cc6a:	jl     0x41cc27
  41cc6c:	jns    0x41cc5a
  41cc6e:	popa   
  41cc6f:	fnstcw WORD PTR [edx+edx*8-0x238cf540]
  41cc76:	mov    eax,ds:0x49b50afb
  41cc7b:	pop    ebx
  41cc7c:	jbe    0x41cc3f
  41cc7e:	es dec ecx
  41cc80:	cmp    BYTE PTR ds:0x47bf9c0a,bh
  41cc86:	stos   DWORD PTR es:[edi],eax
  41cc87:	(bad)  
  41cc88:	icebp  
  41cc89:	sub    ah,BYTE PTR [esi-0x10]
  41cc8c:	sahf   
  41cc8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc8e:	mov    bl,0xbf
  41cc90:	xchg   DWORD PTR [esi-0x4a],edx
  41cc93:	popa   
  41cc94:	push   cs
  41cc95:	ucomiss xmm2,DWORD PTR [ebx+0x6948e4ea]
  41cc9c:	out    0x51,al
  41cc9e:	push   esi
  41cc9f:	cmp    esp,esi
  41cca1:	jb     0x41cc69
  41cca3:	les    eax,FWORD PTR [esp+ebp*4-0x53d49c2b]
  41ccaa:	sbb    ecx,DWORD PTR [ebx+0x3e3ba74]
  41ccb0:	push   edx
  41ccb1:	jge    0x41ccca
  41ccb3:	pop    eax
  41ccb4:	je     0x41cccc
  41ccb6:	push   es
  41ccb7:	mov    BYTE PTR [eax],cl
  41ccb9:	xor    BYTE PTR [ecx+esi*8+0x2e],0x94
  41ccbe:	mov    al,ds:0x156e0d6c
  41ccc3:	retf   
  41ccc4:	mov    ds:0x126783bb,eax
  41ccc9:	mov    BYTE PTR [eax*8-0x1313d7e3],cl
  41ccd0:	in     al,0x41
  41ccd2:	cmp    esi,DWORD PTR [edi]
  41ccd4:	jge    0x41cc7a
  41ccd6:	js     0x41cca5
  41ccd8:	mov    ?,ebp
  41ccda:	mov    eax,ds:0xf7ed3886
  41ccdf:	mov    dl,0x51
  41cce1:	mov    edx,0x835c078c
  41cce6:	adc    ch,0x38
  41cce9:	mov    ds:0x16035e48,eax
  41ccee:	mov    ch,0xde
  41ccf0:	mov    edi,0xb9879de
  41ccf5:	hlt    
  41ccf6:	mov    ebx,0x804f5d33
  41ccfb:	add    eax,0x4587874
  41cd00:	or     al,0x6e
  41cd02:	mov    bh,0xcd
  41cd04:	mov    bh,0x62
  41cd06:	mov    ecx,0xfb624663
  41cd0b:	cmp    al,0xfe
  41cd0d:	in     al,dx
  41cd0e:	inc    ecx
  41cd0f:	mov    ebx,0x4c786a7a
  41cd14:	sub    BYTE PTR [ecx],0x35
  41cd17:	js     0x41cd4b
  41cd19:	enter  0x28f6,0xa3
  41cd1d:	(bad)  
  41cd1e:	xchg   edx,eax
  41cd1f:	push   0x5e31bd33
  41cd24:	jne    0x41cda4
  41cd26:	outs   dx,BYTE PTR ds:[esi]
  41cd27:	scas   eax,DWORD PTR es:[edi]
  41cd28:	xor    BYTE PTR [ebp-0x14],0xed
  41cd2c:	cmp    cl,BYTE PTR [ebp+0x29]
  41cd2f:	ficom  DWORD PTR [edi+0x70e01540]
  41cd35:	mov    cl,0xe0
  41cd37:	fprem1 
  41cd39:	popa   
  41cd3a:	(bad)  
  41cd3b:	ins    BYTE PTR es:[edi],dx
  41cd3c:	cs xchg ecx,eax
  41cd3e:	adc    edi,ebx
  41cd40:	pop    ebx
  41cd41:	outs   dx,DWORD PTR ds:[esi]
  41cd42:	iret   
  41cd43:	shl    ebp,1
  41cd45:	mov    ss,WORD PTR [edx]
  41cd47:	cwde   
  41cd48:	pop    ds
  41cd49:	adc    al,0x27
  41cd4b:	mov    bl,0x2b
  41cd4d:	and    BYTE PTR [eax+0x29],0xe1
  41cd51:	in     al,dx
  41cd52:	adc    ah,BYTE PTR [edi+0x2d794d5c]
  41cd58:	test   bh,ah
  41cd5a:	mov    edx,0x6aa018e1
  41cd5f:	push   es
  41cd60:	mov    esp,DWORD PTR [ecx+0x5bd16f09]
  41cd66:	neg    DWORD PTR [ebp+0x14]
  41cd69:	or     BYTE PTR [eax-0x4caab81f],bh
  41cd6f:	icebp  
  41cd70:	pop    ebp
  41cd71:	push   esp
  41cd72:	jns    0x41cd96
  41cd74:	lock or eax,0x120a28dc
  41cd7a:	and    al,0xf3
  41cd7c:	sbb    ecx,edx
  41cd7e:	sahf   
  41cd7f:	test   al,0xd0
  41cd81:	mov    bl,0xf2
  41cd83:	iret   
  41cd84:	cs pop ss
  41cd86:	bound  esp,QWORD PTR [ecx+0x2d1c47ea]
  41cd8c:	das    
  41cd8d:	add    eax,0x7042f14
  41cd92:	xchg   esp,eax
  41cd93:	inc    ebp
  41cd94:	int    0xb8
  41cd96:	aas    
  41cd97:	jle    0x41cda8
  41cd99:	add    esi,esp
  41cd9b:	pop    esp
  41cd9c:	adc    BYTE PTR [edx+0x68fc90f9],bl
  41cda2:	sub    eax,DWORD PTR [edi]
  41cda4:	neg    esi
  41cda6:	ins    BYTE PTR es:[edi],dx
  41cda7:	pusha  
  41cda8:	pusha  
  41cda9:	dec    ebp
  41cdaa:	jne    0x41cdb0
  41cdac:	mov    ah,0x97
  41cdae:	bound  eax,QWORD PTR [eax-0x13b668eb]
  41cdb4:	int3   
  41cdb5:	xlat   BYTE PTR ds:[ebx]
  41cdb6:	fwait
  41cdb7:	dec    edx
  41cdb8:	add    eax,0x3edd9576
  41cdbd:	in     al,dx
  41cdbe:	adc    al,0x45
  41cdc0:	xchg   ecx,eax
  41cdc1:	loope  0x41cde4
  41cdc3:	and    dl,cl
  41cdc5:	adc    DWORD PTR [edi+0x2a],esp
  41cdc8:	or     cl,BYTE PTR [ebp+0x6f894e95]
  41cdce:	(bad)  
  41cdcf:	jne    0x41cdf1
  41cdd1:	sub    edx,DWORD PTR [esi]
  41cdd3:	lock sti 
  41cdd5:	repnz cmp eax,0x39b25242
  41cddb:	(bad)  
  41cddc:	push   edi
  41cddd:	mov    edx,DWORD PTR [ebx-0x67]
  41cde0:	popf   
  41cde1:	pop    ecx
  41cde2:	les    ebp,FWORD PTR [eax+ebp*4+0x3c]
  41cde6:	xor    al,0xa7
  41cde8:	xchg   ecx,eax
  41cde9:	mov    WORD PTR ds:0x41160d23,?
  41cdef:	sbb    eax,0x63a1da23
  41cdf4:	inc    edi
  41cdf5:	ins    BYTE PTR es:[edi],dx
  41cdf6:	push   ebx
  41cdf7:	into   
  41cdf8:	sahf   
  41cdf9:	jge    0x41ce79
  41cdfb:	pop    ebx
  41cdfc:	retf   0x2aca
  41cdff:	lea    edx,[edi-0x80]
  41ce02:	icebp  
  41ce03:	xor    BYTE PTR [edx-0x72],0xe8
  41ce07:	lods   eax,DWORD PTR ds:[esi]
  41ce08:	cwde   
  41ce09:	hlt    
  41ce0a:	loopne 0x41ce72
  41ce0c:	adc    ch,BYTE PTR [ebx-0x76]
  41ce0f:	test   edi,esp
  41ce11:	nop
  41ce12:	rol    DWORD PTR [ebp-0x406508cb],cl
  41ce18:	std    
  41ce19:	ss out dx,eax
  41ce1b:	lahf   
  41ce1c:	(bad)  
  41ce1d:	fisubr DWORD PTR [esi]
  41ce1f:	add    al,0xe4
  41ce21:	loopne 0x41ce1d
  41ce23:	sar    DWORD PTR [eax+eiz*1+0x57c8c6cb],cl
  41ce2a:	adc    al,0x7a
  41ce2c:	mov    ss,WORD PTR [bx]
  41ce2f:	jecxz  0x41cdc4
  41ce31:	mov    dh,0x8
  41ce33:	(bad)
  41ce36:	gs pop eax
  41ce38:	lock jmp 0x41ce66
  41ce3b:	mov    eax,ds:0xf8c6f39a
  41ce40:	lock repnz xchg ch,cl
  41ce44:	jl     0x41cec2
  41ce46:	xchg   esi,eax
  41ce47:	je     0x41cdf3
  41ce49:	test   DWORD PTR [edx+0x70],0x75588378
  41ce50:	push   edi
  41ce51:	nop
  41ce52:	push   ecx
  41ce53:	lahf   
  41ce54:	test   al,0x7f
  41ce56:	sbb    dl,cl
  41ce58:	stos   BYTE PTR es:[edi],al
  41ce59:	and    al,0x7f
  41ce5b:	fcomp  QWORD PTR [edi]
  41ce5d:	adc    bl,BYTE PTR [si+0x3547]
  41ce62:	sti    
  41ce63:	inc    edi
  41ce64:	pop    ebp
  41ce65:	ds mov ebx,0xea31c56e
  41ce6b:	jae    0x41ce9b
  41ce6d:	inc    ebp
  41ce6e:	jmp    0x9f51:0xe6bf6047
  41ce75:	or     ecx,DWORD PTR [ecx-0x44]
  41ce78:	clc    
  41ce79:	dec    ebp
  41ce7a:	and    DWORD PTR [edi+0x74],esp
  41ce7d:	mov    bh,0xc7
  41ce7f:	pop    edi
  41ce80:	cs cmc 
  41ce82:	test   eax,0x253a2a1d
  41ce87:	sbb    DWORD PTR [ebx+0x12],esp
  41ce8a:	jb     0x41cefd
  41ce8c:	iret   
  41ce8d:	adc    eax,0xf1beac8
  41ce92:	enter  0x7fb8,0x99
  41ce96:	cdq    
  41ce97:	xchg   ebx,eax
  41ce98:	jnp    0x41ce44
  41ce9a:	push   ds
  41ce9b:	pop    ss
  41ce9c:	cmp    DWORD PTR [edx-0x41f9b0cb],eax
  41cea2:	dec    esp
  41cea3:	mov    ds:0xc54ecc98,al
  41cea8:	pop    eax
  41cea9:	mov    eax,ds:0x64051097
  41ceae:	cmp    bh,BYTE PTR [ecx+0x3]
  41ceb1:	test   eax,0x238a5d1
  41ceb6:	into   
  41ceb7:	js     0x41cf0e
  41ceb9:	aaa    
  41ceba:	fldenv [edi+0x48]
  41cebd:	mov    BYTE PTR [ebp+0x57],ah
  41cec0:	mov    al,ds:0x9fa9f8f2
  41cec5:	lea    ecx,ds:0x679c5fcd
  41cecb:	cmp    eax,0x3f9144b5
  41ced0:	dec    esi
  41ced1:	mov    ebp,0xe68bf56
  41ced6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced7:	mov    DWORD PTR [edx+0x21],ebx
  41ceda:	xchg   esp,eax
  41cedb:	popf   
  41cedc:	lock imul edx,DWORD PTR [ebx+0x5d36ba1c],0xeac6b4b2
  41cee7:	jo     0x41cf60
  41cee9:	repz lahf 
  41ceeb:	push   esi
  41ceec:	mov    ebp,DWORD PTR [eax]
  41ceee:	jae    0x41ced1
  41cef0:	cmc    
  41cef1:	push   ecx
  41cef2:	inc    esi
  41cef3:	or     edx,DWORD PTR [esi-0x44db7674]
  41cef9:	bound  edx,QWORD PTR [eax-0x67b6345e]
  41ceff:	inc    ecx
  41cf00:	xchg   ebp,esi
  41cf02:	cwde   
  41cf03:	inc    ebp
  41cf04:	sub    eax,esp
  41cf06:	xlat   BYTE PTR ds:[ebx]
  41cf07:	pop    eax
  41cf08:	arpl   bp,dx
  41cf0a:	clc    
  41cf0b:	pusha  
  41cf0c:	dec    esi
  41cf0d:	inc    edx
  41cf0e:	xchg   BYTE PTR [edx+eax*4-0x38],dh
  41cf12:	pop    edx
  41cf13:	pop    edx
  41cf14:	cli    
  41cf15:	in     eax,dx
  41cf16:	call   FWORD PTR [ecx]
  41cf18:	fsubr  DWORD PTR [esi]
  41cf1a:	dec    ebx
  41cf1b:	xor    ch,BYTE PTR [eax+0x14718964]
  41cf21:	hlt    
  41cf22:	pop    ds
  41cf23:	jp     0x41cf7e
  41cf25:	pop    ds
  41cf26:	or     al,0xdd
  41cf28:	xor    edx,DWORD PTR [eax]
  41cf2a:	hlt    
  41cf2b:	aam    0x59
  41cf2d:	mov    ch,0x81
  41cf2f:	xor    eax,DWORD PTR [ecx]
  41cf31:	adc    eax,0xc86c52b9
  41cf36:	rcr    edi,0x1
  41cf39:	mov    dl,0x5a
  41cf3b:	dec    edx
  41cf3c:	mov    eax,ds:0x5f04a4ba
  41cf41:	or     BYTE PTR [ecx-0x64],dl
  41cf44:	in     eax,dx
  41cf45:	ds sbb al,0x9e
  41cf48:	imul   edi,DWORD PTR [ebx-0x53],0x7c
  41cf4c:	or     esi,DWORD PTR [ecx-0x3ea326c]
  41cf52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf53:	mov    eax,0x66c520f
  41cf58:	inc    ebx
  41cf59:	cdq    
  41cf5a:	xor    dl,BYTE PTR [edi]
  41cf5c:	ret    
  41cf5d:	dec    ebx
  41cf5e:	cs jecxz 0x41cf04
  41cf61:	mov    bl,0x73
  41cf63:	xor    eax,0x7fd4af1e
  41cf68:	loop   0x41cfd8
  41cf6a:	add    BYTE PTR [edi-0x31],0x1e
  41cf6e:	push   edx
  41cf6f:	jmp    0x41cf5a
  41cf71:	rol    BYTE PTR [eax+0x43d99273],1
  41cf77:	push   edi
  41cf78:	daa    
  41cf79:	mov    ebp,0xa45729f2
  41cf7e:	push   edi
  41cf7f:	jp     0x41cfd0
  41cf81:	mov    eax,esp
  41cf83:	fs mov dh,ah
  41cf86:	pop    ecx
  41cf87:	inc    ebx
  41cf88:	pop    es
  41cf89:	leave  
  41cf8a:	mov    edi,DWORD PTR [ebx]
  41cf8c:	jo     0x41cf3c
  41cf8e:	mov    edx,DWORD PTR [esi+0x64]
  41cf91:	cmp    eax,0x76874619
  41cf96:	jae    0x41cfe2
  41cf98:	and    eax,0xc68d2453
  41cf9d:	jp     0x41cf50
  41cf9f:	jp     0x41cfb3
  41cfa1:	lods   al,BYTE PTR ds:[esi]
  41cfa2:	jmp    0xc06b:0x9a46eee4
  41cfa9:	lds    ebp,FWORD PTR [edx-0x46]
  41cfac:	sbb    al,0xf6
  41cfae:	(bad)  
  41cfaf:	adc    BYTE PTR [eax+0x55060fd3],dl
  41cfb5:	imul   ebx,DWORD PTR [ecx],0xd0d94788
  41cfbb:	adc    BYTE PTR [eax],0xb6
  41cfbe:	data16 loop 0x41cf9c
  41cfc1:	dec    edx
  41cfc2:	in     eax,dx
  41cfc3:	cdq    
  41cfc4:	out    0x36,eax
  41cfc6:	stos   BYTE PTR es:[edi],al
  41cfc7:	xchg   edx,eax
  41cfc8:	retf   0x3d27
  41cfcb:	cs cmp al,0x69
  41cfce:	das    
  41cfcf:	xor    DWORD PTR [ebx],ebp
  41cfd1:	jne    0x41d01f
  41cfd3:	dec    eax
  41cfd4:	aam    0xe4
  41cfd6:	fisttp DWORD PTR [edx-0x11910942]
  41cfdc:	call   0xaf72f29d
  41cfe1:	add    BYTE PTR [ebx+0x3049efd4],cl
  41cfe7:	outs   dx,BYTE PTR ds:[esi]
  41cfe8:	mov    cl,BYTE PTR [edx-0x60]
  41cfeb:	jle    0x41d06b
  41cfed:	jnp    0x41d04b
  41cfef:	repnz ds inc edx
  41cff2:	out    dx,eax
  41cff3:	adc    al,0xb1
  41cff5:	loope  0x41d059
  41cff7:	sub    BYTE PTR [eax-0x6c],0xa4
  41cffb:	sbb    bh,dl
  41cffd:	mov    eax,ds:0x20fec995
  41d002:	jno    0x41d03e
  41d004:	and    eax,0xd7bb7841
  41d009:	cmp    DWORD PTR [ebx-0x1fd50481],ebx
  41d00f:	ror    edi,0xc0
  41d012:	out    dx,eax
  41d013:	sbb    eax,0x56ec9a3b
  41d018:	push   ebp
  41d019:	jl     0x41cfb6
  41d01b:	aas    
  41d01c:	add    BYTE PTR [edx],0x52
  41d01f:	ds (bad) 
  41d021:	mov    ecx,DWORD PTR [eax+0x49fd74e9]
  41d027:	xor    al,0xf6
  41d029:	pop    es
  41d02a:	adc    edx,0xe08f5ab0
  41d030:	pop    ds
  41d031:	or     BYTE PTR [esi],0x8b
  41d034:	mov    WORD PTR [ebx+ecx*8],es
  41d037:	add    DWORD PTR [ecx+edi*1-0x177f9536],ebp
  41d03e:	add    DWORD PTR [edi-0x5d],edx
  41d041:	jmp    DWORD PTR [esp+eax*8]
  41d044:	fxch   st(0)
  41d046:	in     al,dx
  41d047:	xchg   ebx,eax
  41d048:	dec    edi
  41d049:	fstp   DWORD PTR [edx]
  41d04b:	inc    ebx
  41d04c:	jg     0x41d03a
  41d04e:	dec    ecx
  41d04f:	jg     0x41d071
  41d051:	xchg   esi,eax
  41d052:	xor    al,0xa2
  41d054:	jg     0x41cfe1
  41d056:	dec    edi
  41d057:	jecxz  0x41d03f
  41d059:	mov    dl,0x7
  41d05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d05c:	(bad)  
  41d05d:	sti    
  41d05e:	jnp    0x41d08b
  41d060:	outs   dx,DWORD PTR ds:[esi]
  41d061:	add    esp,esi
  41d063:	adc    al,0xf1
  41d065:	pop    edi
  41d066:	ds aaa 
  41d068:	rol    bh,0x6e
  41d06b:	push   0x6c
  41d06d:	pushf  
  41d06e:	ret    
  41d06f:	and    edx,DWORD PTR ds:0xacdc4d99
  41d075:	xor    al,0xbd
  41d077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d078:	mov    ebp,0x395e0d33
  41d07d:	adc    eax,0x968d7c59
  41d082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d083:	jb     0x41d01b
  41d085:	mov    eax,ds:0x267fce71
  41d08a:	cld    
  41d08b:	sbb    al,0xea
  41d08d:	outs   dx,BYTE PTR ds:[esi]
  41d08e:	test   al,0xce
  41d090:	push   ebp
  41d091:	fldcw  WORD PTR [ebp+0x29]
  41d094:	adc    edx,DWORD PTR [esi+0x7147ffb7]
  41d09a:	mov    edi,0xecf89db8
  41d09f:	mov    ah,0xac
  41d0a1:	out    0x5a,al
  41d0a3:	cs daa 
  41d0a5:	gs jns 0x41d116
  41d0a8:	jo     0x41d07e
  41d0aa:	stos   DWORD PTR es:[edi],eax
  41d0ab:	call   0x6090aae1
  41d0b0:	xchg   ecx,eax
  41d0b1:	xchg   ebx,eax
  41d0b2:	pop    edi
  41d0b3:	fdivp  st(7),st
  41d0b5:	adc    al,0x16
  41d0b7:	aaa    
  41d0b8:	xchg   edx,eax
  41d0b9:	mov    ah,0xda
  41d0bb:	test   al,0x28
  41d0bd:	mov    eax,ds:0x602ba70c
  41d0c2:	sub    BYTE PTR [edi-0x2bfe2fc3],dl
  41d0c8:	ins    DWORD PTR es:[edi],dx
  41d0c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0ca:	xchg   ebp,eax
  41d0cb:	cs mov al,0xc5
  41d0ce:	aam    0x5c
  41d0d0:	sub    DWORD PTR [esi+eiz*4+0x38],esp
  41d0d4:	mov    ebx,0x7f801e58
  41d0d9:	sub    ah,BYTE PTR [eax-0x6b04d9ae]
  41d0df:	rcr    BYTE PTR [esi-0x7],0xd2
  41d0e3:	pop    ds
  41d0e4:	xchg   ebx,eax
  41d0e5:	jne    0x41d161
  41d0e7:	mov    WORD PTR [esi-0x22fbe5c3],ss
  41d0ed:	inc    ecx
  41d0ee:	mov    ah,0x6c
  41d0f0:	es ins BYTE PTR es:[edi],dx
  41d0f2:	fsubr  QWORD PTR [ebx]
  41d0f4:	or     al,0xb1
  41d0f6:	xchg   ecx,eax
  41d0f7:	dec    esp
  41d0f8:	pop    ss
  41d0f9:	push   es
  41d0fa:	aam    0x23
  41d0fc:	jns    0x41d12c
  41d0fe:	je     0x41d089
  41d100:	js     0x41d0a5
  41d102:	fistp  DWORD PTR [ecx]
  41d104:	les    edi,FWORD PTR [esi-0x3a05e03a]
  41d10a:	adc    ch,bl
  41d10c:	add    al,BYTE PTR [eax-0x3]
  41d10f:	push   ebx
  41d110:	add    eax,0x250c8b15
  41d115:	out    0x4d,eax
  41d117:	inc    esi
  41d118:	push   esi
  41d119:	outs   dx,DWORD PTR ds:[esi]
  41d11a:	sbb    bl,cl
  41d11c:	pop    ds
  41d11d:	out    dx,al
  41d11e:	adc    BYTE PTR [ecx+0x76],cl
  41d121:	xchg   ebx,eax
  41d122:	cs pop ebx
  41d124:	push   ecx
  41d125:	sbb    esp,ecx
  41d127:	cmp    ecx,edx
  41d129:	add    BYTE PTR [edi],0x9a
  41d12c:	adc    eax,0xbe28d9c4
  41d131:	fld    TBYTE PTR ds:0x84bb60e6
  41d137:	inc    ebp
  41d138:	es dec ebx
  41d13a:	shl    BYTE PTR [ecx-0x38],cl
  41d13d:	rol    BYTE PTR ds:[edi],cl
  41d140:	sub    BYTE PTR [ecx+0x3af6be86],ch
  41d146:	mov    edi,0x4724bd42
  41d14b:	jecxz  0x41d11d
  41d14d:	jmp    0x41d0d4
  41d14f:	sub    dh,BYTE PTR [ebx-0x32]
  41d152:	inc    ebp
  41d153:	pusha  
  41d154:	imul   edx,DWORD PTR [edi+ecx*8+0x4c],0xfffffff3
  41d159:	js     0x41d143
  41d15b:	cmp    dl,BYTE PTR [ecx-0x21957b70]
  41d161:	cmp    ecx,edx
  41d163:	mov    bh,ah
  41d165:	fwait
  41d166:	pop    edx
  41d167:	daa    
  41d168:	loopne 0x41d142
  41d16a:	imul   ecx,DWORD PTR [ecx+ebx*2],0x570d6d76
  41d171:	mov    edx,DWORD PTR [ecx]
  41d173:	jne    0x41d192
  41d175:	sub    eax,0x88a5ef99
  41d17a:	call   0xa813:0xa9804e2a
  41d181:	hlt    
  41d182:	repnz and DWORD PTR [ebx],esi
  41d185:	and    DWORD PTR [ecx+eiz*2-0x2f07b72d],ebp
  41d18c:	(bad)  
  41d18d:	or     al,0x9c
  41d18f:	(bad)  
  41d190:	in     al,dx
  41d191:	in     al,0x9e
  41d193:	cmc    
  41d194:	mov    esi,0x632c961e
  41d199:	xor    BYTE PTR [edi],ah
  41d19b:	xchg   edx,eax
  41d19c:	dec    ebp
  41d19d:	and    BYTE PTR [edi-0x2f],0xe2
  41d1a1:	mov    edi,0x2abd26ea
  41d1a6:	imul   ebx,eax,0x98f236a2
  41d1ac:	arpl   bx,di
  41d1ae:	jmp    ecx
  41d1b0:	xlat   BYTE PTR ds:[ebx]
  41d1b1:	iret   
  41d1b2:	pop    ss
  41d1b3:	loope  0x41d1bc
  41d1b5:	mov    ebx,0x4629ce86
  41d1ba:	pop    edx
  41d1bb:	mov    DWORD PTR [ecx+0x5c],edx
  41d1be:	mov    al,0x17
  41d1c0:	pop    esp
  41d1c1:	rcr    DWORD PTR [ecx+ebx*8],cl
  41d1c4:	mov    esp,DWORD PTR [eax+ebx*1]
  41d1c7:	aam    0x64
  41d1c9:	data16 scas al,BYTE PTR es:[edi]
  41d1cb:	aam    0x4c
  41d1cd:	jbe    0x41d157
  41d1cf:	sbb    DWORD PTR [esi+0x28eba909],edi
  41d1d5:	jmp    0xb023:0xefb9a581
  41d1dc:	dec    ebp
  41d1dd:	push   0xabf17c4b
  41d1e2:	cmc    
  41d1e3:	dec    esi
  41d1e4:	cmp    edx,DWORD PTR [edi]
  41d1e6:	cmp    al,0xc6
  41d1e8:	mov    eax,0x2bd4397a
  41d1ed:	mov    ah,0x6f
  41d1ef:	push   eax
  41d1f0:	pop    ebp
  41d1f1:	sub    BYTE PTR [ebp+edi*1-0x1140fe40],al
  41d1f8:	adc    bl,BYTE PTR [esi+0xd]
  41d1fb:	xor    DWORD PTR [esi],eax
  41d1fd:	ror    DWORD PTR [ebx-0x7a],1
  41d200:	mov    al,ds:0xf07bb959
  41d205:	xchg   esi,eax
  41d206:	add    BYTE PTR [esp+eax*1],cl
  41d209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d20a:	cmp    eax,0x5e9e76a8
  41d20f:	sub    ebp,esi
  41d211:	jecxz  0x41d194
  41d213:	mov    ebx,0xd8135cb1
  41d218:	push   0xffffff80
  41d21a:	xor    al,0x72
  41d21c:	mov    ebx,0xa0757f1d
  41d221:	and    bl,BYTE PTR [edx+0x48717196]
  41d227:	cli    
  41d228:	dec    esi
  41d229:	push   0x7d9790c8
  41d22e:	mov    bh,0x2c
  41d230:	sbb    bl,BYTE PTR [eax]
  41d232:	ds jl  0x41d1c9
  41d235:	adc    ebp,DWORD PTR [ecx+ebx*4+0x21]
  41d239:	ret    0xebb9
  41d23c:	gs aam 0x56
  41d23f:	in     al,0x8a
  41d241:	aam    0xe1
  41d243:	cmp    dh,cl
  41d245:	test   DWORD PTR [ecx+0x1e8ed808],ebp
  41d24b:	and    eax,0x30c4b28d
  41d250:	mov    ebp,0x54d2a270
  41d255:	arpl   WORD PTR [eax+eiz*8+0x7f],ax
  41d259:	pusha  
  41d25a:	(bad)  
  41d25b:	ins    DWORD PTR es:[edi],dx
  41d25c:	jo     0x41d28c
  41d25e:	stos   DWORD PTR es:[edi],eax
  41d25f:	leave  
  41d260:	rcl    DWORD PTR [esp+ebp*2],0x33
  41d264:	sbb    DWORD PTR [ebp-0x4d],eax
  41d267:	leave  
  41d268:	cs je  0x41d2af
  41d26b:	aas    
  41d26c:	xor    al,0x15
  41d26e:	repz add eax,0x84ddd85b
  41d274:	and    edx,DWORD PTR [esi+0x2b952ff9]
  41d27a:	test   ecx,ecx
  41d27c:	mov    ebx,0x4ea00612
  41d281:	pop    ds
  41d282:	nop
  41d283:	mov    bl,0x3b
  41d285:	inc    ebx
  41d286:	jle    0x41d2c0
  41d288:	fwait
  41d289:	imul   edx,DWORD PTR [ecx-0x6f],0xe718717e
  41d290:	shl    DWORD PTR [edx],1
  41d292:	dec    ecx
  41d293:	lods   eax,DWORD PTR ds:[esi]
  41d294:	adc    eax,0xc7bdb489
  41d299:	call   0x822cbb2b
  41d29e:	mov    ch,0x35
  41d2a0:	jp     0x41d30d
  41d2a2:	adc    edx,esp
  41d2a4:	sbb    al,0xbe
  41d2a6:	adc    dl,ch
  41d2a8:	stc    
  41d2a9:	icebp  
  41d2aa:	bound  edi,QWORD PTR [eax]
  41d2ac:	mov    bl,0x2e
  41d2ae:	sub    al,0x8e
  41d2b0:	mov    ss,WORD PTR [edi+0x416bd4aa]
  41d2b6:	ins    BYTE PTR es:[edi],dx
  41d2b7:	inc    esi
  41d2b8:	retf   
  41d2b9:	jb     0x41d280
  41d2bb:	les    eax,FWORD PTR ds:0xf42ecdbc
  41d2c1:	popa   
  41d2c2:	pop    edx
  41d2c3:	add    BYTE PTR [esi+esi*1+0x0],ch
  41d2c7:	jae    0x41d307
  41d2c9:	outs   dx,BYTE PTR ds:[esi]
  41d2ca:	scas   al,BYTE PTR es:[edi]
  41d2cb:	fs pop esp
  41d2cd:	add    eax,0x86a7273e
  41d2d2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41d2d4:	push   ebp
  41d2d5:	fistp  WORD PTR [ebx]
  41d2d7:	pop    ebp
  41d2d8:	or     DWORD PTR cs:[ecx+edx*4+0x7cd19617],ebp
  41d2e0:	jle    0x41d2b0
  41d2e2:	lods   al,BYTE PTR ds:[esi]
  41d2e3:	cli    
  41d2e4:	fs or  al,0x67
  41d2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e8:	xchg   ebx,eax
  41d2e9:	adc    DWORD PTR [ecx-0x2],edx
  41d2ec:	xchg   esi,eax
  41d2ed:	push   ebx
  41d2ee:	lods   eax,DWORD PTR ds:[esi]
  41d2ef:	popa   
  41d2f0:	pop    edx
  41d2f1:	lea    ecx,[edx+0x72]
  41d2f4:	scas   eax,DWORD PTR es:[edi]
  41d2f5:	outs   dx,BYTE PTR ds:[esi]
  41d2f6:	sbb    al,0x22
  41d2f8:	cdq    
  41d2f9:	fs mov ebx,0xd05e61d4
  41d2ff:	mov    al,ds:0xce8d99c6
  41d304:	xchg   BYTE PTR [ecx+0x79f2d3f6],bl
  41d30a:	inc    edx
  41d30b:	and    ebp,DWORD PTR [esi]
  41d30d:	dec    BYTE PTR [esi+0x3]
  41d310:	push   0xb92f99b3
  41d315:	dec    edi
  41d316:	sahf   
  41d317:	jle    0x41d2db
  41d319:	push   edi
  41d31a:	push   esi
  41d31b:	or     al,BYTE PTR [edi+0x5ac9c229]
  41d321:	mov    eax,0xeb088d3
  41d326:	test   al,0xa2
  41d328:	fldcw  WORD PTR [edx-0x52]
  41d32b:	and    BYTE PTR [ebx+0xd4bea99],cl
  41d331:	jo     0x41d2ba
  41d333:	pushf  
  41d334:	add    ah,cl
  41d336:	fisttp WORD PTR [edi-0x20]
  41d339:	inc    ecx
  41d33a:	mov    ebx,0x2a1396c8
  41d33f:	stos   DWORD PTR es:[edi],eax
  41d340:	scas   al,BYTE PTR es:[edi]
  41d341:	xchg   edx,eax
  41d343:	stos   DWORD PTR es:[edi],eax
  41d344:	nop
  41d345:	(bad)  
  41d346:	aaa    
  41d347:	mov    dh,0x3e
  41d349:	popa   
  41d34a:	and    DWORD PTR [ecx],edx
  41d34c:	mov    ecx,0xe468af96
  41d351:	mov    ecx,esp
  41d353:	pop    edx
  41d354:	loopne 0x41d31b
  41d356:	jb     0x41d36b
  41d358:	std    
  41d359:	mov    cl,0x62
  41d35b:	fcom   st(3)
  41d35d:	in     al,0xd8
  41d35f:	sti    
  41d360:	inc    ecx
  41d361:	mov    ah,0x65
  41d363:	pop    edi
  41d364:	das    
  41d365:	adc    cl,ch
  41d367:	mov    DWORD PTR [edx-0x25],esi
  41d36a:	test   BYTE PTR [ebp-0x40],ah
  41d36d:	outs   dx,DWORD PTR ds:[esi]
  41d36e:	adc    eax,0xcd5671bb
  41d373:	mov    dh,0x8b
  41d375:	std    
  41d376:	outs   dx,DWORD PTR ds:[esi]
  41d377:	push   esi
  41d378:	daa    
  41d379:	int3   
  41d37a:	inc    ebp
  41d37b:	mov    cl,0x40
  41d37d:	push   esi
  41d37e:	jge    0x41d3c6
  41d380:	inc    eax
  41d381:	in     al,0xa4
  41d383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d384:	test   al,0x61
  41d386:	clc    
  41d387:	and    DWORD PTR [ebx],edx
  41d389:	adc    DWORD PTR [ecx-0x6912ecd0],esi
  41d38f:	mov    edi,0x62b6f87
  41d394:	mov    esi,0xcbdddfef
  41d399:	sub    eax,0xc2ffd6f6
  41d39e:	inc    esi
  41d39f:	es aam 0x59
  41d3a2:	jae    0x41d414
  41d3a4:	mov    eax,0x19c4ad03
  41d3a9:	mov    edx,0x73207c91
  41d3ae:	cmp    eax,0xd98139b2
  41d3b3:	xchg   esp,eax
  41d3b4:	mov    esp,0x2cf72da1
  41d3b9:	in     al,dx
  41d3ba:	cli    
  41d3bb:	mov    bh,0x57
  41d3bd:	loope  0x41d3a5
  41d3bf:	std    
  41d3c0:	push   edi
  41d3c1:	mov    dh,0x26
  41d3c3:	sar    bl,1
  41d3c5:	dec    ebp
  41d3c6:	std    
  41d3c7:	dec    ebp
  41d3c8:	in     al,dx
  41d3c9:	retf   0x21a5
  41d3cc:	test   ebp,0xf6989497
  41d3d2:	dec    esi
  41d3d3:	lods   al,BYTE PTR ds:[esi]
  41d3d4:	repz mov bl,0xef
  41d3d7:	icebp  
  41d3d8:	ret    0x4794
  41d3db:	shr    DWORD PTR [ebx+0x31b49056],0xec
  41d3e2:	cmp    al,0x26
  41d3e4:	push   esp
  41d3e5:	int    0xd9
  41d3e7:	mov    eax,esi
  41d3e9:	fldcw  WORD PTR ds:0x33cc7459
  41d3ef:	mov    ds:0xe38158ad,al
  41d3f4:	stos   BYTE PTR es:[edi],al
  41d3f5:	jns    0x41d38e
  41d3f7:	lods   al,BYTE PTR ds:[esi]
  41d3f8:	mov    eax,0xb931ff32
  41d3fd:	cmp    al,0xda
  41d3ff:	inc    edi
  41d400:	mov    ds:0xe7a9df63,al
  41d405:	leave  
  41d406:	lods   al,BYTE PTR ds:[esi]
  41d407:	jle    0x41d450
  41d409:	js     0x41d397
  41d40b:	mov    al,BYTE PTR [esi-0x79]
  41d40e:	jae    0x41d3a6
  41d410:	js     0x41d3e3
  41d412:	imul   edx,DWORD PTR [esi],0x2a
  41d415:	cmp    DWORD PTR [esi+0x3b97601a],0x3c
  41d41c:	push   0xffffff90
  41d41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d41f:	das    
  41d420:	test   eax,0xf2a40c17
  41d425:	call   0xb922:0xd6051e09
  41d42c:	pop    esp
  41d42d:	xor    ebp,edi
  41d42f:	add    BYTE PTR [eax],0xbc
  41d432:	dec    esp
  41d433:	jae    0x41d3ea
  41d435:	mov    dl,0x61
  41d437:	dec    ebp
  41d438:	popa   
  41d439:	jecxz  0x41d440
  41d43b:	ja     0x41d445
  41d43d:	data16 fst st(4)
  41d440:	or     BYTE PTR [edi+0x34],bl
  41d443:	adc    eax,0x7145f639
  41d448:	addr16 jne 0x41d3cb
  41d44b:	sub    al,0xb3
  41d44d:	cli    
  41d44e:	aad    0xdd
  41d450:	dec    DWORD PTR [ecx+0x5f42cb58]
  41d456:	dec    edx
  41d457:	inc    ecx
  41d458:	pop    ebp
  41d459:	pushf  
  41d45a:	clc    
  41d45b:	sbb    eax,0xaad9baea
  41d460:	inc    esi
  41d461:	mov    esi,0x9bd99d00
  41d466:	lods   eax,DWORD PTR ds:[esi]
  41d467:	arpl   WORD PTR [edx],si
  41d469:	jnp    0x41d4d7
  41d46b:	stc    
  41d46c:	frstor [ebx]
  41d46e:	sub    eax,0x2fc76f8a
  41d473:	es jg  0x41d424
  41d476:	jbe    0x41d408
  41d478:	pop    esp
  41d479:	mov    ecx,0xe67709f3
  41d47e:	pop    ebx
  41d47f:	push   eax
  41d480:	jmp    0xf8b2:0xbe042e72
  41d487:	push   0x114b07a1
  41d48c:	pop    ds
  41d48d:	mov    esi,0x9c7c485
  41d492:	inc    ebp
  41d493:	mov    ah,0xbd
  41d495:	push   0xffffffff
  41d497:	not    ah
  41d499:	jbe    0x41d433
  41d49b:	hlt    
  41d49c:	sub    eax,0x90621a02
  41d4a1:	jge    0x41d44e
  41d4a3:	add    dl,dh
  41d4a5:	jmp    0x41d42d
  41d4a7:	sbb    al,0x5c
  41d4a9:	call   0x19586500
  41d4ae:	ins    BYTE PTR es:[edi],dx
  41d4af:	jae    0x41d4bf
  41d4b1:	and    al,0xa9
  41d4b3:	sub    BYTE PTR [edx+0x58],ah
  41d4b6:	jl     0x41d49b
  41d4b8:	(bad)  
  41d4b9:	adc    dl,BYTE PTR [esi-0x1f]
  41d4bc:	bnd jnp 0x41d504
  41d4bf:	adc    DWORD PTR [esi+ebx*1+0x53],esp
  41d4c3:	in     eax,0x43
  41d4c5:	mov    dl,ah
  41d4c7:	rol    BYTE PTR [ebx],cl
  41d4c9:	ss sbb eax,0xe2117d01
  41d4cf:	sbb    ecx,DWORD PTR [esi+0x76]
  41d4d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4d3:	aad    0x92
  41d4d5:	and    eax,0xdc1258aa
  41d4da:	aas    
  41d4db:	adc    BYTE PTR [edi+0x46],0x83
  41d4df:	fcomp  DWORD PTR [ecx+0xb]
  41d4e2:	mov    edx,0x30d42500
  41d4e7:	xlat   BYTE PTR ds:[ebx]
  41d4e8:	mov    ch,0x3a
  41d4ea:	call   0x8c9:0x339c62f
  41d4f1:	inc    edi
  41d4f2:	push   edx
  41d4f3:	nop
  41d4f4:	push   0xaf45770
  41d4f9:	sbb    eax,0xf9152aa0
  41d4fe:	loop   0x41d4e7
  41d500:	lods   eax,DWORD PTR ds:[esi]
  41d501:	mov    bl,0x98
  41d503:	popa   
  41d504:	xchg   ebx,eax
  41d505:	daa    
  41d506:	push   ds
  41d507:	stc    
  41d508:	mov    edx,0x190b33d0
  41d50d:	aas    
  41d50e:	rcr    DWORD PTR [ebx+eax*2-0x4c],cl
  41d512:	mov    esp,0x648c9c5c
  41d517:	outs   dx,BYTE PTR ds:[esi]
  41d518:	inc    esi
  41d519:	jmp    0x41d517
  41d51b:	adc    eax,0xcb6ce410
  41d520:	sub    edi,DWORD PTR [esi+eiz*1-0x744f4074]
  41d527:	mov    ah,0x28
  41d529:	add    al,0xc
  41d52b:	mov    DWORD PTR [esi+ecx*4-0x933cfce],esp
  41d532:	mov    dl,0x4
  41d534:	pop    ebx
  41d535:	test   DWORD PTR [esi-0x250f0295],ebp
  41d53b:	leave  
  41d53c:	cmc    
  41d53d:	pop    ds
  41d53e:	fnsave [esi+0x583cd267]
  41d544:	mov    ds:0x2cc8fd5a,al
  41d549:	xlat   BYTE PTR ds:[ebx]
  41d54a:	pop    ecx
  41d54b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41d54d:	add    BYTE PTR [edx],ah
  41d54f:	jae    0x41d57f
  41d551:	jb     0x41d558
  41d553:	mov    dl,0xe1
  41d555:	jle    0x41d56d
  41d557:	aam    0x23
  41d559:	rol    DWORD PTR ds:0x88579600,cl
  41d55f:	jecxz  0x41d574
  41d561:	xchg   DWORD PTR [eax],edx
  41d563:	jmp    0xf706:0xad1de77d
  41d56a:	ins    BYTE PTR es:[edi],dx
  41d56b:	clc    
  41d56c:	ins    BYTE PTR es:[edi],dx
  41d56d:	sti    
  41d56e:	mov    WORD PTR [ebx-0x50],gs
  41d571:	cdq    
  41d572:	into   
  41d573:	dec    edx
  41d574:	lahf   
  41d575:	cmp    dl,dl
  41d577:	sub    BYTE PTR [edx-0x45],0x7e
  41d57b:	xchg   BYTE PTR [edx+eiz*8-0x89a48bf],ah
  41d582:	rcr    DWORD PTR [esi+ebp*4+0x6b],1
  41d586:	pop    ebx
  41d587:	lldt   WORD PTR [eax-0x39]
  41d58b:	mov    esi,0x44618863
  41d590:	arpl   WORD PTR [ecx+0x1bd3954],sp
  41d596:	push   0xc7bca283
  41d59b:	aas    
  41d59c:	and    cl,ch
  41d59e:	mov    dl,0x3d
  41d5a0:	(bad)  
  41d5a1:	sub    ebx,DWORD PTR [eax]
  41d5a3:	add    DWORD PTR [esi],ebp
  41d5a5:	mov    bh,0xa8
  41d5a7:	dec    ebp
  41d5a8:	in     al,0xfc
  41d5aa:	inc    edi
  41d5ab:	adc    eax,0xa6914aa0
  41d5b0:	jge    0x41d5aa
  41d5b2:	dec    esi
  41d5b3:	pushf  
  41d5b4:	mov    ebx,0xceef2dbd
  41d5b9:	sti    
  41d5ba:	pop    esp
  41d5bb:	or     DWORD PTR [esp+eax*1+0x51d9c192],0x513b1d6c
  41d5c6:	fild   DWORD PTR [ebx]
  41d5c8:	adc    bh,ah
  41d5ca:	imul   eax,esp,0xffffffa2
  41d5cd:	stos   DWORD PTR es:[edi],eax
  41d5ce:	inc    edi
  41d5cf:	popa   
  41d5d0:	and    eax,DWORD PTR [ebx-0x55]
  41d5d3:	mov    dh,0x8d
  41d5d5:	into   
  41d5d6:	mov    dh,0x67
  41d5d8:	jno    0x41d59f
  41d5da:	mov    DWORD PTR [ecx+0x28d6d985],edx
  41d5e0:	xchg   ebp,eax
  41d5e1:	mov    ah,BYTE PTR [eax]
  41d5e3:	or     bl,al
  41d5e5:	mov    eax,ds:0xf8c4c44a
  41d5ea:	and    DWORD PTR [ecx+0x7af172cb],eax
  41d5f0:	call   0x2070:0xa7bf034c
  41d5f7:	jp     0x41d59f
  41d5f9:	outs   dx,DWORD PTR ds:[esi]
  41d5fa:	add    ch,BYTE PTR ds:0xc786f979
  41d600:	fwait
  41d601:	add    edi,DWORD PTR [edi]
  41d603:	push   eax
  41d604:	out    dx,al
  41d605:	scas   al,BYTE PTR es:[edi]
  41d606:	loope  0x41d65d
  41d608:	mov    DWORD PTR ds:0x295608d,esi
  41d60e:	aad    0xd0
  41d610:	sbb    cl,bl
  41d612:	jb     0x41d59b
  41d614:	or     eax,0x645e9334
  41d619:	dec    esi
  41d61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d61b:	xor    bl,BYTE PTR [ebx+0x69ae28be]
  41d621:	cmp    BYTE PTR [esi],al
  41d623:	mov    bl,0x6d
  41d625:	adc    DWORD PTR [eax],ecx
  41d627:	mov    edx,0x5e76b01f
  41d62c:	add    DWORD PTR [ebx-0x7118c02d],ebp
  41d632:	mov    BYTE PTR [ebx+0x47e9e370],cl
  41d638:	out    dx,eax
  41d639:	adc    DWORD PTR [esi+ecx*8-0x6a],edx
  41d63d:	mov    cl,0x7d
  41d63f:	leave  
  41d640:	sahf   
  41d641:	jmp    0x41d6b7
  41d643:	nop
  41d644:	jge    0x41d62a
  41d646:	sub    bh,BYTE PTR [edx+eax*4]
  41d649:	mov    eax,0x75f2d553
  41d64e:	xchg   BYTE PTR [ebp-0x5877ea60],ah
  41d654:	dec    edi
  41d655:	loop   0x41d631
  41d657:	push   0x65
  41d659:	add    dl,cl
  41d65b:	ins    DWORD PTR es:[edi],dx
  41d65c:	mov    fs,WORD PTR [eax+0x59]
  41d65f:	nop
  41d660:	inc    ebx
  41d661:	mov    BYTE PTR [ecx],ah
  41d663:	mov    ebp,DWORD PTR [ecx-0x249700b8]
  41d669:	aaa    
  41d66a:	add    ah,cl
  41d66c:	cli    
  41d66d:	pushf  
  41d66e:	push   cs
  41d66f:	retf   
  41d670:	fldcw  WORD PTR [edi+0x2]
  41d673:	cmp    eax,0xd22131f3
  41d678:	in     eax,0x19
  41d67a:	pop    eax
  41d67b:	jmp    0x2fb35cc6
  41d680:	xchg   esp,eax
  41d681:	mov    bh,0x61
  41d683:	cdq    
  41d684:	call   0xd8fb:0xc9ef81b2
  41d68b:	xlat   BYTE PTR ds:[ebx]
  41d68c:	lea    ebx,[edx-0x6186b715]
  41d692:	cmp    al,0x61
  41d694:	in     eax,0xe4
  41d696:	ins    BYTE PTR es:[edi],dx
  41d697:	push   ebp
  41d698:	xor    al,0xc7
  41d69a:	lahf   
  41d69b:	loope  0x41d664
  41d69d:	or     al,0x31
  41d69f:	jmp    0x41d714
  41d6a1:	xor    edi,0x13
  41d6a4:	addr16 jne 0x41d71a
  41d6a7:	mov    ebp,0xc326ce92
  41d6ac:	cmp    al,0x9f
  41d6ae:	and    DWORD PTR [esi],edx
  41d6b0:	stos   DWORD PTR es:[edi],eax
  41d6b1:	test   al,0xe
  41d6b3:	jecxz  0x41d671
  41d6b5:	pop    ss
  41d6b6:	arpl   WORD PTR [edi],si
  41d6b8:	sub    cl,BYTE PTR [ebx-0x6d]
  41d6bb:	int    0xac
  41d6bd:	xchg   ebx,eax
  41d6be:	pop    ecx
  41d6bf:	sbb    BYTE PTR [ebx],0x18
  41d6c2:	outs   dx,BYTE PTR ds:[esi]
  41d6c3:	test   eax,0x9a0eae1e
  41d6c8:	pop    eax
  41d6c9:	pushf  
  41d6ca:	push   ebp
  41d6cb:	inc    ebp
  41d6cc:	iret   
  41d6cd:	inc    edx
  41d6ce:	cdq    
  41d6cf:	sub    BYTE PTR [edx],ch
  41d6d1:	jg     0x41d6ef
  41d6d3:	div    DWORD PTR [ebp+0x64]
  41d6d6:	push   esp
  41d6d7:	daa    
  41d6d8:	aaa    
  41d6d9:	hlt    
  41d6da:	sbb    edx,DWORD PTR [ebx-0x73]
  41d6dd:	test   eax,0x803486c0
  41d6e2:	dec    edi
  41d6e3:	repnz cli 
  41d6e5:	pop    ebx
  41d6e6:	pop    esp
  41d6e7:	mov    bl,0xb2
  41d6e9:	cs (bad) 
  41d6eb:	adc    ecx,edi
  41d6ed:	xlat   BYTE PTR ds:[ebx]
  41d6ee:	loop   0x41d6d5
  41d6f0:	cdq    
  41d6f1:	push   eax
  41d6f2:	int    0x68
  41d6f4:	mov    ecx,0x394ef905
  41d6f9:	cli    
  41d6fa:	mov    ah,0x4c
  41d6fc:	(bad)  
  41d6fe:	dec    edi
  41d6ff:	sub    eax,0xb940c83c
  41d704:	pop    esp
  41d705:	xabort 0x93
  41d708:	jbe    0x41d6df
  41d70a:	and    ebx,DWORD PTR [ebp+0x30]
  41d70d:	mov    esi,0x486fa6b6
  41d712:	add    al,0x76
  41d714:	jl     0x41d715
  41d716:	or     eax,0x11723fde
  41d71b:	cli    
  41d71c:	fs add edi,esi
  41d71f:	or     eax,eax
  41d721:	stos   BYTE PTR es:[edi],al
  41d722:	sub    BYTE PTR [edx-0x80],dh
  41d725:	ins    DWORD PTR es:[edi],dx
  41d726:	nop
  41d727:	inc    eax
  41d728:	cmp    dl,bl
  41d72a:	repz mov esi,esp
  41d72d:	dec    ebp
  41d72e:	out    dx,al
  41d72f:	(bad)  
  41d730:	add    DWORD PTR [esp+edx*8-0x450f7457],ebp
  41d737:	jecxz  0x41d737
  41d739:	xchg   ecx,eax
  41d73a:	cmp    BYTE PTR [edx],dh
  41d73c:	or     eax,0x8099ccbe
  41d741:	push   es
  41d742:	adc    dl,BYTE PTR ds:[ebx+ecx*8]
  41d746:	clc    
  41d747:	int3   
  41d748:	stc    
  41d749:	sub    BYTE PTR [esi],al
  41d74b:	push   0x39c97c2f
  41d750:	cmp    al,0xb5
  41d752:	or     al,BYTE PTR [edx-0x13]
  41d755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d756:	cli    
  41d757:	push   edi
  41d758:	adc    al,0x80
  41d75a:	and    edi,0x695916e9
  41d760:	push   ss
  41d761:	cmc    
  41d762:	clc    
  41d763:	(bad)  
  41d764:	and    eax,DWORD PTR [ebx]
  41d766:	sub    eax,0x839655bc
  41d76b:	lds    eax,FWORD PTR [esi+0x29]
  41d76e:	ret    
  41d76f:	ficom  DWORD PTR [ecx+0x6b]
  41d772:	lea    ebp,[esi-0x1224e677]
  41d778:	xor    al,0x23
  41d77a:	adc    eax,0xe3c96452
  41d77f:	sub    eax,0x937708c5
  41d784:	ror    BYTE PTR [ebp-0x4eea5632],0x4d
  41d78b:	ss xchg edx,eax
  41d78d:	retf   0x2577
  41d790:	nop
  41d791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d792:	adc    cl,BYTE PTR [ecx+0x63]
  41d795:	aas    
  41d796:	or     DWORD PTR [eax+edx*4+0x5f],eax
  41d79a:	push   es
  41d79b:	or     eax,0x43dc3450
  41d7a0:	cmp    esp,DWORD PTR [ecx-0x31729add]
  41d7a6:	push   es
  41d7a7:	mov    cl,0x22
  41d7a9:	repz add bl,ah
  41d7ac:	test   al,0x5e
  41d7ae:	push   ds
  41d7af:	and    esp,DWORD PTR [ebx-0x64]
  41d7b2:	sbb    DWORD PTR [edx],esi
  41d7b4:	mov    BYTE PTR [esi],bl
  41d7b6:	cmp    ah,BYTE PTR [ebp-0x187e89e8]
  41d7bc:	jmp    0xd735:0x8345e34a
  41d7c3:	test   BYTE PTR [ecx],0xfc
  41d7c6:	sbb    al,0x6f
  41d7c9:	sysexit 
  41d7cb:	push   0xffffffdb
  41d7cd:	pop    ebx
  41d7ce:	rcl    ch,0x61
  41d7d1:	jnp    0x41d816
  41d7d3:	adc    BYTE PTR [ebx-0x2],ch
  41d7d6:	iret   
  41d7d7:	xor    bl,BYTE PTR [ebp+0x2092bf8a]
  41d7dd:	pop    ebp
  41d7de:	cmp    DWORD PTR [edx+0x3f],edx
  41d7e1:	mov    BYTE PTR [eax],ah
  41d7e3:	mov    edx,0x35df669
  41d7e8:	pop    edx
  41d7e9:	cmp    edi,DWORD PTR [edx+0x47251acd]
  41d7ef:	(bad)  
  41d7f0:	sbb    eax,0x84ac2909
  41d7f5:	shl    BYTE PTR [edx+esi*1],0x4e
  41d7f9:	sub    al,0xb9
  41d7fb:	scas   eax,DWORD PTR es:[edi]
  41d7fc:	add    al,BYTE PTR [bp+di-0x37]
  41d800:	jp     0x41d86c
  41d802:	adc    eax,0x4266d88a
  41d807:	xor    BYTE PTR [edx],0x9f
  41d80a:	mov    esp,0xa6a8b9e1
  41d80f:	test   BYTE PTR [esi],ch
  41d811:	xchg   edx,eax
  41d812:	adc    DWORD PTR [ebp+0x54f8d695],edx
  41d818:	fs out dx,eax
  41d81a:	mov    al,BYTE PTR [edx+edx*1+0x29]
  41d81e:	mov    al,BYTE PTR [edi+0x5f03b2a5]
  41d824:	and    eax,0xffffffcf
  41d827:	push   ss
  41d828:	test   BYTE PTR [eax],0xf5
  41d82b:	adc    BYTE PTR [esi-0x3205a972],al
  41d831:	xlat   BYTE PTR ds:[ebx]
  41d832:	iret   
  41d833:	mov    edi,ebx
  41d835:	pop    ebx
  41d836:	(bad)  
  41d837:	cmc    
  41d838:	jae    0x41d8ae
  41d83a:	daa    
  41d83b:	and    ebp,0x23b2b0b
  41d841:	arpl   WORD PTR [ebx],sp
  41d843:	inc    esp
  41d844:	(bad)  
  41d845:	imul   ecx,DWORD PTR [ebx+0x54],0xbf8e5c2d
  41d84c:	daa    
  41d84d:	mov    al,ds:0xbf512cf6
  41d852:	pushf  
  41d853:	mov    edi,0xa2c0e779
  41d858:	ins    DWORD PTR es:[edi],dx
  41d859:	adc    DWORD PTR [eax+0x1fb1130e],0x52
  41d860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d861:	mov    DWORD PTR [ebx-0x74],ebp
  41d864:	pop    ebx
  41d865:	jl     0x41d816
  41d867:	xchg   eax,esp
  41d869:	aaa    
  41d86a:	loopne 0x41d8ac
  41d86c:	push   ss
  41d86d:	(bad)  
  41d86e:	aas    
  41d86f:	sub    bh,al
  41d871:	sub    ch,BYTE PTR [ecx]
  41d873:	xchg   BYTE PTR [edi],dh
  41d875:	out    0x8d,al
  41d877:	shl    DWORD PTR [eax-0x36cb2336],1
  41d87d:	mov    dl,0xe6
  41d87f:	fisub  DWORD PTR [ebp+0x3670d967]
  41d885:	test   BYTE PTR [edi],bh
  41d887:	mov    dl,0x44
  41d889:	jo     0x41d905
  41d88b:	cdq    
  41d88c:	mov    edi,0x66856922
  41d891:	and    DWORD PTR [ecx],eax
  41d893:	push   es
  41d894:	adc    eax,0x9d034e63
  41d899:	je     0x41d906
  41d89b:	jge    0x41d8b8
  41d89d:	pop    es
  41d89e:	xchg   esp,eax
  41d89f:	nop
  41d8a0:	xchg   ecx,eax
  41d8a1:	daa    
  41d8a2:	stos   DWORD PTR es:[di],eax
  41d8a4:	or     bh,BYTE PTR [ebx]
  41d8a6:	sbb    esp,DWORD PTR [eax-0x5c]
  41d8a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8aa:	mov    al,0x5c
  41d8ac:	push   0xffffffb0
  41d8ae:	fwait
  41d8af:	pop    ecx
  41d8b0:	dec    edi
  41d8b1:	cld    
  41d8b2:	mov    eax,0x12de9d5
  41d8b7:	leave  
  41d8b8:	jl     0x41d84b
  41d8ba:	push   es
  41d8bb:	xchg   esi,eax
  41d8bc:	addr16 jle 0x41d923
  41d8bf:	jg     0x41d8c3
  41d8c1:	jb     0x41d882
  41d8c3:	add    al,0x1f
  41d8c5:	push   0xac6d14a5
  41d8ca:	xor    edx,0xbee55e6
  41d8d0:	jae    0x41d8f6
  41d8d2:	lds    esi,FWORD PTR [ecx+0x57]
  41d8d5:	lds    eax,FWORD PTR [ecx-0x3b]
  41d8d8:	iret   
  41d8d9:	or     eax,0xd63aa155
  41d8de:	add    eax,0xa3ba4c48
  41d8e3:	js     0x41d954
  41d8e5:	call   0x958ca260
  41d8ea:	aas    
  41d8eb:	push   0x970bed96
  41d8f0:	stos   DWORD PTR es:[edi],eax
  41d8f1:	mov    ebp,0xd394226f
  41d8f6:	sti    
  41d8f7:	(bad)  
  41d8f9:	pop    ss
  41d8fa:	push   0xffffffdd
  41d8fc:	repz f2xm1 
  41d8ff:	(bad)  
  41d900:	pop    ecx
  41d901:	inc    eax
  41d902:	cdq    
  41d903:	push   ds
  41d904:	fcmovnbe st,st(4)
  41d906:	jmp    0x6720:0x8be575d3
  41d90d:	dec    eax
  41d90e:	dec    edi
  41d90f:	rcr    DWORD PTR [ebx],0x87
  41d912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d913:	fcomip st,st(2)
  41d915:	xchg   esp,eax
  41d916:	pusha  
  41d917:	xor    BYTE PTR [esi+0x10],0xfd
  41d91b:	sub    DWORD PTR [esi+0x61],edx
  41d91e:	add    DWORD PTR [ecx+0x5],eax
  41d921:	jno    0x41d8ba
  41d923:	arpl   WORD PTR [edi+0x16caca5a],bp
  41d929:	jae    0x41d8b5
  41d92b:	int    0x2c
  41d92d:	pop    edi
  41d92e:	xchg   esi,eax
  41d92f:	mov    ebp,0x9a9a3bf1
  41d934:	test   eax,0x667b4ab9
  41d939:	and    dh,BYTE PTR [ecx]
  41d93b:	push   edi
  41d93c:	(bad)  
  41d93d:	push   ss
  41d93e:	mul    DWORD PTR [edx]
  41d940:	push   edi
  41d941:	jo     0x41d971
  41d943:	lock jae 0x41d9be
  41d946:	sub    dh,BYTE PTR [ecx+eax*2]
  41d949:	adc    ebx,0x6502f256
  41d94f:	sbb    eax,0x9f915b67
  41d954:	es or  edi,esp
  41d957:	push   es
  41d958:	inc    ecx
  41d959:	xchg   esi,eax
  41d95a:	shl    BYTE PTR [esp+ecx*1+0x1e],0x32
  41d95f:	fsub   QWORD PTR [esi-0x54344211]
  41d965:	xchg   ebp,eax
  41d966:	jge    0x41d8f0
  41d968:	xor    cl,BYTE PTR [eax*4+0x64668e7]
  41d96f:	and    al,0x75
  41d971:	in     al,dx
  41d972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d973:	shr    BYTE PTR [edx+0x165915e1],cl
  41d979:	imul   esp,DWORD PTR ds:0x7d473cb8,0xd1ed1375
  41d983:	jnp    0x41d916
  41d985:	iret   
  41d986:	sbb    al,ch
  41d988:	pop    ecx
  41d989:	out    0xce,al
  41d98b:	push   esi
  41d98c:	imul   ecx,esp,0xffffffd1
  41d98f:	cdq    
  41d990:	and    BYTE PTR [esp+ebp*4-0x1b233e88],dh
  41d997:	(bad)  
  41d999:	jmp    0x5fc7:0x2036c74b
  41d9a0:	mov    edi,0x44261ceb
  41d9a5:	nop    DWORD PTR [ecx]
  41d9a8:	add    BYTE PTR [ecx+0x69],dh
  41d9ab:	and    al,al
  41d9ad:	cmp    BYTE PTR [edi],bl
  41d9af:	shr    BYTE PTR ds:0x1f13887d,1
  41d9b5:	pop    eax
  41d9b7:	push   ss
  41d9b8:	xchg   DWORD PTR [ebp-0x56014e21],edx
  41d9be:	pop    esp
  41d9bf:	sbb    al,0x49
  41d9c1:	mov    ebx,0xe2b70e95
  41d9c6:	fdivr  DWORD PTR [ecx]
  41d9c8:	and    esi,DWORD PTR [ecx+0x35]
  41d9cb:	xchg   ecx,eax
  41d9cc:	adc    BYTE PTR [ecx+esi*1],ch
  41d9cf:	jbe    0x41d953
  41d9d1:	cmp    dh,BYTE PTR [ecx+ebx*4+0x3c]
  41d9d5:	push   0xd30cfdbf
  41d9da:	xchg   BYTE PTR [edi-0x46],bh
  41d9dd:	or     al,0x1d
  41d9df:	or     al,0x73
  41d9e1:	sahf   
  41d9e2:	cdq    
  41d9e3:	add    ecx,edi
  41d9e5:	push   ecx
  41d9e6:	pusha  
  41d9e7:	mov    dl,0x4f
  41d9e9:	add    dl,0xf7
  41d9ec:	mov    edx,0x66e2ea57
  41d9f1:	stos   BYTE PTR es:[edi],al
  41d9f2:	and    bl,ah
  41d9f4:	out    dx,al
  41d9f5:	xchg   DWORD PTR [edi-0x31],ebx
  41d9f8:	jecxz  0x41da50
  41d9fa:	mov    ebp,0x41df31f6
  41d9ff:	or     DWORD PTR [edi],esp
  41da01:	mov    dh,0x10
  41da03:	mov    cl,0x3c
  41da05:	(bad)  
  41da06:	adc    BYTE PTR [esp+eax*1-0x3e],ch
  41da0a:	add    bh,BYTE PTR [ebx+eax*2+0x5c]
  41da0e:	or     al,0x1c
  41da10:	and    dh,BYTE PTR [ecx-0x67]
  41da13:	cmp    eax,0xc2e81dee
  41da18:	sub    BYTE PTR [ebp+ecx*4-0x3c],bh
  41da1c:	arpl   si,di
  41da1e:	sub    eax,0x5dd4386
  41da23:	pushf  
  41da24:	add    eax,0x2c121606
  41da29:	mov    esi,0xe685e94
  41da2e:	pop    ebp
  41da2f:	leave  
  41da30:	add    DWORD PTR [ecx+eax*8-0x73],esi
  41da34:	out    dx,eax
  41da35:	and    al,0x15
  41da37:	cmp    ah,al
  41da39:	jle    0x41da1e
  41da3b:	xor    BYTE PTR [edx+0x13a7d34a],0x44
  41da42:	xchg   ebp,eax
  41da43:	inc    ebp
  41da44:	out    0x7b,al
  41da46:	leave  
  41da47:	mov    ecx,0xba7ed550
  41da4c:	adc    BYTE PTR [edx-0x36],dl
  41da4f:	repnz sbb eax,0xe6a2bf90
  41da55:	adc    al,0x8a
  41da57:	xlat   BYTE PTR ds:[ebx]
  41da58:	addr16 sbb eax,0x3aad29f5
  41da5e:	push   ecx
  41da5f:	retf   
  41da60:	sub    BYTE PTR [ebx+0x63],bh
  41da63:	adc    cl,dh
  41da65:	pop    eax
  41da66:	mov    ah,0x4d
  41da68:	popa   
  41da69:	push   esp
  41da6a:	dec    ecx
  41da6b:	lahf   
  41da6c:	(bad)  
  41da6d:	push   DWORD PTR [ebx-0x17ee86c6]
  41da73:	fidivr WORD PTR [ebp-0x190e59d6]
  41da79:	aad    0xb2
  41da7b:	inc    ebp
  41da7c:	aam    0xd6
  41da7e:	adc    BYTE PTR [ebx-0x5],cl
  41da81:	pop    ds
  41da82:	pop    ebp
  41da83:	xchg   ebp,eax
  41da84:	mov    dl,0x35
  41da86:	pop    edx
  41da87:	fwait
  41da88:	and    al,0xe7
  41da8a:	mov    esi,0x59ee8277
  41da8f:	jne    0x41dabe
  41da91:	mov    dh,0x66
  41da93:	fidiv  DWORD PTR [edi-0x53f9ff25]
  41da99:	retf   0xe6dc
  41da9c:	push   0xf9e31261
  41daa1:	ficomp DWORD PTR [ebp-0x1497ef10]
  41daa7:	xchg   ch,ch
  41daa9:	push   edi
  41daaa:	xchg   edi,eax
  41daab:	push   edi
  41daac:	inc    ecx
  41daad:	ins    DWORD PTR es:[edi],dx
  41daae:	fnstsw WORD PTR [ebx-0x153eb3ce]
  41dab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dab5:	jno    0x41dac5
  41dab7:	fs dec ecx
  41dab9:	sbb    BYTE PTR [esi+0x3d],ch
  41dabc:	pop    ecx
  41dabd:	test   eax,0x40ba4f86
  41dac2:	repnz rcl BYTE PTR [esi-0x397a8a01],0x68
  41daca:	daa    
  41dacb:	clc    
  41dacc:	test   al,al
  41dace:	xchg   BYTE PTR [ebx],bl
  41dad0:	sub    DWORD PTR [edi-0x76a78ecd],edx
  41dad6:	pop    ss
  41dad7:	xor    DWORD PTR ds:0x27d94124,esp
  41dadd:	es cli 
  41dadf:	hlt    
  41dae0:	pop    ebp
  41dae1:	repz add ch,ch
  41dae4:	dec    ecx
  41dae5:	cld    
  41dae6:	dec    edi
  41dae7:	pop    ecx
  41dae8:	aaa    
  41dae9:	inc    eax
  41daea:	jmp    FWORD PTR [edx+0x28b7464f]
  41daf0:	test   eax,0x9bb3b23f
  41daf5:	loope  0x41db37
  41daf7:	sub    eax,0xba8aa4d1
  41dafc:	lea    edx,[ebx-0x4b]
  41daff:	xor    bl,BYTE PTR [ecx]
  41db01:	adc    bl,BYTE PTR [eax-0x6d]
  41db04:	jmp    0x41db56
  41db06:	sti    
  41db07:	inc    eax
  41db08:	jmp    0x41dada
  41db0a:	scas   al,BYTE PTR es:[edi]
  41db0b:	mov    dl,0x5a
  41db0d:	ds add eax,0x9b8c5ff9
  41db13:	ficomp WORD PTR [ecx+0x317e7a6f]
  41db19:	retf   0xb17a
  41db1c:	mov    esi,0xcad9f2e2
  41db21:	aam    0xe7
  41db23:	mov    ?,WORD PTR [eax-0x3c]
  41db26:	rol    BYTE PTR [esi+0x5a],cl
  41db29:	dec    edx
  41db2a:	sbb    DWORD PTR [edx+0x211d3e62],edi
  41db30:	xor    edi,ebp
  41db32:	hlt    
  41db33:	ins    BYTE PTR es:[edi],dx
  41db34:	dec    esp
  41db35:	mov    ebx,0x1537b2d2
  41db3a:	or     esp,ecx
  41db3c:	arpl   WORD PTR [eax],di
  41db3e:	cmp    BYTE PTR [edi+0x5a45f4bd],dl
  41db44:	jge    0x41db90
  41db46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db47:	leave  
  41db48:	rep lods eax,DWORD PTR ds:[esi]
  41db4a:	mov    gs,WORD PTR [edi-0x3c]
  41db4d:	jg     0x41dbbf
  41db4f:	sub    al,BYTE PTR ds:0x145dc52b
  41db55:	outs   dx,DWORD PTR ds:[esi]
  41db56:	pusha  
  41db57:	and    DWORD PTR [ecx-0x3e56a6da],eax
  41db5d:	out    0x58,al
  41db5f:	push   edx
  41db60:	add    edi,ebx
  41db62:	xor    BYTE PTR [ecx-0x27],cl
  41db65:	xor    ch,BYTE PTR [edx]
  41db67:	inc    edx
  41db68:	push   es
  41db69:	mov    BYTE PTR [edx-0xfbb3ba9],dl
  41db6f:	pop    eax
  41db70:	fdiv   st(5),st
  41db72:	jmp    0x8592:0xc159cf32
  41db79:	xor    bh,BYTE PTR [edx+0x1b]
  41db7c:	mov    al,ds:0xa1f24391
  41db81:	cli    
  41db82:	adc    DWORD PTR [edi+0x1805bcb0],0xffffffb9
  41db89:	mov    esp,0xcc70d788
  41db8e:	xor    cl,BYTE PTR [edx-0x7f2dbc8e]
  41db94:	hlt    
  41db95:	add    DWORD PTR [ebx+0x3],ebp
  41db98:	lds    esi,FWORD PTR [esi]
  41db9a:	sub    bh,BYTE PTR [edi]
  41db9c:	push   ds
  41db9d:	sub    al,0x4f
  41db9f:	or     ch,BYTE PTR [esi-0xe]
  41dba2:	out    dx,al
  41dba3:	clc    
  41dba4:	(bad)  
  41dba5:	fcmove st,st(1)
  41dba7:	sar    BYTE PTR [ecx+0x28],0x1f
  41dbab:	cmp    DWORD PTR [eax+0x13],edx
  41dbae:	retf   0x2934
  41dbb1:	push   edx
  41dbb2:	call   0x553d:0xe7572e39
  41dbb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbba:	fucomp st(4)
  41dbbc:	sar    BYTE PTR [ebx+eiz*1+0x6b],1
  41dbc0:	pop    es
  41dbc1:	std    
  41dbc2:	(bad)  
  41dbc3:	mov    WORD PTR [edi-0x50b46fd9],?
  41dbc9:	mov    al,ds:0xe95afc3d
  41dbce:	icebp  
  41dbcf:	pusha  
  41dbd0:	dec    edx
  41dbd1:	jp     0x41dbf2
  41dbd3:	adc    bh,BYTE PTR [ebx+0x7d]
  41dbd6:	mov    cl,0xa8
  41dbd8:	dec    esi
  41dbd9:	adc    eax,0xfa22abc9
  41dbde:	fwait
  41dbdf:	adc    eax,0x66add3b2
  41dbe4:	ror    DWORD PTR [ebx+eiz*1-0x5b],1
  41dbe8:	outs   dx,DWORD PTR ds:[esi]
  41dbe9:	mov    ecx,0xeeeb846e
  41dbee:	adc    BYTE PTR ds:0x63cb27dd,0x1d
  41dbf5:	cmp    al,0xc3
  41dbf7:	sti    
  41dbf8:	xchg   esp,eax
  41dbf9:	jo     0x41dbd2
  41dbfb:	dec    edx
  41dbfc:	dec    edx
  41dbfd:	test   eax,0xf453d3b2
  41dc02:	and    BYTE PTR [eax+ebp*2-0x44],bl
  41dc06:	outs   dx,BYTE PTR ds:[esi]
  41dc07:	jae    0x41dbd5
  41dc09:	push   0xffffffd5
  41dc0b:	stos   DWORD PTR es:[edi],eax
  41dc0c:	inc    eax
  41dc0d:	bound  eax,QWORD PTR [ebx+0x3a7ea08e]
  41dc13:	pop    edx
  41dc14:	add    eax,0x40ab528c
  41dc19:	mov    edx,edx
  41dc1b:	push   eax
  41dc1c:	sti    
  41dc1d:	and    al,0x1a
  41dc1f:	add    ah,0x9c
  41dc22:	and    al,BYTE PTR [eax]
  41dc24:	sbb    BYTE PTR [esi+0x18],0xa2
  41dc28:	jb     0x41dbd4
  41dc2a:	scas   al,BYTE PTR es:[edi]
  41dc2b:	popa   
  41dc2c:	add    esp,0xffffffa9
  41dc2f:	retf   
  41dc30:	les    edi,FWORD PTR [ecx]
  41dc32:	popa   
  41dc33:	sub    BYTE PTR [ebx-0x1e5a2e39],bl
  41dc39:	in     eax,dx
  41dc3a:	push   eax
  41dc3b:	xchg   ebx,eax
  41dc3c:	or     BYTE PTR [ebx*1-0x498f061c],0x1f
  41dc44:	pop    edi
  41dc45:	icebp  
  41dc46:	into   
  41dc47:	mov    edi,0x20715d07
  41dc4c:	dec    ecx
  41dc4d:	xchg   ecx,eax
  41dc4e:	jecxz  0x41dcc3
  41dc50:	mov    BYTE PTR [esi],bl
  41dc52:	test   DWORD PTR [ebx],edx
  41dc54:	xchg   esp,eax
  41dc55:	jbe    0x41dcaf
  41dc57:	jo     0x41dc93
  41dc59:	dec    edx
  41dc5a:	data16 fidiv WORD PTR [ebx]
  41dc5d:	cmp    bh,BYTE PTR ss:[edi]
  41dc60:	push   edx
  41dc61:	dec    eax
  41dc62:	inc    ebx
  41dc63:	sub    edx,DWORD PTR [ecx]
  41dc65:	lea    edx,[ecx+0x5ec2c701]
  41dc6b:	xor    ebp,DWORD PTR [ebx]
  41dc6d:	fnstsw WORD PTR [ebp+0x29]
  41dc70:	xchg   BYTE PTR [esi+0x74],al
  41dc73:	popa   
  41dc74:	mov    dh,0xe8
  41dc76:	cmp    DWORD PTR [eax+0x79],edi
  41dc79:	pop    ecx
  41dc7a:	push   0x64
  41dc7c:	aad    0x17
  41dc7e:	cs pop ecx
  41dc80:	data16 lods al,BYTE PTR ds:[esi]
  41dc82:	xchg   esi,eax
  41dc83:	push   ds
  41dc84:	mov    ecx,0x53b3ef85
  41dc89:	push   edx
  41dc8a:	xchg   ebp,eax
  41dc8b:	gs pop ds
  41dc8d:	push   ebp
  41dc8e:	inc    ebp
  41dc8f:	sar    BYTE PTR [ebp-0x57],1
  41dc92:	call   0xe7c5e84b
  41dc97:	add    BYTE PTR [eax],0xc1
  41dc9a:	ret    0x6dbb
  41dc9d:	sbb    al,0xaf
  41dc9f:	loop   0x41dce9
  41dca1:	cmp    DWORD PTR [ebp+0xc],0xfffffffb
  41dca5:	call   0x97e71609
  41dcaa:	call   0x9ef5:0x6cfe37f
  41dcb1:	push   0x1e
  41dcb3:	bound  ebx,QWORD PTR [ebx-0x3de27585]
  41dcb9:	add    esi,DWORD PTR [eax]
  41dcbb:	inc    ecx
  41dcbc:	mov    al,ds:0xf2dba630
  41dcc1:	pushf  
  41dcc2:	out    dx,al
  41dcc3:	jnp    0x41dc9c
  41dcc5:	xor    eax,0x9d5c03b2
  41dcca:	sub    ecx,edi
  41dccc:	(bad)  
  41dcce:	or     DWORD PTR [ebx+esi*1+0x54],ebp
  41dcd2:	scas   al,BYTE PTR es:[edi]
  41dcd3:	cmc    
  41dcd4:	mov    bh,0xf
  41dcd6:	fbstp  TBYTE PTR [edx-0x48]
  41dcd9:	dec    esi
  41dcda:	inc    esp
  41dcdb:	popa   
  41dcdc:	xor    DWORD PTR [ecx+0x1e478336],0xa86c9a4e
  41dce6:	mov    ebp,0xbea1b08b
  41dceb:	fistp  WORD PTR [edi]
  41dced:	xor    al,0x23
  41dcef:	mov    eax,0xac993cb
  41dcf4:	push   edx
  41dcf5:	mov    cl,0xab
  41dcf7:	stos   WORD PTR es:[edi],ax
  41dcf9:	and    eax,0x7ad5e85b
  41dcfe:	jno    0x41dd47
  41dd00:	xor    BYTE PTR [esi],dl
  41dd02:	push   es
  41dd03:	inc    eax
  41dd04:	jae    0x41dca3
  41dd06:	cmc    
  41dd07:	lods   eax,DWORD PTR ds:[esi]
  41dd08:	or     BYTE PTR [eax-0x6d],al
  41dd0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd0c:	std    
  41dd0d:	loop   0x41dd79
  41dd0f:	and    DWORD PTR [edx],ebp
  41dd11:	dec    esi
  41dd12:	lea    eax,[eax-0xb]
  41dd15:	add    edi,0xb5804236
  41dd1b:	cmp    dl,BYTE PTR [ecx+0x307eb376]
  41dd21:	fmul   QWORD PTR [edx-0x4348487]
  41dd27:	test   DWORD PTR [edx-0x4],ebx
  41dd2a:	mov    ds:0x447e47b6,al
  41dd2f:	pushf  
  41dd30:	in     eax,dx
  41dd31:	popa   
  41dd32:	test   eax,0xc13e108b
  41dd37:	je     0x41dd50
  41dd39:	xor    eax,0x7c56c947
  41dd3e:	mov    dh,0xef
  41dd40:	pusha  
  41dd41:	mov    DWORD PTR [edi-0x1b4c8612],eax
  41dd47:	or     dh,bh
  41dd49:	int    0xd9
  41dd4b:	pop    edx
  41dd4c:	dec    eax
  41dd4d:	fmul   DWORD PTR [edx+0x57fcb863]
  41dd53:	cwde   
  41dd54:	and    al,0xb0
  41dd56:	dec    esp
  41dd57:	cmp    eax,0xacb752b3
  41dd5c:	xor    al,BYTE PTR [ecx-0x6a]
  41dd5f:	and    eax,0x648533ec
  41dd64:	pop    ebp
  41dd65:	xchg   edi,eax
  41dd66:	sahf   
  41dd67:	push   edx
  41dd68:	pop    eax
  41dd69:	imul   esp,DWORD PTR [edi-0x53dd8aec],0x6915846f
  41dd73:	repz push ebp
  41dd75:	cs push ebx
  41dd77:	(bad)  [edi+edi*8-0x41fd4802]
  41dd7e:	xlat   BYTE PTR ds:[ebx]
  41dd7f:	inc    esp
  41dd80:	mov    eax,0x77ae011f
  41dd85:	add    al,0x3c
  41dd87:	cmp    DWORD PTR [eax+edi*1-0x799743d2],0xffffff80
  41dd8f:	cmp    DWORD PTR [ebx+edi*2],0x5d4e0d17
  41dd96:	imul   edx,DWORD PTR [ebp-0x61],0xffffffdc
  41dd9a:	mov    eax,0x702b8b2e
  41dd9f:	call   DWORD PTR [ecx-0x22]
  41dda2:	ret    0x1f62
  41dda5:	push   cs
  41dda6:	add    eax,0xf7bdcbf8
  41ddab:	pop    ecx
  41ddac:	nop
  41ddad:	sbb    al,0x7c
  41ddaf:	and    BYTE PTR [eax-0x45e98d2e],0x8c
  41ddb6:	cmp    DWORD PTR [edx+esi*2-0x6b],ecx
  41ddba:	pop    ecx
  41ddbb:	adc    eax,0xd51e4415
  41ddc0:	adc    esi,DWORD PTR [ebp+0x1c82725a]
  41ddc6:	mov    ebx,0x1a110558
  41ddcb:	cmp    ah,bh
  41ddcd:	jns    0x41dd85
  41ddcf:	or     al,BYTE PTR [edx+ebp*1-0x3f9fee67]
  41ddd6:	push   ebp
  41ddd7:	jo     0x41ddd3
  41ddd9:	pop    esi
  41ddda:	aam    0x5e
  41dddc:	sub    ah,BYTE PTR ds:0xa068341f
  41dde2:	lahf   
  41dde3:	stos   BYTE PTR es:[edi],al
  41dde4:	ins    BYTE PTR es:[edi],dx
  41dde5:	lock sub edi,ebx
  41dde8:	js     0x41dddb
  41ddea:	(bad)  
  41ddeb:	xor    eax,0x68c14bee
  41ddf0:	cmp    ah,bl
  41ddf2:	loope  0x41de2a
  41ddf4:	leave  
  41ddf5:	sbb    dl,dh
  41ddf7:	sbb    ecx,DWORD PTR [esp+eiz*4+0x2b75ecc1]
  41ddfe:	push   edi
  41ddff:	bound  ecx,QWORD PTR [ebx]
  41de01:	mov    esp,ecx
  41de03:	push   esi
  41de04:	mov    esp,0xddd7d330
  41de09:	int    0xa6
  41de0b:	into   
  41de0c:	mov    ebp,0x1eb392f7
  41de11:	ror    BYTE PTR [ebx+0x6fced1aa],0xb7
  41de18:	push   edx
  41de19:	adc    BYTE PTR [edi-0x536430c0],ch
  41de1f:	pop    ss
  41de20:	cmp    DWORD PTR [eax-0xc],edx
  41de23:	es mov ecx,0x565a9792
  41de29:	inc    ebp
  41de2a:	dec    eax
  41de2b:	imul   DWORD PTR [ecx]
  41de2d:	mov    ah,0x9c
  41de2f:	mov    BYTE PTR [ecx+0x2c9dd8ca],dl
  41de35:	adc    eax,0x183bcd53
  41de3a:	in     al,0x35
  41de3c:	mov    WORD PTR [edi],gs
  41de3e:	jmp    0x340049c0
  41de43:	mov    ebp,0xb4a767fb
  41de48:	jmp    0x41deb1
  41de4a:	or     BYTE PTR [esi+ebx*2],0x44
  41de4e:	mov    esp,DWORD PTR [esi+0x62856a4c]
  41de54:	retf   
  41de55:	pop    eax
  41de56:	push   esi
  41de57:	add    dh,0x60
  41de5a:	rcl    cl,1
  41de5c:	pop    esp
  41de5d:	sti    
  41de5e:	int3   
  41de5f:	les    eax,FWORD PTR [ecx]
  41de61:	xchg   DWORD PTR [eax+0x4e],ebp
  41de64:	pop    es
  41de65:	mov    al,0x8d
  41de67:	ja     0x41de20
  41de69:	fst    st(5)
  41de6b:	aas    
  41de6c:	add    DWORD PTR [ecx],0x12737b5d
  41de72:	and    ch,BYTE PTR [esi+0xb]
  41de75:	fwait
  41de76:	push   0x5ed28e7a
  41de7b:	repnz mov BYTE PTR gs:[edx-0x54],dh
  41de80:	jns    0x41de03
  41de82:	scas   eax,DWORD PTR es:[edi]
  41de83:	fmul   DWORD PTR [ebx+0x68]
  41de86:	leave  
  41de87:	inc    ebp
  41de88:	loopne 0x41de7c
  41de8a:	fdivp  st(3),st
  41de8c:	xor    eax,0x80dfeb3e
  41de91:	fadd   QWORD PTR [ebp+0x7e]
  41de94:	sbb    eax,0xb7395293
  41de99:	jne    0x41ded9
  41de9b:	in     al,0xd1
  41de9d:	into   
  41de9e:	aas    
  41de9f:	ja     0x41de3c
  41dea1:	sub    eax,0xb6eb6fd0
  41dea6:	xchg   ebp,eax
  41dea7:	jae    0x41deee
  41dea9:	mov    ebp,0xb1f1b1b5
  41deae:	mov    bh,BYTE PTR ds:0x9e6b93fc
  41deb4:	loope  0x41dea1
  41deb6:	ins    BYTE PTR es:[edi],dx
  41deb7:	jns    0x41df16
  41deb9:	pop    ss
  41deba:	adc    BYTE PTR ds:0x59da8a3,dl
  41dec0:	xor    al,0xb9
  41dec2:	pop    esi
  41dec3:	cmp    edx,DWORD PTR [esi+eax*4+0x3d]
  41dec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dec8:	ds aad 0xf7
  41decb:	in     eax,dx
  41decc:	stc    
  41decd:	mov    edi,0xa6e1e837
  41ded2:	aam    0x2d
  41ded4:	daa    
  41ded5:	jo     0x41debc
  41ded7:	and    esi,edx
  41ded9:	int3   
  41deda:	sub    DWORD PTR [esp+esi*1+0x39],0xffffffa3
  41dedf:	xchg   ebp,eax
  41dee0:	sub    eax,0x13b92dfb
  41dee5:	(bad)  
  41dee6:	in     al,dx
  41dee7:	adc    BYTE PTR [ebx-0x28],ah
  41deea:	xor    eax,0x14383c3f
  41deef:	mov    cl,0x80
  41def1:	ss inc ecx
  41def3:	and    eax,0xbefecfe4
  41def8:	sbb    BYTE PTR [ebx-0x22a483a8],al
  41defe:	int3   
  41deff:	rol    DWORD PTR [ecx-0x1751ad63],1
  41df05:	mov    eax,ds:0x4f12659a
  41df0a:	popf   
  41df0b:	test   BYTE PTR [ebp+0x5605764],0xf6
  41df12:	jns    0x41df15
  41df14:	(bad)  
  41df15:	out    dx,eax
  41df16:	adc    eax,0x75d61b09
  41df1b:	pop    edx
  41df1c:	mov    ah,0x21
  41df1e:	(bad)  
  41df1f:	adc    eax,0xaa7b390f
  41df24:	push   ebx
  41df25:	call   0xfaa:0xbd4e6076
  41df2c:	jecxz  0x41df99
  41df2e:	jb     0x41decf
  41df30:	xor    cl,BYTE PTR [eax+0x97057f9]
  41df36:	pop    esp
  41df37:	cs push es
  41df39:	les    ecx,FWORD PTR [ebx+0x36]
  41df3c:	repnz add eax,0xfe5072e0
  41df42:	inc    esi
  41df43:	mov    BYTE PTR [ebx],cl
  41df45:	mov    DWORD PTR [ebp-0x3b],edx
  41df48:	clc    
  41df49:	test   eax,0xf35b2cf4
  41df4e:	js     0x41dfa6
  41df50:	das    
  41df51:	test   DWORD PTR [esi-0x68],esp
  41df54:	ret    0x9d57
  41df57:	xor    eax,0x3da65fc5
  41df5c:	jge    0x41dfc1
  41df5e:	repz mov eax,ds:0x5c294f26
  41df64:	jnp    0x41dfd0
  41df66:	xor    DWORD PTR [eax+0x2b],ecx
  41df69:	(bad)
  41df6c:	pop    esp
  41df6d:	mov    cl,0x21
  41df6f:	jno    0x41df1d
  41df71:	push   ebx
  41df72:	add    bh,al
  41df74:	call   0x2e9:0x59b77197
  41df7b:	add    BYTE PTR [edi+0x1],dh
  41df7e:	pop    ebx
  41df7f:	jle    0x41df05
  41df81:	mov    al,ds:0x2d26067a
  41df86:	(bad)  
  41df87:	dec    esi
  41df88:	and    BYTE PTR [esi+0x2e],bh
  41df8b:	(bad)  
  41df8c:	mov    al,ds:0x7d6c239
  41df91:	dec    ecx
  41df92:	mov    al,0x70
  41df94:	lock push DWORD PTR [ecx-0x34]
  41df98:	pop    ds
  41df99:	dec    ecx
  41df9a:	mov    DWORD PTR [ebx+0x40],ebp
  41df9d:	xchg   ebx,eax
  41df9e:	dec    edx
  41df9f:	fs stc 
  41dfa1:	push   edi
  41dfa2:	mov    dl,0x71
  41dfa4:	add    bh,bh
  41dfa6:	xchg   ecx,eax
  41dfa7:	mov    esp,0x310ff401
  41dfac:	xlat   BYTE PTR ds:[ebx]
  41dfad:	loop   0x41e010
  41dfaf:	dec    ebp
  41dfb0:	call   FWORD PTR [ebx]
  41dfb2:	pusha  
  41dfb3:	data16 ins BYTE PTR es:[edi],dx
  41dfb5:	push   esi
  41dfb6:	lods   eax,DWORD PTR ds:[esi]
  41dfb7:	mov    al,ds:0x758c84a2
  41dfbc:	shr    esi,cl
  41dfbe:	out    dx,eax
  41dfbf:	retf   0x86a2
  41dfc2:	and    cl,bh
  41dfc4:	lods   eax,DWORD PTR ds:[esi]
  41dfc5:	xchg   ebp,eax
  41dfc6:	adc    BYTE PTR [ebp-0x42],0xd6
  41dfca:	aam    0xba
  41dfcc:	inc    ebx
  41dfcd:	in     al,0x9f
  41dfcf:	sub    al,0x7e
  41dfd1:	clc    
  41dfd2:	je     0x41df5e
  41dfd4:	jmp    0xf3dfe61a
  41dfd9:	jbe    0x41df8c
  41dfdb:	in     eax,0xcc
  41dfdd:	out    0x6c,al
  41dfdf:	in     al,dx
  41dfe0:	(bad)  
  41dfe1:	in     al,0xe9
  41dfe3:	es (bad) 
  41dfe5:	mov    eax,ds:0x85a88e67
  41dfea:	data16 daa 
  41dfec:	int    0xc4
  41dfee:	lds    ecx,FWORD PTR [ebx-0x43]
  41dff1:	cs dec esi
  41dff3:	push   edi
  41dff4:	inc    edi
  41dff5:	mov    esp,0xafd8d0ff
  41dffa:	push   esp
  41dffb:	mov    esi,edx
  41dffd:	mov    ebp,esi
  41dfff:	pop    ebx
  41e000:	idiv   BYTE PTR [esi+eiz*2+0x61]
  41e004:	and    esi,DWORD PTR [edi]
  41e006:	ret    0x3e91
  41e009:	push   eax
  41e00b:	sub    eax,esi
  41e00d:	mov    al,ds:0xe171dced
  41e012:	mov    DWORD PTR [eax],0x4ede4bd5
  41e018:	arpl   WORD PTR [eax-0xc],ax
  41e01b:	scas   eax,DWORD PTR es:[edi]
  41e01c:	mov    WORD PTR [eax+0x36],ds
  41e01f:	mov    ebp,0xbeeb2979
  41e024:	repnz xchg ebx,eax
  41e026:	(bad)  
  41e027:	mov    dh,0xb8
  41e029:	push   es
  41e02a:	push   esp
  41e02b:	pop    edx
  41e02c:	adc    ecx,DWORD PTR [edi]
  41e02e:	rol    DWORD PTR [eax+0x5e464ee9],cl
  41e034:	popf   
  41e035:	adc    bh,BYTE PTR [edi]
  41e037:	sar    ch,1
  41e039:	inc    ecx
  41e03a:	cmp    dl,BYTE PTR [edx*4+0x25bbee41]
  41e041:	mov    bh,0x29
  41e043:	xor    al,0x2
  41e045:	shl    BYTE PTR [ebx-0x475cc3bd],0xb
  41e04c:	sub    ebx,DWORD PTR [ecx+eax*2+0x61ed66f9]
  41e053:	bound  esi,QWORD PTR cs:[esi]
  41e056:	ror    BYTE PTR [ebp+0x5184d8a6],1
  41e05c:	cmp    bh,bh
  41e05e:	and    BYTE PTR ds:0xc169e9bb,ah
  41e064:	adc    BYTE PTR [eax+0x2b],dl
  41e067:	pop    ecx
  41e068:	inc    edx
  41e069:	sbb    esi,DWORD PTR ds:0x4e61055d
  41e06f:	or     eax,0x2a
  41e072:	out    dx,eax
  41e073:	mov    WORD PTR [si-0x20e9],gs
  41e078:	nop
  41e079:	bound  ebx,QWORD PTR [edx+ecx*4]
  41e07c:	pop    edi
  41e07d:	xor    al,BYTE PTR [edx-0x8]
  41e080:	sub    al,0x72
  41e082:	sbb    eax,0x32603df3
  41e087:	ror    BYTE PTR [ecx-0x39770b2a],1
  41e08d:	xchg   ebx,eax
  41e08e:	cmp    ecx,DWORD PTR [ebp+0x7bb33e21]
  41e094:	jns    0x41e0a0
  41e096:	sub    dl,BYTE PTR [esp+edx*4]
  41e099:	in     al,0xf9
  41e09b:	mov    WORD PTR [edi+ecx*2+0xa92a006],ds
  41e0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0a3:	jg     0x41e0f8
  41e0a5:	xchg   edi,eax
  41e0a6:	add    BYTE PTR [ebp-0x1e7b3957],bl
  41e0ac:	mov    al,0x7e
  41e0ae:	sbb    dl,BYTE PTR [edi]
  41e0b0:	scas   al,BYTE PTR es:[edi]
  41e0b1:	add    DWORD PTR [ecx+0x75b4bb72],esi
  41e0b7:	(bad)  [ecx-0x63b167a]
  41e0bd:	push   ebx
  41e0be:	mov    ebp,0x5457aef1
  41e0c3:	enter  0x8ca8,0x55
  41e0c7:	jg     0x41e081
  41e0c9:	and    BYTE PTR [ebp+0x3295fb1e],0x28
  41e0d0:	mov    ah,0x0
  41e0d2:	mov    ebx,0xaa7b0ca0
  41e0d7:	dec    ecx
  41e0d8:	jae    0x41e0f0
  41e0da:	loop   0x41e0ba
  41e0dc:	jns    0x41e10c
  41e0de:	adc    dl,BYTE PTR [eax]
  41e0e0:	cmp    bh,BYTE PTR [edi+0x45fc197a]
  41e0e6:	mov    bh,0x46
  41e0e8:	pop    edi
  41e0e9:	sbb    esp,DWORD PTR [ecx+0x78]
  41e0ec:	mov    edi,esi
  41e0ee:	jmp    0xfbaeca0a
  41e0f3:	imul   edi,DWORD PTR [ebx+0x7c],0xffffff85
  41e0f7:	in     al,dx
  41e0f8:	ds mov esp,0xef28ae39
  41e0fe:	sar    ch,0x22
  41e101:	stos   DWORD PTR es:[edi],eax
  41e102:	xor    eax,0x6e7a4e30
  41e107:	cmp    al,0xc6
  41e109:	test   al,0xd0
  41e10b:	enter  0x9d05,0x61
  41e10f:	and    bl,cl
  41e111:	pop    edi
  41e112:	test   DWORD PTR [ecx-0x6b],edx
  41e115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e116:	or     DWORD PTR [esi],0xe2161c67
  41e11c:	dec    ecx
  41e11d:	pop    ecx
  41e11e:	dec    edi
  41e11f:	jns    0x41e0ee
  41e121:	test   DWORD PTR [ebp+eax*2+0x6c058bff],eax
  41e128:	add    BYTE PTR [ebx-0x56],bl
  41e12b:	bound  ebx,QWORD PTR [ebx]
  41e12d:	call   0xd729897e
  41e132:	ror    BYTE PTR [ecx+eiz*1],1
  41e135:	mov    dl,0xfd
  41e137:	sti    
  41e138:	sar    DWORD PTR [edx+0x76f0e64],0xc8
  41e13f:	mov    ecx,0x5b471c88
  41e144:	jmp    0x41e0fc
  41e146:	ret    
  41e147:	lods   al,BYTE PTR ds:[esi]
  41e148:	sub    BYTE PTR [eax+0x6be571d7],0xda
  41e14f:	xchg   ebx,eax
  41e150:	push   ebx
  41e151:	xor    eax,0x4bd9943
  41e156:	xor    eax,0x21cd5b45
  41e15b:	mov    ds:0x65a9fdc,al
  41e160:	out    0x5f,al
  41e162:	imul   dl
  41e164:	loopne 0x41e0ed
  41e166:	xchg   edx,eax
  41e167:	pop    ecx
  41e168:	sub    al,0xe2
  41e16a:	push   ds
  41e16b:	mov    eax,0xa03fd159
  41e170:	xor    edi,edx
  41e172:	out    dx,al
  41e173:	add    dl,dl
  41e175:	pushf  
  41e176:	mov    dl,0xc4
  41e178:	adc    BYTE PTR [ecx],ah
  41e17a:	inc    esi
  41e17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e17c:	jmp    0x41e1f4
  41e17e:	dec    ebp
  41e17f:	xchg   DWORD PTR [ebx-0x40],eax
  41e182:	pop    esi
  41e183:	stos   DWORD PTR es:[edi],eax
  41e184:	jecxz  0x41e1de
  41e186:	adc    al,0x1f
  41e188:	std    
  41e189:	addr16 push ebp
  41e18b:	adc    DWORD PTR es:[edi+0x2d],eax
  41e18f:	shl    ah,0x7f
  41e192:	jle    0x41e144
  41e194:	fwait
  41e195:	add    dh,BYTE PTR [ecx+esi*8]
  41e198:	call   0xc0ef8239
  41e19d:	mov    ecx,0xbf40df67
  41e1a2:	dec    eax
  41e1a3:	fwait
  41e1a4:	push   ebx
  41e1a5:	xor    ebp,DWORD PTR [eax]
  41e1a7:	int3   
  41e1a8:	daa    
  41e1a9:	jle    0x41e161
  41e1ab:	ret    0xf45d
  41e1ae:	push   esi
  41e1af:	aas    
  41e1b0:	xchg   ecx,eax
  41e1b1:	nop
  41e1b2:	or     cl,BYTE PTR [eax+esi*2]
  41e1b5:	nop
  41e1b6:	or     eax,0x2b04f12d
  41e1bb:	or     DWORD PTR [ebp+0x41],esp
  41e1be:	das    
  41e1bf:	dec    ebx
  41e1c0:	add    al,0x32
  41e1c2:	push   edi
  41e1c3:	mov    dl,0x24
  41e1c5:	xor    BYTE PTR [edx-0x9],dl
  41e1c8:	ja     0x41e1c7
  41e1ca:	xlat   BYTE PTR ds:[ebx]
  41e1cb:	fwait
  41e1cc:	ret    0x4644
  41e1cf:	xchg   esp,eax
  41e1d0:	sbb    edx,0x586728c8
  41e1d6:	jl     0x41e1f0
  41e1d8:	jg     0x41e235
  41e1da:	inc    ebx
  41e1db:	jecxz  0x41e242
  41e1dd:	pushf  
  41e1de:	and    bl,BYTE PTR [ebp-0x5a]
  41e1e1:	add    bl,ch
  41e1e3:	cdq    
  41e1e4:	adc    al,0xa8
  41e1e6:	leave  
  41e1e7:	mov    bl,0x6a
  41e1e9:	sti    
  41e1ea:	jno    0x41e1d8
  41e1ec:	xchg   ebx,eax
  41e1ed:	push   edx
  41e1ee:	sub    DWORD PTR [esi+0x2c370e21],eax
  41e1f4:	imul   esi,ecx,0x27
  41e1f7:	add    dh,BYTE PTR [ecx+0x3e7addde]
  41e1fd:	stc    
  41e1fe:	lds    edi,FWORD PTR ds:0x4f04b9da
  41e204:	mov    dh,0xa2
  41e206:	mov    ds:0xd551bbbf,eax
  41e20b:	push   DWORD PTR [ecx-0x6a3d1516]
  41e211:	adc    eax,0xca466ae
  41e216:	mov    eax,0x56e2a4b1
  41e21b:	mov    BYTE PTR [edx],dh
  41e21d:	lock idiv BYTE PTR [esi-0x69]
  41e221:	push   ds
  41e222:	and    eax,0xaad76f14
  41e227:	pop    ss
  41e228:	xchg   edx,eax
  41e229:	sub    DWORD PTR [ebp-0x77de6ac8],eax
  41e22f:	mov    BYTE PTR [eax+edx*1+0x6d015f40],0x56
  41e237:	aas    
  41e238:	test   al,0xf7
  41e23a:	in     al,dx
  41e23b:	mov    ds:0xfe0fcd05,al
  41e240:	mov    edx,es
  41e242:	xchg   ebx,eax
  41e243:	daa    
  41e244:	pop    ebx
  41e245:	pop    esp
  41e246:	mov    eax,0x7b6ad0c1
  41e24b:	(bad)  
  41e24c:	out    0x8b,eax
  41e24e:	jecxz  0x41e2cd
  41e250:	push   esp
  41e251:	int3   
  41e252:	imul   edx,esp,0xfffffff2
  41e255:	sar    DWORD PTR [ecx+edx*2],0x96
  41e259:	add    al,0x85
  41e25b:	and    ch,BYTE PTR [edx-0x4e6485cd]
  41e261:	push   es
  41e262:	aaa    
  41e263:	ret    0xf28d
  41e266:	cld    
  41e267:	jbe    0x41e2ad
  41e269:	pop    ebp
  41e26a:	fnstenv [ebx-0x67]
  41e26d:	push   0x8b67ca49
  41e272:	mov    esi,0xe2fadaf
  41e277:	sub    ch,BYTE PTR [esi+0x16ef15bb]
  41e27d:	test   eax,0x8d12c4
  41e282:	aam    0xc8
  41e284:	pop    esi
  41e285:	in     eax,0x6d
  41e287:	xlat   BYTE PTR ds:[ebx]
  41e288:	aas    
  41e289:	xlat   BYTE PTR ds:[ebx]
  41e28a:	pop    es
  41e28b:	xor    esp,ecx
  41e28d:	xchg   esp,eax
  41e28e:	fsubr  QWORD PTR [edx-0x25fa4ab0]
  41e294:	lods   eax,DWORD PTR ds:[esi]
  41e295:	jnp    0x41e29d
  41e297:	sub    eax,0x3771fd58
  41e29c:	lods   eax,DWORD PTR ds:[esi]
  41e29d:	call   0x1bebf53d
  41e2a2:	xor    BYTE PTR [eax+esi*4],dh
  41e2a5:	dec    edx
  41e2a6:	cdq    
  41e2a7:	mov    ch,0xcf
  41e2a9:	or     eax,0x2ed02e98
  41e2ae:	ins    BYTE PTR es:[edi],dx
  41e2af:	cld    
  41e2b0:	icebp  
  41e2b1:	repnz and al,0x8b
  41e2b4:	xchg   ebx,eax
  41e2b5:	pop    ds
  41e2b6:	sub    al,ah
  41e2b8:	(bad)  
  41e2b9:	xlat   BYTE PTR ds:[ebx]
  41e2ba:	pop    es
  41e2bb:	test   eax,0x97e43f0
  41e2c0:	inc    ebp
  41e2c1:	inc    edi
  41e2c2:	add    DWORD PTR [esi+0x1f3f8c23],esp
  41e2c8:	out    0xd3,al
  41e2ca:	mov    esi,es
  41e2cc:	or     eax,0xe2e05842
  41e2d1:	dec    eax
  41e2d2:	sti    
  41e2d3:	cld    
  41e2d4:	or     al,0xd3
  41e2d6:	fdiv   DWORD PTR gs:[ebx-0x59122029]
  41e2dd:	int    0xcb
  41e2df:	and    DWORD PTR [edi-0x480332e9],ebx
  41e2e5:	popf   
  41e2e6:	adc    edx,esp
  41e2e8:	stc    
  41e2e9:	push   ss
  41e2ea:	sub    al,0x12
  41e2ec:	xchg   esi,edi
  41e2ee:	stos   BYTE PTR es:[edi],al
  41e2ef:	cld    
  41e2f0:	and    dh,dh
  41e2f2:	call   0xd6f6:0x5d8a18ac
  41e2f9:	jne    0x41e30e
  41e2fb:	lods   eax,DWORD PTR ds:[esi]
  41e2fc:	jmp    0x29d54722
  41e301:	(bad)  
  41e302:	push   esp
  41e303:	mov    eax,0x7e7e510d
  41e308:	gs cmp al,0x5b
  41e30b:	cmp    eax,0xe0330a6a
  41e310:	pusha  
  41e311:	fistp  QWORD PTR [ecx-0x6cf793c]
  41e317:	popf   
  41e318:	and    al,0x7
  41e31a:	cld    
  41e31b:	leave  
  41e31c:	xchg   esi,eax
  41e31d:	pop    edx
  41e31e:	or     BYTE PTR [edx-0x5a],0x93
  41e322:	inc    ecx
  41e323:	or     al,0x6c
  41e325:	cmp    dh,BYTE PTR [edx+0x33]
  41e328:	mov    DWORD PTR [ebx+0xf3d00f2],0xf70941e
  41e332:	test   DWORD PTR [esi],ebp
  41e334:	add    BYTE PTR [eax],al
  41e336:	add    BYTE PTR [ebx-0x7af00006],al
  41e33c:	and    eax,0x8b000000
  41e341:	inc    ebp
  41e342:	cld    
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x65
  41e3e0:	(bad)  
  41e3e1:	into   
  41e3e2:	mov    ds:0x8382d511,eax
  41e3e7:	fstp   DWORD PTR [ebx+eax*4-0x7d]
  41e3eb:	test   al,0xfe
  41e3ed:	cdq    
  41e3ee:	int    0xaa
  41e3f0:	fist   WORD PTR [esi]
  41e3f2:	clc    
  41e3f3:	inc    ebp
  41e3f4:	test   eax,0xf1169dad
  41e3f9:	out    0x67,al
  41e3fb:	inc    esi
  41e3fc:	dec    esp
  41e3fd:	aas    
  41e3fe:	test   eax,0xe4e180af
  41e403:	sti    
  41e404:	mov    es,WORD PTR [ebp+esi*8-0x63]
  41e408:	sub    ch,BYTE PTR [edi+0x682e4afc]
  41e40e:	push   0x621155e
  41e413:	fstp   st(7)
  41e415:	mov    al,0x53
  41e417:	push   esi
  41e418:	push   edx
  41e419:	pop    edi
  41e41a:	test   ecx,edi
  41e41c:	fnstenv [edi+0x68e6f08d]
  41e422:	aad    0x3
  41e424:	jmp    0x41e3ed
  41e426:	pop    ebp
  41e427:	pop    esi
  41e428:	inc    ecx
  41e429:	ss mov al,0xb3
  41e42c:	sub    esp,edi
  41e42e:	(bad)  
  41e42f:	xor    eax,0xfd88b94d
  41e434:	bnd jmp 0x41e462
  41e437:	pop    esi
  41e438:	dec    eax
  41e439:	div    DWORD PTR [esi]
  41e43b:	test   eax,0x3ea6af71
  41e440:	jp     0x41e478
  41e442:	inc    eax
  41e443:	jg     0x41e43e
  41e445:	sbb    eax,DWORD PTR [edx-0x4f]
  41e448:	inc    ebx
  41e449:	pusha  
  41e44a:	or     dl,ch
  41e44c:	and    edx,DWORD PTR ds:0x7f128cb5
  41e452:	ja     0x41e421
  41e454:	jmp    0x41e437
  41e456:	jmp    0xbd50ebac
  41e45b:	je     0x41e470
  41e45d:	mov    ds:0xf5be95ac,al
  41e462:	nop
  41e463:	add    edx,ecx
  41e465:	mov    ebp,0xc0a30132
  41e46a:	loop   0x41e4da
  41e46c:	pop    esp
  41e46d:	popf   
  41e46e:	out    dx,eax
  41e46f:	inc    ebx
  41e470:	hlt    
  41e471:	es movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41e474:	xchg   DWORD PTR [ecx-0x1dbaf4a8],edx
  41e47a:	adc    BYTE PTR [esi],dl
  41e47c:	add    BYTE PTR [edx-0x26],ch
  41e47f:	enter  0x8e65,0x19
  41e483:	dec    eax
  41e484:	mov    ebp,0x2d987986
  41e489:	push   es
  41e48a:	xchg   esi,eax
  41e48b:	inc    esi
  41e48c:	xchg   esp,eax
  41e48d:	fisub  WORD PTR [ecx]
  41e48f:	jae    0x41e4d1
  41e491:	stos   BYTE PTR es:[edi],al
  41e492:	sub    cl,BYTE PTR [eax-0x7d]
  41e495:	retf   0xc21a
  41e498:	test   BYTE PTR [ebx],dh
  41e49a:	test   al,0xa5
  41e49c:	and    eax,0x947f2eb9
  41e4a1:	or     al,0xec
  41e4a3:	(bad)  
  41e4a4:	or     dl,ah
  41e4a6:	scas   eax,DWORD PTR es:[edi]
  41e4a7:	jne    0x41e4c2
  41e4a9:	pushf  
  41e4aa:	aas    
  41e4ab:	push   ss
  41e4ac:	repnz faddp st(5),st
  41e4af:	repz or ah,BYTE PTR [ecx+0x19]
  41e4b3:	in     eax,dx
  41e4b4:	jne    0x41e498
  41e4b6:	aad    0xb9
  41e4b8:	cli    
  41e4b9:	enter  0x8d0f,0xac
  41e4bd:	dec    esi
  41e4be:	pop    ebx
  41e4bf:	daa    
  41e4c0:	dec    ecx
  41e4c1:	imul   ecx,DWORD PTR [esi],0xf
  41e4c4:	ds (bad) 
  41e4c6:	cmp    eax,0x9dbdbabc
  41e4cb:	jo     0x41e4b7
  41e4cd:	repz push cs
  41e4cf:	mov    bl,0x6b
  41e4d1:	sbb    eax,0x7320760a
  41e4d6:	test   BYTE PTR [eax],dl
  41e4d8:	cmp    eax,0xa35acb31
  41e4dd:	push   ebp
  41e4de:	cwde   
  41e4df:	mov    DWORD PTR [ecx+edx*1+0x75],edi
  41e4e3:	lods   eax,DWORD PTR ds:[esi]
  41e4e4:	mov    al,0x3f
  41e4e6:	rol    BYTE PTR [edi-0x77],1
  41e4e9:	push   0xa0abdde4
  41e4ee:	push   ss
  41e4ef:	jl     0x41e555
  41e4f1:	cld    
  41e4f2:	(bad)  
  41e4f3:	jp     0x41e4ea
  41e4f5:	pop    esp
  41e4f6:	jge    0x41e503
  41e4f8:	inc    esp
  41e4f9:	leave  
  41e4fa:	jle    0x41e513
  41e4fc:	cmp    eax,0xfc84a6a3
  41e501:	call   0x3a74c4ee
  41e506:	jno    0x41e4c4
  41e508:	stc    
  41e509:	inc    ecx
  41e50a:	inc    ebp
  41e50b:	jns    0x41e4f4
  41e50d:	sar    ebx,0xb2
  41e510:	out    dx,al
  41e511:	cmp    edi,DWORD PTR [edi-0x13]
  41e514:	imul   esp,DWORD PTR [eax],0xf2f89c0d
  41e51a:	dec    ebx
  41e51b:	or     DWORD PTR [ecx-0x36d4a971],0xd0f71021
  41e525:	call   0x66b3:0x1ec0b75e
  41e52c:	and    eax,0x83470613
  41e531:	add    bh,BYTE PTR [edi]
  41e533:	pop    eax
  41e534:	jmp    0xe1bc:0xed9b3207
  41e53b:	pop    ds
  41e53c:	scas   al,BYTE PTR es:[edi]
  41e53d:	das    
  41e53e:	out    dx,al
  41e53f:	adc    cl,BYTE PTR [esi-0x3c987fe5]
  41e545:	lods   al,BYTE PTR ds:[esi]
  41e546:	mov    edx,0x651d17ae
  41e54b:	mov    gs,WORD PTR [edi]
  41e54d:	in     eax,dx
  41e54e:	fcomi  st,st(4)
  41e550:	mov    edi,0xf3611562
  41e555:	inc    eax
  41e556:	cmp    BYTE PTR [ebx],dh
  41e558:	lock and al,0xbc
  41e55b:	test   DWORD PTR [ebx+0x4c],0x196bf11e
  41e562:	mov    dh,0xf2
  41e564:	jmp    0x9ce3:0x6e5ff298
  41e56b:	in     al,dx
  41e56c:	mov    ah,0x33
  41e56e:	(bad)  
  41e570:	or     eax,0xf943d151
  41e575:	ret    0xa15e
  41e578:	mov    ah,0x33
  41e57a:	lea    eax,[esi-0x75]
  41e57d:	inc    esp
  41e57e:	loop   0x41e598
  41e580:	fwait
  41e581:	or     DWORD PTR [ebx+0x1b],edx
  41e584:	popa   
  41e585:	les    edx,FWORD PTR [ebx]
  41e587:	sbb    ebp,DWORD PTR [esi]
  41e589:	jne    0x41e54e
  41e58b:	pop    edx
  41e58c:	fidivr DWORD PTR [esi-0x76]
  41e58f:	mov    BYTE PTR [ebp+0x43],dl
  41e592:	mov    bh,0x66
  41e594:	mov    eax,0x8b4e50a0
  41e599:	ror    al,cl
  41e59b:	out    0xc3,al
  41e59d:	dec    ebp
  41e59e:	stos   BYTE PTR es:[edi],al
  41e59f:	das    
  41e5a0:	aad    0xbd
  41e5a2:	or     eax,0x53ba8404
  41e5a7:	pop    edx
  41e5a8:	sub    ah,BYTE PTR [ecx]
  41e5aa:	dec    esp
  41e5ab:	inc    edx
  41e5ac:	jl     0x41e5b1
  41e5ae:	adc    bh,bl
  41e5b0:	jle    0x41e5fc
  41e5b2:	push   esi
  41e5b3:	in     al,dx
  41e5b4:	ins    DWORD PTR es:[edi],dx
  41e5b5:	ins    BYTE PTR es:[edi],dx
  41e5b6:	jmp    0x30cf42b4
  41e5bb:	jno    0x41e56e
  41e5bd:	out    0x76,eax
  41e5bf:	ret    0x2c96
  41e5c2:	pop    ecx
  41e5c3:	mov    dh,0x15
  41e5c5:	adc    DWORD PTR cs:[eax],eax
  41e5c8:	dec    ecx
  41e5c9:	push   0x6ce90a99
  41e5ce:	fmul   DWORD PTR [edi]
  41e5d0:	and    eax,0x2b6c6e
  41e5d5:	lahf   
  41e5d6:	sub    al,0x58
  41e5d8:	jne    0x41e63b
  41e5da:	jmp    0x41e5c5
  41e5dc:	das    
  41e5dd:	ss jo  0x41e650
  41e5e0:	push   ebx
  41e5e1:	add    cl,ah
  41e5e3:	and    ebp,DWORD PTR [edx-0x40250cda]
  41e5e9:	in     eax,0xbd
  41e5eb:	jmp    0xb382:0xcecc4695
  41e5f2:	dec    ebp
  41e5f3:	add    ebx,DWORD PTR [esi]
  41e5f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5f6:	pop    ebp
  41e5f7:	outs   dx,DWORD PTR ds:[esi]
  41e5f8:	shl    BYTE PTR [edx-0x239f1e90],1
  41e5fe:	add    bl,BYTE PTR [ebx-0x74]
  41e601:	sbb    edx,esi
  41e603:	sbb    DWORD PTR [ebx-0x1848a737],edi
  41e609:	mov    al,ds:0xd1efb5fa
  41e60e:	int    0xfd
  41e610:	(bad)  
  41e611:	lahf   
  41e612:	clc    
  41e613:	adc    edx,eax
  41e615:	xchg   edi,eax
  41e616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e617:	inc    eax
  41e618:	xor    bh,bl
  41e61a:	push   0xb69ddb64
  41e61f:	outs   dx,BYTE PTR ds:[esi]
  41e620:	mov    es,edx
  41e622:	sub    esp,eax
  41e624:	shl    BYTE PTR [ebx+ecx*8+0x7f9a7f20],1
  41e62b:	retf   0xafbf
  41e62e:	daa    
  41e62f:	cmp    ah,BYTE PTR [edx+edx*2-0x43]
  41e633:	jbe    0x41e5f1
  41e635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e637:	pop    esi
  41e638:	jbe    0x41e683
  41e63a:	repnz sbb ah,ah
  41e63d:	cs push ecx
  41e63f:	cdq    
  41e640:	pop    esi
  41e641:	iret   
  41e642:	lods   al,BYTE PTR ds:[esi]
  41e643:	adc    ecx,edx
  41e645:	mov    edx,0xa595160b
  41e64a:	xor    BYTE PTR [bp-0x63],bl
  41e64e:	mov    ds:0x17107a8e,eax
  41e653:	or     al,0x69
  41e655:	sbb    ch,dh
  41e657:	aaa    
  41e658:	push   eax
  41e659:	iret   
  41e65a:	dec    eax
  41e65b:	jbe    0x41e69e
  41e65d:	clc    
  41e65e:	test   eax,0x21be8d21
  41e663:	scas   al,BYTE PTR es:[edi]
  41e664:	adc    eax,0xd159d2a8
  41e669:	mov    dh,ch
  41e66b:	fs pop eax
  41e66d:	mov    cl,0x3c
  41e66f:	ret    0x6fe3
  41e672:	scas   eax,DWORD PTR es:[edi]
  41e673:	arpl   WORD PTR cs:[edi+esi*2],bp
  41e677:	sub    DWORD PTR ds:0x140879aa,0x7c
  41e67e:	stos   DWORD PTR es:[edi],eax
  41e67f:	test   BYTE PTR ds:0xe39bae7a,dl
  41e685:	push   esi
  41e686:	xor    eax,0xb2d04966
  41e68b:	std    
  41e68c:	pop    eax
  41e68d:	push   ebx
  41e68e:	ror    BYTE PTR [esi],1
  41e690:	mov    ds:0xec4c9bfa,al
  41e695:	xor    eax,DWORD PTR ds:0xad6ea281
  41e69b:	sbb    ebp,DWORD PTR [eax+0xd]
  41e69e:	sbb    edi,DWORD PTR ds:0xc52574a3
  41e6a4:	retf   0x6ac9
  41e6a7:	out    0x5d,eax
  41e6a9:	xor    BYTE PTR [ebx],ah
  41e6ab:	sub    al,0xda
  41e6ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ae:	sbb    al,0x28
  41e6b0:	retf   
  41e6b1:	pop    ebp
  41e6b2:	aad    0xfd
  41e6b4:	add    bl,BYTE PTR [edi+ebx*4+0x87983e7]
  41e6bb:	add    edi,DWORD PTR [eax-0xf]
  41e6be:	lods   al,BYTE PTR ds:[esi]
  41e6bf:	mov    edx,0x8a9c304d
  41e6c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6c5:	add    eax,0xc1fcdaa0
  41e6ca:	push   edi
  41e6cb:	pop    DWORD PTR [edx-0x7d]
  41e6ce:	retf   
  41e6cf:	mov    BYTE PTR [esi],bh
  41e6d1:	je     0x41e65f
  41e6d3:	lahf   
  41e6d4:	add    eax,0x33174315
  41e6d9:	(bad)  
  41e6da:	das    
  41e6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6dc:	(bad)  
  41e6dd:	(bad)  
  41e6de:	jbe    0x41e6d7
  41e6e0:	arpl   WORD PTR [edi-0x1891a79a],si
  41e6e6:	adc    eax,0xb2093577
  41e6eb:	lock pushf 
  41e6ed:	jno    0x41e719
  41e6ef:	iret   
  41e6f0:	into   
  41e6f1:	pop    ebx
  41e6f2:	iret   
  41e6f3:	dec    esi
  41e6f4:	pop    es
  41e6f5:	shl    BYTE PTR [ebx+0x4ad24d93],1
  41e6fb:	xor    DWORD PTR [ebp-0x7f],ecx
  41e6fe:	or     al,0x71
  41e700:	inc    ecx
  41e701:	push   edx
  41e702:	or     esi,DWORD PTR [ecx-0x5c11ab40]
  41e708:	mov    ch,0x60
  41e70a:	loop   0x41e6a9
  41e70c:	ss dec ecx
  41e70e:	fdiv   QWORD PTR ds:[ebp+0x4e096d05]
  41e715:	dec    eax
  41e716:	push   cs
  41e717:	sub    eax,0xa1c726d1
  41e71c:	sub    DWORD PTR [edx+0x603d9f99],ecx
  41e722:	xor    ah,al
  41e724:	stos   BYTE PTR es:[edi],al
  41e725:	jnp    0x41e6f9
  41e727:	data16 (bad) 
  41e729:	cmp    eax,0x8d4b00c1
  41e72e:	mov    eax,0x6865911d
  41e733:	pop    ds
  41e734:	ret    
  41e735:	aaa    
  41e736:	pusha  
  41e737:	into   
  41e738:	pop    edi
  41e739:	in     al,dx
  41e73a:	jb     0x41e743
  41e73c:	pop    ebx
  41e73d:	jnp    0x41e743
  41e73f:	mov    bl,0xfb
  41e741:	or     BYTE PTR [edx-0x26f10be8],cl
  41e747:	mov    WORD PTR [esi+0x665d2294],cs
  41e74d:	sti    
  41e74e:	test   BYTE PTR [eax+0x37522a39],ah
  41e754:	outs   dx,DWORD PTR ds:[esi]
  41e755:	test   eax,0x168eca9
  41e75a:	mov    ch,0xce
  41e75c:	mov    eax,0x4a720286
  41e761:	mov    cl,0x8c
  41e763:	ret    0xb7c2
  41e766:	dec    ecx
  41e767:	ror    BYTE PTR [ecx],0x1e
  41e76a:	fisub  WORD PTR [esi-0x34]
  41e76d:	dec    ebp
  41e76e:	jp     0x41e7dd
  41e770:	fs mov edi,0x1798bab9
  41e776:	in     eax,dx
  41e777:	fisttp WORD PTR [edi+0x70459472]
  41e77d:	or     dh,dl
  41e77f:	dec    ebx
  41e780:	push   es
  41e781:	iret   
  41e782:	push   ds
  41e783:	cmc    
  41e784:	push   cs
  41e785:	push   0xaaa7fa93
  41e78a:	cwde   
  41e78b:	cmp    ebp,DWORD PTR [eax]
  41e78d:	int    0x60
  41e78f:	jne    0x41e7ea
  41e791:	dec    ebp
  41e792:	jbe    0x41e7a7
  41e794:	cmp    BYTE PTR [ebx+0xa5ea1f7],dl
  41e79a:	jge    0x41e749
  41e79c:	mov    dl,dl
  41e79e:	sti    
  41e79f:	xchg   edx,eax
  41e7a0:	mov    al,0xe2
  41e7a2:	fwait
  41e7a3:	mov    al,0xc7
  41e7a5:	enter  0x2dae,0x52
  41e7a9:	xchg   ebx,eax
  41e7aa:	icebp  
  41e7ab:	loop   0x41e7b1
  41e7ad:	out    0xa0,al
  41e7af:	xor    DWORD PTR [ecx],ebp
  41e7b1:	dec    edx
  41e7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7b3:	sbb    BYTE PTR [edi-0x30],dl
  41e7b6:	test   BYTE PTR [edi+0x3f18fda5],dl
  41e7bc:	call   0x8d10:0x562e
  41e7c2:	and    esi,ebp
  41e7c4:	icebp  
  41e7c5:	dec    esi
  41e7c6:	cmc    
  41e7c7:	mov    ds:0xf518b9b9,eax
  41e7cc:	sub    al,0x20
  41e7ce:	ins    DWORD PTR es:[edi],dx
  41e7cf:	shl    BYTE PTR [ebp+eiz*8+0xa5f7919],cl
  41e7d6:	cmp    bh,BYTE PTR [edx+0x35]
  41e7d9:	jo     0x41e788
  41e7db:	in     eax,dx
  41e7dc:	js     0x9c9e0061
  41e7e2:	imul   edi,edi,0xffffffa4
  41e7e5:	shr    BYTE PTR [eax-0x60],0x3d
  41e7e9:	sbb    BYTE PTR ds:0xf975bd7a,bl
  41e7ef:	fs fsubrp st(0),st
  41e7f2:	push   eax
  41e7f3:	xchg   ebx,eax
  41e7f4:	push   es
  41e7f5:	xchg   ebp,eax
  41e7f6:	mov    bh,0x33
  41e7f8:	xchg   ch,dh
  41e7fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7fb:	dec    eax
  41e7fc:	and    ebx,esi
  41e7fe:	in     al,dx
  41e7ff:	sbb    DWORD PTR [edx+0xd],ebx
  41e802:	jns    0x41e81b
  41e804:	jl     0x41e846
  41e806:	shl    BYTE PTR [eax+0x4e335b7],cl
  41e80c:	cmc    
  41e80d:	out    dx,eax
  41e80e:	std    
  41e80f:	add    esp,DWORD PTR [ecx+edi*1]
  41e812:	xor    ebp,DWORD PTR [ecx]
  41e814:	fild   WORD PTR [esi-0x1077dcbd]
  41e81a:	or     al,0x51
  41e81c:	imul   edi,eax,0xfecf199b
  41e822:	int    0xd1
  41e824:	ins    DWORD PTR es:[edi],dx
  41e825:	push   es
  41e826:	jle    0x41e7c1
  41e828:	pushf  
  41e829:	fidiv  WORD PTR [esi]
  41e82b:	push   edx
  41e82c:	outs   dx,BYTE PTR ds:[esi]
  41e82d:	sbb    al,0x5d
  41e82f:	push   ds
  41e830:	aas    
  41e831:	push   esp
  41e832:	and    bl,ah
  41e834:	push   eax
  41e835:	iret   
  41e836:	popf   
  41e837:	(bad)  
  41e838:	cli    
  41e839:	or     al,0x67
  41e83b:	bound  ebx,QWORD PTR [ecx-0x63]
  41e83e:	jl     0x41e8b8
  41e840:	arpl   WORD PTR [ecx-0x3cb830bc],ax
  41e846:	xchg   edx,eax
  41e847:	xor    al,0xa1
  41e849:	scas   al,BYTE PTR es:[edi]
  41e84a:	mov    al,ds:0xe7b895cb
  41e84f:	adc    al,0x8a
  41e851:	leave  
  41e852:	nop
  41e853:	loopne 0x41e821
  41e855:	mov    DWORD PTR [eax],0xaee3cbef
  41e85b:	sbb    ecx,esp
  41e85d:	aad    0xcd
  41e85f:	iret   
  41e860:	ret    0xfe92
  41e863:	sub    bh,dl
  41e865:	sub    BYTE PTR [ebp-0x13],bl
  41e868:	fsubr  st(0),st
  41e86a:	mov    bl,0xec
  41e86c:	mov    ds:0x9256ae0b,al
  41e871:	nop/reserved BYTE PTR [edx+0x7e]
  41e875:	in     eax,0xed
  41e877:	aam    0x6b
  41e879:	lods   eax,DWORD PTR ds:[esi]
  41e87a:	jae    0x41e8cf
  41e87c:	cwde   
  41e87d:	popa   
  41e87e:	and    al,0x67
  41e880:	shl    BYTE PTR [ebx+0xd],0x68
  41e884:	imul   edx,DWORD PTR [ebp-0x7959272d],0xffffffff
  41e88b:	bound  ecx,QWORD PTR [esi+0x10]
  41e88e:	or     al,cl
  41e890:	sbb    eax,edi
  41e892:	in     eax,dx
  41e893:	adc    al,0xf2
  41e895:	pop    ecx
  41e896:	push   cs
  41e897:	and    al,BYTE PTR [ebp+0x1145f4e3]
  41e89d:	ret    0x4a28
  41e8a0:	out    dx,al
  41e8a1:	shl    eax,1
  41e8a3:	fcom   DWORD PTR [eax]
  41e8a5:	call   0x78155fee
  41e8aa:	loopne 0x41e900
  41e8ac:	in     eax,0x3d
  41e8ae:	push   0xfffffff3
  41e8b0:	inc    eax
  41e8b1:	outs   dx,BYTE PTR ds:[esi]
  41e8b2:	xchg   edx,eax
  41e8b3:	ins    DWORD PTR es:[edi],dx
  41e8b4:	xor    ch,BYTE PTR [eax-0x1d]
  41e8b7:	lods   eax,DWORD PTR ds:[esi]
  41e8b8:	sub    ch,BYTE PTR [eax]
  41e8ba:	sbb    al,0xb3
  41e8bc:	inc    esp
  41e8bd:	pop    eax
  41e8be:	xor    eax,edi
  41e8c0:	mov    ecx,0x1b5906c9
  41e8c5:	ins    DWORD PTR es:[edi],dx
  41e8c6:	pop    edi
  41e8c7:	and    eax,0x653b5c05
  41e8cc:	ins    DWORD PTR es:[edi],dx
  41e8cd:	stos   DWORD PTR es:[edi],eax
  41e8ce:	mov    esp,0x54e01596
  41e8d3:	jne    0x41e879
  41e8d5:	and    eax,0x3f46a147
  41e8da:	xchg   edx,eax
  41e8db:	push   cs
  41e8dc:	leave  
  41e8dd:	scas   al,BYTE PTR es:[edi]
  41e8de:	ja     0x41e95c
  41e8e0:	push   0x18
  41e8e2:	and    BYTE PTR [ebx+0x43],0xd4
  41e8e6:	push   esi
  41e8e7:	rol    ecx,0x61
  41e8ea:	rol    BYTE PTR [edx-0x5ffd0098],cl
  41e8f0:	icebp  
  41e8f1:	out    0x71,al
  41e8f3:	pop    ss
  41e8f4:	and    dh,dh
  41e8f6:	add    al,BYTE PTR [edi+edx*8]
  41e8f9:	pop    edi
  41e8fa:	xchg   ebx,eax
  41e8fb:	bound  ebp,QWORD PTR [eax+edx*1]
  41e8fe:	pop    edi
  41e8ff:	imul   BYTE PTR ds:0x2548a886
  41e905:	iret   
  41e906:	popf   
  41e907:	(bad)  
  41e90a:	adc    ah,BYTE PTR [edi+ebp*4+0x30]
  41e90e:	dec    edx
  41e90f:	call   0xb057f2b6
  41e914:	xchg   edi,eax
  41e915:	push   esp
  41e916:	dec    edi
  41e917:	pushf  
  41e918:	in     al,dx
  41e919:	jmp    0xf4cdcacc
  41e91e:	jnp    0x41e98e
  41e920:	es add esp,ebp
  41e923:	in     al,dx
  41e924:	aaa    
  41e925:	arpl   WORD PTR [esi],si
  41e927:	sub    ch,BYTE PTR [eax+eax*2+0x19]
  41e92b:	rol    BYTE PTR cs:[edi],1
  41e92e:	lahf   
  41e92f:	mov    bh,0xbb
  41e931:	cmp    al,0xa9
  41e933:	les    ebx,FWORD PTR [ebp+0x4c]
  41e936:	(bad)  
  41e937:	into   
  41e938:	push   bx
  41e93a:	scas   al,BYTE PTR es:[edi]
  41e93b:	adc    edx,eax
  41e93d:	pop    esp
  41e93e:	in     al,0xf1
  41e940:	xchg   ecx,eax
  41e941:	xchg   DWORD PTR [edi+ebx*4+0x3489a1b2],esp
  41e948:	mov    al,ds:0x74fe9312
  41e94d:	push   0xffffffdf
  41e94f:	dec    eax
  41e950:	or     BYTE PTR [ecx+0x3e],cl
  41e953:	pop    edi
  41e954:	pop    edi
  41e955:	into   
  41e956:	xchg   edx,eax
  41e957:	fcom   QWORD PTR [ebx-0x419f95cd]
  41e95d:	icebp  
  41e95e:	ret    
  41e95f:	pop    eax
  41e960:	int    0x6f
  41e962:	das    
  41e963:	dec    edi
  41e964:	adc    al,0xf7
  41e966:	inc    ebp
  41e967:	cdq    
  41e968:	jle    0x41e984
  41e96a:	out    0xa6,al
  41e96c:	xor    ch,0x65
  41e96f:	jmp    0xe2be:0x94da2b99
  41e976:	(bad)
  41e979:	pop    es
  41e97a:	std    
  41e97b:	test   BYTE PTR ss:[edx-0x74681297],0xb7
  41e983:	cmc    
  41e984:	cmc    
  41e985:	pop    ebx
  41e986:	jmp    0xf7d1377a
  41e98b:	cmc    
  41e98c:	inc    edx
  41e98d:	and    ch,BYTE PTR [ebp-0x1e]
  41e990:	enter  0xdb20,0x23
  41e994:	scas   al,BYTE PTR es:[edi]
  41e995:	scas   al,BYTE PTR es:[edi]
  41e996:	loopne 0x41e966
  41e998:	xlat   BYTE PTR ds:[ebx]
  41e999:	mov    WORD PTR ds:0xf37bf1fc,?
  41e99f:	call   0x7d95:0x87d3b063
  41e9a6:	dec    edx
  41e9a7:	outs   dx,DWORD PTR ds:[esi]
  41e9a8:	test   eax,0x979fc842
  41e9ad:	mov    ecx,0x1ece2624
  41e9b2:	inc    esi
  41e9b3:	ret    
  41e9b4:	test   DWORD PTR [eax-0x133389ec],edi
  41e9ba:	call   0xd4115cf6
  41e9bf:	add    ebp,DWORD PTR ds:0xb8c9850b
  41e9c5:	retf   0x4f2e
  41e9c8:	and    esp,edi
  41e9ca:	rcl    DWORD PTR [edi+edi*1+0x39d802f2],0x22
  41e9d2:	aas    
  41e9d3:	jecxz  0x41e9db
  41e9d5:	dec    esp
  41e9d6:	or     ebp,ebp
  41e9d8:	das    
  41e9d9:	or     DWORD PTR [eax-0x7c],0xffffff9d
  41e9dd:	out    0x13,eax
  41e9df:	mov    dl,0xa4
  41e9e1:	jb     0x41ea50
  41e9e3:	mov    ah,0x8
  41e9e5:	push   ecx
  41e9e6:	jae    0x41ea14
  41e9e8:	(bad)  
  41e9ea:	aad    0xcb
  41e9ec:	push   ebx
  41e9ed:	aas    
  41e9ee:	and    ecx,DWORD PTR [edi+edi*4]
  41e9f1:	add    ebp,DWORD PTR [edi-0x18]
  41e9f4:	gs mov ch,0x11
  41e9f7:	and    bh,BYTE PTR [edi+0x52]
  41e9fa:	pop    eax
  41e9fb:	xlat   BYTE PTR ds:[ebx]
  41e9fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9fd:	pop    ebp
  41e9fe:	xchg   ecx,eax
  41e9ff:	xchg   esi,eax
  41ea00:	inc    eax
  41ea01:	popf   
  41ea02:	push   0x9647bc0d
  41ea07:	sub    eax,0x84b0b291
  41ea0c:	shl    DWORD PTR [edx-0x7c],1
  41ea0f:	mov    al,ds:0x52b3fe
  41ea14:	xchg   esp,eax
  41ea15:	add    al,0x24
  41ea17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea18:	jb     0x41e9ec
  41ea1a:	sbb    ebp,DWORD PTR [ecx]
  41ea1c:	mov    edx,DWORD PTR [edx-0x40]
  41ea1f:	push   ebp
  41ea20:	bound  ecx,QWORD PTR [eax-0x3de6e55c]
  41ea26:	jbe    0x41ea30
  41ea28:	lods   al,BYTE PTR ds:[esi]
  41ea29:	call   0x734cc6e7
  41ea2e:	and    eax,0xdbc28add
  41ea33:	out    0x85,al
  41ea35:	push   ecx
  41ea36:	std    
  41ea37:	mov    BYTE PTR [edi+0x3a82e549],0x5f
  41ea3e:	sbb    edx,DWORD PTR [edx]
  41ea40:	mov    dh,0xc5
  41ea42:	xor    eax,0x8e47ea5e
  41ea47:	mov    BYTE PTR [esi-0x2dbdbf0],ah
  41ea4d:	retw   
  41ea4f:	mov    dh,0x5f
  41ea51:	mov    bl,BYTE PTR [ecx]
  41ea53:	adc    BYTE PTR [ebp-0x7c],bh
  41ea56:	call   0xfb259b09
  41ea5b:	js     0x41e9f4
  41ea5d:	iret   
  41ea5e:	ins    BYTE PTR es:[edi],dx
  41ea5f:	popa   
  41ea60:	mov    ah,ah
  41ea62:	out    0x34,al
  41ea64:	cmp    edx,DWORD PTR [edx]
  41ea66:	add    dh,cl
  41ea68:	lock pushaw 
  41ea6b:	jo     0x41eac8
  41ea6d:	sbb    DWORD PTR ds:0xd8545568,esp
  41ea73:	ins    DWORD PTR es:[edi],dx
  41ea74:	add    ah,ah
  41ea76:	shr    ebp,1
  41ea78:	loope  0x41ea09
  41ea7a:	sbb    eax,0x495da182
  41ea7f:	dec    edx
  41ea80:	xor    BYTE PTR ss:[ecx+edi*2],0xb8
  41ea85:	lods   eax,DWORD PTR ds:[esi]
  41ea86:	push   edi
  41ea87:	push   esp
  41ea88:	icebp  
  41ea89:	ins    DWORD PTR es:[edi],dx
  41ea8a:	cmp    dl,BYTE PTR [eax]
  41ea8c:	mov    DWORD PTR [edx+0x2a5b08e3],edi
  41ea92:	clc    
  41ea93:	mov    cl,ah
  41ea95:	jl     0x41ea35
  41ea97:	add    BYTE PTR [ebx],dl
  41ea99:	std    
  41ea9a:	jge    0x41eb03
  41ea9c:	out    0xd9,al
  41ea9e:	mov    bl,0xc3
  41eaa0:	sub    al,0x82
  41eaa2:	and    ebp,DWORD PTR [esi+ebp*8]
  41eaa5:	xor    al,0x20
  41eaa7:	and    edx,DWORD PTR [edi-0x40fc52f2]
  41eaad:	aad    0xb2
  41eaaf:	pop    ebx
  41eab0:	cdq    
  41eab1:	aas    
  41eab2:	retf   0xf8c8
  41eab5:	daa    
  41eab6:	test   edi,0x89209631
  41eabc:	(bad)  
  41eabd:	ja     0x41eb27
  41eabf:	mov    dl,0xba
  41eac1:	push   0x88c71d0e
  41eac6:	repnz adc al,0x4f
  41eac9:	mov    cs,WORD PTR [ebp+0x39]
  41eacc:	and    edx,DWORD PTR [ebx+0x1837871d]
  41ead2:	push   edx
  41ead3:	mov    ds:0xd5b3805d,al
  41ead8:	adc    al,0xb8
  41eada:	push   eax
  41eadb:	jne    0x41eb4a
  41eadd:	inc    edx
  41eade:	and    cl,ah
  41eae0:	xchg   ebp,eax
  41eae1:	adc    DWORD PTR [edi-0x21],ecx
  41eae4:	pushf  
  41eae5:	mov    WORD PTR [edi+0x1e06611a],cs
  41eaeb:	add    DWORD PTR [ecx-0x75e87f0c],ebx
  41eaf1:	dec    esp
  41eaf2:	or     esi,DWORD PTR [ecx+0x3a]
  41eaf5:	jnp    0x41ea88
  41eaf7:	lock rcr BYTE PTR [edi+0x28050a49],0xb0
  41eaff:	push   eax
  41eb00:	cdq    
  41eb01:	or     BYTE PTR [esi],bh
  41eb03:	push   ebp
  41eb04:	mov    cl,bl
  41eb06:	xor    DWORD PTR [esp+ebx*4-0x7d],edi
  41eb0a:	jl     0x41eb14
  41eb0c:	test   ecx,esi
  41eb0e:	inc    esp
  41eb0f:	out    dx,al
  41eb10:	ins    DWORD PTR es:[edi],dx
  41eb11:	outs   dx,BYTE PTR ds:[esi]
  41eb12:	hlt    
  41eb13:	clc    
  41eb14:	sub    al,0x90
  41eb16:	add    BYTE PTR [eax],0xa9
  41eb19:	mov    edi,0x927e70a5
  41eb1e:	out    dx,eax
  41eb1f:	mov    cl,BYTE PTR [ebx+0x4aa0f7c3]
  41eb25:	add    eax,edi
  41eb27:	cmc    
  41eb28:	xchg   esp,eax
  41eb29:	add    dl,BYTE PTR [esi]
  41eb2b:	adc    ch,ch
  41eb2d:	jmp    0x1d8d:0xa23e1193
  41eb34:	les    ebp,FWORD PTR [ebx-0x3e]
  41eb37:	sti    
  41eb38:	push   ebx
  41eb39:	and    DWORD PTR cs:[ebx+0x10a06d4b],eax
  41eb40:	xor    ah,dh
  41eb42:	xlat   BYTE PTR ds:[ebx]
  41eb43:	sbb    bl,BYTE PTR ds:0xe518e822
  41eb49:	sbb    bh,dh
  41eb4b:	xor    eax,0x9002c1b8
  41eb50:	imul   eax,DWORD PTR [esi+0x6d],0xdc68df28
  41eb57:	fs pop edi
  41eb59:	dec    esp
  41eb5a:	xor    al,0x33
  41eb5c:	retf   
  41eb5d:	dec    ebx
  41eb5e:	xchg   esp,eax
  41eb5f:	ja     0x41eb3c
  41eb61:	and    edi,DWORD PTR [ebx+0x68]
  41eb64:	or     DWORD PTR [edi+0x714c3417],edx
  41eb6a:	jp     0x41eb32
  41eb6c:	xchg   esi,eax
  41eb6d:	int    0xa0
  41eb6f:	ret    
  41eb70:	and    ah,BYTE PTR [eax+0x12298f9b]
  41eb76:	test   DWORD PTR [edx+esi*2],esp
  41eb79:	cs ret 0xbf65
  41eb7d:	leave  
  41eb7e:	sub    DWORD PTR [ebx-0x7c],ecx
  41eb81:	jne    0x41eb7f
  41eb83:	or     ebp,DWORD PTR [ebx]
  41eb85:	sub    DWORD PTR [ecx],0x21fa9ee8
  41eb8b:	xlat   BYTE PTR ds:[ebx]
  41eb8c:	mov    edx,0xc23f4f36
  41eb91:	ds push cs
  41eb93:	mov    al,ds:0xff7d7e5a
  41eb98:	out    0x76,al
  41eb9a:	sbb    al,0xf0
  41eb9c:	(bad)  
  41eb9e:	adc    esi,DWORD PTR [esp]
  41eba1:	xor    eax,0x301f6b29
  41eba6:	inc    ebx
  41eba7:	fidiv  WORD PTR [ebp+0x21]
  41ebaa:	sub    BYTE PTR [ebp-0x3f],0xe1
  41ebae:	push   esi
  41ebaf:	je     0x41eb7e
  41ebb1:	xchg   esi,eax
  41ebb2:	pop    ds
  41ebb3:	daa    
  41ebb4:	adc    eax,0x9c38bfae
  41ebb9:	out    0x18,al
  41ebbb:	jo     0x41ec11
  41ebbd:	mov    eax,0x477a3dc8
  41ebc2:	jg     0x41ec3e
  41ebc4:	jp     0x41eb7b
  41ebc6:	out    0xd6,eax
  41ebc8:	int3   
  41ebc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebca:	(bad)  
  41ebcb:	leave  
  41ebcc:	(bad)  
  41ebce:	dec    ebx
  41ebcf:	jae    0x41ebae
  41ebd1:	sbb    cl,BYTE PTR [edi+0x618fb700]
  41ebd7:	test   DWORD PTR [ebp-0x64],ecx
  41ebda:	jg     0x41ebcc
  41ebdc:	sbb    bl,BYTE PTR [ecx+eax*4]
  41ebdf:	xchg   ecx,eax
  41ebe0:	pop    ss
  41ebe1:	and    al,BYTE PTR [eax]
  41ebe3:	addr16 clc 
  41ebe5:	xchg   esi,eax
  41ebe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebe8:	jle    0x41ec02
  41ebea:	mov    al,ds:0xa7d42d2e
  41ebef:	jmp    DWORD PTR [eax-0x36]
  41ebf2:	sbb    eax,0x247fe3b9
  41ebf7:	jg     0x41eba8
  41ebf9:	adc    esi,DWORD PTR [esi+edx*4-0x1782072b]
  41ec00:	push   ebx
  41ec01:	in     al,0xd5
  41ec03:	cs and edx,esi
  41ec06:	adc    eax,0xe5310520
  41ec0b:	sbb    bl,BYTE PTR [ebx-0x60402e3a]
  41ec11:	xor    BYTE PTR [edi+0x4ae769af],0xf5
  41ec18:	ins    DWORD PTR es:[edi],dx
  41ec19:	lods   ax,WORD PTR ds:[esi]
  41ec1b:	shl    BYTE PTR [ebx],1
  41ec1d:	push   edi
  41ec1e:	mov    al,ds:0x66d5547c
  41ec23:	cmp    DWORD PTR [ebx-0x6b06a21f],0x340f579
  41ec2d:	jb     0x41ec0e
  41ec2f:	aam    0x8d
  41ec31:	cmp    DWORD PTR [eax-0x7e],0xc7fddc6c
  41ec38:	jg     0x41ebf5
  41ec3a:	rol    BYTE PTR [esi+0x2d],0x4d
  41ec3e:	lds    ebx,FWORD PTR [edi]
  41ec40:	inc    esp
  41ec41:	mov    al,ds:0xf325eb6e
  41ec46:	nop
  41ec47:	cmp    BYTE PTR [ebx-0x3c64d8d],dl
  41ec4d:	ror    DWORD PTR [ebp-0x18a3322f],1
  41ec53:	push   edx
  41ec54:	arpl   WORD PTR [eax+eiz*4+0x4b5e93f5],ax
  41ec5b:	aaa    
  41ec5c:	(bad)  
  41ec5d:	jge    0x41ebf5
  41ec5f:	cvtps2pd xmm3,xmm1
  41ec62:	addr16 push 0xffffffa5
  41ec65:	out    0xba,eax
  41ec67:	cs push 0xeee7a4b4
  41ec6d:	xchg   esp,eax
  41ec6e:	adc    DWORD PTR [ecx+0x5e],edx
  41ec71:	sbb    DWORD PTR [ecx+0x23],eax
  41ec74:	push   esi
  41ec75:	mov    esp,0x412bf74
  41ec7a:	lods   eax,DWORD PTR ds:[esi]
  41ec7b:	xor    eax,DWORD PTR [ecx+0x5e]
  41ec7e:	popf   
  41ec7f:	inc    ebx
  41ec80:	mov    esp,0x2e44f2d3
  41ec85:	jmp    0xda878a50
  41ec8a:	in     al,dx
  41ec8b:	pushf  
  41ec8c:	push   cs
  41ec8d:	cmc    
  41ec8e:	arpl   WORD PTR [edx],di
  41ec90:	push   edx
  41ec91:	jns    0x41eca6
  41ec93:	and    al,0xc4
  41ec95:	dec    edx
  41ec96:	std    
  41ec97:	jne    0x41ec66
  41ec99:	out    dx,eax
  41ec9a:	addr16 jle 0x41ec31
  41ec9d:	fwait
  41ec9e:	pop    ss
  41ec9f:	add    DWORD PTR [ebx],ebx
  41eca1:	push   0x4f8061b0
  41eca6:	sbb    al,0xd7
  41eca8:	sub    DWORD PTR [esi+0x0],eax
  41ecab:	add    al,0x2a
  41ecad:	cs ins DWORD PTR es:[edi],dx
  41ecaf:	mov    esp,0x4c37f757
  41ecb4:	ret    
  41ecb5:	mov    ebx,0xb3131194
  41ecba:	sbb    al,0xe4
  41ecbc:	cmp    al,0xbb
  41ecbe:	cmc    
  41ecbf:	mul    BYTE PTR [ecx-0x29722039]
  41ecc5:	cmp    al,0x4a
  41ecc7:	inc    ebp
  41ecc8:	mov    eax,0x7568a47c
  41eccd:	imul   esp,DWORD PTR [edx+0x2d],0x1b83f0b0
  41ecd4:	inc    esi
  41ecd5:	add    BYTE PTR [ebp+0x4c],dl
  41ecd8:	lods   al,BYTE PTR ds:[esi]
  41ecd9:	rcl    DWORD PTR [ecx],cl
  41ecdb:	sbb    eax,0x578d340d
  41ece0:	cmp    ch,ch
  41ece2:	inc    edx
  41ece3:	sbb    DWORD PTR [ebx+eax*4-0xca3011a],ecx
  41ecea:	sbb    al,0x5a
  41ecec:	mul    DWORD PTR ds:0x5ac5bacb
  41ecf2:	pop    ds
  41ecf3:	mov    ebx,0x719d664a
  41ecf8:	stos   DWORD PTR es:[edi],eax
  41ecf9:	retf   0x94c8
  41ecfc:	call   0x70014dbf
  41ed01:	in     al,0xe0
  41ed03:	ficomp DWORD PTR [ecx-0x34]
  41ed06:	jl     0x41ecb0
  41ed08:	sbb    ebx,ecx
  41ed0a:	aas    
  41ed0b:	icebp  
  41ed0c:	jmp    0x8d1ae5ab
  41ed11:	adc    esi,0xffffffff
  41ed14:	mov    eax,ds:0x7292e3f6
  41ed19:	popf   
  41ed1a:	adc    BYTE PTR [ebx],bl
  41ed1c:	fisttp WORD PTR [ebx-0xf]
  41ed1f:	xor    bh,BYTE PTR [ebx+0x3598b582]
  41ed25:	dec    ebx
  41ed26:	jnp    0x41ed46
  41ed28:	and    al,0x64
  41ed2a:	adc    esp,eax
  41ed2c:	test   BYTE PTR [edi-0x40ed371a],dl
  41ed32:	int    0xfe
  41ed34:	jmp    0xc595:0x87fff8b0
  41ed3b:	and    BYTE PTR [edi-0x20d8bee2],cl
  41ed41:	add    ebp,DWORD PTR [edi-0x68aba3b2]
  41ed47:	enter  0xbf5c,0x5d
  41ed4b:	mov    eax,0xf5cff686
  41ed50:	nop
  41ed51:	or     esp,DWORD PTR [ebp+0x10]
  41ed54:	pop    ecx
  41ed55:	cmp    cl,BYTE PTR [esi-0x537c17e8]
  41ed5b:	or     DWORD PTR [esi+edx*4-0x28158920],edi
  41ed62:	mov    edi,ds
  41ed64:	(bad)  
  41ed65:	push   edi
  41ed66:	mov    al,0xdf
  41ed68:	sbb    al,BYTE PTR [esi]
  41ed6a:	popf   
  41ed6b:	aaa    
  41ed6c:	lea    ecx,[ecx-0x40eb6ea7]
  41ed72:	push   edi
  41ed73:	or     BYTE PTR [edx+0x27],0xd7
  41ed77:	adc    ebp,DWORD PTR [esi-0x1163cbf2]
  41ed7d:	into   
  41ed7e:	mov    eax,ds:0x77500da3
  41ed83:	(bad)  
  41ed84:	outs   dx,DWORD PTR ds:[esi]
  41ed85:	je     0x41ed67
  41ed87:	ss mov ebx,0xa77f6f03
  41ed8d:	jbe    0x41ee06
  41ed8f:	jnp    0x41eddb
  41ed91:	mov    esi,0xe8953660
  41ed96:	inc    ecx
  41ed97:	mov    ds:0xfa0adf98,al
  41ed9c:	dec    esi
  41ed9d:	ficom  DWORD PTR [ebx]
  41ed9f:	stos   DWORD PTR es:[edi],eax
  41eda0:	add    eax,0x9e3158f8
  41eda5:	mov    eax,0x17695e89
  41edaa:	sbb    BYTE PTR [edx-0x26d9ca5e],al
  41edb0:	gs mov bl,0x34
  41edb3:	push   cs
  41edb4:	fbstp  TBYTE PTR [edx]
  41edb6:	and    ch,bl
  41edb8:	jge    0x41edf3
  41edba:	repz sbb edi,edx
  41edbd:	inc    edi
  41edbe:	outs   dx,DWORD PTR ds:[esi]
  41edbf:	and    al,0xb5
  41edc1:	mov    ds,WORD PTR [ebp-0x4be61aa9]
  41edc7:	ror    BYTE PTR [esi],cl
  41edc9:	in     al,dx
  41edca:	mov    es,esi
  41edcc:	and    eax,0x235d938f
  41edd1:	stos   BYTE PTR es:[edi],al
  41edd2:	outs   dx,DWORD PTR ds:[esi]
  41edd3:	in     eax,dx
  41edd4:	add    BYTE PTR [edx],0xd3
  41edd7:	enter  0x534,0x43
  41eddb:	xchg   ecx,eax
  41eddc:	pop    esi
  41eddd:	outs   dx,DWORD PTR ds:[esi]
  41edde:	ds dec ebp
  41ede0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ede1:	mov    ds:0x6ad3dcb3,al
  41ede6:	mov    esi,0x890b8cc4
  41edeb:	lods   al,BYTE PTR ds:[esi]
  41edec:	daa    
  41eded:	mov    dl,0xa3
  41edef:	jae    0x41edad
  41edf1:	jae    0x41ee03
  41edf3:	int3   
  41edf4:	and    DWORD PTR [ecx+0x4b7de69d],esp
  41edfa:	push   ebx
  41edfb:	outs   dx,BYTE PTR ds:[esi]
  41edfc:	sar    al,cl
  41edfe:	and    DWORD PTR [ebx+eax*1],ecx
  41ee01:	test   ebx,edx
  41ee03:	xchg   edi,eax
  41ee04:	sub    BYTE PTR ds:0xcedd15c3,0x99
  41ee0b:	push   ecx
  41ee0c:	bound  ecx,QWORD PTR [edx-0x7002e9ab]
  41ee12:	xchg   ebp,eax
  41ee13:	sub    ch,BYTE PTR [ecx+0x4d5088b5]
  41ee19:	dec    ebx
  41ee1a:	sub    al,0x7c
  41ee1c:	sub    BYTE PTR [eax+0x20],0xde
  41ee20:	add    al,0xc3
  41ee22:	xor    eax,DWORD PTR [eax-0x5b246283]
  41ee28:	jmp    0xaac3456f
  41ee2d:	sahf   
  41ee2e:	mov    eax,ds:0x34b66be2
  41ee33:	(bad)  
  41ee34:	fisub  DWORD PTR [ebp-0x3a2261e8]
  41ee3a:	pop    edx
  41ee3b:	mov    DWORD PTR [ebx-0x6a],eax
  41ee3e:	push   cs
  41ee3f:	(bad)  
  41ee40:	aad    0x31
  41ee42:	sti    
  41ee43:	inc    edi
  41ee44:	stos   DWORD PTR es:[edi],eax
  41ee45:	push   0x59be20a6
  41ee4a:	inc    ecx
  41ee4b:	iret   
  41ee4c:	jecxz  0x41ee6c
  41ee4e:	mov    ds:0x677abb5b,eax
  41ee53:	clc    
  41ee54:	mov    dh,0x51
  41ee56:	cld    
  41ee57:	push   edi
  41ee58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee59:	std    
  41ee5a:	mov    edx,fs
  41ee5c:	jb     0x41edf2
  41ee5e:	or     edi,DWORD PTR [ebp+0x73d554f6]
  41ee64:	pop    ss
  41ee65:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee67:	inc    ebp
  41ee68:	jg     0x41eeb6
  41ee6a:	popf   
  41ee6b:	cmc    
  41ee6c:	dec    ebp
  41ee6d:	jb     0x41eee3
  41ee6f:	jb     0x41eee9
  41ee71:	mov    dh,0x37
  41ee73:	in     al,0x5
  41ee75:	cmp    dl,ah
  41ee77:	imul   esi,DWORD PTR [eax],0xd2371df0
  41ee7d:	sub    al,0x5c
  41ee7f:	aas    
  41ee80:	or     eax,0xd3de41b8
  41ee85:	push   0x4ac33cfa
  41ee8a:	das    
  41ee8b:	jno    0x41ee6f
  41ee8d:	push   0x67
  41ee8f:	or     al,0xa6
  41ee91:	xor    BYTE PTR [ebp+0x35],ch
  41ee94:	push   0x2d
  41ee96:	arpl   si,dx
  41ee98:	repz pop ecx
  41ee9b:	jo     0x41eec6
  41ee9d:	adc    esi,DWORD PTR [edx]
  41ee9f:	nop
  41eea0:	mov    ds:0x3bc8082e,eax
  41eea5:	pop    esp
  41eea6:	push   es
  41eea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eea8:	mov    BYTE PTR [ecx-0x44963936],dl
  41eeae:	dec    edx
  41eeaf:	add    esi,edi
  41eeb1:	add    al,0x67
  41eeb3:	stc    
  41eeb4:	xor    eax,0x5bb4142e
  41eeb9:	sti    
  41eeba:	jmp    0x41ef20
  41eebc:	push   ebp
  41eebd:	(bad)  
  41eebe:	out    dx,al
  41eebf:	cmp    edx,DWORD PTR [edi+edx*8+0x6c692905]
  41eec6:	std    
  41eec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eec8:	jae    0x41eea3
  41eeca:	adc    eax,0x84c5aba4
  41eecf:	and    bl,dh
  41eed1:	ret    0x32ac
  41eed4:	mov    ebx,0x70e252a6
  41eed9:	jns    0x41ee99
  41eedb:	xor    BYTE PTR ds:0x15b53650,ch
  41eee1:	xor    esi,DWORD PTR [esi+0x4cbdbba]
  41eee7:	and    al,0xfb
  41eee9:	push   ss
  41eeea:	and    eax,0x67e1bc40
  41eeef:	add    ebx,esp
  41eef1:	sbb    al,0xcc
  41eef3:	(bad)  [ecx]
  41eef5:	mov    eax,0x6b049d40
  41eefa:	mov    edi,0x1004f853
  41eeff:	ror    BYTE PTR [eax],0x87
  41ef02:	xor    ah,ah
  41ef04:	push   0x69c7dc00
  41ef09:	lods   al,BYTE PTR ds:[esi]
  41ef0a:	mov    eax,ds:0x671cf870
  41ef0f:	jbe    0x41ef57
  41ef11:	lods   eax,DWORD PTR ds:[esi]
  41ef12:	sahf   
  41ef13:	pop    ebx
  41ef14:	and    ecx,eax
  41ef16:	imul   esi,DWORD PTR [esi+0x3a],0x17
  41ef1a:	xchg   esp,eax
  41ef1b:	(bad)
  41ef1e:	test   BYTE PTR [eax+0x113567c8],ch
  41ef24:	out    0xa2,eax
  41ef26:	nop
  41ef27:	sti    
  41ef28:	in     eax,dx
  41ef29:	dec    esi
  41ef2a:	std    
  41ef2b:	in     eax,dx
  41ef2c:	aas    
  41ef2d:	jno    0x41eee0
  41ef2f:	inc    ecx
  41ef30:	mov    ds:0x2dbb641,eax
  41ef35:	sub    dl,ah
  41ef37:	jnp    0x41efa9
  41ef39:	pop    ds
  41ef3a:	or     al,0x39
  41ef3c:	push   0x7d
  41ef3e:	test   BYTE PTR [ecx-0x6bb2da72],bl
  41ef44:	ins    BYTE PTR es:[edi],dx
  41ef45:	pop    eax
  41ef46:	sub    al,0xca
  41ef48:	jno    0x159dd830
  41ef4e:	add    al,0x48
  41ef50:	ret    
  41ef51:	dec    BYTE PTR [edx+0x46]
  41ef54:	mov    edx,eax
  41ef56:	mov    esi,0x959f0fb2
  41ef5b:	pop    ebp
  41ef5c:	ret    
  41ef5d:	mov    dh,0x6b
  41ef5f:	xchg   edx,eax
  41ef60:	and    ecx,DWORD PTR [ecx-0x13089a93]
  41ef66:	call   0xf7:0xd06caae0
  41ef6d:	pop    edi
  41ef6e:	pop    es
  41ef6f:	xchg   edx,eax
  41ef70:	mov    bh,ah
  41ef72:	xlat   BYTE PTR ds:[ebx]
  41ef73:	sub    bl,BYTE PTR [ecx-0x4b]
  41ef76:	mov    ebx,0x25e48bf7
  41ef7b:	push   esi
  41ef7c:	test   BYTE PTR [edi-0x7f],bh
  41ef7f:	in     al,0xc6
  41ef81:	aad    0xca
  41ef83:	mov    esp,DWORD PTR [ebp+0x2555bb50]
  41ef89:	sub    bl,ch
  41ef8b:	cmp    eax,0x6e9fb3bc
  41ef90:	test   BYTE PTR [ebp+0x1a5baa6b],ch
  41ef96:	or     BYTE PTR [eax],bh
  41ef98:	sub    ebx,edi
  41ef9a:	jns    0x41ef92
  41ef9c:	sbb    al,0x36
  41ef9e:	popa   
  41ef9f:	outs   dx,DWORD PTR ds:[esi]
  41efa0:	ss sahf 
  41efa2:	pop    DWORD PTR [ebp-0x7d]
  41efa5:	jl     0x41efbe
  41efa7:	sbb    bl,BYTE PTR [eax+0x42d03ad0]
  41efad:	in     al,0xef
  41efaf:	loopne 0x41f004
  41efb1:	mov    cl,0xa3
  41efb3:	sub    BYTE PTR [ecx+0x46fa5274],0xd3
  41efba:	inc    esp
  41efbb:	nop
  41efbc:	inc    esi
  41efbd:	jns    0x41f02d
  41efbf:	out    dx,al
  41efc0:	mov    WORD PTR ds:0xf1fe29f,cs
  41efc6:	mov    eax,0xe2fca70a
  41efcb:	xor    ch,BYTE PTR [eax+0x1f81beee]
  41efd1:	fidivr WORD PTR [edi-0x10]
  41efd4:	scas   eax,DWORD PTR es:[edi]
  41efd5:	mov    ecx,DWORD PTR ds:0x1ea46091
  41efdb:	jne    0x41ef85
  41efdd:	push   esi
  41efde:	adc    esp,DWORD PTR [edx+0x5dda08e4]
  41efe4:	xchg   edx,eax
  41efe5:	inc    edx
  41efe6:	or     ah,ch
  41efe8:	jmp    0x41efef
  41efea:	ftst   
  41efec:	shr    DWORD PTR [ebp-0x74],1
  41efef:	call   ebp
  41eff1:	(bad)  [edx-0x30e0c5bc]
  41eff7:	jmp    0x41efc7
  41eff9:	mov    ?,WORD PTR [ebp+eax*1-0x5]
  41effd:	xlat   BYTE PTR ds:[ebx]
  41effe:	repz xchg edi,eax
  41f000:	out    0xd3,al
  41f002:	mov    ch,0xc6
  41f004:	jo     0x41f059
  41f006:	inc    esi
  41f007:	mov    al,ds:0x3ac47ff0
  41f00c:	push   edi
  41f00d:	mov    cl,0xdd
  41f00f:	mov    ecx,0x6b4dec78
  41f014:	xchg   ebx,eax
  41f015:	fistp  WORD PTR [esp+edx*1+0x3f]
  41f019:	mov    ch,0xe5
  41f01b:	cli    
  41f01c:	loope  0x41f06d
  41f01e:	daa    
  41f01f:	fdiv   st(7),st
  41f021:	xchg   esi,eax
  41f022:	fwait
  41f023:	sub    bl,BYTE PTR [ebx-0x12df6c17]
  41f029:	and    BYTE PTR ds:0xed231600,al
  41f02f:	sbb    al,0xf3
  41f031:	pop    edx
  41f032:	in     eax,0xf2
  41f034:	aaa    
  41f035:	and    bl,bh
  41f037:	cs mov bh,0xa9
  41f03a:	inc    eax
  41f03b:	jp     0x41eff4
  41f03d:	out    dx,al
  41f03e:	cmp    ecx,DWORD PTR [eax+0x65]
  41f041:	js     0x41eff3
  41f043:	push   0xab155e1e
  41f048:	pop    ss
  41f049:	das    
  41f04a:	popa   
  41f04b:	je     0x41f013
  41f04d:	push   ebp
  41f04e:	mov    al,0xb
  41f050:	jg     0x41f0a6
  41f052:	cli    
  41f053:	int3   
  41f054:	and    al,0xf
  41f056:	mov    edi,esi
  41f058:	in     eax,0x14
  41f05a:	gs je  0x41effa
  41f05d:	scas   eax,DWORD PTR es:[edi]
  41f05e:	dec    eax
  41f05f:	xchg   ebx,eax
  41f060:	in     eax,0xd4
  41f062:	(bad)  [ebp-0x3a25dd42]
  41f068:	fwait
  41f069:	cmp    al,0xe7
  41f06b:	pop    eax
  41f06c:	push   esp
  41f06d:	test   eax,0x1985c7f
  41f072:	sbb    ch,bl
  41f074:	ja     0x41f0b0
  41f076:	xor    esp,DWORD PTR [ecx-0x72]
  41f079:	and    bl,BYTE PTR ss:[esp+ebp*2+0x3b]
  41f07e:	sbb    dh,bh
  41f080:	xor    BYTE PTR [edx-0x36],ah
  41f083:	std    
  41f084:	addr16 adc eax,0xa89c9918
  41f08a:	and    ch,BYTE PTR [esi+ebp*2]
  41f08d:	mov    dh,0xdb
  41f08f:	jbe    0x41f065
  41f091:	fadd   st(6),st
  41f093:	pop    es
  41f094:	stc    
  41f095:	pop    edx
  41f096:	mov    ds:0x9eadcff7,eax
  41f09b:	jp     0x41f062
  41f09d:	or     al,0x17
  41f09f:	dec    ebx
  41f0a0:	arpl   WORD PTR [edi+esi*4+0x382508bc],di
  41f0a7:	sbb    DWORD PTR [ebp+0x42af589],ecx
  41f0ad:	das    
  41f0ae:	mov    ds:0x641596c6,eax
  41f0b3:	pop    ebx
  41f0b4:	sub    ah,BYTE PTR [edi]
  41f0b6:	in     eax,0x34
  41f0b8:	fxch   st(3)
  41f0ba:	repnz dec edx
  41f0bc:	mov    eax,ds:0x9bcf8e52
  41f0c1:	cmp    DWORD PTR [edx],edi
  41f0c3:	add    BYTE PTR [ecx-0x4f],bl
  41f0c6:	mov    ebx,0x35f46aaf
  41f0cb:	mov    eax,0x2ac15c35
  41f0d0:	inc    esp
  41f0d1:	xor    ah,bh
  41f0d3:	adc    BYTE PTR [edx-0x2f663a2],bl
  41f0d9:	mov    ds:0x5843f8de,eax
  41f0de:	inc    eax
  41f0df:	dec    ecx
  41f0e0:	inc    ebp
  41f0e1:	stos   DWORD PTR es:[edi],eax
  41f0e2:	lock arpl WORD PTR [edx],di
  41f0e5:	sub    BYTE PTR [edi+0x61e6b453],ah
  41f0eb:	lea    eax,[edx-0x48264f88]
  41f0f1:	adc    BYTE PTR [edi-0x5f32108],0xb7
  41f0f8:	btr    DWORD PTR [esi],esp
  41f0fb:	xor    esp,ebx
  41f0fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0fe:	popf   
  41f0ff:	imul   edi,eax,0xfe4e16e
  41f105:	mov    edx,0xe241f81c
  41f10a:	push   0x12
  41f10c:	sub    ah,BYTE PTR [edx]
  41f10e:	add    BYTE PTR [ebx-0x533ef928],cl
  41f114:	mov    ecx,0x5172d8c1
  41f119:	fcom   DWORD PTR [ebx-0x37]
  41f11c:	xor    DWORD PTR [esi],esi
  41f11e:	test   BYTE PTR [edx+0x2b],dh
  41f121:	cmp    BYTE PTR [ebx+0x2b],ah
  41f124:	les    edi,FWORD PTR ss:[edx]
  41f127:	sub    BYTE PTR [ecx-0x1f],ch
  41f12a:	in     al,dx
  41f12b:	lds    ebx,FWORD PTR [ebx-0x7ad6e742]
  41f131:	ret    
  41f132:	int3   
  41f133:	pop    edi
  41f134:	inc    ebx
  41f135:	mov    cl,cl
  41f137:	ss adc eax,0x55e17d34
  41f13d:	sub    BYTE PTR [ebp+0x4d],cl
  41f140:	jnp    0x41f10e
  41f142:	and    cl,BYTE PTR [eax+ebx*4+0x10f73464]
  41f149:	adc    dl,cl
  41f14b:	call   FWORD PTR [esi]
  41f14d:	xchg   ecx,eax
  41f14e:	mov    eax,ds:0xa90db8c8
  41f153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f154:	lods   eax,DWORD PTR ds:[esi]
  41f155:	xor    BYTE PTR [edi],bl
  41f157:	add    al,BYTE PTR [eax-0x563555a]
  41f15d:	out    dx,al
  41f15e:	mov    bl,0xcf
  41f160:	jg     0x41f12a
  41f162:	pop    ebx
  41f163:	outs   dx,BYTE PTR ds:[esi]
  41f164:	and    esp,0xffffffa9
  41f167:	in     eax,dx
  41f168:	xchg   ebx,eax
  41f169:	ror    DWORD PTR [ebx-0x109cdaea],1
  41f16f:	hlt    
  41f170:	xchg   edi,eax
  41f171:	or     eax,0x8c7f233b
  41f176:	pop    edx
  41f177:	sahf   
  41f178:	sub    al,0xb
  41f17a:	dec    ebp
  41f17b:	std    
  41f17c:	dec    eax
  41f17d:	ins    BYTE PTR es:[edi],dx
  41f17e:	add    bl,ch
  41f180:	mov    ch,ch
  41f182:	cdq    
  41f183:	cmp    al,0x6f
  41f185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f186:	jb     0x41f17e
  41f188:	lea    ebx,[ebp-0x39f4b3ed]
  41f18e:	mov    edx,0xc99b650c
  41f193:	lods   eax,DWORD PTR ds:[esi]
  41f194:	stc    
  41f195:	daa    
  41f196:	adc    al,0x14
  41f198:	rcr    BYTE PTR [edi],cl
  41f19a:	sub    edi,ebp
  41f19c:	add    edx,DWORD PTR [edx+eax*1-0x3d]
  41f1a0:	dec    esi
  41f1a1:	cld    
  41f1a2:	mov    edi,0xc2934d8a
  41f1a7:	ins    DWORD PTR es:[edi],dx
  41f1a8:	ds ret 0x185d
  41f1ac:	or     eax,0x93e7ef73
  41f1b1:	test   eax,0xe0c19f7d
  41f1b6:	loop   0x41f17c
  41f1b8:	pop    ds
  41f1b9:	inc    ebx
  41f1ba:	jmp    0x7163:0xf936bb4f
  41f1c1:	sbb    DWORD PTR [esi+ebp*2+0x6a3351c0],eax
  41f1c8:	adc    BYTE PTR [edx],cl
  41f1ca:	cmp    DWORD PTR [edx-0x55e3e22d],0x1e
  41f1d1:	jle    0x41f199
  41f1d3:	mov    BYTE PTR [edi],ah
  41f1d5:	cmc    
  41f1d6:	retf   0x3a7b
  41f1d9:	shl    dh,1
  41f1db:	cmp    esi,edi
  41f1dd:	mov    ah,0x19
  41f1df:	or     edx,DWORD PTR gs:[ecx-0x61e9f96d]
  41f1e6:	xor    DWORD PTR [esi+0x5b82c736],eax
  41f1ec:	mov    ds:0x7572c308,eax
  41f1f1:	lds    ecx,FWORD PTR [eax+0x605419b1]
  41f1f7:	mov    fs,WORD PTR [esp+eiz*2+0x1c9b2e21]
  41f1fe:	in     al,0xab
  41f200:	je     0x41f232
  41f202:	mov    ebp,0xbf861f2c
  41f207:	lahf   
  41f208:	mov    WORD PTR [eax+0x22ab75b],fs
  41f20e:	jno    0x41f1d2
  41f210:	xor    al,0x7b
  41f212:	xchg   DWORD PTR [ebp+0x38],ecx
  41f215:	lds    edx,FWORD PTR [esi-0x15]
  41f218:	jns    0x41f1fc
  41f21a:	imul   ecx,ecx,0x53
  41f21d:	ds push edi
  41f21f:	out    dx,al
  41f220:	(bad)  
  41f221:	(bad)  
  41f222:	out    0x72,al
  41f224:	or     ebx,DWORD PTR [eax]
  41f226:	aas    
  41f227:	sti    
  41f228:	inc    ebx
  41f229:	leave  
  41f22a:	idiv   DWORD PTR ds:0x9693f859
  41f230:	repz div ecx
  41f233:	push   ebp
  41f234:	pop    es
  41f235:	xor    DWORD PTR [edi+ebx*4+0x50],eax
  41f239:	xlat   BYTE PTR ds:[ebx]
  41f23a:	sbb    BYTE PTR [eax+0x10c28f25],0x56
  41f241:	inc    ecx
  41f242:	(bad)  [esi-0x4d]
  41f245:	call   0x87c219a0
  41f24a:	stos   BYTE PTR es:[edi],al
  41f24b:	cmc    
  41f24c:	(bad)  
  41f24d:	frstor ds:0x41ebc357
  41f253:	cmp    ebx,DWORD PTR [eax]
  41f255:	nop
  41f256:	push   0xffffffad
  41f258:	mov    al,ds:0xcec665d9
  41f25d:	mov    ecx,0x84d95a31
  41f262:	jecxz  0x41f24c
  41f264:	les    eax,FWORD PTR [ecx+0x78]
  41f267:	mov    ds,WORD PTR ds:0x5352a1c7
  41f26d:	add    eax,ecx
  41f26f:	mov    ecx,0xbfcd78ea
  41f274:	xor    al,0xa7
  41f276:	cmp    BYTE PTR [eax+edx*1-0x6c28c1ad],bh
  41f27d:	cdq    
  41f27e:	jmp    0xe7db0d6c
  41f283:	hlt    
  41f284:	xchg   ebx,eax
  41f285:	call   0x4cf61ceb
  41f28a:	aam    0x98
  41f28c:	adc    dl,BYTE PTR [ebp-0x5b16f55d]
  41f292:	aaa    
  41f293:	daa    
  41f294:	add    al,0xcc
  41f296:	pop    esi
  41f297:	ins    BYTE PTR es:[edi],dx
  41f298:	arpl   cx,ax
  41f29a:	and    edx,edi
  41f29c:	xlat   BYTE PTR ds:[ebx]
  41f29d:	dec    esp
  41f29e:	xor    dh,ch
  41f2a0:	sahf   
  41f2a1:	into   
  41f2a2:	cs jg  0x41f23d
  41f2a5:	loopne 0x41f325
  41f2a7:	jmp    0x79d0:0x78d1bf7e
  41f2ae:	sti    
  41f2af:	lods   al,BYTE PTR ds:[esi]
  41f2b0:	adc    al,0xd3
  41f2b2:	int    0xb7
  41f2b4:	xor    esi,DWORD PTR [edi-0x13b1376f]
  41f2ba:	mov    dl,0xb6
  41f2bc:	sahf   
  41f2bd:	rcl    DWORD PTR [edi],1
  41f2bf:	cmp    BYTE PTR [ebp+0x73a04812],ch
  41f2c5:	les    edi,FWORD PTR [ebp-0x4e5c2e4a]
  41f2cb:	cdq    
  41f2cc:	popa   
  41f2cd:	lods   eax,DWORD PTR ds:[esi]
  41f2ce:	enter  0x9824,0x5c
  41f2d2:	out    dx,al
  41f2d3:	sahf   
  41f2d4:	cwde   
  41f2d5:	arpl   WORD PTR [ebp+0x77ca284f],ax
  41f2db:	add    eax,0x32fe9f88
  41f2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2e1:	and    cl,BYTE PTR [edi+0x69]
  41f2e4:	jne    0x41f319
  41f2e6:	je     0x41f351
  41f2e8:	rcl    dl,cl
  41f2ea:	adc    al,0xad
  41f2ec:	push   0x7120fe3
  41f2f1:	push   eax
  41f2f2:	mov    ecx,0x1ed28349
  41f2f7:	dec    esi
  41f2f8:	adc    BYTE PTR [ebp-0x65],ah
  41f2fb:	jnp    0x41f320
  41f2fd:	or     BYTE PTR [ebp+0x2d9091ff],bl
  41f303:	add    bl,BYTE PTR [edx]
  41f305:	out    0xfd,eax
  41f307:	in     eax,dx
  41f308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f309:	pop    ss
  41f30a:	jbe    0x41f373
  41f30c:	call   DWORD PTR [ebx+0x40]
  41f30f:	stos   DWORD PTR es:[edi],eax
  41f310:	adc    BYTE PTR [edi+0x30e6376],0x12
  41f317:	(bad)  
  41f318:	jb     0x41f2e2
  41f31a:	mov    DWORD PTR [eax+0x6c],ebp
  41f31d:	icebp  
  41f31e:	leave  
  41f31f:	sub    eax,0x185b829
  41f324:	ret    0xe6e4
  41f327:	xor    edx,ebp
  41f329:	jns    0x41f2ca
  41f32b:	in     eax,dx
  41f32c:	xchg   ebx,eax
  41f32d:	aam    0xc8
  41f32f:	mov    gs,WORD PTR [edi+esi*1]
  41f332:	fisubr DWORD PTR [ebx+edi*2]
  41f335:	ins    BYTE PTR es:[edi],dx
  41f336:	or     edx,DWORD PTR ds:0xe50894d5
  41f33c:	test   BYTE PTR [ebp-0xf],dh
  41f33f:	in     al,0xb
  41f341:	sbb    al,0x55
  41f343:	pop    edx
  41f344:	(bad)  
  41f345:	xor    eax,0x398d5a5f
  41f34a:	out    dx,eax
  41f34b:	outs   dx,BYTE PTR ds:[esi]
  41f34c:	sub    DWORD PTR [edx-0x66],esp
  41f34f:	xor    edx,DWORD PTR [ecx]
  41f351:	dec    esp
  41f352:	adc    cl,BYTE PTR [edx]
  41f354:	pop    ds
  41f355:	repnz icebp 
  41f357:	shl    DWORD PTR [ebx+edi*1-0x39cc2257],1
  41f35e:	xlat   BYTE PTR ds:[ebx]
  41f35f:	sbb    BYTE PTR [ecx-0x71],bl
  41f362:	imul   esi,DWORD PTR [esi-0x503ed9a2],0xffffff8b
  41f369:	mul    ecx
  41f36b:	mov    ch,0xe3
  41f36d:	push   es
  41f36e:	mov    ah,0xde
  41f370:	adc    eax,0xaeaabd32
  41f375:	vpsllq ymm2,ymm0,XMMWORD PTR [esi-0x5b]
  41f37a:	mov    ecx,0xdf04d5b5
  41f37f:	adc    eax,0x6cb1b312
  41f384:	push   0xffffffdb
  41f386:	aam    0xce
  41f388:	cmp    DWORD PTR [ecx*1+0x6cffe902],eax
  41f38f:	fs pop es
  41f391:	scas   al,BYTE PTR es:[edi]
  41f392:	scas   al,BYTE PTR es:[edi]
  41f393:	dec    esp
  41f394:	int    0x4b
  41f396:	sbb    BYTE PTR [ebp-0x2c],ch
  41f399:	(bad)  
  41f39a:	in     eax,dx
  41f39b:	xor    al,BYTE PTR [esi]
  41f39d:	retf   0x2f16
  41f3a0:	and    eax,0x9fda566f
  41f3a5:	repnz push 0x56e6678c
  41f3ab:	iret   
  41f3ac:	icebp  
  41f3ad:	mov    BYTE PTR [ecx+0x5797b4ad],dh
  41f3b3:	(bad)  
  41f3b4:	push   cs
  41f3b5:	test   eax,0xf15a10a0
  41f3ba:	mov    ebx,0xab27db49
  41f3bf:	mov    WORD PTR [esi],cs
  41f3c1:	push   edx
  41f3c2:	in     eax,dx
  41f3c3:	pop    es
  41f3c4:	or     DWORD PTR [eax-0x249c570e],ebx
  41f3ca:	scas   al,BYTE PTR es:[edi]
  41f3cb:	cld    
  41f3cc:	adc    DWORD PTR ds:0xb885a9a3,ebp
  41f3d2:	ret    0x5063
  41f3d5:	pusha  
  41f3d6:	pop    ss
  41f3d7:	aad    0x5e
  41f3d9:	jns    0x41f402
  41f3db:	sahf   
  41f3dc:	mov    ah,0xa0
  41f3de:	outs   dx,BYTE PTR ds:[esi]
  41f3df:	cmp    dh,BYTE PTR [ecx+0x11e44441]
  41f3e5:	imul   eax,ebx,0xffffffb7
  41f3e8:	ror    DWORD PTR [ebx-0x67],1
  41f3eb:	pop    es
  41f3ec:	sub    eax,0xaf559fd3
  41f3f1:	adc    BYTE PTR [eax+edi*8+0x7aa9cfa1],al
  41f3f8:	mov    WORD PTR [edi-0xe],ss
  41f3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3fc:	xchg   DWORD PTR [ecx],esi
  41f3fe:	xchg   ecx,eax
  41f3ff:	mov    ah,0xb7
  41f401:	pop    ss
  41f402:	cli    
  41f403:	(bad)  
  41f405:	xchg   esp,eax
  41f406:	fiadd  DWORD PTR [ebx]
  41f408:	stc    
  41f409:	push   0x201680b5
  41f40e:	iret   
  41f40f:	addr16 sar eax,0x9f
  41f413:	scas   eax,DWORD PTR es:[edi]
  41f414:	fistp  QWORD PTR ss:[eax]
  41f417:	dec    eax
  41f418:	outs   dx,DWORD PTR ds:[esi]
  41f419:	das    
  41f41a:	std    
  41f41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f41c:	mov    WORD PTR [ebp-0x1a],ss
  41f41f:	mov    bl,0x89
  41f421:	xor    DWORD PTR [ebx-0x3a],esp
  41f424:	mov    dl,BYTE PTR [esi]
  41f426:	sti    
  41f427:	inc    eax
  41f428:	xor    BYTE PTR [esi+0x73],bl
  41f42b:	(bad)  
  41f42c:	jno    0x41f3d2
  41f42e:	push   es
  41f42f:	in     eax,dx
  41f430:	mov    WORD PTR [edi],ds
  41f432:	pop    edx
  41f433:	mov    cl,0xd4
  41f435:	(bad)
  41f438:	jb     0x41f4ad
  41f43a:	xchg   esi,eax
  41f43b:	test   eax,0x1aedf7fa
  41f440:	add    al,0x9b
  41f442:	jae    0x41f40e
  41f444:	pop    edi
  41f445:	mov    es,WORD PTR [eax]
  41f447:	cli    
  41f448:	add    DWORD PTR [edi+0x3e],eax
  41f44b:	xchg   edi,eax
  41f44c:	push   0x50
  41f44e:	ror    BYTE PTR [edi],1
  41f450:	pop    ebp
  41f451:	mov    bh,0xf
  41f453:	mov    cl,bl
  41f455:	mov    ds:0x4d5d80ca,al
  41f45a:	inc    edi
  41f45b:	pop    ds
  41f45c:	fadd   DWORD PTR [edx]
  41f45e:	cwde   
  41f45f:	mov    ds:0xa4eb50e2,al
  41f464:	add    al,0x60
  41f466:	je     0x41f417
  41f468:	mov    cs,WORD PTR [esp+eiz*8]
  41f46b:	(bad)  
  41f46c:	into   
  41f46d:	in     eax,dx
  41f46e:	and    eax,0x14b8de23
  41f473:	clc    
  41f474:	dec    edi
  41f475:	ins    BYTE PTR es:[edi],dx
  41f476:	lahf   
  41f477:	xor    al,0xe6
  41f479:	rcr    DWORD PTR [esi],cl
  41f47b:	or     BYTE PTR [esi+0x27],ah
  41f47e:	iret   
  41f47f:	js     0x41f457
  41f481:	jl     0x41f4cc
  41f483:	mov    eax,0x88b473cd
  41f488:	xchg   DWORD PTR [ebp+0x2432179],eax
  41f48e:	and    dl,BYTE PTR [ebx-0x7c]
  41f491:	out    0xc7,al
  41f493:	adc    dh,BYTE PTR [ebx]
  41f495:	adc    esp,edi
  41f497:	aaa    
  41f498:	fdivr  DWORD PTR [eax+edi*2]
  41f49b:	mov    al,ds:0xd9202fca
  41f4a0:	jmp    0x35e7:0x78d3b027
  41f4a7:	pop    edi
  41f4a8:	xor    esi,ecx
  41f4aa:	mov    ecx,0x2010e168
  41f4af:	jge    0x41f44e
  41f4b1:	xor    DWORD PTR ds:0xefe5267a,esp
  41f4b7:	mov    eax,0x7aa2eb62
  41f4bc:	xchg   ebx,eax
  41f4bd:	jp     0x41f483
  41f4bf:	ja     0x41f4ac
  41f4c1:	push   sp
  41f4c3:	pop    es
  41f4c4:	maxps  xmm2,XMMWORD PTR [eax]
  41f4c7:	(bad)  
  41f4c8:	aad    0x68
  41f4ca:	cmp    BYTE PTR [edi+0x56647e1e],dh
  41f4d0:	fmul   DWORD PTR [edx+0x37]
  41f4d3:	mov    esp,0xcf3910b4
  41f4d8:	shr    ecx,0x1e
  41f4db:	mov    dh,0xea
  41f4dd:	fadd   DWORD PTR [ebx]
  41f4df:	push   edx
  41f4e0:	sub    BYTE PTR [eax+esi*8],ah
  41f4e3:	dec    esi
  41f4e4:	xchg   DWORD PTR [eax+0x6c702b4b],ebx
  41f4ea:	jae    0x41f557
  41f4ec:	pusha  
  41f4ed:	or     DWORD PTR [ecx+0x71c2b645],ecx
  41f4f3:	aad    0x2
  41f4f5:	pop    ss
  41f4f6:	ret    0x677c
  41f4f9:	mov    edi,0x5daa7503
  41f4fe:	cmp    eax,0xca798ee
  41f503:	dec    esi
  41f504:	mov    eax,ds:0x81b61a76
  41f509:	adc    dh,BYTE PTR [ebp-0x60]
  41f50c:	sbb    BYTE PTR [ebx+0x39],ah
  41f50f:	inc    eax
  41f510:	inc    eax
  41f511:	jge    0x41f560
  41f513:	test   BYTE PTR [ebx+0x1ae30c3d],ch
  41f519:	sti    
  41f51a:	cmp    BYTE PTR [bx+si+0x1b],dh
  41f51e:	inc    eax
  41f51f:	ss jecxz 0x41f57e
  41f522:	adc    al,0xbd
  41f524:	scas   al,BYTE PTR es:[edi]
  41f525:	in     eax,dx
  41f526:	ss and al,0x3b
  41f529:	sub    bh,BYTE PTR [ebp+0x4c]
  41f52c:	out    0x14,eax
  41f52e:	mov    ds:0x538575b2,al
  41f533:	jnp    0x41f52e
  41f535:	dec    ebx
  41f536:	or     edx,DWORD PTR [ecx+0x16]
  41f539:	loopne 0x41f59c
  41f53b:	(bad)  
  41f53c:	cli    
  41f53d:	push   edi
  41f53e:	lds    esi,FWORD PTR [ebp+0x9efb1c4]
  41f544:	imul   eax,DWORD PTR [ecx+0x3d],0xc2576131
  41f54b:	push   ds
  41f54c:	and    esi,DWORD PTR [ecx+ebx*4]
  41f54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f550:	scas   eax,DWORD PTR es:[edi]
  41f551:	(bad)  
  41f553:	dec    ebx
  41f554:	adc    BYTE PTR [ecx+0x6e],cl
  41f557:	pop    edi
  41f558:	push   ebp
  41f559:	call   0xdf6f5562
  41f55e:	cmp    al,0x9
  41f560:	mov    eax,ds:0x94f006ac
  41f565:	pop    ebx
  41f566:	and    eax,0x31530919
  41f56b:	push   ebp
  41f56c:	aam    0x34
  41f56e:	(bad)  
  41f570:	out    0x31,eax
  41f572:	pop    ebx
  41f573:	pop    ecx
  41f574:	out    0xd3,eax
  41f576:	push   esp
  41f577:	popa   
  41f578:	mov    ecx,0x17872769
  41f57d:	les    esi,FWORD PTR [esp+ecx*2+0x6f]
  41f581:	mov    esi,ecx
  41f583:	loop   0x41f5bd
  41f585:	cdq    
  41f586:	mov    edi,DWORD PTR [esi]
  41f588:	xchg   BYTE PTR [edi+0x18],dl
  41f58b:	scas   al,BYTE PTR es:[edi]
  41f58c:	sbb    ebp,0x7a3c35bf
  41f592:	call   0xf5ca:0x291e9551
  41f599:	test   dh,cl
  41f59b:	push   0xffffffed
  41f59d:	dec    esp
  41f59e:	mov    ds,WORD PTR [edx+0x2f62b9f]
  41f5a4:	repz and eax,0xffffffa1
  41f5a8:	fild   WORD PTR [eax]
  41f5aa:	mov    eax,0x9f2e7f24
  41f5af:	dec    esi
  41f5b0:	imul   edi,DWORD PTR [edi-0x59],0x1430d672
  41f5b7:	call   0x8919:0x9210691c
  41f5be:	lock jmp 0x472b93a
  41f5c4:	pop    edx
  41f5c5:	jo     0x41f5bb
  41f5c7:	pop    esp
  41f5c8:	arpl   WORD PTR [edx],cx
  41f5ca:	mov    cl,0x11
  41f5cc:	cdq    
  41f5cd:	lds    ecx,FWORD PTR [eax+edx*4+0x863b41b]
  41f5d4:	test   BYTE PTR [edi+0x3feee129],cl
  41f5da:	lods   eax,DWORD PTR ds:[esi]
  41f5db:	(bad)  
  41f5dc:	adc    bl,BYTE PTR [ebx+0x3462e5f]
  41f5e2:	aam    0xbf
  41f5e4:	dec    esi
  41f5e5:	pop    es
  41f5e6:	mov    ecx,0x3041c1bf
  41f5eb:	or     ecx,DWORD PTR [edi+esi*4-0x46cd5335]
  41f5f2:	leave  
  41f5f3:	jb     0x41f5c3
  41f5f5:	jo     0x41f59f
  41f5f7:	lods   al,BYTE PTR ds:[esi]
  41f5f8:	ins    BYTE PTR es:[edi],dx
  41f5f9:	pop    ss
  41f5fa:	dec    BYTE PTR [edx-0x7a]
  41f5fd:	add    bl,BYTE PTR [ecx+0x67c49cba]
  41f603:	jbe    0x41f5dd
  41f605:	cmp    al,0x6f
  41f607:	es add al,0xf0
  41f60a:	xor    DWORD PTR [eax+0x15a9c203],ebp
  41f610:	addr16 xchg edi,eax
  41f612:	or     al,0x70
  41f614:	inc    ebp
  41f615:	mov    ds:0xbfccbc49,al
  41f61a:	aaa    
  41f61b:	mov    ds:0x7a621022,eax
  41f620:	clc    
  41f621:	in     eax,0x27
  41f623:	dec    edi
  41f624:	sbb    al,0x3c
  41f626:	inc    ecx
  41f627:	xor    eax,0x3425d780
  41f62c:	jne    0x41f624
  41f62e:	inc    eax
  41f62f:	cld    
  41f630:	push   ds
  41f631:	pop    ds
  41f632:	ss jl  0x41f63b
  41f635:	push   es
  41f636:	xchg   ecx,eax
  41f637:	adc    cl,dl
  41f639:	jnp    0x41f688
  41f63b:	mul    dl
  41f63d:	pop    ecx
  41f63e:	sti    
  41f63f:	and    BYTE PTR [edx+0x15facbc2],dh
  41f645:	fcomp  QWORD PTR [edx-0x6fb4bf1]
  41f64b:	test   BYTE PTR [ebp-0x4b],0x7
  41f64f:	mov    BYTE PTR [ebp-0x3e],al
  41f652:	retfw  
  41f654:	(bad)  
  41f655:	cs jno 0x41f6bd
  41f658:	push   ebx
  41f659:	mov    ebx,DWORD PTR [eax]
  41f65b:	xchg   edx,eax
  41f65c:	mov    ds:0x5f740090,al
  41f661:	int3   
  41f662:	jle    0x41f63e
  41f664:	mov    bh,0xfb
  41f666:	aam    0xbd
  41f668:	jmp    0x2a0d:0xa8560c48
  41f66f:	call   0x3f85:0x3c59100
  41f676:	sbb    esp,0x64093aa8
  41f67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f67d:	ret    0xf449
  41f680:	mov    edi,0xe7320e30
  41f685:	shl    DWORD PTR [ebx-0x39],1
  41f688:	fnstcw WORD PTR [esi]
  41f68a:	dec    edi
  41f68b:	and    DWORD PTR [eax+ebp*8-0x29],0x5e7daa0
  41f693:	mov    al,ds:0x17630abf
  41f698:	jmp    0x41f634
  41f69a:	and    ebx,esi
  41f69c:	out    dx,al
  41f69d:	xor    esp,0x3f3452cd
  41f6a3:	push   0x43
  41f6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a6:	fidivr WORD PTR [ecx]
  41f6a8:	mov    ebp,DWORD PTR [ecx]
  41f6aa:	stos   BYTE PTR es:[edi],al
  41f6ab:	outs   dx,DWORD PTR ds:[esi]
  41f6ac:	xor    eax,0x731cdbce
  41f6b1:	sbb    ebx,DWORD PTR [ecx]
  41f6b3:	out    0x79,eax
  41f6b5:	xchg   edi,eax
  41f6b6:	in     eax,dx
  41f6b7:	out    dx,eax
  41f6b8:	aam    0xa5
  41f6ba:	or     ch,dh
  41f6bc:	(bad)  
  41f6bd:	or     al,0xf2
  41f6bf:	jge    0x41f6ba
  41f6c1:	test   eax,0x32f0c733
  41f6c6:	push   esi
  41f6c7:	mov    ds:0xd4ed45ce,al
  41f6cc:	call   FWORD PTR [eax-0xa3a1c54]
  41f6d2:	pusha  
  41f6d3:	add    esp,DWORD PTR [eax]
  41f6d5:	aaa    
  41f6d6:	stos   DWORD PTR es:[edi],eax
  41f6d7:	and    DWORD PTR [eax+0x13],ebx
  41f6da:	pop    ss
  41f6db:	lods   al,BYTE PTR ds:[esi]
  41f6dc:	mov    ch,0x91
  41f6de:	push   ss
  41f6df:	fstp   st(0)
  41f6e1:	aam    0xba
  41f6e3:	outs   dx,BYTE PTR ds:[esi]
  41f6e4:	inc    eax
  41f6e5:	es into 
  41f6e7:	jne    0x41f716
  41f6e9:	test   BYTE PTR [edx-0x4132cee0],dl
  41f6ef:	mov    esp,0x754216be
  41f6f4:	mov    ch,ch
  41f6f6:	pusha  
  41f6f7:	xor    eax,DWORD PTR [edx]
  41f6f9:	cmp    BYTE PTR [ebx+edx*2+0x3e],0x69
  41f6fe:	je     0x41f699
  41f700:	inc    eax
  41f701:	aas    
  41f702:	enter  0xcc55,0xfb
  41f706:	add    eax,0xecab26c3
  41f70b:	fidiv  WORD PTR [ecx]
  41f70d:	shr    DWORD PTR [ecx-0x4d5cdeb2],1
  41f713:	and    cl,BYTE PTR [ebx-0x6e]
  41f716:	clc    
  41f717:	mov    edi,0x684ea6c
  41f71c:	frstor [ecx-0x1ad0bd8b]
  41f722:	fst    DWORD PTR [ebx+0x40]
  41f725:	cdq    
  41f726:	inc    edx
  41f727:	test   al,0xe0
  41f729:	xor    BYTE PTR [eax+0x71],0xe7
  41f72d:	(bad)  
  41f72e:	dec    ebx
  41f72f:	jnp    0x41f6fd
  41f731:	xor    ebp,DWORD PTR [ebx]
  41f733:	dec    edx
  41f734:	pop    esp
  41f735:	sti    
  41f736:	popa   
  41f737:	daa    
  41f738:	outs   dx,BYTE PTR ds:[esi]
  41f739:	dec    edi
  41f73a:	outs   dx,BYTE PTR ds:[esi]
  41f73b:	mov    al,0x6b
  41f73d:	xchg   edx,eax
  41f73e:	dec    edi
  41f73f:	jge    0x41f767
  41f741:	cmp    eax,0x7aa208d1
  41f746:	dec    ecx
  41f747:	jno    0x41f735
  41f749:	popa   
  41f74a:	pop    ss
  41f74b:	or     al,BYTE PTR [ebp+0x1940f455]
  41f751:	push   ss
  41f752:	sti    
  41f753:	xchg   al,cl
  41f755:	cmp    BYTE PTR [edx],cl
  41f757:	adc    DWORD PTR cs:[edi-0x64558686],esi
  41f75e:	loop   0x41f7b8
  41f760:	push   es
  41f761:	add    DWORD PTR [eax+0x63],ecx
  41f764:	lahf   
  41f765:	or     ecx,edi
  41f767:	loop   0x41f750
  41f769:	cs ss mov ah,0xb5
  41f76d:	aas    
  41f76e:	sbb    edx,DWORD PTR [ebx+0x2ed40baf]
  41f774:	jmp    0xd52e:0xb132596b
  41f77b:	xor    bl,BYTE PTR [esi+esi*2+0x10]
  41f77f:	inc    edx
  41f780:	xchg   ebx,eax
  41f781:	int    0x4d
  41f783:	cld    
  41f784:	pop    eax
  41f785:	je     0x41f791
  41f787:	inc    eax
  41f788:	add    BYTE PTR [eax-0x94b44a9],0x38
  41f78f:	shl    edx,1
  41f791:	nop
  41f792:	arpl   WORD PTR [edi+0xe],cx
  41f795:	and    BYTE PTR ds:0xc3f951af,ch
  41f79b:	sbb    ecx,DWORD PTR [ebx+0x321f5f31]
  41f7a1:	mov    ch,0xf1
  41f7a3:	aas    
  41f7a4:	lahf   
  41f7a5:	dec    ebx
  41f7a6:	xchg   ecx,eax
  41f7a7:	out    0xc9,eax
  41f7a9:	(bad)  
  41f7aa:	out    dx,al
  41f7ab:	test   al,0xc
  41f7ad:	jb     0x41f7a7
  41f7af:	push   ds
  41f7b0:	dec    edx
  41f7b1:	xor    cl,BYTE PTR [edi]
  41f7b3:	and    ch,BYTE PTR [ecx+0x3c]
  41f7b6:	test   al,0xfe
  41f7b8:	(bad)  
  41f7b9:	psubq  mm5,QWORD PTR [esi-0x3b]
  41f7bd:	dec    ebp
  41f7be:	sbb    esp,DWORD PTR [eax]
  41f7c0:	fwait
  41f7c1:	push   ss
  41f7c2:	retf   
  41f7c3:	fnstsw WORD PTR [edx+0x42]
  41f7c6:	mov    cl,0x1
  41f7c8:	push   esp
  41f7c9:	xchg   ecx,eax
  41f7ca:	std    
  41f7cb:	sub    al,0x57
  41f7cd:	xlat   BYTE PTR ds:[ebx]
  41f7ce:	add    eax,0xccb1973f
  41f7d3:	mov    dh,0x19
  41f7d5:	call   0x57e581bf
  41f7da:	pop    ss
  41f7db:	inc    esp
  41f7dc:	stos   BYTE PTR es:[edi],al
  41f7dd:	mov    esi,DWORD PTR [ebp+0x39]
  41f7e0:	xor    ecx,esi
  41f7e2:	adc    ecx,edi
  41f7e4:	mov    edi,0x55d8bfd3
  41f7e9:	adc    al,0x52
  41f7eb:	and    BYTE PTR [edx+0x5daf8067],bh
  41f7f1:	sub    ebx,edi
  41f7f3:	std    
  41f7f4:	fwait
  41f7f5:	push   eax
  41f7f6:	ds push cs
  41f7f8:	(bad)  [edi]
  41f7fa:	and    al,0xde
  41f7fc:	dec    ebp
  41f7fd:	jns    0x41f863
  41f7ff:	repz mov ebx,0x88ac59e7
  41f805:	pusha  
  41f806:	pop    edx
  41f807:	je     0x41f7d1
  41f809:	out    dx,eax
  41f80a:	sub    al,0x96
  41f80c:	pop    edi
  41f80d:	lock mov WORD PTR [edi],?
  41f810:	fst    DWORD PTR [ecx+0x48]
  41f813:	mov    al,ds:0x60c33a0b
  41f818:	stos   BYTE PTR es:[edi],al
  41f819:	std    
  41f81a:	clc    
  41f81b:	xor    dl,BYTE PTR [esi+0x31510a6f]
  41f821:	div    BYTE PTR [ebx+0x3b]
  41f824:	dec    edi
  41f825:	rcr    BYTE PTR [esi+0x28563baf],0x44
  41f82c:	retf   
  41f82d:	stos   BYTE PTR es:[edi],al
  41f82e:	clc    
  41f82f:	mov    dh,0xdd
  41f831:	lock retf 
  41f833:	cmp    DWORD PTR [edi],edx
  41f835:	mov    DWORD PTR [edx],ebp
  41f837:	mov    cl,BYTE PTR [edx]
  41f839:	push   0xa5a5f1df
  41f83e:	data16 mov al,0x3a
  41f841:	lods   eax,DWORD PTR ds:[esi]
  41f842:	(bad)  
  41f843:	sar    BYTE PTR [edi+0x5db481fd],cl
  41f849:	call   0xc0b9:0xa39936fe
  41f850:	cmp    DWORD PTR [esi-0x42f4df88],ebp
  41f856:	or     DWORD PTR [esi-0x3d383c16],esp
  41f85c:	int    0x39
  41f85e:	or     BYTE PTR [edx-0x57347e87],ch
  41f864:	push   es
  41f865:	rol    BYTE PTR [ebx],0x4f
  41f868:	out    0x9b,al
  41f86a:	push   eax
  41f86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f86c:	in     eax,0xf7
  41f86e:	pop    ebp
  41f86f:	sbb    al,0x7
  41f871:	int3   
  41f872:	shl    BYTE PTR ds:0x1d972dd4,cl
  41f878:	cmp    eax,0xc2abc09f
  41f87d:	sbb    dh,ah
  41f87f:	mov    ecx,0xd790aef0
  41f884:	fiadd  WORD PTR [edi+0x3dfcbaf7]
  41f88a:	xchg   edx,esp
  41f88c:	mov    eax,0x88988ecd
  41f891:	sti    
  41f892:	jne    0x41f90d
  41f894:	dec    esi
  41f895:	(bad)  
  41f896:	leave  
  41f897:	ins    BYTE PTR es:[edi],dx
  41f898:	sub    eax,0x4bfe4d43
  41f89d:	daa    
  41f89e:	retf   
  41f89f:	mov    bl,BYTE PTR [edi+0x3d]
  41f8a2:	pop    eax
  41f8a3:	inc    edi
  41f8a4:	out    0x7f,al
  41f8a6:	test   BYTE PTR [ecx],bl
  41f8a8:	or     al,0xb6
  41f8aa:	mov    eax,0x34b002e8
  41f8af:	shr    ah,1
  41f8b1:	ret    0xa127
  41f8b4:	cmp    cl,bl
  41f8b6:	inc    esp
  41f8b7:	inc    edi
  41f8b8:	hlt    
  41f8b9:	(bad)  
  41f8ba:	dec    DWORD PTR [ecx+0x5e]
  41f8bd:	xchg   ah,ah
  41f8bf:	sbb    DWORD PTR [edi+edx*1],esi
  41f8c2:	mov    ?,WORD PTR [edx+0x15777bde]
  41f8c8:	pop    edi
  41f8c9:	int    0xd5
  41f8cb:	cmp    al,BYTE PTR [esp+eax*8]
  41f8ce:	aad    0xe9
  41f8d0:	sbb    al,0xc5
  41f8d2:	sub    dl,BYTE PTR cs:[edx+ebp*2]
  41f8d6:	int3   
  41f8d7:	popf   
  41f8d8:	push   ds
  41f8d9:	or     bh,BYTE PTR [ecx+0x636e0cd4]
  41f8df:	adc    edx,DWORD PTR [edx+0x6d]
  41f8e2:	sub    DWORD PTR [ecx],eax
  41f8e4:	pop    ebx
  41f8e5:	rcr    BYTE PTR [ecx-0x6b],cl
  41f8e8:	mov    ebp,0xf0bb2e56
  41f8ed:	pop    eax
  41f8ee:	sub    esp,DWORD PTR [edx-0x34]
  41f8f1:	inc    ebx
  41f8f2:	arpl   WORD PTR [eax+0x68],ax
  41f8f5:	ffree  st(7)
  41f8f7:	xchg   edx,eax
  41f8f8:	popa   
  41f8f9:	ss mov fs,ecx
  41f8fc:	loope  0x41f927
  41f8fe:	(bad)  
  41f8ff:	mov    dh,dh
  41f901:	mov    ah,0x5a
  41f903:	and    ah,bh
  41f905:	jle    0x41f927
  41f907:	sbb    BYTE PTR [esi-0x7af26ae7],0xc4
  41f90e:	or     al,BYTE PTR [ebx]
  41f910:	or     ah,ah
  41f912:	rcl    ecx,0x47
  41f915:	mov    ds:0xaba47dc2,eax
  41f91a:	xchg   edi,eax
  41f91b:	sbb    eax,DWORD PTR [ecx-0x79fc97f9]
  41f921:	mov    cl,0xf9
  41f923:	imul   BYTE PTR [edi-0x68]
  41f926:	dec    ecx
  41f927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f928:	or     bl,BYTE PTR [edi-0x63]
  41f92b:	jmp    0x5718:0xcb9eaa2d
  41f932:	fwait
  41f933:	mov    edi,0xcf0679d8
  41f938:	jp     0x41f8ee
  41f93a:	cmp    DWORD PTR fs:[esi+0x0],edx
  41f93e:	call   0x106b:0xf701a281
  41f945:	in     al,0xbd
  41f947:	call   0xfb5e:0x580e637e
  41f94e:	dec    eax
  41f94f:	jg     0x41f8f3
  41f951:	mov    esi,0xeb74904f
  41f956:	pop    ebp
  41f957:	loop   0x41f98c
  41f959:	mov    edi,0xa867daf9
  41f95e:	mov    ds:0xb0c2767d,al
  41f963:	mov    edx,0x34ff2a75
  41f968:	std    
  41f969:	dec    edi
  41f96a:	icebp  
  41f96b:	int    0x2f
  41f96d:	pop    ebx
  41f96e:	add    eax,0x94c7eaef
  41f973:	jno    0x41f9aa
  41f975:	sahf   
  41f976:	sbb    BYTE PTR [ebx],ah
  41f978:	sbb    DWORD PTR [ebp-0x784639cb],ebp
  41f97e:	jbe    0x41f9c8
  41f980:	pop    edi
  41f981:	in     al,0x5e
  41f983:	hlt    
  41f984:	xlat   BYTE PTR ds:[ebx]
  41f985:	cmp    al,0x8a
  41f987:	cli    
  41f988:	sub    al,0x26
  41f98a:	mov    ebx,0x70d91276
  41f98f:	sbb    BYTE PTR [esi],ah
  41f991:	enter  0x378e,0x7a
  41f995:	jecxz  0x41f93c
  41f997:	bound  esi,QWORD PTR [edi-0x29]
  41f99a:	test   ah,0xe5
  41f99d:	pusha  
  41f99e:	mov    al,ds:0xf1391935
  41f9a3:	jp     0x41fa16
  41f9a5:	cmp    ch,cl
  41f9a7:	mov    bh,0x1f
  41f9a9:	mov    ebp,0x967927bc
  41f9ae:	sar    DWORD PTR [ebx+0x4],0x3e
  41f9b2:	fwait
  41f9b3:	sbb    bl,BYTE PTR [ebx-0x6f21246d]
  41f9b9:	inc    ebx
  41f9ba:	fidivr WORD PTR [ebx]
  41f9bc:	shr    DWORD PTR [ebp+0x42],0xba
  41f9c0:	inc    ebp
  41f9c1:	das    
  41f9c2:	pushf  
  41f9c3:	mov    edx,0xa6c06a8
  41f9c8:	push   edi
  41f9c9:	jecxz  0x41f978
  41f9cb:	sti    
  41f9cc:	xchg   ebp,eax
  41f9cd:	dec    ecx
  41f9ce:	or     DWORD PTR [edx+esi*8-0x2c1171ab],edx
  41f9d5:	rcr    DWORD PTR [ecx+0x49fd3a25],0x3f
  41f9dc:	cs std 
  41f9de:	(bad)  
  41f9df:	fcos   
  41f9e1:	mov    DWORD PTR [eax-0x358f7792],ebp
  41f9e7:	aad    0x33
  41f9e9:	sub    al,0xdf
  41f9eb:	jnp    0x41f98a
  41f9ed:	and    ch,BYTE PTR [ecx-0x538a2a82]
  41f9f3:	mov    eax,ds:0x4b57c788
  41f9f8:	nop
  41f9f9:	sub    DWORD PTR [edx+ebp*2-0x379c553e],eax
  41fa00:	jno    0x41f9bf
  41fa02:	xor    al,BYTE PTR [edi]
  41fa04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa05:	dec    edx
  41fa06:	stc    
  41fa07:	pusha  
  41fa08:	adc    eax,DWORD PTR [ebx]
  41fa0a:	shr    DWORD PTR [esi],1
  41fa0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa0d:	aad    0xf9
  41fa0f:	loopne 0x41fa4e
  41fa11:	or     eax,DWORD PTR ds:0x14a96e0
  41fa17:	mov    eax,ds:0xbd1438b5
  41fa1c:	adc    al,0x3f
  41fa1e:	add    DWORD PTR [eax-0x165b3a68],ebx
  41fa24:	or     dh,BYTE PTR [ecx]
  41fa26:	xor    DWORD PTR [edi],ebp
  41fa28:	pusha  
  41fa29:	(bad)  
  41fa2a:	mov    edi,0xb8d5051
  41fa2f:	push   es
  41fa30:	pop    esi
  41fa31:	stos   BYTE PTR es:[edi],al
  41fa32:	or     BYTE PTR [ebx-0x78],0xe1
  41fa36:	retf   0x457a
  41fa39:	cld    
  41fa3a:	mov    dl,0xd3
  41fa3c:	addr16 xchg ecx,eax
  41fa3e:	push   ebp
  41fa3f:	cmp    ah,BYTE PTR [esp+ecx*4+0x6049cbc0]
  41fa46:	jmp    0xc457:0x1375d895
  41fa4d:	retf   
  41fa4e:	test   al,0x88
  41fa50:	push   esi
  41fa51:	adc    cl,BYTE PTR [ebp+0x24c791b4]
  41fa57:	push   ebx
  41fa58:	jmp    FWORD PTR [eax-0x7ed32232]
  41fa5e:	mov    edi,0x57efc8e1
  41fa63:	retf   
  41fa64:	inc    ecx
  41fa65:	jno    0x41fa5b
  41fa67:	push   ecx
  41fa68:	pop    es
  41fa69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa6a:	js     0x41fa46
  41fa6c:	repz inc ebp
  41fa6e:	sub    ah,BYTE PTR [ebx]
  41fa70:	cmp    DWORD PTR [esi],edi
  41fa72:	push   sp
  41fa74:	int    0x3c
  41fa76:	adc    BYTE PTR [eax+edx*4-0x32],ch
  41fa7a:	push   esi
  41fa7b:	loopne 0x41fa03
  41fa7d:	xor    al,0x1a
  41fa7f:	cmp    eax,0xb8f91834
  41fa84:	iret   
  41fa85:	jg     0x41fa2a
  41fa87:	aas    
  41fa88:	mov    esi,0xef2d4c3
  41fa8d:	inc    esp
  41fa8e:	mov    dl,0x2f
  41fa90:	les    esi,FWORD PTR [esp+edi*4-0x1]
  41fa94:	and    ah,ch
  41fa96:	sbb    al,BYTE PTR [esp+esi*2-0x70]
  41fa9a:	sub    esp,eax
  41fa9c:	pop    ds
  41fa9d:	(bad)  
  41fa9e:	inc    edi
  41fa9f:	sti    
  41faa0:	xchg   ebx,eax
  41faa1:	fiadd  WORD PTR [ebp+0x5b8f261]
  41faa7:	sbb    DWORD PTR [eax+0x71],esp
  41faaa:	push   cs
  41faab:	iret   
  41faac:	cmp    eax,0xbe44cfe6
  41fab1:	push   ebp
  41fab2:	inc    ebx
  41fab3:	ss sub al,0xf2
  41fab6:	enter  0x19b9,0xb1
  41faba:	popa   
  41fabb:	ins    BYTE PTR es:[edi],dx
  41fabc:	push   0xffffffa6
  41fabe:	sub    BYTE PTR [esi],0x5e
  41fac1:	out    0xd9,al
  41fac3:	(bad)  
  41fac4:	xchg   DWORD PTR [esi],eax
  41fac6:	mov    esp,0x95825f3
  41facb:	cwde   
  41facc:	rcr    esp,1
  41face:	mov    bh,0x27
  41fad0:	mov    cl,0x5e
  41fad2:	ss cs pop edx
  41fad5:	sub    al,0x76
  41fad7:	or     al,0xfe
  41fad9:	outs   dx,DWORD PTR ds:[esi]
  41fada:	or     eax,DWORD PTR [ecx-0x39b32d09]
  41fae0:	repnz sbb al,0xce
  41fae3:	lods   al,BYTE PTR ds:[esi]
  41fae4:	ins    DWORD PTR es:[edi],dx
  41fae5:	dec    ebp
  41fae6:	pop    es
  41fae7:	or     eax,0xa8228a40
  41faec:	xchg   ebx,eax
  41faed:	test   BYTE PTR [ecx],0xa8
  41faf0:	pushf  
  41faf1:	pop    es
  41faf2:	into   
  41faf3:	pop    ss
  41faf4:	lds    eax,FWORD PTR [eax]
  41faf6:	lods   eax,DWORD PTR ds:[esi]
  41faf7:	sub    eax,0xa28b7624
  41fafc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fafd:	ficom  WORD PTR [esi]
  41faff:	and    al,0xfe
  41fb01:	int    0x4e
  41fb03:	dec    ecx
  41fb04:	lods   al,BYTE PTR ds:[esi]
  41fb05:	sub    eax,0x429b202
  41fb0a:	and    DWORD PTR [ebp+0x744f0a06],ebx
  41fb10:	pop    edi
  41fb11:	inc    ebp
  41fb12:	retf   
  41fb13:	pop    esi
  41fb14:	pop    ds
  41fb15:	adc    DWORD PTR [ecx-0x5011e4f],eax
  41fb1b:	dec    ebp
  41fb1c:	ins    BYTE PTR es:[edi],dx
  41fb1d:	and    al,0xf9
  41fb1f:	aas    
  41fb20:	and    DWORD PTR [edx-0x50],eax
  41fb23:	cmp    eax,0x48e52566
  41fb28:	xchg   DWORD PTR [edx+0x48],ecx
  41fb2b:	out    0x17,al
  41fb2d:	fimul  DWORD PTR [bp+si]
  41fb30:	jb     0x41fb49
  41fb32:	adc    bh,BYTE PTR [ebx-0x54]
  41fb35:	in     al,0xc9
  41fb37:	mov    eax,ds:0xd0517960
  41fb3c:	stc    
  41fb3d:	push   edi
  41fb3e:	cmp    eax,0x953cfedd
  41fb43:	call   0xd5ec6cf0
  41fb48:	xor    cl,ch
  41fb4a:	mov    esp,0x4b402cb4
  41fb4f:	lds    edx,FWORD PTR [esi-0x4f]
  41fb52:	sbb    DWORD PTR [ebx-0x4711d6ba],esi
  41fb58:	sti    
  41fb59:	inc    edx
  41fb5a:	leave  
  41fb5b:	cmc    
  41fb5c:	inc    esp
  41fb5d:	fadd   QWORD PTR [ebx]
  41fb5f:	dec    edx
  41fb60:	shl    DWORD PTR [edx+ebx*4],cl
  41fb63:	retf   0xa66c
  41fb66:	(bad)  
  41fb67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb68:	sub    al,0x5f
  41fb6a:	sub    cl,BYTE PTR [ebp+0x1f]
  41fb6d:	inc    edx
  41fb6e:	in     al,0xe8
  41fb70:	rcl    BYTE PTR ds:0x4d870a2,cl
  41fb76:	add    eax,0x840e63b8
  41fb7b:	push   0x17
  41fb7d:	loop   0x41fb40
  41fb7f:	jge    0x41fb72
  41fb81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb82:	stos   DWORD PTR es:[edi],eax
  41fb83:	mov    WORD PTR [ebx],ss
  41fb85:	outs   dx,BYTE PTR ds:[esi]
  41fb86:	xor    BYTE PTR [eax],bh
  41fb88:	fcom   DWORD PTR [esp+ecx*2-0x7f]
  41fb8c:	jl     0x41fb62
  41fb8e:	push   ebx
  41fb8f:	out    dx,al
  41fb90:	add    eax,0xaef652e
  41fb95:	add    eax,DWORD PTR [ecx+0x1c44c06c]
  41fb9b:	in     eax,dx
  41fb9c:	xchg   esi,eax
  41fb9d:	xor    eax,0x7cb3d017
  41fba2:	jecxz  0x41fb60
  41fba4:	or     DWORD PTR [edi-0xb],ebx
  41fba7:	xor    DWORD PTR ds:0xfe457775,esp
  41fbad:	(bad)  [edi-0x4fc3eac7]
  41fbb3:	cmp    eax,0xfbbd1832
  41fbb8:	jae    0x41fb99
  41fbba:	pop    fs
  41fbbc:	push   ss
  41fbbd:	or     eax,0xa6436ab4
  41fbc2:	jmp    0x41fba1
  41fbc4:	popa   
  41fbc5:	add    BYTE PTR [edi+0x79c6ce7],0x54
  41fbcc:	cld    
  41fbcd:	pop    esi
  41fbce:	xchg   ebx,eax
  41fbcf:	cmp    eax,0xc4088480
  41fbd4:	ins    DWORD PTR es:[edi],dx
  41fbd5:	inc    ebx
  41fbd6:	push   ss
  41fbd7:	outs   dx,BYTE PTR ds:[esi]
  41fbd8:	dec    ecx
  41fbd9:	iret   
  41fbda:	hlt    
  41fbdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbdc:	xor    eax,0x1608e9d6
  41fbe1:	ins    DWORD PTR es:[edi],dx
  41fbe2:	aaa    
  41fbe3:	xchg   esi,eax
  41fbe4:	out    0x32,eax
  41fbe6:	or     al,0x4
  41fbe8:	pop    esp
  41fbe9:	sub    esi,ebx
  41fbeb:	mov    ds:0x1a70e92c,al
  41fbf0:	sbb    al,0xb3
  41fbf2:	sbb    al,0x4e
  41fbf4:	cmp    DWORD PTR [esi+0x121fd2c],esp
  41fbfa:	adc    bl,BYTE PTR [edi]
  41fbfc:	(bad)  
  41fbfd:	mov    bh,0xb
  41fbff:	add    DWORD PTR [ecx],esp
  41fc01:	mov    bh,0x21
  41fc03:	inc    esp
  41fc04:	pop    es
  41fc05:	jle    0x41fbe5
  41fc07:	inc    edi
  41fc08:	lods   eax,DWORD PTR ds:[esi]
  41fc09:	aad    0xf1
  41fc0b:	mov    dh,0x4
  41fc0d:	ja     0x41fb97
  41fc0f:	icebp  
  41fc10:	pop    edx
  41fc11:	push   edx
  41fc12:	ins    DWORD PTR es:[edi],dx
  41fc13:	jp     0x41fc1d
  41fc15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc16:	cmp    esi,DWORD PTR ds:0xbc941845
  41fc1c:	mov    esp,0x3fc1a1
  41fc21:	imul   ebp,DWORD PTR [ebx-0x3a],0x12
  41fc25:	mov    al,ds:0x430efbc2
  41fc2a:	cmc    
  41fc2b:	not    DWORD PTR [edx+0x7e]
  41fc2e:	rcr    dl,cl
  41fc30:	push   edi
  41fc31:	mov    DWORD PTR [edx],esp
  41fc33:	inc    edx
  41fc34:	dec    ebp
  41fc35:	sbb    eax,0xec9dba7d
  41fc3a:	(bad)
  41fc3d:	mov    eax,ds:0xedd81491
  41fc42:	(bad)  [ebp-0x2dbaefa9]
  41fc48:	xor    ah,cl
  41fc4a:	pop    ds
  41fc4b:	dec    eax
  41fc4c:	add    eax,0xcbcfc04f
  41fc51:	and    BYTE PTR [edi],ch
  41fc53:	lods   eax,DWORD PTR ds:[esi]
  41fc54:	rol    edx,1
  41fc56:	adc    eax,0x136dbea3
  41fc5b:	(bad)  
  41fc5c:	cwde   
  41fc5d:	and    al,0xfc
  41fc5f:	sub    ebx,DWORD PTR [edx+0x1de96383]
  41fc65:	cdq    
  41fc66:	repz cdq 
  41fc68:	fsub   DWORD PTR [edi]
  41fc6a:	les    edx,FWORD PTR [esi]
  41fc6c:	or     eax,0xb947a3ee
  41fc71:	in     eax,dx
  41fc72:	test   eax,0xbb7ea326
  41fc77:	or     ah,bh
  41fc79:	push   cs
  41fc7a:	mov    bh,0x2c
  41fc7c:	add    BYTE PTR ds:0xb8b9120c,ch
  41fc82:	(bad)  
  41fc83:	cmp    ecx,DWORD PTR [edi+esi*4+0x726b0e21]
  41fc8a:	ud0    ecx,DWORD PTR ds:0xd1b2d9dd
  41fc91:	push   esi
  41fc92:	adc    ah,ah
  41fc94:	push   cs
  41fc95:	jbe    0x41fc4b
  41fc97:	mov    BYTE PTR [ecx+0xb],al
  41fc9a:	adc    BYTE PTR [edi+0x71a2450b],ch
  41fca0:	daa    
  41fca1:	das    
  41fca2:	push   ss
  41fca3:	jno    0x41fcb6
  41fca5:	fisubr DWORD PTR [ebx+0x5c1a20ca]
  41fcab:	xchg   esp,eax
  41fcac:	adc    DWORD PTR [ebx-0x21482f66],esp
  41fcb2:	imul   esp,DWORD PTR [edx-0x56],0xffffffa0
  41fcb6:	hlt    
  41fcb7:	and    edx,DWORD PTR [esp+eax*4-0x5a524ef0]
  41fcbe:	mov    bh,0xd
  41fcc0:	out    0x40,al
  41fcc2:	xor    ebp,eax
  41fcc4:	test   eax,0x822500e2
  41fcc9:	aad    0x9d
  41fccb:	inc    eax
  41fccc:	(bad)  
  41fccd:	push   ebp
  41fcce:	aam    0xe2
  41fcd0:	sub    al,0x25
  41fcd2:	and    BYTE PTR [esi+0x3947bf83],0x99
  41fcd9:	out    dx,al
  41fcda:	jmp    0x41fc9f
  41fcdc:	cmp    ebx,DWORD PTR [ebx+0xe]
  41fcdf:	mov    ch,0x3a
  41fce1:	fstp   QWORD PTR [eax+0xd]
  41fce4:	out    dx,eax
  41fce5:	pop    edi
  41fce6:	ret    0x49d7
  41fce9:	mov    esi,0x8f031e62
  41fcee:	js     0x41fd2f
  41fcf0:	fld    DWORD PTR [esi]
  41fcf2:	shr    cl,cl
  41fcf4:	ds shr ecx,1
  41fcf7:	pop    esi
  41fcf8:	sahf   
  41fcf9:	ds jl  0x41fcdf
  41fcfc:	ret    0x12d9
  41fcff:	out    dx,al
  41fd00:	mov    dl,0x29
  41fd02:	test   edx,ebp
  41fd04:	sub    al,0xdd
  41fd06:	test   eax,0x75ade55b
  41fd0b:	mov    dh,0x42
  41fd0d:	shl    DWORD PTR [ebp+0x2d],cl
  41fd10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd11:	gs clc 
  41fd13:	jo     0x41fcc4
  41fd15:	out    dx,al
  41fd16:	jb     0x41fcee
  41fd18:	aam    0x6d
  41fd1a:	ins    BYTE PTR es:[edi],dx
  41fd1b:	push   eax
  41fd1c:	push   esp
  41fd1d:	and    al,0x7
  41fd1f:	or     al,0x7d
  41fd21:	mov    BYTE PTR ds:0x841c39dc,bl
  41fd27:	or     BYTE PTR [edi+eiz*1-0x30aab2bd],ch
  41fd2e:	inc    edx
  41fd2f:	mov    bh,0xa9
  41fd31:	fst    QWORD PTR [eax]
  41fd33:	inc    ebp
  41fd34:	jmp    0x41fd74
  41fd36:	mov    ss,esp
  41fd38:	xor    al,bh
  41fd3a:	ds fwait
  41fd3c:	or     DWORD PTR [ebp+0x19098c12],esp
  41fd42:	call   0xd2d1:0x67e51d92
  41fd49:	xchg   edi,eax
  41fd4a:	aam    0xa2
  41fd4c:	lods   eax,DWORD PTR ds:[esi]
  41fd4d:	jle    0x41fcfa
  41fd4f:	and    DWORD PTR [ecx+0x64ee6efe],ebx
  41fd55:	jb     0x41fdc8
  41fd57:	popa   
  41fd58:	mov    eax,ds:0x845d880f
  41fd5d:	pop    esp
  41fd5e:	inc    ebp
  41fd5f:	mov    al,ds:0x86fda3a2
  41fd64:	sub    BYTE PTR [edx-0xa],cl
  41fd67:	and    bl,BYTE PTR ds:0xb4d45196
  41fd6d:	sbb    al,0x89
  41fd6f:	(bad)  ds:[ebp-0x4d]
  41fd73:	xor    BYTE PTR [eax-0x2d],dh
  41fd76:	out    dx,al
  41fd77:	sbb    eax,0x221deb8b
  41fd7c:	test   eax,0xcf8611ba
  41fd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd82:	lahf   
  41fd83:	jne    0x41fd8e
  41fd85:	mul    DWORD PTR [esi+ecx*8]
  41fd88:	adc    DWORD PTR [edi-0x3e388d1c],eax
  41fd8e:	stc    
  41fd8f:	pop    edi
  41fd90:	xor    edx,ecx
  41fd92:	sahf   
  41fd93:	and    BYTE PTR [bx+si-0x6c1e],0x8
  41fd99:	psrlq  mm3,QWORD PTR [ebp-0x33b06745]
  41fda0:	jecxz  0x41fdbc
  41fda2:	punpckhbw mm6,QWORD PTR [edi+0x6032f3d1]
  41fda9:	pop    esp
  41fdaa:	push   0x40
  41fdac:	jmp    0x3eab:0xdc498899
  41fdb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdb4:	or     eax,0xe050b3be
  41fdb9:	mov    DWORD PTR ds:[ecx+esi*2-0x3ddfa3fd],edi
  41fdc1:	and    eax,DWORD PTR [edx+eax*1-0x73875da9]
  41fdc8:	xor    edx,DWORD PTR [ebx+0x2c]
  41fdcb:	retf   
  41fdcc:	rcr    DWORD PTR [esi-0x5247ba41],cl
  41fdd2:	shl    DWORD PTR [ebp-0x37f8b078],0x82
  41fdd9:	cs sahf 
  41fddb:	jle    0x41fe50
  41fddd:	stos   DWORD PTR es:[edi],eax
  41fdde:	cwde   
  41fddf:	sub    esi,DWORD PTR [esp+eax*1-0x23]
  41fde3:	dec    ebx
  41fde4:	fdiv   QWORD PTR [ecx-0x7dc9a1a]
  41fdea:	jo     0x41fe52
  41fdec:	cld    
  41fded:	in     al,dx
  41fdee:	dec    DWORD PTR [ebp+0x40fbf469]
  41fdf4:	or     BYTE PTR [ebx-0x76],bl
  41fdf7:	pop    ds
  41fdf8:	(bad)  
  41fdf9:	mov    ecx,0x610129a7
  41fdfe:	not    ah
  41fe00:	add    ch,BYTE PTR [ecx+0x31]
  41fe03:	cwde   
  41fe04:	add    al,0x6a
  41fe06:	sahf   
  41fe07:	sbb    al,0x66
  41fe09:	pop    es
  41fe0a:	in     eax,0x34
  41fe0c:	xlat   BYTE PTR ds:[ebx]
  41fe0d:	add    DWORD PTR [ebp+0xa6b7cf4],edx
  41fe13:	pop    es
  41fe14:	jnp    0x41fdee
  41fe16:	sahf   
  41fe17:	(bad)  
  41fe18:	repz push edi
  41fe1a:	scas   eax,DWORD PTR es:[edi]
  41fe1b:	pop    eax
  41fe1c:	push   ebp
  41fe1d:	or     BYTE PTR [esi],ah
  41fe1f:	jp     0x41fe28
  41fe21:	mov    dh,0xab
  41fe23:	pop    ebp
  41fe24:	nop
  41fe25:	or     al,0xf6
  41fe27:	push   eax
  41fe28:	push   cs
  41fe29:	push   edx
  41fe2a:	mov    ds:0x2f9c67e9,eax
  41fe2f:	fnsave [eax+0x54]
  41fe32:	cwde   
  41fe33:	jecxz  0x41feaa
  41fe35:	pushf  
  41fe36:	fst    DWORD PTR [ebx+ebp*8+0x68a9e23c]
  41fe3d:	in     al,0x71
  41fe3f:	ins    DWORD PTR es:[edi],dx
  41fe40:	sbb    DWORD PTR gs:[ebx+0x6fde0533],edi
  41fe47:	lock jae 0x41fe87
  41fe4a:	jbe    0x41fe3b
  41fe4c:	fwait
  41fe4d:	aas    
  41fe4e:	cwde   
  41fe4f:	loopne 0x41fe6b
  41fe51:	xchg   BYTE PTR [ebp-0x911b9b5],dh
  41fe57:	xchg   ebx,eax
  41fe58:	pop    esi
  41fe59:	ret    
  41fe5a:	dec    ecx
  41fe5b:	sbb    esp,DWORD PTR [edx-0x3d]
  41fe5e:	mov    ds:0x88500ab4,eax
  41fe63:	test   esp,0xa48c89e8
  41fe69:	scas   eax,DWORD PTR es:[edi]
  41fe6a:	xchg   ebx,eax
  41fe6b:	inc    esp
  41fe6c:	mov    ch,0x5f
  41fe6e:	dec    edi
  41fe6f:	addr16 xor ebx,ebp
  41fe72:	mov    ebx,0xa60d872d
  41fe77:	lods   al,BYTE PTR ds:[esi]
  41fe78:	ss xor al,0xf6
  41fe7b:	(bad)  
  41fe7c:	in     eax,0xc7
  41fe7e:	repz setbe BYTE PTR ds:0xacfdfec0
  41fe86:	pop    ebp
  41fe87:	inc    esp
  41fe88:	xor    eax,0x7b83a205
  41fe8d:	adc    al,0x9a
  41fe8f:	call   0x4b57:0x82031fb4
  41fe96:	sub    DWORD PTR [edx-0x26],edx
  41fe99:	or     BYTE PTR [edx+0x20],ch
  41fe9c:	sub    DWORD PTR [edx*4+0x1a689efd],esp
  41fea3:	inc    esi
  41fea4:	data16 lods al,BYTE PTR ds:[esi]
  41fea6:	mov    al,ds:0xdcbc5316
  41feab:	ins    BYTE PTR es:[edi],dx
  41feac:	daa    
  41fead:	pop    eax
  41feae:	adc    eax,0x5a7d2510
  41feb3:	xor    DWORD PTR ds:0xa64967e3,ecx
  41feb9:	cmp    eax,0xb2de9299
  41febe:	sbb    al,0x5e
  41fec0:	add    BYTE PTR [edx-0x49bbdea9],ah
  41fec6:	push   ebp
  41fec7:	add    dh,BYTE PTR [edi+0x65]
  41feca:	jg     0x41ff00
  41fecc:	gs dec ebp
  41fece:	jge    0x41fe9a
  41fed0:	jmp    0x41fe6c
  41fed2:	stc    
  41fed3:	cmp    al,0xae
  41fed5:	in     eax,dx
  41fed6:	dec    esi
  41fed7:	xor    al,0x8f
  41fed9:	inc    esi
  41feda:	cmp    eax,0xf018c3ac
  41fedf:	jo     0x41fee1
  41fee1:	xchg   ecx,eax
  41fee2:	sub    BYTE PTR [edi],bh
  41fee4:	push   esp
  41fee5:	jp     0x41ff19
  41fee7:	(bad)  
  41fee8:	aam    0xb7
  41feea:	retf   0xfe8e
  41feed:	mov    eax,0xf7f1ec9f
  41fef2:	push   esp
  41fef3:	mov    ds:0x18d84766,eax
  41fef8:	xchg   edi,eax
  41fef9:	dec    esi
  41fefa:	rcr    DWORD PTR [ebx+0x2599ff24],0x22
  41ff01:	pushf  
  41ff02:	pop    edx
  41ff03:	inc    edi
  41ff04:	mov    bh,BYTE PTR [edi+0x43f21f5a]
  41ff0a:	mov    ch,0xa1
  41ff0c:	ss dec ebx
  41ff0e:	mov    bh,0xdf
  41ff10:	inc    edx
  41ff11:	mov    ds:0x1632d0f1,eax
  41ff16:	shr    BYTE PTR [eax+0x19],cl
  41ff19:	sbb    al,0x76
  41ff1b:	jmp    0x3ec9:0x2a68618f
  41ff22:	mov    ds:0x17f9aef9,al
  41ff27:	mov    al,ds:0x7d9cdcde
  41ff2c:	repz sub eax,0x34774c64
  41ff32:	(bad)  
  41ff34:	inc    ecx
  41ff35:	jmp    0x491a2d4b
  41ff3a:	aas    
  41ff3b:	mov    bh,0x9f
  41ff3d:	stos   DWORD PTR es:[edi],eax
  41ff3e:	adc    bl,ch
  41ff40:	int    0xdc
  41ff42:	xor    ah,BYTE PTR [edx+0x5fe4e30c]
  41ff48:	in     al,0xf2
  41ff4a:	rcl    BYTE PTR [ebx-0x5f],cl
  41ff4d:	cmc    
  41ff4e:	xchg   edx,eax
  41ff4f:	dec    esi
  41ff50:	int3   
  41ff51:	mov    BYTE PTR [esi+0x50418c61],dl
  41ff57:	ss inc ebp
  41ff59:	stos   BYTE PTR es:[edi],al
  41ff5a:	push   es
  41ff5b:	cmp    al,0x8
  41ff5d:	and    ah,BYTE PTR [edi-0x234373bf]
  41ff63:	outs   dx,BYTE PTR ds:[esi]
  41ff64:	jle    0x41ff17
  41ff66:	ins    BYTE PTR es:[edi],dx
  41ff67:	aas    
  41ff68:	les    esp,FWORD PTR [eax-0x6f]
  41ff6b:	bound  ebx,QWORD PTR [eax-0x6a6676ee]
  41ff71:	enter  0xb04a,0xc0
  41ff75:	cwde   
  41ff76:	mov    al,ds:0xcf74afe3
  41ff7b:	out    dx,eax
  41ff7c:	sub    al,0x1e
  41ff7e:	test   BYTE PTR [ebp-0x66],ch
  41ff81:	push   ss
  41ff82:	pushf  
  41ff83:	pop    eax
  41ff84:	aad    0xf7
  41ff86:	imul   ecx,DWORD PTR [ebx+edi*1+0x618680dc],0x580671
  41ff91:	adc    ebp,ecx
  41ff93:	mov    esp,0x4e0493f
  41ff98:	jno    0x41ff37
  41ff9a:	out    0x18,eax
  41ff9c:	lea    eax,[edi-0x62f94372]
  41ffa2:	xchg   DWORD PTR [edx],esp
  41ffa4:	(bad)
  41ffa8:	push   0x47
  41ffaa:	iret   
  41ffab:	adc    esp,DWORD PTR [eax]
  41ffad:	mov    ds:0xd11d7a5b,eax
  41ffb2:	imul   ecx,DWORD PTR [edi],0xa9a6dd95
  41ffb8:	adc    eax,0x51c9d547
  41ffbd:	mov    al,ds:0x49ac0b69
  41ffc2:	std    
  41ffc3:	std    
  41ffc4:	cdq    
  41ffc5:	pop    ebp
  41ffc6:	bound  edi,QWORD PTR [edi]
  41ffc8:	and    BYTE PTR [esi],0x57
  41ffcb:	mov    ah,0xef
  41ffcd:	inc    esp
  41ffce:	mov    dh,0xb4
  41ffd0:	push   edi
  41ffd1:	test   al,0xe3
  41ffd3:	cmp    dh,ch
  41ffd5:	fsub   st(5),st
  41ffd7:	stos   BYTE PTR es:[edi],al
  41ffd8:	sub    dh,ch
  41ffda:	out    0xd3,al
  41ffdc:	or     ah,0x1
  41ffdf:	lock push 0xffffffc8
  41ffe2:	adc    bh,dl
  41ffe4:	sbb    bh,BYTE PTR [esi+0x4ec30ccf]
  41ffea:	ins    DWORD PTR es:[edi],dx
  41ffeb:	daa    
  41ffec:	loopne 0x420009
  41ffee:	push   es
  41ffef:	xchg   edi,eax
  41fff0:	mov    bl,0x54
  41fff2:	out    0x52,al
  41fff4:	add    ah,dl
  41fff6:	adc    dh,BYTE PTR [edx]
  41fff8:	jo     0x42003a
  41fffa:	sub    eax,0x5a08101d
  41ffff:	mov    bl,BYTE PTR [ecx+0x36450d9b]
  420005:	test   DWORD PTR ds:0xfd80b319,esi
  42000b:	sbb    cl,BYTE PTR [edx]
  42000d:	push   ss
  42000e:	aas    
  42000f:	lock fs mov ?,WORD PTR ds:[esi+ebx*2-0xda2808]
  420019:	jmp    0x420012
  42001b:	push   edx
  42001c:	mov    al,0x7a
  42001e:	pop    ss
  42001f:	jg     0x42002b
  420021:	popa   
  420022:	(bad)  
  420023:	xor    eax,0x66772227
  420028:	dec    edi
  420029:	dec    ecx
  42002a:	sar    edx,0x17
  42002d:	aad    0xe6
  42002f:	retf   
  420030:	aad    0x68
  420032:	jmp    0xa5b5:0xf5abe600
  420039:	nop
  42003a:	cwde   
  42003b:	jge    0x420058
  42003d:	js     0x41ffe7
  42003f:	push   edi
  420040:	or     edx,ebp
  420042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420043:	jl     0x41ffd3
  420045:	dec    edi
  420046:	jmp    0x12bc:0x8cff7ec1
  42004d:	les    eax,FWORD PTR [ebx+ecx*8-0x331b852d]
  420054:	xchg   esp,eax
  420055:	test   dl,0xa8
  420058:	xor    bl,BYTE PTR [ecx-0x9]
  42005b:	mov    ebp,0x9f64db0b
  420060:	and    DWORD PTR [ebx],ecx
  420062:	or     DWORD PTR [ecx-0x12],esp
  420065:	push   edi
  420066:	ins    DWORD PTR es:[edi],dx
  420067:	dec    edx
  420068:	dec    edi
  420069:	pop    esp
  42006a:	cmp    DWORD PTR [ecx+ebp*8+0x7f497675],ebx
  420071:	sub    ch,0xce
  420074:	loop   0x420097
  420076:	sbb    esp,ebp
  420078:	fwait
  420079:	mov    ecx,DWORD PTR [ecx+0x765116a6]
  42007f:	cmp    dl,al
  420081:	xor    eax,0x7417fa66
  420086:	das    
  420087:	mov    dl,0x28
  420089:	retf   
  42008a:	adc    bl,bl
  42008c:	popfw  
  42008e:	push   ss
  42008f:	mov    dl,0x4e
  420091:	cmp    eax,0xf164c65e
  420096:	dec    edi
  420097:	pop    ecx
  420098:	adc    eax,0xcd138b60
  42009d:	in     eax,0x17
  42009f:	pop    edx
  4200a0:	xchg   ebp,eax
  4200a1:	lahf   
  4200a2:	rcl    BYTE PTR [eax],1
  4200a4:	aam    0x0
  4200a6:	fwait
  4200a7:	shl    ch,1
  4200a9:	add    eax,0xeacb4bf9
  4200ae:	jg     0x4200e1
  4200b0:	xchg   ecx,eax
  4200b1:	inc    edx
  4200b2:	mov    WORD PTR fs:[ecx-0x374f7d12],es
  4200b9:	push   esi
  4200ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200bb:	out    dx,al
  4200bc:	dec    edx
  4200bd:	shl    BYTE PTR [esp],0x1f
  4200c1:	cmp    edx,DWORD PTR [eax+0x1a]
  4200c4:	inc    ebp
  4200c5:	aad    0xc2
  4200c7:	cdq    
  4200c8:	jb     0x420056
  4200ca:	push   es
  4200cb:	xchg   ebx,eax
  4200cc:	push   ds
  4200cd:	data16 aaa 
  4200cf:	add    al,0x17
  4200d1:	(bad)  
  4200d2:	jmp    0xa573837c
  4200d7:	test   DWORD PTR [ecx-0x68],edx
  4200da:	mov    bh,0x3f
  4200dc:	mov    ebx,0x34c4c436
  4200e1:	lock out dx,al
  4200e3:	xchg   ebx,eax
  4200e4:	and    eax,0xa4be93e9
  4200e9:	cmp    eax,0x47
  4200ec:	pop    esi
  4200ed:	pop    es
  4200ee:	push   esi
  4200ef:	mov    ch,0x90
  4200f1:	xor    DWORD PTR [esi-0x1937596e],ebp
  4200f7:	test   al,0x95
  4200f9:	sbb    dh,BYTE PTR [edx-0x31b009dd]
  4200ff:	mov    ebx,0x905d46e0
  420104:	lods   eax,DWORD PTR ds:[esi]
  420105:	add    BYTE PTR [ecx-0x7c],bh
  420108:	jns    0x42014e
  42010a:	and    ch,BYTE PTR [ecx-0x2a]
  42010d:	xchg   DWORD PTR [eax],ecx
  42010f:	out    0x9a,eax
  420111:	pop    esp
  420112:	and    esp,ecx
  420114:	push   edi
  420115:	xlat   BYTE PTR ds:[ebx]
  420116:	jle    0x4200b8
  420118:	adc    ebx,esp
  42011a:	aam    0x5c
  42011c:	and    eax,0x5e5c5f81
  420121:	iret   
  420122:	shl    BYTE PTR [edx-0x2edd9a14],1
  420128:	jg     0x4200f1
  42012a:	scas   eax,DWORD PTR es:[edi]
  42012b:	add    ebx,DWORD PTR [ecx+0x4521205a]
  420131:	or     DWORD PTR [eax],edx
  420133:	shr    DWORD PTR [ebx+0x6d4d115d],0x3a
  42013a:	pop    edx
  42013b:	adc    eax,0xc3247309
  420140:	cmovns ecx,ebx
  420143:	mov    ebx,0x354fb8c9
  420148:	call   0x3c2faf91
  42014d:	test   BYTE PTR [eax-0x15690ad2],bh
  420153:	mov    dh,0xb7
  420155:	pop    edx
  420156:	cmp    DWORD PTR [edi-0x1f4904d5],eax
  42015c:	psrlq  mm2,QWORD PTR [eax]
  42015f:	jb     0x42017f
  420161:	push   ebx
  420162:	clc    
  420163:	les    eax,FWORD PTR [esp+eiz*2]
  420166:	add    eax,0x9537f695
  42016b:	cdq    
  42016c:	lods   eax,DWORD PTR ds:[esi]
  42016d:	idiv   DWORD PTR [ecx-0x22797b3f]
  420173:	xor    dl,BYTE PTR [edx+0x6b671fd4]
  420179:	cwde   
  42017a:	xchg   cl,cl
  42017c:	mov    dl,0xd8
  42017e:	sub    al,0xac
  420180:	test   al,0xa9
  420182:	fild   WORD PTR [esi+0x7f]
  420185:	(bad)  
  420186:	sub    eax,0x3de1540d
  42018b:	mov    dh,0xd2
  42018d:	push   ebp
  42018e:	add    eax,0x3d56f987
  420193:	jae    0x4201ee
  420195:	xor    eax,0x986358f6
  42019a:	cmp    DWORD PTR [ecx+0x4f],esp
  42019d:	dec    edi
  42019e:	mov    esi,0xa3803043
  4201a3:	sahf   
  4201a4:	(bad)  
  4201a5:	pop    ebx
  4201a6:	test   eax,0x1ad93fe
  4201ab:	lds    ecx,FWORD PTR [esp+ecx*8-0x73286598]
  4201b2:	dec    eax
  4201b3:	stos   BYTE PTR es:[edi],al
  4201b4:	sbb    ebx,DWORD PTR [edi+esi*4]
  4201b7:	adc    eax,0xbfb9791c
  4201bc:	dec    esi
  4201bd:	cld    
  4201be:	sub    cl,BYTE PTR [ecx+ebp*2-0x11]
  4201c2:	xchg   edx,eax
  4201c3:	mov    al,0xdf
  4201c5:	in     al,0xe
  4201c7:	mov    al,ds:0x9ed63323
  4201cc:	call   0x664e:0xb5a1c83e
  4201d3:	sbb    al,BYTE PTR [ebp+0x4f33e8c0]
  4201d9:	push   esi
  4201da:	add    cl,al
  4201dc:	jmp    0xabc71a25
  4201e1:	adc    al,0x35
  4201e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201e4:	xchg   esi,eax
  4201e5:	int    0xd9
  4201e7:	push   eax
  4201e8:	or     DWORD PTR [edx+0x4e04bbdd],edx
  4201ee:	nop
  4201ef:	mov    ebp,0xdb05ecb7
  4201f4:	sub    ebp,esp
  4201f6:	push   0xab789ba2
  4201fb:	lods   eax,DWORD PTR ds:[esi]
  4201fc:	add    DWORD PTR [eax],ebx
  4201fe:	outs   dx,BYTE PTR ds:[esi]
  4201ff:	fisttp DWORD PTR [eax+0x25fa47db]
  420205:	rcr    DWORD PTR [eax+0x443350c0],1
  42020b:	mov    bl,0x5b
  42020d:	addr16 sub al,0xd9
  420210:	xchg   ebx,eax
  420211:	jno    0x420262
  420213:	xor    al,0x33
  420215:	mov    eax,ds:0xe9c37fda
  42021a:	adc    eax,0xaed99d50
  42021f:	in     eax,0xb4
  420221:	std    
  420222:	imul   esp,DWORD PTR [eax],0x124b2474
  420228:	dec    esp
  420229:	fidiv  WORD PTR [esi+0x4231fdef]
  42022f:	jmp    0xe8c9c19e
  420234:	loopne 0x4201c0
  420236:	ins    BYTE PTR es:[edi],dx
  420237:	icebp  
  420238:	xchg   esi,eax
  420239:	adc    eax,0x30832737
  42023e:	adc    ah,BYTE PTR [edi]
  420240:	scas   al,BYTE PTR es:[edi]
  420241:	aad    0xb2
  420243:	fbld   TBYTE PTR [edi]
  420245:	add    al,0x50
  420247:	test   eax,0x6ca2a122
  42024c:	ret    0x8f1f
  42024f:	or     eax,0xda994c20
  420254:	test   al,0xb6
  420256:	dec    ebx
  420257:	lds    eax,FWORD PTR [ebp-0x13a53e00]
  42025d:	xor    DWORD PTR [esi],0x9738d06f
  420263:	mov    ds,WORD PTR [edi+0x6c]
  420266:	pop    eax
  420267:	outs   dx,BYTE PTR ds:[esi]
  420268:	push   ecx
  420269:	in     eax,dx
  42026a:	repz cwde 
  42026c:	xor    ch,al
  42026e:	adc    bl,BYTE PTR ds:0xbe0d5cb7
  420274:	adc    al,0xe9
  420276:	push   0xdde5540e
  42027b:	inc    esi
  42027c:	icebp  
  42027d:	sbb    ecx,DWORD PTR [eax+0x35]
  420280:	pop    ecx
  420281:	mov    dh,0x30
  420283:	pop    ebx
  420284:	loopne 0x420214
  420286:	jp     0x4202c5
  420288:	lods   al,BYTE PTR ds:[esi]
  420289:	mov    ch,0x7a
  42028b:	cdq    
  42028c:	cs push edx
  42028e:	cmp    eax,ebx
  420290:	aaa    
  420291:	popa   
  420292:	fnstcw WORD PTR [eax]
  420294:	xchg   DWORD PTR [ecx+0x1a],eax
  420297:	jge    0x420265
  420299:	test   eax,0x686f533d
  42029e:	popf   
  42029f:	or     cl,BYTE PTR [ebp+edi*1+0x7a]
  4202a3:	cli    
  4202a4:	ins    BYTE PTR es:[edi],dx
  4202a5:	(bad)  
  4202a6:	in     al,0x30
  4202a8:	shr    DWORD PTR [eax],cl
  4202aa:	mov    bl,0x19
  4202ac:	ror    DWORD PTR [edx+0x207e6e51],1
  4202b2:	push   cs
  4202b3:	push   esp
  4202b4:	or     DWORD PTR [eax-0x298b6485],esp
  4202ba:	fucomp st(5)
  4202bc:	push   ds
  4202bd:	jg     0x420249
  4202bf:	jb     0x4202cc
  4202c1:	into   
  4202c2:	das    
  4202c3:	push   esi
  4202c4:	(bad)  
  4202c5:	test   al,0x18
  4202c7:	jl     0x42030a
  4202c9:	add    BYTE PTR es:[edi+0x3e],0xb
  4202ce:	push   0xffffff94
  4202d0:	icebp  
  4202d1:	sub    dh,BYTE PTR [eax]
  4202d3:	mov    eax,ds:0x51fd5ba7
  4202d8:	dec    ecx
  4202d9:	jmp    FWORD PTR [ebp-0x1682bb8c]
  4202df:	popf   
  4202e0:	aas    
  4202e1:	dec    edi
  4202e2:	stos   BYTE PTR es:[edi],al
  4202e3:	xchg   ecx,eax
  4202e4:	adc    DWORD PTR [edi+0x68],0x35172c24
  4202eb:	jl     0x420296
  4202ed:	lock retf 0x6938
  4202f1:	scas   al,BYTE PTR es:[edi]
  4202f2:	arpl   bx,ax
  4202f4:	fs (bad) 
  4202f6:	pusha  
  4202f7:	jo     0x4202e0
  4202f9:	fld    QWORD PTR [ebx-0xb]
  4202fc:	cmc    
  4202fd:	dec    eax
  4202fe:	jmp    0x4605:0xe72ec07f
  420305:	(bad)  
  420306:	rol    dl,0xa4
  420309:	push   esp
  42030a:	rcl    DWORD PTR [ebx-0x6c],1
  42030d:	sbb    ebx,DWORD PTR [ecx-0x1d1ab1f0]
  420313:	jg     0x4202ef
  420315:	sub    al,0x36
  420317:	nop
  420318:	mov    eax,ds:0xc6153f07
  42031d:	cmp    dh,bh
  42031f:	mov    ds,WORD PTR [edx+0x702ad0ae]
  420325:	mov    dl,0xe0
  420327:	fnstcw WORD PTR [edi]
  420329:	jmp    0xcf5b9b6d
  42032e:	out    dx,al
  42032f:	icebp  
  420330:	clc    
  420331:	ss inc edx
  420333:	mov    eax,0x6fa8f42b
  420338:	xchg   DWORD PTR [esi-0x7a],ebp
  42033b:	mov    ecx,DWORD PTR [eax]
  42033d:	and    eax,0xd1b08eff
  420342:	add    ecx,DWORD PTR [ebx+ebp*2-0x158c885f]
  420349:	dec    eax
  42034a:	loopne 0x4202f3
  42034c:	and    esp,DWORD PTR [ebx+0x5905fe01]
  420352:	mov    ds:0x493f5a7f,eax
  420357:	icebp  
  420358:	sbb    BYTE PTR [edi-0x1d],ah
  42035b:	daa    
  42035c:	fistp  QWORD PTR [edi]
  42035e:	pop    ecx
  42035f:	push   eax
  420360:	inc    edi
  420361:	cwde   
  420362:	dec    esi
  420363:	add    edi,ecx
  420365:	jne    0xecaf5b39
  42036b:	ins    BYTE PTR es:[edi],dx
  42036c:	xor    al,0xff
  42036e:	add    BYTE PTR [esi-0x9],bl
  420371:	pop    ebp
  420372:	fcmovne st,st(3)
  420374:	add    edi,DWORD PTR [edx]
  420376:	cwde   
  420377:	cmp    eax,0x52b2a273
  42037c:	cmp    edi,DWORD PTR [edx+0xcd6e44f]
  420382:	pop    es
  420383:	mov    cl,dh
  420385:	sti    
  420386:	(bad)  
  420387:	adc    ah,cl
  420389:	adc    dl,0x80
  42038c:	popf   
  42038d:	rcl    BYTE PTR [eax],cl
  42038f:	icebp  
  420390:	dec    esp
  420391:	inc    ebx
  420392:	xchg   ebp,eax
  420393:	idiv   edx
  420395:	xor    DWORD PTR [ebp+0x19594bc6],edx
  42039b:	stos   DWORD PTR es:[edi],eax
  42039c:	mov    esi,0xbf32e115
  4203a1:	fsub   QWORD PTR [eax+0x2a8d0370]
  4203a7:	xor    al,0xf8
  4203a9:	outs   dx,DWORD PTR ds:[esi]
  4203aa:	lods   al,BYTE PTR ds:[esi]
  4203ab:	dec    edx
  4203ac:	(bad)  
  4203ad:	dec    esp
  4203ae:	iret   
  4203af:	jae    0x42038f
  4203b1:	sbb    esi,DWORD PTR [edx-0x1a]
  4203b4:	pop    edi
  4203b5:	xchg   ebp,eax
  4203b6:	cmc    
  4203b7:	ret    
  4203b8:	mov    al,ds:0xa14dbb87
  4203bd:	mov    al,0xb0
  4203bf:	add    al,0x3c
  4203c1:	aad    0x54
  4203c3:	push   es
  4203c4:	(bad)  
  4203c5:	into   
  4203c6:	out    0xf8,al
  4203c8:	mov    ah,0xf1
  4203ca:	push   esi
  4203cb:	das    
  4203cc:	sub    dl,dh
  4203ce:	scas   al,BYTE PTR es:[edi]
  4203cf:	(bad)  
  4203d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203d2:	jne    0x420394
  4203d4:	jecxz  0x42042d
  4203d6:	inc    ebp
  4203d7:	xlat   BYTE PTR ds:[ebx]
  4203d8:	or     edi,ebx
  4203da:	fwait
  4203db:	(bad)  
  4203dc:	cld    
  4203dd:	sub    edi,DWORD PTR [ecx+0x66]
  4203e0:	sbb    DWORD PTR [eax],eax
  4203e2:	test   al,0x9
  4203e4:	gs xchg edx,eax
  4203e6:	repz and DWORD PTR [edx-0x4dc30b24],ebx
  4203ed:	int    0xb
  4203ef:	or     ebp,DWORD PTR ds:0x333b6cc
  4203f5:	xor    BYTE PTR [edi+0x62162341],bl
  4203fb:	repnz pop ss
  4203fd:	jmp    0x4203a8
  4203ff:	das    
  420400:	sbb    dl,BYTE PTR [ebx]
  420402:	mov    esp,0x70f7b8e
  420407:	mov    esp,0xbae73eb1
  42040c:	xlat   BYTE PTR ds:[ebx]
  42040d:	mov    ebp,0x9fa7cb56
  420412:	pop    ebx
  420413:	pop    ebp
  420414:	cld    
  420415:	xchg   edi,eax
  420416:	sbb    bl,BYTE PTR [ebp+0x72902c2a]
  42041c:	fsubrp st(2),st
  42041e:	gs jecxz 0x42046b
  420421:	in     eax,dx
  420422:	nop
  420423:	outs   dx,BYTE PTR ds:[esi]
  420424:	push   edi
  420425:	cmp    al,0xf2
  420427:	jo     0x420489
  420429:	(bad)  
  42042a:	fcmovu st,st(7)
  42042c:	mov    ah,0x8
  42042e:	lock aam 0x44
  420431:	call   0xc8d2:0xf4f8b708
  420438:	outs   dx,BYTE PTR ds:[esi]
  420439:	cwde   
  42043a:	adc    BYTE PTR [eax-0x52082233],bh
  420440:	push   0xfb02ac50
  420445:	popf   
  420446:	cdq    
  420447:	and    eax,0x2fa91b27
  42044c:	gs inc edi
  42044e:	pop    edi
  42044f:	lock adc edx,DWORD PTR ds:[edx-0x5d0ca73e]
  420457:	mov    cs,WORD PTR [ebp+ebx*2-0x6d]
  42045b:	add    eax,0x184dafb1
  420460:	inc    edx
  420461:	je     0x4204cb
  420463:	adc    BYTE PTR [ebx-0x4f31954d],0xc0
  42046a:	hlt    
  42046b:	test   al,0x65
  42046d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42046e:	inc    eax
  42046f:	xor    DWORD PTR [eax+0x14d3400a],esi
  420475:	inc    eax
  420476:	cmp    bh,0xa5
  420479:	cmp    dl,dl
  42047b:	dec    edx
  42047c:	add    BYTE PTR [eax-0x2],dl
  42047f:	pop    ds
  420480:	inc    esp
  420481:	leave  
  420482:	jns    0x420454
  420484:	mov    al,ds:0x9a788793
  420489:	inc    esi
  42048a:	jmp    0x30a2e2a
  42048f:	lods   eax,DWORD PTR ds:[esi]
  420490:	cmp    edx,0xffffffb0
  420493:	or     ch,ah
  420495:	enter  0x29c,0xca
  420499:	sbb    BYTE PTR [esi+0x4907cfbd],bl
  42049f:	ja     0x420439
  4204a1:	aaa    
  4204a2:	pop    edi
  4204a3:	retf   
  4204a4:	push   edi
  4204a5:	cdq    
  4204a6:	rcl    al,cl
  4204a8:	dec    ebp
  4204a9:	jmp    0x420529
  4204ab:	and    eax,0x175ff796
  4204b0:	test   DWORD PTR [ebp+0x49],ebp
  4204b3:	test   eax,0x37901301
  4204b8:	fdivr  DWORD PTR [eax+0x7a878b0f]
  4204be:	add    eax,0xe4b40229
  4204c3:	retf   
  4204c4:	jecxz  0x42050e
  4204c6:	cmp    ah,BYTE PTR [ecx]
  4204c8:	dec    ecx
  4204c9:	std    
  4204ca:	mov    al,dl
  4204cc:	pop    edx
  4204cd:	pop    edi
  4204ce:	call   0xcd8fc378
  4204d3:	add    ecx,esp
  4204d5:	das    
  4204d6:	ret    0x4a44
  4204d9:	sub    al,BYTE PTR [edi-0x4ecd7ea9]
  4204df:	mov    eax,ds:0x67661d46
  4204e4:	xchg   DWORD PTR [ecx+0x48],ecx
  4204e7:	dec    ebp
  4204e8:	xchg   ebx,ebp
  4204ea:	pop    eax
  4204eb:	cli    
  4204ec:	dec    esi
  4204ed:	test   BYTE PTR [eax-0x57],dh
  4204f0:	aad    0x72
  4204f2:	xor    dl,bh
  4204f4:	aad    0x89
  4204f6:	cwde   
  4204f7:	push   cs
  4204f8:	shr    eax,cl
  4204fa:	stc    
  4204fb:	adc    BYTE PTR [ecx-0x2788d8d],ch
  420501:	mov    WORD PTR [ecx+0x6e24c750],ss
  420507:	test   eax,0xf7f3b2da
  42050c:	stc    
  42050d:	jae    0x420563
  42050f:	ss jns 0x42052b
  420512:	ds mov al,0xce
  420515:	stos   DWORD PTR es:[edi],eax
  420516:	jo     0x420578
  420518:	cmp    eax,0x4e09fc1b
  42051d:	ret    0x3663
  420520:	add    bl,cl
  420522:	sub    dl,BYTE PTR [edi+0x56]
  420525:	adc    al,0x87
  420527:	push   ss
  420528:	ret    0x4cc5
  42052b:	bound  esp,QWORD PTR [edi]
  42052d:	mov    eax,0x9e302eb4
  420532:	int    0xb
  420534:	cmp    dl,BYTE PTR [ecx+eiz*2+0x40]
  420538:	popf   
  420539:	sbb    ch,BYTE PTR [ecx]
  42053b:	jmp    0x9fa2:0xebcc3481
  420542:	call   0x1daf6ecd
  420547:	loope  0x420585
  420549:	(bad)  
  42054a:	ds jl  0x420511
  42054d:	inc    ecx
  42054e:	arpl   WORD PTR [ecx+0x3f950731],bp
  420554:	icebp  
  420555:	fcom   QWORD PTR [ecx-0x21]
  420558:	sbb    ebx,edi
  42055a:	sysexit 
  42055c:	ret    0x68de
  42055f:	nop
  420560:	scas   eax,DWORD PTR es:[di]
  420562:	mov    edi,0xb49bbec0
  420567:	lahf   
  420568:	add    BYTE PTR [eax],dl
  42056a:	fwait
  42056b:	std    
  42056c:	xor    al,0xf2
  42056e:	ror    BYTE PTR [eax+ebx*4],0x58
  420572:	lock fcmovnbe st,st(4)
  420575:	mov    ah,0x84
  420577:	js     0x42053b
  420579:	scas   al,BYTE PTR es:[edi]
  42057a:	sub    DWORD PTR [ebx],esp
  42057c:	push   ebx
  42057d:	or     al,0xa2
  42057f:	dec    edx
  420580:	shl    DWORD PTR [ecx],0xa6
  420583:	and    esi,DWORD PTR [edx-0x12f50659]
  420589:	out    0x61,al
  42058b:	sbb    BYTE PTR [ebx+ecx*4+0x47b2f99f],ah
  420592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420593:	dec    eax
  420594:	repnz add edx,esp
  420597:	pop    ebp
  420598:	mov    esp,0xfe164a2a
  42059d:	pop    esp
  42059e:	push   cs
  42059f:	pop    edx
  4205a0:	loop   0x420598
  4205a2:	pop    eax
  4205a3:	and    eax,DWORD PTR [edx]
  4205a5:	aaa    
  4205a6:	idiv   DWORD PTR [eax]
  4205a8:	(bad)  
  4205aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205ab:	jmp    esi
  4205ad:	arpl   WORD PTR cs:[ecx+ebp*1-0x31741b04],di
  4205b5:	cmp    al,0xed
  4205b7:	sbb    BYTE PTR [edx-0x50],ch
  4205ba:	jp     0x4205cb
  4205bc:	fild   DWORD PTR [ebx-0x5b]
  4205bf:	push   ecx
  4205c0:	push   ebp
  4205c1:	pop    ss
  4205c2:	(bad)  
  4205c4:	leave  
  4205c5:	(bad)  
  4205c6:	mov    BYTE PTR [ebx],ch
  4205c8:	add    eax,0xe3a5aff9
  4205cd:	pop    es
  4205ce:	jmp    0xf134:0xdf5fa3e7
  4205d5:	pop    es
  4205d6:	pop    edi
  4205d7:	cdq    
  4205d8:	lahf   
  4205d9:	cmp    DWORD PTR [edi],edx
  4205db:	adc    esp,esi
  4205dd:	or     al,0x4d
  4205df:	jmp    0x9c0bd3d7
  4205e4:	and    DWORD PTR [esi+0x7],edx
  4205e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205e8:	clc    
  4205e9:	imul   edx,ebp,0x2266479f
  4205ef:	enter  0x22f6,0xa5
  4205f3:	sub    BYTE PTR [ebp-0x5c683ebf],dh
  4205f9:	cli    
  4205fa:	sar    DWORD PTR [eax],1
  4205fc:	or     edi,DWORD PTR [ebp+0x6a]
  4205ff:	mov    dl,BYTE PTR [esi+ebp*1+0x2c5cc60a]
  420606:	cld    
  420607:	push   ds
  420608:	fisttp QWORD PTR [esi+edi*2+0x146b521c]
  42060f:	sub    bh,BYTE PTR [ecx+0x4e640b56]
  420615:	push   ecx
  420616:	cmp    BYTE PTR [edx],bh
  420618:	(bad)  
  420619:	out    0xc9,al
  42061b:	in     eax,dx
  42061c:	dec    esi
  42061d:	adc    esi,DWORD PTR [edi+0x118f2518]
  420623:	in     eax,dx
  420624:	fidiv  WORD PTR [ebx-0xc]
  420627:	sbb    eax,0xf4d71f28
  42062c:	mov    dh,0x61
  42062e:	push   esp
  42062f:	out    dx,eax
  420630:	hlt    
  420631:	fcomp  DWORD PTR [ebx]
  420633:	pop    ds
  420634:	lods   eax,DWORD PTR ds:[esi]
  420635:	imul   esp,DWORD PTR [eax],0x2b
  420638:	cmp    bh,BYTE PTR [edi-0x4e27a183]
  42063e:	out    0xd2,eax
  420640:	out    dx,eax
  420641:	ins    BYTE PTR es:[edi],dx
  420642:	push   ecx
  420643:	ss les esp,FWORD PTR fs:[esi+ebp*1-0x7fc949ac]
  42064c:	fstp   QWORD PTR [edx-0x55bd33f0]
  420652:	lds    eax,FWORD PTR ds:0x5b5cef37
  420658:	out    dx,al
  420659:	not    BYTE PTR [ebx]
  42065b:	and    al,0x3d
  42065d:	jo     0x4205ff
  42065f:	inc    ebp
  420660:	xor    BYTE PTR [edi+ecx*4+0x3804312a],bl
  420667:	sti    
  420668:	xchg   cl,ah
  42066a:	mov    dh,0x11
  42066c:	retf   0x400b
  42066f:	fidiv  WORD PTR [ebx-0x8]
  420672:	pop    es
  420673:	hlt    
  420674:	call   0xcb88:0x1e705223
  42067b:	fisttp WORD PTR [eax+ecx*1]
  42067e:	pop    si
  420680:	xchg   ebp,eax
  420681:	jmp    0x5855:0x9029157d
  420688:	outs   dx,BYTE PTR ds:[esi]
  420689:	sbb    BYTE PTR [ebp-0x7b],ah
  42068c:	mov    eax,ds:0xbd067e41
  420692:	inc    ebx
  420693:	into   
  420694:	ins    BYTE PTR es:[edi],dx
  420695:	mov    esp,0x1eaee948
  42069a:	in     al,dx
  42069b:	ror    DWORD PTR [edi],1
  42069d:	arpl   WORD PTR [ebp+ebp*8+0x40c06f87],ax
  4206a4:	sbb    ah,BYTE PTR [edi-0x75c81f9b]
  4206aa:	and    eax,0xd3738bb4
  4206af:	mov    edi,0xec0a7fdd
  4206b4:	pusha  
  4206b5:	into   
  4206b6:	daa    
  4206b7:	pop    esi
  4206b8:	cmp    al,0x8
  4206ba:	inc    ebx
  4206bb:	(bad)  
  4206bd:	hlt    
  4206be:	neg    DWORD PTR [edi-0x3b]
  4206c1:	jp     0x4206a9
  4206c3:	cmc    
  4206c4:	jne    0x420722
  4206c6:	leave  
  4206c7:	jae    0x4206d2
  4206c9:	or     al,0xe7
  4206cb:	push   cs
  4206cc:	aas    
  4206cd:	sbb    eax,0xbc714e09
  4206d2:	mov    dh,0xb0
  4206d4:	jns    0x42067c
  4206d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206d7:	mov    edi,0x48d4056f
  4206dc:	aam    0x28
  4206de:	das    
  4206df:	jne    0x4206aa
  4206e1:	ret    0x79a2
  4206e4:	clc    
  4206e5:	add    al,0x46
  4206e7:	loope  0x4206bc
  4206e9:	mov    ebp,0xbbe41aa5
  4206ee:	add    eax,0x92ada7cb
  4206f3:	inc    ebp
  4206f4:	aam    0xe
  4206f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206f8:	dec    ebx
  4206f9:	sbb    eax,0xbc202286
  4206fe:	adc    BYTE PTR [si-0x55fc],bl
  420703:	cmp    al,0xa0
  420705:	es daa 
  420707:	ret    
  420708:	inc    eax
  420709:	stos   BYTE PTR es:[edi],al
  42070a:	in     al,dx
  42070b:	xchg   BYTE PTR [edx-0x80],bl
  42070e:	aam    0x46
  420710:	pop    edx
  420711:	out    0xb6,al
  420713:	cs dec ebp
  420715:	iret   
  420716:	(bad)  
  420718:	loop   0x4206c7
  42071a:	push   esp
  42071b:	icebp  
  42071c:	jmp    0x7d90a0a
  420721:	jmp    0x90d84e4e
  420726:	or     al,0xb1
  420728:	test   BYTE PTR [ecx-0x5a7b13b5],al
  42072e:	mov    ebp,0xcf355943
  420733:	xchg   edx,eax
  420734:	sbb    cl,ah
  420736:	xor    cl,BYTE PTR [esi+0x5536a4fe]
  42073c:	adc    cl,BYTE PTR [eax+0x63]
  42073f:	daa    
  420740:	mov    dh,0x67
  420742:	pop    ss
  420743:	mov    ecx,0x6eab0629
  420748:	repnz inc ebp
  42074a:	sahf   
  42074b:	sahf   
  42074c:	jo     0x42079b
  42074e:	(bad)  
  42074f:	mov    ah,0xcd
  420751:	cmp    BYTE PTR [eax-0x75690a4d],bl
  420757:	mov    ebx,0x6bc4e241
  42075c:	jmp    0x42079d
  42075e:	loope  0x420748
  420760:	dec    esp
  420761:	mov    ebx,DWORD PTR [ebp+0x749a7518]
  420767:	(bad)  
  420768:	(bad)  
  420769:	(bad)  
  42076a:	shl    DWORD PTR ds:0x592100c1,cl
  420770:	nop
  420771:	adc    BYTE PTR [ebp+0x6],cl
  420774:	mov    eax,ds:0x1a040b37
  420779:	jg     0x4207cd
  42077b:	call   0x429d:0x9a423f9f
  420782:	ins    DWORD PTR es:[edi],dx
  420783:	or     al,0x99
  420785:	cli    
  420786:	enter  0x9bc3,0x2d
  42078a:	xor    BYTE PTR [edi+0x74fbec3e],bl
  420790:	aas    
  420791:	add    eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a73b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a75b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a777
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a747
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a75f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a763
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a767
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a76b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a76f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a75b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a747
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a773
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a77b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a743
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a75b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a747
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a75b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a747
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a75b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a747
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a75b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a747
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a75b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a747
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a75b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a747
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a75b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a747
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a75b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a747
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a75b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a747
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a75b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a747
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a75b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a747
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a75b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a747
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a75b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a747
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a75b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a777
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a747
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a74b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a74f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a753
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	out    0xe2,al
  421dbc:	push   edi
  421dbd:	sub    BYTE PTR [edi-0x4f],ch
  421dc0:	add    BYTE PTR [ebx-0x7c7ca400],0x6
  421dc7:	aad    0xc9
  421dc9:	scas   eax,DWORD PTR es:[edi]
  421dca:	mov    bl,0x31
  421dcc:	dec    esp
  421dcd:	mov    WORD PTR [edi-0x2a],fs
  421dd0:	mov    bl,0xf4
  421dd2:	and    DWORD PTR [ecx-0x23],edi
  421dd5:	mov    dl,0xa6
  421dd7:	adc    BYTE PTR [edi+ebp*8],ah
  421dda:	push   edx
  421ddb:	dec    eax
  421ddc:	outs   dx,DWORD PTR ds:[esi]
  421ddd:	aam    0xce
  421ddf:	add    edi,DWORD PTR [edx+0x4c61cfe9]
  421de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421de6:	jne    0x421e10
  421de8:	jae    0x421dad
  421dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421deb:	aaa    
  421dec:	fsub   DWORD PTR gs:[edx-0x759d3c0e]
  421df3:	and    BYTE PTR [edi-0x4],ch
  421df6:	pop    ebp
  421df7:	das    
  421df8:	jne    0x421de1
  421dfa:	and    DWORD PTR [eax-0x66be27c7],ebx
  421e00:	div    dl
  421e02:	add    BYTE PTR es:[ebx+ebx*1],dh
  421e06:	dec    edi
  421e07:	ror    BYTE PTR [edi-0x75],cl
  421e0a:	outs   dx,DWORD PTR ds:[esi]
  421e0b:	imul   BYTE PTR [ebp-0x715258b5]
  421e11:	dec    ebx
  421e12:	pushf  
  421e13:	xchg   ebp,eax
  421e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e15:	pop    ebp
  421e16:	dec    esi
  421e17:	sar    edx,0xbe
  421e1a:	fidivr DWORD PTR [edi+eiz*8]
  421e1d:	aam    0xb
  421e1f:	mov    bh,0xf2
  421e21:	ins    DWORD PTR es:[edi],dx
  421e22:	jmp    0x818814eb
  421e27:	pusha  
  421e28:	cmp    eax,0x97c54806
  421e2d:	aam    0x39
  421e2f:	and    DWORD PTR [edx+eiz*1+0x34],esi
  421e33:	dec    ebp
  421e34:	xor    al,0xf1
  421e36:	and    dl,BYTE PTR [eax-0x3c]
  421e39:	fdiv   DWORD PTR [edx]
  421e3b:	int3   
  421e3c:	fs (bad) 
  421e3f:	shl    dh,1
  421e41:	call   0xb09d:0x251f637c
  421e48:	cmp    DWORD PTR ds:0x6283271d,ebx
  421e4e:	addr16 jp 0x421e88
  421e51:	sbb    eax,0xb37c3b62
  421e56:	ss cmp eax,0x6fcac556
  421e5c:	(bad)  
  421e5d:	push   ss
  421e5e:	inc    ebp
  421e5f:	fs inc edi
  421e61:	enter  0x805b,0xe7
  421e65:	xchg   ebx,eax
  421e66:	push   ecx
  421e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e68:	or     al,0x58
  421e6a:	push   esp
  421e6b:	js     0x421e0a
  421e6d:	sbb    al,0xf7
  421e6f:	test   DWORD PTR [edi-0x58bbf175],0x400e44ce
  421e79:	inc    ebp
  421e7a:	inc    ebx
  421e7b:	mov    bh,0xa2
  421e7d:	iret   
  421e7e:	push   esi
  421e7f:	jne    0x421eb8
  421e81:	pop    ecx
  421e82:	mov    dh,0xe8
  421e84:	xchg   edx,eax
  421e85:	xor    eax,0x9c1cd909
  421e8a:	(bad)
  421e8e:	add    al,0xa5
  421e90:	pop    esi
  421e91:	push   esi
  421e92:	dec    ebx
  421e93:	adc    dh,BYTE PTR [ecx+0x7d847889]
  421e99:	mov    esp,0x7d80aacf
  421e9e:	jae    0x421ebf
  421ea0:	fnsave [esi+ebx*4-0x4c4a05df]
  421ea7:	popa   
  421ea8:	stmxcsr DWORD PTR [eax-0x23d88a98]
  421eaf:	inc    eax
  421eb0:	adc    DWORD PTR [edi+ebx*2],edi
  421eb3:	or     BYTE PTR [edi+0x22],al
  421eb6:	cmp    DWORD PTR [esp-0x53d95388],edx
  421ebd:	jge    0x421ec2
  421ebf:	aad    0x35
  421ec1:	cmp    ah,BYTE PTR [ecx-0x5a1dbf36]
  421ec7:	dec    ebx
  421ec8:	hlt    
  421ec9:	cdq    
  421eca:	or     edx,0xef331708
  421ed0:	ins    DWORD PTR es:[edi],dx
  421ed1:	aad    0xbe
  421ed3:	shl    DWORD PTR [ecx-0x623ecfdc],cl
  421ed9:	inc    ecx
  421eda:	xor    BYTE PTR [edx+0x7288fb9b],ah
  421ee0:	xor    DWORD PTR [esi],eax
  421ee2:	int    0xaf
  421ee4:	pop    ss
  421ee5:	call   0xb7336ed6
  421eea:	(bad)  
  421eeb:	scas   al,BYTE PTR es:[edi]
  421eec:	bound  esi,QWORD PTR [ecx+0x67]
  421eef:	leave  
  421ef0:	into   
  421ef1:	cmp    ah,al
  421ef3:	inc    ecx
  421ef4:	int3   
  421ef5:	ss repnz xchg edi,eax
  421ef8:	sbb    bh,al
  421efa:	sar    BYTE PTR [edi-0x8],1
  421efd:	(bad)  
  421efe:	mov    cl,0x52
  421f00:	pop    edi
  421f01:	shr    ecx,0x3a
  421f04:	fs out 0x37,al
  421f07:	pop    ds
  421f08:	mov    al,0xab
  421f0a:	aam    0x82
  421f0c:	push   cs
  421f0d:	jbe    0x421f46
  421f0f:	adc    al,0xca
  421f11:	jl     0x421f35
  421f13:	push   0x98e1de06
  421f18:	jae    0x421f4d
  421f1a:	or     DWORD PTR [edx],esi
  421f1c:	out    dx,eax
  421f1d:	popa   
  421f1e:	sbb    eax,0xf3238583
  421f23:	idiv   DWORD PTR gs:[esp+ebp*8]
  421f27:	sbb    BYTE PTR [esi-0xd],al
  421f2a:	mov    edi,0xcee05c7a
  421f2f:	push   ss
  421f30:	push   ds
  421f31:	stos   BYTE PTR es:[edi],al
  421f32:	mov    bl,0x57
  421f34:	aad    0x43
  421f36:	cmp    al,0x44
  421f38:	in     al,0xb0
  421f3a:	xchg   ah,cl
  421f3c:	jb     0x421f4a
  421f3e:	inc    ebx
  421f3f:	je     0x421f4a
  421f41:	pop    esi
  421f42:	or     esp,esi
  421f44:	fwait
  421f45:	pop    ecx
  421f46:	mov    eax,0xdf9e3dbf
  421f4b:	imul   edx,ecx,0xffffff89
  421f4e:	adc    al,0xdc
  421f50:	and    eax,0xed851a19
  421f55:	retf   0x93c1
  421f58:	push   cs
  421f59:	in     eax,dx
  421f5a:	nop
  421f5b:	xchg   ecx,eax
  421f5c:	ins    DWORD PTR es:[edi],dx
  421f5d:	or     DWORD PTR [edx],0xa12bf291
  421f63:	sub    BYTE PTR [edx-0x13e71a76],ch
  421f69:	jae    0x421f3d
  421f6b:	add    al,0x47
  421f6d:	daa    
  421f6e:	pop    ebx
  421f6f:	mov    esi,0x5e82fad8
  421f74:	aad    0xcf
  421f76:	push   esi
  421f77:	(bad)  
  421f79:	mov    al,0xe7
  421f7b:	adc    ah,BYTE PTR [eax]
  421f7d:	lea    edi,[edx]
  421f7f:	aaa    
  421f80:	mov    BYTE PTR [esi+ebx*8-0x47],ah
  421f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f85:	sahf   
  421f86:	add    BYTE PTR [esp+eax*2],al
  421f89:	pop    esp
  421f8a:	mov    ds:0x7bbc0ff,al
  421f8f:	or     esp,esp
  421f91:	sub    al,0xad
  421f93:	ret    0x8412
  421f96:	pushf  
  421f97:	mov    ecx,edx
  421f99:	aam    0x7e
  421f9b:	and    eax,0x99e0f696
  421fa0:	popf   
  421fa1:	lea    edx,[eax+0x5]
  421fa4:	arpl   WORD PTR [ebx+0x13e62ca8],di
  421faa:	out    0xb3,eax
  421fac:	jl     0x421f3d
  421fae:	mov    ebx,0x52d08ade
  421fb3:	rcr    eax,cl
  421fb5:	mov    ebx,0x1dea6373
  421fba:	imul   ch
  421fbc:	int    0x9f
  421fbe:	daa    
  421fbf:	push   ebx
  421fc0:	gs cld 
  421fc2:	inc    esi
  421fc3:	xchg   esi,eax
  421fc4:	dec    esi
  421fc5:	imul   esp,DWORD PTR [eax+ebp*4],0x117d4e31
  421fcc:	dec    esi
  421fcd:	dec    edx
  421fce:	stc    
  421fcf:	add    cl,BYTE PTR [ebp+0x24]
  421fd2:	cmp    eax,0xe571a400
  421fd7:	test   al,0xc6
  421fd9:	mov    ah,0x5a
  421fdb:	and    DWORD PTR [esi-0x45],eax
  421fde:	push   ebx
  421fdf:	pop    eax
  421fe0:	mov    cl,BYTE PTR [ebx]
  421fe2:	loop   0x421fd1
  421fe4:	or     DWORD PTR [edx-0x45061aa8],ebx
  421fea:	fdiv   DWORD PTR [ecx+0x5b]
  421fed:	xchg   ebx,eax
  421fee:	and    ebx,DWORD PTR [ecx-0x2bea87f5]
  421ff4:	cmp    esp,DWORD PTR [edi]
  421ff6:	cmp    dh,bl
  421ff8:	or     ah,dl
  421ffa:	xchg   esp,eax
  421ffb:	ficom  WORD PTR [eax+0x79]
  421ffe:	outs   dx,BYTE PTR ds:[esi]
  421fff:	imul   ch
  422001:	pop    DWORD PTR [esi]
  422003:	sbb    DWORD PTR [bp+si-0xc94],ebx
  422008:	mov    eax,0xb67ef722
  42200d:	jae    0x42202d
  42200f:	outs   dx,BYTE PTR ds:[esi]
  422010:	sub    edi,ecx
  422012:	mov    edx,0xe31d177
  422017:	inc    esp
  422018:	mov    ds:0xc6eb8482,eax
  42201d:	jle    0x42200a
  42201f:	pop    ds
  422020:	es sbb ebx,edi
  422023:	xor    esi,esi
  422025:	div    al
  422027:	mov    ds:0x574f1c43,eax
  42202c:	push   esp
  42202d:	stos   DWORD PTR es:[edi],eax
  42202e:	scas   eax,DWORD PTR es:[edi]
  42202f:	out    0x47,eax
  422031:	add    BYTE PTR [edx+0x324a8533],dl
  422037:	aas    
  422038:	push   esp
  422039:	test   BYTE PTR [eax-0x14519e15],0x3b
  422040:	mov    dl,BYTE PTR [edx]
  422042:	cmp    ch,bl
  422044:	out    dx,eax
  422045:	call   0x7042:0x847a2aba
  42204c:	shl    DWORD PTR [ecx],1
  42204e:	std    
  42204f:	xchg   edi,eax
  422050:	cmp    bl,BYTE PTR [eax-0x4886393f]
  422056:	pop    edx
  422057:	push   esi
  422058:	ja     0x421ff2
  42205a:	jae    0x42207a
  42205c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42205d:	enter  0x5e8,0xac
  422061:	mov    al,0x54
  422063:	mov    al,0x7
  422065:	jmp    0x422056
  422067:	loope  0x422053
  422069:	push   ebp
  42206a:	sbb    ebx,DWORD PTR [ecx+ebx*4]
  42206d:	jmp    FWORD PTR [ebx-0x57]
  422070:	pop    edi
  422071:	lds    edx,FWORD PTR [ebp-0x2e]
  422074:	pop    esi
  422075:	mov    DWORD PTR ds:0x3e41d47c,ecx
  42207b:	jns    0x422056
  42207d:	icebp  
  42207e:	push   0x79
  422080:	not    DWORD PTR [esi+0x47]
  422083:	xchg   esp,eax
  422084:	mov    ch,0xa7
  422086:	mov    ecx,0xe4e5e11b
  42208b:	jne    0x422074
  42208d:	clc    
  42208e:	xor    BYTE PTR ds:0x6c1d2e50,bl
  422094:	hlt    
  422095:	xor    BYTE PTR ds:0xe58ca869,dh
  42209b:	jns    0x42208b
  42209d:	push   ebp
  42209e:	ss cdq 
  4220a0:	sbb    BYTE PTR [edx],bh
  4220a2:	sub    eax,0x9092a37
  4220a7:	fs jno 0x42210b
  4220aa:	in     al,dx
  4220ab:	push   ebx
  4220ac:	and    cl,BYTE PTR [esi]
  4220ae:	add    DWORD PTR [ebx+ecx*2-0x3a],edi
  4220b2:	test   DWORD PTR [ecx-0x65f2c12b],ebp
  4220b8:	mov    dh,0xef
  4220ba:	sbb    eax,0x3d789161
  4220bf:	(bad)  
  4220c0:	push   edx
  4220c1:	pop    eax
  4220c2:	pop    ss
  4220c3:	adc    al,0xba
  4220c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220c6:	out    dx,al
  4220c7:	js     0x4220b3
  4220c9:	xchg   esi,eax
  4220ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220cb:	enter  0x6c34,0x7d
  4220cf:	mov    esi,0x3d2d7714
  4220d4:	imul   edi,DWORD PTR [edi],0xc145058
  4220da:	out    dx,al
  4220db:	pop    ecx
  4220dc:	das    
  4220dd:	mov    al,ds:0x3c1feef1
  4220e2:	jmp    0x898e167b
  4220e7:	adc    ch,al
  4220e9:	or     eax,DWORD PTR [ebp+0x1d]
  4220ec:	mov    edi,0x4ee19da6
  4220f1:	dec    edi
  4220f2:	or     edi,ecx
  4220f4:	inc    eax
  4220f5:	(bad)  
  4220f6:	adc    eax,0x8bc6d7f4
  4220fb:	retf   
  4220fc:	loope  0x4220f4
  4220fe:	std    
  4220ff:	cmp    eax,0x1bc3c0a3
  422104:	popf   
  422105:	or     cl,dl
  422107:	cmp    eax,0x4d4e6248
  42210c:	loope  0x4220a0
  42210e:	jl     0x4220e6
  422110:	xchg   esi,eax
  422111:	adc    esp,DWORD PTR [esi+0x56f0c9e9]
  422117:	mov    bh,0xce
  422119:	inc    edx
  42211a:	cmp    esp,DWORD PTR [ecx]
  42211c:	xor    BYTE PTR [ebx+0x6a],0xc6
  422120:	mov    dl,0x6c
  422122:	jmp    0x422188
  422124:	ss mov esi,0x1e9a69c7
  42212a:	gs sub dh,0xb3
  42212e:	cmp    BYTE PTR [ecx],0xf7
  422131:	xchg   ebp,eax
  422132:	out    dx,eax
  422133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422134:	xor    al,0x68
  422136:	dec    eax
  422137:	mov    fs,WORD PTR [edx]
  422139:	daa    
  42213a:	arpl   WORD PTR [edx+0x11],bx
  42213d:	cmp    ecx,0xbd061e99
  422143:	(bad)  
  422144:	pop    ecx
  422145:	xchg   esi,eax
  422146:	add    eax,0x5286f55c
  42214b:	or     dh,BYTE PTR ds:0xd1dfd688
  422151:	loop   0x42210e
  422153:	dec    eax
  422154:	inc    esi
  422155:	inc    ebx
  422156:	inc    edi
  422157:	call   0x1146:0xbdf11212
  42215e:	inc    edx
  42215f:	aad    0x7
  422161:	and    ecx,DWORD PTR ds:0x1d60f4f0
  422167:	mov    ds:0x5b984c9f,eax
  42216c:	enter  0xed83,0x75
  422170:	xor    al,0xe2
  422172:	ficom  DWORD PTR [ebp-0x4c]
  422175:	dec    eax
  422176:	mov    cl,0x6d
  422178:	xor    edx,ebp
  42217a:	push   eax
  42217b:	mov    dh,cl
  42217d:	sub    eax,0x396d78c7
  422182:	gs out 0x2,al
  422185:	pop    edx
  422186:	mov    ch,ah
  422188:	jae    0x422111
  42218a:	xor    BYTE PTR [ebp+ebp*8-0x48442e30],al
  422191:	jae    0x422170
  422193:	jecxz  0x422195
  422195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422196:	enter  0x192,0x2e
  42219a:	jg     0x42221b
  42219c:	das    
  42219d:	sub    eax,0xa55899c3
  4221a2:	push   eax
  4221a3:	add    eax,0x503976c6
  4221a8:	mov    BYTE PTR [esi-0x6e],bh
  4221ab:	inc    esp
  4221ac:	fcom   st(7)
  4221ae:	clc    
  4221af:	fisttp WORD PTR [edx+eax*8+0x38]
  4221b3:	or     eax,0xa51c85be
  4221b8:	add    al,0xfa
  4221ba:	or     eax,eax
  4221bc:	out    dx,eax
  4221bd:	test   eax,0x23aabf9e
  4221c2:	mov    ds:0x8cac1988,eax
  4221c7:	stos   DWORD PTR es:[edi],eax
  4221c8:	rcl    BYTE PTR [edi-0x16],cl
  4221cb:	and    ebp,ecx
  4221cd:	(bad)
  4221d0:	int3   
  4221d1:	aaa    
  4221d2:	jmp    0x4318:0x5ed5faa4
  4221d9:	adc    esi,DWORD PTR [ecx+ebp*1]
  4221dc:	adc    esi,ecx
  4221de:	daa    
  4221df:	xchg   ebp,eax
  4221e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221e1:	iret   
  4221e2:	push   esi
  4221e3:	shr    BYTE PTR [eax-0x6d289433],1
  4221e9:	icebp  
  4221ea:	imul   BYTE PTR [edx]
  4221ec:	int    0xdf
  4221ee:	into   
  4221ef:	push   ebp
  4221f0:	cmp    al,0xb9
  4221f2:	push   ecx
  4221f3:	popf   
  4221f4:	stos   DWORD PTR es:[edi],eax
  4221f5:	lea    ebp,[ebx]
  4221f7:	std    
  4221f8:	adc    ebx,esi
  4221fa:	adc    ebp,edx
  4221fc:	cmp    DWORD PTR [ebx],edx
  4221fe:	jg     0x4221f8
  422200:	push   ds
  422201:	fsubr  st,st(1)
  422203:	pop    ecx
  422204:	fwait
  422205:	or     eax,0xab1b3de6
  42220a:	jns    0x422250
  42220c:	rcr    BYTE PTR [ebp-0x6b],cl
  42220f:	or     al,0xcb
  422211:	ins    DWORD PTR es:[edi],dx
  422212:	pop    ebp
  422213:	pop    ebx
  422214:	fisub  DWORD PTR [eax]
  422216:	leave  
  422217:	adc    BYTE PTR [edx+0x49ec1845],bl
  42221d:	cmp    BYTE PTR [edi+0x3d],bh
  422220:	lea    ebx,[edx]
  422222:	imul   ecx,DWORD PTR [ebp-0x75529cbc],0xffffff9e
  422229:	test   DWORD PTR ds:0x4a25e351,ebx
  42222f:	fnstcw WORD PTR [ebx+0x57dcae25]
  422235:	dec    ecx
  422236:	push   esi
  422237:	aas    
  422238:	jmp    0x42228c
  42223a:	xor    bl,BYTE PTR [eax-0xa7c3a4a]
  422240:	cmp    esi,DWORD PTR [ecx-0x45fa6b82]
  422246:	pop    ebp
  422247:	cmp    DWORD PTR [ecx-0x66fec085],edi
  42224d:	(bad)  [eax+0x56]
  422250:	shr    DWORD PTR [ebp+0x26],cl
  422253:	jne    0x4222a5
  422255:	sbb    DWORD PTR [ebx+0x1983d2b0],esi
  42225b:	outs   dx,DWORD PTR ds:[esi]
  42225c:	xchg   edx,eax
  42225d:	fwait
  42225e:	push   edx
  42225f:	loope  0x4221f5
  422261:	clc    
  422262:	and    al,0xf1
  422264:	mov    bh,0x90
  422266:	arpl   bp,si
  422268:	cmp    ebp,DWORD PTR [ebp-0x3d6ad95c]
  42226e:	std    
  42226f:	aad    0xe1
  422271:	loop   0x422264
  422273:	mov    eax,0x651386b0
  422278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422279:	mov    ?,WORD PTR [ebx+0x1]
  42227c:	xchg   BYTE PTR [ebx],dh
  42227e:	dec    edi
  42227f:	icebp  
  422280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422281:	mov    cl,0x79
  422283:	in     eax,dx
  422284:	jno    0x42222f
  422286:	push   0x1
  422288:	arpl   WORD PTR [ebp-0x36],di
  42228b:	(bad)  
  42228d:	inc    esi
  42228e:	dec    edx
  42228f:	or     al,0xfa
  422291:	add    BYTE PTR [eax+0xb3c3869],ch
  422297:	or     ch,BYTE PTR [esi]
  422299:	jecxz  0x422236
  42229b:	pusha  
  42229c:	push   0xffffff87
  42229e:	jle    0x4222ab
  4222a0:	adc    edx,DWORD PTR [edx+0x67a7e7c9]
  4222a6:	repz dec ebx
  4222a8:	push   0xb0ff746
  4222ad:	pop    eax
  4222ae:	sub    al,0x6f
  4222b0:	repnz (bad) 
  4222b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222b3:	xchg   BYTE PTR [edx-0x5a],ah
  4222b6:	cmp    ah,BYTE PTR [ecx]
  4222b8:	or     ebp,edx
  4222ba:	int    0x5c
  4222bc:	mov    ds:0x5c21c84,eax
  4222c1:	(bad)  
  4222c2:	in     eax,0x37
  4222c4:	(bad)  
  4222c7:	dec    ecx
  4222c8:	pop    edi
  4222c9:	shl    DWORD PTR [edx],1
  4222cb:	push   ebx
  4222cc:	fcmovb st,st(5)
  4222ce:	xchg   edx,eax
  4222cf:	adc    ebx,DWORD PTR [ebp-0x39]
  4222d2:	fldl2t 
  4222d4:	jecxz  0x42234a
  4222d6:	in     al,dx
  4222d7:	or     BYTE PTR [esi+0x26],bl
  4222da:	mov    cl,0x54
  4222dc:	xchg   esp,eax
  4222dd:	pop    es
  4222de:	mov    ebp,0xf1f71214
  4222e3:	mov    edi,0x5944a35
  4222e8:	arpl   di,si
  4222ea:	jmp    0xd3e381db
  4222ef:	shl    BYTE PTR [ebx-0x20d6a3c],1
  4222f5:	jnp    0x422312
  4222f7:	adc    esi,DWORD PTR [edi+ebx*8-0x7b]
  4222fb:	mov    al,0x5b
  4222fd:	jnp    0x4222d4
  4222ff:	jl     0x422349
  422301:	sub    eax,0xd946ee3b
  422306:	dec    esi
  422307:	js     0x422328
  422309:	ret    0xa851
  42230c:	pop    ebx
  42230d:	pop    ss
  42230e:	sbb    al,0x6f
  422310:	xchg   BYTE PTR [eax-0xd],bh
  422313:	mov    al,0xae
  422315:	push   0x250f5ea0
  42231a:	retf   0x37ed
  42231d:	jnp    0x4222e8
  42231f:	or     al,0x70
  422321:	aaa    
  422322:	stos   BYTE PTR es:[edi],al
  422323:	xchg   edi,eax
  422324:	ds pushf 
  422326:	pop    esp
  422327:	imul   bx,bx,0x8049
  42232c:	inc    DWORD PTR [edx-0x3c]
  42232f:	enter  0xd0ee,0xb0
  422333:	repnz mov BYTE PTR [eax],dl
  422336:	mov    bl,0xda
  422338:	outs   dx,BYTE PTR ds:[esi]
  422339:	arpl   WORD PTR [edx-0x2bd9e3b8],cx
  42233f:	dec    esi
  422340:	mov    ah,0x1b
  422342:	in     eax,dx
  422343:	or     DWORD PTR [ebx-0x3ebdd224],esi
  422349:	out    dx,eax
  42234a:	push   0x9
  42234c:	mov    BYTE PTR [ecx+ecx*1-0x3a],dl
  422350:	fsubr  st,st(7)
  422352:	xchg   ecx,eax
  422353:	adc    al,0x58
  422355:	cdq    
  422356:	dec    esi
  422357:	addr16 pop esi
  422359:	sub    ch,ah
  42235b:	loop   0x422305
  42235d:	aas    
  42235e:	fcmovne st,st(3)
  422360:	sbb    al,BYTE PTR [ebx-0x2f9955b2]
  422366:	in     al,0xfd
  422368:	fmul   DWORD PTR [ecx]
  42236a:	ds dec edx
  42236c:	mov    cl,0xcb
  42236e:	paddw  mm1,QWORD PTR [ecx]
  422371:	shl    DWORD PTR [ecx-0x4833d580],1
  422377:	es scas al,BYTE PTR es:[edi]
  422379:	mov    dl,0x9d
  42237b:	push   cs
  42237c:	scas   al,BYTE PTR es:[edi]
  42237d:	mov    esp,0xb7cd202d
  422382:	and    ebp,DWORD PTR [edi]
  422384:	popa   
  422385:	push   ss
  422386:	jl     0x4223da
  422388:	or     BYTE PTR [eax+0x19],al
  42238b:	iret   
  42238c:	jb     0x42237c
  42238e:	je     0x422335
  422390:	xor    ah,BYTE PTR [eax+0x71d177e9]
  422396:	call   0xd46f:0x89d95f74
  42239d:	popf   
  42239e:	sbb    al,0x54
  4223a0:	sbb    DWORD PTR ds:0xd58de95e,0x44430bda
  4223aa:	int3   
  4223ab:	inc    esp
  4223ac:	adc    al,0x4e
  4223ae:	test   eax,0xd9eefe32
  4223b3:	clc    
  4223b4:	leave  
  4223b5:	and    DWORD PTR [ebx],edx
  4223b7:	mov    ecx,eax
  4223b9:	and    bl,BYTE PTR [ecx]
  4223bb:	icebp  
  4223bc:	cmp    ebx,DWORD PTR [eax+0x2f]
  4223bf:	xor    BYTE PTR [edi],cl
  4223c1:	pop    eax
  4223c2:	ins    BYTE PTR es:[edi],dx
  4223c3:	lds    edx,FWORD PTR [edx]
  4223c5:	call   0x57ea6b3d
  4223ca:	pop    edx
  4223cb:	shl    DWORD PTR [edi],0x73
  4223ce:	hlt    
  4223cf:	shl    dl,cl
  4223d1:	cmp    cl,BYTE PTR [esi+0x560a0db4]
  4223d7:	cmp    al,0x68
  4223d9:	push   esp
  4223da:	sub    BYTE PTR [ecx+edx*8-0x11],cl
  4223de:	xor    ebp,DWORD PTR [ebx+ebx*8]
  4223e1:	add    BYTE PTR [edx+0x10],0x67
  4223e5:	dec    esi
  4223e6:	ret    0x4af1
  4223e9:	inc    edx
  4223ea:	push   edi
  4223eb:	ja     0x42243b
  4223ed:	ins    DWORD PTR es:[edi],dx
  4223ee:	xchg   DWORD PTR [ebx+ebx*2],eax
  4223f1:	or     DWORD PTR [eax-0x18db75d6],0xf79c9a01
  4223fb:	dec    esi
  4223fc:	mov    edx,eax
  4223fe:	fwait
  4223ff:	test   al,0x19
  422401:	in     al,dx
  422402:	es mov ch,bh
  422405:	outs   dx,BYTE PTR ds:[esi]
  422406:	das    
  422407:	adc    eax,0x8381a468
  42240c:	lsl    ebx,sp
  42240f:	jg     0x42244d
  422411:	mov    eax,0x158f5dac
  422416:	cmc    
  422417:	aad    0x2
  422419:	cdq    
  42241a:	mov    dh,0xd0
  42241c:	ficom  DWORD PTR [esi]
  42241e:	mov    edi,0x5d350076
  422423:	fisttp DWORD PTR ds:0x5b47f9c8
  422429:	iret   
  42242a:	mov    ch,0x6a
  42242c:	pop    es
  42242d:	add    BYTE PTR [ebx],0xff
  422430:	es (bad) 
  422432:	sbb    ebx,ebx
  422434:	cmc    
  422435:	jge    0x4223e5
  422437:	cmp    ch,BYTE PTR [ecx-0x32e4bc94]
  42243d:	repz sbb BYTE PTR [ebx],al
  422440:	push   ss
  422441:	mov    dl,0xea
  422443:	push   cs
  422444:	dec    ecx
  422445:	mov    ds:0x37129cee,eax
  42244a:	mov    al,ds:0x39af1517
  42244f:	sub    eax,0x6db4d699
  422454:	cmp    al,0x6b
  422456:	repnz nop
  422458:	popa   
  422459:	jle    0x4223dc
  42245b:	jge    0x42241d
  42245d:	push   edi
  42245e:	rsqrtps xmm7,xmm0
  422461:	aad    0x2c
  422463:	lods   al,BYTE PTR ds:[esi]
  422464:	sti    
  422465:	mov    edx,0x4b04256a
  42246a:	mov    esi,0xc1b6a609
  42246f:	xchg   esi,eax
  422470:	dec    eax
  422471:	sbb    al,0x9c
  422473:	push   ebp
  422474:	adc    DWORD PTR [esi],ebx
  422476:	sub    BYTE PTR [edi-0x61fa921f],al
  42247c:	outs   dx,BYTE PTR ds:[esi]
  42247d:	xor    al,0x43
  42247f:	dec    edx
  422480:	jg     0x422450
  422482:	push   es
  422483:	inc    edi
  422484:	paddb  mm3,QWORD PTR [ebp+0x2c54bc88]
  42248b:	fistp  DWORD PTR [ebx-0x48]
  42248e:	mov    edi,0xdfe82273
  422493:	add    ebx,ebp
  422495:	cs jge 0x4224c3
  422498:	jnp    0x4224cf
  42249a:	std    
  42249b:	fbld   TBYTE PTR [ecx]
  42249d:	xchg   DWORD PTR [eax],ecx
  42249f:	test   al,0x7a
  4224a1:	push   ecx
  4224a2:	sub    dh,0x19
  4224a5:	mov    ch,0xf8
  4224a7:	adc    DWORD PTR [ebx+0x79],ecx
  4224aa:	adc    DWORD PTR [ecx-0x5f],0xbf88c15d
  4224b1:	sbb    al,0x61
  4224b3:	repnz sbb eax,0x8571dd88
  4224b9:	test   al,0xe6
  4224bb:	sbb    eax,0xabe15aeb
  4224c0:	push   cs
  4224c1:	lods   eax,DWORD PTR ds:[esi]
  4224c2:	pop    ecx
  4224c3:	sbb    eax,DWORD PTR [eax]
  4224c5:	mov    dh,0x37
  4224c7:	pop    ecx
  4224c8:	mov    DWORD PTR ds:0x74f39cf3,esp
  4224ce:	adc    ebx,DWORD PTR ds:0x16d6d479
  4224d4:	or     BYTE PTR [ebx-0x24],ah
  4224d7:	mov    WORD PTR [edx+0x5acf7962],cs
  4224dd:	add    DWORD PTR [edi+0x2aee5a46],ebp
  4224e3:	ror    DWORD PTR [ecx],0xda
  4224e6:	or     BYTE PTR [edx+0x7a],al
  4224e9:	cmp    ebp,ebx
  4224eb:	dec    eax
  4224ec:	pushf  
  4224ed:	pop    ds
  4224ee:	stc    
  4224ef:	cld    
  4224f0:	jmp    0x422494
  4224f2:	in     eax,0x95
  4224f4:	sub    edx,edx
  4224f6:	repz pop es
  4224f8:	div    DWORD PTR [esi+edx*2-0x1a6b1544]
  4224ff:	shl    DWORD PTR [eax],cl
  422501:	or     al,0x90
  422503:	xor    eax,0x8a026837
  422508:	imul   ebx,DWORD PTR [esi+0x477034fc],0xffffffa0
  42250f:	cmc    
  422510:	push   eax
  422511:	cmp    ah,BYTE PTR [edi-0x3b9bf0f9]
  422517:	fild   QWORD PTR [edi]
  422519:	loopne 0x422583
  42251b:	(bad)  
  42251c:	sub    al,0xd6
  42251e:	pop    edi
  42251f:	lods   al,BYTE PTR ds:[esi]
  422520:	inc    ecx
  422521:	sbb    ch,BYTE PTR [esi+0xa]
  422524:	push   ecx
  422525:	mov    es,WORD PTR [ebp+0xa5bb93]
  42252b:	std    
  42252c:	hlt    
  42252d:	adc    BYTE PTR [esi],cl
  42252f:	add    DWORD PTR [eax+0xc172cf0],ebx
  422535:	ffree  st(6)
  422537:	inc    BYTE PTR [ebp-0x6b937fa0]
  42253d:	imul   esp,DWORD PTR [ebx+ebp*1],0xffffff80
  422541:	inc    ebp
  422542:	xor    edx,DWORD PTR [ebx-0x13]
  422545:	enter  0x4ab,0x3f
  422549:	sub    BYTE PTR [eax+0x3e],cl
  42254c:	push   ebx
  42254d:	rcl    ch,0x79
  422550:	jnp    0x4225b0
  422552:	dec    ebp
  422553:	fs push ss
  422555:	outs   dx,DWORD PTR ds:[esi]
  422556:	and    DWORD PTR [ebx-0x5e],0x65
  42255a:	sbb    al,0x70
  42255c:	ds data16 hlt 
  42255f:	mov    esp,0x7abaa19e
  422564:	iret   
  422565:	mov    ebp,0x97834130
  42256a:	mov    ch,0x30
  42256c:	aaa    
  42256d:	test   BYTE PTR [ecx+0x51],ah
  422570:	cli    
  422571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422572:	add    BYTE PTR [edx],cl
  422574:	pop    ds
  422575:	pop    esi
  422576:	sub    esi,DWORD PTR [ecx+edx*4+0x27]
  42257a:	xchg   edi,eax
  42257b:	int3   
  42257c:	and    eax,0xaefd58e9
  422581:	sub    eax,0x4d01a9e7
  422586:	lahf   
  422587:	cmc    
  422588:	aam    0xa7
  42258a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42258b:	call   0x2b05847e
  422590:	pop    ss
  422591:	mov    ds:0xd81e0880,eax
  422596:	nop
  422597:	xchg   esp,eax
  422598:	pop    esi
  422599:	out    dx,eax
  42259a:	xchg   BYTE PTR [eax-0x5d742ce],ah
  4225a0:	mov    BYTE PTR [edi+0x2a],ah
  4225a3:	xchg   edi,eax
  4225a4:	in     al,0x95
  4225a6:	xchg   esp,ecx
  4225a8:	jbe    0x4225bd
  4225aa:	dec    ecx
  4225ab:	sub    esp,ebx
  4225ad:	push   esi
  4225ae:	je     0x422582
  4225b0:	es ja  0x4225dd
  4225b3:	int    0xda
  4225b5:	mov    ds:0xa136b543,eax
  4225ba:	fistp  DWORD PTR [edi-0x5c]
  4225bd:	adc    al,0x65
  4225bf:	adc    bl,ah
  4225c1:	pop    esp
  4225c2:	or     al,0x40
  4225c4:	inc    esp
  4225c5:	shr    DWORD PTR [edi-0x74cbaffa],0x67
  4225cc:	xchg   DWORD PTR [eax+eiz*4+0x3c],eax
  4225d0:	(bad)  
  4225d2:	pop    edx
  4225d3:	lahf   
  4225d4:	inc    esi
  4225d5:	cmp    ebx,edi
  4225d7:	test   eax,0x870d5800
  4225dc:	and    eax,0x67d0cdb1
  4225e1:	add    DWORD PTR [ecx-0x4],edi
  4225e4:	aaa    
  4225e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225e6:	test   DWORD PTR [ecx-0x6e],ebp
  4225e9:	pop    ebp
  4225ea:	lea    ecx,[esi+0x7b]
  4225ed:	inc    ebp
  4225ee:	mov    BYTE PTR [esi+ecx*8-0x15],dl
  4225f2:	inc    ebp
  4225f3:	xor    al,0x96
  4225f5:	push   edi
  4225f6:	push   ss
  4225f7:	and    eax,0xd823f4a2
  4225fc:	arpl   WORD PTR [ecx],si
  4225fe:	cmp    BYTE PTR [esi-0x3f8188f4],0xed
  422605:	add    esp,edx
  422607:	lahf   
  422608:	outs   dx,DWORD PTR ds:[esi]
  422609:	(bad)  [ebx+0x62]
  42260c:	mov    esi,DWORD PTR [edi-0x4695c6d2]
  422612:	call   0xdd1c:0x7b693800
  422619:	xor    al,0x3b
  42261b:	enter  0x1112,0x66
  42261f:	out    0x5f,al
  422621:	lods   al,BYTE PTR ds:[esi]
  422622:	mov    dl,0x48
  422624:	cdq    
  422625:	push   ecx
  422626:	push   ebp
  422627:	sub    dl,dh
  422629:	aas    
  42262a:	inc    eax
  42262b:	sbb    al,0x40
  42262d:	out    0x62,eax
  42262f:	adc    al,0xb0
  422631:	and    eax,0x54e735b0
  422636:	repnz pop eax
  422638:	push   edi
  422639:	(bad)
  42263d:	mov    al,0xc4
  42263f:	nop
  422640:	loope  0x422659
  422642:	jmp    0x42263e
  422644:	dec    edi
  422645:	popa   
  422646:	inc    eax
  422647:	mov    eax,DWORD PTR [esi]
  422649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42264a:	dec    edx
  42264b:	xchg   esp,eax
  42264c:	imul   ecx,DWORD PTR [ebx+0x6a],0xbafac068
  422653:	or     BYTE PTR [eax+0x9de9778],dh
  422659:	push   ebx
  42265a:	fisub  DWORD PTR [eax]
  42265c:	mov    al,0x27
  42265e:	sbb    al,0xa5
  422660:	jb     0x4225f3
  422662:	rcr    DWORD PTR [ecx],0xfc
  422665:	jne    0x4225eb
  422667:	sub    DWORD PTR [ebx-0x1b8ad12f],esi
  42266d:	mov    edx,0xdca823ba
  422672:	outs   dx,DWORD PTR ds:[esi]
  422673:	and    bl,BYTE PTR [edx+0x4b3e34d4]
  422679:	mov    BYTE PTR [edx+edi*8],dl
  42267c:	enter  0xbd09,0xe9
  422680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422681:	leave  
  422682:	mov    cl,0x7
  422684:	and    dl,BYTE PTR ds:0xe6ab30e5
  42268a:	inc    ebx
  42268b:	int3   
  42268c:	adc    ah,BYTE PTR [edx-0x14]
  42268f:	cld    
  422690:	mov    ebx,0x5fc460fa
  422695:	rcr    BYTE PTR [edx+0x6d81c35f],0xe3
  42269c:	or     eax,DWORD PTR [edi]
  42269e:	lahf   
  42269f:	mov    BYTE PTR fs:[edi],bl
  4226a2:	push   ecx
  4226a3:	pop    ebp
  4226a4:	call   0x46dca0e
  4226a9:	mov    esi,ecx
  4226ab:	mov    cl,0x9b
  4226ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ae:	mov    ch,0x8a
  4226b0:	out    dx,al
  4226b1:	xlat   BYTE PTR ds:[ebx]
  4226b2:	mov    dl,0x62
  4226b4:	cmc    
  4226b5:	pop    ebp
  4226b6:	inc    ecx
  4226b7:	imul   edx,DWORD PTR [edi+0x27],0x6fecfb61
  4226be:	and    edi,DWORD PTR [ebp-0x4c]
  4226c1:	xchg   ecx,eax
  4226c2:	in     eax,dx
  4226c3:	sub    eax,0x7a5fe53e
  4226c8:	sub    DWORD PTR [edx+esi*4],ebx
  4226cb:	push   ds
  4226cc:	sub    eax,0x8a64895c
  4226d1:	outs   dx,DWORD PTR ds:[esi]
  4226d2:	pop    ebx
  4226d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226d4:	daa    
  4226d5:	ja     0x422699
  4226d7:	scas   al,BYTE PTR es:[edi]
  4226d8:	rcl    BYTE PTR [esi-0x1a],1
  4226db:	les    ecx,FWORD PTR [ecx+0x12]
  4226de:	das    
  4226df:	popa   
  4226e0:	repz lock xchg ebp,eax
  4226e3:	mov    ebp,0xa4bf2b41
  4226e8:	imul   eax,DWORD PTR [ebx],0x2debc15b
  4226ee:	out    0xa9,al
  4226f0:	add    DWORD PTR [ecx-0x3495b4a9],edx
  4226f6:	push   eax
  4226f7:	mov    ch,0xf6
  4226f9:	test   DWORD PTR [esi+0x23],edx
  4226fc:	ja     0x4226fd
  4226fe:	in     al,0x2b
  422700:	add    al,0x38
  422702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422703:	mov    edi,ebx
  422705:	rcl    BYTE PTR [ecx+0x36],1
  422708:	jge    0x422690
  42270a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42270b:	inc    ecx
  42270c:	ins    BYTE PTR es:[edi],dx
  42270d:	in     al,0x7b
  42270f:	into   
  422710:	or     al,0xa0
  422712:	adc    bh,BYTE PTR [ecx+ebp*4-0x13]
  422716:	cdq    
  422717:	jbe    0x4226cd
  422719:	and    eax,0x5807c2f9
  42271e:	xchg   edi,eax
  42271f:	add    eax,0x30efe4e3
  422724:	and    BYTE PTR [ebx+edx*8+0x23b5cb3f],cl
  42272b:	in     eax,dx
  42272c:	jbe    0x4226db
  42272e:	in     al,0xe
  422730:	adc    ebx,DWORD PTR [edx+0x8]
  422733:	mov    ebx,0x6bd0bf21
  422738:	push   DWORD PTR [eax+eiz*2]
  42273b:	ficom  DWORD PTR [eax]
  42273d:	(bad)  
  42273e:	out    dx,eax
  42273f:	pop    ds
  422740:	cmp    al,0x6c
  422742:	or     ebp,DWORD PTR [eax+0x31ad49ad]
  422748:	test   eax,0xc05e6a2e
  42274d:	dec    esi
  42274e:	iret   
  42274f:	push   ecx
  422750:	(bad)  
  422752:	dec    eax
  422753:	sbb    al,0x1c
  422755:	fwait
  422756:	(bad)  
  422757:	jbe    0x4226f3
  422759:	ret    
  42275a:	retf   0xd14f
  42275d:	rcl    BYTE PTR [edx],1
  42275f:	ja     0x422797
  422761:	push   edx
  422762:	mov    al,ds:0xa948bf96
  422767:	xchg   edi,eax
  422768:	shl    BYTE PTR [ebx],cl
  42276a:	ins    DWORD PTR es:[edi],dx
  42276b:	frstor [ecx+0x5c]
  42276e:	push   es
  42276f:	xor    ecx,DWORD PTR [ecx+0xb]
  422772:	mov    esi,0x7040e6c6
  422777:	gs scas eax,DWORD PTR es:[edi]
  422779:	pop    ds
  42277a:	ja     0x422769
  42277c:	xor    DWORD PTR [edi+0x5e2e5157],edx
  422782:	repz adc DWORD PTR [edx+esi*1-0x78],0x47e78648
  42278b:	ja     0x42279e
  42278d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42278e:	fstp   TBYTE PTR [esi]
  422790:	jecxz  0x42279b
  422792:	int    0x16
  422794:	xchg   esp,eax
  422795:	(bad)  
  422796:	call   FWORD PTR [ebx-0x78]
  422799:	jae    0x42271c
  42279b:	push   ebp
  42279c:	fdivr  QWORD PTR [edi+0x53650cc1]
  4227a2:	mov    ds:0x6b217847,al
  4227a7:	call   ecx
  4227a9:	ja     0x4227b9
  4227ab:	xchg   ebx,eax
  4227ac:	cmovge edi,DWORD PTR gs:[ecx+eax*8-0x49]
  4227b2:	(bad)  
  4227b4:	jp     0x4227ae
  4227b6:	test   eax,0x232c3996
  4227bb:	int3   
  4227bc:	pop    edi
  4227bd:	mov    DWORD PTR [esi],0xf473e864
  4227c3:	ss cld 
  4227c5:	xor    edi,DWORD PTR [ebp+0x15]
  4227c8:	or     al,0x65
  4227ca:	in     al,dx
  4227cb:	sti    
  4227cc:	sub    al,BYTE PTR ds:0xb600552a
  4227d2:	jp     0x42276b
  4227d4:	push   ss
  4227d5:	sbb    DWORD PTR [ebx+0x6debbc4a],ecx
  4227db:	mov    edi,0x66a3e0d5
  4227e0:	ret    0x9134
  4227e3:	retf   0xcf6d
  4227e6:	ja     0x422851
  4227e8:	mov    eax,ds:0x5a02a88b
  4227ed:	push   ebp
  4227ee:	(bad)  
  4227ef:	push   eax
  4227f0:	mov    al,0xda
  4227f2:	jmp    0x5c8a7872
  4227f7:	pop    ss
  4227f8:	mov    WORD PTR [ebx+0x2c],gs
  4227fb:	lea    edi,[edx-0xfe03897]
  422801:	icebp  
  422802:	scas   al,BYTE PTR es:[edi]
  422803:	pop    es
  422804:	(bad)  
  422805:	std    
  422806:	jmp    0x8dd3:0x89cead78
  42280d:	out    dx,al
  42280e:	popf   
  42280f:	aaa    
  422810:	bound  ebx,QWORD PTR [edi-0x15e71b05]
  422816:	xor    al,0xad
  422818:	not    BYTE PTR [edi+0x52]
  42281b:	or     edi,ecx
  42281d:	xor    DWORD PTR [ecx],ebp
  42281f:	mov    bh,0x46
  422821:	mov    ah,0x92
  422823:	test   al,0xa9
  422825:	or     BYTE PTR ds:0xf6bfbc7c,ch
  42282b:	in     al,dx
  42282c:	pop    ebx
  42282d:	dec    esp
  42282e:	jmp    0x825b985f
  422833:	sahf   
  422834:	mov    ?,WORD PTR [esi+0x663d787]
  42283a:	push   es
  42283b:	ins    DWORD PTR es:[edi],dx
  42283c:	js     0x4227ce
  42283e:	int3   
  42283f:	inc    ebx
  422840:	sbb    edi,DWORD PTR [edx]
  422842:	and    BYTE PTR [ebx-0x79],cl
  422845:	push   es
  422846:	jmp    0xe32e:0x6429
  42284c:	cli    
  42284d:	stos   DWORD PTR es:[edi],eax
  42284e:	je     0x42289f
  422850:	daa    
  422851:	repnz sbb DWORD PTR [edx+0x5eab4b25],edx
  422858:	enter  0xbffb,0x63
  42285c:	sbb    DWORD PTR [edi+0xd],esp
  42285f:	add    DWORD PTR [edi-0x507b3f91],0x28fc7386
  422869:	xlat   BYTE PTR ds:[ebx]
  42286a:	pop    ebp
  42286b:	ss xchg eax,ebp
  42286e:	(bad)  
  42286f:	pop    ebp
  422870:	sub    esi,ecx
  422872:	cmp    esp,DWORD PTR [edx+eax*4-0x42f0be21]
  422879:	pop    edi
  42287a:	pop    ecx
  42287b:	xchg   ecx,eax
  42287c:	xchg   edx,eax
  42287d:	cmp    dl,BYTE PTR [edx-0x51]
  422880:	(bad)  [eax]
  422882:	xchg   esi,eax
  422883:	inc    esp
  422884:	ret    0x7783
  422887:	xchg   esi,eax
  422888:	out    dx,al
  422889:	(bad)  
  42288a:	cmc    
  42288b:	aaa    
  42288c:	(bad)
  422890:	sbb    BYTE PTR [eax-0x31],dl
  422893:	repz fild WORD PTR [ebx-0x7d]
  422897:	mov    esi,0xf994845
  42289c:	out    0x50,eax
  42289e:	pop    edx
  42289f:	jbe    0x4228d3
  4228a1:	sub    DWORD PTR [ebp+0x63],ebx
  4228a4:	cmp    al,0x10
  4228a6:	lock lods al,BYTE PTR ds:[esi]
  4228a8:	imul   ebp,DWORD PTR [edi+eax*2-0x42b423fa],0x6e
  4228b0:	mov    bh,0xe7
  4228b2:	retf   
  4228b3:	stc    
  4228b4:	and    eax,0x14b1fd
  4228b9:	ins    DWORD PTR es:[edi],dx
  4228ba:	pop    esp
  4228bb:	push   ss
  4228bc:	mov    ebp,0x53eed104
  4228c1:	mov    al,0x3d
  4228c3:	sub    bl,BYTE PTR [ebp+edi*4-0x4e]
  4228c7:	ret    
  4228c8:	pop    eax
  4228c9:	icebp  
  4228ca:	call   0xc072:0x3584e153
  4228d1:	out    dx,eax
  4228d2:	push   es
  4228d3:	xchg   ax,ax
  4228d5:	sbb    esi,esi
  4228d7:	mov    bh,0xb5
  4228d9:	cmp    BYTE PTR [eax+0x759576d3],al
  4228df:	mov    WORD PTR [esi-0x7defe4f9],ds
  4228e5:	shl    BYTE PTR [ecx],0xf8
  4228e8:	stos   BYTE PTR es:[edi],al
  4228e9:	or     al,0x74
  4228eb:	dec    ebp
  4228ec:	data16 jg 0x4228af
  4228ef:	mov    bh,0xd3
  4228f1:	mov    dl,0x90
  4228f3:	cwde   
  4228f4:	test   eax,0x59f5ba6e
  4228f9:	xor    BYTE PTR [ecx+esi*1],bl
  4228fc:	mov    ebp,DWORD PTR [ebx+0x5a0c7a70]
  422902:	sbb    edx,DWORD PTR [ecx]
  422904:	(bad)  
  422905:	adc    dl,BYTE PTR [ecx+0x2c840162]
  42290b:	call   FWORD PTR [edx-0x12ccd5b3]
  422911:	mov    cl,0x14
  422913:	scas   eax,DWORD PTR es:[edi]
  422914:	xchg   esi,eax
  422915:	jecxz  0x422996
  422917:	mov    ds:0xedd53c34,al
  42291c:	leave  
  42291d:	adc    DWORD PTR [ebp+0x56],esi
  422920:	push   edx
  422921:	leave  
  422922:	ror    BYTE PTR [edi-0x48],0x64
  422926:	xchg   al,bh
  422928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422929:	sub    BYTE PTR [ebp+0x1],dl
  42292c:	jb     0x422950
  42292e:	sub    eax,0xf8c31e17
  422933:	mov    ebp,0xe477932a
  422938:	sti    
  422939:	xchg   BYTE PTR ds:0xc8bf958,bl
  42293f:	sbb    al,0x2d
  422941:	jo     0x4228d5
  422943:	test   eax,0xa7bc7805
  422948:	repnz push ebx
  42294a:	repz mov edi,DWORD PTR [ebp+0x64]
  42294e:	hlt    
  42294f:	or     DWORD PTR [esi+ecx*2-0x35],0x7d
  422954:	jbe    0x4228ed
  422956:	fist   DWORD PTR [edi-0xd]
  422959:	dec    ebx
  42295a:	rcl    BYTE PTR [ebx],cl
  42295c:	dec    esp
  42295d:	push   esi
  42295e:	xchg   esi,eax
  42295f:	mov    edi,0xdb60af94
  422964:	push   ebp
  422965:	xchg   edx,eax
  422966:	lock sahf 
  422968:	popf   
  422969:	ins    BYTE PTR es:[edi],dx
  42296a:	pusha  
  42296b:	sahf   
  42296c:	sbb    eax,0xeedac31
  422971:	(bad)  
  422972:	mov    ebx,0x28ba1858
  422977:	xchg   edi,eax
  422978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422979:	or     cl,BYTE PTR [ebx]
  42297b:	xchg   edi,eax
  42297c:	loop   0x42299f
  42297e:	ficom  DWORD PTR [edx+0x39]
  422981:	mov    WORD PTR [ebx+0x39cd980a],?
  422987:	loopne 0x42294b
  422989:	ins    BYTE PTR es:[edi],dx
  42298a:	popf   
  42298b:	mov    ebp,0xbb8a360f
  422990:	leave  
  422991:	ss pop edx
  422993:	or     DWORD PTR [ebx],ebp
  422995:	jecxz  0x4229e8
  422997:	or     DWORD PTR [ebx],0xe090cf28
  42299d:	jnp    0x422949
  42299f:	(bad)
  4229a2:	sahf   
  4229a3:	mov    ecx,0xbe293e96
  4229a8:	mov    al,ds:0x7fe63e49
  4229ad:	inc    edx
  4229ae:	fcomi  st,st(7)
  4229b0:	push   edx
  4229b1:	cwde   
  4229b2:	xor    esp,0x24ba4978
  4229b8:	js     0x422955
  4229ba:	fsincos 
  4229bc:	call   0x6046:0xe5b89519
  4229c3:	push   ds
  4229c4:	jle    0x422a23
  4229c6:	dec    edx
  4229c7:	inc    esp
  4229c8:	jg     0x422a14
  4229ca:	mov    ah,0x30
  4229cc:	imul   ecx,DWORD PTR [ecx],0x3e
  4229cf:	hlt    
  4229d0:	sub    bl,0x3f
  4229d3:	ja     0x4229b4
  4229d5:	dec    eax
  4229d6:	call   0x6afd:0xc17558f
  4229dd:	ror    al,0xb3
  4229e0:	and    DWORD PTR [esi-0x68],edx
  4229e3:	jno    0x4229a6
  4229e5:	in     eax,dx
  4229e6:	in     eax,0x18
  4229e8:	sbb    al,0xcf
  4229ea:	xchg   ebp,eax
  4229eb:	mov    BYTE PTR [ebx+0x51],ch
  4229ee:	into   
  4229ef:	adc    eax,0x75c41995
  4229f4:	or     DWORD PTR [esi+0xc7b5432],0x7b
  4229fb:	xchg   BYTE PTR [esi+0x21],dh
  4229fe:	or     BYTE PTR [edi+0xa],dh
  422a01:	js     0x422a56
  422a03:	daa    
  422a04:	dec    edi
  422a05:	test   eax,0xa76eb069
  422a0a:	imul   eax,DWORD PTR [ebp-0x60],0xffffff9a
  422a0e:	fiadd  WORD PTR [edx]
  422a10:	retf   
  422a11:	add    BYTE PTR [ecx+0x65999b0f],bl
  422a17:	in     eax,dx
  422a18:	in     eax,dx
  422a19:	lock jbe 0x4229f4
  422a1c:	push   esp
  422a1d:	jp     0x422a0c
  422a1f:	mov    ch,0xbc
  422a21:	push   ebx
  422a22:	lahf   
  422a23:	test   eax,0xe3be0fd5
  422a28:	mov    al,ds:0xfa2c2416
  422a2d:	neg    BYTE PTR [esp+ebp*4]
  422a30:	(bad)  
  422a31:	cli    
  422a32:	repnz iret 
  422a34:	test   eax,0x629f1f38
  422a39:	loope  0x422a6b
  422a3b:	in     al,0xb8
  422a3d:	mov    al,0xfe
  422a3f:	pop    ss
  422a40:	inc    edx
  422a41:	inc    edx
  422a42:	or     ebx,0xe6ee7d7a
  422a48:	xor    edx,DWORD PTR [esp+esi*2+0x79]
  422a4c:	ds push cs
  422a4e:	mov    ecx,0x844b0e13
  422a53:	ds ja  0x422a30
  422a56:	sub    ebx,DWORD PTR [ebx-0x7e3a731]
  422a5c:	adc    bh,BYTE PTR [esi+ebp*2]
  422a5f:	mov    al,0xf2
  422a61:	and    DWORD PTR [eax+edx*2-0x14],edx
  422a65:	ins    BYTE PTR es:[edi],dx
  422a66:	and    BYTE PTR [edx+ebp*2+0x338c27cc],ah
  422a6d:	pop    ss
  422a6e:	adc    ch,cl
  422a70:	call   0xa9b2:0x1b618acf
  422a77:	jb     0x422ad9
  422a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a7a:	sbb    BYTE PTR [edi],0x40
  422a7d:	jp     0x422a71
  422a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a80:	data16 jnp 0x422abd
  422a83:	cmp    DWORD PTR [ecx+ebx*1],ecx
  422a86:	sub    eax,0xb426c617
  422a8b:	mov    ebp,0xa5ace02e
  422a90:	jno    0x422af5
  422a92:	aaa    
  422a93:	outs   dx,BYTE PTR ds:[esi]
  422a94:	xor    ebp,DWORD PTR [eax+esi*8-0x36dea07c]
  422a9b:	xchg   esi,eax
  422a9c:	(bad)  
  422a9d:	mov    dh,0x9b
  422a9f:	je     0x422a30
  422aa1:	daa    
  422aa2:	sub    eax,0xa34645d3
  422aa7:	or     ebx,ebx
  422aa9:	cmp    edi,edi
  422aab:	and    ah,BYTE PTR [esi-0x7adf3b3c]
  422ab1:	in     al,0xf6
  422ab3:	not    DWORD PTR [esi]
  422ab5:	mov    ebx,DWORD PTR [ebp-0x33]
  422ab8:	mov    edx,0x224eb5dc
  422abd:	dec    esp
  422abe:	jmp    0x422a71
  422ac0:	and    eax,0x43f7b69e
  422ac5:	or     al,0x3a
  422ac7:	repz jl 0x422a83
  422aca:	sbb    bh,BYTE PTR [eax]
  422acc:	mov    bh,0xc
  422ace:	pop    ebx
  422acf:	pop    esi
  422ad0:	or     DWORD PTR [ebx-0x70f2f679],ebx
  422ad6:	ja     0x422b40
  422ad8:	mov    dl,0x14
  422ada:	cwde   
  422adb:	sbb    DWORD PTR es:[edx-0x9],esp
  422adf:	stos   DWORD PTR es:[edi],eax
  422ae0:	inc    BYTE PTR [eax-0x61e59c86]
  422ae6:	fidiv  DWORD PTR [ecx]
  422ae8:	lea    edx,[edx+0x220862c7]
  422aee:	jb     0x422aac
  422af0:	repnz and al,0x18
  422af3:	jg     0x422b27
  422af5:	pushf  
  422af6:	cld    
  422af7:	(bad)  
  422af8:	mov    DWORD PTR [ecx+0x37bf79cd],ebp
  422afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aff:	mov    ds:0x911da275,eax
  422b04:	jnp    0x422b02
  422b06:	or     ah,bh
  422b08:	xor    DWORD PTR [esp+esi*8-0x4f308bc2],ebp
  422b0f:	sbb    BYTE PTR [edi+eiz*1],dl
  422b12:	dec    DWORD PTR [ebx-0x49d5d29d]
  422b18:	mov    ds:0x12305ae1,al
  422b1d:	std    
  422b1e:	push   esi
  422b1f:	mov    ecx,0xe2874586
  422b24:	lock adc al,dh
  422b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b28:	test   BYTE PTR [edi-0x3ac261db],0xce
  422b2f:	push   0x1f
  422b31:	clc    
  422b32:	mov    DWORD PTR [ebx],ebx
  422b34:	cmp    bl,cl
  422b36:	inc    ecx
  422b37:	sub    ebx,DWORD PTR [ebx]
  422b39:	mov    edi,DWORD PTR gs:[eax+ebp*4-0x5843cc3a]
  422b41:	ret    
  422b42:	(bad)
  422b46:	(bad)  
  422b47:	test   eax,0xba00af27
  422b4c:	inc    ebp
  422b4d:	cmp    eax,0x461edff6
  422b52:	xchg   DWORD PTR [ecx-0x3b],esp
  422b55:	sub    DWORD PTR [edi],edx
  422b57:	cmp    ebp,edx
  422b59:	sub    BYTE PTR [eax-0x80],0x4d
  422b5d:	mov    edx,0xdf65d9d7
  422b62:	inc    ebx
  422b63:	cmp    eax,0x77aa2222
  422b68:	sbb    cl,bh
  422b6a:	test   al,0xc8
  422b6c:	xchg   edi,eax
  422b6d:	push   esp
  422b6e:	sub    al,0x13
  422b70:	adc    al,0x60
  422b72:	inc    edi
  422b73:	ror    BYTE PTR [edi],cl
  422b75:	mov    ds:0x93848aad,eax
  422b7a:	pop    ebp
  422b7b:	sbb    al,0x34
  422b7d:	adc    BYTE PTR [ebx+0x9],ah
  422b80:	scas   al,BYTE PTR es:[edi]
  422b81:	sub    DWORD PTR [edx-0x4af5b506],ebp
  422b87:	stos   BYTE PTR es:[edi],al
  422b88:	adc    ecx,edx
  422b8a:	sbb    eax,0x8ee567c4
  422b8f:	or     dh,BYTE PTR [edi]
  422b91:	xchg   ebp,eax
  422b92:	out    0x4,al
  422b94:	enter  0x32e,0x1d
  422b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b99:	jge    0x422bd2
  422b9b:	fidivr DWORD PTR [ecx+0x1820758a]
  422ba1:	(bad)  
  422ba2:	jecxz  0x422b7d
  422ba4:	inc    esi
  422ba5:	or     edx,DWORD PTR [ecx+edx*4-0x41]
  422ba9:	sbb    eax,0x141d373b
  422bae:	adc    ebx,esp
  422bb0:	add    BYTE PTR [eax+0x6d],0xac
  422bb4:	inc    esi
  422bb5:	xchg   esi,eax
  422bb6:	icebp  
  422bb7:	jns    0x422bbe
  422bb9:	inc    BYTE PTR [edx]
  422bbb:	nop
  422bbc:	sbb    edi,DWORD PTR [ebx-0x31fbcfec]
  422bc2:	jmp    0x422bbb
  422bc4:	mov    cl,0x15
  422bc6:	test   eax,0xad6035a0
  422bcb:	mov    cl,0x10
  422bcd:	loop   0x422bc5
  422bcf:	les    ebp,FWORD PTR ds:0x9bf671c7
  422bd5:	pop    edi
  422bd6:	iret   
  422bd7:	(bad)  
  422bd8:	jns    0x422bf9
  422bda:	ins    BYTE PTR es:[edi],dx
  422bdb:	std    
  422bdc:	bound  esi,QWORD PTR [esi]
  422bde:	xchg   esi,eax
  422bdf:	into   
  422be0:	rep stos DWORD PTR es:[edi],eax
  422be2:	sub    al,0x4b
  422be4:	adc    BYTE PTR [ecx-0x4805f09d],0x7e
  422beb:	pusha  
  422bec:	(bad)  
  422bed:	and    DWORD PTR [ecx-0x1f],ebp
  422bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bf1:	pop    eax
  422bf2:	imul   edx,DWORD PTR [ecx],0xdf75a10c
  422bf8:	pop    ss
  422bf9:	lea    edx,[edx+0x70ae611e]
  422bff:	mov    ecx,DWORD PTR [ecx-0xe5a51f4]
  422c05:	in     al,0x47
  422c07:	mov    al,0x9a
  422c09:	mov    dl,0xd8
  422c0b:	xchg   DWORD PTR [ebp-0x3fa412dd],ecx
  422c11:	out    0x48,al
  422c13:	push   cs
  422c14:	sbb    DWORD PTR [esi+0x20],esi
  422c17:	mov    ebp,0x5cd5492
  422c1c:	retf   
  422c1d:	fadd   DWORD PTR [ebp-0x2903048b]
  422c23:	in     eax,dx
  422c24:	xchg   edx,eax
  422c25:	cmp    DWORD PTR [edi],eax
  422c27:	lahf   
  422c28:	fwait
  422c29:	sbb    eax,0x3f82d708
  422c2e:	add    ebp,DWORD PTR [edi+0x4d]
  422c31:	mov    ebp,DWORD PTR [edi]
  422c33:	mov    cl,0xd4
  422c35:	and    al,0x8b
  422c37:	out    0x9,eax
  422c39:	js     0x422c72
  422c3b:	xchg   DWORD PTR ds:0xebb6b114,ebp
  422c41:	aad    0x92
  422c43:	cmp    dl,BYTE PTR [ebx-0x6c]
  422c46:	int    0x19
  422c48:	adc    eax,0x86262011
  422c4d:	jo     0x422ca4
  422c4f:	and    ebp,DWORD PTR [eax+0x58]
  422c52:	arpl   WORD PTR [ebx-0xbc1bf44],bx
  422c58:	push   ds
  422c59:	cmc    
  422c5a:	add    BYTE PTR [ecx+0x5df64ef2],0xa1
  422c61:	xor    DWORD PTR [ebx+0x2],eax
  422c64:	adc    eax,0x314e9de4
  422c69:	pop    esp
  422c6a:	jge    0x422c8e
  422c6c:	add    DWORD PTR [edx+0x46cec1d1],edx
  422c72:	or     ebp,DWORD PTR [ecx+0x7ba63b0f]
  422c78:	fs popa 
  422c7a:	in     al,0x26
  422c7c:	and    al,0xc5
  422c7e:	das    
  422c7f:	adc    DWORD PTR [eax-0x1f],eax
  422c82:	popa   
  422c83:	push   es
  422c84:	test   edx,edx
  422c86:	shr    DWORD PTR [edx],1
  422c88:	div    bh
  422c8a:	scas   al,BYTE PTR es:[edi]
  422c8b:	push   ebp
  422c8c:	aas    
  422c8d:	sub    eax,ebp
  422c8f:	pop    ebx
  422c90:	aad    0xec
  422c92:	out    dx,al
  422c93:	jnp    0x422ce0
  422c95:	clc    
  422c96:	scas   al,BYTE PTR es:[edi]
  422c97:	rol    dh,cl
  422c99:	pop    eax
  422c9a:	cdq    
  422c9b:	cli    
  422c9c:	(bad)  
  422c9d:	jmp    0x130a:0x881188db
  422ca4:	pop    ds
  422ca5:	repz sahf 
  422ca7:	push   ebp
  422ca8:	retf   
  422ca9:	push   esi
  422caa:	sub    BYTE PTR [edi-0x41],ch
  422cad:	pop    es
  422cae:	add    esi,DWORD PTR [ecx+edi*8-0x7b092f08]
  422cb5:	(bad)  
  422cb7:	mov    esi,0xe6f74ee9
  422cbc:	add    esi,DWORD PTR [esi-0x42]
  422cbf:	je     0x422c9c
  422cc1:	xor    al,0x33
  422cc3:	shl    esp,cl
  422cc5:	mov    ds:0x1f9693c6,eax
  422cca:	pop    edi
  422ccb:	sub    BYTE PTR [esp+eax*4-0x2f0ac0ed],dl
  422cd2:	mov    ds:0x5a65ca24,eax
  422cd7:	inc    edi
  422cd8:	jnp    0x422c68
  422cda:	mov    edx,0x162a0522
  422cdf:	mov    edi,0xeb373b0b
  422ce4:	mov    dh,0xb
  422ce6:	retf   
  422ce7:	imul   edx,ebp,0x90b84687
  422ced:	in     al,dx
  422cee:	adc    ecx,ecx
  422cf0:	sbb    dl,BYTE PTR [edi+0x59cf2128]
  422cf6:	adc    dh,BYTE PTR [eax+0x3]
  422cf9:	jo     0x422c90
  422cfb:	out    dx,eax
  422cfc:	pop    eax
  422cfd:	cmp    edx,edx
  422cff:	mov    WORD PTR ds:0xbf45157b,gs
  422d05:	repnz pushf 
  422d07:	call   0xf390:0x3afdb3a8
  422d0e:	sub    al,0xdb
  422d10:	stos   DWORD PTR es:[edi],eax
  422d11:	push   edx
  422d12:	xor    al,0xc9
  422d14:	fucomp st(0)
  422d16:	push   esp
  422d17:	mov    esp,eax
  422d19:	adc    eax,0xe05a7284
  422d1e:	iret   
  422d1f:	pop    eax
  422d20:	call   0x6888b348
  422d25:	and    al,0x19
  422d27:	ss mov esp,0xbda35162
  422d2d:	in     al,dx
  422d2e:	clc    
  422d2f:	pop    edx
  422d30:	inc    edx
  422d31:	aas    
  422d32:	jle    0x422d64
  422d34:	mov    eax,DWORD PTR [edi-0x5a662521]
  422d3a:	(bad)  
  422d3c:	pop    edi
  422d3d:	ret    0x2328
  422d40:	mov    edi,0x5cc53c7c
  422d45:	inc    esi
  422d46:	add    eax,0x14fd9add
  422d4b:	scas   eax,DWORD PTR es:[edi]
  422d4c:	push   esi
  422d4d:	scas   al,BYTE PTR es:[edi]
  422d4e:	outs   dx,BYTE PTR ds:[esi]
  422d4f:	jb     0x422d39
  422d51:	add    DWORD PTR [edx],esp
  422d53:	aam    0x5a
  422d55:	push   ecx
  422d56:	cmc    
  422d57:	jg     0x422d52
  422d59:	sbb    DWORD PTR [eax-0x1c4ae737],ecx
  422d5f:	lahf   
  422d60:	push   ebp
  422d61:	test   esi,ecx
  422d63:	jae    0x422d9d
  422d65:	add    BYTE PTR [ecx+0x743d2fa1],bh
  422d6b:	push   DWORD PTR [edi+0x1199e536]
  422d71:	loope  0x422d1b
  422d73:	leave  
  422d74:	mul    esp
  422d76:	pop    esi
  422d77:	adc    eax,DWORD PTR ds:0x8042654e
  422d7d:	icebp  
  422d7e:	dec    eax
  422d7f:	(bad)  
  422d80:	repnz std 
  422d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d84:	sub    bh,ah
  422d86:	mov    ah,0x4c
  422d88:	and    dh,BYTE PTR [ecx-0x49ca7a81]
  422d8e:	or     BYTE PTR [esi],bh
  422d90:	inc    esp
  422d91:	sbb    DWORD PTR [bp+di+0x38a1],eax
  422d96:	mov    ah,0x87
  422d98:	inc    eax
  422d99:	call   0x2ba9:0xef68972d
  422da0:	mov    ch,0xe3
  422da2:	clc    
  422da3:	push   cs
  422da4:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  422da6:	addr16 (bad) 
  422da8:	mov    ah,0xb4
  422daa:	outs   dx,BYTE PTR ds:[esi]
  422dab:	sub    al,ch
  422dad:	push   edi
  422dae:	sub    edx,DWORD PTR [edi]
  422db0:	jnp    0x422de1
  422db2:	cwde   
  422db3:	aad    0xa1
  422db5:	push   esp
  422db6:	add    eax,0x8c3a99ef
  422dbb:	sbb    BYTE PTR [ecx],dh
  422dbd:	adc    BYTE PTR [ebx],bl
  422dbf:	fisubr DWORD PTR [esi+0x6606044d]
  422dc5:	push   ss
  422dc6:	clc    
  422dc7:	je     0x422dd5
  422dc9:	pop    edi
  422dca:	fsubp  st(6),st
  422dcc:	mov    esp,0x71155622
  422dd1:	inc    ecx
  422dd2:	xchg   BYTE PTR [eax+0x6e7ac1b4],bh
  422dd8:	int3   
  422dd9:	mov    ebx,gs
  422ddb:	int    0xa3
  422ddd:	(bad)  
  422dde:	jl     0x422e05
  422de0:	jl     0x422dc6
  422de2:	and    edx,0x25
  422de5:	cmp    ecx,esi
  422de7:	xor    BYTE PTR [ebx-0xf],0x12
  422deb:	push   cs
  422dec:	dec    ebp
  422ded:	sub    esi,DWORD PTR [edx-0x3d]
  422df0:	and    al,al
  422df2:	sub    esp,DWORD PTR [eax]
  422df4:	mov    WORD PTR [eax-0x32],?
  422df7:	fwait
  422df8:	ins    BYTE PTR es:[edi],dx
  422df9:	mov    bh,0xf0
  422dfb:	aaa    
  422dfc:	add    al,0x87
  422dfe:	mov    eax,ds:0x6f4a644c
  422e03:	pop    esp
  422e04:	cmp    BYTE PTR [edx],cl
  422e06:	pushf  
  422e07:	(bad)  
  422e08:	imul   ebx,DWORD PTR [eax],0xfeac6d65
  422e0e:	jl     0x422e30
  422e10:	pop    ss
  422e11:	or     al,0xdc
  422e13:	sub    BYTE PTR [edx+ebx*8],0xfa
  422e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e18:	xlat   BYTE PTR ds:[ebx]
  422e19:	xor    edx,DWORD PTR [ecx]
  422e1b:	push   edx
  422e1c:	jbe    0x422e19
  422e1e:	pop    edx
  422e1f:	mov    bl,0x74
  422e21:	(bad)  
  422e22:	in     eax,dx
  422e23:	add    BYTE PTR [edi],cl
  422e25:	sub    eax,0x31753da8
  422e2a:	scas   al,BYTE PTR es:[edi]
  422e2b:	inc    esi
  422e2c:	lock jns 0x422e6b
  422e2f:	iret   
  422e30:	xor    ebx,ebp
  422e32:	jmp    0x422e76
  422e34:	inc    esi
  422e35:	jge    0x422dba
  422e37:	pop    DWORD PTR ds:0x6ddba92c
  422e3d:	add    BYTE PTR [edx],bl
  422e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e40:	mov    ebx,0xea204995
  422e45:	ins    BYTE PTR es:[edi],dx
  422e46:	mov    bh,BYTE PTR [eax-0x442faa54]
  422e4c:	cmp    eax,0x7cdc537a
  422e51:	lods   eax,DWORD PTR ds:[esi]
  422e52:	popf   
  422e53:	stc    
  422e54:	sbb    eax,0x5be81075
  422e59:	(bad)  
  422e5a:	repnz sub BYTE PTR [edx-0x4],ch
  422e5e:	mov    ds:0x3e967b57,al
  422e63:	js     0x422e80
  422e65:	paddsw mm5,QWORD PTR [esi]
  422e68:	mov    al,0xd4
  422e6a:	test   eax,0x54800c25
  422e6f:	xchg   esi,eax
  422e70:	xchg   edx,edi
  422e72:	imul   ebp,DWORD PTR [ebp-0x330c6b44],0xffffffae
  422e79:	rol    DWORD PTR [ebp+0x60f4f704],cl
  422e7f:	mov    ds:0x1c86e1c3,al
  422e84:	mov    eax,?
  422e86:	fsqrt  
  422e88:	mov    ch,0x4b
  422e8a:	jp     0x422eb2
  422e8c:	adc    al,0x89
  422e8e:	jbe    0x422e35
  422e90:	mov    dl,cl
  422e92:	scas   al,BYTE PTR es:[edi]
  422e93:	mov    cl,0x8b
  422e95:	mov    BYTE PTR [ebx+ebp*2],bl
  422e98:	rcl    al,0xf3
  422e9b:	push   0x87c88d73
  422ea0:	lock jge 0x422e3e
  422ea3:	adc    DWORD PTR [eax+0x632ec24],eax
  422ea9:	mov    ah,0xba
  422eab:	jo     0x422ef8
  422ead:	dec    ecx
  422eae:	adc    al,0xc9
  422eb0:	test   BYTE PTR [ecx+0x14],0x32
  422eb4:	test   DWORD PTR [eax-0x69179621],0x11885497
  422ebe:	sahf   
  422ebf:	cdq    
  422ec0:	fbld   TBYTE PTR [edx+0x5c]
  422ec3:	push   edx
  422ec4:	enter  0xccd5,0x76
  422ec8:	jmp    0xd4a2:0x6cb92398
  422ecf:	(bad)  
  422ed0:	adc    BYTE PTR [edx],ah
  422ed2:	aam    0x78
  422ed4:	ror    BYTE PTR ds:0xe43cd719,cl
  422eda:	hlt    
  422edb:	add    DWORD PTR [ebp-0x7],eax
  422ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422edf:	add    al,0xed
  422ee1:	fidivr WORD PTR [edx]
  422ee3:	xor    al,0xc1
  422ee5:	das    
  422ee6:	xlat   BYTE PTR ds:[ebx]
  422ee7:	pop    ecx
  422ee8:	retf   
  422ee9:	or     DWORD PTR [esi-0x2c2d9e49],eax
  422eef:	dec    edi
  422ef0:	cli    
  422ef1:	xchg   ebp,eax
  422ef2:	and    DWORD PTR [eax+0x79073380],0xffffffaa
  422ef9:	test   DWORD PTR [edi-0x8f40dcb],esi
  422eff:	loope  0x422f7f
  422f01:	adc    DWORD PTR [ecx-0x3829a485],esi
  422f07:	mov    fs,WORD PTR [ecx+0x66a61170]
  422f0d:	ins    BYTE PTR es:[edi],dx
  422f0e:	sbb    eax,0xcbb14da9
  422f13:	lea    ebx,[esi]
  422f15:	jmp    0x422f51
  422f17:	int    0x7e
  422f19:	fwait
  422f1a:	jmp    0x4469:0x76b58d88
  422f21:	push   ebp
  422f22:	jns    0x422f0e
  422f24:	pop    ss
  422f25:	mov    edi,0x9c0b109f
  422f2a:	adc    bl,BYTE PTR ds:0x32731a1c
  422f30:	test   al,0x69
  422f32:	add    eax,DWORD PTR [edx]
  422f34:	lahf   
  422f35:	ds and al,0x71
  422f38:	fcom   QWORD PTR [edx+0x10]
  422f3b:	xchg   ecx,eax
  422f3c:	fst    QWORD PTR [esp+eax*4]
  422f3f:	mov    ch,0xad
  422f41:	daa    
  422f42:	nop
  422f43:	ins    DWORD PTR es:[edi],dx
  422f44:	push   esi
  422f45:	fld    st(1)
  422f47:	adc    dl,BYTE PTR [eax+0x380e162f]
  422f4d:	sbb    eax,DWORD PTR [edi]
  422f4f:	push   edi
  422f50:	ret    
  422f51:	xchg   edi,eax
  422f52:	mov    DWORD PTR [edi+eax*2],eax
  422f55:	xor    eax,0xbf92738a
  422f5a:	iret   
  422f5b:	pushf  
  422f5c:	jmp    DWORD PTR [ebx+edx*4+0x4]
  422f60:	in     al,dx
  422f61:	pop    ds
  422f62:	int3   
  422f63:	sahf   
  422f64:	pop    edx
  422f65:	mov    al,0x56
  422f67:	xor    DWORD PTR [ecx],0x2c96f463
  422f6d:	dec    ebx
  422f6e:	leave  
  422f6f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  422f71:	das    
  422f72:	mov    esi,0x443a4603
  422f77:	bound  edx,QWORD PTR [edi+0x7f]
  422f7a:	mov    BYTE PTR [ebx-0x5c],dl
  422f7d:	gs jo  0x422f77
  422f80:	sbb    DWORD PTR [eax-0x720536bf],edx
  422f86:	aaa    
  422f87:	adc    DWORD PTR gs:[edx],esi
  422f8a:	push   cs
  422f8b:	xchg   edx,eax
  422f8c:	test   BYTE PTR [eax],dh
  422f8e:	sbb    BYTE PTR [ebx+0x2eaeba58],bl
  422f94:	inc    esi
  422f95:	enter  0x25f5,0x4d
  422f99:	dec    ebx
  422f9a:	(bad)  
  422f9c:	mov    edx,0x2312663e
  422fa1:	pop    ss
  422fa2:	mov    BYTE PTR [esi+0x78],dl
  422fa5:	adc    eax,0x792d177
  422faa:	mov    ds:0xa03f73e8,eax
  422faf:	lods   al,BYTE PTR ds:[esi]
  422fb0:	add    eax,0xfeb82e52
  422fb5:	loopne 0x422fe7
  422fb7:	pop    ebp
  422fb8:	xchg   edi,eax
  422fb9:	add    esi,DWORD PTR ds:0xa460acb3
  422fbf:	jbe    0x42301d
  422fc1:	and    eax,0xcf8d1a35
  422fc6:	clc    
  422fc7:	fdiv   DWORD PTR [edi+ebx*8-0x3d8a514d]
  422fce:	retf   
  422fcf:	and    edx,DWORD PTR [eax+0x58]
  422fd2:	sub    al,0x13
  422fd4:	shr    DWORD PTR [ecx+0x48],1
  422fd7:	xor    al,BYTE PTR [ebp-0x17]
  422fda:	popf   
  422fdb:	sbb    eax,DWORD PTR [edx+0x44a4e7e]
  422fe1:	inc    edx
  422fe2:	sbb    al,0x6c
  422fe4:	mov    ecx,0x45c9dd68
  422fe9:	add    DWORD PTR [edi],ebp
  422feb:	push   eax
  422fec:	stos   DWORD PTR es:[edi],eax
  422fed:	ds dec eax
  422fef:	xchg   edi,eax
  422ff0:	inc    edi
  422ff1:	inc    ebp
  422ff2:	(bad)  
  422ff3:	adc    al,0x7d
  422ff5:	lods   al,BYTE PTR ds:[esi]
  422ff6:	lea    edi,[esi-0x25]
  422ff9:	ins    BYTE PTR es:[edi],dx
  422ffa:	(bad)  
  422ffb:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ffd:	adc    dl,dl
  422fff:	in     al,dx
  423000:	lds    edi,FWORD PTR [esi-0x48]
  423003:	pop    ebp
  423004:	pusha  
  423005:	jle    0x42307d
  423007:	sti    
  423008:	jmp    0x42305f
  42300a:	test   DWORD PTR [esi-0x1b],esp
  42300d:	xor    eax,0x2fe6ec1b
  423012:	lea    esp,[ebp-0x41bbeafc]
  423018:	aaa    
  423019:	(bad)  
  42301a:	lock xlat BYTE PTR ds:[ebx]
  42301c:	or     ch,dl
  42301e:	mov    dl,0xea
  423020:	fisubr DWORD PTR [ecx]
  423022:	or     dh,BYTE PTR [ebx+0x4388a02e]
  423028:	add    eax,0x8a5e76c2
  42302e:	int    0xf2
  423030:	lds    esi,FWORD PTR [esi+0x21]
  423033:	adc    bh,dh
  423035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423036:	add    bl,BYTE PTR ds:0x3718d0fb
  42303c:	pop    ds
  42303d:	and    BYTE PTR [ebx-0x6a],dl
  423040:	cmc    
  423041:	sar    al,cl
  423043:	pushf  
  423044:	dec    eax
  423045:	enter  0x45e,0x8d
  423049:	mov    dl,0x53
  42304b:	xor    al,0x70
  42304d:	call   0x221acc4d
  423052:	sahf   
  423053:	test   ebp,esi
  423055:	sahf   
  423056:	mov    cl,0x4d
  423058:	call   0xe70d:0x7760452c
  42305f:	sub    ecx,DWORD PTR ds:0xb0026cb7
  423065:	xlat   BYTE PTR ds:[ebx]
  423066:	fprem  
  423068:	jg     0x423071
  42306a:	jns    0x4230e3
  42306c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42306d:	adc    al,0x28
  42306f:	mov    DWORD PTR [eax-0xf],esp
  423072:	cmp    al,0xed
  423074:	je     0x423061
  423076:	call   0xcb6a31fd
  42307b:	bound  ecx,QWORD PTR [ebx]
  42307d:	jo     0x423026
  42307f:	std    
  423080:	mov    cl,0xa0
  423082:	pop    esp
  423083:	jp     0x42302a
  423085:	push   ebx
  423086:	clc    
  423087:	add    BYTE PTR [ebp-0x28],dh
  42308a:	divps  xmm3,XMMWORD PTR [esi]
  42308d:	inc    edx
  42308e:	xchg   DWORD PTR [ebx],esi
  423090:	jne    0x423073
  423092:	jmp    0x1514:0x1b6a3df0
  423099:	or     edi,edi
  42309b:	cmp    al,BYTE PTR [edx+0x6f8ad0aa]
  4230a1:	femms  
  4230a3:	sahf   
  4230a4:	loopne 0x423069
  4230a6:	shl    ebx,1
  4230a8:	mov    ecx,0xb7f25242
  4230ad:	xchg   edi,eax
  4230ae:	inc    esp
  4230af:	jne    0x4230b0
  4230b1:	xor    eax,0xb5d20cee
  4230b6:	lahf   
  4230b7:	out    dx,al
  4230b8:	ins    DWORD PTR es:[edi],dx
  4230b9:	jnp    0x423112
  4230bb:	jmp    0x423123
  4230bd:	popf   
  4230be:	(bad)  
  4230bf:	out    0xb9,eax
  4230c1:	and    ebp,esi
  4230c3:	mov    al,ds:0xae002b8e
  4230c8:	in     eax,dx
  4230c9:	mov    edi,ebx
  4230cb:	in     al,0xe9
  4230cd:	test   DWORD PTR [ecx-0x50],edi
  4230d0:	xor    esp,DWORD PTR [esi+eax*2]
  4230d3:	xchg   edx,eax
  4230d4:	dec    ebx
  4230d5:	nop
  4230d6:	stc    
  4230d7:	mov    eax,0xed6c8e74
  4230dc:	inc    edx
  4230dd:	scas   al,BYTE PTR es:[edi]
  4230de:	jmp    0xbf61:0xd9aed6
  4230e5:	aam    0x68
  4230e7:	mov    ds:0xb3650a9f,eax
  4230ec:	je     0x42311c
  4230ee:	jle    0x42312a
  4230f0:	popf   
  4230f1:	inc    ecx
  4230f2:	call   0x4cf0584a
  4230f7:	xor    al,0x7e
  4230f9:	xchg   edx,eax
  4230fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230fb:	enter  0x8e7c,0xc8
  4230ff:	sbb    DWORD PTR [ebx+0x5c27caae],0xfffffffa
  423106:	outs   dx,DWORD PTR ds:[esi]
  423107:	jg     0x423119
  423109:	gs inc esi
  42310b:	cmp    ah,BYTE PTR [edx]
  42310d:	and    DWORD PTR [edx-0x4e],ecx
  423110:	imul   esi,ebp,0xffffff8e
  423113:	dec    esi
  423114:	xchg   esi,eax
  423115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423116:	mov    dh,0xcc
  423118:	mov    edx,0xba97f536
  42311d:	add    DWORD PTR [esi-0x76682c4d],0x66d7aab6
  423127:	retf   0x5986
  42312a:	out    0xf9,al
  42312c:	or     bh,bl
  42312e:	jbe    0x423199
  423130:	inc    ebx
  423131:	mov    eax,0xecd9525c
  423136:	add    al,BYTE PTR [esi]
  423138:	repnz arpl WORD PTR [esi+0x6a],si
  42313c:	jecxz  0x423130
  42313e:	mov    ds:0xf80139a9,eax
  423143:	xor    dl,BYTE PTR [ecx+0x1a]
  423146:	sbb    BYTE PTR [edi+0x7a3a7b58],0x0
  42314d:	mov    DWORD PTR [ebp+0x505b616e],edi
  423153:	mov    eax,0x5bd32833
  423158:	outs   dx,BYTE PTR ss:[esi]
  42315a:	xchg   ecx,eax
  42315b:	xor    DWORD PTR [edi+0x116e19c5],edi
  423161:	pop    esi
  423162:	xlat   BYTE PTR ds:[ebx]
  423163:	dec    DWORD PTR [ecx-0x6a8800d5]
  423169:	push   ss
  42316a:	fisubr WORD PTR [edi+0x7a]
  42316d:	ins    BYTE PTR es:[edi],dx
  42316e:	dec    ecx
  42316f:	adc    eax,0x44f6b332
  423174:	xor    dh,BYTE PTR ds:0x31fc6132
  42317a:	xchg   edi,eax
  42317b:	test   eax,0x47f00a1a
  423180:	jmp    0x42316d
  423182:	je     0x42313b
  423184:	out    0xaf,al
  423186:	dec    esp
  423187:	dec    eax
  423188:	cmp    eax,0xd5430719
  42318d:	push   ds
  42318e:	pop    es
  42318f:	push   edx
  423190:	ret    0x28c4
  423193:	xchg   BYTE PTR [edx-0x77],ch
  423196:	pop    ds
  423197:	jp     0x4231a9
  423199:	in     eax,dx
  42319a:	pusha  
  42319b:	mov    ecx,0xc068c3cf
  4231a0:	retf   0x309a
  4231a3:	xchg   edx,eax
  4231a4:	mov    ecx,0x9bd2b27a
  4231a9:	mov    cl,0xab
  4231ab:	mov    bl,0xd1
  4231ad:	sar    DWORD PTR [edx],0x32
  4231b0:	fdiv   QWORD PTR [edi-0x36bce89b]
  4231b6:	inc    edx
  4231b7:	xor    edi,edx
  4231b9:	jle    0x42318d
  4231bb:	popf   
  4231bc:	scas   eax,DWORD PTR es:[edi]
  4231bd:	pop    ds
  4231be:	jmp    0x4231b7
  4231c0:	jl     0x423152
  4231c2:	stos   DWORD PTR es:[edi],eax
  4231c3:	mov    dl,0xee
  4231c5:	sbb    BYTE PTR [ebx-0x22fe17eb],0x20
  4231cc:	adc    bl,BYTE PTR [esi+0x3aa119bd]
  4231d2:	jp     0x4231c2
  4231d4:	xchg   BYTE PTR [ebx+0x37],bl
  4231d7:	iret   
  4231d8:	jmp    0x4231e1
  4231da:	cmp    eax,0x9b5af9f0
  4231df:	sub    eax,0x8825583c
  4231e4:	add    eax,0xf31ed08d
  4231e9:	ror    dl,0x79
  4231ec:	cld    
  4231ed:	in     al,dx
  4231ee:	sbb    edx,DWORD PTR [eax+0x4d27e19e]
  4231f4:	cdq    
  4231f5:	pop    ds
  4231f6:	mov    bh,0xec
  4231f8:	cmc    
  4231f9:	adc    dl,ch
  4231fb:	jo     0x4231fa
  4231fd:	jno    0x423200
  4231ff:	sti    
  423200:	xchg   esi,eax
  423201:	gs jns 0x4231f1
  423204:	adc    eax,0x5df33a62
  423209:	int3   
  42320a:	dec    esi
  42320b:	and    ecx,DWORD PTR [edx]
  42320d:	mov    esi,0xb09bf71c
  423212:	fwait
  423213:	push   ss
  423214:	(bad)  
  423216:	add    DWORD PTR [eax-0x53],esp
  423219:	fild   QWORD PTR [ebp+0x37c0e7a]
  42321f:	enter  0xbfe6,0x6
  423223:	mov    bl,0xca
  423225:	push   ebp
  423226:	js     0x4231cf
  423228:	daa    
  423229:	jnp    0x4231e2
  42322b:	jno    0x423239
  42322d:	sti    
  42322e:	ds mov ebx,0x8f312e75
  423234:	(bad)
  423238:	add    eax,0x2d8ab8c5
  42323d:	(bad)  
  42323e:	push   0xffffffcc
  423240:	mov    edx,0xdbdf978a
  423245:	and    al,0xae
  423247:	(bad)  
  423248:	mov    al,0xb8
  42324a:	(bad)  [ebx]
  42324c:	jmp    0x4232b2
  42324e:	jns    0x423220
  423250:	jmp    esi
  423252:	out    dx,al
  423253:	mov    ecx,0x381f0ffe
  423258:	cmp    eax,0x31bef41
  42325d:	push   ecx
  42325e:	or     eax,0xdfa32fa3
  423263:	push   edi
  423264:	es test al,0x2
  423267:	or     dh,ah
  423269:	xchg   BYTE PTR [esi-0x1d075fb1],bl
  42326f:	fucompp 
  423271:	jno    0x423279
  423273:	repnz int3 
  423275:	call   DWORD PTR [ecx+esi*1-0x52983627]
  42327c:	sub    al,0xda
  42327e:	cmp    eax,esp
  423280:	adc    bh,BYTE PTR [edi+0x53]
  423283:	je     0x423210
  423285:	or     BYTE PTR [esi-0x66a418],ch
  42328b:	(bad)  
  42328c:	fstp   DWORD PTR [ebx+0x2a0080c]
  423292:	pushf  
  423293:	adc    edi,edx
  423295:	mov    DWORD PTR [eax+0x6eb5401d],edi
  42329b:	ret    0x866f
  42329e:	sub    eax,0xcd5f1d5a
  4232a3:	fdiv   DWORD PTR ds:0x333643de
  4232a9:	push   eax
  4232aa:	in     eax,0x71
  4232ac:	sti    
  4232ad:	pop    edx
  4232ae:	sar    DWORD PTR [esi],cl
  4232b0:	dec    ebp
  4232b1:	adc    ecx,DWORD PTR [edx]
  4232b3:	push   ecx
  4232b4:	jmp    0x5110:0x7fbf9fe1
  4232bb:	stc    
  4232bc:	nop
  4232bd:	or     cl,dh
  4232bf:	call   0x158a:0xa9aad023
  4232c6:	lock lea esi,[edi]
  4232c9:	inc    edi
  4232ca:	mov    al,0x8b
  4232cc:	mov    ch,BYTE PTR [esi+0x11]
  4232cf:	outs   dx,BYTE PTR ds:[esi]
  4232d0:	push   ds
  4232d1:	in     al,0xcf
  4232d3:	sbb    DWORD PTR [ebx-0x43bd5f02],edx
  4232d9:	fstp   QWORD PTR [edi]
  4232db:	in     al,dx
  4232dc:	xchg   edi,eax
  4232dd:	mov    edx,ecx
  4232df:	adc    cl,al
  4232e1:	and    BYTE PTR [edi],0x80
  4232e4:	mov    esi,gs
  4232e6:	sahf   
  4232e7:	mov    cs,ecx
  4232e9:	cld    
  4232ea:	outs   dx,DWORD PTR ds:[esi]
  4232eb:	inc    edi
  4232ec:	sahf   
  4232ed:	sti    
  4232ee:	or     esi,ecx
  4232f0:	(bad)  
  4232f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232f2:	lods   al,BYTE PTR ds:[esi]
  4232f3:	ins    BYTE PTR es:[edi],dx
  4232f4:	repnz sub dh,0x7d
  4232f8:	fs and al,0xee
  4232fb:	add    DWORD PTR [edx-0xd90ca56],0x416d3505
  423305:	cmp    eax,DWORD PTR [edx-0x36]
  423308:	xchg   ecx,eax
  423309:	pop    ecx
  42330a:	mov    al,0xb2
  42330c:	sti    
  42330d:	shr    BYTE PTR [edi],1
  42330f:	nop
  423310:	mov    ah,0x4a
  423312:	jno    0x423353
  423314:	push   ebx
  423315:	sbb    DWORD PTR [ecx+0x69],ebx
  423318:	loop   0x42334f
  42331a:	pop    ds
  42331b:	xor    ebp,ebp
  42331d:	scas   eax,DWORD PTR es:[edi]
  42331e:	xchg   esi,eax
  42331f:	jl     0x423364
  423321:	ror    BYTE PTR [ebp-0x3bb258b],cl
  423327:	cmp    DWORD PTR [ebx-0x28],esp
  42332a:	repnz mov esi,0x6a140062
  423330:	hlt    
  423331:	scas   al,BYTE PTR es:[edi]
  423332:	bt     DWORD PTR gs:[ecx+edx*2+0x1c],ebp
  423338:	daa    
  423339:	add    al,0x81
  42333b:	stc    
  42333c:	out    dx,al
  42333d:	or     eax,0xc981ea41
  423342:	add    al,0x97
  423344:	sbb    esp,DWORD PTR [edx]
  423346:	out    0x5f,al
  423348:	daa    
  423349:	jns    0x423395
  42334b:	add    esi,DWORD PTR [ecx]
  42334d:	xor    edx,DWORD PTR [ecx+0x4d2e3eb]
  423353:	fwait
  423354:	xor    al,0x6c
  423356:	sub    BYTE PTR [esi+ebp*1-0x3c58b888],dl
  42335d:	push   ss
  42335e:	mov    ds:0x616712c7,eax
  423363:	xor    al,0x6
  423365:	cmp    al,0xdb
  423367:	add    DWORD PTR [ecx+ebp*1-0x417ad6d4],eax
  42336e:	not    BYTE PTR [edx+ecx*1-0x4e]
  423372:	sub    al,0x6a
  423374:	frstor [eax+edi*2-0x6277cd00]
  42337b:	inc    esi
  42337c:	sub    eax,0xb87278de
  423381:	and    ah,cl
  423383:	cdq    
  423384:	fld    st(7)
  423386:	jmp    0x4233d8
  423388:	imul   ebp,DWORD PTR [esi+0xa],0xb76f831b
  42338f:	or     eax,0xb8137320
  423394:	fcmovnu st,st(5)
  423396:	rol    al,0xb3
  423399:	add    DWORD PTR [edx+0x1fc9cd42],edx
  42339f:	dec    eax
  4233a0:	sbb    BYTE PTR [eax],ah
  4233a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233a3:	out    dx,eax
  4233a4:	outs   dx,BYTE PTR ds:[esi]
  4233a5:	lods   al,BYTE PTR gs:[esi]
  4233a7:	jno    0x42337b
  4233a9:	mov    al,ds:0x9e45cdda
  4233ae:	sbb    DWORD PTR [eax],edx
  4233b0:	cld    
  4233b1:	cwde   
  4233b2:	js     0x4233d0
  4233b4:	ja     0x4233ea
  4233b6:	leave  
  4233b7:	cdq    
  4233b8:	test   DWORD PTR [edi-0x63bf1a55],ebx
  4233be:	add    al,0xaf
  4233c0:	sahf   
  4233c1:	jbe    0x4233a7
  4233c3:	push   ecx
  4233c4:	mov    ax,0xe7e3
  4233c8:	lock repnz mov BYTE PTR [ecx+0x4c],0x71
  4233ce:	fiadd  WORD PTR [ebp-0x35]
  4233d1:	mov    bl,0x1
  4233d3:	aam    0x4f
  4233d5:	jecxz  0x4233b0
  4233d7:	xor    bh,al
  4233d9:	jb     0x4233b6
  4233db:	arpl   WORD PTR [ebx-0x220583d2],dx
  4233e1:	jp     0x423407
  4233e3:	inc    ebp
  4233e4:	sub    dl,BYTE PTR [ebp-0x5ac1c500]
  4233ea:	cmp    DWORD PTR [esi-0x7caef4d8],eax
  4233f0:	loop   0x423457
  4233f2:	inc    ebp
  4233f3:	mov    ds:0x39765603,al
  4233f8:	outs   dx,DWORD PTR ds:[esi]
  4233f9:	xchg   edi,eax
  4233fa:	cs cdq 
  4233fc:	mov    ah,0xbc
  4233fe:	(bad)  
  4233ff:	lahf   
  423400:	jmp    0x42342f
  423402:	scas   eax,DWORD PTR es:[edi]
  423403:	pop    esi
  423404:	mov    DWORD PTR [edx+0x41],esp
  423407:	jmp    0x4233c0
  423409:	dec    edi
  42340a:	cwde   
  42340b:	outs   dx,DWORD PTR ds:[esi]
  42340c:	ret    0x4a84
  42340f:	ds pop edi
  423411:	jp     0x42344e
  423413:	mov    edx,0xaf0ebe18
  423418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423419:	leave  
  42341a:	mov    ch,0x57
  42341c:	pop    edx
  42341d:	pop    es
  42341e:	jo     0x4233aa
  423420:	xchg   ecx,eax
  423421:	in     al,dx
  423422:	mov    DWORD PTR [edx],0x341047cf
  423428:	retf   0x93aa
  42342b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42342c:	sub    esp,ecx
  42342e:	sbb    eax,0xe452e910
  423433:	imul   ebp,DWORD PTR [edx+0x45],0x5
  423437:	in     eax,dx
  423438:	add    al,0x30
  42343a:	ficom  DWORD PTR [esi]
  42343c:	cli    
  42343d:	push   0xffffffbe
  42343f:	das    
  423440:	scas   al,BYTE PTR es:[edi]
  423441:	cmc    
  423442:	loopne 0x423408
  423444:	cmp    al,0xbb
  423446:	jmp    0xc3017b2c
  42344b:	(bad)  [eax]
  42344d:	inc    ecx
  42344e:	mov    ah,0x27
  423450:	xor    DWORD PTR [ecx],0x5d
  423453:	xchg   esi,eax
  423454:	mov    ah,0xf6
  423456:	sub    ecx,0xdb952d3c
  42345c:	xchg   ebx,eax
  42345d:	(bad)  
  42345e:	fstp   st(6)
  423460:	aad    0xc9
  423462:	outs   dx,DWORD PTR ds:[esi]
  423463:	cld    
  423464:	int3   
  423465:	retf   
  423466:	rol    DWORD PTR [ecx-0x6b76022a],cl
  42346c:	sbb    BYTE PTR [ebp-0x4492931c],0xbe
  423473:	imul   ecx,DWORD PTR [edi+0x5533824c],0x18
  42347a:	pushf  
  42347b:	adc    DWORD PTR [edi-0x4e75c436],esi
  423481:	push   esi
  423482:	mov    ah,BYTE PTR [ecx+0x231726e3]
  423488:	idiv   DWORD PTR [esi+0x23df0c9a]
  42348e:	std    
  42348f:	icebp  
  423490:	pop    ebx
  423491:	mov    WORD PTR ds:[ebx+0x5b75455c],?
  423498:	test   DWORD PTR [ebx-0x5acba54a],esi
  42349e:	retf   0xa2e5
  4234a1:	pop    ebx
  4234a2:	mov    BYTE PTR [edx+ebp*1-0x3040c268],al
  4234a9:	repz mov al,0xac
  4234ac:	inc    eax
  4234ad:	mov    dl,0x1a
  4234af:	cmp    al,0x53
  4234b1:	xor    esp,ebx
  4234b3:	sbb    edx,esp
  4234b5:	sub    cl,BYTE PTR [eax+0xc]
  4234b8:	out    dx,eax
  4234b9:	inc    edx
  4234ba:	sub    al,0x3a
  4234bc:	add    eax,0x7e0f7e53
  4234c1:	xchg   edx,eax
  4234c2:	dec    esi
  4234c3:	nop
  4234c4:	int3   
  4234c5:	or     DWORD PTR ds:0x32d2b45b,ecx
  4234cb:	sbb    al,0x4f
  4234cd:	cwde   
  4234ce:	or     edx,DWORD PTR [ebx+0x1d]
  4234d1:	mov    edi,0x773d16ac
  4234d6:	cwde   
  4234d7:	outs   dx,DWORD PTR ds:[esi]
  4234d8:	out    0x24,eax
  4234da:	repz xchg edx,eax
  4234dc:	xchg   ebx,eax
  4234dd:	pusha  
  4234de:	pop    esp
  4234df:	bound  esi,QWORD PTR [ebp-0x18]
  4234e2:	pop    esp
  4234e3:	and    eax,0x5142a63f
  4234e8:	ret    
  4234e9:	lods   al,BYTE PTR ds:[esi]
  4234ea:	mov    BYTE PTR [ebp-0x1322ca36],bh
  4234f0:	pop    esp
  4234f1:	add    DWORD PTR [esi],0x79
  4234f4:	pusha  
  4234f5:	rcr    BYTE PTR [edi+0x61],0xd7
  4234f9:	add    al,0xc6
  4234fb:	pop    ebp
  4234fc:	lds    edi,FWORD PTR [eax-0x59e49176]
  423502:	ficomp WORD PTR [eax-0x65]
  423505:	dec    ecx
  423506:	or     edx,DWORD PTR [ecx]
  423508:	inc    ebx
  423509:	test   DWORD PTR [esi-0x780c29d2],edx
  42350f:	cmc    
  423510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423511:	lods   eax,DWORD PTR ds:[esi]
  423512:	mov    dh,0x3d
  423514:	sahf   
  423515:	mov    ecx,0x4c2f2985
  42351a:	xchg   DWORD PTR [edx+ebp*1+0x7e],eax
  42351e:	mov    bl,BYTE PTR [ecx-0x3c4504b]
  423524:	push   cs
  423525:	jno    0x4234d0
  423527:	jns    0x423525
  423529:	in     al,0x12
  42352b:	(bad)  
  42352c:	(bad)
  42352f:	adc    BYTE PTR [edx+0x4d],al
  423532:	repnz inc ebp
  423534:	adc    ah,BYTE PTR [eax]
  423536:	adc    bl,BYTE PTR ds:0x2ed2d5b2
  42353c:	test   al,0x5f
  42353e:	enter  0xe468,0x4d
  423542:	mov    edx,0x3ef9a1e8
  423547:	leave  
  423548:	dec    esi
  423549:	and    BYTE PTR [ebx-0x34],cl
  42354c:	les    edi,FWORD PTR [eax-0x1cb48328]
  423552:	adc    BYTE PTR [ebx-0x3c5881de],bl
  423558:	loop   0x423528
  42355a:	jecxz  0x4234f4
  42355c:	test   DWORD PTR [edi-0x364c64ff],ebp
  423562:	neg    DWORD PTR [esi]
  423564:	and    DWORD PTR [ebp-0x7c],0x7c
  423568:	lods   eax,DWORD PTR ds:[esi]
  423569:	int3   
  42356a:	outs   dx,DWORD PTR ds:[esi]
  42356b:	fs pop esi
  42356d:	sub    eax,0xce9de4a5
  423572:	xor    BYTE PTR [edx],ah
  423574:	jno    0x4235ad
  423576:	mov    al,ds:0xf1b2dc9a
  42357b:	push   ecx
  42357c:	pop    edi
  42357d:	pop    esi
  42357e:	and    DWORD PTR [esp+ebx*4-0xa21eb1c],0x5b90b4cc
  423589:	(bad)  
  42358a:	nop
  42358b:	pop    esp
  42358c:	into   
  42358d:	imul   esp,DWORD PTR ds:0x5a2c615e,0xffffff8e
  423594:	xchg   esp,eax
  423595:	lahf   
  423596:	jp     0x423567
  423598:	xchg   esp,eax
  423599:	adc    BYTE PTR [esi-0x133fd484],bl
  42359f:	mov    dl,0xa
  4235a1:	mov    al,ds:0x59411d48
  4235a6:	jb     0x42353c
  4235a8:	xchg   DWORD PTR [ebp-0x3f247914],edx
  4235ae:	xor    eax,0x1dbf0749
  4235b3:	mov    dh,0x65
  4235b5:	or     edx,DWORD PTR [edi-0x7edf9a13]
  4235bb:	xor    DWORD PTR [esi-0x183075c4],esp
  4235c1:	inc    esp
  4235c2:	mov    BYTE PTR [edx],bl
  4235c4:	ret    
  4235c5:	sub    eax,0x6c8a6ce1
  4235ca:	jne    0x42360d
  4235cc:	stc    
  4235cd:	or     cl,BYTE PTR [esi+0x7074e7dd]
  4235d3:	jne    0x4235ca
  4235d5:	push   edi
  4235d6:	mov    cl,BYTE PTR [eax+ebx*2+0x7e]
  4235da:	je     0x423650
  4235dc:	ja     0x4235b7
  4235de:	and    edx,esp
  4235e0:	daa    
  4235e1:	lahf   
  4235e2:	jg     0x423630
  4235e4:	pop    es
  4235e5:	lods   al,BYTE PTR ds:[esi]
  4235e6:	das    
  4235e7:	es cld 
  4235e9:	iret   
  4235ea:	dec    esp
  4235eb:	(bad)  
  4235ec:	ficom  WORD PTR [ebx]
  4235ee:	cmc    
  4235ef:	out    0x0,eax
  4235f1:	popa   
  4235f2:	push   edx
  4235f3:	push   eax
  4235f4:	rcl    BYTE PTR [edi+0x4b],cl
  4235f7:	xor    ecx,DWORD PTR [esi-0x66f7a58f]
  4235fd:	sub    DWORD PTR [ecx],esi
  4235ff:	cmp    ebx,DWORD PTR [ebx]
  423601:	nop
  423602:	adc    BYTE PTR [ebp+0xf080a80],bh
  423608:	icebp  
  423609:	sahf   
  42360a:	push   eax
  42360b:	mov    dh,0x64
  42360d:	push   esp
  42360e:	cmp    al,BYTE PTR [ebp+0x5d5f9c37]
  423614:	mov    esp,0x7b709527
  423619:	xchg   ebp,eax
  42361a:	push   0xffffffde
  42361c:	out    dx,al
  42361d:	imul   eax,DWORD PTR [ebp-0x78],0x2d
  423621:	aam    0xdc
  423623:	stos   DWORD PTR es:[edi],eax
  423624:	lods   al,BYTE PTR ds:[esi]
  423625:	in     al,dx
  423626:	aam    0xe
  423628:	xor    al,0x66
  42362a:	cs cdq 
  42362c:	mov    bl,0xdd
  42362e:	push   ecx
  42362f:	mov    ds:0xb472d5de,al
  423634:	pop    esp
  423635:	js     0x42367a
  423637:	(bad)  
  423638:	outs   dx,BYTE PTR ds:[esi]
  423639:	mov    bl,0x4c
  42363b:	lods   eax,DWORD PTR ds:[esi]
  42363c:	rol    DWORD PTR [esi],cl
  42363e:	mov    ds:0xbb8971f1,eax
  423643:	bound  ebp,QWORD PTR [esi]
  423645:	jo     0x42368b
  423647:	es int3 
  423649:	adc    BYTE PTR [ebx+0x5a763834],bh
  42364f:	inc    esp
  423650:	aaa    
  423651:	adc    edi,DWORD PTR [esi-0x2bd89ea6]
  423657:	scas   eax,DWORD PTR es:[edi]
  423658:	mov    ch,dh
  42365a:	push   eax
  42365b:	pop    esi
  42365c:	cdq    
  42365d:	dec    edi
  42365e:	mov    gs,ebx
  423660:	adc    bl,BYTE PTR [edx]
  423662:	lea    edi,[ebp+0x659d612b]
  423668:	stos   DWORD PTR es:[edi],eax
  423669:	gs mov esi,0x807f41d0
  42366f:	out    0x83,al
  423671:	fimul  WORD PTR [esp-0x6b]
  423675:	sub    ecx,DWORD PTR ds:0xcc8f7e8b
  42367b:	cmp    ah,BYTE PTR [ecx+0x13bd6bdb]
  423681:	ja     0x4236bc
  423683:	cdq    
  423684:	stc    
  423685:	in     eax,0xf2
  423687:	dec    eax
  423688:	pop    ds
  423689:	shl    DWORD PTR ds:0x1c82c63e,cl
  42368f:	dec    ebp
  423690:	push   ebp
  423691:	cld    
  423692:	cmp    bl,ah
  423694:	cmp    eax,0x22dafb28
  423699:	retf   
  42369a:	push   edi
  42369b:	cmp    al,bl
  42369d:	shl    BYTE PTR [edi],1
  42369f:	cdq    
  4236a0:	test   BYTE PTR [ecx+0x6ab23a72],cl
  4236a6:	data16 neg BYTE PTR [ebp-0x5c]
  4236aa:	(bad)  
  4236ab:	jae    0x4236c1
  4236ad:	mov    esp,0xe7ee277f
  4236b2:	fadd   QWORD PTR [ebx+0x75]
  4236b5:	mov    ds:0x388dcf63,al
  4236ba:	pop    es
  4236bb:	dec    al
  4236bd:	nop
  4236be:	pop    edx
  4236bf:	and    eax,0x37b5a8e3
  4236c4:	xor    esp,DWORD PTR [edx]
  4236c6:	or     dl,BYTE PTR [edx+0x44]
  4236c9:	jne    0x42371a
  4236cb:	mov    edi,esi
  4236cd:	ret    
  4236ce:	mov    al,ds:0xeabc17ac
  4236d3:	cmp    al,0x98
  4236d5:	dec    eax
  4236d6:	ja     0x4236c6
  4236d8:	jle    0x423736
  4236da:	inc    edi
  4236db:	or     esi,esi
  4236dd:	mov    ?,esp
  4236df:	fnsave [eax-0x16]
  4236e2:	mov    BYTE PTR [edx],bh
  4236e4:	sub    DWORD PTR [eax+0x39],esp
  4236e7:	aad    0x3c
  4236e9:	mov    ds:0x4278864d,eax
  4236ee:	or     BYTE PTR [esi],ah
  4236f0:	mov    ebx,0x3ba81749
  4236f5:	cs lock mov edi,0x2338578b
  4236fc:	ror    BYTE PTR [eax],0xc2
  4236ff:	test   BYTE PTR [esi+0x4f95bc22],0xe9
  423706:	jns    0x423691
  423708:	lds    edi,FWORD PTR [ebx+0x38]
  42370b:	stc    
  42370c:	push   ebp
  42370d:	cmp    DWORD PTR [edi+ebx*4-0x47f853ed],ebx
  423714:	rcr    BYTE PTR [esi-0x1a],0x3f
  423718:	sub    edi,DWORD PTR [ebp-0x487c9f77]
  42371e:	pop    eax
  42371f:	inc    ebx
  423720:	mov    ah,0x98
  423722:	push   ebx
  423723:	mul    BYTE PTR [esi-0x4e]
  423726:	fdivr  QWORD PTR [ebx+0x2a9dbca7]
  42372c:	dec    ecx
  42372d:	loop   0x42372a
  42372f:	cmp    dl,dh
  423731:	push   es
  423732:	jbe    0x4236bd
  423734:	sti    
  423735:	sbb    al,0x8
  423737:	pushw  ds
  423739:	dec    eax
  42373a:	(bad)  
  42373b:	retf   
  42373c:	ins    DWORD PTR es:[edi],dx
  42373d:	mov    dl,0x33
  42373f:	or     eax,0x5cd4e03d
  423744:	lahf   
  423745:	mov    al,ds:0x6d27f26c
  42374a:	popa   
  42374b:	jb     0x423746
  42374d:	jmp    0x96de877a
  423752:	and    esi,DWORD PTR ds:0xf1e1c6d3
  423758:	ja     0x423750
  42375a:	cli    
  42375b:	data16 repnz cmp al,0x19
  42375f:	xchg   edi,eax
  423760:	test   BYTE PTR [edx-0x48],ah
  423763:	mov    ds:0x70b23ea2,al
  423768:	push   edi
  423769:	stos   DWORD PTR es:[edi],eax
  42376a:	and    BYTE PTR [ebx-0x48e98e77],ah
  423770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423771:	pop    ecx
  423772:	cdq    
  423773:	add    DWORD PTR [esi+0x7032132],eax
  423779:	stos   BYTE PTR es:[edi],al
  42377a:	sub    DWORD PTR [eax+ebx*4],esi
  42377d:	mov    WORD PTR [esi+0x31b08efa],?
  423783:	ins    BYTE PTR es:[edi],dx
  423784:	out    dx,al
  423785:	ret    0x71ee
  423788:	mov    bl,0x8
  42378a:	fnstenv [ebx+0x43ebe0a3]
  423790:	mov    esi,0xad92877e
  423795:	(bad)  
  423796:	jns    0x423747
  423798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423799:	dec    esp
  42379a:	jno    0x4237d7
  42379c:	adc    esp,0x6ac0b2c9
  4237a2:	rcl    BYTE PTR ds:0xf7626a97,1
  4237a8:	sub    eax,0xae638ca7
  4237ad:	pop    ds
  4237ae:	test   ebp,ebx
  4237b0:	sti    
  4237b1:	inc    edi
  4237b2:	test   edx,0xdf71ac2b
  4237b8:	or     dl,bh
  4237ba:	and    eax,0xbc49c33
  4237bf:	es push edx
  4237c1:	cs pop esi
  4237c3:	repnz int3 
  4237c5:	adc    bh,BYTE PTR [esi+0x7c]
  4237c8:	push   0x27
  4237ca:	and    DWORD PTR [ebp+0x63dbb37b],ecx
  4237d0:	mov    edi,0x7db5181d
  4237d5:	outs   dx,DWORD PTR ds:[esi]
  4237d6:	out    0x76,al
  4237d8:	xchg   edi,eax
  4237d9:	retf   0x3572
  4237dc:	mov    edx,0xd9c1d400
  4237e1:	add    eax,ecx
  4237e3:	fwait
  4237e4:	sub    al,0x54
  4237e6:	ins    DWORD PTR es:[edi],dx
  4237e7:	aaa    
  4237e8:	or     al,0xac
  4237ea:	push   0xfffffff0
  4237ec:	jmp    0x8313:0xab742ab1
  4237f3:	repz mov ebx,0x742ef0f2
  4237f9:	jge    0x423873
  4237fb:	xchg   ebp,eax
  4237fc:	cmp    al,0xed
  4237fe:	(bad)  
  4237ff:	mov    ebx,0xbe6f9c9d
  423804:	cmp    al,0x83
  423806:	mov    ds:0x5d284228,eax
  42380b:	jmp    0x4237af
  42380d:	outs   dx,DWORD PTR ds:[esi]
  42380e:	push   edx
  42380f:	hlt    
  423810:	shl    BYTE PTR [edi],0x7a
  423813:	xor    ch,bh
  423815:	dec    ebx
  423816:	inc    ebx
  423817:	xchg   esi,eax
  423818:	lds    edx,FWORD PTR [edi+0x7d8c69c1]
  42381e:	inc    edi
  42381f:	or     bh,0x67
  423822:	or     edx,ecx
  423824:	das    
  423825:	pop    esi
  423826:	pop    ebx
  423827:	lea    ebp,[edx-0x68a07d63]
  42382d:	jge    0x423859
  42382f:	inc    ecx
  423830:	jo     0x423816
  423832:	loop   0x423852
  423834:	mov    ds:0xc84a5041,al
  423839:	and    dh,BYTE PTR [edi-0x1b]
  42383c:	call   0x4874d362
  423841:	and    al,0x4b
  423843:	jl     0x4237de
  423845:	adc    BYTE PTR [esi+ebx*1],ch
  423848:	sar    BYTE PTR [edi-0x52a3a8a0],1
  42384e:	adc    eax,0x830ae1be
  423853:	xchg   edx,edi
  423855:	sbb    BYTE PTR [eax+0x2],ch
  423858:	in     al,dx
  423859:	push   ebp
  42385a:	or     al,0x2d
  42385c:	mov    ah,0xbc
  42385e:	mov    edi,edi
  423860:	(bad)  
  423861:	jbe    0x4238b2
  423863:	test   DWORD PTR [ecx+0x53318fd6],esp
  423869:	sti    
  42386a:	outs   dx,BYTE PTR ds:[esi]
  42386b:	sbb    eax,0x77671bd0
  423870:	inc    edi
  423871:	and    al,0x66
  423873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423874:	ret    
  423875:	mov    ss,WORD PTR [edx+0x7fdaccd6]
  42387b:	xor    al,0x16
  42387d:	enter  0xf4fa,0x90
  423881:	xchg   edx,eax
  423882:	sbb    eax,0xfa4bd8e2
  423887:	popa   
  423888:	or     edi,DWORD PTR gs:[esp+eax*4]
  42388c:	mov    ss,WORD PTR [ecx+edi*1-0xd]
  423890:	in     al,dx
  423891:	cmp    al,0x51
  423893:	aas    
  423894:	adc    edx,eax
  423896:	mov    ecx,0xad636df1
  42389b:	jle    0x423858
  42389d:	sub    BYTE PTR [ebp+0xb],0x4d
  4238a1:	fwait
  4238a2:	or     bl,0x80
  4238a5:	push   esp
  4238a6:	cmc    
  4238a7:	rcr    eax,cl
  4238a9:	xor    ebx,0x96500b75
  4238af:	adc    al,BYTE PTR [ebp-0x80]
  4238b2:	sub    BYTE PTR [edx+0xf],dh
  4238b5:	inc    ecx
  4238b6:	pop    edx
  4238b7:	jecxz  0x423901
  4238b9:	cmp    ecx,DWORD PTR [edi]
  4238bb:	sbb    al,0xcc
  4238bd:	pop    edx
  4238be:	fisttp QWORD PTR [edi+eiz*8+0xe2744d1]
  4238c5:	xor    BYTE PTR [esi],ch
  4238c7:	data16 fcom DWORD PTR [ecx-0x2819b538]
  4238ce:	ja     0x423887
  4238d0:	(bad)  
  4238d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238d2:	shl    DWORD PTR ds:[esi],cl
  4238d5:	xchg   DWORD PTR [esp+ecx*4],esp
  4238d8:	ds push ebp
  4238da:	das    
  4238db:	xchg   esp,eax
  4238dc:	cmc    
  4238dd:	and    DWORD PTR [esi],esi
  4238df:	fdiv   st(3),st
  4238e1:	fcmovb st,st(3)
  4238e3:	add    ecx,ecx
  4238e5:	arpl   WORD PTR [ebx-0x21],sp
  4238e8:	stc    
  4238e9:	mov    ebp,0xc5c085fa
  4238ee:	inc    edi
  4238ef:	das    
  4238f0:	cmp    BYTE PTR [esi-0x29],ah
  4238f3:	mov    ecx,0x704ac19e
  4238f8:	mov    bh,0x12
  4238fa:	inc    ecx
  4238fb:	or     ecx,DWORD PTR [eax]
  4238fd:	daa    
  4238fe:	push   ss
  4238ff:	adc    eax,0x5b365f3e
  423904:	cmp    edi,DWORD PTR [ebp+0x28174e5f]
  42390a:	xlat   BYTE PTR ds:[ebx]
  42390b:	je     0x42396f
  42390d:	or     ebx,DWORD PTR [ecx+esi*4]
  423910:	dec    eax
  423911:	cmp    eax,0xdddf9248
  423916:	inc    ecx
  423917:	fs dec edi
  423919:	enter  0xc46c,0x26
  42391d:	mov    ds:0xc0a65b15,al
  423922:	xor    cl,BYTE PTR [esi]
  423924:	push   cs
  423925:	push   esi
  423926:	neg    DWORD PTR [edi+0x7e1bd674]
  42392c:	mov    ebx,0xbf35803c
  423931:	out    0xa5,eax
  423933:	mov    ds:0xe3041b73,al
  423938:	(bad)  
  42393a:	jl     0x4239a6
  42393c:	mov    cl,0xb8
  42393e:	test   BYTE PTR [edi+0x5e587e73],dh
  423944:	sahf   
  423945:	xor    bh,ah
  423947:	fist   DWORD PTR [ecx]
  423949:	lahf   
  42394a:	fdiv   DWORD PTR [ecx]
  42394c:	inc    esp
  42394d:	push   edi
  42394e:	push   edx
  42394f:	pop    ebx
  423950:	and    al,BYTE PTR [edi+eax*8-0x69387338]
  423957:	int    0x16
  423959:	fwait
  42395a:	or     DWORD PTR [ebx-0x358e5bff],0xffffff86
  423961:	push   ds
  423962:	pop    ebx
  423963:	in     al,0x4d
  423965:	and    al,0x57
  423967:	lods   al,BYTE PTR ds:[esi]
  423968:	aas    
  423969:	or     bh,al
  42396b:	in     eax,dx
  42396c:	push   0x44e62a04
  423971:	jle    0x4239ad
  423973:	fimul  WORD PTR [ebp+ebx*8-0x7ceeecf1]
  42397a:	sub    bl,BYTE PTR [ebx-0x4db34d59]
  423980:	cwde   
  423981:	add    eax,0x86a5c425
  423986:	sar    BYTE PTR [edi+0x6ed27093],0x6a
  42398d:	scas   al,BYTE PTR es:[edi]
  42398e:	adc    ah,cl
  423990:	aam    0x7
  423992:	leave  
  423993:	jmp    0x42399c
  423995:	outs   dx,DWORD PTR ds:[esi]
  423996:	xchg   BYTE PTR [edx+0x19],dh
  423999:	xchg   DWORD PTR ds:0x7c0c2391,esi
  42399f:	mov    al,ds:0xb7710974
  4239a4:	pop    ss
  4239a5:	gs push esi
  4239a7:	aaa    
  4239a8:	xchg   edi,eax
  4239a9:	pop    eax
  4239aa:	test   eax,0x38e14bf9
  4239af:	(bad)  
  4239b0:	in     al,dx
  4239b1:	jmp    0x330:0xafb290e8
  4239b8:	or     eax,0xd94b7698
  4239bd:	or     eax,0xfc864d05
  4239c2:	mov    esp,0x548b9476
  4239c7:	cld    
  4239c8:	mov    cl,0x27
  4239ca:	dec    ecx
  4239cb:	outs   dx,BYTE PTR ds:[esi]
  4239cc:	pop    esp
  4239cd:	pop    ds
  4239ce:	pusha  
  4239cf:	fbstp  TBYTE PTR [eax+0x40920743]
  4239d5:	push   ecx
  4239d6:	dec    ebx
  4239d7:	jmp    0x4239cc
  4239d9:	push   eax
  4239da:	xchg   ecx,eax
  4239db:	jg     0x4239f3
  4239dd:	xchg   edi,eax
  4239de:	add    BYTE PTR [ebp+0x34],dl
  4239e1:	in     eax,dx
  4239e2:	stc    
  4239e3:	lods   eax,DWORD PTR ds:[esi]
  4239e4:	dec    ecx
  4239e5:	push   ecx
  4239e6:	adc    ah,BYTE PTR [eax-0x693d5614]
  4239ec:	aam    0x26
  4239ee:	fadd   QWORD PTR [esi]
  4239f0:	pop    ebp
  4239f1:	je     0x423a64
  4239f3:	dec    eax
  4239f4:	shl    DWORD PTR [ecx],1
  4239f6:	clc    
  4239f7:	mov    eax,ds:0x70cc9d68
  4239fc:	sar    DWORD PTR [edi],0x32
  4239ff:	push   ebp
  423a00:	(bad)
  423a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a05:	imul   eax,ebx,0x29605272
  423a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a0c:	add    cl,bh
  423a0e:	leave  
  423a0f:	xor    edi,ebx
  423a11:	jge    0x423a19
  423a13:	or     al,0xac
  423a15:	jg     0x423a2b
  423a17:	sub    eax,0x279996a9
  423a1c:	mov    ds:0x12419cd5,al
  423a21:	adc    DWORD PTR [ebp-0x14],esp
  423a24:	(bad)  [esi+0x5b92b805]
  423a2a:	idiv   DWORD PTR [edi]
  423a2c:	and    ebp,DWORD PTR [esi]
  423a2e:	sub    edx,DWORD PTR [esi]
  423a30:	imul   DWORD PTR [edx+edi*1-0x6fc801d4]
  423a37:	rcl    BYTE PTR [edx-0x3dbe8228],1
  423a3d:	push   esi
  423a3e:	sbb    al,0x7f
  423a40:	xchg   esp,eax
  423a41:	jg     0x423a27
  423a43:	push   0x62920afa
  423a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a49:	inc    esi
  423a4a:	and    cl,BYTE PTR fs:[ecx+0x3fb1b8c2]
  423a51:	rcl    BYTE PTR [edi+0x51d6d1c8],1
  423a57:	clc    
  423a58:	mov    BYTE PTR [edi+0xc],bh
  423a5b:	gs retf 
  423a5d:	mov    edi,0xd1ea0801
  423a62:	int    0x7a
  423a64:	ja     0x423aa0
  423a66:	shl    DWORD PTR [ebp-0x20],1
  423a69:	push   ss
  423a6a:	add    eax,0xcbc74149
  423a6f:	push   es
  423a70:	fcomp  DWORD PTR [eax-0x4bdfd4d9]
  423a76:	or     eax,0xd9800baf
  423a7b:	add    DWORD PTR [eax-0x4ccd4644],eax
  423a81:	ins    BYTE PTR es:[edi],dx
  423a82:	pop    eax
  423a83:	pop    esp
  423a84:	gs test eax,0x9893c390
  423a8a:	std    
  423a8b:	cdq    
  423a8c:	dec    esp
  423a8d:	or     ebp,DWORD PTR [edi-0x5a194b4b]
  423a93:	ret    0x8cb4
  423a96:	jae    0x423a1c
  423a98:	(bad)  
  423a99:	aam    0x7
  423a9b:	outs   dx,DWORD PTR ds:[esi]
  423a9c:	outs   dx,BYTE PTR ds:[esi]
  423a9d:	ret    
  423a9e:	ret    
  423a9f:	icebp  
  423aa0:	adc    bl,bl
  423aa2:	cdq    
  423aa3:	xlat   BYTE PTR ds:[ebx]
  423aa4:	xor    BYTE PTR [edx],dh
  423aa6:	stos   BYTE PTR es:[edi],al
  423aa7:	sbb    al,0x22
  423aa9:	xchg   edi,eax
  423aaa:	ins    BYTE PTR es:[edi],dx
  423aab:	pop    ss
  423aac:	adc    eax,DWORD PTR [esi+0x6e]
  423aaf:	inc    ebp
  423ab0:	(bad)  
  423ab1:	lock call 0x926c34b3
  423ab7:	mov    ecx,0xbe39f68d
  423abc:	int    0xbe
  423abe:	add    DWORD PTR [edx],esp
  423ac0:	ds mov ch,0xa
  423ac3:	xchg   ebx,eax
  423ac4:	push   esi
  423ac5:	or     eax,ebx
  423ac7:	mov    eax,0x6985f2dd
  423acc:	cli    
  423acd:	sbb    esi,DWORD PTR ds:[edx-0x52]
  423ad1:	jle    0x423a78
  423ad3:	sub    dl,BYTE PTR [ebp+0x30]
  423ad6:	aam    0xb1
  423ad8:	adc    dh,BYTE PTR [ebx-0x3d]
  423adb:	aas    
  423adc:	sar    DWORD PTR [esi],cl
  423ade:	mov    bh,0xb4
  423ae0:	es scas eax,DWORD PTR es:[edi]
  423ae2:	push   edx
  423ae3:	cmp    BYTE PTR [esi-0x56581863],dl
  423ae9:	sbb    BYTE PTR [edx],dl
  423aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423aec:	(bad)  
  423aed:	stos   BYTE PTR es:[edi],al
  423aee:	adc    al,0xda
  423af0:	add    eax,DWORD PTR [esi]
  423af2:	daa    
  423af3:	mov    dl,0xb6
  423af5:	out    0x3e,al
  423af7:	or     edx,DWORD PTR [ebx+0x7e]
  423afa:	in     eax,dx
  423afb:	fldenv [ecx]
  423afd:	sbb    esi,esi
  423aff:	mov    bh,0x6d
  423b01:	popf   
  423b02:	imul   esp,DWORD PTR [ebx-0x59],0x934c24f4
  423b09:	int    0xb2
  423b0b:	sub    bl,BYTE PTR es:[esi-0x39]
  423b0f:	fsub   st(0),st
  423b11:	aaa    
  423b12:	sub    ch,ah
  423b14:	clc    
  423b15:	rcr    BYTE PTR [edx],0xbb
  423b18:	mov    esp,0xfebb6e91
  423b1d:	xchg   esi,eax
  423b1e:	into   
  423b1f:	add    ebx,ebp
  423b21:	sbb    DWORD PTR [esi+0x63],eax
  423b24:	fst    DWORD PTR [edx-0x5b]
  423b27:	in     eax,dx
  423b28:	test   BYTE PTR [ebx+0x8],al
  423b2b:	push   esp
  423b2c:	sub    BYTE PTR [ecx-0x63726ae9],dh
  423b32:	mov    dl,0x81
  423b34:	(bad)  
  423b35:	stos   DWORD PTR es:[edi],eax
  423b36:	daa    
  423b37:	dec    esi
  423b38:	dec    esi
  423b39:	repz ret 
  423b3b:	retf   
  423b3c:	xor    BYTE PTR [ecx-0x4],dl
  423b3f:	aaa    
  423b40:	dec    edi
  423b41:	cmp    BYTE PTR [edx+0x6f53edb],dh
  423b47:	cdq    
  423b48:	stc    
  423b49:	out    0xa0,al
  423b4b:	cmp    eax,ebp
  423b4d:	push   edi
  423b4e:	fdiv   DWORD PTR [ebx+0x197e9a7c]
  423b54:	outs   dx,DWORD PTR ds:[esi]
  423b55:	cs push esp
  423b57:	stos   DWORD PTR es:[edi],eax
  423b58:	add    ebx,ebx
  423b5a:	sbb    DWORD PTR [ebx-0x28],ecx
  423b5d:	or     ah,BYTE PTR ds:0x8beaaa88
  423b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b64:	mov    edi,es
  423b66:	adc    al,0x55
  423b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b69:	ja     0x423b9f
  423b6b:	xchg   ebp,eax
  423b6c:	cmp    BYTE PTR [esi-0x5e19450b],ah
  423b72:	(bad)  
  423b73:	jnp    0x423b07
  423b75:	push   esi
  423b76:	dec    esi
  423b77:	lods   al,BYTE PTR ds:[esi]
  423b78:	dec    esi
  423b79:	ffreep st(7)
  423b7b:	(bad)  [ebp-0x51bbfcdb]
  423b81:	into   
  423b82:	sti    
  423b83:	add    eax,DWORD PTR [edi+0x1807f5fe]
  423b89:	pop    edi
  423b8a:	and    edi,DWORD PTR [edi]
  423b8c:	je     0x423b25
  423b8e:	add    DWORD PTR [esi+0x5fd7ecfb],0x4378ee32
  423b98:	dec    esp
  423b99:	mov    ch,0xe3
  423b9b:	sbb    al,0x81
  423b9d:	mov    esp,0x802dfb79
  423ba2:	inc    eax
  423ba3:	dec    edi
  423ba4:	add    eax,DWORD PTR [esi]
  423ba6:	int    0xca
  423ba8:	cs hlt 
  423baa:	mov    ch,ah
  423bac:	cli    
  423bad:	push   0xafcb9f39
  423bb2:	jg     0x423bca
  423bb4:	fisttp WORD PTR [esi+0x3c]
  423bb7:	lock loopne 0x423bea
  423bba:	mov    esi,0x7d6ccf38
  423bbf:	push   ecx
  423bc0:	mov    bl,0x42
  423bc2:	pop    esp
  423bc3:	pop    ds
  423bc4:	daa    
  423bc5:	mov    al,0x5d
  423bc7:	outs   dx,DWORD PTR ds:[esi]
  423bc8:	mov    al,0xe4
  423bca:	push   ss
  423bcb:	pop    ebp
  423bcc:	cld    
  423bcd:	pop    ebp
  423bce:	jns    0x423b6d
  423bd0:	mov    dl,0x3f
  423bd2:	and    esi,0xa767c058
  423bd8:	imul   BYTE PTR [ebp+ebx*2-0x54]
  423bdc:	mov    eax,0x72e75116
  423be1:	fld    DWORD PTR [ebx-0x1c986b9e]
  423be7:	and    al,0x6a
  423be9:	aas    
  423bea:	stos   DWORD PTR es:[edi],eax
  423beb:	lea    ecx,[edi+0xfdf5bfe]
  423bf1:	xchg   ebx,eax
  423bf2:	popa   
  423bf3:	sub    ch,BYTE PTR [ebx]
  423bf5:	mov    bh,0xae
  423bf7:	(bad)  
  423bf8:	pop    ebp
  423bf9:	mov    dl,0x79
  423bfb:	and    eax,0x24821a7
  423c00:	xchg   ebx,eax
  423c01:	or     edi,DWORD PTR [edx]
  423c03:	dec    esi
  423c04:	lahf   
  423c05:	imul   eax,DWORD PTR [bx+0x27],0x49
  423c0a:	ss aam 0x38
  423c0d:	cwde   
  423c0e:	adc    DWORD PTR [eax],0x77
  423c11:	test   BYTE PTR ds:0xf700a4fd,dh
  423c17:	fucomp st(5)
  423c19:	imul   edi,DWORD PTR [edx+0x423f60e4],0x8912db33
  423c23:	sbb    DWORD PTR [ebx],ecx
  423c25:	cmp    eax,ebp
  423c27:	sub    eax,DWORD PTR [edi]
  423c29:	xchg   ebx,eax
  423c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c2b:	inc    edi
  423c2c:	inc    ecx
  423c2d:	pop    eax
  423c2e:	mov    esi,0x3d78326f
  423c33:	shr    BYTE PTR [edi+0x506bdbd5],cl
  423c39:	inc    edi
  423c3a:	push   ebp
  423c3b:	jge    0x423c48
  423c3d:	jae    0x423c1d
  423c3f:	cmc    
  423c40:	inc    esp
  423c41:	jnp    0x423c2d
  423c43:	pop    ebp
  423c44:	or     al,0xc0
  423c46:	call   0x6854e60b
  423c4b:	mov    esi,0xd43af3c7
  423c50:	cmp    DWORD PTR [ecx+0x26],esp
  423c53:	pushf  
  423c54:	lods   eax,DWORD PTR ds:[esi]
  423c55:	(bad)  
  423c56:	dec    ebp
  423c57:	test   ebx,eax
  423c59:	sbb    eax,DWORD PTR [edx]
  423c5b:	or     esi,ebx
  423c5d:	mov    bh,0xc5
  423c5f:	sbb    eax,0xe5c5f7d3
  423c64:	adc    al,0xd
  423c66:	out    dx,eax
  423c67:	(bad)  
  423c68:	rep lods eax,DWORD PTR ds:[esi]
  423c6a:	out    0x1f,al
  423c6c:	xchg   ebx,eax
  423c6d:	(bad)  
  423c6f:	mov    ds:0x490921da,al
  423c74:	push   0xd43a3958
  423c79:	cmp    ebx,esi
  423c7b:	push   ss
  423c7c:	in     al,dx
  423c7d:	out    0xf9,eax
  423c7f:	pushf  
  423c80:	xchg   bl,bl
  423c82:	mov    edi,0x188a9e7e
  423c87:	popa   
  423c88:	pop    edx
  423c89:	cmp    al,0x2b
  423c8b:	rol    esi,1
  423c8d:	mov    ebp,0x6f5bf332
  423c92:	call   0x8bdf528d
  423c97:	sub    BYTE PTR [ebp+0x54454ebc],al
  423c9d:	fs or  eax,0x3cb176c9
  423ca3:	inc    eax
  423ca4:	call   0x9f64754a
  423ca9:	cmc    
  423caa:	adc    al,0xc4
  423cac:	hlt    
  423cad:	mov    dh,0x38
  423caf:	pop    esp
  423cb0:	sti    
  423cb1:	mov    edi,0x2e44c1b5
  423cb6:	lods   eax,DWORD PTR ds:[esi]
  423cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cb8:	jo     0x423c6c
  423cba:	jecxz  0x423c63
  423cbc:	scas   eax,DWORD PTR es:[edi]
  423cbd:	into   
  423cbe:	je     0x423d15
  423cc0:	jnp    0x423cd8
  423cc2:	push   ss
  423cc3:	out    0xf6,al
  423cc5:	gs push edi
  423cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cc8:	push   esi
  423cc9:	enter  0xac65,0x5a
  423ccd:	push   0x9
  423ccf:	jg     0x423cc4
  423cd1:	and    BYTE PTR [ebp-0x66263ffe],ch
  423cd7:	mov    gs,eax
  423cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cda:	ins    BYTE PTR es:[edi],dx
  423cdb:	jns    0x423c88
  423cdd:	jg     0x423c69
  423cdf:	jg     0x423c6b
  423ce1:	pusha  
  423ce2:	test   BYTE PTR [ecx*1+0x35e320c9],0xef
  423cea:	push   esp
  423ceb:	psubsb mm3,QWORD PTR [edx+ecx*1+0x23]
  423cf0:	jae    0x423d6f
  423cf2:	inc    eax
  423cf3:	in     al,dx
  423cf4:	lea    esi,[ecx]
  423cf6:	mov    eax,ds:0xf0e1082c
  423cfb:	jne    0x423d07
  423cfd:	mov    edx,0x5b615f0a
  423d02:	addr16 pop esp
  423d04:	pop    edi
  423d05:	call   FWORD PTR [eax]
  423d07:	or     edx,DWORD PTR [eax+0x3733f13b]
  423d0d:	jnp    0x423cfe
  423d0f:	adc    esp,ebx
  423d11:	add    edx,DWORD PTR [edx]
  423d13:	addr16 mov al,0x83
  423d16:	and    BYTE PTR [ebx],dh
  423d18:	mov    WORD PTR ds:0xeea8854f,es
  423d1e:	test   DWORD PTR [ebx-0x31],0x35c0f937
  423d25:	pop    ebx
  423d26:	je     0x423d6d
  423d28:	jmp    0x9951:0x8d6f8675
  423d2f:	pop    ss
  423d30:	les    ecx,FWORD PTR [esi]
  423d32:	ins    DWORD PTR es:[edi],dx
  423d33:	pop    edx
  423d34:	fmul   st,st(0)
  423d36:	xor    cl,BYTE PTR [ecx]
  423d38:	dec    edx
  423d39:	stos   BYTE PTR es:[edi],al
  423d3a:	sub    ebp,DWORD PTR [eax+eiz*8-0x5b0e967]
  423d41:	dec    eax
  423d42:	outs   dx,BYTE PTR ds:[esi]
  423d43:	dec    ebx
  423d44:	xchg   esi,eax
  423d45:	sahf   
  423d46:	push   edi
  423d47:	fst    DWORD PTR [esi+0x1497bab1]
  423d4d:	icebp  
  423d4e:	int3   
  423d4f:	jecxz  0x423dcd
  423d51:	scas   eax,DWORD PTR es:[edi]
  423d52:	lods   al,BYTE PTR ds:[esi]
  423d53:	mov    ebp,0x6e027a90
  423d58:	inc    ecx
  423d59:	retf   0x6108
  423d5c:	data16 jg 0x423d16
  423d5f:	sbb    edi,DWORD PTR [edi+0x5fa2d71f]
  423d65:	lahf   
  423d66:	ret    
  423d67:	sbb    bl,BYTE PTR [ecx+ebp*8]
  423d6a:	cli    
  423d6b:	pop    es
  423d6c:	or     ecx,DWORD PTR [ecx-0x6]
  423d6f:	repnz adc bl,BYTE PTR [esi+0x6151b310]
  423d76:	lds    eax,FWORD PTR [eax+0x751da21b]
  423d7c:	stos   BYTE PTR es:[edi],al
  423d7d:	cld    
  423d7e:	ins    BYTE PTR es:[edi],dx
  423d7f:	leave  
  423d80:	(bad)  
  423d81:	jns    0x423d5c
  423d83:	shr    DWORD PTR [esi],1
  423d85:	push   es
  423d86:	jp     0x423d17
  423d88:	shl    DWORD PTR [ebx],cl
  423d8a:	xchg   esi,eax
  423d8b:	call   0xf83471cb
  423d90:	ror    BYTE PTR [edi+0x767e89dc],1
  423d96:	dec    edx
  423d97:	fisubr DWORD PTR [esi+0x490459ab]
  423d9d:	cmp    ebp,edx
  423d9f:	xchg   ebx,eax
  423da0:	js     0x423e1a
  423da2:	add    dl,BYTE PTR [ebx+0x51]
  423da5:	aam    0xbf
  423da7:	cmp    edi,0xc2182633
  423dad:	xchg   edi,eax
  423dae:	addr16 icebp 
  423db0:	mov    ch,0xb2
  423db2:	imul   ebp
  423db4:	push   0x45153387
  423db9:	xchg   edi,eax
  423dba:	fadd   st,st(6)
  423dbc:	gs jmp 0x423d81
  423dbf:	stc    
  423dc0:	cdq    
  423dc1:	dec    ecx
  423dc2:	pop    esi
  423dc3:	in     al,0x49
  423dc5:	adc    DWORD PTR [ebp-0x1211e406],0x318be31a
  423dcf:	repnz fadd DWORD PTR [edi]
  423dd2:	(bad)  
  423dd3:	cdq    
  423dd4:	in     al,0x57
  423dd6:	test   BYTE PTR [edx-0x22],dl
  423dd9:	(bad)  
  423dda:	jns    0x423dcf
  423ddc:	mov    eax,0x25851f16
  423de1:	ja     0x423e01
  423de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423de4:	(bad)  
  423de6:	push   ecx
  423de7:	out    dx,al
  423de8:	mov    ecx,0x9ba86a1
  423ded:	sbb    ch,BYTE PTR [ebp-0x75]
  423df0:	and    ecx,DWORD PTR [esi+0x26f0e3b3]
  423df6:	and    BYTE PTR [eax],bl
  423df8:	mov    DWORD PTR [ebx+0x4a],esp
  423dfb:	xchg   dh,cl
  423dfd:	xor    DWORD PTR [edx+esi*4],0xe54065e2
  423e04:	gs scas al,BYTE PTR es:[edi]
  423e06:	xchg   edx,eax
  423e07:	jmp    0xc5cf:0x2eba9bd0
  423e0e:	sar    DWORD PTR [edi+0x54],cl
  423e11:	cdq    
  423e12:	cld    
  423e13:	aas    
  423e14:	sahf   
  423e15:	xor    ebx,DWORD PTR [ebx]
  423e17:	mov    esp,0x780bfef4
  423e1c:	dec    ebp
  423e1d:	or     DWORD PTR [edi],esp
  423e1f:	inc    esp
  423e20:	hlt    
  423e21:	sub    eax,0x677b0761
  423e26:	pop    es
  423e27:	mov    ds:0xedc3b9d9,al
  423e2c:	xchg   ebx,eax
  423e2d:	push   es
  423e2e:	aam    0xa6
  423e30:	pop    DWORD PTR [ebx]
  423e32:	addr16 mov eax,ds:0x2add
  423e36:	cmp    eax,0xf37d83f0
  423e3b:	adc    ah,BYTE PTR [edi+0x76]
  423e3e:	das    
  423e3f:	add    BYTE PTR [edi-0x4],cl
  423e42:	mov    ebx,0x2fd697bd
  423e47:	imul   ebp,DWORD PTR [ebx+0x49],0xffffffa1
  423e4b:	push   ebp
  423e4c:	cli    
  423e4d:	xor    BYTE PTR [ecx+0x5c],bh
  423e50:	xchg   esi,eax
  423e51:	push   esp
  423e52:	call   0x7f78:0xfa81eb51
  423e59:	ret    0x4009
  423e5c:	mov    esp,0xe2293850
  423e61:	sbb    DWORD PTR [edi+0x25a48a07],edx
  423e67:	jge    0x423e95
  423e69:	mov    ebp,0x68fd7f5d
  423e6e:	rol    esp,0xea
  423e71:	push   ss
  423e72:	icebp  
  423e73:	aas    
  423e74:	sbb    DWORD PTR [ecx-0x75a9cc18],0x3b730f0f
  423e7e:	ins    BYTE PTR es:[edi],dx
  423e7f:	inc    ecx
  423e80:	inc    ecx
  423e81:	test   eax,0x581787a4
  423e86:	xchg   ebx,eax
  423e87:	aaa    
  423e88:	push   esp
  423e89:	inc    esp
  423e8a:	xchg   ebx,eax
  423e8b:	add    DWORD PTR [edx-0x5dac65fc],esi
  423e91:	loope  0x423e59
  423e93:	push   edx
  423e94:	fild   QWORD PTR fs:[esi+0x25]
  423e98:	pop    ds
  423e99:	lea    edx,[ecx-0x41]
  423e9c:	and    DWORD PTR [ecx+0x49],edx
  423e9f:	cmp    eax,0x4a6c3df2
  423ea4:	mov    ds,edx
  423ea6:	pop    DWORD PTR [edx-0x5c]
  423ea9:	out    0xb1,ax
  423eac:	pop    ebx
  423ead:	mov    DWORD PTR [ebx-0x7a1759a3],ebx
  423eb3:	popa   
  423eb4:	sbb    eax,0x25bb1c0c
  423eb9:	pusha  
  423eba:	imul   eax,DWORD PTR ds:0x8b7a9ff1,0x74
  423ec1:	ja     0x423ecb
  423ec3:	push   es
  423ec4:	(bad)  
  423ec5:	cli    
  423ec6:	and    eax,DWORD PTR [edx-0x63]
  423ec9:	call   0x4f027ccb
  423ece:	push   edi
  423ecf:	dec    esp
  423ed0:	test   al,0x89
  423ed2:	pop    ecx
  423ed3:	push   DWORD PTR [ebx]
  423ed5:	call   0xce1df89e
  423eda:	shl    BYTE PTR [edi+0x68262311],1
  423ee0:	cwde   
  423ee1:	fwait
  423ee2:	daa    
  423ee3:	inc    edi
  423ee4:	(bad)  
  423ee5:	push   edi
  423ee6:	rol    DWORD PTR [edi+edx*2],1
  423ee9:	xor    dl,BYTE PTR [ebx]
  423eeb:	aas    
  423eec:	mov    BYTE PTR ds:0x2803b00a,bh
  423ef2:	data16 adc BYTE PTR [eax+0x71],bl
  423ef6:	rcr    DWORD PTR [esi-0x1bada586],0xfc
  423efd:	js     0x423f2b
  423eff:	jmp    0x423f15
  423f01:	jmp    0x423ef7
  423f03:	mov    dl,0xb4
  423f05:	cmp    al,0xbe
  423f07:	mov    DWORD PTR [eax+0x34],ebp
  423f0a:	ja     0x423f02
  423f0c:	neg    DWORD PTR [edi-0x48]
  423f0f:	xchg   ebx,eax
  423f10:	cwde   
  423f11:	test   BYTE PTR [ecx],bh
  423f13:	add    eax,DWORD PTR [esi]
  423f15:	das    
  423f16:	cmovo  ebp,DWORD PTR [edx+0x54100a78]
  423f1d:	ror    BYTE PTR [eiz*8+0x1b7d1881],0xd6
  423f25:	fcmovne st,st(2)
  423f27:	aam    0x16
  423f29:	retf   
  423f2a:	mov    eax,ds:0x7da836a4
  423f2f:	stos   BYTE PTR es:[edi],al
  423f30:	mov    ebp,0xee58e63
  423f35:	in     al,0x4d
  423f37:	and    al,0x26
  423f39:	inc    eax
  423f3a:	pop    ebx
  423f3b:	add    eax,DWORD PTR [esi-0x1d]
  423f3e:	mov    cs,WORD PTR [esi]
  423f40:	cmp    DWORD PTR [ebx],eax
  423f42:	(bad)  
  423f43:	xor    al,0x4a
  423f45:	(bad)  
  423f46:	loopne 0x423ed4
  423f48:	dec    ebp
  423f49:	in     al,dx
  423f4a:	add    DWORD PTR [ecx+ecx*2],0xffffff9a
  423f4e:	pushf  
  423f4f:	and    DWORD PTR [eax+0x4f],ebp
  423f52:	jbe    0x423f83
  423f54:	std    
  423f55:	lods   eax,DWORD PTR ds:[esi]
  423f56:	mov    BYTE PTR [edi-0x57],dh
  423f59:	jecxz  0x423f78
  423f5b:	mov    edi,ebx
  423f5d:	dec    ecx
  423f5e:	sar    DWORD PTR [eax+0x7c],cl
  423f61:	int    0xd6
  423f63:	sbb    esi,DWORD PTR [ecx+0x23]
  423f66:	lea    esi,[ebx]
  423f68:	mov    eax,0xd7af4de2
  423f6d:	push   edx
  423f6e:	(bad)  
  423f6f:	mov    al,ds:0x7e50723e
  423f74:	push   0xca4548de
  423f79:	lock xor DWORD PTR [eax-0x51],ebx
  423f7d:	test   DWORD PTR [edi-0x1f],ebx
  423f80:	loope  0x423f62
  423f82:	dec    edi
  423f83:	test   DWORD PTR [edi-0x13],ebp
  423f86:	fnstsw WORD PTR [ebx]
  423f88:	into   
  423f89:	mov    edi,0xff26a759
  423f8e:	push   0xffffffc7
  423f90:	or     edi,esi
  423f92:	dec    ebp
  423f93:	pop    ebx
  423f94:	jecxz  0x423f29
  423f96:	sub    bl,ch
  423f98:	inc    ebp
  423f99:	jecxz  0x423feb
  423f9b:	call   0xec5f:0x85f4372b
  423fa2:	jl     0x42400f
  423fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fa5:	and    ebx,ebx
  423fa7:	ret    0x86cf
  423faa:	sub    DWORD PTR [eax],edi
  423fac:	pop    ss
  423fad:	or     bl,BYTE PTR [eax-0x3d]
  423fb0:	ja     0x423fdb
  423fb2:	loopne 0x423f78
  423fb4:	jnp    0x424001
  423fb6:	or     edx,DWORD PTR [edi-0x1012a3b]
  423fbc:	loopne 0x423fdd
  423fbe:	cld    
  423fbf:	mov    eax,0x3bbadaf9
  423fc4:	mov    al,dh
  423fc6:	jp     0x424038
  423fc8:	inc    ecx
  423fc9:	js     0x424037
  423fcb:	mov    DWORD PTR [eax+ebx*2],edi
  423fce:	inc    ebx
  423fcf:	or     eax,0x5f67f538
  423fd4:	enter  0x203d,0xe2
  423fd8:	push   ebx
  423fd9:	mov    eax,esp
  423fdb:	adc    WORD PTR [ecx+0x40],0xffc0
  423fe0:	add    al,BYTE PTR [edi-0x50b4df6d]
  423fe6:	cmp    eax,0xc95ff2a0
  423feb:	jmp    0xd336d723
  423ff0:	shl    BYTE PTR [edi],0x86
  423ff3:	xor    BYTE PTR [ebx],cl
  423ff5:	and    BYTE PTR [eax+0x44fee0ff],al
  423ffb:	adc    ah,dl
  423ffd:	mov    ecx,0x4e0c86cc
  424002:	dec    edx
  424003:	pushf  
  424004:	add    DWORD PTR [ebp+0x192be311],ebp
  42400a:	jne    0x423fdc
  42400c:	test   eax,0x536c8cd3
  424011:	push   ecx
  424012:	hlt    
  424013:	inc    edi
  424014:	xor    DWORD PTR [esp+edx*1+0x68],eax
  424018:	sbb    al,0x23
  42401a:	xlat   BYTE PTR ds:[ebx]
  42401b:	mov    gs,WORD PTR [edi-0x18bb7730]
  424021:	cmp    DWORD PTR [ebx+0x43722c91],ebx
  424027:	and    al,0xee
  424029:	imul   ecx,DWORD PTR [ecx+0xa9cab75],0x8b44b418
  424033:	shl    DWORD PTR [ecx+0x71],0x61
  424037:	ins    DWORD PTR es:[edi],dx
  424038:	mov    ds:0xb68353b9,eax
  42403d:	cs inc ecx
  42403f:	jno    0x423fc6
  424041:	jle    0x424092
  424043:	imul   edx,DWORD PTR [ebp-0x3a],0xc9c969e3
  42404a:	fild   QWORD PTR [esi+0x6e]
  42404d:	data16 fsubrp st(6),st
  424050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424051:	fstp   QWORD PTR [edx+edi*1+0x1b7ea728]
  424058:	pop    esi
  424059:	gs (bad) 
  42405b:	into   
  42405c:	daa    
  42405d:	xchg   esi,eax
  42405e:	aaa    
  42405f:	cld    
  424060:	sbb    DWORD PTR [edi-0x20cc6f48],ebp
  424066:	xor    BYTE PTR ds:0xaef22838,ch
  42406c:	cmc    
  42406d:	dec    ebx
  42406e:	ret    0xb2ed
  424071:	lock dec edx
  424073:	and    DWORD PTR [ecx-0x4e],0xad1a5150
  42407a:	push   edx
  42407b:	mov    cl,0xb1
  42407d:	or     ah,ah
  42407f:	sar    BYTE PTR [esi],cl
  424081:	test   al,0x28
  424083:	iret   
  424084:	xlat   BYTE PTR ds:[ebx]
  424085:	cmp    DWORD PTR [ebx+0x6e58dd92],ebp
  42408b:	sti    
  42408c:	xchg   BYTE PTR [eax+0x4003e335],bl
  424092:	xlat   BYTE PTR ds:[ebx]
  424093:	mov    ds:0xa53693b7,eax
  424098:	xor    DWORD PTR [eax],esp
  42409a:	push   edx
  42409b:	lock pop edi
  42409d:	xchg   edi,eax
  42409e:	fcmovne st,st(5)
  4240a0:	push   0x604a87d
  4240a5:	test   eax,0x1019f1bc
  4240aa:	aam    0x5c
  4240ac:	in     eax,dx
  4240ad:	rcr    edx,cl
  4240af:	rol    BYTE PTR [ebx+0x40],cl
  4240b2:	aas    
  4240b3:	cmp    BYTE PTR [edi-0x46768495],ch
  4240b9:	out    0xe3,al
  4240bb:	cmp    eax,0x882866a3
  4240c0:	psubusw mm6,QWORD PTR [eax+ebx*8-0x5a]
  4240c5:	and    ah,dl
  4240c7:	fnstcw WORD PTR [eax+0x8]
  4240ca:	dec    edx
  4240cb:	dec    ecx
  4240cc:	xchg   esi,eax
  4240cd:	lods   eax,DWORD PTR ds:[esi]
  4240ce:	xor    cl,ch
  4240d0:	cmp    eax,0xe2fb5548
  4240d5:	adc    al,0x7f
  4240d7:	es jo  0x42408a
  4240da:	jne    0x424136
  4240dc:	cld    
  4240dd:	sub    al,0xd3
  4240df:	push   edi
  4240e0:	mov    edx,0x87c9534a
  4240e5:	icebp  
  4240e6:	mov    bh,0xce
  4240e8:	nop
  4240e9:	jns    0x4240f8
  4240eb:	jno    0x424150
  4240ed:	icebp  
  4240ee:	popa   
  4240ef:	jmp    0x27937af8
  4240f4:	arpl   WORD PTR [edx-0x29b0dfb1],bx
  4240fa:	inc    edi
  4240fb:	and    BYTE PTR [edi+0x57],dh
  4240fe:	cmp    al,0x30
  424100:	add    BYTE PTR ds:0xfb40c87,0xb6
  424107:	dec    ebp
  424108:	and    edi,DWORD PTR [esi+esi*2-0x74]
  42410c:	aas    
  42410d:	inc    eax
  42410e:	lods   al,BYTE PTR ds:[esi]
  42410f:	(bad)
  424113:	pop    ds
  424114:	mov    al,0xcf
  424116:	mov    ?,WORD PTR [eax]
  424118:	into   
  424119:	push   0x50
  42411b:	arpl   WORD PTR [ecx-0x72ec26f9],bp
  424121:	add    al,0x7a
  424123:	dec    ecx
  424124:	ss loop 0x424120
  424127:	push   edx
  424128:	std    
  424129:	imul   eax,DWORD PTR [ebp-0x1b],0x78
  42412d:	cmp    al,0xed
  42412f:	fwait
  424130:	mov    es,WORD PTR [ebx-0x35896a0c]
  424136:	jmp    0xec2:0xfa403125
  42413d:	mov    dh,0x1f
  42413f:	pop    edi
  424140:	ret    
  424141:	mov    edi,DWORD PTR [eax+edi*4-0x7a5d4743]
  424148:	pushf  
  424149:	clc    
  42414a:	pop    ebx
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a757
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a75f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a763
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x42a00f
  4242e2:	mov    ecx,DWORD PTR ds:0x42a017
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a767
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429ffb
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	fisub  WORD PTR [ecx-0x32]
  424457:	add    bl,al
  424459:	test   DWORD PTR [eax+0x45],eax
  42445c:	xchg   ecx,eax
  42445d:	daa    
  42445e:	mov    ?,WORD PTR ds:0x52fc5bf9
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
